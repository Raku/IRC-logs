[00:17] *** aborazmeh joined
[00:17] *** aborazmeh left
[00:17] *** aborazmeh joined
[00:21] *** ngoomie left
[00:24] *** holli__ left
[01:24] *** coverable6 left
[01:24] *** notable6 left
[01:24] *** unicodable6 left
[01:24] *** releasable6 left
[01:24] *** greppable6 left
[01:24] *** sourceable6 left
[01:24] *** committable6 left
[01:24] *** nativecallable6 left
[01:24] *** squashable6 left
[01:24] *** bisectable6 left
[01:24] *** statisfiable6 left
[01:24] *** quotable6 left
[01:24] *** tellable6 left
[01:24] *** bloatable6 left
[01:24] *** shareable6 left
[01:24] *** evalable6 left
[01:24] *** benchable6 left
[01:24] *** linkable6 left
[01:24] *** benchable6 joined
[01:25] *** notable6 joined
[01:25] *** linkable6 joined
[01:25] *** nativecallable6 joined
[01:25] *** releasable6 joined
[01:25] *** evalable6 joined
[01:25] *** shareable6 joined
[01:25] *** coverable6 joined
[01:25] *** squashable6 joined
[01:25] *** bloatable6 joined
[01:26] *** quotable6 joined
[01:26] *** unicodable6 joined
[01:26] *** committable6 joined
[01:26] *** statisfiable6 joined
[01:27] *** greppable6 joined
[01:27] *** hungrydonkey joined
[01:27] *** sourceable6 joined
[01:27] *** tellable6 joined
[01:27] *** bisectable6 joined
[01:28] *** hungryd46 joined
[01:28] *** hungrydonkey left
[01:31] *** hungryd46 left
[01:31] *** hungrydonkey joined
[01:33] *** hungryd1 joined
[01:33] *** hungrydonkey left
[01:44] *** hungryd1 left
[01:49] *** epony left
[02:00] *** molaf left
[02:12] *** molaf joined
[02:13] *** vrurg joined
[02:35] *** gnufr33dom joined
[02:49] *** gnufr33dom left
[02:51] *** gnufr33dom joined
[02:55] *** zacts joined
[03:19] *** gnufr33dom left
[03:29] *** zacts left
[03:37] *** epony joined
[04:02] *** xelxebar left
[04:02] *** xelxebar joined
[04:02] *** zacts joined
[04:16] *** nige left
[04:16] *** nige joined
[04:41] *** zacts left
[04:50] *** holli__ joined
[05:12] *** jmerelo joined
[05:44] *** zacts joined
[05:51] *** wamba joined
[05:57] *** eseyman left
[06:01] *** eseyman joined
[06:19] *** zacts left
[06:48] *** andrzejku joined
[06:57] *** domidumont joined
[07:12] *** Altai-man joined
[07:19] *** abraxxa joined
[07:20] *** robinsmidsrod left
[07:21] *** robinsmidsrod joined
[07:23] *** abraxxa left
[07:24] *** abraxxa joined
[07:30] *** Sgeo left
[07:39] *** domidumont left
[07:41] *** rindolf joined
[07:42] *** domidumont joined
[07:59] *** dakkar joined
[08:22] *** leont joined
[08:34] *** wamba left
[08:35] *** wamba joined
[08:41] *** jmerelo left
[08:41] *** jmerelo joined
[08:43] *** vrurg left
[08:43] *** nige left
[08:43] *** spacebat2 left
[08:44] *** spacebat2 joined
[08:44] *** frot-lab joined
[08:44] *** nige joined
[08:47] *** vrurg joined
[08:56] <Geth> ¦ doc: jjatria++ created pull request #3660: Fix output for proto example

[08:56] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3660

[09:02] *** aluaces left
[09:05] *** xinming left
[09:07] *** xinming joined
[09:22] *** wamba left
[09:27] *** sarna joined
[09:27] *** cpan-raku left
[09:28] *** cpan-raku joined
[09:28] *** cpan-raku left
[09:28] *** cpan-raku joined
[09:31] *** xinming left
[09:31] *** xinming joined
[09:37] <Geth> ¦ doc: 72cee90083 | (José Joaquín Atria)++ (committed by Juan Julián Merelo Guervós) | doc/Language/functions.pod6

[09:37] <Geth> ¦ doc: Fix output for proto example

[09:37] <Geth> ¦ doc: 

[09:37] <Geth> ¦ doc: The listed output for the extended proto example did not match the code. The code example also had two separate functions with the same message, so that's been edited for clarity.

[09:37] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/72cee90083

[09:37] <linkable6> Link: https://docs.raku.org/language/functions

[09:42] *** sena_kun joined
[09:44] *** Altai-man left
[09:44] *** wamba joined
[09:44] *** xinming left
[09:45] *** xinming joined
[09:54] *** wamba left
[10:16] *** jmerelo left
[10:17] *** holli__ left
[10:18] *** MasterDuke left
[10:24] <Geth> ¦ doc: jjatria++ created pull request #3661: Simplify use of pick in is-pure documentation

[10:24] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3661

[10:25] *** aluaces joined
[10:32] *** Xliff joined
[10:33] <Xliff> \o

[10:33] <Xliff> If I have a CArray from NativeCall... how can I know if .elems will return a proper size?

[10:34] <Xliff> If I assign a CArray from a C-call, raku will complain that it doesn't know the length.

[10:34] <Xliff> However if I create it from Raku, it will.

[10:34] <Xliff> Is there a way to determine which is which?

[10:35] <timotimo> `try $foo.elems`

[10:36] *** MasterDuke joined
[10:40] <Xliff> timotimo: Hrm...

[10:40] <Xliff> I take it if it's from C, that result would be a Failure object?

[10:44] <Geth> ¦ doc: 07fa82e269 | (José Joaquín Atria)++ (committed using GitHub Web editor) | doc/Type/Routine.pod6

[10:44] <Geth> ¦ doc: Simplify use of pick in is-pure documentation

[10:44] <Geth> ¦ doc: 

[10:44] <Geth> ¦ doc: Closes #3579

[10:44] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/07fa82e269

[10:44] <Geth> ¦ doc: 8293b83357 | Altai-man++ (committed using GitHub Web editor) | doc/Type/Routine.pod6

[10:44] <Geth> ¦ doc: Merge pull request #3661 from jjatria/patch-1

[10:44] <Geth> ¦ doc: 

[10:44] <linkable6> Link: https://docs.raku.org/type/Routine

[10:44] <Geth> ¦ doc: Simplify use of pick in is-pure documentation

[10:44] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/8293b83357

[10:44] <linkable6> DOC#3579 [closed]: https://github.com/Raku/doc/issues/3579 [bug][docs] Fix "pick" use in docs.raku.org/routine/is%20pure

[10:48] *** jmerelo joined
[11:05] <timotimo> i would assume it throws an adhoc exception from moarvm

[11:05] <timotimo> and that it doesn't translate that into a failure object in NativeCall itself

[11:10] *** Noisytoot left
[11:11] <Xliff> timotimo: OK, well I've written something that assumes that will become a Failure object at the Rakudo level.

[11:12] <Xliff> timotimo: See usage, here: https://github.com/Xliff/p6-GLib/blob/master/lib/GLib/Raw/Subs.pm6#L137

[11:14] *** xinming left
[11:16] *** xinming joined
[11:35] <JJAtria[m]1> jmerelo: I think we are talking about different things on that PR. I don't think there's actually any meaningful disagreement

[11:52] *** frot-lab left
[11:56] *** xinming left
[11:57] *** xinming joined
[12:12] *** holli__ joined
[12:18] *** jmerelo left
[12:27] *** Noisytoot joined
[12:32] *** Altreus_ is now known as Altreus

[12:48] *** pamplemousse joined
[13:09] *** skids joined
[13:19] *** MasterDuke left
[13:33] *** sarna left
[13:35] *** xinming left
[13:36] *** xinming joined
[13:40] <tbrowder> lizmat: when you get a chance please check my blog site to see if you can detect a raku post vs a non-raku one.

[13:41] <lizmat> tbrowder: please remind us of the URL  :-)

[13:41] <tbrowder> please let me know how i can best arrange that: zola-blogs.us

[13:42] *** Altai-man joined
[13:43] <tbrowder> right now i have an html processing instruction that identifies the prog lang if any. but i can do all sorts of eye-ball invisible things

[13:43] <[Coke]> tbrowder: light mode makes the code very hard to read, FYI

[13:44] <tbrowder> i have two examples, are both bad? see latest

[13:44] *** sena_kun left
[13:44] <lizmat> tbrowder: indented code block is only a black blob for me

[13:45] <tbrowder> yes, i've filed issue with the Zola ppl

[13:45] <lizmat> afk for 30 mins or so&

[13:45] <tbrowder> it's the same for me

[13:46] *** aborazmeh left
[13:47] <tbrowder> [Coke] how about now.

[13:47] <tbrowder> both bad?

[13:47] *** xinming left
[13:47] <[Coke]> I don't see a change.

[13:48] <[Coke]> first one still nearly invisible, second one is visible but low contrast (in light mode)

[13:48] <tbrowder> ok, is contrast in dark mode ok?

[13:49] *** xinming joined
[13:50] <tbrowder> they have lots of highlighter schemes but i can't find examples. right now i'm trying to establish a minimally acceptable starting look, with tweaks to come with time.

[13:57] <[Coke]> no, wasn't great, but was at least legible.

[13:57] <[Coke]> Don't want to get stuck in a QA cycle, just wanted to give you a quick heads up. :)

[14:09] *** Sgeo joined
[14:17] <tbrowder> ok, thnx, i just now found that many of zola's named highlight schemes can be seen. i'll put a link on my site so ppl can suggest something better.

[14:23] *** MasterDuke joined
[14:26] *** john_parr_ joined
[14:59] *** xinming left
[14:59] *** andrzejku left
[15:00] *** xinming joined
[15:16] *** xinming left
[15:16] *** xinming joined
[15:19] *** zacts joined
[15:23] *** zacts left
[15:24] *** zacts joined
[15:25] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/10/05/2020-40-manifestly/

[15:33] *** xinming left
[15:34] *** xinming joined
[15:35] * [Coke] gets name dropped in the weekly for doing the most basic of maintenance. :)

[15:39] <rypervenche> I was quite surprised to see my name, forgot I submitted a PR.

[15:39] <[Coke]> rypervenche++

[15:45] <tbrowder> [Coke] i've updated site to show off code better with a slightly different highlighter. also added a link to the choices. suggestions welcome.

[15:46] <lizmat> tbrowder: it's readable, but only barely  :-(

[15:48] *** xinming left
[15:48] <tbrowder> erg, all i can suggest is checking out some of the other choices. i'll consult codesections...

[15:48] <rypervenche> Yeah, I kind of have to squint to be able to make out the different colors. And the bright background mixed with the all of a sudden very dark code block makes it harder to make out.

[15:48] *** xinming joined
[15:49] <tbrowder> rypervenche: note the little square at the top of the page allows you to switch from light to dark background

[15:51] <rypervenche> Ahh, that's a bit better. I still think the difference in colors should be more pronounced though.

[15:51] <rypervenche> Perhaps a personal preference though.

[15:52] <tbrowder> how do you like blog site of codesections ref colors and code highlighting? let me find link...

[15:53] <tbrowder> codesections.com

[15:57] <rypervenche> I like that, but I'm probably biased there, as I use that colorscheme for my terminals :P

[15:57] <tbrowder> codewise it doesn't look much different to me. i believe there is a way to choose the foreground and backgound colors and just forego syntax highlighting.

[15:58] <rypervenche> To me the colors are more vibrant.

[15:58] <tbrowder> i wouldn't have a prob with that but most would.

[16:00] <rypervenche> Meh, you can't please everyone. Maybe come up with a few different options and get a vote from people?

[16:01] <tbrowder> well my color perception is not that great, so it would really be helpful for someone to check out the other schemes on getzola.org

[16:02] <tbrowder> in the meantime, i'll see if i can isolate schemes to different code blocks

[16:03] *** xinming left
[16:04] <lizmat> tbrowder: code gets better visually in dark mode indeed...  but I prefer working in bright mode instead

[16:05] *** xinming joined
[16:05] <rypervenche> tbrowder: Where are the schemes on that site?

[16:05] <lizmat> so switching to a dark mode blog is a bit of a pain, as you eyes need to adjust and/or you need to make sure no other bright windows blot out the dark mode blog

[16:09] <tbrowder> rypervence: see the link referenced in my top sample blog at zola-blogs.us

[16:09] <tbrowder> rypervenche: ^^^

[16:11] <tbrowder> i like the default light background, but it may retain your last choice.

[16:16] <tbrowder> hm, i just took a look at codesections site. he uses "solarized-dark". if you all like his i can use his setup, including syntax higlighting...

[16:19] *** domidumont left
[16:22] <rypervenche> I went through them all. I like solarized and onehalf the best. But that's only my opinion. :)

[16:26] <rypervenche> Both of those colorschemes have light and dark versions. I don't know if it's possible to have those changed based on the light/dark theme that you choose.

[16:34] *** dakkar left
[16:36] *** domidumont joined
[16:39] *** holli__ left
[16:45] *** john_parr_ is now known as st_elmo

[16:45] *** st_elmo left
[16:48] *** MilkmanDan left
[16:49] *** MilkmanDan joined
[16:51] *** domidumont left
[16:57] <tbrowder> rypervenche: thnx, and i've changed my site to use solarized-dark but i'm not sure if i can see the difference. could you pls check and see if you can tell?

[16:58] <tbrowder> and i will definitely look into possibility of changing with choice of background!

[16:58] <rypervenche> It looks the same to me.

[16:58] <lizmat> it looks ever so slightly better to me   (but then again, I know the power of suggestion)

[16:59] <lizmat> perhaps because it is getting dark in my office as the sun is about to set

[16:59] * lizmat switches on a light

[16:59] <lizmat> yeah, agree, no change

[17:00] <rypervenche> The colors for "my" and "say" don't exist in solarized, and the other colors are not right either, so it doesn't look like it updated.

[17:05] <tbrowder> ok, working on it. i will add codesections' raku extra syntax and that  should help. will be later today before i can get to it.

[17:05] <tbrowder> bye-bye...

[17:24] *** vgrato_ left
[17:34] *** Xliff left
[17:40] *** xinming left
[17:40] *** xinming joined
[17:42] *** sena_kun joined
[17:44] *** Altai-man left
[17:49] *** pamplemousse_ joined
[17:49] *** jmerelo joined
[17:53] *** pamplemousse left
[17:56] *** molaf left
[18:08] *** approaching236 joined
[18:13] *** zacts left
[18:17] *** m6locks joined
[18:21] *** cpan-raku left
[18:24] *** bocaneri left
[18:28] *** benlit left
[18:45] *** cpan-raku joined
[18:45] *** cpan-raku left
[18:45] *** cpan-raku joined
[18:46] *** mowcat joined
[18:56] *** holli__ joined
[19:00] *** xinming left
[19:01] *** xinming joined
[19:04] *** jmerelo left
[19:19] *** abraxxa left
[19:21] *** abraxxa joined
[19:31] *** pamplemousse_ left
[19:35] <tbrowder> alright, i *think* the solarized-dark highlight is actually being used (with Perl syntax coloring by Zola, not codesections' extra coloring).

[19:37] <tbrowder> can you eagle-eye color-sensitive ppl tell me if code block at zola-blogs.us looks different (hopefully a bit better)?

[19:40] *** molaf joined
[19:46] *** xinming left
[19:46] *** xinming joined
[19:49] *** approaching236 left
[19:50] <rypervenche> tbrowder: Yep, it is correct now.

[19:51] <tbrowder> so it looks better, great! thnx! now i'll see about adding the extra_syntaxes

[20:02] *** klebs joined
[20:05] <klebs> Hi everybody! anybody know how to expand the truncated IO::Path in this error message?

[20:05] <klebs>   Constraint type check failed in binding to parameter '$target'; expected anonymous constraint to be met but got IO::Path (IO::Path.new("/tmp/m...)

[20:06] *** pamplemousse_ joined
[20:06] <klebs> i am not sure why it truncates the text of the IO::Path

[20:08] <tbrowder> .ask codesections is it ok to use yr raku.sublime-text syntax code? if so, what should attribution be? would it be ok to use in PR to Zola?

[20:08] <tellable6> tbrowder, I'll pass your message to codesections

[20:09] <klebs> specifically, I want to know how to make raku automatically output the full path, when instead it outputs: "but got IO::Path (IO::Path.new("/tmp/m...)"

[20:11] <klebs> has anybody here encountered this? any fixes? I looked on the environment variables page, but didn't see anything that seemed to describe this issue

[20:15] *** klebs left
[20:20] <MasterDuke> .tell klebs rakudo is deliberately shortening the string and i don't believe there's any user-facing way to prevent that. however, you can explicitly die in your constraint and give a different message. e.g., `sub a($a where {$_ == 1 or die "got $_"}){ say "hi" }(2)`

[20:20] <tellable6> MasterDuke, I'll pass your message to klebs

[20:20] *** Grinnz_ joined
[20:21] *** Grauwolf_ joined
[20:22] *** literal_ joined
[20:23] *** hoelzro joined
[20:23] *** Roamer`_ joined
[20:25] *** Grinnz left
[20:25] *** unclechu left
[20:25] *** Roamer` left
[20:25] *** suzusime[m] left
[20:25] *** hoelzro_ left
[20:25] *** Grauwolf left
[20:25] *** literal left
[20:25] *** Grinnz_ is now known as Grinnz

[20:27] *** AlexDaniel` joined
[20:28] *** unclechu joined
[20:28] *** guifa joined
[20:29] *** suzusime[m] joined
[20:34] *** klebs joined
[20:43] <guifa> m: sub foo($a, *@b) { }; say &foo.signature.params[1].positional

[20:43] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[20:43] <guifa> um....

[20:44] *** approaching236 joined
[20:45] <guifa> that doesn’t quite feel correct

[20:47] *** xinming left
[20:47] <lizmat> m: sub foo(*@b) { }; say &foo.signature.params[0].positional

[20:47] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[20:47] <lizmat> m: sub foo(*@b) { }; dd &foo.signature.params[0]

[20:47] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Parameter @b = *@b␤»

[20:47] <MasterDuke> m: sub foo($a, *@b) { }; say &foo.signature.params[1].slurpy

[20:47] <camelia> rakudo-moar 85847d2f1: OUTPUT: «True␤»

[20:48] <lizmat> feels like a buglet

[20:48] *** xinming joined
[20:51] *** vrurg left
[20:52] *** vrurg joined
[20:56] * guifa will make file an issue and see if he can track it down.  

[20:57] <guifa> Just wanted to confirm it was not as designed.  .named is false, but on *%slurpy, both .named and .slurpy are true (and .positional is false)

[20:57] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue META6 specification only exists "de facto" https://github.com/Raku/problem-solving/issues/236

[20:58] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue What is the philosophy of the Raku language https://github.com/Raku/problem-solving/issues/235

[20:58] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue IO::Path and Distribution::Resource share many methods https://github.com/Raku/problem-solving/issues/233

[20:58] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Add a "community" label for issues that don't fit existing labels https://github.com/Raku/problem-solving/issues/232

[20:58] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Ecosystem name resolution (or squatting) problem https://github.com/Raku/problem-solving/issues/229

[20:58] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Coercion reconsidered and unified https://github.com/Raku/problem-solving/issues/227

[20:59] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Extended identifiers-why and where, exactly? https://github.com/Raku/problem-solving/issues/224

[20:59] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Map parameterized vs Hash parameterized https://github.com/Raku/problem-solving/issues/223

[20:59] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Introspection for operator precedence, associativity https://github.com/Raku/problem-solving/issues/222

[21:00] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue .max on Iterables sorts on keys instead of values. https://github.com/Raku/problem-solving/issues/221

[21:00] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Destructuring infinite ranges and sequences https://github.com/Raku/problem-solving/issues/218

[21:01] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Loading of custom setting logic is undefined https://github.com/Raku/problem-solving/issues/213

[21:01] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue More language revision related questions needs resolving. https://github.com/Raku/problem-solving/issues/199

[21:01] <rypervenche> guifa: There he is! Do you know of any module (or are any of the ones you're working on) that can handle date and time in almost any format? I was looking to find a single module that could go to and from RFC2822, but the two modules that look like they would handle that don't.

[21:02] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Nativecall, native trait library usage rework https://github.com/Raku/problem-solving/issues/186

[21:02] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue A way to control Rat's behavior when it is running out of range for its denominator https://github.com/Raku/problem-solving/issues/185

[21:02] <rypervenche> I made a PR for DateTime::Parse, but it doesn't look to be maintained anymore. I know that other language have a single library that can handle all/most date formats.

[21:02] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue What should be the size of `int`? (and other NativeCall type issues) https://github.com/Raku/problem-solving/issues/182

[21:02] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue A better MOP API for wrapper kinds could exist https://github.com/Raku/problem-solving/issues/180

[21:03] <lizmat> hmmm... that's a lot of noise  :-(

[21:04] <guifa> rypervenche: sorry! was out of town and disconnected.  Going to should be fairly simply enough via a formatter string, but the from is more difficult.

[21:04] <guifa> lemme check out the DateTime::Parse module and see if myabe I could do something with a PR there

[21:05] <rypervenche> I only ask because right after I submitted the PR, I found an exception in an email date that appended (UTC) to the end of an RFC2822 date, which is not standard. I worked around it by fixing the string in my script, but it would be nice if we had a thing kind of like the Linux "date" command that can take all sorts of date formats as input.

[21:05] *** pamplemousse_ left
[21:06] <rypervenche> I was simply curious if we already had something like that that I wasn't aware of.

[21:06] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Extended identifiers- reserving :sym puzzles me https://github.com/Raku/problem-solving/issues/225

[21:06] <guifa> Actually, do you have a link to the Parse module?  I can’t find it on the ecosystem

[21:07] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Some useful math/statistics functions are missing https://github.com/Raku/problem-solving/issues/4

[21:07] <rypervenche> https://github.com/sergot/datetime-parse/

[21:07] <guifa> I’m not aware of one but it might not be bad to have a (potentially slower) but very accepting one.  <local-time> will be fairly liberal, but won’t cover the ISO formats

[21:08] <rypervenche> There is also https://github.com/raku-community-modules/perl6-datetime-format but it is missing the subroutine that I would need to parse a string into a DateTime object.

[21:08] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Uncertain status of tests in the roast https://github.com/Raku/problem-solving/issues/217

[21:09] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Use of literal named parameters syntax for multi-dispatching https://github.com/Raku/problem-solving/issues/195

[21:10] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Inconsistent handling of too-large array index between match variables and regular arrays https://github.com/Raku/problem-solving/issues/10

[21:10] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Raku and/or Rakudo trademarks https://github.com/Raku/problem-solving/issues/193

[21:10] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Specify rounding mode in CORE https://github.com/Raku/problem-solving/issues/13

[21:10] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue take single letter CLI options with one leading hyphen, such as `-lwc` https://github.com/Raku/problem-solving/issues/18

[21:10] *** sena_kun left
[21:10] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Metadata licenses should be required before adding new modules to ecosystem https://github.com/Raku/problem-solving/issues/19

[21:10] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Use a grammar for command line options https://github.com/Raku/problem-solving/issues/187

[21:11] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Semantics of coercion type on an "rw" parameter https://github.com/Raku/problem-solving/issues/21

[21:11] *** Possum left
[21:11] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Defining custom coercions from extant types https://github.com/Raku/problem-solving/issues/22

[21:11] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Removed Syntactic Feature (-i flag for in-place file editing) https://github.com/Raku/problem-solving/issues/36

[21:12] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue The ecosystem is a mess https://github.com/Raku/problem-solving/issues/39

[21:12] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Please beware of eliminating (or changing) documented features https://github.com/Raku/problem-solving/issues/40

[21:17] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue `once` block can be executed more than once https://github.com/Raku/problem-solving/issues/41

[21:17] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue New named parameters to .classify https://github.com/Raku/problem-solving/issues/6

[21:18] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue where blocks vs sub signatures https://github.com/Raku/problem-solving/issues/24

[21:18] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Editor modes for Raku https://github.com/Raku/problem-solving/issues/37

[21:18] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Changelogging takes too much time and effort https://github.com/Raku/problem-solving/issues/53

[21:18] <guifa> rypervenche: the DateTime::Format is an old module that was basically a port over of Perl stuff.  I could probably take a look at it to see how to integrate it into other stuff I’m working on

[21:19] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Release process changes https://github.com/Raku/problem-solving/issues/54

[21:19] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Clarifying dual-licensing on the site https://github.com/Raku/problem-solving/issues/56

[21:19] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Ecosystem issues and a corresponding dev https://github.com/Raku/problem-solving/issues/45

[21:20] <Geth> ¦ problem-solving: lizmat self-assigned Clarifying dual-licensing on the site https://github.com/Raku/problem-solving/issues/56

[21:20] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue LCM (support Rat and fail on lossy coercion) https://github.com/Raku/problem-solving/issues/55

[21:21] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue X::MyModule::Foo or MyModule::X::Foo ? https://github.com/Raku/problem-solving/issues/57

[21:21] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Ambiguity in pseudo-package and package reaction on missing symbols. https://github.com/Raku/problem-solving/issues/58

[21:22] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Need a substitute for Perl 5 die with newline for raising end-user errors? https://github.com/Raku/problem-solving/issues/59

[21:23] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Running some scripts without any input sometimes leads users to believe that the program is hanging https://github.com/Raku/problem-solving/issues/60

[21:23] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue What can and what cannot be changed in 6.c-errata? https://github.com/Raku/problem-solving/issues/62

[21:24] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Should `without` allow chaining? https://github.com/Raku/problem-solving/issues/63

[21:24] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Status of NativeCall is unclear https://github.com/Raku/problem-solving/issues/66

[21:25] *** rindolf left
[21:26] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Status of the POD6 implementation https://github.com/Raku/problem-solving/issues/69

[21:27] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Official release of Raku implementation https://github.com/Raku/problem-solving/issues/70

[21:28] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Should IO::Handle instances be possible to construct using file descriptors? https://github.com/Raku/problem-solving/issues/73

[21:28] <Geth> ¦ problem-solving: lizmat self-assigned Should IO::Handle instances be possible to construct using file descriptors? https://github.com/Raku/problem-solving/issues/73

[21:28] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Mechanism for Reusing Function Definitions in NativeCall https://github.com/Raku/problem-solving/issues/75

[21:29] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Make Rakudo read from META6 modules with :ver<>, :auth<> and :api<> https://github.com/Raku/problem-solving/issues/76

[21:29] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue What's up with hyper/race semantics? https://github.com/Raku/problem-solving/issues/77

[21:30] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Update Travis configuration so that it does not compile Rakudo every single time. https://github.com/Raku/problem-solving/issues/85

[21:31] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Language versioning. https://github.com/Raku/problem-solving/issues/88

[21:31] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Support for custom HOWs isn't generic enough https://github.com/Raku/problem-solving/issues/90

[21:33] *** xinming left
[21:33] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue .perl should be replaced with a pluggable system https://github.com/Raku/problem-solving/issues/91

[21:33] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue there is no security process for receiving security critical bug reports https://github.com/Raku/problem-solving/issues/92

[21:34] <Geth> ¦ problem-solving: lizmat unassigned from rba Issue Alert system for core developers https://github.com/Raku/problem-solving/issues/95

[21:34] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Alert system for core developers https://github.com/Raku/problem-solving/issues/95

[21:34] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue MoarVM Support of Callbacks in a Different Thread https://github.com/Raku/problem-solving/issues/96

[21:34] *** xinming joined
[21:35] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Clean interpolation for enumerated character classes https://github.com/Raku/problem-solving/issues/97

[21:36] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Perl6 is missing the ability to store sub signatures for later use. Think Callbacks. https://github.com/Raku/problem-solving/issues/98

[21:36] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue stage0 is a binary blob, how can we do without it? https://github.com/Raku/problem-solving/issues/100

[21:37] *** pamplemousse_ joined
[21:37] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Ecosystem stability issues https://github.com/Raku/problem-solving/issues/105

[21:37] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Delegation does not handle multi-methods. https://github.com/Raku/problem-solving/issues/107

[21:37] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Raku needs better ways to deal with network addresses https://github.com/Raku/problem-solving/issues/111

[21:38] *** approaching236 left
[21:39] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Open a blog https://github.com/Raku/problem-solving/issues/115

[21:39] <El_Che> poor jnthn will sleep wll tonight

[21:39] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Creditcard for cloud services https://github.com/Raku/problem-solving/issues/117

[21:40] *** aluaces left
[21:40] *** klebs left
[21:43] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Wikipedia and Wikidata curation https://github.com/Raku/problem-solving/issues/120

[21:43] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Check MoarVM out using OSS-fuzz https://github.com/Raku/problem-solving/issues/121

[21:43] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue List should have `.do` method as Supply https://github.com/Raku/problem-solving/issues/122

[21:44] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue `Supply.map` should respect the `Slip` semantics as `List.map` does https://github.com/Raku/problem-solving/issues/123

[21:45] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Dynamic symbols resolution via &DYNAMIC is potentially a problem in user code https://github.com/Raku/problem-solving/issues/127

[21:45] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue "Path to Raku" is missing change of linux module namespaces https://github.com/Raku/problem-solving/issues/130

[21:47] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Remove P5 regexes from Raku https://github.com/Raku/problem-solving/issues/133

[21:48] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Add Dict/Tuple to the core https://github.com/Raku/problem-solving/issues/135

[21:49] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue perl6-users mailing list https://github.com/Raku/problem-solving/issues/139

[21:49] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue change the raku spec versioning https://github.com/Raku/problem-solving/issues/141

[21:50] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Routines could use more support for reflection https://github.com/Raku/problem-solving/issues/149

[21:50] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Expmod returns a default value instead of erroring out on libtommath errors https://github.com/Raku/problem-solving/issues/150

[21:51] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue RFE: returns for multiple variables https://github.com/Raku/problem-solving/issues/152

[21:52] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue uint's confused with int's https://github.com/Raku/problem-solving/issues/154

[21:52] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue IO::Socket::INET's methods for socket creation may need reconsideration https://github.com/Raku/problem-solving/issues/157

[21:53] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue The development experience around the generate-and-export pattern has shortcomings https://github.com/Raku/problem-solving/issues/159

[21:53] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Errors indexing past the end of a List https://github.com/Raku/problem-solving/issues/160

[21:53] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue RAKUDOLIB destiny? https://github.com/Raku/problem-solving/issues/167

[21:54] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Abandoned modules, deceased authors, etc. (Raku Community Modules) https://github.com/Raku/problem-solving/issues/168

[21:55] <Geth> ¦ problem-solving: lizmat unassigned from jnthn Issue Making a signature accept a list of Pairs https://github.com/Raku/problem-solving/issues/177

[21:56] *** xinming left
[21:56] *** xinming joined
[21:57] <lizmat> That's it, all of problem solving tickets assigned to jnthn no longer assigned to him, sorry for the noise!

[21:58] <guifa> lizmat I want to ++ but also kind of sad seeing it.  Hopefully jnthn can rest and get well.

[21:59] <lizmat> yes, similar feelings, I'm pretty sure jnthn will be able to rest and get well

[22:00] <lizmat> we just have to make sure that #raku is a place he cannot do without  :-)

[22:08] *** Grauwolf_ is now known as Grauwolf

[22:08] *** xinming left
[22:08] *** xinming joined
[22:10] *** maggotbrain left
[22:10] <guifa> rypervenche: perhaps the best would be a DateTime::Format and DateTime::Parse that handle all of them.  By default, the parser can check all formats with certain degree of leniency.  The format one could just be a set of subs, since that’s what the :formatter option on DateTime takes

[22:11] <guifa> neither of those two modules are currently in the ecosystem, so I can be semi-evil and squat the name but making sure to keep it updated

[22:12] *** maggotbrain joined
[22:12] *** Grinnz left
[22:12] *** maggotbrain left
[22:15] *** Grinnz joined
[22:17] *** oodani left
[22:17] *** oodani joined
[22:17] *** approaching236 joined
[22:24] *** Sgeo_ joined
[22:27] *** Sgeo left
[22:28] *** hoelzro left
[22:28] *** hoelzro joined
[22:35] <rypervenche> guifa: They're not? I found them from the modules.raku.org page.

[22:35] *** skids left
[22:41] <guifa> rypervenche: oh, hmmm, they weren’t use tags.  I just clickeed on “date” tag ^_^

[22:41] *** pecastro joined
[22:58] *** pecastro left
[23:22] *** xinming left
[23:22] *** xinming joined
[23:42] *** xinming left
[23:42] *** xinming joined
