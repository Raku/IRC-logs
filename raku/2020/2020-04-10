[00:02] *** Kaiepi left
[00:03] *** Kaiepi joined
[00:03] *** Actualeyes left
[00:07] *** guifa2 left
[00:11] *** guifa2 joined
[00:37] *** Kaiepi left
[00:37] *** Kaeipi joined
[00:40] *** sena_kun joined
[00:41] *** Altai-man_ left
[00:42] *** cpan-raku left
[00:42] *** cpan-raku joined
[00:42] *** cpan-raku left
[00:42] *** cpan-raku joined
[00:57] *** hungrydonkey joined
[00:59] *** Kaeipi left
[01:00] *** Kaeipi joined
[01:08] *** Kaeipi left
[01:09] *** Kaiepi joined
[01:11] *** guifa2 left
[01:11] *** guifa2 joined
[01:13] *** rbtca is now known as rbt

[01:16] *** rbt is now known as rbtca

[01:17] *** guifa2 left
[01:17] *** rbtca left
[01:17] *** rbtca joined
[01:20] *** rbtca left
[01:20] *** rbtca joined
[01:21] *** hungrydonkey left
[01:23] *** Kaiepi left
[01:23] *** Kaiepi joined
[01:24] *** rbtca is now known as rbt

[01:25] *** hungrydonkey joined
[01:25] *** aborazmeh joined
[01:25] *** aborazmeh left
[01:25] *** aborazmeh joined
[01:25] *** rbt is now known as rbtca

[01:33] *** hungrydonkey left
[01:34] *** aborazmeh left
[01:47] *** hungrydonkey joined
[01:54] *** kst joined
[02:11] *** guifa2 joined
[02:11] *** rbtca left
[02:11] *** rbtca joined
[02:13] *** caterfxo left
[02:21] *** poohman joined
[02:35] *** hungrydonkey left
[02:37] *** hungrydonkey joined
[02:39] *** Altai-man_ joined
[02:42] *** sena_kun left
[03:30] *** poohman left
[03:51] *** MasterDuke left
[03:54] *** poohman joined
[03:57] *** pilne left
[03:57] *** poohman left
[04:01] *** Kaiepi left
[04:02] *** Kaiepi joined
[04:27] *** Actualeyes joined
[04:32] *** molaf joined
[04:40] *** sena_kun joined
[04:42] *** Altai-man_ left
[04:43] <Demos[m]> What;s the difference between a parameter Mu ::Type and Mu:U $type?

[04:57] *** lichtkind joined
[05:02] *** sauvin joined
[05:33] <guifa2> Mu ::Type captures the type of the object, regardless of whether it's defined or not

[05:33] <guifa2> Mu:U $type requires you to pass an undefined object

[05:34] <guifa2> m: sub foo(Mu ::Type) { say Type}; foo 2; foo Int;

[05:34] <camelia> rakudo-moar 604085fb2: OUTPUT: «(Int)␤(Int)␤»

[05:35] <guifa2> m: sub foo(Mu:U $type) { say $type }; foo Int; foo 2

[05:35] <camelia> rakudo-moar 604085fb2: OUTPUT: «(Int)␤Parameter '$type' of routine 'foo' must be a type object of type 'Mu', not an object instance of type 'Int'.  Did you forget a 'multi'?␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[05:35] <guifa2> Mu is implied though, since it's the root class.  You can just use foo(::Type) and foo(:U $type)

[05:36] <guifa2> Also, since the ::Type is a type capture proper, you can then use it in the signature:

[05:38] <guifa2> m: sub foo(::Type, Type:D $a) { say "$a is a defined ", Type }; foo 2, 4; foo 'a', 4

[05:38] <camelia> rakudo-moar 604085fb2: OUTPUT: «4 is a defined (Int)␤Type check failed in binding to parameter '$a'; expected Str but got Int (4)␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[05:42] <guifa2> Demos[m]: ^^ hope that helps.  Note that in both cases, you can s/Mu/Foo and require the type to be a subclass of Foo or to be of role Foo.  And lastly, when you say foo(::T, T $a, T $b), it's really short hand for foo(::T $, T $a, T $b), which might help make the distinction of what's going on clearer

[05:43] *** Kaiepi left
[05:43] *** Kaiepi joined
[05:45] *** xelxebar left
[05:47] *** xelxebar joined
[05:49] <Demos[m]> hmm I had trouble with method foo(SomeType ::Type --> Type:D)

[05:49] *** colomon left
[05:49] <Demos[m]> return typecheck always failed

[05:49] <Demos[m]> does ::T $ just say that the variable has scalar context?

[05:50] <Demos[m]> sorry .... there are a lot of symbols and lots of ways to arrange them

[05:51] * Demos[m] sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/ihaONDYQLUpWzmdcAOCEOYkg >

[05:59] *** colomon joined
[05:59] <Demos[m]> I wish comma had a "what the heck is this" button :D

[06:15] *** andrzejku joined
[06:39] *** Altai-man_ joined
[06:41] *** sena_kun left
[06:44] *** vrurg_ joined
[06:48] *** vrurg left
[06:53] *** imcsk8 left
[06:55] *** imcsk8 joined
[07:16] *** hungrydonkey left
[07:24] *** hungrydonkey joined
[07:31] <Geth_> ¦ doc: 90f8d3b6aa | (Ben Davies)++ | 4 files

[07:31] <Geth_> ¦ doc: Document Metamodel::DefiniteHOW

[07:31] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/90f8d3b6aa

[07:31] <Geth_> ¦ doc: f5f3265ea4 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 4 files

[07:31] <Geth_> ¦ doc: Merge pull request #3318 from Kaiepi/metamodel-definitehow

[07:31] <Geth_> ¦ doc: 

[07:31] <Geth_> ¦ doc: Document Metamodel::DefiniteHOW

[07:31] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/f5f3265ea4

[07:33] *** rindolf joined
[07:33] *** abraxxa joined
[07:37] *** abraxxa left
[07:38] *** abraxxa joined
[07:48] *** MasterDuke joined
[07:48] *** hungrydonkey left
[07:54] *** aborazmeh joined
[07:54] *** aborazmeh left
[07:54] *** aborazmeh joined
[07:56] *** hungrydonkey joined
[08:02] *** lichtkind left
[08:14] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.27.4.1) by 03MARTIMM

[08:17] *** chloekek joined
[08:17] <chloekek> p6: sub f(:@xs) { say @xs }; f(xs => <a>);

[08:17] <camelia> rakudo-moar 604085fb2: OUTPUT: «Type check failed in binding to parameter '@xs'; expected Positional but got Str ("a")␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[08:17] <chloekek> p6: sub f(:@xs) { say @xs }; f(:xs<a>);

[08:17] <camelia> rakudo-moar 604085fb2: OUTPUT: «Type check failed in binding to parameter '@xs'; expected Positional but got Str ("a")␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[08:18] <chloekek> p6: sub f(:@xs) { say @xs }; f(xs => «a»);

[08:18] <camelia> rakudo-moar 604085fb2: OUTPUT: «Type check failed in binding to parameter '@xs'; expected Positional but got Str ("a")␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[08:24] <MasterDuke> p6: sub f(:@xs) { say @xs }; f(xs => ("a",));

[08:24] <camelia> rakudo-moar 604085fb2: OUTPUT: «(a)␤»

[08:39] *** rbtca left
[08:40] *** rbtca joined
[08:40] *** sena_kun joined
[08:41] *** natrys joined
[08:41] *** Altai-man_ left
[08:53] *** ensamvarg joined
[09:10] *** Actualeyes left
[09:11] *** Actualeyes joined
[09:19] <Geth_> ¦ doc: 203673a138 | (Ben Davies)++ | doc/Type/Metamodel/DefiniteHOW.pod6

[09:19] <Geth_> ¦ doc: Correct an example's output in the Metamodel::DefiniteHOW docs

[09:19] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/203673a138

[09:19] <linkable6> Link: https://docs.raku.org/type/Metamodel::DefiniteHOW

[09:33] *** aborazmeh left
[10:06] *** Skarsnik joined
[10:07] <Skarsnik> Hello. is there a place to write test for... the Test module? x)

[10:11] <lizmat> in the rakudo repository I guess ?

[10:11] <lizmat> I think there are some tests for the Test module there already

[10:13] *** aborazmeh joined
[10:13] *** aborazmeh left
[10:13] *** aborazmeh joined
[10:19] *** expon joined
[10:19] <Skarsnik> hm t/01-sanity/99-test-basic.t look like this is the place x)

[10:27] <expon> i wrote a silly little sequence to make a list of before/after padding, but it doesn't terminate: (0;n), -> [$b,$a] {($b+1;$a-1)} … (n;0)

[10:27] <expon> it does seem to smartmatch though, so i'm not sure why it's not terminating

[10:29] *** hungrydonkey left
[10:39] *** Altai-man_ joined
[10:42] *** sena_kun left
[10:42] <lizmat> expon: could you make an issue with an example of the code that doesn't do what you want?

[10:43] <expon> lizmat: i can do that later sure, but the code above should be a decent example for any n > 0, as i think it should terminate logically :p

[10:43] <expon> the raku github issues i assume? been a while

[10:44] <lizmat> yes, please

[10:44] <lizmat> it will help tremendously if people can just copy/paste to see the (wrong) result and not have to reason about it up front

[10:45] <expon> i understand

[10:45] <lizmat> ++expon

[10:50] <chloekek> When people put "version": "*" in their META6.json, what does that mean?

[10:50] <chloekek> How is it to be compared against other versions?

[10:51] <chloekek> p6: say '*'.Version <=> '1.2.3'.Version

[10:51] <camelia> rakudo-moar 604085fb2: OUTPUT: «Less␤»

[10:52] <chloekek> p6: say '*'.Version <=> '0'.Version

[10:52] <camelia> rakudo-moar f70d95e29: OUTPUT: «Less␤»

[10:53] <chloekek> p6: say '*'.Version «cmp« ('*', '0', '1.2.3')».Version

[10:53] <camelia> rakudo-moar f70d95e29: OUTPUT: «(Same Less Less)␤»

[10:53] <chloekek> So it seems to be less than all other versions.

[10:58] <chloekek> * is asciibetically less than 0, so that’s convenient.

[10:58] *** Black_Ribbon left
[11:00] <expon> lizmat: done, #3612, hope that's appropriate

[11:00] <expon> i have to run in a few seconds so apologies i haven't done any debugging or written more detail

[11:01] <lizmat> expon++

[11:01] <lizmat> stay safe!

[11:01] <expon> i just wear my perl6 tshirt and everyone stays away from me ☺

[11:01] <lizmat> :-)

[11:30] <andrzejku> hello people how raku is doing?

[11:37] *** Success joined
[11:42] *** abraxxa left
[11:43] <lizmat> andrzejku: pretty good, not bad, I can't complain

[11:43] <lizmat> .oO( sorry about the John Prine reference )

[11:45] *** rindolf left
[11:47] *** abraxxa joined
[11:49] <andrzejku> fine, I plan one day to back to perl6

[11:51] *** abraxxa1 joined
[11:52] <lizmat> andrzejku: eh, it's called raku now...  going back to perl6 is eh... not looking forward

[11:52] *** abraxxa left
[11:53] *** rindolf joined
[11:55] *** abraxxa1 left
[11:56] *** abraxxa joined
[11:59] <Success> i forget but i thought i saw where you could add custom infixes; in this case it would be equally effective for a builtin 'or' or 'xor' sorry i didn't thoroughly read the dox recently

[12:00] <Success> maybe im just looking for token thanks yall

[12:00] *** abraxxa left
[12:02] *** aborazmeh left
[12:07] <cpan-raku> New module released to CPAN! Gnome::Gtk3::Glade (0.8.9.1) by 03MARTIMM

[12:09] *** pecastro joined
[12:25] <Skarsnik> tricky, how I test if a test fail as a success; lives-ok { is ... } obviously generated a failed test xD

[12:25] <Success> you wot m8

[12:25] *** mowcat joined
[12:28] *** Xliff left
[12:30] *** stoned75 left
[12:40] *** sena_kun joined
[12:41] *** tadzik left
[12:42] *** Altai-man_ left
[12:42] *** rbtca left
[12:42] *** rbtca joined
[12:43] *** caterfxo joined
[12:44] *** tadzik joined
[13:09] <cpan-raku> New module released to CPAN! Excel::Text::Template (0.0.1) by 03TBROWDER

[13:10] *** mowcat left
[13:15] *** pilne joined
[13:16] <Skarsnik> lizmat, Chaning stuff in Test is a bit like NC, since it's probably not part of the spec, you never know how far you want to change stuff. kinda annoying IMO (especially NC)

[13:20] *** andrzejku left
[14:02] *** lucasb joined
[14:03] *** stoned75 joined
[14:03] *** pilne left
[14:05] *** pilne joined
[14:08] *** pilne left
[14:11] *** pilne joined
[14:22] *** stoned75 left
[14:28] *** vike left
[14:33] *** [Sno] left
[14:35] *** [Sno] joined
[14:39] *** Altai-man_ joined
[14:40] *** gordonfish left
[14:41] *** sena_kun left
[14:44] *** gordonfish joined
[14:59] *** xinming_ joined
[15:01] *** xinming left
[15:11] *** xinming_ left
[15:13] *** xinming_ joined
[15:21] *** wamba joined
[15:23] *** Success left
[15:23] *** Success joined
[15:25] *** wamba left
[15:26] *** wamba joined
[15:34] *** molaf left
[15:42] *** chloekek left
[15:44] *** stoned75 joined
[15:48] *** wamba left
[15:51] *** Success left
[15:51] *** Success joined
[15:54] *** xinming_ left
[15:54] *** xinming_ joined
[15:57] *** lichtkind joined
[16:04] *** wamba joined
[16:08] *** xinming_ left
[16:08] *** stoned75 left
[16:09] *** xinming_ joined
[16:11] *** cpan-raku left
[16:13] *** cpan-raku joined
[16:13] *** cpan-raku left
[16:13] *** cpan-raku joined
[16:13] *** chloekek joined
[16:18] *** wamba left
[16:20] *** wamba joined
[16:27] *** stoned75 joined
[16:28] *** wamba left
[16:29] *** wamba joined
[16:40] *** sena_kun joined
[16:42] *** Altai-man_ left
[16:46] *** rbtca left
[16:46] *** xinming_ left
[16:46] *** rbtca joined
[16:46] *** xinming_ joined
[17:05] *** guifa2 left
[17:09] *** dwarring left
[17:14] <chloekek> I found that Cro::HTTP has a very large startup time, including the library causes the app to take several seconds to launch. Are there alternative HTTP server libraries?

[17:15] *** xinming_ left
[17:17] *** xinming_ joined
[17:21] *** Tirifto joined
[17:23] *** cognominal joined
[17:27] *** cognomin_ left
[17:30] *** Hexeratops joined
[17:34] *** MasterDuke left
[17:35] <[Coke]> I'm not aware of any that have similar scope or support

[17:36] <[Coke]> https://modules.raku.org/search/?q=http - there is, e.g. HTTP::Server::Tiny

[17:37] *** MasterDuke joined
[17:38] *** wamba left
[17:41] *** guifa2 joined
[17:44] <guifa2> Demos[m]: It does seem that a captured type can't be used for a type check, that feels buggy

[17:45] <chloekek> [Coke]: I wonder how tricky it would be to use a PSGI server with Inline::Perl5.

[17:45] <chloekek> Probably breaks horribly with preforking.

[17:45] <guifa2> m: sub foo(::T $bar, --> T) { $bar }; foo 5;

[17:45] <camelia> rakudo-moar f70d95e29: OUTPUT: «Died with X::TypeCheck::Return␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:46] <guifa2> m: sub foo(::T $bar, --> T) { say "$bar is a {T}"; $bar }; foo 5;

[17:46] <camelia> rakudo-moar f70d95e29: OUTPUT: «Use of uninitialized value of type Int in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤5 is a ␤  in sub foo at <tmp> line 1␤Died with X::TypeCheck::Return␤  in sub foo at <tmp> li…»

[17:47] <guifa2> m: sub foo(::T $bar, --> T) { say "$bar is a ", T; $bar }; foo 5;

[17:47] <camelia> rakudo-moar f70d95e29: OUTPUT: «5 is a (Int)␤Died with X::TypeCheck::Return␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:47] *** kybr left
[17:47] *** Alchemy joined
[17:48] *** kybr joined
[17:49] *** daemon left
[17:49] *** Alchemy is now known as daemon

[17:52] *** guifa2 left
[17:56] *** wamba joined
[17:58] <chloekek> [Coke]: I’ll use CGI for now, can swap it out later. :)

[17:58] <chloekek> CGI is suuuuuuper easy.

[17:58] <chloekek> Just make sure you don’t accidentally write to stdout anywhere lmao. Luckily can just my $*OUT := $*ERR;

[17:59] *** matiaslina left
[17:59] *** wildtrees[m] left
[17:59] *** BlackChaosNL[m] left
[17:59] *** awwaiid left
[17:59] *** benkolera left
[17:59] *** APic left
[17:59] *** tobs left
[17:59] *** ssm left
[18:01] *** dwarring joined
[18:03] <El_Che> it's the startup time important?

[18:03] *** wildtrees[m] joined
[18:03] *** matiaslina joined
[18:03] *** benkolera joined
[18:03] *** awwaiid joined
[18:03] *** BlackChaosNL[m] joined
[18:03] *** APic joined
[18:03] *** tobs joined
[18:03] *** ssm joined
[18:04] <chloekek> It’s annoying when developing and changing stuff, having to wait ten seconds before I can test something.

[18:04] <El_Che> for developing, ok

[18:05] <chloekek> In production it’s also annoying due to downtime, but this can be fixed by keeping the old version running and switching port numbers in the reverse proxy configuration.

[18:06] <El_Che> container that are only reachable once the health check passes

[18:06] <El_Che> that's what we doe with java stuff

[18:07] *** Success left
[18:07] *** Success joined
[18:09] <El_Che> when developing I mostly run the applicable tests, this limits wainiting time (in general, not only raku)

[18:09] <chloekek> Yeah I’m editing mustache templates and css

[18:09] <chloekek> I should probably set up something for loading them dynamically

[18:10] *** mowcat joined
[18:10] *** stoned75 left
[18:23] <Geth_> ¦ doc: 920e3853ba | (JJ Merelo)++ | p6doc.iml

[18:23] <Geth_> ¦ doc: Changes Comma configuration

[18:23] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/920e3853ba

[18:23] <Geth_> ¦ doc: d4939578c5 | (JJ Merelo)++ | 2 files

[18:23] <Geth_> ¦ doc: IO::Path filetests do not cache results refs #2632

[18:23] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/d4939578c5

[18:23] <Geth_> ¦ doc: dd62c55f65 | (JJ Merelo)++ | doc/Language/regexes.pod6

[18:23] <linkable6> DOC#2632 [open]: https://github.com/Raku/doc/issues/2632 [Hacktoberfest][RFE][big][docs][good first issue][help wanted][new][⚠ Top Priority ⚠] Checklist for 6.d

[18:23] <linkable6> Link: https://docs.raku.org/language/regexes

[18:23] <Geth_> ¦ doc: Warning about old word boundary markers in regexes #2632

[18:23] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/dd62c55f65

[18:31] <Geth_> ¦ doc: e3550209e6 | (Ben Davies)++ | doc/Type/Attribute.pod6

[18:31] <Geth_> ¦ doc: Mention :D types in the documentation for the "is required" trait

[18:31] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/e3550209e6

[18:31] <Geth_> ¦ doc: 56d61192cd | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/Attribute.pod6

[18:31] <Geth_> ¦ doc: Merge pull request #3301 from Kaiepi/is-required-smileys

[18:31] <Geth_> ¦ doc: 

[18:31] <Geth_> ¦ doc: Mention :D types in the documentation for the "is required" trait

[18:31] <linkable6> Link: https://docs.raku.org/type/Attribute

[18:31] <Geth_> ¦ doc: (Missed this before, sorry)

[18:31] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/56d61192cd

[18:32] <Geth_> ¦ doc: 622a8c5901 | (Ben Davies)++ | doc/Type/Parameter.pod6

[18:32] <Geth_> ¦ doc: Document how `is raw` behaves with slurpy list parameters

[18:32] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/622a8c5901

[18:32] <Geth_> ¦ doc: 828ca82032 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/Parameter.pod6

[18:32] <Geth_> ¦ doc: Merge pull request #3279 from Kaiepi/slurpy-is-raw

[18:32] <linkable6> Link: https://docs.raku.org/type/Parameter

[18:32] <Geth_> ¦ doc: 

[18:32] <Geth_> ¦ doc: Document how `is raw` behaves with slurpy list parameters

[18:32] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/828ca82032

[18:34] <cpan-raku> New module released to CPAN! Red (0.1.6) by 03FCO

[18:36] <[Coke]> should the *iml file be checked in?

[18:38] *** wamba left
[18:39] *** Altai-man_ joined
[18:41] <El_Che> no

[18:41] <El_Che> (if you're talking about intellij)

[18:42] *** sena_kun left
[18:43] <El_Che>  I add it with idea/ to my .gitignore

[18:46] *** AlexDani` joined
[18:48] *** AlexDaniel left
[18:59] <[Coke]> it's for comma, which I think is based on that.

[19:00] <[Coke]> Maybe a PR for Raku/doc is in order to remove it.

[19:02] <El_Che> yes, Comma is intellij. It good to have these kind of things in .gitignore with *.sw? for vim

[19:08] <[Coke]> I tend to prefer putting editor specific stuff locally rather than in the repo, but my opinion isn't that strong

[19:12] *** Success left
[19:13] *** Success joined
[19:33] *** xinming_ left
[19:34] *** xinming_ joined
[19:47] *** k-man joined
[19:48] *** k-man__ left
[19:51] <chloekek> If you put it in the repo then as time approaches infinity, so will the number of .gitignore entries.

[19:59] *** lucasb left
[19:59] *** stoned75 joined
[20:02] <Demos[m]> why do I loose the value of attributes initialized via "new" when I mixin a role?

[20:12] *** Black_Ribbon joined
[20:22] *** xinming_ left
[20:23] *** xinming_ joined
[20:23] *** vrurg_ is now known as vrurg

[20:31] *** dwarring left
[20:37] <chloekek> Demos[m]: can you give an example?

[20:38] *** aborazmeh joined
[20:38] *** aborazmeh left
[20:38] *** aborazmeh joined
[20:40] *** sena_kun joined
[20:42] *** Altai-man_ left
[20:45] *** caterfxo left
[20:49] *** rbtca left
[20:49] *** rbtca joined
[20:56] *** Success left
[20:57] *** Success joined
[21:06] *** xinming_ left
[21:06] *** xinming_ joined
[21:09] *** stoned75 left
[21:09] *** MasterDuke left
[21:10] *** rbtca left
[21:10] *** rbtca joined
[21:11] *** Actualeyes left
[21:16] *** rindolf left
[21:17] *** cognomin_ joined
[21:18] *** xinming_ left
[21:18] *** xinming_ joined
[21:19] *** Hexeratops left
[21:20] *** cognominal left
[21:24] *** molaf joined
[21:27] *** chloekek left
[21:43] *** natrys left
[21:43] *** pilne_ joined
[21:43] *** pilne left
[21:55] *** aborazmeh left
[22:03] *** holyghost left
[22:06] *** xinming_ left
[22:07] *** xinming_ joined
[22:20] *** MasterDuke joined
[22:31] *** __jrjsmrtn__ joined
[22:32] *** _jrjsmrtn left
[22:32] *** Success left
[22:34] *** chloekek joined
[22:36] *** pilne_ left
[22:37] *** pilne joined
[22:38] *** sena_kun left
[22:51] <chloekek> p6: say 'كرم'

[22:51] <camelia> rakudo-moar 3c83ce75a: OUTPUT: «كرم␤»

[22:52] <chloekek> Typing Arabic into the terminal is really weird because the cursor moves LTR whereas the text is rendered RTL

[22:54] <chloekek> And editing text in the middle is basically unusable, there are probably terminals out there that do it better though

[22:54] *** mowcat left
[23:04] *** Success joined
[23:07] *** lichtkind left
[23:24] *** Tirifto left
[23:33] *** hallobois joined
[23:33] *** hallobois left
[23:41] *** aborazmeh joined
[23:41] *** aborazmeh left
[23:41] *** aborazmeh joined
[23:42] *** pecastro left
