[00:28] *** ggoebel_ left
[00:32] *** BenGoldberg joined
[01:06] *** BenGoldberg left
[01:11] *** molaf left
[01:20] *** eseyman left
[01:24] *** molaf joined
[01:31] *** eseyman joined
[01:48] *** seanrobert joined
[01:48] *** seanrobert left
[01:49] *** seanrobert joined
[02:04] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:29] *** HarmtH_ joined
[02:30] *** HarmtH left
[02:44] *** seanrobert left
[02:54] *** seanrobert joined
[03:12] *** melezhik joined
[03:12] <melezhik> .tell lizmat I like this "Alexey's corner" idea in the last RW )))

[03:13] <tellable6> melezhik, I'll pass your message to lizmat

[03:16] *** cpan-raku left
[03:16] *** melezhik left
[03:16] *** cpan-raku joined
[03:16] *** cpan-raku left
[03:16] *** cpan-raku joined
[03:58] *** BenGoldberg joined
[04:00] *** aindilis` joined
[04:01] *** aindilis left
[04:04] *** aindilis` left
[04:17] *** mowcat left
[04:29] *** guifa joined
[04:32] *** BenGoldberg left
[04:32] *** frost-lab joined
[04:32] *** xelxebar left
[04:32] *** xelxebar joined
[04:37] *** frost-lab left
[04:40] <guifa> So weird.  I can sub EXPORT { ‘&foo’ => my token foo { … } } and the token is usable if I use Foo; inside of a grammar

[04:40] <guifa> But if I say “my method” instead of “my token”, it fails.

[04:40] <guifa> Nonetheless, with a regular class, “my method” works without problem

[04:48] *** frost-lab joined
[05:07] *** jmerelo joined
[05:12] <jmerelo> m say &do.^name

[05:12] *** RobRaku joined
[05:12] <jmerelo> m: say &do.^name

[05:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    do used at line 1. Did you mean 'so', 'dd'?␤␤»

[05:12] <jmerelo> m: say (&do).^name

[05:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    do used at line 1. Did you mean 'dd', 'so'?␤␤»

[05:12] *** Doc_Holliwood joined
[05:12] <jmerelo> m: say &do

[05:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    do used at line 1. Did you mean 'dd', 'so'?␤␤»

[05:12] <jmerelo> m: say &if

[05:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    if used at line 1␤␤»

[05:13] <jmerelo> say &say.^name

[05:13] <evalable6> jmerelo, rakudo-moar 409737062: OUTPUT: «Sub␤»

[05:13] <jmerelo> say &do.^name

[05:13] <jmerelo> m: say &do.^name

[05:13] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    do used at line 1. Did you mean 'dd', 'so'?␤␤»

[05:13] <jmerelo> m: say &if.^name

[05:13] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    if used at line 1␤␤»

[05:19] <jmerelo> m: say (do if True then 3).^name

[05:19] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3say (do if True7⏏5 then 3).^name␤    expecting any of:␤        block or pointy block␤        infix␤        infix stopper␤»

[05:20] <jmerelo> m: say with do if True then 3 say .^name

[05:20] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of bare "say".  In Raku please use: .say if you meant␤to call it as a method on $_, or use an explicit invocant or argument,␤or use &say to refer to the function as a noun.␤at <tmp…»

[05:20] <jmerelo> m: my $statement = do if True then 3 ; say $statement.^name

[05:20] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3my $statement = do if True7⏏5 then 3 ; say $statement.^name␤    expecting any of:␤        block or pointy block␤        infix␤        infix stopper␤»

[05:21] <jmerelo> m: my $statement = do if True 3 ; say $statement.^name

[05:21] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3my $statement = do if True7⏏5 3 ; say $statement.^name␤    expecting any of:␤        block or pointy block␤        infix␤        infix stopper␤»

[05:21] <jmerelo> m: my $statement = do if True {3} ; say $statement.^name

[05:21] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Int␤»

[05:21] <jmerelo> m: my &statement = do if True {3} ; say &statement.^name

[05:21] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Type check failed in assignment to &statement; expected Callable but got Int (3)␤  in block <unit> at <tmp> line 1␤␤»

[05:26] <jmerelo> m: my &ifs = { if $_ then {34} else {43}}; ifs(True).say

[05:26] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3my &ifs = { if $_7⏏5 then {34} else {43}}; ifs(True).say␤    expecting any of:␤        block or pointy block␤        infix␤        infix stopper␤»

[05:27] <jmerelo> m: my &ifs = { if $_ {34} else {43}}; ifs(True).say

[05:27] <camelia> rakudo-moar 85847d2f1: OUTPUT: «34␤»

[05:29] *** skids left
[05:30] <jmerelo> m: my &ifs = { if $_ {34} else {43}}; my $result = ifs(True).say; say $result

[05:30] <camelia> rakudo-moar 85847d2f1: OUTPUT: «34␤True␤»

[05:35] *** wamba joined
[05:42] <jmerelo> m: my @fors = ($_ *2 ) for ^4; say @fors

[05:43] <camelia> rakudo-moar 85847d2f1: OUTPUT: «[6]␤»

[05:43] <jmerelo> m: my @fors = (($_ *2 ) for ^4); say @fors

[05:43] <camelia> rakudo-moar 85847d2f1: OUTPUT: «[0 2 4 6]␤»

[05:53] *** seanrobert left
[05:56] *** aluaces left
[05:59] *** bocaneri joined
[06:07] *** bocaneri left
[06:08] *** bocaneri joined
[06:08] <Geth> ¦ doc: d9fef79582 | (JJ Merelo)++ | doc/Language/control.pod6

[06:08] <Geth> ¦ doc: Minor fixes

[06:08] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/d9fef79582

[06:09] <linkable6> Link: https://docs.raku.org/language/control

[06:18] *** Grrrr left
[06:18] *** Grrrr joined
[06:20] *** aluaces joined
[06:28] *** kini left
[06:36] *** kini joined
[06:45] *** guifa_ joined
[06:46] *** guifa left
[06:46] *** guifa_ is now known as guifa

[06:53] *** patrickb joined
[07:10] *** Sgeo left
[07:16] *** patrickb left
[07:23] *** BenGoldberg joined
[07:32] *** Doc_Holliwood left
[07:34] *** dakkar joined
[07:57] *** BenGoldberg left
[07:59] *** leah2 left
[08:00] *** guifa_ joined
[08:00] *** guifa left
[08:00] *** guifa_ is now known as guifa

[08:05] *** perigrin left
[08:06] *** perigrin joined
[08:19] *** domidumont joined
[08:22] *** pecastro joined
[08:43] *** bbkr joined
[08:45] *** bbkr left
[08:55] *** RobRaku left
[09:12] *** sena_kun joined
[09:12] *** leah2 joined
[09:24] *** ThaEwat left
[09:24] *** CIAvash left
[09:24] *** matiaslina left
[09:24] *** AlexDaniel` left
[09:24] *** unclechu left
[09:25] *** kiti_nomad[m] left
[09:25] *** JJAtria[m] left
[09:30] *** matiaslina joined
[09:33] * lizmat clickbaits https://rakudoweekly.blog/2020/10/19/2020-42-recipes/

[09:33] <tellable6> 2020-10-20T03:13:00Z #raku <melezhik> lizmat I like this "Alexey's corner" idea in the last RW )))

[09:37] *** ThaEwat joined
[09:37] *** unclechu joined
[09:37] *** kiti_nomad[m] joined
[09:37] *** AlexDaniel` joined
[09:37] *** CIAvash joined
[09:37] *** JJAtria[m] joined
[09:39] * lizmat wonders how many people got the https://en.wikipedia.org/wiki/Alexis_Korner reference :-)

[09:52] *** sno left
[10:05] *** RobRaku joined
[10:29] *** sno joined
[10:36] <cpan-raku> New module released to CPAN! Math::Libgsl::LinearAlgebra (0.0.2) by 03FRITH

[10:36] *** rindolf joined
[10:48] *** BenGoldberg joined
[11:03] *** [Sno] joined
[11:04] *** sno left
[11:15] <jmerelo> Just got my author copies of Raku Recipes. Here's the preface with ackowledgements https://www.flickr.com/photos/atalaya/50509188396/in/datetaken/ moritz++ (who not only introduced me to Apress, but was also reviewer), but also... xliff++, Altai-man++, and many others.

[11:22] *** BenGoldberg left
[11:22] *** vike left
[11:25] *** RobRaku left
[11:28] <lizmat> jmerelo++

[11:29] *** vike joined
[11:56] *** perryprog left
[11:57] *** perryprog joined
[11:58] *** jmerelo left
[12:05] *** frost-lab left
[12:18] *** natrys joined
[12:19] *** kylese joined
[12:27] *** seanrobert joined
[12:43] *** epony left
[12:56] *** epony joined
[12:56] *** epony left
[12:57] *** epony joined
[13:07] *** seanrobert left
[13:09] <[Coke]> ugh. edit a wiki via local git checkout. push. out of date. rebase. push. out of date. rebase. push. out of date.

[13:09] <[Coke]> (it worked the next time. :)

[13:10] <moritz> does it store the whole wiki in a git repo?

[13:10] <moritz> if so, every single page edit could lead to such a conflict. Not very scalable :D

[13:11] <[Coke]> moritz: it's azure devops wiki. if you're editing via the front end, I imagine it's a little smarter. 

[13:12] <moritz> at $work we have a DNS server with some 7k zone files, each versioned with RCS

[13:13] <moritz> we tried to a switch to git, but there are simply too many changes to make that scale, given that git always records changes as changes to the whole repo, not per file

[13:14] *** squashable6 left
[13:14] *** [Sno] left
[13:15] *** squashable6 joined
[13:17] <[Coke]> nifty.

[13:17] *** jmerelo joined
[13:20] *** moony left
[13:26] *** epony left
[13:30] *** domidumont left
[13:50] *** [Sno] joined
[13:51] *** Sgeo joined
[13:52] *** epony joined
[14:01] *** domidumont joined
[14:03] *** Doc_Holliwood joined
[14:03] *** aluaces left
[14:07] *** domidumont left
[14:08] <xinming> m: sub t ($x) { $x.say }; class A { has &.code; method ok () { &!code("ok") }; method nok() { $.code("nok") } }; my $t = A.new(:code(&t)); $t.ok; $t.nok

[14:08] <camelia> rakudo-moar 85847d2f1: OUTPUT: «ok␤Too many positionals passed; expected 1 argument but got 2␤  in method code at <tmp> line 1␤  in method nok at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:08] <tellable6> 2020-10-18T13:08:16Z #raku <tbrowder> xinming have you tried %?RESOURCES.keys to see whats there? do you have anything in your resources  dir? is resources mentioned in Meta file (not sure if that’s required)?

[14:08] <tellable6> 2020-10-18T14:02:44Z #raku <tbrowder> xinming see module RakuAdvent::Wordpress for an example of using %?RESOURCES

[14:08] <xinming> tbrowder: Thanks, will check it out

[14:09] <xinming> In this example, $!code("ok") work as expected, But why not the $.code("nok")?

[14:09] <xinming> m: sub t ($x) { $x.say }; class A { has &.code; method ok () { &!code("ok") }; method nok() { &.code("nok") } }; my $t = A.new(:code(&t)); $t.ok; $t.nok

[14:09] <camelia> rakudo-moar 85847d2f1: OUTPUT: «ok␤Too many positionals passed; expected 1 argument but got 2␤  in method code at <tmp> line 1␤  in method nok at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:10] <xinming> Shouldn't the &.code("nok") be the same as $!code("ok"), and not passing the self?

[14:11] *** domidumont joined
[14:11] <xinming> I think the reason &.code("nok") doesn't work is because, it's doing something like, $(&!code)(self, "nok")  not expected $($!code)("nok")  ??

[14:13] <lizmat> m: class A { has &.a }; dd A.new(a => * + *).a()(42,666)   # you need extra parens

[14:13] <camelia> rakudo-moar 85847d2f1: OUTPUT: «708␤»

[14:14] <lizmat> m: class A { has &.a }; dd A.new(a => * + *).a(42,666)

[14:14] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Too many positionals passed; expected 1 argument but got 3␤  in method a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:14] <lizmat> xinming: is that where you're getting at ?

[14:14] *** BenGoldberg joined
[14:14] *** aluaces joined
[14:14] *** cpage_ joined
[14:17] *** cpage left
[14:17] *** cpage_ is now known as cpage

[14:17] <xinming> lizmat: Thanks, Seems, still needs more understanding of the $.accessor

[14:18] <xinming> I thought $.accessor is something like, $(self.accessor)

[14:18] <xinming> $(self.accessor)("arg")

[14:28] *** domidumont left
[14:29] *** domidumont joined
[14:40] *** domidumont left
[14:47] *** BenGoldberg left
[14:47] <rir>  How to avoid this downward invasion: 'role Export {  method get-exportee-type { ... } }'?

[14:51] <moritz> rir: I don't quite understand the question, can you please elaborate?

[14:51] <Altreus> a role for each type?

[14:51] *** skids joined
[14:52] <lizmat> xinming: I think you understand the accessor correctly

[14:53] <lizmat> the accessor for &.a *does* just return the code object

[14:53] <rir> A supporting get-exportee-...  method seems needed to support the role's deferred method.  I'd like a mixin that doesn't require the under class to be instrumented.

[14:54] <lizmat> but if you say A.a, you are calling the *accessor* that does not take any arguments

[14:54] <guifa> jmerelo: I can haz signed copy? :-) 

[14:54] <Altreus> rir: are you saying that you don't want consuming classes to be required to implement get-exportee-type?

[14:54] <Altreus> as in forced to

[14:54] <lizmat> that is why you need to do A.new(a => *+*).a()  first to get the code object, and then pass (42.,666) to that code object

[14:54] <rir> Altreus: Yes. 

[14:55] * guifa slips jmerelo an extra duro y un culín de sidra asturiano fresco

[14:55] <Altreus> rir: well that's what ... means

[14:55] <Altreus> rir: don't put ... and then you simply have an empty default implementation

[14:56] <Altreus> these are the only options :)

[14:56] <rir> Altreus: Yes, but I need the class of the consuming object in the role consumed.

[14:56] <Altreus> I believe that can be expressed as ::?CLASS

[14:56] <Altreus> Where this does and doesn't work, I am uncertain

[14:57] <rir> That is a var I haven't tried.  I'll check it out and report shortly.

[14:57] <tobs> m: role Export { method get-exportee-type { ::?CLASS } }; class A does Export {}; say A.new.get-exportee-type

[14:57] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(A)␤»

[14:57] <Altreus> I guess I *can* retain information!

[14:58] <tobs> (I thought for sure this would say "Export" because I assumed ::?CLASS to be more lexical, but it's ::?CLASS after all and not ::?ROLE)

[14:58] <tobs> but good for you :-)

[14:58] <Altreus> and you called it on A, not Export

[14:58] <Altreus> m: role Export { method get-exportee-type { ::?ROLE } }; class A does Export {}; say A.new.get-exportee-type

[14:58] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(Export)␤»

[14:59] <Altreus> hmm

[14:59] <Altreus> m: class A { method a { ::?ROLE } }; say A.new.a

[14:59] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤No such symbol '::?ROLE'␤at <tmp>:1␤------> 3class A { method a { ::?ROLE7⏏5 } }; say A.new.a␤»

[14:59] <Altreus> aha

[15:00] <tobs> since get-exportee-type is a method, I think you could also refer to self.WHAT inside of its implementation in the role and get the type of invocant dynamically

[15:09] *** domidumont joined
[15:16] <guifa> Is there anyway to use a method to create a Match object that doesn’t destroy the caller’s $¢?  Apparently I’m doing something wrong and I’ve tracked it down to that

[15:17] <rir> Thanks tobs, Altreus.

[15:18] *** RobRaku joined
[15:18] <jmerelo> guifa hey. I guess you can. But you want me to mail it direct? Or you want me to store it for you for the next time we meet?

[15:18] <rir> In a more purely curious vein:  Why is ' in identifiers?  And does anyone use it in them?

[15:19] <jmerelo> I'm mailing one just today to tbrowder, so if it's the first, tell me now!

[15:19] <guifa> jmerelo: eh, I’d prefer the latter but given the virus I’m not holding out any hope of getting to the peninsula in the near future :-( 

[15:19] <jmerelo> rir: it's just cool. I seem to remember there was an explanation for it by Larry Wall somewhere. It's consistent with... something

[15:20] <rypervenche> rir: I imagine it would be useful to show possession, so probably not super useful until you need it. Then it makes it a bit clearer what it means.

[15:20] <guifa> so I’ll need to go with the first.  PM or e-mail me where I can pay you and I’ll do that right away

[15:20] <jmerelo> guifa: yep, that's the thing. Nor in-person Perl/Raku events. So best to nail it now. Email me your mail address

[15:21] <guifa> I know I’ve used a ‘ in an identifier before and was happy for it, but I can’t remember what it was exactly

[15:21] *** moony joined
[15:23] <guifa> Beyond English’s possession, both - and ‘ are used a lot in other languages, so it makes sense to include them if we’re also doing all the diacritics as valid identifiers too

[15:24] <guifa> my $to-bind; my $p’arreyar; 

[15:30] <rir> I don't object re: '.  I just haven't seen it in code yet.

[15:30] <jmerelo> m: my $se-h'acabat = True

[15:30] <camelia> rakudo-moar 85847d2f1: ( no output )

[15:32] <rir> Oops, I forgot that I had a motive beyond curiosity.  Is there an Identifer parser module?

[15:33] <guifa> You’d need to coopt the Raku grammar — modules can change the definition at runtime :-)

[15:33] <MasterDuke> the Test-Helper module in roast has things like `doesn't-warn`

[15:34] <MasterDuke> maybe Perl6::Parser has something

[15:34] <guifa> but the definition of an identifier is the following:

[15:34] <guifa> token identifier { <.ident> [ <.apostrophe> <.ident> ]* }

[15:34] *** domidumont left
[15:35] <guifa> ident is available to garden variety regexen, and apostrophe is just <[‘\-]>

[15:36] <rir> I will bow to greater wisdom, guifa, but that isn't a full and extended (versioned?) id definition is it?

[15:38] <Geth> ¦ ecosystem: hythm7++ created pull request #556: Re-add Pakku to the Ecosystem

[15:38] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/556

[15:38] <guifa> rir: that’s defined in the grammar as a name, which is defined as [<identifier> <morename>* | <morename>+]

[15:43] <rir> guifa: Thanks, I'll look at that.  With a good spot to start, maybe I'll find it more enlightning.

[15:45] <Geth> ¦ ecosystem: 7024dcdcca | (Haytham Elganiny)++ | META.list

[15:45] <Geth> ¦ ecosystem: Re-add Pakku to the Ecosystem

[15:45] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/7024dcdcca

[15:45] <Geth> ¦ ecosystem: 2192ce090b | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | META.list

[15:45] <Geth> ¦ ecosystem: Merge pull request #556 from hythm7/master

[15:45] <Geth> ¦ ecosystem: 

[15:45] <Geth> ¦ ecosystem: Re-add Pakku to the Ecosystem

[15:45] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/2192ce090b

[15:45] <tobs> rir: I remember seeing it here https://github.com/Raku/whateverable/blob/master/lib/Whateverable.pm6#L114

[15:46] <Altreus> can't help but notice guifa's apostrophe is a real apostrophe as well

[15:46] <tobs> what I like most about it being allowed in identifiers, though, is that this feature does not interfere with using ' as a prefix or postfix operator :-)

[15:47] <guifa> rir: <ident>, fwiw, is defined as /<:L+[_]> <:L+:Nd+[‘+]>*/

[15:47] <guifa> err

[15:48] <guifa> I mean /<:L+[_]> <:L+:Nd+[_]>*/

[15:48] <guifa> basically, alphabetic followed by alphanumeric and always allowing for an underscore

[15:52] <[Coke]> https://gist.github.com/coke/59b4024c1a03301a30044d775a4d68e7

[15:53] <guifa> [Coke] XD

[15:54] <[Coke]> (er, important bun-based update to App::Uni)

[16:00] <jmerelo> m: say Foo::Bar:ver<0> == Foo::Bar:ver<foo>

[16:00] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix == instead.␤at <tmp>:1␤------> 3say Foo::Bar:ver<0> ==7⏏5 Foo::Bar:ver<foo>␤»

[16:00] <jmerelo> m: say Foo::Bar:ver<0> ~~ Foo::Bar:ver<foo>

[16:00] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Expected a term, but found either infix ~~ or redundant prefix ~␤  (to suppress this message, please use a space like ~ ~)␤at <tmp>:1␤------> 3say Foo::Bar:ver<0> ~~7⏏5 Foo::Bar:ver<foo>␤»

[16:01] <rir> guifa: Got it.  That is in the docs as a 'Ordinary Identifier'.  I got a wee bit out of the grammar.  I go now to try to grow more.

[16:02] <guifa> Might take a look a bit at the Grammar.pm6 in the Rakudo source.  Everything is there except for the definition of <ident>, which is basically what I showed above

[16:07] <jmerelo> guifa: maybe in nqp?

[16:07] * jmerelo plugs new Raku book! Raku recipes is out! https://www.apress.com/gp/book/9781484262573

[16:12] <guifa> jmerelo: likely.  I need to go back at some poitn and review all of it for binex/objex

[16:19] *** sena_kun left
[16:20] *** sena_kun joined
[16:20] <tbrowder> m: say 'Foo::Bar:ver<0>' cmp 'Foo::Bar:ver<foo>'

[16:20] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Less␤»

[16:21] <tbrowder> m: say 'Foo::Bar:ver<0>'

[16:21] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Foo::Bar:ver<0>␤»

[16:21] <tbrowder> m: say Foo::Bar:ver<0>

[16:21] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Could not find symbol '&Bar:ver<0>' in 'Foo'␤  in block <unit> at <tmp> line 1␤␤»

[16:41] *** dakkar left
[17:02] *** approaching236 joined
[17:09] <cpan-raku> New module released to CPAN! hide-methods (0.0.1) by 03ELIZABETH

[17:10] <guifa> Apparently Match.pos == -3 is defined as a failed match

[17:10] <guifa> Are there any other special Match positional values?

[17:16] *** approaching236 left
[17:23] <guifa> grammar A { token a { a }; token TOP { <a> }; say &a }

[17:23] <guifa> m: grammar A { token a { a }; token TOP { <a> }; say &a }

[17:23] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    a used at line 1␤␤»

[17:24] <guifa> I thought tokens were routines?

[17:25] <guifa> m: grammar A { token a { a }; token TOP { <a> }; say A.^find_method('a') }

[17:25] <camelia> rakudo-moar 85847d2f1: OUTPUT: «token a { a }␤»

[17:25] <cpan-raku> New module released to CPAN! hide-methods (0.0.2) by 03ELIZABETH

[17:26] <guifa> Slow down lizmat, at that pace this evening we’ll be at 4.1.2 ;-)

[17:26] *** Doc_Holliwood left
[17:26] <lizmat> yeah... forgot to add some pod...  

[17:27] <lizmat> I'm done with it now, for the foreseeable future

[17:27] <lizmat> it was just some hacking around to see how for I'd get without using nqp  :-)

[17:33] <guifa> I’m doing a module right now that sounds like it will be similar

[17:34] <guifa> trying to make a longest/shortest alternation token

[17:34] <guifa> There are a few things I’d love to do to make it more powerful but might not be possible without really digging deep in the innards

[17:34] *** Doc_Holliwood joined
[17:39] *** BenGoldberg joined
[17:47] *** jmerelo left
[17:47] *** andrzejku joined
[17:57] *** xinming left
[17:57] *** BenGoldberg left
[17:57] *** BenGoldberg joined
[17:57] *** xinming joined
[18:06] *** BenGoldberg left
[18:06] *** Ben_Goldberg joined
[18:06] *** Ben_Goldberg is now known as BenGoldberg

[18:10] *** kylese left
[18:12] *** BenGoldberg left
[18:21] *** patrickb joined
[18:23] *** bocaneri left
[18:34] *** mowcat joined
[18:37] *** wamba left
[18:52] *** moony left
[18:56] *** wamba joined
[18:58] <[Coke]> anyone using mi6 to generate releases of raku modules?

[18:59] <[Coke]> wondering if https://github.com/skaji/mi6/issues/113 is biting anyone else

[19:02] <timotimo> i release json::fast with mi6

[19:06] *** moony joined
[19:06] *** leah2 left
[19:09] *** natrys left
[19:12] *** sena_kun left
[19:14] *** pecastro left
[19:16] <[Coke]> It looks like it's using the wrong lib to run the tests.

[19:16] <[Coke]> (maybe I've got a weird setup)

[19:27] <timotimo> you don't have a RAKULIB or so in your env?

[19:28] <[Coke]> if I'm running something directly I put it on the command lin

[19:28] <[Coke]> *e

[19:28] <[Coke]> given that mi6 wants everything in LIB, I'd expect it to handle that itself where needed. guess not?

[19:29] * [Coke] updates https://github.com/coke/raku-unicode-mangler with more stupid stuff.

[19:32] *** jmerelo joined
[19:40] *** jmerelo left
[19:44] *** rindolf left
[19:46] *** andrzejku left
[19:47] *** wamba left
[19:48] *** andrzejku joined
[19:51] <Doc_Holliwood> when you move your mouse from the upper left of your screens to the lower right, do you have to move your wrist?

[19:52] <Doc_Holliwood> bending does not count as movement, i mean changing the location on the desk

[19:54] * lizmat stopped using a mouse because of the onset of RSI

[19:54] * lizmat uses a trackpad for more than 18 years now

[19:55] <El_Che> I use a trackball home and at work

[19:56] <El_Che> (which nowadays are the sane place)

[19:56] <MasterDuke> no

[19:58] *** leah2 joined
[19:58] <El_Che> I only use a right hand mouse for gaming

[19:59] <El_Che> sometimes I use a mouse with my left hand 

[19:59] <Doc_Holliwood> i have a colleague who has his mouse set so that the corners of the mousepad and the corners of the screen match up

[19:59] <El_Che> maybe with those huge apple ones

[19:59] <Doc_Holliwood> i found that super weird, that must put so much strain on the arm

[20:00] <lizmat> fwiw, I have acceleration and double-click speed all set to max

[20:00] <lizmat> which means I only need a very small part of the touchpad to move the mouse all round the screen

[20:00] <Doc_Holliwood> same

[20:00] <El_Che> the fun of a track ball is that you can roll the ball to get fast somewhere

[20:01] <Doc_Holliwood> can you play with a trackball? like aiming?

[20:02] <El_Che> yes, you can, but I have a xbox controller for the computer

[20:02] <El_Che> better than mouse :)

[20:02] <Doc_Holliwood> heretic!

[20:02] <El_Che> for AOE trackball is ok, but often I use a mouse there

[20:02] <El_Che> (I literally play something every  months, so no RSI risk there)

[20:03] <El_Che> I have this one at home: :hierarchy: - "%{tier}" - "%{environment}" - common

[20:03] <El_Che> oops

[20:03] <El_Che> https://www.logitech.com/en-us/products/mice/mx-ergo-wireless-trackball-mouse.html?crid=7

[20:03] <El_Che> that one :)

[20:07] * [Coke] misses the trackball he had in the... 90s?

[20:07] <El_Che> I am a pretty fly for a 90s guy

[20:07] <El_Che> :)

[20:09] <El_Che> I think the one I use at work dates fron late that period

[20:09] <El_Che> it's a cabled one

[20:09] <El_Che> it even had a usb to serial-nouse-port converter

[20:09] <codesections> I've never done anything with fancy mouses/trackballs.  I did just get a new keyboard -- which I'm loving even though it means I (temporarily) can't type even half-decently 

[20:10] <El_Che> codesections: I moved from azerty to qwerty, I type funny stuff all the time

[20:10] <El_Che> https://www.ebay.com/p/1301857966 <-- the one I use at work

[20:10] <El_Che> 200$ + $76 additional costs on ebay

[20:10] <El_Che> cracy people

[20:10] <El_Che> z

[20:14] <[Coke]> heh. that logitech wheel looks VERY familiar. :)

[20:14] <El_Che> [Coke]: all the cool kids had them

[20:14] <El_Che> for some definition of cool :)

[20:14] <El_Che> the trackman wheel is indesctructible

[20:15] <El_Che> it still works while I already killed an Logitech M570

[20:15] *** |Sno| joined
[20:15] <El_Che> the double click of death

[20:16] <El_Che> https://www.amazon.com/Logitech%C2%AE-Cordless-TrackMan%C2%AE-Two-Button-Trackball/dp/B001ASC9BY 400$

[20:16] <El_Che> ok, there is a market of old nostalgic rich people :)

[20:18] *** [Sno] left
[20:24] *** kybr left
[20:33] *** Black_Ribbon joined
[20:39] *** bdju left
[20:49] *** bdju joined
[20:57] *** patrickb left
[21:04] *** BenGoldberg joined
[21:10] *** andrzejku left
[21:29] *** BenGoldberg left
[21:29] *** Ben_Goldberg joined
[21:29] *** Ben_Goldberg is now known as BenGoldberg

[21:38] *** BenGoldberg left
[21:40] *** aindilis joined
[22:40] *** linkable6 left
[22:40] *** evalable6 left
[22:41] *** linkable6 joined
[22:43] *** evalable6 joined
[22:44] *** mowcat left
[22:56] *** cpan-raku left
[22:56] *** cpan-raku joined
[22:56] *** cpan-raku left
[22:56] *** cpan-raku joined
[22:58] *** __jrjsmrtn__ joined
[22:59] *** _jrjsmrtn left
[23:33] *** nebuchadnezzar left
[23:34] *** nebuchadnezzar joined
[23:55] *** BenGoldberg joined
[23:59] *** netrino joined
