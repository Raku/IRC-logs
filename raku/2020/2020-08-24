[00:02] *** leont left
[00:11] *** finanalyst left
[00:24] *** aborazmeh joined
[00:24] *** aborazmeh left
[00:24] *** aborazmeh joined
[00:26] <[Coke]> looks like the \K is unneeded, I think.

[00:28] *** yuplushi joined
[00:36] *** dogbert17 joined
[00:38] *** aindilis joined
[00:39] *** dogbert11 left
[00:46] <Geth> ¬¶ doc/split-spell: 88870c79f7 | Coke++ | CONTRIBUTING.md

[00:46] <Geth> ¬¶ doc/split-spell: fix typo

[00:46] <Geth> ¬¶ doc/split-spell: review: https://github.com/Raku/doc/commit/88870c79f7

[00:46] <Geth> ¬¶ doc/split-spell: e09360e02a | Coke++ | 2 files

[00:46] <Geth> ¬¶ doc/split-spell: Keep spell check for 'code' separate

[00:46] <Geth> ¬¶ doc/split-spell: 

[00:46] <Geth> ¬¶ doc/split-spell: * Also convert to using supply/tap to queue tests

[00:47] <Geth> ¬¶ doc/split-spell: * more aggressively subst for \n and \t

[00:47] <Geth> ¬¶ doc/split-spell: review: https://github.com/Raku/doc/commit/e09360e02a

[00:47] <Geth> ¬¶ doc/split-spell: 94a481a30b | Coke++ | 2 files

[00:47] <Geth> ¬¶ doc/split-spell: None of these words are code-only

[00:47] <Geth> ¬¶ doc/split-spell: review: https://github.com/Raku/doc/commit/94a481a30b

[00:47] <timotimo> raku-advent.blog is having some trouble it seems like?

[00:50] <[Coke]> the speedup was a mistake on my part, it's no faster. ah well. :)

[00:56] *** zacts joined
[00:57] *** dogbert11 joined
[00:58] <Geth> ¬¶ doc: 88870c79f7 | Coke++ | CONTRIBUTING.md

[00:58] <Geth> ¬¶ doc: fix typo

[00:58] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/88870c79f7

[00:59] *** dogbert17 left
[01:16] *** dogbert17 joined
[01:18] *** dogbert11 left
[01:25] *** zacts left
[01:37] *** dogbert17 left
[01:38] *** molaf left
[01:40] *** zacts joined
[01:41] *** dogbert17 joined
[01:44] *** dogbert11 joined
[01:47] *** dogbert17 left
[01:50] *** molaf joined
[01:50] *** dogbert17 joined
[01:51] *** dogbert11 left
[01:52] *** dogbert11 joined
[01:53] *** zacts left
[01:53] *** zacts joined
[01:55] *** dogbert17 left
[01:59] *** dogbert11 left
[02:02] *** dogbert11 joined
[02:06] *** dogbert17 joined
[02:09] *** dogbert12 joined
[02:09] *** lucasb left
[02:09] *** dogbert11 left
[02:09] *** Noisytoot joined
[02:10] *** dogbert11 joined
[02:11] *** Noisytoot left
[02:11] *** dogbert17 left
[02:14] *** dogbert12 left
[02:18] *** dogbert17 joined
[02:19] *** dogbert11 left
[02:22] *** dogbert11 joined
[02:25] *** dogbert17 left
[02:26] *** seanrobert joined
[02:28] *** Cabanossi left
[02:28] *** Cabanossi joined
[02:29] *** dogbert17 joined
[02:33] *** dogbert11 left
[02:33] *** dogbert11 joined
[02:35] *** dogbert12 joined
[02:38] *** dogbert17 left
[02:38] *** dogbert11 left
[02:38] *** Altai-man joined
[02:40] *** terminatorul left
[02:40] *** sena_kun left
[02:47] *** AlexDani` joined
[02:49] *** AlexDaniel left
[02:57] *** zacts left
[03:10] *** seanrobert left
[03:12] *** seanrobert joined
[03:45] *** xelxebar left
[03:46] *** xelxebar joined
[04:05] *** aborazmeh left
[04:07] *** seanrobert left
[04:12] *** Cabanossi left
[04:14] *** codesections joined
[04:19] *** Cabanossi joined
[04:54] <Geth> ¬¶ problem-solving: fecundf assigned to jnthn Issue Introspection for operator precedence, associativity https://github.com/Raku/problem-solving/issues/222

[04:58] *** Archenoth joined
[05:28] *** gnufr33dom left
[05:33] *** andrzejku joined
[05:34] *** andrzejku left
[05:54] *** skids left
[06:02] *** wamba joined
[06:11] *** rindolf joined
[06:13] *** rindolf left
[06:16] *** rjeli left
[06:19] *** timeless left
[06:20] *** rjeli joined
[06:22] *** rjeli left
[06:24] *** rjeli joined
[06:25] *** timeless joined
[06:35] *** molaf left
[06:39] *** abraxxa joined
[06:39] *** sena_kun joined
[06:41] *** Altai-man left
[06:43] *** abraxxa left
[06:44] *** abraxxa joined
[06:55] *** Doc_Holliwould joined
[06:57] *** HrBollermann left
[06:58] *** dogbert17 joined
[07:02] *** dogbert12 left
[07:10] *** dogbert11 joined
[07:13] *** dogbert17 left
[07:15] *** xelxebar left
[07:16] *** xelxebar joined
[07:17] *** aluaces joined
[07:20] *** rindolf joined
[07:22] *** dogbert17 joined
[07:24] *** dogbert11 left
[07:29] *** Doc_Holliwould left
[07:31] *** moony left
[07:32] *** Sgeo left
[07:38] *** dakkar joined
[07:39] *** moony joined
[07:45] *** dogbert11 joined
[07:46] *** dogbert17 left
[07:46] *** pecastro joined
[07:47] *** dogbert17 joined
[07:49] *** maettu joined
[07:51] *** kensanata joined
[07:51] *** dogbert11 left
[07:51] *** sjm_uk left
[07:54] *** andrzejku joined
[08:04] *** molaf joined
[08:10] *** dogbert11 joined
[08:12] *** Cabanossi left
[08:14] *** Cabanossi joined
[08:14] *** dogbert17 left
[08:18] *** Doc_Holliwould joined
[08:27] *** leont joined
[08:37] *** Skarsnik joined
[08:41] <Skarsnik> Hello, I want a to sub to take Array of Couple of Int, but I am not sure how to type that in the signature Array of List of Int does not really work since List can't be parametred it seems

[08:41] <tellable6_> 2020-08-11T21:12:32Z #raku <tbrowder> Skarsnik see raku/doc pr #3554

[09:01] <lizmat> m: sub a(@a where all(@a) ~~ Int) { dd @a }; a (1,2,3); a <a b c>

[09:01] <camelia> rakudo-moar b00523061: OUTPUT: ¬´(1, 2, 3)‚ê§Constraint type check failed in binding to parameter '@a'; expected anonymous constraint to be met but got List (("a", "b", "c"))‚ê§  in sub a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:07] *** Doc_Holliwould left
[09:07] <Skarsnik> m: sub foo(**@a where {$_.all ~~ Array[Int]}) {for [@a] -> ($a, $b) {say $a, "plop", $b}}; foo ((1,2), (1,2));

[09:07] <camelia> rakudo-moar b00523061: OUTPUT: ¬´Constraint type check failed in binding to parameter '@a'; expected anonymous constraint to be met but got Array ([((1, 2), (1, 2)),])‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:08] <Skarsnik> The expected anonymous contraint message is kinda lta, should probably display the constraint?

[09:09] *** sena_kun left
[09:11] *** Kaiepi left
[09:14] <Skarsnik> :m sub foo(**@a where {$_.all ~~ Array[Int]}) {for [@a] -> ($a, $b) {say $a, "plop", $b}}; foo ((1,2), (1,2));

[09:14] <Skarsnik> err

[09:14] <Skarsnik> m: sub foo(**@a where all(@a) ~~ List){ {say @a.raku}}; foo ((1,2), (1,2));

[09:14] <camelia> rakudo-moar b00523061: OUTPUT: ¬´[((1, 2), (1, 2)),]‚ê§¬ª

[09:15] <Skarsnik> this is a really weird nested list x)

[09:15] *** sena_kun joined
[09:19] *** dogbert17 joined
[09:19] <MasterDuke> `(1,2), (1,2)` is just a List of Lists that happen to contain Int. if you constrain to Array[Int] you need to explicitly create them as such

[09:19] *** wamba left
[09:20] <Skarsnik> The issue you can't say List[Int]

[09:20] <Skarsnik> and I am not sure why everything end in @a[] 

[09:20] <Skarsnik> @a[0]

[09:21] *** dogbert11 left
[09:22] <MasterDuke> m: sub foo(+@a where all(@a) ~~ List){ {say @a.raku}}; foo ((1,2), (1,2));

[09:22] <camelia> rakudo-moar b00523061: OUTPUT: ¬´[(1, 2), (1, 2)]‚ê§¬ª

[09:23] <Skarsnik> Ho because I put a space between foo and ( x)

[09:23] <MasterDuke> ah

[09:24] <Skarsnik> m: sub foo(**@a) {say @a.raku; say @a[0];} ; foo 2, (1,2), (1,2);  foo (2, (1,2), (1,2)); foo(2, (1,2), (1,2))

[09:24] <camelia> rakudo-moar b00523061: OUTPUT: ¬´[2, (1, 2), (1, 2)]‚ê§2‚ê§[(2, (1, 2), (1, 2)),]‚ê§(2 (1 2) (1 2))‚ê§[2, (1, 2), (1, 2)]‚ê§2‚ê§¬ª

[09:25] *** cpan-raku left
[09:26] *** cpan-raku joined
[09:26] *** cpan-raku left
[09:26] *** cpan-raku joined
[09:27] <Skarsnik> Ok, now I am confused

[09:27] <Skarsnik> m: sub foo(**@a where all(@a) ~~ List<Int>) { say @a[0];} ; foo((1,2), (1,"kdj"));

[09:27] <camelia> rakudo-moar b00523061: OUTPUT: ¬´(1 2)‚ê§¬ª

[09:27] *** mark[m]5 joined
[09:28] *** AlexDani` is now known as AlexDaniel

[09:28] *** AlexDaniel left
[09:28] *** AlexDaniel joined
[09:38] *** maettu left
[09:39] *** maettu joined
[09:41] *** Kaiepi joined
[09:54] *** Doc_Holliwould joined
[09:54] *** maettu left
[10:10] *** Black_Ribbon left
[10:38] *** Altai-man joined
[10:40] *** sena_kun left
[10:42] *** kensanata left
[10:45] *** molaf left
[10:50] *** Doc_Holliwould left
[11:07] *** Skarsnik left
[11:26] <tbrowder> lizmat: hi, will your new allomorph class be in the upcoming release?

[11:27] <lizmat> that entirely depends on whether the PR will be merged  :-)

[11:52] *** maettu joined
[11:59] *** zacts joined
[12:19] *** zacts left
[12:20] *** maettu left
[12:21] *** zacts joined
[12:26] *** zacts left
[12:34] *** aborazmeh joined
[12:34] *** aborazmeh left
[12:34] *** aborazmeh joined
[12:38] <[Coke]> if I am using Proc::Async and writing to its stdin - do I have to do anything to flush it? Is just calling close-stdin sufficient to ensure all the input has been pushed?

[12:39] *** gordonfish joined
[12:40] <[Coke]> I'm seeing some weird failures in this test: https://github.com/Raku/doc/blob/split-spell/xt/aspell.t#L91 just wondering if I can rule that out

[12:45] *** molaf joined
[12:47] *** skids joined
[12:57] *** cpage joined
[12:57] <moritz> I wouldn't know what else to do

[12:59] *** gnufr33dom joined
[13:09] <[Coke]> ... wow. I just got a segfault in a very short program.

[13:11] <[Coke]> ... and now it's gone. wtf

[13:18] <mark[m]5> [Coke]: you're not in a ram-restricted context by any chance?

[13:18] <[Coke]> nope

[13:18] <mark[m]5> I've had segfaults on a raspberry pi (500Mb ram) for that reason before 

[13:18] <mark[m]5> just a suggestion :)

[13:19] *** maettu joined
[13:20] <[Coke]> can't do [cmp] @array -- "Cannot reduce with cmp because structural infix operators are diffy and not chaining" - is there a nice short syntax for chaining a sort comparison?

[13:20] *** zacts joined
[13:21] <[Coke]> rotor and map?

[13:23] <[Coke]> m: my @a=<1 2 3 4 6 5>; say [&&] @a.rotor(2 => -1).map({$_[0] < $_[1]})

[13:23] <camelia> rakudo-moar b00523061: OUTPUT: ¬´False‚ê§¬ª

[13:23] <[Coke]> m: my @a=<1 2 3 4 5 7>; say [&&] @a.rotor(2 => -1).map({$_[0] < $_[1]})

[13:23] <camelia> rakudo-moar b00523061: OUTPUT: ¬´True‚ê§¬ª

[13:26] *** Kaiepi left
[13:26] *** Kaiepi joined
[13:27] *** kensanata joined
[14:02] *** zacts left
[14:08] *** aborazmeh left
[14:10] *** andrzejku left
[14:10] <tbrowder> ref: allomorph class, i hope it will cure my comparison issues with mixed numbers and strings. i haven't been able to figure out why yet but your new class gives me hope.

[14:10] <lizmat> could you add a use case to the PR ?

[14:12] *** rindolf left
[14:19] *** aborazmeh joined
[14:19] *** aborazmeh left
[14:19] *** aborazmeh joined
[14:21] *** rindolf joined
[14:22] *** aborazmeh left
[14:30] *** vrurg_ joined
[14:30] *** vrurg left
[14:34] *** vrurg joined
[14:36] *** vrurg_ left
[14:39] *** sena_kun joined
[14:39] *** andrzejku joined
[14:40] *** Altai-man left
[14:46] *** gnufr33dom left
[14:52] *** robinsmidsrod joined
[14:54] *** xinming joined
[14:57] *** xinming_ left
[14:58] *** Kaeipi joined
[14:58] *** cooper left
[14:58] *** cooper joined
[14:58] *** spycrab0_ joined
[15:00] *** leont_ joined
[15:02] *** spycrab0 left
[15:02] *** spycrab0_ is now known as spycrab0

[15:03] *** Kaiepi left
[15:03] *** aluaces left
[15:03] *** leont left
[15:03] *** peteretep left
[15:03] *** caasih left
[15:04] *** peteretep joined
[15:04] *** skyl4rk left
[15:04] *** skyl4rk joined
[15:05] *** dudzHat joined
[15:06] *** dudz left
[15:07] *** DarthGandalf joined
[15:09] *** linkable6_ joined
[15:09] *** linkable6 left
[15:11] *** caasih joined
[15:12] *** aluaces joined
[15:22] *** codesections left
[15:22] *** timeless left
[15:22] *** rjeli left
[15:22] *** reportable6_ left
[15:22] *** mark[m]5 left
[15:22] *** moony left
[15:22] *** evalable6 left
[15:25] *** ChoppedBacon left
[15:26] *** ChoppedBacon joined
[15:28] *** codesections joined
[15:30] *** Doc_Holliwould joined
[15:33] *** timeless joined
[15:33] *** rjeli joined
[15:33] *** reportable6_ joined
[15:33] *** Grauwolf joined
[15:33] *** dylanwh joined
[15:33] *** Hotbees joined
[15:33] *** pnu__ joined
[15:34] *** mark[m]5 joined
[15:34] *** moony joined
[15:34] *** evalable6 joined
[15:34] *** bloatable6 joined
[15:34] *** notable6 joined
[15:34] *** committable6 joined
[15:34] *** coverable6 joined
[15:34] *** releasable6 joined
[15:34] *** AlexDaniel` joined
[15:34] *** riasue joined
[15:34] *** jhill joined
[15:34] *** tbrowder joined
[15:35] <[Coke]> ugexe++

[15:37] *** molaf left
[15:39] *** jhill left
[15:45] *** jhill joined
[15:47] *** thudergnat joined
[15:47] <thudergnat> m: #`[Numeric] say [<] <1 2 3 4 5 7 61>; say [<] <1 2 3 4 5 61 7>; #`[Stringy] say [lt] <1 2 3 4 5 7 61>; say [lt] <1 2 3 4 5 61 7>;

[15:48] <camelia> rakudo-moar b00523061: OUTPUT: ¬´Don't know setting RESTRICTED‚ê§   at gen/moar/ModuleLoader.nqp:249  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/Perl6/ModuleLoader.moarvm:previous_setting_name)‚ê§ from gen/moar/ModuleLoader.nqp:254  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/‚Ä¶¬ª

[15:48] <thudergnat> hmm.

[15:48] <thudergnat> m: say [<] <1 2 3 4 5 7 61>; say [<] <1 2 3 4 5 61 7>; say [lt] <1 2 3 4 5 7 61>; say [lt] <1 2 3 4 5 61 7>;

[15:48] <camelia> rakudo-moar b00523061: OUTPUT: ¬´True‚ê§False‚ê§False‚ê§True‚ê§¬ª

[15:49] <thudergnat> There doesn't seem to be any cmp equivalent to do a generic Alphanumeric order check though. 

[15:49] <thudergnat> [Coke] ^^

[15:50] *** thudergnat left
[15:56] *** maettu left
[16:16] *** sena_kun left
[16:16] *** Altai-man joined
[16:20] *** Chi1thangoo joined
[16:20] *** Sgeo joined
[16:21] *** seanrobert joined
[16:26] <[Coke]> oh, lt vs. cmp. I'm an idiot. Thank you. :)

[16:26] <[Coke]> thundergnat++

[16:30] *** zacts joined
[16:37] *** dakkar left
[16:42] *** JJMerelo joined
[16:42] <JJMerelo> And it's time again to answer Raku's user survey! Go to https://docs.google.com/forms/d/e/1FAIpQLSdRPBdn1iRN_sT8BMNMOBhVbEY1u8ngZWVwLyM37sqsa4OLwQ/viewform and register your answers! And thanks!

[16:42] <tellable6_> 2020-08-23T21:26:12Z #raku <tbrowder> jjmerelo my doc issue #3554 was fixed with a commit to master on 12 aug and i don't see it in the online docs. what did i do wrong?

[16:43] <JJMerelo> .tell tbrowder I'll generate and deploy now

[16:43] <tellable6_> JJMerelo, I'll pass your message to tbrowder

[16:44] <tbrowder> t'anks compadre

[16:44] <JJMerelo> tbrowder should be online now

[16:45] <JJMerelo> Sorry, I've been busy with... to many things I shouldn't have because holidays

[16:45] <JJMerelo> s/to/too/

[16:48] <tbrowder>  hm, cache may be causing no see...

[16:50] *** JJMerelo left
[16:58] <tbrowder> jjmerelo: i used the safari browser which i rarely use and still don't see the change on the nativecall page.

[16:59] <tellable6_> tbrowder, I'll pass your message to JJMerelo

[17:00] *** seanrobert left
[17:01] *** seanrobert joined
[17:06] *** seanrobert left
[17:09] *** andrzejku left
[17:13] *** zacts left
[17:25] *** kensanata left
[17:35] *** xelxebar left
[17:36] *** xelxebar joined
[17:49] <Geth> ¬¶ doc: codesections++ created pull request #3583: Document the `set` and `unset` SetHash methods

[17:49] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3583

[17:57] *** Juerd joined
[17:58] <Juerd> raku -I. causes rakudo to stat() everything in cwd, including all subtrees. This takes forever.

[17:58] <tadzik> oh wow

[17:58] <Juerd> Especially when running in homedir...

[17:59] <Juerd> Can someone run raku -I. -e1 with a current version to check if that's still present? I don't have a working build environment atm

[17:59] <Juerd> strace raku -I. -e1, probably :)

[17:59] <Juerd> Oh, it needs a use as well

[18:00] <Juerd> strace raku -I. -Mtest -e1

[18:03] *** terminatorul joined
[18:03] <Juerd> Also it's a slow implementation. find takes 18 seconds, fd -I takes less than 2 seconds, raku -I. -Mtest -e1 hasn't finished yet while I was running the other two :)

[18:05] <terminatorul> Hello guys !

[18:05] <terminatorul> I read in the modules documentation that .pm extension is "supported, but discouraged"

[18:05] <terminatorul> Do you know what's wrong with it ?

[18:06] <terminatorul> And what is going to happen exactly when it gets "obsoleted" in 6.f ?

[18:08] *** maettu joined
[18:10] <terminatorul> I mean, could .pm extension be "obsoleted, but will still work" for the foreseeable future ?

[18:11] <lizmat> Juerd: that's a consequence of -I

[18:12] <lizmat> it checksums all files in the given dir to be able to track changes that would invalidate precomps

[18:12] <CIAvash> terminatorul: https://github.com/Raku/problem-solving/blob/master/solutions/language/Path-to-Raku.md#extensions

[18:15] <rypervenche> terminatorul: The language name has changed from Perl 6 to Raku, so it makes sense for the file extensions to change as well.

[18:16] <hobbs> lizmat: wouldn't it be sufficient to have 1) checksums of files that actually get loaded, and 2) a list of names that were searched for and not found in that directory?

[18:18] <hobbs> and an invalidation would be if a checksum that was saved changed, or if a file that previously didn't exist (but could have been loaded) appeared

[18:19] <lizmat> hobbs: this has been debated extensively.  If you really would like to see this work better, get yourself versed into the ins and outs of precompilation

[18:19] <lizmat> and then suggest a PR  :-)

[18:25] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/08/24/2020-34-another-survey-time/

[18:28] *** Sauvin left
[18:29] *** patrickb joined
[18:30] <terminatorul> The language rename link is actually nice: "existing scripts continue to work without change in the foreseeable future"

[18:30] <terminatorul>  and ".pm, ... extensions could be marked as DEPRECATED"

[18:31] <lizmat> afk again&

[18:33] <terminatorul> I still think the module extension can not possible affect anyoune, so there is no need to remove it

[18:36] <Juerd> lizmat: I know it's a consequence of -I, but if this is by design, the design is awful :)

[18:37] <hobbs> lizmat: I'm not likely to have time for that in the next... year or so, so feel free to boil it down to "nope, that's wrong", "theoretically it's fine but impractical to implement", "you're breaking something else", or "it's a good idea, just requires a pile of work" :)

[18:38] <Juerd> Scanning an entire directory tree recursively should never be part of the startup of anything ever

[18:39] *** abraxxa left
[18:39] *** sena_kun joined
[18:40] *** Altai-man left
[18:40] *** abraxxa joined
[18:42] <codesections> If I have a 'Foo', what's the best way to tell if `::('Foo')` resolves to a Class or a Role?

[18:46] <timotimo> check what its HOW is?

[18:46] <codesections> m: my $name = 'Baggy'; say ?(::($name).HOW ~~ /Role/)

[18:46] <camelia> rakudo-moar b00523061: OUTPUT: ¬´True‚ê§¬ª

[18:47] <codesections> timotimo: as a Str with a Regex, like ^^^?

[18:50] <codesections> m: my $name = 'Baggy'; say ?(::($name).HOW ~~ ?(Baggy.HOW ~~ Metamodel::ParametricRoleGroupHOW | Metamodel::ParametricRoleHOW)

[18:50] <camelia> rakudo-moar b00523061: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in parenthesized expression; couldn't find final ')' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3GroupHOW | Metamodel::ParametricRoleHOW)7‚èè5<EOL>‚ê§   ‚Ä¶¬ª

[18:50] <timotimo> m: role TestRole {}; say TestRole.HOW; say Int.HOW eqv TestRole; say Positional eqv TestRole

[18:50] <camelia> rakudo-moar b00523061: OUTPUT: ¬´Perl6::Metamodel::ParametricRoleGroupHOW.new‚ê§False‚ê§False‚ê§¬ª

[18:50] <timotimo> m: role TestRole[T] {}; say TestRole.HOW; say Int.HOW eqv TestRole; say Positional eqv TestRole

[18:50] <camelia> rakudo-moar b00523061: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Invalid typename 'T' in parameter declaration.‚ê§at <tmp>:1‚ê§------> 3role TestRole[T7‚èè5] {}; say TestRole.HOW; say Int.HOW eqv ‚ê§¬ª

[18:50] <timotimo> m: role TestRole[$test] {}; say TestRole.HOW; say Int.HOW eqv TestRole; say Positional eqv TestRole

[18:50] <camelia> rakudo-moar b00523061: OUTPUT: ¬´Perl6::Metamodel::ParametricRoleGroupHOW.new‚ê§False‚ê§False‚ê§¬ª

[18:51] <timotimo> m: say TestRole.HOW; say Positional.HOW

[18:51] <camelia> rakudo-moar b00523061: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    TestRole used at line 1‚ê§‚ê§¬ª

[18:51] <timotimo> m: say Positional.HOW

[18:51] <camelia> rakudo-moar b00523061: OUTPUT: ¬´Perl6::Metamodel::ParametricRoleGroupHOW.new‚ê§¬ª

[18:51] <timotimo> AFK

[18:51] <timotimo> but

[18:51] <timotimo> m: use Perl6::Metamodel:from<NQP>; say Perl6::Metamodel::ParametricRoleHOW

[18:51] <camelia> rakudo-moar b00523061: OUTPUT: ¬´(ParametricRoleHOW)‚ê§¬ª

[18:52] *** maettu left
[19:05] *** dvonik joined
[19:05] <dvonik> hello

[19:05] <rypervenche> dvonik: Hi there.

[19:06] <dvonik> Hello, i was coming here to learn how to get started on freebsd

[19:07] <rypervenche> dvonik: You might take a look at this: https://fluca1978.github.io/2020/01/14/RakuOnFreeBSD.html

[19:07] <rypervenche> You'll want to use the latest version of Rakudo, however, not the version in that guide.

[19:07] <dvonik> ok

[19:09] *** terminatorul left
[19:15] *** sno left
[19:18] *** sno joined
[19:19] *** patrickb left
[19:19] *** patrickb joined
[19:20] *** Skarsnik joined
[19:39] <dvonik> thank you it built correctly!

[19:39] *** dvonik left
[20:01] *** aborazmeh joined
[20:01] *** aborazmeh left
[20:01] *** aborazmeh joined
[20:06] *** kensanata joined
[20:07] *** rindolf left
[20:11] <vrurg> patrickb: ping?

[20:12] <patrickb> pong

[20:15] <vrurg> patrickb: what do you think about completion by a substring? So that 2020.08 would propose both moar and jvm backends if available, for example.

[20:15] <patrickb> Can you rephrase that? I'm not sure I understand.

[20:16] <vrurg> rakubrew ver<tab> -> proposes "version versions rakubrew-version"

[20:16] <vrurg> rakubrew switch 2020.08<tab> -> "moar-2020.08 jvm-2020.08"

[20:16] <vrurg> Something like this. This is what fish does and its often pretty useful.

[20:19] <patrickb> vrurg: I think it might be possible to do. Possibly even in the other shells. Do you want to give it a try?

[20:20] <vrurg> patrickb: it's not a big deal. In either case you have a sequence of grep{ substr eq candidate } in almost every branch in get_completions. It worth moving out into a method and then the substring completion can be unified for all places.

[20:20] <vrurg> I'm gonna try it.

[20:21] <patrickb> vrurg++

[20:28] *** and_ joined
[20:30] *** molaf joined
[20:41] *** and_ left
[20:48] *** patrickb left
[20:51] <rypervenche> I think I should finally start doing the perl weekly challenges. Is there any point to doing older challenges, or should I just start with 75 and only do the new ones each week?

[20:58] *** dudzHat is now known as dudz

[20:58] *** dudz left
[20:58] *** dudz joined
[20:59] *** Black_Ribbon joined
[21:00] *** leont_ left
[21:17] *** aborazmeh left
[21:21] <Geth> ¬¶ doc/split-spell: 00c534d284 | (Nick Logan)++ (committed using GitHub Web editor) | xt/aspell.t

[21:21] <Geth> ¬¶ doc/split-spell: Refactor typo detectiont test

[21:21] <Geth> ¬¶ doc/split-spell: 

[21:21] <Geth> ¬¶ doc/split-spell: * Use absolute paths instead of relative paths

[21:21] <Geth> ¬¶ doc/split-spell: * Use a lock when writing to result hash to future-proof work loop for parallelization

[21:21] <Geth> ¬¶ doc/split-spell: * Use react/whenever instead of taps

[21:21] <Geth> ¬¶ doc/split-spell: review: https://github.com/Raku/doc/commit/00c534d284

[21:22] *** dogbert11 joined
[21:22] <[Coke]> woot!

[21:22] <lucs> rypervenche: The more you do, the more practice you get, eh.

[21:23] * lucs has done none so far, but is tempted with 75.

[21:24] *** dogbert17 left
[21:26] *** kensanata left
[21:36] <codesections>  Does anyone know if `Routine.candidates` is guaranteed to return the candidates in a particular order?

[21:52] *** rypervenche joined
[21:57] *** Skarsnik_ joined
[21:58] *** [Sno] joined
[22:00] *** Skarsnik left
[22:00] *** sno left
[22:38] *** Altai-man joined
[22:40] *** sena_kun left
[22:44] *** aluaces left
[22:45] *** bbkr joined
[22:51] <Geth> ¬¶ ecosystem: 19ffea1312 | (Pawel Pabian)++ (committed using GitHub Web editor) | META.list

[22:51] <Geth> ¬¶ ecosystem: Add Metropolis to the ecosystem

[22:51] <Geth> ¬¶ ecosystem: 

[22:51] <Geth> ¬¶ ecosystem: Generate a sequence of random samples from probability distribution function.

[22:51] <Geth> ¬¶ ecosystem: See https://github.com/bbkr/Metropolis .

[22:51] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/19ffea1312

[23:08] *** pecastro left
[23:29] *** aborazmeh joined
[23:29] *** aborazmeh left
[23:29] *** aborazmeh joined
[23:53] *** aborazmeh_ joined
[23:53] *** aborazmeh_ left
[23:53] *** aborazmeh_ joined
[23:53] *** aborazmeh left
[23:53] *** aborazmeh_ is now known as aborazmeh

[23:54] *** Doc_Holliwould left
[23:59] *** finsternis joined
[23:59] *** Altai-man left
[23:59] *** Skarsnik_ left
