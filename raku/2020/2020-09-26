[00:04] <guifa> tbrowder: hmm, do you think it may be an issue that needs to be solved in Inline::Perl5 or maybe in pack/unpack?

[00:04] *** MasterDuke left
[00:10] *** cooper joined
[00:15] *** cooper left
[00:24] *** approaching236 left
[00:25] *** approaching236 joined
[00:50] *** gabiruh left
[00:50] *** gabiruh joined
[00:50] *** leont left
[00:56] *** aborazmeh joined
[00:56] *** aborazmeh left
[00:56] *** aborazmeh joined
[01:12] *** molaf left
[01:14] *** silug left
[01:18] *** silug joined
[01:20] *** silug left
[01:23] *** ggoebel_ left
[01:23] *** ggoebel__ joined
[01:24] *** molaf joined
[01:24] *** silug joined
[01:25] *** guifa2 left
[01:29] <tbrowder> guifa: not sure.  when i say "unpack" i'm using my usual loose language to describe a

[01:30] *** silug left
[01:30] <tbrowder> process of reading the perl data into my own raku structures. i'm not unpack in the perl sense

[01:31] <tbrowder> *not using perl "unpack"

[01:36] *** silug joined
[02:02] *** lucasb left
[02:04] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:43] *** silug left
[02:45] *** silug joined
[02:57] *** cpan-raku left
[02:59] *** cpan-raku joined
[02:59] *** cpan-raku left
[02:59] *** cpan-raku joined
[03:59] *** linkable6 left
[03:59] *** evalable6 left
[03:59] *** unicodable6 left
[03:59] *** squashable6 left
[03:59] *** tellable6 left
[03:59] *** nativecallable6 left
[03:59] *** notable6 left
[03:59] *** releasable6 left
[03:59] *** committable6 left
[03:59] *** benchable6 left
[03:59] *** bisectable6 left
[03:59] *** shareable6 left
[03:59] *** bloatable6 left
[03:59] *** coverable6 left
[03:59] *** sourceable6 left
[03:59] *** greppable6 left
[03:59] *** quotable6 left
[03:59] *** statisfiable6 left
[03:59] *** unicodable6 joined
[03:59] *** sourceable6 joined
[04:00] *** evalable6 joined
[04:00] *** coverable6 joined
[04:00] *** nativecallable6 joined
[04:00] *** notable6 joined
[04:00] *** quotable6 joined
[04:00] *** bloatable6 joined
[04:01] *** statisfiable6 joined
[04:01] *** bisectable6 joined
[04:01] *** releasable6 joined
[04:01] *** shareable6 joined
[04:01] *** committable6 joined
[04:01] *** linkable6 joined
[04:01] *** squashable6 joined
[04:01] *** greppable6 joined
[04:02] *** tellable6 joined
[04:02] *** benchable6 joined
[04:34] *** frot-lab joined
[04:35] *** frot-lab left
[04:38] *** frot-lab joined
[05:11] *** bocaneri joined
[05:23] *** sjaveed left
[05:24] *** sjaveed joined
[05:45] *** Ben_Goldberg joined
[05:45] *** BenGoldberg left
[05:45] *** Ben_Goldberg is now known as BenGoldberg

[05:50] *** sjaveed left
[05:50] *** sjaveed joined
[05:55] *** aluaces joined
[05:56] *** skids left
[06:07] *** sena_kun joined
[06:09] *** rindolf joined
[06:16] *** sjaveed left
[06:30] *** kylese joined
[06:38] *** jmerelo joined
[06:40] <jmerelo> releasable6: status

[06:40] <tellable6> 2020-09-25T16:53:11Z #raku-dev <[Coke]> jmerelo - I did not suggest GPL - but as long as there's never any code submitted to this repo, that's fine.

[06:40] <releasable6> jmerelo, Next release will happen when it's ready. 2 blockers. Changelog for this release was not started yet

[06:40] <releasable6> jmerelo, Details: https://gist.github.com/64d0e55312b837f5c0e2ffd8e11012ff

[06:40] <sena_kun> jmerelo, release will be today, a bit later when I'll do my own stuff.

[06:52] *** bocaneri is now known as ^Sauvin^

[06:55] <jmerelo> sena_kun: I've seen you've done your magic with the Test::Fuzz. sena_kun++

[06:55] *** molaf left
[06:56] <jmerelo> I'm checking out some dependencies too. The one with Termbox is weird. I would say it's trying to Build before LibraryMake is available

[07:01] <jmerelo> .tell jjatria it's the first time I've seen a META6.json like this https://gitlab.com/jjatria/raku-termbox/-/blob/master/META6.json Where did you find the specs for that?

[07:01] <tellable6> jmerelo, I'll pass your message to jjatria

[07:06] <tobs> jmerelo: which part do you mean?

[07:07] <tobs> looks like each part is straight from https://docs.raku.org/language/modules#Preparing_the_module

[07:20] <jmerelo> tobs: check out the struture of the "depends" key. Instead of test-depends, build-depends it's a nested structure with build => runtime or build => test

[07:20] <jmerelo> tobs: ah, right, it's right there. That's not the worse, I wrote that.

[07:21] <jmerelo> .tell jjatria forget my previous question.

[07:21] <tellable6> jmerelo, I'll pass your message to jjatria

[07:22] <jmerelo> tobs: come to think of it, there's probably a "test" key missing there.

[07:40] *** BenGoldberg left
[07:43] <Geth> Â¦ ecosystem/JJ-patch-17: 1ad48f0b42 | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | META.list

[07:43] <Geth> Â¦ ecosystem/JJ-patch-17: Reissue Netstring

[07:43] <Geth> Â¦ ecosystem/JJ-patch-17: review: https://github.com/Raku/ecosystem/commit/1ad48f0b42

[07:43] <Geth> Â¦ ecosystem: JJ++ created pull request #542: Reissue Netstring

[07:43] <Geth> Â¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/542

[07:54] <sena_kun> jmerelo, Test::Fuzz was fixed by lizmat++

[07:54] <jmerelo> sena_kun: any way, good work :-)

[08:07] <jmerelo> OK, Netstring, on which a bunch of modules depended, has been reissued. Less "MissingDependencies" for next iteration of Blin.

[08:07] <jmerelo> Maybe we should try and go back to the "unbitrot" hackathons...

[08:16] <jmerelo> .seen tony-o

[08:16] <tellable6> jmerelo, I saw tony-o 2020-09-02T15:45:05Z in #raku: <tony-o> [Coke]++

[09:10] *** linkable6 left
[09:10] *** evalable6 left
[09:10] *** tellable6 left
[09:10] *** evalable6 joined
[09:11] *** linkable6 joined
[09:12] *** domidumont joined
[09:13] *** tellable6 joined
[09:32] *** wamba joined
[09:40] *** Altai-man joined
[09:43] *** sena_kun left
[09:47] *** kst joined
[10:03] *** leont joined
[10:12] *** Black_Ribbon left
[10:20] *** jmerelo left
[10:23] *** MasterDuke joined
[10:32] *** BenGoldberg joined
[10:33] *** Sgeo left
[10:34] *** molaf joined
[10:34] *** wamba left
[10:49] *** wamba joined
[11:05] *** BenGoldberg left
[11:20] <lizmat> Altai-man: thinking more about the Test::Fuzz fix, it *could* be that the regression was *not* actually caused by a problem

[11:20] <lizmat> but that the fuzzer generated code on which the StrDistance class was needing so much CPU, that it would time out the test

[11:21] <lizmat> because what I essentially did was that the work for creating suggestions was delayed to actually accessing the message / suggestions / tips

[11:21] <lizmat> rather than when the X::Method::NotFound object is created

[11:24] <Altai-man> lizmat, not truly able to comprehend this right now, does it change anything in the release I'm preparing to ship?

[11:25] <lizmat> no, the release is fine, but the fix is really a workaround

[11:25] <Altai-man> I see.

[11:25] <lizmat> the proper fix is probably speeding up StrDIstance and/or not trying to suggest methods if the name is too large

[11:26] <lizmat> the release is fine

[11:27] <Altai-man> Phew.

[11:28] <lizmat> sorry didn't mean to upset you...it's just that something in the back of my mind went on trying to figure out *why* the fix I did worked

[11:29] <lizmat> I don't like it when I don't understand why fixes work

[11:29] <Altai-man> No worries, it's not that I'm particularly upset.

[11:29] <Altai-man> And when the release is shipped there is time to investigate this again.

[11:32] *** ensamvarg195 joined
[11:44] *** ensamvarg195 left
[11:53] *** frot-lab left
[12:44] *** domidumont left
[13:32] *** BenGoldberg joined
[13:37] *** ssm_ left
[13:37] *** jcallen_ left
[13:37] *** DarthGandalf left
[13:37] *** jcallen joined
[13:37] *** DarthGandalf joined
[13:37] *** ssm_ joined
[13:41] *** sena_kun joined
[13:43] *** Altai-man left
[14:35] *** Xliff joined
[14:43] *** molaf left
[15:10] *** Sgeo joined
[15:14] *** xinming_ joined
[15:17] *** xinming left
[15:20] *** sjaveed joined
[15:24] *** sjaveed left
[16:09] *** aluaces left
[16:13] *** BenGoldberg left
[16:13] *** Ben_Goldberg joined
[16:13] *** Ben_Goldberg is now known as BenGoldberg

[16:29] *** Xliff left
[16:40] *** aindilis joined
[16:46] *** sjaveed joined
[16:50] *** sjaveed left
[17:05] *** wamba left
[17:16] *** aluaces joined
[17:23] *** nige_ left
[17:25] *** nige joined
[17:25] *** mark[m]1 joined
[17:36] *** kylese left
[17:43] *** sena_kun left
[17:45] *** sena_kun joined
[17:47] *** gfldex left
[17:51] *** pepl left
[17:51] *** gfldex joined
[18:02] *** sjaveed joined
[18:06] *** sjaveed left
[18:07] *** mowcat left
[18:08] <Geth> Â¦ ecosystem: hythm7++ created pull request #543: Add new modules

[18:08] <Geth> Â¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/543

[18:43] <xinming_> red: https://termbin.com/7i8k

[18:44] <xinming_> SmokeMachine: https://termbin.com/7i8k   <--- This example script would cause system exhausts all it's memory

[18:44] <xinming_> If you have time, Please take a look. ;-)

[18:45] <xinming_> I'm trying with the newest branch, I don't know if it's a rakudo bug or a Red but

[18:48] *** parabolize left
[18:52] <SmokeMachine> xinming_: Iâ€™ll try to take a look as soon as possible. (Sorry, Iâ€™ve been too busy with day job)

[18:58] *** molaf joined
[19:41] *** mowcat joined
[19:45] *** rindolf left
[19:50] *** Black_Ribbon joined
[19:56] *** maggotbrain left
[19:56] *** defaultxr left
[19:57] *** maggotbrain joined
[20:03] *** defaultxr joined
[20:03] *** defaultxr left
[20:04] *** defaultxr joined
[20:21] *** Kaeipi left
[20:49] *** ex_nihilo joined
[21:08] *** sena_kun left
[21:21] *** sjaveed joined
[21:32] *** BenGoldberg left
[21:32] *** Ben_Goldberg joined
[21:32] *** Ben_Goldberg is now known as BenGoldberg

[21:35] *** BenGoldberg left
[21:35] *** Ben_Goldberg joined
[21:35] *** Ben_Goldberg is now known as BenGoldberg

[21:38] *** finsternis joined
[21:44] *** leont left
[21:50] *** aluaces left
[21:55] *** BenGoldberg left
[21:55] *** Ben_Goldberg joined
[21:55] *** Ben_Goldberg is now known as BenGoldberg

[21:58] *** cooper joined
[22:15] *** parabolize joined
[22:33] *** cpan-raku left
[22:35] *** cpan-raku joined
[22:35] *** cpan-raku left
[22:35] *** cpan-raku joined
[22:41] *** sjaveed left
[22:41] *** sjaveed joined
[22:46] *** sjaveed left
[22:54] *** nosqrt joined
[23:02] *** rir joined
[23:03] *** rir left
[23:13] *** mrsolo left
[23:14] *** mrsolo joined
[23:18] *** nosqrt left
[23:25] *** sjaveed joined
[23:25] <timotimo> "exhaust system memory very quickly" is quite often infinite recursion

[23:26] <timotimo> i think it's the fastest way moarvm knows how to allocate loads of memory, other than "create very big array"

[23:33] *** sjaveed left
[23:40] *** mowcat left
[23:48] *** skids joined
[23:53] *** cooper left
[23:56] *** xelxebar left
[23:57] *** xelxebar joined
