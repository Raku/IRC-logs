[00:05] *** mowcat left
[00:29] *** stoned75_ left
[00:31] *** Grrrr joined
[00:35] *** xinming left
[00:35] *** xinming joined
[00:38] *** gnufr33dom joined
[01:01] *** devmikey joined
[01:13] *** Merfont joined
[01:13] *** Kaeipi left
[01:34] <timotimo> BagHash(0(781) 1(109065) 2(44) 3(99) 6(11)) - this is how often which length of array we get from combing CIGAR by \d+ )> <-[I]>

[01:38] <timotimo> BagHash(1(781) 11(11) 16(11) 3(109065) 7(66) 8(66)) - these are the lengths of CIGAR strings after they had stuff s///'d out; sadly, there's only a tiny amount of one-letter strings, so skipping the comb if the string is too short to have both a digit and a letter doesn't do anything for us

[01:38] *** thundergnat left
[01:39] <timotimo> it occurs to me that any two digit number even if followed by an I will be picked up, but only the first digit (since the second digit satisfies the "is not an I" condition in the regex

[01:48] *** molaf left
[01:54] *** Redfoxmoon left
[01:55] *** Redfoxmoon joined
[02:00] *** molaf joined
[02:00] *** pilne left
[02:09] *** aborazmeh left
[02:10] *** mahafyi left
[02:29] *** squashable6 left
[02:31] *** squashable6 joined
[02:39] *** aborazmeh joined
[02:39] *** aborazmeh left
[02:39] *** aborazmeh joined
[03:02] *** devmikey left
[03:09] *** melezhik left
[03:12] <[Coke]> can I declare that an array is multi-dim without being specific about how big?

[03:12] <[Coke]> (I know it's 2-D. I want to be able to decide at runtime if it's a 6x6 or a 9x9, e.g.)

[03:21] *** k-man left
[03:24] *** k-man joined
[03:26] *** xinming left
[03:27] *** xinming joined
[03:46] *** aborazmeh left
[03:46] *** aborazmeh joined
[03:46] *** aborazmeh left
[03:46] *** aborazmeh joined
[03:56] *** molaf left
[03:59] *** brtastic joined
[04:06] <samebchase-> timotimo: thanks for the tip suggesting Data::Dump::Tree looks great!

[04:11] *** Celelibi left
[04:13] *** aborazmeh left
[04:17] *** brtastic left
[04:18] *** Celelibi joined
[04:35] *** marcusr left
[04:35] *** marcusr joined
[04:48] *** Redfoxmoon left
[04:48] *** Redfoxmoon joined
[04:49] *** wamba joined
[04:51] *** wamba left
[04:54] <Doc_Holliwood> As usual I'm looking at my challenge code and am not sure wether i like it or not

[04:55] *** Xliff left
[05:04] *** IrinaMats joined
[05:07] *** marcusr left
[05:07] *** IrinaMats left
[05:07] *** marcusr joined
[05:34] *** sauvin joined
[05:42] *** jjmerelo joined
[05:43] *** Sgeo__ left
[05:44] *** Sgeo__ joined
[05:51] <Geth> ¦ doc/master: 5 commits pushed by (Aaron Sherman)++, (Juan Julián Merelo Guervós)++

[05:51] <Geth> ¦ doc/master: 97faa4de37 | Docs for \c, \C, \x and \X

[05:51] <Geth> ¦ doc/master: 56f3241589 | Use \c: point of the example

[05:51] <Geth> ¦ doc/master: d9869e4e61 | clarify statement

[05:51] <Geth> ¦ doc/master: 47b21ab257 | type: X around xref not C

[05:51] <Geth> ¦ doc/master: 7cdacfb2f1 | Merge pull request #2952 from ajs/character-escapes-x-and-c

[05:51] <Geth> ¦ doc/master: review: https://github.com/Raku/doc/compare/68237e2e920a...7cdacfb2f164

[05:52] *** squashable6 left
[05:53] *** squashable6 joined
[05:58] <Geth> ¦ doc/update-rakudo-history: ae345eb82f | (Stoned Elipot)++ | doc/Programs/03-environment-variables.pod6

[05:58] <Geth> ¦ doc/update-rakudo-history: Update RAKUDO_HIST's default value

[05:58] <Geth> ¦ doc/update-rakudo-history: review: https://github.com/Raku/doc/commit/ae345eb82f

[05:58] <Geth> ¦ doc: stoned++ created pull request #3364: Update RAKUDO_HIST's default value

[05:58] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3364

[05:59] *** stoned75 joined
[06:00] *** sjm_uk joined
[06:12] <Geth> ¦ doc: bc021b042d | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | .github/ISSUE_TEMPLATE/bug-report-or-feature-request.md

[06:12] <Geth> ¦ doc: Update the issue template

[06:12] <Geth> ¦ doc: 

[06:12] <Geth> ¦ doc: This closes #2904, since the PR template does not have any problem.

[06:12] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/bc021b042d

[06:12] <linkable6> DOC#2904 [closed]: https://github.com/Raku/doc/issues/2904 [meta] New GitHub issue and PR template

[06:14] <Geth> ¦ doc: 2cf814867e | (JJ Merelo)++ | .github/issue_template.md

[06:14] <Geth> ¦ doc: Deletes old issue template, deprecated, refs #2904

[06:14] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/2cf814867e

[06:15] <Geth> ¦ doc: ae345eb82f | (Stoned Elipot)++ | doc/Programs/03-environment-variables.pod6

[06:15] <Geth> ¦ doc: Update RAKUDO_HIST's default value

[06:15] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/ae345eb82f

[06:15] <Geth> ¦ doc: 585c04c7f0 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Programs/03-environment-variables.pod6

[06:15] <Geth> ¦ doc: Merge pull request #3364 from Raku/update-rakudo-history

[06:15] <Geth> ¦ doc: 

[06:15] <Geth> ¦ doc: Update RAKUDO_HIST's default value

[06:15] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/585c04c7f0

[06:17] *** xinming left
[06:19] *** kensanata joined
[06:19] *** xinming joined
[06:20] *** andrzejku joined
[06:22] *** softmoth left
[06:30] *** Doc_Holliwood left
[06:37] *** ufobat joined
[06:43] *** andrzejku left
[06:49] *** stoned75 left
[06:49] *** stoned75 joined
[06:59] *** rindolf joined
[06:59] *** brtastic joined
[07:02] *** andrzejku joined
[07:03] *** kalkin joined
[07:03] <kalkin> hi

[07:03] <tellable6> 2019-12-26T18:52:29Z #raku <jmerelo> kalkin- we all need more magic :-)

[07:04] <kalkin> I just wanted to say that the current rakudo/nqp/moarvm version (2020.05) gave my git implementation in raku a speed-up of around 29%

[07:05] <kalkin> My educated guess is: it's mostly because of speed ups in push/append/unshift

[07:12] <jjmerelo> kalkin cool!

[07:17] *** pecastro joined
[07:19] *** gordonfish left
[07:27] *** CarlyLauren joined
[07:28] *** stoned75 left
[07:29] *** CarlyLauren left
[07:30] *** stoned75 joined
[07:37] <MasterDuke> kalkin: cool. is it a published module?

[07:39] <kalkin> not yet. I only have read-only handling of git plumbing

[07:40] <kalkin> reading packfiles was tricky, because the process of parsing them, is blatantly underdocumented

[07:40] <kalkin> I'm not even sure how useful it is, because of it's performance. I mostly use it as reference implementation of the git packformat, because I added extensive documentation in POD format to it

[07:41] <MasterDuke> ha. oh well, sounds like a fun project regardless

[07:44] <kalkin> yes, this was my christmas project :)

[07:52] <MasterDuke> i once implemented DES in pure Perl (5, this was before 6/Raku existed) for fun and then added a PerlQT gui on top. it was...not fast. but an interesting learning experience

[07:56] *** patrickb joined
[08:31] *** xelxebar_ joined
[08:32] *** xelxebar left
[08:34] <Geth> ¦ problem-solving: JJ assigned to jnthn Issue Should we make short-id2class accessible? https://github.com/Raku/problem-solving/issues/189

[08:39] *** rindolf left
[08:47] *** stoned75 left
[08:47] *** stoned75 joined
[08:56] <AlexDaniel> jjmerelo: maybe take a break? I'm no longer able to follow x)

[08:57] *** MasterDuke left
[08:57] <jjmerelo> AlexDaniel well... I was gonna start with the old issue tracker now...

[08:57] *** kalkin left
[08:57] <AlexDaniel> jjmerelo: do it, give us a break with PRs…

[09:00] <AlexDaniel> jjmerelo: sometimes there's a better answer than just “conflicts! Closing!!” https://github.com/rakudo/rakudo/pull/543#issuecomment-624526701

[09:01] <jjmerelo> And that one is, indeed, AlexDaniel. However, even if that was not the case, it's not just conflicts, closing. It's very old conflicts (before renaming) that have not been addressed by the OP

[09:05] <AlexDaniel> jjmerelo: and also, in almost all cases the conflicts can be resolved, so I don't understand what's the big deal about it

[09:05] *** farcas1982regreg joined
[09:05] <AlexDaniel> in some cases it's just a matter of using a different merge strategy

[09:06] *** Altai-man_ joined
[09:06] <AlexDaniel> so literally one command away from being merged

[09:06] <jjmerelo> AlexDaniel if it can be fixed, I try to fix it. In other cases, and even more so if there's additional problem (like needed consensus), I close and open a problem-solving issue.

[09:07] <AlexDaniel> I haven't really stumbled upon an old PR with conflicts that cannot be solved

[09:08] <jjmerelo> AlexDaniel conflicts are anyway an indicator it needs additional attention before it can be considered for approval, anyway. You need to give someone a chance to do that.

[09:08] <AlexDaniel> it's other way around

[09:08] <jjmerelo> AlexDaniel well, I have... 

[09:09] <AlexDaniel> there's no point fixing the conflicts every month when nobody is even trying to decide whether it will be merged in the end

[09:10] <jjmerelo> AlexDaniel exactly.

[09:11] <AlexDaniel> listen, if I see another comment saying “conflicts” I'll really flip out

[09:11] <jjmerelo> AlexDaniel ack

[09:11] <AlexDaniel> thank you

[09:12] <AlexDaniel> I think the progress so far is great, 100→69 is insanely great

[09:12] <jjmerelo> AlexDaniel but we need to take it easier now. Ack.

[09:13] *** robertle joined
[09:15] <AlexDaniel> jjmerelo: another thing is that we might be reaching our limits now, we should take it slow and encourage others to take a look

[09:15] <AlexDaniel> jjmerelo: but that's hard to do when there's notification spam

[09:15] <AlexDaniel> slow and steady is probably better from now on

[09:16] <robertle> I am having trouble with p6doc, perhaps anyone has seen this? so I do a "zef install p6doc", which seems  to work. "p6doc build" comes back after a few seconds ok, yet "p6doc Str" does not show anything, neither does "p6doc list"...

[09:16] <jjmerelo> robertle it simply does not work.

[09:17] <robertle> also this jjmerelo/perl6-doc docker container, which registry should it be on? hub.docker.com? I can't find it at all...

[09:17] <jjmerelo> robertle it's pending the merging of the work done in GSoC

[09:17] <robertle> darn, well ok

[09:17] <jjmerelo> robertle it should be there...

[09:18] <jjmerelo> robertle I don't know if it's updated, though...

[09:18] <jjmerelo> robertle sorry about that...

[09:18] <robertle> I'll use the online version for now, it's just that I have really shitty internet here

[09:18] <robertle> no worries

[09:18] <jjmerelo> robertle it should be relatively easy to build your own.

[09:19] <robertle> I tried, but getting node10 with all the deps over edge is no fun :P

[09:19] <jjmerelo> right... That's only needed for syntax highlighting... 

[09:20] <jjmerelo> But I seem to remember there was an option to avoid that. Let me see.

[09:20] <robertle> ah, so it builds without node?

[09:21] <jjmerelo> by default, if you don't use highlight for code, it shouldn't need it... I'm not sure that the code path will actually need it somewhere.

[09:21] <robertle> I'll play around with it a bit

[09:21] <jjmerelo> Can you please check to build it without highlight? Simply don't do --highlight 

[09:21] <jjmerelo> And if it gets stuck, please raise an issue... 

[09:22] <robertle> will do

[09:22] <jjmerelo> Maybe we should also automatically create a tarball of every new build and make it available. Would that help?

[09:24] <robertle> dunno, the whole thing seems basically fine apart from the current breakage

[09:24] <jjmerelo> Sorry about that...

[09:25] *** stoned75 left
[09:26] *** stoned75 joined
[09:27] *** sena_kun joined
[09:28] *** Altai-man_ left
[09:32] *** MasterDuke joined
[09:36] <robertle> not at all!

[09:41] *** rindolf joined
[09:46] <robertle> totally different question: has anyone got ideas or experiences with reporting errors from deep witin a cro application? I am thinking I would throw typed exceptions, catch them in the router and then depending on the type do not-found(), bad-rerquest or so with a suitable body. does that make sense?

[09:50] <robertle> hm, is it usual that "zef install documentable" takes a really long time? some rakudo is doing something quite heavily and with lots of ram, but it has been doing that for 10min now...

[09:52] *** mjsir911 joined
[09:52] <jjmerelo> Which version? It should not...

[09:54] <robertle> first of all Pod::To:Caches 0.3.5 fails it's tests, I overrode that with --force-test

[09:54] <robertle> Documentable is 1.2.5

[09:55] <jjmerelo> I think we'll need to take care of Pod::To::Cached

[09:55] <robertle> towards the end it says "(warning) html and/or assets and/or templates directories cannot be found. You can get the defaults by executing: documentable setup"

[09:55] <robertle> and then just hangs there. top shows a very busy rakudo, not sure what it does

[09:58] <jjmerelo> Can you please raise the issue? https://github.com/perl6/Pod-To-Cached/issues?q=is%3Aopen+is%3Aissue

[09:59] <jjmerelo> Current version, however, is 0.4.0

[09:59] <jjmerelo> (But I just merged a PR) 

[10:00] <jjmerelo> It apparently installs without a problem with 2020.05

[10:01] <jjmerelo> ... but then Documentable does not...

[10:02] <jjmerelo> and it hangs... 

[10:02] *** robertle left
[10:02] *** robertle joined
[10:02] <jjmerelo> So it's a documentable issue. I'll create an issue. Thanks for reporting.

[10:02] <robertle> haha, now it has successfully overheated my shitty notebook :)

[10:03] <robertle> I'll play with the docs some more another day, and report issues. but not now, need to get back on track of what I was trying to do *with* the docs :)

[10:04] <robertle> laters!

[10:04] *** robertle left
[10:04] <jjmerelo> Thanks anyway for checking this...

[10:14] *** Altai-man_ joined
[10:16] *** mowcat joined
[10:17] *** sena_kun left
[10:30] <Geth> ¦ doc/type-set-perl-to-raku: 63c6ee79d3 | (Stoned Elipot)++ | doc/Type/Set.pod6

[10:30] <Geth> ¦ doc/type-set-perl-to-raku: Change .perl to .raku, ref #3309

[10:30] <Geth> ¦ doc/type-set-perl-to-raku: review: https://github.com/Raku/doc/commit/63c6ee79d3

[10:30] *** sftp left
[10:31] <Geth> ¦ doc: stoned++ created pull request #3365: Change .perl to .raku, ref #3309

[10:31] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3365

[10:31] <linkable6> DOC#3309 [open]: https://github.com/Raku/doc/issues/3309 [docs][update] Change .perl to .raku in examples

[10:31] <Geth> ¦ doc: 63c6ee79d3 | (Stoned Elipot)++ | doc/Type/Set.pod6

[10:31] <Geth> ¦ doc: Change .perl to .raku, ref #3309

[10:31] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/63c6ee79d3

[10:31] <Geth> ¦ doc: 7915bd5b22 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/Set.pod6

[10:31] <Geth> ¦ doc: Merge pull request #3365 from Raku/type-set-perl-to-raku

[10:31] <Geth> ¦ doc: 

[10:31] <Geth> ¦ doc: Change .perl to .raku, ref #3309

[10:31] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7915bd5b22

[10:32] <linkable6> Link: https://docs.raku.org/type/Set

[10:33] *** mowcat left
[10:33] *** mowcat joined
[10:34] <El_Che> jjmerelo: you're on a roll :)

[10:38] *** mahafyi joined
[10:48] *** jjmerelo left
[10:50] *** Doc_Holliwood joined
[10:51] *** xinming_ joined
[10:54] *** xinming left
[11:01] *** jjmerelo joined
[11:36] *** andrzejku left
[11:39] *** Black_Ribbon left
[11:43] *** andrzejku joined
[11:45] <patrickb> .tell lembark I think I know where that strange "/root/project/rakudo-2020.02.1" path you observed during the build process came from. That's the path the precompiled rakudo releases are built in. So somehow one of those ended up being used in the build process.

[11:45] <tellable6> patrickb, I'll pass your message to lembark

[12:09] <rypervenche> The default <ws> in a grammar is set to "<!ww> \s*", right?

[12:11] <rypervenche> Or more specifically, according to the docs: regex ws { <!ww> \s* }. I ask because I'm seeing behavior that makes me think that's not the case.

[12:11] <Altai-man_> rypervenche, yes, it is. Can you provide the case?

[12:12] <rypervenche> Yep, let me write out the gist.

[12:13] <Altai-man_> rypervenche, see https://github.com/Raku/nqp/blob/master/src/NQP/Grammar.nqp#L59-L68

[12:14] <rypervenche> Ahh, so the \h+ would grab tabs, which is what I'm seeing.

[12:16] *** sena_kun joined
[12:16] <jnthn> \s is "all whitespace", including tab

[12:17] <rypervenche> Ahhh ok. I wasn't sure about that. I was trying to find that answer as well in the docs.

[12:18] *** Altai-man_ left
[12:18] <jnthn> You can redfine ws to whatever you wish :)

[12:18] *** Merfont left
[12:20] *** Kaiepi joined
[12:22] <Geth> ¦ doc/master: 4 commits pushed by Coke++

[12:22] <Geth> ¦ doc/master: d69ef0eb10 | update P6 to Raku

[12:22] <Geth> ¦ doc/master: 4da82f8c21 | whitespace

[12:22] <Geth> ¦ doc/master: 62bd7907e1 | Change .perl to .raku, ref #3309

[12:22] <Geth> ¦ doc/master: 8330fbe509 | learn word

[12:22] <Geth> ¦ doc/master: review: https://github.com/Raku/doc/compare/7915bd5b2250...8330fbe509b5

[12:27] *** regreg joined
[12:30] *** farcas1982regreg left
[12:30] *** regreg_ joined
[12:32] *** regreg left
[12:35] *** regreg_ left
[12:57] *** farcas1982regreg joined
[13:17] *** mowcat left
[13:23] *** Itaipu left
[13:27] <Doc_Holliwood> how do i umix a role

[13:29] <Doc_Holliwood> or alternatively smrtly create a new instance of it?

[13:30] <Doc_Holliwood> basically I a have a LinkeList::Node role which i mixed into (here) Ints. Now I want to write a .perl method for the node object

[13:30] <Doc_Holliwood> when i just call .perl on what I have I get the Int + MyMixin stringified, but all I want is  the original value

[13:31] <Doc_Holliwood> makes sense?

[13:32] <Doc_Holliwood> I mean it's correctly roundtripping, but I'd like it to appear as it does in the source code

[13:33] <Doc_Holliwood> this question will automatically post itself to SO if nobody answers in 60 ...

[13:33] <Doc_Holliwood> *just kidding* =)

[13:34] *** Itaipu joined
[13:34] <MasterDuke> i think if you assign a new variable it.clone it loses the mixin

[13:36] <MasterDuke> hm, nope that's not it...pretty sure there is a way

[13:38] <Doc_Holliwood> hah!

[13:38] <Doc_Holliwood> i can just call nextsame

[13:39] *** gordonfish joined
[13:39] <Doc_Holliwood> multi method perl() { nextsame } on my Node class and it stringifies as it should

[13:39] <Doc_Holliwood> thanks obama

[13:39] <Doc_Holliwood> :-D

[13:41] *** [Sno] left
[13:43] *** [Sno] joined
[14:02] *** Manifest0 left
[14:03] *** Manifest0 joined
[14:10] *** molaf joined
[14:13] *** aborazmeh joined
[14:13] *** aborazmeh left
[14:13] *** aborazmeh joined
[14:15] *** Altai-man_ joined
[14:18] *** sena_kun left
[14:36] *** brtastic left
[14:40] *** patrickb left
[14:56] <Geth> ¦ problem-solving: vrurg assigned to jnthn Issue .? behavior on signature mismatch https://github.com/Raku/problem-solving/issues/190

[15:12] *** softmoth joined
[15:19] *** andrzejku left
[15:20] <rypervenche> If I've got a grammar that has several tokens and I want to do a search and replace in one of the tokens that's several levels down, is there a good way to be able to do that and then be able to automatically recreate the entire TOP with those changes? Or will I have to manually recreate the TOP in my Actions with the made token?

[15:21] <rypervenche> I'm essentially trying to clean up some bad json. It's one big { } with each line having a key and value pair. I'm just changing "\n" into '\n', so that newlines don't actually expand over multiple lines. Trying to find the best way to do it. I've written a grammar to parse it, just trying to figure out the best way to reconstruct it now that I've got the s// in there.

[15:24] *** aborazmeh left
[15:24] *** robertle joined
[15:33] *** Doc_Holliwood left
[15:35] *** molaf left
[15:35] *** caterfxo left
[15:45] <samebchase-> rypervenche: from what I understand parsing with grammars happens top-down, and you'll need to use actions bottom-up from the lower-levels to the upper levels and build up the data structure you want. I am doing something similar at the moment. Regulars, please correct me if I have said something incorrect

[15:47] <samebchase-> if your heirarchy is something like `a -> b -> c`, then `c` should "make" something that `b` can use to "make" something that `a` can use and this goes all the way up to `TOP`. 

[15:47] *** caterfxo joined
[15:47] <timotimo> yeah, that's accurate

[15:48] <samebchase-> what I am doing right now, is that I am using `make` at the lowest level to create a simple payload which higher levels can use to `make` even more complicated payloads

[15:48] *** robertle left
[15:48] <timotimo> that's a common way to do it, i understand

[15:49] <samebchase-> timotimo: What's the ideal way to do it./

[15:49] <timotimo> you don't have to do it at the absolute lowest level

[15:49] <timotimo> but the more different ways a thing can be parsed, the more likely you want to give it its own action method

[15:49] <samebchase-> timotimo: at a low enough level so that dealing with nested $match objects is easy enough 

[15:50] <timotimo> yeah, you may otherwise just end up replicating the shape of the grammar a second time

[15:52] <samebchase-> say you have `token a { <b> | <c> | <d>  }` for the action method corresponding to `a`, we need to explicitly check whether `b`, `c`, or `d` matched and then use those results. say your action method code checks only for `b` or `c`, and then you pass that payload to a higher level, you could get a Nil or whatever which breaks things.  

[15:53] <samebchase-> perhaps the structure of the grammar should be designed in such a way that action methods don't get too painful to write

[15:55] <samebchase-> n00b question: Why does `['one.'] X~ {test-vec => ['two', 'three']}<test-vec>` return `(one.two three)`, but when I bind a container to the value corresponding to 'test-vec', I get the expected result `(one.two one.three)`. 

[15:56] <samebchase-> what should I read/understand to not get tripped up with 👆

[16:02] <timotimo> did you use { } instead of <test-vec> to put the variable there?

[16:03] <timotimo> oh i probably misread

[16:03] *** patrickb joined
[16:03] <timotimo> i'd expect that it's a containerization thing you're getting

[16:04] <timotimo> m: say ['one.'] X~ {test-vec => ['two', 'three']}<test-vec>; say ['one.'] X~ {test-vec => ['two', 'three']}<test-vec><>

[16:04] <camelia> rakudo-moar ef90599e2: OUTPUT: «(one.two three)␤(one.two one.three)␤»

[16:04] <timotimo> the <> does a decont, i.e. strips the containerization off

[16:04] <samebchase-> timotimo: ahhhh

[16:04] <Geth> ¦ doc: sztanyi++ created pull request #3366: Update temporal.pod6

[16:04] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3366

[16:05] <timotimo> m: say ['one.'] <<~>> {test-vec => ['two', 'three']}<test-vec>; say ['one.'] <<~>> {test-vec => ['two', 'three']}<test-vec><>

[16:05] <camelia> rakudo-moar ef90599e2: OUTPUT: «[one.two one.three]␤[one.two one.three]␤»

[16:05] <timotimo> m: say ['one.'] <<~>> {test-vec => ['two', 'three']}

[16:05] <camelia> rakudo-moar ef90599e2: OUTPUT: «Array <<~>> Hash can never work reliably: order of keys in Hash is indeterminate␤  in block <unit> at <tmp> line 1␤␤»

[16:06] <timotimo> m: say 'one.' <<~>> {test-vec => ['two', 'three']}

[16:06] <camelia> rakudo-moar ef90599e2: OUTPUT: «{test-vec => [one.two one.three]}␤»

[16:06] <timotimo> ^- hyperops are super fun magic btw

[16:06] *** abraxxa left
[16:07] *** abraxxa joined
[16:07] *** abraxxa left
[16:07] *** abraxxa joined
[16:09] <samebchase-> timotimo: is there a way of doing it without decontainerisation/

[16:10] <timotimo> m: my %thehash; %thehash<test-vec> := ["two", "three"]; say ['one.'] X~ %thehash<test-vec>

[16:10] <camelia> rakudo-moar ef90599e2: OUTPUT: «(one.two one.three)␤»

[16:10] <timotimo> m: my %thehash; %thehash<test-vec> = ["two", "three"]; say ['one.'] X~ %thehash<test-vec>

[16:10] <camelia> rakudo-moar ef90599e2: OUTPUT: «(one.two three)␤»

[16:11] <timotimo> ^- when you bind to the slot in the hash, there is no scalar container around it

[16:16] *** sena_kun joined
[16:18] *** Altai-man_ left
[16:18] <SmokeMachine> does it make sense to use https://help.github.com/en/github/building-a-strong-community/about-team-discussions on problem solving?

[16:20] <AlexDaniel> SmokeMachine: maybe? But what's wrong with tickets?

[16:26] *** patrickb left
[16:27] <SmokeMachine> AlexDaniel: nothing that I know. I just think the threads would make it easier to follow the discussion...

[16:34] *** gnufr33dom left
[16:34] *** kensanata left
[16:37] *** chloekek joined
[16:39] *** finsternis left
[16:41] <SmokeMachine> is anyone watching GitHub talk now?

[16:41] <SmokeMachine> this code scanning seems very cool!

[16:41] <SmokeMachine> I’d hope to have that to raku...

[16:47] *** stoned75 left
[16:58] <Geth> ¦ doc: 0a65185183 | sztanyi++ (committed using GitHub Web editor) | doc/Language/temporal.pod6

[16:58] <Geth> ¦ doc: Update temporal.pod6

[16:58] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/0a65185183

[16:58] <Geth> ¦ doc: 7b81b79637 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/temporal.pod6

[16:58] <Geth> ¦ doc: Merge pull request #3366 from sztanyi/patch-3

[16:58] <Geth> ¦ doc: 

[16:58] <Geth> ¦ doc: Update temporal.pod6

[16:58] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7b81b79637

[16:58] <linkable6> Link: https://docs.raku.org/language/temporal

[17:12] <timotimo> yeah, would be cool if RakuAST and/or Comma could offer an CodeQL API to your code

[17:13] <timotimo> intellij already has a "structure search" thing

[17:14] *** Black_Ribbon joined
[17:15] <timotimo> https://www.jetbrains.com/help/idea/structural-search-and-replace.html# - it's possibly much too narrow to do something like taint tracking

[17:18] <timotimo> https://dzone.com/articles/going-beyond-regular-expressions-with-structural-c - might also be an avenue to look at for structural search in raku

[17:21] <AlexDaniel> SmokeMachine: what github talk?

[17:21] <SmokeMachine> AlexDaniel: https://githubsatellite.com

[17:48] *** ufobat left
[17:50] *** Doc_Holliwood joined
[18:13] *** Black_Ribbon left
[18:13] *** xelxebar_ left
[18:14] *** xelxebar joined
[18:15] *** Altai-man_ joined
[18:18] *** sena_kun left
[18:20] *** sauvin left
[18:28] <mahafyi> doing various small practice programs. The error messages are good, as they give correct description and also suggest the fix usefully.

[18:28] <timotimo> \o/

[18:30] *** andreoss joined
[18:34] <timotimo> https://perl6advent.wordpress.com/2016/12/19/fixing-flow/ - this is probably a bit bit-rotted, but is probably something cool to look at :)

[18:39] *** Kaeipi joined
[18:41] <mahafyi> timotimo : nice :] 

[18:42] <timotimo> being able to tell rakudo to emit compile errors and other exceptions as json blobs is pretty cool

[18:43] *** Kaiepi left
[18:43] <andreoss> hi, what is the current status of the jvm port? It seems that there was no major changes during this year. I want to take an advantage of that and improve some portions of java code, staring with s/perl6/raku/ and may be putting some more code style in place (i see a lot of wrongly ordered modifiers, missing annotations (@Override and so on))

[18:45] *** farcas1982regreg left
[18:46] <andreoss> I also want to try to get rid of Unsafe, but I believe some clean up chores might be usefull prior to that

[18:46] <[Coke]> bartolin is the person to talk to about major stuff. If you're gung ho, if you file PRs, he'll review them, I'm sure.

[18:46] *** farcas1982regreg joined
[18:47] <timotimo> hm, could it be the exceptions handler doesn't work right any more?

[18:48] <[Coke]> I know Unsafe has been looming for a bit.

[18:48] <MasterDuke> andreoss: pmurias thinks that truffle could/should become the primary jvm backend/environment/base for implementation

[18:48] <timotimo> m( i spelled it RAKUDO_ instead of RAKU_

[18:48] <MasterDuke> there is a branch in nqp where he has done a bunch of work

[18:49] <MasterDuke> the branch was started a while ago, so it needs a rebasing (which won't be completely trivial)

[18:51] <MasterDuke> but that's another place that could use some work if you know java well (i've done some minor contributions without knowing much about truffle/graalvm)

[18:51] <MasterDuke> https://github.com/Raku/nqp/tree/truffle

[18:51] *** molaf joined
[18:53] *** sjm_uk left
[18:55] *** stoned75 joined
[18:57] <timotimo> do rakuuns have suggestions for in-terminal "graphical" file managers? like midnight commander for example, but doesn't necessarily have to look like that

[19:01] <softmoth> Is there a current description of the correct usage of META6.json fields "source-url", "repo-url", "support" : "source", and any others I may have missed? I'm moving Template::Mustache to CPAN, and can't tell what is best practice.

[19:01] <jjmerelo> There's something in the documentation, and synopsis also describes it. S26 if I'm not wrong

[19:02] <softmoth> timotimo, you might check out [ded](https://invisible-island.net/ded/)

[19:07] *** andrzejku joined
[19:07] <andreoss> MasterDuke: truffle branch is quite different indeed, for some reason some classes are duplicated, it appears that it replaces jvm port, rather than adds a new one

[19:08] <MasterDuke> yeah, it's incomplete

[19:08] <andreoss> I doubt that graalvm will replace jdk anytime soon though

[19:08] <MasterDuke> it's currently using the existing jvm port to bootstrap itself

[19:09] <MasterDuke> if you're interested, i'd suggest searching the logs for truffle, pmurias has explained a lot (mostly over in #raku-dev (then #perl6-dev)

[19:09] <andreoss> MasterDuke: what do you think about puting some static anylyzer or unit testing framework in place

[19:11] <MasterDuke> i'd be +1 to static analyzer (though our code may not be the best use-case for them). we already have tests, i'm not as sure of the value of a unit testing framework

[19:12] <MasterDuke> but yeah, it could also be that the truffle and non-truffle version continue to co-exist as two separate jvm backends

[19:13] <andreoss> MasterDuke: i mean java-on-java unit tests

[19:14] <andreoss> the code really says that it was written by C person

[19:16] <MasterDuke> i don't really have the experience to judge, but my personal opinion is there is more bang-for-the-buck elsewhere. not going to turn down contributions though if that's what you're interested in

[19:16] <MasterDuke> not trying to discourage anybody

[19:17] <andreoss> I feel very anxious when I'm about to touch something without unit tests, probably a pavlovian thing 

[19:18] <stoned75> commit: release say 2.5.^lookup("sqrt")

[19:18] <committable6> stoned75, ¦release: «Cannot find this revision (did you mean “release”?)»

[19:18] <stoned75> commit: releases say 2.5.^lookup("sqrt")

[19:18] <committable6> stoned75, ¦releases (43 commits): «sqrt␤»

[19:18] <stoned75> commit: releases say 2.5.^lookup("sqrt").perl

[19:19] <committable6> stoned75, https://gist.github.com/e22d569e48a688a71a32d00dd66d354a

[19:20] *** jjmerelo left
[19:20] <softmoth> jjmerelo, thanks. I'll read through S22, modules.raku.org sources & others and file a bug report for the docs.

[19:22] <MasterDuke> andreoss: we were just discussing that same thing yesterday. i very much appreciate the large test suite we have. if you're not aware, there are a very small number of tests in nqp, a slightly larger number in rakudo, and then roast has the extensive tests that actually spec the language

[19:31] *** mahafyi left
[19:31] *** chloekek left
[19:33] <andreoss> this is a legit approach

[19:33] <andreoss> though tests are hard to find this way

[19:34] *** Itaipu left
[19:36] *** Itaipu joined
[19:37] *** Black_Ribbon joined
[19:53] *** aborazmeh joined
[19:53] *** melezhik joined
[19:53] *** aborazmeh left
[19:53] *** aborazmeh joined
[19:53] <melezhik> AlexDaniel: here is beta version web UI for rakudist - http://repo.westus.cloudapp.azure.com/rakudist2/ 

[19:53] <melezhik> now people can run test for their modules using convenient html form

[19:56] <melezhik> it's written on cro BTW )))

[19:56] <melezhik> cro + bulma to be specific

[19:59] *** chloekek joined
[20:03] <melezhik> Text::Diff::Sift4 looks like is not fetcheble 

[20:03] <melezhik> broken META?

[20:03] <melezhik> Failed to resolve any candidates. No reason to proceed

[20:03] <MasterDuke> i forgot a :

[20:04] <MasterDuke> i had 'Text::Diff:Sift4' (note only one : between Diff and Sift4)

[20:04] <melezhik> ahh, ok

[20:06] <melezhik> i'd try debian as it a has as much native deps installed as possible, thought if your module does need one, alpine is ok two

[20:06] <melezhik> two -> too

[20:07] <melezhik> I also try to add custom "patches" whenever it's possible and I am not too lazy, so just a few modules are covered - https://github.com/melezhik/RakuDist/tree/master/modules/default/files/patches

[20:08] <melezhik> Text::Diff::Sift4 succeed ))

[20:09] <MasterDuke> nice

[20:10] <melezhik> after some testing I will replace old rakudist interface by this one

[20:10] <melezhik> need to sort out some minor things though 

[20:16] *** sena_kun joined
[20:18] *** Altai-man_ left
[20:29] *** robertle joined
[20:33] <robertle> lizmat: you around? I have a first sketch of the content store we talked about: https://github.com/robertlemmen/svc-shelve6

[20:42] *** stoned75 left
[20:48] *** MasterDuke left
[20:59] <melezhik> is new CPAN module releases feed is broken? https://colabti.org/irclogger/irclogger_log_search/raku?search=CPAN&action=search&timespan=&text=checked

[20:59] <melezhik> I don't see recent releases here ...

[21:00] *** sftp joined
[21:06] *** melezhik left
[21:09] <rypervenche> I've got a grammar set up and am using Grammar::Tracer to make sure my grammar works. It looks to match TOP in the end, however it still errors out saying "Use of Nil in string context". Why would that be? I'm running the grammar on two files and one works correctly, but the other doesn't. The grammar traces look similar and TOP matches in the end on both.

[21:12] <Doc_Holliwood> the new version of Comma as an interactive graphical grammar debugger built in

[21:12] <Doc_Holliwood> maybe give that a shot, rypervenche?

[21:12] *** HarmtH joined
[21:13] <andreoss> how do I rebootstrap nqp-jvm?

[21:14] *** rindolf left
[21:15] *** pilne joined
[21:17] <andreoss> hm, it seems that I just have to replace jar file

[21:23] *** MasterDuke joined
[21:23] *** andrzejku left
[21:24] *** melezhik joined
[21:24] <MasterDuke> andreoss: there is an m-bootstrap-files make target, i don't remember if there's also a corresponding j-bootstrap-files though

[21:31] *** chloekek left
[21:35] *** farcas1982regreg left
[21:40] *** robertle left
[21:44] *** melezhik left
[21:48] <andreoss> there is, thanks

[22:07] *** asdfhdf joined
[22:09] *** HarmtH left
[22:10] *** HarmtH joined
[22:11] <asdfhdf> HI! How to use loops with "no @-ted" arrays? This does not work:

[22:11] <asdfhdf> my $arr = "one", "two", "three";

[22:11] <asdfhdf> for $arr -> $item { say $item }

[22:13] <MasterDuke> m: my $arr = ("one", "two", "three"); .say for $arr<>; .say for $arr[]; .say for $arr.list; .say for @$arr; # asdfhdf

[22:13] <camelia> rakudo-moar ef90599e2: OUTPUT: «one␤two␤three␤one␤two␤three␤one␤two␤three␤one␤two␤three␤»

[22:14] <asdfhdf> Thanks!

[22:15] *** Altai-man_ joined
[22:17] *** asdfhdf left
[22:18] *** sena_kun left
[22:20] *** pecastro left
[22:26] <MasterDuke> np

[22:28] <jdv79> what does "MoarVM panic: Internal error: Unwound entire stack and missed handler" mean?

[22:29] <jdv79> i can't even print ll-exception

[22:29] <jdv79> i have no idea how to debug that

[22:30] <MasterDuke> i think usually some sort of memory corruption. can you run it in gdb and break on MVM_panic?

[22:35] <timotimo> isn't it usually when you throw an exception in a nested interpreter?

[22:36] *** Kaeipi left
[22:36] *** Kaeipi joined
[22:36] *** mowcat joined
[22:37] <jdv79> http://paste.arn-fai.net/?3060280

[22:37] <jdv79> doesn't seem terribly useful

[22:38] <MasterDuke> can you `call MVM_dump_backtrace(tc)` in gdb?

[22:38] <jdv79> my raku is a few weeks old i think - should i try head?

[22:38] <MasterDuke> oh, and it would be better if you complied moarvm with --debug=3

[22:40] <timotimo> you could try calling MVM_dump_bytecode(tc) as well, to see if it looks like anything sensible

[22:40] <timotimo> though i think the bytecode dumper doesn't output handlers

[22:41] <MasterDuke> there were a whole lot of obscure garbage collection related fixes in moarvm in the past couple weeks

[22:41] <jdv79> i think call MVM_dump_backtrace(tc   SEGV'd:(

[22:42] <jdv79> http://paste.arn-fai.net/?3060281

[22:44] <MasterDuke> hm, could always risk MVM_dump_backtrace_try_harder_maybe_set_users_computer_on_fire

[22:44] <jdv79> how do i recompile moarvm again?  i haven't done that in years.

[22:44] <MasterDuke> how are you getting/building rakudo?

[22:44] <jdv79> just the bare bones src way

[22:44] <MasterDuke> with --gen-nqp?

[22:44] <jdv79> ...--gen-moar...

[22:44] <jdv79> no

[22:44] <jdv79> no explicitly at least

[22:45] <jdv79> git clone rakudo;  perl Configure.pl --gen-moar; make install;

[22:45] *** Altai-man_ left
[22:45] <MasterDuke> add --moar-option='--debug=3' to your Configure.pl call

[22:46] <jdv79> ah, neat

[22:52] <tbrowder> .tell jmerelo chk yr email when you get a chance

[22:52] <tellable6> tbrowder, I'll pass your message to jjmerelo

[22:56] *** maxp90 joined
[22:59] <jdv79> ok, i think i got debugged up - now what can i do that i couldn't before?

[22:59] <MasterDuke> not really a whole lot. but your backtraces will have line numbers

[23:00] <MasterDuke> do you have a newer rakudo/moarvm?

[23:00] <jdv79> its maybe a few weeks old 

[23:01] <MasterDuke> yeah, i'd try updating

[23:05] *** maxp90 left
[23:06] <MasterDuke> i'm off to sleep, good luck

[23:06] <jdv79> welp.  compiling current but i think dinner is ready.  maybe tomorrow.

[23:06] <jdv79> thanks, later

[23:10] *** andreoss left
[23:20] *** melezhik joined
[23:33] *** melezhik left
[23:49] *** MasterDuke left
[23:55] *** dotdotdot left
[23:59] *** dotdotdot joined
