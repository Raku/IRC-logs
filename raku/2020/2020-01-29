[00:05] <discord6> <theangryepicbanana> yay my LLVM library is on github now https://github.com/ALANVF/Raku-LLVM

[00:06] <discord6> <theangryepicbanana> I still need to add the stuff needed to put it on CPAN though

[00:06] *** Xliff joined
[00:07] *** aborazmeh joined
[00:07] *** aborazmeh left
[00:07] *** aborazmeh joined
[00:25] *** pecastro left
[00:25] *** aborazmeh left
[00:41] *** aborazmeh joined
[00:41] *** aborazmeh left
[00:41] *** aborazmeh joined
[00:45] *** sena_kun left
[00:46] *** benjif joined
[00:49] *** gabiruh joined
[00:54] *** lucasb left
[00:59] *** sena_kun joined
[01:03] *** Xliff left
[01:04] *** do_you_thing joined
[01:09] <do_you_thing> hi

[01:09] <do_you_thing> Do you think Raku will kill Perl ?

[01:15] <discord6> <theangryepicbanana> Once it takes off maybe

[01:15] <do_you_thing> Do you think Raku will kill Perl ?

[01:15] <discord6> <theangryepicbanana> I already responded

[01:16] <do_you_thing> who is theangryepicbanana ??

[01:16] <discord6> <theangryepicbanana> *and you already asked

[01:16] <discord6> <theangryepicbanana> uh, me?

[01:16] <discord6> <theangryepicbanana> I'm on the Discord bridge

[01:16] <do_you_thing> I'm not sure if you are chatting with me

[01:16] <do_you_thing> of another guy

[01:16] <discord6> <theangryepicbanana> ?

[01:16] <do_you_thing> which post a message i don't know about

[01:16] <discord6> <theangryepicbanana> I'm talking to you through a chatbot

[01:16] <do_you_thing> who *

[01:17] <do_you_thing> oh ok

[01:17] <discord6> <theangryepicbanana> I'm on the Raku discord server rather than the IRC

[01:17] <do_you_thing> why ?

[01:17] <discord6> <theangryepicbanana> because I use discord more

[01:18] <do_you_thing> OK. I just can't go on Discord, otherwise my poor notebook will freeze

[01:18] <discord6> <theangryepicbanana> yea that makes sense

[01:19] <do_you_thing> I don't understand why there web app is soo bloated

[01:22] *** aborazmeh left
[01:26] <tadzik> the web is a hilariously inefficient platform, unfortunately

[01:26] *** do_you_thing left
[01:30] <Grinnz> 🙄

[01:30] *** mowcat left
[01:52] <discord6> <theangryepicbanana> I use the web version tho

[01:53] <discord6> <theangryepicbanana> the app kills my laptop

[01:55] *** wildtrees left
[01:59] *** molaf joined
[02:19] *** molaf left
[02:32] *** molaf joined
[02:39] *** satori__ left
[02:40] *** reach_satori joined
[02:44] *** sena_kun left
[02:56] *** reach_satori left
[02:59] *** sena_kun joined
[03:21] *** Cabanossi left
[03:33] *** Cabanossi joined
[03:40] *** Jack joined
[03:41] *** Jack is now known as Guest73966

[03:41] <Guest73966> so you male just created a new regex

[03:46] *** Guest73966 left
[04:07] <AlexDaniel> maybe?

[04:07] <AlexDaniel> that was weird

[04:46] *** linkable6 left
[04:46] *** evalable6 left
[04:46] *** linkable6 joined
[04:46] *** sena_kun left
[04:48] *** evalable6 joined
[04:50] *** AlexDaniel left
[05:00] *** sena_kun joined
[05:17] <tyil> rypervenche: neat, so I don't need to look into anything?

[05:23] *** ensamvarg joined
[05:47] *** molaf left
[06:01] *** squashable6 left
[06:03] *** squashable6 joined
[06:06] *** jmerelo joined
[06:16] *** Doc_Holliwood joined
[06:17] *** Kaffe joined
[06:36] *** sauvin joined
[06:37] <Geth> ¦ doc/infix-bool-and-op: 7e3cef998e | (Stoned Elipot)++ | doc/Language/operators.pod6

[06:37] <Geth> ¦ doc/infix-bool-and-op: Add boolean logical AND operator

[06:37] <Geth> ¦ doc/infix-bool-and-op: review: https://github.com/Raku/doc/commit/7e3cef998e

[06:37] <Geth> ¦ doc: stoned++ created pull request #3191: Add boolean logical AND operator

[06:37] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3191

[06:41] <Geth> ¦ doc: 459431d3cb | (JJ Merelo)++ | doc/Type/Int.pod6

[06:41] <linkable6> Link: https://docs.raku.org/type/Int

[06:41] <Geth> ¦ doc: Adds Int.new, commenting the new features. Refs #2632

[06:41] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/459431d3cb

[06:41] <linkable6> DOC#2632 [open]: https://github.com/Raku/doc/issues/2632 [Hacktoberfest][RFE][big][docs][good first issue][help wanted][new][⚠ Top Priority ⚠] Checklist for 6.d

[06:45] *** sena_kun left
[06:46] *** cpan-raku left
[06:46] *** [particle] joined
[06:48] *** cpan-raku joined
[06:48] *** cpan-raku left
[06:48] *** cpan-raku joined
[06:49] *** camelCaser joined
[07:00] *** sena_kun joined
[07:08] *** Kaffe left
[07:12] *** rindolf joined
[07:14] *** ensamvarg left
[07:15] *** kensanata joined
[07:20] *** Maylay left
[07:20] <Geth> ¦ doc/infix-bool-and-op: 242dc90dfb | (Stoned Elipot)++ | doc/Language/operators.pod6

[07:20] <Geth> ¦ doc/infix-bool-and-op: rephrase ?& operator description

[07:20] <Geth> ¦ doc/infix-bool-and-op: review: https://github.com/Raku/doc/commit/242dc90dfb

[07:22] *** Maylay joined
[07:33] <Geth> ¦ doc: 7e3cef998e | (Stoned Elipot)++ | doc/Language/operators.pod6

[07:33] <linkable6> Link: https://docs.raku.org/language/operators

[07:33] <Geth> ¦ doc: Add boolean logical AND operator

[07:33] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7e3cef998e

[07:33] <Geth> ¦ doc: 242dc90dfb | (Stoned Elipot)++ | doc/Language/operators.pod6

[07:33] <Geth> ¦ doc: rephrase ?& operator description

[07:33] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/242dc90dfb

[07:33] <Geth> ¦ doc: 21b691ccf6 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[07:33] <Geth> ¦ doc: Merge pull request #3191 from Raku/infix-bool-and-op

[07:33] <Geth> ¦ doc: 

[07:33] <Geth> ¦ doc: Add boolean logical AND operator

[07:33] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/21b691ccf6

[07:33] *** jmerelo left
[07:33] *** Doc_Holliwood left
[07:34] *** domidumont joined
[07:38] *** epony left
[07:46] *** Black_Ribbon left
[07:46] *** Cabanossi left
[07:57] *** xinming_ left
[07:58] *** xinming_ joined
[08:01] *** Manifest0 left
[08:03] *** Manifest0 joined
[08:03] <Geth> ¦ ecosystem: rbt++ created pull request #481: Moved to CPAN.

[08:03] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/481

[08:13] *** polm joined
[08:14] *** polm left
[08:14] *** Doc_Holliwood joined
[08:19] *** leont joined
[08:27] *** stoned75 left
[08:27] *** xinming_ left
[08:30] *** xinming_ joined
[08:37] *** leont left
[08:43] *** leont joined
[08:45] *** sena_kun left
[08:58] *** xinming_ left
[09:00] *** xinming_ joined
[09:01] *** sena_kun joined
[09:06] *** zakharyas joined
[09:06] *** dakkar joined
[09:13] <jjatria> I tried running `Supply.interval(1).tap: { say  $^a }; sleep 4` and as expected I got numbers from 0 to 4 on different lines. But when I changed the `sleep` for `loop { }` the program kept running but stopped printing numbers at 2

[09:13] <jjatria> What's making it do that?

[09:14] <dakkar> you're running a single thread, I think

[09:14] <dakkar> in 6.d, I'm pretty sure `sleep` goes to the scheduler, which can then run the supply in its event loop

[09:14] <dakkar> if you're doing other stuff, and not yielding to the scheduler, it never gets the chance

[09:15] <dakkar> (don't take my word for it, though!)

[09:16] <jjatria> Hm, yeah... I thought it could be something like that. I'll read a little more. Thanks!

[09:20] *** Doc_Holliwood left
[09:32] *** pecastro joined
[09:39] *** wamba joined
[09:40] *** Sgeo__ joined
[09:42] <jjatria> Yeah, if I do `my $p = start { Supply .... }; loop { await $p }` it works. But is that because it is yielding, or because it's no longer on a single thread?

[09:44] *** Sgeo_ left
[09:46] <jnthn> Hmm, loop {} should make no difference, except utterly burning CPU

[09:47] <jnthn> I can reproduce the behavior though.

[09:48] <jnthn> Oh dear. MVM_JIT_DISABLE=1 in the environment also fixes it

[09:48] <jnthn> Hmm

[09:49] <jnthn> As does `Supply.interval(1).tap: { say  $^a }; loop { [] }`

[09:51] <jnthn> My theory would be that the JIT somehow forgets to emit the "check if we need to GC" at backbranches, but looking at the impl, it's right there. (Also, why'd we not have spotted this before...)

[09:51] *** chloekek joined
[09:52] <chloekek> Is there a situation in which you must use $¢ instead of $/?

[09:53] <chloekek> Is it so that you can call functions within regex blocks, and then still access the match afterwards, even if the callee modified $/?

[09:53] <chloekek> E.g. sub f { $/ = 1 }; /.{ f(123); $¢ neq $/ }/

[09:55] *** leont left
[09:58] <jnthn> jjatria: https://github.com/MoarVM/MoarVM/issues/1230

[09:59] <jjatria> jnthn++

[10:02] *** Doc_Holliwood joined
[10:03] <jjatria> "which is probably a nice easy speedup" <- ooh, I like that

[10:19] <Geth> ¦ ecosystem: 0c5446e734 | (Rod Taylor)++ | META.list

[10:19] <Geth> ¦ ecosystem: Moved to CPAN.

[10:19] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/0c5446e734

[10:19] <Geth> ¦ ecosystem: 723d2237e1 | Altai-man++ (committed using GitHub Web editor) | META.list

[10:19] <Geth> ¦ ecosystem: Merge pull request #481 from rbt/master

[10:19] <Geth> ¦ ecosystem: 

[10:19] <Geth> ¦ ecosystem: Moved to CPAN.

[10:19] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/723d2237e1

[10:23] *** antoniogamiz joined
[10:23] *** reach_satori joined
[10:42] <cpan-raku> New module released to CPAN! Math::Libgsl::Function (0.0.1) by 03FRITH

[10:43] *** wamba left
[10:45] *** sena_kun left
[10:47] *** Doc_Holliwood left
[10:53] *** ensamvarg joined
[10:58] *** zakharyas left
[10:59] *** sena_kun joined
[11:00] *** zakharyas joined
[11:05] *** mowcat joined
[11:08] *** Doc_Holliwood joined
[11:14] *** epony joined
[11:15] *** aborazmeh joined
[11:15] *** aborazmeh left
[11:15] *** aborazmeh joined
[11:28] *** domidumont left
[11:28] *** shred_alert joined
[11:30] *** wamba joined
[11:31] <shred_alert> re: Discord. Their API "documentation" is possibly the worst I have ever seen.

[11:31] <shred_alert> It's basically a list of JSON objects with comments.

[11:32] <shred_alert> I caved in and just used a discord.py to build a bot for my friend. Couldn't bear to decipher those docs.

[11:35] *** reach_satori left
[11:36] <shred_alert> Then again, can't expect everything to have docs as great as Raku. =D 

[11:37] <tyil> is there not a discord module in raku?

[11:37] <tyil> https://modules.raku.org/dist/API::Discord:github:Alastair%20'altreus'%20Douglas%20%3Caltreus@altre.us%3E

[11:38] <shred_alert> Welp. I should have Googled more.

[11:38] <shred_alert> Thanks tyil

[11:38] <tyil> in case of doubt you can always ask around here ^_^

[11:38] <tyil> np

[11:39] <shred_alert> On the bright side: it gave me an excuse to make something with Python.

[11:39] <tyil> if you want a new project, you can make a bridge between discord and irc in raku

[11:39] <tyil> our current one is written in NodeJS, but I would of course prefer Raku so I can troubleshoot issues if any arise

[11:40] <shred_alert> That sounds like a neat project, actually. Once I finish learning some other stuff I've got on the agenda, I'll start thinking about that.

[11:40] <tyil> awesome!

[11:40] <shred_alert> Currently learning some operations stuff with Go.

[11:40] <tyil> (for future reference, the IRC module is called IRC::Client)

[11:41] *** antoniogamiz left
[11:41] <shred_alert> I've been planning on writing some utilities for FreeBSD in Raku as well.

[11:41] <tyil> operations as in, how to do things with go, or using go to perform system maintenance/devops work

[11:41] <shred_alert> systems stuff

[11:42] <tyil> cool

[11:43] <shred_alert> I'm trying to get my head around stuff like RabbitMQ, Opentracing, etc. and Go is pretty much the go-to for that field.

[11:53] *** mcsvenster joined
[11:53] *** mcsvenster left
[11:57] *** McSvenster joined
[11:59] <tyil> our application at work uses rabbitmq in perl and python, but I'm not on the dev team so I don't really know much about it

[11:59] <tyil> I'd still like to do some email stuff with Raku, but I have other projects that take priority ;~;

[12:00] <shred_alert> Hope you manage to find the time soon

[12:00] *** xinming_ left
[12:00] <tyil> I have 3 weeks off of work, and I intend to spend it cooking and coding away my backlog :p

[12:01] <shred_alert> Excellent!

[12:01] <cpan-raku> New module released to CPAN! Desktop::Notify::Progress (0.0.2) by 03FRITH

[12:01] *** xinming_ joined
[12:01] <cpan-raku> New module released to CPAN! Migration::RTtoGithub (0.0.1) by 03ELIZABETH

[12:02] <tyil> Im at schiphol now to pick up a friend, with some luck I can persuade him to make some time for raku during fosdem

[12:06] <lizmat> tyil++

[12:07] <rypervenche> tyil: I'm going to test it again and on CentOS as well. I'll let you know in a few hours if I run into any problems.

[12:07] <tyil> rypervenche: thanks a lot!

[12:08] <lizmat> .tell AlexDaniel` https://modules.raku.org/dist/Migration::RTtoGithub:cpan:ELIZABETH   # for the next Squashathon ?

[12:08] <tellable6> lizmat, I'll pass your message to AlexDaniel

[12:08] <AlexDaniel`> What's that

[12:08] <tyil> also, I'm planning to make an IRC::Client plugin to play hangman on irc, and would like to abstract away the code to give people points for winning (so I can make other irc games later using the same score "database")

[12:09] <tyil> does anyone have a good name for the module to hold that abstraction for scores?

[12:09] <lizmat> Game::Score ?

[12:09] <tyil> I don't want to put it in the DB:: namespace

[12:09] <lizmat> I guess it will be backend agnostic ?

[12:09] <tyil> Game::Score could work, tbh

[12:09] <AlexDaniel`> Oh, I see

[12:09] <tyil> lizmat: I'm going for a postgres backend beacuse I already have postgres, but the intent is to write it such that other backends can be added

[12:10] <tyil> in case people prefer mysql, sqlite or a csv for instance

[12:10] <AlexDaniel`> lizmat I thought we'll just attach squashable6 to the github repp

[12:10] <AlexDaniel`> Repo

[12:11] <tyil> lizmat: I think I'll go with Game::Score, thanks!

[12:11] <lizmat> AlexDaniel`: well, I thought a library with the info would be nice to have

[12:11] *** molaf joined
[12:12] <lizmat> AlexDaniel`: I've used it for my own ticket updating

[12:12] <AlexDaniel`> Okay

[12:12] *** kensanata left
[12:12] <dogbert11> heh, just got a segv when building rakudo

[12:12] <lizmat> interesting

[12:12] <AlexDaniel`> lizmat maybe improve the readme?

[12:13] <AlexDaniel`> You can mention your module there

[12:13] <lizmat> which readme are you referring to now ?

[12:13] <AlexDaniel`> Old tissues tracker one

[12:14] * dogbert11 tries a rebuild

[12:14] <AlexDaniel`> .... Geez I'm on my phone with autocorrect

[12:14] <lizmat> .oO( old tissues should be thrown away )

[12:14] <lizmat> AlexDaniel`: will do

[12:15] <AlexDaniel`> It's a bit boring here

[12:15] <AlexDaniel`> Can't sleep

[12:16] <shred_alert> Try reading a book AlexDaniel`:p

[12:18] <AlexDaniel`> Send me a link to something short :)

[12:20] <Geth> ¦ old-issue-tracker: 636faa4fb7 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | README.md

[12:20] <Geth> ¦ old-issue-tracker: Add mention of Migration::RTtoGithub

[12:20] <Geth> ¦ old-issue-tracker: review: https://github.com/Raku/old-issue-tracker/commit/636faa4fb7

[12:20] *** Maylay left
[12:20] *** Maylay joined
[12:21] <shred_alert> Uhhhh. Don't know of anything short

[12:24] *** zakharyas left
[12:25] *** aborazmeh left
[12:26] *** shred_alert left
[12:26] *** wamba left
[12:35] <discord6> <theangryepicbanana> how about the docs on raku's macros? that's pretty short

[12:38] *** Sgeo_ joined
[12:41] *** Sgeo__ left
[12:44] *** kensanata joined
[12:45] *** sena_kun left
[12:47] <AlexDaniel`> Heh :)

[12:47] *** lucasb joined
[12:48] *** Kaiepi left
[12:49] *** Kaiepi joined
[12:49] <cpan-raku> New module released to CPAN! Math::Libgsl::Permutation (0.0.1) by 03FRITH

[12:49] <cpan-raku> New module released to CPAN! Math::Libgsl::Matrix (0.0.1) by 03FRITH

[12:50] <discord6> <theangryepicbanana> actually more docs on macros would awesome

[12:50] <discord6> <theangryepicbanana> they seem really powerful

[12:53] <AlexDaniel`> And incomplete ;)

[13:01] *** sena_kun joined
[13:02] <discord6> <theangryepicbanana> yea lol

[13:02] <discord6> <theangryepicbanana> they seem similar to crystal's macros in a way

[13:14] *** Doc_Holliwood left
[13:16] *** titsuki joined
[13:17] *** colomon left
[13:18] *** WAAE5MS joined
[13:21] *** gabiruh left
[13:24] *** Kaiepi left
[13:28] *** _jrjsmrtn joined
[13:30] *** domidumont joined
[13:30] *** __jrjsmrtn__ left
[13:30] *** domidumont left
[13:31] *** domidumont joined
[13:32] *** gabiruh joined
[13:37] *** chloekek left
[13:40] *** mensvaga joined
[13:40] *** titsuki left
[13:44] *** domidumont left
[13:56] *** zakharyas joined
[14:00] *** titsuki joined
[14:01] *** Kaiepi joined
[14:02] *** domidumont joined
[14:02] *** gabiruh_ joined
[14:02] *** gabiruh left
[14:09] *** Doc_Holliwood joined
[14:12] *** gabiruh joined
[14:13] *** gabiruh_ left
[14:20] *** benjif left
[14:20] *** benjif joined
[14:20] *** aborazmeh joined
[14:20] *** aborazmeh left
[14:20] *** aborazmeh joined
[14:22] *** aborazmeh left
[14:35] *** kensanata left
[14:36] *** wamba joined
[14:39] *** Sgeo__ joined
[14:43] *** Sgeo_ left
[14:43] *** melezhik joined
[14:45] *** sena_kun left
[14:51] *** Doc_Holliwood left
[14:57] *** kensanata joined
[14:59] *** sena_kun joined
[15:19] *** titsuki left
[15:19] <daxim> I have a crash bug

[15:19] <daxim> put into parameterised-set.pm6:   sub foo(--> Set[Str]) {}

[15:19] <daxim> run:  rakudo -I. -e'use parameterised-set'

[15:19] <daxim> can you repro?

[15:24] *** molaf left
[15:28] <[Coke]> Anyone here do .net development? (Esp. on a mac/)

[15:29] <dakkar> daxim: ah yes, the "Missing serialize REPR function for REPR MVMContext"

[15:29] <dakkar> https://github.com/rakudo/rakudo/issues/2544

[15:29] <dakkar> *some* parametrized types can't be serialised, which breaks precompilation

[15:31] *** aluaces left
[15:32] *** mahmudov joined
[15:35] *** Doc_Holliwood joined
[16:01] *** kensanata left
[16:12] *** McSvenster left
[16:17] <cpan-raku> New module released to CPAN! Math::Libgsl::Combination (0.0.1) by 03FRITH

[16:31] *** wamba left
[16:44] *** domidumont left
[16:45] <TreyHarris> How could I find the last grapheme Raku can encode in three bytes?

[16:45] *** sena_kun left
[16:47] <TreyHarris> I've been staring at the pack and unpack docs but without a code example I'm getting answers I know aren't right, like "ÿ\0\0"

[16:48] <TreyHarris> From simple arithmetic and knowledge of UCS it should be somewhere around Linear-B

[16:48] <TreyHarris> Definitely not Extended Latin :-)

[16:50] <moritz> graphemes? How do you even enumerate them to create a "last" one?

[16:51] <TreyHarris> codepoint, rather, then I can work backwards to see if it's a grapheme by itself

[16:53] <TreyHarris> if it isn't, I can check the pred codepoint, recursively

[16:53] *** ensamvarg left
[16:53] <TreyHarris> I'm just trying to figure out what it's even reasonably possible to encode in a three-byte fixed UTF field

[16:54] <TreyHarris> (It came up in p6-u today as an alleged part of a Microsoft registry API, and it seems batshit to me)

[16:55] <Grinnz> three bytes are enough for up to U+FFFF

[16:55] <Grinnz> https://en.wikipedia.org/wiki/UTF-8#Description

[16:56] <rypervenche> So 0xffff.chr then?

[16:56] <TreyHarris> ah, then the missing-grapheme replacement character at U+FFFD, then

[16:57] <TreyHarris> U+FFFE and U+FFFF are not valid

[16:58] *** wildtrees joined
[16:59] <TreyHarris> Until OS X 10.4 (I think), OS X displayed a version of this that had the actual codepoint(s) it was standing in for in teensy tiny type printed into the character you could only see by zooming in to 128-pt (on a 72 dpi display; this was pre-Retina I'm pretty sure)

[17:00] *** cpan-raku left
[17:00] <TreyHarris> I think that was actually early PDF behavior which OS X got from its NeXTSTEP Display PostScript roots

[17:01] *** sena_kun joined
[17:03] <TreyHarris> They got rid of it when Retina displays came along because the text didn't disappear at small sizes anymore, it just looked like weird display-artifact fuzziness around the perimeters of the �

[17:03] *** cpan-raku joined
[17:03] *** cpan-raku left
[17:03] *** cpan-raku joined
[17:05] <Geth> ¦ problem-solving/front-matter-for-routines: 4982b8254f | (JJ Merelo)++ | 2 files

[17:05] <Geth> ¦ problem-solving/front-matter-for-routines: Adds proposal for solving #155

[17:05] <El_Che> lo

[17:05] <Geth> ¦ problem-solving/front-matter-for-routines: review: https://github.com/Raku/problem-solving/commit/4982b8254f

[17:07] <Geth> ¦ problem-solving: JJ++ created pull request #156: Adds proposal for solving #155

[17:07] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/pull/156

[17:11] *** pyrimidine joined
[17:12] *** Doc_Holliwould joined
[17:12] *** wamba joined
[17:13] *** jmerelo joined
[17:14] *** pyrimidi_ left
[17:14] *** Doc_Holliwood left
[17:14] *** patrickb joined
[17:16] *** wamba left
[17:28] *** shred_alert joined
[17:30] <Geth> ¦ problem-solving/front-matter-for-routines: a0ed4da650 | (JJ Merelo)++ | solutions/documentation/front-matter-for-routines.md

[17:30] <Geth> ¦ problem-solving/front-matter-for-routines:  might → will

[17:30] <Geth> ¦ problem-solving/front-matter-for-routines: review: https://github.com/Raku/problem-solving/commit/a0ed4da650

[17:31] <shred_alert> I was wondering why unicode wasn't working on my terminal emulators today. Then I realised I forgot to setup locales on my new FreeBSD install.........

[17:33] *** dakkar left
[17:36] <TreyHarris> shred_alert: oops. Default isn't C.UTF-8? Most Linuxes that had default C locale have switched to that quite a few years ago...

[17:36] *** xinming_ left
[17:36] <TreyHarris> And I think the ones that do it in setting time zone all set *.UTF-8

[17:37] *** aluaces joined
[17:37] *** xinming_ joined
[17:37] <shred_alert> TreyHarris: default is C >.<

[17:41] <shred_alert> Recommended procedure is to use login classes

[17:41] <shred_alert> I need to automate and version control all this. Becoming a pain in the rear.

[17:44] <TreyHarris> Huh, I would've thought embedded Linuxes would be the holdouts, but no, AFAICT, they default to C.UTF-8 too

[17:45] *** Kaiepi left
[17:45] <shred_alert> Interesting

[17:45] *** Kaiepi joined
[17:51] <TreyHarris> I could've sworn it was necessitated by zoneinfo changing to include non-ASCII for place names. But nope, it's still ASCII AFAICT

[17:51] <TreyHarris> Oh, maybe it was the non-ASCII tld's

[17:51] <TreyHarris> That would make it more universal such that the embedded devices would make sense

[17:53] <shred_alert> Funny thing is that Unicode was working just fine inside Emacs.

[17:53] <shred_alert> 'Graphical' Emacs, that is.

[17:53] <shred_alert> So I think Emacs must be doing its own thing

[17:56] <TreyHarris> It does. Editors mostly have to, especially if they're cross-platform and can deal with disparate input and output encodings (and where applicable, different ones for different files simultaneously open) like Emacs. Ones that aren't tend to use an HTML or Gtk or Wx, etc., widget that does it itself.

[17:57] <TreyHarris> terminal emulators are probably the only thing that will make an effort to _not_ do something different than locale and the shell prescribes

[18:07] <TreyHarris> No, the presumption goes the other way for congress people; if you have a clearance you're under different rules. Whistleblower provisions or nothing, I'm afraid.                                                                                                                                                                        

[18:07] <TreyHarris> vvvvv                                                                                                                                                                   

[18:08] <TreyHarris>     

[18:08] <TreyHarris> urk

[18:08] <TreyHarris> sorry for the pastebomb

[18:19] *** wamba joined
[18:21] *** shred_alert left
[18:23] <cpan-raku> New module released to CPAN! Math::Libgsl::Multiset (0.0.1) by 03FRITH

[18:37] *** chloekek joined
[18:44] *** kybr left
[18:46] *** sena_kun left
[18:48] <Geth> ¦ problem-solving: Kaiepi assigned to jnthn Issue IO::Socket::INET's methods for socket creation may need reconsideration https://github.com/Raku/problem-solving/issues/157

[18:54] *** zakharyas left
[18:55] *** vrurg left
[18:56] *** vrurg joined
[18:58] *** Bname joined
[19:00] *** sena_kun joined
[19:01] *** kybr joined
[19:07] *** eseyman joined
[19:23] *** wamba left
[19:25] *** sauvin left
[19:31] <rypervenche> .tell tyil So installing rakudo star using moar worked fine on 3 machines. I tried jvm on one and it failed the first time. I'm trying again. It's possible that I don't have the correct environment to be successful though.

[19:31] <tellable6> rypervenche, I'll pass your message to tyil

[19:31] *** dansolo42 left
[19:32] <tyil> rypervenche: awesome

[19:32] <tyil> I never tried the jvm variant

[19:35] <rypervenche> This is the output I get when I try jvm, if anyone cares: https://gist.github.com/rypervenche/7ae2feb052a9edb95a9b24df7037dd86

[19:38] *** wamba joined
[19:40] *** jmerelo left
[19:53] *** aborazmeh joined
[19:53] *** aborazmeh left
[19:53] *** aborazmeh joined
[20:01] *** MasterDuke joined
[20:16] <rypervenche> Question: I see in this code that something is being assigned to $_ and then some search and replace regex lines are below that. What would one of those lines look like with an explicit $_ ? Would it be something like $_ ~~ s:g/'-'//; ? I'm trying to figure out what it's short for.

[20:16] <rypervenche> It might help if I paste the link: https://github.com/Raku/whateverable/blob/63df823cfdb058a319b7214dd48aaad51319508a/xbin/Tellable.p6#L47

[20:20] <lizmat> m: $_ = "foo"; s/foo/bar/; .say

[20:20] <camelia> rakudo-moar 59cf387d4: OUTPUT: «bar␤»

[20:21] <lizmat> m: say "foo" ~~ s/foo/bar/

[20:21] <camelia> rakudo-moar 59cf387d4: OUTPUT: «Cannot modify an immutable Str (foo)␤  in block <unit> at <tmp> line 1␤␤»

[20:21] <lizmat> m: $_ = "foo"; $_ ~~ s/foo/bar/; .say

[20:21] <camelia> rakudo-moar 59cf387d4: OUTPUT: «bar␤»

[20:28] <[Coke]> rypervenche: can you open a ticket for the JVM build failure?

[20:30] <lizmat> I bet bartolin is aware of it

[20:30] <rypervenche> [Coke]: At https://github.com/rakudo/star ?

[20:31] <[Coke]> or rakudo/rakudo

[20:31] <[Coke]> (looked like a compiler error, no?)

[20:31] <rypervenche> It was testing tyil's rakudo start RC.

[20:31] <rypervenche> rakudo star*

[20:31] <lizmat> I'm not sure JVM even builds atm

[20:31] <[Coke]> lizmat: thought it was just fixed.

[20:31] <[Coke]> (like, in past 2 weeks)

[20:31] <lizmat> I hope it is...

[20:32] <[Coke]> rypervenche: I'm sure either is fine.

[20:33] <bartolin> rypervenche: the error you're seeing with the JVM backend has been fixed yesterday: https://github.com/rakudo/rakudo/commit/a08f043953

[20:34] <bartolin> (on HEAD)

[20:34] <bartolin> I'm running a spectest right now (but that takes quite some time)

[20:35] <rypervenche> Looks like tyil might need to update the RC then.

[20:36] *** libertas_ left
[20:36] *** libertas left
[20:44] <bartolin> rypervenche: i'm not really sure about the state of things with the 2020.01 release. I *thought* there was a release branch and the latest commits (including the commit that broke the JVM build) didn't make it into the release. But now I wonder why tyil's RC for rakudo star has the error. I expected it to be based on the 2020.01 release.

[20:45] *** sena_kun left
[20:46] *** Kaeipi joined
[20:46] *** Kaiepi left
[20:49] <rypervenche> Actually, it looks like that file has the parenthesis in it in the rakudo-star's rakudo source.

[20:49] *** Bname left
[20:49] <rypervenche> Oh! It's removing it. Derp.

[21:00] *** sena_kun joined
[21:01] *** xinming_ left
[21:02] *** xinming_ joined
[21:03] *** aborazmeh left
[21:11] *** rindolf left
[21:13] <tyil> bartolin: it is based on 2020.01 for nqp and rakudo, and 2020.01.1 for moarvm

[21:14] <tyil> rypervenche: I have no clue what to fix, but there's bound to be a core dev that has some insight about it

[21:14] <rypervenche> tyil: It looks like it was already fixed in https://github.com/rakudo/rakudo/commit/a08f043953 . I'm testing the install now with the change.

[21:15] <tyil> awesome work

[21:15] <rypervenche> Assuming I have enough RAM to build it...

[21:15] <bartolin> tyil: I see. (And that seems very sane). So the problem is in 2020.01, obviously.

[21:16] <tyil> I can make a branch of 2020.01, cherry pick that commit and use that, but if possible I'd like an official 2020.01.1 of rakudo

[21:16] <tyil> of course, coredevs willing, I'm not sure on their policies on it

[21:16] <tyil> (I haven't been doing rakudo star for that long yet)

[21:17] <bartolin> actually, I doubt a point release is worth the trouble. the JVM backend isn't in a good shape, anyway.

[21:21] *** Kaeipi left
[21:22] *** wamba left
[21:24] <lizmat> rypervenche: there was one more commit and one potential issue that bartolin mentioned tonight

[21:26] *** Kaiepi joined
[21:26] *** veesh_ joined
[21:26] <rypervenche> I'm guessing I should stop worrying about JVM at this point. I was just trying to be thorough. :P

[21:28] *** veesh left
[21:28] <[Coke]> I would treat JVM issues as needing to be fixed but not blockers.

[21:29] <[Coke]> so, keep worrying but only a little.

[21:29] *** veesh_ is now known as veesh

[21:30] <rypervenche> lizmat: Oh, and thanks for the response on the $_ search and replace thing. So it's like doing $_ = before it. Got it.

[21:30] *** vike joined
[21:30] <lizmat> :-)

[21:30] *** stoned75 joined
[21:45] *** xinming_ left
[21:45] *** xinming_ joined
[22:19] *** stoned75 left
[22:46] *** sena_kun left
[22:56] *** NODE left
[22:57] *** NODE joined
[22:58] *** Kaeipi joined
[22:59] *** Kaiepi left
[23:02] *** sena_kun joined
[23:02] <sena_kun> re point release for JVM: if we can put a monkey patch into star, that'd be nice. OTOH in some time I'm here I didn't see a person using this backend and all the answers are "Well, it's there BUT", so point release seems a bit redundant. The good news is that 1)We are back to montly releases anyway, so one doesn't need to wait for a couple of months to. 20just ping me this weekend with instructions on how to test if the thing builds at all

[23:02] <sena_kun>  (I am not sure releasable knows about it?) and we'll do some magic to ensure jvm backend builds now and forever.

[23:08] *** titsuki joined
[23:09] *** MasterDuke left
[23:17] *** chloekek left
[23:27] <SmokeMachine> vrurg: hi! Just to be sure, so that was not a Red bug?

[23:28] <vrurg> SmokeMachine: luckily, not

[23:28] <tellable6> 2020-01-29T21:11:48Z #raku-dev <lizmat> vrurg but that piece of code has been there for years  :-)

[23:29] *** wildtrees left
[23:30] <vrurg> Though it looked suspicious at the first glance, but that's because I didn't know how exactly 'build' attribute is been used.

[23:30] <SmokeMachine> vrurg: great!! I’ve been without time... I still have to fix the tests running on Pg... :(

[23:31] *** wildtrees joined
[23:33] *** wildtrees left
[23:33] <vrurg> SmokeMachine: BTW, do you have a suggestion how to speed up storing thoughands of records in a sqlite DB?

[23:33] *** wildtrees joined
[23:34] <SmokeMachine> vrurg: where are you getting the records from?

[23:36] <vrurg> I generate them. :) The scheme is: an app produces tracing records (debug prints). A dedicated thread accepts them via a channel and sends to a DB.

[23:36] <vrurg> SmokeMachine: the problem arises when app finishes and the writer thread takes ages to dump out all remaining records.

[23:39] *** oodani joined
[23:40] <SmokeMachine> vrurg: have you tried `PRAGMA synchronous = OFF`?

[23:41] <vrurg> SmokeMachine: No. Didn't know it exists. Is it sqlite feature?

[23:42] <vrurg> SmokeMachine: BTW, Red itself is not thread-safe, as far as I understand?

[23:42] <SmokeMachine> Yes... it will make SQLite not flush the fh

[23:43] <SmokeMachine> vrurg: to tell the truth, I don’t know... I’ve never tried (seriously) make it parallel... (besides some tests with `red-do :parallel` (if I remember it well)

[23:44] <vrurg> Didn't work for me, so – likely it isn't :)

[23:45] <vrurg> I'll try the pragma. Thanks!

[23:45] <SmokeMachine> vrurg: this may be faster: https://cs.stanford.edu/people/widom/cs145/sqlite/SQLiteLoad.html

[23:47] <vrurg> SmokeMachine: I'd like to keep the tracing in production to provide debugging capabilities to a user. So, better be producing the DB myself.

[23:51] *** patrickb left
[23:53] <guifa> sena_kun: there was actually someone in here not long ago asking about the JVM backend

[23:54] <guifa> also, Perl/Rakucon 2020 in Houston will have at least ONE Raku talk.  Mine got accepted today yay

