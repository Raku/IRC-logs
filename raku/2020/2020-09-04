[00:01] <Geth> ¬¶ doc: f993d01396 | Coke++ | doc/Language/5to6-perlfunc.pod6

[00:01] <Geth> ¬¶ doc: doc p5's substr EXPR, OFFSET, LENGTH, REPLACEMENT

[00:01] <Geth> ¬¶ doc: 

[00:01] <Geth> ¬¶ doc: Close #3550

[00:01] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f993d01396

[00:01] <linkable6> Link: https://docs.raku.org/language/5to6-perlfunc

[00:02] <linkable6> DOC#3550 [closed]: https://github.com/Raku/doc/issues/3550 [Hacktoberfest][RFE][docs] substr doc

[00:12] *** rbt left
[00:13] *** rbt joined
[00:22] *** aborazmeh joined
[00:22] *** aborazmeh left
[00:22] *** aborazmeh joined
[00:30] <[Coke]> Anyone using Pod::From::Cache?

[00:32] <[Coke]> .seen finanalyst 

[00:32] <tellable6> [Coke], I saw finanalyst 2020-09-03T15:08:32Z in #raku: <finanalyst_> If anyone could help, please email me rnhainsworth at-sign gmail etc

[00:35] <[Coke]> anyone suggest how to get from the cached pod object Pod::From::Cache provides to the output of 'raku --doc' ?

[00:37] <codesections> I haven't done that with Pod::From:Cache, but I have with Pod::Load.  And I think it'd be similar

[00:38] <cpan-raku> New module released to CPAN! Email::MIME (2.0.4) by 03RBT

[00:39] <[Coke]> you have a link to some code?

[00:40] <Geth> ¬¶ doc: edb07133e2 | Coke++ | 21 files

[00:40] <Geth> ¬¶ doc: remove old 'use v6'

[00:40] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/edb07133e2

[00:41] <codesections> [Coke]: I don't right off -- this was something I played around a bit with.  But I think it's a matter of `use Pod::To::Text;` and then `Pod::To::Text.render($pod)` where $pod is the pod object from `Pod::Load` or (I would think) `Pod::From::Cache`

[00:44] <codesections> This is where Pod::To::Text lives, in case that's helpful: https://github.com/rakudo/rakudo/blob/master/lib/Pod/To/Text.rakumod

[00:58] *** rbt left
[01:18] *** Kaeipi joined
[01:20] *** Kaeipi left
[01:21] *** Kaeipi joined
[01:22] *** Merfont joined
[01:22] <Geth> ¬¶ doc: codesections++ created pull request #3612: Add instructions for aspell installation/updating

[01:22] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3612

[01:22] *** Kaeipi left
[01:22] *** Kaiepi left
[01:22] *** Merfont left
[01:24] *** molaf left
[01:36] *** lucasb left
[01:36] *** molaf joined
[01:58] *** aborazmeh left
[02:12] <[Coke]> seems like this version of caching is just going to be much slower.

[02:13] <[Coke]> (slower to fill the cache, then have to re-render the pod if I want to use it cooked)

[02:14] <codesections> what is ¬´this version¬ª/what are you comparing it to?

[02:26] *** dolmen joined
[02:26] *** dolmen left
[03:26] *** nativecallable6 left
[03:26] *** sourceable6 left
[03:26] *** bisectable6 left
[03:26] *** greppable6 left
[03:26] *** reportable6 left
[03:26] *** benchable6 left
[03:26] *** releasable6 left
[03:26] *** statisfiable6 left
[03:26] *** squashable6 left
[03:26] *** notable6 left
[03:26] *** tellable6 left
[03:26] *** coverable6 left
[03:26] *** quotable6 left
[03:26] *** bloatable6 left
[03:26] *** committable6 left
[03:26] *** shareable6 left
[03:26] *** unicodable6 left
[03:26] *** evalable6 left
[03:26] *** linkable6 left
[03:26] *** reportable6 joined
[03:26] *** evalable6 joined
[03:26] *** linkable6 joined
[03:26] *** coverable6 joined
[03:26] *** bisectable6 joined
[03:27] *** nativecallable6 joined
[03:27] *** shareable6 joined
[03:28] *** unicodable6 joined
[03:28] *** greppable6 joined
[03:28] *** squashable6 joined
[03:28] *** committable6 joined
[03:28] *** quotable6 joined
[03:28] *** benchable6 joined
[03:28] *** tellable6 joined
[03:28] *** sourceable6 joined
[03:28] *** releasable6 joined
[03:28] *** notable6 joined
[03:29] *** statisfiable6 joined
[03:29] *** bloatable6 joined
[04:33] *** zacts joined
[04:45] *** gordonfish joined
[05:18] *** bocaneri joined
[05:23] *** Kaiepi joined
[05:24] *** andrzejku joined
[05:24] *** molaf left
[05:31] *** zacts left
[06:15] *** andrzejku left
[06:27] *** andrzejku joined
[06:53] *** zacts joined
[07:09] *** rindolf joined
[07:12] *** PavelB left
[07:15] *** wamba joined
[07:23] *** aluaces left
[07:24] <Geth> ¬¶ doc: 01cdbc5e27 | (Daniel Sockwell)++ (committed by Juan Juli√°n Merelo Guerv√≥s) | xt/aspell.t

[07:24] <Geth> ¬¶ doc: Add instructions for aspell installation/updating

[07:24] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/01cdbc5e27

[07:29] *** pecastro joined
[07:42] *** perigrin left
[07:42] *** peri404 joined
[07:51] *** oneeggeach joined
[07:51] *** Sgeo left
[07:57] *** oneeggeach left
[07:57] *** oneeggeach joined
[07:58] *** veesh_ joined
[08:00] *** veesh left
[08:01] *** veesh_ is now known as veesh

[08:05] *** domidumont joined
[08:12] *** tejr left
[08:16] *** MasterDuke joined
[08:18] *** wamba left
[08:18] *** agentzh left
[08:35] *** Xliff joined
[08:36] *** oneeggeach left
[08:43] *** Altai-man joined
[08:45] *** wamba joined
[08:45] *** agentzh joined
[08:45] *** agentzh left
[08:45] *** agentzh joined
[08:46] *** tejr joined
[08:51] *** leont joined
[08:52] <kawaii> I have an array containing strings which I'm printing and comma separating using `join`, is there a way to also wrap each term in backticks? I have a feeling `map` could be used but not sure how? :) `~@words.join(', ');`

[08:59] <El_Che> m: <a b c>.list.map(-> $v { "'$v'" }).join(',')

[08:59] <camelia> rakudo-moar 82d505269: ( no output )

[08:59] <El_Che> m: <a b c>.list.map(-> $v { "'$v'" }).join(',').say

[08:59] <camelia> rakudo-moar 82d505269: OUTPUT: ¬´'a','b','c'‚ê§¬ª

[09:02] <kawaii> El_Che: thanks :)

[09:02] <El_Che> there are probably beter ways :)

[09:03] <lizmat> m: my @a = <a b c>; say "`@a.join("`,`")`"

[09:03] <camelia> rakudo-moar 82d505269: OUTPUT: ¬´`a`,`b`,`c`‚ê§¬ª

[09:04] <El_Che> told you

[09:07] <kawaii> lizmat: oh wow, didn't expect something so clean, thanks :)

[09:14] *** MasterDuke left
[09:15] <timotimo> m: my @a = <a bb ccc>; say @a.fmt("`%s`", ", ")

[09:15] <camelia> rakudo-moar 82d505269: OUTPUT: ¬´`a`, `bb`, `ccc`‚ê§¬ª

[09:15] *** yht joined
[09:15] <timotimo> kawaii: i would consider this even clearer :3

[09:17] <kawaii> See imagine if I committed to learning Python instead of Raku, there would only ever be one way to do it.

[09:18] <kawaii> timotimo++

[09:19] <timotimo> m: my @a = <a bb ccc>; say <` `>.join: @a.join("`,`")

[09:19] <camelia> rakudo-moar 82d505269: OUTPUT: ¬´`a`,`bb`,`ccc`‚ê§¬ª

[09:19] <timotimo> if you want a bit of a tricky head-scratcher :)

[09:20] <kawaii> You spoil me timo

[09:36] *** cpan-raku left
[09:37] *** wamba left
[09:37] *** cpan-raku joined
[09:37] *** cpan-raku left
[09:37] *** cpan-raku joined
[09:42] *** aluaces joined
[09:45] *** wamba joined
[09:58] *** MasterDuke joined
[10:42] <cpan-raku> New module released to CPAN! Math::Libgsl::Elementary (0.0.3) by 03FRITH

[11:06] *** zacts left
[11:09] *** finanalyst left
[11:11] *** finanalyst joined
[11:24] <codesections> I'm a bit late to this, but I'd personally go with something like:

[11:24] <codesections> m: my @a = <a b c>; say @a.map({"`$_`"}).join(',')

[11:24] <camelia> rakudo-moar 49f3d433c: OUTPUT: ¬´`a`,`b`,`c`‚ê§¬ª

[11:26] <codesections> maybe not quite as concise, but it has a left-to-right flow (*first* put backticks around each thing, *then* join them) that fits the way my brain works :)

[11:26] <codesections> s/thing/element

[11:40] *** guifa left
[11:46] *** sena_kun joined
[11:48] *** Altai-man left
[11:54] *** guifa joined
[12:10] *** gordonfish left
[12:18] *** Black_Ribbon left
[12:19] <timotimo> m: my @a = <a b c>; say "`@a.join("`,`")`"

[12:19] <camelia> rakudo-moar 49f3d433c: OUTPUT: ¬´`a`,`b`,`c`‚ê§¬ª

[12:20] <timotimo> m: my @a = <a b c>; say "`" ~ ("`" X~ @a X~ "`").join(",") ~ "`"

[12:20] <camelia> rakudo-moar 49f3d433c: OUTPUT: ¬´``a`,`b`,`c``‚ê§¬ª

[12:20] <timotimo> m: my @a = <a b c>; say ("`" X~ @a X~ "`").join(",")

[12:21] <camelia> rakudo-moar 49f3d433c: OUTPUT: ¬´`a`,`b`,`c`‚ê§¬ª

[12:21] *** AlexDaniel` left
[12:22] *** cheer[m] left
[12:25] *** wamba left
[12:27] *** CIAvash joined
[12:36] *** unclechu joined
[12:36] *** AlexDaniel` joined
[12:36] *** cheer[m] joined
[12:36] *** matiaslina joined
[12:39] *** wamba joined
[12:46] <tbrowder> hi

[12:48] <tbrowder> what do you all think about hosting a github pages site here for raku blogging?

[12:49] <Xliff> Sounds like a great idea!

[12:50] <tbrowder> perhaps using getzola.org and zola for the generator or just the defaults avail with github pages.

[12:52] <Xliff> FWIW -- crossed the 450K lines of Raku mark this week! ;q

[12:53] <tbrowder> very good!

[12:53] <codesections> Xliff: wow!  Is that net or gross?  

[12:55] <codesections> I mean, do you have 450K lines of Raku code that you've written and kept (but would have written and replaced even more) or is that the total amount you've written, including things that were later deleted/replaced?

[12:56] <tbrowder> for a blog site i can offer a domain name of "rakulang.club" but there are lots of other raku names reserved (hopefully some by non-speculators), and a very few others available.

[12:56] <codesections> or, wait, did I misunderstand the subject of the sentence entirely? 

[12:57] <Xliff> codesections: 450k net

[12:58] <Xliff> codesections: Old version of progress sheet with list of projects -> https://drive.google.com/file/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/view?usp=sharing

[12:59] *** molaf joined
[13:00] <codesections> tbrowder: not really a fan of the '.club' TLD.  It sounds *very* casual/hobbyist to my ear

[13:00] <Xliff> GIMP is defunct for now. BABL is on hold.

[13:00] <Xliff> So those should probably come out... :/

[13:00] <codesections> Xliff: **wow**

[13:01] <tbrowder> agree, but see if you can find anything more suitable

[13:01] <tbrowder> xyz, cc, co

[13:02] <tbrowder> io, network

[13:02] <codesections> tbrowder: we'd obviously need consensus for this, but `blogs.raku.org` would be good option

[13:02] <Xliff> codesections: Everything above and including p6-OpenVR.... although p6-OpenVR is currently on hold. https://github.com/Xliff?tab=repositories 

[13:03] <tbrowder> \o/ that's why you get the big bucks!!!

[13:03] <guifa> Is there an (easy) way to parse a script and grab the plain-text content of certain blocks?

[13:03] *** molaf left
[13:04] <guifa> If it‚Äôs possible but complicated I‚Äôll go an easier but less technically correct way :-)

[13:04] <codesections> guifa: certain Pod blocks?

[13:04] <guifa> No =/ lol method blocks

[13:04] <guifa> I‚Äôm wanting to generate localizable files based on Exception.pm6

[13:05] <guifa> And so basically read the file, and for each class, pull out the content of the message method

[13:05] *** molaf joined
[13:05] <Xliff> guifa: Hrm... you mean "method blah { <everything here> }" ?

[13:05] <guifa> Xliff: yes

[13:05] <guifa> That‚Äôs actually pretty easy going line-by-line since method message { is always on a line by itself, and its terminating bracket is always on a line itself, and properly idented (yay style guidelines!)

[13:06] <guifa> But if I can do a more-technically-accurate way that‚Äôd be preferred of course

[13:06] <rypervenche> guifa: I was looking at that yesterday for Exceptions.pm6

[13:07] <codesections> guifa: This isn't *really* parsing, but if you do pull it out with a regex, you can use a recursive regex to be sure you're matching the correct closing `}`

[13:07] *** peri404 is now known as perigrin

[13:09] <Xliff> codesections: LOL! I was just about to use those! :)

[13:10] *** __jrjsmrtn__ joined
[13:10] <codesections> something like  rx/ method message '{' <-[{}]>* '}' || method message '{'[ <-[{}]>* <~~> <-[{}]>* ]* '}' /

[13:11] <codesections> er, with <.ws> in there a few times

[13:11] *** _jrjsmrtn left
[13:11] <codesections> Xliff: yeah, <~~> is very handy!  I just recently added it to the docs (though it's not on the website yet)

[13:12] <Geth> ¬¶ Raku-Steering-Council/main: 06b4bc1c3b | (Will Coleda)++ (committed using GitHub Web editor) | nominations/2020/voting-form.md

[13:12] <Geth> ¬¶ Raku-Steering-Council/main: Update voting-form.md

[13:12] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/06b4bc1c3b

[13:14] <guifa> So this is roughly the tempalte that I‚Äôm thinking about generating

[13:14] <guifa> https://gist.github.com/alabamenhu/73799fca73f9f31a855445a07e2f34b2

[13:15] <[Coke]> where do you specify the language in use?

[13:15] <Xliff> codesections: perl6 -e 'my $m = "lib/SOUP/ContentDecoder.pm6".IO.slurp; my rule curlys { "\{" [ <-[{}]>+ || <curlys> ] "\}" }; say $m  ~~ / "method new (" .+? ")" \s+ <curlys> /;'

[13:15] <guifa> That‚Äôll be at a different level.  So this file would be in, e.g., Intl::X::es

[13:15] <guifa> Intl::X would grab the translations from the appropriate language

[13:17] <guifa> It‚Äôll basically just wrap every single exception with the same method, where it will grab the full identifier for the exception, and then check and see if a translation exists for the language, and if not, calls the original English one

[13:19] <codesections> guifa: I think this project is really cool and I like the idea of Raku becoming more international/accessible.  But I'm kind of confused about the use case.  Is the idea that this would help programmers who have strong enough English proficiency to understand `X::Cannot:Lazy` but not `Cannot $.action a lazy list`?  Or is the idea that exceptions might end up being shown to end users in some cases? 

[13:19] <guifa> codesections: for things like compilation errors, the error names aren‚Äôt shown, just the text

[13:20] <codesections> Yeah, right.  I guess I should have said "programmers who have strong enough English proficiency to program Raku in general"

[13:20] *** wamba left
[13:21] <guifa> Right now probably most programmers using Raku have a decent command of English, for sure

[13:22] <guifa> But the keyword is right now :-)

[13:23] <Xliff> This regex should actually work: my rule curlys { "\{" [ <-[{}]>+ || .+? <~~> .+? ] "\}" };

[13:23] <Xliff> And... m:g/ "method" <.ws> (\w+) <.ws> "(" .+? ")" <.ws> <curlys> <.ws>/;

[13:23] <guifa> Xliff++

[13:24] <codesections> hmm, now that I think about it, maybe the exception messages *are* a bigger part of the English requirements than I was thinking.  I was thinking ¬´even if we fix the exception messages, it would still be *really hard* to program Raku without knowing English pretty well ‚Äì after all, about half of the contents of any given Raku file are English words¬ª.  But I think I was mistaken

[13:25] <codesections> After thinking about it, most of those words are a pretty small subset of keywords, which would be pretty easy to learn even without knowing english (& especially without English grammar)

[13:25] <guifa> Exactly

[13:26] <codesections> Ok, thanks, I'm with you now.  Like I said, really cool project :D

[13:26] <guifa> If you‚Äôve ever been to StackOverflow en espa√±ol or em portugu√™s, a lot of their questions could probabyl be pre-answered if they had error messages in the language 

[13:26] <guifa> The nice thing is, since it‚Äôs in module space (and not compiled or anything), if they asked the question in an English language forum later, they could just re-run the script to get the original error and others could help out

[13:27] <guifa> (or maybe I could just have it report the name of the exception in braces, since in English that doesn‚Äôt always print out)

[13:32] <guifa> ‚Äúand not compiled‚Äù ‚Äî> ‚Äúand not fixed in core‚Äù

[13:33] *** aborazmeh joined
[13:33] *** aborazmeh left
[13:33] *** aborazmeh joined
[13:48] *** andrzejku left
[13:49] <Geth> ¬¶ Raku-Steering-Council/main: 118f096e81 | (Will Coleda)++ (committed using GitHub Web editor) | nominations/2020/voting-form.md

[13:49] <Geth> ¬¶ Raku-Steering-Council/main: Add note about who can vote

[13:49] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/118f096e81

[13:50] <[Coke]> I am looking forward to getting some votes so I can test out the script. Anyone know of an easy way to download multiple messages from gmail?

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: 68dcbadaff | (Aleks-Daniel Jakimenko-Aleksejev)++ | nominations/2020/AlexDaniel.md

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: Remove employer information

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: 

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: I don't think it matters in this case.

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/68dcbadaff

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: a8ff138333 | (Aleks-Daniel Jakimenko-Aleksejev)++ | nominations/2020/AlexDaniel.md

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: Update my nomination for a more serious one

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: 

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: The previous one wasn't really achieving anything, and not like this

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: one necessarily will, but it's worth a try.

[13:50] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/a8ff138333

[13:51] <[Coke]> Where was the original announcement posted? Can someone send out a link to the ballot?

[13:52] <[Coke]> AlexDaniel++

[13:54] <Geth> ¬¶ Raku-Steering-Council/main: 8ad73cb835 | (Will Coleda)++ (committed using GitHub Web editor) | nominations/2020/voting-form.md

[13:54] <Geth> ¬¶ Raku-Steering-Council/main: add link to platforms

[13:54] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/8ad73cb835

[13:54] <MasterDuke> why doesn't a roast commit bit make you eligible?

[13:54] <[Coke]> That is an excellent question. @lizmat?

[13:55] <AlexDaniel> [Coke]: it should

[13:55] *** rindolf left
[13:56] <[Coke]> Someone make a PR adding it?

[13:56] <[Coke]> good catch, MasterDuke++

[13:59] <AlexDaniel> not exactly why you ++-ed me, as my text still reads as if I'm starting a riot :)

[13:59] <AlexDaniel> not exactly sure*

[14:02] <AlexDaniel> [Coke]: how about ‚Äúif you send more than one email, only the last one will be counted‚Äù ?

[14:02] <AlexDaniel> for those who change their minds for whatever reason :)

[14:03] <[Coke]> Sure.

[14:03] <Geth> ¬¶ Raku-Steering-Council/fix-2020-vote-announcement: dc65b0247c | (Vadim Belman)++ | announcements/20200720.md

[14:03] <Geth> ¬¶ Raku-Steering-Council/fix-2020-vote-announcement: Add Roast to the list of repos

[14:03] <Geth> ¬¶ Raku-Steering-Council/fix-2020-vote-announcement: review: https://github.com/Raku/Raku-Steering-Council/commit/dc65b0247c

[14:04] <vrurg_> https://github.com/Raku/Raku-Steering-Council/pull/28 - PR for the roast 

[14:05] *** vrurg_ is now known as vrurg

[14:05] *** rindolf joined
[14:05] <Geth> ¬¶ Raku-Steering-Council/main: 969793e247 | (Will Coleda)++ (committed using GitHub Web editor) | nominations/2020/voting-form.md

[14:05] <Geth> ¬¶ Raku-Steering-Council/main: mention one person one vote

[14:05] <Geth> ¬¶ Raku-Steering-Council/main: 

[14:05] <Geth> ¬¶ Raku-Steering-Council/main: hopefully people don't abuse this since I"m doing manual work here.

[14:05] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/969793e247

[14:05] <Geth> ¬¶ Raku-Steering-Council: vrurg++ created pull request #28: Add Roast to the list of repos

[14:05] <Geth> ¬¶ Raku-Steering-Council: review: https://github.com/Raku/Raku-Steering-Council/pull/28

[14:06] *** andrzejku joined
[14:09] <Geth> ¬¶ Raku-Steering-Council/main: dc65b0247c | (Vadim Belman)++ | announcements/20200720.md

[14:09] <Geth> ¬¶ Raku-Steering-Council/main: Add Roast to the list of repos

[14:09] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/dc65b0247c

[14:09] <Geth> ¬¶ Raku-Steering-Council/main: b1ab4396c2 | (Vadim Belman)++ (committed using GitHub Web editor) | announcements/20200720.md

[14:09] <Geth> ¬¶ Raku-Steering-Council/main: Merge pull request #28 from Raku/fix-2020-vote-announcement

[14:09] <Geth> ¬¶ Raku-Steering-Council/main: 

[14:09] <Geth> ¬¶ Raku-Steering-Council/main: Add Roast to the list of repos

[14:09] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/b1ab4396c2

[14:19] *** guifa` joined
[14:20] <lizmat> MasterDuke: I thought it did, good catch!

[14:21] <lizmat> [Coke] vrurg thanks!

[14:23] <AlexDaniel> actually, I think it did, indeed

[14:24] <AlexDaniel> so, ‚Äúany person with a commit bit in either of these repositories‚Äù

[14:24] <AlexDaniel> meaning any person in the Raku org

[14:24] <AlexDaniel> [Coke]: OK, can we rethink this again, please

[14:25] <[Coke]> ?

[14:25] <AlexDaniel> [Coke]: I'm trying to understand what the text says and what it is meant to say

[14:25] <[Coke]> which text?

[14:25] <AlexDaniel> [Coke]: the one I quoted above

[14:25] <AlexDaniel> [Coke]: a commit bit = write access to the repo. I think any person in the org has write access

[14:26] <AlexDaniel> [Coke]: so we don't really have to list nqp and roast

[14:26] <AlexDaniel> [Coke]: however, there's one more interesting thing

[14:26] <AlexDaniel> there's https://github.com/Raku/ and https://github.com/perl6/

[14:26] <AlexDaniel> I did my very best at the time to mass-invite people from one org to the other

[14:26] <AlexDaniel> but some did not accept the invitation and were left behind

[14:27] <AlexDaniel> now that nqp, roast and doc repos are in the Raku org, some people *do not have write access to them*

[14:27] <AlexDaniel> even though they were active like two years ago, let's say

[14:27] <AlexDaniel> now, that's one thing

[14:27] <[Coke]> I'm not the arbiter here. What you're saying makes sense, though.

[14:27] <AlexDaniel> another thing is that people can be added to the org at any point of time

[14:28] *** aluaces left
[14:28] <AlexDaniel> soooo‚Ä¶ I don't know what this is supposed to mean

[14:28] *** Sgeo joined
[14:28] <AlexDaniel> I don't know if there are any logs for that, for example

[14:28] <lizmat> I would say that if they did not accept the invitation then, they would not be interested in voting now anyway

[14:29] <[Coke]> I would update the text to mention both the raku/perl6 orgs, leave the individual repos (because that is going to make more sense to some than 'am i in an org'). I wouldn't worry about timing, as the first vote was intended (I thought) to be pretty open.

[14:30] <[Coke]> I can also see lizmat's point about the old perl6 org - but given that it could have been a mistake on our part, I'd be slightly more open to leaving it in

[14:30] <lizmat> yeah, sure

[14:30] <[Coke]> my 2¬¢.

[14:31] <lizmat> this election should be as open as possible, as we currently don't really have any rules about them that are ok'd by a council with a mandate

[14:31] <AlexDaniel> lizmat: for example, like audreyt not allowed to vote? :)

[14:31] <AlexDaniel> ‚ÄúInvitation expired. User did not accept this invite for 7 days‚Äù

[14:31] <AlexDaniel> they're not in moarvm or rakudo orgs, just in the perl6 org

[14:32] <Geth> ¬¶ Raku-Steering-Council/main: 6f974f74c3 | (Will Coleda)++ (committed using GitHub Web editor) | announcements/20200720.md

[14:32] <Geth> ¬¶ Raku-Steering-Council/main: add link to ballot

[14:32] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/6f974f74c3

[14:32] <lizmat> well, I would hope that audreyt *would* vote

[14:32] <El_Che> is she still involved?

[14:32] <MasterDuke> or know any of the nominees?

[14:32] <AlexDaniel> lizmat: well, that's the point, people did not accept their invitations in 7 days so some of them technically can't, but yes we would hope them to vote and their votes to be counted

[14:33] <lizmat> MasterDuke: she knows me  :-)

[14:33] <jdv79> i saw her on a ted (maybe tedx) thing recently - she might be tied up with being whatever minister she is of taiwan or whatever.

[14:33] <AlexDaniel> where's my goddamn script‚Ä¶ maybe I can reinvite everyone real quick

[14:33] <[Coke]> "might"

[14:33] <MasterDuke> ah, ok. fwiw, i'm actually fine with anybody voting

[14:34] <[Coke]> AlexDaniel: eh. easier to just check against p6 org if needed.

[14:34] <lizmat> AlexDaniel: that would be great

[14:34] <El_Che> she's a miniter without department, but she's pretty central in the covid19 management effort

[14:34] <[Coke]> I mean, go ahead and re-invite, but don't worry about it in terms of the vote.

[14:34] <[Coke]> My favorite minister.

[14:34] <jdv79> will it really be that close?  will there be a "hanging chad" type situation?  sounds exicting!

[14:34] <lizmat> AlexDaniel: I was thinking along the lines of sending all of these people a ballot ?

[14:35] *** Youssef joined
[14:35] <AlexDaniel> lizmat: I don't know how to do that

[14:35] <lizmat> jdv79: careful what you wish for  :-)

[14:35] <Youssef> hey

[14:35] <lizmat> AlexDaniel: ok, /me neither

[14:35] <AlexDaniel> Pending invitations: 154

[14:35] <AlexDaniel> ok that was easier than I thought

[14:37] <AlexDaniel> I also gave write access to 6 people who were not added to the Raku team

[14:38] *** Youssef left
[14:38] <AlexDaniel> and now I'm reinviting 34 people to raku-community-modules, because that's also a thing

[14:39] <lizmat> AlexDaniel++

[14:39] <AlexDaniel> and also 2 people who I think rejected their invitations but remained in perl6 org‚Ä¶

[14:39] <El_Che> weird

[14:53] <Xliff> Weird....

[14:53] <Xliff> I wonder if you will be able to do something like this: "my $x :=  RakuAST::StatementList.new(...); EVAL $x"

[14:55] *** aborazmeh left
[15:06] *** camelia left
[15:06] *** camelia joined
[15:18] *** eery left
[15:18] *** eery joined
[15:22] *** molaf left
[15:36] <AlexDaniel> ‚ÄúKaiepi could not be invited because of a system error. Contact support.‚Äù

[15:36] <AlexDaniel> huh

[15:37] <AlexDaniel> system error, hmm‚Ä¶ very descriptive :)

[15:37] <Kaiepi> ?

[15:38] <AlexDaniel> Kaiepi: you did accept the invite today, right?

[15:38] <Kaiepi> just did

[15:40] <AlexDaniel> Kaiepi: I have sent a bunch of invites again, now I received two automated *emails* from github saying there was a system error

[15:40] <AlexDaniel> it's cool, and weird‚Ä¶

[15:41] <AlexDaniel> both invites were accepted, so no problem

[15:41] <AlexDaniel> maybe I have sent them twice, or maybe people accepted previous invites while I was sending the new ones‚Ä¶ I don't know :)

[15:42] *** MasterDuke left
[15:45] *** Altai-man joined
[15:48] *** sena_kun left
[16:08] *** MasterDuke joined
[16:23] *** aluaces joined
[16:39] * [Coke] gets a second early vote and rejects it

[16:42] <El_Che> 13 candidates

[16:42] *** andrzejku left
[16:43] *** aluaces left
[16:43] *** andrzejku joined
[16:49] *** zacts joined
[16:50] <[Coke]> Aye.

[16:50] <[Coke]> "so far"

[16:53] *** approaching236 joined
[17:08] * [Coke] is so old he remembers oraperl.

[17:10] *** aluaces joined
[17:13] *** vgrato_ joined
[17:13] *** approaching236 left
[17:20] *** moony left
[17:23] *** moony joined
[17:41] *** finanalyst_mobil joined
[17:41] *** MilkmanDan left
[17:44] *** finanalyst left
[17:44] *** andrzejku left
[17:45] *** finanalyst_mobil left
[17:47] <jdv79> ive read of oraperl and others.  sounds ridiculous but i wasn't there to "get it"

[17:48] <jdv79> i came of age around 5.6.?

[17:50] *** MilkmanDan joined
[17:54] <Altai-man> .tell El_Che hi! how moarvm test can be failing if it's rakudo profile test that is wrong? I think we need more details gathered somewhere in a single post.

[17:54] <tellable6> Altai-man, I'll pass your message to El_Che

[17:54] *** Kaiepi left
[17:55] *** Kaiepi joined
[18:06] <Geth> ¬¶ ecosystem: codesections++ created pull request #535: Add 3 related pod-literate distributions

[18:06] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/pull/535

[18:13] *** zacts left
[18:20] <[Coke]> hopefully we will not end up with a tie since we have no documented way of dealing with that. :)

[18:20] <[Coke]> Ugh. not only can you not bulk save messages from gmail web, you have to click through into each message, there's no right click on the overall listing.

[18:21] *** bocaneri left
[18:21] * [Coke] may have to update that script to download things over IMAP. :)

[18:34] *** domidumont left
[18:45] <Geth> ¬¶ ecosystem: codesections++ created pull request #536: Add Pod::Literate

[18:45] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/pull/536

[18:48] * lizmat even remembers having used sybperl

[18:57] *** natrys joined
[18:57] <[Coke]> TIL Sybase -> SQL Server

[19:05] <lizmat> hehe

[19:05] <lizmat> well, barely SQL really

[19:05] * [Coke] was just basing that on a skim of the wikipedia

[19:06] <[Coke]> ?

[19:06] <[Coke]> ww

[19:16] * [Coke] finds a way to get an MBOX dump of a label in gmail. maybe he'll use that.

[19:18] <codesections> [Coke]: You realize you're trying to find ways to make a *one-time-task* more efficient, right? https://xkcd.com/1205/ 

[19:18] <codesections> :D (I say only because I've totally been there, a bunch of times)

[19:20] <[Coke]> if it's 50 votes, I can click that many times. if it's 100... then we're getting into automation territory

[19:20] <[Coke]> (more to make sure I don't miss one than to make it easier on me.)

[19:20] <codesections> Fair enough :D

[19:37] <tbrowder> codesections: if we were to use zola for a raku.org blogging platform, would it have to have a travis-ci build? or would it suffice if a blogger built and tested his branch locally and just push a PR for updating the static files?

[19:38] <codesections> The latter is fine.  In fact, that's what I do for my site

[19:38] <tbrowder> btw, i continue to fall into the one-time-task trap, i call it rabbit-hole programming

[19:42] <codesections> Having been both a practicing lawyer and (now) a programmer, I can tell you that it's a *huge* difference between the two professions.  <warning: massive over-generalization>lawyers waste *so much time* because they're not willing to spend any time right now to save time in the future.  Programmers waste *so much time* because they're (we're) willing to spend too much time now to save time in the

[19:42] <codesections> future</warning> 

[19:43] <codesections> (I'm definitely on the programmer side of that continuum, by the way) 

[19:43] <codesections> Just *one* of the reasons it was a good career change :)

[19:45] <Geth> ¬¶ ecosystem: 1c862d5a35 | (Daniel Sockwell)++ | META.list

[19:45] <Geth> ¬¶ ecosystem: Add Pod::Literate

[19:45] <Geth> ¬¶ ecosystem: 

[19:45] <Geth> ¬¶ ecosystem: URL: https://github.com/codesections/pod-literate

[19:45] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/1c862d5a35

[19:45] <Geth> ¬¶ ecosystem: 64f85985e0 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[19:45] <Geth> ¬¶ ecosystem: Merge pull request #536 from codesections-forks/pod-literate

[19:45] <Geth> ¬¶ ecosystem: 

[19:45] <Geth> ¬¶ ecosystem: Add Pod::Literate

[19:45] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/64f85985e0

[19:45] <tbrowder> isn't part of the lawyer problem the bill or perish conundrum?

[19:46] <tbrowder> my son is a lawyer and i've read most of grisham's books

[19:46] *** sena_kun joined
[19:47] <tbrowder> my son loves the law but not with the typical corporate firms

[19:48] *** Altai-man left
[19:49] <rypervenche> codesections: https://xkcd.com/1205/

[19:49] <tbrowder> anyhow, we have at least three of us interested in an official raku blog site.

[19:49] <tbrowder> named perhaps "blogs.raku.org".

[19:50] <tbrowder> using getzola.org

[19:50] <tbrowder> suitable for a problem solving entry?

[19:50] <Geth> ¬¶ ecosystem: codesections++ created pull request #537: Add Pod::Weave

[19:50] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/pull/537

[19:53] <lizmat> tbrowder: I would love to see a dedicated Raku blog site...   but why getzola?

[19:55] <tbrowder> well, static, easy, accessible to all with github id, mutable, markdown, ...

[19:55] <codesections> rypervenche: apparently we think alike ‚Äì we got on this topic because I linked that xckd a few minutes ago 

[19:56] <rypervenche> Ha!

[19:56] <tbrowder> some work for sure to start the site, theme, and layout.

[19:57] <tbrowder> codesections has a good working site as an example

[19:57] <codesections> tbrowder: re blog: I'm not sure if I'm one of the three you were counting or not.  I'm definitely interested in the idea, and would be happy to help, and to cross-post raku related stuff there.  But I'll probably still post to my own blog first/as the canonical URL

[19:58] <tbrowder> just needs some thought about multi-user design

[20:00] <tbrowder> codesections: i've never thought it would be the only such thing, just an easy and convenient site for those of use who don't have good alternatives any longer

[20:00] <tbrowder> and dedicated to raku

[20:01] <codesections> tbrowder: if we don't mind a little bit of manual work, we could just set it up as a git repo and let people submit PRs.  Then a smaller group could approve/merge PRs and trigger a build

[20:01] <tbrowder> that was pretty much my thought. we are "in gee"

[20:04] <tbrowder> except that i'm not sure we need pr appoval and travis since i envision bloggers would have their own directory under their github name or some other id

[20:05] <tbrowder> but i think that's what perl.org does

[20:05] <codesections> Oh, that could work too.  I guess I was imagining that people could send in PRs without being pre-approved as an "official blogger" for the site

[20:06] <Grinnz> blogs.perl.org can be signed up for by anyone, fwiw

[20:06] <tellable6> 2020-09-03T17:36:40Z #raku <jmerelo> Grinnz no, they are not, I'm afraid. There's a backlog of release-specific docs, we just cleared the one corresponding to the 6.d release

[20:06] <codesections> I guess we could do both -- the "smaller group" who approves PRs could be all the bloggers (which would be an easy group to join).  But if you don't feel like it, you could just submit a on-off PR

[20:06] <Grinnz> it's not linked to cpan or anything

[20:07] <Grinnz> but yeah the blog posts are organized by author

[20:07] <Grinnz> which makes sense, what one person posts largely has little to do with what someone else posts

[20:07] <tbrowder> well, official may be too strong a word for the moment. i think the new RSC could take care of any problems. and entries would be subject to issues and corrections

[20:08] <codesections> Well, sure.  But there has to be *some* list of people with commit rights to the Git repo.  It can't just be open to the whole Internet

[20:08] <codesections> (and all its bots)

[20:08] <Grinnz> when considering replacements for blogs.perl.org several PR workflows were considered, but i think that is a non-starter in that case

[20:09] <Grinnz> the reason blogs.perl.org works is because nobody has to "authorize" your posts

[20:09] <Grinnz> it's a balance with managing bot spam, yes

[20:11] <Grinnz> i should say: one of the reasons, the other main one being that it's a central place everyone knows how to find

[20:11] <Grinnz> which of course makes it more appealing to spammers

[20:12] <tbrowder> well the repo should be in github:raku so anyone can submit a pr, but i think people with commit bits could submit prs as a courtesy if they want to, or just push it if not.

[20:12] *** rindolf left
[20:13] <codesections> Grinnz: I agree with most of what you said.  I guess my point is that there's a difference between "anyone can use this form to submit a post" (moderately tempting to spammers) and "anyone has commit access to this git repo" (a *much* larger security issue).  If we really want to make it that easy for people we haven't pre-approved to submit posts, a static site generator using a git repo might not

[20:13] <codesections> be the right backend.  

[20:14] <codesections> tbrowder: yeah, that's about what I was thinking.  It keeps the manual work very low ‚Äì most people would be able to merge their own PRs

[20:16] <Grinnz> my point is mostly, if you're going to make it depend on *any* manual work to function normally, it's eventually going to stall

[20:17] <gfldex> Any site that does not grant me full control of my posts is not going to get my posts.

[20:17] <Grinnz> and that.

[20:18] <codesections> gfldex: If I understood tbrowder's suggestion, the idea is that you/everyone who asked for it would have full control of their own posts.  It would just be guest posts that would need a regular to merge their PR

[20:19] <codesections> Grinnz:  I'm totally open to the idea that you're right.  Why do you think that's the case for a blogging site but not for a software project (where some group of people has to manually approve PRs) or CPAN (manual approval)?

[20:20] <Grinnz> well, CPAN only has manual approval for account creation, not uploads

[20:20] <Grinnz> but yes, it is necessary there

[20:20] <Grinnz> that governs the ability to upload software people actually use, it's a bit different than the worst case of just having a bunch of spam

[20:21] <codesections> ¬´manual approval for account creation, not uploads¬ª.  Isn't that basically the suggestion here, though?  Except that it's even less of a barrier, because if you don't want to create an account, you can just submit a one-time PR.

[20:23] <codesections> Anyway, I don't have strong feelings on the matter -- just thinking it through and trying to understand perspectives.  I'm happy to do what I can to help with either setup

[20:25] <gfldex> https://pl6anet.org/ is an agregator that doesn't really work because we don't agree on a blog engine. If we would (git based should work fine) we could have blog.raku.org be an aggregator that actually works. The approval would then boil down to adding another repro to fetch data from.

[20:26] <codesections> oooh, I like that idea!

[20:26] <gfldex> That also allows easy crossposts if an author so wishes.

[20:28] <timotimo> https://indieweb.org/POSSE

[20:29] <codesections> gfldex: agreed.  And we could even still have a PR option for anyone who is just interested in submitting a one-off post and doesn't want to bother setting up a repo for it

[20:30] <gfldex> indeed. We can also have commit bits for the advent calendar and such.

[20:37] <tbrowder> why two repos? just create raku/blogs.raku.org as the aggregator and src or i don't understand the idea.

[20:38] <cpan-raku> New module released to CPAN! Font::FreeType (0.3.4) by 03WARRINGD

[20:41] <tbrowder> when lizmat does the weekly it doesn't matter where the posts are.

[20:41] <tbrowder> so the aggregator seems like overkill to me

[20:41] <lizmat> indeed, it doesn't, but it might provide good SEO

[20:41] <tbrowder> ah, i see

[20:42] <gfldex> i would like to be able to search all raku blog posts

[20:42] <gfldex> i do that quite often on my own blog

[20:43] <codesections> tbrowder: I'm pretty sure the idea isn't to have 2 repos, but to have n+1 repos, where n is the number of approved bloggers.  Which means we can really easily add new people without giving everyone commit rights to the one repo

[20:45] <tbrowder> ok, as long as it works and someone knows the mechanics it's fine with me.

[20:50] *** molaf joined
[20:53] <guifa`> Is SlurpySentry an old thing?  

[20:54] *** wamba joined
[20:54] <lizmat> that stirs a very vague memory

[20:54] <lizmat> from the Parrot days

[20:55] <lizmat> ah, it's actually still alive in Exception

[21:02] <Geth> ¬¶ ecosystem: codesections++ created pull request #538: Add Pod::Tangle

[21:02] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/pull/538

[21:04] <guifa`> Yeah, it's a private role that's annoying to access from outside :-)

[21:05] <guifa`> But it's not used at all anwyhere else in the codebase

[21:07] <codesections> Can anyone help me figure out why the CI build for this ecosystem PR failed? https://github.com/Raku/ecosystem/pull/537

[21:07] <codesections> According to the build log, it was a problem with GTK::Simple (a transitive dep) https://travis-ci.com/github/Raku/ecosystem/builds/182839374#L223

[21:07] <Geth> ¬¶ ecosystem: 40f7685b61 | (Daniel Sockwell)++ | META.list

[21:07] <Geth> ¬¶ ecosystem: Add Pod::Weave

[21:07] <Geth> ¬¶ ecosystem: 

[21:07] <Geth> ¬¶ ecosystem: URL: https://github.com/codesections/pod-weave

[21:07] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/40f7685b61

[21:07] <Geth> ¬¶ ecosystem: 12d4437ba5 | (Daniel Sockwell)++ | META.list

[21:07] <Geth> ¬¶ ecosystem: Pushing to trigger a CI rebuild

[21:07] <Geth> ¬¶ ecosystem: 

[21:07] <Geth> ¬¶ ecosystem: The previous build failed because the dependencies were not yet

[21:07] <Geth> ¬¶ ecosystem: available but are now.

[21:08] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/12d4437ba5

[21:08] <Geth> ¬¶ ecosystem: 7051043de1 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[21:08] <Geth> ¬¶ ecosystem: Merge pull request #537 from codesections-forks/pod-weave

[21:08] <Geth> ¬¶ ecosystem: 

[21:08] <Geth> ¬¶ ecosystem: Add Pod::Weave

[21:08] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/7051043de1

[21:08] <codesections> Oh, never mind I guess?

[21:09] <timotimo> kind of looks like GTK::Simple caused the failure

[21:09] <codesections> Yeah, JJ merged with the comment ¬´No idea why gtk::Simple is in the dependencies. Merged¬ª

[21:12] <timotimo> i don't know how exactly the CI job works

[21:12] <timotimo> oh, it does kind of look like something indirectly depends on GTK::Simple

[21:15] <timotimo> greppable6: GTK::Simple

[21:16] <greppable6> timotimo, 762 lines, 8 modules: https://gist.github.com/ee8c3649b6e91472eef2ac2c8b8bebb4

[21:17] *** sno left
[21:20] *** sno joined
[21:35] *** yht left
[21:46] *** natrys left
[21:51] *** Black_Ribbon joined
[21:57] *** aluaces left
[22:10] *** wamba left
[22:11] <codesections> basic module/ecosystem question: do I upload my module to *one of* p6c or CPAN, or does it make sense to upload to both?

[22:14] <timotimo> what goes down more often, the cpan, or github? %)

[22:15] <codesections> But is that a reason to *pick* one over the other, but it'd mess something up to do both?  Or does uploading to both offer redundancy?

[22:16] <codesections> (also, I'm _assuming_ from the way you asked that the answer to your question is "github", but I don't actually know anything about CPAN's reliability -- I've never used it before)

[22:21] <Grinnz> considering cpan is a distributed flat filesystem, i don't think it's ever gone down

[22:22] <codesections> That's kind of what I figured :)

[22:22] <tbrowder> cpan just works, and the "ecosystem" is susceptible to user errors imho in terms of the proper source for a given release

[22:22] <codesections> But my first question still stands: is it better to do CPAN or CPAN *and* p6c?

[22:22] <tbrowder> i

[22:23] <tbrowder> my vote: cpan only

[22:28] <tbrowder> ask ugexe

[22:30] <tbrowder> zef man

[22:34] <codesections> tbrowder: I knew what you meant, but that really made me thing of the "Ed, man! !man ed" story.  Too bad zef doesn't have a manpage (at least not yet)

[22:35] <codesections> https://www.gnu.org/fun/jokes/ed-msg.html

[22:38] <tbrowder> i haven't followed the ecosystem lately, but early on the move to cpan, after it became available, the move to cpan was encouraged due to release source issues with listing on github. doing both i believe is not fruitful.

[22:38] <tbrowder> and mi6 works great with cpan

[22:39] <codesections> tbrowder++ thanks.  I think I'll submit a PR to add a sentence along those lines to the docs.  And if anyone thinks otherwise, they can chime in on the PR

[22:44] <tbrowder> i'm pretty sure lizmat is cpan only

[22:45] <tbrowder> with mi6

[23:03] *** cpan-raku left
[23:03] *** cpan-raku joined
[23:03] *** cpan-raku left
[23:03] *** cpan-raku joined
[23:08] *** hungrydonkey joined
[23:31] *** sena_kun left
[23:34] <Xliff> Has that build issue been fixed in rakudobrew?

[23:44] *** leah2 left
[23:49] *** hungryd8 joined
[23:51] *** leont left
[23:52] *** hungrydonkey left
