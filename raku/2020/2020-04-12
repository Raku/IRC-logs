[00:10] *** rbt left
[00:24] *** rbt joined
[00:38] *** MasterDuke left
[00:40] *** sena_kun joined
[00:42] *** Altai-man_ left
[01:10] *** rbt left
[01:11] *** rbt joined
[01:14] <jdv79> is there a terse Map construction form?

[01:15] <jdv79> as in we have () for list and [] for array and {} for hash

[01:16] <AlexDaniel> jdv79: not that I know of

[01:18] <jdv79> is there a way to bind a value in a {}?  that could work also.

[01:19] *** aborazmeh left
[01:20] <AlexDaniel> m: my %e := Map.new(‘a’, 1, ‘b’, 2); %e<c> = 42; dd %e

[01:20] <camelia> rakudo-moar b9105f1a8: OUTPUT: «Map.new((:a(1),:b(2)))␤»

[01:20] <AlexDaniel> hmmm

[01:20] <AlexDaniel> shouldn't it like… complain?

[01:20] <AlexDaniel> 6c: my %e := Map.new(‘a’, 1, ‘b’, 2); %e<c> = 42; dd %e

[01:20] <committable6> AlexDaniel, https://gist.github.com/09943cb4d55dc59ffa704823ef291df6

[01:20] <AlexDaniel> bisect: my %e := Map.new(‘a’, 1, ‘b’, 2); %e<c> = 42; dd %e

[01:20] <bisectable6> AlexDaniel, Bisecting by exit code (old=2015.12 new=b9105f1). Old exit code: 1

[01:21] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/c807602ef81cff6761b640728e4e84b1

[01:21] <bisectable6> AlexDaniel, (2019-07-24) https://github.com/rakudo/rakudo/commit/2ee82afe6e6713c26b929e2855ea05d8eb3b9fee

[01:21] <jdv79> i think only exists pairs are immutable

[01:21] <jdv79> *existing

[01:24] <AlexDaniel> R#3617

[01:24] <linkable6> R#3617 [open]: https://github.com/rakudo/rakudo/issues/3617 [regression] Modifying a Map no longer complains

[01:32] <jdv79> the last bits of https://docs.perl6.org/type/Pair#method_freeze look odd

[01:33] <jdv79> what does "create a new Pair, with a decontainerized key/value" mean and the example looks borked

[01:36] <AlexDaniel> https://github.com/Raku/doc/commit/41d25048473c1d985feed3a7c31472425e86fc5d#diff-ecba281d12d8beaa99a6529671eebae1R308

[01:36] <AlexDaniel> yeah, no idea what was meant there

[01:37] <AlexDaniel> jdv79: I guess the example is trying to say “just call .Map.head” on it

[01:37] <jdv79> i think its implying that Map coercion is the only way?

[01:37] <jdv79> yeah.  lame.

[01:46] *** ofperfection left
[02:35] *** cognomin_ joined
[02:38] *** cognominal left
[02:39] *** Altai-man_ joined
[02:41] *** sena_kun left
[02:48] *** Success left
[02:48] *** Success joined
[02:55] *** softmoth joined
[03:55] *** notable6 left
[03:55] *** coverable6 left
[03:55] *** greppable6 left
[03:55] *** quotable6 left
[03:55] *** reportable6 left
[03:55] *** committable6 left
[03:55] *** evalable6 left
[03:55] *** linkable6 left
[03:55] *** unicodable6 left
[03:55] *** nativecallable6 left
[03:55] *** tellable6 left
[03:55] *** statisfiable6 left
[03:55] *** bloatable6 left
[03:55] *** bisectable6 left
[03:55] *** shareable6 left
[03:55] *** sourceable6 left
[03:55] *** squashable6 left
[03:55] *** releasable6 left
[03:55] *** benchable6 left
[03:55] *** reportable6 joined
[03:55] *** committable6 joined
[03:55] *** linkable6 joined
[03:56] *** notable6 joined
[03:56] *** tellable6 joined
[03:56] *** bisectable6 joined
[03:56] *** benchable6 joined
[03:56] *** releasable6 joined
[03:56] *** statisfiable6 joined
[03:56] *** nativecallable6 joined
[03:56] *** bloatable6 joined
[03:56] *** coverable6 joined
[03:57] *** shareable6 joined
[03:57] *** greppable6 joined
[03:57] *** evalable6 joined
[03:58] *** unicodable6 joined
[03:58] *** sourceable6 joined
[03:58] *** quotable6 joined
[03:58] *** squashable6 joined
[04:13] *** Success is now known as Failure

[04:40] *** sena_kun joined
[04:42] *** Altai-man_ left
[04:50] *** Hexeratops left
[05:26] *** softmoth left
[05:26] *** softmoth joined
[05:28] *** softmoth left
[05:35] *** softmoth joined
[06:19] *** Failure is now known as Success

[06:30] <cpan-raku> New module released to CPAN! PDF::Class (0.4.3) by 03WARRINGD

[06:39] *** Altai-man_ joined
[06:41] *** sena_kun left
[06:58] *** imcsk8 left
[07:00] *** imcsk8 joined
[07:17] *** rindolf joined
[07:35] *** ParsonsNose joined
[07:36] *** m_athias left
[07:58] *** softmoth left
[08:00] *** Failure joined
[08:01] *** Failure left
[08:01] *** Failure joined
[08:02] *** Failure left
[08:04] *** Success left
[08:25] <Geth_> ¦ doc: e3d6e59274 | (JJ Merelo)++ | 2 files

[08:25] <Geth_> ¦ doc: Z with empty argument #2632

[08:25] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/e3d6e59274

[08:25] <Geth_> ¦ doc: fa11c36329 | (JJ Merelo)++ | doc/Language/operators.pod6

[08:25] <Geth_> ¦ doc: Reduce + with a single argument #2632

[08:25] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/fa11c36329

[08:25] <linkable6> DOC#2632 [open]: https://github.com/Raku/doc/issues/2632 [Hacktoberfest][RFE][big][docs][good first issue][help wanted][new][⚠ Top Priority ⚠] Checklist for 6.d

[08:25] <linkable6> Link: https://docs.raku.org/language/operators

[08:26] *** patrickb joined
[08:39] *** MasterDuke joined
[08:40] *** sena_kun joined
[08:42] *** Altai-man_ left
[08:43] *** m_athias joined
[08:52] <xinming_> releasable6: status

[08:52] <releasable6> xinming_, Next release will happen when it's ready. 4 blockers. 166 out of 307 commits logged (⚠ 3 warnings)

[08:52] <releasable6> xinming_, Details: https://gist.github.com/1622753373769e8c977974c3319970cf

[09:16] *** rbt left
[09:17] *** rbt joined
[09:46] *** aborazmeh joined
[09:46] *** aborazmeh left
[09:46] *** aborazmeh joined
[09:56] *** poohman joined
[10:30] *** aborazmeh left
[10:31] *** rindolf left
[10:32] *** rindolf joined
[10:33] *** __jrjsmrtn__ left
[10:35] *** __jrjsmrtn__ joined
[10:39] *** Altai-man_ joined
[10:42] *** sena_kun left
[10:46] *** chloekek joined
[10:48] <tbrowder> .tell dwarring +++ excellent, david!

[10:48] <tellable6> tbrowder, I'll pass your message to dwarring

[10:54] <chloekek> Is it possible to embed Rakudo in a C program?

[10:55] <chloekek> I guess it would be similar to main.c but without the CLI part.

[11:01] <lizmat> chloekek: in Perl, there's Inline::Perl6: you could argue that that's embedding Rakudo in a C program

[11:01] <chloekek> Thanks, I’ll check how that works.

[11:11] *** chloekek left
[11:19] *** Kaeipi is now known as Kaiepi

[11:27] *** Sgeo__ joined
[11:28] *** stoned75 left
[11:30] *** Sgeo_ left
[11:33] *** cpan-raku left
[11:36] *** cpan-raku joined
[11:36] *** cpan-raku left
[11:36] *** cpan-raku joined
[11:36] *** aborazmeh joined
[11:36] *** aborazmeh left
[11:36] *** aborazmeh joined
[11:44] *** pecastro joined
[11:48] *** k-man_ joined
[11:49] *** k-man left
[11:57] *** caterfxo left
[12:05] *** lgtaube left
[12:09] *** lgtaube joined
[12:10] *** rbt left
[12:11] *** rbt joined
[12:14] *** poohman left
[12:16] *** caterfxo joined
[12:40] *** sena_kun joined
[12:42] *** Altai-man_ left
[12:45] *** stoned75 joined
[12:52] *** dakkar joined
[12:53] *** hungryd66 joined
[13:11] *** hungryd66 left
[13:12] *** hungrydonkey joined
[13:13] *** dakkar left
[13:19] *** rbt left
[13:20] *** rbt joined
[13:26] *** aborazmeh left
[13:33] <cpan-raku> New module released to CPAN! Gnome::GObject (0.16.4) by 03MARTIMM

[13:33] *** Sgeo_ joined
[13:36] *** Sgeo__ left
[13:38] <ParsonsNose> Can anyone give some insight as to why this doesn't work?

[13:38] <ParsonsNose> p6: sub test(::T, T $foo --> T) { $foo } ; test Str, "foo"

[13:38] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «Died with X::TypeCheck::Return␤  in sub test at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[13:39] *** poohman joined
[13:39] *** cognominal joined
[13:42] *** cognomin_ left
[13:50] <lizmat> ParsonsNose: I think you have found a bug

[13:50] <lizmat> temporary workaround would be to remove the return value (--> T) from the signature

[13:53] <ParsonsNose> A wild bug! How exciting. Real use case is a bit more complex -- T has a LUB, so I'm specifying the constant LUB role as the return type instead, and that seems to work. I guess I should file a :bug: report then...

[13:59] <lizmat> yes, please  :-)

[13:59] *** hungryd50 joined
[14:01] *** hungrydonkey left
[14:04] <ParsonsNose> Filed. Thanks for confirming that it was, in fact, a bug and not just me being an idiot

[14:12] *** aborazmeh joined
[14:12] *** aborazmeh left
[14:12] *** aborazmeh joined
[14:20] *** poohman left
[14:25] *** softmoth joined
[14:39] *** Altai-man_ joined
[14:42] *** sena_kun left
[14:45] *** aborazmeh left
[14:46] *** NODE left
[14:47] *** |Sno| left
[14:48] *** NODE joined
[14:48] *** [Sno] joined
[14:56] *** xinming joined
[14:58] <jdv79> why is there a short form for object hash construction but none for a map?

[14:59] <jdv79> are obj hashes more used than a map?

[14:59] *** xinming_ left
[15:05] *** NODE left
[15:06] *** NODE joined
[15:15] <Altai-man_> a quick simple regex question: how do I find last occurrence of something? e.g.

[15:16] <Altai-man_> m: say 'if { if else } else {}' ~~ m{ << (else) >> }

[15:16] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «｢else｣␤ 0 => ｢else｣␤»

[15:16] <Altai-man_> m: say ('if { if else } else {}' ~~ m{ << (else) >> }).from

[15:16] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «8␤»

[15:16] <Altai-man_> this but 15

[15:17] <Altai-man_> modifying things outside of regex is cool, but I don't want to do something like "reverse the string" kind of things

[15:20] <Altai-man_> m: say ('if { if else } else { else }' ~~ m:g{ [<< (else)]+ >> }).tail.from

[15:20] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «22␤»

[15:20] *** chloekek joined
[15:22] <Altai-man_> m: say ('if { if else } else { else }' ~~ m:g{ [<< (else) >> ]+ }).tail.from

[15:22] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «22␤»

[15:24] <Altai-man_> oh noe

[15:25] <AlexDaniel> chloekek: any way I can use use CRAI instead of https://github.com/moritz/perl6-all-modules ?

[15:25] *** patrickb left
[15:26] <AlexDaniel> chloekek: for example, can I get a list of all latest tars so that I can download them?

[15:26] <AlexDaniel> chloekek: for example in json form

[15:26] <chloekek> AlexDaniel: http://database.crai.foldr.nl/sqlite.sqlite3 then SELECT url FROM archives

[15:27] <AlexDaniel> ouch sqlite

[15:27] <chloekek> AlexDaniel: but there is no easy way to sort version numbers, I am working on a fix for that

[15:28] <chloekek> AlexDaniel: alternatively you can scan https://github.com/chloekek/raku-nix/tree/master/ecosystem for url = "([^"]*)"; but this is not yet automatically updated.

[15:28] <AlexDaniel> okay maybe next time… I'm not ready to introduce a dependency on DBIish

[15:29] *** Sgeo__ joined
[15:29] <chloekek> raku-nix sorts version numbers.

[15:29] <chloekek> And has the latest version of each distribution.

[15:31] <chloekek> I’m currently rewriting CRAI to be a lot simpler, I can add an endpoint that prints the latest version of each distribution in a machine-readable format.

[15:32] <chloekek> m: say dirname('/a/b/c')

[15:32] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    dirname used at line 1␤␤»

[15:32] *** Sgeo_ left
[15:33] *** girafe2 joined
[15:34] *** NODE left
[15:34] *** girafe left
[15:35] *** NODE joined
[15:38] *** NODE left
[15:38] <chloekek> AlexDaniel: do you mind running code yourself?

[15:39] <chloekek> AlexDaniel: if not, I’ll hopefully finish p6c crawling today, and thatll be a standalone module (depending only on git)

[15:39] <chloekek> It’s a single subroutine that returns a Seq of URLs

[15:39] <chloekek> Oh well it depends on JSON::Fast I guess

[15:40] <chloekek> And LibCurl, nevermind :sweat_smile:

[15:40] *** NODE joined
[15:42] <chloekek> brb

[15:43] <AlexDaniel> chloekek: yes, I'm fine with running code myself. JSON::Fast and libcurl are fine

[15:43] *** hungrydonkey joined
[15:45] *** NODE left
[15:47] *** chloekek left
[15:47] *** NODE joined
[15:47] *** hungryd50 left
[15:49] *** aborazmeh joined
[15:49] *** aborazmeh left
[15:49] *** aborazmeh joined
[15:53] *** NODE left
[15:54] *** chloekek joined
[15:55] *** NODE joined
[15:59] <AlexDaniel> chloekek: actually, I'll probably just change perl6-all-modules to use that instead of whatever it attempts to do currently

[16:00] *** chloekek left
[16:01] *** Benett left
[16:01] *** Benett joined
[16:02] *** Benett left
[16:02] *** Benett joined
[16:10] <Geth_> ¦ doc/fix-test_files: 046d89fd4b | (Stoned Elipot)++ | lib/Test-Files.pm6

[16:10] <Geth_> ¦ doc/fix-test_files: Also split TEST_FILES on newlines

[16:10] <Geth_> ¦ doc/fix-test_files: 

[16:10] <Geth_> ¦ doc/fix-test_files: This allows multiple files to be set in TEST_FILES environment variable

[16:10] <Geth_> ¦ doc/fix-test_files: from a shell command substitution, hence with embedded newlines

[16:10] <Geth_> ¦ doc/fix-test_files: review: https://github.com/Raku/doc/commit/046d89fd4b

[16:10] *** hankache joined
[16:10] <Geth_> ¦ doc: stoned++ created pull request #3327: Also split TEST_FILES on newlines

[16:10] <Geth_> ¦ doc: review: https://github.com/Raku/doc/pull/3327

[16:11] *** Sgeo_ joined
[16:11] *** ParsonsNose left
[16:14] *** Sgeo__ left
[16:17] *** Sgeo__ joined
[16:19] <Altai-man_> m: sub a($a ;; $b) {}

[16:19] <camelia> rakudo-moar 1a10b63a2: ( no output )

[16:20] <Altai-man_> so just what is... this?

[16:20] *** Sgeo_ left
[16:20] <Altai-man_> >To exclude certain parameters from being considered in multiple dispatch, separate them with a double semicolon.

[16:22] <tbrowder> Happy Easter to all!

[16:23] <tbrowder> question about my local Raku compunits used by zef:

[16:25] *** gabiruh joined
[16:26] <tbrowder> are things like api keys "safe" relative to "normal" root privileges?

[16:37] *** xinming left
[16:37] *** hankache left
[16:37] *** xinming joined
[16:38] *** Kaiepi left
[16:38] *** Hexeratops joined
[16:39] *** Kaiepi joined
[16:39] *** vike left
[16:40] *** sena_kun joined
[16:42] *** Altai-man_ left
[16:42] <Geth_> ¦ doc: acb3067f63 | Coke++ | doc/Language/operators.pod6

[16:42] <Geth_> ¦ doc: fix typo

[16:42] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/acb3067f63

[16:42] <linkable6> Link: https://docs.raku.org/language/operators

[16:43] *** vike joined
[16:49] <Geth_> ¦ doc/fix-test_files: e6dfe0bfa3 | (Stoned Elipot)++ | lib/Test-Files.pm6

[16:49] <Geth_> ¦ doc/fix-test_files: Fix previous, and while here, split TEST_FILES on any whitespace

[16:49] <Geth_> ¦ doc/fix-test_files: 

[16:49] <Geth_> ¦ doc/fix-test_files: thanks @coke!

[16:49] <Geth_> ¦ doc/fix-test_files: review: https://github.com/Raku/doc/commit/e6dfe0bfa3

[16:50] *** ofperfection joined
[16:52] *** Manifest0 left
[16:53] *** xinming left
[16:54] *** xinming joined
[17:00] *** Manifest0 joined
[17:01] *** Kaiepi left
[17:02] *** Kaiepi joined
[17:02] *** xinming left
[17:03] *** xinming joined
[17:10] *** rbt left
[17:11] *** rbt joined
[17:13] *** ofperfection left
[17:14] *** seance joined
[17:14] *** finsternis left
[17:15] *** finsternis joined
[17:16] *** pecastro left
[17:19] *** xinming left
[17:19] *** xinming joined
[17:22] *** chloekek joined
[17:22] *** rbt left
[17:23] *** rbt joined
[17:32] *** melezhik joined
[17:36] <sena_kun> So now out of 317 examples we have, we can successfully parse (and potentially highlight) 237, nice.

[17:36] <sena_kun> m: say 237 / 317;

[17:36] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «0.747634␤»

[17:41] *** aborazmeh left
[17:45] <Geth_> ¦ doc: 046d89fd4b | (Stoned Elipot)++ | lib/Test-Files.pm6

[17:45] <Geth_> ¦ doc: Also split TEST_FILES on newlines

[17:45] <Geth_> ¦ doc: 

[17:45] <Geth_> ¦ doc: This allows multiple files to be set in TEST_FILES environment variable

[17:45] <Geth_> ¦ doc: from a shell command substitution, hence with embedded newlines

[17:45] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/046d89fd4b

[17:45] <Geth_> ¦ doc: e6dfe0bfa3 | (Stoned Elipot)++ | lib/Test-Files.pm6

[17:45] <Geth_> ¦ doc: Fix previous, and while here, split TEST_FILES on any whitespace

[17:45] <Geth_> ¦ doc: 

[17:45] <Geth_> ¦ doc: thanks @coke!

[17:45] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/e6dfe0bfa3

[17:45] <Geth_> ¦ doc: 370d238f68 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | lib/Test-Files.pm6

[17:45] <Geth_> ¦ doc: Merge pull request #3327 from Raku/fix-test_files

[17:45] <Geth_> ¦ doc: 

[17:45] <Geth_> ¦ doc: Also split TEST_FILES on newlines

[17:45] <Geth_> ¦ doc: review: https://github.com/Raku/doc/commit/370d238f68

[17:47] <chloekek> Ugh, private repos in p6c source-urls.

[17:50] <AlexDaniel> chloekek: hahaha

[17:50] <chloekek> Git asks for password when I run the CRAI cron job.

[17:50] <chloekek> ;_;

[17:54] *** mowcat joined
[17:54] *** xinming left
[17:55] *** NODE left
[17:55] *** Benett left
[17:55] *** xinming joined
[17:57] *** NODE joined
[17:59] *** Doc_Holliwood joined
[18:03] <chloekek> GIT_ASKPASS=false GIT_TERMINAL_PROMPT=0 does the trick.

[18:03] <chloekek> Really nice that you can use temp with hash assignments! temp %*ENV<GIT_ASKPASS> = 'false';

[18:04] *** hungrydonkey left
[18:04] <chloekek> p6: my %h; { temp %h<a> = 1; say %h<a> }; say %h<a>

[18:04] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «1␤(Any)␤»

[18:05] *** aborazmeh joined
[18:05] *** aborazmeh left
[18:05] *** aborazmeh joined
[18:05] *** melezhik left
[18:06] *** hungrydonkey joined
[18:17] <Geth_> ¦ doc/xt-recent: 0b4f443b71 | (Stoned Elipot)++ | util/xt-recent.sh

[18:17] <Geth_> ¦ doc/xt-recent: Do not use a local(?) git alias

[18:17] <Geth_> ¦ doc/xt-recent: 

[18:17] <Geth_> ¦ doc/xt-recent: while here simplify pipeline

[18:17] <Geth_> ¦ doc/xt-recent: review: https://github.com/Raku/doc/commit/0b4f443b71

[18:17] *** hungrydonkey left
[18:17] <Geth_> ¦ doc: stoned++ created pull request #3328: Do not use a local(?) git alias

[18:17] <Geth_> ¦ doc: review: https://github.com/Raku/doc/pull/3328

[18:18] *** hungrydonkey joined
[18:18] <AlexDaniel> chloekek: you can?!

[18:19] <chloekek> Holy shit yes you can.

[18:19] <AlexDaniel> that's amazing

[18:20] <moritz> p6: my %h; { temp %h<a> = 1; say %h<a> }; say %h<a>:exists

[18:20] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «1␤True␤»

[18:21] <moritz> that's the downside

[18:21] <moritz> %h<a> returns a writable container, which is why assigning to it works, and which is why temp can temp it

[18:21] <moritz> so when the scope ends, temp resets the container the value it had before (Any), but it doesn't even know there's a hash, so it cannot remove the key

[18:22] <AlexDaniel> p6: my %h; { temp %h<a> = 1; say %h<a> }; dd %h

[18:22] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «1␤Hash %h = {:a(Any)}␤»

[18:22] <AlexDaniel> riight

[18:25] <chloekek> p6: { temp %*ENV<GIT_ASKPASS> = 'false'; }; run('sh', '-c', 'echo $GIT_ASKPASS')

[18:25] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «␤»

[18:26] <chloekek> p6: { temp %*ENV<GIT_ASKPASS> = 'false'; }; run('env')

[18:26] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «HOME=/home/camelia␤MAIL=/var/mail/evalbot␤PATH=/usr/bin:/bin:/usr/sbin:/sbin␤XDG_SESSION_ID=c681␤SUDO_COMMAND=/home/camelia/rakudo-m-inst/bin/perl6-m --setting=RESTRICTED <tmp>␤GIT_ASKPASS=␤USERNAME=evalbot␤XDG_RUNTIME_DIR=/run/user/1017…»

[18:26] <chloekek> Oops lmao.

[18:36] *** hungrydonkey left
[18:37] *** mowotter joined
[18:37] *** pecastro joined
[18:39] *** Altai-man_ joined
[18:40] *** mowcat left
[18:40] *** poohman joined
[18:41] *** Kaiepi left
[18:41] *** sena_kun left
[18:44] <chloekek> AlexDaniel: I now have two fairly standalone modules that can retrieve archive URLs from CPAN and p6c, you can use those if you want.

[18:44] <chloekek> Dependencies are LibCurl, JSON::Fast and git.

[18:44] <AlexDaniel> nice

[18:44] <AlexDaniel> how? link?

[18:44] <chloekek> https://github.com/chloekek/crai/blob/v2/crai/lib/Crai/Cpan.rakumod and https://github.com/chloekek/crai/blob/v2/crai/lib/Crai/P6c.rakumod

[18:44] <chloekek> POD is at the end.

[18:45] <AlexDaniel> hm

[18:45] <AlexDaniel> so github understands ```raku but not .rakumod ?

[18:46] <chloekek> I guess :þ

[18:46] <chloekek> It annoys me too

[18:47] <chloekek> I’m wondering if Git archive URLs should use tags instead of commits.

[18:47] <chloekek> Problem is tags can be rewritten, so probably no.

[18:51] *** poohman left
[18:51] <AlexDaniel> chloekek: maybe use tag-commit format, or something like that?

[18:51] <AlexDaniel> then it's both readable and unique

[18:51] <chloekek> I prefer not to clone each repo.

[18:51] <chloekek> ls-remote lists all refs on a remote.

[18:51] <AlexDaniel> tbh I'm not sure what you're referring to :D

[18:52] <AlexDaniel> Too few positionals passed; expected 1 argument but got 0 in sub list-p6c-sources

[18:52] <AlexDaniel> my code: use Crai::P6c; .say for list-p6c-archives;

[18:53] <AlexDaniel> using crai in v2 branch

[18:53] <chloekek> lol huh

[18:53] <AlexDaniel> the code is taken from the example in one of the files you provided :)

[18:55] <AlexDaniel> chloekek: heh, ==>, I see you're really having fun with the language :)

[18:55] <chloekek> Ah yeah you have to pass a LibCurl::Easy instance.

[18:56] <chloekek> I updated the module.

[18:56] *** Cabanossi joined
[18:56] <chloekek> AlexDaniel: Particularly proud of { !$++ || .[1] ne 'HEAD' }

[18:57] <chloekek> Skips the HEAD line unless it’s the first line.

[18:57] <AlexDaniel> chloekek: I really enjoyed code-golf.io but even I have no idea :P

[18:58] <AlexDaniel> chloekek: what's next, fff? :)

[18:58] <chloekek> ff is great.

[18:58] <chloekek> State variables being properties of the surrounding block, rather than being globals, is one of my favorite Raku design decisions.

[18:58] *** melezhik joined
[18:59] <melezhik> I've written a short post announcing a Web UI for RakuDist - https://sparrowdo.wordpress.com/2020/04/12/rakudist-update-web-ui/

[18:59] <AlexDaniel> it's really interesting, there are so many features that you don't see in most code bases. Then you stumble upon a project that does use them, and it's kinda refreshing and scary at the same time :)

[18:59] <chloekek> I write Python at work, I get tired of “boring code”.

[19:00] <AlexDaniel> I see :)

[19:01] <chloekek> weekly: https://sparrowdo.wordpress.com/2020/04/12/rakudist-update-web-ui/ #  melezhik++

[19:01] <notable6> chloekek, Noted! (weekly)

[19:03] <AlexDaniel> chloekek: see, just bombard that API ↑ and you'll have test stats in CRAI :D

[19:03] <chloekek> I wish you could put comments in URLs.

[19:03] <chloekek> Like you can put comments in email addresses.

[19:04] <chloekek> Hmm wait, you can put fragments in URLs, I wonder how various tools treat them, such as Nix and curl.

[19:04] <AlexDaniel> https://raku.org/#sule,why-not? ?

[19:04] <AlexDaniel> sure*

[19:05] <chloekek> Because having https://github.com/owner/repo/archive/commithash.tar.gz#tagname

[19:05] <chloekek> That would be amazing.

[19:05] <AlexDaniel> shareable6: HEAD#test-test

[19:05] <shareable6> AlexDaniel, https://whateverable.6lang.org/HEAD#test-test

[19:05] <AlexDaniel> dat works

[19:06] <chloekek> Yeah, curl seems to ignore it. But Nix complains. :(

[19:06] <chloekek> Well, I suppose tools that croak can just filter them out themselves. :)

[19:07] *** astronavt joined
[19:08] <AlexDaniel> chloekek: ok, it's running. Sloow.

[19:09] <chloekek> Yep, GitHub is slow.

[19:09] *** melezhik left
[19:09] *** melezhik joined
[19:10] <melezhik> chloekek: thanks

[19:12] *** xinming left
[19:13] *** xinming joined
[19:14] <Geth_> ¦ doc/str-index-i_m: 9d04f32134 | (Stoned Elipot)++ | 2 files

[19:14] <Geth_> ¦ doc/str-index-i_m: Document Str.index ignorecase/ignoremark

[19:14] <Geth_> ¦ doc/str-index-i_m: 

[19:14] <Geth_> ¦ doc/str-index-i_m: while here:

[19:14] <Geth_> ¦ doc/str-index-i_m: - Str.index is a method: adjust section heading and use it in examples

[19:14] <Geth_> ¦ doc/str-index-i_m: - revisit Cool.index description

[19:14] <Geth_> ¦ doc/str-index-i_m: review: https://github.com/Raku/doc/commit/9d04f32134

[19:14] <Geth_> ¦ doc: stoned++ created pull request #3329: Document Str.index ignorecase/ignoremark

[19:14] <Geth_> ¦ doc: review: https://github.com/Raku/doc/pull/3329

[19:18] *** melezhik left
[19:18] <Geth_> ¦ doc/str-starts-with-i_m: befa0cedd3 | (Stoned Elipot)++ | doc/Type/Str.pod6

[19:18] <Geth_> ¦ doc/str-starts-with-i_m: Document Str.starts-with ignorecase/ignoremark

[19:18] <Geth_> ¦ doc/str-starts-with-i_m: 

[19:18] <Geth_> ¦ doc/str-starts-with-i_m: XXX Should Cool.starts-with be documented ?

[19:18] <Geth_> ¦ doc/str-starts-with-i_m: review: https://github.com/Raku/doc/commit/befa0cedd3

[19:18] <chloekek> AlexDaniel: What’s fun is that downloading most archives is faster than just finding them.

[19:19] <AlexDaniel> chloekek: I have a question… do you treat these .tar.gz's from github as if they're immutable?

[19:20] <AlexDaniel> I mean, that fetching them again will result in the same file

[19:23] <chloekek> Yes, that’s very important.

[19:23] <AlexDaniel> chloekek: okay. Well, oops? :)

[19:23] <AlexDaniel> I don't think that's the case

[19:23] <chloekek> Unfortunately GitHub sometimes changes these.

[19:23] <AlexDaniel> yeah

[19:23] <chloekek> It’s very annoying but I don’t know a good solution.

[19:23] <chloekek> Other than mirroring them, I guess.

[19:25] <chloekek> I also don’t know exactly what the difference is.

[19:25] <chloekek> Perhaps order of files or something silly like that.

[19:25] <AlexDaniel> you can also normalize them somehow

[19:25] <AlexDaniel> or whatever you'd call that

[19:25] <chloekek> Hash the extracted files.

[19:25] *** Kaiepi joined
[19:27] <chloekek> Mirroring is probably easier, but also more expensive (financially, not computationally).

[19:30] *** Hexeratops left
[19:31] *** rindolf left
[19:32] <AlexDaniel> yeah, unfortunate. Storing individual tars is wasteful, but how else can you guarantee that they stay exactly the same.

[19:35] *** caterfxo left
[19:40] *** mowotter left
[19:42] <chloekek> AlexDaniel: How did you observe that it’s not consistent?

[19:43] <AlexDaniel> chloekek: not now, I just stumbled upon the issue in the past, don't remember why

[19:44] <chloekek> Ah yeah.

[19:44] *** xinming left
[19:44] <chloekek> There is already one package on CRAI that suffers from this.

[19:44] <chloekek> MIME::Base64

[19:47] *** xinming joined
[19:52] *** stoned75_ joined
[19:52] *** stoned75 left
[19:53] *** melezhik joined
[19:55] <chloekek> AlexDaniel: I have an idea: first download from GH, only if the hash doesn’t match, download from the mirror.

[19:55] <chloekek> Then the load on the mirror should be minimal.

[19:55] <melezhik> AlexDaniel: chloekek: if you start "bombard that API ↑ " there could performance issues, as the VM resources is limited and API itself is not optimized

[19:56] <melezhik> but ... please let me know I'd more then happy to help

[19:56] <chloekek> AlexDaniel: Though, I have never looked at things like CDNs, maybe they’re very cheaps.

[19:57] <chloekek> S3 is out of the question for me because of ethical concerns, but there are probably good alternatives.

[20:00] <chloekek> Wouldn’t mind paying a few € each month, already do so to host the app (Hetzner).

[20:03] *** aborazmeh left
[20:03] *** caterfxo joined
[20:05] *** stoned75_ left
[20:06] *** stoned75 joined
[20:13] <El_Che> github immutable = it should be if you only download tags and tags aren't moved around

[20:13] <Doc_Holliwood> m: sub f() returns (Bool) { 1 }; say f()

[20:13] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed trait␤at <tmp>:1␤------> 3sub f() returns7⏏5 (Bool) { 1 }; say f()␤»

[20:13] <Doc_Holliwood> m: sub f() returns Bool { so 1 }; say f()

[20:13] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «True␤»

[20:14] <Doc_Holliwood> fine

[20:16] <chloekek> p6: print '%23'.subst(/'%'(<xdigit>**2)/, { chr(:16($0)) }, :g);

[20:16] <camelia> rakudo-moar 1a10b63a2: OUTPUT: «This call only converts base-16 strings to numbers; value Match.new(:orig("\%23"), :from(1), :pos(3), :hash(Map.new((:xdigit([Match.new(:orig("\%23"), :from(1), :pos(2)), Match.new(:orig("\%23"), :from(2), :pos(3))]))))) is of type Match, so cannot be…»

[20:22] *** aborazmeh joined
[20:22] *** aborazmeh left
[20:22] *** aborazmeh joined
[20:32] *** dogbert17 left
[20:33] <AlexDaniel> melezhik: I'm kidding, of course, but it's an interesting opportunity in general :)

[20:33] <AlexDaniel> El_Che: yeah! Wrong

[20:34] <AlexDaniel> El_Che: and those who tried signing release tars provided by github learned it the hard way :)

[20:34] <melezhik> AlexDaniel: chloekek: An idea. I could adjust RakuDist to test Nix Raku packages, something could be useful for CRAI test? to see if packages get broken, etc

[20:35] <AlexDaniel> El_Che: we don't do that and we never did, but then there's another problem: people occasionally download the wrong tar…

[20:35] <AlexDaniel> which btw you cannot disable on github

[20:35] <chloekek> melezhik: That would be neat.

[20:36] <chloekek> raku-nix is still in its infancy though, many things break.

[20:37] <melezhik> so rakudist/sparrow are  ;-)

[20:37] <chloekek> Currently I have CI, but it only tests precompilation, does not run tests.

[20:37] <chloekek> https://github.com/chloekek/raku-nix/actions

[20:37] <AlexDaniel> weekly: It's all about the modules! :) melezhik is working on RakuDist and chloekek is working on CRAI. Pretty cool.

[20:37] <notable6> AlexDaniel, Noted! (weekly)

[20:38] <chloekek> Lol that CI is extremely broken.

[20:39] <melezhik> chloekek: let me check that 

[20:39] <chloekek> Because I don’t currently generate default.nix, so most packages are missing from it.

[20:39] <chloekek> I’ll fix that immediately.

[20:39] <melezhik> if you brief me what exactly this CI does?

[20:40] <melezhik> https://github.com/chloekek/raku-nix/runs/545183993?check_suite_focus=true

[20:40] *** sena_kun joined
[20:41] <melezhik> looks like just build nix pakages for raku ecosystem?

[20:42] *** Altai-man_ left
[20:43] <melezhik> oh, and I see that - https://github.com/chloekek/raku-nix/blob/master/.github/workflows/ci.yml

[20:43] *** sftp left
[20:44] <chloekek> It precompiles each distribution listed.

[20:44] <chloekek> Using a Nix derivation (package description) generated from META6.json.

[20:44] <melezhik> yeah ... where packages are published to, aftewards?

[20:46] <chloekek> They aren’t. People can use raku-nix and build themselves, using Nix. They will hopefully get the same build output.

[20:46] <chloekek> At some point I want to set up a Nix cache, and then Nix will automatically pull from there.

[20:47] <chloekek> For instance, I use raku-nix to build CRAI, so when I build CRAI, Nix will fetch all dependencies, build them from source if necessary.

[20:47] <melezhik> yeah, what is CRAI?

[20:48] <melezhik> is it a nix repo?

[20:48] <chloekek> It’s an app, and I build it with Nix.

[20:48] <melezhik> sorry I need to go, ttl

[20:48] <chloekek> Nix is a package manager, but also a build system.

[20:49] <melezhik> yeah. I am interested how sparrow/rakudist could be useful in building / testing nix based Raku distribution 

[20:51] <melezhik> could send me a link to CRAI as well?

[20:51] <chloekek> Pretty much all you have to do is install Nix, clone raku-nix, then nix build -A $PACKAGE. It will then write to stdout the path to the build output.

[20:51] <chloekek> https://github.com/chloekek/crai computes hashes of packages (Nix requires hashes to check integrity)

[20:52] <chloekek> I generate the Nix package descriptions from the information collected by CRAI

[21:01] <chloekek> Goodbye for today, brain = fried.

[21:06] *** chloekek left
[21:12] *** imcsk8 left
[21:14] *** imcsk8 joined
[21:18] *** softmoth left
[21:19] *** softmoth joined
[21:25] *** rbt left
[21:26] *** rbt joined
[21:28] *** pecastro left
[21:30] *** xinming left
[21:30] *** xinming joined
[21:38] *** clarkema joined
[21:44] *** Kaiepi left
[21:44] *** Kaiepi joined
[21:45] *** Kaiepi left
[21:53] *** Kaiepi joined
[22:03] *** cognomin_ joined
[22:06] *** cognominal left
[22:16] *** sena_kun left
[22:20] *** imcsk8 left
[22:27] *** hungrydonkey joined
[22:50] *** rbt left
[22:51] *** rbt joined
[22:53] *** mowcat joined
[22:54] <cpan-raku> New module released to CPAN! Data::Record (0.2.3) by 03KAIEPI

[22:57] *** seance left
[22:58] *** seance joined
[23:00] *** hungrydonkey left
[23:07] *** cpan-raku left
[23:08] *** melezhik35 joined
[23:08] *** melezhik35 is now known as melezhik2

[23:09] *** cpan-raku joined
[23:09] *** cpan-raku left
[23:09] *** cpan-raku joined
[23:09] *** xinming left
[23:10] *** xinming joined
[23:18] *** melezhik2 left
[23:19] *** Kaiepi left
[23:20] *** softmoth left
[23:20] *** clarkema left
[23:21] *** Kaiepi joined
[23:23] *** Kaeipi joined
[23:23] *** Kaiepi left
[23:31] *** mowcat left
[23:34] *** softmoth joined
[23:48] *** hungrydonkey joined
[23:56] *** bdju left
[23:56] *** bdju joined
