[00:16] *** lichtkind left
[00:18] *** clarjon1 left
[00:27] *** MasterDuke left
[01:02] *** vrurg_ joined
[01:04] *** vrurg left
[01:19] *** konvertex left
[01:36] *** marcusr left
[01:39] *** softmoth left
[01:41] *** marcusr joined
[01:51] *** devmikey left
[01:57] *** justsomeguy joined
[01:59] *** soar left
[02:15] *** Maylay left
[02:16] <justsomeguy> Is it possible to compile a raku program to a statically linked executable?

[02:19] *** justsomeguy left
[02:32] *** Maylay joined
[02:41] *** zacts joined
[02:42] *** Cabanossi left
[02:45] *** zacts left
[02:46] *** zacts joined
[02:46] *** melezhik left
[02:48] *** soar joined
[02:49] *** Cabanossi joined
[02:50] *** stoned75 joined
[03:00] *** zacts left
[03:12] *** baboo joined
[03:15] <baboo> say so '"="' ~~ / \" ~ \" <( '=' )> /; # Output: Falsesay so '"="' ~~ / \" <( '=' )> \" /; # Output: True

[03:15] <evalable6> baboo, rakudo-moar f51fba287: OUTPUT: «False␤»

[03:16] *** cpan-raku left
[03:16] *** stoned75 left
[03:18] *** stoned75 joined
[03:22] *** cpan-raku joined
[03:22] *** cpan-raku left
[03:22] *** cpan-raku joined
[03:31] *** baboo left
[03:36] *** __jrjsmrtn__ joined
[03:37] *** _jrjsmrtn left
[03:49] *** zacts joined
[03:51] *** mowcat left
[04:13] *** KindOne left
[04:15] *** KindOne joined
[04:15] *** zacts left
[04:22] *** Doc_Holliwood left
[05:05] *** brtastic joined
[05:22] *** xinming_ left
[05:22] *** xinming_ joined
[05:31] *** aborazmeh joined
[05:31] *** aborazmeh left
[05:31] *** aborazmeh joined
[05:31] *** stoned75 left
[05:35] *** sauvin joined
[05:48] *** stoned75 joined
[05:50] *** brtastic left
[05:51] *** wamba joined
[05:55] *** vrurg_ left
[05:55] *** vrurg joined
[06:08] *** xinming_ left
[06:10] *** xinming_ joined
[06:10] *** wamba left
[06:26] *** wamba joined
[06:28] *** Doc_Holliwood joined
[06:39] *** JJMerelo joined
[06:39] <JJMerelo> releasable6: status

[06:39] <releasable6> JJMerelo, Next release in ≈17 days and ≈12 hours. There are no known blockers. Changelog for this release was not started yet

[06:39] <releasable6> JJMerelo, Details: https://gist.github.com/d20b3ebd724a0cf6b81f43a8556f1fc9

[06:39] *** wamba left
[06:45] *** justsomeguy joined
[06:46] *** brtastic joined
[06:48] *** xinming_ left
[06:52] *** xinming_ joined
[07:00] *** zacts joined
[07:01] *** zacts is now known as Guest96613

[07:06] *** leont joined
[07:10] *** leont left
[07:13] *** JJMerelo left
[07:21] *** suman joined
[07:22] *** wamba joined
[07:23] *** Guest96613 left
[07:26] *** rindolf joined
[07:28] *** kensanata joined
[07:31] *** konvertex joined
[07:34] *** leont joined
[07:35] *** MasterDuke joined
[07:40] *** dakkar joined
[07:50] *** soursBot joined
[08:17] *** suman left
[08:20] *** pecastro joined
[08:38] *** justsomeguy left
[08:44] *** Altai-man_ joined
[08:46] *** MasterDuke left
[08:51] *** wamba left
[08:51] *** wamba joined
[09:10] *** Doc_Holliwood left
[09:10] <SmokeMachine> Hi! Good morning! I was thinking. Is it possible to make an assignment return something different from what was assigned? Something like: `my $new-immutable-data-structure = $immutable-data-structure.some-field = $new-value;`

[09:11] *** Doc_Holliwood joined
[09:11] *** soursBot left
[09:11] *** rbt left
[09:12] *** rbt joined
[09:12] <lizmat> if $immutable-data-structure.some-field is a Proxy, you can have the FETCH return anything

[09:13] <lizmat> m: my $a := Proxy.new( FETCH => { 42 }, STORE => -> $,$ { } ); say $a = 666'

[09:13] <camelia> rakudo-moar f51fba287: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 032 }, STORE => -> $,$ { } ); say $a = 6667⏏5'␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end…»

[09:13] <lizmat> m: my $a := Proxy.new( FETCH => { 42 }, STORE => -> $,$ { } ); say $a = 666

[09:13] <camelia> rakudo-moar f51fba287: OUTPUT: «42␤»

[09:15] *** MasterDuke joined
[09:18] <SmokeMachine> lizmat: that makes sense, thanks

[09:33] *** Sgeo left
[09:34] *** Prince213 joined
[09:34] *** Prince213 left
[09:38] *** soursBot joined
[09:44] <SmokeMachine> lizmat: it seems to not work... :( https://www.irccloud.com/pastebin/sHSXlm2x/

[09:44] <SmokeMachine> m: https://www.irccloud.com/pastebin/raw/sHSXlm2x

[09:44] <camelia> rakudo-moar f51fba287: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3https:7⏏5//www.irccloud.com/pastebin/raw/sHSXlm2x␤    expecting any of:␤        colon pair␤»

[09:45] <SmokeMachine> camelia: help

[09:45] <camelia> SmokeMachine: Usage: <(rakudo-moar|prof-m|nqp-js|p5-to-p6|star-m|nqp-jvm|rakudo-jvm|nqp-moarvm|debug-cat|nqp-m|rakudo|rj|sm|rm|r-m|m|p6|j|r-jvm|r-j|master|nqp-q|nqp|nqp-mvm|perl6|p56|r|star)(?^::\s(?!OUTPUT)) $perl6_program>

[09:45] <MasterDuke> e: https://www.irccloud.com/pastebin/raw/sHSXlm2x

[09:45] <evalable6> MasterDuke, Successfully fetched the code from the provided URL

[09:45] <evalable6> MasterDuke, rakudo-moar f51fba287: OUTPUT: «(exit code 1) No such method 'some-field' for invocant of type 'Int'␤  in block <unit> at /tmp/Q7oM6Ycscz line 14␤␤»

[09:45] <SmokeMachine> MasterDuke: thanks

[09:45] <MasterDuke> np

[09:46] <SmokeMachine> MasterDuke: any suggestion? ^^

[09:47] <jnthn> SmokeMachine: You need binding, not assignment

[09:47] <tellable6> 2020-06-02T22:16:30Z #raku-dev <AlexDaniel> jnthn https://colabti.org/irclogger/irclogger_log/raku-dev?date=2020-06-02#l93

[09:48] <SmokeMachine> jnthn: the Proxy?

[09:48] <jnthn> Yes

[09:49] <jnthn> Assignment is always "put into the container on the left"

[09:49] <jnthn> So it does FETCH on the Proxy and assigns it into the Scalar container on the left

[09:49] <jnthn> thus your Proxy is already gone

[09:50] *** xinming_ left
[09:50] <jnthn> Same reason as if you do `my %h = set <a b c>` then %h is a Hash, and you'd need to bind to have it be a Set

[09:51] <SmokeMachine> jnthn: makes sense

[09:51] <jnthn> AlexDaniel: Ooh, wow. I guess my best suggestion on cutting down output is to only report the most receent bissect result. Most of the time we're looking for a recent regression.

[09:51] <jnthn> AlexDaniel: The rest could go in a gist.

[09:51] *** xinming_ joined
[09:52] <AlexDaniel> jnthn: oh, okay. I'll keep it this way for now, if people complain I'll do that to make the output smaller.

[09:53] <AlexDaniel> jnthn: very often there's just one change, so I hope usually the output will be the same

[09:53] <AlexDaniel> but we'll see how it goes

[09:54] <SmokeMachine> jnthn: this hangs... :( https://www.irccloud.com/pastebin/2ASZxhQo/

[09:54] <lizmat> m: class A { has $.foo is built(:bind) is rw = Proxy.new( FETCH => { 42 }, STORE => -> $,$ { } ) }; dd A.new.foo = 666    # SmokeMachine 

[09:54] <camelia> rakudo-moar f51fba287: OUTPUT: «42␤»

[09:54] <SmokeMachine> e: https://www.irccloud.com/pastebin/raw/2ASZxhQo

[09:54] <evalable6> SmokeMachine, Successfully fetched the code from the provided URL

[09:54] <evalable6> SmokeMachine, rakudo-moar f51fba287: OUTPUT: «(signal SIGHUP) «timed out after 10 seconds»»

[09:56] <SmokeMachine> lizmat: thanks! I didn't know `is built(:bind)` what there already. but I remember of reading about it (but I'm not sure if I remember what I've read about that). Thanks!

[09:56] <jnthn> SmokeMachine: Don't write a `method` for FETCH

[09:56] <jnthn> SmokeMachine: It will try to decont the invocant for self

[09:57] <jnthn> Which will in turn call FETCH, and thus infinitely recurse

[09:57] <SmokeMachine> jnthn: how should I access `$!last-return` otherwise?

[09:57] <lizmat> jnthn: or write an explicit invocant, right?    method foo(\SELF:) ??

[09:57] <jnthn> lizmat: nope, that doesn't stop binding into `self`, I don't think

[09:58] <jnthn> It ain't gonna help you access $!last-return anyway, 'cus self would be the Proxy

[09:58] <lizmat> ah, indeed

[09:58] <jnthn> You'll just have it by closure semantics, I think?

[09:58] <lizmat> yeah, -> $, $value { }    should work

[10:06] *** squashable6 left
[10:08] *** squashable6 joined
[10:10] *** Cabanossi left
[10:10] *** bdju left
[10:10] *** bdju joined
[10:11] *** sena_kun joined
[10:11] *** wamba left
[10:11] *** wamba joined
[10:12] *** Altai-man_ left
[10:16] *** Cabanossi joined
[10:19] *** soar left
[10:48] *** lichtkind joined
[10:52] *** MasterDuke left
[11:00] *** Doc_Holliwood left
[11:03] *** skyl4rk left
[11:04] *** cognominal left
[11:06] *** cognominal joined
[11:08] *** skyl4rk joined
[11:10] *** cognominal left
[11:12] *** soursBot left
[11:17] *** bingos_ joined
[11:18] *** BinGOs left
[11:18] *** bingos_ is now known as BinGOs

[11:19] *** BinGOs left
[11:19] *** BinGOs joined
[11:23] <SmokeMachine> no luck: https://www.irccloud.com/pastebin/LINH7g9T/

[11:23] *** cognominal joined
[11:23] <SmokeMachine> e: https://www.irccloud.com/pastebin/raw/LINH7g9T

[11:23] <evalable6> SmokeMachine, Successfully fetched the code from the provided URL

[11:23] <evalable6> SmokeMachine, rakudo-moar e9f803572: OUTPUT: «(exit code 1) No such method 'some-field' for invocant of type 'Int'␤  in block <unit> at /tmp/_6Rx57jt2k line 14␤␤»

[11:24] <SmokeMachine> sorry, my bad

[11:26] <SmokeMachine> now it seems to work https://www.irccloud.com/pastebin/idzFo8NL/

[11:26] <SmokeMachine> e: https://www.irccloud.com/pastebin/raw/idzFo8NL

[11:26] <evalable6> SmokeMachine, Successfully fetched the code from the provided URL

[11:26] <evalable6> SmokeMachine, rakudo-moar e9f803572: OUTPUT: «13␤42␤13␤42␤»

[11:26] *** Black_Ribbon left
[11:26] *** wamba left
[11:27] <lizmat> that's what I'm seeing as well  :-)

[11:28] <SmokeMachine> but that "data structure" isn't really immutable, right? it's mutating `$!last-return`...

[11:32] <lizmat> indeed...  and tbh, I don't really see the point on what you're achieving here....

[11:33] <lizmat> feels to me there is really a design issue that is getting fixed in a very complicated way  :-)

[11:34] <SmokeMachine> lizmat: I'm just trying to study functional data structures

[11:37] *** mowcat joined
[11:39] <SmokeMachine> lizmat: and trying to figure out what would be good a syntax to use them

[11:43] *** MasterDuke joined
[11:43] *** soursBot joined
[12:10] *** Altai-man_ joined
[12:12] *** sena_kun left
[12:15] *** cognominal left
[12:16] *** cognominal joined
[12:23] *** cognominal left
[12:24] *** cognominal joined
[12:27] *** melezhik joined
[12:30] <tbrowder> found it i think...

[12:34] <Geth> ¦ doc: 584013a945 | (Luis F. Uceta)++ | doc/Language/101-basics.pod6

[12:34] <Geth> ¦ doc: Revise 'Raku by example 101' page

[12:34] <Geth> ¦ doc: 

[12:34] <Geth> ¦ doc: * Organize the page such that h1 headers introduce a few lines of code

[12:34] <Geth> ¦ doc: that might be further discussed by subheaders. This way the examples

[12:34] <Geth> ¦ doc: are self-container to their own section (and subsections).

[12:34] <Geth> ¦ doc: 

[12:34] <Geth> ¦ doc: * Remove meta-commentary from the sample code. Instead, leave it for the

[12:34] <linkable6> Link: https://docs.raku.org/language/101-basics

[12:34] <Geth> ¦ doc:   discussion text.

[12:34] <Geth> ¦ doc: 

[12:34] <Geth> ¦ doc: * Index terms more clearly.

[12:34] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/584013a945

[12:34] <Geth> ¦ doc: d4e059947e | (Luis F. Uceta)++ | doc/Language/101-basics.pod6

[12:34] <Geth> ¦ doc: Make changes as requested

[12:34] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/d4e059947e

[12:34] <Geth> ¦ doc: 1896846e02 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/101-basics.pod6

[12:35] <Geth> ¦ doc: Merge pull request #3457 from uzluisf/master

[12:35] <Geth> ¦ doc: 

[12:35] *** cpan-raku left
[12:35] <Geth> ¦ doc: Revise 'Raku by example 101' page

[12:35] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1896846e02

[12:36] *** cpan-raku joined
[12:36] *** cpan-raku left
[12:36] *** cpan-raku joined
[12:37] <cpan-raku> New module released to CPAN! Sparrowdo (0.1.8) by 03MELEZHIK

[12:37] <cpan-raku> New module released to CPAN! Tomty (0.0.11) by 03MELEZHIK

[12:41] *** KindTwo joined
[12:42] *** KindOne left
[12:45] *** KindTwo is now known as KindOne

[12:45] *** rbt left
[12:58] *** squashable6 left
[12:59] *** skids joined
[13:01] <Geth> ¦ ecosystem: khalidelboray++ created pull request #499: Cmark

[13:01] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/499

[13:01] *** squashable6 joined
[13:03] <elcaro> huh

[13:07] <elcaro> I need to do similar to perls `pack('d*', $num)` and found that neither the experimental pack feature nor p5pack module supported 'f' or 'd'

[13:07] <elcaro> turns out that - given a Buf -  'f*' is just `.write-num32(0, $float)` and '*d' is `.write-num64(0, $float)` !

[13:08] <lizmat> elcaro: patches for P5pack are welcome  :-)

[13:08] <elcaro> I spent the last hour learning how nums are packed into bits for nothing :D

[13:08] <elcaro> thanks, liz i'll try to get around to it. should also be mentioned in pack docs, too, i suppose

[13:25] <Geth> ¦ doc: 75cbce7079 | Coke++ | doc/Language/101-basics.pod6

[13:25] <Geth> ¦ doc: fix example compilations

[13:25] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/75cbce7079

[13:25] <linkable6> Link: https://docs.raku.org/language/101-basics

[13:28] *** soursBot left
[13:33] *** soursBot joined
[13:39] <Geth> ¦ ecosystem: khalidelboray++ created pull request #500: Cmark , travis tests passing

[13:39] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/500

[13:52] <Geth> ¦ ecosystem: 064f73f3e4 | (Khalid Mohamed Elborey)++ (committed using GitHub Web editor) | META.list

[13:52] <Geth> ¦ ecosystem: Cmark , travis tests passing

[13:52] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/064f73f3e4

[13:52] <Geth> ¦ ecosystem: 7c3620e549 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | META.list

[13:52] <Geth> ¦ ecosystem: Merge pull request #500 from khalidelboray/patch-2

[13:52] <Geth> ¦ ecosystem: 

[13:52] <Geth> ¦ ecosystem: Cmark , travis tests passing

[13:52] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/7c3620e549

[13:54] *** aborazmeh left
[14:05] *** aborazmeh joined
[14:05] *** aborazmeh left
[14:05] *** aborazmeh joined
[14:05] *** andrzejku left
[14:11] *** sena_kun joined
[14:12] *** Altai-man_ left
[14:18] *** telex left
[14:20] *** telex joined
[14:23] *** wamba joined
[14:31] *** wamba left
[14:39] *** soursBot left
[15:04] *** brtastic left
[15:06] *** lucasb joined
[15:07] *** soursBot joined
[15:21] *** aborazmeh left
[15:28] *** brtastic joined
[15:31] *** molaf joined
[15:52] <melezhik> Yet another proposal of Sparrowdo/Raku as configuration management tool on reddit devops - https://www.reddit.com/r/devops/comments/gvj4es/virtual_machine_for_common_tool_environment/fsral4s?utm_source=share&utm_medium=web2x

[15:52] <melezhik> please vote it up if you like

[15:55] *** suman joined
[15:58] *** aborazmeh joined
[15:58] *** aborazmeh left
[15:58] *** aborazmeh joined
[16:04] *** kensanata left
[16:05] *** Altreus joined
[16:10] *** Altai-man_ joined
[16:12] *** sena_kun left
[16:16] *** ctilmes joined
[16:17] <El_Che> had anyone know of the exitence of xml-rpc raku libs ?

[16:18] <ctilmes> jdv79: JSON::simd here: https://github.com/CurtTilmes/raku-jsonsimd

[16:18] <ctilmes> jdv79: Should be on CPAN soon

[16:18] <ctilmes> Still refining build/install process for the libraries -- hopefully it will install everywhere.  Interested in feedback from Windows folks especially.

[16:25] <El_Che> ctilmes: pardom my ignorance, is it compatible with xml-rpc?

[16:26] <melezhik> @ct

[16:26] <El_Che> I go some example generic perl5 code to reach a service, and I would like to use raku for that

[16:27] <melezhik> ctilmes I've RakuDist for it - https://rakudist.raku.org/sparky/report/debian/176

[16:27] *** suman left
[16:30] *** Sgeo joined
[16:30] <ctilmes> El_Che: Not sure what you are asking?  It reads/parses JSON into Raku data structures.  Not sure what that would have to do with xml-rpc.

[16:32] *** stoned75 left
[16:33] *** stoned75 joined
[16:37] *** dakkar left
[16:47] *** Doc_Holliwood joined
[16:52] *** devmikey joined
[16:53] *** timotimo left
[17:02] *** aborazmeh left
[17:20] <El_Che> ctilmes: ah ok, you weren't responding to me question. Sorry, I just misunderstood

[17:21] <ctilmes> np

[17:21] *** soursBot left
[17:24] <jdv79> odd that OpenSSL doens't like to install on ubuntu

[17:26] <melezhik> jdv79 I've played with OpenSSL installations on varios Linux and I'd say it does not install anywhere 

[17:26] <melezhik> I'll will share some RakuDist builds later 

[17:28] <melezhik> I've run it for Ubuntu - https://rakudist.raku.org/sparky/report/ubuntu/177

[17:29] *** epony left
[17:31] <melezhik> well, OpenSSL succeeds on Ubuntu - https://rakudist.raku.org/sparky/report/ubuntu/177

[17:32] <melezhik> and here is my ssl system packages for Ubuntu, just in case - https://github.com/melezhik/RakuDist/blob/master/dockers/ubuntu/sparrowfile#L7

[17:32] <melezhik> so you could see final configuration

[17:35] *** devmikey left
[17:38] *** Doc_Holliwood left
[17:39] *** sauvin left
[17:40] <jdv79> ctilmes: remarkable how similar the from-json case timing is between ::Fast and ::simd

[17:40] <jdv79> wonder where efforts to speed that up would focus best

[17:42] <jdv79> i just tested on a random set of 50 json files ranging size from around 100k to 200k or so

[17:47] *** soursBot joined
[17:50] *** epony joined
[17:53] *** aborazmeh joined
[17:53] *** aborazmeh left
[17:53] *** aborazmeh joined
[17:54] *** Doc_Holliwood joined
[17:57] <ctilmes> jdv79: Did you play with the :delay option?  That's where I saw the huge improvements.

[17:58] *** schlaftier left
[17:59] *** schlaftier joined
[18:00] <cpan-raku> New module released to CPAN! IRC::Client::Plugin::DiceRolls (0.1.0) by 03TYIL

[18:10] <cpan-raku> New module released to CPAN! CSS (0.0.5) by 03WARRINGD

[18:10] <jdv79> ctilmes: not yet.  i saw the "(almost)" bit and didn't delve in yet

[18:10] *** sena_kun joined
[18:10] *** silug left
[18:11] <jdv79> are the differences fully known?

[18:12] *** Altai-man_ left
[18:13] <jdv79> looks about 30x faster - nice

[18:13] *** silug joined
[18:14] <ctilmes> For the 'almost', the only difference I've found is when you ask the object for its name -- otherwise they should act identically to arrays/hashes -- if you find a way in which they don't, let me know.

[18:15] <jdv79> i just ran $d.deepmap... and it borks on teh delayed one and not on the from-json one

[18:15] <jdv79> i'll try to dig into it later i guess

[18:16] <ctilmes> also the JSON path stuff -- You can do $object<foo/bar/2/this> and it will jump right to the right result

[18:17] *** aborazmeh left
[18:19] <jdv79> cool

[18:22] *** soursBot left
[18:22] *** natrys joined
[18:29] *** schlaftier left
[18:30] *** schlaftier joined
[18:33] *** mst joined
[18:42] *** soursBot joined
[18:49] *** natrys left
[18:57] *** aborazmeh joined
[18:57] *** aborazmeh left
[18:57] *** aborazmeh joined
[18:58] *** soursBot left
[19:21] *** xinming_ left
[19:21] *** xinming_ joined
[19:23] <jdv79> ctilmes: thanks!  its covers some cases of mine.  but i still someimtes have to iterate the whole thing.

[19:24] *** chloekek joined
[19:29] *** molaf left
[19:33] *** girafe left
[19:37] *** timo joined
[19:38] *** timo is now known as Guest50966

[19:39] *** Guest50966 is now known as timotimo

[19:40] *** silug left
[19:41] *** silug joined
[19:51] *** squashable6 left
[19:51] *** wamba joined
[19:53] *** squashable6 joined
[19:54] *** mowcat left
[19:55] *** mowcat joined
[20:06] *** soursBot joined
[20:10] *** Altai-man_ joined
[20:12] *** sena_kun left
[20:27] *** lichtkind left
[20:32] *** MasterDuke left
[20:37] *** chloekek left
[20:47] *** robinsmidsrod left
[20:48] *** robinsmidsrod joined
[20:51] *** aborazmeh left
[20:56] *** girafe joined
[20:57] *** Kaiepi left
[21:00] *** Kaiepi joined
[21:06] *** hyperak left
[21:06] *** hyperak joined
[21:06] *** brtastic left
[21:08] *** Black_Ribbon joined
[21:11] *** hyperak is now known as picmyk

[21:13] *** ctilmes left
[21:18] *** rindolf left
[21:19] *** MasterDuke joined
[21:19] *** molaf joined
[21:41] *** soursBot left
[21:45] *** chloekek joined
[21:46] *** wamba left
[21:50] *** chloekek left
[22:10] *** aborazmeh joined
[22:10] *** aborazmeh left
[22:10] *** aborazmeh joined
[22:11] *** sena_kun joined
[22:12] *** Altai-man_ left
[22:28] *** stoned75 left
[22:32] *** melezhik left
[22:34] <cpan-raku> New module released to CPAN! Sparrow6 (0.0.22) by 03MELEZHIK

[23:04] *** xinming_ left
[23:04] *** xinming_ joined
[23:07] <Geth> ¦ problem-solving: 7fbe6dcb1f | (Patrick Böker)++ | solutions/language/Windows-process-argument-quoting.md

[23:07] <Geth> ¦ problem-solving: Solution for #20: Windows process argument quoting

[23:07] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/7fbe6dcb1f

[23:07] <Geth> ¦ problem-solving: cc185d8187 | (Patrick Böker)++ | solutions/language/Windows-process-argument-quoting.md

[23:07] <Geth> ¦ problem-solving: Correct a typo

[23:07] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/cc185d8187

[23:07] <Geth> ¦ problem-solving: dd5529c625 | (Jonathan Worthington)++ (committed using GitHub Web editor) | solutions/language/Windows-process-argument-quoting.md

[23:07] <Geth> ¦ problem-solving: Merge pull request #178 from patrickbkr/problem-solving20

[23:07] <Geth> ¦ problem-solving: 

[23:07] <Geth> ¦ problem-solving: Solution for #20: Windows process argument quoting

[23:07] <Geth> ¦ problem-solving: review: https://github.com/Raku/problem-solving/commit/dd5529c625

[23:11] *** sauvin joined
[23:18] *** aborazmeh left
[23:29] *** pecastro left
[23:32] *** Doc_Holliwood left
[23:38] *** vike1 left
[23:42] *** sena_kun left
[23:43] *** vike1 joined
[23:45] *** picmyk left
[23:58] *** leont left
