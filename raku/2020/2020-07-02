[00:00] <SmokeMachine> It‚Äôs a memorizes dom module, it can help to write html and interact with it on the browser

[00:00] <SmokeMachine> https://fco.github.io/MemoizedDOM/todo6.html

[00:01] <SmokeMachine> (This is a old test using webperl6, I don‚Äôt know if it would be faster currently)

[00:01] <oddp> timotimo: why doesn't this work when you can use something like .reduce(&[+]) just fine? 

[00:01] <oddp> m: say <1 2 3 4>.rotor(2 => -1).map(&[-])

[00:01] <camelia> rakudo-moar 9f546ef6f: OUTPUT: ¬´(0 2)‚ê§¬ª

[00:02] *** sena_kun joined
[00:04] <SmokeMachine> [Coke]: the API is not finalised, but it was cool to play with that

[00:04] *** Altai-man_ left
[00:04] <[Coke]> Ok. the lack of readme is daunting.

[00:04] <[Coke]> I will add it to my research list. thanks

[00:05] <SmokeMachine> https://github.com/FCO/MemoizedDOM/tree/master/examples/todo

[00:05] <timotimo> oddp: you want &[R-] at least

[00:05] <cpan-raku> New module released to CPAN! Text::Diff (1.0.4) by 03RBT

[00:06] <oddp> m: say <1 2 5 10>.rotor(2 => -1).map(&[R-])

[00:06] <camelia> rakudo-moar 9f546ef6f: OUTPUT: ¬´(2 2 2)‚ê§¬ª

[00:06] <oddp> ok?

[00:07] <timotimo> huh that's not quite it

[00:07] <SmokeMachine> (Last comment, I promise) this is how you do the app: https://github.com/FCO/MemoizedDOM/blob/master/examples/todo/App.pm6

[00:07] <timotimo> i assume it's giving you a two-item list on both sides of the - there

[00:08] <timotimo> m: say <1 2 5 10 20 50 100>.rotor(3 => -2).map(&[R-])

[00:08] <camelia> rakudo-moar 9f546ef6f: OUTPUT: ¬´(3 3 3 3 3)‚ê§¬ª

[00:08] <timotimo> m: say <1 2 5 10 20 50 100>.rotor(4 => -3).map(&[R-])

[00:08] <camelia> rakudo-moar 9f546ef6f: OUTPUT: ¬´(4 4 4 4)‚ê§¬ª

[00:08] <timotimo> yeah it's only about the size of list you put out of the rotor

[00:09] <SmokeMachine> m: say <1 2 5 10>.map: &[R-]

[00:09] <camelia> rakudo-moar 9f546ef6f: OUTPUT: ¬´(1 2 5 10)‚ê§¬ª

[00:14] <SmokeMachine> m: <1 2 5 10>.map: &[-]

[00:14] <camelia> rakudo-moar 9f546ef6f: ( no output )

[00:14] <SmokeMachine> m: say <1 2 5 10>.map: &[-]

[00:14] <camelia> rakudo-moar 9f546ef6f: OUTPUT: ¬´(-1 -5)‚ê§¬ª

[00:14] <oddp> That one seems to eat two list elements, right?

[00:15] <SmokeMachine> Yes

[00:16] <oddp> Hm, guess I'll defer from using this syntax sugar till I get the hang of it. A bit unintuitive coming from ruby.

[00:17] <SmokeMachine> m: say <1 2 5 10 20>.map: -> $a, $b = 0 { $b - $a }

[00:17] <camelia> rakudo-moar 9f546ef6f: OUTPUT: ¬´(1 5 -20)‚ê§¬ª

[00:21] <SmokeMachine> oddp: it goes 2 by 2 because the function I‚Äôve passed to map accepts 2 parameters

[00:21] *** wamba left
[00:26] *** zz-z joined
[00:28] <oddp> Too late over here, maybe it will all make sense tomorrow morning. Thanks for your time and patience.

[00:29] *** faiface left
[00:40] *** zz-z left
[00:44] *** lainon left
[01:07] *** stoned75 joined
[01:41] *** moony joined
[01:41] *** moony is now known as Guest42671

[01:44] *** Guest42671 left
[01:49] *** probablymoony joined
[01:53] *** vike joined
[01:57] *** probablymoony is now known as moony

[02:00] *** molaf left
[02:01] *** Altai-man_ joined
[02:03] *** rbt left
[02:04] *** rbt joined
[02:04] *** sena_kun left
[02:05] *** Manifest0 joined
[02:12] *** molaf joined
[02:22] *** hungrydonkey left
[02:22] *** hungrydonkey joined
[02:25] *** Cabanossi left
[02:37] *** Cabanossi joined
[03:04] *** softmoth joined
[04:02] *** sena_kun joined
[04:04] *** Altai-man_ left
[04:09] *** xinming_ left
[04:10] *** xinming_ joined
[04:47] *** rindolf joined
[04:58] *** team\andinus joined
[04:59] *** skids left
[05:05] *** OpenZen joined
[05:16] *** OpenZen left
[05:18] *** team\andinus is now known as notandinus

[05:25] *** zacts joined
[05:34] *** bocaneri joined
[05:44] *** wamba joined
[05:48] *** vike left
[05:54] *** softmoth left
[05:57] *** brtastic joined
[05:58] *** sarna joined
[06:01] *** Altai-man_ joined
[06:04] *** sena_kun left
[06:06] *** rbt left
[06:07] *** rbt joined
[06:10] *** vike joined
[06:16] *** wamba left
[06:58] *** JJMerelo joined
[07:03] *** finanalyst joined
[07:13] *** dolmen joined
[07:22] *** pecastro joined
[07:22] *** rindolf left
[07:35] *** dyske joined
[07:35] *** dyske left
[07:39] *** wamba joined
[07:43] *** aborazmeh joined
[07:43] *** aborazmeh left
[07:43] *** aborazmeh joined
[07:43] *** dakkar joined
[07:49] *** Cabanossi left
[07:49] *** satori__ joined
[07:50] *** reach_satori_ left
[07:51] *** kensanata joined
[07:52] *** aborazmeh left
[07:59] *** Cabanossi joined
[08:03] *** sena_kun joined
[08:04] *** Altai-man_ left
[08:06] *** dolmen left
[08:08] *** dolmen joined
[08:11] *** abraxxa joined
[08:16] *** abraxxa left
[08:16] *** abraxxa joined
[08:54] *** JJMerelo left
[08:56] *** finanalyst left
[09:02] *** epony joined
[09:06] *** dolmen left
[09:07] *** rindolf joined
[09:17] *** dolmen joined
[09:21] *** dolmen left
[09:23] *** dolmen joined
[09:25] *** notandinus left
[09:28] *** team\andinus joined
[09:29] *** team\andinus is now known as notandinus

[09:30] *** lichtkind joined
[09:31] *** oddp joined
[09:32] *** hungrydonkey left
[09:32] *** hungrydonkey joined
[09:43] *** JJMerelo joined
[09:57] *** nosqrt joined
[10:02] *** Black_Ribbon left
[10:02] *** Altai-man_ joined
[10:04] *** sena_kun left
[10:10] *** rindolf left
[10:11] *** kensanata left
[10:14] *** molaf left
[10:18] *** epony left
[10:24] *** thundergnat joined
[10:24] <thundergnat> m: say <1 2 5 10 20>.rotor(2=>-1).flat.map: * R- *

[10:24] <camelia> rakudo-moar ed936c143: OUTPUT: ¬´(1 3 5 10)‚ê§¬ª

[10:25] <thundergnat> You were all _so_ close.

[10:44] *** zacts left
[10:44] *** zacts joined
[11:02] *** squashable6 joined
[11:11] *** thundergnat left
[11:44] *** dolmen left
[11:49] *** dolmen joined
[11:52] *** cpan-raku left
[11:53] *** cpan-raku joined
[11:53] *** cpan-raku left
[11:53] *** cpan-raku joined
[11:56] *** kensanata joined
[12:03] *** sena_kun joined
[12:04] *** Altai-man_ left
[12:44] *** |oLa| joined
[12:45] <cpan-raku> New module released to CPAN! Gnome::Cairo (0.1.0.1) by 03MARTIMM

[12:53] <cpan-raku> New module released to CPAN! Gnome::Gdk3 (0.16.0) by 03MARTIMM

[12:57] *** skids joined
[12:59] *** AlexDani` left
[12:59] *** rindolf joined
[13:04] *** JJMerelo left
[13:31] *** dolmen left
[13:41] *** skids left
[13:45] *** skids joined
[13:47] *** wamba left
[13:51] *** dolmen joined
[13:55] *** wamba joined
[14:01] *** Altai-man_ joined
[14:03] *** zacts left
[14:04] *** sena_kun left
[14:07] *** sarna left
[14:12] *** rbt left
[14:13] *** rbt joined
[14:20] *** kensanata left
[14:20] *** stoned75 left
[14:20] *** brtastic left
[14:21] *** rindolf left
[14:21] *** stoned75 joined
[14:22] *** rindolf joined
[14:38] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.28.6) by 03MARTIMM

[14:45] *** AlexDani` joined
[14:45] *** dolmen left
[14:45] *** AlexDani` is now known as AlexDaniel

[14:46] *** AlexDaniel left
[14:46] *** AlexDaniel joined
[14:55] *** finanalyst joined
[15:00] *** dudzHat joined
[15:05] *** MilkmanDan joined
[15:09] *** dogbert17 left
[15:09] *** spacebat2 joined
[15:09] *** jargan joined
[15:10] *** vike1 joined
[15:10] *** Kaeipi joined
[15:12] *** sftp_ joined
[15:13] *** dustinm`_ joined
[15:13] *** skyl4rk_ joined
[15:14] *** elcaro_ joined
[15:14] *** jargan is now known as jast

[15:14] *** skyl4rk_ is now known as skyl4rk

[15:14] *** aindilis` joined
[15:14] *** [Coke]_ joined
[15:14] *** [Coke]_ left
[15:14] *** [Coke]_ joined
[15:14] *** sftp_ is now known as sftp

[15:14] *** dogbert17 joined
[15:14] *** vike left
[15:14] *** notandinus left
[15:14] *** lnx joined
[15:14] *** eseyman joined
[15:15] *** pecastro left
[15:15] *** finanalyst left
[15:16] *** notandinus joined
[15:17] *** pecastro joined
[15:17] *** synthmeat joined
[15:17] *** sjm_uk joined
[15:18] *** finanalyst joined
[15:19] *** k-man joined
[15:22] *** orinthe joined
[15:22] *** aindilis` left
[15:23] *** aindilis joined
[15:25] *** MilkmanDan left
[15:27] *** Ekho joined
[15:32] *** OpenZen joined
[15:37] *** |oLa| left
[15:43] *** kensanata joined
[15:49] *** nebuchadnezzar joined
[15:55] <Geth> ¬¶ doc: 093cbb3ec2 | (JJ Merelo)++ | doc/Language/control.pod6

[15:55] <Geth> ¬¶ doc: Some minor reformatting.

[15:55] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/093cbb3ec2

[15:55] <linkable6> Link: https://docs.raku.org/language/control

[15:56] *** rbt left
[15:56] *** molaf joined
[15:57] *** MilkmanDan joined
[16:03] *** sena_kun joined
[16:03] <Geth> ¬¶ doc: bedfefdd21 | (JJ Merelo)++ | doc/Language/control.pod6

[16:03] <Geth> ¬¶ doc: Additional minor corrections.

[16:03] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/bedfefdd21

[16:03] <linkable6> Link: https://docs.raku.org/language/control

[16:04] *** Altai-man_ left
[16:19] *** codesections joined
[16:20] *** JJMerelo joined
[16:20] <JJMerelo> Well, I just broke the documentation

[16:20] <JJMerelo> Trying to fix it back.

[16:20] <JJMerelo> It might be due to latest changes in Documentable, but I am not so sure

[16:21] <JJMerelo> reverting to an old version of Documentable to generate it

[16:22] <codesections> I kind of like that look.  Very clean

[16:23] *** kensanata left
[16:24] <JJMerelo> Yep, that's the thing

[16:25] <JJMerelo> I mean, the content is the same, but all the old CSS and JS are totally lost

[16:25] <JJMerelo> There have been lots of changes in documentable lately, and I just moved to a new laptop, so I installed the new version. I'm reverting to generating it with the old version

[16:25] <JJMerelo> Fortunately, every version of raku installed with rakudobrew keeps its own version of everything, so we should be good I guess

[16:26] <JJMerelo> Generating the new (old) pages now, should take only a few minutes

[16:26] <codesections> Makes sense.  I'm just expressing admiration for how well it degrades, without (external) CSS

[16:26] <JJMerelo> I'm going to save also this version to a repo, so that we can always get the old look back when we want.

[16:27] <JJMerelo> codesections maybe we should add a toggle...

[16:28] <JJMerelo> well, old crufty version is back

[16:30] <JJMerelo> Replica of this version saved to https://rakudocs.github.io/

[16:30] *** [Sno] left
[16:32] *** sno joined
[16:42] *** molaf left
[17:00] *** dakkar left
[17:10] *** softmoth joined
[17:17] *** nosqrt left
[17:21] <Geth> ¬¶ problem-solving: landyacht assigned to jnthn Issue Exponentiation with Rat or FatRat exponent results in Num https://github.com/Raku/problem-solving/issues/209

[17:28] *** dolmen joined
[17:29] *** holyghost joined
[17:30] *** holyghost left
[17:30] *** holyghost joined
[17:30] <Geth> ¬¶ problem-solving: lizmat unassigned from jnthn Issue Exponentiation with Rat or FatRat exponent results in Num https://github.com/Raku/problem-solving/issues/209

[17:40] *** patrickb joined
[17:45] <Geth> ¬¶ doc: 10f8491990 | Antonio++ (committed using GitHub Web editor) | assets/doc-generation.json

[17:45] <Geth> ¬¶ doc: fix: update config file, refs Raku/Documentable#63

[17:45] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/10f8491990

[17:46] *** JJMerelo left
[17:49] *** Cabanossi left
[17:59] *** Cabanossi joined
[18:02] *** Altai-man_ joined
[18:02] *** hungrydonkey left
[18:02] *** dolmen left
[18:05] *** sena_kun left
[18:26] *** bocaneri left
[18:47] *** epony joined
[18:52] *** Black_Ribbon joined
[18:56] *** Merfont joined
[18:57] *** kensanata joined
[18:57] *** Kaeipi left
[19:08] *** dolmen joined
[19:12] *** molaf joined
[19:19] *** veesh_ joined
[19:20] *** veesh_ is now known as veesh

[19:28] *** finanalyst left
[19:29] *** MasterDuke joined
[19:30] *** [Coke]_ is now known as [Coke]

[19:42] <codesections> This is very much a beginner question, but do I need to do something (beyond installing Rakudo Star) to install/use the documentation?  I see the source for the docs has been installed to ~/rakudo/install/share/perl6/site/doc, but I don't see any way to interact with those docs.  In particular, I thought I'd be able to see something in the REPL with an expression like `&say.WHY`, but I don't get

[19:42] <codesections> anything with that.  Do I have something set up wrong or am I just confused about what to expect?

[19:48] *** Benett left
[19:48] *** Benett joined
[19:53] <codesections> Ok, partly answering my own question: after reading the FAQ more carefully, I realize that I needed to be using p6doc to interact with the documentation locally (I'd tried `raku --doc` and checked the `raku -h` output, but had somehow missed the existence of `p6doc`)

[19:55] <codesections> But that still leaves me confused about the second half of my question: should I be able to see documentation for items in the REPL?

[19:55] <codesections> I'm currently getting messages like

[19:55] <codesections> No documentation available for type 'Sub'.

[19:55] <codesections> Perhaps it can be found at https://docs.raku.org/type/Sub

[19:56] <codesections>   which *suggests* (to me) that I may not have something installed correctly‚Ä¶

[19:58] <codesections> hmm, maybe I should try on here.  Let's see‚Ä¶

[19:58] <codesections> raku: &say.WHY

[19:58] <evalable6> codesections, rakudo-moar 682a79646: OUTPUT: ¬´¬ª

[19:59] <codesections> raku: say &say.WHY

[19:59] <evalable6> codesections, rakudo-moar 682a79646: OUTPUT: ¬´No documentation available for type 'Sub'.‚ê§Perhaps it can be found at https://docs.raku.org/type/Sub‚ê§¬ª

[19:59] <codesections> hmm, same message I get locally

[20:01] *** aborazmeh joined
[20:01] *** aborazmeh left
[20:01] *** aborazmeh joined
[20:02] *** sena_kun joined
[20:05] *** Altai-man_ left
[20:06] <lizmat> codesections: the .WHY functions sadly do not work on built-ins

[20:07] <lizmat> long story cut short: during development, it was a. too much in flux, and b. hindering the development cycle as it would at least double compilation time (this was in the Parrot days)

[20:07] <lizmat> since then, no effort has been made to remedy this, other than what you saw with the "perhaps it can be found" message

[20:08] <lizmat> for most built-in types, the link is actually correct

[20:09] <codesections> Ok, thanks ‚Äì very informative!  So what do they work on? From the docs, I thought I could add .WHY help strings to my own sub by adding a comment above it with #|, but couldn't get that to work.

[20:10] <lizmat> are you trying things in the REPL ?

[20:11] *** abraxxa left
[20:11] <codesections> Well, I tried both in the REPL and by sending an Emacs buffer to the REPL via raku-mode

[20:12] <lizmat> #| foobar

[20:12] <lizmat> sub zip() { }

[20:12] <lizmat> say &zip.WHY;

[20:12] <evalable6> lizmat, rakudo-moar 682a79646: OUTPUT: ¬´No documentation available for type 'Sub+{is-pure}+{Precedence}'.‚ê§Perhaps it can be found at https://docs.raku.org/type/Sub+{is-pure}+{Precedence}‚ê§¬ª

[20:12] <lizmat> works for me

[20:14] *** abraxxa joined
[20:16] <codesections> when you say that it works for you, you get output with `foobar` when running those statements in the REPL?  I am getting a message similar to the one from evalable6

[20:17] <lizmat> yes, that's what I was saying: it should say "foobar"

[20:17] <lizmat> because that is the .WHY text associated with the sub

[20:18] *** dolmen left
[20:18] <codesections> That is what I thought.  I wonder why I and evalable6 are both getting an error instead 

[20:19] <lizmat> evalable6 only does line at at time, and loses knowledge of the previous lines

[20:19] <lizmat> *one

[20:21] <codesections> Hmm, that seems to be the case for the REPL version I'm using as well (both when I paste the three lines in together and when I send the full buffer from Emacs).  I get the expected output when I save those lines to a file and execute them as a standalone script

[20:25] *** rindolf left
[20:26] <lizmat> yeah, the REPL and the bots only know of one line at the time, really

[20:26] <lizmat> although the REPL tries to fake it, but fails in a lot of cases

[20:26] <lizmat> this being one of them I guess

[20:28] <codesections> Fair enough.  And I guess Emacs' raku-mode is still sending the text as lines to the REPL, and runs into the same limitations

[20:28] <lizmat> probably, dunno, /me uses vim

[20:29] <lizmat> if it would be smart enough to write it to a temp file, and then run that, it should work

[20:29] <codesections> Fair enough.  Maybe I'll switch back one of these days :)

[20:30] <lizmat> :)

[20:32] <codesections> While you're being so helpful, a (semi) related question: is there a way to have Raku print a human readable representation of a `sub`?

[20:34] <codesections> raku: sub add1($i) { $i + 1 }; say &add1.raku;

[20:34] <evalable6> codesections, rakudo-moar 682a79646: OUTPUT: ¬´sub add1 ($i) { #`(Sub|94400420871152) ... }‚ê§¬ª

[20:35] <codesections> I was looking for a textual version of the sub in place of that hash 

[20:35] <lizmat> alas, no

[20:35] <lizmat> jnthn's RakuAST work might make that possible

[20:35] *** dudzHat is now known as dudz

[20:35] *** dudz left
[20:35] *** dudz joined
[20:35] <moritz> keeping all that around after compilation would still be a huge waste of memory

[20:36] <lizmat> moritz: not necessaryily: could be a single int value with an offset and a length in it, that would index into the source

[20:40] <codesections> moritz, I hadn't really thought though the technical details ‚Äì I just remember that being a feature of the JavaScript REPL, and it's one I miss a bit

[20:51] *** aborazmeh left
[20:52] <timotimo> iirc we currently don't ship the core setting source into the installation folder

[20:52] <timotimo> in typical javascript VMs the functions are actually stored as javascript source in the installation, except for some "[native function]" functions?

[20:52] <timotimo> because i guess javascript parses ridiculously quickly?

[21:00] *** MasterDuke left
[21:14] <lizmat> I've been toying with the idea of having a module in lib with all of the docs of core functionality, that could be loaded on demand by .WHY and the have it produce the right doc

[21:32] *** aborazmeh joined
[21:32] *** aborazmeh left
[21:32] *** aborazmeh joined
[21:38] *** rbt joined
[21:39] *** wamba left
[21:40] *** cpan-raku left
[21:41] *** cpan-raku joined
[21:41] *** cpan-raku left
[21:41] *** cpan-raku joined
[21:42] *** kensanata left
[21:49] *** Cabanossi left
[21:53] *** Cabanossi joined
[21:56] *** lichtkind left
[21:57] *** [Coke] left
[22:01] *** Altai-man_ joined
[22:05] *** sena_kun left
[22:11] *** rbt left
[22:12] *** rbt joined
[22:16] *** finanalyst joined
[22:26] *** rindolf joined
[22:34] *** [Coke] joined
[22:35] * [Coke] returns from his brief power outage

[22:35] <[Coke]> wind must have knocked something down somewhere. 

[22:37] *** squashable6 left
[22:41] *** squashable6 joined
[22:42] *** aborazmeh left
[23:07] *** rindolf left
[23:12] *** patrickb left
[23:12] <timotimo> knock knock

[23:16] <sjn> who's there?

[23:18] *** hungrydonkey joined
[23:19] <timotimo> it's me, i don't know how knock knock jokes work

[23:30] *** AlexDaniel left
[23:34] *** finanalyst left
[23:35] *** pecastro left
[23:40] <codesections> Following up on our earlier discussion of how Raku can't currently print the source of a built-in function, I decided to write a helper function that would print the source.  I'm sure this isn't super robust (did I mention that I'm just now discovering Raku) but I expect I'll find it helpful in testing things out in the REPL.  I'll paste it here, in case anyone else is interested.

[23:40] <codesections> sub src($sub) {

[23:40] <codesections>     my ($sub-name, $path) = ($sub.gist.substr(1), $sub.file);

[23:40] <codesections>     $path ~~ s|'SETTING::'|/home/{$*USER}/rakudo/rakudo/|;

[23:40] <codesections>     my $sources = (slurp $path) ~~ m:g/^^<([\w||\h]*?"$sub-name".*?\{.*?\})>/;

[23:40] <codesections>     my $c = 1;

[23:40] <codesections>     "&$sub-name defined {$sources.elems} times:\n\nDefintion #1:\n"

[23:40] <codesections>     ~  $sources.reduce({$^a ~ "\n\nDefintion #{ ++$c }:\n" ~ $^b})

[23:40] <codesections> }

[23:51] *** AlexDaniel joined
[23:51] *** AlexDaniel left
[23:51] *** AlexDaniel joined
