[00:00] *** Poohman left
[00:11] *** chloekek left
[00:18] *** tinita joined
[00:18] <tinita> hi, I have a question. where does rakudo put the precompiled script? if I call a script for a second time, it is faster, but I can't find the place where it's cached

[00:19] <tinita> I'm asking also because there seems to be no precompiling if I call a script belonging to root as a normal user

[00:26] <tobs> tinita: I have a .perl6/precomp in my home dir but I don't know more about what's happening.

[00:26] <tinita> tobs: ah, hm

[00:27] <jnthn> tinita: It depends if it's an installed module (in which case it's at the module installation location) or with -Ilib or `use lib`, in which case it's a .precomp/ directory at that location

[00:27] <tinita> I'm running this in docker where I don't have a regular user, I'm running it with --user $UID

[00:27] <tinita> but I did `export HOME=/home/tmp; mkdir $HOME` and it still didn't precompile

[00:28] <tinita> jnthn: huh, ok. it's an installed module. the problem is I have no write permission for anything except my homedir, because I want to run docker as non-root

[00:29] <tinita> is there a way to influence the .precomp dir?

[00:29] <tinita> maybe during building rakudo?

[00:37] <jnthn> Hmm...it should do the precompilation at module installation time though

[00:38] <jnthn> Which I guess would happen during the container build

[00:39] <jnthn> I think if you put RAKUDO_MODULE_DEBUG=1 in the environment it may give some clues (or is it MODULES...I forget)

[00:39] <tinita> ok, thanks!

[00:39] <tinita> https://github.com/perlpunk/yaml-runtimes/blob/dev/docker/rakudo/utils/rakudo-install.sh

[00:39] <tinita> this is the script I use for installing modules

[00:39] <jnthn> Hmm

[00:40] <jnthn> --install-to=/build/perl6

[00:40] <jnthn> I think I'd expect it to precomp then and put 'em in a .precomp/ under there

[00:41] <tinita> yes, there is a /perl6/precomp/ there (which is copied from /build/perl6)

[00:41] <jnthn> But now I wonder if it's really the installed things it's precompiling, or non-installed modules of the application?

[00:41] <tinita> this is the script: https://github.com/perlpunk/yaml-runtimes/blob/dev/docker/rakudo/testers/raku-yamlish-json

[00:41] <tinita> I put this into /yaml/bin/raku-yamlish-json

[00:41] <jnthn> Aha

[00:41] <jnthn> use lib "/lib";

[00:42] <tinita> oops

[00:42] <jnthn> So it'll be trying to write to /lib/.precomp

[00:42] <jnthn> But...I don't think you need the `use lib` line at all?

[00:42] <jnthn> Since the two modules being used are installed

[00:42] <tinita> but the target location is /perl6

[00:43] <tinita> should I do `use lib "/perl6"?

[00:43] <jnthn> Why are you doing `use lib` at all?

[00:43] <jnthn> Oh, 'cus a non-standard install location maybe...

[00:44] <jnthn> But since it isn't pointing at it, if the thing works, well...probably it's not needed

[00:44] <jnthn> Does it work without it?

[00:44] <tinita> yeah, but then I changed the directory.

[00:44] <tinita> I should note that I have this in ENV: PERL6LIB=inst#/perl6

[00:44] <tinita> so that's why it works =)

[00:45] <jnthn> Aha

[00:45] <jnthn> Then you can just drop the `use lib`

[00:45] <tinita> ok, i'll try and see if it works then also as non-root, thanks!

[00:48] *** wildtrees left
[00:51] <tinita> hm, it put something into /perl6/precomp/, but running the script as a user still doesn't use the cache

[00:55] <tinita> aaah

[00:56] <tinita> The install location is different from the final location in docker :-/

[00:56] <tinita> it's built in one docker via mount in /build/perl6, but then copied to the second docker to /perl6

[00:57] <stoned75> is whateverable's xbin/build.p6 still relevant ?

[00:57] <tinita> so the cache doesn't recognize it

[01:48] *** evalable6 left
[01:50] *** evalable6 joined
[01:51] *** Altai-man_ joined
[01:54] *** sena_kun left
[02:49] <SmokeMachine> I'm trying to run the red-bot on a docker swarm cluster, and the generated random name of the container was: `clever_perlman.1` I think it's a good luck sign... :P

[02:54] *** evalable6 left
[02:55] *** evalable6 joined
[03:11] *** mahmudov left
[03:12] *** mahmudov joined
[03:18] *** rbt joined
[03:30] *** mahmudov left
[03:30] *** mahtob joined
[03:31] *** mahtob left
[03:31] *** mahtob joined
[03:31] *** mahtob left
[03:37] *** mahmudov joined
[03:52] *** sena_kun joined
[03:54] *** Altai-man_ left
[04:44] *** epony left
[05:12] *** epony joined
[05:51] *** Altai-man_ joined
[05:54] *** sena_kun left
[06:13] *** Doc_Holliwood left
[07:13] *** releasable6 left
[07:13] *** bloatable6 left
[07:13] *** benchable6 left
[07:13] *** unicodable6 left
[07:13] *** notable6 left
[07:13] *** committable6 left
[07:13] *** shareable6 left
[07:13] *** quotable6 left
[07:13] *** nativecallable6 left
[07:13] *** sourceable6 left
[07:13] *** bisectable6 left
[07:13] *** statisfiable6 left
[07:13] *** reportable6 left
[07:13] *** squashable6 left
[07:13] *** greppable6 left
[07:13] *** coverable6 left
[07:14] <xinming_> oops, bots' net died

[07:14] *** committable6 joined
[07:14] *** unicodable6 joined
[07:14] *** bloatable6 joined
[07:14] *** reportable6 joined
[07:15] *** coverable6 joined
[07:15] *** notable6 joined
[07:15] *** statisfiable6 joined
[07:15] *** quotable6 joined
[07:15] *** shareable6 joined
[07:15] *** benchable6 joined
[07:15] *** greppable6 joined
[07:16] *** squashable6 joined
[07:16] *** sourceable6 joined
[07:16] *** nativecallable6 joined
[07:16] *** releasable6 joined
[07:16] *** bisectable6 joined
[07:46] *** Doc_Holliwood joined
[07:53] *** sena_kun joined
[07:54] *** Altai-man_ left
[08:17] *** horsepatat joined
[08:18] *** wamba joined
[08:27] <Geth> ¬¶ doc: a0fea36a2d | threadless-screw++ | 2 files

[08:27] <Geth> ¬¶ doc: Text refinement; closes: #2920

[08:27] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/a0fea36a2d

[08:27] <Geth> ¬¶ doc: 980235f0ae | threadless-screw++ | doc/Language/101-basics.pod6

[08:27] <Geth> ¬¶ doc: Deletion of "so"

[08:27] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/980235f0ae

[08:27] <Geth> ¬¶ doc: 116ccf6b1d | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | 2 files

[08:27] <Geth> ¬¶ doc: Merge pull request #3142 from threadless-screw/assignments

[08:27] <Geth> ¬¶ doc: 

[08:28] <Geth> ¬¶ doc: P6-101 text refinement + expansion of assignment operators section; closes: #2920

[08:28] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/116ccf6b1d

[08:42] <Geth> ¬¶ doc: f94c3daf04 | (JJ Merelo)++ | doc/Type/QuantHash.pod6

[08:42] <Geth> ¬¶ doc: Review and edits while checking #2632

[08:42] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f94c3daf04

[08:42] <Geth> ¬¶ doc: 4738bad7e9 | (JJ Merelo)++ | doc/Language/setbagmix.pod6

[08:42] <Geth> ¬¶ doc: Minor editions to reflect new set semantics refs #2632

[08:42] <Geth> ¬¶ doc: 

[08:42] <Geth> ¬¶ doc: Also some reflow.

[08:42] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/4738bad7e9

[08:42] <Geth> ¬¶ doc: dfa828c7f8 | (JJ Merelo)++ | 3 files

[08:42] <Geth> ¬¶ doc: Eliminates examples with set_precedes operators refs #2632

[08:42] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/dfa828c7f8

[09:25] *** rindolf joined
[09:52] *** Altai-man_ joined
[09:54] *** sena_kun left
[10:04] *** wamba left
[10:04] <AlexDaniel> stoned75: yes

[10:04] <AlexDaniel> stoned75: why do you ask? :)

[10:05] <AlexDaniel> xinming_: it's actually not the net dying, the story behind it is quite interesting

[10:05] <AlexDaniel> xinming_: basically‚Ä¶ it's a watchdog that gets triggered when people are not speaking for a long time

[10:06] <AlexDaniel> I should fix that :)

[10:15] *** horsepatat left
[10:53] *** wamba joined
[10:58] *** aluaces left
[11:04] <stoned75> AlexDaniel: hi. Hum... I can't recall :-} it was late last night, I was trying to use it to generate a set of container images to have my own offline, containerized, Committable

[11:05] <AlexDaniel> stoned75: you can fetch the builds instead of wasting your cpu cycles :) https://github.com/perl6/whateverable/wiki/Shareable

[11:05] <AlexDaniel> throw them into your container and it will probably work (?)

[11:05] <stoned75> how nice !

[11:10] <stoned75> ah yes. I remember now. whateverable/xbin/build.p6 and rakudo/Configure.pl --git-reference interaction seems to be broken. I had the understanding that now git-reference option is a noop for rakudo's Configure.pl and that current whateverable's build.p6's git clones layout breaks older rakudo's Configure.pl --git-reference assumption

[11:10] <AlexDaniel> hmmm

[11:10] <AlexDaniel> stoned75: ohhh yes

[11:11] *** libertas left
[11:11] *** libertas_ is now known as libertas

[11:11] <AlexDaniel> stoned75: what if you tweak these? https://github.com/perl6/whateverable/blob/f645470099a5230bea2ee06251087b6cd8592899/xbin/build.p6#L33-L36

[11:11] <AlexDaniel> so that you're only building the new stuff

[11:12] *** libertas left
[11:12] *** rbt left
[11:12] *** rbt joined
[11:13] *** libertas joined
[11:13] <stoned75> yes of course that would work. but as I wanted to build old release, I ended up tweaking RAKUDO-NQP-LATEST to take advantage of git-reference

[11:15] <stoned75> oh, and as I was building in containers too, where I initially forgot to install zstd, I encountered a kind of silent compression step error ;-)

[11:16] *** libertas_ joined
[11:20] <AlexDaniel> stoned75: :)

[11:20] *** chloekek joined
[11:20] <AlexDaniel> stoned75: it's a downside of having a centralized tool, I guess

[11:20] <AlexDaniel> ‚Äúit works for me‚Äù :)

[11:21] <stoned75> sure :)

[11:53] *** libertas left
[11:53] *** libertas_ is now known as libertas

[11:53] *** sena_kun joined
[11:54] *** libertas_ joined
[11:54] *** Altai-man_ left
[12:20] *** rbt left
[12:29] *** rindolf left
[12:37] *** rindolf joined
[12:52] *** wamba left
[12:58] *** kensanata joined
[12:58] *** mahmudov left
[12:58] *** stoned75 left
[12:59] *** stoned75 joined
[13:48] *** Doc_Holliwood left
[13:48] *** Doc_Holliwood joined
[13:53] *** Altai-man_ joined
[13:54] *** sena_kun left
[14:10] *** AlexDaniel left
[14:31] *** rindolf left
[14:40] <Geth> ¬¶ doc: 21e6301c41 | (Stoned Elipot)++ | assets/js/main.js

[14:40] <Geth> ¬¶ doc: Fix broken JavaScript code

[14:40] <Geth> ¬¶ doc: 

[14:40] <Geth> ¬¶ doc: ... by unescaped newline in string

[14:40] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/21e6301c41

[14:43] <Geth> ¬¶ doc: dca1c790c6 | (Stoned Elipot)++ | assets/js/main.js

[14:43] <Geth> ¬¶ doc: Update IRC channel name to #raku in link's content

[14:43] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/dca1c790c6

[14:46] *** rindolf joined
[14:50] *** horsepatat joined
[15:14] *** kensanata left
[15:14] <holyghost> I am going to code a video server using perl6 with use of pagan, it's on Xliff's server

[15:15] <holyghost> the meaning is to serve TV using a dumb blitter and then put an AI in using video code

[15:15] <holyghost> pagfan is the dumb litter

[15:15] <holyghost> *blitter

[15:15] <holyghost> *pagan

[15:24] <holyghost> You can attract a video stream using an AI, to serve, using chaos theory. Which still is a research topic.

[15:24] *** epony left
[15:25] <holyghost> I finished my "chaos : a statistical theory" book

[15:25] <holyghost> :-)

[15:25] <holyghost> s/theory/perspective

[15:27] *** epony joined
[15:29] <holyghost> I went with my code from a PowerPC to an i5 though

[15:34] *** kensanata joined
[15:52] *** kensanata left
[15:53] *** sena_kun joined
[15:55] *** Altai-man_ left
[16:00] *** rindolf left
[16:02] *** rindolf joined
[16:06] *** pmurias left
[16:08] *** mahmudov joined
[16:09] *** wamba joined
[16:17] *** pmurias joined
[16:18] *** kensanata joined
[17:24] *** jmerelo joined
[17:25] *** shred_alert joined
[17:37] *** sauvin left
[17:38] *** sauvin joined
[17:44] *** kensanata left
[17:45] *** kiwi_7 joined
[17:46] *** cpan-raku left
[17:47] *** cpan-raku joined
[17:47] *** cpan-raku left
[17:47] *** cpan-raku joined
[17:48] *** robertle left
[17:52] *** Altai-man_ joined
[17:55] *** sena_kun left
[17:58] *** patrickb joined
[18:05] <lizmat> .tell holyghost it's called Raku nowadays :-)

[18:05] <tellable6> lizmat, I'll pass your message to holyghost

[18:07] <shred_alert> Btw, Raku is called Perl 6 on Rosetta still.

[18:07] <shred_alert> Dunno who's in charge of changing that

[18:09] <chloekek> Also on glot.io

[18:09] <chloekek> And it‚Äôs a very old Rakudo too :P

[18:09] <chloekek> .oO(perl6do)

[18:15] <kiwi_7> no raku on glot.io, only perl6 v2018.04.1

[18:16] <kiwi_7> no raku on tio.run, only perl6 v2018.12

[18:17] <kiwi_7> both raku and perl6 on repl.it, v2019.03.1

[18:18] <kiwi_7> (but not listed at repl.it, you have to know/enter the URL: https://repl.it/languages/raku

[18:21] <perryprog> shred_alert, check out http://rosettacode.org/wiki/Category:Raku

[18:21] <perryprog> Seems like they don't plan on changing it.

[18:22] <perryprog> "In particular, here on Rosetta Code essentially all tasks are currently listed under Perl 6, and there are no immediate plans to change this."

[18:24] <shred_alert> :(  saed

[18:24] <thundergnat> I am an admin on Rosettacode. We have been holing off on doing a mass rename until there are a few Raku releases out so all (most) of the problems have been shaken out. Also, there are some 1145 pages that will need editing... Not looking forward to that. :-(

[18:24] <thundergnat> *holding

[18:24] <perryprog> Not to mention, what's the whole deal with image uploading?

[18:24] <perryprog> Is short circuit still MIA?

[18:25] <thundergnat> Mike Mol is very scarce for the past few years.

[18:25] <shred_alert> @thungergnat what do you mean by "editing"?

[18:25] <perryprog> Hm, yeah. Last contrib was 2018 March

[18:26] <thundergnat> He disabled image uploading as there were some with malicious code embedded and hasn't gotten around to implementing the advanced filtering or whatever he had planned. 

[18:27] <perryprog> Oh that's fun.

[18:27] <thundergnat> shred_alert: Every page that has a Perl 6 entry will need to be somewhat manually edited to do the rename. (The tasks are not automatically alphabetically sorted.) 

[18:28] <perryprog> Well anyway, cheers for helping out on there o7; RC has been a great resource for learning for me, and I'm sure many other people as well.

[18:28] <thundergnat> So, rename, edit all mentions of Perl 6 then move to the correct position in the page. 1150 times....

[18:30] <shred_alert> Most times I've said Raku(do) people react pretty well to the language. Saying Perl 6 doesn't go nearly as well.

[18:31] <shred_alert> It's dumb but that's just how it's been for me :/

[18:36] *** no-n left
[18:38] *** pmurias left
[18:39] <perryprog> Oh, how is Raku pronounced? Is it RA-KOO? (e.g. in enPR, r√§koÕûo or in IPA, /r…ëku/)

[18:40] <perryprog> That's how I've been saying it in my head, but I've never heard anyone actually say it out loud

[18:41] <Altai-man_> perryprog, "r" as in "right", "a" as in "archer", "k" as in "cat", "u" as "oo".

[18:48] *** stoned75 left
[18:51] <thundergnat> By the way, if there is anyone about that is familiar with cro services, and has a small amount of time, I would appreciate you taking a look at http://rosettacode.org/wiki/URL_shortener#Perl_6 and make sure I didn't do anything incredibly stupid.

[18:51] <thundergnat> It's my first attempt a using cro and I probably made some poor choices / assumptions.

[18:51] <thundergnat> As it's a fairly heavily viewed site, I'd like to make sure I haven't messed things up too bad. (nine?, jnthn? anyone>)

[18:53] *** stoned75 joined
[18:55] <Altai-man_> thundergnat, why not make $urlfile IO::Path and save `.IO` calls?

[18:55] <thundergnat> hmm. Good point

[18:55] <Altai-man_> also it is matter of taste, of course, but spurt/slurp are much nicer when used as subs... (at least in my taste, ok, admitting that)

[18:57] <Altai-man_> thundergnat, :host($host) can be written as just `:$host`, the same with port

[18:57] <Altai-man_> not sure if we need such a golf, of course

[18:58] <Altai-man_> is there really a need to introduce `retrieve` sub?

[18:58] <thundergnat> Hey, while I'm tweaking things, may as well make it idiomatic.

[18:58] <Altai-man_> thundergnat, why do you need to store `index` if it isn't used anywhere?

[18:59] <Altai-man_> ah, stop, I am a dummy

[18:59] <thundergnat> <retrieve> Possibly not, that was left from many iterations of trying things that didn't work. 

[19:00] <Altai-man_> cro usage looks fine

[19:01] <Altai-man_> also, this ??!! in `get -> $short` can be written as...

[19:01] <Altai-man_> `with %urls<url>{$short} { redirect :permanent, $_ } else { not-found }`

[19:02] <Altai-man_> add newlines matching your taste, of course

[19:02] <Altai-man_> no odd parens and looks more readable

[19:02] <Altai-man_> or maybe

[19:02] <Altai-man_> with %urls<url>{$short} -> $link { redirect $link... } else ...

[19:02] <Altai-man_> to clarify

[19:03] <Altai-man_> thundergnat, hope that helps. respect for writing those examples!

[19:03] <thundergnat> Sorry if I'm slow to respond, I'm editing in another window, 

[19:04] <thundergnat> Thanks, for the pointers!

[19:05] <Altai-man_> no problem, you are welcome. :)

[19:08] *** shred_alert left
[19:10] *** kiwi_7 left
[19:10] *** raiph joined
[19:10] <perryprog> Altai-man_, thank you.

[19:12] <raiph> Hi all

[19:12] <raiph> Is there a way to install a module version with zef that isn't the latest?

[19:12] <jmerelo> hey, raiph

[19:12] <tellable6> hey jmerelo, you have a message: https://gist.github.com/b8b3cd48494fabb83ac9eda559f06fa2

[19:13] <raiph> Hi jj :)

[19:13] <jmerelo> raiph: I want to say yes. Very likely, but the syntax escapes me

[19:14] <raiph> For example. JSON::Fast. I want to install 0.9.7 instead of the latest, 0.10.

[19:14] <Altai-man_> raiph, have you tried e.g. Foo:ver<foo>?

[19:15] <raiph> When I run zef install JSON::Fast:ver<0.9.7> I get these results:

[19:15] <jmerelo> .tell uzl[m] possibly "cruce", at least if we look at the railway or motorway sense. In a mechanical or electronical sense, juntura or uni√≥n

[19:15] <tellable6> jmerelo, I'll pass your message to uzl[m]

[19:16] <jmerelo> raiph: the problem is that, even if there's a way to specify that, there's no way to actually download it from the ecosystem. If it's in CPAN, it might, but I'm not sure either.

[19:17] <raiph> jj: it's not that simple, gimme a mo

[19:18] <jmerelo> raiph: it's never that simple. It's possible that, if there's a copy in the local cache, you can install that one using zef. But definitely impossible for those in the ecosystem, unless all versions are specified.

[19:20] <jmerelo> raiph: I mean specified in the META.list file.

[19:20] <raiph> Heh. You just answer the question I had ("what do u mean by...") :)

[19:21] <raiph> So I think you're saying the following is what you've experienced:

[19:21] <uzl[m]> m: say Dateish.new(:year<2016>);

[19:21] <camelia> rakudo-moar 09e66e504: OUTPUT: ¬´Cannot call Dateish.new with these named parameters: year‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:21] <uzl[m]> m: say DateTime.new(:year<2016>);

[19:22] <camelia> rakudo-moar 09e66e504: OUTPUT: ¬´2016-01-01T00:00:00Z‚ê§¬ª

[19:22] <jmerelo> uzl[m]: answered above. Would say that the correct words is "uni√≥n", in the context. 

[19:22] <uzl[m]> Given that roles can be punned, why can't I instatiate the role Dateish?

[19:23] <raiph> Uploaded file: https://uploads.kiwiirc.com/files/e8986d8307db3630cf1b52ad9cff03d3/pasted.txt

[19:23] <uzl[m]> jmerelo: Oh, great. Thanks, JJ!

[19:23] <jmerelo> raiph: you hae probably seen this, right? https://github.com/perl6/problem-solving/issues/72

[19:24] <jmerelo> raiph: you can do that if it's in CPAN. You can't if it's in GitHub

[19:24] <raiph> JJ: nope, that's the ticket, many thanks

[19:25] <jmerelo> raiph: also, isn't two different versions listed there? Its identiti says 0.10, but the installed version is 0.9.7?

[19:26] <jmerelo> raiph: so what's it's actually doing is picking up version 0.10 and installing it as 0.9.7? Is that so?

[19:26] <raiph> jmerelo: Indeed, that's what it says. I don't know what it means.

[19:28] <raiph> I'll investigate a bit more. I wanted to ask before investing more time.

[19:29] <jmerelo> raiph: good luck. And great to see you around. Happy new year.

[19:29] <raiph> jmerelo: Thanks for the info and filing the issue. Happy 2020s.

[19:29] <jmerelo> raiph++

[19:34] *** pmurias_ joined
[19:52] *** patrickb left
[19:53] *** sena_kun joined
[19:54] *** Altai-man_ left
[19:55] *** jmerelo left
[19:57] *** horsepatat left
[20:13] *** redable joined
[20:21] *** redable_ joined
[20:21] *** redable_ left
[20:22] *** rir joined
[20:24] *** redable left
[20:27] *** rir left
[20:34] *** kensanata joined
[20:36] *** redable joined
[20:37] *** redable left
[20:41] *** i_understand_now joined
[20:41] <i_understand_now> Hi. I understand now. "cpanm" is for installing a package (or library) on the system, while "carton" is for manage package (or library) dependancy of a project.

[20:41] <i_understand_now> It's that, or not ?

[20:41] <sena_kun> i_understand_now, do you want #perl channel or #raku channel?

[20:42] <i_understand_now> sena_kun both

[20:42] <sena_kun> i_understand_now, well... raku is a different language compared to perl (5), so cpanm and carton are not really related to it

[20:43] <i_understand_now> sena_kun I'm sorry

[20:43] <i_understand_now> The fact is that a lot of raku developper are experienced perl developer

[20:44] <sena_kun> no problem, just saying you'll probably have a better luck asking at #perl. there are indeed some perl devs around.

[20:46] <i_understand_now> OK. Thanks

[20:49] *** i_understand_now left
[21:00] *** raiph left
[21:05] *** rindolf left
[21:10] <stoned75> m: say Str

[21:10] <camelia> rakudo-moar 585227eec: OUTPUT: ¬´(Str)‚ê§¬ª

[21:10] <stoned75> m: say Cool

[21:10] <camelia> rakudo-moar 585227eec: OUTPUT: ¬´(Cool)‚ê§¬ª

[21:10] <stoned75> eval: say Cool

[21:10] <evalable6> stoned75, rakudo-moar 585227eec: OUTPUT: ¬´(Cool)‚ê§¬ª

[21:12] <stoned75> ah, the repl can give surprising result

[21:18] <stoned75> eval \(Str: 1); say Str

[21:18] <stoned75> eval: \(Str: 1); say Str

[21:18] <evalable6> stoned75, rakudo-moar 585227eec: OUTPUT: ¬´Label<Str>(at /tmp/F9nnRBNltf:1, '03\(08‚èè04Str03: 1); say Str')‚ê§¬ª

[21:19] <stoned75> eval: Str: 1; say Str

[21:19] <evalable6> stoned75, rakudo-moar 585227eec: OUTPUT: ¬´WARNINGS for /tmp/8wjPv_GXdR:‚ê§Label<Str>(at /tmp/8wjPv_GXdR:1, '0308‚èè04Str03: 1; say Str')‚ê§Useless use of constant integer 1 in sink context (line 1)‚ê§¬ª

[21:28] *** wamba left
[21:28] <SmokeMachine> AlexDaniel`: What mean `‚ñ¨‚ñ¨‚ñ∂ _ ‚ùö‚ö†‚ùö : ERROR Closing Link: ************` on Whateverable with DEBUGGABLE=1?

[21:28] <SmokeMachine> AlexDaniel`: what about `‚ñ¨‚ñ¨‚ñ∂ _ :hitchcock.freenode.net 461 * PASS Not enough parameters`?

[21:34] *** kensanata left
[21:52] *** Altai-man_ joined
[21:54] *** sena_kun left
[21:56] *** aluaces joined
[22:01] *** Doc_Holliwood left
[22:13] *** raiph joined
[22:23] <Geth> ¬¶ doc: 670a4df327 | Coke++ | doc/Language/operators.pod6

[22:23] <Geth> ¬¶ doc: remove duplicate word

[22:23] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/670a4df327

[22:23] <Geth> ¬¶ doc: f9d79000cc | Coke++ | doc/Language/community.pod6

[22:23] <Geth> ¬¶ doc: whitespace

[22:23] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f9d79000cc

[22:23] <Geth> ¬¶ doc: 41c2ca512b | Coke++ | doc/Language/operators.pod6

[22:23] <Geth> ¬¶ doc: semicolons required

[22:23] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/41c2ca512b

[22:28] *** AlexDaniel joined
[22:28] *** AlexDaniel left
[22:28] *** AlexDaniel joined
[22:29] <AlexDaniel> SmokeMachine: that's something about IRC itself

[22:29] <AlexDaniel> SmokeMachine: I think you trying to identify with an empty password or something like that

[22:30] <raiph> thundergnat: ($urlfile.IO.e and $urlfile.IO.f and $urlfile.IO.s) can be written ( $urlfile.IO ~~ :e & :f & :s ) or ( $urlfile.IO ~~ (:e :f :s) .all )

[22:30] <SmokeMachine> AlexDaniel: but why it works on my machine but it doesn't on aws?

[22:30] <AlexDaniel> SmokeMachine: different settings?

[22:30] <AlexDaniel> SmokeMachine: password is not set?

[22:30] <SmokeMachine> same container...

[22:30] <AlexDaniel> hmm

[22:30] <SmokeMachine> should I open any specific port?

[22:30] <AlexDaniel> SmokeMachine: I don't know

[22:35] *** Doc_Holliwood joined
[22:35] <SmokeMachine> AlexDaniel: I think you are right about the password: `‚ñ¨‚ñ¨‚ñ∂ _ :barjavel.freenode.net NOTICE redabletest *** Notice -- You need to identify via SASL to use this server`

[22:41] *** redable joined
[22:42] *** redable left
[22:43] *** silug left
[22:45] *** redable joined
[22:46] <SmokeMachine> AlexDaniel: when I run `docker service create --secret=github_token --name=red-bot fernandocorrea/red-bot-run` on my machine, it works... when I run the same command connected to my aws docker cluster (of 1 node) it doesn't work...

[22:46] <SmokeMachine> :(

[22:48] <SmokeMachine> red: say "OK"

[22:48] <redable> SmokeMachine, 

[22:48] <SmokeMachine> :(

[22:48] *** silug joined
[22:49] *** redable left
[22:51] *** aluaces left
[23:01] *** raiph left
[23:02] *** raiph joined
[23:14] *** chloekek left
[23:50] *** stoned75 left
[23:50] *** stoned75 joined
[23:53] *** sena_kun joined
[23:53] <jdv79> what does "Cannot invoke this object (REPR: Null; VMNull)" mean exactly?

[23:53] <jdv79> pretty sure the objects i built were not Null...

[23:55] *** Altai-man_ left
