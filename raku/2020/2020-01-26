[00:10] *** wamba left
[00:11] *** ToddAndMargo joined
[00:15] <[Coke]> in review - if you have a concern about TPF using slack, please bring it up with stuart.

[00:23] *** Kaeipi joined
[00:24] *** Kaiepi left
[00:30] <tyil> [Coke]: already done

[00:32] <Geth> ¦ problem-solving: ToddAndMargo assigned to jnthn Issue uint's confused with int's https://github.com/Raku/problem-solving/issues/154

[00:32] <ToddAndMargo> Hi,  I am the one that just posted 154.  I will stay on line for a bit to answer any questions.

[00:45] *** sena_kun left
[01:01] *** sena_kun joined
[01:25] *** hungrydonkey joined
[01:44] *** lucs left
[01:48] *** wildtrees joined
[02:02] *** mahmudov joined
[02:27] *** MasterDuke left
[02:28] *** wildtrees left
[02:42] <uzl[m]> m: class Person {has $!name; multi method name { $!name }; multi method name($name) { $!name = $name } }; my $p = Person.new; $p.name("Jai"); say $p.name;

[02:42] <camelia> rakudo-moar 37ddd5984: OUTPUT: «Jai␤»

[02:43] <uzl[m]> m: class Person {has $!name; multi method name { $!name }; multi method name($name) { $!name = $name } }; my $p = Person.new; $p.name("Jai"); say $p.name; my $m = $p.^find_method("name").candidates.grep(*.arity == 2).first; say $m.perl;

[02:43] <camelia> rakudo-moar 37ddd5984: OUTPUT: «Jai␤multi method name (Person: $name, *%_) { #`(Method|75793472) ... }␤»

[02:44] <uzl[m]> m: class Person {has $!name; multi method name { $!name }; multi method name($name) { $!name = $name } }; my $p = Person.new; $p.name("Jai"); say $p.name; my $m = $p.^find_method("name").candidates.grep(*.arity == 2).first; say $m.();

[02:44] <camelia> rakudo-moar 37ddd5984: OUTPUT: «Jai␤Too few positionals passed; expected 2 arguments but got 0␤  in method name at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:44] <uzl[m]> m: class Person {has $!name; multi method name { $!name }; multi method name($name) { $!name = $name } }; my $p = Person.new; $p.name("Jai"); say $p.name; my $m = $p.^find_method("name").candidates.grep(*.arity == 2).first; say $m()

[02:44] <camelia> rakudo-moar 37ddd5984: OUTPUT: «Jai␤Too few positionals passed; expected 2 arguments but got 0␤  in method name at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:44] <uzl[m]> m: class Person {has $!name; multi method name { $!name }; multi method name($name) { $!name = $name } }; my $p = Person.new; $p.name("Jai"); say $p.name; my $m = $p.^find_method("name").candidates.grep(*.arity == 2).first; say $m($p: )

[02:45] <camelia> rakudo-moar 37ddd5984: OUTPUT: «Jai␤Too few positionals passed; expected 2 arguments but got 0␤  in method name at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:45] *** sena_kun left
[02:45] <uzl[m]> m: class Person {has $!name; multi method name { $!name }; multi method name($name) { $!name = $name } }; my $p = Person.new; $p.name("Jai"); say $p.name; my $m = $p.^find_method("name").candidates.grep(*.arity == 2).first; say $m.($p: "Ale")

[02:45] <camelia> rakudo-moar 37ddd5984: OUTPUT: «Jai␤Too few positionals passed; expected 2 arguments but got 1␤  in method name at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:46] <uzl[m]> So how do I call a method after I've got the method object using find_method? Here I'm trying to get the getter name and then call it.

[02:59] *** sena_kun joined
[03:15] *** hungryd6 joined
[03:17] *** hungrydonkey left
[03:21] *** lucasb left
[03:57] *** ensamvarg joined
[04:15] *** gabiruh_ joined
[04:19] *** gabiruh left
[04:44] *** sena_kun left
[04:59] *** sena_kun joined
[05:24] <Geth> ¦ whateverable: 82c7e6b52c | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[05:24] <Geth> ¦ whateverable: Make linkable respond to .bots

[05:24] <Geth> ¦ whateverable: 

[05:24] <Geth> ¦ whateverable: People seem to expect this scary command to do something, so let's

[05:24] <Geth> ¦ whateverable: make one bot respond to it.

[05:24] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/82c7e6b52c

[05:24] <Geth> ¦ whateverable: 9d1e1b2fa1 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 5 files

[05:24] <Geth> ¦ whateverable: Rakufy as many things as possible

[05:24] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/9d1e1b2fa1

[05:27] *** bisectable6 left
[05:28] *** linkable6 joined
[05:28] *** bisectable6 joined
[06:02] *** angelds joined
[06:06] *** ToddAndMargo left
[06:08] *** testtesttest joined
[06:17] <Geth> ¦ whateverable: 9860b5e706 | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable.pm6

[06:17] <Geth> ¦ whateverable: Stop forcing tellable and evalable6 to join #perl6

[06:17] <Geth> ¦ whateverable: 

[06:17] <Geth> ¦ whateverable: There's now a +f flag, so hopefully things will get better soon.

[06:17] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/9860b5e706

[06:18] *** angelds left
[06:18] *** testtesttest left
[06:28] *** hungryd6 left
[06:32] *** hungrydonkey joined
[06:38] *** angelds joined
[06:42] *** angelds left
[06:43] *** angelds joined
[06:45] *** sena_kun left
[06:54] *** hungrydonkey left
[06:54] *** hungrydonkey joined
[06:59] *** sena_kun joined
[07:21] *** mniip joined
[07:22] *** rindolf joined
[08:04] *** mahmudov left
[08:16] *** mahmudov joined
[08:23] *** rindolf left
[08:29] *** xinming left
[08:30] *** rindolf joined
[08:31] *** xinming joined
[08:46] *** sena_kun left
[08:55] *** ensamvarg left
[08:59] *** sena_kun joined
[09:15] *** bisectable6 left
[09:15] *** evalable6 left
[09:15] *** tellable6 left
[09:15] *** bisectable6 joined
[09:16] *** tellable6 joined
[09:17] *** evalable6 joined
[09:17] *** angelds left
[09:24] *** xinming left
[09:25] *** xinming joined
[09:27] <cpan-raku> New module released to CPAN! Term::Choose::Util (1.3.1) by 03KUERBIS

[09:28] *** wamba joined
[09:34] *** ensamvarg joined
[09:45] *** domidumont joined
[09:45] *** MasterDuke joined
[10:12] *** stoned75 joined
[10:45] *** sena_kun left
[10:52] *** chloekek joined
[10:53] *** peter39 joined
[10:54] <peter39> hello

[10:55] <peter39> my $fromshelltime=@*ARGS[0];     /* how could i convert a string to an instant time value, so that i can calculate a duration ?

[10:57] <Geth> ¦ doc: 4bb9f81985 | (Stoned Elipot)++ | doc/Language/operators.pod6

[10:57] <linkable6> Link: https://docs.raku.org/language/operators

[10:57] <Geth> ¦ doc: Fix example's code vs its output

[10:57] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/4bb9f81985

[10:57] *** cpan-raku left
[10:59] *** sena_kun joined
[11:03] *** cpan-raku joined
[11:03] *** cpan-raku left
[11:03] *** cpan-raku joined
[11:03] *** peter39 left
[11:31] <AlexDaniel> m: say Instant.from-posix: 1580038269

[11:31] <camelia> rakudo-moar 37ddd5984: OUTPUT: «Instant:1580038306␤»

[11:31] <linkable6> (2020-01-25) https://github.com/rakudo/rakudo/commit/37ddd5984d Make sure Match has its own Int coercer

[11:31] <AlexDaniel> ahhh

[11:31] <AlexDaniel> okay

[11:31] <AlexDaniel> forgot about this

[11:31] <AlexDaniel> e: say 42

[11:31] <evalable6> AlexDaniel, rakudo-moar 392af08b0: OUTPUT: «42␤»

[11:31] <linkable6> (2020-01-26) https://github.com/rakudo/rakudo/commit/392af08b0b Save one Scalar allocation for each run/shell/QX

[11:42] <Geth> ¦ whateverable: dd42d70e60 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[11:42] <Geth> ¦ whateverable: Make linkable a bit more selective

[11:42] <Geth> ¦ whateverable: 

[11:42] <Geth> ¦ whateverable: Otherwise it starts to reply to any mention of rakudo commits, like

[11:42] <Geth> ¦ whateverable: those sent by eval bots.

[11:42] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/dd42d70e60

[11:43] *** linkable6 left
[11:44] *** linkable6 joined
[11:44] <AlexDaniel> e: say 42

[11:44] <evalable6> AlexDaniel, rakudo-moar 392af08b0: OUTPUT: «42␤»

[11:44] <AlexDaniel> m: say 42

[11:44] <camelia> rakudo-moar 392af08b0: OUTPUT: «42␤»

[12:01] *** mowcat joined
[12:19] *** Manifest0 left
[12:28] *** hungrydonkey left
[12:29] *** hungrydonkey joined
[12:30] *** hungrydonkey left
[12:30] *** hungrydonkey joined
[12:31] *** hungrydonkey left
[12:32] *** hungrydonkey joined
[12:32] <stoned75> commit: releases my $neighbors = ((-1, 0), (0, -1), (0, 1), (1, 0)); my $p = (2, 3); say $neighbors »>>+<<» ($p, *);

[12:32] <committable6> stoned75, ¦releases (40 commits): «((1 3) (2 2) (2 4) (3 3))␤»

[12:33] *** fluca1978 joined
[12:34] <fluca1978> why is this sub f { () if ! @_; @_ if @_; } generating the warning Useless use of () in sink context (line 1) while if I explicitly set the return it does not?

[12:35] <lizmat> m: () if 42

[12:35] <camelia> rakudo-moar 392af08b0: OUTPUT: «WARNINGS for <tmp>:␤Useless use of () in sink context (line 1)␤»

[12:35] <lizmat> the first statement does *not* return, it merely creates an empty list that is sunk, which causes the warning

[12:45] *** sena_kun left
[12:47] *** Kaiepi joined
[12:49] *** Kaeipi left
[12:50] *** Kaiepi left
[12:50] <fluca1978> but in the case of a function, that is the last expression potentially evaluated, that was my doubt about the warning

[12:50] *** Kaiepi joined
[12:50] *** mowcat left
[12:52] *** Manifest0 joined
[12:52] <cpan-raku> New module released to CPAN! Term::TablePrint (1.5.1) by 03KUERBIS

[12:55] <Kaiepi> greppable6, Scheduler

[12:55] <greppable6> Kaiepi, 118 lines, 15 modules: https://gist.github.com/4907290d14adf0a8af133787f4555ace

[12:59] *** sena_kun joined
[13:02] *** lucasb joined
[13:15] *** mahmudov left
[13:16] <Doc_Holliwood> .release

[13:16] <Doc_Holliwood> how was that command again?

[13:22] *** fluca1978 left
[13:23] <tobs> releasable6: status

[13:23] <releasable6> tobs, Next release will happen when it's ready. There are no known blockers. 0 out of 530 commits logged

[13:23] <releasable6> tobs, Details: https://gist.github.com/824bb5acc0e6f70517dad96a9a787285

[13:27] *** _jrjsmrtn joined
[13:36] *** kaare_ joined
[13:50] *** aborazmeh joined
[13:50] *** aborazmeh left
[13:50] *** aborazmeh joined
[14:03] *** kaare_ left
[14:08] *** pecastro joined
[14:24] <Geth> ¦ raku.org: hankache++ created pull request #141: More Perl 6 -> Raku changes

[14:24] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/pull/141

[14:27] *** wamba left
[14:35] *** chloekek left
[14:36] *** lucs joined
[14:38] <uzl[m]> How do I call a method after I've got the method object using find_method? For example:

[14:38] <uzl[m]> m: class Person {has $!name; multi method name { $!name }; multi method name($name) { $!name = $name } }; my $p = Person.new; $p.name("Jai"); say $p.name; my $m = $p.^find_method("name").candidates.grep(*.arity == 2).first; say $m.($p: "Ale")

[14:38] <camelia> rakudo-moar 332666941: OUTPUT: «Jai␤Too few positionals passed; expected 2 arguments but got 1␤  in method name at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:38] <uzl[m]> m: class Person {has $!name; multi method name { $!name }; multi method name($name) { $!name = $name } }; my $p = Person.new; $p.name("Jai"); say $p.name; my $m = $p.^find_method("name").candidates.grep(*.arity == 2).first; say $m.("Ale")

[14:38] <camelia> rakudo-moar 332666941: OUTPUT: «Jai␤Too few positionals passed; expected 2 arguments but got 1␤  in method name at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:46] *** sena_kun left
[14:47] *** mahmudov joined
[14:49] *** kensanata joined
[14:50] *** aborazmeh left
[14:51] <MasterDuke> m: class Person {has $!name; multi method name { $!name }; multi method name($name) { $!name = $name } }; my $p = Person.new; $p.name("Jai"); say $p.name; my $m = $p.^find_method("name").candidates.grep(*.arity == 2).first; say $p.$m("Ale")

[14:51] <camelia> rakudo-moar 332666941: OUTPUT: «Jai␤Ale␤»

[14:52] <MasterDuke> uzl[m]: ^^^

[14:58] *** kaare_ joined
[14:59] *** domidumont left
[15:00] *** sena_kun joined
[15:11] <uzl[m]> Thanks, MasterDuke! I don't know why I didn't bother to try the most obvious way 😅😅.

[15:14] *** kaare_ left
[15:16] *** titsuki joined
[15:35] <Doc_Holliwood> tobs: ty

[15:36] <Doc_Holliwood> so i have this module. it requires a rakudo build later than rakudo star. should i publish it now anyways? i have a version check in place.

[15:40] *** hungrydonkey left
[15:40] *** hungrydonkey joined
[15:41] *** hungrydonkey left
[15:42] *** hungrydonkey joined
[15:42] *** hungrydonkey left
[15:43] *** hungrydonkey joined
[15:43] *** hungrydonkey left
[15:43] <moritz> sure, publish it

[15:48] *** mahmudov left
[15:49] *** mahmudov joined
[15:49] *** thundergnat joined
[15:52] <thundergnat> Is there a way to determine the name of the calling routine to a wrapped subroutine?  

[15:53] <thundergnat> m: sub w (*@a) { print &?ROUTINE.name; nextsame() }; sub a ($a) { say $a }; &a.wrap(&w); a 'B';

[15:53] <camelia> rakudo-moar 332666941: OUTPUT: «wB␤»

[15:53] <thundergnat> I'm looking for aB above ^^

[15:55] <thundergnat> I've tried hunting through the backtrace and various CALLER and PARENT invocations but haven't been successful.

[15:56] <thundergnat> See https://gist.github.com/thundergnat/c74fc2753a8577830357593b237f152f for a larger example that may more clearly show what I'm trying to do.

[15:57] <Geth> ¦ doc: bdca0d5f2a | (Stoned Elipot)++ | doc/Language/operators.pod6

[15:57] <linkable6> Link: https://docs.raku.org/language/operators

[15:57] <Geth> ¦ doc: xref CALL-ME

[15:57] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/bdca0d5f2a

[16:03] <stoned75> :w

[16:11] *** epony left
[16:17] *** kensanata left
[16:19] *** kensanata joined
[16:22] *** gabiruh_ is now known as gabiruh

[16:36] *** kaare_ joined
[16:36] <Geth> ¦ raku.org: 30f1ee5c5f | (Naoum Hankache)++ | 4 files

[16:36] <Geth> ¦ raku.org: More Perl 6 -> Raku changes

[16:36] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/commit/30f1ee5c5f

[16:36] <Geth> ¦ raku.org: fd7d1537f0 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 4 files

[16:36] <Geth> ¦ raku.org: Merge pull request #141 from hankache/master

[16:36] <Geth> ¦ raku.org: 

[16:36] <Geth> ¦ raku.org: More Perl 6 -> Raku changes

[16:36] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/commit/fd7d1537f0

[16:37] *** kaare_ left
[16:37] *** kaare__ joined
[16:37] *** ayerhart joined
[16:40] *** kaare__ left
[16:46] *** sena_kun left
[16:51] *** kensanata left
[16:54] <robertle> is there a reason that https://raku.org/downloads mentions Rakudo Star 2019.03 when the files you get presented with then are 2019.11 ?

[16:59] <robertle> in the sense of: should end-users still prefer 2019.03 over .11?

[16:59] *** kaare_ joined
[17:00] *** kaare_ left
[17:00] *** sena_kun joined
[17:02] *** titsuki left
[17:03] <sjn> Hey, it's jnthn++'s birthday today! Happy birthday! :-D

[17:11] *** Doc_Holliwood left
[17:11] <El_Che> is there a good way to store a program configuration (e.g. paths, secrets, options) without the need of external modules?

[17:13] <El_Che> I have a pretty functional raku ZFS backup script (local backups of the server, automatic time base snapshotting, snapshot cleanup, sending the snapshots (e.g. from remote backups) to an external disk, etc

[17:13] <El_Che> but dependencies is not so nice for that kind stuff if I want to put it online

[17:15] <El_Che> I can of course do the slurping trick of putting cli paramaters in a file, but not very elegant

[17:16] *** chloekek joined
[17:19] *** wamba joined
[17:24] <tadzik> El_Che: what about CLI params defaulting to env vars?

[17:31] *** domidumont joined
[17:38] <AlexDaniel> robertle: that's rakudo star vs rakudo

[17:39] *** aborazmeh joined
[17:39] *** aborazmeh left
[17:39] *** aborazmeh joined
[17:46] *** SirBogman joined
[17:49] <SirBogman> I'm wondering whether I may have found a bug. This code only works the second time.

[17:49] <SirBogman> p6: my&f={@^m.rotor((1,0 X++@m div$^n)Zxx@m%$n,$n)};{say f([1,2,3,4,5],2) CATCH { default { say .message } } }say f([1,2,3,4,5],2)

[17:49] <camelia> rakudo-moar 332666941: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3v$^n)Zxx@m%$n,$n)};{say f([1,2,3,4,5],2)7⏏5 CATCH { default { say .message } } }say␤    expecting any of:␤        infix␤        infix stopper␤   …»

[17:49] <SirBogman> p6: my&f={@^m.rotor((1,0 X++@m div$^n)Zxx@m%$n,$n)};{say f([1,2,3,4,5],2); CATCH { default { say .message } } }say f([1,2,3,4,5],2)

[17:49] <camelia> rakudo-moar 332666941: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 032); CATCH { default { say .message } } }7⏏5say f([1,2,3,4,5],2)␤    expecting any of:␤        infix␤        in…»

[17:50] <SirBogman> p6: my&f={@^m.rotor((1,0 X++@m div$^n)Zxx@m%$n,$n)};{say f([1,2,3,4,5],2); CATCH { default { say .message } } };say f([1,2,3,4,5],2)

[17:50] <camelia> rakudo-moar 332666941: OUTPUT: «The iterator of this Seq is already in use/consumed by another Seq␤(you might solve this by adding .cache on usages of the Seq, or␤by assigning the Seq into an array)␤((1 2 3) (4 5))␤»

[17:50] <SirBogman> please ignore my first two attempts to type that

[17:54] *** mowcat joined
[17:59] <SirBogman> It seems like it could be a bug that the first time the function f is run, it produces an error that a Seq is already consumed, but all subsequent calls to f work as expected.

[18:00] *** Doc_Holliwood joined
[18:04] *** aborazmeh left
[18:14] <SirBogman> 6c: my&f={@^m.rotor((1,0 X++@m div$^n)Zxx@m%$n,$n)};{say f([1,2,3,4,5],2); CATCH { default { say .message } } };say f([1,2,3,4,5],2)

[18:14] <committable6> SirBogman, https://gist.github.com/fe4200d2acaca7c9d209753103d942db

[18:14] <SirBogman> bisect: my&f={@^m.rotor((1,0 X++@m div$^n)Zxx@m%$n,$n)};{say f([1,2,3,4,5],2); CATCH { default { say .message } } };say f([1,2,3,4,5],2)

[18:15] <bisectable6> SirBogman, Bisecting by output (old=2015.12 new=3326669) because on both starting points the exit code is 0

[18:15] <bisectable6> SirBogman, bisect log: https://gist.github.com/285991893013f795788c8078f67f1bee

[18:15] <bisectable6> SirBogman, (2017-05-05) https://github.com/rakudo/rakudo/commit/5e6b38789aeac32adc09c1977c8d2ac7251659f8

[18:18] *** ayerhart left
[18:18] *** ayerhart joined
[18:20] <SirBogman> Looks like the behavior used to be what I expected, but changed when a bug was fixed.

[18:21] <SirBogman> I can make a ticket.

[18:24] *** jmerelo joined
[18:35] <SirBogman> https://github.com/rakudo/rakudo/issues/3444

[18:38] *** zakharyas joined
[18:40] <SirBogman> 6c: my@a=[9,3,0,1,5,7,4,6,8,10,12,11,2,13];my&f={flat map {.min xx$_},@^m.rotor((1,0 X++@m div$^n)Zxx@m%$n,$n)};{say f(@a,5); CATCH { default { say .message } } };say f(@a,5)

[18:40] <committable6> SirBogman, https://gist.github.com/a34ac5f8f53aa42a600b822624a70f4e

[18:41] <Geth> ¦ doc: 729314aadb | (Stoned Elipot)++ | 2 files

[18:41] <Geth> ¦ doc: xref MRO

[18:41] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/729314aadb

[18:45] *** sena_kun left
[18:46] *** heth left
[18:46] *** heth joined
[18:52] *** mowcat left
[18:58] *** sena_kun joined
[19:06] *** SirBogman left
[19:08] *** wamba left
[19:09] *** mahmudov left
[19:15] *** |Sno| joined
[19:24] <cpan-raku> New module released to CPAN! Scalar::History (0.0.1) by 03HOLLI

[19:29] *** APic joined
[19:32] <jmerelo> Just submitted a couple of talks to TPCiH. And you should, too

[19:32] <tellable6> 2020-01-24T16:35:26Z #raku <tbrowder> jmerelo ^^^

[19:32] <jmerelo> .tell tbrowder thanks!

[19:32] <tellable6> jmerelo, I'll pass your message to tbrowder

[19:33] <jmerelo> .tell Kaiepi can you please submit your ideas through as a PR here? https://github.com/perl-foundation-outreach/gsoc-2020-ideas

[19:33] <tellable6> jmerelo, I'll pass your message to Kaiepi

[19:34] <jmerelo> Also, everyone: The call for Google Summer of Code projects and mentor is open. Please submit your ideas here, or simply tell me (or Makoto Nozaki) if you want to mentor https://github.com/perl-foundation-outreach/gsoc-2020-ideas

[19:42] <Geth> ¦ doc: 5f5476ea70 | (Stoned Elipot)++ | doc/Language/operators.pod6

[19:42] <linkable6> Link: https://docs.raku.org/language/operators

[19:42] <Geth> ¦ doc: homogenize pre/post inc/decrement operator refs

[19:42] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/5f5476ea70

[19:49] *** mahmudov joined
[19:57] *** Kaiepi left
[19:57] *** Kaiepi joined
[20:05] *** chloekek left
[20:08] *** domidumont left
[20:12] <cpan-raku> New module released to CPAN! LogP6::Writer::StackDriver (1.0.0) by 03RBT

[20:15] *** daxim left
[20:20] *** daxim joined
[20:26] *** veesh_ joined
[20:27] *** Kaiepi left
[20:27] *** Kaeipi joined
[20:27] *** veesh left
[20:27] *** veesh_ is now known as veesh

[20:29] *** veesh_ joined
[20:32] *** veesh left
[20:32] *** veesh_ is now known as veesh

[20:41] *** rindolf left
[20:44] *** daxim left
[20:45] *** sena_kun left
[20:46] *** Geth left
[20:47] *** Geth joined
[20:47] *** sno joined
[20:48] *** |Sno| left
[20:50] *** daxim joined
[20:54] *** kensanata joined
[20:59] *** sena_kun joined
[21:15] *** zakharyas left
[21:19] *** Itaipu joined
[21:55] *** kensanata left
[21:56] *** ensamvarg left
[22:06] *** cooper joined
[22:20] *** mowcat joined
[22:21] *** Itaipu left
[22:21] *** Itaipu joined
[22:44] *** sena_kun left
[22:46] <Geth> ¦ doc: c4c3ff53d6 | Coke++ | xt/duplicates.t

[22:46] <Geth> ¦ doc: blank lines reset duplicate word hunt.

[22:46] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/c4c3ff53d6

[22:47] *** titsuki joined
[22:49] <Geth> ¦ raku.org: 3681b45ce3 | (Salve J. Nilsen)++ (committed using GitHub Web editor) | source/whatever/index.html

[22:49] <Geth> ¦ raku.org: Update link to Raku syntax highlighter

[22:49] <Geth> ¦ raku.org: 

[22:49] <Geth> ¦ raku.org: Note: I can't test if the new raku module works with neovim, so I haven't updated that link.

[22:49] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/commit/3681b45ce3

[22:58] *** sena_kun joined
[23:19] *** moritz left
[23:19] *** wamba joined
[23:38] *** normanrockwell joined
[23:38] *** normanrockwell left
