[00:01] *** heth joined
[00:15] *** Kaiepi left
[00:16] *** Kaiepi joined
[00:18] *** ParsonsNose joined
[00:32] *** NODE left
[00:33] *** NODE joined
[00:45] *** sena_kun left
[01:00] *** sena_kun joined
[01:09] *** ParsonsNose left
[01:28] *** sarna left
[01:29] *** sarna joined
[01:32] *** cpan-raku left
[01:33] *** cpan-raku joined
[01:33] *** cpan-raku left
[01:33] *** cpan-raku joined
[01:37] *** charsbar left
[01:37] *** charsbar joined
[01:38] *** NODE left
[01:40] *** NODE joined
[01:44] *** wildtrees left
[01:52] *** lucasb left
[02:10] *** Doc_Holliwood left
[02:29] *** mahmudov left
[02:35] <cpan-raku> New module released to CPAN! Trait::Traced (0.2.0) by 03KAIEPI

[02:36] <Kaiepi> ^ adds support for tracing private methods, metamethods, and stash-related ops!

[02:45] *** sena_kun left
[03:00] *** sena_kun joined
[03:36] *** libertas_ joined
[03:44] *** ensamvarg joined
[04:27] <guifa2> Kaiepi++  

[04:32] <discord6> <cyanmide> Really like the grammars feature in Raku! Is there documentation for JVM interop? I work at a generally stodgy and uptight fortune 500 tech company where almost everything is java.

[04:45] *** sena_kun left
[04:55] <guifa2> cyanmide: I haven't played with it at all but here's some stuff http://jnthn.net/papers/2013-yapceu-jvm.pdf#page=42

[04:57] <uzl[m]> guifa2: I didn't see your "comment" before, glad you enjoyed it. Regarding ‚Äúmethod object: args‚Äù I guess it's just matter of what people feel more comfortable with but even when they've never used it, the Raku syntax is unified enough as to prevent any sort of surprises if they ever come across it. As Wall says, "Learn it once, use it many times".

[04:58] <uzl[m]> .tell lizmat I think I'm finally getting what you're saying about 'sub say' and 'Str.say'. I guess this wouldn't be the case for `is-prime` (for example) which is defined as the method 'is-prime' on an Int object and ultimately the sub 'is-prime' ends up calling the method 'is-prime' on the sub's argument.

[04:58] <tellable6> uzl[m], I'll pass your message to lizmat

[04:58] <uzl[m]> AFK

[04:59] *** sena_kun joined
[05:00] <guifa2> uzl[m]: I actually for a long time said "push @array: $items" without even realizing it wasn't as common.  The colon really helped identify the difference between the two

[05:01] <guifa2> (whereas push @array, $item to me feels a bit less clear the stark difference between @array and $item, although it's a common enough function and the different sigils kind of help)

[05:35] *** guifa2 left
[05:45] *** guifa left
[05:46] *** guifa joined
[05:51] <AlexDaniel> cyanmide: I don't think we have some good docs, but stackoverflow actually helps in this case: https://stackoverflow.com/questions/27156329/how-do-i-invoke-a-java-method-from-perl6

[06:17] *** Doc_Holliwood joined
[06:18] *** sauvin joined
[06:26] *** NODE left
[06:27] *** NODE joined
[06:44] *** sena_kun left
[06:49] *** abraxxa joined
[06:49] *** abraxxa left
[06:50] *** abraxxa joined
[06:55] *** abraxxa left
[06:55] *** abraxxa joined
[06:56] *** NODE left
[06:57] *** sena_kun joined
[06:57] *** NODE joined
[07:08] <El_Che> guifa: push-in would make the direction more obvious, but to verbose

[07:13] *** toddr left
[07:21] *** rindolf joined
[07:43] *** NODE left
[07:45] *** NODE joined
[07:47] *** stoned75 left
[07:56] *** rindolf left
[08:04] *** rindolf joined
[08:10] *** wamba joined
[08:11] <Geth> ¬¶ whateverable/master: 4 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++

[08:11] <Geth> ¬¶ whateverable/master: 39e36c4bf5 | Copyright years and whitespace

[08:11] <Geth> ¬¶ whateverable/master: 56b7f51fb4 | Convenience sub for fetching urls

[08:11] <Geth> ¬¶ whateverable/master: 7fa4c57180 | Fix last-test for non-bridged tests

[08:11] <Geth> ¬¶ whateverable/master: 75bb5fcb86 | New bot: Linkable

[08:11] <Geth> ¬¶ whateverable/master: review: https://github.com/Raku/whateverable/compare/6b42fe9c6e1b...75bb5fcb8675

[08:21] <sarna> hi, what would I use in raku in place of python's requests library?

[08:21] <sarna> basically I want to make simple web requests, check their status codes, simple stuff like that

[08:25] <tyil> sarna: https://github.com/croservices/cro-http this is a popular module for it, I believe

[08:28] <sarna> tyil: thanks

[08:45] *** sena_kun left
[08:47] *** chloekek joined
[08:59] *** abraxxa left
[09:00] *** abraxxa joined
[09:01] *** sena_kun joined
[09:02] *** AlexDaniel left
[09:09] *** abraxxa left
[09:09] *** abraxxa joined
[09:15] <cpan-raku> New module released to CPAN! Term::Choose (1.6.1) by 03KUERBIS

[09:15] <sarna> can I somehow rename an import? for example `use Foo::Bar::Baz as Baz`

[09:17] *** NODE left
[09:17] <chloekek> sarna: use Foo::Bar::Baz; my constant Baz = Foo::Bar::Baz

[09:17] <sarna> chloekek: thanks :)

[09:17] <chloekek> p6: my constant Foo = do { use NativeCall }; say Foo

[09:17] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´Nil‚ê§¬ª

[09:17] <chloekek> Bummer.

[09:18] <sarna> also, is there any way of putting a timeout on Cro's HTTP client? I can't find anything in the docs

[09:18] *** NODE joined
[09:20] <chloekek> sarna: react { whenever $client.get -> $response { ... }; whenever Promise.in(5) -> { done } }

[09:21] <chloekek> I guess :√æ

[09:21] <chloekek> Would be nice to have a timeout method on Promise

[09:23] <sarna> chloekek: yeah, I thought maybe there was a simpler way :(  thanks anyway

[09:25] <sarna> but even this way is fine actually!

[09:35] *** abraxxa left
[09:48] <Voldenet> in most languages something like this works: Promise.race([p, new Promise((_, f) => { setTimeout(() => f("timeout"), 5000); })]);

[09:49] <sarna> I ended up grepping for the groups I needed

[09:50] <sarna> Voldenet: isn't that what we're doing, essentially?

[09:53] *** abraxxa joined
[09:54] <Voldenet> essentially the logic is probably the same

[09:55] <sarna> I find raku version more readable, to be honest

[09:56] <Voldenet> m: sub anyof(|p) { my $l = Lock.new; my $p = Promise.new; for |p { .then( -> $r { $l.protect({ return if $p; if $r.status ~~ Kept { $p.keep($r.result); } else { $p.break($r.cause) } }) }) }

[09:56] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3); } else { $p.break($r.cause) } }) }) }7‚èè5<EOL>‚ê§¬ª

[09:56] <Voldenet> m: sub anyof(|p) { my $l = Lock.new; my $p = Promise.new; for |p { .then( -> $r { $l.protect({ return if $p; if $r.status ~~ Kept { $p.keep($r.result); } else { $p.break($r.cause) } }) }) }; $p }; say await anyof(Promise.in(5).then({ die "timeout" }), Promise.in(2).then({ "good" }))

[09:56] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´good‚ê§¬ª

[09:56] <Voldenet> m: sub anyof(|p) { my $l = Lock.new; my $p = Promise.new; for |p { .then( -> $r { $l.protect({ return if $p; if $r.status ~~ Kept { $p.keep($r.result); } else { $p.break($r.cause) } }) }) }; $p }; say await anyof(Promise.in(1).then({ die "timeout" }), Promise.in(2).then({ "good" }))

[09:56] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´An operation first awaited:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Died with the exception:‚ê§    timeout‚ê§      in block  at <tmp> line 1‚ê§‚ê§¬ª

[09:58] <Voldenet> Promise.anyof would be perfect for this, but for some reason it always returns `True`

[10:00] *** ensamvarg left
[10:01] <Voldenet> and `$response = await anyof(Promise.in(1).then({ die "timeout" }), $client.get)` has fewer redundant keywords

[10:03] *** patrickb joined
[10:10] <sarna> m: react { whenever Promise.in(1) -> { say 'hi'; done } }

[10:10] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´A react block:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Died because of the exception:‚ê§    Too many positionals passed; expected 0 arguments but got 1‚ê§      in block  at <tmp> line 1‚ê§‚ê§¬ª

[10:10] <sarna> why doesn't this work?

[10:11] <sena_kun> -> is redundant?

[10:11] <sena_kun> m: react { whenever Promise.in(1) { say 'hi'; done } }

[10:11] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´hi‚ê§¬ª

[10:11] *** xinming left
[10:11] <sena_kun> m: react { whenever Promise.in(1) -> $hehe { say $hehe; done } }

[10:11] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´True‚ê§¬ª

[10:12] <sarna> oh, I see :)

[10:12] <sena_kun> sarna: `->` before block sets its signature, and when no things specified, it means there are 0 args expected

[10:12] <sarna> right, it'd have to be -> $foo

[10:12] <sena_kun> when you don't specify signature, nothing is really expected

[10:12] <sena_kun> yeah

[10:13] *** xinming joined
[10:13] <sena_kun> whenever block is just like `if` (in a sense that it is an alike construction, I mean), there are no special syntax.

[10:15] <sarna> why doesn't `when [1;2;3] { say 'hi' }` work, if `when so [1;2;3] { say 'hi' }` works?

[10:15] <sarna> yeah, I still have problems with syntax sometimes :D  (well most of the time)

[10:15] <sarna> thanks for explaining :^)

[10:15] <sena_kun> how does your `given` look like?

[10:16] <sena_kun> post a line using m: here please. :)

[10:16] <sarna> ohh, you're supposed to use `when` only within `given` blocks?

[10:16] <sarna> I thought it was like unless :D

[10:16] <sena_kun> well, technically it isn't required, I just assumed you have a given too

[10:17] <sarna> m: when so [1;2;3] { say 'hi' }

[10:17] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´hi‚ê§¬ª

[10:17] <sarna> m: when [1;2;3] { say 'hi' }

[10:17] <camelia> rakudo-moar b291fc78a: ( no output )

[10:18] <sena_kun> sarna: https://docs.raku.org/syntax/when <-

[10:18] <sena_kun> I think there is an exact explanation present there

[10:18] <sena_kun> with examples of so and without so

[10:19] <sarna> oh dang

[10:27] <sarna> m: my @arr = [1;2;3]; given @arr { when so * { say @arr } }

[10:27] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´[1 2 3]‚ê§¬ª

[10:27] <sarna> I like how this flows :D  even though it's kinda verbose

[10:28] <sena_kun> why not `if @arr.elems { say @arr }`?

[10:29] <sarna> I'd prefer if `if @arr { say @arr }` worked :D

[10:29] <sarna> oh wait a second

[10:30] <sarna> I didn't show the important bit!

[10:30] <patrickb> .tell El_Che: I managed to set up a build setup that creates stuff for Mac, Win and Linux for the rakubrew thingy using CircleCI. It was a rather pleasant experience. I'd be willing to do the same for rakudo. But I don't want to stomp on the work you already did in that area. What do you think? Would a CircleCI setup be a good way forward?

[10:30] <sarna> m: my @arr = [1;2;3]; given @arr { when so * { say .raku } }

[10:30] <tellable6> patrickb, I'll pass your message to El_Che

[10:30] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´[1, 2, 3]‚ê§¬ª

[10:30] <sarna> sena_kun: now :)  I wanted the array to be the topic

[10:32] <sena_kun> m: my @a; if @a -> $_ { $_.say }

[10:32] <camelia> rakudo-moar b291fc78a: ( no output )

[10:32] <sena_kun> m: my @a = 1,2,3; if @a -> $_ { $_.say }

[10:32] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´[1 2 3]‚ê§¬ª

[10:32] <sena_kun> sarna: ^?

[10:32] <sarna> m: my @a = 1,2,3; if @a -> $_ { .say }

[10:32] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´[1 2 3]‚ê§¬ª

[10:32] <sarna> aaaa I love it!

[10:34] <sarna> by the way, why doesn't if take the array as the topic automatically? I tried printing what it takes, but I'm just getting (Any)..

[10:34] <sarna> m: if 1,2,3 { .WHAT }

[10:34] <camelia> rakudo-moar b291fc78a: ( no output )

[10:35] <sarna> m: if 1,2,3 { say .WHAT }

[10:35] <camelia> rakudo-moar b291fc78a: OUTPUT: ¬´(Any)‚ê§¬ª

[10:35] <sena_kun> `if` doesn't set topic

[10:35] <moritz> probably because it confuses people who have already set $_ on the outside

[10:35] <sena_kun> `with` does, but it does a different thing

[10:35] <moritz> for 1, 2, 3 { if $_ > 2 { .say } } # now you print True

[10:35] <evalable6> moritz, rakudo-moar b291fc78a: OUTPUT: ¬´3‚ê§¬ª

[10:35] <sarna> ohhh

[10:36] <sarna> I see now!

[10:36] <sarna> > The with statement is like if, but tests for definedness rather than truth, and it topicalizes on the condition

[10:36] <sarna> that's precisely what I wanted!!

[10:37] <tyil> raku provides again

[10:37] <sarna> :D

[10:45] *** sena_kun left
[10:52] *** ensamvarg joined
[10:52] *** antoniogamiz joined
[10:53] <Geth> ¬¶ doc: dumarchie++ created pull request #3184: Correct type graph of role Seq

[10:53] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3184

[10:53] <antoniogamiz> o/

[10:53] <antoniogamiz> easiest way to install raku language on Ubuntu?

[10:54] <tyil> apt install perl6 (but this will most likely be a very old version)

[10:54] <antoniogamiz> mm 

[10:54] <tyil> if it just has to be a single-user installation, rakudo-star

[10:55] <tyil> https://dist.tyil.nl/raku/rakudo-star/rakudo-star-2019.11-rc1.tar.gz

[10:55] <antoniogamiz> cool, that's the most recent version?

[10:55] <tyil> more recent than rakudo.org has, yes

[10:55] <tyil> but I'm not an official maintainer of r*

[10:56] <antoniogamiz> mm ok, thanks for the info :)

[10:56] <tyil> I haven't heard back from the official maintainers for about a month I think

[11:00] *** sena_kun joined
[11:01] <Geth> ¬¶ doc: 1b1fe100b2 | (Peter du Marchie van Voorthuysen)++ | 3 files

[11:01] <Geth> ¬¶ doc: Correct type graph of Seq

[11:01] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/1b1fe100b2

[11:01] <Geth> ¬¶ doc: bd8edb6850 | (Peter du Marchie van Voorthuysen)++ (committed using GitHub Web editor) | 3 files

[11:01] <Geth> ¬¶ doc: Merge pull request #3184 from dumarchie/#3163

[11:01] <Geth> ¬¶ doc: 

[11:01] <Geth> ¬¶ doc: Correct type graph of role Seq

[11:01] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/bd8edb6850

[11:05] <sarna> antoniogamiz: use rakudobrew!

[11:05] <sarna> https://github.com/tadzik/rakudobrew

[11:05] <sarna> works like a charm

[11:12] *** wamba left
[11:12] <tadzik> (:

[11:13] <antoniogamiz> mm i will try it! though i have already installed raku the other way :/

[11:14] <antoniogamiz> how can i uninstall it?

[11:14] <tadzik> it depends on how you isntalled it :)

[11:14] <antoniogamiz> https://raku.org/downloads

[11:14] <antoniogamiz> installing from source

[11:14] <antoniogamiz> should i delete rakudo folder only?

[11:16] <sarna> that should work, I think

[11:16] *** MasterDuke left
[11:19] <Geth> ¬¶ doc/use-ok-args: 0b46a21a2a | ven++ (committed using GitHub Web editor) | doc/Type/Test.pod6

[11:19] <Geth> ¬¶ doc/use-ok-args: Document passing arguments to `use-ok`

[11:19] <Geth> ¬¶ doc/use-ok-args: review: https://github.com/Raku/doc/commit/0b46a21a2a

[11:20] <antoniogamiz> rakudobrew build moar installs perl6/raku in my system, right?

[11:20] <lizmat> .

[11:20] <tellable6> hey lizmat, you have a message: https://gist.github.com/862ecf549735a6cd7d9b9b4d365001b7

[11:21] <sarna> antoniogamiz: yes

[11:21] *** rindolf left
[11:22] <Geth> ¬¶ doc: vendethiel++ created pull request #3185: Document passing arguments to `use-ok`

[11:22] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3185

[11:22] <sarna> antoniogamiz: you should also install zef (the raku package manager), it's explained in the docs

[11:22] <sarna> rakudobrew docs I mean

[11:25] <antoniogamiz> mmm i'm adding the line to my .profile file (as rakudobrew init says) but it's not working

[11:25] <antoniogamiz> if i run 'rakudobrew build moar', it outputs: "The shell hook required to use rakudobrew in 'env' mode and use the 'shell' command seems not to be installed.Run 'rakudobrew init' for installation instructions."

[11:28] *** rindolf joined
[11:30] <sarna> antoniogamiz: did you run `source ~/.profile` after adding the line there?

[11:31] <sarna> you have to run this or relog/reboot for it to work :)

[11:31] <antoniogamiz> yep i did it

[11:31] <sarna> hmm, that's weird then

[11:31] <antoniogamiz> i have added to my zshrc instead and it works now 

[11:32] <sarna> oh, you use zsh

[11:32] <sarna> zsh reads from `.zprofile` iirc

[11:33] <antoniogamiz> maybe that should be pointed out in the README

[11:35] *** wamba joined
[11:35] <sarna> pinging tadzik

[11:36] <sarna> there already are fish-specific instructions, so adding a note for zsh would be fine I think

[11:39] <tadzik> I no longer maintain rakudobrew and I have no idea what's going on there now :)

[11:39] <tadzik> try patrickb 

[11:39] *** xinming left
[11:40] <sarna> oh ok, sorry :^)

[11:41] <patrickb> antoniogamiz: There is a new version of rakudobrew (then called rakubrew) to be released Soon(TM). That version has a much improved installation experience (including shell detection). I'm actually working on it atm. Hopefully I'll manage to get a call for testers out later today. :-)

[11:42] <tadzik> there's also the old branch which does no shell shenanigans whatsoever, so should be more portable

[11:44] *** xinming joined
[11:45] <antoniogamiz> patrickb: nice, thanks for your work :)

[11:47] <antoniogamiz> mmm rakudobre build moar has finished

[11:47] <antoniogamiz> but perl6/raku command is not available 

[11:47] <antoniogamiz> do i have to update my PATH manually?

[11:48] <patrickb> antoniogamiz: rakubrew switch moar-2020.1 (or whatever you just built)

[11:49] <antoniogamiz> oh, good, everything's working now, thanks :)

[11:49] <Geth> ¬¶ doc: 0b46a21a2a | ven++ (committed using GitHub Web editor) | doc/Type/Test.pod6

[11:49] <Geth> ¬¶ doc: Document passing arguments to `use-ok`

[11:49] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/0b46a21a2a

[11:49] <Geth> ¬¶ doc: ce6b6416dd | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Type/Test.pod6

[11:49] <Geth> ¬¶ doc: Merge pull request #3185 from Raku/use-ok-args

[11:49] <Geth> ¬¶ doc: 

[11:49] <Geth> ¬¶ doc: Document passing arguments to `use-ok`

[11:49] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/ce6b6416dd

[11:50] *** aluaces left
[11:56] *** gabiruh joined
[12:01] <antoniogamiz> mm I think I have deleted Raku/Documentable unintentionally...

[12:04] <sarna> while browsing the source? :D

[12:05] <antoniogamiz> While deleting my own fork :(

[12:05] <antoniogamiz> I hope jmerelo has a copy in his machine...

[12:08] <antoniogamiz> I'm very sorry for that, i will try to remake all issues from the notifications..

[12:10] *** wamba left
[12:11] <sarna> happens to the best of us!

[12:13] *** wamba joined
[12:14] <antoniogamiz> If someone has notifications from perl6/Documentable please send them to [email@hidden.address]
[12:31] *** wamba left
[12:32] *** lucasb joined
[12:45] <tyil> antoniogamiz: I presume you dont have a local checkout of your fork?

[12:45] *** sena_kun left
[12:46] <antoniogamiz> aahh Github support solved it!

[12:46] <antoniogamiz> https://github.com/perl6/Documentable

[12:46] <antoniogamiz> everything restored :)

[12:46] <sarna> \\o/

[12:47] <antoniogamiz> sorry for all the trouble... it will not happen again..

[12:48] <sarna> antoniogamiz: don't be so hard on yourself! seriously :D

[12:48] <antoniogamiz> sarna: thanks :)

[12:49] <sarna> once I deleted my new config instead of the default one because the directory name was the same

[12:49] <sarna> had to recreate ~50 lines afterwards :D  and I spent like two days getting it right before

[12:50] <antoniogamiz> uoh sorry to hear that haha

[12:51] <tyil> always be careful when deleting

[12:51] <tyil> i would suggest keeping a local copy somewhere, then you can always just `cd` to the directory and `push` again

[12:51] <tyil> git repos are relatively small most of the time

[12:51] <sarna> github makes you type out the repo's name, I feel like it should make you type out the whole thing (namespaced)

[12:52] <rypervenche> And always backup your important data. :)

[12:52] <sarna> backups? what's that

[12:52] <tyil> sarna: it's called "wasted space" in my book

[12:52] <tyil> not having backups keeps you sharp

[12:52] <sarna> :D

[12:52] <sarna> living on the edge

[12:53] <sarna> we're the cool kids

[12:53] * tyil puts on sunglasses

[12:53] <tyil> aw yiss

[12:53] <tobs> but no amount of `git clone` will get you backup of github issues and stuff, right?

[12:53] <tyil> perhaps those aren't a great way to keep track of your stuff, then

[12:54] <Geth> ¬¶ ecosystem/JJ-patch-7: 39b84671a2 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[12:54] <Geth> ¬¶ ecosystem/JJ-patch-7: Move to new quarters

[12:54] <Geth> ¬¶ ecosystem/JJ-patch-7: review: https://github.com/Raku/ecosystem/commit/39b84671a2

[12:54] <Geth> ¬¶ ecosystem: JJ++ created pull request #480: Move to new quarters

[12:54] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/pull/480

[12:54] <tyil> if you can't keep a local copy of it, it's not a great method of keeping it at all, in my opinion

[12:55] <tyil> especially since it's owned by MS now, and (I hope) we all remember MS's general antics with regards to supporting their end users

[12:55] <antoniogamiz> tobs: yep, that was the problem

[12:55] <antoniogamiz> we had a local copy of the repo buy issues were lost...

[12:56] <sarna> there's a service for backing up issues, but it's not free

[12:56] <sarna> open source project idea anyone?

[12:56] <tyil> mailing lists have been free for decades iirc

[12:57] <tyil> and don't come with the necessity of creating an account at a non-free service

[12:57] <sarna> you could set up your own git instance as well, haskell did that

[12:57] <sarna> yeah

[12:57] <tobs> tyil: yes that's exactly what bothers me as well. Although I never actually cared enough to research if there are convenient ways to back up everything associated to the repo. It's certainly not as automatic as cloning the project itself...

[12:57] <antoniogamiz> sarna: if you contact github support they answer you in 5 minutes or so 

[12:57] <antoniogamiz> they have restored the problem whitout any trouble

[12:58] <sarna> antoniogamiz: yeah, github support was pretty good from what I've seen

[12:58] <tyil> sarna: I just have a bunch of directories in ~/.local/git, to store all my bare repos

[12:58] <tyil> and try to keep communication going through email where I can

[12:58] <Geth> ¬¶ ecosystem: 39b84671a2 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[12:58] <Geth> ¬¶ ecosystem: Move to new quarters

[12:58] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/39b84671a2

[12:58] <Geth> ¬¶ ecosystem: 35669e4aa5 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[12:58] <Geth> ¬¶ ecosystem: Merge pull request #480 from Raku/JJ-patch-7

[12:58] <Geth> ¬¶ ecosystem: 

[12:58] <Geth> ¬¶ ecosystem: Move to new quarters

[12:58] <sarna> btw - what's .local's purpose?

[12:58] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/35669e4aa5

[12:58] <tyil> ~/.local is a directory to keep other directories

[12:58] *** sena_kun joined
[12:59] <tyil> it contains a bin, a share, all the things you'd find in /usr/local, really

[12:59] <tyil> but it's owned by my standard user

[12:59] <tyil> allowing me to install things for a single user without ever reaching for root

[13:00] <sarna> neat, I have to use it more

[13:00] <sarna> because I've had issues with /usr/local before

[13:01] <sarna> what's the point of /usr/local if you still have to use root..

[13:01] <tyil> /usr is for things installed by your OS

[13:02] <tyil> /usr/local is for things installed by the system's admin

[13:02] <antoniogamiz> is there away to avoid typing "rakudobrew switch moar-" everytime i want to have the command available in my terminal?

[13:02] <tyil> ~/.local is for things installed by you

[13:02] <tyil> antoniogamiz: put it in your shell's config

[13:02] <antoniogamiz> (other than adding it to my .zshrc file, because if i do that then a message is printed everytime i open a terminal)

[13:02] <tyil> add a >/dev/null

[13:03] <antoniogamiz> oh right 

[13:04] <tyil> there's also https://gitlab.com/tyil/lonestar, but it's specifically for rakudo-star

[13:04] <tyil> (also mostly tested on gentoo, nothing else)

[13:05] *** veesh_ joined
[13:05] <sarna> ohh, TIL tyil

[13:05] <sarna> it makes sense though

[13:06] <tyil> it does :)

[13:07] <tyil> sarna: if you're interested https://home.tyil.nl/git/dotfiles/ this is how I set up my stuff

[13:07] <tyil> it may not be for the faint of heart, though

[13:07] <sarna> antoniogamiz: I have `eval "$(/home/bjan/.rakudobrew/bin/rakudobrew init Bash)"` in my .profile and I don't have to switch every time

[13:07] *** veesh left
[13:08] <sarna> pretty sure you can put the same in .zprofile with Zsh instead of Bash and it'll work

[13:08] *** veesh_ is now known as veesh

[13:08] <antoniogamiz> sarna: thanks, i will do that :D

[13:08] <sarna> tyil: nead, I'll check it out

[13:09] <sarna> I used to have a repo like this too, but it was always out of date

[13:09] <tyil> I know the problem

[13:09] <sarna> and/or not portable between my computers

[13:09] <tyil> this time I did `git init` in my homedir

[13:09] <tyil> so I see it immediately when it's out of sync

[13:09] <tyil> the portability is fixed by sticking to posix where I can, and having OS/distro specific stuff split into seperate files

[13:10] <tyil> it checks whether Im on a linux-based or bsd-based thing

[13:10] <tyil> and the name of the linux- or bsd-based thing

[13:10] <sarna> antoniogamiz: note there's my username in there, you want to change that :D

[13:10] <tyil> and loads a file with the right name

[13:10] <tyil> https://home.tyil.nl/git/dotfiles/tree/.config/shell/aliases.d here for instance, generic is always loaded, and the others load depending on what system I'm on

[13:11] <tyil> and other than that, always stick to posix defined behaviour everywhere you can

[13:12] *** zeylos left
[13:12] *** aluaces joined
[13:13] <antoniogamiz> sarna: I know :>

[13:13] *** antoniogamiz left
[13:19] *** antoniogamiz joined
[13:19] <antoniogamiz> where can i access the irc logs of this channel?

[13:19] <tyil>  https://colabti.org/irclogger/irclogger_log/raku  

[13:19] <antoniogamiz> ah it's a link at the beginning

[13:19] <antoniogamiz> thanks tyil√ß

[13:19] <tyil> :)

[13:20] *** antoniogamiz left
[13:21] <sarna> tyil: neato

[13:21] <sarna> there's like a manager for that too

[13:21] <sarna> https://yadm.io/

[13:22] <tyil> I've tried many of those things

[13:22] <tyil> but nothing works as well as posix sh and a little git

[13:22] <tyil> (in my experience, that is)

[13:23] <sarna> :D  yeah

[13:23] <sarna> posix sh is a can of worms though, iirc

[13:24] <tyil> only if you're inexperienced, but that goes for most things in tech

[13:24] <tyil> once you learn to handle posix sh, all your shell life will improve considerably

[13:24] <tyil> no longer will you need to worry about "how will it run on the macbooks of my colleagues", or "but what about that BSD server I have"

[13:25] <sarna> yeah but "Because sh is a specification, not an implementation, /bin/sh is a symlink (or a hard link) to an actual implementation on most POSIX systems."

[13:25] <sarna> and some shells conform better than others

[13:25] <tyil> you should avoid /bin/sh to begin with

[13:25] <sarna> what do you use instead?

[13:26] <tyil> `/usr/bin/env sh`

[13:26] <tyil> and if you stick to posix defined behaviour, all shells work quite well as /bin/sh

[13:26] <sarna> ah, neat

[13:26] <tyil> the problems seem to always occur once you bring in non-posix utils or extensions

[13:26] <sarna> thanks :^) will come in handy with my devops work

[13:27] <tyil> indeed it does (im also devops)

[13:29] *** zeylos joined
[13:30] *** melezhik left
[13:33] *** patrickb left
[13:37] *** patrickb joined
[13:56] *** Doc_Holliwood left
[13:57] <cpan-raku> New module released to CPAN! String::Fields (0.0.1) by 03ELIZABETH

[13:58] *** Poohmaan left
[14:05] *** veesh_ joined
[14:07] *** veesh left
[14:08] *** veesh_ is now known as veesh

[14:09] <Geth> ¬¶ doc: 55c4e98262 | Coke++ | doc/Type/Test.pod6

[14:09] <Geth> ¬¶ doc: whitespace

[14:09] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/55c4e98262

[14:12] *** veesh_ joined
[14:13] *** veesh left
[14:14] *** veesh_ is now known as veesh

[14:20] <Geth> ¬¶ doc: dumarchie++ created pull request #3186: Complete documentation of role Sequence

[14:20] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3186

[14:21] <[Coke]> the whitespace thing also fixed an example compilation issue

[14:24] *** patrickb left
[14:28] *** patrickb joined
[14:44] *** sena_kun left
[14:52] *** chloekek left
[14:58] *** sena_kun joined
[14:59] *** Doc_Holliwood joined
[15:14] *** rypervenche left
[15:17] *** rypervenche joined
[15:18] *** AlexDaniel joined
[15:18] *** AlexDaniel left
[15:18] *** AlexDaniel joined
[15:31] *** guifa2 joined
[15:37] *** guifa2 left
[16:05] *** wamba joined
[16:08] *** patrickb left
[16:10] *** antoniogamiz joined
[16:10] <antoniogamiz> o/

[16:10] <antoniogamiz> who can access CircleCi and travis to enable them in Raku/Documentable?

[16:11] <antoniogamiz> (it's been moved from perl6/Documentable to Raku/Documentable os it needs to be reconfigured)

[16:16] <Kaiepi> releasable6, status

[16:16] <releasable6> Kaiepi, Next release will happen when it's ready. 1 blocker. 0 out of 524 commits logged

[16:16] <releasable6> Kaiepi, Details: https://gist.github.com/c9de039ff574d0a7b2e8442b8586e298

[16:30] *** MasterDuke joined
[16:30] *** wamba left
[16:32] <Kaiepi> .tell tbrowder, i'm up for mentoring

[16:32] <tellable6> Kaiepi, I'll pass your message to tbrowder

[16:34] <tbrowder> great, let jmerelo know. he was one of our gsoc leaders last year

[16:34] <tbrowder> .tell jmerelo; ^^^

[16:34] <tellable6> tbrowder, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Tellable

[16:35] <tbrowder> .tell jmerelo ^^^

[16:35] <tellable6> tbrowder, I'll pass your message to jmerelo

[16:41] *** cpan-raku left
[16:45] *** sena_kun left
[16:48] *** cpan-raku joined
[16:48] *** cpan-raku left
[16:48] *** cpan-raku joined
[16:48] <cpan-raku> New module released to CPAN! Gnome::N (0.15.3.1) by 03MARTIMM

[16:59] *** sena_kun joined
[17:00] *** antoniogamiz left
[17:01] *** antoniogamiz joined
[17:09] *** MasterDuke left
[17:12] *** abraxxa left
[17:13] *** abraxxa joined
[17:16] <cpan-raku> New module released to CPAN! String::Fields (0.0.2) by 03ELIZABETH

[17:21] <antoniogamiz> lizmat: can you enable/disable repositories in CircleCI/Travis in the Raku org?

[17:22] <lizmat> I can try

[17:23] <antoniogamiz> then please try with Raku/Documentable 

[17:24] *** abraxxa left
[17:25] <lizmat> antoniogamiz so I'm at Integrations & services, what should I do ?

[17:25] <antoniogamiz> mm enable Raku/Documentable repository 

[17:25] <antoniogamiz> there should be a list of available repositories

[17:26] <lizmat> Travis already has access to all Raku repositories

[17:27] <lizmat> I don't see any CircleCI stuff

[17:27] <antoniogamiz> and CircleCI?

[17:27] <antoniogamiz> CircleCI is another service like travis

[17:27] <antoniogamiz> it's in a different page

[17:28] <lizmat> looks like the webhooks are already in place

[17:28] <antoniogamiz> mmm then why https://travis-ci.org/perl6/Documentable works but not Raku/Documentable? mm

[17:29] <lizmat> perhaps Travis doesn't know about the move yet

[17:29] <lizmat> that was today, right?

[17:29] <antoniogamiz> yep

[17:29] <lizmat> it only reads the repo once a day afaik

[17:29] <antoniogamiz> mmm then i will wait to see if it gets fixed

[17:29] <antoniogamiz> thanks for your help :)

[17:30] <lizmat> so good chance it'll all be ok tomorrow

[17:30] <lizmat> you're welcome

[17:38] *** xinming left
[17:40] *** xinming joined
[17:42] *** abraxxa joined
[17:46] <cpan-raku> New module released to CPAN! Trait::Traced (0.2.1) by 03KAIEPI

[17:52] <Kaiepi> ^ removes a lot of overhead from tracing

[17:56] *** entonian left
[18:17] *** antoniogamiz left
[18:20] *** wildtrees joined
[18:33] *** abraxxa left
[18:44] *** sena_kun left
[18:47] *** domidumont joined
[19:00] *** sena_kun joined
[19:11] *** kensanata joined
[19:13] *** mdmkolbe joined
[19:20] *** xinming left
[19:21] *** xinming joined
[19:36] *** domidumont left
[19:40] <cpan-raku> New module released to CPAN! PDF::Class (0.3.9) by 03WARRINGD

[19:44] *** entonian joined
[19:51] *** mdmkolbe left
[20:02] <cpan-raku> New module released to CPAN! ProcStats (0.3.0) by 03LEMBARK

[20:17] *** ingy joined
[20:19] <ingy> I want to start redoing some of my published perl6 stuff to raku. Need to know basic conventions like file extensions, binary name, etc. What's a good starting point URL or FAQ?

[20:23] <rypervenche> ingy: I believe this is what you're looking for: https://github.com/Raku/problem-solving/blob/master/solutions/language/Path-to-Raku.md

[20:23] <ingy> *click*

[20:23] <[Coke]> ingy: hio

[20:24] <rypervenche> I have to say, it's very cool to see many of the people that I've watched in Raku talks here in the IRC channel.

[20:28] <ingy> https://raku.org/downloads seems to be out of date. referring to 2019.03 release

[20:32] <rypervenche> ingy: That's Rakudo Star. The rakudo compiler is at 2019.11 currently, although there should hopefully be a new release in the next few days. They're working on an issue at the moment.

[20:33] <rypervenche> I *think* Rakudo Star will be updated as well after the 2020.01 release of rakudo, so it will be available for FOSDEM, but don't quote me on that. :)

[20:34] <ingy> :)

[20:35] <rypervenche> I'm very new to the community and language, so I can only say what I've seen in the past couple of weeks.

[20:36] *** stoned75 joined
[20:36] <[Coke]> We're close to the next compiler release, no?

[20:39] <lizmat> yes, afaik

[20:39] <ingy> is there any reason to call perl "Perl 5" anymore?

[20:39] <lizmat> I don't think so, I've been referring to Perl 5 as "Perl" for some months now

[20:40] <[Coke]> lizmat++

[20:40] <ingy> I'll take it slow and ask here when I run into a contentious naming situation

[20:41] <ingy> how many modules have switched from .pm6 extensions so far?

[20:41] <lizmat> none, because we would need a Rakudo Star out there that supports the new extensions

[20:42] <rypervenche> I think we're waiting until 6.e before module extensions get changed?

[20:42] <lizmat> and we don't have that yet: 2020.01 would be the first

[20:42] <lizmat> HEAD supports the new extensions already

[20:42] <lizmat> but not everybody's running aHEAD   :-)

[20:43] <ingy> glad I asked

[20:43] <ingy> the `raku` bin name is switchable now though, right?

[20:45] *** sena_kun left
[20:45] <lizmat> the 2019.11 compiler release supports that

[20:45] <lizmat> but creating a local alias should work with older versions

[20:49] <ingy> I guess I'll wait for a star release

[20:52] <rypervenche> Is it possible to have a variable interpolated inside of a \c[ ] ?

[20:53] *** mdmkolbe joined
[20:53] <mdmkolbe> (Sorry, I had connection issues, my question still stands)

[20:53] <lizmat> ingy: that's probably wise... it should only be a week or so

[20:58] <rypervenche> mdmkolbe: Could you please resend your question?

[20:59] *** sena_kun joined
[21:02] <El_Che> ingy: what's your OS?

[21:02] <tellable6> hey El_Che, you have a message: https://gist.github.com/c4a5e9b22a7fb653f12a3e9150156dcb

[21:06] <mdmkolbe> I'm trying to get perl6-js to work with the `selenium-webdriver` node package.  I'm getting the following error: https://gist.github.com/adamsmd/1bb704e793704cf1e8266574044e6456  I don't know whether this is a bug in perl6-js or if I'm just using it wrong.

[21:14] *** rindolf left
[21:21] <ingy> El_Che: why do you ask?

[21:22] <ingy> I'm not having trouble using raku. I want to update raku software for people to use successfully. Thus I'm confused as to why my OS matters here...

[21:24] <cpan-raku> New module released to CPAN! Trait::Traced (0.2.2) by 03KAIEPI

[21:25] <El_Che> ingy: because I provide linux packages of the latest releases

[21:26] <El_Che> ingy: I don't provide macos or windows packages (yet)

[21:26] <ingy> well I probably just installed your linux code. thanks

[21:26] <El_Che> np

[21:26] <ingy> but that has nothing to do with my queries here today :)

[21:27] <El_Che> no, it's only related to your question about star providing the 2019.03 release

[21:28] <ingy> I just want to know when new things like `/usr/bin/env raku` and `.rakumod` become ubiquitous.

[21:28] <ingy> since star doesn't seem to do either yet, I'll wait until it does

[21:29] *** stoned75 left
[21:31] *** kensanata left
[21:32] *** cpan-raku left
[21:33] *** cpan-raku joined
[21:33] *** cpan-raku left
[21:33] *** cpan-raku joined
[21:36] <Geth> ¬¶ doc/master: 4 commits pushed by (Peter du Marchie van Voorthuysen)++

[21:36] <Geth> ¬¶ doc/master: 63ffeae8ed | Complete documentation of role Sequence

[21:36] <Geth> ¬¶ doc/master: d8062cfe90 | Document classes implementing Sequence

[21:36] <Geth> ¬¶ doc/master: 2b2eb6f3f9 | Rephrase a sentence.

[21:36] <Geth> ¬¶ doc/master: 6d573e760c | Merge pull request #3186 from dumarchie/#3163

[21:36] <Geth> ¬¶ doc/master: review: https://github.com/Raku/doc/compare/55c4e98262ae...6d573e760cf4

[21:37] *** Ven_de_Thiel joined
[21:37] <Ven_de_Thiel> jnthn: turns out named arguments are "fun" to emulate in JS :-)

[21:41] *** mdmkolbe left
[21:45] <El_Che> ingy: in case you used a raku-pkg pkg, a raku syslink is provided. Rakumod need still the next release

[21:49] *** stoned75 joined
[22:25] <jnthn> Ven_de_Thiel: hah, yes...I'd not thought of that :)

[22:37] *** mahmudov joined
[22:44] *** Ven_de_Thiel left
[22:44] *** sena_kun left
[23:00] *** sena_kun joined
[23:05] *** wamba joined
[23:14] *** Kaiepi left
[23:14] *** Kaiepi joined
[23:47] *** MasterDuke joined
[23:54] *** Ven_de_Thiel joined
[23:56] <Ven_de_Thiel> jnthn: I have done horrible things, but named args should work now

[23:57] <jnthn> \o/

[23:58] <jnthn> Any other interesting semantic mismatches?

