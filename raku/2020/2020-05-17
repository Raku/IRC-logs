[00:01] *** MilkmanDan left
[00:07] *** Black_Ribbon joined
[00:41] *** guifa2_ left
[00:58] *** lichtkind left
[01:05] *** konvertex left
[01:42] *** Xliff joined
[01:42] <Xliff> .

[01:42] <tellable6> 2020-05-16T18:42:16Z #raku <tigerpaws> Xliff: I received an answer from the J language people, end there's no problem inlining J into raku. I don't know how familiar you are with array langauges, but J would give us a fairly solid array langauge. 

[01:42] <tellable6> 2020-05-16T19:52:40Z #raku-dev <nine> Xliff: I thought you were already pretty close before you stopped? Can't remember a need for shuffling around anything

[01:44] <Xliff> .tell tigerpaws OK, then. I will look into J!

[01:44] <tellable6> Xliff, I'll pass your message to tigerpaws

[01:46] <tigerpaws> Xliff:  J is Iverson's replacement for APL. It's current;ly used mostly in mathematical and financial circles. It's arcane like APL. I grew up on APL, so it's not entirely foreign to me. 

[01:46] <Xliff> LOL! I studied APL in summer camp one year.

[01:47] <Xliff> tigerpaws: Did the J people best suggest how to inline J into Raku?

[01:48] <tigerpaws> Xliff: you'll like J, then. Their site is a little hard to get along with, though. I'm keeping J as a seconf project after tensorflow, although it will be much easier. 

[01:48] <Xliff> Ah. You will need help with Grammars then. Writing Slangs can be tricky.

[01:49] <Xliff> See https://github.com/tony-o/perl6-slang-sql for an example of a slang.

[01:49] <Xliff> If successful, you could then write "J <j expr>" in Raw raku code. How we get it to evaluate is another story.

[01:49] <Xliff> I will look into the J source, soon.

[01:53] <tigerpaws> Xliff: yes, it's already been done for R, so we can follow that example. (as well as a few other things, like Excel, VBScript, etc): https://code.jsoftware.com/wiki/Interfaces#J_as_Server

[01:54] <tigerpaws> Xliff: From the articles I've seen, it appears to be quite fast.  Of course, it's all in C, so thaty would help. 

[02:01] <Xliff> tigerpaws: Hmmm... that looks like J is being used to call the external language.

[02:01] *** chloekek left
[02:01] <Xliff> Wouldn't we want to evaluate J in Raku?

[02:02] <Xliff> Oh. JFromR

[02:02] <Xliff> Oops... JServer4R

[02:02] <tigerpaws> Xliff: Lopok at J as server, not client. 

[02:02] <tigerpaws> oop, 'look' 

[02:03] <tigerpaws> Xliff: Sorry, I'm having wine and curating my King Crimson digital collection... 

[02:03] <Xliff> Heh!

[02:04] <Xliff> Ooh! King Crimson. Been a while.

[02:04] <Xliff> Um. Looks like jsoftware.com is having 404 issues.

[02:07] <tigerpaws> Xliff: Yeah, I've had a few issues. But it's pretty late on the weekend, they may have gone to maintenance. 

[02:08] <Xliff> OK. I have a git clone of the J software. Looking for the addon.

[02:14] *** aborazmeh left
[02:17] <cpan-raku> New module released to CPAN! Sparrowdo (0.1.5) by 03MELEZHIK

[02:19] <tigerpaws> Xliff: I saw it earlier, and I can't find it anymore, but I thing the interface is in jsource/dllsrc/jdll.h

[02:21] <tigerpaws> Xliff: I remember that the interface was basically a "call data conversion; then call repl for the expression" type of interface. So it was pretty simple. 

[02:21] <Xliff> Yeah, but I am going to need the linux equivalent.

[02:22] <Xliff> And there are a lot of Microsoftisms in jdll.h

[02:23] <Xliff> tigerpaws: How are you reaching the J folks?

[02:24] <Xliff> I put in a bug report on the compilation issue I encountered. Hopefully they will get back to me this weekend.

[02:24] <tigerpaws> I emailed them. Eric Iverson (Ken's son) responded, and told me that further questions should be adressed to the programmers forum. 

[02:27] <tigerpaws> Xliff: Yeah, the fact that they are interfaced into Excel and VBscript is a sort of hint. But J runs fine on linux, I've been running it on my fedora sytem here, so it should be all right. 

[02:28] <tigerpaws> Xliff: you need to remember that APL was primarily used on IBM mainframes, I guess that's moved over to Microsoft, the inheritor of IBM commercial clients. 

[02:29] <Xliff> OK. Well, when I get word back on the compiler bug I can continue plugging at it. I will look up the programmer's forum.

[02:43] <tigerpaws> Xliff: The addon for R is at : https://github.com/jsoftware/stats_jserver4r

[02:43] <Xliff> Thanks!

[02:47] <tigerpaws> Ity's basically trivial:  Jinit, then Jset/Jget to set/get variables, the Jdo or jexec. That's it. 

[02:48] *** aborazmeh joined
[02:48] *** aborazmeh left
[02:48] *** aborazmeh joined
[02:48] <tigerpaws> Xliff: I'mn not sure of the difference between Jdo and jexec, but that shouldn't be that hard to figure out. 

[02:50] <Xliff> Yep! Was hoping to bend this to my will....

[02:50] <Xliff> So then to get Inline::J working, we can just use Inline::SQL as an example. 

[02:50] <Xliff> And instead of "sql", we can use "jcode"

[02:51] <Xliff> Then run that through Jexec and see what we get.

[02:51] <Xliff> Probabjy will want to maybe even mirror it.

[02:51] <Xliff> So the entire set will be keywords.

[02:55] <tigerpaws> Xliff: That's pretty much what I thought. It looks easy enough. Easier than learning J, in any case.

[02:56] <tigerpaws> Xliff: but for a mathematician, it could allow competing with R (or even using the J->R connection, so we get R for free)

[02:58] *** aborazmeh left
[03:26] *** kybr left
[03:30] <Xliff> tigerpaws++

[03:32] <tigerpaws> Xliff: I haven't been so excited for years until I started into raku!  I'm pleased to help. In fact, I bought the domain rakudo.ca. I'm thinking of teaching/consulting here in Montreal, where perl is pretty much dead, as far as I can tell 

[03:33] <tigerpaws> Xliff: maybe that's the wine talking, but I feel very comfortable in the raku community. 

[03:33] <Xliff> Excellent! I'm glad you found us!~

[03:34] <Xliff> I feel the same way. I've been here since 2016. Started seriously working with Raku full time in 2018.

[03:34] *** Sgeo joined
[03:34] <Xliff> (That's full time for projects, not a $dayJob... not yet, anyways)

[03:35] <Xliff> If you have some time, I'd appreciate it if you took a look at my projects and offered comments/criticism/thoughts!

[03:48] <tigerpaws> Xliff: will do. Right now, I am retired. However, I have a job interview Monday, and another one that's been postponed. I will only take a job if it's really fun. I've wanted to get into Kubernetes, and I'm very picky. 

[03:49] <Xliff> tigerpaws: Oh! Good luck!

[03:49] <tigerpaws> Looking for a job when you don't need one is much more fun. 

[03:49] <Xliff> Heh.

[03:52] <tigerpaws> I've done everything from APL in the early 70's, to working on the APL interpreter for a mainframe, then had my own companies doing  satellite image processing, .. and more. I sold my shares in my patest company to my son, and thought I would retire. 

[03:53] <tigerpaws> Go bored. Now I'm back! Can't stay quiet. 

[03:53] <Xliff> :)

[03:54] <Xliff> Well, I am off to read a book and then bed.

[03:54] <Xliff> Have a good night!

[04:11] *** MilkmanDan joined
[04:26] <tigerpaws> Xliff: same with me. Good might!

[04:37] *** brtastic joined
[04:47] <Geth> ¦ doc/glossary-rearrangement: 4ba2d14723 | (Sizhe Zhao)++ | doc/Language/glossary.pod6

[04:47] <Geth> ¦ doc/glossary-rearrangement: Make glossary entries consistent

[04:47] <Geth> ¦ doc/glossary-rearrangement: review: https://github.com/Raku/doc/commit/4ba2d14723

[04:48] <Geth> ¦ doc: Prince213++ created pull request #3412: Make glossary entries consistent

[04:48] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3412

[04:48] *** guifa2 joined
[05:10] *** Prince213 joined
[05:11] *** Prince213 left
[05:31] *** guifa2 left
[05:36] *** xinming left
[05:37] *** xinming joined
[05:43] *** Xliff left
[06:27] *** pilne left
[06:29] *** rindolf joined
[06:31] *** guifa2 joined
[06:31] *** astronavt joined
[06:32] *** astronavt left
[06:34] *** astronavt joined
[06:35] *** guifa2 left
[06:36] *** dmc00 left
[06:36] *** astronavt left
[06:38] *** astronavt joined
[06:39] *** astronavt left
[06:40] *** astronavt joined
[06:42] *** astronavt left
[06:46] *** astronavt joined
[07:21] *** Sgeo left
[07:22] *** Sgeo joined
[07:26] <Geth> ¦ doc/glossary-rearrangement: f5d62535eb | (Sizhe Zhao)++ | doc/Language/glossary.pod6

[07:26] <Geth> ¦ doc/glossary-rearrangement: Fix link positions & add missing links

[07:26] <Geth> ¦ doc/glossary-rearrangement: review: https://github.com/Raku/doc/commit/f5d62535eb

[07:38] <Geth> ¦ doc: 4ba2d14723 | (Sizhe Zhao)++ | doc/Language/glossary.pod6

[07:38] <Geth> ¦ doc: Make glossary entries consistent

[07:38] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/4ba2d14723

[07:38] <Geth> ¦ doc: f5d62535eb | (Sizhe Zhao)++ | doc/Language/glossary.pod6

[07:38] <Geth> ¦ doc: Fix link positions & add missing links

[07:38] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/f5d62535eb

[07:38] <Geth> ¦ doc: 38632b78bf | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/glossary.pod6

[07:38] <Geth> ¦ doc: Merge pull request #3412 from Raku/glossary-rearrangement

[07:38] <linkable6> Link: https://docs.raku.org/language/glossary

[07:38] <Geth> ¦ doc: 

[07:38] <Geth> ¦ doc: Make glossary entries consistent

[07:38] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/38632b78bf

[08:01] *** hankache joined
[08:02] <hankache> hello #raku

[08:03] *** sena_kun joined
[08:06] *** sarna joined
[08:06] <sarna> o/

[08:07] <hankache> hi sarna

[08:07] <sarna> henlo

[08:07] *** Prince213 joined
[08:08] *** Prince213 left
[08:08] *** Prince213 joined
[08:13] <Prince213> hello

[08:14] *** cpan-raku left
[08:14] *** cpan-raku joined
[08:14] *** cpan-raku left
[08:14] *** cpan-raku joined
[08:19] <hankache> hi Prince213

[08:22] <Geth> ¦ doc: 1769d5741e | (JJ Merelo)++ | doc/Language/grammars.pod6

[08:22] <Geth> ¦ doc: Not really needed and makes it confusing.

[08:22] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1769d5741e

[08:22] <Geth> ¦ doc: fe0541202b | (JJ Merelo)++ | doc/Language/grammars.pod6

[08:22] <Geth> ¦ doc: Clarifies also this sentence, which seems clearer.

[08:22] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/fe0541202b

[08:22] <Geth> ¦ doc: 5a3664fcfc | (JJ Merelo)++ | doc/Language/grammars.pod6

[08:22] <Geth> ¦ doc: Clarifies the difference between sub make and method make.

[08:22] <linkable6> Link: https://docs.raku.org/language/grammars

[08:22] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/5a3664fcfc

[08:22] *** jjmerelo joined
[08:23] *** domidumont joined
[08:25] *** Altai-man_ joined
[08:28] <Prince213> do we have a release schedule for rakudocs/rakudocs.github.io? It has been long since it was last updated

[08:28] *** sena_kun left
[08:31] *** konvertex joined
[08:33] <hankache> I believe this should become automated. Ping jjmerelo

[08:34] <jjmerelo> rakudocs.github.io was an interim solution while we had the new domains

[08:34] <jjmerelo> I just updated today the documents at https://docs.raku.org

[08:35] <jjmerelo> And yes, it should be automated.

[08:35] <jjmerelo> For the time being, I'm doing it manually from time to time.

[08:37] <hankache> Prince213 as jjmerelo said docs.raku.org is the one being updated

[08:37] <hankache> jjmerelo++

[08:37] <jjmerelo> Maybe I should post something there... or actually update it

[08:37] <Prince213> How can users get offline copies?

[08:38] <Prince213> Without using p6doc

[08:40] <MasterDuke> there is a single-page version of the docs

[08:40] <MasterDuke> but i don't remember the link

[08:40] <Prince213> you mean docs.raku.org/perl6.html ?

[08:41] <jjmerelo> MasterDuke that's deprecated. Prince213 there's an epub version, but it's not been updated for some time. Let me see if I can produce one, together with another release of the docs

[08:42] *** Kuroneko44 joined
[08:43] <jjmerelo> https://rakudocs.github.io/ should be updated now

[08:43] *** aborazmeh joined
[08:43] *** aborazmeh left
[08:43] *** aborazmeh joined
[08:44] <Prince213> Great! May I also request a PDF version (when we have automated release)?

[08:45] <jjmerelo> It's produced by the same script that does the ePub, IIRC

[08:46] <jjmerelo> Um, no, neither works now...

[08:46] <jjmerelo> Sorry about that

[08:46] <Prince213> Never mind

[08:48] <jjmerelo> Prince213 I reopened this issue https://github.com/Raku/doc/issues/1981 to get it to work again.

[08:48] <jjmerelo> Thanks for your suggestions, and also the work you're doing in the doc repo and elsewhere 

[08:51] <Prince213> Not at all.

[08:51] *** sjm_uk joined
[08:52] *** Kuroneko44 left
[08:56] *** Sgeo left
[09:05] <rba> jjmerelo: I will setup the redirect docs.perl6.org to docs.raku.org now, ok?

[09:12] *** Prince213 left
[09:19] *** vike1 left
[09:22] <jjmerelo> rba OK

[09:22] *** pecastro joined
[09:27] *** Prince213 joined
[09:27] *** vike1 joined
[09:31] *** aborazmeh left
[09:34] *** ToddAndMargo joined
[09:35] <ToddAndMargo> Anyone on newbie duty?   In Raku for Windows, how do I check to see if a drive letter exists?

[09:40] <Prince213> Try this: 'X:\\'.IO.e

[09:43] <ToddAndMargo> trying

[09:45] <ToddAndMargo> In Windows 10:  K:\Windows\NtUtil>raku -e "say 'd:/'.IO.e.Bool;"TrueK:\Windows\NtUtil>raku -e "say 'Z:/'.IO.e.Bool;"False

[09:45] <rba> jjmerelo: doc|docs.perl6.org is now redirecting (301) to docs.raku.org

[09:45] <ToddAndMargo> or back slashed (needs two of them): K:\Windows\NtUtil>raku -e "say 'd:\\'.IO.e.Bool;"True

[09:45] <jjmerelo> rba great, many thanks! 

[09:45] <ToddAndMargo> Thank you!

[09:48] *** Prince213 left
[09:49] *** Prince213 joined
[09:50] <lizmat> you don.t need the .Bool, .e already returns a Bool

[09:52] *** Prince213 left
[09:53] <ToddAndMargo> sometimes IO.someletter returns True of Fail, not False.  Tacking .Bool on the end, means I don't have to remember which ones

[09:56] *** Black_Ribbon left
[09:57] <ToddAndMargo> True or Fail.  Typo

[09:58] <lizmat> A Failure is always false

[10:01] *** Prince213 joined
[10:03] <ToddAndMargo> A Fail is a lot more than that.  here is an example:  >raku -e "say Q[z:\].IO.d;"Failed to find 'Z:\' while trying to do '.d'  in block <unit> at -e line 1

[10:04] <ToddAndMargo> I use .bool at the end because I only want back a yes or no answer.  And I certainly don't want it to crash.  Always using .Bool keeps me out of trouble

[10:11] *** Prince213 left
[10:12] *** Prince213 joined
[10:13] *** Prince213 left
[10:15] *** Prince213 joined
[10:16] *** Prince213 left
[10:19] <lizmat> say "directory foo exists" if "foo".IO.d

[10:19] <lizmat> you don't have to worry about Failure then, which is the point of Failure to begin with

[10:21] *** Prince213 joined
[10:21] *** Prince213 left
[10:23] <ToddAndMargo> That is `if` converting the `X::IO::DoesNotExist` clutter into False for me.  I never know when that will happen and when it won't, so tacking .Bool at the end keeps me out of trouble.  I am not a purest here.  I do not mind seeing .Bool at the end.   It also tells me I will be seeing a Boolean.

[10:26] *** sena_kun joined
[10:27] *** chloekek joined
[10:27] *** Altai-man_ left
[10:28] <ToddAndMargo> bye bye for now. Thank you all for the tips!

[10:28] *** ToddAndMargo left
[10:34] *** wbn left
[10:37] *** wbn joined
[10:40] <lizmat> .oO( some people will write BASIC in any language )

[10:51] *** Prince213 joined
[10:52] *** Prince213 left
[11:02] *** hankache_ joined
[11:05] *** hankache left
[11:16] <sarna> lizmat: I inherited some python scripts written by a java coder, they made a class for *everything* :^)

[11:21] *** poohman joined
[11:21] *** hankache_ left
[11:24] *** sarna left
[11:38] *** Prince213 joined
[11:51] *** Prince213 left
[11:54] *** Prince213 joined
[11:55] <Prince213> Does anyone know the difference between Pointer[] and is rw?

[11:55] *** chloekek left
[12:00] *** poohman left
[12:09] <robertle> hm, has anyone used the ENV arg to Proc::Async.start() ? I can't quite figure out how to add an entry to the existing env without modifying the real one...

[12:11] <robertle> ah, my bad: $proc.start(ENV => %*ENV.append('key' => 'val') does the trick

[12:18] *** Prince213 left
[12:20] *** jjmerelo left
[12:22] *** Prince213 joined
[12:26] *** Altai-man_ joined
[12:28] *** sena_kun left
[12:31] *** andreoss joined
[12:35] *** Prince213 left
[12:39] <cpan-raku> New module released to CPAN! CucumisSextus (0.2) by 03ROBERTLE

[12:39] *** Prince213 joined
[12:41] <andreoss> do I need to specify the nqp branch for rakudo in PR so it builds correctly, or I wait for the nqp branch to be merged?

[12:42] <MasterDuke> unfortunately you have to wait

[12:43] <Prince213> Does anybody know the difference between Pointer[] and is rw?

[12:43] *** sjm_uk left
[12:50] *** Prince213 left
[12:59] *** sawyer left
[13:07] *** poohman joined
[13:11] *** Prince213 joined
[13:11] *** Prince213 left
[13:30] *** domidumont left
[13:37] *** sjm_uk joined
[13:39] *** rindolf left
[13:51] *** xinming left
[13:51] *** xinming joined
[13:59] *** chloekek joined
[14:15] *** Kaiepi left
[14:17] *** Kaiepi joined
[14:24] *** brtastic left
[14:24] *** brtastic joined
[14:27] *** sena_kun joined
[14:28] *** Altai-man_ left
[14:30] *** Kaiepi left
[14:31] *** Kaiepi joined
[14:44] *** molaf joined
[14:45] *** clarkema joined
[14:51] *** xinming left
[14:54] *** xinming joined
[14:55] *** finsternis joined
[15:01] *** kawaii joined
[15:17] *** astronavt left
[15:17] *** rindolf joined
[15:18] *** astronavt joined
[15:18] *** astronavt left
[15:19] *** astronavt joined
[15:19] *** astronavt left
[15:19] *** astronavt joined
[15:25] *** astronavt left
[15:25] *** astronavt joined
[15:28] *** _jrjsmrtn left
[15:29] *** __jrjsmrtn__ joined
[15:33] *** astronavt left
[15:35] *** astronavt joined
[15:44] *** patrickb joined
[15:45] *** aborazmeh joined
[15:45] *** aborazmeh left
[15:45] *** aborazmeh joined
[16:09] *** colomon_ joined
[16:26] *** Altai-man_ joined
[16:27] *** xinming left
[16:28] *** xinming joined
[16:28] *** hacktor joined
[16:29] *** sena_kun left
[16:56] *** pilne joined
[17:03] *** Altai-man_ is now known as sena_kun

[17:10] *** astronavt left
[17:13] <poohman> hello all, if I open a file to read using the file handle variable $fh, will not $fh.lines work multiple times?

[17:13] <poohman> or just once?

[17:13] *** andreoss left
[17:14] <MasterDuke> you probably have to $fh.seek(0) between calls

[17:14] <poohman> ok I was closing and opening it in the repl again and again

[17:15] <poohman> let me try with seek

[17:17] <MasterDuke> https://docs.raku.org/routine/seek#(IO::Handle)_method_seek

[17:18] <poohman> was reading that - so 0 is the offset and if nothing is mentioned the $whence is considered to be SeekFromBeginning??

[17:38] *** natrys joined
[17:44] *** aborazmeh left
[17:49] *** Prince213 joined
[17:49] *** Prince213 left
[17:50] *** Prince213 joined
[17:50] *** patrickz joined
[17:51] *** Prince213 left
[17:53] *** patrickb left
[17:59] *** sjm_uk left
[18:02] <MasterDuke> yep

[18:08] *** Prince213 joined
[18:11] *** Prince213 left
[18:25] *** xelxebar left
[18:26] *** Altai-man_ joined
[18:27] *** xelxebar joined
[18:27] *** lichtkind joined
[18:27] *** poohman left
[18:27] *** poohman joined
[18:28] *** astronavt joined
[18:28] *** sena_kun left
[18:33] *** astronavt left
[18:33] *** astronavt joined
[18:33] <poohman> MasterDuke: Thanks

[18:33] *** astronavt left
[18:34] *** astronavt joined
[18:35] *** astronavt left
[18:37] <poohman> hello all, I have a question about the usage of ":

[18:37] <poohman> "

[18:37] <poohman> sometimes I see that it is used simply to pass an argument

[18:38] <poohman> but can someone explain what exactly it signifies in the line below,

[18:38] <poohman> my @a = $fh.lines.rotor(100, :partial);

[18:39] <poohman> im using it a lot, but dont know the exact meaning and significance of it

[18:39] *** Prince213 joined
[18:39] <poohman> for example, also in open "filename",:r;

[18:39] <Prince213> It's adverb

[18:40] <Prince213> IIRC, the entry should be at docs.raku.org/language/glossary#index-entry-Adverb

[18:41] <poohman> let me have a look, thanks Prince123

[18:42] <Prince213> Have you used NativeCall before?

[18:43] <poohman> just in a few test cases when I was trying out stuff

[18:43] <Prince213> Have you used Pointer and is rw?

[18:44] <poohman> had a read - thats really some timtowdy

[18:44] <Prince213> I'm a bit confused on the difference between these two things

[18:44] <lizmat> poohman: adverb, aka named argument (on the callers side) and named parameter (on the callee side)

[18:45] *** |oLa| joined
[18:45] *** Prince213 left
[18:47] *** Prince213 joined
[18:48] <poohman> thanks Prince213 & lizmat

[18:48] *** Sgeo joined
[18:50] *** Prince213 left
[18:50] *** |oLa| left
[18:52] *** Prince213 joined
[18:52] *** molaf left
[18:52] <cpan-raku> New module released to CPAN! Sparrowdo (0.1.6) by 03MELEZHIK

[18:52] *** Prince213 left
[18:57] *** lichtkind left
[19:02] <tigerpaws> Is there a place for help with problems with installing commaide? 

[19:07] <lizmat> I guess here would be the place, hopefully Altai-man_ can help you

[19:07] <lizmat> or someone else :-)

[19:09] *** xinming left
[19:09] <poohman> m: @a = 0 .. 10; my @b=@.rotor(3); say @b;for @b[0] -> $b {say $b;}

[19:09] <camelia> rakudo-moar 8e5b610aa: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '@a' is not declared␤at <tmp>:1␤------> 3<BOL>7⏏5@a = 0 .. 10; my @b=@.rotor(3); say @b;f␤»

[19:09] <poohman> m: my @a = 0 .. 10; my @b=@.rotor(3); say @b;for @b[0] -> $b {say $b;}

[19:09] <camelia> rakudo-moar 8e5b610aa: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable @.rotor used where no 'self' is available␤at <tmp>:1␤------> 3my @a = 0 .. 10; my @b=@.rotor(3)7⏏5; say @b;for @b[0] -> $b {say $b;}␤»

[19:10] <poohman> m: my @a = 0 .. 10; my @b=@a.rotor(3); say @b;for @b[0] -> $b {say $b;}

[19:10] <camelia> rakudo-moar 8e5b610aa: OUTPUT: «[(0 1 2) (3 4 5) (6 7 8)]␤(0 1 2)␤»

[19:10] <lizmat> bisectable6: dd so Any but True

[19:10] <bisectable6> lizmat, Bisecting by output (old=2015.12 new=4bdc9d6) because on both starting points the exit code is 0

[19:10] *** xinming joined
[19:10] <tigerpaws> lizmat: thanks. I'm wondering what is required in the way of jdk. I'm getting errors like: penJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.

[19:10] <tigerpaws> ERROR: Could not initialize class java.awt.Toolkit

[19:10] <bisectable6> lizmat, bisect log: https://gist.github.com/689b85c3cfa36f9eff68a79b865e6095

[19:10] <bisectable6> lizmat, (2018-07-09) https://github.com/rakudo/rakudo/commit/397263e30faf309f490e4407f0f797ca52682bc7

[19:11] <poohman> in the above example I was expecting $b to print 0 and then 1 and then 2, instead I get a list for $b

[19:12] <lizmat> poohman: .rotor produces lists

[19:12] <lizmat> so @b is an Array of Lists

[19:13] <poohman> lizmat so @b[0] should be a list 

[19:14] <poohman> which is then subjected to a for loop

[19:14] <poohman> is it not?

[19:15] *** chloekek left
[19:16] <lizmat> yeah, but what is exposed to the for loop is an itemized List, so an item, so not iterated over

[19:17] <poohman> hmmm, how can I coerce it to become a list or an array

[19:17] <timotimo> strip the itemization with, for example, <> at the end

[19:17] <lizmat> m: my @a = 0 .. 10; my @b=@a.rotor(3); say @b;for @b[0]<> -> $b {say $b;}

[19:17] <camelia> rakudo-moar 4bdc9d68d: OUTPUT: «[(0 1 2) (3 4 5) (6 7 8)]␤0␤1␤2␤»

[19:17] <lizmat> or:

[19:18] <lizmat> my @a = 0 .. 10; my @b=@a.rotor(3); say @b;for |@b[0] -> $b {say $b;}   # slip it

[19:18] <evalable6> lizmat, rakudo-moar 4bdc9d68d: OUTPUT: «[(0 1 2) (3 4 5) (6 7 8)]␤0␤1␤2␤»

[19:19] <poohman> thanks lizmat & timotimo - ill try to read about itemisation

[19:22] <tigerpaws> @lizmat: it's ok, I got it commaide running in my container. 

[19:22] <lizmat> poohman: basically, anything coming out of an array / list / hash is an item

[19:23] <lizmat> aka, is a value inside a container

[19:23] *** Prince213 joined
[19:23] <lizmat> m: my @a = ^10; my $c := @a[5]; $c = 42; dd @a

[19:23] <camelia> rakudo-moar 4bdc9d68d: OUTPUT: «Array @a = [0, 1, 2, 3, 4, 42, 6, 7, 8, 9]␤»

[19:23] <lizmat> or shorter:

[19:23] <lizmat> m: my @a = ^10; @a[5] = 42; dd @a

[19:23] <camelia> rakudo-moar 4bdc9d68d: OUTPUT: «Array @a = [0, 1, 2, 3, 4, 42, 6, 7, 8, 9]␤»

[19:24] <lizmat> it being a value inside a container, makes it possible to assign to arrays / hashes

[19:24] <lizmat> *elements

[19:25] <Prince213> Hi lizmat, I don't see document comparing Pointer and the is rw trait. Could you explain these two? Are there differences? When should I use Pointer?

[19:26] *** Prince213 left
[19:27] <lizmat> .tell Prince213 did you read https://docs.raku.org/language/nativecall ?

[19:27] <tellable6> lizmat, I'll pass your message to Prince213

[19:27] *** aborazmeh joined
[19:27] *** aborazmeh left
[19:27] *** aborazmeh joined
[19:28] *** Prince213 joined
[19:31] <Prince213> Yes. But not very helpful for my problem. For example I have `sub foo(Pointer[Bar] $baz) is native { * } ` and `sub foo(Bar $baz is rw) is native { * } `. Are these two exactly the same? If not, what are the differences?

[19:31] <tellable6> 2020-05-17T19:27:20Z #raku <lizmat> Prince213 did you read https://docs.raku.org/language/nativecall ?

[19:37] <lizmat> Prince213 my NativeCall foo is not that strong, but without the "is rw" the parameter is value, and *with* it, it passes a pointer

[19:38] * lizmat hopes someone else has a better answer for Prince213 

[19:40] *** dmc00 joined
[19:40] <Prince213> So when I use Pointer I'm still passing value, but the value itself is a pointer. When I use is rw trait, I'm passing a pointer. Am I right?

[19:41] <lizmat> that would be my interpretation as well, but again, my NativeCall foo is not that strong  :-)

[19:42] *** stoned75 joined
[19:43] <Prince213> Does this hold in CStruct s?

[19:49] <Prince213> Anyway thanks lizmat!

[19:51] *** Prince213 left
[20:00] *** xinming left
[20:01] *** xinming joined
[20:05] *** Prince213 joined
[20:12] *** Prince213 left
[20:17] *** sftp left
[20:20] *** sftp joined
[20:24] *** rindolf left
[20:26] *** sena_kun joined
[20:27] *** aborazmeh left
[20:28] *** Altai-man_ left
[20:28] *** xinming left
[20:28] *** xinming joined
[20:30] *** juanfra_ joined
[20:33] <sena_kun> tigerpaws, re comma: still around?

[20:44] *** brtastic left
[21:04] *** Manifest0 left
[21:06] *** Manifest0 joined
[21:13] *** aborazmeh joined
[21:13] *** aborazmeh left
[21:13] *** aborazmeh joined
[21:13] <tigerpaws> sena_kun: I'm back. 

[21:14] <sena_kun> tigerpaws, o/

[21:14] <sena_kun> tigerpaws, what os do you use?

[21:14] <tigerpaws> send_kun: I've got comma running in my container, I had to install openjdk, even though I thought it was already there. 

[21:14] <sena_kun> tigerpaws, so it works now?

[21:14] <tigerpaws> I am running on Fedora Silverblue, in a 'toolbox' container. 

[21:15] <tigerpaws> Yes, it works. I'm getting used to it slowly. 

[21:15] <tigerpaws> @sens_kun: thanks for getting back to me. I appreciate it. 

[21:16] <tigerpaws> @sena_kun, I mean. 

[21:16] <sena_kun> I am strongly recommending using oracle jdk. I am using 8u202 and it's fine for everything. If you are on openjdk it should work, I think, but if anything happens you can consider this advice.

[21:16] <sena_kun> tigerpaws, no problem, thanks for using Comma!

[21:17] <tigerpaws> sena_kun: I will remember that.  Is there a version to watch out for? I'm on openjdk 11, there's 14 available. 

[21:19] *** molaf joined
[21:21] *** clarkema left
[21:21] <sena_kun> .tell patrickb results of your integrating rakudo with azure look awesome. What I am worrying about is maybe we should have a bit more user-friendly build names if possible? On github page (actions tab) for the commits I'm seeing just "rakudo.rakudo (Test Test ..." and nothing else, so have to mouse hover to get exact name. Also, "Windows_MoarVM_NQP_master_MoarVM_master" can be just "Windows, Rakudo, MoarVM"? Rakudo always implies NQP and the caterogies 

[21:21] <sena_kun> should be probably, e.g. "$OS, $VM", "$OS, NQP ($VM)", "$OS, Rakudo ($VM)".

[21:22] <tellable6> sena_kun, I'll pass your message to patrickb

[21:22] <El_Che> someone recommending Oracle jdk

[21:22] <El_Che> that has been a while :)

[21:22] <El_Che> most people just shout "run, run"

[21:24] <sena_kun> El_Che, dunno, first time I started to work on Comma with openjdk and hell was raised with all the troubles and tricky errors. It was almost three years ago. A half of a year one of our colleagues started to help out with Comma and spent two days trying to make it work with openjdk... And then went for oracle. Not wanting to be a corporate slave, but software.

[21:26] <patrickz> sena_kun: The build combinations are more complex than that: rakudo + nqp via NQP_REV + moar vai NQP_REV, rakudo + nqp via NQP_REV + moar master branch, rakudo + nqp master branch + moar master branch

[21:26] <patrickz> those three combinations are what the names also refer to

[21:26] <El_Che> I run Shibboleth IDP for 150k people. The makers were pretty strong on using oracle jdk

[21:26] <El_Che> not any more

[21:26] <El_Che> because Oracle killed java with their license change

[21:26] <El_Che> not allowed to run it on production

[21:26] <El_Che> support cycles of 6 months

[21:27] <El_Che> etc etc

[21:27] <El_Che> sena_kun: I had to move de Shib install to the Amazon jdk

[21:27] <patrickz> I really don't see any way to simplify the names except using abbreviations.

[21:29] <patrickz> sena_kun: Maybe "Win_Moar", Win_Moar_master", "Win_Moar_master_master" - but then nobody not familiar with the convention will have no chance to know what it's about

[21:29] <sena_kun> patrickz, what's the merit of checking master nqp / master moar? Unless someone of core devs asked for that. I mean, given some changes must be merged in sync, there might be false positives.

[21:29] *** sour joined
[21:29] <El_Che> sena_kun: I've my fair share of troubles with openjdk on prod in the past (weird crashes and lock ups). But I don't think it is longer the case

[21:29] <El_Che> sena_kun: because pretty much every project moved off Oracle jdk last year when the license changed

[21:30] <sour> hello, does anyone have example projects structure for multi-module projects, separated in bin/ and lib/ parts, comma IDE or not? 

[21:30] <sena_kun> El_Che, taking a note to try it out, I guess, thanks. :)

[21:30] <patrickz> sena_kun: That's a direct copy of what's happening on travis and CircleCI (https://github.com/rakudo/rakudo/blob/master/.travis.yml#L44 and https://github.com/rakudo/rakudo/blob/master/.circleci/config.yml#L51)

[21:31] <El_Che> sena_kun: not going for the anti-Oracle trumpet here, just pointing out the license changes that made it illegal to run it on production

[21:31] <El_Che> on the desktop or as dev tool it's OK of course

[21:31] <sena_kun> sour, are you asking of Comma support multi-module projects or just want to see how can it work with Raku?

[21:31] <sour> how it can work with raku, and zef I suppose. I don't care about Comma, but if you got one with that, I don't mind

[21:32] <patrickz> I think I can't just remove CI build combinations without broader discussion. But I'm all in favor of _not_ doing test runs that don't bring any value.

[21:32] <sena_kun> El_Che, damn, let's pretend I was joking if it goes to the court...

[21:34] <sena_kun> patrickz, I see... Yes, simple removing is out of the question. I'd maybe, ugh, no, problem solving is not the right place... I'd poked core devs with this question, I'd say. At least lizmat, jnthn...

[21:35] <patrickz> sena_kun: Maybe just a normal issue ticket in the rakudo repo will do. Shall I kick off a discussion?

[21:36] <sena_kun> sour, a distribution (with bin, lib, t, resources etc) can contain numerous subparts.

[21:36] <sena_kun> patrickz, yes, a rakudo ticket will do, even in a more documented manner than irc talks.

[21:39] <sena_kun> sour, e.g. see https://github.com/Altai-man/sample-cro-crud <- in `lib` there are multiple "sections" for different things. You can organize your code in different module files for FeatureX/A, FeatureX/B, then FrontendA/C, FrontendB/D and so on. Tests in t/ directory can be separated as well as runners will run them recursively.

[21:39] <sena_kun> afk&

[21:41] <sour> yes, thanks for that example, I also started looking at github raku projects :P

[21:41] <sena_kun> That's another way. :]

[21:47] <sour> I've just got one question, how are META6.json description files for zef created? Are they manually created and edited?

[21:49] <sena_kun> sour, manually created and edited, but there are tools for stubbing them and maintaining, so if you're lazy that's great.

[21:49] *** aborazmeh left
[21:50] <sena_kun> e.g. App::Mi6, Ddt. I used Ddt and it was pretty cool. Other than that, Comma also helps in maintaining META6.json file.

[21:50] <patrickz> sena_kun: https://github.com/rakudo/rakudo/issues/3700

[21:50] <sena_kun> patrickz++

[21:52] <patrickz> There is also App::Assixt

[21:52] *** ufobat_ joined
[21:53] <sour> these seem great, thanks a lot!

[21:56] *** ufobat__ left
[21:56] *** sour left
[22:10] *** |oLa| joined
[22:11] *** |oLa| left
[22:11] *** sena_kun left
[22:11] *** maggotbrain left
[22:18] *** patrickz left
[22:37] *** maggotbrain joined
[22:39] *** natrys left
[22:48] *** Kaiepi left
[22:49] *** Kaiepi joined
[23:08] *** astronavt joined
[23:12] *** pecastro left
[23:45] *** Sgeo left
[23:55] *** melezhik joined
