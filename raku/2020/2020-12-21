[00:02] <ggoebel> raku: say (0..2) X (0..2)

[00:02] <evalable6> ggoebel, rakudo-moar 3beb71cc9: OUTPUT: ¬´((0 0) (0 1) (0 2) (1 0) (1 1) (1 2) (2 0) (2 1) (2 2))‚ê§¬ª

[00:02] <ggoebel> raku: say (2..0) X (0..2)

[00:02] <evalable6> ggoebel, rakudo-moar 3beb71cc9: OUTPUT: ¬´()‚ê§¬ª

[00:03] <ggoebel> why does the second produce an empty list?

[00:05] <lizmat> m: dd (2..0).list

[00:05] <lizmat> raku: dd (2..0).list

[00:05] <evalable6> lizmat, rakudo-moar 3beb71cc9: OUTPUT: ¬´()‚ê§¬ª

[00:05] <camelia> rakudo-moar 3beb71cc9: OUTPUT: ¬´()‚ê§¬ª

[00:05] <lizmat> ggoebel ^^

[00:05] <lizmat> m: say (2...0) X (0..2)

[00:05] <camelia> rakudo-moar 3beb71cc9: OUTPUT: ¬´((2 0) (2 1) (2 2) (1 0) (1 1) (1 2) (0 0) (0 1) (0 2))‚ê§¬ª

[00:06] <lizmat> perhaps you meant that?  ^^

[00:06] <lizmat> 2..0 is an empty list, 2...0 is the sequence 2,1,0

[00:10] *** benjif left
[00:10] *** benjif joined
[00:33] <timotimo> i wonder if Our IDE should say anything when it encounters a range with the lhs bigger than the rhs

[00:41] *** pecastro left
[00:44] <timotimo> it could be annoying when that's what you actually want

[00:46] *** ChoppedBacon left
[00:47] *** ChoppedBacon joined
[00:52] *** wamba left
[00:57] *** hungrydonkey left
[00:57] *** gordonfish left
[00:57] *** Summertime left
[00:57] *** stux|RC-only left
[00:57] *** tony-o left
[00:57] *** perryprog left
[00:57] *** hvxgr left
[00:57] *** ensamvarg left
[00:57] *** afresh1 left
[00:57] *** jcallen left
[00:57] *** Maylay left
[00:57] *** sivoais left
[00:57] *** cxreg left
[00:57] *** perigrin left
[00:57] *** telex left
[00:57] *** aeruder left
[00:57] *** APic left
[00:57] *** Bucciarati left
[00:57] *** markmarkmark left
[00:57] *** [ptc] left
[00:57] *** camelia left
[01:00] *** stux|RC-only joined
[01:10] <elcaro> timotimo: potentially the parser could pick it up for literal values (much like it does for @a[-1])

[01:11] <timotimo> absolutely

[01:12] <timotimo> i'm refering to Comma only for this, though

[01:15] <elcaro> I've been using Raku for 5 years, and there's one burning question about it I've had, but never asked...

[01:15] <timotimo> uh oh

[01:15] <elcaro> what is the point/benefit of `classify-list` and `categorize-list` over `classify` and `categorize`

[01:16] <timotimo> oh interesting

[01:16] <elcaro> the examples in the docs for the *-list versions can be achieved with the non *-list versions

[01:16] <elcaro> the examples in the docs also look a bit odd syntactically (ie, say % .classify-list { ... })

[01:16] <elcaro> I just... I don't see the point, but maybe I'm missing something

[01:17] <timotimo> ah i remember now i believe

[01:17] <timotimo> without classify-list on Hash, you can't easily decide what the type of hash you get

[01:17] *** hungrydonkey joined
[01:17] *** Summertime joined
[01:17] *** tony-o joined
[01:17] *** perryprog joined
[01:17] *** hvxgr joined
[01:17] *** ensamvarg joined
[01:17] *** afresh1 joined
[01:17] *** jcallen joined
[01:17] *** Maylay joined
[01:17] *** sivoais joined
[01:17] *** cxreg joined
[01:17] *** perigrin joined
[01:17] *** telex joined
[01:17] *** aeruder joined
[01:17] *** APic joined
[01:17] *** Bucciarati joined
[01:17] *** markmarkmark joined
[01:17] *** [ptc] joined
[01:17] *** camelia joined
[01:18] <elcaro> oh... so for typed hashes, eg %hash{Foo} ?

[01:18] <timotimo> hm but we do have a :into for classify, too

[01:18] <elcaro> is that what you mean by "type of Hash"... because List.classify/categorize always returns a Hash, right? 

[01:19] <elcaro> another reason for the `-list` versions I can see is modifying an existing hash

[01:20] <timotimo> right, that too

[01:20] <elcaro> you can sorta do this with the non-list versions, but it's a bit janky (%hash ,= % = (^5).classify(...))

[01:20] <ggoebel> lizmat: thank you!

[01:22] <elcaro> I guess what I'm really saying is... I don't think I've seen a really compelling reason to use the `-list` versions, and maybe the Docs could do better at showing what that reason is.

[01:25] <elcaro> also... "janky" was the wrong adjective earlier. I meant more "inelegant", syntax-wise... though beauty is in the eye of the beholder

[01:58] *** hungryd14 joined
[01:58] *** hungrydonkey left
[02:00] *** hungryd14 left
[02:00] *** hungrydonkey joined
[02:03] *** hungrydonkey left
[02:04] *** benjif left
[02:07] *** lucasb left
[02:25] *** dotdotdot left
[02:26] *** Doc_Holliwood left
[02:29] *** dotdotdot joined
[02:39] *** xinming left
[02:39] *** xinming joined
[02:45] *** mowcat left
[03:21] *** cog__ joined
[03:24] *** cog left
[03:36] *** rindolf joined
[03:41] *** xinming left
[03:41] *** xinming joined
[03:58] *** dotdotdot left
[04:00] *** xinming left
[04:01] *** xinming joined
[04:05] *** dotdotdot joined
[04:13] *** _jrjsmrtn left
[04:13] *** __jrjsmrtn__ joined
[04:16] *** dotdotdot left
[04:20] *** dotdotdot joined
[04:21] *** leont left
[04:40] *** xinming left
[04:40] *** xinming joined
[04:41] <coldpress> Regarding: is there an easy way to make the lists in a set of lists unique? (easy means: without declaring a custom class that overrides WHICH) -- the answer is yes: make each list a set.

[04:41] <coldpress> m: Set(Set(1,2),Set(2,1)).say

[04:41] <camelia> rakudo-moar 3beb71cc9: OUTPUT: ¬´Set(Set(1 2))‚ê§¬ª

[04:49] *** telex left
[04:50] *** telex joined
[05:21] *** frost-lab joined
[05:36] *** xinming left
[05:36] *** xinming joined
[05:54] *** parabolize left
[06:07] *** jmerelo joined
[06:17] *** aborazmeh joined
[06:17] *** aborazmeh left
[06:17] *** aborazmeh joined
[06:21] *** xinming left
[06:22] *** xinming joined
[06:31] *** ggoebel left
[06:32] <jmerelo> A couple of days to submit your talks to FOSDEM https://news.perlfoundation.org/post/fosdem-2021-call-for-papers

[06:38] <Geth> ¬¶ doc: 74904259ae | JustThisGuyAZ++ (committed by Juan Juli√°n Merelo Guerv√≥s) | doc/Type/Map.pod6

[06:38] <Geth> ¬¶ doc: Update Map.pod6

[06:38] <Geth> ¬¶ doc: 

[06:38] <Geth> ¬¶ doc: Clarify what the list method returns.

[06:38] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/74904259ae

[06:38] <linkable6> Link: https://docs.raku.org/type/Map

[06:38] *** aborazmeh left
[06:43] *** xinming left
[06:45] *** xinming joined
[07:04] *** Altai-man joined
[07:10] <moon-child> coldpress: that doesn't help if you want to have duplicate items in the lists, though

[07:16] *** gtodd left
[07:35] <coldpress> moon-child: fair point

[07:38] <moon-child> an alternative would be to turn the set into a list and use .unique(:with(&[eqv]))

[07:52] *** Doc_Holliwood joined
[08:00] *** cpan-raku left
[08:01] *** cpan-raku joined
[08:01] *** cpan-raku left
[08:01] *** cpan-raku joined
[08:25] *** Sgeo left
[08:25] *** domidumont joined
[08:32] *** abraxxa joined
[08:36] *** abraxxa left
[08:37] *** daxim left
[08:38] *** abraxxa joined
[08:42] *** dakkar joined
[08:49] *** dakkar left
[08:52] *** pecastro joined
[08:55] *** wamba joined
[08:59] *** rindolf left
[09:02] *** dakkar joined
[09:09] *** sena_kun joined
[09:11] *** Altai-man left
[09:17] *** rindolf joined
[09:32] *** xinming left
[09:33] *** xinming joined
[09:35] *** Doc_Holliwood left
[09:36] *** xkr47 left
[09:37] *** xkr47 joined
[09:38] *** jmchael left
[09:39] *** jmchael joined
[09:47] *** jmchael_ joined
[09:50] *** jmchael left
[10:11] *** dotdotdot left
[10:15] *** dotdotdot joined
[10:39] *** Manifest0 left
[10:47] *** Manifest0 joined
[10:48] *** Doc_Holliwood joined
[10:50] *** xinming left
[10:51] *** xinming joined
[11:01] *** bbkr joined
[11:02] <bbkr> Hi. There is typo in 2020.12 announcement: "methods to Suppy.batch method" - SuppLy

[11:07] <moritz> bbkr: thanks, I fixed it in the repo. Dunno where it's published, and if anybody can update it there as well....

[11:11] <bbkr> It's also in in tag description.

[11:24] *** bbkr left
[11:26] *** kensanata joined
[11:28] *** xinming left
[11:28] *** xinming joined
[11:31] *** Doc_Holliwood left
[11:39] *** Kaiepi left
[11:40] *** Kaiepi joined
[11:43] *** jmchael_ is now known as jmchael

[11:54] <sena_kun> I updated the tag description.

[12:07] <lizmat> sena_kun: please note that that line should actually be removed

[12:07] <lizmat> "`:emit-on-empty` and `:emit-once-on-empty` " did not make it to the final implementation, and were replaced by "emit-timed"

[12:14] <sena_kun> lizmat, it documented was packed into release build, so no meaning to change it now.

[12:15] <jmerelo> Anyone up for FOSDEM? https://news.perlfoundation.org/post/fosdem-2021-call-for-papers

[12:15] <sena_kun> lizmat, I guess next time I will do changelog weekly, so that more people had time to actually read it, rather than doing something boring like this during a weekend.

[12:22] *** MasterDuke joined
[12:26] *** frost-lab left
[12:27] <lizmat> sena_kun: that sounds like a plan  :-)

[12:41] *** xinming left
[12:43] *** xinming joined
[12:45] *** Kaiepi left
[12:46] *** Kaiepi joined
[12:48] *** xinming left
[12:49] *** xinming joined
[12:54] *** ggoebel joined
[13:02] *** brtastic1 joined
[13:04] *** brtastic1 is now known as brtastic

[13:08] *** Altai-man joined
[13:11] *** sena_kun left
[13:20] *** xinming left
[13:22] *** xinming joined
[13:23] *** kensanata left
[13:31] *** Kaiepi left
[13:31] *** Kaiepi joined
[13:33] *** xinming left
[13:34] *** xinming joined
[13:52] *** bdju left
[13:53] *** bdju joined
[13:55] *** leont joined
[13:57] *** xinming left
[13:58] *** xinming joined
[14:38] *** Sgeo joined
[15:09] *** wamba left
[15:21] *** wamba joined
[15:27] <xinming> m: my %hash; my %n = |%hash<>:p.map({ .key => .value });

[15:27] <camelia> rakudo-moar f0d64ea5e: OUTPUT: ¬´===SORRY!===‚ê§MVMArray: Can't pop from an empty array‚ê§¬ª

[15:27] <xinming> A low level bug. ;-)

[15:27] <xinming> m: my %hash; my %n = |(%hash<>:p.map({ .key => .value }));

[15:27] <camelia> rakudo-moar f0d64ea5e: ( no output )

[15:28] <xinming> While the later one worked as expected

[15:51] *** Doc_Holliwood joined
[15:56] <lizmat> xinming: please make an issue for this1

[15:56] <lizmat> !

[16:06] *** gordonfish joined
[16:15] *** hal99999 joined
[16:18] *** xinming left
[16:20] *** xinming joined
[16:21] <xinming> lizmat: already done

[16:22] <xinming> already done after I discovered this

[16:22] <xinming> https://github.com/rakudo/rakudo/issues/4132

[16:29] *** parabolize joined
[16:41] * [Coke] wonders if Todd & Margo is a nod to the neighbors in Christmas Vacation.

[16:55] *** Xliff joined
[17:01] <xinming> Is there a module which we can limit the length? When the queue is full, the $queue.add-to-queue is blocked, wait for queue to be processed by other party?

[17:01] <xinming> Or someone can give me some hint on how this can be implemented.

[17:03] <xinming> I mean, a way to limit the length of the queue, or maybe pool, no matter what we call it. :-)

[17:04] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/12/21/2020-51-merry-releasmas/

[17:04] <xinming> what I try to do is doing something like throttle in Supply, Which is a bit like pipe in unix

[17:05] <tony-o> do you want concurrent workers in the pool xinming ?

[17:05] <tellable6> 2020-12-19T08:38:16Z #raku <jmerelo> tony-o great!

[17:05] <xinming> tony-o: yea

[17:06] <xinming> the workers will be able to pull jobs from Channel.

[17:06] <xinming> It's a bit like token bucket filter

[17:07] <xinming> I dont' want to do it with loop + sleep interval to implement this.

[17:07] <xinming> What I want to do is something like, Supply, with token bucket filter pool implementation.

[17:08] <xinming> But block the sender when the bucket is full

[17:09] <tony-o> use a $*SCHEDULER when you create the supply

[17:09] *** sena_kun joined
[17:09] <tony-o> m: $*SCHEDULER.say;

[17:09] <camelia> rakudo-moar f0d64ea5e: OUTPUT: ¬´ThreadPoolScheduler.new(initial_threads => 0, max_threads => 64, uncaught_handler => Callable)‚ê§¬ª

[17:10] *** lucasb joined
[17:11] <xinming> hmm, bed time, Will dive deeper later

[17:11] *** Altai-man left
[17:33] *** dakkar left
[17:41] *** domidumont left
[17:42] *** Xliff left
[17:42] *** stux|RC-- joined
[17:44] *** nicholatian left
[17:44] *** Manifest0 left
[17:44] *** b2gills left
[17:44] *** stux|RC left
[17:44] *** samebchase left
[17:44] *** moony left
[17:45] *** Manifest0 joined
[17:45] *** moony joined
[17:45] *** pel left
[17:45] *** b2gills joined
[17:45] *** samebchase joined
[17:45] *** pel joined
[17:46] *** mowcat joined
[17:47] *** domidumont joined
[17:50] *** nicholatian joined
[17:50] *** domidumont left
[18:17] *** pecastro left
[18:24] *** pecastro joined
[18:33] *** stux|RC-- left
[18:33] *** ambs_ left
[18:35] *** stux|RC joined
[18:36] *** ambs joined
[18:39] *** benjif joined
[19:04] *** Kaiepi left
[19:04] *** Kaiepi joined
[19:05] *** xinming left
[19:06] *** xinming joined
[19:15] *** xinming left
[19:15] *** xinming joined
[19:34] *** abraxxa left
[19:38] *** xinming left
[19:39] *** xinming joined
[19:52] *** clarjon1 left
[19:59] *** MasterDuke left
[20:05] *** MasterDuke joined
[20:25] *** Xliff joined
[20:25] <Xliff> Morning.

[20:25] <Xliff> How can I turn on request debugging when using Cro?

[20:26] <Xliff> CRO_TRACE?

[20:29] *** jmerelo left
[20:45] *** aborazmeh joined
[20:45] *** aborazmeh left
[20:45] *** aborazmeh joined
[20:52] <Geth> ¬¶ ecosystem: 3b5c81814d | (Pawel Pabian)++ (committed using GitHub Web editor) | META.list

[20:52] <Geth> ¬¶ ecosystem: Renamed Text::Markov module repository.

[20:52] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/3b5c81814d

[20:59] *** xelxebar left
[20:59] *** xelxebar joined
[21:01] *** notandinus left
[21:04] *** vrurg left
[21:05] *** xelxebar left
[21:05] *** xelxebar joined
[21:08] *** Altai-man joined
[21:12] *** sena_kun left
[21:17] <Geth> ¬¶ doc/de-trap-regex-trap-description: 8c39423ad1 | Altai-man++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[21:17] <Geth> ¬¶ doc/de-trap-regex-trap-description: De-trap a trap's description

[21:17] <Geth> ¬¶ doc/de-trap-regex-trap-description: 

[21:17] <Geth> ¬¶ doc/de-trap-regex-trap-description: Closes https://github.com/Raku/doc/issues/3721

[21:17] <Geth> ¬¶ doc/de-trap-regex-trap-description: review: https://github.com/Raku/doc/commit/8c39423ad1

[21:18] <Geth> ¬¶ doc: Altai-man++ created pull request #3745: De-trap a trap's description

[21:18] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3745

[21:23] <Geth> ¬¶ doc/eval-example-fix: 8a816c13fb | Altai-man++ (committed using GitHub Web editor) | doc/Type/independent-routines.pod6

[21:23] <Geth> ¬¶ doc/eval-example-fix: Update independent-routines.pod6

[21:23] <Geth> ¬¶ doc/eval-example-fix: 

[21:23] <Geth> ¬¶ doc/eval-example-fix: Closes https://github.com/Raku/doc/issues/3730

[21:23] <Geth> ¬¶ doc/eval-example-fix: Closes https://github.com/rakudo/rakudo/issues/4061

[21:23] <Geth> ¬¶ doc/eval-example-fix: review: https://github.com/Raku/doc/commit/8a816c13fb

[21:24] <Geth> ¬¶ doc: Altai-man++ created pull request #3746: Update independent-routines.pod6

[21:24] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3746

[21:28] *** Xliff left
[21:28] *** cpan-raku left
[21:29] *** cpan-raku joined
[21:29] *** cpan-raku left
[21:29] *** cpan-raku joined
[21:31] *** brtastic left
[21:32] *** Grinnz left
[21:33] *** peteretep left
[21:33] *** PotatoGim left
[21:34] *** peteretep joined
[21:34] *** Grinnz joined
[21:34] *** PotatoGim joined
[21:36] <Geth> ¬¶ ecosystem: 4b40395822 | (Pawel Pabian)++ (committed using GitHub Web editor) | META.list

[21:36] <Geth> ¬¶ ecosystem: Renamed JSON::RPC module repository.

[21:36] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/4b40395822

[21:46] *** vrurg joined
[22:01] *** Altai-man left
[22:36] *** aborazmeh left
[22:46] *** aborazmeh joined
[22:46] *** aborazmeh left
[22:46] *** aborazmeh joined
[22:54] *** mowcat left
[22:55] *** leont left
[23:00] *** hal99999 left
[23:03] *** leont joined
[23:22] *** SmokeMachine left
[23:22] *** jhill left
[23:22] *** skaji_ left
[23:29] *** Doc_Holliwood left
[23:36] *** oneeggeach joined
[23:36] *** oneeggeach left
[23:41] *** aborazmeh left
[23:46] *** wamba left
[23:51] *** rindolf left
