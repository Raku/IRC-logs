[00:06] *** lichtkind left
[00:22] *** aborazmeh left
[00:54] *** Doc_Holliwood left
[01:00] <Geth> ¬¶ doc: uzluisf++ created pull request #3452: Extend documentation on typed lambdas

[01:00] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3452

[01:02] *** konvertex left
[01:16] *** orinthe left
[01:20] *** orinthe joined
[01:29] *** skids left
[01:37] *** soar joined
[01:38] *** aborazmeh joined
[01:38] *** aborazmeh left
[01:38] *** aborazmeh joined
[01:42] *** aborazmeh left
[01:59] *** poohman joined
[02:05] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:19] *** pilne left
[02:21] *** Cabanossi left
[02:22] *** roguelazer_ joined
[02:23] *** ambs_ joined
[02:26] *** ecocode joined
[02:27] *** e left
[02:28] *** ssm left
[02:28] *** roguelazer left
[02:28] *** roguelazer_ is now known as roguelazer

[02:31] *** unclechu left
[02:32] *** tyil[m] left
[02:32] *** CIAvash left
[02:32] *** wildtrees[m] left
[02:32] *** xfix left
[02:32] *** uzl[m] left
[02:32] *** BlackChaosNL[m] left
[02:32] *** matiaslina left
[02:32] *** AlexDaniel` left
[02:32] *** Cabanossi joined
[02:42] *** unclechu joined
[02:44] *** ssm joined
[02:46] *** wildtrees[m] joined
[02:55] *** tyil[m] joined
[02:55] *** CIAvash joined
[02:55] *** AlexDaniel` joined
[02:56] *** uzl[m] joined
[02:56] *** BlackChaosNL[m] joined
[03:05] *** soar left
[03:06] *** matiaslina joined
[03:09] *** mowcat left
[03:23] *** cpan-raku left
[03:28] *** polettixx joined
[03:31] *** KindTwo joined
[03:32] *** KindOne left
[03:34] *** cpan-raku joined
[03:34] *** cpan-raku left
[03:34] *** cpan-raku joined
[03:35] *** KindTwo is now known as KindOne

[03:41] *** Cabanoss- joined
[03:42] *** Cabanossi left
[03:50] *** edk_ joined
[04:10] *** rbt left
[04:11] *** rbt joined
[04:15] *** soar joined
[04:22] *** mahafyi left
[04:29] *** brtastic joined
[04:31] *** rbt left
[04:32] *** rbt joined
[04:32] *** Sgeo left
[04:49] *** brtastic left
[05:07] *** aborazmeh joined
[05:07] *** aborazmeh left
[05:07] *** aborazmeh joined
[05:20] *** xinming left
[05:21] *** xinming joined
[05:28] *** brtastic joined
[05:46] *** wamba joined
[05:47] *** brtastic left
[06:06] *** Sgeo joined
[06:09] *** brtastic joined
[06:10] *** JJMerelo joined
[06:20] <Geth> ¬¶ doc: c286df1a68 | (Luis F. Uceta)++ | doc/Type/Signature.pod6

[06:20] <Geth> ¬¶ doc: Extend documentation on typed lambdas

[06:20] <Geth> ¬¶ doc: 

[06:20] <Geth> ¬¶ doc: Refs: #3384

[06:20] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/c286df1a68

[06:20] <Geth> ¬¶ doc: 58424ddf3e | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Type/Signature.pod6

[06:20] <Geth> ¬¶ doc: Merge pull request #3452 from uzluisf/master

[06:20] <Geth> ¬¶ doc: 

[06:20] <linkable6> Link: https://docs.raku.org/type/Signature

[06:20] <Geth> ¬¶ doc: Extend documentation on typed lambdas

[06:20] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/58424ddf3e

[06:20] <linkable6> DOC#3384 [open]: https://github.com/Raku/doc/issues/3384 [docs][update] Extend documentation on typed lambdas

[06:28] *** bdju left
[06:28] *** bdju joined
[06:34] *** andrzejku joined
[06:52] *** hyperak joined
[07:13] *** Doc_Holliwood joined
[07:13] *** stoned75 joined
[07:17] *** rindolf joined
[07:28] <Geth> ¬¶ doc/containers-examples: 0d5da03330 | (Stoned Elipot)++ | doc/Language/containers.pod6

[07:28] <Geth> ¬¶ doc/containers-examples: Add example's output

[07:28] <Geth> ¬¶ doc/containers-examples: review: https://github.com/Raku/doc/commit/0d5da03330

[07:29] <Geth> ¬¶ doc: stoned++ created pull request #3453: Add example's output

[07:29] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3453

[07:32] *** pecastro joined
[07:34] *** stoned75 left
[07:42] *** JJMerelo left
[07:44] *** wamba left
[07:45] *** dakkar joined
[07:51] *** Sgeo left
[08:02] *** soursBot joined
[08:20] *** zacts joined
[08:20] *** zacts left
[08:23] *** __jrjsmrtn__ left
[08:28] *** stoned75 joined
[08:34] *** rbt left
[08:36] <moon-child> how can I debug an infinitely hanging grammar?

[08:37] <moon-child> I made this http://sprunge.us/LRI8h5, and it hangs when I pass it something simple like '6;'

[08:39] *** soursBot left
[08:44] <moritz> moon-child: hanging grammars are ususally the result of quantifying a zero-width match

[08:44] *** soursBot joined
[08:44] <MasterDuke> trying changing the `*` in your TOP to `+`?

[08:45] <moritz> don't think that's it

[08:45] *** sour joined
[08:45] <moon-child> moritz: doesn't look like any of them would be zero-width, though?

[08:45] <sour> what parsing algorithm is used internally by the raku grammars?

[08:45] <sour> that grammar looks like it's left recursive

[08:45] <moon-child> MasterDuke: doesn't help

[08:45] <moritz> sour: you'r onto it, I think

[08:46] <moritz> expr -> fn-call -> expr '(' ...

[08:46] <sour> try replacing the first <expr> in fn-call with literal-str

[08:46] <sour> again, i'm not sure if hanging is desired, but if left recursion is bad, that's where it's bad

[08:46] <moon-child> ahh, I see

[08:47] <moritz> Grammar::Tracer can help you debug, to answer the original question

[08:47] <moritz> <plug> https://www.apress.com/us/book/9781484232279 also contains some advice dealing with stuff like that </plug>

[08:49] *** soar left
[08:52] *** sour left
[08:57] *** sarna joined
[09:07] *** __jrjsmrtn__ joined
[09:21] *** kylese joined
[09:33] *** sena_kun joined
[09:37] *** konvertex joined
[09:40] *** kylese left
[09:47] *** mowcat joined
[10:05] *** soursBot left
[10:06] *** soursBot joined
[10:07] *** aborazmeh left
[10:09] *** Altai-man_ joined
[10:12] *** sena_kun left
[10:27] *** poohman left
[10:29] *** aborazmeh joined
[10:29] *** aborazmeh left
[10:29] *** aborazmeh joined
[10:32] *** Doc_Holliwood left
[10:38] *** chloekek_ joined
[10:48] *** Doc_Holliwood joined
[10:53] *** andrzejku left
[11:09] *** Black_Ribbon left
[11:13] *** andrzejku joined
[11:17] *** soursBot left
[11:22] *** __jrjsmrtn__ left
[11:25] *** soursBot joined
[11:27] *** girafe2 joined
[11:29] *** girafe left
[11:30] *** edk_ is now known as e

[11:31] *** aborazmeh left
[11:31] *** stoned75 left
[11:38] *** stoned75 joined
[11:44] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/06/01/2020-21-22-four-by-wenzel/

[11:46] *** soursBot left
[11:55] *** soursBot joined
[11:56] *** leont joined
[12:04] *** __jrjsmrtn__ joined
[12:10] *** sena_kun joined
[12:12] *** Altai-man_ left
[12:13] <raku-bridge> <theangryepicbanana> Yay

[12:13] *** xinming left
[12:14] <tadzik> what is raku-bridge bridging to?

[12:14] <tadzik> ah, discord it seems

[12:15] *** sour joined
[12:15] <sour> wait, there's a raku discord? D:

[12:15] *** chloekek_ left
[12:15] *** xinming joined
[12:15] <tadzik> apparently

[12:16] *** sour left
[12:17] *** aborazmeh joined
[12:17] *** aborazmeh left
[12:17] *** aborazmeh joined
[12:19] *** Guest83733 joined
[12:19] *** Guest83733 is now known as xfix

[12:19] *** xfix left
[12:19] *** xfix joined
[12:19] *** xfix left
[12:19] *** xfix joined
[12:20] *** xfix left
[12:20] *** xfix joined
[12:23] *** xinming left
[12:23] <Geth> ¬¶ doc/containers-examples: f35ecec7ad | (Stoned Elipot)++ | doc/Language/containers.pod6

[12:23] <Geth> ¬¶ doc/containers-examples: whitespace styling

[12:23] <Geth> ¬¶ doc/containers-examples: review: https://github.com/Raku/doc/commit/f35ecec7ad

[12:25] *** xinming joined
[12:31] <Geth> ¬¶ doc: 0d5da03330 | (Stoned Elipot)++ | doc/Language/containers.pod6

[12:31] <Geth> ¬¶ doc: Add example's output

[12:31] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/0d5da03330

[12:31] <Geth> ¬¶ doc: f35ecec7ad | (Stoned Elipot)++ | doc/Language/containers.pod6

[12:31] <Geth> ¬¶ doc: whitespace styling

[12:31] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f35ecec7ad

[12:31] <Geth> ¬¶ doc: 71457b64c9 | Altai-man++ (committed using GitHub Web editor) | doc/Language/containers.pod6

[12:31] <Geth> ¬¶ doc: Merge pull request #3453 from Raku/containers-examples

[12:31] <linkable6> Link: https://docs.raku.org/language/containers

[12:31] <Geth> ¬¶ doc: 

[12:31] <Geth> ¬¶ doc: Add example's output

[12:31] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/71457b64c9

[12:37] *** chloekek_ joined
[12:39] *** wamba joined
[12:46] *** camelCaser left
[12:47] *** camelCaser joined
[12:48] <cpan-raku> New module released to CPAN! Math::Libgsl::Constants (0.0.5) by 03FRITH

[12:52] *** rbt joined
[12:52] *** suman joined
[12:52] <suman> m: use nqp; my @arr := ['work', 'job', 'study']; say nqp::join('_', @arr);

[12:52] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´This type (Array) does not support elems‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:53] <suman> can it be made to work in nqp?

[12:54] <suman> m: use nqp; my @arr := ['work', 'job', 'study']; say nqp::join('_', @arr);

[12:54] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´This type (Array) does not support elems‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:58] <jnthn> Could be written `my $arr := nqp::list('work', 'job', 'study')` instead

[12:58] *** skids joined
[13:05] *** soar joined
[13:07] *** wamba left
[13:07] *** wamba joined
[13:08] *** aborazmeh left
[13:11] *** marcusr left
[13:14] *** mahafyi joined
[13:17] *** marcusr joined
[13:21] *** lichtkind joined
[13:34] *** mm74 joined
[13:35] *** mm74 left
[13:37] *** xinming left
[13:38] *** xinming joined
[13:44] *** soar left
[13:49] *** soar joined
[13:52] *** bazzaar joined
[13:52] <bazzaar> o/ Raku

[13:55] <bazzaar> hi, does anyone know if DBIish can output the built sql query commands as text, not execute the actual query on the db?

[13:55] *** soursBot left
[13:56] <bazzaar> I'm just thinking it might be a useful function for debugging

[14:01] <bazzaar> the use case could be where using placeholders in a prepared insert query, and traversing a complicated data structure and populating the placeholders from different levels of the datastructure. 

[14:02] *** brtastic left
[14:03] *** soursBot joined
[14:03] <bazzaar> may also help to ensure data value glitches don't get pushed to db, a quick screening of the final text insert commands before doing the execute.

[14:05] *** sarna left
[14:06] *** mowcat left
[14:06] <suman> jnthn that works, I did not expect I had to assign a list to a scalar. 

[14:07] <jnthn> suman: NQP doesn't really do anything much with the sigil; that's one of its simplifications.

[14:09] *** Altai-man_ joined
[14:10] <suman> If I write a raku code in nqp, will it run faster?

[14:10] *** rbt left
[14:11] *** rbt joined
[14:11] *** sena_kun left
[14:15] <[Coke]> "maybe"

[14:15] <[Coke]> it's not worth doing it since nqp can change out from under you.

[14:16] <[Coke]> er, not worth doing if you're outside of core, I should say.

[14:20] <Geth> ¬¶ doc/master: 4 commits pushed by Coke++

[14:20] <Geth> ¬¶ doc/master: 02e4e0d2e7 | fix example compilation

[14:20] <Geth> ¬¶ doc/master: 46fa965f22 | make test executable directly

[14:20] <Geth> ¬¶ doc/master: f6c63274e1 | Fix compilation for this example

[14:20] <Geth> ¬¶ doc/master: 98a3702b1d | Add new words

[14:20] <Geth> ¬¶ doc/master: review: https://github.com/Raku/doc/compare/71457b64c959...98a3702b1db3

[14:21] *** Sgeo joined
[14:30] *** suman left
[14:32] *** soar left
[14:37] *** lucasb joined
[14:38] *** xinming left
[14:38] *** xinming joined
[15:05] *** aborazmeh joined
[15:05] *** aborazmeh left
[15:05] *** aborazmeh joined
[15:21] *** soursBot left
[15:23] *** KindTwo joined
[15:23] *** KindOne left
[15:24] *** andrzejku left
[15:27] *** KindTwo is now known as KindOne

[15:28] *** brtastic joined
[15:34] *** _jrjsmrtn joined
[15:36] *** __jrjsmrtn__ left
[15:42] *** Doc_Holliwould joined
[15:43] *** soursBot joined
[15:43] *** aborazmeh left
[15:44] *** holli__ joined
[15:45] *** Doc_Holliwood left
[15:45] *** aborazmeh joined
[15:45] *** aborazmeh left
[15:45] *** aborazmeh joined
[15:46] *** melezhik joined
[15:46] <melezhik> people keep posting URLs like "https://modules.raku.org/dist/IO::Prompt:cpan:WBIKER" to rakudist

[15:47] <melezhik> which makes me think maybe it worth to support none zef identities ?

[15:47] <melezhik> cc AlexDaniel`

[15:48] *** Doc_Holliwould left
[15:48] *** Doc_Holliwood joined
[15:50] *** Doc_Holliwould joined
[15:50] *** holli__ left
[15:53] *** holli__ joined
[15:54] *** Doc_Holliwood left
[15:56] *** Doc_Holliwood joined
[15:56] *** Doc_Holliwould left
[15:57] *** Xliff joined
[15:59] *** holli__ left
[16:03] *** devmikey joined
[16:10] *** sena_kun joined
[16:12] *** Altai-man_ left
[16:26] <jdv79> should autovivication be a "last wins" type deal in a multi assign?

[16:27] <jdv79> it seems raku does that but perl does not.  i found perl's handling more DWIMy.

[16:29] <jdv79> https://nopaste.linux-dev.org/?1318831

[16:29] <jdv79> should i report that as a bug or is that intentional?

[16:38] *** dakkar left
[16:41] *** rbt left
[16:41] *** rbt joined
[16:41] <jnthn> I believe Perl's one eagerly creates on first touch (so just looking can vivify); in Raku that doesn't happen, but yes, if there's nesting in cases like this then it would vivify a different hash in the top key

[16:49] <konvertex> m: <3 5 -2>.combinations.max({[*] $_}).say

[16:49] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´(3 5 -2)‚ê§¬ª

[16:49] <konvertex> m: <3 5 -2>.combinations.max({[*] |$_}).say

[16:49] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´(3 5)‚ê§¬ª

[16:49] <konvertex> What happens here?

[16:49] <jdv79> so maybe a trap note in the docs but it'll stay the way it is?

[16:51] <jnthn> jdv79: Most likely yes; I guess it's the trade-off of doing the other DWIM. It's not clear to me we can reasonably have both.

[16:52] <jdv79> ok, thanks!

[16:52] *** wamba left
[16:58] *** aborazmeh left
[16:58] *** bazzaar left
[17:26] *** mowcat joined
[17:40] *** rindolf left
[17:42] *** mahafyi left
[17:46] *** chloekek_ left
[17:48] *** soursBot left
[17:49] *** soursBot joined
[17:49] *** xinming left
[17:50] *** xinming joined
[18:09] *** Altai-man_ joined
[18:12] *** sena_kun left
[18:16] *** sauvin left
[18:17] *** Xliff left
[18:23] *** MasterDuke left
[18:26] *** Sgeo left
[18:28] *** jjatria left
[18:28] *** devmikey left
[18:31] *** jjatria joined
[18:32] *** mowcat left
[18:35] *** mscha joined
[18:35] *** AlexDaniel` left
[18:35] <mscha> m: my $x = 1/0; say "yes" if $x > 0; # Is it, though?

[18:35] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´yes‚ê§¬ª

[18:37] *** MasterDuke joined
[18:41] *** BlackChaosNL[m] left
[18:41] *** uzl[m] left
[18:42] *** tyil[m] left
[18:42] *** matiaslina left
[18:42] *** xfix left
[18:42] *** CIAvash left
[18:42] *** wildtrees[m] left
[18:42] *** unclechu left
[18:48] *** mowcat joined
[18:55] *** chloekek_ joined
[19:02] *** Sgeo joined
[19:02] <melezhik> it took 22 minutes to test CSS module on RakuDist, now sure why it's so long, from that almost 10 minutes zef built dependency tree, which is just a few modules 

[19:04] <melezhik> https://rakudist.raku.org/sparky/report/debian/152

[19:04] *** andrzejku joined
[19:04] *** mowcat left
[19:05] *** KindOne left
[19:05] *** KindTwo joined
[19:05] <melezhik> 18:31:14 06/01/2020  ... 18:52 

[19:06] <melezhik> oh, I see they are not just a few, but still imho 10 minutes to build a dependency tree a bit too much  

[19:06] <melezhik> somehow we need to think about zef performance improving in that case ...

[19:08] *** mowcat joined
[19:10] *** KindOne joined
[19:10] *** rbt left
[19:11] *** rbt joined
[19:11] *** KindTwo left
[19:17] *** KindOne left
[19:18] *** tyil[m] joined
[19:20] *** chloekek_ left
[19:37] <timotimo> that is impressive

[19:38] *** Black_Ribbon joined
[19:38] *** andrzejku left
[19:39] *** wildtrees[m] joined
[19:39] *** BlackChaosNL[m] joined
[19:39] *** Demos[m] joined
[19:39] *** AlexDaniel` joined
[19:39] *** xfix joined
[19:39] *** unclechu joined
[19:39] *** CIAvash joined
[19:39] *** matiaslina joined
[19:39] *** uzl[m] joined
[19:41] *** MasterDuke left
[19:43] *** xinming_ joined
[19:45] *** xinming left
[19:51] *** xinming_ left
[19:52] *** xinming_ joined
[19:57] *** NODE left
[19:58] *** NODE joined
[19:59] *** mscha left
[20:01] *** melezhik left
[20:02] *** melezhik joined
[20:05] *** mowcat left
[20:05] *** soursBot left
[20:10] *** sena_kun joined
[20:12] *** Altai-man_ left
[20:14] *** KindOne joined
[20:14] *** lichtkind_ joined
[20:15] *** lichtkind left
[20:16] *** MasterDuke joined
[20:22] *** sena_kun left
[20:24] *** soursBot joined
[20:34] *** soursBot left
[20:37] *** gdonald left
[20:45] *** orinthe left
[20:46] *** orinthe joined
[20:49] *** xinming_ left
[20:49] *** xinming_ joined
[21:01] *** mscha joined
[21:02] <mscha> m: .say for 0/0 == 0, 0/0 > 0, 0/0 >= 0; # oh really?

[21:02] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´False‚ê§False‚ê§True‚ê§¬ª

[21:05] <mscha> m: say (1e0/0).raku; # makes sense

[21:05] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Failure.new(exception => X::Numeric::DivideByZero.new(using => "/", details => Any, numerator => 1e0), backtrace => Backtrace.new)‚ê§¬ª

[21:06] <mscha> m: say (1/0).raku; # shouldn't this be a Failure as well?

[21:06] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´<1/0>‚ê§¬ª

[21:06] *** cpan-raku left
[21:08] *** cpan-raku joined
[21:08] *** cpan-raku left
[21:08] *** cpan-raku joined
[21:18] *** chloekek_ joined
[21:19] *** mscha left
[21:21] <[Coke]> m: say (1/0)

[21:21] <camelia> rakudo-moar 62adc88c6: OUTPUT: ¬´Attempt to divide by zero when coercing Rational to Str‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:21] <[Coke]> ^^ this one actually tries to calculate the value. .raku is giving you the object itself without trying to evaluate it.

[21:21] <[Coke]> the Failure is deferred as long as possible.

[21:30] *** molaf joined
[21:33] *** AlexDaniel joined
[21:34] *** AlexDaniel left
[21:34] *** AlexDaniel joined
[21:38] <timotimo> until it has reached the point between keyboard and chair

[21:39] *** mowcat joined
[21:40] <hobbs> I'm guessing >= is true because < is false... someone applied some logic that doesn't work for incomparables :)

[21:43] *** KindOne left
[21:47] *** KindOne joined
[21:54] *** KindTwo joined
[21:56] *** KindOne left
[21:59] *** KindTwo is now known as KindOne

[22:03] *** skids left
[22:06] *** gd___ joined
[22:06] *** gd___ is now known as gdonald

[22:13] *** brtastic left
[22:18] <melezhik> Hi! https://github.com/melezhik/Sparrow6/blob/master/lib/Sparrow6/Task/Runner/Helpers/Common.pm6#L90-L157

[22:19] <melezhik> Sparrow uses that code to run sub processes, if there is any way to disable buffering to make time stamps in log more sensible ? 

[22:20] <melezhik> for example here I see buffered log, and timestamps do not reflect real picture, because obviously zef test does happen immediately - https://github.com/ugexe/zef/issues/353#issuecomment-637154222 

[22:26] <melezhik> So basically I am talking how to disable stdout/stderr buffereing when run process using Proc::Async

[22:30] <[Coke]> https://docs.raku.org/routine/out-buffer ?

[22:31] <[Coke]> ah. if it's in a proc::async... I think you're going to get some buffering just because it's going through a Supply.

[22:33] <melezhik> yeah, probably it's not buffering itself that concerns me most, but Sparrow waiting for something before it closes child process 

[22:34] <melezhik> may be it's not the case, but to see this I need first of all somehow disable buffering ...

[22:35] <melezhik> [Coke] how do suppose to use out-buffer to deal with it?

[22:36] <jdv79> if its any help i think i've seen that when running zef in a docker build 

[22:36] <jdv79> just haven't cared to check it out yet

[22:38] *** sena_kun joined
[22:41] *** chloekek_ left
[22:58] *** wamba joined
[23:00] *** sena_kun left
[23:02] *** pecastro left
[23:02] *** wamba left
[23:04] *** wamba joined
[23:20] <melezhik> Never mind Sparrow 

[23:20] <melezhik> Sparrow waits something, it's just buffering

[23:21] <melezhik> so I need to know how to manage size of buffering and flush it, when run processes through Proc:Async, if possible ))) 

[23:59] *** mowcat left
[23:59] *** hyperak left
[23:59] *** hyperak joined
