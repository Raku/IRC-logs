[00:05] *** seanrobert joined
[00:06] *** riatre joined
[00:11] *** seanrobert left
[00:16] <guifa> codesections: sorry just got home, but yeah, it does indeed look like for some reason it‚Äôs backtracking

[00:19] <codesections> That's what I concluded.  I decided it was worth opening an issue: https://github.com/rakudo/rakudo/issues/3890

[00:27] *** fooist left
[00:29] <guifa> Also wow.  My InlineTest module is probably my most popular one yet 

[00:30] <guifa> I haven‚Äôt even added it to ecosystem yet lolol

[00:30] <guifa> but codesections++ ty for the idea :-)

[00:45] *** wamba left
[00:46] *** seanrobert joined
[00:47] *** seanrobert left
[00:56] *** Doc_Holliwould left
[01:20] *** zacts joined
[01:23] *** Cabanoss- left
[01:27] *** zacts left
[01:29] *** molaf_ joined
[01:29] *** Cabanossi joined
[01:32] *** molaf left
[02:03] *** Tirifto left
[02:18] *** randyl22 joined
[02:20] <randyl22> if a subroutine has 2 optional positional parameters with default values, is there a way to use the default value for the 1st and pass in a value for the 2nd?

[02:21] *** Cabanossi left
[02:29] *** Cabanossi joined
[02:55] *** randyl22 left
[03:55] *** sourceable6 left
[03:55] *** committable6 left
[03:55] *** benchable6 left
[03:55] *** notable6 left
[03:55] *** linkable6 left
[03:55] *** coverable6 left
[03:55] *** quotable6 left
[03:55] *** greppable6 left
[03:55] *** releasable6 left
[03:55] *** shareable6 left
[03:55] *** statisfiable6 left
[03:55] *** tellable6 left
[03:55] *** unicodable6 left
[03:55] *** reportable6 left
[03:55] *** evalable6 left
[03:55] *** bisectable6 left
[03:55] *** squashable6 left
[03:55] *** nativecallable6 left
[03:55] *** bloatable6 left
[03:56] *** statisfiable6 joined
[03:56] *** bisectable6 joined
[03:57] *** quotable6 joined
[03:57] *** squashable6 joined
[03:57] *** tellable6 joined
[03:57] *** committable6 joined
[03:57] *** shareable6 joined
[03:57] *** unicodable6 joined
[03:57] *** linkable6 joined
[03:57] *** bloatable6 joined
[03:58] *** nativecallable6 joined
[03:58] *** evalable6 joined
[03:58] *** reportable6 joined
[03:58] *** notable6 joined
[03:58] *** coverable6 joined
[03:59] *** sourceable6 joined
[03:59] *** releasable6 joined
[03:59] *** greppable6 joined
[03:59] *** benchable6 joined
[04:57] *** Chi1thangoo left
[04:57] *** Chi1thangoo joined
[04:57] *** reportable6 left
[04:58] *** reportable6 joined
[04:58] *** benchable6 left
[04:58] *** benchable6 joined
[04:58] *** Chi1thangoo_ joined
[05:01] *** jhill left
[05:01] *** sftp left
[05:01] *** Chi1thangoo left
[05:01] *** nebuchadnezzar left
[05:02] *** jhill joined
[05:02] *** yuplushi left
[05:02] *** nebuchadnezzar joined
[05:02] *** sftp joined
[05:03] *** AlexDani` left
[05:03] *** AlexDani` joined
[05:06] *** silug left
[05:06] *** silug joined
[05:06] *** leah2 left
[05:07] <cpan-raku> New module released to CPAN! Fcntl (0.0.2) by 03MSTEMLE

[05:08] *** greppable6_ joined
[05:09] *** yuplushi joined
[05:09] *** elcaro_ joined
[05:09] *** releasable6_ joined
[05:11] *** leah2 joined
[05:11] *** greppable6 left
[05:11] *** releasable6 left
[05:11] *** elcaro left
[05:11] *** KotH left
[05:11] *** KotH joined
[05:12] *** tigerpaws left
[05:15] *** tigerpaws joined
[05:28] *** Doc_Holliwould joined
[05:44] *** bocaneri joined
[05:53] *** skids left
[06:12] <moritz> randyl22: if they are named parameters, it's pretty easy :-)

[06:13] <tellable6> moritz, I'll pass your message to randyl22

[06:32] *** rindolf joined
[06:46] *** randyl22 joined
[06:48] <randyl22> moritz: that's what I wound up doing. I was just curious, though. I thought if I passed Nil for the 1st arg, it would cause the default to be used, but that didn't seem to be the case.

[06:49] <tellable6> 2020-08-29T06:13:01Z #raku <moritz> randyl22: if they are named parameters, it's pretty easy :-)

[06:51] *** randyl22 left
[06:58] *** approaching236 joined
[07:18] *** hungrydonkey joined
[07:26] *** tobias_ left
[07:26] *** zxcvz joined
[07:30] *** molaf_ left
[07:31] *** maggotbrain left
[07:32] *** maggotbrain joined
[07:36] *** aborazmeh joined
[07:36] *** aborazmeh left
[07:36] *** aborazmeh joined
[07:56] *** Doc_Holliwould left
[07:58] *** rindolf left
[08:02] *** maggotbrain left
[08:48] *** rindolf joined
[09:06] *** kylese joined
[09:07] *** kylese left
[09:07] *** kylese joined
[09:10] *** kylese left
[09:12] *** Sgeo_ left
[09:15] *** kylese joined
[09:15] *** hungrydonkey left
[09:19] *** kylese left
[09:22] *** hungrydonkey joined
[09:24] *** aborazmeh left
[09:26] *** wamba joined
[09:27] *** wamba left
[09:27] *** wamba joined
[09:41] <cpan-raku> New module released to CPAN! App::Mi6 (1.0.3) by 03SKAJI

[09:45] *** Noisytoot joined
[10:01] *** zakame joined
[10:09] *** wamba left
[10:43] *** finanalyst joined
[10:51] *** pecastro joined
[10:52] *** leont joined
[10:54] <cpan-raku> New module released to CPAN! Math::Libgsl::MovingWindow (0.0.1) by 03FRITH

[11:02] <cpan-raku> New module released to CPAN! Math::Libgsl::Matrix (0.2.0) by 03FRITH

[11:06] *** wamba joined
[11:16] *** Noisytoot left
[11:35] *** rindolf left
[11:37] *** rindolf joined
[12:00] *** ambs joined
[12:02] *** AlexDani` is now known as AlexDaniel

[12:02] *** AlexDaniel left
[12:02] *** AlexDaniel joined
[12:11] *** aborazmeh joined
[12:11] *** aborazmeh left
[12:11] *** aborazmeh joined
[12:22] *** hungrydonkey left
[12:31] *** finanalyst left
[12:34] *** molaf joined
[12:44] *** aborazmeh left
[13:07] *** _jrjsmrtn left
[13:08] *** __jrjsmrtn__ joined
[13:20] *** cpan-raku left
[13:21] *** cpan-raku joined
[13:21] *** cpan-raku left
[13:21] *** cpan-raku joined
[13:28] *** gnufr33dom joined
[13:29] *** norbi joined
[13:30] *** norbi left
[13:33] *** mendel joined
[13:35] *** gnufr33dom left
[13:39] *** gnufr33dom joined
[13:44] *** wamba left
[13:46] <mendel> hi Folks!

[13:46] <mendel> m: multi sub postfix:<+++>(Int) { "int" }; multi sub postfix:<+++>(Whatever) { "whatever" }; dd *+++;

[13:46] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´WhateverCode.new‚ê§¬ª

[13:47] <mendel> i was expecting it to print <<whatever\n>> - what did i miss?

[14:15] *** zakame left
[14:16] <masak> mendel: that the `*` term in expressions create a small "whatevercode" expression, like an auto-lambda-ing... thing

[14:16] <masak> m: say * + 2

[14:16] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´WhateverCode.new‚ê§¬ª

[14:17] *** zakame joined
[14:17] <masak> m: say (* + 2)(40)

[14:17] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´42‚ê§¬ª

[14:18] <masak> m: multi sub postfix:<+++>(Int) { "int" }; multi sub postfix:<+++>(Whatever) { "whatever" }; say (*+++)(*)

[14:18] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´whatever‚ê§¬ª

[14:18] <masak> m: multi sub postfix:<+++>(Int) { "int" }; multi sub postfix:<+++>(Whatever) { "whatever" }; say (*+++)(42)

[14:18] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´int‚ê§¬ª

[14:18] * masak is in a maze of twisty little abstractions, all alike

[14:24] <mendel> masak: yup, my point is that my postfix:<+++> was supposed to be Whatever-aware (like eg. infix:<..> is) and not relying on auto-priming

[14:26] <mendel> i was expecting the compiler to see that i have a multi candidate for Whatever, to signal that it wants the Whatever object instead of a WhateverCode object

[14:26] <codesections> masak: go NORTH

[14:27] <tbrowder> hi, i'm having trouble with openss

[14:28] <tbrowder> module OpenSSL

[14:28] <lucs> mendel!!!

[14:29] <tbrowder> cannot find my native library which is in a non-standard place and is installed from source from openssl 1.1.1g

[14:30] *** ambs left
[14:30] <tbrowder> do i need a special symlink?

[14:31] <masak> mendel: I know -- I guess the easy explanation is that compiler/syntax gets first dibs on decidion, and it decides that your expression is an abstraction

[14:31] *** ambs joined
[14:32] <masak> mendel: it's a bit similar to if you define a `->` infix operator -- totally fine to do, but in a battle between it and the pointy-block syntax, your nifty operator meets a crushing defeat

[14:33] <mendel> m: .raku.say for &infix:<xx>.cando(\(42, *)

[14:33] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3.raku.say for &infix:<xx>.cando(\(42, *)7‚èè5<EOL>‚ê§¬ª

[14:33] <mendel> m: .raku.say for &infix:<xx>.cando(\(42, *))

[14:33] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´multi sub infix:<xx> (Mu \x, Whatever $) { #`(Sub|77370832) ... }‚ê§multi sub infix:<xx> (Mu \x, Num:D(Any):D $n) { #`(Sub|77370688) ... }‚ê§¬ª

[14:33] <masak> mendel: this is also similar to how (currently, in Rakudo) infix:<&&> and infix:<||> can not be overridden, because they have magical voodoo thunkish behavior that needs support from the compiler

[14:34] <mendel> i mean if the compiler always wins and auto-primes any operators when it sees a Whatever-star, then what's the point of the above multi candidate for infix:<xx>?

[14:39] <tbrowder> same problem with other cro ssl dependencies

[14:39] <mendel> yes, i see why `->` and infix:<&&> and infix:<||> are special - OTOH the un-conditional auto-priming of any operator sounds a bit confusing (considering that some operators have multi candidates with Whatever params) 

[14:40] <mendel> i mean, i can understand that there's some reason why user-defined ops cannot have it, just i wonder why or if it was just me doing it the wrong way

[14:41] <mendel> thanks anyways!

[14:41] <lucs> mendel: Doing some Raku these days?

[14:58] *** zacts joined
[15:15] *** zacts left
[15:19] *** maggotbrain joined
[15:28] <tbrowder> i'm reporting public website access success with non-tls cro reverse proxy on apache. see http://florida-candidates.us

[15:29] <tbrowder> going to try tls next with a managed domain...

[15:47] *** tigerpaws left
[15:48] *** tigerpaws joined
[15:51] <Geth> ¬¶ doc: 1b08242be7 | Coke++ | xt/final-newline.t

[15:51] <Geth> ¬¶ doc: cleanup...

[15:51] <Geth> ¬¶ doc: 

[15:51] <Geth> ¬¶ doc: ...leftovers from the whitespace test we copied from

[15:51] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/1b08242be7

[15:54] *** guifa left
[15:56] *** tigerpaws left
[16:09] <Geth> ¬¶ doc: e2c7a87d12 | Coke++ | doc/Type/Signature.pod6

[16:09] <Geth> ¬¶ doc: Remove unneeded augment, update explanation

[16:09] <Geth> ¬¶ doc: 

[16:09] <Geth> ¬¶ doc: Closes #3455

[16:09] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/e2c7a87d12

[16:09] <linkable6> Link: https://docs.raku.org/type/Signature

[16:09] <linkable6> DOC#3455 [closed]: https://github.com/Raku/doc/issues/3455 [docs][xt] xt/examples-compilation.t doc/Type/Signature.pod6 failing

[16:22] *** guifa joined
[16:22] *** finanalyst joined
[16:29] *** hungrydonkey joined
[16:31] *** approaching236 left
[16:36] <Geth> ¬¶ problem-solving: fecundf assigned to jnthn Issue Extended identifiers- reserving :sym<...> scares me https://github.com/Raku/problem-solving/issues/225

[16:55] *** wamba joined
[17:07] *** zacts joined
[17:46] <moritz> hi all. Currently on vacation with crippled Internet (no SSH, no IRC ports open), so if you want to reach me, try email :-)

[17:47] <codesections> ... so how are you sending us that message on IRC?

[17:47] <codesections> :D

[17:47] <moritz> mobile hotspot

[17:48] <codesections> I guess IRC doesn't take much bandwidth! 

[17:48] <moritz> yeah, but I have to switch my whole laptopt to mobile bandwidth, so I won't be doing that all the time

[17:49] <moritz> bye bye

[17:49] <codesections> Very reasonable.  And besides -- you're on vacation!

[17:52] *** gnufr33dom left
[18:11] *** Sgeo joined
[18:14] <Geth> ¬¶ ecosystem: alabamenhu++ created pull request #532: Add Test::Inline

[18:14] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/pull/532

[18:16] <tobs> m: multi sub postfix:<+++>(Int) { "int" }; multi sub postfix:<+++>(Whatever) { "whatever" }; say Whatever.new+++

[18:16] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´whatever‚ê§¬ª

[18:18] <tobs> what has special behavior in the compiler is only the `*` token which is otherwise an instance of Whatever. This is not what you want, probably, but you could have your own non-compiler whatever term and get in a habit of using that in places where you don't want currying to happen.

[18:20] <tobs> m: multi sub postfix:<+++>(Int) { "int" }; multi sub postfix:<+++>(Whatever) { "whatever" }; sub term:<‚Ä†> { state $‚Ä† = Whatever.new }; say ‚Ä†+++

[18:20] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Name must begin with alphabetic character‚ê§at <tmp>:1‚ê§------> 3) { "whatever" }; sub term:<‚Ä†> { state $7‚èè5‚Ä† = Whatever.new }; say ‚Ä†+++‚ê§    expecting any of:‚ê§        constraint‚ê§     ‚Ä¶¬ª

[18:20] <tobs> m: multi sub postfix:<+++>(Int) { "int" }; multi sub postfix:<+++>(Whatever) { "whatever" }; sub term:<‚Ä†> { state $ = Whatever.new }; say ‚Ä†+++

[18:20] <camelia> rakudo-moar fc75105fb: OUTPUT: ¬´whatever‚ê§¬ª

[18:29] <Geth> ¬¶ ecosystem: e270637bac | L'Alabame√±u++ (committed using GitHub Web editor) | META.list

[18:29] <Geth> ¬¶ ecosystem: Add Test::Inline

[18:29] <Geth> ¬¶ ecosystem: 

[18:29] <Geth> ¬¶ ecosystem: See subject ^_^

[18:29] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/e270637bac

[18:29] <Geth> ¬¶ ecosystem: 38e40133f5 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[18:29] <Geth> ¬¶ ecosystem: Merge pull request #532 from alabamenhu/patch-9

[18:29] <Geth> ¬¶ ecosystem: 

[18:29] <Geth> ¬¶ ecosystem: Add Test::Inline

[18:29] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/38e40133f5

[18:35] *** aluaces joined
[18:44] <Geth> ¬¶ doc: mendel++ created pull request #3599: Restore epub and bigpage

[18:44] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3599

[18:45] *** kensanata joined
[19:45] *** committable6 left
[19:45] *** greppable6_ left
[19:45] *** releasable6_ left
[19:45] *** reportable6 left
[19:45] *** benchable6 left
[19:45] *** sourceable6 left
[19:45] *** unicodable6 left
[19:45] *** squashable6 left
[19:45] *** statisfiable6 left
[19:45] *** nativecallable6 left
[19:45] *** quotable6 left
[19:45] *** bisectable6 left
[19:45] *** tellable6 left
[19:45] *** shareable6 left
[19:45] *** linkable6 left
[19:45] *** bloatable6 left
[19:45] *** evalable6 left
[19:45] *** notable6 left
[19:45] *** coverable6 left
[19:45] *** committable6 joined
[19:45] *** statisfiable6 joined
[19:46] *** nativecallable6 joined
[19:46] *** quotable6 joined
[19:46] *** sourceable6 joined
[19:46] *** bisectable6 joined
[19:46] *** linkable6 joined
[19:46] *** evalable6 joined
[19:46] *** unicodable6 joined
[19:47] *** releasable6 joined
[19:47] *** benchable6 joined
[19:47] *** greppable6 joined
[19:47] *** squashable6 joined
[19:47] *** shareable6 joined
[19:48] *** reportable6 joined
[19:48] *** tellable6 joined
[19:48] *** bloatable6 joined
[19:48] *** notable6 joined
[19:48] *** coverable6 joined
[20:12] *** gnufr33dom joined
[20:20] *** rindolf left
[20:29] *** zacts left
[21:04] *** rir left
[21:05] *** zakame left
[21:07] *** zakame joined
[21:09] *** Tirifto joined
[21:15] *** oddp joined
[21:47] *** Manifest0 joined
[22:03] *** zakame left
[22:04] *** zakame joined
[22:23] *** aluaces left
[22:29] *** oddp left
[22:30] *** Mawile left
[22:39] <Geth> ¬¶ doc: codesections++ created pull request #3601: Update method signatures to include *%_

[22:39] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3601

[22:45] <mendel> masak & tobs: i found it finally, indeed it's NYI and should later use the multi signatures to decide whether to auto-prime: https://github.com/rakudo/rakudo/blob/master/src/Perl6/Actions.nqp#L9968

[22:46] <mendel> thanks for the answers to both of you

[22:51] *** Xliff joined
[22:51] <Xliff> \

[22:51] <Xliff> \o even

[22:52] *** kensanata left
[22:53] <Geth> ¬¶ doc/master: 10 commits pushed by (Daniel Sockwell)++

[22:53] <Geth> ¬¶ doc/master: review: https://github.com/Raku/doc/compare/e2c7a87d1203...9a87be827b74

[22:59] <Xliff> mendel: Good stuff! 

[23:27] *** pelev joined
[23:29] *** pelev left
[23:34] *** pecastro left
