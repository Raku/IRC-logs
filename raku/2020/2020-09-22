[00:19] *** BenGoldberg joined
[00:34] *** approaching236 left
[00:36] *** mowcat left
[00:42] *** leont left
[00:44] *** aborazmeh joined
[00:44] *** aborazmeh left
[00:44] *** aborazmeh joined
[01:08] *** marcusr left
[01:08] *** marcusr joined
[01:13] *** elcaro left
[01:14] *** stoned75 left
[01:20] *** elcaro joined
[01:25] *** stoned75 joined
[01:30] <ggoebel> I would like to thank everyone who put themselves forward as nominees to serve on the RSC. Congratulations and condolences to those who were elected. I do not envy you the often thankless task of governance and cat herding. Condolences and congratulations to those who will not be serving. I appreciate that you put yourself out there and were willing to serve.

[01:30] <tellable6> hey ggoebel, you have a message: https://gist.github.com/ece2ae9ad7a28c2e781fb259fe21a350

[01:36] *** elcaro left
[01:46] *** aborazmeh left
[01:50] *** elcaro joined
[02:00] <Geth> ¦ Raku-Steering-Council/main: bfaf089926 | (Nick Logan)++ (committed using GitHub Web editor) | nominations/2020/acceptance.txt

[02:00] <Geth> ¦ Raku-Steering-Council/main: Update acceptance.txt

[02:00] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/bfaf089926

[02:30] *** guifa2 joined
[02:31] <guifa2> rypervenche: big update to the editor.  Now it'll save your edits and let you download a new copy of it.  Haven't extensively tested the saved files, but they seem to be an accurate copy

[02:32] <guifa2> err meant that for /msg but works for everyone too ha.  Intl::X now has a localization editor that works in browser and lets your run actual real Raku code to test things

[02:33] *** zacts joined
[02:59] *** BenGoldberg left
[02:59] *** Ben_Goldberg joined
[02:59] *** Ben_Goldberg is now known as BenGoldberg

[03:00] *** Mawile left
[03:12] *** dead10cc joined
[03:26] *** BenGoldberg left
[03:26] *** BenGoldberg joined
[03:41] *** zacts left
[04:06] *** rba left
[04:07] *** rba_ joined
[04:07] *** rba_ is now known as rba

[04:10] *** molaf joined
[04:11] *** BenGoldberg left
[04:17] *** molaf left
[04:26] *** dead10cc left
[04:50] *** aluaces joined
[05:01] *** ex_nihilo joined
[05:12] *** oodani_ left
[05:13] *** oodani joined
[05:15] *** abraxxa left
[05:18] *** abraxxa joined
[05:20] *** stoned75 left
[05:22] *** stoned75 joined
[05:26] *** dogbert17 joined
[05:28] *** dogbert11 left
[05:34] *** skids left
[05:47] *** aluaces left
[05:58] *** zacts joined
[05:58] *** maggotbrain left
[06:00] *** maggotbrain joined
[06:12] *** aluaces joined
[06:19] *** Sgeo left
[06:20] *** aborazmeh joined
[06:20] *** aborazmeh left
[06:20] *** aborazmeh joined
[06:21] *** yuplushi left
[06:22] <Geth> ¦ Raku-Steering-Council/acceptance-jj: 0ea2b886e7 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | nominations/2020/acceptance.txt

[06:22] <Geth> ¦ Raku-Steering-Council/acceptance-jj: Adds myself

[06:22] <Geth> ¦ Raku-Steering-Council/acceptance-jj: review: https://github.com/Raku/Raku-Steering-Council/commit/0ea2b886e7

[06:22] <Geth> ¦ Raku-Steering-Council: JJ++ created pull request #36: Adds myself

[06:22] <Geth> ¦ Raku-Steering-Council: review: https://github.com/Raku/Raku-Steering-Council/pull/36

[06:27] *** jmerelo joined
[06:27] <jmerelo> releasable6: status

[06:27] <releasable6> jmerelo, Next release will happen when it's ready. 3 blockers. Changelog for this release was not started yet

[06:27] <releasable6> jmerelo, Details: https://gist.github.com/03a88eb832c8d96dfe5278db4bad6a65

[06:31] *** ggoebel left
[06:31] *** yuplushi joined
[06:33] *** patrickb joined
[06:46] *** Altai-man joined
[07:02] *** BenGoldberg joined
[07:03] *** sena_kun joined
[07:05] *** leont joined
[07:05] *** Altai-man left
[07:11] *** aluaces left
[07:20] <jmerelo> zoffix is back: https://github.com/rakudo/rakudo/issues/3929

[07:30] *** dakkar joined
[07:35] *** BenGoldberg left
[07:42] * lizmat clickbaits https://rakudoweekly.blog/2020/09/21/2020-38-council-results/

[07:54] *** rindolf joined
[08:20] *** patrickb left
[08:22] *** Altai-man joined
[08:24] *** sena_kun left
[08:51] *** jmerelo left
[09:02] <El_Che> lo

[09:35] <moritz> lizmat++

[09:43] *** Black_Ribbon left
[10:19] *** jast joined
[10:26] *** nige left
[10:26] *** nige_ joined
[10:26] *** BenGoldberg joined
[10:58] *** telex left
[10:58] *** telex joined
[11:00] *** BenGoldberg left
[11:35] <tbrowder> congratulations to the newly elected RSC members! Ilook forward to interesting things coming from the "head shed."

[12:00] *** evalable6 left
[12:00] *** linkable6 left
[12:01] *** linkable6 joined
[12:02] *** evalable6 joined
[12:02] *** aluaces joined
[12:17] *** ggoebel joined
[12:18] <Altreus> How do I print binary data to a Proc? It's currently in a Blob[uint8] 

[12:19] <Altreus> .print tries to .Str it and then tells me off

[12:21] *** nebuchadnezzar left
[12:23] *** ggoebel left
[12:23] *** sena_kun joined
[12:23] <sena_kun> Altreus, .write?

[12:24] <Altreus> ah!

[12:24] <Altreus> how did you do that

[12:24] <Altreus> You joined after I asked but answered anyway!

[12:25] <sena_kun> Altreus, that's magic!

[12:25] *** Altai-man left
[12:34] <Altreus> that's numberwang

[12:36] *** ex_nihilo left
[12:46] *** aborazmeh left
[12:50] *** ggoebel joined
[13:09] *** mowcat joined
[13:17] *** _jrjsmrtn joined
[13:18] *** __jrjsmrtn__ left
[13:31] *** domidumont joined
[13:40] <Xliff> Um... if Raku bindings could be made for the header files listed at the bottom of this page: https://docstore.mik.ua/orelly/apache_mod/124.htm

[13:41] <Xliff> How difficult would it be to then link Cro into Apache?

[13:41] <sena_kun> Xliff, not sure how anyone can give estimates. "How difficult" depends on so many things.

[13:42] <Xliff> I don't care if there are more than one.

[13:42] <Xliff> Although a path of least resistence estimate would be nice.

[13:44] <Xliff> So I would be interested in keeping Cro::Router, and everything associated, but let Apache deal with the heavy lifting of protocol level communication.

[13:46] <sena_kun> Xliff, Cro can do that, yes. Router is just a transform that takes a request and returns a response, so if you can write sink/source using natives - yes.

[13:47] <sena_kun> The question is more about writing bindings for all that and using them in a working way to transfer data.

[13:47] <sena_kun> While Cro part is not so hard: having a source and a sink, just slap in there a router, compose, you're done.

[13:48] <codesections> Xliff: any particular reason you mention Apache as opposed to other servers?  Or did you just use them as an example of a server that could play that role?

[13:49] <timotimo> hm, no bindings to libav, eh?

[13:51] *** Sgeo joined
[13:52] *** BenGoldberg joined
[13:53] *** aborazmeh joined
[13:53] *** aborazmeh left
[13:53] *** aborazmeh joined
[13:59] *** zacts left
[14:00] *** zacts joined
[14:01] <Xliff> codesections: There is no reason that Apache be the only one.

[14:01] <Xliff> It's just that's the webserver I "grew up" on, so it's always at the front of my mind.

[14:02] <Xliff> codesections: The only real limitation is this: a public API

[14:03] <Xliff> timotimo: Wanna write some? :)

[14:03] <codesections> Xliff: totally fair.  I've mostly grown up on nginx, but know that a lot of people really like Apache  

[14:05] <Xliff> codesections: Plus, I was reading up on writing modules for Apache while musing about things. 

[14:06] <Xliff> Would totally be neat to take a class to serve as entry-point, break it down. Write an APXS .c around it to compile and use as a module for Apache.

[14:06] <Xliff> That was my initial thought any way. Other webservers would be a variation of this.

[14:11] <codesections> I just asked this on r/rakulang, but thought I'd ask here too:  How would you describe Raku in one sentence? https://www.reddit.com/r/rakulang/comments/ixo408/how_would_you_describe_raku_in_one_sentence/

[14:15] <Xliff> codesections: "The language where one sentense is not enough to do it justice."

[14:16] <Xliff> :)]

[14:23] <codesections> fair (though not super helpful!).  Here's my attempt:

[14:23] <codesections> a concise, expressive, multiparadigm language supporting gradual typing, parallelism & concurrency, rich metaprogramming/introspection, and best-in-class string processing and pattern matching.

[14:25] *** aluaces left
[14:26] *** BenGoldberg left
[14:31] <codesections> revised for punchiness: «Raku is a concise, expressive, aggressively multiparadigm language that supports gradual typing, built-in concurrency, rich metaprogramming, and best-in-class string processing and pattern matching»

[14:35] * [Coke] finds (๑˃̵ᴗ˂̵)و sitting in a text file in his home dir

[14:36] <Xliff> [Coke]: Next time, lock your doors. :)

[14:37] <Xliff> codesections: Much better! I think mine came from a distinct desire to be laszy. Glad to have you around!

[14:37] <[Coke]> Xliff: ha

[14:38] *** jmerelo joined
[14:43] *** mowcat left
[14:53] *** nebuchadnezzar joined
[14:57] *** sno left
[14:59] *** sno joined
[15:02] <Geth> ¦ doc: 40837a1d98 | (Patrick Böker)++ (committed using GitHub Web editor) | doc/Type/IO/Path.pod6

[15:02] <Geth> ¦ doc: `IO::Path.x` gives false-positives for scripts

[15:02] <Geth> ¦ doc: 

[15:02] <Geth> ¦ doc: Add a note saying so. May this save some future reader some grief.

[15:02] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/40837a1d98

[15:02] <linkable6> Link: https://docs.raku.org/type/IO::Path

[15:10] *** jmerelo left
[15:13] *** Tirifto joined
[15:13] *** zacts left
[15:13] *** xinming joined
[15:14] *** MasterDuke left
[15:16] *** xinming_ left
[15:17] *** molaf joined
[15:19] <guifa2> codesections: I think Raku like legos.  You can go simple or complex, but the deeper and bigger you go the more its beauty shows.

[15:21] <codesections> guifa2: I agree.  The problem with that, though, is that you can pretty much s/Raku/programming/ and have that still be true.  Now, it's _more_ true of Raku, but that sentence doesn't do a lot to convey that/why that's true

[15:34] *** zacts joined
[15:49] *** Archenoth joined
[15:57] *** zacts left
[15:57] *** zacts joined
[15:59] <JJAtria[m]> I really liked how lichtkind described Raku at the conference in Glasgow a couple of years back: like an English garden

[15:59] <JJAtria[m]> At first it looks wild and messy, but as you explore it you find vantage points that cut across the language, and realise that there is a pervasive consistency in its design

[15:59] <JJAtria[m]> I think about it often actually :')

[16:00] *** MasterDuke joined
[16:04] <codesections> JJAtria[m]: I _think_ I really like that.  I haven't experienced an English garden of the sort it's describing, so the analogy loses a bit of its power – but I can certainly imagine it

[16:07] <Geth> ¦ doc: 8a22fcc235 | Coke++ | xt/check-signatures.t

[16:07] <Geth> ¦ doc: Make test respect TEST_FILES

[16:07] <Geth> ¦ doc: 

[16:07] <Geth> ¦ doc: Closes #3611

[16:07] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/8a22fcc235

[16:07] <linkable6> DOC#3611 [closed]: https://github.com/Raku/doc/issues/3611 [xt] xt/check-signatures.t doesn't respect TEST_FILES 

[16:08] <JJAtria[m]> I can't remember what garden he used at the time to illustrate, but I've had that experience in Kew Gardens, so it really clicked with me

[16:09] *** cpan-raku left
[16:10] *** eery left
[16:10] *** cpan-raku joined
[16:10] *** cpan-raku left
[16:10] *** cpan-raku joined
[16:11] *** eery joined
[16:13] *** jmerelo joined
[16:15] *** mowcat joined
[16:20] *** ggoebel left
[16:22] *** Altai-man joined
[16:25] *** sena_kun left
[16:28] *** skids joined
[16:32] *** alekc joined
[16:33] *** alekc left
[16:34] *** dakkar left
[16:39] *** domidumont left
[16:53] *** hungrydonkey joined
[16:55] *** aborazmeh left
[16:55] *** approaching236 joined
[17:03] *** patrickb joined
[17:05] *** dead10cc joined
[17:17] *** BenGoldberg joined
[17:20] *** dead10cc left
[17:25] *** aluaces joined
[17:26] *** mowcat left
[17:28] <AlexDaniel> codesections: very good question, btw!

[17:30] <codesections> thanks :)

[17:34] *** dead10cc joined
[17:37] * [Coke] tries to get work to use the HALFWIDTH CORNER BRACKETS to highlight some stuff in our product.

[17:51] *** BenGoldberg left
[17:58] *** natrys joined
[18:02] *** reportable6 left
[18:04] *** molaf left
[18:06] *** reportable6 joined
[18:16] *** dead10cc left
[18:17] *** tejr left
[18:17] *** tejr joined
[18:18] *** zacts left
[18:24] *** Sauvin left
[18:25] *** zacts joined
[18:31] *** hungrydonkey left
[18:42] *** zacts left
[18:49] *** molaf joined
[18:53] *** Tirifto left
[19:01] *** hungrydonkey joined
[19:29] *** jmerelo left
[19:33] *** hungrydonkey left
[19:38] *** toughy joined
[19:38] <toughy> Hello guys !

[19:38] <codesections> o/

[19:39] <toughy> Am I doing something wrong here ?

[19:39] <toughy> Wait ... how do I show some code ?

[19:39] <codesections> m: say 'like this'

[19:39] <camelia> rakudo-moar 85847d2f1: OUTPUT: «like this␤»

[19:40] <toughy> m: module API::v1 { our sub fad { 11 * 22 } }; module API::v2 { our &s-sub := &API::v1::fad }; API::V2::s-sub

[19:40] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Could not find symbol '&s-sub' in 'V2'␤  in block <unit> at <tmp> line 1␤␤»

[19:41] <toughy> m: module API::v1 { our sub fad { 11 * 22 } }; module API::v2 { our &s-sub := &API::v1::fad }; API::v2::s-sub

[19:41] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Cannot invoke this object (REPR: Uninstantiable; Callable)␤  in block <unit> at <tmp> line 1␤␤»

[19:41] <toughy> There !

[19:41] <toughy> Is it me or is it camelia ?

[19:43] <toughy> Or how do I re-export from M2 the subs imported from M1 ?

[19:45] <toughy> Or how do I re-export from Module2 the subs imported from Module1 ?

[19:47] <codesections> This is a bit of a tangent from what you're asking about, but do you know about the `:ver` trait?  It'd let you distiguish between `API:ver<1>` and `API:ver<2>` and give you better introspection/etc. 

[19:47] <codesections> https://docs.raku.org/language/typesystem#index-entry-:ver%3C%3E

[19:50] <toughy> I would like to load both API::v1 and API:v2, and then detect the version of an external .dll at runtime, or read some user choice, in order to choose one

[19:50] <toughy> But when I tried it I could not `use` both API:ver<1> and API:ver<2>, they appear mutually exclusive

[19:56] <codesections> I see

[19:59] <codesections> I'm not sure I 100% follow what you'd like to do.  Is this it?

[19:59] <codesections> m: module API::v1 { our sub fad { 11 * 22 } }; module API::v2 { our sub s-sub {&API::v1::fad()} }; API::v2::s-sub  

[19:59] <camelia> rakudo-moar 85847d2f1: ( no output )

[19:59] <codesections> m: module API::v1 { our sub fad { 11 * 22 } }; module API::v2 { our sub s-sub {&API::v1::fad()} }; say API::v2::s-sub  

[19:59] <camelia> rakudo-moar 85847d2f1: OUTPUT: «242␤»

[20:00] <toughy> Yes, I would like that

[20:00] <toughy> So I want to import SQLError from ODCB::API::v1 in my ODBC::API::v2, then also export the same function SQLError

[20:02] *** Kaiepi left
[20:03] <toughy> The `our &f1 := &f2` declaration works as expected if modules are not involved

[20:03] <toughy> Which makes me wonder if I am doing something wrong, or is just the perl implementation that still needs to catch up with this

[20:04] <codesections> I have to step away for a minute; I hope someone else can help you in the meantime.  If not, I'll be back in a bit

[20:16] <tobs> toughy: binding := happens at compile time. That seems to be what is throwing things off. The &API::v1::fad is apparently not yet available at the time you try to bind to it:

[20:16] <tobs> m: module API::v1 { our sub fad { 11 * 22 } }; module API::v2 { our &s-sub := &API::v1::fad }; say &API::v2::s-sub

[20:16] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(Callable)␤»

[20:17] <tobs> m: module API::v1 { our sub fad { 11 * 22 } }; module API::v2 { our &s-sub = &API::v1::fad }; say API::v2::s-sub  # with assignment instead

[20:17] <camelia> rakudo-moar 85847d2f1: OUTPUT: «242␤»

[20:17] <tobs> I don't know if that's to be expected though…

[20:23] *** sena_kun joined
[20:24] *** Altai-man left
[20:25] <tobs> hmm, the same happens even when I put the two modules into separate files and load v1 from v2.

[20:25] <toughy> I tried with assignment before, it still gave me the error ...

[20:27] <toughy> But here it works ... I'm confused

[20:28] <toughy> Thank you anyway !

[20:28] *** guifa joined
[20:28] <guifa> \o

[20:31] *** ggoebel joined
[20:31] *** Black_Ribbon joined
[20:32] *** toughy left
[20:34] *** stoned75 left
[20:42] *** rindolf left
[20:42] *** BenGoldberg joined
[20:48] *** hungrydonkey joined
[20:50] *** sena_kun left
[21:10] *** patrickb left
[21:16] *** BenGoldberg left
[21:37] *** approaching236 left
[21:50] *** natrys left
[22:04] *** zostay left
[22:04] *** SmokeMachine left
[22:04] *** peteretep left
[22:04] *** spycrab0 left
[22:04] *** peteretep joined
[22:04] *** ChoppedBacon left
[22:05] *** spycrab0 joined
[22:05] *** SmokeMachine joined
[22:06] *** ChoppedBacon joined
[22:06] *** zostay joined
[22:10] *** aborazmeh joined
[22:10] *** aborazmeh left
[22:10] *** aborazmeh joined
[22:19] *** aluaces left
[22:22] *** hungrydonkey left
[22:29] <rypervenche> Is there a way to slurp all of the files in a directory into a single variable?

[22:30] *** abraxxa left
[22:30] <rypervenche> Without specifically hardcoding each filename in my script.

[22:31] <AlexDaniel> rypervenche: how about dir(‘somewhere’/).map(*.slurp).join or something similar?

[22:31] *** abraxxa joined
[22:32] <rypervenche> Ah ok. I wasn't sure if there was anything builtin with slurp. I'll go with that then. :) Thanks

[22:32] <AlexDaniel> rypervenche: keep in mind that dir doesn't sort the results

[22:32] <AlexDaniel> so maybe you need .sort.map

[22:32] <rypervenche> I'm fine with that.

[22:33] <AlexDaniel> rypervenche: fyi unicode stuff on file boundaries may be a problem

[22:33] <AlexDaniel> and the performance may not be great depending on how many files you have

[22:35] *** approaching236 joined
[22:54] <parabolize> rypervenche: as for getting the file names without harcoding you can use variables like $*HOME and $*CWD. You can also store the path in a config file with something like Config::TOML

[22:54] <parabolize> *CWD.add('/blah/blah').dir».slurp.join

[22:55] <parabolize> $*CWD.add('/blah/blah').dir».slurp.join

[23:21] <rypervenche> Thanks for the ideas. I think a dir + map will do nicely for this one.

[23:29] *** approaching236 left
[23:31] *** kent\n left
[23:36] <rypervenche> Would using hyper to read from a single hash cause a race condition and cause the error "A worker in a parallel iteration (hyper or race) initiated here:" ?

[23:36] <rypervenche> I know that would happen with writing to a hash, but I no idea with reading from one.

[23:39] <timotimo> that just means an exception happened in one of the workers

[23:39] <timotimo> reading from hashes should be fine, but nothing is allowed to write to it at the same time

[23:59] *** BenGoldberg joined
