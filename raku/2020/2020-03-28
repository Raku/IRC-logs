[00:02] *** lichtkind joined
[00:12] *** upupbb-user2 joined
[00:22] *** pecastro left
[00:53] *** patrickb61 joined
[00:55] *** patrickb left
[01:05] *** patrickb61 left
[01:49] *** pilne left
[01:53] *** Redfoxmoon_ joined
[02:08] *** melezhik joined
[02:24] *** aborazmeh joined
[02:24] *** aborazmeh left
[02:24] *** aborazmeh joined
[02:58] *** aborazmeh left
[02:59] *** molaf left
[03:08] *** upupbb-user2 left
[03:11] *** molaf joined
[03:19] <melezhik> AlexDaniel: curl -d os=centos -d rakudo_version=a381202881d4dfd0a112f9e6f9cddc85adefbccf http://repo.westus.cloudapp.azure.com/rakudist/api/run/Array::Shaped::Console

[03:19] <melezhik> http://repo.westus.cloudapp.azure.com/rakudist/reports/Array%3A%3AShaped%3A%3AConsole/centos/1585365011.txt

[03:19] <melezhik> RakuDist shows the same error, probably this is what you was looking for, HTH

[03:21] *** girafe left
[03:26] <AlexDaniel> melezhik: thanks!

[03:28] <melezhik> on the way I found that there was a bug in RakuDist , that prevented installed rakudo version to be used in tests. good cooperation :] 

[03:29] <melezhik> just in case pay attention that testing against selected rakudo version now is limited to CentOS, due to _various_ reasons 

[03:30] <AlexDaniel> hmmm‚Ä¶

[03:32] <melezhik> it's basically because current debian docker image does not have fresh enough glibc version

[03:32] <melezhik> which is for some reasons required by rakudo binaries

[03:34] <AlexDaniel> it's not required, it's just the way whateverable builds rakudo right now

[03:34] *** Doc_Holliwould joined
[03:36] <melezhik> ok, I see. anyways it fails to run debian. I use this way to install whateverable builds -  https://github.com/melezhik/sparrow6-rakudo-install/blob/master/lib/Sparrow6/Rakudo/Install.pm6

[03:37] <AlexDaniel> you're not doing anything wrong, it's just the current state of things

[03:39] <melezhik> yeah. I am just saying that if gonna use RakuDist / whateverable is limited by CentOS now 

[03:43] <melezhik> small correction. the glibc issue happened on some centOS, not on the one shipped with the docker image used in RakuDist, but the statement is still true 

[03:44] <melezhik> as for the Debian I can't recall now why I skipped it from testing whateverable builds, there was reason for that just don't remember it now :] 

[03:44] <melezhik> but when I remember I will let you know

[03:45] <melezhik> anyways we have CentOS now,  it was the latest one from official docker image on hub. 2-3 moths ago, should be enough, I guess

[03:46] <melezhik> I am going to update docker images to the latest ones from time to time

[03:47] <AlexDaniel> üëç

[03:48] <melezhik> and as for alpine, I also don't remember , but it also had some issues with running whateverrable builds ... once I figure it out I will give an update. :] :] 

[03:52] *** melezhik left
[04:24] <Geth> ¬¶ doc: tinmarino++ created pull request #3289: Fix URL: language -> *.html

[04:24] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3289

[04:57] *** Doc_Holliwould left
[05:01] *** cpan-raku left
[05:01] *** cpan-raku joined
[05:01] *** cpan-raku left
[05:01] *** cpan-raku joined
[05:07] *** El_Che left
[05:07] *** El_Che joined
[05:16] *** Redfoxmoon_ left
[05:16] *** Redfoxmoon_ joined
[05:16] *** Redfoxmoon_ is now known as Redfoxmoon

[05:23] *** molaf left
[05:50] *** sauvin joined
[06:04] *** reportable6 joined
[06:06] *** aindilis joined
[06:37] *** wamba joined
[07:19] *** upupbb-user2 joined
[07:24] *** Grauwolf left
[07:25] *** rindolf joined
[07:44] <Geth> ¬¶ doc: 8348f25156 | Tinmarino++ | doc/Language/faq.pod6

[07:44] <Geth> ¬¶ doc: Fix URL: language -> *.html

[07:44] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/8348f25156

[07:44] <Geth> ¬¶ doc: 061042baa9 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/faq.pod6

[07:44] <Geth> ¬¶ doc: Merge pull request #3289 from tinmarino/merge_fix_url

[07:44] <Geth> ¬¶ doc: 

[07:44] <Geth> ¬¶ doc: Fix URL: language -> *.html

[07:44] *** vike left
[07:44] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/061042baa9

[07:44] <linkable6> Link: https://docs.raku.org/language/faq

[07:44] *** Doc_Holliwould joined
[07:47] *** leont joined
[07:57] *** vike joined
[07:58] *** Grauwolf joined
[07:58] *** Grauwolf left
[07:58] *** Grauwolf joined
[08:28] *** AlexDaniel left
[08:50] *** holyghost left
[08:50] *** holyghost joined
[09:13] *** sjm_uk joined
[09:32] *** xinming_ left
[09:32] *** xinming_ joined
[09:51] *** stoned75 joined
[10:04] *** sena_kun joined
[10:06] *** gdonald joined
[10:12] <cpan-raku> New module released to CPAN! Algorithm::LDA (0.0.10) by 03TITSUKI

[10:18] *** chloekek joined
[10:19] *** lichtkind_ joined
[10:21] *** lichtkind left
[10:25] *** __jrjsmrtn__ joined
[10:27] *** _jrjsmrtn left
[10:28] *** zxcvz joined
[10:31] *** girafe joined
[10:32] *** sergot joined
[10:43] *** natrys joined
[10:46] *** molaf joined
[10:47] *** SCHAPiE joined
[10:47] *** aborazmeh joined
[10:47] *** aborazmeh left
[10:47] *** aborazmeh joined
[10:51] *** Altai-man_ joined
[10:53] *** xinming_ left
[10:53] *** sena_kun left
[10:55] *** xinming_ joined
[11:02] *** pochi_ joined
[11:03] *** vike1 joined
[11:04] *** vike left
[11:04] *** daemon joined
[11:10] *** aborazmeh left
[11:11] *** wamba left
[11:19] *** molaf left
[11:30] *** pecastro joined
[11:32] *** kensanata joined
[11:33] *** wamba joined
[11:42] *** lizmat joined
[11:55] *** abraxxa left
[11:57] *** abraxxa joined
[11:58] *** lizmat left
[11:58] *** aborazmeh joined
[11:58] *** aborazmeh left
[11:58] *** aborazmeh joined
[12:03] *** aborazmeh left
[12:07] *** lizmat joined
[12:47] *** p6steve joined
[12:52] *** sena_kun joined
[12:53] *** Altai-man_ left
[13:06] *** kensanata left
[13:25] *** vike1 left
[13:30] *** oneeggeach joined
[13:34] *** vike1 joined
[13:38] *** NODE left
[13:39] *** Doc_Holliwould left
[13:40] *** NODE joined
[13:51] *** aborazmeh joined
[13:51] *** aborazmeh left
[13:51] *** aborazmeh joined
[14:04] *** xinming_ left
[14:06] *** xinming_ joined
[14:09] *** cpup joined
[14:09] *** oneeggea_ joined
[14:10] *** rbt left
[14:11] *** rbt joined
[14:12] *** oneeggeach left
[14:15] *** aborazmeh left
[14:15] *** stoned75 left
[14:20] *** xelxebar left
[14:25] *** stoned75 joined
[14:40] *** xelxebar joined
[14:40] *** oneeggea_ left
[14:51] *** Altai-man_ joined
[14:51] *** sjm_uk left
[14:53] *** sena_kun left
[14:56] *** NODE left
[14:59] *** NODE joined
[15:00] *** Doc_Holliwould joined
[15:07] <Altai-man_> m: say ["categories", "99-problems"] ~~ ['categories', True];

[15:07] <camelia> rakudo-moar 9d8542815: OUTPUT: ¬´True‚ê§¬ª

[15:08] <lizmat> m: 42 ~~ True

[15:08] <camelia> rakudo-moar 9d8542815: OUTPUT: ¬´Potential difficulties:‚ê§    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* instead‚ê§    at <tmp>:1‚ê§    ------> 0342 ~~ 7‚èè5True‚ê§¬ª

[15:08] <lizmat> I guess that structure evades that test

[15:08] <Altai-man_> no

[15:09] <Altai-man_> m: say ["categoriasdfes", "99-problems"] ~~ ['categories', True];

[15:09] <camelia> rakudo-moar 9d8542815: OUTPUT: ¬´False‚ê§¬ª

[15:09] <Altai-man_> it checks size and that first element is eqv

[15:09] <lizmat> not all elems ?

[15:09] <lizmat> I mean if the first is True ?

[15:09] <Altai-man_> m: say [True, "categoriasdfes", "99-problems"] ~~ ['categories', True];

[15:09] <camelia> rakudo-moar 9d8542815: OUTPUT: ¬´False‚ê§¬ª

[15:10] <Altai-man_> this is very nice

[15:10] <lizmat> that fails because of different # elems

[15:10] <Altai-man_> m: say [True, "categoriasdfes"] ~~ ['categories', True];

[15:10] <camelia> rakudo-moar 9d8542815: OUTPUT: ¬´False‚ê§¬ª

[15:11] <Altai-man_> oh, wait, I can just use Cro router and avoid this... But still this is neat.

[15:11] *** NODE left
[15:13] *** NODE joined
[15:39] *** stoned75 left
[15:40] *** stoned75 joined
[15:54] *** Tirifto joined
[15:58] *** Doc_Holliwould left
[16:03] *** Doc_Holliwould joined
[16:04] *** upupbb-user2 left
[16:11] *** stoned75 left
[16:11] *** xinming_ left
[16:13] *** xinming_ joined
[16:23] *** xinming_ left
[16:25] *** xinming_ joined
[16:40] *** xinming_ left
[16:40] *** xinming_ joined
[16:52] *** sena_kun joined
[16:53] *** Altai-man_ left
[16:58] *** oneeggeach joined
[16:59] *** oneeggea_ joined
[17:01] *** p6steve left
[17:02] *** xinming_ left
[17:02] *** oneeggeach left
[17:04] *** xinming_ joined
[17:37] *** vike1 left
[17:42] *** vike1 joined
[17:43] *** oneeggea_ left
[17:44] <Geth> ¬¶ doc: tinmarino++ created pull request #3291: Fix URL mixin with absolute path

[17:44] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3291

[17:54] <Geth> ¬¶ doc: tinmarino++ created pull request #3292: Faq: string common operations

[17:54] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3292

[17:55] <Geth> ¬¶ doc: tinmarino++ created pull request #3293: Faq: list common operations

[17:55] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3293

[17:56] <Geth> ¬¶ doc: tinmarino++ created pull request #3294: Faq: system common operations

[17:56] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3294

[17:59] <Altreus> I have an issue with Supplie(r)s and I think it's most likely my misunderstanding, but if anyone could check that would be super https://github.com/shuppet/p6-api-discord/issues/38

[18:02] *** oneeggeach joined
[18:08] <lizmat> Altreus: perhaps this could provide inspiration: https://docs.raku.org/routine/live

[18:13] *** oneeggeach left
[18:13] <Altreus> lizmat: it says True

[18:13] <Altreus> so this live supply is providing historical events :\

[18:13] <lizmat> hmmm... then I don't have an idea  :-(

[18:14] <Altreus> I'm pleased to be finding issues that stump higher-level players^Wdevelopers

[18:14] <lizmat> guess I'm only going to be as useful as a rubber duck then  :-)

[18:14] <Altreus> Means I might be finding weird edge cases!

[18:14] <lizmat> I used to grok Supplies pretty much until the last refactor  :-(

[18:15] *** orinthe left
[18:15] <Altreus> I have another supply to refactor

[18:15] <Altreus> I just got a bead on another API bug

[18:23] <Altreus> The start-react-whenever idiom allows me to abort the react loop yes?

[18:23] <Altreus> well, react-whenever does, but I need a start to "background" it

[18:23] <Altreus> I'm rubberducking now

[18:23] <Altreus> so...

[18:24] <Altreus> Intermittent failures are very hard to fix because I can't force them to happen

[18:27] * lizmat is being rubberducked

[18:30] *** Renzix joined
[18:35] <Altreus> I wish I could test this but I have no idea where to begin

[18:35] <Altreus> short of writing an entire Cro-based mock discord

[18:37] *** stoned75 joined
[18:38] <lizmat> but, Cro comes with some mock testing support, I thought?

[18:40] <Altreus> Ah yeah no doubt :) But I expect I will still have to write a lot of code to tell it what to do

[18:41] <Altreus> I don't think discord provide an OpenAPI doc

[18:48] <sena_kun> `existskey requires a concrete object (got a NQPMu type object instead)` error can be anything, right?

[18:49] <sena_kun> when I am calling a method on object from top of my file it works ok, but when I'm calling the same code from Cro route, it explodes. `--ll-exception` doesn't show anything interesting.

[18:50] <stoned75> hi!

[18:50] <lizmat> sena_kun: I think typically happens when compilation fails to include some object in the context

[18:51] *** Altai-man_ joined
[18:52] *** sjm_uk joined
[18:53] <stoned75> I'm trying to understand why in https://github.com/rakudo/rakudo/blob/master/src/core.c/Hash.pm6#L348 and the following line $tested[0] is used instead of $tested

[18:53] *** NODE left
[18:54] *** sena_kun left
[18:55] <stoned75> and likewise in #L362 and #L363

[18:55] *** NODE joined
[18:57] <Altreus> yeah I have no idea how to test this xD

[18:57] <Altreus> I'm gonna have to read the cro tests and learn that way

[18:58] <lizmat> stoned75: because it's multi-level categorize ?

[18:59] <stoned75> lizmat: well... notice how Hash.classify-list has a similar flow but use $tested :)

[18:59] *** oneeggeach joined
[18:59] *** oneeggeach left
[19:00] <lizmat> hmmm...

[19:01] <lizmat> about 7 years ago, I wrote the original version of that code

[19:01] <lizmat> but about 4 years ago it got overhauled...  

[19:01] <lizmat> probably best to make an issue for it, so it won't fall through the cracks

[19:01] <lizmat> with my current experience, I see plenty of optimizing opportunities  :-)

[19:03] <Altai-man_> should I open a ticket? The problem is that I have a reliable way to cause it, but it requires a couple of my repos and forks, so some steps to reproduce.

[19:04] <lizmat> if the repos are public, then an issue would be best

[19:04] <lizmat> well betterder would be a golf  :-)

[19:08] <stoned75> m: say False[0]

[19:08] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´False‚ê§¬ª

[19:08] <stoned75> m: 1[0]

[19:08] <camelia> rakudo-moar 156356eae: ( no output )

[19:08] <stoned75> m: say 1[0]

[19:08] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´1‚ê§¬ª

[19:08] <lizmat> m: 42[1]

[19:08] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´Index out of range. Is: 1, should be in 0..0‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:08] <lizmat> stoned75: any object can be considered a 1-element array

[19:09] <chloekek> lizmat: what about arrays?

[19:09] <lizmat> m: say 42.elems

[19:09] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´1‚ê§¬ª

[19:09] <stoned75> lizmat: hum...

[19:09] <lizmat> chloekek: what about them ?

[19:09] <stoned75> what implements this ?

[19:09] <chloekek> p6: say [1, 2, 3].elems

[19:09] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´3‚ê§¬ª

[19:10] <lizmat> stoned75: Mu.AT-POS I think

[19:11] <stoned75> hum not AT-POS in src/core.c/Mu.pm6

[19:12] <stoned75> Any.AT-POS may be 

[19:12] <lizmat> could be

[19:12] <stoned75> yeah looks like it

[19:15] <Altai-man_> https://github.com/rakudo/rakudo/issues/3579 I feel bad for reporting this. :/

[19:16] <lizmat> Altai-man_++   # don't worry!

[19:19] *** Renzix left
[19:29] <stoned75> is there a doc file I should read on how to make a test build of rakudo and use it ?

[19:30] <Altai-man_> stoned75, "a test build of rakudo"?

[19:30] <Altai-man_> what do you mean?

[19:30] <stoned75> like I mess around with some src files and I want to test the compiler I would build from them

[19:31] <Altai-man_> stoned75, you can look at https://github.com/perl6/z

[19:32] <stoned75> OK. I already use it to build/install rakudo's HEAD

[19:32] <Altai-man_> stoned75, so it builds you a rakudo instance with your changes and you can spectest it and do other things.

[19:32] <stoned75> ok cool. thanks!

[19:35] <lizmat> "make install" usually does the trick for me  :-)

[19:35] <stoned75> eh :)

[19:46] *** oneeggeach joined
[20:01] *** xinming_ left
[20:06] *** xinming_ joined
[20:16] *** oneeggeach left
[20:16] *** pilne joined
[20:17] *** oneeggeach joined
[20:19] <Geth> ¬¶ doc: tinmarino++ created pull request #3295: Feature: Index regex interpolation tokens

[20:19] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3295

[20:22] *** oneeggeach left
[20:28] <Geth> ¬¶ doc: 27649529e6 | Tinmarino++ | doc/Language/faq.pod6

[20:28] <Geth> ¬¶ doc: Faq: string common operations

[20:28] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/27649529e6

[20:28] <Geth> ¬¶ doc: 37d4e36a0e | Tinmarino++ | doc/Language/faq.pod6

[20:28] <Geth> ¬¶ doc: Faq: Common operations: String: Fix typos

[20:28] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/37d4e36a0e

[20:28] <Geth> ¬¶ doc: db18b26009 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/faq.pod6

[20:28] <Geth> ¬¶ doc: Merge pull request #3292 from tinmarino/merge_faq_string

[20:28] <linkable6> Link: https://docs.raku.org/language/faq

[20:28] <Geth> ¬¶ doc: 

[20:28] <Geth> ¬¶ doc: Faq: string common operations

[20:28] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/db18b26009

[20:28] *** lucasb joined
[20:39] *** xinming_ left
[20:40] *** xinming_ joined
[20:41] *** sjm_uk left
[20:44] *** oneeggeach joined
[20:45] <tbrowder> .seen martimm

[20:45] <tellable6> tbrowder, I saw martimm 2017-09-06T14:12:40Z in #perl6: <MARTIMM> m: role A { has $!x = 10;};class B does A { method x {say $!x;}}; B.new.x;

[20:52] *** sena_kun joined
[20:54] *** Altai-man_ left
[21:03] *** mowcat joined
[21:03] *** xinming_ left
[21:04] *** xinming_ joined
[21:07] *** chloekek left
[21:09] *** lichtkind_ is now known as lichtkind

[21:15] *** xfix joined
[21:15] *** abraxxa left
[21:16] *** xinming_ left
[21:16] *** mowcat left
[21:16] *** xinming_ joined
[21:18] *** abraxxa joined
[21:29] *** oneeggeach left
[21:41] *** wamba left
[21:47] *** natrys left
[21:56] *** upupbb-user3 joined
[21:58] *** oneeggeach joined
[21:59] *** oneeggeach left
[22:00] *** natrys joined
[22:02] *** rindolf left
[22:02] <timotimo> you can categorize items by two pieces

[22:02] <timotimo> oh i was scrolled way up

[22:02] *** natrys left
[22:05] *** xinming_ left
[22:07] *** lichtkind left
[22:08] *** xinming_ joined
[22:19] <rypervenche> Is it not possible to run a for loop on an array of hashes by just doing: for @array -> %h { blah } ? It doesn't seem to be working, but I get the desired results when I do this instead: for @array.values -> %h { blah }

[22:20] <jnthn> m: my @a = { a => 1, c => 2 }, { b => 3, d => 4 }; for @a -> %h { dd %h }

[22:20] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´Hash % = {:a(1), :c(2)}‚ê§Hash % = {:b(3), :d(4)}‚ê§¬ª

[22:20] <jnthn> rypervenche: Not sure what you're observing tbh; it seems to work here?

[22:23] *** sarna left
[22:24] *** patrickb joined
[22:24] *** sarna joined
[22:24] <rypervenche> Hmmm, I've used from-json and have been trying to figure out the proper way to loop over things with the nested values. Let me see if I can get a dd of it.

[22:26] *** wildtrees joined
[22:27] *** wildtrees left
[22:29] <timotimo> oh yeah

[22:29] <timotimo> JSON::Tiny and JSON::Fast put hashes and arrays in scalar containers

[22:30] <timotimo> i'd consider it a design flaw, i should release a version that doesn't do that and use the capabilities of raku to select a version by API to make it not break every piece of code out there

[22:31] <lizmat> timotimo: you can bind arrays as a Slip into a hash, they will then iterate fine

[22:31] <lizmat> m: my %h = a => (1,2,3); dd $_ for %h<a>

[22:31] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´List %h = $(1, 2, 3)‚ê§¬ª

[22:32] <lizmat> m: my %h = a => slip(1,2,3); dd $_ for %h<a>

[22:32] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[22:34] <timotimo> so, i'd like for "not scalarified" to be what you get by default when you use JSON::Fast, but if i do that, then every unmodified piece of code gets the new behaviour and breaks

[22:35] <timotimo> oh i know

[22:35] <timotimo> i'll call it JS0N::Fast

[22:35] <timotimo> it's not longer, it doesn't look noticeably different from the old name

[22:36] <timotimo> i'm a genius

[22:39] <lizmat> argh?

[22:39] *** xinming_ left
[22:39] <lizmat> if anything, you could just use JSON::Fast, but give it an :api<2> qualifier ?

[22:40] *** xinming_ joined
[22:40] <lizmat> so you would only get the new behaviour when used as "use JSON::Fast:api<2>" ?

[22:40] <timotimo> what's the default value for api? Whatever?

[22:41] <lizmat> hmmm... good question

[22:41] <lizmat> I guess  :-(

[22:41] <timotimo> with :api<*> i get the regular JSON::Fast at least

[22:41] <lizmat> if the module doesn't specify an :api, it gets True as its matcher

[22:42] <timotimo> m: use JSON::Fast:api<*>; say JSON::Fast.^api.perl

[22:42] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Could not find JSON::Fast:api<*> in:‚ê§    inst#/home/camelia/.raku‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/site‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/vendor‚ê§    inst#/home‚Ä¶¬ª

[22:42] <timotimo> m: use JSON::Fast; say JSON::Fast.^api.perl

[22:42] <camelia> rakudo-moar 156356eae: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Could not find JSON::Fast in:‚ê§    inst#/home/camelia/.raku‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/site‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/vendor‚ê§    inst#/home/cameli‚Ä¶¬ª

[22:42] <timotimo> OK, not installed on camelia

[22:51] *** Altai-man_ joined
[22:53] <rypervenche> Ahhh, so I'm not losing my mind. :P Ok, I'll give that a shot. I saw that using .values looked to do what I needed.

[22:54] *** sena_kun left
[22:54] <lizmat> rypervenche: in "for @a.values" the .values is really a noop

[22:54] <lizmat> it's just there for consistency

[22:59] *** stoned75 left
[23:14] <Geth> ¬¶ doc: 491f63b3e7 | Coke++ | xt/code.pws

[23:14] <Geth> ¬¶ doc: new "words"

[23:14] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/491f63b3e7

[23:17] *** AlexDaniel joined
[23:17] *** AlexDaniel left
[23:17] *** AlexDaniel joined
[23:22] *** Kaiepi left
[23:23] *** Kaiepi joined
[23:28] *** Altai-man_ left
[23:32] <rypervenche> Let me see if I can extract the actual hash so that others can reproduce it.

[23:37] *** cpan-raku left
[23:37] *** cpan-raku joined
[23:37] *** cpan-raku left
[23:37] *** cpan-raku joined
[23:45] <rypervenche> So this is the exact text that I'm working with and the output: https://gist.github.com/rypervenche/a5b0d873ea695c16f940dc88725777a5

[23:49] *** leont left
[23:51] <timotimo> interesting. why do you use angle brackets for your input data?

[23:53] <rypervenche> I thought I needed to pass it all to from-json that way.

[23:55] *** pecastro left
[23:56] *** xinming_ left
[23:58] *** xinming_ joined
