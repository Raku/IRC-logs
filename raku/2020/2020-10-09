[00:03] *** aborazmeh left
[00:06] *** frost-lab joined
[00:48] *** BenGoldberg left
[00:48] *** Ben_Goldberg joined
[00:48] *** Ben_Goldberg is now known as BenGoldberg

[00:51] *** leont left
[01:17] *** k-man_ joined
[01:19] *** k-man left
[01:55] *** molaf left
[02:01] *** frost-lab left
[02:04] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:07] *** molaf joined
[02:14] *** k-man__ joined
[02:15] *** k-man_ left
[02:36] *** squashable6 left
[02:39] *** k-man__ is now known as k-man

[02:39] *** squashable6 joined
[02:40] *** BenGoldberg left
[02:40] *** Ben_Goldberg joined
[02:40] *** Ben_Goldberg is now known as BenGoldberg

[02:55] *** sxmx joined
[02:59] *** frost-lab joined
[03:06] *** k-man_ joined
[03:07] *** k-man left
[03:28] *** sxmx left
[04:28] *** bloatable6 left
[04:28] *** bisectable6 left
[04:28] *** statisfiable6 left
[04:28] *** unicodable6 left
[04:28] *** committable6 left
[04:28] *** shareable6 left
[04:28] *** releasable6 left
[04:28] *** greppable6 left
[04:28] *** squashable6 left
[04:28] *** coverable6 left
[04:28] *** benchable6 left
[04:28] *** evalable6 left
[04:28] *** tellable6 left
[04:28] *** quotable6 left
[04:28] *** notable6 left
[04:28] *** nativecallable6 left
[04:28] *** sourceable6 left
[04:28] *** linkable6 left
[04:29] *** sourceable6 joined
[04:29] *** statisfiable6 joined
[04:29] *** coverable6 joined
[04:29] *** quotable6 joined
[04:29] *** benchable6 joined
[04:29] *** evalable6 joined
[04:30] *** committable6 joined
[04:30] *** squashable6 joined
[04:30] *** releasable6 joined
[04:30] *** nativecallable6 joined
[04:31] *** greppable6 joined
[04:31] *** bisectable6 joined
[04:31] *** tellable6 joined
[04:31] *** unicodable6 joined
[04:31] *** BenGoldberg left
[04:31] *** Ben_Goldberg joined
[04:31] *** notable6 joined
[04:31] *** Ben_Goldberg is now known as BenGoldberg

[04:31] *** linkable6 joined
[04:31] *** bloatable6 joined
[04:31] *** shareable6 joined
[04:34] *** BenGoldberg left
[04:34] *** Ben_Goldberg joined
[04:34] *** Ben_Goldberg is now known as BenGoldberg

[05:08] *** aborazmeh joined
[05:08] *** aborazmeh left
[05:08] *** aborazmeh joined
[05:11] *** BenGoldberg left
[05:11] *** Ben_Goldberg joined
[05:11] *** Ben_Goldberg is now known as BenGoldberg

[05:31] *** BenGoldberg left
[05:40] *** skids left
[05:46] *** epony left
[05:57] *** squashable6 left
[06:00] *** squashable6 joined
[06:22] *** Doc_Holliwould joined
[06:44] <Zero_Dogg> Do I need to do anything in particular for changes to %*ENV to be propagated to the actual environment?

[06:44] *** Altai-man joined
[06:47] *** jmerelo joined
[06:55] *** Sgeo left
[07:00] *** abraxxa joined
[07:03] *** abraxxa left
[07:03] *** abraxxa joined
[07:04] *** maettu joined
[07:10] *** domidumont joined
[07:15] *** abraxxa left
[07:16] *** abraxxa joined
[07:17] *** domidumont left
[07:23] *** pecastro joined
[07:25] <Doc_Holliwould> there is a leftover "perl6" in https://docs.raku.org/type/IO::Handle#Buffering_terminals

[07:26] *** grep0r joined
[07:26] *** grep0r left
[07:29] *** epony joined
[07:36] <moritz> Zero_Dogg: no

[07:53] <Zero_Dogg> moritz: odd, if I write to %*ENV and then exec (from Native::Exec) the env in the exec-ed process doesn't have the var I wrote prior to exec

[07:55] <moritz> Zero_Dogg: oh, I thought you were run()ing a command or so

[07:59] <Zero_Dogg> moritz: mno, I'm actually exec()ing myself to replace the process with an updated version, so I wanted to just pass a few bits of info as an env var

[08:08] <timotimo> yeah, you'll have to re-encode the environment yourself for that

[08:13] *** Black_Ribbon left
[08:22] *** BenGoldberg joined
[08:24] <Zero_Dogg> timotimo: Okay, so, exec can take individual env vars, but then it overwrites the whole thing, and it expects key-value pairs and not a literal hash as its option. Can I somehow expand a hash into a set of key=>value arguments?

[08:25] <moritz> .pairs ?

[08:25] <moritz> .kv ?

[08:28] <Zero_Dogg> I thought so, but if I do .pairs it throws "This type cannot unbox to a native string: P6opaque, Pair", while .kv seems to pass them as command-line arguments. The signature for exec is (Str:D $file, *@args, :$nopath, *%env)

[08:28] *** perfi joined
[08:32] *** cpan-raku left
[08:33] *** cpan-raku joined
[08:33] *** cpan-raku left
[08:33] *** cpan-raku joined
[08:36] <timotimo> this is a native call thing, right?

[08:38] <timotimo> oh, if it's a slurpy hash argument, you'll want to just |%foobar

[08:39] <Zero_Dogg> oh, that did the trick, I'll have to go read about |

[08:39] <Zero_Dogg> Thanks!

[08:56] *** pecastro left
[08:56] *** BenGoldberg left
[09:01] *** pecastro joined
[09:06] *** maettu left
[09:38] *** domidumont joined
[09:42] *** sena_kun joined
[09:43] *** Altai-man left
[10:02] *** domidumont left
[10:10] *** molaf left
[10:18] *** pecastro left
[10:46] *** MasterDuke left
[10:59] *** jmerelo left
[11:02] *** AlexDaniel` left
[11:02] *** CIAvash left
[11:02] *** unclechu left
[11:02] *** kiti_nomad[m] left
[11:02] *** JJAtria[m] left
[11:02] *** matiaslina left
[11:02] *** suzusime[m] left
[11:07] *** CIAvash joined
[11:14] *** ThaEwat joined
[11:14] *** AlexDaniel` joined
[11:14] *** kiti_nomad[m] joined
[11:14] *** unclechu joined
[11:14] *** JJAtria[m] joined
[11:14] *** matiaslina joined
[11:14] *** suzusime[m] joined
[11:18] *** rindolf joined
[11:28] *** pecastro joined
[11:30] *** maettu joined
[11:33] *** holli__ joined
[11:34] *** AlexDaniel` left
[11:34] *** Doc_Holliwould left
[11:34] *** shareable6 left
[11:34] *** linkable6 left
[11:34] *** notable6 left
[11:34] *** unicodable6 left
[11:34] *** tellable6 left
[11:34] *** nativecallable6 left
[11:34] *** committable6 left
[11:34] *** evalable6 left
[11:34] *** quotable6 left
[11:34] *** coverable6 left
[11:34] *** statisfiable6 left
[11:34] *** sourceable6 left
[11:34] *** sftp left
[11:34] *** codesections left
[11:34] *** finsternis left
[11:34] *** hoelzro left
[11:34] *** Altreus left
[11:34] *** timlegge left
[11:34] *** sftp joined
[11:36] *** pecastro left
[11:36] *** pecastro joined
[11:40] *** AlexDaniel` joined
[11:40] *** shareable6 joined
[11:40] *** linkable6 joined
[11:40] *** notable6 joined
[11:40] *** unicodable6 joined
[11:40] *** tellable6 joined
[11:40] *** nativecallable6 joined
[11:40] *** committable6 joined
[11:40] *** evalable6 joined
[11:40] *** quotable6 joined
[11:40] *** coverable6 joined
[11:40] *** statisfiable6 joined
[11:40] *** sourceable6 joined
[11:40] *** codesections joined
[11:40] *** finsternis joined
[11:40] *** hoelzro joined
[11:40] *** Altreus joined
[11:40] *** timlegge joined
[11:40] *** AlexDaniel` left
[11:40] *** AlexDaniel` joined
[11:43] *** pecastro left
[11:47] *** BenGoldberg joined
[11:58] *** leont joined
[12:04] *** donaldh joined
[12:05] <tbrowder> .ask lizmat what does a blog (or blog site) need in its html to make it autodiscoverable for your weekly raku searches?

[12:05] <tellable6> tbrowder, I'll pass your message to lizmat

[12:09] *** jmerelo joined
[12:19] <timotimo> tbrowder: i would suggest at the very least an rss feed to be submitted to pl6anet

[12:19] <timotimo> hm. that may want a new name post-perl6-rename, too

[12:19] <timotimo> also, the perl6-webring

[12:23] *** BenGoldberg left
[12:33] *** jmerelo left
[12:36] *** maettu left
[13:00] *** skids joined
[13:25] *** domidumont joined
[13:27] *** abraxxa left
[13:41] *** Altai-man joined
[13:43] *** sena_kun left
[13:51] *** frost-lab left
[13:55] *** pecastro joined
[14:05] *** maettu joined
[14:07] <[Coke]> m: "Ɒ".uninames.say

[14:07] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(LATIN CAPITAL LETTER TURNED ALPHA)␤»

[14:16] *** perfi left
[14:18] *** kylese joined
[14:18] <kawaii> Asked in #cro originally but maybe someone here knows, I have a request body that will contain various fields, named like `url0`, `url1` and `url2`, but the frontend application allows for adding/removing as many as the user wants, is there some way to dynamically populate a `@url` array based on the content in the sample request body below? 

[14:18] <kawaii> https://gist.githubusercontent.com/kawaii/0be334d5f1a0c2adb86bef6e577f01b9/raw/718b97176cad84da28b721e9cd0afc8f614a1514/request-body.md

[14:20] <kawaii> Though, perhaps a hash is a better method of storing these blobs, as the user might go back in the UI and remove `url1`, meaning `url2` would then become `@url[1]`, kinda confusing

[14:22] <tbrowder> timotimo: thnx, will do

[14:28] *** kylese left
[14:28] *** squashable6 left
[14:30] * [Coke] speeds up App::Uni a bit. whee

[14:31] *** squashable6 joined
[14:36] *** maettu left
[14:40] *** orinthe left
[14:41] *** orinthe joined
[14:44] *** pecastro left
[14:50] <[Coke]> is there a way to get a list of all unicode properties we know for a character?

[14:51] <[Coke]> m: dd "a".uniprop # this lets us ask for a specific one or get "General Category"

[14:51] <camelia> rakudo-moar 85847d2f1: OUTPUT: «"Ll"␤»

[14:53] <moritz> m: say 'a'.uniprops

[14:53] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(Ll)␤»

[14:53] <moritz> hhhm

[14:55] <[Coke]> (trying to implement "verbose" output for "App::Uni". I suppose I could (as a start) dig through rakudo and see which props we check there, and have a hardcoded list

[14:59] <[Coke]> m: dd "↉ ".uniprop("Numeric_Value_Denominator");

[14:59] <camelia> rakudo-moar 85847d2f1: OUTPUT: «"1"␤»

[14:59] <[Coke]> ... I mean, I guess if the numerator is 0 it doesn't matter.

[14:59] <[Coke]> m: dd "⅜ ".uniprop("Numeric_Value_Denominator");

[14:59] <camelia> rakudo-moar 85847d2f1: OUTPUT: «"8"␤»

[15:00] <[Coke]> yah, ok. :)

[15:02] <Altreus> my @promises = @url.map: Cro::HTTP::Client.get(*);  # Unable to parse URI '*': Malformed scheme

[15:02] <Altreus> Why isn't this parsed as a whatever block?

[15:02] <Altreus> in fact why *is* it sent as a string?

[15:03] <Altreus> surely a bare * should not be treated as '*'

[15:03] <Altreus> Array @url = ["https://codimd.opusvl.com/BxNe2xLDTi293aXyiMgGjw/download", "https://codimd.opusvl.com/oqVI12O-SaG1NXSjNC2vMQ/download"]

[15:04] <[Coke]> I know it doesn't answer your question, but as a workaround: use a block and $_

[15:04] <Altreus> Does this mean it's an array with an array in it? I still don't really understand what 'say' says

[15:04] <Altreus> when we do that it gets ''

[15:04] <Altreus> Unable to parse URI '': Malformed scheme

[15:04] <[Coke]> use 'dd' instead of say for more debug-helpful output.

[15:04] <Altreus> [16:03]

[15:04] <Altreus> oop

[15:04] <[Coke]> my @promises = @url.map: {Cro::HTTP::Client.get($_)} ?

[15:05] <Altreus> oh that was a dd

[15:05] <Altreus> sorry, I'm curious about third-party issues :)

[15:11] *** orinthe left
[15:12] *** orinthe joined
[15:14] *** BenGoldberg joined
[15:15] *** Sgeo joined
[15:18] <lizmat> tbrowder: what timotimo said

[15:18] <tellable6> 2020-10-09T12:05:44Z #raku <tbrowder> lizmat what does a blog (or blog site) need in its html to make it autodiscoverable for your weekly raku searches?

[15:19] <[Coke]> question for module authors. I wrote this ages ago: https://github.com/coke/raku-uni/blob/master/lib/App/Uni.rakumod - the version # is in the source. Is this the desired approach? Keep this number in sync with the published META6.json #?

[15:20] <[Coke]> (and I let it get out of sync since then, oops)

[15:21] *** kylese joined
[15:21] *** jmerelo joined
[15:24] *** maettu joined
[15:32] *** maettu left
[15:33] *** aborazmeh left
[15:45] <tbrowder> [Coke]: i have started moving to mi6 which takes care of keeping all versions for main module and meta6 in sync. only downside (for some) is it uses cpan (afik).

[15:48] *** BenGoldberg left
[16:00] *** Noisytoot left
[16:01] *** Noisytoot joined
[16:04] *** Noisytoot left
[16:05] *** Noisytoot joined
[16:14] <tbrowder> as an aside, i think we ought to be encouraging authors to move away from our clunky github ecosystem to cpan until we get a raku equivalent (but improved).

[16:16] <El_Che> please don't

[16:17] <El_Che> cpan is a good fit for an established language like Perl

[16:17] <El_Che> a *terrible* for a small lamguage iwth a small ecosystem

[16:18] <El_Che> cpan is just a disk for raku and it does not have all the advantages and services it has for Perl

[16:18] <kawaii> what's clunky about ecosystem?

[16:22] *** MilkmanDan left
[16:22] *** MilkmanDan joined
[16:37] <tbrowder> well, for one, all the angst and problems with proper version selection

[16:39] <tbrowder> .tell moritz just heard from apress (springer nature): the print book price does NOT include the ebook with the purchase.

[16:39] <tellable6> tbrowder, I'll pass your message to moritz

[16:43] <El_Che> tbrowder: that's not github fault, but the clunky meta6 format that predates the githubs of today

[16:44] <jdv79> both the github and cpan "backends" have their pros and cons.  neither is terrible or teriffic.

[16:44] <jdv79> *terrific

[16:45] *** domidumont left
[16:48] <tbrowder> ok, i f

[16:48] <tbrowder> *i didn't mean to start a flame war.

[16:49] <codesections> jdv79: there's a lot of truth to that. But having a split also isn't great: it makes it harder for us to teach people how to publish packages, makes discoverability harder, and leads to some modules being listed twice 

[16:50] <El_Che> "we're not perl, we're raku now. Oh, and you'll find ou libraries on the most famous Perl infra"

[16:50] <El_Che> not a lot of genius in that statement :)

[16:51] <jdv79> its quite a nuanced subject

[16:51] <tbrowder> well, afterall, raku is the sister of perl

[16:51] <El_Che> ir is, but it's muddling the water of the new language story

[16:52] <El_Che> tbrowder: that narrative went the way of the dodo :)

[16:52] <tbrowder> well i am a dodo now :-D

[16:53] <El_Che> tbrowder: we are all dodos here :)

[16:53] <El_Che> part of the charm

[16:53] <jdv79> i wasn't aware of the raku communities wishes to hard sever from all things Perl

[16:54] <El_Che> I don't think there is a consensus on that

[16:54] <jdv79> yes, its a new name, perhaps a "new" lang, but history isn't being rewritten

[16:55] *** approaching236 joined
[16:55] <El_Che> spinning off is not rewriting history

[16:55] <El_Che> while maybe trying to keep Perl and Raku in one box is

[16:55] <El_Che> I have the feeling the communities already split

[16:56] <El_Che> (with many people being in 2 separate communities at the same time, not to different as being part of the Go and JS community at the same time)

[16:56] <El_Che> anyway food :)

[16:56] <jdv79> sure.  all i'm saying is i wouldn't not use cpan just because of this "spinning off"  should we not interact with YAS/TPF?...

[16:57] <El_Che> I --hence no once-- would prefer to not have a Perl Fa;ily layer indedd

[16:57] <El_Che> don't get me wrong, I love Perl

[16:58] <El_Che> *Family

[16:58] <El_Che> I just don't see an overlap anymore besides some syntax familiarities

[16:58] <El_Che> I don't even see a big overlap in people anymore

[16:59] *** aluaces left
[16:59] <El_Che> (because one community is very small and the other bigger but getting smaller)

[16:59] <El_Che> I sincerily hope Perl 7 will turn things around for Perl

[17:00] <jdv79> its def shaking things up over there

[17:00] <El_Che> certainly

[17:01] <El_Che> it's not clear if it will revitilize the community (modernizing stuff) or speed up the downfall (nothing sustantial compared to other langs)

[17:01] <jdv79> yup 

[17:02] <El_Che> but I think that a close association with Perl could damage Raku in both scenarios

[17:02] <El_Che> if sucessful the return of the "Perl 6 smokeware" story

[17:02] <El_Che> if failed, the guilty by association problem

[17:03] <El_Che> so hence I feel that a more separate identity is warranted

[17:03] <El_Che> ok, now food :)

[17:03] <El_Che> bbl

[17:04] <codesections> re YAS/TPF, I think the plan is to have a The Raku Foundation as one of the groups under YAS, which seems like a good balance to me

[17:04] <tbrowder> any more chatter about the proposed raku version of cpan (tony-o?)

[17:04] <codesections> we can all share infrastructure/resources without needing to share identity or confusing outsiders

[17:06] *** MasterDuke joined
[17:13] <tbrowder> on subject of modules, i filed an issue a few years ago about sorting modules.raku.org by name as default. i got pushback from znet because it should be by popularity. at the time, lizmat mentioned that cpan raku modules wouldn't show true popularity but with current tooling that should no longer be true, no?

[17:14] <tbrowder> sorry, it was zoffixnet who said that

[17:15] <jdv79> codesections: good luck with that last statement.  as you just witnessed, its not as cut and dry as that.

[17:15] <lizmat> codesections 

[17:15] <tbrowder> see modules.raku.org issue 101

[17:15] <lizmat> codesections: talk about another shim of YAS has now been going on for almost a year  :-)

[17:16] <lizmat> tbrowder: which issue tracker ?

[17:16] <jdv79> tbrowder: just curious - what's stopping someone from doing a PR for that as an option or something?

[17:17] <tbrowder> repo modules.raku.org on github/raku

[17:17] <jdv79> you're talking about a "sort by" select list for search results?

[17:18] <tbrowder> github.com/Raku.org/modules.raku.org

[17:18] <tbrowder> yes

[17:19] <tbrowder> for the record, i have never like cpans search, either

[17:20] <jdv79> metacpan even?  not just the old search.cpan.org?

[17:20] <tbrowder> well, i am usually too impatient (or lazy) for that...

[17:21] <tbrowder> i go to cpan.org and fire away in the search window

[17:22] <Grinnz> that is... just metacpan's search

[17:22] <jdv79> unless you do it it will likely not get done:)  i personally don't feel a big need for this feature.

[17:26] <codesections> lizmat: yeah, but the past year (really, past few months) have seen the launch of the Raku Development Fund and the Raku Steering Council 

[17:26] <lizmat> true, but the latter didn't have anything to do with TPF?

[17:27] <codesections> the RST isn't really related to YAS, I know, but it would make co-ordinating easier 

[17:27] <lizmat> I hope so!

[17:33] *** aluaces joined
[17:36] <[Coke]> codesections: the RDF is a rebrand/relaunch of ye olde P6DF.

[17:42] *** sena_kun joined
[17:43] *** Altai-man left
[17:45] *** rindolf left
[17:52] *** jmerelo left
[17:53] *** rindolf joined
[18:01] *** wamba joined
[18:32] *** approaching236 left
[18:36] *** approaching236 joined
[18:38] *** telex left
[18:40] *** BenGoldberg joined
[18:40] *** telex joined
[19:13] *** BenGoldberg left
[19:27] *** donaldh left
[19:34] *** wamba left
[19:47] *** agentzh left
[19:47] *** agentzh joined
[19:47] *** agentzh left
[19:47] *** agentzh joined
[19:57] <codesections> weekly: https://www.codesections.com/blog/raku-manifesto-3/

[19:57] <notable6> codesections, Noted! (weekly)

[19:59] <codesections> [Coke]: thanks -- somehow I'd misunderstood/missremembered that (I was thinking that there was just a PDF before, not separate P5 and P6 DFs)

[20:07] *** MasterDuke left
[20:12] *** kylese left
[20:17] *** Black_Ribbon joined
[20:23] *** wamba joined
[20:32] *** patrickb joined
[20:48] <patrickb> releasable: status

[20:48] <releasable6> patrickb, Next release in ≈14 days and ≈22 hours. There are no known blockers. 0 out of 25 commits logged

[20:48] <tellable6> 2020-10-08T07:41:07Z #raku-dev <moritz> patrickb I've given rakudo and nqp the labels; docs and roast already had them

[20:48] <releasable6> patrickb, Details: https://gist.github.com/c7c710dfb81a28c260801e1dfd1b2770

[20:58] *** niceperl joined
[20:58] <JJAtria[m]> I've been playing around with porting HTTP::Tiny to Raku, and it's starting to take some shape. I'd love to get some feedback, particularly on whether the API needs any more changes to make it feel natural in Raku: https://gitlab.com/jjatria/http-tiny

[20:59] <JJAtria[m]> I still haven't ported all the features in the original library (I haven't managed to get HTTPS to work yet, for example) but I feel it's promising

[21:00] <Grinnz> not sure how it applies to raku, but it's important to note that `content` in the result is bytes

[21:02] <Grinnz> LWP has decoded_content which will guess based on the content-type and decode to chars if possible, HTTP::Tiny does not have that functionality

[21:04] <JJAtria[m]> Yeah, I've gone back and forth on that...

[21:05] <JJAtria[m]> Part of me thinks it should be simple to just make `content` always a Blob, and let the user decode it if they want a string

[21:05] <Grinnz> it's a bit of a messy prospect, but to start with content needs to be bytes and the docs should reflect that

[21:05] <Grinnz> if you want to add something like LWP's guessing then that should be explicitly requested

[21:05] *** rindolf left
[21:06] <JJAtria[m]> Yeah, I've tried to stay away from making too sophisticated guesses about encodings

[21:08] <JJAtria[m]> I feel like the heuristics in the `content` field of the request are already a bit overloaded, but I wanted to have at least one way to intuitively support stuff like multipart file uploads, etc

[21:08] <Grinnz> Mojo::UserAgent also provides decoding based on content-type, but as a separate method as well - there always needs to be the ability to get the raw bytes

[21:09] <Grinnz> yeah perl's HTTP::Tiny doesn't do any of that itself, but there is https://metacpan.org/pod/HTTP::Tiny::Multipart

[21:10] *** sena_kun left
[21:11] <JJAtria[m]> Currently, I do it based on whether the user passed a IO::Path value: https://gitlab.com/jjatria/http-tiny/-/blob/master/examples/common-requests.md#post-with-multipart-file-upload

[21:12] *** patrickb left
[21:12] <JJAtria[m]> But you can also set the content type to `multipart/form-data` manually and any value that has a `slurp` method will get similarly slurped

[21:17] *** cydf joined
[21:17] *** holli__ left
[21:21] *** aluaces left
[21:27] *** MasterDuke joined
[21:48] *** wamba left
[21:56] <JJAtria[m]> Grinnz: I've updated the code and documentation to clarify that the response will always be in bytes. Thanks for the nudge!

[21:56] *** mowcat joined
[21:59] <Grinnz> 👍

[22:05] *** BenGoldberg joined
[22:10] *** pecastro joined
[22:12] <JJAtria[m]> codesections: reading part 3 of your manifesto, and really liking it so far. I did find a small mistake at the beginning: "why I've convinced" should probably be "why I'm convinced"

[22:13] *** cydf left
[22:34] <codesections> JJAtria[m]: Thanks, fixed

[22:35] <JJAtria[m]> 🎉

[22:36] *** niceperl left
[22:39] *** BenGoldberg left
[23:07] <lucs> codesections: Very interesting manifesto.

[23:15] *** BenGoldberg joined
[23:16] <codesections> thanks :D

[23:28] *** grep0r joined
[23:28] *** grep0r left
[23:35] *** pecastro left
[23:47] *** approaching236 left
