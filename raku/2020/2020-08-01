[00:05] *** xelxebar joined
[00:06] *** guifa2 left
[00:07] *** MilkmanDan joined
[00:12] *** Altai-man_ joined
[00:14] *** sena_kun left
[00:21] *** guifa2 joined
[00:33] *** cpan-raku left
[00:34] *** wamba left
[00:34] *** cpan-raku joined
[00:34] *** cpan-raku left
[00:34] *** cpan-raku joined
[00:49] *** Zero_Dogg left
[00:56] *** Zero_Dogg joined
[00:57] *** __jrjsmrtn__ joined
[00:57] *** _jrjsmrtn left
[01:04] *** ccamel left
[01:04] <rypervenche> I'm doing a .map on an array and I'd like to do something different for the first element than for the rest. Is there a better way to do this than to have a counter and check if it's == 1?

[01:26] <guifa2> not only having a counter, but you really need to be doing that with @array.kv.map

[01:26] <guifa2> I don't think there's a guarantee that maps are processed in order

[01:27] <guifa2> m: <a b c d e>.kv.map( -> \k, \v {¬†if k == 1 { "one" }¬†else { v } } )

[01:27] <camelia> rakudo-moar fcfc60b63: ( no output )

[01:28] <guifa2> m: say <a b c d e>.kv.map( -> \k, \v { if k == 1 { "one" } else { v } } )

[01:28] <camelia> rakudo-moar fcfc60b63: OUTPUT: ¬´(a one c d e)‚ê§¬ª

[01:28] *** aborazmeh joined
[01:28] *** aborazmeh left
[01:28] *** aborazmeh joined
[01:28] <guifa2> rypervenche: see above 

[01:34] <rypervenche> Ooh, no need for a counter then. I could just do a,  if k == 0

[01:47] *** gnufr33dom joined
[01:50] <guifa2> hrm

[01:50] <guifa2> m: loop (my $i = 0; $i < 2; $i++) {¬†print $i }; loop (my $i = 0; $i < 2; $i++) {¬†print $i }; 

[01:50] <camelia> rakudo-moar fcfc60b63: OUTPUT: ¬´Potential difficulties:‚ê§    Redeclaration of symbol '$i'.‚ê§    at <tmp>:1‚ê§    ------> 3 $i < 2; $i++) {¬†print $i }; loop (my $i7‚èè5 = 0; $i < 2; $i++) {¬†print $i };‚ê§0101¬ª

[01:51] <guifa2> m: loop (my $i = 0; $i < 2; $i++) {¬†print $i }; say $i; loop (my $i = 0; $i < 2; $i++) {¬†print $i }; 

[01:51] <camelia> rakudo-moar fcfc60b63: OUTPUT: ¬´Potential difficulties:‚ê§    Redeclaration of symbol '$i'.‚ê§    at <tmp>:1‚ê§    ------> 3 $i++) {¬†print $i }; say $i; loop (my $i7‚èè5 = 0; $i < 2; $i++) {¬†print $i };‚ê§012‚ê§01¬ª

[01:51] <guifa2> o.O

[01:52] <guifa2> That's‚Ä¶¬†something that will get some folks coming from other languages

[01:53] *** molaf_ left
[01:56] *** Sgeo left
[01:56] *** Sgeo joined
[01:57] *** ensamvarg3 joined
[02:05] *** Manifest0 left
[02:05] *** molaf_ joined
[02:05] *** Manifest0 joined
[02:18] *** holyghost left
[02:26] *** MilkmanDan left
[02:31] *** MilkmanDan joined
[02:44] *** lucasb left
[03:13] *** sena_kun joined
[03:14] *** Altai-man_ left
[03:34] *** aborazmeh left
[04:22] *** Sgeo left
[04:23] *** Sgeo joined
[04:54] *** Sgeo left
[04:56] *** Sgeo joined
[05:09] *** bocaneri joined
[05:19] *** aluaces joined
[05:43] *** Sgeo left
[05:45] *** Sgeo joined
[06:04] *** xinming left
[06:06] *** xinming joined
[06:12] *** Altai-man_ joined
[06:14] *** sena_kun left
[06:27] *** rindolf joined
[06:44] *** zacts left
[06:46] * guifa2 does a dance

[06:46] <guifa2> I finally got epochtime -> localtime given an olson ID.  Even handlees leap seconds :D

[06:54] *** andrzejku joined
[06:58] *** zacts joined
[06:59] *** skids left
[07:05] *** zacts left
[07:15] <moritz> rypervenche: great! Let me know what you think about it

[07:22] <Geth> ¬¶ advent: 429e93de8d | (Moritz Lenz)++ | 20th/articles/rfc112.md

[07:22] <Geth> ¬¶ advent: Language and markup fixes

[07:22] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/429e93de8d

[07:23] <Geth> ¬¶ advent: f2d5649c9b | (Moritz Lenz)++ | 20th/articles/rfc112.md

[07:23] <Geth> ¬¶ advent: Fix typo

[07:23] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/f2d5649c9b

[07:35] *** andrzejku left
[07:35] <Geth> ¬¶ ecosystem: a4b0359f3e | (Wenzel P. P. Peppmeyer)++ (committed using GitHub Web editor) | META.list

[07:35] <Geth> ¬¶ ecosystem: add Shell::Piping

[07:35] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/a4b0359f3e

[07:35] <Geth> ¬¶ ecosystem: 224aa12677 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[07:35] <Geth> ¬¶ ecosystem: Merge pull request #521 from gfldex/patch-5

[07:35] <Geth> ¬¶ ecosystem: 

[07:35] <Geth> ¬¶ ecosystem: add Shell::Piping

[07:35] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/224aa12677

[07:38] *** xinming left
[07:39] *** xinming joined
[07:41] *** leont joined
[07:42] *** JJMerelo joined
[07:46] *** domidumont joined
[07:52] *** vike left
[07:59] *** wamba joined
[08:00] *** xinming left
[08:01] *** xinming joined
[08:02] *** vike joined
[08:12] *** sena_kun joined
[08:14] *** Altai-man_ left
[08:14] <moritz> JJMerelo: re RFC advent, do I need to take care to publish my stuff, or will you do that?

[08:14] <JJMerelo> moritz please do it yourself. I can help you if you want, but you know the ropes already

[08:15] <moritz> JJMerelo: for which day?

[08:17] <JJMerelo> moritz day 3. 

[08:17] <JJMerelo> I'll ask Altai-man_ to program theirs for today

[08:18] <JJMerelo> .tell Altai-man_ can you please program your post for today 1 minute after midnight?

[08:18] <tellable6> JJMerelo, I'll pass your message to Altai-man_

[08:22] <moritz> JJMerelo: roger, post scheduled

[08:22] <JJMerelo> Thanks!

[08:22] <JJMerelo> BTW, we're talking about the "20th anniversary calendar", started today https://rakuadventcalendar.wordpress.com/2020/08/01/rfc1-threads/

[08:24] <moritz> JJMerelo: I'm pretty sure threads arrived in Perl 5 earlier than 5.10; I remember experimenting with them in 5.8.8

[08:24] <moritz> maybe even 5.6 had them

[08:24] <JJMerelo> moritz Maybe 5.8.8 was what I'm talking about

[08:25] <JJMerelo> I'll edit that

[08:25] <JJMerelo> BTW, just change the address to https://raku-advent.blog, which was donated by tbrowder

[08:26] <JJMerelo> moritz changed to 5.8.8, thanks!

[08:37] *** xinming left
[08:38] *** xinming joined
[08:38] <JJMerelo> BTW, we still need a dozen authors for the advent calendar https://github.com/Raku/advent/tree/master/20th Please claim an RFC, and add yourself there.

[08:39] *** Black_Ribbon left
[09:05] <tobs> I feel like I should write another one, but for a short and sweet and implemented feature.

[09:06] <mst> JJMerelo: 5.005 had what are now referred to as, well, 5005threads, then 5.6 switched to the ithreads model based on activestate's work emulating fork on win32

[09:06] <mst> hmm

[09:06] <mst> I'm sure -something- happened in 5.6

[09:06] <mst> but threads.pm itself went into core for 5.7.3

[09:06] <leont> ithreads in 5.6 was only used for pseudoforking

[09:07] <mst> ah, and Thread.pm and the 5005thread model was still all you got for threading?

[09:07] <leont> Yeah

[09:07] <leont> 5.005 threads was closer to raku's threading model, except the interpreter wasn't thread-safe at all. This wasn't workable at all.

[09:07] <mst> here we go: https://perldoc.pl/Thread#HISTORY

[09:08] <mst> right, 5.005threads were "what we would've liked to have except lolno"

[09:08] <leont> This is also why I was so upset with the Parrot people. They wrote a brand new VM, and didn't make it threadsafe from the start

[09:08] <mst> ithreads were "what actually worked given the constraints"

[09:08] <leont> ithreads kind of suck, but they were realistic

[09:09] <leont> That decision in parrot was so dumb I can only describe it as incompetent.

[09:09] <mst> right, and IME I don't manage to segfault them noticeable more often than I do single threaded perl

[09:09] <leont> It's the thing that doomed it to never going to work

[09:09] *** JJMerelo left
[09:10] <mst> every time I looked at parrot it seemed to be in a new state of "we're rewriting everything from the ground up, get back to us"

[09:10] <mst> eventually I stopped checking

[09:12] <leont> Whereas in MoarVM it was thread-safe from the ground up. In particular the GC.

[09:13] <moritz> it seems that projects that start with the premise of rewriting everything from scratch attract people who want to rewrite everything from scratch :D

[09:31] *** kensanata joined
[09:36] *** JJMerelo joined
[09:52] *** Ven`` joined
[09:55] *** domidumont left
[09:56] *** nige joined
[09:57] *** Sgeo left
[09:57] *** nige left
[09:58] *** nige joined
[09:58] *** nige left
[09:58] *** nige joined
[09:58] <nige> thanks AlexDaniel++

[10:02] *** xinming left
[10:12] *** xinming joined
[10:27] *** xinming left
[10:27] *** xinming joined
[10:29] *** rindolf left
[10:54] *** rockxloose left
[10:58] *** xinming left
[10:58] *** rockxloose joined
[10:58] *** xinming joined
[10:59] *** reach_satori_ left
[10:59] *** reach_satori_ joined
[11:12] *** Altai-man_ joined
[11:14] *** sena_kun left
[11:39] *** kensanata left
[11:41] <tbrowder> JJMerelo: is the 20th advent meant to be published starting 1 dec, and you're trying to get early commitment (with words) to avoid last minute panic, etc.?

[11:47] *** xinming left
[11:48] *** xinming joined
[11:51] <leont> No it's this month

[11:58] *** xinming left
[11:59] *** xinming joined
[12:10] *** libertas left
[12:12] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2020/08/01/dropin-replacement/

[12:16] *** Xliff joined
[12:19] <Xliff> [08:17:22] <Xliff> \o

[12:19] <Xliff> [08:17:40] <Xliff> Does raku support C-like escape codes?

[12:19] <Xliff> [08:17:53] <Xliff> What is the equivalent of "\x0000"?

[12:19] <Xliff> [08:18:17] <Xliff> Or any of the octal codes?

[12:20] *** aborazmeh joined
[12:20] *** aborazmeh left
[12:20] *** aborazmeh joined
[12:22] <Xliff> m: 0o303.say

[12:22] <camelia> rakudo-moar fcfc60b63: OUTPUT: ¬´195‚ê§¬ª

[12:22] <Xliff> m: 0o303.fmt('%x').say

[12:22] <camelia> rakudo-moar fcfc60b63: OUTPUT: ¬´c3‚ê§¬ª

[12:24] <Xliff> m: 0o244.fmt('%x').say

[12:24] <camelia> rakudo-moar fcfc60b63: OUTPUT: ¬´a4‚ê§¬ª

[12:36] *** yuplushi left
[13:04] *** aborazmeh left
[13:05] *** arbol joined
[13:06] *** JJMerelo left
[13:07] *** yuplushi joined
[13:13] *** sena_kun joined
[13:14] *** Altai-man_ left
[13:30] *** xinming left
[13:31] *** xinming joined
[13:38] *** lucasb joined
[13:39] <arbol> Is there an opinionated Raku code formatter?

[13:41] <arbol> Also looking for a linter/static analysis tool

[13:44] <sena_kun> No separate tool, but Comma partly solves this.

[13:44] <sena_kun> And likely more tools to come once recent re-work of compiler frontend will land.

[13:47] <arbol> Neat thanks! I'm using VSCode but I might have to check this out too

[13:55] *** tejr left
[13:57] *** arbol left
[14:00] *** xinming left
[14:01] <masak> yes, RakuAST would be a great starting point for a code formatter

[14:01] <tellable6> hey masak, you have a message: https://gist.github.com/517c579b2ffc70dabf000f82f7586abc

[14:01] <masak> I have a message... in a gist. go figure.

[14:03] *** xinming joined
[14:04] <masak> (hi #raku)

[14:05] <tadzik> hi o/

[14:05] *** tejr joined
[14:10] *** xinming left
[14:12] *** xinming joined
[14:21] *** aborazmeh joined
[14:21] *** aborazmeh left
[14:21] *** aborazmeh joined
[14:24] *** xinming left
[14:26] *** xinming joined
[14:27] *** aborazmeh left
[14:51] *** wamba left
[14:56] *** Ven`` left
[15:12] *** Altai-man_ joined
[15:14] *** sena_kun left
[15:14] *** xinming left
[15:15] *** xinming joined
[15:24] <guifa2> Arg

[15:25] <guifa2> Finally get my localtime functions to work and now I can't get the wrapping on DateTime to go

[15:27] <guifa2> Is there a way to, when wrapping a function, also add additionally arguments to it?

[15:28] <guifa2> m: class A { method foo {¬†"bar" } }; A.^find_method('foo').wrap( method ($a) { 'foo' ~ callsame ~ $a }); say A.new.foo;

[15:28] <camelia> rakudo-moar fcfc60b63: OUTPUT: ¬´Too few positionals passed; expected 2 arguments but got 1‚ê§  in method <anon> at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:28] <guifa2> So not enough arguments there but‚Ä¶

[15:28] <guifa2> m: class A { method foo {¬†"bar" } }; A.^find_method('foo').wrap( method ($a) { 'foo' ~ callsame ~ $a }); say A.new.foo('xyz')

[15:28] <camelia> rakudo-moar fcfc60b63: OUTPUT: ¬´Too many positionals passed; expected 0 arguments but got 1‚ê§  in method <anon> at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:28] <guifa2> Now we've got too many =\

[15:28] *** xinming left
[15:30] *** xinming joined
[15:32] <guifa2> Basically, it seems like when you wrap a function, the signature restraints are still imposed and can result in die messages when (I don't think) there should be

[15:32] <gfldex> guifa2: you are doing callsame on a method that doesn't want any arguments

[15:33] <gfldex> m: class A { method foo {¬†"bar" } }; A.^find_method('foo').wrap( method ($a) { 'foo' ~ callwith() ~ $a }); say A.new.foo('xyz')

[15:33] <camelia> rakudo-moar fcfc60b63: OUTPUT: ¬´Too few positionals passed; expected 1 argument but got 0‚ê§  in method foo at <tmp> line 1‚ê§  in method <anon> at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:33] <guifa2> I was just about to type it doesn't change with callwith =\

[15:35] <guifa2> I'm trying to add a named argument to DateTime's new() but at runtime it always balks when it sees the new one

[15:36] <gfldex> guifa2: when wrapping things, sometimes a BEGIN helps.

[15:37] <guifa2> hmm, hopefully that won't muck with precompilation

[15:38] <guifa2> whelp, actually that didn't help =\ still getting unexpected named parameter

[15:38] <gfldex> guifa2: in that case you might need INIT

[15:38] *** JJMerelo joined
[15:45] *** skids joined
[15:45] <JJMerelo> .tell moritz I've moved your post up to this AM, since it was the next one that seemed to be ready.

[15:45] <tellable6> JJMerelo, I'll pass your message to moritz

[15:46] <guifa2> ugh, I might need a new approach entirely.  I wanted to use wrap so I could stay in runtime and not breakprecompilation but i'm not sure if this is by design or an error

[15:46] <JJMerelo> .tell Altai-man_ Please confirm that you can schedule the post tomorrow, or allow me to post it myself.

[15:46] <tellable6> JJMerelo, I'll pass your message to Altai-man_

[15:47] <Altai-man_> JJMerelo, you can freely post it, if it seems worthy. I plan to also write another one, but maybe a bit later this weekend, need to rest first.

[15:47] <tellable6> 2020-08-01T08:18:07Z #raku <JJMerelo> Altai-man_ can you please program your post for today 1 minute after midnight?

[15:47] *** guifa2 left
[15:48] <JJMerelo> Altai-man_ great to hear that. Thanks!

[15:48] <Altai-man_> Thanks for doing the posting trickery for me.

[15:52] *** xinming left
[15:52] *** xinming joined
[15:54] <moritz> JJMerelo: ACK

[15:56] *** rindolf joined
[16:01] <JJMerelo> Altai-man_ done, scheduled for motrow night. I've set it to your authorship, just in case you want to dive in and make some last-minute changes.

[16:02] <Altai-man_> JJMerelo, thanks! Thanks for organizing all this.

[16:03] <JJMerelo> Altai-man_ thanks for participating. It's a nice article :-)

[16:38] <Geth> ¬¶ doc: 89863b9baa | (JJ Merelo)++ | doc/Language/5to6-perlfunc.pod6

[16:38] <Geth> ¬¶ doc: Fixes link to proceed/succeed, closes #1089

[16:38] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/89863b9baa

[16:38] <linkable6> Link: https://docs.raku.org/language/5to6-perlfunc

[16:38] <linkable6> DOC#1089 [closed]: https://github.com/Raku/doc/issues/1089 [docs][search] proceed succeed should be split in search

[16:38] *** xinming left
[16:41] *** xinming joined
[16:50] *** JJMerelo left
[17:04] *** guifa2 joined
[17:13] *** sena_kun joined
[17:14] *** Altai-man_ left
[17:25] *** xinming left
[17:26] *** xinming joined
[17:37] *** Sgeo joined
[17:43] *** reach_satori_ left
[17:45] *** OpenZen joined
[17:48] *** reach_satori_ joined
[17:58] *** cpan-raku left
[17:59] *** holyghost joined
[18:02] *** cpan-raku joined
[18:02] *** cpan-raku left
[18:02] *** cpan-raku joined
[18:18] *** xinming left
[18:18] *** xinming joined
[18:20] *** ensamvarg3 left
[18:34] *** wamba joined
[18:56] *** lichtkind joined
[19:07] *** bocaneri is now known as Sauvin

[19:12] *** Altai-man_ joined
[19:14] *** sena_kun left
[19:14] *** JJMerelo joined
[19:20] *** rindolf left
[19:25] *** JJMerelo left
[19:44] *** Altai-man_ left
[19:51] *** Altai-man_ joined
[20:36] *** molaf_ left
[20:43] *** nige left
[20:43] *** nige joined
[20:44] *** kensanata joined
[20:44] *** nige left
[20:44] *** nige joined
[20:57] *** kensanata left
[21:05] *** wamba left
[21:13] *** camelCaser joined
[21:19] *** wamba joined
[21:29] <Geth> ¬¶ advent: a83fd9131c | (Tobias Boege)++ | 20th/articles/rfc145.md

[21:29] <Geth> ¬¶ advent: Add summary to RFC 145 article

[21:29] <Geth> ¬¶ advent: review: https://github.com/Raku/advent/commit/a83fd9131c

[21:33] *** guifa2 left
[21:41] *** nige left
[21:43] *** gnufr33dom left
[21:49] *** gnufr33dom joined
[22:12] *** aluaces left
[22:13] *** sena_kun joined
[22:14] *** Altai-man_ left
[22:16] *** oneeggeach joined
[22:25] *** lichtkind left
[22:26] *** lichtkind joined
[22:26] *** lichtkind left
[22:49] *** leont left
[23:16] <Geth> ¬¶ problem-solving: vrurg assigned to jnthn Issue Uncertain status of tests in the roast https://github.com/Raku/problem-solving/issues/217

[23:24] *** oneeggeach left
[23:27] *** wamba left
