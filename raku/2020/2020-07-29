[00:01] *** guifa2 left
[00:10] *** MilkmanDan left
[00:10] *** andrew_ left
[00:10] *** MilkmanDan joined
[00:13] *** guifa2 joined
[00:13] *** guifa2 left
[00:19] *** Altai-man_ joined
[00:22] *** sena_kun left
[00:25] *** guifa2 joined
[00:35] *** aborazmeh joined
[00:35] *** aborazmeh left
[00:35] *** aborazmeh joined
[00:49] *** stux|RC-- joined
[00:49] *** stux|RC left
[00:49] *** Ekho left
[00:52] *** Ekho joined
[00:53] *** avar left
[00:53] *** avar joined
[00:53] *** avar left
[00:53] *** avar joined
[00:54] *** _jrjsmrtn joined
[00:54] *** __jrjsmrtn__ left
[00:57] *** aborazmeh left
[00:57] *** rjeli left
[00:57] *** dylanwh left
[00:57] *** Hotbees left
[00:57] *** pnu__ left
[00:57] *** greppable6 left
[00:57] *** committable6 left
[00:57] *** bisectable6 left
[00:57] *** reportable6 left
[01:01] *** rjeli joined
[01:01] *** dylanwh joined
[01:01] *** Hotbees joined
[01:01] *** pnu__ joined
[01:01] *** greppable6 joined
[01:01] *** committable6 joined
[01:01] *** bisectable6 joined
[01:01] *** reportable6 joined
[01:03] *** matiaslina left
[01:03] *** AlexDaniel` left
[01:03] *** Nasrudin left
[01:03] *** CIAvash left
[01:03] *** unclechu left
[01:04] *** oodani left
[01:07] *** oodani joined
[01:07] *** CIAvash joined
[01:13] *** unclechu joined
[01:13] *** AlexDaniel` joined
[01:13] *** matiaslina joined
[01:13] *** Nasrudin joined
[01:15] *** andrew_ joined
[01:33] *** sena_kun joined
[01:35] *** Altai-man_ left
[01:35] *** stux|RC-- left
[01:36] *** stux|RC joined
[01:49] *** Kaiepi left
[01:55] *** molaf left
[02:01] *** gnufr33dom joined
[02:06] *** ManifestO left
[02:06] *** ManifestO joined
[02:07] *** molaf joined
[02:30] *** zacts joined
[02:42] *** Altai-man_ joined
[02:44] *** sena_kun left
[02:49] *** xinming left
[02:50] *** xinming joined
[03:05] *** zacts left
[03:14] *** zacts joined
[03:29] *** andrew_ left
[03:34] *** vike left
[03:38] *** sena_kun joined
[03:40] *** Altai-man_ left
[04:10] *** [Coke] left
[04:17] *** [Coke] joined
[04:17] *** [Coke] left
[04:17] *** [Coke] joined
[04:22] *** Altai-man_ joined
[04:24] *** sena_kun left
[04:53] *** [Coke]_ joined
[04:54] *** [Coke] left
[04:59] *** maettu joined
[05:00] *** OpenZen left
[05:02] *** sena_kun joined
[05:04] *** Altai-man_ left
[05:13] *** Altai-man_ joined
[05:15] *** sena_kun left
[05:32] *** sena_kun joined
[05:32] *** andrzejku joined
[05:34] *** Altai-man_ left
[05:39] *** aluaces joined
[05:39] *** aluaces is now known as alberto

[05:40] *** alberto is now known as Guest30794

[05:42] *** Maylay left
[05:46] *** Maylay joined
[06:02] *** vike joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:11] *** Altai-man_ joined
[06:14] *** sena_kun left
[06:17] *** andrzejku left
[06:31] *** patrickb joined
[06:35] *** patrickb left
[06:38] *** zacts left
[06:42] *** andrzejku joined
[06:47] *** patrickb joined
[06:53] *** Guest30794 is now known as aluaces

[06:54] *** ufobat joined
[06:54] <Geth> Â¦ advent/master: 4 commits pushed by Altai-man++, (Juan JuliÃ¡n Merelo GuervÃ³s)++

[06:54] <Geth> Â¦ advent/master: 53cec909eb | Remove trailing white space

[06:54] <Geth> Â¦ advent/master: efa4fdccba | Add day 2 article

[06:54] <Geth> Â¦ advent/master: 2bb9cbb322 | Match actual content with one in README

[06:54] <Geth> Â¦ advent/master: a12c25c33d | Merge pull request #52 from Raku/day2

[06:54] <Geth> Â¦ advent/master: review: https://github.com/Raku/advent/compare/7f43f834273a...a12c25c33d74

[06:56] *** zacts joined
[06:59] *** kensanata joined
[07:38] *** dakkar joined
[07:42] *** Kaiepi joined
[07:48] *** xinming left
[07:48] *** xinming joined
[08:00] *** pecastro joined
[08:03] <kawaii> good morning o/

[08:08] <[ptc]> \o

[08:12] *** sena_kun joined
[08:14] *** Altai-man_ left
[08:21] *** rindolf joined
[08:21] *** squashable6 left
[08:23] *** leont joined
[08:24] *** squashable6 joined
[08:26] *** synthmeat left
[08:27] *** synthmeat joined
[08:27] *** synthmeat left
[08:28] *** synthmeat joined
[08:35] <zacts> morning

[08:36] <zacts> I want to get involved with raku; don't know exactly where to begin.

[08:38] <sena_kun> zacts, it depends on what you want and can (learn to) work on. For starters, see https://raku.org/community/ <- Getting Involved section where number of activities is described.

[08:41] <zacts> cool. I'm guessing I should start by learning the language a bit first.

[08:41] <sena_kun> Yes. In fact, even trying to setup things can be helpful, as you can report issues, inconveniences and such.

[08:42] <zacts> I'm hoping to find a way to define my own syntax and stuff.

[08:42] <zacts> like, at least from what I gather, it seems that raku has a lot of promise for my goals of a daily language that I work with.

[08:43] <sena_kun> Extending the syntax is surely possible, yes.

[08:43] <zacts> I'm looking for something that I can customize, kind of like what I might do with the fish shell but for a programming language.

[08:51] <zacts> ah, is there a good list of books?

[08:52] <zacts> https://perl6book.com/

[08:52] <zacts> cool

[08:56] *** zacts left
[09:35] *** zacts joined
[09:35] *** Sgeo left
[09:51] *** zacts left
[09:56] *** Tirifto joined
[09:59] *** skids joined
[09:59] <holyghost> I started on the X11 client for my music editor, with an example from scx, scheme bindings for X11

[10:00] <holyghost> now I have to write a scheme widget kit, several widgets and other sound processing software

[10:01] *** Kaiepi left
[10:01] <abraxxa> X11 is dead, Wayland is the future

[10:01] <tellable6> hey abraxxa, you have a message: https://gist.github.com/d2587255010615a4481c8e4152833ed6

[10:02] <holyghost> I have to wait for a posted book thoughm to commence

[10:02] *** Kaiepi joined
[10:03] *** Kaiepi left
[10:03] *** Kaiepi joined
[10:03] *** skids left
[10:06] *** JJMerelo joined
[10:11] *** Altai-man_ joined
[10:13] *** sena_kun left
[10:15] *** MasterDuke left
[10:17] *** skids joined
[10:29] <Geth> Â¦ advent: taboege++ created pull request #53: 20th: claim RFC 145

[10:29] <Geth> Â¦ advent: review: https://github.com/Raku/advent/pull/53

[10:36] *** gnufr33dom left
[10:37] *** TimToady left
[10:39] *** ufobat left
[10:39] *** Black_Ribbon left
[10:40] <Geth> Â¦ advent: a5f7454b05 | (Tobias Boege)++ | 20th/README.md

[10:40] <Geth> Â¦ advent: 20th: claim RFC 145

[10:40] <Geth> Â¦ advent: review: https://github.com/Raku/advent/commit/a5f7454b05

[10:40] <Geth> Â¦ advent: 5b936c8e3b | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 20th/README.md

[10:40] <Geth> Â¦ advent: Merge pull request #53 from taboege/master

[10:40] <Geth> Â¦ advent: 

[10:40] <Geth> Â¦ advent: 20th: claim RFC 145

[10:40] <Geth> Â¦ advent: review: https://github.com/Raku/advent/commit/5b936c8e3b

[10:44] *** TimToady joined
[10:46] *** cpan-raku left
[10:47] *** cpan-raku joined
[10:47] *** cpan-raku left
[10:47] *** cpan-raku joined
[11:08] *** JJMerelo left
[11:08] *** JJMerelo joined
[11:13] *** Kaiepi left
[11:25] *** andrzejku left
[11:26] *** ufobat joined
[11:29] *** andrzejku joined
[11:53] <Geth> Â¦ doc: taboege++ created pull request #3541: Remove false "shorthand"

[11:53] <Geth> Â¦ doc: review: https://github.com/Raku/doc/pull/3541

[12:01] *** Noisytoot left
[12:01] *** Noisytoot joined
[12:12] *** sena_kun joined
[12:14] <[ptc]> JJMerelo: is it possible to install older versions of Documentable?  I've only been able to find 1.3.1 via zef

[12:14] <tellable6> 2020-07-29T10:08:58Z #raku-dev <JJMerelo> [ptc] it's a reasonable option to remove that, yes. It's not running anyway, and hasn't for some time.

[12:14] *** Altai-man_ left
[12:14] <[ptc]> JJMerelo: ok, I'll get rid of the whateverable stuff.  Thanks for the feedback!

[12:25] *** andrew joined
[12:34] *** squashable6 left
[12:42] *** cydf joined
[12:45] *** aborazmeh joined
[12:45] *** aborazmeh left
[12:45] *** aborazmeh joined
[13:09] *** andrzejku left
[13:21] *** Kaiepi joined
[13:24] *** wamba joined
[13:24] *** aborazmeh left
[13:30] *** JJMerelo left
[13:33] <tbrowder> .tell vrurg see fixed conflicts on roast #657

[13:33] <tellable6> tbrowder, I'll pass your message to vrurg

[13:40] <vrurg> tbrowder: thanks!

[13:42] <tbrowder> you're welcome. thnx for doing the cleanup!

[13:46] *** [Coke]_ is now known as [Coke]

[13:46] *** MasterDuke joined
[14:10] *** lucasb joined
[14:11] *** patrickb left
[14:11] *** Altai-man_ joined
[14:12] *** patrickb joined
[14:14] *** sena_kun left
[14:14] *** OpenZen joined
[14:27] <vrurg> tbrowder: have you hardcoded all WS into the pod block of the test itself?

[14:33] <Geth> Â¦ doc: 3c3352640d | (Tobias Boege)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[14:33] <Geth> Â¦ doc: Remove false "shorthand" (#3541)

[14:33] <Geth> Â¦ doc: 

[14:33] <Geth> Â¦ doc: The code referred to as a "shorthand" is in fact longer in bytes

[14:33] <Geth> Â¦ doc: and in the number of regex atoms involved. This is corrected and

[14:33] <Geth> Â¦ doc: another quality of the `~` operator is mentioned as a substitute,

[14:33] <Geth> Â¦ doc: then the paragraph is reflowed.

[14:33] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/3c3352640d

[14:33] <linkable6> Link: https://docs.raku.org/language/regexes

[14:33] <linkable6> DOC#3541 [closed]: https://github.com/Raku/doc/pull/3541 Remove false "shorthand"

[14:38] *** wamba left
[14:51] *** guifa_ joined
[14:55] *** Manifest0 joined
[14:56] *** sivoais_ joined
[14:58] *** oodani_ joined
[14:58] *** guifa left
[14:58] *** oodani left
[14:58] *** guifa_ is now known as guifa

[14:58] *** ManifestO left
[14:58] *** sivoais left
[15:00] *** squashable6 joined
[15:03] *** andrew left
[15:04] <tbrowder> vrurg: yes, but it probably ought to be in \x[nnnn] form for clarity. but there are some subtleties in there i don't recall now so i'm reluctant to revisit mods.

[15:04] *** lichtkind joined
[15:05] <tbrowder> all i did was use the code generator and captured the output, cleaned it up a bit, and voila!

[15:05] <tbrowder> oh,

[15:06] <tbrowder> and extracted the subs to a test module

[15:06] <vrurg> tbrowder: I'll be afk for some time. But I left comments on the PR with a suggestion.

[15:06] <tbrowder> ok

[15:07] <vrurg> The idea is that it is possible to use EVAL without affecting test code clarity.

[15:08] <kawaii> Is there a reliable way of a Raku script/application knowing it's own memory usage?

[15:14] <codesections> I'm not aware of one directly.  There's probably a way to use `Kernel.free-memory` and some math to get a pretty good estimate (or, at least, of how it's changing over time).  Or you could shell out

[15:15] <codesections> or use NativeCall 

[15:16] <[Coke]> didn't lizmat do some work that gives us this info?

[15:18] <kawaii> If that's the case I'd be _really_ interested in knowing how :)

[15:21] *** andrew joined
[15:28] *** andrew is now known as andrew[43]

[15:44] *** Sgeo joined
[15:48] *** MilkmanDan left
[15:49] *** andrew[43] is now known as andrew

[15:49] *** andrew is now known as andrew[43]

[15:53] *** kensanata left
[15:54] *** OpenZen left
[15:55] *** raku-bridge left
[15:55] *** raku-bridge joined
[15:55] *** raku-bridge left
[15:55] *** raku-bridge joined
[15:59] *** cpan-raku left
[16:01] *** patrickb left
[16:01] <codesections> (if you are willing to shell out, something like `say (run <ps -o rss=>, $*PID, :out).out.slurp` should work)

[16:02] <codesections> m: say (run <ps -o rss=>, $*PID, :out).out.slurp

[16:02] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«100836â¤â¤Â»

[16:02] <codesections> I'm kind of surprised Camelia lets me print her system info

[16:12] *** sena_kun joined
[16:13] <[Coke]> codesections: Hard to put things in "safe" mode.

[16:14] *** Altai-man_ left
[16:14] <[Coke]> easier to run inside a container that doesn't have real system access.

[16:18] *** zacts joined
[16:20] *** xinming_ joined
[16:22] *** zacts left
[16:23] *** zacts joined
[16:23] *** xinming left
[16:26] <El_Che> i heard something of a dot release?

[16:26] <El_Che> is there one? (holidays so somewhat out of the loop)

[16:27] <sena_kun> El_Che, the fix suggested was incomplete, so the bug is still here, so we can't point.

[16:27] <El_Che> ok, "good". I'll try to check daily to release updated pkgs when out

[16:27] <El_Che> thx

[16:28] *** MilkmanDan joined
[16:30] <sena_kun> El_Che, I'll ping you if we have one out.

[16:31] <El_Che> thx!

[16:32] *** dakkar left
[16:40] *** bigdata joined
[16:41] *** andrew[43] left
[16:48] *** lichtkind left
[16:52] <kawaii> codesections: hey that looks like a decent little hack for now, thanks!

[16:57] *** bigdata left
[16:59] <codesections> :)

[17:01] *** skids left
[17:07] *** MilkmanDan left
[17:07] *** MilkmanDan joined
[17:08] <zacts> cool, so I'm going to start with the book Think Raku.

[17:13] *** kensanata joined
[17:19] *** MilkmanDan left
[17:21] *** MilkmanDan joined
[17:27] *** kensanata left
[17:28] *** pmurias joined
[17:29] <pmurias> hi,

[17:29] <pmurias> is the growth/size of the Raku community/ecosystem somehow measured?

[17:32] <[Coke]> There are metrics that could be gathered, but I don't think anyone is

[17:33] <[Coke]> # of modules in the ecosystem list, # of people with commit bits, # of questions/participants on SO

[17:33] <[Coke]> people in the FB group, on IRC chat, perl6-users mailing list...

[17:36] <[Coke]> but I don't know of any tracking. (also: #rakulang on twitter)

[17:36] <codesections> https://finanalyst.github.io/ModuleCitation/ reports the growth in the number of published modules since 2016

[17:36] <codesections> (the 3rd graph)

[17:36] <pmurias> seems a least interesting at least to me, always found it hard to estimate how things where doing even when I was an active part of the community

[17:37] <codesections> well, that graph shows growth from 452 modules to 12,52

[17:37] <codesections> *1,252

[17:39] <zacts> I wonder if I can script vim with raku?

[17:40] <codesections> so, we've *almost* caught up to JavaScript.  Just need to increase our package count by â¦ *checks* â¦ 3 orders of magnitude!

[17:40] <codesections> :zacts Vim or NeoVim?

[17:40] <zacts> either actually

[17:41] <codesections> I'd *think* neovim would be pretty doable.  Wasn't multi-language extensibility part of their pitch?  But I haven't kept up 

[17:47] <tadzik> afaik as long as you can send JSON over sockets you can script neovim. Haven't done any of that though, so I could be wrong

[17:48] *** reach_satori_ left
[17:48] *** reach_satori_ joined
[17:48] <codesections> And the same will be true for Emacs in a few months

[17:48] <codesections> (when v27 is released) 

[17:49] <pmurias> tadzik: hi, do you still live in Warsaw?

[17:49] <tadzik> pmurias: yeah

[17:50] <pmurias> I have relocated to Warsaw like a ~month ago

[17:50] <tadzik> oh nice :)

[17:50] <tadzik> this could be a good opportunity to revive Warsaw.pm somewhat, if it wasn't for the pandemic and all that :/

[17:51] <tadzik> pmurias: which part of Warsaw did you settle in?

[17:51] <timotimo> facemask.pm

[17:52] <timotimo> like bicycle.pm

[17:52] <lizmat> kawaii: perhaps https://docs.raku.org/type/Telemetry is of interest

[17:52] <pmurias> https://goo.gl/maps/B9iz9tjRJnbPoxxj8

[17:54] *** JJMerelo joined
[17:54] <tadzik> close to the park, nice

[17:54] <tadzik> you started at Google, right?

[17:55] <pmurias> yes, writing frontend stuff in typescript and angular

[17:57] <pmurias> it's wfh unfortunately but I relocated anyway to Warsaw

[18:11] *** Altai-man_ joined
[18:13] *** sena_kun left
[18:17] *** molaf left
[18:17] <pmurias> tadzik: if you want to meet sometime let me know 

[18:18] *** Tirifto left
[18:20] *** Tirifto joined
[18:25] *** Sauvin left
[18:28] *** andrew joined
[18:40] *** andrew is now known as andrew[43]

[18:46] *** andrzejku joined
[18:48] *** JJMerelo left
[18:50] *** ufobat left
[18:52] *** wamba joined
[18:52] <codesections> I'm pretty confused.  Either I don't understand Raku's introspection or Raku is lying to me

[18:53] *** wamba left
[18:53] <codesections> I read this as saying "there is an `add` method that BagHash can call; specifically the one it gets from BagHash"

[18:53] <codesections> m: say BagHash.^lookup('add'); say BagHash.^lookup('add').package;

[18:53] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«addâ¤(BagHash)â¤Â»

[18:53] <codesections> And I read *this* as saying "there is no `add` method in Str's inheritance graph"

[18:53] <codesections> m: say Str.^lookup('add');

[18:53] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«(Mu)â¤Â»

[18:53] *** pmurias left
[18:53] <codesections> I am thus not surprised to get this error:

[18:53] <codesections> m: Str.add;

[18:53] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«No such method 'add' for invocant of type 'Str'â¤  in block <unit> at <tmp> line 1â¤â¤Â»

[18:53] <codesections> Here's where I *am* surprised:

[18:53] <codesections> m: say Buf.^lookup('list');

[18:53] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«(Mu)â¤Â»

[18:53] <codesections> m: say Buf.list;

[18:53] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«((Buf))â¤Â»

[18:54] <SmokeMachine> m: say Buf.^find_method: âlistâ

[18:54] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«The 'ForeignCode' class is a Rakudo-specificâ¤implementation detail and has no serviceable parts insideâ¤Â»

[18:54] <codesections> Why does `Buf.list` act like a valid method call when `Buf.^lookup('list')` just told me there *isn't* a list method in `Buf`'s object graph

[18:54] <codesections> oh

[18:55] <codesections> hmm

[19:00] <codesections> From the `lookup` docs:

[19:00] <codesections> > Returns the first matching method object of the provided $name or (Mu) if no method object was found. The search for a matching method object is done by following the mro of $obj. Note that lookup is supposed to be used for introspection, if you're after something which can be invoked you probably want to use find_method instead.

[19:00] <codesections> > The difference between find_method and lookup are that find_method will use a default candidate for parametric roles, whereas lookup throws an exception in this case, and that find_method honors FALLBACK methods, which lookup does not.

[19:01] <codesections> does that mean that `Buf.^lookup('list').defined` *should* return False, and the current behavior is a bug?

[19:02] <guifa2> codesections: was it you that was asking about wanting floating values in BagHash?  I know someone was asking about it

[19:02] <codesections> It wasn't me

[19:11] *** lichtkind joined
[19:14] *** andrzejku left
[19:55] <lizmat> guifa2: I guess you know the answer?  MixHash ?

[19:58] <guifa2> lizmat: yeah

[19:58] <codesections> I think Raku is just messing with me at this point: 

[19:58] <codesections> m: Metamodel::MROBasedMethodDispatch.find_method

[19:58] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«No such method 'find_method' for invocant of typeâ¤'Perl6::Metamodel::MROBasedMethodDispatch'.  Did you mean 'find_method'?â¤  in block <unit> at <tmp> line 1â¤â¤Â»

[19:59] <lizmat> codesections: ^find_method

[19:59] <lizmat> it's a method on the meta-object

[19:59] <codesections> oh, right!

[19:59] <codesections> I knew that at some pointâ¦

[20:00] <lizmat> also: some of these methods only look at the methods in the class themselves, and not whether the method is inherited or not

[20:00] <codesections> Yeah.  I'm actually trying to get deep into walking the inheritance graph

[20:00] <lizmat> codesections++

[20:02] *** zacts left
[20:03] <codesections> So, how would I refer to the `^find_method` code object?

[20:04] *** andrzejku joined
[20:12] *** sena_kun joined
[20:13] <[Coke]> ^foo is shorthand - you can write it out the long way.

[20:13] <lizmat> codesections: ^find_method returns a code object?

[20:13] <lizmat> m: dd Int.^find_method("Str")(42)

[20:13] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«"42"â¤Â»

[20:14] <[Coke]> or that. ;)

[20:14] *** Altai-man_ left
[20:14] *** MasterDuke left
[20:16] <codesections> lizmat: right, `^find_method` returns the code object for it's argument.  So, your example gave me the `Int.Str` code object

[20:16] <codesections> I'm asking about the `^find_method` code object.  E.g., I want to write something like:

[20:17] <codesections> m: say &Metamodel::MROBasedMethodDispatch.^find_method('find_method')

[20:17] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«(Mu)â¤Â»

[20:18] <codesections> except that doesn't work, because it's looking for `find_method` as an method on `Metamodel::MROBasedMethodDispatch`, when I guess it should be on a meta-object corresponding to that Metamodel? or something like that?

[20:19] <lizmat> codesections: so you're introspecting the introspection ?

[20:19] <codesections> Trying to :D

[20:19] *** andrew[43] left
[20:20] <lizmat> ah...  ok, that feels... bold  :-)

[20:20] <codesections> haha yeah, it's more an attempt to wrap my head around how these things work/take things apart in the REPL

[20:20] <codesections> not something I'm deploying :D

[20:22] <lizmat> it's just that as deeper you go into that, the supporting tortoises start to show up  :-)

[20:24] <guifa2> wait.... Raku(do)'s core is actually Logo?

[20:25] <codesections> That's entirely fair.  What I was actually looking at this for (er, right now; it's been a bit of a yak shave) was to decide if I should open an issue about what I discussed above: 

[20:25] <codesections> &Metamodel::MROBasedMethodDispatch.^find_method('find_method')

[20:25] <codesections> er no, wrong paste

[20:25] <codesections> m:  say Buf.^find_method('list').defined; say Buf.^lookup('list').defined

[20:25] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«Trueâ¤Falseâ¤Â»

[20:26] <guifa2> .tell supernovus Looking over your old Timezone code.  Found some old TODOs you left in and wanted to see if we could work together to get those solved

[20:26] <tellable6> guifa2, I'll pass your message to supernovus

[20:26] <codesections> should those both be True?  Or am I misunderstanding the difference between those two meta-methods?

[20:36] *** cy_d_fect joined
[20:37] *** molaf joined
[20:37] *** cydf left
[20:38] <moritz> m: say Buf.^HOW

[20:38] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Cannot use .^ on a non-identifier method callâ¤at <tmp>:1â¤------> 3say Buf.^HOW7â5<EOL>â¤    expecting any of:â¤        method argumentsâ¤Â»

[20:38] <moritz> m: say Buf.HOW.^name

[20:38] <camelia> rakudo-moar a3af5833d: OUTPUT: Â«Perl6::Metamodel::ParametricRoleGroupHOWâ¤Â»

[20:39] <moritz> parametric roles is exactly where these two method methods differ, iirc

[20:41] *** rindolf left
[20:42] <codesections> and (dare I ask?) what is a parametric role? :D  

[20:42] <codesections> The docs tell me that "A Metamodel::ParametricRoleHOW represents a non-instantiated, possibly parameterized, role"

[20:42] <codesections> but I'm not enlightened 

[20:46] <Geth> Â¦ doc: 88bc7e51de | Antonio++ (committed using GitHub Web editor) | template/main.mustache

[20:46] <Geth> Â¦ doc: Add main.mustache, refs #2508

[20:46] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/88bc7e51de

[20:46] <linkable6> DOC#2508 [open]: https://github.com/Raku/doc/issues/2508 [build][site] Create site-specific Mustache templates

[20:47] *** xinming_ left
[20:47] *** xinming_ joined
[20:51] *** sivoais_ left
[20:57] *** andrew joined
[21:02] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2020/07/29/augmenting-with-exitcode/

[21:03] <gfldex> codesections: see: https://docs.raku.org/language/typesystem#Parameterized

[21:05] <codesections> Thanks.  I'd somehow missed that the MOP was documented on that page in addition to it's own

[21:07] <gfldex> codesections: The MOP is _one_ way to construct types. Type declarators may or may not boild down to MOP calls.

[21:08] <codesections> Oh, I thought it was _the_ way.  Thanks

[21:15] *** andrzejku left
[21:18] *** sivoais joined
[21:36] *** OpenZen joined
[22:00] *** andrew is now known as andrew[43]

[22:00] *** andrew[43] left
[22:02] *** andrew joined
[22:11] *** Altai-man_ joined
[22:14] *** sena_kun left
[22:22] *** cy_d_fect_ joined
[22:24] *** cy_d_fect left
[22:26] *** leont left
[22:46] *** wamba joined
[22:48] <kawaii> https://www.irccloud.com/pastebin/dCcj67ML/Not%20sure%20if%20there%20are%20any%20other%20Red%20users%20here%2C%20but%20getting%20what%20I%20assume%20to%20be%20some%20error%20about%20typecasting%20from%20it%20when%20using%20two%20values%20in%20a%20select%20statement...%20for%20some%20reason

[22:49] <kawaii> oh it typed my message in the paste title field... useful

[22:49] <kawaii> https://www.irccloud.com/pastebin/4j3jPMxe/

[22:50] <kawaii> I don't know why I'm getting what looks to be a typecasting error when doing a simple select statement with Red

[22:53] <kawaii> Ah, I figured it out, I need to use `,` instead of `&&` here

[23:06] *** lichtkind left
[23:11] <tbrowder> hi, all

[23:12] <kawaii> o/

[23:12] <tbrowder> i filed an issue with rakudo and have not heard from anyone about it

[23:12] <tbrowder> kawaii: howdy!

[23:13] <tbrowder> i asked why can't a normal user query %?RESOURCES for an installed module

[23:15] *** guifa2 left
[23:15] <tbrowder> currently the %?RESOURCES hash is almost useless without some effort by a module author making a sub so a user can access the module's resources.

[23:16] <tbrowder> if you look at some of the Documentable's problems they could be solved with easier access to the RESOURCES hook.

[23:28] <tony-o> tbrowder: i have an interesting thought on an relational mapping i want to build on DB:: stuff since some precomp change hosed Xoos

[23:28] <tellable6> 2020-07-28T22:07:36Z #raku <patrickb> tony-o I commented on https://gist.github.com/tony-o/07fdf8b3a0f364b182e6034131ac224b

[23:28] *** andrew left
[23:32] <tony-o> .tell patrickb i'll flesh that out in the gist tomorrow ante meridiem

[23:32] <tellable6> tony-o, I'll pass your message to patrickb

[23:33] <tony-o> .tell patrickb that being the zef ecosystem tpf doc

[23:33] <tellable6> tony-o, I'll pass your message to patrickb

[23:34] *** pecastro left
[23:36] *** guifa2 joined
[23:49] <tbrowder> tony-o: always interested in DB stuff

[23:52] *** zacts joined
[23:52] *** zacts left
[23:52] *** zacts joined
[23:55] *** Tirifto left
