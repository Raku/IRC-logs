[00:19] *** Zero_Dogg left
[00:20] *** Zero_Dogg joined
[00:36] <rypervenche> Ahhh, that's what I was wanting to know. Great! Thanks.

[00:54] *** __jrjsmrtn__ joined
[00:55] *** _jrjsmrtn left
[01:29] *** Noisytoot left
[01:50] *** Noisytoot joined
[01:52] *** sena_kun joined
[01:54] *** Altai-man_ left
[01:55] *** hungrydonkey left
[02:06] *** satori__ joined
[02:08] *** reach_satori_ left
[02:16] *** cpan-raku left
[02:17] *** cpan-raku joined
[02:17] *** cpan-raku left
[02:17] *** cpan-raku joined
[02:28] *** Xliff joined
[02:34] *** Zero_Dogg left
[02:36] *** _jrjsmrtn joined
[02:37] *** __jrjsmrtn__ left
[02:47] *** Zero_Dogg joined
[03:40] *** wamba joined
[03:52] *** Altai-man_ joined
[03:54] *** sena_kun left
[04:37] *** kst left
[04:43] *** guifa2 joined
[05:00] *** hungrydonkey joined
[05:08] *** hungrydonkey left
[05:08] *** hungryd7 joined
[05:10] *** vrurg left
[05:11] *** vrurg joined
[05:14] *** xinming left
[05:16] *** OpenZen left
[05:16] *** vrurg left
[05:18] *** xinming joined
[05:24] *** andrzejku joined
[05:27] *** yht joined
[05:42] *** wamba left
[05:44] *** vrurg joined
[05:44] *** vrurg left
[05:44] *** vrurg joined
[05:45] *** xinming left
[05:46] *** xinming joined
[05:53] *** sena_kun joined
[05:53] *** andrzejku left
[05:54] *** Altai-man_ left
[06:08] *** aindilis left
[06:08] *** xinming left
[06:10] *** xinming joined
[06:16] *** kensanata joined
[06:23] *** andrzejku joined
[06:32] *** JJMerelo joined
[06:33] *** sno left
[07:00] *** hungrydonkey joined
[07:02] *** hungryd7 left
[07:06] *** sno joined
[07:08] *** rindolf joined
[07:09] *** yht left
[07:22] *** yht joined
[07:30] *** hungryd88 joined
[07:32] *** hungrydonkey left
[07:48] *** dakkar joined
[07:51] *** Altai-man_ joined
[07:54] *** sena_kun left
[08:00] *** aindilis joined
[08:12] *** aindilis left
[08:19] <AlexDaniel`> m: my uint8 $x = 255; say $x++

[08:19] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´-1‚ê§¬ª

[08:19] <AlexDaniel`> -_-

[08:19] <AlexDaniel`> bisect: my uint8 $x = 255; say $x++

[08:19] <bisectable6> AlexDaniel`, Will bisect the whole range automagically because no endpoints were provided, hang tight

[08:19] <bisectable6> AlexDaniel`, ¬¶6c (44 commits): ¬´-1‚ê§¬ª

[08:19] <bisectable6> AlexDaniel`, Nothing to bisect!

[08:21] *** pecastro joined
[08:21] <AlexDaniel`> m: my uint8 $a = 200; my uint8 $b = -50; .say for $a..$b

[08:21] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´200‚ê§201‚ê§202‚ê§203‚ê§204‚ê§205‚ê§206‚ê§¬ª

[08:23] *** oddp joined
[08:33] *** aindilis joined
[08:35] *** sarna joined
[08:36] *** benaiah left
[08:37] *** benaiah joined
[08:44] *** Sgeo left
[08:49] *** hungryd88 left
[08:50] *** hungrydonkey joined
[08:52] *** JJMerelo left
[08:53] <cpan-raku> New module released to CPAN! HelloWorld (1.0.2) by 03PMQS

[08:53] *** sena_kun joined
[08:56] *** Altai-man_ left
[08:59] *** markoong joined
[09:02] *** hungryd51 joined
[09:05] *** markong joined
[09:05] *** markoong left
[09:06] *** hungrydonkey left
[09:07] *** hungrydonkey joined
[09:10] *** hungryd51 left
[09:18] *** rindolf left
[09:18] *** hungryd57 joined
[09:21] *** xinming left
[09:21] *** xinming joined
[09:22] *** hungrydonkey left
[09:28] *** antoniogamiz joined
[09:28] *** rbt left
[09:29] *** rbt joined
[09:36] *** yht left
[09:41] <antoniogamiz> m: my $string = '<a href="?!^a">b</a>'; my $content; say $string ~~ /href\=\"{$content=$¬¢}\"/;

[09:41] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´Nil‚ê§¬ª

[09:41] <antoniogamiz> m: my $string = '<a href="?!^a">b</a>'; my $content; $string ~~ /href\=\"{$content=$¬¢}\"/; say $content;

[09:41] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´#<failed match>‚ê§¬ª

[09:42] <antoniogamiz> someone knows why it's failing?

[09:42] <timotimo> m: my $string = '<a href="?!^a">b</a>'; my $content; say $string ~~ /href\=\"$<cm>=<-["]>+{$content=$<cm>.Str}\"/; dd $content;

[09:42] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´ÔΩ¢href="?!^a"ÔΩ£‚ê§ cm => ÔΩ¢?!^aÔΩ£‚ê§Str $content = "?!^a"‚ê§¬ª

[09:42] <antoniogamiz> $<cm> mmmm

[09:42] <timotimo> you're not matching anything, your regex is looking for "" which isn't in the source, so the match fails

[09:42] <timotimo> stands for "content match"

[09:43] <timotimo> because i'm too lazy to type

[09:44] <antoniogamiz> makes sense, thanks a lot :)

[09:51] <timotimo> YW

[09:51] *** Altai-man_ joined
[09:52] <timotimo> m: my $string = '<a href="?!^a">b</a>'; $string ~~ /href\=\"$<cm>=<-["]>+\"/; dd $<cm>.Str;

[09:52] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´"?!^a"‚ê§¬ª

[09:53] <timotimo> if you don't actually need your $content variable to immediately contain the stuff, you can just use $<cm> after the match and drop the code block inside the regex

[09:54] *** sena_kun left
[09:54] <antoniogamiz> done :)

[09:56] *** softmoth left
[09:58] *** sno left
[10:06] *** rindolf joined
[10:18] *** yht joined
[10:35] *** sno joined
[10:41] *** patrickb joined
[10:54] *** Black_Ribbon left
[11:00] <cpan-raku> New module released to CPAN! HelloWorld (1.0.3) by 03PMQS

[11:00] *** yht left
[11:01] *** antoniogamiz left
[11:08] *** robertle left
[11:28] *** tejr left
[11:32] <cpan-raku> New module released to CPAN! Raku-GitHub-Workflows (1.0.4) by 03PMQS

[11:35] *** tejr joined
[11:45] *** tejr left
[11:47] *** bingos is now known as BinGOs

[11:49] *** hungryd57 left
[11:49] *** hungrydonkey joined
[11:52] *** sena_kun joined
[11:54] *** Altai-man_ left
[11:58] *** skaji_ left
[11:59] *** skaji_ joined
[12:00] *** dyske joined
[12:00] *** dyske left
[12:01] *** dyske joined
[12:03] *** dyske left
[12:03] *** vrurg left
[12:04] *** vrurg joined
[12:09] *** vrurg left
[12:12] *** vrurg joined
[12:44] *** petr85 joined
[12:48] *** petr85 left
[12:54] <rypervenche> How long does modules.raku.org take to update once a new module is added to it?

[12:58] <lizmat> rba ^^  ??

[13:02] <rba> modules.raku.org gets updated every 30 minutes.

[13:03] <tellable6> 2020-06-24T12:09:10Z #raku <patrickb> rba There is a new rakubrew release: Version 12. Can you upload versions 10, 11 and 12 to the website? (https://rooster.uber.space/patcloud/index.php/s/qmkreEJLQDZcjbf)

[13:03] <tellable6> 2020-07-09T08:48:38Z #raku-dev <patrickb> rba: Can you teach me how to deploy changes to rakubrew.org myself and upload releases? I'd really like to be able to do them myself...

[13:03] <patrickb> rba: o/

[13:03] <rba> patrickb: argh. I will do this ASAP and let you know...

[13:05] <patrickb> v13 is bound to happen soon-ish. I'm still willing to learn how to do this myself. ;-)  I have access to the webserver for the other sites, but rakubrew.org doesn't seem to live there...

[13:05] <patrickb> Also the website itself has changes as well.

[13:15] *** tejr joined
[13:24] *** MasterDuke left
[13:27] *** aindilis left
[13:27] *** guifa2 left
[13:27] *** _jrjsmrtn left
[13:27] *** Xliff left
[13:27] *** satori__ left
[13:27] *** gordonfish left
[13:27] *** fling left
[13:27] *** Geth_ left
[13:27] *** veesh left
[13:27] *** raydiak left
[13:27] *** leont_ left
[13:27] *** maggotbrain777 left
[13:27] *** finsternis left
[13:27] *** nebuchadnezzar left
[13:27] *** timlegge left
[13:27] *** [ptc] left
[13:27] *** Bucciarati left
[13:27] *** KotH left
[13:28] *** aindilis joined
[13:28] *** guifa2 joined
[13:28] *** _jrjsmrtn joined
[13:28] *** Xliff joined
[13:28] *** satori__ joined
[13:28] *** gordonfish joined
[13:28] *** fling joined
[13:28] *** Geth_ joined
[13:28] *** veesh joined
[13:28] *** raydiak joined
[13:28] *** leont_ joined
[13:28] *** maggotbrain777 joined
[13:28] *** finsternis joined
[13:28] *** nebuchadnezzar joined
[13:28] *** timlegge joined
[13:28] *** [ptc] joined
[13:28] *** Bucciarati joined
[13:28] *** KotH joined
[13:28] *** gordonfish left
[13:38] *** tatata joined
[13:41] <tatata> HeyI am trying to include a file

[13:41] *** patrickb25 joined
[13:41] <tatata> HeyI am trying to include a file following https://stackoverflow.com/questions/13262675/how-to-include-file-in-perl-6 . But it seems to be outdated, can someone help ?

[13:43] *** patrickb left
[13:45] <guifa2> tatata: what is the error you are getting by using moritz's solution?

[13:46] *** RaycatWhoDat left
[13:49] *** sena_kun left
[13:49] *** aluaces left
[13:50] <tatata> guifa2 

[13:50] <tatata> $ cat main.raku use v6;use lib '.'; # to search for Hello.pm6 in the current diruse Hello;hello;$ cat hello.raku module Hello;sub hello() is export {    say 'hello';}$ perl6 main.raku ===SORRY!===Could not find Hello at line 3 in:    /home/lesenr1/Work/ligo/src/stages/adt_generator    /home/lesenr1/.perl6    /usr/lib/perl6/site

[13:50] <tatata> /usr/lib/perl6/vendor    /usr/lib/perl6    CompUnit::Repository::AbsolutePath<93867113852400>    CompUnit::Repository::NQP<93867090629376>    CompUnit::Repository::Perl5<93867090629416>

[13:50] <tatata> ouch, 

[13:51] <moritz> tatata: if you name the module Hello, you must name the file `Hello.pm` or `Hello.rakumod`

[13:51] <tatata> alright

[13:51] <tatata> Thanks a lot

[13:51] <moritz> (case matters as well)

[13:52] <moritz> you're welcome

[13:52] *** gordonfish joined
[13:53] *** aluaces joined
[13:54] <cpan-raku> New module released to CPAN! Set::Equality (0.0.2) by 03ELIZABETH

[13:54] <[Coke]> rba: hi!

[13:59] <tatata> Still does not find my module.. also, I had to write `unit module Foo;` instead of just `module Foo;`

[14:01] <Xliff> \o

[14:04] <tatata> moritz it seems like .pm works but not rakumod

[14:05] <codesections> I have discovered an invalid regex that reproducibly causes Rakundo v2020.06 to hang in an infinite loop.  As an example: 'any input' ~~ /[a*]*/ 

[14:05] <moritz> tatata: what version of rakudo are you using?

[14:05] <moritz> codesections: yes, that's well known

[14:05] <codesections> ok, thanks, that's what I wanted to know

[14:06] <codesections> Saves me the time of opening an issue :)

[14:09] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/07/13/2020-28-bridges-7/

[14:09] * [Coke] was trying to duplicate the LibCurl issue reported on the mailing list. getting this error on zef:

[14:09] <moritz> lizmat++

[14:09] <[Coke]> $ zef uninstall LibCurl

[14:09] <[Coke]> Failed to get the directory contents of '/Volumes/BUKKIT/Users/coke/p6/share/perl6/site/short/D7B2661931C58BC571BED0D9CF7277DAAB35132A': Failed to open dir: Too many open files

[14:12] <[Coke]> will    upddddddate everydaaaaaaaaaaaaaaaaaayy

[14:12] *** andrzejku left
[14:12] <[Coke]> ...

[14:12] <[Coke]> kb issues

[14:12] <lizmat> MBP ?

[14:13] <[Coke]> Yes.

[14:13] <lizmat> been there, done that  :-(

[14:13] *** rindolf left
[14:13] *** aluaces left
[14:13] *** sena_kun joined
[14:13] <lizmat> Apple is doing their utmost to ensure my next notebook will not be an Apple  :-(

[14:14] <[Coke]> mac mini

[14:14] <[Coke]> every few days the bt keyboard goes batshit crazy

[14:18] *** rindolf joined
[14:19] <cpan-raku> New module released to CPAN! App::Mi6 (1.0.0) by 03SKAJI

[14:22] <rba> hi [Coke] 

[14:22] <timotimo> oh hey rba :)

[14:22] <rba> hi timotimo 

[14:23] <[Coke]> rba: had some tickets on rakudo.org that I think you're the person for?

[14:23] <[Coke]> site not getting updated, missing updated info on infrastructure.

[14:23] <timotimo> what if i threw my ssh public key your way, rba? :3

[14:24] * rba is feeling to get "attacked" from multiple sides ... :-)

[14:24] <rba> sure

[14:24] <[Coke]> sorry!

[14:24] * rba was to long not showing up in irc...

[14:25] <timotimo> i kind of don't know how things are currently set up, and i think i don't have access to anything, or if i do i have already forgotten

[14:26] <rba> [Coke]: You mean https://github.com/perl6/rakudo.org/issues/41#event-3534057860 ?

[14:27] <cpan-raku> New module released to CPAN! WriteOnceHash (0.0.4) by 03ELIZABETH

[14:27] *** sarna left
[14:27] <rba> timotimo: you like to get access to lavm-perl6infra-1?

[14:28] *** andrzejku joined
[14:28] <rba> timotimo: What do you need?

[14:29] <[Coke]> rba - yup, those.

[14:31] <[Coke]> (there are other tickets, but those are the two I tagged you on) if timo has access to poke at things, that will also be great.

[14:31] <[Coke]> I am happy to volunteer a key, but I won't be able to be a regular admin or anything.

[14:33] <timotimo> 0i'm currently on my laptop and can't reach my desktop, but i can offer my laptop's key and use that to add my desktop's key later

[14:34] <cpan-raku> New module released to CPAN! EERPG (0.0.1) by 03ELIZABETH

[14:35] <tadzik> so, metacpan doesn't show these, modules.perl6.org doesn't show these, how I look them up except for github? :)

[14:35] <timotimo> tadzik: m.r.o will show them, it just takes a moment or two to regenerate

[14:36] <tadzik> heh

[14:36] <rba> timotimo: I have copied the keys from the backup of p6c.org at installation. In case the key "timo@schmetterling" is still in your hands you can try to login using: ssh -p2222 akudo.org@lavm-perl6infra-1.atikon.io

[14:36] *** dataangel left
[14:36] <tadzik> I read that as "a month or two"

[14:36] <timotimo> cool

[14:36] *** dataangel joined
[14:36] <timotimo> ah, yes, i am logged in

[14:37] <rba> timotimo: Is this what you needed?

[14:37] <timotimo> is that where all our websites are hosted now?

[14:38] <rba> [Coke]: A small push updated the rakudo.org again: https://github.com/perl6/rakudo.org/issues/45

[14:38] <rba> timotimo: Yes.

[14:38] <timotimo> i see /home has folders for many perl6.org as well as raku.org folders

[14:38] <[Coke]> rba++

[14:38] <rba> timotimo: Most if the services I've duplicated at the rename. While the housekeeping didn't happen yet...

[14:39] <timotimo> i wonder if i should get a "timo" unix user from which i could sudo to do server changes

[14:40] <rba> timotimo: When you see through the home, which of those you like to get access to?

[14:41] <timotimo> i guess everything that ends in .org

[14:41] <rba> So far there is commands in the sudo for rakudo.org and docs.raku.org

[14:42] *** xinming left
[14:42] <timotimo> you mean stuff in the sudoers file? stuff those users can do without being asked for a password?

[14:43] <rba> timotimo: Exactly. Mainly become the website user and restart nginx.

[14:44] <rba> timotimo: And edit the nginx config file for the domain.

[14:45] <rba> timotimo: Or do you like to get involved in admin completely?

[14:45] *** tatata left
[14:45] <timotimo> i think i could try at least :)

[14:45] *** skids joined
[14:46] <rba> timotimo: Username "timo"?

[14:46] *** xinming joined
[14:47] <timotimo> yes please

[14:48] <guifa2> lizmat++

[14:48] <patrickb25> rba++ timotimo++

[14:49] <patrickb25> rba: rakubrew.org isn't hosted on lavm-perl6infra-1.atikon.io is it?

[14:49] <rba> patrickb25: rakubrew.org is separted (and redundant :-))

[14:50] <patrickb25> That's what I remembered :-)

[14:54] <rba> patrickb25: My open task is to give access from a "jumphost" to the rangeros runhosts. As soon this is done and documents you will get access to ti.

[14:54] <rba> s/ti/it/

[14:54] <patrickb25> rba++ :-D

[14:55] <rba> timotimo: please try to login with user timo. 

[14:55] <timotimo> i'm logged in, can i change my password? :)

[14:55] <rba> timotimo: handle with care you got root rights using sudo...

[14:55] <timotimo> only after i've obtained or changed my password :D

[14:55] <rba> sure the timo user is yours.

[14:56] <timotimo> well, passwd asks for the current password, which i don't think i haev

[14:56] <rba> Will set and send you pvt

[14:56] <timotimo> OK

[14:57] <timotimo> i mean, putting it in a 600-modded file in my home directory is better than sending it over irc

[14:58] <rba> timotimo: Sure. Yet you have to change it anyway...

[14:59] <timotimo> well, yeah, but if someone knows my username and just reads a few lines up for the hostname, they could quickly jump in and steal the account

[14:59] <timotimo> assuming they can get our privmsg

[15:01] <rba> last + logs doen's show something unexpected. an attacker must have been very quick to hide his trace though. Yet you're right anyway...

[15:02] <rba> timotimo: Be careful with changing nginx config and restart as nginx is serving all the sites...

[15:04] <rba> timotimo: Whenever I have a time I like to continue my work to get websites ecapsulated in docker containers and run them on two hosts. Yet I will let you know before something is production ready...

[15:05] <rypervenche> "nginx -t" first to make sure the config is safe to reload, and then a reload would probably be better than a restart.

[15:05] <rba> rypervenche: agreed

[15:13] <timotimo> good

[15:13] <timotimo> are any of the dockered websites on this server? can it be used to put sites up for testing after they work locally?

[15:27] *** patrickb25 left
[15:31] *** squashable6 left
[15:32] *** patrickb joined
[15:33] *** squashable6 joined
[15:36] *** softmoth joined
[15:42] *** kensanata left
[15:46] *** abraxxa left
[15:46] *** abraxxa1 joined
[15:48] *** softmoth_ joined
[15:49] *** softmoth left
[15:49] *** sena_kun left
[15:51] *** abraxxa1 left
[15:51] *** abraxxa joined
[16:03] *** andrzejku left
[16:13] <rypervenche> If I want to have a Class attribute be created from other attributes when I great the instance, what tool would I use for that? BUILD? Or not even? E.g., I have Str $.date and Str $.time attributes and would like to automatically combine them into a DateTime $.datetime . 

[16:14] <rypervenche> I know I could do that combining outside of the Class, but I'm curious how to do it inside of it.

[16:15] <jnthn> class Foo { has DateTime $.datetime; submethod TWEAK(Str :$date!, Str :$time!) { $!datetime = ...whatever logic here... } }

[16:16] <rypervenche> Ahhhh, TWEAK, that's what it was. Thank you. I knew I had seen the solution before.

[16:21] *** aluaces joined
[16:35] *** sena_kun joined
[16:40] *** molaf joined
[16:42] *** dakkar left
[16:42] *** xinming left
[16:45] *** xinming joined
[17:03] *** sftp joined
[17:04] *** sftp left
[17:07] *** sftp joined
[17:10] *** cpan-raku left
[17:10] *** softmoth_ left
[17:11] *** cpan-raku joined
[17:11] *** cpan-raku left
[17:11] *** cpan-raku joined
[17:11] *** softmoth joined
[17:15] *** xinming left
[17:16] *** xinming joined
[17:31] *** Sgeo joined
[17:35] *** defaultxr joined
[17:41] *** xinming left
[17:41] *** xinming joined
[17:44] *** Manifest0 left
[17:46] *** Manifest0 joined
[17:53] *** sena_kun left
[18:02] *** hungrydonkey left
[18:06] *** andrzejku joined
[18:06] *** sena_kun joined
[18:21] <xinming> https://termbin.com/1hov    <--- Is there roadmap for this bug to be fixed? :-)

[18:22] <xinming> I found it last year, then I got busy with other things, When I try to reread the doc, and find code snippets, and find this bug still exists. :-)

[18:28] *** _jrjsmrtn left
[18:28] *** Sgeo left
[18:28] *** __jrjsmrtn__ joined
[18:29] <[Coke]> xinming: that snippet doesn't show the results or the expected results

[18:29] <[Coke]> Do you know if a ticket was opened?

[18:31] *** bocaneri left
[18:31] *** Sgeo joined
[18:32] <[Coke]> what's the bug? the missing , in the first @a definition means there are two elements there.

[18:33] <[Coke]> (is it that the two item list in the resulting @a has x and y, not y and z?

[18:35] *** sena_kun left
[18:35] <cpan-raku> New module released to CPAN! LibXML (0.5.6) by 03WARRINGD

[18:36] <vrurg> weekly: https://vrurg.github.io/arfb-publication/04-defining-raku/

[18:36] <notable6> vrurg, Noted! (weekly)

[18:37] <xinming> [Coke]: It just needs to be clarified, that for @a, the second pair doesn't have   comma, then, it'll parsed as 2 elements,

[18:37] <xinming> [Coke]: where the @b parsed correctly

[18:38] <xinming> [Coke]: IIRC, I asked to add an warning in this case. as when we are in a large array with structure like this, We'll have subtle bug which is a bit hard to track

[18:47] <guifa2> xinming: remember that any line that terminates in } "counts" as a bracket followed by a semi colon

[18:47] <guifa2> m: @a = (1,2,3;4,5,6;7,8,9); @a.say

[18:47] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '@a' is not declared‚ê§at <tmp>:1‚ê§------> 3<BOL>7‚èè5@a = (1,2,3;4,5,6;7,8,9); @a.say‚ê§¬ª

[18:47] <guifa2> m: my @a = (1,2,3;4,5,6;7,8,9); @a.say

[18:47] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´[(1 2 3) (4 5 6) (7 8 9)]‚ê§¬ª

[18:48] <guifa2> ah, you were talking not about a subtle bug in Raku, but in the program that leaves off the comma

[18:48] <guifa2> nm

[18:50] *** sena_kun joined
[18:57] *** molaf left
[19:01] *** softmoth left
[19:04] *** sena_kun left
[19:05] *** sena_kun joined
[19:11] *** sena_kun left
[19:17] <xinming> guifa2: Yes, No matter wether we consider it as a "bug", I think we need to give warnings about people for this.

[19:20] <abraxxa> vrurg: great article! thanks!

[19:26] <abraxxa> I wonder if types like Int are also different in 6.c and 6.d scope and a comparison would return false?

[19:26] <abraxxa> like in the Grammar example

[19:26] <lizmat> they are the same

[19:27] <lizmat> Grammar is really one of the few that are currently different between versions

[19:27] <abraxxa> but it could happen and introduce quite bad breakages?

[19:27] <lizmat> PseudoStash is another one

[19:28] *** MasterDuke joined
[19:31] <abraxxa> lizmat: just reading the weekly, such things as the fix for order of files loading, do these fixes include added tests to Roast?

[19:32] *** sena_kun joined
[19:32] <lizmat> abraxxa: note the "tests needed" tag in https://github.com/rakudo/rakudo/issues/3783

[19:32] <lizmat> :)

[19:34] <abraxxa> I didn't mean this specific fix but more generally if the Roast test suite for 6.c and 6.d is extended in the -errata branches with tests for things found where obviously no test existed?

[19:35] <abraxxa> and as Raku can't parse and execute Perl 5 code, why are .pm files searched at all?

[19:36] <lizmat> historically, .pm files were allowed and a "use v6" inside them, would make them Perl 6 modules

[19:37] <lizmat> that's all leftover from the time where Perl 6 was to be the successor of Perl 5

[19:38] <abraxxa> I would have broken with that when the rename happened

[19:38] <abraxxa> even pm6

[19:38] <lizmat> we need pm6 as there are still quite a few modules out there with the .pm6 extension

[19:39] <abraxxa> renaming files shouldn't be that hard

[19:39] <lizmat> I guess, with a "use v6.e.PREVIEW" active, we could remove .pm as an option

[19:39] <abraxxa> yeah

[19:39] <lizmat> but we currently have no way to implement that, we need the newdisp branch to have landed for that

[19:40] <abraxxa> is the loading code not in a setting?

[19:40] <lizmat> yes, it is

[19:40] <lizmat> well, most of it

[19:40] <lizmat> it's called from World.nqp

[19:40] <abraxxa> which should be renamed to World.nqr :)

[19:43] <ShimmerFairy> The extensions from the era of "We're gonna replace Perl 5, right guys?!" I feel can be dropped by this point (using them instead of .pm6 etc. was uncool for years before the Raku rename), but the Perl 6-esque extensions are gonna have to be supported for a long time yet.

[19:47] * raydiak wonders if App::Pray should be renamed...to...Rray?

[19:48] <lizmat> abraxxa: we've been over this: there will be no rename of NQP or the .nqp extension

[19:48] <lizmat> we'll just de-emphasize it being an acronym

[19:48] <ShimmerFairy> NQP, after all, is still not quite Perl :)

[19:52] *** abraxxa left
[19:53] *** abraxxa joined
[19:53] <abraxxa> https://twitter.com/cpan_author/status/1280886542437941248

[19:53] <abraxxa> can someone with a twitter account give him a better answer please?

[19:54] <abraxxa> I've asked the same thing in the past an remember that there is a way to say: set it to its default value

[19:54] <abraxxa> using a Type requires to know the type of the variable or attribute and if it changes replace it everywhere

[19:55] <Geth_> ¬¶ problem-solving: lizmat assigned to rba Issue pl6anet.org is a name that does not reflect Raku https://github.com/Raku/problem-solving/issues/212

[19:59] <lizmat> abraxxa : doesn't jnthn's answer cover it ?

[19:59] <lizmat> ShimmerFairy: indeed  :-)

[20:00] *** ShimmerFairy left
[20:00] <abraxxa> lizmat: why can it be used with the automatically generated accessor method but not the manuelly written by him? Because of the method type definition?

[20:02] <lizmat> yup, if the method had been written as: method x() is raw { $!x }, it would have worked

[20:02] <lizmat> because that's what the autp-generated accessor really is

[20:02] <abraxxa> i see, thanks!

[20:02] <abraxxa> so Nil was the thing you need to assign to reset the var to its default value?

[20:03] <lizmat> if the attribute does not have "is rw", then the accessor is defined without the "is raw"

[20:03] <lizmat> yes

[20:03] <lizmat> m: my $a is default(42) = 666; say $a; $a = Nil; say $a

[20:03] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´666‚ê§42‚ê§¬ª

[20:09] *** andrzejku left
[20:09] <defaultxr> hello. dumb noob question: i'm used to late-binding languages that allow me to do stuff like $*SCHEDULER.cue({ &thing(); }, every => 1); and then redefine &thing and have the new definition called the next time the schedule runs that cancellation. however, simply redefining &thing doesn't seem to work in Raku; the scheduler just continues calling the function as it was defined when i cued the

[20:09] <defaultxr> cancellation. what would be the best way of doing this in Raku?

[20:09] *** molaf joined
[20:10] <lizmat> when you pass &thing, it is pass by value

[20:11] <lizmat> so changing &thing afterwards, won't help

[20:11] <lizmat> however, what you *could* do is make &thing a wrapper that looks at an atomicint lexical variable

[20:12] <lizmat> and decides which actual code to actually call

[20:12] <lizmat> or if you want to get fully flexible, have &thing look at a outer lexical which you can change with cas() to be some other code to execute

[20:12] *** ShimmerFairy joined
[20:13] <lizmat> defaultxr: hope that made sense?

[20:14] <defaultxr> i'm still extremely new to Raku so i'm not familiar with the things you mentioned, but i think they will point me in the right direction :) i'll check the docs for them and see what i come up with, thanks!

[20:15] <Xliff> defaultxr: Do you know the things that &thing can be set to at compile time?

[20:16] <rypervenche> Where would I look in the docs to see what "::CLASS:U:" means? (I understand the U/D bit, but not sure about the :: syntax around it)

[20:16] <defaultxr> Xliff, nope. i want to be able to change &thing to anything at any time

[20:20] <Xliff> m: my $f; sub a { say 'a'; }; sub b { say 'b'; }; my $f = &a; $*SCHEDULER.cue({ $f() }, every => 1); Promise.in(5).then({ exit }); Promise.in(2).then({ $f = &b })

[20:20] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´Potential difficulties:‚ê§    Redeclaration of symbol '$f'.‚ê§    at <tmp>:1‚ê§    ------> 3 { say 'a'; }; sub b { say 'b'; }; my $f7‚èè5 = &a; $*SCHEDULER.cue({ $f() }, every =‚ê§a‚ê§¬ª

[20:20] <Xliff> m: my $f; sub a { say 'a'; }; sub b { say 'b'; }; $f = &a; $*SCHEDULER.cue({ $f() }, every => 1); Promise.in(5).then({ exit }); Promise.in(2).then({ $f = &b })

[20:20] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´a‚ê§¬ª

[20:20] <Xliff> m: my $f; sub a { say 'a'; }; sub b { say 'b'; }; $f = &a; $*SCHEDULER.cue({ $f() }, every => 1); Promise.in(5).then({ exit }); Promise.in(2).then({ $f = &b }); sleep 6;

[20:20] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´a‚ê§a‚ê§a‚ê§b‚ê§b‚ê§b‚ê§¬ª

[20:20] <Xliff> ^^^

[20:22] <defaultxr> rad, that is indeed what i'm looking for! üòé thanks Xliff!

[20:22] <Xliff> yw

[20:24] <lizmat> Xliff: of course, that is not threadsafe

[20:24] <lizmat> that's why I mentioned either using cas() or an atomicint to indicate what you really want to execute

[20:24] *** kensanata joined
[20:29] <defaultxr> lizmat, do you mean even just evaluating $f = &a; while the cancellation is running is not safe? or do you mean like if i were to do anything more crazy with threads, i.e. changing $f from multiple different threads?

[20:29] <defaultxr> for now i'm just doing the former

[20:29] *** _jrjsmrtn joined
[20:30] *** sena_kun left
[20:30] <defaultxr> i.e. i'm just doing $f = &a by entering it in the repl, not from any code running elsewhere

[20:30] <lizmat> the chance is minimal, but yeah: if the cued code would read the scalar half-way the assignment, there's no telling what could happen

[20:31] *** __jrjsmrtn__ left
[20:31] <lizmat> now, in practice, for testing and such, it's ok to do it like that

[20:31] <lizmat> and possibly for production in *that* particular case (assigning to a scalar) safe enough to give you an outdated value

[20:32] <lizmat> but anything more complex like that, e.g. pushing or popping from an array, would not be advisable

[20:33] <defaultxr> ah, ok, gotcha. yeah i'm just playing around right now, but i'll keep that in mind when start to do anything more serious :) thanks again to both of you

[20:33] <lizmat> defaultxr: what decides to change the code to be executed?

[20:33] <lizmat> maybe you're better off with a react { whenever { } } structure

[20:33] <lizmat> the whenever will guarantee you there will only be *one* thread running that code at any time

[20:35] <defaultxr> the user decides (i.e. just me right now). i'm basically just playing around with the idea of doing some live coding music type stuff in raku, and i want to have a function that is constantly running, i.e. to generate a rhythm, but can be modified without needing to manually stop and restart the cancellation

[20:35] <defaultxr> if that makes sense

[20:36] <defaultxr> i'll look into react and whatever too

[20:36] <Xliff> lizmat: Hence my first answer. Since he said he didn't know what he wanted to run, I figured I'd give him an answer.

[20:39] <lizmat> Xliff++

[20:39] <Xliff> defaultxr: If you know all of the potential subroutines for $f at compile time, then you could do something like this:

[20:40] <Xliff> m: my atomicint $f = 0; sub a { say 'a'; }; sub b { say 'b'; }; $f = &a; $*SCHEDULER.cue({ given $f { when 0 { a(); }; when 1 { b(); default { c(); }; };  }, every => 1); 

[20:40] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> 3}; when 1 { b(); default { c(); }; };  }7‚èè5, every => 1);‚ê§¬ª

[20:40] <Xliff> m: my atomicint $f = 0; sub a { say 'a'; }; sub b { say 'b'; }; $f = &a; $*SCHEDULER.cue({ given $f { when 0 { a(); }; when 1 { b(); default { c(); }; }; }, every => 1); 

[20:40] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> 3 }; when 1 { b(); default { c(); }; }; }7‚èè5, every => 1);‚ê§¬ª

[20:41] <Xliff> m: my atomicint $f = 0; sub a { say 'a'; }; sub b { say 'b'; }; $f = &a; $*SCHEDULER.cue({ given $f { when 0 { a(); }; when 1 { b(); default { c(); }; }; }; }, every => 1); 

[20:41] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    c used at line 1‚ê§‚ê§¬ª

[20:41] <Xliff> m: my atomicint $f = 0; sub a { say 'a'; }; sub b { say 'b'; }; sub c { say 'wtf?'; }; $f = &a; $*SCHEDULER.cue({ given $f { when 0 { a(); }; when 1 { b(); default { c(); }; }; }; }, every => 1); 

[20:41] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´This type cannot unbox to a native integer: P6opaque, Sub‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:42] <[Coke]> you can't set an atomic int to a sub.

[20:42] <Xliff> m: my atomicint $f = 0; sub a { say 'a'; }; sub b { say 'b'; }; sub c { say 'wtf?'; }; $*SCHEDULER.cue({ given $f { when 0 { a(); }; when 1 { b(); default { c(); }; }; }; }, every => 1); 

[20:42] <camelia> rakudo-moar 85320f466: ( no output )

[20:42] <[Coke]> ... there you go

[20:42] <Xliff> m: my atomicint $f = 0; sub a { say 'a'; }; sub b { say 'b'; }; sub c { say 'wtf?'; }; $*SCHEDULER.cue({ given $f { when 0 { a(); }; when 1 { b(); default { c(); }; }; }; }, every => 1);  sleep 2; $f = 1; sleep 2; $f = 'a'; sleep 2

[20:42] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´a‚ê§This type cannot unbox to a native integer: P6opaque, Str‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§a‚ê§b‚ê§wtf?‚ê§b‚ê§wtf?‚ê§b‚ê§wtf?‚ê§¬ª

[20:43] <Xliff> m: my atomicint $f = 0; sub a { say 'a'; }; sub b { say 'b'; }; sub c { say 'wtf?'; }; $*SCHEDULER.cue({ given $f { when 0 { a(); }; when 1 { b(); default { c(); }; }; }; }, every => 1);  sleep 2; $f = 1; sleep 2; $f = 42; sleep 2

[20:43] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´a‚ê§a‚ê§a‚ê§b‚ê§wtf?‚ê§¬ª

[20:43] <Xliff> ^^ threadsafe

[20:44] <Xliff> But you have to be able to at least know all the potential outcomes for f. Although with that setup, you can keep adding on until you are satisfied.

[20:44] <[Coke]> Xliff++

[20:45] <Xliff> m: my atomicint $f = 0; sub a { say 'a'; }; sub b { say 'b'; }; sub c { say 'wtf?'; }; $*SCHEDULER.cue({ given $f { when 0 { a(); }; when 1 { b(); }; default { c(); }; }; }, every => 1);  sleep 2; $f = 1; sleep 2; $f = 42; sleep 2

[20:45] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´a‚ê§a‚ê§a‚ê§b‚ê§wtf?‚ê§wtf?‚ê§¬ª

[20:46] <Xliff> m: my atomicint $f = 0; sub a { say 'a'; }; sub b { say 'b'; }; sub c { say 'wtf?'; }; $*SCHEDULER.cue({ given $f { when 0 { a(); }; when 1 { b(); }; default { c(); }; }; }, every => 1);  sleep 2; $f = 1; sleep 3; $f = 42; sleep 2

[20:46] <guifa2> defaultxr: It looks like no one answered your ::?CLASS question.  That's a compile-time variable, see: https://docs.raku.org/language/variables#index-entry-::%3FCLASS

[20:46] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´a‚ê§a‚ê§a‚ê§b‚ê§b‚ê§wtf?‚ê§wtf?‚ê§¬ª

[20:47] <defaultxr> guifa2, i think you mean rypervenche

[20:47] <guifa2> err yup

[20:47] <guifa2> rypervenche: ^^ 

[20:48] <rypervenche> Hmm. Why is it ::CLASS:U: in this case instead of ::?CLASS:U: and why the extra : at the end?

[20:48] *** cpage_ joined
[20:48] <defaultxr> and thanks Xliff, though i won't know all of the potential outcomes in advance since what i'm trying to do involves improvisation/trial and error in real time

[20:49] *** sena_kun joined
[20:49] <[Coke]> in a signature, trailing : indicates the "self"

[20:49] <[Coke]> in a *method* signature, I mean

[20:49] <rypervenche> For example, FCO has it in his code here: https://github.com/FCO/Red/blob/master/docs/tutorials/cookbook.md#n-m-relationship

[20:52] *** cpage left
[20:52] *** cpage_ is now known as cpage

[20:54] <[Coke]> so, the method as defined must be called on an undefined object 

[20:54] <[Coke]> (in java, that'd be a static method, e.g.)

[20:55] <[Coke]> and the ::CLASS:D: is an instsance method.

[20:56] <guifa2> oh

[20:56] <guifa2> duh

[20:56] <yuplushi> is there a currated list of "best perl6/raku" youtube talks?

[20:56] <guifa2> rypervenche: ::CLASS is actually a type capture

[20:56] <guifa2> It's just the most common is ::T

[20:57] *** lostmywindows joined
[20:57] <lizmat> yuplushi: no, there isn't to my knowledge

[20:57] <lizmat> but a few months ago, someone made quite a few ones

[20:58] <[Coke]> guifa2: ah, good call, yes.

[20:58] <rypervenche> guifa2: Hmm, ok thanks. I'll have to do some reading to wrap my mind around type captures.

[20:59] <yuplushi> maybe i should make a list, even filtering out the p5 talks would make it easier to browse them

[20:59] <guifa2> rypervenche: basically, type capture says "I don't know what type I'm going to get, but whatever I get, I need to use it again elsewhere"

[20:59] <guifa2> yuplushi: tbh,  if .author eqv $jnthn | $lizmat, it'll be awesome, but those don't tend to be intro video types (if that's what you're looking for).  A curated list in a wiki or doc page would actually be pretty cool esp with a quick summary

[21:00] <[Coke]> (given that it's in a method definition, when invoked it'll have to be something of that type or a subtype)

[21:00] <guifa2> rypervenche: so imagine I want a function to do something to two variables, but I want to make sure they're the same type (eg Int and Int, or Str and Str)

[21:00] <guifa2> you could do a giant list of multis, but those aren't very extendable.

[21:00] <[Coke]> er, -in the definition *and* it's the self: parameter)

[21:01] <guifa2> You could do sub foo ($a, $b where $b.WHAT == $a.WHAT) {¬†‚Ä¶¬†}

[21:01] <guifa2> but the cleanest way is sub foo (::TYPE $a, TYPE $b) {¬†‚Ä¶¬†}

[21:01] <guifa2> TYPE gets set to whatever $a's type is, and then becomes a constraint on $b

[21:02] <rypervenche> Ahhhh.

[21:02] <lizmat> yuplushi : maybe https://www.youtube.com/channel/UCDkz-__gl3frqLexukpG0DA is a good start

[21:02] <guifa2> in the method then, you could also say my TYPE $c := $a, for instance

[21:02] *** kensanata left
[21:03] <lostmywindows> not sure if ontopic but will raku/perl6 be available in zeal or other convenient format?

[21:04] *** sena_kun left
[21:04] <guifa2> rypervenche: my guess though is that MasterDuke actually meant to say ::?CLASS in that case though :-)

[21:05] *** rindolf left
[21:05] <lizmat> lostmywindows: I suggest you make an issue in the doc repo

[21:05] <rypervenche> SmokeMachine rather. :P

[21:07] * guifa2 is still waking up :-)

[21:07] <yuplushi> lizmat, thanks haven't seen those before

[21:10] <lostmywindows> thanx lizmat 

[21:19] *** sena_kun joined
[21:28] <leont_> rypervenche: your ticket on YAMLish wasn't quite clear to me

[21:31] *** patrickz joined
[21:31] <SmokeMachine> I‚Äôve done that wrong!!! I‚Äôll fix that... it should be ::?CLASS:U:

[21:32] *** hungrydonkey joined
[21:39] <rypervenche> leont_: Take a look at https://yaml.readthedocs.io/en/latest/example.html and search for "If a block sequence or block mapping is the element of a sequence"

[21:40] <rypervenche> I'd never even seen the non-compact version until I used YAMLish. Then I read the spec and learned about the compact and non-compact versions.

[21:42] <SmokeMachine> Fixed

[21:45] <leont_> It's YAML, there are several ways to do everything

[21:45] <leont_> I mean, there are like 5 syntaxes for strings

[21:47] *** Sgeo left
[21:49] *** skids left
[21:49] *** Sgeo joined
[21:50] *** skids joined
[22:03] <raku-bridge> <Âãâ‰∫∫> how do i assign a unicode compatibility character in raku?  > $a = 0xF97E.chr Èáè > $a.ord.base(16) 91CF üòïü§î‚ÅâÔ∏è

[22:07] <ShimmerFairy> Looks like you want to pipe it through NFKD or NFKC normalization

[22:07] <ShimmerFairy> m: say 0xF97E.chr.NFKC.Str.ord.base(16)

[22:07] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´91CF‚ê§¬ª

[22:07] <jnthn> Str means NFG which implies NFC

[22:08] <raku-bridge> <Âãâ‰∫∫> m: say 0xF97E.chr.NFKD.Str.ord.base(16)

[22:08] <evalable6> Âãâ‰∫∫, rakudo-moar 85320f466: OUTPUT: ¬´91CF‚ê§¬ª

[22:09] <ShimmerFairy> yeah, the .NFKC (or NFKD) converts the string to a new type of object, which is why the .Str is there to immediately turn it back into a regular everyday Str.

[22:09] *** Sgeo left
[22:09] <raku-bridge> <Âãâ‰∫∫> it still doesnt work

[22:09] <jnthn> Yes, but Uni => Str coercion means "normalize me"

[22:10] *** Sgeo joined
[22:11] <jnthn> You'd have to leave it as a Uni (which of course has a bunch of limitations at the moment)

[22:11] <ShimmerFairy> Yeah, dropping the .Str lets you keep the string in its newly-normalized form.

[22:12] <raku-bridge> <Âãâ‰∫∫> > 0xF97E.chr.NFKD NFKD:0x<91cf> > 0xF97E.chr.NFKC NFKC:0x<91cf>

[22:12] <raku-bridge> <Âãâ‰∫∫> doesnt seem to work

[22:14] <jnthn> You can't go via .chr because .chr makes a Str which is normalized

[22:14] <jnthn> m: say Uni.new(0xF97E).NFKD

[22:14] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´NFKD:0x<91cf>‚ê§¬ª

[22:15] <jnthn> huh, what's that doing...

[22:15] <raku-bridge> <Âãâ‰∫∫> m:say Uni.new(0xF97E)

[22:15] <evalable6> Âãâ‰∫∫, rakudo-moar 85320f466: OUTPUT: ¬´Uni:0x<f97e>‚ê§¬ª

[22:16] <raku-bridge> <Âãâ‰∫∫> how do i compare this to a string?

[22:16] <jnthn> It's been years since I read the spec of what NFKD and NFKC are meant to do, though

[22:18] *** patrickb left
[22:19] <jnthn> Well, eq, but again, if you have a Str on the other side then it will have been normalized too

[22:19] <raku-bridge> <Âãâ‰∫∫> womp

[22:19] *** patrickz left
[22:19] <jnthn> (Before you even get to doing the comparison)

[22:20] * guifa2 . o O ( Str does what's best and logicla 99.9% of the time.  That other .1% though‚Ä¶ )

[22:20] <jnthn> Well yes, that's why there's Uni too, for the .1%, though it turns out so few people need this that it's received little implementation attention.

[22:21] <raku-bridge> <Âãâ‰∫∫> it makes sense. most of the time ud want Ô•æ to match with Èáè

[22:23] <guifa2> jnthn: not sure if you saw it, but we finally solved an XML parse bug this week that I reported a year+ ago and it revolved around that .1%

[22:24] <raku-bridge> <Âãâ‰∫∫> i started learning raku 2 weeks ago üôÉ

[22:24] <raku-bridge> <Âãâ‰∫∫> the grammars convinced me to change ships

[22:25] <guifa2> XML content that begin with a combining mark bomb it, because the grammar looking for > won't match in, e.g, >ÃÅ .  

[22:25] *** xinming left
[22:25] <guifa2> Âãâ‰∫∫: the grammars are so much fun to work with

[22:25] *** xinming joined
[22:26] <raku-bridge> <Âãâ‰∫∫> what was the fix?

[22:27] <guifa2> Âãâ‰∫∫: we haven't fixed it yet, just spotted the source of the issue.  But JSON::Tiny had the exact same issue where the sequence was QUOTE, COMBINING MARK, text, QUOTE.  

[22:28] <timotimo> that's interesting I made this fix in jason fast

[22:28] <timotimo> like really long ago

[22:28] <guifa2> They did a combining-mark-agnostic match on quote, and then in the actions, checked to see if it was made of >1 code point, and if so, attached those code points onto the beginning of the text content

[22:29] <raku-bridge> <Âãâ‰∫∫> im gonna work a lot with unicode and combining characters, which is why raku was so appealing to me cuz its already built with unicode in mind.

[22:30] <guifa2> Âãâ‰∫∫: for the most part, dealing with combining characters just works.  It's when you do really weird stuff (like strings that start with combining marks) that you have to take some special care.  But it's still not too bad

[22:32] <timotimo> yes I would call that having to deal with the switch in languages in the middle of the input

[22:33] <raku-bridge> <Âãâ‰∫∫> > my $s = "ÃÇ" ===SORRY!=== Error while compiling: Malformed initializer ------> my $s =:eject: "ÃÇ"     expecting any of:         prefix         term  i put a combining circumflex between the quotations

[22:34] <raku-bridge> <Âãâ‰∫∫> interesting error

[22:34] <raku-bridge> <Âãâ‰∫∫> im not actually looking for a solution on this

[22:34] <timotimo> but there is a solution :D

[22:34] <timotimo> m: say "\c[COMBINING CIRCUMFLEX]"

[22:34] <camelia> rakudo-moar 85320f466: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unrecognized character name [COMBINING CIRCUMFLEX]‚ê§at <tmp>:1‚ê§------> 3say "\c[COMBINING CIRCUMFLEX7‚èè5]"‚ê§¬ª

[22:35] <timotimo> (whatever it's actually called)

[22:35] <raku-bridge> <Âãâ‰∫∫> m:say "\c[COMBINING CIRCUMFLEX ACCENT]"

[22:35] <evalable6> Âãâ‰∫∫, rakudo-moar 85320f466: OUTPUT: ¬´ÃÇ‚ê§¬ª

[22:35] <raku-bridge> <Âãâ‰∫∫> nice

[22:36] *** petr37 joined
[22:37] <raku-bridge> <Âãâ‰∫∫> does anyone here know of any good sources for learning grammars in depth? (other than the book Parsing with Perl 6 Regexes and Grammars cuz i already finished it)

[22:38] <guifa2> Have you looked at the Advent Calendar?  There were a few good posts there that helped me out 

[22:38] <timotimo> yes I love the advent calendar

[22:38] <raku-bridge> <Âãâ‰∫∫> can i get link please

[22:38] <timotimo> it's almost christmas yet again

[22:39] <raku-bridge> <Âãâ‰∫∫> https://perl6advent.wordpress.com/

[22:39] <raku-bridge> <Âãâ‰∫∫> this?

[22:40] <timotimo> that is probably the right one

[22:40] <timotimo> we didn't do anything for the rename yet?

[22:41] <guifa2> Âãâ‰∫∫: Also https://rakuadventcalendar.wordpress.com/ (for 2020 and onwards).  My article was actually on grammar-ish stuff (technically tokens, though)

[22:43] <raku-bridge> <Âãâ‰∫∫> ¬ª√∂¬´ looks like a fat dude gasping üòÜ   i cant see a butterfly even if i try

[22:45] <guifa2> ¬ª√Ø¬´ maybe?

[22:46] <raku-bridge> <Âãâ‰∫∫> hhhmmmmmm iii seeee

[22:46] *** hungrydonkey left
[22:48] <guifa2> ‚∏ÆÃ°√∂ÃØ?Ã¢

[22:48] <raku-bridge> <Âãâ‰∫∫> ü¶ã ∆∏”ú∆∑

[22:48] <petr37> Have Raku something like struct in C ?

[22:48] <guifa2> petr37: yes, just use a regular old class, they function basically the same

[22:49] <petr37> Old class?

[22:49] <guifa2> oh sorry, "regular old" is expression meaning "plain and boring"

[22:50] <petr37> Thanks üòä

[22:50] <guifa2> so if you had a 2D point structure in C like

[22:50] <guifa2> struct Point {¬†int x; int y; }

[22:50] <guifa2> you'd use

[22:51] <guifa2> class Point {¬†has Int $.x; has Int $.y }

[22:52] <petr37> Thank you!

[22:52] <petr37> But why "old"?

[22:53] <timotimo> that's just an english idiom

[22:54] * guifa2 needs to come up with a good topic for the Advent calendar

[22:54] <petr37> Understood üëç

[22:56] <oddp> guifa2: rationale for why foo:_ is the default instead of foo:D

[22:56] <oddp> That would be good to know. :)

[22:57] <petr37> I learn Raku and i like it ))

[22:57] <petr37> Wonderful language!

[22:57] *** pecastro left
[22:59] <guifa2> oddp: that's above my paygrade haha.  But my guess is while it would appear to make more sense in signatures, there are probably times where it makes less sense, and for consistency, :_ was default

[22:59] <guifa2> That or when you use :D or :U, you need to check for definedness, but :_ doesn't require it

[23:01] <oddp> Hm, currently working though some old slides and mailing list entries to found more answers.

[23:01] <oddp> find*

[23:02] <guifa2> OOooh

[23:02] <guifa2> Since I'm trying to beef up the localization capabilities

[23:03] <guifa2> I could do a post that ends up saying Merry Christmas (or Happy Advent) in lots of different languages and show how to do that using the main intl modules

[23:05] <petr37> Merry Christmas - –°—á–∞—Å—Ç–ª–∏–≤–æ–≥–æ –†–æ–∂–¥–µ—Å—Ç–≤–∞ (Russian) ))

[23:09] *** sena_kun left
[23:11] *** petr37 left
[23:15] *** hungrydonkey joined
[23:15] *** xinming left
[23:16] *** xinming joined
[23:20] *** petr37 joined
[23:21] <ShimmerFairy> jnthn: for what it's worth, I believe my intention for Str/Uni/NFC/etc. was that the literal only difference between them would be how the string internally is normalized, but I don't know where the reality of implementation leaves that idea.

[23:23] <timotimo> but with NFG you cannot really access code points

[23:23] <timotimo> I wonder how the API would look for that

[23:23] *** petr37 left
[23:24] *** petr37 joined
[23:25] <ShimmerFairy> Well, the non-NFG strings would have a different idea of what a "character" is, e.g. Str.substr(0,3) grabs the first 3 graphemes, NFC.substr(0,3) grabs the first three codepoints.

[23:25] *** petr37 left
[23:35] *** raydiak left
[23:35] *** sivoais left
[23:35] *** raydiak joined
[23:36] *** sivoais joined
[23:38] *** oddp left
[23:42] *** leont_ left
[23:46] *** skids left
[23:49] *** vike left
[23:52] *** vike joined
