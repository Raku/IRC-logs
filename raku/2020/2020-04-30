[00:05] *** hungrydonkey joined
[00:17] *** pilne joined
[00:33] *** armin_ joined
[00:33] *** armin_ left
[01:17] *** mowotter left
[01:42] *** Itaipu left
[01:45] *** Itaipu joined
[01:54] *** Redfoxmoon left
[01:58] *** Redfoxmoon joined
[02:14] *** tejr left
[02:16] *** tejr joined
[02:26] *** AlexDani` joined
[02:28] *** AlexDaniel left
[02:29] *** pilne left
[03:06] *** holli__ joined
[03:07] *** Doc_Holliwould left
[03:48] *** kst joined
[04:13] *** AlexDani` is now known as AlexDaniel

[04:13] *** AlexDaniel left
[04:13] *** AlexDaniel joined
[04:21] *** brtastic joined
[04:33] *** aborazmeh left
[04:38] *** farcas1982regreg joined
[04:40] *** Redfoxmoon left
[04:40] *** Redfoxmoon joined
[04:48] *** perlmaros joined
[04:49] *** KindOne left
[04:57] *** KindOne joined
[05:27] *** silug left
[05:31] *** silug joined
[05:35] *** rindolf joined
[05:40] *** molaf joined
[05:50] *** hungryd85 joined
[05:53] *** hungrydonkey left
[05:55] *** hungrydonkey joined
[05:57] *** brtastic left
[05:57] *** hungryd85 left
[06:25] *** hungryd23 joined
[06:28] *** hungrydonkey left
[06:36] *** hungrydonkey joined
[06:39] *** hungryd23 left
[06:55] *** kensanata joined
[07:05] *** brtastic joined
[07:06] *** brtastic left
[07:07] *** Kaiepi left
[07:08] *** Kaiepi joined
[07:09] *** farcas1982regreg left
[07:20] *** abraxxa1 left
[07:22] *** brtastic joined
[07:26] *** andrzejku joined
[07:27] *** hungryd47 joined
[07:27] *** hungrydonkey left
[07:29] *** abraxxa joined
[07:33] *** abraxxa left
[07:34] *** abraxxa joined
[07:40] *** dakkar joined
[07:40] *** patrickb joined
[07:52] *** pecastro joined
[08:08] <samebchase-> I am trying to destructure, i.e. unpack a hash in a `my declaration`, but facing some issues with it. Given `my %hash = 'one' => 1, 'two' => 2;`, why doesn't `my %h2 (:one($o), :two($t)) = %hash;` work if I want to access the value of the 'one' key with the variable `$o`.

[08:10] <samebchase-> could someone point me to the documentation where something like this can be achieved. so far I have not been able to find anything

[08:13] <samebchase-> I am able to destructure function arguments like this: `sub hs(%h (:one($o), :two($t))) { say $o, $t; }`, but the same syntax is not working with `my`.

[08:16] <MasterDuke> samebchase: i don't know the answer, but i assume you've looked at https://docs.raku.org/type/Signature#Destructuring_arguments ?

[08:22] <samebchase-> I've been able to get it working with functions, but can't seem to make it work with `my` declarations.

[08:23] *** rindolf left
[08:27] *** sena_kun joined
[08:27] *** rindolf joined
[08:56] *** Altai-man_ joined
[08:58] *** sena_kun left
[08:59] *** Geth left
[08:59] *** Geth joined
[09:10] *** AlexDaniel` joined
[09:13] *** farcas1982regreg joined
[09:24] *** tejr left
[09:24] *** tejr joined
[09:28] *** tejr left
[09:31] *** tejr joined
[09:36] *** unclechu joined
[09:36] *** awwaiid joined
[09:36] *** Demos[m] joined
[09:36] *** wildtrees[m] joined
[09:36] *** BlackChaosNL[m] joined
[09:36] *** wamba[m] joined
[09:36] *** matiaslina joined
[09:36] *** uzl[m] joined
[09:36] *** CIAvash joined
[09:38] <jnthn> samebchase-: You need to use the binding operator (:=) to destructure, not the assignment operator.

[09:38] <jnthn> (Signatures are also bound.)

[09:42] *** molaf left
[09:46] *** farcas1982regreg left
[10:09] *** lizmat_ joined
[10:11] *** lizmat left
[10:15] <samebchase-> thanks jnthn, I'll try this out!

[10:17] *** cibs joined
[10:22] *** holli__ left
[10:23] *** lizmat_ is now known as lizmat

[10:57] *** sena_kun joined
[10:58] *** Altai-man_ left
[11:01] *** molaf joined
[12:08] *** evalable6 left
[12:08] *** linkable6 left
[12:09] *** evalable6 joined
[12:10] *** linkable6 joined
[12:22] *** Black_Ribbon left
[12:29] <dakkar> p6: sub foo(:a(:$b!)) {}

[12:29] <camelia> rakudo-moar 4025ca437: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse named parameter; couldn't find right parenthesis‚ê§at <tmp>:1‚ê§------> 3sub foo(:a(:$b7‚èè5!)) {}‚ê§¬ª

[12:29] <dakkar> should it be possible to declare aliases for required named parameters?

[12:29] <dakkar> p6: sub foo(:a(:$b)) {}

[12:29] <camelia> rakudo-moar 4025ca437: ( no output )

[12:30] <jnthn> p6: sub foo(:a(:$b)!) {}

[12:30] <camelia> rakudo-moar 4025ca437: ( no output )

[12:30] <jnthn> It's the parameter that's required, not the variable it happens to be bound in to

[12:31] <dakkar> ah!

[12:33] <dakkar> the documentation doesn't quite explain that, I think

[12:34] <dakkar> ok, it's shown in an example about variable-less named arguments‚Ä¶ but I don't think it's actually said

[12:34] *** andrzejku left
[12:34] <dakkar> I'm looking at https://docs.raku.org/type/Signature#Argument_aliases

[12:54] *** sftp joined
[12:56] *** Altai-man_ joined
[12:58] *** sena_kun left
[13:09] *** andrzejku joined
[13:30] *** bdju joined
[13:33] <brtastic> How long do you think it takes to learn raku above the level raku's equivalent of baby perl? I know the language is vast

[13:38] <moritz> above baby raku: pretty quickly :D

[13:41] <jnthn> Depends if you count in the standard library or just the language, really.

[13:43] <timotimo> there's a part of the standard library you really can't get much done without :P

[13:43] <timotimo> i mean, Str is in there, and Int, and Array :)

[13:47] *** aborazmeh joined
[13:47] *** aborazmeh left
[13:47] *** aborazmeh joined
[13:52] <brtastic> with just enough standard library to get most out of the language features, I'm not yet familiar with raku more than creating a lazy array with fibonacci sequence up to infinity but I feel like that's one of the features that can really make the difference

[13:54] <moritz> it can

[13:54] <moritz> and you can spend weeks or months learning grammars really well if you're into text parsing

[13:55] <moritz> (though if you're really into parsing, you might learn them a bit faster)

[13:55] <moritz> but if you're not interested in that area, no need to learn that :D

[14:02] *** patrickb left
[14:14] *** patrickb joined
[14:41] *** sjm_uk joined
[14:45] *** brtastic left
[14:57] *** sena_kun joined
[14:58] *** Altai-man_ left
[14:59] *** farcas1982regreg joined
[14:59] *** gabiruh joined
[15:14] *** aborazmeh left
[15:22] *** rindolf left
[15:27] *** rindolf joined
[15:28] <Geth> ¬¶ doc: 3334cdcf11 | Coke++ | doc/Type/IO/Handle.pod6

[15:28] <Geth> ¬¶ doc: temporarily skip test for issue #3351

[15:28] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/3334cdcf11

[15:28] <linkable6> Link: https://docs.raku.org/type/IO::Handle

[15:28] <linkable6> DOC#3351 [open]: https://github.com/Raku/doc/issues/3351 xt/examples-compilation.t doc/Type/IO/Handle.pod6 failure

[15:28] *** farcas1982regreg left
[15:33] *** gabiruh left
[15:33] *** farcas1982regreg joined
[15:35] *** Benett left
[15:35] *** Benett joined
[15:45] <Geth> ¬¶ doc: 8a6d6801ce | Coke++ | doc/Type/IO/Handle.pod6

[15:45] <Geth> ¬¶ doc: Setup correct preamble for method definition

[15:45] <Geth> ¬¶ doc: 

[15:45] <Geth> ¬¶ doc: Fixes #3351

[15:45] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/8a6d6801ce

[15:45] <linkable6> Link: https://docs.raku.org/type/IO::Handle

[15:45] <linkable6> DOC#3351 [closed]: https://github.com/Raku/doc/issues/3351 [xt] xt/examples-compilation.t doc/Type/IO/Handle.pod6 failure

[15:51] <Geth> ¬¶ doc: 622c4a3a58 | Coke++ | writing-docs/EXAMPLES.md

[15:51] <Geth> ¬¶ doc: Add note related to issue #3351

[15:51] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/622c4a3a58

[15:51] <linkable6> DOC#3351 [closed]: https://github.com/Raku/doc/issues/3351 [xt] xt/examples-compilation.t doc/Type/IO/Handle.pod6 failure

[15:53] *** mowcat joined
[15:54] *** andrzejku left
[15:54] *** chloekek joined
[16:03] *** holli__ joined
[16:09] <Geth> ¬¶ doc: Kaiepi++ created pull request #3352: Document Metamodel::TypePretense, Metamodel::MethodDelegation, and Metamodel::CoercionHOW

[16:09] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3352

[16:15] *** molaf left
[16:27] *** cognomin_ joined
[16:30] *** cognominal left
[16:56] *** Altai-man_ joined
[16:58] *** sena_kun left
[17:07] *** hungryd47 left
[17:15] *** dakkar left
[17:17] *** andrzejku joined
[17:22] <Geth> ¬¶ doc: 89e433dce5 | (JJ Merelo)++ | doc/Type/Str.pod6

[17:22] <Geth> ¬¶ doc: Adds use of MINUS SIGN in Unicode for val refs #2632

[17:22] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/89e433dce5

[17:22] <Geth> ¬¶ doc: a5861ec59c | (JJ Merelo)++ | doc/Type/Str.pod6

[17:22] <Geth> ¬¶ doc: Add all different versions of val #2632

[17:22] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/a5861ec59c

[17:22] <Geth> ¬¶ doc: d706b837c6 | (JJ Merelo)++ | doc/Type/Str.pod6

[17:22] *** Geth left
[17:23] <linkable6> Link: https://docs.raku.org/type/Str

[17:23] <linkable6> DOC#2632 [open]: https://github.com/Raku/doc/issues/2632 [Hacktoberfest][RFE][big][docs][good first issue][help wanted][new][‚ö† Top Priority ‚ö†] Checklist for 6.d

[17:24] *** ChanServ sets mode: +o AlexDaniel

[17:24] <AlexDaniel> ‚Äú<Sigyn> The ban on geth has been lifted‚Äù

[17:24] <AlexDaniel> so, fixed

[17:24] *** Geth joined
[17:24] *** ChanServ sets mode: -o AlexDaniel

[17:32] *** brtastic joined
[17:34] *** kensanata left
[17:36] *** andrzejku left
[17:49] <xinming> How can we get the source file path for Specific module?

[17:58] <lizmat> is the module installed ?

[17:59] <xinming> Yes

[18:00] <xinming> In old perl, We cal use `perldoc -l Module::Name` for the module path.

[18:00] <xinming> p6doc command doesn't have this option.

[18:00] <xinming> wether p6doc command have option to get the path

[18:03] <lizmat> if a module is installed, there is really no such thing as a "module path"

[18:03] <lizmat> the $*REPO knows where it lives, and will provide it when needed

[18:03] <lizmat> what are you trying to achieve?

[18:05] <Geth> ¬¶ doc: 753c34ff70 | Coke++ | 2 files

[18:05] <Geth> ¬¶ doc: fix typo, learn word

[18:05] <Geth> ¬¶ doc: 

[18:05] <Geth> ¬¶ doc: (sort word file)

[18:05] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/753c34ff70

[18:07] *** patrickb left
[18:27] *** cognominal joined
[18:30] *** cognomin_ left
[18:35] *** squashable6 left
[18:38] *** squashable6 joined
[18:53] *** sjm_uk left
[18:55] *** Sgeo__ left
[18:56] *** sena_kun joined
[18:58] *** Altai-man_ left
[19:07] *** chloekek left
[19:11] *** Sgeo joined
[19:15] *** ellipsis left
[19:18] *** dotdotdot joined
[19:27] *** ryn1x joined
[19:28] *** abraxxa left
[19:29] <ryn1x> what is a good way to make sure Proc::Async is open for write? I currently save the promise from start and then await $promise.ready, but i still get runtime crashes occasionally that the process is not open for write. A small sleep fixes everything, but I don't like that.... 

[19:30] *** abraxxa joined
[19:43] *** holyghost left
[19:43] *** holyghost joined
[19:50] *** molaf joined
[20:01] *** melezhik joined
[20:01] <melezhik> How can I do html escaping in Template::Mojo template?

[20:02] <lizmat> tadzik might know

[20:02] <lizmat> :-)

[20:12] <tbrowder> hi, folks

[20:14] <timotimo> don't template languages tend to do escaping by default and need unescaping to be made explicitly

[20:14] <tbrowder> i'm getting travis failures with my Excel module which requires Inline::Perl5. the inline::perl5 shows installing ok in tony-o's nightly but it fails the inline::p5 test

[20:14] <Grinnz> are you talking about in perl melezhik?

[20:16] <melezhik> Nope. About Raku

[20:16] <melezhik> https://github.com/tadzik/Template-Mojo

[20:16] *** finsternis left
[20:17] <tadzik> I've no idea btw, I don't even remember when I wrote it

[20:17] *** finsternis joined
[20:18] *** KindOne left
[20:18] <lizmat> tbrowder: nine did some extensive work in Inline::Perl5 recently, maybe that could be the reason ?

[20:18] <melezhik> I search thought the code and could not find any examples for that

[20:19] <tbrowder> .tell tony-o yr nightly is failing when installing Inline::Perl5. there is a warning during compilation and then a failure with testing. i don't have a problem installing locally on debian but i don't have access to an ubuntu box

[20:19] <tellable6> tbrowder, I'll pass your message to tony-o

[20:19] <Grinnz> not that I personally mind, but it would probably be better if that module did not use the Mojo name implying some relationship to the mojolicious team... maybe MojoLike

[20:19] <melezhik> yeah, I am not the author 

[20:21] <tbrowder> lizmat: i saw that, but i don't have any prob locally. but as you probably just saw, tony-o's ubuntu nightly show a compiler warning i can't dup on debian buster

[20:21] *** KindOne joined
[20:21] <Grinnz> additionally I don't want people showing up in #mojo asking about that module ;)

[20:21] <tbrowder> anyone have ubuntu handy to test upinstall inline::perl5?

[20:22] <tbrowder> *zef install

[20:23] <lizmat> Grinnz: it's a little late to complain about a module that's been around for 7 years now

[20:23] <melezhik> tbrowder: rakudist has centos/debian/alpine if it helps

[20:23] <Grinnz> I'm not complaining, just advising

[20:23] <melezhik> it's quite easy to bootstrap Ubuntu container as well

[20:23] <lizmat> actually 8 years old tomorrow

[20:24] <melezhik> yeah, the time I started to use Bailador it was a default templating system for it

[20:25] *** caterfxo left
[20:25] *** p6steve joined
[20:26] *** caterfxo joined
[20:26] *** pilne joined
[20:26] <tbrowder> mehezhik: thnx, but i don't have chops for vm install except through digitalocean, but i am working on my own docker version like tony-o's

[20:26] <tbrowder> slooowly

[20:27] <p6steve> hi i have three related modules - use'ing them in one sequence works, the other segfaults 

[20:27] <p6steve> how cn i get started in debugging the segfault route - eg stacktrace?

[20:28] <melezhik> tbrowder: you don't need to install anything, rakudist is a service ready to use

[20:28] <lizmat> p6steve: by the time you segfault, it's too late to create a backtrace, at least at the HLL level

[20:28] <lizmat> but timotimo might have some ideas, p6steve 

[20:28] <melezhik> http://repo.westus.cloudapp.azure.com/rakudist

[20:28] <p6steve> This is perl 5, version 30, subversion 2 (v5.30.2) built for darwin-thread-multi-2level on macos 10.15.4

[20:28] <melezhik> give me 10 minutes and I'll bootstrap ubuntu for you

[20:29] <tbrowder> melezhik: ah, that was in lizmat's last weekly! i've already used it!

[20:29] <tbrowder> but not for Ec

[20:29] <tbrowder> Excel

[20:30] <melezhik> yeah, 10-15 minutes and you'll get ubuntu there

[20:30] <timotimo> it's sometimes possible to get a stacktrace at the point of a segfault

[20:30] <melezhik> I have probably already run tests for this module

[20:30] <timotimo> p6steve: please run perl6-gdb-m instead of perl6 (or raku-gdb-m instead of raku)

[20:31] <tbrowder> p6steve: have you tried isolating the use of the modules into their using scopes?

[20:31] *** cgfbee left
[20:31] <tbrowder> that worked for me with conflicting symbols

[20:32] *** mowcat left
[20:33] <p6steve> melezhik rakudist is on my radar for wider hardening - would like to get it working all ways on my machine first

[20:34] <p6steve> timotimo: will try perl6-gdb-m next and report back

[20:34] <melezhik> p6steve: sure

[20:35] <timotimo> at the point of the crash, go "up" until the frame it shows has a "tc=0x12341234" in the line

[20:35] <timotimo> rather than one that's "optimized out" or something

[20:35] <p6steve> tbrowder: i have three layers Physics::ShortMeasure uses Physics::Measure and Physics::Unit, Physics::Measure uses Physics::Unit

[20:36] *** dotdotdot left
[20:36] *** dotdotdot joined
[20:36] <p6steve> tbrowder: and the script uses Physics::Measure and Physics::ShortMeasure

[20:37] <p6steve> tbrowder: from the base - each module works fine - so Physics::Unit has solo test, then Physics::Measure tests at this level

[20:38] <p6steve> trowder: so, my question is "what do you mean by isolating into using scopes"??

[20:39] <lizmat> p6steve: use statements are lexical

[20:39] <tbrowder> hm, maybe segregate the chunks a bit more so no overlap, have a physics::longmeasure and no physics::measure..l

[20:40] <lizmat> m: { use Test }; ok 42

[20:40] <camelia> rakudo-moar 4339073ba: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    ok used at line 1‚ê§‚ê§¬ª

[20:41] <tbrowder> lizmat: instead of putting use statements at the top of the using file of a module, put the use statements inside the using sub

[20:42] <p6steve> lizmat: you are a genius! 

[20:42] <tbrowder> sorry, lizmat...

[20:43] <p6steve> tbrowder: oh - just realized you are both proposig same thing - I am newly hopeful!!

[20:45] *** dotdotdot left
[20:47] <tbrowder> good deal!

[20:48] <melezhik> so I found workaround by using HTML::Escape gets called right inside template

[20:48] <melezhik> sooner or latter I am going to migrate to cro and it's template system 

[20:50] *** Black_Ribbon joined
[20:51] <tbrowder> melezhik: you will need build essentials and libperl-dev for the debian.

[20:51] <melezhik> I know, already in progress ;-)

[20:52] <melezhik> this is patch system that allows to specify any unique requirements for any Raku module. For example - https://github.com/melezhik/RakuDist/blob/master/modules/default/files/patches/LibXML/sparrowfile

[20:52] *** dotdotdot joined
[20:53] <melezhik> for Excel module - https://github.com/melezhik/RakuDist/blob/master/modules/default/files/patches/Excel/sparrowfile

[20:53] *** dg left
[20:53] *** Bucciarati joined
[20:53] <melezhik> cc tbrowder:

[20:54] <melezhik> tbrowder: Excell module successful install on Rakudist/Ubuntu - http://repo.westus.cloudapp.azure.com/rakudist/reports/Excel/ubuntu/1588279548.txt

[20:55] <tbrowder> excellent! you are the sparrowdo author and i am going to try it out someday soon

[20:55] <melezhik> yes, I am :-)  ... Sure

[20:55] <lizmat> afk&

[20:55] *** dg joined
[20:56] *** Altai-man_ joined
[20:56] <tbrowder> melezhik: thnx for the test. now i can file a better bug report with tony-o

[20:56] <melezhik> yeah ... you're welcome

[20:58] *** Kaiepi left
[20:58] *** sena_kun left
[20:58] *** Kaiepi joined
[21:01] *** dotdotdot left
[21:01] *** dotdotdot joined
[21:02] *** Celelibi joined
[21:03] <Geth> ¬¶ problem-solving: Kaiepi assigned to jnthn Issue A better MOP API for wrapper kinds could exist https://github.com/Raku/problem-solving/issues/180

[21:09] *** p6steve left
[21:20] *** gordonfish joined
[21:33] *** dotdotdot left
[21:37] *** brtastic left
[21:52] *** p6steve joined
[21:56] *** dotdotdot joined
[21:56] *** p6steve left
[22:00] *** aborazmeh joined
[22:00] *** aborazmeh left
[22:00] *** aborazmeh joined
[22:04] *** rindolf left
[22:13] <Kaiepi> releasable6, status

[22:13] <releasable6> Kaiepi, Next release will happen when it's ready. 3 blockers. 166 out of 369 commits logged (‚ö† 3 warnings)

[22:13] <releasable6> Kaiepi, Details: https://gist.github.com/ada3012c030fb502101ae628c5e528e6

[22:16] *** melezhik left
[22:22] *** ryn1x left
[22:28] *** p6steve joined
[22:28] *** oneeggeach joined
[22:32] *** p6steve left
[22:38] *** aborazmeh_ joined
[22:38] *** aborazmeh_ left
[22:38] *** aborazmeh_ joined
[22:38] *** aborazmeh left
[22:38] *** aborazmeh_ is now known as aborazmeh

[22:40] *** Kaiepi left
[22:47] *** aborazmeh left
[22:49] *** Altai-man_ left
[22:53] *** pecastro left
[22:53] *** dotdotdot left
[22:57] *** dotdotdot joined
[23:05] *** skyl4rk left
[23:09] *** dotdotdot left
[23:09] *** skyl4rk joined
[23:12] *** dotdotdot joined
[23:15] *** Kaiepi joined
[23:17] *** oneeggeach left
[23:17] *** oneeggeach joined
[23:17] *** oneeggeach left
[23:18] *** oneeggeach joined
[23:18] *** oneeggeach left
[23:23] *** devmikey joined
[23:24] *** dotdotdot left
[23:25] *** dotdotdot joined
[23:44] *** guifa2 joined
[23:45] *** holli__ left
[23:53] *** guifa2 left
[23:54] *** guifa2 joined
