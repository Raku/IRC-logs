[00:00] <jnthn> We need to actually get RakuAST integrated into the compiler and produced by it before we can play with this really

[00:00] <jnthn> Probably best is to ask me again when we get to that point.

[00:01] <SmokeMachine> I‚Äôll do that!

[00:02] <jnthn> Main thing we need to worry about is any composability concerns, 'cus I've got a feeling that, like with the MOP, certain folks will have a lot of fun with custom compiler passes.

[00:02] <jnthn> Like "ooh, now my extra type system stuff can get compile-time checked now" at the like

[00:02] <jnthn> *and

[00:04] <SmokeMachine> That will be the first think I want to play with‚Ä¶ :P

[00:06] <Geth> ¬¶ problem-solving: FCO assigned to jnthn Issue Making a signature accept a list of Pairs https://github.com/Raku/problem-solving/issues/177

[00:08] <SmokeMachine> that wasn‚Äôt a good description‚Ä¶ sorry...

[00:11] <SmokeMachine> jnthn: sorry to insist‚Ä¶ but I‚Äôm curious: how do you think to store the AST from the custom pass and get access to it on run time? would it be dome with something like: `&block but StoredAST(&block)` ?

[00:12] <jnthn> Under current design, it'd probably be something like `$the-block-ast-node.meta-object but StoredAST($the-block-ast-node)`

[00:13] <SmokeMachine> Interesting...

[00:15] <SmokeMachine> ang it would be gotten with something like this? `&block.^get-ast`?

[00:15] <SmokeMachine> os `.meta-object` isn‚Äôt .HOW?

[00:15] <jnthn> Well, a custom compiler pass would be traversing RakuAST

[00:16] *** vrurg_ joined
[00:16] <jnthn> I'm using `meta-object` in the very general meaning of "an object that describes a program element", so in the case of a RakuAST::Block then it would be a Block object

[00:17] *** vrurg left
[00:17] <jnthn> In principle, though, during compile time, you will be able to call .ast on a Code object, thus how a trait handler would get at it

[00:18] <jnthn> Calling that after CHECK time would, by default, be like "sorry, too late"

[00:19] <SmokeMachine> make sense

[00:19] <SmokeMachine> thank you very much!

[00:20] <jnthn> Welcome :)

[00:20] <jnthn> Probably sleep time for me; 'night o/

[00:21] <SmokeMachine> for me too! good night!

[00:28] *** mensvaga1 joined
[00:28] *** mensvaga1 left
[00:29] *** mensvaga left
[00:31] *** aborazmeh left
[00:36] *** softmoth joined
[00:51] <Geth> ¬¶ whateverable: 789d525aad | (Aleks-Daniel Jakimenko-Aleksejev)++ | 4 files

[00:51] <Geth> ¬¶ whateverable: Unbitrot some tests

[00:51] <Geth> ¬¶ whateverable: review: https://github.com/Raku/whateverable/commit/789d525aad

[01:01] *** melezhik joined
[01:03] <melezhik> chloekek: what is main use case for Raku modules delivered as Nix packages? Are you developing Raku applications for Nix OS ?

[01:03] <tellable6> melezhik, I'll pass your message to chloekek

[01:03] *** sena_kun joined
[01:05] *** Altai-man_ left
[01:10] *** aborazmeh joined
[01:10] *** aborazmeh left
[01:10] *** aborazmeh joined
[01:10] *** rbt left
[01:11] *** rbt joined
[01:16] <Geth> ¬¶ whateverable: 60de9e3bd8 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[01:16] <Geth> ¬¶ whateverable: Unbitrot more tests

[01:16] <Geth> ¬¶ whateverable: review: https://github.com/Raku/whateverable/commit/60de9e3bd8

[01:29] *** molaf_ left
[01:42] *** molaf_ joined
[01:42] *** melezhik left
[01:47] *** aborazmeh left
[01:49] *** softmoth left
[02:05] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:11] *** aborazmeh joined
[02:11] *** aborazmeh left
[02:11] *** aborazmeh joined
[03:02] *** Altai-man_ joined
[03:05] *** sena_kun left
[03:11] *** aborazmeh left
[03:36] *** pilne joined
[03:48] *** pilne left
[03:49] *** k-man__ joined
[03:50] *** k-man_ left
[03:53] <cpan-raku> New module released to CPAN! Term::Choose (1.6.4) by 03KUERBIS

[04:50] *** evalable6 left
[04:50] *** linkable6 left
[04:51] *** evalable6 joined
[04:53] *** linkable6 joined
[05:01] *** Doc_Holliwood joined
[05:03] *** sena_kun joined
[05:05] *** Altai-man_ left
[05:09] *** [Sno] left
[05:25] <Voldenet> m: my $i = [*] 1000 ‚Ä¶ 1; say now - BEGIN { now }

[05:25] <camelia> rakudo-moar b0a720cb6: OUTPUT: ¬´0.087364‚ê§¬ª

[05:25] <Voldenet> m: my $i = [*] 1 .. 1000; say now - BEGIN { now }

[05:25] <camelia> rakudo-moar b0a720cb6: OUTPUT: ¬´0.0261417‚ê§¬ª

[05:25] <Voldenet> huh

[05:26] <Voldenet> Why is there such major performance difference?

[05:26] <guifa2> sequence operator isn't as optimized, lizmat is working on making some improvements there

[05:27] <guifa2> m : my $i = [*] 1 ... 1000; say now - BEGIN { now }

[05:27] <guifa2> m: my $i = [*] 1 ... 1000; say now - BEGIN { now }

[05:27] <camelia> rakudo-moar b0a720cb6: OUTPUT: ¬´0.08144355‚ê§¬ª

[05:28] *** cpup left
[05:29] *** cpup joined
[05:30] <Voldenet> ah, sequence op can do more - it makes sense

[05:32] <guifa2> yeah, the sequence operator internally IIRC runs a full code block

[05:32] <guifa2> And then smart matches against the final term

[05:33] <guifa2> So that's two separate code blocks that have to get run

[05:46] *** sauvin joined
[05:46] *** sjm_uk joined
[05:51] *** [Sno] joined
[06:02] *** ufobat_ left
[06:02] *** reportable6 left
[06:04] *** rindolf joined
[06:05] *** reportable6 joined
[06:22] *** andrzejku joined
[06:44] *** Doc_Holliwood left
[06:44] *** sjm_uk left
[06:48] *** lichtkind joined
[06:49] *** stoned75 joined
[06:52] *** abraxxa joined
[06:57] *** abraxxa left
[06:58] *** abraxxa joined
[07:02] *** ilogger2 joined
[07:02] *** Altai-man_ joined
[07:31] *** sjm_uk joined
[07:43] *** dakkar joined
[07:57] *** pecastro joined
[08:19] *** rindolf joined
[08:38] *** aborazmeh joined
[08:38] *** aborazmeh left
[08:38] *** aborazmeh joined
[08:43] *** eseyman joined
[08:49] *** kensanata joined
[09:03] *** sena_kun joined
[09:05] *** Altai-man_ left
[09:07] *** Ven_de_Thiel joined
[09:22] *** kensanata left
[09:54] <lizmat> Files=1306, Tests=111236, 213 wallclock secs (28.64 usr  7.88 sys + 3001.87 cusr 269.23 csys = 3307.62 CPU)

[10:11] *** squashable6 joined
[10:11] *** rindolf left
[10:13] <El_Che> does someone use the rakudo-pkg i386 ubuntu debs?

[10:13] <El_Che> I think the next ubuntu will remove all docker images and the base tar.gz from where I build i386 images myself

[10:14] *** domm left
[10:15] <El_Che> if there is a use for i386 rakudo packages I can see to move the i386 builds to debian... or drop i386 altogether

[10:16] <El_Che> (on other news, when ubuntu 20.04 is out in a few days, a package will be ready to be built: rakudo builds just fine in the beta 20.04)

[10:18] *** lichtkind_ joined
[10:18] <El_Che> I have been looking to expand to arm, but I have been out of time and I have no arm hardware :)

[10:18] <El_Che> without JIT, do people want to run raku on arm?

[10:19] <MasterDuke> several people have asked about arm, there was a question about it lizmat linked in yesterday's weekly

[10:21] <jnthn> "without JIT" is true in the "we don't produce machine code" sense, but you still get type specialization and inlining and so on, which in many cases are the biggest wins anyway

[10:22] <El_Che> jnthn: so raku on arm is an option?

[10:23] <El_Che> I read some docs on how to do it, but running the builds on travis complicates things (I like creating the packages on travis so the build proces is transparent from a security point of view)

[10:23] <El_Che> it requires qemu + docker

[10:24] <El_Che> the point of my i386 images was originally for cloud providers still defaulting to i386 or giving it as an option for low RAM VMs, but that time is over I think

[10:24] *** Ven_de_Thiel left
[10:25] <El_Che> the usefulness of i386 packages (and builds) were more useful as a rakudo canary in my eyes

[10:25] <El_Che> (if we support the arch, it's a good idea to build it regularly)

[10:27] <El_Che> about arm: I've always wanted a rpi, but since I run all my home stuff from a NUC with docker I kind of lost the use case :)

[10:34] *** Doc_Holliwood joined
[10:35] *** _jrjsmrtn joined
[10:46] * lizmat clickbaits https://rakudoweekly.blog/2020/04/20/2020-16-rash-in-progress/

[11:01] *** mowcat joined
[11:02] *** Altai-man_ joined
[11:05] *** sena_kun left
[11:06] *** rindolf joined
[11:08] *** stoned75 joined
[11:26] *** aborazmeh left
[11:35] *** Doc_Holliwood left
[11:35] <veesh> i have a pri, but goshes, a NUC sounds sick

[11:35] <veesh> how much do they cost?

[11:36] <veesh> s/pri/pi/

[11:37] <El_Che> a dual thread celeron cpu one around 120‚Ç¨

[11:38] <El_Che> it's fast enough to run many containers: an ssh hop server, logitech media server, torrent daemon, ubiqui controller, pi hole, nfs and samba shares, etc etc

[11:38] <abraxxa> I do all that with a Synology DS918+ NAS

[11:38] <El_Che> 8gig ram + 2 ext usb disk with ZFS == cheapo nas

[11:39] <abraxxa> sadly that's also crap Intel based so low-level security vulnerabilites all the way

[11:39] <El_Che> I have a second nuc as a media device connected to the tv, also celeron

[11:40] <El_Che> kodi flies, also retropie works nice on that machine

[11:41] <El_Che> only downsize of the celeron is that hw accelation on browser in non straightfwd and cpu is too weak for 1080p youtube (while on kodi no problem because of gpu accelation)

[11:41] <El_Che> I run a hacked chromium version for youtube

[11:42] <El_Che> (which handles 1080p fine)

[11:42] <abraxxa> OSMC 4K FTW

[11:42] <El_Che> no 4K screen here yet

[11:42] <El_Che> s

[11:43] <El_Che> OSMC is just kodi, right?

[11:43] <El_Che> because like I said, kodi flies on the low powered nuc

[11:43] <El_Che> just chrome and firefox are sluggisch with stuff > 720p

[11:44] <El_Che> I like running regular ubuntu so I can run other stuff, like retropie. My kids loved the old nintendo games

[11:51] <abraxxa> yes

[11:51] <abraxxa> but hardware accelerated with a fantastic support and price

[11:51] <abraxxa> basically 100euros for a Kodi box with fast updates that always work and use fully utilize the hardware

[11:53] *** dakkar left
[11:53] *** dakkar joined
[12:01] *** Doc_Holliwood joined
[12:02] <El_Che> sure, I agree

[12:02] <El_Che> but for a home server, a nuc matched my case better

[12:02] <El_Che> for a media server, I would need to think hard with the newest rpis

[12:03] <El_Che> when I bought the pair of nucs, the rpi where a lot slower

[12:04] <El_Che> I wonder is de rpi is fast enough to play Nintendo64 games

[12:08] *** domm joined
[12:15] *** dakkar left
[12:17] *** dakkar joined
[12:33] *** tejr joined
[12:38] <Kaiepi> releasable6, status

[12:38] <releasable6> Kaiepi, Next release will happen when it's ready. 5 blockers. 166 out of 338 commits logged (‚ö† 3 warnings)

[12:38] <releasable6> Kaiepi, Details: https://gist.github.com/06f45e2699c56a8a945f5ac8a5cca912

[12:41] *** Doc_Holliwood left
[12:43] *** stoned75 left
[12:51] *** lichtkind_ left
[12:52] *** aborazmeh joined
[12:52] *** aborazmeh left
[12:52] *** aborazmeh joined
[13:03] *** sena_kun joined
[13:05] *** Altai-man_ left
[13:22] *** mensvaga joined
[13:32] *** Xliff joined
[13:39] <Xliff> [09:34:02] <Xliff> How would this command like look: sub MAIN (:@args) { }

[13:39] <Xliff> [09:34:32] <Xliff> I don't see this references in docs.

[13:41] *** melezhik joined
[13:42] *** melezhik left
[13:42] *** Doc_Holliwood joined
[13:45] <dakkar> Xliff: `sub MAIN(:@args) { .say for @args }` when called `foo --args=a --args=b` prints `a` then `b`

[13:46] <dakkar> is that what you were asking?

[13:46] <Xliff> Yep. Thanks.

[13:46] <dakkar> it's a named array, so it maps to a named repeatable option

[13:46] <[Coke]> you can get a hint by putting that into a small file, and invoking it, you get:

[13:47] <[Coke]> Usage: foo.raku [--args=<Any> ...]

[13:47] <Xliff> OK. My code doesn't work that way. Prints usage

[13:49] *** mowcat left
[13:50] <Xliff> Using :@args completely breaks the script.

[13:50] *** melezhik joined
[13:50] <Xliff> As in, the code cannot match :@args and won't work, even if its named.

[13:50] <Xliff> Constantly shows usage and then exits.,

[13:51] <Xliff> Acting as if :@args is required.

[13:51] <nine> Xliff: how did you call it?

[13:51] <Xliff> main --args=a --args=b

[13:51] <Xliff> also

[13:51] <Xliff> main --args=a,b

[13:51] <Xliff> Even:

[13:51] <Xliff> main

[13:51] <Xliff> returns usage

[13:52] <Xliff> m: sub MAIN (:@args) { }

[13:52] <camelia> rakudo-moar b0a720cb6: ( no output )

[13:52] <Xliff> m: sub MAIN (:@args) { } MAIN()

[13:52] <camelia> rakudo-moar b0a720cb6: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> 3sub MAIN (:@args) { }7‚èè5 MAIN()‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement e‚Ä¶¬ª

[13:52] <Xliff> m: sub MAIN (:@args) { }; MAIN()

[13:52] <camelia> rakudo-moar b0a720cb6: ( no output )

[13:54] *** rindolf left
[13:54] <nine> Can't reproduce: nine@sphinx:~/test/main> cat main 

[13:54] <nine> #!/home/nine/rakudo/install/bin/raku

[13:54] <nine> sub MAIN(:@args) { }

[13:55] <nine> nine@sphinx:~/test/main> ./main 

[13:55] <nine> nine@sphinx:~/test/main> ./main --args=foo

[13:55] <nine> nine@sphinx:~/test/main> ./main --arg=foo

[13:55] <nine> Usage: ./main [--args=<Any> ...]

[13:55] <Xliff> Hrm. 

[13:55] <Xliff> nine: I'll have to golf on my end.

[13:55] <Xliff> I'm on:

[13:55] <Xliff> 2020.02.1-335-g750abe038

[13:55] <Xliff> Hmmm

[13:56] <Xliff> Try MAIN($filename, :@args)

[13:56] <[Coke]> then I get this usage suggestion:

[13:56] <[Coke]> foo.raku [--args=<Any> ...] <filename>

[13:57] *** rindolf joined
[13:57] <[Coke]> and I can invoke from CLI with: raku foo.raku --args=3 --args=4 TEST

[13:57] *** andrzejku joined
[14:03] <Xliff> Hrm. OK.

[14:03] <Xliff> I've had to work around. I'll circle back and try to confirm this, later.

[14:33] *** aborazmeh left
[14:37] <[Coke]> CLI interaction may be different from in-program?

[14:44] *** lichtkind joined
[14:58] *** melezhik left
[15:02] *** Altai-man_ joined
[15:05] *** sena_kun left
[15:10] *** MasterDuke joined
[15:12] *** caterfxo joined
[15:14] *** stoned75 joined
[15:19] *** wamba joined
[15:19] *** wamba left
[15:24] *** natrys joined
[15:26] *** Xliff left
[15:39] *** [Sno] joined
[15:48] *** melezhik joined
[15:50] *** chloekek joined
[15:53] *** benlittle joined
[16:10] *** rbt joined
[16:21] *** melezhik10 joined
[16:21] *** melezhik10 is now known as melezhik2

[16:22] <melezhik2> Hi chloekek: could you please follow up on my last question about Raku/nix?

[16:29] *** cpan-raku joined
[16:29] *** cpan-raku left
[16:29] *** cpan-raku joined
[16:30] *** wamba joined
[16:30] *** wamba left
[16:33] *** xelxebar joined
[16:36] *** Doc_Holliwood left
[16:38] *** caasih left
[16:38] *** BuildTheRobots left
[16:40] *** dylanwh left
[16:42] *** cooper joined
[16:42] *** freezing_ joined
[16:42] *** tbrowder joined
[16:43] *** peteretep joined
[16:43] *** MasterDuke left
[16:43] *** Doc_Holliwood joined
[16:44] *** caasih joined
[16:44] *** BuildTheRobots joined
[16:44] *** peteretep left
[16:44] *** dylanwh joined
[16:45] <El_Che> about the end of i386 ubuntu releases: I was able to create a i386 debian container, the in the future the ubuntu i386 packages will be replace by debian

[16:46] <El_Che> food

[16:46] *** dakkar left
[16:46] *** peteretep joined
[16:46] *** wamba joined
[16:46] *** ukine joined
[16:46] *** wamba left
[16:47] *** wamba joined
[16:47] *** wamba left
[16:52] <chloekek> .

[16:52] <tellable6> 2020-04-21T01:03:10Z #raku <melezhik> chloekek: what is main use case for Raku modules delivered as Nix packages? Are you developing Raku applications for Nix OS ?

[16:52] <chloekek> melezhik2: I use Nix for dependency management regardless of programming language, so when I wanted to use Raku libraries, I first had to build Nix infrastructur.

[16:53] <melezhik2> yeah, so you run your install/run you Raku applications using nix package manager, right?

[17:02] <Doc_Holliwood> sup

[17:03] *** sena_kun joined
[17:05] *** Altai-man_ left
[17:31] <chloekek> melezhik2: I build them with Nix and then I run them or deploy them to a server.

[17:32] <melezhik2> yeah. chloekek: I wonder how you _run_ them?

[17:32] <chloekek> nix-build && result/bin/...

[17:33] <chloekek> Or if they‚Äôre d√¶mons, I generate systemd service files that have Nix store paths in ExecStart=

[17:35] <melezhik2> yeah. so what deploy does? does it just copy nix descriptors to target systems? 

[17:36] <chloekek> I build locally with Nix, then I invoke nix-store -qR which prints a list of all Nix stores that the artifact depends on, then I rsync those over SSH. :)

[17:37] <chloekek> s/Nix stores/Nix store paths/

[17:37] <melezhik2> sorry, now I am starting to get confused, do you _build_ packages on target system?

[17:38] <chloekek> I don‚Äôt build them on the server I deploy to.

[17:38] <chloekek> I build them on my workstation. Then I rsync the build output and all the runtime dependencies.

[17:39] <melezhik2> ok. so you build them _once_ somewhere, then deploy them, basically over rsync? 

[17:39] <chloekek> Yes.

[17:39] <chloekek> The way Nix works is that all the build output as well as the dependencies go into /nix/store.

[17:39] <chloekek> And with the nix-store command-line program you can query that, e.g. to list the dependencies of something.

[17:39] <chloekek> Then I know what all the things are that I have to upload with rsync.

[17:40] <chloekek> There is nix-copy-closure which does essentially the same thing, but it requires that Nix is also installed on the server, which I find annoying to set up.

[17:40] <melezhik2> ok, i see. I am more interested in target server. So on target system, how do you _run_ ? Sorry if I ask you again, just want to be sure I understand 

[17:40] <chloekek> For instance, these are all the dependencies of one of my Raku programs: https://gist.github.com/chloekek/237b400d91513b24a85bad8ff8332c57

[17:41] <chloekek> You see that among them is Rakudo, and dependencies of Rakudo such as glibc.

[17:41] <melezhik2> yeah, I see. so having all those files rsynced to a target server, how do you run an application?

[17:42] <chloekek> One of the store paths in that list is called ‚Äúcrai-sysadmin‚Äù.

[17:42] <chloekek> This is a Nix package I wrote that contains systemd service files for CRAI, my Raku app.

[17:42] <chloekek> Here‚Äôs what such a systemd service file looks like:

[17:43] <chloekek> https://gist.github.com/chloekek/44782b48dafd8c3f09b3e439383e8680

[17:43] <chloekek> After rsyncing, my deploy script creates a symlink in /etc/systemd/system to that file and then restart the service.

[17:45] <melezhik2> interesting ...

[17:45] <melezhik2> ExecStart=/nix/store/1bz26cjxx6gwi423dccsjqglyxfispkf-crai/bin/crai-fastcgi --database=/var/lib/crai/crai.sqlite3 --fastcgi-socket=/var/run/crai/crai.fastcgi

[17:46] <chloekek> Yeah, that‚Äôs filled in by the crai-sysadmin Nix package during build, using a template .service file.

[17:46] <melezhik2> how does that ensure that all Raku dependencies will be resolved?

[17:46] <melezhik2> bearing in mind you have to ensure that PERL6LIB has to have all modules paths in it 

[17:47] <chloekek> /nix/store/1bz26cjxx6gwi423dccsjqglyxfispkf-crai/bin/crai-fastcgi is a Bash script generated by raku-nix, which sets up PERL6LIB and then invokes rakudo with my app.

[17:47] <chloekek> Looks like this:

[17:47] <melezhik2> ahh , of-course , it's NIX way :-) 

[17:48] <chloekek> https://gist.github.com/chloekek/2f13a6c5859585dbf5a14bfaa050320d

[17:48] <chloekek> It‚Äôs absolute paths all the way down, which makes it so reliable (if it works on one machine, it probably will on another as well, regardless of environment)

[17:49] <melezhik2> so your deploy/run scenario in a nutshell is: 1) rsync nix files to server 2) run nix prepared script that ensures that all dependence get "linked" through adjusting PERL6LIB  

[17:49] <chloekek> Pretty much.

[17:50] <chloekek> You can see the code in the deploy and sysadmin folders here: https://github.com/chloekek/crai

[17:50] *** sjm_uk left
[17:50] <chloekek> deploy/default.nix refers to sysadmin under the name ‚Äúproduction‚Äù, because sysadmin/default.nix also outputs a development environment called ‚Äúdevelopment‚Äù

[17:51] <chloekek> deploy/deploy.raku is the entry point, that calls nix-store and rsync and ssh

[17:51] *** Manifest0 joined
[17:53] <chloekek> Note that there are ready-made tools for generating systemd services and uploading things, if you use NixOS, called NixOps.

[17:54] <chloekek> I just like to handroll this myself so that I actually know how it works and don‚Äôt have to debug someone else‚Äôs code when things go wrong. :)

[18:00] *** |Sno| joined
[18:01] <melezhik2> chloekek: thanks for breaking this down for me ... I need to think, maybe like a said I could how Sparrow could be useful in your workflow

[18:02] <melezhik2> it makes more sense for me now

[18:02] <jdv79> is Sparrow used for something in production?

[18:02] *** [Sno] left
[18:05] <melezhik2> honestly I don't think anybody's used it, beside me. I used it on some my @work projects. Partly as automated tests , partly for daily tasks 

[18:06] <melezhik2> but yeah I has some good experience in using Sparrow as automation test system for our production code

[18:06] <melezhik2> has -> have

[18:09] <AlexDaniel> El_Che: debian food? :)

[18:16] *** pmurias joined
[18:16] *** benlittle left
[18:20] *** benlittle joined
[18:21] *** melezhik left
[18:32] <El_Che> AlexDaniel: free and ethical?

[18:32] <El_Che> :)

[18:33] *** pmurias left
[18:44] *** m_athias joined
[18:52] <timotimo> or just free and malloc

[18:54] *** abraxxa joined
[19:02] *** Altai-man_ joined
[19:05] *** sena_kun left
[19:07] <chloekek> Free as in free memory.

[19:11] *** guifa2 joined
[19:12] <AlexDaniel> chloekek: including memory used for disk cache or not? :)

[19:12] <chloekek> Storage is cheap, just buy more disk.

[19:12] <chloekek> Oh, disk cache. Buy more RAM.

[19:14] *** benlittle left
[19:14] *** benlittle joined
[19:23] <chloekek> So I have a dark theme for CRAI but I don‚Äôt know when to enable it. Could put it in a cookie I suppose.

[19:23] <chloekek> CSS has media queries for the light/dark preference but not all devices support it.

[19:27] *** mensvaga left
[19:27] <AlexDaniel> chloekek: just use media queries?

[19:28] <AlexDaniel> chloekek: I mean, really. Just default to something neutral for those devices that don't support it

[19:28] *** MasterDuke joined
[19:29] <chloekek> Thing is, my own use case already makes using media queries for this impractical. :)

[19:29] <AlexDaniel> chloekek: it used to be that almost every website had just one theme, it wasn't too horrible

[19:30] <chloekek> Twice a day I do two rounds of switching my terminal profile, editor, and various websites between light and dark theme.

[19:30] <chloekek> And until the year of the Linux desktop, it will remain this way. :)

[19:31] <chloekek> I could do it depending on the time of day, that would be neat.

[19:32] <AlexDaniel> chloekek: interesting. Why?

[19:32] <chloekek> I like the brightness to match my surroundings.

[19:33] <synthmeat> simpler to just move to basement

[19:33] <timotimo> i bet you can nick the calculation from redshift

[19:33] <timotimo> of course that's only based on lat/lon and localtime

[19:35] <lizmat> newer MBP's have automatic colour correction, I like it

[19:36] <lizmat> as soon as I switch on a light, the screen turns less bright / blue

[19:36] <chloekek> p6: say DateTime.now.hour

[19:36] <camelia> rakudo-moar b0a720cb6: OUTPUT: ¬´21‚ê§¬ª

[19:37] *** mowcat joined
[19:40] *** andrzejku left
[19:46] *** stoned75 left
[19:54] <Doc_Holliwood> i just watchen an interesting kotlin talk. nice info but the speaker made me crazy

[19:55] <Doc_Holliwood> je live demoed and had the habit of writing his blocks { like this}

[19:55] <Doc_Holliwood> probably some kind of infant brain injury. only explanation =)

[19:57] <melezhik2> reverse keyboard? :-)  

[19:58] <AlexDaniel> Doc_Holliwood: there are many weird styles, has nothing to do with any kind of injuries

[19:59] <AlexDaniel> sometimes intentional, sometimes people think it's not as important (and it isn't, frankly)

[20:02] <AlexDaniel> I'm high on unicode, vertical alignment, and other stuff like this. Very pedantic, but you could as well argue that I have a brain injury because why else would I need the code to be formatted in this specific and consistent way. :)

[20:07] <Doc_Holliwood> sometimes i think longer than i should about variable names in an attempt to make them sensible AND equally long so the =s in the assignments are vertically aligned ^^

[20:08] <lizmat> Doc_Holliwood: you can use spaces to align the =s  :-)

[20:10] *** mowcat left
[20:11] *** rbt left
[20:11] *** rbt joined
[20:12] *** rbt left
[20:13] *** rbt joined
[20:13] <Doc_Holliwood> oh and i don't you if you know this. kotlin also has an anonymous variable "it" that you can use in lambdas and such

[20:14] <Doc_Holliwood> it's of course pronounced "it" like in "what is it". and the guy kept saying it like IT in IT department

[20:14] <guifa2> lizmat: TIL you can unspace nothing to fix off-by-one vertical alignment

[20:14] <guifa2> m: my $a = 5; say $a\.Str

[20:14] <camelia> rakudo-moar 730c5a16d: OUTPUT: ¬´5‚ê§¬ª

[20:15] <Doc_Holliwood> everytime he said it my brain was like <"it", it's "it"!!>

[20:15] * guifa2 . o O ( i used to think I needed variable names to have length difference of ‚â•2 for unspace to be effective )

[20:16] * lizmat is reminded of a dancing called IT

[20:18] <guifa2> Doc_Holliwood: OTOH I've heard people call the show "the it crowd" rather than "the eye tee crowd" and it makes me cringe so bad

[20:24] <Doc_Holliwood> gringe! that's the right word

[20:25] <Doc_Holliwood> yet nobody ever said paris hilton being an IT girl lol

[20:25] *** melezhik2 left
[20:25] <Doc_Holliwood> as it seems java and the jvm have caught up with a lot of new concepts. 

[20:26] <Doc_Holliwood> lightweight new threads, higher order functions, type inference, parallel streams ...

[20:27] <Doc_Holliwood> i wonder, if it were more feasible to implement raku on the jvm than it was back then when the decision was made to develop Moar

[20:27] <Doc_Holliwood> the jvm today

[20:28] <El_Che> not everyone loves java and having raku as a jvm-first lang would have closed many doors (and opened others)

[20:29] <Demos[m]> Moar is easier to boot

[20:29] <Demos[m]> very easy to boot raku on winodws

[20:29] <Demos[m]> which is nice

[20:32] <El_Che> I have the impressions that jvm languages are only popular with java people that are bored by java

[20:35] *** pilne joined
[20:45] <AlexDaniel> heh, latest graph: https://imgur.com/a/B6noOuG

[20:45] *** melezhik joined
[20:45] <AlexDaniel> it's nice to know that the script is still working‚Ä¶ :)

[20:46] *** MasterDuke left
[20:47] <melezhik> chloekek: what is CRAI for? does it server as an index to build nix/raku packages, any other purpose?

[20:48] <chloekek> I needed a cronjob that indexes metadata and hashes of distributions.

[20:48] <chloekek> Might as well make a web interface for it.

[20:48] <melezhik> yeah, I know. but I am asking who is the client of such an index?

[20:49] <melezhik> so far it's only a raku-nix, right?

[20:49] <chloekek> The tools/generate-nix.pl script in raku-nix, which is currently broken and I have to fix. :)

[20:50] <AlexDaniel> melezhik: well, if it keeps improving at that pace then we might as well replace https://modules.raku.org/ with it

[20:53] <AlexDaniel> chloekek: btw is the latest version deployed?

[20:53] <melezhik> yeah, so right now, it's raku-nix, in the future it's probably could be an index for raku modules eco system. correct?

[20:53] <AlexDaniel> chloekek: I'm just wondering why links are not clickable: https://crai.foldr.nl/archive/https%3A%2F%2Fwww.cpan.org%2Fauthors%2Fid%2FJ%2FJS%2FJSTOWE%2FPerl6%2FNativeHelpers-Array-0.0.3.tar.gz

[20:53] <AlexDaniel> melezhik: maybe

[20:55] <melezhik> are you guys thinking about changing underlying deploy mechanisms (zef) if would change index system for modules?

[20:55] <melezhik> I'm just curious ...

[20:56] <chloekek> AlexDaniel: yes.

[20:56] <AlexDaniel> I don't think there are any plans yet. In fact, even the idea of CRAI replacing modules.raku.org is bit of a stretch at this point

[20:56] <chloekek> AlexDaniel: links are not clickable because they don‚Äôt have an a element surrounding them. :)

[20:58] <AlexDaniel> chloekek: https://github.com/chloekek/crai/issues/20

[20:58] <chloekek> I didn‚Äôt bother making them clickable yet because sometimes you have git:// or ssh:// URLs or git@ ‚ÄúURLs‚Äù and they have to be converted to HTTP URLs.

[20:58] <chloekek> thans!

[21:02] <chloekek> I‚Äôm going to sleep. Goodbye

[21:02] *** chloekek left
[21:03] *** sena_kun joined
[21:04] *** Black_Ribbon joined
[21:05] *** Altai-man_ left
[21:09] *** p6steve joined
[21:09] <p6steve> p6: say set <a b c>

[21:09] <camelia> rakudo-moar ef7dd189a: OUTPUT: ¬´Set(a b c)‚ê§¬ª

[21:10] *** daxim joined
[21:12] <guifa2> m: my $a = buf16.new(0x6162, 0x6364, 0x6566); say $a.decode("ISO-8859-1").encode("ISO-8859-1");

[21:12] <camelia> rakudo-moar ef7dd189a: OUTPUT: ¬´Blob[uint8]:0x<62 61 64 63 66 65>‚ê§¬ª

[21:12] * guifa2 . o O ( endianness issue but how to fix it? )

[21:12] *** melezhik left
[21:14] *** p6steve_ joined
[21:14] <timotimo> my kejoard Odidd

[21:15] *** MasterDuke joined
[21:15] *** molaf joined
[21:15] *** p6steve left
[21:16] <p6steve_> p6: set <b c d>

[21:16] <camelia> rakudo-moar ef7dd189a: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "set <b c d>" in expression "set <b c d>" in sink context (line 1)‚ê§¬ª

[21:17] *** cognominal joined
[21:22] *** p6steve_ left
[21:23] *** p6steve joined
[21:34] *** p6steve left
[21:35] *** rindolf left
[21:36] *** Doc_Holliwood left
[21:40] *** xelxebar left
[21:41] *** xelxebar joined
[21:42] *** p6steve joined
[21:46] *** p6steve left
[21:47] <tbrowder> testing

[21:48] <tbrowder> just got conflicting confusing md

[21:49] <tbrowder> msgs from Nickserv. one said confirm, another said i was confirmed, the next said to confirm...

[21:50] <tbrowder> is there some wild spam thing going on?

[21:56] *** daxim left
[21:57] *** natrys left
[22:01] *** daxim joined
[22:06] <lizmat> tbrowder: I only know of issues on irc.perl.org today

[22:06] <lizmat> so not here  :-)

[22:06] <tbrowder> thnx

[22:11] *** aborazmeh joined
[22:11] *** aborazmeh left
[22:11] *** aborazmeh joined
[22:13] <guifa2> hrm, Comma no like $¬¢ =\

[22:19] *** p6steve joined
[22:24] *** p6steve left
[22:24] *** aborazmeh left
[22:39] *** cpup joined
[22:56] *** lichtkind left
[22:57] *** p6steve joined
[22:58] <AlexDaniel> jmerelo: I'm not kidding. >:)

[22:58] <tellable6> AlexDaniel, I'll pass your message to jmerelo

[23:02] *** p6steve left
[23:02] *** Altai-man_ joined
[23:05] *** sena_kun left
[23:08] *** veesh_ joined
[23:10] *** veesh_ is now known as veesh

[23:15] *** pecastro left
[23:28] *** cpup left
[23:29] *** cpup joined
[23:49] *** k-man joined
[23:56] *** melezhik joined
[23:58] *** melezhik left
