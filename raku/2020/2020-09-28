[00:35] *** skids left
[00:35] *** pamplemousse__ joined
[00:36] <dominix> because I have to. some client request is to use clear linux

[00:37] <dominix> I guess there is no pkg for Clear Linux, I just don't found it in fact.

[00:47] *** Geth left
[00:48] *** Geth joined
[00:49] *** pamplemousse__ left
[00:54] *** dominix left
[00:58] *** aborazmeh joined
[00:58] *** aborazmeh left
[00:58] *** aborazmeh joined
[01:09] *** molaf left
[01:21] *** molaf joined
[01:48] *** sjaveed_ joined
[01:48] *** sjaveed left
[01:49] <tbrowder> dominix: what kind of package sys does clear linux use? is it fedora or debian based?

[01:49] <tellable6> tbrowder, I'll pass your message to dominix

[01:51] *** stoned75 left
[01:55] <tbrowder> dominix: never mind. i see the problem i would have with clear linux. i, being retired, would have the luxury of telling my client "no" to clear linux, but he's paying for that agony.

[01:56] <tellable6> tbrowder, I'll pass your message to dominix

[01:57] *** defaultxr left
[01:57] <tbrowder> dominix: but your client wants you to use raku? maybe client will pay for a clear linux raku pkg.

[01:57] <tellable6> tbrowder, I'll pass your message to dominix

[01:58] *** stoned75 joined
[02:00] *** codesections left
[02:02] *** defaultxr joined
[02:04] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:08] * [Coke] gets a skype alert in a conversation called "no other participants"

[02:43] *** perfi joined
[03:11] *** stoned75 left
[03:40] *** BenGoldberg left
[03:43] *** stoned75 joined
[04:43] *** linkable6 left
[04:43] *** evalable6 left
[04:43] *** tellable6 left
[04:44] *** evalable6 joined
[04:45] *** linkable6 joined
[04:45] *** tellable6 joined
[04:46] *** stoned75 left
[04:46] *** frot-lab joined
[04:49] *** skids joined
[04:54] *** ex_nihilo left
[05:07] *** stoned75 joined
[05:08] *** BenGoldberg joined
[05:15] *** jmerelo joined
[05:34] *** molaf left
[05:36] *** skids left
[05:37] *** frot-lab left
[05:40] *** frot-lab joined
[05:42] *** BenGoldberg left
[05:57] <Geth> ¦ ecosystem: 8a4b9a11cf | (Haytham Elganiny)++ | META.list

[05:57] <Geth> ¦ ecosystem: Add Pakku::RecMan

[05:57] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/8a4b9a11cf

[05:57] <Geth> ¦ ecosystem: 8bda0c7933 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[05:57] <Geth> ¦ ecosystem: Merge pull request #545 from hythm7/master

[05:57] <Geth> ¦ ecosystem: 

[05:57] <Geth> ¦ ecosystem: Add Pakku::RecMan

[05:57] <Geth> ¦ ecosystem: OK, I'm going to merge it anyway. We can't test native dependencies. I don't really understand why it's trying to test, and is throwing an unrelated error, when one of the dependencies is not found. It might be an error in the testing script. Thanks anyway for submitting this.

[05:57] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/8bda0c7933

[05:58] <xinming_> SmokeMachine: You'll need to comment the       `quietly warn(.name);`  statement to reproduce the issue.

[06:03] *** aborazmeh left
[06:09] *** stoned75 left
[06:10] *** stoned75 joined
[06:15] *** pepl joined
[06:17] *** ufobat joined
[06:24] *** aluaces joined
[06:55] *** Altai-man joined
[07:01] *** rindolf joined
[07:04] *** orinthe left
[07:04] *** orinthe joined
[07:05] *** aborazmeh joined
[07:05] *** aborazmeh left
[07:05] *** aborazmeh joined
[07:08] *** Sgeo left
[07:16] *** domidumont joined
[07:32] *** abraxxa joined
[07:36] *** abraxxa left
[07:37] *** maggotbrain left
[07:38] *** abraxxa joined
[07:39] *** xinming_ left
[07:40] *** xinming_ joined
[07:46] *** dakkar joined
[08:00] *** sno left
[08:01] *** Altai-man left
[08:04] *** perfi left
[08:04] *** maggotbrain joined
[08:08] <El_Che> .tell dominix It looks like Clear Linux uses flatpack as pkg format. Timotimo just release a rakudo release oin that format

[08:08] <tellable6> El_Che, I'll pass your message to dominix

[08:09] <timotimo> El_Che: not quite, i made an appimage

[08:14] <El_Che> damn, close enough :)

[08:15] <El_Che> .tell dominix: nevr mind about the flatpack. However precompiled non-pkg release can be found here: https://github.com/nxadm/rakudo-pkg/releases/tag/v2020.09, just untar-gzip this: rakudo-pkg-mooarvm-2020.09-01-linux-x86_64.tar.gz

[08:15] <tellable6> El_Che, I'll pass your message to dominix

[08:23] *** sno joined
[08:33] *** BenGoldberg joined
[09:06] *** BenGoldberg left
[09:11] <Geth> ¦ problem-solving: JJ assigned to jnthn Issue What is the philosophy of the Raku language https://github.com/Raku/problem-solving/issues/235

[09:39] *** perfi joined
[09:41] *** perfi left
[09:41] *** perfi joined
[09:41] *** cpan-raku left
[09:42] *** cpan-raku joined
[09:42] *** cpan-raku left
[09:42] *** cpan-raku joined
[10:12] *** stoned75 left
[10:37] *** stoned75 joined
[10:44] <lizmat> Anyone for getting people to update information on https://www.slant.co/topics/15491/viewpoints/12/~general-purpose-programming-languages~perl-6 ?

[10:52] *** aluaces left
[11:04] *** perryprog_ joined
[11:12] *** perfi left
[11:20] *** leont joined
[11:58] *** BenGoldberg joined
[11:59] *** pamplemousse__ joined
[12:00] *** frot-lab left
[12:00] *** frot-lab joined
[12:05] *** aluaces joined
[12:09] *** sena_kun joined
[12:29] *** ufobat_ joined
[12:32] *** BenGoldberg left
[12:34] *** ufobat left
[12:46] *** jmerelo left
[13:03] *** ensamvarg3 joined
[13:05] *** Xliff joined
[13:05] <Xliff> \o

[13:20] *** domidumont left
[13:20] *** __jrjsmrtn__ left
[13:23] *** domidumont joined
[13:23] *** __jrjsmrtn__ joined
[13:28] *** domidumont left
[13:37] *** aluaces left
[13:38] *** aluaces joined
[13:39] *** Sgeo joined
[13:42] *** domidumont joined
[13:42] <Geth> ¦ doc: wayland++ created pull request #3655: Missing closing square bracket

[13:42] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3655

[13:47] *** vike joined
[13:47] <Geth> ¦ doc: ca58303237 | wayland++ (committed using GitHub Web editor) | doc/Language/community.pod6

[13:47] <Geth> ¦ doc: Missing closing square bracket

[13:47] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/ca58303237

[13:47] <Geth> ¦ doc: a1b2807a24 | Altai-man++ (committed using GitHub Web editor) | doc/Language/community.pod6

[13:47] <Geth> ¦ doc: Merge pull request #3655 from wayland/patch-1

[13:47] <Geth> ¦ doc: 

[13:47] <Geth> ¦ doc: Missing closing square bracket

[13:47] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a1b2807a24

[13:47] <linkable6> Link: https://docs.raku.org/language/community

[13:58] *** ezzieyguywuf left
[13:59] *** mark[m]1 joined
[14:14] *** mowcat joined
[14:19] *** sjaveed_ left
[14:21] *** sjaveed joined
[14:21] <Geth> ¦ doc: Scimon++ created pull request #3656: Updating working on the TWEAK documentation based on confusion here :…

[14:21] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3656

[14:25] *** sjaveed left
[14:30] *** MasterDuke left
[14:34] *** ensamvarg3 left
[14:36] *** aluaces left
[14:40] *** MasterDuke joined
[14:53] *** skids joined
[14:56] *** Altai-man joined
[14:58] *** sena_kun left
[14:59] *** sjaveed joined
[15:02] *** aluaces joined
[15:04] *** sjaveed left
[15:24] *** BenGoldberg joined
[15:35] *** molaf joined
[15:38] *** mowcat left
[15:57] *** Tirifto joined
[15:58] *** BenGoldberg left
[16:00] *** pamplemousse__ left
[16:07] *** Tirifto left
[16:09] <xinming_> SmokeMachine: Is it ok to expose the $!dbh? for now, Red lacks views etc, It'll be helpful if we have $!dbh directly

[16:10] <SmokeMachine> xinming_: you can use it by `red-do { .execute: "your SQL here" }`

[16:16] *** samcv joined
[16:37] *** sjaveed joined
[16:42] *** dakkar left
[16:42] *** domidumont left
[16:46] *** MilkmanDan left
[16:46] *** MilkmanDan joined
[16:49] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/09/28/2020-39-the-releaser/

[16:56] *** Doc_Holliwood joined
[16:56] <mark[m]1> Hi all, just a quick question, is it "normal" that a simple script with a loop { [stuff]; sleep 60*60 } is using CPU time during the sleep stage?

[16:57] <mark[m]1> as reported by systemd which is handling the script in a .service file

[17:00] <lizmat> depends on what your stuff is

[17:00] <lizmat> afk&

[17:06] *** pamplemousse__ joined
[17:09] *** orinthe left
[17:09] *** orinthe joined
[17:11] <mark[m]1> lizmat: that's kind of my question I guess, does it?

[17:11] <mark[m]1> or rather, how so?

[17:11] <mark[m]1> doesn't the program just go to sleep when it hits the "sleep" subroutine and not use any more CPU until the wake time?

[17:21] <mark[m]1> (I realise this is perhaps more than a raku question… but I'm interested in the particular implementation in raku as I use it a lot for bits and pieces)

[17:21] <[Coke]> if I do "loop { sleep 3500 }" (oops, math is hard) I see it taking 0% cpu and a smidge of memory on my mac

[17:22] <[Coke]> are you sure you're looking at it in the sleep stage and not the "stuff" stage? Do you have a small sample that shows the issue?

[17:23] <[Coke]> any concurrency in the program that might be doing stuff while you're sleeping?

[17:27] <mark[m]1> sure: https://termbin.com/lf9t

[17:27] * mark[m]1 sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/EkkLWSCVHtCeehpHeYLywSdI/message.txt >

[17:28] * mark[m]1 sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/CKsohVTmeoHgbfMpSKgKrlPu/message.txt >

[17:28] * mark[m]1 sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/gKUZOVuZgJhUfGjTTtrYZnyR/message.txt >

[17:29] <mark[m]1> So it's run the journalctl line once, that chalked up about 1s CPU, then the 23 other seconds are all in the "sleep" stage

[17:30] <mark[m]1> I'm not saying its outrageous time, just that it seems odd there should be any at all o_0

[17:31] <mark[m]1> [Coke]:  and so, no, no concurrency and I agree, I tested the loop and the simple sleep, and also observe no CPU time, which is why I'm getting curious here! 😀

[17:36] <tobs> The garbage collector would be a natural candidate here, but I don't know under what circumstances it decides that it should run. A long sleep seems like a good time in any case.

[17:41] <mark[m]1> makes sense indeed

[17:47] *** toddr joined
[17:47] *** ufobat_ left
[17:55] *** gordonfish left
[17:55] *** gordonfish joined
[18:05] *** pepl left
[18:21] *** Sauvin left
[18:35] *** ufobat_ joined
[18:49] *** BenGoldberg joined
[18:51] <SmokeMachine> should this work?

[18:51] <SmokeMachine> m: my $a = %(bla => %(a => %(x => 1), b => %(x => 2), c => %(x => 3))); say $a{"bla"; "a"}:v

[18:51] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unexpected named argument 'v' passed␤  in block <unit> at <tmp> line 1␤␤»

[18:51] <SmokeMachine> m: my $a = %(bla => %(a => %(x => 1), b => %(x => 2), c => %(x => 3))); say $a{"bla"; "a"}

[18:51] <camelia> rakudo-moar 85847d2f1: OUTPUT: «({x => 1})␤»

[18:51] <SmokeMachine> m: my $a = %(bla => %(a => %(x => 1), b => %(x => 2), c => %(x => 3))); say $a{"bla"; *; "x"}:v # this is what I really wanted

[18:51] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unexpected named argument 'v' passed␤  in block <unit> at <tmp> line 1␤␤»

[18:52] <SmokeMachine> m: my $a = %(bla => %(a => %(x => 1), b => %(x => 2), c => %(x => 3))); say $a{"bla"; *; "x"}

[18:52] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(1 3 2)␤»

[18:52] <SmokeMachine> m: my $a = %(bla => %(a => %(x => 1), b => %(x => 2), c => %(y => 3))); say $a{"bla"; *; "x"} #. But I didn't want that Any

[18:52] <camelia> rakudo-moar 85847d2f1: OUTPUT: «((Any) 1 2)␤»

[18:56] *** mowcat joined
[18:57] *** sena_kun joined
[18:59] *** Altai-man left
[19:13] *** Black_Ribbon joined
[19:24] *** BenGoldberg left
[19:31] *** abraxxa left
[19:32] *** abraxxa joined
[19:38] <bartolin> lizmat++ # yet another interesting weekly

[19:38] <lizmat> thank you all for the content  :)

[19:39] <rir> Is there a utimes type functionality in Raku(do)?

[19:44] *** rindolf left
[20:03] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2020/09/28/releasing-for-virtuous-programmers/

[20:03] <gfldex> lizmat: sorry for being late

[20:04] <lizmat> gfldex: no pb, stuff for next week's  :-)

[20:05] <kiti_nomad[m]> When animals have their gonads removed, their metabolism will be reduced, and their personality will become mild... But when men have their gonads removed, it seems that their metabolism has not become slower.  A perl programmer in Taiwan has changed gender, but her hair still looks scarce

[20:08] <kiti_nomad[m]> Is the bless method in perl the same as the init method in objective-c?

[20:09] *** ufobat_ left
[20:11] *** pamplemousse__ left
[20:14] <Geth> ¦ doc/method-not-op-p: 4ba9f23399 | (Stoned Elipot)++ | 2 files

[20:14] <Geth> ¦ doc/method-not-op-p: race/hyper are methods not operators

[20:14] <Geth> ¦ doc/method-not-op-p: 

[20:14] <Geth> ¦ doc/method-not-op-p: while here format {Race,Hyper}Seq word

[20:14] <Geth> ¦ doc/method-not-op-p: review: https://github.com/Raku/doc/commit/4ba9f23399

[20:15] <Geth> ¦ doc: stoned++ created pull request #3657: race/hyper are methods not operators

[20:15] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3657

[20:32] *** Mawile left
[20:38] <AlexDaniel`> kiti_nomad: wtf was that remark about? Are you sure you wanted to say this out loud, or am I missing something?

[20:39] <timotimo> mark[m]1: there is a supervisor thread for the ThreadPoolScheduler that regularly (i think a thousand times per second) checks all the work queues and worker statuses and decides whether to launch new workers

[20:39] <AlexDaniel> timotimo: that's what I thought about. The code there is rather hot too

[20:40] <mark[m]1> @timo

[20:40] <mark[m]1> (woops…)

[20:40] <timotimo> kiti_nomad[m]: i'm not sure but i don't think having hormonal replacement therapy done to go from primarily testosterone to primarily estrogen will reverse any of the typical baldness that comes with testosterone

[20:40] <mark[m]1> timotimo:  thanks for the info! that makes sense

[20:41] <timotimo> there is two env vars that make the scheduler supervisor output debug messages

[20:41] <timotimo> one spits out decisions made, one spits out measurements taken (i.e. a lot of output)

[20:42] *** Xliff left
[20:49] <timotimo> also, whether the gonads are removed or not (i assume this is in reference to what's usually called bottom surgery) is a highly personal manner; i don't know if you have more info than just "she did a gender change", but going from "gender reassignment" to "had bottom surgery" is not guaranteed

[20:49] <AlexDaniel> and I still fail to see how any of this is relevant to this channel, or in fact, any other channel in existence

[20:50] <AlexDaniel> given the way it talks about a specific person

[20:50] <timotimo> fair enough

[20:54] <mark[m]1> timotimo: any documentation on those, RAKUDO_MAX_THREADS is the only one related I can see in https://docs.raku.org/programs/03-environment-variables

[20:55] <[Coke]> AlexDaniel++ - yes, please, let's consider that way off topic and inappropriate.

[20:58] <timotimo> RAKUDO_SCHEDULER_DEBUG and RAKUDO_SCHEDULER_DEBUG_STATUS

[21:01] *** dmc00 left
[21:02] *** sena_kun left
[21:05] <mark[m]1> thanks !

[21:08] <mark[m]1> well the second one continuously spills out "[SCHEDULER 7094] Per-core utilization (approx): 1.1223469876632168%"

[21:08] <mark[m]1> when in sleep

[21:09] <AlexDaniel> timotimo: shouldn't mark[m]1 just file a bug report about it? There may be reasons why it behaves this way but it does not seem to be OK to me

[21:10] <AlexDaniel> for example, let's say the value of 1% is true. Does it mean that 100 rakudo processes will keep CPU at 100% ?

[21:11] <AlexDaniel> correction: 100 “sleeping” rakudo processes

[21:12] <AlexDaniel> and if 100 processes sounds like a stretch, there are like what, 20 whateverable bots? Most of them not doing anything, just waiting for new messages

[21:12] <mark[m]1> AlexDaniel:  happy to, but I need to dig into it a bit better, 'cos this outputs nothing:

[21:12] <mark[m]1> ```

[21:12] <mark[m]1> raku -e 'sleep 100'

[21:12] <mark[m]1> ```

[21:12] <mark[m]1> (still with export RAKUDO_SCHEDULER_DEBUG_STATUS="True")

[21:13] <mark[m]1> so it probably has to do with the "run()" I have before the sleep

[21:14] * mark[m]1 sent a long message:  < https://matrix.org/_matrix/media/r0/download/matrix.org/XCBcqzGVBALqZcsxPRikumSP/message.txt >

[21:15] *** Xliff joined
[21:17] <timotimo> yes, run() will kick off an event queue worker thread

[21:27] *** stoned75 left
[21:28] *** stoned75 joined
[21:28] <mark[m]1> which isn't killed when the run() call completes?

[21:32] <mark[m]1> you know the fun part in all this: I actually had started this script with a Proc::Async() that called journalctl to keep an eye on the logs, and a react {} construct to … well, react accordingly. And then I thought "that's probably un-necessarily CPU greedy", so changed it to a `run("journalctl", "blabla", "--since", "$sleep_time"); sleep $sleep_time` only to find that in the sleep, it's still using CPU 😀

[21:32] <mark[m]1> to be precise, Proc::Async("journalctl", "blabla", "--follow")

[21:32] <timotimo> perhaps we want to have another look at how moarvm exactly executes the supervisor's code

[21:33] <timotimo> at one point i changed it around so it didn't do any allocations at all, so when your program is literally sleeping, the GC wouldn't kick in

[21:33] <mark[m]1> ah that's what lizmat had first suggested, something related to the GC

[21:34] <mark[m]1> sorry tobs  rather

[21:35] <parabolize> SmokeMachine: I couldn't think of a concise way to do that. This seems to work though:

[21:35] <parabolize> m: my %h = bla => %(a => %(:1x), b => %(:2x), c => %(:3y)); say ( for %h<bla>.values -> $v { with $v<x> {$_} } );

[21:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(2 1)␤»

[21:40] *** stoned75 left
[21:47] *** stoned75 joined
[21:48] *** thundergnat joined
[21:48] <thundergnat> m: my $a = %(bla => %(a => %(x => 1), b => %(x => 2), c => %(y => 3))); say $a{"bla"; *; "x"}.grep: *.so

[21:48] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(2 1)␤»

[21:51] <timotimo> OK, the GC does definitely run during the sleep

[21:51] <thundergnat> m: my $a = %(bla => %(a => %(x => 1), b => %(x => 2), c => %(y => 3))); say $a{"bla"; *; "x"}.grep: *.defined # probably better to avoid skipping zero values

[21:51] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(1 2)␤»

[21:52] <timotimo> amusingly, perhaps, the timings between the GC runs starts at 4s, then 11, then 22, then 44, then 90, and another 90

[21:58] <parabolize> grep: *.defined looks nice :)

[21:58] <greppable6> parabolize, Sorry, can't do that

[21:59] <parabolize> so many bots

[22:03] *** stoned75 left
[22:07] *** aluaces left
[22:15] *** BenGoldberg joined
[22:31] <AlexDaniel> parabolize: at least they're sorry x)

[22:49] *** BenGoldberg left
[23:19] *** leont left
[23:40] *** ggoebel left
[23:45] *** ggoebel joined
