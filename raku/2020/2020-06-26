[00:00] *** xinming left
[00:00] *** xinming joined
[00:02] *** sena_kun joined
[00:03] *** Altai-man_ left
[00:07] *** lichtkind left
[00:10] *** rbt left
[00:11] *** rbt joined
[00:34] *** charsbar left
[00:35] *** charsbar joined
[00:37] *** finanalyst left
[00:43] *** oddp left
[00:56] *** MilkmanDan left
[00:56] *** zacts joined
[01:09] *** molaf left
[01:21] *** molaf joined
[01:34] *** aborazmeh joined
[01:34] *** aborazmeh left
[01:34] *** aborazmeh joined
[01:37] *** TeamBlast left
[01:44] <vrurg> weekly: https://www.youtube.com/watch?v=gMjZ3nBcGWs

[01:44] <notable6> vrurg, Noted! (weekly)

[01:44] <tellable6> 2020-06-25T14:56:18Z #raku <Xliff> vrurg Was R#3075 ever fixed? Looks like both it and R#3284 are still open

[01:44] <linkable6> R#3075 [open]: https://github.com/rakudo/rakudo/issues/3075 [precompilation] Conflicting use statement does not produce an error, but fails dynamic compilation.

[01:44] <linkable6> R#3284 [open]: https://github.com/rakudo/rakudo/pull/3284 [precompilation] Fix Stash'es clashing after deserialization

[01:46] <vrurg> I'm gonna have two talk in a row tomorrow. To those who's not attending the conference, they're gonna be streamed on https://www.youtube.com/yapcna. The first talk starts 11:00 EDT or 15:00 UTC.

[01:49] <vrurg> .tell Xliff the short answer about R#3075 – no, not fixed. Briefly, I was sure my fix is causing a SIGSEGV, but later I realized that it could have been a result of missing gtk libs because they were not in a path accessible to rakudo. Don't have time to get back to it though, but always remember about the problem.

[01:49] <linkable6> R#3075 [open]: https://github.com/rakudo/rakudo/issues/3075 [precompilation] Conflicting use statement does not produce an error, but fails dynamic compilation.

[01:49] <tellable6> vrurg, I'll pass your message to Xliff

[01:51] *** guifa joined
[01:51] *** Doc_Holliwood left
[01:59] *** dataangel left
[02:01] *** dataangel joined
[02:01] *** Altai-man_ joined
[02:01] *** Manifest0 left
[02:03] *** Manifest0 joined
[02:03] *** sena_kun left
[02:05] *** xinming left
[02:07] *** xinming joined
[02:09] *** softmoth joined
[02:10] *** aborazmeh left
[02:15] *** Cabanossi left
[02:23] *** zacts left
[02:24] *** zacts joined
[02:25] *** Cabanoss- joined
[03:05] *** zacts left
[03:08] * guifa is trying to rush to finish up his slides for tomorrow 

[03:11] *** rbt left
[03:11] *** rbt joined
[03:33] *** Cabanoss- left
[03:45] *** Cabanossi joined
[03:55] *** xinming left
[03:55] *** xinming joined
[03:58] *** reach_satori_ joined
[04:01] *** reach_satori left
[04:02] *** sena_kun joined
[04:03] *** Altai-man_ left
[04:13] *** rbt left
[04:14] *** rbt joined
[04:23] *** Cabanoss- joined
[04:24] *** Cabanossi left
[04:24] *** Cabanoss- is now known as Cabanossi

[04:30] *** tejr left
[04:30] *** CAPTCHA_REQUIRED left
[04:33] *** camelCaser left
[04:33] *** ccamel joined
[04:37] *** brtastic joined
[04:39] *** tejr joined
[04:55] *** wamba joined
[05:02] *** OpenZen left
[05:14] *** brtastic left
[05:28] *** molaf left
[05:29] *** Kaiepi joined
[05:38] *** Kaiepi left
[05:41] *** Kaiepi joined
[05:44] *** brtastic joined
[05:53] *** bocaneri joined
[05:55] *** Cabanossi left
[05:58] *** Cabanossi joined
[06:01] *** Altai-man_ joined
[06:03] *** sena_kun left
[06:12] *** Doc_Holliwood joined
[06:39] *** zacts joined
[06:41] *** zacts left
[06:41] *** zacts joined
[06:43] *** rindolf joined
[06:53] *** zacts left
[06:58] *** dolmen joined
[06:59] *** zacts joined
[07:05] *** softmoth left
[07:06] *** sarna joined
[07:13] *** JJMerelo joined
[07:15] *** vike left
[07:18] *** vike joined
[07:40] *** Doc_Holliwood left
[07:48] *** Doc_Holliwood joined
[07:53] *** PavelB joined
[08:02] *** sena_kun joined
[08:03] *** Cabanossi left
[08:03] *** Altai-man_ left
[08:04] *** xinming left
[08:07] *** xinming joined
[08:12] *** rindolf left
[08:15] *** Cabanossi joined
[08:16] *** rbt left
[08:17] *** rbt joined
[08:18] *** pecastro joined
[08:31] *** bocaneri left
[08:40] *** xinming left
[08:41] *** xinming joined
[08:42] *** Cabanossi left
[08:43] *** Sgeo left
[08:43] *** bocaneri joined
[08:50] *** Doc_Holliwood left
[08:51] *** Cabanossi joined
[08:54] *** kensanata joined
[08:59] *** Doc_Holliwood joined
[09:00] *** finanalyst joined
[09:03] *** zacts left
[09:14] *** rindolf joined
[09:15] *** molaf joined
[09:15] *** antoniogamiz joined
[09:29] *** oddp joined
[09:32] *** JJMerelo left
[09:39] *** bocaneri left
[09:43] *** molaf left
[09:46] *** Black_Ribbon left
[09:51] *** bocaneri joined
[09:57] *** abraxxa left
[10:01] *** Altai-man_ joined
[10:02] *** JJMerelo joined
[10:03] *** sena_kun left
[10:03] <JJMerelo> Just archived https://github.com/raku-community-modules/perl6-ioc/

[10:04] <JJMerelo> There are now more than 100 modules in that organization, we need to trim it down a bit. In this case, the one it was forked from is being actively developed, and it hadn't been released.

[10:05] <JJMerelo> I am going to directly delete https://github.com/raku-community-modules/WebService-HazIP It's a fork which is 25 commits behind master. 

[10:07] <AlexDaniel> sure

[10:08] <JJMerelo> Also deleted this one raku-community-modules/Perl6-Math-Quaternion 

[10:09] <JJMerelo> Same thing, 11 commits behind the original one, and 1 commit ahead... with conflicts. So no use for it.

[10:09] <JJMerelo> BTW, I opened a discussion in the raku-community-modules secret team organization

[10:09] <lizmat> weekly https://datakinds.github.io/2020/06/25/explaining-raku-using-itertools

[10:10] <JJMerelo> If you got a notification, please react to it.

[10:15] <JJMerelo> raku-community-modules/perl6-Test-Class also deleted. Only one commit, not even a META6.json. This is one of a set of repos apparently by autarch

[10:15] <JJMerelo> .seen autarch

[10:15] <tellable6> JJMerelo, I saw autarch 2020-05-10T01:56:06Z in #raku: <autarch> There you go

[10:17] <JJMerelo> .tell autarch there are a bunch of repos that were apparently originally yours in the raku-community-modules organization. I'm deleting those that were not released, and putting notices on others. But could you get them back? It would probably be the best thing.

[10:17] <tellable6> JJMerelo, I'll pass your message to autarch

[10:18] *** Doc_Holliwood left
[10:23] *** PavelB left
[10:28] *** antoniogamiz left
[10:30] *** brtastic left
[10:32] *** nige joined
[10:34] <nige> weekly https://www.youtube.com/watch?v=VS_IS_omAV8

[10:35] <nige> I mentioned this idea a little while ago in the channel. Here is a recent lightning talk about it from the conference in the cloud (cic)

[10:35] *** lichtkind joined
[10:45] *** cpan-raku left
[10:47] *** oddp left
[10:47] *** cpan-raku joined
[10:47] *** cpan-raku left
[10:47] *** cpan-raku joined
[10:48] *** sno left
[11:04] <gfldex> raku: my &b = <-> $a { }

[11:04] <evalable6> gfldex, rakudo-moar f1960baa9: OUTPUT: «»

[11:05] <gfldex> how do we call the "<->" in this case?

[11:14] *** grondilu joined
[11:17] *** MorayJ joined
[11:19] <grondilu> Yeasterday I learned about browsix.  Interesting project.  Could be a possible way to port raku on the web.

[11:19] <grondilu> *Yesterday

[11:20] <grondilu> appart from the js port, that is.

[11:20] <grondilu> *apart

[11:21] <lizmat> grondilu: link?

[11:21] <grondilu> https://browsix.org/

[11:22] <lizmat> nige: now that Perl 7 is announced, and both communities will be trying to get new mindshare by improving the language, I don't think there it will make sense to make a website that will do both Perl and Raku

[11:22] <lizmat> so, I applaud the idea, it's just that I think it should just be about Raku

[11:22] <grondilu> Am I correct in assuming that all it would take would be to compile Moar ?  Since rakudo eventually is compiled into MoarVM binary code ?

[11:22] * lizmat just re-read https://xdg.me/blog/perl-5-and-perl-6-are-mortal-enemies/ in light of the Perl 7 announcement

[11:23] <lizmat> grondilu: at a quick glance, it looks like a nice way to get a VM that runs in the browser

[11:25] <jnthn> gfldex: In the grammar both -> and <-> are called lambda, and I'd probably call the latter "rw lambda" or some such

[11:26] <gfldex> "rw pointy block" seams short yet descriptive

[11:32] *** grondilu left
[11:33] <jnthn> That also works

[11:33] <jnthn> Though I tend to think of the pointy block as the whole construct

[11:34] <jnthn> Which, to be fair, is what we normally want to talk about anyway... :)

[11:39] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2020/06/26/we-can-do-more/

[11:47] *** bocaneri left
[11:48] <El_Che> lizmat: agreed, the perl7 transition will be like a porcelain shop. The least useful is that the proverbial elephant enters the roon :)

[11:50] <nige> lizmat, I understand this idea - there are some attractions to have a language-specific site

[11:51] <nige> as the example in the video showed unfortunately raku doesn't appear in the search results at all

[11:51] <nige> having a polyglot site is important for attracting developers from other languages

[11:52] <nige> including Perl ;-)

[11:52] <lizmat> yeah, but that is basically SEO squatting

[11:52] <lizmat> and that's what we've been accused of for many years

[11:53] <nige> squatting has negative connotations - it's simply providing solutions to problems

[11:53] <nige> there is a darwinian effect that will kick in 

[11:54] <El_Che> nige: "look how better the solution is in raku thant in old-school perl"

[11:54] <nige> and one that raku should be confident about - something that is really clear on rosettacode (for example)

[11:54] <lizmat> nige: what El_Che said

[11:54] <nige> sometimes this is going to be true

[11:55] <Altai-man_> El_Che, "look how magnitudes order slow raku solution is compared to old-school perl"

[11:55] <Altai-man_> Though I do agree there should be more Raku-only resources, which improves SEO.

[11:55] <El_Che> Altai-man_: people are nowdays comparing to go, rust and the like. If you're lucky JS

[11:56] <El_Che> so, there is no price in the dynamic languages speed race

[11:56] <Altai-man_> And for "raku in web" there is already https://perl6.github.io/6pad/ which can be improved.

[11:57] <nige> if there is some contention between different solutions - this is not necessarily a problem

[11:58] <nige> it will highlight the situations where one solution is preferred over another for example

[11:58] <nige> - something which helps solve the problem

[11:58] <nige> which ranks better on Google etc

[11:59] *** bocaneri joined
[12:00] <nige> later the site could be split into sub domains: perl7.srcpans.org  - raku.srcpans.org - java.srcpans.org

[12:00] <nige> this is a would-like-to-have-problem .... and far away from the MVP I'm proposing here

[12:01] <lizmat> hmmm.. feels to me you're conflating the rosetta code idea with SEO squatting  :-)

[12:02] *** sena_kun joined
[12:02] *** sena_kun left
[12:02] <cpan-raku> New module released to CPAN! Math::Combinatorics (0.0.1) by 03ELCARO

[12:03] <nige> actually many of the examples of rosettacode don't solve day-to-day programming problems

[12:03] *** vike left
[12:03] *** sena_kun joined
[12:03] <elcaro> * Hooray *

[12:03] <lizmat> elcaro++

[12:03] *** Altai-man_ left
[12:03] <elcaro> haha, remember that Pick and Choose blog "series" i wrote 2 years ago

[12:03] <nige> so I only mention rosettacode to highlight the polyglot nature of what I'm proposing

[12:04] <elcaro> Or maybe it was only a year, I don't remember... feels like forever

[12:04] <elcaro> I realised I don't have time to work on this thing to get it to where I want it, so I may as well release it now

[12:04] <lizmat> elcaro: link ?

[12:04] <elcaro> https://0racle.info/articles/pick_and_choose_part1

[12:05] <sena_kun> elcaro, make sure it reflects new name then. :)

[12:05] <elcaro> I will try to knock out a quick blog post, and maybe it can go in the weekly

[12:05] <elcaro> Yeah, old blog post should be updated to point to my new repo. I figured I'd add the `Math::` prefix for... reasons

[12:06] *** tejr left
[12:07] <elcaro> I was spurred on by the post about Itertools. The multicombinations code they used is subtly wrong

[12:08] <elcaro> doing it correctly with a one liner is difficult, so releasing the module as-is makes it easier for people who want a simple multicombinations function with decent performance

[12:09] <elcaro> lizmat: I think I originally modelled my anonymous Seq's (ie. Seq.new: class :: does Iterator { ... }) on some iterators you were writing in the core

[12:10] <elcaro> but if memory serves, I think you may have mentioned at one stage that doing iterators like this is a little less performant 

[12:10] <elcaro> than....something else, i can't remember

[12:11] <elcaro> like maybe definining a named clas, and calling `new` on it was better than creating an anonymous seq each time. Does that make sense, or am i mis-remembering?

[12:11] <lizmat> using anonymous classes appears to be a performance issue

[12:12] <lizmat> jnthn ^^ is that still the case?

[12:17] <elcaro> I know CPAN is very specific about updates. If I just want to update the readme, does that require a version bump?

[12:17] <jnthn> lizmat: Yes, there's still some lexical capture issues around doing that

[12:17] <jnthn> lizmat: Though that may well get a revisit during my current work

[12:17] <El_Che> elcaro: that sounds like best preactice to me whatever release system you use

[12:18] <lizmat> elcaro: yes, even just a copyright update  

[12:18] <El_Che> 0.1.0 -> 0.1.1 :)

[12:26] <elcaro> cool, yeah I will just bump minor ver

[12:26] <elcaro> Whipping up a blog post first

[12:26] <El_Che> i feels more like a revision

[12:29] <elcaro> erm.. that's what I mean. Don't mind me, I'm not a real developer... I just play one on the Internet :D

[12:34] *** tejr joined
[12:37] *** oddp joined
[12:37] *** nige left
[12:37] *** nige joined
[12:37] <jdv79> ah ha!  steve lembark's mem leaks might be similar to mine.  its not just me.

[12:41] *** colomon_ left
[12:41] *** JJMerelo left
[12:42] *** nige left
[12:42] *** nige joined
[12:47] *** colomon joined
[12:50] *** MorayJ left
[12:51] *** lucasb joined
[12:55] <cpan-raku> New module released to CPAN! Math::Combinatorics (0.0.2) by 03ELCARO

[12:55] <elcaro> short and sweet: https://0racle.info/articles/pick_and_choose_part_n

[13:18] <cpan-raku> New module released to CPAN! Math::Combinatorics (0.0.3) by 03ELCARO

[13:35] *** brtastic joined
[13:38] *** wamba left
[13:39] *** chloekek joined
[13:43] <oddp> Looking good Thanks for sharing!

[14:00] *** vike joined
[14:00] *** Altai-man_ joined
[14:03] *** sena_kun left
[14:04] *** statisfiable6 left
[14:04] *** sarna left
[14:04] *** reportable6 left
[14:06] *** xinming left
[14:06] *** xinming joined
[14:06] *** chloekek left
[14:07] *** statisfiable6 joined
[14:07] *** reportable6 joined
[14:17] *** dataangel left
[14:18] *** orinthe7 joined
[14:20] *** orinthe left
[14:20] *** orinthe7 is now known as orinthe

[14:22] *** nige left
[14:22] *** nige joined
[14:27] *** nige left
[14:27] *** nige joined
[14:44] *** Doc_Holliwood joined
[14:53] *** soursBot joined
[15:12] *** JJMerelo joined
[15:19] *** Doc_Holliwood left
[15:21] *** softmoth joined
[15:31] *** lichtkind_ joined
[15:32] *** lichtkind left
[15:33] *** Cabanossi left
[15:35] *** Cabanossi joined
[15:41] *** dataangel joined
[15:50] <guifa> When I use zef install for one of my modules, it’s installing an older version.  Is there just a lag for it picking up newer versions or is there something I need to do to trigger it catching the newer version?

[15:51] <moritz> was the module uploaded to PAUSE/cpan?

[15:51] <moritz> there's def. a lag there

[15:52] <guifa> moritz:  I’m just using github right now

[15:53] <Altai-man_> guifa, zef update?

[15:55] *** bocaneri left
[15:57] <guifa> Altai-man_++

[15:58] *** dolmen left
[16:01] *** sena_kun joined
[16:03] *** Doc_Holliwood joined
[16:03] *** zacts joined
[16:03] *** bdju left
[16:03] *** Altai-man_ left
[16:04] *** bdju joined
[16:08] *** bocaneri joined
[16:12] <softmoth> stoned75, I've opened an issue for Github misclassifying Perl files as Raku: https://github.com/github/linguist/issues/4902

[16:13] <softmoth> I don't know who here did the original Linguist additions for Raku. It might be good to notify them if they're still active. sena_kun, do you happen to know?

[16:14] <sena_kun> softmoth, no idea, but can't we look up commit logs?

[16:14] <softmoth> Thanks, stoned75++, for spotting it.

[16:14] <softmoth> yes, of course

[16:15] <sena_kun> softmoth, I don't know how lingust structured, if you know where the definitions are, you can just git blame this file and see who added them.

[16:22] <softmoth> I tracked it down: https://github.com/github/linguist/commit/ed3d38cf05d85ffd9b2d7c5109a520226cc47757

[16:23] <softmoth> hoelzro, You may want to know about https://github.com/github/linguist/issues/4902 "Some Perl files are misclassified as Raku" (since you committed the Perl6 heuristic 6 years ago)

[16:31] *** bocaneri left
[16:34] <sena_kun> softmoth, if you have enough time and desire, you can write a patch and PR it.

[16:34] <sena_kun> softmoth, it will resolve the issue faster and linguist folks won't have to think about something which may sound like rather low-priority things to them.

[16:35] *** skids joined
[16:40] <jnthn> vrurg++ # nice talks

[16:42] * [Coke] is sad he's missed all the talks at the conference

[16:43] <vrurg> jnthn: Thanks. Hope it wasn't too boring. :)

[16:44] <jnthn> I wasn't bored :)

[16:44] *** bocaneri joined
[16:44] <jnthn> Though things using cas are quite a nice brain workout on a Friday afternoon :P

[16:46] *** melezhik joined
[16:46] <lizmat> vrurg: I wonder whether switching around the if foo !=== bar { not equal } else { equal } to:

[16:46] <lizmat> if foo === bar { equal } else { notequal }

[16:46] <lizmat> would help

[16:46] <lizmat> !=== is a meta-op, which may imply a difference from just ===

[16:50] *** lepicon41 joined
[16:50] *** lepicon41 left
[16:50] <vrurg> lizmat: I was in such a hurry that it was easier to put !=== in palce than to edit the whole `if`. :)

[16:52] *** soursBot left
[16:53] *** molaf joined
[16:54] <timotimo> comma should have (otherwise get) a "flip if and else branches"

[16:55] <vrurg> timotimo: +++++++ if/unless switch too, perhaps.

[16:56] <timotimo> right, especially since you're not allowed to put an else on an unless

[16:56] <timotimo> or a without

[17:01] *** melezhik left
[17:01] *** sno joined
[17:05] *** dolmen joined
[17:05] *** zacts left
[17:07] <jdv79> be neat if comma wasnt necessary to do all neat things

[17:09] <timotimo> well, i'm biased, as i sometimes get paid to add neat things to comma

[17:09] <lizmat> jdv79: then by all means, take Damian's code and make sure vim can as well  :-)

[17:09] <timotimo> i mean i always get paid when i add neat things to comma

[17:09] <timotimo> alternatively: i only add neat things to comma when i get paid :D

[17:09] <tadzik> Damian not using vim for something is one helluva recommendation

[17:10] * tadzik has yet to watch the talk

[17:10] <jdv79> lizmat: maybe:)

[17:11] <jdv79> requiring a particular ide feels unperlish to me

[17:11] *** rbt left
[17:11] *** rbt joined
[17:11] <jdv79> wonder if damian uses comma outside of his talk...

[17:11] <jnthn> Who is requiring it?

[17:12] <jnthn> I mean, I can write Java in vim too (and have in the past), nobody requires me to use IntelliJ. It just offers some benefits.

[17:12] *** melezhik joined
[17:12] <lizmat> jdv79: during his talk, he says that he's using it for his Raku module programming

[17:13] <tadzik> a LSP server for raku would be sweet

[17:13] <melezhik> .tell JJMerelo I'd like to hear your thoughts on my last update on external dependencies checks, is it what you want?

[17:13] <tellable6> melezhik, I'll pass your message to JJMerelo

[17:13] <jdv79> require is a strong word.  i was referring to the log timeline stuff i guess.

[17:13] <tadzik> but for now the cool stuff is in Comma, and that's cool too :)

[17:13] <jdv79> lizmat: ah.  i only saw part of it 

[17:14] <ShimmerFairy> I poked at comma once, but its highlighting of grammar rules was somehow much worse than emacs', so I quickly stopped poking it.

[17:14] <melezhik> basically I have all minimal toolset to handle native deps from META with Sparrow, 

[17:14] <timotimo> oh, a propos vim: is there something to make wrangling argument lists easier?

[17:14] <melezhik> it works for CentOS right now, it's easy to support other Linuxes too

[17:14] <jnthn> jdv79: The Log::Timeline protocol is open for anybody else to write stuff to work against it.

[17:15] <lizmat> afk for a few hours%

[17:15] <jdv79> i get it.  thats why i said neat;)

[17:15] <jnthn> ShimmerFairy: Interesting, do you remember any specifics?

[17:16] <jdv79> dodging the vim/emacs stuff with comma was a deft move:)

[17:16] <jnthn> ShimmerFairy: Was it "got things wrong" or more a case of not liking the default color schemes?

[17:16] <ShimmerFairy> No, I just remember that the code below a certain point of the Grammar was completely mishighlighted. I can do a quick check again to see if I can find it back.

[17:17] <jnthn> ShimmerFairy: Uff, that sounds like something we'd want to fix, if we didn't get to it already

[17:18] <jdv79> but i am not like most people i guess.  i dont understand why repls and "ide"s exist;)

[17:18] <ShimmerFairy> jdv79: I use emacs but almost none of the features that make it IDE-esque; for that I always tab over to Konsole :P

[17:20] <[Coke]> I am a bad vim user, I'm not even taking advantage of the stuff it *does* do. Still pretending like it's the same editor I learned on https://en.wikipedia.org/wiki/Michigan_Terminal_System

[17:20] <jdv79> haha

[17:21] <ShimmerFairy> Apparently the last version of Comma I touched was 2019.10, so yeah, a few months ago :)

[17:21] <sena_kun> ShimmerFairy, I think jnthn is rather skilled on resolving this type of bugs, so it isn't really an issue anymore once it is reported. ;)

[17:23] <[Coke]> I do like comma and the syntax highlighting though. I use it more than vim to edit Raku.

[17:23] <ShimmerFairy> Apparently Comma doesn't know about $¢, and complains about non-ASCII identifiers (which I personally think is silly considering it's Raku, but I get it)

[17:25] <sena_kun> ShimmerFairy, great thing we fixed this warning in 2020.06 which is released today. :)

[17:26] <ShimmerFairy> that's not a community release, is it?

[17:27] <sena_kun> Nope.

[17:27] <jnthn> Home time o/

[17:28] *** bdju left
[17:29] *** bdju joined
[17:29] <ShimmerFairy> Ooh, also noticed that Comma thinks $a is undeclared in code like   { say $^a * $a }

[17:31] <gfldex> raku: sub s { $^a + $^b }; &s.signature.say

[17:31] <evalable6> gfldex, rakudo-moar f1960baa9: OUTPUT: «($a, $b)␤»

[17:31] <gfldex> this is not in /type/Signature in the docs

[17:32] *** Woodi joined
[17:32] <ShimmerFairy> m: sub s() { $^a + $^b }; say &s.signature

[17:32] <camelia> rakudo-moar f1960baa9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Placeholder variable '$^a' cannot override existing signature␤at <tmp>:1␤------> 3sub7⏏5 s() { $^a + $^b }; say &s.signature␤»

[17:33] <ShimmerFairy> gfldex: that's because leaving out the parens means you're not supplying a signature, so I guess that means it's a free-for-all (IIRC it was meant to support Perl 5 migrators who are really attached to @_)

[17:35] <gfldex> ShimmerFairy: Signature supports introspection. So it has to be documented that you can have a signature, even if that Signature is provided by the compiler.

[17:36] <ShimmerFairy> oh yeah, sure, I'm just explaining why you're allowed to use $^a there

[17:39] *** dolmen left
[17:39] <ShimmerFairy> .tell jnthn I couldn't find a problem in the code I tried with Comma months ago, so either the highlighting was a freak error or has since been fixed (or my code changed the problem area since then).

[17:39] <tellable6> ShimmerFairy, I'll pass your message to jnthn

[17:43] <raku-bridge> <tmtvl> Speaking of Emacs, I should really finish the Texas op -> Unicode converter one of these days...

[17:44] *** Doc_Holliwood left
[17:46] <sena_kun> ShimmerFairy, I just fixed the $^a bug, thanks for your report!

[17:46] *** MilkmanDan joined
[17:47] <ShimmerFairy> no problem!

[17:49] <jdv79> when i have to drop to nano or gedit or whatever cause whatever i realize why i like using vi(m) 99% of the time.

[17:49] *** chloekek joined
[17:58] <timotimo> was there anything for comma list editing?

[18:00] *** Altai-man_ joined
[18:03] *** Cabanossi left
[18:03] *** sena_kun left
[18:04] <timotimo> er, not in comma, in vim i mean

[18:04] *** Sgeo joined
[18:04] <timotimo> lists delimited by commas, and i guess of course also other kinds of stuff for other kinds of lists?

[18:13] *** Cabanossi joined
[18:22] *** MilkmanDan left
[18:30] *** bocaneri left
[18:34] *** melezhik left
[18:40] *** JJMerelo left
[18:40] *** Cabanossi left
[18:56] *** Black_Ribbon joined
[18:58] <timotimo> 3 watching now

[18:58] <timotimo> •Started streaming 64 seconds ago

[18:59] <timotimo> looks like jnthn's talk is in 1.5 hours

[19:03] <jdv79> mark's talking...

[19:04] <jdv79> oh, you're somewhere else

[19:05] <timotimo> aye

[19:05] <timotimo> until just now i didn't realize there were two tracks

[19:07] *** cpan-raku left
[19:13] <SmokeMachine> guifa: do you suggest using Fluent on Exception messages?

[19:14] *** cpan-raku joined
[19:14] *** cpan-raku left
[19:14] *** cpan-raku joined
[19:17] *** ufobat joined
[19:21] *** Xliff joined
[19:22] <Xliff> \o

[19:22] <tellable6> 2020-06-25T14:57:18Z #raku <vrurg> Xliff: no. I'm having a lightning talk soon, will elaborate later.

[19:22] <tellable6> hey Xliff, you have a message: https://gist.github.com/43f3be636ad2ac11ee9eb449093390a5

[19:25] *** molaf left
[19:29] *** ufobat_ joined
[19:32] <El_Che> too busy to follow the raku talks today

[19:32] <El_Che> some pointers?

[19:33] *** ufobat left
[19:36] *** Doc_Holliwood joined
[19:37] <timotimo> (char *)0x7ffff00c5180

[19:40] <jast> thanks to timotimo I have finally achieved enlightenment

[19:40] *** stoned75 left
[19:42] *** MilkmanDan joined
[19:44] <timotimo> (it was a pointer allocated inside MVM_spesh_dump, so it was helpful in my enlightenment at least)

[19:45] <timotimo> nice, the preferred powershell testing framework is called "pester"?

[19:46] *** dolmen joined
[19:48] <softmoth> El_Che, It looks like the conference is available on the yapcna YouTube channel: https://www.youtube.com/yapcna

[19:49] <softmoth> El_Che, And the Raku-specific talks are called out by lizmat++ in RakudoWeekly: https://rakudoweekly.blog/2020/05/18/2020-20-continuously-upgraded/

[19:52] <softmoth> MilkmanDan, your nick brings back some good memories. I haven't thought of that comic in ages. :-)

[19:55] *** rindolf left
[19:56] <softmoth> Does anyone know how to access &*USAGE from another module? I have lib/Rakudoc/CMD.rakudoc that defines proto MAIN() and friends. I can call &*USAGE() from there. But in bin/rakudoc where I use Rakudoc::CMD, &*USAGE is not found, and &*Rakudoc::CMD::USAGE isn't allowed.

[19:58] *** rindolf joined
[20:00] <softmoth> I can organize things another way, but I wanted to put my main documentation Pod in bin/rakudoc, and call both &*USAGE and Pod::To::Text($=pod) in --help there. Anyways, I'm just curious.

[20:01] *** sena_kun joined
[20:01] <timotimo> "how to drive your own usb device" is actually surprisingly relevant at the moment

[20:02] <timotimo> to me personally

[20:03] *** Altai-man_ left
[20:06] *** xinming left
[20:06] *** xinming joined
[20:10] <timotimo> gasp libusb with NativeCall

[20:12] *** melezhik joined
[20:13] *** MasterDuke joined
[20:17] <jdv79> what is happening in the red chan on zoom

[20:18] *** patrickb joined
[20:18] <timotimo> i have no idea, i'm not on zoom

[20:21] <vrurg> jdv79: looks like lightning session preparation.

[20:22] *** zacts joined
[20:23] <timotimo> i think the keynote is up next in ~7 minutes

[20:26] *** rbt left
[20:26] *** melezhik left
[20:26] *** rbt joined
[20:27] <jdv79> oh i see jnthn.  nice.

[20:30] *** colomon left
[20:32] <jdv79> can anyone hear that?

[20:32] <timotimo> oh no, there's no sound?

[20:32] <jdv79> no!

[20:32] <timotimo> i assume jnthn is being made aware of the problem as we speak

[20:33] *** colomon joined
[20:33] <timotimo> cool

[20:33] *** colomon left
[20:39] <lizmat> https://www.youtube.com/watch?v=O-U1lv9SU_w   # has sound for me

[20:40] <timotimo> yeah it got sound and was then restarted from the beginning

[20:41] *** xinming left
[20:41] *** rindolf left
[20:43] *** xinming joined
[20:48] <El_Che> softmoth: thx

[20:49] <leont> Almost forgot about jnthn's talk :-o

[20:50] <El_Che> is it the same (great) talk jnthn gave rencently?

[20:51] <softmoth> El_Che, It's related, but different content.

[20:51] <timotimo> after all there has been a bit of progress on RakuAST since then

[20:52] <El_Che> something to watch then

[20:53] *** sno left
[20:54] *** mowcat joined
[20:56] *** sno joined
[21:05] *** chloekek left
[21:07] *** molaf joined
[21:10] <jdv79> is this new bits?

[21:10] <lizmat> yes

[21:10] <jdv79> cool

[21:17] *** ufobat_ left
[21:20] <leont> It sounds pretty good

[21:21] <softmoth> A very Worthy keynote, jnthn++!

[21:21] <jdv79> very nice!

[21:27] *** MilkmanDan left
[21:29] *** MilkmanDan joined
[21:31] <guifa> SmokeMachine: esp if you figure it’ll be user-facing, I thin it could be useful

[21:31] <guifa> jnthn++

[21:32] *** chloekek joined
[21:32] <timotimo> well done jonathan-sama

[21:32] <timotimo> jonathan-sensei :)

[21:32] <MasterDuke> jnthn++, vrurg++ (all i've watched so far)

[21:32] <lizmat> jnthn++

[21:33] <vrurg> jnthn++ Fan.Tas.Tic.! :)

[21:35] * guifa also thinks he found a weird bug in zef :-(  having to disable tests on one of the tokens so I can up the new module versions to go with the talk

[21:39] <timotimo> i liked the lightning talk about webmention and the "whim" tool

[21:39] <timotimo> needs to be stolen for raku

[21:53] *** dolmen left
[21:54] *** aborazmeh joined
[21:54] *** aborazmeh left
[21:54] *** aborazmeh joined
[21:57] <timotimo> i would find it amusing if there were an additional zoom user called "The Bell" / "The Gong" / a fitting emoji

[22:00] <guifa> timotimo: that should be done for future editions

[22:01] *** Altai-man_ joined
[22:03] *** sena_kun left
[22:09] *** wamba joined
[22:19] *** stux|RC left
[22:22] *** patrickb left
[22:27] *** notandinus left
[22:28] *** team\andinus joined
[22:29] *** team\andinus is now known as notandinus

[22:34] *** zacts left
[22:37] *** lichtkind_ left
[22:39] <softmoth> BTW, the USAGE issue I was having seems to be fixed if I use `put $*USAGE` instead of `&*USAGE`. I'm not sure what I was going off of before, but I think I have it sorted now.

[22:41] *** kiwi_12334455 joined
[22:43] *** wamba left
[22:48] *** aborazmeh left
[22:49] *** chloekek left
[23:04] *** brtastic left
[23:05] *** stux|RC joined
[23:16] *** aborazmeh joined
[23:16] *** aborazmeh left
[23:16] *** aborazmeh joined
[23:27] *** zacts joined
[23:29] *** aborazmeh left
[23:34] *** rage_kage joined
[23:38] *** pecastro left
[23:38] *** finanalyst left
[23:47] *** kensanata left
