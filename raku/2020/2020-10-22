[00:14] *** aborazmeh joined
[00:14] *** aborazmeh left
[00:14] *** aborazmeh joined
[00:17] *** molaf left
[00:18] *** Merfont joined
[00:19] *** Kaeipi left
[00:23] *** gordonfish left
[00:32] *** perryprog left
[00:32] *** perryprog joined
[00:57] *** Chi1thangoo left
[01:04] *** BenGoldberg joined
[01:09] *** mowcat left
[01:11] *** gordonfish joined
[01:18] *** Merfont left
[01:18] *** Merfont joined
[01:27] *** Merfont left
[01:27] *** Merfont joined
[01:50] *** MilkmanDan left
[01:51] *** MilkmanDan joined
[01:53] *** guifa left
[02:10] *** aborazmeh left
[02:15] *** tejr left
[02:16] *** tejr joined
[03:12] *** BenGoldberg left
[03:12] *** Ben_Goldberg joined
[03:12] *** Ben_Goldberg is now known as BenGoldberg

[03:45] *** rifkin joined
[03:46] <rifkin> i installed raku via the new rakubrew - but there is no p6doc. I tried zef install p6doc but i can't find the file p6doc

[03:48] <elcaro> I don't have a good answer, but since it's pretty quiet here... i'll take a shot

[03:48] <elcaro> I seem to recall someone else having issues with installing p6doc via zef recently. I think it required some work

[03:49] <elcaro> for now, probably the quickest way to install it would be to clone the repo

[03:49] <elcaro> then you `cd` into the repo folder and `zef install .`

[03:49] <elcaro> should work... i think

[03:49] <rifkin> https://docs.raku.org/programs/02-reading-docs shows to install rakudoc

[03:49] <rifkin> but there is no match for rakudoc

[03:50] <elcaro> yeah, so i think it broke due to renaming... which is why it's probably easiest to manually install (ie. clone repo, etc)

[03:52] <elcaro> https://github.com/raku/rakudoc

[03:52] <elcaro> here's the new repo... installation instructions are clone the repo and install locally :)

[03:53] <rifkin> i'll try it

[04:07] *** rifkin left
[04:14] *** Merfont left
[04:15] *** Merfont joined
[04:29] *** BenGoldberg left
[04:29] *** Ben_Goldberg joined
[04:29] *** Ben_Goldberg is now known as BenGoldberg

[05:04] *** BenGoldberg left
[05:04] *** Ben_Goldberg joined
[05:04] *** Ben_Goldberg is now known as BenGoldberg

[05:19] *** bocaneri joined
[05:23] *** Util left
[05:23] *** frost-lab joined
[05:27] *** aluaces joined
[05:27] *** BenGoldberg left
[05:28] *** bocaneri left
[05:28] *** bocaneri joined
[05:29] *** bocaneri left
[05:29] *** bocaneri joined
[05:30] *** bocaneri left
[05:30] *** bocaneri joined
[05:31] *** bocaneri left
[05:32] *** bocaneri joined
[05:33] *** bocaneri left
[05:33] *** frost-lab left
[05:35] *** Util joined
[05:38] *** frost-lab joined
[05:54] *** jmerelo joined
[05:54] *** ufobat joined
[06:20] *** bocaneri joined
[06:26] *** wamba joined
[06:27] *** molaf joined
[06:46] *** cpan-raku left
[06:48] *** cpan-raku joined
[06:48] *** cpan-raku left
[06:48] *** cpan-raku joined
[06:49] *** abraxxa left
[06:51] *** abraxxa joined
[07:00] *** bingos_ is now known as bingos

[07:01] *** bingos left
[07:01] *** bingos joined
[07:03] *** bingos is now known as BinGOs

[07:11] *** abraxxa left
[07:12] *** abraxxa joined
[07:18] *** Sgeo left
[07:25] *** MasterDuke joined
[07:31] *** dakkar joined
[07:50] *** moony left
[07:50] *** parabolize left
[07:52] *** parabolize joined
[07:52] *** moony joined
[08:05] *** sena_kun joined
[08:10] *** ensamvarg left
[08:14] *** ensamvarg joined
[08:19] *** BenGoldberg joined
[08:30] *** aborazmeh joined
[08:30] *** aborazmeh left
[08:30] *** aborazmeh joined
[08:39] *** sena_kun left
[08:46] *** domidumont joined
[08:53] *** BenGoldberg left
[08:57] *** wamba left
[09:07] *** wamba joined
[09:24] *** sjm_uk joined
[09:31] *** sena_kun joined
[09:47] *** aborazmeh left
[09:56] *** epony left
[10:03] *** ensamvarg195 joined
[10:10] *** ensamvarg195 left
[10:11] *** ensamvarg195 joined
[10:23] *** andrzejku joined
[10:51] *** Chi1thangoo joined
[10:58] *** epony joined
[11:00] *** __jrjsmrtn__ left
[11:05] *** __jrjsmrtn__ joined
[11:12] *** sena_kun left
[11:12] *** Black_Ribbon left
[11:21] *** kylese joined
[11:28] <kylese> Greetings, I've problems to understand why "the if-clause seems to cause an implicit data type conversion" ... Could some point me in the direction, pls?

[11:28] <moritz> kylese: context?

[11:28] <kylese> Sorry, OUTPUT: ¬´2 :: 3‚ê§True ???‚ê§¬ª

[11:28] <kylese> moritz, ??

[11:29] <moritz> kylese: where did you read that sentence you quoted?

[11:30] <kylese> moritz, I'm not sure what do mean by sentence? (The code is my minimal example.)

[11:30] <kylese> moritz, ... the quotation is my "interpretation"

[11:32] <moritz> kylese: I understand even less now :-(

[11:32] <moritz> let's wait for somebody else to pick up, maybe I'm just dumb right now

[11:32] <kylese> I try to understand why "$^b" is not "3" anymore, in the if-clause "???"

[11:33] <moritz> and where's the code that demonstrates the problem?

[11:34] <kylese> my $block := { my Int $i = $^a; put "$^a :: $^b"; if ($^b > $i) { put "$^b ???"; } }; my $int_2 = 2; my $int_3 = 3; $block($int_2, $int_3);

[11:34] <evalable6> kylese, rakudo-moar b30fa3a71: OUTPUT: ¬´2 :: 3‚ê§True ???‚ê§¬ª

[11:34] <kylese> Sorry, maybe i posted it only to camelia... ?!?

[11:34] <moritz> maybe :D

[11:35] *** rindolf joined
[11:36] <moritz> kylese: ok, I can answer your question :-)

[11:36] <moritz> kylese: if ($^b > $i) { put "$^b ???"; } the block here is a new block

[11:36] <moritz> and $^b is its formal parameter

[11:36] <moritz> so it's the same as if you wrote

[11:37] <moritz> if $^b > $i -> $NEWVAR { put "$NEWVAR ???" }

[11:37] <moritz> if you want to access the outer value of $^b, you can just write $b

[11:37] <moritz> but at this point, it's less confusing if you write your block as

[11:38] <moritz> my $block = -> $a, $b { use $a instead of $^a here }

[11:39] <kylese> moritz, ok. Thank you for that so far. It seems that I have something to read now ... :)

[11:39] <moritz> the feature that `if` makes it value availalbe is useful in such a case:

[11:40] <moritz> m: sub f() { 42 }; if f() -> $x { say "f returned $x" }

[11:40] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´f returned 42‚ê§¬ª

[11:40] <moritz> you don't have to duplicate the f() call

[11:41] <kylese> moritz, ok. That sounds reasonable..

[11:44] *** BenGoldberg joined
[11:56] <lizmat> hmmm.. looks like we lost the module update announcer

[11:56] <lizmat> https://modules.raku.org/dist/Text::MathematicalCase:cpan:ELIZABETH

[11:58] <cpan-raku> New module released to CPAN! Text::MathematicalCase (0.0.1) by 03ELIZABETH

[12:00] <lizmat> Ah, I was merely impatient  :-)

[12:02] *** edk_ is now known as deadk

[12:13] *** Chi1thangoo left
[12:18] *** BenGoldberg left
[12:23] *** andrzejku left
[12:44] <cpan-raku> New module released to CPAN! Text::MathematicalCase (0.0.2) by 03ELIZABETH

[12:57] * [Coke] yawns.

[12:58] <[Coke]> lizmat: seems like a much more useful version of https://github.com/coke/raku-unicode-mangler!

[13:02] <lizmat> but with fewer options

[13:03] <[Coke]> I was only thinking command line usage when I threw mine together.

[13:06] <lizmat> hmmm... looks like my .trans approach doesn't handle accented cases well:

[13:06] <lizmat> $ mc --monospace "p√´rl"

[13:06] <lizmat> ùöô√´ùöõùöï

[13:09] * [Coke] adds a reference to liz's module in his readme.

[13:10] <[Coke]> lizmat: I basically check for combinors in the string, pull them out, do the transform, then put them back.

[13:11] <lizmat> hmmm  I guess I could just NFD the mapper, and only handle codepoints for which there is a translation

[13:11] <lizmat> and than un-NFD the result

[13:13] * lizmat will sleep a night on that

[13:13] <lizmat> in any case, will also put a ref in to App::Unicode::Mangle

[13:14] <[Coke]> if you like. no worries

[13:15] *** jmerelo left
[13:31] *** Chi1thangoo joined
[14:09] <El_Che> Has anyone more info about the work by a student to get raku to deliver binaries? While fatpacker is a godsend (thx mst++), I spent quite sone time getting the perl app deployable right. It's painful compared to projects in other langs

[14:10] <El_Che> I don't know if it was a grant of a Google Summer of Code project

[14:11] <MasterDuke> pamplemousse was the nick i believe

[14:12] <El_Che> googling

[14:18] <El_Che> this seems to work: perl6 -e 'CompUnit::Loader.load-precompilation-file("test.moarvm".IO)'

[14:18] <El_Che> raku --target=mbc --output=test.moarvm  -e 'say 42' ; raku -e 'CompUnit::Loader.load-precompilation-file("test.moarvm".IO)'

[14:18] <El_Che> dunno if it works with bigger programs using libs

[14:18] <El_Che> m: raku --target=mbc --output=test.moarvm  -e 'say 42' ; raku -e 'CompUnit::Loader.load-precompilation-file("test.moarvm".IO)'

[14:18] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3ku --target=mbc --output=test.moarvm  -e7‚èè5 'say 42' ; raku -e 'CompUnit::Loader.lo‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§   ‚Ä¶¬ª

[14:18] *** sena_kun joined
[14:29] *** frost-lab left
[14:32] *** Sgeo joined
[14:44] <timotimo> El_Che: have you looked at my appimage work?

[14:44] <timotimo> that's linux-only of course

[14:48] *** andrzejku joined
[14:58] *** k-man left
[14:59] *** kini left
[15:06] *** k-man joined
[15:08] *** kini joined
[15:09] *** BenGoldberg joined
[15:11] <El_Che> timotimo: It's a different scope (deploying on servers and containers)

[15:14] *** domidumont left
[15:15] <timotimo> ok but what prevents you from just deploying an appimage on a server :D

[15:17] <El_Che> timotimo: fear of being lynched :)

[15:18] <timotimo> if the people in question don't like appimage, maybe run a snapd from an appimage and install the rakudo program through that

[15:19] <El_Che> yes, users loves the umsollicited snap directory in they home :)

[15:23] <timotimo> ok, flatpak then?

[15:23] *** jmerelo joined
[15:25] *** mowcat joined
[15:27] <El_Che> hehe

[15:29] *** skids joined
[15:34] *** patrickb joined
[15:43] *** aborazmeh joined
[15:43] *** aborazmeh left
[15:43] *** aborazmeh joined
[15:43] <patrickb> .

[15:44] *** BenGoldberg left
[15:48] *** ambs left
[15:50] *** aborazmeh left
[15:56] *** Xliff joined
[15:57] <Xliff> timotimo/vrurg - You around?

[15:57] *** aborazmeh joined
[15:57] *** aborazmeh left
[15:57] *** aborazmeh joined
[15:59] <timotimo> one hand on kb, one on cat

[16:00] <rir> I would like to make classes that are final (C++) or concrete (Sather) or non-inheritable (Raku).  Has anyone done this?  For my purposes:  compile time control would be efficient, runtime--adequate.

[16:03] <timotimo> i'm sorry, what is `Sather`?

[16:09] * moritz has no idea how to make a class non-inheritable, nor why you'd need that

[16:10] <rir> A thesis/grad project out of Berkeley, I think.  It was a study in typing by, primarily, Omohundro.

[16:13] <[Coke]> I assume you could muck with the metamodel

[16:14] <Altreus> restricting inheritance defeats OOP, don't do that

[16:14] <rir> moritz: Generally, I think it is reasonable where a class has not been designed with inheritance in mind.  Classes that embody interfaces to non-raku artifacts seem like a case.

[16:14] <[Coke]> and maybe trigger that mucking with an "is final" keyword that gave you a classHOW that disallowed inheritance somehow, but I'm afraid I'm all handwavy on this.

[16:14] <Altreus> Just because you didn't have something in mind doesn't mean people won't find a reason to do it

[16:14] <Altreus> all you prevent is innovation

[16:15] <Altreus> example: this pesky `multi` keyword in raku

[16:15] <[Coke]> if runtime is ok, you could put a validation call in each method in your class that exploded if actual class calling method wasn't expected class.

[16:15] <[Coke]> but you're not going to get speed increases like you might with a 'final' class in Java.

[16:15] <[Coke]> (in fact you're going to be jumping through more hoops to enforce)

[16:16] <Altreus> raku inherits many perl principles, and one of them seems to be not to prevent people doing stuff just because they might hurt themselves

[16:16] <rir> One can also prevent a waste of time, by drawing attention to the fact that a class is tightly focused on an implementation detail.

[16:16] <Altreus> write a comment and move on :)

[16:16] <Altreus> plenty of rope to hang yourself

[16:16] *** aborazmeh left
[16:17] <[Coke]> m: class foo { method x is implementation-detail { say "hello"} }

[16:17] <camelia> rakudo-moar 85847d2f1: ( no output )

[16:17] *** aborazmeh joined
[16:17] *** aborazmeh left
[16:17] *** aborazmeh joined
[16:17] <rir> Hanging yourself is not a great argument.  

[16:17] <[Coke]> m: class foo is implementation-detail { method x { say "hello"} }

[16:18] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§'foo' cannot inherit from 'implementation-detail' because it is unknown.‚ê§at <tmp>:1‚ê§¬ª

[16:18] <[Coke]> (right, is doesn't mean trait there.) - rakudo does have a method level trait to track that one particular type.

[16:18] <[Coke]> so, short version: there isn't a builtin way to do it. You can probably construct one and put it in module space by mucking with metamodel.

[16:20] <lizmat> I guess one could make a "is not-inheritable" Method trait that would wrap the method and check the invocant and die if it is not the class itself

[16:20] <[Coke]> if you're OK with purely advisory but still in code, you could use a Final role.

[16:20] <lizmat> and the meta-model could apply such a trait

[16:22] <[Coke]> how to do :exists in NQP?

[16:22] <lizmat> nqp::existskey ?

[16:32] <rir> Thanks Altreus, Coke, lizmat.  Thanks, all.  I do get Altreus' point but think there are clearly exceptional cases.  As an amateur learning Raku, I'll file Liz's idea away.  I see the beauty of the 

[16:33] <cpan-raku> New module released to CPAN! Text::MathematicalCase (0.0.3) by 03ELIZABETH

[16:34] <lizmat> ^^^ that one also does accents correctly, [Coke]++ for the nudge

[16:35] <rir> ^ Meta-classes coming into the Docs and the invitation that it implies. But it is a big shift from the behaviorally descriptive documentation style.

[16:35] <lizmat> afk for a few hours&

[16:36] <[Coke]> lizmat++

[16:38] <rir> ^ I expect that all my code will be open.

[16:38] *** dakkar left
[16:46] <Xliff> timotimo: If you have some free time, can I borrow some of it?

[16:46] <Xliff> I am experiencing a weird error that, if holds, means a serious bug in rakudo

[16:46] <Xliff> I just want another set of eyes on it before I create an issue. Just in case this bug isn't mine.

[17:21] <jmerelo> Xliff: you've probably seen this, but just in case https://www.flickr.com/photos/atalaya/50509188396

[17:38] *** linkable6 left
[17:38] *** evalable6 left
[17:40] *** linkable6 joined
[17:40] *** evalable6 joined
[17:58] *** approaching236 left
[18:18] *** perryprog left
[18:18] *** perryprog joined
[18:35] *** BenGoldberg joined
[18:39] *** rypervenche left
[18:42] *** rypervenche joined
[18:42] *** jmerelo left
[18:43] *** sena_kun left
[18:43] *** abraxxa left
[18:47] *** BenGoldberg left
[18:47] *** Ben_Goldberg joined
[18:47] *** Ben_Goldberg is now known as BenGoldberg

[18:52] *** wamba left
[19:03] *** BenGoldberg left
[19:03] *** Ben_Goldberg joined
[19:03] *** Ben_Goldberg is now known as BenGoldberg

[19:06] *** go|dfish left
[19:06] *** wamba joined
[19:09] *** go|dfish joined
[19:09] *** BenGoldberg left
[19:12] *** natrys joined
[19:15] <timotimo> Xliff: wanna try now?

[19:34] *** rindolf left
[19:34] *** rindolf joined
[19:44] *** patrickb left
[19:45] *** sjm_uk left
[19:52] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.31.0) by 03MARTIMM

[19:55] *** bug2000 joined
[19:56] <Xliff> timotimo: Sorry. Still busy with work. Will you have time in about 30 minutes or so?

[19:56] <timotimo> may be very distracted, but i'll have a quick look anyway

[19:57] <Xliff> Thanks.

[19:57] <Xliff> jmerelo: Oh wow! Thank you!

[19:57] <tellable6> Xliff, I'll pass your message to jmerelo

[20:02] <Xliff> timotimo: In case you want to get a head start, I'm trying to check out why a role-based attribute doesn't appear to set properly and STAY set.

[20:03] <timotimo> roles aren't closures, maybe that's you rproblem

[20:03] <Xliff> Clone or down load p6-GLib and p6-GIO into the same directory.

[20:04] <Xliff> cd into p6-GIO and then run the following: ./p6gtkexec -e 'use GIO::Roles::GFile; my $iostream; my $t = GIO::File.new_tmp("g_file_writev_XXXXXX", $iostream); say $t; say $iostream'

[20:05] <timotimo> m: sub attribute-with($obj, $num) { role Test { has $.blorp = $num }; $obj does Test }; my $one = attribute-with "Hello", "first"; say $one.blorp; my $two = attribute-with "Goodbye", "second"; say $two.blorp; say $one.blorp

[20:05] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´first‚ê§second‚ê§first‚ê§¬ª

[20:05] <timotimo> that doesn't do it, hold on

[20:05] <timotimo> m: sub attribute-with($obj, $num) { role Test { method blorp { $num } }; $obj does Test }; my $one = attribute-with "Hello", "first"; say $one.blorp; my $two = attribute-with "Goodbye", "second"; say $two.blorp; say $one.blorp

[20:05] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´first‚ê§second‚ê§second‚ê§¬ª

[20:05] <timotimo> there you go

[20:06] <Xliff> I'll be back in another 15 to go over the details.

[20:06] <Xliff> Yes, but that test doesn't have an attriubute, which I understand IS added to the composing class, so would be considered a closure, yes?

[20:08] <timotimo> doesn't have to be an attribute

[20:08] <timotimo> the reason why that worked is - i guess - because the attribute was added and immediately had its default value set

[20:08] <Xliff> Ah. OK. Back in 15.

[20:08] <timotimo> so it couldn't retroactively fail to stay correct

[20:11] <rindolf> Hi all! how can I get ¬´zef install Math::Primesieve¬ª to work on fedora 33 beta or mageia linux 8 x86-64?

[20:12] *** andrzejku left
[20:13] *** aborazmeh left
[20:17] <rindolf> see https://modules.raku.org/dist/Math::Primesieve:cpan:CTILMES

[20:17] <rindolf> +the <title> there is too generic

[20:18] *** kylese left
[20:35] *** cooper joined
[20:37] <Xliff> OK, back.

[20:37] <Xliff> Wow. Took longer than I thought.

[20:38] *** natrys left
[20:56] <Xliff> timotimo: https://gist.github.com/Xliff/44691ee3a0500a8da1e070dcff42970a

[20:59] <timotimo> having trouble getting it to work

[21:01] <timotimo> cmpiling now

[21:04] *** ufobat left
[21:04] <Xliff> OK

[21:14] *** wamba left
[21:17] *** aborazmeh joined
[21:17] *** aborazmeh left
[21:17] *** aborazmeh joined
[21:17] *** guifa joined
[21:17] <guifa> o/

[21:21] *** phogg left
[21:22] <timotimo> FIOS: GIO::Raw::Definitions::GFileIOStream<5407500160>

[21:22] <timotimo> !FIOS: GIO::Raw::Definitions::GFileIOStream<5407500160>

[21:22] <timotimo> GIO::File.new

[21:22] <timotimo> GIO::FileIOStream.new

[21:22] <timotimo> what am i supposed to be seeing?

[21:24] *** phogg joined
[21:24] *** phogg left
[21:24] *** phogg joined
[21:24] *** aluaces left
[21:31] *** skids left
[21:32] *** aborazmeh left
[21:35] <Xliff> timotimo: The object GIO::FileIOStream is a GIO::Stream that does GLib::Roles::Object

[21:35] <Xliff> GLib::Roles::Object puns $!o on any composing class.

[21:36] <Xliff> The only time I've ever had a problem with this patterm is with GIO:;FileIOStram. The punned $!o attribute is not getting set.

[21:36] <Xliff> I'm doing the same thing I'm doing with every other object.

[21:37] <Xliff> I can set $!o in a block, but the moment execution leaves that block $!o goes back to being unset.

[21:39] <timotimo> where's the code i should look at?

[21:39] <timotimo> FileIOStream?

[21:39] <Xliff> Follow GIO::FileIOStream.setGFileIOStream

[21:40] <Xliff> The litmus test is that an instance of GIO::FileIOStream should have a non-nil return value for .GObject

[21:41] <Xliff> .GObject -> GLib::Roles::Object -> GIO::Stream -> GIO::FileIOStream

[21:47] *** mid_home joined
[21:49] *** rindolf left
[21:50] <timotimo> testing an idea that it might have been something very simple

[21:50] <timotimo> but compile times are big :)

[21:50] <timotimo> Stage parse      : 589.211

[21:50] <timotimo> i could skip all of this trouble if i just used the debugger :D

[21:53] <Xliff> I know.

[21:53] <Xliff> The sucky compile times are the one reason I haven't released this, yet.

[21:53] <timotimo> that tool really wants to be sugared up a whole bunch

[21:53] <timotimo> for example, by launching both the program you have and an extra terminal with the debugger in it

[21:53] <Xliff> Which tool?

[21:53] <timotimo> that's already properly connected

[21:54] <Xliff> Hmm....if I knew what was involved, I could be talked into taking a stab at it.

[21:58] <timotimo> oh, just launch perl6/rakudo/raku with --debug-port=$n and launch another terminal with moar-remote localhost $n

[21:58] <timotimo> and usually also --debug-suspend

[21:59] <Xliff> OK. Will look into it.

[22:00] *** BenGoldberg joined
[22:03] *** Kaeipi joined
[22:05] *** skyl4rk left
[22:08] *** Merfont left
[22:11] *** Kaiepi joined
[22:15] *** Kaeipi left
[22:18] *** cpan-raku left
[22:20] *** cpan-raku joined
[22:20] *** cpan-raku left
[22:20] *** cpan-raku joined
[22:34] *** BenGoldberg left
[22:51] *** Doc_Holliwood left
[22:54] <Xliff> Rebooting into Windows.

[22:55] *** Xliff left
[23:03] *** BenGoldberg joined
[23:05] *** abraxxa joined
[23:06] *** abraxxa left
[23:06] *** abraxxa joined
[23:10] *** abraxxa left
[23:11] *** abraxxa joined
[23:12] *** BenGoldberg left
[23:12] *** Ben_Goldberg joined
[23:12] *** Ben_Goldberg is now known as BenGoldberg

[23:15] *** BenGoldberg left
[23:15] *** Ben_Goldberg joined
[23:15] *** Ben_Goldberg is now known as BenGoldberg

[23:28] *** daxim left
[23:29] *** daxim joined
