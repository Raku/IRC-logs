[00:01] <AlexDaniel> oh.

[00:02] <AlexDaniel> wrong channel

[00:04] *** lichtkind left
[00:22] *** abraxxa left
[00:40] *** aborazmeh left
[01:01] *** melezhik joined
[01:02] <melezhik> AlexDaniel: there is link to report, the very first column

[01:02] <tellable6> 2020-04-14T23:57:13Z #raku <AlexDaniel> melezhik2: hmm there's no link to the output, can you make `Result` column clickable too?

[01:03] <AlexDaniel> oh, there is

[01:03] <AlexDaniel> how did I miss that :S

[01:05] <melezhik> NP. based on your comment I will make a result column clickable

[01:05] <melezhik> and a column with module name will make a link to a module source code (raku.modules/github/gitlab)

[01:07] <AlexDaniel> yeah, that's what I expected, I think

[01:10] <melezhik> yeah

[01:12] <melezhik> AlexDaniel: done

[01:23] *** NODE left
[01:25] *** Benett left
[01:25] *** melezhik left
[01:27] *** Benett joined
[01:35] *** molaf left
[01:36] *** softmoth joined
[01:39] *** ofperfection joined
[01:40] *** xinming_ left
[01:40] *** xinming_ joined
[01:47] *** Hexeratops joined
[01:48] *** molaf joined
[01:57] *** xinming_ left
[01:57] *** xinming_ joined
[02:40] *** ofperfection left
[03:01] *** Hexeratops left
[03:21] *** xinming_ left
[03:21] *** xinming_ joined
[03:23] *** cpan-raku left
[03:24] *** cpan-raku joined
[03:24] *** cpan-raku left
[03:24] *** cpan-raku joined
[03:36] *** SQuoll left
[03:39] *** Benett left
[03:44] *** Benett joined
[03:44] *** molaf left
[03:52] *** mowcat left
[04:33] *** Doc_Holliwould joined
[05:00] *** xinming_ left
[05:01] *** xinming_ joined
[05:06] *** sauvin joined
[05:18] *** softmoth left
[05:19] *** softmoth joined
[05:22] *** toddr left
[05:50] *** softmoth left
[05:50] *** softmoth joined
[05:53] *** sjm_uk joined
[06:01] *** reportable6 left
[06:04] *** reportable6 joined
[06:34] *** Doc_Holliwould left
[06:41] *** kensanata joined
[06:41] *** gordonfish left
[07:07] *** softmoth left
[07:19] *** abraxxa joined
[07:24] *** abraxxa left
[07:25] *** abraxxa joined
[07:28] *** Doc_Holliwould joined
[07:31] *** pecastro joined
[07:35] *** dakkar joined
[07:49] *** k-man__ joined
[07:49] *** k-man_ left
[08:14] *** Doc_Holliwould left
[08:26] *** ensamvarg left
[08:26] *** ensamvarg joined
[08:28] *** ensamvarg left
[08:28] *** ensamvarg joined
[08:28] *** ensamvarg left
[08:29] *** ensamvarg joined
[08:37] *** ensamvarg_ joined
[08:38] *** ensamvarg left
[08:39] *** ensamvarg joined
[08:40] *** ensamvarg left
[08:41] *** ensamvarg joined
[08:42] *** sena_kun joined
[08:43] *** ensamvarg_ left
[09:02] *** rindolf joined
[09:45] * lizmat just realized that this is valid code

[09:45] <lizmat> m: my $_-_-_-_-_-_ = "braille"; say $_-_-_-_-_-_

[09:45] <camelia> rakudo-moar 43c7e96f9: OUTPUT: ¬´braille‚ê§¬ª

[09:47] <sena_kun> AlexDaniel, I've patched github::pastebin and will see if that fixes blin image. :)

[10:03] *** cpup left
[10:03] *** cpup joined
[10:04] *** Altai-man_ joined
[10:06] *** sena_kun left
[10:07] *** chloekek joined
[10:10] *** Doc_Holliwould joined
[10:14] *** BR_ joined
[10:14] *** Black_Ribbon left
[10:17] <chloekek> So according to S22 you can put phone numbers in META6.json.

[10:18] <chloekek> Yeah I‚Äôm not going to display those, privacy legislation nightmare.

[10:31] *** oneeggeach joined
[10:33] *** aborazmeh joined
[10:33] *** aborazmeh left
[10:33] *** aborazmeh joined
[10:34] *** oneeggeach left
[10:35] *** _jrjsmrtn left
[10:35] *** __jrjsmrtn__ joined
[10:41] *** MasterDuke left
[10:49] *** BR_ left
[10:49] *** chloekek left
[10:52] <cpan-raku> New module released to CPAN! Gnome::Gdk3 (0.15.5) by 03MARTIMM

[11:04] *** mowcat joined
[11:10] *** stoned75 left
[11:17] *** wamba joined
[11:24] *** aborazmeh left
[11:26] *** colomon_ left
[11:27] *** colomon___ joined
[11:28] *** wamba left
[11:29] *** Redfoxmoon left
[11:31] *** Doc_Holliwould left
[11:31] *** Redfoxmoon joined
[11:39] *** xinming joined
[11:41] *** xinming_ left
[11:46] *** vike left
[11:48] *** vike joined
[11:52] *** caterfxo joined
[11:56] *** molaf joined
[12:00] *** xinming left
[12:00] *** xinming joined
[12:04] *** sena_kun joined
[12:04] *** aborazmeh joined
[12:04] *** aborazmeh left
[12:04] *** aborazmeh joined
[12:06] *** Altai-man_ left
[12:16] *** Ne0S joined
[12:17] *** Ne0S left
[12:24] *** pmurias joined
[12:26] *** Doc_Holliwould joined
[12:37] *** Actualeyes joined
[12:48] *** AlexDaniel left
[12:50] *** pilne left
[12:55] *** pilne joined
[13:04] *** Doc_Holliwould left
[13:06] *** xinming left
[13:07] *** xinming joined
[13:09] <cpan-raku> New module released to CPAN! Gnome::N (0.17.4) by 03MARTIMM

[13:13] *** pilne left
[13:18] *** pilne joined
[13:20] *** aborazmeh left
[13:33] *** pilne left
[13:36] *** pilne joined
[13:56] *** xinming left
[13:58] *** xinming joined
[13:59] *** softmoth joined
[14:04] *** Altai-man_ joined
[14:05] *** gordonfish joined
[14:06] *** pilne left
[14:06] *** sena_kun left
[14:08] *** pilne joined
[14:11] *** mowcat left
[14:14] *** mowcat joined
[14:17] *** rbt left
[14:17] *** rbt joined
[14:18] *** finsternis left
[14:21] *** xinming left
[14:21] *** xinming joined
[14:23] *** pilne left
[14:28] *** pilne joined
[14:31] *** dakkar left
[14:32] *** dakkar joined
[14:44] *** Redfoxmoon left
[14:44] *** Redfoxmoon joined
[14:49] *** wamba joined
[14:51] *** [Sno] left
[14:53] *** [Sno] joined
[15:01] *** mowcat left
[15:02] *** molaf left
[15:06] *** pilne left
[15:09] *** xinming left
[15:09] *** xinming joined
[15:11] *** pilne joined
[15:13] *** toddr joined
[15:13] *** toddr left
[15:15] *** toddr joined
[15:19] *** wamba left
[15:30] *** girafe joined
[15:31] *** girafe2 left
[15:32] *** stoned75 joined
[15:33] *** Doc_Holliwood joined
[15:34] *** xinming left
[15:35] *** xinming joined
[15:35] *** aborazmeh joined
[15:35] *** aborazmeh left
[15:35] *** aborazmeh joined
[15:42] *** chloekek joined
[15:47] *** Kaiepi left
[15:47] *** Kaiepi joined
[16:04] *** xinming left
[16:05] *** sena_kun joined
[16:06] *** xinming joined
[16:06] *** Altai-man_ left
[16:22] *** MasterDuke joined
[16:28] <cpan-raku> New module released to CPAN! Gnome::Gio (0.5.1.1) by 03MARTIMM

[16:31] *** girafe left
[16:34] *** dakkar left
[16:34] *** vrurg left
[16:35] *** vrurg joined
[16:39] *** vrurg_ joined
[16:41] *** vrurg left
[16:46] <chloekek> p6: sub f { UNDO die; }; f

[16:46] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´Died‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:46] <chloekek> Why does this die?

[16:48] <jnthn> 'cus the default return value is Nil, which is considered failure

[16:48] <chloekek> :/

[16:48] <jnthn> (I believe it goes on .defined)

[16:49] <jnthn> That's the seamntics of KEEP/UNDO; they look at the return value, and UNDO additionally fires if there's an exceptional exit too

[16:49] <chloekek> Well that explains why all my transactions got rolled back.

[16:49] <jnthn> If it didn't, it'd be useless with `fail`

[16:50] <chloekek> I‚Äôll file a doc issue.

[16:58] <chloekek> > it'd be useless with `fail` -- or make fail call UNDO

[16:59] <chloekek> Directly, rather than through an awkward definition of "unsuccessful"

[17:01] *** vrurg joined
[17:01] *** vrurg_ left
[17:01] <jnthn> That assumes a bunch of coupling between things that doesn't exist; `fail` is really just `return` plus wrapping in a failure

[17:09] <El_Che> Does anyone know why test_script in appveyor (Windows) does not return output when testing? https://ci.appveyor.com/project/nxadm/supermain/builds/32201691#L70

[17:10] <El_Che> I am trying to write down good windows testing instructions, but my own module is failing :)

[17:10] <El_Che> so far I managed to move the windows setup from building rakudo like all the examples I found to using a precompiled windows rakudo. Way faster

[17:12] *** mowcat joined
[17:12] <El_Che> my tests captures std out and std err and check the values. It works fine on travis (Linux)

[17:12] *** chloekek left
[17:16] <lucs> Given ÔΩ¢my $x = "foo \\s+ bar"ÔΩ£, how do I use it as a regex? ÔΩ¢‚Ä¶ ~~ / $x /ÔΩ£ fails, of course.

[17:17] <lucs> m: my $x = "foo \\s+ bar"; so 'foo bar' ~~ / $x /;

[17:17] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "so " in expression "so 'foo bar' ~~" in sink context (line 1)‚ê§¬ª

[17:17] <lucs> m: my $x = "foo \\s+ bar"; print so 'foo bar' ~~ / $x /;

[17:17] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´False¬ª

[17:18] <El_Che> m: my $x = rx/foo \s+ bar/; say "foo bar" ~~ $x

[17:18] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´ÔΩ¢foo barÔΩ£‚ê§¬ª

[17:18] <El_Che> m: my $x = rx/foo \s+ bar/; say "foobar" ~~ $x

[17:19] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´Nil‚ê§¬ª

[17:19] <jnthn> m: my $x = "foo \\s+ bar"; print so 'foo bar' ~~ / <$x> /;

[17:19] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´True¬ª

[17:20] <lucs> Heh, I thought I had tried that :/

[17:20] <lucs> Thanks jnthn.

[17:20] <lucs> El_Che: Also cool, thanks.

[17:22] <El_Che> lucs: I am pretty fond of rx

[17:22] <lucs> Oh, what I had tried had the literal string in the regex: ... / <"foo \\s+ bar"> /

[17:22] <El_Che> the comparison looks like a smart match

[17:22] <lucs> Can something like that, without an extra variable, work?

[17:23] <El_Che> something we learned to fear in Perl is handy and styleful in raku

[17:23] <El_Che> :)

[17:23] <lucs> raku++ eh :)

[17:25] <lucs> jnthn: Great RakuAST talk by the way. Mostly over my head, but your calm and dedication are very inspiring and confidence inducing.

[17:25] *** sjm_uk left
[17:26] <lucs> Too bad I won't be around for the next 95 years or so...

[17:26] <El_Che> lucs: your code may be

[17:27] <lucs> Um, that's kind of you, but probably not :)

[17:34] *** patrickb joined
[17:34] *** vrurg left
[17:35] *** vrurg joined
[17:43] *** sjm_uk joined
[17:58] *** pilne left
[18:03] *** pilne joined
[18:03] *** Altai-man_ joined
[18:06] *** sena_kun left
[18:08] *** squashable6 left
[18:08] *** squashable6 joined
[18:13] *** xinming left
[18:14] *** xinming joined
[18:14] *** sauvin left
[18:18] *** sjm_uk left
[18:21] <lucs> m: my $s = 'inÔ¨Ånite'; $s .= trans('Ô¨Å' => 'fi'); print $s    # :-(

[18:21] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´infnite¬ª

[18:22] <lucs> Bug or mistake on my part?

[18:24] <[Coke]> lucs: m: my $s = 'inÔ¨Ånite'; say $s.trans('Ô¨Å' => 'fi');

[18:24] <[Coke]> m: my $s = 'inÔ¨Ånite'; say $s.trans('Ô¨Å' => 'fi');

[18:24] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´infnite‚ê§¬ª

[18:26] <[Coke]> (just testing to see if was getting returned there.)

[18:26] *** kensanata left
[18:27] <lucs> m: my $s = 'inÔ¨Ånite'; $s ~~ s/'Ô¨Å'/fi/; print $s  # I guess I'll use this.

[18:27] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´infinite¬ª

[18:28] *** AlexDaniel joined
[18:29] <[Coke]> it's not about the ligature, though:

[18:29] <[Coke]> m: my $s = "infinite"; say $s.trans("fi"=>"EEEEEEEK");

[18:29] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´EnEEnEte‚ê§¬ª

[18:29] <lucs> Yow

[18:29] <[Coke]> m: my $s = "infinite"; say $s.subst("fi"=>"EEEEEEEK");

[18:29] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´Cannot resolve caller match(Str:D: Pair:D, :g(Any)); none of these signatures match:‚ê§    (Str: Cool:D $pattern, |c)‚ê§    (Str: Regex:D $pattern, :continue(:$c)!, *%_)‚ê§    (Str: Regex:D $pattern, :pos(:$p)!, *%_)‚ê§    (Str: Regex:D $pattern, :glo‚Ä¶¬ª

[18:30] <[Coke]> m: my $s = "infinite"; say $s.subst("fi","EEEEEEEK");

[18:30] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´inEEEEEEEKnite‚ê§¬ª

[18:30] <[Coke]> ^^ you want .subst, not .trans

[18:30] *** aborazmeh left
[18:30] <[Coke]> m: my $s = 'inÔ¨Ånite'; say $s.subst('Ô¨Å','fi');

[18:30] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´infinite‚ê§¬ª

[18:30] <lucs> Turns out I had a bunch to do, so trans() would have been neater.

[18:31] <lucs> But that'll do, yep.

[18:32] <[Coke]> I think the doc could be clearer about the length of the source and replacements for .trans

[18:32] <[Coke]> it does say "characters", but that's super clear.

[18:33] <lucs> Oh, I see. Mistake on my part then :)

[18:33] <lucs> Thanks!

[18:34] <[Coke]> er, that's *NOT* super clear.

[18:34] <[Coke]> sorry. :)

[18:34] <lucs> Yes, I caught that :)

[18:35] <[Coke]> whew.

[18:35] *** girafe joined
[18:35] <lucs> :)

[18:36] <lucs> Given something like that, I suppose subst() will be quicker than a regex s/// ?

[18:37] <lucs> (I don't actually really care about quicker here, just curious.)

[18:41] <[Coke]> I would expect subst to be slightly faster, but don't have numbers to back it up

[18:42] <[Coke]> m: my $s = "infinite"; $s.subst('nit','tin') for ^1000 ; say now - INIT now

[18:42] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´0.0085513‚ê§¬ª

[18:42] <[Coke]> m: my $s = "infinite"; $s.subst('nit','tin') for ^100000 ; say now - INIT now

[18:42] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´0.2246079‚ê§¬ª

[18:42] <[Coke]> m: my $s = "infinite"; $s ~~ s/'nit'/'tin'/ for ^100000 ; say now - INIT now

[18:42] <camelia> rakudo-moar 7bbf12d3e: OUTPUT: ¬´0.52795‚ê§¬ª

[18:43] <lucs> Yep

[18:54] <lizmat> weekly: https://www.papercall.io/cfps/3181/submissions/new

[18:54] <notable6> lizmat, Noted! (weekly)

[18:56] *** stoned75 left
[18:57] *** girafe left
[18:59] *** squashable6 left
[19:01] *** squashable6 joined
[19:01] *** xinming left
[19:01] *** stoned75 joined
[19:02] *** xinming joined
[19:03] *** girafe joined
[19:19] *** abraxxa left
[19:21] *** abraxxa joined
[19:45] *** softmoth left
[19:45] *** softmoth joined
[19:47] *** stoned75 left
[19:55] *** samebchase joined
[20:05] *** sena_kun joined
[20:06] *** Altai-man_ left
[20:07] *** m0ltar left
[20:07] *** softmoth left
[20:08] *** softmoth joined
[20:09] *** m0ltar joined
[20:09] *** xinming left
[20:11] *** pmurias left
[20:11] *** rbt left
[20:11] *** rbt joined
[20:11] *** xinming joined
[20:13] *** rindolf left
[20:17] *** xinming left
[20:18] *** xinming joined
[20:33] *** Kaiepi left
[20:36] *** Kaiepi joined
[20:37] *** aborazmeh joined
[20:37] *** aborazmeh left
[20:37] *** aborazmeh joined
[20:51] *** rypervenche left
[20:56] *** Ven`` joined
[20:57] *** Kaiepi left
[20:57] *** Kaiepi joined
[21:00] *** Actualeyes left
[21:05] *** Actualeyes joined
[21:13] *** Altai-man_ joined
[21:15] *** sena_kun left
[21:20] *** patrickb left
[21:29] *** discoD joined
[21:47] <Geth_> ¬¶ doc: kbucheli++ created pull request #3341: how to flatten itemized sublists on an Iterable

[21:47] <Geth_> ¬¶ doc: review: https://github.com/Raku/doc/pull/3341

[21:49] *** farcas1982regreg left
[21:56] *** molaf joined
[22:20] *** Altai-man_ left
[22:23] *** rbt left
[22:23] *** rbt joined
[22:33] *** Kaeipi joined
[22:33] *** Kaiepi left
[22:49] *** Doc_Holliwood left
[22:52] *** Nileee joined
[22:52] <Nileee> hi!

[22:53] *** Nileee left
[22:53] *** cpage joined
[22:53] *** Nileee joined
[22:54] *** Nileee left
[22:56] *** cpage_ left
[23:09] *** softmoth left
[23:10] *** softmoth joined
[23:12] <sacomo> hello

[23:12] *** epony left
[23:12] *** cpan-raku left
[23:13] *** softmoth left
[23:13] *** softmoth joined
[23:15] *** cpan-raku joined
[23:15] *** cpan-raku left
[23:15] *** cpan-raku joined
[23:17] *** girafe left
[23:19] *** softmoth left
[23:20] *** softmoth joined
[23:21] *** epony joined
[23:21] *** epony left
[23:26] *** Black_Ribbon joined
[23:37] *** epony joined
[23:38] *** Ven`` left
[23:40] <timotimo> hi sacomo 

[23:44] *** pecastro left
[23:46] *** MasterDuke left
