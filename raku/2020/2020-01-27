[00:01] *** moritz joined
[00:04] *** pecastro left
[00:14] *** Ven`` joined
[00:17] *** Ven`` left
[00:22] *** lucasb left
[00:23] *** wamba left
[00:24] *** marcusr left
[00:26] *** kst joined
[00:35] *** marcusr joined
[00:44] *** sena_kun left
[00:54] *** cqd left
[00:57] *** titsuki left
[01:00] *** sena_kun joined
[01:01] *** Doc_Holliwood left
[01:04] *** marcusr left
[01:05] *** marcusr joined
[01:08] *** aborazmeh joined
[01:08] *** aborazmeh left
[01:08] *** aborazmeh joined
[01:15] *** mahmudov left
[01:24] <sjn> m: say $*TOLERANCE; say e ** (i * π) - 1 ≅ 0;

[01:24] <camelia> rakudo-moar 05916efa5: OUTPUT: «1e-15␤False␤»

[01:25] <sjn> m: say $*TOLERANCE; say e ** (i * π) - 1; say e ** (i * π) - 1 ≅ 0;

[01:25] <camelia> rakudo-moar 05916efa5: OUTPUT: «1e-15␤-2+1.2246467991473532e-16i␤False␤»

[01:38] *** melezhik joined
[01:47] *** mowcat left
[01:52] *** melezhik left
[02:02] <[Coke]> Does tolerance work on complexes?

[02:28] *** titsuki joined
[02:36] *** Kaeipi left
[02:38] *** Kaeipi joined
[02:43] *** angelds joined
[02:45] *** sena_kun left
[02:53] *** angelds left
[03:00] *** sena_kun joined
[03:04] *** cpan-raku left
[03:08] *** aborazmeh left
[03:09] *** cpan-raku joined
[03:09] *** cpan-raku left
[03:09] *** cpan-raku joined
[03:29] <sjn> [Coke]: nvm, my formula was wrong, it works perfectly fine after correction :)

[03:31] *** Cabanossi joined
[04:21] *** titsuki left
[04:45] *** sena_kun left
[04:55] *** Kaeipi left
[04:56] *** Kaeipi joined
[04:59] *** sena_kun joined
[05:20] *** guifa2 joined
[05:32] *** rindolf joined
[05:44] *** guifa2 left
[05:51] *** xinming left
[05:52] *** xinming joined
[05:59] *** Doc_Holliwood joined
[06:12] *** sno left
[06:20] *** xinming_ joined
[06:23] *** xinming left
[06:45] *** sena_kun left
[06:48] *** Kaiepi joined
[06:48] *** Kaeipi left
[06:50] *** hungrydonkey joined
[06:51] *** kensanata joined
[06:54] <moritz> m: say e ** (i * π) + 1 ≅ 0

[06:54] <camelia> rakudo-moar 05916efa5: OUTPUT: «True␤»

[07:00] *** sena_kun joined
[07:10] *** sno joined
[07:12] *** kensanata left
[07:13] *** kensanata joined
[07:19] *** domidumont joined
[07:21] <jmerelo> moritz: nice

[07:22] <jmerelo> m: say e ** (i * π) + 1

[07:22] <camelia> rakudo-moar 05916efa5: OUTPUT: «0+1.2246467991473532e-16i␤»

[07:24] *** AlexDaniel left
[07:25] *** AlexDaniel joined
[07:25] *** AlexDaniel left
[07:25] *** AlexDaniel joined
[07:34] <stoned75> jmerelo ? hi !

[07:41] <jmerelo> stoned75: hi! About to leave for office...

[07:45] <stoned75> ok no problem. I will catch you later  by email or whatever

[07:46] <stoned75> and so am I (on my way to office) :)

[07:47] *** xinming_ left
[07:47] *** xinming_ joined
[07:49] *** Doc_Holliwood left
[07:55] *** abraxxa joined
[07:55] *** abraxxa left
[07:56] *** abraxxa joined
[07:59] *** Doc_Holliwood joined
[08:05] *** stoned75 left
[08:06] *** domidumont left
[08:07] *** domidumont joined
[08:08] *** NODE left
[08:09] *** NODE joined
[08:15] *** aeruder joined
[08:17] *** stux|RC-- joined
[08:19] *** marcusr left
[08:19] *** webstrand joined
[08:25] *** marcusr joined
[08:36] *** NODE left
[08:37] *** NODE joined
[08:37] *** rindolf left
[08:45] *** sena_kun left
[08:47] *** zakharyas joined
[08:48] *** rindolf joined
[08:48] *** Doc_Holliwood left
[08:57] *** pecastro joined
[08:58] *** dakkar joined
[08:59] *** sena_kun joined
[09:04] *** pecastro left
[09:05] *** abraxxa left
[09:15] *** abraxxa joined
[09:23] *** hungrydonkey left
[09:27] *** zakharyas1 joined
[09:29] *** zakharyas left
[09:33] *** pecastro joined
[09:38] <Geth> ¦ whateverable/Altai-man-patch-1: aed05135dc | Altai-man++ (committed using GitHub Web editor) | lib/Whateverable.pm6

[09:38] <Geth> ¦ whateverable/Altai-man-patch-1: Use modern HLL name

[09:38] <Geth> ¦ whateverable/Altai-man-patch-1: 

[09:38] <Geth> ¦ whateverable/Altai-man-patch-1: Preserving backward compatibility with the old one

[09:38] <Geth> ¦ whateverable/Altai-man-patch-1: review: https://github.com/Raku/whateverable/commit/aed05135dc

[09:39] <Geth> ¦ whateverable: Altai-man++ created pull request #373: Use modern HLL name

[09:39] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/pull/373

[09:41] *** chloekek joined
[09:41] <Geth> ¦ whateverable: aed05135dc | Altai-man++ (committed using GitHub Web editor) | lib/Whateverable.pm6

[09:41] <Geth> ¦ whateverable: Use modern HLL name

[09:41] <Geth> ¦ whateverable: 

[09:41] <Geth> ¦ whateverable: Preserving backward compatibility with the old one

[09:41] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/aed05135dc

[09:41] <Geth> ¦ whateverable: af31cc5129 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | lib/Whateverable.pm6

[09:41] <Geth> ¦ whateverable: Merge pull request #373 from Raku/Altai-man-patch-1

[09:41] <Geth> ¦ whateverable: 

[09:41] <Geth> ¦ whateverable: Use modern HLL name

[09:41] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/af31cc5129

[09:44] *** abraxxa left
[09:45] *** abraxxa joined
[09:47] *** Doc_Holliwood joined
[10:19] *** stux|RC-- left
[10:20] *** stux|RC joined
[10:27] *** Kaiepi left
[10:27] *** Kaiepi joined
[10:31] *** Doc_Holliwood left
[10:35] *** antoniogamiz joined
[10:36] *** mowcat joined
[10:45] *** sena_kun left
[10:58] *** sena_kun joined
[11:05] *** pmurias joined
[11:05] <pmurias> .

[11:09] *** cpan-raku left
[11:13] *** cpan-raku joined
[11:13] *** cpan-raku left
[11:13] *** cpan-raku joined
[11:13] <cpan-raku> New module released to CPAN! EventSource::Server (0.0.5) by 03JSTOWE

[11:19] <sarna> why is mi6 so slow to start? hello world takes 0.2s on my laptop, mi6 --help takes 0.65s

[11:20] *** kensanata left
[11:25] <sarna> I'm browsing the code and it looks like the only thing it's doing is printing the usage... hmm

[11:26] *** Kaiepi left
[11:26] *** Kaiepi joined
[11:26] *** antoniogamiz left
[11:31] *** Kaiepi left
[11:31] *** Kaiepi joined
[11:33] *** reach_satori joined
[11:34] <lizmat> sarna: the first time?  or every time ?

[11:35] <sarna> lizmat: it started getting faster after a couple executions, but still takes 0.45s

[11:35] <sarna> I'm trying to put Trait::Traced on it, without much success (yet!)

[11:35] <lizmat> you could set RAKUD_MODULE_DEBUG=1 and see what it is doing loading modules

[11:36] <sarna> mein gott, it's doing a lot

[11:37] <sarna> :(  looks like it's the module loading

[11:37] <sarna> but that'd mean raku apps would get slower the bigger they get

[11:39] <lizmat> well, more modules means more work: that applies to any language

[11:40] <lizmat> even with compiled libraries, more libraries means more linking / resolving work

[11:40] *** Doc_Holliwood joined
[11:40] <sarna> sure

[11:43] *** aborazmeh joined
[11:43] *** aborazmeh left
[11:43] *** aborazmeh joined
[11:46] <pmurias> how long do TPF votes takes?

[11:51] <lizmat> depends  :-)

[11:51] <lizmat> I guess you should ping [Coke] 

[11:52] *** wamba joined
[12:15] *** kensanata joined
[12:19] *** zakharyas1 left
[12:21] *** wamba left
[12:36] *** lucasb joined
[12:39] *** pmurias left
[12:45] *** sena_kun left
[12:45] *** titsuki joined
[12:47] *** mowcat left
[12:58] *** sena_kun joined
[13:02] *** holyghost left
[13:03] *** chloekek left
[13:24] *** aborazmeh left
[13:41] *** mensvaga joined
[13:42] *** aborazmeh joined
[13:42] *** aborazmeh left
[13:42] *** aborazmeh joined
[14:01] *** molaf joined
[14:13] <[Coke]> there are "standard" TPF grants which I manage, but anything through Hague or one of the directed flows (like perl5 maintenance) go through someone on the board.

[14:13] <[Coke]> (I'm not on the board)

[14:13] <[Coke]> I will ping Makoto and ask.

[14:15] *** aborazmeh left
[14:21] *** epony joined
[14:25] *** zakharyas joined
[14:28] *** epony left
[14:36] *** melezhik joined
[14:41] *** melezhik left
[14:41] *** guifa2 joined
[14:45] *** sena_kun left
[14:49] *** wamba joined
[14:55] <rindolf> Hi all! This - https://paste.debian.net/1127886/ - solution to https://projecteuler.net/problem=686 is very slow in raku

[14:56] *** domm left
[14:58] *** holyghost joined
[14:58] <lizmat> rindolf: if you run this with --profile, are there things that look like they could be improved ?

[15:00] <rindolf> lizmat: let me see

[15:02] *** sena_kun joined
[15:02] <rindolf> lizmat: https://www.shlomifish.org/Files/files/text/profile-1580137290.9650474.html

[15:04] <lizmat> nothing really unsuspected ther

[15:04] <lizmat> you could try using native ints, but I guess that would defeat the purpose, no

[15:04] <lizmat> ?

[15:05] <rindolf> lizmat: no, it should not

[15:06] *** Kaiepi left
[15:07] *** Kaiepi joined
[15:08] <cpan-raku> New module released to CPAN! String::Fields (0.0.5) by 03ELIZABETH

[15:17] *** melezhik joined
[15:17] <rindolf> lizmat: https://paste.debian.net/1127896/ - still too slow

[15:24] *** dansolo42 joined
[15:25] *** guifa2 left
[15:26] *** guifa2 joined
[15:30] <japhb> rindolf: The first if is probably unnecessarily slow.  It should be postfix to avoid the block, it should be comparing to a number (`$mult >= 1_000_000_000_000_000`), and the stringification should be dropped (switching the second if condition to `$mult.starts-with('123')`)

[15:32] *** ryan83 joined
[15:32] <rindolf> japhb: ok

[15:33] <[Coke]> a style comment: loop doesn't need the ;;

[15:34] <ryan83> I seem to have made a change in some module that is causing it to precompile every time. What is the best way to track down what module file and then what code is causing this?

[15:35] <guifa2> lizmat: sorry I couldn't get the CPAN upload done in time for weekly.  Next week I promise!  (i got back late from my trip and CPAN has a few more steps than I was thinking)

[15:35] <japhb> rindolf: I'm also just curious whether uint64 is any different from int, performance-wise.

[15:35] *** Kaiepi left
[15:37] <ryan83> Is there a general rule of what types of statements/expressions cause a module to always precopile?

[15:38] *** Kaiepi joined
[15:40] *** Kaiepi left
[15:43] *** Kaiepi joined
[15:44] *** NODE left
[15:44] <rindolf> japhb: seems that uint64 is better

[15:44] *** NODE joined
[15:45] <[Coke]> I may be missing something, but unless you're updating the file's timestamp, it shouldn't recompile each time you run it.

[15:47] * guifa2 . o O ( maybe there's some weird file/dir permission thing not allowing the precompile to be saved? )

[15:47] *** guifa2 left
[15:48] <[Coke]> How are you tracking that it's precompiling each time?

[15:48] <ryan83> i want to try and prove that... right now I just know the startup time is all of a sudden much longer... similar to the first run after changing code

[15:49] <rindolf> japhb: it still takes over 8 minutes to complete

[15:52] <lizmat> guifa: no worries, there's plenty in this week's WRN

[15:53] <japhb> rindolf: What's par time?

[15:53] <rindolf> japhb: par?

[15:54] <japhb> acceptable.  (As in the phrase "par for the course", referring to expected golf strokes to complete)

[15:55] <japhb> Well, acceptable-standard-expected, all as one idea.

[15:56] <[Coke]> you can check the precomp lib dir and see if the precomp file is getting modified.

[16:00] *** mahmudov joined
[16:01] *** molaf left
[16:04] <rindolf> japhb: p5 runs it in 22s ; pypy3 in 8.8s

[16:06] <rindolf> japhb: hmmm... it takes cpython3 1m26s

[16:08] <ryan83> [Coke]: do you know how to track down anything int the precomp dir... iit is not organized in a human readable way...

[16:08] <lizmat> and another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/01/27/2020-04-almost-springtime/

[16:09] <Guest78373> rindolf: what happens if you change 'my $x = Str($mult);' to 'my $x = ~$mult;' ?

[16:10] *** aborazmeh joined
[16:10] *** aborazmeh left
[16:10] *** aborazmeh joined
[16:12] <[Coke]> ryan83: if I were on linux, I'd do a recursive ls -l and find the latest mtime after each invocation and see if it was getting updated.

[16:12] <rindolf> Guest78373: this is what i have now - https://paste.debian.net/1127905/

[16:13] <[Coke]> Without seeing your code, it may just be that you inadvertently added code that is getting executed legitimately.

[16:14] *** aindilis joined
[16:18] <Guest78373> rindolf: is this correct? Found 678910 => 193060223

[16:18] <rindolf> Guest78373: yes

[16:19] <Guest78373> ok, sec

[16:20] <Guest78373> rindolf: this takes 1m3s on my $work machine, https://gist.github.com/dogbert17/9e039d6af26a09e144f144b4e0aba220

[16:21] *** mowcat joined
[16:22] *** aborazmeh left
[16:24] <rindolf> Guest78373: trying that here

[16:24] <rindolf> Guest78373: thanks

[16:25] <rindolf> Guest78373: 1m4s here - not too bad

[16:25] <rindolf> Guest78373: thanks

[16:27] * japhb is mystified as to why doing `my $x = ~$mult;` is faster than just using the fact that starts-with will coerce a Cool ... maybe because it has to do int -> Int first?

[16:28] <[Coke]> I think you'd still need to go through Int if you call .Str

[16:29] <[Coke]> (anything that resolves to a method call on a native probably has to go to the default Object type for that native before invocation)

[16:30] <japhb> [Coke]: No, I menat Cool coercing probably has to wrap first, but ~ is very low level as I recall, and can use the native stringification.

[16:31] <japhb> Or maybe I'm just remembering NQP too much.

[16:32] *** domidumont left
[16:38] <rindolf> Guest78373: japhb : changing +<= 1 to *= 2 brings it down to 1m1s

[16:42] *** epony joined
[16:43] <japhb> rindolf: I was wondering how much difference that would make.

[16:44] <japhb> So at this point, we're well faster than cpython3.  That's a good start.  Still 1/3 the speed of p5 for this though.  :-(

[16:46] *** sena_kun left
[16:54] *** domidumont joined
[16:55] *** epony left
[16:56] *** kensanata left
[16:58] *** aborazmeh joined
[16:58] *** aborazmeh left
[16:58] *** aborazmeh joined
[16:59] <Geth> ¦ doc: 7ede5a201b | (JJ Merelo)++ | doc/Type/independent-routines.pod6

[16:59] <linkable6> Link: https://docs.raku.org/type/independent-routines

[16:59] <Geth> ¦ doc: Adds new definitions while prepping for #2632

[16:59] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7ede5a201b

[16:59] <Geth> ¦ doc: 7df5a5455b | (JJ Merelo)++ | doc/Type/independent-routines.pod6

[16:59] <Geth> ¦ doc: Adds warnings on bare put and bare put for #2632

[16:59] <linkable6> DOC#2632 [open]: https://github.com/Raku/doc/issues/2632 [Hacktoberfest][RFE][big][docs][good first issue][help wanted][new][⚠ Top Priority ⚠] Checklist for 6.d

[16:59] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7df5a5455b

[17:00] *** sena_kun joined
[17:02] *** zakharyas left
[17:03] *** epony joined
[17:13] *** Kaiepi left
[17:16] *** Kaiepi joined
[17:17] *** epony left
[17:18] *** epony joined
[17:19] *** patrickb joined
[17:23] *** Guest78373 left
[17:24] *** titsuki left
[17:31] *** dakkar left
[17:34] *** Kaiepi left
[17:34] *** Kaiepi joined
[17:36] *** Kaiepi left
[17:37] *** aborazmeh left
[17:46] *** domm joined
[18:02] *** wildtrees joined
[18:18] *** Ven`` joined
[18:23] *** aborazmeh joined
[18:23] *** aborazmeh left
[18:23] *** aborazmeh joined
[18:30] <Geth> ¦ doc: eac1c035da | (Elizabeth Mattijsen)++ | doc/Language/variables.pod6

[18:30] <linkable6> Link: https://docs.raku.org/language/variables

[18:30] <Geth> ¦ doc: Mention $*RAKU

[18:30] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/eac1c035da

[18:30] *** chloekek joined
[18:33] <Geth> ¦ doc: 24708bd039 | (Elizabeth Mattijsen)++ | 2 files

[18:33] <Geth> ¦ doc: Move Perl.pod6 to Raku.pod6

[18:33] <Geth> ¦ doc: 

[18:33] <Geth> ¦ doc: No changes to keep git history

[18:33] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/24708bd039

[18:37] <Geth> ¦ doc: fdc3ec6898 | (Elizabeth Mattijsen)++ | 2 files

[18:37] <Geth> ¦ doc: Complete the Perl -> Raku class rename

[18:37] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/fdc3ec6898

[18:40] *** aborazmeh left
[18:42] *** sgrem joined
[18:42] *** mniip left
[18:46] *** sena_kun left
[18:59] *** ryan83 left
[18:59] *** sena_kun joined
[19:04] *** antoniogamiz joined
[19:06] *** mniip joined
[19:06] *** sno left
[19:09] <sena_kun> releasable6: status

[19:09] <releasable6> sena_kun, Next release will happen when it's ready. There are no known blockers. 0 out of 540 commits logged

[19:09] <releasable6> sena_kun, Details: https://gist.github.com/cb022e15f38526d6a3e8db7518b0ac38

[19:09] <Geth> ¦ doc: 7e63b100ef | (Elizabeth Mattijsen)++ | type-graph.txt

[19:09] <Geth> ¦ doc: Add new Raku class, change Perl dependency

[19:09] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7e63b100ef

[19:11] <antoniogamiz> Raku org has github pages enabled?

[19:14] <AlexDaniel> antoniogamiz: I think it should be enabled for each repo separately?

[19:14] <AlexDaniel> antoniogamiz: which repo do you have in mind?

[19:14] <antoniogamiz> Raku/Documentable

[19:15] <antoniogamiz> because each build generate and push its documentation automatically

[19:15] <jmerelo> antoniogamiz: I think AlexDaniel is right. I guess I can enable it for Raku/Documentable

[19:15] <AlexDaniel> antoniogamiz: “Your GitHub Pages site is currently being built from the gh-pages branch. Learn more.”

[19:16] *** wamba left
[19:16] <jmerelo> Thanks, AlexDaniel 

[19:16] <antoniogamiz> mmm

[19:16] <AlexDaniel> I didn't do anything

[19:16] <antoniogamiz> and what's the url? because https://raku.github.io/Documentable/ is not working

[19:17] <jmerelo> antoniogamiz: still being built

[19:18] <jmerelo> antoniogamiz: maybe try to push again there

[19:18] <antoniogamiz> jmerelo: where did you check that?

[19:18] <jmerelo> Or maybe it takes a good while

[19:18] <jmerelo> antoniogamiz: in settings, same as AlexDaniel 

[19:18] <antoniogamiz> ah, i cannot see settings

[19:19] <AlexDaniel> antoniogamiz: what about now?

[19:20] <antoniogamiz> now i can, thanks :D

[19:21] <cpan-raku> New module released to CPAN! Gnome::N (0.15.4) by 03MARTIMM

[19:24] *** sauvin left
[19:30] *** Jonny44 joined
[19:30] <guifa> lizmat: wow no kidding.  Huge weekly this week

[19:30] <lizmat> :-)  glad you like it

[19:32] *** aborazmeh joined
[19:32] *** aborazmeh left
[19:32] *** aborazmeh joined
[19:37] <cpan-raku> New module released to CPAN! Gnome::Gdk3 (0.15.2) by 03MARTIMM

[19:43] *** Jonny44 left
[19:46] *** stoned75 joined
[19:48] <stoned75> is z-script still current ?

[19:53] <AlexDaniel> stoned75: it should work

[19:53] *** daxim left
[19:54] *** jmerelo left
[19:55] *** Jonny44 joined
[19:56] *** Jonny44 left
[19:59] *** daxim joined
[20:07] *** sgrem left
[20:16] *** pedr0 joined
[20:17] *** sno joined
[20:17] *** aborazmeh left
[20:19] <rypervenche> I don't know if it's already been done, but I sent in a ticket to Github to hopefully get the Raku extensions added to syntax highlighting.

[20:22] <Grinnz> rypervenche: it is pending popularity of the extension use across github, monitored here: https://github.com/github/linguist/issues/4219

[20:22] <pedr0> Hi everybody, I've got a very naive question

[20:23] <pedr0> I am getting stuck when looping through an array of array - the inner array contains (Any) values which seem to cause the for loop to halt as soon as it gets ne

[20:23] <pedr0> *one

[20:23] <rypervenche> Grinnz: Ah, thanks.

[20:24] *** wamba joined
[20:25] *** aluaces left
[20:25] *** AlexDani` joined
[20:25] <pedr0> if I am iteratin an array which contains both array and strings, what is the right for loop to use ? for @array -> $in or for @array -> @in ?

[20:26] <pedr0> does it make any difference ?

[20:26] *** AlexDaniel left
[20:29] <pedr0> In other words  - how would I loop through [ ThisIsAString (Any) [1 2 3] [123]] ?

[20:29] *** AlexDani` is now known as AlexDaniel

[20:29] *** AlexDaniel left
[20:29] *** AlexDaniel joined
[20:32] <El_Che> for @array -> $list

[20:32] <El_Che> I would do that

[20:32] <lizmat> m: my @a = [1,2,3],[4,5,6]; for @a -> @b { for @b -> $c { say $c } }

[20:32] <camelia> rakudo-moar 5d65764a2: OUTPUT: «1␤2␤3␤4␤5␤6␤»

[20:36] <pedr0> yeah but what if in the first level array are mixed arrays and strings ?

[20:37] *** AlexDaniel left
[20:38] *** AlexDaniel joined
[20:38] *** AlexDaniel left
[20:38] *** AlexDaniel joined
[20:39] <lizmat> m: my @a = [1,2,3],42,[4,5,6]; for @a -> @b { for @b -> $c { say $c } }

[20:39] <camelia> rakudo-moar 5d65764a2: OUTPUT: «1␤Type check failed in binding to parameter '@b'; expected Positional but got Int (42)␤  in block <unit> at <tmp> line 1␤␤2␤3␤»

[20:39] <lizmat> m: my @a = [1,2,3],42,[4,5,6]; for @a -> $b { for @$b -> $c { say $c } }

[20:39] <camelia> rakudo-moar 5d65764a2: OUTPUT: «1␤2␤3␤42␤4␤5␤6␤»

[20:39] <lizmat> pedr0 ^^

[20:40] <lizmat> m: my @a = [1,2,3],42,[4,5,6]; for @a -> $b { for $b.list -> $c { say $c } }

[20:40] <camelia> rakudo-moar 5d65764a2: OUTPUT: «1␤2␤3␤42␤4␤5␤6␤»

[20:40] *** rindolf left
[20:40] <lizmat> pedr0: if you don't like the linenoisyness of @$b you can do $b.list

[20:44] *** sena_kun left
[20:44] <pedr0> thanks a lot - any way I can get rid of those "Any" in the array ?

[20:44] <pedr0> It is basically an array where sometimes an index is defied, sometimes not

[20:44] <pedr0> *defined

[20:44] <guifa> (Any) is an undefined value

[20:46] <guifa> That can happen sometimes — if your code ends up producing them, to avoid it when looping there’s two ways

[20:46] <guifa> for @array.grep(*.defined) { … }

[20:46] <guifa> or for @array { next unless .defined } 

[20:46] <pedr0> oh, I did not know any of that

[20:46] <pedr0> let me try

[20:48] <pedr0> can I filter them to remove all this complications ? for instance creating a new array ?

[20:48] <[Coke]> If you have gaps in the Array, do you want something in the slot other than an undefined Any?

[20:48] <pedr0> I suppose I could for @array.grep(.defined) -> $element { myNewArrray.append($element) }

[20:48] <[Coke]> You could change the default value, you could change how you print the Array's contents...

[20:49] <pedr0> I would rather prefer to get rid of them altogheter

[20:49] <[Coke]> if you have gaps and are skipping the gaps... do you need the gaps in the first place?

[20:49] <pedr0> that's not under my control, unfortunately. Fair point though

[20:49] <[Coke]> then yes, your line just above seems reasonable.

[20:50] <[Coke]> pedr0++

[20:50] <guifa> It’s not uncommon to do a for loop on an array with some methods called on it

[20:51] <guifa> for @foo.grep(*.defined).map(*.Str.chomp) { … }

[20:51] <guifa> or some such stuff like that

[20:52] <guifa> But you could also do that when getting the area too

[20:52] <guifa> my @foo = sub-that-gives-a-list-with-undefined-values.grep(*.defined);

[20:53] <guifa> (There’s not really any best way per se — I always go with whatever is most maintainable.  In your case, it sounds like setting the array initially with the filter values might be best and then I’d just add a comment saying “Booooooo this sub returns undefined values in its array that we don’t want, shame on its author”)

[20:57] *** antoniogamiz left
[21:00] *** sena_kun joined
[21:05] *** Kaiepi joined
[21:06] <Kaiepi> .tell jmerelo, saw your message, just trying to think of projects that i would be good for mentoring for and appealing for students. who's the target audience for these grants?

[21:06] <tellable6> Kaiepi, I'll pass your message to jmerelo

[21:07] <guifa> Kaiepi: you talking about the GSoC?

[21:07] <Kaiepi> yeah

[21:07] <tellable6> 2020-01-26T19:33:37Z #raku <jmerelo> Kaiepi can you please submit your ideas through as a PR here? https://github.com/perl-foundation-outreach/gsoc-2020-ideas

[21:07] <guifa> I was thinking about applying for one — I’m *teeeeeechnically* still going to be a student at the date they require

[21:08] <guifa> (My graduation date — assuming I defend on time — is going to be in May)

[21:09] <Kaiepi> ah, so college/university students?

[21:10] <guifa> Yeah

[21:10] <Kaiepi> aight, other thing i'm wondering about is the level of experience with raku needed

[21:11] *** wamba left
[21:11] <Kaiepi> i'm guessing it'd be more for people who either don't know the language or have a small amount of experience

[21:12] *** wamba joined
[21:14] *** pedr0 left
[21:14] <guifa> The idea of GSoC is more that Google pays students to contribute to open source software

[21:15] <guifa> So for instance I might apply with my project being beefing up Raku’s international support (I mean, that’s cheating a bit — I’m already doing it but still, if Google wanted to help foot the bill lol)

[21:16] <Kaiepi> ah

[21:18] <guifa> IIRC samcv did it with Unicode support in MoarVM

[21:26] *** Ven`` left
[21:27] *** daxim left
[21:32] *** domidumont left
[21:32] *** daxim joined
[21:33] *** Kaiepi left
[21:34] *** Kaiepi joined
[21:38] <patrickb> .tell El_Che I managed to set up a build setup that creates stuff for Mac, Win and Linux for the rakubrew thingy using CircleCI. It was a rather pleasant experience. I'd be willing to do the same for rakudo. But I don't want to stomp on the work you already did in that area. What do you think? Would a CircleCI setup be a good way forward?

[21:38] <tellable6> patrickb, I'll pass your message to El_Che

[21:45] *** erdic_ joined
[21:50] *** patrickb left
[22:00] *** erdic_ left
[22:00] *** erdic_ joined
[22:00] *** erdic_ is now known as erdic

[22:15] <thundergnat> .tell rindolf Re: slow project euler 686; try http://rosettacode.org/wiki/First_power_of_2_that_has_leading_decimal_digits_of_12#Perl_6

[22:15] <tellable6> thundergnat, I'll pass your message to rindolf

[22:16] *** wildtrees left
[22:17] *** Kaiepi left
[22:19] *** wamba left
[22:29] *** pmurias joined
[22:29] <pmurias> lizmat: the vote passed :)

[22:30] *** libertas_ left
[22:30] *** libertas left
[22:31] *** ayerhart left
[22:31] *** ayerhart joined
[22:32] *** libertas joined
[22:32] *** libertas_ joined
[22:33] <MasterDuke> pmurias++

[22:46] *** sena_kun left
[23:00] *** sena_kun joined
[23:06] *** Black_Ribbon joined
[23:12] *** chloekek left
[23:16] *** Ven`` joined
[23:31] *** lucasb left
[23:35] *** titsuki joined
[23:44] *** ayerhart left
[23:45] *** ayerhart joined
[23:50] *** mahmudov left
