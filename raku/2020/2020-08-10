[00:03] *** vike joined
[00:14] *** sena_kun joined
[00:16] *** Altai-man left
[00:19] *** oddp left
[00:59] *** bocaneri is now known as Sauvin

[01:00] *** __jrjsmrtn__ joined
[01:02] *** _jrjsmrtn left
[01:11] *** AlexDaniel left
[01:20] *** zacts left
[01:43] *** molaf left
[01:55] *** molaf joined
[01:56] *** aborazmeh joined
[01:56] *** aborazmeh left
[01:56] *** aborazmeh joined
[01:58] *** zacts joined
[02:05] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:14] *** Altai-man joined
[02:16] *** sena_kun left
[02:18] *** zacts left
[02:53] *** guifa2 left
[02:55] *** guifa2 joined
[02:59] *** aborazmeh left
[03:03] *** stu002 left
[03:20] *** ensamvarg3 joined
[03:25] *** zacts joined
[03:25] *** epony left
[03:26] *** zacts left
[03:26] *** epony joined
[03:37] *** stu002 joined
[03:52] *** MasterDuke left
[03:52] *** wamba joined
[04:14] *** sena_kun joined
[04:17] *** Altai-man left
[04:20] <raku-bridge> <stu002> Are there ways to embed mathematical expressions (e.g. LaTeX) inside pod6 text? I can go some way towards this with Unicode math characters, but expressions generally need something richer.

[04:23] *** stu002 left
[04:28] *** Guest2056 is now known as aluaces

[05:27] *** leont joined
[05:44] *** Sgeo left
[06:14] *** Altai-man joined
[06:16] *** sena_kun left
[06:30] *** ab5tract joined
[06:54] *** rindolf joined
[06:59] *** qiqi joined
[07:04] *** qiqi left
[07:30] *** stoned75 joined
[07:33] *** dakkar joined
[07:34] *** JJMerelo joined
[07:43] *** BR_ joined
[07:45] *** Black_Ribbon left
[07:56] *** reach_satori left
[07:56] *** reach_satori joined
[07:57] *** Black_Ribbon joined
[07:59] *** BR_ left
[08:00] *** Doc_Holliwood joined
[08:00] <Doc_Holliwood> m: say ().min

[08:00] <camelia> rakudo-moar 798614cb7: OUTPUT: «Inf␤»

[08:01] <Doc_Holliwood> why the heck is that Infinity?

[08:04] <Doc_Holliwood> just got bitten by it

[08:04] <Doc_Holliwood> m: my @A = (7, 8, 3, 12, 10); 

[08:04] <Doc_Holliwood> say gather for 1 .. +@A-1 -> $i { take @A[ 0..$i-1 ].grep( * < @A[$i] ).min };

[08:04] <camelia> rakudo-moar 798614cb7: ( no output )

[08:04] <Doc_Holliwood> the heck? that says (7 Inf 3 3) on my computer

[08:05] *** oddp joined
[08:07] <Doc_Holliwood> m: my @A = (7, 8, 3, 12, 10); say gather for 1 .. +@A-1 -> $i { take @A[ 0..$i-1 ].grep( * < @A[$i] ).min };

[08:07] <camelia> rakudo-moar 798614cb7: OUTPUT: «(7 Inf 3 3)␤»

[08:08] <Doc_Holliwood> see? I expected Nil there, or something else that's falsy

[08:08] <Doc_Holliwood> but not Inf

[08:09] *** cpan-raku left
[08:14] *** sena_kun joined
[08:16] *** Altai-man left
[08:19] <JJMerelo> m: my @a = 1,2; .say for @a, |@a 

[08:19] <camelia> rakudo-moar 798614cb7: OUTPUT: «[1 2]␤1␤2␤»

[08:19] <JJMerelo> m: my @a = 1,2; .say for $[@a, |@a ]

[08:19] <camelia> rakudo-moar 798614cb7: OUTPUT: «[[1 2] 1 2]␤»

[08:19] *** cpan-raku joined
[08:19] *** cpan-raku left
[08:19] *** cpan-raku joined
[08:32] <JJMerelo> m: my @a = 1; .say for [@a ]

[08:32] <camelia> rakudo-moar 798614cb7: OUTPUT: «1␤»

[08:32] <JJMerelo> m: my @a = 1,2; .say for [@a ]

[08:32] <camelia> rakudo-moar 798614cb7: OUTPUT: «1␤2␤»

[08:32] <JJMerelo> m: my @a = 1,2; .say for [[@a ]]

[08:32] <camelia> rakudo-moar 798614cb7: OUTPUT: «1␤2␤»

[08:35] *** domidumont joined
[08:37] <JJMerelo> m: my @a = 1,2; .say for ([@a])

[08:37] <camelia> rakudo-moar 798614cb7: OUTPUT: «1␤2␤»

[08:37] <JJMerelo> m: my @a = 1,2; .say for ((@a))

[08:37] <camelia> rakudo-moar 798614cb7: OUTPUT: «1␤2␤»

[08:38] <JJMerelo> m: my @a = 1,2; .say for @a, 

[08:38] <camelia> rakudo-moar 798614cb7: OUTPUT: «[1 2]␤»

[08:38] <JJMerelo> m: my @a = 1,2; .say for @a,; 

[08:38] <camelia> rakudo-moar 798614cb7: OUTPUT: «[1 2]␤»

[08:43] <JJMerelo> m: my @a = 1,2; .say for [@a,]; 

[08:43] <camelia> rakudo-moar 798614cb7: OUTPUT: «[1 2]␤»

[08:43] *** rindolf left
[08:44] <JJMerelo> m: my @a = 1,2; .say for [[[@a,]]]; 

[08:44] <camelia> rakudo-moar 798614cb7: OUTPUT: «[1 2]␤»

[08:44] <JJMerelo> m: my @a = 1,2; .say for $[[[@a,]]]; 

[08:44] <camelia> rakudo-moar 798614cb7: OUTPUT: «[[1 2]]␤»

[08:50] <Geth> ¦ doc: 3a7cee5649 | (JJ Merelo)++ | doc/Language/list.pod6

[08:50] <Geth> ¦ doc: Clarifying single argument rule

[08:50] <Geth> ¦ doc: 

[08:50] <Geth> ¦ doc: Deletes a confusing explanation based on iterators refs #3268 and adds an example to clarify also #600

[08:50] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/3a7cee5649

[08:50] <Geth> ¦ doc: df50cbd622 | (JJ Merelo)++ | doc/Language/list.pod6

[08:50] <Geth> ¦ doc: More clarifications and examples for single argument rule

[08:50] <Geth> ¦ doc: 

[08:50] <linkable6> Link: https://docs.raku.org/language/list

[08:50] <Geth> ¦ doc: Hope this finally closes #3268 and closes #600, since it includes links to all relevant documents, and shows exceptions.

[08:50] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/df50cbd622

[08:50] <linkable6> DOC#3268 [closed]: https://github.com/Raku/doc/issues/3268 [RFE][docs] The documentation about the single argument role is confusing

[08:50] <linkable6> DOC#600 [closed]: https://github.com/Raku/doc/issues/600 [docs] Explanation of the "Single Arg Rule"

[08:59] *** MasterDuke joined
[09:01] *** Black_Ribbon left
[09:27] *** JJMerelo left
[09:31] *** domidumont left
[09:35] *** lichtkind joined
[09:46] *** JJMerelo joined
[09:47] *** domidumont joined
[09:52] <ab5tract> .tell JJMerelo post is (finally) scheduled for tomorrow :D

[09:52] <tellable6> ab5tract, I'll pass your message to JJMerelo

[09:52] <ab5tract> .tell JJMerelo can't wait to read what you think!

[09:52] <tellable6> ab5tract, I'll pass your message to JJMerelo

[10:02] *** molaf left
[10:05] *** rindolf joined
[10:07] *** Altai-man joined
[10:07] *** sena_kun left
[10:08] <JJMerelo> ab5tract thanks! Checking it.

[10:08] <tellable6> 2020-08-10T09:52:14Z #raku <ab5tract> JJMerelo post is (finally) scheduled for tomorrow :D

[10:08] <tellable6> 2020-08-10T09:52:32Z #raku <ab5tract> JJMerelo can't wait to read what you think!

[10:11] *** wamba left
[10:38] <codesections> m: run <ls ..>

[10:38] <camelia> rakudo-moar 798614cb7: OUTPUT: «camelia␤geth␤larry␤moritz␤nine␤timo␤zoffix␤»

[10:39] <codesections> m: dd '../camelia'.IO.parent

[10:39] <camelia> rakudo-moar 798614cb7: OUTPUT: «IO::Path.new("../../camelia", :SPEC(IO::Spec::Unix), :CWD("/home/camelia"))␤»

[10:40] <codesections> Isn't ^^^^ a bug?  The parent of `../camelia` should be `..`, right? not `../../camelia`

[10:41] <codesections> Oh, maybe that's what the docs mean by saying «the returned parent is the physical and not the logical parent of symlinked directories».  I'd read that, but didn't realize it applied to `..` 

[10:43] <codesections> m: dd '../camelia'.IO.resolve.parent

[10:43] <camelia> rakudo-moar 798614cb7: OUTPUT: «IO::Path.new("/home", :SPEC(IO::Spec::Unix), :CWD("/"))␤»

[10:43] <codesections> That's better

[10:43] <codesections> nevermind

[10:51] *** molaf joined
[10:55] *** didi joined
[11:07] *** JJMerelo left
[11:15] *** sena_kun joined
[11:16] *** Altai-man left
[11:19] *** TheAthlete joined
[11:36] *** MasterDuke left
[11:40] *** finsternis left
[11:53] *** patrickb joined
[12:01] *** TheAthlete left
[12:04] <guifa> stu002: I don’t think so.  I would honestly personally use a code block, I think, if it got extremely complicated, and make it ASCII art style

[12:12] *** Sgeo joined
[12:12] *** finsternis joined
[12:26] *** domidumont left
[12:31] <lizmat> And another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/08/10/2020-32-survey-please/

[12:34] <codesections> m: class A {has $b}; say A.^methods(:local)

[12:34] <camelia> rakudo-moar a6509a38e: OUTPUT: «(BUILDALL)␤»

[12:35] <lizmat> m: class A {has $.b}; say A.^methods(:local)

[12:35] <camelia> rakudo-moar a6509a38e: OUTPUT: «(b Submethod+{is-hidden-from-backtrace}.new)␤»

[12:36] <lizmat> hmmm... why did BUILDALL disappear here

[12:38] <codesections> I was curious about why BUILDALL appeared at all with a `:local` filter

[12:39] <jnthn> Well, most immediately because one is generated per class

[12:40] <jnthn> I'm suspecting there's an optimized path when there's nothing to build, and it isn't marked with is-hidden-from-backtrace

[12:44] <codesections> Do you think it should be marked with is-hidden-from-backtrace?  Or maybe is-implementation-detail? I'm currently working on a project to scan the docs for methods that show up via introspection but that aren't documented, and that script currently says BUILDALL is missing from 181 types :D  

[12:45] <codesections> (Obviously it's easy to exclude it from the script.  But that got me thinking about whether BUILDALL _is_ a :local method)

[12:50] *** patrickb left
[12:50] *** skids joined
[12:51] <jnthn> I think it should be consistently marked that way

[12:51] <jnthn> m: class A {has $.b}; say A.^methods(:local)>>.name

[12:51] <camelia> rakudo-moar a6509a38e: OUTPUT: «(b BUILDALL)␤»

[12:52] <jnthn> Notice that BUILDALL *is* here, just rendered differently due to the mixin

[12:52] <codesections> Right.  But you're saying that's a bug?  Because it should be consistently marked with is-impelemetation-detail?

[12:53] <codesections> (which I know is new)

[12:53] <jnthn> I'm not saying anything about is-implementation-detail at the moment, just the (rather easier) point about is-hidden-from-backtrace

[12:54] <jnthn> Granted the generated empty method would never show up in a backtrace 'cus it does nothing... :)

[12:54] <codesections> Oh, ok.  I didn't realize that is-hidden-from-backtrace is easier than is-implementation-detail.

[12:55] <codesections> Does is-hidden-from-backtrace keep it out of ^methods(:local) or just from the backtrace

[12:55] <jnthn> Just from the backtrace

[12:57] <codesections> Well, if you think/decide that built-in types should have BUILDALL methods marked with is-implementation-detail, I'd be happy to work on a PR marking them.  I am not to the point where I can substantively hack on Rakudo, but I could add marker traits :) 

[12:57] <jnthn> I'm not immediately sure if it's in the spirit of `is implementation-detail`, but it feels rightish

[13:14] *** Altai-man joined
[13:16] *** domidumont joined
[13:17] *** sena_kun left
[13:26] *** lucasb joined
[13:29] *** molaf left
[13:31] <guifa> lizmat++ 

[13:42] *** domidumont left
[13:51] *** rindolf left
[13:56] *** rindolf joined
[13:56] *** domidumont joined
[13:58] *** aborazmeh joined
[13:58] *** aborazmeh left
[13:58] *** aborazmeh joined
[14:08] *** bumblee_ joined
[14:18] *** bumblee_ left
[14:19] <oddp> Oh yeah, it's weekly time! Thanks again!

[14:20] *** gnufr33dom joined
[14:23] *** gnufr33dom left
[14:25] *** stoned75 left
[14:27] *** stoned75 joined
[14:28] *** khoguan joined
[14:30] *** gnufr33dom joined
[14:31] <khoguan> I tried to install p6doc by `zef --force-test install p6doc`. At the end, it said, ===> Installing: p6doc:ver<1.006.d>:auth<perl6>4 bin/ scripts [lwp-get.p6 lwp-download.p6 pod2onepage Extractor.raku] installed to:/usr/local/Cellar/rakudo/2020.07/share/perl6/site/bin

[14:32] <khoguan> why is there no p6doc in the rakudo/2020.07/share/perl6/site/bin?

[14:36] *** aborazmeh left
[14:37] *** molaf joined
[14:50] <jdv79> the docs have BUILD-ALL.  weird.

[14:50] *** didi left
[15:04] *** gnufr33dom left
[15:05] *** orinthe left
[15:05] *** orinthe joined
[15:13] *** MilkmanDan left
[15:14] *** sena_kun joined
[15:17] *** Altai-man left
[15:20] *** rockxloose left
[15:22] *** zacts joined
[15:22] *** rockxloose joined
[15:24] *** zacts left
[15:25] *** zacts joined
[15:31] *** JJMerelo joined
[15:32] *** MilkmanDan joined
[15:48] *** domidumont left
[15:49] *** domidumont joined
[15:55] *** kensanata joined
[15:57] *** demostanis joined
[16:03] *** rir joined
[16:07] <rir> Hello Rakuelists.   Question X:  Can I get a memory-locationish of a Int?  Y-ed:  How to explain immutability to a beginnerish?

[16:09] <rir> ^ How to demonstrate.

[16:10] <rypervenche> rir: Hi there. Someone will answer you soonish. :) It might be a little bit, depending on how busy everyone is.

[16:11] *** khoguan left
[16:11] <timotimo> rakudo has .WHERE which will do that, though memory location of objects will change in moarvm, because it has a generational semispace-copying nursery-and-old-gen GC

[16:11] <timotimo> there is a cache for small integers, too, which can confuse things a little

[16:12] <rypervenche> m: say 5.WHERE;

[16:12] <camelia> rakudo-moar a84952fb1: OUTPUT: «140711122320384␤»

[16:12] *** khoguan joined
[16:13] <rockxloose> m: say 666.WHY;

[16:13] *** khoguan left
[16:13] <camelia> rakudo-moar a84952fb1: OUTPUT: «No documentation available for type 'Int'.  Perhaps it can be found at␤https://docs.raku.org/type/Int␤»

[16:18] *** JJMerelo left
[16:19] <demostanis> Is the right way to find a value from multiple keys in a hash is by doing: for %hash { if $_ eq 'hello'|'world" { say $_ } }; Or is there a shorter way? I feel like Raku has many features but I'm missing some.

[16:19] <tellable6> 2020-08-09T17:21:56Z #raku <melezhik> demostanis: "sparrowfile ...  isn't being fetched from an untrusted somewhere else" - correct 

[16:19] <timotimo> "a" value from multiple keys?

[16:20] <timotimo> you want to find keys at which the hash has the desired value?

[16:21] <timotimo> m: my %foo = <one bloop two bleep three hello four noway five yesway six world seven hello>; .keys.say for %foo.grep(*.value eq 'hello' | 'world')

[16:21] <camelia> rakudo-moar a84952fb1: OUTPUT: «(six)␤(three)␤(seven)␤»

[16:21] <timotimo> m: my %foo = <one bloop two bleep three hello four noway five yesway six world seven hello>; .key.say for %foo.grep(*.value eq 'hello' | 'world')

[16:21] <camelia> rakudo-moar a84952fb1: OUTPUT: «seven␤six␤three␤»

[16:21] <rypervenche> rir: As for immutability, it basically means that "it can't be changed/updated". A simple example would be with a list (immutable) and an array (mutable)

[16:21] <demostanis> Yep, 'a', I forgot to add a 'last'

[16:21] <demostanis> I only want one value

[16:21] <timotimo> ah

[16:21] <demostanis> Thanks, that's what I was looking for

[16:21] <timotimo> m: my %foo = <one bloop two bleep three hello four noway five yesway six world seven hello>; .say for %foo.first(*.value eq 'hello' | 'world')

[16:21] <camelia> rakudo-moar a84952fb1: OUTPUT: «seven => hello␤»

[16:22] <demostanis> Does the Whatever operator creates a subroutine?

[16:22] <timotimo> basically, yeah

[16:22] <rir> @timotimo: If nothing is happening in a REPL, I would think the mem-object would not move. ??  And though the concept is apt for constants, I think the key to understanding is more with vars and mem-locations, containers, identifiers, boxing, and the thing/value itself.  (I'm getting 'boxing' for Sather, IIRC.)   

[16:22] <rypervenche> m: my @list := (1,2); say @list.WHAT; @list[0] = 10;

[16:22] <camelia> rakudo-moar a84952fb1: OUTPUT: «(List)␤Cannot modify an immutable List ((1 2))␤  in block <unit> at <tmp> line 1␤␤»

[16:22] <rypervenche> m: my @array = (1,2); say @array.WHAT; @array[0] = 10;

[16:22] <camelia> rakudo-moar a84952fb1: OUTPUT: «(Array)␤»

[16:24] <timotimo> rir: i'm not sure i understand; if your program is doing absolutely nothing, things shouldn't move

[16:24] *** dyske joined
[16:24] *** dyske left
[16:24] <demostanis> WhateverCode is Code is Callable {}

[16:25] *** dyske joined
[16:25] *** dyske left
[16:26] *** MilkmanDan left
[16:26] *** JJMerelo joined
[16:30] <rir> timotimo:  I'm new enough with Raku, that I wanted to be sure before I demostrate; my kid is reading a python book that basicly says "This is an immutable, which means it can't be changed.  This is how you change this ...".  He is confused, I just wanted to be doubly sure.  Thanks. rypervenche, thanks.

[16:31] *** cpan-raku left
[16:35] * guifa loves it when peopel write standards documents and hand wave how stuff should be calculated

[16:36] <guifa> GMT time formatting is given by a time pattern, but then in their examples, the time pattern is shortened as if by magic

[16:36] *** dakkar left
[16:42] *** cpan-raku joined
[16:42] *** cpan-raku left
[16:42] *** cpan-raku joined
[16:46] *** JJMerelo left
[16:58] *** ldv87 joined
[16:58] <ldv87> Hi !!!! 

[16:59] <ldv87> someone knows how to do a basic auth with the package WWW

[16:59] <ldv87> ??

[16:59] <ldv87> i want to use the option that i use on the linux terminal 

[17:00] <ldv87> curl -u $apikey: www.something.com

[17:00] *** MasterDuke joined
[17:01] <rypervenche> You might want to look into HTTP::UserAgent.

[17:02] <ldv87> Hi rypervenche!!! 

[17:02] <ldv87> i see already but i don't understand how what i need of it lol

[17:03] <ldv87> for the page that i want to use 

[17:04] <ldv87> dont have a user and password, only a single key 

[17:05] <ldv87> my command is very simple 

[17:05] <ldv87> curl -u $apikey: https://api.planet.com/data/v1/item-types/PSScene4Band/items/20171221_173008_0f4a

[17:05] <ldv87> where apykey has to be replaced with a string 

[17:11] <demostanis> HTTP auth works with headers. So you simply need to specify 'Authorization' header. It can easily be done with WWW,

[17:12] <demostanis> say get "https://api.planet.com/...", Authorization => $api-key

[17:13] <demostanis> ldv87: ^

[17:13] <ldv87> :O

[17:13] *** zacts left
[17:14] *** Altai-man joined
[17:17] *** sena_kun left
[17:22] <demostanis> weekly

[17:22] <demostanis> What bot manages it?

[17:24] <timotimo> "notable"

[17:24] <demostanis> Thanks

[17:25] *** zacts joined
[17:25] <demostanis> Sadly HubToDate isn't in Rakudo Weekly :(

[17:27] <timotimo> lizmat mentioned it isn't in the ecosystem

[17:28] <timotimo> did you add it to the meta list on the ecosystem repo, or upload it to cpan?

[17:29] *** lichtkind left
[17:31] *** Kaiepi left
[17:31] *** Kaiepi joined
[17:33] <demostanis> Not yet, but I think I'm gonna try to do it today. How do I specify in the META.json a list of commands to execute to properly install HubToDate?

[17:34] *** oddp left
[17:35] *** MilkmanDan joined
[17:36] *** zacts left
[17:36] <demostanis> Also, when did lizmat mentioned it isn't in the ecosystem? I don't see anything in IRC logs

[17:40] <demostanis> Oh ok, in #raku-dev...

[17:46] <lizmat> demostanis: if it's not in the ecosystem, it is invisible

[17:46] <lizmat> will mention it next week when it is!

[17:46] <demostanis> Ok, thanks, but for HubToDate to install properly, it needs to run scripts as root

[17:47] <demostanis> to copy rules into /usr/share/hubtodate/rules, set permissions, create configuration files...

[17:47] *** oddp joined
[17:47] <demostanis> Is there a way to specify that in the META6.json>

[17:47] <demostanis> ?

[17:47] *** ensamvarg3 left
[17:51] <demostanis> lizmat: ^ ?

[17:56] <rypervenche> Are there plans to change the META6.json filename?

[17:56] *** john_parr_ joined
[17:56] <codesections> There's something with containerization that I'm still not quite getting my head around.  

[17:56] <codesections> Why does the first list below flatten, but the second doesn't?

[17:56] <codesections> m:  my @a = [1, 2, 3]; my @b = [4, 5, 6]; (@a, @b).flat

[17:56] <camelia> rakudo-moar a84952fb1: ( no output )

[17:56] <codesections> er

[17:57] <codesections> m:  say my @a = [1, 2, 3]; my @b = [4, 5, 6]; (@a, @b).flat # first

[17:57] <camelia> rakudo-moar a84952fb1: OUTPUT: «[1 2 3]␤»

[17:57] <codesections> m: say my %h = a => [1, 2, 3], b => [4, 5, 6]; %h.values.flat; #second

[17:57] <camelia> rakudo-moar a84952fb1: OUTPUT: «{a => [1 2 3], b => [4 5 6]}␤»

[17:58] <codesections> err, say in the wrong place.grr

[17:58] <codesections> m: my %h = a => [1, 2, 3], b => [4, 5, 6]; say %h.values.flat; #second

[17:58] <camelia> rakudo-moar a84952fb1: OUTPUT: «([1 2 3] [4 5 6])␤»

[18:02] *** ldv87 left
[18:11] *** john_parr_ left
[18:12] <CIAvash> m: my @a = [1, 2, 3]; my @b = [4, 5, 6]; say [@a, @b].flat # the difference, I think

[18:12] <camelia> rakudo-moar a84952fb1: OUTPUT: «([1 2 3] [4 5 6])␤»

[18:16] *** Black_Ribbon joined
[18:17] <codesections> Hmm, but `[@a, @b]` creates an Array of Arrays.  `%h.values` creates a Seq of Arrays.  

[18:17] <codesections> m: my @a = [1, 2, 3]; my @b = [4, 5, 6]; say Seq(@a, @b).flat

[18:17] <camelia> rakudo-moar a84952fb1: OUTPUT: «(1 2 3 4 5 6)␤»

[18:18] <CIAvash> m: my @a = [1, 2, 3]; my @b = [4, 5, 6]; say [@a, @b].Seq.flat

[18:18] <camelia> rakudo-moar a84952fb1: OUTPUT: «([1 2 3] [4 5 6])␤»

[18:18] <CIAvash> probably it depends on how the seq is created

[18:19] *** sjm_uk joined
[18:19] <CIAvash> m: my @a = [1, 2, 3]; my @b = [4, 5, 6]; say (@a.item, @b.item).flat

[18:19] <camelia> rakudo-moar a84952fb1: OUTPUT: «([1 2 3] [4 5 6])␤»

[18:25] <demostanis> lizmat: I'm not sure that HubToDate would fit in the p6c ecosystem, it isn't a module meant to be used in one's code, but more like a program for anyone to use, even people without much experience with Raku. It would however fit well in Rakudo Weekly as it's written in Raku.

[18:25] <El_Che> I don't think there is something wrong with offering apps through p6p

[18:26] <El_Che> META6.json knows how t handle script files

[18:27] *** Sauvin left
[18:27] *** vrurg_ is now known as vrurg

[18:28] <demostanis> How do I handle script files in META6.json? And how can I tell it must be installed as root?

[18:28] <El_Che> root you can't control

[18:28] <demostanis> It won't work without root

[18:29] <El_Che> and with sudo?

[18:30] <demostanis> Yeah, sudo is to get root. What if the user uses doas?

[18:30] <demostanis> I can have in my script something checking if uid is 0. But zef would already have downloaded files.

[18:31] <El_Che> there a several ways to run as run, so just install it, and document it needs root rights

[18:31] <El_Che> (and leave to the the user)

[18:31] <El_Che> (and exit with a clear message if you encounter ownership problems)

[18:32] <jdv79> why would META6.json change?

[18:32] <El_Che> add your script in a bin/ directory

[18:32] <demostanis> How do I handle scripts anyway?

[18:32] <El_Che> https://docs.raku.org/language/modules#Basic_structure

[18:33] <El_Che> put them in bin in your tree

[18:33] *** sjm_uk left
[18:33] <demostanis> It's not a module, it's a shell script

[18:33] <El_Che> and I guess you could use "provides"

[18:36] <El_Che> is there should be some examples in the ecosystem

[18:36] <demostanis> It requires to run a shell script as root to create folders and copy default rules. It has a Raku script in bin/ folder to run the CLI

[18:36] <jdv79> probably resources would be teh place to put non-raku files

[18:37] <El_Che> https://modules.raku.org/dist/Bailador:cpan:UFOBAT/META6.json#L88

[18:37] <El_Che> resources there

[18:38] <El_Che> Provides here: https://github.com/jnthn/p6-app-installermaker-wix/blob/master/META6.json#L13

[18:40] <demostanis> Oh ok, thanks.. But Zef won't execute the shell script in 'resources'?

[18:40] <El_Che> execute?

[18:40] <demostanis> It needs to execute a shell script

[18:40] <El_Che> at install time?

[18:41] <demostanis> Yes

[18:41] <jdv79> its not like rpm or apt or whatever - zef operates without system privs

[18:41] <El_Che> https://docs.raku.org/language/modules#Preparing_the_module

[18:41] <El_Che> have a look at "If your module requires extra processing"

[18:42] <El_Che> however, if your app does weird stuff at install time it will get banned by everyone with some security sense

[18:42] <demostanis> jdv79: I know, I was recommended to put it in the ecosystem, knowing it may not work

[18:42] <demostanis> It just copies files without overwritting

[18:43] <El_Che> to system locations?

[18:44] <El_Che> if that's the plan: don't

[18:44] <demostanis> So I don't put it in the ecosystem??

[18:44] <El_Che> if it just needs a location, it can be copied to ~/.raku

[18:44] <El_Che> if you copy to system locations, don't release it until you fix it

[18:45] <demostanis> It musn't be placed to user directory

[18:45] <El_Che> claim a directory in /opt or /usr/local if you want a global install

[18:45] <El_Che> but don't touch system dirs

[18:47] <jdv79> why not a user dir?

[18:47] <demostanis> It will install software as root, using user-provided commands. If anyone but root can write to files (thus changing the commands which will be ran), that's a security issue

[18:47] <jdv79> now i'm curious what this "thing" is

[18:48] <demostanis> https://github.com/demostanis/hubtodate

[18:49] <El_Che> so, the user can't change files he himself installed

[18:49] <El_Che> I don't see much the security problem there, unless it's no a user run service/program but a system one

[18:50] <El_Che> in that case deb/rpm/docker would be a better fit

[18:50] <El_Che> e.g. if I want to run hubtodate on my laptop as the only user (with the files in my home), what is the risk there

[18:51] <jdv79> just skimming it - there is nothing that requires root per se.  many frameworks/apps/tools have multiple locations that can be used for fs/config stuff

[18:51] <El_Che> what bit needs root?

[18:52] <lizmat> demostanis:  App::Mi6 is an app with similar characteristics, and it lives in the ecosystem?

[18:52] <lizmat> afk again&

[18:53] <El_Che> my 2c: whatever your app does, if it doesn't really needs root for a very valid reason, people won't even try the app

[18:53] <El_Che> I know I wouldn't

[18:54] <demostanis> El_Che: What you're telling is as if /etc/apt/sources.list could be placed in user directory

[18:55] <El_Che> I am telling you that there is no way I would let an app touch apt config

[18:55] <demostanis> My app doesn't touch apt config

[18:55] <El_Che>  /etc/apt/sources.list ?

[18:56] <demostanis> and apps can't touch apt config because it's root-owned

[18:56] <demostanis> Same for HubToDate

[18:56] <El_Che> you don't want to write to /etc/apt/sources.list, just read it?

[18:56] <El_Che> by default is 664, so world readable

[18:57] <jdv79> you don't need root during install but you could require it at runtime so you can call apt/rpm/etc...

[18:57] <demostanis> No that was a comparison...

[18:57] <demostanis> My app doesn't call apt

[18:57] <jdv79> dpkg, whatever

[18:57] <El_Che> ok, not being difficult, just missing the root part

[18:58] <demostanis> Using dpkg depends on the user

[18:58] <El_Che> ok, you use dpkg

[18:58] <jdv79> https://github.com/demostanis/hubtodate/blob/master/hubtodate/rules/bat.example#L23 for instance is about runtime, not installation of hubtodate

[18:58] <El_Che> what jdv79 says

[18:58] <jdv79> you could jsut install it and it'll be painfully clear, if your error handling is good, what happened:)

[18:59] <El_Che> or use sudo as a failback

[18:59] <El_Che> (and be clear why you're asking)

[18:59] *** thundergnat joined
[18:59] <rypervenche> jdv79: What the "why would META6.json change" to me? If so, I was just curious if there were plans on removing the 6 from it or if that would just be one of those historical things that stays around.

[19:00] <thundergnat> m: my %h = a => [1, 2, 3], b => [4, 5, 6]; say %h<a b>».Slip.flat;

[19:00] <camelia> rakudo-moar a84952fb1: OUTPUT: «(1 2 3 4 5 6)␤»

[19:00] <[Coke]> I would expect that we eventually allow META.json but I think there's no rush

[19:00] <tellable6> 2020-08-05T10:23:48Z #raku <tbrowder> Thundergnat thanks for auto-abbreviate on rosettacode.org

[19:00] <jdv79> but point is - install of hubtodate itself requiring root and poking about the fs like root just for it's own needs seems like a bad idea

[19:00] <[Coke]> anyone report any issues on rakudo.org website lately?

[19:00] <jdv79> raku is still v6 is it not?

[19:01] *** domidumont left
[19:01] <thundergnat> .tell tbrowder Glad Rosettacode was useful for you. There's a lot of interesting code on there (and some not so good too... )

[19:01] <tellable6> thundergnat, I'll pass your message to tbrowder

[19:01] <demostanis> HubToDate has its rules folder root-owned and with mode 600 so that a malware can't change them and replace 'install = ...' in rules by a malware which will then execute as root

[19:02] *** thundergnat left
[19:02] <jdv79> sounds like the sec is a bit too wide there

[19:02] <[Coke]> jdv79: right, but I wouldn't expect us to change the number in the META file going forward (it was "as opposed to 5"), so we don't need to track 7,8,9, etc. and I think it makes sense to eliminate the # if we're not trying to say "not 5" 

[19:03] <demostanis> Also it needs to be run as root because it may be run inside a crontab, where user can't be prompted for his password

[19:03] <jdv79> idk, like El_Che said, if a raku module asked me for root to install it - eh, i'd likely not

[19:03] <demostanis> Ok so I put it to the ecosystem then?

[19:04] <jdv79> [Coke]: i guess...  iirc it was partly to differentiate it from the perl META.json file

[19:05] <jdv79> at least at pause i believe

[19:05] <El_Che> demostanis: personally I would keep your code base simple, add a good readme and provide a dockerfile of how you think the app/service should be run

[19:05] <jdv79> yup

[19:06] <demostanis> There's a Dockerfile already

[19:06] <demostanis> and the README is good

[19:06] <demostanis> and the Dockerfile runs as ROOT

[19:06] *** fridim left
[19:07] <El_Che> demostanis: I use podman, so they don't run as root on my laptop

[19:07] <El_Che> the app *thinks* it runs as root though

[19:07] <jdv79> i guess its kinda like the Perl6 -> Raku, we could do it but its not like the old will ever be deprecated.  maybe...

[19:07] <jdv79> wrt to the subdir at cpan i was referring

[19:07] <El_Che> demostanis: I think that with me and jdv79 you found a tough audience :)

[19:09] *** Kaiepi left
[19:10] *** Kaiepi joined
[19:14] *** sena_kun joined
[19:15] <rypervenche> I imagine it might never be deprecated. I just like consistency, and so far Raku has been doing a great job at creating consistency, especially with regards to the name change.

[19:15] <jdv79> what would it be chagned to?

[19:15] <rypervenche> I imagine META.json would be fine.

[19:16] <jdv79> not without breaking hge cpan ecosystem

[19:16] *** Altai-man left
[19:17] *** rindolf left
[19:17] <jdv79> if it was to be renamed to META.json then an alternative "this is raku" flag would have to be devised for raku dists

[19:18] <jdv79> right now, the presence of that file is the sole flag at pause

[19:19] <Grinnz> that can be adjusted (and I did promise to look into that at some point)

[19:19] <jdv79> maybe looking at the contents of hte meta file

[19:19] <Grinnz> the sole flag *should* be the Perl6/Raku subdir

[19:19] <Grinnz> as it is for metacpan et al

[19:19] <jdv79> it used to be.  but soemone thought it was a good idea to subvert that.

[19:19] <jdv79> in pause, specifically

[19:20] *** epony left
[19:23] <jdv79> perhaps, though it might cause more grief than its worth, we could pair the subdir rename with tne meta file rename

[19:23] *** stoned75 left
[19:23] <Grinnz> no need to pair anything. pause can recognize both, as other things do

[19:23] <Grinnz> the switch can be made at one's leisure subsequently

[19:31] <jdv79> i'm not sure using META.json is a great idea cause then we lose the ability to detect, and possible repair, a raku dist not uploaded under Perl6 or Raku

[19:32] <Grinnz> belt and suspenders is certainly a good policy, and there's really no reason to stick to that naming to begin with

[19:33] <Grinnz> but that's a bikeshed for you all to have ;)

[19:33] *** rindolf joined
[19:36] <jdv79> rypervenche: need a better name!:)

[19:38] *** lichtkind joined
[19:42] <rypervenche> That would work too :) I'm probably the least qualified to help with that though. There are so many things I wish I could help with, but I still have a lot to learn about the language, community, and ecosystem.

[19:43] <demostanis> lizmat: Is there still chance I can appear on Rakudo Weekly even if my project isn't on p6c ecosystem?

[19:49] <jdv79> rypervenche: i'll try to remember

[19:50] <jdv79> i was planning on looking at "eco stuff" more deeply soonish

[20:03] *** kensanata left
[20:11] *** ab5tract left
[20:18] <codesections>  m: [].Set.raku.say; Set.new.raku.say

[20:18] <camelia> rakudo-moar a84952fb1: OUTPUT: «set()␤Set.new()␤»

[20:19] <codesections> These two empty sets ^^^ have different `raku` print representations.  Are they actually different, or do they just happen to print differently?  

[20:19] <codesections> (`eqv` returns True)

[20:23] <timotimo> sourceable6: Set.new.raku

[20:23] <sourceable6> timotimo, https://github.com/rakudo/rakudo/blob/a84952f/src/core.c/Mu.pm6#L818

[20:24] <timotimo> sourceable6: set().raku

[20:24] <sourceable6> timotimo, https://github.com/rakudo/rakudo/blob/a84952f/src/core.c/Mu.pm6#L818

[20:24] <timotimo> d'oh

[20:26] <timotimo> of course

[20:26] <timotimo> sourceable6: set().perl

[20:26] <sourceable6> timotimo, https://github.com/rakudo/rakudo/blob/a84952f/src/core.c/Mu.pm6#L14

[20:27] <timotimo> sourceable6: Set.new().perl

[20:27] <sourceable6> timotimo, https://github.com/rakudo/rakudo/blob/a84952f/src/core.c/Mu.pm6#L14

[20:27] <timotimo> excuse?

[20:28] <AlexDaniel`> sourceable6: Set.new().perl()

[20:28] <sourceable6> AlexDaniel`, https://github.com/rakudo/rakudo/blob/a84952f/src/core.c/Mu.pm6#L15

[20:34] *** epony joined
[20:37] <cpan-raku> New module released to CPAN! HTML::Canvas (0.0.9) by 03WARRINGD

[20:42] <rypervenche> Is it possible to use prompt or get and have the result be used directly in a sub? Or will have have to assign the result of prompt/get to a variable and then pass it to a sub so I can then have it check that the signature is correct?

[20:47] <moritz> you can absolutely do something like  sub square(Int() $x) { $x * $x }; say square prompt 'Number to square: ';

[20:47] <moritz> note that in this case, I made the argument to sub square coerce to Int

[20:48] <moritz> probably not really necessary, since prompt uses val() on its return value, so it'd retuern an IntStr anyway

[20:49] <rypervenche> Oh, very interesting.

[20:54] *** astronavt___ left
[20:55] <guifa> that type of chaining is one of the reasons I love intelligently designed function names

[20:55] *** astronavt joined
[20:55] <guifa> being able to string along a semi intelligible phrase

[20:58] *** astronavt left
[21:00] *** rindolf left
[21:14] *** Altai-man joined
[21:16] *** sena_kun left
[21:33] *** raku-bridge left
[21:33] *** raku-bridge joined
[21:33] *** raku-bridge left
[21:33] *** raku-bridge joined
[21:37] *** rockxloose left
[21:38] *** rockxloose joined
[21:45] *** raku-bridge left
[21:45] *** raku-bridge joined
[21:45] *** raku-bridge left
[21:45] *** raku-bridge joined
[21:47] *** raku-bridge left
[21:49] *** raku-bridge joined
[21:51] *** demostanis left
[21:52] *** raku-bridge left
[21:55] *** raku-bridge joined
[21:55] *** raku-bridge left
[21:55] *** raku-bridge joined
[22:02] *** camelCaser left
[22:08] <rypervenche> Is it possible to divide every element of an array by 100? Possibly using >>

[22:13] <rypervenche> I guess a map would do what I want.

[22:14] <lizmat> m: my @a = ^10; @a >>/=>> 100; dd @a

[22:14] <camelia> rakudo-moar a84952fb1: OUTPUT: «Array @a = [0.0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09]␤»

[22:14] <lizmat> rypervenche ^^

[22:19] <rypervenche> Oooh, thanks.

[22:29] *** oddp left
[22:33] *** camelCaser joined
[22:49] *** pecastro joined
[23:05] *** leont left
[23:05] *** Sgeo left
[23:07] *** pecastro left
[23:08] *** Sgeo joined
[23:14] *** vrurg left
[23:15] *** vrurg_ joined
[23:20] *** jmcgnh left
[23:32] *** silug6 joined
[23:32] *** silug left
[23:32] *** silug6 is now known as silug

[23:39] <rypervenche> How might I get a subset like: subset NonnegativeRat of Rat where * ≥ 0;  but also accept UInt. Is that possible to do in the same subset?

[23:49] *** lichtkind left
[23:52] <rypervenche> Hmm, I think I was able to get what I wanted with: subset NonnegativeRat of Numeric where { ($_ ~~ UInt or $_ ~~ Rat) and $_ > 0 };

[23:52] <rypervenche> Is there a shorter/more idiomatic way of doing this?

[23:53] *** MilkmanDan left
