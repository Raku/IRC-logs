[00:10] *** thundergnat joined
[00:11] <thundergnat> m: say Date(now)

[00:11] <camelia> rakudo-moar 110324d36: OUTPUT: ¬´Type check failed in binding to parameter '$dateish'; expected Str but got Instant (Instant.from-posix(<85342309...)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[00:11] <tellable6> 2020-05-11T15:41:16Z #raku <tigerpaws> thundergnat: Thanks, I'll have a look, with the understanding they are out of date. 

[00:11] <thundergnat> bisectable6: 2020.01 say Date(now)

[00:11] <bisectable6> thundergnat, Using old=2020.01 new=HEAD in an attempt to do what you mean

[00:11] <bisectable6> thundergnat, Bisecting by exit code (old=2020.01 new=110324d). Old exit code: 0

[00:11] <bisectable6> thundergnat, bisect log: https://gist.github.com/5c4297b65b3da90a89e0d9dd1eddb18a

[00:11] <bisectable6> thundergnat, (2020-02-29) https://github.com/rakudo/rakudo/commit/d95d218f3192b06f0bb52bceb90e43d198747f09

[00:12] <thundergnat> sigh

[00:19] <thundergnat> submitted issue GH#3683

[00:19] <linkable6> GH#3683 [open]: https://github.com/rakudo/rakudo/issues/3683 Date(now) no longer works

[00:23] *** aborazmeh joined
[00:23] *** aborazmeh left
[00:23] *** aborazmeh joined
[00:35] *** Black_Ribbon joined
[01:03] *** guifa left
[01:06] *** konvertex left
[01:07] *** thundergnat left
[01:18] *** stoned75 joined
[01:29] *** Doc_Holliwould left
[01:33] *** gdonald left
[01:40] *** molaf left
[01:48] *** aborazmeh left
[01:50] *** aborazmeh joined
[01:50] *** aborazmeh left
[01:50] *** aborazmeh joined
[01:53] *** molaf joined
[02:08] <cpan-raku> New module released to CPAN! Sparrow6 (0.0.20) by 03MELEZHIK

[02:11] *** pilne left
[02:21] <jdv79> if there is a libicuuc.so shoudn't it just be "is native('icuuc')"?

[02:34] *** Cabanossi left
[02:37] *** Cabanossi joined
[02:42] *** zacts joined
[02:42] *** stoned75 left
[02:56] <jdv79> how does one handle an arg that is a pointer to a typedef enum?

[04:01] *** molaf left
[04:23] *** stoned75 joined
[04:43] *** aborazmeh left
[04:53] *** zacts left
[04:54] *** zacts joined
[04:56] *** rindolf joined
[05:13] *** brtastic joined
[05:20] *** kensanata joined
[05:43] <eiro> it seems there is no p6doc in the rakudostar bundle. is there something to install with zef?

[05:43] *** sauvin joined
[05:55] *** stoned75 left
[05:57] *** stoned75 joined
[05:57] *** dd070 joined
[06:03] *** Doc_Holliwould joined
[06:04] *** Itaipu left
[06:06] *** Itaipu joined
[06:06] *** zacts left
[06:07] *** zacts joined
[06:07] *** brtastic left
[06:21] *** dd070 left
[06:21] *** dd070 joined
[06:22] *** Itaipu_ joined
[06:23] *** Itaipu left
[06:24] *** kensanata left
[06:41] *** farcas1982regreg left
[06:45] *** gnufr33dom left
[06:47] *** xelxebar left
[06:48] *** xelxebar joined
[06:57] *** sjm_uk joined
[06:59] *** brtastic joined
[07:01] *** dd070 left
[07:05] *** dd070 joined
[07:11] *** sjm_uk left
[07:18] *** kst left
[07:22] *** zacts left
[07:22] *** pecastro joined
[07:25] *** dd070 left
[07:26] *** dd070 joined
[07:41] *** Doc_Holliwould left
[07:59] *** dakkar joined
[07:59] *** dakkar left
[08:00] *** dakkar joined
[08:05] *** MasterDuke joined
[08:05] *** dd070 left
[08:06] *** Altai-man_ joined
[08:17] *** sena_kun joined
[08:19] *** Altai-man_ left
[08:22] *** cpan-raku left
[08:22] *** cpan-raku joined
[08:22] *** cpan-raku left
[08:22] *** cpan-raku joined
[08:23] *** SCHAPiE left
[08:50] *** jjmerelo joined
[08:50] <jjmerelo> Hey, I got in. Anyone else had trouble this morning getting in?

[09:12] *** jjmerelo left
[09:13] *** KindOne left
[09:22] <lizmat> jjmerelo: no, I didn't

[09:22] <tellable6> lizmat, I'll pass your message to jjmerelo

[09:30] * lizmat clickbaits https://rakudoweekly.blog/2020/05/11/2020-19-release-release/

[09:35] *** gnufr33dom joined
[09:36] *** chloekek joined
[09:45] *** jjmerelo joined
[10:08] *** Guest43 joined
[10:09] *** Guest43 is now known as hungrydonkey

[10:09] *** hungrydonkey left
[10:09] *** hungrydonkey joined
[10:16] *** Altai-man_ joined
[10:19] *** sena_kun left
[10:20] <Dwarf> I'm trying to write a dice roll program but it seems I'm getting stuck around line 16. I expected it to sum all the rolls, but it seems that since it's just one die it won't do that https://bpa.st/MTHA

[10:21] <Dwarf> So the result is always zero even if line 25 returns a number

[10:26] <Geth> ¬¶ doc: JJ self-assigned False positives in routine-definitions.t https://github.com/Raku/doc/issues/3395

[10:27] <Geth> ¬¶ doc: 1bd6b05bfb | (JJ Merelo)++ | xt/routine-definitions.t

[10:27] <Geth> ¬¶ doc: Eliminates some false positives, refs #3395

[10:27] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/1bd6b05bfb

[10:27] <linkable6> DOC#3395 [open]: https://github.com/Raku/doc/issues/3395 [docs] False positives in routine-definitions.t

[10:31] *** farcas1982regreg joined
[10:34] <Geth> ¬¶ doc: 5355f2ce93 | (JJ Merelo)++ | 2 files

[10:34] <Geth> ¬¶ doc: Checked false positive, closes #3395

[10:34] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/5355f2ce93

[10:34] <linkable6> DOC#3395 [closed]: https://github.com/Raku/doc/issues/3395 [docs] False positives in routine-definitions.t

[10:34] *** Doc_Holliwould joined
[10:36] <hungrydonkey> Hello,everyone. How to check two arrays have the same value?

[10:38] <Geth> ¬¶ doc: 69cf105abf | (JJ Merelo)++ | 2 files

[10:38] <Geth> ¬¶ doc: Eliminating two #3390 errors

[10:38] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/69cf105abf

[10:38] <Geth> ¬¶ doc: 369c4abe4d | (JJ Merelo)++ | 3 files

[10:38] <Geth> ¬¶ doc: Eliminating several #3390 errors

[10:38] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/369c4abe4d

[10:38] <linkable6> DOC#3390 [open]: https://github.com/Raku/doc/issues/3390 [docs][xt] xt/routine-definitions.t failures

[10:39] <Dwarf> hungrydonkey: one & two should return the intersection of the arrays https://docs.perl6.org/language/operators#infix_(&),_infix_%E2%88%A9

[10:40] <Geth> ¬¶ doc: d623c0a591 | (JJ Merelo)++ | doc/Type/Any.pod6

[10:40] <Geth> ¬¶ doc: Latest fixes, closes #3390

[10:40] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/d623c0a591

[10:40] <linkable6> Link: https://docs.raku.org/type/Any

[10:40] <linkable6> DOC#3390 [closed]: https://github.com/Raku/doc/issues/3390 [docs][xt] xt/routine-definitions.t failures

[10:44] *** KindOne joined
[10:45] *** _dev_zero left
[10:49] *** ufobat joined
[10:50] *** _dev_zero joined
[10:53] *** caterfxo left
[11:00] *** konvertex joined
[11:05] *** gdonald joined
[11:08] *** molaf joined
[11:09] *** Ekho left
[11:22] *** Ekho joined
[11:30] *** chloekek left
[11:34] *** stoned75 left
[11:36] *** gnufr33dom left
[11:43] <tbrowder> .tell Altai-man_ I took care of completing Rakudo issus #3682.

[11:43] <tellable6> tbrowder, I'll pass your message to Altai-man_

[11:44] <Altai-man_> tbrowder++

[12:09] *** chloekek joined
[12:17] *** sena_kun joined
[12:19] *** Altai-man_ left
[12:24] *** chloekek left
[12:30] *** Doc_Holliwould left
[12:31] *** kent\n left
[12:36] *** kent\n joined
[12:39] *** Black_Ribbon left
[12:49] <libertas> hi, I've built a really small script to count the number of odd and even numbers in each line of text and print some statistics.

[12:50] <libertas> But it's very slow to run

[12:50] <libertas> can you please check whether there's something that is causing this slowness?

[12:50] <libertas> The script's in https://pastebin.com/uJYdqdPt

[12:51] <lizmat> for "aa.txt".IO.lines -> $line

[12:51] <lizmat> would not copy all lines into memory

[12:51] <lizmat> also, the "values" is unnecessary

[12:54] <lizmat> also, why not set up the %oe_count directly, why the extra @odd_evens array ?

[12:57] *** chloekek joined
[12:57] <[Coke]> installed cro. raku -MCro::HTTP::Server -e1; runs for a bit then I get "Abort trap: 6". ... will update raku and report back.

[12:57] <[Coke]> (it's from 2020.01 vintage)

[12:57] *** jjmerelo left
[12:58] <libertas> it's only my first script :-)

[12:58] <Geth> ¬¶ doc/master: 4 commits pushed by Coke++

[12:58] <Geth> ¬¶ doc/master: 98c6e19ae5 | whitespace

[12:58] <Geth> ¬¶ doc/master: 6338cb865c | .perl -> .raku - see #3309

[12:58] <Geth> ¬¶ doc/master: 3b5bc949b4 | Make test executable

[12:58] <Geth> ¬¶ doc/master: 1cebcb0d47 | Need *overall* plan, not only subtest plans

[12:58] <Geth> ¬¶ doc/master: review: https://github.com/Raku/doc/compare/d623c0a59126...1cebcb0d47c5

[12:58] <libertas> the "aa.txt" file has circa 26MB

[12:59] <lizmat> then the    for "aa.txt".IO.lines -> $line   should be helpful already

[13:01] <lizmat> libertas: if you switch odds and evens around, you could do:

[13:02] <lizmat> my @pair = 0,0; @pair[$_ % 2]++ for @nrs

[13:03] <libertas> good

[13:03] <lizmat> or actually: @pair[$_ % 2]++ for $line.words[2..6]

[13:05] <[Coke]> rakubrew.org still giving a cert error. Do we need to buy a new cert?

[13:06] <Dwarf> SSL certificates are free with https://letsencrypt.org

[13:07] *** Itaipu_ left
[13:08] <Dwarf> You probably meant a different kind of certificate huh

[13:08] <[Coke]> (I am surprised to see that rakubrew is a binary file)

[13:13] <libertas> I've changed the script but still it's as slow as before, although more idiomatic for sure

[13:14] <libertas> I'm evaluating raku and tcl for some work, and raku is 11x slower than tcl, which is a lot for my purposes

[13:16] <[Coke]> Anything in particular that's slow? Sometimes rewriting as idiomatic raku can help with speedups.

[13:16] <lizmat> libertas: what's the current version of your script?  the gist appears unchanged?

[13:18] <[Coke]> Can't run rakubrew binary on mac - it complains about not being able to verify the author.

[13:20] <libertas> lizmat: it's https://pastebin.com/F4rrQGPS

[13:22] <sena_kun> libertas, can you please provide a bit of test data you are using? Not necessarily exact one, but something for people to tests against.

[13:25] <libertas> sena_kun: sure.  In total, I'm testing aa.txt with 933000 lines.  The first 1000 are in https://pastebin.com/J7N2W144

[13:28] <libertas> if that data is file aa.txt, then for f in {1..9}; do cat bb.txt >> cc.txt; done

[13:29] <libertas> sorry, {1..933} instead of {1..9} will give a file of some size

[13:29] <[Coke]> (reinstalled raku, still getting the abort trap on raku -MCro::HTTP::Server -e1;)

[13:30] <libertas> I can post the tcl script for you to compare relative speeds

[13:30] <libertas> I could try it in perl5, but don't know the language

[13:34] *** xinming_ left
[13:35] *** xinming_ joined
[13:38] *** clarkema joined
[13:40] <[Coke]> libertas: do you need to be keeping 'odd_evens' for anything other than the math?

[13:40] <[Coke]> I imagine keeping all those around has a cost.

[13:40] <Dwarf> I have a text file with regexes on each line. I read these strings with 'file.txt'.IO.lines, but I want to read these as regex and not as Str type. I've tried .map(*.regex) but that's sadly not a thing. Any pointers?

[13:41] <libertas> [Coke]: I need them just for the math

[13:43] <timotimo> i wonder how much faster it would be to `split(" ", $line).skip(2).head(4)`

[13:43] <timotimo> libertas: ^

[13:43] *** chloekek left
[13:43] <timotimo> Dwarf: you can write this:  /<$variable>/ and it will interpret the contents of $variable as regex syntax and compile it for you. beware code execution, though. you must trust the input file for this to be ok

[13:44] <sena_kun> golfed to https://gist.github.com/Altai-man/ecb0e1167100b5cd7c3e20ecc69f0e7f

[13:44] <[Coke]> Dwarf: I think you want https://docs.raku.org/language/regexes#Regex_interpolation

[13:44] <sena_kun> but it seems `split(' ')` is what takes the most time, everything else is cheap.

[13:44] <timotimo> cool, there's the skip+head

[13:44] <sena_kun> [Coke], regexes would be even slower I'm afraid.

[13:45] <Dwarf> Ah! Awesome, thank you both

[13:45] <[Coke]> so then if you have a $string, you can say $regex = / <$string> /;, I think

[13:46] <sena_kun> It takes from ~290 to 350 milliseconds to me, but if you just leave `for "aa.txt".IO.lines -> $line { $line.split(' ') }` in the script it takes 180-230 milliseconds.

[13:46] <[Coke]> sena_kun: I was answering Dwarf's question about regex there.

[13:46] <sena_kun> *The whole script from 290 to 350

[13:46] <sena_kun> [Coke], oh, sorry, silly me.

[13:46] <sena_kun> I have to keep up with the converstaion better...

[13:46] <tobs> fwiw, my take on "idiomatic" appears to be somewhat slower https://hastebin.com/ikacawopic.pl

[13:47] <sena_kun> Anyway, I'd say both `.words` or `.split(' ')` seem like the main source of slowness here.

[13:49] <[Coke]> wonder if a grammar would be faster.

[13:50] *** MilkmanDan left
[13:50] <timotimo> are these numbers simple? do they need full number parsing?

[13:50] *** MilkmanDan joined
[13:51] <timotimo> if you don't expect a 0x or so in front, and no decimal point, you can just check the last character against 0, 2, 4, 6, 8

[13:52] <timotimo> but since it's mostly the split that takes so long, that may not be worth anything much

[13:54] <[Coke]> if the lines all have the same format, maybe substr is faster?

[13:54] <timotimo> did anybody try race-ing it yet?

[13:54] <[Coke]> ah, not quite the same length

[13:54] <sena_kun> [Coke], they differ in length. :S

[13:54] <libertas> timotimo: with your suggestion, run time dropped to half, from 1m48 to 55s

[13:54] <timotimo> what? wow!

[13:54] <timotimo> nice

[13:55] <timotimo> still 5x slower than tcl, sadly

[13:55] <lizmat> libertas: could you try https://gist.github.com/lizmat/ca60dd89924260117ddd1ec1dd1128f4 ?

[13:56] <timotimo> lizmat: should it be head 5 or 4?

[13:56] <lizmat> [2..6] was in the original code, no?

[13:56] <[Coke]> lizmat: useless join at the end?

[13:56] *** Doc_Holliwood joined
[13:56] <timotimo> ah, that's inclusive, of course right

[13:56] <lizmat> [Coke]: it's a map!

[13:56] <timotimo> just some python brain damage :) :)

[13:57] <[Coke]> oh

[13:57] <timotimo> with just the 1k lines it finishes way too fast to measure sensibly :) :)

[13:57] <timotimo> libertas: would it be representative to just repeat the 1000 lines you gave us a bunch of times?

[13:58] <libertas> lizmat: it's quicker, 47s instead of 55

[13:58] <konvertex> I have a good one as well. Did some more advent of code and that's a hefty-defty slowdown: https://gist.github.com/dweqv/3f686b6f46154d4135ded4f813158d96 Part2 takes four times as long. And that type of puzzle comes up again later on. :(

[13:58] <libertas> timotimo: yes, that's what I did, it's just an experiment for me

[13:58] <timotimo> OK!

[13:58] <lizmat> ok, now stick in a '.race(:batch(1024))" after the .lines and before the .map

[13:59] *** MilkmanDan left
[13:59] <timotimo> ahaha, i should maybe have a moarvm with C optimizations enabled

[14:00] *** MilkmanDan joined
[14:00] <lizmat> libertas: ok, now stick in a '.race(:batch(1024))" after the .lines and before the .map

[14:01] <libertas> timotimo: that is using all the cores... it's down to 15s

[14:01] <lizmat> libertas: that's with the .race ?

[14:02] <libertas> yes

[14:02] <lizmat> cool!

[14:02] <lizmat> you might want to twiddle a little with the 1024 value, try doubling it / halving it

[14:02] <libertas> ok

[14:03] <libertas> thanks all

[14:03] *** mowcat joined
[14:06] <timotimo> a quick profile shows Str's Numeric method takes the most time in sena's version

[14:06] <lizmat> yeah, also in mine

[14:07] <timotimo> i think libertas tried my optimization of only checking the last character, as a string, against the even digits

[14:07] <timotimo> and got a 2x speedup

[14:07] * sena_kun would like to see the code for it

[14:11] <timotimo> could it have been the 2..5 has been wrong?

[14:11] <timotimo> have we been getting a Failure all this time?

[14:14] <lizmat> that would have thrown in the % 2 , would it not ?

[14:15] <timotimo> "1 20150103 22 48 49 30  31"

[14:15] <timotimo> this line is what made my code wrong

[14:15] <timotimo> libertas: how would you like this kind of datum to be interpreted?

[14:16] *** Altai-man_ joined
[14:17] <timotimo> oh whoops, when i catted the files together to make a bigger file i ended up with a double-sized line on each seam :D

[14:17] <libertas> at this time I'm not interested in the date

[14:18] <timotimo> an empty entry tripped up one of my versions :D

[14:19] *** sena_kun left
[14:19] *** aborazmeh joined
[14:19] *** aborazmeh left
[14:19] *** aborazmeh joined
[14:28] <timotimo> aww, ends-with can't be inlined because takenextdispatcher

[14:30] <lizmat> huh?  why would it need a next dispatcher ?

[14:30] <timotimo> not sure, it just starts with takedispatcher, then takenextdispatcher

[14:31] *** xinming_ left
[14:31] <lizmat> what are the ends-with parameters you're looking at ?

[14:32] *** xinming_ joined
[14:32] <lizmat> I mean, ends-with is pure nqp with an optional private method call if things go awry

[14:33] <lizmat> it's a multi, but so are many other methods ?

[14:34] <timotimo> i don't know much about the current dispatcher mechanism, only about the upcoming one %)

[14:36] <lizmat> does substr-eq suffer from the same issue ?

[14:36] <timotimo> i'm glad that at least $even and $odd being int are being incremented using a proper add_i instead of a call

[14:37] *** Doc_Holliwood left
[14:38] <timotimo> yes it does

[14:39] *** rouking left
[14:40] *** chloekek joined
[14:43] <lizmat> ok, than it's probably in the named parameter handling ?

[14:44] <timotimo> cannot inline &infix:<->, cannot inline substr, cannot inline sink, but at least using eq on a "str" variable generates an actual eq_s op without a call

[14:44] <timotimo> all of these prevented by takenextdispatcher

[14:45] <jnthn> I thought the dispatcher stuff got reverted ahead of the last release?

[14:45] <timotimo> perhaps it was brought back after the release

[14:45] *** aborazmeh left
[14:45] <timotimo> oh or maybe my nqp is old

[14:46] <Geth> ¬¶ doc: tbrowder++ created pull request #3398: Add warning info for sprintf use

[14:46] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3398

[14:46] <timotimo> i'll just rebuild my everything

[14:54] *** Doc_Holliwood joined
[14:59] *** Itaipu joined
[15:01] <timotimo> i think my rakudo was wildly out of date :)

[15:01] <timotimo> like 45 commits

[15:02] *** brtastic left
[15:05] <timotimo> much better

[15:05] <timotimo> sorry about all the confusion!

[15:10] *** donaldh joined
[15:11] <[Coke]> 'cro stub app app' dies for me with Abort Trap: 6

[15:11] <timotimo> can you gdb that?

[15:11] <timotimo> or lldb or whatever

[15:12] <timotimo> anyway, with ends-with, all the ends-withs are inlined

[15:12] <timotimo> but calculating the end position once and using substr-eq may be more efficient

[15:13] <[Coke]> running lldb on cro seems painful, since it's a script calling a script calling ...

[15:13] <timotimo> also, ends-with grabs the string out of the self twice in a row. i wonder if it's possible to get that faster

[15:13] <timotimo> oh crap good point

[15:13] <timotimo> gdb can "follow the child on every fork", but that could be wrong, too

[15:13] <timotimo> ah, the obvious solution is core dumps

[15:17] *** mowcat left
[15:19] * [Coke] finally installs brew so he can install gdb so he can ..

[15:24] <[Coke]> if I had gdb, how would I run 'cro stub...' under it?

[15:26] *** jjmerelo joined
[15:27] <timotimo> normally you'd raku-gdb-m the script

[15:30] <[Coke]> raku-gdb-m - not found

[15:30] <[Coke]> I assume it wasn't installed because I didn't have gdb when I ran the installer?

[15:30] <[Coke]> ah, no. perl6-gdb-m is installed...

[15:31] <timotimo> oh, little oversight clearly

[15:31] <MasterDuke> might have raku(do)-lldb-m

[15:32] <jdv79> so i learned today that icu suffixes their func names with the lib ver - there's no clever way around having to manually find that out beforehand, right?

[15:32] <MasterDuke> some of those are only installed as rakudo-*, not raku

[15:32] <[Coke]> MasterDuke++

[15:32] <jdv79> not a huge deal i guess

[15:32] *** molaf left
[15:33] <[Coke]> so how to run the cro script with args?

[15:33] *** Doc_Holliwood left
[15:37] <jjmerelo> [Coke] what do you mean? Can't you simply use args? (or, better, environment variables) (Just curious, I've used Cro only very shallowly)

[15:37] <[Coke]> jjmerelo: in gdb

[15:37] <timotimo> ok, substr-eq doesn't have to recalculate the position every time, but it does have to verify that the integer isn't a big integer and that it's not negative

[15:38] <jjmerelo> [Coke] ah, OK. Don't know, but environment variables will still be transmitted, right?

[15:39] <timotimo> actually

[15:39] <timotimo> if you can get it to pause in between somehow

[15:39] <timotimo> you can attach gdb to the running process at the right moment

[15:39] <timotimo> ctrl-z can potentially do it if you manage to hit it when the right process is already started but hasn't crashed yet

[15:45] <[Coke]> checking...

[15:46] <[Coke]> if I start cro, there are like 4 rakudo processes running doing precomp

[15:47] <[Coke]> haven't I lost the ability to follow the children at that point?

[15:47] <[Coke]> (5, not 4)

[15:48] <timotimo> attaching to running processes goes by pid, so that should be fine

[15:49] *** chloekek left
[15:50] *** chloekek joined
[16:00] *** molaf joined
[16:03] *** sena_kun joined
[16:05] *** Altai-man_ left
[16:26] <[Coke]> I can't find the right process to connect to. looks like there are lot of short lived processes running with target=mbc, and by the time I try to connect to them, they're gone. Wonder where the parent process is.

[16:26] <[Coke]> ... ah. cro is still calling to 'perl6', not 'raku'

[16:27] <[Coke]> Unable to find Mach task port for process-id 2087: (os/kern) failure (0x5). (please check gdb is codesigned - see taskgated(8))

[16:29] <[Coke]> so, more work to do on my end to figure this out. :|

[16:29] *** dakkar left
[16:30] <timotimo> ah, of course

[16:30] <timotimo> gdb isn't allowed to do stuff because security

[16:31] <timotimo> which is a very sane thing to do as an OS

[16:31] <timotimo> but annoying to deal with

[16:31] <timotimo> is there a way to get around this with sudo perhaps?

[16:32] <[Coke]> sudo gdb gets me further. if I don't have a rakudo with debug symbols enabled, is this going to be at all helpful?

[16:33] <jnthn> Probably not, though it's only MoarVM that you need rebuild with them

[16:34] <[Coke]> when I connect, I get: Error calling thread_get_state for GP registers for thread 0x1603

[16:34] <timotimo> jnthn: i humbly petition we always build with debug symbols. opinions?

[16:35] *** sour joined
[16:36] <MasterDuke> +1 from me. i always do and have noticed extremely minimal slowdown whenever i've bothered to compare

[16:36] *** lichtkind joined
[16:36] <[Coke]> if I continue from that point, the trap eventually happens, but gdb says "[Inferior 1 (process 2330) exited normally]"

[16:37] <jnthn> I've noticed they can be misleading as heck when you have an optimized build.

[16:37] <jnthn> Though maybe the info they give is better than nothing, if taken with the appropriate grain of salt

[16:37] <timotimo> there's a way to get debug symbols split off from the main .so so they can be loaded in gdb afterwards

[16:37] <jnthn> (The backtraces are generally OK, but values of variables in optimized builds can be all over the place.)

[16:37] <timotimo> i think you don't even get line numbers without debug symbols

[16:37] <MasterDuke> jnthn: misleading how? my usual build is optimized, but with debugging

[16:37] *** xinming_ left
[16:38] <[Coke]> timotimo: (gdb) bt

[16:38] <[Coke]> #0  0x00007fff69066296 in ?? ()

[16:38] <MasterDuke> oh, yeah. there are a lot of optimized out values

[16:38] <timotimo> oh, may also want to MVM_JIT_DISABLE=1

[16:38] <jnthn> MasterDuke: Often I see totally bogus values (doesn't even say optimized out)

[16:38] <timotimo> hmm

[16:38] <jnthn> Maybe latest versions of compilers etc. do better at it.

[16:39] <jnthn> I've just learned that if I don't want to go on a wild goose chase because foo pointer is corrupt, I'd better debug a non-optimized build.

[16:39] <MasterDuke> i'm using arch linux, so usually have pretty recent versions of stuff

[16:39] *** xinming_ joined
[16:40] <[Coke]> timotimo: MVM_JIT_DISABLE=1 # still abort traps, still get "exited normally"

[16:40] <timotimo> disabling jit makes backtraces make more sense much of the time

[16:40] <timotimo> i don't even know what trap number 6 would be. like it got signal 6, but some piece of code somewhere caught it and just called "exit(0)" for some reason?

[16:42] <Geth> ¬¶ p6-sake: AlexDaniel self-unassigned ‚ÄúSake‚Äù is overused, come up with something else https://github.com/perl6/p6-sake/issues/19

[16:42] <[Coke]> stack overflow says trying to access memory you don't own (typically with strcpy)

[16:42] <timotimo> how do you bp that

[16:43] <[Coke]> bp?

[16:43] <[Coke]> found another suggesting "unhandled C++ exception"... :)

[16:44] <timotimo> breakpoint

[16:44] *** mowcat joined
[16:45] <[Coke]> how do I build a non-optimized build of rakudo?

[16:46] <[Coke]> (as opposed to a debug version)

[16:46] *** caterfxo joined
[16:49] <[Coke]> (MVM_SPESH_DISABLE=1 MVM_JIT_DISABLE=1 cro stub app app - still abort traps)

[16:50] *** brtastic joined
[16:51] *** sour left
[16:51] * [Coke] needs to just give up on this and go full docker route. :|

[16:54] <timotimo> sorry coke, i'm sidetracked

[16:54] <timotimo> the optimization flags go in the moarvm configure.pl

[16:55] <timotimo> which with --gen-nqp and such will be called for you, but there's also --moar-opts or something in the rakudo configure.pl

[16:57] <[Coke]> Yah, that's a lot to dig through.

[16:57] *** xelxebar left
[16:57] <[Coke]> for now, will try to get cro working in docker instead.

[16:58] *** mowcat left
[16:58] *** xelxebar joined
[16:58] *** mahafyi joined
[17:01] *** molaf left
[17:02] *** sour joined
[17:02] *** hungrydonkey left
[17:04] *** zacts joined
[17:13] *** gnufr33dom joined
[17:14] *** farcas1982regreg left
[17:16] *** mowcat joined
[17:20] *** zacts left
[17:25] *** xinming_ left
[17:25] *** xinming_ joined
[17:36] *** mowcat left
[17:36] *** sjm_uk joined
[17:42] *** xinming_ left
[17:43] *** xinming_ joined
[17:44] *** guifa joined
[17:45] *** squashable6 left
[17:45] *** squashable6 joined
[18:04] *** Altai-man_ joined
[18:07] <[Coke]> https://cro.services/docs/docker-deployment suggests an old version of the docker container, btw.

[18:07] *** abraxxa left
[18:07] <sour> I have a newbie question, how would one represent a tagged union in raku? Something like a sealed class in scala / sum type in haskell

[18:07] *** sena_kun left
[18:07] <[Coke]> like a Junction?

[18:08] <[Coke]> m: my $a = True | False

[18:08] <camelia> rakudo-moar a90749774: ( no output )

[18:08] <[Coke]> https://docs.raku.org/type/Junction # if so

[18:08] *** Doc_Holliwood joined
[18:08] *** abraxxa joined
[18:09] <MasterDuke> sour: i think Kaiepi has some modules that might be relevant

[18:10] <[Coke]> though glancing over https://www.schoolofhaskell.com/user/Gabriel439/sum-types, maybe it's more like a where clause on a subset.

[18:10] * [Coke] defers to MasterDuke . :)

[18:11] <sour> like an enum with associated data types

[18:11] <sour> useful for representing ASTs, for example

[18:11] *** mowcat joined
[18:11] <sour> representing ASTs, for example, in Java with Java classes is eh

[18:11] <sour> big eh

[18:14] <[Coke]> yah, guessing 'subset X of Y where ...' is what you want. you can pick a top level class that is shared (or Any/Mu), and you can specify a where clause with specific limits, like explicit types, or "has this method"...

[18:14] <[Coke]> then you can declare your variables of the type of the subset.

[18:14] <[Coke]> https://docs.raku.org/language/typesystem#subset

[18:17] <sour> very interesting mechanism, thanks all

[18:19] <sour> there is multi after all, that helps a bit with this 

[18:21] <[Coke]> ah, yes, if you're just trying to restrict on parameters, you don't even need the subset then, just X multis.

[18:21] <[Coke]> (and you can define a coercion in the signature definition if all you're doing is casting)

[18:23] <guifa2> So.... what exactly is {YOU_ARE_HERE} ?

[18:24] <guifa2> there's no documentation on it in docs.raku.org but it's definitely still in the grammar, but I'm not quite getting the intent based on the synopses

[18:25] <[Coke]> it's part of a setting - your code basically runs as if it were in the setting at that point, if I remember correctly.

[18:25] <[Coke]> m: say {YOU_ARE_HERE}

[18:25] <camelia> rakudo-moar a90749774: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§The use of {YOU_ARE_HERE} outside of a setting is reserved (use whitespace if not a setting, or rename file with .setting extension?)‚ê§at <tmp>:1‚ê§------> 3say {YOU_ARE_HERE}7‚èè5<EOL>‚ê§¬ª

[18:28] *** jjmerelo left
[18:30] *** sauvin left
[18:38] <sour> is there some more general mechanism behind having the Promise.start be a keyword? Was that done just because it is aesthetically pleasing? Wouldn't it then make sense to have some Channel operations be keywords?

[18:53] <vrurg> sour: It just doesn't make sense for a channel.

[18:54] *** girafe2 joined
[18:55] *** girafe left
[18:55] <jnthn> sour: Partly that common things deserve shorter spellings, but in this case also because a `start` block also declares a fresh `$/` and `$!` in the block's scope, which helps one with correctness.

[18:55] <sour> D:  I don't know man it irks me 

[18:58] <sour> I still think channels deserve their own keywords

[18:58] <jnthn> Also, you *can* use the `whenever` syntax to consume a channel

[18:58] <sour> hmmm

[18:58] <jnthn> (It's not syntax especially for channels, just general enough that it will work out)

[19:02] <sour> have you got some links for how that works?

[19:04] <sour> nevermind, I found (on the old design docs) that whenever competes for values

[19:04] <sour> https://design.raku.org/S17.html#Channels

[19:04] <sour> this is pretty noteworthy imo

[19:08] *** poohman left
[19:10] *** poohman joined
[19:14] *** sour left
[19:18] *** stoned75 joined
[19:33] *** xinming_ left
[19:35] *** camelCaser left
[19:35] *** xinming_ joined
[19:35] *** camelCaser joined
[19:40] *** MasterDuke left
[19:42] *** lucasb joined
[20:00] *** sjm_uk left
[20:03] *** xinming_ left
[20:04] *** xinming_ joined
[20:05] *** sena_kun joined
[20:07] *** Altai-man_ left
[20:09] *** poohman left
[20:10] *** mowcat left
[20:12] *** mahafyi left
[20:18] *** sjm_uk joined
[20:21] *** aborazmeh joined
[20:21] *** aborazmeh left
[20:21] *** aborazmeh joined
[20:22] *** rindolf left
[20:23] *** molaf joined
[20:24] <Geth> ¬¶ doc/fix-link-param-roles: bc05f269ed | (Stoned Elipot)++ | doc/Type/Associative.pod6

[20:24] <Geth> ¬¶ doc/fix-link-param-roles: Fix link to parameterized roles

[20:24] <Geth> ¬¶ doc/fix-link-param-roles: review: https://github.com/Raku/doc/commit/bc05f269ed

[20:25] <Geth> ¬¶ doc: stoned++ created pull request #3399: Fix link to parameterized roles

[20:25] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3399

[20:31] *** tlcu_ joined
[20:35] <guifa2> Should there be a third type of pod link?  Instead of just linking to POD sections and external URL, it would be nice to also be able to link to specific blocks

[20:35] <tlcu_> hello raku community, I want to know if I am doing something wrong because my raku scripts are running really slow

[20:43] <lizmat> tlcu_ : do you have a gist ?

[20:44] <tlcu_> lizmat https://rosettacode.org/wiki/Roman_numerals/Encode#Raku

[20:45] <tlcu_> it is taking about 430ms to execute, while perl takes 42ms. Seems impossible

[20:47] <lizmat> well, at those scales, you should remember that Raku takes abour 120 msecs to start up

[20:52] <jnthn> I suspect rosettacode solutions are often written for pretty rather than speed. The use of multi dispatch to match the 0 case is neat, but (at least under the current implementation) rather slower than just using an `if` to check it.

[20:52] *** tlcu_ left
[20:57] <lizmat> jnthn: a profile shows that about 2/3 of the time is spent in saying the result

[20:59] <lizmat> hmmm...  maybe not

[20:59] *** Black_Ribbon joined
[21:01] <jdv79> why does Pair.kv and Hash.kv return different things?

[21:01] <jdv79> just noticed that

[21:01] <lizmat> m: dd (a => 42).kv

[21:01] <camelia> rakudo-moar a90749774: OUTPUT: ¬´("a", 42).Seq‚ê§¬ª

[21:02] <lizmat> m: dd {a => 42}.kv

[21:02] <camelia> rakudo-moar a90749774: OUTPUT: ¬´("a", 42).Seq‚ê§¬ª

[21:02] <lizmat> they do?  or not?

[21:02] <lizmat> hmmm... running a --profile on that rosetta code entry explodes pretty much

[21:03] *** tlcu_ joined
[21:03] <jdv79> weird.  idk what i just ran into then.

[21:06] <tlcu_> lizmat jnthn thanks for clarifying

[21:06] *** Glinderhest joined
[21:07] <lizmat> tlcu_: using "0" as a candidate in a signature, is short for: Int:D where * == 0

[21:07] <lizmat> which implies that *every* dispatch needs to execute Raku code to see if it was 0, and then select that candidate

[21:08] *** poohman joined
[21:09] *** Glinderhest left
[21:13] *** ctilmes joined
[21:14] <ctilmes> m: use NativeCall; class Foo is repr('CStruct') { has uint16 $.x is rw }; class Bar is repr('CStruct') { HAS Foo $.foo }; my $bar = Bar.new; $bar.foo.x = 2;

[21:14] <camelia> rakudo-moar a90749774: OUTPUT: ¬´Cannot bind attributes in a Foo type object‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:15] <ctilmes> With "HAS", the struct should be embedded, how can it possibly be a 'type object'?

[21:20] *** chloekek left
[21:23] <jnthn> ctilmes: The marshalled view of the data structure being embedded doesn't mean that the Raku-level model of it will be (and I'm pretty sure it isn't, because there's isn't any general concept of "reference to part of an object").

[21:24] <jnthn> So it probably is, in Raku terms, represented as object containing object, and flattened out as it's mapped

[21:24] *** poohman left
[21:24] *** poohman joined
[21:26] <ctilmes> I'm passing it to C that is supposed to be returning some bytes to me, but Raku thinks it is a type object.  How do I tell Raku that the bytes are really there?

[21:26] *** melezhik joined
[21:27] <ctilmes> (I don't even allocate it -- it is allocated by C and returned to me.)

[21:30] *** brtastic left
[21:35] *** Cabanossi left
[21:36] <jnthn> ctilmes: Not sure, I'm afraid (and a bit tied up with something else to go digging), though did you try calling native-refresh (or whatever the sub is called) on it?

[21:38] *** clarkema left
[21:38] *** melezhik left
[21:42] *** sjm_uk left
[21:46] <lizmat> jnthn: I have a patch that makes "42".Numeric 4.3x as fast, "+42".Numeric unchanged, and "42.35".Numeric about 12% slower

[21:46] <lizmat> so, should I commit that ?

[21:47] *** Cabanossi joined
[21:49] <jnthn> Hm, it's probably a net win overall

[21:49] <lizmat> I guess I should at one point look at val() processing

[21:49] <lizmat> (again)

[21:50] <lizmat> ok, will commit then

[21:50] <lizmat> (after a final spectest test)

[21:50] *** sena_kun left
[21:52] *** ufobat_ joined
[21:55] *** ufobat left
[21:59] *** poohman left
[21:59] *** Kaiepi left
[22:00] <timotimo> there is the ADT module (that i made) ;)

[22:01] <timotimo> oops i was scrolled way up

[22:02] *** melezhik joined
[22:03] *** tlcu_ left
[22:04] *** pecastro left
[22:05] *** pecastro joined
[22:11] *** Cabanossi left
[22:11] *** MasterDuke joined
[22:18] *** aborazmeh left
[22:24] *** poohman joined
[22:28] *** scovit joined
[22:29] <scovit> ctilmes did you try to nativecast your struct to a CArray and extract the values from memory?

[22:29] <scovit> if the struct is filled by C code it should work

[22:29] *** poohman left
[22:33] <scovit> ctilmes , jnthn , IMHO nativecall has a bug. That can be worked around by accessing the bytes. As can be seen by running this gist https://gist.github.com/scovit/8d2e0254fdc2a5ef59fc38a177a5fe03

[22:37] <timotimo> i wasn't aware we have working assign-struct-to-structy-attribute now

[22:37] <timotimo> m: https://gist.github.com/scovit/8d2e0254fdc2a5ef59fc38a177a5fe03

[22:37] <camelia> rakudo-moar a0e58412a: OUTPUT: ¬´12‚ê§11‚ê§3‚ê§94392304‚ê§0‚ê§3‚ê§¬ª

[22:41] <scovit> timotimo buggy you mean?

[22:41] <scovit> I have a fix

[22:41] <scovit> first I opened an issue https://github.com/rakudo/rakudo/issues/3687

[22:43] <timotimo> is $!a set to anything when TWEAK runs?

[22:43] <scovit> I guess it is set with the value of the pointer

[22:43] <scovit> but this is incorrect

[22:44] <timotimo> m: say 94392304.base(16)

[22:44] <camelia> rakudo-moar a0e58412a: OUTPUT: ¬´5A04FF0‚ê§¬ª

[22:44] <scovit> this need to handle that https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/CStruct.c#L612

[22:45] <scovit> let me write a patch

[22:45] <timotimo> cool

[22:49] <scovit> timotimo, could you test this patch? https://github.com/MoarVM/MoarVM/pull/1285

[22:50] <timotimo> is there a proper check that the size used for the memcpy source has enough space in the target struct?

[22:50] <timotimo> like, is there a way to assign from the wrong type or something?

[22:52] <scovit> that is typechecked by higher level code

[22:52] <scovit> I think

[22:52] *** aborazmeh joined
[22:52] *** aborazmeh left
[22:52] *** aborazmeh joined
[22:52] <scovit> I tried and it gives me error

[22:52] <scovit> Type check failed in binding; expected IntStruct but got ..

[22:53] <timotimo> anything you can do with deriving?

[22:53] <scovit> I don't know, CStruct are quite rigid. You might get good ideas for breaking it

[22:54] <scovit> One thing is that binding could be done automagically by the constructor, I do not know if it was meant to be that way?

[22:54] <timotimo> m: class IntBase is repr<CStruct> { has int32 $.a; has int32 $.b }; class IntDerived is IntBase { has int64 $.x; has int64 $.y };

[22:54] <camelia> rakudo-moar a0e58412a: ( no output )

[22:54] <timotimo> i guess it would have to. you're thinking of a change in the buildplan?

[22:57] <scovit> yes, but I would have to figure out how to approach it

[22:59] <scovit> timotimo, for the moment maybe this fix is enough

[22:59] <scovit> it mirrors more or less what need to be done in the not inlined case

[23:03] *** Doc_Holliwood left
[23:09] *** pecastro left
[23:13] *** donaldh left
[23:17] *** lichtkind left
[23:30] *** donaldh joined
[23:31] *** scovit left
[23:31] <ctilmes> scovit, jnthn, timotimo: thanks.  I just cheat and pull the inside structure out with nativecast(my structure, Pointer.new(nativecast(Pointer,self)+offset of inside structure))

[23:34] *** tlcu_ joined
[23:40] *** ctilmes left
