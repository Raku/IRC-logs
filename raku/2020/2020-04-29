[00:10] <AlexDaniel> tbrowder: where exactly are you seeing this?

[00:11] <AlexDaniel> tbrowder: maybe it is just capitalized differently?

[00:16] *** vike left
[00:54] *** bpalmer joined
[00:59] <tbrowder> AlexDaniel: i'm seeing it on one of my modules, and the spelling is a bit strange, but i'll look closer to make sure. btw, it's my module Excel

[01:00] <tbrowder> in the modules list and zef recognizes "JSON::Hjson"

[01:01] <AlexDaniel> > ===> Failed to find dependencies: JSON::Hjson, Inline::Perl5, Test::META

[01:01] <AlexDaniel> so it's not just JSON::Hjson ?

[01:03] *** gdonald left
[01:08] *** maggotbrain joined
[01:19] *** molaf left
[01:32] *** molaf joined
[01:38] *** pilne_ joined
[01:40] *** pilne left
[01:42] *** vike joined
[01:42] *** pilne_ left
[01:43] <tbrowder> ah, i missed that!

[01:46] <tbrowder> afk till tomorrow, g'night all

[01:51] *** Sgeo__ joined
[01:54] *** Sgeo_ left
[02:05] *** ManifestO left
[02:05] *** ManifestO joined
[02:10] *** aborazmeh joined
[02:10] *** aborazmeh left
[02:10] *** aborazmeh joined
[02:39] *** guifa left
[02:49] *** Doc_Holliwould left
[02:52] *** aborazmeh left
[03:24] *** gabiruh left
[03:27] *** gabiruh joined
[03:42] *** pierrot joined
[04:35] *** hobbs joined
[04:38] *** gabiruh left
[04:38] *** gabiruh joined
[04:46] *** gabiruh_ joined
[04:47] *** gabiruh left
[04:59] *** gabiruh joined
[05:00] *** gabiruh_ left
[05:09] *** gabiruh left
[05:10] *** gabiruh joined
[05:28] *** roguelazer joined
[06:19] *** sjm_uk joined
[06:21] *** andrzejku joined
[06:42] *** rindolf joined
[06:47] <Geth> ¦ doc: 6111e3ae9f | (JJ Merelo)++ | doc/Type/IO/Handle.pod6

[06:47] <Geth> ¦ doc: Changes to current definition #2632

[06:47] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/6111e3ae9f

[06:47] <Geth> ¦ doc: 8881d2f6c8 | (JJ Merelo)++ | doc/Type/IO/Handle.pod6

[06:47] <Geth> ¦ doc: Clarifies accepted combinations, refs #2632

[06:47] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/8881d2f6c8

[06:47] <linkable6> Link: https://docs.raku.org/type/IO::Handle

[06:47] <linkable6> DOC#2632 [open]: https://github.com/Raku/doc/issues/2632 [Hacktoberfest][RFE][big][docs][good first issue][help wanted][new][⚠ Top Priority ⚠] Checklist for 6.d

[06:49] *** n-dimens joined
[06:49] *** molaf left
[06:55] *** gabiruh left
[06:56] *** gabiruh joined
[06:57] *** hungryd12 joined
[07:00] *** hungrydonkey left
[07:17] *** sjm_uk left
[07:19] *** sjm_uk joined
[07:22] *** rawr is now known as grumble

[07:24] *** kensanata joined
[07:26] *** Doc_Holliwould joined
[07:29] *** gabiruh left
[07:29] *** gabiruh joined
[07:33] *** lichtkind joined
[07:33] <AlexDaniel> [Coke]: I'm curious, why this question about Blin? :)

[07:39] *** dakkar joined
[08:01] *** hungrydonkey joined
[08:03] *** hungryd12 left
[08:10] *** hungryd57 joined
[08:12] *** hungryd57 left
[08:13] *** hungrydonkey left
[08:13] *** hungrydonkey joined
[08:14] *** AlexDaniel left
[08:17] *** kst``` joined
[08:18] *** gabiruh left
[08:18] *** gabiruh joined
[08:19] *** kst`` left
[08:23] *** mayuresh joined
[08:24] *** mayuresh left
[08:27] *** AlexDaniel joined
[08:27] *** AlexDaniel left
[08:27] *** AlexDaniel joined
[08:32] *** Kaeipi left
[08:33] *** Kaiepi joined
[08:36] *** gabiruh left
[08:37] *** gabiruh joined
[08:57] *** gabiruh left
[08:57] *** gabiruh joined
[09:13] *** Benett joined
[09:15] *** Sgeo_ joined
[09:19] *** Sgeo__ left
[09:26] *** squashable6 left
[09:26] *** pecastro joined
[09:27] *** squashable6 joined
[09:30] *** sena_kun joined
[09:30] *** gabiruh left
[09:31] *** gabiruh joined
[09:34] *** gabiruh left
[09:34] *** gabiruh joined
[09:39] *** gabiruh left
[09:41] *** gabiruh joined
[09:44] *** Doc_Holliwould left
[09:55] <El_Che> weekly: new Rakudo packages for the newly released Fedora 32: https://github.com/nxadm/rakudo-pkg

[09:55] <notable6> El_Che, Noted! (weekly)

[10:00] <moritz> weekly: rakudo star 2020.01 docker images now available at https://hub.docker.com/_/rakudo-star

[10:00] <notable6> moritz, Noted! (weekly)

[10:02] <eseyman> Thank you, El_Che 

[10:04] <El_Che> eseyman++

[10:16] <lichtkind> oh man twitter suggests to follow dr forr

[10:16] <lizmat> yeah, have had that many times already  :-(

[10:18] *** lichtkind_ joined
[10:19] *** Black_Ribbon left
[10:20] <El_Che> idd, been there as well

[10:20] <El_Che> I had an github issue about one of his modules :(

[10:20] *** lichtkind left
[10:20] *** gabiruh_ joined
[10:21] *** gabiruh left
[10:21] *** mowcat joined
[10:25] <sena_kun> Maybe modules can be somehow moved to the community repo / volunteers.

[10:26] *** abraxxa left
[10:28] *** gabiruh_ left
[10:28] *** gabiruh joined
[10:30] *** abraxxa joined
[10:34] *** abraxxa left
[10:35] *** abraxxa joined
[10:41] *** bpalmer left
[10:55] *** n-dimens left
[10:56] *** Altai-man_ joined
[10:58] *** sena_kun left
[11:02] *** vike left
[11:15] *** gabiruh left
[11:15] *** gabiruh joined
[11:19] *** Doc_Holliwould joined
[11:22] *** abraxxa left
[11:25] *** abraxxa joined
[11:39] <timotimo> why is jmerelo tweeting out a raku tweet with the hashtag doxxing? i'm confused

[11:43] * lizmat as well

[11:46] *** gabiruh left
[11:46] *** gabiruh joined
[11:48] *** lichtkind_ left
[11:49] *** grumble left
[11:50] *** abraxxa1 joined
[11:51] *** abraxxa left
[11:54] *** grumble joined
[11:55] *** Doc_Holliwould left
[11:57] *** MasterDuke left
[11:59] <timotimo> antwort'd

[12:01] <lizmat> saw'd

[12:01] *** gabiruh left
[12:02] *** gabiruh joined
[12:06] *** gabiruh left
[12:07] *** gabiruh joined
[12:12] <AlexDaniel> m: my $x = 42; my &y = { say ‘foo’ }; $x++

[12:12] <camelia> rakudo-moar 5610416c8: ( no output )

[12:12] <AlexDaniel> m: my $x = 42; my &x = { say ‘foo’ }; $x++

[12:12] <camelia> rakudo-moar 5610416c8: ( no output )

[12:12] <AlexDaniel> m: my $x = 42; for ^1 { my &x = { say ‘foo’ }; $x++ }

[12:12] <camelia> rakudo-moar 5610416c8: ( no output )

[12:15] *** vike joined
[12:17] *** MasterDuke joined
[12:57] *** sena_kun joined
[12:58] *** Altai-man_ left
[13:10] *** kensanata left
[13:11] *** gabiruh left
[13:11] *** gabiruh joined
[13:24] *** kenshiro left
[13:31] *** kensanata joined
[13:36] *** brtastic joined
[13:37] *** farcas1982regreg joined
[13:42] *** daxim left
[13:44] *** mowotter joined
[13:47] *** mowcat left
[13:47] *** daxim joined
[14:02] *** Doc_Holliwould joined
[14:02] *** daxim left
[14:06] *** robertle joined
[14:07] *** aborazmeh joined
[14:07] *** aborazmeh left
[14:07] *** aborazmeh joined
[14:08] *** daxim joined
[14:09] <robertle> I am in need of a read/write lock, so one where there could be one writer/exclusive or any number of reader/non-exclusive threads at the same time. but I can't find any! am I just stupid at the moment, or do we really not already have one?

[14:14] *** daxim left
[14:15] <jnthn> robertle: I don't remember seeing a module for that either

[14:15] <jnthn> I assumed at some point I'd want it and write one, but never actually did :)

[14:16] <robertle> ah darn, I'll make one then...

[14:17] <robertle> would you mind having a look over it when I have something? 

[14:19] <jnthn> Depends. Are you going to implement read -> write upgrade? 'cus that's a special circle of hell however it's done :)

[14:19] <jnthn> But yeah, I can take a look.

[14:20] <robertle> hm, I have built a readwritelock in C on top of pthreads that does read->write upgrades, and I *think* it works, but one never knows

[14:20] *** daxim joined
[14:21] <robertle> but in the one I have you can only upgrade when there is noone else queued between your read and your wanted write, does that qualify?

[14:21] <jnthn> Yeah, that's one way to do the trade-off

[14:22] <robertle> do we already have consensus on what a fully "raku" module looks like? in terms of file extensions etc? or a good example? so I can do it the new raku way right from the start?

[14:22] <jnthn> I've also seen: 1. you might lose your read lock before you get your write lock so must recheck everything, and 2. you have to say up front it's upgradeable, and only one thread can hold an upgradeable read lock at a time.

[14:23] <jnthn> In 1 the potential to mess up is obvious. In 2 you don't have that problem, but if folks don't realize the behavior, and all reads might upgrade, they just end up with an over-priced mutex. :)

[14:23] <robertle> ah yeah, the upgradeable! I have seen that too! so other threads can get read acces before your upgrade, but not writes, that's actually nice!

[14:24] <jnthn> Well yes, except the caveat I mentioned. :)

[14:26] <robertle> overprotectionism: the guilt of parents :)

[14:27] <jnthn> I've often been lucky enough that the data I've been dealing with is small enough to just copy

[14:28] <jnthn> And then you just use a lock to serialize changes, which always produce a new object, and can read the reference without any locking

[14:28] <jnthn> (or cas if you don't mind re-work)

[14:29] <robertle> yeah, a readwritelock is often clumsy and there are better ways. actually any lock is clumsy, but it's a basic building block and at least weell known

[14:30] <robertle> .rakumod? really? is that the current thinking? it's quite a long filename extension...

[14:35] *** mowotter left
[14:36] <lizmat> robertle: quite a lot of thinking has gone into that  :-)

[14:38] <robertle> hey, I am not arguing against it! it's just I haven't paid attention and am surprised.

[14:39] <jnthn> Real Media managed to use most of the extensions that start with `r`...

[14:40] <jnthn> One doesn't type the extensions much anyway, so there's not that much reason for them to be short.

[14:43] *** robertle left
[14:48] *** Redfoxmoon left
[14:53] <timotimo> you don't often have different kinds of files in your lib/ tree so tab will get the extension every time

[14:56] *** Altai-man_ joined
[14:57] *** brtastic left
[14:58] *** sena_kun left
[14:58] *** mowcat joined
[14:59] *** Doc_Holliwould left
[15:01] *** mowcat left
[15:02] <[Coke]> AlexDaniel: starting to learn Russian. Tripped over a site suggesting блин as a "swear" you can use when you can't swear.

[15:03] <Altai-man_> [Coke], it is a dish name (a sort of pancakes, I'm having ones right now :) ) which can be, strangely enough, be used as something like "dammit", but milder.

[15:03] <tellable6> 2020-04-29T08:04:41Z #raku-dev <AlexDaniel> Altai-man: just noticed that 2020.02.1 release announcement talks a bit too much about Perl 6

[15:03] <[Coke]> In english, maybe "darn it".

[15:04] <Altai-man_> Not native enough to really feel nuances like this one, but quite possibly.

[15:11] <Altreus> I just realised I'll never know if I've fixed my library because it will not stop outputting crap

[15:11] <Altreus> :D

[15:11] <Altreus> I'm going to have to poll my buffer for likely strings

[15:13] *** Sgeo__ joined
[15:16] *** Sgeo_ left
[15:17] *** aborazmeh left
[15:21] *** __jrjsmrtn__ joined
[15:22] *** _jrjsmrtn left
[15:39] *** mayuresh joined
[15:39] <mayuresh> hello all. :)

[15:39] <mayuresh> been away for quite some time.

[15:40] <mayuresh> didn't even hear about the name change from "perl 6" to "raku" till now.

[15:40] <mayuresh> looks like all is well in raku-land. ;)

[15:40] <mayuresh> btw, i have gotten converted.

[15:40] <jnthn> Well, that's been less than a year... :)

[15:40] <mayuresh> i now proudly consume at least a glass of "pepsi" a day.

[15:41] <mayuresh> that goes against my attachment for "coke" till a month back.

[15:41] <mayuresh> but in these difficult times, i have to contend with "black tea". :p

[15:42] <mayuresh> about the conversion to "pepsi" from "coke", thanks to mr. wall. :D

[15:42] <mayuresh> jnthn, i'd been down with severe depression, had to be hospitalised.

[15:42] <mayuresh> am much better now.

[15:43] <mayuresh> a fresh start for these dreary times. ;)

[15:43] <jnthn> Ouch, not fun at all. Glad to hear you're doing better now.

[15:44] <mayuresh> yeah, it was weird, i just kept getting sucked into it.

[15:45] <mayuresh> but that's the past, and now's the present, and on to the future.

[15:45] <timotimo> yeah, the brain can be a real fucker

[15:45] *** Redfoxmoon joined
[15:46] <mayuresh> it was as if my brain craved for more of the hormones that get released when one gets depressed.

[15:46] <timotimo> it cranks the creativity way up when it's about finding bad things and bad interpretations of neutral or even good things

[15:47] <timotimo> oh yeah i hear that. as if the brain (though in the moment it really feels like "you") doesn't even want to get better

[15:47] *** Redfoxmoon left
[15:47] *** Redfoxmoon joined
[15:47] <mayuresh> i've been reading up on various articles and news reports and interviews about "raku".

[15:47] <mayuresh> found something disturbing.

[15:48] <mayuresh> is it really true that the spec is getting updated as the implementations are evolving?

[15:49] <timotimo> the "whirlpool" model of language development

[15:49] *** cpup left
[15:50] <mayuresh> :D

[15:50] <mayuresh> that was awesomely funny. :D

[15:50] <mayuresh> i think i am going to stick with good ol' perl.

[15:50] <jnthn> Nothing gets to be considered spec until something has implemented it, so in a sense the implementation of an idea has to be realized before it can be considered to go into the next language release.

[15:51] <mayuresh> okay, so the spec is getting tested by the implementations.

[15:51] <mayuresh> whether a specific item in the spec is realistic enough or not.

[15:51] <mayuresh> and if not, that item in the spec is amended!

[15:51] <mayuresh> hmnn, sounds reasonable enough.

[15:52] <mayuresh> now i'm in an emotional soup.

[15:52] <mayuresh> i really like "raku" and especially it's community.

[15:52] <timotimo> it's like alphabet soup, except every letter is a different emotion

[15:53] <mayuresh> i guess it would be worth it to hang around with "raku" for some more time.

[15:54] <jnthn> Well, once something is in the langauge spec, then implementations should try and stick to doing it that way. In fact, these days we tend to go beyond strictly what's specified (if something causes breakage to real world code, even if it doesn't go against a specification test, we'll often try to keep the behavior and clarify the spec)

[15:55] <mayuresh> cool.

[15:55] <jnthn> There's infrastructure for testing the ecosystem modules against the latest Rakudo, so we can try and avoid breaking things in new compiler releases.

[15:56] *** cpup joined
[16:00] *** hungrydonkey left
[16:02] *** kensanata left
[16:03] <mayuresh> btw, anyone has any approximation about how many more years to complete agreement between the spec and the implementation?

[16:23] <jnthn> mayuresh: The specification is versioned, so there already is agreement with the currently released version of the spec, a small bit of errata aside.

[16:23] <mayuresh> so well, it there-on ad-infinitum then.

[16:23] <jnthn> In so far as "the implementation does all that version of the spec mandates"

[16:25] <jnthn> Well yes, languages generally keep evolving until nobody cares for them to any more.

[16:25] * [Coke] is sad to see someone drinking pepsi, but you do you, people. :)

[16:25] <mayuresh> i was under the impression that mr. wall and his band of merry-people focused on working and delivering a spec first so that everybody would know what to expect in the end.

[16:26] <mayuresh> i guess i was wrong.

[16:26] <mayuresh> frankly, pepsi is a lot more gentle on my internals.

[16:26] <mayuresh> coke wreaked havoc.

[16:26] <[Coke]> mayuresh: I think what you're describing is called the "synopses" and was called the spec for a while, but now the spec is the test suite.

[16:27] <[Coke]> mayuresh: apologies from its namesake!

[16:27] <mayuresh> okay, now i am confused completely.

[16:27] <[Coke]> But yes, a lot of work went into those.

[16:27] <[Coke]> mayuresh: ... we're complicated, it's true.

[16:27] * [Coke] wonders if someone wrote this down yet.

[16:28] <mayuresh> based on what i had read about perl6, i had expected it to be a language to last us for a 100 years, at least.

[16:28] <[Coke]> we've been working on it for 20ish years, so it's a little muddy

[16:28] <mayuresh> true, quite muddy indeed.

[16:28] <[Coke]> That was (is) the plan as I understand it, yes.

[16:29] <mayuresh> if we've lost 20 years already and not yet stabilised enough for people to start using "raku" in production, we can use perl6 for another 80 years only.

[16:30] <mayuresh> given what i am reading (in parallel to this chat), i don't expect "raku" to reach a state where it would be production ready for another 10~15 years.

[16:31] <Altai-man_> >not using in production

[16:31] <Altai-man_> eh?

[16:31] <MasterDuke> people are already using it in production

[16:31] <mayuresh> like perl5.

[16:32] <mayuresh> i don't see as large a body of "raku" code in mission critical deployments as "perl5" code.

[16:32] <mayuresh> also reflected by the number of job openings.

[16:33] <Altai-man_> Chicken-egg problem. Who will adapt the software if everyone says "Oh, so it is not adapted yet, we'll wait till someone else adapts that".

[16:35] <mayuresh> looking at it another way, the "raku" execution environment still isn't as clean as "perl5".

[16:35] <mayuresh> 'nqp' feels scary.

[16:36] <mayuresh> somehow, i get the exact same feeling when i think about mr. wall's "raku" and mr. knuth's "taocp".

[16:36] <mayuresh> "let's just hope they finish it".

[16:38] *** gabiruh left
[16:39] <Altreus> I've nearly fixed all the issues \o/

[16:39] <mayuresh> :)

[16:39] <Altreus> Most of my problems were not resetting promises

[16:39] <[Coke]> mayuresh: well, if you'd like to help, give it a shot and tell us what *you* think needs work.

[16:39] <Altreus> I *knew* I should have made a class so I can just destroy the object and make a new one!

[16:40] <Altreus> I mean I still should but now I really don't want to

[16:40] <mayuresh> coke: i think it needs work on getting "finished" and certified by the group as being ready for production.

[16:41] <mayuresh> that "certification" by an authority like mr. wall, would drive people towards building applications in mission critical scenarios.

[16:42] <MasterDuke> that already happened, that was the christmas 2015 release

[16:42] <mayuresh> which in turn would snowball into a frenzy of activity in the fields of books, blogs, etc.

[16:42] <mayuresh> and then came "diwali". :p

[16:42] <timotimo> we do have a whole bunch of books

[16:42] <mayuresh> timotimo: i can see only 5 books on amazon.com

[16:42] *** dakkar left
[16:42] <mayuresh> specifically about "raku" or "perl6"

[16:43] <timotimo> https://perl6book.com/ - this has 6, but i do believe there are more already

[16:43] <timotimo> oh it actually has 9

[16:43] <[Coke]> mayuresh: "finished" isn't something concrete to work on. Not sure what you're asking here.

[16:43] <timotimo> just not in the graph at the top

[16:44] <mayuresh> i would ask for something very simple.

[16:45] <mayuresh> certify or bless a release as done for a particular version and then give it enough time (say atleast a decade) to sink in before coming out with the next version.

[16:45] <mayuresh> i really love the "ada" guys.

[16:46] <mayuresh> i liked the "c++" guys too, but their committees have gone wild off-late.

[16:47] <[Coke]> I can't imagine we're going to not change things for a decade. That seems an odd request.

[16:47] <mayuresh> certifying or blessing a release as "done" would mean, no changes to features, only performance improvements and bug fixes.

[16:47] <mayuresh> i didn't say you can't change things for a decade.

[16:47] <mayuresh> just don't certify or bless those changes.

[16:48] <mayuresh> keep them in a separate "in-the-works" branch

[16:48] <moritz> well, each release is done. All the work happens on the next release then.

[16:48] <mayuresh> which would not affect the industrial users at all.

[16:48] <mayuresh> the time between release releases is too short for the eco-system to cope up.

[16:49] <mayuresh> that's what's leading to the chicken-and-egg problem with industry adoption of "raku".

[16:50] *** cognomin_ joined
[16:52] <moritz> I don't think I buy that hypothesis

[16:54] <mayuresh> one can either be truly asleep or feint it.

[16:54] *** cognominal left
[16:54] <moritz> or have different perceptions of the reasons

[16:54] <mayuresh> may i know your perceptions of the reasons?

[16:55] <moritz> 1) no corporate backing

[16:55] <moritz> 2) problems with speed and reliability

[16:55] <mayuresh> original perl never had that either.

[16:55] <mayuresh> 1 that is

[16:55] <moritz> 3) being late to the market of general-purpose scripting languages

[16:56] <mayuresh> 2 is a release management issue.

[16:56] <moritz> 4) lack of a killer app

[16:56] <mayuresh> 3 is non consequential.

[16:56] <mayuresh> so is 4.

[16:56] <mayuresh> first get what you have to work perfectly well.

[16:57] *** sena_kun joined
[16:57] <mayuresh> only then consider calling it a version release.

[16:57] <moritz> wait what? the compiler being too slow is a release management issue?

[16:57] <mayuresh> yes.

[16:57] <moritz> if we managed our releases better, our code would run twice as fast? how?

[16:57] <mayuresh> if you delayed moving from one spec version to another you would have more time and energy to devote to improving an existing implementation.

[16:58] <moritz> you make it sound as if the compiler was playing catch-up to an ever changing spec all the time

[16:58] <moritz> that is not how it works

[16:58] <mayuresh> don't you think that's one of the issues?

[16:58] <timotimo> development of rakudo is also not a zero-sum game

[16:58] <moritz> most spec changes (in the compiler itself, not in the libraries) are driven by implementation issues, not the other way round

[16:58] <timotimo> people work on whatever they feel comfortable with

[16:59] *** Altai-man_ left
[16:59] <mayuresh> i think one more problem is with the management of the project.

[16:59] <mayuresh> while i love and respect mr. wall, i think it would bode well to have sub-benevolent-dictators working under his authority, managing the sub-sections of the project.

[17:00] <[Coke]> spec changes are very gradual and are not causing us to rewrite the implementation to play catch up. not at all.

[17:00] <[Coke]> mayuresh: You keep talking about Larry, but you may notice he's not around much these days, and that is already the way things work

[17:00] <moritz> Larry hasn't been involved much with the development of either the language or the compiler in the past 2ish years

[17:00] <[Coke]> You  might want to catch up with the current state of the project so that your feedback can catch up as well.

[17:00] <mayuresh> true.

[17:01] <[Coke]> I do appreciate the effort to help, though. Thank you!

[17:01] <mayuresh> i've been away for almost 8 years.

[17:01] <mayuresh> just inquiring, why isn't mr. wall active anymore?

[17:01] <mayuresh> i mean 2 years is a long time, hope he's in good health.

[17:02] <moritz> mayuresh: I'd encourage you to read a few issues of https://rakudoweekly.blog/ it gives a good idea what's going on in Raku land

[17:02] <mayuresh> thanks.

[17:02] <mayuresh> also moritz i subscribed to your perl 6 book mailing list. :)

[17:03] <moritz> ah nice. Guess I should write there again soon :D

[17:05] <moritz> honestly I don't know much about Larry's health these days. Last time I met him at a conference, his health wasn't stellar, but he was coping

[17:05] <mayuresh> man, that's sad news.

[17:06] <moritz> he stepped up when the language renaming issue came up; I don't think I've seen him actively invoved with raku since then

[17:06] <mayuresh> he's only 66 isn't he?

[17:06] <mayuresh> or rather will be on 27th sep.

[17:08] <mayuresh> is his addiction to "pepsi" doing him in?

[17:09] *** eseyman left
[17:10] *** Doc_Holliwould joined
[17:11] <mayuresh> off-topic question; does anyone know how to change the irc handle?

[17:11] *** chloekek joined
[17:11] <mayuresh> i would like to acquire a different one.

[17:11] <mayuresh> while being attached to my email address as the one right now.

[17:12] <timotimo> every time i need to change something i just /msg nickserv help

[17:12] <mayuresh> aha, thanks for that tip.

[17:13] *** maggotbrain left
[17:20] *** mayuresh is now known as kathe

[17:24] *** kathe left
[17:32] *** cognominal joined
[17:36] *** cognomin_ left
[17:45] <gfldex> I'm trying to write to a fifo. Both put and write don't acually write anything to the fifo. Is there a trick to it?

[17:46] <timotimo> i assume on the other side there's a consumer reading from it?

[17:46] <gfldex> yes

[17:46] <gfldex> tail -f /tmp/out.fifo

[17:47] <timotimo> is it buffering, i wonder?

[17:47] <gfldex> works well with `echo "foo" > /tmp/out.fifo`

[17:47] <gfldex> i did try to flush it

[17:47] <timotimo> on my end it immediately works

[17:47] <gfldex> I will check with a huge string (did only large yet).

[17:47] <timotimo> tail -f on the fifo, `given "blerp".IO.open(:w) { .put("hello") }` on the other end

[17:48] <gfldex> timotimo: that simple example works for me too

[17:49] <timotimo> that means it's getting more interesting :)

[17:51] <gfldex> I got the .put in a Supply. Might that interfere?

[17:53] <gfldex> my $f = "/tmp/out.fifo".IO.open(:w);  $f.put: "start"; react whenever Supply.interval(1) { $f.put("hello"); }

[17:54] <gfldex> that will .put "start" into the fifo but not "hello"

[17:55] <gfldex> it's not fifo related

[17:55] <gfldex> does the same with a normal file

[17:56] <gfldex> adding .flush works for a normal file

[17:57] <gfldex> a fifo is not taking the .flush

[17:57] *** natrys joined
[17:58] *** cpup left
[18:00] <timotimo> interesting

[18:00] <timotimo> ho-hum, the supervisor thread is quite noisy on strace

[18:01] <gfldex> a fifo needs a .close to acually flush it seams

[18:02] <timotimo> i always get the "start" immediately, though

[18:02] <gfldex> shall I rakudobug?

[18:03] <timotimo> let me filter out the noise from an strace and see what happens

[18:03] <gfldex> ok

[18:07] <gfldex> .open .put .close on each write works as a workaround

[18:07] <timotimo> "ping" doesn't even show up in the strace log at all (that's what i put into the fifo)

[18:08] <gfldex> Whereby I'm not sure how fifos should work in c-land. Those c-guys have strange habits.

[18:11] *** sjm_uk left
[18:12] <timotimo> i tried with :a, with :!buffer, and :bin

[18:12] <timotimo> nothing in the strace log for some reason

[18:13] <timotimo> wtf

[18:13] <timotimo> when i flush it, it works

[18:13] <timotimo> it refuses to continue when the tail isn't running and it dies when i kill the tail on the other side

[18:13] <timotimo> with "broken pipe"

[18:18] <gfldex> killing the tail is supposed to close the fifo on your end

[18:18] <gfldex> well, the file handle of that fifo

[18:19] <gfldex> That's how the OS tells you that nobody listens anymore

[18:46] *** eseyman joined
[18:47] *** andrzejku left
[18:50] *** brtastic joined
[18:56] *** Altai-man_ joined
[18:58] *** sena_kun left
[19:09] *** daxim left
[19:10] <timotimo> yeah

[19:10] <timotimo> the wtf was for "why does it work fine for me but not for you"

[19:14] *** daxim joined
[19:33] *** natrys left
[19:46] *** natrys joined
[20:04] *** kst``` left
[20:04] *** MasterDuke left
[20:04] *** natrys left
[20:12] *** MasterDuke joined
[20:14] <chloekek> Fifos are well-documented in man 7 fifo and man 7 pipe.

[20:15] <chloekek> You can’t open a fifo for writing if there aren’t any readers, you’ll get ENXIO.

[20:15] <chloekek> And AFAIK writes block until the other side reads. If the other side disappears while you write you get SIGPIPE (which MoarVM ignores) and EPIPE.

[20:16] <chloekek> And AFAIK when that happens the fifo is still _open_ on your end, you just can’t write to it. You have to close it yourself.

[20:17] <chloekek> It may work differently on different machines if they have different implementations of POSIX pipes. For instance, a Darwin vs a Linux machine.

[20:18] <chloekek> Once you have figured out how pipes work, you then have to learn MoarVM’s quirks on top of them, and Rakudo’s quirks on top of that, because every layer adds more mystery in your debugging journies.

[20:19] <chloekek> You will dsicover the endless well of joy that is cross-platform abstractions and built-in convenience.

[20:35] *** silug joined
[20:45] *** silug left
[20:46] *** silug joined
[20:49] *** brtastic left
[20:57] *** sena_kun joined
[20:58] *** Altai-man_ left
[21:20] *** Black_Ribbon joined
[21:35] *** chloekek left
[21:36] *** rindolf left
[21:50] *** aborazmeh joined
[21:50] *** aborazmeh left
[21:50] *** aborazmeh joined
[21:53] *** mowcat joined
[22:01] *** sena_kun left
[22:09] *** mowotter joined
[22:11] *** mowcat left
[22:25] *** gdonald joined
[22:30] *** farcas1982regreg left
[22:57] *** clarkema joined
[23:02] *** clarkema left
[23:05] <AlexDaniel> moritz: you should probably disable security updates here: https://help.github.com/en/github/managing-security-vulnerabilities/configuring-automated-security-updates#managing-automated-security-updates-for-your-repository

[23:05] <AlexDaniel> moritz: https://github.com/moritz/perl6-all-modules/pull/5

[23:08] <Grinnz> huh. neat feature though

[23:14] <daxim> I need you as an internet army.  please leave a thumbs up (+1) at <https://github.com/Deleplace/programming-idioms/issues/90> so that raku is added to the chrestomathy site <https://www.programming-idioms.org/about#about-block-language-coverage>.

[23:14] <daxim> the author explicitely wants and invites that feedback, see <https://news.ycombinator.com/item?id=23017341>.

[23:19] <AlexDaniel> daxim: where's the source for actual idioms?

[23:20] <daxim> what do you mean by "source"?

[23:20] <AlexDaniel> daxim: how can I contribute Raku snippets to that website?

[23:21] <AlexDaniel> oooooooh I see

[23:21] <AlexDaniel> it's right on the website

[23:21] <daxim> first the admin needs to add raku, that was the point of my call to action.  once that's done, any web user can just submit code via web form.  account is not required.

[23:21] <AlexDaniel> okay, yeah! I see

[23:44] *** pecastro left
