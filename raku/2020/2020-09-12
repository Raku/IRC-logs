[00:19] *** skids left
[00:27] *** gordonfish joined
[00:38] *** hungrydonkey left
[00:48] <[Coke]> 32 ballots

[00:56] <[Coke]> ah, great. still can't do any HTTP stuff because "Abort trap 6". happens with cro, happens with HTTP::UserAgent...

[00:56] <[Coke]> not good feels that this has been broken on the mac for months.

[01:02] *** aborazmeh left
[01:02] *** leont left
[01:05] * [Coke] will try to figure it out again this week

[01:11] *** dataange` joined
[01:12] *** __jrjsmrtn__ joined
[01:13] *** molaf left
[01:13] *** _jrjsmrtn left
[01:14] *** dataange` left
[01:14] *** dataangel left
[01:14] *** dataangel joined
[01:25] *** molaf joined
[01:44] *** raku-bridge left
[01:48] *** yuplushi left
[02:11] <tbrowder> have you tried LibCurl?

[02:12] <tbrowder> on linux it works well

[02:12] *** Doc_Holliwould left
[02:39] *** yuplushi joined
[02:56] *** mowcat joined
[03:04] *** mowcat left
[03:20] *** skids joined
[03:50] *** ensamvarg3 joined
[04:27] <Xliff> Who works on the Atom syntax highlighting for Raku?

[04:46] *** kylese joined
[05:05] *** xinming left
[05:06] *** Kaiepi left
[05:06] *** Kaiepi joined
[05:24] *** aborazmeh joined
[05:24] *** aborazmeh left
[05:24] *** aborazmeh joined
[05:49] *** kerframil left
[05:52] *** yuplushi left
[06:15] *** sena_kun joined
[06:17] *** Kaiepi left
[06:17] *** Kaiepi joined
[06:28] *** billN1VUX left
[06:34] *** wamba joined
[06:35] <Geth> ¦ doc: 695e06e2b3 | rir++ (committed by Juan Julián Merelo Guervós) | doc/Language/modules.pod6

[06:35] <Geth> ¦ doc: Update modules.pod6

[06:35] <Geth> ¦ doc: 

[06:35] <Geth> ¦ doc: Three small text tunings: 

[06:35] <Geth> ¦ doc: 

[06:35] <Geth> ¦ doc: 1)  'include path' appears to not be a Raku term.  

[06:35] <Geth> ¦ doc: 2) 'searched ... when Rakudo is started' seems misleading at best.  I think it is just wrong  as a command is needed to place an order for a module.  I don't know what Raku does with core modules but that seems off-topic or arcana here--doubtfully worth a mention or link.

[06:35] <Geth> ¦ doc: 3) 'recursively' seems wrong and just an implementation detail.  Isn't the list linearly searched and then mangling or such grabs a module.

[06:35] <linkable6> Link: https://docs.raku.org/language/modules

[06:35] <Geth> ¦ doc: 

[06:35] <Geth> ¦ doc: If someone knows offhand where this RAKULIB search code is,  please give me a pointer.

[06:35] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/695e06e2b3

[06:44] *** Xliff left
[07:13] *** kylese left
[07:18] *** stoned75 joined
[07:24] *** Altai-man joined
[07:24] *** jhill left
[07:25] *** kawaii left
[07:26] *** CIAvash left
[07:26] *** sena_kun left
[07:27] *** peteretep left
[07:27] *** pierrot left
[07:28] <Geth> ¦ doc: a68c041d1a | (JJ Merelo)++ | doc/Language/variables.pod6

[07:28] <Geth> ¦ doc: Eliminates anchor

[07:28] <Geth> ¦ doc: 

[07:28] <Geth> ¦ doc: Which was left there apparently when a new section was added. Closes #3628

[07:28] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a68c041d1a

[07:28] <Geth> ¦ doc: c41093a4c3 | (JJ Merelo)++ | doc/Language/variables.pod6

[07:28] <Geth> ¦ doc: Improving slightly the description of %?RESOURCES

[07:28] <Geth> ¦ doc: 

[07:28] *** pierrot_ joined
[07:28] <linkable6> Link: https://docs.raku.org/language/variables

[07:28] <Geth> ¦ doc: Some of the concerns in #3095 had already been addressed, as well as the original title of #3205 (it's evolved now). But it really needs the support of the documentation of Distribution::Resources, which has not been done so far.

[07:28] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/c41093a4c3

[07:28] <linkable6> DOC#3628 [closed]: https://github.com/Raku/doc/issues/3628 [docs] Indexing of %?RESOURCES

[07:28] *** peteretep joined
[07:28] <linkable6> DOC#3095 [open]: https://github.com/Raku/doc/issues/3095 [bug] Wrong advice in modules documentation

[07:28] *** jhill joined
[07:28] <linkable6> DOC#3205 [open]: https://github.com/Raku/doc/issues/3205 [bug] Explanation for %?RESOURCES needs to be improved.

[07:28] *** CIAvash joined
[07:28] *** kawaii joined
[07:29] *** daxim left
[07:31] *** mark[m]8 joined
[07:31] *** mark[m]8 is now known as marcoco[m]

[07:31] <Geth> ¦ doc: 1a367996cd | (JJ Merelo)++ | doc/Language/variables.pod6

[07:32] <Geth> ¦ doc: Eliminating double-barrel indexing, closes #3628 -- again

[07:32] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1a367996cd

[07:32] <linkable6> Link: https://docs.raku.org/language/variables

[07:32] <linkable6> DOC#3628 [closed]: https://github.com/Raku/doc/issues/3628 [docs] Indexing of %?RESOURCES

[07:32] *** DarthGandalf left
[07:32] *** skids left
[07:33] *** DarthGandalf joined
[07:38] *** aborazmeh left
[07:47] *** daxim joined
[07:51] *** yuplushi joined
[07:58] *** Doc_Holliwould joined
[08:13] *** mst left
[08:36] *** andrzejku left
[08:44] *** cpan-raku left
[08:45] *** cpan-raku joined
[08:45] *** cpan-raku left
[08:45] *** cpan-raku joined
[08:49] *** domidumont joined
[09:36] *** aborazmeh joined
[09:36] *** aborazmeh left
[09:36] *** aborazmeh joined
[09:42] *** molaf left
[09:47] *** gugod_ joined
[09:48] *** gugod_ is now known as gugod

[09:48] *** MasterDuke left
[09:50] *** pecastro joined
[10:09] *** Doc_Holliwould left
[10:21] *** aborazmeh left
[10:26] *** Black_Ribbon left
[10:29] *** Sgeo left
[10:43] *** JJMerelo joined
[10:48] *** cgfbee left
[10:50] *** cgfbee joined
[11:03] <JJMerelo> releasable6: status

[11:03] <tellable6> 2020-09-11T22:30:59Z #raku <ggoebel> JJMerelo where can the results for the current survey be found?

[11:03] <releasable6> JJMerelo, Next release in ≈7 days and ≈7 hours. 2 blockers. Changelog for this release was not started yet

[11:03] <releasable6> JJMerelo, Details: https://gist.github.com/4ebc21ba7e71c847b02e63f0979a3109

[11:04] <JJMerelo> .tell ggoebbel Not finished yet, and I don't want to skew responses by posting them; however, in a day or two I will probably close it and post results at the p6-survey repo.

[11:04] <tellable6> JJMerelo, I'll pass your message to ggoebel

[11:19] *** leont joined
[11:19] *** cpan-raku left
[11:24] *** stoned75 left
[11:25] *** sena_kun joined
[11:25] *** stoned75 joined
[11:27] *** Altai-man left
[11:31] *** MasterDuke joined
[11:35] *** JJMerelo left
[11:36] <Geth> ¦ doc/hashmap-xref: 57582e30b2 | (Stoned Elipot)++ | doc/Language/hashmap.pod6

[11:36] <Geth> ¦ doc/hashmap-xref: xref Hash and format type name as code

[11:36] <Geth> ¦ doc/hashmap-xref: review: https://github.com/Raku/doc/commit/57582e30b2

[11:38] <Geth> ¦ doc: stoned++ created pull request #3630: xref Hash and format type name as code

[11:38] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3630

[11:48] <Geth> ¦ doc/hashmap-fix-formatting: f03768f33c | (Stoned Elipot)++ | doc/Language/hashmap.pod6

[11:48] <Geth> ¦ doc/hashmap-fix-formatting: fix formatting code

[11:48] <Geth> ¦ doc/hashmap-fix-formatting: review: https://github.com/Raku/doc/commit/f03768f33c

[11:48] <Geth> ¦ doc: stoned++ created pull request #3631: fix formatting code

[11:48] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3631

[11:51] *** rindolf joined
[12:01] *** BenGoldberg joined
[12:06] *** BenGoldberg left
[12:09] *** yuplushi left
[12:20] *** BenGoldberg joined
[12:29] *** BenGoldberg left
[12:37] *** molaf joined
[12:51] *** yuplushi joined
[13:13] *** yuplushi left
[13:14] <Geth> ¦ doc: 9a9e54d323 | (Stoned Elipot)++ (committed by Juan Julián Merelo Guervós) | doc/Language/hashmap.pod6

[13:14] <Geth> ¦ doc: xref Hash and format type name as code

[13:14] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/9a9e54d323

[13:14] <linkable6> Link: https://docs.raku.org/language/hashmap

[13:15] <Geth> ¦ doc: b6bc58c0f7 | (Stoned Elipot)++ (committed by Juan Julián Merelo Guervós) | doc/Language/hashmap.pod6

[13:15] <Geth> ¦ doc: fix formatting code

[13:15] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/b6bc58c0f7

[13:16] *** Xliff joined
[13:16] <Xliff> \o

[13:28] *** wamba left
[13:33] *** wamba joined
[13:36] *** wamba left
[13:47] <[Coke]> so many ballots gmail thinks are "Luxembourgish"

[13:48] <[Coke]> 33

[13:48] <[Coke]> (I expected more voting, honestly)

[13:50] * sena_kun suspects lack of promotion, but not sure how to put a big red sign in front of all relevant people and is sure that'll mostly just annoy even if possible

[13:52] *** dog_star joined
[13:53] *** pnu__ left
[13:53] *** pnu__ joined
[14:07] *** wamba joined
[14:08] *** wamba left
[14:08] *** natrys joined
[14:13] *** Doc_Holliwould joined
[14:15] *** yuplushi joined
[14:24] *** wamba joined
[14:24] *** wamba left
[14:28] <Geth> ¦ Raku-Steering-Council/main: 0a8c53b727 | Coke++ | scripts/tally.raku

[14:28] <Geth> ¦ Raku-Steering-Council/main: display average number of votes

[14:28] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/0a8c53b727

[14:36] <Geth> ¦ Raku-Steering-Council/main: f4b3ee1e10 | Coke++ | scripts/tally.raku

[14:36] <Geth> ¦ Raku-Steering-Council/main: show 1 decimal on the average.

[14:36] <Geth> ¦ Raku-Steering-Council/main: 

[14:36] <Geth> ¦ Raku-Steering-Council/main: (4 is misleading when it's closer to 4.5)

[14:36] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/f4b3ee1e10

[14:41] <[Coke]> 33 ballots reporting (Average votes per ballot: 4.5)

[14:56] *** tejr left
[14:57] *** tejr joined
[15:06] *** skids joined
[15:17] *** Doc_Holliwould left
[15:22] *** aborazmeh joined
[15:22] *** aborazmeh left
[15:22] *** aborazmeh joined
[15:22] *** chloekek joined
[15:24] *** Altai-man joined
[15:26] *** sena_kun left
[15:34] <Juerd> 15:48 < [Coke]> (I expected more voting, honestly)

[15:34] <Juerd> I think maybe it isn't clear to people that they can

[15:35] * masak looks around, as if waking up from a daze

[15:35] <masak> a... vote?

[15:36] <Juerd> https://github.com/Raku/Raku-Steering-Council/blob/main/announcements/20200720.md

[15:36] * masak reads

[15:39] *** aborazmeh left
[15:39] <tadzik> hm, I read it and am confused

[15:40] <tadzik> there's people listed on https://github.com/Raku/Raku-Steering-Council/blob/main/announcements/20200720.md and there's people listed on https://github.com/Raku/Raku-Steering-Council/blob/main/nominations/2020/voting-form.md, and there's an overlap

[15:41] <tadzik> and because of that overlap, I'm not sure what the vote is for

[15:42] <tadzik> if it's a vote for members of the Steering Council, then why is there an option to vote for, e.g. lizmat if she's already on the list in the first link?

[15:45] <moritz> tadzik: lizmat proposed that there be a steering committee (hence she's on the announcement), and she's also running as candidate to be on the RSC

[15:45] *** Doc_Holliwould joined
[15:45] *** chloekek left
[15:49] *** aluaces left
[15:54] *** stoned75 left
[15:55] *** silug0 joined
[15:56] *** mst joined
[15:56] *** silug left
[15:56] *** silug0 is now known as silug

[16:01] *** stoned75 joined
[16:13] <timotimo> the Foo::<some unicode symbol that i can't identify>Foo thing in blin gets a 404 on modules.raku.org as well. i wonder where exactly that happens

[16:17] <[Coke]> tadzik: list one: "these people support the election of...". list two: "the candidates below..."

[16:18] * [Coke] is pretty sure both tadzik & masak are eligible to vote if they want

[16:19] <[Coke]> This is the first vote to elect members of the RSC - the C doesn't exist yet.

[16:20] <[Coke]> https://github.com/Raku/Raku-Steering-Council/tree/main/nominations/2020 has info about the candidates if you want to read that.

[16:21] <guifa> Is there a way to to have a github action modify a file in the repository?  Would be cool for Intl::X to update the README with language stats with each new commit

[16:27] <timotimo> pretty much all the proposals for nominees are very compelling

[16:36] <MasterDuke> agreed

[16:45] <Xliff> guida: You mean a pre-commit hook or something?

[16:45] *** wamba joined
[16:45] <timotimo> oh gosh darn it, i somehow put one too many Xes on my ballot

[16:45] <timotimo> why would counting be difficult

[16:50] *** stoned75 left
[16:56] <[Coke]> You can resubmit with the correct number, that's fine.

[16:58] *** wamba left
[16:58] <timotimo> right, now i have to eliminate someone

[17:07] <[Coke]> great. Latest message's internal format breaks tally.raku

[17:08] <[Coke]> (ran the tally against the vote, noted that that average count per ballot went down a whole .1)

[17:09] <[Coke]> looks like the first chunk (the textual chunk) was converted to a single line then line wrapped, instead of preserving \ns)

[17:11] <Altai-man> Hmm. Let's say I have a list and I want to break it into two, where 1, 3, 5 go into A and 2, 4... go into B.

[17:11] <Altai-man> m: say <a b c d e>.pairs.categorize(*.key %% 2).map(*.value)

[17:11] <camelia> rakudo-moar 85847d2f1: OUTPUT: «([1 => b 3 => d] [0 => a 2 => c 4 => e])␤»

[17:11] <Altai-man> I am not really sure I like this approach.

[17:11] <timotimo> m: my (@l, @r); say <a b c d e>.map(-> $a, $b? { @l.push: $a; @r.push: $b }); dd @l; dd @r

[17:11] <camelia> rakudo-moar 85847d2f1: OUTPUT: «([b] [b d] [b d (Mu)])␤Array @l = ["a", "c", "e"]␤Array @r = ["b", "d", Mu]␤»

[17:12] <timotimo> m: my (@l, @r); say <a b c d e>.map(-> $a, $b? { @l.push: $a; @r.push($_) with $b }); dd @l; dd @r

[17:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «([b] [b d])␤Array @l = ["a", "c", "e"]␤Array @r = ["b", "d"]␤»

[17:12] <Altai-man> This is not very functional, but I can take it.

[17:12] <Altai-man> timotimo++

[17:12] <timotimo> yeah, true, it's not

[17:13] <Altai-man> Functional as in FP.

[17:13] <timotimo> i know

[17:14] <timotimo> also depends on whether it's fine to cache the incoming list, this may be acceptable:

[17:16] <timotimo> m: my @input = <a b c d e f g h>; my @l = @input[1, 3 ... *]; my @r = @input[2, 4 ... *]; dd @l, @r

[17:16] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Array @l = ["b", "d", "f", "h"]␤Array @r = ["c", "e", "g"]␤»

[17:17] <Xliff> m: my (@l, @m, @r); say <a b c d e f g h>.map(-> $a, $b?, $c? { @l.push: $a; @m.push($_) with $b; @r.push($_) with $c }); dd @l; dd @r

[17:17] <camelia> rakudo-moar 85847d2f1: OUTPUT: «([c] [c f])␤Array @l = ["a", "d", "g"]␤Array @r = ["c", "f"]␤»

[17:17] <Xliff> m: my (@l, @m, @r); say <a b c d e f g h>.map(-> $a, $b?, $c? { @l.push: $a; @m.push($_) with $b; @r.push($_) with $c }); dd @l; dd @m; dd @r

[17:17] <camelia> rakudo-moar 85847d2f1: OUTPUT: «([c] [c f])␤Array @l = ["a", "d", "g"]␤Array @m = ["b", "e", "h"]␤Array @r = ["c", "f"]␤»

[17:20] *** cpan-raku joined
[17:20] *** cpan-raku left
[17:20] *** cpan-raku joined
[17:28] <Xliff> m": my %h = ( name => 'me', number => 4, suit => 'hearts' ); -> (:$name, :suit(:$s), :$number) { ($name, $s, $number).say }(%h)

[17:28] <Xliff> m: my %h = ( name => 'me', number => 4, suit => 'hearts' ); -> (:$name, :suit(:$s), :$number) { ($name, $s, $number).say }(%h)

[17:28] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(me hearts 4)␤»

[17:28] *** aborazmeh joined
[17:28] *** aborazmeh left
[17:28] *** aborazmeh joined
[17:28] <[Coke]> trying to work around the badly formatted ballot, now I see a vote for @l=\nizmat

[17:29] <Xliff> m: my %h = ( name => 'me', number => 4, suit => 'hearts' ); -> (:$name, :suit(:$s), :$number) { ($s, $suit, $number).say }(%h)

[17:29] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$suit' is not declared␤at <tmp>:1␤------> 3> (:$name, :suit(:$s), :$number) { ($s, 7⏏5$suit, $number).say }(%h)␤»

[17:29] <Xliff> m: my %h = ( name => 'me', number => 4, suit => 'hearts' ); -> (:$name, :suit(:$s), :$number) { ($s, $name, $number).say }(%h)

[17:29] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(hearts me 4)␤»

[17:29] <Xliff> Ohh... sensible decomp FTW

[17:29] <timotimo> [Coke]: is that how gmail escapes a newline? with an = sign?

[17:30] <Grinnz> sounds like it got infected with mime

[17:30] <[Coke]> timotimo: not in yours.

[17:31] <[Coke]> timotimo: yours is just ... word wrapped. but now that I'm trying to deal with that, I see others that are using =0A *AND* =(literal newline) in the same body

[17:31] <[Coke]> so it's probably good I tripped over this. I may end up having to just manually count everything.

[17:32] <[Coke]> (some of those other votes may have missed a vote, if two [X]s appeared on the same wrapped line

[17:32] <Xliff> m: my %h = ( him => 'me', her => 4, hi => 'hearts' ); -> (:him(:her(:$hi))) { $hi.say }(%h)

[17:32] <camelia> rakudo-moar 85847d2f1: OUTPUT: «2 unexpected named arguments passed (him,her) in sub-signature␤  in block <unit> at <tmp> line 1␤␤»

[17:33] <Xliff> m: my %h = ( him => 'me', her => 4, hi => 'hearts' ); -> :him(:her(:$hi)) { $hi.say }(%h)

[17:33] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Too many positionals passed to '<anon>'; expected 0 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[17:33] <Xliff> m: my %h = ( him => 'me', her => 4, hi => 'hearts' ); -> (:him(:her(:$hi))) { $hi.say }(%h)

[17:33] <camelia> rakudo-moar 85847d2f1: OUTPUT: «2 unexpected named arguments passed (him,her) in sub-signature␤  in block <unit> at <tmp> line 1␤␤»

[17:33] <Xliff> m: my %h = ( her => 4, hi => 'hearts' ); -> (:him(:her(:$hi))) { $hi.say }(%h)

[17:33] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unexpected named argument 'her' passed in sub-signature␤  in block <unit> at <tmp> line 1␤␤»

[17:34] <Xliff> ^^ Not what I expected.

[17:34] <timotimo> m: -> (:him(:her(:$hi))) { }.signature.say

[17:34] <camelia> rakudo-moar 85847d2f1: OUTPUT: «($ (:him(:her(:$hi))))␤»

[17:35] <timotimo> m:  my %h = ( her => 4, hi => 'hearts' ); say %h.Capture.raku

[17:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: «\(:her(4), :hi("hearts"))␤»

[17:35] <Xliff> m: my %h = ( s => 4, hi => 'hearts' ); -> (:him(:her(:$hi))) { $hi.say }(%h)

[17:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unexpected named argument 's' passed in sub-signature␤  in block <unit> at <tmp> line 1␤␤»

[17:35] <timotimo> m:  my %h = ( her => 4, hi => 'hearts' ); say %h.Capture.list; say %h.Capture.hash

[17:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: «()␤Map.new((her => 4, hi => hearts))␤»

[17:36] <Xliff> m: my %h = ( s => 4, hi => 'hearts' ); -> (:s(:$steve), :$hi) { ($hi, $steve).say }(%h)

[17:36] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(hearts 4)␤»

[17:37] <Xliff> Hmmm... Would be nice if I could use decomp to pull out just one key in a var.

[17:37] <timotimo> not sure how exactly you mean that?

[17:37] <Xliff> m: my %h = ( s => 4, hi => 'hearts' ); -> (:$hi) { $hi.say }(%h)

[17:37] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unexpected named argument 's' passed in sub-signature␤  in block <unit> at <tmp> line 1␤␤»

[17:38] <Xliff> ^^ Should just return 'hearts'

[17:38] <Xliff> m: my %h = ( s => 4, hi => 'hearts' ); -> (:$hi, *%) { $hi.say }(%h)

[17:38] <timotimo> oh

[17:38] <camelia> rakudo-moar 85847d2f1: OUTPUT: «hearts␤»

[17:38] <Xliff> \o/

[17:38] <timotimo> yeah, like that will do it

[17:39] <[Coke]> timotimo: looks like your client isn't following quoted printable and just left off the ='s.

[17:41] *** orinthe left
[17:41] *** orinthe joined
[17:46] <[Coke]> how to use s/// with a code block in the replacement?

[17:46] <[Coke]> (and using the text of the match)

[17:46] <timotimo> i would recommend the s[] = syntax

[17:47] <[Coke]> m: "test" ~~ s/ 'e' / { ~$0.uc } /

[17:47] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Use of Nil in string context␤  in block  at <tmp> line 1␤Cannot modify an immutable Str (test)␤  in block <unit> at <tmp> line 1␤␤»

[17:47] <timotimo> m: my $_ = "hello coke how are you"; s:g[\w+] = .comb.pick(*).join(""); .say

[17:47] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol '$_'.␤    at <tmp>:1␤    ------> 3my $_7⏏5 = "hello coke how are you"; s:g[\w+] = ␤ohcoulr oek hwaoe le y  o korho ulcahoeywle e reuyhloac  le kewhoo o eyuech arholo  okeolw   eheowaoor…»

[17:47] <timotimo> m: $_ = "hello coke how are you"; s:g[\w+] = .comb.pick(*).join(""); .say

[17:47] <camelia> rakudo-moar 85847d2f1: OUTPUT: «o wroy euaokh elloe hc hooowrcy eel e aklh ou ukocholeyw  eahrlo o e ceohroylau eh weoklo   ehuo lco we eloa oyrkh␤»

[17:47] <timotimo> m: $_ = "hello coke how are you"; s:g[\w+] = $/.comb.pick(*).join(""); .say

[17:48] <camelia> rakudo-moar 85847d2f1: OUTPUT: «elohl ocek woh era uyo␤»

[17:48] <timotimo> m: $_ = "hello coke how are you"; s:g[\w+] = $/.comb.pick(*).join(""); .say

[17:48] <camelia> rakudo-moar 85847d2f1: OUTPUT: «holle ocek ohw era uoy␤»

[17:48] <[Coke]> m: my $_ = "test"; s:g['e'] = { ~$0.uc }; .say

[17:48] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol '$_'.␤    at <tmp>:1␤    ------> 3my $_7⏏5 = "test"; s:g['e'] = { ~$0.uc }; .say␤tst␤Block object coerced to string (please use .gist or .raku to do that)␤  in block <unit> at <tmp>…»

[17:48] <[Coke]> m: my $_ = "test"; s:g['e'] = ~$0.uc; .say

[17:48] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol '$_'.␤    at <tmp>:1␤    ------> 3my $_7⏏5 = "test"; s:g['e'] = ~$0.uc; .say␤tst␤Use of Nil in string context␤  in code  at <tmp> line 1␤»

[17:49] <[Coke]> m: $_ = "test"; s:g['e'] = ~$0.uc; .say

[17:49] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Use of Nil in string context␤tst␤  in code  at <tmp> line 1␤»

[17:49] <[Coke]> m: $_ = "test"; s:g['e'] = *.uc; .say

[17:49] <camelia> rakudo-moar 85847d2f1: OUTPUT: «WhateverCode object coerced to string (please use .gist or .raku to do that)␤tst␤  in block <unit> at <tmp> line 1␤»

[17:49] <[Coke]> m: $_ = "test"; s:g['e'] = $/.uc; .say

[17:49] <camelia> rakudo-moar 85847d2f1: OUTPUT: «tEst␤»

[17:49] <[Coke]> bleargh.

[17:49] <[Coke]> dislike syntax that forces me into $_

[17:49] <[Coke]> thanks, timotimo.

[17:50] <timotimo> do we have S[]= syntax?

[17:50] <timotimo> m: say S:g[a] = $/ ~ <u i a e o>.pick given "hello coke how are you"

[17:50] <camelia> rakudo-moar 85847d2f1: OUTPUT: «hello coke how aore you␤»

[17:50] <timotimo> haha i only put a single a in there

[17:50] <timotimo> i'% brilliant

[17:50] <timotimo> m: say S:g[<[uiaeo]>] = $/ ~ <u i a e o>.pick given "hello coke how are you"

[17:50] <camelia> rakudo-moar 85847d2f1: OUTPUT: «heelloo coukeu hoow aoreo youuo␤»

[17:51] <timotimo> [Coke]: look pa, no $_

[17:55] *** aluaces joined
[18:00] <Geth> ¦ doc: ccc959d745 | (JJ Merelo)++ | doc/Type/Distribution/Resource.pod6

[18:00] <Geth> ¦ doc: Writes stub for Distribution::Resource

[18:00] <Geth> ¦ doc: 

[18:00] <Geth> ¦ doc: Starting to address part of #3043 and #3629

[18:00] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/ccc959d745

[18:00] <Geth> ¦ doc: f401eec3a5 | (JJ Merelo)++ | doc/Type/Distribution/Resource.pod6

[18:00] <Geth> ¦ doc: First version

[18:00] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/f401eec3a5

[18:00] <linkable6> Link: https://docs.raku.org/type/Distribution::Resource

[18:00] <Geth> ¦ doc: d23b8da6d4 | (JJ Merelo)++ | doc/Type/Distribution/Resource.pod6

[18:00] <Geth> ¦ doc: First attempt at Distribution::Resource

[18:00] <linkable6> DOC#3043 [open]: https://github.com/Raku/doc/issues/3043 [big][docs][new] Document the CompUnit namespace, or at least the part of it that's spec

[18:00] <Geth> ¦ doc: 

[18:00] <linkable6> DOC#3629 [open]: https://github.com/Raku/doc/issues/3629 [docs] Document Distribution::Resources and Distribution::Resource

[18:00] <Geth> ¦ doc: This refs mainly #3629, although it also tries to adress #3043.

[18:00] <Geth> ¦ doc: It is a functional description, rather than a syntactic description; as a matter of fact, it's probably not sensible to describe one by one all the "IO" look-alike methods it's got, but a high-level one.

[18:00] <Geth> ¦ doc: 

[18:00] <Geth> ¦ doc: Not even the introduction is ready, it needs some work:

[18:00] <Geth> ¦ doc: 

[18:00] <Geth> ¦ doc: * Adds usage of "libraries" in "is native"

[18:00] <Geth> ¦ doc: * Using resources directly.

[18:00] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/d23b8da6d4

[18:01] <Geth> ¦ doc: 1b016d141f | (JJ Merelo)++ | type-graph.txt

[18:01] <Geth> ¦ doc: Adds to typemap

[18:01] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1b016d141f

[18:01] *** stoned75 joined
[18:03] *** aborazmeh left
[18:07] *** Archenoth left
[18:11] <CIAvash> m: say <a b c d e>.categorize({ $++ %% 2 }).values

[18:11] <camelia> rakudo-moar 85847d2f1: OUTPUT: «([b d] [a c e])␤»

[18:12] <CIAvash> Altai-man: Is this better? ↑

[18:14] <timotimo> m: dd (<a b c d e f g> Z |(0, 1) xx *).categorize(*[1]).map(*[0])

[18:14] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(0 => $[("a", 0), ("c", 0), ("e", 0), ("g", 0)], 1 => $[("b", 1), ("d", 1), ("f", 1)]).Seq␤»

[18:14] <timotimo> m: dd (<a b c d e f g> Z |(0, 1) xx *).categorize(*[1], :as(*[0]))

[18:14] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(my Any %{Any} = 0 => $["a", "c", "e", "g"], 1 => $["b", "d", "f"])␤»

[18:15] <stoned75> commit: releases my %h; %h.of.key;

[18:15] <committable6> stoned75, https://gist.github.com/90bed9007ea7fa5323dbcc8f9b45dd73

[18:15] <stoned75> commit: releases my %h; %h.of.say;

[18:16] <committable6> stoned75, ¦releases (46 commits): «(Mu)␤»

[18:16] <Geth> ¦ Raku-Steering-Council/main: 059b227f87 | Coke++ | scripts/tally.raku

[18:16] <Geth> ¦ Raku-Steering-Council/main: Try to handle multiple formats of text/plain

[18:16] <Geth> ¦ Raku-Steering-Council/main: 

[18:16] <Geth> ¦ Raku-Steering-Council/main: Try to handle Quoted Printable

[18:16] <Geth> ¦ Raku-Steering-Council/main: Try to handle ballots that leave off the newline encoding in QP.

[18:16] <Geth> ¦ Raku-Steering-Council/main: 

[18:16] <Geth> ¦ Raku-Steering-Council/main: This lets us parse a new ballot and catch an error in

[18:16] <Geth> ¦ Raku-Steering-Council/main: parsing on one that had already come in.

[18:16] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/059b227f87

[18:17] <[Coke]> 34 ballots reporting (Average votes per ballot: 4.6)

[18:19] <stoned75> commit: releases :{  0  => 42 }<0>.say;

[18:20] <committable6> stoned75, https://gist.github.com/8b821d47099217ee0f8e033ea6f54d66

[18:34] *** ensamvarg3 left
[18:40] <Altai-man> CIAvash, surely shorter! Thanks.

[18:40] *** stoned75 left
[19:01] *** Sgeo joined
[19:03] <timotimo> the categorize on anonymous state var is pretty good, i must admit

[19:06] <guifa> I just noticed something.  Our CREDITS file still uses a p5 format

[19:08] <[Coke]> what format would you suggest?

[19:08] <guifa> pod6? lol

[19:08] <guifa> (that wasn’t meant to be as sarcastic as it came off)

[19:09] <guifa> (so, in the most basic, s/=pod/=begin pod/, and s/=cut/=end pod/

[19:09] <[Coke]> https://firstmonday.org/ojs/index.php/fm/article/download/1151/1071

[19:09] <[Coke]> I'd just remove the pod markers.

[19:10] <[Coke]> the pod is from the first commit, taken from the parrot repo.

[19:10] <guifa> That works too

[19:12] <timotimo> let's rewrite it in Turtle

[19:13] <guifa> timotimo: don’t give me ideas.  I once wrote a brainfuck interpreter in AppleScript

[19:14] <guifa> I gladly will do masochistic programming projects for no point whatsoever :-)

[19:14] <timotimo> i don't mean the kind of turtle that draws graphics

[19:14] <guifa> Terse RDF I figured

[19:14] <timotimo> yeah

[19:14] <timotimo> i didn't know about it for long yet

[19:16] <guifa> Keeping the Linux format makes sense, although there’s no reason pod6 couldn’t do some of the semantic stuff 

[19:21] <guifa> https://gist.github.com/alabamenhu/3f262db308e6a8f85d30497e47d29776 

[19:21] <guifa> ^^^ an example of why POD isn’t great for anything hierarchical :-( 

[19:22] <guifa> (the SnailMail really needs to be in a begin/end, as multiline content for non circumfixed stuff are NYI)

[19:24] *** sena_kun joined
[19:26] *** Altai-man left
[19:38] *** sena_kun left
[19:38] *** rindolf left
[19:56] *** mowcat joined
[20:02] *** yuplushi left
[20:24] *** kensanata joined
[20:36] *** domidumont left
[20:42] *** billN1VUX joined
[20:49] *** guifa left
[20:55] *** aborazmeh joined
[20:55] *** aborazmeh left
[20:55] *** aborazmeh joined
[21:30] *** billN1VUX left
[21:43] *** aborazmeh left
[21:48] *** zacts joined
[21:49] *** zacts left
[21:52] *** marcoco[m] left
[22:09] *** leont left
[22:27] *** kensanata left
[22:31] <[Coke]> I don't think that kind of extensive reformatting to pod6 is worth it for the credits file

[22:34] <moon-child> have there been any proposals for an 'exhaustive typechecking' mode?  Probably not possible to completely prevent type errors at compile time, but maybe just forcing all variables and function parameters/return types to be annotated?

[22:38] <timotimo> forcing everything to be annotated sounds like a task for a slang / RakuAST

[22:39] <timotimo> method calls will not be able to be type checked at compile time due to subclassing not enforcing anything with method's signatures

[22:44] *** natrys left
[22:44] *** natrys joined
[22:45] *** natrys left
[22:49] *** pecastro left
[22:55] <moon-child> timotimo: right - now that you mention it, I think there was an SO answer form jnthn saying something similar (re. rakuast)

[23:06] <timotimo> i think it should be possible to write a HOW that refuses subclassing when some tight constraints on method's signatures are not upheld

[23:06] *** skids left
[23:17] *** tejr left
[23:17] *** tejr joined
[23:22] *** yuplushi joined
[23:29] *** guifa joined
[23:33] *** billN1VUX joined
[23:46] *** billN1VUX left
