[00:25] <timotimo> i've found that there's apparently some sfline blocks that have 0 entries in them, but are still written for some reason

[00:26] *** Nile left
[00:28] <timotimo> the reading code was not happy with that

[00:29] *** Doc_Holliwould left
[00:31] *** xinming_ left
[00:32] *** xinming_ joined
[00:39] <timotimo> https://gist.github.com/timo/01c537587250658c5624e42f57319e27 looks odd

[00:42] <timotimo> why would pull-one (Channel.pm6:186) have <anon> <Fetcher.rakumod:135) as its *outer*?

[00:43] *** xinming_ left
[00:43] *** xinming_ joined
[00:45] <timotimo> greppable6: use.*Fetcher

[00:45] <greppable6> timotimo, Sorry kid, that's not my department.

[00:46] <timotimo> hum?

[00:46] <timotimo> greppable6: help

[00:46] <greppable6> timotimo, Like this: greppable6: password # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Greppable

[00:50] <timotimo> file grep use.*Fetcher

[00:50] <timotimo> greppable6: file grep use.*Fetcher

[00:50] <greppable6> timotimo, Found nothing!

[00:50] <timotimo> greppable6: tree grep use.*Fetcher

[00:50] <greppable6> timotimo, Found nothing!

[00:50] <timotimo> greppable6: tree grep Fetcher

[00:50] <greppable6> timotimo, Found nothing!

[00:50] <timotimo> greppable6: file grep Fetcher

[00:50] <greppable6> timotimo, Found nothing!

[00:50] <timotimo> greppable6: file Fetcher

[00:50] <greppable6> timotimo, Found nothing!

[00:50] <timotimo> greppable6: tree Fetcher

[00:50] <greppable6> timotimo, Found nothing!

[00:50] <timotimo> *shrug*

[01:04] *** oddp left
[01:10] *** sena_kun joined
[01:11] *** molaf left
[01:11] *** rbt left
[01:11] *** rbt joined
[01:11] *** Altai-man_ left
[01:23] *** molaf joined
[02:01] *** Manifest0 left
[02:03] *** Manifest0 joined
[02:07] *** xinming_ left
[02:08] *** xinming_ joined
[02:09] *** Cabanossi left
[02:16] *** Cabanossi joined
[02:20] *** rbt left
[02:21] *** rbt joined
[02:23] *** camelCaser left
[02:25] *** camelCaser joined
[02:41] *** xinming_ left
[02:42] *** xinming_ joined
[02:48] *** perlbot left
[02:48] *** simcop2387 left
[02:50] *** simcop2387 joined
[02:52] *** perlbot joined
[03:04] *** cpan-raku left
[03:06] *** cpan-raku joined
[03:06] *** cpan-raku left
[03:06] *** cpan-raku joined
[03:09] *** Altai-man_ joined
[03:12] *** sena_kun left
[03:13] *** Sgeo left
[03:17] *** dataangel joined
[03:22] *** Sgeo joined
[03:44] *** _jrjsmrtn joined
[03:44] *** __jrjsmrtn__ left
[04:05] *** team\andinus joined
[04:08] *** molaf left
[04:52] *** molaf joined
[05:10] *** sena_kun joined
[05:11] *** Altai-man_ left
[05:26] *** molaf left
[05:28] *** tejr left
[05:29] *** tejr joined
[06:00] *** Altai-man_ joined
[06:03] *** sena_kun left
[06:04] *** tejr left
[06:21] *** tejr joined
[06:35] *** [particle] joined
[06:44] *** bocaneri joined
[06:52] <abraxxa> can someone please verify with me if I'm doing something wrong or if I found a bug in rakudo?

[06:52] <abraxxa> (20:44:11) abraxxa: any idea why copying a file to a gvfs mounted dir doesn't work?

[06:52] <abraxxa> (20:44:31) abraxxa: I get an Failed to copy file: operation not supported on socket error

[06:56] *** aborazmeh joined
[06:56] *** aborazmeh left
[06:56] *** aborazmeh joined
[07:00] <raku-bridge> <DataKinds> without knowing anything about the situation i'd find that hard to believe if that was a rakudo bug

[07:06] <abraxxa> I can think of some low-level operation that is not supported on gvfs created, presumably virtual, directories

[07:06] *** pecastro joined
[07:08] *** Doc_Holliwould joined
[07:12] *** xinming_ left
[07:12] *** xinming_ joined
[07:14] *** JJMerelo joined
[07:15] <JJMerelo> Hello, Raku community. Now you're the proud owner of 45 new modules. Here's what you need to do...

[07:16] <JJMerelo> 101 community modules now...

[07:19] *** sarna joined
[07:28] <raku-bridge> <DataKinds> does anyone know how I might be able to simplify this?

[07:29] <raku-bridge> <DataKinds> m: (-> @p { lazy gather { loop { for @p -> $p { take $p } } } })((10,20))[^10]

[07:29] <evalable6> DataKinds, rakudo-moar f470b544d: OUTPUT: ¬´¬ª

[07:29] <Geth> ¬¶ ecosystem/JJ-patch-15: e590fb2f63 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[07:29] <Geth> ¬¶ ecosystem/JJ-patch-15: Update location Datetime::Math

[07:29] <Geth> ¬¶ ecosystem/JJ-patch-15: review: https://github.com/Raku/ecosystem/commit/e590fb2f63

[07:29] <Geth> ¬¶ ecosystem: JJ++ created pull request #510: Update location Datetime::Math

[07:29] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/pull/510

[07:30] <JJMerelo> DataKinds not really...

[07:30] <JJMerelo> DataKinds probably eliminate one parenthesis

[07:31] <JJMerelo> m: say (-> @p { lazy gather { loop { for @p -> $p { take $p } } } })(10,20)[^10]

[07:31] <camelia> rakudo-moar f470b544d: OUTPUT: ¬´Too many positionals passed; expected 1 argument but got 2‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[07:31] <JJMerelo> m: say (-> @p { lazy gather { loop { for @p -> $p { take $p } } } })((10,20))[^10]

[07:31] <camelia> rakudo-moar f470b544d: OUTPUT: ¬´(10 20 10 20 10 20 10 20 10 20)‚ê§¬ª

[07:31] <JJMerelo> Not even that. So no.

[07:31] <Geth> ¬¶ ecosystem: e590fb2f63 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[07:31] <Geth> ¬¶ ecosystem: Update location Datetime::Math

[07:31] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/e590fb2f63

[07:31] <Geth> ¬¶ ecosystem: 284f24833f | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[07:31] <Geth> ¬¶ ecosystem: Merge pull request #510 from Raku/JJ-patch-15

[07:31] <Geth> ¬¶ ecosystem: 

[07:31] <Geth> ¬¶ ecosystem: Update location Datetime::Math

[07:31] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/284f24833f

[07:32] <raku-bridge> <DataKinds> JJMerelo: ah darn! thank you though

[07:33] <raku-bridge> <DataKinds> shame you can't call take like @p.map: take

[07:33] *** aborazmeh left
[07:34] <JJMerelo> DataKinds that would return a Seq, and it wouldn't be lazy. I assume laziness is what you want, right?

[07:35] <raku-bridge> <DataKinds> ahh, yeah it is

[07:36] <raku-bridge> <DataKinds> I'm just playing with alternatives to python's itertools

[07:36] *** kensanata joined
[07:39] *** rbt left
[07:39] *** wamba joined
[07:39] *** rbt joined
[07:39] <raku-bridge> <DataKinds> did something really clever this one, I think:

[07:39] <raku-bridge> <DataKinds> m: say ((-> $elem, $n = Inf { $elem, $elem ... { $++ >= $n - 1 } })(5, 10))

[07:39] <evalable6> DataKinds, rakudo-moar f470b544d: OUTPUT: ¬´(5 5 5 5 5 5 5 5 5)‚ê§¬ª

[07:50] *** Sgeo left
[07:55] *** aborazmeh joined
[07:55] *** aborazmeh left
[07:55] *** aborazmeh joined
[07:55] <CIAvash> DataKinds: can't you use `|@a xx ‚àû`?

[07:57] *** cgfbee left
[07:57] <raku-bridge> <DataKinds> üòç

[07:57] <raku-bridge> <DataKinds> I can indeed CIAvash, thank you

[07:58] <raku-bridge> <DataKinds> that's awesome

[08:01] *** sena_kun joined
[08:02] <raku-bridge> <DataKinds> python's accumulate():

[08:03] <raku-bridge> <DataKinds> m: say ((-> @p, &func = * + * { [[&func]] @p })((1,2...*))[^15])

[08:03] <evalable6> DataKinds, rakudo-moar f470b544d: OUTPUT: ¬´(signal SIGHUP) ¬´timed out after 10 seconds¬ª¬ª

[08:03] <raku-bridge> <DataKinds> üò¶ discord ate my extra backslashes

[08:03] *** Altai-man_ left
[08:05] *** patrickb joined
[08:05] *** aborazmeh left
[08:06] <raku-bridge> <DataKinds> m: say ((-> @p, &func = * + * { [\[&func]] @p })((1,2...*))[^15])

[08:06] <evalable6> DataKinds, rakudo-moar f470b544d: OUTPUT: ¬´(1 3 6 10 15 21 28 36 45 55 66 78 91 105 120)‚ê§¬ª

[08:19] *** JJMerelo left
[08:24] *** JJMerelo joined
[08:33] *** JJMerelo left
[08:37] *** xinming_ left
[08:38] *** xinming_ joined
[08:38] *** cgfbee joined
[08:55] <raku-bridge> <DataKinds> this is a very silly question, but I can't find it: is there a break control flow statement?

[08:56] <raku-bridge> <DataKinds> ah. last. that's an interesting name

[09:06] *** wamba left
[09:07] *** squashable6 left
[09:07] *** antoniogamiz joined
[09:07] *** squashable6 joined
[09:09] *** antoniogamiz left
[09:09] *** antoniogamiz joined
[09:10] <antoniogamiz> o/

[09:11] <antoniogamiz> I have just installed raku using rakudobrew in windows 10 but 'raku' command is not available

[09:11] <antoniogamiz> do i need to change the PATH? I thought that was done automatically by rakudobrew

[09:12] *** bocaneri left
[09:14] *** bocaneri joined
[09:18] <moritz> antoniogamiz: rakudobrew cannot change PATH of your shell without your cooperation, somehow

[09:19] <moritz> https://github.com/tadzik/rakudobrew says you need ot do export PATH=~/.rakudobrew/bin:$PATH

[09:21] <antoniogamiz> moritz, but that's for adding rakudobrew to the PATH, isnt it? My problem is that 'raku' command is not available

[09:27] <moritz> antoniogamiz: but did you do it? it's part of the installation instruction

[09:28] <antoniogamiz> yep

[09:28] <antoniogamiz> rakudobrew works perfectly

[09:28] <moritz> rakudobrew might add some symlinks to other binaries in in ~/.rakudobrew/bin

[09:28] <moritz> does it do that?

[09:28] <antoniogamiz> but after running rakudobrew build moar 2020.06, neither raku nor perl6 command works

[09:29] <moritz> is anything else in ~/.rakudobrew/bin ?

[09:29] <antoniogamiz> I do not have a .rakudobrew directory (using Windows) I have a rakudobrew directory

[09:29] *** lichtkind joined
[09:30] <antoniogamiz> in rakudobrew/bin I only have: rakudobrew and rakudobrew.bat

[09:46] *** oddp joined
[09:47] <antoniogamiz> moritz, agh I forgot to execute rakudobrew switch moar-2020.06

[10:01] *** Altai-man_ joined
[10:01] <SmokeMachine> m: class Bla { method a { $.b; self.clone }; method b { say self.WHY } }; my $a = Bla.new; $a.b; $a.a; #={ foi? } $a.b #is that expected?

[10:01] <camelia> rakudo-moar f470b544d: OUTPUT: ¬´foi?‚ê§foi?‚ê§foi?‚ê§¬ª

[10:03] <jnthn> SmokeMachine: Which bit of it surprises you?

[10:03] *** sena_kun left
[10:04] <SmokeMachine> m: class Bla { method a { $.b; self.clone }; method b { say self.WHY } }; class Ble {}; my $a = Bla.new; $a.b; $a.a; #={ foi? } $a.b; Bla.new.b; say Bla.WHY; say Ble.WHY

[10:04] <camelia> rakudo-moar f470b544d: OUTPUT: ¬´foi?‚ê§foi?‚ê§foi?‚ê§foi?‚ê§foi?‚ê§No documentation available for type 'Ble'.‚ê§Perhaps it can be found at https://docs.raku.org/type/Ble‚ê§¬ª

[10:04] <SmokeMachine> jnthn: is #= adding documentation to the class through the instance?

[10:05] <jnthn> Oh. Yes, for certain, because the documentation lives in the meta-object.

[10:05] <jnthn> And is attached during the compilation.

[10:06] <jnthn> I don't think instances come into it at all; it's a compile time thing. Declarator commnets have no runtime semantics.

[10:08] <SmokeMachine> m: class Bla {}; class Ble {}; say [Bla, Ble].pick.new #={ foi? }; say Bla.WHY; say Ble.WHY # what about this?

[10:08] <camelia> rakudo-moar f470b544d: OUTPUT: ¬´Bla.new‚ê§foi?‚ê§No documentation available for type 'Ble'.‚ê§Perhaps it can be found at https://docs.raku.org/type/Ble‚ê§¬ª

[10:08] <lizmat> weekly https://datakinds.github.io/2020/06/24/python-s-itertools-in-pure-raku

[10:08] <lizmat> weekly: https://datakinds.github.io/2020/06/24/python-s-itertools-in-pure-raku

[10:08] <notable6> lizmat, Noted! (weekly)

[10:09] <jnthn> SmokeMachine: I guess if you have two declarations on the same line, it's just finding the first one to attach the doc too

[10:10] <jnthn> If you're using the "thing on this line" syntax and putting two things on the line, you're probably asking to be confused. :P

[10:10] <SmokeMachine> m: class Bla {}; class Ble {}; ‚ê§say [Bla, Ble].pick.new #={ foi? }; say Bla.WHY; say Ble.WHY

[10:10] <camelia> rakudo-moar f470b544d: OUTPUT: ¬´Ble.new‚ê§foi?‚ê§No documentation available for type 'Ble'.‚ê§Perhaps it can be found at https://docs.raku.org/type/Ble‚ê§¬ª

[10:11] <SmokeMachine> m: class Bla {}‚ê§class Ble {}; ‚ê§say [Bla, Ble].pick.new #={ foi? }; say Bla.WHY; say Ble.WHY

[10:11] <camelia> rakudo-moar f470b544d: OUTPUT: ¬´Bla.new‚ê§No documentation available for type 'Bla'.‚ê§Perhaps it can be found at https://docs.raku.org/type/Bla‚ê§foi?‚ê§¬ª

[10:11] <SmokeMachine> jnthn: yes, that makes sense...

[10:11] <SmokeMachine> jnthn: thank you

[10:12] <jnthn> I wonder if it should be grumpy if you try and do such "attachment at a distance" though

[10:12] <jnthn> It seems more likely to imply confusion than anything else.

[10:13] <lizmat> m: say Int.WHY

[10:13] <camelia> rakudo-moar f470b544d: OUTPUT: ¬´No documentation available for type 'Int'.‚ê§Perhaps it can be found at https://docs.raku.org/type/Int‚ê§¬ª

[10:14] <SmokeMachine> yes... I was thinking it was being applied to the instance, and not to the class... if it gave error, like "cannot apply documentation on something that's not a deffinition" (of course, well written), it would be clearer...

[10:14] <lizmat> perhaps it should only do that for core types ?

[10:14] <patrickb> antoniogamiz, moritz: rakubrew (as rakudobrew is known now) has moved to a separate directory for the rakubrew executable and the shims. If it's in env mode there won't be any executables in the shim dir either.

[10:14] <SmokeMachine> lizmat: I think its a good idea

[10:14] <patrickb> antoniogamiz: Any reason you are still using rakudobrew instead of rakubrew?

[10:15] <antoniogamiz> patrickb: I just did not know rakubrew existed...

[10:16] <antoniogamiz> thanks for the info 

[10:16] <jnthn> SmokeMachine: Yeah, I need to revisit how this is all done as part of the RakuAST thing anyway

[10:17] <jnthn> SmokeMachine: Though of course I need to beware the back-compat monster :)

[10:17] <SmokeMachine> :)

[10:17] * lizmat is fighting one with the Match internals 

[10:18] <SmokeMachine> jnthn: talking about RakuAST, I know that's not planned for now... but I'm just curious. Is that any thinking on how custom compiler passes will work (if it will)?

[10:19] *** JJMerelo joined
[10:19] <jnthn> SmokeMachine: Probably placed into some kind of EXPORT-y thing, like custom meta-objects are.

[10:20] <jnthn> (those have EXPORTHOW)

[10:20] <SmokeMachine> will one be able to say: add a pass before/together/after a specific one (as we do with tighter/equiv/looser op)?

[10:21] <SmokeMachine> or that do not make any sense?

[10:21] <jnthn> If anything, the options will be pre-CHECK and post-CHECK

[10:22] <jnthn> I don't know where else you could expect to insert it

[10:22] <patrickb> antoniogamiz: See rakubrew.org :-)

[10:22] <jnthn> Oh, the other option I thought of is if you want to have it happen at scope exit

[10:22] <jnthn> `use fatal` would be along those lines

[10:23] <jnthn> Those could potentially happen rather sooner

[10:23] <jnthn> Need to think how this all plays into BEGIN time things also

[10:24] <SmokeMachine> I mean if there is a module adding a custom pass, and I want to write another one that will run a custom pass just before/after that one... or maybe even a way of running that (doing the transformations needed) at the same pass of that one

[10:24] <jnthn> No, I didn't consider that. I think it's better if passes are independent.

[10:25] <jnthn> I think any arrangements like this would need to be arranged by a module that exports the two, perhaps.

[10:26] <SmokeMachine> got it...

[10:26] <SmokeMachine> I think I didn't get the use fatal...

[10:27] <patrickb> antoniogamiz: I'm interested in feedback from you, as I want rakubrew to support Windows well, but Windows users tend to be rare around here. :-)

[10:28] <jnthn> SmokeMachine: use fatal only wants to tweak the scope it's imported into

[10:28] *** Doc_Holliwould left
[10:28] <jnthn> SmokeMachine: And probably to do it right at the end of that scope

[10:28] <SmokeMachine> jnthn: yes, that makes sense

[10:29] <jnthn> Other things may want to work like that - while others probably don't care about scope and want the whole compilation unit

[10:30] <SmokeMachine> I was wondering if it would be cool if we had some kind of syntax we could say when to run and pass a multi sub like `multi transform(RakuAST::Something $ast) { transform-it $ast }`

[10:32] <antoniogamiz> patrickb: I don't use windows a lot, I have installed it this morning to add Windows support for Documentable 

[10:32] <SmokeMachine> and it would walk the AST tree and run it when the signature matches... (sorry... I don't know anything about that... I am just wondering...)

[10:33] <antoniogamiz> I will uninstall rakudobrew and use rakubrew instead, I will tell you how it goes :)

[10:33] <jnthn> SmokeMachine: If nothing else, it should be possible to provide such an interface via a module

[10:34] <jnthn> SmokeMachine: Though it's sort of already possible in that there's a .walk method for visiting all nodes, and if you pass it a multi, then provided you write a candidate that ignores all the things you don't care about too, then you've got it.

[10:35] <SmokeMachine> jnthn: and that would be a viable way of implement a custom pass?

[10:36] *** xinming_ left
[10:36] <jnthn> I'd think so

[10:37] <jnthn> I think some of course will not want to transform anything :)

[10:37] <jnthn> (Just walk and check for stuff)

[10:37] <SmokeMachine> :)

[10:37] *** xinming_ joined
[10:38] <SmokeMachine> I think doing that and writing a RakuAST -> Red::AST mapper would be enough to do what I want with Red

[10:41] *** rindolf joined
[10:41] <antoniogamiz> patrickb, Windows Defender blocks the cmd installer 

[10:41] <antoniogamiz> (but it can be run anyway)

[10:42] <SmokeMachine> jnthn: while walking, will one have access to the lexpad?

[10:43] <antoniogamiz> patrickb, it could be helpful a progress bar to see the progress of rakubrew download

[10:43] <SmokeMachine> sorry... I think it's not needed, right?

[10:45] <jnthn> SmokeMachine: If you do this post-check, symbols will have already been resolved

[10:45] <jnthn> And you can force a resolution pass if not

[10:45] <AlexDaniel`> treegrep: Fetcher

[10:45] <greppable6> AlexDaniel`, Sorry kid, that's not my department.

[10:46] <SmokeMachine> jnthn: I'm looking forward for using all this! :)

[10:58] <SmokeMachine> is there a way of writing an anonymous multi function?

[11:07] <jnthn> my $multi = do { multi foo($x) { }; multi foo($x,$y) { }; &foo }

[11:16] <SmokeMachine> thanks

[11:35] *** JJMerelo left
[11:43] <kawaii> Hello :) An issue my colleague has been struggling with for a while now - https://github.com/shuppet/p6-api-discord/blob/refactor-comms/lib/API/Discord/Connection.pm6#L93 this line is never run when the method is run from TWEAK.

[11:43] <kawaii> Comes from here: https://github.com/shuppet/p6-api-discord/blob/refactor-comms/lib/API/Discord.pm6#L212

[11:43] <kawaii> and in turn from a script.

[11:43] <kawaii> The Connection object is definitely created because the websocket is created.

[11:53] *** brtastic joined
[12:01] *** sena_kun joined
[12:03] *** Altai-man_ left
[12:09] <patrickb> .tell rba There is a new rakubrew release: Version 12. Can you upload versions 10, 11 and 12 to the website? (https://rooster.uber.space/patcloud/index.php/s/qmkreEJLQDZcjbf)

[12:09] <tellable6> patrickb, I'll pass your message to rba

[12:09] <patrickb> antoniogamiz: Fix incoming.

[12:11] <antoniogamiz> thanks :D

[12:23] <El_Che> no raku talks today according to the schedule?

[12:23] <tellable6> 2020-06-23T15:48:24Z #raku <JJMerelo> El_Che thanks for letting me know!

[12:25] *** antoniogamiz left
[12:25] <lizmat> El_Che: not to my knowledge, perhaps in the lightning talks

[12:25] <lizmat> but I'll wait for the YouTube version of that

[12:25] <lizmat> :-)

[12:33] *** timotimo left
[12:35] *** timotimo joined
[12:59] <jdv79> timotimo: is that the full path?  def odd.

[13:00] <timotimo> jdv79: i'm not sure if it's an artifact or some bug; maybe you could attach a gdb to it and have it dump the backtraces of all the threads to see if the one that's doing the Fetcher stuff has a bigger stack trace than it should

[13:01] <timotimo> oh, anyway, i should upload the patch that makes it able to read your file

[13:02] <jdv79> there is a retry loop inside of a self feeding hyper map on a channel - the line in the heap path is the beginning of the retry loop.  weird.

[13:02] <jdv79> teh retry is around cro agent get

[13:03] <timotimo> this isn't clear from documentation or output, but the line it says there is only the "position of the function" line

[13:03] <timotimo> not the "current line of execution" as you would have in a normal stacktrace

[13:03] <jdv79> i just woke up - need coffee - bbiab - thanks!

[13:04] <timotimo> i could have sworn i had a function "find the biggest N objects of this type" somewhere

[13:06] <timotimo> interesting, there's a little bit of a difference between how the gc roots do a frame and how the heap snapshot profiler does a frame

[13:06] <timotimo> regarding the caller

[13:07] <timotimo> one checks if the frame's caller is a heap-allocated frame, the other if the frame itself is heap-allocated

[13:09] <sena_kun> .tell JJMerelo please, ping me whenever comfortable re docs we discussed.

[13:09] <tellable6> sena_kun, I'll pass your message to JJMerelo

[13:10] <sena_kun> AlexDaniel`, ping?

[13:13] *** AlexDaniel joined
[13:13] *** AlexDaniel left
[13:13] *** AlexDaniel joined
[13:14] <AlexDaniel> timotimo: so‚Ä¶ greppable failed earlier because of this error: ‚ÄúNo such symbol 'IO::Socket::SSL'‚Äù

[13:14] <AlexDaniel> even though it is installed

[13:14] <timotimo> interesting!

[13:15] <Geth> ¬¶ ake: e197c123cc | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/sake

[13:15] <Geth> ¬¶ ake: Add missing semicolon

[13:15] <Geth> ¬¶ ake: review: https://github.com/Raku/ake/commit/e197c123cc

[13:18] *** greppable6 left
[13:18] <AlexDaniel> sena_kun: pong?

[13:19] <sena_kun> AlexDaniel, can I PM you?

[13:19] <AlexDaniel> sure

[13:19] *** sena_kun left
[13:19] *** sena_kun joined
[13:19] <sena_kun> ouch, this hexchat segfault was painful...

[13:20] <AlexDaniel> sure! (if you didn't see that )

[13:25] * [Coke] wonders what the deal was with all the supernovus transfers.

[13:26] <AlexDaniel> [Coke]: I think it's just unmaintained repos now getting more access because of the community-modules org

[13:27] <[Coke]> ok, but we don't want to take over *every* unmaintained module. did someone do some analysis or did we take everything from that user?

[13:28] <[Coke]> (I mean, it could be both)

[13:36] <ShimmerFairy> Couldn't interested coders just fork an abandoned module and change the :auth<> property of the module? (Or is this transfer process already doing that?)

[13:37] *** antoniogamiz joined
[13:39] <antoniogamiz> is there a ready to use raku for Windows? (not rakudo star) to use in Azure Pipelines 

[13:40] <[Coke]> ShimmerFairy: yes, that's a possibility. IMO we should only be pulling modules into the community bucket that have been abandoned but are "important" by some criteria.

[13:41] <[Coke]> And that may be happening: I'm just seeing the github alerts that we've taken the module, not seeing any discussion before that.

[13:41] <ShimmerFairy> Yeah, I just wanted to point out that Raku is perfectly capable of handling a module name mapping to more than one codebase.

[13:42] *** zacts joined
[13:44] <jdv79> will community modules end up being raku's version of perl's dual life modules as they fall out of favor and others fork them to maint?

[13:44] <patrickb> I mailed supernovus about one of his modules.

[13:45] <patrickb> After a bit back and forth it became clear that he won't have time for the forseeable future to do any work on those modules.

[13:46] <patrickb> Especially not being able to respond to PRs is problematic.

[13:46] <patrickb> So he decided to transfer his modules to community modules.

[13:46] <patrickb> He did only transfer modules he deemed worthy. Everything noone is using or superseeded he left out.

[13:48] <patrickb> So the basic idea is that the status of the modules is clear (i. e. he won't be able to maintain them for the forseeable future), and whoever is willing to work on them can do so without forking.

[13:49] <patrickb> I'm not entirely sure if that is in line with whatever purpose community modules is intended to be, but to me the move makes sense, especially because his modules do have users.

[13:50] <[Coke]> that sounds good, patrickb - the one thing I'd add is we should look for individual maintainers before taking them over in the community space.

[13:50] <patrickb> antoniogamiz: What requirements would such a raku(do) have? There are the precompiled releases on rakudo.org you can just extract and use.

[13:51] <patrickb> antoniogamiz: (by the way: The precompiled builds on rakudo.org are the same builds that rakubrew installs when using the "download" command.)

[13:51] <[Coke]> we need to update https://raku.org/downloads example with latest version. (looks like https://rakudo.org/downloads was updated, thanks!)

[13:52] <antoniogamiz> patrickb, I will use those then :D

[13:52] <patrickb> [Coke]: If I would have to decide I'd remove all direct rakudo download options from raku.org and just link to the rakudo.org download page.

[13:53] <[Coke]> can we update the link to Inline::Perl5 on https://raku.org/downloads to a disambiguated version? (if it's on CPAN, I imagine we'd prefer CPAN as it better tracks releases?)

[13:54] <[Coke]> patrickb: I'd be OK with that; we can add more detailed stuff later if there's a different impl.

[13:54] <patrickb> Having to maintaining in two places often results in not all places being updated. Also it does not support the "rakudo is one implementation of raku, there might be others" story.

[13:54] <patrickb> afk for a bit

[14:01] *** Altai-man_ joined
[14:01] <jdv79> timotimo: how did you get to that path?

[14:03] <timotimo> tbh i basically randomly poked at frames to see if anything sprung out at me

[14:03] <timotimo> essentially in snapshot 80 i used "find 1000 frames" or so?

[14:03] *** sena_kun left
[14:06] *** xinming_ left
[14:06] <jdv79> it says "Sorry, I don't understand." to that

[14:08] *** dataangel left
[14:08] <timotimo> i really need to get used to starting moar-ha with rlwrap

[14:08] *** xinming_ joined
[14:09] <jdv79> is moarperf broken for these heapsnapshots atm?

[14:10] <timotimo> find 1000 objects type="BOOTStaticFrame"

[14:10] <timotimo> shouldn't be

[14:10] <timotimo> just have to make sure it's using the latest commit from the heapanalyzer tool as well

[14:11] <timotimo> the commandline tool and the web tool don't match up in functionality completely yet

[14:14] <jdv79> cool

[14:14] <AlexDaniel> yeah, so, the bots really don't like precomp

[14:14] *** notable6 left
[14:14] *** coverable6 left
[14:14] *** evalable6 left
[14:14] *** benchable6 left
[14:14] *** statisfiable6 left
[14:14] *** nativecallable6 left
[14:14] *** reportable6 left
[14:14] *** quotable6 left
[14:14] *** bloatable6 left
[14:14] *** linkable6 left
[14:14] *** committable6 left
[14:14] *** tellable6 left
[14:14] *** sourceable6 left
[14:14] *** releasable6 left
[14:14] *** shareable6 left
[14:14] *** bisectable6 left
[14:14] *** squashable6 left
[14:15] <jdv79> i'm not sure how that long path you somehow found came to be...

[14:15] <raku-bridge> <tmtvl> I've been reading the Little Schemer again... https://gist.github.com/tmtvl/e80befea5a84c61bea6b410866ea26cf

[14:15] <timotimo> try "path 470696" in snapshot 80 for a simpler example

[14:16] <jdv79> why are there so many bots?  could they be merged into one that has selectable personality disorder?

[14:16] <moritz> UNIX philosophy. Do one thing, do it well.

[14:17] *** antoniogamiz left
[14:17] <jdv79> which perl pretty much upended, ironic being touted in a perlish place

[14:17] <ShimmerFairy> for some definition of "one thing" ‚ò∫

[14:18] <jdv79> timotimo: i'm not sure what that means:)

[14:18] <timotimo> jdv79: if you could patch your moarvm thusly: src/profiler/heapsnapshot.c around line 600 or so, there should be a line "if (frame->caller && !MVM_FRAME_IS_ON_CALLSTACK(tc, frame))

[14:18] <timotimo> change the last "frame" to "frame->caller"

[14:19] <timotimo> i'm not sure if it's a correct change, but it may be what's responsible for the odd path

[14:19] *** coverable6 joined
[14:19] *** reportable6 joined
[14:19] *** quotable6 joined
[14:20] *** notable6 joined
[14:20] *** bisectable6 joined
[14:20] *** unicodable6 joined
[14:20] *** sourceable6 joined
[14:20] *** benchable6 joined
[14:20] *** evalable6 joined
[14:20] <ShimmerFairy> (btw, a big reason for Unix philosophy is that you can compose those small do-one-thing tools to form any kind of big tool you need, which I don't think applies to IRC bots)

[14:20] *** shareable6 joined
[14:20] <timotimo> hmm, i could imagine a syntax that lets you write "pipes" of bot commands

[14:20] *** bloatable6 joined
[14:20] <timotimo> that would be hella funny

[14:20] <jdv79> maybe they could be piped together!

[14:20] <jdv79> ha

[14:21] *** greppable6 joined
[14:21] <AlexDaniel> it's more about the user interface. You don't really need to remember any command, you just do bis-TAB and write your code

[14:21] <timotimo> i'm not sure which of the bots we could combine in sensible ways at the moment

[14:21] *** squashable6 joined
[14:21] *** releasable6 joined
[14:21] *** linkable6 joined
[14:21] <Grinnz> i would consider this set of bots a representation of microservices, not the unix philosophy :P

[14:21] <AlexDaniel> some bots do have more than one command, like greppable, which timotimo failed to use a few hours ago x)

[14:21] *** nativecallable6 joined
[14:21] *** statisfiable6 joined
[14:21] <jdv79> the blizzard of disconns/reconns is the only reason i mentioned it

[14:22] *** committable6 joined
[14:22] <Grinnz> a robust plugin system for a single irc bot would fit the unix philosophy fine

[14:22] *** tellable6 joined
[14:22] <timotimo> i guess you could ask an evalbot + notable6 to send the result of an evaluation to a user when they come back

[14:22] <Grinnz> where the irc connection is just another part of the pipeline

[14:22] <tellable6> 2020-06-09T16:42:16Z #raku <melezhik> Grinnz, Blead Breaks CPAN - this what is what  done by Blin or RakuDist in Raku 

[14:22] <AlexDaniel> that is kinda solvable with bouncers, and I'd appreciate if anybody contributed code for it

[14:23] * Grinnz personally really hates the design of irc bouncers, but ircv3 is improving the situation

[14:23] <AlexDaniel> or by making them compatible with matrix or such, but current matrix-freenode bridge sucks too much

[14:24] <jdv79> Grinnz: is there a short version of what you're talking about?

[14:24] <Grinnz> eh?

[14:24] <jdv79> i know nothing about "bouncers"

[14:24] <Grinnz> oh the bouncer thing

[14:24] <jdv79> is that just a irc proxy

[14:24] <Grinnz> yes

[14:24] <Grinnz> most of them suck because irc is not designed for that

[14:24] <Grinnz> at least, IMO :)

[14:25] <jdv79> you mean history and such?

[14:25] <Grinnz> yes

[14:25] <jdv79> ah, yes...

[14:25] <AlexDaniel> I can easily remake the bots as plugins, but then you'll see people issuing the `help` command every time before using any feature

[14:25] <AlexDaniel> right now the nicks themselves expose which commands are available, which is nice

[14:26] <ShimmerFairy> tbf some of these bots I'd still want to ask for 'help' first

[14:26] <AlexDaniel> ShimmerFairy: but almost all of them don't have any commands

[14:26] <jdv79> timotimo: oh, i guess that last one is a match obj i may have scooped up

[14:27] <AlexDaniel> that is, they just figure out what to do with what you give them

[14:27] <jdv79> hmm, is there an easy way to see if that's a common/many times thinng?

[14:27] <jdv79> it might well be correct if it hasn't been around for long i guess

[14:27] <ShimmerFairy> But I mean I don't know what some of them do, since the name isn't enough. Like what do quotable or shareable or squashable do?

[14:27] <AlexDaniel> https://github.com/Raku/whateverable/wiki

[14:27] <timotimo> "top objects by size", "top objects by count" and the same with frames

[14:28] <jdv79> i didn't mean to start a whole thing about it - just blurted out when i got spammed with bot noise;)

[14:28] *** sarna left
[14:29] <jdv79> but if i did have to argue one more point for it - the discoverability right now seems less than good - i have no idea what bots do or how to find them/their purpose is life...

[14:30] <AlexDaniel> biscuitable6: help

[14:30] <bisectable6> AlexDaniel, Like this: bisectable6: old=2015.12 new=HEAD exit 1 if (^‚àû).grep({ last })[5] // 0 == 4 # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Bisectable

[14:30] <ShimmerFairy> My point is just that "I don't need 'help' because the bot names tell me everything" doesn't hold, since a newcomer will still need documentation of some kind to understand them.

[14:30] <jdv79> so to discover them one has to grep the chan's nick list for .*albe.* ?

[14:30] <jdv79> *able...

[14:31] <AlexDaniel> hmm

[14:31] <moritz> don't we have docs for the bots on some of our websites?

[14:31] <AlexDaniel> anyway, bug reports & suggestions are welcome: https://github.com/Raku/whateverable/issues

[14:32] <timotimo> `find 1000 frames name="<anon>"` and a few times `more` always interesting! :D

[14:32] <AlexDaniel> moritz: whateverables are wondefully documented: https://github.com/Raku/whateverable/wiki

[14:32] <jdv79> timotimo: that doesn't do "show me all MATCH-CAPTURES", does it?

[14:32] <ShimmerFairy> I don't have strong feelings on split bots vs. monolith bot fwiw

[14:32] <jdv79> ah

[14:33] <timotimo> ... mircrokernel ...

[14:33] <zacts> can perl5 be used from within raku?

[14:33] <timotimo> could 487215 be the only MATCH-CAPTURES frame in snapshot 80?

[14:34] <zacts> like without an FFI kind of idea? like can you truly embed a perl interpreter into raku somehow?

[14:34] <timotimo> yeah you can with Inline::Perl5

[14:34] <ShimmerFairy> timotimo: hey, GNU Hurd is coming out any day now!

[14:34] <zacts> oh cool

[14:34] <timotimo> i mean, er

[14:34] <timotimo> it is based on FFI

[14:34] <AlexDaniel> greppable6: use.*Fetcher

[14:34] <greppable6> AlexDaniel, 5 lines, 4 modules: https://gist.github.com/20e52aa91e21c957792a9c824f3043eb

[14:34] <AlexDaniel> treegrep: Fetcher

[14:34] <greppable6> AlexDaniel, https://gist.github.com/df76ed0ccb8cd3c11e3a4790efa8b17c

[14:34] <zacts> gnu hurd actually has some interesting ideas from a philosophical design standpoint. I think it even influenced NetBSD's RUMP anykernel too.

[14:34] <zacts> but in actuality the hurd is like not happening as far as I know

[14:35] <AlexDaniel> timotimo: ‚Üë works now, did nothing to fix it besides purging precomp and restarting the bots :

[14:35] <AlexDaniel> :

[14:35] <AlexDaniel> :(

[14:35] <jdv79> timotimo: looks like it.  a few snaps all have but one.

[14:36] <AlexDaniel> jdv79: fix the precomp issue and I'll be restarting the bots less often!! :P

[14:37] <jdv79> what precomp issue?

[14:37] *** soursBot joined
[14:37] <AlexDaniel> jdv79: well, um‚Ä¶ you'd have to figure out that too‚Ä¶

[14:38] <jdv79> sounds like a rabbithole.  i'm already in one atm.  sorry, maybe later;)

[14:38] <AlexDaniel> it's just that whenever I update anything in the bots I have to purge precomp folders to make it working

[14:38] <AlexDaniel> otherwise all bots seem to start up fine (usually, but not always), but then give out some weird errors whenever you actually try to use them

[14:39] <AlexDaniel> I'm not entirely sure how to reproduce this either, but it has to be related to read-only precomp folders

[14:39] <timotimo> jdv79:interestingly, 470693 in snapshot 80 is also apparently a frame of that function?

[14:39] <timotimo> doesn't show up in the search though?

[14:40] <AlexDaniel> because for the bots most of the filesystem is read-only, I think‚Ä¶

[14:41] <AlexDaniel> anyway, if somebody wants to help with whateverable (whether it's the UI or plugin system or whatever), please feel free to, nowadays I only make sure that they're running

[14:41] <[Coke]> are you doing a build and then copying the precomp folders into a readonly area?

[14:41] <timotimo> can we have some kind of monitoring where we can follow cpu usage, memory usage, uptime, and such?

[14:41] <[Coke]> (so that maybe precomp is seeing that there's precomp and trying to update it in the new location and then failing?)

[14:42] <AlexDaniel> [Coke]: I run them with write access first, this creates precomp files, then I only run them as a service where they have no write access

[14:42] <AlexDaniel> if I don't do that each bot will take minutes to start up

[14:42] <AlexDaniel> timotimo: you have ssh access, don't you? Wanna have root access to set up monitoring?

[14:43] <timotimo> i mean i want root on as many machines as i can, obviously. but only if i'm never asked to use it for repairing stuff! :D

[14:43] <AlexDaniel> is it a yes or a no?

[14:43] <timotimo> also, which monitoring system would i set up?

[14:43] <AlexDaniel> you decide

[14:43] <timotimo> oh no

[14:44] <AlexDaniel> bisectable6: uptime

[14:44] <bisectable6> AlexDaniel, 24 minutes and 49 seconds, 275.847656MiB maxrss. This is Rakudo version 2020.02.1-395-g2c9168b9a built on MoarVM version 2020.02.1-162-g3d8ff61e2 implementing Raku 6.d.

[14:44] <timotimo> ideally we'd have something on a central raku-community server/VM that collects data from a lot of machines we have

[14:45] *** Name66 joined
[14:45] <AlexDaniel> or we can move whateverable to one of the servers that already has monitoring, if there are any

[14:45] <jdv79> doesn't all that stuff have to be rooted?

[14:45] <jdv79> its also backwards from the other, no?

[14:46] <AlexDaniel> but it's not the kind of workload you'd really want to have, which is why I was happy to run it on my server so that I'm not bothering anyone :)

[14:46] <timotimo> jdv79: are you talking about the frames?

[14:47] <AlexDaniel> rba: a machine with a nice-enough CPU, at least 50GB free space on an SSD, and a bunch of free ram (like 10G at least) for the bots?

[14:47] <jdv79> yes

[14:47] *** brtastic1 joined
[14:48] *** Name66 is now known as Everybody

[14:48] *** Everybody is now known as Guest93538

[14:48] *** brtastic left
[14:48] *** brtastic1 is now known as brtastic

[14:49] <timotimo> i'm not sure how you mean that

[14:50] <timotimo> when looking at the paths it looks like one is on a callstack, while the other is just sitting pretty in its module?

[14:50] *** Guest93538 left
[14:52] <jdv79> the first path goes from root to captures, the other goes from captures to a random frame?

[14:53] *** Guest93538 joined
[14:53] <jdv79> i thought all of them should be rooted since these snaps are made just after a sweep, no?

[14:54] <timotimo> when i "path" the numbers, they both reach the root

[14:57] *** Guest93538 is now known as bowlinNo

[14:58] <jdv79> https://nopaste.xyz/?7b2c72c12198636c#EmdPHGk9isuCbXaYSLUsRixNk9F6vgF89UTUBdzPx6rn

[14:58] <jdv79> those both make sense to you?

[14:58] <timotimo> ah, you used show for the bottom one and path for the top

[14:59] <jdv79> oops

[15:01] *** molaf joined
[15:02] <jdv79> the header is misleading on top i think - it says "Name" but VMString is a type for find, not a name - is that on purpose?

[15:03] <timotimo> it's a little weird, yes!

[15:03] <timotimo> not ... really? on purpose

[15:04] *** splatt9990 joined
[15:06] *** splatt9990 left
[15:09] <raku-bridge> <Rogue> It seems like negated code blocks/code containers don't work with the flipflop operator

[15:09] <timotimo> flipflop uses smart match, doesn't it?

[15:09] *** antoniogamiz joined
[15:09] <raku-bridge> <Rogue> Yeah, and negated code works fine on a regular smartmatch

[15:10] <raku-bridge> <Rogue> I can't use the bot from Discord, but try sticking some predicate in an &-sigiled variable and smartmatching against !&pred -- it does exactly what you'd hope

[15:11] *** bowlinNo is now known as Circle129

[15:11] *** Circle129 is now known as Shapes6312

[15:11] <raku-bridge> <Rogue> and yet, with ff, it only seems to work with non-negated blocks

[15:12] <raku-bridge> <Rogue> for 1..5 { .say if !{ $_ < 3 } ff * } doesn't do what you'd expect

[15:12] <timotimo> didn't the bot just got a fix for discord?

[15:12] <raku-bridge> <Rogue> Did it?

[15:12] <raku-bridge> <Rogue> m: for 1..5 { .say if !{ $_ < 3 } ff * }

[15:12] <evalable6> Rogue, rakudo-moar f1960baa9: OUTPUT: ¬´¬ª

[15:13] <raku-bridge> <Rogue> See, nothing. And yet....

[15:13] <timotimo> m: say !{ $_ < 4} given 5

[15:13] <raku-bridge> <Rogue> m: for 1..5 { .say if { $_ !< 3 } ff * } # move the negation inside the block, it does what the first bit of code should do

[15:13] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´False‚ê§¬ª

[15:13] <evalable6> Rogue, rakudo-moar f1960baa9: OUTPUT: ¬´3‚ê§4‚ê§5‚ê§¬ª

[15:13] <timotimo> m: say { $_ < 4} given 5

[15:13] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´-> ;; $_? is raw = OUTER::<$_> { #`(Block|81025272) ... }‚ê§¬ª

[15:13] <timotimo> m: say do { $_ < 4} given 5

[15:13] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´False‚ê§¬ª

[15:13] <timotimo> i'm not actually sure negated code blocks is a thing

[15:14] <raku-bridge> <Rogue> m: say 1 ~~ !{ $_ > 1 }

[15:14] <evalable6> Rogue, rakudo-moar f1960baa9: OUTPUT: ¬´False‚ê§¬ª

[15:15] <timotimo> m: say 1 ~~ !{ say "executed? $_" }

[15:15] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´False‚ê§¬ª

[15:15] <timotimo> i think negating a code block just always results in False?

[15:15] <raku-bridge> <Rogue> Oh... wait a minute... maybe I got some behavior that looked correct because of the particular condition, but actually wasn't

[15:15] <timotimo> :)

[15:16] <raku-bridge> <Rogue> You gotta love these occasion mind benders

[15:16] <raku-bridge> <Rogue> occasional*

[15:16] <raku-bridge> <Rogue> Generally less frequent with Raku than other languages, but it still happens

[15:17] *** soursBot left
[15:20] <AlexDaniel> are dynamic variables usable?

[15:20] <[Coke]> m: say so &sort

[15:20] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´True‚ê§¬ª

[15:20] <[Coke]> ^^

[15:21] <Altreus> Rather than repeat my question a bunch, can I put my virtual hand up for someone who knows about supplies, specifically .migrated ones

[15:21] <Altreus> cos it's Not Working :)

[15:21] <AlexDaniel> timotimo: yeah, it's fixed. That message had some text at the end, so it didn't compile (there was no m: so autodetection decided it's not really worth printing the output)

[15:22] <timotimo> right

[15:22] <timotimo> i didn't know what the issue was, i only saw a commit fixing "the issue"

[15:22] <AlexDaniel> ah, I read some more messages, nevermind

[15:22] *** Sgeo joined
[15:23] <timotimo> Altreus: i suggest you use a visualizer tool for Supply stuff

[15:23] <AlexDaniel> I got confused because at first I thought ‚Äúfor 1..5 { .say if !{ $_ < 3 } ff * } doesn't do what you'd expect‚Äù message should've eval-ed too

[15:23] <timotimo> such a thing doesn't exist yet, to my knowledge

[15:23] <timotimo> so you'll have to build it first :) :) :)

[15:23] <Altreus> you are a monster

[15:23] <AlexDaniel> anyway, so‚Ä¶ dynamic variables? For example, if I decide to use a start block somewhere, dynamic variables are then of no use right?

[15:24] <timotimo> start blocks hold on to dynamic variables for you

[15:24] <timotimo> some are cleared, such as $*THREAD though

[15:25] <AlexDaniel> Hash %*BOT-ENV = {:background("white"), :height(800), :range("2014.01..HEAD"), :timeout(10), :width(1000)}

[15:25] <AlexDaniel> ok let's start

[15:25] <AlexDaniel> Failure.new(exception => X::Dynamic::NotFound.new(name => "\%*BOT-ENV"), backtrace => Backtrace.new)

[15:25] <AlexDaniel> hmmmmm?

[15:26] <AlexDaniel> here's my code

[15:26] <AlexDaniel> dd %*BOT-ENV; start { dd %*BOT-ENV }

[15:26] <evalable6> AlexDaniel, rakudo-moar f1960baa9: OUTPUT: ¬´Failure.new(exception => X::Dynamic::NotFound.new(name => "\%*BOT-ENV"), backtrace => Backtrace.new)‚ê§¬ª

[15:27] *** JJMerelo joined
[15:27] <timotimo> don'- forget to wait for that promise

[15:28] <timotimo> m: my %*BOT-ENV = :1a, :2b; dd %*BOT-ENV; await start { dd %*BOT-ENV; dd $*THREAD }

[15:28] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´Hash %*BOT-ENV = {:a(1), :b(2)}‚ê§Hash %*BOT-ENV = {:a(1), :b(2)}‚ê§Thread $*THREAD = Thread.new(app_lifetime => Bool::True, name => "GeneralWorker")‚ê§¬ª

[15:28] *** libertas left
[15:29] *** libertas joined
[15:29] <AlexDaniel> I don't get it? Does it matter? How come a start block right on the next line doesn't see the dynamic variable?

[15:30] <timotimo> well, your example code doesn't show the problem

[15:31] <AlexDaniel> timotimo: https://gist.github.com/AlexDaniel/03e8f320e3cd639a1cfa3b39054653da#file-statisfiable-p6-L81-L83

[15:31] <AlexDaniel> I'm trying to fix the bot

[15:32] <timotimo> well that is odd

[15:32] <timotimo> you have multiple dd %*BOT-ENV; how do you know which one the output comes from?

[15:33] <AlexDaniel> yea, but I'll retest to be sure

[15:33] <timotimo> do you remember why the "core setting lines" feature is commented out?

[15:33] <AlexDaniel> gist updated

[15:34] <timotimo> oh

[15:34] <timotimo> TODO, that's why

[15:34] <AlexDaniel> yes but there was a reason why I couldn't implement it

[15:35] <timotimo> ok this is strange; especially since %*BOT-ENV is also lexically available from the start block

[15:35] <AlexDaniel> timotimo: https://github.com/Raku/whateverable/issues/92#issuecomment-286013294

[15:36] <timotimo> i have a super stupid idea how to do it

[15:37] <AlexDaniel> timotimo: how? :)

[15:38] <timotimo> moar --dump blib/CORE.c.setting.moarvm  | grep annotation

[15:38] <timotimo> check the output of this

[15:38] <timotimo> it's not completely accurate

[15:39] <timotimo> but it'd show the‚Ñ¢ trend

[15:43] <AlexDaniel> timotimo: and where would I take CORE.c.setting.moarvm ?

[15:43] <timotimo> whereever it gets installed to

[15:44] <timotimo> i was thinking we'd take the highest line number for every "filename" we find in the annotations

[15:44] <timotimo> and sum them up

[15:44] <AlexDaniel> timotimo: here's what I have in rakudo: https://whateverable.6lang.org/HEAD

[15:44] <AlexDaniel> timotimo: here's what I have in moarvm: https://whateverable.6lang.org/HEAD?type=moarvm

[15:44] <timotimo> that's not a moarvm file, that's a rakudo file

[15:44] <AlexDaniel> please show my this mythical file in one of these archives

[15:44] <AlexDaniel> me*

[15:45] <timotimo> is statisfiable only for moarvm?

[15:45] <AlexDaniel> actually statisfiable only works on rakudo builds, that's easily fixable but doesn't really matter

[15:45] *** rbt left
[15:46] <AlexDaniel> ahhh it's share/perl6/runtime/CORE.c.setting.moarvm

[15:46] <AlexDaniel> right?

[15:46] *** rbt joined
[15:46] <AlexDaniel> I had‚Ä¶ troubles finding it

[15:46] <timotimo> :)

[15:46] <timotimo> not sure if we should sum .c, .d, .e and whatever else is in there, or if they should be separate lines

[15:47] <AlexDaniel> okay I can do it then as long as you help me fix the %*BOT-ENV issue

[15:47] <timotimo> crap

[15:47] <AlexDaniel> otherwise the bot is not really coming back to life x)

[15:48] <AlexDaniel> ‚ÄúThis twigil is used for dynamic variables which are looked up through the caller's, not through the outer, scope‚Äù

[15:49] <AlexDaniel> and who's the caller for start blocks?

[15:49] <timotimo> m: say DYNAMIC::.keys

[15:49] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´($?PACKAGE $=finish ::?PACKAGE GLOBALish EXPORT $! $=pod $_ !UNIT_MARKER $¬¢ $/)‚ê§¬ª

[15:49] <timotimo> m: say DYNAMIC::.keys; my %*BOT-ENV = :1a, :2b;

[15:49] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´(%*BOT-ENV ::?PACKAGE $/ $=finish $! $¬¢ $?PACKAGE GLOBALish !UNIT_MARKER $=pod $_ EXPORT)‚ê§¬ª

[15:49] <moritz> m: my $*x = 42; await start { say $*x }

[15:49] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´42‚ê§¬ª

[15:49] <timotimo> m: say DYNAMIC::.keys; my %*BOT-ENV = :1a, :2b; start { say DYNAMIC::.keys.gist ~ " <-"; }; await Promise.in(1)

[15:49] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´($¬¢ $=finish $=pod $_ $! %*BOT-ENV ::?PACKAGE $?PACKAGE $/ EXPORT GLOBALish !UNIT_MARKER)‚ê§($_ $! $/) <-‚ê§¬ª

[15:50] <timotimo> m: say DYNAMIC::.keys; my %*BOT-ENV = :1a, :2b; start { say %*BOT-ENV.gist ~ " <-"; }; await Promise.in(1)

[15:50] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´($! $_ ::?PACKAGE %*BOT-ENV $=pod $=finish $¬¢ EXPORT $?PACKAGE GLOBALish $/ !UNIT_MARKER)‚ê§{a => 1, b => 2} <-‚ê§¬ª

[15:50] <timotimo> m: say DYNAMIC::.keys; my %*BOT-ENV = :1a, :2b; sub do-the-it {  start { say %*BOT-ENV.gist ~ " <-"; }; await Promise.in(1) }; do-the-it; do-the-it

[15:50] <camelia> rakudo-moar f1960baa9: OUTPUT: ¬´(GLOBALish !UNIT_MARKER ::?PACKAGE EXPORT &do-the-it $=finish $?PACKAGE $¬¢ %*BOT-ENV $/ $! $=pod $_)‚ê§{a => 1, b => 2} <-‚ê§{a => 1, b => 2} <-‚ê§¬ª

[15:50] <timotimo> can't really get it to fail?

[15:50] <timotimo> statisfiable6: uptime

[15:50] <statisfiable6> timotimo, 1 hour, 31 minutes, and 22 seconds, 438.742188MiB maxrss. This is Rakudo version 2020.02.1-395-g2c9168b9a built on MoarVM version 2020.02.1-162-g3d8ff61e2 implementing Raku 6.d.

[15:51] <MasterDuke> https://build5nines.com/sysinternals-procdump-for-linux/ huh, looks like it might be useful

[15:51] <AlexDaniel> moritz: yeah that works except when it doesn't: https://gist.github.com/AlexDaniel/03e8f320e3cd639a1cfa3b39054653da#file-statisfiable-p6-L81-L82

[15:51] *** cpan-raku left
[15:51] <timotimo> committable6: 2c9168b9a say DYNAMIC::.keys; my %*BOT-ENV = :1a, :2b; sub do-the-it {  start { say %*BOT-ENV.gist ~ " <-"; }; await Promise.in(1) }; do-the-it; do-the-it

[15:51] <committable6> timotimo, ¬¶2c9168b: ¬´(!UNIT_MARKER ::?PACKAGE EXPORT $! $¬¢ $?PACKAGE $=pod $/ %*BOT-ENV $_ &do-the-it $=finish GLOBALish)‚ê§{a => 1, b => 2} <-‚ê§{a => 1, b => 2} <-‚ê§¬ª

[15:52] <timotimo> even with the same version as the bot uses

[15:52] <AlexDaniel> timotimo: this bug has been there forever

[15:52] <AlexDaniel> if it's a bug

[15:52] <AlexDaniel> I'm on 2020.05.1-304-ge231558c4 and it's also there

[15:52] <El_Che> Perl 7 baby

[15:53] <El_Che> https://www.facebook.com/theperlconference/posts/948010845621877

[15:53] <JJMerelo> Not going there... Facebook, bad.

[15:53] <tellable6> 2020-06-24T13:09:45Z #raku <sena_kun> JJMerelo please, ping me whenever comfortable re docs we discussed.

[15:54] <JJMerelo> .tell sena_kun maybe next Friday? Tomorrow I'm givin the talk in TPCiC...

[15:54] <tellable6> JJMerelo, I'll pass your message to sena_kun

[15:55] <Altai-man_> JJMerelo, sure, good luck with your talk!

[15:55] <JJMerelo> (implied is that it's not totally ready yet... )

[15:56] *** orinthe5 joined
[15:56] <Altai-man_> And good luck with your slides. :]

[15:56] <JJMerelo> Thanks :-)  I'm looking forward to reading them :-)  (it will mean I've actually written them)

[15:57] *** cpan-raku joined
[15:57] *** cpan-raku left
[15:57] *** cpan-raku joined
[15:57] <AlexDaniel> El_Che: sounds very nice

[15:57] <AlexDaniel> weekly: Perl 7 https://www.facebook.com/theperlconference/posts/948010845621877

[15:57] <notable6> AlexDaniel, Noted! (weekly)

[15:57] *** orinthe left
[15:57] *** orinthe5 is now known as orinthe

[15:58] *** skids joined
[16:02] *** sena_kun joined
[16:03] *** Altai-man_ left
[16:06] <antoniogamiz> patrickb: I'm getting the error: ERROR: NQP_HOME is invalid: D:\a\1\s\rakudo\..\share\nqp

[16:06] <antoniogamiz>  after downloading the rakudo zip from rakudo.org and trying to run raku.exe, any idea?

[16:07] <patrickb> interesting.

[16:07] <patrickb> Where did you put it? D:\a\1\s\rakudo ?

[16:07] <patrickb> can you try moving it to some folder in C and see what happens?

[16:07] *** Shapes6312 left
[16:08] <antoniogamiz> I have not moved anything, just downloaded the zip, unzip it with 7zip and run it

[16:09] <patrickb> OK. But can you try moving it to the C: drive and see if it works then? It is possible you are the first person trying to run a raku from a non C: drive and there is some bug preventing that.

[16:10] <antoniogamiz> that's the error from my azure pipeline, I'm getting the same result locally (where I have it in C:)

[16:10] <patrickb> uh oh

[16:10] <patrickb> version 2020.06?

[16:10] <antoniogamiz> maybe is a problem with 7zip mm, because nqp directory is empty after unzip

[16:10] <antoniogamiz> yep

[16:10] <patrickb> *trying this now

[16:10] *** rbt left
[16:11] *** rbt joined
[16:12] <antoniogamiz> oh the problem is with 7zip

[16:12] <antoniogamiz> it changes the structure of the directories mm

[16:13] <patrickb> what?!?

[16:14] <antoniogamiz> I was using '7z e' instead of '7zip x'

[16:14] *** soursBot joined
[16:14] <patrickb> ah ok

[16:14] <patrickb> *phew

[16:21] <[Coke]> here's the p6 announcement on perl.com: https://www.perl.com/article/announcing-perl-7/

[16:21] <[Coke]> p*7*

[16:22] <timotimo> i applaud the decision to have all these good use statements for free

[16:24] *** Black_Ribbon joined
[16:31] *** sno left
[16:31] *** sjm_uk joined
[16:33] <ShimmerFairy> Honestly, I'm surprised they did the "jump to 7" trick, I would've gone with a Java-esque "ignore the 5. part"

[16:34] <JJMerelo> Sawyer has mentioned that jumping up to 34 would be jumping up too high

[16:34] <JJMerelo> or "doing a Firefox"

[16:34] <antoniogamiz> patrick: zef is not inside rakudo-2020.06/bin folder, where is it?

[16:35] <antoniogamiz> ah ignore that hehe

[16:36] <jdv79> wonder how a Perl 8 vs raku 6.$whatever-it-is-at-the-time would compare

[16:37] <raku-bridge> <DataKinds> perl 8, in, you know, another 20 years üòõ

[16:39] <ShimmerFairy> .oO(It'd be funny if Perl programmers somehow reject Perl 7 too.)

[16:39] *** zacts left
[16:42] <tadzik> only Anna will ;)

[16:43] <JJMerelo> tadzik and Patrick. Bad, bad Patrick.

[16:43] *** abraxxa left
[16:44] <ShimmerFairy> Also, I seem to recall there being another Perl 7 already.

[16:44] <JJMerelo> Was it? There was something called Perl 11... With "something" being, actually, a very accurate description for it.

[16:45] <raku-bridge> <DataKinds> moment of silence for _why

[16:46] <ShimmerFairy> I might be thinking of Perl 11, but I could swear there was a P7 project. So far just found this: https://github.com/perl7/perl7

[16:46] * sena_kun remembers that

[16:46] <tellable6> 2020-06-24T15:54:43Z #raku <JJMerelo> sena_kun maybe next Friday? Tomorrow I'm givin the talk in TPCiC...

[16:47] <JJMerelo> ZoffixZnet... I'd never heard about that, actually...

[16:47] *** TeamBlast left
[16:47] <JJMerelo> Written in NQP...

[16:48] *** sivoais left
[16:49] <ShimmerFairy> Yeah, I think Perl 11 is what I was thinking of. I really just remember ASCII art of a flask or something.

[16:50] <raku-bridge> <DataKinds> ShimmerFairy: that would be here https://github.com/perl11/potion#-readme-

[16:50] <antoniogamiz> patrickb: can you take a look at https://github.com/Raku/Documentable/blob/develop/azure-pipelines.yml and tell me why tests are not being run?

[16:50] <El_Che> perl 11 was reini`s thing

[16:52] *** xinming joined
[16:54] <El_Che> dododterrible wifi sorry

[16:54] * ShimmerFairy just got a giggle out of p2 on potion's website mentioning parrot

[16:55] *** soursBot left
[16:55] *** xinming_ left
[17:00] *** sivoais joined
[17:00] *** TeamBlast joined
[17:02] <El_Che> If you need an older Perl to run your code, you are going to be fine. Those old versions are not going to disappear. Just like Perl 5.6 is still available, if that‚Äôs the version you wish to run.

[17:02] <El_Che> ^-- that`s not very sane advice

[17:03] <patrickb> antoniogamiz: Looking at the log in azureci it looks like it it doing what you wrote there.

[17:03] <patrickb> https://dev.azure.com/antoniogamiz10/Documentable/_build/results?buildId=12&view=logs&j=12f1170f-54f2-53f3-20dd-22fc7dff55f9&t=9c939e41-62c2-5605-5e05-fc3554afc9f5

[17:03] <El_Che> use versions with known security flaws

[17:04] <patrickb> antoniogamiz: Can you try putting the set-env.bat and zef bits into a separate script block?

[17:05] <antoniogamiz> patrickb: but zef install . is not being executed, actually any command after 7z is not run

[17:05] <patrickb> Also you can run the pipeline with debug prints enabled (when you trigger a run from the azure website there is a tick box a the bottom "enable debug output")

[17:05] <patrickb> I just saw. Can you try putting the set-env.bat and zef bits into a separate script block?

[17:06] <antoniogamiz> like this? https://github.com/Raku/Documentable/blob/develop/azure-pipelines.yml

[17:06] <patrickb> yes

[17:07] <antoniogamiz> https://dev.azure.com/antoniogamiz10/Documentable/_build/results?buildId=15&view=logs&j=12f1170f-54f2-53f3-20dd-22fc7dff55f9&t=5caf77c8-9b10-50ef-b5c7-ca89c63e1c86

[17:07] <patrickb> Do you know that you can edit the azure-pipelines.yml file directly on the azureci website (including syntax highlighting, help and stuff) and run it from there?

[17:07] <antoniogamiz> oh I did not know that, thanks

[17:07] <patrickb> Can you run the pipeline with debug prints enabled (when you trigger a run from the azure website there is a tick box a the bottom "enable debug output")

[17:09] <antoniogamiz> I'm looking for the debug button...

[17:10] <antoniogamiz> ah enable system diagnostics?

[17:13] <antoniogamiz> patrickb: https://dev.azure.com/antoniogamiz10/Documentable/_build/results?buildId=19&view=logs&j=12f1170f-54f2-53f3-20dd-22fc7dff55f9

[17:13] *** abraxxa joined
[17:13] *** MasterDuke left
[17:16] <patrickb> antoniogamiz: Is this working locally?

[17:16] <patrickb> I'm not sure about the %cd% thing you have there

[17:18] *** abraxxa left
[17:21] *** abraxxa joined
[17:24] *** team\andinus is now known as notandinus

[17:25] <antoniogamiz> patrickb: yep

[17:25] <antoniogamiz> %cd% returns the current directory

[17:25] <patrickb> Can you just leave that off?

[17:25] <patrickb> Also can you add some debug prints before and after to see where it fails?

[17:26] <antoniogamiz> If i leave that off the .bat file will not be found i think+

[17:29] <antoniogamiz> yep, it errs The system cannot find the path specified.

[17:29] <rbt> Looking for DBIish API feedback. I'd like to replace do( --> Int); where Int is kinda useless, with execute( --> StatementHandle) where StatementHandle is quite useful.   https://github.com/raku-community-modules/DBIish/pull/192

[17:29] <rbt> JJMerelo asked about that here: https://github.com/raku-community-modules/DBIish/issues/185   I thought it was a good idea.

[17:30] <antoniogamiz> https://dev.azure.com/antoniogamiz10/Documentable/_build/results?buildId=20&view=logs&j=12f1170f-54f2-53f3-20dd-22fc7dff55f9&t=5caf77c8-9b10-50ef-b5c7-ca89c63e1c86

[17:30] <JJMerelo> rbt all for it, obviously :-)

[17:31] <rbt> Yeah, one small niggle. It changes $sth.execute() to return a StatementHandle too for consistency. Previously it also returned Int (number of rows impacted).  Kinda curious if anyone actually used the return code from $sth.execute.

[17:32] <JJMerelo> rbt you can try and search GitHub

[17:32] <JJMerelo> But also, you can simply bump up the api version. It will not break anything, and you can go ahead with the new API.

[17:33] <JJMerelo> Or API number. Not a version. Have to remember that.

[17:33] <antoniogamiz> patrickb: this was the problem https://stackoverflow.com/questions/58143886/azure-pipeline-command-line-agent-job-seems-to-ignore-the-commands-following-the

[17:33] <rbt> I'm still new to all the META6 abilities. How do you bump an API number?

[17:33] <skids> .oO(Could return  StatementHandle but 3  for a while during deprecation cycle)

[17:34] <patrickb> antoniogamiz: Nice you solved it!

[17:34] <JJMerelo> Add :api<1> to the declaration of the class, and the distribution. By default, it's api<0>

[17:34] <rbt> I see. Thanks.

[17:35] <rbt> That would be toplevel right? On unit class DBIish:api<1> ?

[17:36] <JJMerelo> Correct.

[17:36] <JJMerelo> Where you change API.

[17:36] <rbt> thanks

[17:36] <JJMerelo> I mean, where you change the actual API, by giving a method a different signature.

[17:37] <JJMerelo> But you can also use a multi, as I suggest... Raku will pattern-match signature, and work with the best available.

[17:37] <JJMerelo> That will not change the API, and you get the best of both worlds.

[17:38] <rbt> Does that work where rc isn't typed?    my $rc = $sth.execute()

[17:40] <skids> Multi doesn't work on the return type... it's not "wantarray"

[17:41] *** antoniogamiz left
[17:41] <JJMerelo> rbt no, it does not. Not part of the signature. But you can detect if it's in void context and make it work differently. https://docs.raku.org/language/contexts#Sink

[17:41] <JJMerelo> Anyway, if it's too complicated, simply use other, similar, idiom.

[17:42] <rbt> In Perl5 DBI the return code was typically used to detect errors. Raku has both Fail and Exceptions. IMO, the original port missed a trick by keeping that bit :)

[17:43] *** Black_Ribbon left
[17:43] *** Black_Ribbon joined
[17:53] *** kensanata left
[17:57] *** Doc_Holliwould joined
[18:01] *** Altai-man_ joined
[18:03] *** sena_kun left
[18:05] *** girafe left
[18:07] *** JJMerelo left
[18:11] *** dataangel joined
[18:16] <El_Che> if people needed a good reason to rename their repo fron p6-* to raku-* they certainly have one today

[18:20] *** zacts joined
[18:23] *** bocaneri left
[18:32] *** Cabanossi left
[18:35] <El_Che> The video seems to be private now

[18:36] <El_Che> weird to take it offline when everyone is linking to it

[18:37] *** Doc_Holliwould left
[18:37] <El_Che> they just moved it

[18:38] *** xinming left
[18:39] *** xinming joined
[18:39] <El_Che> https://youtu.be/6wPMh-3qYJM?t=1024 if someone needs it

[18:43] *** Cabanossi joined
[18:44] *** molaf left
[18:50] *** zacts left
[18:55] *** Doc_Holliwould joined
[19:14] *** lichtkind left
[19:17] *** natrys joined
[19:33] *** soursBot joined
[19:34] *** wamba joined
[19:41] *** TeamBlast left
[19:41] *** sivoais left
[19:43] *** molaf joined
[19:44] *** sivoais joined
[19:44] *** TeamBlast joined
[20:01] *** sena_kun joined
[20:03] *** Altai-man_ left
[20:06] *** lichtkind joined
[20:07] *** chloekek joined
[20:07] <chloekek> .

[20:08] <tadzik> o/

[20:08] <chloekek> I crave tzatziki all day and then tadzik says hi

[20:08] *** kensanata joined
[20:09] <tadzik> :>

[20:09] <chloekek> CRAI is still up and running, does anyone use it?

[20:09] <chloekek> Maybe I should install analytics software.

[20:10] <chloekek> The cronjob seems to work still, only has sporadic failures, about eight since its inception.

[20:20] *** soursBot left
[20:27] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2020/06/24/a-raku-riddle/

[20:28] <El_Che> weekly: https://gfldex.wordpress.com/2020/06/24/a-raku-riddle/

[20:28] <notable6> El_Che, Noted! (weekly)

[20:28] *** TeamBlast left
[20:29] *** sivoais left
[20:32] *** xq joined
[20:35] *** TeamBlast joined
[20:37] *** aborazmeh joined
[20:37] *** aborazmeh left
[20:37] *** aborazmeh joined
[20:41] *** sivoais joined
[20:42] *** MasterDuke joined
[20:45] *** aborazmeh left
[20:50] <El_Che> this talk from today touches raku: https://www.youtube.com/watch?v=wZZtrtoTjt4 Bruce Gray - Refactoring and Readability: Crouching Regex, Hidden Structures

[21:00] *** finsternis left
[21:09] * lizmat couldn't find much apart from the intro ?

[21:11] *** rbt left
[21:11] *** skids left
[21:11] *** rbt joined
[21:12] *** aborazmeh joined
[21:12] *** aborazmeh left
[21:12] *** aborazmeh joined
[21:12] *** zacts joined
[21:20] *** wamba left
[21:21] *** aborazmeh left
[21:23] *** reach_satori joined
[21:25] *** rindolf left
[21:26] *** zacts left
[21:35] <raku-bridge> <DataKinds> gfldex++

[21:56] *** softmoth joined
[21:57] *** natrys left
[21:58] *** chloekek left
[22:01] *** Altai-man_ joined
[22:03] *** sena_kun left
[22:07] *** kensanata left
[22:07] *** aborazmeh joined
[22:07] *** aborazmeh left
[22:07] *** aborazmeh joined
[22:07] <rypervenche> Oh man, I need to read more code. These are some really good examples. I was struggling with a similar example of figuring out how to nest my data.

[22:13] *** sno joined
[22:17] <El_Che> lizmat: yeah, I didn't finished, had to go away for some time

[22:19] <El_Che> -ed

[22:25] *** patrickb left
[22:27] *** aborazmeh left
[23:04] *** squashable6 left
[23:04] *** softmoth left
[23:05] *** lichtkind left
[23:07] *** squashable6 joined
[23:11] *** xinming left
[23:13] *** xinming joined
[23:15] *** brtastic left
[23:23] *** sno left
[23:23] *** pecastro left
[23:25] *** sno joined
[23:28] <rypervenche> I wonder if anyone might have any tips on how I might store this information: https://gist.github.com/rypervenche/a1a70ad00d401417d44bd6530b0bd020

[23:28] <rypervenche> I hope it's understandable.

[23:33] <jnthn> rypervenche: Is the "1" in links.csv an ID in sentences.csv, or just an identifier for things grouped together?

[23:33] <rypervenche> jnthn: Yes, they are the same ID.

[23:34] <jnthn> I'm sleepy, but probably I'd process links.csv first to make a lookup that I can index with the value in the second column to get the first column

[23:35] <jnthn> Then use that as I go through sentences.csv to figure out which "group" the entry goes into

[23:35] <jnthn> You could use a hash for the stuff in links.csv, but my guess is that the IDs aren't sparse, so it'd probably be a huge amount cheaper to use a native int array for it

[23:39] <rypervenche> I'm not sure what sparse means here. I know that one ID can point to multiple IDs, as there are sometimes multiple translations for a sentence. And I also know that they mapped the sentences backward as well, from the translated sentence to the original sentence. I'll be getting around that by only searching for the sentences in my target language.

[23:41] <jnthn> rypervenche: I mean: I see there is 1276 and 1277, also 1280, so there's a gap there. Maybe those values are somewhere else in the file.

[23:41] <rypervenche> Oh, yeah, there will be gaps.

[23:41] <rypervenche> That's why I was thinking of a hash instead of an array.

[23:42] <jnthn> Yeah, it really depends on how big and how typical the gaps are

[23:42] <jnthn> Also the range of IDs

[23:43] <rypervenche> Up to 8,859,201 for both. I can't say about the gaps. Probably a lot.

[23:43] <jnthn> I mean, a `my int @a` takes 8 bytes per entry in the array. A hash bucket involves storing the key *and* the value and has its own overhead too.

[23:43] <jnthn> Ah, that's small enough you can use an int32 array even

[23:44] <jnthn> Density you can figure out by dividing the maximum ID by the number of lines in the file.

[23:44] <jnthn> If you get a number less than 10 then the packed integer array probably comes out ahead.

[23:44] <jnthn> On memory *and* speed

[23:45] <jnthn> If you can afford the memory and want speed, a bigger factor is OK too

[23:46] <jnthn> You mentiond sentences.csv was 8,445,232 lines in the gist, so the factor is 1.x (can't be bothered to calculate it, but I mean, it's close to 1), so you can just do the native int array.

[23:46] <jnthn> And probably win a good bit on memory use and speed

[23:47] <jnthn> (Compared to a hash)

[23:47] <jnthn> Anyways, I should get a bit of sleep...it's been a long day

[23:47] <jnthn> Good luck! :) o/

[23:47] <rypervenche> Ahhh. Thanks a bunch for your help! I'll give that a go.

[23:54] *** MilkmanDan joined
