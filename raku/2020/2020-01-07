[00:55] *** sourceable6 left
[00:55] *** unicodable6 left
[00:55] *** quotable6 left
[00:55] *** coverable6 left
[00:55] *** evalable6 left
[00:55] *** benchable6 left
[00:55] *** shareable6 left
[00:55] *** releasable6 left
[00:55] *** squashable6 left
[00:55] *** greppable6 left
[00:55] *** tellable6 left
[00:55] *** committable6 left
[00:55] *** statisfiable6 left
[00:55] *** nativecallable6 left
[00:55] *** notable6 left
[00:55] *** bloatable6 left
[00:55] *** reportable6 left
[00:55] *** bisectable6 left
[00:55] *** greppable6 joined
[00:55] *** nativecallable6 joined
[00:55] *** releasable6 joined
[00:56] *** bisectable6 joined
[00:56] *** benchable6 joined
[00:56] *** reportable6 joined
[00:56] *** evalable6 joined
[00:56] *** coverable6 joined
[00:56] *** cpan-raku left
[00:57] *** bloatable6 joined
[00:57] *** statisfiable6 joined
[00:57] *** notable6 joined
[00:57] *** tellable6 joined
[00:58] *** shareable6 joined
[00:58] *** quotable6 joined
[00:58] *** committable6 joined
[00:58] *** sourceable6 joined
[00:58] *** squashable6 joined
[00:58] *** unicodable6 joined
[00:58] *** cpan-raku joined
[00:58] *** cpan-raku left
[00:58] *** cpan-raku joined
[01:05] *** Tirifto left
[01:30] *** wildtrees left
[01:34] *** lgtaube left
[01:52] *** Altai-man_ joined
[01:54] *** sena_kun left
[01:58] *** thundergnat left
[02:03] *** maggotbrain left
[02:05] *** maggotbrain joined
[02:18] *** Poohman left
[02:22] *** lgtaube joined
[02:33] *** marcusr left
[02:34] *** marcusr joined
[03:18] *** AlexDaniel left
[03:22] *** squashable6 left
[03:25] *** squashable6 joined
[03:53] *** sena_kun joined
[03:55] *** Altai-man_ left
[04:27] *** xinming_ left
[04:28] *** xinming_ joined
[04:38] *** unicodable6 left
[04:38] *** tellable6 left
[04:38] *** benchable6 left
[04:38] *** evalable6 left
[04:38] *** statisfiable6 left
[04:38] *** coverable6 left
[04:39] *** evalable6 joined
[04:39] *** tellable6 joined
[04:39] *** benchable6 joined
[04:39] *** unicodable6 joined
[04:39] *** coverable6 joined
[04:40] *** statisfiable6 joined
[05:40] *** unicodable6 left
[05:40] *** releasable6 left
[05:40] *** benchable6 left
[05:40] *** coverable6 left
[05:40] *** nativecallable6 left
[05:40] *** squashable6 left
[05:40] *** committable6 left
[05:40] *** reportable6 left
[05:40] *** quotable6 left
[05:40] *** greppable6 left
[05:40] *** statisfiable6 left
[05:40] *** sourceable6 left
[05:40] *** notable6 left
[05:40] *** bloatable6 left
[05:40] *** shareable6 left
[05:40] *** bisectable6 left
[05:41] *** releasable6 joined
[05:41] *** coverable6 joined
[05:41] *** committable6 joined
[05:41] *** statisfiable6 joined
[05:41] *** greppable6 joined
[05:42] *** benchable6 joined
[05:42] *** bisectable6 joined
[05:43] *** squashable6 joined
[05:43] *** notable6 joined
[05:43] *** reportable6 joined
[05:43] *** quotable6 joined
[05:43] *** nativecallable6 joined
[05:44] *** sourceable6 joined
[05:44] *** bloatable6 joined
[05:44] *** unicodable6 joined
[05:44] *** shareable6 joined
[05:52] *** Altai-man_ joined
[05:55] *** sena_kun left
[06:02] *** stoned75 joined
[06:17] *** jmerelo joined
[06:24] <Geth> ¦ old-issue-tracker: c9a5000782 | (Aleks-Daniel Jakimenko-Aleksejev)++ | README.md

[06:24] <Geth> ¦ old-issue-tracker: Improve the README a bit

[06:24] <Geth> ¦ old-issue-tracker: review: https://github.com/Raku/old-issue-tracker/commit/c9a5000782

[06:28] *** AlexDaniel joined
[06:28] *** AlexDaniel left
[06:28] *** AlexDaniel joined
[06:40] *** wamba joined
[06:44] *** horsepatat joined
[06:44] <jmerelo> AlexDaniel: so we can use this one now, right?

[06:46] <AlexDaniel`> Yea

[06:47] <jmerelo> AlexDaniel`: can I move any documentation ticket to the documentation repo, for instance

[06:47] *** stoned75 left
[06:48] <AlexDaniel`> Yes

[06:48] <jmerelo> AlexDaniel`: OK, thanks :-)

[06:48] <AlexDaniel`> Well, try and we'll see how it goes

[06:48] <AlexDaniel`> But you should be able to, I think

[06:50] <jmerelo> AlexDaniel`: done https://github.com/Raku/doc/issues/3147 Thanks!

[06:50] <jmerelo> AlexDaniel`: if any other issue looks like it belongs to documentation, feel free to assign it to me and/or transfer it.

[07:08] <Geth> ¦ doc: 1e98c5ed0d | (JJ Merelo)++ | doc/Type/Any.pod6

[07:08] <Geth> ¦ doc: Clarifies permutations, refs #2632

[07:08] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1e98c5ed0d

[07:08] <Geth> ¦ doc: d6099f61df | (JJ Merelo)++ | doc/Type/Any.pod6

[07:08] <Geth> ¦ doc: Clarifies combinations, refs #2632

[07:08] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/d6099f61df

[07:18] <Geth> ¦ doc: JJ++ created pull request #3149: Document Mixy.pick/.grab/.kxxv

[07:18] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3149

[07:35] *** jmerelo left
[07:52] *** rindolf joined
[07:53] *** sena_kun joined
[07:55] *** Altai-man_ left
[07:56] *** wamba left
[08:19] *** kensanata joined
[08:26] *** abraxxa joined
[08:26] *** abraxxa left
[08:27] *** abraxxa joined
[08:31] *** wamba joined
[08:33] *** rindolf left
[08:38] *** xinming joined
[08:41] *** xinming_ left
[08:56] *** rindolf joined
[09:02] *** scimon joined
[09:08] <scimon> Morning

[09:12] <sena_kun> o/

[09:12] <tellable6> 2020-01-06T21:55:37Z #raku-dev <japhb> sena_kun: There are some known flappers.  I don't spectest much, so I'm out of date, but lizmat may know them.  zoffix used to keep an up to date list, but I'm assuming that left when zoffix did.

[09:18] <rypervenche> I've got a question. I'm very new to Raku (my first programming language). I was curious to know if there's a way to easily remove the newlines from a string better than this? I feel as though there should be a/some method/s for this... https://gist.github.com/rypervenche/3fa6a07e2bc6c38a0df2caff057d95b3

[09:20] *** kensanata left
[09:20] <rypervenche> Including creating a scalar with the example string directly in the script, which would be a little different since it would have indenting to keep its shape.

[09:22] <sena_kun> rypervenche, subst(:g) is already a cool solution and is more generic... but, alternatively, you can use `.chop` on each string you got before concatenating.

[09:22] *** wamba left
[09:23] <sena_kun> https://gist.github.com/rypervenche/3fa6a07e2bc6c38a0df2caff057d95b3#file-sudoku-p6-L28 <- just use $_.chomp here

[09:23] <sena_kun> m: print "hehe\n".chomp

[09:23] <camelia> rakudo-moar 5d5701171: OUTPUT: «hehe»

[09:24] <sena_kun> ^ no newline

[09:24] <sena_kun> m: print "hehe\n"

[09:24] <camelia> rakudo-moar 5d5701171: OUTPUT: «hehe␤»

[09:24] <sena_kun> ^ a newline

[09:24] <sena_kun> rypervenche, ^

[09:33] <rypervenche> I guess I'm looking to see if there's a solution without needing the loop. Like this but better (I could do it with one subst, but just doing this quickly) https://gist.github.com/rypervenche/b2d5bf67ffc2772479cc9728a2e52fbc

[09:35] <sena_kun> rypervenche, you can have one subst just using alteration in regex

[09:35] <sena_kun> say $var.subst(/\n|\s+/, '', :g);

[09:35] <sena_kun> is enough

[09:36] <rypervenche> Ok, thanks. :) I wasn't sure if there was a specific method that might do what I was trying to do. I want to do things the Raku way :)

[09:38] <sena_kun> rypervenche, well, "strip all certain characters from a string and the certain characters are related to ws" is oddly specific to put it into core, I'd say. And removing the condition "if ws" it looks like a job for subst, which is generic enough.

[09:39] <sena_kun> rypervenche, but keep in mind that when working with stdin using .chomp as was suggested will be more efficient than going with subst for the whole line. it doesn't matter much for such small strings, but when you have a lot of those...

[09:40] <rypervenche> Ah ok. I see what you meant now. I'll mess around with that too. Thanks again. I'm sure I'll be here with more questions once I'm back from vacation.

[09:41] <sena_kun> rypervenche, sure, you are welcome!

[09:51] <El_Che> jmerelo: "Minimalistic, Experimental and Emerging Languages" devroom. I home the commas meand OR and not AND :)

[09:51] <tellable6> El_Che, I'll pass your message to jmerelo

[09:52] <El_Che> and also: 98! 98! 98!

[09:52] *** Altai-man_ joined
[09:53] <holyghost> .

[09:53] <tellable6> 2020-01-05T18:05:35Z #raku <lizmat> holyghost it's called Raku nowadays :-)

[09:54] <holyghost> lizmat : I'm glad I finished it :-)

[09:55] *** sena_kun left
[09:56] <holyghost> I still have to put a raku compiler on Xliff's server

[09:57] <El_Che> lizmat: I made the error to click on the raku facebook link. Still drama land it seems

[09:57] <holyghost> I am reading "Monte Carlo Methods in Bayesian Computation" now

[10:11] *** xinming left
[10:12] *** xinming joined
[10:15] *** Benett left
[10:16] *** rindolf left
[10:29] *** Benett joined
[10:29] *** cognomin_ joined
[10:33] *** cognominal left
[10:33] *** xinming left
[10:33] *** xinming joined
[10:42] *** pmurias_ joined
[10:42] *** Black joined
[10:43] *** Benett left
[10:45] *** Black is now known as Benett

[10:50] *** rindolf joined
[10:59] *** jmerelo joined
[11:00] * lizmat clickbaits https://rakudoweekly.blog/2020/01/06/2020-01-20-20-foresight/

[11:15] *** xinming left
[11:16] *** xinming joined
[11:19] *** tejr left
[11:25] *** Guest38485 joined
[11:51] *** gabiruh joined
[11:53] *** sena_kun joined
[11:55] *** Altai-man_ left
[11:55] *** tejr joined
[12:02] *** cognomin_ left
[12:03] *** cognominal joined
[12:05] *** cognominal left
[12:37] *** pmurias_ left
[12:38] *** pmurias_ joined
[12:39] *** Doc_Holliwood left
[12:39] *** xinming left
[12:39] *** Doc_Holliwould left
[12:39] *** lucasb joined
[12:41] *** xinming joined
[12:44] *** Doc_Holliwould joined
[12:44] *** Doc_Holliwood joined
[12:47] *** jmerelo left
[13:01] *** wamba joined
[13:16] *** mensvaga joined
[13:27] *** gabiruh_ joined
[13:27] *** rindolf left
[13:30] *** gabiruh left
[13:42] *** jmerelo joined
[13:46] *** wamba left
[13:46] *** wamba joined
[13:52] *** Altai-man_ joined
[13:54] *** rindolf joined
[13:54] *** sena_kun left
[13:56] *** squashable6 left
[13:59] *** squashable6 joined
[14:07] *** jmerelo left
[14:24] *** wamba left
[14:42] *** MasterDuke joined
[14:52] *** horsepatat left
[15:02] *** melezhik left
[15:05] *** melezhik joined
[15:23] *** wamba joined
[15:24] *** pmurias_ left
[15:26] *** rindolf left
[15:29] *** rindolf joined
[15:34] *** veesh_ joined
[15:36] *** veesh left
[15:37] *** veesh_ is now known as veesh

[15:40] *** Doc_Holliwould left
[15:40] *** Doc_Holliwood left
[15:45] *** ufobat joined
[15:49] *** wamba left
[15:50] *** Doc_Holliwould joined
[15:50] *** Doc_Holliwood joined
[15:53] *** sena_kun joined
[15:55] *** pmurias joined
[15:55] *** Altai-man_ left
[16:28] *** sjn left
[16:52] <scimon> I am confused about complex exponents. 

[16:52] <scimon> m: i ** 2

[16:52] <camelia> rakudo-moar a4b62fb13: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "**" in expression "i ** 2" in sink context (line 1)␤»

[16:52] <scimon> m: say i ** 2

[16:52] <camelia> rakudo-moar a4b62fb13: OUTPUT: «-1+1.2246467991473532e-16i␤»

[16:52] <scimon> Why isn't that -1? Is this a Math thing I have misunderstood.

[16:53] <AlexDaniel> scimon: it looks like -1 to me

[16:54] <scimon> m: say i * i

[16:54] <camelia> rakudo-moar a4b62fb13: OUTPUT: «-1+0i␤»

[16:54] <AlexDaniel> scimon: look it's e-16, so you got -1 with a reeeeally small i

[16:55] <AlexDaniel> m: say round(i ** 2, 0.00001)

[16:55] <camelia> rakudo-moar a4b62fb13: OUTPUT: «-1+0i␤»

[16:55] <scimon> I just wonder why. The docs say we coerce the exponent to a Complex number before doing the equation and I'm guessing this is why the result. I'm just wondering why we're doing that.

[16:56] <AlexDaniel> scimon: it's just floating point noise

[16:56] <AlexDaniel> I think

[16:56] <scimon> (I don't know why I care, complex numbers are not something I'm ever going to use it just confused me)

[16:57] *** cpan-raku left
[17:00] <scimon> Running away. Bye.

[17:00] *** scimon left
[17:00] *** cpan-raku joined
[17:00] *** cpan-raku left
[17:00] *** cpan-raku joined
[17:02] <tobs> scimon: I think this candidate (from the docs) catches the 2 exponent and does floating-point exponentiation which introduces the noise, instead of doing i*i: multi sub infix:<**>(Complex:D \a, Num(Real) \b --> Complex:D)

[17:02] <tellable6> tobs, I'll pass your message to scimon

[17:04] *** mahmudov left
[17:04] <tobs> there doesn't appear to be a Complex[Rat]-like thing for when a subset of the complex numbers suffices on which you want to be precise.

[17:04] <[Coke]> m: say (i**2).round(1e-5)

[17:05] <camelia> rakudo-moar a4b62fb13: OUTPUT: «-1+0i␤»

[17:09] *** wamba joined
[17:11] *** mahmudov joined
[17:25] *** wildtrees joined
[17:27] *** Tirifto joined
[17:30] *** chloekek joined
[17:35] *** jmerelo joined
[17:40] *** gabiruh_ left
[17:44] *** sjn joined
[17:48] *** wildtrees left
[17:52] *** wildtrees joined
[17:53] *** Altai-man_ joined
[17:55] *** sena_kun left
[18:06] *** xinming left
[18:08] *** xinming joined
[18:12] *** stoned75 joined
[18:21] *** wamba left
[18:22] *** guifa2 joined
[18:25] <guifa2> for methods that validate data, would it be better to do method valid(-->Bool) { so $valid }, or method validate { die unless $valid } ?

[18:26] <guifa2> I suppose I can do support both in a module, but didn't know if there might be a preference

[18:26] <jmerelo> guifa2: depends on validation, and what it means. The first would be OK for most, but in other cases it might be better to throw a typed exception (so, no die)

[18:26] <tellable6> 2020-01-07T09:51:58Z #raku <El_Che> jmerelo: "Minimalistic, Experimental and Emerging Languages" devroom. I home the commas meand OR and not AND :)

[18:27] <jmerelo> .tell El_Che Hope so, also. If not, the talk would be too short. Raku is not Minimalistic. That's it. (well, not experimental any more, either)

[18:27] <tellable6> jmerelo, I'll pass your message to El_Che

[18:35] *** gabiruh joined
[18:40] *** wamba joined
[18:41] *** gabiruh left
[18:43] <chloekek> guifa2: neither, make a data type that has an invariant that the data is always valid, and return that.

[18:43] <jmerelo> chloekek: good one :-)

[18:54] <guifa2> this is for language tags.  They can be well-formed (or not), canonical (or not), or valid (or not). mzz-ES is canonical but not valid, Es-SE is valid but non-canonical, mZy-dE is neither canonical nor valid, en-US is canonical and valid, and -foo is not well formed, and thereby not canonical or valid

[18:55] <guifa2> My classes ensure well-formedness, but not the others.  Classes can't change their type via self = foo, sadly

[18:55] <guifa2> (well, they can do also does Foo, but there's no way to retract that once it's established)

[18:57] *** stoned75 left
[18:58] *** xinming left
[18:59] <guifa2> to me, canonical() and valid() should just return a Bool, but it seems less useful if you don't know why, and I don't think a False but Rationale is a model that people would necessarily expect.  Hence the thought to use validate() and throwing an exception that's more coded

[19:00] * guifa2 knows he's overthinking it, but thinks LanguageTag is a module that deserves the extra forethought

[19:00] * sjn has designed some Raku stickers to bring to FOSDEM this year o/

[19:02] <sjn> anyone here planning on going?

[19:03] *** xinming joined
[19:07] <jmerelo> sjn: I'll be there

[19:07] <jmerelo> sjn: the Perl foundation is organising a Perl/Raku table, also, so you might want to get in touch with them.

[19:08] <sjn> jmerelo: have already received a mail from Curtis & Stuart

[19:08] <jmerelo> sjn: great :-)

[19:08] <sjn> they're not very responsive though :-P

[19:10] <sjn> I'd love to have a discussion on how to make the Perl/Raku booth a nice place

[19:10] <jmerelo> sjn: did you get a link to the wikiwhatever for the organization?

[19:10] <sjn> no

[19:10] <jmerelo> Let me check

[19:11] <jmerelo> sjn: here https://codimd.opusvl.com/_Fb73361QgiCbqq2jz6Wvg#

[19:14] <sjn> thanks

[19:15] * sjn is printing 2150 stickers in 3 designs

[19:15] <jmerelo> sjn: great. Can you share the designs?

[19:18] <tadzik> I'm skipping FOSDEM this year, but I'm sure there'll be quite some interest in the booth :) Good to know there's good people behind it

[19:19] <jmerelo> tadzik: hope so. At least we won't need to introduce Raku as "Not quite the next version of Perl, which, BTW, is not dead"

[19:19] <tadzik> :P

[19:20] <sjn> jmerelo: https://www.dropbox.com/sh/x8yjm7s73idbjrf/AACp2UGtIygHGiCA5NzrTBHKa?dl=0

[19:20] <jmerelo> sjn: beautiful. Thanks!

[19:20] <jmerelo> sjn: 1337 as in 1337 hax0r?

[19:20] <sjn> yeah :)

[19:21] <jmerelo> sjn++

[19:21] <jmerelo> releasable6: status

[19:21] <releasable6> jmerelo, Next release will happen when it's ready. 1 blocker. 0 out of 409 commits logged

[19:21] <releasable6> jmerelo, Details: https://gist.github.com/ba2ef87a6d3d38b5f9d0403607fd8b6a

[19:21] <jmerelo> just checking to see if there will actually be a Raku 2020.01 by then. I guess it will.

[19:22] * sjn hopes so too

[19:22] <sjn> a Star release would be great too

[19:22] <AlexDaniel> Altai-man_: no pressure!

[19:22] <AlexDaniel> :D

[19:23] <guifa2> Altai-man_: thanks for the heads up on my build error btw

[19:32] *** mahmudov left
[19:35] <lizmat> sjn: mind if I show them in the next Rakudo Weekly ?

[19:35] *** mahmudov joined
[19:39] *** stoned75 joined
[19:39] <Altai-man_> guifa2, you are welcome. :)

[19:39] <Altai-man_> jmerelo, there will be a release, I hope, once we'll resolve https://github.com/perl6/Blin/issues/17 and I'll run blin a couple of times more. :)

[19:40] <Altai-man_> I still have no idea how / who can update the docker image.

[19:40] <jmerelo> Altai-man_: Let me see if I can help with that

[19:43] *** jmerelo left
[19:46] <Altai-man_> maybe El_Che can help with https://github.com/perl6/Blin/issues/17 ?

[19:46] * Altai-man_ runs away to read some books

[19:49] <sjn> lizmat: we'll take some pictures for you at FOSDEM :)

[19:49] <sjn> for now, I'd like some feedback before they are sent to the printer's

[19:50] <lizmat> is the text at the bottom of the Wanted one supposed to be legible or not?

[19:51] <sjn> It's not supposed to be legible

[19:51] <sjn> props to anyone who knows where the poster is from :)

[19:53] *** sena_kun joined
[19:54] *** Altai-man_ left
[20:04] *** guifa2 left
[20:04] *** xinming left
[20:04] <Geth> ¦ problem-solving: lizmat assigned to jnthn Issue Expose nqp::findcclass and nqp::notfindclass functionality https://github.com/perl6/problem-solving/issues/146

[20:04] *** xinming joined
[20:07] *** chloekek left
[20:10] *** gabiruh joined
[20:10] *** gabiruh left
[20:12] *** xinming left
[20:12] *** xinming joined
[20:16] *** Xliff joined
[20:20] <Tirifto> Hello! How should I go about loading modules from a certain non-standard directory, if I need it for a single script only? Should I temporarily add it to the environment variable ‘PERL6LIB’? The documentation also mentions the ‘use lib’ pragma, but I haven't found an explanation of what it does.

[20:20] *** melezhik left
[20:28] <Tirifto> (Context: I’d like to make my script extensible, and loading modules with routines that will be called on its data is the best way I thought of.)

[20:33] <Geth> ¦ whateverable: AlexDaniel unassigned from zoffixznet Issue Support \U https://github.com/Raku/whateverable/issues/234

[20:36] *** timotimo left
[20:45] *** timotimo joined
[20:51] <guifa> Tirifto: use lib is what you want

[20:53] <guifa> For example, let’s say my script is at …/script.raku.  I might have two modules at in …/mymods/Foo.rakumod and  …/mymods/Bar.rakumod

[20:53] <guifa> inside of script.raku, I’d just say use lib ‘mymods’; and then you can say use Foo; and use Bar;

[20:55] <Tirifto> guifa: Aha! So ‘use lib foo’ adds a new path for Raku to look for modules in?

[20:56] <guifa> Actually, I may have that slightly off — you might need to put them in a directory called ‘lib’ and point use lib to the parent.  I can’t recall right off hand which it is, but if you play around you’ll figure it out fast I’m sure :-)

[20:59] <guifa> Just double checked — the way I said it at first was correct, my memory isn’t failing me for once

[20:59] <Tirifto> guifa: Splendid; thank you! :-)

[20:59] <guifa> But you’re right we could improve the documentation on it.  There is actually a ticket on it https://github.com/Raku/doc/issues/2105

[21:05] *** MasterDuke left
[21:11] *** pmurias left
[21:12] *** AlexDaniel left
[21:14] *** Kaeipi joined
[21:14] *** Kaiepi left
[21:16] *** stoned75 left
[21:16] *** stoned75 joined
[21:23] *** mahmudov left
[21:24] *** mahmudov joined
[21:29] *** rindolf left
[21:38] *** AlexDaniel joined
[21:38] *** AlexDaniel left
[21:38] *** AlexDaniel joined
[21:53] *** Altai-man_ joined
[21:54] *** sena_kun left
[22:15] *** sauvin left
[22:19] *** sauvin joined
[22:22] <tyil> I made a module to turn pod into (part of) an html doc, which works with cgit. it turns https://home.tyil.nl/git/raku/App::Assixt/tree/README.pod6 into https://home.tyil.nl/git/raku/App::Assixt/about/

[22:22] <tyil> :D

[22:23] *** Xliff left
[22:42] *** Xliff joined
[23:17] *** melezhik joined
[23:20] *** MasterDuke joined
[23:23] <uzl[m]> tyil++

[23:23] <uzl[m]> .tell Tirifto You could use RAKUDOLIB/PERL6LIB to add a path to the list of modules that must be searched. Assuming guifa's example was under 'lib', you could run 'RAKUDOLIB=lib raku script.raku' provided the script is in the same directory as 'lib'. In the script, you'd use the module like you regularly do without 'use lib ...'. I find this way more versatile since I can just zef install the module and use it right away in the

[23:23] <uzl[m]> script.

[23:23] <tellable6> uzl[m], I'll pass your message to Tirifto

[23:50] *** MasterDuke left
[23:55] *** Altai-man_ left
[23:57] *** squashable6 left
[23:59] *** squashable6 joined
