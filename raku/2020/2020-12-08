[00:22] *** pecastro left
[00:25] *** jmchael left
[01:07] *** guifa left
[01:16] *** essem joined
[01:19] *** essem left
[01:26] *** d0d0 joined
[02:08] *** perigrin left
[02:08] *** dustinm`_ left
[02:08] *** perigrin joined
[02:09] *** dustinm` joined
[02:10] *** cxreg left
[02:10] *** bdju left
[02:11] *** cxreg joined
[02:16] *** bdju joined
[02:19] *** lucasb left
[02:19] *** frost-lab joined
[03:01] <raku-bridge> <theangryepicbanana> drinking game: for every bad practice you see here, take a shot: https://github.com/kanaka/mal/tree/master/impls/perl6

[03:02] <raku-bridge> <theangryepicbanana> (also, if that pinged someone on irc I'm sorry lol)

[03:19] *** linkable6 left
[03:19] *** evalable6 left
[03:22] *** linkable6 joined
[03:22] *** evalable6 joined
[03:35] *** xelxebar_ left
[03:35] *** xelxebar joined
[03:39] <coldpress> anyone knows what "chain-associative" and "list-associative" are in section 17.1 of https://learnxinyminutes.com/docs/raku/?

[03:44] *** aborazmeh joined
[03:44] *** aborazmeh left
[03:44] *** aborazmeh joined
[03:45] <coldpress> I'm guessing chain-associative means ($p § $q) § ($q § $r), but why does the tutorial say list-associative is infix:<>?

[03:48] <leont> Chain associative is a < b < c

[03:51] <leont> list associative is: a Z b Z c

[03:59] *** leont left
[04:00] <guifa2> coldpress: if something is chain associative, that means it handles two at a time

[04:00] *** cpan-raku left
[04:00] <guifa2> most of the math operators are chain associative

[04:00] <guifa2> 2 + 3 + 4 + 5 is really ((2 + 3) + 4) + 5)

[04:01] *** cpan-raku joined
[04:01] *** cpan-raku left
[04:01] *** cpan-raku joined
[04:02] <guifa2> so the signature is ($a, $b), and in the above would be called three times, as (2,3), and then (5,4), and then (9,5)

[04:03] <guifa2> errr

[04:04] <guifa2> my bad, I need to stop answering when I'm sleepy

[04:06] <guifa2> I'm not sure why the list associative says infix:<>, some of the listy ones include | or ^

[04:28] <coldpress> guifa2: right, (2,3), then (3,4), then (4,5), but how are these three partial results combined together?

[04:28] <coldpress> I'd appreciate it if someone points me to a Wiki page that explains this

[04:29] <coldpress> because googling and searching in docs.raku.org gives me nothing

[04:31] *** clarjon1 left
[04:31] <coldpress> oh wait, (5,4) and (9,5) both act on the partial results, right? How is chain-associative any different from left-associative, then?

[04:34] <guifa2> Actually I feel like I remember there being a bug here that got fixed recently

[04:37] *** d0d0 left
[04:37] <guifa2> yup

[04:38] <guifa2> 'twas

[04:38] <guifa2> https://github.com/rakudo/rakudo/issues/3370

[04:40] <guifa2> m: sub infix:<chain> ($a, $b) is assoc('chain') { say "Chain($a vs $b)" }; 5 chain 4 chain 3 chain 2 chain 1;

[04:40] <camelia> rakudo-moar 1ae04788c: OUTPUT: «Chain(5 vs 4)␤Chain(4 vs 3)␤Chain(3 vs 2)␤Chain(2 vs 1)␤»

[04:40] <guifa2> let me do some more testing

[04:42] <guifa2> CHain is designed mainly for truthy values only

[04:43] <guifa2> the partial results are reduced using and

[04:43] <coldpress> alright, I finished reading that tutorial's section, and I'm pretty sure list-associative means: "associative whenever both arguments are a list"

[04:44] <guifa2> chain(5,4) and chain(4,3) and chain(3,2), etc

[04:44] <guifa2> So if you want a result returned at the end, it'll only be the result from the final two that are evaluated 

[04:45] <guifa2> list-associative means all arguments are grouped in a list

[04:46] <coldpress> so list-associative is a special kind of chain-associative?

[04:46] <guifa2> so using that § operand, if you do 1 § 2 § 3 § 4 § 5 § 6, it will create a list (1,2,3,4,5,6) and then pass that to sub infix:<§> (*@args) { … }

[04:48] <guifa2> While it wouldn't make a difference for something like + or *, an operator like | or & need to get allt he arguments at once

[04:49] <guifa2> otherwise you'd end up with all(all(all(1,2),3),4) instead of all(1,2,3,4) for &

[05:01] *** roguelazer left
[05:06] *** roguelazer joined
[05:08] *** aborazmeh left
[05:11] *** aborazmeh joined
[05:11] *** aborazmeh left
[05:11] *** aborazmeh joined
[05:18] *** brtastic joined
[05:21] *** parabolize left
[05:34] *** aborazmeh left
[05:53] *** b2gills left
[05:57] *** brtastic left
[05:58] <notandinus> https://paste.debian.net/hidden/9f58cc10/ 

[05:58] <notandinus> how can i write ^ wihtout defining %entry?

[05:58] <notandinus> i want to push directly

[06:13] *** aborazmeh joined
[06:13] *** aborazmeh left
[06:13] *** aborazmeh joined
[06:18] *** BenGoldberg left
[06:19] *** ufobat joined
[06:20] *** jmcgnh left
[06:25] *** jmcgnh joined
[06:28] *** squashable6 left
[06:28] <guifa2> notandinus: use %( … ) to define a Hash inline

[06:29] <guifa2> push @instructions, %( instructions => .Str, executed => 0) 

[06:30] *** squashable6 joined
[06:35] *** [Coke] left
[06:37] *** [Coke] joined
[06:37] *** [Coke] left
[06:37] *** [Coke] joined
[06:40] *** jmerelo joined
[06:41] * guifa2 waves at jmerelo 

[06:56] <notandinus> guifa2: i see, thanks

[06:59] *** maggotbrain joined
[07:00] *** sena_kun joined
[07:13] <jmerelo> hey, guifa

[07:13] <tellable6> 2020-12-07T19:58:45Z #raku <guifa> jmerelo: yeah, unless there’s anything else you see that needs work

[07:13] <tellable6> 2020-12-07T21:54:30Z #raku <guifa> jmerelo I’ve uploaded it on WP.  Not sure which day you wanted it for

[07:13] <jmerelo> Already scheduled your article.

[07:13] <guifa2> yay

[07:13] <guifa2> jmerelo++

[07:13] <jmerelo> We're still a couple of articles short, but that would include mine

[07:13] <jmerelo> so thanks!

[07:14] <jmerelo> BTW. devroom CFP is open :-)

[07:14] * guifa2 just did wrote a crazy for loop

[07:14] <guifa2> err, just wrote*

[07:14] <guifa2> for (@a Z @b) X (@c Z @d) X (@e Z @f) -> ($x, $y, $z) { … }

[07:14] <guifa2> I'm going to mark this one down for an example to use sometime

[07:16] <jmerelo> Those are lots of X and Zs

[07:17] <guifa2> https://imgur.com/a/tvnDcI0

[07:17] <guifa2> It's surprisingly legible

[07:17] <notandinus> say i have a recursive function an di pass a big array to it, should i pass a pointer or somethng instead of the big array?

[07:19] <notandinus> it does not modify the array.

[07:20] <guifa2> subs in Raku don't default to copying values, they're what you'd call pass-by-reference in other languages by default

[07:21] <notandinus> i see, makes sense

[07:23] <guifa2> if you want a copy though, you can do that

[07:23] <guifa2> sub foo ( @a is copy )

[07:25] <coldpress> guifa2: I see, your explaining list-associativity with `all` was very clear. Thanks!

[07:26] <guifa2> coldpress: np, sorry for my initial bad description.  it's late (and yet I'm still awake for some reason lol)

[07:29] <guifa2> jmerelo: if you need another article, let me know and tomorrow afternoon I can try to write up a quick one

[07:35] <jmerelo> guifa2: don't worry, I think we'll do. Anyway if we do it's going to be towards the end of the period

[07:35] * guifa2 will probably write it up anyways, and if it's not needed, it'll be ready for next year ^_^

[07:40] <notandinus> can i specify optional return in function? like sub func ( --> Int, Bool (optional)) 

[07:40] <jmerelo> notandinus: not as such. What I would do is to use a role that piggibacks on the Int.

[07:40] <jmerelo> ^piggi^piggy

[07:40] <guifa2> ( --> Int | Bool)

[07:41] <guifa2> Means the function can return either an Int or a Bool

[07:41] <jmerelo> guifa2: Hum. Can you do that? Great. TIL something new... 

[07:41] <notandinus> i want either int or int + bool

[07:41] <guifa2> I'm fairly certain you can

[07:41] <jmerelo> notandinus: then it's the piggybacking

[07:41] <guifa2> notandinus: you're wanting to return an Int or a List that contains an Int and a Bool? 

[07:42] <notandinus> hmm i see, i'll check what piggybacking is

[07:42] <notandinus> guifa2: right

[07:42] <guifa2> I think that might be a bit too complicated to write inline, but you could do a subset

[07:42] <jmerelo> Use whatever if you want to return a number, whatever but True if you want to return that.

[07:42] <jmerelo> or whatever but false

[07:44] <jmerelo> m: sub foo( Int $þ --> Int ) { return $þ but $þ == 3 }; say so foo( 5), so foo(3)

[07:44] <camelia> rakudo-moar 1ae04788c: OUTPUT: «FalseTrue␤»

[07:44] <notandinus> ah

[07:45] <notandinus> what is this 'so' thing?

[07:45] <jmerelo> notandinus: Boolean context. Not really needed...

[07:46] <jmerelo> m: sub foo( Int $þ --> Int ) { return $þ but $þ == 3 }; say foo( 5),  foo(3)

[07:46] <camelia> rakudo-moar 1ae04788c: OUTPUT: «FalseTrue␤»

[07:46] <notandinus> actually that number contains useful information so i can't be doing `but $p == x`

[07:46] <jmerelo> notandinus: the whole thing is returned.

[07:47] <notandinus>  m: sub foo( Int $p --> Int ) { return $p but True }; say foo( 5),  foo(3)

[07:47] <camelia> rakudo-moar 1ae04788c: OUTPUT: «53␤»

[07:47] <jmerelo> m: sub foo( Int $þ --> Int ) { return $þ but $þ == 3 }; say foo( 5).raku,  foo(3).raku

[07:47] <camelia> rakudo-moar 1ae04788c: OUTPUT: «Bool::FalseBool::True␤»

[07:47] <guifa2> notandinus you get both the number and the boolean

[07:47] <guifa2> You'd probably feel more comfortable doing this though, as it works more like other languages:

[07:47] <jmerelo> notandinus: the value is used depending on the contest.

[07:47] <guifa2> subset Foo where Int | (Int, Bool); sub foo (--> Foo) { … }

[07:48] <guifa2> That will enforce you returning an Int, or (Int, Bool)

[07:49] <notandinus> actually if  i just do Int, Bool in signature and just m: $t = func(), it ignore the Bool

[07:50] <notandinus> this piggybacking thing is nice, thanks 

[07:50] <notandinus> i'll just share the code, a min

[07:51] <notandinus> are you doing advent of code thing? it's day 08 part 1

[07:51] <notandinus> https://paste.debian.net/hidden/4d767bd1/ - here

[07:51] <jmerelo> notandinus: no time... advent calendar is taking a lot of my free time. Good luck with that.

[07:54] <notandinus> i see, thanks anyways, i'll just do the Bool thing then 

[07:55] <guifa2> my @instructions = (0);  can just be my @instructions = 0;

[07:55] <guifa2> Unlike most languages, a parentheses doesn't create a list

[07:55] <notandinus> m: sub foo { return 87 but False; } say foo(); say so foo();

[07:55] <camelia> rakudo-moar 1ae04788c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3sub foo { return 87 but False; }7⏏5 say foo(); say so foo();␤    expecting any of:␤        infix␤        infix …»

[07:55] <guifa2> m: sub foo { return 87 but False; }; say foo(); say so foo();

[07:55] <camelia> rakudo-moar 1ae04788c: OUTPUT: «87␤False␤»

[07:56] <notandinus> ah thanks, guifa2 so how do i extract 87, False out of it?

[07:56] <notandinus> without running it twice

[07:57] <guifa2> m: sub foo { return 87 but False }; my $bar = foo;  say $bar; say so $bar

[07:57] <camelia> rakudo-moar 1ae04788c: OUTPUT: «87␤False␤»

[07:57] <guifa2> Just toss the result into a variable

[07:57] <coldpress> nice, is that the aforementioned piggybacking?

[07:58] <guifa2> coldpress: yeah.  Technical-ish term is a mixin

[07:58] <notandinus> oh i see, wait how is this possible?

[07:58] <notandinus> ihow is that int storing a bool?

[07:59] <guifa2> It's no longer just an Int

[07:59] <guifa2> when you use "but" it literally merges the two together

[07:59] <guifa2> It will function as an Int ---- until something needs a boolean value, and then it will function as the boolean you passed it

[08:00] *** wamba joined
[08:00] <coldpress> notandinus: code review: `"input".IO.lines` can just be `lines`

[08:00] <guifa2> m: my $a = 'hello' but 10; say $a ~ "!"; say $a + 20;

[08:00] <camelia> rakudo-moar 1ae04788c: OUTPUT: «hello!␤Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5hello' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[08:00] <guifa2> err

[08:01] <notandinus> coldpress: i see, thanks

[08:01] <coldpress> notandinus: you don't need to capture the entire regex <()>, for tokens `operation` and `argument`

[08:01] <guifa2> m: my $a = 'hello' but 10;  say $a ~ "!"; say $a.Int + 20;

[08:01] <camelia> rakudo-moar 1ae04788c: OUTPUT: «hello!␤30␤»

[08:01] *** argento joined
[08:01] <notandinus> oh you men you can also mixin string and int?

[08:01] <guifa2> you can mix any class onto any other class

[08:02] <notandinus> coldpress: i see, i don't know much about regex 

[08:02] <argento> whhy does `list-of-strings.map(* ~~ /foo/) doesn't return a list of `Match` ?

[08:02] <notandinus> actaully i dont know anything about regex, what should i change it to?

[08:03] <guifa2> argento: it does:

[08:03] <guifa2> m: say <aaa bbb ccc abb acc>.map(* ~~ /a/)

[08:03] <camelia> rakudo-moar 1ae04788c: OUTPUT: «(｢a｣ Nil Nil ｢a｣ ｢a｣)␤»

[08:03] <coldpress> notandinus: you can just remove <()>, no other changes

[08:04] <notandinus> i see, still works fine, ah so <> means to look at whole regex?

[08:04] <argento> guifa2: ok, except when it doesn't match

[08:04] <guifa2> map returns the result of * ~~ /a/ which is Nil on failed matches

[08:04] <guifa2> you can just grep for the defined values

[08:04] <coldpress> notandinus: <()> specifies which part of the matched regex is captured

[08:04] <guifa2> m: say <aaa bbb ccc abb acc>.map(* ~~ /a/).grep: *.defined

[08:04] <camelia> rakudo-moar 1ae04788c: OUTPUT: «(｢a｣ ｢a｣ ｢a｣)␤»

[08:05] * guifa2 is afk&

[08:09] <notandinus> coldpress: i see, makes sense,  i'll read up on regexes

[08:11] *** guifa2 left
[08:16] *** domidumont joined
[08:27] *** dakkar joined
[08:31] <argento> is it possible to chain functional operators like: `foo.map: *.some .map: *.other` or I must use `foo.map({$_.some}).map: *.other` ?

[08:33] <moritz> argento: how about foo.map: *.some.other

[08:34] <moritz> I think you can use ==> to chain maps without using parenthesis, but you'd have to look it up

[08:34] <argento> moritz: Thanks, I'll check that out

[08:34] <moritz> https://docs.raku.org/routine/==%3E

[08:35] <moon-child> foo ==> map(*.some) ==> map(*.other)

[08:35] <moon-child> but I agree that just  foo.map: *.some.other  is better for the specific case where you have two maps in a row

[08:36] <argento> b.c the first op is * ~~ /foo/ and the second is *.hash

[08:36] <argento> But thanks for the input

[08:36] <moon-child> foo.map((* ~~ /foo/).hash) ?

[08:37] <moon-child> (funny, I remember some work in the haskell compiler to be able to turn a sequence of two maps into a single map.  Though of course that optimization only works when your functions are pure.)

[08:38] <argento> moon-child: makes sense :-), still learning

[08:40] *** stoned75 joined
[08:40] <moon-child> I am too.  Skill ceiling on raku is suuuper high, and I'm only on step 2 or so ;)

[08:58] *** domidumont left
[09:00] *** domidumont joined
[09:04] *** domidumont left
[09:07] *** Altai-man joined
[09:09] *** BenGoldberg joined
[09:10] *** sena_kun left
[09:10] *** Sgeo left
[09:18] <notandinus> how do i interchange stngs? say if its 'test' then change it to 'not-test' and vice versa?

[09:18] *** domidumont joined
[09:20] <coldpress> is it normal for .deepcopy(-> $c is copy {$c}) to give this `fd > STDERR_FILENO` error? https://0x0.st/iheU.txt

[09:21] *** argento left
[09:23] *** asymptotically joined
[09:25] <MasterDuke> coldpress: what are you copying?

[09:26] *** patrickb joined
[09:27] *** pecastro joined
[09:28] *** aborazmeh left
[09:40] *** patrickb left
[09:42] *** BenGoldberg left
[09:46] *** guifa2 joined
[09:51] *** guifa2 left
[10:01] *** guifa2 joined
[10:12] *** Xliff joined
[10:13] <Xliff> Hiyo!

[10:13] <Xliff> What's the best way to get $_ of the outside scope?

[10:13] <Xliff> $OUTER::_ doesn't work. :)

[10:17] <guifa2> OUTER::<$_> should do it

[10:19] <MasterDuke> m: for ^3 { for "a".."c" { say OUTER::<$_>; say $OUTER::_ } }

[10:19] <camelia> rakudo-moar 1ae04788c: OUTPUT: «0␤0␤0␤0␤0␤0␤1␤1␤1␤1␤1␤1␤2␤2␤2␤2␤2␤2␤»

[10:31] <lizmat> OUTER is lexical, you probably want CALLER::

[10:32] <lizmat> but please note that these come at serious performance issues, and may actually become illegal at some point in the future

[10:33] <guifa2> lizmat: I noticed that between .c and .d, $_ was made undynamic

[10:33] <guifa2> Which was sad days for me and some ideas I had lol

[10:34] <lizmat> yeah... for me as well, as it will break a lot of the P5xxx modules of mine

[10:34] <lizmat> but such is progress...

[10:34] <guifa2> the only trouble with removing CALLER:: is one situation I came across

[10:35] <guifa2> dynamic variables in recursives

[10:38] <Geth> ¦ doc: MorayJ self-unassigned The whole explanation for the difference between block and closure is LTA https://github.com/Raku/doc/issues/3670

[10:44] <lizmat> guifa2: but if a variable is marked as dynamic, it *will* be visible with CALLER::

[10:45] <guifa2> Ah I thought you were saying that CALLER:: might be removed

[10:45] * guifa2 did a pikachu face at that idea

[10:53] <lizmat> sorry if I wasn't clear...  being able to do a lookup of $_ from caller scope, will probably become impossible

[11:00] <guifa2> one nice thing I found out earlier today

[11:00] <guifa2> if you have descriptive (aka long) class names, using trust is really annoying

[11:01] <guifa2> self!MyReallyDescriptiveClassName::it-also-has-a-long-method-name( … )

[11:02] <guifa2> You can do constant Friend = MyReallyDescriptiveClassName and then use self!Friend::foo-bar-xyz(…)

[11:03] <guifa2> err not self, but $object-that-trusts-me.Friend::foo

[11:04] * guifa2 has been up for 24hrs, sleep time&

[11:05] *** jmerelo left
[11:16] *** Xliff left
[11:27] *** guifa2 left
[11:28] *** Black_Ribbon left
[11:33] *** asymptotically left
[11:38] *** asymptotically joined
[11:45] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2020/12/08/spying-on-return/

[11:47] *** frost-lab left
[11:53] *** ufobat_ joined
[11:56] *** ufobat left
[12:16] <Geth> ¦ doc/ISSUE-3709: 13 commits pushed by (Jan Krňávek)++, (Stoned Elipot)++, (Moray Jones)++

[12:16] <Geth> ¦ doc/ISSUE-3709: review: https://github.com/Raku/doc/compare/e5be448dc75c...5ca48ba787cb

[12:34] *** BenGoldberg joined
[12:46] <coldpress> MasterDuke: sorry for the late reply, I'm copying an array with many elements, each element is a hash with only one Str key and one Int value. If I replace line 47 at https://git.zhengqunkoo.com/zhengqunkoo/advent-of-code/src/branch/master/20/8.raku#47 with instructions.deepcopy(-> $c is copy {$c}), I get the error https://0x0.st/iheU.txt 

[12:46] <coldpress> the array has 641 elements

[12:47] <coldpress> s/deepcopy/deepmap/

[13:01] <MasterDuke> interesting, i can repro. something to do with lines() reading from stdin. doesn't happen if i change it to take a filename as an argument and read lines from it

[13:08] *** BenGoldberg left
[13:08] *** sena_kun joined
[13:09] *** Altai-man left
[13:10] <tbrowder> hi, questions for advent authors: (1) what format do you use to write the article, (2) how do you convert that to the html for wordpress, and (3) if you choose non-default styling, how do you apply it into the recipe? thnx

[13:12] <tbrowder> my current recipe (new for me this year): write in raku pod, convert to html with Pod::To::Html, default styling so far.

[13:12] <MasterDuke> coldpress: i'm not quite sure what's going on, some error in libuv when moarmv is running a garbage collection and trying to calculate rss

[13:12] *** MasterDuke left
[13:14] <sena_kun> tbrowder, I usually wrote in markdown directly, then using the advent script to get an article with highlighting and pasting into raw wordpress editor.

[13:14] <tbrowder> thnx

[13:17] <tbrowder> my problem with that is non-ascii unicode (emojis in particular). do you insert the chars directly or use hex or decimal char notation?

[13:18] <tbrowder> by insert chars directly for me that would be copy/paste

[13:23] <sena_kun> tbrowder, simple - I don't use non-ascii symbols. :)

[13:23] <sena_kun> Might not suit for everyone, though.

[13:25] *** leont joined
[13:27] *** MasterDuke joined
[13:28] <MasterDuke> coldpress: for now i'd suggest working around it by taking the filename as a parameter and reading lines from that, but i created a moarvm issue https://github.com/MoarVM/MoarVM/issues/1400

[13:33] <tbrowder> for my calendar-making program i use DateTime heavily and need to convert integer values to month and weekday names and abbreviations. i would like to integrate module Date::Names to enable easy multilingual use, and that's pretty easy to do. HOWEVER:

[13:35] <tbrowder> it would be easier if i could define the Date::Names class as a DateTime  child class.

[13:37] <tbrowder> is that as easy as defining it as "class Date::Names is DateTime"?

[13:39] <tbrowder> seems too easy, but i'll try it.

[13:40] *** b2gills joined
[13:58] *** finsternis left
[13:59] *** finsternis joined
[14:07] *** yosik joined
[14:09] *** stanrifkin joined
[14:09] <stanrifkin> can someone make a chm file of the raku documentation. I don't know how to do that.

[14:19] <yosik> Hi, everyone, can I ask you a question? I want to make a subroutine that takes an array as its argument, but I get an error "Type check failed in binding to parameter '@arr'; expected Positional[Array] but got Array ([ array here ])". Here is a sample code that causes an error: https://paste.debian.net/1176073/. Can you help me?

[14:21] <MasterDuke> yosik: `Array @array` is an array or arrays

[14:21] <MasterDuke> *of

[14:22] <MasterDuke> e.g., `Int @array` is an array of Ints

[14:22] <MasterDuke> the `@` sigil already means it's an array

[14:34] <jdv79> i had forgotten about the "curl:from<bin>" type dep - from memory there was a bunch of design chatter about it.  is that "solid" now?

[14:43] <notandinus> i'm taking $A and $B in MAIN sub, how do i make them mutable? it says cannot assign to immutable value

[14:43] <notandinus> do i just use := instead?

[14:43] <dakkar> `is rw`?

[14:44] *** wamba left
[14:45] <dakkar> no, `is copy`, sorry

[14:45] <dakkar> apparently declaring a MAIN parameter `is rw` confuses the parser

[14:46] <notandinus> ah i see, makes sense

[14:46] <dakkar> the program `sub MAIN($a is rw) { ... }` keeps complaining it doesn't get a positional, even when @*ARGS contains it

[14:47] * dakkar submits bug

[14:47] <dakkar> oh, it's already there https://github.com/rakudo/rakudo/issues/3929

[14:47] * dakkar updates rakudo

[14:56] <notandinus> so i have this hash and want to sort it by keys being Int, .sort sorts them by Str

[14:56] <notandinus> how do i do that?

[14:57] <MasterDuke> .sort(+*) 

[14:59] <notandinus> hmm that returns: https://paste.debian.net/hidden/29fa1e1b/

[15:00] <notandinus> m: my %t = (14 => "hi", 3 => "bye"); say %t.sort.raku;

[15:00] <camelia> rakudo-moar bd944e7cf: OUTPUT: «("14" => "hi", "3" => "bye").Seq␤»

[15:00] <notandinus>  m: my %t = (14 => "hi", 3 => "bye"); say %t.sort(+*).raku;

[15:00] <camelia> rakudo-moar bd944e7cf: OUTPUT: «Cannot resolve caller Numeric(Pair:D: ); none of these signatures match:␤    (Mu:U \v: *%_)␤  in block <unit> at <tmp> line 1␤␤»

[15:00] <notandinus> yeah ^

[15:01] <MasterDuke> there are 'by' or 'with or 'as' arguments you want to use for sort then

[15:02] <notandinus> i see, i'll check it out, thanks

[15:03] <MasterDuke> m: my %t = (14 => "hi", 3 => "bye"); say %t.sort(+*.key).raku;

[15:03] *** wamba joined
[15:03] <camelia> rakudo-moar bd944e7cf: OUTPUT: «("3" => "bye", "14" => "hi").Seq␤»

[15:05] *** cpan-raku left
[15:06] <notandinus> oh thanks, yeah i checked that page & looks like you can just do { .Int }

[15:07] *** cpan-raku joined
[15:07] *** cpan-raku left
[15:07] *** cpan-raku joined
[15:08] <notandinus> but that doesn't seem to work on hashes, i'll just use (+*.key)

[15:08] <MasterDuke> m: my %t = (14 => "hi", 3 => "bye"); say %t.sort(*.key.Int).raku;

[15:08] <camelia> rakudo-moar bd944e7cf: OUTPUT: «("3" => "bye", "14" => "hi").Seq␤»

[15:09] <MasterDuke> m: my %t = (14 => "hi", 3 => "bye"); say %t.sort({.key.Int}).raku;

[15:09] <camelia> rakudo-moar bd944e7cf: OUTPUT: «("3" => "bye", "14" => "hi").Seq␤»

[15:09] *** parabolize joined
[15:09] <MasterDuke> you just need the .key

[15:10] <notandinus> ah, i was doing .Int.key

[15:10] <MasterDuke> m: my %t = (14 => "hi", 3 => "bye"); say %t.sort(*.value.chars).raku; 

[15:10] <camelia> rakudo-moar bd944e7cf: OUTPUT: «("14" => "hi", "3" => "bye").Seq␤»

[15:11] <notandinus> makes sense

[15:11] <MasterDuke> it's because .sort on a hash gives a list of Pairs

[15:12] <MasterDuke> m: my %t = (14 => "hi", 3 => "bye"); say %t.keys.sort(+*).raku;

[15:12] <camelia> rakudo-moar bd944e7cf: OUTPUT: «("3", "14").Seq␤»

[15:12] <notandinus> is {.key} the same thing as *.key ?

[15:12] <lizmat> semantically yes

[15:14] <notandinus> hmm i see, makes senes

[15:14] <notandinus> sense*

[15:20] *** guifa2 joined
[15:21] *** Sgeo joined
[15:29] *** wamba left
[15:39] *** hh joined
[15:40] *** hh left
[15:59] *** BenGoldberg joined
[16:00] *** stanrifkin left
[16:08] *** BenGoldberg left
[16:08] *** BenGoldberg joined
[16:14] *** morayj joined
[16:19] *** RaycatWhoDat joined
[16:20] <RaycatWhoDat> Howdy. Any web developers in here? Wondering why you chose to use this language and if it fits your workflow nicely.

[16:22] <codesections> I think of myself as primarily a web developer and have *plans* to use Raku for web projects, but haven't done so yet

[16:24] <codesections> (not counting processing Raku code/docs into formatted HTML for personal blog posts)

[16:28] *** yosik left
[16:33] *** BenGoldberg left
[16:33] *** grondilu joined
[16:33] <morayj> I've not gone very far with it - but it's familiar from Dancer which I was using before in perl (which is what brought me to Raku), but this is worth a look https://cro.services/

[16:35] <codesections> yeah, cro is definitely the central component of the Raku web ecosystem 

[16:36] *** grondilu left
[16:48] <tbrowder> whew, still having trouble accessing docs. i can get to raku.org, then docs from there.

[16:48] <tbrowder> then i can get to types ok

[16:49] <tbrowder> from types i cannot get to date, but i can get to datetime or dateish

[16:51] <codesections> tbrowder: that is very odd and troubling that it's lasted this long.  I wish I could help -- but I'm not running into that issue and don't have any access to the docs site backend

[16:52] <[Coke]> what's the issue?

[16:52] <tbrowder>  its funny because datetime and dateish are the only types so far that i can get to (i've checked many randomly, but not all)

[16:53] <[Coke]> you could start at docs.raku.org or https://docs.raku.org/type.html search for Date or...

[16:53] *** patrickb joined
[16:54] <[Coke]> tbrowder: what issue are you having with the doc site?

[16:54] <tbrowder> i can't start on docs directly, but i'll try the search...

[16:55] <codesections> [Coke]: the issue is about some pages (accessed in some ways) returning ERR_SSL_PROTOCOL_ERROR for tbrowder and RaycatWhoDat 

[16:55] <tbrowder> when i go directly, my browser shows unsafe (chrome, safari)

[16:56] <codesections> RaycatWhoDat: were you able to resolve that issue, or are you still running into it

[16:56] <codesections> ?

[16:57] <tbrowder> i can get to the types page by starting at raku.org, then click on documentation, then click on types

[16:57] <codesections> [Coke]: see https://colabti.org/irclogger/irclogger_log/raku?date=2020-12-01#l546 for initial discussion 

[16:57] <Geth> ¦ doc/ISSUE-3709: 42936584d4 | (Moray Jones)++ | doc/Type/Slip.pod6

[16:57] <Geth> ¦ doc/ISSUE-3709: Fix slip example error

[16:57] <Geth> ¦ doc/ISSUE-3709: review: https://github.com/Raku/doc/commit/42936584d4

[16:57] <Geth> ¦ doc/ISSUE-3709: 10c30eb641 | (Moray Jones)++ | doc/Type/Slip.pod6

[16:57] <Geth> ¦ doc/ISSUE-3709: Inserts example that doesn't break up

[16:57] <Geth> ¦ doc/ISSUE-3709: 

[16:57] <Geth> ¦ doc/ISSUE-3709: Adds a non-breaking up example of slip in a subroutine

[16:57] <Geth> ¦ doc/ISSUE-3709: 

[16:57] <Geth> ¦ doc/ISSUE-3709: Adds a method call that acts differently for comparison

[16:57] <Geth> ¦ doc/ISSUE-3709: review: https://github.com/Raku/doc/commit/10c30eb641

[16:58] <RaycatWhoDat> codesections: I've been able to access the site recently. What was the cause?

[16:58] <tbrowder> on the types page i cannot get to the date type either by click or the search box: i get an unsafe msg from the browser

[16:59] <codesections> we

[16:59] <[Coke]> tbrowder: have you tried in incognito?

[16:59] <[Coke]> clearing cookies/cache, etc.

[17:00] <codesections> RaycatWhoDat: we don't know -- I was hoping you had changed something on your end and could tell us :D

[17:00] <[Coke]> what browser are you using? what version?

[17:01] <tbrowder> if we're using cro i think it is having trouble. jonathon told me the tls cert handling is a bit tricky

[17:02] <tbrowder> using chrome on ipad, but chrome and firefox on debian have same problems, but i'll go check in a bit.,,

[17:03] <tbrowder> incognito same thing unsafe

[17:07] *** Altai-man joined
[17:07] *** jmerelo joined
[17:07] <tbrowder> cleared cache, no help, going to check debian...

[17:07] *** dataange` joined
[17:08] *** dataangel left
[17:08] <patrickb> nine: Can you elaborate a little what you are currently working on? I'm a bit confused by you calling off in-process precompilation vs all those new commits related to parallel compilation. (I am impressed by your work and am just wondering what you're up to...)

[17:09] *** sena_kun left
[17:13] <tbrowder> it's a bit erratic at first, but i can get to the date page. i'm convinced the dynamic nature of the website is the culprit, maybe a non-https cross-reference which is now a no-no with most browsers

[17:13] <[Coke]> .. the website is not dynamic.

[17:14] <tbrowder> maybe links in css or other included code

[17:14] <[Coke]> unless there was recently a big change recently?

[17:15] <tbrowder> don't know, how the docs are updated and published is a mystery to me

[17:15] <codesections> tbrowder: and something like that would impact everyone, not just you.  I have accessed the docs site many times recently from multiple browsers and devices 

[17:15] <[Coke]> a static site is generated and that's what's served out.

[17:16] <[Coke]> what *version* of browser are you on?

[17:16] <[Coke]> I'm on Version 86.0.4240.198 (Official Build) (x86_64)

[17:16] <[Coke]> (running on mac os x at the moment - not seeing any cert issues at all)

[17:16] <tbrowder> which browser?

[17:17] <Geth> ¦ doc: 9957486ab1 | (Moray Jones)++ (committed by Juan Julián Merelo Guervós) | doc/Type/Slip.pod6

[17:17] <Geth> ¦ doc: Fix slip example error

[17:17] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/9957486ab1

[17:17] <Geth> ¦ doc: d59669f39b | (Moray Jones)++ (committed by Juan Julián Merelo Guervós) | doc/Type/Slip.pod6

[17:17] <Geth> ¦ doc: Inserts example that doesn't break up

[17:17] <Geth> ¦ doc: 

[17:17] <Geth> ¦ doc: Adds a non-breaking up example of slip in a subroutine

[17:17] <Geth> ¦ doc: 

[17:17] <linkable6> Link: https://docs.raku.org/type/Slip

[17:17] <Geth> ¦ doc: Adds a method call that acts differently for comparison

[17:17] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/d59669f39b

[17:17] <codesections> it sounds more like a dns issue to me, and those are always a pain.  Could be at the ISP level

[17:17] *** jmchael joined
[17:18] <[Coke]> Chrome, sorry

[17:18] <RaycatWhoDat> I'm on Chrome 86.0.4240.198 and I'm checking the site now. Got in from DDG to the comb routine.

[17:19] <[Coke]> tbrowder: what DNS provider are you using? your ISP or something specific like 8.8.8.8 or 9.9.9.9 ?

[17:20] <[Coke]> I'm using 9.9.9.9 here

[17:21] <tbrowder> yeah, could be, i'll stop whining until i check with isp. my deb box is running off a different dns than incoming providing wireless. i usually set opendns but haven't check lately. thnx

[17:21] <nine> patrickb: the work on in-process precompilation exposed a couple of concurrency issues - places where we keep global state of the compiler which caused unwanted references to previous compilation units with in-process precompilation and all sorts of concurrency issues when having multiple threads EVAL

[17:22] <jmerelo> tbrowder: they're updated by hand.

[17:22] <nine> patrickb: I've fixed the ones I knew about, but when testing those fixes discovered a couple more

[17:22] <tbrowder> thnx, jj

[17:23] <patrickb> nine: Ah. I understood. Thanks for clarifying!

[17:23] <rba> patrickb: rakubrew.org is back in business...

[17:23] <tellable6> 2020-12-07T07:54:04Z #raku-dev <patrickb> rba raku.org is down. Can you have a look?

[17:23] <jmerelo> tbrowder: there's an alternative site which I use mainly for staging, https://rakudocs.github.io

[17:23] <patrickb> rba thanks!

[17:25] <tbrowder> jj, i'm having no issues with that at all!  good to know as a fallback!

[17:26] <jmerelo> tbrowder: sometimes it's a couple of commits behind, but I always deploy there to check for any trouble.

[17:31] <tbrowder> btw, i hope to get advent article fixed by evening--using pod::to::html route...

[17:35] *** maggotbrain left
[17:37] <jmerelo> tbrowder: great ;-) Final slot filled in. Thanks!

[17:38] *** dakkar left
[17:50] *** skids joined
[17:51] *** sftp left
[17:54] *** sftp joined
[17:54] *** hal99999 joined
[18:04] <leont> «No exception handler located for catch» (followed by a stacktrace directly into rakudo itself) is not the easiest error message to figure out

[18:07] *** sftp left
[18:10] <jmerelo> attending GitHub Universe now and asking about Perl & Raku support in codespaces.

[18:11] *** morayj left
[18:12] <leont> It appears something is returning a Failure, that turns into an Exception in a place that doesn't support exceptions

[18:13] *** morayj joined
[18:13] *** ufobat_ left
[18:17] *** sftp joined
[18:19] *** wamba joined
[18:27] <v_m_v> Hello. Could you explain me why this code: https://pastebin.com/8UEzbaxB is ~25% faster then this one: https://pastebin.com/s2csadL1 ? I have changed only one line (I have moved $number.sqrt.Int + 1 from "for" loop into variable)

[18:30] <jmerelo> v_m_v: there might be an error here?

[18:30] <jmerelo> m: my $number = 64; say 2 .. $number.sqrt.Int + 1

[18:30] <camelia> rakudo-moar bd944e7cf: OUTPUT: «2..9␤»

[18:31] <jmerelo> hum, no, .. has is looser than +

[18:31] <leont> I don't think I can debug this without compiling custom raku's :-/

[18:31] *** RaycatWhoDat left
[18:32] <jmerelo> Only difference I can see is that you're using a native int in the second case. That's not a big difference in the overall thing, since it's not going into arithmetics

[18:32] <leont> I'm guessing it's spesh

[18:32] <jmerelo> Once you turn it into a Range, it's no longer a native int, so no real difference there.

[18:32] <leont> If spesh knows how to optimize a range, then this would make sense. No idea if it actually does.

[18:32] <jmerelo> So I'm gonna go with spesh as leont

[18:33] <jmerelo> leont: but the two ranges would actually be the same.

[18:33] <jmerelo> So no idea

[18:39] <leont> I guess if it knows it's an int, it can optimize it the same way it does for 2..42?

[18:40] <jmerelo> Well, comparisons might be a bit faster. But I'm not so totally sure native ints are carried over to Ranges. They might.

[18:43] <v_m_v> I see. The difference in time is about a couple of seconds (14.1s with variable and 19.7s with range). 

[18:44] <jmerelo> v_m_v: I can't think of anything else here. Might definitely be the native thing.

[18:47] *** domidumont left
[18:51] <leont> If spesh manages to avoid the Range entirely, then it suddenly makes sense

[18:51] <leont> Basically turn it into a C loop

[18:55] *** aindilis joined
[18:57] *** sivoais left
[19:03] *** hal99999 left
[19:05] *** RaycatWhoDat joined
[19:09] *** sftp left
[19:10] *** hal99999 joined
[19:10] *** sftp joined
[19:11] *** RaycatWhoDat left
[19:24] *** BenGoldberg joined
[19:31] *** guifa joined
[19:35] *** avar left
[19:36] *** avar joined
[19:36] *** avar left
[19:36] *** avar joined
[19:42] *** morayj left
[19:42] *** aborazmeh joined
[19:42] *** aborazmeh left
[19:42] *** aborazmeh joined
[19:43] *** RaycatWhoDat joined
[19:48] *** RaycatWhoDat left
[19:51] *** jmerelo left
[19:52] *** leont left
[19:52] *** leont joined
[19:56] *** Black_Ribbon joined
[19:57] <guifa> gfldex++ for return-rw

[19:58] *** BenGoldberg left
[19:59] *** robinsmidsrod left
[20:04] *** robinsmidsrod joined
[20:05] *** sjm left
[20:06] *** RaycatWhoDat joined
[20:09] *** RaycatWhoDat left
[20:09] *** sjm_uk left
[20:16] *** sjm joined
[20:19] *** sjm left
[20:20] *** sjm joined
[20:25] *** aborazmeh left
[20:46] *** grep0r joined
[20:50] *** patrickb left
[21:07] *** redhands joined
[21:08] *** mowcat joined
[21:08] *** sena_kun joined
[21:10] *** Altai-man left
[21:14] *** stoned75 left
[21:38] *** holli__ joined
[21:42] *** Doc_Holliwould left
[21:51] *** holli__ left
[21:51] *** holli__ joined
[21:58] *** stoned75 joined
[22:07] *** RaycatWhoDat joined
[22:09] *** sena_kun left
[22:24] *** imcsk8 left
[22:25] *** imcsk8 joined
[22:26] *** xelxebar left
[22:27] *** grondilu joined
[22:27] *** xelxebar joined
[22:27] <grondilu> SpaceX's new rocket about to launch : https://www.youtube.com/watch?v=zkfa5ebOcgM

[22:29] *** HarmtH joined
[22:37] <MasterDuke> isn't https://www.youtube.com/watch?v=nf83yzzme2I what you want?

[22:38] <grondilu> yeah, it's an abort.  Sorry I know it's off topic.  I thought you guys could have enjoyed watching this.

[22:39] <perryprog> No, thank you!

[22:39] <perryprog> Off topic space links are always welcomed, everywhere.

[22:39] <MasterDuke> oh, too bad. why the abort?

[22:40] <grondilu> An engine detected a non-nominal state at the very last second.

[22:40] <grondilu> feel free to join #space for more info

[22:41] *** stoned75 left
[22:43] <jdv79> it was supposed to happen hours ago...

[22:47] *** ab5tract left
[22:50] *** BenGoldberg joined
[22:55] *** pierrot left
[22:55] *** pierrot joined
[22:59] *** RaycatWhoDat left
[23:02] *** moon-child left
[23:04] * lizmat was watching...  

[23:06] *** RaycatWhoDat joined
[23:11] *** RaycatWhoDat left
[23:12] * guifa2 pokes lizmat

[23:13] <guifa2> Is it possible to shape native arrays after declaration? 

[23:13] <guifa2> (asking only because I know you recently did a lot of work on it)

[23:13] <guifa2> m: my str @foo; @foo = @[1,2,3];

[23:13] <camelia> rakudo-moar 2274aa85a: OUTPUT: «This type cannot unbox to a native string: P6opaque, Int␤  in block <unit> at <tmp> line 1␤␤»

[23:14] <guifa2> m: my str @foo; @foo = my str @[1,2,3];

[23:14] <camelia> rakudo-moar 2274aa85a: OUTPUT: «(signal SEGV)»

[23:14] <lizmat> interesting that one

[23:14] <lizmat> to answer the question: no

[23:14] <lizmat> the only thing you *could* do is wrap it into a sub

[23:15] <lizmat> sub shaper($size) { my int @shaped[$size] }; dd shaper(10); dd shaper(5)

[23:16] <evalable6> lizmat, rakudo-moar 2274aa85a: OUTPUT: «array[int].new(:shape(10,), [0, 0, 0, 0, 0, 0, 0, 0, 0, 0])␤array[int].new(:shape(5,), [0, 0, 0, 0, 0])␤»

[23:16] <lizmat> but that would just be the same as having a shaped array in a sub where the size is determined by one of its parameters

[23:18] <guifa2> Yeah.  In this case, the array is a class attribute, so I'll just do the old fashioned way with math haha

[23:19] *** hal99999 left
[23:20] *** wamba left
[23:22] *** aluaces left
[23:24] *** BenGoldberg left
[23:25] *** dogbert17 left
[23:31] *** grondilu left
[23:37] *** fridim left
[23:38] *** fridim joined
[23:41] *** Celelibi left
[23:47] <tbrowder> question on dates: how to find the first or second sun in a month? i'll give my solution first:

[23:51] *** Celelibi joined
[23:52] <tbrowder> use a DateTime obj and query first day of the month for its dow, then the first and second sundays are determined algebraicly from that based on 7 day per week

[23:56] *** ab5tract joined
