[00:00] <[Coke]> (assuming the decisions are based on their activity through... now)

[00:00] <[Coke]> voting closed.

[00:02] <[Coke]> (I'd push sooner, but if I push a partial, then add a vote and re-push, it won't be a secret ballot)

[00:03] <guifa> [Coke]: thanks for organizing it all

[00:03] <AlexDaniel> [Coke]++

[00:04] <timotimo> who wants a rakudo appimage

[00:05] <[Coke]> https://gist.github.com/coke/07f167179135f6a868b6a0d526d5437e - updated to note who was invited post hoc, and changed ids to links so it's easier to research if we should invite them.

[00:12] *** mowcat left
[00:14] *** klapperl joined
[00:38] <Juerd> I have no idea what https://docs.raku.org/type/Real is trying to explain.

[00:39] <Juerd> Or when you should ever use Real instead of Num.

[00:40] <Juerd> Another question: is there a built-in floating point that doesn't allow NaN? That's what I expected Real to be but it's clear that it's certainly not that :)

[00:42] *** aborazmeh joined
[00:42] *** aborazmeh left
[00:42] *** aborazmeh joined
[00:42] <Grinnz> the eternal struggle: how do you put NaN in a number

[00:43] <Juerd> Since $foo = NaN is too easy that was probably not your question. What do you mean?

[00:44] <Grinnz> i mean semantically because NaN represents not a number

[00:44] <Juerd> Still no idea what you mean :)

[00:45] <Grinnz> and then the step further: inf is technically not a number

[00:45] <Grinnz> i'm just math-trolling really

[00:45] <Juerd> It may not be a number, but isn't NaN either :)

[00:45] <Juerd> m: Inf.isNaN;

[00:45] <camelia> rakudo-moar 85847d2f1: ( no output )

[00:45] <Juerd> m: Inf.isNaN.say

[00:45] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[00:45] <Grinnz> about how ieee-754 is extremely unmathematic :P

[00:46] <timotimo> https://github.com/ddmitov/perl-executing-browser - anybody interested in stealing this for raku?

[00:47] <Juerd> In any case, passing NaN to functions taking Num rarely produces anything useful and since NaN is basically a float's exception mechanism, it would be useful to just escalate that to actual exceptions. In fact, if there was a built-in subtype of Num, where not *.isNaN, I'd probably use that most of the time even :)

[00:47] <Juerd> s/Num,/Num/

[00:50] <Juerd> Same for Inf actually. I kinda expected Real to be the thing that only supported real numbers, and iirc, while R is infinite, infinity itself isn't part of it...

[00:51] <Grinnz> indeed

[01:04] <guifa> You could actually probably modify the handling of numbers to throw exceptions when you get NaN

[01:05] <timotimo> use NeverNaN;

[01:06] <Juerd> Maybe a type called Actual to be the real Real :P

[01:06] <timotimo> RealEx

[01:06] <Juerd> timotimo: That might come across as extended real, which would include -Inf and Inf :)

[01:06] <timotimo> ha

[01:07] <guifa> timotimo: and here I thought that was an acual module

[01:07] <Juerd> I hate that English has no opposite of "not". Dutch has it, "wel" is the opposite of "niet". Though Raku went with "so" in that sense, so maybe SoReal :)

[01:08] <guifa> “indeed”

[01:08] <guifa> not real, indeed real

[01:08] <timotimo> Surreal

[01:08] <Juerd> lol

[01:09] <guifa> how can you find individual candidates of a multi sub?

[01:09] <timotimo> "find"?

[01:09] <timotimo> m: .say for &say.candidates

[01:09] <camelia> rakudo-moar 85847d2f1: OUTPUT: «&say␤&say␤&say␤»

[01:10] <timotimo> m: dd $_ for &say.candidates

[01:10] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Sub say = multi sub say { #`(Sub|65779248) ... }␤Sub say = multi sub say (\x) { #`(Sub|65779392) ... }␤Sub say = multi sub say (|) { #`(Sub|65779536) ... }␤»

[01:10] <guifa> timotimo: I’ve been having a lot of fun with wrapping lately

[01:15] <guifa> hmm

[01:15] <guifa> I can’t seem to wrap any of the + subs

[01:16] <timotimo> are you sure your code isn't just getting its uses of + optimized away?

[01:16] *** molaf left
[01:16] <guifa> That’s certainly possible

[01:17] <guifa> Yup that’s what it seems like

[01:18] *** __jrjsmrtn__ left
[01:19] *** __jrjsmrtn__ joined
[01:19] <codesections> guifa: that's both interesting and slightly troubling.  I'm assuming that your wrapping code introduced a side effect (e.g., &say).  I would have expected/hoped that that would prevent inlining 

[01:19] <timotimo> wrap happens at runtime, a part of inlining happens at compile time

[01:19] <guifa> It’s both a good thing and a bad thing about wrap

[01:20] <timotimo> i think there's a "soft" parameter and pragma that's supposed to control this?

[01:20] <codesections> Why isn't wrap compile-time?

[01:20] <timotimo> because you haven't put it in a BEGIN block

[01:20] <codesections> (I guess I expected it to be similar to a macro)

[01:21] <timotimo> yeah, like "use" or so

[01:29] <guifa> m: &infix:<+>.wrap( sub (|c) { my \x = callsame; die X::AdHoc.new(payload=>"BAD MATH") if x.isNaN; x; }); sub add($a, $b) {$a+$b}; say add NaN, 8

[01:29] <camelia> rakudo-moar 85847d2f1: OUTPUT: «BAD MATH␤  in sub  at <tmp> line 1␤  in sub  at <tmp> line 1␤  in sub add at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:29] *** molaf joined
[01:29] <timotimo> notable6: weekly https://github.com/timo/rakudo-appimage/releases/tag/2020.08.2

[01:29] <notable6> timotimo, Noted! (weekly)

[01:32] <timotimo> notable6: weekly https://github.com/timo/moarperf/releases/tag/0.1-appimage1

[01:32] <notable6> timotimo, Noted! (weekly)

[01:32] <timotimo> please check out the first link there

[01:35] *** aborazmeh left
[01:43] * [Coke] sees Surreal Numbers in the backlog and wonders if that's worth a module.

[01:45] <codesections> [Coke]: would the text of the module just be

[01:45] <codesections> m: subset Surreal of Real where * !~~ Inf | NaN

[01:45] <camelia> rakudo-moar 85847d2f1: ( no output )

[01:45] *** ex_nihilo joined
[01:46] *** BenGoldberg joined
[01:46] <[Coke]> no, I imagine you'd need .Str to show the set driving the Surreal #.

[01:47] <[Coke]> ... or maybe .set

[02:01] *** stoned75 left
[02:21] <Juerd> m: subset Surreal of Numeric where -Inf < * < +Inf; say (-Inf, -9, 0, 9, Inf, NaN, 2/7) »~~» Surreal

[02:21] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(False True True True False False True)␤»

[02:22] <Juerd> tbh I don't really care if it's a Rat or a Num anyway, as long as it's an actual, real, number :)

[02:23] <Juerd> Maybe just Number. Sufficiently confusing to have Num and Numeric already, I don't see much harm in adding a third one.

[02:23] <Juerd> Or the punnier name Numb

[02:26] <guifa> I’d go with something like ConcreteNumber.  Although concrete already exists in the number world for something else

[02:27] <guifa> Could go for a reduplicative approach

[02:27] <guifa> subset NumberNumber …

[02:27] <Juerd> For the numeric type I'd end up using most, a long name would not be huffman coded well.

[02:33] <guifa> NumNum ha

[02:33] <guifa> or even N

[02:34] *** gnufr33dom left
[02:34] <Grinnz> Really

[02:35] <Juerd> Grinnz: Ooh :)

[02:36] <Juerd> I guess there's not much use for a subset of Bool where .so, but it could be called Truly :P

[02:36] <guifa> codesections: that subset doesn’t work, because actually a surreal number includes infinite and infinitesimal numbers

[02:38] *** Xliff joined
[02:42] *** stoned75 joined
[02:47] *** stoned75 left
[02:59] *** stoned75 joined
[03:19] *** BenGoldberg left
[03:28] *** stoned75 left
[03:34] *** stoned75 joined
[04:34] *** nativecallable6 left
[04:34] *** sourceable6 left
[04:34] *** committable6 left
[04:34] *** greppable6 left
[04:34] *** bisectable6 left
[04:34] *** tellable6 left
[04:34] *** releasable6 left
[04:34] *** statisfiable6 left
[04:34] *** reportable6 left
[04:34] *** coverable6 left
[04:34] *** linkable6 left
[04:34] *** unicodable6 left
[04:34] *** squashable6 left
[04:34] *** bloatable6 left
[04:34] *** notable6 left
[04:34] *** quotable6 left
[04:34] *** evalable6 left
[04:34] *** shareable6 left
[04:34] *** benchable6 left
[04:34] *** epony left
[04:34] *** linkable6 joined
[04:34] *** shareable6 joined
[04:34] *** committable6 joined
[04:34] *** reportable6 joined
[04:34] *** tellable6 joined
[04:35] *** releasable6 joined
[04:35] *** quotable6 joined
[04:35] *** nativecallable6 joined
[04:36] *** benchable6 joined
[04:36] *** statisfiable6 joined
[04:36] *** squashable6 joined
[04:36] *** unicodable6 joined
[04:36] *** sourceable6 joined
[04:36] *** bloatable6 joined
[04:37] *** evalable6 joined
[04:37] *** greppable6 joined
[04:37] *** notable6 joined
[04:37] *** bisectable6 joined
[04:37] *** coverable6 joined
[05:18] *** aluaces joined
[05:26] *** gnufr33dom joined
[05:39] *** stoned75 left
[05:45] *** molaf left
[05:57] *** gnufr33dom left
[05:59] *** gnufr33dom joined
[06:00] *** cpan-raku left
[06:01] *** cpan-raku joined
[06:01] *** cpan-raku left
[06:01] *** cpan-raku joined
[06:09] *** BenGoldberg joined
[06:14] *** jmerelo joined
[06:18] <jmerelo> We've reached 1500 questions in StackOverflow right by the end of summer https://stackoverflow.com/questions/tagged/raku

[06:18] <jmerelo> Will we reach 2000 before the end of the year? 1600, more likely, but still...

[06:27] *** ex_nihilo left
[06:34] *** stoned75 joined
[06:37] *** Altai-man joined
[06:38] <jmerelo> releasable6:status

[06:38] <releasable6> jmerelo, Next release will happen when it's ready. 3 blockers. Changelog for this release was not started yet

[06:38] <releasable6> jmerelo, Details: https://gist.github.com/040925d93942579bb765f4be8abac3d2

[06:41] <tobs> Juerd: I think there is even use for the Truly type as (:$flag where *.so) in the signature gives you a "flag" adverb.

[06:44] *** BenGoldberg left
[06:45] <tobs> As for Real, the hierarchy is: Numeric (lots of things) -> Real (real numbers) -> Num (IEEE representation). The Real role in the middle admits multiple representations of real numbers, like bigfloats and isolating roots of polynomials. I think that's the reason it exists, even though it does not forbid infinities or NaNs.

[06:47] *** gnufr33dom left
[06:47] <moritz> Real also includes things like Int, but not Complex

[06:54] *** aborazmeh joined
[06:54] *** aborazmeh left
[06:54] *** aborazmeh joined
[06:54] *** stoned75 left
[07:00] *** stoned75 joined
[07:03] *** sena_kun joined
[07:05] *** Altai-man left
[07:32] *** abraxxa joined
[07:34] *** Sgeo left
[07:37] *** abraxxa left
[07:37] *** abraxxa joined
[07:45] *** dakkar joined
[08:02] *** ingy left
[08:06] *** domidumont joined
[08:07] <El_Che> jmerelo: did you post the results of the survey somewhere?

[08:11] <sena_kun> El_Che, see https://github.com/Raku/survey/releases/tag/v2020.09

[08:11] *** Kaiepi joined
[08:14] <El_Che> thx

[08:14] <El_Che> 1 page :)

[08:18] <jmerelo> El_Che: Just the summary, thanks sena_kun++

[08:18] <jmerelo> El_Che: I've posted some stuff in Twitter, also. The R files and charts are in the repo, too.

[08:19] <El_Che> the pdf mangles questions with lots of words, like about installation

[08:19] <El_Che> probably the output was broken on the google site already

[08:20] *** pecastro joined
[08:23] *** aborazmeh left
[08:24] *** aborazmeh joined
[08:24] *** aborazmeh left
[08:24] *** aborazmeh joined
[09:21] <Xliff> jmerelo: Huh. I didn't know R was that nice in terms of graphing.

[09:21] <Xliff> Wonder if I can make a Raku version that clean.

[09:21] <Xliff> What do you think it would take?

[09:23] <moritz> a good graphing library would be a nice start :D

[09:24] <JJAtria[m]> Was that using ggplot? In my R days that was the good library to use, but that was a while ago

[09:25] <Xliff> moritz: Give me a couple.

[09:25] <jmerelo> Xliff: R + ggplot2 Nicer than matplotlib, actually. And there's a lot of data massaging, functional style, you can do.

[09:25] <jmerelo> JJAtria[m]: correct. ggplot2, actually.

[09:25] * Xliff looks at ggplot2

[09:26] <jmerelo> Xliff: it's mostly written in R, though. It'd probably be easier to start Inline::R first

[09:26] <jmerelo> Nice thing about ggplot2, it's a graphing grammar, functional in design. Syntactically, wouldn't be so difficult to port. Graphing is a different history altogether

[09:27] <JJAtria[m]> I liked the idea of ggplot more than actually using it when I had to, but I never used the second version. Back then, I ended up moving entirely to pgfplots

[09:27] *** cpan-raku left
[09:28] <Xliff> jmerelo: I'm not a compiler designer, unfortunately. I'm more a NativeCall hacker.

[09:28] <jmerelo> JJAtria[m]: apparently, the first version wasn't so nice. ggplot2 really makes sense in terms of composing parts of a chart together. Also, very nice transformation primitives you can use from the get go. Plus "themes" like gg_themes that add look&feel; I use "Tufte" most often.

[09:29] <Xliff> jmerelo: I've got 20 projects worth of language binding code that just needs a few improvements in the Raku build chain before I can start releasing.

[09:29] <jmerelo> But leaving aside the charts and stuff, I'm slightly worried about the results.

[09:29] *** cpan-raku joined
[09:29] *** cpan-raku left
[09:29] *** cpan-raku joined
[09:29] <jmerelo> To put it mildly, it does not show a vibrant and thriving language attracting lots of new developers.

[09:30] <Xliff> Explain

[09:30] <jmerelo> As a matter of fact, only 20 responses say they've started using it during the last year, down from 40ish in the previous one.

[09:31] <Xliff> Ah.

[09:31] <Xliff> We need to get Raku taught in schoolos.

[09:31] <Xliff> s/choolos/schools/

[09:31] <jmerelo> The percentage of people coming from Perl hasn't changed much, either.

[09:31] <Xliff> Even if it starts off as extra-curricular.

[09:32] <jmerelo> Well, I do all in can in this little corner of the world to show it off in my classes. But it's not enough.

[09:32] <Xliff> jmerelo: I think I shared this with you before -- https://drive.google.com/file/d/12j1Dy6zIcmZP8EOWFYJzKElohGkj9IyL/view?usp=sharing

[09:32] <jmerelo> Maybe, but I don't remember having checked it out. Good work.

[09:33] <Xliff> That's an old version. I'm up to 450+kloc

[09:33] <jmerelo> Xliff: it's your own tally of contributions to Raku, right?

[09:33] <Xliff> Yes. Unreleased currently due to install times using current zef

[09:33] <jmerelo> Just the G* contributions are really awesome.

[09:34] <Xliff> So if you look at column N, that's the minimum number of seconds to install uzing zedf.

[09:34] <Xliff> s/zedf/zef/

[09:34] *** BenGoldberg joined
[09:35] <Xliff> Even getting it down to the O column times would be a bit of work, thoguh much of those improvements will make it into 2020.09, I think.

[09:36] <jmerelo> Xliff: that would be awesome... yes, zef takes some time in ocassions. That's why I create custom Dockerfiles to test, most of the time.

[09:36] <jmerelo> But, wow, 2225 is *a lot*

[09:38] <jmerelo> I guess it will improve in time... Now that we were mentioning R, some libraries also take a lot of time to install. Don't think it's a big hurdle for adoption of the language

[09:38] <jmerelo> (and that's probably not your point, either)

[09:39] <Xliff> No. The big one is lack of feedback in current zef.

[09:40] <Xliff> For installing these, the user needs more than what you see in the current implementation.

[09:40] <Xliff> I'd like more text emitted during install.

[09:40] <Xliff> Ideally I'd like to write a custom callback zef can use so that I can feed installation information back to the user.

[09:41] <Xliff> Don't have any idea of how such a mechanism would work, though.

[09:41] <Xliff> Next big step would be binary packaging so that end-users wouldn't need zef.

[09:44] <jmerelo> Xliff: that would be really nice. Even simple source-based packaging would be a plus.

[09:45] <Xliff> Yeah. Lots of plans, but no direction yet.

[09:45] <Xliff> So that's the first thing I'd lobby the steering council for.

[09:46] <jmerelo> Xliff: exactly what I was writing right now. And deleted.

[09:46] <Xliff> Ah. 

[09:46] <Xliff> Why deleted?

[09:46] <Xliff> Not the right words? Not the right time?

[09:47] <Xliff> Is it something related to your reasoning above? About the data showing Raku as not being vibrant and thriving?

[09:48] <Xliff> I kind of get that. However the Raku language design is playing the long game.

[09:48] <Xliff> Much of Raku's features are ahead of their time.

[09:48] <jmerelo> Xliff: you have said it already :-)

[09:48] <Xliff> I think you are right in your efforts to get Raku into educational facilities.

[09:49] <Xliff> In the meantime it will take the concerted efforts of everyone here to keep the torch lit until we start gaining users in serious numbers.

[09:49] <jmerelo> Xliff: not nearly enough, though. 

[09:49] <Xliff> Raku is not even 5 years old yet.

[09:49] <jmerelo> Xliff: it definitelly will need those efforts, and then some...

[09:50] <Xliff> And compile times are putting off adoption in the efforts where Pythin, Ruby and others gained their early adoption.

[09:50] <Xliff> For web development, Raku really needs an app-server before it can be considered.

[09:51] <jmerelo> Xliff: you mean something like GUnicorn?

[09:51] <Xliff> Cro provides the pieces to make such. In its current state it falls far short of apache + mod_perl, which what we need to shoot for.

[09:51] * Xliff atempts to find the mythical GUnicorn

[09:51] <jmerelo> Something I _really_ miss is a coverage tool.

[09:51] <Xliff> jmerelo: Um yeah. I do mean that.

[09:51] <jmerelo> Green Unicorn is a PSGI front-end, which you can put in front of webservices written in Python.

[09:52] <jmerelo> I think that until we have a good coverage tool, it's going to be very difficult to get Raku into production. Without coverage tests, few people are going to be putting Raku extensively into production.

[09:52] <Xliff> Cro is almost there. It just needs code to implement a true application server.

[09:53] <jmerelo> Xliff: right

[09:53] <jmerelo> Xliff: at any rate, we are into the mentality of "If we build it, they will come". Not really sure about that.

[09:53] <Xliff> Then instructions on how to serve it all using something light weight for the reverse proxy... like nginx

[09:54] <Xliff> jmerelo: Look at the converse. "If we don't build, they won't come."

[09:54] <Xliff> Which is absolutely true.

[09:54] <jmerelo> Xliff: right, too. Cro is nice by itself, however. Much more powerful that other similar things like express or flask.

[09:54] <jmerelo> Concurrent, for one thing.

[09:54] <Xliff> We need to do more than build. We need to start advertising for one thing.

[09:55] <jmerelo> But you're right. The problem is who is "you", the proverbial "you" that build the things we need...

[09:55] <Xliff> So a Raku blog which we can repost from would be a good thing.

[09:55] *** aborazmeh left
[09:55] <jmerelo> Xliff: I'm in the TPF marketing committee... Only 2 representatives of Raku, though. 

[09:55] <Xliff> jmerelo: In my mind, that's this community.

[09:55] <Xliff> It would be nice if we got help from the greater perl community rather than disdain.

[09:56] <jmerelo> Xliff:  yep, but we're kinda overworked here. Just the docs would need like three times the effort we're devoting now. 

[09:56] <Xliff> I know.

[09:57] <jmerelo> Xliff: and tbrowder talked about creating a Raku blog. But taking into account how hard it is to put together a * calendar, I really don't know about blogs...

[09:57] <sena_kun> There is coverage for Raku code. A handy UI is another question, I'm using Comma UI and it's fine for me. Used it for Pod::To::HTML refactoring recently.

[09:57] <Xliff> The community, as it stands now, is healthy. We are innovating. We are creating. It's just that seem to be doing so in am empty room.

[09:57] <jmerelo> sena_kun: where's that tool?

[09:57] <Xliff> That generally means we are missing a "killar app" that would draw people to the language.

[09:58] <jmerelo> sena_kun: comma covers very well the tooling area. No complain in that area. You can also use raku-mode if you don't like proprietary software.

[09:58] <Xliff> Comma is nice, but it has it's problems handling things larger than a typical ecosystem project script.

[09:58] <Xliff> It falls over on p6-GLib.

[09:59] <sena_kun> jmerelo, MVM_COVERAGE_LOG=some-dir-path in env and then process results to show nicely.

[09:59] <Xliff> So it looks like I might need to take classes on the proper use of Comma so I can really evaluate it as a tool.

[09:59] <Xliff> Because the current documentation isn't nearly enough.

[09:59] <jmerelo> Xliff: don't believe too much in that, either. It worked for Ruby, with Ruby on Rails. In the broad sense, data-science did it for R, Scala, Julia...

[09:59] <jmerelo> But still. Development is incredibly broad.

[10:00] <Xliff> jmerelo: So let's actually build some data-science into rakudo.

[10:00] *** leont joined
[10:00] <Xliff> The more areas Rakudo covers, the more likely it will be discovered and used.

[10:00] <jmerelo> sena_kun: that's MoarVM coverage, right?

[10:00] <sena_kun> jmerelo, yes?

[10:01] <Xliff> jmerelo: I am, I think, maybe a year or two out before I have enough G* coverage to actually have enough pieces to write a desktop manager in Raku.

[10:01] <jmerelo> sena_kun: I was looking more at white-box testing, that showed source-code test coverage. But let me check that anyway.

[10:01] <jmerelo> Xliff: that would be cool.

[10:01] <sena_kun> jmerelo, erm, it is about source-code test coverage.

[10:01] <jmerelo> Xliff: in data science, some good work is being done wrapping the Gnu Scientific Library by Frithnanth. 

[10:01] <jmerelo> sena_kun: let me check then.

[10:02] <jmerelo> sena_kun: I vaguely remember that was not what I was looking for, but I'll check back.

[10:04] <Xliff> I think I may look into bindings for ggplot2

[10:04] <MasterDuke> jmerelo: it's a MoarVM feature/flag, but the reports it creates are of the higher level code. i.e., it's not showing MoarVM coverage

[10:04] <sena_kun>  have an impression this was talked over and over. I work on Comma at $dayjob whenever time allows and after that I spend my weekends and free time rewriting doc tooling, investing funds there, writing numerous posts, etc. Telling "You folks don't do enough" is not very actionable. I do agree with a stance like "if you are quietly improving a thing the people just won't know about it without marketing", but it is not a job for people who fix bugs and do 

[10:04] <sena_kun> software. If RSC will become a thing, marketing/adoption can be set as a high priority question.

[10:04] <Xliff> Got couple of weeks on refactoring GIO.

[10:04] <Xliff> Then I have to get back to SOUP tests.

[10:04] <Xliff> Then... maybe... ggplot2

[10:05] <sena_kun> s/ have/I have/

[10:05] <Xliff> sena_kun: Maybe you can teach me Comma? :)

[10:06] <Xliff> Or at least show me what I am doing wrong there.

[10:06] <sena_kun> Xliff, I can try. :)

[10:06] <Xliff> If I can start using it for G* dev, progress would improve exponentially!

[10:06] <Xliff> sena_kun: Plus... that's one way I can get you to download all of my code. ;q

[10:06] <sena_kun> Where does it ache?

[10:06] <jmerelo> sena_kun MasterDuke I see now, but it's not a _tool_ proper, or a coverage tool at that

[10:06] <Xliff> sena_kun: Debugging

[10:07] <sena_kun> Xliff, OS?

[10:07] <timotimo> jmerelo: hey, can you explain something about the analysis of the survey?

[10:07] <Xliff> sena_kun: Linux

[10:07] <sena_kun> Xliff, I see. Let me guess, your breakpoints are not stopping where they should?

[10:07] <jmerelo> MasterDuke: you can try and create a coverage tool out of that, of course, but you would need to parse that log, check out the original source it's supposed to check, and then say: well, we have 90% coverage or whatever. That's what I mean.

[10:07] <Xliff> I find that JetBrains internals will either crash outright, or I'll lose sync with the debugging process and then lose things like local variables and such.

[10:08] <Xliff> sena_kun: Aha! That's a large pain point. How did you guess? :)

[10:08] <jmerelo> timotimo: certainly, but not done a lot of analysis so far. Basically charting. But if you want me to clarify something, shoot

[10:08] <sena_kun> Xliff, this "bug" was there from the beginning. I think it is a MoarVM level issue and we have no experts with time on board to tackle on this.

[10:08] *** BenGoldberg left
[10:09] <Xliff> sena_kun: Ah. Ouch.

[10:09] <sena_kun> Xliff, re "internals crash" - I need traces to look at, it usually gives you a nice stacktrace and all on exception. :)

[10:09] <Xliff> So... people with MoarVM experience should split time between developing new things and fixing old ones.

[10:10] <Xliff> Of course, that means better time management for things being done away from $dayJob.

[10:10] <Xliff> I get it.

[10:10] *** thundergnat left
[10:10] <Xliff> I think we need more core devs. 

[10:10] <Xliff> More people to shadow folsk like jnthn++ and niner++ 

[10:10] <Xliff> s/folsk/folks/

[10:10] <Xliff> Yeah. My fingers going dyslexic.

[10:11] <Xliff> And lizmat++

[10:11] <sena_kun> In a volunteer project where people do extremely intricate things for free, yes. :]

[10:11] <Xliff> Another thing that would help would be to get commercial interest in raku.

[10:11] * sena_kun .oO ( just you wait for my announce in a week or two )

[10:12] <Xliff> It's frustrating to write something like this: https://github.com/Xliff/p6-Amazon-AWS-EC2

[10:12] <timotimo> jmerelo: in many of the answers there are multiple entries for "the empty string" or something. can that be?

[10:12] <timotimo> also, of course the parts of the charts that are scrollable are useless in the pdf :)

[10:13] <Xliff> Only to get it into testing phase and then run into this: https://github.com/rakudo/rakudo/issues/3075

[10:13] *** wbn left
[10:14] *** Black_Ribbon left
[10:15] <MasterDuke> jmerelo: yep. there is a script in the rakudo repo, but i think its bitrotted

[10:15] *** wbn joined
[10:15] <jmerelo> timotimo: that's most likely due to questions being added after the survey started. Or simply non-mandatory questions without an answer.

[10:16] <jmerelo> timotimo: can weed that out if you want.

[10:16] <sena_kun> Xliff, I get you, really. People relatively often say "Is Raku slow, where performance, we need speed", but I found just plain, boring bugs more frustrating to deal with.

[10:16] <MasterDuke> https://github.com/MoarVM/MoarVM/blob/master/tools/parse_coverage_report.p6

[10:19] <jmerelo> MasterDuke++

[10:20] <jmerelo> MasterDuke: couldn't that be spun off to an ecosystem module?

[10:20] <MasterDuke> probably

[10:21] <jmerelo> MasterDuke: it needs core.SETTING, oops, that might be hard, but probably will do with a few nice defaults.

[10:22] <timotimo> jmerelo: does that explain multiple empty answers in the same question? i guess one for every "version" of set of answers?

[10:23] <timotimo> and also, some things are cut off with no way (in the pdf) to get the rest of the text

[10:24] <jmerelo> timotimo: it might. The PDF is not complete by any means. It's just a screen capture. Problem is, GDrive forms don't generate any other kind of nice summary.

[10:24] <jmerelo> timotimo: the CSV is uploaded to the repo, anyway.

[10:24] <jmerelo> timotimo: wouldn't worry too much about empty answers, anyway.

[10:25] <lizmat> jmerelo: so what should I link to in the Weekly ?

[10:26] *** rindolf joined
[10:27] <jmerelo> lizmat: the PDF summary is probably your best bet, until we drill down on the results.

[10:27] <jmerelo> lizmat: you can also link the CSV with all the answers.

[10:28] *** stoned75 left
[10:29] *** stoned75 joined
[10:45] <jmerelo> lizmat: the PDF

[10:45] <jmerelo> lizmat: (short answer)

[10:48] <MasterDuke> jmerelo: fyi, just tried the script and it does work. `moar --dump ../rakudo/blib/CORE.c.setting.moarvm >annotations; mkdir coverage; MVM_COVERAGE_LOG=a.log raku -e 'say "hi"'; raku ../MoarVM/tools/parse_coverage_report.p6 --annotations=annotations a.log ../rakudo/gen/moar/CORE.c.setting`

[11:02] *** Altai-man joined
[11:05] *** sena_kun left
[11:14] <jmerelo> MasterDuke: so good candidate for spinning it off... somehow. It would need multi-file support, for starters, and some tests too. Thanks!

[11:15] <timotimo> can you give an iframe a src with a data url?

[11:17] <MasterDuke> from github's share button: <iframe src="https://gist.github.com/MasterDuke17/f733379b00456d1515d53d2452ead463.pibb"></iframe>

[11:18] <MasterDuke> if that's what you mean?

[11:30] <timotimo> ah, no it isn't

[11:30] <timotimo> data urls are where you put the actual contents in the href or src as base64

[11:30] <timotimo> with a special prefix to mark what it actually is

[11:32] <MasterDuke> ah

[11:37] <timotimo> a way to have one file with the contents of many files in it, supported by browsers

[11:46] *** Tirifto joined
[11:47] *** aborazmeh joined
[11:47] *** aborazmeh left
[11:47] *** aborazmeh joined
[11:53] <AlexDaniel`> one file with contents of many files…

[11:53] <AlexDaniel`> did you use Junctions a bit too much? xD

[11:53] <timotimo> ha

[11:58] *** Manifest0 left
[11:59] *** Manifest0 joined
[12:20] *** Manifest0 left
[12:29] <jmerelo> timotimo: you need to use <script> for that. Some frameworks also allow data-* attributes in tags.

[12:30] <timotimo> hm.

[12:52] *** Kaiepi left
[12:52] *** stoned75 left
[12:59] *** jmerelo left
[13:00] *** BenGoldberg joined
[13:04] *** stoned75 joined
[13:07] *** Manifest0 joined
[13:21] *** Manifest0 left
[13:21] *** Manifest0 joined
[13:26] *** Manifest0 left
[13:27] *** Manifest0 joined
[13:32] *** Manifest0 left
[13:33] *** Manifest0 joined
[13:33] *** BenGoldberg left
[13:56] *** skids joined
[14:01] *** aborazmeh left
[14:06] *** Manifest0 left
[14:07] *** Manifest0 joined
[14:13] *** aluaces left
[14:15] *** Manifest0 left
[14:16] *** Manifest0 joined
[14:25] *** epony joined
[14:29] *** vrurg_ is now known as vrurg

[14:32] *** ggoebel joined
[14:33] *** Sgeo joined
[14:38] *** Kaiepi joined
[14:52] <Geth> ¦ Raku-Steering-Council/main: 64991d01e3 | Coke++ | nominations/2020/results.txt

[14:52] <Geth> ¦ Raku-Steering-Council/main: Submit voting results of September 2020 election

[14:52] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/64991d01e3

[14:54] <[Coke]> Voting tabulated and submitted. Congratulations to the top 7: jnthn, lizmat, nine, JJ, codesections, AlexDaniel`, ugexe

[15:02] <moritz> [Coke]++ # one-man voting council

[15:03] *** sena_kun joined
[15:04] *** molaf joined
[15:04] <[Coke]> eh. with < 50 votes, it was not a terrible amount of work. Also, it stopped me from self-nominating. :)

[15:04] <[Coke]> happy to help

[15:04] *** molaf left
[15:05] *** molaf joined
[15:05] *** Altai-man left
[15:07] <Altreus> Is there a succinct way of flattening a hash into a list of (key, value, key, value) rather than pairs?

[15:08] <[Coke]> m: my %a = <a b c d e f g h> ; dd %a.kv

[15:08] <camelia> rakudo-moar 85847d2f1: OUTPUT: «("a", "b", "c", "d", "g", "h", "e", "f").Seq␤»

[15:09] <[Coke]> ^^

[15:09] <Altreus> ah! thank

[15:11] <MasterDuke> i don't remember seeing anybody mention a blockchain, can we *really* be sure the voting was done correctly?

[15:11] <AlexDaniel> [Coke]: it says =?UTF-8?Q? in the file?

[15:11] <[Coke]> AlexDaniel: yes.

[15:12] <[Coke]> because unicode is hard and I'm lazy

[15:12] <codesections> MasterDuke: https://xkcd.com/2030/

[15:12] <[Coke]> MasterDuke: no. you have to trust me, basically.

[15:12] <[Coke]> I don't think any of the votes were signed, either.

[15:12] <[Coke]> AlexDaniel: I'll add a note about the malformed utf in the file.

[15:13] <moritz> [Coke]: for increased trust, I recommend you take a few lego blocks, add a chain around them, take a picture, and add the caption "secured by block chain" :D

[15:14] <AlexDaniel> Congrats to everyone!

[15:14] <codesections> moritz: s/trust/buzzword compliance/ :D

[15:14] <Geth> ¦ Raku-Steering-Council/main: 2a4d15bb8f | Coke++ | nominations/2020/results.txt

[15:14] <Geth> ¦ Raku-Steering-Council/main: Fixup voter names that require unicode

[15:14] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/2a4d15bb8f

[15:14] <[Coke]> AlexDaniel: fixed the malformed unicode

[15:15] <AlexDaniel> [Coke]: thank you for the work!

[15:15] <[Coke]> future vote tally people need to do a better job on unicode handling in votes.

[15:15] <[Coke]> (I basically cheated and used utf-c8 rather than trying to follow the encoding in the file)

[15:15] <[Coke]> moritz: :P

[15:15] *** rir joined
[15:16] *** jmerelo joined
[15:19] <tobs> (Pretty sure I signed my vote.)

[15:21] <[Coke]> ah, so you did

[15:22] <[Coke]> looks like the only one, don't see a signature.asc on the others.

[15:26] <jmerelo> So I guess that's the result https://github.com/Raku/Raku-Steering-Council/commit/64991d01e36b0192efe361d2100dcf38254907ce

[15:27] <jmerelo> Many thanks. Hope I'll be up to the task

[15:27] <jmerelo> And congrats to jnthn, lizmat, nine, codesections, AlexDaniel and ugexe

[15:27] <[Coke]> jmerelo: https://github.com/Raku/Raku-Steering-Council/blob/main/nominations/2020/results.txt

[15:28] <AlexDaniel> tobs: nice!

[15:28] <codesections> jmerelo: thanks, and congrats to you too :)

[15:29] <MasterDuke> congrats all

[15:33] <jmerelo> [Coke]: and thanks for all the work in carrying this out.

[15:40] <[Coke]> jmerelo: would have pinged you in my send earlier, but was looking for "JJ", apologies. :)

[15:42] <jmerelo> [Coke]: :-) No problem. I registered this nick here in this channel, so it's what I use.

[15:45] *** jmerelo left
[15:45] *** Chi1thangoo left
[15:46] *** sjaveed joined
[15:47] <leont> [Coke]++

[15:50] <[Coke]> .tell ugexe results are submitted, congratulations (RSC)

[15:50] <tellable6> [Coke], I'll pass your message to ugexe

[15:51] <[Coke]> I think that's everyone.

[15:51] *** sjaveed left
[16:10] <timotimo> mildly surprised jonathan isn't at a lower number due to the "anybody's going to vote for him anyway, so i can sneak in a different fifth" effect

[16:20] <Xliff> Congrats to the new Raku Steering Council: jnthn++ lizmat++ niner++ jmerelo++ AlexDaniel++ codesections++

[16:20] <Xliff> ugexe++

[16:25] *** BenGoldberg joined
[16:38] <guifa> timotimo: but that risks everyone doing that and him not getting on the committee at all

[16:43] *** dakkar left
[16:46] *** domidumont left
[16:50] <rypervenche> If I've got a variable that I would like to use in a grammar's actions, but I set said variable in my MAIN sub below the grammar, what would be the best way to do that? 

[16:52] <codesections> rypervenche: if I understand what you'd like to do correctly, you can do that by passing the argument into the grammar with :args

[16:52] <codesections> https://docs.raku.org/language/grammars#Passing_arguments_into_grammars

[16:52] <codesections> is that what you're looking for?

[16:53] *** stoned75 left
[16:53] *** eseyman left
[16:54] <rypervenche> It looks close. Will I be able to use those arguments in an Action class as well? Here it looks like it's for the grammar only.

[16:54] *** BenGoldberg left
[16:54] *** Ben_Goldberg joined
[16:55] *** Ben_Goldberg is now known as BenGoldberg

[16:57] *** eseyman joined
[16:57] *** approaching236 joined
[16:59] *** BenGoldberg left
[17:01] <rypervenche> codesections: I'm trying to use $number (which is a CLI-passed argument) in my Actions. Would a dynamic variable be a good tool for this? https://gist.github.com/rypervenche/eb3925be4eebf62ee6e70f031be7b111

[17:04] *** domidumont joined
[17:04] *** stoned75 joined
[17:17] <codesections> rypervenche: Yep, a dynamic variable seems like a good fit there (i.e., changing $number to $*number)

[17:23] <rypervenche> Oh, that's very easy. I've never used dynamic variables before.

[17:24] <codesections> They're powerful in the right situations, but can also make code very hard to reason about when used more extensively 

[17:29] *** Black_Ribbon joined
[17:42] *** rir left
[17:43] <lizmat> [Coke]++  # being the votemaster

[17:45] *** domidumont left
[17:45] *** nige joined
[17:46] *** aluaces joined
[17:46] *** nige left
[17:47] *** jmerelo joined
[17:53] *** kent\n is now known as Mickey_Mouse

[17:54] *** Mickey_Mouse is now known as kent\n

[17:54] *** Xliff left
[18:00] *** nige joined
[18:01] <nige> congrats to all the elected RSC members

[18:07] <nige> just wanted to reach out to the new council - it would be great if we can continue a good working relationship together with TPF

[18:08] <nige> JJ has been helping on the marketing committee and more Raku community members are welcome to join and help out

[18:08] <codesections> nige++

[18:09] <nige> On Friday a new legal committee for TPF was constituted and would be great if someone from the RSC could also join that committee

[18:12] <nige> the legal committee has a commercial focus too - and we will be looking at putting things in place to help Raku flourish

[18:13] <El_Che> Personally, I would love to see less perl+raku marketing ans market them as completely different languages. I suppose that's what Perl will do once 7 is out

[18:13] <codesections> nige: is there a page describing the legal committee/any other info anywhere? I don't see anything on the TPF website

[18:14] <nige> it was only constituted on Friday - however I can share some of the objectives etc (will send a gist soon)

[18:14] <jmerelo> nige: commercial as in trademarks and such, right?

[18:15] <codesections> nige: thanks

[18:16] <nige> https://codimd.opusvl.com/s/jD95bV_Ue

[18:18] <nige> yes - we are going to need different marketing strategies for the different brands (Raku, Perl 7, Perl 5, TPF, meta::cpan etc) - they all have different markets and messages etc

[18:19] <nige> the TPF itself is in the process of rebranding

[18:19] <El_Che> nige: sure, I mean everything shared to the outside world: conferences, tables, leaflets etc

[18:20] *** molaf left
[18:21] <JJAtria[m]> m: class Foo { has method bar { 123 } }; say Foo.bar # has method??

[18:21] <camelia> rakudo-moar 85847d2f1: OUTPUT: «123␤»

[18:21] <nige> yes - Perl and Raku are at very different points in their lifecycle - and Raku marketing needs to focus on early adopters 

[18:21] <El_Che> exactly

[18:27] <codesections> nige: I'd be happy to volunteer for the legal committee (though I would also be happy to defer to any of the other RSC members if they would rather participate in that committee).

[18:27] <codesections> Before transitioning to software development, I was a practicing attorney and, though I no longer practice, I have maintained my license, so I may have a useful perspective for the committee 

[18:27] <jmerelo> nige: early adopters... not coming from Perl.

[18:27] <El_Che> jmerelo: those that wanted to use raku, already do

[18:27] <El_Che> (from Perl)

[18:28] <jmerelo> El_Che: not so sure. Data do not really support that. I'd say that there's been more people adopting it lately, since it's called Raku

[18:28] <nige> codesections - that would be fab you're very welcome to join. Also open to other members joining

[18:28] <jmerelo> But I'll have to check anyway.

[18:29] <El_Che> looking fron anedoctical data I'd say perl people are moving to Go, Python and co

[18:29] <jmerelo> El_Che: they're moving... elsewhere. Including Raku.

[18:29] <El_Che> (at go related events and communities I meat a suprisingly high number of Perl people)

[18:30] <nige> well I think the recent survey showed that many of the current adopters came from Perl (and probably will in future)

[18:30] <nige> so I think the marketing message needs to talk to Perl people too - it's not a binary thing though

[18:30] <jmerelo> nige: if that's where they're mainly coming from, it's a very small niche indeed.

[18:30] <nige> you can program in Perl + Raku

[18:30] <jmerelo> nige: and dwindling at that. 

[18:30] <jmerelo> nige: we should try and fish in Ruby's waters, for instance.

[18:30] <nige> yes - I hear you on that 

[18:31] <jmerelo> Or early adopters.

[18:31] <El_Che> ruby's waters are pretty dry

[18:31] <El_Che> is experiencing what Perl lived through before

[18:31] <nige> Rails did help Ruby along

[18:32] <nige> and I think Raku could offer something similar

[18:32] <El_Che> too little too late

[18:32] <El_Che> raku needs something like cro to stay competitive

[18:32] <El_Che> but itś no longer a selling point in 2020

[18:34] <nige> the other market not to forget is the Perl diaspora - a lot of programmers have a lot of fondness for Perl - and would love Raku 

[18:35] <El_Che> *there* you need the unique selling point

[18:35] <El_Che> because they are not coming back from reacher ecosystems

[18:37] <El_Che> I think that jj has a great point: early adopters

[18:41] <El_Che> nige: lots of brainstorming on that commitee :)

[18:46] <AlexDaniel`> JJ Atria: yeah, interesting :)

[18:49] <AlexDaniel> hmm, the marketing question

[18:50] <AlexDaniel> remember “We suck at marketing.”? I think the marketing is fantastic. There are so many things that Raku promises or implies but does not really deliver

[18:50] <El_Che> AlexDaniel: it could also be a focus question

[18:50] <El_Che> AlexDaniel: you could be an inspirational speaker :P

[18:51] <AlexDaniel> the real question is what Raku currently is and what it should become, and then it'd be nice to make it actually happen

[18:51] <El_Che> See: 20:50 < El_Che> AlexDaniel: it could also be a focus question

[18:53] <nige> AlexDaniel - that's the nub of it really - what are the top three brand values for Raku now? what are the top three in future? ... the recent marketing survey shows something interesting there

[18:53] <nige> this helps reveal the brand trajectory 

[18:54] <nige> knowing what the values are helps to uncover who the early adopters are and what messages they need to hear

[18:55] <nige> one of the difficulties to be honest is 'performance/speed' has come up as a value in future

[18:55] <nige> this is not really a brand value per se - but more like a feature

[18:55] <timotimo> we have at least 5 performance / 1 speed

[18:56] <timotimo> is that a good ratio?

[18:56] <nige> and branding is about being brutally honest

[18:56] <nige> the marketing message needs to match the reality - otherwise it all backfires

[18:56] <El_Che> there is also the danger of trying to placate the present (or rather past) early adopters vs the future ones

[18:57] <jmerelo> nige: survey results are ready, check them out...

[18:57] <El_Che> ie is it a trajectory of where you want to be in the feature or were the present users see you

[18:58] <nige> thanks JJ - I need to go back and review - I saw the results about a week or so ago

[18:59] <nige> the trajectory is the difference between the values now and the values in future

[18:59] <El_Che> nige: it depends on whose values

[18:59] <nige> sometimes bridging that gap is actually about addressing the problem - with something practical

[18:59] * jmerelo goes AFK for today. See you tomorrow!

[18:59] <nige> other times it's highlighting some truth that was not salient enough

[18:59] <El_Che> the future may be a consequence of the vision of the project

[18:59] *** jmerelo left
[19:00] <nige> bye JJ

[19:00] <El_Che> and that vision may not correspond with the vision of a specific user base

[19:02] *** Altai-man joined
[19:03] <nige> fortunately even though speed may not be Raku strong suit at the moment - there are still many other qualities that make it attractive to some early adopting audiences 

[19:05] *** sena_kun left
[19:05] <El_Che> certainly

[19:05] <nige> for example a CS100 lecturer - who wants to give students a taste of functional / oo / procedural programming / reactive styles of programming

[19:06] <nige> The python marketing committee is actively lobbying to have python included in teaching curriculums etc

[19:07] <El_Che> well, it's already the case in most places

[19:08] <nige> yep - they have done well - here in the UK, python seems to be the language of choice for school teaching

[19:08] <El_Che> I think almost every where if I can be somewhat eurocentri

[19:08] <El_Che> c

[19:10] <nige> another potential early adopting audience is sys admins/devops doing command-line scripting - where performance is less at issue - and whipupitude is important

[19:11] <nige> codesections: could you please send me your email and I will invite you to the legal committee slack channel (nige (at) 123.do)

[19:16] <nige> El_Che do you fancy getting involved with some of the marketing plans? You're welcome to join the marketing committee ...

[19:16] <El_Che> nige: I am too short of time at the moment, but maybe in the future

[19:21] <nige> OK - no worries

[19:21] <codesections> nige: my email is daniel (at) codesections.com (I list it on my website, so I don't mind posting it here)

[19:22] <Geth> ¦ Raku-Steering-Council/main: 702080ca68 | Coke++ | nominations/2020/acceptance.txt

[19:22] <Geth> ¦ Raku-Steering-Council/main: add file to track "signatures" of winners.

[19:22] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/702080ca68

[19:23] <raku-bridge> <DataKinds> hey, does Raku have a WSGI implementation yet?

[19:24] <Altai-man> https://github.com/zostay/RakuWAPI

[19:25] <raku-bridge> <DataKinds> ah, so nothing usable yet then?

[19:27] <Altai-man> Not sure if it's actually usable or not. I think it was presented as http://blogs.perl.org/users/sterling_hanenkamp/2015/08/p6sgi-perl-6-web-service-gateway-interface.html and then evolved into RakuWAPI project?

[19:27] <raku-bridge> <DataKinds> I suppose I can use Inline::Perl and plack ahah

[19:28] <raku-bridge> <DataKinds> mmm, yeah, it looks like the whole spec is there, it's just that nobody seems to have actually put in the work to write the middleware

[19:29] <Altai-man> https://github.com/tokuhirom/p6-Crust <- this?

[19:29] <raku-bridge> <DataKinds> perhaps this too https://modules.raku.org/dist/Smack:cpan:HANENKAMP

[19:29] <Altai-man> Yup, something along the lines.

[19:30] <raku-bridge> <DataKinds> doesn't look like Crust has been updated in quite a long time, I wonder if it still works

[19:30] <timotimo> any particular reason not to just listen for HTTP and mod_proxy the app?

[19:31] <raku-bridge> <DataKinds> just for fun

[19:31] <timotimo> OK

[19:31] <timotimo> we have like PSGI or something, right?

[19:31] <raku-bridge> <DataKinds> I've done that before, I've never set up a raw CGI/WAPI/WSGI/Rack/.... server

[19:31] <raku-bridge> <DataKinds> yeah, the links above

[19:32] *** abraxxa left
[19:33] *** abraxxa joined
[19:34] <raku-bridge> <DataKinds> it seems like there was some attempt made in making RakuWAPI compatible with PSGI?

[19:39] <Geth> ¦ Raku-Steering-Council: codesections++ created pull request #35: Add my acceptance and signature

[19:39] <Geth> ¦ Raku-Steering-Council: review: https://github.com/Raku/Raku-Steering-Council/pull/35

[19:40] <Geth> ¦ Raku-Steering-Council/main: b29719af65 | (Daniel Sockwell)++ | nominations/2020/acceptance.txt

[19:40] <Geth> ¦ Raku-Steering-Council/main: Add acceptance signature

[19:40] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/b29719af65

[19:40] <Geth> ¦ Raku-Steering-Council/main: 7293d7329c | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | nominations/2020/acceptance.txt

[19:40] <Geth> ¦ Raku-Steering-Council/main: Merge pull request #35 from codesections-forks/codesections-signature

[19:40] <Geth> ¦ Raku-Steering-Council/main: 

[19:40] <Geth> ¦ Raku-Steering-Council/main: Add my acceptance and signature

[19:40] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/7293d7329c

[19:41] <Geth> ¦ Raku-Steering-Council/main: e69e4aca37 | (Elizabeth Mattijsen)++ | nominations/2020/acceptance.txt

[19:41] <Geth> ¦ Raku-Steering-Council/main: Add my acceptance and signature

[19:41] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/e69e4aca37

[19:47] * [Coke] wonders why codesections made a PR.

[19:51] *** BenGoldberg joined
[19:56] *** mowcat joined
[19:56] <lizmat> perhaps easier from the web interface ?

[20:02] <codesections> [Coke]: I don't have a commit bit on the Raku-Steering-Council repo.  Am I supposed to?

[20:08] <AlexDaniel> nige: we also don't have whipupitude for sysadmins/devops

[20:08] <AlexDaniel> nige: can't help not being brutally honest

[20:09] <AlexDaniel> I believe once we accept reality it should be easy to move forward in a useful way

[20:10] * lizmat wonders who we is

[20:11] <AlexDaniel> nowadays? The council probably

[20:13] <AlexDaniel> nige: just as a single example, see https://docs.julialang.org/en/v1/manual/running-external-programs/

[20:14] <AlexDaniel> nige: in Raku you can either use shell with all the interpolation issues, or try to chain `run` calls

[20:15] <AlexDaniel> both are far from giving a proper whipupitude experience, especially when it comes to writing script-like things (which I think sysadmins do often)

[20:16] <AlexDaniel> so, really, we're just lacking a solution there, and that is fixable

[20:17] <lizmat> Yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/09/21/2020-38-council-results/

[20:20] <lizmat> AlexDaniel: so on the one hand you say: we also don't have whipupitude for sysadmins/devops

[20:20] <zostay> Altai-man: I am basically not doing anything with Raku. Things are too busy right now for O(fun) projects. I'm not sure if or when I will return to any Raku work at this point.

[20:20] <lizmat> but otoh you say: so, really, we're just lacking a solution there, and that is fixable

[20:21] <zostay> RakuWAPI needs to have an implementation. I don't have time to do that. The only thing close that I know of is Crust, which (last I knew) is more like PSGI in Raku than WAPI.

[20:21] <lizmat> AlexDaniel: what is stopping you from working on such a solution?

[20:21] <AlexDaniel> time

[20:22] <lizmat> you appear to have time enough to say what's wrong with Raku

[20:22] <AlexDaniel> lack thereof, that is

[20:22] <zostay> I have a sort of production project that was built on Smack + Cofra which is a application framework I started building, but both are only half-baked.

[20:22] <lizmat> AlexDaniel: seeing the other things you're doing to Raku, it appears to me that you *do* have time

[20:22] <lizmat> you even appear to have time to be on the RSC

[20:23] <AlexDaniel> lizmat: not exactly. I almost didn't even vote in this election – I haven't really been online for the last three days or so

[20:23] <AlexDaniel> and a week before that was preparation for the competition

[20:24] <AlexDaniel> so, I do have some time, yes I use it to express my opinions sometimes :)

[20:24] <AlexDaniel> but then, for whateverable I currently unstaged & uncommitted changes

[20:24] *** BenGoldberg left
[20:25] <AlexDaniel> so that's the first thing I'll be doing…

[20:26] <AlexDaniel> not sure I see your point really. I can't say things unless I'm actually in the process of improving the issues I talk about?

[20:26] <Geth> ¦ Raku-Steering-Council/main: a4a8e6e1a8 | niner++ (committed using GitHub Web editor) | nominations/2020/acceptance.txt

[20:26] <Geth> ¦ Raku-Steering-Council/main: Update acceptance.txt

[20:26] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/a4a8e6e1a8

[20:26] <AlexDaniel> as far as I know nobody is working on improved shell-like features

[20:27] <AlexDaniel> currently have*

[20:28] <lizmat> we have a saying in Dutch: "the best helmsmen are ashore"

[20:32] <codesections> At least two people are working on more ergonomic shell features: https://github.com/gfldex/raku-shell-piping https://github.com/kjkuan/Shell-DSL

[20:32] <AlexDaniel> you're creating a situation in which it is very difficult to be here and have a realistic view of Raku. If people outside criticize it, then they're framed as trolls. If people who are invloved criticize it, then they should just fix things they don't like and not talk about it.

[20:34] <AlexDaniel> it can't always be just positives

[20:34] <AlexDaniel> codesections: that is fantastic

[20:34] <AlexDaniel> codesections: we should get one of these into core

[20:35] *** molaf joined
[20:35] *** cpan-raku left
[20:40] *** cpan-raku joined
[20:40] *** cpan-raku left
[20:40] *** cpan-raku joined
[20:40] * Altai-man has coded enough and is satisfied

[20:42] <AlexDaniel> lizmat: and you can see in https://github.com/gfldex/raku-shell-piping that it is far from being a trivial thing to implement

[20:43] *** aluaces left
[20:43] <lizmat> Did anybody say it was trivial ?

[20:44] *** stoned75 left
[20:44] *** stoned75 joined
[20:48] *** rindolf left
[20:49] <AlexDaniel> I don't know what you're trying to say. But “you appear to have time enough to say what's wrong with Raku” implies that the efforts are comparable, which is obviously not the case.

[21:27] *** Altai-man left
[21:48] *** Xliff joined
[21:49] <Xliff> What does this error mean? 

[21:49] <Xliff> "===> Failed to find dependencies: perl:from<native>"

[21:50] <Xliff> Oh. Maybe "Missing native libperl!"

[21:51] <Xliff> Yep.

[21:51] <Xliff> OK...

[21:51] *** Tirifto left
[21:51] <Xliff> And how is this one fixed:

[21:51] <Xliff> Enabled fetching backends [pswebrequest path curl wget] don't understand http://www.cpan.org/authors/id/J/JS/JSTOWE/Perl6/Test-META-0.0.16.tar.gz

[21:51] <Xliff> You may need to configure one of the following backends, or install its underlying software - [git]

[22:04] *** aborazmeh joined
[22:04] *** aborazmeh left
[22:04] *** aborazmeh joined
[22:19] *** molaf left
[22:32] *** pecastro left
[22:35] *** zacts joined
[22:37] *** stoned75 left
[22:40] *** zacts left
[22:41] *** zacts joined
[22:59] *** stoned75 joined
[23:16] *** BenGoldberg joined
[23:23] *** guifa left
[23:32] *** zacts left
[23:51] *** aborazmeh left
[23:51] *** BenGoldberg left
