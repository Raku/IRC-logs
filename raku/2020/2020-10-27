[00:20] <elcaro> m: use v6.e.PREVIEW; say 0 but True; # Bug in 6.e ?

[00:20] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Don't know setting RESTRICTED␤   at gen/moar/ModuleLoader.nqp:249  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/Perl6/ModuleLoader.moarvm:previous_setting_name)␤ from gen/moar/ModuleLoader.nqp:254  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/…»

[00:21] <elcaro> m: say 0 but True

[00:21] <camelia> rakudo-moar 85847d2f1: OUTPUT: «0␤»

[00:22] <elcaro> The above fails with v6.e.PREVIEW

[00:22] <elcaro> err: Type object Int+{<anon|2>} of v6.c is not compatible with <anon|2> of v6.e

[00:29] *** vike joined
[00:34] *** xinming_ left
[00:35] *** xinming_ joined
[00:35] <lizmat> elcaro: confirmed, could you please make an issue ?

[00:35] <lizmat> afk&

[00:39] *** sftp left
[00:40] *** sftp joined
[00:51] *** xinming_ left
[00:51] *** xinming_ joined
[00:54] *** hobbs left
[00:54] *** hobbs joined
[00:54] *** hobbs left
[00:54] *** hobbs joined
[01:40] *** melezhik joined
[01:42] <melezhik> Hi! I've made 2020.10 rakudo version available to test on http://rakudist.raku.org , if people want to test their distributions against the latest rakudo version 

[01:42] <tellable6> 2020-10-16T17:33:45Z #raku-dev <jmerelo> melezhik thanks!

[01:45] *** sftp left
[01:45] <melezhik> .tell jmerelo: hi @jmerelo!  tell me how it goes with rakudist and if you need any help, thanks 

[01:45] <tellable6> melezhik, I'll pass your message to jmerelo

[01:51] *** xinming_ left
[01:51] *** xinming_ joined
[02:02] *** melezhik left
[02:09] *** MasterDuke left
[02:19] *** molaf left
[02:24] *** xinming_ left
[02:24] *** xinming_ joined
[02:24] *** BenGoldberg left
[02:24] *** BenGoldberg joined
[02:30] *** sftp joined
[02:32] *** molaf joined
[02:40] *** lucasb left
[03:02] *** BenGoldberg left
[03:02] *** Ben_Goldberg joined
[03:02] *** Ben_Goldberg is now known as BenGoldberg

[03:08] *** Doc_Holliwood left
[03:15] *** Chi1thangoo left
[03:18] *** BenGoldberg left
[03:18] *** Ben_Goldberg joined
[03:18] *** Ben_Goldberg is now known as BenGoldberg

[03:23] *** xinming_ left
[03:23] *** xinming_ joined
[03:41] *** xinming_ left
[03:41] *** xinming_ joined
[03:52] *** vgrato_ left
[04:18] *** xinming_ left
[04:19] *** xinming_ joined
[04:24] *** Doc_Holliwood joined
[04:26] *** xinming_ left
[04:26] *** xinming_ joined
[04:56] *** xinming_ left
[04:57] *** xinming_ joined
[05:02] *** xinming_ left
[05:04] *** xinming_ joined
[05:21] *** parabolize left
[05:24] *** Doc_Holliwood left
[05:25] *** bocaneri joined
[05:33] *** sno left
[05:58] *** k-man__ is now known as k-man

[06:01] *** xinming joined
[06:02] *** xinming_ left
[06:08] *** moony left
[06:08] *** BenGoldberg left
[06:33] *** skids left
[06:53] *** Altai-man joined
[06:54] *** wamba joined
[07:09] *** Doc_Holliwood joined
[07:19] *** sno joined
[07:25] *** ufobat joined
[07:26] *** cgfbee left
[07:30] *** Sgeo left
[07:30] *** abraxxa joined
[07:33] *** abraxxa left
[07:35] *** abraxxa joined
[07:36] *** abraxxa left
[07:37] *** MasterDuke joined
[07:37] *** abraxxa joined
[07:39] *** abraxxa left
[07:40] *** abraxxa joined
[07:43] *** moony joined
[07:43] *** abraxxa left
[07:50] *** abraxxa joined
[07:53] *** abraxxa left
[07:55] *** abraxxa joined
[08:00] *** abraxxa left
[08:01] *** abraxxa joined
[08:01] *** sno left
[08:08] *** sena_kun joined
[08:10] *** Altai-man left
[08:12] *** rindolf joined
[08:13] *** reach_satori_ joined
[08:16] *** reach_satori left
[08:24] <Xliff> \o

[08:25] <Xliff> Is there a shortcut for .reverse.skip(1).reverse?

[08:29] *** abraxxa left
[08:38] *** domidumont joined
[08:43] <rindolf> Xliff: .skip(*-1)? just guessing

[08:53] *** pecastro joined
[08:59] *** BenGoldberg joined
[09:08] <xinming> m: my %h = :a(Nil); %h.raku.say;

[09:08] <camelia> rakudo-moar 85847d2f1: OUTPUT: «{:a(Any)}␤»

[09:08] <xinming> I just now found, that in this case, Nil will be converted to Any, Is it possible that we have a Nil value for the Hash value?

[09:11] *** frost-lab joined
[09:20] *** abraxxa joined
[09:21] *** abraxxa left
[09:21] *** abraxxa joined
[09:33] *** BenGoldberg left
[09:37] <MasterDuke> xinming: you need to set the default to Nil

[09:37] <MasterDuke> m: my %h is default(Nil) = :a(Nil); %h.raku.say;

[09:37] <camelia> rakudo-moar 85847d2f1: OUTPUT: «{:a(Nil)}␤»

[09:52] *** sno joined
[10:00] <MasterDuke> Xliff: you want `.head(*-1)`

[10:01] <Xliff> MasterDuke++: Thanks. That's what I ended up with. :)

[10:36] *** pecastro left
[11:06] *** Black_Ribbon left
[11:12] <donaldh> Hi, the macOS homebrew formula for rakudo-star is updated to 2020.10. Thanks to lizmat++ for fixing the ENV issue – patch applied in homebrew formula for this release.

[11:15] *** Doc_Holliwould joined
[11:19] *** Doc_Holliwood left
[11:19] <Xliff> donaldh++ # Thanks!

[11:44] *** k-man_ joined
[11:45] *** k-man left
[11:51] *** Doc_Holliwould left
[11:56] *** Doc_Holliwould joined
[12:02] *** dmc00 joined
[12:07] *** Altai-man joined
[12:09] *** k-man__ joined
[12:10] *** sena_kun left
[12:10] *** k-man_ left
[12:21] *** pecastro joined
[12:24] *** BenGoldberg joined
[12:33] * lizmat clickbaits https://rakudoweekly.blog/2020/10/26/2020-43-release-and-star/

[12:39] *** pecastro left
[12:50] *** frost-lab left
[12:55] *** eiro left
[12:56] *** Doc_Holliwould left
[12:58] *** BenGoldberg left
[13:00] <cpan-raku> New module released to CPAN! Term::TablePrint (1.5.2) by 03KUERBIS

[13:00] <cpan-raku> New module released to CPAN! Term::Choose (1.6.8) by 03KUERBIS

[13:03] *** abraxxa left
[13:08] *** abraxxa joined
[13:09] <[Coke]> donaldh++ lizmat++

[13:16] <[Coke]> anyone have a "autohotkey" equivalent for mac they use? just want some simple text substitutions to always be active.

[13:17] *** Altai-man left
[13:17] <[Coke]> huh. I see I have some old ones in  settings/keyboard/text defined but they aren't working in iterm.

[13:17] *** Altai-man joined
[14:11] *** Chi1thangoo joined
[14:44] *** parabolize joined
[15:36] *** skids joined
[15:37] *** abraxxa left
[15:43] *** abraxxa joined
[15:49] *** BenGoldberg joined
[16:04] *** pecastro joined
[16:05] *** Chi1thangoo left
[16:05] *** wamba left
[16:08] *** sena_kun joined
[16:10] *** Altai-man left
[16:12] *** Sgeo joined
[16:19] *** abraxxa left
[16:20] *** abraxxa joined
[16:24] *** BenGoldberg left
[16:28] *** pecastro left
[16:34] *** abraxxa left
[16:50] *** abraxxa joined
[16:50] <perlmaros> hi, i noticed some unexpected DateTime behaviour for processes running during DST switches. Allthough this behaviour is documented under https://docs.raku.org/language/variables#$*TZ i was wondering how to avoid such errors? So how do i make sure that DateTime.now always returns the correct local timestamp?

[17:04] <cpan-raku> New module released to CPAN! Term::Choose (1.6.9) by 03KUERBIS

[17:09] *** vgrato_ joined
[17:20] *** domidumont left
[17:25] *** Skarsnik joined
[17:31] <Skarsnik> Hello, I want to run 10 times the same block of code in parralel that return etheir true or false, but I want to break all of them if one return false. I tried starting a Promise for each but I am not sure how to check for one finishing before the other with a false result

[17:32] *** jcallen_ is now known as jcallen

[17:33] <[Coke]> You could use "anyof" to await for the first to come back, break everything if failed, loop calling anyof with the remaining...

[17:33] <Skarsnik> Oh right

[17:33] <lizmat> I was more thinking along a .then attached to each promise

[17:33] *** pecastro joined
[17:33] <lizmat> setting a lexically visible atomic int

[17:34] <[Coke]> sure, have a common routine in the then that triggers whenever any of them return false.

[17:34] <[Coke]> s/return false/fail/

[17:34] <lizmat> and make sure the other threads are checking that atomic int as well and have them stop when necessary

[17:34] <[Coke]> s/fail/are broken/ :)

[17:35] <[Coke]> yah, need to have cooperation to stop the work.

[17:36] <Skarsnik> also can I access the Promise in a start block to be able to break it?

[17:37] <Skarsnik> or I just do die 'nooooo'

[17:37] <Skarsnik> or something like that x)

[17:59] <timotimo> you would die "nooooooo"

[17:59] <lizmat> Skarsnik: see also https://stackoverflow.com/questions/64212821/why-am-i-not-allowed-to-break-a-promise

[18:01] <Skarsnik> Thanks, I added an atomic variable that stop the loop inside the promise

[18:02] <Skarsnik> I am stress testing a server and I did not want to have each client keep sending stuff when something is wrong, too much backlog 

[18:04] *** sjm_uk joined
[18:21] *** Chi1thangoo joined
[18:22] *** bocaneri left
[18:38] *** Doc_Holliwould joined
[18:40] *** donaldh left
[18:44] *** abraxxa left
[18:44] *** cgfbee joined
[18:44] *** natrys joined
[18:44] *** abraxxa joined
[18:48] <El_Che> aptly selected name. promise

[19:14] *** BenGoldberg joined
[19:22] <[Coke]> folks looking to contribute to code/docs - https://github.com/Raku/nqp/issues/293 has undocumented nqp opcodes. you can find where the opcodes are declared in nqp's src/vm/... which point to a moarVM opcode in MoarVM's src/ directory, and often to an MVM_function which if you're lucky explains what it does. add to nqp's docs/ops.markdown (or throw it in a comment on that ticket, or in a gist) and we can get 

[19:22] <[Coke]> through the remaining opcodes.

[19:23] <[Coke]> there are 211 opcodes left.

[19:25] *** Doc_Holliwould left
[19:27] *** aluaces left
[19:32] <Geth> ¦ doc: mienaikage++ created pull request #3676: Document absolute parameter for IO::Path symlink method

[19:32] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3676

[19:39] *** Doc_Holliwould joined
[19:49] *** BenGoldberg left
[19:55] *** wamba joined
[20:07] *** Altai-man joined
[20:10] *** sena_kun left
[20:22] *** sjm_uk left
[20:22] *** Black_Ribbon joined
[20:30] *** Altai-man left
[20:32] <[Coke]> nqp: ok(3,'test');

[20:32] <camelia> nqp-moarvm: OUTPUT: «ok 1 - test␤»

[20:33] <[Coke]> raku: use Test; ok(3,'test');

[20:33] <evalable6> [Coke], rakudo-moar 87ef76ae3: OUTPUT: «ok 1 - test␤»

[20:40] *** Altai-man joined
[20:43] *** lucasb joined
[20:44] *** Geth left
[20:47] *** cpan-raku left
[20:48] <[Coke]> nqp: ok(False,'test');

[20:48] <camelia> nqp-moarvm: OUTPUT: «not ok 1 - test␤»

[20:48] <[Coke]> raku: use Test; ok(False,'test');

[20:48] <evalable6> [Coke], rakudo-moar 87ef76ae3: OUTPUT: «(exit code 1) not ok 1 - test␤# Failed test 'test'␤# at /tmp/FfDms6Najt line 1␤»

[20:48] <[Coke]> there.

[20:48] *** Altai-man left
[20:48] <[Coke]> is there a way to disable that extra diag output?

[20:55] *** natrys left
[20:58] *** Roamer` left
[20:58] *** dog_star left
[20:58] *** hoelzro left
[20:58] *** Altreus left
[20:58] *** timlegge left
[20:58] *** hoelzro joined
[20:58] *** Roamer` joined
[20:58] *** dog_star joined
[20:58] *** Altreus joined
[20:58] *** timlegge joined
[21:35] *** Xliff left
[21:48] *** rindolf left
[22:02] *** vgrato_ left
[22:03] *** vgrato_ joined
[22:09] *** ufobat left
[22:21] *** wamba left
[22:40] *** BenGoldberg joined
[22:48] *** niceperl joined
[22:59] <timotimo> m: $*ERR := Nil; use Test; ok(False, "oh no")

[22:59] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Dynamic variable '$*ERR' not found␤  in block <unit> at <tmp> line 1␤␤»

[22:59] <timotimo> m: my $*ERR := Nil; use Test; ok(False, "oh no")

[22:59] <camelia> rakudo-moar 85847d2f1: OUTPUT: «not ok 1 - oh no␤# Failed test 'oh no'␤# at <tmp> line 1␤»

[23:00] <timotimo> m: use Test; ok(False, "oh no"); quietly done-testing

[23:00] <camelia> rakudo-moar 85847d2f1: OUTPUT: «not ok 1 - oh no␤# Failed test 'oh no'␤# at <tmp> line 1␤1..1␤# You failed 1 test of 1␤»

[23:01] <timotimo> [Coke]: which exact diag output, the line number in the comment?

[23:04] <timotimo> Test does extra sure that output goes to the real stdout and stderr

[23:06] *** tejr left
[23:06] *** tejr joined
[23:13] *** BenGoldberg left
[23:17] *** nebuchadnezzar left
[23:20] *** cpan-raku joined
[23:20] *** cpan-raku left
[23:20] *** cpan-raku joined
[23:30] *** niceperl left
[23:50] *** mid_home left
