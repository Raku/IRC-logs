[00:00] *** holli left
[00:02] *** holli joined
[00:02] *** Doc_Holliwood left
[00:05] *** Doc_Holliwood joined
[00:05] *** Doc_Holliwould left
[00:08] *** Doc_Holliwould joined
[00:08] *** holli left
[00:10] *** holli joined
[00:11] *** Doc_Holliwood left
[00:13] <Geth> Â¦ doc: tbrowder++ created pull request #3245: chg p6 to raku; chg .perl to .raku

[00:13] <Geth> Â¦ doc: review: https://github.com/Raku/doc/pull/3245

[00:14] *** Doc_Holliwould left
[00:14] *** Doc_Holliwood joined
[00:16] *** Doc_Holliwould joined
[00:16] *** holli left
[00:19] *** holli joined
[00:19] *** Doc_Holliwood left
[00:19] <Geth> Â¦ doc: tbrowder++ created pull request #3246: chg p6 to raku; chg .perl to .raku

[00:19] <Geth> Â¦ doc: review: https://github.com/Raku/doc/pull/3246

[00:21] *** Doc_Holliwood joined
[00:22] *** Doc_Holliwould left
[00:24] *** Doc_Holliwould joined
[00:25] *** holli left
[00:26] *** mowcat joined
[00:26] <Geth> Â¦ doc: tbrowder++ created pull request #3247: chg p6 to raku; chg .perl to .raku

[00:26] <Geth> Â¦ doc: review: https://github.com/Raku/doc/pull/3247

[00:27] *** lucasb left
[00:27] *** holli joined
[00:28] *** Doc_Holliwood left
[00:29] *** mowcat left
[00:30] *** Doc_Holliwould left
[00:30] *** Doc_Holliwood joined
[00:32] *** Doc_Holliwould joined
[00:33] *** holli left
[00:35] *** holli joined
[00:36] *** Doc_Holliwood left
[00:39] *** Doc_Holliwood joined
[00:39] *** Doc_Holliwould left
[00:40] *** Doc_Holliwould joined
[00:41] *** holli left
[00:42] *** kst` left
[00:42] *** kst left
[00:43] *** holli joined
[00:44] *** Doc_Holliwood left
[00:47] *** Doc_Holliwould left
[00:47] *** Doc_Holliwood joined
[00:49] *** Doc_Holliwould joined
[00:50] *** holli left
[00:51] *** holli joined
[00:52] *** Doc_Holliwood left
[00:54] *** Doc_Holliwood joined
[00:55] *** Doc_Holliwould left
[00:57] *** holli left
[00:57] *** Doc_Holliwould joined
[01:00] *** holli joined
[01:01] *** Doc_Holliwood left
[01:03] *** Doc_Holliwood joined
[01:04] *** Doc_Holliwould left
[01:05] *** Doc_Holliwould joined
[01:06] *** holli left
[01:08] *** holli joined
[01:09] *** Doc_Holliwood left
[01:12] *** Doc_Holliwould left
[01:12] *** Doc_Holliwood joined
[01:14] *** aborazmeh joined
[01:14] *** aborazmeh left
[01:14] *** aborazmeh joined
[01:14] *** Doc_Holliwould joined
[01:15] *** holli left
[01:16] *** holli joined
[01:17] *** Doc_Holliwood left
[01:17] *** cfa left
[01:20] *** Doc_Holliwould left
[01:20] *** Doc_Holliwood joined
[01:22] *** Doc_Holliwould joined
[01:23] *** holli left
[01:25] *** holli joined
[01:25] *** Doc_Holliwood left
[01:28] *** Doc_Holliwood joined
[01:28] *** Doc_Holliwould left
[01:30] *** Doc_Holliwould joined
[01:31] *** holli left
[01:33] *** holli joined
[01:34] *** Altai-man_ joined
[01:34] *** Doc_Holliwood left
[01:36] *** sena_kun left
[01:37] *** Doc_Holliwood joined
[01:37] *** Doc_Holliwould left
[01:38] *** Doc_Holliwould joined
[01:39] *** holli left
[01:41] *** holli joined
[01:42] *** Doc_Holliwood left
[01:44] *** Doc_Holliwood joined
[01:45] *** Doc_Holliwould left
[01:46] *** Doc_Holliwould joined
[01:47] *** holli left
[01:49] *** holli joined
[01:50] *** Doc_Holliwood left
[01:53] *** Doc_Holliwood joined
[01:53] *** Doc_Holliwould left
[01:55] *** holli left
[01:56] *** Doc_Holliwould joined
[01:59] *** holli joined
[02:00] *** Doc_Holliwood left
[02:02] *** Doc_Holliwould left
[02:03] *** Doc_Holliwood joined
[02:04] *** Doc_Holliwould joined
[02:05] *** holli left
[02:07] *** holli joined
[02:08] *** Doc_Holliwood left
[02:08] <Geth> Â¦ doc: tbrowder++ created pull request #3248: chg .perl to .raku

[02:08] <Geth> Â¦ doc: review: https://github.com/Raku/doc/pull/3248

[02:10] *** Doc_Holliwould left
[02:11] *** Doc_Holliwood joined
[02:13] *** Doc_Holliwould joined
[02:14] *** holli left
[02:15] *** holli joined
[02:16] *** Doc_Holliwood left
[02:18] *** Doc_Holliwood joined
[02:19] *** Doc_Holliwould left
[02:21] *** Doc_Holliwould joined
[02:21] *** molaf left
[02:21] *** holli left
[02:24] *** holli joined
[02:24] *** Doc_Holliwood left
[02:27] *** Doc_Holliwood joined
[02:27] *** Doc_Holliwould left
[02:29] *** Doc_Holliwould joined
[02:30] *** holli left
[02:30] *** Maylay left
[02:32] *** holli joined
[02:33] *** Doc_Holliwood left
[02:33] *** molaf joined
[02:35] *** Doc_Holliwould left
[02:35] *** Doc_Holliwood joined
[02:37] *** Doc_Holliwould joined
[02:38] *** holli left
[02:40] *** holli joined
[02:41] *** Doc_Holliwood left
[02:43] *** Doc_Holliwood joined
[02:43] *** Doc_Holliwould left
[02:44] *** Actualeyes left
[02:44] *** Actualeyes joined
[02:45] *** Doc_Holliwould joined
[02:46] *** holli left
[02:48] *** holli joined
[02:49] *** Doc_Holliwood left
[02:51] *** Doc_Holliwould left
[02:52] *** Doc_Holliwood joined
[02:55] *** Maylay joined
[02:56] *** Doc_Holliwould joined
[02:56] *** holli left
[02:58] *** holli joined
[02:59] *** Doc_Holliwood left
[03:01] *** Doc_Holliwood joined
[03:02] *** Doc_Holliwould left
[03:04] *** Doc_Holliwould joined
[03:04] *** holli left
[03:06] *** holli joined
[03:07] *** Doc_Holliwood left
[03:10] *** Doc_Holliwould left
[03:10] *** Doc_Holliwood joined
[03:12] *** Doc_Holliwould joined
[03:13] *** holli left
[03:15] *** holli joined
[03:15] *** Doc_Holliwood left
[03:18] *** Doc_Holliwould left
[03:18] *** Doc_Holliwood joined
[03:20] *** Doc_Holliwould joined
[03:21] *** holli left
[03:23] *** holli joined
[03:24] *** Doc_Holliwood left
[03:26] *** Doc_Holliwood joined
[03:26] *** Doc_Holliwould left
[03:27] *** leont left
[03:28] *** Doc_Holliwould joined
[03:29] *** holli left
[03:31] *** holli joined
[03:32] *** Doc_Holliwood left
[03:34] *** Doc_Holliwould left
[03:35] *** Doc_Holliwood joined
[03:35] *** sena_kun joined
[03:36] *** Altai-man_ left
[03:36] *** Doc_Holliwould joined
[03:37] *** holli left
[03:39] *** holli joined
[03:40] *** Doc_Holliwood left
[03:43] *** Doc_Holliwould left
[03:43] *** Doc_Holliwood joined
[03:45] *** Doc_Holliwould joined
[03:46] *** holli left
[03:47] *** holli joined
[03:48] *** Doc_Holliwood left
[03:50] *** Doc_Holliwood joined
[03:51] *** dansolo42_ joined
[03:51] *** Doc_Holliwould left
[03:51] *** skyl4rk_ joined
[03:52] *** skyl4rk left
[03:52] *** skyl4rk_ is now known as skyl4rk

[03:52] *** dansolo42 left
[03:52] *** marcusr left
[03:52] *** dansolo42_ is now known as dansolo42

[03:52] *** aindilis` joined
[03:52] *** aindilis left
[03:52] *** smash left
[03:53] *** NODE left
[03:54] *** smash joined
[03:54] *** holli left
[03:55] *** NODE joined
[03:55] *** aindilis` left
[03:56] *** Doc_Holliwood left
[03:56] *** marcusr joined
[03:59] *** aindilis joined
[04:03] *** hungrydonkey joined
[04:10] *** molaf left
[04:56] *** bioexpress joined
[04:56] *** bioexpress left
[05:08] *** aborazmeh left
[05:34] *** Altai-man_ joined
[05:35] *** cpan-raku left
[05:35] *** cpan-raku joined
[05:35] *** cpan-raku left
[05:35] *** cpan-raku joined
[05:36] *** Actualeyes left
[05:36] *** Actualeyes joined
[05:36] *** sena_kun left
[05:39] *** maggotbrain left
[05:40] *** maggotbrain joined
[05:47] *** NODE left
[05:49] *** NODE joined
[06:01] *** sena_kun joined
[06:02] *** Altai-man_ left
[06:06] <Geth> Â¦ doc: 4f6c996bbd | (Tom Browder)++ | doc/Language/variables.pod6

[06:06] <Geth> Â¦ doc: chg p6 to raku; chg '.perl' to '.raku'

[06:06] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/4f6c996bbd

[06:06] <Geth> Â¦ doc: 843ad42aad | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[06:06] <Geth> Â¦ doc: Merge pull request #3244 from tbrowder/p6toraku-variables

[06:06] <Geth> Â¦ doc: 

[06:06] <Geth> Â¦ doc: chg p6 to raku; chg '.perl' to '.raku'

[06:06] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/843ad42aad

[06:06] <linkable6> Link: https://docs.raku.org/language/variables

[06:06] *** dansolo42 left
[06:09] *** jmerelo joined
[06:12] *** dansolo42 joined
[06:24] *** Altai-man_ joined
[06:26] *** sena_kun left
[06:47] *** aluaces joined
[06:51] <Geth> Â¦ doc: ab50f612f3 | (Tom Browder)++ | doc/Language/5to6-nutshell.pod6

[06:51] <Geth> Â¦ doc: chg .perl to .raku

[06:51] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/ab50f612f3

[06:51] <Geth> Â¦ doc: b0b6473ad6 | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/5to6-nutshell.pod6

[06:51] <Geth> Â¦ doc: Merge pull request #3248 from tbrowder/p6torakup-6to6

[06:51] <Geth> Â¦ doc: 

[06:51] <Geth> Â¦ doc: chg .perl to .raku

[06:51] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/b0b6473ad6

[06:51] <linkable6> Link: https://docs.raku.org/language/5to6-nutshell

[06:52] <Geth> Â¦ doc: 365ea26721 | (Tom Browder)++ | doc/Language/5to6-perlfunc.pod6

[06:52] <Geth> Â¦ doc: chg pe6 to raku

[06:52] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/365ea26721

[06:52] <Geth> Â¦ doc: 5d862db15e | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/5to6-perlfunc.pod6

[06:52] <Geth> Â¦ doc: Merge pull request #3233 from tbrowder/p6toraku-5to6-perlfunc

[06:52] <Geth> Â¦ doc: 

[06:52] <Geth> Â¦ doc: chg pe6 to raku

[06:52] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/5d862db15e

[06:52] <linkable6> Link: https://docs.raku.org/language/5to6-perlfunc

[06:56] <Geth> Â¦ doc: 0ff7418261 | (Tom Browder)++ | doc/Language/nativecall.pod6

[06:56] <Geth> Â¦ doc: chg p6 to raku

[06:56] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/0ff7418261

[06:56] <Geth> Â¦ doc: 783e0bd088 | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/nativecall.pod6

[06:56] <Geth> Â¦ doc: Merge pull request #3242 from tbrowder/p6toraku-nativecall

[06:56] <Geth> Â¦ doc: 

[06:56] <Geth> Â¦ doc: chg p6 to raku

[06:56] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/783e0bd088

[06:56] <linkable6> Link: https://docs.raku.org/language/nativecall

[06:57] <Geth> Â¦ doc: bfdfc9cd40 | (Tom Browder)++ | doc/Language/operators.pod6

[06:57] <Geth> Â¦ doc: chg p6 to raku; chg '.perl' to '.raku'

[06:57] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/bfdfc9cd40

[06:57] <Geth> Â¦ doc: df44519417 | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[06:57] <Geth> Â¦ doc: Merge pull request #3243 from tbrowder/p6toraku-operators

[06:57] <Geth> Â¦ doc: 

[06:57] <Geth> Â¦ doc: chg p6 to raku; chg '.perl' to '.raku'

[06:57] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/df44519417

[06:57] <linkable6> Link: https://docs.raku.org/language/operators

[06:57] *** stoned75 left
[06:58] <Geth> Â¦ doc: ad0b939b51 | (Tom Browder)++ | doc/Language/unicode_entry.pod6

[06:58] <Geth> Â¦ doc: chg p6 to raku; chg .perl to .raku

[06:58] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/ad0b939b51

[06:58] <Geth> Â¦ doc: e836824082 | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/unicode_entry.pod6

[06:58] <Geth> Â¦ doc: Merge pull request #3245 from tbrowder/p6toraku-unicode_entry

[06:58] <Geth> Â¦ doc: 

[06:58] <Geth> Â¦ doc: chg p6 to raku; chg .perl to .raku

[06:58] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/e836824082

[06:58] <linkable6> Link: https://docs.raku.org/language/unicode_entry

[06:59] <Geth> Â¦ doc: a631cac09f | (Tom Browder)++ | doc/Language/traps.pod6

[06:59] <Geth> Â¦ doc: chg p6 to raku; chg .perl to .raku

[06:59] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/a631cac09f

[06:59] <Geth> Â¦ doc: 9127fa490c | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[06:59] <Geth> Â¦ doc: Merge pull request #3246 from tbrowder/p6toraku-traps

[06:59] <Geth> Â¦ doc: 

[06:59] <Geth> Â¦ doc: chg p6 to raku; chg .perl to .raku

[06:59] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/9127fa490c

[06:59] <linkable6> Link: https://docs.raku.org/language/traps

[07:00] <Geth> Â¦ doc: 2791126cbf | (Tom Browder)++ | doc/Language/terms.pod6

[07:00] <Geth> Â¦ doc: chg p6 to raku; chg .perl to .raku

[07:00] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/2791126cbf

[07:00] <Geth> Â¦ doc: af3d55d7b4 | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/terms.pod6

[07:00] <Geth> Â¦ doc: Merge pull request #3247 from tbrowder/p6toraku-terms

[07:00] <Geth> Â¦ doc: 

[07:00] <Geth> Â¦ doc: chg p6 to raku; chg .perl to .raku

[07:00] <Geth> Â¦ doc: Great job! Thanks.

[07:00] <linkable6> Link: https://docs.raku.org/language/terms

[07:00] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/af3d55d7b4

[07:02] <jmerelo> .tell Altai-man would you be interested in including a GitHub action in MoarVM repo that test-compiled in Alpine and maybe other environments?

[07:02] <tellable6> jmerelo, I'll pass your message to Altai-man_

[07:02] *** Itaipu left
[07:04] *** nwc10 left
[07:10] *** cognominal joined
[07:14] *** cognomin_ left
[07:24] *** Itaipu joined
[07:27] *** hungrydonkey left
[07:28] *** xinming_ joined
[07:30] *** hungrydonkey joined
[07:31] *** xinming left
[07:33] *** rindolf joined
[07:35] *** sena_kun joined
[07:36] *** Altai-man_ left
[07:44] *** Itaipu_ joined
[07:46] *** Itaipu left
[07:49] *** Itaipu_ left
[07:51] *** Itaipu joined
[07:58] *** Itaipu left
[07:58] *** titsuki joined
[08:03] <jmerelo> m: package Foo:ver<0>:auth<bar> {}; say Foo.^ver, Foo.^auth, Foo.^name

[08:03] <evalable6> jmerelo, rakudo-moar 3ec58489e: OUTPUT: Â«(exit code 1) No such method 'ver' for invocant of type 'Perl6::Metamodel::PackageHOW'â¤  in block <unit> at /tmp/BSoqIqKfyw line 1â¤â¤Â»

[08:04] *** Black_Ribbon left
[08:09] <jmerelo> m: package Foo:ver<0>:auth<bar> {}; say Foo.^name;

[08:09] <evalable6> jmerelo, rakudo-moar 3ec58489e: OUTPUT: Â«Fooâ¤Â»

[08:09] <jmerelo> m: package Foo:ver<0>:auth<bar> {}; say Foo.^auth;

[08:09] <evalable6> jmerelo, rakudo-moar 3ec58489e: OUTPUT: Â«(exit code 1) No such method 'auth' for invocant of type 'Perl6::Metamodel::PackageHOW'. Did you mean any of these?â¤    pushâ¤    putâ¤â¤  in block <unit> at /tmp/ajB50RyaK1 line 1â¤â¤Â»

[08:15] *** Actualeyes left
[08:15] *** hungryd41 joined
[08:15] *** Actualeyes joined
[08:19] *** hungrydonkey left
[08:19] *** hungryd41 left
[08:27] *** hungrydonkey joined
[08:27] *** Geth left
[08:28] *** Geth joined
[08:28] *** Itaipu joined
[08:34] *** dakkar joined
[08:42] *** Itaipu left
[08:44] *** hungrydonkey left
[08:45] *** hungrydonkey joined
[08:46] *** cpan-raku left
[08:46] *** cpan-raku joined
[08:46] *** cpan-raku left
[08:46] *** cpan-raku joined
[08:49] *** Itaipu joined
[09:13] <SmokeMachine> Voldenet: I was thinkingâ¦ that itâs possible some one would like, for example, count logged users using something like this: `event login-count { has $count = #login.count; match { login(#login)* } }`. The problem with that is that every new login will create a new login-count eventâ¦ so I was thinking that we should have a syntax to say something like: acumulate everything,  but just emit new event for each 10 

[09:13] <SmokeMachine> new loginsâ¦ or just emit 1/min for example...

[09:13] <SmokeMachine> what do you guys think?

[09:16] *** Itaipu left
[09:17] *** Itaipu joined
[09:18] *** roguelazer left
[09:20] *** roguelazer joined
[09:23] <jmerelo> SmokeMachine: at the language level?

[09:24] <SmokeMachine> jmerelo: yes...

[09:25] <jmerelo> SmokeMachine: I use rotors for that. But it involves converting Channels to Supplies and back...

[09:25] <jmerelo> SmokeMachine: it works most of the time, anyway. I'm using it for my evolutionary algorithms.

[09:25] <jmerelo> SmokeMachine: it would work with Supplies, creating a new supply out of an old one... No need for channels.

[09:26] *** aborazmeh joined
[09:26] *** aborazmeh left
[09:26] *** aborazmeh joined
[09:27] <SmokeMachine> jmerelo: that wouldnât work for meâ¦ it should work at âruleâ levelâ¦ but I think the biggest problem for now (before implementing) is finding a good syntax for that...

[09:28] <SmokeMachine> Iâm thinking in something like: `login()*/10` and `login()*/1min`...

[09:28] <SmokeMachine> jmerelo: what do you think?

[09:28] <jmerelo> SmokeMachine: cool!

[09:34] *** Altai-man_ joined
[09:36] *** sena_kun left
[09:41] <cpan-raku> New module released to CPAN! Algorithm::GooglePolylineEncoding (1.0.3) by 03SCIMON

[09:44] *** hungryd4 joined
[09:48] *** hungrydonkey left
[09:49] *** jmerelo left
[09:50] <SmokeMachine> And, ofcourse: `bla() ** 10/2`

[09:52] <SmokeMachine> but that makes me think, what should this do? `bla() ** 10/3`? and this `bla() ** 10/2 bla() ** 9/3`?

[09:52] <SmokeMachine> Should the `/N` work only for the whole match?

[09:53] * lizmat clickbaits https://rakudoweekly.blog/2020/02/24/2020-08-altered-noise/

[09:54] <SmokeMachine> that makes me think that maybe it would be better something like: `event login-count { has $count = #login.count; match(*/10) { login(#login)* } }`

[09:55] *** pecastro joined
[09:56] *** wamba joined
[09:57] <cpan-raku> New module released to CPAN! Trait::Env (1.0.2) by 03SCIMON

[10:12] *** Sgeo_ joined
[10:14] *** leah2 left
[10:15] *** leah2 joined
[10:15] *** Sgeo left
[10:19] *** xlat joined
[10:31] *** reach_satori left
[10:40] *** Actualeyes left
[10:42] *** hungrydonkey joined
[10:42] *** reach_satori joined
[10:47] *** hungryd4 left
[10:51] *** Celelibi left
[11:01] *** Celelibi joined
[11:06] *** Actualeyes joined
[11:08] *** mowcat joined
[11:30] <cpan-raku> New module released to CPAN! Test::HTTP::Server (0.5.1) by 03SCIMON

[11:34] *** sena_kun joined
[11:36] *** Altai-man_ left
[11:44] *** wamba left
[11:44] *** Actualeyes left
[11:44] *** Actualeyes joined
[12:02] <rindolf> DrForr: hi, mazal tov!

[12:02] <tellable6> 2020-01-27T22:15:13Z #raku <thundergnat> rindolf Re: slow project euler 686; try http://rosettacode.org/wiki/First_power_of_2_that_has_leading_decimal_digits_of_12#Perl_6

[12:05] *** Actualeyes left
[12:08] *** Actualeyes joined
[12:12] *** wamba joined
[12:14] *** NODE left
[12:17] *** NODE joined
[12:26] *** wamba left
[12:30] *** aborazmeh left
[12:44] <rindolf> hmmm... it seems faster

[12:49] <SmokeMachine> Maybe something like: `event login-count { has $count = #login.count; match(#login.host/10min) { login(#login, host = #login.host)* } }` to emit 1 event per 10 minutes for each host

[12:57] *** leont joined
[12:59] *** NODE left
[13:02] *** NODE joined
[13:18] *** titsuki left
[13:32] *** jmerelo joined
[13:34] *** Altai-man_ joined
[13:36] *** sena_kun left
[13:40] *** _jrjsmrtn left
[13:40] *** __jrjsmrtn__ joined
[13:47] *** jmerelo left
[13:51] *** molaf joined
[13:54] *** molaf left
[13:54] *** reach_satori left
[14:21] *** titsuki joined
[14:25] *** aborazmeh joined
[14:25] *** aborazmeh left
[14:25] *** aborazmeh joined
[14:28] *** masak joined
[14:41] <abraxxa> can I change the output of Grammar::Tracer to output the whole match and not only its beginning?

[14:44] <dakkar> abraxxa: looking at https://github.com/jnthn/grammar-debugger/blob/master/lib/Grammar/Tracer.pm6 you could redefine the `summary` method

[14:53] *** titsuki left
[15:04] *** aborazmeh left
[15:05] *** cfa joined
[15:12] *** zeylos left
[15:17] *** NODE left
[15:19] *** AlexDaniel left
[15:19] *** NODE joined
[15:19] *** AlexDaniel joined
[15:19] *** AlexDaniel left
[15:19] *** AlexDaniel joined
[15:26] <abraxxa> does rule and token in a Grammer behave any different but whitespace matching?

[15:27] <masak> no, that's the difference

[15:27] <tellable6> 2019-12-25T16:51:28Z #raku <sena_kun> masak not only https://github.com/masak/data-pretty but https://github.com/masak/gge wants some de-bitrotting too...

[15:27] <abraxxa> i switched proto rule to a proto token and now it behaves completely different

[15:27] <masak> sena_kun: oh wow. I'm not surprised.

[15:27] <tellable6> masak, I'll pass your message to sena_kun

[15:28] <masak> tellable6: oh, you do that automatically now? neat.

[15:28] <tellable6> masak, I haven't seen oh around, did you mean o_?

[15:28] <masak> haha. still stupid, though

[15:28] <masak> abraxxa: well, duh :P

[15:29] <masak> abraxxa: hot tip: test your grammars. extensively.

[15:29] <abraxxa> I do and it fails

[15:29] <masak> positive and negative tests. this is very important.

[15:29] <masak> if TDD was ever made for anything, it's grammars. and vice versa.

[15:30] <abraxxa> Grammar::Tracer doesn't show me what's going wrong

[15:30] <masak> abraxxa: maybe what you need is an intuitive understanding of where `rule` implicitly inserts <.ws>

[15:30] <abraxxa> I moved one sym down and it's still matched first

[15:32] *** Actualeyes left
[15:33] *** Actualeyes joined
[15:33] <masak> :)

[15:33] <abraxxa> I don't find that funny!

[15:35] *** sena_kun joined
[15:36] *** lgtaube left
[15:37] *** Altai-man_ left
[15:42] <jnthn> .oO( If only there was a tool that showed you where the whitespace was going to be inserted in rules... )

[15:44] <abraxxa> i had fixed strings under '' when using rule which I now had to remove when switching to token

[15:53] <masak> sorry for smiling -- I did find <sym> matching in a non-first position funny, though I'd be hard-pressed to explain why

[15:54] <cfa> morning all

[16:01] <abraxxa> token comment-line { ^^\h*'#'+\h*<(\N*)>\n }

[16:01] <abraxxa> this token doesn't match a line starting with regular whitespace followed by #

[16:05] *** pecastro left
[16:06] <jnthn> m: my token comment-line { ^^\h*'#'+\h*<(\N*)>\n }; say " # foo\n# bar\n   #baz\n" ~~ m:g/<comment-line>/

[16:06] <evalable6> jnthn, rakudo-moar 83ddbabaf: OUTPUT: Â«(ï½¢ # fooâ¤ï½£â¤ comment-line => ï½¢fooï½£ ï½¢# barâ¤ï½£â¤ comment-line => ï½¢barï½£ ï½¢   #bazâ¤ï½£â¤ comment-line => ï½¢bazï½£)â¤Â»

[16:06] <jnthn> Looks right to me; I'm guessing the problem is elsewhere

[16:09] <abraxxa> I've changed it to a rule and removed all \h* and now it matches again

[16:10] <abraxxa> if the previous token or rule matched the linefeed and the four whitespace chars, will that make the ^^ not match?

[16:11] <abraxxa> problem is that the Grammar::Tracer output only contains the start of the matching previous line

[16:11] *** jmerelo joined
[16:13] <jnthn> Yes, the ^^ wants to be after the line feed, if the rule ate whitespace at the end of it that'll mean you're no longer at the start of a line...

[16:18] *** Ven_de_Thiel joined
[16:18] <Ven_de_Thiel> greppable6: X::ParseFail

[16:18] <greppable6> Ven_de_Thiel, Found nothing!

[16:18] <Ven_de_Thiel> also, o/ #raku

[16:18] <Ven_de_Thiel> greppable6: ParseFail

[16:18] <greppable6> Ven_de_Thiel, 26 lines, 3 modules: https://gist.github.com/b46e2c2a137fb6ffbbcee7c58c6691ee

[16:19] <Geth> Â¦ doc: 02d37fa461 | (Tom Browder)++ | doc/Language/modules.pod6

[16:19] <Geth> Â¦ doc: chg p6 to raku

[16:19] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/02d37fa461

[16:19] <Geth> Â¦ doc: 2b0cd7b908 | (Tom Browder)++ | doc/Language/modules.pod6

[16:19] <Geth> Â¦ doc: change to canonical URL; add definition of PR

[16:19] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/2b0cd7b908

[16:19] <Geth> Â¦ doc: d6324dbfaa | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[16:19] <Geth> Â¦ doc: Merge pull request #3241 from tbrowder/p6toraku-modules

[16:19] <linkable6> Link: https://docs.raku.org/language/modules

[16:19] <Geth> Â¦ doc: 

[16:19] <Geth> Â¦ doc: chg p6 to raku

[16:19] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/d6324dbfaa

[16:19] <Geth> Â¦ doc/master: 5 commits pushed by (Tom Browder)++, (Juan JuliÃ¡n Merelo GuervÃ³s)++

[16:19] <Geth> Â¦ doc/master: c65d18a4be | chg p6 to raku; add onfo on kebab case

[16:19] <Geth> Â¦ doc/master: 739f236e45 | use correct syntax the desired link

[16:19] <Geth> Â¦ doc/master: 270b70790a | use correct canonical URLs

[16:19] <Geth> Â¦ doc/master: 0dc1b50adf | Merge branch 'p6toraku-faq' of github.com:tbrowder/doc into p6toraku-faq

[16:19] <Geth> Â¦ doc/master: 19f272b242 | Merge pull request #3238 from tbrowder/p6toraku-faq

[16:19] <Geth> Â¦ doc/master: review: https://github.com/Raku/doc/compare/d6324dbfaa81...19f272b2423e

[16:20] <Geth> Â¦ doc: 6840bea8ff | (Tom Browder)++ | doc/Language/glossary.pod6

[16:20] <Geth> Â¦ doc: chg p6 to raku

[16:20] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/6840bea8ff

[16:20] <Geth> Â¦ doc: bf50be3df7 | (Tom Browder)++ | doc/Language/glossary.pod6

[16:20] <Geth> Â¦ doc: use canonical URL

[16:20] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/bf50be3df7

[16:20] <Geth> Â¦ doc: 17441eaa29 | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/glossary.pod6

[16:20] <Geth> Â¦ doc: Merge pull request #3239 from tbrowder/p6toraku-glossary

[16:20] <linkable6> Link: https://docs.raku.org/language/glossary

[16:20] <Geth> Â¦ doc: 

[16:20] <Geth> Â¦ doc: chg p6 to raku

[16:20] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/17441eaa29

[16:22] <Geth> Â¦ doc: 4773a6b853 | (Tom Browder)++ | doc/Language/haskell-to-p6.pod6

[16:22] <Geth> Â¦ doc: chg p6 to raku

[16:22] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/4773a6b853

[16:22] <Geth> Â¦ doc: da314d4ba2 | (Tom Browder)++ | doc/Language/haskell-to-p6.pod6

[16:22] <Geth> Â¦ doc: tidy grammar per comment

[16:22] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/da314d4ba2

[16:22] <Geth> Â¦ doc: a160ba1c8e | (Juan JuliÃ¡n Merelo GuervÃ³s)++ (committed using GitHub Web editor) | doc/Language/haskell-to-p6.pod6

[16:22] <Geth> Â¦ doc: Merge pull request #3240 from tbrowder/p6toraku-haskell-to-p6

[16:22] <linkable6> Link: https://docs.raku.org/language/haskell-to-p6

[16:22] <Geth> Â¦ doc: 

[16:22] <Geth> Â¦ doc: chg p6 to raku

[16:22] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/a160ba1c8e

[16:28] *** Actualeyes left
[16:28] *** Actualeyes joined
[16:31] <jmerelo> Just a reminder we're still admitting project proposals for Outreachy https://github.com/perl-foundation-outreach/outreachy-2020-ideas

[16:41] *** reach_satori joined
[16:42] *** camelCaser left
[16:42] <sena_kun> jmerelo, can't some gsoc ideas just be ported there?

[16:42] <tellable6> 2020-02-25T15:27:58Z #raku <masak> sena_kun: oh wow. I'm not surprised.

[16:43] *** camelCaser joined
[16:43] <jmerelo> sena_kun: mostly, but you need to take into account that onboarding tasks have to be added, and it requires more involvement from early on, so we encourage 3 or more mentors per project.

[16:51] <cpan-raku> New module released to CPAN! Trait::Env (1.0.3) by 03SCIMON

[16:56] <sena_kun> El_Che, ping?

[16:57] *** xlat left
[17:00] <El_Che> pong (although a slow pong, on the train)

[17:01] <sena_kun> El_Che, can you PM me later today when comfortable to discuss alpine issue (I Have some new info)

[17:01] <jmerelo> sena_kun: I'm around to help if needed...

[17:03] <El_Che> sena_kun: is it sensitive? we can always open an temporarely channel

[17:04] *** abraxxa left
[17:04] <sena_kun> El_Che, not really, I guess, it's just less noisy, maybe

[17:05] *** rindolf left
[17:08] <El_Che> sena_kun, jmerelo: joint #rakuadhoc

[17:08] <El_Che> -t

[17:09] <Grinnz> you should use ## for ad hoc channels

[17:10] <Grinnz> or maybe #raku-foo? i don't know if that ownership is automatic

[17:14] *** Doc_Holliwood joined
[17:22] *** Ven_de_Thiel left
[17:27] <rypervenche> I've got two arrays of equal size. I want to Z~ them together, but also add a '=' in between each created element. How might I accomplish this?

[17:29] <leont> By doing two Z~ ?

[17:29] <jnthn> m: my @a = 1,2,3; my @b = 4,5,6; say @a Z[&({"$^a=$^b"})] @b

[17:29] <evalable6> jnthn, rakudo-moar 196db682b: OUTPUT: Â«(1=4 2=5 3=6)â¤Â»

[17:30] <rypervenche> Oooh

[17:31] <leont> @a Z~ "="xx@a Z~ @b

[17:31] <leont> m: my @a = 1, 2, 3; my @b = 4, 5,6; say @a Z~ "="xx@a Z~ @b

[17:31] <evalable6> leont, rakudo-moar 196db682b: OUTPUT: Â«(1=4 2=5 3=6)â¤Â»

[17:32] <cfa> m: my @a = 1, 2, 3; my @b = 4, 5, 6; say @a Â»~Â» '=' Z~ @b

[17:32] <evalable6> cfa, rakudo-moar 196db682b: OUTPUT: Â«(1=4 2=5 3=6)â¤Â»

[17:33] <jnthn> That's also cute...

[17:33] <rypervenche> Oooooh

[17:33] <jnthn> Also this one:

[17:33] <jnthn> m: my @a = 1, 2, 3; my @b = 4, 5, 6; say @a Z~ "=", * Z~ @b

[17:33] <evalable6> jnthn, rakudo-moar 196db682b: OUTPUT: Â«(1=4 2=5 3=6)â¤Â»

[17:33] <cfa> nifty

[17:33] <jnthn> The , * instead of xx @a

[17:33] <leont> Huh, I didn't know that one!

[17:34] *** Altai-man_ joined
[17:34] <leont> Whatever really is that whatever :-D

[17:35] <cfa> oh btw leont, i tried Getopt::Long as a drop-in replacement recently

[17:35] <cfa> very neat

[17:35] <cfa> one question: do you plan to auto-provide usage documentation?

[17:36] <rypervenche> Thanks for all of the answers. Very TIMTOWTDI indeed.

[17:36] *** sena_kun left
[17:37] *** m_athias joined
[17:41] <rypervenche> Another kind of related question. Is it possible to have two arrays, one of variable names (with or without $, not sure if needed), and one of values, and combine them together while declaring them all at the same time? Much like: my ($var1, $var2) = <one two>; but where the first array is actually a variable?

[17:43] *** dakkar left
[17:43] <Doc_Holliwood> m: .say for (1, 10, 11, 100, 101, 110... *)[0..10]

[17:43] <jnthn> No, because lexical declarations need to be known at compile time

[17:43] <evalable6> Doc_Holliwood, rakudo-moar 196db682b: OUTPUT: Â«(exit code 1) Unable to deduce arithmetic or geometric sequence from 100,101,110 (or did you really mean '..'?)â¤  in block <unit> at /tmp/aaJfExAX6t line 1â¤â¤Â»

[17:44] <rypervenche> In my mind it would look something like: my @var-names = @values;

[17:44] <leont> cfa: yeah I do, I just haven't gotten around to it

[17:45] <leont> One of the main factors is that I'm not entirely sure what I want the output to look like exactly

[17:47] <cfa> leont: neat

[17:47] <cfa> and yeah, understood

[17:47] <leont> The builtin one tends to become very confusing when one has many arguments (e.g. type "zef foo"), but I'm not quite sure what the alternative would look like

[17:49] * cfa nods

[17:49] <rypervenche> Oh! I missed jnthn's response. Hmm.

[17:50] <leont> Also, you may want to have a look at Getopt::Subcommands. It's a bit more experimental at this stage but the two-stage argument handling does seem like a good idea.

[17:50] *** wamba joined
[17:51] *** hungrydonkey left
[17:54] <rypervenche> jnthn: I was looking to take some bash variables from a file (like: VAR1="$HOME/Desktop") and convert them into Raku syntax via a grammar, and possibly in the actions create our-scoped variables. That won't be possible then? Is there something similar that I could do?

[17:55] <jnthn> Depends what problem you're trying to solve. In theory you can write a module with an EXPORT, pass it the file, and it will export variables :)

[17:56] <jnthn> I did something like that once for shell commands (in a talk, as an example)

[17:56] <rypervenche> I was planning on turning this into a module, yeah.

[17:58] *** pecastro joined
[18:04] <cfa> leont: cool, will check that out

[18:05] <cfa> fwiw, i have no real issues with the builtin one... but for the = signs

[18:13] <leont> Yeah the = signs are the main reason why I needed something else as well

[18:13] <leont> But having more specific error messages for a lot of issues is a strong second reason

[18:13] <cfa> sounds good

[18:13] <cfa> i gather there was a motivation for using = in the first place

[18:17] <leont> It's essentially a design constraint of using a blind parser

[18:18] <leont> The default parser converts the command line arguments into a capture without knowing anything about those arguments, so it can't know --foo should take an argument or not

[18:18] <cfa> ah, okay

[18:19] <cfa> presumably that's in the typeless MAIN(:$foo) case?

[18:19] <cfa> because once you provide a type it's no longer ambiguous?

[18:19] <leont> The default parser doesn't look at MAIN at all until it has already parsed the arguments

[18:19] <cfa> aha

[18:21] <leont> Then it tries to dispatch to MAIN, and if that doesn't work prints the usage message

[18:21] <leont> That's why the error message is so non-specific, it only knows that the capture doesn't fit the sub, it doesn't know why.

[18:21] <cfa> i see

[18:22] <cfa> anyway, usability wise it's not wonderful: i tend to do --foo <TAB>, then insert the = after completion

[18:23] <cfa> where i'm completing a filename

[18:23] <cfa> (i doubt i'm alone in this)

[18:23] <leont> It's also why you definitely shouldn't do Â«Str $file where *.IO.fÂ» like in one of documentation examples; the usage message really isn't really a replacement for "no such file $file"

[18:23] <Geth> Â¦ doc: 2e51f74560 | Coke++ | doc/Language/haskell-to-p6.pod6

[18:23] <Geth> Â¦ doc: avoid awkward phrasing.

[18:23] <Geth> Â¦ doc: 

[18:23] <Geth> Â¦ doc: passes spelling test again.

[18:23] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/2e51f74560

[18:23] <linkable6> Link: https://docs.raku.org/language/haskell-to-p6

[18:28] <leont> Essentially all types other than Any or Str give confusing error message in the default parser, because all mismatches trigger the usage message instead of something like Â«--filesize argument "abc" must be an integerÂ»

[18:44] *** abraxxa joined
[18:47] *** chloekek joined
[18:48] *** abraxxa left
[18:48] *** abraxxa joined
[18:49] *** abraxxa left
[18:49] <discord6> <Highlander> rypervenche: here's a link to the talk jnthn is referencing https://www.youtube.com/watch?v=id4pDstMu1s

[18:49] <discord6> <Highlander> Also the talk slides since the camera work is a bit dodgy in parts: http://jnthn.net/papers/2015-fosdem-static-dynamic.pdf

[18:50] *** abraxxa joined
[18:51] <discord6> <Highlander> the code samples in and around slide 56 should be a great starting point for your use case

[18:52] <rypervenche> Ahh, thanks Highlander. (not sure how highlighting works via Discord)

[18:52] *** abraxxa left
[18:53] *** abraxxa joined
[18:53] *** reach_satori left
[18:53] *** reach_satori joined
[18:54] *** Actualeyes left
[18:55] <discord6> <Highlander> Discord uses @'s but I'm not sure if you need the discriminator (a 4-digit number, since names needn't be unique) as well

[18:57] *** abraxxa left
[18:58] *** abraxxa joined
[19:02] *** wamba left
[19:03] *** wamba joined
[19:09] <jmerelo> .tell tbrowder got feedback from OSCON, not selected. I'm going to Houston anyway :-)

[19:09] <tellable6> jmerelo, I'll pass your message to tbrowder

[19:12] *** lucasb joined
[19:13] <abraxxa> is there a helper method to lookup up an item of an array which is a hash and the attributes all match a given hash (it might have additional keys)?

[19:14] <abraxxa> I'd use my $match = @array.first: ???;

[19:15] <abraxxa> does smartmatch what I need?

[19:15] <tbrowder> jmerelo: great, see you there!

[19:16] <moritz> what do you mean by "the attributes"?

[19:16] <moritz> abraxxa: also, an example or two might help

[19:17] <abraxxa> my %looking-for = ( name => 'foo', color => 'blue' ); my @existing-items = ({ name => 'foo', color => 'blue', otherattr => 'baz' }, { name => 'bar', color => 'red', otherattr => 'baz' });

[19:18] <abraxxa> my %service = @existing-services.first: $_ ~ %service-lookup;

[19:18] *** lgtaube joined
[19:18] <abraxxa> my %service = @existing-items.first: $_ ~ %looking-for;

[19:20] <moritz> abraxxa: according to the docs, there is sensible Hash ~~ Hash operation defined that suits you

[19:21] <abraxxa> my %service = @existing-items.first: * ~ %looking-for; seems to be the correct syntax, but why * and not $_ as in a grep?

[19:22] <moritz> say @e.first({ all( $_{%looking-for.keys} ~~ %looking-for.values)})

[19:22] <moritz> that's what I'd use to be explicit

[19:22] <abraxxa> that doesn't do what I expect

[19:22] <moritz> no?

[19:22] <abraxxa> my example

[19:23] <moritz> it returns the first hash in your example

[19:28] <abraxxa> it always returns the first hash

[19:30] <moritz> cannot confirm

[19:30] <moritz> if I change the order, it still returns the one with color => 'blue'

[19:30] <lizmat> abraxxa: have you considered using objects rather than hashes?  then you could create an ACCEPTS method, which would be used inside the block of a first

[19:31] <moritz> m: my %looking-for = ( name => 'foo', color => 'blue' ); my @e = ( { name => 'bar', color => 'red', otherattr => 'baz' }, { name => 'foo', color => 'blue', otherattr => 'baz' },); say @e.first({ all( $_{%looking-for.keys} ~~ %looking-for.values)})

[19:31] <evalable6> moritz, rakudo-moar 07643d373: OUTPUT: Â«{color => blue, name => foo, otherattr => baz}â¤Â»

[19:31] <abraxxa> lizmat: no, too complicated to this use-once migration code

[19:31] <abraxxa> Firehol linux iptables config frontend to Fortigate firewall rule migration

[19:31] <abraxxa> wrote a Grammar for Firehol

[19:32] <lizmat> or, if it is the same type of object, you wouldn't have to

[19:32] <abraxxa> moritz: I also need an exists check in there to silence the warnings

[19:33] <abraxxa> moritz: shouldn't the all function that an array?

[19:34] <moritz> abraxxa: this question no verb

[19:34] <abraxxa> s/that/take/

[19:35] <lizmat> m: class A { has $.a }; my @a = ^10 .map: { A.new(a => $_ ) }; my $needle = A.new(a => 8); dd @a.first: * eqv $needle   # abraxxa 

[19:35] <evalable6> lizmat, rakudo-moar 07643d373: OUTPUT: Â«A @a = A.new(a => 8)â¤Â»

[19:35] *** sena_kun joined
[19:35] <moritz> abraxxa: Hash.keys returns a list (or at least something iterable)

[19:36] <abraxxa> there is no Hash to Hash comparision operator that doesn deep nested comparision?

[19:36] *** aborazmeh joined
[19:36] *** aborazmeh left
[19:36] *** aborazmeh joined
[19:36] <abraxxa> moritz: yes, but that's in the one positional parameter to all which uses an operator to return True or False

[19:37] *** Altai-man_ left
[19:37] <abraxxa> moritz: or is the all like $_.all in this case?

[19:38] <moritz> all() returns a Junction

[19:38] <abraxxa> those myriads of types really suck!

[19:38] <discord6> <Highlander> (which will get boolified, and when it does it will be truthy only if "all" its components are truthy)

[19:38] <Voldenet> SmokeMachine: from what you've specified, I making rules on the whole collection of events would be more flexible - (#ev.count % 10 == 0), (#ev.last.date - #ev.first.date < 10m) - hiding that fact would be enormously leaky abstraction anyway

[19:38] <lizmat> abraxxa: again, why hashes ??

[19:39] <lizmat> feels to my you're applying Perl 5 idioms in Raku

[19:39] <abraxxa> lizmat: because the FortiManager API takes JSON

[19:39] <abraxxa> lizmat: of course I do, that's what I do since 20 years

[19:39] <moritz> but that doesn't mean you have to work with JSON-compatible data types *inside* your applicaiton

[19:39] <lizmat> well, using hashes is generally not the most performant way in Raku

[19:39] <abraxxa> it's not an application

[19:39] <lizmat> objects are *much* better optinizable

[19:40] <abraxxa> i don't care

[19:40] <abraxxa> write fast not run fast

[19:40] <moritz> abraxxa: s/application/code/ then

[19:40] <lizmat> *

[19:40] <abraxxa> raku is more in the way than it helps

[19:40] <abraxxa> I only choose it because of Grammars

[19:41] <lizmat> abraxxa: feels to me it is in the way because you're going against the flow  

[19:41] <discord6> <Highlander> I feel like there must be a way to do what you're trying to do without much hassle

[19:41] <abraxxa> Array.first doesn't even have an example using block syntax

[19:43] <discord6> <Highlander> Why again did moritz's solution not work as expected? Seems like it should do what you're asking for

[19:44] <abraxxa> moritz: this doesn't work: my %service = @existing-services.first({ all( $_{%service-lookup.keys}:exists && $_{%service-lookup.keys} eq %service-lookup.values )});

[19:44] <abraxxa> Use of uninitialized value %result{'dport'} of type Any in string context.

[19:44] <abraxxa> there is no %result anywhere in my code

[19:44] <moritz> m: my %looking-for = ( name => 'foo', color => 'blue' ); my @e = ( { name => 'bar', color => 'red', otherattr => 'baz' }, { name => 'foo', color => 'blue', otherattr => 'baz' },); say @e.first({ all($_{%looking-for.keys}:exists) && all( $_{%looking-for.keys} ~~ %looking-for.values)})

[19:45] <evalable6> moritz, rakudo-moar 07643d373: OUTPUT: Â«{color => blue, name => foo, otherattr => baz}â¤Â»

[19:47] *** jmerelo left
[19:49] *** Black_Ribbon joined
[19:51] <abraxxa> moritz: good, that's what i've done too after reading that :exists returns a List/Array/Whatever of boolean values

[19:51] <abraxxa> moritz: thanks!

[19:53] <moritz> you're welcome

[19:55] <discord6> <Highlander> see, anything's possible (and easy most of the time)

[19:56] *** wamba left
[19:57] *** rindolf joined
[20:03] <abraxxa> great, the attribute I have to check is an Array and there is no deep nested comparision operator

[20:04] <abraxxa> shouldn't eqv do this?

[20:10] *** molaf joined
[20:18] <abraxxa> m: my %looking-for = ( tcp-portrange => ['35450-35490:35450-35490'] ); my @e = ( { name => 'bar', udp-portrange => ['53'] }, { name => 'foo', tcp-portrange => ['35450-35490:35450-35490'] },); say @e.first({ all($_{%looking-for.keys}:exists) && all( $_{%looking-for.keys} eqv %looking-for.values)})

[20:18] <evalable6> abraxxa, rakudo-moar e56eddd84: OUTPUT: Â«Nilâ¤Â»

[20:19] <abraxxa> there you have it

[20:20] <abraxxa> m: my %looking-for = ( tcp-portrange => ['35450-35490:35450-35490'] ); my @e = ( { name => 'bar', udp-portrange => ['53'] }, { name => 'foo', tcp-portrange => ['35450-35490:35450-35490'] },);say Dump @e.first({ $_<tcp-portrange> eqv %looking-for<tcp-portrange>});

[20:20] <evalable6> abraxxa, rakudo-moar e56eddd84: OUTPUT: Â«(exit code 1) 04===SORRY!04=== Error while compiling /tmp/ZASRPWQxYyâ¤Undeclared name:â¤    Dump used at line 1â¤â¤Â»

[20:20] *** cpan-raku left
[20:20] <abraxxa> m: use Data::Dump; my %looking-for = ( tcp-portrange => ['35450-35490:35450-35490'] ); my @e = ( { name => 'bar', udp-portrange => ['53'] }, { name => 'foo', tcp-portrange => ['35450-35490:35450-35490'] },);say Dump @e.first({ $_<tcp-portrange> eqv %looking-for<tcp-portrange>});

[20:20] <evalable6> abraxxa, rakudo-moar e56eddd84: OUTPUT: Â«(exit code 1) 04===SORRY!04=== Erâ¦Â»

[20:20] <evalable6> abraxxa, Full output: https://gist.github.com/573b7b70f789a99836c6848bb666518a

[20:20] *** aborazmeh left
[20:20] <abraxxa> m: my %looking-for = ( tcp-portrange => ['35450-35490:35450-35490'] ); my @e = ( { name => 'bar', udp-portrange => ['53'] }, { name => 'foo', tcp-portrange => ['35450-35490:35450-35490'] },);say @e.first({ $_<tcp-portrange> eqv %looking-for<tcp-portrange>});

[20:20] <evalable6> abraxxa, rakudo-moar e56eddd84: OUTPUT: Â«{name => foo, tcp-portrange => [35450-35490:35450-35490]}â¤Â»

[20:20] *** cpan-raku joined
[20:20] *** cpan-raku left
[20:20] *** cpan-raku joined
[20:20] <abraxxa> why does the former not work?

[20:21] <abraxxa> m: my %looking-for = ( tcp-portrange => ['35450-35490:35450-35490'] ); my @e = ( { name => 'bar', udp-portrange => ['53'] }, { name => 'foo', tcp-portrange => ['35450-35490:35450-35490'] },);say @e.first({ all($_{%looking-for.keys}:exists) && $_<tcp-portrange> eqv %looking-for<tcp-portrange>});

[20:21] <evalable6> abraxxa, rakudo-moar e56eddd84: OUTPUT: Â«{name => foo, tcp-portrange => [35450-35490:35450-35490]}â¤Â»

[20:22] <abraxxa> m: my %looking-for = ( tcp-portrange => ['35450-35490:35450-35490'] ); my @e = ( { name => 'bar', udp-portrange => ['53'] }, { name => 'foo', tcp-portrange => ['35450-35490:35450-35490'] },);say @e.first({ all($_{%looking-for.keys}:exists) && all( $_{%looking-for.keys} eqv %looking-for.values)});

[20:22] <evalable6> abraxxa, rakudo-moar e56eddd84: OUTPUT: Â«Nilâ¤Â»

[20:25] *** guifa joined
[20:36] <tobs> abraxxa: Hash.values returns a Seq which doesn't eqv the List that is returned by a hash slice

[20:37] <tobs> m: my %looking-for = ( tcp-portrange => ['35450-35490:35450-35490'] ); my @e = ( { name => 'bar', udp-portrange => ['53'] }, { name => 'foo', tcp-portrange => ['35450-35490:35450-35490'] },);say @e.first({ all($_{%looking-for.keys}:exists) && all( $_{%looking-for.keys} eqv %looking-for.values.list)});

[20:37] <evalable6> tobs, rakudo-moar e56eddd84: OUTPUT: Â«{name => foo, tcp-portrange => [35450-35490:35450-35490]}â¤Â»

[20:37] *** Xliff joined
[20:38] <Xliff> m: multi a (&a --> Nil) { say &a.^signature.gist }; a -> 'so', 'say', 'we', 'all' { 1 };

[20:38] <evalable6> Xliff, rakudo-moar e56eddd84: OUTPUT: Â«(exit code 1) No such method 'signature' for invocant of type 'Perl6::Metamodel::ClassHOW'â¤  in sub a at /tmp/KXBg7ux6eB line 1â¤  in block <unit> at /tmp/KXBg7ux6eB line 1â¤â¤Â»

[20:38] <tellable6> 2020-02-24T18:58:56Z #raku-dev <MasterDuke> Xliff: does https://github.com/rakudo/rakudo/commit/c909258273b09c526463b68d22a162dfc7568c70 do anything for your compile times?

[20:39] <Xliff> m: multi a (&a --> Nil) { say &a.signature.gist }; a -> 'so', 'say', 'we', 'all' { 1 };

[20:39] <evalable6> Xliff, rakudo-moar e56eddd84: OUTPUT: Â«("so", "say", "we", "all")â¤Â»

[20:39] <Xliff> m: multi sub a (&a --> Nil) { say &a.signature.gist }; a -> 'so', 'say', 'we', 'all' { 1 };

[20:39] <evalable6> Xliff, rakudo-moar e56eddd84: OUTPUT: Â«("so", "say", "we", "all")â¤Â»

[20:39] *** stoned75 joined
[20:52] <Geth> Â¦ doc/star-RAKU: ed6507a548 | (Stoned Elipot)++ | 2 files

[20:52] <Geth> Â¦ doc/star-RAKU: Be more explicity and less elliptical

[20:52] <Geth> Â¦ doc/star-RAKU: review: https://github.com/Raku/doc/commit/ed6507a548

[20:52] <cpan-raku> New module released to CPAN! Gnome::Gtk3::Glade (0.8.9) by 03MARTIMM

[20:52] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.25.1) by 03MARTIMM

[20:56] *** rindolf left
[21:02] <abraxxa> tobs: that's what I meant with 'the myriads of types suck'

[21:05] <Geth> Â¦ doc/master: 4 commits pushed by (Stoned Elipot)++, stoned++

[21:05] <Geth> Â¦ doc/master: ad0d4c19ad | Use $*RAKU instead of $*PERL

[21:05] <Geth> Â¦ doc/master: 84bb995990 | Use $*RAKU and mention Rakudo version wrt it

[21:05] <Geth> Â¦ doc/master: ed6507a548 | Be more explicity and less elliptical

[21:05] <Geth> Â¦ doc/master: 6612a010a3 | Merge pull request #3230 from Raku/star-RAKU

[21:05] <Geth> Â¦ doc/master: review: https://github.com/Raku/doc/compare/2e51f7456052...6612a010a3b5

[21:07] *** mensvaga left
[21:12] <Doc_Holliwood> m: .say for Inf..42;

[21:12] <evalable6> Doc_Holliwood, rakudo-moar e56eddd84: OUTPUT: Â«Â»

[21:12] <Doc_Holliwood> m: .say for Inf, Inf - 1 ... 42;

[21:13] <evalable6> Doc_Holliwood, rakudo-moar e56eddd84: OUTPUT: Â«(signal SIGHUP) Infâ¤NaNâ¤NaNâ¤NaNâ¤NaNâ¤NaNâ¤NaNâ¤NaNâ¦Â»

[21:13] *** Xliff left
[21:14] <evalable6> Doc_Holliwood, Full output: https://gist.github.com/03c24f8def44938dd94d1d6c92de5a6a

[21:14] <Doc_Holliwood> shouldn't that, die or something?

[21:20] <Geth> Â¦ doc: uzluisf++ created pull request #3250: Partially document the 'is built' trait

[21:20] <Geth> Â¦ doc: review: https://github.com/Raku/doc/pull/3250

[21:20] <jnthn> Num stuff typically uses NaN rather than exceptions

[21:34] *** Altai-man_ joined
[21:36] <guifa> NaN is a bit of a standards thing too

[21:36] *** sena_kun left
[21:37] <guifa> Itâs for things that are undefined (numerically âÂ not :D defined) or unrepresentable

[21:55] <Doc_Holliwood> Ok, but Inf to the left of ..

[21:56] <Doc_Holliwood> It could warn at least, I mean, that makes no sense right? having that

[21:56] <lizmat> m: dd Inf.succ

[21:56] <evalable6> lizmat, rakudo-moar 3134ec776: OUTPUT: Â«Infâ¤Â»

[21:56] <lizmat> m: dd Inf.pred

[21:56] <evalable6> lizmat, rakudo-moar 3134ec776: OUTPUT: Â«Infâ¤Â»

[21:56] <lizmat> hmmm

[21:56] <Doc_Holliwood> no that's fine

[21:56] <Doc_Holliwood> inf + 1 equals inf

[21:56] <lizmat> m: dd Inf - 1

[21:56] <evalable6> lizmat, rakudo-moar 3134ec776: OUTPUT: Â«Infâ¤Â»

[21:57] <lizmat> so it should generate an infinite number of Inf's ?

[21:57] <guifa> To me Inf + 1 is intuitively Inf, but admittedly, math with infinity is a bit field specific, with some allowing degrees of inifnity (transfinite numbers and all) 

[21:57] <jnthn> Hm, I wonder where the NaN comes from then...

[21:57] <Doc_Holliwood> it should die "Cannot count FROM infinity" or something

[21:58] <lizmat> yeah, I was wondering that as well...

[21:58] <lizmat> Doc_Holliwood: please file an issue  :-)

[21:59] <Doc_Holliwood> hey guifa. my infinity is bigger than yours

[21:59] <Doc_Holliwood> :-)

[21:59] <guifa> You laugh but itâs literally a thing :-)

[22:00] <Doc_Holliwood> i know

[22:00] <guifa> Although the guy who invented it got laughed at hard enough to suicide :(

[22:01] <guifa> m: dd Inf + Inf

[22:01] <evalable6> guifa, rakudo-moar 3134ec776: OUTPUT: Â«Infâ¤Â»

[22:01] <guifa> m: dd Inf + 1

[22:01] <evalable6> guifa, rakudo-moar 3134ec776: OUTPUT: Â«Infâ¤Â»

[22:02] <guifa> m: dd Inf - Inf

[22:02] <evalable6> guifa, rakudo-moar 3134ec776: OUTPUT: Â«NaNâ¤Â»

[22:02] <guifa> Okay, phew, weâre following ANSI for all this stuff 

[22:02] <guifa> m: dd 1 / Inf

[22:02] <evalable6> guifa, rakudo-moar 3134ec776: OUTPUT: Â«0e0â¤Â»

[22:02] * guifa cheers

[22:04] <MasterDuke> moritz: fyi, camelia is down

[22:48] *** leont left
[22:53] *** wamba joined
[23:08] *** Doc_Holliwould joined
[23:10] *** Doc_Holliwood left
[23:13] *** chloekek left
[23:14] *** mowcat left
[23:15] *** leont joined
[23:19] *** holli joined
[23:22] *** lucasb left
[23:23] *** Doc_Holliwood joined
[23:23] *** Doc_Holliwould left
[23:25] *** Doc_Holliwould joined
[23:26] *** holli left
[23:27] *** holli joined
[23:28] *** Doc_Holliwood left
[23:31] *** Doc_Holliwood joined
[23:31] *** Doc_Holliwould left
[23:32] *** pecastro left
[23:33] *** Doc_Holliwould joined
[23:33] *** holli left
[23:35] *** sena_kun joined
[23:35] *** holli joined
[23:36] *** Doc_Holliwood left
[23:36] *** Altai-man_ left
[23:39] *** Doc_Holliwould left
[23:39] *** Doc_Holliwood joined
[23:41] *** Doc_Holliwould joined
[23:41] *** holli left
[23:43] *** holli joined
[23:44] *** AlexDaniel left
[23:44] *** Doc_Holliwood left
[23:47] *** Doc_Holliwould left
[23:47] *** Doc_Holliwood joined
[23:47] *** aborazmeh joined
[23:47] *** hungrydonkey joined
[23:47] *** aborazmeh left
[23:47] *** aborazmeh joined
[23:49] *** Doc_Holliwould joined
[23:50] *** holli left
[23:52] *** holli joined
[23:52] *** Doc_Holliwood left
[23:55] *** Doc_Holliwood joined
[23:55] *** Doc_Holliwould left
[23:57] *** Doc_Holliwould joined
[23:58] *** holli left
