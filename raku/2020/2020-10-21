[00:03] *** sftp left
[00:05] *** aborazmeh joined
[00:05] *** aborazmeh left
[00:05] *** aborazmeh joined
[00:12] *** sftp joined
[01:05] *** BenGoldberg left
[01:05] *** Ben_Goldberg joined
[01:05] *** Ben_Goldberg is now known as BenGoldberg

[01:09] *** molaf left
[01:13] *** Chi1thangoo left
[01:13] *** Chi1thangoo joined
[01:17] *** netrino left
[01:19] *** Chi1thangoo left
[01:22] *** molaf joined
[01:32] *** aborazmeh left
[01:47] *** frost-lab joined
[01:54] *** vrurg_ is now known as vrurg

[01:57] *** Kaiepi left
[02:12] *** samp80 joined
[02:13] <samp80> is the raku discord dead?

[02:14] *** xinming left
[02:16] *** xinming joined
[02:16] <samp80> ...is the raku irc generally inactive too?

[02:22] <samp80> :(  

[02:24] <codesections> The IRC is often pretty active 

[02:26] <codesections> This time of day/night isn't ideal -- many of the regulars are in Europe

[02:26] <moon-child> samp80: IRC sees a good amount of activity.  Obviously not 24/7 around the clock.  Can't speek to the discord

[02:26] *** BenGoldberg left
[02:26] *** Ben_Goldberg joined
[02:26] *** Ben_Goldberg is now known as BenGoldberg

[02:27] <samp80> oh that's sad

[02:27] <samp80> i saw the discord has like ‚âà50 members

[02:28] <samp80> but it's professional-looking, ie if it had more than 50

[02:29] <samp80> so, few questions (total noob here lol). Is it wrong to call raku perl?

[02:29] <samp80> (eg if someone says they program in perl, do they mean raku, or perl 5?)

[02:29] <samp80> and how used is perl 5

[02:29] <moon-child> perl5 is a lot more used than raku.  If somebody says perl, they mean perl5

[02:30] <samp80> how come

[02:31] <codesections> plus, usage aside, they're just pretty different languages 

[02:31] <samp80> yeah, i can tell 

[02:31] <samp80> so why use raku over perl then?

[02:32] <samp80> (i'm coming from ruby, looking to learn something new)

[02:32] <samp80> or should i learn perl5?

[02:33] <moon-child> most people in this channel will probably be pretty biased, but I like raku as a language much more than perl

[02:33] <codesections> a lot of reasons :D  I recently wrote a blog series https://www.codesections.com/blog/raku-manifesto/

[02:34] <samp80> lol @moon-child

[02:34] <samp80> i see that raku removed a bunch of perl's idiosyncracies like `$;`

[02:35] <samp80> Why? and are they used in perl5?

[02:35] <samp80> (do people call it perl5 or just perl?)

[02:37] <codesections> (disclaimer: I don't know perl)  Perl5 is fully backwards comparable

[02:37] <samp80> what do you mean backwards comparable?

[02:37] <codesections> *compatible 

[02:38] <samp80> ah

[02:38] <codesections> with perls 1-4

[02:38] <samp80> is that the `use vX` thing i see?

[02:38] <codesections> so perl,

[02:39] <codesections> sorry.  typing issues at the moment

[02:39] *** Kaiepi joined
[02:39] *** Kaiepi left
[02:39] <codesections> so perl5 has a lot of inconsistencies that built up over the versions 

[02:39] *** Kaiepi joined
[02:40] <samp80> im also reading your manifesto lol

[02:43] <samp80> is there a "noobs" irc channel?

[02:43] <codesections> Raku (then called Perl6) started with the idea of "if we're going to break compatibility to fix everything all at once knowing what we know now, what sort of language would we build?"

[02:43] <samp80> yeah, makes sense. i gathered that

[02:43] <samp80> but that's about it. oh, and that people didn't like how it took forever to be developed

[02:44] <samp80> the heck's "prefix `if`" codesections

[03:11] <moon-child> m: say 'woo' if True; if True { say 'hoo' }

[03:11] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´woo‚ê§hoo‚ê§¬ª

[03:12] <moon-child> I think perl has this too fwiw

[03:13] <samp80> oh so prefix `if`'s effectively like using it as a "Statement"

[03:13] <samp80> postfix `if`'s the exact same as ruby, so that's not new

[03:13] <moon-child> though afaik in perl using 'or' and 'and' for conditionals is more idiomatic, like || and && in shell

[03:14] *** moony left
[03:14] <samp80> cool

[03:15] <samp80> what about in raku?

[03:15] <samp80> what's preferred

[03:15] <moon-child> whatever you want

[03:17] <samp80> .-.

[03:17] <samp80> that's going to be the hardest par tlol

[03:17] <samp80> part lol* learning the syntax

[03:21] *** moony joined
[03:32] *** AndroUser joined
[03:46] *** AndroUser left
[04:11] *** luismanfroni joined
[04:12] *** grep0r joined
[04:12] *** grep0r left
[04:23] *** MasterDuke left
[04:37] *** BenGoldberg left
[04:37] *** Ben_Goldberg joined
[04:37] *** Ben_Goldberg is now known as BenGoldberg

[04:59] *** |Sno| left
[05:05] *** |Sno| joined
[05:16] *** BenGoldberg left
[05:31] *** jmerelo joined
[05:35] <jmerelo> releasable6: status

[05:36] <releasable6> jmerelo, Next release in ‚âà3 days and ‚âà13 hours. 1 blocker. 0 out of 79 commits logged

[05:36] <releasable6> jmerelo, Details: https://gist.github.com/1786bb2d20f0ba035d9281a3ad68d58b

[05:39] *** skids left
[05:41] *** bocaneri joined
[05:50] *** bocaneri left
[05:50] *** bocaneri joined
[05:51] *** bocaneri left
[05:51] *** bocaneri joined
[05:52] *** bocaneri left
[05:53] *** bocaneri joined
[05:53] *** bocaneri left
[05:56] *** bocaneri joined
[06:14] *** samp80 left
[06:17] <cpan-raku> New module released to CPAN! Algorithm::LBFGS (0.0.5) by 03TITSUKI

[06:28] *** wamba joined
[06:28] *** andrzejku joined
[06:39] *** plant_enjoyer joined
[07:10] *** Sgeo left
[07:20] *** sena_kun joined
[07:24] <jmerelo> There are still 42 unanswered Raku questions in StackOverflow https://stackoverflow.com/questions/tagged/raku?tab=Unanswered Check them out, you might now know what's the answer...

[07:25] <moritz> many of these are answered in the comments on the question already

[07:25] <jmerelo> moritz: then it's only a matter of upgrading those comments to a real answer, right? 

[07:26] <jmerelo> moritz: some of them have unaccepted answers, though.

[07:31] *** sena_kun left
[07:36] *** dakkar joined
[07:42] *** plant_enjoyer left
[07:50] *** plant_enjoyer joined
[07:54] *** sena_kun joined
[07:58] *** mid_home left
[08:07] *** BenGoldberg joined
[08:09] *** ensamvarg left
[08:17] *** domm left
[08:17] *** ensamvarg joined
[08:41] *** BenGoldberg left
[08:41] *** Chi1thangoo joined
[08:49] *** andrzejku left
[08:52] *** Chi1thangoo left
[08:55] *** Chi1thangoo joined
[08:56] <plant_enjoyer> which editor do people use for raku? is there any survey with a breakdown?

[08:58] <gfldex> plant_enjoyer: I use vim. To my knowledge nobody has brokenn down after doing a survey yet.

[08:58] <plant_enjoyer> gfldex: I see, thanks

[09:03] <lizmat> plant_enjoyer: there's also Comma, a full-blown IDE: https://commaide.com

[09:04] *** Chi1thangoo left
[09:05] <plant_enjoyer> lizmat: oh thanks, I don't like these though :) or more like - my hardware doesn't

[09:09] <frost-lab> vim! and vscode..

[09:10] *** frost-lab left
[09:11] <jmerelo> plant_enjoyer: I love comma. Sometimes, emacs with raku-mode for scripts

[09:12] <plant_enjoyer> jmerelo: I've been using emacs so far, but it started failing me recently :^(

[09:12] <jmerelo> plant_enjoyer: well, it's not perfect, but it's pretty OK. The new raku-mode is a big improvement.

[09:13] <plant_enjoyer> jmerelo: https://github.com/Raku/raku-mode/issues/43 this is annoying though

[09:16] <jmerelo> plant_enjoyer: hadn't seen it... Give comma a try, then. Also very familiar for those that have used PyCharm or the like.

[09:16] <plant_enjoyer> by the way, is there a nicer way of writing `SomeClass.some-method($_)`?

[09:17] <plant_enjoyer> jmerelo: I might!

[09:20] <tobs> plant_enjoyer: I tend to write .self instead of $_

[09:21] <lizmat> plant_enjoyer: you mean, having some method automatically use the topic?

[09:21] <tobs> or what do you not like about that method call?

[09:22] <plant_enjoyer> oh it's actually a grammar, like here https://raku-advent.blog/2019/12/07/parsing-firefox-user-js-with-raku/ under "setting up the testing grounds"

[09:23] <plant_enjoyer> tobs: I heard you shouldn't write explicitly write out $_ ;) so I thought there would be a better way

[09:24] <lizmat> m: sub a($foo = $*FOO) { dd $foo }; a(42); my $*FOO = 666; a()

[09:24] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´42‚ê§666‚ê§¬ª

[09:24] <lizmat> plant_enjoyer: ^^ something like that maybe ?

[09:25] <El_Che> plant_enjoyer: I know Conmma/Intellij is Java, but it's does not feel heavy on my machines (fast recent dell business laptop and 6y old consumer Dell laptop, bith Linux)

[09:26] <El_Che> Intellij is for me one of those succesful Java on the desktop stories

[09:26] <El_Che> (we all know the less sucesfull ones, specially enterprise software clients)

[09:26] <plant_enjoyer> lizmat: hm, I'm kind of confused. the line I found "problematic" was `say UserJS.parse($_);`, I don't know how to use your code with that

[09:27] <El_Che> I think that jnthn made a very good choice to use intellij as a platform

[09:27] <plant_enjoyer> El_Che: that's cool, I'll try and download it then

[09:27] <lizmat> plant_enjoyer: do you know about dynamic variables ?

[09:27] <plant_enjoyer> lizmat: yes

[09:27] <El_Che> plant_enjoyer: it's not vim though :)

[09:27] <plant_enjoyer> El_Che: nothing's vim, unfortunately :)

[09:28] <El_Che> I have still battle scars from vimscript :)

[09:28] <lizmat> plant_enjoyer: my point is that you *can* use a dynamic variable as a default for a parameter in a method

[09:28] *** Chi1thangoo joined
[09:28] <plant_enjoyer> El_Che: I've been using emacs because of its great vim emulation and better window support. VSCode's vim extensions butchers my code once in a while, and I can't get back to the good state..

[09:28] <lizmat> accessing the caller's topic is possible, but comes with performance penalties

[09:29] <lizmat> and actually may be disallowed at one point

[09:29] <lizmat> so I would not recommend going that way

[09:29] <plant_enjoyer> lizmat: I don't have a method there though, I have a for loop. oh, I could just `for @inputs -> $input`

[09:29] <lizmat> yup

[09:30] <lizmat> that would increase readability  :-)

[09:30] <El_Che> plant_enjoyer: I tried stom, didn't like it. And I really need a good reason to use MS products

[09:30] <plant_enjoyer> yeah :/

[09:30] <El_Che> and I already had a intellij license around for java stuff

[09:30] <El_Che> the funny thing I ended using intellij for raku, go and perl and not for java :)

[09:37] <El_Che> saying this, I am just downloading ms edge on linux to check how it works with ms teans :P

[09:45] <El_Che> no difference wuth chromium

[09:47] <plant_enjoyer> it's the same engine now, no?

[09:47] * plant_enjoyer will be right back

[09:47] *** plant_enjoyer left
[09:51] *** plant_enjoyer joined
[09:56] *** natrys joined
[10:04] <El_Che> plant_enjoyer: it is

[10:23] *** wamba left
[10:24] *** jmerelo left
[10:25] *** jmerelo joined
[10:25] *** sena_kun left
[10:28] *** domm joined
[10:30] *** sena_kun joined
[10:35] *** rindolf joined
[10:36] *** wamba joined
[10:43] *** plant_enjoyer left
[11:09] <SmokeMachine> Hi! Does anyone here have used Term::TablePrint? How do I get the selected rows on that?

[11:14] <jmerelo> SmokeMachine: as a matter of fact, there's a recipe that uses it in Raku::Recipes. Not totally sure I used that, though. I think I used it basically for printint...

[11:16] <jmerelo> SmokeMachine: if you peruse the code, it obviously has that information, but you'll need to fork it to get it out. print-table just returns Nil.

[11:17] <jmerelo> SmokeMachine: you might want to use Term::Choose instead, if that's what you're looking for.

[11:17] <SmokeMachine> jmerelo: yes, that's what I'm thinking... but in my case, I wanted a table...

[11:17] <SmokeMachine> jmerelo: but probably I'll need to go with that

[11:21] <jmerelo> SmokeMachine: if you don't want to start yak-shaving :-)...

[11:28] *** bbkr joined
[11:32] *** BenGoldberg joined
[11:38] <bbkr> Hi. Does anyone know what logic is used to create '.raku/short' directory? Can I change its base path to be /whatever/.raku/short? 

[12:07] *** BenGoldberg left
[12:12] <bbkr> ^ nvm, found it in rakudo/src/core.c/CompUnit/Repository/Installation.pm6. HOME env must be set. I was running my user code from supervisord managed by root and that is why (despite changing directory prior to run) i had issues with permissions of /root/.raku/short.

[12:15] *** jmerelo left
[12:19] *** domidumont joined
[12:31] *** Black_Ribbon left
[12:38] <Geth> ¬¶ doc: 407f8229ea | (Daniel Mita)++ | doc/Language/pod.pod6

[12:38] <Geth> ¬¶ doc: Fix broken link to roast test

[12:38] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/407f8229ea

[12:38] <linkable6> Link: https://docs.raku.org/language/pod

[12:43] *** rindolf left
[12:43] *** rindolf joined
[12:44] *** MitarashiDango[m joined
[12:50] *** k-man left
[12:53] *** k-man joined
[12:58] *** ufobat joined
[13:02] *** Tirifto joined
[13:17] *** jmerelo joined
[13:38] *** luismanfroni left
[13:45] *** andrzejku joined
[13:45] *** luismanfroni joined
[13:52] *** silug left
[13:54] *** silug joined
[13:55] *** Sgeo joined
[13:59] *** silug left
[14:00] *** shlomif joined
[14:01] *** silug joined
[14:01] *** bbkr left
[14:02] *** rindolf left
[14:02] *** shlomif is now known as rindolf

[14:08] *** silug8 joined
[14:08] *** silug left
[14:08] *** silug8 is now known as silug

[14:18] *** simcop2387 left
[14:18] *** perlbot left
[14:18] *** silug7 joined
[14:18] *** silug left
[14:18] *** silug7 is now known as silug

[14:18] *** skids joined
[14:19] *** deadk left
[14:29] *** abraxxa left
[14:30] *** deadk joined
[14:37] *** silug left
[14:37] *** silug joined
[14:38] *** aborazmeh joined
[14:38] *** aborazmeh left
[14:38] *** aborazmeh joined
[14:50] *** abraxxa joined
[14:53] *** domidumont left
[14:54] *** abraxxa left
[14:55] *** silug0 joined
[14:55] *** silug left
[14:55] *** silug0 is now known as silug

[14:57] *** BenGoldberg joined
[15:08] *** abraxxa joined
[15:20] *** mowcat joined
[15:21] *** abraxxa left
[15:22] *** abraxxa joined
[15:31] *** BenGoldberg left
[15:33] *** aborazmeh left
[15:35] <kawaii> When writing the signature of a routine, I can express that it must accept a hash, but can I further specify named keys the hash must contain to be valid?

[15:35] <kawaii> sub myroutine(:%blah<some-key>) {} for example

[15:35] <jmerelo> kawaii: only through "where" clauses, I guess

[15:36] <kawaii> any documentation on that? :)

[15:38] <moritz> if you are going that far, IMHO it's a sign that you should be using proper objects/classes, not hashes

[15:38] <jmerelo> m: sub foo( %hash where "foo" ‚àà .keys ) { say %hash }; foo( %(foo=>3) )

[15:38] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´{foo => 3}‚ê§¬ª

[15:38] <jmerelo> m: sub foo( %hash where "foo" ‚àà .keys ) { say %hash }; foo( %(bar=>3) )

[15:38] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´Constraint type check failed in binding to parameter '%hash'; expected anonymous constraint to be met but got Hash ({:bar(3)})‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:38] <jmerelo> moritz: that, too...

[15:39] <moritz> kawaii: https://docs.raku.org/type/Signature#index-entry-where_clause

[15:40] <kawaii> never seen ‚àà before :O

[15:40] <jmerelo> kawaii: "element of" or "in". As in maths :-)

[15:40] <kawaii> ah, thank you :D

[15:41] <jmerelo> Probaby Junctions would work here too...

[15:43] <[Coke]> there's no way to know if a given NFG codepoint is renderable in your font, is there.

[15:43] <[Coke]> (especially in a cross platform way)

[15:43] <moritz> [Coke]: no

[15:43] <moritz> [Coke]: it's not even cross-application on the same OS

[15:44] <moritz> there are applications that do fallbacks (take characters from other fonts if necessary/possible), and others don't

[15:45] <moritz> PDF readers tend to not do that, browsers do. All other applications: really depends on the GUI framework

[15:47] <[Coke]> Didn't think there was, but figured if anyone know of secret sauce, it'd be y'all. :)

[15:48] <[Coke]> -- wÃÑÕÜjÃãÃïcÃèÃî

[15:49] <kawaii> jmerelo: using that syntax, I can see how to specify one key, but what if I have say, two or three? I tried using | between them but got some Seq iterator error.

[15:49] * [Coke] hears a cow in the distance and realizes his son has left minecraft running somewhere.

[15:52] <moritz> kawaii: try an all() junction

[15:53] <moritz> m: sub foo(%h where { %h{all('a', 'b)}:exists) { say 42}: foo({:a, :b}); foo({:a})

[15:53] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in single quotes; couldn't find final "'" (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3sts) { say 42}: foo({:a, :b}); foo({:a})7‚èè5<EOL>‚ê§    expecting ‚Ä¶¬ª

[15:53] <moritz> m: sub foo(%h where { %h{all('a', 'b)}:exists }) { say 42}: foo({:a, :b}); foo({:a})

[15:53] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in single quotes; couldn't find final "'" (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3s }) { say 42}: foo({:a, :b}); foo({:a})7‚èè5<EOL>‚ê§    expecting ‚Ä¶¬ª

[15:53] *** andrzejku left
[15:53] <moritz> m: sub foo(%h where { %h{all('a', 'b')}:exists }) { say 42}: foo({:a, :b}); foo({:a})

[15:53] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3{ %h{all('a', 'b')}:exists }) { say 42}:7‚èè5 foo({:a, :b}); foo({:a})‚ê§    expecting any of:‚ê§        colon pair‚ê§¬ª

[15:54] *** ambs joined
[15:55] <moritz> m: sub foo(%h where { %h{all('a', 'b')}:exists } ) { say 42}; foo({:a, :b}); foo({:a})

[15:55] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´42‚ê§Constraint type check failed in binding to parameter '%h'; expected anonymous constraint to be met but got Hash ({:a(Bool::True)})‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:59] <kawaii> moritz: complicated, but thanks! You're right about using real objects I guess

[16:06] *** sampersand joined
[16:06] <sampersand> hiall

[16:07] <sampersand> So I'm looking to pick up a new language and im trying to decide between Perl and Raku. What's the advantage that Raku has over Perl?

[16:11] <kawaii> sampersand: the FAQ has a particularly good list of reasons to learn Raku :) ; https://docs.raku.org/language/faq#Why_should_I_learn_Raku?_What's_so_great_about_it?

[16:12] *** woodi left
[16:15] <sampersand> oh tahts smart

[16:25] *** mtj_ joined
[16:35] *** woodi joined
[16:41] *** dakkar left
[17:01] *** cpan-raku left
[17:02] *** cpan-raku joined
[17:02] *** cpan-raku left
[17:02] *** cpan-raku joined
[17:13] *** domidumont joined
[17:14] *** MasterDuke joined
[17:16] *** raku-bridge joined
[17:16] *** raku-bridge left
[17:16] *** raku-bridge joined
[17:16] <timotimo> testing

[17:16] <raku-bridge> <timotimo> m: say "hello world"

[17:16] <evalable6> timotimo, rakudo-moar b30fa3a71: OUTPUT: ¬´hello world‚ê§¬ª

[17:19] *** natrys left
[17:26] *** Kaeipi joined
[17:26] *** Kaiepi left
[17:29] *** Kaeipi left
[17:29] *** Kaeipi joined
[17:31] *** domidumont left
[17:34] <SmokeMachine> m: sub a(%hash (:$key1, :$key2)) { say %hash }; a %(:1key1, :2key2);

[17:34] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´{key1 => 1, key2 => 2}‚ê§¬ª

[17:35] <SmokeMachine> m: sub a(%hash (:$key1, :$key2)) { say %hash }; a %(:1key1);

[17:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´{key1 => 1}‚ê§¬ª

[17:35] <SmokeMachine> m: sub a(%hash (:$key1!, :$key2!)) { say %hash }; a %(:1key1, :2key2);

[17:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´{key1 => 1, key2 => 2}‚ê§¬ª

[17:35] <SmokeMachine> m: sub a(%hash (:$key1!, :$key2!)) { say %hash }; a %(:1key1);

[17:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´Required named argument 'key2' not passed in sub-signature of parameter %hash‚ê§  in sub a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:36] <SmokeMachine> m: sub a(%hash (:$key1!, :$key2!)) { say %hash }; a %(:1key1, :2key2, :3key3);

[17:36] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´Unexpected named argument 'key3' passed in sub-signature of parameter %hash‚ê§  in sub a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:36] <SmokeMachine> kawaii: like this ^^?

[17:39] *** gordonfish left
[17:40] *** sampersand left
[17:45] *** ufobat left
[17:53] *** orinthe left
[17:53] *** orinthe joined
[17:55] *** natrys joined
[17:55] *** natrys left
[17:57] *** siulManfroni joined
[17:58] *** luismanfroni left
[18:00] *** siul_ joined
[18:01] *** orinthe left
[18:03] *** orinthe joined
[18:04] *** siulManfroni left
[18:07] *** orinthe left
[18:07] *** orinthe joined
[18:10] *** gordonfish joined
[18:17] *** abraxxa left
[18:18] *** abraxxa joined
[18:21] *** bocaneri left
[18:23] *** BenGoldberg joined
[18:26] *** abraxxa left
[18:29] *** abraxxa joined
[18:34] *** abraxxa left
[18:43] *** jmerelo left
[18:46] *** sena_kun left
[18:56] <Altreus> whaaaaaaaaaat

[18:56] <Altreus> That's neat

[18:57] *** MasterDuke left
[18:57] *** BenGoldberg left
[19:01] *** andrzejku joined
[19:12] *** aindilis left
[19:45] *** silug left
[19:48] *** wamba left
[19:57] *** MasterDuke joined
[19:58] *** [Sno] joined
[20:00] *** siulManfroni joined
[20:00] *** siul_ left
[20:00] *** |Sno| left
[20:03] *** siulManfroni left
[20:09] *** andrzejku left
[20:12] *** wamba joined
[20:18] *** silug joined
[20:20] *** approaching236 joined
[20:23] *** silug left
[20:25] *** approaching236 left
[20:27] *** fs67 joined
[20:30] *** approaching236 joined
[20:45] *** silug joined
[21:03] *** fs67 left
[21:07] *** rindolf left
[21:16] <guifa> [Coke] moritz: if you can get the original code points that define the NFG codepoint then you could, but it‚Äôs going to be very difficult to pull off (the interplay between font format, renderer, and as moritz mentions, substitions that will be handled at an even higher level than the renderer‚Ä¶. is insanely complex)

[21:20] <[Coke]> yup. for my use case, which is to generate random combinations, I can just spit out a few dozen and see what "sticks". :)

[21:21] <[Coke]> doing it "right" for that use case is ridiculous.

[21:21] *** aluaces left
[21:22] *** wamba left
[21:44] *** orinthe left
[21:45] <guifa> For that, I‚Äôd just check and see if the component glyphs exist

[21:46] *** orinthe joined
[21:48] *** BenGoldberg joined
[21:50] *** orinthe left
[21:51] *** orinthe joined
[21:57] *** aindilis joined
[22:22] *** BenGoldberg left
[22:26] *** batmangreen123 joined
[22:27] *** batmangreen123 left
[22:29] *** batmangreen123 joined
[22:30] *** batmangreen123 left
[22:31] *** i-hate-gay joined
[22:31] <i-hate-gay> Ldld

[22:31] <i-hate-gay> rf

[22:31] <i-hate-gay> d

[22:31] <i-hate-gay> e

[22:31] <i-hate-gay> r

[22:31] <i-hate-gay> t

[22:31] <i-hate-gay> r

[22:31] <i-hate-gay> R

[22:31] <i-hate-gay> 4

[22:31] <i-hate-gay> d

[22:32] *** i-hate-gay left
[22:33] *** maggotbrain left
[22:35] *** maggotbrain joined
[22:38] *** abraxxa joined
[22:38] <JJAtria[m]> is there a way to use `prompt` but without printing the characters? Like, when prompting for a password?

[22:41] *** skids left
[22:42] *** Black_Ribbon joined
[22:44] <Doc_Holliwood> Turning off echo is shell specific

[22:46] <Doc_Holliwood> on xoids executing ssty -echo should do it

[22:46] <Doc_Holliwood> stty echo to turn it back on

[22:48] *** MasterDuke left
[22:52] <guifa> stty -echo is pretty standard for *nix, I‚Äôm not sure the dos equivalent

[22:54] <guifa> I guess as a fallback you could always use get() repeatedly and print out ‚Äú\r                    ‚Äú each time.  You‚Äôd probably get a quick flash for each one, but it would bomb royally for UTF8 since most characters will be waiting for a potential combining diacritic

[22:58] <Doc_Holliwood> pretty much everything including win10 supports ANSI

[22:58] <Doc_Holliwood> so one can manipulate the color of the echo

[22:59] <JJAtria[m]> Hm... yeah... I was kinda expecting it to take some adverb... I'll see what I come up with

[22:59] <JJAtria[m]> Thanks!

[23:00] <moon-child> you can't know what the background will be, so you can't just blindly set the foreground

[23:00] <moon-child> but, you can set fg and bg to be the same

[23:03] <guifa> changing fg/bg colors won‚Äôt affect C&P abilities though

[23:33] *** MilkmanDan joined
[23:34] *** Tirifto left
[23:49] *** bingos_ joined
[23:50] *** bingos left
[23:51] *** deadk left
[23:59] *** edk_ joined
