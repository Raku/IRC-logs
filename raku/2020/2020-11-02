[00:38] *** orinthe left
[00:39] *** orinthe joined
[00:40] <melezhik> thanks lizmat

[00:40] <tellable6> 2020-11-01T23:17:16Z #raku <lizmat> melezhik you know of the existence of native shaped arrays, aka:  my int @matrix[100;100] ?

[00:41] *** wamba left
[00:46] <melezhik> is it possible to invoke method by symbol link?

[00:50] <melezhik> found here - https://docs.raku.org/language/rb-nutshell#._Method_calls,_.public_send

[00:55] *** orinthe left
[00:56] *** orinthe joined
[00:57] *** orinthe left
[00:57] *** orinthe joined
[00:58] *** pecastro left
[01:00] *** cpan-raku left
[01:01] *** cpan-raku joined
[01:01] *** cpan-raku left
[01:01] *** cpan-raku joined
[01:05] *** BenGoldberg left
[01:05] *** Ben_Goldberg joined
[01:05] *** defaultxr left
[01:05] *** Ben_Goldberg is now known as BenGoldberg

[01:08] *** grep0r joined
[01:08] *** grep0r left
[01:09] *** mowcat left
[01:12] *** defaultxr joined
[02:00] *** orinthe left
[02:00] *** orinthe joined
[02:08] *** leah2 left
[02:13] *** molaf left
[02:18] *** BenGoldberg left
[02:18] *** Ben_Goldberg joined
[02:18] *** Ben_Goldberg is now known as BenGoldberg

[02:21] *** melezhik left
[02:26] *** molaf joined
[02:45] *** BenGoldberg left
[03:02] *** orinthe8 joined
[03:04] *** Manifest0 left
[03:04] *** orinthe left
[03:05] *** orinthe joined
[03:06] *** Manifest0 joined
[03:07] *** orinthe8 left
[03:10] *** camelCaser left
[03:15] *** camelCaser joined
[03:18] *** mid_home left
[03:18] *** mid_home joined
[04:04] *** aborazmeh left
[04:06] *** orinthe8 joined
[04:07] *** orinthe left
[04:07] *** orinthe8 is now known as orinthe

[04:08] *** orinthe left
[04:08] *** orinthe joined
[04:22] *** BenGoldberg joined
[04:27] *** BenGoldberg left
[04:54] *** Sgeo left
[04:54] *** frost-lab joined
[04:55] *** Sgeo joined
[05:11] *** orinthe left
[05:12] *** orinthe joined
[05:40] *** bocaneri is now known as Sauvin

[06:12] *** molaf left
[06:15] *** orinthe left
[06:16] *** orinthe joined
[06:26] *** frost-lab left
[06:40] *** Doc_Holliwould joined
[06:42] *** parabolize left
[06:44] *** m_athias joined
[06:56] *** wamba joined
[06:57] *** skids left
[07:05] *** veesh joined
[07:10] *** Sgeo left
[07:12] <Doc_Holliwould> m: 125**(1/3)

[07:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "**" in expression "125**(1/3)" in sink context (line 1)␤»

[07:12] <Doc_Holliwould> m: say 125**(1/3)

[07:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «4.999999999999999␤»

[07:12] <Doc_Holliwould> #MathThatWorks

[07:18] *** orinthe3 joined
[07:18] *** BenGoldberg joined
[07:20] *** orinthe left
[07:21] *** orinthe joined
[07:22] *** orinthe3 left
[07:24] <moon-child> odd...on my system it outputs 5

[07:25] *** frost-lab joined
[07:52] *** BenGoldberg left
[08:01] *** sena_kun joined
[08:08] *** Altai-man joined
[08:09] *** leah2 joined
[08:11] *** sena_kun left
[08:17] <nine> melezhik: $obj."$method-name"()

[08:17] <tellable6> nine, I'll pass your message to melezhik

[08:22] *** orinthe8 joined
[08:24] *** orinthe left
[08:24] *** abraxxa joined
[08:24] *** jmerelo joined
[08:25] *** orinthe joined
[08:25] *** domidumont joined
[08:27] *** orinthe8 left
[08:29] *** abraxxa left
[08:29] *** abraxxa joined
[08:46] *** dakkar joined
[09:13] *** MasterDuke joined
[09:17] <xinming_> m: my @s1 = (1..5); my @s2 = (4, 5 ... 10); (@s1, @s2).Seq.raku.say;

[09:17] <camelia> rakudo-moar 85847d2f1: OUTPUT: «([1, 2, 3, 4, 5], [4, 5, 6, 7, 8, 9, 10]).Seq␤»

[09:17] <xinming_> What is the right way to merge 2 Seq, so we build the third sequence one after another ?

[09:17] <xinming_> asked before, just got forgotten.

[09:19] *** zacts joined
[09:22] <tobs> xinming_: one way is to slip the arrays into the outer list: (|@s1, |@s2).Seq.raku.say

[09:25] <xinming_> tobs: I don't think so, This will cause all values to be eval'ed

[09:25] <xinming_> I just now backlog, Doesn't seem to find the answer.

[09:25] <xinming_> and later, I realized, I'll have to use gather/take to achieve this.

[09:27] <tobs> m: my @s1 = 1...*; my @s2 = (1...50).grep(*.is-prime); my @s3 = (|@s2, |@s1); say @s3.raku

[09:27] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Cannot .elems a lazy list␤  in block <unit> at <tmp> line 1␤␤»

[09:28] <tobs> m: my @s1 = 1...*; my @s2 = (1...50).grep(*.is-prime); my @s3 = (|@s2, |@s1); say @s3[^20].raku

[09:28] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 1, 2, 3, 4, 5)␤»

[09:28] *** orinthe left
[09:28] *** orinthe joined
[09:29] <tobs> ^ you can put together arrays with slip, even infinite lazy ones

[09:30] <xinming_> m: my @s1 = (1..5); my @s2 = (4, 5 ... 10); my @s3 = gather { take $_ for @s1[]; take $_ for @s2[] }; @s3.raku.say;

[09:30] <camelia> rakudo-moar 85847d2f1: OUTPUT: «[1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9, 10]␤»

[09:30] <tobs> but it seems not to clear which operations require an .elems or so and would therefore die on infinite/lazy lists

[09:30] <xinming_> tobs: Thanks.

[09:30] <xinming_> I thought Slip will be eager eval all values before assignment

[09:31] *** wamba left
[09:33] *** wamba joined
[09:39] *** wamba left
[09:45] *** pecastro joined
[10:27] *** skaji__ joined
[10:27] *** skaji_ left
[10:27] *** skaji__ is now known as skaji_

[10:27] *** nekomune left
[10:28] *** nekomune joined
[10:33] *** orinthe6 joined
[10:34] *** orinthe left
[10:34] *** orinthe6 is now known as orinthe

[10:36] *** zacts left
[10:43] *** BenGoldberg joined
[11:00] *** plant_enjoyer joined
[11:00] <plant_enjoyer> hey, do you know any config file format that supports both variables and string interpolation?

[11:00] <plant_enjoyer> I'm rewriting a bash script, and its config file is just another .sh file that gets sourced

[11:01] <plant_enjoyer> (I could just eval a .raku file, but well)

[11:17] *** Doc_Holliwould left
[11:17] *** BenGoldberg left
[11:25] <timotimo> was TOML a format that has that kind of thing?

[11:26] *** aborazmeh joined
[11:26] *** aborazmeh left
[11:26] *** aborazmeh joined
[11:27] *** wamba joined
[11:28] <timotimo> ok, it isn't

[11:29] <plant_enjoyer> timotimo: yeah, it doesn't support these.. HCL kinda does, but it's practically exclusive to golang

[11:30] <plant_enjoyer> by the way, is there something like https://metacpan.org/pod/Getopt::Complete for raku? I haven't found anything on modules.raku.org

[11:30] *** jmerelo left
[11:36] <timotimo> i assume you saw all the getopt modules like Getopt::Long or Getopt::Advance? i haven't used any of them, so no clue what Getopt::Complete does, exactly

[11:36] <plant_enjoyer> timotimo: it provides bash completion

[11:37] <timotimo> oooh

[11:37] <timotimo> that's what "complete" means here

[11:37] <timotimo> i thought it's like "the complete featureset of getopt" or something

[11:38] <timotimo> i could have literally just clicked your link and found out

[11:38] <plant_enjoyer> haha yeah, I see how you could read it like that :D

[11:39] <plant_enjoyer> also I'm seriously considering EVALing a .raku file, but it'd be kinda ugly with all these `my` declarators - can I skip these somehow?

[11:40] *** xelxebar left
[11:40] <timotimo> setting "no strict" lets you do that by having every variable that's not declared be an "our" variable i think

[11:40] <plant_enjoyer> MONKEY-SEE-NO-UNDECLARED

[11:40] <timotimo> "our" variables are a bit slower to access compared to "my" variables i think

[11:40] <plant_enjoyer> oh nice!

[11:40] *** xelxebar joined
[11:40] <plant_enjoyer> well I'm not concerned about performance much (unless it's *really* slow)

[11:41] <plant_enjoyer> it won't be running in a loop :)

[11:41] <Zero_Dogg> Right, I think raku has finally taken me over completely. Just caught myself typing "zpanm" to try to install a perl module for Inline::Perl5. My brain obviously thinks all pacakge installers should start with z now.

[11:42] <plant_enjoyer> :D

[11:43] <timotimo> someone™ should™ go and write a whitelist-like grammar for "raku code, but only what is needed for very advanced configuration"

[11:43] <timotimo> since exclude-lists are super difficult to get right

[11:52] *** aluaces left
[12:01] <plant_enjoyer> yeah, that would be cool

[12:01] <plant_enjoyer> or even a ruby-like dsl for configuration

[12:09] *** sena_kun joined
[12:11] *** Altai-man left
[12:30] *** rindolf joined
[12:35] *** Kaiepi left
[12:43] *** lucasb joined
[12:49] *** mowcat joined
[12:51] *** patrickb joined
[12:56] *** abraxxa left
[13:00] *** abraxxa1 joined
[13:04] *** aluaces joined
[13:06] *** abraxxa1 is now known as abraxxa

[14:07] *** evalable6 left
[14:07] *** linkable6 left
[14:08] *** BenGoldberg joined
[14:09] *** evalable6 joined
[14:09] *** linkable6 joined
[14:17] *** skids joined
[14:21] *** frost-lab left
[14:27] *** skids left
[14:28] *** patrickb left
[14:31] *** aborazmeh left
[14:39] *** Kaiepi joined
[14:42] *** BenGoldberg left
[14:43] *** kdlv joined
[14:54] *** plant_enjoyer left
[14:57] *** wamba left
[14:58] *** wamba joined
[15:09] <[Coke]> .tell skaji answered your question on https://github.com/skaji/mi6/issues/113 - still an issue for me.

[15:09] <tellable6> [Coke], I'll pass your message to skaji

[15:09] *** Sgeo joined
[15:09] <[Coke]> skaji_: ^^

[15:11] *** aluaces left
[15:26] *** molaf joined
[15:27] *** zacts joined
[15:35] *** mowcat left
[15:44] *** parabolize joined
[15:57] *** kdlv left
[16:08] *** Altai-man joined
[16:11] *** sena_kun left
[16:29] <JJAtria[m]> [Coke]: Hm, that's odd. I've been using `mi6 test` in a pre-commit hook, and that was definitely using the local, non-installed version of the module to test

[16:30] <JJAtria[m]> Even when I had an earlier version of the module installed

[16:32] *** orinthe left
[16:32] *** orinthe joined
[16:36] <[Coke]> App::Mi6:ver<1.1.2>:auth<cpan:SKAJI>

[16:36] <[Coke]> (from zef list --installed) - looks like that's the most recent.

[16:36] *** skids joined
[16:37] <[Coke]> I can see in the code from github where it's adding 'lib'.

[16:38] <[Coke]> 151:    my %args = handlers => TAP::Harness::SourceHandler::Raku.new(incdirs => ["lib"]);

[16:39] <cpan-raku> New module released to CPAN! Terminal::Spinners (1.6.0) by 03RYNIX

[16:40] <[Coke]> JJAtria[m]: so, my latest test was "edit the local lib/...rakumod" file so that if a test used it, it would fail. if I run "mi6 test", the tests pass. if I run "RAKULIB=lib mi6 test", the test fails as expected.

[16:42] <JJAtria[m]> Weird. That's the same version I'm using, so that's not the issue at least

[16:42] <[Coke]> I'm on a mac. rakudo is v2020.10-40-gccc50f7ae.

[16:42] <[Coke]> I'll add versions to the ticket.

[16:43] <JJAtria[m]> I'm on 2020-09, but I'd like to think that's not the problem 🙈

[16:52] <lizmat> and another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/11/02/2020-44-comma-comma/

[16:53] <tyil> lizmat++

[16:58] *** jmerelo joined
[17:00] *** zacts left
[17:07] *** thundergnat joined
[17:07] <thundergnat> m: put .key, ' => ', .value.head(5) for (0x21 .. 0xfff).map(*.chr).classify(*.uniprop('age')).grep(+*.key).sort: +*.key

[17:07] <camelia> rakudo-moar 85847d2f1: OUTPUT: «1.1 => ! " # $ %␤2.0 => ֑ ֒ ֓ ֔ ֕␤3.0 => Ƕ Ƿ Ǹ ǹ Ș␤3.1 => ϴ ϵ␤3.2 => Ƞ ͏ ͣ ͤ ͥ␤4.0 => ȡ ȴ ȵ ȶ ʮ␤4.1 => ȷ ȸ ȹ Ⱥ Ȼ␤5.0 => ɂ Ƀ Ʉ Ʌ Ɇ␤5.1 => Ͱ ͱ Ͳ ͳ Ͷ␤5.2 => Ԥ ԥ ࠀ ࠁ ࠂ␤6.0 => Ԧ ԧ ؠ ٟ ࡀ…»

[17:07] *** nekomune left
[17:07] <thundergnat> m: put .key, ' => ', .value.head(5) for (0x21 .. 0xfff).map(*.chr).classify(*.uniprop('age')).grep(+*.key).sort: -*.key

[17:07] <camelia> rakudo-moar 85847d2f1: OUTPUT: «12.0 => ౷ ຆ ຉ ຌ ຎ␤11.0 => ՠ ֈ ׯ ߽ ߾␤10.0 => ࡠ ࡡ ࡢ ࡣ ࡤ␤9.0 => ࢶ ࢷ ࢸ ࢹ ࢺ␤8.0 => ࢳ ࢴ ࣣ ૹ ౚ␤7.0 => Ϳ Ԩ ԩ Ԫ ԫ␤6.3 => ؜␤6.1 => ֏ ؄ ࢠ ࢢ ࢣ␤6.0 => Ԧ ԧ ؠ ٟ ࡀ␤5.2 => Ԥ ԥ ࠀ ࠁ…»

[17:08] <thundergnat> heh, RTL characters strike again.

[17:09] *** thundergnat left
[17:10] <jdv79> thanks lizmat.  good stuff.

[17:15] *** xinming_ left
[17:17] *** xinming joined
[17:18] *** zacts joined
[17:19] *** aluaces joined
[17:25] *** guifa` joined
[17:27] <guifa`> .tell jjmerelo: llegome Raku Recipes!  Looking forward to reading it, thanks!

[17:27] <tellable6> guifa`, I'll pass your message to jmerelo

[17:29] <jmerelo> guifa`: that was fast. Enjoy!

[17:30] <tellable6> hey jmerelo, you have a message: https://gist.github.com/f82ff013a2dcba349824f774baea71bc

[17:30] <jmerelo> guifa`: did the all-too-professional shrink-wrapping survive? 

[17:33] *** BenGoldberg joined
[17:35] <guifa`> It did! (Corners are in perfection condition too!)

[17:37] <Zero_Dogg> Is there any particular reason why META6 is JSON and not something a bit more flexible (and readable), like YAML? (and by flexible I mean "with support for comments")

[17:38] <lizmat> Zero_Dogg: a decision had to be made at some point

[17:38] <jmerelo> Zero_Dogg: no reason other than historic, I guess. TOML is also cool.

[17:39] <lizmat> and for many, JSON was closer to "home" than YAML

[17:39] <jmerelo> Zero_Dogg: don't see a big need for comments, anyway.

[17:42] <Zero_Dogg> nod, it's just not a great langauge to write stuff by hand in. It's okay, but not great. Was merely wondering the reasoning is all.

[17:45] *** dakkar left
[17:45] *** aluaces left
[17:47] <guifa`> For me personally, once my META6's start getting to be more than about 50 lines long, I end up generating them programatically

[17:51] <jmerelo> guifa`: with a little Build script?

[17:52] *** Doc_Holliwould joined
[17:55] <[Coke]> mi6 can gen them, I think

[17:55] <guifa`> Basically.  Right now I've only really done it with the Timezones module, but it works well: https://github.com/alabamenhu/DateTimeTimezones/blob/93b74a951b7942064ad082643bc25f583790aaed/resources/update-tz-database.raku#L200

[17:56] <jmerelo> guifa`: cool!

[17:57] *** cpan-raku left
[17:58] *** cpan-raku joined
[17:58] *** cpan-raku left
[17:58] *** cpan-raku joined
[17:58] *** approaching236 joined
[18:04] *** domidumont left
[18:07] *** [Coke] left
[18:08] *** BenGoldberg left
[18:08] *** aluaces joined
[18:28] *** HarmtH_ left
[18:46] *** wamba left
[18:52] *** orinthe1 joined
[18:54] *** orinthe left
[18:54] *** orinthe1 is now known as orinthe

[18:54] *** aborazmeh joined
[18:54] *** aborazmeh left
[18:54] *** aborazmeh joined
[19:03] *** wamba joined
[19:28] *** abraxxa left
[19:28] *** guest13 joined
[19:29] *** guest13 left
[19:35] *** [Coke] joined
[19:36] *** Justchecking joined
[19:37] *** Justchecking left
[19:37] *** jmerelo left
[19:38] *** wamba left
[19:43] *** [Sno] left
[19:45] *** domidumont joined
[19:46] *** sno joined
[19:50] *** domidumont left
[19:53] *** zacts left
[19:55] *** orinthe left
[19:56] *** orinthe joined
[19:57] *** mowcat joined
[19:58] <guifa`> What would cause a module to pass tests but fail installation under zef?

[20:06] <[Coke]> any message on the failure? (try with --verbose) ?

[20:06] <[Coke]> could be permission issues on the install folder, e.g.

[20:09] *** sena_kun joined
[20:11] *** Altai-man left
[20:14] *** wamba joined
[20:14] <guifa`> [Coke]: user just reported it to me.  This is the error log they sent http://rakudist.raku.org/sparky/report/debian/859

[20:14] *** codesections joined
[20:15] <guifa`> "Not enough positional arguments; needed at least 2" which is .... cryptic lol

[20:15] *** wamba left
[20:28] *** mtj_ left
[20:29] *** aborazmeh left
[20:30] <[Coke]> why is there a sparrowdo reference in there?

[20:31] <SmokeMachine> .tell jmerelo I’ve just started reading Raku Recipes. Really liking it! Thank you for your words about Red

[20:31] <tellable6> SmokeMachine, I'll pass your message to jmerelo

[20:43] *** mowcat left
[20:43] *** PavelB joined
[20:44] <[Coke]> Perl related kickstarter from Ovid: https://www.kickstarter.com/projects/1246097605/tau-station-the-mmo-biblio-rpg/description - 3 days to go.

[20:45] *** mowcat joined
[20:46] <[Coke]> off topic, but Ovid's a good egg.

[20:48] *** cpan-raku left
[20:48] *** cpan-raku joined
[20:48] *** cpan-raku left
[20:48] *** cpan-raku joined
[20:58] <guifa`> [Coke]: not sure, I think rakudist is using it internally I guess for queuing up the tests.  There seem to be two successful tests on 2020.10 and 2020.07 now, though, so not entirely sure there

[20:59] *** orinthe left
[20:59] *** BenGoldberg joined
[21:00] *** orinthe joined
[21:10] <guifa`> lizmat++ on the weekly, and ++ for another trait ;-)

[21:33] *** BenGoldberg left
[21:34] *** wamba joined
[21:38] *** skids left
[21:40] *** zacts joined
[21:42] *** zacts left
[21:43] *** zacts joined
[21:46] *** zacts left
[21:57] *** flowinho joined
[22:02] *** flowinho left
[22:36] *** sena_kun left
[22:40] *** mowcat left
[22:45] *** wamba left
[22:50] *** guifa joined
[22:53] *** rindolf left
[23:27] <timotimo> i'm not the only one seeing travis-ci being rather slow at starting up jobs?

[23:31] *** mtj_ joined
[23:54] *** mowcat joined
[23:58] *** skids joined
