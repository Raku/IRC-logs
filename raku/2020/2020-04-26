[00:20] *** xinming left
[00:21] *** xinming joined
[00:53] *** lucasb left
[01:04] <cpan-raku> New module released to CPAN! PDF::Class (0.4.4) by 03WARRINGD

[01:07] *** mowcat left
[01:11] <timotimo> RubioTerra: is that just one call of .subst or do you call it in a loop?

[01:20] *** cpan-raku left
[01:26] *** cpan-raku joined
[01:26] *** cpan-raku left
[01:26] *** cpan-raku joined
[01:46] *** aborazmeh left
[01:58] *** a6502 joined
[02:00] *** xinming left
[02:01] *** xinming joined
[02:06] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:13] *** xinming left
[02:13] *** xinming joined
[02:16] <RubioTerra> timotimo: It's a loop

[02:17] <timotimo> RubioTerra: is it the same substitution every time?

[02:17] <timotimo> if yes, then maybe the :g aka :global adverb in the subst call would be right for you

[02:18] <RubioTerra> Kinda, I chop off some characters from the end if they are there

[02:18] <timotimo> OK, subst will start at the front and search through the string; if you have an anchor at the end, it's not yet smart enough to calculate that it'd never work earlier than X from the end

[02:19] <timotimo> but if you know already, you can set a starting position

[02:19] <RubioTerra> Hmm... how do I set the starting position? That would help

[02:20] <timotimo> ah dang, i was mistaken

[02:20] <timotimo> at least it's not in the docs

[02:20] <RubioTerra> Anyway, what I did was add a marker to the string and make a single subst at the end.

[02:21] <RubioTerra> I guess it will be faster than any substitution

[02:21] <timotimo> possibly

[02:22] <timotimo> if the match is simple, you can work with .ends-with

[02:22] <RubioTerra> hmm... you're right

[02:23] <timotimo> perhaps together with a junction

[02:23] <timotimo> like .ends-with(any <a b c d>)

[02:25] <RubioTerra> $var .= subst(/foo$/, '') will parse the whole string, right?

[02:27] <timotimo> yes, unfortunately

[02:27] <timotimo> a thing the optimizer needs to learn one day

[02:27] <timotimo> a "small matter of programming" ;)

[02:27] <RubioTerra> yeah, the regex engine needs a lot of care

[02:32] <RubioTerra> timotimo, while we're at it, let me ask you another question.

[02:32] <RubioTerra> CommaIDE is throwing an error when I try to run the tests

[02:32] <RubioTerra> Unhandled exception in code scheduled on thread 4

[02:33] <timotimo> that's the tests of your code?

[02:33] <RubioTerra> yes

[02:33] <timotimo> yeah, it does sound like an exception message from rakudo

[02:33] <RubioTerra> I've updated the IDE recently and reused the old config files. Maybe that's it

[02:33] <timotimo> maybe; creating a new "SDK" could perhaps help

[02:34] <RubioTerra> Yeah, I'll try that

[02:34] <RubioTerra> I can run the tests fine from command line

[02:34] <timotimo> otherwise, more context of the error message could help figure things out

[02:35] <RubioTerra> Well this is the first time I've used the pre-compiled rakudo package (Windows 10 here)

[02:35] <RubioTerra> I've noticed the tests try to run moar.exe from the wrong path.

[02:36] <RubioTerra> But, even after providing a copy on the dir it expects it gives me that error

[02:36] <cpan-raku> New module released to CPAN! Sparrowdo::RemoteFile (0.0.3) by 03MELEZHIK

[02:36] <timotimo> the wrong path, like from an earlier installation?

[02:38] <RubioTerra> It tries to launch C:\rakudo\install\bin instead of C:\rakudo\bin

[02:38] <RubioTerra> Maybe the problem is with the pre-compiled package

[02:41] <timotimo> i think the newer rakudo versions are relocatable

[02:41] <timotimo> what version of rakudo are you working with here?

[02:41] <RubioTerra> 2020.02.1

[02:43] <timotimo> i don't know if anything is different about the windows version but there should be a perl6.exe and/or raku.exe in the bin folder that you can launch, rather than just a .bat file; is that the case?

[02:43] <RubioTerra> yes

[02:44] <timotimo> i wonder if maybe comma checks for an install/ folder first when you give the location, and the install/bin is from an older installation and wins

[02:44] <RubioTerra> I don't think that's the case, because the rakudo dir is correct.

[02:45] <RubioTerra> The problem is that it seems to expect the tree to be intall/bin,/ instead of bin/

[02:45] <timotimo> oh, the install/bin part doesn't actually exist?

[02:48] <RubioTerra> exactly

[02:49] <RubioTerra> executable are inside C:\rakudo-2020.02.1\bin, but it tries to call from C:\rakudo-2020.02.1\install\bin

[02:51] <cpan-raku> New module released to CPAN! Term::Choose (1.6.5) by 03KUERBIS

[02:52] <timotimo> it's supposed to figure all that out when you select the right folder :\

[02:52] *** Doc_Holliwood left
[02:53] <RubioTerra> Hm... I'll try and do a clean install later. Maybe that's because I'v reused the old configs

[02:55] <timotimo> possible, but it's possible a clean install will also just keep the configs, too

[02:56] <timotimo> does the SDK in the project structure dialog show the right version, or does it completely refuse to set up?

[02:56] <RubioTerra> It does show the right version

[02:57] <timotimo> that's certainly odd

[02:57] <timotimo> you should be able to find the SDK settings in the XMLs somewhere

[02:57] <RubioTerra> Hm... Just noticed something

[02:57] <timotimo> probably in your project's .idea folder if you have a folder-based project

[02:58] <RubioTerra> The error occurs when I try to run the tests in debug

[02:58] <RubioTerra> The path error, I mean

[03:02] <timotimo> you might be expected to select the bin folder rather than the rakudo folder

[03:04] <RubioTerra> hm

[03:23] *** RubioTerra left
[04:04] *** Doc_Holliwood joined
[04:19] *** vike left
[04:27] *** xinming left
[04:27] *** xinming joined
[04:28] *** gnufr33dom joined
[04:29] *** vike joined
[04:35] *** gnufr33dom left
[04:37] *** gnufr33dom joined
[04:43] *** xinming left
[04:44] *** xinming joined
[05:39] *** guifa2 left
[06:11] *** farcas1982regreg joined
[06:37] *** Doc_Holliwood left
[06:53] *** farcas1982regreg left
[06:54] *** farcas1982regreg joined
[07:05] *** chloekek joined
[07:05] <xinming> Is there other alternatives form handling like Cro::HTTP::Form in raku?

[07:09] <xinming> Cro::WebApp::Form

[07:12] <moritz> Hi all. What are the download permalinks for 2020.01 rakudo star release (and its signature file)?

[07:18] <AlexDaniel> moritz: the ones on https://rakudo.org/downloads should be permanent

[07:20] <moritz> AlexDaniel: that links to https://rakudo.org/star and that again links to https://rakudo.org/latest/star/src

[07:21] <moritz> that is *not* a permalink to this particular version

[07:22] <AlexDaniel> you're right, yeah

[07:23] <moritz> which kinda sucks for a Dockerfile

[07:23] <AlexDaniel> I got confused a bit by the Binary Releases

[07:23] <AlexDaniel> what about https://rakudo.org/downloads/star ?

[07:24] <moritz> that looks better, thanks!

[07:25] <AlexDaniel> it is linked by “You can also download one of the older releases” text, kinda hidden

[07:26] <moritz> thanks for the help!

[07:27] * moritz tries to build a star 2020.01 docker fimage

[07:33] *** chloekek left
[07:48] *** Doc_Holliwood joined
[07:55] *** xinming left
[07:55] *** xinming joined
[08:03] *** rindolf joined
[08:06] *** ensamvarg_tdz joined
[08:17] *** patrickb joined
[08:24] *** xinming left
[08:24] *** xinming joined
[08:38] *** chloekek joined
[08:42] *** Altai-man_ joined
[08:51] <Geth> ¦ doc/master: 4 commits pushed by (JJ Merelo)++

[08:51] <Geth> ¦ doc/master: 03385c8139 | Clarifies zen slices of Seqs #2632

[08:51] <Geth> ¦ doc/master: 695962d1cb | IO::Path rejects the null byte #2632

[08:51] <Geth> ¦ doc/master: aee68e9235 | Updates definitions of dir

[08:51] <Geth> ¦ doc/master: 6eeb954931 | Explains how absoluteness of path is controlled now refs #2632

[08:51] <Geth> ¦ doc/master: review: https://github.com/Raku/doc/compare/a36629850da6...6eeb9549312f

[08:52] *** oodani joined
[08:52] *** SCHAPiE joined
[08:56] *** xinming left
[08:57] *** xinming joined
[09:05] *** pecastro joined
[09:07] *** xinming left
[09:08] *** xinming joined
[09:10] *** rbt left
[09:11] *** rbt joined
[09:11] *** SCHAPiE left
[09:14] *** Doc_Holliwood left
[09:15] *** Doc_Holliwood joined
[09:17] *** SCHAPiE joined
[09:20] *** sena_kun joined
[09:22] *** Altai-man_ left
[09:52] *** rindolf left
[09:54] *** SCHAPiE left
[09:54] *** SCHAPiE joined
[10:04] *** farcas1982regreg left
[10:04] *** farcas1982regreg joined
[10:06] *** Geth joined
[10:07] *** Doc_Holliwood left
[10:11] *** sjm_uk joined
[10:12] *** farcas1982regreg left
[10:12] *** farcas1982regreg joined
[10:23] *** rindolf joined
[10:32] *** xinming left
[10:32] *** xinming joined
[10:43] *** gdonald joined
[10:55] *** Black_Ribbon left
[11:19] *** Altai-man_ joined
[11:21] *** sjm_uk left
[11:22] *** sena_kun left
[11:52] *** xinming left
[11:53] *** xinming joined
[12:23] *** Doc_Holliwood joined
[12:28] *** guifa2 joined
[12:28] *** xinming left
[12:30] *** xinming joined
[12:56] *** ensamvarg_tdz left
[12:58] *** caterfxo left
[13:00] *** rawr joined
[13:11] *** Doc_Holliwood left
[13:13] *** xinming left
[13:13] *** xinming joined
[13:17] <cpan-raku> New module released to CPAN! Math::Libgsl::Matrix (0.1.4) by 03FRITH

[13:21] *** sena_kun joined
[13:22] *** Altai-man_ left
[13:24] *** caterfxo joined
[13:27] <guifa2> Is there a prettier way to initialize a dynamic variable if it's not already been previously set?

[13:27] <lizmat> prettier than what ?

[13:28] <guifa2> The only thing that works for me is 'my $*foo = $CALLERS::('*foo') // initial-value;' and that just feels way too hacky

[13:28] <lizmat> I mean, the core registers code that gets called when a certain dynamic variable doesn't exist

[13:28] <lizmat> I guess there could be value in HLLizing this

[13:29] <lizmat> otoh, jnthn is reworking that part of dynamic variables, because it is a huge source of slowdown  :-)

[13:29] *** RubioTerra joined
[13:30] <jnthn> guifa2: `temp $*foo //= initial-value`

[13:30] <jnthn> Might do the job for you

[13:31] <jnthn> lizmat: The way RakuAST compiles dynamic variable access is already, at least in theory, a bit more efficient :)

[13:33] <guifa2> jnthn: $*foo //= is the first thing I tried, but it errors saying that the dynamic variable isn't found 

[13:34] <guifa2> m: sub foo { temp $*foo //= 5; say $*foo }; foo

[13:34] <camelia> rakudo-moar 561076437: OUTPUT: «Dynamic variable $*foo not found␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[13:36] <jnthn> Oh, it might not already exist? Hm.

[13:38] <jnthn> I guess you could always poke a $foo into GLOBAL or PROCESS... :)

[13:38] <guifa2> I'm probably going to do a rewrite of some stuff to obviate the need for it though, and the workaround works for (despite feeling hacky, it actually is literally working as designed/intended, which is kind of cool)

[13:38] <jnthn> Which exists by is empty

[13:38] <guifa2> haha

[13:38] <jnthn> *but is

[13:39] <lizmat> m: Rakudo::Internals.REGISTER-DYNAMIC(q/$*FOO/,{ say "hello"; 42 }); dd $*FOO

[13:39] <camelia> rakudo-moar 561076437: OUTPUT: «hello␤42␤»

[13:39] *** Doc_Holliwood joined
[13:39] <lizmat> jnthn: I meant that functionality

[13:41] <jnthn> Ah, that's a bit too special-case-y for general exposure

[13:41] <lizmat> more special casey than just poking it in GLOBAL or PROCESS ?

[13:42] *** Steven89 joined
[13:42] <jnthn> I mean it solves a "do some work on first use" problem, which is a general problem, but only for dynamic variables.

[13:43] *** Steven89 left
[13:43] *** natrys joined
[13:45] <lizmat> I guess we could move this to a userland module

[13:45] <lizmat> s/move/do

[13:45] <lizmat> s/to/in

[13:57] *** mayuresh joined
[13:57] <mayuresh> hello to all. :-)

[13:57] <mayuresh> it's been a while since I was here.

[13:57] <mayuresh> the roughness of life turned me into a horrible person.

[13:58] <mayuresh> realised it in time, took a break, recuperated.

[13:58] <mayuresh> feels nice to be nice amoung nice people

[13:58] <mayuresh> :-)

[13:58] <mayuresh> isn't anyone around?

[13:59] <mayuresh> gah, who am i kidding, it's too early on a sunday for most of you folks.

[13:59] <mayuresh> see you around after a couple of hours. :-)

[13:59] <mayuresh> bye.

[13:59] *** mayuresh left
[14:02] *** aborazmeh joined
[14:02] *** aborazmeh left
[14:02] *** aborazmeh joined
[14:08] *** tejr left
[14:17] *** guifa2 left
[14:17] *** tejr joined
[14:26] *** Anabella joined
[14:29] *** Anabella left
[14:32] *** rindolf left
[14:37] *** rindolf joined
[14:54] <Geth> ¦ ecosystem: melezhik++ created pull request #487: module moved to CPAN

[14:54] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/487

[14:55] <Geth> ¦ ecosystem: d8b5cce40d | (Alexey Melezhik)++ (committed using GitHub Web editor) | META.list

[14:55] <Geth> ¦ ecosystem: module moved to CPAN

[14:55] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/d8b5cce40d

[14:55] <Geth> ¦ ecosystem: 584fa82a3b | (Alexey Melezhik)++ (committed using GitHub Web editor) | META.list

[14:55] <Geth> ¦ ecosystem: Merge pull request #487 from melezhik/master

[14:55] <Geth> ¦ ecosystem: 

[14:55] <Geth> ¦ ecosystem: module moved to CPAN

[14:55] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/584fa82a3b

[15:04] <cpan-raku> New module released to CPAN! Sparrowdo::Cpanm::GitHub (0.0.3) by 03MELEZHIK

[15:13] <tbrowder> i'm about to dip into Raku on Win 10. for those with raku win experience, which is the best  path for installation in your opinion?

[15:17] <patrickb> tbrowder: That's a very subjective question. I'm a big fan of the precompiled zip archives that can be downloaded on rakudo.org. (Disclamer: I'm the one making those a reality)

[15:17] *** _jrjsmrtn left
[15:18] <tbrowder> patrickb: i'll give that a try, then, thnx

[15:19] <patrickb> tbrowder: The only other alternative I know of is Rakudo Star. That can also be downloaded from rakudo.org

[15:19] *** Altai-man_ joined
[15:19] <patrickb> tbrowder: Also rakubrew works on Windows. So you can use that as well.

[15:19] <tbrowder> a disclaimer: i just tried the star release for  2020.01 and it installed ok, but the raku executable seemed to be unhappy when running it in a command window.

[15:20] *** __jrjsmrtn__ joined
[15:20] <tbrowder> i used the in installer, not choclatey

[15:20] <tbrowder> *win

[15:22] *** sena_kun left
[15:39] <samebchase-> Hey Rakuers, I have added a description for Raku in my recommendations for programming languages to learn https://codesurfers.net/links/ (search for "Raku"). Let me know, if you would prefer me to make any modifications.

[15:46] <moritz> samebchase-: thanks for that!

[15:47] <moritz> samebchase-: if you have space for another sentence there, maybe mention concurrency using the observer pattern, and grammars?

[15:47] <samebchase-> I am planning to write an extended article about beginning programming with Raku on the same website. Will let you all know.

[15:48] <samebchase-> moritz: Can you please expand on the "observer pattern". Honestly, I don't know. I will make the modifications if you give me a short sentence. I can also add something about first-class grammar support.

[15:53] *** Doc_Holliwood left
[15:53] *** xinming left
[15:54] *** xinming joined
[16:05] <samebchase-> Added this paragraph: "Notable features include first-class support for grammars, modern concurrency primitives, a MOP, being able to easily define arbitrary operators, and keeping in line with Perl's legacy, all new regexes." cc: moritz

[16:10] <timotimo> not bad

[16:25] *** caterfxo left
[16:42] *** caterfxo joined
[16:48] <moritz> samebchase-: that's pretty good :D

[16:49] <moritz> samebchase-: re observer pattern, the most important part is that raku doesn't offer low-level primitives like threads and locks (it does, but it's not the primary API)

[16:49] <moritz> but instead primitives that compose well, like queues, tasks and supplies

[16:50] <moritz> and I just realize that "observer pattern" is likely the wrong term

[16:52] *** oneeggeach joined
[16:52] *** xinming left
[16:53] *** oneeggeach left
[16:54] *** xinming joined
[16:58] <Geth> ¦ problem-solving: JJ assigned to AlexDaniel Issue Give Travis.com permission to access raku-community-modules repositories https://github.com/Raku/problem-solving/issues/179

[17:02] *** mowcat joined
[17:06] *** Doc_Holliwood joined
[17:20] *** patrickb left
[17:20] *** sena_kun joined
[17:22] *** Altai-man_ left
[17:22] <Geth> ¦ ecosystem: 902545e4c1 | (David Warring)++ | META.list

[17:22] <Geth> ¦ ecosystem: renamed module sources: /p6-css/*-p6 -> /css-raku/*-raku

[17:22] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/902545e4c1

[17:37] <timotimo> true, observer pattern would really be using .tap and .close on the taps manually

[17:40] *** cpan-raku left
[17:40] *** cpan-raku joined
[17:40] *** cpan-raku left
[17:40] *** cpan-raku joined
[17:41] *** mowcat left
[17:41] *** mowcat joined
[17:45] *** rbt left
[17:46] *** rbt joined
[18:02] *** aborazmeh left
[18:15] *** xinming left
[18:15] *** xinming joined
[18:18] *** sjm_uk joined
[18:35] *** xinming left
[18:35] *** xinming joined
[19:07] *** farcas1982regreg left
[19:18] *** sjm_uk left
[19:19] *** Altai-man_ joined
[19:22] *** sena_kun left
[19:30] *** andrzejku joined
[19:30] *** manj-gnome_ joined
[19:30] *** manj-gnome_ left
[19:31] <chloekek> For some reason VS Code opens “.at” files as Raku

[19:35] <andrzejku> Hello

[19:38] <rindolf> andrzejku: hey

[19:39] <rindolf> chloekek: what are ".at" files?

[19:39] <andrzejku> rindolf, how is raku today?

[19:39] <rindolf> andrzejku: don't know

[19:42] <chloekek> rindolf: Seems to be Autotest, part of GNU Autotools

[19:42] <rindolf> chloekek: ah

[19:42] <chloekek> Now that I know it has to do with GNU Autotools, I also know I don’t want to have anything to do with these files :)

[19:45] <rindolf> chloekek: i don't see it here: https://duckduckgo.com/?q=autotest+autotools&atb=v193-1&ia=web

[19:51] <chloekek> p6: use *;

[19:51] <camelia> rakudo-moar 561076437: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    use used at line 1 (in Raku please use "v" prefix for pragma (e.g., "use v6;", "use v6.c;") instead)␤␤»

[19:51] <chloekek> p6: use **;

[19:51] <camelia> rakudo-moar 561076437: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    use used at line 1 (in Raku please use "v" prefix for pragma (e.g., "use v6;", "use v6.c;") instead)␤␤»

[19:53] <chloekek> p6: use v*;

[19:53] <camelia> rakudo-moar 561076437: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Could not find v in:␤    inst#/home/camelia/.raku␤    inst#/home/camelia/rakudo-m-inst-2/share/perl6/site␤    inst#/home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    inst#/home/camelia/rakudo-…»

[19:53] <chloekek> p6: use v6.*;

[19:53] <camelia> rakudo-moar 561076437: OUTPUT: «Don't know setting RESTRICTED␤   at gen/moar/ModuleLoader.nqp:257  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/Perl6/ModuleLoader.moarvm:previous_setting_name)␤ from gen/moar/ModuleLoader.nqp:261  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/…»

[20:00] *** lucasb joined
[20:35] <Geth> ¦ whateverable: b8895a49ae | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/build.p6

[20:35] <Geth> ¦ whateverable: Make it possible to use builds from any branch

[20:35] <Geth> ¦ whateverable: 

[20:35] <Geth> ¦ whateverable: This was almost done in 09c46d5915edfca48944fc8854dc85697cdf0d3d but

[20:35] <Geth> ¦ whateverable: it didn't fully work because non-master commits were not seen by the

[20:35] <Geth> ¦ whateverable: bots (even though builds were being created). #45 is now almost

[20:35] <Geth> ¦ whateverable: closable.

[20:35] <Geth> ¦ whateverable: 

[20:35] <Geth> ¦ whateverable: Currently you still have to use SHAs in order to get bots to use these

[20:35] <Geth> ¦ whateverable: builds (you can't use branch names), but hopefully it won't take

[20:35] <Geth> ¦ whateverable: long to improve that.

[20:35] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/b8895a49ae

[20:35] *** xinming left
[20:37] *** xinming joined
[20:58] *** aborazmeh joined
[20:58] *** aborazmeh left
[20:58] *** aborazmeh joined
[21:11] *** xinming left
[21:13] *** xinming joined
[21:16] *** aborazmeh left
[21:20] *** sena_kun joined
[21:22] *** Altai-man_ left
[21:23] *** mowcat left
[21:39] *** rindolf left
[21:44] *** chloekek left
[21:48] *** rbt left
[21:49] *** rbt joined
[21:50] <Geth> ¦ whateverable: 13bcd27a74 | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/build.p6

[21:50] <Geth> ¦ whateverable: Use <> in build.p6

[21:50] <Geth> ¦ whateverable: 

[21:50] <Geth> ¦ whateverable: Using <> (but *not* «») makes the code a little bit more readable.

[21:50] <Geth> ¦ whateverable: review: https://github.com/Raku/whateverable/commit/13bcd27a74

[21:53] *** andrzejku left
[22:02] <cpan-raku> New module released to CPAN! Sparrowdo::Cpanm::GitHub (0.0.4) by 03MELEZHIK

[22:09] *** dogbert11 joined
[22:18] <cpan-raku> New module released to CPAN! Sparrowdo::RemoteFile (0.0.4) by 03MELEZHIK

[22:34] *** natrys left
[22:38] *** Kaiepi left
[22:38] *** Kaeipi joined
[22:44] *** aborazmeh joined
[22:44] *** aborazmeh left
[22:44] *** aborazmeh joined
[22:45] *** xinming left
[22:46] *** xinming joined
[22:49] *** pecastro left
[22:52] *** cpan-raku left
[22:53] *** MasterDuke left
[22:53] *** cpan-raku joined
[22:53] *** cpan-raku left
[22:53] *** cpan-raku joined
[22:54] *** vike left
[22:56] *** xinming left
[22:58] *** xinming joined
[23:05] *** aborazmeh left
[23:08] *** aborazmeh joined
[23:08] *** aborazmeh left
[23:08] *** aborazmeh joined
[23:11] *** Kaeipi left
[23:13] *** xinming left
[23:13] *** xinming joined
[23:14] *** Kaiepi joined
[23:19] *** Altai-man_ joined
[23:22] *** sena_kun left
[23:37] *** Doc_Holliwood left
[23:39] *** rbt left
[23:49] *** lucasb left
[23:59] *** melezhik joined
[23:59] <melezhik> vrurg: Test-Async, last version succeeds on RakuDist - http://repo.westus.cloudapp.azure.com/rakudist/reports/Test::Async/centos/1587945144.txt

