[00:18] *** pduh joined
[00:33] *** TimToady left
[00:36] <rypervenche> I wonder if this is related: https://github.com/Raku/old-issue-tracker/issues/5669

[00:39] *** xinming left
[00:40] *** xinming joined
[00:40] *** BenGoldberg left
[01:07] <Geth> ¦ doc: coke assigned to tbrowder Issue Take advantage of new Raku --doc=auth-fmt capability https://github.com/Raku/doc/issues/3414

[01:12] <Geth> ¦ doc: coke self-assigned style choice of sub-directory https://github.com/Raku/doc/issues/3023

[01:14] *** molaf left
[01:15] *** qwedf joined
[01:15] *** qwedf left
[01:15] <rypervenche> Oh, I got it to work by adding a "my" to the second one. Interesting.

[01:17] <Geth> ¦ Raku-Steering-Council/main: e90a227248 | (Aleks-Daniel Jakimenko-Aleksejev)++ | nominations/2020/acceptance.txt

[01:17] <Geth> ¦ Raku-Steering-Council/main: Add my acceptance

[01:17] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/e90a227248

[01:18] *** __jrjsmrtn__ joined
[01:20] *** _jrjsmrtn left
[01:24] <Geth> ¦ doc: ec82de941e | Coke++ | xt/word-variants.t

[01:24] <Geth> ¦ doc: alphabetize

[01:24] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/ec82de941e

[01:24] <Geth> ¦ doc: 56594ec8ed | Coke++ | 2 files

[01:24] <Geth> ¦ doc: prefer 'subdirectory'.

[01:24] <Geth> ¦ doc: 

[01:24] <Geth> ¦ doc: Closes #3023

[01:24] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/56594ec8ed

[01:24] <linkable6> DOC#3023 [closed]: https://github.com/Raku/doc/issues/3023 [xt] style choice of sub-directory

[01:24] <Geth> ¦ doc: a88182cd22 | Coke++ | doc/Language/modules.pod6

[01:24] <Geth> ¦ doc: fix whitespace

[01:24] <linkable6> Link: https://docs.raku.org/language/modules

[01:24] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a88182cd22

[01:26] *** molaf joined
[01:44] *** xinming left
[01:44] *** xinming joined
[01:48] *** stanrifkin left
[02:13] *** marcusr left
[02:14] *** marcusr joined
[02:19] *** Maylay left
[02:21] *** Maylay joined
[02:24] *** pduh left
[02:24] *** peterduh left
[02:58] *** kent\n joined
[02:58] *** Black_Ribbon left
[03:06] *** ex_nihilo joined
[03:14] *** mowcat left
[03:41] *** MilkmanDan left
[03:42] *** MilkmanDan joined
[04:02] *** zacts joined
[04:22] *** BenGoldberg joined
[04:53] *** skids left
[04:55] *** andrzejku joined
[04:55] *** BenGoldberg left
[05:07] *** aluaces joined
[05:19] *** molaf left
[05:40] *** kent\n left
[05:41] *** kent\n joined
[05:49] *** xinming left
[05:50] *** xinming joined
[05:53] *** jmerelo joined
[06:09] <jmerelo> Morning all. Created a specific page for hacktoberfest-friendly issues in the Rakuverse here https://raku.github.io/hacktoberfest/ Please add your proposal via PR 

[06:12] <Xliff> Where's this year's hacktoberfest page?

[06:13] <jmerelo> Xliff: right there or https://github.com/Raku/hacktoberfest if you want to go there directly

[06:13] <Xliff> Thanks!

[06:53] *** linkable6 left
[07:05] *** rindolf joined
[07:14] *** Sgeo left
[07:15] *** domidumont joined
[07:24] *** aluaces left
[07:24] *** dakkar joined
[07:43] <MasterDuke> timotimo: looks good. only thing i saw was inconsistent capitalization between MoarMV/nqp/raku/rakudo/etc

[07:45] *** leont joined
[07:46] *** ex_nihilo left
[07:47] *** BenGoldberg joined
[07:56] *** sena_kun joined
[08:12] *** rindolf left
[08:21] *** BenGoldberg left
[08:28] *** ecocode left
[08:32] *** ecocode joined
[08:39] *** frot-lab joined
[09:20] *** aborazmeh left
[09:22] *** smotchkkiss joined
[09:31] *** aluaces joined
[09:34] *** smotchkkiss left
[09:37] *** smotchkkiss joined
[09:40] *** Altai-man joined
[09:43] *** sena_kun left
[09:43] *** smotchkkiss left
[09:45] *** smotchkkiss joined
[10:18] *** k-man left
[10:19] *** smotchkkiss left
[10:21] *** k-man joined
[10:23] *** smotchkkiss joined
[10:26] *** k-man left
[10:32] *** k-man joined
[10:52] *** smotchkkiss left
[11:12] *** BenGoldberg joined
[11:46] *** dudz joined
[11:46] *** dudz left
[11:46] *** dudz joined
[11:46] *** BenGoldberg left
[11:46] *** kst`` joined
[11:48] *** kst` left
[11:50] *** ggoebel_ joined
[11:50] *** aborazmeh joined
[11:50] *** aborazmeh left
[11:50] *** aborazmeh joined
[11:52] *** ggoebel left
[11:56] *** ggoebel__ joined
[11:59] *** ggoebel_ left
[12:06] *** ggoebel__ left
[12:06] *** kensanata joined
[12:12] *** ggoebel joined
[12:20] *** frot-lab left
[12:36] *** jmerelo left
[12:41] *** Juerd left
[12:51] *** rir joined
[13:09] *** molaf joined
[13:16] *** andrzejku left
[13:17] *** aborazmeh left
[13:19] *** kensanata left
[13:21] *** ggoebel_ joined
[13:23] *** ggoebel left
[13:30] <[Coke]> .ask jmerelo - why use the unlicense? If someone is submitting something through that site on the way to another repo, we don't want to have a license mismatch.

[13:30] <tellable6> [Coke], I'll pass your message to jmerelo

[13:31] *** john_parr_ joined
[13:32] *** john_parr_ left
[13:36] *** ggoebel_ left
[13:37] *** aborazmeh joined
[13:37] *** aborazmeh left
[13:37] *** aborazmeh joined
[13:40] *** benlittle joined
[13:41] *** sena_kun joined
[13:42] *** molaf left
[13:42] *** Altai-man left
[13:44] *** ggoebel joined
[13:47] *** aborazmeh left
[13:49] *** aluaces left
[13:55] *** kensanata joined
[14:02] *** benlittle left
[14:03] *** Sgeo joined
[14:06] *** ben_ joined
[14:06] *** ben_ left
[14:06] *** benlittle joined
[14:08] *** andrzejku joined
[14:08] *** rindolf joined
[14:22] *** benlittle left
[14:23] *** Possum left
[14:37] *** BenGoldberg joined
[14:51] *** molaf joined
[14:54] *** zacts left
[15:07] *** linkable6 joined
[15:08] *** squashable6 joined
[15:08] *** jmerelo joined
[15:12] *** BenGoldberg left
[15:17] *** zacts joined
[15:21] *** gdonald joined
[15:25] *** skids joined
[15:26] *** mowcat joined
[15:27] *** mowcat left
[15:28] *** domidumont left
[15:30] *** benlittle joined
[15:40] <timotimo> notable6: weekly https://wakelift.de/can-you-appimageine-that/ 

[15:40] <notable6> timotimo, Noted! (weekly)

[15:41] <timotimo> *clickbaits*

[15:41] *** Black_Ribbon joined
[15:45] <lizmat> sena_kun++   # a new Comma Complete release: https://twitter.com/koto_san_kana/status/1309156145001529346

[15:54] *** vrurg joined
[15:55] <sena_kun> jnthn++ for rescuing it

[15:56] *** vrurg_ joined
[15:56] *** vrurg_ left
[15:59] *** vrurg left
[16:01] *** aborazmeh joined
[16:01] *** aborazmeh left
[16:01] *** aborazmeh joined
[16:18] *** cpan-raku left
[16:19] *** cpan-raku joined
[16:19] *** cpan-raku left
[16:19] *** cpan-raku joined
[16:24] *** natrys joined
[16:36] *** dakkar left
[17:23] *** aluaces joined
[17:27] *** kensanata left
[17:29] *** andrzejku left
[17:34] *** andrzejku joined
[17:40] *** Altai-man joined
[17:42] *** sena_kun left
[17:54] *** jmerelo left
[17:59] *** Xliff left
[18:03] *** BenGoldberg joined
[18:03] <phogg> is there some method on Str analogous to strspn()/strcspn()? Or, how would you do the same thing the Raku way?

[18:07] <[Coke]> phogg: given $a, $b of "thistle", "this", that's 4, "thistle", "nope" is 0... what is "thistle", "that". 2?

[18:08] <codesections> phogg: The way I'd do this would probably be with a regex: 

[18:09] <codesections> m: say ('129th' ~~ /^\d+/).pos

[18:09] <camelia> rakudo-moar 85847d2f1: OUTPUT: «3␤»

[18:09] <codesections> (^^^ same as http://www.cplusplus.com/reference/cstring/strspn/)

[18:10] <codesections> (and `\d` could be a character range, like `<[abgiqu]>`)

[18:10] *** zacts left
[18:11] <[Coke]> oh, I misread that function definition.

[18:11] <[Coke]> codesections++

[18:11] <phogg> regex is the obvious choice, but constructing the character classes and handling the negative case is a bit of work

[18:12] <phogg> not the pleasant experience I was hoping for. I'll probably add something to Str to hide the noise.

[18:12] <Altai-man> This seems like a very specific case to add it to Str.

[18:13] <Altai-man> Can be done in a library, though.

[18:13] <phogg> what's all this mutability for if I can't extend the language locally?

[18:13] <phogg> s/can't/don't/ # or whatever

[18:13] <codesections> phogg: Maybe I'm misunderstanding how `strspn` works, but isn't `cset[] = "1234567890"` exactly the same as `^<[1234567890]>`?  

[18:14] <Altai-man> Ah, you can extend it locally.

[18:14] <phogg> codesections: it lacks a certain obviousness

[18:14] <Altai-man> I mean, it sounds very specific to add it to the language for everyone.

[18:14] <phogg> yeah, it's probably not too common

[18:15] <phogg> I'm converting some existing parser code and it's easier to not re-think all of the logic, at least not in the first pass

[18:15] *** molaf left
[18:16] <codesections> I guess obviousness is in the eye of the beholder :D  I'd find the regex version more obvious (and would need documentation to know what parameters to strspn mean).  But I can understand if you feel the other way

[18:16] <phogg> I only really came here looking for the secret $string[<weird raku magic>] answer that I wasn't seeing, if any.

[18:17] <lizmat> phogg: you can call routines from the standard library with nativeCall?

[18:17] <lizmat> which, if you're handling ASCII only, should be fine

[18:17] <codesections> m: say '129th'.match(/^\d+/).pos

[18:17] <camelia> rakudo-moar 85847d2f1: OUTPUT: «3␤»

[18:17] <phogg> codesections: well, if you had it in method form it would be "thistle".whatever("this") or "thistle".notwhatever("that");

[18:18] <codesections> ^^^ if you want a method form

[18:18] <Altai-man> m: sub foo($pattern, $str) { my @chars = $pattern.comb.unique; ($str ~~ m:g/@chars+/).max }; foo("strrrr", 'heh st strr ee')

[18:18] <camelia> rakudo-moar 85847d2f1: ( no output )

[18:18] <Altai-man> m: sub foo($pattern, $str) { my @chars = $pattern.comb.unique; ($str ~~ m:g/@chars+/).max }; foo("strrrr", 'heh st strr ee').say

[18:18] <camelia> rakudo-moar 85847d2f1: OUTPUT: «｢strr｣␤»

[18:18] <Altai-man> m: sub foo($pattern, $str) { my @chars = $pattern.comb.unique; ($str ~~ m:g/@chars+/).max }; say "strrrr".&foo('heh st strr ee')

[18:18] <camelia> rakudo-moar 85847d2f1: OUTPUT: «｢strr｣␤»

[18:18] <Altai-man> ^ this is method form

[18:18] <phogg> lizmat: not a bad idea

[18:19] <lizmat> https://docs.raku.org/language/nativecall#Calling_into_the_standard_library

[18:19] <Altai-man> m: sub whatever($str, $pattern) { my @chars = $pattern.comb.unique; ($str ~~ m:g/@chars+/).max }; say "thistle".&whatever('this')

[18:19] <camelia> rakudo-moar 85847d2f1: OUTPUT: «｢thist｣␤»

[18:19] <Altai-man> phogg, ^

[18:22] <phogg> Altai-man: thanks

[18:23] *** bocaneri left
[18:36] *** skids left
[18:36] *** BenGoldberg left
[18:44] *** MasterDuke left
[19:04] *** kst joined
[19:07] *** kst`` left
[19:07] *** kst left
[19:07] *** kst joined
[19:10] <Geth> ¦ Raku-Steering-Council/acceptance-jj: e90a227248 | (Aleks-Daniel Jakimenko-Aleksejev)++ | nominations/2020/acceptance.txt

[19:10] <Geth> ¦ Raku-Steering-Council/acceptance-jj: Add my acceptance

[19:10] <Geth> ¦ Raku-Steering-Council/acceptance-jj: review: https://github.com/Raku/Raku-Steering-Council/commit/e90a227248

[19:10] <Geth> ¦ Raku-Steering-Council/acceptance-jj: f69581515e | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | nominations/2020/acceptance.txt

[19:10] <Geth> ¦ Raku-Steering-Council/acceptance-jj: Merge branch 'main' into acceptance-jj

[19:10] <Geth> ¦ Raku-Steering-Council/acceptance-jj: review: https://github.com/Raku/Raku-Steering-Council/commit/f69581515e

[19:11] <Geth> ¦ Raku-Steering-Council/main: 0ea2b886e7 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | nominations/2020/acceptance.txt

[19:11] <Geth> ¦ Raku-Steering-Council/main: Adds myself

[19:11] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/0ea2b886e7

[19:11] <Geth> ¦ Raku-Steering-Council/main: f69581515e | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | nominations/2020/acceptance.txt

[19:11] <Geth> ¦ Raku-Steering-Council/main: Merge branch 'main' into acceptance-jj

[19:11] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/f69581515e

[19:11] <Geth> ¦ Raku-Steering-Council/main: 9d61712e82 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | nominations/2020/acceptance.txt

[19:11] <Geth> ¦ Raku-Steering-Council/main: Merge pull request #36 from Raku/acceptance-jj

[19:11] <Geth> ¦ Raku-Steering-Council/main: 

[19:11] <Geth> ¦ Raku-Steering-Council/main: Adds myself

[19:11] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/9d61712e82

[19:15] *** benlittle left
[19:17] *** MasterDuke joined
[19:30] *** abraxxa left
[19:32] *** abraxxa joined
[19:40] *** MasterDuke left
[19:47] *** rindolf left
[19:59] *** MasterDuke joined
[20:04] *** molaf joined
[20:15] *** AlexDaniel left
[20:15] *** AlexDaniel joined
[20:16] *** AlexDaniel left
[20:16] *** AlexDaniel joined
[20:20] *** andrzejku left
[20:25] <Geth> ¦ Raku-Steering-Council/main: 6e088e1db3 | (Jonathan Worthington)++ (committed using GitHub Web editor) | nominations/2020/acceptance.txt

[20:25] <Geth> ¦ Raku-Steering-Council/main: Accept nomination

[20:25] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/6e088e1db3

[20:29] *** natrys left
[20:51] *** squashable6 left
[20:53] *** squashable6 joined
[20:54] *** Altai-man left
[21:15] *** skids joined
[21:28] *** BenGoldberg joined
[21:44] <moon-child> this might be more of a #moarvm question--let me know if it is--but is there any way to interactively view disassembly for a function or block?

[21:48] <AlexDaniel> moon-child: no

[21:48] <AlexDaniel> moon-child: you're interested in machine code, right? Not just AST?

[21:50] <AlexDaniel> timotimo: ↑ maybe you know a trick on how to get something?

[21:54] *** wamba joined
[22:00] <AlexDaniel> btw I used to think that it wouldn't be possible or at least wouldn't be useful, but julia does it and it's neat: https://gist.github.com/AlexDaniel/0b2f88f6348f97551bbbc041dc41be6c

[22:01] <AlexDaniel> note that if you pass different types it'll give different code :)

[22:02] *** BenGoldberg left
[22:20] *** MasterDuke left
[22:23] <moon-child> AlexDaniel: yes, machine code

[22:24] <moon-child> AlexDaniel: I think I was vaguely aware that julia had that feature, but I mainly know it from lisp

[22:25] <AlexDaniel> yeah, we don't have anything as accessible to do that

[22:25] <moon-child> e.g. try (disassemble #'(lambda (x y) (+ x y))) in sbcl or ccl

[22:26] <AlexDaniel> moon-child: btw I'm interested to know why you need that :)

[22:26] <moon-child> no reason in particular; just curious about mvm codegen

[22:27] <AlexDaniel> ah, maybe try #moarvm indeed, people more knowledgeable than me should be able to chime in :)

[22:27] <AlexDaniel> it's a bit quiet during this time of day but still

[22:34] *** mowcat joined
[22:45] *** BenGoldberg joined
[23:03] *** Kaiepi left
[23:05] *** Kaiepi joined
[23:19] <timotimo> moon-child: you can set an env var to get moar to dump all the assembly in a folder of your choice

[23:20] <timotimo> i recommend setting it together with the spesh log so you can correlate the output of that with the assembly files

[23:20] <timotimo> the magical incantation to disassemble lookslike 

[23:20] <timotimo> objdump -D -b binary -m i386:x86-64 -M intel /tmp/moar-jit.21554/moar-jit-0038.bin

[23:21] <moon-child> cool!  Would be nice to be able to use interactively, but that's a start

[23:21] <moon-child> what's the env var?  I can only find MVM_JIT_DUMP_BYTECODE

[23:24] <timotimo> yeah dump bytecode is one, MVM_SPESH_LOG is the other

[23:25] <timotimo> you might find shocking what you see :P

[23:29] <moon-child> wow!  That's . . . big

[23:30] <moon-child> is there a good way to distinguish individual functions?

[23:30] *** ggoebel left
[23:30] <timotimo> it should have a map file in the folder

[23:32] <moon-child> nope; just .bin files and the log file

[23:34] <timotimo> there's also MVM_JIT_DEBUG=1 which puts more info in the spesh log

[23:52] *** frot-lab joined
