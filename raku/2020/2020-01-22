[00:06] *** lucasb left
[00:13] <lizmat> weekly: http://blogs.perl.org/users/damian_conway/2020/01/springtime-in-switzerland.html

[00:13] <notable6> lizmat, Noted! (weekly)

[00:15] <tony-o> so many META6.json's missing "auth"

[00:17] *** gabiruh joined
[00:23] <Xliff> And that's for?

[00:24] *** brisby joined
[00:25] <brisby> I'm having trouble installing rakudo star on openbsd 6.6

[00:25] <brisby> MoarVM panic: Unable to allocate memory for callback closure

[00:25] <brisby> Any tips?

[00:29] <lizmat> how much RAM do you have?

[00:29] <lizmat> you generally need ~1.5G to be able to build Rakudo

[00:29] <brisby> 8 gib

[00:30] <lizmat> then that's not the reason  :-)

[00:30] <lizmat> is that amount free ?

[00:30] <brisby> It built fine when I used gcc instead of clang, but calling perl6 results in the error

[00:32] <jnthn> brisby: is it just if you run `perl6` to get the REPL? Does `perl6 -e 'say 42'` work?

[00:32] <lizmat> you should probably make an issue for that with OS info + whatever stack traces you have

[00:33] * lizmat is too tired to stay at the keyboard

[00:33] <lizmat> so goes off to sleep&

[00:33] <jnthn> I think https://github.com/rakudo/star/issues/127 is related (summary: building MoarVM with dyncall on OpenBSD results in this error, but doing it with libffi works)

[00:34] <brisby> yes, it just when I try to get the repl

[00:34] <brisby> `perl6 -e 'say 42'` works

[00:36] <jnthn> Yeah, then probably it's the dyncall dependency having an issue on OpenBSD

[00:42] <brisby> okay, thanks

[00:42] *** brisby left
[00:50] *** benjif_ joined
[00:52] *** benjif left
[01:13] *** melezhik left
[01:23] *** benjif_ left
[01:36] *** wildtrees left
[01:44] <Doc_Holliwood> What's the nicest way to split a string in two (or more) substrings based on positions?

[01:45] <Doc_Holliwood> I mean, just chain substr calls doesn't seem to be the raku way

[01:48] <Doc_Holliwood> something like my ($as, $bs, $cs) = "aaabbcccc".split( :at(3, 5) ); would be nice

[01:49] <Doc_Holliwood> I realize this example could be solved by comb, that's not the point

[02:10] *** Kaiepi left
[02:12] *** Kaiepi joined
[02:35] *** xinming_ left
[02:35] *** xinming_ joined
[02:42] *** squashable6 left
[02:43] *** squashable6 joined
[02:46] *** xinming_ left
[02:46] *** xinming_ joined
[02:52] *** sarna left
[02:54] <Xliff> m: sub @a(*@pos) { @pos.shift.say }; @a(3, 5)

[02:54] <camelia> rakudo-moar 11a8d57f6: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3sub7‚èè5 @a(*@pos) { @pos.shift.say }; @a(3, 5)‚ê§    expecting any of:‚ê§        new name to be defined‚ê§¬ª

[02:54] <Xliff> m: sub @a (*@pos) { @pos.shift.say }; a(3, 5)

[02:54] <camelia> rakudo-moar 11a8d57f6: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3sub7‚èè5 @a (*@pos) { @pos.shift.say }; a(3, 5)‚ê§    expecting any of:‚ê§        new name to be defined‚ê§¬ª

[02:54] <Xliff> m: sub a (*@pos) { @pos.shift.say }; a(3, 5)

[02:54] <camelia> rakudo-moar 11a8d57f6: OUTPUT: ¬´3‚ê§¬ª

[02:56] <Xliff> m: sub a (*@pos) { gather while @pos { @pos.unshift.say }; }; a(3, 5)

[02:56] <camelia> rakudo-moar 11a8d57f6: OUTPUT: ¬´(timeout)[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3 5]‚ê§[3‚Ä¶¬ª

[02:57] *** tinita left
[03:00] *** sarna joined
[03:05] <cpan-raku> New module released to CPAN! Trait::Traced (0.1.2) by 03KAIEPI

[03:06] <Xliff> Doc_Holliwood: It's not pretty, but... https://gist.github.com/Xliff/e1a0e93da6c067b0873a9a215378e8ea

[03:27] *** tinita joined
[04:06] *** Xliff left
[04:17] *** gabiruh left
[04:17] *** gabiruh joined
[05:07] *** Alchemy joined
[05:08] *** Alchemy is now known as Guest67560

[05:10] *** daemon left
[05:12] *** ensamvarg joined
[05:28] *** sisar joined
[05:29] <sisar> just submitted a new bug report: https://github.com/rakudo/rakudo/issues/3439 

[05:41] *** tony-o left
[05:41] *** tony-o_ joined
[05:46] *** sisar left
[05:50] <Geth> ¬¶ doc: 927f033a39 | (Peter du Marchie van Voorthuysen)++ | doc/Type/X/Cannot/Lazy.pod6

[05:50] <Geth> ¬¶ doc: Document X::Cannot::Lazy

[05:50] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/927f033a39

[05:50] <Geth> ¬¶ doc: 07916b8d83 | (Peter du Marchie van Voorthuysen)++ (committed using GitHub Web editor) | doc/Type/X/Cannot/Lazy.pod6

[05:50] <Geth> ¬¶ doc: Merge pull request #3181 from dumarchie/#3163

[05:50] <Geth> ¬¶ doc: 

[05:50] <Geth> ¬¶ doc: Document X::Cannot::Lazy

[05:50] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/07916b8d83

[05:56] *** wamba joined
[06:02] *** wamba left
[06:27] *** sauvin joined
[06:41] *** kensanata joined
[06:53] *** domidumont joined
[06:54] *** diegoalc joined
[06:55] *** jmerelo joined
[06:57] <Geth> ¬¶ doc: ea0b00f14d | (JJ Merelo)++ | type-graph.txt

[06:57] <Geth> ¬¶ doc: Adds to type-graph missing type

[06:57] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/ea0b00f14d

[07:08] *** ensamvarg left
[07:19] *** Doc_Holliwood left
[07:27] *** domidumont left
[07:38] *** squashable6 left
[07:40] *** squashable6 joined
[07:41] *** jmerelo left
[07:48] *** patrickb joined
[08:01] *** Doc_Holliwood joined
[08:13] *** stoned75 left
[08:15] *** sena_kun joined
[08:24] *** maggotbrain left
[08:41] *** maggotbrain joined
[08:47] *** rindolf joined
[09:02] *** Guest67560 left
[09:02] *** Guest67560 joined
[09:02] *** Guest67560 is now known as daemon

[09:02] *** Doc_Holliwood left
[09:05] *** scimon joined
[09:05] <scimon> Morning

[09:25] *** sena_kun left
[09:33] *** diegoalc left
[10:17] *** wamba joined
[10:21] *** ensamvarg joined
[10:22] *** Doc_Holliwood joined
[10:38] <cpan-raku> New module released to CPAN! Test::Deeply::Relaxed (0.1.3) by 03ROAM

[10:42] <Doc_Holliwood> Xliff: Thanks, but that's not what I meant.

[10:42] <tellable6> Doc_Holliwood, I'll pass your message to Xliff

[10:45] *** xinming_ left
[10:46] *** xinming_ joined
[10:53] *** wamba left
[11:30] *** kensanata left
[11:35] <Geth> ¬¶ doc: 26500693c0 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[11:35] <Geth> ¬¶ doc: Change locations

[11:35] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/26500693c0

[11:37] <Geth> ¬¶ doc: 4e19170565 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[11:37] <Geth> ¬¶ doc: Correct address

[11:37] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/4e19170565

[11:39] <Geth> ¬¶ doc: ccac96a0f0 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING_PRs.md

[11:39] <Geth> ¬¶ doc: Remove file which is available elsewhere

[11:39] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/ccac96a0f0

[11:51] *** Doc_Holliwood left
[12:16] *** kensanata joined
[12:27] *** gabiruh_ joined
[12:29] *** gabiruh left
[12:40] *** sena_kun joined
[12:41] <cpan-raku> New module released to CPAN! Getopt::Std (1.0.2) by 03ROAM

[12:59] *** masak joined
[13:25] *** wamba joined
[13:36] *** lizmat left
[13:38] *** lizmat joined
[13:43] <cpan-raku> New module released to CPAN! Shell::Capture (0.2.4) by 03ROAM

[13:46] *** pheix joined
[13:48] <pheix> Hello, friends! Are there any news about new Rakudo Star release? 2019.03 seems to be so old (((

[13:49] *** dogbert11 joined
[13:49] <tellable6> 2019-12-26T00:39:52Z #raku <tbrowder> pheix: thnx, that's my vote also

[13:51] *** dogbert17 left
[13:59] <rypervenche> pheix: There will be a new rakudo release probably in the next few days, and I believe there will also be a rakudo star release for it as well.

[14:07] *** abraxxa left
[14:07] <cpan-raku> New module released to CPAN! Gnome::Glib (0.15.5.2) by 03MARTIMM

[14:09] <Kaiepi> releasable6, status

[14:09] <releasable6> Kaiepi, Next release will happen when it's ready. 1 blocker. 0 out of 511 commits logged

[14:09] <releasable6> Kaiepi, Details: https://gist.github.com/576c2d0cc150980c45411bea1c68e4a8

[14:09] <[Coke]> team++

[14:10] <pheix> rypervenche: thank you!

[14:11] <pheix> rypervenche: good news

[14:15] <cpan-raku> New module released to CPAN! Gnome::GObject (0.15.11.5) by 03MARTIMM

[14:17] <cpan-raku> New module released to CPAN! Gnome::Gdk3 (0.15.1.2) by 03MARTIMM

[14:25] *** veesh_ joined
[14:26] *** veesh left
[14:27] *** veesh_ is now known as veesh

[14:29] <rba> Downtime expected this saturday for hosting of raku/rakudo websites due to VM migration.

[14:43] *** sena_kun left
[14:44] *** lucasb joined
[14:45] *** Doc_Holliwood joined
[14:47] *** mcmillhj joined
[14:48] <mcmillhj>  Is there something built-in I can use for benchmarking? Or a module that anyone would recommend for this use?

[14:49] *** abraxxa joined
[14:53] *** kensanata left
[14:58] *** sena_kun joined
[15:02] *** mdmkolbe joined
[15:02] <rypervenche> mcmillhj: Check out: https://docs.raku.org/language/performance

[15:06] <mdmkolbe> I'm not sure if this is the right place to ask, but I'm having trouble with `zef`.  Running `zef install PrettyDump` produces `===> Fetching [FAIL]: PrettyDump:ver<1.1.7> from [email@hidden.address] due to fetch failure: PrettyDump:ver<1.1.7> (use --force-fetch to override)`.  Is the package setup wrong or something?

[15:11] <[Coke]> seeing the same issue here, guessing it's a problem with the repo def added to the ecosystem list.

[15:13] <[Coke]> looks like maybe he renamed the git repo

[15:13] <[Coke]> try this:

[15:13] <rypervenche> Not sure if this is related, but it's got build failures on its Github page.

[15:14] <[Coke]> zef install https://github.com/briandfoy/perl6-PrettyDump.git

[15:14] <[Coke]> it's missing the "perl6-" in the ecosystem

[15:14] <[Coke]> e.g. https://raw.githubusercontent.com/ugexe/Perl6-ecosystems/master/p6c1.json

[15:17] <[Coke]> Weird, looks like it's updated here: https://github.com/Raku/ecosystem/blob/master/META.list

[15:17] <[Coke]> wonder if the mirrors need a kick

[15:18] <mdmkolbe> [Coke]: Thank you for the `zef` command to use the repository directly.  That solved my immediate problem.  (Though of course it sounds like something wider in the ecosystem is off.)

[15:20] <[Coke]> wonder if the rename from perl6/ to Raku/ in our ecosystem repo wasn't tracked on the mirror.

[15:23] * [Coke] opens https://github.com/ugexe/Perl6-App--ecogen/issues/6

[15:24] *** aluaces left
[15:33] *** MasterDuke left
[15:35] *** mahmudov joined
[15:36] *** mdmkolbe left
[15:52] *** mcmillhj left
[16:14] <Doc_Holliwood> what soes "reified" mean?

[16:16] <jnthn> Typically it's used in the context of a lazy list, and elements that have been reified are those that have been produced and stored in the list so far

[16:18] *** patrickb left
[16:18] <Doc_Holliwood> so a reified sequence is one which has been completely exhausted

[16:19] <Doc_Holliwood> jnthn, remember the parallel sorting issue I put on SO the other day?

[16:20] <jnthn> I think it was more than some days... :)

[16:20] <jnthn> Long enough my memory is hazy... :)

[16:20] <Doc_Holliwood> I played around with it and found, while it's faster for unsorted things, it is slower for already sorted things

[16:21] <Doc_Holliwood> and so i poked around, ended up in nqp and the sort used already is a mergesort, right?

[16:21] <Doc_Holliwood> so why not make it parallel in the first place?

[16:22] <jnthn> Well, on a HyperSeq or RaceSeq it can be

[16:22] <jnthn> It's just not implemented that way yet

[16:22] <Doc_Holliwood> https://stackoverflow.com/questions/58386214/create-a-sorted-list-from-n-sorted-sublists-efficiently

[16:31] <Doc_Holliwood> man, nqp is hard to read

[16:38] *** mahmudov left
[16:40] *** mahmudov joined
[16:44] *** sena_kun left
[16:46] *** aluaces joined
[16:53] *** mahmudov left
[16:54] *** mahmudov joined
[16:54] *** scimon left
[16:55] *** scimon joined
[16:57] *** pheix left
[16:58] *** sena_kun joined
[17:03] *** daemon left
[17:06] *** patrickb joined
[17:07] *** mahmudov left
[17:09] *** domidumont joined
[17:11] *** mahmudov joined
[17:12] *** ensamvarg left
[17:14] *** perryprog left
[17:18] *** perryprog joined
[17:20] *** melezhik joined
[17:33] *** mensvaga left
[17:33] *** scimon left
[17:42] *** jmerelo joined
[17:42] *** xinming_ left
[17:42] *** xinming_ joined
[17:43] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.21.3.1) by 03MARTIMM

[17:52] *** ToddAndMargo joined
[17:53] <ToddAndMargo> Hi Guys!  Where would I Place a request for Enhancement to Raku?  Git something?

[17:53] <tellable6> hey ToddAndMargo, you have a message: https://gist.github.com/9e0f849c02a565481e8bbac0be05accc

[17:54] <El_Che> it depends what you want to enhance :)

[17:54] <[Coke]> probably https://github.com/Raku/problem-solving

[17:55] <ToddAndMargo> Do you mind if I run it past you guys first?

[17:55] <[Coke]> but yah, feel free to bounce it here and see if you get a different answer.

[17:55] <[Coke]> heh

[17:55] <El_Che> (it may be an implementaton isue -> rakudo)

[17:59] <ToddAndMargo> I am double checking my spelling and typoes

[18:01] <ToddAndMargo> Okay, I live and die by top down. I have subs and modules out the nose. On the declaration line of a sub, I love to use the "returns" or the "-->" syntax. This give a good idea at a glance what the sub does and helps with maintainability and readability. Well, me at least. So when I return two of more values `return($a, $b, $c)` from a sub, I would

[18:01] <ToddAndMargo> like you guys to add to the declaration line a way to do a ‚Äúreturns‚Äù for that situation. Something like `-->$a, $b, $c` or `returns $a, $b, $c`.  Do you think this RFE would be accepted?

[18:04] <ToddAndMargo> oops.  Sorry. `returns Int,UInt,Str`, not the variable names

[18:07] <[Coke]> I think this is doable. one sec.

[18:07] <ToddAndMargo> :-)

[18:08] *** wildtrees joined
[18:08] *** yapp joined
[18:09] <lucasb> m: subset Tuple where * ~~ (Int, UInt, Str); sub f($a,$b,$c --> Tuple) { ($a,$b,$c) }; say f(-1, 5, 'x')

[18:09] <camelia> rakudo-moar b7a63a507: OUTPUT: ¬´(-1 5 x)‚ê§¬ª

[18:10] <lucasb> m: subset Tuple where * ~~ (Int, UInt, Str); sub f($a,$b,$c --> Tuple) { ($a,$b,$c) }; say f(-1, 5, 0)

[18:10] <camelia> rakudo-moar b7a63a507: OUTPUT: ¬´Type check failed for return value; expected Tuple but got List ($(-1, 5, 0))‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:10] <[Coke]> trying subsignature, capture...

[18:10] *** yapp left
[18:12] <ToddAndMargo> I would like it to give the order of the returned types as well.  A subset would mix them up.

[18:13] <[Coke]> Not the way lucasb is doing it. subset showing an order, not a set of types.

[18:14] <[Coke]> I don't see a way to do it inline.

[18:14] <[Coke]> m: m: subset Tuple where * ~~ (Int, UInt, Str); sub f($a,$b,$c --> Tuple) { ($a,$b,$c) }; say f(-1, 'x', 5)

[18:14] <camelia> rakudo-moar b7a63a507: OUTPUT: ¬´Type check failed for return value; expected Tuple but got List ($(-1, "x", 5))‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:14] <[Coke]> ^^ see, the order matters.

[18:15] <jmerelo> ToddAndMargo: you can simply return a list. Every element will have a different type. You'll have to check types individually on the receiving end. No biggie.

[18:15] <ToddAndMargo> May I impose on you for an example?

[18:15] <[Coke]> yes, manually checking things that can be caught by the returns syntax is a biggie.

[18:16] <jmerelo> ToddAndMargo: also, subsets do not mix stuff up. What a subset does is exactly that: create a type-checked aggregate and give it a name.

[18:17] <jmerelo> [Coke]: you are also returning them; you can check them before returning. It's either that or use a pre-defined subset that does that for you.

[18:17] <[Coke]> I think if there's an ask here, it'd be to be able to do this without explicitly declaring the subset, with a sub-signature.

[18:17] <ToddAndMargo> I meant the if you are sending back two different types in a particular order, a subset would not give you that information 

[18:18] <jmerelo> [Coke]: well, having a "where" clause on the return type would be nice.

[18:18] <[Coke]> ToddAndMargo: yes, it does.

[18:18] <[Coke]> we showed you an example that cared about the order.

[18:18] <ToddAndMargo> May I impose on you for an example?

[18:18] <[Coke]> m: subset Tuple where * ~~ (Int, UInt, Str); sub f($a,$b,$c --> Tuple) { ($a,$b,$c) }; say f(-1, 5, 'x') # in order, works.

[18:18] <camelia> rakudo-moar b7a63a507: OUTPUT: ¬´(-1 5 x)‚ê§¬ª

[18:18] <[Coke]> m: subset Tuple where * ~~ (Int, UInt, Str); sub f($a,$b,$c --> Tuple) { ($a,$b,$c) }; say f(-1, 'x', 5) # out of order, fails.

[18:18] <camelia> rakudo-moar b7a63a507: OUTPUT: ¬´Type check failed for return value; expected Tuple but got List ($(-1, "x", 5))‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:18] <[Coke]> ToddAndMargo: ^^

[18:19] <[Coke]> those are the same examples from above but with trailing comments.

[18:20] <ToddAndMargo> crossed in the ether.  I like it.  Thank you.

[18:20] *** MasterDuke joined
[18:20] <[Coke]> lucasb++

[18:22] *** cpan-raku left
[18:22] <ToddAndMargo> Since there is a workaround, would it be still be reasonable to add a returns for this in the sub declaration.  I would be easier to maintain and to read at a glance.

[18:23] *** jmerelo left
[18:24] <MasterDuke> i think there's been some talk about doing that before, but i don't remember if the result was that it just wasn't implemented yet, or if it couldn't/shouldn't be done

[18:24] *** cpan-raku joined
[18:24] *** cpan-raku left
[18:24] *** cpan-raku joined
[18:24] <MasterDuke> jnthn, lizmat: ^^^?

[18:25] <ToddAndMargo> Is there a link you can give me to make an RFE?

[18:26] *** aluaces left
[18:27] <rypervenche> Aside from maybe being less readable, is there a good reason to (or not to) replace this for loop with a single line? I finally figured out how to use the X operator to get the same result. https://gist.github.com/rypervenche/d150531a7411ef200f3d5c3487975f54/revisions

[18:27] <MasterDuke> https://github.com/Raku/problem-solving/issues/new/choose

[18:27] <rypervenche> Just trying to create some best practices for myself.

[18:28] *** aluaces joined
[18:29] <cpan-raku> New module released to CPAN! Date::Calendar::Strftime (0.0.3) by 03JFORGET

[18:33] <Geth> ¬¶ problem-solving: ToddAndMargo assigned to jnthn Issue RFE: returns for multiple variables https://github.com/Raku/problem-solving/issues/152

[18:39] *** wamba left
[18:43] *** sena_kun left
[18:57] *** sena_kun joined
[18:58] <El_Che> ToddAndMargo: I like the typed multivalued return as well. Not for data (there are enough datastructures for that), but for errors that don't warrant an exception

[18:58] *** Poohman joined
[18:59] <Poohman> hello all

[18:59] <ToddAndMargo>  I like it!

[19:01] <Poohman> m: grammar test{ regex TOP {.*<a>.*<b>.*}, regex a {.*}, regex b {check}};my $x = test.parse("kljsdlkjwalksjdkls  csadcsadc jkchecksdc");say $x

[19:01] <camelia> rakudo-moar b7a63a507: OUTPUT: ¬´ÔΩ¢kljsdlkjwalksjdkls  csadcsadc jkchecksdcÔΩ£‚ê§ a => ÔΩ¢ÔΩ£‚ê§ b => ÔΩ¢checkÔΩ£‚ê§¬ª

[19:02] <Poohman> m: grammar test{ regex TOP {.*<a>.*<b>.*}, regex a {.*}, regex b {check}};my $x = test.parse("kljsdlkjwalksjdkls  csadcsadc jkchecksdc");say $x;say $x<b>;

[19:02] <camelia> rakudo-moar b7a63a507: OUTPUT: ¬´ÔΩ¢kljsdlkjwalksjdkls  csadcsadc jkchecksdcÔΩ£‚ê§ a => ÔΩ¢ÔΩ£‚ê§ b => ÔΩ¢checkÔΩ£‚ê§ÔΩ¢checkÔΩ£‚ê§¬ª

[19:04] <Poohman> in my code I dont get the value is see for <b> during "say $x" when I type "say $x<b>"

[19:05] <Poohman> it say Nil

[19:06] <Poohman> it says Nil for "say $x<b> even though I can see it detected some stuff and showed it during "say $x"

[19:07] <Poohman> m: grammar test{ regex TOP {.*jwal<a>dkls.*<b>.*}, regex a {.*}, regex b {check}};my $x = test.parse("kljsdlkjwalksjdkls  csadcsadc jkchecksdc");say $x;say $x<a>;

[19:07] <camelia> rakudo-moar b7a63a507: OUTPUT: ¬´ÔΩ¢kljsdlkjwalksjdkls  csadcsadc jkchecksdcÔΩ£‚ê§ a => ÔΩ¢ksjÔΩ£‚ê§ b => ÔΩ¢checkÔΩ£‚ê§ÔΩ¢ksjÔΩ£‚ê§¬ª

[19:08] <Poohman> strange Im able to see ksj here

[19:11] <Poohman> but in my computer something similar gives Nil

[19:11] <[Coke]> So if it works here and not locally: are you running the *same* code in both places? same data? if so, small chance it could be a version difference in rakudo versions.

[19:12] *** daxim left
[19:13] <Poohman> I just copied this code and pasted it in Comma and it worked there as well

[19:13] <Poohman> something similar seems to work differently

[19:15] <Poohman> let me poke around a bit more

[19:16] <[Coke]> Some folks have a very old rakudo installed locally.

[19:16] <[Coke]> (installed from a system package manager, perhaps)

[19:18] *** wamba joined
[19:19] <Geth> ¬¶ problem-solving: ToddAndMargo assigned to jnthn Issue RFE: REPL dependency check for Readline https://github.com/Raku/problem-solving/issues/153

[19:23] *** daxim joined
[19:25] *** sauvin left
[19:29] *** daxim left
[19:35] *** daxim joined
[19:44] <rypervenche> I thought the REPL already told you to install Readline or Linenoise, no?

[19:45] <ToddAndMargo> Didn't on Fedora 31

[19:46] *** pheix joined
[19:46] *** stoned75 joined
[19:50] <rypervenche> Interesting. I'm on 2019.11 as well and I get the following line when I type "raku": You may want to `zef install Readline` or `zef install Linenoise` or use rlwrap for a line editor

[19:51] <tobs> ToddAndMargo: the problem-solving repo is probably not the best venue for this issue. Your problem concerns strictly the REPL shipped with Rakudo and it seems to be quite minor at that. Have you read the Readme of that repository?

[19:52] <[Coke]> tobs: which issue?

[19:52] <[Coke]> the one he most recently opened is a language issue, not a REPL one.

[19:52] <ToddAndMargo> Did not know where it existed.  Do you have a link to that repo?

[19:52] <[Coke]> also, he was pointed there by at least one person in chat here.

[19:53] <[Coke]> ... ah. my just was the *previous* one!

[19:53] <tobs> [Coke]: this one https://github.com/Raku/problem-solving/issues/153

[19:53] <[Coke]> yup, tobs++

[19:53] <[Coke]> ToddAndMargo: github.com/rakudo/rakudo/issues

[19:53] <[Coke]> don't think we can transfer the issue.

[19:53] <ToddAndMargo> I will cancel and report.  Thank you!

[19:54] <tobs> I agree the signature return list type issue was well placed :)

[19:54] <[Coke]> Pretty sure it does offer those as suggestions when you start ./perl6's REPL and don't have those installed.

[19:55] * [Coke] apologizes for not reading the backlog entirely when complaining a bit about someone not reading the backlog!

[19:55] <rypervenche> Perhaps it's a Fedora thing?

[19:56] <tobs> no sweat, [Coke]

[19:57] <[Coke]> tobs++

[19:57] <rypervenche> Hmm, it's in REPL.pm6 though in v2019.11.

[19:57] <ToddAndMargo> https://github.com/rakudo/rakudo/issues/3440

[19:58] <ToddAndMargo> I am running Fedora 31https://github.com/nxadm/rakudo-pkg/releases$ rpm -qa *rakudo*rakudo-pkg-2019.07.1-03.x86_64

[19:58] <[Coke]> ToddAndMargo: You may want to `zef install Readline` or `zef install Linenoise` or use rlwrap for a line editor

[19:58] <rypervenche> ToddAndMargo: Oh, you're on an old version.

[19:58] <[Coke]> that's what I get with a rakudo from about a month ago installed locally with no linenoise or readline installed.

[19:59] *** wamba left
[19:59] <rypervenche> Fedora 31 already has 2019.11 in its repos: https://apps.fedoraproject.org/packages/rakudo

[19:59] <[Coke]> Pretty sure the readline message is older than ToddAndMargo's version.

[19:59] <ToddAndMargo> Ah poop!  And there it is!    https://github.com/nxadm/rakudo-pkg/releases

[19:59] <[Coke]> (the one I had lying about is This is Rakudo version 2019.11-378-g262b6fc7a built on JVM)

[20:00] *** wamba joined
[20:02] <ToddAndMargo> odd as I am running the same version on two different Fedora 31 computers.  one had the problem, the other did not.

[20:03] <[Coke]> maybe you have an borked install of one of the modules.

[20:26] <ToddAndMargo> I have a module that imports use Term::termios;use Terminal::Print::RawInput;  

[20:26] <ToddAndMargo> maybe one of them has a dependency?

[20:27] *** domidumont left
[20:33] *** lucasb left
[20:36] <veesh> hey todd, nice to see you on irc

[20:40] <ToddAndMargo> irc is a wonderful tool.  And the guys on it are total mensches.  No I am not sucking up.  Well maybe a little.  It is nice to be sucked up to every so often.  :-)

[20:43] *** stoned75 left
[20:44] *** stoned75 joined
[20:44] *** sena_kun left
[20:58] *** sena_kun joined
[21:07] *** xinming_ left
[21:08] *** xinming_ joined
[21:15] <Geth> ¬¶ doc: 9b2123cfa0 | (Stoned Elipot)++ | doc/Language/operators.pod6

[21:15] <Geth> ¬¶ doc: sync example's output with its code

[21:15] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/9b2123cfa0

[21:16] *** moritz left
[21:19] *** moritz joined
[21:35] *** pheix left
[21:42] *** gabiruh_ left
[21:44] *** ToddAndMargo left
[21:48] *** mahmudov left
[21:51] <Geth> ¬¶ rakudo.org/master: 22 commits pushed by (Patrick B√∂ker)++, (Roman Baumer)++

[21:51] <Geth> ¬¶ rakudo.org/master: review: https://github.com/perl6/rakudo.org/compare/26dd1dac1b52...7cadcd0b9446

[22:00] *** mahmudov joined
[22:01] *** wamba left
[22:03] *** chloekek joined
[22:07] *** rindolf left
[22:16] <Geth> ¬¶ rakudo.org: 2b62e77226 | (Roman Baumer)++ (committed using GitHub Web editor) | nginx.conf

[22:16] <Geth> ¬¶ rakudo.org: Update prod nginx.conf

[22:16] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/2b62e77226

[22:22] <Geth> ¬¶ rakudo.org: patrickbkr++ created pull request #33: Fix news

[22:22] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/pull/33

[22:22] <Geth> ¬¶ rakudo.org: 13e3c00450 | (Patrick B√∂ker)++ | templates/news.html.ep

[22:22] <Geth> ¬¶ rakudo.org: Fix news

[22:22] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/13e3c00450

[22:22] <Geth> ¬¶ rakudo.org: 3b4eea2c7e | (Roman Baumer)++ (committed using GitHub Web editor) | templates/news.html.ep

[22:22] <Geth> ¬¶ rakudo.org: Merge pull request #33 from patrickbkr/master

[22:22] <Geth> ¬¶ rakudo.org: 

[22:22] <Geth> ¬¶ rakudo.org: Fix news

[22:23] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/3b4eea2c7e

[22:26] <Geth> ¬¶ rakudo.org: c3ed408289 | (Roman Baumer)++ (committed using GitHub Web editor) | nginx.conf

[22:26] <Geth> ¬¶ rakudo.org: more generic /files -> /downloads redirect

[22:26] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/c3ed408289

[22:39] *** MasterDuke left
[22:43] <Geth> ¬¶ doc: dumarchie++ created pull request #3183: Improve some method definitions

[22:43] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3183

[22:43] *** sena_kun left
[22:45] *** melezhik left
[22:46] *** MasterDuke joined
[22:51] <Geth> ¬¶ raku.org: rba self-assigned Raku examples link returns 502 from home page and resources page https://github.com/Raku/raku.org/issues/140

[22:52] <Geth> ¬¶ doc: a2295e44dc | (Peter du Marchie van Voorthuysen)++ | doc/Type/Seq.pod6

[22:52] <Geth> ¬¶ doc: Improve some method definitions

[22:52] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/a2295e44dc

[22:52] <Geth> ¬¶ doc: b8192afabd | (Peter du Marchie van Voorthuysen)++ (committed using GitHub Web editor) | doc/Type/Seq.pod6

[22:52] <Geth> ¬¶ doc: Merge pull request #3183 from dumarchie/#3163

[22:52] <Geth> ¬¶ doc: 

[22:52] <Geth> ¬¶ doc: Improve some Seq method definitions

[22:52] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/b8192afabd

[22:55] *** chloekek left
[22:57] *** melezhik joined
[22:59] *** sena_kun joined
[23:01] *** pochi_ joined
[23:01] *** pochi left
[23:15] *** mahmudov left
[23:21] *** ergergrdf joined
[23:21] <ergergrdf> hi

[23:22] <ergergrdf> is it true someone is developping "Raku on Rails" ?

[23:23] <lizmat> I guess https://cro.services is the closest that I know about

[23:23] <lizmat> especially the https://cro.services/docs/reference/cro-webapp-template part I guess

[23:23] <lizmat> afk&

[23:24] <ergergrdf> lizmat hi. Which is better for text report, Perl or Raku ?

[23:24] <lizmat> I'm the wrong person to ask  :-)

[23:24] <lizmat> really afk&

[23:24] <ergergrdf> why ?

[23:27] <MasterDuke> ergergrdf: i think maybe Xliff was interested in working on a web framework, but i don't believe work has been started

[23:29] <ergergrdf> MasterDuke hi !

[23:29] <ergergrdf> masterduke Which is better for text report, Perl or Raku ?

[23:29] <ergergrdf> I have heard Raku is slowest than Perl

[23:29] <ergergrdf> but not sure

[23:30] <ergergrdf> Please forgive my engish

[23:30] <ergergrdf> english

[23:30] <MasterDuke> without knowing any details of what kind of report, raku is more powerful, but likely slower. also not installed everywhere by default like perl is

[23:39] <ergergrdf> Ok thanks. Why does Github as not replace "Perl6" by "Raku"

[23:40] <MasterDuke> we're in the process of changing the name everywhere, but it's going to take a while. lots of places, lots of manual work, etc

[23:41] *** patrickb left
[23:58] <ergergrdf> MasterDuke What if GitHub refuse to replace "Perl 6" by "Raku" ?

[23:58] <MasterDuke> don't think there's any reason they would refuse

[23:59] <MasterDuke> but either way, for me that's a problem for tomorrow. i'm off to sleep

