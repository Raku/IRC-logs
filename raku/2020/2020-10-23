[00:06] *** skyl4rk joined
[00:07] *** skids joined
[00:17] <raku-bridge> <sampersand—2B +| +^2B = FF> test

[00:47] *** Xliff joined
[00:48] <Xliff> timotimo: I know it's getting late for you. 

[00:51] *** Black_Ribbon joined
[00:57] *** Kaeipi joined
[00:57] *** Kaiepi left
[01:08] *** molaf left
[01:18] *** Chi1thangoo left
[01:20] *** molaf joined
[01:51] *** mowcat left
[01:53] *** vielreich joined
[01:53] <vielreich> made your area like quebec and speak german, in the frontier méxico with texas,the flag is in the frontier, in horizont orange  almost dark like brick in up, in half gray aluminum, and in down blue sky day,  with letter L red shinning  thick, no very thick just 1 cm and 4 mm with red fire in the right side in line like shadow the same red shinnig 9 mm right,  at the left side 1 mm of shadow, 

[01:53] <vielreich> and in down 3 mm of shadow red shinnig all the shadows stiked at the L  the L no with waves in line 9 mm of fire 1 left and 3 in down , the L  in the center of the new german flag occupying the entire gray strip with the shadow, the name is Deutcsh, coin deutsches. let the giants play baskectball with the browns.learn german  https://app.memrise.com/course/920/5000-german-words-top-87/1/ copy 

[01:53] <vielreich> the adress of the page, and paste somewhere, for read it later, go at the bookseller and ask for the diccionary english german and read it verbatim, 

[01:55] *** vielreich left
[02:03] *** aborazmeh joined
[02:03] *** aborazmeh left
[02:03] *** aborazmeh joined
[02:03] *** guifa left
[02:04] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:07] *** bootleg-ghost joined
[02:18] <xinming> SmokeMachine: What is the right way to inflate an object into a hash?

[02:27] *** aborazmeh left
[02:41] <xinming> https://docs.raku.org/routine/sort   <--- In sort, How does sort function knows wether the function accepts one argument or 2 when we provide a block?  If we provide a block, does that mean, it's always 2 arguments?

[02:42] <moon-child> m: sub foo($x) {}; say &foo.arity

[02:42] <camelia> rakudo-moar 85847d2f1: OUTPUT: «1␤»

[03:06] <xinming> Got it, thanks.

[03:10] <xinming> m: my @t = (1, 2, 3 ... Inf); my @y = eager @t;

[03:10] <xinming> Is there other way to inflate the laz list instead of eager statement prefix?

[03:10] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(timeout)»

[03:10] <xinming> I just now tried something like   my @y = |@t;

[03:11] <Xliff> m: my @t = (1, 2, 3 ... ^100); my @q = @t.Array; @.is-lazy.say

[03:11] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable @.is-lazy used where no 'self' is available␤at <tmp>:1␤------> 033 ... ^100); my @q = @t.Array; @.is-lazy7⏏5.say␤    expecting any of:␤        term␤»

[03:11] <Xliff> m: my @t = (1, 2, 3 ... ^100); my @q = @t.Array; @q.is-lazy.say

[03:11] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[03:12] <Xliff> m: my @t = (1, 2, 3 ... ^100); my @q = @t.Array; @t.is-lazy.say; @q.is-lazy.say

[03:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤False␤»

[03:12] <Xliff> m: my @t = (1, 2, 3 ... ^100); @t.is-lazy.say; my @q = @t.Array; @q.is-lazy.say

[03:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤False␤»

[03:12] <Xliff> Huh! Odd.

[03:12] <Xliff> m: my @t = (1, 2, 3 .. ^100); my @q = @t.Array; @t.is-lazy.say; @q.is-lazy.say

[03:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Range objects are not valid endpoints for Ranges␤  in block <unit> at <tmp> line 1␤␤»

[03:12] <Xliff> m: my @t = ^100; my @q = @t.Array; @t.is-lazy.say; @q.is-lazy.say

[03:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤False␤»

[03:12] <Xliff> m: my @t = ^100; @t.is-lazy.say; my @q = @t.Array; @q.is-lazy.say

[03:12] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤False␤»

[03:13] <Xliff> m: my @t = lazy ^100; @t.is-lazy.say; my @q = @t.Array; @q.is-lazy.say

[03:13] <camelia> rakudo-moar 85847d2f1: OUTPUT: «True␤True␤»

[03:13] <Xliff> m: my @t = lazy ^100; @t.is-lazy.say; my @q = eager @t; @q.is-lazy.say

[03:13] <camelia> rakudo-moar 85847d2f1: OUTPUT: «True␤False␤»

[03:13] <Xliff> Odd

[03:23] *** Xliff left
[03:26] *** Xliff joined
[03:30] *** cpan-raku left
[03:32] *** cpan-raku joined
[03:32] *** cpan-raku left
[03:32] *** cpan-raku joined
[04:32] *** committable6 left
[04:32] *** unicodable6 left
[04:32] *** statisfiable6 left
[04:32] *** releasable6 left
[04:32] *** quotable6 left
[04:32] *** sourceable6 left
[04:32] *** coverable6 left
[04:32] *** linkable6 left
[04:32] *** evalable6 left
[04:32] *** tellable6 left
[04:32] *** squashable6 left
[04:32] *** shareable6 left
[04:32] *** nativecallable6 left
[04:32] *** bisectable6 left
[04:32] *** notable6 left
[04:32] *** bloatable6 left
[04:32] *** benchable6 left
[04:32] *** greppable6 left
[04:33] *** sourceable6 joined
[04:33] *** committable6 joined
[04:33] *** shareable6 joined
[04:33] *** bloatable6 joined
[04:33] *** tellable6 joined
[04:34] *** releasable6 joined
[04:34] *** unicodable6 joined
[04:34] *** squashable6 joined
[04:34] *** notable6 joined
[04:34] *** linkable6 joined
[04:34] *** bisectable6 joined
[04:34] *** statisfiable6 joined
[04:35] *** coverable6 joined
[04:35] *** nativecallable6 joined
[04:35] *** evalable6 joined
[04:35] *** benchable6 joined
[04:35] *** greppable6 joined
[04:35] *** quotable6 joined
[04:40] *** Ben_Goldberg joined
[04:40] *** BenGoldberg left
[04:40] *** Ben_Goldberg is now known as BenGoldberg

[04:49] *** Ben_Goldberg joined
[04:49] *** BenGoldberg left
[04:49] *** Ben_Goldberg is now known as BenGoldberg

[04:52] *** MasterDuke left
[04:53] *** BenGoldberg left
[04:53] *** Ben_Goldberg joined
[04:53] *** Ben_Goldberg is now known as BenGoldberg

[04:58] *** BenGoldberg left
[04:58] *** Ben_Goldberg joined
[04:58] *** Ben_Goldberg is now known as BenGoldberg

[05:06] *** BenGoldberg left
[05:07] *** Ben_Goldberg joined
[05:07] *** Ben_Goldberg is now known as BenGoldberg

[05:15] *** fvox_ left
[05:16] *** fvox joined
[05:19] *** bootleg-ghost left
[05:36] *** Doc_Holliwood joined
[05:52] *** aluaces joined
[05:57] *** ufobat joined
[05:59] *** parabolize left
[06:00] *** xinming_ joined
[06:03] *** xinming left
[06:19] *** sjm_uk joined
[06:37] *** BenGoldberg left
[06:41] *** patrickb joined
[06:43] * [Coke] waves hello from "took a nap too late in the afternoon and now I guess I'm staying up all night"

[06:48] <MitarashiDango[m> ^ I'm in this status and I don't like it

[06:49] <SmokeMachine> xinming_: you mean on Red? Could you exemplify what you want, please?

[06:56] *** Sgeo left
[06:59] *** sena_kun joined
[07:03] *** rindolf joined
[07:03] *** samcv left
[07:22] *** Doc_Holliwood left
[07:25] * [Coke] tries to make sleep happen

[07:27] <patrickb> releasable6: status

[07:27] <releasable6> patrickb, Next release in ≈1 day and ≈11 hours. 1 blocker. 0 out of 83 commits logged

[07:27] <releasable6> patrickb, Details: https://gist.github.com/c08a063990c9462ad39f465dba0d13ef

[07:31] *** wamba joined
[07:34] *** frost-lab joined
[08:10] *** jmerelo joined
[08:10] *** skids left
[08:25] *** andrzejku joined
[08:28] *** abraxxa left
[08:28] *** abraxxa joined
[08:45] <patrickb> I'm looking at https://docs.raku.org/routine/bless And try to understand the `Point-with-ID` example. I don't get it. The docs state one needs the convoluted way of initializing `$.ID`.

[08:46] <patrickb> It seems the only reason the example doesn't work with a simple `$!ID = "*..."` is because the type of `$.ID` is `Int` instead of `Str`, which the `$attr.set_value()` seems to be able to violate.

[08:48] *** mid_home left
[08:49] <patrickb> Can someone clarify?

[08:53] <rindolf> just for the record - i submitted this pull req which appears to have fixed the install: https://github.com/CurtTilmes/raku-primesieve/pull/8

[08:53] <rindolf> s/to have fix/to fix/

[09:02] <Xliff> Are there build instructions for windows?

[09:10] *** Black_Ribbon left
[09:16] <rindolf> Xliff: for what?

[09:17] <rindolf> Xliff: what do you wish to build?

[09:29] *** BenGoldberg joined
[09:47] *** Chi1thangoo joined
[10:02] *** BenGoldberg left
[10:24] *** ThaEwat left
[10:24] *** AlexDaniel` left
[10:24] *** matiaslina left
[10:24] *** kiti_nomad[m] left
[10:24] *** unclechu left
[10:24] *** CIAvash left
[10:24] *** JJAtria[m] left
[10:24] *** MitarashiDango[m left
[10:31] *** CIAvash joined
[10:37] *** unclechu joined
[10:37] *** kiti_nomad[m] joined
[10:37] *** ThaEwat joined
[10:37] *** AlexDaniel` joined
[10:37] *** MitarashiDango[m joined
[10:37] *** matiaslina joined
[10:37] *** JJAtria[m] joined
[10:39] *** Doc_Holliwood joined
[11:06] *** abraxxa left
[11:07] *** abraxxa joined
[11:14] *** Doc_Holliwood left
[11:20] *** andrzejku left
[11:28] <jmerelo> After finding this in Twitter, I though it was going to be a breeze in Raku https://twitter.com/Jimena_y_yo/status/1319587392232239104 Alas, it's not

[11:28] <tellable6> 2020-10-22T19:57:52Z #raku <Xliff> jmerelo: Oh wow! Thank you!

[11:29] <jmerelo> m: my %i = :2a,:3b; my @j = [ $(:2a,3b) ]; say %i ∈ @j

[11:29] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3my %i = :2a,:3b; my @j = [ $(:2a,37⏏5b) ]; say %i ∈ @j␤    expecting any of:␤        whitespace␤»

[11:29] <jmerelo> m: my %i = :2a,:3b; my @j = [ $(:2a,:3b) ]; say %i ∈ @j

[11:29] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:29] <jmerelo> m: my %i = :2a,:3b; my @j = [ %(:2a,:3b) ]; say %i ∈ @j

[11:29] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:29] <jmerelo> m: my %i = :2a,:3b; my @j = [ $(%(:2a,:3b)) ]; say %i ∈ @j

[11:29] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:29] <jmerelo> m: my %i = :2a; my @j = [ :2a ]; say %i ∈ @j

[11:29] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:30] <jmerelo> m: my %i = :2a; my @j = [ :2a ]; say :2a ∈ @j

[11:30] <camelia> rakudo-moar 85847d2f1: OUTPUT: «True␤»

[11:30] <jmerelo> m: my %i = :2a,:3b; my @j = [ $(%(:2a,:3b)) ]; say %(:2a,3b) ∈ @j

[11:30] <camelia> rakudo-moar 85847d2f1: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3; my @j = [ $(%(:2a,:3b)) ]; say %(:2a,37⏏5b) ∈ @j␤    expecting any of:␤        whitespace␤»

[11:30] <jmerelo> m: my %i = :2a,:3b; my @j = [ $(%(:2a,:3b)) ]; say %(:2a,:3b) ∈ @j

[11:30] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:31] <jmerelo> m: my %i = :2a,:3b; my @j = [ %(:2a,:3b) ]; say %(:2a,:3b) ∈ @j

[11:31] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:31] <jmerelo> m: my %i = :2a,:3b; my @j = [ %(:2a,:3b) ]; say :2a,:3b ∈ @j

[11:31] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unexpected named argument 'a' passed␤  in block <unit> at <tmp> line 1␤␤»

[11:31] <jmerelo> m: my %i = :2a,:3b; my @j = [ %(:2a,:3b) ]; say %(:2a,:3b) ∈ @j

[11:31] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:31] <jmerelo> m: say %(:2a,:3b) ∈ [ %(:2a,:3b) ]

[11:31] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:32] <jmerelo> m: say %(:2a,:3b) === %(:2a,:3b) 

[11:32] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:34] <lizmat> m: dd [ %(:2a,:3b) ]

[11:34] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Array element = [:a(2), :b(3)]␤»

[11:34] <lizmat> that evaluates to a list of Pairs...

[11:34] <lizmat> and a hash is not an element of that

[11:34] <lizmat> m: say %(:2a,:3b) ∈ [ (%(:2a,:3b)) ]

[11:34] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:34] <lizmat> m: dd [ (%(:2a,:3b)) ]

[11:34] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Array element = [:a(2), :b(3)]␤»

[11:34] <lizmat> hmmm...

[11:34] <lizmat> m: dd [ (%(:2a,:3b),) ]

[11:34] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Array element = [{:a(2), :b(3)},]␤»

[11:35] <lizmat> m: dd [ (%(:2a,:3b),) ]

[11:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Array element = [{:a(2), :b(3)},]␤»

[11:35] <lizmat> m: say %(:2a,:3b) ∈ [ (%(:2a,:3b),) ]

[11:35] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:35] <jmerelo> lizmat: the problem is that WHICH is not going to return the same anyway

[11:36] <jmerelo> m: my \i = <a b c>,:3b; my \j = [ <a b c> ]; say i ∈ j

[11:36] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:36] <jmerelo> m: my \i = <a b c>,:3b; my \j = [ <a b c>, ]; say i ∈ j

[11:36] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:36] <jmerelo> m: say <a b c> === <a b c>

[11:36] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:36] <jmerelo> m: say <a b c>.WHICH

[11:36] <camelia> rakudo-moar 85847d2f1: OUTPUT: «List|84393712␤»

[11:36] <jmerelo> m: say <a b c>.WHICH

[11:36] <camelia> rakudo-moar 85847d2f1: OUTPUT: «List|60960576␤»

[11:37] <jmerelo> m: say <a b c><> === <a b c><>

[11:37] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:37] <lizmat> jmerelo: good point, yeah, %() is not a value type

[11:37] <jmerelo> m: my \i = <a b c>,:3b; my \j = [ <a b c>, ]; say i.gist ∈ j.map: .gist

[11:37] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Cannot map a Array using '"(Any)"'␤Did a * (Whatever) get absorbed by a list?␤  in block <unit> at <tmp> line 1␤␤»

[11:37] <jmerelo> m: my \i = <a b c>,:3b; my \j = [ <a b c>, ]; say i.gist ∈ j.map: {.gist}

[11:37] <camelia> rakudo-moar 85847d2f1: OUTPUT: «False␤»

[11:38] <jmerelo> m: my \i = <a b c>,:3b; my \j = [ <a b c>, ]; say i.gist; say j.map: *.gist

[11:38] <camelia> rakudo-moar 85847d2f1: OUTPUT: «((a b c) b => 3)␤((a b c))␤»

[11:38] <jmerelo> m: my \i = <a b c>; my \j = [ <a b c>, ]; say i.gist; say j.map: *.gist

[11:38] <camelia> rakudo-moar 85847d2f1: OUTPUT: «(a b c)␤((a b c))␤»

[11:38] <jmerelo> m: my \i = <a b c>; my \j = [ <a b c>, ]; say i.gist ∈ j.map: *.gist

[11:38] <camelia> rakudo-moar 85847d2f1: OUTPUT: «True␤»

[11:39] <jmerelo> m: my \i = %(:2a,:3b); my \j = [ %(:2a,:3b), ]; say i.gist ∈ j.map: *.gist

[11:39] <camelia> rakudo-moar 85847d2f1: OUTPUT: «True␤»

[11:39] <jmerelo> m: my \i = %(:2a,:3b); my \j = [ %(:2a,:3b), ]; say i.gist ∈ j.map: *.gist

[11:39] <camelia> rakudo-moar 85847d2f1: OUTPUT: «True␤»

[11:39] <jmerelo> m: my \i = %(:2a,:3b); my \j = [ %(:2a,:3b), ]; say i.gist ∈ j.map: *.gist

[11:39] <camelia> rakudo-moar 85847d2f1: OUTPUT: «True␤»

[11:39] <jmerelo> I thought that was going to fail, at least part of the time... But apparently keys are sorted when gisted

[11:39] *** andrzejku joined
[12:06] <timotimo> yes gist will sort keys

[12:09] *** Chi1thangoo left
[12:38] *** andrzejku left
[12:54] *** BenGoldberg joined
[12:55] *** abraxxa left
[12:55] *** abraxxa joined
[13:00] *** m6locks left
[13:13] *** jmerelo left
[13:20] *** jmerelo joined
[13:21] *** jmerelo left
[13:27] *** Merfont joined
[13:28] *** BenGoldberg left
[13:28] *** pnu___ joined
[13:28] *** vike left
[13:28] *** Kaeipi left
[13:28] *** pnu__ left
[13:29] *** pnu___ is now known as pnu__

[13:29] *** dustinm` left
[13:29] *** patrickb left
[13:29] *** xi left
[13:29] *** dustinm` joined
[13:30] *** patrickb joined
[13:30] *** frost-lab left
[13:30] *** xi joined
[13:31] <Altreus> Does the raku module system define a strategy for what P5 calls sharefiles?

[13:32] *** Doc_Holliwood joined
[13:36] <lizmat> what are sharefiles ?

[13:39] <Altreus> e.g. templates in a web app

[13:39] <Altreus> CSS, JS, such things

[13:39] *** bootleg-ghost joined
[13:41] <lizmat> maybe this is what you're looking for?  https://docs.raku.org/syntax/$PERCENT_SIGN%3FRESOURCES

[13:54] *** xinming_ left
[13:55] *** xinming_ joined
[14:01] <tyil> brass: .

[14:07] *** abraxxa left
[14:08] *** abraxxa joined
[14:14] *** Sgeo joined
[14:28] *** _jrjsmrtn joined
[14:31] *** __jrjsmrtn__ left
[14:33] *** patrickb left
[14:39] <Altreus> Yes! Thanks :D

[14:39] *** aluaces left
[14:39] <Altreus> I'm pleased that raku has formalised this because I've got blog posts waiting to be written about this in P5

[14:40] *** sena_kun left
[14:40] *** Chi1thangoo joined
[14:42] *** [Sno] left
[14:50] *** Doc_Holliwood left
[14:52] <lizmat> Altreus: it's still a little rough around the edges, but yes, I think it's a step in the right direction :-)

[14:54] <daxim> tadzik: the evil spiteful reddit downvoter strikes again, he got you too this time

[14:54] <tadzik> daxim: oh no /o\

[14:54] <lizmat> wonders what this is about

[14:55] <tadzik> https://www.reddit.com/r/perl/comments/jgg30k/why_perl_is_superior_to_python/

[14:55] <daxim> nuance is not allowed

[14:55] <tadzik> it's a weird thread. Someone comes in with their hardcore opinion and mostly expects yes-me-too responses apparently

[14:57] <daxim> the groupthink pressure is strong in this subreddit.  I've often experienced it, I know about the anonymous coward who follows me around and downvotes the critical posts I make

[14:59] <Altreus> how come the URL contains $PERCENT_SIGN instead of %25

[15:00] <lizmat> Altreus: no idea, jmerelo might know

[15:04] <moritz> might be because it's a file name

[15:04] <moritz> and then apache doesn't like it, or something

[15:04] *** parabolize joined
[15:07] <Altreus> I cringe whenever some software's crappy handling of standards leaks out into the public view

[15:07] <Altreus> not saying that's what it is but

[15:07] <Altreus> well, I'm prepared to believe it :P

[15:09] <kawaii> lizmat: I'm getting `Type check failed in binding to parameter '$location'; expected IO::Path but got Slip (Empty)` when trying to use that like `template-location %?RESOURCES<templates>;`, not sure if the problem lies in the cro routine there or not.

[15:11] <lizmat> then %?RESOURCES<templates> returns Empty ?

[15:11] <lizmat> perhaps a condition is missing somewhere in the template handler logic?

[15:11] <kawaii> but I know it's not empty :( https://www.irccloud.com/pastebin/klwpgKRy/

[15:13] *** skids joined
[15:14] *** Doc_Holliwood joined
[15:20] *** Merfont is now known as Kaiepi

[15:28] *** orinthe left
[15:28] *** orinthe joined
[15:29] *** sno joined
[15:31] *** MilkmanDan left
[15:32] *** MilkmanDan joined
[15:34] *** sno left
[15:36] <Altreus> perhaps a directory is not considered a resource?

[15:36] *** sno joined
[15:43] <El_Che> releasable6: status

[15:43] <releasable6> El_Che, Next release in ≈1 day and ≈3 hours. 1 blocker. 17 out of 85 commits logged

[15:43] <releasable6> El_Che, Details: https://gist.github.com/b59244e626368d95ff1fb051905e2b1b

[15:47] *** ThaEwat left
[15:47] *** Doc_Holliwood left
[15:48] *** matiaslina left
[15:49] *** ThaEwat joined
[15:50] *** matiaslina joined
[15:54] <El_Che> I am releaseing packages today, mainly because of ububtu 20.10 release, but this allows me to bump the zef release for all distros

[15:57] *** MilkmanDan left
[15:58] *** MilkmanDan joined
[15:59] <Xliff> Can someone tell me why raku supports POD annotations for classes and not roles?

[16:00] <Xliff> See: https://repl.it/@Xliff/NormalAwesomeOpenlook#main.raku

[16:02] *** jmerelo joined
[16:19] *** BenGoldberg joined
[16:35] *** Doc_Holliwood joined
[16:50] *** zostay_ joined
[16:50] *** rjeli_ joined
[16:50] *** PotatoGim_ joined
[16:51] *** timeless_ joined
[16:52] *** jcallen_ joined
[16:53] *** BenGoldberg left
[16:55] *** Xliff left
[16:55] *** ssm__ joined
[16:57] *** timeless left
[16:57] *** PotatoGim left
[16:57] *** rjeli left
[16:57] *** zostay left
[16:57] *** ssm_ left
[16:57] *** jcallen left
[16:57] *** moon-child left
[16:57] *** tejr left
[16:57] *** xelxebar left
[16:57] *** zostay_ is now known as zostay

[16:57] *** timeless_ is now known as timeless

[16:57] *** rjeli_ is now known as rjeli

[16:57] *** PotatoGim_ is now known as PotatoGim

[17:02] *** approaching236 joined
[17:14] *** mid_home joined
[17:17] <El_Che> travis is slow with starting jobs today

[17:17] *** abraxxa left
[17:18] *** patrickb joined
[17:20] *** abraxxa joined
[17:24] *** moon-child joined
[17:29] *** xelxebar joined
[17:30] *** domidumont joined
[17:33] *** tejr joined
[17:47] *** jmerelo left
[18:08] *** ufobat left
[18:09] *** abraxxa left
[18:09] *** abraxxa joined
[18:24] *** abraxxa left
[18:24] *** abraxxa joined
[18:24] *** bocaneri left
[18:25] *** simcop2387 joined
[18:27] *** Maylay left
[18:27] *** wamba left
[18:28] *** aluaces joined
[18:29] *** perlbot joined
[18:32] *** abraxxa left
[18:32] <Geth> ¦ doc: patrickbkr++ created pull request #3671: Rework object construction documentation

[18:32] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3671

[18:34] *** Maylay joined
[18:35] *** abraxxa joined
[18:36] *** perlbot left
[18:36] *** simcop2387 left
[18:37] *** abraxxa left
[18:38] *** abraxxa joined
[18:40] *** jmerelo joined
[18:43] *** perlbot joined
[18:44] *** simcop2387 joined
[18:53] <El_Che> Running for 1 hr 56 min 42 sec  and run omly a tird of the jobs so far

[18:53] *** abraxxa left
[18:54] *** abraxxa joined
[18:55] *** sjm_uk left
[19:03] *** Xliff joined
[19:04] *** mowcat joined
[19:09] *** jmerelo left
[19:10] *** abraxxa left
[19:16] *** perlbot left
[19:16] *** simcop2387 left
[19:16] *** abraxxa joined
[19:18] *** simcop2387 joined
[19:19] *** mojca_ left
[19:21] *** perlbot joined
[19:21] *** abraxxa left
[19:23] *** abraxxa joined
[19:32] *** abraxxa left
[19:33] *** abraxxa joined
[19:38] *** wamba joined
[19:39] *** aborazmeh joined
[19:39] *** aborazmeh left
[19:39] *** aborazmeh joined
[19:44] *** BenGoldberg joined
[19:47] *** samcv joined
[19:48] *** abraxxa left
[19:52] *** abraxxa joined
[19:54] *** abraxxa left
[19:55] *** abraxxa joined
[19:59] *** finsternis left
[19:59] *** Black_Ribbon joined
[20:01] *** abraxxa left
[20:02] *** abraxxa joined
[20:10] *** finsternis joined
[20:12] *** rindolf left
[20:13] *** abraxxa left
[20:14] *** abraxxa joined
[20:15] *** abraxxa left
[20:16] *** abraxxa joined
[20:17] *** abraxxa left
[20:18] *** abraxxa joined
[20:19] *** BenGoldberg left
[20:23] *** approaching236 left
[20:26] *** abraxxa left
[20:27] *** abraxxa joined
[20:29] *** abraxxa left
[20:30] *** Doc_Holliwood left
[20:31] *** abraxxa joined
[20:34] *** perlbot left
[20:35] *** andinus` joined
[20:35] *** Geth left
[20:36] *** astronav- joined
[20:36] *** Geth joined
[20:36] *** astronavt___ left
[20:37] *** [ptc] left
[20:37] *** [ptc] joined
[20:37] *** andinus left
[20:37] *** perlbot joined
[20:37] *** dogbert17 left
[20:37] *** approaching236 joined
[20:37] *** dogbert17 joined
[20:38] *** raku-bridge left
[20:39] *** Sgeo left
[20:39] *** Sgeo joined
[20:41] *** andinus`` joined
[20:42] *** vgrato_ joined
[20:45] *** approaching236 left
[20:50] *** andinus` left
[20:50] *** Chi1thangoo left
[20:50] *** sftp left
[20:50] *** nicholatian left
[20:50] *** a3r0 left
[20:50] *** nekomune left
[20:50] *** oodani left
[20:50] *** rir left
[20:50] *** telex left
[20:50] *** BuildTheRobots left
[20:50] *** freezing_ left
[20:50] *** mniip left
[20:50] *** Chi1thangoo joined
[20:50] *** a3r0 joined
[20:50] *** oodani joined
[20:50] *** rir joined
[20:50] *** telex joined
[20:50] *** BuildTheRobots joined
[20:50] *** freezing_ joined
[20:50] *** mniip joined
[20:51] *** nekomune joined
[20:51] *** sftp joined
[20:55] *** nicholatian joined
[21:01] *** aborazmeh left
[21:04] <JJAtria[m]> As far as I understand, in Go sending messages to a Channel and never reading them is a source of memory leaks. Is it the same in Raku?

[21:07] <El_Che>  JJAtria[m]: Not really in go

[21:08] <El_Che> a normal channel will block until read

[21:08] <El_Che> and you can create a channel with a buffer, e.g 10, but once it's full it will block

[21:09] <El_Che> that's not what I would call a memory leak

[21:09] <El_Che> or maybe a smallish-one-by-design :)

[21:10] <JJAtria[m]> Hm, yeah, I remember reading this in the context of channels that get stuff sent to them in deferred functions, so it's possible that I didn't read it properly, or that I filed it in the wrong drawer :P

[21:10] *** abraxxa left
[21:10] <El_Che> the behaviour is pretty annoying in the beginning, but it made sense after a while for me

[21:10] *** wamba left
[21:11] <El_Che> "why is my stuff blocking???"

[21:11] <El_Che> :)

[21:11] <El_Che> JJAtria[m]: I think you are maybe thing on goroutines?

[21:11] <El_Che> *thinking

[21:12] <El_Che> off

[21:12] <El_Che> damn :)

[21:12] <JJAtria[m]> But how about in Raku? Since they are non-blocking, I can push as much garbage as I want and if the reader doesn't read it (or dies or whatever...) is it my responsibility to flush it?

[21:12] <JJAtria[m]> Oh, yeah, I mean, I think this was being called from a defer in a goroutine, I think. It was pretty funky code

[21:13] <El_Che> honestly, I don't know, I suspect it will die when you're OOM'ed

[21:13] <El_Che> good question

[21:13] *** abraxxa joined
[21:13] <El_Che> JJAtria[m]: when starting writing go, everyone goes craxy with go routines

[21:13] <El_Che> after a while, you use them a lot less :)

[21:14] <JJAtria[m]> I enjoy realising that a lot of the core concepts are similar between Raku and Go

[21:14] <JJAtria[m]> (until they're not, and then the fun starts)

[21:14] <El_Che> well, Raku is so huge that it overlaps with pretty much everything

[21:15] <JJAtria[m]> lol

[21:15] <El_Che> many Raku there ways to in concurrency do are

[21:16] <JJAtria[m]> As long as there's more than one, that's on brand

[21:17] *** patrickb left
[21:17] <El_Che> defer is actually a pretty nice feature

[21:17] <El_Che> just a little more powerful than autoclosing, but a little more cumbersome

[21:18] <JJAtria[m]> It's inspired some pretty magic uses of LEAVE in some recent code I've written

[21:18] *** abraxxa left
[21:18] <JJAtria[m]> No ragrets

[21:19] <El_Che> If you say "inspired" it usually means you have a Perl background :)

[21:19] *** abraxxa joined
[21:20] <JJAtria[m]> Busted :)

[21:26] *** patrickb joined
[21:29] *** abraxxa left
[21:37] *** simcop2387 left
[21:37] *** perlbot left
[21:38] *** perlbot joined
[21:39] *** simcop2387 joined
[22:35] *** mowcat left
[22:58] *** __jrjsmrtn__ joined
[23:00] *** _jrjsmrtn left
[23:07] *** cpan-raku left
[23:10] *** BenGoldberg joined
[23:11] *** cpan-raku joined
[23:11] *** cpan-raku left
[23:11] *** cpan-raku joined
[23:20] <moon-child> I think the docs for 'mkdir' (https://docs.raku.org/routine/mkdir) are wrong (or it has a bug; either way, there's an inconsistency).  It says the default mode is 0o777, but when I ls -l a dir made by 'mkdir' the result is drwxr-xr-x, which should be 0o755

[23:20] <moon-child> am I missing anything?

[23:44] *** BenGoldberg left
[23:53] <vrurg> moon-child: unless you're gone already, you miss `man umask`.

