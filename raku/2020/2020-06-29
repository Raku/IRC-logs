[00:02] *** sena_kun joined
[00:04] *** Altai-man_ left
[00:05] *** aborazmeh left
[00:06] *** bdju left
[00:06] *** bdju joined
[00:10] *** rbt left
[00:11] *** mowotter joined
[00:11] *** rbt joined
[00:13] *** mowcat left
[00:26] *** mowotter left
[00:27] *** softmoth joined
[00:41] *** vrurg left
[00:43] *** mowotter joined
[00:48] *** vrurg joined
[00:52] *** vrurg left
[00:55] *** PavelB left
[00:56] *** PavelB joined
[01:03] *** hungryd25 joined
[01:05] *** hungrydonkey left
[01:06] *** molaf left
[01:11] *** vrurg joined
[01:18] *** molaf joined
[01:23] *** bdju left
[01:23] *** bdju joined
[01:29] *** MasterDuke left
[01:35] <cpan-raku> New module released to CPAN! Red (0.1.11) by 03FCO

[01:37] *** oddp left
[01:55] *** lucasb left
[01:59] <cpan-raku> New module released to CPAN! Red (0.1.12) by 03FCO

[02:01] *** Altai-man_ joined
[02:02] *** vrurg left
[02:03] *** molaf left
[02:03] *** sena_kun left
[02:15] *** molaf joined
[02:18] *** vrurg joined
[02:33] *** mowotter left
[02:38] *** AlexDaniel left
[02:40] *** AlexDaniel joined
[02:40] *** AlexDaniel left
[02:40] *** AlexDaniel joined
[02:44] *** xinming_ left
[02:45] *** xinming_ joined
[02:48] *** bdju left
[02:48] *** bdju joined
[02:49] *** vike left
[03:01] *** vike joined
[03:01] *** bocaneri is now known as Sauvin

[03:02] *** stux|RC left
[03:17] *** hungryd25 left
[03:18] *** hungrydonkey joined
[03:24] *** cuteface joined
[03:35] *** stux|RC joined
[03:58] *** reach_satori left
[03:58] *** reach_satori joined
[04:02] *** sena_kun joined
[04:03] *** Altai-man_ left
[04:05] *** wamba joined
[04:06] *** hungryd50 joined
[04:10] *** hungrydonkey left
[04:29] *** ben94 joined
[04:31] *** ben94 left
[04:33] *** cuteface left
[04:45] *** brtastic joined
[05:10] *** rbt left
[05:11] *** rbt joined
[05:17] *** OpenZen left
[05:25] *** brtastic left
[05:26] *** skids joined
[05:33] *** softmoth_ joined
[05:34] *** softmoth left
[05:42] *** skids left
[06:00] *** sno left
[06:01] *** Altai-man_ joined
[06:03] *** brtastic joined
[06:03] *** sena_kun left
[06:05] *** PavelB left
[06:08] *** brtastic left
[06:08] *** brtastic joined
[06:10] *** tejr left
[06:14] *** cgfbee joined
[06:15] *** tejr joined
[06:21] <abraxxa> we should get Raku in there: https://github.com/postmanlabs/postman-code-generators

[06:21] *** PavelB joined
[06:29] *** wamba left
[06:35] *** sno joined
[06:38] *** hungryd50 left
[06:38] *** hungrydonkey joined
[06:40] *** cpan-raku left
[06:41] *** cpan-raku joined
[06:41] *** cpan-raku left
[06:41] *** cpan-raku joined
[06:51] *** soursBot joined
[06:56] *** xelxebar left
[06:57] *** xelxebar joined
[07:02] *** finanalyst joined
[07:03] *** wamba joined
[07:17] *** pecastro joined
[07:18] *** stoned75 joined
[07:30] *** ufobat joined
[07:30] *** abraxxa left
[07:32] *** abraxxa joined
[07:33] <ufobat> When I create a rakutest in Comma (the IDEA plugin version of it), comma seems not to be aware of imported subs. I get a syntax error on `done-testing;` stating it has not been declared. Any advice?

[07:36] *** soursBot left
[07:40] *** brtastic left
[07:44] *** dakkar joined
[08:01] *** ab5tract joined
[08:01] <ab5tract> o/ #raku

[08:01] <ab5tract> thought you might appreciate the first post on my new blog: https://5ab5traction5.bearblog.dev/apl-keyboard-keeper/

[08:02] *** softmoth_ left
[08:02] <ab5tract> it's part of an on-going series called "Raku to the Rescue"

[08:02] *** sena_kun joined
[08:04] *** Altai-man_ left
[08:11] *** kensanata joined
[08:13] *** MasterDuke joined
[08:20] <sena_kun> ufobat, do you have latest version of complete one?

[08:21] <sena_kun> ufobat, you need to either create raku SDK and set it for the whole project or if you are using latest complete, there is another nice way to have raku SDK added in this release.

[08:22] <ufobat> what is "complete"? the not-plugin-version?

[08:23] <sena_kun> ufobat, complete == not community, the one with paid subscription. It provides both plugin and non-plugin version with more features, has shorter release cycle and other goodies.

[08:23] <ufobat> ah! no I do have the community version

[08:24] <sena_kun> Global SDK then. Or in a month we will do a new community release with another way on board.

[08:25] * sena_kun afk&

[08:25] *** MasterDuke left
[08:26] *** antoniogamiz joined
[08:31] <ufobat> sena_kun, thank you. :-)

[08:34] *** aborazmeh joined
[08:34] *** aborazmeh left
[08:34] *** aborazmeh joined
[08:35] *** PavelB left
[08:37] <ufobat> sena_kun, it worked on the comma ide (non-plugin version). I did the same on idea with the plugin, and it did not work :(

[08:38] <ufobat> but that was right hint :)

[08:43] *** JJMerelo joined
[08:43] *** xinming_ left
[08:44] *** xinming_ joined
[08:46] *** soursBot joined
[08:49] <sena_kun> ufobat, hmm, so setting project SDK to be raku one works or?

[08:49] <ufobat> it works on comma ide, it does not wor on idea with the comma plugin,

[08:49] *** soursBot left
[08:50] <ufobat> (I've deleted the .idea folder and imported in again, but it stays broken)

[08:51] *** rindolf joined
[08:51] <sena_kun> ufobat, did not work in what way?

[08:52] <ufobat> i could apply the settings, so the raku sdk is attacht to that project. but the syntax errors are still found. those for `done-testing` and stuff

[08:54] <sena_kun> oh

[08:54] <sena_kun> ufobat, is it persistent after restart?

[08:54] <ufobat> yeah, it is persistent

[08:55] <sena_kun> sigh

[08:57] <sena_kun> No luck then. Previous release did improve some parts in this area and I hope to address more platform-specific issues in next one. They are the most complex to resolve and usually the most annoying when you have resources shortage.

[08:57] <ufobat> on comma i can not install other plugins, is that intentional?

[08:57] *** jmcgnh joined
[08:58] <sena_kun> ufobat, not really, that's an old bug fixed about two releases ago.

[08:58] *** andrzejku joined
[08:59] <ufobat> i've got comma 2020.04

[09:00] <sena_kun> This one doesn't ship the fix, I'm afraid.

[09:00] <ufobat> a different topic: i couldn't find which version of idea is supported for the comma-plugin, because it does not work on the latest idea

[09:01] *** sarna joined
[09:01] <ufobat> but comma 2020.04 is the latest one to download on the website :(

[09:02] *** MasterDuke joined
[09:02] <sena_kun> ufobat, 2019.3 works with it. 2020.3 is supported since 2020.05.

[09:03] <ufobat> i've idea 2020.1.2 which does not work with the plugin

[09:04] <sena_kun> Yes, latest community Comma plugin works with idea 2019.3.

[09:07] <ufobat> except for me :( well i guess i need to wait for the next comma release so I could either use comma and install my own plugins, or i could use comma on a different ide, where the SDK works

[09:09] <ufobat> s/ide/idea version/

[09:09] <sena_kun> ufobat, can you install your plugins from filesystem?

[09:10] <ufobat> yeah i guess that might work :)

[09:10] *** noisome_possum joined
[09:11] <sena_kun> The bug is related to plugin market, but the plugin stallation should work given they are compatible with 193 build (that is, 2019.3 IDEA version.

[09:12] *** oddp joined
[09:13] *** aborazmeh left
[09:13] *** rbt left
[09:14] *** rbt joined
[09:20] *** aborazmeh joined
[09:20] *** aborazmeh left
[09:20] *** aborazmeh joined
[09:22] <ufobat> yes, i think i am happy now

[09:22] <sena_kun> Yay

[09:24] <ufobat> thanks for all the hints and help :)

[09:24] <sena_kun> No problem, ping me anytime about this. I am quite ashamed you had to go through all this, though.

[09:38] *** Zero_Dogg joined
[09:39] *** cpan-raku left
[09:41] *** cpan-raku joined
[09:41] *** cpan-raku left
[09:41] *** cpan-raku joined
[09:42] <Zero_Dogg> Hi! I've been using Raku for a small command-line app that I've been hacking on, and I'm noticing that it's quite slow to start. A simple '--version' which just outputs the version number takes 3 seconds. Are there any specific features of the language that are really slow to compile in the current implementation? (rakudo/moarvm)

[09:47] <ufobat> you can have you code in a module, because modules get precompiled

[09:48] <ufobat> this should increase the startup speed a lot

[09:49] <ufobat> if you need an example: https://modules.raku.org/dist/cro:cpan:JNTHN/lib/Cro/Tools/CLI.pm6

[09:50] *** antoniogamiz left
[09:50] <samebchase-> ab5tract: Nice post!!

[09:52] <Zero_Dogg> thanks, that might be a good idea, since the overhead is quite a lot for a cli-app. Is there some sort of generally-agreed-upon magic for a script to locate its own lib dir? Ie. I'd like to support someone just cloning the repo, andsymlinking the executeable script into ~/bin

[09:55] <Zero_Dogg> (ie. FindBin+use lib "$FindBin::RealBin …" used to be a way to do it in perl)

[09:57] <sena_kun> Zero_Dogg, we don't do it this way here. You can provide a distribution of your app with code in `lib` and `bin`. The zef package manager on `zef install A::Cool::App` will install lib and bin in a way which would work for the user.

[09:58] <sena_kun> I mean, you create a normal "module" (which is called distribution) here with your code, tests, docs, resources and maybe runner scripts in `bin`. Then it can be managed using zef for the end-user.

[10:01] *** JJMerelo left
[10:01] *** Altai-man_ joined
[10:04] *** sena_kun left
[10:06] <Zero_Dogg> sena_kun: Yep, I realize that, but that breaks the expectation of clone repo->run. I can appreciate it being cleaner, but for simply trying out something, having to resort to yet another package manger probably isn't worth it.

[10:06] <tellable6> Zero_Dogg, I'll pass your message to sena_kun

[10:07] *** wamba left
[10:08] <Altai-man_> Zero_Dogg, I am not sure what is your goal. Do you want it to be handy for developers of the module or for users?

[10:09] <Zero_Dogg> Altai-man_: It's not a module. It's a command-line application, so intended for home end-users. It just happens to be written in Raku.

[10:09] *** rindolf left
[10:10] *** rbt left
[10:11] <Zero_Dogg> Right now, it's just a single file, around 2300 lines including comments and docs. But it's painfully slow to start up. So the recommendation was to split parts of it into a module that the script just loads, to get precompilation. But I'd rather not require users to fiddle with zef unless they have to.

[10:11] *** rbt joined
[10:12] <Altai-man_> Zero_Dogg, well, technically you can go with `use lib $?FILE.IO.parent.child('lib')` or something like this. It takes compile-time path to the script executed in $?FILE, then gets lib directory path and adds this path into a path to search modules for.

[10:13] <Altai-man_> s/into a path/into paths/

[10:13] <Zero_Dogg> Altai-man_: I'll look into that, thanks. Will raku still precompile the libs though, or is that something that zyf does on install-time?

[10:13] <Altai-man_> Zero_Dogg, it will still precompile them.

[10:14] <Zero_Dogg> Altai-man_: Right then. Thanks!

[10:14] <Zero_Dogg> I'm not opposed to releasing a distribution of it at all, that might even be a preferred way to install it, I just don't want to break existing expectations of clone->run

[10:17] <lizmat> Zero_Dogg: you should realize that zef is a frontend to module installation logic that is in the core

[10:19] <Zero_Dogg> lizmat: right, but pretty much the de-facto one at this point, isn't it

[10:19] <lizmat> yes

[10:23] *** ShimmerFairy left
[10:23] *** ShimmerFairy joined
[10:30] *** andrzejku left
[10:30] *** andrzejku joined
[10:31] *** kensanata left
[10:31] *** kensanata joined
[10:32] *** antoniogamiz joined
[10:37] <Zero_Dogg> Is .pm6 still the recommended module extension, or is it being phased out for something more raku-ish?

[10:38] <dakkar> `.rakumod`, I believe

[10:38] <antoniogamiz> rakumod? is not that too long_?

[10:38] <tellable6> 2020-06-27T13:42:39Z #raku <tbrowder> antoniogamiz: hello

[10:38] <antoniogamiz> tbrowder: hi :D

[10:39] *** finanalyst left
[10:39] <jnthn> antoniogamiz: No.

[10:40] <antoniogamiz> :)

[10:40] <dakkar> unless you're using DOS or CP/M, I don't think there's any restriction on filename length

[10:40] <antoniogamiz> I will have to rename my module files then

[10:40] <antoniogamiz> is this change documented anywhere?

[10:43] *** andrzejku left
[10:48] <MasterDuke> https://github.com/Raku/problem-solving/blob/2d7b3f5a85ae9c8f913ba16994836ed59cf6de50/solutions/language/PATH-TO-RAKU.md#extensions

[10:52] <antoniogamiz> ty

[10:52] <cpan-raku> New module released to CPAN! App::Mi6 (0.4.0) by 03SKAJI

[11:00] <CIAvash> I couldn't find anything about the `perl` keyword in META6.json in Path-To-Raku.md. Is that not going to change?

[11:09] *** brtastic joined
[11:12] *** aborazmeh left
[11:15] <lizmat> CIAvash: I guess that was forgotten, assume it will be superseded by "raku" at some point, I'd say

[11:15] <lizmat> for a long time, I assume both will be supprted

[11:25] *** dataangel left
[11:36] *** hungrydonkey left
[11:37] <ufobat> is there anything i need to do beside set a breakpoint and run a script in the debugger in comma, in order to stop at this breakpoint?

[11:44] <Altai-man_> ufobat, not really. But current MoarVM support of breakpoints is LTA, so you might have troubles with 1)breakpoints being hit more than once; 2)breakpoints not being hit. The second case is resolved by simply adding some, dunno, say statement around the place you want to look at and add a couple more breakpoints on them.

[11:45] *** finanalyst joined
[11:46] <ufobat> none of my breakpoints get hit :-(

[11:47] <Altai-man_> ufobat, I wish we had more moarvm-level hackers with time on hands... The workaround I wrote above usually helps.

[11:47] *** pheix joined
[11:49] <ufobat> I've added a couple of says and added a breakpoint on each. unfortunatelly it didnt help.

[11:50] <pheix> Hi, friends! Just noticied that download link for Star Bundle 20.01 sources (linux&mac) is returning 404 (((( https://rakudo.org/latest/star/src

[11:51] <Altai-man_> ufobat, you might want to add more...

[11:52] <ufobat> like 10?

[11:53] <Altai-man_> ufobat, 6-8?

[11:53] <Altai-man_> If you have 10 and it doesn't work, then, erm, I assume you are running it in debug mode. As in, not `Run script foo`, but `Debug script foo` in Run menu.

[11:54] <ufobat> i had 7, let me add 4 more..

[11:54] <antoniogamiz> Test::Output has been deleted?!

[11:54] <ufobat> yeah I pushed "debug script"

[11:55] <ufobat> nope :(

[11:55] <ufobat> doesn't work

[11:55] <Altai-man_> No luck then, sorry.

[11:55] <antoniogamiz> ignore my last message, my zef installation is not finding modules for some reason

[11:56] *** rindolf joined
[11:57] <Zero_Dogg> Do I need to define a 'unit' within a rakumod-file (like perl5 'package')? Ie. if I've got a single class in lib/Foo/base.rakumod declared with 'class fooBase is export', do I need a unit declaring 'unit Foo::base;' as well?

[11:57] *** dolmen joined
[11:58] <antoniogamiz> Zero_Dogg: or 'class diaso {}' or 'unit class diaso;'

[12:01] <Zero_Dogg> antoniogamiz: What I'm unclear about is what is implicit here. I want a base class that I load with 'use Foo::base'; If I just declare 'unit class Foo::base'; in that file, will said class be exported as "Foo::base" upon 'use Foo::base'?

[12:02] *** sena_kun joined
[12:02] <antoniogamiz> yep

[12:03] <Zero_Dogg> Thanks, I wasn't quite sure from reading the docs

[12:03] <antoniogamiz> you can always test it locally

[12:03] *** Altai-man_ left
[12:03] <antoniogamiz> open an issue if you think that part of the docs is unclear 

[12:04] <Zero_Dogg> I'll do that

[12:05] *** hungrydonkey joined
[12:18] *** antoniogamiz left
[12:19] *** fluca1978 joined
[12:20] <fluca1978> hi, given an array of integers like (1,1,2,3) I would like a smart test to see if a number appears more than once. So far I've found only: `for @digits -> $number { $ok = False if @digits.grep( $number ).elems > 1; } Any suggestion?

[12:21] <sena_kun> fluca1978, you want to see if any numbers appears more than once or some specific one?

[12:21] <tellable6> hey sena_kun, you have a message: https://gist.github.com/52cf13c057560d8296fbf541a34c295b

[12:23] <MasterDuke> m: my @a = 1,2,3,3; say @a.elems == @a.unique.elems

[12:23] <camelia> rakudo-moar f1960baa9: OUTPUT: «False␤»

[12:23] <sena_kun> m: my @a = 1, 1, 2, 3; say @a.unique.elems == @a.elems;

[12:23] <camelia> rakudo-moar f1960baa9: OUTPUT: «False␤»

[12:23] <MasterDuke> jinx

[12:23] <sena_kun> hehehe

[12:24] <sena_kun> MasterDuke, I still think this is not very efficient, right? I mean, we probably want to lazy gather in a hash.

[12:24] <MasterDuke> but that's not going to short-circuit if/when there's a duplicate

[12:24] <MasterDuke> yeah, just depends on how big the arrays are going to be

[12:25] <oddp> There's also:

[12:25] <oddp> m: say [1,2,3,1,2].repeated

[12:25] <camelia> rakudo-moar f1960baa9: OUTPUT: «(1 2)␤»

[12:26] <sena_kun> m: my @a = 1, 1, 2, 3; my %h; for @a { with %h{$_} { say "False!" } else { %h{$_} = True } }

[12:26] <camelia> rakudo-moar f1960baa9: OUTPUT: «Use of uninitialized value %h{'1'} of type Any in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤  in block  at <tmp> line 1␤Use of uninitialized value %h{'1'} of type Any in string con…»

[12:27] <sena_kun> wat

[12:27] <fluca1978> MasterDuke: thanks, `unique` was what I was looking for

[12:27] <sena_kun> m: my @a = 1, 1, 2, 3; my %h; for @a -> $n { with %h{$n} { say "False!"; last } else { %h{$n} = True } }

[12:27] <camelia> rakudo-moar f1960baa9: OUTPUT: «False!␤»

[12:27] <oddp> Isn't (...).repeated.first short-circuting?

[12:28] <MasterDuke> dunno. wouldn't depend on how .reapeated is implemented, right?

[12:29] *** epony left
[12:36] *** noisome_possum left
[12:36] *** vike left
[13:01] *** dogbert17 left
[13:17] *** rbt left
[13:17] *** rbt joined
[13:20] *** andrzejku joined
[13:25] *** ab5tract left
[13:29] *** dolmen left
[13:32] <ufobat> fixed a bug im Time::Crontab :D yeah

[13:33] <ufobat> first contribution to open source since month :)

[13:34] <sena_kun> ufobat++

[13:46] *** BlackChaosNL[m] left
[13:46] *** AlexDaniel` left
[13:46] *** unclechu left
[13:46] *** uzl[m] left
[13:46] *** matiaslina left
[13:46] *** Guest98635 left
[13:46] *** Nasrudin left
[13:46] *** CIAvash left
[13:46] *** dogbert17 joined
[13:47] <cpan-raku> New module released to CPAN! App::Mi6 (0.4.1) by 03SKAJI

[13:50] *** Geth left
[13:50] *** Geth joined
[13:53] *** Kaiepi left
[13:55] *** dolmen joined
[13:58] *** sarna left
[14:00] *** vike joined
[14:00] *** ufobat left
[14:01] *** Altai-man_ joined
[14:04] *** sena_kun left
[14:04] *** xinming_ left
[14:05] *** Nasrudin joined
[14:06] *** xinming_ joined
[14:08] *** andrzejku left
[14:14] *** unclechu joined
[14:14] *** AlexDaniel` joined
[14:14] *** BlackChaosNL[m] joined
[14:14] *** Demos[m] joined
[14:14] *** matiaslina joined
[14:14] *** xfix joined
[14:14] *** CIAvash joined
[14:14] *** uzl[m] joined
[14:18] <lizmat> PSA: this weeks RWN is going to be so big, it will be a late one, or an early one tomorrow

[14:21] *** andrzejku joined
[14:24] <Altai-man_> lizmat, cloud conf?

[14:24] <lizmat> that, and the elephant in the room

[14:24] <Altai-man_> oh

[14:25] <Altai-man_> lizmat, don't push yourself too much. :)

[14:25] <lizmat> it's quite a big elephant :-)

[14:26] *** MasterDuke left
[14:28] <jdv79> lizmat: to try your match refactor all taht's needed is to checkout that rakudo branch and make install?

[14:28] <lizmat> jdv79: yes

[14:29] <jdv79> did that - my grammar heavy use case seemed only slightly slower - maybe 2-3%...

[14:29] <lizmat> well, the intent is to make it faster :-)

[14:29] <lizmat> could you run a --profile and post that somwhere ?

[14:29] <jdv79> at least it wasn't a lot slower;)

[14:30] <jdv79> maybe sometime soon - i'll make a note to myself

[14:30] <lizmat> ++jdv79

[14:37] *** titsuki joined
[14:41] *** xinming_ left
[14:41] *** robinsmidsrod left
[14:41] *** robinsmidsrod joined
[14:43] *** xinming_ joined
[14:56] *** hungryd75 joined
[14:58] *** hungrydonkey left
[14:59] *** lichtkind joined
[15:02] *** epony joined
[15:05] *** MilkmanDan left
[15:08] *** antoniogamiz joined
[15:16] *** pheix left
[15:22] *** andrzejku left
[15:26] *** brtastic left
[15:29] *** hungryd75 left
[15:29] *** hungrydonkey joined
[15:29] *** kensanata left
[15:43] *** OpenZen joined
[15:43] *** melezhik joined
[15:43] *** rypervenche left
[15:44] <melezhik> I am thinking about writing of series of post on Raku - Devops using Sparrow

[15:45] <melezhik> things like automation of docker containers, installing Raku dependecies, running cro/web applications, so on

[15:45] <melezhik> if that sounds like an interesting topic - please let me know 

[15:46] *** rypervenche joined
[15:47] <Altai-man_> melezhik, this sounds like an interesting topic. Any activity with "Raku programming language" is very helpful, I think, more content/promotion and so on.

[15:48] <melezhik> yeah, I am trying to be more specific, I have a breadth of experience ... but I am kind a "blind" in a sense I don't use Raku often 

[15:49] <melezhik> so if Raku people bring up any more specific subjects - I'd more then happy to cover them up

[15:50] *** andrzejku joined
[15:51] <melezhik> maybe worth to post a questionnaire on reddit/r/rakuland, I don't know ... 

[15:53] <melezhik> an interesting word came up accidentally, "RakuLand" :-) 

[15:53] *** rindolf left
[15:54] <melezhik> reserve the one for future needs ))))

[15:55] *** MilkmanDan joined
[15:59] *** rindolf joined
[16:00] <timotimo> .o( screencasts )

[16:01] *** melezhik73 joined
[16:01] *** melezhik73 is now known as melezhik2

[16:02] *** sena_kun joined
[16:03] *** Altai-man_ left
[16:04] *** melezhik left
[16:06] *** softmoth_ joined
[16:06] *** brtastic joined
[16:14] <abraxxa> just a short note before I forget it: I thought about the sigils and a guide like the following might help to understand it's benefits:

[16:14] *** sno left
[16:14] <abraxxa> A variable prefixed with the @ sigil is guaranteed to contain an object that does one of the following (or all?) roles: ....

[16:19] *** skids joined
[16:20] <antoniogamiz> abraxxa: are you asking for a new guide in the docs?

[16:20] *** jmerelo joined
[16:21] <antoniogamiz> uzl[m]: well with Pod::To::HTML :)

[16:21] <antoniogamiz> well done*

[16:29] *** antoniogamiz left
[16:31] *** dakkar left
[16:42] <cpan-raku> New module released to CPAN! Math::Libgsl::LinearAlgebra (0.0.1) by 03FRITH

[16:48] *** andrzejku left
[16:48] <cpan-raku> New module released to CPAN! Time::Crontab (1.0.0) by 03UFOBAT

[16:57] *** fluca1978 left
[16:58] *** Demos[m] left
[16:58] *** uzl[m] left
[16:59] *** Kaiepi joined
[17:09] *** melezhik2 left
[17:23] *** japhb left
[17:23] *** japhb joined
[17:25] *** Tirifto joined
[17:26] <lizmat> notable6: weekly

[17:26] <notable6> lizmat, 6 notes: https://gist.github.com/5ef2009536a48cd6e1d2d8f0fec9f343

[17:30] <lizmat> notable6: weekly reset

[17:30] <notable6> lizmat, Moved existing notes to “weekly_2020-06-29T17:30:07Z”

[17:30] *** titsuki left
[17:36] * lizmat takes a break for a few hours, to finish the RWN later today

[17:36] *** melezhik joined
[17:38] *** andrzejku joined
[17:40] *** dolmen left
[17:44] *** xinming_ left
[17:45] *** xinming_ joined
[17:46] *** melezhik left
[17:56] *** antoniogamiz joined
[17:59] <antoniogamiz> .

[18:01] *** Altai-man_ joined
[18:03] *** sena_kun left
[18:03] *** andrzejku left
[18:04] *** hungrydonkey left
[18:07] *** MasterDuke joined
[18:16] *** natrys joined
[18:17] *** sno joined
[18:18] <El_Che> no messages for ou :)

[18:18] <El_Che> y

[18:21] *** sno left
[18:23] *** sno joined
[18:28] *** Sauvin left
[18:32] *** brtastic left
[18:34] *** andrzejku joined
[18:40] *** antoniogamiz left
[18:44] *** melezhik joined
[18:48] <melezhik> .tell Altai-man_ here is the draft of my very first post on the series - https://github.com/melezhik/RakuOps/tree/master/docker-sparrow

[18:48] <tellable6> melezhik, I'll pass your message to Altai-man_

[18:50] *** dogbert17 left
[18:53] *** dogbert17 joined
[19:09] *** andrzejku left
[19:20] *** Maylay left
[19:22] *** Maylay joined
[19:22] *** melezhik left
[19:23] *** xinming_ left
[19:24] *** xinming_ joined
[19:48] <Geth> ¦ doc/finanalyst-patch-1: 8a09dcc0c3 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/functions.pod6

[19:48] <Geth> ¦ doc/finanalyst-patch-1: Expand on the use of {*} with proto

[19:48] <Geth> ¦ doc/finanalyst-patch-1: 

[19:48] <Geth> ¦ doc/finanalyst-patch-1: The documentation was not as clear as I needed. I tried several times to understand it, but failed. 

[19:48] <Geth> ¦ doc/finanalyst-patch-1: I got it nearly right when I asked on perl6-users.  

[19:48] <Geth> ¦ doc/finanalyst-patch-1: Crucially '{*}' is a special token without whitespace - this needs to be noted.  

[19:48] <Geth> ¦ doc/finanalyst-patch-1: The extra example combines the proto declaration with methods that use it.

[19:48] <Geth> ¦ doc/finanalyst-patch-1: review: https://github.com/Raku/doc/commit/8a09dcc0c3

[19:50] <Geth> ¦ doc: finanalyst++ created pull request #3500: Expand on the use of {*} with proto

[19:50] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3500

[19:54] *** kensanata joined
[19:59] *** xinming_ left
[20:00] *** xinming_ joined
[20:02] *** dolmen joined
[20:02] *** sena_kun joined
[20:03] *** Altai-man_ left
[20:04] *** stoned75 left
[20:06] *** stoned75 joined
[20:10] *** rbt left
[20:11] *** rbt joined
[20:11] *** kensanata left
[20:12] <Geth> ¦ doc/finanalyst-patch-1: 7b8d232298 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/functions.pod6

[20:12] <Geth> ¦ doc/finanalyst-patch-1: inside the curly braces - edit

[20:12] <Geth> ¦ doc/finanalyst-patch-1: review: https://github.com/Raku/doc/commit/7b8d232298

[20:15] <Geth> ¦ doc/finanalyst-patch-1: 96d1c49949 | (Richard Hainsworth)++ (committed using GitHub Web editor) | xt/code.pws

[20:15] <Geth> ¦ doc/finanalyst-patch-1: add example classname 'newclass'

[20:15] <Geth> ¦ doc/finanalyst-patch-1: review: https://github.com/Raku/doc/commit/96d1c49949

[20:16] *** aborazmeh joined
[20:16] *** aborazmeh left
[20:16] *** aborazmeh joined
[20:18] *** andrzejku joined
[20:21] *** andrzejku left
[20:43] *** xinming_ left
[20:44] *** xinming_ joined
[20:49] *** dotdotdot left
[20:55] *** dotdotdot joined
[21:01] *** PavelB joined
[21:03] *** natrys left
[21:05] *** xinming_ left
[21:05] *** xinming_ joined
[21:19] *** dolmen left
[21:21] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/06/29/2020-26-cloud-gone/

[21:22] *** Black_Ribbon joined
[21:23] <oddp> Thank you, liz!

[21:25] <Grinnz> that list of tweets is pretty good evidence for why i suggested not to use 7... but i think the prior art of php 7 and such help with the messaging at least :/

[21:29] <lizmat> fwiw, I also suggested to not use 7 to Sawyer

[21:29] *** vike left
[21:30] <El_Che> what's done is done :)

[21:31] <lizmat> is my impression wrong that Perl 7 is not a done deal yet, at least not wrt p5p ?

[21:31] <Grinnz> that's kind of the discussion itself right now :P

[21:31] *** Box joined
[21:31] <El_Che> I don't think they can backtrack now

[21:32] <El_Che> the discussions it's probably about what perl 7 means

[21:32] <Grinnz> while i want and hope that perl 7 means something different, yeah, i don't see the overall major version usage changing

[21:33] <El_Che> Grinnz: what do you mean? everyone will stick with 5?

[21:33] <Grinnz> er

[21:33] *** melezhik joined
[21:33] <Grinnz> sorry let me reword that... i don't see the direction of releasing a "perl 7" changing

[21:33] <melezhik> where can I find a documentation on class for loop?

[21:33] <melezhik> i=1; i++; i<10;

[21:33] *** cpan-raku left
[21:33] <melezhik> classic

[21:34] <lizmat> loop ?

[21:34] <El_Che> loop

[21:34] <melezhik> iterator

[21:34] <lizmat> https://docs.raku.org/syntax/loop

[21:34] <melezhik> thanks

[21:34] <El_Che> m: loop (my $i = 0; $i < 10; $i++) { .say }

[21:34] <camelia> rakudo-moar f1960baa9: OUTPUT: «(Any)␤(Any)␤(Any)␤(Any)␤(Any)␤(Any)␤(Any)␤(Any)␤(Any)␤(Any)␤»

[21:34] <melezhik> I saw this, but every time I need this, I forget where it is ))))

[21:34] <El_Che> ok, something like that

[21:35] <melezhik> yeah, sure, thanks!

[21:35] *** cpan-raku joined
[21:35] *** cpan-raku left
[21:35] *** cpan-raku joined
[21:37] <melezhik> m: my $g = 32 dev 2; loop ( my $i = $g; $g > 0; $g = $g div 2 ) { say $i }

[21:37] <camelia> rakudo-moar f1960baa9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my $g = 327⏏5 dev 2; loop ( my $i = $g; $g > 0; $g = ␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        stateme…»

[21:37] <El_Che> div?

[21:37] <melezhik> yeah

[21:38] <El_Che> "32 dev 2"

[21:38] <melezhik> ahh ... ok

[21:38] *** Box left
[21:38] <melezhik> m: my $g = 32 div 2; loop ( my $i = $g; $g > 0; $g = $g div 2 ) { say $i }

[21:38] <camelia> rakudo-moar f1960baa9: OUTPUT: «16␤16␤16␤16␤16␤»

[21:40] <melezhik> m: loop ( my $g = 32 div 2; $g > 0; $g = $g div 2 ) { say $i }

[21:40] <camelia> rakudo-moar f1960baa9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$i' is not declared␤at <tmp>:1␤------> 0332 div 2; $g > 0; $g = $g div 2 ) { say 7⏏5$i }␤»

[21:40] <melezhik> m: loop ( my $g = 32 div 2; $g > 0; $g = $g div 2 ) { say $g }

[21:40] <camelia> rakudo-moar f1960baa9: OUTPUT: «16␤8␤4␤2␤1␤»

[21:40] <melezhik> m: loop ( my $g = 32 div 3; $g > 0; $g = $g div 3 ) { say $g }

[21:40] <camelia> rakudo-moar f1960baa9: OUTPUT: «10␤3␤1␤»

[21:48] *** melezhik left
[22:01] *** Altai-man_ joined
[22:02] *** rindolf left
[22:04] *** sena_kun left
[22:08] *** melezhik joined
[22:09] <melezhik> m: my @a = 1,2,3;  loop (my $i = 1; $i > 1 && @a[$i-1] > 1; $i++; ) { say $i  }

[22:09] <camelia> rakudo-moar f1960baa9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed loop spec (expected 3 semicolon-separated expressions but got more)␤at <tmp>:1␤------> 3(my $i = 1; $i > 1 && @a[$i-1] > 1; $i++7⏏5; ) { say $i  }␤»

[22:09] <melezhik> m: my @a = 1,2,3;  loop (my $i = 1; $i > 3 && @a[$i-1] > 1; $i++; ) { say $i  }

[22:09] <camelia> rakudo-moar f1960baa9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed loop spec (expected 3 semicolon-separated expressions but got more)␤at <tmp>:1␤------> 3(my $i = 1; $i > 3 && @a[$i-1] > 1; $i++7⏏5; ) { say $i  }␤»

[22:10] <melezhik> m: my @a = 1,2,3;  loop (my $i = 1; $i <= 2 && @a[$i-1] > 1; $i++; ) { say $i  }

[22:10] <camelia> rakudo-moar f1960baa9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed loop spec (expected 3 semicolon-separated expressions but got more)␤at <tmp>:1␤------> 3my $i = 1; $i <= 2 && @a[$i-1] > 1; $i++7⏏5; ) { say $i  }␤»

[22:10] <melezhik> what is wrong with my loop statement?

[22:10] <melezhik> m: my @a = 1,2,3;  loop (my $i = 1; $i <= 2 && $i > 1; $i++; ) { say $i  }

[22:10] <camelia> rakudo-moar f1960baa9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed loop spec (expected 3 semicolon-separated expressions but got more)␤at <tmp>:1␤------> 3loop (my $i = 1; $i <= 2 && $i > 1; $i++7⏏5; ) { say $i  }␤»

[22:10] <melezhik> m: my @a = 1,2,3;  loop (my $i = 1; $i <= 2 and $i > 1; $i++; ) { say $i  }

[22:10] <camelia> rakudo-moar f1960baa9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed loop spec (expected 3 semicolon-separated expressions but got more)␤at <tmp>:1␤------> 3oop (my $i = 1; $i <= 2 and $i > 1; $i++7⏏5; ) { say $i  }␤»

[22:11] <melezhik> m: my @a = 1,2,3;  loop (my $i = 1; ($i <= 2 and $i > 1); $i++ ) { say $i  }

[22:11] <camelia> rakudo-moar f1960baa9: ( no output )

[22:11] <melezhik> ah, it was last semi column

[22:26] *** aborazmeh left
[22:34] *** aborazmeh joined
[22:34] *** aborazmeh left
[22:34] *** aborazmeh joined
[22:35] *** melezhik left
[22:36] *** Tirifto left
[22:43] *** Kaiepi left
[22:44] *** Kaiepi joined
[22:56] *** aborazmeh left
[23:06] *** AlexDaniel left
[23:06] *** AlexDani` joined
[23:08] *** hungrydonkey joined
[23:17] *** reach_satori left
[23:17] *** reach_satori joined
[23:19] *** pecastro left
[23:20] *** vrurg left
[23:20] *** PavelB left
[23:39] *** lichtkind left
[23:53] *** leah2 left
[23:55] *** Xliff joined
[23:56] <Xliff> \o

[23:56] <Xliff> I want to annotate enum entries, however it doesn't look like I can POD-After document each enum entry. How difficult would it be to add that?

[23:56] <Xliff> Is this something that can be done in module space?

[23:57] <Xliff> I suspect I might need a Slang to get that to work.

