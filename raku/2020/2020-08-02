[00:01] *** molaf joined
[00:31] *** moon-child joined
[00:57] <moon-child> is there any special interaction between Inline::Python and threading|networking|async on the python side?  I'm trying to use chatexchange, but it's not routing message properly

[01:12] *** Altai-man_ joined
[01:14] *** sena_kun left
[01:33] *** tejr left
[01:35] *** vike left
[01:42] *** tejr joined
[01:51] *** molaf left
[01:57] *** vike joined
[01:59] *** OpenZen left
[02:02] *** Manifest0 left
[02:03] *** Manifest0 joined
[02:03] *** molaf joined
[02:09] *** Sgeo left
[02:11] *** Sgeo joined
[02:13] <brass> Hey, I'm trying to understand how the rakudo/moarvm compiler toolchain works

[02:13] <brass> How does NQP fit in between rakudo and MoarVM?

[02:16] <brass> Is rakudo written in NQP and NQP compiles it and emits MoarVM bytecode? Or does NQP run directly on MoarVM which then loads rakudo?

[02:16] *** Noisytoot left
[02:16] <brass> Sorry if the questions are a bit silly

[02:16] <brass> Is there a document that explains how it works?

[02:18] <tobs> brass: these ones have a lot more stuff but probably also the answer you're looking for https://edumentab.github.io/rakudo-and-nqp-internals-course/

[02:20] <brass> Oh my God that's MASSIVE

[02:20] <brass> Is there a lecture video that goes along with them?

[02:21] <tobs> I know of none

[02:22] <brass> Also thank you tobs that looks like a great resource!

[02:23] <tobs> Slide 78 of day 1 starts a subsection called The compilation pipeline. Maybe start looking there, after checking the first ten or so slides.

[02:24] <brass> On Day 1?

[02:24] <tobs> yes

[02:25] <brass> Ok thanks, I'll go over them tomorrow when I have more time to read all the slides properly 

[02:30] *** TimToady left
[02:31] *** TimToady joined
[03:12] *** sena_kun joined
[03:13] *** rock6loose joined
[03:14] *** Altai-man_ left
[03:18] *** rockxloose left
[03:30] *** rock6loose is now known as rockxloose

[04:06] *** xinming left
[04:07] *** xinming joined
[04:07] *** lucasb left
[04:08] *** nige joined
[04:10] *** nige left
[04:11] *** nige joined
[04:12] *** guifa2 joined
[04:49] *** nige left
[05:03] *** ensamvarg3 joined
[05:33] *** Sgeo left
[05:35] *** Sgeo joined
[05:42] *** ensamvarg3 left
[05:44] *** andrzejku joined
[05:51] *** xinming left
[05:52] *** xinming joined
[06:06] *** molaf left
[06:12] *** Altai-man_ joined
[06:14] *** sena_kun left
[06:17] *** rindolf joined
[06:36] *** aluaces joined
[06:39] *** guifa2 left
[07:14] *** JJMerelo joined
[07:15] *** gnufr33dom left
[07:15] *** skids left
[08:13] *** sena_kun joined
[08:14] *** Altai-man_ left
[08:16] *** molaf joined
[08:23] *** xinming left
[08:23] *** leont joined
[08:24] *** xinming joined
[08:41] *** cpan-raku left
[08:42] *** cpan-raku joined
[08:42] *** cpan-raku left
[08:42] *** cpan-raku joined
[08:45] *** Noisytoot joined
[08:52] *** xinming left
[08:52] <Geth> Â¦ doc: 18b1b74a7d | (JJ Merelo)++ | doc/Type/IO/Notification/Change.pod6

[08:52] <Geth> Â¦ doc: Starting to document IO::Notifcation::Change spinning it off IO::Notification refs #475

[08:52] <Geth> Â¦ doc: 

[08:52] <Geth> Â¦ doc: For the time being, it's mostly copy/paste from the original; next commit will work with `IO::Notification`

[08:52] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/18b1b74a7d

[08:52] <Geth> Â¦ doc: 0913cf7275 | (JJ Merelo)++ | doc/Type/IO/Notification.pod6

[08:52] <Geth> Â¦ doc: Modifying IO::Notification, closes  #475

[08:52] <Geth> Â¦ doc: 

[08:52] <linkable6> Link: https://docs.raku.org/type/IO::Notification::Change

[08:52] <Geth> Â¦ doc: Eliminates indexing and text that has been moved elsewhere.

[08:52] *** xinming joined
[08:52] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/0913cf7275

[08:52] <linkable6> DOC#475 [closed]: https://github.com/Raku/doc/issues/475 [docs][search][update] IO::Notification::Change is not documented

[08:52] <linkable6> Link: https://docs.raku.org/type/IO::Notification

[09:06] *** Sgeo left
[09:08] *** JJMerelo left
[09:23] *** Kaeipi joined
[09:23] *** Kaiepi left
[09:25] *** Kaiepi joined
[09:25] *** Kaeipi left
[09:55] *** JJMerelo joined
[09:59] *** xelxebar_ joined
[10:00] *** xelxebar left
[10:12] *** Altai-man_ joined
[10:12] <tbrowder> anyone still awake?

[10:12] <Geth> Â¦ doc: fc65fbebc4 | (JJ Merelo)++ | type-graph.txt

[10:12] <Geth> Â¦ doc: Adds IO::Notification::Chane to typegraph refs  #475

[10:12] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/fc65fbebc4

[10:12] <Geth> Â¦ doc: 7615186c3b | (JJ Merelo)++ | doc/Type/IO/Notification.pod6

[10:12] <Geth> Â¦ doc: Added an example and some details. Closes #2828

[10:12] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/7615186c3b

[10:12] <Geth> Â¦ doc: b0b8f0270c | (JJ Merelo)++ | doc/Type/IO/Notification/Change.pod6

[10:12] <Geth> Â¦ doc: Adds reference to .watch, basically the same, #475

[10:12] <linkable6> DOC#475 [closed]: https://github.com/Raku/doc/issues/475 [docs][search][update] IO::Notification::Change is not documented

[10:12] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/b0b8f0270c

[10:12] <linkable6> Link: https://docs.raku.org/type/IO::Notification

[10:12] <linkable6> DOC#2828 [closed]: https://github.com/Raku/doc/issues/2828 [RFE] Improve IO::Notification

[10:13] <linkable6> Link: https://docs.raku.org/type/IO::Notification::Change

[10:13] <tbrowder> i have a question on testing and subtests

[10:14] *** sena_kun left
[10:15] <tbrowder> how, using our testing setup for rakudo spec testing (with roast), does one see individual test msgs in subtests?

[10:16] <tbrowder> i wrapped a set of 10+ tests in a subtest and get one msg about test 1 ok.

[10:17] <tbrowder> i've tried using diag and note but nothing.

[10:18] *** wamba joined
[10:18] <tbrowder> i'm using rakudo's test harness like this "make t/spec/S26*/12-sometest.t"

[10:20] <Geth> Â¦ doc: 2d1615fdcb | (JJ Merelo)++ | doc/Type/IO/Notification.pod6

[10:20] <Geth> Â¦ doc: Tags correctly text

[10:20] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/2d1615fdcb

[10:20] <Geth> Â¦ doc: dffa311e91 | (JJ Merelo)++ | doc/Type/IO/Notification.pod6

[10:20] <Geth> Â¦ doc: Tags _really_ correctly text

[10:20] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/dffa311e91

[10:20] <linkable6> Link: https://docs.raku.org/type/IO::Notification

[10:21] <JJMerelo> tbrowder I think you need to use --verbose; they will be hidden if you don't

[10:21] <tellable6> 2020-08-02T09:17:54Z #raku-dev <tobs> JJMerelo How did you invite me to the advent calendar? I didn't get anything. Feel free to /msg when you're around.

[10:23] *** molaf left
[10:23] <tbrowder> yeah, i think that's not available if i don't use prove directly. just want to "prove" my roast changes work for vrurg.

[10:24] <tbrowder> yuk yuk

[10:25] <tbrowder> jj, is the 20th advent for this Christmas or for earlier?

[10:25] <tbrowder> JJMerelo: ^^^

[10:27] <JJMerelo> tbrowder it's for right now

[10:28] <JJMerelo> We've already published a couple of posts

[10:28] <JJMerelo> tbrowder and we'd love to have your collaboration...

[10:29] <JJMerelo> tbrowder you can also just run with raku -Ilib 

[10:29] <tbrowder> i really can't help right now, sorry

[10:34] <tbrowder>  JJMerelo: thanks for the "raku -I lib" that's what i needed. so, how long would i have to get an article together?

[10:35] <JJMerelo> tbrowder Well, they're gonna be published until the 20th. So, 17 days tops. Of course, if they're ready earlier than that, that would be awesome

[10:36] <tbrowder> erg...can't promise but i'll try to take a look today

[10:40] *** JJMerelo left
[11:40] *** linkable6 left
[11:40] *** evalable6 left
[11:41] *** linkable6 joined
[11:41] *** evalable6 joined
[12:13] *** sena_kun joined
[12:14] *** Altai-man_ left
[12:25] *** MasterDuke left
[12:33] *** andrzejku left
[12:39] *** xinming left
[12:40] *** xinming joined
[12:56] *** _jrjsmrtn joined
[12:58] *** __jrjsmrtn__ left
[13:30] *** xinming left
[13:31] *** xinming joined
[13:35] *** MasterDuke joined
[13:38] *** cpan-raku left
[13:38] *** xinming left
[13:39] *** cpan-raku joined
[13:39] *** cpan-raku left
[13:39] *** cpan-raku joined
[13:40] *** xinming joined
[13:41] *** phogg left
[14:02] *** gnufr33dom joined
[14:08] *** phogg joined
[14:08] *** phogg left
[14:08] *** phogg joined
[14:08] *** xinming left
[14:09] *** Manifest0 left
[14:12] *** Altai-man_ joined
[14:12] *** xinming joined
[14:12] *** Manifest0 joined
[14:14] *** sena_kun left
[14:21] *** xinming left
[14:22] *** xinming joined
[14:31] *** demostanis joined
[14:32] <demostanis> Hello everyone! Why is Zef so slow? It literally took 50 seconds to run command `zef install UNIX::Privileges`

[14:37] *** NickSeagull joined
[14:45] <Altai-man_> demostanis, hi. There are number of reasons, primary is that the current language implementation is not optimized enough, also the code itself is not optimized enough.

[14:53] <tobs> demostanis: when you install something else now, is it faster? I remember such slowdowns after compiler updates which trigger re-precompilation, but I don't know if that's still a practice.

[14:59] <Altai-man_> Just installed it in `21,64 secs`.

[15:04] *** xinming left
[15:05] *** xinming joined
[15:05] <demostanis> tobs: I tried installing NCurses to see, it takes 1 minutes and 47 seconds! 

[15:06] <demostanis> Altai-man_: Is optimizing the code planned in the future?

[15:07] <Altai-man_> demostanis, sure, there are ongoing projects on optimizing moarvm, as well as compiler-level things getting improvements, you can grep rakudo changelog for `fast` at https://github.com/rakudo/rakudo/blob/master/docs/ChangeLog

[15:08] <Altai-man_> More hands and funding would speed up development, but now we have what we have.

[15:08] * Altai-man_ tries to install NCurses

[15:09] * timotimo sees lots of cursing in Altai-man_'s near future

[15:09] <Altai-man_> Dammit

[15:09] <timotimo> fiddlesticks!

[15:09] * Altai-man_ forgot to add `time` before `zef install NCurses`

[15:10] <Altai-man_> Executed in   75,08 secs

[15:11] <demostanis> That's faster than me

[15:11] <Altai-man_> That's kinda long, though I also have boinc attacking all the cores constantly.

[15:11] <timotimo> annoyingly, you can currently not --profile a program that uses exit, and zef uses exit in many places

[15:12] <Altai-man_> demostanis, also, it is not zef which is hella slow. Zef just runs tests of the modules and some of them have not lots of tests, while others have plenty. For example, Cro::HTTP has a looot of tests.

[15:12] <Altai-man_> More tests to execute takes longer.

[15:14] <demostanis> Installing UNIX::Privileges without tests takes 43 seconds instead of 47.

[15:18] <rypervenche> You'll really see the difference with modules that have a lot of (intensive) tests. Cro will show a bigger difference.

[15:26] *** kensanata joined
[15:44] *** JJMerelo joined
[15:46] *** guifa2 joined
[15:48] *** sena_kun joined
[15:49] *** lucasb joined
[15:50] *** andrzejku joined
[15:51] <raku-bridge> <Fernando Santagata> I noticed that modules that use NativeCall are slow to install, even when the module contains just the C-language function declarations (sub xxx() is native is export { * }) Is the compilation process slow because it looks for the function starting location in the C library? (never looked inside Rakudo's guts)

[15:53] *** Altai-man_ left
[15:53] *** Altai-man_ joined
[15:59] <timotimo> giving --stagestats to the rakudo commandline that precompiles these modules can give a tiny hint usually

[15:59] <guifa2> is there anyway to modify a signature at a runtime?

[16:01] * guifa2 isn't sure if .wrap is supposed to allow new args or not.

[16:01] <guifa2> I feel like it should allow for its own signatures to override the original but it appears not to be the case in current Rakudo.  But not sure if I should file an issue or if that's the intended design

[16:03] *** sena_kun left
[16:03] *** parsifal joined
[16:03] *** parsifal left
[16:10] *** Kaeipi joined
[16:11] *** Kaiepi left
[16:13] *** sena_kun joined
[16:14] *** Altai-man_ left
[16:18] <JJMerelo> .tell tbrowder thanks

[16:18] <tellable6> JJMerelo, I'll pass your message to tbrowder

[16:20] *** Kaeipi left
[16:20] <timotimo> i imagine a wrapped routine would want to return the wrapper's signature when introspected

[16:21] <guifa2> timotimo: actually I think I figured out

[16:21] <guifa2> it seems to be more of a problem with wrapping multis

[16:21] <guifa2> I think

[16:22] <guifa2> I got what I needed to do to work but I'll investigate more to make sure behavior is as expected or could be improved

[16:23] *** Kaiepi joined
[16:23] <timotimo> without having looked closely, i think calling .signature on a multi ought to give you the signature of the proto, and if the multi is wrapped (which really means the proto got wrapped, unless you're really wrapping an individual candidate directly) ...

[16:23] <timotimo> then you'd get the wrapper's signature

[16:24] <timotimo> though i imagine you can't get at the candidates that way any more

[16:24] <timotimo> which also makes sense, since you're not guaranteed to have the same dispatch semantics any more if the proto got wrapped

[16:24] <timotimo> i.e. the wrapper could switch argument order or change types or whatever

[16:24] <timotimo> then the individual signatures are not useful information any more

[16:31] <guifa2> Okay I think I've finally got this.  Nwo just a question on naming

[16:32] *** cpan-raku left
[16:32] <guifa2> There's two different timezone IDs.  There's the finer geographical (America/New_York, Europe/Madrid) and then there's the broader political (Central European, Atlantic, etc)

[16:32] *** xinming left
[16:33] <guifa2> I'm thinking .olson[-id] for the former, and .tz[-abbr] for the latter.  .timezone is already taken up by the gmt-offset value

[16:35] *** xinming joined
[16:40] *** mandobot joined
[16:40] *** mandobot left
[16:49] *** cpan-raku joined
[16:49] *** cpan-raku left
[16:49] *** cpan-raku joined
[16:52] <JJMerelo> timotimo we want _you_ to write an article for the 20th anniversary calendar

[16:52] * JJMerelo goes AFK and CTTS (close to the surf) while expecting lots of candidates for 20th anniversary articles.

[16:54] <guifa2> JJMerelo: so sorry I'm behind getting mine done

[16:54] <guifa2> Finishing it up now

[16:57] *** JJMerelo left
[16:57] *** mandobot joined
[16:57] *** mandobot left
[17:01] *** andrzejku left
[17:44] <rypervenche> I'm looking over this article: https://perl6.party/post/IRC-Client-Perl-6-Multi-Server-IRC-Module and I was curious. Why is $ used in the signature, like in... multi method irc-to-me ($ where /bash/) {...

[17:45] <guifa2> it basically says "if the first argument contains bash"

[17:45] <guifa2> but the method itself doesn't actually need the contents of the argument

[17:46] <guifa2> so no symbol is installed in the scope for it

[17:46] <rypervenche> Ah, I see. Interesting.

[17:47] <rypervenche> So it's kind of a throwaway (not really a) variable then.

[17:48] <guifa2> exactly

[17:48] <guifa2> That's probably the most common use for them, although you can use them in loops and stuff 

[17:49] <guifa2> m: for ^10 {Â say $++ }

[17:49] <camelia> rakudo-moar fcfc60b63: OUTPUT: Â«0â¤1â¤2â¤3â¤4â¤5â¤6â¤7â¤8â¤9â¤Â»

[17:50] <rypervenche> Nice. Knowledge++

[17:54] <guifa2> Ack and another naming issue

[17:55] <guifa2> .is-dst or .is-summer or .is-daylight or ? to find out if lcocks are currently shifted

[18:00] <rypervenche> I like the first. .is-summer feels confusing.

[18:01] <guifa2> in Europe it's called summer time though and not daylight savings time 

[18:02] <guifa2> the super neutral would be .is-standard but that just feels.....too generic

[18:02] *** tomaw left
[18:03] *** tomaw joined
[18:04] <Geth> Â¦ doc: f3bd28f499 | Coke++ | xt/code.pws

[18:04] <Geth> Â¦ doc: track new word in code

[18:04] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/f3bd28f499

[18:04] <Geth> Â¦ doc: 7dc41501c7 | Coke++ | doc/Language/intro.pod6

[18:04] <Geth> Â¦ doc: whitespace

[18:04] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/7dc41501c7

[18:04] <Geth> Â¦ doc: 429a319e29 | Coke++ | xt/code.pws

[18:04] <Geth> Â¦ doc: new variable names used in code

[18:04] <linkable6> Link: https://docs.raku.org/language/intro

[18:04] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/429a319e29

[18:06] *** NickSeagull left
[18:12] <tbrowder> guifa2: +1 for is-dst

[18:12] <tellable6> 2020-08-02T16:18:33Z #raku <JJMerelo> tbrowder thanks

[18:12] *** Altai-man_ joined
[18:13] <guifa2> actually, crap.  I'm going to need to have an extra named argument for .new to decide whether to use standard or daylight time when interpretting the time

[18:14] <guifa2> *sigh* Working with timezones is annoying.  I can see why core Raku just leaves it at an offset and nothing more :-)

[18:14] *** sena_kun left
[18:22] *** molaf joined
[18:32] <demostanis> Any way I can ignore circular module loading errors? I have this code: use B; class A { method dosomething(B $b) { ... } } in B.rakumod and: use A; class B { method dosomethingelse(A $a) { ... } }  

[18:32] <demostanis> in A.rakumod

[18:33] <demostanis> But it fails...

[18:37] <guifa2> use A; class B { method dosomethingelse(::('B') $a) { ... }

[18:37] <guifa2> err

[18:37] <guifa2> ::('A') obviously

[18:38] <guifa2> if possible, just put them all in one file though and stub one of them

[18:52] *** OpenZen joined
[18:57] <tbrowder>  .ask JJmerelo i want add a little blurb on testing pod in the docs. my guess it should be on the Testing page, but let me know if you (or anyone interested) have a better place for it.

[18:58] <tbrowder> .ask JJmerelo ^^^

[18:58] <tellable6> tbrowder, I'll pass your message to JJMerelo

[18:59] <tbrowder> stupid leading space should be IGNORED

[19:09] <Geth> Â¦ advent: aea0e616f4 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | 20th/README.md

[19:09] <Geth> Â¦ advent: Linkify RFC's to be blogged about

[19:09] <Geth> Â¦ advent: review: https://github.com/Raku/advent/commit/aea0e616f4

[19:17] *** Altai-man_ left
[19:19] *** Sgeo joined
[19:20] *** Altai-man_ joined
[19:26] *** kensanata left
[19:28] *** phogg left
[19:32] *** grumble left
[19:39] *** grumble joined
[19:41] <Geth> Â¦ advent: 41f10f9f9f | (Vadim Belman)++ | 20th/README.md

[19:41] <Geth> Â¦ advent: Claim RFC 137

[19:41] <Geth> Â¦ advent: review: https://github.com/Raku/advent/commit/41f10f9f9f

[19:53] *** phogg joined
[19:53] *** phogg left
[19:53] *** phogg joined
[19:53] *** rindolf left
[20:10] *** camelCaser left
[20:12] *** camelCaser joined
[20:12] <Geth> Â¦ advent: 3c2b785715 | Altai-man++ (committed using GitHub Web editor) | 20th/README.md

[20:12] <Geth> Â¦ advent: Claim RFC 188

[20:12] <Geth> Â¦ advent: review: https://github.com/Raku/advent/commit/3c2b785715

[20:12] *** sena_kun joined
[20:14] *** Altai-man_ left
[20:33] <AlexDaniel`> committable: uptime

[20:33] <committable6> AlexDaniel`, 3 weeks, 6 days, 4 hours, 14 minutes, and 23 seconds, 970.675781MiB maxrss. This is Rakudo version 2020.02.1-395-g2c9168b9a built on MoarVM version 2020.02.1-162-g3d8ff61e2 implementing Raku 6.d.

[20:33] <AlexDaniel`> Dave: â

[20:41] <Nasrudin> ah

[20:45] *** wamba left
[20:57] *** molaf left
[21:16] *** phogg left
[21:30] <jdv79> it seems to me the docs on TWEAK are a bit misleading.  they say "The TWEAK submethod allows you to check things or modify attributes after object construction:"  but in a tweak if you try to use an accessor you'll still get something like "Virtual method call $.user may not be used on partially constructed object (maybe you mean $!user for direct attribute access here?)"

[21:30] <jdv79> to me, a partially constructed instance is not possible "after" construction, no ?

[21:32] *** demostanis left
[21:35] <jdv79> s/after/at the end of/ is probably better

[21:41] <guifa2> that's odd, I haven't had problems with that

[21:41] <guifa2> m: class A {Â has $.foo; method TWEAK {Â say $.foo }Â }; A.new(:2foo);

[21:41] <camelia> rakudo-moar fcfc60b63: OUTPUT: Â«2â¤Â»

[21:44] <guifa2> m: class A { has $.foo; method BUILD { say $.foo } }; A.new(:2foo);

[21:44] <camelia> rakudo-moar fcfc60b63: OUTPUT: Â«(Any)â¤Â»

[21:49] <jdv79> "submethod"

[21:51] <guifa2> ah whoops

[21:57] *** gordonfish left
[21:58] *** gordonfish joined
[22:12] *** Altai-man_ joined
[22:14] *** sena_kun left
[22:35] *** leont left
[22:53] <raku-bridge> <stu002> Posted this on the Raku discord, apologies if you're seeing it twice:

[22:53] <raku-bridge> <stu002> Can any MacOS rakudo star users advise on this message please: "I ran into a problem while trying to set up Readline: Could not instantiate role 'ReadlineBehavior': Cannot locate native library '(null)': dlopen(libreadline.7.dylib, 10): image not found" Do I need to setup LD_LIBRARY_PATH for the libreadline library? This has been installed with Homebrew and with a working readline.

[23:18] <vrurg> stu002: I don't have much time now, can only advise trying to symlink libreadline into ~/lib

[23:18] <tellable6> 2020-08-02T07:15:06Z #raku-dev <JJMerelo> vrurg a short article will do :-)  Pick your RFC!

[23:18] <tellable6> 2020-08-02T10:50:23Z #raku-dev <tbrowder> vrurg i just pushed my new changes to roast_657. looks pretty good to me thanks to your clever pod hackery! gonna put that in my tool box. it needs to be in the docs somewhere.

[23:20] *** phogg joined
[23:20] *** phogg left
[23:20] *** phogg joined
[23:27] <tbrowder> can anyone please point me to a howto for the new test hook for githup workflows used by mi6? thnx

[23:27] <tbrowder> *github

[23:28] <tbrowder> is it preferred now over travis-ci?

[23:30] <holyghost> The only thing I wanted to remark on the RFCs and milestones pages, a battleplan file

[23:30] <holyghost> SFY

