[00:02] <timotimo> m: sub bake(*%p) { for %p { say "cooking $_.value() $_.key()s" } }; bake :10cookies, :5donuts, :3quiches

[00:02] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «cooking 5 donutss␤cooking 10 cookiess␤cooking 3 quichess␤»

[00:15] *** pecastro left
[00:24] *** perlbot left
[00:24] *** simcop2387 left
[00:28] *** ctilmes joined
[00:29] *** ctilmes left
[00:33] *** Sgeo left
[00:49] *** Kaiepi left
[00:54] *** Kaiepi joined
[00:57] *** Cabanossi left
[01:00] <cpan-raku> New module released to CPAN! Sparrow6 (0.0.21) by 03MELEZHIK

[01:06] *** Cabanossi joined
[01:24] *** marcusr left
[01:26] *** marcusr joined
[01:28] *** Doc_Holliwood left
[01:30] *** guifa left
[01:30] *** guifa_ is now known as guifa

[01:55] *** Redfoxmoon left
[01:56] *** Redfoxmoon joined
[02:03] *** perlbot joined
[02:03] *** simcop2387 joined
[02:05] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:11] *** aborazmeh joined
[02:11] *** aborazmeh left
[02:11] *** aborazmeh joined
[02:14] <Xliff> m: say "This is my PI: π.fmt('%1.12f')"

[02:14] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «This is my PI: π.fmt('%1.12f')␤»

[02:14] <Xliff> m: say "This is my PI: { π.fmt('%1.12f') }"

[02:14] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «This is my PI: 3.141592653590␤»

[02:15] <Xliff> m: my $PI := π; say "This is my PI: $PI.fmt('%1.12f')"

[02:15] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «This is my PI: 3.141592653590␤»

[02:15] <Xliff> my @a = <a b c d e>; say "@a f g"

[02:15] <evalable6> Xliff, rakudo-moar 9a7d0e6c6: OUTPUT: «@a f g␤»

[02:15] <Xliff> my @$ = <a b c d e>; say "@a f g"

[02:15] <Xliff> m: my @a = <a b c d e>; say "@a f g"

[02:16] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «@a f g␤»

[02:16] <Xliff> m: my @a = <a b c d e>; say "@a[] f g"

[02:16] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «a b c d e f g␤»

[02:17] <Xliff> m: my @a = <a b c d e>; say "@a[1, 2] f g"

[02:17] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «b c f g␤»

[02:21] *** Cabanossi left
[02:27] *** Cabanossi joined
[02:42] *** Sgeo joined
[02:55] *** girafe left
[02:56] *** girafe joined
[02:59] *** dotdotdot left
[03:01] *** dotdotdot joined
[03:34] *** __jrjsmrtn__ joined
[03:35] *** jrjsmrtn left
[03:36] *** rindolf joined
[03:37] *** soar joined
[04:08] *** aborazmeh left
[04:11] *** ab5tract joined
[04:22] *** mahafyi left
[04:25] *** poohman left
[04:32] *** KindTwo joined
[04:33] *** KindOne left
[04:36] *** KindTwo is now known as KindOne

[04:48] *** vike1 left
[04:55] *** stoned75 joined
[05:16] *** MilkmanDan left
[05:16] *** MilkmanDan joined
[05:19] *** aborazmeh joined
[05:20] *** aborazmeh left
[05:20] *** aborazmeh joined
[05:23] *** xinming left
[05:23] *** xelxebar left
[05:23] *** xinming joined
[05:25] *** xelxebar joined
[05:30] *** brtastic joined
[05:35] *** stoned75 left
[06:16] *** Xliff left
[06:36] *** Doc_Holliwood joined
[06:40] *** wamba joined
[06:41] <Geth> ¦ doc: 02c1164d5c | (Mike Swierczek)++ | doc/Language/control.pod6

[06:41] <Geth> ¦ doc: Attempt to add 'case statements' to indexing

[06:41] <Geth> ¦ doc: 

[06:41] <Geth> ¦ doc: This is just for a search convenience if someone

[06:41] <Geth> ¦ doc: coming from a C-style language background searches for 'case' or

[06:41] <Geth> ¦ doc: 'case statements' instead of 'switch'.

[06:41] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/02c1164d5c

[06:41] <Geth> ¦ doc: 70d4583308 | (Mike Swierczek)++ | doc/Language/control.pod6

[06:41] <linkable6> Link: https://docs.raku.org/language/control

[06:41] <Geth> ¦ doc: Update.

[06:41] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/70d4583308

[06:41] <Geth> ¦ doc: 5b4787e111 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/control.pod6

[06:41] <Geth> ¦ doc: Merge pull request #3448 from Michael-S/add_case_keyword_ref_to_given

[06:41] <Geth> ¦ doc: 

[06:41] <Geth> ¦ doc: Attempt to add 'case statements' to indexing

[06:41] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/5b4787e111

[06:43] <Geth> ¦ doc: 7f064c7cae | (Luis F. Uceta)++ | 2 files

[06:43] <Geth> ¦ doc: Clarify description of reduce sub/method for Any and List

[06:43] <Geth> ¦ doc: 

[06:43] <Geth> ¦ doc: * Also add a few examples

[06:43] <Geth> ¦ doc: 

[06:43] <Geth> ¦ doc: Refs: #3340

[06:43] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7f064c7cae

[06:43] <Geth> ¦ doc: 9ef5e5e452 | (Luis F. Uceta)++ | 2 files

[06:43] <linkable6> DOC#3340 [open]: https://github.com/Raku/doc/issues/3340 [RFE][docs] Confusing description of reduce sub/method

[06:43] <Geth> ¦ doc: Make changes as requested

[06:43] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/9ef5e5e452

[06:43] <Geth> ¦ doc: 0af36d0f2b | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 2 files

[06:43] <Geth> ¦ doc: Merge pull request #3447 from uzluisf/master

[06:43] <Geth> ¦ doc: 

[06:43] <Geth> ¦ doc: Clarify description of reduce sub/method for Any and List

[06:43] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/0af36d0f2b

[06:53] *** JJMerelo joined
[07:23] *** kensanata joined
[07:46] *** patrickb joined
[07:46] *** soursBot joined
[07:50] <soar> .sort: * < * 

[07:50] <soar> the sorted result is by descending. 

[07:50] <soar> It's confusing to me...

[07:54] <moritz> soar: note that sort usually take a three-way comparison operator like <=> or cmp

[07:54] <hobbs> soar: sort expects a callable that acts like <=> or cmp (returning -1, 0, 1 for less/same/more)

[07:54] <moritz> if you pass it a two-way comparison operator, it's bound to behave weirdly

[07:55] <hobbs> I think that if you give it <, it will interpret < as "more", and >= as "same"

[07:55] <hobbs> which will get you a backwards result and/or a broken one because you're lying and telling it "same" when actually "more" :)

[07:56] <soar> umm.... let me think of 

[07:57] <hobbs> (I'm assuming that since it doesn't crash, it interprets True as 1, and 1 as Order::More, and False as 0, and 0 as Order::Same)

[07:59] <soar> semantic,  * < *,  is not valid  here

[08:00] <soar> how shall we say sorting by descending 

[08:02] <hobbs> .sort: { $^b <=> $^a } would be one way

[08:03] <hobbs> or sort then reverse (I'm not sure if the optimization that replaces that with a reverse-sense sort exists in raku)

[08:07] <MasterDuke> soar: if it's numeric data, `-*` or `+*`

[08:08] <MasterDuke> m: my @a = (^4).pick(*); say @a; say @a.sort(-*); say @a.sort(+*)

[08:08] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «[3 1 2 0]␤(3 2 1 0)␤(0 1 2 3)␤»

[08:09] <hobbs> yeah, that's reasonable :)

[08:09] <soar> thank you guys! Now I get it.

[08:14] <MasterDuke> also, in the `(-|+)*` case it will do a schwartzian transform for you if needed

[08:15] <MasterDuke> m: my @a = ("0".."9").pick(*); say @a; my @b; my $s = now; @b = @a.sort(-*) for ^50_000; say now - $s; say @b

[08:15] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «[7 2 9 0 3 4 8 6 1 5]␤1.97999607␤[9 8 7 6 5 4 3 2 1 0]␤»

[08:15] <MasterDuke> m: my @a = ("0".."9").pick(*); say @a; my @b; my $s = now; @b = @a.sort({ $^b <=> $^a }) for ^50_000; say now - $s; say @b

[08:15] <camelia> rakudo-moar 9a7d0e6c6: OUTPUT: «[7 5 3 8 6 4 2 1 9 0]␤2.95469545␤[9 8 7 6 5 4 3 2 1 0]␤»

[08:17] *** aborazmeh left
[08:27] *** xinming left
[08:28] *** xinming joined
[08:30] *** soursBot left
[08:50] *** soar left
[08:52] *** kensanata left
[08:52] *** stoned75 joined
[09:02] *** stoned75 left
[09:04] *** stoned75 joined
[09:05] *** Redfoxmoon left
[09:05] *** Redfoxmoon joined
[09:05] *** soar joined
[09:08] *** estrabd joined
[09:09] <soar> so, .sort(-*) is faster than .sort( {$^b <=> $^a})

[09:10] *** estrabd left
[09:16] *** aborazmeh joined
[09:16] *** aborazmeh left
[09:16] *** aborazmeh joined
[09:37] *** sena_kun joined
[09:43] *** ab5tract left
[09:44] *** soursBot joined
[09:58] *** vike1 joined
[10:10] *** Black_Ribbon left
[10:10] *** chloekek_ joined
[10:27] *** Altai-man_ joined
[10:30] *** sena_kun left
[10:34] *** Sgeo left
[10:40] <lizmat> soar: yes, because it does a Schwartzian Transform under the hood

[10:44] <soar> good to know it.  :-)

[10:56] *** pecastro joined
[11:03] *** kensanata joined
[11:07] *** soursBot left
[11:11] *** soursBot joined
[11:14] *** chloekek_ left
[11:23] *** xinming left
[11:23] *** xinming joined
[11:27] <xfix> i'm not sure, how Schwartzian Transform is going to help with a function as simple as `-*`?

[11:27] <xfix> i would personally expect `{$^b <=> $^a}` to be faster

[11:28] <xfix> unless `<=>` is ridiculously slow

[11:29] <xfix> oh, right, string to integer conversion is involved

[11:29] *** aborazmeh left
[11:30] <lizmat> indeed  :-)   and by using a Schwartzian transform, that conversion would only need to be done once for each element

[11:30] <lizmat> rather than twice for *each* comparison

[11:32] *** kensanata left
[11:44] *** Kaiepi left
[11:48] *** konvertex joined
[11:52] *** Doc_Holliwood left
[11:52] *** Doc_Holliwood joined
[11:53] *** andrzejku joined
[12:02] *** soursBot left
[12:05] *** chloekek_ joined
[12:13] *** Kaiepi joined
[12:14] *** andrzejku left
[12:21] *** soursBot joined
[12:24] *** poohman joined
[12:24] <poohman> hi

[12:26] *** leont__ joined
[12:28] *** JJMerelo left
[12:28] *** leont left
[12:28] *** sena_kun joined
[12:29] <poohman> m: class A { has Str $.a;has Str $.b};my A @c; @c.append(A.new(a => "1",b => "one"));for @c.append(A.new(a => "2",b => "two"));@c.grep(*.a ~~ /1/).map(*b) {.say};

[12:29] <camelia> rakudo-moar 62adc88c6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3or @c.append(A.new(a => "2",b => "two"))7⏏5;@c.grep(*.a ~~ /1/).map(*b) {.say};␤    expecting any of:␤        block or pointy block␤»

[12:29] *** leont__ left
[12:30] *** Altai-man_ left
[12:31] <poohman> m: class A { has Str $.a;has Str $.b};my A @c; @c.append(A.new(a => "1",b => "one"));@c.append(A.new(a => "2",b => "two"));for @c.grep(*.a ~~ /1/).map(*b) {.say};

[12:31] <camelia> rakudo-moar 62adc88c6: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3=> "two"));for @c.grep(*.a ~~ /1/).map(*7⏏5b) {.say};␤    expec…»

[12:32] *** jhgg56565 joined
[12:32] *** jhgg56565 left
[12:32] <poohman> m: class A { has Str $.a;has Str $.b};my A @c; @c.append(A.new(a => "1",b => "one"));@c.append(A.new(a => "2",b => "two"));for @c.grep(*.a ~~ /1/).map(*.b) {.say};

[12:32] <camelia> rakudo-moar 62adc88c6: OUTPUT: «WhateverCode object coerced to string (please use .gist or .raku to do that)␤  in block <unit> at <tmp> line 1␤»

[12:33] <poohman> could somebody please help me with the grep part of the above code

[12:36] <ShimmerFairy> m: class A { has Str $.a;has Str $.b};my A @c; @c.append(A.new(a => "1",b => "one"));@c.append(A.new(a => "2",b => "two"));for @c.grep({$_.a ~~ /1/}).map(*.b) {.say};

[12:36] <camelia> rakudo-moar 62adc88c6: OUTPUT: «one␤»

[12:36] <ShimmerFairy> there's a limit to how magical * can be.

[12:36] <poohman> ah ok - I thought it was something deeper - thanks

[12:38] <ShimmerFairy> In short, what the grep bit you wrote said wasn't {$_.a ~~ /1/} (like you wanted), but rather {$_.a} ~~ /1/

[12:38] *** leont joined
[12:39] *** mowcat joined
[12:41] <poohman> oh ok - that was not as simple as I thought

[12:46] *** mowcat left
[12:48] *** cyg07 joined
[12:50] *** Doc_Holliwood left
[12:53] *** Doc_Holliwood joined
[13:00] *** cyg07 left
[13:10] *** soursBot left
[13:23] *** gdonald joined
[13:27] *** wamba left
[13:27] *** soursBot joined
[13:31] *** cpan-raku left
[13:33] *** chloekek_ left
[13:39] *** cpan-raku joined
[13:39] *** cpan-raku left
[13:39] *** cpan-raku joined
[13:43] *** aborazmeh joined
[13:43] *** aborazmeh left
[13:43] *** aborazmeh joined
[13:48] <Geth> ¦ doc: uzluisf++ created pull request #3449: Revise the Capture page

[13:48] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3449

[13:52] *** leont left
[13:53] *** wamba joined
[13:53] *** soursBot left
[13:53] <wamba> !boss

[14:09] *** Doc_Holliwood left
[14:15] *** soursBot joined
[14:27] *** Altai-man_ joined
[14:30] *** sena_kun left
[14:33] *** soursBot left
[14:36] *** Doc_Holliwood joined
[14:37] *** lucasb joined
[14:43] *** rbt joined
[14:45] *** Altai-man_ left
[14:46] *** hazim joined
[14:47] *** sena_kun joined
[14:50] *** chloekek_ joined
[14:50] *** soar left
[14:52] *** hazim left
[14:57] *** lichtkind joined
[14:59] *** mahafyi joined
[15:01] <mahafyi> moritz : good evening. I had purchased your Perl5 Fundamentals. Is there a list of  new changes in the latest 'Raku' version somewhere? 

[15:01] <mahafyi> lolol Perl6

[15:05] *** poohmaan joined
[15:07] <moritz> mahafyi: I'm working on a Raku revision right now. Basically all of the code examples still work.

[15:07] <mahafyi> moritz : thanks :)

[15:07] <moritz> the collation examples don't need "use experimental ..." anymore

[15:08] <moritz> but they work with too

[15:08] *** poohman left
[15:10] <mahafyi> i have been completely skipping Testing of any kind, as i couldn't get it. Going back to your book to start learning that, as i plan to actually write something for actual use other than bits and pieces of learning scripts. I have read it is important to know this from the beginning. 

[15:13] *** Doc_Holliwood left
[15:16] <Geth> ¦ doc: 1a2cc93767 | (Luis F. Uceta)++ | doc/Type/Capture.pod6

[15:16] <Geth> ¦ doc: Revise the Capture page

[15:16] <Geth> ¦ doc: 

[15:16] <Geth> ¦ doc: Refs: #3444

[15:16] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1a2cc93767

[15:16] <Geth> ¦ doc: 6cf253af53 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/Capture.pod6

[15:16] <Geth> ¦ doc: Merge pull request #3449 from uzluisf/master

[15:16] <Geth> ¦ doc: 

[15:16] <linkable6> Link: https://docs.raku.org/type/Capture

[15:16] <Geth> ¦ doc: Revise the Capture page

[15:16] <Geth> ¦ doc: Closes #3444

[15:16] <linkable6> DOC#3444 [closed]: https://github.com/Raku/doc/issues/3444 [RFE][docs] Example for Capture is confusing.

[15:16] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/6cf253af53

[15:26] *** JJMerelo joined
[15:30] *** patrickb left
[16:06] *** lichtkind left
[16:08] *** Doc_Holliwood joined
[16:17] *** girafe left
[16:22] *** rbt left
[16:22] *** cydf joined
[16:22] *** rbt joined
[16:27] *** Altai-man_ joined
[16:30] *** sena_kun left
[16:43] *** mowcat joined
[16:51] *** pilne joined
[16:56] *** wamba left
[16:59] *** mowcat left
[17:07] *** sauvin left
[17:14] *** sauvin joined
[17:38] <Geth> ¦ doc: coke assigned to uzluisf Issue doc/Type/List.pod6 fails example test https://github.com/Raku/doc/issues/3450

[17:38] <Geth> ¦ doc: cb766dd9b3 | Coke++ | xt/code.pws

[17:38] <Geth> ¦ doc: words used in code sample

[17:38] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/cb766dd9b3

[17:40] *** vike1 left
[17:49] <Geth> ¦ doc: JJ self-assigned doc/Type/List.pod6 fails example test https://github.com/Raku/doc/issues/3450

[17:51] <Geth> ¦ doc: 4626b05cff | (JJ Merelo)++ | doc/Type/List.pod6

[17:51] <Geth> ¦ doc: Fixes compilation

[17:51] <Geth> ¦ doc: 

[17:51] <Geth> ¦ doc: Thanks, @coke, for checking this out. Closes #3450

[17:51] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/4626b05cff

[17:51] <linkable6> Link: https://docs.raku.org/type/List

[17:51] <linkable6> DOC#3450 [closed]: https://github.com/Raku/doc/issues/3450 [docs][xt] doc/Type/List.pod6 fails example test

[17:52] <JJMerelo> .seen [Coke]

[17:52] <tellable6> JJMerelo, I saw [Coke] 2020-05-29T18:40:19Z in #raku: <[Coke]> timotimo++

[17:55] *** vike1 joined
[17:56] <[Coke]> Hi.

[17:56] *** Maylay left
[17:56] <Geth> ¦ doc: 0041494085 | (JJ Merelo)++ | doc/Type/List.pod6

[17:56] <Geth> ¦ doc: Fixes typo and closes #3450 again.

[17:56] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/0041494085

[17:56] <linkable6> Link: https://docs.raku.org/type/List

[17:56] <linkable6> DOC#3450 [closed]: https://github.com/Raku/doc/issues/3450 [docs][xt] doc/Type/List.pod6 fails example test

[17:57] <JJMerelo> Hi, [Coke] I was wondering if maybe we should automate example compilation and spell checks. Maybe with a GitHub action

[17:57] <JJMerelo> Or even Azure pipelines. We just set it up for the Raku organization.

[17:58] <JJMerelo> We could try and add some magic so that only changed files are checked

[17:58] <[Coke]> I'm obviously 100% down for that, as I don't want to be the only runner of the tests. The original concern was: don't want to cause "build failures" when someone edited something via the web interface. Didn't want to make it burdensome for the casual contributor.

[17:59] <JJMerelo> By the way, thanks a lot for doing that job

[17:59] <[Coke]> JJMerelo: note that I'm already doing that magic myself with "util/update-and-test"

[17:59] <[Coke]> So please feel free to try to steal that.

[17:59] *** Maylay joined
[17:59] <[Coke]> JJMerelo++

[17:59] <JJMerelo> OK, I'll open an issue. I mean we have so much computing power at our disposal now, that why shouldn't we use it...

[18:00] <timotimo> i just learned that someone in a book about design patterns also has a helpful section that shows what it looks like when you overuse a pattern

[18:00] <timotimo> i wonder if our docs should have that kind of section sprinkled in every now and then

[18:02] <timotimo> "this is what it looks like when you use hashes for everything"

[18:03] <JJMerelo> timotimo in examples, we overuse the pattern of "look how this is written with this utterly useless example involving foo and bar"

[18:03] <timotimo> yes

[18:04] <timotimo> true

[18:04] <JJMerelo> timotimo I'd definitely would go for that. So please open an issue, so that at least we take it into account.

[18:05] <timotimo> i wish i had a better example to show

[18:05] <JJMerelo> timotimo we probably need a "pattern" and "antipattern" page too, so that we can refer to it when we say something is overused.

[18:05] <timotimo> or an actual reference

[18:05] <JJMerelo> no problem, I get the idea

[18:06] <JJMerelo> While making clear that we encourage that people write stuff however they want. 

[18:06] <timotimo> those "people" is for readers of the docs or writers of the docs or both?

[18:06] <JJMerelo> Some patterns are going to be faster than others, or clearer than others

[18:07] <JJMerelo> timotimo well, both...

[18:07] *** wamba joined
[18:07] <JJMerelo> At the end of the day, people are going ot start writing their stuff by copying-pasting from the docs and/or stackoverflow

[18:07] <timotimo> give every single entry in the docs a little slider between "fast" and "clear" with a V somewhere in between

[18:08] <JJMerelo> timotimo hey, not so fast (or clear). No new tooling, please... Reference examples should be clear. Tutorial examples whould show both

[18:09] <timotimo> to make examples more useful, we should give every example a set of input boxes for "your own stuff here"

[18:09] <timotimo> so if you have a list already and it's called "@myshinylist" it'll substitute that in the example!

[18:11] <JJMerelo> timotimo er... no, please... no additional tooling. I'm extremely happy now that the site is fully static

[18:12] <timotimo> ok, but even if it's static in can still be dynamic

[18:12] <timotimo> microsoft has this shiny new technology called "DHTML"

[18:12] <JJMerelo> timotimo maybe it would be possible with Rakudo.js   Still, additional tooling to generate that stuff... Heavier pages...

[18:12] <timotimo> essentially you write your code in VB and compile it to a .dll, then you put that into your html

[18:12] <timotimo> sorry, i'm drifting off into silly-land

[18:13] <JJMerelo> timotimo ... and we can import it into Raku using NativeCode :-)

[18:13] <timotimo> Call*

[18:14] <JJMerelo> timotimo that would be cool, but... I mean, there are other priorities. But you could submit that as a possible project for Season of Docs

[18:14] <JJMerelo> We'll try again next year, I guess.

[18:14] <timotimo> there's already an isue somewhere for giving every example a link to one of the many sites that you can run raku code on

[18:15] *** Black_Ribbon joined
[18:15] <JJMerelo> timotimo right...

[18:16] <timotimo> at least some of them should be easily-ish feedable via an url parameter

[18:16] <timotimo> otherwise we'll just™ ask for support to put an url into the url and the code would be pullde from that url

[18:17] <JJMerelo> This is the issue https://github.com/Raku/doc/issues/1866

[18:19] <chloekek_> .

[18:19] <JJMerelo> chloekek_ hey

[18:19] <chloekek_> henlo

[18:21] <timotimo> hewwo

[18:21] <chloekek_> Haven’t done Raku in weeks

[18:22] <timotimo> raku hawen't fowgotten youw

[18:22] <timotimo> (am not actualy good at this)

[18:24] <chloekek_> I want to do less programming and it took me months to find something else to do

[18:24] <chloekek_> I think I want to pursue a hobby in electronics

[18:24] *** Sgeo joined
[18:25] *** JJMerelo left
[18:25] <El_Che> chloekek_: isn't that just programming with soldering? :)

[18:26] <Grinnz> it's just programming where your bugs are harder to explain

[18:26] <chloekek_> It’s programming but you get as much parallelism as you want.

[18:27] <chloekek_> I already had my first share of 30 minute debugging trivial issue.

[18:27] <chloekek_> Hooked up two LEDs to a 3 V battery in series. The LEDs need 2 V each. Didn’t work.

[18:28] *** sena_kun joined
[18:30] *** Altai-man_ left
[18:32] <moritz> fun fact: you always need a resistor in front of a LED, even if the voltage is "right"

[18:32] <moritz> how unintuitive

[18:33] *** zacts_pi joined
[18:33] *** zacts_pi left
[18:40] <chloekek_> That’s because LEDs have a maximum current, and batteries and wires ideally don’t.

[18:40] <chloekek_> And the maximum means exceeding it blows it up, doesn’t limit it.

[18:40] <xfix> some LEDs have built-in resistors, but usually you need to put a resistor in

[18:41] <chloekek_> Whilst waiting for new components to arrive I’m writing a Haskell library for defining circuits, and it has a function that automatically computes the necessary resistor. :)

[18:48] *** mowcat joined
[18:56] *** KindTwo joined
[18:58] *** KindOne left
[19:01] *** KindTwo is now known as KindOne

[19:01] *** wamba left
[19:02] *** wamba joined
[19:08] *** wamba left
[19:21] *** stoned75 left
[19:23] <tbrowder> i take umbrage over criticism of too much foo, i'm lucky i can remember bar

[19:23] *** lichtkind joined
[19:24] *** elcaro left
[19:30] *** elcaro joined
[19:33] *** wamba joined
[19:45] *** poohmaan left
[19:46] *** schlaftier2 joined
[19:46] *** schlaftier left
[19:46] *** schlaftier2 is now known as schlaftier

[19:49] *** Doc_Holliwood left
[19:53] *** rindolf left
[19:57] <tbrowder> i hope the implict smiley was understood :-D

[20:03] <lizmat> .oO( I vaguely remember a bar :-)

[20:12] <[Coke]> m: dd $*IN.lines;

[20:12] <camelia> rakudo-moar 62adc88c6: OUTPUT: «("»Wann treffen wir drei wieder zusamm?«", "   »Um die siebente Stund‘, am Brückendamm.«", "     »Am Mittelpfeiler.«", "         »Ich lösche die Flamm.«", " »Ich mit«", "", "         »Ich komme vom Norden her.«", "        »Und ich vom…»

[20:18] *** chloekek_ left
[20:27] *** Altai-man_ joined
[20:30] *** sena_kun left
[21:02] *** Doc_Holliwood joined
[21:13] *** cydf left
[21:17] *** brtastic left
[21:20] *** xinming left
[21:22] *** xinming joined
[21:26] *** chloekek_ joined
[21:42] *** xinming left
[21:43] *** xinming joined
[21:55] *** hyperak joined
[21:55] *** hyperak left
[22:09] *** HarmtH joined
[22:18] *** wamba left
[22:23] *** girafe joined
[22:28] *** sena_kun joined
[22:30] *** Altai-man_ left
[22:42] *** chloekek_ left
[22:47] *** aborazmeh left
[22:53] *** maggotbrain joined
[22:54] *** dotdotdot left
[23:00] *** dotdotdot joined
[23:03] *** pecastro left
[23:04] *** aborazmeh joined
[23:04] *** aborazmeh left
[23:04] *** aborazmeh joined
[23:23] *** sena_kun left
[23:26] *** lucasb left
[23:28] *** aborazmeh left
[23:53] *** aborazmeh joined
[23:53] *** aborazmeh left
[23:53] *** aborazmeh joined
[23:59] *** skids joined
