[00:08] *** normanrockwell joined
[00:08] *** normanrockwell left
[00:41] *** sena_kun left
[00:58] *** sena_kun joined
[00:58] *** uzl joined
[00:58] <uzl> .seen jmerelo

[00:58] <tellable6> uzl, I saw jmerelo 2020-01-19T20:05:35Z in #raku: * jmerelo goes AFK to dinner. See ya!

[00:59] <uzl> .tell jmerelo Hi, JJ. I've sent you an email related to your Raku Advent article about containerizing Raku modules.

[00:59] <tellable6> uzl, I'll pass your message to jmerelo

[01:00] *** uzl left
[01:13] *** sarna left
[01:21] *** sarna joined
[01:26] *** hungrydonkey joined
[02:25] *** gabiruh joined
[02:28] *** Poohman left
[02:29] *** hungrydonkey left
[02:30] *** hungrydonkey joined
[02:42] *** sena_kun left
[02:42] *** Tirifto left
[02:55] *** sena_kun joined
[03:06] *** xh-78 left
[03:35] *** gabiruh left
[04:35] *** Doc_Holliwood joined
[04:35] *** Doc_Holliwould joined
[04:39] *** cpan-raku left
[04:40] *** cpan-raku joined
[04:40] *** cpan-raku left
[04:40] *** cpan-raku joined
[04:43] *** sena_kun left
[04:54] *** atroxaper joined
[04:56] *** sena_kun joined
[05:01] <atroxaper> .tell jnthn Hi. About my yesterday issue with Cro on mac. The problem was because of the OpenSSL library. I described it here: https://stackoverflow.com/questions/59817157/why-raku-crashes-with-abort-trap-6-while-using-cro-on-a-macos-catalina

[05:01] <tellable6> atroxaper, I'll pass your message to jnthn

[05:39] *** xinming_ left
[05:40] *** xinming_ joined
[06:06] *** hungryd76 joined
[06:09] *** hungrydonkey left
[06:16] *** jmerelo joined
[06:42] *** sena_kun left
[06:48] *** MasterDuke left
[06:49] *** domidumont joined
[06:50] *** kensanata joined
[06:50] *** aluaces joined
[06:54] *** domidumont left
[06:55] *** sena_kun joined
[07:03] <Geth> ¬¶ doc: a65db64a81 | (JJ Merelo)++ | doc/Language/operators.pod6

[07:03] <Geth> ¬¶ doc: Second example from #3177 added

[07:03] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/a65db64a81

[07:04] *** stoned75 left
[07:23] *** jmerelo left
[07:34] *** domidumont joined
[07:35] *** Doc_Holliwood left
[07:35] *** Doc_Holliwould left
[07:35] *** rindolf joined
[07:39] *** abraxxa joined
[07:40] *** atroxaper left
[07:58] *** abraxxa left
[07:59] *** abraxxa joined
[08:08] *** MasterDuke joined
[08:42] *** sena_kun left
[08:58] *** Kaiepi left
[08:58] *** sena_kun joined
[09:00] *** leah2 left
[09:03] *** leah2 joined
[09:04] *** kensanata left
[09:21] *** Guest39290 left
[09:21] *** libertas left
[09:40] *** abraxxa left
[09:40] *** abraxxa joined
[09:43] *** atroxape_ joined
[09:53] *** Kaiepi joined
[10:13] *** wamba joined
[10:20] *** atroxape_ is now known as atroxaper

[10:25] *** wamba left
[10:32] *** wamba joined
[10:37] *** Doc_Holliwould joined
[10:37] *** Doc_Holliwood joined
[10:42] *** sena_kun left
[10:53] *** wamba left
[10:54] *** libertas joined
[10:58] *** sena_kun joined
[11:39] *** hungryd76 left
[11:40] *** atroxaper left
[11:41] *** hungrydonkey joined
[11:47] *** normanrockwell joined
[11:51] *** Tirifto joined
[12:07] *** normanrockwell left
[12:20] *** kensanata joined
[12:28] *** NODE left
[12:29] *** gabiruh joined
[12:29] *** NODE joined
[12:30] *** NODE left
[12:32] *** NODE joined
[12:33] *** NODE left
[12:34] *** veesh_ joined
[12:35] *** gabiruh left
[12:35] *** NODE joined
[12:36] *** veesh left
[12:36] *** veesh_ is now known as veesh

[12:42] *** sena_kun left
[12:46] *** gabiruh joined
[12:57] *** sena_kun joined
[13:10] *** mensvaga left
[13:17] *** mensvaga joined
[13:19] *** NODE left
[13:21] *** NODE joined
[13:25] *** daemon joined
[13:25] *** wamba joined
[13:30] *** lucasb joined
[13:34] *** kensanata left
[13:37] *** veesh_ joined
[13:38] *** veesh left
[13:39] *** veesh_ is now known as veesh

[13:48] *** Doc_Holliwould left
[14:06] <Doc_Holliwood> m: say (10|-10) + (90|-90)  ~~ 100

[14:06] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´True‚ê§¬ª

[14:07] <Doc_Holliwood> is there a way to find out which values the junctions collapes into? here 10 and 90

[14:10] <jnthn> m: say (10|-10) + (90|-90)

[14:10] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´any(any(100, -80), any(80, -100))‚ê§¬ª

[14:10] <tellable6> hey jnthn, you have a message: https://gist.github.com/3d65eb97ec49811911e4e6b3a3ea8bc5

[14:21] *** scimon joined
[14:21] <scimon> Hi

[14:21] *** mensvaga left
[14:26] *** mensvaga joined
[14:32] *** atroxaper joined
[14:41] *** sena_kun left
[14:41] *** renormalist left
[14:41] *** Tirifto left
[14:50] *** kensanata joined
[14:56] *** kensanata left
[14:56] *** sena_kun joined
[14:57] *** kensanata joined
[15:14] <tobs> Doc_Holliwood: I did some reading on that question a while ago (because it pops up every now and then). See https://github.com/taboege/raku-Junction-Guts for how to do it and hopefully the appropriate amount of warnings. I don't know how robust the code is, anyway, and never actually used it so far :P

[15:17] *** xinming_ left
[15:17] *** xinming_ joined
[15:24] <Doc_Holliwood> Something like a collapse operator would be useful methinks

[15:24] <Doc_Holliwood> So that my $a = 10|-10; my $b = 90|-90; say $a + $b Œ® 100; ok  $a == 10;

[15:24] <lizmat> Doc_Holliwood: what would that be ?

[15:24] <Doc_Holliwood> ^^

[15:25] <lizmat> m: my $a = 10|-10; my $b = 90|-90; say $a + $b

[15:25] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´any(any(100, -80), any(80, -100))‚ê§¬ª

[15:26] <lizmat> note that by the time the + is done, there is no sign of + anymore in the junctions

[15:26] <Doc_Holliwood> so?

[15:26] <lizmat> so how would it know what $a was ?

[15:27] <lizmat> if Œ® has a lower precedence than +

[15:27] <lizmat> I guess the question is: how would you express Œ® using subs ?

[15:28] <Doc_Holliwood> what do mean, no sign of +?  

[15:28] <Doc_Holliwood> m:  my $a = 10|-10; my $b = 90|-90; say $a + $b; say $a

[15:28] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´any(any(100, -80), any(80, -100))‚ê§any(10, -10)‚ê§¬ª

[15:28] <Doc_Holliwood> $a is unchanged

[15:29] <Doc_Holliwood> i mean i can say 

[15:29] <Doc_Holliwood>  my $a = 10|-10; my $b = 90|-90; say $a + $b ~~ 100

[15:29] <evalable6> Doc_Holliwood, rakudo-moar 06ae7d614: OUTPUT: ¬´True‚ê§¬ª

[15:30] <Doc_Holliwood> so, some codepath "knows" that 10 + 90 matches 100

[15:30] <Doc_Holliwood> i want that information

[15:34] <tobs> Doc_Holliwood: it's stored in the junction internals. You can get it using nqp, but not otherwise to my knowledge, because junctions are not intended to expose their state.

[15:37] *** atroxaper left
[15:38] <tobs> oh, but if you want to combine junctions by +, you create a new junction that is matched with 100. The expression `$a + $b` in `$a + $b Œ® 100` has no ties to $a nor $b anymore. Collapsing junctions according to a function on them would be much harder to achieve than just listing the states of a Junction in Rakudo.

[15:38] <tobs> but I think Damian Conway once wrote a quantum computation-lookalike module which does this.

[15:42] <tobs> Doc_Holliwood: the talk he showed this in is very nice if you haven't seen it. The code has also been made public somehow: https://www.reddit.com/r/perl6/comments/6prdkv/quantumcomputing/

[15:45] <tobs> But there the superposition part of Junctions is reimplemented in a way that allows to keep track of the ingredients to various expressions, so that collapsing one value can propagate the observation to the ingredients.

[15:53] *** scimon left
[15:53] *** scimon joined
[16:07] *** Doc_Holliwood left
[16:19] *** hungrydonkey left
[16:19] *** Kaeipi joined
[16:23] *** Kaiepi left
[16:24] *** locsmif joined
[16:39] *** Doc_Holliwood joined
[16:40] *** domidumont left
[16:41] *** sena_kun left
[16:45] *** Kaeipi left
[16:45] *** hacktor left
[16:48] <AlexDaniel> c: releases say (^3).pick

[16:48] <committable6> AlexDaniel, https://gist.github.com/5289eb2c3dbd6aff5fe4ac9f9420bbaf

[16:48] <AlexDaniel> melezhik: ‚Üë

[16:48] *** Kaiepi joined
[16:50] <Doc_Holliwood> tobs: Good info. Tx

[16:54] *** kensanata left
[16:56] *** sena_kun joined
[17:03] <El_Che> AlexDaniel: were monthly releases something policy-wise or just the practice in the past?

[17:03] <AlexDaniel> El_Che: it was just the practice

[17:03] <El_Che> if so, did rakudo moved to the "release when ready" mode?

[17:03] <El_Che> (both are fine with me)

[17:03] <El_Che> ok

[17:04] <El_Che> AlexDaniel: is your successor already in place ?

[17:04] <AlexDaniel> yes, very much so

[17:04] <El_Che> good to hear

[17:05] <AlexDaniel> sena_kun is doing a great job, btw

[17:07] *** mahmudov joined
[17:08] <El_Che> sena_kun++

[17:08] <uzl[m]> m: my @a = Array.new(:1shape); @a[$[0]] = $[1] for (0..2 [Z] 'a'..'c'); say @a

[17:08] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Name must begin with alphabetic character‚ê§at <tmp>:1‚ê§------> 3my @a = Array.new(:1shape); @a[$7‚èè5[0]] = $[1] for (0..2 [Z] 'a'..'c'); s‚ê§    expecting any of:‚ê§        infix‚ê§        infi‚Ä¶¬ª

[17:08] *** cpan-raku left
[17:09] <uzl[m]> m: my @a = Array.new(:1shape); @a[0] = 'a'; @a[1] = 'b'; say @a

[17:09] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´[a b]‚ê§¬ª

[17:09] *** cpan-raku joined
[17:09] *** cpan-raku left
[17:09] *** cpan-raku joined
[17:09] <uzl[m]> m: my @a[1]; @a[0] = 'a'; @a[1] = 'b'; say @a

[17:09] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´Index 1 for dimension 1 out of range (must be 0..0)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:10] <uzl[m]> Aside from post-circumfix [], is there a similar syntax to Array.new() to create fixed-sized arrays?

[17:12] <jnthn> uzl[m]: Yes, pass the shape named arg

[17:12] <jnthn> You got the Array.new(:1shape) bit right, but then threw away the array by copying out of it into @a

[17:13] <jnthn> Use := instead of =

[17:13] <jnthn> That and one other odd char somewhere in the cdoe

[17:16] *** scimon left
[17:17] <uzl[m]> m: my @a := Array.new(:1shape); @a[0] = 'a'; @a[1] = 'b'; say @a

[17:17] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´Index 1 for dimension 1 out of range (must be 0..0)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:18] <uzl[m]> Thanks, jnthn !

[17:18] *** domidumont joined
[17:23] *** locsmif left
[17:32] *** Kaiepi left
[17:33] *** Kaiepi joined
[17:38] *** xinming_ left
[17:39] *** xinming_ joined
[17:48] *** xinming_ left
[17:49] *** xinming_ joined
[17:58] *** xinming_ left
[17:59] *** xinming_ joined
[18:07] *** chloekek joined
[18:41] *** sena_kun left
[18:53] *** wildtrees joined
[18:57] *** sena_kun joined
[19:03] <lizmat> and another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2020/01/20/2020-03-traittraced/

[19:15] *** wamba left
[19:27] *** sauvin left
[19:29] <El_Che> thx, lizmat 

[19:39] *** domidumont left
[19:46] *** sena_kun left
[19:50] *** veesh_ joined
[19:51] *** gabiruh left
[19:52] *** veesh left
[19:52] *** veesh_ is now known as veesh

[19:56] <Geth> ¬¶ doc: dumarchie++ created pull request #3178: Use pod formatting

[19:56] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3178

[20:04] *** chloekek left
[20:08] *** gabiruh joined
[20:15] *** wamba joined
[20:25] <sjn> BTW, we'll bring some new Raku stickers to FOSDEM. Make sure to come and get some! :-D

[20:25] <sjn> (picture of them in lizmat++'s Rakudo Weekly)

[20:26] <lizmat> reification-target

[20:26] <lizmat> https://rakudoweekly.files.wordpress.com/2020/01/s_yui3sx.jpeg

[20:29] <AlexDaniel> lizmat: why are we using #rakulang when we can use just #raku?

[20:29] <AlexDaniel> python folks don't use #pythonlang, right?

[20:30] <lizmat> because you don't have that many snake lovers on Twitter, but you do have a lot of pottery lovers on Twitter

[20:31] <lizmat> and since we've been accused of squatting on a name for many years, it seemed wrong to me to start squatting on #raku on Twitter

[20:31] <AlexDaniel> but people will use #raku anyway

[20:31] <AlexDaniel> so why make it more difficult

[20:32] <AlexDaniel> there are so few tweets about pottery

[20:33] <AlexDaniel> and even those who ‚Äúaccidentally‚Äù use #raku already account for like more than half

[20:33] <AlexDaniel> or maybe around half

[20:34] <AlexDaniel> and then we gave up r/raku‚Ä¶ which had the last pottery post 1 year

[20:34] <AlexDaniel> 1 year ago*

[20:34] <lizmat> https://twitter.com/search?q=%23raku&src=typd&f=live

[20:35] <lizmat> I'd say that's not dead

[20:35] <AlexDaniel> it's not dead

[20:36] <lizmat> in any case, I think we've had this discussion a few months ago...  

[20:37] <tadzik> https://twitter.com/martinoneill19/status/1218499402832269312 hah :)

[20:38] <AlexDaniel> it's just hilarious, we're going through all this trouble to fix the name only to do the wrong thing again and come up with social tags that just won't work

[20:39] <AlexDaniel> I guess it would've made sense if we were using rakulang github org and rakulang.org, but we don't

[20:40] <AlexDaniel> I mean‚Ä¶ I guess it doesn't matter, and everyone will use #raku anyway

[20:41] <El_Che> AlexDaniel: if you think so, why bother reopening the discussion if time will result in what you prefer?

[20:41] <AlexDaniel> still though I don't know why we're making it harder for ourselves so that we have to go and police people to use a different tag

[20:42] <lizmat> https://github.com/Raku/problem-solving/blob/master/solutions/language/Path-to-Raku.md#social-media

[20:42] <AlexDaniel> El_Che: it's just gonna be messy, that's it

[20:42] <lizmat> because we decided?

[20:43] <El_Che> while raku is shorter, I like that rakulang is specific for the language

[20:43] <El_Che> so you don't get mixed content

[20:43] <El_Che> and no, python is an other case

[20:44] <El_Che> it was a major language before twitter arrived

[20:44] <El_Che> I don't see the document as policing (users will do what they like), but it's good to have a media strategy for the project

[20:45] <El_Che> if it fails it can be amended, but I think it's way to soon for that

[20:46] <El_Che> (I think the #rakulang thing is going as well as it could be expected)

[20:46] <Grinnz> I have three thoughts on the matter: 1) it's good to have and promote an option that will be unambiguous, 2) people can be context aware and "raku" is not ambiguous in other places like it is on twitter, 3) it's not the end of the world when it's used on twitter, since it's not easy to confuse the content of one for the other

[20:47] <lizmat> [21:37:06]  <tadzik>	https://twitter.com/martinoneill19/status/1218499402832269312 hah :)

[20:48] <lizmat> :-)

[20:48] <Grinnz> with the exception of that one :)

[20:48] <El_Che> it looks like genitals to me :)

[20:49] <sjn> AlexDaniel: If there's a place (e.g. an issue in the problem-solving repo) where tags are discussed and at the end decided upon, I'd love to hear about it. :)

[20:49] <El_Che> sjn: lizmat linked to it a few paragraphs above

[20:49] <El_Che> (messages)

[20:50] <sjn> ah, didn't see that

[20:50] <sjn> in that case, I won't return those stickers quite yet :)

[20:50] <El_Che> it was a small part of the renaming discussion

[20:51] <sjn> mm

[20:51] <El_Che> what's wrong with the stickers?

[20:51] <lizmat> they say #rakulang

[20:51] <lizmat> which was just put into question

[20:51] <sjn> El_Che: they're fine. One sticker says #rakulang

[20:51] <El_Che> they would be fine either way, but  #rakulang is prefered

[20:51] <sjn> the others say "Raku"

[20:52] * lizmat goes afk&

[20:56] *** rindolf left
[20:57] *** patrickb joined
[21:01] <El_Che> sjn: I think your confused. It's only about hthe hastag, not the name itself

[21:05] *** rindolf joined
[21:12] <sjn> m: say x‚ÅΩ1+3‚Åæ

[21:12] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Bogus postfix‚ê§at <tmp>:1‚ê§------> 3say x7‚èè5‚ÅΩ1+3‚Åæ‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚ê§   ‚Ä¶¬ª

[21:13] <sjn> m: my $x=10; say $x‚ÅΩ1+3‚Åæ

[21:13] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Bogus postfix‚ê§at <tmp>:1‚ê§------> 3my $x=10; say $x7‚èè5‚ÅΩ1+3‚Åæ‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement mod‚Ä¶¬ª

[21:21] <mojca> up

[21:28] <rypervenche> So I managed to get my password generator script working the way I wanted. I have no idea of I used any really bad practices. I'm sure there are better ways to do what I did, but yeah. I'd appreciate any feedback on how I can make this better or if there are better syntaxes I could use. Thanks. https://gist.github.com/rypervenche/a4604ebba04b66a1c1f1f3a6bf273b6d

[21:45] *** guifa2 joined
[21:47] *** mahmudov left
[21:56] <Doc_Holliwood> rypervenche: You really, really want a minimum lenght > 4. Make it 8. Or better 12.

[21:57] <Doc_Holliwood> You can't really use gather/take for your loop, because your exit condition is the size of the array. But `gather`ed arrays don't get update until the gather loop is done.

[21:58] <Doc_Holliwood> this doesnt work at all

[21:58] <Doc_Holliwood> m: say my @a = gather until @a.elems > 5 { take 1 }

[21:58] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Cannot use variable @a in declaration to initialize itself‚ê§at <tmp>:1‚ê§------> 3say my @a = gather until @7‚èè5a.elems > 5 { take 1 }‚ê§    expecting any of:‚ê§        term‚ê§¬ª

[21:58] <Doc_Holliwood> m: say my @a = gather loop { take 1; last if @a.elems > 5 }

[21:59] <Doc_Holliwood> this is an endless loop

[21:59] *** rindolf left
[21:59] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´(timeout)¬ª

[21:59] <Doc_Holliwood> and this is just as ugly, since it requires a counter

[21:59] <Doc_Holliwood> m: my $i = 0; say my @a = gather until $i == 5 { take $i++; }

[21:59] <camelia> rakudo-moar 06ae7d614: OUTPUT: ¬´[0 1 2 3 4]‚ê§¬ª

[22:00] <Doc_Holliwood> so, for/push is fine here, methinks

[22:06] *** guifa2 left
[22:07] *** guifa2 joined
[22:11] *** aluaces left
[22:19] <guifa2> lizmat: Are you using CPAN for module updates on weekly?  I've noticed some of my updates / new modules haven't landed on it and wanted to make sure they'd get the shout out if possible (but mine are only listed on ecosystem on github)

[22:25] *** wamba left
[22:26] *** wamba joined
[22:32] *** Doc_Holliwould joined
[22:33] *** maggotbrain left
[22:35] *** maggotbrain joined
[22:36] *** Doc_Holliwood left
[22:43] <Geth> ¬¶ ecosystem: alabamenhu++ created pull request #479: Add Carp to the ecosystem

[22:43] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/pull/479

[22:45] *** gabiruh left
[22:51] <Geth> ¬¶ doc: a422997151 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/compilation.pod6

[22:51] <Geth> ¬¶ doc: formatting errors

[22:51] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/a422997151

[22:59] <guifa2> AlexDaniel: sorry! Fixed the URL now.  Can I get it to review the check or do I need to submit a new PR?

[23:00] <AlexDaniel> guifa2: I clicked the button, it should update in a few minutes

[23:01] <guifa2> Alright, awesome.  And apologies.  'Tis what I get for not double checking everything

[23:03] <rypervenche> Doc_Holliwould: Thanks. I ran into the infinite loop as well and thought I just might be doing something wrong.

[23:18] *** lucasb left
[23:38] <cpan-raku> New module released to CPAN! Sys::HostAddr (0.0.1) by 03JMASLAK

[23:48] *** gabiruh joined
[23:53] *** wamba left
