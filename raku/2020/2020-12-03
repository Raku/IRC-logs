[00:06] *** codesections left
[00:19] *** mowcat left
[00:20] *** xinming left
[00:21] *** xinming joined
[00:22] *** pecastro left
[00:46] *** xinming left
[00:47] *** xinming joined
[00:51] *** ggoebel joined
[00:53] *** jmchael left
[01:06] *** BenGoldberg joined
[01:18] *** mitoxys joined
[01:19] *** mitoxys left
[01:20] *** MasterDuke left
[01:42] *** kent\n left
[01:43] *** kent\n joined
[02:01] <xinming>  MoarVM panic: Trying to unwind over wrong handler   :-)

[02:01] <xinming> Anyway how I can troubleshoot this bug down?

[02:04] <[Coke]> just checking: you running a recent rakudo?

[02:04] <xinming> 2020.11

[02:05] <xinming> Built on MoarVM version 2020.11.

[02:06] <[Coke]> don't suppose using --ll-exception gives anything extra?

[02:08] <xinming> will try

[02:10] <xinming> https://pastebin.com/TBvGHvYY

[02:10] <xinming> [Coke]: https://pastebin.com/TBvGHvYY

[02:11] <xinming> https://github.com/FCO/Red/blob/0e93d35ab94d3e536bae651d1ab19ac1e6eec206/lib/Red/Operators.pm6#L135

[02:14] <xinming> this code caused the panic, But how can I dive deeper?

[02:17] <xinming> Let me try to narrow it down.

[02:30] <xinming> Finally, got ya. ;-)

[02:36] <xinming> moritz: https://github.com/rakudo/rakudo/issues/4085

[02:36] <xinming> I think people should assign the issue as high critical. :-)

[02:41] *** frost-lab joined
[02:53] *** xinming left
[02:54] *** xinming joined
[02:56] *** skids left
[03:02] *** leont left
[03:09] <[Coke]> xinming: I cannot duplicate your error.

[03:09] <[Coke]> added a note to the ticket.

[03:25] *** xinming left
[03:27] *** xinming joined
[03:35] <xinming> [Coke]: Please check the comment again, markdown easts some of the code.

[03:35] <xinming> eats*

[04:05] *** _jrjsmrtn joined
[04:06] *** __jrjsmrtn__ left
[04:09] *** ensamvarg3 left
[04:12] *** squashable6 left
[04:14] *** squashable6 joined
[04:40] *** dyaso joined
[04:45] <dyaso> i have a question which isn't in the FAQ: how practical would Raku be as a scripting language embedded in a larger application? Lua/Python/Scheme sort of use case

[04:51] *** maggotbrain joined
[04:54] *** Kaiepi left
[04:54] *** Kaiepi joined
[05:00] <moon-child> dyaso: not great, but if you're dedicated you can probably get something going

[05:00] <moon-child> dyaso: https://github.com/moon-chilled/libport take a look at this

[05:01] <dyaso> huh, it seems ideal as an extension language for a text editor or something. what are the problems?

[05:01] <moon-child> the main problem is that the global namespace is immutable, so hotswapping code is somewhat impractical

[05:02] <moon-child> also moarvm embedding isn't super mature (e.g. it's not currently possible to start multiple interpreter instances in the same process)

[05:02] <moon-child> https://metacpan.org/pod/Inline::Perl6 is also worth a look (that's for embedding raku in perl5)

[05:03] <dyaso> i'd noticed that about moarvm, had thought instead the main app might include a shared library the extensions would interact with, which would somehow communicate back to the main app

[05:04] <moon-child> that's an option

[05:04] <moon-child> another option is to just write the whole app in raku

[05:04] <dyaso> true!

[05:06] *** nige joined
[05:07] <moon-child> out of curiosity, what kind of app would this be for?

[05:08] *** nige left
[05:08] *** nige joined
[05:11] <dyaso> probably a Rust binary / text file editor, and i've also been daydreaming about a mini interactive computer algebra system (less about automatic simplification than performing manipulations as the user suggests them) for Clifford algebras

[05:12] *** zacts joined
[05:13] *** nige left
[05:14] *** nige joined
[05:18] <moon-child> ah, neat

[05:18] *** nige left
[05:18] <moon-child> I have an APL CAS sitting on the back burner

[05:18] *** nige joined
[05:20] *** BenGoldberg left
[05:20] <moon-child> have also thought about building a texteditor, but the existing offerings are all *super* mature (incl. the hex/bin editors) so it seems like somewhat of a lost cause to try to produce something usable

[05:22] <dyaso> my idea with that was half small UI innovations: non-fixed width text, elastic tabstops, http://www.andrewbragdon.com/codebubbles_site.asp

[05:23] <dyaso> .. and half that i've seen a few binary file editors which make attempts to parse the binary file formats, and in the case of executables the user annotates structures which are then used to interpret the rest of the file, and thought experimenting with editing source code like that too seemed intereseting

[05:24] <dyaso> also it's a well established kind of program and fairly simple, so good for a practice rust app

[05:28] *** nige left
[05:29] *** nige joined
[05:33] *** nige left
[05:35] *** parabolize left
[05:41] <notandinus> i compiled rakudo star from source yesterday, raku says that 'Readline' is not installed but i see it in ~/star/src/rakudo-star-modules

[05:42] <notandinus> i cloned the repository in ~/star and installed it in the same place

[05:42] <notandinus> do i need to add RAKULIB or some env var to point to the modules directory?

[05:49] *** nige joined
[05:53] *** nige left
[05:53] *** nige joined
[06:08] *** nige left
[06:09] *** nige joined
[06:09] *** jmerelo joined
[06:12] *** frost-lab left
[06:13] *** nige left
[06:13] *** nige joined
[06:13] <moritz> notandinus: did you "make install" in rakudo star?

[06:18] <notandinus> moritz: ,no i just ran `rstar instal' and nothing after that

[06:20] <Geth> ¬¶ ecosystem/alabamenhu-patch-1: f63bcbaa67 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[06:20] <Geth> ¬¶ ecosystem/alabamenhu-patch-1: Change to real name

[06:20] <Geth> ¬¶ ecosystem/alabamenhu-patch-1: review: https://github.com/Raku/ecosystem/commit/f63bcbaa67

[06:21] <notandinus> moritz:  it did say that it was installting modules iirc

[06:24] <guifa> jmerelo: It‚Äôs definitely supposed to be ‚Äútransput‚Äù

[06:24] <jmerelo> It's not there, then...

[06:24] <tellable6> 2020-12-02T23:39:32Z #raku <tbrowder> jmerelo my advent article is on the advent site

[06:24] <guifa> I don‚Äôt know why Travis failed, local zef install works for me =\ 

[06:25] <guifa> oh

[06:25] <jmerelo> Not only Travis. I couldn't fetch the file either

[06:25] * guifa sighs

[06:25] <guifa> It‚Äôs because github stopped using ‚Äúmaster‚Äù as the default branch name

[06:25] <guifa> now it‚Äôs "main"

[06:26] <jmerelo> Just noticed

[06:26] <jmerelo> Can do it for you if you want

[06:26] <Geth> ¬¶ ecosystem/alabamenhu-patch-1: 789c66f59e | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[06:26] <Geth> ¬¶ ecosystem/alabamenhu-patch-1: Use real name

[06:26] <Geth> ¬¶ ecosystem/alabamenhu-patch-1: review: https://github.com/Raku/ecosystem/commit/789c66f59e

[06:26] <guifa> jmerelo: that‚Äôd be awesome.  Couldn‚Äôt see where to edit the commit on the web interface quickly

[06:28] *** nige left
[06:29] *** nige joined
[06:29] <jmerelo> guifa: used to do it to debug github actions. 

[06:30] <jmerelo>         # github source https://github.com/alabamenhu/DebugTransput needs to end in .git

[06:30] <jmerelo> guifa: you can fix that and ping me, and I'll re-laucn tests

[06:32] <guifa> jmerelo: all done

[06:33] *** nige left
[06:33] *** nige joined
[06:34] <Geth> ¬¶ ecosystem/master: 4 commits pushed by L'Alabame√±u++, (Juan Juli√°n Merelo Guerv√≥s)++

[06:34] <Geth> ¬¶ ecosystem/master: 32ac9a1745 | Add Debug::Transport to list

[06:34] <Geth> ¬¶ ecosystem/master: f63bcbaa67 | Change to real name

[06:34] <Geth> ¬¶ ecosystem/master: 789c66f59e | Use real name

[06:34] <Geth> ¬¶ ecosystem/master: b1d8d21648 | Merge pull request #571 from Raku/alabamenhu-patch-1

[06:34] <Geth> ¬¶ ecosystem/master: review: https://github.com/Raku/ecosystem/compare/a2a35b33d2b7...b1d8d216480d

[06:36] <jmerelo> guifa++

[06:36] <jmerelo> Looks like a cool thing, too...

[06:38] <guifa> It‚Äôs all codesection‚Äôs fault

[06:47] <guifa> I‚Äôve still been burning the mdnight oil trying to get CLDR to a newly releasable state

[06:47] <guifa> It‚Äôs soooooo much faster

[06:48] *** nige left
[06:49] *** nige joined
[06:53] *** nige left
[06:53] *** nige joined
[07:03] *** nige left
[07:04] *** nige joined
[07:08] *** nige left
[07:08] *** nige joined
[07:08] *** sjm_uk joined
[07:20] *** harrison joined
[07:23] *** nige left
[07:24] *** nige joined
[07:28] *** nige left
[07:28] *** nige joined
[07:43] *** nige left
[07:44] *** nige joined
[07:48] *** nige left
[07:48] *** nige joined
[07:53] *** nige left
[07:54] *** nige joined
[07:57] *** sjm left
[07:58] *** nige left
[07:58] *** nige joined
[08:00] *** sjm joined
[08:00] *** stoned75 joined
[08:04] *** Zero_Dogg left
[08:07] *** harrison left
[08:11] *** BenGoldberg joined
[08:12] *** domidumont joined
[08:13] *** Sgeo left
[08:13] *** nige left
[08:14] *** nige joined
[08:18] *** nige left
[08:18] *** nige joined
[08:35] *** harrison joined
[08:35] *** sena_kun joined
[08:37] *** pecastro joined
[08:41] *** dakkar joined
[08:45] *** BenGoldberg left
[08:45] *** kst left
[08:46] *** kst joined
[08:49] *** MasterDuke joined
[08:57] *** sjm left
[08:58] *** sjm joined
[09:03] *** zacts left
[09:06] <notandinus> what would be the slow part in this code: https://paste.debian.net/1175382/

[09:07] *** Altai-man joined
[09:10] *** sena_kun left
[09:10] <MasterDuke> notandinus: have you tried profiling it? add the '--profile' flag to your raku command line to generate a stand-alone html file profiling report

[09:16] <MasterDuke> if i set `@part_02 = ^10_000_000` before running that, 78% of the time is spent in garbage collection

[09:16] <notandinus> i'll try profiling it,

[09:17] <notandinus> oh @part_02 is a list of just 200 numbers

[09:17] <notandinus> MasterDuke: i see, so could that be improved?

[09:17] <notandinus> this thing takes ~3 minutes to run on my system, just ran it with --profile

[09:19] <MasterDuke> 3min with just 200 numbers? that takes 0.13s on my machine

[09:20] <notandinus> seems accurate, i ran some code to computer 'e' and it took 10x time on my system to do the same thing

[09:20] <notandinus> here just "raku -e 'say 1'" takes around 1s

[09:21] <MasterDuke> what hardware are you running on?

[09:21] <notandinus> its intel pentium, 1.5GHz x 4 

[09:22] <notandinus> i'm running raku 2020.11

[09:23] <notandinus> hang on i;ll test equivalent perl code

[09:23] <notandinus> AOC day 1 part 1 takes 1.7 s on raku and just 200ms on perl

[09:23] *** wamba joined
[09:23] <MasterDuke> well, do you need to work from the front of @part_02? popping is faster than shifting

[09:24] <MasterDuke> m: my @a = 1..1_000_000; my $b; my $s = now; while shift @a -> $c { $b = $c }; say now - $s; say $b

[09:24] <camelia> rakudo-moar ed16d6c10: OUTPUT: ¬´0.2155762‚ê§1000000‚ê§¬ª

[09:24] <MasterDuke> m: my @a = 1..1_000_000; my $b; my $s = now; while pop @a -> $c { $b = $c }; say now - $s; say $b

[09:24] <camelia> rakudo-moar ed16d6c10: OUTPUT: ¬´0.1029508‚ê§1‚ê§¬ª

[09:25] <notandinus> heh the equivalent perl code took 400ms to run part 2

[09:25] <notandinus> MasterDuke:  i'll try that

[09:26] *** dakkar left
[09:26] *** dakkar joined
[09:27] *** harrison left
[09:27] *** harrison joined
[09:28] *** dyaso left
[09:29] *** ensamvarg3 joined
[09:31] <notandinus> MasterDuke:  looks like that combinations thing was causing it

[09:31] <notandinus> here: https://paste.debian.net/1175385/

[09:31] <notandinus> ^ has raku, perl code & their times

[09:32] <notandinus> 0m21.26s real     0m21.11s user     0m00.75s system

[09:32] <notandinus> 0m00.42s real     0m00.35s user     0m00.07s system

[09:32] <notandinus> ^ first one is raku, second one is perl

[09:32] <notandinus> am i doing something wrong?

[09:33] <MasterDuke> yeah, the first profile i ran of your code was wrong, so ignore what i said about garbage collection

[09:34] <MasterDuke> .combinations is slower than the nested loop?

[09:35] <notandinus> a lot slower

[09:35] <notandinus> it should be the same thing right?

[09:36] <MasterDuke> hm. that used to be the case (i even wrote a module to automatically generate the source code for the right number of nested loops and EVAL that), but then .combinations was made much much faster

[09:37] <notandinus> so it should be faster than nested for?

[09:38] <MasterDuke> pretty sure it has been at least very close

[09:38] *** nige left
[09:38] *** cpan-raku left
[09:39] *** nige joined
[09:39] <MasterDuke> fwiw, your nested loops aren't producing the same output as .combinations(2)

[09:39] <notandinus> yeah the combinations one wasn't producing any output, i'm checking that

[09:39] <notandinus> the nested loop is the righ tone

[09:40] *** vszl joined
[09:41] <notandinus> hmm i'll just test empty loop

[09:41] <notandinus>  0m05.56s real     0m05.83s user     0m00.57s system

[09:42] <notandinus> ^ this is nested for

[09:42] <notandinus> 0m08.97s real     0m09.02s user     0m00.63s system

[09:42] <notandinus> ^ this is combinations ^

[09:42] <notandinus> so maybe my operations are messing it up

[09:42] <vszl> Hi, I'm new to raku and I'm trying to learn it by doing the Advent of Code. I'm trying to do the equivalent of this form perl5: `echo 'hiii hii' | perl -pe 'my $x="i"; s/[^$x]//g' `. That is substiute every non $x with "i". I'm trying `s:g/<-[$x]>//` in perl6 and variants but can't seem to figure it out.

[09:43] *** maggotbrain left
[09:43] <vszl> I mean I mean substitute every non $x with the empty string.

[09:43] <MasterDuke> but combinations should give you the right answer. it's giving you the unique pairs, and a + b == b + a

[09:43] *** nige left
[09:43] *** nige joined
[09:43] <notandinus> https://paste.debian.net/hidden/56d26d51/  # MasterDuke: i'm using this code, both are the same thing right?

[09:44] <MasterDuke> oh, well you won't get the duplicated entries with combinations. e.g., (2 2)

[09:46] <notandinus> say the list is <1 1> and i perform combinations on it then i'll get : <1 1> <1 1> right?

[09:46] <notandinus> whereas nested for will be <1 1> 4 times

[09:46] <MasterDuke> m: .say for (1,1).combinations(2)

[09:46] <camelia> rakudo-moar ed16d6c10: OUTPUT: ¬´(1 1)‚ê§¬ª

[09:47] <notandinus> oh & I just checked, the numbres in answers doesnt include duplicate entries: its = 983 : 69 : 968

[09:48] <notandinus> MasterDuke:  oh i see, hmm is it intended behaviour? if you go by mathematical definition then it should be <1 1> <1 1> right?

[09:48] <notandinus> m: .say for (1, 2, 2).combinations(2)

[09:48] <camelia> rakudo-moar ed16d6c10: OUTPUT: ¬´(1 2)‚ê§(1 2)‚ê§(2 2)‚ê§¬ª

[09:51] <notandinus> hmm maybe combinations is slower because it's doing this complex de duplication thing

[09:53] <notandinus> and that code took 3m 25s without printing the answer, i think i'll stick with nested for loop

[09:56] *** cpan-raku joined
[09:56] *** cpan-raku left
[09:56] *** cpan-raku joined
[09:59] *** squashable6 left
[10:02] *** squashable6 joined
[10:04] <notandinus> for some reason everything on my system is around 10x slower, could it be the 2020.11 build?

[10:04] <notandinus> i ran the same code on my laptop, took 2s, takes 20s on my system

[10:05] *** ensamvarg left
[10:05] <notandinus> ofc laptop is faster but i dont see this difference when running the perl implmentation

[10:05] *** ensamvarg joined
[10:07] <notandinus> mine is also hyperthreading disabled, openbsd disables it by default, 

[10:07] <notandinus> i'll stop posting now, sorry for the wall

[10:07] *** ensamvarg left
[10:09] <MasterDuke> there were some regressions introduced in the 2020.11 release, but i don't *think* they should impact this code

[10:11] *** ensamvarg joined
[10:11] *** ufobat joined
[10:12] *** ensamvarg left
[10:12] <MasterDuke> btw, you weren't including some values in your original code because the shifting was happening first

[10:12] <notandinus> MasterDuke: yeah that was intended

[10:12] <notandinus> i only want to go over it once in outermost loop

[10:13] *** ensamvarg joined
[10:13] <MasterDuke> m: my @a = 1..3; while shift @a { .say for @a.combinations(2) }

[10:13] <camelia> rakudo-moar ed16d6c10: OUTPUT: ¬´(2 3)‚ê§()‚ê§¬ª

[10:13] <MasterDuke> m: my @a = 1..3; while @a { .say for @a.combinations(2); @a.shift }

[10:13] <camelia> rakudo-moar ed16d6c10: OUTPUT: ¬´(1 2)‚ê§(1 3)‚ê§(2 3)‚ê§(2 3)‚ê§¬ª

[10:13] <notandinus> if i remove that outermost loop and change it to combinations: 3, it takes 4 minutes and prints the right result

[10:13] <notandinus> wait...

[10:14] <notandinus> hmm that was not intended

[10:14] <notandinus> m: my @a = 1..3; while pop @a -> $n { say $n }

[10:14] <camelia> rakudo-moar ed16d6c10: OUTPUT: ¬´3‚ê§2‚ê§1‚ê§¬ª

[10:14] <notandinus> oh no 

[10:15] <notandinus> so that's why the combinations: 2 wasn't outputting the right answer

[10:15] <notandinus> thanks MasterDuke, it was logical error

[10:15] <MasterDuke> ha, np

[10:17] *** frost-lab joined
[10:20] *** ensamvarg left
[10:21] *** ensamvarg joined
[10:23] *** ensamvarg195 left
[10:24] *** ensamvarg195 joined
[10:36] <notandinus> ok i have another interesting thing

[10:37] <notandinus> https://paste.debian.net/hidden/2da3584e/ - this takes ~5 s to run

[10:38] <notandinus> https://paste.debian.net/hidden/6c4871ef/ - this takes ~56 s

[10:38] <notandinus> the change is in `if' block, $num_1 is changed to $num_2 in second code

[10:38] *** nige left
[10:39] <notandinus> why would the difference be so huge? i

[10:39] *** nige joined
[10:39] <notandinus> i'm profiling it now

[10:41] <timotimo> what numbes give the result?

[10:41] <timotimo> maybe it's actually running more tries for the second one?

[10:41] *** MasterDuke left
[10:42] <notandinus> second one gives no result

[10:42] <timotimo> ah, well

[10:42] <notandinus> and it's running same tries for both, the input doesn't change

[10:42] <timotimo> that means it'll run the entire num2 and num3 loop completely, num1 times, without exiting

[10:43] <notandinus> ah, sorry nevermind

[10:43] <timotimo> ah i can't just run the code because i don't have @inputs

[10:43] <notandinus> my brain is not working 

[10:43] *** nige left
[10:43] <notandinus> timotimo: that must be it

[10:43] *** nige joined
[10:53] *** nige left
[10:54] *** nige joined
[10:58] *** MasterDuke joined
[10:58] *** nige left
[10:58] *** nige joined
[11:21] *** MasterDuke left
[11:36] *** BenGoldberg joined
[11:39] *** MasterDuke joined
[11:52] *** ufobat_ joined
[11:55] *** Black_Ribbon left
[11:55] *** MasterDuke left
[11:55] *** ufobat left
[11:58] *** nige left
[11:59] *** nige joined
[12:03] *** nige left
[12:03] *** nige joined
[12:06] *** ggoebel left
[12:08] *** wamba left
[12:09] *** BenGoldberg left
[12:10] <notandinus> hi o/

[12:11] <notandinus> so i'm running `rstar install` again, it should install all the modules right?

[12:11] <notandinus> [2020-12-03T17:36:08] [INFO]  Installing Log-Colored

[12:11] <notandinus> ^ currently it's printing this for each module listed in `/etc/modules.txt`

[12:21] *** grep0r joined
[12:21] *** grep0r left
[12:27] *** harrison left
[12:27] *** ggoebel joined
[12:28] *** nige left
[12:28] *** leont joined
[12:29] *** nige joined
[12:33] *** nige left
[12:33] *** nige joined
[12:34] *** vszl left
[12:38] *** nige left
[12:39] *** nige joined
[12:43] *** nige left
[12:43] *** nige joined
[12:48] *** nige left
[12:49] *** nige joined
[12:51] *** lucasb joined
[12:53] *** nige left
[12:53] *** nige joined
[12:55] *** MasterDuke joined
[12:55] *** sjm left
[13:00] *** sjm joined
[13:02] *** oodani joined
[13:05] *** oodani left
[13:07] *** sena_kun joined
[13:09] *** Altai-man left
[13:15] *** natrys joined
[13:21] *** MasterDuke left
[13:23] *** frost-lab left
[13:23] *** nige left
[13:24] *** nige joined
[13:33] *** nige left
[13:39] *** nige joined
[13:41] *** dyaso joined
[13:43] <tyil> that seems like a bug

[13:45] <tyil> CI doesn't seem to reproduce this (https://gitlab.com/tyil/rakudo-star/-/jobs/864033902)

[13:47] <tyil> notandinus: can you give me the output of `rstar sysinfo`, and exact steps to reproduce this on your machine? (wget $url, tar ..., cd ..., ./bin/rstar install ...)

[13:48] *** nige left
[13:48] *** nige joined
[13:53] *** nige left
[13:54] *** nige joined
[13:54] *** aluaces joined
[13:58] *** nige left
[13:58] *** nige joined
[14:03] *** nige left
[14:04] *** nige joined
[14:08] *** nige left
[14:08] *** nige joined
[14:08] *** jmerelo left
[14:11] *** natrys left
[14:11] <cpan-raku> New module released to CPAN! RogueCurses (0.1.10) by 03KOBOLDWIZ

[14:11] *** natrys joined
[14:13] *** nige left
[14:14] *** nige joined
[14:19] <notandinus> tyil: I'm running OpenBSD 6.8 amd64

[14:19] <notandinus> rstar sysinfo includes this info ^

[14:20] <notandinus> tyil: exact steps: // git clone <rstar repo>; rstar fetch; rstar install -p ~/star //

[14:21] <notandinus> hmm `tar'? oh should i be getting a release version and not running off master?

[14:22] *** Maylay joined
[14:22] *** leont left
[14:22] *** abraxxa left
[14:22] <notandinus> tyil:  also, whad you mean by CI doesn't reproduce it? i see "https://gitlab.com/tyil/rakudo-star/-/jobs/864033902#L871" line

[14:23] *** abraxxa joined
[14:24] <notandinus> or are you talking about something else?

[14:27] *** abraxxa left
[14:28] *** abraxxa joined
[14:28] *** nige left
[14:28] *** nige joined
[14:31] *** natrys left
[14:32] *** wamba joined
[14:32] <tyil> notandinus: oh, I thought you ment it's saying "Log-Colored" for every module

[14:33] <notandinus> oh sorry for misunderstanding

[14:33] <tyil> no worries at all

[14:34] <tyil> I'm glad it's working fine :p

[14:36] <notandinus> what might be the reason for this: http://paste.debian.net/hidden/66b66a6b/

[14:36] <notandinus> i get that when i run `raku`

[14:38] *** nige left
[14:39] *** nige joined
[14:40] <tyil> that means you don't have a libereadline.so, and I would expect a libreadline.so (1 less e after lib) to begin with

[14:41] <tyil> it's an error from the Readline module, so you won't have readline support in the raku repl, but the repl itself still works

[14:41] <notandinus> i can confirm it says libereadline

[14:41] <notandinus> oh so it'sthe module issue?

[14:41] <tyil> it's not something in core Raku, at least, but I'm not sure what specifically went wrong with the module

[14:42] <notandinus> i ran `zef uninstall Readline`, it was sucessful 

[14:42] <notandinus> running `zef uninstall Readline` again returns `Found no matching candidates to uninstall`

[14:42] <notandinus> but running `raku` still gives that error:  http://paste.debian.net/hidden/66b66a6b/    

[14:42] <tyil> I have a similar issue on my local machine, where it's looking for libreadline.so.7 and can't find that either :(

[14:42] <notandinus> and running `zef list --installed` still lists readline

[14:43] <notandinus> ok  but `zef list --installed` shouldn't list Readline right?

[14:44] <tyil> try `zef uninstall --uninstall-from=vendor Readline`

[14:45] <tyil> (there's 3 default installation locations for modules, the one bundled with Rakudo Star install in "vendor", without an explicit location, zef uses site iirc)

[14:45] <notandinus> tyil: yay thanks, now `raku` doesn't print the readline error

[14:45] <tyil> \o/

[14:46] <notandinus> raku module thing is so confusing, are we expected to only manage it through zef?

[14:46] <tyil> for now, zef is the only recommended module manager, yes

[14:46] <notandinus> i see that the files are random long names instead of module directory

[14:47] <tyil> they're hashes of a few variables in the module (name, author, version iirc)

[14:47] <notandinus> ah i see, so to prevent collisions?

[14:47] <tyil> Raku allows modules with the same name to be installed (from different authors or different versions), so this is needed to avoid collisions

[14:47] <notandinus> but doesnt it make things complicated?

[14:47] *** parabolize joined
[14:47] <notandinus> oh wait, different versions too?

[14:48] <tyil> it does make things a lot more complicated in my opinion, but there's certain upsides

[14:48] <tyil> like being able to use the specific version of any module you need

[14:48] *** nige left
[14:48] *** nige joined
[14:48] <notandinus> that's cool, yeah i would still prefer plain names

[14:49] <notandinus> i just ran zef install Readline and it fails a test

[14:49] <notandinus> hmm nvm ^, i'll test it later

[14:49] <notandinus> is this channel always so quiet?

[14:50] <tyil> it depends on the time of day, really

[14:50] <notandinus> half of messages today would be from me lol

[14:50] <notandinus> ah so lets say i write a raku script for parsing irc logs to find out the most active hour

[14:51] <notandinus> the format is "09:50 <nick> message"

[14:51] <notandinus> what would be the best way to do it?

[14:51] <tyil> do you know of grammars?

[14:51] <notandinus> what comes to my mind is to just read the log line by line and substr first 2 chars to get year and increment it's hash

[14:52] <notandinus> tyil: no, i don't

[14:52] <tyil> https://docs.raku.org/language/grammars

[14:52] <tyil> it's the next best thing after sliced bread

[14:53] <tadzik> although for that specific purpose, reading the first two chars should be good enough :)

[14:53] <tyil> it allows you to relatively easily parse a file, and turn it into objects (using Actions)

[14:53] <tyil> tadzik: well, yeah, but grammars are cool!

[14:53] <tadzik> indeed! :)

[14:53] <notandinus> huh so i teach raku the format of log and i can get everything?

[14:53] *** nige left
[14:54] <tadzik> any excuse to learn them is a good one

[14:54] *** nige joined
[14:54] <tadzik> notandinus: yeah, pretty much

[14:54] <notandinus> does perl have such thing?

[14:54] <tadzik> you can do it line-by-line, which will probably be a lot lot faster

[14:54] *** rindolf joined
[14:54] <tadzik> perl has just the regular regexes, which are not as powerful (though they would work just as well in this case, for the most part)

[14:54] <notandinus> tadzik: i can do it line by line with grammars too right?

[14:54] <tadzik> notandinus: yes

[14:55] <tadzik> just define it in your grammar that your log is a set of entries separated by newlines

[14:55] <notandinus> this is nice, i'll try learning this

[14:55] <tyil> notandinus: I used a grammar for the Advent of Code day 2 problem https://git.tyil.nl/advent-of-code/tree/2020/02/bin/first

[14:55] <tadzik> they're great

[14:56] <tadzik> ah nice, I just did this with regexes (in Rust). Also learning that compiling a regex on each line in debug build mode is sloooow

[14:56] <tadzik> ends up much less elegant than the raku version: https://git.tadzik.net/tadzik/aoc2020/src/master/src/bin/day2.rs

[14:57] <tyil> but likely much faster as well, I presume?

[14:57] <tadzik> let's see...

[14:58] <tadzik> actuall takes almost a full second

[14:58] *** nige left
[14:58] *** nige joined
[14:58] <tyil> thats less impressive than I would've thought

[14:58] <tadzik> that's disturbingly slow, I guess regex compilation is killing it

[14:59] *** natrys joined
[15:00] <tadzik> yep, down to 0.01s if you only compile it once :P

[15:00] <tyil> that's more within the expected range

[15:00] <tadzik> it was even worse in debug build, to the point when I waited like 10 seconds and started wondering where the infinite loop is

[15:01] *** BenGoldberg joined
[15:04] *** aluaces left
[15:06] *** aluaces joined
[15:08] *** nige left
[15:08] *** Sgeo joined
[15:09] *** nige joined
[15:13] *** ensamvarg3 left
[15:13] *** nige left
[15:13] *** nige joined
[15:20] *** natrys left
[15:24] *** natrys joined
[15:26] *** wamba left
[15:28] *** wamba joined
[15:28] *** nige left
[15:29] *** nige joined
[15:35] *** BenGoldberg left
[15:38] *** nige left
[15:38] *** nige joined
[15:39] *** abraxxa left
[15:40] *** abraxxa joined
[15:40] *** lucasb left
[15:43] *** abraxxa left
[15:45] *** abraxxa joined
[15:48] *** natrys left
[15:48] *** natrys joined
[15:48] *** nige left
[15:49] *** nige joined
[15:49] *** abraxxa left
[15:51] *** Tirifto joined
[15:53] *** nige left
[15:53] *** nige joined
[16:05] *** telex left
[16:06] *** telex joined
[16:13] *** nige left
[16:14] *** nige joined
[16:17] <guifa> Is there a way to create an Enum that doesn‚Äôt autoimport its symbols into the current scope?

[16:18] <guifa> I‚Äôm using package Foo {¬†enum Foo ‚Ä¶¬†} to require referenceing as Foo::a, Foo::b etc, but it feels a bit clunky

[16:18] *** nige left
[16:18] *** nige joined
[16:19] *** xinming left
[16:21] *** xinming joined
[16:23] *** hal99999 joined
[16:34] *** jmchael joined
[16:36] *** skids joined
[16:42] *** jmerelo joined
[16:47] *** hungrydonkey joined
[16:51] *** Doc_Holliwould left
[16:53] <tbrowder> jmerelo: do i need to add additional links?

[16:55] <tbrowder> i already have two links to language refs, but i guess there are the type refs (but the docs aren't available at the moment).

[16:56] *** rindolf left
[16:56] <tbrowder> hm, it seems the docs site has no tls cert at the moment

[16:56] <lizmat> guifa: I'm afraid that's the way to do it

[16:58] <jmerelo> tbrowder: now, everything is OK. Thanks!

[16:58] <jmerelo> tbrowder: let me check that

[16:58] <jmerelo> tbrowder: it seems to be back to normal...

[17:01] *** stoned75 left
[17:02] <tony-o> notandinus: perl regex can probably do your log file, it can parse JSON too.  https://www.perlmonks.org/?node_id=995856

[17:03] <tellable6> 2020-11-08T10:58:07Z #raku <patrickb> tony-o May I encourage you to give your ecosystem rework proposal a second chance? The call for proposals is up!

[17:06] <jmerelo> Do you know you can earn fame and fortune by contributing to the Raku advent calendar? https://github.com/Raku/advent/blob/master/raku-advent-2020/authors.md

[17:07] *** Altai-man joined
[17:09] <tony-o> there is fortune to be had?

[17:09] *** sena_kun left
[17:09] <jmerelo> tony-o: it's good karma. Or something. Your next (insert favorite meal here) will taste better.

[17:12] *** hungryd49 joined
[17:12] *** hungrydonkey left
[17:12] *** xinming left
[17:14] *** xinming joined
[17:18] *** nige left
[17:19] *** nige joined
[17:19] <lucs> Any reason why raku-advent.blog doesn't have an index to all the entries? (today for example, I can link to day 3 and day 2, but not day 1, which I haven't read :-)

[17:20] <jmerelo> lucs: someone has to do that

[17:20] <jmerelo> Also, you can navigate by simply clicking on the "2020" category

[17:20] <jmerelo> https://raku-advent.blog/category/2020/ Hum, two articles are missing there.

[17:21] <lucs> Not seeing the "category" link :(

[17:21] <lucs> (or 2020)

[17:22] <jmerelo> OK; now all articles are there.

[17:22] <jmerelo> https://raku-advent.blog/category/2020/

[17:23] <jmerelo> https://raku-advent.blog/2020/12/03/day-3-literate-programming-with-raku/ Right below the title, by the little folder icon

[17:23] *** nige left
[17:23] *** nige joined
[17:24] <lucs> jmerelo: Hmm... Okay, but not quite obvious, eh :)

[17:25] <lucs> Also, I guess it would be nice to have that link on the home page.

[17:26] <jmerelo> lucs: there's no home page. There's a page with the latest entries. There's an entry on top, but then someone would have to edit it every day to add the new link.

[17:26] <lucs> By home page, I meant "raku-advent.blog".

[17:27] <lucs> Ah, I see.

[17:28] <jmerelo> We can do it when it's finished, but I don't see a point in doing it. Just linking the category will do the same, pretty nicely. That's what the category is for, anyway.

[17:29] <lucs> jmerelo: How about a link to raku-advent.blog/category/2020 on the raku-advent.blog page?

[17:29] <Geth> ¬¶ doc: MorayJ self-assigned OO code example in rb-nutshell doesn't work https://github.com/Raku/doc/issues/3706

[17:29] <jmerelo> I can edit the pinned article and add that.

[17:30] *** hal99999 left
[17:30] *** rindolf joined
[17:32] *** hungryd49 left
[17:32] *** seanrobert joined
[17:32] *** moray joined
[17:32] *** seanrobert left
[17:32] *** moray is now known as morayj

[17:37] *** dakkar left
[17:37] *** hal99999 joined
[17:38] *** hal99999 left
[17:47] *** seanrobert joined
[17:47] <guifa> lizmat: noted, I‚Äôll stick with it then. 

[17:49] *** dyaso left
[17:49] *** hal99999 joined
[17:50] *** hal99999 left
[17:50] *** hal99999 joined
[17:50] *** seanrobert left
[17:51] <jmerelo> We're preparing the CFP for the Raku&Perl devroom. Everyone is welcome to help

[17:52] <jmerelo> guifa: I seem to remember you send me a draft for your article, but I totally forgot where it is. 

[17:52] <guifa> jmerelo: https://github.com/alabamenhu/DateTimeTimezones/blob/master/docs/blog.md

[17:53] <jmerelo> I don't think I've seen that before. Can I check it out before you (or me) upload it to the WP blog?

[17:54] *** Doc_Holliwould joined
[17:55] *** aindilis left
[17:55] *** aindilis joined
[17:57] <guifa> jmerelo: sure.

[17:57] <guifa> ah you‚Äôve already started, great ^_^

[18:02] <jmerelo> lucs: link added

[18:05] <guifa> omg so much spam from github thanks to jmerelo.  I might have enough to make sandwiches for a week ;-)

[18:06] <jmerelo> make that a couple of days :-)

[18:07] <jmerelo> guifa: done

[18:09] <guifa> jmerelo: noted.  I‚Äôll start to work on it in a second

[18:09] *** pounce joined
[18:10] <guifa> Also, if needed, I can do another article fairly quickly on serialization, so if it‚Äôs looking like we need it, just gimme a heads up, otherwise I‚Äôll leave it for next year

[18:13] *** xinming left
[18:14] *** xinming joined
[18:18] *** domidumont left
[18:26] *** BenGoldberg joined
[18:38] *** xinming left
[18:38] *** xinming joined
[18:43] *** sjm left
[18:45] *** pecastro left
[18:46] *** ggoebel left
[18:48] *** sjm joined
[18:48] *** natrys left
[18:52] *** ggoebel joined
[18:57] *** sjm left
[18:57] *** sjm joined
[18:57] *** pecastro joined
[18:58] *** ab5tract joined
[18:58] *** nige left
[18:59] *** nige joined
[19:00] *** BenGoldberg left
[19:02] *** sjm left
[19:02] *** sjm joined
[19:02] <cpan-raku> New module released to CPAN! Game::Stats (0.2.10) by 03KOBOLDWIZ

[19:03] *** nige left
[19:03] *** nige joined
[19:06] *** sjm_uk left
[19:08] *** sjm left
[19:08] *** sjm joined
[19:08] *** nige left
[19:09] *** nige joined
[19:13] *** nige left
[19:13] *** nige joined
[19:15] <ab5tract> anyone doing Advent of Code here? curious if someone found a version of Day 1 part 2 that performs reasonably well

[19:31] *** ufobat_ left
[19:35] *** kensanata joined
[19:38] *** morayj left
[19:48] *** nige left
[19:49] *** nige joined
[19:53] *** nige left
[19:53] *** nige joined
[19:53] *** jmerelo left
[19:54] *** codesections joined
[20:02] *** ufobat_ joined
[20:09] <ggoebel> codesections created a github repo to host Advent of Code (AoC) solutions. several folks have added theirs. You may find some good ideas reading other solutions. https://github.com/codesections/advent-of-raku-2020

[20:10] <cpan-raku> New module released to CPAN! Game::Bayes (0.2.6) by 03KOBOLDWIZ

[20:13] <ab5tract> ggoebel, ah, great! nice to have them all in one place

[20:13] <ab5tract> thanks for sharing!

[20:14] <codesections> And, more specifically, I believe a few solutions saw some easy perf gains from `race` (e.g., https://github.com/mienaikage/advent-of-raku-2020/blob/main/mienaikage/01.raku)

[20:15] <codesections> Though I haven't followed it closely - I'm not focusing on speed for AoC

[20:15] <ab5tract> .combinations(3) is at least 15x faster than [X] @data xx 3

[20:15] <ab5tract> I *knew* there was a method for it, but I got stuck looking for something like .cross :X

[20:23] *** stoned75 joined
[20:30] <tbrowder> funny, i can get to docs via link from raku.org, but not as a direct adress in the same browser. oh, well, that works.

[20:32] *** kensanata left
[20:32] <tbrowder> jmerelo: when you get a chance, please see if the links i have on build and tweak are satisfactory (the copy on wordpress)

[20:32] <tellable6> tbrowder, I'll pass your message to jmerelo

[20:34] <codesections> tbrowder: hmm, someone else said something similar about the docs.raku site the other day: https://colabti.org/irclogger/irclogger_log/raku?date=2020-12-01#l546

[20:34] *** morayj joined
[20:36] <tbrowder> seems weird to me, but at least it's accessible.

[20:36] <codesections> They figuered it was just a config issue on there end, but if you're hitting the same issue, I wonder if the site could be having dns issues or something

[20:41] <tbrowder> yeah, i can't get to lots of pages, bummer, really need them

[20:41] <cpan-raku> New module released to CPAN! Random::Hawking::Boltzmann (0.1.3) by 03KOBOLDWIZ

[20:48] <codesections> tbrowder: are you getting the same ERR_SSL_PROTOCOL_ERROR Raycat mentioned?

[20:54] *** xinming left
[20:54] *** hal99999 left
[20:55] <brass> Is there a convenient way to create an array that wraps around, so that if you go to the next element after the last one it returns the first, and so on?

[20:55] <Xliff_> Hi! What would be the best way to determine if a hash contains equivalent entries?

[20:55] <Xliff_> eqv?

[20:55] *** xinming joined
[20:56] <Xliff_> m: my %a = ( a=> 1, b => 2, c => 3); my %b = %a; %b{3} = 42; my %c = %a; say %a eqv %b; say %a eqv %c;

[20:56] <camelia> rakudo-moar 2c5b54576: OUTPUT: ¬´False‚ê§True‚ê§¬ª

[20:56] <Xliff_> Ah. Nevermind. :)

[20:57] <cpan-raku> New module released to CPAN! Random::Hawking::Boltzmann (0.1.4) by 03KOBOLDWIZ

[20:58] <perryprog> brass, you can just modulo the index by the length, no?

[20:58] <codesections> brass: two options.  one is @array xx ‚àû

[20:58] <brass> I totally can haha, I was just curious 

[20:58] <codesections> or use `rotate`

[20:58] <perryprog> Oo looks like I'm about to learn something too

[20:58] <brass> OOOo

[20:59] <brass> That's neat

[20:59] <codesections> or modulo works too :D

[20:59] <perryprog> codesections, what would using rotate look like?

[21:02] <codesections> basically the same as modulo, really.  You'd just rotate the array by the amount you want to acces and then check the head of the array.  Probably not a great option, hearing myself say it

[21:04] *** kensanata joined
[21:07] *** sena_kun joined
[21:09] <codesections> Unrelatedly: both of these expressions make me happy, but for opposite reasons: 

[21:09] <codesections> m: say (21, 2).reduce(* * *)

[21:09] <camelia> rakudo-moar 2c5b54576: OUTPUT: ¬´42‚ê§¬ª

[21:09] <codesections> m: say (21, 2).reduce(* √ó *)

[21:09] <camelia> rakudo-moar 2c5b54576: OUTPUT: ¬´42‚ê§¬ª

[21:10] *** Altai-man left
[21:10] <brass> Second is a lot easier to visually parse imo

[21:11] <brass> m: my @a = |(1, 2, 3, 4) xx Inf; say @a[15]

[21:11] <camelia> rakudo-moar 2c5b54576: OUTPUT: ¬´4‚ê§¬ª

[21:11] <brass> :)

[21:11] <brass> I wasn't able to get it to work without the pipe

[21:11] <perryprog> Side note: knowing \LaTeX symbol completions (if your editor supports it) and knowing the shortcuts for typing those symbols (like œÄ, ‚àë, ‚àû, etc.)  is really nice.

[21:12] <perryprog> macOS specifically has very, very nice support for entering notations‚Äîthe option key in input fields basically switches to a symbol keyboard.

[21:12] <perryprog> Much easier than alt codes, anyway.

[21:13] <perryprog> Although compose keys are also always great.

[21:13] <brass> codesections: would that be the proper way to create an infinite list, or does the pipe do weird things?

[21:14] <codesections> brass: Oops that's my bad; either `|` or `flat` is needed but I forgot and left it out

[21:15] <codesections> perryprog: yeah, I've always used the compose key.  You like LaTeX symbols better?

[21:16] <Xliff_> m: my %a = ( a=> 1, b => 2, c => 3); my %b = %a; %b{3} = 42; my %c = %a; say %a eqv %b; say %a !eqv %c;

[21:16] <camelia> rakudo-moar 2c5b54576: OUTPUT: ¬´False‚ê§False‚ê§¬ª

[21:18] <perryprog> Well, most of my usages are covered by the US layout: https://i.imghurr.com/e/B5INoiQBkY.png https://i.imghurr.com/e/VHc7VcqBGg.png

[21:19] <perryprog> Then occasionally I use the ABC layout which lets me type macrons in a postfix notation (I can do "a Option+Shift+a" to get ƒÅ), but otherwise that's mainly it.

[21:20] <perryprog> Emacs also has quail which let's you define rules where you can type something like "a=" and get "ƒÅ", which is equally helpful.

[21:22] <brass> Is there a way to do something like $a, $b += 4, 5

[21:22] <brass> So that it results in something like $a += 4; $b += 5

[21:22] <codesections> brass: ¬´+¬ª

[21:23] <brass> I'm never sure how to point the arrows when using that operator

[21:23] <codesections> er, += not +.

[21:24] <codesections> if you have the same length lists on both sides, it doesn't matter

[21:25] <brass> Otherwise you point them towards the shorter list?

[21:26] <codesections> perryprog: interesting.  I hadn't heard of quail.  Is the main advantage over abbrev mode that it doesn't expect a space at the end?

[21:26] <brass> Always seems a little confusing when I read the docs, like what does the direction represent

[21:30] <samcv> .tell patrickb no I don't use Raku at work, sadly

[21:30] <tellable6> samcv, I'll pass your message to patrickb

[21:34] <perryprog> codesections, interestingly it's really designed for multilingual text input (and is really good at that), but its extensibility is very good so compose-key like snippets are very easy to do.

[21:34] <perryprog> And you can have that be per mode or per file and all that jazz

[21:35] *** kensanata left
[21:38] <codesections> brass: the list on the big side of the arrows is whichever list has the same number of elements that you want in your result 

[21:38] <codesections> m: (1, 3, 5) ¬ª+¬ª (10, 0)

[21:38] <camelia> rakudo-moar 2c5b54576: OUTPUT: ¬´Potential difficulties:‚ê§    Useless use of ¬ª+¬ª in sink context‚ê§    at <tmp>:1‚ê§    ------> 3(1, 3, 5) 7‚èè5¬ª+¬ª (10, 0)‚ê§¬ª

[21:38] <codesections> m: say (1, 3, 5) ¬ª+¬ª (10, 0)

[21:38] <camelia> rakudo-moar 2c5b54576: OUTPUT: ¬´(11 3 15)‚ê§¬ª

[21:39] <brass> Ooooooh okay

[21:39] <codesections> three elements in the output

[21:39] <codesections> m: say (1, 3, 5) ¬´+¬´ (10, 0)

[21:39] <camelia> rakudo-moar 2c5b54576: OUTPUT: ¬´(11 3)‚ê§¬ª

[21:51] *** BenGoldberg joined
[21:54] <Geth> ¬¶ doc/ISSUE-3706: 61617635ef | (Moray Jones)++ | doc/Language/rb-nutshell.pod6

[21:54] <Geth> ¬¶ doc/ISSUE-3706: Changes BUILD to TWEAK in code example

[21:54] <Geth> ¬¶ doc/ISSUE-3706: 

[21:54] <Geth> ¬¶ doc/ISSUE-3706: Code example now works using TWEAK instead of BUILD.

[21:54] <Geth> ¬¶ doc/ISSUE-3706: 

[21:54] <Geth> ¬¶ doc/ISSUE-3706: Changes description to mentions TWEAK instead of BUILD too.

[21:54] <Geth> ¬¶ doc/ISSUE-3706: review: https://github.com/Raku/doc/commit/61617635ef

[21:54] <Geth> ¬¶ doc/ISSUE-3706: a88a2256b4 | (Moray Jones)++ | doc/Language/rb-nutshell.pod6

[21:54] <Geth> ¬¶ doc/ISSUE-3706: Changes twigil to public

[21:54] <Geth> ¬¶ doc/ISSUE-3706: 

[21:54] <Geth> ¬¶ doc/ISSUE-3706: There is no reason in this example to show a private attribute.

[21:54] <Geth> ¬¶ doc/ISSUE-3706: 

[21:55] <Geth> ¬¶ doc/ISSUE-3706: This clarifies that TWEAK can use $! to access attributes and

[21:55] <Geth> ¬¶ doc/ISSUE-3706: that it's not a typo, without going into an explanation at

[21:55] <Geth> ¬¶ doc/ISSUE-3706: this stage.

[21:55] <Geth> ¬¶ doc/ISSUE-3706: review: https://github.com/Raku/doc/commit/a88a2256b4

[21:58] *** Tirifto left
[21:59] *** finsternis left
[22:00] *** ufobat_ left
[22:00] *** ensamvarg3 joined
[22:00] *** ensamvarg3 left
[22:01] <brass> I just realized I read the AoC question wrong, which would be why my answer didn't work at all B^)

[22:01] *** ensamvarg3 joined
[22:01] <brass> Pain

[22:03] <codesections> haha, me too.  I was summing the trees in part 2 instead of multiplying.  Same for you?

[22:03] *** xinming left
[22:03] <Geth> ¬¶ doc: MorayJ++ created pull request #3722: Issue 3706

[22:03] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3722

[22:04] *** xinming joined
[22:04] <brass> I thought it the toboggan had to move 1x1, 4x1, 5x1, etc. in a repeating pattern down the hill in one run 

[22:04] <codesections> ahh

[22:05] <brass> I even had a really cool solution :p 

[22:05] <tony-o> .tell patrickb i'm interested in it, for sure.  ot

[22:05] <tellable6> tony-o, I'll pass your message to patrickb

[22:06] <tony-o> .tell patrickb it's been kind of a pain in my side, though.  i have a working prototype and the code to run it.  i need to figure out how to make it work in zef.

[22:06] <tellable6> tony-o, I'll pass your message to patrickb

[22:06] <tony-o> .tell patrickb in response to your ecosystem inquiry.

[22:06] <tellable6> tony-o, I'll pass your message to patrickb

[22:08] <Geth> ¬¶ doc: wambash++ created pull request #3723: Update haskell-to-p6.pod6 ‚Äî section Fold

[22:08] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3723

[22:21] *** stoned75 left
[22:22] *** nige left
[22:25] *** BenGoldberg left
[22:44] *** morayj left
[22:48] *** gordonfish left
[22:48] *** gordonfish joined
[22:55] *** sena_kun left
[23:00] *** oneeggeach joined
[23:00] *** oneeggeach left
[23:05] *** ab5tract left
[23:06] *** tejr left
[23:07] *** tejr joined
[23:15] *** Black_Ribbon joined
[23:18] *** mowcat joined
[23:21] *** mowcat left
[23:31] *** rindolf left
[23:38] *** ggoebel_ joined
[23:40] *** ggoebel left
