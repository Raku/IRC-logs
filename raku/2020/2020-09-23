[00:04] *** aborazmeh left
[00:25] *** mowcat joined
[00:37] *** guifa2 left
[00:44] *** hungrydonkey joined
[00:47] *** aborazmeh joined
[00:47] *** aborazmeh left
[00:47] *** aborazmeh joined
[00:47] *** squashable6 left
[01:15] *** molaf left
[01:16] * [Coke] yawns.

[01:27] *** molaf joined
[01:41] *** ex_nihilo joined
[01:44] *** leont left
[01:57] * guifa is thinking about making a psuedo app bundle in macOS just to give raku files their own icons

[02:14] *** zacts joined
[02:18] *** hungrydonkey left
[02:18] *** hungrydonkey joined
[02:20] *** perlbot_ joined
[02:20] *** hoelzro_ joined
[02:20] *** hungrydonkey left
[02:20] *** Altreus_ joined
[02:20] *** hungrydonkey joined
[02:20] *** jcallen_ joined
[02:20] *** ssm_ joined
[02:21] *** yuplushi_ joined
[02:26] *** hungryd83 joined
[02:26] *** hungrydonkey left
[02:27] *** hungrydonkey joined
[02:27] *** hungryd83 left
[02:27] *** yuplushi left
[02:27] *** CIAvash left
[02:27] *** kiti_nomad[m] left
[02:27] *** moon-child left
[02:27] *** ssm left
[02:27] *** perlbot left
[02:27] *** hoelzro left
[02:27] *** Altreus left
[02:27] *** jcallen left
[02:27] *** perlbot_ is now known as perlbot

[02:28] *** hungryd80 joined
[02:28] *** hungrydonkey left
[02:30] *** hungryd80 left
[02:31] *** hungrydonkey joined
[02:32] *** hungryd68 joined
[02:32] *** hungrydonkey left
[02:33] *** hungryd68 left
[02:33] *** hungrydonkey joined
[02:33] *** kiti_nomad[m] joined
[02:33] *** CIAvash joined
[02:33] *** moon-child joined
[02:34] *** kiti_nomad[m] left
[02:34] *** kiti_nomad[m] joined
[02:34] *** hungrydonkey left
[02:34] *** hungrydonkey joined
[02:37] *** stanrifkin joined
[02:38] <stanrifkin> what does zef stand for? Is it a abbreviation?

[02:42] *** hungrydonkey left
[02:43] <guifa> stanrifkin:  I don‚Äôt believe it has any meaning, it‚Äôs just short, pronounceable, and not taken :-)

[02:44] <stanrifkin> guifa: OK

[02:52] <guifa> but who knows, maybe ugexe is just from NC originally and used to fly out of the ZEF airport all the time ha

[03:08] *** Kaiepi joined
[03:15] *** vrurg left
[03:20] *** Sgeo left
[03:20] *** Sgeo joined
[03:42] *** guifa2 joined
[03:52] <rypervenche> I'm trying to figure out how to take a bag and get the weights in descending order and then map the key and values to variables, but I'm having trouble figuring it out. I've got: $bag.antipairs.sort(-*.key).map: ->  but I'm not sure what signature will get me what I want. I think I need to decont it, but can't find the right combination.

[03:56] *** mowcat left
[03:59] *** zacts left
[04:09] <parabolize> rypervenche: I'm not sure what you want the variables to be. maybe this?

[04:09] <parabolize> :m say [ bag( < a a a b b c c c c >).pairs.sort(-*.values) ]

[04:14] <rypervenche> So I got it to work with 2 for loops, but I feel like it could be done in a single map somehow. I'm trying to get the (sorted) weight and value into variables to be used later: https://gist.github.com/rypervenche/1d3e0a5d491bfe9a7d3c62c242899bce

[04:28] <guifa2> can I get some sample data to run with that?

[04:31] <rypervenche> It's from a larger script with a few different data sources. I'll come up with a small example tomorrow to simply things.

[04:33] <guifa2> m: my $bag = Bag.new(<a d a b a c a d a a a b b b b b c a c c d d d>); for $bag.pairs.sort(-*.value) -> (:$key, :$value) { say "$key ($value)" }

[04:33] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´a (8)‚ê§b (6)‚ê§d (5)‚ê§c (4)‚ê§¬ª

[04:34] <guifa2> That should work

[04:34] <guifa2> and if you prefer different variable names

[04:34] <guifa2> -> ( :key($new-key-name), :value($new-value-name) )

[04:38] *** cpan-raku left
[04:39] *** cpan-raku joined
[04:39] *** cpan-raku left
[04:39] *** cpan-raku joined
[04:57] *** aborazmeh left
[05:07] *** stanrifkin left
[05:13] *** xinming left
[05:13] *** xinming joined
[05:34] *** sno left
[05:42] *** bocaneri joined
[05:44] *** aluaces joined
[05:44] *** sftp left
[05:44] *** sftp joined
[05:51] *** bocaneri left
[05:51] *** bocaneri joined
[05:51] *** bocaneri left
[05:54] *** ex_nihilo_ joined
[05:55] *** ex_nihilo left
[05:56] *** molaf left
[05:57] *** ex_nihilo__ joined
[05:58] *** ex_nihilo__ left
[06:00] *** jmcgnh left
[06:00] *** ex_nihilo_ left
[06:02] *** ufobat joined
[06:02] *** sno joined
[06:04] *** jmerelo joined
[06:04] <jmerelo> releasable6:status

[06:04] <releasable6> jmerelo, Next release will happen when it's ready. GitHub is down. There are no known blockers. Changelog for this release was not started yet

[06:04] <releasable6> jmerelo, Sorry kid, that's not my department.

[06:05] *** jmcgnh joined
[06:11] *** stoned75 joined
[06:19] *** bocaneri joined
[06:28] *** aborazmeh joined
[06:28] *** aborazmeh left
[06:28] *** aborazmeh joined
[06:29] *** aluaces left
[06:55] *** Sgeo left
[06:59] *** domidumont joined
[07:00] *** samcv left
[07:05] *** sena_kun joined
[07:10] *** aluaces joined
[07:16] *** kensanata joined
[07:19] *** skids left
[07:32] *** aluaces left
[07:38] *** dakkar joined
[07:52] *** rindolf joined
[07:57] *** agentzh left
[07:58] *** agentzh joined
[07:58] *** agentzh left
[07:58] *** agentzh joined
[08:17] *** andrzejku joined
[08:22] *** Altai-man joined
[08:25] *** sena_kun left
[08:55] *** BenGoldberg left
[08:58] *** sno left
[09:00] *** sno joined
[09:02] *** Altreus_ is now known as Altreus

[09:07] *** stoned75 left
[09:13] *** stoned75 joined
[09:31] *** aluaces joined
[09:59] *** k-man left
[10:00] *** abraxxa left
[10:00] *** abraxxa joined
[10:04] *** abraxxa left
[10:05] *** abraxxa joined
[10:09] *** domidumont left
[10:19] *** Black_Ribbon left
[10:20] *** sno left
[10:26] *** k-man joined
[10:35] *** MasterDuke left
[10:37] *** MasterDuke joined
[10:46] *** sno joined
[10:53] *** leont joined
[10:55] <raku-bridge> <frost> I want to know the difference of multi { } and multi sub { }, or are they the same?

[10:57] *** andrzejku left
[10:58] *** timlegge left
[10:58] <Altai-man> They are the same, multi without anything default to multi sub. Be careful with `multi method` in a class, there `method` has to be specified for this reason.

[10:59] <Altai-man> s/default/defaults/

[11:02] *** Benett left
[11:02] *** Benett joined
[11:18] *** MasterDuke left
[11:21] *** stoned75 left
[11:30] *** MasterDuke joined
[11:45] *** BenGoldberg joined
[12:13] *** smotchkkiss joined
[12:18] *** domidumont joined
[12:19] *** BenGoldberg left
[12:22] *** BenGoldberg joined
[12:23] *** sena_kun joined
[12:25] *** Altai-man left
[12:27] *** jmerelo left
[12:29] *** ufobat_ joined
[12:32] *** ufobat left
[12:35] *** andrzejku joined
[12:48] *** ensamvarg3 joined
[13:04] *** pierrot_ is now known as pierrot

[13:05] *** pierrot left
[13:05] *** pierrot joined
[13:05] <raku-bridge> <frost> Thanks üòò

[13:09] <rypervenche> guifa2: Thanks! That's exactly what I was looking for. I know you've shown me the syntax before, but I couldn't remember it or find it anywhere. :P

[13:25] <JJAtria[m]> Is there a Raku equivalent to weak refs? I'm thinking of how they are used in eg. Perl to avoid memory leaks. Or is that something that doesn't translate to Raku?

[13:30] *** skids joined
[13:32] *** domidumont left
[13:38] <moritz> Raku uses a "proper" garbage collector (not ref counting), so you don't need to avoid circular data structures

[13:39] <moritz> there are some *very* few cases where you could still use weak references; I don#t think we have a good solution for that yet

[13:49] <andrzejku> hey guys

[13:50] <andrzejku> do you know how raku gaming stands now?

[13:50] <guifa> I don‚Äôt think anyone has done any games wtih it except for a few command line things

[13:51] <MasterDuke> timotimo has done a demo or two with the SDL bindings

[13:51] <andrzejku> yes timotimo was done a game

[13:51] <andrzejku> and tadzik 

[13:55] * guifa made a Rakudo.js loading status image

[13:55] <guifa> https://github.com/alabamenhu/IntlX/blob/master/resources/editor/imgs/camelia-animated.png

[13:56] <JJAtria[m]> moritz: Thanks!

[14:03] *** Sgeo joined
[14:08] *** zacts joined
[14:19] *** aluaces left
[14:33] <[Coke]> (loading status image) owmyeyes. :)

[14:33] <tellable6> 2020-09-23T03:16:51Z #raku-dev <Kaiepi> [Coke], can i talk to you next time you're on?

[14:40] <[Coke]> Kaiepi: you can try, but my time on IRC is sporadic.

[14:40] <[Coke]> Kaiepi: what's up?

[14:42] *** zacts left
[14:44] *** ensamvarg3 left
[14:49] <guifa> [Coke]: she goes solid all colors when it‚Äôs loaded.  I got bored last night lol

[14:51] <[Coke]> guifa: :)

[14:52] *** ensamvarg195 left
[14:52] <guifa> is there a way to pass args to a module loaded with -M ?

[14:52] <Altreus> It looks like when I press the cycle colours button in fractint

[14:53] <Altreus> in p5 it was -MModule=import,list

[14:53] <Altreus> perhaps this?

[14:54] <guifa> ah hmm I‚Äôll try that

[14:56] *** defaultxr left
[14:57] <guifa> :-( no dice

[14:58] *** ensamvarg3 joined
[14:58] *** zacts joined
[14:58] *** ensamvarg3 left
[14:59] *** defaultxr joined
[15:02] *** MilkmanDan left
[15:03] *** MilkmanDan joined
[15:08] *** hungrydonkey joined
[15:16] *** zacts_ joined
[15:18] *** zacts left
[15:18] *** hungrydonkey left
[15:18] *** hungryd65 joined
[15:21] *** hungryd65 left
[15:21] *** hungrydonkey joined
[15:22] *** zacts_ left
[15:22] *** hungrydonkey left
[15:22] *** zacts joined
[15:35] * [Coke] wonders why hacktoberfest repo is not using artistic.

[15:36] *** afresh1 joined
[15:36] *** sftp left
[15:37] *** sftp joined
[15:37] *** dataangel left
[15:43] *** ufobat_ left
[15:51] *** smotchkkiss left
[16:22] *** BenGoldberg left
[16:22] *** Altai-man joined
[16:24] *** kensanata left
[16:25] *** sena_kun left
[16:32] *** aluaces joined
[16:38] *** lucasb joined
[16:39] *** dakkar left
[16:45] *** andrzejku left
[16:47] *** gibranrosa joined
[16:47] <gibranrosa> p6: say 3;

[16:47] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´3‚ê§¬ª

[16:47] <gibranrosa> m: say 3;

[16:47] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´3‚ê§¬ª

[16:47] <gibranrosa> m: say now - INIT now

[16:47] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´0.00110039‚ê§¬ª

[16:52] *** aluaces left
[16:57] *** pduh joined
[16:57] *** approaching236 joined
[17:00] <pduh> list

[17:01] *** pduh left
[17:09] *** zacts left
[17:20] *** andrzejku joined
[17:22] *** aluaces joined
[17:32] <codesections>  

[17:36] <[Coke]> ‚ÄÜ

[17:37] <[Coke]> m: "".uninames.say

[17:37] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´()‚ê§¬ª

[17:37] <[Coke]> :P

[17:38] <codesections> m: say '';

[17:38] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´‚ê§¬ª

[17:38] <[Coke]> I had used a unicode space in my blank send, but something got lost in translation. :)

[17:51] *** molaf joined
[17:52] *** andrzejku left
[18:06] *** molaf left
[18:06] *** pduh joined
[18:06] *** pduh left
[18:07] *** peterduh joined
[18:09] *** peterduh left
[18:24] <Xliff> andrzejku: The pieces are there to make some really nice games in Raku.

[18:24] <tellable6> Xliff, I'll pass your message to andrzejku

[18:25] <Xliff> andrzejku: However Raku's performance issues (particularly compiling) are offputting to most game developers.

[18:25] <tellable6> Xliff, I'll pass your message to andrzejku

[18:25] <Xliff> I actually wrote a generic card deck class a while ago. Never took the time to make a formal game out of it.

[18:26] <Xliff> andrzejku: I actually wrote a generic card deck class a while ago. Never took the time to make a formal game out of it.

[18:26] <tellable6> Xliff, I'll pass your message to andrzejku

[18:28] *** Black_Ribbon joined
[18:36] *** andrzejku joined
[18:49] *** Possum joined
[18:53] *** timlegge joined
[19:04] *** riceandbeans left
[19:13] *** BenGoldberg joined
[19:15] *** andrzejku left
[19:19] *** |oLa| joined
[19:26] *** lucasb left
[19:35] *** rindolf left
[19:46] *** BenGoldberg left
[19:57] *** molaf joined
[20:20] *** lucasb joined
[20:22] *** mowcat joined
[20:23] *** sena_kun joined
[20:25] *** Altai-man left
[20:49] *** rjeli left
[20:49] *** Grinnz left
[20:49] *** tbrowder left
[20:50] *** PotatoGim left
[20:50] *** timeless left
[20:50] *** kawaii left
[20:50] *** dog_star left
[20:50] *** jhill left
[20:50] *** caasih left
[20:50] *** mithaldu_ left
[20:51] *** rjeli joined
[20:51] *** tbrowder joined
[20:51] *** dylanwh left
[20:51] *** mrsolo left
[20:51] *** skaji_ left
[20:51] *** Grinnz joined
[20:52] *** dog_star joined
[20:52] *** dylanwh joined
[20:52] *** caasih joined
[20:52] *** kawaii joined
[20:52] *** timeless joined
[20:52] *** BuildTheRobots joined
[20:53] *** mrsolo joined
[20:53] *** mithaldu_ joined
[20:53] *** PotatoGim joined
[20:54] *** jhill joined
[20:54] *** skaji_ joined
[20:59] *** sena_kun left
[21:07] *** smotchkkiss joined
[21:15] <rypervenche> Is it possible to use gather/take with a map? For example, I'm looping through some lines in an array and only taking items if they match a certain criteria and then assigning all of that to a variable. I've got it working with a for loop right, but haven't been able to figure out how to do it with a map (so I can hyper it). I'll give an example of the code so it makes more sense. 

[21:17] <MasterDuke>  you probably want a grep?

[21:19] <timotimo> you can also hyper a for, it has to be a "hyper for", though

[21:19] <rypervenche> The portion of code in question: https://gist.github.com/rypervenche/326be5421039b0900bb6ceeb38fde7af

[21:20] <rypervenche> I converted it to a map with a hyper, but I couldn't find any place to put a gather.

[21:20] <rypervenche> hyper for :O

[21:23] <rypervenche> Hmm, I can't change batch and degree though when using "hyper for", can I?

[21:23] <timotimo> you can, you'll need to "hyper for @blah.hyper(...) { ... }"

[21:24] <rypervenche> Ahhh

[21:24] *** dudz left
[21:33] *** |oLa| left
[21:44] *** aluaces left
[21:49] <rypervenche> Hmmm, gather still doesn't work when I use hyper for. I get "Died at: take without gather"

[21:50] <timotimo> oh

[21:51] <timotimo> i should have pointed this out before

[21:51] <timotimo> with gather/take where you're take-ing from hypered workers, you would be accessing an array concurrently

[21:51] <timotimo> that's a big no-no

[21:52] <timotimo> you can return an array from each map or for block and slurp them all together afterwards, or send values to a Channel

[21:52] <Xliff> You'd need a Lock

[21:52] <Xliff> Channel would be better, I suspect

[21:54] *** smotchkkiss left
[21:55] *** SmokeMachine left
[21:56] *** SmokeMachine joined
[21:56] *** cpan-raku left
[21:56] *** cpan-raku joined
[21:56] *** cpan-raku left
[21:56] *** cpan-raku joined
[21:57] <rypervenche> Hmmm, ok. I'll poke around the documentation to see if I can figure that out. If not, it's not the end of the world. Just wanted to shave off some time from this little script.

[22:00] *** abraxxa left
[22:02] *** abraxxa joined
[22:03] *** gibranrosa left
[22:08] <Xliff> Who is handling raku support for Repl.it?

[22:21] <Xliff> rypervenche: Any luck?

[22:25] <rypervenche> Haven't started yet. I'll have to reorganize it a bit in my test to work with promises.

[22:26] * guifa had to do an assignment for his CS class in Java and it was ugly

[22:26] <Xliff> You shouldn't need any promises. Just a channel.

[22:26] <Xliff> See my comment on your gist.

[22:26] <guifa> In Raku I could have done it in like five 20-char max lines

[22:27] <unclechu> hey, is there any way to define some text for `--help` with line breaks? smth like #|¬´‚Ä¶¬ª before MAIN function would associate it with particular multi-sub pattern and would remove any line breaks

[22:28] <unclechu> I want to add some generic description

[22:28] <Xliff> unclechu: Write a sub USAGE { } that adds to $*USAGE var

[22:30] *** lucasb left
[22:30] <Xliff> unclechu: See here https://github.com/Xliff/p6-GtkPlus/blob/master/examples/pack_example.pl6

[22:31] <unclechu> Xliff: thanks!

[22:33] <Xliff> unclechu: Live sample -- https://repl.it/@Xliff/PersonalModernRobots#main.raku

[22:34] <rypervenche> Xliff: Oooh, I'll try that out.

[22:34] <Xliff> unclechu: Check the repl.it again. It's cleaner

[22:34] <unclechu> Xliff: why does example from the first link uses `nqp` in order to concatenate string with `$*USAGE`?

[22:34] <Xliff> Old code

[22:35] <Xliff> Back when I originally wrote this, that was the only way to access $*USAGE. It's unnecessary, now

[22:35] <unclechu> Xliff: okay, i just realized i don‚Äôt need nqp there

[22:36] <Xliff> Oops! Sure don't. ;)

[22:36] <rypervenche> Xliff: Out of curiosity, couldn't I replace (my $s = $c.Supply).tap with $c.Supply.tap ?

[22:37] <rypervenche> I don't see you using the $s anywhere else in the gist.

[22:37] <Xliff> rypervenche: I was wondering about that. The only reason I assign to $s is to make sure the Supply object doesn't fall out of scope.

[22:37] <Xliff> That might not be necessary

[22:38] *** BenGoldberg joined
[22:41] *** stanrifkin joined
[22:42] <stanrifkin> with what algorithm is is-prime implemented in? AKS-test or Fermat primality test?

[22:43] <Xliff> stanrifkin: Miller-Rabin according to the docs

[22:44] <stanrifkin> i didn't find it in the docs

[22:44] <Xliff> https://docs.raku.org/type/Int#routine_is-prime

[22:45] <guifa> I swear I remember Damian doing a whole conference talk on it but I can‚Äôt seem to find it

[22:46] <guifa> but maybe it was jnthn or someone else?

[22:46] <stanrifkin> i watched the talk, but he mentioned different methods

[22:46] <guifa> oh yeah

[22:46] <guifa> https://www.youtube.com/watch?v=Nq2HkAYbG5o

[22:46] <guifa> ah I thought I remmeber him saying that one is the one that‚Äôs used in Raku

[22:47] <stanrifkin> guifa: ok, than i missed it

[22:47] <guifa> stanrifkin: I could be wrong though.  It‚Äôs been a while since I watched the video

[22:48] <timotimo> https://wakelift.de/p/64fec54c-8b69-4dd1-8405-a4823d13ddbf/ - who wants to proofread my blog post

[22:50] *** timeless left
[22:50] *** dog_star left
[22:50] *** rjeli left
[22:50] *** Grinnz left
[22:50] *** dylanwh left
[22:50] *** skaji_ left
[22:50] *** SmokeMachine left
[22:50] *** spycrab0 left
[22:50] *** mrsolo left
[22:50] *** pnu__ left
[22:51] *** caasih left
[22:51] *** PotatoGim left
[22:51] *** BuildTheRobots left
[22:51] *** tbrowder left
[22:52] *** SmokeMachine joined
[22:52] *** peteretep left
[22:52] *** dylanwh joined
[22:52] *** rjeli joined
[22:53] *** timeless joined
[22:53] *** skaji_ joined
[22:54] *** Celelibi left
[22:54] *** Grinnz joined
[22:54] *** peteretep joined
[22:54] *** pnu__ joined
[22:54] <stanrifkin> i don't understand the design choice with sub routine parentheses sub f(...) and sub f (...). i think that's another rule to remember and always forget when someone comes to raku again.

[22:54] *** tbrowder joined
[22:55] *** caasih joined
[22:55] *** mrsolo joined
[22:55] *** dog_star joined
[22:55] *** spycrab0 joined
[22:57] *** PotatoGim joined
[22:57] *** BuildTheRobots joined
[22:58] *** rjeli left
[23:06] <AlexDaniel> stanrifkin: what's the alternative?

[23:06] *** Celelibi joined
[23:07] <stanrifkin> AlexDaniel: use a reference

[23:08] <AlexDaniel> stanrifkin: I'm talking about sub f(...) vs sub f (...)

[23:09] *** raku-bridge left
[23:09] *** raku-bridge joined
[23:09] *** raku-bridge left
[23:09] *** raku-bridge joined
[23:12] *** rjeli joined
[23:12] <stanrifkin> AlexDaniel: sub f($a, $b, $c) are three arguments and sub f ($a, $b, $c) is one argument i. e. a list with my understanding... 

[23:13] <AlexDaniel> stanrifkin: yes, but what would be the alternative design choice?

[23:14] <stanrifkin> AlexDaniel: in perl i used sub f(\@arr) for that... maybe than something like sub f(\($a, $b, $c)) but maybe that's more irritating

[23:15] <AlexDaniel> ahh

[23:15] <stanrifkin> :)

[23:17] <AlexDaniel> actually would've been interesting to have no list type, just mutable arrays. Then () syntax would not be there, so f (42, 43) could be a function call

[23:18] <AlexDaniel> edgy, I know, but it's a possibility :)

[23:20] <AlexDaniel> not the most wonderful possibility though :P

[23:21] <AlexDaniel> stanrifkin: there was a discussion some years ago about the preferred style for sub declaration

[23:22] <AlexDaniel> stanrifkin: actually, rereading this conversation, I'm not entirely sure what we're talking about exactly :)

[23:22] * Grinnz thinks its better than spaces having no syntactical significance

[23:22] <AlexDaniel> stanrifkin: thing is, `sub foo () {}` is actually valid

[23:23] <AlexDaniel> so you can define your subs this way, but you cannot use the same syntax to call them

[23:24] <Grinnz> in perl say (something)[0] attempts to run say(something) and then has a syntax error, because that makes sense :P

[23:24] <AlexDaniel> a lot of people prefer the space for some reason, but IIRC even more people argued that the preferred style should be without a space, this way I guess you're less likely to assume that it'd be valid to call your subs this way

[23:25] <Grinnz> i very much prefer requiring no space between symbol and opening parentheses for calls

[23:25] <Grinnz> because that solves taht ambiguity in particular

[23:25] <Grinnz> in raku it's more complicated since it actually means something different

[23:30] <timotimo> there's always slang::tuxic to do the space thing differently

[23:33] <stanrifkin> AlexDaniel: I missed the point that defining the sub the space is valid. OK. I get used to that.  

[23:33] *** guifa left
[23:34] *** guifa joined
[23:34] <AlexDaniel> timotimo: and how is that useful in practice?

[23:35] <timotimo> dunno, i didn't read enough of the discussion i guess

[23:35] <AlexDaniel> timotimo: it's not about the discussion, but about the whole idea

[23:35] <AlexDaniel> of having modules that introduce slight syntax changes

[23:36] <timotimo> if you don't like a (1, 2) being one argument, use slang::tuxic and it no longer is that way, hooray

[23:37] <AlexDaniel> and then say you go to work, and what happens? You convince all your colleagues to add `use Slang::Tuxic` to all of the files?

[23:37] <AlexDaniel> or you don't, and then you'd probably be writing it the wrong way by acciddent

[23:38] <AlexDaniel> Slang::Tuxic is a party trick, that's it

[23:39] <timotimo> hm, does tuxic break when you use it inside curlies?

[23:40] <AlexDaniel> slangs are fantastic for relatively big features, say inline SQL or anything like that. But suggesting to use them for minor syntax differences is just out of touch

[23:42] <AlexDaniel> because what we have here is actually a trap in the language. If we had Raku::Critic I guess it would've been easy to add a check for that, but it seems like we're missing an alternative also

[23:42] <AlexDaniel> for example, say you write `foo (1, 2, 3)`. Then Raku::Critic could've warned you about it because maybe you didn't mean it

[23:43] <AlexDaniel> but‚Ä¶ what would it say?

[23:43] *** pduh joined
[23:43] <AlexDaniel> like how can you write explicitly that you meant it. foo((1, 2, 3)) ? Ew.

[23:44] <timotimo> m: sub foo(*@x) { dd @x }; foo\ (1, 2, 3)

[23:44] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´Array element = [1, 2, 3]‚ê§¬ª

[23:44] <timotimo> m: sub foo(*@x) { dd @x }; foo (1, 2, 3)

[23:44] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´Array element = [1, 2, 3]‚ê§¬ª

[23:44] <timotimo> m: sub foo(*@x) { dd @x }; foo(1, 2, 3)

[23:44] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´Array element = [1, 2, 3]‚ê§¬ª

[23:44] <timotimo> ah, right

[23:44] <AlexDaniel> yeah, that's the opposite I think :)

[23:44] <timotimo> m: sub foo(**@x) { dd @x }; foo (1, 2, 3); foo\ (1, 2, 3); foo(1, 2, 3); foo((1, 2, 3))

[23:44] <camelia> rakudo-moar 85847d2f1: OUTPUT: ¬´Array element = [(1, 2, 3),]‚ê§Array element = [1, 2, 3]‚ê§Array element = [1, 2, 3]‚ê§Array element = [(1, 2, 3),]‚ê§¬ª

[23:44] <timotimo> right, it is

[23:46] <AlexDaniel> not enough ASCII parens, I guess

[23:46] <AlexDaniel> or maybe an optional colon could've done it

[23:47] <AlexDaniel> foo: (1, 2, 3)

[23:47] <AlexDaniel> sure, that's a label, but I don't know why labels need to have this neat syntax :

[23:47] <AlexDaniel> :)

[23:48] *** pduh left
[23:49] *** leont left
[23:50] *** peterduh joined
[23:52] <timotimo> why did labels get the colon, we may never know

[23:59] <rypervenche> Xliff: Interestingly, when I try what you sent, it no longer sees my variable... Updated https://gist.github.com/rypervenche/326be5421039b0900bb6ceeb38fde7af

