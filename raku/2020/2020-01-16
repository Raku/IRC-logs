[00:02] *** wamba left
[00:05] *** Doc_Holliwood joined
[00:14] <Kaiepi> greppable6, supply {

[00:14] <greppable6> Kaiepi, 310 lines, 52 modules: https://gist.github.com/ecd50b6769bc85150aee26c760e2681e

[00:18] *** skaji_ left
[00:22] *** skaji_ joined
[00:28] *** epony left
[00:32] *** epony joined
[00:40] *** sena_kun left
[00:41] *** NODE left
[00:43] *** kawaii left
[00:43] *** NODE joined
[00:45] *** NODE left
[00:46] *** zostay left
[00:46] *** NODE joined
[00:47] *** Hotbees left
[00:47] *** no-n left
[00:49] *** Grinnz left
[00:49] *** tbrowder left
[00:55] *** sena_kun joined
[01:04] *** skaji_ left
[01:06] *** wildtrees left
[01:24] *** awwaiid is now known as awwaiid2

[01:24] *** Tirifto left
[01:29] *** ToddAndMargo joined
[01:31] <ToddAndMargo> I can not figure out the syntax to configure a value inside a hash;  sort of like $h = ( Str "A" => "a", ... ).  Also is "Boxing" the correct term for this?

[01:32] <guifa2> Do you want all keys to be a string?

[01:33] <guifa2> lizmat: Carp is realized (it's not the prettiest of code but hey, it's a start): https://github.com/alabamenhu/Carp

[01:35] <ToddAndMargo> Str only in the examples.  I what to be able to duplicate thigns like `my uint $i` and `my Str $s` and do on and so forth

[01:41] <guifa2> So hashes by default only contain Str as keys, you have to set them up specially to prevent it, e.g.

[01:41] <guifa2> my ValueType %hash{KeyType} = …

[01:45] <guifa2> I don't think you can actually store uints in positionals, etc, they'll be upgraded to Ints

[01:48] *** tbrowder joined
[01:50] <ToddAndMargo> Okay, that makes sense.  I confine only confine the entire hash.  And at the present I can only confine as a Str.   my int %h = A => 123===SORRY!=== Error while compiling:native value types for hashes not yet implemented. Sorry.

[01:51] <ToddAndMargo> Thank you!  Hashed are my favorite varliable.

[02:01] *** tbrowder left
[02:12] *** awwaiid joined
[02:30] *** cpan-raku left
[02:31] <guifa2> (also I love how github lets you create social media preview images)

[02:31] *** cpan-raku joined
[02:31] *** cpan-raku left
[02:31] *** cpan-raku joined
[02:41] *** sena_kun left
[02:44] *** awwaiid2 left
[02:56] *** sena_kun joined
[03:19] *** Kaiepi left
[03:24] *** ToddAndMargo left
[03:29] *** Kaiepi joined
[04:04] *** skaji_ joined
[04:18] *** Grinnz joined
[04:19] *** skaji_ left
[04:33] *** Grinnz left
[04:40] *** Grinnz joined
[04:41] *** sena_kun left
[04:42] *** lostinfog left
[04:46] *** Grinnz left
[04:56] *** sena_kun joined
[04:56] *** Doc_Holliwood left
[05:54] *** llfourn joined
[06:03] *** moon-child left
[06:04] *** moon-child joined
[06:09] *** Yary joined
[06:10] <Yary> p6: my uint $no = 2**63; say $no

[06:10] <camelia> rakudo-moar ada7c3654: OUTPUT: «-9223372036854775808␤»

[06:11] <Yary> Is that  uint showing as negative a known bug or something to file?

[06:20] *** guifa2 left
[06:21] <Yary> https://github.com/rakudo/rakudo/issues/3429

[06:22] *** stoned75 joined
[06:22] *** Yary left
[06:30] *** llfourn left
[06:41] *** sena_kun left
[06:48] *** zostay joined
[06:50] *** Grinnz joined
[06:51] *** no-n joined
[06:53] *** xinming joined
[06:53] *** xinming left
[06:54] *** xinming joined
[06:57] *** sena_kun joined
[07:00] *** stoned75 left
[07:05] *** tbrowder joined
[07:06] *** skaji_ joined
[07:09] *** sauvin joined
[07:09] *** sauvin left
[07:13] *** xinming left
[07:15] *** sauvin joined
[07:16] *** domidumont joined
[07:22] *** kawaii joined
[07:37] *** xinming joined
[07:37] *** MasterDuke joined
[07:58] *** xinming left
[08:10] *** SmokeMachine joined
[08:13] *** xinming joined
[08:37] *** xinming left
[08:37] *** rindolf joined
[08:38] *** xinming joined
[08:42] *** sena_kun left
[08:57] *** wamba joined
[08:57] *** sena_kun joined
[08:58] *** Doc_Holliwood joined
[09:22] *** kensanata joined
[10:11] *** domidumont left
[10:15] *** llfourn joined
[10:20] *** llfourn left
[10:24] *** llfourn joined
[10:29] *** llfourn left
[10:41] *** sena_kun left
[10:56] *** sena_kun joined
[10:57] *** wamba left
[11:08] *** kensanata left
[11:19] *** wamba joined
[11:23] <xinming> SmokeMachine: ping

[11:23] <SmokeMachine> xinming: pong

[11:23] <xinming> SmokeMachine: https://github.com/FCO/Red/pull/404   This issue,   What test do you needed?

[11:23] <xinming> SmokeMachine: I've fixed the bug to use self.wildcard  instead of ?

[11:24] <SmokeMachine> xinming: I’ve seen… thanks!

[11:24] <xinming> Could you, please, add a test for json and jsonb?

[11:24] <xinming> Here, the json/jsonb tests, What do you mean? Do you mean the operations for json columns?

[11:26] <SmokeMachine> xinming: I meant a test with models using that types...

[11:30] <xinming> Ok.

[11:33] <xinming> SmokeMachine: BTW, yesterday, I got a question about the Pg Driver, With multi column primary key, Pg doesn't ahve last_inserted_rowid thing as sqlite does.

[11:33] <xinming> In postgres, We have INSERT INTO xxxx RETURNING id.

[11:34] <xinming> In this case, What is the correct way to fix it?

[11:34] <SmokeMachine> xinming: nd we use that (or at least we shold) on Pg...

[11:34] <xinming> I meet a bug which caused it works on SQLite, But doesn't work on PG.

[11:35] <SmokeMachine> xinming: hum… multi column pk? I haven’t tested that on Pg...

[11:35] <SmokeMachine> :(

[11:35] <xinming> SmokeMachine: As far as I checked, It doesn't seem to do thing like    INSERT INTO xxx RETURNING id;

[11:35] <xinming> I'll nopaste a test script

[11:37] <xinming> SmokeMachine: https://termbin.com/deeu

[11:38] <xinming> The script will point us to lib/MetamodelX/Red/Model.pm6 

[11:39] <xinming> $*RED-DB.execute(Red::AST::LastInsertedRow.new: model).row{|@ids}:kv        <---  And I saw that Red::AST::LastInsertedRow   returns empty on Pg Driver.

[11:40] <xinming> I SQLite Driver, Red::AST::LastInsertedRow will create sql which re-fetch the last inserted row. But in pg, We can't do this.

[11:40] <SmokeMachine> Pg shouldn’t use Red::AST::LastInsertedRow...

[11:41] <SmokeMachine> it should work like this:

[11:41] <xinming> SmokeMachine: yea, But as far as I checked, It uses LastInsertedRow, Which triggers the bug

[11:41] <SmokeMachine> https://www.irccloud.com/pastebin/EguoQiM3/

[11:43] <xinming> let me check.

[11:45] <SmokeMachine> xinming: if LastInsertedRow is being used, than, for some reason, the insert is not returning any data (not using `RETURNING *` maybe?). https://github.com/FCO/Red/blob/master/lib/MetamodelX/Red/Model.pm6#L447

[11:45] <xinming> SmokeMachine: I saw the $dat is returned

[11:46] <xinming> The problem is, with .attr-name  we get column name with - instead of _

[11:47] <xinming> SmokeMachine: the problem is, We use .attr-name to get the @ids, But returned data contains column with _  then, id-filter receives nothing.

[11:49] *** kensanata joined
[11:49] <xinming> the $data contains data, So,   $data{|@ids}:kv   returns nothing.

[11:50] <SmokeMachine> xinming: so, that’s a bug… should we use `.name` instead?

[11:50] <xinming> for example,  @ids returns  ['display-order', 'playlist-id'];    and  $data contains %( display_order => xxx, palylist_id => 111);

[11:50] <SmokeMachine> xinming: or maybe `.alias`?

[11:51] <xinming> SmokeMachine: I'll check then, Yesterday, I wanted to ask you about wether there is a unified mapping always returns underscored column name.

[11:51] <SmokeMachine> xinming: we need some tests with `-` on id names...

[11:51] <xinming> I checked the Column class

[11:52] <xinming> There is name-alias / column-name / name    which makes me confused which is the right one to use.

[11:53] <SmokeMachine> by column class you mean Red::Column or Red::Attr::Column?

[11:53] <xinming> Red::Column

[11:54] <SmokeMachine> on that case I’d use name-alias...

[11:54] <SmokeMachine> name is the name of the column...

[11:56] <SmokeMachine> name-alias is the alias name (on `SELECT bla AS ble` would be ble… but usualy it’s equal to the column name)

[11:57] <SmokeMachine> and I think column-name is name when I forgot name existed… (I should refactor that…) but i’m not sure...

[11:58] <SmokeMachine> I think it’s used only here (https://github.com/FCO/Red/blob/8b9f2124e47249c8984127e6a35c95b56205f80b/lib/MetamodelX/Red/Describable.pm6#L12) and it should be name

[12:00] <xinming> It seems, It's not single line fix.

[12:01] <xinming> When I try to use name or name-alias,  I got error which is   `one of the following keys aren't ids: display_order, playlist_id`

[12:01] *** libertas is now known as Guest38481

[12:01] *** Guest38481 left
[12:01] *** libertas_ is now known as libertas

[12:11] *** libertas_ joined
[12:14] *** Kaiepi left
[12:14] *** Kaiepi joined
[12:27] *** poohman_ joined
[12:27] <poohman_> m:say "test"

[12:27] <evalable6> poohman_, rakudo-moar 1331128f3: OUTPUT: «test␤»

[12:27] <poohman_> m:say "hello all"

[12:27] <evalable6> poohman_, rakudo-moar 1331128f3: OUTPUT: «hello all␤»

[12:28] *** wamba left
[12:28] *** poohman_ left
[12:33] *** poohman_ joined
[12:34] *** poohman_ left
[12:41] *** sena_kun left
[12:43] <Poohman> m: @a = [1,2,3,4,5,6];@a.map(*.say)

[12:43] <camelia> rakudo-moar 07dce515f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '@a' is not declared␤at <tmp>:1␤------> 3<BOL>7⏏5@a = [1,2,3,4,5,6];@a.map(*.say)␤»

[12:43] <Poohman> m:my @a = [1,2,3,4,5,6];@a.map(*.say)

[12:43] <evalable6> Poohman, rakudo-moar 07dce515f: OUTPUT: «1␤2␤3␤4␤5␤6␤»

[12:44] <Poohman> hello all - is there any way to get a slice of the rest of the array as parameter to the map in the above example

[12:46] <Poohman> for 1 I want to use [2 3 4 5 6], for 2,[3 4 5 6] etc

[12:48] <Poohman> m:my @a = [1,2,3,4,5,6];@a.map(->@b {@b.say})

[12:48] <evalable6> Poohman, rakudo-moar 147ce39ea: OUTPUT: «(exit code 1) Type check failed in binding to parameter '@b'; expected Positional but got Int (1)␤  in block <unit> at /tmp/wMNcTcW2GF line 1␤␤»

[12:49] <MasterDuke> m: my @a = [1,2,3,4,5,6]; @a.map({"$_, @a[$_..*]".say})

[12:49] <camelia> rakudo-moar 07dce515f: OUTPUT: «1, 2 3 4 5 6␤2, 3 4 5 6␤3, 4 5 6␤4, 5 6␤5, 6␤6, ␤»

[12:51] <Poohman> cool

[12:52] <Poohman> @a was in scope inside

[12:52] <tobs> m: my @a = [1001,1002,1003,1004,1005,1006]; @a.map({"$_, [@a[$_..*]]".say})  # but maybe you didn't expect this

[12:52] <camelia> rakudo-moar 550bf0975: OUTPUT: «1001, []␤1002, []␤1003, []␤1004, []␤1005, []␤1006, []␤»

[12:55] <Poohman> eh I thought $_ was the index

[12:55] *** sena_kun joined
[12:56] <tobs> map transforms the values, but using @a.kv you can get index and value interleaved. Then you can use @a inside the map function:

[12:56] <tobs> m: my @a = [1000 «+» (1..6)]; @a.kv.map(-> $idx, $val { "$val, [@a[$idx ^.. *]]".say })

[12:56] <camelia> rakudo-moar 550bf0975: OUTPUT: «1001, [1002 1003 1004 1005 1006]␤1002, [1003 1004 1005 1006]␤1003, [1004 1005 1006]␤1004, [1005 1006]␤1005, [1006]␤1006, []␤»

[12:59] <Poohman> thanks

[13:02] <Poohman> just curious - any way to get the slice or even the whole array as a parameter through map itself??

[13:03] <Poohman> you know like $idx and $val

[13:04] <tobs> If it worked, I would expect it to react to a slurpy positional parameter, but it doesn't like that:

[13:05] <tobs> m: (1,2,3,4,5,6).map(-> $first, *@rest { "$first [@rest]".say })

[13:05] <camelia> rakudo-moar 550bf0975: OUTPUT: «1 [@rest]␤2 [@rest]␤3 [@rest]␤4 [@rest]␤5 [@rest]␤6 [@rest]␤»

[13:05] <tobs> huh?

[13:06] <tobs> in any case, consuming almost the entire list on every iteration is not very mappy, so I wouldn't be surprised if you couldn't talk map into doing that at all

[13:07] <tobs> (without referencing the entire list by yourself, of course, as shown above)

[13:08] <Poohman> ok let me play around with this

[13:08] <tobs> I've been thinking about maybe List.rotor() is powerful enough to express that, but couldn't come up with a solution

[13:18] *** poohman_ joined
[13:18] *** poohman_ left
[13:27] <Poohman> can we use a lambda inside the hyper operators?

[13:28] <Poohman> or can we only use an infix operator?

[13:29] *** guifa2 joined
[13:36] <guifa> the hyper operators are meta ops, so they can only work extant operators

[13:48] *** ryan16 joined
[13:51] <ryan16> I have been having a problem with a promise from an async proc never being kept. I have finally reduced it to a minimal test case... it happens if I assign stdout and stderr supplies to variables. See: https://controlc.com/a01cc949 

[13:56] <ryan16>  also, I am watching the process with htop and terminates in both cases, but in the case with stdout and stderr assigned to variables... the promise stays planned forever....

[14:01] *** abraxxa left
[14:01] *** abraxxa joined
[14:06] *** cpan-raku left
[14:07] *** dogbert17 joined
[14:08] <ryan16> Ok, interesting, so if I tap the supplies before trying to quit the async proc the promise from starting the proc works as expected.

[14:08] <ryan16> is there some issue with getting a supply from a proc and never tapping it?

[14:08] <xinming> m: role R { method a { "R::a".say; }; }; class A does R { method a { callsame; "A::a".say; }; }; A.new.a;

[14:08] <camelia> rakudo-moar a666e7363: OUTPUT: «A::a␤»

[14:09] <xinming> m: role R { method a { "R::a".say; }; }; class A does R { method a { self.::R::a; "A::a".say; }; }; A.new.a;

[14:09] <camelia> rakudo-moar a666e7363: OUTPUT: «R::a␤A::a␤»

[14:09] <ryan16> I don't know if this is a bug of just me not using things correctly...

[14:09] <xinming> So, subclass hides the methods in Role with same name, right

[14:13] *** cpan-raku joined
[14:13] *** cpan-raku left
[14:13] *** cpan-raku joined
[14:18] <vrurg> xinming: roles do not participate in MRO dispatching. If you override a method you have to use class-qualified form to call it afterwards. :: before R is not needed in your example.

[14:19] *** Xliff left
[14:21] <SmokeMachine> xinming: it seems we should be usinf `.name` here as well… https://github.com/FCO/Red/blob/master/lib/MetamodelX/Red/Id.pm6#L105

[14:21] <xinming> SmokeMachine: change to `.name` doesn't work either in that example.

[14:21] <xinming> I just now add a hack for that.

[14:22] <xinming> SmokeMachine: https://termbin.com/pyp2    <--- This is the patch I figured out just now.

[14:22] <xinming> if we change to `.name` in that case, It'll break the SQLite driver.

[14:22] <SmokeMachine> xinming: you mean changing on here (https://github.com/FCO/Red/blob/master/lib/MetamodelX/Red/Model.pm6#L447) and here (https://github.com/FCO/Red/blob/master/lib/MetamodelX/Red/Id.pm6#L105) to name?

[14:23] <xinming> SmokeMachine: Yea, I tried that.

[14:23] <xinming> in `filter-id` method  and loading the @ids

[14:24] <xinming> So, I get an idea, which is modifing the returned $data, convert it to the hash we want.

[14:25] <xinming> I tried to do this in row method in Statement class, The problem with that is, We can't get the model in Statement class.

[14:25] <xinming> tried to wrap the `.row` method, But missing the model info

[14:28] <vrurg> SmokeMachine: BTW, I wanted to tell you that when you resolve a model name into a type object, ::() won't do what you expect because it only lookups in the lexical scope.

[14:28] *** lucasb joined
[14:28] <SmokeMachine> xinming: I think we should make id-filter work the right way… and make it work for any driver...

[14:30] <SmokeMachine> vrurg: you mean here? https://github.com/FCO/Red/blob/master/lib/Red/Attr/Relationship.pm6#L31

[14:30] <vrurg> SmokeMachine: two lines above

[14:31] <vrurg> After you require a module you get the symbol into the require's scope and that's why it works.

[14:31] <vrurg> That's also how I solved my problem – I split my models into individual modules.

[14:33] <vrurg> There're currently two ways to have name resolution done right. First is traversing callers and inspecting their lexicals. Which is not really good because accidentaly you might find a class of the same name which is not a model.

[14:33] *** kensanata left
[14:34] <SmokeMachine> expliciting using a `:require` haven’t work for you?

[14:34] <vrurg> Or it could be a registry of models mapping names into type objects...

[14:34] <vrurg> SmokeMachine: what :require? Am I missing something? :)

[14:36] <SmokeMachine> vrurg: I mean: you could do something like: `has $.bla-id is referencing(*.id, :model<Bla>, :require<SchemaFile>)` or did I understood it wrong?

[14:37] <SmokeMachine> vrurg: I got `my $t = ::($model);` is wrong… but I think I’m missing some piece...

[14:38] <xinming> SmokeMachine: It's not an easy `.attr-name`  `.name` replacement, I think, for now, my patch is right, I just need to move that patch into the else block

[14:39] <xinming> https://termbin.com/z8t0

[14:40] <vrurg> SmokeMachine: my problem was I wanted both my models in same module. But :model<> didn't work. :require I didn't know about, but as I understand it is for an external module with model, right?

[14:41] <xinming> This is the patch we need, The reason is, for SQLite, it re-fetches the row from the model by using LastInsertedRow class, Then the `.row(@ids)` does the right thing all the time.

[14:41] <vrurg> SmokeMachine: you're missing nothing. It just won't work that way. The only right solution is to allow :model(Model) – i.e. use model type objects directly for the purpose. 

[14:42] <xinming> But in postgres, the $data is filled by  `INSERT INTO table xxx returning *`   after the returning, they are column names with underscores.

[14:42] *** veesh_ joined
[14:42] *** sena_kun left
[14:42] <vrurg> SmokeMachine: for symbolic names, I'd stick to the registry solution. This would also allow aliasing long-named models for ease of use.

[14:43] *** veesh left
[14:43] *** veesh_ is now known as veesh

[14:43] <xinming> So, in the pg case, We convert the $data structure according to the model, make $data look like the same as fetched with LastInsertedRow class. This makes sense.

[14:44] <xinming> vrurg: he is now in parallel processing mode because of us. :-)

[14:45] <SmokeMachine> vrurg: `:model(Model)` should work… I still need to implement it… but:

[14:45] <SmokeMachine> vrurg: https://www.irccloud.com/pastebin/TROJKDjA/

[14:45] <vrurg> SmokeMachine: BTW, you were asking what I needed Red for. I'm trying to develop a console UI toolkit. Used Log::Async to debugging purposes, but with parallelized operations (each widget has own even handling thread) reading it is a nightmare. Switched to Red+sqlite file based tracer class and now generate a nice HTML table of debug records. :)

[14:47] <SmokeMachine> xinming: yes, that makes sense...

[14:47] <vrurg> SmokeMachine: I'm currently fine with module-perp-model scheme. Can patiently wait for the fix. :)

[14:48] <SmokeMachine> vrurg: :)

[14:48] <vrurg> xinming: we can also parallelize each other and make everybody busy handling async requests. That'd be good training for async skills!

[14:49] <Doc_Holliwood> vrurg: will it work on windows?

[14:49] <vrurg> SmokeMachine: BTW, switching from Log::Async to sqlite also speeded up things for me.

[14:50] <vrurg> Doc_Holliwood: let me make it working on unix first. I didn't work on UI toolkits for decades. :)

[14:50] <vrurg> Doc_Holliwood: especially on fully async ones.

[14:50] <Doc_Holliwood> that's not something one adds as an afterthought

[14:50] <cpan-raku> New module released to CPAN! JSON::Infer (0.0.18) by 03JSTOWE

[14:51] <Doc_Holliwood> are you using ecape sequence based input / output?

[14:51] <SmokeMachine> xinming: Is that patch working? I’m, at home, trying to fix some problems that melezhik has found runing tests on PG… I think his work to make the tests run on Pg as well, will make the Pg driver much more reliable

[14:51] <vrurg> Doc_Holliwood: but generally there is an abstract Screen concept. So, if somebody writes a driver – it should work.

[14:52] <vrurg> Doc_Holliwood: of course I do, but the toolkit itself is agnostic of these details. They're driver-localized.

[14:52] <xinming> SmokeMachine: That patch is working, I already commited.

[14:53] <SmokeMachine> xinming: thanks! and I’m sorry… I’ll have to wait to go home to take a deeper look at it...

[14:54] <xinming> SmokeMachine: I've pushed the change, You can merge my pull request, It just lacks some tests for json and jsonb

[14:54] <xinming> That patch works

[14:54] *** lizmat left
[14:55] <Doc_Holliwood> vrurg: i'm curious. can i look at the codes?

[14:55] <Doc_Holliwood> gimme the codes!

[14:55] <Doc_Holliwood> ;-)

[14:55] *** sena_kun joined
[14:56] *** domidumont joined
[14:57] <vrurg> Doc_Holliwood: It's still in deeeeeeeeeep development.

[14:57] <Doc_Holliwood> so?

[14:58] <vrurg> Doc_Holliwood: https://github.com/vrurg/raku-Vikna/ – but each commit is a big rework of previous mistakes for now. I'm currently working on another one.

[14:58] <SmokeMachine> I’m curious as well!

[15:01] <SmokeMachine> xinming: one test has broken...

[15:05] <Kaiepi> releasable6, status

[15:05] <releasable6> Kaiepi, Next release will happen when it's ready. 1 blocker. 0 out of 483 commits logged

[15:05] <releasable6> Kaiepi, Details: https://gist.github.com/8f244f32129dd78cfc8eeee81b2ceb85

[15:07] <xinming> SmokeMachine: how do I run all tests?

[15:07] <SmokeMachine> `mi6 test`

[15:09] *** pedr0 joined
[15:11] <pedr0> Hi everybody. I need to develop an easy GUI (internal tooling) however I am new to GTK and browsing around I am reading of GTK::Simple - however the examples in there do not explain much, are fairly minimal. Do you have any other recommendation ?

[15:13] <vrurg> pedr0: ask Xliff when he's around. 

[15:24] <ryan16> I am having to do this `Proc::Async.new: 'stdbuf', '-oL', '-eL', 'my_program', :w;` to get my IPC working correctly due to terminal buffering... is there a better solution?

[15:26] *** ryan16 left
[15:26] *** ryan16 joined
[15:29] <ryan16> seems like line buffering should be a common problem for people using async proc and having to call with stdbuf just doesnt feel right to me...

[15:36] <vrurg> ryan16: this is a known problem with Proc::Async. 

[15:36] <vrurg> ryan16: Correction: known if the problem is caused by stderr/stdout mixing.

[15:55] <cpan-raku> New module released to CPAN! XML::Class (0.0.8) by 03JSTOWE

[15:57] *** gabiruh joined
[16:09] <ryan16> vrurg: which problem... the line buffering or the promises? I asked about both earlier....

[16:11] *** Doc_Holliwood left
[16:14] <Kaiepi> is there a way to reflect if a method was declared as a private method or metamethod from a trait that's being applied to it?

[16:15] <Kaiepi> this happens before it gets added to its package so i can't check if it exists in .^private_methods etc.

[16:20] *** wamba joined
[16:30] *** mahmudov joined
[16:39] *** domidumont left
[16:41] *** sena_kun left
[16:52] *** patrickb joined
[16:57] *** sena_kun joined
[16:59] *** lizmat joined
[17:08] <ryan16> is `our` the same as `is export`?

[17:10] <lizmat> effectively, you could argue: yes

[17:11] <ryan16> ok thx

[17:13] <ryan16> lizmat: do you know if the question I asked earlier about Proc::Async promises is expected behavior? If I assign the stdout and stderr supplies to variables, but never tap them, the promise for starting the proc is never kept, even after the process ends.

[17:14] <ryan16> minimal test case I came up with: https://controlc.com/a01cc949

[17:16] <Poohman> m:@a = [1,2,3,4,5];say @a.WHAT;@a.reverse.WHAT;

[17:16] <evalable6> Poohman, rakudo-moar 6d6318d47: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/WkKSaiqgPI␤Variable '@a' is not declared␤at /tmp/WkKSaiqgPI:1␤------> 03<BOL>08⏏04@a = [1,2,3,4,5];say @a.WHAT;@a.reverse.␤»

[17:16] <lizmat> ryan16: not sure

[17:16] <Poohman> m:@a = [1,2,3,4,5];say @a.WHAT;

[17:16] <evalable6> Poohman, rakudo-moar 6d6318d47: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/aQV7yxozJG␤Variable '@a' is not declared␤at /tmp/aQV7yxozJG:1␤------> 03<BOL>08⏏04@a = [1,2,3,4,5];say @a.WHAT;␤»

[17:16] <Poohman> m:my @a = [1,2,3,4,5];say @a.WHAT;

[17:16] <evalable6> Poohman, rakudo-moar 6d6318d47: OUTPUT: «(Array)␤»

[17:17] <Poohman> m:my @a = [1,2,3,4,5];say @a.WHAT;say @a.reverse.WHAT

[17:17] <evalable6> Poohman, rakudo-moar 6d6318d47: OUTPUT: «(Array)␤(Seq)␤»

[17:18] <Poohman> m:my @a = [1,2,3,4,5];say @a.WHAT;my @b=@a.reverse;say @b.WHAT;

[17:18] <evalable6> Poohman, rakudo-moar 6d6318d47: OUTPUT: «(Array)␤(Array)␤»

[17:20] <ryan16> lizmat: ok thx. I found a work around by adding some taps before closing the proc and awaiting the promise just incase... seems strange though... took me forever to track down too

[17:27] *** jmerelo joined
[17:28] <Poohman> hi can we terminate a map intermediately?

[17:29] <Poohman> m:my @a = [1,2,3,4,5];@a.map(if *=3 {say "I want to stop"})

[17:29] <evalable6> Poohman, rakudo-moar 6d6318d47: OUTPUT: «(exit code 1) 04===SORRY!04=== Er…»

[17:29] <evalable6> Poohman, Full output: https://gist.github.com/33be65beaac07a710f2b139fbde4cffb

[17:30] <Poohman> m:my @a = [1,2,3,4,5];@a.map({if *=3 {say "I want to stop"}})

[17:30] <evalable6> Poohman, rakudo-moar 6d6318d47: OUTPUT: «(exit code 1) Cannot modify an immutable Whatever (*)␤  in block <unit> at /tmp/TPeVhkO1C0 line 1␤␤»

[17:32] *** Doc_Holliwood joined
[17:35] <Poohman> m:my @a = [1,2,3,4,5];@a.map({if *==3 {say "I want to stop"}})

[17:35] <evalable6> Poohman, rakudo-moar 6d6318d47: OUTPUT: «(exit code 1) 04===SORRY!04=== Er…»

[17:35] <evalable6> Poohman, Full output: https://gist.github.com/de06e769d960bf4ed7044f63c1caecd7

[17:36] <Poohman> m:my @a = [1,2,3,4,5];@a.map(->$b{if {$b==3} {say "I want to stop"}})

[17:36] <evalable6> Poohman, rakudo-moar 6d6318d47: OUTPUT: «(exit code 1) 04===SORRY!04===␤Sh…»

[17:36] <jmerelo> Poohman: why do you want to do that? You need it to be a map? Can't it be a for loop?

[17:36] <evalable6> Poohman, Full output: https://gist.github.com/4606ae9546dd814c93e49b9a8b33ca79

[17:36] <tellable6> 2020-01-13T18:41:25Z #raku <AlexDaniel> jmerelo: can we start redirecting docs.perl6.org to docs.raku.org? I keep visiting the old site and it annoys me :)

[17:37] <jmerelo> .tell AlexDaniel I have to check what search queries return. We don't want Google to slam our results for raku _and_ perl 6 down...

[17:37] <tellable6> jmerelo, I'll pass your message to AlexDaniel

[17:37] <AlexDaniel> e

[17:37] *** El_Che left
[17:38] <Poohman> jmerelo: was just wondering if it is possible 

[17:39] <Poohman> I basically did a map - but since the array was pretty large, it was taking a lot of time

[17:39] <Poohman> so wondered if I could terminate if the map threw up a result I was interested in

[17:44] *** wildtrees joined
[17:46] <AlexDaniel> jmerelo: not sure why though, we redirect pretty much everything else

[17:46] <MasterDuke> m: (^10).map({.say; last if $_ == 3})

[17:46] <camelia> rakudo-moar 6d6318d47: OUTPUT: «0␤1␤2␤3␤»

[17:46] *** El_Che joined
[17:46] <AlexDaniel> searching for perl6 consistently gives raku results

[17:47] <AlexDaniel> and unfortunately points to docs.perl6.org instead of redirecting to the current docs.raku.org website

[17:54] <jmerelo> AlexDaniel: reference is different. We really need people to find specific things.

[17:55] <jmerelo> raku sigils shows the new documentation in the second place https://www.google.com/search?client=ubuntu&channel=fs&q=raku+twigils&ie=utf-8&oe=utf-8

[17:55] <jmerelo> input/output in the second place too https://www.google.com/search?safe=off&client=ubuntu&hs=Tyr&channel=fs&sxsrf=ACYBGNSpEZ3pCdS7uVJklGbpwH4tJygwYg%3A1579197288527&ei=aKMgXq3XH5Ksa9uWlpgB&q=raku+input+output&oq=raku+input+output&gs_l=psy-ab.3..35i39.24132.25261..25424...1.0..0.103.1247.13j1......0....1..gws-wiz.......35i39i19j0j0i203j0i10i203.DSj3Tcp4GeU&ved=0ahUKEwitq6ar2IjnAhUS1hoKHVuLBRMQ4dUDCAo&uact=5

[17:55] <jmerelo> I guess that's good enough.

[17:55] <jmerelo> So OK, it's probably time to redirect now.

[17:56] <jmerelo> I'll see if I can do that with the access I have to the nginx configuration, or ask rba if I can't seem to get it right.

[17:57] <jmerelo> I would have liked searches for perl6 to also return Raku, and that does not happen, and will probably not happen...

[17:57] <jmerelo> https://www.google.com/search?safe=off&client=ubuntu&hs=aJX&channel=fs&sxsrf=ACYBGNStgm3LQovyCIbFX-DvFLAw88LIEw%3A1579197314685&ei=gqMgXtK1KYzAa4mqgvgN&q=perl6+input+output&oq=perl6+input+output&gs_l=psy-ab.3...92477.94205..94353...0.0..0.115.1984.18j4......0....1..gws-wiz.......35i39j0j0i131j35i39i19j0i67j0i203j0i13i30j0i22i30j0i8i13i30j33i160.RhcrPmkLPCw&ved=0ahUKEwjS_uK32IjnAhUM4BoKHQmVAN8Q4dUDCAo&uact=5

[17:58] <jmerelo> I'm afraid of Google noticing the redirect to new pages that do not mention perl6 and slamming down results...

[17:58] <jmerelo> But I guess that if it's not happened already, it's unlikely it will happen any time.

[17:59] <jmerelo> I'll have to consult with someone who knows a bit of SEO about that. Wouldn't be nice that people wouldn't be able to find the documentation.

[18:00] *** jmerelo left
[18:00] *** wamba left
[18:01] *** lizmat left
[18:08] *** chloekek joined
[18:15] *** slu joined
[18:24] *** patrickb left
[18:25] <robertle> jmerelo: I am no SEO expert at all, but I know of a page that had similar problems (two domains, same content), and there it was solved or mitigated with a 

[18:25] <tellable6> robertle, I'll pass your message to jmerelo

[18:25] <robertle> <link rel="canonical" href="

[18:26] <robertle> like in https://fitness-finder.com/fitness/london/jubilee-hall 

[18:30] *** domidumont joined
[18:31] *** slu left
[18:39] *** rypervenche left
[18:41] *** sena_kun left
[18:55] *** sena_kun joined
[19:01] *** rypervenche joined
[19:07] *** Poohman left
[19:12] *** guifa2 left
[19:18] *** domidumont left
[19:24] *** sauvin left
[19:27] *** lizmat joined
[19:36] <SmokeMachine> m:my @a = [1,2,3,4,5];@a.map(->$b {if {$b==3} {last}; say $b})

[19:36] <evalable6> SmokeMachine, rakudo-moar 6d6318d47: OUTPUT: «»

[19:38] *** ryan16 left
[19:38] <SmokeMachine>  m:my @a = [1,2,3,4,5];@a.map(->$b {if $b==3 {last}; say $b})

[19:38] <evalable6> SmokeMachine, rakudo-moar 6d6318d47: OUTPUT: «1␤2␤»

[19:45] *** lizmat left
[19:47] *** Xliff joined
[19:48] <cpan-raku> New module released to CPAN! Gnome::N (0.15.2) by 03MARTIMM

[19:48] <tobs> m: [1..6].map({ next if $_ %% 2; last if $_ > 3; $_ })».say

[19:48] <camelia> rakudo-moar 6d6318d47: OUTPUT: «1␤3␤»

[19:48] <tobs> today I learned... SmokeMachine++

[19:49] <Xliff> pedr0: Hi! I'm writing GTK toolkit for Raku. Still in early development, but it is usable.

[19:50] <Xliff> http://github.com/Xliff/p6-GtkPlus

[19:50] <Xliff> It is also full of examples, but if you want a preview of how it looks, take a gander at the tests online: https://github.com/Xliff/p6-GtkPlus/tree/master/t

[19:51] <Xliff> Feel free to ask me about anything that you have problems understanding...

[19:52] *** patrickb joined
[19:52] <pedr0> Xliff thanks I will do

[19:52] <Xliff> pedr0: Great. 

[19:53] <Xliff> Gotta split. Take care!

[19:53] *** stoned75 joined
[19:54] *** Xliff left
[20:02] *** pedr0 left
[20:03] *** lizmat joined
[20:13] <Geth> ¦ problem-solving: Kaiepi assigned to jnthn Issue Routines could use more support for reflection https://github.com/Raku/problem-solving/issues/149

[20:17] *** ToddAndMargo joined
[20:19] <ToddAndMargo> Help!   How do you troubleshoot the following.  Commenting out `use WinReg` removes the error.  I am not importing anything from it at the moment:  $ raku -I. --stagestats -c WinMessageBox.pm6Stage start      :   0.000Stage parse      : ===SORRY!===Circular module loading detected trying to precompile /home/CDs/Windows/NtUtil/WinReg.pm6 

[20:27] *** lizmat left
[20:28] <tobs> ToddAndMargo: it seems that WinReg.pm6 uses another module which in turn uses WinReg. That's the direction in which you troubleshoot (and only you unless you post the code somewhere for us to see).

[20:40] *** rindolf left
[20:42] *** sena_kun left
[20:52] <ToddAndMargo> I will doublke check

[20:53] *** wamba joined
[20:55] *** sena_kun joined
[20:59] <ToddAndMargo> commenting out all the other "use" stll give me the error.  maybe I should look at the offending import.  Will get back

[21:01] <ToddAndMargo> Ah Ha!   WinRef is calling a sub from WinMessageBox!  Time to make another module!  thank you!  I had no idea what was happening.

[21:17] <ToddAndMargo> Joy!  $ raku -I. --stagestats -c WinMessageBox.pm6 Stage start      :   0.000Stage parse      :   1.296Stage syntaxcheck: Syntax OK$ raku -I. --stagestats -c WinReg.pm6 Stage start      :   0.000Stage parse      :   2.132Stage syntaxcheck: Syntax OK$ raku -I. --stagestats -c NativeConvert.pm6 Stage start      :   0.000Stage parse      :

[21:17] <ToddAndMargo> 0.424Stage syntaxcheck: Syntax OK

[21:34] *** veesh_ joined
[21:36] *** veesh left
[21:37] *** veesh_ is now known as veesh

[21:40] <Doc_Holliwood> wtf if this?

[21:40] <Doc_Holliwood> Failed to rename 'C:\Users\holli\.perl6\precomp\B93E2E259914003CBED764A23AD228BC90C786BE\FA\FAB7D84A2B3613FF191111330E8DCDE476F7355A.tmp' to 'C:\Users\holli\.perl6\precomp\B93E2E259914003CBED764A23AD228BC90C786BE\FA\FAB7D84A2B3613FF191111330E8DCDE476F7355A': Failed to rename file: operation not permitted

[21:40] <Doc_Holliwood> out of nowhere

[21:48] *** lucasb left
[21:51] <[Coke]> what were you doing before the error?

[21:53] <Doc_Holliwood> changing some module code and force installing it with zef

[21:53] <Doc_Holliwood> deleting the whole precom directory fixed it

[21:56] *** Kaiepi left
[21:59] *** ToddAndMargo left
[22:03] *** guifa2 joined
[22:19] *** Xliff joined
[22:28] *** Kaiepi joined
[22:29] <AlexDaniel> rsync: The answer to life, the universe and everything

[22:32] *** kensanata joined
[22:37] *** chloekek left
[22:40] *** aluaces left
[22:41] *** sena_kun left
[22:46] *** Kaiepi left
[22:48] *** Kaiepi joined
[22:53] *** guifa2 left
[22:57] *** sena_kun joined
[23:00] *** kensanata left
[23:06] <japhb> AlexDaniel: My desktop linux distro recently created a new backup/restore GUI, nice and clean and easy to understand.  Under the covers, it's just running rsync from your primary storage to your backup.  :-)

[23:06] <AlexDaniel> :)

[23:07] <AlexDaniel> I had to use it now because cp sucks :D

[23:08] <AlexDaniel> I dunno maybe my arms are growing from the wrong spot or something, but I just couldn't get cp to copy extended ACLs

[23:10] <japhb> I take it `cp -a` isn't a thing on your OS?

[23:10] <japhb> (Or maybe it just doesn't do extended ACLs right.)

[23:10] <cpan-raku> New module released to CPAN! Net::BGP (0.2.0) by 03JMASLAK

[23:11] <AlexDaniel> I don't remember if I tried it, but looking up the problem resulted in “just use rsync” answers so that's what I did

[23:13] *** lizmat joined
[23:24] *** wamba left
[23:27] *** wamba joined
[23:46] <phogg> rsync isn't always better than cp. I'm looking at you, sparse files.

