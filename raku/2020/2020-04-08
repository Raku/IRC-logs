[00:11] *** DarthGandalf left
[00:12] *** k-man left
[00:18] *** k-man joined
[00:20] *** Sgeo__ joined
[00:22] *** aborazmeh left
[00:24] *** Sgeo_ left
[00:26] *** DarthGandalf joined
[00:36] *** telex joined
[00:36] *** Black_Ribbon joined
[00:42] *** markoong left
[00:56] *** Maylay joined
[01:03] *** Maylay left
[01:05] *** Maylay joined
[01:11] *** lucasb left
[01:28] *** hungrydonkey joined
[01:34] *** melezhik left
[01:41] *** hungrydonkey left
[01:42] *** hungryd59 joined
[01:43] *** molaf left
[01:45] *** poohman joined
[01:48] *** Altai-man_ joined
[01:51] *** sena_kun left
[01:56] *** molaf joined
[01:58] *** srandon111 left
[02:11] *** rbtca left
[02:11] *** rbtca joined
[02:18] *** k-man left
[02:21] *** hungryd59 left
[02:22] *** hungrydonkey joined
[02:24] *** squashable6 left
[02:24] *** k-man joined
[02:26] *** squashable6 joined
[02:38] *** AlexDani` joined
[02:42] *** AlexDaniel left
[03:03] *** marcusr left
[03:04] *** marcusr joined
[03:34] *** ryan_ joined
[03:35] *** ryan_ left
[03:46] *** TheAthlete joined
[03:49] *** sena_kun joined
[03:51] *** Altai-man_ left
[03:53] *** pilne left
[03:53] *** hungrydonkey left
[03:57] *** guifa2 joined
[03:57] *** hungrydonkey joined
[03:59] *** rbtca left
[03:59] *** rbtca joined
[04:00] <guifa2> hrm

[04:00] * guifa2 is having trouble with slangs :-(

[04:07] <guifa2> I keep getting the error "Cannot find method 'package_at_key' on 'BOOTHash': no method cache and no .^find_method"

[04:28] *** molaf left
[04:45] <guifa2> MWE: https://gist.github.com/alabamenhu/2908fa5820b55284c548bff49f32edb8

[04:45] *** kotrcka left
[05:16] *** holyghost left
[05:48] *** Altai-man_ joined
[05:51] *** sena_kun left
[05:56] *** rindolf joined
[05:57] *** Xliff left
[05:57] *** rindolf left
[06:00] *** hungrydonkey left
[06:01] *** hungrydonkey joined
[06:02] *** rindolf joined
[06:05] *** wamba joined
[06:19] *** guifa2 left
[06:19] *** hungrydonkey left
[06:21] *** hungrydonkey joined
[06:26] *** hungrydonkey left
[06:39] *** kensanata joined
[06:53] *** jjatria left
[07:12] *** holyghost joined
[07:13] *** k-man left
[07:21] *** k-man joined
[07:37] *** dakkar joined
[07:39] *** vike left
[07:49] *** sena_kun joined
[07:51] *** Altai-man_ left
[07:56] *** pecastro joined
[08:02] *** rbtca left
[08:02] *** rbtca joined
[08:05] *** vike joined
[08:15] *** natrys joined
[08:20] *** jjatria joined
[08:24] *** jjatria left
[08:24] *** jjatria joined
[08:25] *** chloekek joined
[08:34] *** wamba left
[08:34] <holyghost> I'm going to read 2 books if I can : Statistical Decion Theory and Bayesian Analysis - J.O. Berger and Origins of Order by Kauffman

[08:35] <holyghost> The one by Berger is the real thing for making decitions in games

[08:35] <holyghost> *decisions

[08:36] <holyghost> The second on if complex systems e.g. bioinformatics

[08:36] <holyghost> *one

[08:36] <holyghost> heck

[08:36] *** wamba joined
[08:37] <holyghost> Thing is that the first book makes for numerical, probability functionality thereater

[08:38] <holyghost> e.g. if you have a Metropolis algorithm you can make decisions based on the probability that you calculate with the algorithm

[08:38] *** perlbot left
[08:38] <holyghost> Then there's Bayes stuff in there where you have multivariate statistics

[08:38] *** jcallen left
[08:39] *** perlbot joined
[08:39] <holyghost> Fact is you just can do variance calculations hidden in e.g. a Loss function

[08:40] *** jcallen joined
[08:40] *** xi joined
[08:42] <holyghost> The first book you have to use for any post-chance calculations 

[08:42] * holyghost is a bit *in the wind*, drunk literally

[08:43] <holyghost> So I'm going to write several things onto p6-Game-Bayes on github where you can access decition theory

[08:43] <holyghost> My prof told me to read Berger's book first so I can still alleveate p6-Game-Bayes

[08:43] <holyghost> The other book my Master's thesis was based upon

[08:44] <holyghost> Now, I don't really know i I'm going to do any magic with the decition theory book, but it should be clear when I read it

[08:45] <holyghost> It's somewhat of a bible for decision making in games

[08:45] <holyghost> ok, that's it or now

[09:25] *** markoong joined
[09:29] *** markoong left
[09:31] *** xelxebar left
[09:45] *** xelxebar joined
[09:48] *** Altai-man_ joined
[09:51] *** sena_kun left
[09:52] *** Kuro3 joined
[09:57] *** aborazmeh joined
[09:57] *** aborazmeh left
[09:57] *** aborazmeh joined
[09:58] *** qiqi joined
[10:04] <lizmat> m: role Foo { say "mainline " ~ $?CLASS.^name }; say "role defined"; Foo.new; say "goodbye"; class A does Foo { }  # Xliff in the mainline of a role?

[10:04] <camelia> rakudo-moar afff3b0b2: OUTPUT: ¬´mainline A‚ê§role defined‚ê§mainline Foo‚ê§goodbye‚ê§¬ª

[10:17] *** AlexDani` is now known as AlexDaniel

[10:17] *** AlexDaniel left
[10:17] *** AlexDaniel joined
[10:20] *** molaf joined
[10:20] *** aborazmeh left
[10:21] *** aborazmeh joined
[10:21] *** aborazmeh left
[10:21] *** aborazmeh joined
[10:24] *** qiqi left
[10:26] *** Black_Ribbon left
[10:27] *** qiqi2 joined
[10:34] *** aborazmeh left
[10:34] *** aborazmeh_ joined
[10:34] *** aborazmeh_ left
[10:34] *** aborazmeh_ joined
[10:35] *** aborazmeh_ is now known as aborazmeh

[10:35] *** squashable6 left
[10:35] *** squashable6 joined
[10:54] *** lichtkind joined
[11:04] *** MasterDuke left
[11:06] *** aborazmeh left
[11:12] *** qiqi2 left
[11:18] *** patrickb joined
[11:24] *** patrickb left
[11:30] *** libertas joined
[11:33] *** libertas left
[11:40] *** Itaipu joined
[11:49] *** sena_kun joined
[11:51] *** Altai-man_ left
[11:53] *** MasterDuke joined
[12:01] *** TheAthlete left
[12:02] *** veesh left
[12:05] *** rbtca left
[12:05] *** rbtca joined
[12:15] *** veesh joined
[12:16] *** poohman left
[12:21] *** molaf left
[12:27] *** cpan-raku left
[12:29] *** cpan-raku joined
[12:29] *** cpan-raku left
[12:29] *** cpan-raku joined
[12:46] *** Kuro3 left
[12:52] *** libertas joined
[13:05] *** andrzejku joined
[13:21] *** aborazmeh joined
[13:21] *** aborazmeh left
[13:21] *** aborazmeh joined
[13:23] *** natrys left
[13:31] *** lichtkind left
[13:35] *** natrys joined
[13:35] *** molaf joined
[13:44] *** wamba left
[13:48] *** Altai-man_ joined
[13:51] *** sena_kun left
[14:09] *** aborazmeh left
[14:27] *** guifa2 joined
[14:27] *** wamba joined
[14:39] *** melezhik joined
[14:59] <Geth_> ¬¶ ecosystem: 4c1198ffb6 | (Aleks-Daniel Jakimenko-Aleksejev)++ | META.list

[14:59] <Geth_> ¬¶ ecosystem: Add more modules to test for shell injection

[14:59] <Geth_> ¬¶ ecosystem: 

[14:59] <Geth_> ¬¶ ecosystem: If * module breaks your code then your code is very wrong.

[14:59] <Geth_> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/4c1198ffb6

[15:00] <AlexDaniel> good luck x)

[15:07] <chloekek> Glad I use hashes for archive file names. :)

[15:09] *** xinming_ joined
[15:10] <chloekek> Although this won‚Äôt work with my current Nix derivation generator.

[15:10] <chloekek> It will give an error that * is not allowed in the name of a derivation.

[15:12] *** xinming left
[15:13] <AlexDaniel> chloekek: that's the only way to do it, I think, yeah

[15:13] *** lichtkind joined
[15:13] <AlexDaniel> chloekek: there's also `../Foo` module so even proper shell code won't work

[15:16] *** rindolf left
[15:18] <chloekek> Nie.

[15:18] <chloekek> Nice.

[15:18] <chloekek> Not even :s are allowed, so I replace them with -s.

[15:18] <chloekek> E.g. JSON-Fast.

[15:19] *** rindolf joined
[15:19] <chloekek> brb

[15:19] *** chloekek left
[15:49] *** sena_kun joined
[15:50] *** mowcat joined
[15:51] *** Altai-man_ left
[15:59] *** rindolf left
[16:01] *** xinming_ left
[16:03] *** xinming_ joined
[16:10] *** chloekek joined
[16:10] *** dakkar left
[16:10] *** dakkar joined
[16:14] <Geth_> ¬¶ doc/@-interp-regex: 3017b9c9af | Chlo√©++ | doc/Language/regexes.pod6

[16:14] <Geth_> ¬¶ doc/@-interp-regex: fixup! Document @(code) interpolation in regex

[16:14] <Geth_> ¬¶ doc/@-interp-regex: review: https://github.com/Raku/doc/commit/3017b9c9af

[16:25] <Geth_> ¬¶ doc: 7f23a010fe | Chlo√©++ | doc/Language/regexes.pod6

[16:25] <Geth_> ¬¶ doc: Document @(code) interpolation in regex

[16:25] <Geth_> ¬¶ doc: review: https://github.com/Raku/doc/commit/7f23a010fe

[16:25] <Geth_> ¬¶ doc: 3017b9c9af | Chlo√©++ | doc/Language/regexes.pod6

[16:25] <Geth_> ¬¶ doc: fixup! Document @(code) interpolation in regex

[16:25] <Geth_> ¬¶ doc: review: https://github.com/Raku/doc/commit/3017b9c9af

[16:25] <Geth_> ¬¶ doc: ae55d38c7d | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[16:25] <linkable6> Link: https://docs.raku.org/language/regexes

[16:25] <Geth_> ¬¶ doc: Merge pull request #3317 from Raku/@-interp-regex

[16:25] <Geth_> ¬¶ doc: 

[16:25] <Geth_> ¬¶ doc: Document @(code) interpolation in regex

[16:25] <Geth_> ¬¶ doc: review: https://github.com/Raku/doc/commit/ae55d38c7d

[16:27] <AlexDaniel> chloekek: this is probably the funniest one: https://github.com/AlexDaniel/foo-emptystring/

[16:27] <AlexDaniel> btw all these modules have tests, they do work :)

[16:29] <chloekek> Yeah that‚Äôll also break with Nix.

[16:30] <chloekek> Good thing there can be at most one module with that name, and I ain‚Äôt not gonna fix it since the one is useless. :)

[16:30] <AlexDaniel> chloekek: what do you mean useless! It exports a whole subroutine!

[16:31] <chloekek> The if module is also fun.

[16:31] <chloekek> if is a keyword in Nix so I had to quote it, so now I just quote all module names.

[16:33] *** wamba left
[16:34] <chloekek> Also apparently depends is a list of module names and not distribution names so that‚Äôs Fun‚Ñ¢

[16:34] <jnthn> Hm, I thought it was meant to be distribution names

[16:34] <jnthn> Though it may be lax enough to work if one puts a module name

[16:35] <chloekek> ugexe pointed me to S22

[16:36] *** kensanata left
[16:37] *** rindolf joined
[16:46] <chloekek> > A list of run-time dependencies, specified as use strings.

[16:47] <jnthn> ah, ok; TIL :)

[16:49] *** wamba joined
[16:54] *** dakkar left
[17:09] *** squashable6 left
[17:12] *** squashable6 joined
[17:24] *** guifa2 left
[17:25] *** cgfbee joined
[17:36] *** lichtkind left
[17:46] *** cgfbee left
[17:46] *** andrzejku left
[17:48] *** Altai-man_ joined
[17:50] *** molaf left
[17:51] *** sena_kun left
[17:54] *** patrickb joined
[18:05] *** natrys left
[18:12] *** poohman joined
[18:16] *** poohman left
[18:18] *** natrys joined
[18:29] <jdv79> is it possible to have a DateTime cmd arg in MAIN's sig?

[18:30] <jdv79> rather via

[18:34] *** toddr joined
[18:35] *** wamba left
[18:36] <lizmat> m: @*ARGS = "2020-04-08"; sub MAIN(Date(Str) $a) { dd $a }   # jdv79 

[18:36] <camelia> rakudo-moar afff3b0b2: OUTPUT: ¬´Date.new(2020,4,8)‚ê§¬ª

[18:42] <jdv79> ah, thanks!

[18:43] <jdv79> then ya get "--from=<Str>"

[18:43] <jdv79> hmm, wonder if that could be improved

[18:43] <jdv79> nitpicky though.  it works at least.

[18:44] *** wamba joined
[18:59] <lizmat> jdv79: please make a issue for that, that should be fixable

[19:01] <jdv79> ok

[19:02] *** finsternis joined
[19:03] *** cgfbee joined
[19:03] *** wamba left
[19:11] <cpan-raku> New module released to CPAN! Data::Record (0.2.1) by 03KAIEPI

[19:11] <cpan-raku> New module released to CPAN! Gnome::GObject (0.16.3) by 03MARTIMM

[19:17] <El_Che> Hi, I retrieve the signature of MAIN by calling callframe() and I get something like this for "say callframe(3).my<&MAIN>.raku;":

[19:17] <El_Che> sub MAIN ($positional, Str :n(:$named1), Str :$named2) { #`(Sub|94820062092096) ... }

[19:17] <El_Che> it does what I need, but when using multi MAIN it does not work any longer:

[19:17] <El_Che> proto sub MAIN (;; Mu |) {*}

[19:18] <El_Che> is there I way to retrieve the signatures of the 'multi MAIN()'s?

[19:19] <jnthn> .candidates.map(*.signature)

[19:20] *** wamba7 joined
[19:20] <El_Che> impressive

[19:21] <El_Che> I am preparing a small fun module and was stuck there :)

[19:22] *** wamba7 is now known as wamba

[19:26] <El_Che> jnthn: while I have your attention, is there a magic incantation to know which signature was used?

[19:27] <El_Che> (or doe I need to match the params myself to find out?)

[19:30] <jnthn> You'd have to match it yourself, though if you can get the capture that the args are processed into that should be relatively straightforward

[19:30] <El_Che> ok, will do, thanks

[19:31] <El_Che> I have the capture already

[19:32] <mst> hey

[19:32] <mst> I know DrForr (PBUH) was doing a shitload of porting antlr grammars to raku

[19:32] <mst> is that some sort of formal project that the community has being paying attention to?

[19:37] *** dwarring joined
[19:42] *** Black_Ribbon joined
[19:42] <MasterDuke> https://github.com/drforr/perl6-ANTLR4 is listed on modules.raku.org

[19:49] *** sena_kun joined
[19:51] *** Altai-man_ left
[20:11] *** rbtca left
[20:11] *** rbtca joined
[20:25] *** molaf joined
[20:42] *** JulianLevens is now known as JulianLevens_

[20:43] *** rindolf left
[20:53] *** abraxxa left
[20:56] *** abraxxa joined
[21:04] <guifa> jnthn or lizmat (or anyone else who‚Äôs done slangy stuff), any idea what‚Äôs going on here? https://gist.github.com/alabamenhu/2908fa5820b55284c548bff49f32edb8

[21:07] *** wamba left
[21:11] *** rbtca left
[21:11] *** rbtca joined
[21:18] *** melezhik left
[21:19] *** mowcat left
[21:22] *** Demos[m] joined
[21:24] <Demos[m]> how does Perl6::Metamodel::Versioning get composed into ClassHOW?

[21:24] *** Black_Ribbon left
[21:25] *** Black_Ribbon joined
[21:30] <MasterDuke> Demos[m]: looks like ClassHOW does Perl6::Metamodel::LanguageRevision and it does Perl6::Metamodel::Versioning

[21:30] *** guifa2 joined
[21:30] <Demos[m]> ah! thanks

[21:32] <Demos[m]> I'm trying to understand how "class C:ver<...>" works

[21:32] <Demos[m]> like where the :ver adverb actually comes from

[21:32] *** MasterDuke left
[21:38] <guifa2> lizmat: just posted the --ll-exception

[21:39] <lizmat> I saw  so something is a BOOTHash rather than a Stash

[21:41] *** MasterDuke joined
[21:44] <lizmat> I'm not seeing it  :-(

[21:48] *** Altai-man_ joined
[21:51] *** sena_kun left
[21:54] <guifa2> lizmat: it's not a huge deal ATM, my binex processing code got left on my desktop and didn't get upped to github so last night I tried to tackle the slang side.  

[21:58] <Demos[m]> Actually in "class C:ver<...>" is the :ver bit part of the name of the class?

[22:03] *** pilne joined
[22:04] *** Xliff joined
[22:10] *** dwarring left
[22:12] *** natrys left
[22:23] *** chloekek left
[22:23] <matiaslina> Demos: https://docs.raku.org/language/syntax#Extended_identifiers this explains the :identifier<part>

[22:32] *** Altai-man_ left
[22:40] <Demos[m]> thanks!

[22:42] *** libertas left
[22:58] *** libertas joined
[22:59] <Demos[m]> wait, so how does the metaclass go from the extended identifier to $!ver and friends?

[23:03] *** patrickb left
[23:04] *** libertas left
[23:11] *** lizmat left
[23:19] *** pecastro left
[23:26] *** libertas joined
