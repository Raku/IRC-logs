[00:06] <[Coke]> one hint: if the compiler says "SORRY" it's compile time.

[00:06] <[Coke]> m: my Int $a = "WHAT";

[00:06] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Type check failed in assignment to $a; expected Int but got Str ("WHAT")␤  in block <unit> at <tmp> line 1␤␤»

[00:07] <[Coke]> so, yup, that's runtime (at the moment)

[00:09] <stanrifkin> [Coke]: thanks for the hint. It feels somewhat strange... i thought about it like ada or c++ type checking with range checking etc.

[00:24] <stanrifkin> Are there gui libs for raku yet?

[00:37] *** dogbert11 left
[00:40] <stanrifkin> what means "Diwali"?

[00:40] <parabolize> stanrifkin: GTK::Simple ad Gnome::Gtk3 are the 2 I found on a quick search

[00:41] <stanrifkin> parabolize: thanks. I searched too and didn't find anything.

[00:42] <parabolize> yeah, I don't see anything for QT, Tk or EFL

[00:42] *** mowcat left
[00:45] <stanrifkin> parabolize: I wanted Tk for simple dialog based programs. GTK::Simple sounds simple too.

[00:47] <parabolize> It does though it seems to be all docs by test and example

[00:48] <[Coke]> https://en.wikipedia.org/wiki/Diwali - Hindu festival of lights

[00:49] <[Coke]> The plan was to name the releases after holidays, picking one for each letter of the alphabet.

[00:49] <codesections> stanrifkin: I wondered about the runtime vs compile time thing and asked on Stack Overflow.  Johnathan Worthington provided a very informative answer: https://stackoverflow.com/questions/63484454/what-type-checks-does-raku-perform-at-compile-time-may-that-change-in-the-futur

[00:49] <[Coke]> Seemed a reasonable plan after we had to name the first release Christmas.

[00:50] <[Coke]> btw: I vote for Kolęda for K. :)

[00:50] <codesections> Festivus for F?

[01:09] <jdv79> what is the one for e?

[01:14] <stanrifkin> maybe eastern? :)

[01:14] *** _jrjsmrtn joined
[01:15] <stanrifkin> holiday names for x, y, z are rare I think

[01:16] *** dogbert11 joined
[01:16] *** __jrjsmrtn__ left
[01:17] *** zacts joined
[01:18] *** ex_nihilo joined
[01:19] *** thundergnat left
[01:19] *** thundergnat joined
[01:20] *** molaf left
[01:24] *** Kaeipi left
[01:32] *** molaf joined
[01:44] *** frost-lab joined
[01:49] <codesections> Here's another Unicode puzzle for y'all:  Why does the second of these match when the first doesn't:

[01:49] <codesections> say 'a' ~~ /<:Uppercase_Mapping('A')>/; say 'a' ~~ /<:Name('LATIN SMALL LETTER A')>/

[01:49] <evalable6> codesections, rakudo-moar f352b6d33: OUTPUT: «Nil␤｢a｣␤»

[01:54] *** zacts left
[01:55] *** leont left
[01:58] <codesections> m: say 'a' ~~ /<:Age(1.1)>/ # also matches

[01:58] <camelia> rakudo-moar 85847d2f1: OUTPUT: «｢a｣␤»

[02:05] *** Manifest0 left
[02:06] *** Manifest0 joined
[02:41] *** stanrifkin_ joined
[02:44] *** stanrifkin left
[03:04] <AlexDaniel`> propdump: a

[03:04] <unicodable6> AlexDaniel`, https://gist.github.com/7a185b8941c9197b58f8461111472ad8

[03:04] <AlexDaniel`> u: aaAA

[03:04] <unicodable6> AlexDaniel`, U+1AAAA <reserved-1AAAA> [Cn] (𚪪)

[03:04] <unicodable6> AlexDaniel`, U+2AAAA CJK UNIFIED IDEOGRAPH-2AAAA [Lo] (𪪪)

[03:04] <unicodable6> AlexDaniel`, 31 characters in total (𚪪𪪪𺪪񊪪񚪪񪪪񺪪򊪪򚪪򪪠򪪡򪪢򪪣򪪤򪪥򪪦򪪧򪪨򪪩򪪪򪪫򪪬򪪭򪪮򪪯򺪪󊪪󚪪󪪪󺪪􊪪): https://gist.github.com/6bd0db277e1cef681070445e14f81e45

[03:05] <AlexDaniel`> whoah

[03:05] <AlexDaniel`> not what I meant, but ok :)

[03:05] <AlexDaniel`> 6c: say 'a' ~~ /<:Uppercase_Mapping('A')>/; say 'a' ~~ /<:Name('LATIN SMALL LETTER A')>/

[03:06] <committable6> AlexDaniel`, ¦6c (46 commits): «Nil␤｢a｣␤»

[03:06] <AlexDaniel`> codesections: I have no idea. It should match I think

[03:09] <AlexDaniel`> interesting conversation :) https://news.ycombinator.com/item?id=21638145

[03:09] *** ensamvarg3 joined
[03:40] *** Mawile joined
[03:44] *** Archenoth left
[04:44] *** nativecallable6 left
[04:44] *** bisectable6 left
[04:44] *** greppable6 left
[04:44] *** statisfiable6 left
[04:44] *** evalable6 left
[04:44] *** bloatable6 left
[04:44] *** unicodable6 left
[04:44] *** linkable6 left
[04:44] *** squashable6 left
[04:44] *** releasable6 left
[04:44] *** quotable6 left
[04:44] *** coverable6 left
[04:44] *** sourceable6 left
[04:44] *** committable6 left
[04:44] *** benchable6 left
[04:44] *** notable6 left
[04:44] *** reportable6 left
[04:44] *** tellable6 left
[04:44] *** shareable6 left
[04:44] *** tellable6 joined
[04:44] *** releasable6 joined
[04:44] *** evalable6 joined
[04:45] *** quotable6 joined
[04:45] *** reportable6 joined
[04:45] *** statisfiable6 joined
[04:45] *** coverable6 joined
[04:46] *** shareable6 joined
[04:46] *** bisectable6 joined
[04:46] *** greppable6 joined
[04:46] *** sourceable6 joined
[04:46] *** committable6 joined
[04:46] *** bloatable6 joined
[04:46] *** benchable6 joined
[04:46] *** linkable6 joined
[04:46] *** nativecallable6 joined
[04:46] *** notable6 joined
[04:46] *** unicodable6 joined
[04:47] *** squashable6 joined
[04:55] *** aluaces joined
[05:25] *** molaf left
[05:31] *** bocaneri joined
[05:58] *** marcoco[m] joined
[06:01] *** _jrjsmrtn left
[06:04] *** stoned75 joined
[06:09] *** ufobat joined
[06:16] *** rindolf joined
[06:20] *** stoned75 left
[06:23] *** aborazmeh joined
[06:23] *** aborazmeh left
[06:23] *** aborazmeh joined
[06:33] *** pecastro joined
[06:36] *** sena_kun joined
[06:38] *** ex_nihilo left
[06:47] *** aborazmeh left
[06:48] *** aborazmeh joined
[06:48] *** aborazmeh left
[06:48] *** aborazmeh joined
[06:52] *** dylanwh left
[06:52] *** pnu__ left
[06:53] *** tbrowder left
[06:53] *** mithaldu_ left
[06:53] *** kawaii left
[06:53] *** dylanwh joined
[06:53] *** mrsolo left
[06:53] *** Grinnz left
[06:53] *** dog_star left
[06:53] *** pnu__ joined
[06:54] *** kawaii joined
[06:55] *** tbrowder joined
[06:56] *** Grinnz joined
[06:56] *** dog_star joined
[06:56] *** mrsolo joined
[06:57] *** stoned75 joined
[07:02] *** Altai-man joined
[07:04] *** sena_kun left
[07:09] *** mithaldu_ joined
[07:13] *** rindolf left
[07:18] *** rindolf joined
[07:27] *** Xliff joined
[07:28] *** domidumont joined
[07:31] *** __jrjsmrtn__ joined
[07:35] *** skids left
[08:16] <Xliff> What's the best way to find the calling ROUTINE of a method or sub?

[08:17] <Xliff> Could use callframe(), but it's not a definite thing. It can get caught in anonymous blocks, for one.

[08:18] <Xliff> So: "sub a { callframe(2) }" and "sub a { for ^1 { callframe(2); }" would return different results

[08:19] <Xliff> And don't get me started on backtrace.

[08:21] *** sjaveed left
[08:22] *** sjaveed joined
[08:22] *** Sgeo__ left
[08:23] *** frost-lab left
[08:26] *** sjaveed left
[08:29] *** orinthe4 joined
[08:29] *** orinthe left
[08:29] *** orinthe4 is now known as orinthe

[08:52] *** unclechu left
[08:52] *** AlexDaniel` left
[08:52] *** marcoco[m] left
[08:53] *** suzusime[m] left
[08:53] *** matiaslina left
[08:53] *** CIAvash left
[08:53] *** cheer[m] left
[08:57] <stanrifkin_> whats a application for binding an anonymous container? my $n = $; Why not directly use a variable?

[08:57] <lizmat> Xliff: I don't think there's anything other than looping over callframe and looking if the frame is a Routine ?

[08:58] <Xliff> Thanks, lizmat. That's what I am moving towards as well.

[09:00] *** sjaveed joined
[09:02] <stanrifkin_> of course my $n := $;

[09:06] *** sjaveed left
[09:14] *** suzusime[m] joined
[09:17] *** sjaveed joined
[09:19] *** suzusime[m] left
[09:21] *** sjaveed left
[09:22] *** mark[m]1 joined
[09:30] <timotimo> lizmat: fwiw, rakudo calls nqp::isprime_I with a rounds parameter of 100 regardless of the size of the number; doing 100 rounds is a little bit excessive for many numbers below 9999

[09:30] *** unclechu joined
[09:30] *** AlexDaniel` joined
[09:30] *** CIAvash joined
[09:30] *** matiaslina joined
[09:30] *** suzusime[m] joined
[09:30] *** cheer[m] joined
[09:31] <lizmat> perhaps we should allocate a bitmap for value <= 9999 ?  and check the bit?

[09:31] <lizmat> as a constant I mean

[09:32] *** cpan-raku left
[09:33] <timotimo> https://security.stackexchange.com/questions/4544/how-many-iterations-of-rabin-miller-should-be-used-to-generate-cryptographic-saf - this says "use 40 rounds", but it's for 1 kilobit big numbers

[09:33] *** cpan-raku joined
[09:33] *** cpan-raku left
[09:33] *** cpan-raku joined
[09:33] <timotimo> though it also says that since primes get sparser the further up you go, the number doesn't have to go higher even then?

[09:34] *** ensamvarg127 left
[09:35] *** ensamvarg127 joined
[09:37] *** leont joined
[09:42] <lizmat> making it 40 makes my @a = ^10000 .grep: *.is-prime more than 2x as fast

[09:43] *** Black_Ribbon left
[09:44] <timotimo> do note that we currently force numbers into bigints to do the prime test

[09:44] <timotimo> we never do "boring" long integer math for primality testing

[09:45] <timotimo> "Currently, the best known test with two bases due to Izykowski and Panasiuk[7] works untiln= 1 050 535 501. Hence, the best known tests forn <232havethree bases. The first such set was found by Jaeschke [8]. The best known setforn <264was found by Sinclair in 2011 (unpublished, verified by Izykowski)and has seven bases"

[09:46] <timotimo> those aren't 232 but 2 to the 32 and 2 to the 64

[09:46] <timotimo> http://ceur-ws.org/Vol-1326/020-Forisek.pdf - source

[09:59] *** stoned75 left
[10:00] *** MasterDuke left
[10:01] <timotimo> this will mean that we'll do is-prime for "small" numbers much faster, but also that is-prime ceases to be a good measure of a cpu-intensive task that we make much faster by parallelizing

[10:02] *** thundergnat left
[10:03] *** stoned75 joined
[10:12] *** stoned75 left
[10:18] *** Skarsnik joined
[10:20] *** rindolf left
[10:21] *** rindolf joined
[10:30] <Skarsnik> hm, how hard is to use the test harness? I have some test but I want a main script to run them according to different condition and repport what worked/fail x)

[10:37] *** abraxxa left
[10:45] <moritz> Skarsnik: there's two modules that could you with that, TAP and Test::Harness

[10:45] <moritz> haven't used either yet

[10:47] *** frost-lab joined
[10:48] *** mowcat joined
[10:48] *** ensamvarg3 left
[11:03] *** sena_kun joined
[11:03] *** stoned75 joined
[11:04] <Skarsnik> I will try to give it a try tomorrow (and stubble on 2-3 raku bug like always xD)

[11:04] *** Altai-man left
[11:08] *** stoned75 left
[11:12] *** mowcat left
[11:14] *** Skarsnik left
[11:16] *** ensamvarg127 left
[11:17] *** frost-lab left
[11:17] *** ensamvarg127 joined
[11:18] *** ensamvarg127 left
[11:20] *** ensamvarg is now known as ensamvarg195

[11:22] *** ensamvarg joined
[11:28] *** stanrifkin_ left
[11:30] *** stoned75 joined
[11:41] *** kst` joined
[11:43] *** kst left
[12:04] <codesections> m: say 'foo'.encode('utf32');

[12:04] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unknown string encoding: 'utf32'␤  in block <unit> at <tmp> line 1␤␤»

[12:04] *** sjaveed joined
[12:05] <codesections> ??? 'utf32' *looks* like it should be a known encoding.  It's in the registry, anyway: https://github.com/rakudo/rakudo/blob/master/src/core.c/Encoding/Registry.pm6#L18 

[12:13] *** Tirifto joined
[12:28] *** ufobat_ joined
[12:29] *** ufobat left
[12:29] <lizmat> m: dd "foo".encode("utf-32")   # it even normalizes it, but it looks like it is not supported at a deeper level

[12:29] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unknown string encoding: 'utf32'␤  in block <unit> at <tmp> line 1␤␤»

[13:07] <codesections> m: say utf32.new([0x66, 0x6f, 0x6f])

[13:07] <camelia> rakudo-moar 85847d2f1: OUTPUT: «utf32:0x<00000066 0000006F 0000006F>␤»

[13:07] <codesections> m: say utf32.new([0x66, 0x6f, 0x6f]).decode

[13:07] <camelia> rakudo-moar 85847d2f1: OUTPUT: «Unknown string encoding: 'utf32'␤  in block <unit> at <tmp> line 1␤␤»

[13:08] <codesections> Interesting; a manually constructed utf32 value, can't be decoded

[13:13] *** wamba joined
[13:20] *** ggoebel left
[13:21] *** mowcat joined
[13:23] *** stanrifkin joined
[13:27] *** mowcat left
[13:28] <lizmat> codesections: are you implying that reading a UTF-32 encoded file *does* work ?

[13:32] <codesections> lizmat: no, I didn't try anything with files.  I was just surprised at the failure -- given the behavior of 'foo'.encode('utf32'), I thought that utf32.new(…) might fail; if it succeeded, I thought it might be decodable 

[13:33] <lizmat> I guess it's a case of NYI   :-(

[13:40] <codesections> hmm, I guess I'll open an issue (at the very least, it should have a NYI error message).  But I think I'll open an issue on MoarVM -- it looks like that's where the functionality is missing

[13:46] <lizmat> yeah, looks like

[13:54] *** aluaces left
[14:15] *** wamba left
[14:22] <colomon_> lizmat++

[14:25] *** Sgeo joined
[14:31] *** zakame joined
[14:59] *** molaf joined
[15:02] *** Altai-man joined
[15:04] *** molaf left
[15:05] *** sena_kun left
[15:13] *** xinming_ joined
[15:16] *** xinming left
[15:19] <guifa> I think I’m getting the hang of webperl+Raku

[15:19] <guifa> It’s a little weird, classes are maintained in global scope, but subs aren’t

[15:20] <guifa> But I got it to now run localized exceptions messages’ code, so localizers can get instant feedback.  Just need to figure out how to capture syntax errors now

[15:24] * [Coke] yawns

[15:28] *** skids joined
[15:31] *** marc53 joined
[15:31] <marc53> hi

[15:33] <marc53> i want a irc chat client for windows10

[15:33] <marc53> Can someone recommend one for me

[15:33] <marc53> I was actually exposed to IRC for the first time

[15:34] <timotimo> are you looking for anything in particular in terms of features?

[15:34] *** zacts joined
[15:34] <timotimo> would you like a desktop program, a web-browser app, a hosted solution, something for in a terminal?

[15:34] <marc53> Beautiful, modern

[15:35] <marc53> desktop

[15:35] <timotimo> in that case i'm a little out of my depth, but when you're searching it's good to know that you can reach irc via the matrix network as well

[15:35] <timotimo> well, at least freenode has a bridge to matrix

[15:35] <marc53> i dont know how bridge

[15:36] <marc53> iLet me search for bridge methods

[15:37] <timotimo> oh, you literally just give it a specially formatted channel name and matrix will put you in contact with irc

[15:37] <timotimo> when you have a matrix client

[15:37] <marc53> i have gitter

[15:37] <timotimo> if it didn't have to be a desktop app, i would have recommended glowing-bear, but it also requires a weechat to run somewhere, like on a server you own :D

[15:37] <timotimo> many people swear on irccloud, but i think it's paid?

[15:38] <codesections> marc53: I'm *also* 100% the wrong person to give advice here (I don't use Windows, and I tend not to like beautiful or modern desktop apps).  All that said, I've heard really good things about The Lounge https://thelounge.chat/

[15:38] <timotimo> HexChat is the most popular choice on alternativeto.net, so that could be worth a try

[15:39] *** thelounge0906 joined
[15:39] <thelounge0906> hey this isn't too bad

[15:41] *** kiti_nomad[m] joined
[15:41] <kiti_nomad[m]> is me

[15:41] <kiti_nomad[m]> i got

[15:41] <timotimo> marc?

[15:41] <marc53> yes

[15:42] *** marc53 left
[15:42] <kiti_nomad[m]> i am a chinese

[15:42] <kawaii> timotimo: I've been using irccloud for 2 years now and there's no way I'd switch to anything else

[15:43] <kawaii> It's basically as "just works" as Discord is but for IRC

[15:44] <timotimo> funny this topic just came up, i was just getting fed up with Ripcord and am now looking what other alternative discord clients exist

[15:45] <kiti_nomad[m]> Some of us are newbies and we are very interested in Raku

[15:45] <timotimo> cool!

[15:45] <timotimo> you have come to the right place

[15:46] <kawaii> Raku is very newbie friendly :)

[15:46] <timotimo> please feel free to ask as many questions as you want

[15:46] <kawaii> timo basically writes all my code for me

[15:47] <kiti_nomad[m]> We want to communicate raku with you, but it seems that we are not good at using IRC

[15:47] <timotimo> if discord is okay, there is a raku discord server, too

[15:47] <kiti_nomad[m]> Discord is not available in China

[15:47] <timotimo> OK, no problem!

[15:48] <timotimo> there is a bot here on IRC that can run code for you

[15:48] <timotimo> do i remember correctly that github is blocked in china?

[15:48] <timotimo> most raku things, the compiler and many, many modules, are on github, sadly

[15:50] <kiti_nomad[m]> In fact, the Internet is made up of three local area networks: Russia and the former Soviet Union, China, the United States and its Allies

[15:50] *** molaf joined
[15:50] <kiti_nomad[m]> Yes, almost everything, China has something similar

[15:52] <kiti_nomad[m]> But GitHub belongs to Microsoft and is sometimes accessible, sometimes not.But we use our own similar products

[15:57] <timotimo> it's annoying that github has the monopoly on code hosting in the english-speaking world :|

[15:57] <timotimo> of course, git itself is distributed, but there's no interoperability with github issues, wiki, pull-requests, reviews, etc etc

[15:59] <kiti_nomad[m]> The network is not a problem, the problem is that python gets almost all the attention, and very few people learn and use perl.

[15:59] <codesections> not *quite* a monopoly! In particular, I'm really excited with what sourcehut has been doing lately.  Much like Raku/Perl, it's done carefully by a small, fully open source team, which means it doesn't roll things out as quickly as a Microsoft/Google/etc project.  But what it has is *really* solid

[15:59] <codesections> https://sourcehut.org/

[16:00] <timotimo> oh? i haven't heard that name yet

[16:00] <kiti_nomad[m]> In fact, most of the time GitHub is accessible in China, but it's not very smooth.

[16:01] <codesections> it's 100% free software.  You can run it yourself or pay for a hosted repo

[16:01] <timotimo> when you host it yourself, does it seamlessly interact with other sourcehut installations? aka "federated"?

[16:01] <codesections> Yeah

[16:01] <stanrifkin>  codesections: not pushed by big companies is a feature. look what happend to all things they touched..

[16:02] <codesections> though, in fairness, most of that comes from git itself

[16:02] <codesections> (the federated features, I mean)

[16:02] <codesections> stanrifkin: Agreed!

[16:02] <timotimo> so how do issues and pull requests across sourcehut instances work?

[16:04] <codesections> That's probably the biggest barrier to adoption: it's mostly built around the git-send-email workflow (i.e., the way Linux/Git/etc do their development) instead of a fork-and-pr workflow.  Which takes some adjustment, but is inherently federated

[16:05] <timotimo> that doesn't sound too bad

[16:05] <timotimo> i wonder if webmentions would fit for making all that a little bit easier

[16:06] <codesections> (for issues, it supports both project mailing lists and repo ticket tracking.  Nothing about that, even in GitHub's model, requires sharing a server.)

[16:07] *** zacts left
[16:08] <kiti_nomad[m]> raku's official website looks very old-fashioned

[16:08] <kiti_nomad[m]> But it has many modern language features

[16:09] <kiti_nomad[m]> It also looks more concise than Perl in terms of syntax

[16:10] <codesections> timotimo: the sourcehut maintainer had a blog post about a related issue (discussing ActivityPub instead of webmentions, but the same general idea) https://drewdevault.com/2018/07/23/Git-is-already-distributed.html

[16:10] *** squashable6 left
[16:11] <timotimo> cool i'll read it

[16:13] *** squashable6 joined
[16:13] <timotimo> email is already standardised ... though of course also a frickin clusterfuck of crap

[16:16] <timotimo> well, at least as you have someone to set up and administrate your email server for you it isn't all that bad

[16:17] <codesections> yeah, well, the sourcehut maintainer (Drew DeVault) is *also* working on fixing that.  He's pushing for better support for plaintext email (https://useplaintext.email/) and is the maintainer of a new TUI email client (https://aerc-mail.org/)

[16:17] <codesections> he's also the lead dev of Sway (the Wayland window manager inspired by i3).  I honestly don't know how he does it all...

[16:18] <timotimo> cool

[16:20] <kiti_nomad[m]> http://zh.perl6intro.com/

[16:21] <kiti_nomad[m]> Some people have translated raku's introductory tutorial

[16:22] <kiti_nomad[m]> And the quality looks very good, which is a good sign

[16:22] <guifa> kiti_nomad[m]:  we also have someone working to translate Raku’s error messages into Chinese (but zh-Hant, not zh-Hans), though it will probably be a few weeks before it’s ready

[16:22] * guifa pokes rypervenche 

[16:23] *** aborazmeh left
[16:23] <codesections> haha, guifa I was just about to mention the work you've been doing to pull off the ability to have localize error messages (which is not at all trivial!)

[16:24] <guifa> codesections: actually, once I figured out how to do it, it IS trivial.  It’s just making it user-friendly for the translator is not lol

[16:24] <rypervenche> Yep, I haven't had a chance to do much on it recently with day job and birthday happening over the weekend. I'll get back into it once I've got a little time on my hands.

[16:25] <codesections> rypervenche: happy birthday!

[16:25] <rypervenche> haha, thanks

[16:25] <guifa> rypervenche: I’ve actually just about got a webinterface ready to go, and it will even have in-browser testing (via webperl) of the localized code.  Should make things MUCH easier

[16:25] <guifa> and happy birthday!

[16:25] <rypervenche> Ooooh, very nice.

[16:27] <timotimo> yo happy birthday

[16:28] <kiti_nomad[m]> good night

[16:29] <guifa> kiti_nomad[m]: wan’an

[16:29] <timotimo> talk to you later kiti_nomad[m]!

[16:29] <kiti_nomad[m]> 你是哪里人

[16:30] <timotimo> all i know to say is "nihao" and i probably have to put a _ above one of these letters

[16:31] <rypervenche> 這裡有人多美國人和歐洲人 :) We've got people from all over.

[16:32] <rypervenche> kiti_nomad[m]: By the way, you should use this guide instead: https://raku.guide/zh/

[16:33] <kiti_nomad[m]> 这不重要，但是我不会和他们一样愚蠢得保持生活中的各种政治正确

[16:33] *** zacts joined
[16:34] <rypervenche> We shold probably keep the chat in English so that everyone can understand. :)

[16:34] <guifa> timotimo: I cheated and looked it up ha.  Would be nice to learn Chinese one day, but sadly I’ve got a few ahead of it in my list (Latin is next, because $day-job)

[16:35] *** aluaces joined
[16:36] <kiti_nomad[m]> English is json/xml in language

[16:36] <kiti_nomad[m]> for being

[16:37] <timotimo> ahaha

[16:38] <timotimo> {   "foo":    [true,null,1.23, {  "bar":"spam" }    ]  }

[16:39] <timotimo> <object xmlns="http://www.xmlsh.org/jxml">    <member name="foo">       <array>          <boolean>true</boolean>          <null/>          <number>1.23</number>          <object>             <member name="bar">                <string>spam</string>             </member>          </object>       </array>    </member> </object>

[16:39] <codesections> guifa: you need to learn *Latin* for purely practical reasons?  I'm shocked :D 

[16:39] <timotimo> medicine-related?

[16:39] *** zacts left
[16:39] <guifa> I mean, I regularly read texts that are 400+ years old :-)

[16:40] <rypervenche> language nerd

[16:40] * guifa does medieval and golden age Spanish literature

[16:41] <codesections> very cool.  So you're not a programmer in $day-job?  Or do you program medieval literature?  (either one sounds pretty awesome, actually)

[16:42] <timotimo> ahaha, "shit" is an implementation of git in posix sh

[16:42] <guifa> timotimo: lolol

[16:43] <codesections> haha, I'd forgotten about that!

[16:43] <guifa> codesections: Actually, my dissertation was all about processing transcriptions of a medieval text to diff them while preserving abbreviations, etc, and then creating a usable digital edition out of it

[16:43] *** approaching236 joined
[16:43] <timotimo> the codehub guy has a recording from his livestream where he implemented that on his peertube

[16:44] <timotimo> just four hours

[16:44] <timotimo> and fourty minutes

[16:45] <codesections> timotimo: s/codehub/sourcehut/

[16:45] <guifa> and speaking of $day-job, time to go learn them kids some Spanish

[16:45] <codesections> guifa: wow, that sounds really cool

[16:45] <timotimo> um, yes, exactly

[16:45] <codesections> living the dream

[16:47] *** domidumont left
[16:52] *** zakame left
[16:52] <rypervenche> lizmat: So, I know I've waited until the very last minute. JJ hasn't been around when I'm online to ask about anything that I could commit. guifa has given me something that I could create a PR for, but I imagine it's really cutting it too close. Would it be worth it to try to get that in in time for a vote with only 1 or 2 days left, or should I just wait until next year?

[16:52] *** zakame joined
[16:55] <[Coke]> got 4 people that aren't showing up in jdv's output as having permission in any of the 5 repos.

[16:56] <[Coke]> if that's about RSC voting, you need a commit bit to vote, not a commit.

[16:58] *** aluaces left
[16:58] *** stoned75 left
[16:59] <rypervenche> Ahh, I suppose I don't know what a commit bit is then.

[16:59] <[Coke]> (RSC) which makes me ask - having a commit (e.g. through an approved PR) does not imply you get voting rights from that repo, right?

[16:59] <[Coke]> commit bit == permission to commit

[17:00] <[Coke]> it's about the right, not whether or not something was actually comitted.

[17:00] <[Coke]> as I understand it.

[17:02] *** stoned75 joined
[17:08] <timotimo> yeah, i believe this is about the right to directly push commits to a repo

[17:08] <timotimo> which is also what you get when someone "gives you a commit bit"

[17:11] <rypervenche> Ahh, then I guess I shouldn't have been worrying about this to begin with.

[17:26] *** aluaces joined
[17:30] *** JJ[m]1 joined
[17:31] *** JJ[m]1 is now known as JJAtria[m]

[17:32] *** El_Che left
[17:52] *** kylese joined
[17:59] *** stoned75 left
[18:05] *** stoned75 joined
[18:15] *** Skarsnik joined
[18:26] *** bocaneri left
[18:28] *** leont left
[18:33] *** El_Che joined
[18:33] *** El_Che left
[18:34] *** El_Che joined
[18:40] *** thundergnat joined
[18:42] <thundergnat> codesections: you may also be interested in Rakudo issue R#3293

[18:42] <linkable6> R#3293 [open]: https://github.com/rakudo/rakudo/issues/3293 [docs] utf32 encode documented but not implemented

[18:42] *** thundergnat left
[18:44] <codesections> thanks, I'll link the two issues

[18:51] *** thelounge0906 left
[18:57] <lizmat> [Coke]: yeah, commit bit is what we agreed on... it would be rather late to change that rule now

[19:00] *** sameer joined
[19:00] *** wamba joined
[19:02] *** stoned75 left
[19:03] *** sena_kun joined
[19:05] *** Altai-man left
[19:08] *** maggotbrain left
[19:10] *** maggotbrain joined
[19:14] *** MasterDuke joined
[19:19] *** Black_Ribbon joined
[19:39] *** stoned75 joined
[19:42] *** vgrato_ joined
[19:43] <[Coke]> It would be fine if I listed some github IDs here that have voted but I can't find commit bits for, yes?

[19:44] *** approaching236 left
[19:44] <timotimo> we're not "naming and shaming", right?

[19:44] <Xliff> m: my $r = 'a b+ c'; my $test = 'abbbc'; say $test ~~ / <$r> /;

[19:44] <camelia> rakudo-moar 85847d2f1: OUTPUT: «｢abbbc｣␤»

[19:44] <timotimo> just debugging the process

[19:44] <Xliff> m: my $r = 'a (b+) c'; my $test = 'abbbc'; say $test ~~ / <$r> /;

[19:44] <camelia> rakudo-moar 85847d2f1: OUTPUT: «｢abbbc｣␤»

[19:45] <Xliff> m: my $r = 'a (b+) c'; my $test = 'abbbc'; say ($test ~~ / <$r> /).gist;

[19:45] <camelia> rakudo-moar 85847d2f1: OUTPUT: «｢abbbc｣␤»

[19:45] <Xliff> m: my $r = 'a (b+) c'; my $test = 'abbbc'; say ($test ~~ / $<o>=<$r> /).gist;

[19:45] <camelia> rakudo-moar 85847d2f1: OUTPUT: «｢abbbc｣␤ o => ｢abbbc｣␤  0 => ｢bbb｣␤»

[19:47] <jdv79> how many are there?

[19:48] *** wamba left
[19:50] <[Coke]> timotimo: wouldn't show anything about their ballot, just their github ID to verify they are eligible.

[19:50] <Skarsnik> timotimo, did you made a docker img or something of your profiler viewer? xD

[19:52] <codesections> [Coke]: I don't see anything wrong with it, personally.  The plan all along (as you communicated before the voting started) has been to release the github IDs of people who voted.  So you wouldn't be releasing any info that would otherwise have been private -- just releasing it a bit earlier 

[19:55] <jdv79> well, some might be embarassed they made a mistake if they truly did.  but yeah there was no claim of privacy like that so i guess.  50 50 in my mind.

[19:56] <timotimo> Skarsnik: i wanted to! but i forgot about it :(

[19:58] <timotimo> Skarsnik: what's the best practice to offer a docker image that you can run from a folder and have access to that folder, or alternatively with a path to a file on the host filesystem that then gets exposed to the container?

[19:59] <Skarsnik> No idea xD

[19:59] <timotimo> how about an appimage instead? :3

[20:01] <Skarsnik> I was not a webapp ?

[20:01] <[Coke]> https://gist.github.com/coke/07f167179135f6a868b6a0d526d5437e - ids of people who have voted that I haven't been able to verify.

[20:01] *** zakame left
[20:04] <timotimo> it is a webapp

[20:05] <timotimo> the files are a little bit big, though, so i don't want to have to pump it through a web browser

[20:05] <timotimo> and i would probably prefer if people wouldn't run it on a different machine and just access it over http

[20:05] <timotimo> that's just me tho

[20:15] <Skarsnik> I don't remember how it run, appname profil.txt ?

[20:27] *** rindolf left
[20:39] <timotimo> point service.p6 at the profile.sql or profile.mvmheap

[20:46] *** stoned75 left
[21:08] *** sameer left
[21:09] <guifa> [Coke]: ah, then sorry I guess I shouldn’t have voted.  I just had an approved PR but not a commit bit

[21:23] *** vrurg_ joined
[21:27] *** vrurg left
[21:28] <timotimo> another 8 minutes of waiting for ci to do its thing ...

[21:29] *** sena_kun left
[21:30] <MasterDuke> i really would have liked to have voted for more than 5

[21:32] <timotimo> hey, if i get the appimage thing to work, that'd be pretty cool for everybody to steal

[21:33] <Skarsnik> I could vote on stuff, but I am not sure I follow enought stuff to make a good decision xD

[21:35] <lizmat> Skarsnik: make the best decision you can: there are no bad decisions at this time, only in hindsight

[21:35] <lizmat> :-)

[21:41] *** nexysno joined
[21:48] <guifa> writing Raku code inside of Javascript to convert a Raku string into an escaped JavaScript string gives me horrible flashbacks of perl regex writing

[21:48] <guifa> so many backslashes

[21:50] *** Kaiepi joined
[21:51] <timotimo> "updating cpan mirror" ... ... ... ...

[21:52] <timotimo> nooooooo

[21:52] <timotimo> Enabled fetching backends [git path curl wget] don't understand http://www.cpan.org/authors/id/J/JN/JNTHN/Perl6/IO-Socket-Async-SSL-0.7.5.tar.gz

[21:53] <timotimo> is there something you'd normally install from the system on travis for zef to work?

[21:54] <timotimo> like, can tar be missing?

[21:54] <Skarsnik> no idea

[21:54] <Skarsnik> work kinda fine on wsl2

[21:57] <codesections> guifa: I'm kind of surprised that you can't use one of Raku's many quoting constructs to avoid the need for *too* many backslashes

[21:58] <codesections> also, obligatory xkcd: https://xkcd.com/1638/

[22:06] *** aborazmeh joined
[22:06] *** aborazmeh left
[22:06] *** aborazmeh joined
[22:08] <timotimo> is "updating cpan mirror" slow because of slow json parsing?

[22:08] <timotimo> i think that writes a slightly faster-to-parse cache file

[22:09] <timotimo> well, something does, anyway

[22:11] <timotimo> ummmm what on earth

[22:11] <timotimo> i didn't change anything and it suddenly works

[22:14] *** kylese left
[22:16] *** wamba joined
[22:22] *** aindilis joined
[22:23] *** mowcat joined
[22:28] *** skids left
[22:31] <El_Che> timotimo: sometimes travis's network shaly

[22:31] <El_Che> shaky

[22:32] <timotimo> oh, hmm

[22:32] <timotimo> perhaps the fetcher failed because network trouble and i just misinterpreted it as "it didn't know what to do with a targz file"

[22:33] <El_Che> I think so

[22:33] <MasterDuke> timotimo: think it makes sense to make an nqp::isprime_i that uses the 64-bit algorithm in that paper?

[22:34] <timotimo> perhaps. could also make it a "syscall" so we don't "waste" an opcode :P

[22:35] <timotimo> whew, ZEF_PLUGIN_DEBUG has quite a bit of output :D

[22:37] <MasterDuke> or just add a branch in MVM_bigint_is_prime?

[22:38] <timotimo> well, in there we can have 32bit integers

[22:38] <timotimo> signed, though

[22:39] <timotimo> in theory, we might be able to get away with a smaller hash table, since we've only got to cover half as many numbers

[22:40] <MasterDuke> hm. guess we could have both a branch in there that does the 32-bit version and an nqp::isprime_i that does the 64-bit version

[22:41] *** Xliff left
[22:41] <timotimo> true

[22:41] <timotimo> for the 64 bit numbers we can also check if it's in range for 32bit as well and skip to that algorithm

[22:45] <MasterDuke> i wonder if that'll be faster than https://github.com/rakudo/rakudo/pull/3923 ?

[22:48] <MasterDuke> i probably should get https://github.com/MoarVM/MoarVM/pull/1344 finished first (and by that i mean bother enough other people who know more to find the problem)...

[22:49] <timotimo> oh my

[22:50] <timotimo> everything we write in C directly has, in theory, the ability to be faster than what we write with nqp ops

[22:50] <timotimo> we'd have to see how things turn out

[22:51] <timotimo> and for a sanity test, if most of the logic goes into moarvm, we'd probably want to have a stresstest that does sieve of erathostenes or so

[22:51] <timotimo> not sure if that'd be tough for the first 100k integers

[22:52] *** aborazmeh left
[22:56] <timotimo> i can't get travis to be happy with the shell script i downloaded from the appimage repo that's supposed to do the building for me

[22:57] <MasterDuke> there are lists of primes, why not just slurp one in an nqp test and see if the list matches a grep on the first however many integers?

[22:58] <timotimo> dunno

[22:59] <MasterDuke> anyway, to bed...

[23:16] *** Tirifto left
[23:29] *** pecastro left
[23:39] *** mowcat left
