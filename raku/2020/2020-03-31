[00:18] *** caterfxo joined
[00:29] *** Tirifto left
[00:31] *** helit joined
[01:09] *** markoong left
[01:40] *** molaf left
[01:53] *** molaf joined
[01:55] *** MasterDuke left
[02:11] *** Doc_Holliwould left
[02:32] <cpan-raku> New module released to CPAN! Colorizable (0.1.1) by 03UZLUISF

[02:36] *** regreg joined
[02:42] *** regreg left
[02:43] *** wamba joined
[02:47] *** regreg joined
[03:06] *** upupbb-user3 left
[03:17] *** upupbb-user3 joined
[03:49] *** pilne left
[04:25] *** cognominal left
[04:30] *** molaf left
[04:35] *** upupbb-user3 left
[04:51] *** hungrydonkey joined
[05:00] *** hungrydonkey46 joined
[05:02] *** hungrydonkey left
[05:17] *** cognominal joined
[05:20] *** NODE left
[05:22] *** NODE joined
[05:33] *** wamba left
[05:34] *** CIAvash joined
[05:40] *** lichtkind left
[06:08] *** sjm_uk joined
[06:15] *** vike1 left
[06:28] *** Doc_Holliwould joined
[06:29] *** hungrydonkey46 left
[06:30] *** hacktor joined
[06:40] *** k-man joined
[06:48] *** hungrydonkey joined
[07:01] *** hacktor left
[07:02] *** hacktor joined
[07:18] *** MasterDuke joined
[07:33] *** rindolf joined
[07:39] *** dakkar joined
[07:39] *** dakkar left
[07:39] *** dakkar joined
[07:49] *** pecastro joined
[07:56] *** wamba joined
[08:04] *** stoned75 joined
[08:15] *** hungrydonkey left
[08:30] *** stoned75 left
[08:34] *** Doc_Holliwould left
[08:56] *** NODE left
[08:58] *** NODE joined
[09:03] *** squashable6 left
[09:05] *** squashable6 joined
[09:18] *** upupbb-user3 joined
[09:24] *** holyghost left
[09:34] *** cognomin_ joined
[09:37] *** cognominal left
[09:50] *** NODE left
[09:52] *** Black_Ribbon left
[09:52] *** NODE joined
[09:54] *** pecastro left
[09:55] *** pecastro joined
[10:11] *** SQuoll left
[10:12] *** SQuoll joined
[10:12] *** cognominal joined
[10:15] *** cognomin_ left
[10:20] *** telex left
[10:21] *** telex joined
[10:22] *** chloekek joined
[10:23] *** natrys joined
[10:28] *** __jrjsmrtn__ joined
[10:29] *** _jrjsmrtn left
[10:31] *** MasterDuke left
[10:32] *** wamba left
[10:43] *** aborazmeh joined
[10:43] *** aborazmeh left
[10:43] *** aborazmeh joined
[10:47] <iviv> `raku --doc=Markdown` mangles MAIN argument names in the output, this would be super cool to get fixed: https://github.com/softmoth/perl6-pod-to-markdown/issues/18 ‚Äî I'll take a look if I have time later this week

[10:48] *** dansolo42 left
[10:48] *** dansolo42 joined
[10:49] *** aborazmeh left
[10:51] <iviv> Related to MAIN subs, is there a module to generate shell (bash/zsh/fish) completions for my script? 

[10:52] *** wamba joined
[10:53] *** aborazmeh joined
[10:53] *** aborazmeh left
[10:53] *** aborazmeh joined
[11:01] *** aborazmeh left
[11:06] *** finsternis left
[11:11] *** rbt left
[11:11] *** rbt joined
[11:14] *** markoong joined
[11:20] *** holyghost joined
[11:22] *** markong joined
[11:22] *** markoong left
[11:27] * lizmat clickbaits https://rakudoweekly.blog/2020/03/30/2020-13-noconf-reached/

[11:54] *** regreg left
[11:55] <El_Che> iviv: it sounds like a great weekend project :)

[11:59] *** mensvaga joined
[12:03] *** hungrydonkey joined
[12:04] *** aborazmeh joined
[12:05] *** aborazmeh left
[12:05] *** aborazmeh joined
[12:11] *** kensanata joined
[12:17] *** lichtkind_ joined
[12:25] *** PacoLinux joined
[12:25] *** rbt left
[12:27] *** lichtkind_ is now known as lichtkind

[12:29] *** squashable6 left
[12:31] *** squashable6 joined
[12:37] *** hungrydonkey left
[12:39] *** hungrydonkey joined
[12:41] *** MasterDuke joined
[12:41] *** kensanata left
[12:42] *** rbt joined
[13:00] *** lichtkind left
[13:03] *** Altai-man_ joined
[13:10] *** epony left
[13:16] *** lichtkind joined
[13:19] *** epony joined
[13:19] <cpan-raku> New module released to CPAN! Scalar::Util (0.0.7) by 03ELIZABETH

[13:20] *** caterfxo is now known as mrwisdom

[13:34] *** roguelazer left
[13:35] *** roguelazer joined
[13:37] *** molaf joined
[13:39] *** cpan-raku left
[13:40] *** cpan-raku joined
[13:40] *** cpan-raku left
[13:40] *** cpan-raku joined
[13:49] *** aborazmeh left
[13:58] <cpan-raku> New module released to CPAN! Data::Record (0.1.0) by 03KAIEPI

[14:07] *** sena_kun joined
[14:08] *** Altai-man_ left
[14:08] <Kaiepi> ^ adds support for structural typings of maps!

[14:11] *** upupbb-user3 left
[14:12] *** hacktor left
[14:13] *** mowcat joined
[14:15] *** hacktor joined
[14:24] *** Actualeyes left
[14:32] *** lucasb joined
[14:39] *** Doc_Holliwould joined
[14:51] *** hungryd67 joined
[14:54] *** hungrydonkey left
[14:55] *** mjsir911 joined
[14:59] *** |oLa| joined
[15:13] *** chloekek left
[15:14] *** Actualeyes joined
[15:17] *** |oLa| left
[15:51] <timotimo> Kaiepi: pretty cool

[15:57] *** hungryd67 left
[15:57] *** hungrydonkey joined
[16:00] *** |oLa| joined
[16:05] *** Altai-man_ joined
[16:08] *** sena_kun left
[16:08] *** orinthe3 joined
[16:09] *** orinthe left
[16:09] *** orinthe3 is now known as orinthe

[16:10] *** chloekek joined
[16:21] <Doc_Holliwould> https://github.com/manwar/perlweeklychallenge-club/blob/master/challenge-054/markus-holzer/raku/ch-2.p6 vs https://github.com/manwar/perlweeklychallenge-club/blob/master/challenge-054/markus-holzer/perl/ch-2.pl

[16:21] <Doc_Holliwould> the raku version is more than times slower :-/

[16:22] <Doc_Holliwould> it gets especially bad when n > 10**5

[16:22] <Doc_Holliwould> do hashes get slower as they grow?

[16:24] <Doc_Holliwould> *10 times

[16:26] <Altai-man_> Doc_Holliwould, hashes are not really fast due to being not really optimized enough, maybe http://jnthn.net/papers/2019-perlcon-performance.pdf can be interesting.

[16:26] *** |oLa| left
[16:26] <jjatria> My Termbox library depends on LibraryMake, but sometimes it doesn't install because that dependency is not met, even though it is listed in META6.json

[16:26] <jjatria> https://gitlab.com/jjatria/raku-termbox/-/issues/6

[16:26] <jjatria> Maybe I'm doing it wrong?

[16:39] <Altreus> Is it correct to rethrow an exception if it's not one I want to handle? Just with .throw?

[16:39] <[Coke]> Probably more correct to not catch it in the first place.

[16:39] <Altreus> And does QUIT have the same semantics as CATCH?

[16:40] <Altreus> How do I only catch some exceptions? It doesn't work like Java :/

[16:40] <Altreus> The end of the supply is fine, that's when we disconnect... but if the supply throws an exception, we try to reconnect

[16:41] <Altreus> Should I supply a value that means reconnect instead?

[16:42] <[Coke]> https://docs.raku.org/language/phasers#CATCH shows an example on how to deal with specific types (in the CONTROL) example

[16:43] <Altreus> I guess I could fail?

[16:43] <Altreus> I'm currently just using my own exception so I can catch it

[16:43] <Altreus> Is that not how it's done in Raku?

[16:44] <[Coke]> If you use your own exception, you should be able to use the when block there and just ignore other types

[16:45] <cpan-raku> New module released to CPAN! Scalar::Util (0.0.8) by 03ELIZABETH

[16:46] <Altreus> Ah, that defuses it 

[16:46] <Altreus> Gotcha

[16:46] <Altreus> No need to re-throw :)

[16:47] *** mniip left
[16:48] *** dakkar left
[16:51] *** mniip joined
[16:51] <Altreus> Can anyone explain the design behind the base Exception not having a simple $.message? It seems odd to require every derived class to define the method

[16:51] <Altreus> Especially not to have a built-in exception-with-message

[16:52] <chloekek> p6: multi sub f() {}; multi sub f(Int:D $x) {}; f(~1)

[16:52] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Calling f(Str) will never work with any of these multi signatures:‚ê§    () ‚ê§    (Int:D $x)‚ê§at <tmp>:1‚ê§------> 3i sub f() {}; multi sub f(Int:D $x) {}; 7‚èè5f(~1)‚ê§¬ª

[16:52] <MasterDuke> Doc_Holliwould: it isn't really any faster, but your printing at the end could be simplified in raku to `say "n: $_.key(), length: $_.value()" for %result.sort(-*.value).head( 20 );`

[16:53] <Altreus> p6: multi sub f() {}; multi sub f(Int():D $x) {}; f(~1) # ?

[16:53] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Invalid typename 'D' in parameter declaration.‚ê§at <tmp>:1‚ê§------> 3multi sub f() {}; multi sub f(Int():D7‚èè5 $x) {}; f(~1) # ?‚ê§¬ª

[16:53] <Altreus> hmm

[16:53] <Altreus> p6: multi sub f() {}; multi sub f(Int:D() $x) {}; f(~1) # ?

[16:53] <camelia> rakudo-moar 478239e61: ( no output )

[16:53] <Altreus> ah!

[16:53] <chloekek> I want this to fail at runtime so I can test something.

[16:53] <chloekek> p6: multi sub f() {}; multi sub f(Int:D $x) {}; f(Nil)

[16:53] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Calling f(Nil) will never work with any of these multi signatures:‚ê§    () ‚ê§    (Int:D $x)‚ê§at <tmp>:1‚ê§------> 3i sub f() {}; multi sub f(Int:D $x) {}; 7‚èè5f(Nil)‚ê§¬ª

[16:53] <chloekek> p6: multi sub f() {}; multi sub f(Int:D $x) {}; my %xs; f(%xs<k>)

[16:53] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´Cannot resolve caller f(Any:U); none of these signatures match:‚ê§    ()‚ê§    (Int:D $x)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:53] <chloekek> p6: multi sub f() {}; multi sub f(Int:D $x) {}; my %xs; try { f(%xs<k>) }; say $!

[16:53] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´Cannot resolve caller f(Any:U); none of these signatures match:‚ê§    ()‚ê§    (Int:D $x)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:54] <chloekek> Weird, for me it reports $! is false.

[16:54] <chloekek> I will need to make a more elaborate example.

[16:55] <chloekek> Why does this return {status => ‚Äòok‚Äô}? https://glot.io/snippets/fm2ogloy3e

[16:56] <chloekek> The call to handle-request with three arguments should fail.

[16:56] <chloekek> It even goes as far as continuing after the call, to print ‚Äúhi‚Äù, but it does not print ‚Äúbye‚Äù.

[16:57] <daemon> Good day folks, I just had a friend in the uk mention this to me, just thought I would drop it out there bearing in mind the current world situation:  17:56> <pingu4> i just had a scam email from the "nhs" asking for donations

[16:57] <MasterDuke> chloekek: change your first multi to proto?

[16:58] <chloekek> hahahah thanks

[17:06] *** aluaces left
[17:11] <MasterDuke> timotimo: the code that Doc_Holliwould posted a little while ago *really* doesn't like being profiled. called with an N of just 1000 finished execution in 0.1s, but then spends a long time in MVM_profile_instrumented_mark_data and creates a 14mb profile. the times and files size increase dramatically with bigger N

[17:11] *** aluaces joined
[17:12] <AlexDaniel> cpan-raku: help

[17:12] <AlexDaniel> cpan-raku: source

[17:12] <MasterDuke> and then trying to --profile with N == 100000 segfaults in malloc

[17:15] *** PacoLinux left
[17:15] <Doc_Holliwould> MasterDuke: did i find a schlemiehl?

[17:19] <MasterDuke> there's some code that the profiler chokes on, even if the rest of raku is ok with it

[17:21] <Kaiepi> in Data::Record, i have a ::?ROLE:U candidate for the raku method that returns a string that you can EVAL to create the type with, but the problem is this makes some types of exceptions you can get with method calls virtually illegible

[17:21] <Kaiepi> would this fit better in gist or Str instead?

[17:24] <Kaiepi> the method being on record types, i mean

[17:34] *** phogg joined
[17:34] *** phogg left
[17:34] *** phogg joined
[17:41] <chloekek> How do I decontainerize the result of postcircumfix:<{ }>?

[17:42] <chloekek> p6: class C { has @.xs }; my %h = xs => [1, 2, 3]; say C.new(xs => %h<xs>)

[17:42] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´C.new(xs => [[1, 2, 3],])‚ê§¬ª

[17:46] <chloekek> p6: class C { has @.xs }; my %h = xs => [1, 2, 3]; say C.new(xs => %h<xs>.list)

[17:46] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´C.new(xs => [1, 2, 3])‚ê§¬ª

[17:48] *** AlexDaniel left
[17:55] *** lichtkind left
[17:56] *** lichtkind joined
[17:57] *** mowcat left
[17:59] *** upupbb-user3 joined
[18:02] <cpan-raku> New module released to CPAN! Date::Calendar::MayaAztec (0.0.1) by 03JFORGET

[18:04] *** hungrydonkey left
[18:06] *** sena_kun joined
[18:08] *** sjm_uk left
[18:08] *** Altai-man_ left
[18:16] *** |oLa| joined
[18:20] <[Coke]> .seen FROGGS

[18:20] <tellable6> [Coke], I saw FROGGS 2019-09-15T13:29:14Z in #perl6: <FROGGS> uhhh, that sounds awesome

[18:21] <[Coke]> is https://github.com/FROGGS/p6-JSON-Pretty an old version of that module?

[18:21] <[Coke]> just opened a few tickets, and then noted the readme mentions panda

[18:27] * [Coke] wonders if https://github.com/holli-holzer/raku-JSON-Pretty-Sorted/blob/master/lib/JSON/Pretty/Sorted.pm6 is a copy of https://github.com/FROGGS/p6-JSON-Pretty/blob/master/lib/JSON/Pretty.pm ... was going to complain about license change, but just noted that the FROGGS version has no license file.

[18:34] *** lichtkind left
[18:34] *** sjm_uk joined
[18:41] *** NODE left
[18:43] *** NODE joined
[18:55] <sena_kun> Anyone with Windows to test a little patch at https://github.com/sergot/openssl/pull/78 ? Mac users are welcome too.

[18:55] *** |Sno| left
[19:00] <Altreus> chloekek: does <> not work here?

[19:00] <chloekek> Where?

[19:00] <Altreus> p6: class C { has @.xs }; my %h = xs => [1, 2, 3]; say C.new(xs => %h<xs><>);

[19:00] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´C.new(xs => [1, 2, 3])‚ê§¬ª

[19:01] <Altreus> there

[19:01] <chloekek> Nice.

[19:01] <chloekek> p6: class C { has @.xs }; my %h = xs => [1, 2, 3]; say C.new(xs => %h<xs>[])

[19:01] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´C.new(xs => [1, 2, 3])‚ê§¬ª

[19:01] <chloekek> Thanks.

[19:04] <Altreus> oh hm

[19:04] <Altreus> I just rote-learned <> for decontainerisation

[19:04] <Altreus> I wonder if there's a technical difference there

[19:06] <lizmat> postcircumfix [] is the zen-slice, it returns "self", which is decontainerized

[19:06] <chloekek> At least these unpredictable encounters of unexpected containers convince the programmer to write unit tests.

[19:12] <Altreus> I do find containers show up when I didn't expect them

[19:12] <Altreus> They seem like an endemic feature from the low level that show up at the high level

[19:12] <lizmat> well, it was either that or have references  :-)

[19:13] <lizmat> but yeah, coming from other languages, such as Perl, containers are something you need to grok in Raku

[19:14] <chloekek> Speaking of WATs, I‚Äôve been staring at this query for ten minutes and then I found the problem:

[19:14] <chloekek> UPDATE jobs SET status = 1 AND tries_left = tries_left - 1 WHERE id = ?

[19:14] <lizmat> m: my Int $a; dd $a.VAR.of   # they also keep other info  :-)  Altreus

[19:14] <camelia> rakudo-moar 478239e61: OUTPUT: ¬´Int‚ê§¬ª

[19:15] <lizmat> s/AND/,/ 

[19:15] <chloekek> The AND should be a comma. It parses because tries_left = tries_left - 1 is a valid expression, that evaluates to false (0).

[19:15] <lizmat> yup

[19:15] <chloekek> PostgreSQL would have given a type error, that boolean is not an integer. :√æ

[19:21] <Altreus> I was happy with references :(

[19:25] *** |oLa| left
[19:27] *** B34Nz joined
[19:28] *** B34Nz left
[19:28] *** B34Nz joined
[19:28] *** B34Nz left
[19:35] *** maggotbrain joined
[19:50] *** sjm_uk left
[20:01] *** Black_Ribbon joined
[20:06] *** Altai-man_ joined
[20:08] *** dotdotdot left
[20:08] *** Tirifto joined
[20:09] *** sena_kun left
[20:10] *** [Sno] joined
[20:23] *** rindolf left
[20:24] *** dotdotdot joined
[20:57] *** Kaeipi joined
[20:57] *** Kaiepi left
[20:58] *** mowcat joined
[20:59] *** stoned75 joined
[21:01] *** pilne joined
[21:02] *** NODE left
[21:04] *** NODE joined
[21:05] *** NODE left
[21:07] *** NODE joined
[21:07] *** natrys left
[21:11] *** rbt left
[21:11] *** rbt joined
[21:20] *** kensanata joined
[21:30] *** mrwisdom left
[21:32] <domm> https://news.perlfoundation.org/post/tprcic_announce

[21:33] <[Coke]> OHAI domm

[21:33] <domm> hey

[21:33] *** kensanata left
[21:35] *** chloekek left
[21:43] *** Black_Ribbon left
[21:50] *** stoned75 left
[22:03] *** MasterDuke left
[22:04] *** mowcat left
[22:05] *** Black_Ribbon joined
[22:05] *** dogbert17 left
[22:05] *** dogbert17 joined
[22:07] *** sena_kun joined
[22:08] *** patrickb joined
[22:09] *** Altai-man_ left
[22:22] <patrickb> rba: There is once again a new rakubrew: version 9. Can you upload?

[22:22] <tellable6> 2020-03-30T07:32:22Z #raku-dev <rba> patrickb Updated rakubrew.org to v8 (v7 is up as well).

[22:22] <patrickb> rba: Thanks for the previous upload!

[22:22] <patrickb> .tell rba There is once again a new rakubrew: version 9. Can you upload?

[22:22] <tellable6> patrickb, I'll pass your message to rba

[22:23] *** patrickb left
[22:23] <[Coke]> is rakudobrew.org one of ours, or just rakubrew?

[22:24] <[Coke]> (the former site scares my copy of chrome)

[22:31] *** phogg left
[22:33] *** aborazmeh joined
[22:33] *** aborazmeh left
[22:33] *** aborazmeh joined
[22:37] *** MasterDuke joined
[22:46] *** Tirifto left
[22:47] *** k-man left
[22:51] *** lucasb left
[22:55] *** phogg joined
[22:55] *** phogg left
[22:55] *** phogg joined
[22:57] <rba> [Coke]: rakudobrew.org name servers is under our control. Yet I not configured properly yet.

[22:57] <tellable6> 2020-03-31T22:22:54Z #raku <patrickb> rba There is once again a new rakubrew: version 9. Can you upload?

[23:00] *** sena_kun left
[23:00] *** irced joined
[23:02] * irced enters in a heavy, hooded robe inconspicuously knocking over a lamp and tripping against a box which grates against the floor loudly.

[23:10] *** benlittle left
[23:13] <rba> patrickb: Updated¬†rakubrew.org¬†to v9. (remind me that I have to automate it SOON.)

[23:13] <tellable6> rba, I'll pass your message to patrickb

[23:13] *** benlittle joined
[23:17] *** wamba left
[23:17] *** upupbb-user3 left
[23:21] *** pecastro left
[23:33] *** lichtkind joined
[23:37] *** xelxebar left
[23:38] *** mensvaga left
[23:56] *** aborazmeh left
[23:57] *** lgtaube joined
