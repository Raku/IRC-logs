[00:00] <Voldenet> m: my @h; @h.push: <d>, <b c>; @h.perl.say; my ($val, @list) := do given @h { when :($, @) { @h }; default { (Any, ()) } }; [$val, @list].perl.say

[00:01] <Voldenet> xinming_: ^ the above should work

[00:01] *** Kaiepi joined
[00:04] <Voldenet> not sure if you can otherwise assign in destructuring signatures, it doesn't sound like something that should even be possible

[00:05] *** pecastro left
[00:18] *** hungrydonkey joined
[00:26] *** patrickz joined
[00:30] *** patrickb left
[00:38] *** stanrifkin joined
[00:44] <stanrifkin> i've got an linking error with rakudobrew 2020.01 "multiple definition of `cmp_tc'"

[00:45] <stanrifkin> anybody got the same error as me?

[00:55] *** patrickz left
[01:13] *** titsuki left
[01:16] *** wildtrees left
[01:17] *** ZZZzz left
[01:30] *** SqrtNegInf left
[01:32] *** rasch joined
[01:32] *** rasch is now known as rafsch

[01:34] *** sena_kun left
[01:35] *** __jrjsmrtn__ joined
[01:37] *** _jrjsmrtn left
[01:49] *** sena_kun joined
[01:58] *** ZZZzz joined
[02:31] *** molaf left
[02:32] *** Tirifto left
[02:43] *** molaf joined
[02:59] *** rafsch left
[03:01] *** stanrifkin left
[03:16] *** ZZZzz left
[03:30] *** leont left
[03:33] *** sena_kun left
[03:35] *** epony left
[03:36] *** epony joined
[03:37] *** epony left
[03:38] *** epony joined
[03:48] *** sena_kun joined
[03:58] *** ZZZzz joined
[03:59] *** ukine joined
[04:38] *** molaf left
[05:02] *** Itaipu joined
[05:05] *** Itaipu_ left
[05:14] <elcaro> how do i disable SSL verification in Cro

[05:14] <elcaro> similar to `-k` in curl, or `$ua->insecure(1)` in Mojolicious

[05:24] *** Itaipu_ joined
[05:25] *** Itaipu left
[05:29] *** xinming_ left
[05:29] *** xinming_ joined
[05:33] *** sena_kun left
[05:34] *** aborazmeh left
[05:36] *** Redfoxmoon joined
[05:37] *** Redfoxmoon left
[05:37] *** Redfoxmoon joined
[05:48] *** sena_kun joined
[05:54] <Voldenet> elcaro: probably Cro::HTTP::Client.get("whatever", :ca(insecure => True))

[05:57] <Voldenet> uh, `:ca(:insecure)`, even

[06:01] <Voldenet> Cro::HTTP::Client also has 'ca' property

[06:02] <Voldenet> s/property/attribute/

[06:12] *** |Sno| left
[06:15] *** Doc_Holliwould joined
[06:15] *** Doc_Holliwood joined
[06:16] *** sauvin joined
[06:26] *** erdic left
[06:27] *** erdic joined
[06:28] *** jmerelo joined
[06:29] *** hungryd91 joined
[06:29] *** hungrydonkey left
[06:30] *** epony left
[06:43] *** epony joined
[06:44] <stoned75> hi. can someone help me and tell me if this snippet is idiomatic enough ("rakuic" ?) ? Or how it can be made more idiomatic ? https://gist.github.com/stoned/66816a5c15b09340afab3f07263b7825

[06:44] <stoned75> the idea was to use Supply.first ;)

[06:49] <jmerelo> stoned75: there's no such thing as idiomatic in Raku. TIMTOWTDI

[06:49] <jmerelo> stoned75: that one looks fine, really

[06:49] <stoned75> I was sure someone would say this ;)

[06:50] <jmerelo> m:  m: my @results = gather for 1..1 { ^10 .map: *.take }; say @results

[06:50] <jmerelo> m: my @results = gather for 1..1 { ^10 .map: *.take }; say @results

[06:50] <jmerelo> Camelia has stopped working...

[06:53] *** nebuchadnezzar left
[06:53] <stoned75> my @results = gather for Real { ^10 .map: *.take }; say @results

[06:53] <stoned75> ;)

[07:03] *** |Sno| joined
[07:25] *** rindolf joined
[07:27] *** rindolf left
[07:29] *** domidumont joined
[07:31] *** rindolf joined
[07:32] *** sena_kun left
[07:33] *** stoned75 left
[07:35] *** darkstardev13 left
[07:35] *** Doc_Holliwould left
[07:35] *** Doc_Holliwood left
[07:41] <SmokeMachine> m: my Supply $s .= from-list: ^100 .roll x *; $s.first: *.is-prime; react whenever $s { .say }

[07:42] <SmokeMachine> :( no bots?!

[07:43] *** hacktor left
[07:47] *** sena_kun joined
[08:00] *** kensanata joined
[08:02] *** darkstardev13 joined
[08:06] *** zakharyas joined
[08:23] <jmerelo> m: class Sunk { has $.titanic; method sink { say "Sinking $!titanic"; }}; Sunk.new( :titanic($_) ) for 1..3;

[08:23] <jmerelo> SmokeMachine: no bots

[08:39] *** scimon joined
[08:49] *** Doc_Holliwood joined
[08:49] *** Doc_Holliwould joined
[08:51] <Geth> Â¦ doc/master: 4 commits pushed by (JJ Merelo)++

[08:51] <Geth> Â¦ doc/master: 871c4e225a | Fixes anchor link

[08:51] <Geth> Â¦ doc/master: 14b832c992 | Uses example from roast to clarify

[08:51] <Geth> Â¦ doc/master: ab254c9011 | Some minor modifications and deindent preparing for #2632

[08:51] <Geth> Â¦ doc/master: 7cb32363ac | Illustrating last `for` statement in sink context #2632

[08:51] <Geth> Â¦ doc/master: review: https://github.com/Raku/doc/compare/0fa05198a7f2...7cb32363aceb

[08:57] *** nebuchadnezzar joined
[09:06] *** rindolf left
[09:07] *** dakkar joined
[09:07] *** daxim left
[09:12] *** daxim joined
[09:17] *** rindolf joined
[09:17] *** wamba joined
[09:28] *** APic left
[09:32] *** vike left
[09:33] *** sena_kun left
[09:35] *** Doc_Holliwood left
[09:35] *** Doc_Holliwould left
[09:42] *** APic joined
[09:48] *** sena_kun joined
[09:51] *** Black_Ribbon left
[09:52] *** cpan-raku left
[09:52] *** cpan-raku joined
[09:52] *** cpan-raku left
[09:52] *** cpan-raku joined
[09:55] *** hungrydonkey joined
[09:58] *** hungryd91 left
[09:58] *** pecastro joined
[10:20] *** wamba left
[10:28] *** hungryd18 joined
[10:31] *** hungrydonkey left
[10:33] *** wamba joined
[10:36] *** vike joined
[10:37] *** hungryd18 left
[10:38] *** hungrydonkey joined
[10:51] *** NODE left
[10:52] *** NODE joined
[10:53] *** libertas joined
[10:54] *** NODE left
[10:55] *** NODE joined
[10:57] *** NODE left
[10:57] *** gabiruh_ is now known as gabiruh

[10:59] *** NODE joined
[11:05] *** hungryd22 joined
[11:06] *** Redfoxmoon left
[11:07] *** Redfoxmoon joined
[11:08] *** hungrydonkey left
[11:09] *** domidumont left
[11:12] *** NODE left
[11:13] *** NODE joined
[11:30] *** hungrydonkey joined
[11:34] *** sena_kun left
[11:34] *** hungryd22 left
[11:36] *** NODE left
[11:37] *** NODE joined
[11:39] *** nosqrt left
[11:42] *** Doc_Holliwood joined
[11:42] *** Doc_Holliwould joined
[11:49] *** sena_kun joined
[11:51] *** NODE left
[11:53] *** NODE joined
[11:57] *** NODE left
[11:58] *** NODE joined
[12:03] *** wamba left
[12:04] *** titsuki joined
[12:09] *** zakharyas left
[12:22] *** Kaiepi left
[12:23] <cpan-raku> New module released to CPAN! Math::Libgsl::Matrix (0.0.4) by 03FRITH

[12:23] *** Kaiepi joined
[12:25] *** squashable6 left
[12:28] *** squashable6 joined
[12:30] *** Doc_Holliwood left
[12:30] *** Doc_Holliwould left
[12:31] *** wamba joined
[12:34] *** domidumont joined
[12:46] *** leont joined
[12:50] <elcaro> more cro struggles... client.get('/path/to/api?query=query+goes+here') works fine

[12:50] <elcaro> but how can i pass the query normally. i've tried `query => { query => '...' }`

[12:51] *** NODE left
[12:51] <elcaro> as well as `body` but i just keep getting 404

[12:52] <elcaro> also, when i create a request, how can i see the stringified url it's sending?

[12:52] *** NODE joined
[12:54] <jnthn> You probably don't want a body with a GET request, though I think you'd want to pass a content-type for the body too if sending one

[12:54] <jnthn> CRO_TRACE=1 in the environment will show you details of what it sends

[12:55] <jnthn> I don't think there's a convenient way to form query strings yet, though Cro::Uri provides the way to do the percent encodingt.

[12:56] <elcaro> i did have trace on, and the api reported back the value cannot be null, so i suspected the query wasn't getting passed

[12:57] <elcaro> just to be clear, this works in mojolicious with `$ua->get($path => form => { query => '...' })

[12:57] <elcaro> api docs say it's a GET, with a query param

[12:58] <jnthn> Yes, as noted, there's no better way to do it yet than putting together the query string yourself, using encode-percents on the parts. Please make an issue requesting it at https://github.com/croservices/cro-http/issues/new

[12:58] *** wamba left
[12:59] <elcaro> ahh, sorry i missed that comment. ok, thanks... i will construct a Cro::Uri object manually

[12:59] <jnthn> It really should be there (there's plenty of conveniences for getting query string parts on the server side...)

[13:00] <elcaro> ok... i can raise an issue, but it just clocked midnight here, so it'll need to wait until tomorrow

[13:00] <elcaro> thanks again

[13:01] <jnthn> OK, thanks 

[13:02] <jnthn> I'm planning to spend some time on the HTTP client in the next week or so anyway, so can have a look at adding this too :)

[13:02] *** pecastro left
[13:03] *** wamba joined
[13:04] *** squashable6 left
[13:05] *** kensanata left
[13:07] *** squashable6 joined
[13:10] <Geth> Â¦ doc: 3e6270d197 | (Elizabeth Mattijsen)++ | doc/Type/Mu.pod6

[13:10] <linkable6> Link: https://docs.raku.org/type/Mu

[13:10] <Geth> Â¦ doc: Elaborate on the volatility of .WHERE values

[13:10] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/3e6270d197

[13:21] *** NODE left
[13:22] *** NODE joined
[13:25] *** titsuki left
[13:27] *** NODE left
[13:28] *** NODE joined
[13:29] *** lucasb joined
[13:30] *** NODE left
[13:31] *** NODE joined
[13:33] *** sena_kun left
[13:33] *** titsuki joined
[13:36] *** NODE left
[13:37] *** titsuki left
[13:38] *** leont left
[13:38] *** NODE joined
[13:39] *** NODE left
[13:40] *** NODE joined
[13:46] *** aindilis left
[13:49] *** sena_kun joined
[13:50] *** zakharyas joined
[13:51] *** NODE left
[13:52] *** NODE joined
[13:57] *** pecastro joined
[13:58] *** mtj_ joined
[14:12] *** jmerelo left
[14:14] *** Xliff left
[14:27] <cpan-raku> New module released to CPAN! Math::Libgsl::Matrix (0.0.5) by 03FRITH

[14:30] *** kensanata joined
[14:36] *** ukine1 joined
[14:36] *** ukine left
[14:39] *** Coleoid joined
[14:44] *** wamba left
[14:48] *** NODE left
[14:49] *** NODE joined
[14:51] *** NODE left
[14:51] *** wamba joined
[14:53] *** NODE joined
[14:54] *** NODE left
[14:55] *** NODE joined
[14:59] *** rindolf left
[15:08] *** rindolf joined
[15:12] *** NODE left
[15:14] *** NODE joined
[15:14] *** zakharyas left
[15:16] *** zakharyas joined
[15:18] *** NODE left
[15:19] *** NODE joined
[15:24] *** cpan-raku left
[15:24] *** cpan-raku joined
[15:24] *** cpan-raku left
[15:24] *** cpan-raku joined
[15:27] *** NODE left
[15:29] *** NODE joined
[15:30] *** NODE left
[15:31] *** NODE joined
[15:32] *** sena_kun left
[15:36] *** NODE left
[15:37] *** NODE joined
[15:37] <Coleoid> Good morning - (my local offset) + (your local offset), #raku.

[15:39] *** NODE left
[15:39] <Coleoid> I'm trying to use the newly announced rakubrew, had trouble, and failed to make contact via listed urls for CPAN or Github...

[15:40] *** NODE joined
[15:40] <Coleoid> Though a new search just found the repos on Github, so perhaps I have no question any longer.

[15:40] <Coleoid> Enjoy the day!

[15:41] <guifa> Coleoid: if you get any problems, donât hesitate to ask.  Weâre all on different TZs so someone will eventually be able to respond but sometimes might take a bit

[15:41] * guifa heads to $day-job

[15:43] *** Doc_Holliwould joined
[15:43] *** Doc_Holliwood joined
[15:48] *** NODE left
[15:48] *** sena_kun joined
[15:49] *** NODE joined
[15:50] <Coleoid> Thanks, guifa.  I just posted an issue in the right repo, so I think I'm good.  Patrick BÃ¶ker said right up front not to expect it to work right now, so I'm not fussed.

[15:51] *** NODE left
[15:52] *** NODE joined
[15:54] *** NODE left
[15:56] *** NODE joined
[15:57] *** wamba left
[16:00] <cpan-raku> New module released to CPAN! Text::Utils (2.1.0) by 03TBROWDER

[16:00] *** NODE left
[16:01] *** aborazmeh joined
[16:01] *** aborazmeh left
[16:01] *** aborazmeh joined
[16:02] *** NODE joined
[16:03] *** wamba joined
[16:13] <Kaiepi> m: say "aa" ~~ / (<[abc]>) <!before $0> . /

[16:13] <Kaiepi> m: say 1

[16:13] <Kaiepi> blegh

[16:14] <Kaiepi> is there a way i can ensure a capture group is not repeated?

[16:15] *** kensanata left
[16:17] *** Itaipu_ left
[16:19] *** ctilmes joined
[16:21] <ctilmes> elcaro: URI::Template makes it easy to construct URIs, filling in variables and constructing queries, etc.

[16:21] <ctilmes> jnthn: ^

[16:34] *** ukine1 left
[16:41] *** Doc_Holliwould left
[16:42] *** wildtrees joined
[16:42] *** molaf joined
[16:43] *** wildtrees left
[16:43] *** MatrixBridge joined
[16:43] *** MatrixBridge left
[16:43] *** wildtrees joined
[16:43] *** Kaiepi left
[16:46] *** Kaiepi joined
[16:47] <cpan-raku> New module released to CPAN! Math::Libgsl::Matrix (0.0.6) by 03FRITH

[16:48] *** NODE left
[16:50] *** NODE joined
[16:54] *** aindilis joined
[17:00] *** NODE left
[17:02] *** NODE joined
[17:03] *** NODE left
[17:03] <Geth> Â¦ doc: Kaiepi++ created pull request #3217: Reorganize and add Trait::Traced to the debugging programs page

[17:03] <Geth> Â¦ doc: review: https://github.com/Raku/doc/pull/3217

[17:04] *** NODE joined
[17:09] *** wamba left
[17:14] *** squashable6 left
[17:15] *** squashable6 joined
[17:17] *** |Sno| left
[17:18] *** aborazmeh left
[17:19] *** Kaiepi left
[17:20] *** Kaiepi joined
[17:23] *** pecastro left
[17:24] *** farcas82regreg joined
[17:27] *** domidumont left
[17:29] *** dakkar left
[17:30] <SmokeMachine> m: say "aa" ~~ / (<[abc]>) (.) <?{ $0 ne $1 }> /

[17:30] *** scimon left
[17:30] *** Redfoxmoon left
[17:30] *** Redfoxmoon joined
[17:33] *** sena_kun left
[17:39] *** NODE left
[17:39] *** Kaiepi left
[17:40] *** NODE joined
[17:42] *** NODE left
[17:43] *** NODE joined
[17:47] *** sena_kun joined
[17:51] *** Kaiepi joined
[17:53] *** wamba joined
[18:02] *** hungrydonkey left
[18:03] *** chloekek joined
[18:03] *** chloekek left
[18:03] *** chloekek joined
[18:09] *** wamba left
[18:09] *** wamba1 joined
[18:10] *** nosqrt joined
[18:17] <Geth> Â¦ doc: 6d64be7ed6 | (Elizabeth Mattijsen)++ | doc/Language/faq.pod6

[18:17] <linkable6> Link: https://docs.raku.org/language/faq

[18:17] <Geth> Â¦ doc: Mention Perl 6, fixes #3216

[18:17] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/6d64be7ed6

[18:17] <linkable6> DOC#3216 [closed]: https://github.com/Raku/doc/issues/3216 [RFE][docs][easy to resolve] Mentions of Perl 6 in the docs were edited out a little TOO thoroughly

[18:22] *** lnkcmplxct joined
[18:22] *** lnkcmplxct left
[18:24] <SmokeMachine> I am testing my new asetniop keyboard...

[18:26] <SmokeMachine> I am spending too long to write anything... but it is cool

[18:32] * moritz imagines an actively cooled keyboard :D

[18:33] <lizmat> moritz: do you know how and where camelia is supoosed to run ?

[18:33] <lizmat> it's been awol for two days now  :-(

[18:35] <moritz> lizmat: it's supposed to be running on niner.name... and the weird thing is that it says it's running just fine

[18:35] <lizmat> nine ^^  ??  :-)

[18:36] <moritz> http://perlpunks.de/paste/show/5e4445c2.1f8b.f8

[18:37] <moritz> no idea why it doesn't actually connect

[18:37] *** zakharyas left
[18:42] *** pecastro joined
[18:43] *** wamba1 left
[18:44] <rypervenche> How would a regex be affecting $/ in this context? I don't think I quite understand it. https://docs.perl6.org/language/traps#Grammars

[18:45] <moritz> rypervenche: a normal regex match like 'a' ~~ /a/ sets $/ to the resulting Match object

[18:45] <rypervenche> Oooooh

[18:45] <moritz> this is true everywhere, not just in action methods

[18:45] <rypervenche> I completely overlooked that. That makes total sense now.

[18:49] *** [Sno] joined
[18:51] <nine> moritz: there's a weird issue with the VMs losing network. To be precise inbound packets get lost somehow. Rebooting the VM doesn't help, it's not any hardware offload, iptables or ebtables issue. A reboot of the host seems to be the only workaround.

[18:52] <nine> Been traveling all day so I didn't dare to reboot. OTOH I still got ~ half an hour till my flight back home leaves...

[18:53] *** aborazmeh joined
[18:53] *** aborazmeh left
[18:53] *** aborazmeh joined
[18:53] *** nine left
[18:58] *** nine joined
[19:00] <moritz> nine: interesting

[19:00] *** camelia joined
[19:01] <nine> m: "reboot went well".say

[19:02] <camelia> rakudo-moar 8c995febd: OUTPUT: Â«reboot went wellâ¤Â»

[19:02] <lizmat> whee!

[19:02] <lizmat> nine++

[19:04] *** wildtrees left
[19:05] *** wildtrees joined
[19:07] <moritz> nine++ indeed

[19:15] *** aborazmeh left
[19:26] *** sauvin left
[19:33] *** wamba joined
[19:34] *** sena_kun left
[19:34] <Geth> Â¦ doc/master: 5 commits pushed by (Ben Davies)++, (Juan JuliÃ¡n Merelo GuervÃ³s)++

[19:34] <Geth> Â¦ doc/master: 049c1f6702 | Reorganize doc/Programs/01-debugging.pod6

[19:34] <Geth> Â¦ doc/master: 23c7010241 | Add Trait::Traced to the debugging programs page

[19:34] <Geth> Â¦ doc/master: b48c5f8101 | Add customizable as an aspell word

[19:34] <Geth> Â¦ doc/master: a840412913 | Use C<> for links to modules in the debugging programs page

[19:34] <Geth> Â¦ doc/master: 7f20a31bb4 | Merge pull request #3217 from Kaiepi/debug

[19:34] <Geth> Â¦ doc/master: review: https://github.com/Raku/doc/compare/6d64be7ed638...7f20a31bb4ed

[19:40] *** aborazmeh joined
[19:40] *** aborazmeh left
[19:40] *** aborazmeh joined
[19:48] *** squashable6 left
[19:49] *** sena_kun joined
[19:50] *** squashable6 joined
[20:01] *** rafaelschi joined
[20:04] *** [Sno] left
[20:06] *** [Sno] joined
[20:12] *** zakharyas joined
[20:12] *** wamba left
[20:13] *** wamba joined
[20:24] *** rafaelschi left
[20:31] *** rindolf left
[20:37] *** mahmudov joined
[20:38] *** stoned75 joined
[20:38] *** Coleoid left
[20:45] <Doc_Holliwood> weekly: https://www.perlmonks.org/?node_id=11112794

[20:45] <notable6> Doc_Holliwood, Noted! (weekly)

[20:47] *** aborazmeh left
[20:47] *** skyl4rk left
[20:50] *** molaf left
[20:59] <rypervenche> Yay! I finally got my grammar working! It took me a while to figure out the issues with using regexes in an action, as well as the nested $matches.

[21:00] <rypervenche> I'm curious to know if I did anything horrible or inefficient in my phone-number method: https://gist.github.com/rypervenche/2a42fbff2f355313059ea7df93369d08

[21:13] *** wamba left
[21:26] *** _lgtaube joined
[21:29] *** _lgtaube left
[21:30] *** zakharyas left
[21:31] <MasterDuke> rypervenche: i don't see any glaring algorithmic inefficiencies. however, if you're looking to optimize, `$num .= substr(1) if $num.starts-with("9") and $num.chars == 11` might be faster than `$num = $num.flip.chop.flip if $num ~~ / ^ 9 \d ** 10 $ /`

[21:32] <rypervenche> Oh! Thanks a lot. I knew there had to be something better.

[21:32] <MasterDuke> since you already know that all the characters are numbers by the definition of the phone-number token

[21:33] *** sena_kun left
[21:33] <MasterDuke> i'm not going to promise anything, you should measure both

[21:35] <MasterDuke> and you could do the same with the following lines. e.g., `$num = "88850$num" if $num.starts-with("1" | "4") and $num.chars == 5`

[21:37] <rypervenche> Ooh, I should be able to use $/ again in that case.

[21:40] <MasterDuke> and if you want just one complicated line (and only if you know 1,4,5 are the only possible values for the leading character), `$num = "8885{ $num.starts-with("5") ?? "5" !! "0" }$num"`

[21:41] <MasterDuke> but that's a questionable "optimization"

[21:41] *** aluaces left
[21:44] *** aluaces joined
[21:44] <rypervenche> That's lovely. I think I'll stick with the longer version since it's more understandable and extendable.

[21:45] <MasterDuke> yep

[21:46] <rypervenche> Still though, it's going to take me a while to start using the ternary operator. It's good to see more examples of how it can be used like this.

[21:49] *** sena_kun joined
[21:59] *** chloekek left
[22:11] *** mahmudov left
[22:13] <xinming_> What is the right way to do smart match on the $_ without using when?

[22:13] <xinming_> Something like the  m//  for smart match.

[22:15] <lizmat> .ACCEPTS ?

[22:16] *** maggotbrain left
[22:16] <lizmat> .ACCEPTS(foo)   or foo.ACCEPTS($_)  depending on what's where :-)

[22:17] <xinming_> Got it, thanks. will use .ACCEPTS

[22:18] *** MasterDuke left
[22:18] *** maggotbrain joined
[22:20] <xinming_> m: my @h = <a>, <c d e>; given @h { when (Any, List) { "Value matched".say; }; default { "Not matched".say; }; }; @h.ACCEPTS(\(Str, List)).perl.say;

[22:20] <camelia> rakudo-moar 8c995febd: OUTPUT: Â«Value matchedâ¤Bool::Falseâ¤Â»

[22:20] <xinming_> hmm

[22:20] <xinming_> m: my @h = <a>, <c d e>; given @h { when (Any, List) { "Value matched".say; }; default { "Not matched".say; }; }; :(Str, List).ACCEPTS(Any, List).perl.say;

[22:20] <camelia> rakudo-moar 8c995febd: OUTPUT: Â«Value matchedâ¤Cannot resolve caller ACCEPTS(Signature:D: Any:U, List:U); none of these signatures match:â¤    (Mu:U: \topic, *%_)â¤    (Mu:U: Mu:U \topic, *%_)â¤    (Any:D: Mu:D \a, *%_)â¤    (Any:D: Mu:U, *%_ --> Bool::False)â¤    (Any:U: \topâ¦Â»

[22:21] <xinming_> How do I match do the same with ACCEPTS  for the   when (Any, List)  in this example please?

[22:21] *** skyl4rk joined
[22:22] *** Doc_Holliwood left
[22:25] <xinming_> I tried the @h.ACCEPTS(\(Any, List));  @h.ACCEPTS((Any, List),);  none worked

[22:26] *** mahmudov joined
[22:27] <xinming_> @h ~~ (Any, List)   <---    In this example, How can we write it with the .ACCEPTS version?

[22:36] <lizmat> hmmmm

[22:36] <xinming_> I got it.

[22:37] <xinming_> m: (Any, List,).ACCEPTS(("5", <a b c>),).perl.say;

[22:37] <camelia> rakudo-moar 8c995febd: OUTPUT: Â«Bool::Trueâ¤Â»

[22:37] <lizmat> xinming_++

[22:41] <stoned75> lizmat: hi. sorry for the log2 incorrect example and thanks for your fix

[22:41] <lizmat> stoned75: yw

[22:53] *** wamba joined
[22:54] *** melezhik left
[22:59] <Voldenet> Is there some nice way to turn binary stdin into Supply of Buf[uint8]?

[22:59] <Voldenet> what I'm doing now is: sub raw-stdin { my Supplier $s .= new; start { loop { my $buf = $*IN.read; last unless $buf; $s.emit($buf) }; $s.done }; $s };

[22:59] *** wamba left
[23:00] <Voldenet> but do I really that thread?

[23:00] <jnthn> $*IN.Supply(:bin) ?

[23:00] *** wamba joined
[23:02] <Voldenet> m: sub raw-stdin { my Supplier $s .= new; start { loop { my $buf = $*IN.read; last unless $buf; $s.emit($buf) }; $s.done }; $s }; react whenever raw-stdin() { .say }

[23:02] <camelia> rakudo-moar 8c995febd: ( no output )

[23:02] <Voldenet> hm

[23:02] *** MasterDuke joined
[23:02] *** farcas82regreg left
[23:03] <Voldenet> apparently no, Supply only accepts buffer size

[23:03] *** foo222 joined
[23:05] <Voldenet> $*IN = "/dev/stdin".IO.open(:bin); react whenever $*IN.Supply

[23:08] *** hungrydonkey joined
[23:19] <Voldenet> ah, `"-".IO.open(:bin);` doesn't actually open a file, so it's a better solution

[23:19] <Voldenet> m: "-".IO.open(:bin).close; react whenever $*IN.Supply { .say 

[23:19] <camelia> rakudo-moar 8c995febd: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Missing blockâ¤at <tmp>:1â¤------> 3close; react whenever $*IN.Supply { .say7â5<EOL>â¤    expecting any of:â¤        statement endâ¤        statement modifierâ¤        statement modifier looâ¦Â»

[23:19] <Voldenet> m: "-".IO.open(:bin).close; react whenever $*IN.Supply { .say }

[23:19] <camelia> rakudo-moar 8c995febd: OUTPUT: Â«A react block:â¤  in block <unit> at <tmp> line 1â¤â¤Died because of the exception:â¤    read bytes requires an object with REPR MVMOSHandle (got VMNull with REPR Null)â¤      in block <unit> at <tmp> line 1â¤â¤Â»

[23:20] <Voldenet> â¦which means you can close $*IN without even touching it

[23:20] *** farcas82regreg joined
[23:33] *** sena_kun left
[23:38] *** mahmudov left
[23:46] *** sena_kun joined
[23:47] *** lucasb left
[23:50] *** AlexDaniel joined
[23:51] *** AlexDaniel left
[23:51] *** AlexDaniel joined
[23:54] *** foo222 left
[23:58] *** wamba left
[23:59] *** pecastro left
[23:59] *** mahmudov joined
