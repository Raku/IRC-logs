[00:00] *** NODE joined
[00:10] *** titsuki joined
[00:10] *** libertas left
[00:40] *** ukine-lap joined
[00:44] *** NODE left
[00:46] *** NODE joined
[01:15] *** ukine-lap left
[01:18] *** leont left
[01:20] *** cognominal left
[01:25] *** cognominal joined
[01:27] *** cognomin_ joined
[01:31] *** cognominal left
[01:45] *** MasterDuke left
[01:55] *** lucasb left
[02:17] *** NODE left
[02:18] *** wildtrees left
[02:19] *** NODE joined
[02:24] *** molaf left
[02:31] *** stigo left
[02:35] *** molaf joined
[03:11] *** aborazmeh left
[03:38] *** titsuki left
[03:47] *** titsuki joined
[03:48] *** Cabanossi left
[03:49] *** Cabanossi joined
[03:50] *** cognominal joined
[03:54] *** cognomin_ left
[04:10] *** Doc_Holliwould joined
[04:14] *** Doc_Holliwood left
[05:14] *** nativecallable6 left
[05:14] *** linkable6 left
[05:14] *** sourceable6 left
[05:14] *** bisectable6 left
[05:14] *** coverable6 left
[05:14] *** notable6 left
[05:14] *** statisfiable6 left
[05:14] *** unicodable6 left
[05:14] *** evalable6 left
[05:14] *** quotable6 left
[05:14] *** committable6 left
[05:14] *** bloatable6 left
[05:14] *** benchable6 left
[05:14] *** reportable6 left
[05:14] *** tellable6 left
[05:14] *** releasable6 left
[05:14] *** squashable6 left
[05:14] *** shareable6 left
[05:14] *** greppable6 left
[05:15] *** releasable6 joined
[05:15] *** sourceable6 joined
[05:15] *** committable6 joined
[05:15] *** bisectable6 joined
[05:15] *** tellable6 joined
[05:16] *** unicodable6 joined
[05:16] *** reportable6 joined
[05:16] *** coverable6 joined
[05:16] *** evalable6 joined
[05:16] *** shareable6 joined
[05:16] *** linkable6 joined
[05:17] *** bloatable6 joined
[05:17] *** benchable6 joined
[05:17] *** nativecallable6 joined
[05:17] *** greppable6 joined
[05:17] *** squashable6 joined
[05:17] *** notable6 joined
[05:17] *** quotable6 joined
[05:18] *** statisfiable6 joined
[06:15] *** hungryd47 joined
[06:17] *** stoned75 joined
[06:35] *** stoned75 left
[06:54] *** gabiruh left
[07:09] *** Black_Ribbon left
[07:25] *** andrzejku joined
[07:25] *** hungrydonkey joined
[07:28] *** hungryd47 left
[07:33] *** hungryd8 joined
[07:35] *** wamba joined
[07:35] *** hungrydonkey left
[08:25] *** sauvin left
[08:31] *** sauvin joined
[08:36] *** sauvin left
[08:39] *** sauvin joined
[08:41] *** xinming left
[08:42] *** xinming joined
[08:46] *** Celelibi left
[08:59] *** Celelibi joined
[09:00] *** Celelibi left
[09:10] *** rindolf joined
[09:10] *** patrickb joined
[09:16] *** MasterDuke joined
[09:25] *** Celelibi joined
[09:36] *** patrickb left
[09:46] *** wamba left
[10:02] *** domidumont joined
[10:02] *** domidumont left
[10:04] *** libertas joined
[10:04] *** Cabanossi left
[10:11] *** Celelibi left
[10:14] *** chloekek joined
[10:20] *** andrzejku left
[10:21] *** Celelibi joined
[10:21] *** aborazmeh joined
[10:21] *** aborazmeh left
[10:21] *** aborazmeh joined
[10:23] *** Celelibi left
[10:26] *** NODE left
[10:28] *** pecastro joined
[10:29] *** NODE joined
[10:34] *** andrzejku joined
[10:36] *** Celelibi joined
[10:45] *** mowcat joined
[10:55] *** cpan-raku left
[10:55] *** cpan-raku joined
[10:55] *** cpan-raku left
[10:55] *** cpan-raku joined
[11:03] *** wamba joined
[11:04] *** Ven`` joined
[11:05] *** Celelibi left
[11:13] *** Celelibi joined
[11:15] *** Celelibi left
[11:20] *** Celelibi joined
[11:41] *** domidumont joined
[11:41] *** domidumont left
[11:50] *** domidumont joined
[12:26] *** aborazmeh left
[12:41] *** domidumont left
[12:43] *** Celelibi left
[12:43] *** wamba left
[12:47] *** Celelibi joined
[12:49] *** Celelibi left
[12:50] *** Ven`` left
[12:58] *** Celelibi joined
[12:59] <Doc_Holliwould> rypervenche: that's especially hand when you need to negate a boolean value: $switch .= not;

[12:59] <Doc_Holliwould> *handy

[13:09] <cpan-raku> New module released to CPAN! Gnome::Gio (0.1.1) by 03MARTIMM

[13:11] *** discord62 joined
[13:11] *** discord6 left
[13:12] *** discord62 is now known as discord6

[13:27] *** wamba joined
[13:28] *** leont joined
[13:35] *** xinming left
[13:35] *** xinming joined
[13:42] *** domidumont joined
[13:45] *** domidumont left
[13:49] *** domidumont joined
[13:51] *** domidumont left
[13:56] *** domidumont joined
[13:58] *** lucasb joined
[14:09] *** mowcat left
[14:15] *** Kaiepi left
[14:15] *** Kaeipi joined
[14:15] *** Ven`` joined
[14:16] *** stoned75 joined
[14:21] *** domidumont left
[14:26] *** titsuki left
[14:34] *** mtj_ joined
[14:38] *** andrzejku left
[14:38] *** mtj_ is now known as mtj__

[14:41] *** mtj__ is now known as mtj

[14:43] *** mtj is now known as mtj_

[14:53] *** veesh left
[14:53] *** veesh joined
[14:55] *** Ven`` left
[14:58] *** andrzejku joined
[15:02] *** sena_kun joined
[15:11] *** rindolf left
[15:28] *** chloekek left
[15:33] *** Altai-man_ joined
[15:37] *** sena_kun left
[15:37] *** Altai-man_ is now known as sena_kun

[15:58] *** wamba left
[16:08] *** aborazmeh joined
[16:08] *** aborazmeh left
[16:08] *** aborazmeh joined
[16:23] *** NODE left
[16:26] *** NODE joined
[16:28] *** mowcat joined
[16:41] <cpan-raku> New module released to CPAN! Math::Libgsl::Matrix (0.1.1) by 03FRITH

[16:48] *** molaf left
[16:53] *** finsternis left
[16:59] *** NODE left
[17:01] *** NODE joined
[17:11] <Geth> ¬¶ doc/master: 10 commits pushed by (Salve J. Nilsen)++, (Juan Juli√°n Merelo Guerv√≥s)++

[17:11] <Geth> ¬¶ doc/master: review: https://github.com/Raku/doc/compare/54843fdae36a...0bdc00fb9a8e

[17:12] *** phi joined
[17:13] <phi> Hello, could someone please explain what :D: means in the following method signature: method act(Supply:D: &act --> Tap:D)

[17:14] <mst> it means that the value must be defined

[17:14] <phi> OK, what's the difference then with :D?

[17:14] <moritz> the trailing : marks it as the invocant

[17:15] <moritz> so that means "the object you're calling the method on must be defined"

[17:15] <moritz> so you cannot called Supply.act, you have to call Supply.new().act

[17:16] <phi> Is there any information on this in the Raku documentation you could point me too, please?

[17:16] <phi> "to" not "too"

[17:17] <phi> Why is Capture defined like this: method Capture(Supply:D --> Capture:D)

[17:18] <moritz> https://docs.raku.org/type/Signature#Parameter_separators

[17:18] <phi> Does it mean that the Supply argument doesn't need to be defined?

[17:19] <moritz> that's an error in the docs, should be Supply:D:

[17:19] *** phi left
[17:20] <moritz> m: say Supply.^find_method('Capture').signature.perl

[17:20] <evalable6> moritz, rakudo-moar 28bd4247a: OUTPUT: ¬´:(Supply:D: *%_)‚ê§¬ª

[17:20] <Geth> ¬¶ doc: 25fb71d52a | (Moritz Lenz)++ | doc/Type/Supply.pod6

[17:20] <Geth> ¬¶ doc: Fix signature error

[17:20] <Geth> ¬¶ doc: 

[17:20] <Geth> ¬¶ doc: brought up by phi++ in #raku

[17:20] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/25fb71d52a

[17:20] <linkable6> Link: https://docs.raku.org/type/Supply

[17:25] *** andrzejku left
[17:26] *** phi joined
[17:26] <phi> Many thanks, moritz, for the doc pointer.

[17:27] *** phi left
[17:28] <moritz> my pleasure

[17:29] *** cpan-raku left
[17:29] *** cpan-raku joined
[17:29] *** cpan-raku left
[17:29] *** cpan-raku joined
[17:32] *** aborazmeh left
[17:33] *** Altai-man_ joined
[17:35] *** domidumont joined
[17:36] *** sena_kun left
[17:36] *** phi joined
[17:39] *** rindolf joined
[17:45] <cpan-raku> New module released to CPAN! Getopt::Long (0.1.5) by 03LEONT

[17:46] <leont> Now with a :compat-core option that should make it truly a drop-in replacement for the built-in argument parser :-)

[17:47] *** phi left
[17:49] <leont> fg

[17:51] <mst> ^Z

[17:52] <leont> (the default is a more unix-typical than the raku parser provides, e.g. allowing bundling and not allowing --/foo)

[17:55] <mst> yeah, I love the way stuff maps to MAIN but things are a li'l odd in places

[17:55] <leont> Then try Getopt::Long, it probably does what you want :-)

[17:57] <leont> And it tends to give much more specific errors, e.g. ¬´Cannot convert --foo argument "a" to number: base-10 number must begin with valid digits or '.'¬ª instead of a usage output

[17:58] *** Redfoxmoon left
[18:04] *** hungryd8 left
[18:06] *** Redfoxmoon joined
[18:07] *** Redfoxmoon left
[18:07] *** Redfoxmoon joined
[18:09] <El_Che> releasable6: status

[18:09] <releasable6> El_Che, Next release in ‚âà34 days and ‚âà0 hours. There are no known blockers. Changelog for this release was not started yet

[18:09] <releasable6> El_Che, Details: https://gist.github.com/4d751a236da38510e93387404bdb1194

[18:09] <El_Che> ok, it means 2020.02 is out. Building pkgs

[18:22] *** molaf joined
[18:27] *** andrzejku joined
[18:28] <El_Che> mm, it dies in alpine

[18:32] <jdv79> nine: there was no reintall.  the box got rebuilt from the fs format up...

[18:32] *** Kaiepi joined
[18:33] <Altai-man_> El_Che, dies how?

[18:33] *** Kaeipi left
[18:34] *** Kaiepi left
[18:35] *** Kaiepi joined
[18:42] <Altai-man_> El_Che, ping?

[18:52] <nine> jdv79: in what way is OpenSSL broken?

[19:19] *** vike left
[19:23] <vrurg> nine: don't ask this question to macos owners. :D

[19:24] *** jmerelo joined
[19:26] <leont> As if that's the only thing that's broken on Mac OS :-/

[19:27] *** chloekek joined
[19:27] <cpan-raku> New module released to CPAN! Gnome::Gtk3 (0.24.0) by 03MARTIMM

[19:28] <Geth> ¬¶ doc: 6141523c36 | (Ben Davies)++ | 3 files

[19:28] <Geth> ¬¶ doc: Document how to type enums

[19:28] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/6141523c36

[19:28] <Geth> ¬¶ doc: 9d4101bdb7 | (Ben Davies)++ | doc/Language/typesystem.pod6

[19:28] <Geth> ¬¶ doc: s/\$\./self./

[19:28] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/9d4101bdb7

[19:28] <Geth> ¬¶ doc: 982e43ad0b | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | 3 files

[19:28] <Geth> ¬¶ doc: Merge pull request #3227 from Kaiepi/enum-typing

[19:28] <vrurg> leont: the only one that really annoys me.

[19:28] <linkable6> Link: https://docs.raku.org/language/typesystem

[19:28] <Geth> ¬¶ doc: 

[19:28] <Geth> ¬¶ doc: Document how to type enums

[19:28] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/982e43ad0b

[19:28] *** vike joined
[19:30] <vrurg> Actually, I must make myself clear: the problem is about macos using .dylibs only from system paths and from where a binary is installed. So, locally installed raku doesn't have access to .dylib from an installed port.

[19:36] <jmerelo> Just a reminder that the deadline for submitting projects to Outreachy is RSN https://github.com/perl-foundation-outreach/outreachy-2020-ideas

[19:36] <tellable6> hey jmerelo, you have a message: https://gist.github.com/0dc9d72fc584a75342afce96ddeb818d

[19:36] *** Altai-man_ left
[19:36] <jmerelo> Submit your project ideas there, ASAP.

[19:37] <jmerelo> .tell patrickb thanks, I appreciate that. So let's try next year...

[19:37] <tellable6> jmerelo, I'll pass your message to patrickb

[19:37] *** jmerelo left
[19:38] *** Altai-man_ joined
[19:39] *** wamba joined
[19:42] *** aborazmeh joined
[19:42] *** aborazmeh left
[19:42] *** aborazmeh joined
[19:43] *** domidumont left
[19:54] <leont> Is there a way to get to the pod variables of another module?

[20:00] *** molaf left
[20:17] <stoned75> c: releases say ~$*PERL

[20:17] <committable6> stoned75, https://gist.github.com/1d5d42cd69ce107d763532ba73cb33a8

[20:19] <stoned75> c: releases say $*PERL.gist

[20:20] <committable6> stoned75, https://gist.github.com/6b0b70e194295923eb8592d7aa192048

[20:31] *** cognomin_ joined
[20:34] <El_Che> Altai-man_: like this: https://travis-ci.org/nxadm/rakudo-pkg/jobs/654135151

[20:35] <leont> Also, given a subset type, how do I get the base type?

[20:35] *** cognominal left
[20:36] <Altai-man_> El_Che, what can be different if it builds just ok on debian and my (a bit more exotic) void box?

[20:36] <Altai-man_> El_Che, does it mean we must do a point?

[20:38] *** foo222 joined
[20:39] <El_Che> Altai-man_: I am trying to find it out. Alpine is always a little more weird than the rest

[20:39] *** rbt joined
[20:40] <Altai-man_> https://stackoverflow.com/questions/1777397/rtld-next-undeclared

[20:40] <El_Che> Altai-man_: it's certainly the new release though that fail on all Alpines  (3.8-11): https://travis-ci.org/nxadm/rakudo-pkg/builds/654160943

[20:40] *** foo222 left
[20:40] <El_Che> the previous built just fine

[20:41] <tobs> m: say UInt.^refinee # leont 

[20:41] <evalable6> tobs, rakudo-moar cf02c2e98: OUTPUT: ¬´(Int)‚ê§¬ª

[20:42] <El_Che> (the 3.11 is something else, so have a look at 3.8-3.10)

[20:42] <Altai-man_> it is dyncall bump that caused this

[20:42] <tobs> m: subset Prime of UInt where *.is-prime; say Prime.^refinee

[20:42] <evalable6> tobs, rakudo-moar cf02c2e98: OUTPUT: ¬´(UInt)‚ê§¬ª

[20:42] <El_Che> Altai-man_: certainly

[20:42] <Altai-man_> https://github.com/MoarVM/dyncall/tree/b3aa7ff86e03ed53b3832054c928d3961f57bcac/dyncall

[20:43] <Altai-man_> what I don't understand is why it builds fine here

[20:43] <Altai-man_> I have gcc (GCC) 9.2.0

[20:43] <El_Che> well, the last link has a lot of distro's

[20:43] <El_Che> let's see how they build

[20:43] <Altai-man_> gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0 builds fine

[20:45] <rbt> Hi. I've been asked to get a few more eyes on this DBIish patch to ensure a single query is in-flight at a time per connection, which is a requirement by most DB software. If anyone has some time to take a look, it would be appreciated.

[20:45] <rbt> https://github.com/raku-community-modules/DBIish/pull/170

[20:46] <El_Che> Altai-man_: alpine 3.8 has gcc 6.4.0, 3.10 has 8.3.0

[20:47] <El_Che> they both fail

[20:47] <jdv79> nine: perhaps only the tests:)

[20:49] <El_Che> Altai-man_: https://github.com/mozilla/rr/issues/2363

[20:51] <leont> tobs: thanks :-)

[20:53] <Altai-man_> El_Che, I feel like alpine devs are trying a bit too hard sometimes when it comes to making the distro small.

[20:53] <Altai-man_> we can't live without a package there, I guess

[20:53] <El_Che> Altai-man_: thing is, we're compiking with gcc

[20:53] <El_Che> l

[20:53] *** andrzejku left
[20:53] <Altai-man_> isn't it musl vs libc issue?

[20:54] <Altai-man_> or, at least the ticket you linked mentions musl problems

[20:54] <Altai-man_> *glibc

[20:55] <El_Che> Altai-man_: I install build-base (with gcc and libc-dev)

[20:56] <El_Che> make adding the libc-compat lib will help

[20:57] <El_Che> let me try that

[20:58] <El_Che> it would break my "no dependencies policy", though

[21:10] <El_Che> Altai-man_: libc6-compat does not make a difference

[21:11] *** rindolf left
[21:14] <Altai-man_> El_Che, they suggest to set __USE_GNU and/or _GNU_SOURCE but it is actually defined: https://github.com/MoarVM/dyncall/blob/master/dynload/dynload_unix.c#L47-L48

[21:15] <El_Che> Altai-man_: do we need the bump in dyncall? If not, downgrade the dependency in a dot release so we have time until the next release to bump it again?

[21:16] <Altai-man_> El_Che, I am looking at dyncall sources right now to see if there is something

[21:16] <El_Che> Altai-man_++

[21:17] <jnthn> I believe we merged a patch to remove a workaround in MoarVM thanks to a bug fix in the latest dyncall 

[21:18] <Altai-man_> jnthn, anything related to dlGetLibraryPath?

[21:19] <Altai-man_> RTLD_SELF was introduced with latest bump

[21:19] <Altai-man_> and I see not so much info on cases of its missing

[21:21] <Altai-man_> https://dyncall.org/pub/dyncall/dyncall/rev/3840e0188520#l2.38

[21:21] <Altai-man_> I see this patch

[21:21] <Altai-man_> made 3 month ago

[21:23] *** japhb joined
[21:25] <Altai-man_> latest commits to this file a month ago still include RTLD_SELF

[21:25] <Altai-man_> just as it isn't something evil

[21:26] <Altai-man_> El_Che, what about other distro?

[21:26] <El_Che> the debians built fine, the is building atm https://travis-ci.org/nxadm/rakudo-pkg/builds/654169411

[21:27] <El_Che> sometime i386 fails due to the performance test that are kind of broken on slower platforms

[21:28] <Altai-man_> El_Che, I hope we will be able to find a solution without a point. As I get it (correct if wrong), apline packages are used for e.g. docker releases, so we just need to make it work once and then people will be able to use precompiled ones. and if one wants to build on alpine by hands, that's another issue. right?

[21:28] <Altai-man_> s/docker releases/docker images

[21:30] <El_Che> Altai-man_: docker is pretty much the only use case of alpine. While lot's of people use my pkgs for building alping images, I am pretty sure a lot of people compile rakudo themselves in their alpine docker images (easy if using a good CI pipeline)

[21:30] *** molaf joined
[21:30] <jnthn> rbt: Finally found a moment to reivew that.

[21:30] *** aborazmeh left
[21:32] <El_Che> Altai-man_: cenots 7 & 8 and Debian 8 passed already

[21:32] <El_Che> relocatable x64 as well

[21:33] <El_Che> so I think other than alpine the builds will be fine

[21:34] *** sena_kun joined
[21:36] *** Altai-man_ left
[21:37] <rbt> Thanks jnthn.

[21:41] <sena_kun> El_Che, as for people, who do a build themselves, if I'll patch alpine dockerfile (I doubt I can, but one can try), will it count as a solution?

[21:41] <tellable6> 2020-02-23T17:42:11Z #raku-dev <rba> sena_kun: What was it?

[21:41] <sena_kun> or we need a complete release abortion?

[21:43] <El_Che> sena_kun: no :(. People take regular alpine, add some packages and compile. So, there is no image to package, except if you mean the official alpine images

[21:44] <El_Che> sena_kun: If you have a fix, I can adapt my packages and we can add it to the release notes if a dot release is not desired

[21:44] <sena_kun> El_Che, so they'll use their own dockerfiles then.

[21:44] <El_Che> sena_kun: yes, most probably

[21:44] <sena_kun> I don't have a fix, but I am thinking about what are possible shortcuts, because our release pipeline is long and people and time consuming

[21:45] <El_Che> sena_kun: very often there is an inhouse official base image for security reasons

[21:45] <lizmat> so, in a nutshell, what is the problem ?

[21:46] <El_Che> lizmat: it does not build on alpine: https://travis-ci.org/nxadm/rakudo-pkg/jobs/654169417#L613

[21:46] <sena_kun> lizmat, bump of dyncall library to a new version, and this new version uses a macro which is for some reason available everywhere except alpine PLUS there is really not so much info about it.

[21:46] <El_Che> ^-- a better nutshell

[21:47] <sena_kun> what is _really_ weird is that I don't see a definition of RTLD_SELF in my local ./usr/include/dlfcn.h

[21:47] <lizmat> aha!

[21:47] <sena_kun> hm?

[21:48] <sena_kun> I mean, I don't see it there, but it still builds just fine for me

[21:48] <sena_kun> I'll try to build moarvm from scratch...

[21:49] <El_Che> sena_kun: if you need a Dockerfile with the dependencies: https://github.com/nxadm/rakudo-pkg/blob/2020.02/docker/Dockerfile-alpine-x86_64-3.11

[21:49] <El_Che> sena_kun: just give it --entrypoint=bash

[21:50] <El_Che> sena_kun: or just install these packages: 'build-base ca-certificates git libc-dev libffi linux-headers openssl perl perl-utils ruby zlib gzip tar git'

[21:51] <cpan-raku> New module released to CPAN! PDF::Font::Loader (0.2.9) by 03WARRINGD

[21:53] <sena_kun> https://gist.github.com/Altai-man/92356e8a9c270b1f4074adbf08c3bfba#file-moarvm-build-L251-L256 <-

[21:55] <sena_kun> no visible difference except did not find libzstd; will not use heap snapshot format version 3 for alpine

[21:55] <sena_kun> >	src/profiler/heapsnapshot.c:895:9: warning: 'strncpy' specified bound 8 equals destination size [-Wstringop-truncation] - my gcc is even more grumpy

[21:55] <sena_kun> nothing useful from diffing

[22:11] *** Kaiepi left
[22:11] *** Kaeipi joined
[22:16] *** chloekek left
[22:23] *** [Sno] left
[22:25] *** [Sno] joined
[22:27] <leont> This doesn't appear to compile, because apparently it doesn't know about SubsetHOW: $type.HOW ~~ Perl6::Metamodel::SubsetHOW

[22:27] <leont> Can anyone tell me what I should do instead?

[22:29] <tobs> m: say UInt.HOW ~~ Perl6::Metamodel::SubsetHOW

[22:29] <evalable6> tobs, rakudo-moar af8788b4d: OUTPUT: ¬´(exit code 1) Could not find symbol '&SubsetHOW' in 'Metamodel'‚ê§  in block <unit> at /tmp/NfF2uBHvGP line 1‚ê§‚ê§¬ª

[22:29] <tobs> leont: ^ it just misses the sigil and assumes &

[22:30] <tobs> m: say UInt.HOW ~~ $Perl6::Metamodel::SubsetHOW

[22:30] <evalable6> tobs, rakudo-moar af8788b4d: OUTPUT: ¬´True‚ê§¬ª

[22:30] <tobs> m: say Int.HOW ~~ $Perl6::Metamodel::SubsetHOW

[22:30] <evalable6> tobs, rakudo-moar af8788b4d: OUTPUT: ¬´True‚ê§¬ª

[22:30] <tobs> or maybe not...

[22:31] <leont> m: dd $Perl6::Metamodel::SubsetHOW

[22:31] <evalable6> leont, rakudo-moar af8788b4d: OUTPUT: ¬´Any element{'$SubsetHOW'} = Any‚ê§¬ª

[22:31] <tobs> m: say Perl6::Metamodel::.keys

[22:31] <evalable6> tobs, rakudo-moar af8788b4d: OUTPUT: ¬´(exit code 1) Could not find symbol '&Metamodel' in 'Perl6'‚ê§  in block <unit> at /tmp/0sx_N7kAr8 line 1‚ê§‚ê§¬ª

[22:33] <tobs> right, I guess classes (or whatever HOWs are) would not be referred to with a sigil anyway...

[22:33] <leont> They are refered to exactly the way I pasted in the prelude

[22:33] <tobs> so I have no idea

[22:34] *** lucasb left
[22:35] <vrurg> m: say Int.HOW ~~ Metamodel::SubsetHOW

[22:35] <evalable6> vrurg, rakudo-moar af8788b4d: OUTPUT: ¬´False‚ê§¬ª

[22:35] <vrurg> tobs: ^^

[22:36] <vrurg> Metamodel doesn't need Perl6 namespace in Raku.

[22:36] <lizmat> m: say Bool.HOW ~~ Metamodel::SubsetHOW

[22:36] <tobs> oho, thanks

[22:36] <evalable6> lizmat, rakudo-moar af8788b4d: OUTPUT: ¬´False‚ê§¬ª

[22:36] <lizmat> hmmm

[22:36] <lizmat> m: say Bool.HOW ~~ Metamodel::EnumHOW

[22:36] <evalable6> lizmat, rakudo-moar af8788b4d: OUTPUT: ¬´True‚ê§¬ª

[22:36] <lizmat> right

[22:36] <lizmat> m: say (subset Foo of Int).HOW ~~ Metamodel::SubsetHOW

[22:36] <evalable6> lizmat, rakudo-moar af8788b4d: OUTPUT: ¬´True‚ê§¬ª

[22:37] <leont> Ah, I see

[22:37] <leont> That does help

[22:53] <Geth> ¬¶ doc/star-RAKU: ad0d4c19ad | (Stoned Elipot)++ | 3 files

[22:53] <Geth> ¬¶ doc/star-RAKU: Use $*RAKU instead of $*PERL

[22:53] <Geth> ¬¶ doc/star-RAKU: 

[22:53] <Geth> ¬¶ doc/star-RAKU: Along the way mention .gist method instead of the string context operator

[22:53] <Geth> ¬¶ doc/star-RAKU: ~ as a way to get the full stringified version of the Raku interpreter.

[22:53] <Geth> ¬¶ doc/star-RAKU: Also, when $*RAKU is involved, use '6.d' as version in example output.

[22:53] <Geth> ¬¶ doc/star-RAKU: review: https://github.com/Raku/doc/commit/ad0d4c19ad

[22:53] <Geth> ¬¶ doc/star-RAKU: 84bb995990 | (Stoned Elipot)++ | 2 files

[22:53] <Geth> ¬¶ doc/star-RAKU: Use $*RAKU and mention Rakudo version wrt it

[22:53] <Geth> ¬¶ doc/star-RAKU: review: https://github.com/Raku/doc/commit/84bb995990

[22:54] <Geth> ¬¶ doc: stoned++ created pull request #3230: Star raku

[22:54] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3230

[22:55] *** cpage left
[23:14] *** Sgeo left
[23:15] *** Sgeo joined
[23:22] *** wamba left
[23:33] *** Altai-man_ joined
[23:36] *** sena_kun left
[23:41] *** hungrydonkey joined
[23:46] *** mowcat left
[23:48] *** aborazmeh joined
[23:48] *** aborazmeh left
[23:48] *** aborazmeh joined
[23:54] *** mowcat joined
[23:59] *** mowcat left
