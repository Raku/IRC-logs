[00:30] *** xinming left
[00:31] *** xinming joined
[00:38] *** JRaspass left
[00:43] *** Tirifto left
[00:57] <tonyo> japhb: merged your resource R.  currently don't have a way to manage orgs. i've been thinking a lot about how to do that and also to allow access (through those orgs) to darkpacns

[00:57] <japhb> tonyo: OK, fair enough

[00:58] <tonyo> mostly thinking about how to make a UI for managing that as it seems like it'd easily get unwieldy through CLI

[00:58] <japhb> tonyo: Just filed https://github.com/tony-o/raku-fez/issues/31 (which I mention here since you're looking at fez stuff right now).  :-)

[00:59] *** Black_Ribbon joined
[01:00] <tonyo> i'll take a look into that - that might require a reindex

[01:00] <tonyo> goes a long with the change i'm testing right now to allow module authors to remove their modules

[01:01] <japhb> (y)

[01:01] <japhb> Thanks tonyo

[01:05] *** mniip left
[01:13] *** JRaspass joined
[01:23] *** aborazmeh joined
[01:24] *** earenndil joined
[01:24] *** pecastro left
[01:25] *** moon-child left
[01:25] *** earenndil is now known as moon-child

[01:27] *** JRaspass left
[01:36] *** leont left
[01:46] *** guifa2 joined
[02:03] *** asymptotically joined
[02:03] *** asy left
[02:14] *** Doc_Holliwood left
[02:33] *** kvw_5_ joined
[02:34] *** jast left
[02:37] *** kvw_5 left
[02:43] *** jast joined
[02:50] *** aborazmeh left
[03:05] *** neshpion joined
[03:09] *** afresh1 left
[03:10] *** xinming left
[03:10] *** xinming joined
[03:13] *** neshpion left
[03:14] *** neshpion joined
[03:17] *** Garbanzo joined
[03:19] *** clickmesh joined
[03:19] *** afresh1 joined
[03:33] *** tinita left
[03:45] *** tinita joined
[03:53] *** epony joined
[04:24] *** mowcat left
[04:34] *** wamba joined
[04:49] *** rindolf joined
[04:55] *** guifa2 left
[05:00] *** mniip joined
[05:23] *** neshpion left
[05:28] *** xinming left
[05:31] *** xinming joined
[05:55] *** codesections left
[06:21] *** frost-lab joined
[06:22] *** jmerelo joined
[06:23] *** wamba left
[06:30] *** frost-lab left
[06:32] *** frost-lab joined
[06:32] *** maggotbrain left
[06:34] *** maggotbrain joined
[06:45] <tonyo> japhb: indexes now should show correct dependency counting

[06:47] *** __jrjsmrtn__ joined
[06:49] *** _jrjsmrtn left
[06:49] *** gompyn joined
[06:56] *** gompyn left
[06:57] *** Doc_Holliwood joined
[07:07] *** peteretep_ joined
[07:08] *** peteretep_ left
[07:09] *** peteretep joined
[07:10] *** gompyn joined
[07:38] *** domidumont joined
[07:39] *** brtastic joined
[07:42] *** xinming left
[07:44] *** xinming joined
[07:44] <japhb> tonyo: Looks like it worked for MUGS::Core, thank you!  Now on to the next few repos in the dependency graph ....

[07:46] *** wamba joined
[08:03] *** xinming left
[08:03] *** xinming joined
[08:06] *** Sgeo left
[08:07] *** parabolize left
[08:09] *** pecastro joined
[08:13] *** aluaces left
[08:29] *** skaji__ joined
[08:29] *** SmokeMachine_ joined
[08:29] *** benkolera_ joined
[08:29] *** caasih_ joined
[08:29] *** bingos_ joined
[08:30] *** kawaii_ joined
[08:30] *** timeless_ joined
[08:30] <japhb> tonyo: Yup, worked for all my repos so far.

[08:31] <japhb> tonyo: And as a bonus ... I just uploaded the 100th dist to fez!

[08:31] *** riasue joined
[08:31] <japhb> üéâ‚Ä≠üéà‚Ä≠

[08:32] *** bingos left
[08:33] *** bingos_ is now known as BinGOs

[08:33] *** BinGOs left
[08:33] *** BinGOs joined
[08:33] *** a3f joined
[08:36] *** MilkmanDan joined
[08:43] *** a3f_ left
[08:43] *** MilkmanD1n left
[08:43] *** timeless left
[08:43] *** riatre left
[08:43] *** skaji_ left
[08:43] *** SmokeMachine left
[08:43] *** benkolera left
[08:43] *** kawaii left
[08:43] *** caasih left
[08:43] *** skaji__ is now known as skaji_

[08:43] *** benkolera_ is now known as benkolera

[08:43] *** SmokeMachine_ is now known as SmokeMachine

[08:43] *** caasih_ is now known as caasih

[08:43] *** timeless_ is now known as timeless

[08:43] *** kawaii_ is now known as kawaii

[08:48] *** dakkar joined
[09:00] *** sena_kun left
[09:01] *** xinming left
[09:04] *** xinming joined
[09:04] *** sena_kun joined
[09:04] *** orinthe left
[09:05] *** orinthe joined
[09:12] *** aluaces joined
[09:12] *** parv joined
[09:14] *** JRaspass joined
[09:24] *** parv left
[09:27] *** xinming left
[09:27] *** parv joined
[09:28] *** PimDaniel joined
[09:28] *** xinming joined
[09:28] *** gompyn left
[09:29] *** plvicente joined
[09:29] <plvicente> Hi

[09:29] <plvicente> I have a doubt

[09:29] <PimDaniel> Hi \o, /me jemerelo i could implement the code rather simply into my class, look at get_method_link method : https://pastebin.com/iU79psrG

[09:32] *** brtastic left
[09:32] * PimDaniel jemerelo But now i get the pro lem that instead of passing the reference, the code is evaluated en runs. :( weird. This only happens in the hash passed to the new sub which is a default constructor , look at the comments into the code.

[09:32] *** plvicente left
[09:34] <PimDaniel> To all : I think this question is more general and has nothing to do with the first question:

[09:35] <PimDaniel> suppose we have a code reference $mycode which points to a sub or method... okay? now:

[09:35] *** wamba left
[09:37] <PimDaniel> In some situations when you write : $code , and suppose you have an lvalue : $x = $code; $x will contain the code reference, but in other situations it will contain the returned type of the sub because the code ran.

[09:38] <PimDaniel> I do not want the code to run : why does my code run? I thought it should run in 2 situations:

[09:39] <tyil> I thought you need to add `()` after it to run, so $x = $code() will have $x contain the return value of running $code, but $x = $code should make $x a copy of $code

[09:39] <PimDaniel> 1/ if i put & before , 2/ if i add parentesis after : &$mycode; or $mycode(...);

[09:42] *** Doc_Holliwood left
[09:42] * PimDaniel tyil : i did not put the () and the code ran. If you get the time look at my code posted here and please, read the comments: https://pastebin.com/iU79psrG

[09:44] *** leont joined
[09:50] *** sena_kun left
[09:52] *** plvicente joined
[10:00] *** gompyn joined
[10:00] *** gompyn left
[10:02] *** PimDaniel left
[10:09] *** orinthe2 joined
[10:09] *** orinthe left
[10:09] *** orinthe2 is now known as orinthe

[10:11] *** brtastic joined
[10:13] *** maggotbrain left
[10:14] *** maggotbrain joined
[10:18] *** PimDaniel joined
[10:18] *** clickmesh left
[10:18] <PimDaniel> \o

[10:20] * PimDaniel jmerelo and tyil. Forget it : the solution works, it was just horrible mistakes that i made into Event class code. Thank's a lot.

[10:20] *** PimDaniel left
[10:39] *** mowcat joined
[10:41] *** vike left
[10:42] <jmerelo> .tell PimDaniel sorry, I didn't catch this before... You can use .tell jmerelo to leave messages for me here.

[10:42] <tellable6> jmerelo, I'll pass your message to PimDaniel

[10:42] *** hythm_ left
[10:43] <jmerelo> .tell PimDaniel you can use the sigil & to indicate it's a block instead of a $

[10:43] <tellable6> jmerelo, I'll pass your message to PimDaniel

[10:44] *** plvicente left
[10:47] *** plvicente joined
[10:48] *** mowcat left
[10:53] *** plvicente left
[10:54] *** plvicente joined
[10:54] *** mowcat joined
[11:02] *** sena_kun joined
[11:08] *** PimDaniel joined
[11:09] *** PimDaniel left
[11:09] *** wamba joined
[11:12] *** orinthe left
[11:12] *** orinthe joined
[11:15] *** parv left
[11:23] *** plvicente left
[11:27] *** xinming left
[11:27] *** xinming joined
[11:34] *** ufobat joined
[11:38] *** pedro_ joined
[11:46] *** pedro_ left
[11:47] *** plvicente joined
[11:50] *** Doc_Holliwood joined
[11:51] *** xinming left
[11:53] *** xinming joined
[11:55] *** hythm joined
[11:56] *** ufobat left
[11:57] *** ufobat joined
[12:16] *** gompyn joined
[12:17] *** vike joined
[12:17] *** cog joined
[12:20] <cog> m: my $a =  enum  < a b c >; say $a.keys

[12:20] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´(a b c)‚ê§¬ª

[12:20] <cog> m: enum A < a b c >; say A.keys

[12:21] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´()‚ê§¬ª

[12:23] <lizmat> m: dd enum  < a b c >   # cog

[12:23] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Map.new((:a(0),:b(1),:c(2)))‚ê§¬ª

[12:24] <lizmat> so maybe that's the weird thing?

[12:24] <cog> I file a bug

[12:24] <lizmat> cog++

[12:25] <cog> Sorry to file and not to follow thru. I am trying to get to speed in MoarVM internals.

[12:26] <lizmat> cog: no pb, thanks for reporting!

[12:35] <cog> m: enum A < a b c >; say A.enums.keys

[12:35] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´(b a c)‚ê§¬ª

[12:42] <cog> Seems to be the expected behaviour. Highly unintuitive though. https://github.com/Raku/old-issue-tracker/issues/1418

[12:49] *** aindilis joined
[12:56] *** brtastic left
[12:56] <cog> Probably I fail to understand the benefits to inherit from Any or Cool. 

[13:00] <lizmat> perhaps the Mu.keys should check for an EnumHOW and return .enums.keys?

[13:00] <lizmat> alas, we cannot dispatch on the HOW of a class

[13:05] <cog> Just got a magic track pad replacing an erratic mouse. Expensive even discounted by amazon but nice.

[13:07] <lizmat> I dropped one 3 years ago, and its surface splintered much like an iPhone does

[13:08] <lizmat> haven't replaced it, since it just still works  :-)

[13:08] <El_Che> I am a trackball man :)

[13:08] <lizmat> if touchpads hadn't been invented, I would be using a trackball as well

[13:08] <lizmat> mouses are evil

[13:12] *** Black_Ribbon left
[13:17] <El_Che> I don't even know if trackpads work on linux

[13:25] *** plvicente left
[13:28] *** ab5tract joined
[13:32] *** plvicente joined
[13:34] *** brtastic joined
[13:35] <ab5tract> I'm still a bit blown away that slurping a 1.2GB file into an array takes 10x the memory (and that's even using `str` instead of `Str`, which saves a couple GB)

[13:35] <tellable6> 2021-02-17T21:58:29Z #raku <MasterDuke> ab5tract: Tux still does post his benchmark timings most days, but in #raku-dev

[13:35] <lizmat> pretty sure they do, woolfy has one ?

[13:35] <lizmat> ab5tract: is it ASCII, UTF-8 or binary data ?

[13:36] <lizmat> ah, str

[13:36] <lizmat> hmmm

[13:36] <cog> Every char is 32bits inside raku ?

[13:36] <lizmat> ab5tract: do you need to have it in an array?

[13:36] <MasterDuke> 10x the 1.2GB, or 10x the size if slurped as a single string?

[13:37] <ab5tract> MasterDuke, 10x the 1.2GB

[13:37] <ab5tract> lizmat, I'm open to other options, the basic idea is to insert CSV data into an SQLite db

[13:38] <ab5tract> I can do that on each line (I'm not actually using .slurp, I'm using while/.get)

[13:38] *** mowcat left
[13:38] <El_Che> I have the latest ergo logitech one, but I don't think there are many users. Many will see it as a 90s tech :)

[13:38] <lizmat> ab5tract:

[13:38] *** xinming left
[13:38] <lizmat> for "file".IO.lines -> $line {

[13:38] <ab5tract> but I thought it would be interesting to see how SQLite handles the millions of rows in a transaction

[13:39] <lizmat> is the most memory efficient way to handle big files

[13:39] <lizmat> it is lazy

[13:39] <lizmat> it will read blobs at a time, and produce lines from that lazily

[13:39] <MasterDuke> it doesn't like too many. we have to limit the number of values in an individual transaction when creating a .sql profile

[13:41] <ab5tract> lizmat, doesn't seem to change the memory usage :/

[13:41] <ab5tract> over while/.get

[13:41] <ab5tract> on an open filehandle

[13:41] <lizmat> then maybe it's the SQL side that's taking all of the memory ?

[13:41] *** sena_kun left
[13:42] *** xinming joined
[13:42] <ab5tract> MasterDuke, interesting, I was reading something that SQLite was quite capable of doing a lot of inserts in a single transaction. part of me needed to "see it to believe it" :)

[13:43] <ab5tract> lizmat, all I'm doing inside the loop is @lines.push: $l (where @lines is defined outside the loop as my str @lines)

[13:43] <MasterDuke> i think it's a pretty high number, but i'm pretty sure we did hit it

[13:43] <lizmat> ab5tract: yeah, that will eat memory :-)

[13:43] <MasterDuke> well, there might be a different limit for number of individual inserts vs number of values in an insert values

[13:44] <lizmat> ab5tract: so is that SQL you're pushing?

[13:44] *** sena_kun joined
[13:44] <ab5tract> nope, CSV lines

[13:45] <ab5tract> lizmat, if you are curious, it's the allCountries.zip in http://download.geonames.org/export/dump/

[13:46] <lizmat> so why are you pushing to the array ?

[13:46] <ab5tract> lizmat, but really, creating an array of each line of text from a 1.2GB file doesn't seem like it would imply a 10x explosion to me

[13:46] <ab5tract> lizmat, to insert into SQLite in a single transaction

[13:47] <lizmat> well, as cog++ pointed out, if it's all ASCII, there is at least a 4x increase because internally 32bit / grapheme

[13:47] <ab5tract> also, because my first instinct was `my @lines = $path.IO.slurp` and I was shocked when I hit swap space with ~14GB of extra memory

[13:49] <MasterDuke> well, moarvm does try to store ascii as 8bit

[13:49] <lizmat> well, apart from it taking more memory than you expect, why read / store everything in memory and then process, I presume?

[13:51] <ab5tract> sorry, what's the presumption there?

[13:52] <ab5tract> indeed the next thing I would do would be to spawn $core-1 threads to convert to an AoH

[13:56] <lizmat> ab5tract: why not do something like my @AoH = "file".IO.lines.hyper.map: ...

[13:56] <ab5tract> lizmat, no good reason not to do that at all :)

[13:57] <ab5tract> won't that be the same as slurping?

[13:58] <ab5tract> ie, pull in all lines and then call hyper on the result?

[13:58] <lizmat> nope, it will only read lines for a batcn

[13:58] <lizmat> IO::Path.lines is lazy

[13:58] <ab5tract> sweet!

[14:00] <ab5tract> that definitely sounds way better, though I doubt it will have a huge impact on the overall memory impact if I store the result, I could insert into the SQLite db per hyper batch and that should make for an interesting result 

[14:00] <lizmat> well, there's that

[14:01] *** jmerelo left
[14:02] <ab5tract> lizmat, I haven't spent a whole lot of time investigating or optimizing this. I was just shocked by the impact of my @lines = $path.IO.slurp and started down that path. Inserting almost a million rows one at a time didn't seem like the best option to me either, but I was only at the stage of looking at the memory "explosion"

[14:02] *** ufobat left
[14:02] <ab5tract> lizmat, thanks for the suggestion! :D

[14:02] *** ufobat joined
[14:02] <lizmat> yw

[14:20] *** gompyn left
[14:21] *** gompyn joined
[14:22] *** plvicente left
[14:24] *** plvicente joined
[14:24] *** gompyn left
[14:26] *** gompyn joined
[14:26] *** gompyn left
[14:28] *** gompyn joined
[14:30] *** gompyn left
[14:30] *** gompyn joined
[14:31] <andinus> so i was building rstar 2021.02, moar build was successful but nqp build failed with: http://ix.io/2RF2

[14:31] *** gompyn left
[14:31] <andinus> it failed twice

[14:32] *** ab5tract left
[14:32] *** jjh joined
[14:32] <andinus> i'm on openbsd 6.8, gmake 4.3

[14:33] *** brtastic1 joined
[14:33] *** jjh left
[14:33] *** brtastic left
[14:33] *** brtastic1 is now known as brtastic

[14:36] *** plvicente left
[14:42] *** brtastic left
[14:45] *** plvicente joined
[14:49] *** guifa2 joined
[14:51] <MasterDuke> tyil: ^^^

[14:53] <tyil> hmm

[14:55] *** Sgeo joined
[14:58] *** plvicente left
[14:58] *** codesections joined
[14:58] *** wamba left
[14:59] *** squashable6 left
[15:00] *** plvicente joined
[15:01] *** squashable6 joined
[15:05] <tyil> I can reproduce it on FreeBSD at least (I don't have any running OpenBSD machines to test on)

[15:08] *** gompyn joined
[15:10] <tyil> andinus: you were running an earlier Rakudo Star without any problems, right?

[15:13] *** gompyn left
[15:13] *** tyil left
[15:14] *** gompyn joined
[15:14] *** plvicente left
[15:15] *** gompyn left
[15:17] *** tyilanmenyn joined
[15:17] *** tyilanmenyn is now known as tyil

[15:17] <tyil> I shouldn't be testing this on my bouncer server I think

[15:31] <andinus> tyil: yes, rstar 2020.10 worked fine

[15:31] <tyil> alright

[15:32] <tyil> openbsd-6.8 doesn't play nice in a vm it looks like, so I'll continue testing in a freebsd vm for now, since I got the exact same error there

[15:32] <tyil> I'm guessing it's a difference between GNU and BSD

[15:32] <andinus> maybe but it uses gnu make right? 

[15:32] <tyil> it should, yes

[15:33] <tyil> and since 2020.10 worked fine, I think that should continue to work fine

[15:34] <andinus> everything broke for me, when i run raku it exits with "segmentation fault"

[15:34] <andinus> i think thats because moar was upgraded but rakudo is still 2020.10

[15:34] <tyil> yeah, probably

[15:44] <tyil> interesting

[15:44] <tyil> on a freebsd VM *without* gmake installed it seems to work fine, but a retry after install gmake throws the errors

[15:48] *** plvicente joined
[15:52] <tyil> ah, my rstar install step calls `make`, but if `gmake` is installed, it seems to make a different Makefile, which then in turn  *must* be called with gmake now

[15:52] <tyil> so I need to check if gmake is installed, and if that's the case, call gmake && gmake install instead of make && make install

[15:52] <tyil> checking if that's also the case for rakudo

[15:52] <tyil> doesn't seem to be the case for moarvm, interestingly enough

[15:53] <tyil> andinus: care to test a small change for me, to confirm this hunch?

[15:53] <andinus> tyil: i see, ok

[15:54] <andinus> so the installer can work with bsdmake?

[15:54] <tyil> if gmake is not installed, it seems to work on this vm

[15:56] <andinus> i see, also is there a way to skip moar build since its already installed?

[15:56] <tyil> not currently

[15:57] <andinus> do i test without gmake or are you sending a patch?

[15:57] <tyil> I'll make you an updated rakudo star tarball to test with in a (hopefully) short moment

[15:59] <El_Che> tyil: search the path and call make with full path?

[15:59] <tyil> that won't do anything

[15:59] <tyil> full path or not doesn't matter here

[16:00] <tyil> the issue seems that the configure steps of nqp and rakudo produce a different makefile if they find gmake installed

[16:00] *** plvicente left
[16:00] <tyil> but r* always calls regular make

[16:00] <El_Che> I see

[16:00] <tyil> so I'm making it so that r* will also check if gmake is installed, and use that instead for nqp/rakudo

[16:01] *** xinming left
[16:04] *** xinming joined
[16:06] *** jmerelo joined
[16:06] <tyil> andinus: testing the change on my vm now

[16:07] <tyil> and it seems to work for the NQP build now

[16:07] <tyil> andinus: https://dist.tyil.nl/raku/star/rakudo-star-2021.02.1-2.tar.gz the tarball in question, if you have time :>

[16:08] <guifa2> is it possibly to add a multi method at runtime or are they locked in place at composition?

[16:10] *** parabolize joined
[16:10] *** Doc_Holliwood left
[16:11] <guifa2> meh it looks like that's the case

[16:11] <MasterDuke> you can add at runtime, but then you'll have to call ^compose on whatever you've added it to

[16:12] <guifa2> ah okay

[16:12] <guifa2> that's actually not going to be terrible then

[16:13] <andinus> tyil: thanks, i'll test it in a min

[16:13] <tyil> thanks, keep me posted :)

[16:13] *** plvicente joined
[16:13] * guifa2 is making a Role that will provide an autocoercion to classes that implement it. 

[16:13] <jmerelo> guifa2: looks cool

[16:13] <guifa2>  Each class can REGISTER-COERCE to send its coercion method over, but I wasn't sure if I could manage to provide proper ordering, etc

[16:15] *** rindolf left
[16:27] *** plvicente left
[16:30] *** Doc_Holliwood joined
[16:32] <andinus> tyil: looks like nqp build was successful, it's building rakudo now

[16:34] <tyil> \o/

[16:34] <tyil> thats a good first sign

[16:36] *** plvicente joined
[16:43] *** mowcat joined
[16:44] <andinus> rakudo was also installed!

[16:44] <andinus> thanks tyil!

[16:44] <tyil> andinus: thanks for reporting the issue :>

[16:45] <tyil> I'll commit it to master and plan a release with the fix soon-ish

[16:45] <andinus> is it safe to exit the script? its installing the modules but it didn't update the src since that already existed

[16:45] <andinus> so its installing the same modules again

[16:45] <tyil> should be fine

[16:45] <tyil> some modules may be of a higher version (such as zef)

[16:45] <tyil> so I wouldn't recommend it, but it shouldn't break anything either

[16:45] *** mowcat left
[16:46] *** mowcat joined
[16:46] <andinus> the fetch thing skipped zef too because it already existed in src/

[16:46] <tyil> ah

[16:46] <tyil> you dont need to fetch with the "official" tarball, only if you git cloned the repo and want to make a tarball of it

[16:47] <andinus> yes i cloned the repo, missed the release tarballs

[16:47] <tyil> ah, then you should be good

[16:48] <andinus> yeah, i think i'll update zef and other modules later

[16:48] <tyil> you can `rstar clean -s && rstar fetch` to update the modules, and only install modules with `rstar install [-p installdir] modules`

[16:48] <tyil> but it's not specifically needed

[16:48] <andinus> i see, i'll just install the modules with that then ^

[16:49] *** mowcat left
[16:52] *** mowcat joined
[17:04] *** gompyn joined
[17:07] *** plvicente left
[17:08] *** kerframil left
[17:13] *** gompyn left
[17:16] *** plvicente joined
[17:17] *** Garbanzo left
[17:17] *** Garbanzo joined
[17:20] *** kerframil joined
[17:21] *** brtastic joined
[17:22] *** gompyn joined
[17:23] *** Garbanzo left
[17:29] <tonyo> japhb lmk if you have any issues, i just changed the way it indexes/processes

[17:29] <tonyo> it being fez. 

[17:32] *** ab5tract joined
[17:32] *** dakkar left
[17:33] *** plvicente left
[17:34] *** kerframil left
[17:36] *** ab5tract left
[17:40] *** aborazmeh joined
[17:41] *** ufobat_ joined
[17:42] *** cj_ is now known as cj

[17:45] *** ufobat left
[17:51] *** gompyn left
[17:51] *** gompyn joined
[17:53] *** gompyn left
[17:53] *** neshpion joined
[17:55] *** aindilis left
[17:55] *** gompyn joined
[17:59] *** gompyn left
[18:01] *** rindolf joined
[18:05] *** brtastic left
[18:16] *** domidumont left
[18:20] *** aborazmeh left
[18:20] *** xinming left
[18:21] *** xinming joined
[18:49] *** mowcat left
[18:49] *** mowcat joined
[18:52] *** jmerelo left
[18:59] *** plvicente joined
[19:03] <japhb> tonyo: Meaning, I should test uploads again?

[19:11] *** plvicente left
[19:17] *** plvicente joined
[19:23] *** plvicente left
[19:25] *** plvicente joined
[19:25] *** brtastic joined
[19:26] *** wamba joined
[19:31] *** xinming left
[19:32] *** xinming joined
[19:49] *** Doc_Holliwood left
[20:08] *** Garbanzo joined
[20:09] *** brtastic left
[20:12] *** Xliff joined
[20:15] *** Black_Ribbon joined
[20:27] <tonyo> if you uploaded last night should be good, i see the 100th module uploaded to Fez .. i've uploaded too so it should be fine

[20:27] <tonyo> just changed to sqs processor rather than triggering from the upload directly (so i don't have to race removal/adding to main index)

[20:29] *** xinming left
[20:30] *** Doc_Holliwood joined
[20:31] *** xinming joined
[20:32] *** ufobat_ left
[20:37] *** plvicente left
[20:38] *** aindilis joined
[20:39] *** plvicente joined
[20:56] *** Xliff left
[20:58] <Geth> ¬¶ problem-solving/solution-250: 053ef5b4ef | Altai-man++ | solutions/documentation/search-categories.md

[20:58] <Geth> ¬¶ problem-solving/solution-250: Provide a solution document for https://github.com/Raku/problem-solving/issues/250

[20:58] <Geth> ¬¶ problem-solving/solution-250: 

[20:58] <Geth> ¬¶ problem-solving/solution-250: "Documentation search categories are not standartized"

[20:58] <Geth> ¬¶ problem-solving/solution-250: 

[20:58] <Geth> ¬¶ problem-solving/solution-250: Fixes https://github.com/Raku/problem-solving/issues/250

[20:58] <Geth> ¬¶ problem-solving/solution-250: review: https://github.com/Raku/problem-solving/commit/053ef5b4ef

[21:11] <Geth> ¬¶ doc/search-categories: 15 commits pushed by Altai-man++

[21:11] <Geth> ¬¶ doc/search-categories: review: https://github.com/Raku/doc/compare/9d5dfd53fa1a^...5fabe7b044db

[21:12] <Geth> ¬¶ doc/search-categories: 14 commits pushed by Altai-man++

[21:12] <Geth> ¬¶ doc/search-categories: review: https://github.com/Raku/doc/compare/5fabe7b044db...17af85b86862

[21:27] *** sxmx left
[21:33] *** vike left
[21:39] *** vike joined
[21:42] *** sxmx joined
[22:11] *** aborazmeh joined
[22:20] *** telex left
[22:22] *** telex joined
[22:24] *** Kaiepi left
[22:30] *** wamba left
[22:35] *** rindolf left
[22:39] *** plvicente left
[22:59] *** Kaiepi joined
[23:13] *** Grrrr left
[23:14] *** grumble left
[23:15] *** Gruber joined
[23:15] *** xkr47 left
[23:15] *** gurmble joined
[23:15] *** gurmble is now known as grumble

[23:17] *** Doc_Holliwood left
[23:30] *** dotdotdot left
[23:48] *** Deej69 joined
[23:49] *** Deej81 joined
[23:51] *** Deej81 left
[23:53] *** gfldex left
[23:53] *** gfldex joined
[23:59] *** marcusr left
