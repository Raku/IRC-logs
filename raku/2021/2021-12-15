[00:01] *** kjp joined
[00:02] *** reportable6 left
[00:41] *** euandreh joined
[01:05] *** reportable6 joined
[01:18] *** euandreh left
[01:32] *** euandreh joined
[02:29] *** Guest64873 joined
[02:29] *** Guest64873 left
[02:32] *** ggoebel left
[03:33] *** unicodable6 left
[03:33] *** greppable6 left
[03:33] *** sourceable6 left
[03:33] *** squashable6 left
[03:33] *** coverable6 left
[03:33] *** quotable6 left
[03:33] *** nativecallable6 left
[03:33] *** benchable6 left
[03:33] *** committable6 left
[03:33] *** notable6 left
[03:33] *** reportable6 left
[03:33] *** bisectable6 left
[03:33] *** shareable6 left
[03:33] *** linkable6 left
[03:33] *** statisfiable6 left
[03:33] *** releasable6 left
[03:33] *** bloatable6 left
[03:33] *** tellable6 left
[03:33] *** evalable6 left
[03:33] *** unicodable6 joined
[03:33] *** releasable6 joined
[03:33] *** greppable6 joined
[03:34] *** notable6 joined
[03:35] *** bloatable6 joined
[03:35] *** committable6 joined
[03:36] *** quotable6 joined
[03:36] *** coverable6 joined
[03:36] *** benchable6 joined
[04:03] <tonyo> .tell patrickb fez uses http rather than https so that it's a little more accessible to systems with ssl or if you wanted to do pure raku, leaves fewer depdendencies

[04:05] <tonyo> did RSC have any conclusions as to who should be the rakudo community module manager?

[04:06] <tonyo> when fez groups are ready, i mean

[04:18] *** gcd left
[04:35] *** squashable6 joined
[04:35] *** statisfiable6 joined
[04:35] *** linkable6 joined
[04:36] *** evalable6 joined
[04:48] *** frost joined
[05:33] *** bisectable6 joined
[05:34] *** tellable6 joined
[06:28] *** Colt left
[06:34] *** shareable6 joined
[06:36] *** sourceable6 joined
[06:43] *** jmcgnh left
[06:52] *** jmcgnh joined
[07:03] *** reportable6 joined
[07:31] *** seednode left
[07:32] *** seednode joined
[07:34] *** nativecallable6 joined
[07:34] *** abraxxa joined
[07:40] *** abraxxa left
[07:41] *** abraxxa joined
[07:56] *** Sgeo left
[07:58] *** dmc00 left
[08:09] *** Geth left
[08:09] *** Geth joined
[08:24] *** xinming left
[09:01] *** dakkar joined
[09:22] *** lichtkind__ joined
[10:01] *** squashable6 left
[10:01] *** squashable6 joined
[11:01] *** benchable6 left
[11:01] *** evalable6 left
[11:01] *** nativecallable6 left
[11:01] *** reportable6 left
[11:01] *** releasable6 left
[11:01] *** notable6 left
[11:01] *** coverable6 left
[11:01] *** bloatable6 left
[11:01] *** tellable6 left
[11:01] *** squashable6 left
[11:01] *** linkable6 left
[11:01] *** statisfiable6 left
[11:01] *** unicodable6 left
[11:01] *** committable6 left
[11:01] *** bisectable6 left
[11:01] *** sourceable6 left
[11:01] *** greppable6 left
[11:01] *** quotable6 left
[11:01] *** shareable6 left
[11:02] *** benchable6 joined
[11:02] *** nativecallable6 joined
[11:03] *** committable6 joined
[11:03] *** releasable6 joined
[11:03] *** shareable6 joined
[11:03] *** squashable6 joined
[11:03] *** greppable6 joined
[11:04] *** bloatable6 joined
[11:04] *** coverable6 joined
[11:30] *** TempIRCLogger left
[11:31] *** TempIRCLogger joined
[11:35] *** ggoebel joined
[11:35] *** dogbert11 left
[11:38] *** TempIRCLogger left
[11:38] *** TempIRCLogger joined
[11:41] *** Altai-man joined
[11:44] *** TempIRCLogger left
[11:44] *** TempIRCLogger joined
[11:44] *** TempIRCLogger left
[11:44] *** TempIRCLogger joined
[11:44] *** TempIRCLogger left
[11:44] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[11:45] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[11:45] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[11:45] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[11:45] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[11:46] *** dogbert17 joined
[12:02] *** reportable6 joined
[12:02] *** notable6 joined
[12:02] *** evalable6 joined
[12:03] *** linkable6 joined
[12:03] *** sourceable6 joined
[12:03] *** tellable6 joined
[12:04] *** statisfiable6 joined
[12:04] *** quotable6 joined
[12:04] *** bisectable6 joined
[12:07] *** TempIRCLogger joined
[12:12] *** TempIRCLogger left
[12:12] *** TempIRCLogger joined
[12:16] <SmokeMachine> codesections: it seems the links for the _ submodules on doc seem to be broken...

[12:16] *** TempIRCLogger left
[12:16] *** TempIRCLogger joined
[12:22] *** TempIRCLogger left
[12:22] *** TempIRCLogger joined
[12:22] <El_Che> tonyo: how is MITM worked around? Hashes? Signatures?

[12:54] *** squashable6 left
[12:54] *** squashable6 joined
[13:00] *** TempIRCLogger left
[13:00] *** TempIRCLogger joined
[13:00] *** TempIRCLogger left
[13:00] *** TempIRCLogger joined
[13:09] *** dg joined
[13:25] *** TempIRCLogger left
[13:25] *** TempIRCLogger joined
[13:25] *** TempIRCLogger left
[13:26] *** TempIRCLogger joined
[13:27] *** TempIRCLogger left
[13:27] *** TempIRCLogger joined
[13:27] *** TempIRCLogger left
[13:28] *** TempIRCLogger joined
[13:37] *** TempIRCLogger left
[13:37] *** TempIRCLogger joined
[13:44] *** TempIRCLogger left
[13:45] *** TempIRCLogger joined
[13:52] *** TempIRCLogger left
[13:52] *** TempIRCLogger joined
[13:58] *** TempIRCLogger left
[13:58] *** TempIRCLogger joined
[14:02] *** unicodable6 joined
[14:11] *** TempIRCLogger left
[14:11] *** TempIRCLogger joined
[14:12] *** TempIRCLogger left
[14:12] *** TempIRCLogger joined
[14:14] *** frost left
[14:26] *** Geth left
[14:26] *** Geth joined
[14:32] <lizmat> tonyo: the plan for now is that anybody with write access to raku-community-modules, should be a able to upload to zef

[14:32] <lizmat> is that feasible?   or would you need a more ad-hoc set up?

[14:40] *** halcek joined
[14:41] <Geth> ¦ problem-solving: Xliff assigned to codesections Issue A Mechanism for Adding Hooks into CURI for Custom Installation Output https://github.com/Raku/problem-solving/issues/309

[14:57] <halcek> Hi, a quick question: Is, or could there be there some built-in function in Raku, equivalent to Ruby's times? So that you can set repeating a value by using a keyword (such as times, in 5.times ( print "T" ) , or something like print "T" 5.times, which is grammatically natural for a novice, instead of an operator being the only possibility to

[14:57] <halcek> induce this like: print "T" x 5?

[14:58] *** jcallen left
[14:58] *** jcallen joined
[15:01] <[Coke]> (http vs. https) in general, requiring SSL is a minimum these days. I wouldn't be able to use a service at $dayjob that didn't support https

[15:01] *** halcek left
[15:05] <El_Che> I prefer non working hypothetical clients than no TLS

[15:06] <El_Che> because if there is no good alternative for encryption, then I won't trust the code I just downloaded

[15:20] *** Sgeo joined
[15:31] <[Coke]> Right.

[15:34] <[Coke]> (times) - you mention a keyword but your hypothetical example is a method. (in my opinion, the operator x is closer to a keyword)

[15:35] <[Coke]> in your example, there's nothing tying the result of "5.times" to the "T" - I think you'd end up with a two terms in a row problem there.

[15:46] *** tonyo left
[15:49] *** tonyo joined
[15:52] *** suman joined
[15:55] <suman> my @vals = <2 20 40 30>;

[15:55] <suman> How to get ranks of the elements of this array as <1 2 4 3>

[16:02] <lizmat> suman: I'm not sure I understand the question

[16:03] <ugexe> if they were sorted what index what they be

[16:08] <suman> I was looking to do fractional ranking https://rosettacode.org/wiki/Ranking_methods#Raku

[16:10] <suman> But for integers

[16:14] <suman> So if I have my @vals = <2 30 20 40 30>, I want to get fractional ranks as <1  3.5 2 4 3.5>

[16:16] *** monkey_ left
[16:19] *** monkey_ joined
[16:22] *** squashable6 left
[16:25] *** squashable6 joined
[16:29] *** squashable6 left
[16:30] *** squashable6 joined
[16:38] *** Guest7 joined
[16:39] *** linkable6 left
[16:42] <Guest7> I'm interested in writing a password generator in raku on Mac OS. Are random strings created with the standard tools (pick, rand, etc.) on this platform considered cryptographically valid?

[16:45] <lizmat> I'd say: no

[16:46] <lizmat> no guarantee whatsoever

[16:46] <lizmat> https://raku.land/?q=crypt   # modules to check out Guest7 

[17:02] *** monkey_ left
[17:06] *** p6steve joined
[17:07] *** monkey_ joined
[17:07] <SmokeMachine> if you want to stores it on DB as well, maybe this could help: https://raku.land/cpan:JSTOWE/RedX::HashedPassword

[17:08] *** suman left
[17:17] <tonyo> lizmat: there should be an owner for the org on fez, admins can change permissions of other users and members can only upload

[17:18] <lizmat> tonyo: is that an "owner" on the fez system?  or do you mean an owner on github ?

[17:19] <p6steve> hi folks - per the raku advent instructions I hereby announce that my Wordpress draft is ready for review and pull request on https://github.com/Raku/advent done

[17:20] <p6steve> can someone remind me of the consensus alternative to travis-ci.com (my credits finally expired)

[17:21] *** monkey_ left
[17:23] *** monkey_ joined
[17:25] *** p6steve left
[17:28] <lizmat> p6steve: Github Actions

[17:28] <tellable6> lizmat, I'll pass your message to p6steve

[17:34] *** p6steve joined
[17:37] *** dakkar left
[17:38] <tonyo> owner on the fez system

[17:39] <tonyo> so that they can delegate who has access to uploading modules on behalf of RCM (or if there's only one person who is allowed then they can also be the owner)

[17:40] <lizmat> tonyo: what is the granularity ?

[17:41] <tonyo> the only difference is `members` can only upload modules, `admin`s can add/kick/modify people/roles to/from the group

[17:45] <Guest7> The 'secrets' module in the standard Python3 dist is said to be valid for generating cryptographically secure strings, unlike the Python2 'random' module. I wonder how the standard raku tools compare to 'secrets'. Anyone?

[17:46] <lizmat> tonyo: I guess you can make me owner for now, and I'll add the other people of the RSC then

[17:49] <tonyo> Guest7: there's crypto rand providers in the ecosystem

[17:50] <tonyo> https://raku.land/github:skinkade/Crypt::Random

[17:55] <Guest7> Thanks, tonyo.

[17:58] *** Guest7 left
[17:58] *** Colt joined
[18:02] *** reportable6 left
[18:10] <p6steve> can someone remind me of the consensus alternative to travis-ci.com (my credits finally expired) [sorry to ask again - I think I maybe got ejected and missed the answer]

[18:10] <tellable6> 2021-12-15T17:28:33Z #raku <lizmat> p6steve: Github Actions

[18:10] <p6steve> thanks tellable6

[18:10] <tellable6> p6steve, Anytime!

[18:23] *** monkey_ left
[18:26] *** monkey_ joined
[18:30] *** Altai-man left
[18:48] *** p6steve left
[19:26] *** p6steve joined
[19:29] <discord-raku-bot> <Nemokosch#9980> hello

[19:29] <discord-raku-bot> <Nemokosch#9980> https://rt-archive.perl.org/perl6/Ticket/Display.html?id=122899 I found this

[19:29] <discord-raku-bot> <Nemokosch#9980> does "is cached" still not work with multis?

[19:30] <lizmat> https://github.com/Raku/old-issue-tracker/issues/3540  is the current state and is still open

[19:32] <lizmat> adding "use experimental :cached;" seems to result in working code of the example ?

[19:34] * lizmat closed https://github.com/Raku/old-issue-tracker/issues/3540

[19:35] <discord-raku-bot> <Nemokosch#9980> m:  ```use experimental :cached; 

[19:35] <discord-raku-bot> <Nemokosch#9980>     multi fib(0) { 0 }

[19:35] <discord-raku-bot> <Nemokosch#9980>     multi fib(1) { 1 }

[19:35] <discord-raku-bot> <Nemokosch#9980>     multi fib(Int $n where * >= 0 ) is cached { fib($n - 2) + fib($n - 1) }

[19:35] <discord-raku-bot> <Nemokosch#9980>     say fib(18);

[19:35] <discord-raku-bot> <Nemokosch#9980> ```

[19:35] <discord-raku-bot> <Nemokosch#9980> it doesn't work

[19:40] *** awdawd joined
[19:40] *** awdawd left
[19:41] <discord-raku-bot> <Nemokosch#9980> what version are you on?

[19:41] <discord-raku-bot> <Nemokosch#9980> for me it legitimately doesn't work

[19:43] <lizmat> hmmm... HEAD is what I'm on

[19:43] <lizmat> :-)

[19:46] <lizmat> m: use experimental :cached; multi fib(0 --> 0) { }; multi fib(1 --> 1) { }; multi fib(UInt:D $n) is cached { print "x"; fib($n-2) + fib($n-1) }; say fib(18); say fib(18)

[19:46] <camelia> rakudo-moar ca4f003bc: OUTPUT: «xxxxxxxxxxxxxxxxx2584␤2584␤»

[19:49] *** TempIRCLogger left
[19:50] *** TempIRCLogger joined
[19:51] *** p6steve left
[19:53] <lizmat> bisectable6: use experimental :cached; multi fib(0 --> 0) { }; multi fib(1 --> 1) { }; multi fib(UInt:D $n) is cached { print "x"; fib($n-2) + fib($n-1) }; say fib(18); say fib(18)

[19:53] <bisectable6> lizmat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[19:53] <merryprog> <3 bisectable6 

[19:53] <bisectable6> lizmat, Output on all releases: https://gist.github.com/2c72d7b7914ebb44314a0053eef9fbde

[19:53] <bisectable6> lizmat, Bisecting by exit code (old=2021.09 new=2021.10). Old exit code: 1

[19:54] <merryprog> bisectable6 is seriously one of my favorite chat bots I've ever seen. It's so awesome.

[19:54] <bisectable6> lizmat, bisect log: https://gist.github.com/e17e63a5d1438701707ad1db87d8f06a

[19:55] <bisectable6> lizmat, Bisecting by output (old=2016.07.1 new=2016.08.1) because on both starting points the exit code is 1

[19:55] <bisectable6> lizmat, bisect log: https://gist.github.com/61b5507d0d803968456b3004ff838e61

[19:55] <bisectable6> lizmat, (2016-07-21) https://github.com/rakudo/rakudo/commit/68afa3f1e77862e4b61f9946103047103fff3c2c

[19:55] <bisectable6> lizmat, bisect log: https://gist.github.com/a702f1c73627949d626486650594e3ad

[19:55] <bisectable6> lizmat, bisect log: https://gist.github.com/354af059eaea4accb732553e8ec17de0

[19:55] <bisectable6> lizmat, Output on all releases and bisected commits: https://gist.github.com/63ab1fdd13e591b026aafa5968e1a5bb

[19:57] *** abraxxa left
[19:59] <lizmat> afk&

[20:07] *** tejr left
[20:08] *** tejr joined
[20:13] *** tejr left
[20:29] *** tejr joined
[20:40] *** tejr left
[21:01] *** tejr joined
[21:03] *** reportable6 joined
[21:05] *** sena_kun left
[21:06] *** sena_kun joined
[21:23] *** p6steve joined
[21:48] *** lichtkind_ joined
[21:50] *** euandreh left
[21:51] *** lichtkind__ left
[22:12] *** p6steve left
[22:13] *** euandreh joined
[22:23] *** euandreh left
[22:40] *** linkable6 joined
[22:45] *** euandreh joined
[22:53] <[Coke]> do we have a ticket for "control-c'ing out of the REPL needs a 'stty sane' to fix things' ?

[22:53] <[Coke]> (2021.10)

[23:05] *** monkey_ left
[23:53] <japhb> [Coke]: Which line editor are you using?  Do you see the same problem at Rakudo HEAD?  Do you have the same problem with Terminal::LineEditor (zef install it, then set the env var RAKUDO_LINE_EDITOR=LineEditor)?

