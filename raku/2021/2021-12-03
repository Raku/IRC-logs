[00:02] *** djerius left
[00:02] *** djerius_ joined
[00:02] *** reportable6 left
[00:05] <MasterDuke> Summer: https://github.com/rakudo/rakudo/issues/4662

[00:09] <discord-raku-bot> <Nemokosch#9980> <:cameliathink:897316667653247057>

[00:42] *** tom joined
[00:43] *** tom left
[01:04] *** reportable6 joined
[02:00] <SmokeMachine> m: say none(1,2,6) == 6

[02:00] <camelia> rakudo-moar 78ce830c3: OUTPUT: «none(False, False, True)␤»

[02:04] *** evalable6 left
[02:04] *** linkable6 left
[02:06] *** linkable6 joined
[02:07] *** evalable6 joined
[02:08] <Summer> @MasterDuke, thank you muchly, also might be worth swapping in a permalink: https://github.com/Summertime/answers/blob/8497f24e1abc917f10ae91f49a3d574566dc8c62/advent-of-code/2021/02/raku-pm

[03:07] *** evalable6 left
[03:07] *** linkable6 left
[03:18] *** solitario left
[03:45] <merryprog> Since we were talking(ish) about emojis(ish) the other day(ish), here's something tangentially(ish) related: https://javier.xyz/emoji-to-scale/ (https://news.ycombinator.com/item?id=29425735)

[04:07] *** evalable6 joined
[04:09] *** linkable6 joined
[04:27] *** Sgeo joined
[05:17] *** Sgeo_ joined
[05:20] *** Sgeo left
[05:48] <discord-raku-bot> <pie_flavor#7868> wow, I just found the mother of all Comma bugs

[05:48] <discord-raku-bot> <pie_flavor#7868> if you write a specific bit of code, you stop being able to type things, even though you can still e.g. copy/paste

[05:50] <discord-raku-bot> <pie_flavor#7868> where do I report these? doesn't seem to be a github linked from the website

[06:02] *** reportable6 left
[06:17] <japhb> pie_flavor: The Comma folks overlap with the #cro folks, you can probably ask for a bug submission link there.

[06:17] <japhb> (Though they are out of timezone right now)

[06:21] <discord-raku-bot> <pie_flavor#7868> ah, that doesn't have a discord bridge

[06:38] <elcaro> Not having a .zip (or .tranpose) method on Iterables seems like a missed opertunity. would make transformation pipelines easier

[06:38] <elcaro> will monkey patch it in a module for the time being

[06:56] <discord-raku-bot> <pie_flavor#7868> Does Raku have a function that sorts a single element of a list in O(n), i.e. so that all larger numbers are after it and all smaller numbers are before it?

[06:56] <discord-raku-bot> <pie_flavor#7868> Rust calls this function `select_nth_unstable` but used to call it `partition_at_index`.

[06:58] *** Nicholas left
[07:25] <discord-raku-bot> <elcaro#8265> No

[07:29] *** seednode left
[07:30] *** seednode joined
[07:52] <discord-raku-bot> <pie_flavor#7868> sad. what is the shortest way to convert nil to a default value, but not also convert 0 (so not ||)?

[07:56] <moon-child> /

[07:56] <moon-child> err

[07:56] <moon-child> //

[07:56] <moon-child> m: say Nil // ';o'; say 0 // ';o'

[07:56] <camelia> rakudo-moar 78ce830c3: OUTPUT: «;o␤0␤»

[07:56] *** eseyman joined
[07:59] *** abraxxa joined
[08:03] *** abraxxa left
[08:04] *** abraxxa-home joined
[08:04] *** abraxxa joined
[08:05] *** reportable6 joined
[08:11] *** Woodi left
[08:12] *** Woodi joined
[08:23] *** TheAthlete joined
[08:45] *** discord-raku-bot left
[08:46] *** discord-raku-bot joined
[08:46] *** abraxxa-home left
[08:47] *** abraxxa-home joined
[08:51] *** riffraff joined
[09:04] *** xinming left
[09:05] *** xinming joined
[09:16] *** Ergo444 joined
[09:16] <Ergo444> hi all

[09:19] *** xinming left
[09:19] *** Sgeo_ left
[09:21] <discord-raku-bot> <Nemokosch#9980> hellu

[09:21] *** xinming joined
[09:21] *** archenoth joined
[09:22] *** Oshawott left
[09:26] *** Skarsnik joined
[10:00] *** riffraff left
[10:10] *** pony joined
[11:10] *** evalable6 left
[11:10] *** linkable6 left
[11:27] *** xinming left
[11:40] *** Altai-man joined
[11:48] *** Skarsnik left
[11:48] <tbrowder> ugexe: you here?

[11:50] <tbrowder> on my local host all is well with zef, fez, and App::Mi6 (2.0.1)

[11:51] <tbrowder> on a remote server, zef and fez ok, latest raku, zef info shows App::Mi6 ver 2+

[11:52] <tbrowder> zef install only installs App::Mi6 1.*, not 2*, weird

[11:52] <tbrowder> should i blow away zef's undercarriage db?

[11:53] <tbrowder> .tell ugexe ^^^

[11:53] <tellable6> tbrowder, I'll pass your message to ugexe

[11:59] <lizmat> tbrowder: on my machine, a "zef upgrade App::Mi6" did the right thing

[11:59] <tbrowder> duh, i’ll try requesting the desired ver (but still, what gives?)

[12:00] <tbrowder> lizmat: thnx, that wrkd on local host, my remote is prblm

[12:02] *** reportable6 left
[12:02] *** patrickb joined
[12:11] *** evalable6 joined
[12:13] *** discord-raku-bot left
[12:13] *** discord-raku-bot joined
[12:15] <tbrowder> well, on the remote, upgrade would NOT work, but specifying the version suceeded

[12:16] <tbrowder> think something is messed up with zef db there...

[12:22] <tbrowder> i think with the first no upgrade i should have run plain "zef upgrade" to see if updating pkg indices would have helped. anyway, i just uninstalled mi6, then requested it be installed and got latest version, so no apparent foul.

[12:23] <tbrowder> lizmat: silently looks cool. would it solve the testing problem you think instead

[12:25] <tbrowder> **when testing "shell cmd" and trying to capture its output?

[12:26] <lizmat> silently just overrides $*OUT and $*ERR for the scope of the block given

[12:26] <lizmat> I don't think shell output makes it to $*OUT or $*ERR ?

[12:27] <ugexe> it will if you don't specific :out or :err

[12:27] <tellable6> 2021-12-03T11:53:33Z #raku <tbrowder> ugexe ^^^

[12:28] <lizmat> in that case it will  :-)

[12:31] <tbrowder> ugexe: you see my recent experience with zef above?

[12:33] <tbrowder> "zef info" reported latest mi6 but wouldn't upgrade it without me requesting specific version

[12:33] <ugexe> what zef version?

[12:34] <ugexe> oh latest? hmm

[12:34] <tbrowder> just an anomaly with pkg indexes outdated or something similar? 0.13,0

[12:34] <ugexe> ah thats not the latest

[12:35] *** sienet_ja_LSD[m] joined
[12:36] <ugexe> in 0.13.1 i took priority away from the cache

[12:36] *** Ergo44471 joined
[12:36] <tbrowder> hm, i tried to "zef upgrade zef" but that didn't work. i guess i have to reinstall from src

[12:37] <Ergo44471> hi

[12:37] <tbrowder> howdy

[12:37] <Ergo44471> when I install the module Hash::File

[12:38] <tbrowder> or "zef install 'zef:ver<0.13.1>'"

[12:39] *** abraxxa left
[12:39] <ugexe> tbrowder: zef itself might be falling victim to that bug (i.e. the cache, with its older version, is getting chosen)

[12:40] <Ergo44471> when i installed, it still tries to install old source

[12:42] *** abraxxa joined
[12:42] <ugexe> Ergo44471: what does `zef --version` say 

[12:51] <Ergo44471> v0.13.0

[12:51] *** riffraff joined
[12:53] <ugexe> need to install a newer zef: `zef install https://github.com/ugexe/zef.git`

[12:54] <tbrowder> ok, i just upgraded all my deb hosts to 0.13.4,

[12:54] <ugexe> you want at least v0.13.1

[12:55] *** riffraff left
[12:55] <ugexe> or really anything other than v0.13.0

[12:55] <tbrowder> this seemed to work: zef install "zef:ver<0.13.4{

[12:55] *** riffraff joined
[12:55] <tbrowder> *>"

[12:58] *** riffraff left
[12:58] *** riffraff joined
[13:00] *** riffraff left
[13:00] *** riffraff joined
[13:04] *** riffraff left
[13:09] <tbrowder> lizmat: zef upgrade to 0.13.4 sounds like a good raku weekly item to me

[13:12] <tbrowder> i hope that will also solve the problem with local module upgrades vs repo module upgrades

[13:12] <Ergo44471> Unsure of how to handle the following distributions: zef:ver<0.13.4>:auth<github:ugexe>:api<0>

[13:12] <Ergo44471> All requested distributions are already at their latest versions

[13:12] <Ergo44471> zef upgrade zef

[13:13] *** linkable6 joined
[13:13] *** riffraff joined
[13:13] <ugexe> did you try the command i posted?

[13:14] <Ergo444> Can't upgrade identities that aren't installed: to, 0.13.4

[13:14] <Ergo444> zef upgrade to 0.13.4?

[13:14] <ugexe> i never said to do that

[13:15] <ugexe> well, rather just do ugexe>	need to install a newer zef: `zef install https://github.com/ugexe/zef.git`

[13:15] <ugexe> the command `zef upgrade to 0.13.4` isnt an actual command

[13:15] <Ergo444> yes

[13:17] <ugexe> zef install https://github.com/ugexe/zef.git

[13:17] <Ergo444> ok, now something happend

[13:17] <ugexe> run that^ dont change anything even if you think you should

[13:17] <sienet_ja_LSD[m]> m: my $a = '101010101010'; my @b = $a.split(""); say @b.elems;

[13:17] <camelia> rakudo-moar 5e02f4624: OUTPUT: «14␤»

[13:18] <sienet_ja_LSD[m]> why does splitting a 12 char string give you a 14 element array?

[13:19] <tbrowder> i think the two "" on each end contribute

[13:19] <Ergo444> ok that is ok now

[13:19] <Ergo444> How do make zef refresh?

[13:20] <lizmat> zef upgrade zef

[13:20] <sienet_ja_LSD[m]> m: my $a = '101010101010'; my @b = $a.split(""); say @b;

[13:20] <camelia> rakudo-moar 5e02f4624: OUTPUT: «[ 1 0 1 0 1 0 1 0 1 0 1 0 ]␤»

[13:20] <lizmat> did the trick for me

[13:20] <ugexe> they have already upgraded

[13:20] <Ergo444> I mean the modules I have kust updated

[13:20] <lizmat> zef upgrade

[13:21] <sienet_ja_LSD[m]> that's still a 12 element array?

[13:21] <lizmat> sienet_ja_LSD[m]: yes, because split "" *splits*

[13:21] <lizmat> and it splits on char boundary, and there's char boundary at beginning and end as well

[13:21] <Ergo444> It is not updated

[13:21] <lizmat> what you probably want:

[13:21] <Ergo444> the module is not updated still

[13:21] <sienet_ja_LSD[m]> m: my $a = '101010101010'; my @b = $a.split(""); say @b[13];

[13:21] <camelia> rakudo-moar 5e02f4624: OUTPUT: «␤»

[13:22] *** riffraff left
[13:22] <lizmat> m: my $a = "01010101010"; my @b = $a.comb; say @b

[13:22] <camelia> rakudo-moar 5e02f4624: OUTPUT: «[0 1 0 1 0 1 0 1 0 1 0]␤»

[13:22] *** riffraff joined
[13:22] <lizmat> sienet_ja_LSD[m]  ^^

[13:22] <sienet_ja_LSD[m]> lizmat: ok thanks

[13:23] <Ergo444> funny how many stuff does not show up module search

[13:23] <Ergo444> It did not show me some modules

[13:23] <Ergo444> m: say "o

[13:23] <camelia> rakudo-moar 5e02f4624: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3say "o7⏏5<EOL>␤    expecting any of:␤        argument list␤…»

[13:23] <Ergo444> m: say "o"*45

[13:23] <camelia> rakudo-moar 5e02f4624: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5o' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[13:23] <Ergo444> m: say "o" x 45

[13:23] <camelia> rakudo-moar 5e02f4624: OUTPUT: «ooooooooooooooooooooooooooooooooooooooooooooo␤»

[13:24] <Ergo444> m: say 45 x "o"

[13:24] <camelia> rakudo-moar 5e02f4624: OUTPUT: «WARNING: unhandled Failure detected in DESTROY. If you meant to ignore it, you can mark it as handled by calling .Bool, .so, .not, or .defined methods. The Failure was:␤Cannot convert string to number: base-10 number must begin with valid digits or …»

[13:27] *** riffraff left
[13:27] *** riffraff joined
[13:30] *** abraxxa left
[13:32] *** riffraff left
[13:34] *** riffraff joined
[13:35] *** riffraff left
[13:35] *** riffraff joined
[13:39] <Ergo44471> is there a way to measure the speed of a code section?

[13:43] <lizmat> m: for ^1000 { my $a = $_ * $_ }; say now - LEAVE now

[13:43] <camelia> rakudo-moar 5e02f4624: OUTPUT: «Potential difficulties:␤    Useless use of 'now' in sink context␤    at <tmp>:1␤    ------> 3{ my $a = $_ * $_ }; say now - LEAVE now7⏏5<EOL>␤Instant:1638539030.392395133␤Use of Nil in numeric context␤  in block <unit> at <tmp> line …»

[13:43] <lizmat> m: for ^1000 { my $a = $_ * $_ }; LEAVE say now - ENTER now

[13:43] <camelia> rakudo-moar 5e02f4624: OUTPUT: «0.001780406␤»

[13:44] <lizmat> m: for ^100000 { my $a = $_ * $_ }; LEAVE say now - ENTER now

[13:44] <camelia> rakudo-moar 5e02f4624: OUTPUT: «0.027159605␤»

[13:47] <Ergo44471> phasers

[13:47] <Ergo44471> funny that you can use phasers in expressions

[13:48] *** frost left
[13:51] <lizmat> yeah, that's pretty cool

[13:52] <Ergo44471> when is thaf expression  evaluated?

[13:54] <lizmat> the "ENTER now" is evaluated when entering the scope and "freezes" its return value

[13:55] <lizmat> the "LEAVE say now - ..." is evaluated when the scope is left

[13:59] *** A26F64 joined
[14:01] <sienet_ja_LSD[m]> m: my Bool $a = True; my Int $b = $a ? 1 : 0; say $b;

[14:01] <camelia> rakudo-moar 5e02f4624: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of ?  and : for the ternary conditional operator.  In␤Raku please use: ??  and !!.␤at <tmp>:1␤------> 3my Bool $a = True; my Int $b = $a ?7⏏5 1 : 0; say $b;␤»

[14:02] <sienet_ja_LSD[m]> m: my Bool $a = True; my Int $b = $a ?? 1 : 0; say $b;

[14:02] <camelia> rakudo-moar 5e02f4624: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Please use !! rather than :␤at <tmp>:1␤------> 3my Bool $a = True; my Int $b = $a ?? 1 :7⏏5 0; say $b;␤    expecting any of:␤        colon pair␤»

[14:02] <sienet_ja_LSD[m]> m: my Bool $a = True; my Int $b = $a ? 1 :: 0; say $b;

[14:02] <camelia> rakudo-moar 5e02f4624: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of ?  and : for the ternary conditional operator.  In␤Raku please use: ??  and !!.␤at <tmp>:1␤------> 3my Bool $a = True; my Int $b = $a ?7⏏5 1 :: 0; say $b;␤»

[14:02] <sienet_ja_LSD[m]> m: my Bool $a = True; my Int $b = $a ?? 1 :: 0; say $b;

[14:02] <camelia> rakudo-moar 5e02f4624: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Please use !! rather than ::␤at <tmp>:1␤------> 3my Bool $a = True; my Int $b = $a ?? 1 :7⏏5: 0; say $b;␤    expecting any of:␤        colon pair␤»

[14:03] *** reportable6 joined
[14:07] *** riffraff18 joined
[14:11] *** riffraff left
[14:51] <SmokeMachine> I think I've already suggested that, but: https://twitter.com/smokemachine/status/1466781720594767873?s=20

[14:52] *** monkey_ joined
[14:52] <SmokeMachine> I really think that would be an improvement to .reduce to receive a "first aggregation value" as an optional positional parameter

[15:20] <patrickb> o/

[15:20] <patrickb> (Moving discussion here...) I'm working on a small side project where I try to embedd a rakudo (basically a mod_rakudo apache plugin).

[15:23] <patrickb> At the core I need to call a raku function from C. I a clean way to do that is to set up a callback function via nativecall in raku land and then use that callback on the C side.

[15:23] <patrickb> *I think that

[15:25] <patrickb> Now apache being apache has each request in it's own thread. Is there any documentation on the limits wrt treads and nativecall callbacks? Can I just concurrently hit the same callback from different threads?

[15:25] <patrickb> I.e. share a single VM instance?

[15:26] <patrickb> Or should I better give each thread its own interpreter?

[15:29] *** monkey_ left
[15:32] <sienet_ja_LSD[m]> how to fix expected Positional[Array] but got Array ([ ...)

[15:33] <sienet_ja_LSD[m]> just passing an array to a sub as an argument

[15:40] <Altai-man> sienet_ja_LSD[m], either remove the constraint or ensure type on the caller side

[15:40] <Altai-man> e.g.

[15:40] <Altai-man> m: sub a(@a) { say @a }; a([42]);

[15:40] <camelia> rakudo-moar 5e02f4624: OUTPUT: «[42]␤»

[15:41] <Altai-man> ^ removing the constraint

[15:41] <Altai-man> m: sub a(Int @a) { say @a }; a([42]);

[15:41] <camelia> rakudo-moar 5e02f4624: OUTPUT: «Type check failed in binding to parameter '@a'; expected Positional[Int] but got Array ([42])␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:41] <Altai-man> ^ this throws

[15:41] <Altai-man> m: sub a(Int @a) { say @a }; a(Array[Int].new(42));

[15:41] <camelia> rakudo-moar 5e02f4624: OUTPUT: «[42]␤»

[15:41] <sienet_ja_LSD[m]> ah ok thanks

[15:41] <Altai-man> ^ this ensures the constraint is sensible from the caller side

[15:41] <Altai-man> m: Array[Int].new(42, "Str")

[15:41] <camelia> rakudo-moar 5e02f4624: OUTPUT: «Type check failed in assignment to ; expected Int but got Str ("Str")␤  in block <unit> at <tmp> line 1␤␤»

[15:42] <Altai-man> in general it's because unless you specify the type it won't check what's inside the array and then the subroutine doesn't want to "risk" and accept something potentially bogus

[15:42] <sienet_ja_LSD[m]> well the type was Array

[15:43] <Altai-man> you mean like "sub foo(Array @foo) {}"?

[15:44] <sienet_ja_LSD[m]> yes

[15:44] *** Sgeo joined
[15:45] <Altai-man> "@" sigil implies @rray by itself (or rather anything doing Positional role), so "typing" the variable with this sigil specifies type of elements inside the Positional. So "Int @rray" is a positional of Ints and "Array @rray" is a positional of Arrays.

[15:46] <Altai-man> so you can either drop the type if you don't want it, "@" will imply something positional for you, or do "Array $foo" if you want it for some reason.

[15:46] *** monkey_ joined
[15:47] <sienet_ja_LSD[m]> sub foo(Str @data)  gave me an error Type check failed in binding to parameter '@data'; expected Positional[Str] but got Array (...)

[15:48] <sienet_ja_LSD[m]> but it works if you just remove the type

[15:49] <Altai-man> yup, same case. if you don't want a type guarantee, then remove the type declaration, otherwise ensure types on the caller side.

[15:51] <sienet_ja_LSD[m]> aye

[15:54] *** riffraff18 left
[15:54] *** riffraff18 joined
[16:10] *** gfldex left
[16:10] *** discord-raku-bot left
[16:13] *** riffraff18 left
[16:13] *** riffraff18 joined
[16:27] *** monkey_ left
[16:29] *** mmat joined
[16:40] *** xenu joined
[16:41] <xenu> hi, how common is it to use .pl and .pm extensions for raku? i'm asking because i wonder if it's feasible to remove those extensions from raku definition in linguist to reduce the number of false positives

[16:41] <xenu> i looked at the code of some random modules and none are using those extensions

[16:42] <xenu> .t also conflicts with perl, but it seems it *is* commonly used so it probably has to stay

[16:43] <lizmat> I'd say that .pl and .pm can pretty much be removed at the moment... the .t question is a bit more involved  :-)

[16:53] *** riffraff18 left
[16:54] *** riffraff18 joined
[16:58] *** riffraff18 left
[16:59] *** mmat left
[17:17] *** aoeuidhtns joined
[17:25] *** melezhik joined
[17:26] <melezhik> does raku advent still accept papers?

[17:29] <Altai-man> melezhik, absolutely

[17:30] <melezhik> I have some idea in mind ... where can I get the schedule to estimate time I have  ?

[17:30] <melezhik> https://github.com/Raku/advent/blob/master/raku-advent-2021/authors.md

[17:30] <melezhik> ?

[17:35] *** monkey_ joined
[17:37] <SmokeMachine> Why did the squashathons end?

[17:55] *** abraxxa-home left
[17:55] <Altai-man> SmokeMachine, no people with free time to push it each time.

[17:57] <[Coke]> had a weird VMNull error show up today: https://gist.github.com/coke/df02b554112fc6fe6439c58cc0aad88f

[17:57] <[Coke]> I do not expect .type to actually do something helpful here, but that error message is bad.

[17:58] <Altai-man> [Coke], can you try with `--ll-exception` flag?

[18:01] *** Altai-man left
[18:02] *** reportable6 left
[18:03] <[Coke]> added

[18:03] <[Coke]> I'm on moar-2021.10

[18:06] <[Coke]> If a squashathon is something you're interested in, and you'd feel more comfortable working with someone, I'd recommend asking around here on IRC to see if you can get a mini mentoring session

[18:07] <[Coke]> if you're comfortable working on your own, maybe just let folks know you're looking at a particular ticket.

[18:08] *** melezhik left
[18:18] <SmokeMachine> .tell Altai-man yes, that makes sense, thanks

[18:18] <tellable6> SmokeMachine, I'll pass your message to Altai-man

[18:18] *** riffraff18 joined
[18:22] *** riffraff18 left
[18:22] *** riffraff18 joined
[18:27] *** riffraff18 left
[18:58] *** Ergo44471 left
[19:01] *** monkey_ left
[19:02] *** monkey_ joined
[19:03] *** reportable6 joined
[19:17] *** riffraff18 joined
[19:19] *** riffraff18 left
[19:20] *** riffraff18 joined
[19:24] *** riffraff18 left
[19:26] *** monkey_` joined
[19:27] *** monkey_ left
[19:32] *** dextercd joined
[19:39] <patrickb> Is there any special trickery involved, to call a function via NativeCall, that has been defined in the executable itself (i.e. in the minimal C program I wrote, which links libmoar.so and starts the interpreter)?

[19:39] <patrickb> As it stands now it just prints: "Cannot locate symbol 'set_callback' in native library ''"

[19:41] * patrickb suspects I need to set some gcc flag to make the functions available for external use...

[19:41] *** monkey_` left
[19:42] *** Skarsnik joined
[19:45] <patrickb> google is my friend: https://stackoverflow.com/a/17083153

[19:46] *** riffraff18 joined
[19:55] <lizmat> patrickb: I think a bare "is native" should be enough?

[19:55] <lizmat> e.g. https://github.com/lizmat/P5localtime/blob/0d4949399d1ba216d6ea01071d072bc86cf34a22/lib/P5localtime.rakumod#L28

[19:56] *** riffraff18 left
[19:56] <patrickb> lizmat: I already solved it. As that SO post stated, I was missing a linker flag, to make the symbols available: -Wl,--export-dynamic

[19:56] *** riffraff18 joined
[19:57] <patrickb> lizmat: I don't want to call into a standard library, but call a function I have written myself in the same .c file, where I set up and run the moar interpreter.

[19:57] <lizmat> Ah, ok, I see  :-)

[19:59] *** riffraff18 left
[19:59] *** riffraff18 joined
[20:00] *** riffraff18 left
[20:01] *** riffraff18 joined
[20:05] *** riffraff18 left
[20:06] <Skarsnik> is there a place to post blog post? I tried the 'Onion perl' site like I was using a long time ago, but the markdown support is aweful x)

[20:06] <tellable6> 2021-12-01T00:44:41Z #raku <tonyo> Skarsnik you need to name the block itself, eg: token <name> { };

[20:07] <lizmat> Skarsnik: would it be acceptable as an advent blog post ?

[20:07] *** riffraff18 joined
[20:08] <Skarsnik> It's like a multi part thing of an on going work x)

[20:08] <Skarsnik> I don't think it really fit the advent theme x)

[20:08] <lizmat> ah, well...  most people I know either set up their own server if they have the hardware, or they use wordpress or similar

[20:09] <tonyo> i use github pages

[20:09] <tonyo> works well enough with a custom domain and it's free

[20:09] <patrickb> I'd vote for a non perl / raku platform for non echo chamber readers and best a popular one.

[20:10] <patrickb> What about dev.to?

[20:10] <tonyo> for the blog?

[20:10] <patrickb> yes

[20:11] <tonyo> another banger

[20:11] <patrickb> banger?

[20:11] <tonyo> a good one

[20:11] <patrickb> ah :-)

[20:11] <tonyo> or a sausage if you're british

[20:12] * patrickb learns he's not that good with figures of speech

[20:14] *** riffraff18 left
[20:14] <Skarsnik> I copy/paste the preview from code in the thing as rich text x) http://blogs.perl.org/users/sylvain_colinet/2021/12/writing-a-snes-assembler-compilerdisassembler---day-1.html

[20:14] *** riffraff18 joined
[20:18] *** riffraff18 left
[20:18] <patrickb> nine: I'm currently a bit puzzled by: https://github.com/niner/Inline-Perl6/blob/b3e667cf1ded92c2484d19e76cc9d63a409ccd4c/Perl6.xs#L90-L109 Can you quickly explain, what's happening / point me in a direction where to start reading?

[20:19] <Skarsnik> Magic *pouf*

[20:28] <patrickb> oh... This is a copy of the first few lines of MVM_interp_run

[20:34] *** A26F64 left
[20:38] *** riffraff18 joined
[20:39] <nine> patrickb: it may be about time to have a real look at how embedding MoarVM should work. When I wrote that code I had pratically no experience at all with MoarVM internals.

[20:39] <nine> That's why I did the thing with the native callback. It's what I knew from writing Inline::Perl5

[20:40] <Skarsnik> yes, please, I want to use Raku from C/C++ software xD

[20:41] <patrickb> nine: My idea was, to get that mod_rakudo apache thing going, and then write a blog post explaining how it works.

[20:41] <patrickb> :-P

[20:42] <patrickb> but I'm not yet at the point of having a good understanding of things.

[20:44] <patrickb> So I'm grateful if you beat me to a writeup. That would probably be a welcome read given my current state of knowledge.

[20:46] *** riffraff18 left
[20:47] *** riffraff18 joined
[20:51] *** riffraff18 left
[20:53] *** discord-raku-bot joined
[20:55] *** discord-raku-bot left
[20:57] *** discord-raku-bot joined
[20:57] *** riffraff18 joined
[21:03] *** aoeuidhtns left
[21:03] *** gfldex joined
[21:22] *** TheAthlete left
[21:23] *** riffraff18 left
[21:23] *** riffraff18 joined
[21:34] <tbrowder> lizmat: is yr day 4 scheduled? jj just told me he went to bed.

[21:35] <tbrowder> i see yr draft is titled day 4. jj told me to publish mine but i’m not sure he saw  day 4 in yr title

[21:38] <tbrowder> .ask lizmat are you going to publish yr day 4 at midnight utc today?

[21:38] <tellable6> tbrowder, I'll pass your message to lizmat

[21:59] <tonyo> patrickb: at the very base isn't it just a matter of calling a rakudo script with the request data?

[21:59] <tonyo> or nogo on cgi?

[21:59] *** riffraff18 left
[22:00] *** riffraff18 joined
[22:04] *** riffraff18 left
[22:04] *** riffraff18 joined
[22:09] *** riffraff18 left
[22:12] <patrickb> tomyo: Basically yes. But then I pay the startup penalty.

[22:13] <patrickb> But without restarts I lose the typical dynamic nature of those mod_* thingies. I.e. drop a new .rakumod file in there, press F5 in the browser and it'll just work.

[22:18] <tonyo> do you have something running evaluators in a pool?

[22:19] <tonyo> err, oh misread that - disregard

[22:52] *** discord-raku-bot left
[22:55] <moon-child> patrickb: https://github.com/moon-chilled/libport  prior art

[23:06] *** Skarsnik left
[23:18] <patrickb> moon-child: Ha! Had I noticed that earlier! The prototype code I have isn't nearly as fleshed out as what you have there, but what I have is almost identical (I also took Inline::Perl6) as a starting point.

[23:21] <patrickb> moon-child: Did you manage to make raku state transient? I. e. could a piece of code one evaluates add modules and stuff and afterwards remove all that and start fresh?

[23:23] *** dextercd left
[23:32] *** Ergo444 left
[23:50] *** gordonfish- joined
[23:53] *** gordonfish left
[23:54] <moon-child> patrickb: sadly no.  I wasn't even able to create more than one mvm state!  (Though I expect this is mvm's fault, not mine)

[23:56] <moon-child> checkpointing would be really cool, though, as a language feature

[23:56] <moon-child> (terrible idea of the day: do it with fork)

[23:56] *** Colt left
[23:58] *** Colt joined
