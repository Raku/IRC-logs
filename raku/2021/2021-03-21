[00:08] *** Doc_Holliwood left
[00:15] *** softmoth left
[00:15] *** softmoth joined
[00:19] <Xliff> softmoth: You can't instantiate a Callable via something like Callable.new. You have to create a sub/method/block and use that.

[00:22] <softmoth> Thanks, Xliff. I don't see an obvious instance of that, but I'll hunt around for it.

[00:24] <softmoth> Does something  in this line try to instantiate a Callable that I'm missing?  sub get-data is defined at the top of the test file.  my $out = $stache.render($tmpl, { a => get-data($repeats).hyper(:degree($threads)) });

[00:26] <softmoth> I'll play around w/ it.

[00:29] <Xliff> softmoth: What is trying to be executed, here?

[00:29] <Xliff> Generally, .hyper is followed by a .map

[00:29] <Xliff> It doesn't look like there is a callable to be parallelized.

[00:29] <Xliff> Hence the message.

[00:30] <Xliff> m: ^7.hyper

[00:30] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Potential difficulties:‚ê§    Precedence of ^ is looser than method call; please parenthesize‚ê§    at <tmp>:1‚ê§    ------> 3^77‚èè5.hyper‚ê§WARNINGS for <tmp>:‚ê§Useless use of "^" in expression "^7.hyper" in sink context (line 1)‚ê§No such meth‚Ä¶¬ª

[00:30] <Xliff> m: (^7).hyper

[00:30] <camelia> rakudo-moar 726a75e24: ( no output )

[00:31] <Xliff> m: (^7).hyper(threads => 4)

[00:31] <camelia> rakudo-moar 726a75e24: ( no output )

[00:31] <Xliff> m: (^7).hyper(threads => 4).map( *.log.say )

[00:31] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´-Inf‚ê§0‚ê§0.6931471805599453‚ê§1.0986122886681098‚ê§1.3862943611198906‚ê§1.6094379124341003‚ê§1.791759469228055‚ê§¬ª

[00:32] <Xliff> OK. Off to vex some sprites! Take care, everyone!

[00:32] *** Xliff left
[00:32] <softmoth> Xliff: thanks, 

[00:32] <tellable6> softmoth, I'll pass your message to Xliff

[00:32] <moon-child> m: ^7 .hyper

[00:32] <camelia> rakudo-moar 726a75e24: ( no output )

[00:42] <raydiak> m: role A { multi method a ([]) { 0 }; multi method a (@) { 1 } }; say A.a([1]);

[00:42] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Cannot resolve caller a(A:U: Array:D); none of these signatures match:‚ê§    (A: @ (), *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[00:45] <raydiak> summerisle: ^^ your bug seems to require a combination of multimethods, autopunning roles, and @ in the signature. change any of that, and the bug scurries off into hiding in my testing so far

[00:47] *** oneeggea_ joined
[00:48] <summerisle> interesting

[00:49] <summerisle> autopunning had come to mind as being related but i dismissed it as I don't know terribly much about autopunning semantics

[00:49] <raydiak> m: class A { multi method a ([]) { 0 }; multi method a (@) { 1 } }; say A.a([1]);

[00:49] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´1‚ê§¬ª

[00:49] <raydiak> works if you change role to class

[00:50] <raydiak> m: role A { multi method a () { 0 }; multi method a ($) { 1 } }; say A.a(1);

[00:50] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´1‚ê§¬ª

[00:50] <raydiak> works if you don't use @ in the sig

[00:50] <raydiak> even as a role

[00:50] *** oneeggeach left
[00:51] <summerisle> i'll have to play with that after i finish the rest of this - that's really odd nonetheless

[00:52] <raydiak> something about listy parameters specifically breaks mmd when the role is punned to a class. that's as much as I can figure without digging into internals I honestly don't know much about

[00:53] <raydiak> do you want to report it? if not I'll make a proper report later tonight, have to step away for now

[00:57] <raydiak> bisectable6: role A { multi method a ([]) { 0 }; multi method a (@) { 1 } }; say A.a([1]);

[00:57] <bisectable6> raydiak, Will bisect the whole range automagically because no endpoints were provided, hang tight

[00:58] <bisectable6> raydiak, Output on all releases: https://gist.github.com/5f223e470569db82f67dcb87229cb83f

[00:58] <bisectable6> raydiak, More than 4 changes to bisect, please try a narrower range like old=2018.11 new=HEAD

[00:58] *** pecastro left
[01:03] *** londoed left
[01:03] *** londoed joined
[01:10] <summerisle> well there certainly are a few changes there https://github.com/rakudo/rakudo/compare/2016.02...2016.03

[01:11] <summerisle> i may report it - if i don't i'll let you know and you can do it

[01:14] <summerisle> it looks like lizmat might have made some changes that touched parameters, just from skimming messages - don't know if they would have any insight

[01:14] <raydiak> yeah I was just looking at those, lots of parameter work especially optimizations

[01:18] *** Benett left
[01:18] *** Benett joined
[01:19] *** xelxebar_ joined
[01:19] <summerisle> I think I'll elect to finish with what I'm doing - you're welcome to file.

[01:19] *** xelxebar left
[01:39] <raydiak> will do. going to check it out closer and report it later

[01:39] <raydiak> m: role A { multi method a (%:()) { 0 }; multi method a (%) { 1 } }; say A.a({a=>1});

[01:39] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Cannot resolve caller a(A:U: Hash:D); none of these signatures match:‚ê§    (A: % (), *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:39] <raydiak> also same for hashes

[01:39] <raydiak> Associatives, I should say

[01:55] *** oneeggea_ left
[01:59] *** mahafyi joined
[02:11] *** kvw_5 joined
[02:14] *** kvw_5_ left
[03:06] *** muffindrake left
[03:06] *** Manifest0 left
[03:06] *** Manifest0 joined
[03:08] *** muffindrake joined
[03:10] <summerisle> another question that's not well-answered by docs.raku.org - what does one go about to set the topic variable within a closure that has been passed, e.g. to imitate map()

[03:12] <summerisle> nvm

[03:12] <summerisle> it's implicit

[03:20] *** neshpion left
[03:26] *** ex_nihilo joined
[04:00] *** asymptotically left
[04:00] *** asymptotically joined
[05:00] *** quotable6 left
[05:00] *** notable6 left
[05:00] *** evalable6 left
[05:00] *** bisectable6 left
[05:00] *** linkable6 left
[05:00] *** squashable6 left
[05:00] *** greppable6 left
[05:00] *** bloatable6 left
[05:00] *** statisfiable6 left
[05:00] *** tellable6 left
[05:00] *** sourceable6 left
[05:00] *** nativecallable6 left
[05:00] *** coverable6 left
[05:00] *** shareable6 left
[05:00] *** releasable6 left
[05:00] *** unicodable6 left
[05:00] *** committable6 left
[05:00] *** benchable6 left
[05:01] *** linkable6 joined
[05:01] *** coverable6 joined
[05:01] *** quotable6 joined
[05:01] *** squashable6 joined
[05:02] *** evalable6 joined
[05:02] *** unicodable6 joined
[05:02] *** nativecallable6 joined
[05:02] *** bisectable6 joined
[05:02] *** tellable6 joined
[05:03] *** benchable6 joined
[05:03] *** releasable6 joined
[05:03] *** shareable6 joined
[05:03] *** greppable6 joined
[05:03] *** bloatable6 joined
[05:03] *** committable6 joined
[05:03] *** sourceable6 joined
[05:04] *** notable6 joined
[05:04] *** statisfiable6 joined
[05:08] <summerisle> raydiak: found more strange multiple dispatch behavior

[05:08] <summerisle> https://gist.github.com/6afaea7a299c016811226eab4d6f78ec

[05:10] <summerisle> this reminds me - has anyone asked about adding symbols (short strings that are globally unique) to raku?

[05:48] *** parabolize left
[05:52] *** xinming left
[05:53] *** xinming joined
[06:12] *** mahafyi left
[06:21] *** guifa2 left
[06:23] *** guifa2 joined
[06:25] *** softmoth left
[06:32] <guifa2>  summerisle: you mean like WHICH and/or WHERE values?

[06:39] *** guifa2 left
[06:41] *** frost-lab joined
[06:51] *** rindolf joined
[06:57] *** wamba joined
[07:57] *** sena_kun left
[08:15] *** Black_Ribbon joined
[08:28] *** vike left
[08:38] *** Doc_Holliwood joined
[08:43] *** sena_kun joined
[08:50] *** vike joined
[08:58] *** Fritz joined
[09:07] <Fritz> Hi, I am using DB::Pg on MacOS 11.2.3 (Big Sur). zef install DB::Pg was working fine up to rakudo-2020.12. Both with rakudo-2021.02.1 and rakudo-2021.03 I get the following error:¬† zef install DB::Pg

[09:07] <Fritz> ===> Searching for: DB::Pg

[09:07] <Fritz> ===> Searching for missing dependencies: pq:ver<5>:from<native>

[09:07] <Fritz> No such method 'as' for invocant of type 'Any'

[09:07] <Fritz> I had the same problem when trying on a Parallels based VM with Ubuntu 20.04 and on an OmniOS based lx zone with Ubuntu 20.04.

[09:07] <Fritz> When going back to rakudo-2020.12 everything works just fine.

[09:07] <Fritz> Anybody have an idea how I can debug or fix that?

[09:14] *** aborazmeh joined
[09:18] *** xinming left
[09:20] *** xinming joined
[09:23] *** Sgeo left
[09:24] *** camelCaser joined
[09:26] *** camelCaser left
[09:26] *** bdju left
[09:26] <sena_kun> Fritz, trying to confirm.

[09:27] *** domidumont joined
[09:27] *** bdju joined
[09:30] *** camelCaser joined
[09:31] *** aborazmeh left
[09:31] <sena_kun> Fritz, hmm, I cannot confirm on a gnu/linux box.

[09:31] *** guifa2 joined
[09:32] *** guifa2 left
[09:32] <sena_kun> Fritz, do you have postgres devel package (with shared libs)?

[09:59] *** pecastro joined
[10:01] *** Black_Ribbon left
[10:04] <rindolf> hi all! i am yak shaving

[10:04] <tyil> hi yak shaving, I'm tyil

[10:18] <rindolf> https://www.shlomifish.org/Files/files/text/rakudo.txt - what  to do?

[10:21] *** camelCaser left
[10:32] <rindolf> found it! stale ~/.raku cache

[10:34] *** aborazmeh joined
[10:36] <rindolf> tyil: hi

[10:47] *** guifa2 joined
[10:48] *** guifa2 left
[10:49] <Fritz> sena_kun I'll try again on Ubuntu.

[10:50] <Fritz> sena_kun Thanks for checking.

[10:53] * rindolf is now playing: 11Voice Male - Hail Holy Queen (uit Sister Act)-M3z6XCug_W8.mp4 [0800:43/0703:51]

[10:55] *** wamba left
[11:01] *** aindilis` joined
[11:04] *** aborazmeh left
[11:04] *** aindilis left
[11:05] *** frost-lab left
[11:19] *** domidumont left
[11:30] *** aindilis` left
[11:30] *** aindilis` joined
[11:33] *** aborazmeh joined
[11:38] <Fritz> Seems there was an old version of NativeLibs installed on the Parallels-based Ubuntu. After uninstalling DB::Pg and installing it again, everything worked with rakudo-2021.03.

[11:38] *** wamba joined
[11:39] <Fritz> No luck on MacOS though, still

[11:39] <Fritz> zef install DB::Pg

[11:39] <Fritz> ===> Searching for: DB::Pg

[11:39] <Fritz> ===> Searching for missing dependencies: pq:ver<5>:from<native>

[11:39] <Fritz> No such method 'as' for invocant of type 'Any'

[11:43] <Fritz> I suspect there is something wrong with my libpq installation. How can I find out where zef is searching for it?

[11:55] *** hvxgr_ left
[11:55] *** hvxgr_ joined
[11:55] *** hvxgr_ left
[11:57] *** hvxgr joined
[11:57] *** jmiven left
[11:58] *** Fritz left
[12:43] *** tadzik joined
[12:50] <tbrowder> hi, folks

[12:56] <tbrowder> looking for best solution for finding number of fractional digits in a number (string or number)

[12:58] <tbrowder> i can get the fractional part, use comb to count the digits, subtract 2 for the leading zero and decimal point. any shorter way?

[13:12] <codesections> wait, a class can implement a role with stubbed methods without matching the method's signature?

[13:14] <codesections> m: role R { method foo(Int --> Int) {...}}; class C does R { method foo(Str $s--> Str) { "I didn't $s"}}; say C.foo('realize that')

[13:14] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´I didn't realize that‚ê§¬ª

[13:19] <codesections> tbrowder: As a micro optimization, you can replace .comb.Int - 2 with .chars - 2

[13:22] <codesections> m: role R { method multi foo(Int --> Int) {...}}; class C does R { multi method foo(Str $s--> Str) { "$s"}}; say C.foo('Oh')

[13:22] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3role R { method multi7‚èè5 foo(Int --> Int) {...}}; class C does R‚ê§¬ª

[13:22] <codesections> m: role R { multi method foo(Int --> Int) {...}}; class C does R { multi method foo(Str $s--> Str) { "$s"}}; say C.foo('Oh')

[13:22] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Multi method 'foo' with signature :(C: Int $, *%_ --> Int) must be implemented by C because it is required by a role‚ê§at <tmp>:1‚ê§¬ª

[13:23] *** domidumont joined
[13:24] <codesections> I see.  I guess I'd only looked at stubs in the context of multi methods. (Really, I tend to default to multi methods unless I have a good reason not to, for easier testing/other shenanigans)

[13:27] *** xinming left
[13:28] *** xinming joined
[13:29] *** xelxebar_ left
[13:29] *** xelxebar joined
[13:35] <tbrowder> codesections: yes, i just thought of that in the shower i just got out of, thanks!

[13:37] <tbrowder> m: my $x = 2.4999; my $nplaces = (($x - $x.truncate).abs).chars-2; say $nplaces;

[13:37] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´4‚ê§¬ª

[13:41] <codesections> m: my $x = 2.4999; my $nplaces = with ($x - $x.truncate) {.chars - .index('.') }; say $nplaces;

[13:41] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5===‚ê§Word 'with' interpreted as a listop; please use 'do with' to introduce the statement control word‚ê§at <tmp>:1‚ê§------> 3my $x = 2.4999; my $nplaces = with7‚èè5 ($x - $x.truncate) {.chars - .index('.'‚ê§Unexpected block in in‚Ä¶¬ª

[13:41] <codesections> m: my $x = 2.4999; my $nplaces = do with ($x - $x.truncate) {.chars - .index('.') }; say $nplaces;

[13:41] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5‚ê§¬ª

[13:41] <codesections> m: my $x = 2.4999; my $nplaces = do with ($x - $x.truncate) {.chars - .index('.') - 1}; say $nplaces;

[13:41] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´4‚ê§¬ª

[13:43] <codesections> probably worse, depending on what your optimizing for.  But it's another approach, anyway, and avoids the need to call .abs given that you're stringifying anyway

[13:51] <codesections> (or .chars - 2 - .starts-with('-'), for that matter)

[14:00] *** phogg left
[14:00] *** domidumont left
[14:07] *** ens_ is now known as ens

[14:17] *** xelxebar left
[14:28] <tbrowder> ok, given that $x may be a number OR a numstr, should i have two sigs (multisub)? i'm going to add it to my Math::FractionalPart module.

[14:29] <tbrowder> another question, what is best name for that func? how about:

[14:30] <tbrowder> decimals, ndecimals, decimalplaces, places, ...

[14:30] <tbrowder> thoughts anyone?

[14:31] <tbrowder> got to go to grandson's lacrosse game, back later...

[14:33] *** tadzik left
[14:35] *** xelxebar joined
[14:39] *** Froogal joined
[14:40] <codesections> .tell tbrowder hope you enjoyed the lacrosse game.  It seems like the most accurate description for what that returns is "the number of digits in the fractional part".  So how about frac-part-digits or something along those lines?  

[14:40] <tellable6> codesections, I'll pass your message to tbrowder

[14:41] <Froogal> Hi!¬† So I'm trying to install Cro using the instructions on their website but I'm not having any luck, I keep getting "/usr/bin/ld: cannot find -ltommath /usr/bin/ld: cannot find -latomic_ops" I don't get much when I type ltommath in the search either.¬† Are they missing C libraries?

[14:45] <codesections> that's sure what that sounds like to me.  I haven't run into that, though

[14:47] <codesections> maybe this one, for the first? https://github.com/libtom/libtommath

[14:48] <codesections> (But I don't know why that's not specified as a native dependency, if that's the case.  I guess that's a bug?)

[14:49] <ugexe> that sounds like a raku error

[14:50] <codesections> 31:     @bpm(CCINC)@@nfpq(@bpm(INCPATH)@/libtommath)@ \ 

[14:50] <codesections> ^^^^ ln 31 of rakudo/tools/templater/moar/Makefile.in

[14:51] <ugexe> right, both libtomath and libatomic are used by moarvm

[14:51] <codesections> so, yeah, ugexe seems to be right, looks like a moar issue

[14:51] <Froogal> I should go research MoarVM?¬† Or submit a bug report?

[14:52] <ugexe> the question is why then does this happen when installing cro... which seems like maybe an old verion of zef, or an old version of raku is trying to launch zef?

[14:52] <ugexe> does installing any other module work?

[14:52] <ugexe> (where an old version of zef might have launching itself with the old version of raku)

[14:52] <Froogal> Hmmm output of 'raku -v' => '/usr/bin/ld: cannot find -ltommath

[14:52] <Froogal> [LibraryMake] /usr/bin/ld: cannot find -latomic_ops'

[14:53] <Froogal> I can install other modules, I have in the past anyway.

[14:53] <ugexe> how did you install raku?

[14:54] <Froogal> I used apt

[14:54] <Froogal> To install Rakudo

[14:54] <ugexe> what does `raku -e 'say $*RAKU.compiler'` say?

[14:56] <Froogal> `rakudo (2020.06)` (Also I didn't know there was code highlighting on here thanks for that :)

[14:56] *** asy joined
[14:56] <ugexe> hmmm, i wonder if something is wrong with that apt package then. that version isn't relatively that old

[14:57] *** asymptotically left
[14:57] <Froogal> Re-install?

[14:58] <ugexe> well im guessing its not declaring libtomath as a dependency or some such, so it would still happen

[14:58] <ugexe> https://github.com/nxadm/rakudo-pkg -- this is known to work afaik though, and it has debian/ubuntu instructions (although might have to add the source to your sources.list or whatever)

[14:59] <ugexe> i personally use https://rakubrew.org/ but that might be a bit much for anyone who doesn't regularly use multiple versions of raku

[15:03] *** helloworld joined
[15:05] <Froogal> ugexe Thank you!¬† I will look into both of these :)

[15:08] *** aindilis` left
[15:11] *** Froogal left
[15:12] *** tadzik joined
[15:14] *** domidumont joined
[15:33] *** softmoth joined
[15:35] *** xinming left
[15:35] *** xinming joined
[15:38] *** ex_nihilo left
[15:42] *** parabolize joined
[15:46] *** HarmtH_ left
[15:47] *** HarmtH joined
[15:49] *** HarmtH left
[15:49] *** HarmtH joined
[15:50] *** HarmtH left
[15:51] *** wamba left
[15:51] *** HarmtH joined
[15:53] *** HarmtH left
[15:53] *** HarmtH_ joined
[16:01] *** aborazmeh left
[16:19] *** wamba joined
[16:20] *** Fritz joined
[16:30] *** ens left
[16:48] *** benkolera left
[16:56] *** wamba left
[16:58] *** helloworld left
[17:04] *** guifa2 joined
[17:10] <guifa2> ugexe: is there a part of zef's install process where it opens up files all at once and then later closes them all?  I tried hunting in the code but I couldn't find anything like that.  With one of my modules, I can hit an open file limit when installing.

[17:10] *** sena_kun left
[17:12] *** sena_kun joined
[17:16] *** ctilmes joined
[17:17] <ctilmes> alpine edge rakudo upgraded to 2021.03

[17:17] *** Fritz left
[17:17] <tbrowder> .tell codesections lacrosse games exciting...thnx for name suggestion, i  may add several aliases for the routine.

[17:17] <tellable6> tbrowder, I'll pass your message to codesections

[17:17] <El_Che> releasable6: status

[17:17] <releasable6> El_Che, Next release in ‚âà27 days and ‚âà1 hour. 1 blocker. Changelog for this release was not started yet

[17:17] <releasable6> El_Che, Details: https://gist.github.com/0e134068b5c25e76ddb80ec04ff5b8c3

[17:18] *** ctilmes left
[17:20] <guifa2> tbrowder: for counting the fractional digits, stringifying is your best bet, I used that for a long time in Intl::Format::Number and Intl::Number::Plural.  Probably the most technically correct way is to, once you've got integral-value = 0, multiple by 10 and check if there's a fractional-value = 0.  The number of times you do that tells you the number of gitis you have.

[17:20] *** justsomeguy joined
[17:20] <guifa2> Of course, you also need to put in a stop gap measure for irrational and repeating numbers

[17:21] <tbrowder> ok, i‚Äôll ask for a check before i publish the updated module

[17:21] <tellable6> hey tbrowder, you have a message: https://gist.github.com/a2264a3233ab7143aaa2fa22928f92db

[17:21] *** epony left
[17:22] *** aborazmeh joined
[17:23] <guifa2> (it's kind of shame you can't calculate fractional digits with a single math routine like you can integral digits, but c'est la vie)

[17:23] *** PimDaniel joined
[17:23] <PimDaniel> o/

[17:23] <tellable6> hey PimDaniel, you have a message: https://gist.github.com/7362d41f53e196e941a1809106175f3d

[17:23] <El_Che> ctilmes: \o/

[17:23] <tellable6> El_Che, I'll pass your message to ctilmes

[17:25] <PimDaniel> Hi all

[17:25] <PimDaniel> May we change temporary and locally array subscript so that it begins to 1 instead of 0?

[17:27] <PimDaniel> Well the question is more : is there a simple solution to do it?

[17:27] <guifa2> tbrowder: you might be interested in the code here https://github.com/alabamenhu/IntlFormatNumber/blob/2c38668e7a106556db64b816be4eaf6c7810409f/lib/Intl/Format/Number.pm6#L153  But it's probably very much overkill for you vs $foo.chars - 2 ^_^

[17:28] <PimDaniel> or $foo.end - 1 i suppose.

[17:30] <ugexe> guifa2: precompilation (although that happens in rakudo), which would happen during testing or during the actual install in zef

[17:31] <PimDaniel> If the solution is too complex, definitly, NO! but thank's anyway!

[17:31] <guifa2> ugexe: using -Ilib does precompile as well, though, right?

[17:32] <guifa2> PimDaniel

[17:32] <guifa2> m: role OneBased {¬†method AT-POS(\x) {¬†nextwith x - 1 }; method ASSIGN-POS(\x, \y) {¬†nextwith x - 1, y }; method BIND-POS(\x, \y) {¬†nextwith x - 1, y }}; my @foo does OneBased; @arr[1] = 'a'; say @arr

[17:32] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '@arr' is not declared‚ê§at <tmp>:1‚ê§------> 3ith x - 1, y }}; my @foo does OneBased; 7‚èè5@arr[1] = 'a'; say @arr‚ê§¬ª

[17:32] <guifa2> err

[17:32] <guifa2> m: role OneBased {¬†method AT-POS(\x) {¬†nextwith x - 1 }; method ASSIGN-POS(\x, \y) {¬†nextwith x - 1, y }; method BIND-POS(\x, \y) {¬†nextwith x - 1, y }}; my @foo does OneBased; @foo[1] = 'a'; say @foo

[17:32] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´[a]‚ê§¬ª

[17:32] <ugexe> -Ilib doesn't precompile anything until you actually use something that needs to be precompiled. if some test doesn't happen to load every single module then it wouldnt be precompiled

[17:34] * PimDaniel thank's guifa2

[17:35] <summerisle> guifa2: regarding symbols, both - same instance and identity

[17:37] *** wamba joined
[17:37] *** aborazmeh left
[17:37] *** Sgeo joined
[17:39] <guifa2> ugexe: noted. I *think* in my case every module should be loaded (it's a hierarchical dependency structure, so the main module ultimately depends on all of them), but I'll see if I can narrow down the cause further.  I had been thinking the issue is likely with /resources  since I have 113 modules files (a lot but Cro and Red push similar numbers and don't have the same issue), but I have ~1k resource files which is *definitely* a lot

[17:39] * PimDaniel guifa2 i need to seek storage mode for the 2 dimentions.

[17:55] *** epony joined
[18:06] <summerisle> m: class Foo { multi method bar(:$a) { 'a' }; multi method bar(:$b) }; say Foo.bar(:$b);

[18:06] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3bar(:$a) { 'a' }; multi method bar(:$b) 7‚èè5}; say Foo.bar(:$b);‚ê§¬ª

[18:06] <summerisle> m: class Foo { multi method bar(:$a) { 'a' }; multi method bar(:$b) { 'b' } }; say Foo.bar(:$b);

[18:06] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$b' is not declared‚ê§at <tmp>:1‚ê§------> 3method bar(:$b) { 'b' } }; say Foo.bar(:7‚èè5$b);‚ê§¬ª

[18:06] <summerisle> m: class Foo { multi method bar(:$a) { 'a' }; multi method bar(:$b) { 'b' } }; say Foo.bar(:b);

[18:06] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´a‚ê§¬ª

[18:06] <summerisle> bisectable6: class Foo { multi method bar(:$a) { 'a' }; multi method bar(:$b) { 'b' } }; say Foo.bar(:b);

[18:06] <bisectable6> summerisle, Will bisect the whole range automagically because no endpoints were provided, hang tight

[18:06] <bisectable6> summerisle, ¬¶6c (52 commits): ¬´a‚ê§¬ª

[18:06] <bisectable6> summerisle, Nothing to bisect!

[18:08] <summerisle> m: multi bar(:$a) { 'a' }; multi bar(:$b) { 'b' }; say bar(:b);

[18:08] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´b‚ê§¬ª

[18:09] <guifa2> summerisle: you need to use :$b! 

[18:10] <guifa2> m: class Foo { multi method bar(:$a) { 'a' }; multi method bar(:$b!) { 'b' } }; say Foo.bar(:b);

[18:10] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´a‚ê§¬ª

[18:10] <guifa2> err

[18:10] <guifa2> okay that does feel off now lol

[18:10] <guifa2> m: class Foo { multi method bar(:$a!) { 'a' }; multi method bar(:$b!) { 'b' } }; say Foo.bar(:b);

[18:10] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´b‚ê§¬ª

[18:11] <tbrowder> guifa2: thanks!

[18:27] <summerisle> is there documentation on the ! operator guifa2

[18:29] <guifa2> summerisle: means "is mandatory" ‚Äî¬†https://docs.raku.org/type/Signature#Optional_and_mandatory_arguments

[18:29] <guifa2> it's the opposite of ? (is optional) for signatures

[18:33] *** aindilis joined
[18:34] *** domidumont left
[18:44] *** UukGoblin left
[18:44] *** UukGoblin joined
[18:49] <softmoth> Xliff: I found the problem w/ Template::Mustache & hyper: it was this debugging line:  self.log: :level<Trace>, "#** Resolve of $obj.WHAT.raku() as '$obj'";  I'm still golfing it down smaller to understand it better, but commenting that line out removes the crash.

[18:49] <tellable6> softmoth, I'll pass your message to Xliff

[18:51] <El_Che> weekly: rakudo-pkg 2021.03 released

[18:51] <notable6> El_Che, Noted! (weekly)

[18:54] <summerisle> guifa2: out of curiosity, why is the behaviour such for methods but not subs

[18:55] <softmoth> child class may use options that parent class doesn't know about

[18:55] *** mowcat joined
[18:56] <softmoth> IMO this is one of the big gotchas I ran into w/ perl 6^W^WRaku when learning, especially when trying to pass a pair and it just gets swallowed as an unrecognized named param unless you use explicit quoting on the pair's key

[19:00] <guifa2> softmoth: parentheses actually will keep it positional too

[19:00] <guifa2> m: sub foo($a) {¬†say $a }; foo :a2)

[19:00] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unexpected closing bracket‚ê§at <tmp>:1‚ê§------> 3sub foo($a) {¬†say $a }; foo :a27‚èè5)‚ê§¬ª

[19:00] <guifa2> err

[19:00] <guifa2> m: sub foo($a) {¬†say $a }; foo (:a2)

[19:00] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´a2 => True‚ê§¬ª

[19:01] <codesections> softmoth: I haven't looked into that enough to be sure, but I *think* I call that a bug

[19:01] <tellable6> 2021-03-21T17:17:42Z #raku <tbrowder> codesections lacrosse games exciting...thnx for name suggestion, i  may add several aliases for the routine.

[19:01] <codesections> m: 1 === 9 :a

[19:01] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§You can't adverb &infix:<===>‚ê§at <tmp>:1‚ê§------> 031 === 9 :a7‚èè5<EOL>‚ê§    expecting any of:‚ê§        pair value‚ê§¬ª

[19:01] <summerisle> m: sub foo(:$a) { say 'a' } ; sub foo(:$b) { say 'b' } ; foo(:b); foo(:a);

[19:01] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Redeclaration of routine 'foo'.  Did you mean to declare a multi-sub?‚ê§at <tmp>:1‚ê§------> 3) { say 'a' } ; sub foo(:$b) { say 'b' }7‚èè5 ; foo(:b); foo(:a);‚ê§    expecting any of:‚ê§        hori‚Ä¶¬ª

[19:02] <summerisle> m: multi foo(:$a) { say 'a' } ; multi foo(:$b) { say 'b' } ; foo(:b); foo(:a);

[19:02] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´b‚ê§a‚ê§¬ª

[19:03] <guifa2> the docs do mention the named parameter method/sub distinction

[19:03] <guifa2> "Unlike sub, if you use named parameters with multi methods, the parameters must be required parameters to behave as expected."

[19:04] <guifa2> https://docs.raku.org/language/functions#Multi-dispatch  (but perhaps taht should be made a bit clearer)

[19:05] <codesections> m: class C { method m(List $l (Pair $p)) { say $l }}; C.m: (1) => 2

[19:05] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Type check failed in binding to parameter '$l'; expected List but got Pair (1 => 2)‚ê§  in method m at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:05] *** justsomeguy left
[19:06] <codesections> m: class C { method m(List $l (Pair $p)) { say $l }}; C.m: (<a> => 2,  <b> => 5)

[19:06] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Too few positionals passed to 'm'; expected 1 argument but got 0 in sub-signature of parameter $l‚ê§  in method m at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:06] <codesections> guifa2: ^^^^ call *that* method, I dare ya :)

[19:11] * PimDaniel guifa2 After reading the code and learning the reference i don't really understand the precise meaning of  AT-POS/ASSIGN-POS/BIND-POS methods precisely. To make a 2D array with this role i think this should be done by a kindof recursing trick to apply the role. But i'm really stucked at this point because theses concepts are for me too obscur. Help me when you can if you're too busy at the 

[19:11] * PimDaniel moment. Thanks in advance. Jean-Yves.

[19:12] <PimDaniel> *at the moment. Thank's in advance!

[19:12] <PimDaniel> clear

[19:12] *** PimDaniel left
[19:29] *** aindilis` joined
[19:30] *** aindilis left
[19:32] <softmoth> codesections, I think it's well by design. Just LTA, but the other alternatives are worse.

[19:33] <codesections> softmoth: you may well be right about that.  Looking into it is on my to-do list (to see if it's worth opening an issue for/trying to get a warning or error)

[19:33] <softmoth> Unless I'm misunderstanding what you're referring to. I mean that this is intentional:  x.m(foo => 1) # named param, not pair

[19:33] *** aindilis` left
[19:34] <codesections> yeah, no, _that_'s definitely intentional

[19:35] <softmoth> roger

[19:40] <codesections> m: sub f(|c) { say |c }; f(key => :first<v>:second<v>)

[19:40] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Unexpected named argument 'key' passed‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:40] <codesections> m: sub f(*%n) { say *n }; f(key => :first<v>:second<v>)

[19:40] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3sub f(*%n) { say *7‚èè5n }; f(key => :first<v>:second<v>)‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        state‚Ä¶¬ª

[19:41] <codesections> m: sub f(*%n) { say %n }; f(key => :first<v>:second<v>)

[19:41] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´{key => first => v}‚ê§¬ª

[19:42] <codesections> softmoth: I meant more like ^^^^^ where &infix:¬´=>¬ª "eats" a pair

[19:44] <SmokeMachine> m: say Array[Int].new: <a> # is this a LTA error message?

[19:44] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Type check failed in assignment to ; expected Int but got Str ("a")‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:45] <vrurg> m: sub foo(Pair:D $p) { note $p }; foo("a" => 13)

[19:45] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´a => 13‚ê§¬ª

[19:46] <vrurg> Sorry, I didn't follow the discussion, but isn't it what you guys are looking for?

[19:46] <codesections> m: sub foo(Pair:D $p) { note $p }; foo("a" => :first<val>:second<val>)

[19:46] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´a => first => val‚ê§¬ª

[19:47] <codesections> no, ^^^ is what I'm talking about.  Which is easy to solve -- just add ()s around the list

[19:48] <codesections> but seems like a bug - :second<val> is being absorbed by &infix:¬´=>¬ª without an error, which isn't the case for many other operators

[19:49] <codesections> m: say 1 === 1 :second<val>

[19:49] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§You can't adverb &infix:<===>‚ê§at <tmp>:1‚ê§------> 3say 1 === 1 :second<val>7‚èè5<EOL>‚ê§¬ª

[19:49] <codesections> but I plan to look into it more before deciding it's a bug

[19:49] <vrurg> codesections: I'm never got too close to postfix adverbs, but I suspect :second gets passed as a named argument to the infix op sub.

[19:50] <codesections> oh, yeah, it definitly does

[19:50] <vrurg> So, it's not a bug then.

[19:52] <codesections> well, what I'm saying is that it might be a bug that the infix op *accepts* :second.  As I showed with &infix:<===>, many infix ops that know they can't do anything with a named arguement will throw a "you can't adverb me" error

[19:53] <codesections> I *think* &infix:¬´=>¬ª is missing that error and should have it, but I need to dig a bit more to see if there's some reason it was left off on purpose 

[19:54] <vrurg> codesections: agree. There is still some mystery to me as to when rakudo complains about unexpected named arguments and when it does not.

[20:18] *** berber44 joined
[20:29] *** aborazmeh joined
[20:47] *** tealecloud joined
[20:49] *** HarmtH_ left
[20:50] *** HarmtH joined
[20:53] *** maggotbrain left
[21:12] <SmokeMachine> vrurg: I think I‚Äôve fixed the schema creation without constraints

[21:13] <vrurg> SmokeMachine: thanks! I saw github push notification. But not sure if will have time to test it until the mid-end of the coming week. 

[21:13] <SmokeMachine> no

[21:14] <SmokeMachine> *np

[21:21] *** wingfold joined
[21:32] *** HarmtH_ joined
[21:32] *** HarmtH left
[21:32] *** rindolf left
[21:55] *** aborazmeh left
[22:04] *** tealecloud left
[22:05] *** tealecloud joined
[22:05] *** tealecloud left
[22:07] *** Black_Ribbon joined
[22:54] <guifa2> Sweet

[22:54] <guifa2> LanguageTag has now been reworked and is fully set up as a value type

[22:56] <lizmat> gjui++

[22:56] <lizmat> guifa2++ rather  :-)

[22:57] <guifa2> Still trynig to work out the kinks on having multiple LanguageType classes and how they need to best play together, but I might be overengineering there

[22:58] * guifa2 is NEVER guilty of overengineering /s

[22:59] <codesections> :D

[22:59] <codesections> guifa2++

[23:00] <guifa2> not sure if I'll get the release out in time for the weekly though

[23:00] * guifa2 curses $day-job

[23:00] <lizmat> guifa2: there'll be another weekly!

[23:01] <guifa2> lizmat: yeah but since I did a formal release of LanguageTaggish and LanguageTag::Simple last week, I wanted to get the redone "normal" one ready for the same weekly ;-) 

[23:02] <lizmat> an admirable goal :-)

[23:05] <codesections> there's something to be said for releasing a version on Tuesday or Wednesday, though.  That way, some people who are free this week will have a chance to check it out now, and others who miss it now may catch it when it's in the next weekly 

[23:05] <codesections> (or at least that's what I tell myself every time _I_ miss a weekly!)

[23:07] *** linkable6 left
[23:07] *** evalable6 left
[23:07] *** evalable6 joined
[23:10] *** linkable6 joined
[23:18] <guifa2> codesections: ha, true.  Also I just saw your reddit post and feel like I'm about to repeat myself ha

[23:19] *** HarmtH_ left
[23:19] *** HarmtH joined
[23:19] <codesections> yeah, same.  "Weekly" is probably a little too often for most of us to have made a _ton_ of progress on anything

[23:20] <codesections> (well, except lizmat, apparently )

[23:21] <codesections> but, still, even if it's mostly just posts along the lines of "I'm still working on the same stuff, making progress, but not as much as I'd wanted to"

[23:22] <codesections> that still seems like it'd be nice/good for the community

[23:22] <guifa2> codesections: indeed.  I just hate that even as I'm releasing stuff, progress doesn't mean much until all of it's pieced together. 

[23:22] <codesections> it's good for people to see that they're not alone.

[23:22] <codesections> yeah, I know that feeling

[23:23] *** Doc_Holliwould joined
[23:23] *** Doc_Holliwood left
[23:26] <guifa2> I actually was almost tempted to make a language tag that used binary subtags for speed in comparison.  I realized that with 37 possible values (a..z0..9√ò) x 8 characters per subtag, I could store it all in an int64 with room to spare, but I'm basically 1100% sure that's a premature optimization ;-)

[23:26] <guifa2> s/binary/integal

[23:26] *** wingfold left
[23:27] <codesections> ha.  That is a _high_ degree of certainty 

[23:28] *** HarmtH left
[23:29] *** HarmtH joined
[23:34] *** softmoth left
[23:34] *** softmoth joined
[23:40] *** vrurg left
[23:42] *** wingfold joined
[23:42] *** torbjorn joined
[23:52] *** finsternis joined
[23:53] *** vrurg joined
[23:53] *** Doc_Holliwould left
[23:58] <torbjorn> I have a grammar that parses ~30kb of text (the output of pactl list). Lately it started failing to parse. How should I go about figuring out why it fails?

[23:59] <guifa2> torbjorn: have you tried using grammar debug?

[23:59] <torbjorn> The ::Tracer lists the last matching text.. it seems, reasonably truncated, but doesnt say why it fails

