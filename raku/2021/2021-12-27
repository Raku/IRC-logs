[00:07] *** reportable6 left
[00:08] *** monkey_ joined
[00:21] *** lichtkind_ left
[00:26] *** tellable6 joined
[00:27] *** statisfiable6 joined
[00:54] *** finanalyst left
[01:08] *** reportable6 joined
[01:18] *** frost joined
[01:24] *** committable6 joined
[01:35] *** monkey_ left
[02:11] *** Voldenet_ joined
[02:12] *** Voldenet left
[02:12] *** Voldenet_ is now known as Voldenet

[02:54] *** monkey_ joined
[03:12] *** Voldenet_ joined
[03:13] *** Voldenet left
[03:13] *** Voldenet_ is now known as Voldenet

[03:37] *** monkey_ left
[03:43] *** monkey_ joined
[04:25] *** monkey_ left
[05:25] *** reportable6 left
[05:25] *** evalable6 left
[05:25] *** linkable6 left
[05:25] *** bloatable6 left
[05:25] *** coverable6 left
[05:25] *** nativecallable6 left
[05:25] *** statisfiable6 left
[05:25] *** notable6 left
[05:25] *** sourceable6 left
[05:25] *** shareable6 left
[05:25] *** bisectable6 left
[05:25] *** tellable6 left
[05:25] *** releasable6 left
[05:25] *** greppable6 left
[05:25] *** committable6 left
[05:25] *** benchable6 left
[05:25] *** quotable6 left
[05:25] *** squashable6 left
[05:25] *** unicodable6 left
[05:27] *** unicodable6 joined
[05:27] *** bisectable6 joined
[05:27] *** evalable6 joined
[05:27] *** linkable6 joined
[05:27] *** benchable6 joined
[05:28] *** tellable6 joined
[05:28] *** nativecallable6 joined
[05:28] *** reportable6 joined
[05:28] *** statisfiable6 joined
[06:07] *** reportable6 left
[06:27] *** quotable6 joined
[06:27] *** squashable6 joined
[06:28] *** coverable6 joined
[06:53] *** TheAthlete joined
[07:09] *** reportable6 joined
[07:23] *** seednode left
[07:24] *** seednode joined
[07:26] *** notable6 joined
[07:26] *** releasable6 joined
[07:28] *** sourceable6 joined
[07:28] *** shareable6 joined
[08:17] *** Sgeo left
[08:27] *** bloatable6 joined
[08:36] *** synthmeat joined
[09:36] *** linkable6 left
[09:36] *** evalable6 left
[09:37] *** linkable6 joined
[09:37] *** Skarsnik joined
[09:55] *** holyghost joined
[10:10] <lizmat> $ raku -v

[10:10] <lizmat> Welcome to Rakudo™ v2021.12.

[10:10] <lizmat> El_Che++

[10:15] <El_Che> lizmat: I should cloudsmith make to pay me. With every new release they add the needed distro because I ping them

[10:15] <El_Che> :)

[10:15] <El_Che> they lacked ubuntu jammy (next stable) so the upload of ubuntu-devel packages failed

[10:16] <lizmat> I see...  

[10:16] <El_Che> lizmat: I had to do a weird workaround, though:

[10:16] <El_Che> # Workaround for https://github.com/rakudo/rakudo/issues/1515

[10:16] <El_Che> mkdir -p $INSTALL_ROOT/share/perl6/site/short $INSTALL_ROOT/share/perl6/vendor/short

[10:16] <El_Che> touch $INSTALL_ROOT/share/perl6/site/short/.keep $INSTALL_ROOT/share/perl6/vendor/short/.keep

[10:16] <El_Che> the packager I use does not handle empty dirs well in debs

[10:17] <El_Che> and for one reason or the other rakudo started supplying 2 empty dirs a few releases ago

[10:18] <lizmat> have you made an issue for this particular issue ?

[10:18] <El_Che> yeah, it's in the paste

[10:20] <lizmat> the empty dirs issue ?

[10:20] <El_Che> yes

[10:21] <lizmat> nxadm commented 16 seconds ago

[10:21] <lizmat> yeah, now  :-)

[10:22] <El_Che> no, no, that's how I worked around it, not the issue itself

[10:27] *** committable6 joined
[11:27] *** linkable6 left
[11:27] *** unicodable6 left
[11:27] *** committable6 left
[11:27] *** bisectable6 left
[11:27] *** bloatable6 left
[11:27] *** reportable6 left
[11:27] *** shareable6 left
[11:27] *** nativecallable6 left
[11:27] *** tellable6 left
[11:27] *** sourceable6 left
[11:27] *** releasable6 left
[11:27] *** notable6 left
[11:27] *** quotable6 left
[11:27] *** coverable6 left
[11:27] *** benchable6 left
[11:27] *** statisfiable6 left
[11:27] *** nativecallable6 joined
[11:27] *** shareable6 joined
[11:27] *** notable6 joined
[11:27] *** bloatable6 joined
[11:28] *** greppable6 joined
[11:29] *** reportable6 joined
[11:29] *** benchable6 joined
[11:29] *** bisectable6 joined
[11:29] *** unicodable6 joined
[11:29] *** linkable6 joined
[11:37] *** Skarsnik left
[11:59] *** jjido joined
[12:07] *** reportable6 left
[12:10] *** reportable6 joined
[12:28] *** releasable6 joined
[12:29] *** quotable6 joined
[12:29] *** tellable6 joined
[12:37] *** evalable6 joined
[13:16] *** Altai-man joined
[13:23] <frost> m: combinations 16, 8

[13:23] <camelia> rakudo-moar 2b15eb819: ( no output )

[13:23] <frost> m:say  combinations 16, 8

[13:23] <evalable6> frost, rakudo-moar 5c5aa099a: OUTPUT: «((0 1 2 3 4 5 6 7) (0 1 2 3 4 5 6 8) (0 1 2 3 4…»

[13:23] <evalable6> frost, Full output: https://gist.github.com/1628858848b1f3b57038dff069d42427

[13:23] <frost> m:say  (combinations 16, 8).elems

[13:23] <evalable6> frost, rakudo-moar 5c5aa099a: OUTPUT: «12870␤»

[13:24] <frost> hello all, is there a more direct way to find C(m, n) in Raku?

[13:25] <frost> s/find/compute/

[13:28] *** coverable6 joined
[13:29] *** committable6 joined
[13:30] *** sourceable6 joined
[13:31] <ugexe> im not sure how much more direct it could be

[13:36] <frost> just like a function

[13:40] *** tejr left
[13:40] *** tejr joined
[13:41] <frost> I choose to define a operator to calculate it which is a easy way in Raku

[13:45] <holyghost> C(n,k) = n! * (n-k)! / k! with a factorial function ! ?

[13:48] <holyghost> Which does not exist in raku I presume

[14:11] <lizmat> m: sub postfix:<!>(Int $n) { [*] 1..$n }; say 5!   # voila

[14:11] <camelia> rakudo-moar 2b15eb819: OUTPUT: «120␤»

[14:33] *** thundergnat joined
[14:33] <thundergnat> m: sub binomial { [×] ($^n … 0) Z/ 1 .. $^p }; say binomial 16, 8;

[14:33] <camelia> rakudo-moar 2b15eb819: OUTPUT: «12870␤»

[14:34] <thundergnat> frost ^^^

[14:36] *** monkey_ joined
[14:40] *** monkey_ left
[14:41] *** monkey_ joined
[14:50] *** Sgeo joined
[14:57] <frost> Thank you! thundergnat

[14:57] <thundergnat> Welcome

[15:09] *** monkey_ left
[15:10] *** frost left
[15:12] *** monkey_ joined
[15:20] *** tejr left
[15:21] *** tejr joined
[15:30] *** morte_ joined
[15:34] <discord-raku-bot> <Anton Antonov#7232> Do you know are the icons (the content) in this repository used in any packages, internet writings, or presentations? https://github.com/MadcapJake/metamorphosis

[15:34] <discord-raku-bot> <Anton Antonov#7232> Do you know are the icons (the content) in this repository used in any packages, internet writings, or presentations? https://github.com/MadcapJake/metamorphosis

[15:39] <Altai-man> well, the original Camelia of course, but don't know about others. They look super cool though.

[15:39] <Altai-man> there are also those: https://github.com/Raku/marketing/tree/master/LOGOs/Camelia

[15:40] *** MoC joined
[15:43] *** morte_ left
[15:46] *** patrickb joined
[15:48] <discord-raku-bot> <Anton Antonov#7232> @Altai-man Thanks for the links! I am writing about connecting Mathematica and Raku. For the Raku-mode cells in Mathematica I use the stylized icon https://raw.githubusercontent.com/uzluisf/metamorphosis/master/hex_camelia/perl6-color-logo1.png . (Rotated 30 degrees.) But I wanted to refer to more "generic" and well know source of Raku icons.

[15:50] <Altai-man> for the docs website I used this: http://raku-infra-fsn1-01.rakulang.site:10012/img/camelia-recoloured.png and IMO it looks 1)recognizable; 2)more stylish, the original is somewhere in the marketing repo.

[15:51] <Altai-man> I like the hex icon you're using now a lot too, IMO that's an example of an icon one can show to people outside of community without them making faces.

[15:52] <discord-raku-bot> <Anton Antonov#7232> I tried to use a smaller version that icon to indicate Raku cells, but that icon has too many details.

[15:52] <Altai-man> hmm, how small do you need it to be?

[15:53] <Altai-man> in Comma we use 13x13, which is fairly small, and it works kinda alright.

[15:53] <discord-raku-bot> <Anton Antonov#7232> @Altai-man Yes -- thank you for that feedback!

[15:54] <discord-raku-bot> <Anton Antonov#7232> There is a question of how well it fits with the icons of other language cells in Mathematica. I will post example within 2 min.

[16:01] *** patrickb left
[16:04] <discord-raku-bot> <Anton Antonov#7232> Here is an example of Raku and other languages cells in a Mathematica notebook: https://imgur.com/NvT40r0

[16:07] <Altai-man> hmm, I don't see anything criminal, but maybe it can be resized better, now it looks blurry.

[16:08] *** holyghost left
[16:09] <discord-raku-bot> <Anton Antonov#7232> Yeah, it does, I have to tweak the Mathematica code for those cells some more. I think the icons used by WRI are from vectorized drawings (not images.)

[16:09] <discord-raku-bot> <Anton Antonov#7232> WRI == Wolfram Research, Inc. (Makers of Mathematica)

[16:12] <discord-raku-bot> <Anton Antonov#7232> BTW, as background cell color I used background color in the input/output cells in the documentation. (E.g. here: https://docs.raku.org/language/objects .)

[16:15] *** monkey_ left
[16:17] <lucs> m: 'x' ~~ Any && print "Why does this match?"

[16:17] <camelia> rakudo-moar 2b15eb819: OUTPUT: «Why does this match?»

[16:18] <Altai-man> lucs, because 'x' is Str and Str is Any.

[16:18] <Altai-man> maybe you meant this:

[16:18] <Altai-man> m: 'x' ~~ Any:U && print "Why does this wait you don't see me..."

[16:18] <camelia> rakudo-moar 2b15eb819: ( no output )

[16:19] <Altai-man> ?

[16:19] <lucs> Hmm... I'll think it over, thanks.

[16:19] <Altai-man> say: 'x'.^mro.say

[16:19] <Altai-man> oops

[16:19] <Altai-man> m: 'x'.^mro.say

[16:19] <camelia> rakudo-moar 2b15eb819: OUTPUT: «((Str) (Cool) (Any) (Mu))␤»

[16:19] <Altai-man> so it is an instance of Str, Cool, Any and Mu.

[16:20] <lucs> The context I'm seeing the "problem" is different, but your explanation should help me figure out what to do.

[16:21] <Altai-man> lucs, what do you want to do in the first place?

[16:21] <lucs> Let me beef up my example...

[16:21] <Altai-man> if you need an exact type check you can use =:= I think.

[16:21] <Altai-man> m: say Any =:= Any; say 'x' =:= Any;

[16:21] <camelia> rakudo-moar 2b15eb819: OUTPUT: «True␤False␤»

[16:26] <lucs> Turns out I'm calling a function that returns an array, and I want to see if some element appears in that array.

[16:26] <lucs> But the returned array can look like (Any), and 'foo' ~~ @A matches in that case (which I don't want).

[16:26] <lucs> E

[16:26] <lucs> sorry

[16:26] <lucs> 'foo' ~~ any @A 

[16:26] *** monkey_ joined
[16:27] <lucs> (edited) But the returned array can look like (Any), and 'foo' ~~ any @A matches in that case (which I don't want).

[16:27] <lucs> At least now I understand what's going on :)

[16:28] <Altai-man> is the function yours?

[16:28] <lucs> No :(

[16:28] <Altai-man> if you can change it, why not return Empty... ah, I see

[16:28] <Altai-man> hmm

[16:29] *** statisfiable6 joined
[16:29] <Altai-man> maybe you want `'foo' (elem) @what-returned`?

[16:29] <lucs> Oh, good idea.

[16:30] <lucs> Yeah, that works fine.

[16:30] <lucs> Thanks!

[16:30] <Altai-man> it's probably cheaper (?), but in any case it's less weird than using ~~ for membership check.

[16:30] <Altai-man> yw

[16:31] <lucs> "Weird" is in the eye of the more experienced developer ;)

[16:31] <Altai-man> perhaps

[16:32] <lucs> The TIMTOWTDI can sometimes be misleading, ey.

[16:32] <lucs> *eh

[16:32] <Altai-man> I mean, it's more specific and being more specific is good IMO.

[16:32] <lucs> Oh, I totally agree.

[16:32] <Altai-man> m: say 1 ~~ [1, 2, 3]

[16:32] <camelia> rakudo-moar 2b15eb819: OUTPUT: «False␤»

[16:33] <Altai-man> it doesn't work the usual way and then you need to do tricks with junctions

[16:33] <Altai-man> but junctions are tricky

[16:33] <lucs> I'd just forgotten about (elem) and tried something I vaguely thought would work.

[16:33] <Altai-man> yup

[16:34] <lucs> It's good to screw up like that once in a while (not too often!), it can become a learning experience.

[16:34] *** monkey_ left
[16:37] <ugexe> @A.grep(*.defined).any

[16:38] <ugexe> oops missed a bunch of scrollback

[16:42] *** avuserow left
[16:49] *** MoC left
[16:54] <El_Che> cool, we may end up with a rakudo star maintainer

[16:56] *** morte_ joined
[17:07] *** Sgeo left
[17:18] *** discord-raku-bot left
[17:18] *** discord-raku-bot joined
[17:34] *** xinming left
[17:41] *** Sgeo joined
[17:50] *** Altai-man left
[18:04] <rba> El_Che: Who is the rakudo star maintainer?

[18:05] <El_Che> today, no one

[18:05] <El_Che> rba: https://github.com/rakudo/rakudo.org/pull/75

[18:08] *** reportable6 left
[18:09] <rba> El_Che: Thanks, just saw it.

[18:10] *** reportable6 joined
[18:26] *** Sgeo_ joined
[18:28] *** Sgeo left
[18:34] *** TheAthlete left
[18:35] *** TheAthlete joined
[18:37] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/12/27/2021-52-jdv-released/

[18:43] <discord-raku-bot> <Anton Antonov#7232> @lizmat Thanks for mentioning "Doing it like Cro"!

[18:44] <lizmat> Anton Antonov: you're welcome

[18:44] <lizmat> will you still publish your blog post somewhere ?

[18:45] *** discord-raku-bot left
[18:45] *** discord-raku-bot joined
[18:47] <discord-raku-bot> <Anton Antonov#7232> @lizmat Yes. So far is on GitHub only (version 0.9), but I plan to publish in my WordPress site "RakuForPrediction" tomorrow. (https://rakuforprediction.wordpress.com)

[18:52] <lizmat> ++Anton Antonov

[18:55] <discord-raku-bot> <Anton Antonov#7232> @lizmat I also plan to make FOSDEM22 proposal submission this week.

[18:56] <lizmat> well, please do before Friday, not sure how FOSDEM interpretes 31 December as a deadline  :-)

[19:03] *** mathias[m] left
[19:05] *** mmat joined
[19:06] *** m_athias joined
[19:23] <spacekookie> I have a question about grammars (I'm pretty new to raku still so pls easy explanation :p) but why does my say line not print a hash with the two keys I provided? https://paste.rs/c7I.pl

[19:24] *** jjido left
[19:25] <spacekookie> It prints "(Any)" 

[19:30] <leah2> so, the problem is TOP doesnt match due to the whitespace

[19:30] <ugexe> because it should be e.g. `token TOP { <keyword> \s <payload> }`

[19:31] <leah2> and then you want LineGrammar.parse(...).made

[19:31] <discord-raku-bot> <Anton Antonov#7232> @lizmant Will do -- thanks!

[19:37] *** TheAthlete left
[19:45] *** bd3i joined
[20:00] * [Coke] sees "find element in returned list" and didn't see 'grep' suggested. huh

[20:08] <discord-raku-bot> <Anton Antonov#7232> Is there named regexes for `\v`  or `\n` ? (Like `<space>` for `\s`.)

[20:11] <discord-raku-bot> <Anton Antonov#7232> Or, probably it is more correctly to say ask:  is there a predefined character class for vertical whitespaces?

[20:17] *** Skarsnik joined
[20:21] <[Coke]> \v

[20:21] <[Coke]> https://docs.raku.org/language/regexes#\v_and_\V

[20:22] <[Coke]> (Started on that page and searched for "vertical")

[20:23] *** merryprog is now known as perryprog

[20:24] <discord-raku-bot> <Anton Antonov#7232> @Coke Yes, am I aware  of `\v` -- I am asking is there a predefined character class say `<vspace>`.

[20:24] <discord-raku-bot> <Anton Antonov#7232> I did not find such character class in https://docs.raku.org/language/regexes#Predefined_character_classes

[20:28] *** Colt left
[20:28] *** Colt joined
[20:30] *** Colt left
[20:34] *** mmat left
[20:44] *** morte_ left
[20:45] *** morte_ joined
[21:13] *** linkable6 left
[21:33] <spacekookie> leah2: oh thanks!

[21:56] <spacekookie> okay i'm confused again. I'm trying to replicate the example in the "Action Objects" section and a bit confused by the message I get https://paste.rs/siB The error: No such method 'made' for invocant of type 'Array'.   (in the TOP method)

[22:06] <moritz_> `$<statement>` is an array because <statement> is inside a quantifier

[22:07] <moritz_> so you'd need something like method TOP($/) { make $/<statement>.map: *.made }

[22:12] <spacekookie> hmmm

[22:13] *** evalable6 left
[22:13] <spacekookie> I guess that makes sense. Although now the way my `method statement` works seems wrong

[22:14] <spacekookie> (everything is nil >.>)

[22:15] *** jjido joined
[22:24] *** thundergnat left
[22:44] * gfldex .oO( Don't be so Nilhilistic! )

[22:51] <spacekookie> Okay I don't really understand what I changed but this line:  my %foo = Keyword => $<keyword>.made, Payload => $<payload>.made; outputs "{Keyword => (Any), Payload => (Any)}"

[22:51] <spacekookie> Which feels like step in the right direction? But not sure why it's (Any) and not the actual tokens that those roles match

[22:52] <spacekookie> I'm very out of my depth here x)

[23:14] *** linkable6 joined
[23:19] *** Skarsnik left
[23:46] *** jjido left
