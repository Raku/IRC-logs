[00:13] *** perlmaros left
[00:23] *** Doc_Holliwould left
[00:30] <tbrowder> ref backtick on inline comment: i think the backtick is needed to at least simplify parsing. if you dig into rakudu/src/Perl6/*nqp you'll see how magic '#' is relative to code context.

[00:30] <tbrowder> *rakudo

[00:31] <tbrowder> but PRs are welcome i'm sure

[00:35] *** pecastro left
[00:38] *** berber44 left
[00:51] *** mowcat left
[01:04] *** aindilis left
[01:04] *** leont left
[01:41] *** gnufr33dom joined
[02:00] *** marcusr left
[02:02] *** marcusr joined
[02:13] *** Doc_Holliwood joined
[02:19] *** MasterDuke left
[02:40] *** aindilis joined
[02:51] *** kvw_5_ joined
[02:54] *** kvw_5 left
[03:30] *** monkey__ joined
[03:53] *** Geth left
[03:54] *** Geth joined
[04:02] *** skaji_ left
[04:03] *** skaji_ joined
[04:18] *** aborazmeh left
[04:48] *** rindolf joined
[04:52] *** monkey__ left
[05:05] *** Kaiepi left
[05:05] *** Kaiepi joined
[05:05] *** sno joined
[05:18] *** guifa2 left
[05:34] *** guifa2 joined
[05:35] *** guifa2 left
[05:36] *** xinming joined
[05:39] *** guifa2 joined
[05:39] *** xinming_ left
[05:45] *** parabolize left
[05:45] *** sortiz joined
[06:06] *** Garbanzo left
[06:08] *** hythm joined
[06:21] *** nwc10 joined
[06:21] <nwc10> The error: Cannot locate native library 'libssl.so': libssl.so: cannot open shared object file: No such file or directory

[06:22] <nwc10> is sort of known, isn't it? I remember it being a problem before.

[06:22] <nwc10> I see that this has been updated:

[06:22] <nwc10> -rw-r--r-- 1 root root 593696 Feb 16 23:08 /usr/lib/x86_64-linux-gnu/libssl.so.1.1

[06:23] <nwc10> and I assume that this is now causing the load failure for the OpenSSL bindings

[06:23] <nwc10> but as this is an $ork thing that I didn't build or install, I'm not actually sure exactly what the setup is, or how to update it

[06:23] <nwc10> (there are docs! but not about that)

[06:26] <nwc10> aha right. So what one does is go back through root's bash history:

[06:26] <nwc10> apt purge libssl-dev

[06:26] <nwc10> OK

[06:26] <nwc10> seems that when I install that again, it works.

[06:26] <nwc10> thank you teddybear

[06:27] <nwc10> and have a good morning :-)

[06:27] *** nwc10 left
[06:34] *** jmcgnh left
[06:38] * guifa2 is confused

[06:40] *** jmcgnh joined
[06:41] * sortiz is curious about the confusion 

[06:42] <guifa2> the nwc10 self conversation ha

[06:44] <sortiz> Ah, thats a bug in OpenSSL bindings: I suspect it uses an unversionized 'is native'

[06:45] <sortiz> So depends on the link created by the devel package.

[06:47] <sortiz> I did not have time to comment. 

[06:50] *** Discipulus joined
[06:50] *** Discipulus_ joined
[06:50] *** Discipulus_ left
[06:51] <summerisle> Anyone else here use raku-mode?

[06:52] <sortiz> I'm a vimmer, sorry.

[06:53] <summerisle> no worries, i prefer the vim way of doing things, i just can't stand VimL :^)

[06:54] <summerisle> so i use evil

[06:54] <summerisle> but nonetheless, raku-mode has made me consider learning how to build indent rules for emacs just because of how many weird quirks it has

[06:55] <summerisle> according to the documentation, it's based on css-mode

[06:59] *** perlmaros joined
[07:01] *** ufobat_ joined
[07:28] *** bdju left
[07:30] *** guifa2 left
[07:31] *** samebchase- left
[07:36] *** samebchase- joined
[07:39] *** patrickb joined
[07:39] *** bdju joined
[07:43] *** Doc_Holliwood left
[07:50] *** gnufr33dom left
[07:58] *** wamba joined
[07:59] *** silug joined
[08:12] *** AlexDaniel` left
[08:12] *** BarrOff[m] left
[08:12] *** l-as left
[08:12] *** a3f left
[08:23] *** AlexDaniel` joined
[08:23] *** BarrOff[m] joined
[08:23] *** l-as joined
[08:23] *** a3f joined
[08:23] *** Doc_Holliwood joined
[08:25] *** JJAtria[m] left
[08:26] *** AlexDaniel` left
[08:26] *** BarrOff[m] left
[08:26] *** ThaEwat left
[08:26] *** kiti_nomad[m] left
[08:26] *** Tirifto[m] left
[08:26] *** uzl[m] left
[08:26] *** krako[m] left
[08:26] *** mark[m]4 left
[08:26] *** tusooa left
[08:26] *** CIAvash left
[08:26] *** MitarashiDango[m left
[08:26] *** pwr22 left
[08:27] *** l-as left
[08:28] *** unclechu left
[08:46] *** renormalist joined
[08:46] *** pecastro joined
[08:47] *** aborazmeh joined
[08:47] *** aluaces left
[08:48] *** aluaces joined
[08:52] *** Scimon joined
[08:59] *** Sgeo left
[09:20] *** AlexDaniel` joined
[09:24] *** sena_kun left
[09:25] *** bdju left
[09:26] *** bdju joined
[09:26] *** sena_kun joined
[09:27] *** tusooa joined
[09:27] *** unclechu joined
[09:27] *** krako[m] joined
[09:27] *** l-as joined
[09:27] *** ThaEwat joined
[09:27] *** Tirifto[m] joined
[09:27] *** pwr22 joined
[09:27] *** kiti_nomad[m] joined
[09:27] *** mark[m] joined
[09:27] *** MitarashiDango[m joined
[09:27] *** JJAtria[m] joined
[09:27] *** uzl[m] joined
[09:27] *** CIAvash joined
[09:27] *** BarrOff[m] joined
[09:35] *** bdju left
[09:35] *** bdju joined
[09:40] *** wamba left
[10:16] *** grumble left
[10:19] *** grumble joined
[10:20] *** aborazmeh left
[10:25] *** aborazmeh joined
[10:26] *** _jrjsmrtn left
[10:32] *** wamba joined
[10:41] *** tejr_ joined
[10:45] *** tejr left
[10:45] *** tejr_ is now known as tejr

[10:46] *** abraxxa left
[10:47] *** aborazmeh left
[11:04] *** Black_Ribbon left
[11:18] *** berber44 joined
[11:30] *** xinming left
[11:32] <tbrowder> summerisle: i use raku-mode and i wish you could fix indenting, especially with HERE docs

[11:36] <codesections> summerisle: +1 from me.  Working on raku-mode indentation has been on my "todo someday/I hope someone else does" wishlist for a while 

[11:36] <El_Che> now that rakudo-pkg has repos, I can add it to my production work containers where light scripting is needed :)

[11:37] <El_Che> \o/

[11:37] <codesections> Raku-mode also has some issues with recognizing strings/the end of strings, especially with custom delimiters 

[11:38] *** xinming joined
[11:38] *** sortiz left
[11:38] <codesections> (or in regexen/grammers)

[11:42] <codesections> (and by "issues", I mean `my $s = q|'|;` can break highlighting for a whole file)

[11:48] *** simcop2387 joined
[11:49] *** berber44 left
[12:03] *** leont joined
[12:06] *** kerframil joined
[12:08] *** jhill left
[12:08] *** skaji_ left
[12:10] *** asy joined
[12:10] *** asymptotically left
[12:13] *** asy is now known as asymptotically

[12:13] *** jhill joined
[12:13] *** SmokeMachine joined
[12:13] *** SmokeMachine left
[12:13] *** jhill left
[12:15] <patrickb> tbrowder: tyil and I recently talked about a Pod parsing module. Our conclusion was that a raku module to parse Pod written in plain Raku (i.e. not executing the file in question) would be a strategically wise thing to have. Basically Github supporting Pod and our module browser websites supporting pod well block on this. I imagine building a Pod

[12:15] <patrickb> parsing module (either by writing from scratch or by extracting the Raku core Pod parser) could be a good GSoC project. But for that we need a mentor that has some knowledge of the Raku Pod parsing. I might miss someone I currently don't think about, but I think you are currently the only person with up to date knowledge of the Pod stack. So, would

[12:15] <patrickb> you be willing to mentor such a project?

[12:15] *** jhill joined
[12:15] <tadzik> ah, good memories

[12:15] <tadzik> I actually prototyped the original pod parser as a module :)

[12:15] *** SmokeMachine joined
[12:17] <tbrowder> sounds like tadzik is a volunteer :-D

[12:17] <kerframil> hi. newbie question: if I want to test a trivial modification to a module that I was otherwise unable to install with zef, how would I do that?

[12:17] <tadzik> :D

[12:17] <tadzik> I'm not even up-to-date on Raku, not to mention Pod

[12:18] <tbrowder> seriously, i appreciate your asking, but i really am not up to the task both time and energy wise.

[12:19] <patrickb> tbrowder: OK. Thanks for considering!

[12:19] *** skaji_ joined
[12:20] <patrickb> tbrowder: Do you agree that you are currently the only person knowing the Pod stack well? Or is there someone else I missed?

[12:20] <tbrowder> keframio

[12:21] <tbrowder> well, finanalyst has been creating a lot of pod modules

[12:23] <patrickb> A quick google for keframio yielded nothing. Is there a typo?

[12:23] <tbrowder> keframio: in the top of your fork of the module, try executing "zef test ."

[12:24] <tbrowder> keframil: ^^^

[12:24] <patrickb> Ah! That wasn't directed at me.

[12:24] <kerframil> tbrowder: thanks. giving it a go.

[12:26] <tbrowder> patrickb: but i agree that would be a great gsoc project.

[12:27] <kerframil> tbrowder: it passed. is running "zef install ." acceptable at this point, or should I do something else?

[12:29] <kerframil> went ahead and did it. seems fine.

[12:30] <tbrowder> you can submit it as a PR to the module author's repo

[12:31] *** berber44 joined
[12:31] <tbrowder> you can also install it on your host and use it: zef install .

[12:32] <kerframil> indeed. I now have working Readline support, which is nice.

[12:32] <tbrowder> but you should absolutely submit the PR

[12:32] <kerframil> I don't use GitHub, so I'll take my chances on an email.

[12:32] *** berber44 left
[12:32] <tbrowder> any reason not to use github?

[12:33] <tbrowder> sure is easier to fix modules

[12:34] <kerframil> https://bugs.gentoo.org/747592#c6

[12:34] <kerframil> that's part of it.

[12:35] <tbrowder> patrickb: it may be heresy but i would consider not using the core parser to extract pod.

[12:36] <tbrowder> and i would assist where i could but not as a lead.

[12:38] <patrickb> tbrowder: Just to make sure I understand correctly. When creating a standalone module  (not depending on the core), you think it's better to create that module from scratch instead of extracting the core Pod parser and cleaning it up. Correct?

[12:38] <tbrowder> i mean use raku grammar but not at the nqp level.

[12:39] <patrickb> Is the core Pod parser in such a bad shape?

[12:43] *** DarthGandalf joined
[12:44] <tbrowder> i won't say bad, but i find it hard to make any more small changes. i think places need a rewrite because bits are assembled too early to know the final result of the intent.

[12:44] <tbrowder> a good example is the =defn

[12:45] <tbrowder> the first line needs to be kept separate from the rest of the block but the entire block text is collected at once.

[12:45] <tadzik> a good argument for it being in the core grammar is that it has places where it needs to parse the same quote rules as the last of Raku

[12:46] <tbrowder>  that is true. quotes are tough.

[12:46] <tadzik> and since it's (was?) a large, complex and not really reusable part of Std, it was more sensible to just merge them together (since it is all but one language after all) than maintain to separate copies of quote rules etc

[12:47] <tadzik> if you feel like an archeologies, my gsoc reports and applications from 2011 may still be around on the internet to explain my thinking back then

[12:47] <tbrowder> that would be useful for sure

[12:49] <patrickb> Oh, so you did a gsoc working on Pod! I didn't know about that!

[12:49] <tbrowder> ditto

[12:49] <tadzik> yeah, that was all my fault :P

[12:50] <tadzik> (and moritz, masak, jnthn and Damian)

[12:50] <tadzik> (possibly more)

[12:52] <codesections> re: archaeology -- it is interesting how much opportunity there is for that.  I recently found some helpful info by following a link to the last time a feature was discussed on IRC. 

[12:52] <codesections> in 2011

[12:54] <moritz> I had IRC logs dating back to 2005 or so. And deleted them due to GDPR. Fuck that.

[12:55] <tbrowder> brave new world

[12:55] <codesections> well, this was on the public log, so no worries there 

[12:56] <codesections> And it was kind of nice: it was like moritz and Larry were debating my PR, a decade before I wrote it :D

[13:05] *** Discipulus left
[13:05] * patrickb reboots

[13:05] *** patrickb left
[13:06] *** Grinnz left
[13:06] *** zostay left
[13:07] *** Grinnz joined
[13:07] *** zostay joined
[13:12] *** aluaces left
[13:18] *** aluaces joined
[13:21] *** patrickb joined
[13:24] *** rindolf left
[13:28] *** zostay left
[13:28] *** zostay joined
[13:28] *** Grinnz left
[13:28] *** Discipulus joined
[13:28] *** Grinnz joined
[13:29] *** jmerelo left
[13:33] <leont> In general, our POD tooling is fairly primitive

[13:34] <leont> I would welcome a standalone POD parser, even if I'm not sure it will solve my particular problem

[13:46] *** ppppp joined
[13:46] <ppppp> https://www.youtube.com/watch?v=xIlK4EKt3wg

[13:46] <ppppp> https://www.youtube.com/watch?v=Hl2hbr4s-c8

[13:46] <ppppp> https://www.youtube.com/watch?v=V1qczCCDsoc

[13:46] <ppppp> https://www.youtube.com/watch?v=ufaqrCJPXaM

[13:46] <ppppp> please support my channel 

[13:46] <ppppp> i want to show my bully classmate😢 that my youtube videos are good😁

[13:47] <codesections> lizmat: can you or one of the other mods for this channel address ^^^

[13:48] <tadzik> . o O ( youtube is not doing, allah is doing )

[13:49] *** monkey__ joined
[13:59] <ppppp> hello creatures of the waste land

[14:03] *** guifa2 joined
[14:04] *** ppppp left
[14:15] *** monkey__ left
[14:25] *** rindolf joined
[14:31] <Scimon> So. Lots of stuff is going to be changing for me real soon now. I'm going to see if I can manage to survive without a full time permanent job. (What fun). I'm hoping I'm going to have some more time to devote to Raku with module writing, general writing and talks. I'll keep people informed. :)

[14:32] <El_Che> Scimon: good luck

[14:32] <El_Che> Hopefully a positive choice

[14:33] <codesections> Scimon: Best of luck! 

[14:34] <masak> pong!

[14:34] <Scimon> I trying to stay positive. If anyone has thoughts on modules that would be useful to have written I may be able to put some time to it. 

[14:35] <masak> guifa2: you were wondering why the syntax is #`[] and not #[] ?

[14:35] <guifa2> masak: correct.  Synopses had #[] but it got changed somewhere along the way to need the backtick

[14:36] <masak> yes. let me tell you what I remember.

[14:36] <masak> I also suspect there is a good commit to consult in the specs repository

[14:36] <masak> IIRC, multiline comments were introduced late, basically after $Larry had decided they were not needed

[14:37] <masak> the party line was, use several to-end-of-line comments, or use Pod

[14:37] <codesections> Scimon: have you considered applying for a grant from YAS (aka TPF)?  It'd be great to see more people getting paid for improving the Raku ecosystem (if you have the time right now)

[14:37] <masak> and then #[] comments came along

[14:37] <Scimon> codesections: You know... I had not... but Hmmmm.

[14:38] <masak> I think the backtick was added because it was a bit too accident-prone to have a [ or a ( start a comment _without_ the corresponding intent to make it a multiline comment

[14:38] <masak> that may not be the satisfying answer you're looking for, but I think that was it

[14:38] <masak> naturally, since TimToady wasn't very sold on multiline comments in the first place, he didn't mind giving them an even uglier syntax with the backtick :P

[14:39] <guifa2> masak: the risk of typos makes sense, but man does it add to linenoise for inline comments

[14:39] * masak quickly checks whether TimToady is around to confirm or deny this

[14:39] <masak> seems not.

[14:39] <masak> guifa2: to be perfectly honest, I just never use the multiline comments

[14:40] <masak> and to be a bit cynical, just a bit, I think that was kind of the idea

[14:40] <guifa2> The only time I use multiline is to uickly and easily comment out a large block

[14:40] <masak> make them ugly, I mean

[14:40] <guifa2> #`<<<<< at the top

[14:40] <masak> guifa2: there are better ways

[14:40] <guifa2> and then >>>>> at the bottom

[14:40] <masak> guifa2: surround them with a `while 0 { .. }`

[14:40] <masak> then they are commented out, but they still get syntax-checked :D

[14:41] <masak> m: say "OH HAI"

[14:41] <camelia> rakudo-moar 3235f3e42: OUTPUT: «OH HAI␤»

[14:41] <masak> m: while 0 { say "thiz no run" }; say "OH HAI"

[14:41] <camelia> rakudo-moar 3235f3e42: OUTPUT: «OH HAI␤»

[14:41] <masak> m: while "commented out" but False { say "thiz no run" }; say "OH HAI"

[14:41] <camelia> rakudo-moar 3235f3e42: OUTPUT: «OH HAI␤»

[14:42] <codesections> guifa2: If the syntax was introduced late, then it might not be about typos as avoiding breaking code.  #[ seems like something that might exist just by accident 

[14:42] <masak> there are many options for multi-line commenting-out, not involving the backtick :)

[14:42] <masak> by the way, the backtick is otherwise fairly unused in Raku. the idea is that it's "for DSLs"

[14:42] <Scimon> One thing I'd like is for #| comments to include line breaks. So if I write a three line one (with three #|) it formats it like that when you do a -? hmmm you know what on Monday I might look into that.

[14:43] <guifa2> Scimon: I believe there is work being done on that.  

[14:43] <masak> Scimon: sounds good -- please do :)

[14:43] <guifa2> there's a flag, actually I think

[14:43] <guifa2> I forget who was working on it.  tbrowder I think

[14:43] <codesections> (I use #* to note TODO comments, so my code would break if #* became meaningful)

[14:44] * guifa2 uses, *ahem*, # TODO

[14:44] <codesections> er, well, _some_ of my code.  I don't commit TODO's _all_ the time :D

[14:44] *** gnufr33dom joined
[14:45] <codesections> I use #* TODO:/n# * item 1/n# * item 2

[14:46] *** patrickb left
[14:46] <codesections> that way, I can search for #* to find them (saving keystrokes over searching # TODO, you see)

[14:46] *** vrurg_ left
[14:47] *** vrurg joined
[14:47] * guifa2 is afk&

[14:47] <codesections> yes, potentially an over-optimization :)

[14:48] <masak> my favorite recent pattern is to express TODOs as tests; I make them try something and then check for the expected failure/exception

[14:48] <masak> there are few things as good as executable comments ;)

[14:48] <masak> not to mention comments that shout loud and clear in the test suite

[14:49] <codesections> haha, clearly your TODOs are more specific than mine! 

[14:49] <codesections> Mine are often TODO shorten

[14:49] <codesections> or similar

[14:50] <masak> doesn't have to be all that specific. if it's a "TODO implement function 'foo'", then the test is `(foo)` -- exception: unbound

[14:52] <codesections> So you write it in such a way that the program won't execute until it's done?  Or is that wrapped in a test somehow/in your test file?

[14:52] <masak> technically, I did this for NYI features

[14:52] <masak> I still have minor "TODO" comments scattered all over the code base :P

[14:53] *** PimDaniel joined
[14:53] <masak> codesections: https://github.com/masak/bel/blob/master/lib/Language/Bel/NotYetImplemented.pm

[14:53] <PimDaniel> \o

[14:53] <PimDaniel> Hi.

[14:53] <masak> (and there's a corresponding test file that runs those as tests)

[14:53] <masak> PimDaniel: o hai

[14:54] <PimDaniel> What is the proper way to empty an array. I mean other than : = ();

[14:55] <masak> m: my @a = 1, 2, 3, 4, 5; say @a; @a.pop while @a; say @a

[14:55] <camelia> rakudo-moar 3235f3e42: OUTPUT: «[1 2 3 4 5]␤[]␤»

[14:55] <PimDaniel> Same question for an hash. I thought there were a specified method.

[14:55] * masak laughs peevishly

[14:56] <masak> it seems I've become worse at giving advice since I was last active here

[14:56] <El_Che> Scimon: generic oidc/oauth2 support

[14:56] <masak> m: my @a = 1, 2, 3, 4, 5; say @a; @a = Nil; say @a

[14:56] <camelia> rakudo-moar 3235f3e42: OUTPUT: «[1 2 3 4 5]␤[(Any)]␤»

[14:56] <masak> m: my @a = 1, 2, 3, 4, 5; say @a; @a = Empty; say @a

[14:56] <camelia> rakudo-moar 3235f3e42: OUTPUT: «[1 2 3 4 5]␤[]␤»

[14:57] <masak> m: my @a = 1, 2, 3, 4, 5; say @a; @a = []; say @a

[14:57] <camelia> rakudo-moar 3235f3e42: OUTPUT: «[1 2 3 4 5]␤[]␤»

[14:57] <masak> m: my @a = 1, 2, 3, 4, 5; say @a; @a = [[[[]]]]; say @a

[14:57] <camelia> rakudo-moar 3235f3e42: OUTPUT: «[1 2 3 4 5]␤[]␤»

[14:57] <PimDaniel> masak thank's.

[14:58] <PimDaniel> but the question is just for curiosity and is more subtile.

[14:58] <masak> I'm always up for more subtle

[14:59] <Scimon> El_Che: That's a great idea.

[14:59] <PimDaniel> Ouais; désolé suis français. In many languages there's a specified keywork to empty arrays/hashes, etc...

[15:00] <masak> you did notice my `Empty` example above, right?

[15:00] <El_Che> Scimon: there is already a Google specific one that could be used as an example

[15:02] <PimDaniel> for an hash what about more simple than %h = %(); ???

[15:02] <masak> pas besoin de s'excuser d'être français...

[15:02] <PimDaniel> for an array what about more simple than @a = () or [].

[15:03] <masak> m: my %h = a => 1, b => 2; %h = (); say %h

[15:03] <camelia> rakudo-moar 3235f3e42: OUTPUT: «{}␤»

[15:03] <masak> no need even for the %

[15:03] <PimDaniel> yes

[15:04] <PimDaniel> Well i think my question has no response.

[15:04] <masak> not sure I understand what your question is yet

[15:05] <masak> m: my @a = 1, 2, 3; @a.clear; say @a

[15:05] <camelia> rakudo-moar 3235f3e42: OUTPUT: «No such method 'clear' for invocant of type 'Array'␤  in block <unit> at <tmp> line 1␤␤»

[15:05] <masak> you're looking for something like a .clear method?

[15:05] *** Sgeo joined
[15:06] <PimDaniel> In python you say : del list to delete list. 

[15:06] <PimDaniel> YES!

[15:06] <PimDaniel> That's it!

[15:06] <masak> no, `del list` would remove the entire variable. please don't do that

[15:07] <masak> well, in that case I think you're right. there is no such .clear method in Raku -- or if there is, I missed it

[15:07] <masak> the idiomatic way is `@a = ();` and `%h = ();`

[15:08] <PimDaniel> just by curiosity: i translate python code to raku and it brings me to unusefull phylosophic questions may be!

[15:08] <masak> yes, that's good

[15:09] <masak> seeing the same thing from different perspectives at once, like one of those cubist Picasso paintings

[15:09] <PimDaniel> ok i'll use idiomatic way like an idiot.

[15:09] <masak> :)

[15:09] <PimDaniel> Thank's masak, back later.

[15:09] * masak curtsies

[15:09] *** PimDaniel left
[15:10] <masak> I skipped the bit where I wanted to say that I think clearing an array or hash is an antipattern

[15:10] <masak> there's a time and a place

[15:18] *** PimDaniel joined
[15:19] <PimDaniel> Hi! Now is there something other than @lit.elems - 1 to get the last indice of an array?

[15:19] <PimDaniel> like $# in perl5

[15:20] <masak> m: my @a = 1, 2, 3; say @a[ *-1 ]

[15:20] <camelia> rakudo-moar 3235f3e42: OUTPUT: «3␤»

[15:20] <Scimon> m: my @a = 1,2,3;say @a.end;

[15:20] <camelia> rakudo-moar 3235f3e42: OUTPUT: «2␤»

[15:20] <PimDaniel> I don't want the last value but the indice. 

[15:20] <Scimon> https://docs.raku.org/type/Array#(List)_routine_end

[15:21] <masak> index.

[15:21] <Scimon> m: my @a = <a b c d e>;say @a.end;

[15:21] <camelia> rakudo-moar 3235f3e42: OUTPUT: «4␤»

[15:21] <Scimon> :D

[15:21] <PimDaniel> .end

[15:21] <masak> yes, .end is it

[15:21] <masak> m: my @a[2..7]; say @a.end

[15:21] <camelia> rakudo-moar 3235f3e42: OUTPUT: «1␤»

[15:21] <PimDaniel> m: my @a = 1 .. 10; say @a.end;

[15:21] <camelia> rakudo-moar 3235f3e42: OUTPUT: «9␤»

[15:21] <masak> hm.

[15:22] <PimDaniel> m: my @a = 1 .. 100; say @a.end;

[15:22] <camelia> rakudo-moar 3235f3e42: OUTPUT: «99␤»

[15:22] <PimDaniel> ok it works, thank's!

[15:22] *** PimDaniel left
[15:23] <masak> I remember the first time I saw .end, I misunderstood it as meaning @a[*-1]

[15:29] <masak> guess there's kind of a built-in ambiguity there between "last index" and "last element"

[15:30] <codesections> m: say ('a'..'z').end; say ('a'..'z').tail

[15:30] <camelia> rakudo-moar 3235f3e42: OUTPUT: «25␤z␤»

[15:30] <codesections> but we _do_ have a method for that, which helps a bit

[15:31] <masak> (a) I had missed .tail; thanks

[15:32] <masak> (b) the name doesn't quite do it for me; to me, "tail" means "all the elements except the first"

[15:32] <masak> m: my ($head, @tail) := (1, 2, 3, 4, 5); say @tail

[15:32] <camelia> rakudo-moar 3235f3e42: OUTPUT: «Type check failed in binding to parameter '@tail'; expected Positional but got Int (2)␤  in block <unit> at <tmp> line 1␤␤»

[15:32] *** kerframil left
[15:33] <masak> m: my ($head, @tail) := [1, 2, 3, 4, 5]; say @tail

[15:33] <camelia> rakudo-moar 3235f3e42: OUTPUT: «Type check failed in binding to parameter '@tail'; expected Positional but got Int (2)␤  in block <unit> at <tmp> line 1␤␤»

[15:33] <masak> m: my ($head, *@tail) := [1, 2, 3, 4, 5]; say @tail

[15:33] <camelia> rakudo-moar 3235f3e42: OUTPUT: «[2 3 4 5]␤»

[15:33] <masak> right. like that.

[15:34] <codesections> m: say ('a'..'e').tail(*-1)

[15:34] <camelia> rakudo-moar 3235f3e42: OUTPUT: «(b c d e)␤»

[15:34] <Scimon> m: my ($head, @tail) = (1,2,3,4,5);say @tail; # Or without binding.

[15:34] <camelia> rakudo-moar 3235f3e42: OUTPUT: «[2 3 4 5]␤»

[15:34] <masak> I guess it must be because conceptually, lists are like snakes. whatever's not the head is the tail.

[15:34] <masak> Scimon: oh right :)

[15:35] <masak> gotta learn about this fancy not-binding thing

[15:35] <Scimon> I think I don't use binding enough. I probably should.

[15:37] * masak .oO( it's action-packed... at a distance )

[15:38] *** berber44 joined
[15:43] <Scimon> I feel that assignment and binding and when to use them might be a really good talk. (I've found that if I give a talk on something it means I put a LOT of effort into learning it deeply). 

[15:49] <rjbs> When picking what raku to install and use (for fun) is there any reason to pick something other than "the version closest to today's date from rakubrew"?

[15:49] <Scimon> Personally I'm a big fan of https://github.com/nxadm/rakudo-pkg

[15:50] *** mowcat joined
[15:50] <Scimon> Unless you're wanting bleeding edge stuff rakubrew is overkill (and you can end up with flaky code).

[15:51] <Scimon> The packages are stable releases. 

[15:52] <El_Che> rjbs: in case you run windows or mac, there are compiled tar.gz as well in the rakudo homepage

[15:53] *** parabolize joined
[15:54] <rjbs> At the moment I have installed 2020.12 from prebuilt.

[15:57] <codesections> if I have a variable $foo = "bar", there's not a shorthand syntax using $foo to get `bar => True`, is there?  

[15:59] <Scimon> So you want a pair from $foo? 

[15:59] <codesections> Yeah.  The same pair I'd get with :bar

[16:00] <Scimon> m: my $foo = "Bar";my $p = $foo.Set.pairs[0]; dd $p; # I mean.... this works.

[16:00] <camelia> rakudo-moar 3235f3e42: OUTPUT: «Pair $p = :Bar␤»

[16:01] <codesections> haha :D 

[16:02] <codesections> I just wanted to make sure I wasn't missing something obvious.  $foo => True is fine 

[16:02] <Scimon> :)

[16:02] *** db48x left
[16:02] <Scimon> Yeah. I think that's it.

[16:02] <Scimon> And shorter.

[16:02] *** db48x2 joined
[16:03] *** db48x2 is now known as db48x

[16:03] <codesections> just checking that there wasn't a : shortcut I'd missed

[16:04] <Scimon> m: my $foo = "Bar";my $p = :$foo;dd $p

[16:04] <camelia> rakudo-moar 3235f3e42: OUTPUT: «Pair $p = :foo("Bar")␤»

[16:05] <Scimon> Poot no.

[16:10] *** l-as left
[16:11] *** Tirifto[m] left
[16:12] *** jmerelo joined
[16:13] <Scimon> jmerelo: Watching your videa last night. Some great stuff in there with composition :)

[16:15] *** kiti_nomad[m] left
[16:15] <leont> Still have to watch it, but it sounded like an interesting video

[16:17] *** l-as joined
[16:17] *** codesect` joined
[16:18] *** codesect` left
[16:19] *** codesections left
[16:19] *** codesections joined
[16:25] *** Tirifto[m] joined
[16:29] *** kiti_nomad[m] joined
[16:45] *** gnufr33dom left
[16:51] *** Scimon left
[17:00] *** PimDaniel joined
[17:00] <PimDaniel> Hi!

[17:00] <PimDaniel> Not sure if i did it :

[17:01] <PimDaniel> How do you convert a number into it's NumStr equivalent?

[17:01] <PimDaniel> Lets say number 12345 must be "12345"?

[17:01] *** Doc_Holliwood left
[17:07] <andinus> PimDaniel: just to 12345.Str

[17:07] <andinus> m: say 12345.Str

[17:09] * PimDaniel andinus thank's. Thank's! but me problem is weird. 

[17:09] *** Discipulus_ joined
[17:09] *** ufobat__ joined
[17:09] <PimDaniel> In fact i have sometimes str and sometimes IntStr into my hash. 

[17:10] *** leont_ joined
[17:10] *** guifa2_ joined
[17:11] *** vrurg_ joined
[17:11] <PimDaniel> I'm translating python code to Raku and it does not type numbers.

[17:11] <PimDaniel> well, i'll try to see what i can do... thank's again.

[17:11] *** PimDaniel left
[17:11] *** Some-body_ joined
[17:12] *** hythm_ joined
[17:12] *** domidumont joined
[17:13] *** masak_ joined
[17:13] *** sivoais_ left
[17:14] *** xinming_ joined
[17:14] *** lucs_ joined
[17:14] *** kvw_5 joined
[17:14] *** ManifestO joined
[17:14] *** Maylay_ joined
[17:16] <camelia> rakudo-moar 3235f3e42: OUTPUT: «12345␤»

[17:18] *** sorpigal joined
[17:18] *** db48x2 joined
[17:18] *** jmerelo left
[17:18] *** db48x left
[17:18] *** vrurg left
[17:18] *** rindolf left
[17:18] *** guifa2 left
[17:18] *** Discipulus left
[17:18] *** DarthGandalf left
[17:18] *** leont left
[17:18] *** xinming left
[17:18] *** ufobat_ left
[17:18] *** hythm left
[17:18] *** kvw_5_ left
[17:18] *** gordonfish left
[17:18] *** lucs left
[17:18] *** Manifest0 left
[17:18] *** Maylay left
[17:18] *** phogg left
[17:18] *** masak left
[17:18] *** Some-body_ is now known as DarthGandalf

[17:18] *** guifa2_ is now known as guifa2

[17:20] *** db48x2 is now known as db48x

[17:21] *** jmerelo joined
[17:21] *** IAAUNWS joined
[17:21] *** vrurg joined
[17:21] *** rindolf joined
[17:21] *** IAAUMOI joined
[17:21] *** Discipulus joined
[17:21] *** leont joined
[17:21] *** xinming joined
[17:21] *** hythm joined
[17:21] *** Manifest0 joined
[17:21] *** Maylay joined
[17:21] *** phogg joined
[17:21] *** db48x left
[17:21] *** Maylay left
[17:21] *** phogg left
[17:21] *** db48x joined
[17:22] *** rindolf left
[17:22] *** sivoais joined
[17:22] *** vrurg left
[17:22] *** Discipulus left
[17:22] *** leont left
[17:22] *** xinming left
[17:22] *** hythm left
[17:22] *** Manifest0 left
[17:22] *** rindolf joined
[17:24] *** gordonfish joined
[17:24] *** sorpigal left
[17:26] *** kiti_nomad[m] left
[17:28] *** sftp left
[17:29] *** sftp joined
[17:34] *** mowcat left
[17:36] *** Scimon joined
[17:37] <Scimon> Right. That's me free and whatever. Though plan A is 5 days gaming and Netflix :) 

[17:38] <Scimon> jmerelo: I may be available for GSOC mentoring. I really don't know what my plans are yet but I'm hoping I will have time to devote to Raku more.

[17:40] *** kiti_nomad[m] joined
[17:43] *** phogg joined
[17:43] *** phogg left
[17:43] *** phogg joined
[17:45] *** domidumont left
[17:46] *** lucs_ is now known as lucs

[17:47] *** mowcat joined
[17:49] *** mowotter joined
[17:49] *** natrys joined
[17:51] *** cusion joined
[17:56] *** mowcat left
[17:56] *** cusion left
[17:59] *** aborazmeh joined
[18:14] *** Doc_Holliwood joined
[18:23] *** DiffieHellman left
[18:24] *** DiffieHellman joined
[18:24] *** jmerelo left
[18:34] *** natrys left
[18:35] *** aborazmeh left
[18:48] *** monkey__ joined
[18:49] *** Garbanzo joined
[18:50] *** natrys joined
[18:50] *** ufobat__ left
[18:50] *** aborazmeh joined
[18:52] *** ufobat__ joined
[19:25] *** monkey__ left
[19:27] *** ufobat__ left
[19:29] *** aborazmeh left
[19:29] *** rindolf left
[19:34] *** aborazmeh joined
[19:36] *** sivoais left
[19:36] *** vrurg_ left
[19:36] *** samebchase- left
[19:36] *** mightypork left
[19:36] *** defaultxr left
[19:36] *** pnu__ left
[19:36] *** Util left
[19:36] *** Mithaldu left
[19:36] *** karupanerura left
[19:36] *** KotH left
[19:36] *** brass left
[19:36] *** charsbar left
[19:36] *** jjatria left
[19:36] *** dg left
[19:36] *** moritz left
[19:37] *** MilkmanDan joined
[19:39] *** sftp left
[19:40] *** sivoais joined
[19:40] *** vrurg_ joined
[19:40] *** samebchase- joined
[19:40] *** mightypork joined
[19:40] *** defaultxr joined
[19:40] *** pnu__ joined
[19:40] *** gfldex joined
[19:40] *** timotimo joined
[19:40] *** andinus joined
[19:40] *** xkr47 joined
[19:40] *** pounce joined
[19:40] *** a3r0 joined
[19:40] *** fvox_ joined
[19:40] *** literal joined
[19:40] *** gugod joined
[19:40] *** Util joined
[19:40] *** Mithaldu joined
[19:40] *** karupanerura joined
[19:40] *** KotH joined
[19:40] *** brass joined
[19:40] *** charsbar joined
[19:40] *** jjatria joined
[19:40] *** dg joined
[19:40] *** moritz joined
[19:41] *** sftp joined
[20:10] *** mowotter left
[20:13] *** MasterDuke joined
[20:13] *** mowcat joined
[20:16] *** mowcat left
[20:16] *** mowcat joined
[20:17] *** mowcat left
[20:18] *** mowcat joined
[20:18] *** mowcat left
[20:19] *** mowcat joined
[20:19] *** mowcat left
[20:19] *** mowcat joined
[20:20] *** mowcat left
[20:20] *** mowcat joined
[20:20] *** mowcat left
[20:24] *** Garbanzo left
[20:24] *** Garbanzo joined
[20:33] *** silug left
[20:36] *** Black_Ribbon joined
[20:38] *** wamba left
[20:46] *** sftp left
[20:53] *** sftp joined
[20:57] *** aborazmeh left
[20:58] *** aborazmeh joined
[21:00] *** sortiz joined
[21:13] *** aborazmeh left
[21:30] *** linkable6 left
[21:31] *** linkable6 joined
[21:53] *** natrys left
[22:07] *** natrys joined
[22:17] *** Scimon left
[22:33] *** Doc_Holliwood left
[22:36] *** natrys left
[23:06] *** Discipulus_ left
[23:26] *** aindilis` joined
[23:26] *** aindilis left
[23:43] <summerisle> does anyone know what issue tracker this (https://github.com/Raku/raku-mode/blob/master/raku-indent.el#L57) bug number might belong to?

[23:47] <guifa2> summerisle: probably old rt.cpan

[23:48] <summerisle> where might I be able to read it (apologies - rt.cpan doesn't ring a bell)

[23:48] <summerisle> https://rt.cpan.org/ ?

[23:49] <summerisle> https://rt.cpan.org/Public/Bug/Display.html?id=15467 doesn't seem to match up with what I imagine this is referring to

[23:53] <guifa2> summerisle: that's the one, but I agree, it doesn't seem to line up

[23:54] *** Geth left
[23:55] <guifa2> summerisle: maybe this one?https://lists.gnu.org/archive/html/bug-gnu-emacs/2013-10/msg00099.html

[23:56] <summerisle> that's definitely it - raku-mode's SMIE rules were derived from css-mode

[23:56] * guifa2 's google fu is still strong

[23:57] <MasterDuke> https://stackoverflow.com/questions/43584838/emacs-css-mode-wont-indent-values-across-multiple-lines

[23:58] <MasterDuke> ah, guifa2 found the actual source

[23:58] <guifa2> well, almost

[23:58] <guifa2> I found a mailing list.  

