[00:03] *** rindolf left
[00:05] *** moon-child left
[00:09] *** ensamvarg3 joined
[00:22] <tony-o> .tell lizmat https://deathbyperl6.com/fez-zef-a-raku-ecosystem-and-auth/

[00:22] <tellable6> tony-o, I'll pass your message to lizmat

[00:26] *** mowcat left
[00:46] *** moon-child joined
[00:51] *** JRaspass left
[01:26] *** pecastro left
[01:26] *** lucasb left
[01:27] *** sno joined
[02:11] *** guifa left
[02:34] *** earnestly left
[02:36] *** raku-bridge1 joined
[02:36] *** raku-bridge1 left
[02:36] *** raku-bridge1 joined
[02:37] *** kvw_5 joined
[02:37] *** raku-bridge1 is now known as raku-bridge

[02:38] *** MasterDuke left
[02:39] <kawaii> Is there something other than '' I should be using at the end of my expression here to represent nothing? I tried Nil but it can't be used in a string context, or maybe I should just write this entirely differently? `my $description = (%member<name> || 'Unknown') ~ (%member<locale> ?? " :flag_{%member<locale>}:" !! '');`

[02:40] *** kvw_5_ left
[03:00] *** tejr left
[03:00] *** tejr joined
[03:18] <kawaii> Also it seems that no matter what I try, I can't get Raku to `uniparse` any kind of flag, even when I construct them correctly with the regional indicator symbols, if your IRC client shows an EU flag in the paste preview (or browser) ignore it, it's lying >:( https://www.irccloud.com/pastebin/1wU6pxTT/

[03:19] <kawaii> flag emojis are constructed by two "Regional Indicator Symbol Letter" emotes, but Raku seems unaware they exist

[03:27] *** rindolf joined
[03:56] <[Coke]> kawaii: works here

[03:56] <[Coke]> m: my $a = 'Regional Indicator Symbol Letter E'.uniparse ~ 'Regional Indicator Symbol Letter U'.uniparse; say $a;

[03:56] <camelia> rakudo-moar 5aec4aaac: OUTPUT: «🇪🇺␤»

[03:56] <[Coke]> ^^ and there.

[03:56] <[Coke]> what version of rakudo do you have?

[03:56] <[Coke]> might pre-date the unicode update with flag info?

[03:57] <kawaii> [Coke]: huh, I wonder if my shell was the issue all along? https://usercontent.irccloud-cdn.com/file/gIxKoUmg/Screenshot%20from%202021-01-16%2003-57-05.png

[03:59] <kawaii> Odd, because this is Ubuntu from last year, and the flags were introduced in 2015 or so

[04:14] <kawaii> m: my %member = locale => 'EU'; my $flag = do for %member<locale>.split('',:skip-empty) { ('Regional Indicator Symbol Letter ' ~ $_).uniparse };

[04:14] <camelia> rakudo-moar 5aec4aaac: ( no output )

[04:14] <kawaii> 🤔

[04:14] <kawaii> oh, no say, lol

[04:14] <kawaii> my %member = locale => 'EU'; my $flag = do for %member<locale>.split('',:skip-empty) { ('Regional Indicator Symbol Letter ' ~ $_).uniparse }; say $flag;

[04:14] <evalable6> kawaii, rakudo-moar 5aec4aaac: OUTPUT: «(🇪 🇺)␤»

[04:15] <kawaii> m: my %member = locale => 'EU'; my $flag = do for %member<locale>.split('',:skip-empty) { ('Regional Indicator Symbol Letter ' ~ $_).uniparse.join }; say $flag;

[04:15] <camelia> rakudo-moar 5aec4aaac: OUTPUT: «(🇪 🇺)␤»

[04:16] <kawaii> my $flag = do for %member<locale>.split('',:skip-empty) { (('Regional Indicator Symbol Letter ' ~ $_).uniparse).join }; say $flag;

[04:16] <kawaii> m: my $flag = do for %member<locale>.split('',:skip-empty) { (('Regional Indicator Symbol Letter ' ~ $_).uniparse).join }; say $flag;

[04:16] <camelia> rakudo-moar 5aec4aaac: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '%member' is not declared␤at <tmp>:1␤------> 3my $flag = do for 7⏏5%member<locale>.split('',:skip-empty) { ␤»

[04:17] <kawaii> my %member = locale => 'EU'; my $flag = do for %member<locale>.split('',:skip-empty) { (('Regional Indicator Symbol Letter ' ~ $_).uniparse).join }; say $flag;

[04:17] <evalable6> kawaii, rakudo-moar 5aec4aaac: OUTPUT: «(🇪 🇺)␤»

[04:17] <kawaii> That's probably highly unoptimal but I guess it works

[04:18] <kawaii> Ah wait no, $flag is actually a list

[04:21] <kawaii> I think I want `.values.join` here but doesn't seem to give me the string I'm looking for

[04:27] *** evalable6 left
[04:27] *** linkable6 left
[04:30] *** evalable6 joined
[04:30] *** linkable6 joined
[04:43] <[Coke]> m: my %member = locale => 'EU'; my $flag = %member<locale>.comb.map({uniparse("Regional Indicator Symbol Letter $_")}).join; say $flag;

[04:43] <camelia> rakudo-moar 5aec4aaac: OUTPUT: «🇪🇺␤»

[04:43] <[Coke]> not sure why you had the do/for there.

[04:45] <kawaii> oh, that's way better, sorry I'm not very good with map yet, do for is my go-to way of looping in this way at the moment :(

[04:46] *** ensamvarg3 left
[04:50] <kawaii> [Coke]: thank you for your help this evening :)

[05:02] <[Coke]> ofc.

[05:41] *** Black_Ribbon joined
[05:44] *** brtastic joined
[06:07] *** vike left
[06:19] *** xelxebar left
[06:19] *** xelxebar joined
[06:43] *** Altai-man joined
[06:46] *** parabolize left
[06:54] *** Altai-man left
[06:54] *** ensamvarg joined
[06:56] *** wamba joined
[06:57] *** jmerelo joined
[06:59] <jmerelo> releasable6:status

[06:59] <releasable6> jmerelo, Next release in ≈7 days and ≈12 hours. 1 blocker. Changelog for this release was not started yet

[06:59] <tellable6> 2021-01-15T18:11:15Z #raku <guifa> jmerelo are you just doing voiceover for your FOSDEM presentation or are you recording video of yourself talking as you’re giving it

[06:59] <releasable6> jmerelo, Details: https://gist.github.com/3cbea08f3084676c4094d352b8a16da1

[06:59] <jmerelo> .tell guifa you have to record the voice. During the presentation, you can answer questions

[07:00] <tellable6> jmerelo, I'll pass your message to guifa

[07:04] *** defaultxr left
[07:07] *** defaultxr joined
[07:10] *** Garbanzo left
[07:54] *** aluaces joined
[07:58] *** sno left
[07:59] *** wamba left
[08:08] *** sno joined
[08:16] *** notandinus left
[08:16] *** notandinus joined
[08:31] *** sjm_uk joined
[08:45] *** vike joined
[09:38] *** domidumont joined
[09:42] *** JRaspass joined
[10:10] *** jmerelo left
[10:38] *** domidumont left
[10:57] *** Black_Ribbon left
[11:02] *** Sgeo left
[11:06] *** earnestly joined
[11:07] <notandinus> what is the "loop marker"c called?

[11:08] <notandinus> m: marker: for 1..2 {.say}

[11:08] <camelia> rakudo-moar 5aec4aaac: OUTPUT: «1␤2␤»

[11:08] <notandinus> ^ "marker:" <-- is there a name for this?

[11:09] <sortiz> A Label, see https://docs.raku.org/type/Label

[11:14] <sortiz> m: marker: for 1..2 { last marker if $_ == 2; .say }

[11:14] <camelia> rakudo-moar 5aec4aaac: OUTPUT: «1␤»

[11:17] <notandinus> ah i see

[11:26] <notandinus> do other languages have this Label thing? apart from Perl and Raku, i don't seem to find it for python, nim

[11:28] <gfldex> notandinus: C/C++ does, but with different semantics (read: you can mess up the stack).

[11:30] <sortiz> Javascript also, with semantics similar to Raku.

[11:32] *** cpage_ joined
[11:32] <El_Che> isn't label extremely commom to break out of the correct loop?

[11:33] *** dpk left
[11:33] *** dpk joined
[11:33] *** moon-child left
[11:33] *** samcv left
[11:33] *** earenndil joined
[11:34] <El_Che> Besides python, all other languages probably have it

[11:34] *** samcv joined
[11:34] *** cpage left
[11:34] *** cpage_ is now known as cpage

[11:34] <sortiz> But only in Raku they are also objects, like almost everything.

[11:35] <notandinus> is it being object better?

[11:35] *** samebchase joined
[11:36] <El_Che> more consistent with the rest, but I wouldn't know that to do with it as an object

[11:36] *** wamba joined
[11:37] <sortiz> m: marker: for 1..2 { marker.last if $_ == 2; .say }

[11:37] <camelia> rakudo-moar 5aec4aaac: OUTPUT: «1␤»

[11:38] <El_Che> is it better than marker: for 1..2 { break marker if $_ == 2; .say }

[11:38] <El_Che> (it only makes sense of course ig there are several nested loops)

[11:39] <sortiz> Indeed.

[11:43] <timotimo> (marker1, marker2, marker3).pick.last

[11:44] <sortiz> \o timotimo

[11:45] <notandinus> so i have this wordsearch project and want to put this word-search function in it's own module

[11:46] <El_Che> more fun to pick at random

[11:46] <notandinus> should i put it under ProjectName::wordsearch or just wordsearch ?

[11:51] <notandinus> hmm nvm ^, i was confused with module structure

[11:56] <notandinus> Missing serialize REPR function for REPR MVMContext (BOOTContext)

[11:56] <notandinus>  i get this ^ at line 6, which is "use WordSearch"

[11:57] <lizmat> notandinus: is this on a recent Rakudo ?

[11:57] <tellable6> 2021-01-16T00:22:41Z #raku <tony-o> lizmat https://deathbyperl6.com/fez-zef-a-raku-ecosystem-and-auth/

[11:57] <notandinus> WordSearch (lib/WordSearch.rakumod)

[11:57] <notandinus> lizmat:  tihs is on Raku 2020.11

[11:57] <notandinus> 2020.10, sorry

[11:58] <lizmat> hmmm... I seem to recall nine fixing some issues with precomp that could be related to this since then

[11:58] <notandinus> i see, is upgrading the only fix?

[11:59] <lizmat> I'm not saying upgrading would fix it, but it could  

[11:59] <notandinus> gives the same error after removing .precomp

[11:59] <notandinus> i see, i'll try upgrading then

[12:00] <notandinus> can i upgrade with: rstar fetch && rstar install  ?

[12:00] <timotimo> you can often get that error to go away by resetting $! with Nil at the end of the mainline

[12:00] <lizmat> yes, please, if it still errors, then we may have a system issue worthy of a ticket

[12:00] <timotimo> which fwiw i think we could totally do for you automatically?

[12:00] <lizmat> notandinus: could you try timotimo's suggestion first  :-)

[12:00] <notandinus> timotimo: by mainline you mean the module file?

[12:01] <timotimo> yeah, just at the end of the file probably

[12:03] <notandinus> hmm timotimo that didn't work but something else worked

[12:03] <notandinus> i had this module Neighbors (lib/Neighbors.rakumod)

[12:03] <notandinus> WordSearch had this line (use Neighbors)

[12:04] <notandinus> moving all Neighbors.rakumod functions to WordSearch file and removing that line made it work

[12:04] *** pecastro joined
[12:04] <timotimo> it's possible that the fix needs to go into Neighbors instead

[12:04] <timotimo> the $! = Nil one

[12:05] <notandinus> it was Foo.raku -> (use WordSearch -> (use Neighbors)), it's now Foo.raku -> (use WordSearch)

[12:05] <notandinus> timotimo: i put it in both files

[12:05] <notandinus> ok i tried putting it only in Neighbors and the error didnt go away

[12:06] <notandinus> btw what I'm doing is totally correct right? i can import Neighbors from WordSearch right?

[12:07] <notandinus> looks like rakudo star has not released the latest release, it's still at 2020.10

[12:08] <timotimo> yeah rakudo star is on a looser schedule compared to rakudo

[12:12] *** sjm_uk left
[12:14] <notandinus> so should i use try using rakubrew? 

[12:17] <timotimo> whichever way of installing raku itself you prefer. there's also packages for a couple of distros, there's docker containers, there's even experimental AppImage

[12:17] <timotimo> also have a look at LoneStar

[12:18] <timotimo> oh i think lonestar wasn't the one i was thinking of

[12:18] <El_Che> notandinus: what os do you run?

[12:18] <notandinus> openbsd 

[12:19] <notandinus> ports has 2 year old raku

[12:20] <notandinus> i'm currently installig App::Rakubrew, i'll see if it works

[12:21] <notandinus> timotimo: can you link me to lonestar? i didnt find anything related to raku while searching

[12:21] <timotimo> github.com/tyil/lonestar

[12:26] <notandinus> timotimo:  it says its a bash script to install the rakudo star distribution

[12:26] <notandinus> but the star distribution is at 2020.10

[12:26] <notandinus> i already have the star distribution

[12:27] <timotimo> yeah i thought it was something else

[12:28] <notandinus> hmm looks like rakubrew doesn't build it

[12:29] <notandinus> it says, no precomp release available for my system

[12:32] <notandinus> hmm it has build option, i'm trying to build 2020.12

[12:33] <El_Che> notandinus: I use a small bash script to build relocatable linux builds, it should work on openbsd: https://github.com/nxadm/rakudo-pkg/blob/master/docker/create-relocatable-build

[12:34] <El_Che> (comment out the cp commands because it copies files from the repo)

[12:35] <El_Che> ( I call it with /create-relocatable-build $RAKUDO_VERSION $ZEF_VERSION 64)

[12:36] *** xelxebar left
[12:37] *** xelxebar joined
[12:44] <notandinus>  i see, i'll check it out

[12:44] <notandinus> also looks like pkgsrc has 2020.12, i'll try building that way first

[12:54] *** sjm_uk joined
[13:01] *** sortiz left
[13:08] *** MasterDuke joined
[13:42] *** MasterDuke left
[13:57] *** maggotbrain left
[13:58] *** maggotbrain joined
[14:01] *** sena_kun joined
[14:01] *** oneeggeach joined
[14:02] *** oneeggeach left
[14:16] *** JRaspass left
[14:20] *** jess joined
[14:39] *** lucasb joined
[14:46] *** wamba left
[14:56] *** domidumont joined
[14:56] *** sjm_uk left
[15:04] *** isacl___ left
[15:05] *** isacl___ joined
[15:08] *** wamba joined
[15:12] *** sena_kun left
[15:12] *** sena_kun joined
[15:15] *** sjm_uk joined
[15:27] *** JRaspass joined
[15:30] *** Altai-man joined
[15:32] *** sena_kun left
[15:39] *** guifa joined
[15:39] <guifa> o/

[15:39] <tellable6> 2021-01-16T07:00:00Z #raku <jmerelo> guifa you have to record the voice. During the presentation, you can answer questions

[15:43] *** guifa left
[15:49] *** sena_kun joined
[15:56] *** parabolize joined
[16:29] <notandinus> so i wasnt able to build the latest raku, will try again tomorrow

[16:29] <notandinus> but i tested it with 2018.12 (from ports) and it gave the same error

[16:29] <notandinus> is what i'm doing supported?

[16:34] *** sena_kun left
[16:38] *** dogbert17 joined
[16:56] <Geth> ¦ ecosystem/finanalyst-patch-2: c1bbbc1531 | (Richard Hainsworth)++ (committed using GitHub Web editor) | META.list

[16:56] <Geth> ¦ ecosystem/finanalyst-patch-2: Add RakuConfig to ecosystem

[16:56] <Geth> ¦ ecosystem/finanalyst-patch-2: 

[16:56] <Geth> ¦ ecosystem/finanalyst-patch-2: https://github.com/finanalyst/raku-config

[16:56] <Geth> ¦ ecosystem/finanalyst-patch-2: review: https://github.com/Raku/ecosystem/commit/c1bbbc1531

[16:57] <Geth> ¦ ecosystem: finanalyst++ created pull request #576: Add RakuConfig to ecosystem

[16:57] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/576

[17:10] *** PimDaniel joined
[17:18] *** PimDaniel left
[17:34] *** aindilis left
[17:38] *** notagoodidea joined
[17:38] *** aindilis joined
[17:38] <xinming> m: B0756KCKFN

[17:38] <camelia> rakudo-moar 281d9f3ca: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    B0756KCKFN used at line 1␤␤»

[17:38] <xinming> oops

[17:39] <xinming> m: sub t (*@a) { @ = |@a; }; my $t = t(1,2); t(3,4); $t.raku.say;

[17:39] <camelia> rakudo-moar 281d9f3ca: OUTPUT: «$[3, 4]␤»

[17:39] <notagoodidea> I am looking for ressources to use to catch heredocs strings and use them as a template if it is possible?

[17:39] <timotimo> heredoc strings are like string literals, you'd directly assign them

[17:39] <notagoodidea> I remeber seeing a qq/to/HTML doing something similar but I can't remember where.

[17:39] <xinming> Today, This subtle bug bit me quite hard. :-)

[17:40] <timotimo> qq:to/ENDOFTEXT/;

[17:40] <timotimo> qq will give you interpolation like double quoted strings whereas q will give you the same as 'blah'

[17:40] <timotimo> in terms of what $blah and \t will do

[17:40] <notagoodidea> oh, ok. I must have blurry memories.

[17:42] <notagoodidea> Ok, I found what I tought it was my bad.

[17:43] <notagoodidea> https://www.perl.com/article/observing-coronavirus-with-raku/ They call using qq/to/HML a built-in templating engine where it is "just" the interpolation.

[17:52] <timotimo> close enough :) :)

[17:57] <notagoodidea> Yep :)

[17:57] <notagoodidea> I remerbered it as a slang or a way to meddle with qq string :)

[18:01] *** finsternis joined
[18:21] *** sjm_uk left
[18:31] *** PimDaniel joined
[18:32] <PimDaniel> Hi

[18:32] <notandinus> hello PimDaniel o/

[18:33] <PimDaniel> my $str = 'interview' ; says $str./ ^inter //; Is it ok?

[18:35] <notagoodidea> You want to match against? You can use the smartmatch operator : ~~

[18:35] <notagoodidea> m: my $str = 'interview'; say $str ~~ /^inter/;

[18:35] <camelia> rakudo-moar 281d9f3ca: OUTPUT: «｢inter｣␤»

[18:35] <notagoodidea> m: my $str = 'interview'; say $str ~~ /^inter.*/;

[18:35] <camelia> rakudo-moar 281d9f3ca: OUTPUT: «｢interview｣␤»

[18:36] <PimDaniel> Thank's camelia but  want to substitute. say $str ~~ /^inter//; ??

[18:37] <timotimo> m: $_ = "interview"; s/^inter//; say $_

[18:37] <camelia> rakudo-moar 281d9f3ca: OUTPUT: «view␤»

[18:37] <notandinus> PimDaniel: use s/

[18:37] <notagoodidea> You can use `$foo ~~ s/lalal/bar/` The form s// is for substitution.

[18:37] <notagoodidea> s///

[18:38] <PimDaniel> true i'v forgotten the 's' preceeding. 

[18:38] <notandinus> https://docs.raku.org/syntax/s$SOLIDUS%20$SOLIDUS%20$SOLIDUS

[18:39] <notagoodidea> There is also the .subst methods but it won't do it in-place.

[18:39] <notandinus> and you could also use .match to match and .replace-with to replace the match

[18:39] <PimDaniel> It's not fundamently different from Perl5.

[18:40] <notandinus> m: say "interview".match("inter").replace-with("")

[18:40] <camelia> rakudo-moar 281d9f3ca: OUTPUT: «view␤»

[18:40] <PimDaniel> Does it behave like if the flax x should be enable by default?

[18:40] <notandinus> what do you mean by 'flax x' ?

[18:42] *** notagoodidea left
[18:42] <PimDaniel> notandinus : In the same idea probably use substr which should give better perfs on huge texte searches into loops for example.

[18:44] <PimDaniel> Problably wrong in this case until we have an anchor.

[18:45] <PimDaniel> Hum, sorry : i must go! Thank you very mutch!

[18:45] <perry> m: my $str = q@<^<()(?R){2}>\z|\1\Q^<()(?R){2}>\z|\1\Q>@; say $str ~~ /^<()(?R){2}>\z|\1\Q^<()(?R){2}>\z|\1\Q/;

[18:45] <camelia> rakudo-moar 281d9f3ca: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse regex; couldn't find final '/'␤at <tmp>:1␤------> 3Q^<()(?R){2}>\z|\1\Q>@; say $str ~~ /^<(7⏏5)(?R){2}>\z|\1\Q^<()(?R){2}>\z|\1\Q/;␤    expecting any of:␤        infix stop…»

[18:45] <perry> Oops. Meant to do that in PMs.

[18:53] <PimDaniel> notandinus : sorry : *flag //x

[18:57] *** PimDaniel left
[19:09] *** dataangel left
[19:12] *** b2gills left
[19:12] *** moon-child joined
[19:12] *** aindilis left
[19:12] *** leah2 left
[19:12] *** rba left
[19:12] *** tinita left
[19:13] *** tinita joined
[19:13] *** rba joined
[19:13] *** JRaspass left
[19:13] *** b2gills joined
[19:13] *** sjm_uk joined
[19:13] *** aindilis joined
[19:13] *** leah2 joined
[19:13] *** earenndil left
[19:13] *** pecastro left
[19:13] *** rindolf left
[19:13] *** nine left
[19:13] *** nine joined
[19:13] *** Benett joined
[19:13] *** rindolf joined
[19:18] *** pecastro joined
[19:31] *** sena_kun joined
[19:32] *** Altai-man left
[19:33] *** dataangel joined
[19:33] *** Sgeo joined
[19:39] *** wamba left
[19:50] *** sjm_uk left
[19:50] *** kini left
[19:54] *** kini joined
[19:54] *** PimDaniel joined
[19:55] *** patrickb joined
[19:56] <patrickb> El_Che: I looked at the shell script of yours. Are you sure it creates a relocatable build? Nowhere in that script is the `--relocatable` option used.

[19:58] <patrickb> notandinus: Can you paste the error you get when building? (gist.github.com or a nopaste service can help)

[19:58] <patrickb> o/

[19:58] *** patrickb left
[20:01] <PimDaniel> Aïe!

[20:05] <PimDaniel> Is there a way to directly report part of a matched constant : say CONTANT.rx/.+(group).+/; ????

[20:07] <PimDaniel> should be match buildin sub : CONSTANT.match.rx/.*(group).*/;

[20:09] *** rindolf left
[20:12] *** moony is now known as zoomy

[20:12] *** zoomy is now known as noomy

[20:14] *** Black_Ribbon joined
[20:14] <PimDaniel> I, Is there a way to enable word jump/insertion/history in raku interpretor to make it more convenient?

[20:17] <timotimo> there's the linenoise module as well as another readline one that you can install with zef, or you can run the repl wrapped inside rlwrap

[20:18] *** b2gills left
[20:18] *** leah2 left
[20:21] *** leah2 joined
[20:24] <PimDaniel> @timotimo : thanks's ! But i would like a complete solution , tab completion, history, etcc.

[20:26] *** wamba joined
[20:27] <timotimo> sounds like maybe the jupyter kernel could be more to your liking

[20:27] *** wamba left
[20:36] <lizmat> .seen mst

[20:36] <tellable6> lizmat, I saw mst 2021-01-04T20:34:24Z in #raku: <mst> nnn/w 409

[20:37] *** b2gills joined
[20:43] <PimDaniel> Is zef able to manage any dependencies?

[20:44] <lizmat> if the dependencies are properly declared in the META6.json file, yes

[20:44] <PimDaniel> Isn't this automatically done?

[20:45] <PimDaniel> My paste : https://pastebin.com/hYSVWZ65

[20:46] *** Geth joined
[20:47] <lizmat> Ah, you mean native dependencies...

[20:47] <lizmat> no, these are not done (yet anyway) by zef

[20:48] <PimDaniel> Well, for start, i just wanted to use a practical interactive raku CLI and now i've forgotten what i wanted to achieve, pffff

[20:50] <PimDaniel> Probably falling back to inline shell would be better. Does anyone know what i must remove when zef crashed but started to install.

[20:51] <PimDaniel> well i'll use -e option : i loose my time!

[20:55] <lizmat> PimDaniel: personally, I have an alias: alias r='raku -e'

[20:56] <lizmat> which allows me to just say:  r 'foo'  in the shell  :-)

[20:57] <PimDaniel> lizmat: ok

[20:57] <lizmat> or small throwaway scripts  to alpha test

[20:58] <PimDaniel> this works :  raku  -e 'my $var = "interview"; say $var;'

[20:59] <PimDaniel> I use to have aliases too : alias ll='ls -ltra --color=auto'

[21:00] <lizmat> actually, my aliases are:

[21:00] <lizmat> alias r='time raku -e'

[21:00] <lizmat> alias rl='raku --ll-exception -e'

[21:00] <lizmat> alias rp='raku --profile -e'

[21:03] <PimDaniel> ok, thank's : i'll copy them : what's the price?

[21:07] *** tib left
[21:09] *** PimDaniel left
[21:14] <RaycatWhoDat> https://raku-musings.com/palindromic-stack.html

[21:14] <RaycatWhoDat> Whoever runs this blog has the date bug

[21:14] <RaycatWhoDat> 2022 instead of 2021

[21:14] <timotimo> oh where does that come from?

[21:15] *** PimDaniel joined
[21:16] <timotimo> it also says "{{COPYRIGHT}}" at the bottom, heh

[21:17] <RaycatWhoDat> I think it was something about how the date formatters do things

[21:17] <RaycatWhoDat> Something about "YYYY" over "yyyy"

[21:19] <PimDaniel> say &[<=].name() => infix:«<=», but is there a way to just obtain :  <= , without matching?

[21:20] <PimDaniel> does .name() applies to any referenced sub? or only to infix?

[21:21] <lizmat> PimDaniel: 0c

[21:23] <PimDaniel> lizmat: what?

[21:25] <lizmat> the price: zero cents  :-)

[21:26] <PimDaniel> Ho sorry : thank's! I took it for the reply to my new question about infix.

[21:26] *** Manifest0 left
[21:29] *** Manifest0 joined
[21:29] <lizmat> ah, to answer your questions

[21:29] <lizmat> .name can be called on any Routine object

[21:31] <lizmat> m: dd &[+].name.substr(7,*-1)    # works for most, I'd say

[21:31] <camelia> rakudo-moar 927fa332c: OUTPUT: «"+"␤»

[21:35] <PimDaniel> lizmat: for those i tested, it does indeed! 

[21:40] *** PimDaniel left
[21:40] *** mowcat joined
[21:41] <gfldex> m: BABEL: Nil; BABEL.HOW.mixin(BABEL, role :: { method super { "secret" }}); BABEL.super;

[21:41] <camelia> rakudo-moar 927fa332c: ( no output )

[21:41] <gfldex> notandinus: ^^^ labels being objects allows us to hide stuff in them. :->

[21:41] <gfldex> m: BABEL: Nil; BABEL.HOW.mixin(BABEL, role :: { method super { "secret" }}); BABEL.super.say;

[21:41] <camelia> rakudo-moar 927fa332c: OUTPUT: «secret␤»

[21:46] *** domidumont left
[21:46] *** PimDaniel joined
[21:47] <PimDaniel> Is this to compact and elegant enought? : https://pastebin.com/4THwJAEH

[21:48] <gfldex> m: BABEL: Nil; BABEL.HOW.mixin(BABEL, role :: { method line { $?LINE }; method file { $?FILE } }); BABEL.&{ .file ~ ':' ~ .line }».say;

[21:48] <camelia> rakudo-moar 927fa332c: OUTPUT: «<tmp>:1␤»

[21:49] <gfldex> notandinus: ^^^ it might even be useful

[21:49] <lizmat> PimDaniel: you could do: die "assertion $x &op.name.substr(7,*-1) $y failed..."

[21:50] <lizmat> PimDaniel: and for ease of use, you could have "assert" take a string for the operator

[21:51] <PimDaniel> lizmat: No no no! The problem is : i need to have variable names to indicate what i'm checking... probablay a caller() solution?

[21:51] <PimDaniel> This is important for me to have variables's names.

[21:52] <lizmat> m: my $a = 42; sub b($b is raw) { dd $b.VAR.name }; b $a

[21:52] <camelia> rakudo-moar 927fa332c: OUTPUT: «"\$a"␤»

[21:52] <PimDaniel> OK! 

[21:52] <PimDaniel> I'm quite new to Raku : didn't know it was so simple!

[21:53] <lizmat> :-)

[21:53] <lizmat> with regards specifying the op as a string

[21:54] <lizmat> m: my $op = "+"; dd ::("&infix:<$op>").name

[21:54] <camelia> rakudo-moar 927fa332c: OUTPUT: «"infix:<+>"␤»

[21:54] <lizmat> this will do a runtime-lookup of the operator name

[21:54] <lizmat> this will be expensive, so YMMV

[21:57] <PimDaniel> Beware i'll have man calls and if it says value variables instead of names : a message like : assertion failed because 3 < 100 is un-usefull at all! I need to have : assertion failed : ($x) = 3 < ($y) 100

[21:57] <PimDaniel> Not sure that you gave me the goot answer!

[21:58] <PimDaniel> need to have names of variable from caller!!!

[22:00] <lizmat> m: my $a = 42; sub b($b is raw) { say $_ ~~ Scalar ?? .name !! $b given $b.VAR }; b $a; b 42

[22:00] <camelia> rakudo-moar 927fa332c: OUTPUT: «$a␤42␤»

[22:00] <lizmat> that's the name of the caller, no ?

[22:00] <gfldex> PimDaniel: see: https://gfldex.wordpress.com/2020/12/01/nomen-est-omen/

[22:01] <PimDaniel> lizmat: YES! sorry I must try before to deny you!

[22:01] <lizmat> PimDaniel: no worries, just wanted to make sure we were on the same page

[22:01] <PimDaniel> gfldex: thank's!

[22:05] *** sena_kun left
[22:12] *** PimDaniel left
[22:13] *** PimDaniel joined
[22:14] *** moon-child left
[22:18] *** PimDaniel left
[22:18] *** PimDaniel joined
[22:27] *** moon-child joined
[22:29] *** PimDaniel left
[22:31] *** PimDaniel joined
[22:37] *** Hexeratops joined
[22:37] *** Hexeratops left
[22:40] *** oneeggeach joined
[22:45] <PimDaniel> I'm coming back!

[22:45] *** moon-child left
[22:46] <PimDaniel> It does not work because my variable are numbers : not string!

[22:46] <PimDaniel> But i need numbers, and i do not want to pass strings to the sub!

[22:47] <lizmat> m: my $a = 42; sub b($b is raw) { say $_ ~~ Scalar ?? .name !! $b given $b.VAR }; b $a; b 42   # that seems to work ?

[22:47] <camelia> rakudo-moar 927fa332c: OUTPUT: «$a␤42␤»

[22:48] <PimDaniel> lizmat: i do understand anymore at all!

[22:49] <PimDaniel> what has $_ to do with that?

[22:49] <timotimo> "given" sets $_ for you

[22:49] <lizmat> that's set by the "given $b.VAR

[22:49] <lizmat> so you don't have to repeat that

[22:50] <lizmat> m: my $a = 42; sub b($b is raw) { say $b.VAR ~~ Scalar ?? $b.VAR.name !! $b }; b $a; b 42   # version without $_ or given

[22:50] <camelia> rakudo-moar 927fa332c: OUTPUT: «$a␤42␤»

[22:50] <PimDaniel> hooo ok i think i see!

[22:50] <PimDaniel> perl5 was orrible in presentation : you make perl6 more horrible!

[22:51] <PimDaniel> Sorry but a program MUST be understook for people who read you!

[22:51] *** moon-child joined
[22:51] <lizmat> sorry if I was using too advanced features  :-)

[22:51] *** moon-child left
[22:51] <lizmat> so is the version without $_ more understandable ?

[22:51] <PimDaniel> for me newbie : yess

[22:52] <lizmat> good  :-)

[22:52] *** moon-child joined
[22:52] <lizmat> note to self: write simpler examples  :-)

[22:53] *** moon-child left
[22:54] <PimDaniel> ok i think i need to work again! i did not understand given in fact!

[22:54] <PimDaniel> what are ?? and !! ?

[22:54] <timotimo> it's like ? : in other languages

[22:55] <PimDaniel> There are too many things i do not know in the exemple and it's why i don't understand.

[22:56] * lizmat is off to catch some shuteye

[22:56] *** oneeggeach left
[22:59] <timotimo> shoe-tie

[23:00] *** wamba joined
[23:03] <PimDaniel> this works : my $varname;my Int $afdsl = 42; sub b($b is raw) { $varname=$b.VAR.name }; b $afdsl; say $varname, even if afdsl is typed Int, ok?

[23:04] <PimDaniel> but in my script it complains with : No such method 'name' for invocant of type 'Int'.  Did you mean any of ...

[23:05] <lizmat> did you bind to the variable by any chance?

[23:05] <PimDaniel> bind?

[23:05] <lizmat> ok, so you didn't

[23:06] <PimDaniel> I'm French, sorry!

[23:06] <lizmat> no worries

[23:06] <PimDaniel> bind : atteindre

[23:06] <lizmat> m: my $a := 42; sub b($b is raw) { say $b.VAR ~~ Scalar ?? $b.VAR.name !! $b }; b $a; b 42 

[23:06] <camelia> rakudo-moar 927fa332c: OUTPUT: «42␤42␤»

[23:06] <lizmat> version with binding ^^

[23:06] <lizmat> := instead of =

[23:07] <lizmat> otherwise I have no idea why it doesn't work in your script

[23:07] <lizmat> will backlog tomorrow

[23:07] <lizmat> really sleep&

[23:07] <PimDaniel> You'r true! See you tomorrow.

[23:08] <PimDaniel> Thank's for your help!

[23:08] *** notagoodidea joined
[23:08] *** PimDaniel left
[23:09] *** moon-child joined
[23:09] <notagoodidea> Is it normal that "file".IO.changed does not provide the DateTime in the right timezone?

[23:09] <timotimo> does the filesystem save the timezone along with the date?

[23:10] <notagoodidea> ie, I created a file at 00:10, and ls reports it correctly at 00:10.

[23:10] <timotimo> otherwise i would expect it to use $*TZ i guess?

[23:10] <notagoodidea> But in raku, I got 23:10, I am at GMT+1

[23:10] <timotimo> m: dd "/".IO.changed

[23:10] <camelia> rakudo-moar 927fa332c: OUTPUT: «Instant.from-posix(<1178447450309/764>)␤»

[23:10] <timotimo> m: dd "/".IO.changed.DateTime

[23:10] <camelia> rakudo-moar 927fa332c: OUTPUT: «DateTime.new(2018,11,17,16,1,24.697644)␤»

[23:11] <timotimo> m: say qx,ls -l /,

[23:11] <camelia> rakudo-moar 927fa332c: OUTPUT: «total 0␤drwxr-xr-x   1 root root   1788 Dec 20 11:00 bin␤drwxr-xr-x   1 root root   1214 Sep  4 17:06 boot␤drwxr-xr-x  17 root root   3700 Jan 11 11:00 dev␤drwxr-xr-x   1 root root   3936 Jan 15 11:00 etc␤drwxr-xr-x   1 root root     72 Mar …»

[23:12] <timotimo> *shrug*

[23:12] <timotimo> gotta run

[23:13] <notagoodidea> $*TZ is at 3600 so UTC+1, weird

[23:15] <notagoodidea> m: say "/bin/".IO.changed.DateTime.timezone;

[23:15] <camelia> rakudo-moar 927fa332c: OUTPUT: «0␤»

[23:15] <notagoodidea> m: say $*TZ;

[23:15] <camelia> rakudo-moar 927fa332c: OUTPUT: «3600␤»

[23:20] *** wamba left
[23:34] <notagoodidea> m: dd "/bin".IO.changed.DateTime

[23:34] <camelia> rakudo-moar 927fa332c: OUTPUT: «DateTime.new(2020,12,20,10,0,23.154922)␤»

[23:34] <notagoodidea> m: say qx,ls -l /bin,

[23:34] <camelia> rakudo-moar 927fa332c: OUTPUT: «total 2132␤lrwxrwxrwx 1 root root      13 May 16  2020 arch -> /usr/bin/arch␤lrwxrwxrwx 1 root root      21 Jun  8  2020 awk -> /etc/alternatives/awk␤lrwxrwxrwx 1 root root      17 May 16  2020 basename -> /usr/bin/basename␤-rwxr-xr-x 1 root r…»

[23:36] *** kini left
[23:37] *** kini joined
