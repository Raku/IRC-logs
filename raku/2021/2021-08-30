[00:02] *** reportable6 left
[00:02] *** reportable6 joined
[00:44] <dwarring> LibXML's t/11memory.t seems to suddenly running, much better, just since since the 2021.08 release and blead

[00:44] <tellable6> 2021-08-05T00:43:49Z #raku <Xliff> dwarring Thanks!

[00:44] <dwarring> test is disabled by default and needs to have environment variables set to run it:

[00:45] <dwarring> (export AUTHOR_TESTING=1 MEMORY_TEST=1; prove -e'raku -I.' -v t/11memory.t)

[00:45] <dwarring> results...

[00:46] <dwarring> on 2021.08: Total Mem Increase:64116 kB, Avg-Objects:873, Lost:719 Objects (0.25%)

[00:47] <dwarring> on  v2021.08-8-g5492452b2: Total Mem Increase:5612 kB, Avg-Objects:101, Lost:14 Objects (0.00%)

[00:48] <dwarring> The count is of LibXML native objects, which get freed when DESTROY is called

[00:49] <dwarring> call to DESTROY isn't being missing and is tending to get called earlier

[00:49] <dwarring> leading to flatter memory usage and fewer live objects

[00:50] *** monkey_ left
[00:52] <dwarring> test was ported from Perl, btw

[00:54] *** leah2 left
[00:54] *** frost joined
[00:57] <kybr> if i have the name of a method as a string in $method, how might i call that method on $foo ?

[00:57] *** pisa joined
[00:58] <dwarring> $foo."$method"()

[00:58] <pisa> hi, is there some advice for raku binding for c++ template ? 

[00:58] <kybr> dwarring: wow. thanks

[01:04] <dwarring> I haven't used the c++ bindings myself

[01:04] <dwarring> I do know you want to use the CPPStruct representation

[01:05] <dwarring> class C is repr('CPPStruct') {...}

[01:05] <dwarring> some tests in https://github.com/rakudo/rakudo/blob/master/t/04-nativecall/13-cpp-mangling.t

[01:06] <dwarring> That should automatically mangle Raku method names to C++ symbols

[01:12] <pisa> that test just for CPPStruct repr, but no template

[01:21] *** leah2 joined
[01:28] * dwarring not finding much on https://sourcegraph.com/search?q=context:global+lang:raku+CPPStruct&patternType=literal

[01:29] <dwarring> @pisa not sure

[01:39] *** pisa left
[01:44] *** Xliff left
[01:45] *** dominix joined
[01:46] <dominix> hi everyone, quick question, what do you guy have as newsfeed regarding Rakulang ? 

[01:46] <tellable6> 2020-09-28T01:49:13Z #raku <tbrowder> dominix: what kind of package sys does clear linux use? is it fedora or debian based?

[01:46] <tellable6> 2020-09-28T01:56:01Z #raku <tbrowder> dominix: never mind. i see the problem i would have with clear linux. i, being retired, would have the luxury of telling my client "no" to clear linux, but he's paying for that agony.

[01:46] <tellable6> 2020-09-28T01:57:37Z #raku <tbrowder> dominix: but your client wants you to use raku? maybe client will pay for a clear linux raku pkg.

[01:46] <tellable6> 2020-09-28T08:08:22Z #raku <El_Che> dominix It looks like Clear Linux uses flatpack as pkg format. Timotimo just release a rakudo release oin that format

[01:46] <tellable6> 2020-09-28T08:15:54Z #raku <El_Che> dominix: nevr mind about the flatpack. However precompiled non-pkg release can be found here: https://github.com/nxadm/rakudo-pkg/releases/tag/v2020.09, just untar-gzip this: rakudo-pkg-mooarvm-2020.09-01-linux-x86_64.tar.gz

[01:49] <kybr> how about if i wanted to get a reference to the function/method with the string name in $function?

[01:50] <timo> that depends on how you can reach it. it mayb e enough to just get my $func-obj = ::($function)

[01:54] *** dominix left
[01:55] *** dominix joined
[02:10] *** pjlsergeant left
[02:12] *** pjlsergeant joined
[02:54] *** pjlsergeant left
[02:56] *** zostay left
[02:56] *** pjlsergeant joined
[02:57] *** zostay joined
[03:18] *** squashable6 left
[04:08] *** dominix left
[04:10] *** neshpion left
[04:40] *** lucerne left
[04:41] *** elcaro left
[04:41] *** ingy left
[04:41] *** Juerd left
[04:41] *** kawaii_ left
[04:41] *** jast left
[04:41] *** rypervenche left
[04:41] *** skaji left
[04:41] *** ens left
[04:41] *** spacekookie left
[04:41] *** kawaii_ joined
[04:41] *** ens joined
[04:41] *** elcaro joined
[04:41] *** rypervenche joined
[04:41] *** skaji joined
[04:41] *** spacekookie joined
[04:41] *** rypervenche left
[04:41] *** rypervenche joined
[04:41] *** Juerd joined
[04:43] *** ingy joined
[04:45] *** Tirifto left
[04:45] *** pierrot left
[04:45] *** juanfra__ left
[04:45] *** HobGoblin left
[04:45] *** ilogger2 left
[04:45] *** gabiruh left
[04:45] *** jcallen left
[04:45] *** dg left
[04:45] *** wanko left
[04:45] *** jercos left
[04:45] *** polettix_ left
[04:45] *** tonyo_ left
[04:45] *** BinGOs left
[04:45] *** gcd left
[04:45] *** goblin joined
[04:45] *** wanko joined
[04:45] *** dg joined
[04:45] *** gcd joined
[04:45] *** jcallen joined
[04:45] *** bingos joined
[04:45] *** polettix joined
[04:45] *** jercos joined
[04:45] *** bingos left
[04:45] *** bingos joined
[04:45] *** ilogger2 joined
[04:45] *** Tirifto joined
[04:46] *** pierrot joined
[04:46] *** gabiruh joined
[04:50] *** tonyo joined
[04:53] *** raks_rocks joined
[04:54] *** raks_rocks left
[05:12] *** dwarring left
[05:24] *** keutoi joined
[05:30] *** squashable6 joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:16] *** nebuchadnezzar joined
[06:34] *** Sgeo left
[06:37] *** ufobat joined
[06:44] *** clarjon_1 is now known as clarjon1

[07:09] <tib> hello

[07:10] <tib> https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-speaker-annoucement-4n8f

[07:11] <tib> I wanted to ping jj merelo here but I don't know if he is either not connected or if I don't know his nick

[07:44] *** linkable6 left
[07:44] *** evalable6 left
[07:46] *** linkable6 joined
[07:56] <El_Che_> tib: it's jmerelo or jj iirc

[07:57] <moon-child> jmerelo has not been seen here in a few months

[07:59] <tib> ok thx (I contacted him by email)

[07:59] <El_Che_> or twitter could be an option

[08:04] *** lichtkind joined
[08:04] *** jjido joined
[08:15] *** bingos is now known as BinGOs

[08:28] *** jjido left
[08:45] *** frost left
[08:47] *** evalable6 joined
[09:00] *** jjido joined
[09:09] *** patrickb joined
[09:36] *** jjido left
[09:55] *** patrickb left
[10:11] *** frost joined
[10:41] <lizmat> Am I going crazy or is Twitter all of a sudden equating #raku with Camelia?  https://twitter.com/search?q=%23raku&src=typed_query&f=live

[10:46] <keutoi> Most of the uses of #raku seem to be either pottery or rakuten

[10:50] <lizmat> yes, and that's fine, but *I* only see tweets with Camelia in them now  :-)

[10:50] <El_Che_> that's why someone on twitter is consistently adding #rakulang to all conversations :P

[10:51] <El_Che_> She shall not be named

[10:51] *** patrickb joined
[10:52] <lizmat> https://twitter.com/search?q=%23raku%20-camelia&src=typed_query&f=live   # only #raku

[10:53] <lizmat> FWIW, I love pottery in general

[10:53] <lizmat> and Raku pottery even more so

[10:54] <lizmat> having lived with a potter for 5 years made me appreciate the inspiration and sweat that goes into making pottery

[10:55] <lizmat> not unlike the Raku programming language, actually  :-)

[10:56] <El_Che_> but with less drama :P

[10:56] *** rakuUser joined
[11:04] *** nebuchadnezzar left
[11:04] *** nebuchad` joined
[11:09] *** nebuchad` is now known as nebuchadnezzar

[11:24] *** sena_kun joined
[11:28] *** markus_ joined
[11:46] *** jjido joined
[11:47] *** patrickb left
[12:02] *** reportable6 left
[12:07] *** keutoi left
[12:10] *** xnhp0320 joined
[12:11] *** xnhp0320 left
[12:28] *** patrickbkr joined
[12:48] *** frost left
[12:49] <Geth> Â¦ problem-solving: lizmat assigned to codesections Issue Moving distributions between distribution backends "duplicates" them https://github.com/Raku/problem-solving/issues/295

[12:50] <Geth> Â¦ problem-solving: lizmat unassigned from codesections Issue Moving distributions between distribution backends "duplicates" them https://github.com/Raku/problem-solving/issues/295

[12:51] *** xinming left
[12:53] *** xinming joined
[13:00] *** jmcgnh left
[13:03] *** reportable6 joined
[13:04] <raydiak> wrt https://stackoverflow.com/questions/68761964/raku-pop-order-of-execution fwiw I don't agree with the existing behavior. imo, arguments should be evaluated in source order regardless of R metaop

[13:10] *** jmcgnh joined
[13:12] <raydiak> lizmat: wrt https://rakudoweekly.files.wordpress.com/2019/11/dsc_5847-1.jpg maybe after the 15th iteration in 2 years its time to change the default post image? even though I do understand and identify with the symbolism :)

[13:13] <lizmat> raydiak: yeah, was thinking about that... haven't been able to come up with a suitable replacement yet

[13:16] <raydiak> no great idea here either, though off the top of my head I think of a bunch of people with ores rowing a boat

[13:17] <raydiak> not exciting enough though

[13:19] <raydiak> people rowing a boat over the edge of a waterfall is more exciting, but the connotations are a bit negative

[13:20] <tib> Announcing Stephane Gigandet at the ephemeral miniconf: https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-speaker-annoucement-314d

[13:30] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/08/30/2021-35-superseding/

[13:31] <tib> lizmat ++

[13:34] <raydiak> one real idea, perhaps something similar to https://thisadventurelife.com/wp-content/uploads/2018/08/para.png would be appropriate and resonate with our predominantly european community?

[13:34] <raydiak> lizmat++ thank you as always for the weekly

[13:35] <lizmat> raydiak: that does not convey the feeling of "we're all in this together"

[13:35] <lizmat> at least not to me

[13:35] <raydiak> hm. does but doesn't. I do see what you're saying

[13:36] *** Sgeo joined
[13:37] <raydiak> they're all doing the same thing in the same direction, but independently. whether that's more appropriate or less, is a matter of opinion :)

[13:38] <raydiak> anyway, that's all I had for now. been up all night. good * lizmat and #raku o/

[13:39] <lizmat> good * to you too, raydiak 

[14:11] *** jjido left
[14:14] *** b2gills left
[14:14] *** b2gills joined
[15:14] *** evalable6 left
[15:14] *** linkable6 left
[15:15] *** linkable6 joined
[15:15] <El_Che_> tib: does ephemeral means the talks will not be recorded?

[15:16] *** evalable6 joined
[15:16] <tib> no El_Che_ it means that I do not plan to do another miniconf next year :)

[15:17] <El_Che_> :)

[15:17] *** El_Che_ is now known as El_Che

[15:19] *** jjido joined
[15:58] *** tejr left
[16:00] *** tejr joined
[16:03] *** markus_ left
[16:26] *** patrickbkr left
[16:53] *** markus_ joined
[16:55] *** neshpion joined
[16:59] *** ufobat_ joined
[17:02] *** ufobat left
[17:32] *** lucerne joined
[17:57] *** sena_kun left
[18:02] *** reportable6 left
[18:06] *** qwert123 joined
[18:16] *** jjido left
[18:25] *** jjido joined
[18:33] *** ufobat_ left
[19:02] *** qwert123 left
[19:04] <kybr> i'd like to do something like this:

[19:04] <kybr> m: my $op = "+"; infix:<$op>(2, 3).say;

[19:04] <camelia> rakudo-moar 5492452b2: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Undeclared routine:â¤    infix:<$op> used at line 1. Did you mean 'infix:<**>', 'infix:<does>', 'infix:<eq>', 'infix:<^..^>', 'infix:<gt>'?â¤â¤Â»

[19:05] *** reportable6 joined
[19:07] <Geth> Â¦ doc: 41502bb6a7 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[19:07] <Geth> Â¦ doc: Typo fix

[19:07] <Geth> Â¦ doc: 

[19:07] <Geth> Â¦ doc: Adds a missing `C<>` wrapper to inline code

[19:07] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/41502bb6a7

[19:07] <linkable6> Link: https://docs.raku.org/language/syntax

[19:08] <moon-child> m: my $op = "+"; infix:Â«$opÂ»(2, 3).say

[19:08] <camelia> rakudo-moar 5492452b2: OUTPUT: Â«Use of uninitialized value $op of type Any in string context.â¤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.â¤  in code  at <tmp> line 1â¤5===SORRY!5=== Error while compiling <tmp>â¤Undeclared routiâ¦Â»

[19:08] <moon-child> ^ bad error message

[19:09] <lizmat> m: my $op = "+"; say ::("&infix:<$op>")(4,5)   # kybr moon-child 

[19:09] <camelia> rakudo-moar 5492452b2: OUTPUT: Â«9â¤Â»

[19:11] <moon-child> lizmat: any idea about the error message there?

[19:12] <kybr> lizmat: thank you. i need to look into what ::() does. yesterday i had a question about how to get a reference to a built-in function/method given its name as a string.

[19:12] <lizmat> m: BEGIN my $op = "+"; infix:Â«$opÂ»(2, 3).say

[19:12] <camelia> rakudo-moar 5492452b2: OUTPUT: Â«5â¤Â»

[19:12] <lizmat> moon-child: apparently the $op is interpolated at compile time if you write it like that

[19:13] <lizmat> so that's before the "+" assignment, hence the error message

[19:13] <moon-child> ahh, I see

[19:14] <moon-child> oh, right, of course

[19:23] *** neshpion left
[19:23] *** neshpion joined
[19:44] *** patrickb joined
[19:54] *** patrickb left
[19:57] *** xinming left
[19:57] *** xinming joined
[19:57] *** discord-raku-bot left
[19:57] *** discord-raku-bot joined
[20:20] <gfldex> lizmat: are we all in this together like this? https://i.redd.it/k4b07zoc69l41.jpg

[20:41] <japhb> I remember when they used to summer near where I lived.  It was really cool looking at a grove, not seeing *anything* because they were all pretending to be leaves, and then *foom* suddenly the air is full of butterflies.

[20:44] <El_Che> I had that experience in Australia

[20:44] <El_Che> wonderful

[20:49] *** phogg left
[21:05] *** phogg joined
[21:16] *** jjido left
[21:39] *** tejr left
[21:40] *** tejr joined
[22:07] *** juanfra__ joined
[22:16] <lizmat> gfldex El_Che that's indeed a nice picture!

[22:27] <kybr> if ::("&infix:Â«$opÂ»") only interpolates at compile time and ::("&infix:<$op>") seems to fail on $op like < or >=, then what form might i turn to?

[22:27] <kybr> my $op = "<"; say ::("&infix:<$op>")(4,5)

[22:27] <kybr> m: my $op = "<"; say ::("&infix:<$op>")(4,5)

[22:27] <camelia> rakudo-moar 5492452b2: OUTPUT: Â«No such symbol '&infix:<<>'â¤  in block <unit> at <tmp> line 1â¤â¤Â»

[22:28] <gfldex> m: my $op = "<"; say ::("&infix:Â«$opÂ»")(4,5)

[22:28] <camelia> rakudo-moar 5492452b2: OUTPUT: Â«Use of uninitialized value $op of type Any in string context.â¤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.â¤Trueâ¤  in code  at <tmp> line 1â¤Â»

[22:28] <kybr> m: my $op = "<"; say ::("&infix:['$op']")(4,5)

[22:29] <camelia> rakudo-moar 5492452b2: OUTPUT: Â«No such symbol '&infix:['<']'â¤  in block <unit> at <tmp> line 1â¤â¤Â»

[22:30] <moon-child> kybr: ::("&infix:Â«$opÂ»") doesn't interpolate at compile time; &infix:Â«$opÂ» does

[22:30] <gfldex> m: my $op = "<"; say ::('&infix:Â«' ~ $op ~ 'Â»')(4,5)

[22:30] <camelia> rakudo-moar 5492452b2: OUTPUT: Â«Trueâ¤Â»

[22:30] <moon-child> oh, wait

[22:33] *** dogbert11 left
[22:34] <gfldex> lizmat: the search term was "butterfly swarm"

[22:35] <lizmat> ok, now to see whether I may use it  :-)

[22:50] <tbrowder> .ask tonyo have you seen my recent Data::Dump issue? would you consider a PR for the env var suggestion? or, better, change the api and and the default behavior (with a PR)?

[22:50] <tellable6> tbrowder, I'll pass your message to tonyo_

[22:53] <tbrowder> wow, i see tonyo just took care of 2 issues as i asked him about a new one! what a meeting of interests!

[22:56] <tbrowder> i don't know why jmerelo hasn't been on irc in a long time, but i know he is very busy with his $dayjobS (note the plural)

[22:59] <tbrowder> i wish he  were here to talk about public-facing docs. i still don't like it that documentable doesn't properly consider user desires of alpha sorting of topics on major groups on the Language page.

[23:00] <tbrowder> imho, it's a major design flaw.

[23:01] *** dogbert11 joined
[23:02] <Geth> Â¦ doc/special-chars-in-char-ranges: 9741c66cc2 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[23:02] <Geth> Â¦ doc/special-chars-in-char-ranges: Explain behavior of non-alphanumerics in <[ ]> 

[23:02] <Geth> Â¦ doc/special-chars-in-char-ranges: 

[23:02] <Geth> Â¦ doc/special-chars-in-char-ranges: The docs previously mentioned that you can  use \ to escape characters inside <[  ]> ; this

[23:02] <Geth> Â¦ doc/special-chars-in-char-ranges: commit adds the fact that you don't need to escape most non-alphanumeric characters the way 

[23:02] <Geth> Â¦ doc/special-chars-in-char-ranges: you do in the portion of a regex outside <[ ]> and that you must escape (rather than quote) 

[23:02] <Geth> Â¦ doc/special-chars-in-char-ranges: characters inside <[ ]> for them to have their literal meaning.

[23:02] <Geth> Â¦ doc/special-chars-in-char-ranges: review: https://github.com/Raku/doc/commit/9741c66cc2

[23:03] <Geth> Â¦ doc: codesections++ created pull request #3948: Explain behavior of non-alphanumerics in <[ ]>

[23:03] <Geth> Â¦ doc: review: https://github.com/Raku/doc/pull/3948

[23:14] *** tejr left
[23:15] *** tejr joined
