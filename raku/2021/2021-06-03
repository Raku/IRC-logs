[00:05] *** reportable6 joined
[00:34] *** simcop2387 joined
[00:49] *** b2gills joined
[01:11] *** thundergnat joined
[01:13] <thundergnat> m: https://gist.github.com/thundergnat/77676d999d06fbf8152ec0e25e55ce92

[01:13] <camelia> rakudo-moar f83e55116: OUTPUT: «Cannot call 'shift' on an immutable 'List'␤  in sub expand-tree at <tmp> line 2␤  in sub expand-trees at <tmp> line 11␤  in block <unit> at <tmp> line 15␤␤»

[01:13] <moon-child> Bag bag bag!

[01:14] <moon-child> (sorry)

[01:15] <thundergnat> bisectable6: old=2020.01 new=HEAD  https://gist.github.com/thundergnat/77676d999d06fbf8152ec0e25e55ce92

[01:15] <bisectable6> thundergnat, Bisecting by exit code (old=2020.01 new=f83e551). Old exit code: 0

[01:15] <bisectable6> thundergnat, bisect log: https://gist.github.com/871a38b5f78c7b89d0658135b735dad1

[01:15] <bisectable6> thundergnat, (2020-10-14) https://github.com/rakudo/rakudo/commit/338c7439d2ebd5a1a97ce0a8e77390c74e723a8d

[01:19] <thundergnat> Hmmm. ^^^ that is an (old) regression, but arguably the gist is wrong to begin with. 

[01:19] <thundergnat> It is directly from Rosettacode. https://rosettacode.org/wiki/List_rooted_trees#Raku

[01:20] <thundergnat> If it is wrong, I'll need to update the example on Rosettacode. If it is an unintended regression, it would be nice to get it fixed for next release.

[01:21] <thundergnat> .tell lizmat: https://colabti.org/irclogger/irclogger_log/raku?date=2021-06-03#l5 Any thoughts?

[01:21] <tellable6> thundergnat, I'll pass your message to lizmat

[01:41] *** jmcgnh left
[01:44] *** jmcgnh joined
[01:53] *** jmcgnh left
[02:07] *** jmcgnh joined
[02:54] *** tejr joined
[03:54] *** bloatable6 left
[03:54] *** unicodable6 left
[03:54] *** nativecallable6 left
[03:54] *** notable6 left
[03:54] *** coverable6 left
[03:54] *** reportable6 left
[03:54] *** shareable6 left
[03:54] *** committable6 left
[03:54] *** sourceable6 left
[03:55] *** reportable6 joined
[03:55] *** sourceable6 joined
[03:55] *** bisectable6 joined
[03:55] *** releasable6 joined
[03:56] *** greppable6 joined
[03:56] *** unicodable6 joined
[03:56] *** quotable6 joined
[03:56] *** evalable6 joined
[03:56] *** statisfiable6 joined
[03:56] *** tellable6 joined
[03:56] *** notable6 joined
[03:56] *** coverable6 joined
[03:56] *** benchable6 joined
[03:57] *** linkable6 joined
[03:57] *** nativecallable6 joined
[03:57] *** squashable6 joined
[03:57] *** committable6 joined
[03:57] *** bloatable6 joined
[03:57] *** shareable6 joined
[04:52] *** frost joined
[05:22] *** stoned75 joined
[05:27] *** jmcgnh left
[05:30] *** jmcgnh joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[06:13] *** jcallen joined
[06:56] *** jmcgnh left
[06:59] *** jmcgnh joined
[07:00] *** jmcgnh left
[07:09] *** jmcgnh joined
[07:12] *** jmcgnh left
[07:15] *** jmcgnh joined
[07:24] *** dakkar joined
[07:34] *** holly joined
[07:41] *** jmcgnh left
[07:42] *** bdju joined
[07:42] *** bdju left
[07:42] *** bdju joined
[07:45] *** jmcgnh joined
[08:02] *** jmcgnh left
[08:07] *** jmcgnh joined
[08:19] *** tomasz joined
[08:23] <tomasz> Hi. Why is this producing different results: say ((1..*).grep: *.is-prime)[280] ?

[08:24] <tomasz> Lower indices seem ok, but about this high they give jumpy results. Much higher are very jumpy.

[08:26] *** tomasz left
[08:26] <moon-child> what do you mean by jumpy?

[08:26] <moon-child> If I run that multiple times, I get the same result every time

[08:26] <moon-child> (1823)

[08:26] *** tomasz joined
[08:30] <raydiak> moon-child you may want to repeat that, he quit right before you answered, and re-joined right after

[08:31] *** guer joined
[08:31] <tomasz> yes, please

[08:31] <moon-child> oh, derp

[08:31] <tomasz> or if someone could copy paste repost

[08:31] <moon-child> tomasz: what do you mean by jumpy?

[08:31] <moon-child> If I run that multiple times, I get the same result every time

[08:31] <tomasz> different results

[08:31] <moon-child> (1823)

[08:32] <moon-child> m: say so all(1823 «==« (^1000).map: { (1..*).grep(&is-prime)[280] })

[08:32] <camelia> rakudo-moar f83e55116: OUTPUT: «True␤»

[08:33] <moon-child> what version are you running (raku --version)?

[08:33] <tomasz> > say so all(1823 «==« (^1000).map: { (1..*).grep(&is-prime)[280] })

[08:33] <tomasz> False

[08:34] <tomasz> > say ((1..*).grep: *.is-prime)[300]

[08:34] <tomasz> 2027

[08:34] <tomasz> > say ((1..*).grep: *.is-prime)[300]

[08:34] <tomasz> 2063

[08:34] <tomasz> > say ((1..*).grep: *.is-prime)[300]

[08:34] <tomasz> 2027

[08:34] <holly> I don't want to be rude but there should not be a capital letter search in zef, capital letters should be able to be searched (in the front) as common letters

[08:35] <moon-child> do you get the same result if you replace 1..* with 1..3000?  If so, can you post the result of (1..3000).grep(&is-prime)?

[08:36] <tomasz> > (1..3000).grep(&is-prime)[300]

[08:36] <tomasz> 2003

[08:36] <tomasz> > (1..3000).grep(&is-prime)[300]

[08:36] <tomasz> 2039

[08:36] <holly> So "zef search Hawking" should sometimes be able as 'zef search hawking'

[08:36] <tomasz> > (1..3000).grep(&is-prime)[300]

[08:36] <tomasz> 2017

[08:36] <tomasz> > (1..3000).grep(&is-prime)[300]

[08:36] <tomasz> 2029

[08:36] <dakkar> holly: I agree, `install` must respect capitalisation, `search` should ignore it

[08:37] <raydiak> tomasz: as moon-child asked, what version of rakudo are you running? it's completely repeatable for me too on 2021.05

[08:37] <tomasz> This is Rakudo version 2018.12 built on MoarVM version 2018.12

[08:37] <tomasz> implementing Perl 6.d.

[08:37] <holly> dakkar : as you say

[08:37] <eseyman> dakkar: FTR, this is what dnf does on Fedora-based systems, not sure about apt

[08:37] <moon-child> that version is over a year old, I recommend upgrading it

[08:37] <raydiak> probably some old bug that got fixed in the last 2 1/2 years, then

[08:37] <tomasz> 4.19.0-16-amd64 #1 SMP Debian 4.19.181-1 (2021-03-19) x86_64 GNU/Linux

[08:38] <tomasz> it's the official Debian repo version

[08:38] <tomasz> could it be unpatched there?

[08:38] <moon-child> debian is known to ship out-of-date, buggy software

[08:38] <tadzik> nonsense

[08:38] <tomasz> ok

[08:38] <tadzik> debian stable just doesn't update things after its release, except for security and bugfixes

[08:39] <tadzik> that's its job. It has nothing to do with "out of date buggy software"

[08:39] <moon-child> I don't see how what you said and what I said are inconsistent

[08:39] <tadzik> on my debian I have rakudo 2020.12 available

[08:39] <tomasz> i guess i'll try the docker edition

[08:39] <tomasz> what debian is that?

[08:39] <eseyman> ask for rakudo to be included in debian-packports ?

[08:39] <tadzik> unstable

[08:39] <eseyman> s/pack/back/

[08:40] <tadzik> aka "up-to-date" :>

[08:40] <tadzik> (mostly)

[08:41] <tomasz> i'd rather go for a stable debian than a stable raku

[08:41] *** dakkar left
[08:41] *** dakkar_ joined
[08:41] <raydiak> you may also be interested in https://github.com/nxadm/rakudo-pkg

[08:41] <dakkar_> ugh, work laptop keeps locking up, I hope they'll send me a replacement soon

[08:42] <tomasz> thanks, raydiak

[08:42] <tadzik> "unstable" is a bit of a misnomer, it is perfectly stable (for me). It's just getting updates :P

[08:42] <tadzik> I wouldn't run stable on anything other than a server, it's really an extreme distribution in its own way

[08:43] <tadzik> sort of a declaration that says "I want to freeze time and not be concerned with any developments in the software world for the next few years at least"

[08:43] <tomasz> server is whatever that moves to me

[08:44] <tomasz> yes, sort of correct

[08:44] *** dakkar_ is now known as dakkar

[08:44] <tomasz> im in the retroguard

[08:45] <holly> stable and unstable are fine as they are, stable is just out of date

[08:46] <tomasz> frontline is frontline

[08:47] <tomasz> is there a good image for kvm?

[09:20] <tomasz> raydiak, is that debian repository in rakudo-pkg woring?

[09:20] <tomasz> working

[09:21] *** daxim left
[09:21] *** daxim joined
[09:21] *** ComplYue[m] left
[09:21] <tomasz> i've run that script on a vm but that installation looks somewhat defunct

[09:23] <tomasz> # apt policy perl6

[09:23] <tomasz> perl6:

[09:23] <evalable6> tomasz, rakudo-moar f83e55116: OUTPUT: «»

[09:23] <tomasz>   Installed: (none)

[09:23] <tomasz>   Candidate: 6.d-2

[09:23] <tomasz>   Version table:

[09:23] <tomasz>      6.d-2 500

[09:23] <tomasz>         500 http://deb.debian.org/debian buster/main amd64 Packages

[09:23] <tomasz> what's that?

[09:32] <raydiak> afaik it is actively maintained and fairly widely used. I'm not on debian so it'd be difficult for me to help you troubleshoot, but given that seems to point to the official debian repos, maybe try the name "raku" instead of "perl6"?

[09:33] <tomasz> i got the official docker, this will do

[09:33] <tomasz> raku has the same there

[09:33] <tomasz> i'm not good with repos, but there should be more

[09:34] <eseyman> yeah, there doesn't seem to be anything in https://dl.cloudsmith.io/public/

[09:35] <tomasz> there we go

[09:36] <tomasz> btw, is building all this from sources difficult?

[09:37] <raydiak> I haven't tried for a while, but no, not difficult as I recall

[09:37] <eseyman> the buster package does exist, though

[09:37] <tomasz> where?

[09:38] <eseyman> tomasz: https://cloudsmith.io/~nxadm-pkgs/repos/rakudo-pkg/packages/detail/deb/rakudo-pkg/2021.5.0-01/a=amd64;d=debian%252Fbuster;t=binary/

[09:39] <tomasz> i'll try it

[09:40] <eseyman> I'll ping Claudio via mail to see what's up 

[09:41] <tomasz> it looks fine, but installs in /opt/rakudo-pkg/

[09:41] <lizmat> El_Che ^^

[09:41] <tellable6> 2021-06-03T01:21:39Z #raku <thundergnat> lizmat: https://colabti.org/irclogger/irclogger_log/raku?date=2021-06-03#l5 Any thoughts?

[09:43] <eseyman> tomasz: yes. That's what non-vendor-supplied packages are supposed to do

[09:43] <tomasz> ok

[09:48] <raydiak> tomasz: build instructions for rakudo are at https://github.com/rakudo/rakudo/blob/master/INSTALL.md , basically just git clone, then perl Configure.pl --gen-moar --gen-nqp --backends=moar --prefix=$HOME/raku (or wherever you want to install to) && make install. then make sure it's in your path and you should be good to go. you'll have to install zef by hand too if you go this route, which is just git clone and

[09:48] <raydiak> raku -I. bin/zef install .

[09:48] <raydiak> I use rakubrew personally, but I'm given to understand that this is no longer recommended for some reason

[09:50] <tomasz> maybe i try it in the future when i know the big picture better

[09:52] <tomasz> and what's the dependence of this on Java? (as i found somewhere)

[09:53] <raydiak> there is a JVM backend, though you're generally better off with moar

[09:53] <lizmat> tomasz: there's no dependence on Java, unless you want to use the JVM backend

[09:54] <tomasz> ah, ok, cheers

[09:55] <tomasz> thanks for all the help, i'm now at home both legs

[09:55] <raydiak> you're welcome, we're happy to help :)

[09:57] <tomasz> i'm not sure if my post about /usr/local went through

[09:57] <tomasz> i posted 2 times but it disappeared

[09:57] <tomasz> it's a better location than /opt

[09:57] *** squashable6 left
[09:57] <tomasz> in case someone asks

[09:58] *** squashable6 joined
[09:58] <tomasz> it's already in the path, so not much new wiring for the user

[09:58] <holly> http://github.com/theholyghost2/Game-Adventure <-- for writing old adventure games

[09:59] <holly> many overrides though for low print porting

[10:00] <tomasz> and in case someone is curious, the docker version is slightly behind the git repo: v2021.05 vs 2020.10

[10:01] *** moon-child left
[10:01] *** SmokeMachine left
[10:01] *** charsbar left
[10:01] *** samebchase left
[10:01] *** cognominal left
[10:02] *** Doc_Holliwould joined
[10:04] <tomasz> see you

[10:04] *** tomasz left
[10:11] *** moon-child joined
[10:11] *** SmokeMachine joined
[10:11] *** charsbar joined
[10:11] *** samebchase joined
[10:11] *** cognominal joined
[10:11] *** lgtaube joined
[10:11] *** phogg joined
[10:11] *** DarthGandalf joined
[10:11] *** m6locks joined
[10:11] *** Maylay joined
[10:11] *** jercos joined
[10:11] *** tinita joined
[10:11] *** tobs joined
[10:11] *** leont joined
[10:11] *** perlbot joined
[10:11] *** JRaspass joined
[10:11] *** corwin joined
[10:11] *** polettix joined
[10:13] <holly> Again : http://github.com/theholyghost2/Game-Adventure <-- for writing old adventure games

[10:13] <holly> You can derive everything and I'm going to make some adventure game as this as a depedency. Needs refactoring a bit

[10:14] <Altreus> graphical or text?

[10:14] <holly> it's based on SDL2::Raw

[10:14] <holly> so graphical

[10:14] <Altreus> nice

[10:14] <holly> thx

[10:15] *** phogg left
[10:15] <Altreus> I can't wait to have time to start a thousand tiny projects that I'll never finish

[10:15] <holly> sure Altreus :-)

[10:15] <holly> take it easy

[10:15] <lizmat> still feels very much like sub foo() { ... } to me :-(

[10:16] *** samebchase2 joined
[10:17] <holly> it's fast hacking I know

[10:18] <holly> but I mentioned low memory and processor prints

[10:18] <holly> which is out of date :-)

[10:18] *** samebchase left
[10:21] *** phogg joined
[10:25] <holly> Now to find a good recipe for the game ...

[10:25] <holly> MVC for the thing is somehwat bad I think

[10:26] <holly> but I'll ask around

[10:26] <holly> beholder, spider queen 

[10:26] <dakkar> holly: https://perlconference.us/tprc-2021-cloud/schedule/

[10:26] <holly> oh right

[10:27] <dakkar> in particular, https://tprc2021cic.sched.com/event/jLxu

[10:27] <holly> I cannot travel, I'm soryy

[10:27] <holly> s/soryy/sorry

[10:27] <dakkar> it's "in the cloud" ☺

[10:27] <holly> ah

[10:27] <dakkar> (most of the world can't travel these days)

[10:28] <holly> I'm not the social type, but maybe later

[10:28] <holly> I understand a BOF session

[10:28] <dakkar> the talks will probably be recorded and available after the conference, so you can maybe watch it later

[10:29] <dakkar> the talk I pointed you to is about a common game design, ECS

[10:29] <Altreus> I keep seeing raku-based wrappers around stuff that don't actually make use of raku's features

[10:29] <Altreus> like I'm sure it would make a lot of sense to have an async framework for game engines

[10:30] <codesections> dakkar: yeah, I think the talks are being live-streamed on youtube and uploaded soon (immediately?) after

[10:30] <codesections>  

[10:30] <Altreus> every game engine ever uses some sort of update(dt)

[10:30] <holly> Altreus : true

[10:30] <Altreus> I feel like raku is well-poised to invert this

[10:30] <holly> Game::Adventure is for out of date games though

[10:31] <Altreus> react-whenever is my new hammer, so everything is a supply nail :)

[10:31] <holly> abandonware

[10:31] <Altreus> yeah :) just putting it out there

[10:31] <dakkar> Altreus: otoh, games often need to make sure that every part is in the correct state at all times, and async makes that more complicated

[10:31] <dakkar> holly: it's not abandoned if it's still being written, right? 😜

[10:31] <holly> It needs a pramagtized raku/C system, with a new some sort of SDL

[10:32] <Altreus> It's an unformed concept in my mind, but I feel like there's a star forming in the nebula

[10:32] <holly> dakkar : I don't like the 3D games from these days

[10:32] <holly> It's not my kind of thing

[10:32] <holly> you can write 3D levels with Game::Adventure though

[10:32] <holly> (it's based on SDL2)

[10:32] <dakkar> holly: sure, I was just joking on the term "abandonware" meaning "software whose owners have abandoned"

[10:33] <Altreus> I started writing a Perl5/Lua text adventure creation module

[10:33] <holly> dakkar : right

[10:33] <Altreus> But it's on the pile of never gonna finish it

[10:34] <holly> As long as you don't reinvent the wheel :-)

[10:34] <Altreus> the POE::Wheel

[10:35] <dakkar> Altreus: that's a subtle way of saying "I've been around Perl for a looong time" ☺

[10:35] *** jess joined
[10:38] <holly> lol

[10:38] * Altreus faraway look

[10:39] <El_Che> lo

[10:39] <El_Che> eseyman: is there a problem with rakudo-pkgs?

[10:39] <holly> back in the day we had these great monitors :-)

[10:39] <holly> CRT

[10:40] <holly> splendid for adv gaming

[10:40] *** xinming_ joined
[10:41] *** jess left
[10:41] *** jess joined
[10:41] <holly> Now I need to write a "Camel" game, something with a plane and the Red Baron

[10:42] <holly> something I played on an 8088

[10:42] <holly> again, on the TODO file

[11:09] <holly> Gnome's Quest

[11:38] <holly> I'm off for now, will login later this weekend but have to work on other projects

[11:39] *** holly left
[11:47] <eseyman> El_Che: not me but tomasz seems to have issues with it

[12:02] <tbrowder> g'day all

[12:03] *** reportable6 left
[12:04] *** reportable6 joined
[12:06] <tbrowder> i'm trying to execute a Perl script with shell or run and get an error "The spawned command exited..."

[12:07] <tbrowder> i've tried to redirect error to /dev/null but that didn't help. the script executes fine outside raku

[12:11] <tbrowder> "The spawned command './bin/foo.pl' exited unsuccessfully..."

[12:12] <lizmat> perhaps the current dir is different from the raku context ?

[12:17] <tbrowder> could be. i just found i could elim the error by moving an exit statement out of the same block. i need to use a more complicated run statement i think.

[12:17] <tbrowder> i'll report back later...

[12:24] <tbrowder> ok, fixed it. the output was sinking so i did something as suggested in docs:

[12:25] <tbrowder> run('foo.pl', @args).so

[12:25] <tbrowder> no error!

[12:25] <dakkar> well, the error is still there, you just stopped seeing it

[12:26] <dakkar> as in, `foo.pl` is *still* exiting with a non-0 code

[12:26] <dakkar> you told `run` to not tell you that

[12:27] <dakkar> (which may well be exactly what you want to happen, just pointing out the subtlety)

[12:27] <tbrowder> that's ok. i'm just running its --help arg. the author uses some fancier Perl code that i don't understandand don't need to worry about

[12:27] <dakkar> that's fine then ☺

[12:28] <tbrowder> the actual runs of his code with raku work as advertised

[12:29] <tbrowder> thanks lizmat and dakkar

[12:32] <tbrowder> i think for some reason he makes a habit of having his scripts exit with non-zero on --help. and his scripts always run a full default process when no args are entered. completely different from my conventions.

[12:32] <tbrowder> hard to get used to...

[12:36] <Altreus> I definitely think it's badly behaved to return failure when help was requested

[12:36] <Altreus> I'm having a hard time justifying to what extent that could be considered a failure at all

[12:37] <ugexe> prove --help on OSX does it

[12:38] <ugexe> https://github.com/ugexe/zef/blob/602c54f1069631fd527473f4028451e5c47bc42c/lib/Zef/Service/Shell/prove.rakumod#L70-L90

[13:04] *** linkable6 left
[13:04] *** evalable6 left
[13:05] *** evalable6 joined
[13:06] *** linkable6 joined
[13:14] <tbrowder> .seen rbt

[13:14] <tellable6> tbrowder, I saw rbt 2020-09-09T14:45:04Z in #raku: <rbt> moritz: Okay. Will do in the future.

[13:14] *** LizBot joined
[13:26] *** juanfra joined
[13:32] *** demostanis[m] joined
[13:32] *** tyil[m] joined
[13:32] *** ComplYue[m] joined
[13:32] *** CIAvash joined
[13:50] *** frost left
[13:57] *** masak_ is now known as masak

[14:10] *** gordonfish joined
[14:24] *** Doc_Holliwould left
[14:31] *** squashable6 left
[14:35] *** Sgeo joined
[15:04] <tbrowder> ugexe: is that failure return requiredbecause it's OSX? if so, maybe that's why he does it.

[15:06] <ugexe> i think osx includes some prove shim that behaves this way

[15:35] *** linkable6 left
[15:35] *** evalable6 left
[15:36] *** evalable6 joined
[15:51] *** Doc_Holliwood joined
[16:37] *** dakkar left
[17:16] *** Doc_Holliwood left
[17:21] *** linkable6 joined
[17:33] *** squashable6 joined
[17:46] *** Doc_Holliwood joined
[18:03] *** reportable6 left
[18:04] *** reportable6 joined
[18:21] *** metacookie joined
[18:24] *** Doc_Holliwood left
[18:31] <Geth> ¦ doc/cool-coercers: a9c49de212 | (Stoned Elipot)++ | doc/Type/Cool.pod6

[18:31] <Geth> ¦ doc/cool-coercers: Add Cool coercers ref #3361

[18:31] <Geth> ¦ doc/cool-coercers: review: https://github.com/Raku/doc/commit/a9c49de212

[18:31] <Geth> ¦ doc: stoned++ created pull request #3894: Add Cool coercers ref #3361

[18:31] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3894

[18:32] *** linkable6 left
[18:33] *** linkable6 joined
[18:46] *** cbk joined
[19:06] <lizmat> weekly: https://www.reddit.com/r/perl/comments/npupug/should_perl_die_gracefully/h0cyns7/?utm_source=reddit&utm_medium=web2x&context=3

[19:06] <notable6> lizmat, Noted! (weekly)

[19:27] *** linkable6 left
[19:28] *** linkable6 joined
[19:38] *** sono joined
[20:04] *** Doc_Holliwood joined
[20:05] *** p6steve joined
[20:05] <p6steve> exit

[20:05] <p6steve> quit

[20:05] *** p6steve left
[20:11] *** cbk left
[20:11] *** cbk joined
[20:15] <japhb> Altreus: Can confirm that Supply- and Channel-based design for Raku games works well.  You still need to be aware of the actual passage of time in order to do smooth interpolation and game physics though.

[20:16] <japhb> Altreus: Also, there is a #raku-gamedev which you may be interested in.

[20:16] <japhb> .tell holly There is a #raku-gamedev channel which you may be interested in.

[20:16] <tellable6> japhb, I'll pass your message to holly

[20:22] *** p6steve joined
[20:22] *** p6steve left
[20:23] *** p6steve joined
[20:42] *** guer left
[20:53] *** guer joined
[20:54] *** SmokeMachine is now known as SmokeMachine_

[20:55] *** SmokeMachine_ is now known as SmokeMachine

[21:01] *** p6steve left
[21:07] *** esh joined
[21:15] *** guer left
[21:29] *** linkable6 left
[21:31] *** linkable6 joined
[21:34] *** p6steve joined
[21:42] *** guer joined
[22:09] *** phogg left
[22:09] *** phogg joined
[22:18] *** p6steve left
[22:48] *** guer left
[23:10] *** pounce joined
[23:18] *** cbk left
[23:18] *** Doc_Holliwood left
[23:47] *** thundergnat left
