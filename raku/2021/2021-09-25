[00:03] *** reportable6 left
[00:10] *** lichtkind_ left
[00:50] *** evalable6 joined
[01:08] *** frost joined
[02:04] *** reportable6 joined
[02:12] *** guifa joined
[02:17] <guifa> Not bad, I got DateTime::Timezones updated withint an hour and a half of its release :-) 
[02:17] <guifa> (of the new timezone data from IANA, I mean)
[02:22] <japhb> guifa++
[03:14] *** holyghost joined
[03:44] *** holyghost left
[04:00] *** holyghost joined
[04:17] *** swaggboi left
[04:25] *** swaggboi joined
[04:35] *** archenoth left
[05:19] *** perlbot left
[05:19] *** simcop2387 left
[05:22] *** perlbot joined
[05:23] *** simcop2387 joined
[05:54] *** swaggboi left
[05:54] *** swaggboi joined
[05:57] *** stanrifkin joined
[05:58] <stanrifkin> i install rakudoc via zef, but i can't read any documentation with ex.: rakudoc Str. What i missed to install?
[06:00] <stanrifkin> oh... i see. Have had to install p6doc too. That seems to work now.
[06:02] *** reportable6 left
[06:10] *** stanrifkin left
[06:19] <holyghost> stanrifkin: use p6doc then, same thing AFAIK
[06:19] <tellable6> holyghost, I'll pass your message to stanrifkin
[06:34] *** holyghost left
[06:42] *** dustinm` left
[06:47] *** dustinm` joined
[06:49] *** holyghost joined
[06:53] *** holyghost left
[06:54] *** holyghost joined
[07:03] *** Sgeo left
[07:07] *** Sgeo joined
[08:04] *** reportable6 joined
[08:05] *** swaggboi left
[08:06] *** sena_kun joined
[08:26] *** Compl joined
[08:28] *** Compl left
[08:38] <Kaiepi> .tell altai-man, Trait::Traced's update has been released. Data::Record and Kind::Subset::Parametric need more maintenance, but should be doable over the weekend
[08:38] <tellable6> Kaiepi, I'll pass your message to Altai-man
[08:44] <sena_kun> Kaiepi, thank you very much for your work!
[08:50] *** Altai-man joined
[08:50] *** Altai-man left
[08:55] *** lichtkind_ joined
[08:58] *** linkable6 left
[09:01] *** Sgeo left
[09:09] *** slu joined
[09:16] *** djerius left
[09:17] *** djerius joined
[10:17] *** squashable6 left
[10:17] *** benchable6 left
[10:17] *** statisfiable6 left
[10:17] *** greppable6 left
[10:17] *** reportable6 left
[10:17] *** committable6 left
[10:17] *** bisectable6 left
[10:17] *** nativecallable6 left
[10:17] *** bloatable6 left
[10:17] *** unicodable6 left
[10:17] *** shareable6 left
[10:17] *** evalable6 left
[10:17] *** sourceable6 left
[10:17] *** coverable6 left
[10:17] *** quotable6 left
[10:17] *** releasable6 left
[10:17] *** tellable6 left
[10:17] *** notable6 left
[10:17] *** greppable6 joined
[10:18] *** notable6 joined
[10:18] *** tellable6 joined
[10:18] *** unicodable6 joined
[10:19] *** statisfiable6 joined
[10:19] *** bloatable6 joined
[10:19] *** quotable6 joined
[10:19] *** nativecallable6 joined
[10:54] *** frost left
[10:59] *** linkable6 joined
[11:17] *** evalable6 joined
[11:18] *** shareable6 joined
[11:19] *** coverable6 joined
[11:19] *** squashable6 joined
[11:19] *** benchable6 joined
[11:19] *** releasable6 joined
[11:20] *** sourceable6 joined
[11:46] <holyghost> It'd be nice to have a python grammar for "binary" loading of pic files into a raku program
[11:46] <holyghost> S/pic/pyc
[11:46] <holyghost> Then have some kind of execution with them
[11:46] <holyghost> S/then/them
[11:47] <holyghost> I'm not going to write it
[11:47] <holyghost> I know it's a parrot idea but there's several languages of choice including us
[11:49] <holyghost> CORBA is dead I guess
[12:03] *** reportable6 joined
[12:06] <[Coke]> last time i wrote CORBA was at Enron.
[12:13] <holyghost> I just compiled ORBit 20 years ago, I don't know much about it
[12:38] *** holyghost left
[13:17] *** bisectable6 joined
[13:19] *** committable6 joined
[13:45] *** tejr left
[14:06] *** tejr joined
[14:54] *** xinming left
[14:56] *** xinming joined
[15:20] *** holyghost joined
[15:50] *** lichtkind_ left
[16:25] *** holyghost left
[16:49] *** sergii joined
[16:50] *** MasterDuke left
[16:54] *** sergii left
[17:13] *** holyghost joined
[17:17] <holyghost> I just posted AI-Agent 0.2.10, it's actor based (non-native raku), interesting also for OOP. I am working on the actual AI Music Agent which can be networked later on.
[17:17] <holyghost> By non-native raku, I mean without built-in actors which might be in raku itself
[17:20] <holyghost> It's from my Scheme days in college, we used actor systems like that in Scheme to build systems. Doing the same in LISP which gives cognitive AIs sometimes
[17:26] *** MasterDuke joined
[17:27] *** holyghost left
[17:33] *** holyghost joined
[17:34] <holyghost> Everything is at http://github.com/hollythemage/AI-Agent and http://github.com/hollythemage/AI-Agent-Music
[17:52] *** holyghost left
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:18] *** abraxxa-home joined
[18:28] *** Ben10 joined
[18:31] <codesections> CIAvash, I have a question prompted by the github reply you just posted
[18:33] <codesections> m: my &f = grep(* !%% 2) # This doesn't work
[18:33] <camelia> rakudo-moar ba15173fd: OUTPUT: «Type check failed in assignment to &f; expected Callable but got Seq (().Seq)␤  in block <unit> at <tmp> line 1␤␤»
[18:33] <codesections> m: say ([0..5] ==> grep(* !%% 2) ) # So why does this?
[18:33] <camelia> rakudo-moar ba15173fd: OUTPUT: «(1 3 5)␤»
[18:36] <CIAvash> I don't know :) it's how the feed operator works and I haven't looked into it. Also for some reason which I don't remember, the functions need to have parenthesis. (most of the time!)
[18:39] <codesections> wait, never mind; I was just misreading that syntax
[18:40] *** Sgeo joined
[18:40] <codesections> The equivalent (ish – it's .grep instead of &grep) syntax would be: 
[18:41] <codesections> m: my &f = *.grep(* !%% 2)
[18:41] <camelia> rakudo-moar ba15173fd: ( no output )
[18:41] <codesections> which does work
[18:48] <codesections> And I'm pretty sure I realized that at some point earlier, which is why I didn't use the &mul_odd_squares example in the GitHub issue – it can already be written as
[18:48] <codesections> m: my &mul_odd_squares = *.reduce(&[×]) ∘ *.map(*²) ∘ *.grep(* !%% 2); say mul_odd_squares ^6
[18:48] <camelia> rakudo-moar ba15173fd: OUTPUT: «225␤»
[18:50] <CIAvash> yeah, but those are methods, does it work functions?
[18:51] <codesections> No, which is part (all?) of the motivation for the issue
[18:52] <codesections> but it's actually pretty hard to come up with good examples using fns from CORE, because nearly all of them are also methods
[18:54] *** colemanx left
[18:55] *** colemanx joined
[18:57] <CIAvash> `await` is not a method, I remember wanting to use it like method
[19:00] *** Ben10 left
[19:01] <codesections> Part of what makes this more workable is the https://docs.raku.org/language/operators#methodop_.&  So, for example:
[19:01] <codesections> m: my $p = Promise.start({ sleep 2; 42}); say $p.&await
[19:01] <camelia> rakudo-moar ba15173fd: OUTPUT: «42␤»
[19:04] <CIAvash> yeah
[19:05] <codesections> So part of what I was trying to get at with my &minmax-primes example was the ability to deal with more complex signatures.  if it was just &min-prime, you could write it as
[19:06] <codesections> m: my &min-prime = *.first(&is-prime); say min-prime [10..42]
[19:06] <camelia> rakudo-moar ba15173fd: OUTPUT: «11␤»
[19:06] <codesections> But there's no way to pass :end to that
[19:07] <codesections> m: my &min-prime = *.first(&is-prime); say min-prime [10..42], :end 
[19:07] <camelia> rakudo-moar ba15173fd: OUTPUT: «Unexpected named argument 'end' passed␤  in block <unit> at <tmp> line 1␤␤»
[19:07] <codesections> m: my &minmax-prime = &first.assuming(&is-prime); say minmax-prime [10..42], :end 
[19:07] <camelia> rakudo-moar ba15173fd: OUTPUT: «41␤»
[19:16] <CIAvash> same thing applies to `await` I think. `*.&await` works only on one argument, but await can take more than one argument, although you can pass an array to it as well.
[20:00] *** linkable6 left
[20:00] *** evalable6 left
[20:00] *** linkable6 joined
[20:01] *** Sgeo_ joined
[20:02] *** evalable6 joined
[20:03] *** Sgeo left
[20:04] *** Sgeo left
[20:05] *** Sgeo joined
[20:08] *** Sgeo_ left
[20:18] *** abraxxa-home left
[20:52] *** djerius left
[20:53] *** djerius joined
[21:53] *** bisectable6 left
[21:53] *** committable6 left
[21:53] *** nativecallable6 left
[21:53] *** releasable6 left
[21:53] *** statisfiable6 left
[21:53] *** sourceable6 left
[21:53] *** unicodable6 left
[21:53] *** benchable6 left
[21:53] *** greppable6 left
[21:53] *** reportable6 left
[21:53] *** notable6 left
[21:53] *** evalable6 left
[21:53] *** coverable6 left
[21:53] *** linkable6 left
[21:53] *** shareable6 left
[21:53] *** tellable6 left
[21:53] *** squashable6 left
[21:53] *** bloatable6 left
[21:53] *** quotable6 left
[21:53] *** unicodable6 joined
[21:53] *** squashable6 joined
[21:53] *** greppable6 joined
[21:54] *** bisectable6 joined
[21:54] *** nativecallable6 joined
[21:54] *** coverable6 joined
[21:55] *** bloatable6 joined
[21:55] *** notable6 joined
[21:55] *** committable6 joined
[21:55] *** reportable6 joined
[21:56] *** tellable6 joined
[22:17] *** mlepnos[m] joined
[22:17] *** mlepnos[m] left
[22:23] *** clarjon1 joined
[22:37] *** tejr left
[22:38] *** tejr joined
[22:49] *** holyghost joined
[22:53] *** quotable6 joined
[22:53] *** releasable6 joined
[22:53] *** shareable6 joined
[22:56] *** statisfiable6 joined
[23:10] *** squashable6 left
[23:32] *** holyghost left
[23:36] *** swaggboi joined
[23:54] *** sourceable6 joined
