[00:01] <Xliff> tony-o: I've updated the REPL.IT to show the error.

[00:05] *** notagoodidea left
[00:38] *** wamba left
[00:44] *** vike left
[00:44] *** vike1 joined
[01:03] *** pecastro left
[01:06] *** benjif left
[01:06] *** Manifest0 left
[01:06] *** synthmeat left
[01:06] *** dataangel left
[01:06] *** kst left
[01:06] *** sxmx left
[01:06] *** imcsk8 left
[01:06] *** moony left
[01:06] *** grumble left
[01:06] *** gfldex left
[01:06] *** pierrot left
[01:06] *** Woodi left
[01:06] *** jast left
[01:06] *** Ulti left
[01:06] *** krunen left
[01:08] *** mowotter joined
[01:09] *** benjif joined
[01:09] *** Manifest0 joined
[01:09] *** synthmeat joined
[01:09] *** dataangel joined
[01:09] *** kst joined
[01:09] *** sxmx joined
[01:09] *** imcsk8 joined
[01:09] *** moony joined
[01:09] *** grumble joined
[01:09] *** gfldex joined
[01:09] *** pierrot joined
[01:09] *** Woodi joined
[01:09] *** jast joined
[01:09] *** Ulti joined
[01:09] *** krunen joined
[01:10] *** sxmx left
[01:10] *** mowcat left
[01:10] *** sxmx joined
[01:15] *** leont left
[01:17] *** mowotter left
[01:20] *** patrickb left
[02:20] *** coverable6 left
[02:20] *** benchable6 left
[02:20] *** greppable6 left
[02:20] *** sourceable6 left
[02:20] *** linkable6 left
[02:20] *** evalable6 left
[02:20] *** shareable6 left
[02:20] *** statisfiable6 left
[02:20] *** tellable6 left
[02:20] *** releasable6 left
[02:20] *** unicodable6 left
[02:20] *** bloatable6 left
[02:20] *** squashable6 left
[02:20] *** notable6 left
[02:20] *** quotable6 left
[02:20] *** committable6 left
[02:20] *** nativecallable6 left
[02:20] *** bisectable6 left
[02:21] *** statisfiable6 joined
[02:21] *** bloatable6 joined
[02:22] *** sourceable6 joined
[02:22] *** tellable6 joined
[02:22] *** nativecallable6 joined
[02:22] *** releasable6 joined
[02:22] *** committable6 joined
[02:23] *** squashable6 joined
[02:23] *** evalable6 joined
[02:23] *** quotable6 joined
[02:23] *** unicodable6 joined
[02:23] *** benchable6 joined
[02:23] *** bisectable6 joined
[02:23] *** shareable6 joined
[02:23] *** coverable6 joined
[02:24] *** notable6 joined
[02:24] *** linkable6 joined
[02:24] *** greppable6 joined
[02:25] *** klapperl left
[02:31] *** klapperl joined
[02:34] *** jargan joined
[02:35] *** [Coke]_ joined
[02:35] *** [Coke]_ left
[02:35] *** [Coke]_ joined
[02:35] *** tyilanmenyn joined
[02:35] *** kst` joined
[02:36] *** vrurg_ joined
[02:36] *** samcv_ joined
[02:37] *** HarmtH_ joined
[02:37] *** dataange` joined
[02:38] *** probablymoony joined
[02:38] *** a3r0_ joined
[02:38] *** pierrot_ joined
[02:38] *** Woodi_ joined
[02:38] *** gfldex_ joined
[02:38] *** japhb_ joined
[02:38] *** Ulti_ joined
[02:39] *** benjif_ joined
[02:39] *** ManifestO joined
[02:39] *** mst_ joined
[02:40] *** Gruber joined
[02:43] *** eaterof joined
[02:43] *** literal_ joined
[02:43] *** avarab joined
[02:43] *** klapperl left
[02:43] *** vrurg left
[02:43] *** eater left
[02:43] *** japhb left
[02:43] *** [Coke] left
[02:43] *** samcv left
[02:43] *** cgfbee left
[02:43] *** a3r0 left
[02:43] *** HarmtH left
[02:43] *** avar left
[02:43] *** tyil left
[02:43] *** Grrrr left
[02:43] *** literal left
[02:43] *** mst left
[02:43] *** raydiak left
[02:43] *** lnx left
[02:43] *** benjif left
[02:43] *** Manifest0 left
[02:43] *** synthmeat left
[02:43] *** dataangel left
[02:43] *** kst left
[02:43] *** imcsk8 left
[02:43] *** moony left
[02:43] *** grumble left
[02:43] *** gfldex left
[02:43] *** pierrot left
[02:43] *** Woodi left
[02:43] *** jast left
[02:43] *** Ulti left
[02:43] *** krunen left
[02:43] *** jargan is now known as jast

[02:43] *** imcsk8_ joined
[02:44] *** grumble joined
[02:44] *** synthmeat joined
[02:44] *** cgfbee joined
[02:49] *** krunen joined
[02:49] *** klapperl joined
[02:50] *** raydiak joined
[02:53] *** jmchael left
[02:59] *** lnx joined
[03:56] *** Xliff left
[04:32] *** benjif_ left
[04:33] <xinming_> SmokeMachine: I just backlog'ed, and I lost the answer, how do we temp the table name, Could you please answer it again? thanks.

[04:34] <xinming_> SmokeMachine: Now, I need to resolve a problem, where multiple views are created and I need to select views(tables) based on selection.

[04:34] <xinming_> SmokeMachine: Also, How do we do group by in Red?

[04:34] <SmokeMachine> xinming_: `is temp`?

[04:35] <SmokeMachine> xinming_: what’s the query you want?

[04:35] <xinming_> SmokeMachine: Not temp table

[04:36] <xinming_> I mean, change the table name dynamically for the model

[04:36] <SmokeMachine> .^table = “new-name”

[04:37] <xinming_> SmokeMachine:  Somethign like; SELECT c1, c2, c3, COUNT(*) FROM tb1 JOIN tb2 ON tb1.id = tb2.id GROUP BY tb1.c1, tb1.c2, tb2.c1

[04:37] <xinming_> SmokeMachine: Thanks.

[04:37] <xinming_> SmokeMachine: I grepd the source, it doesn't seem to have clear example on doing group-by thing correctly.

[04:38] <xinming_> especially involes .join-table + .group-by,  I don't think distinct will work either. ;-)

[04:38] <SmokeMachine> xinming_: yes... I don’t think there is a way of doing that by now...

[04:40] <SmokeMachine> xinming_: a way of grouping is using classify...

[04:44] <SmokeMachine> xinming_: maybe a .classify using Red::AST::Function...

[04:49] <SmokeMachine> xinming_: something like: `... .classify: { .c1, .c2, Tb2.c1 }, :as{ .c1, .c2, Tb2.c1, Red::AST::Function.new: :func<COUNT>, :args<*> }` # not tested code

[04:50] <xinming_> SmokeMachine: BTW, is it possible to specify columns to fetch for a model?

[04:50] <xinming_> SmokeMachine: With views, if we don't include the column some data won't be calculated

[04:51] <xinming_> in DBIC, We have  .search(..., { columns => [qw()] }) thing

[04:51] <xinming_> SmokeMachine: I think, if Red can fill all these needs, It'll be the killer ORM in raku. ;-)

[04:52] <SmokeMachine> xinming_: in Red you can just return the wanted columns...

[04:54] <SmokeMachine> xinming_: `Model.map: { .col1, .col2 }` will only “calculate” those 2 columns

[04:56] <SmokeMachine> xinming_: is that what you wanted?

[04:58] <xinming_> SmokeMachine: Nope, What I mean is, returns the whole object, but will die when we try to access unfetched columns

[04:58] <xinming_> It's the same as normal model objects, but partially filled.

[04:58] <xinming_> my @rows = Modle.^all(:columns[<c1 c2 c3>]);

[04:59] <xinming_> This way, the ResultSeq will be kept, we also have the whole object, with speed.

[05:00] <xinming_> BTW, the is-rsclass doesn't work. I'll record these, when you back to computer, We'll discuss those. :-)

[05:01] <SmokeMachine> That’s a good idea...

[05:02] <SmokeMachine> Please, open a new issue, I’ll take a look on the is rs-class ASAP

[05:03] <xinming_> `temp Model.^table = "new-name"`  will return error: Can only use 'temp' on a container

[05:04] <SmokeMachine> xinming_: But do you think that should die when accessing a not fetched param? Why not fetching it on the fly?

[05:05] <xinming_> SmokeMachine: Because that hides too many things underneath, When people specify columns, They know what they are doing, So dying is sensible behavior.

[05:05] <xinming_> automaticallly fetching will cause tons of automatically fetch underneath, where, when people uses column limit to enforce the "limit", We shouldn't too smart on this.

[05:08] <SmokeMachine> xinming_: https://colabti.org/irclogger/irclogger_log/raku?date=2020-10-31#l190

[05:10] <SmokeMachine> xinming_: that makes sense... but maybe add a :fetch option for the case you change your mind and want to fetch that...

[05:12] <xinming_> SmokeMachine: what irclogs should I check?

[05:14] <SmokeMachine> Sorry, wrong link... let me search for that again...

[05:16] <tony-o> .tell xliff the problem with your updated gist is your rule.  it tries to parse that as a code block rather than matching your sym. i  wouldn't be surprised if the infix ~~ is also screwing with it in some way.  altering it to just find a matching '{' '}' without the before works for me (and is more sane than requiring it to be EOL/EOS)

[05:16] <tellable6> tony-o, I'll pass your message to Xliff

[05:17] <SmokeMachine> I meant this one: https://colabti.org/irclogger/irclogger_log/raku?date=2020-10-31#l190

[05:32] *** evalable6 left
[05:32] *** linkable6 left
[05:34] *** linkable6 joined
[05:35] *** evalable6 joined
[05:39] *** rindolf joined
[05:45] <xinming_> SmokeMachine: Is the log answer to `temp Model^.table = "new-table"`  name?

[05:56] <SmokeMachine> Yes

[05:57] <SmokeMachine> Sorry, I can’t try it out with out my computer, but I tried to search on the logs to find how to do that...

[06:09] <SmokeMachine> Does anyone knows if something automatic is running more than 100 tests on Red in less than 6 hours?

[06:09] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/6PwZDXGv/1609654180.JPG

[06:09] <SmokeMachine> I’m getting this on Red tests:

[06:10] <SmokeMachine> And it seems to be this: https://www.docker.com/increase-rate-limits?utm_source=docker&utm_medium=web%20referral&utm_campaign=increase%20rate%20limit&utm_budget=

[06:11] <SmokeMachine> Odd... does any one know anything about that?

[06:25] <xinming_> SmokeMachine: ^alias is different from   `temp Model.^table = "abc"`;  where ^alias("") will set the value permanently, where temp auto restore the old value.

[06:39] *** evalable6 left
[06:39] *** linkable6 left
[06:39] *** evalable6 joined
[06:40] *** linkable6 joined
[06:44] *** brtastic joined
[07:05] *** vike1 left
[07:17] *** parabolize left
[07:27] *** aluaces joined
[08:00] *** sjm_uk joined
[08:02] *** Doc_Holliwood joined
[08:24] *** sjm_uk left
[08:26] *** sjm_uk joined
[08:29] *** andrzejku joined
[08:30] <andrzejku> Hi

[08:30] <andrzejku> do you think perl7 will kill raku?

[08:33] <gfldex_> andrzejku: will javascript kill rust?

[08:33] *** gfldex_ is now known as gfldex

[08:36] <moon-child> andrzejku: I don't think there was ever any chance of that.  More interesting, though, is perl11/potion (though I think that with _why gone development has stagnated...a decade ago)

[08:49] *** tyilanmenyn is now known as tyil

[08:50] *** stoned75 joined
[08:57] *** v_m_v joined
[08:58] *** v_m_v left
[08:58] *** v_m_v joined
[09:02] <Geth> ¦ doc: a9fb2a6965 | (Stoned Elipot)++ | doc/Language/statement-prefixes.pod6

[09:02] <Geth> ¦ doc: Fix link

[09:02] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a9fb2a6965

[09:02] <linkable6> Link: https://docs.raku.org/language/statement-prefixes

[09:15] *** Ekho left
[09:24] *** stoned75 left
[09:27] *** Sgeo left
[09:32] *** Ekho joined
[09:40] *** wamba joined
[09:42] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2021/01/03/internal-indirection/

[09:46] *** sena_kun joined
[09:50] *** sjm_uk left
[09:59] *** sjm_uk joined
[10:04] *** patrickb joined
[10:26] *** vike1 joined
[10:47] *** frost-lab left
[10:48] *** wamba left
[11:00] *** notagoodidea joined
[11:05] *** wamba joined
[11:15] *** notagoodidea left
[11:26] *** pecastro joined
[11:30] *** sena_kun left
[11:31] *** wamba left
[11:54] *** leont joined
[11:57] *** wamba joined
[12:50] <Geth> ¦ doc: 00d210fa15 | (Brian Duggan)++ (committed using GitHub Web editor) | doc/Language/pod.pod6

[12:50] <Geth> ¦ doc: Update pod.pod6

[12:50] <Geth> ¦ doc: 

[12:50] <Geth> ¦ doc: Fix space (this currently renders as  "Raku&nbsp;modules")

[12:50] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/00d210fa15

[12:50] <linkable6> Link: https://docs.raku.org/language/pod

[12:56] *** ensamvarg195 left
[13:08] *** v_m_v left
[13:10] <xinming_> SmokeMachine: I also have other ideas, that I think should allow user to generate table name on the fly. As table expression is also usefull.

[13:11] <xinming_> in postgresql, user can run sql functions to generate a table with arg.

[13:14] *** Black_Ribbon left
[13:18] <SmokeMachine> xinming_: any suggestion for the syntax?

[13:19] <xinming_> Nope, Buut will think about it. :-)

[13:20] <SmokeMachine> xinming_: I’m also planning to add some new stuff on Red... I’m planning adding .^update-supply, .^create-supply and .^aggregation-supply. All of them will receive Supplies...

[13:21] <SmokeMachine> And the .^aggregation-supply will also receive a Callable

[13:22] <xinming_> SmokeMachine: BTW, can we have a temp sollution to make  `temp Model.^table = "new-name"` work?

[13:22] <SmokeMachine> That way it would be easy to “summarise” a supply on a db...

[13:22] <xinming_> SmokeMachine: What are these supplies used for?

[13:23] <xinming_> I mean, after user create the row? the Supply will have things?

[13:24] <SmokeMachine> xinming_: so if your code, for example, is a Kafka consumer, you can easily put that on a db to easily access that...

[13:24] <xinming_> Now,  `temp Model.^table = "blabla"`   will raise error:

[13:25] <xinming_> Can only use 'temp' on a container

[13:25] <SmokeMachine> xinming_: not, the opposite... the supply will populate the database...

[13:25] <xinming_> I also tried `Model.table = "blabla"`, I got error, Cannot modify an immutable Str (table_name_provided)

[13:26] <xinming_> SmokeMachine: not that clear to me ATM. :-)

[13:27] <SmokeMachine> xinming_: a supply with the changes on the database we already have with .events

[13:27] <xinming_> I read in MetamodelX/Red/Model.pm6,  the table method is rw.

[13:28] <SmokeMachine> xinming_: why the .^alias haven’t done the trick?

[13:28] <xinming_> I just can't figure it out, why it'll be the string.

[13:28] *** lucasb joined
[13:29] <xinming_> SmokeMachine: What does .^alias do?

[13:29] <SmokeMachine> xinming_: created a new model based on the given one

[13:29] <SmokeMachine> *creates

[13:30] <xinming_> SmokeMachine: So, something like  Model.^alias("new_table_name").^all.map({ ... }), right?

[13:30] *** stoned75 joined
[13:31] *** andrzejku left
[13:31] *** andrzejku joined
[13:32] <SmokeMachine> xinming_: yes, something like that... (I don’t remember the exact params it needs)

[13:32] <xinming_> SmokeMachine: When you gave me the url, I thought you were proposing the new api for Temp table features

[13:32] <xinming_> will check the source

[13:35] <xinming_> SmokeMachine: It needs :$base, :$relationship, :$join-type

[13:41] <xinming_> SmokeMachine: Doesn't work, will need to pass :$base

[13:43] <xinming_> I actually `temp Model.^table = "blabla"`  easier to understand. as people know how to point select to another table.

[13:44] <xinming_> I actually think*

[13:45] <SmokeMachine> xinming_: I agree...

[13:45] <xinming_> We need to enable some easy tricks for people to use

[13:46] <xinming_> the .^alias  needs all 3 args to be passed.

[13:46] <SmokeMachine> xinming_: doesn’t that work without the temp?

[13:46] <xinming_> without temp, I got error, Cannot modify an immutable Str(table_name_provided)

[13:48] *** Doc_Holliwood left
[13:49] <SmokeMachine> I’ll need to take some time to take a look at this...

[13:50] <SmokeMachine> That’s on the queue... the first item on the queue is the Optimization bug...

[13:50] *** patrickb left
[13:51] *** andrzejku left
[14:02] <xinming_> SmokeMachine: I had the `temp Model.^table = "new_name"`

[14:02] <xinming_> I find the issue, will send the patch.

[14:02] <SmokeMachine> Great! What was the issue?

[14:03] <xinming_> -multi trait_mod:<is>(Mu:U $model, Str :$table! where .chars > 0 --> Empty) {

[14:03] <xinming_> +multi trait_mod:<is>(Mu:U $model, Str :$table! is copy where .chars > 0 --> Empty) {

[14:03] <xinming_> Y

[14:04] <xinming_> in Red::Traits

[14:04] <xinming_> glad that I can red the source code. :-)

[14:05] <xinming_> I wish one day, I can understand the whole source of rakudo whole stack, including MoarVM

[14:06] <SmokeMachine> That seems to make sense!!! :)

[14:15] *** cpan-raku left
[14:16] *** cpan-raku joined
[14:16] *** cpan-raku left
[14:16] *** cpan-raku joined
[14:22] *** andrzejku joined
[14:23] *** andrzejku left
[14:24] <xinming_> SmokeMachine: I've submitted the patch for `temp Model.^table = "temp_name"`

[14:24] *** andrzejku joined
[14:26] *** andrzejku left
[14:29] <xinming_> SmokeMachine: How do we define multiple column to sort please?

[14:29] <xinming_> sort(*.col1)  is understandable, If we need 2 columns, col1 DESC, col2 ASC

[14:29] <xinming_> How do we specify this?

[14:30] <SmokeMachine> .sort: { .col1, .col2, .col3 }

[14:31] <SmokeMachine> .sort: { .col1, -.col2 }

[14:31] <stoned75> hi. I'm looking for Bool.value method definition. I am not able to find it...

[14:33] <xinming_> stoned75: Just grep doc, Bool in rakudo seems to be implemented with enum. Not class

[14:33] <xinming_> SmokeMachine: thanks.

[14:33] <SmokeMachine> m: did True

[14:33] <camelia> rakudo-moar 8150a2864: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    did used at line 1. Did you mean 'die', 'dir', 'dd'?␤␤»

[14:34] <SmokeMachine> m: dd True

[14:34] <camelia> rakudo-moar 8150a2864: OUTPUT: «Bool::True␤»

[14:34] <xinming_> m: dd Bool

[14:34] <camelia> rakudo-moar 8150a2864: OUTPUT: «Bool␤»

[14:35] <stoned75> OK got it. Thanks !

[14:35] <SmokeMachine> m: dd Bool.keys

[14:35] <camelia> rakudo-moar 8150a2864: OUTPUT: «()␤»

[14:35] <SmokeMachine> Wrong...

[14:36] <SmokeMachine> (Too long without writing code... :))

[14:38] <SmokeMachine> m: dd Bool::.keys

[14:38] <camelia> rakudo-moar 8150a2864: OUTPUT: «("False", "True").Seq␤»

[14:41] *** sjm_uk left
[14:41] <stoned75> m: Bool.^find_method("value")

[14:41] <camelia> rakudo-moar 8150a2864: ( no output )

[14:42] <stoned75> I was thrown off tracks by that :)

[14:52] <SmokeMachine> m: Int.^find_method(“value”).wrap: -> | { say “it’s Int”; nextsame }; True.value

[14:52] <camelia> rakudo-moar 8150a2864: OUTPUT: «No such method 'wrap' for invocant of type 'Mu'.  Did you mean 'WHAT'?␤  in block <unit> at <tmp> line 1␤␤»

[15:06] *** sena_kun joined
[15:09] <tbrowder> .tell ugexe the apparent "problem" with zef was my failure to see the msg that one of several deps had failed testing and thus the attempted installation failed. zef is working fine!

[15:09] <tellable6> tbrowder, I'll pass your message to ugexe

[15:14] *** v_m_v joined
[15:23] *** notagoodidea joined
[15:25] *** vike1 left
[15:36] *** Doc_Holliwood joined
[15:37] *** wamba left
[15:40] *** stoned75 left
[15:57] *** Tirifto joined
[15:57] *** Altai-man joined
[15:57] *** parabolize joined
[15:58] *** sjm_uk joined
[16:00] *** sena_kun left
[16:02] *** asymptotically left
[16:02] *** xelxebar_ left
[16:02] *** tejr left
[16:06] *** asymptotically joined
[16:07] *** xelxebar joined
[16:07] *** tejr joined
[16:08] *** jmchael joined
[16:18] *** __jrjsmrtn__ left
[16:18] <SmokeMachine> Does anyone know anything that could be pulling Red’s test image more than 100 times in 6 hours?

[16:18] <lizmat> Google?

[16:19] <SmokeMachine> lizmat: downloading a Docker image?

[16:19] <moritz> travis CI or so?

[16:19] <lizmat> you'd be surprised  :-)

[16:20] <SmokeMachine> This is the problem: https://usercontent.irccloud-cdn.com/file/AkgSPPyQ/1609690819.JPG

[16:21] *** __jrjsmrtn__ joined
[16:21] *** wamba joined
[16:22] <SmokeMachine> I don’t think that’s travis’ fault... https://usercontent.irccloud-cdn.com/file/62qXG8d2/1609690916.JPG

[16:24] <El_Che> SmokeMachine: the "solution" is looking fron something else than dockerhub :(

[16:24] *** asymptotically left
[16:24] *** asymptotically joined
[16:25] <SmokeMachine> El_Che: yes, I’m planing on moving the image to GitHub...

[16:25] <El_Che> they killed the platform softly

[16:25] <El_Che> like the song

[16:25] *** stoned75 joined
[16:26] <SmokeMachine> But I really would like to know what’s downloading that so many times...

[16:26] <El_Che> probably a CI somewhere

[16:26] <El_Che> like moritz said

[16:28] *** vike1 joined
[16:32] *** mst_ is now known as mst

[16:39] <moritz> SmokeMachine: note that pull rate limit could refer to an IP, not just an image

[16:39] <moritz> I'm kinda surprised if your CI doesn't have a caching docker registry proxy by now

[16:41] *** xelxebar left
[16:41] *** aluaces left
[16:43] *** xelxebar joined
[16:45] *** aluaces joined
[16:50] *** melezhik joined
[16:51] <El_Che> it goes both ways, e.g. like a big institution like a university connecting through the same IP while they have a zillion of departments

[16:56] *** mowcat joined
[17:01] *** mowcat left
[17:01] *** mowcat joined
[17:06] *** mowcat left
[17:18] <SmokeMachine> moritz: do you mean travis or my yaml?

[17:19] <moritz> travis

[17:19] <SmokeMachine> moritz: it seems to pull that every time... :(

[17:21] *** JRaspass joined
[17:22] *** mowcat joined
[17:24] <JRaspass> It's very WIP but I thought this would be a good place to mention a little side project myself and jjatria have been working on - https://raku.land is an attempt to make a distro directory in pure Raku. It's not as feature full as https://modules.raku.org yet but it's been fun to use Raku in anger.

[17:30] <moritz> JRaspass: very nice!

[17:31] <JRaspass> Technically the markdown processing is ruby, so mostly raku :-P Plenty on the roadmap though

[17:31] <JRaspass> you can go a long way with cro on-top of postgres though

[17:32] *** mowcat left
[17:34] *** melezhik left
[17:36] *** mowcat joined
[17:46] *** mowcat left
[18:00] *** Sgeo joined
[18:28] *** tobs left
[18:29] *** tobs joined
[18:32] *** tobs left
[18:35] *** tobs joined
[18:38] *** lucasb left
[18:39] *** v_m_v left
[18:39] *** v_m_v joined
[18:41] <El_Che> JRaspass++ JJAtria[m]++

[18:42] <El_Che> weekly: https://raku.land is an attempt to make a distro directory in pure Raku by JJAtria[m] amd JRaspass 

[18:42] <notable6> El_Che, Noted! (weekly)

[19:00] <tbrowder> ditto! looks very nice!

[19:08] *** mowcat joined
[19:09] <JJAtria[m]> Thanks for the encouragement! :D

[19:09] <JJAtria[m]> We're currently reading only the CPAN dists, to keep things simple

[19:09] *** sjm_uk left
[19:11] *** [Coke]_ is now known as [Coke]

[19:16] *** mowcat left
[19:17] *** mowcat joined
[19:18] <JRaspass> git is doable, but yeah fiddly, very interested in future plans for the ecosystem

[19:20] <SmokeMachine> JJAtria[m]: that explains why I haven’t found some of my modules...

[19:22] <JJAtria[m]> An earlier version was processing the dists from the p6c ecosystem, but supporting both git and CPAN ended up being a bit of a time drain when it came to implementing new features, so we decided to focus on only one for now

[19:22] <SmokeMachine> JRaspass++, JJAtria[m]++

[19:30] *** Xliff joined
[19:31] *** notagoodidea left
[19:32] <Geth> ¦ doc: 744fbdd1cb | (Stoned Elipot)++ | doc/Language/typesystem.pod6

[19:32] <Geth> ¦ doc: whitespace fix

[19:32] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/744fbdd1cb

[19:32] <linkable6> Link: https://docs.raku.org/language/typesystem

[19:33] *** wamba left
[19:43] *** notagoodidea joined
[19:44] *** wamba joined
[20:55] *** ilogger2 joined
[20:55] <stoned75> on the enum type yes, but on one of its enum-pair ?

[20:55] <stoned75> m: enum foo <a b>; say (a.pick(True), a.pick(False));

[20:55] <camelia> rakudo-moar 8150a2864: OUTPUT: «((a) ())␤»

[20:56] <timotimo> pick takes as argument "how many to return" so your True and False are used as numbers

[20:57] <timotimo> m: enum foo <a b>; foo::.keys.pick.say for ^5

[20:57] <camelia> rakudo-moar 8150a2864: OUTPUT: «b␤a␤b␤a␤b␤»

[20:57] <timotimo> m: enum foo <a b>; foo::.keys.pick.raku.say for ^5

[20:57] <camelia> rakudo-moar 8150a2864: OUTPUT: «"b"␤"b"␤"a"␤"a"␤"a"␤»

[20:57] <stoned75> here your are picking the enum's keys, not an enum-pair

[20:58] *** benjif joined
[20:59] <timotimo> what do you mean by enum-pair?

[20:59] <timotimo> m: enum foo <a b>; foo::.enums.pick.raku.say for ^5

[20:59] <camelia> rakudo-moar 8150a2864: OUTPUT: «No such method 'enums' for invocant of type 'Stash'.  Did you mean any␤of these: 'elems', 'Num'?␤  in block <unit> at <tmp> line 1␤␤»

[20:59] <timotimo> m: enum foo <a b>; foo.enums.pick.raku.say for ^5

[20:59] <camelia> rakudo-moar 8150a2864: OUTPUT: «:b(1)␤:a(0)␤:b(1)␤:b(1)␤:b(1)␤»

[20:59] <stoned75> I was using True/False in my example, only to illustrate that , in the end, pick (and roll btw) on an enum-pair is only about producing an empty list (for pick(False)) or a singleton list containing the enum-pair key (for pick(True))

[21:00] <stoned75> with enum foo <a b> 'a' is a enum-pair

[21:01] <stoned75> m: enum foo <a b>; say a.pair

[21:01] <camelia> rakudo-moar 8150a2864: OUTPUT: «a => 0␤»

[21:05] <timotimo> ah, now i get it

[21:05] <timotimo> i should probably have read more backscroll

[21:06] <stoned75> no problem, sorry for not being clear

[21:06] *** b2gills joined
[21:07] <stoned75> exploring perl6-all-modules, I may find use cases :)

[21:22] *** Manifest0 joined
[21:31] <timotimo> do you know about greppable6? :)

[21:32] *** melezhik joined
[21:33] <melezhik> looks like colabti.org is down , can't read raku irc logs ...

[21:37] <JRaspass> yeah likewise

[21:40] *** melezhik left
[21:47] <stoned75> timotimo: I forgot about greppable6 but I always have an up t odate clone on fast storage, so git log -p | rg is cheap ;-)

[21:49] <timotimo> yes that's very useful indeed

[21:59] *** seanrobert joined
[22:02] *** vrurg joined
[22:05] *** dataange` joined
[22:17] <notagoodidea> raku.land is neat but I miss the option to reach the repo of the module? or is it just to show the readme from them? Also, does it only contain modules from the CPAN?

[22:17] <JRaspass> git is planned, and adding a link to the repo will be trivial, good idea

[22:18] <JRaspass> the plan is to have the provides down the side and render the pod from each one, like metacpan

[22:19] <JRaspass> but atm only .md is supported and only README, Changes is also ingested but just dumped at the bottom of the page atm

[22:19] <jdv79> is the public irc log working?  i cant connect.

[22:19] <notagoodidea> I don't know metacpan (and the perl env in general), I will look after to get the frame of reference.

[22:20] <jdv79> anyone know who runs it?

[22:20] <JRaspass> toolchain gang i presume?

[22:23] <JRaspass> added dist repo link to the roadmap :-)

[22:23] <notagoodidea> thx :)

[22:24] <JRaspass> oh sorry i thought you asked who ran metacpan, not the irc logs

[22:26] <notagoodidea> JRaspass: What do you use for syntax highlighting on raku.land?

[22:26] *** dataange` left
[22:27] <JRaspass> Ah right we have a unmerged VERY WIP PR for rouge https://github.com/jjatria/rouge/tree/raku-lexer

[22:28] <JRaspass> it doesn't handle all of raku's grammar yet

[22:29] <JRaspass> it knows some builtins like say, but not die, and methods aren't highlighted yet, e.g. https://raku.land/cpan:JJATRIA/HTTP::Tiny

[22:30] <notagoodidea> Ah, because I am on a issue on skylighting (https://github.com/jgm/skylighting/issues/114) trying to get raku merged in it.

[22:31] <notagoodidea> The contributors that create the Kate style syntax seems to have covered a lot of ground.

[22:31] <JRaspass> ah cool, i find vscode's annoying when working on raku, it will highlight foo("bar") but get confused by foo('bar')

[22:31] <JRaspass> also it doesn't understand a raku shebang :-(

[22:31] <JRaspass> still calls the lang perl6 in the dropdown

[22:32] *** Kaiepi joined
[22:32] <notagoodidea> The idea is that if raku is merged to skylighting, I get it in any program that use it. neuron for sure, pandoc also I think.

[22:34] <JRaspass> oh that would be cool

[22:38] <notagoodidea> it can output html too but the output may not be the most friendly to integrate from what I see.

[22:47] <stoned75> commit: releases enum foo <a b c>; say foo::.values;

[22:47] <committable6> stoned75, https://gist.github.com/4555d29c5d8d6d9d350d31545dcd4c76

[22:48] <stoned75> commit: releases enum foo <a b c>; say foo::.values;

[22:48] <committable6> stoned75, https://gist.github.com/77c314e620dac9e99a9dee5ca9e6ffbb

[22:51] *** seanrobert left
[22:57] <Geth> ¦ doc: 718d1f8c0a | (Stoned Elipot)++ (committed by Juan Julián Merelo Guervós) | doc/Language/typesystem.pod6

[22:57] <Geth> ¦ doc: Link to Enumeration role documentation

[22:57] <Geth> ¦ doc: 

[22:57] <Geth> ¦ doc: .. to avoid duplicated and slightly out of date method

[22:57] <Geth> ¦ doc: description

[22:57] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/718d1f8c0a

[22:57] <linkable6> Link: https://docs.raku.org/language/typesystem

[22:57] *** defaultxr joined
[22:58] *** defaultxr left
[22:58] <notagoodidea> JRaspass: I have a weird issue with raku.land, https://raku.land/recent?page=3 don't work (other pages until 10 at least are ok)

[22:59] <JRaspass> ooo, /me checks logs, i bet its a NULL description

[22:59] <notagoodidea> Do you prefer that I open an issue on Gitlab?

[23:00] <JRaspass> i might just fix it now ;-) its cro templates don't like Any values, they die when trying to escape the value

[23:00] <JRaspass> and some dists have null description

[23:01] *** defaultxr joined
[23:03] *** defaultxr left
[23:08] <JRaspass> pushing a fix now

[23:08] *** defaultxr joined
[23:11] <notagoodidea> JRaspass: yep, working! 

[23:12] <JRaspass> now to fix the bug where https://raku.land/cpan:LEMBARK/FindBin-libs dies :-P

[23:18] <notagoodidea> Hum, is there a way to indicate a empty value in an hash at declaration?

[23:19] <JRaspass> Nil?

[23:19] <notagoodidea> a => Nil?

[23:19] <JRaspass> yeah or :a(Nil) :-P

[23:20] <notagoodidea> m: my %a = foo => Nil, bar => "baz"; say %a;

[23:20] <camelia> rakudo-moar 8150a2864: OUTPUT: «{bar => baz, foo => (Any)}␤»

[23:21] <gfldex> new/changed modules for the year 2020 https://gist.github.com/8701757c9fb777b9a2cc47a002a97023

[23:21] <JRaspass> fixed the other 500, both pushed to githun, thanks for pointing them out

[23:21] <JRaspass> *github, lol

[23:34] *** mowcat joined
[23:41] *** mowcat left
[23:51] <notagoodidea> mm, I want to convert a seq <as foo foo in bar bar as foo2> to an hash with <as in> as keys. I tried by split but because of the order when convert to Hash, the first pair as => "foo foo" is erased by as => "foo2".

[23:52] <leont> rotor?

[23:52] <leont> (or maybe I misunderstand your question)

[23:53] <leont> What is the result you're looking for? what would the whole hash be?

[23:54] <notagoodidea> <as foo foo in bar as foo2> => {as => [foo foo foo2], in => [bar]}

[23:54] <leont> gather/then would work, but there may be a more elegant approach

[23:54] <MasterDuke> .classify maybe

