[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[00:16] *** Merfont joined
[00:17] *** Altai-man_ joined
[00:17] *** Kaeipi left
[00:17] *** sena_kun left
[00:17] *** codesect` joined
[00:18] *** codesections left
[00:19] *** leah2 left
[01:12] *** rindolf joined
[01:32] *** kvw_5 left
[01:34] *** kvw_5 joined
[02:06] *** wingfold joined
[02:07] *** wingfold left
[02:56] *** DarthGandalf left
[02:56] *** DarthGandalf joined
[03:10] *** frost-lab joined
[04:10] *** greppable6 left
[04:10] *** shareable6 left
[04:10] *** bloatable6 left
[04:10] *** linkable6 left
[04:10] *** statisfiable6 left
[04:10] *** notable6 left
[04:10] *** bisectable6 left
[04:10] *** nativecallable6 left
[04:10] *** quotable6 left
[04:10] *** squashable6 left
[04:10] *** reportable6 left
[04:10] *** sourceable6 left
[04:10] *** tellable6 left
[04:10] *** coverable6 left
[04:10] *** benchable6 left
[04:10] *** evalable6 left
[04:10] *** committable6 left
[04:10] *** releasable6 left
[04:10] *** unicodable6 left
[04:11] *** squashable6 joined
[04:11] *** statisfiable6 joined
[04:11] *** releasable6 joined
[04:11] *** quotable6 joined
[04:11] *** linkable6 joined
[04:11] *** sourceable6 joined
[04:11] *** shareable6 joined
[04:11] *** unicodable6 joined
[04:12] *** bisectable6 joined
[04:12] *** coverable6 joined
[04:12] *** reportable6 joined
[04:12] *** nativecallable6 joined
[04:12] *** tellable6 joined
[04:12] *** bloatable6 joined
[04:13] *** benchable6 joined
[04:13] *** committable6 joined
[04:13] *** notable6 joined
[04:13] *** evalable6 joined
[04:14] *** greppable6 joined
[05:01] *** wamba joined
[05:03] *** brtastic joined
[05:15] *** brtastic left
[05:25] *** dustinm` left
[05:29] *** dustinm` joined
[05:29] *** wingfold joined
[05:34] *** wingfold left
[06:01] *** parabolize left
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:17] *** frost-lab left
[06:19] *** Sgeo left
[06:25] *** domidumont joined
[06:33] *** ecocode_ joined
[06:36] *** ecocode_ left
[06:36] *** ecocode_ joined
[06:43] *** aluaces joined
[06:49] *** stoned75 joined
[06:53] *** frost-lab joined
[07:05] *** stoned75 left
[07:08] *** leah2 joined
[07:11] *** wamba left
[07:22] *** brtastic joined
[07:30] *** ufobat joined
[07:53] *** wamba joined
[07:57] *** brtastic1 joined
[07:57] *** brtastic left
[07:57] *** brtastic1 is now known as brtastic

[07:59] *** abraxxa joined
[08:00] *** abraxxa left
[08:02] *** abraxxa joined
[08:08] *** abraxxa left
[08:09] *** abraxxa joined
[08:17] *** wamba left
[08:32] *** pecastro joined
[08:38] *** wamba joined
[08:40] *** tejr left
[08:42] *** tejr joined
[08:45] *** frost-lab left
[09:04] *** wamba left
[09:09] *** wamba joined
[09:30] *** MasterDuke left
[09:32] *** MasterDuke joined
[09:38] *** wamba left
[10:19] *** wamba joined
[10:28] *** wamba left
[10:29] *** wamba joined
[10:34] *** wamba left
[10:35] *** wamba joined
[11:08] *** frost-lab joined
[11:57] *** dakkar joined
[11:59] *** wamba left
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:05] *** frost-lab left
[13:07] *** Sgeo joined
[13:12] *** wamba joined
[13:23] *** |Sno| left
[13:58] *** Merfont left
[14:08] *** wamba left
[14:16] *** QhpAptyj9hj0RQwM joined
[14:17] *** b2gills left
[14:24] *** Kaiepi joined
[14:27] <QhpAptyj9hj0RQwM> Hey, I'm having trouble with specifying a user-defined character class that includes a predefined character class with no shorthand(alpha). Is there a way to do this?

[14:30] *** wamba joined
[14:36] *** ufobat_ joined
[14:36] *** b2gills joined
[14:39] *** ufobat left
[14:43] *** |Sno| joined
[14:44] <MasterDuke> QhpAptyj9hj0RQwM: i believe the only way to do that (if i'm thinking of the right thing) is with EVAL

[14:45] *** jmerelo joined
[14:47] *** parabolize joined
[14:56] <tonyo> QhpAptyj9hj0RQwM: ean example?

[15:01] <QhpAptyj9hj0RQwM> MasterDuke: Thanks, I'll look into this.

[15:04] <QhpAptyj9hj0RQwM> tonyo: Something like $string ~~ / <[ <alpha> @ ]> /; 

[15:05] <QhpAptyj9hj0RQwM> This one won't work though, because < is interpreted as a literal.

[15:06] *** wamba left
[15:16] *** ecocode_ left
[15:16] <Geth> ¬¶ doc: f15f479f97 | (JJ Merelo)++ | doc/Type/Junction.pod6

[15:16] <Geth> ¬¶ doc: Minor change mainly to trigger tests

[15:16] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f15f479f97

[15:16] <linkable6> Link: https://docs.raku.org/type/Junction

[15:17] <jmerelo> releasable6:status

[15:17] <releasable6> jmerelo, Next release in ‚âà4 days and ‚âà3 hours. There are no known blockers. 0 out of 34 commits logged

[15:17] <releasable6> jmerelo, Details: https://gist.github.com/4c6a74a9188eee9920739cd2c4c02282

[15:30] <tonyo> QhpAptyj9hj0RQwM: what's wrong with $str ~~ / (<alpha>|'@')+ / ?

[15:37] *** brtastic1 joined
[15:41] *** brtastic left
[15:42] *** brtastic1 left
[15:53] <QhpAptyj9hj0RQwM> tonyo: Nothing, but it doesn't feel elegant UwU

[15:53] *** patrickb joined
[15:58] <ugexe> / <+alpha +[@]> /;

[15:58] <tonyo> QhpAptyj9hj0RQwM: try <+alpha+['@']>

[16:11] <QhpAptyj9hj0RQwM> Thank you, senpai.

[16:12] *** wamba joined
[16:15] *** ufobat_ left
[16:27] *** wamba left
[16:29] *** wamba joined
[16:31] *** wingfold joined
[16:32] *** wingfold left
[16:35] *** wamba left
[16:38] *** dakkar left
[16:47] *** hellonomad[m] joined
[16:47] *** hellonomad[m] is now known as kiti_nomad[m]

[16:50] *** wamba joined
[16:57] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/05/17/2021-20-cro-nodelayed/

[16:59] <Juerd> :)

[17:00] *** wamba left
[17:00] <lizmat> afk for a bit&

[17:04] *** brtastic joined
[17:15] *** wamba joined
[17:15] *** domidumont left
[17:22] *** Doc_Holliwood joined
[17:22] <Doc_Holliwood> what's the conditional method call operator again?

[17:22] <codesect`> .?

[17:25] <Doc_Holliwood> m: my $x; say $x.?sum

[17:25] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Cannot resolve caller sum(Any:U: ); none of these signatures match:‚ê§    (Any:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:25] <Doc_Holliwood> m: my $x; say $x.//sum

[17:25] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed postfix call‚ê§at <tmp>:1‚ê§------> 3my $x; say $x.7‚èè5//sum‚ê§¬ª

[17:25] <Doc_Holliwood> m: my $x; say $x//.sum

[17:25] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Cannot resolve caller sum(Any:U: ); none of these signatures match:‚ê§    (Any:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:26] <Doc_Holliwood> m: my $x; say $x and $x.sum or 0

[17:26] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§(Any)‚ê§Useless use of constant integer 0 in sink context (line 1)‚ê§Cannot resolve caller sum(Any:U: ); none of these signatures match:‚ê§    (Any:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:26] <jmerelo> m: my $x=3; say $x.?sum

[17:26] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´3‚ê§¬ª

[17:27] <Doc_Holliwood> m: my $x; say ($x and $x.sum) or 0

[17:27] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§(Any)‚ê§Useless use of constant integer 0 in sink context (line 1)‚ê§¬ª

[17:27] <codesect`> oh, I misunderstood -- .? is conditional in the way JJ just showed, but not in the way you're looking for

[17:28] <codesect`> m: my $x; say try $x.sum; # the only way I know

[17:28] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Nil‚ê§¬ª

[17:28] <Doc_Holliwood> m: my $x; say try $x.sum || 0

[17:28] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Nil‚ê§¬ª

[17:28] <Doc_Holliwood> m: my $x; say { try $x.sum } || 0

[17:28] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´-> ;; $_? is raw = OUTER::<$_> { #`(Block|52197816) ... }‚ê§¬ª

[17:28] <Doc_Holliwood> m: my $x; say { try $x.sum }->() || 0

[17:28] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unsupported use of ->(), ->{} or ->[] as postfix dereferencer.  In Raku‚ê§please use: .(), .[] or .{} to deref, or whitespace to delimit a pointy‚ê§block.‚ê§at <tmp>:1‚ê§------> 3my $x; say { try $x.su‚Ä¶¬ª

[17:29] <Doc_Holliwood> m: my $x; say { try $x.sum }() || 0

[17:29] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´0‚ê§¬ª

[17:29] <codesect`> m: my $x; say (try $x.sum) || 0

[17:29] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´0‚ê§¬ª

[17:29] *** wamba1 joined
[17:29] <codesect`> m: my $x; say (try $x.sum) // 0 # actually,

[17:29] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´0‚ê§¬ª

[17:30] *** wamba left
[17:32] *** wamba joined
[17:32] <Doc_Holliwood> i don't know

[17:33] <Doc_Holliwood> guess i will stick with a ternary then

[17:33] <codesect`> hmm?  I thought ^^^^ was what you wanted?

[17:34] <jmerelo> Actually, not very clear to me what's the use case here.

[17:34] <jmerelo> Shouldn't it avoid raising an exception? If it raises an exception if it does not exist, then what's the different WRT just calling it directly?

[17:35] <jmerelo> Ah, OK. You need to check against Nil https://docs.raku.org/language/operators#index-entry-methodop_.%3F

[17:35] *** wamba1 left
[17:36] <jmerelo> m: my $x; say $x.?sum // "Nope"

[17:36] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Cannot resolve caller sum(Any:U: ); none of these signatures match:‚ê§    (Any:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:36] <jmerelo> m: my $x; say $x.?sum() // "Nope"

[17:36] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Cannot resolve caller sum(Any:U: ); none of these signatures match:‚ê§    (Any:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:36] <Doc_Holliwood> https://gist.github.com/holli-holzer/8a69c6ea46782873ec21d02c8785026e

[17:38] <codesect`> yeah, the version I showed with the parens works there

[17:38] <codesect`> m: my $x; say (try $x.sum) // 0 

[17:38] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´0‚ê§¬ª

[17:38] <jmerelo> Doc_Holliwood: right. But the thing above should work, right? It's checking for definedness

[17:39] <jmerelo> Hum

[17:39] <Doc_Holliwood> yes, but it's obscure and introduces another set of braces

[17:39] <jmerelo> I think that the problem is that $x is not defined.

[17:39] <Doc_Holliwood> i hate braces =)

[17:40] <jmerelo> m: my $x = "Can't"; say $x.?sum() // "Nope"

[17:40] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3‚èè5Can't' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:40] <jmerelo> m: my $x = 0|1; say $x.?sum() // "Nope"

[17:40] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´any(0, 1)‚ê§¬ª

[17:41] <jmerelo> m: my $x = :3foo; say $x.?sum() // "Nope"

[17:41] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Cannot resolve caller Numeric(Pair:D: ); none of these signatures match:‚ê§    (Mu:U \v: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:42] <jmerelo> I think it does not work very well on a multi

[17:43] <jmerelo> m: my $x = :3foo; say $x.?foo() // "Nope"

[17:43] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Nope‚ê§¬ª

[17:43] <codesect`> how about:

[17:43] <Doc_Holliwood> m: my $x; say (.item with $x.?x) || 0

[17:43] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´0‚ê§¬ª

[17:44] <codesect`> m: my $x; say $x.?&sum//0

[17:44] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Cannot resolve caller sum(Any:U: ); none of these signatures match:‚ê§    (Any:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:44] <jmerelo> m: my $x; say (.item with $x.?sum) || 0

[17:44] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Cannot resolve caller sum(Any:U: ); none of these signatures match:‚ê§    (Any:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:44] <codesect`> m: my $x; say $x.&sum//0

[17:44] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´Cannot resolve caller sum(Any:U: ); none of these signatures match:‚ê§    (Any:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:44] <jmerelo> codesect`: tried that above. It's the multi

[17:45] <jmerelo> It says it will call "if there's a method of such name". But then, it might fail because of the signature

[17:45] <codesect`> Yeah, I thought the & might change that

[17:46] <codesect`> m: my $x; my sub sum(|) {}; say $x.?&sum//0

[17:46] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´0‚ê§¬ª

[17:46] *** DiffieHellman left
[17:46] <codesect`> that's slightly hacky, but works without any parens 

[17:47] <jmerelo> m: my $x=3; my sub sum(|) {}; say $x.?&sum//0

[17:47] <camelia> rakudo-moar 8e933613c: OUTPUT: ¬´0‚ê§¬ª

[17:47] <jmerelo> codesect`: not really...

[17:47] <codesect`> mmmmm

[17:48] *** DiffieHellman joined
[17:50] *** jmerelo left
[17:57] *** sivoais left
[17:58] *** sivoais joined
[17:58] *** wamba left
[17:59] *** wamba joined
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:06] *** wamba left
[18:06] *** cog left
[18:06] *** wamba joined
[18:12] *** DiffieHellman left
[18:12] *** wamba left
[18:13] *** wamba joined
[18:13] *** DiffieHellman joined
[18:15] *** eseyman left
[18:23] *** wamba left
[18:24] *** wamba joined
[18:30] *** stoned75 joined
[18:34] *** MasterDuke left
[18:34] *** mowcat joined
[18:44] *** wamba left
[18:45] <moritz> weekly: https://news.perlfoundation.org/post/rakuast-grant-report-2021-04

[18:45] <notable6> moritz, Noted! (weekly)

[18:59] <kiti_nomad[m]> Learning raku these days

[19:04] <moritz> kiti_nomad[m]: good choice :D

[19:07] *** aborazmeh joined
[19:08] *** Manifest0 left
[19:08] *** wamba joined
[19:10] *** Manifest0 joined
[19:15] *** wamba left
[19:16] *** wamba joined
[19:21] *** DiffieHellman left
[19:22] *** DiffieHellman joined
[19:39] *** wamba left
[19:40] *** parabolize left
[19:40] *** wamba joined
[19:42] *** parabolize joined
[19:53] *** wamba left
[19:54] *** wamba joined
[20:15] *** abraxxa left
[20:32] *** aborazmeh left
[20:38] *** wamba1 joined
[20:41] *** wamba left
[20:42] *** wamba joined
[20:44] *** wamba1 left
[20:46] *** wamba left
[21:03] *** wamba joined
[21:12] *** brtastic left
[21:16] *** stoned75 left
[21:27] *** wamba left
[21:46] *** eseyman joined
[21:46] *** patrickb left
[21:47] *** wamba joined
[21:53] *** wamba1 joined
[21:56] *** wamba left
[21:56] *** wamba2 joined
[21:57] *** GeekRuthie joined
[21:58] *** wamba1 left
[22:16] *** vrurg joined
[22:47] *** MasterDuke joined
[22:47] *** pecastro left
[22:51] <tbrowder> hi, where can i find out about the new mailing list [email@hidden.address]
[22:52] <lizmat> tbrowder: not so much a mailing list as an alias that lives on my mail server

[22:52] <lizmat> just send a message to it for subscribing, and I will "subscribe" you if you want :-)

[22:53] *** wamba2 left
[22:53] <tbrowder> thnx

[23:53] *** linkable6 left
[23:53] *** evalable6 left
[23:54] *** evalable6 joined
[23:55] *** linkable6 joined
