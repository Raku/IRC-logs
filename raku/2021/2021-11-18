[00:02] <moon-child> hmm, why can't you atomic-fetch, atomic-assign, or cas non-ints?
[00:02] *** reportable6 left
[00:03] <patrickb> moon-child: The atomic ops are directly wired to a hardware functionality of the CPU, and that requires ints to work.
[00:04] *** reportable6 joined
[00:04] <moon-child> patrickb: you can atomically store, load, or cas any word.  The CPU doesn't care if that word represents a pointer or an integer at the language level
[00:05] <ugexe> yeah a MWSR using atomic int or cas was my initial thought
[00:06] <patrickb> moon-child: What other native word size things do you have in mind that atomic ops would be useful on?
[00:07] <moon-child> patrickb: raku objects have identity; and they are boxed, so they are represented by a pointer, that is a word
[00:09] <patrickb> What semantic should modifying an object pointer in Raku have?
[00:12] <moon-child> same as assignment...
[00:12] <ugexe> https://github.com/Raku/roast/blob/dffc2a4cec4a1b91a14289a88cead3ceecd5f5b4/S17-lowlevel/cas.t#L22-L24
[00:13] <moon-child> ah, that works!  Docs are out of date
[00:14] *** lizmat_ joined
[00:18] *** lizmat left
[00:23] <ugexe> https://github.com/jnthn/p6-concurrent-stack/blob/master/lib/Concurrent/Stack.pm6 is also a good example
[00:32] <patrickb> I'm off to bed. Thanks so far for everyone having a look. I'll backlog tomorrow, so please write, should you have another idea / comment.
[00:33] <moon-child> night!
[00:34] *** patrickb left
[00:40] *** tejr left
[00:40] *** tejr joined
[01:15] *** Colt left
[01:15] *** Colt joined
[01:16] <moon-child> m: sub f (--> Int) {}; say f
[01:16] <camelia> rakudo-moar b994c6bbb: OUTPUT: «Nil␤»
[01:16] <moon-child> why?
[01:24] *** frost joined
[01:29] <[Coke]> you didn't return anything, so Nil?
[01:29] <[Coke]> m: sub f() {} ; say f
[01:29] <camelia> rakudo-moar b994c6bbb: OUTPUT: «Nil␤»
[01:30] <moon-child> but I specified that the result should be an Int.  So I would expect either an error or an Int type object
[01:30] <[Coke]> Yes. Nil is special.
[01:30] <[Coke]> m: sub f(-->Int) {"hi"} ; say f
[01:30] <camelia> rakudo-moar b994c6bbb: OUTPUT: «Type check failed for return value; expected Int but got Str ("hi")␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»
[01:31] <[Coke]> https://docs.raku.org/type/Nil
[01:31] <[Coke]> "The value Nil may be used to fill a spot where a value would normally go, and in so doing, explicitly indicate that no value is present."
[01:32] <[Coke]> the first few paragraphs cover your question, I think.
[01:32] <[Coke]> esp: "Along with Failure, Nil and its subclasses may always be returned from a routine even when the routine specifies a particular return type. "
[01:35] <moon-child> ahh, ok!
[01:43] <[Coke]> m: Nil.is.a.special.value.say
[01:43] <camelia> rakudo-moar b994c6bbb: OUTPUT: «Nil␤»
[02:13] <lucs> This looks a bit complicated, can it be simplified?:
[02:14] <lucs> m: my $t = DateTime.now; my $s = $t.second; note $t.posix + ($s - $s.truncate)
[02:14] <camelia> rakudo-moar b994c6bbb: OUTPUT: «1637201640.9526284␤»
[02:21] <moon-child> hmm, I could have sworn there was a function called 'frac' or some such to replace $s - $s.truncate, but apparently not
[02:24] *** linkable6 left
[02:24] *** evalable6 left
[02:27] *** linkable6 joined
[02:32] <lucs> Oh, rereading the DateTime doc page, there is an Instant method that does it right off the bat
[02:32] <lucs> m: note DateTime.now.Instant;
[02:32] <camelia> rakudo-moar b994c6bbb: OUTPUT: «Instant:1637202801.88565274␤»
[02:33] <lucs> *phew*
[02:36] <lucs> m: note DateTime.now.Instant.Num
[02:36] <camelia> rakudo-moar b994c6bbb: OUTPUT: «1637203042.7485209␤»
[02:39] <moon-child> m: say now.Num
[02:39] <camelia> rakudo-moar b994c6bbb: OUTPUT: «1637203182.772122␤»
[02:45] <lucs> Fair enough :)
[02:46] <moon-child> :)
[02:47] <lucs> I love this language.
[03:27] *** evalable6 joined
[03:33] *** bruceAxtens joined
[03:43] <bruceAxtens> > 'ACTU'.split("").Array.map(-> $v { $v.ord }) gives me (Nil 65 67 84 85 Nil)
[03:43] <bruceAxtens> Where are the Nil values coming from and how do I not get them
[03:45] *** RavingCodRoller joined
[03:47] *** bruceAxtens left
[04:02] <kjp> There is "nothing" before the "A", so the string is split there, giving the first Nil, and similarly at the end.
[04:03] <kjp> Generally in raku, if you want to specify what you want to keep, then use comb rather than split, so something like 'ACTU'.comb('.') would do.
[04:04] <kjp> m: 'ACTU'.comb('.')
[04:04] <camelia> rakudo-moar b994c6bbb: ( no output )
[04:04] <Xliff> m: 'ACTU'.comb('.').gist.say
[04:04] <camelia> rakudo-moar b994c6bbb: OUTPUT: «()␤»
[04:04] <kjp> m: 'ACTU'.comb('.').say
[04:04] <camelia> rakudo-moar b994c6bbb: OUTPUT: «()␤»
[04:04] <Xliff> m: 'ACTU'.comb(/./).gist.say
[04:04] <camelia> rakudo-moar b994c6bbb: OUTPUT: «(A C T U)␤»
[04:04] <kjp> m: 'ACTU'.comb(/./).say
[04:04] <camelia> rakudo-moar b994c6bbb: OUTPUT: «(A C T U)␤»
[04:29] <elcaro> the `/./` is not necessary if you just want chars
[04:29] <elcaro> m: say 'ACTU'.comb
[04:29] <camelia> rakudo-moar b994c6bbb: OUTPUT: «(A C T U)␤»
[04:29] <elcaro> m: say 'ACTU'.comb».ord
[04:29] <camelia> rakudo-moar b994c6bbb: OUTPUT: «(65 67 84 85)␤»
[04:30] <elcaro> m: say 'ACTU'.ords  # or just this if you want ords
[04:30] <camelia> rakudo-moar b994c6bbb: OUTPUT: «(65 67 84 85)␤»
[04:36] *** RavingCodRoller left
[05:08] <Xliff> Anyone interesetd in TUS? 
[05:08] <Xliff> https://tus.io/protocols/resumable-upload.html
[05:15] *** RavingCodRoller joined
[05:33] *** RavingCodRoller left
[05:42] *** Xliff left
[05:43] *** swaggboi left
[05:52] *** Xliff joined
[05:56] *** swaggboi joined
[06:02] *** reportable6 left
[06:04] *** djerius left
[06:04] *** djerius joined
[06:28] *** Xliff left
[06:28] *** Xliff_ joined
[07:23] *** parv joined
[07:27] *** seednode left
[07:28] *** seednode joined
[07:32] *** Manifest0 left
[07:40] *** abraxxa joined
[07:45] *** abraxxa left
[07:45] *** abraxxa joined
[08:04] *** reportable6 joined
[08:44] *** Sgeo left
[09:05] *** jrjsmrtn left
[09:08] *** jrjsmrtn joined
[09:22] *** parv left
[09:32] *** RakuIRCLogger left
[09:32] *** Geth left
[09:33] *** Geth joined
[09:33] *** lizmat_ left
[09:33] *** lizmat joined
[09:35] *** abraxxa left
[09:55] *** abraxxa joined
[10:10] *** squashable6 left
[10:47] *** Manifest0 joined
[10:49] *** Manifest0 left
[10:50] *** Manifest0 joined
[10:53] *** Manifest0 left
[11:13] *** squashable6 joined
[11:21] <tbrowder> m: my $doy=132;my $y=2021;my $t=Date.new(:year($y).later(:days($doy-1);say $t.day-of-year
[11:21] <camelia> rakudo-moar b994c6bbb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use variable $t in declaration to initialize itself␤at <tmp>:1␤------> 3.new(:year($y).later(:days($doy-1);say $7⏏5t.day-of-year␤    expecting any of:␤        argument list␤      …»
[11:24] <tbrowder> m: my $d=25;my $y=2021;my $t = Date.new(:year($y)).later(:days($d-1));say $t.day-of-year
[11:24] <camelia> rakudo-moar b994c6bbb: OUTPUT: «25␤»
[11:26] <tbrowder> .tell lizmat i'm not sure Date.new from year, year-day is justifiable ^^^
[11:26] <tellable6> tbrowder, I'll pass your message to lizmat
[11:45] <lizmat> tbrowder: yes, I was aware of that, and it's even simpler (code wise)
[11:45] <tellable6> 2021-11-18T11:26:37Z #raku <tbrowder> lizmat i'm not sure Date.new from year, year-day is justifiable ^^^
[11:45] <lizmat> m: dd Date.new(:year(2021)) - 1 + 45   # the 45th day of the year 2021
[11:45] <camelia> rakudo-moar b994c6bbb: OUTPUT: «Date.new(2021,2,14)␤»
[11:51] *** hi joined
[11:51] *** hi left
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:08] <lizmat> m: sub yearday($year, $day) { Date.new($year - 1, 12,31) + $day }    # tbrowder probably the most efficient
[12:08] <camelia> rakudo-moar b994c6bbb: ( no output )
[12:12] *** discord-raku-bot left
[12:13] *** discord-raku-bot joined
[12:17] *** frost left
[12:59] <lizmat> meh, still 18 submissions to go for the Advent Calendar: https://github.com/Raku/advent/blob/master/raku-advent-2021/authors.md
[13:17] *** evalable6 left
[13:17] *** linkable6 left
[13:19] *** evalable6 joined
[13:20] *** linkable6 joined
[13:25] *** Manifest0 joined
[13:30] <lizmat> PSA: https://logs.liz.nl now running on refactored IRC::Log and many other improvements, using less CPU and less memory
[13:32] <lizmat> now on to using Cro 0.8.7  :-)
[13:43] *** Colt left
[13:48] *** gordonfish- joined
[13:49] *** gordonfish left
[13:51] <tib> The ephemeral miniconf is going LIVE NOW: https://us02web.zoom.us/j/81869065466?pwd=bzVFTVg1TWxBN0VOTFUwRmdPaTFuZz09
[13:52] *** MoC joined
[13:54] <MasterDuke> oh, i thought i would be able to attend, but turns out i have a bunch of stuff already scheduled. will the presentations be recorded?
[14:16] <tib> JJ Merelo speaking right now
[14:16] <tib> MasterDuke yes but not all
[14:17] *** MoC left
[14:20] <discord-raku-bot> <Nemokosch#9980> is JJ Merelo Spanish?
[14:21] <MasterDuke> yes
[14:23] <discord-raku-bot> <Nemokosch#9980> Nice 😄
[14:31] <[Coke]> m: dd "ABCD".split('', :skip-empty)
[14:31] <camelia> rakudo-moar b994c6bbb: OUTPUT: «("A", "B", "C", "D").Seq␤»
[14:32] <[Coke]> .comb is usually better for this use case, but you can use split.
[14:54] *** ProperN[out] joined
[14:54] <discord-raku-bot> <RaycatWhoDat#0001> When making a grammar, what is the correct way to look for delimited block if the delimiters are on separate lines?
[14:57] *** ProperN[out] left
[14:57] *** ProperN[out] joined
[14:57] *** ProperN[out] is now known as ProperNoun
[15:06] *** jess joined
[15:18] <tbrowder> lizmat: thnx, i didn't know Date could be incremented like that. i think i was confusing incrementing DateTime by duration of seconds. yr method is very handy.
[15:25] *** sm2 joined
[15:36] *** patrickb joined
[15:39] <tib> (I will run a very small Raku quiz after jjatria QAs at the ephemeral mininconf)
[15:53] *** gordonfish- is now known as gordonfish
[15:55] <tib> (sjn won)
[16:12] <El_Che> sjn, damn that guy, he's just too nice ;)
[16:14] <sjn> pfft
[16:14] <sjn> I won because Kahoot is a made by a Norwegian country, so I get a "home advantage" :D
[16:15] <sjn> s/country/company/
[16:15] <El_Che> you were in kahoot with them!
[16:15] <El_Che> s
[16:15] <sjn> exactly! :-D
[16:19] *** suman joined
[16:19] <suman> say $_ if $_~~ /regex/  for "file".IO.lines gives the line that match the regex. 
[16:19] <suman> How to get the line immediately after the match?
[16:24] *** andrea[m] left
[16:24] *** AlexDaniel left
[16:24] *** demostanis[m] left
[16:24] *** happy-dude left
[16:24] *** CIAvash left
[16:35] *** bdju left
[16:36] * sjn reads https://certitude.consulting/blog/en/invisible-backdoor/
[16:36] *** CIAvash joined
[16:36] *** Maylay left
[16:36] *** chronon left
[16:36] <sjn> Would it be sensible that the parser warns if it detects invisible/nonprintable characters in the code?
[16:36] *** AlexDaniel joined
[16:36] *** happy-dude joined
[16:37] *** demostanis[m] joined
[16:37] *** andrea[m] joined
[16:37] *** bdju joined
[16:37] <sjn> (maybe this should be in #raku-dev)
[16:37] *** sm2 left
[16:37] *** chronon joined
[16:39] *** sm1 joined
[16:39] *** abraxxa left
[16:39] *** patterner_ left
[16:39] *** ecocode__ left
[16:39] *** leont left
[16:39] *** skaji left
[16:39] *** SmokeMachine left
[16:39] *** tbrowder left
[16:40] *** mjgardner left
[16:40] *** kawaii_ left
[16:40] *** pjlsergeant left
[16:41] *** Maylay joined
[16:41] *** pjlsergeant joined
[16:42] *** ecocode__ joined
[16:42] *** PotatoGim left
[16:42] *** leont joined
[16:42] *** mjgardner joined
[16:42] *** SmokeMachine joined
[16:42] *** patterner_ joined
[16:43] *** kawaii_ joined
[16:44] *** PotatoGim joined
[16:44] *** skaji joined
[16:45] *** tbrowder joined
[16:49] *** suman left
[16:50] *** suman joined
[16:59] *** happy-dude left
[17:01] *** AlexDaniel left
[17:06] *** tejr left
[17:07] *** tejr joined
[17:14] *** sm1 left
[17:32] <El_Che> weekly: https://github.com/dha https://twitter.com/GinaRSnape/status/1460828469101740033 both raku and perl community passed away
[17:32] <notable6> El_Che, Noted! (weekly)
[17:32] *** AlexDaniel joined
[17:32] *** happy-dude joined
[17:39] *** suman left
[17:44] <discord-raku-bot> <Nemokosch#9980> rip
[17:46] *** lizmat_ joined
[17:47] *** lizmat_ left
[17:47] *** lizmat_ joined
[17:49] *** lizmat left
[17:49] *** lizmat_ left
[17:49] *** lizmat joined
[17:53] *** patrickb left
[18:03] *** reportable6 left
[18:04] *** reportable6 joined
[18:20] *** patrickb joined
[18:41] *** dextercd joined
[19:06] *** ajr joined
[19:38] *** linkable6 left
[20:23] *** sm1 joined
[20:47] <daxim> raku job  https://jobs.perl.org/job/21831
[20:47] <El_Che> Desired skills: - German language :)
[20:47] <daxim> could be worse
[20:48] <El_Che> if I squint a little I can read it, I speak dutch :)
[20:51] <daxim> I have visited nl about a dozen times and will reflect that notion 🤝
[20:51] <El_Che> when there keep driving south and you'll meet my blend of dutch (Belgium, Flanders)
[20:52] <El_Che> I sould like lizmat, but more polite :P
[20:56] <lizmat> but less direct :-)
[20:56] <El_Che> :P
[21:02] *** ajr left
[21:13] *** ajr joined
[21:18] *** ajr left
[21:24] *** sm1 left
[21:34] *** jrjsmrtn left
[21:36] *** jrjsmrtn joined
[21:36] *** jrjsmrtn left
[21:37] *** jrjsmrtn joined
[21:43] *** ajr joined
[22:16] <Xliff_> What does this error mean? "const_n32 NYI"
[22:17] <El_Che> not yet implemented?
[22:17] <moon-child> load of literal/constant 32-bit [floating-point] number is not yet implemented
[22:19] <[Coke]> https://github.com/MoarVM/MoarVM/blob/master/src/core/interp.c#L220
[22:23] *** ircuser left
[22:23] *** ircuser joined
[22:24] <[Coke]> how did you trigger it, OOC?
[22:24] <[Coke]> (wondering how hard it would be to implement MVM_BC_get_N32)
[22:26] <Xliff_> Um. There is a problem.
[22:27] <Xliff_> Global value set in package is NOT equivalent to said value in INIT block.
[22:41] *** linkable6 joined
[22:42] <MasterDuke> that kind of error usually means memory corruption
[23:01] <Geth> ¦ doc: cd32380ab4 | (Marc Chantreux)++ | doc/Language/5to6-nutshell.pod6
[23:01] <Geth> ¦ doc: simpler explanation of $RAKULIB
[23:01] <Geth> ¦ doc: 
[23:01] <Geth> ¦ doc: also remove reference to $PERL6LIB.
[23:01] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/cd32380ab4
[23:01] <linkable6> Link: https://docs.raku.org/language/5to6-nutshell
[23:07] *** Sgeo joined
[23:51] *** dextercd left
