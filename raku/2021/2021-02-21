[00:45] *** sortiz left
[00:52] *** pecastro left
[01:04] *** gnufr33dom joined
[01:06] *** Altai-man_ joined
[01:06] *** sena_kun left
[02:06] *** evalable6 left
[02:06] *** linkable6 left
[02:06] *** gnufr33dom left
[02:07] *** evalable6 joined
[02:07] *** brtastic left
[02:08] *** linkable6 joined
[02:48] *** kvw_5 joined
[02:52] *** kvw_5_ left
[03:04] *** ManifestO left
[03:06] *** ManifestO joined
[03:08] <SmokeMachine> https://twitter.com/smokemachine/status/1363313989636268035?s=21

[03:09] <guifa2> SmokeMachine++

[03:10] * guifa2 is still waiting to make a crazy killer app combing Red, Cro and all the internationalization modules.  Soon

[03:12] <SmokeMachine> guifa2: if I can help on that, please, let me know!

[03:12] <guifa2> SmokeMachine: as soon as I figure out what it is, I'll let you know ;-)

[03:12] <guifa2> But having all the tools is the first step

[03:16] *** leont left
[03:19] <SmokeMachine> I’ve spent many time thinking how should I express N-M relationship, and today I thought if it was a array of objs? How would o do it? Simple: $post.post-tags>>.tag; and that just worked as it should… I don’t think we should have any other syntax for that…

[03:23] <guifa2> SmokeMachine: I believe they call that the fruits of a well thought out design

[03:24] <SmokeMachine> :)

[03:42] <guifa2> This feels … off

[03:42] <guifa2> https://tio.run/##K0gtyjH7/z@3UkElUcFWwcCaC8zULcnMTUXwk5CYaFLJSEwkKbAAiAtkpuUXKcQZGhgoVHNxKQCBClRZXn65NVgApsAArEYBCoAmxFQAlWmY6Jhq6hVkJmdbw@WALtK2VaiACNRCTIW7DGiugi7cdtJsVMFpYzLIRhVUK5OpYSXQk1Y47EzE9CU0arTR7Kzl4ipOrFRQ0gUBJWswB6oWyklC5kAcbv3/PwA

[03:45] <guifa2> Binding feels like it should be faster, but it's not.  But my \foo = (value) is effectively binding anyways, right?

[03:46] <guifa2> (I added an extra test just now for my $x := (value) and it's just as slow.  The := operator seems to incur a huge performance penalty)

[04:03] *** gnufr33dom joined
[04:03] *** Some-body_ joined
[04:05] *** DarthGandalf left
[04:05] *** Some-body_ is now known as DarthGandalf

[05:02] *** Sgeo left
[05:07] *** rindolf joined
[05:09] *** mowcat left
[05:09] *** mowcat joined
[05:10] *** berber44 joined
[05:17] *** mowcat left
[05:56] *** Sgeo joined
[06:08] *** parabolize left
[06:08] *** Doc_Holliwood joined
[06:12] *** Sgeo_ joined
[06:16] *** Sgeo left
[06:20] *** kini left
[06:30] *** marcusr left
[06:30] *** kini joined
[06:37] *** marcusr joined
[06:44] *** kini left
[06:51] *** kini joined
[07:17] *** aborazmeh joined
[07:46] *** brtastic joined
[07:55] *** kerframil left
[08:02] *** kerframil joined
[08:03] *** kerframil left
[08:03] *** wamba joined
[08:09] *** guifa2 left
[08:11] *** Doc_Holliwood left
[08:14] *** guifa2 joined
[08:16] *** guifa2 left
[08:49] *** brtastic left
[08:56] *** kini left
[08:57] *** kini joined
[09:04] *** sxmx joined
[09:04] *** kini left
[09:04] *** kini joined
[09:06] <El_Che> https://twitter.com/gugod/status/1362642195950432260?s=19

[09:06] <El_Che> "perl" devroo

[09:06] <El_Che> m

[09:23] *** berber44 left
[09:45] *** gnufr33dom left
[09:49] <MasterDuke> guifa2: i think the optimizer is getting confused by the multiple loops in your example. if i run a single loop and then just change what it's doing,  `$x :=`, `\x =`, and `\x :=` are all the same, `$x =` is roughly half as fast

[09:49] <tellable6> MasterDuke, I'll pass your message to guifa2

[10:20] *** Kaiepi joined
[10:27] *** db48x left
[10:29] *** __jrjsmrtn__ joined
[10:29] *** db48x joined
[10:34] *** Sgeo_ left
[10:52] *** Sir_Ragna left
[11:00] *** Sir_Ragna joined
[11:12] *** Geth left
[11:13] *** pecastro joined
[11:29] *** aborazmeh left
[11:33] *** db48x left
[11:46] *** Black_Ribbon left
[12:01] *** db48x joined
[12:06] *** aborazmeh joined
[12:23] *** Doc_Holliwood joined
[12:23] *** mowcat joined
[12:47] *** mowcat left
[13:00] *** mowcat joined
[13:05] *** Doc_Holliwood left
[13:09] *** leont joined
[13:10] *** DinoAllo joined
[13:22] <DinoAllo> Hello everyone! I am just getting start with Raku, and would like to set up Emacs as my main editor. Do any of the folks here use Emacs? 

[13:23] <DinoAllo> I checked raku-mode and it was great. Are there any of Emacs packages that provide auto-complete feature for Raku?

[13:25] <DinoAllo> For example, like a backend for company-mode

[13:25] *** aborazmeh left
[13:26] <DinoAllo> I tried to search related projects but it was fruitless

[13:27] <DinoAllo> However, it's a great pleasure to join Raku community :)

[13:33] *** zxcvz joined
[13:37] *** berber44 joined
[13:38] *** aborazmeh joined
[13:40] *** mowcat left
[14:03] <Altai-man_> DinoAllo, there is raku-mode for emacs.

[14:04] <Altai-man_> DinoAllo, sadly, there is no abundance of emacs users around and raku is not so popular either, so it gives you less support. It's another deal if you write elisp and can contribute. :)

[14:04] *** monkey__ joined
[14:06] *** oneeggeach joined
[14:13] <DinoAllo> Altai-man, I was asking to avoid reinventing a wheel, and, yes, I would love to contribute :)

[14:15] *** Discipulus joined
[14:23] <Altai-man_> DinoAllo, no, I don't think you would! In fact, someone with time and able to give some love to emacs support is just awesome. I believe you can contribute to raku-mode if needed (the folks there are usually kind and easy to work with) or package something yourself if you need to, nothing much else is done in this area.

[14:45] <MasterDuke> DinoAllo: https://colabti.org/irclogger/irclogger_log_search/raku?search=emacs&action=search&timespan=&text=checked will give you some names of other likely emacs users

[14:49] *** wamba left
[14:51] *** monkey__ left
[14:56] *** Doc_Holliwood joined
[15:04] *** gnufr33dom joined
[15:05] *** parabolize joined
[15:05] *** hythm joined
[15:11] <DinoAllo> Altai-man, as an emacs hacker, it's both sad and joyful to see that raku is not well-supported on emacs. 

[15:11] <DinoAllo> I know I will not have the best experience out of the box. On the other hand, it means more thing I can hack and contribute! :)

[15:12] <DinoAllo> MasterDuke, thanks!

[15:13] *** RaycatWhoDat joined
[15:15] <SmokeMachine> Someone with more expertise with blogs... could help me on this? https://github.com/FCO/BlogSchema

[15:15] <SmokeMachine> what I've done wrong? what am I missing? what would be useful to add?

[15:23] *** oneeggeach left
[15:36] *** tejr left
[15:37] *** tejr joined
[15:39] <hythm> m: multi trait_mod:<is>( Variable:D \v, :$test-trait ) { say v.var }; my @a is test-trait; my @b[1] is test-trait;

[15:39] <camelia> rakudo-moar 3235f3e42: OUTPUT: «[]␤(Array)␤»

[15:40] <hythm> is it expected that the shaped array one is a type object?

[15:40] *** tejr left
[15:42] <lizmat> m: multi trait_mod:<is>( Variable:D \v, :$test-trait ) { say v.VAR }; my @a is test-trait; my @b[1] is test-trait;

[15:42] <camelia> rakudo-moar 3235f3e42: OUTPUT: «Variable.new(name => "\@a", scope => "my", var => [], block => -> gnatur { #`(Block|75421824) ... }, slash => Perl6::Grammar.new() #`[140692827339688], implicit-lexical-usage => Bool::True)␤Variable.new(name => "\@b", scope => "my", var => Array, bl…»

[15:42] *** tejr joined
[15:42] <lizmat> did you intend to call the lowercase .var ?

[15:44] <hythm> I did

[15:46] <hythm> lizmat: in fact I was trying to understand an issue I'm seeing when passing a shaped array to  Array::Circular

[15:46] <hythm> the issue is it complains that the shaped array is a type object.

[15:46] *** tgt89 joined
[15:48] *** tgt89 left
[15:48] <hythm> m: use Array::Circular; my @a[1] is circular(2); # Cannot use 'does' operator on a type object Array.

[15:48] <camelia> rakudo-moar 3235f3e42: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Could not find Array::Circular in:␤    inst#/home/camelia/.raku␤    inst#/home/camelia/rakudo-m-inst-1/share/perl6/site␤    inst#/home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    inst#/home/c…»

[15:48] *** tgt joined
[15:48] <lizmat> interesting  :-)

[15:49] <lizmat> hythm: I assume the size would be the size of the shaped array, and it should only allow 1-dimensional shaped arrays, right >

[15:49] <lizmat> ?

[15:49] <hythm> correct. the 2 is a typo, i meant 1

[15:50] <lizmat> I guess on a shaped array, we should be able to drop the size in the trait

[15:51] <lizmat> aka: my @a[42] is circular

[15:59] *** ManifestO left
[16:02] *** Manifest0 joined
[16:07] <hythm> That would be better, since the size will be determined by the array shape anyway

[16:26] <lizmat> yeah

[16:26] <lizmat> but that means an entirely different logic

[16:27] <lizmat> will need to think about that

[16:33] <lizmat> as shifting / splicing a shaped array is impossible at the nqp level

[16:34] <lizmat> so push would mean iterating over the array and moving up all of the values by index

[16:34] <lizmat> which would be.... slopw

[16:34] <lizmat> *slow

[16:35] <lizmat> so maybe it would be better to disallow "is circular" on shaped arrays altogether

[16:35] <lizmat> because it wouldn't bring you anything semantically, and only cost you in performance

[16:40] *** guifa2 joined
[16:40] <hythm> understood. but is there any explanation to the error above? or whey is it assuming the the shaped array is a type obejct inside the trait-sub?

[16:41] *** Some-body_ joined
[16:43] *** DarthGandalf left
[16:43] *** Some-body_ is now known as DarthGandalf

[16:44] <hythm> s/trait-sub/trait_mod sub/

[17:03] <lizmat> hythm: no idea yet

[17:05] <hythm> Thanks lizmat, If you think this is a bug let me know and I can create an issue

[17:05] <lizmat> creating an issue would help preventing this falling through the cracks  :-)

[17:06] <hythm> and this would go to Rakudo or Array::Circular?

[17:07] <lizmat> actually, both

[17:07] <lizmat> Array::Circular because it doesn''t support shaped arrays

[17:07] <lizmat> and Rakudo because it passes a type object to the trait_mod

[17:07] <hythm> got it, thanks

[17:07] <lizmat> thank you!

[17:08] *** kerframil joined
[17:09] <El_Che> rakudo-pkg for 2020.02 released: https://github.com/nxadm/rakudo-pkg/#os-repositories

[17:22] *** brtastic joined
[17:29] *** dataange` joined
[17:31] *** dataangel left
[17:31] *** dataangel joined
[17:35] *** dataange` left
[17:36] *** dataange` joined
[17:38] *** dataange` left
[17:39] *** dataangel left
[17:44] *** sam84 joined
[17:44] <sam84> commit: releases  my Real @test = 0.1, 0.2;

[17:45] <committable6> sam84, ¦releases (51 commits): «»

[17:52] *** Sgeo joined
[17:59] <sam84> commit: HEAD  https://gist.githubusercontent.com/sthiriet/8f09c8d0875c064612b11eb76254da2b/raw/4ad818b81b1903f9ecd28c7e8cea0f1c319cb89a/gistfile1.txt

[17:59] <committable6> sam84, Successfully fetched the code from the provided URL

[17:59] <committable6> sam84, ¦HEAD(8507178): «[0.005 0.01 0.025 0.05 0.075 0.1 0.25 0.5 0.75 1 2.5 5 7.5 10 Inf]␤»

[18:00] *** tgt left
[18:00] <sam84> commit:  2020.01  https://gist.githubusercontent.com/sthiriet/8f09c8d0875c064612b11eb76254da2b/raw/4ad818b81b1903f9ecd28c7e8cea0f1c319cb89a/gistfile1.txt

[18:00] <committable6> sam84, Successfully fetched the code from the provided URL

[18:00] <committable6> sam84, ¦2020.01: «Type check failed in assignment to @!bucket-bounds; expected Real but got List ($(0.005, 0.01, 0.025,...)␤  in block <unit> at /tmp/Vibl6Ck0_Z line 6␤␤ «exit code = 1»»

[18:01] <sam84> commit:  releases  https://gist.githubusercontent.com/sthiriet/8f09c8d0875c064612b11eb76254da2b/raw/4ad818b81b1903f9ecd28c7e8cea0f1c319cb89a/gistfile1.txt

[18:01] <committable6> sam84, Successfully fetched the code from the provided URL

[18:01] *** Altai-man_ left
[18:01] <committable6> sam84, https://gist.github.com/ad4099e4014d98d80ae532c7216087db

[18:01] *** tgt joined
[18:02] *** brtastic left
[18:03] *** sena_kun joined
[18:07] *** monkey__ joined
[18:11] <sam84> commit:  releases  https://gist.githubusercontent.com/sthiriet/8f09c8d0875c064612b11eb76254da2b/raw/4ad818b81b1903f9ecd28c7e8cea0f1c319cb89a/gistfile1.txt

[18:11] <committable6> sam84, Successfully fetched the code from the provided URL

[18:11] <committable6> sam84, https://gist.github.com/fa0a2f916022885082b0cf9bfcd8b9b0

[18:12] *** DinoAllo left
[18:13] <sam84> commit:  2020.01  https://gist.githubusercontent.com/sthiriet/8f09c8d0875c064612b11eb76254da2b/raw/4ad818b81b1903f9ecd28c7e8cea0f1c319cb89a/gistfile1.txt

[18:13] <committable6> sam84, Successfully fetched the code from the provided URL

[18:13] <committable6> sam84, ¦2020.01: «Type check failed in assignment to @!bucket-bounds; expected Real but got List ($(0.005, 0.01, 0.025,...)␤  in block <unit> at /tmp/avchvWE5my line 6␤␤ «exit code = 1»»

[18:14] *** DinoAllo joined
[18:18] <sam84> commit: 2020.01 https://gist.githubusercontent.com/sthiriet/8f09c8d0875c064612b11eb76254da2b/raw/9ecc6fbf494578d8cd40ff61cf43033325039c1b/gistfile1.txt

[18:18] <committable6> sam84, Successfully fetched the code from the provided URL

[18:18] <committable6> sam84, ¦2020.01: «[0.1 0.2]␤[0.005 0.01 0.025 0.05 0.075 0.1 0.25 0.5 0.75 1 2.5 5 7.5 10 Inf]␤»

[18:21] *** Geth joined
[18:21] *** monkey__ left
[18:23] *** DinoAllo left
[18:27] *** jmerelo joined
[18:36] *** DinoAllo joined
[18:41] *** _jrjsmrtn joined
[18:41] *** __jrjsmrtn__ left
[18:46] <guifa2> El_Che: 2020.02 or 2021.02 ?

[18:46] <tellable6> hey guifa2, you have a message: https://gist.github.com/796981bd2e5731d4078d6624b277bce2

[18:52] <SmokeMachine> lizmat: I think I should have written a better read me before twitting about that…

[18:53] <lizmat> yeah, better readme's help  :-)

[18:53] *** gnufr33dom left
[18:54] <El_Che> guifa2: good catch :)

[18:55] <guifa2> El_Che: the first updates from the Perl steering committee kept referring to 2020.  Like the first three or four them.  I was like, great start guys, still in 2020 ;-)

[18:55] <lizmat> .oO( that's all easy, in 2020 hindsight :-)

[18:56] <SmokeMachine> lizmat: but the idea there was to be an example of how to use Red…

[18:57] <lizmat> I understand the idea, but I didn't see it in the link given: as a noob, all I saw was a repo of someone with a README that has a usage: in it

[18:57] <lizmat> no goal of the repo, no clear examples at first sight

[18:57] <El_Che> guifa2: upated the tag :)

[18:58] *** kst` left
[19:00] <guifa2> Is there a way to get the version of a package?  Or does that need to be provided manually by it (via a .version or similar method)

[19:00] <SmokeMachine> lizmat: yes, makes sense.. I thought the usage would be enough to show someone where to look on the code…

[19:00] *** dataangel joined
[19:04] *** wamba joined
[19:05] *** tgt left
[19:06] *** Garbanzo joined
[19:12] *** brtastic joined
[19:21] *** gnufr33dom joined
[19:21] *** sam84 left
[19:31] *** tgt joined
[19:49] *** mowcat joined
[19:56] *** RaycatWhoDat left
[19:57] *** RaycatWhoDat joined
[20:03] *** oneeggeach joined
[20:03] *** mowcat left
[20:04] *** mowcat joined
[20:10] *** finsternis joined
[20:15] *** kerframil left
[20:16] *** kerframil joined
[20:19] *** kerframil left
[20:35] *** brtastic left
[20:35] *** RaycatWhoDat left
[20:47] *** rindolf left
[20:50] *** spycrab0 left
[20:51] *** mithaldu_ left
[20:52] *** mithaldu_ joined
[20:52] *** spycrab0 joined
[20:52] *** Grinnz left
[20:53] *** Grinnz joined
[21:08] *** oneeggeach left
[21:08] *** oneeggeach joined
[21:08] *** oneeggeach left
[21:08] *** oneeggeach joined
[21:08] *** oneeggeach left
[21:08] *** oneeggeach joined
[21:09] *** oneeggeach left
[21:09] *** oneeggeach joined
[21:09] *** oneeggeach left
[21:09] *** oneeggeach joined
[21:09] *** oneeggeach left
[21:09] *** oneeggeach joined
[21:10] *** oneeggeach left
[21:10] *** gnufr33dom left
[21:10] *** oneeggeach joined
[21:10] *** oneeggeach left
[21:10] *** oneeggeach joined
[21:10] *** oneeggeach left
[21:11] *** oneeggeach joined
[21:11] *** oneeggeach left
[21:11] *** oneeggeach joined
[21:11] *** oneeggeach left
[21:11] *** oneeggeach joined
[21:11] *** oneeggeach left
[21:12] *** oneeggeach joined
[21:12] *** oneeggeach left
[21:12] *** oneeggeach joined
[21:12] *** oneeggeach left
[21:12] *** gnufr33dom joined
[21:12] *** oneeggeach joined
[21:13] *** oneeggeach left
[21:13] *** oneeggeach joined
[21:13] *** oneeggeach left
[21:13] *** oneeggeach joined
[21:13] *** oneeggeach left
[21:13] *** oneeggeach joined
[21:14] *** oneeggeach left
[21:14] *** oneeggeach joined
[21:14] *** oneeggeach left
[21:14] *** oneeggeach joined
[21:14] *** oneeggeach left
[21:15] *** oneeggeach joined
[21:15] *** oneeggeach left
[21:15] *** oneeggeach joined
[21:15] *** oneeggeach left
[21:16] *** oneeggeach joined
[21:20] *** gnufr33dom left
[21:21] *** oneeggeach left
[21:25] *** gnufr33dom joined
[21:29] <JJAtria[m]> guifa: I think .^ver should work

[21:29] <JJAtria[m]> https://docs.raku.org/type/Metamodel::Versioning#method_ver

[21:29] <JJAtria[m]> guifa2 ^

[21:37] *** oneeggeach joined
[21:39] *** Kaiepi left
[21:42] *** raiph joined
[21:59] *** tgt left
[22:01] *** tgt joined
[22:02] *** tgt left
[22:03] *** tgt joined
[22:05] <raiph> cf https://stackoverflow.com/questions/66286010/whats-the-protocol-for-calling-raku-code-from-c-code

[22:05] <tellable6> hey raiph, you have a message: https://gist.github.com/2df2b610d31468f14963060f7bc06b87

[22:07] <raiph> Hi all

[22:07] *** Discipulus left
[22:08] <raiph> HåkonHægland's answer https://stackoverflow.com/a/66289340/1077672 shows Raku code being called from C.

[22:08] <raiph> It seems to work.

[22:10] <raiph> Yet after pointing that out to xentrunix, the poster of the Q, they have written "I made a simple question, "Is it possible to call Raku from C?" ... it seems it's not possible"

[22:10] *** hythm left
[22:12] <raiph> I have a couple questions related to this and am hoping folk here can comment.

[22:13] *** tgt left
[22:14] <raiph> (Perhaps a link to the questions I'm posing here could be added to the next Rakudo News?)

[22:15] <raiph> (And if there's substantive discussion related to them then a link to those could be added to the News after that?)

[22:15] <raiph> Q1. Are there any circumstances in which one can reliably call Raku code from C code?

[22:16] <raiph> In other words, does HåkonHægland's answer, which *appears* to work, actually work?

[22:20] <raiph> Q2. The accepted answer (by JJ) says "it's not possible". Doesn't that contradict HåkonHægland's answer?

[22:21] <raiph> Preamble to Q3:

[22:22] <raiph> zentrunix's question isn't complicated, but neither is their "simple question" as simple as they make it out to be.

[22:24] *** aborazmeh left
[22:25] <raiph> Their question is about asynchronous calling of Raku code from multi-threaded C code.  

[22:26] <raiph> Q3. Is their a reliable way to asynchronously call Raku code from multi-threaded C code?

[22:26] <raiph> Q4. Would jnthn's oo::monitors or oo::actors modules be relevant to this?

[22:28] <MasterDuke> i think you should ping nine (the author of inline::perl6) with these questions

[22:32] *** Kaiepi joined
[22:35] *** raiph74 joined
[22:36] *** raiph74 left
[22:36] *** tgt joined
[22:37] *** raiph left
[23:04] *** raiph joined
[23:05] <raiph> MasterDuke: thx :)

[23:08] <raiph> .ask nine MasterDuke suggested I ask you https://colabti.org/irclogger/irclogger_log/raku?date=2021-02-21#l329

[23:08] <tellable6> raiph, I'll pass your message to nine

[23:09] <leont> It sounds like the kind of thing that requires deep moarvm knowledge

[23:09] <raiph> nine: tia for any comments

[23:12] *** tgt left
[23:12] <raiph> leont: Perhaps not for my Q1?

[23:13] *** gnufr33dom left
[23:14] <raiph> And perhaps not for Q4?

[23:19] <SmokeMachine> lizmat: I know it's still far from good, but is it any better? https://github.com/FCO/BlogSchema

[23:20] <lizmat> a bit better, but it doesn't tell what BlogSchema actually *is*

[23:20] <lizmat> "It uses a few models to describe a DB schema for a blog."  is that what it is?

[23:21] <SmokeMachine> lizmat: good idea!

[23:23] *** raiph left
[23:32] <SmokeMachine> lizmat: better now?

[23:33] <SmokeMachine> lizmat: https://github.com/FCO/BlogSchema

[23:38] *** tgt joined
[23:38] *** tgt left
[23:40] * lizmat looks

[23:40] <lizmat> s/It do not serves/It does not serve/

[23:42] <lizmat> s/It's only/It only creates the database schema and provides introspection into the database/ ?

[23:42] *** raiph joined
[23:42] *** wamba left
[23:46] <raiph> SmokeMachine: s/throw/through/g

[23:47] <raiph> SmokeMachine: But now I know what it is. :)

[23:48] <SmokeMachine> fixed! thanks!

[23:50] <SmokeMachine> raiph: that's too hard to me: throw	/θrəʊ/; through	/θruː/

[23:51] *** k-man joined
[23:51] <SmokeMachine> I'll still, someday, learn how to speak english! :)

[23:51] <raiph> We pronounce it thru

[23:52] <raiph> While I was in the US I often spelled it that way too

[23:52] <raiph> ooh, through rhymes with too too

[23:53] <SmokeMachine> lizmat, raiph: do you guys think there are more stuff I should add?

[23:53] <raiph> throw rhymes with toe or so

[23:53] <raiph> SmokeMachine: I think it's good to go

[23:54] <raiph> i'm in a poetic mood, ya know?

[23:54] <SmokeMachine> raiph: yes, u: and əʊ... for me u: and ʊ sounds very near...

[23:55] <raiph> and the strongest influence on learning words is sounding them out 

[23:55] <SmokeMachine> (I really like IPA (the phonetic alphabet and the beer)... it really helps me)

[23:55] <raiph> ha! great combo!

[23:57] <SmokeMachine> raiph: https://tophonetics.com

[23:57] <SmokeMachine> ^^ helps me a lot

