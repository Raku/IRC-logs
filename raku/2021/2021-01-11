[00:03] *** kvw_5 joined
[00:10] *** Garbanzo joined
[00:12] *** Garbanzo left
[00:16] *** stoned75 left
[00:18] *** lancew joined
[00:22] *** bigdata left
[00:24] *** bigdata joined
[00:24] *** lucasb left
[00:25] <guifa2> notagoodidea: probably TensorFlow but that project is still a ways off 

[00:26] <bigdata> Why is tensorflow the new hotness?

[00:33] *** notagoodidea left
[00:35] *** pecastro left
[00:55] <guifa2> As with many things, massive support from a massive company probably lol

[01:02] *** Garbanzo joined
[01:17] *** thundergnat left
[01:32] *** tejr joined
[01:44] *** jmchael left
[01:50] *** parabolize left
[01:51] *** parabolize joined
[01:53] <Xliff> Does tensorflow have a C API?

[01:53] <Xliff> Answer: yes... it does

[02:02] <guifa2> Yeah, and they recommend linking to that for any new bindings from what I cna see

[02:02] <guifa2> I probably won't mess with it until after next summer — COVID put a stop to my archive visits, so gigantic pause on my ground truth data collection

[02:03] <Xliff> guifa: Wanna collab on a Raku binding?

[02:03] <Xliff> guifa2: Also... did you get a chance to look up that slang?

[02:04] <guifa2> Xliff not yet, sorry, I got massively distracted haha.  About to eat dinner, and then I'll look at it

[02:05] <guifa2> But always up for collaboration.  

[02:05] <Xliff> guifa2: LOL!

[02:05] <Xliff> guifa2: OK. Well, let me know. I've done quite a few of these.

[02:05] <Xliff> (language bindings)

[02:06] <Xliff> Unfortunately, none I've released since I don't think default zef gives enough user feedback

[02:06] <Xliff> Even with the new parallel precompiling, it will take a LONG time compared to most modules in the ecosystem.

[02:07] <Xliff> BTW - Does anyone know of a good geo visualization tool for jupyter notebooks?

[02:07] <Xliff> I'd like to be able to port one of the Python ones to Raku

[02:07] <guifa2> FWIW, when I run CLDR's preprocessor, it takes about 4 hours

[02:07] <guifa2> And that's with me running it in four pieces, so really it's about a 16 hour process

[02:08] <Xliff> Things like making decent heat maps and scatter plots on a map.

[02:08] <guifa2> (it's almost 100% because of the glacially slow XML, as opposed to Lib::XML module, that I used, though)

[02:09] <guifa2> I'd love to get some good visualization libraries.  Especially with a very extensive PDF module

[02:09] <guifa2> (dwarren has been extremely productive on the latter)

[02:35] <melezhik> .tel JRaspass I wonder how long does it take for raku.land to index a new version of a module, Sparky new version 0.30.0 is already seen on modules.raku.org ...

[02:35] <melezhik> .tell JRaspass I wonder how long does it take for raku.land to index a new version of a module, Sparky new version 0.30.0 is already seen on modules.raku.org ...

[02:35] <tellable6> melezhik, I'll pass your message to JRaspass

[02:36] <JRaspass> it takes me to run make ingest, i'm working on gitlab ci to run it periodically so the logs would be public

[02:38] <JRaspass> hah nice graphic, i shall have to have a think about the css - https://raku.land/cpan:MELEZHIK/Sparky

[02:43] *** kvw_5_ joined
[02:46] *** kvw_5 left
[02:48] <melezhik> JRaspass, thanks. you can take a look at bulma css framework, it's used in sparky ...

[02:48] <JRaspass> its okay, i think i have a fix now, pushing

[02:49] <melezhik> JRaspass mardown parser on raku.land is really nice !

[02:49] <JRaspass> that's all ruby :-P

[02:50] <JRaspass> commonmarker and rouge

[02:50] <melezhik> oh, oh , I did not hear that :')  and won't tell any one ...

[02:51] <JRaspass> need to work out a csp policy since this is UG content, I wonder if anyone would be mad enough to embed a video in their markdown...

[02:51] *** dataangel left
[02:52] <melezhik> ha-ha )))

[02:52] <melezhik> so, you're even ready for that ? ...

[02:53] <JRaspass> atm its the wild west, anything in the markdown is allowed, i think its sane to restrict imgs to https and disallow everything else probably

[02:53] <melezhik> yeah ...

[02:54] <JRaspass> anyways it should look a little better now, its still a smidge too wide on mobile though, ta for the test case

[02:55] <guifa2> Xliff: so first thing that gets me a bit farther is switching to term from statement_control

[02:56] <guifa2> that was one of the biggies that was throwing me off with binex

[02:59] *** melezhik left
[03:00] *** melezhik joined
[03:01] <guifa2> Xliff: second thing, make sure that the sub that you're calling is exported into the same scope

[03:03] <guifa2> For some weird reason, it doesn't a namespaced sub (at least, I dunno how to export those correctly), so at the end of the EXPORT sub include a Map.new: '&new-name' => &new-name;

[03:03] <guifa2> lastly, the xpath token needs to be $<xpathS>=.+?, else you'll gobble right past the closing | :-)

[03:28] *** melezhik left
[03:37] *** bigdata left
[03:38] <Xliff> Hummm...

[03:42] <guifa2> Once I did those changes, btw, it compiled and ran fine (with False True False as the three values)

[03:42] <Xliff> So... term:sym?

[03:43] <guifa2> token term:sym<xpath> { <sym> '|' $<xpathS>=.+? '|' } 

[03:43] <guifa2> ^^ what I used

[03:43] <Xliff> Cool, thanks!

[03:44] <guifa2> obviously, if 'I' is a valid character in the path, you'll eventually want to figure out your quoting construct

[03:44] <Xliff> Yeah. I know.

[03:44] <Xliff> Huh...

[03:45] <Xliff> "Cannot find method 'has_compile_time_value' on object of type MQPMu"

[03:45] <guifa2> I think that was from the exported sub issue

[03:45] <Xliff> Oh wow.

[03:45] <guifa2> so I changed your sub to

[03:45] <guifa2>     sub xpslang-xp (Str $a) { $a does RevAccept }

[03:46] <guifa2> sub EXPORT() { …………… Map.new: '&xpslang-xp' => &xpslang-xp; }

[03:46] <guifa2> and in the QAST::Op, used ':name<&xpslang-xp>,'

[03:47] <guifa2> brilliant debugging thing I found for slangs — normal 'say' tends to bomb pretty gloriously BUT say $*ERR, "foo", does output, so you can, at the very least, figure out when an error is, even if you get a cryptic one

[03:47] <Xliff> guifa2++

[03:47] <Xliff> Did you do this in a repl?

[03:48] <guifa2> No... I inserted the stuff into my own binex file, but I can toss it in a gist for you

[03:48] <Xliff> Still getting that error after changes.

[03:48] <Xliff> guifa2: Please do.

[03:50] <guifa2> https://gist.github.com/alabamenhu/1b502c4ad8b4fa26c30f858e32e44938

[03:51] <guifa2> Oh, I think also then $/.'make' had to change to $/.make

[03:51] <Xliff> Still same. Weird.

[03:52] <guifa2> slang stuff is suuuuper finicky

[03:52] <Xliff> Yeah. Was hoping it had gotten a little more user friendly.

[03:53] <guifa2> I just updated the gist

[03:53] <guifa2> cut out all of the binex stuff

[03:53] <guifa2> Try copying and pasting and see if it works?

[03:55] <Xliff> ok.

[03:56] <Xliff> Yeah. Works now. 

[03:56] <Xliff> Thanks!!

[03:56] <guifa2> np.  It's crazy because I literally just got it to work like two days ago

[03:57] <guifa2> but mine is complex enough I think I'll still probably wait until I RakuAST

[03:57] <Xliff> Yeah. Same here. 

[03:57] <Xliff> I'm trying to see if I can create something for LibXML

[03:57] <Xliff> xpath literals so that you can do $node ~~ <xpath expr>

[03:58] <Xliff> Instead of the other way around.

[03:58] <guifa2> ah nice

[03:58] <guifa2> That should be fairly simple then

[04:00] <guifa2> binex is already working just fine for me — but allowing someone to switch into a Raku block and interpolating variables is less than perfect because I can't actually compile the blocks except via EVAL at runtime, which doesn't run in the right context then.

[04:02] <Xliff> Yeah. RakuAST for sure, then.

[04:02] <Xliff> Wonder how much jnthn++ has left to do?

[04:03] <guifa2> Not sure.  I know before he took a break he was estimating finishing it around now, so maybe summer?

[04:03] <guifa2> I wish I knew more of what's left to be done and I'd dive in to help

[04:14] <guifa2> ugh I dunno how much detail to go into for my FOSDEM talk.  What are the things folks consider important in a high quality module with respect to how an end user uses them?

[04:17] *** BenGoldberg left
[04:17] *** Ben_Goldberg joined
[04:17] *** Ben_Goldberg is now known as BenGoldberg

[04:20] *** __jrjsmrtn__ joined
[04:21] *** _jrjsmrtn left
[04:30] *** Black_Ribbon joined
[04:35] <Xliff> guifa2: Hmmm,....

[04:35] <Xliff> guifa2: Intuitiveness (Ease of use). Good documentation. Code Hygiene?

[04:45] <guifa2> Intuitiveness is what I'm really looking at

[04:46] <guifa2> basically, how do you bend Raku (from a module developer side of things) to do amazing things that feel virtually built in

[04:47] *** sno joined
[04:47] <guifa2> a few of the initial things (before the how-to part) is optional parentheses so that subs, methods, and control statements can masquarade as each other fairly easily

[04:48] <guifa2> and the fact that simple blocks are objects, you can quickly make, e.g. your own loop statement

[04:49] *** cpage_ joined
[04:49] <Xliff> All good things.

[04:50] <Xliff> Another: Try to keep to the OO methodology as much as possible. This applies more to interoperability with other languages like C than anything else.

[04:50] <Xliff> If you keep everything to objects, it will fit easily into Raku.

[04:52] *** cpage left
[04:52] *** cpage_ is now known as cpage

[04:53] <guifa2> Xliff take a look at this: 

[04:53] <guifa2> https://tio.run/##ZZBNasMwEIX3OsUQQrGb2CSbLGKyKCGQQleli24da0IF8sjoh7gI36Vn6cVcSQ2p2y4EmjfvzXxMh1puxrGRtTHwut0eiD8p1YEwcOgb7KxQBP7zY2DMuBMg8UJY8AyAC5wESsJLxa6uRjmyhQxydqcdFS3mKdK@w/w@CskAO1hVQd0/vOyP4CF8AS5vSFMODxqt0/QrOARrfH6qLhZLmMedRUDI8iHLoe/hkc5xx/8hCZZFolQiT7yB6eQaiTdcXRNXbZCzdVmuV3mplZRxoqlv3VheDyPOP5EdbL4vEpyz55r@bLKiRTOrxvEL

[04:54] <guifa2> errr

[04:54] <guifa2> I only half renamed to English

[04:54] <Xliff> :)

[04:54] <Xliff> Got an error in it.

[04:54] <Xliff> Variable $loop-sub not declared

[04:54] <guifa2> https://tio.run/##ZZBBasMwEEX3PsUnhGI3sUk2WcRkUUKgha5KF926lkIF8shIMnERvkvP0ou5khISt10MaP78P/NQy7XcjGMtK2Pwtt0eiD0r1UIYHPqat1Yogvv@GpLEdO/gxHJh4RKACT4JFMRPZXJx1aojm0svp3e6o7zhWYw0n5jfByEasMOq9Or@4XX/CAf/BE4fnKYcDprbTtOv4OCtodxUXSyWOB9LMwy@@h5PdAwX/q@IqEngiS1nkdYT3dCvxLoipho/S9dFsV5lhVZShrWmuk5De/kbcbxFdticP8U7Zy8V/TlnRcPNrBzHHw

[04:55] <guifa2> Custom loop that exits with the number of times it was run.  In vanilla Raku.

[04:55] <guifa2> and of course, the fact that it's done with a sub and not a control statement means nothing to the end user

[04:55] <Xliff> Yep. I like that.

[05:07] <elcaro> guifa2: any reason for the dynamic var and custom exception? this seems to work fine

[05:07] <elcaro> https://tio.run/##XY5LCoMwEIb3OcUgpSSIQTdugpfoDdKagpCH5LEQ8expEksNnd3M/818sworxxhdeMLLBO07acyK7zboTgkCO4JUaoNbnhQCJuhZGWcU9ipqWwbnJiZwFMYKH6yuGIYOhPLB0om5CNPNy15LuZ6NSikeKB16Qq2R8pQ7/su/33DnYXlfSxOMRZbJ5sH1n9IvSriGxfgB

[05:10] <Xliff> elcaro: The point was to not need "last" but something he could define on his own.

[05:13] <Xliff> BBL!

[05:14] *** Xliff left
[05:42] *** BenGoldberg left
[05:48] <guifa2> elcaro ^^ what Xliff said.  Although also because I didn't know that end worked outside in callee scopes too ^_^ 

[05:49] <guifa2> (dynamic value was needed because of scoping with the CATCH blocks)

[05:55] *** brtastic joined
[05:59] <guifa2> hmm

[05:59] <guifa2> so apparently back in the day inline/multiline comments were going to be #[ … ] or #( … )

[05:59] <guifa2> I wonder why they were changed to include the backtick

[06:09] *** jmerelo joined
[06:10] <jmerelo> releasable6: status

[06:10] <releasable6> jmerelo, Next release in ≈12 days and ≈12 hours. 1 blocker. Changelog for this release was not started yet

[06:10] <tellable6> 2021-01-08T16:19:56Z #raku <[Coke]> jmerelo - good catch on your comment about the metamodel tests, it's probably a recent rakudo bug.

[06:10] <tellable6> 2021-01-08T16:36:48Z #raku <tony-o> jmerelo should be able to reset your password now 

[06:10] <tellable6> 2021-01-08T22:21:39Z #raku <tony-o> jmerelo https://github.com/Raku/doc/pull/3771/commits/9b94ae7c27dd5f4a6a5be4429bbc23c8454bf76a

[06:10] <releasable6> jmerelo, Details: https://gist.github.com/6e310569d866068914555d34f6590864

[06:12] <jmerelo> .tell [Coke] thanks!

[06:12] <tellable6> jmerelo, I'll pass your message to [Coke]

[06:12] <jmerelo> .tell tony-o thanks!

[06:12] <tellable6> jmerelo, I'll pass your message to tony-o

[06:23] <Geth> ¦ doc: 70ac293f76 | (JJ Merelo)++ | 3 files

[06:23] <Geth> ¦ doc: Eliminates travis, stoned++, closes #3777

[06:23] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/70ac293f76

[06:23] <linkable6> DOC#3777 [closed]: https://github.com/Raku/doc/issues/3777 [docs] We need to speed up tests or otherwise reduce dependence on Travis

[06:25] <Geth> ¦ doc: 9f714bc01d | (JJ Merelo)++ | .github/workflows/test.yml

[06:25] <Geth> ¦ doc: Qualify with paths

[06:25] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/9f714bc01d

[06:37] *** parabolize left
[06:40] *** Sgeo left
[06:42] * guifa2 waves at jmerelo 

[06:45] *** Sgeo joined
[06:47] <jmerelo> Hey, guifa2 

[06:47] <jmerelo> guifa2: I need to set up github actions for the ecosystem along this week so that your module can be published.

[06:47] <guifa2> Was going to ask if there was anything I can do to help with getting Travis back online

[06:48] <guifa2> Happy to donate some cash if it's something that money can fix lol

[06:49] <jmerelo> guifa2: there's a paid plan for Travis, but it's 69$ a month and it would only cement our dependency on it

[06:49] <guifa2> oh yikes, they don't have anything.... I dunno....between a free and XXX price?

[06:49] <jmerelo> guifa2: plus we kind of feel a bit ripped off. So this is kind of a blackmail.

[06:50] <jmerelo> guifa2: they had 10k free credits for OSS, and we got 20k additional. But I naïvely though that was something that would be replenished in time. It was not.

[06:50] <guifa2> aah

[06:51] <jmerelo> Anyway, I think it's a good thing to overhaul CI. We were burning minutes like there's no tomorrow. Not so long ago (until I started to deploy containers, and El_che started to create packages) people were compiling Raku every single CI run

[06:52] <guifa2> yikes

[06:52] <jmerelo> That made no sense. 

[06:52] <jmerelo> That's still done in Travis in nqp, btw. And possibly in the other CIs.

[06:58] <guifa2> I'm about to add another module to the ecosystem haha but I'll hold off until you get something set up

[06:58] <jmerelo> guifa2: thanks :-) 

[06:59] <jmerelo> guifa2: Remember you need to have your video for FOSDEM ready soonish

[06:59] <guifa2> Yeah been working on it

[06:59] * guifa2 points to irclog where he was talking to Xliff about it :-)

[06:59] <jmerelo> guifa2: :-) great.

[07:25] *** ufobat_ joined
[07:35] *** sno left
[07:37] *** elcaro joined
[07:37] *** rindolf joined
[07:39] *** sno joined
[07:44] <guifa2> New module!

[07:44] <guifa2> https://github.com/alabamenhu/IntlTokenNumber

[07:45] <jmerelo> guifa2: cool :-)

[07:45] <guifa2> (well, only semi new, it was hiding away in Intl::CLDR for a while, but now it's independent and retooled to work with the newest Intl::CLDR)

[07:48] *** abraxxa1 joined
[07:48] <jmerelo> guifa2: cool anyway

[07:52] *** abraxxa1 left
[07:53] *** abraxxa1 joined
[07:58] *** domidumont joined
[07:59] *** stoned75 joined
[08:01] *** guifa2 left
[08:02] *** guifa2 joined
[08:09] *** aborazmeh joined
[08:09] *** aborazmeh left
[08:09] *** aborazmeh joined
[08:12] *** Manifest0 left
[08:14] *** mark[m]2 left
[08:16] *** guifa2 left
[08:21] *** cpan-raku left
[08:21] *** Manifest0 joined
[08:21] *** cpan-raku joined
[08:21] *** cpan-raku left
[08:21] *** cpan-raku joined
[08:23] *** Sgeo left
[08:33] *** BenGoldberg joined
[08:51] *** pecastro joined
[08:51] *** aborazmeh left
[08:56] *** dakkar joined
[09:06] *** Altai-man joined
[09:10] *** sjm_uk joined
[09:21] *** notagoodidea joined
[09:22] *** dogbert11 joined
[09:37] *** cgfbee left
[09:43] *** thdrmz left
[09:44] *** cgfbee joined
[09:49] <notagoodidea> I have been looking at MAIN.pm6 in the rakudo source (core.c) and I am not sure to understand the why of this part of the regex matching for named arguments `([<-[0..9\.]> .*)` (https://github.com/rakudo/rakudo/blob/65a5cce11cfeacfdb1cbc07fc4d486e13cea07b5/src/core.c/Main.pm6#L96)

[09:50] <notagoodidea> hum misquoted the part : `(<-[0..9\.]> .*) I understand the catch all part but what about the <-[0..9\.]> ?

[09:50] *** jmchael joined
[09:53] *** guifa2 joined
[09:54] *** guifa2 left
[09:54] <notandinus> notagoodidea:  i think '-' in <-[]> negates things in '[]'

[09:54] <tellable6> 2021-01-08T22:44:02Z #raku <notagoodidea> notandinus another way to call USAGE with the empty parameters is to use proto in this fashion `proto MAIN (|) {unless so @*ARGS {say $*USAGE; exit;}; {*}}` 

[09:54] <notandinus> not sure, letme check

[09:55] *** cgfbee left
[09:57] *** cgfbee joined
[09:57] <MasterDuke> yeah

[09:57] <notandinus> https://docs.raku.org/language/regexes#index-entry-regex_%3C[_]%3E-regex_%3C-[_]%3E-Enumerated_character_classes_and_ranges

[09:58] <notandinus> notagoodidea: i see, thanks 

[10:04] *** wamba joined
[10:13] <notagoodidea> notandinus: oh I see.

[10:14] <notagoodidea> So it matches on everything but the first character must not be a number or a dot?

[10:17] <notandinus> notagoodidea: yeah, that's what i understand

[10:17] <notandinus> note that i don't know much about raku or regex things, might be wrong

[10:18] <notandinus> m: say "hi" ~~ /<-[0..9]\.> .*/

[10:18] <camelia> rakudo-moar 9894af71e: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in metachar:sym<assert>; couldn't find final '>' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3say "hi" ~~ /<-[0..9]7⏏5\.> .*/␤    expecting any of:␤…»

[10:18] <notagoodidea> m: say "hi" ~~ / <-[0..9\.]> .*/

[10:18] <camelia> rakudo-moar 9894af71e: OUTPUT: «｢hi｣␤»

[10:18] <notagoodidea> m: say "3" ~~ / <-[0..9\.]> .*/

[10:18] <camelia> rakudo-moar 9894af71e: OUTPUT: «Nil␤»

[10:19] <notagoodidea> m: say "3=foo" ~~ / <-[0..9\.]> .*/

[10:19] <camelia> rakudo-moar 9894af71e: OUTPUT: «｢=foo｣␤»

[10:19] <notandinus> m: say "4hi" ~~ / <-[0..9\.]> .*/

[10:19] <camelia> rakudo-moar 9894af71e: OUTPUT: «｢hi｣␤»

[10:20] *** sena_kun joined
[10:20] <notagoodidea> m: say "--3=foo" ~~ /("-"|"--"|":") ("/"?) (<-[0..9\.]> .*)/

[10:20] <camelia> rakudo-moar 9894af71e: OUTPUT: «｢--3=foo｣␤ 0 => ｢-｣␤ 1 => ｢｣␤ 2 => ｢-3=foo｣␤»

[10:21] <notagoodidea> m: say "-3=foo" ~~ /("-"|"--"|":") ("/"?) (<-[0..9\.]> .*)/

[10:21] <camelia> rakudo-moar 9894af71e: OUTPUT: «Nil␤»

[10:21] <notagoodidea> m: say "--.=foo" ~~ /("-"|"--"|":") ("/"?) (<-[0..9\.]> .*)/

[10:21] <camelia> rakudo-moar 9894af71e: OUTPUT: «｢--.=foo｣␤ 0 => ｢-｣␤ 1 => ｢｣␤ 2 => ｢-.=foo｣␤»

[10:22] *** Altai-man left
[10:30] *** sno left
[10:38] <notandinus> how do i install rakudoc? 'zef install rakudoc' says no matching candidate found

[10:43] <moritz> there's a p6doc

[10:43] <moritz> dunno if that's the current one, or a very old, out-of-date copy :-)

[10:48] <notandinus> i see , it points to github.com/Raku/doc, must be the current one

[10:48] <notandinus> https://docs.raku.org/programs/02-reading-docs says to 'zef install rakudoc' 

[10:56] <CIAvash> It's on github, but doesn't appear on modules.raku.org: https://github.com/Raku/rakudoc

[10:58] <jmerelo> notandinus: p6doc is simply the documentation repo, which can't be installed anyway. rakudoc is not in the ecosystem, pending (for a year and a half) revision. For the time being, if you want the documentation you'd better use it online

[10:58] <jmerelo> notandinus: and we should probably eliminate that.

[10:59] *** jmerelo left
[11:01] *** sftp joined
[11:28] *** sno joined
[11:41] *** guifa2 joined
[11:42] *** guifa2 left
[11:46] *** PimDanie1 joined
[11:47] <PimDanie1> hi everybody,

[11:47] <PimDanie1> I'm searching an example to pass ioctl call with Raku.

[11:55] *** rindolf left
[11:56] <dakkar> ioctl is a pain… you can't (easily) get, from Raku, at the macros that make it barely-manageable in C

[11:56] <dakkar> also memory management is weird and specific to each call

[11:56] <PimDanie1> Hi dakkar.

[11:57] <PimDanie1> Thank you!

[11:57] <dakkar> sorry I can't actually be helpful, though

[11:57] <PimDanie1> I'm French, beware that i can make sense confusion.

[11:57] <dakkar> ok, simpler-english-version

[11:58] <dakkar> calling ioctl is complicated

[11:58] <dakkar> it's complicated in C as well

[11:58] <dakkar> but C preprocessor macros mask some of that complication

[11:58] <dakkar> in Raku, you can't easily access those macros

[11:58] <PimDanie1> Do you mean that i must call C routine compile in a C library?

[11:59] <dakkar> well, ioctl is a system call

[11:59] <PimDanie1> Do you mean it would be easier that way.

[11:59] <dakkar> you run system calls usually via C functions in libc

[11:59] <PimDanie1> Yes i agree.

[11:59] <PimDanie1> hum:

[12:00] <PimDanie1> What i attempt to do:

[12:00] <dakkar> if you can write C functions that call the ioctl in the way you need, compile them into a dynamic library, and then NativeCall your functions, you may have simpler problems

[12:00] <PimDanie1> ok i saw example and i can do that.

[12:01] <PimDanie1> I learned C language before.

[12:01] <PimDanie1> I'm just trying to pass ioctl for console control.

[12:01] <PimDanie1> For now i just make tests.

[12:02] <PimDanie1> I thing the best would be to reduce primitive action on C side. For just my needs.

[12:02] <PimDanie1> primitive actions

[12:03] <dakkar> yes

[12:03] <PimDanie1> The problem beeing some data will be retured packed.

[12:03] <PimDanie1> and i saw that unpack is experimental in Raku! Yes/No?

[12:04] <dakkar> I suggest you copy the data from the ugly structures that ioctl uses, into sensible structures you define, in your C code

[12:04] <dakkar> then you can use NativeCall to map those structs to raku classes

[12:05] <PimDanie1> Ok. I need to put example but my consoles are in desordered.

[12:07] <PimDanie1> #!/usr/local/bin/perl6

[12:07] <PimDanie1> my $struct;

[12:07] <PimDanie1> constant TIOCGWINSZ = 0x5413;  

[12:07] <PimDanie1> ioctl stdout,TIOCGWINSZ, $struct;

[12:08] <PimDanie1> this call should return the lines and cols.

[12:08] <PimDanie1> ho ok i understand.

[12:09] <PimDanie1> I think c function in this case should return one or 2 integers.

[12:09] <PimDanie1> Not sure i can return 2 integers in C.

[12:10] <PimDanie1> I think i'll find a solution.

[12:10] <PimDanie1> Thank you very much dakkar.

[12:10] <dakkar> C can only return 1 simple value, you need to either receive a pointer to a struct and fill it, or allocate the struct and return a pointer to it

[12:11] <dakkar> (and then the caller has to `free` the struct, NativeCall may have some helpers for that)

[12:12] <PimDanie1> Ok so in this case use termio struct probably.

[12:13] <PimDanie1> why should'n i declare constant struct on C side? instead of alloc/free?

[12:13] <dakkar> because that's global shared mutable state

[12:13] <dakkar> and you don't want that

[12:14] <dakkar> raku is multi-threaded: what happens if two thread call your function at the same time?

[12:14] <PimDanie1> You can see that i think!

[12:14] <PimDanie1> ...

[12:15] *** notagoodidea left
[12:15] <PimDanie1> ok : i think i understand.

[12:17] <dakkar> ooh, fun, Gentoo Linux has /usr/lib64/libc.so as a text file

[12:18] <dakkar> anyway, lunchtime

[12:18] <PimDanie1> It depends where you leave! Bon appétit!

[12:19] *** PimDanie1 left
[12:22] *** thdrmz joined
[12:28] *** rindolf joined
[13:06] *** Black_Ribbon left
[13:15] *** xelxebar_ joined
[13:16] *** xelxebar left
[13:21] *** notagoodidea joined
[13:56] *** PimDanie1 joined
[14:00] *** JRaspass left
[14:01] *** PimDanie1 left
[14:02] *** tech_hutch joined
[14:19] *** Altai-man joined
[14:21] *** sena_kun left
[14:22] *** lucasb joined
[14:44] *** parabolize joined
[14:50] *** guifa2 joined
[14:56] <xinming_> when we do url encoding, I saw that   & will become %26    Is there a perl6 module for this purpose?

[14:59] <guifa2> https://github.com/raku-community-modules/URI-Encode

[15:00] *** Xliff joined
[15:00] <Xliff> \o

[15:00] *** Sgeo joined
[15:01] <Xliff> How can I protect routes in Cro by requiring a specific header?

[15:01] <Xliff> sena_kun jnthn: 

[15:06] *** Xliff left
[15:07] <notagoodidea> is it a way to define a part of a signature of a func outside of the func definition?

[15:13] <Geth> ¦ doc: uzluisf++ created pull request #3778: Add clarification about private methods

[15:13] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3778

[15:14] <guifa2> notagoodidea: not at the moment.  Signature literals is fairly recent, but there's no way to link it to a codeblock

[15:15] <notagoodidea> guifa2: yeah, I am slowly realizing that by getting error throws at me by the REPL :)

[15:17] <notagoodidea> I was hoping to create a partialy signature with a set of flags and add to some of multi MAIN when needed instead of rewriting everything everytime.

[15:18] <notagoodidea> I could put it in the proto and every multi will get access to them but you have not the granularity to say which flag apply for each multi as far as I know.

[15:19] *** asymptotically left
[15:19] *** asymptotically joined
[15:23] <guifa2> Dynamic variables can be your friend 

[15:24] <guifa2> Actually

[15:24] *** Xliff joined
[15:28] <guifa2> https://tio.run/##K0gtyjH7/7@gKL8kX6G4NEkhLT9fw0olUUfBSiUJRCRrKlQraCnUcnHlluaUZCKrUQRJqUc7xqoDpTFlwUaA1BxaAFTkhFVVElhVMkyVkzNYFVdxYiVIgYKVIcghRknWCkgiSBzjZIj0//8A

[15:28] <guifa2> how is that?

[15:31] <notagoodidea> Interessing!

[15:31] *** JRaspass joined
[15:37] <notagoodidea> I hope it will possible in the future to `my $sub-sig = :(Bool :$foo); sub f($lala, >$sub-sig)` but maybe ... I can do something similar with enum, slurpy flag and where clause..

[15:43] *** PimDaniel joined
[15:43] <notagoodidea> With 2020.12 and the REPL acts a bit weird.

[15:43] <PimDaniel> Haa bon!

[15:44] <PimDaniel> Hello.

[15:44] <notagoodidea> Hello

[15:44] <PimDaniel> Is there an irc channel where i can ask newbie questions on Raku?

[15:45] *** aborazmeh joined
[15:45] *** aborazmeh left
[15:45] *** aborazmeh joined
[15:45] <perry> Here!

[15:45] <perry> notagoodidea, yeah I've heard that too regarding the REPL.

[15:45] <PimDaniel> Ok thank's.

[15:45] <PimDaniel> my name is Jean-Yves.

[15:46] <PimDaniel> I've learned Perl5 and earn my live with it.

[15:46] <PimDaniel> I love Raku, especially for classes.

[15:47] <PimDaniel> but i discover it.

[15:47] <PimDaniel> I need to use NativeCall (s).

[15:47] <notagoodidea> in order `> enum Flag (foo => "bar"); > sub f($a){}; > f(a => 1);" and after getting the error about the wrong function call. The next entry will be always get a error "===SORRY!=== Error While Compiling: Redeclaration fo symbol 'Flag'."

[15:48] <PimDaniel> https://docs.raku.org/language/nativecall

[15:48] <notagoodidea> Because it try to rerun all the line kept in the context, it makes the REPL unusable for the session. `exit` can not be used and only Ctrl+c let you get out of the REPL.

[15:50] <PimDaniel> At chapter : Specifying the native representation

[15:51] <guifa2> notagoodidea: weird.  Although I don't use REPL too much, really just for interactive browsing of CLDR these days

[15:51] <PimDaniel> There is an example of a native call of  clock_gettime C function.

[15:52] <notagoodidea> guifa2: I think it is an extreme case of this issue https://github.com/rakudo/rakudo/issues/4160

[15:52] <PimDaniel> What i do not understand is this line:

[15:52] <PimDaniel> sub clock_gettime(uint32 $clock-id, timespec $tspec --> uint32) is native { * };

[15:53] <jdv79> PimDaniel: what exactly is the problem?

[15:53] <PimDaniel> The second parameter seams to be a pointer but :

[15:54] <PimDaniel> what means this notation:

[15:54] <PimDaniel> timespec $tspec --> uint32

[15:54] <PimDaniel> ????

[15:54] <PimDaniel> and what is $tspec variable : i don't see it in any other place in the given code.

[15:55] <jdv79> its right above, no?

[15:55] <jdv79> its a cstruct thingee

[15:56] <PimDaniel> why --> unin32 and not --> int8

[15:57] <PimDaniel> What does it rely to?

[15:57] <guifa2> It depends on what the C function returns

[15:57] <guifa2> '--> uint32' means "this function returns a uint32"

[15:59] <PimDaniel> Does --> in a function is general raku for what it returns? 

[15:59] <guifa2> Correct

[15:59] <jdv79> got me.  maybe the example is a bit inexact there:)

[15:59] <perry> PimDaniel, do you mean why uint32 instead of an int8 as well?

[16:00] <PimDaniel> Yes.

[16:00] <MasterDuke> yes. you can also do `sub foo($a) returns uint32 { ... }`, but there are some limitations to that syntax, so the `-->` version is recommended

[16:00] <perry> PimDaniel: uint32 basically just means an unsigned (always positive) integer with 32 bits of precision

[16:01] <PimDaniel> Right!

[16:01] <perry> So an integer from zero to 4,294,967,296

[16:01] <MasterDuke> at least on my system clock_gettime seems to return a C int, so `--> int32` would be more correct. not sure why it's uint

[16:01] <jdv79> its in the docs - https://docs.raku.org/type/Signature#index-entry---%3E

[16:01] <PimDaniel> but this can in somme circonstances represent a pointer!!

[16:01] <MasterDuke> might just be a typo in the docs

[16:02] <PimDaniel> I think the doc is ok.

[16:03] <perry> PimDaniel, ah I see, I hadn't read the whole conversation :)

[16:03] <PimDaniel> int clock_settime(clockid_t clk_id, const struct timespec *tp)

[16:03] <PimDaniel> ok i see : but You replied to my question.

[16:04] <PimDaniel> what i just wrote is the C prototype and it returns an int 

[16:04] <PimDaniel> Here's the goot prototype:  int clock_gettime(clockid_t clk_id, struct timespec *tp);

[16:05] <PimDaniel> i suppose this c is an int32 in raku.

[16:05] *** JRaspass left
[16:07] <PimDaniel> Ok thank you very mutch : i need to look a documentation for subs again. 

[16:07] <PimDaniel> *look for

[16:07] <guifa2> Isn't a C-int just guaranteed to be at least 16-bit (but potentially more, based on compiler/architecture, etc)? 

[16:08] <PimDaniel> Good question but what can more can less, no?

[16:08] <PimDaniel> The C-int depend of your machine.

[16:08] <PimDaniel> or no : your compiler.

[16:11] <PimDaniel> thanks very much. I leave for now. Going to make some test and see.

[16:11] *** PimDaniel left
[16:20] <xinming_> guifa2: THanks

[16:21] <xinming_> SmokeMachine: How do we do   distinct(col)  for model?

[16:22] *** wamba left
[16:24] <SmokeMachine> xinming_: we don’t... yet...

[16:24] <notagoodidea> lizmat: sorry for adding stuff on the issue, didn't know/see the rewind.

[16:25] <lizmat> notagoodidea: no worries, it was just the straw that broke the camel's back  :-)

[16:26] <SmokeMachine> xinming_: I think you can Red::AST::Function for that

[16:28] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/2akIPFsq/1610382492.JPG

[16:29] <SmokeMachine> xinming_: or classify: ^^

[16:29] <guifa2> lizmat: might want to mention in the weekly that ecosystem updates are temporarily paused because of Travis (jmerelo is working on an alternative now, but my most recent two modules can't get the automated testing done ATM)

[16:30] <xinming_> SmokeMachine: Ok, Thanks. will try

[16:30] <guifa2> or rather new modules, I suppose extant ones can still get updates no problem

[16:30] <SmokeMachine> .say for Model.classify(*.col).keys

[16:45] *** aborazmeh left
[16:55] *** b2gills left
[17:00] *** xelxebar_ left
[17:00] *** xelxebar joined
[17:03] *** melezhik joined
[17:08] <lizmat> guifa2: if it its about ecosystem modules (ones that live in META.list in the ecosystem repo)

[17:08] <lizmat> we could always add them manually there

[17:08] <lizmat> guifa2: just let me know which ones  :-)

[17:13] *** b2gills joined
[17:14] <guifa2> lizmat: yeah, I could have manually added (heck, I have direct-commit privileges now), but I wanted to respect the testing/QA process :-)

[17:15] <guifa2> lizmat: https://github.com/alabamenhu/IntlTokenNumber and https://github.com/alabamenhu/IntlFormatNumber

[17:15] <lizmat> as long as the testing process is borked, we should allow for some other way

[17:15] <lizmat> ok, will add them now

[17:19] <Geth> ¦ ecosystem: e7437bccac | (Elizabeth Mattijsen)++ | META.list

[17:19] <Geth> ¦ ecosystem: Manually add Intl::(Format|Token)::Number

[17:19] <Geth> ¦ ecosystem: 

[17:19] <Geth> ¦ ecosystem: As our testing workflow is currently borked thanks to Travis

[17:19] <Geth> ¦ ecosystem: bailing on open source.

[17:19] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/e7437bccac

[17:21] <guifa2> ^^^ Umm.... is that syntax (or similar) valid for importing modules?  If not, I feel like it should be :-)

[17:22] <lizmat> no, it's not  :-)

[17:22] *** tech_hutch left
[17:22] * guifa2 adds that to his list of 1239 things to do 

[17:24] <Xliff> Getting SEGV at...

[17:24] <Xliff> MVM_spesh_log_invoke_target (tc=0x55555555a160, invoke_target=0x0, was_multi=0) at src/spesh/log.c:194

[17:24] <Xliff> 194         if (REPR(invoke_target)->ID == MVM_REPR_ID_MVMCode && IS_CONCRETE(invoke_target)) {

[17:24] <Xliff> And for the life of me, I can't get it to golf... (as usual)

[17:25] <lizmat> perhaps #moarvm folks could tell you more about that ?

[17:25] <lizmat> also: is this on HEAD ?

[17:26] <Xliff> HEAD as of yesterday.

[17:26] <lizmat> today saw the merge of some memory leaks / corruption fixes in MoarVM

[17:26] <lizmat> definitely worth a try :)

[17:28] *** notagoodidea left
[17:32] *** asymptotically left
[17:32] <Xliff> lizmat++

[17:32] <Xliff> Thanks.

[17:33] <Xliff> This error vexes me: "Hash keys must be concrete strings (got )"

[17:33] <Xliff> When all keys in the hash ar strings!

[17:33] *** asymptotically joined
[17:34] <lizmat> well, at NQP level there can be non-concrete strings

[17:34] <lizmat> m: my str @a; use nqp; dd nqp::isnull_s(nqp::atpos_s(@a,0))

[17:34] <camelia> rakudo-moar d53a92733: OUTPUT: «1␤»

[17:35] <lizmat> this is something nwc10 on #moarvm could be interested in  :-)

[17:35] *** dakkar left
[17:37] <Xliff> OK. This is beyond frustrating. I think I'm going to need some expert help.

[17:37] <Xliff> I will have to write up everything in a gist.

[17:37] <lizmat> Xliff: am afraid so  :-(

[17:38] *** melezhik left
[17:39] <tony-o> .

[17:39] <tellable6> 2021-01-09T00:50:56Z #raku <melezhik> tony-o I create a sparrow plugin to automate fez login, could be useful in fez automation / testing - http://sparrowhub.io/plugin/fez-login/0.000001

[17:39] <tellable6> 2021-01-09T01:41:14Z #raku <melezhik> tony-o this is how `fez login` automation looks like using `fez-login` sparrow plugin - http://161.35.142.50/report/fez-test/203 

[17:39] <tellable6> 2021-01-11T06:12:53Z #raku <jmerelo> tony-o thanks!

[17:39] <tellable6> 2021-01-11T12:35:08Z #raku-dev <lizmat> tony-o is there some writeup about fez that I can refer to in the RWN ?

[17:40] <tony-o> lizmat: i'll get something written up about fez, currently the only thing is the proposal

[17:41] <lizmat> tony-o: https://news.perlfoundation.org/post/grant_proprosal_raku_ecosystem I presume ?

[17:41] <tony-o> that'd be it, yea

[17:42] <lizmat> ok, I'll refer to that, and to the README of fez itself

[17:42] <tony-o> i was going to write up how the whole thing works tomorrow, when is the rwn out?

[17:42] <lizmat> in about an hour  :-)

[17:43] <tony-o> that's way before tomorrow

[17:43] <tony-o> for me, at least

[17:43] <lizmat> no problem repeating mentioning fez, so it could be in this week *and* next week  :-)

[17:44] *** tib joined
[17:44] <tib> .

[17:50] *** rindolf left
[17:51] *** rindolf joined
[18:00] <tony-o> eggsellent 

[18:08] <Geth> ¦ ecosystem: 8eb04ce526 | (David Warring)++ | META.list

[18:08] <Geth> ¦ ecosystem: move several PDF modules to CPAN

[18:08] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/8eb04ce526

[18:18] *** domidumont left
[18:20] *** sena_kun joined
[18:21] *** Altai-man left
[18:29] *** PimDaniel joined
[18:29] <PimDaniel> Hi everybody.

[18:30] <PimDaniel> Hi nobody.

[18:30] <PimDaniel> :(

[18:30] <guifa2> hello

[18:31] <PimDaniel> #!/usr/local/bin/perl6

[18:31] <PimDaniel>   

[18:31] <PimDaniel> use NativeCall;

[18:31] <PimDaniel> class timespec is repr('CStruct') {

[18:31] <PimDaniel>     has uint32 $.tv_sec;

[18:31] <PimDaniel>     has long $.tv_nanosecs;

[18:31] <PimDaniel> }

[18:31] <PimDaniel> sub clock_gettime(uint32 $clock-id, timespec $tspec --> uint32) is native { * };

[18:31] <PimDaniel> my timespec $this_time .= new;

[18:31] <PimDaniel> my $result = clock_gettime( 0, $this_time);

[18:31] <PimDaniel> The question is:

[18:31] <guifa2> PimDaniel: when pasting long bits of code, please use pastebin or github's gist or something similar

[18:31] <PimDaniel> I know but it's borring. :(

[18:32] <PimDaniel> I'm tired today, sorry!

[18:32] <PimDaniel> The question is: 

[18:33] <PimDaniel> In this example, why can we call clock_gettime?

[18:34] <PimDaniel> I linked none C library?????

[18:34] <PimDaniel> are some default C function allreading accessible?

[18:35] <PimDaniel> *functions

[18:35] <cog>  m: say &say.perl # how do I do the same to get the .say method ? 

[18:35] <camelia> rakudo-moar d53a92733: OUTPUT: «proto sub say (|) {*}␤»

[18:36] <PimDaniel> Thank's in advance!

[18:37] <guifa2> PimDaniel: I believe that when you just say "is native" all by itself, it assumes it's a system library

[18:37] <tobs> PimDaniel: see https://docs.raku.org/language/nativecall#Calling_into_the_standard_library

[18:38] <guifa2> cog: peak through Rakudo source code :-)

[18:39] <tobs> although that explanation leaves open what "the standard library" is. When you run on moarvm, I guess you can rely on the C library being loaded already and the symbol to resolve(?)

[18:39] <guifa2> (I'm assuming you mean you want to say the source code of say)

[18:40] <guifa2> Subs/methods don't get source code dumps with .perl/.raku

[18:42] <cog> guifa2, ( $test ?? $onemethod !! $anothermethod)($arg) # I want to pick the method in advance and call them like that

[18:42] <PimDaniel> guifa2, thank you!

[18:43] <PimDaniel> tobs: thank's for the link!

[18:44] <PimDaniel> Does the standard lib include termios and ioctl calls?

[18:44] <tony-o> m: sub x() { "x".say; }; sub y() { "y".say; }; (True ?? &x !! &y)(); (False ?? &x !! &y)(); # cog

[18:44] <camelia> rakudo-moar d53a92733: OUTPUT: «x␤y␤»

[18:44] <guifa2> sub a($x) { say 'called A with $x' }; sub b ($x) { say 'called B with $x' };  ( (True,False).pick ?? $on………

[18:44] <guifa2> tony-o beat me to it

[18:44] *** mowcat joined
[18:44] <cog> I read the section Fancy method calls of S12

[18:44] <cog>     $obj."$methodname"(1,2,3)   # use contents of $methodname as method name

[18:45] <cog> I knew that already but that cheating

[18:46] *** pecastro left
[18:47] <tony-o> did you?

[18:48] <cog> For situations where you already have a method located, you

[18:48] <cog> can use a simple scalar variable in place of method name:

[18:48] <cog>     $methodobj = $foo ?? &bar !! &baz;

[18:48] <cog>     $obj.$methodobj(1,2,3)

[18:48] <cog> Excepted I just want to locate the method ,or the dispatcher

[18:49] <PimDaniel> Here's what i'm trying to achieve: https://pastebin.com/81e2Pmy4

[18:49] <PimDaniel> >But is is included in standard lib?

[18:51] <PimDaniel> The problem beeing that i do not wanna publish C ioctl sub :

[18:52] *** pecastro joined
[18:52] <PimDaniel> I'd prefer publish winsize * C function.

[18:52] <guifa2> you shouldn't need to declare ioctl as a sub unless you're calling it from within Raku

[18:53] <CIAvash> cog: you want `^lookup`?

[18:53] <guifa2> if winsize calls ioctl, you don't need to worry about it, just declare ioctl

[18:53] <PimDaniel> Did not see any working example.

[18:55] <PimDaniel> raku complains ioctl does not exist.

[18:56] <PimDaniel> Sorry i did not read you well.

[18:56] <PimDaniel> guifa2: sorry i did not read you well.

[18:56] <PimDaniel> In fact the problem is not this.

[18:57] <guifa2> if you just have "is native" then it's likely that ioctl is not in the standard library.  You may need to use "is native('ioctl')".  I don't have a lot of experience with NativeCall, though

[18:57] <cog> CIAvash, I did not know it. But eventually I guess, I will need a signature as well. That's why I frowned upon using a string like  $foo."bar".

[18:58] <cog> I lack practice. A thorough rereading of S12 will not hurt me.

[18:58] <PimDaniel> @guifa2 : I want to leave ioctl on C side.

[19:00] <PimDaniel> And declare winsize in doku.

[19:00] <guifa2> cog: I don't think the string is any more or less useful than .^lookup.  If anything, the string method feels more idiomatic to me  because .^lookup is resorting to the HOW

[19:01] <tony-o> cog, if you're looking at sigs use signature

[19:01] <tony-o> m: sub x($a, :$b) { }; say &x.signature;

[19:01] <camelia> rakudo-moar d53a92733: OUTPUT: «($a, :$b)␤»

[19:02] <tony-o> there's likely an introspection method for whatever you're looking for rather than reparsing

[19:02] <guifa2> PimDaniel.  If you're not calling ioctl, then there is no reason for you to include it in your Raku code.  If you get an error from running winsize about ioctl, then the problem is in the C code, not in the Raku code

[19:02] <PimDaniel> NO NO

[19:02] <PimDaniel> My C code works : i tested it!

[19:03] <PimDaniel> Well i take a break : i must try.

[19:03] <PimDaniel> I'll paste the code and you'll understand.

[19:06] *** sjm_uk left
[19:06] <PimDaniel> @guifa3 : The goal is to copy C struct winsize (termios) to class winsize is repr('CStruct') on raku side.

[19:07] <PimDaniel> But i do not think i must return a pointer : i think i must have a pointer parameter to the c struct.

[19:08] <cog> Tony-o:  indeed

[19:17] *** JRaspass joined
[19:19] *** sena_kun left
[19:25] *** ufobat_ left
[19:26] <PimDaniel> @guifa2  thank's for your help, i'll come back later.

[19:26] *** PimDaniel left
[19:28] *** guifa2 left
[19:29] *** sena_kun joined
[19:46] *** jess joined
[19:47] *** jess left
[19:47] *** ufobat_ joined
[19:48] *** jess joined
[20:07] <tyil> lizmat: poke

[20:08] <lizmat> and the first Rakudo Weekly News of 2021 hits the Net: https://rakudoweekly.blog/2021/01/11/2021-01-02-so-much-new-stuff/

[20:09] *** wamba joined
[20:16] <stoned75> commit: releases my @a; @a   .push: "foo"; say @a;

[20:16] <committable6> stoned75, ¦releases (50 commits): «[foo]␤»

[20:23] *** melezhik joined
[20:23] <melezhik> Sparky CI will awards your project a badge if you decide to build with it )) - https://github.com/melezhik/sparky#build-status cc tib

[20:23] <tellable6> 2021-01-11T07:24:17Z #raku-dev <nine> melezhik: for now, Azure pipelines

[20:27] *** MasterDuke left
[20:32] *** ufobat__ joined
[20:36] *** ufobat_ left
[20:36] <tony-o> melezhik: digging the sparky stuff.

[20:37] <melezhik> yeah, tony-o, do you want a badge? http://161.35.142.50/badge/fez-test :]

[20:44] *** melezhik left
[20:56] *** rindolf left
[21:03] *** brtastic left
[21:04] *** notagoodidea joined
[21:08] <El_Che> just migrated rakudo-pkg from travis.org to .com. Luckily it works for me. I was afraid I would have had to migrate to something else

[21:09] <El_Che> (I have now some small projects on github actions, but rakudo-pkg is certainly more complicated)

[21:21] *** stoned75 left
[21:25] *** brtastic joined
[21:52] *** benjif joined
[21:53] *** Black_Ribbon joined
[21:57] *** ufobat__ left
[21:57] *** JRaspass left
[22:06] <phogg> I just discovered the ==> operator today. Putting what is essentially the Unix pipe into a proper language is really nice.

[22:08] *** stoned75 joined
[22:10] <Geth> ¦ doc: 71d4062604 | (Stoned Elipot)++ | doc/Language/variables.pod6

[22:10] <Geth> ¦ doc: Remove harmless typo

[22:10] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/71d4062604

[22:10] <Geth> ¦ doc: f0a648d3b8 | (Stoned Elipot)++ | doc/Language/variables.pod6

[22:10] <Geth> ¦ doc: Add missing comma

[22:10] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/f0a648d3b8

[22:10] <linkable6> Link: https://docs.raku.org/language/variables

[22:12] <notagoodidea> phogg: <== works too if you to do it backward.

[22:12] <phogg> notagoodidea: I noticed. I assume this is mostly just for symmetry, or for people who think in reverse.

[22:13] <notagoodidea> it depends, you can the style "foo for @bar" : "foo <== @bar"

[22:14] <notagoodidea> +mimick

[22:14] <phogg> I would call that thinking in reverse!

[22:15] <notagoodidea> I found it a nice to mimick the natural language : do that if something.

[22:16] *** sena_kun left
[22:18] <notagoodidea> I have to feeling that NativeCall can permit to create something similar than Clang.jl in Raku : https://github.com/JuliaInterop/Clang.jl

[22:18] <notagoodidea> (After seeing that App::GPTrixie do not have been updated for a few years and reading https://floooh.github.io/2020/08/23/sokol-bindgen.html)

[22:26] *** wamba left
[22:44] <Geth> ¦ doc: 75162e9a15 | (Stoned Elipot)++ | .github/workflows/test.yml

[22:44] <Geth> ¦ doc: Run GitHub workflow 'test' for any path under doc/

[22:44] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/75162e9a15

[22:52] <Xliff> Hmmm...

[22:52] <Xliff> m: sub a ($a) { $a.say }; my @a = <1 2 3>; a <== @a

[22:52] <camelia> rakudo-moar d53a92733: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in quote words; couldn't find final '>' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3a) { $a.say }; my @a = <1 2 3>; a <== @a7⏏5<EOL>␤    expecting an…»

[22:52] <Xliff> m: sub a ($a) { $a.say }; my @a = <1 2 3>; &a <== @a

[22:52] <camelia> rakudo-moar d53a92733: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤A feed may not sink values into a code object. Did you mean a call like 'a()' instead?␤at <tmp>:1␤------> 3sub a ($a) { $a.say }; my @a = <1 2 3>; 7⏏5&a <== @a␤»

[22:52] <Xliff> notagoodidea: Are you sure about that?

[22:53] <Xliff> m: sub a ($a) { $a.say }; my @a = <1 2 3>; .&a for  @a

[22:53] <camelia> rakudo-moar d53a92733: OUTPUT: «1␤2␤3␤»

[22:53] <Xliff> m: sub a ($a) { $a.say }; my @a = <1 2 3>; &a() <== @a

[22:53] <camelia> rakudo-moar d53a92733: OUTPUT: «[1 2 3]␤»

[22:53] *** cpan-raku left
[22:54] *** brtastic left
[22:54] <Xliff> m: sub a ($a) { $a.say }; my @a = <1 2 3>; a() <== @a

[22:54] <camelia> rakudo-moar d53a92733: OUTPUT: «[1 2 3]␤»

[22:54] *** JRaspass joined
[22:56] *** cpan-raku joined
[22:56] *** cpan-raku left
[22:56] *** cpan-raku joined
[23:08] *** Garbanzo left
[23:12] <notagoodidea> Xliff: Not at all. 

[23:12] *** melezhik joined
[23:13] <notagoodidea> I am currently reading about it/source code/source of Clang.jl/libclang. 

[23:13] *** aluaces left
[23:15] *** JRaspass left
[23:15] <notagoodidea> I will probably try my hand first to a few NativeCall interface before hoping to try that.

[23:15] *** JRaspass joined
[23:15] <notagoodidea> it could be a path to facilitate binding/wrapper from C besides writing them by hand (or not)

[23:20] *** JRaspass left
[23:20] *** JRaspass joined
[23:22] *** oddp joined
[23:30] *** JRaspass left
[23:30] *** JRaspass joined
[23:40] *** stoned75 left
[23:41] *** JRaspass left
