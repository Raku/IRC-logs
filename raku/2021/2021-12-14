[00:00] *** lichtkind_ left
[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:15] *** Zero_Dogg left
[00:15] *** dmc00 left
[00:16] *** dmc00 joined
[00:17] *** Zero_Dogg joined
[00:20] *** Geth left
[00:20] *** Geth joined
[00:27] *** Geth left
[00:27] *** Geth joined
[00:31] *** Geth left
[00:32] *** Geth joined
[00:36] *** Geth left
[00:36] *** Geth joined
[00:37] *** hankache joined
[00:47] *** Geth left
[00:47] *** Geth joined
[00:52] *** Geth left
[00:52] *** Geth joined
[00:59] *** hankache left
[01:00] *** Geth left
[01:01] *** Geth joined
[01:05] *** Geth left
[01:05] *** Geth joined
[01:24] <moon-child> m: say sprintf "%03s", 1.2

[01:24] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «1.2␤»

[01:25] <moon-child> I want three integer digits ahead of the decimal point, regardless of what's after it.  Is there a simple way of doing that?

[01:26] <gfldex> m: say sprintf "%0fs", 1.2

[01:26] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «1.200000s␤»

[01:26] <moon-child> (that is, 001.2)

[01:27] <gfldex> m: say sprintf "%0.3f", 1.2

[01:27] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «1.200␤»

[01:27] <gfldex> m: say sprintf "%3.3f", 1.2

[01:27] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «1.200␤»

[01:27] <gfldex> m: say sprintf "%03f", 1.2

[01:27] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «1.200000␤»

[01:28] <gfldex> m: say sprintf "%03s", 1.2

[01:28] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «1.2␤»

[01:28] <gfldex> m: say sprintf "% 3s", 1.2

[01:28] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «1.2␤»

[01:28] <moon-child> m: say sprintf "%03.f", 1.2

[01:28] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «001␤»

[01:28] <moon-child> cool would be if you could say

[01:28] <gfldex> m: sprintf("%03f", 1.2).say

[01:28] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «1.200000␤»

[01:28] <moon-child> m: say sprintf "%03.*f", Inf, 1.2

[01:28] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «Directive %f not applicable for value of type Rat (Inf) in format␤'%03.*f'␤  in block <unit> at <tmp> line 1␤␤»

[01:37] *** Geth left
[01:38] *** Geth joined
[01:42] *** Geth left
[01:42] *** Geth joined
[01:57] *** discord-raku-bot left
[02:02] *** dg left
[02:20] *** mykhal left
[02:22] *** mykhal joined
[03:22] *** sourceable6 left
[03:22] *** notable6 left
[03:22] *** nativecallable6 left
[03:22] *** coverable6 left
[03:22] *** greppable6 left
[03:22] *** releasable6 left
[03:22] *** committable6 left
[03:22] *** shareable6 left
[03:22] *** bloatable6 left
[03:22] *** squashable6 left
[03:22] *** evalable6 left
[03:22] *** unicodable6 left
[03:22] *** benchable6 left
[03:22] *** reportable6 left
[03:22] *** linkable6 left
[03:22] *** tellable6 left
[03:22] *** bisectable6 left
[03:22] *** quotable6 left
[03:22] *** statisfiable6 left
[03:22] *** committable6 joined
[03:23] *** linkable6 joined
[03:23] *** reportable6 joined
[03:24] *** unicodable6 joined
[03:24] *** sourceable6 joined
[03:24] *** notable6 joined
[03:24] *** quotable6 joined
[03:24] *** nativecallable6 joined
[03:25] *** greppable6 joined
[03:39] <ggoebel> m: printf "%1\$03d\b%0.2f", 1.2;

[03:39] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «0011.20»

[03:39] <ggoebel> m: printf "%1\$03d\b\b%0.2f", 1.2;

[03:39] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «0011.20»

[03:40] <ggoebel> the first works from the command line...

[03:41] <ggoebel> i.e. gives 001.20

[03:41] <moon-child> ggoebel: first: that gives the wrong result for e.g. 11.2; second: I don't want something that displays like 001.2, I want the actual string 001.2

[03:42] <ggoebel> can't figure out a clean way to get zero padding before floating point numbers

[03:42] <moon-child> it's fine, I can build it myself; was just curious if there was a good feature built-in

[03:42] <ggoebel> locally it prints 001.20

[03:42] <ggoebel> somethings up with whatever m: does... guessing it doesn't handle \b

[03:43] <moon-child> the reason it displays that way is because of your terminal

[03:43] <moon-child> and, for irc, your irc client

[03:43] <moon-child> what I want is to generate filenames that will be ordered correctly when sorted lexicographically.  So embedded backspaces do not help

[03:44] <ggoebel> m: my $a = sprintf "%1\$03d\b%0.1f\n", 1.2; $a.say

[03:44] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «0011.2␤␤»

[03:45] <ggoebel> guess you'll have to roll it yourself

[03:53] <ggoebel> m: 1.2 ~~ /(\d+)\.(\d+)/; my $a = sprintf "%03d.%d", $/[0,1]; $a.say; $a.chars.say;

[03:53] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «001.2␤5␤»

[04:23] *** evalable6 joined
[04:23] *** bisectable6 joined
[04:24] *** coverable6 joined
[04:25] *** releasable6 joined
[04:25] *** bloatable6 joined
[04:29] *** mcmillhj joined
[04:30] <mcmillhj> Is there a way to unpack a Pair in a block? Something like `for @pairs -> $k, $v { ... }` ?

[04:30] <mcmillhj> I am sure there _is_ a way, I just can't seem to get the syntax right

[04:33] <moon-child> hmm, ideally you would be able to say  for @pairs -> ($k => $v) { ... },  but that does not seem to work

[04:34] <mcmillhj> that was sort of what I expected to work too

[04:34] <moon-child> could say  for @pairs.map(&kv) -> $k,$v { ... }

[04:43] <mcmillhj> okay, I'll try that. Thank you

[04:59] *** diakopter joined
[05:15] *** diakopter left
[05:23] *** tellable6 joined
[05:24] *** shareable6 joined
[05:24] *** benchable6 joined
[05:31] *** mcmillhj left
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[06:23] *** statisfiable6 joined
[06:23] *** squashable6 joined
[07:20] *** seednode left
[07:20] *** seednode joined
[07:48] *** abraxxa joined
[07:49] *** jjido joined
[07:52] *** abraxxa left
[07:53] *** abraxxa joined
[08:36] *** Sgeo left
[08:52] *** jjido left
[08:59] *** dakkar joined
[09:00] *** abraxxa left
[09:03] *** abraxxa joined
[09:39] *** dogbert17 left
[09:39] *** vasko left
[09:39] *** moon-child left
[09:39] *** a3r0 left
[09:39] *** greyrat_ left
[09:39] *** Scotteh left
[09:39] *** Zero_Dogg left
[09:39] *** djerius left
[09:39] *** Manifest0 left
[09:45] *** TempIRCLogger__ left
[09:46] *** dakkar left
[09:46] *** statisfiable6 left
[09:46] *** Xliff left
[09:46] *** perlbot left
[09:46] *** andrea[m] left
[09:46] *** CIAvash left
[09:46] *** sienet_ja_LSD[m] left
[09:46] *** Kaiepi left
[09:46] *** polettix_ left
[09:46] *** rjbs left
[09:46] *** rypervenche left
[09:46] *** leah2 left
[09:46] *** merpaderp left
[09:46] *** dmc00 left
[09:46] *** Colt left
[09:46] *** Arathorn left
[09:46] *** happy-dude left
[09:46] *** dustinm` left
[09:46] *** solitario left
[09:46] *** kawaii_ left
[09:46] *** Od1n left
[09:46] *** Grrrr left
[09:46] *** mathias[m] left
[09:46] *** archenoth left
[09:46] *** JRaspass left
[09:46] *** jdv left
[09:46] *** El_Che left
[09:46] *** masak left
[09:46] *** renormalist left
[09:46] *** Summer left
[09:46] *** kybr left
[09:46] *** sftp left
[09:46] *** silug left
[09:46] *** ptc left
[09:46] *** pejayes left
[09:46] *** thowe left
[09:46] *** sivoais left
[09:46] *** mtj left
[09:46] *** eof left
[09:46] *** jast left
[09:46] *** Ulti left
[09:46] *** avuserow left
[09:46] *** goblin left
[09:46] *** mjgardner left
[09:46] *** peder left
[09:46] *** hexology left
[09:46] *** corwin left
[09:46] *** jercos left
[09:46] *** reportable6 left
[09:46] *** benchable6 left
[09:46] *** shareable6 left
[09:46] *** tellable6 left
[09:46] *** bloatable6 left
[09:46] *** releasable6 left
[09:46] *** coverable6 left
[09:46] *** bisectable6 left
[09:46] *** evalable6 left
[09:46] *** euandreh left
[09:46] *** AlexDaniel left
[09:46] *** BinGOs left
[09:46] *** jcallen left
[09:46] *** _________ left
[09:46] *** zacts left
[09:46] *** jjatria left
[09:46] *** tobs left
[09:46] *** sjn left
[09:46] *** gugod left
[09:46] *** ilogger2 left
[09:46] *** seednode left
[09:46] *** greppable6 left
[09:46] *** nativecallable6 left
[09:46] *** notable6 left
[09:46] *** linkable6 left
[09:46] *** committable6 left
[09:46] *** eseyman left
[09:46] *** samcv left
[09:46] *** elcaro left
[09:46] *** Altreus left
[09:46] *** leedo left
[09:46] *** dpk left
[09:46] *** timo left
[09:46] *** pjlsergeant left
[09:46] *** ingy left
[09:46] *** casaca left
[09:46] *** sena_kun left
[09:46] *** Geth left
[09:46] *** ProperNoun left
[09:46] *** gcd left
[09:46] *** phogg left
[09:46] *** Tirifto left
[09:46] *** Util_ left
[09:46] *** Maylay left
[09:46] *** bdju left
[09:46] *** moritz_ left
[09:46] *** broquain1 left
[09:46] *** xkr47 left
[09:46] *** codesections left
[09:46] *** qorg11 left
[09:46] *** DarthGandalf left
[09:46] *** chronon left
[09:46] *** merryprog left
[09:46] *** Voldenet left
[09:46] *** abraxxa left
[09:46] *** squashable6 left
[09:46] *** quotable6 left
[09:46] *** sourceable6 left
[09:46] *** unicodable6 left
[09:46] *** slowtyper left
[09:46] *** amenonsen left
[09:46] *** gabiruh left
[09:46] *** frost left
[09:46] *** ggoebel left
[09:46] *** [Coke] left
[09:46] *** vrurg left
[09:46] *** swaggboi left
[09:46] *** nine left
[09:46] *** demostanis[m] left
[09:46] *** pierrot left
[09:46] *** Juerd left
[09:46] *** tejr left
[09:46] *** mykhal left
[09:46] *** gordonfish left
[09:46] *** tonyo left
[09:46] *** ugexe left
[09:46] *** jmcgnh left
[09:46] *** jrjsmrtn left
[09:46] *** GreaseMonkey left
[09:46] *** tbrowder left
[09:46] *** charsbar left
[09:46] *** vodkra left
[09:46] *** japhb left
[09:46] *** gfldex left
[09:46] *** maettu left
[09:46] *** daxim left
[09:46] *** zostay left
[09:46] *** ecocode__ left
[09:46] *** camelia left
[09:46] *** simcop2387 left
[09:46] *** lizmat left
[09:46] *** synthmeat left
[09:46] *** skaji left
[09:46] *** SmokeMachine left
[09:46] *** nebuchadnezzar left
[09:46] *** oodani left
[09:46] *** patterner_ left
[09:46] *** leont left
[09:46] *** PotatoGim left
[09:46] *** Ekho left
[09:46] *** dcx left
[09:46] *** KotH left
[09:46] *** rba left
[09:46] *** ecocode left
[09:46] *** Henry151 left
[09:46] *** spacekookie left
[09:46] *** esh left
[09:46] *** tinita left
[09:52] *** Colt left
[09:52] *** Colt joined
[09:53] *** Zero_Dogg joined
[10:06] <Geth> ¦ ecosystem: JRaspass++ created pull request #598: Fix Math::Root's branch

[10:06] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/598

[10:07] *** Geth left
[10:07] *** Geth joined
[10:15] <Geth> ¦ ecosystem: b805cd2663 | (James Raspass)++ (committed using GitHub Web editor) | META.list

[10:15] <Geth> ¦ ecosystem: Fix Math::Root's branch

[10:15] <Geth> ¦ ecosystem: 

[10:15] <Geth> ¦ ecosystem: Math::Root uses `main` rather than `master`, the fact that master works is just GitHub trying to be helpful. Unfortunately this helpfulness doesn't extend to their GraphQL API.

[10:15] <Geth> ¦ ecosystem: 

[10:15] <Geth> ¦ ecosystem: This change fixes https://gitlab.com/raku-land/raku-land/-/issues/18

[10:15] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/b805cd2663

[10:15] <Geth> ¦ ecosystem: 294d846bee | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list

[10:15] <Geth> ¦ ecosystem: Merge pull request #598 from JRaspass/patch-2

[10:15] <Geth> ¦ ecosystem: 

[10:15] <Geth> ¦ ecosystem: Fix Math::Root's branch

[10:15] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/294d846bee

[10:15] <JRaspass> heh when IRC tells you before email that your PR was merged :-P

[10:16] *** Geth left
[10:16] *** Geth joined
[10:19] <ggoebel> m: my @pairs = :a(0), :b(1); for @pairs>>.kv.flat ->$k,$v { say "k: $k, v: $v" }

[10:19] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «k: a, v: 0␤k: b, v: 1␤»

[10:29] *** ggoebel left
[10:57] <SmokeMachine> m: my @pairs = :a(0), :b(1); for @pairs ->(:$key,:$value) { say "k: $key, v: $value" }

[10:57] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «k: a, v: 0␤k: b, v: 1␤»

[10:59] <SmokeMachine> .tell mcmillhj m: my @pairs = :a(0), :b(1); for @pairs ->(:$key,:$value) { say "k: $key, v: $value" }

[10:59] <tellable6> SmokeMachine, I'll pass your message to mcmillhj

[10:59] <SmokeMachine> m: my @pairs = :a(0), :b(1); for @pairs -> (:$key,:$value) { say "k: $key, v: $value" }

[10:59] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «k: a, v: 0␤k: b, v: 1␤»

[11:29] *** evalable6 left
[11:29] *** linkable6 left
[11:31] *** linkable6 joined
[11:38] *** lichtkind_ joined
[11:44] * lizmat clickbaits https://rakudoweekly.blog/2021/12/13/2021-50-_-for-micros/

[12:02] *** reportable6 left
[12:05] *** reportable6 joined
[12:32] *** evalable6 joined
[12:34] *** jjido joined
[12:34] *** jjido left
[12:38] *** squashable6 left
[12:42] *** discord-raku-bot joined
[12:46] *** thundergnat joined
[12:46] <thundergnat> m: printf "%03d.%s\n", .Int, ($_ - .Int).substr(2) for 1.1443, 17.12313122, e, pi;

[12:46] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «001.1443␤017.12313122␤002.7182818284590451␤003.14159265358979312␤»

[12:47] <thundergnat> moon-child ^^^^ maybe something like this?

[12:48] <thundergnat> still would be a problem for negative numbers but could probably trap that pretty easily.

[12:55] <thundergnat> m: printf "%s%03d.%s\n", .sign < 1 ?? "-" !! "",  .abs.Int, (.abs - .abs.Int).substr(2)//0 for 2, 5.1, 1.1443, 17.12313122, e, pi, -3.98

[12:55] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «002.0␤005.1␤001.1443␤017.12313122␤002.7182818284590451␤003.14159265358979312␤-003.98␤»

[12:57] <thundergnat> or, maybe better for integers... 

[12:57] <thundergnat> m: printf "%s%03d%s\n", .sign < 1 ?? "-" !! "",  .abs.Int, (.abs - .abs.Int).substr(1)//"" for 2, 5.1, 1.1443, 17.12313122, e, pi, -3.98

[12:57] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «002␤005.1␤001.1443␤017.12313122␤002.7182818284590451␤003.14159265358979312␤-003.98␤»

[13:09] *** ggoebel joined
[13:48] *** suman joined
[14:16] <ggoebel> SmokeMachine: very nice. didn't know you could do that

[14:16] <ggoebel> why doesn't this work?

[14:16] <ggoebel> m: my @pairs = :a(0), :b(1); for @pairs ->(:$k,:$v) { say "k: $k, v: $v" }

[14:16] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «2 unexpected named arguments passed (value,key) in sub-signature␤  in block <unit> at <tmp> line 1␤␤»

[14:16] <ggoebel> guessing I'm not understanding what is going on

[14:23] <timo> the attributes are called key and value, not k and v

[14:25] <ggoebel> how does one introspect what attributes are present?  

[14:25] <lizmat> m: my @pairs = :a(0), :b(1); for @pairs ->(:key($k),:value($v)) { say "k: $k, v: $v" }

[14:25] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «k: a, v: 0␤k: b, v: 1␤»

[14:26] <lizmat> m: .say for Date.^attributes

[14:26] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «int $!year␤int $!month␤int $!day␤int $!daycount␤Callable &!formatter␤»

[14:28] *** monkey_ joined
[14:28] <lizmat> m: class A { has $.foo = 42 }; if A.new -> (:foo($bar)) { dd $bar }

[14:28] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «42␤»

[14:28] <ggoebel> m: my @pairs = :a(0); for @pairs { .^attributes.say }

[14:28] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «(Mu $!key Mu $!value ObjAt $!WHICH)␤»

[14:29] <ggoebel> thank you

[14:30] *** mcmillhj joined
[14:32] <discord-raku-bot> <Anton Antonov#7232> I made a package that downloads data over the web from some well known resources site (say, a GitHub repository.) I want to provide option for the data to be kept in the local machine. Can I use, say, the resources directory for that? I programmed a solution that does that, but I am sure it is way too hacky and ideologically wrong. Are there any documents discussing these kind of topics? (I searched for 

[14:33] <merryprog> Anton, you got cut off at "I searched for"

[14:34] <discord-raku-bot> <Anton Antonov#7232> 🙂 " (I searched for ~15 min and did not find any.)"

[14:37] <timo> check out tha xdg spec maybe

[14:39] *** squashable6 joined
[14:47] *** suman left
[14:52] <discord-raku-bot> <Anton Antonov#7232> timo, Thanks!

[14:55] *** thundergnat left
[14:59] *** frost left
[15:05] *** Sgeo joined
[15:20] <SmokeMachine> m: class Bla { has $.something; has $.else }; for (Bla.new: :something($_), :else($_ * 2) for ^5) -> (:something($a), :else($b)) { say "a: $a; b: $b"} # ggoebel, not only for Pairs

[15:20] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «a: 0; b: 0␤a: 1; b: 2␤a: 2; b: 4␤a: 3; b: 6␤a: 4; b: 8␤»

[15:29] <SmokeMachine> it seems to be using the method to get the value:

[15:29] <SmokeMachine> m: class Bla { has $.a = 13; method a { 42 } }; for Bla.new xx 5 -> (:$a) { say "a: $a"}

[15:29] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «a: 42␤a: 42␤a: 42␤a: 42␤a: 42␤»

[15:30] <discord-raku-bot> <Anton Antonov#7232> @timo Thanks again! Worked great.

[15:30] <timo> cool!

[15:30] <SmokeMachine> but testing if the attribute is public:

[15:30] <SmokeMachine> class Bla { has $!a = 13; method a { 42 } }; for Bla.new xx 5 -> (:$a) { say "a: $a"}

[15:30] <evalable6> SmokeMachine, rakudo-moar 343a7861d: OUTPUT: «Use of uninitialized value element of type Mu i…»

[15:30] <evalable6> SmokeMachine, Full output: https://gist.github.com/8711594aa7852d75e177d70233341509

[15:30] <timo> the resources folder is really only for stuff you, as a module author, want to install on the user's system

[15:30] <SmokeMachine> that seems odd to me...

[15:31] *** ggoebel left
[15:34] *** ggoebel joined
[15:39] *** Geth left
[15:39] *** Geth joined
[15:41] <timo> it goes via method Capture

[15:41] <timo> class Bla { has $!a = 13; method a { 42 } }; say Bla.new.Capture; class Bloop { has $.a = 13; method a { 99 } }; say Bloop.new.Capture

[15:41] <evalable6> timo, rakudo-moar 343a7861d: OUTPUT: «\()␤\(:a(99))␤»

[15:48] <SmokeMachine> timo: ok... for some reason now that makes more sense in my mind...

[15:48] <SmokeMachine> timo: thanks

[15:49] <SmokeMachine> m: 42.Capture

[15:49] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «Cannot unpack or Capture `42`.␤To create a Capture, add parentheses: \(...)␤If unpacking in a signature, perhaps you needlessly used parentheses? -> ($x) {} vs. -> $x {}␤or missed `:` in signature unpacking? -> &c:(Int) {}␤  in block <unit> at…»

[15:49] <SmokeMachine> m: say 42.Capture

[15:49] <camelia> rakudo-moar b5a71ab2a: OUTPUT: «Cannot unpack or Capture `42`.␤To create a Capture, add parentheses: \(...)␤If unpacking in a signature, perhaps you needlessly used parentheses? -> ($x) {} vs. -> $x {}␤or missed `:` in signature unpacking? -> &c:(Int) {}␤  in block <unit> at…»

[16:15] *** abraxxa left
[16:20] *** abraxxa joined
[16:23] *** MoC joined
[16:25] <Geth> ¦ doc/codesections-isa-ok-roles: f14286b4ff | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Type/Test.pod6

[16:25] <Geth> ¦ doc/codesections-isa-ok-roles: State that isa-ok matches Roles

[16:25] <Geth> ¦ doc/codesections-isa-ok-roles: 

[16:25] <Geth> ¦ doc/codesections-isa-ok-roles: Mu.isa explicitly does *not* match roles, so it seems worth calling out that &isa-ok behaves differently.

[16:25] <Geth> ¦ doc/codesections-isa-ok-roles: review: https://github.com/Raku/doc/commit/f14286b4ff

[16:26] <Geth> ¦ doc: codesections++ created pull request #3997: State that isa-ok matches Roles

[16:26] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3997

[16:27] *** Geth left
[16:27] *** Geth joined
[17:27] *** evalable6 left
[17:27] *** linkable6 left
[17:28] *** evalable6 joined
[17:29] *** linkable6 joined
[17:30] *** djerius_ left
[17:31] *** djerius joined
[17:38] *** dakkar left
[17:39] *** abraxxa left
[18:02] *** reportable6 left
[18:40] *** djerius left
[18:42] *** djerius joined
[18:48] *** [Coke] left
[18:58] *** [Coke] joined
[18:59] <Geth> ¦ doc: 894ab10ecb | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Type/Test.pod6

[18:59] <Geth> ¦ doc: State that isa-ok matches Roles (#3997)

[18:59] <Geth> ¦ doc: 

[18:59] <Geth> ¦ doc: Mu.isa explicitly does *not* match roles, so it seems worth calling out that &isa-ok behaves differently.

[18:59] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/894ab10ecb

[18:59] <linkable6> Link: https://docs.raku.org/type/Test

[18:59] *** Geth left
[19:00] *** Geth joined
[19:00] *** linkable6 left
[19:04] *** Geth left
[19:04] *** Geth joined
[19:08] *** Geth left
[19:09] *** Geth joined
[19:23] <[Coke]> .

[19:30] <jdv> codesections: around?

[19:35] *** monkey_ left
[19:35] *** mcmillhj left
[19:40] *** Geth left
[19:40] *** Geth joined
[19:50] *** monkey_ joined
[20:01] *** linkable6 joined
[20:05] *** reportable6 joined
[20:42] *** vrurg left
[20:44] *** vrurg joined
[20:57] *** Geth left
[20:57] *** Geth joined
[21:02] *** MoC left
[21:23] *** euandreh left
[21:24] *** patrickb joined
[21:29] *** sena_kun left
[21:31] *** sena_kun joined
[21:48] *** lichtkind__ joined
[21:51] *** lichtkind_ left
[22:04] *** Geth left
[22:04] *** Geth joined
[22:08] *** ggoebel left
[22:23] *** ggoebel joined
[22:26] *** patrickb left
[22:28] *** Geth left
[22:28] *** Geth joined
[22:35] *** ggoebel left
[23:03] *** monkey_ left
[23:18] *** djerius left
[23:20] *** djerius joined
[23:36] *** lichtkind__ left
[23:52] *** ggoebel joined
