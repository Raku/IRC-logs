[00:01] *** Doc_Holliwood left
[00:02] *** reportable6 left
[00:03] *** reportable6 joined
[00:47] *** swaggboi left
[00:50] *** swaggboi joined
[01:05] *** yewscion left
[01:12] *** Util left
[01:28] * leont just finished the first version of his slides \o/ (this is quite early by my standards)

[01:38] *** tejr left
[01:44] *** tejr joined
[01:47] *** tejr left
[01:49] *** tejr joined
[01:50] *** tejr left
[01:59] *** sono_ joined
[02:00] *** tejr joined
[02:02] *** sono left
[02:03] *** Kaiepi left
[02:03] *** Kaiepi joined
[02:03] *** perlmaros left
[02:03] *** perlmaros joined
[02:29] *** kraxn joined
[03:29] *** shareable6 left
[03:29] *** bisectable6 left
[03:29] *** statisfiable6 left
[03:29] *** linkable6 left
[03:29] *** reportable6 left
[03:29] *** quotable6 left
[03:29] *** greppable6 left
[03:29] *** notable6 left
[03:29] *** squashable6 left
[03:29] *** evalable6 left
[03:29] *** releasable6 left
[03:29] *** unicodable6 left
[03:29] *** committable6 left
[03:29] *** bloatable6 left
[03:29] *** nativecallable6 left
[03:29] *** benchable6 left
[03:29] *** sourceable6 left
[03:29] *** coverable6 left
[03:29] *** tellable6 left
[03:29] *** greppable6 joined
[03:30] *** benchable6 joined
[03:30] *** tellable6 joined
[03:30] *** committable6 joined
[03:30] *** squashable6 joined
[03:30] *** reportable6 joined
[03:30] *** bloatable6 joined
[03:31] *** sourceable6 joined
[03:31] *** linkable6 joined
[03:31] *** notable6 joined
[03:32] *** nativecallable6 joined
[03:32] *** statisfiable6 joined
[03:32] *** bisectable6 joined
[03:32] *** evalable6 joined
[03:32] *** quotable6 joined
[03:32] *** unicodable6 joined
[03:32] *** coverable6 joined
[03:32] *** releasable6 joined
[03:32] *** shareable6 joined
[04:32] *** reportable6 left
[04:32] *** bloatable6 left
[04:32] *** nativecallable6 left
[04:32] *** notable6 left
[04:32] *** benchable6 left
[04:32] *** coverable6 left
[04:32] *** bisectable6 left
[04:32] *** releasable6 left
[04:32] *** evalable6 left
[04:32] *** greppable6 left
[04:32] *** statisfiable6 left
[04:32] *** sourceable6 left
[04:32] *** shareable6 left
[04:32] *** linkable6 left
[04:32] *** committable6 left
[04:32] *** quotable6 left
[04:32] *** squashable6 left
[04:32] *** unicodable6 left
[04:32] *** tellable6 left
[04:33] *** evalable6 joined
[04:33] *** quotable6 joined
[04:33] *** squashable6 joined
[04:33] *** bloatable6 joined
[04:33] *** coverable6 joined
[04:33] *** shareable6 joined
[04:33] *** benchable6 joined
[04:34] *** greppable6 joined
[04:34] *** statisfiable6 joined
[04:34] *** releasable6 joined
[04:34] *** unicodable6 joined
[04:34] *** linkable6 joined
[04:34] *** reportable6 joined
[04:34] *** sourceable6 joined
[04:35] *** notable6 joined
[04:35] *** tellable6 joined
[04:35] *** committable6 joined
[05:35] *** quotable6 left
[05:35] *** bloatable6 left
[05:35] *** shareable6 left
[05:35] *** evalable6 left
[05:35] *** statisfiable6 left
[05:35] *** sourceable6 left
[05:35] *** linkable6 left
[05:35] *** releasable6 left
[05:35] *** reportable6 left
[05:35] *** notable6 left
[05:35] *** greppable6 left
[05:35] *** squashable6 left
[05:35] *** committable6 left
[05:35] *** unicodable6 left
[05:35] *** tellable6 left
[05:35] *** coverable6 left
[05:35] *** benchable6 left
[05:36] *** nativecallable6 joined
[05:36] *** releasable6 joined
[05:36] *** benchable6 joined
[05:36] *** evalable6 joined
[05:37] *** bloatable6 joined
[05:37] *** squashable6 joined
[05:37] *** greppable6 joined
[05:37] *** coverable6 joined
[05:37] *** unicodable6 joined
[05:38] *** linkable6 joined
[05:38] *** reportable6 joined
[05:38] *** quotable6 joined
[05:38] *** statisfiable6 joined
[05:38] *** sourceable6 joined
[05:38] *** shareable6 joined
[05:38] *** committable6 joined
[05:39] *** notable6 joined
[05:39] *** tellable6 joined
[05:52] *** Ulti_ joined
[05:52] *** Ulti_ left
[05:52] *** Ulti joined
[05:54] *** Ulti left
[05:54] *** Ulti joined
[06:02] *** Doc_Holliwood joined
[06:02] *** stoned75 joined
[06:03] *** reportable6 left
[06:04] *** reportable6 joined
[06:14] *** suman joined
[06:15] *** yewscion joined
[06:26] *** kylese joined
[06:28] *** Raycat|Home left
[06:28] *** Raycat|Home joined
[06:44] *** yewscion left
[06:45] *** kylese left
[06:45] *** stoned75 left
[06:51] *** frost joined
[06:52] *** Raycat|Home left
[06:57] *** kylese joined
[06:57] *** kylese is now known as nibble

[06:59] *** nibble left
[07:05] *** kylese joined
[07:05] *** kylese left
[07:08] *** dogbert17 joined
[07:11] *** dogbert12 left
[07:23] *** kylese joined
[07:24] *** kylese is now known as hulk

[07:25] *** hulk left
[07:27] *** kylese joined
[07:32] *** Doc_Holliwood left
[07:36] *** suman left
[07:46] *** dakkar joined
[07:57] *** suman joined
[08:01] *** Sgeo left
[08:17] *** squashable6 left
[08:17] *** bisectable6 joined
[08:18] *** squashable6 joined
[08:49] *** suman left
[08:59] *** patrickb joined
[09:07] *** kraxn left
[09:08] *** stoned75 joined
[09:32] <El_Che> juanfra: https://github.com/nxadm/rakudo-pkg

[09:48] *** sono_ left
[10:15] <leont> CIAvash: what's the difference between the rakudo and rakudo-bin aur repositories? Is the latter just more maintained?

[10:36] *** dakkar left
[10:57] *** ecocode left
[11:00] *** ecocode joined
[11:07] *** Doc_Holliwood joined
[11:45] *** stoned75 left
[11:50] *** Kaiepi left
[11:51] *** frost left
[11:58] *** suman joined
[12:02] *** Kaiepi joined
[12:02] *** reportable6 left
[12:17] *** stoned75 joined
[12:28] *** Doc_Holliwood left
[12:32] <patrickb> What's the easiest way to get at the method object of a method in an object? (e.g. to make a supply call that method regularly)

[12:35] <lizmat> find_method ?

[12:36] <lizmat> m: dd 42.^find_method("Str")

[12:36] <camelia> rakudo-moar 0de28ae72: OUTPUT: ¬´Method Str = proto method Str (Mu: |) {*}‚ê§¬ª

[12:36] <patrickb> self.^find_method('some-method')  ?

[12:37] <lizmat> m: dd 42.can("Str")   # more HLL

[12:37] <camelia> rakudo-moar 0de28ae72: OUTPUT: ¬´(proto method Str (Mu: |) {*}, proto method Str (Mu: |) {*})‚ê§¬ª

[12:37] <patrickb> OK, so there is no short-hand thingie like `&` for methods?

[12:37] <lizmat> no, there isn't

[12:37] <patrickb> ah, can looks a bit nicer.

[12:37] <patrickb> Thanks lizmat!

[12:37] <lizmat> yeah, but the interface is a bit different

[12:40] <lizmat> also, for some reason, 42.can returns the same proto twice :-(

[12:47] <patrickb> I think I only just understood the intricacies of my question. A simple solution is to just use an anonymous sub and call the method from there.

[13:06] *** stoned75 left
[13:13] *** reportable6 joined
[13:26] *** Doc_Holliwood joined
[13:27] *** suman left
[13:54] *** suman joined
[14:01] *** Doc_Holliwood left
[14:11] *** Guest92 joined
[14:13] *** Guest92 left
[14:13] *** Guest79 joined
[14:31] *** Doc_Holliwood joined
[14:41] <juanfra> <leont "CIAvash: what's the difference b"> "rakudo-bin" uses the binary tarball from rakudo.org. "rakudo" builds rakudo from the sources.

[14:42] <leont> As a user, why would I prefer one over the other?

[14:45] <juanfra> building rakudo and the dependencies take a lot of resources. rakudo-bin is like install an official arch package.

[14:45] <juanfra> rakudo-bin extract the content from the tarball and the creates an arch package.

[14:47] <juanfra> long time ago there was an official arch package for rakudo but for some reason they retired it 

[14:56] *** holly joined
[15:11] *** colomon joined
[15:13] <colomon> I'm finally using Comma in a big way, but I have one weird thing going on.  When I say something like $file.print: qq:to/FOOTER/; (with the proper heredoc following), Comma complains "Too many position arguments".  The code seems to compile and run just fine.  Am I doing something subtle wrong, or is this a Comma bug?

[15:20] *** colomon left
[15:31] *** Doc_Holliwood left
[15:36] *** suman left
[15:41] *** colomon joined
[15:57] <leont> juanfra: thanks, that does help.

[16:01] *** Util joined
[16:18] *** colomon left
[16:24] *** Guest79 left
[16:47] *** AntonOks joined
[17:02] *** holyghost joined
[17:04] *** stoned75 joined
[17:07] <holly> latest slackware release 2016 :-/

[17:07] <tellable6> 2021-06-03T20:16:24Z #raku <japhb> holly There is a #raku-gamedev channel which you may be interested in.

[17:08] <Geth> ¬¶ doc/cool-coercers: 1d91d36be6 | (Stoned Elipot)++ | doc/Type/Cool.pod6

[17:08] <Geth> ¬¶ doc/cool-coercers: Fix pastos and add a bit of diversity in examples

[17:08] <Geth> ¬¶ doc/cool-coercers: review: https://github.com/Raku/doc/commit/1d91d36be6

[17:11] <holly> nice

[17:13] <holly> .tell japhdb : thanks, I joined :-)

[17:13] <tellable6> holly, I haven't seen japhdb around, did you mean japhb?

[17:13] <holly> .tell japhb : thanks, I joined :-)

[17:13] <tellable6> holly, I'll pass your message to japhb

[17:15] <holly> they're's lots of game packages I see

[17:15] <holly> s/they're/there

[17:20] *** AntonOks left
[17:32] <Geth> ¬¶ doc: 1e55cfdca4 | (Stoned Elipot)++ (committed by Juan Juli√°n Merelo Guerv√≥s) | doc/Type/Cool.pod6

[17:32] <Geth> ¬¶ doc: Add Cool coercers ref #3361

[17:32] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/1e55cfdca4

[17:32] <Geth> ¬¶ doc: b232304520 | (Stoned Elipot)++ (committed by Juan Juli√°n Merelo Guerv√≥s) | doc/Type/Cool.pod6

[17:32] <Geth> ¬¶ doc: Fix pastos and add a bit of diversity in examples

[17:32] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/b232304520

[17:32] <linkable6> Link: https://docs.raku.org/type/Cool

[17:33] *** linkable6 left
[17:36] *** linkable6 joined
[17:36] *** kylese left
[17:42] *** holyghost left
[17:44] *** holly left
[17:57] *** notna joined
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[18:09] *** Sgeo joined
[18:24] *** Doc_Holliwood joined
[18:38] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2021/06/05/late-early-bound/

[18:56] <m6locks> time travel ftw

[19:05] *** patrickb left
[19:28] *** patrickb joined
[19:31] *** notna left
[20:27] *** Doc_Holliwood left
[20:27] *** gfldex left
[20:27] *** Doc_Holliwood joined
[20:32] *** gfldex joined
[20:35] *** Doc_Holliwood left
[20:37] *** Doc_Holliwood joined
[20:44] *** patrickb left
[21:09] *** cbk left
[21:16] *** guifa joined
[21:17] <guifa> so we can set the precedence for circumfixes (from the outside)

[21:17] <guifa> (that is, when Raku picks up the initial symbol)

[21:18] <guifa> Is there any way to adjust the precedence for the terminal symbol?  Unfortunately, if the circumfix's second symbol begins with anything that looks like a prefix, infix, term, or circumfix-start, the parsing fails, and that really limit you on the symbols that can be used

[21:27] <leont> I don't think that's a precedence issue

[21:27] <leont> It's a fundamental "don't poke there", ambiguous syntax is not a good thing

[21:34] <guifa> I kind of get that, but I wonder if having a "terminate-asap" property might help. I've run into it on two separate occasions, and couldn't understand why the circumfix wasn't working (LTA error but not sure how to improve it)

[21:35] <guifa> circumfix:¬´<html> </html>¬ª is what I was trying to do, but the terminal < gets interpreted as less-than, and then the / as regex-start.

[22:06] *** yewscion joined
[22:20] *** guifa left
[22:21] *** yewscion_ joined
[22:24] *** yewscion left
[22:39] *** stoned75 left
[22:49] *** pierrot left
[22:49] *** pierrot joined
[23:00] *** yewscion_ is now known as yewscion

[23:08] *** cbk joined
[23:50] *** Doc_Holliwood left
