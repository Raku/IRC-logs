[00:00] *** moon-child joined
[00:03] *** epony joined
[00:06] *** dogbert2 joined
[00:08] *** dogbert17 left
[00:11] *** guifa2 left
[00:19] *** peri404 joined
[00:20] *** sivoais left
[00:21] *** raydiak joined
[00:21] *** sivoais joined
[00:26] *** JRaspass left
[00:46] <tony-o> .tellable

[00:47] <tony-o> .tell jmerelo another article/bit of info on zef eco - https://deathbyperl6.com/faq-zef-ecosystem/

[00:47] <tellable6> tony-o, I'll pass your message to jmerelo

[00:49] *** pecastro left
[01:00] *** sono__ joined
[01:03] *** Black_Ribbon left
[01:03] *** mowotter left
[01:12] *** gdonald joined
[01:54] *** gnufr33dom joined
[02:31] *** kvw_5_ joined
[02:35] *** kvw_5 left
[02:35] *** colemanx joined
[02:59] *** Xliff left
[03:07] *** squashable6 left
[03:09] *** squashable6 joined
[03:15] *** simcop2387 left
[04:08] *** simcop2387 joined
[04:16] <notandinus> if i specify a version in "depends" section of META6.json then will zef install that specific version if the user already has the module with higher version?

[04:18] <notandinus> hmm  i noticed the "+", so this : WWW:ver<1.005006+> means any version above 1.005006 will work, right?

[04:24] *** __jrjsmrtn__ joined
[04:25] *** _jrjsmrtn left
[04:33] *** Garbanzo_ left
[04:33] *** Garbanzo_ joined
[04:36] *** kaiwulf left
[04:52] *** rindolf joined
[05:00] *** cxreg left
[05:16] *** wamba joined
[05:26] *** colemanx left
[05:33] *** simcop2387 left
[05:36] *** simcop2387 joined
[05:48] <xinming_> SmokeMachine: when we fetching large column, which is over 2M size, It's quite slow, Is there any hint on how I can troubleshooting this?

[05:49] *** simcop2387 left
[06:18] <rindolf> Hi all! Can anyone recommend a good chatroom for history/etymology disussions? Please no discord.gg ( https://twitter.com/shlomif/status/1338045500210212866 ) or whatsApp though ( https://en.wikipedia.org/wiki/WhatsApp#Reception_and_criticism )

[06:22] *** brtastic joined
[06:28] *** wamba left
[06:52] *** ufobat_ joined
[06:59] *** simcop2387 joined
[07:10] *** ufobat joined
[07:24] *** sjm_uk joined
[07:35] <SmokeMachine> xinming_: sorry, no... I’ve never tried to get so large columns. Do you know where it’s getting slow?

[07:43] *** parabolize left
[07:57] <xinming_> SmokeMachine: I just now tested, It seems, it's slow when I try to assign values to variable.

[07:58] <xinming_> SmokeMachine: It's pre-generated html fragment

[08:02] *** stoned75 left
[08:05] *** stoned75 joined
[08:09] <CIAvash> weekly: https://deathbyperl6.com/faq-zef-ecosystem/

[08:09] <notable6> CIAvash, Noted! (weekly)

[08:10] *** Garbanzo_ left
[08:19] *** domidumont joined
[08:28] *** MasterDuke joined
[08:40] *** stoned75 left
[08:40] *** stoned75 joined
[08:41] *** rindolf left
[08:41] *** kvw_5_ left
[08:41] *** kvw_5 joined
[08:42] *** rindolf joined
[08:43] *** dakkar joined
[08:46] *** pecastro joined
[08:57] *** gnufr33dom left
[09:16] <notandinus> should i report moar vm panics? my code is probably doing the wrong thing but it compiles and runs until moar vm panic

[09:18] <notandinus> here is the code and error: https://paste.debian.net/hidden/0741519e/

[09:18] *** JRaspass joined
[09:18] <notandinus> i'm trying to get the total time taken to execute the word-search subroutine

[09:19] *** mst joined
[09:20] <notandinus> hmm, wait looks like the *return* in front was causing the panic

[09:21] <notandinus> anyways, how would you get the time taken to run word-search subroutine in this: https://paste.debian.net/hidden/e6e54b52/

[09:22] <notandinus> it uses concurrency to run the same subroutine multiple times for different values, i want the time taken to run each subroutine individually and also the total time (which can be timed directly by putting DateTime.now - $initial after "await" right?)

[09:30] <notandinus> hmm i probably want to do it in parallel

[09:34] *** sortiz left
[09:37] *** aborazmeh joined
[09:37] *** aborazmeh left
[09:37] *** aborazmeh joined
[09:46] *** brtastic left
[09:46] *** Scimon joined
[09:51] *** Sgeo left
[09:52] *** Scimon left
[09:52] *** Scimon joined
[09:53] *** Scimon left
[09:53] *** Scimon joined
[09:55] *** Scimon left
[09:55] *** Scimon joined
[09:56] <Scimon> Morning. I'm just tweaking my IRC settings. Think it's done now.

[10:06] *** aborazmeh left
[10:08] *** domidumont1 joined
[10:10] *** domidumont left
[10:26] *** MasterDuke left
[10:29] *** wamba joined
[10:31] *** nosqrt joined
[10:31] *** afresh1 left
[10:32] *** afresh1 joined
[10:39] *** afresh1 left
[10:44] *** afresh1 joined
[10:59] *** sono__ left
[11:03] *** ufobat_ left
[11:03] *** ufobat left
[11:03] *** ufobat_ joined
[11:03] *** ufobat joined
[11:07] *** ufobat__ joined
[11:07] *** ufobat_ left
[11:08] *** ufobat left
[11:08] *** ufobat_ joined
[11:16] *** ufobat__ left
[11:16] *** ufobat_ left
[11:23] *** ufobat joined
[11:23] *** PimDaniel joined
[11:25] <PimDaniel> What is the common mistake with has @.aaa; and cannot look up attributes in method aaa; what is the hell?

[11:25] <PimDaniel> Heu bonjour quand-même , heu \o

[11:27] *** ufobat left
[11:27] *** ufobat joined
[11:33] *** PimDaniel left
[11:35] *** nosqrt left
[11:37] *** ufobat left
[11:37] *** ufobat joined
[11:39] *** nosqrt joined
[11:40] *** PimDaniel joined
[11:43] *** ufobat__ joined
[11:44] *** ufobat left
[11:46] *** PimDaniel left
[11:57] *** ufobat__ left
[11:59] *** ufobat joined
[12:01] *** aborazmeh joined
[12:01] *** aborazmeh left
[12:01] *** aborazmeh joined
[12:01] *** WisdomFusion joined
[12:03] *** notagoodidea joined
[12:03] *** PimDaniel joined
[12:04] <lizmat> m: class A { has @.aaa }; A.aaa

[12:04] <camelia> rakudo-moar 823148834: OUTPUT: «Cannot look up attributes in a A type object␤  in method aaa at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[12:04] <lizmat> PimDaniel: is that the error?

[12:04] <lizmat> "in a type object"

[12:04] <PimDaniel> lizmat: no, heu not sure!

[12:05] *** ufobat_ joined
[12:05] <PimDaniel> I am into A

[12:05] <lizmat> if that's the error, you didn't instantiate the class, aka, you didn't call .new on it

[12:05] <lizmat> m: class A { has @.aaa }; A.new.aaa

[12:05] <camelia> rakudo-moar 823148834: ( no output )

[12:06] <PimDaniel> suppose my constructor is tricky : like :  method new (**@points where all (@points>>.elems) == 2) {

[12:07] *** ufobat left
[12:07] <PimDaniel> I cannot attrib directly each elements of x in a list a point: 

[12:07] <PimDaniel> class A has @.coords;

[12:08] <PimDaniel> loop is  for @points -> ($x is raw , $y  is raw) { 

[12:09] <dakkar> please show a bit more code…

[12:09] <PimDaniel> i can't do $.coordonnees.push(Pint.new($x,$y); 

[12:09] <PimDaniel> *Point

[12:10] <dakkar> I can't follow, the names of the things you mention don't match with each other

[12:10] <dakkar> please write a small test case and put it up somewhere (some pastebin, gist, or whatever)

[12:10] <PimDaniel> i made a my @coords variable too;

[12:10] <PimDaniel> ok

[12:10] <PimDaniel> and it works but i have a question:

[12:12] <PimDaniel> self.bless(:@coords, :$motif); , does this mean that ha must have a @coords and a @.coords variable? and i suppose it sends it to bless in hash form, no?

[12:13] <dakkar> "variable" and "attribute" are not the same thing

[12:14] <dakkar> (plus, why are you changing `new` and calling `bless`? are you sure you need that?)

[12:14] <dakkar> I still can't see your code, so I can't answer anything

[12:14] <PimDaniel> I'm sure of nothing!

[12:14] <dakkar> that's a good start!

[12:14] <dakkar> what are you trying to accomplish?

[12:15] <Scimon> :D Generally I'd say that if you're using bless in a simple object you're probably doing it wrong. 

[12:15] <dakkar> hmm. lunchtime for me now, I'll be back in ~1hour

[12:15] <PimDaniel> i try to lean Raku!

[12:15] <Scimon> I would look at the BUILD submethod.

[12:15] <PimDaniel> *learn Raku!

[12:15] <Scimon> Wonderful! 

[12:15] <PimDaniel> All my code is no sense.

[12:15] <tadzik> ime BUILD is rarely what you want, it looks deceptively simple and deceptively isn't

[12:15] <PimDaniel> And that is why i do not want to show it.

[12:16] <tadzik> bless if fine if you want your new() method to take arguments in a non-standard way, I'd say

[12:16] <Scimon> Ahhh... I may have been decieved.

[12:16] <Scimon> It's ok. We're nice.

[12:16] <tadzik> TWEAK is the BUILD alternative that mostly does what people actually expect :P

[12:16] <Scimon> Ah yes.

[12:16] <PimDaniel> One second! it comes...

[12:16] <tadzik> don't worry, we've all written bad code. It's the first, mandatory step to writing good code

[12:17] <Scimon> What they said

[12:17] *** WisdomFusion left
[12:17] <PimDaniel> https://pastebin.com/C8BPMrgg

[12:18] <Scimon> So @.coordeonnes is an array of Points? 

[12:18] <tadzik> this looks sensible

[12:19] <PimDaniel> Porqué por favor?

[12:19] <tadzik> self.bless(:@coordonnees); means self.bless(coordonnees => @coordonnees), if that's the bit that confused yed

[12:19] <tadzik> s/yed/you/

[12:19] <PimDaniel> YES!

[12:21] <PimDaniel> but then another question occurs: is @coordonnees copied in @.coordonnees? or is it a kind of pointeur? Is it a good way to operate?

[12:22] *** Matthias15 joined
[12:23] <PimDaniel> And in general how would you attrib objects of object in contructor? May be there's a simple way?

[12:23] <tadzik> I'm not sure what the technicalities are, but this is idiomatic code

[12:24] <tadzik> well, I'd just have the user submit an array of Points, instead of creating them yourself

[12:24] <PimDaniel> Idiomatic ? This means that i am idiot?

[12:24] <tadzik> :D no, it means that that's how an experienced programmer would write it, and others would easily understand it

[12:26] <Scimon> Of course you can have a multi method new where if they submit an array of none points it maps it to and array of points and then calls new again with that.

[12:26] <tadzik> following up on my suggestion: it may seem easier to create Point inside new, but it's a bit of an anti-pattern in object-oriented programming in general. Imagine a situation where you have objects that are compatible with Point (they have the exact same interface, or a "bigger" one), and you wanted to use them here. Currently you can't since your Polygone forces everything to be a Point

[12:26] <Matthias15> I have some text files (json and simple word lists) which contains german special characters like ö,ä. All these files are saved as utf8. Now, when i am slurping these files i got in some cases broken characters and some are printed well (with ä..). Are there any suggestions how to dig into that problem?

[12:26] <Scimon> (I do love multi methods for that kind of thing)

[12:26] <Matthias15> running on windows btw

[12:26] <tadzik> Scimon: yeah, that's a good solution to this

[12:27] <Scimon> How are you reading the files Matthias15?

[12:27] <Matthias15> my @list = slurp "list.json";

[12:28] <Matthias15> and in a hash context: my %j = from-json slurp "search.json";

[12:29] <Matthias15> i have tried diffrent encodings while slurping..nothing changed

[12:29] <PimDaniel> Not sure to understand what you say :(.

[12:30] <PimDaniel> En plus! I must go now! Thank's to all of you.

[12:30] <PimDaniel> I must leave: back later... merci beaucoup!

[12:30] <PimDaniel> i'll read you again in some hours...

[12:30] <PimDaniel> sorry!

[12:30] *** PimDaniel left
[12:32] <tadzik> :)

[12:32] <Matthias15> No suggestions to prevent me going crazy? :D

[12:32] <Scimon> And I take it when you open the files in an editor they look OK? I'm not sure I'm afraid. I take it you're using powershell?

[12:33] <Matthias15> in the text editor (ultraedit) all files are ok. and im using the normal CMD

[12:33] <Scimon> Hmmmm.... that *might* be the problem.

[12:34] <Matthias15> just tried..same result in powershell

[12:34] <Scimon> I can't check it out until this evening as I'm on Linux at work.

[12:34] <Scimon> Ok... Hmmm.

[12:35] <Matthias15> i made a copy from a file which dont make problems..then i copied the content from another file and then i got problems again..weird

[12:36] <Scimon> It might be the editor isn't saving it as utf8 correctly? It feels like an encoding issue.

[12:37] *** wamba left
[12:37] <Matthias15> Ultraedit is some kind of a mature editor..could this happen? mhm

[12:39] *** aborazmeh left
[12:40] <Scimon> The ä thing is a dead give away for encoding errors. I see it a lot with the £ symbol which will often end up corrupted. 

[12:42] <Matthias15> well..do you have a hint how to get into that issue on a more lower level?

[12:42] *** MasterDuke joined
[12:44] <Scimon> Well first thing I'd think about is try and make a fresh file and see if the issue happens. Also try writing from Raku to a file and then try reading it. Then open and make a simple mod in ultaedit and see what happens.

[12:44] <Scimon> I may be able to look at it this evening but not before I'm afraid.

[12:48] <Matthias15> well, makes sense..thank you so far!

[12:48] <notandinus> zef was taking ~550-580M memory while installing App::Mi6, is reducing memory usage something that can be done in future?

[13:02] *** wamba joined
[13:11] *** wamba left
[13:11] *** wamba joined
[13:30] <kawaii> I've experienced the same thing, using zef on servers with ~1GB RAM often causes it to oomkill 

[13:31] *** wamba left
[13:35] *** vike left
[13:38] *** Matthias15 left
[13:43] <timotimo> we sure hope so

[13:44] <timotimo> could be interesting to grab a memory snapshot at some opportune moment

[13:45] <timotimo> i assume installing App::Mi6 causes multiple things to be installed?

[13:45] <timotimo> quite possible that from each installation something sticks around that doesn't need to

[13:45] <timotimo> also, does zef use /tmp? if so, is /tmp on the machine in question a tmpfs?

[13:46] <notandinus> yeah it does cause multiple things to install, i noticed slowness when the install was completing, it was using ~550 MB of memory then

[13:46] <notandinus> timotimo: no, i'm on obsd, /tmp is not tmpfs

[13:48] <notandinus> even just the REPL takes ~100mb, not nice for low resource systems

[13:48] <timotimo> that's more than i'm used to

[13:49] <timotimo> let me double-check

[13:49] <timotimo> need to build a rakudo first tho

[13:49] <notandinus> btw can i make a dependency optional? like if the user has WWW dep then use it, otherwise just print no WWW dep and exit,  to do this currently i created a new branch without-www and removed the dep there, is there a better way?

[13:51] <notandinus> ah i  see, i ran 2019.11 on ubuntu and it was ~100mb in REPL, same for 2020.10 on obsd

[13:55] <timotimo> oh, huh, i'm at 150 megabytes for the repl?

[13:57] <notandinus> hmm which version? 

[13:59] <kawaii> timotimo: `zef install API::Discord Cache::Async Cro::HTTP::Client JSON::Fast YAMLish` # caused a server with only 1GB of RAM to oomkill it ~3 times before it finally succeeded on the 4th try, not sure if you can replicate 

[14:01] *** gnufr33dom joined
[14:02] <timotimo> well, i have 16 gigs of ram, but i'm already 13.2 of that used, and already 7 gigs swapped out into zram ...

[14:03] *** MasterDuke left
[14:04] <timotimo> but when my system ooms i tend to be unable to use it for at least a couple minutes and i'm actually trying to get work done :)

[14:05] <notandinus> https://jnthn.net/papers/2015-yapcasia-concurrency.pdf#page=24

[14:05] <notandinus> ^ why did jnthn use start/await over here and why not .race things?

[14:05] <notandinus> if i understand correctly start/await runs things concurrently and .race runs them in parallel right?

[14:05] <timotimo> was race already implemented with parallelism already?

[14:06] <notandinus> yeah, they give example of using race later in the talk

[14:06] <[Coke]> I assume it was for pedagogical reasons.

[14:07] <timotimo> quite possible

[14:07] <notandinus> i see, if i understand correctly start/await will cause one to start processing the json while the other one is still being read right?

[14:08] <notandinus> but in .race, both will start reading at the same time 

[14:11] <lizmat> notandinus: I don't think .race and .hyper were implemented then

[14:11] <notandinus> hmm start/await was under parallelism in that talk but in docs/language it's under concurrency

[14:12] <notandinus> lizmat: they talk about race in slide 36

[14:12] <notandinus> so is start/await for parallel or concurrent computing?

[14:13] <lizmat> ah, then I stand corrected :-)

[14:15] <timotimo> if you want to be extra pedantic, you can set a custom $*SCHEDULER and/or $*AWAITER to get different amounts of concurrent/parallel

[14:29] *** wbn joined
[14:33] <notandinus> i see, 

[14:34] *** wbn left
[14:35] <timotimo> also, i forgot which one is concurrent and which one is parallel

[14:35] *** wamba joined
[14:35] <timotimo> one of them you can get without multiple cores, i think that's concurrent

[14:35] *** kaiwulf joined
[14:35] *** wbn joined
[14:36] *** MasterDuke joined
[14:38] <notandinus> yeah, parallel can't run without multiple cores

[14:39] <timotimo> the default implementation of "start" will push the thing into a job queue from which multiple worker threads will pull tasks

[14:39] <timotimo> well, that's the default implementation of the scheduler

[14:40] *** wbn left
[14:40] <timotimo> hyper or race will create a job to split the incoming data into batches, one job to merge the results together at the end, and some amount of worker jobs to do all the per-item work in the middle

[14:42] *** wbn joined
[14:43] *** vike joined
[14:43] <notandinus> i see, do the worker threads run on multiple cores or single?

[14:43] <timotimo> they are threads, like what you get with "Thread.new"

[14:43] <timotimo> if your operating system allows it, they will run on separate cores

[14:44] <notandinus> i see, i don't know about threads, i'll look them up

[14:44] <timotimo> of course you can use cpuset and friends to limit all of that to your liking

[14:44] <timotimo> well, Thread is available in rakudo, but usually there's other things that will be more sensible to your use case

[14:44] <notandinus> so if they run on multiple cores doing tasks then it's basically parallel computing right?

[14:45] <timotimo> because threads "don't compose" unlike start/await/etc

[14:45] <timotimo> yeah that'd be parallel

[14:45] <notandinus> oh so start/await is running things in parallel?

[14:46] <notandinus> this difference b/w concurrent and parallel is confusing

[14:46] *** wbn left
[14:46] <timotimo> i think you can get away without caring about the difference

[14:47] <notandinus> i see

[14:50] *** vike left
[14:57] *** vike joined
[15:00] *** parabolize joined
[15:04] *** dakkar_ joined
[15:04] *** dakkar left
[15:04] *** dakkar_ is now known as dakkar

[15:10] *** aborazmeh joined
[15:10] *** aborazmeh left
[15:10] *** aborazmeh joined
[15:34] <elcaro> notandinus: I saw that you solved your nested search thing in octans, but your question yesterday spurred me to build a deepgrep

[15:35] <elcaro> https://modules.raku.org/dist/Deepgrep:cpan:ELCARO

[15:52] *** mowotter joined
[15:55] *** Sgeo joined
[15:59] <notandinus> elcaro: i see, my solution was not ideal and i was looking for something better, thanks for this

[16:01] *** imcsk8 left
[16:02] <notandinus> m: for 1 .. 10 { state $i = 100; say $i++;}

[16:02] <camelia> rakudo-moar 823148834: OUTPUT: «100␤101␤102␤103␤104␤105␤106␤107␤108␤109␤»

[16:02] <notandinus> hmm that's nice

[16:02] <notandinus> m: for 1 .. 10 { state $i = 100; say $i++;} say $i

[16:02] <camelia> rakudo-moar 823148834: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3for 1 .. 10 { state $i = 100; say $i++;}7⏏5 say $i␤»

[16:03] <notandinus> m: for 1 .. 10 { state $i = 100; say $i++;}; say $i

[16:03] <camelia> rakudo-moar 823148834: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$i' is not declared␤at <tmp>:1␤------> 3.. 10 { state $i = 100; say $i++;}; say 7⏏5$i␤»

[16:04] <notandinus> is there another way of keeping track of how many times the loop has been executed?

[16:04] <notandinus> say if i'm looping over "test".IO.lines and want to know the line number

[16:04] *** imcsk8 joined
[16:05] <notandinus> or is there a better way of converting a 2d grid in a file to a 2d array in raku?

[16:08] *** kaiwulf left
[16:09] <Scimon> What's the file format? 

[16:09] <notandinus> plain text

[16:10] <notandinus> it's like this: t e s t\nh e l l ...

[16:10] <notandinus> i'm looping over .lines and then .words to convert it to a 2d array

[16:11] <Scimon> So @a = "file".IO.lines.map(*.words); would be my thought.

[16:11] *** aborazmeh left
[16:12] <Scimon> m: my $file = "t e s t\nh e l l\na b c d";my @a = $file.lines.map(*.words);dd @a;

[16:12] <camelia> rakudo-moar 823148834: OUTPUT: «Array @a = [("t", "e", "s", "t").Seq, ("h", "e", "l", "l").Seq, ("a", "b", "c", "d").Seq]␤»

[16:12] <Scimon> m: my $file = "t e s t\nh e l l\na b c d";my @a = $file.lines.map(*.words.Array);dd @a;

[16:12] <camelia> rakudo-moar 823148834: OUTPUT: «Array @a = [["t", "e", "s", "t"], ["h", "e", "l", "l"], ["a", "b", "c", "d"]]␤»

[16:13] <Scimon> Ta fa

[16:13] <Scimon> ta da even.

[16:13] <notandinus> oh, yeah i've seen that before

[16:13] <notandinus> thanks

[16:14] <Scimon> No worries.

[16:14] <notandinus> elcar_o i'm sure that my input will be a 2d grid so i think i'll stick to nested for loop and that way i'll be able to work around deepgrep's limitation

[16:15] *** mowotter left
[16:16] <notandinus> deepgrep is nice for when nesting is not known but MxN grid is expected

[16:27] <notandinus> The iterator of this Seq is already in use/consumed by another Seq

[16:27] <notandinus> ^ i get that

[16:28] <notandinus> i'm reading a file in @a and iterating over it, i think @a is lazy so it's not letting me iterate over @a

[16:28] <notandinus> i've encountered this before, don't recall how to fix it

[16:28] <notandinus> ?

[16:29] <notandinus> hmm i just ran ag and found .cache.Array that fixed it

[16:31] *** sortiz joined
[16:43] *** |oLa| joined
[16:45] *** |oLa| left
[16:48] *** Raycat|Work joined
[16:48] <Raycat|Work> Hey, quick question.

[16:48] <Raycat|Work> Is there a nicer way to say `.grep(! (* %% 2))`?

[16:49] <Scimon> m: say 5 !%% 2

[16:49] <camelia> rakudo-moar 823148834: OUTPUT: «True␤»

[16:49] <Raycat|Work> i didn't know that was an operator

[16:49] <Raycat|Work> Thanks!

[16:49] <Scimon> So .grep( * !%% 2 )

[16:50] <Scimon> Neither did I I tried it out ;)

[16:51] <JRaspass> Isn't a single percent good enough in practice? The remainder will still be "true"

[16:52] <Scimon> %% is the is divisible by operator.

[16:52] <JRaspass> yeah what i'm saying is grep: * % 2 will produce the same results as !%%

[16:53] <Scimon> Yeah.. but only for 2. Where as !%% will work for any divisor.

[16:54] <JRaspass> really? I can't see where it breaks down, 3 is fine

[16:54] <Scimon> (... I'm being dumb aren't I?)

[16:54] <JRaspass> but yeah, probably clearer to use not exactly divisable than say has remainder

[16:54] <JRaspass> i guess i'm used to perl where we don't have these fancy ops ;-)

[16:55] <Scimon> https://docs.raku.org/language/operators#Negated_relational_operators : Here's how it works.

[16:55] <Scimon> You can negate any Boolean operator that doesn't begin with !

[16:55] <JRaspass> i guess that explains why not smart match is !~~ rather than !~, nice symertry

[16:55] *** gnufr33dom left
[16:56] *** notagoodidea left
[16:57] <Raycat|Work> m: say so 0

[16:57] <camelia> rakudo-moar 823148834: OUTPUT: «False␤»

[16:57] <Scimon> Yeah I just... I'd rather avoid relying on that.

[16:57] <Scimon> Because it makes for magic code.

[16:58] <JRaspass> TIMTOWTDI :-P

[16:58] <Raycat|Work> Dawg, we're using a language built on magic

[16:58] <Raycat|Work> When your language can print out 90% of Baby Shark in one line, all bets are off

[16:59] <tadzik> m: say "baby shark tititititi"

[16:59] <camelia> rakudo-moar 823148834: OUTPUT: «baby shark tititititi␤»

[16:59] <tadzik> wasn't too hard :P

[16:59] <Raycat|Work> no no no

[16:59] <Raycat|Work> it's so much worse

[16:59] <Raycat|Work> I have to find that now

[16:59] <tadzik> is it shark-shaped?

[17:00] <Raycat|Work> No, it uses ZX

[17:00] <Raycat|Work> Oops, X~

[17:00] <Raycat|Work> But this is it

[17:00] <Raycat|Work> (<Baby Daddy Mommmy Grandpa Grandma>X~" Shark"X~ |((" doo"x 6)xx 3),'!')>>.say

[17:00] <Raycat|Work>  

[17:00] <evalable6> Raycat|Work, rakudo-moar 823148834: OUTPUT: «Baby Shark doo doo doo doo doo doo␤Baby Shark d…»

[17:00] <evalable6> Raycat|Work, Full output: https://gist.github.com/c681d9b6e3ff290471677e17e396b8b1

[17:01] *** nosqrt left
[17:02] <Raycat|Work> Also, what triggers evalable6? Any Raku code?

[17:02] <Raycat|Work> "Hello.".say

[17:02] <evalable6> Raycat|Work, rakudo-moar 823148834: OUTPUT: «Hello.␤»

[17:02] <Raycat|Work> Interesting

[17:02] <Raycat|Work> Potentially abusable

[17:03] <AlexDaniel`> as if `m: hacketyhack` isn't abusable?

[17:03] <AlexDaniel`> don't abuse it, it's a community service :)

[17:05] <AlexDaniel`> ebabable6: thank you for your service!

[17:05] <linkable6> AlexDaniel`, I'm happy to help!

[17:05] <tellable6> AlexDaniel`, \o/

[17:05] <evalable6> AlexDaniel`, \o/

[17:05] <AlexDaniel`> now that's an actual issue :D

[17:05] <AlexDaniel`> MasterDuke: I think sift4 is acting up :D

[17:06] <tadzik> Raycat|Work: hah, nice

[17:07] <AlexDaniel`> MasterDuke: not your module, but the algorithm itself probably. It's hard to see how all these would match

[17:07] <AlexDaniel`> evavable6: say 42

[17:07] <coverable6> AlexDaniel`, Seems like you forgot to specify a revision (will use “HEAD” instead of “say”)

[17:07] <evalable6> AlexDaniel`, rakudo-moar 823148834: OUTPUT: «42␤»

[17:07] <AlexDaniel`> yeah something is wrong

[17:08] <AlexDaniel`> or maybe we should just lower the threshold

[17:08] <coverable6> AlexDaniel`, https://gist.github.com/0932a02480e119a4a62e09d70d5d531a

[17:11] <AlexDaniel`> lovable6: say 42

[17:11] <coverable6> AlexDaniel`, Seems like you forgot to specify a revision (will use “HEAD” instead of “say”)

[17:12] <AlexDaniel`> that one kinda makes sense at least

[17:12] <coverable6> AlexDaniel`, https://gist.github.com/992c3bc7f7109c9694618d5907d1319f

[17:16] *** sortiz left
[17:20] *** sena_kun joined
[17:26] *** PimDaniel joined
[17:26] <PimDaniel> I'm back!

[17:27] <tadzik> welcome back :)

[17:27] <PimDaniel> Here's my code (again) : https://pastebin.com/C8BPMrgg

[17:27] <PimDaniel> Is there a simpler way to achieve this?

[17:27] <PimDaniel> Or is there something bad in my code?

[17:27] *** natrys joined
[17:28] <tadzik> I'm not sure if you need the `is raw`'s

[17:28] <PimDaniel> Not surprise: i don't understand it :(. 

[17:29] <PimDaniel> *surprised

[17:29] <PimDaniel> is rw is easy and ok but is raw ???? This is not clear to me.

[17:30] <PimDaniel> I suppose it plays with tie into variables.

[17:30] <PimDaniel> yes/no ?

[17:32] *** mowotter joined
[17:37] *** domidumont1 left
[17:39] <tadzik> if you don't understand it, why did you put it there? :)

[17:42] *** dakkar left
[17:47] *** JRaspass left
[17:54] *** japhb left
[17:58] *** MasterDuke left
[18:01] *** sortiz joined
[18:07] *** stoned75 left
[18:15] <PimDaniel> I'v put it because it is nice!

[18:16] <PimDaniel> is raw is beautiful for me.

[18:16] *** Raycat|W` joined
[18:16] <PimDaniel> No te preocupas!

[18:17] <PimDaniel> well i do not yet understand but i see that sometimes scripts work when i put it. 

[18:18] *** Raycat|Work left
[18:19] *** PimDaniel left
[18:22] *** Scimon left
[18:23] *** japhb joined
[18:34] *** Black_Ribbon joined
[18:53] *** aluaces left
[18:59] *** Garbanzo_ joined
[19:01] *** JRaspass joined
[19:07] *** sena_kun left
[19:08] *** brtastic joined
[19:13] *** brtastic left
[19:20] *** aluaces joined
[19:22] *** sjm_uk left
[19:29] *** peri404 is now known as perigrin

[20:10] *** patrickb joined
[20:12] *** Raycat|W` is now known as Raycat|Work

[20:13] <Raycat|Work> Ah, I'm back

[20:15] *** Raycat|W` joined
[20:18] *** Raycat|W` left
[20:18] *** Raycat|Work left
[20:21] *** natrys left
[20:25] *** stoned75 joined
[20:26] *** MasterDuke joined
[20:37] * [Coke] waves from the US.

[20:39] *** gabiruh joined
[20:39] *** sono__ joined
[20:41] *** stoned75 left
[20:42] *** kvw_5 left
[20:42] *** kvw_5 joined
[20:42] <tadzik> o/

[20:42] *** JRaspass left
[20:42] *** Black_Ribbon left
[20:45] *** rindolf left
[20:48] *** kini left
[20:50] *** kini joined
[21:02] *** MasterDuke left
[21:05] *** kini left
[21:20] *** kini joined
[21:27] *** JRaspass joined
[21:27] *** kini left
[21:44] *** kini joined
[21:50] *** ufobat_ left
[21:53] *** kaiwulf joined
[21:59] <moon-child> m: {([+] @^a),+@^a}(<1 0 1>)

[21:59] <camelia> rakudo-moar 823148834: ( no output )

[21:59] <moon-child> m: print {([+] @^a),+@^a}(<1 0 1>)

[21:59] <camelia> rakudo-moar 823148834: OUTPUT: «2 3»

[21:59] *** patrickb left
[21:59] <moon-child> is there a way to do something like ^^ but without parentheses around the <1 0 1>?

[22:10] *** thundergnat joined
[22:11] <thundergnat> moon-child: you're passing in a parameter so not really, though you can set the topic variable i suppose.

[22:11] <thundergnat> m: print .&{@^a.sum,+@a} with <1 0 1>

[22:11] <camelia> rakudo-moar 823148834: OUTPUT: «2 3»

[22:12] <moon-child> can I do it with feed?  Tried .&{...} <== <1 0 1> but no dice there

[22:13] <thundergnat> Not my area of expertise so anything I tell you would be suspect. :/

[22:14] <thundergnat> I rather suspect that if is is possible, it will require rather more parenthesis than your initial example.

[22:15] <moon-child> heh, ok

[22:27] *** stoned75 joined
[22:28] *** stoned75 left
[22:31] <elcaro> m: say ([+] $_),+$_ with <1 0 1>

[22:31] <camelia> rakudo-moar 823148834: OUTPUT: «23␤»

[22:32] <elcaro> but not shorter

[22:33] <elcaro> but if we were golfing, could for this

[22:33] <elcaro> m: say {.sum,+$_}(<1 0 1>)

[22:33] <camelia> rakudo-moar 823148834: OUTPUT: «(2 3)␤»

[22:45] *** Manifest0 left
[22:47] *** Manifest0 joined
[22:54] *** xinming_ left
[22:54] *** xinming_ joined
[23:08] *** dataangel left
[23:09] *** JRaspass left
[23:17] *** dataangel joined
[23:23] <raku-bridge> <Murilo> hello guys... do you know who is responsible for the branding and marketing of raku?

[23:39] <[Coke]> there isn't a marketing committee. closest thing is probably the Steering Council. Why, how can we help?

[23:54] <raku-bridge> <Murilo> I want to know more about it, and maybe contribute

