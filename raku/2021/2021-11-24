[00:02] *** reportable6 left
[00:37] <tbrowder> i‚Äôm looking at creating a raku module from perl/c components licensed under lgplv3. anything i should watch out for. essentially all i‚Äôm doing is converting the algorithms to raku.

[00:38] <tbrowder> i‚Äôve never had to worry about lgpl3 and am not a lawyer.

[00:41] <[Coke]> Are you doing this for a company? Do you expect to be able to make money on it, keep the source private?

[00:41] <[Coke]> if any of those questions are yes then you might want to consult someone.

[00:41] <[Coke]> </not legal advice>

[00:43] <[Coke]> (we always have to consult legal for anything, but gpl basically gets rejected and lgpl gets a very serious examination)

[00:50] <qorg11> how to use unix sockets in raku?

[00:51] *** Guest4 joined
[01:19] *** Guest4 left
[01:23] <moon-child> tbrowder: I think there may be legal complications if you do not license the raku module under lgplv3

[01:23] <moon-child> tbrowder: you may want to look into clean-room reverse engineering.  Will require somebody else to help you

[01:36] <tbrowder> it‚Äôs for a public module

[01:39] <tbrowder> so just keeping same license should work i assume. my only concern was the conversion and some of the legal lingo about mods and such.

[02:15] *** [Coke] left
[02:34] *** [Coke] joined
[02:44] *** frost joined
[02:47] *** releasable6 left
[02:47] *** nativecallable6 left
[02:47] *** nativecallable6 joined
[02:47] *** releasable6 joined
[02:47] *** statisfiable6 left
[02:48] *** statisfiable6 joined
[02:50] *** tib left
[02:50] *** tib joined
[03:04] *** reportable6 joined
[04:49] *** evalable6 left
[04:49] *** linkable6 left
[04:52] *** evalable6 joined
[05:02] <Xliff> Is there a way to tell if a CArray was allocated by Raku?

[05:02] <Xliff> If not, what would be the best way to add such a feature?

[05:02] <moon-child> could make your own table of them

[05:05] <Xliff> moon-child: No, you can't.

[05:05] <Xliff> It would not be sufficient.

[05:05] <Xliff> I don't want to call .elems on a C-allocated CArray. That will crash the script.

[05:06] <Xliff> And I don't want to deal with a table as said table might be out of scope when you need it.

[05:06] <Xliff> Unless said table is kept as a class value within the CArray type, itself.

[05:07] <Xliff> *sigh* -- the logic I need is in nqp.

[05:52] *** evalable6 left
[05:53] *** evalable6 joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[06:28] *** andrzejku joined
[07:17] *** andrzejku left
[07:26] *** seednode left
[07:27] *** seednode joined
[07:32] *** abraxxa joined
[07:33] *** abraxxa-home joined
[07:40] *** abraxxa left
[07:40] *** abraxxa joined
[07:56] *** Sgeo left
[08:04] *** Xliff_ joined
[08:04] *** andrzejku joined
[08:06] *** MasterDuke left
[08:06] *** Xliff left
[08:55] *** patrickb joined
[08:57] *** dakkar joined
[09:49] *** linkable6 joined
[10:16] *** linkable6 left
[10:19] *** linkable6 joined
[10:42] <jjatria> I've been playing around with AI::FANN, which seems to be very unmaintained, and I've made a bunch of changes to it. Now I'm wondering if there's a Raku equivalent to adopting a dist, specially since this is apparently a community module ü§î 

[10:43] <jjatria> I mean, I _could_ just release with a new auth. But I'd rather fix the dist we have

[10:55] <El_Che> jjatria: you are welcomed to adopt a community module as fair as I know

[11:01] <lizmat> jjatria: yes, if you want to take over maint of it yes

[11:01] <jjatria> Sweet :D 

[11:01] <El_Che> *far

[11:01] <jjatria> How does that work then?

[11:01] <lizmat> I could move the repo to your github ID so you have the whole history

[11:01] <El_Che> over to lizmat 

[11:02] <jjatria> El_Che++

[11:02] <jjatria> I guess we're not there yet with zef having org support

[11:03] <jjatria> But in the end, the net effect will still be a release with a different auth, I guess

[11:04] <lizmat> IMO that's fine

[11:04] <lizmat> as in Raku you can decide which auth of a module you would like to have

[11:05] <lizmat> and if you don't, you definitely don't care  :-)

[11:06] <El_Che> if you transfer it, github will redirect the old url, which is nice

[11:06] <lizmat> indeed... the same goes for renames of repos, btw

[11:07] <lizmat> so if you want to change all of your p6- repos to raku- repos, that's fine

[11:09] <jjatria> Ok, let's do that then. I already have a fork on my namespace. Would me deleting allow the move on your side, lizmat?

[11:09] <lizmat> yes, it would

[11:10] <jjatria> Ok, let me do that then üèÉ 

[11:11] <lizmat> what's your github ID ?

[11:11] <jjatria> jjatria, I'm boring like that :)

[11:11] <jjatria> Poof, gone. Ready when you are

[11:12] <lizmat> hhhmmm You can only transfer a repository from an organization to yourself at this time

[11:12] <lizmat> I guess it will be a two-step process then

[11:12] <jjatria> Thanks for taking the time!

[11:12] <lizmat> or I could give you the right access

[11:13] <lizmat> jjatria: should have an invite now

[11:13] <lizmat> should have rights to move it to yourself now

[11:13] <jjatria> Interesting. Ok, let me try

[11:15] <jjatria> That worked :D Thanks a lot!

[11:15] <jjatria> lizmat++

[11:16] <lizmat> ok, good luck!

[11:16] <lizmat> and thanks for the adoption!

[11:20] <El_Che> jjatria: I would have expected üêßjjatria!

[11:23] <jjatria> I'll have to open a ticket so Gthub allows emoji in usernames :P 

[11:27] <lizmat> weekly: jjatria has adopted AI::FANN

[11:27] <notable6> lizmat, Noted! (weekly)

[11:34] *** evalable6 left
[11:34] *** linkable6 left
[11:35] *** linkable6 joined
[11:38] <El_Che> _weekly: the world-renowned programmer and philanthropist ÔøΩjjatria has adopted AI::FANN

[11:39] <jjatria> Now you'll make me blush

[11:40] <El_Che> _weekly: the world-renowned programmer and philanthropist ÔøΩjjatria has adopted AI::FANN: "the smile on the children's face is thank enough. And now fix utf8!"

[11:40] <El_Che> :)

[11:44] <lizmat> .oO( scheiÔøΩ encoding )

[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:06] *** kjp left
[13:06] *** statisfiable6 left
[13:06] *** quotable6 left
[13:06] *** linkable6 left
[13:06] *** benchable6 left
[13:06] *** reportable6 left
[13:06] *** bloatable6 left
[13:06] *** bisectable6 left
[13:06] *** greppable6 left
[13:06] *** tellable6 left
[13:06] *** squashable6 left
[13:06] *** notable6 left
[13:06] *** shareable6 left
[13:06] *** unicodable6 left
[13:06] *** committable6 left
[13:06] *** releasable6 left
[13:06] *** nativecallable6 left
[13:06] *** coverable6 left
[13:06] *** sourceable6 left
[13:06] *** committable6 joined
[13:06] *** coverable6 joined
[13:06] *** bloatable6 joined
[13:07] *** bisectable6 joined
[13:08] *** releasable6 joined
[13:08] *** quotable6 joined
[13:08] *** tellable6 joined
[13:09] *** shareable6 joined
[13:37] *** evalable6 joined
[14:07] *** notable6 joined
[14:07] *** benchable6 joined
[14:07] *** reportable6 joined
[14:08] *** squashable6 joined
[14:09] *** statisfiable6 joined
[14:18] *** vrurg joined
[14:20] *** vrurg_ left
[14:30] *** vrurg_ joined
[14:33] *** vrurg_ left
[14:33] *** vrurg_ joined
[14:33] *** vrurg left
[14:43] *** frost left
[15:03] <colemanx> I'd like to make a CLI tool with beautiful help text

[15:03] <colemanx> Does anyone have an argument parsing libary they can recommend?

[15:04] <discord-raku-bot> <Nemokosch#9980> Raku for the win üòÑ

[15:04] <colemanx> Given that this is a parsing task, I suppose I should write my own :)

[15:04] <discord-raku-bot> <Nemokosch#9980> I mean... you know that sub MAIN() signatures generate a help automatically?

[15:05] <colemanx> I am aware, and I suppose that would make for some interesting techniques in library and cli design

[15:05] <discord-raku-bot> <Nemokosch#9980> too bad xD

[15:06] <colemanx> I have searched the modules listing. I see this one https://github.com/tbrowder/Opt-Handler

[15:06] <colemanx> Is there a way to override the help text output of MAIN() signatures?

[15:07] *** greppable6 joined
[15:08] *** linkable6 joined
[15:08] <discord-raku-bot> <Nemokosch#9980> again, all I know is that you can add some tricky comments that will be used as a description of the argument

[15:09] *** sourceable6 joined
[15:16] *** Sgeo joined
[15:26] *** sm1 joined
[15:31] *** sm1 left
[15:34] <lizmat> colemanx: perhaps https://raku.land/github:nxadm/SuperMAIN is what you're looking for

[15:34] <lizmat> if not that module, then for inspiration?

[15:47] *** sm1 joined
[15:53] <tbrowder> colemanx: i would appreciate any suggestions on Opt::Handler. I stopped dev for other priorities but it was designed to fit my style of CLI programming.

[15:54] <tbrowder> for instance, checkout the required supporting module Abreviations

[16:08] *** nativecallable6 joined
[16:20] *** Xliff_ left
[16:20] *** patrickb left
[16:24] <colemanx> Thank you both 

[16:35] <tbrowder> *Abbreviations (& you‚Äôre welcome)

[16:38] *** andrzejku left
[16:47] *** abraxxa left
[17:04] <tbrowder> ref a lgplv3 licensed module: should such a module be published in any of our normal places (cpan, fez)?

[17:07] *** unicodable6 joined
[17:07] *** lizmat_ joined
[17:07] *** [Coke]_ joined
[17:08] <tbrowder> i, for one, almost expect our public modules are under the Artistic license, and don't always look closely (but I don't do this for a living now so am a little more casual...than younger rakuuns may be)

[17:09] *** leont_ joined
[17:09] *** abraxxa joined
[17:10] *** gfldex_ joined
[17:16] *** abraxxa-home left
[17:16] *** [Coke] left
[17:16] *** lizmat left
[17:16] *** zostay left
[17:16] *** ecocode__ left
[17:16] *** colemanx left
[17:16] *** gfldex left
[17:16] *** leont left
[17:16] *** camelia left
[17:16] *** leont_ is now known as leont

[17:22] *** abraxxa-home joined
[17:22] *** zostay joined
[17:22] *** ecocode__ joined
[17:22] *** colemanx joined
[17:22] *** camelia joined
[17:32] *** lizmat_ left
[17:32] *** lizmat joined
[17:39] *** dakkar left
[18:02] *** reportable6 left
[18:06] *** [Coke]_ left
[18:08] <lizmat> tbrowder: not sure I understand the question?

[18:10] <lizmat> you mean with changes ?

[18:13] *** Colt joined
[18:16] *** abraxxa left
[18:24] <lizmat> 1

[18:25] *** TempIRCLogger left
[18:25] *** TempIRCLogger joined
[18:26] *** [Coke] joined
[18:28] <tbrowder> lizmat: i just wonder if it‚Äôs ok to publish a module in our normal places if it‚Äôs NOT under an Artistic license.

[18:29] <lizmat> as long as it is under *an* open source license, I don't see any issue with that

[18:29] *** A26F64 joined
[18:30] <tbrowder> ok, it‚Äôs clearly LGPL v3, so that should qualify i think

[18:30] <lizmat> https://raku.land/cpan:TYIL/Config::Parser::toml  does not have the Artistic license, e.g.

[18:31] <tbrowder> ah, good example, thnx

[18:35] *** monkey_ joined
[18:35] <El_Che> tbrowder: what is a normal place?

[18:36] *** sm1 left
[18:36] <El_Che> I don't think Raku impose a license, but foss is certainly appreciated

[18:38] <ugexe> licensing should be handled through policy, but i'm not sure ecosystems are really the place to enforce such policy.

[18:39] <El_Che> you could do that in a distribution like star, by example

[18:39] <lizmat> foo   # just checking something :-)

[18:42] <El_Che> jjatria: maybe it could be useful for some people to look for modules depending on the license

[18:42] <El_Che> lizmat: I pitty the foo

[18:42] <lizmat> and you should be...  :-)

[18:50] *** avuserow joined
[18:51] <El_Che> we all learnt to fear lizmat's fury :)

[18:53] <tbrowder> cpan, fez, and whatever the git-only thing is called

[18:56] *** Colt left
[18:57] *** Colt joined
[18:58] *** Xliff joined
[19:01] *** Colt left
[19:02] *** Colt joined
[19:02] *** gfldex_ is now known as gfldex

[19:03] *** Colt left
[19:03] *** Colt1 joined
[19:03] *** Colt1 left
[19:05] *** reportable6 joined
[19:06] *** Colt joined
[19:16] *** andrzejku joined
[19:19] <avuserow> hey folks, I'm having intermittent installation failures with zef where it tells me that it doesn't understand a `git://` URL. Sometimes it works fine though. Here's a gist of a failure: https://gist.github.com/avuserow/5abddce31afcdaa99be3c17d7054fa8d - any pointers on how to narrow this down?

[19:20] <avuserow> it's running in a debian-based docker image, and it has wget, curl, tar, and git. not sure what else might be missing that zef would want.

[19:55] <ugexe> https://github.com/ugexe/zef/blob/7d6b48db23eaca06c332fa6d0ca8ecae80ae83d4/lib/Zef/Service/Shell/git.rakumod#L104-L109

[19:56] <ugexe> thats what fires that check

[19:57] <ugexe> and yeah some heisenbug seemingly in rakudo causes this (either failing to spawn the process for some reason, or an issue with string handling)

[20:00] <ugexe> https://github.com/ugexe/zef/issues/352 is an old issue with similar behavior

[20:00] *** dogbert17 left
[20:00] *** andrzejku left
[20:03] *** dogbert17 joined
[20:09] *** dogbert11 joined
[20:09] *** dogbert17 left
[20:22] *** vrurg_ is now known as vrurg

[20:22] *** abraxxa-home left
[20:25] *** dogbert11 left
[20:38] *** andrzejku joined
[20:43] *** dogbert11 joined
[20:47] *** lucasb joined
[20:53] *** andrzejku left
[21:01] *** A26F64 left
[21:03] *** Ulti left
[21:05] *** Ulti joined
[21:08] *** sm1 joined
[21:18] *** Ulti left
[21:22] *** dogbert11 left
[21:22] *** Ulti joined
[21:24] *** dogbert11 joined
[21:27] *** Ulti left
[21:36] *** monkey_ left
[21:38] *** sm1 left
[21:39] *** Ulti joined
[21:43] <[Coke]> we can put any license in our ecosystems, I think. I would be much more concerned if we had something that was community maintained that wasn't Artistic 2.0

[21:44] <[Coke]> concerned in that we should discuss it first, not that I'd say no

[22:04] *** sm1 joined
[22:15] *** dogbert11 left
[22:15] *** Ulti left
[22:15] *** dogbert11 joined
[22:21] *** Ulti joined
[22:22] *** dogbert17 joined
[22:22] *** dogbert11 left
[22:31] *** Ulti left
[22:40] *** sm1 left
[22:41] *** Ulti joined
[23:16] *** dogbert11 joined
[23:17] *** lucasb left
[23:18] *** dogbert17 left
[23:34] <tbrowder> [Coke]: that sounds reasonable to me

[23:38] <tbrowder> i‚Äôm still looking at the code i want to translate, but the authors have made a point to include voluminous boiler plate repeating words from lgpl into each individual perl script, and, although it‚Äôs scriptable, i hope it‚Äôs overkill and i can ignore it.

[23:42] <tbrowder> so lizmat‚Äôs pointer about Config::Parser::TOML is an example of one way to take care of LGPL reqs

