[00:01] <tbrowder> i found this while implementing a frac function for a PR

[00:02] <tbrowder> i'm filing a rakudo issue unless someone can say it's ok

[00:04] <lucs> That looks absolutely wrong :)

[00:06] <lucs> Unless it's parsed as -(1.5e0.abs) ?

[00:27] *** mowcat left
[00:27] *** mowcat joined
[00:28] <tbrowder> issue #4242 has been filed

[00:29] <raydiak> that's my guess, postfix method call is probably tighter precedence, so you can say e.g. "-obj.attr" or so

[00:30] <tbrowder> that may be. i haven't so far found where that's handled in the rakudo code. your thought sounds good

[00:30] <raydiak> I'd personally hope the whole thing with the negative would be parsed as a single term, though. hopefully someone more knowledgable will chime in

[00:31] <tbrowder> i am really surprised that the Int worked

[00:32] <raydiak> m: say -(1.5e0.Int)

[00:32] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´-1‚ê§¬ª

[00:32] <raydiak> m: say (-1.5e0).Int

[00:32] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´-1‚ê§¬ª

[00:39] <tbrowder> m: say (-1.5e0).abs

[00:39] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´1.5‚ê§¬ª

[00:41] <tbrowder> the way i found the error was copying some tests from the "sign" function which used the same syntax but with the ".sign" method and that did work

[00:41] <raydiak> m: say -1.5e0.sign

[00:41] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´-1‚ê§¬ª

[00:41] * moon-child wonders if we need a low-precedence versio of ., a la and/&& and or/||

[00:41] <moon-child> that's -(1.5e0.sign)

[00:42] <moon-child> completely consistent

[00:42] <raydiak> okay now that is a bit unsettling...

[00:42] <raydiak> oh, right

[00:43] <raydiak> I guess the only real problem is that the - should probably be part of the numeric term, not an operator, at least you'd think...

[00:44] <moon-child> apl uses ¬Ø for negative literals and - as a negation function

[00:48] *** monkey__ joined
[00:49] <raydiak> I'm hoping someone is just going to pop up and declare it to be a parsing bug. I could be remembering wrong, but I thought we even had a test for this in roast forever ago...

[00:51] <tbrowder> there are LOTS of tests and i haven't yet tried to find any specific tests for the situation. it needs someone more aware of the numerics

[00:53] <moon-child> dump.t has a number of tests with things like (-128).raku (rather than -128.raku)

[00:57] <raydiak> m: say 1/2.Int # Rats have the same problem

[00:57] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´0.5‚ê§¬ª

[00:57] <raydiak> pretty sure negatives and rationals were supposed to be terms, last I knew

[00:58] <moon-child> that creates problems, though.  5-6 is two terms juxtaposed, whereas 5 - 6 is a subtraction

[00:59] <moon-child> (though there is the same problem with kebab-cased identifiers)

[01:00] *** vike left
[01:00] <raydiak> ttiar is not valid raku unless i'm mistaken, so only one is a valid parse. backtracking is how the grammar works, no?

[01:01] <moon-child> ttiar?

[01:01] <moon-child> grammar uses backtracking yeah

[01:03] <raydiak> two terms in a row

[01:04] <raydiak> https://design.raku.org/S99.html#TTIAR

[01:04] <moon-child> ahh.  yes; it's just surprising behaviour imo

[01:07] *** pecastro left
[01:13] <raydiak> the current behavior surprises me more, but perhaps that means more about me than raku :)

[01:26] *** kst joined
[01:43] <raydiak> m: say -42 .abs

[01:43] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´42‚ê§¬ª

[01:44] <raydiak> I found this discussed in logs from 2015. the current behavior is known and intended.

[01:44] <moon-child> that is ...

[01:45] <moon-child> there's also this fwiw

[01:45] <moon-child> m: say .abs given 42

[01:45] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´42‚ê§¬ª

[01:45] <moon-child> m: say .abs given -42

[01:45] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´42‚ê§¬ª

[01:46] <raydiak> m: say <-42>.abs

[01:46] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´42‚ê§¬ª

[01:49] *** irced joined
[01:51] <tbrowder> ok, thnx, i'll regroup, close the issue, and press on. thanks all for helping me. bye

[01:52] *** monkey__ left
[01:52] <raydiak> yw, good luck

[01:55] *** monkey__ joined
[01:56] <codesections>  out of curiosity, raydiak, do you have a link to the 2015 discussion?  I'm curious about the logic

[02:11] *** Doc_Holliwood left
[02:15] <raydiak> codesections: just from my own logs: https://gist.github.com/raydiak/47f754ca4bbf9ac978d7b9bd79d60d56

[02:15] *** wamba joined
[02:17] *** mowcat left
[02:19] <codesections> raydiak++ ty

[02:19] <raydiak> of course, you're welcome

[02:21] <raydiak> I don't see anything particularly conclusive there that makes me feel swayed other than the overloading issue. mostly just shows that it was known and discussed by core devs years ago. didn't see anything else pertinent further down, the conversation just moves on to other things

[02:23] <rir_> lizmat, The Exceptional Road was the next I intended to explore.  I'll keep Noise and Discipline in mind as I go.

[02:27] *** kvw_5 joined
[02:30] *** kvw_5_ left
[02:38] <codesections> yeah, agreed re: nothing all that definitive.  I like moon-child's idea of steal borrowing APL's ¬Ø syntax for negative numbers, though 

[02:41] *** _jrjsmrtn joined
[02:42] *** __jrjsmrtn__ left
[02:57] <raydiak> easy enough to do from your own code if you want, I guess is the conclusion of that conversation

[03:17] *** wamba left
[03:50] *** lizmat_ joined
[03:50] *** monkey__ left
[03:51] *** vrurg_ joined
[03:52] *** [dpk] joined
[03:53] *** gfldex_ joined
[03:53] *** tobs` joined
[03:54] *** Some-body_ joined
[03:55] *** KotH_ joined
[03:55] *** [Coke]_ joined
[03:55] *** [Coke]_ left
[03:55] *** [Coke]_ joined
[03:55] *** nichfury joined
[03:55] *** timlegge_ joined
[03:58] *** jmcgnh_ joined
[03:58] *** Maylay joined
[03:58] *** webstran- joined
[03:58] *** Ekho left
[03:59] *** parabolize left
[03:59] *** [Coke] left
[03:59] *** gfldex left
[03:59] *** vrurg left
[03:59] *** timlegge left
[03:59] *** lizmat left
[03:59] *** telex left
[03:59] *** jmcgnh left
[03:59] *** mendel left
[03:59] *** KotH left
[03:59] *** avar left
[03:59] *** cgfbee left
[03:59] *** Voldenet left
[03:59] *** mniip left
[03:59] *** tobs left
[03:59] *** lnx left
[03:59] *** DarthGandalf left
[03:59] *** webstrand left
[03:59] *** Maylay_ left
[03:59] *** hvxgr_ left
[03:59] *** a6502 left
[03:59] *** dpk left
[03:59] *** nicholatian left
[03:59] *** Some-body_ is now known as DarthGandalf

[03:59] *** [dpk] is now known as dpk

[03:59] *** tobs` is now known as tobs

[03:59] *** Ekho joined
[03:59] *** webstran- is now known as webstrand

[03:59] *** a6502 joined
[03:59] *** hvxgr joined
[04:00] *** avar joined
[04:00] *** avar left
[04:00] *** avar joined
[04:00] *** jmcgnh_ is now known as jmcgnh

[04:00] *** Voldenet joined
[04:00] *** Voldenet left
[04:00] *** Voldenet joined
[04:00] *** jmcgnh is now known as jmcgnh_

[04:01] *** jmcgnh_ is now known as jmcgnh

[04:01] *** xkr47 left
[04:01] *** mniip joined
[04:02] *** telex joined
[04:02] *** cgfbee joined
[04:05] *** parabolize joined
[04:10] *** lnx joined
[04:10] *** mendel joined
[04:10] *** aluaces left
[04:18] *** vrurg_ is now known as vrurg

[04:35] *** wamba joined
[04:46] *** irced left
[04:59] *** kaiwulf left
[05:33] *** vike joined
[05:45] *** brtastic joined
[06:05] *** rindolf joined
[06:07] *** jmerelo joined
[06:12] *** Doc_Holliwood joined
[06:23] *** orinthe8 joined
[06:25] *** orinthe left
[06:25] *** orinthe8 is now known as orinthe

[06:28] *** aluaces joined
[07:02] *** Sgeo left
[07:27] *** Doc_Holliwood left
[07:28] *** KotH_ is now known as KotH

[08:02] *** irced joined
[08:05] *** domidumont joined
[08:08] *** parabolize left
[08:13] *** pecastro joined
[08:17] *** abraxxa joined
[08:21] *** abraxxa left
[08:22] *** abraxxa joined
[08:23] *** Doc_Holliwood joined
[08:42] *** dakkar joined
[09:00] *** irced left
[09:01] *** Altai-man_ left
[09:09] *** sena_kun joined
[09:29] *** irced joined
[09:36] *** lizmat_ is now known as lizmat

[09:36] * lizmat clickbaits and another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/03/08/2021-10-automated-star/

[09:38] *** Doc_Holliwould joined
[09:38] *** Doc_Holliwood left
[09:44] *** leah2 left
[09:46] <jmerelo> lizmat++

[09:46] *** leah2 joined
[09:46] <jmerelo> You probably know it already, but we weren't funded for this round of Google Summer of Code

[09:47] <lizmat> no I didn't  :-(

[09:47] <lizmat> meh

[09:47] <lizmat> perhaps next year as The Raku Foundation :-)

[10:03] *** irced left
[10:08] *** plvicente joined
[10:13] *** Doc_Holliwould left
[11:00] *** plvicente left
[11:09] <Geth> ¬¶ Raku-Steering-Council/main: 7f08895a14 | (Elizabeth Mattijsen)++ | minutes/20210306.md

[11:09] <Geth> ¬¶ Raku-Steering-Council/main: The minutes of RSC meeting on 6 March 2021

[11:09] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/7f08895a14

[11:11] <Geth> ¬¶ Raku-Steering-Council/main: 89b6b476c1 | (Elizabeth Mattijsen)++ | minutes/20210306.md

[11:11] <Geth> ¬¶ Raku-Steering-Council/main: Better markdown for minutes

[11:11] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/89b6b476c1

[11:12] *** wamba left
[11:13] <jmerelo> lizmat++

[11:13] <lizmat> hmm... I just realized I forgot to mention who attended

[11:15] *** PimDaniel joined
[11:15] <PimDaniel> \o

[11:15] <PimDaniel> Hi

[11:15] <tyil> o/

[11:16] <Geth> ¬¶ Raku-Steering-Council/main: f4c246d80b | (Elizabeth Mattijsen)++ | minutes/20210306.md

[11:16] <Geth> ¬¶ Raku-Steering-Council/main: Mention who was in attendance

[11:16] <Geth> ¬¶ Raku-Steering-Council/main: 

[11:16] <Geth> ¬¶ Raku-Steering-Council/main: I guess Stefan *did* make it to the meeting, although it was towards

[11:16] <Geth> ¬¶ Raku-Steering-Council/main: the end of the meeting  :-)

[11:16] <Geth> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/f4c246d80b

[11:17] <PimDaniel> When we write ' my @a = @b" @b is not cloned into @a? I suppose @a acts like a pointer, no? Or i must write @a := @b?

[11:17] *** wamba joined
[11:18] <tyil> PimDaniel: what is the output you're seeing, and what is the output you're expecting?

[11:19] * PimDaniel tyil : This is just general question. I do no speek of output for now.

[11:19] <tyil> ah

[11:19] <PimDaniel> I just want to understand.

[11:20] <tyil> m: my @b = < a b c >; my @a = @b; @b[0] = 'd'; say @a; say @b;

[11:20] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´[a b c]‚ê§[d b c]‚ê§¬ª

[11:20] <tyil> after assigning @b to @a, and then altering @b, the changes don't show up in @a

[11:20] <tyil> m: my @b = < a b c >; my @a := @b; @b[0] = 'd'; say @a; say @b;

[11:20] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´[d b c]‚ê§[d b c]‚ê§¬ª

[11:21] * PimDaniel Yes tyil, i know this.

[11:22] <PimDaniel> So the response is := for attrib if i want @a is address of @b.

[11:23] <PimDaniel> But now, my question is what happens if your object is copied from a sub or method?

[11:24] *** plvicente joined
[11:25] <PimDaniel> method mysub { my @b = <a b c d e f g h>; @!a = @b; } @!a is a class parameter!! will @!a still exist after leaving the method?

[11:26] <tyil> if your class contains a `has @.a`, yes

[11:26] <PimDaniel> @.a or @!a, no ?

[11:28] <tyil> both should work, yes

[11:28] <PimDaniel> I suppose the Perl5 principe remains  that until a reference is attached to an object the object not destroyed.

[11:29] <PimDaniel> Which is not the case in C langage with pointers.

[11:29] <tyil> I'm not sure about that, maybe a core dev will read this and come with an answer to that

[11:29] <lizmat> @!a indicates the actual attribute

[11:30] <lizmat> @.a indicates the *accessor* to the attribute

[11:30] <lizmat> if there is one

[11:30] <lizmat> if you have specified an attribute like @!a, there is no accessor

[11:30] * PimDaniel Ok  thank's tyil, so i must change some of my assignements.

[11:30] <lizmat> m: class A { has $!foo }; dd A.new.foo

[11:30] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´No such method 'foo' for invocant of type 'A'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[11:31] <lizmat> m: class A { has $.foo }; dd A.new.foo

[11:31] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Any‚ê§¬ª

[11:31] * PimDaniel yes lizmat : this is clear for me.

[11:32] <lizmat> also: as long as an object exists, its attributes will exists as well

[11:32] <PimDaniel> but @.a is the accessor AND the attribute of course. This is a powerfull trick to avoid to write accessors.

[11:36] <lizmat> PimDaniel: it even goes further.  $.foo is just short for self.fee

[11:36] <lizmat> PimDaniel: it even goes further.  $.foo is just short for self.foo

[11:36] *** aluaces left
[11:37] <lizmat> m: class A { method bar { "bar" }; method foo { $.bar } }; ; say A.foo

[11:37] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´bar‚ê§¬ª

[11:37] <lizmat> m: class A { method bar { "bar" }; method foo { self.bar } }; ; say A.foo

[11:37] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´bar‚ê§¬ª

[11:39] * PimDaniel lizmat i'v read that $.foo create the methods accessors:  foo{ return $!foo } and getter foo($x) {$foo = $x}.

[11:40] <lizmat> you mean setter ?

[11:40] <lizmat> the latter is incorrect

[11:40] <PimDaniel> setter

[11:40] <PimDaniel> yes

[11:40] <PimDaniel> yes i know

[11:41] <PimDaniel> and getter foo($x) {$!foo = $x} 

[11:41] <lizmat> if you say:  has $.foo, it basically creates a method foo() { $!foo }

[11:41] <lizmat> this decontainerizes the $!attribute, so it is a right value

[11:42] <lizmat> if you say: has $.foo is rw, then it basically creates: method foo() { return-rw $!foo }

[11:42] <PimDaniel> Hum OK i see!

[11:42] <lizmat> so then it returns the container, and in Perl speak: you have an l-value sub

[11:44] <PimDaniel> Ok i see this is more subtil that i thought.

[11:44] <lucs> kj

[11:44] <PimDaniel> but it is very intelligent.

[11:44] <PimDaniel> May be those who wrote that were not supids. 

[11:44] <PimDaniel> :)))))

[11:45] <lizmat> :-)   it took a while, though  :-)

[11:45] <PimDaniel> Yes!

[11:45] <tyil> you can't rush art

[11:46] <tadzik> unless it's speedpainting

[11:46] <PimDaniel> I'm confident Raku will win! 

[11:47] <PimDaniel> It's better than many langages for many things. I like python because it is simple but i prefer Raku because it is powerfull and has many possibilities.

[11:48] <tyil> better is relative

[11:48] <tyil> if speed is your goal, you're gonna have a hard time competing with C ;D

[11:49] * PimDaniel tyil i've yet watch this.

[11:49] <lizmat> tyil: that's only processing speed  :-)

[11:49] <tyil> lizmat: true

[11:50] <PimDaniel> remenber The begining of PHP. :))))). Memory heap etc...

[11:50] <tyil> (I don't use Raku for it's runtime performance anyway, but the performance boost it gives to the developer, which would be me)

[11:51] <tyil> if it takes me mere seconds to write (or reason) about my code, compared to minutes (or hours) in another lang, I see that as a big win :D

[11:51] <PimDaniel> Yes of course : performance is not all.

[11:51] <lizmat> I dropped PHP at 1.9b5 or something like that, after I spent 3 days trying to figure out why it didn't work, and it turned out to be a syntax error that it didn't catch

[11:52] <tyil> I have php 7.3 and 7.4 installed this very moment

[11:52] <lizmat> I did keep using PHP in production until mod_perl came around, but that PHP was generated by a Perl script  :-)

[11:52] <PimDaniel> In fact i hate PHP.

[11:53] <PimDaniel> I really prefer Python but PHP is one of the fastest. 

[11:53] <PimDaniel> because you speak of speed.

[11:53] <tyil> if you're doing web applications, php is one of the faster choices, indeed

[11:53] <PimDaniel> I used PHP recently to write a small program: horror!

[11:54] <tyil> (and I personally prefer php > python as well)

[11:54] <tyil> if only because the community is more helpful in my experience

[11:54] <PimDaniel> i use PHP CLI.

[11:54] <tyil> and python can't even make it's main promise of "one way to do a thing" true in its own stdlib

[11:55] <tyil> there's a handful of methods to format a string now, and in my not so humble opinion, they all suck :p

[11:55] <PimDaniel> I like python because things are simple.

[11:56] <tyil> I wish I could agree

[12:00] <PimDaniel> back later.

[12:00] *** PimDaniel left
[12:06] <El_Che> isn't web applications a JS thing nowadays?

[12:10] <tyil> El_Che: nothing is a JS thing if it were up to me

[12:18] *** xinming_ left
[12:19] *** xinming_ joined
[12:28] *** gabiruh left
[12:33] *** aluaces joined
[12:39] *** db48x joined
[12:39] *** db48x left
[12:39] *** db48x joined
[12:40] *** mowcat joined
[12:43] *** gabiruh joined
[12:49] *** linkable6 left
[12:50] *** linkable6 joined
[12:53] *** plvicente left
[12:53] <codesections> sadly, it doesn't appear to be up to you, judging by, e.g., the number of electron apps/js-heavy websites out there these days

[12:54] <tyil> very sadly indeed

[13:04] *** plvicente joined
[13:11] *** dakkar left
[13:19] *** wamba left
[13:26] *** plvicente left
[13:26] <leont> Electron apps are a terrible idea from the user's perspective, but great from a corporate one

[13:26] <SmokeMachine> vrurg: Hi! just to let you know that I've answered your issue on Red (https://github.com/FCO/Red/issues/472). I hope that's what you needed. I'd really like to have more people testing `has-one`. I don't think that should be experimental, but only with more people trying that I'll be able to make it a normal feature.

[13:28] *** xinming_ left
[13:30] *** xinming_ joined
[13:36] *** plvicente joined
[13:38] <tbrowder> .ask jmerelo jj, tweak has disappeared from the docs again

[13:38] <tellable6> tbrowder, I'll pass your message to jmerelo

[13:40] *** Black_Ribbon left
[13:52] *** jmerelo left
[14:00] *** xinming_ left
[14:02] *** xinming_ joined
[14:02] *** plvicente left
[14:08] *** xinming_ left
[14:10] *** xinming_ joined
[14:11] <kawaii> good afternoon o/

[14:11] *** rir left
[14:12] <lizmat> kawaii o/

[14:22] *** plvicente joined
[14:48] *** aluaces left
[15:07] *** Sgeo joined
[15:13] <El_Che> tyil: I was working on a small react js app as a client for a rest service (for people that don't know how to use curl) without knowing much JS or react. It was OK, no scars so far

[15:14] <tyil> I generally oppose js requirements on websites, seeing as js is the de-facto way to get malware over the web

[15:14] <tyil> not allowing js in your browser is by far the best thing you can do to boost your online security

[15:19] <El_Che> not allowing JS is the best way not to be able to use sites nowadays

[15:20] <tyil> most websites aren't ones that I want to use anyway

[15:20] <El_Che> a future of wasm wakes you up at night, right? :)

[15:20] <tyil> but opening up a massive security hole just to propogate terrible development practices sounds like a bad idea anyway

[15:20] <tyil> not sure what value that wasm comment has

[15:21] <El_Che> wasm would make web dev more obvious because you can do it in your lang of choice instead of js

[15:21] <tyil> I am aware

[15:22] <tyil> but your snarky comment isn't helping you convince anyone of your viewpoint

[15:23] <El_Che> you missed or don't appreciate sarcasm, but it's OK

[15:23] <El_Che> (what you certainly missed is that I am not trying to convince anyone)

[15:24] <tyil> brushing off a failed attempt of a witty comment as sarcasm is cute, but not worth anything

[15:24] <SmokeMachine> El_Che: if you don't know much of JS, maybe next time you could think of using something like this: https://github.com/FCO/MemoizedDOM/blob/master/examples/todo/App.pm6 (I'm just kidding)

[15:24] <tyil> I hope you have a good day getting upset at other people having differing viewpoints

[15:24] <tyil> I'll go check out a different buffer for now

[15:25] <SmokeMachine> El_Che: I'm kidding, but that works!!! https://fco.github.io/MemoizedDOM/todo6.html

[15:25] <El_Che> upset? 

[15:25] <El_Che> we're on a different frequence, I think, as I am not upset

[15:27] *** mowcat left
[15:29] <El_Che> SmokeMachine: is it a kind of wasm or a transpiler to JS?

[15:29] <El_Che> it runs on github pages, so it generates JS?

[15:30] <SmokeMachine> neither... it's Rakudo.js running on webperl (https://github.com/FCO/MemoizedDOM/tree/master/examples/todo-webperl)

[15:31] <SmokeMachine> El_Che: try opening the source code... https://usercontent.irccloud-cdn.com/file/dgrWK5xM/image.png

[15:33] <El_Che> SmokeMachine: wow, nice

[15:33] <SmokeMachine> :)

[15:34] <El_Che> I didn't know you could do that

[15:34] <El_Che> it's raku code in the html

[15:35] <SmokeMachine> yes, it is :)

[15:35] *** kaiwulf joined
[15:35] <SmokeMachine> that's why it takes so long loading... :)

[15:36] <SmokeMachine> I really think it would be cool to improve that

[15:37] <SmokeMachine> (probably not very useful, but very cool)

[15:37] *** plvicente left
[15:40] *** xinming_ left
[15:41] <SmokeMachine> El_Che: And I like the MemoizedDOM solution as well... I still need to do a html slang for that, as I've done for this: https://github.com/FCO/p6-react

[15:42] *** xinming_ joined
[15:46] <El_Che> SmokeMachine: is it a experiment and can you use it to build webpages?

[15:46] *** rindolf left
[15:48] *** rindolf joined
[15:50] <SmokeMachine> El_Che: that todo app uses this(https://webperl.zero-g.net/perl6.html) but it can also be transpiled. and both MemoizedDOM and p6-react I've done to see if that was possible... I still plan to improve them. but all the merit to running is from Rakudo.js and not mine

[15:50] *** parabolize joined
[15:55] *** masak left
[15:55] *** mst left
[15:55] *** mst joined
[15:56] *** masak joined
[15:56] *** sergot_ left
[15:56] *** masak is now known as Guest43420

[15:56] *** sergot joined
[16:07] *** rakunoob joined
[16:07] *** rakunoob left
[16:10] *** brtastic left
[16:10] *** aluaces joined
[16:25] *** brtastic joined
[16:41] *** plvicente joined
[16:41] *** brtastic left
[16:44] *** wamba joined
[16:46] *** brtastic joined
[16:50] *** brtastic left
[17:11] *** plvicente left
[17:16] *** [Coke]_ is now known as [Coke]

[17:31] *** timlegge_ is now known as timlegge

[17:38] *** patrickb joined
[17:39] *** plvicente joined
[17:49] *** jmerelo joined
[17:51] *** plvicente left
[17:54] *** aluaces left
[18:13] *** kaiwulf left
[18:20] *** aborazmeh joined
[18:24] *** aluaces joined
[18:31] *** wamba left
[18:39] *** aborazmeh left
[18:40] *** vrurg left
[18:48] *** jmerelo left
[18:53] *** vrurg joined
[18:57] *** clarjon1 joined
[18:58] *** vrurg left
[19:16] *** domidumont left
[19:29] *** MasterDuke joined
[19:36] *** aborazmeh joined
[19:37] *** abraxxa left
[19:38] *** Kaiepi left
[19:40] *** Kaiepi joined
[19:45] *** wamba joined
[19:57] *** plvicente joined
[19:59] *** wamba left
[20:01] *** aborazmeh left
[20:01] *** aborazmeh joined
[20:01] *** kaiwulf joined
[20:09] *** plvicente left
[20:13] *** plvicente joined
[20:17] *** vrurg joined
[20:18] *** vrurg_ joined
[20:22] *** vrurg left
[20:24] *** plvicente left
[20:25] *** aborazmeh left
[20:25] *** vrurg joined
[20:25] *** vrurg_ left
[20:30] *** cpage_ joined
[20:32] *** cpage left
[20:32] *** cpage_ is now known as cpage

[20:33] *** vrurg_ joined
[20:36] *** vrurg left
[20:36] *** vrurg_ left
[20:37] *** vrurg joined
[20:42] *** patrickb left
[20:52] *** vrurg left
[20:55] *** xinming_ left
[20:57] *** xinming_ joined
[20:58] *** vrurg joined
[20:59] *** aborazmeh joined
[21:00] *** vrurg left
[21:03] *** plvicente joined
[21:07] *** mowcat joined
[21:12] *** vike left
[21:13] *** Kaiepi left
[21:14] *** plvicente left
[21:15] *** Kaiepi joined
[21:17] *** moon-child left
[21:17] *** hvxgr left
[21:25] *** hvxgr_ joined
[21:32] *** rindolf left
[21:35] *** moon-child joined
[21:37] *** hvxgr_ left
[21:39] *** brtastic joined
[21:40] *** moon-child left
[21:42] *** hvxgr_ joined
[21:45] *** moon-child joined
[21:49] *** moon-child left
[21:49] *** hvxgr_ left
[22:06] *** moon-child joined
[22:06] *** vike joined
[22:06] *** mowcat left
[22:10] *** Kaiepi left
[22:11] *** Kaiepi joined
[22:14] *** brtastic left
[22:14] *** moon-child left
[22:30] *** hvxgr_ joined
[22:36] *** sena_kun left
[22:49] *** hvxgr_ left
[22:57] *** tealecloud left
[22:58] *** guifa2 joined
[23:00] <guifa2> vrurg: so after finally upgrading my dev machine to a post-COERCE one‚Ä¶ I realized that Role() sadly doesn't work because the role has to punned and any stubbed methods cause it to bomb.  Not sure if there's a way around that

[23:00] <tellable6> guifa2, I'll pass your message to vrurg

[23:01] *** dogbert11 joined
[23:04] *** dogbert17 left
[23:17] *** moon-child joined
[23:21] *** moon-child left
[23:58] *** vrurg joined
