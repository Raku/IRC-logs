[00:02] *** reportable6 left
[00:04] *** reportable6 joined
[00:26] *** jgaz joined
[01:26] *** jgaz left
[02:21] *** keutoi joined
[02:29] *** gordonfish- joined
[02:31] *** gordonfish left
[02:34] *** discord-raku-bot left
[02:38] <lucs> Is there a more elegant way to write this?: (|('a'..'c'), |(1..3)).pick

[02:40] <ugexe> arguably (flat "a".."c", 1..3).pick 

[02:41] <ugexe> (<a b c 1 2 3>).pick but i dont think thats quite what you meant

[02:41] <lucs> Yeah, the real ranges are wider, but I like the 'flat' there.

[02:42] <lucs> Thanks.

[02:43] <lucs> This works too:  flat("a".."c", 1..3).pick

[02:44] <lucs> And might as well go full functional: ("a".."c", 1..3).flat.pick

[02:52] *** melezhik left
[03:00] *** b-bar left
[03:30] *** jay joined
[03:30] *** jay is now known as john

[03:30] *** john is now known as j2020

[03:30] <j2020> there we go. hello all.

[03:42] *** j2020 left
[04:42] *** unicodable6 left
[04:42] *** quotable6 left
[04:42] *** squashable6 left
[04:42] *** greppable6 left
[04:42] *** bisectable6 left
[04:42] *** nativecallable6 left
[04:42] *** evalable6 left
[04:42] *** committable6 left
[04:42] *** statisfiable6 left
[04:42] *** notable6 left
[04:42] *** tellable6 left
[04:42] *** benchable6 left
[04:42] *** shareable6 left
[04:42] *** sourceable6 left
[04:42] *** bloatable6 left
[04:42] *** releasable6 left
[04:42] *** coverable6 left
[04:42] *** linkable6 left
[04:42] *** reportable6 left
[04:43] *** nativecallable6 joined
[04:43] *** evalable6 joined
[04:43] *** notable6 joined
[04:43] *** coverable6 joined
[04:43] *** statisfiable6 joined
[04:43] *** shareable6 joined
[04:44] *** sourceable6 joined
[04:44] *** tellable6 joined
[04:44] *** squashable6 joined
[04:44] *** linkable6 joined
[04:44] *** committable6 joined
[04:45] *** releasable6 joined
[04:45] *** reportable6 joined
[04:45] *** greppable6 joined
[04:45] *** unicodable6 joined
[04:45] *** benchable6 joined
[04:45] *** bloatable6 joined
[04:46] *** bisectable6 joined
[04:46] *** quotable6 joined
[05:17] *** dogbert11 left
[05:25] *** jmcgnh left
[05:26] *** keutoi left
[05:36] *** dogbert11 joined
[05:47] <mykhal> m: (****2)(1..5)

[05:47] <camelia> rakudo-moar 5ecc8308f: ( no output )

[05:47] <mykhal> m: say (****2)(1..5)

[05:47] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «(1 4 9 16 25)␤»

[05:52] <mykhal> m: say (* * * * 2)(2, 3), (** ** 2)(2, 3)

[05:52] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «12(4 9)␤»

[06:01] <moon-child> m: say (&[*].assuming(2)∘&reduce.assuming(&[*]))((2, 3))

[06:01] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «12␤»

[06:01] <moon-child> m: say (2, 3)».&(&[**].assuming(*,2))

[06:01] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «(4 9)␤»

[06:02] <moon-child> tacit ftw!

[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[06:05] <mykhal> wtf too

[06:06] <moon-child> the main wtf imo is that ∘ has lower precedence than function application

[06:15] <moon-child> m: say &[+](2, 3); say &[+]((2, 3)); say &[+](slip((2, 3))); say &[+](|(2, 3))

[06:15] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «5␤2␤2␤5␤»

[06:15] <moon-child> why doesn't that print 5 2 5 5?

[06:19] <mykhal> did not digest it yet, i was just wondering if (****2) will always work as hyperwhatever squared rather than curried product, or it would depend on arguments

[06:20] <moon-child> ****2 has three lexemes: **, **, and 2

[06:21] <moon-child> lexing is 'greedy'; it always tries to consume as many characters as it can before continuing.  So for instance, ***2 will always be ** * 2; not * ** 2

[06:21] <moon-child> you can see something similar with +: x+++y will always mean (x++) + y.  Even though you can space it out to make it be x + (++y), or even x + (+ (+y))

[06:22] <moon-child> so (****2) will always have a hyperwhatever, never a regular whatever

[06:23] *** squashable6 left
[06:23] *** squashable6 joined
[06:23] <CIAvash> moon-child: `|` is not the same as slip when used for arguments. https://docs.raku.org/routine/%7C

[06:23] *** squashable6 left
[06:25] *** squashable6 joined
[06:30] <moon-child> ah, I see, thanks!

[06:32] *** squashable6 left
[06:35] *** squashable6 joined
[06:36] *** Merfont left
[06:36] <mykhal> m: " # ANFSCD, cannot se have non-normalized unicode strings ?

[06:36] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3se have non-normalized unicode strings ?7⏏5<EOL>␤    expecting …»

[06:36] *** Merfont joined
[06:36] <mykhal> m: say "\x300" eq "\x340"

[06:37] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «True␤»

[06:38] <mykhal> m:  say "\x340".ords>>.base(16)

[06:38] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «(300)␤»

[06:38] *** swaggboi left
[06:40] <japhb> mykhal: Yes, but that's not a Str, that's one of the Uni types (such as the NFC NFKC NFD and NFKD normalization-specific types)

[06:40] <japhb> Str is always NFG (Normalization Form Grapheme)

[06:41] <moon-child> mykhal: try utf8-c8

[06:45] *** keutoi joined
[06:45] <mykhal> m: say Uni(0x300) eqv Uni(0x340)

[06:45] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «This representation (VMArray) does not support attribute storage (for type Uni)␤  in block <unit> at <tmp> line 1␤␤»

[06:49] <mykhal> japhb , moon-child : Uni is cool, but how to compare them ?

[06:53] <moon-child> that feels wrong.  There should be an infix:<cmp>(Uni, Uni)

[06:53] *** Eddward_ left
[06:54] <mykhal> for now, i can eqv .list's

[07:21] *** wefewf joined
[07:33] <mykhal> m: say <<hello #`(freaking) world>>

[07:33] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «(hello world)␤»

[07:40] *** stoned75_ left
[07:52] *** dogbert17 joined
[07:55] *** dogbert11 left
[08:55] *** evalable6 left
[08:55] *** linkable6 left
[08:56] *** linkable6 joined
[08:57] *** evalable6 joined
[09:06] *** Sgeo left
[09:35] *** discord-raku-bot joined
[10:06] *** wefewf left
[10:59] *** sono left
[11:09] *** aasss joined
[11:10] *** aasss left
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:11] *** Merfont is now known as Kaiepi

[12:11] *** Kaiepi left
[12:11] *** Kaiepi joined
[12:24] *** Guest77 joined
[12:39] <mykhal> m: say $_([Mu, Any].map(*.^methods>>.gist)) for [&[(&)], &[(^)]]

[12:39] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «Set(ACCEPTS iterator)␤Set(BIND-POS BUILDALL BUILD_LEAST_DERIVED Bool CREATE Capture Method+{is-nodal}.new Method+{is-pure}.new Numeric Real Str Stringy WHERE WHICH WHY ZEN-KEY bless cache can clone collate defined dispatch:<!> dispatch:<.*> dispatch…»

[12:47] <mykhal> .. strange that if i replace symmetric difference operator &[(^)] with separate difference and reversed one: &[(-)], &[R(-)] , the last two resulting sets are same

[12:50] <mykhal> m: say $_(<a b>, <b c>) for [ &[(-)], &[R(-)] ]

[12:50] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «Set(a)␤Set(c)␤»

[12:51] <mykhal> so problem is elsewhere

[12:55] <mykhal> m: say $_(|[Mu, Any].map(*.^methods>>.gist.Set)) for [&[(-)], &[R(-)]]  # ah, missing "|"

[12:55] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «Set(BUILDALL BUILD_LEAST_DERIVED Bool CREATE Capture Numeric Real Str Stringy WHERE WHICH WHY bless can clone defined dispatch:<!> dispatch:<.*> dispatch:<.+> dispatch:<.=> dispatch:<.?> dispatch:<::> dispatch:<hyper> dispatch:<var> does emit gist gis…»

[13:02] <lucs> ｢▸ zef install Inline::Perl5 --exclude="perl"｣ installs the module, instead of, when missing "--exclude…", getting ｢…␤===> Failed to find dependencies: perl:from<native>␤Failed to resolve some missing dependencies (use e.g. --exclude="perl" to skip)｣. And yes, it appears that no matter which Perl is currently being used, perlbrew'ed or otherwise, it's the Perl that was active when the module was installed that Raku will use.

[13:02] <lucs> Also, make sure that the version of the relevant Perl was built with the -Duseshrplib option.

[13:02] <lucs> [Coke], raydiak, moritz, ugexe: thanks for your help on this.

[13:24] *** linkable6 left
[13:24] *** evalable6 left
[13:24] *** evalable6 joined
[13:24] *** linkable6 joined
[13:42] *** cognominal left
[13:44] *** Guest15 joined
[13:45] *** Guest15 left
[13:56] *** RaycatWhoDat left
[14:09] *** cognominal joined
[14:35] *** squashable6 left
[14:38] *** squashable6 joined
[14:44] *** Guest77 left
[14:47] *** Guest77 joined
[14:56] *** Guest77 left
[14:57] *** Guest77 joined
[15:08] *** RandalSchwartz joined
[15:15] *** phogg left
[15:16] *** tejr left
[15:17] *** phogg joined
[15:18] *** tejr joined
[15:42] <keutoi> I am having a bit of trouble with multiline definitions in the repl. Can someone take a look?

[15:42] <keutoi> https://imgur.com/a/Pi17pLg

[15:45] *** keutoi left
[15:45] *** keutoi joined
[15:47] *** Guest77 left
[16:44] *** Eddward_ joined
[16:55] *** keutoi left
[17:28] *** Sgeo joined
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[18:05] *** simcop2387 left
[18:05] *** pony left
[18:06] *** perlbot left
[18:06] *** elcaro left
[18:07] *** elcaro joined
[18:08] *** pony joined
[18:09] <mykhal> (absent) keutoi : interesting, confirmed in 2021.06 and yesterday's master as well

[18:33] *** RandalSchwartz left
[18:54] *** abraxxa-home joined
[18:56] *** Eddward_ left
[18:58] *** simcop2387 joined
[18:59] *** perlbot joined
[19:32] *** linkable6 left
[19:32] *** linkable6 joined
[19:39] *** abraxxa-home left
[19:59] <MasterDuke> El_Che, leont: any idea if lizmat's house is underwater

[20:18] *** Eddward_ joined
[20:24] *** MasterDuke left
[20:37] <leont> They're fine. They live near the river, but on higher ground

[20:38] <leont> Some villages near them were evacuated, but I think everyone is back now

[21:07] *** sono joined
[21:47] *** Eddward_ left
[22:27] *** Eddward_ joined
[22:32] *** guifa joined
[22:42] *** monkey_ joined
[22:42] *** guifa left
[22:46] *** guifa joined
[23:03] <lizmat> yeah, all fine here...  :-)

[23:04] <lizmat> all of the extensive water works of the past 25 years or so, worked out in our area of the river

[23:04] <lizmat> the river grew from 50m wide to 1.5km wide, but it's all within expected parameters, more or less  :-)

[23:05] <lizmat> MasterDuke: thanks for the worries, though  :-)

[23:05] <tellable6> lizmat, I'll pass your message to MasterDuke

[23:15] <raydiak> \o/

[23:17] *** jgaz joined
[23:45] *** Xliff joined
