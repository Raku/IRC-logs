[00:14] *** lucasb left
[00:25] <guifa> kawaii: anytime 

[00:26] *** brtastic joined
[00:34] *** pecastro joined
[00:38] *** thundergnat joined
[00:42] <thundergnat> kawaii: FWIW I have Text::Sorensen module that provides both Sorensen-Dice and Jaccard similarity coefficients. https://modules.raku.org/search/?q=Sorensen

[00:45] *** BenGoldberg left
[00:45] *** Ben_Goldberg joined
[00:45] *** Ben_Goldberg is now known as BenGoldberg

[00:58] *** pecastro left
[01:00] *** melezhik joined
[01:01] *** thundergnat left
[01:01] *** MasterDuke left
[01:01] *** melezhik left
[01:48] *** melezhik joined
[01:48] *** mowcat left
[01:53] *** kini left
[01:53] *** krkini joined
[02:04] *** melezhik left
[02:40] *** kvw_5_ joined
[02:44] *** kvw_5 left
[03:11] *** JRaspass left
[03:15] *** melezhik joined
[03:29] *** melezhik left
[03:31] *** melezhik joined
[03:34] *** squashable6 left
[03:35] *** squashable6 joined
[03:46] *** krkini left
[03:48] *** kini joined
[04:13] *** brtastic left
[04:15] *** Kaiepi left
[04:20] *** benjif joined
[04:26] *** melezhik left
[04:51] *** Kaiepi joined
[04:52] *** cpage_ joined
[04:55] *** cpage left
[04:55] *** cpage_ is now known as cpage

[05:01] *** BenGoldberg left
[05:16] *** parabolize left
[05:16] *** benjif left
[05:39] *** cpan-raku left
[05:39] *** cpan-raku joined
[05:39] *** cpan-raku left
[05:39] *** cpan-raku joined
[05:45] *** atroxaper joined
[05:48] *** Xliff left
[06:07] *** kini left
[06:09] *** kini joined
[06:10] *** atroxaper left
[06:13] *** jmerelo joined
[06:30] *** pounce joined
[06:52] *** aluaces joined
[06:57] <Geth> ¬¶ doc: 682cda4454 | (JJ Merelo)++ | doc/Type/Seq.pod6

[06:57] <Geth> ¬¶ doc: Adds all definitions of new

[06:57] <Geth> ¬¶ doc: 

[06:57] <Geth> ¬¶ doc: Also skips because of CachedIterator, so solves #3779

[06:57] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/682cda4454

[06:57] <notandinus> m: my @t = (<h i>, <b y e>); say @t.flat; say @t.flat.elems;

[06:57] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´((h i) (b y e))‚ê§2‚ê§¬ª

[06:57] <linkable6> Link: https://docs.raku.org/type/Seq

[06:57] <linkable6> DOC#3779 [open]: https://github.com/Raku/doc/issues/3779 [docs][xt] Failing signature test for Seq

[06:57] <notandinus> why does .flat doesn't work in above case?

[06:57] <notandinus>  m:  say (<h i>, <b y e>).flat;

[06:57] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´(h i b y e)‚ê§¬ª

[06:57] <notandinus> when i call it directly on the list, it works

[06:58] <notandinus>  m: my @t = (<h i>, <b y e>); say @t.List.flat;

[06:58] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´(h i b y e)‚ê§¬ª

[06:58] <notandinus> hmm, .List makes it work, why though?

[07:01] *** pounce left
[07:07] *** pounce joined
[07:13] *** ufobat joined
[07:14] *** ufobat left
[07:14] *** sjm_uk joined
[07:16] *** ufobat joined
[07:53] *** BenGoldberg joined
[07:55] *** wamba joined
[07:56] *** rindolf joined
[07:59] *** Xliff joined
[08:01] *** xinming_ left
[08:01] <CIAvash> because Array itemizes its elements and puts them in scalar containers?

[08:01] *** xinming_ joined
[08:06] *** stoned75 joined
[08:08] <moritz> the more often I read these questions and discussions, the more I'm convinced that any kind of auto flattening is a grave mistake

[08:08] *** dogbert11 left
[08:08] *** dogbert11 joined
[08:09] <moritz> python takes the opposite approach, and never flattens anything, and provides a list concatenation operator in addition to the comma (for list construction)

[08:09] <moritz> it also errors out on iterating over anything that isn't iterable

[08:09] <moritz> that sometimes leads to exceptions, but they are easy to fix, and very transparent

[08:10] <moritz> I very much prefer this mode, and which that Raku wouldn't try to be super fancy about semiautomatic flattening, having different behaviors for itemized vs. non-itemized lists in scalars etc.

[08:13] <moritz> Raku's approach surprises even pretty experienced Raku developers with some regularity, which is basically a hallmark of bad design

[08:32] *** MasterDuke joined
[08:37] *** sena_kun joined
[08:39] <MasterDuke> kawaii: yeah, the whateverables do the same thing https://github.com/Raku/whateverable/blob/master/lib/Whateverable/Bits.pm6#L80-L98

[08:43] *** JRaspass joined
[08:49] <Xliff> moritz: So would you say the fix is for Raku to require explicit flattening?

[08:49] <AlexDaniel`> lizmat: hear hear

[08:49] <Xliff> AlexDaniel! o/

[08:49] <Xliff> AlexDaniel`: Did I miss something?

[08:50] <AlexDaniel`> I don't think you missed anything, the way raku deals with lists is bonkers

[08:51] <Xliff> Oh, you said "lizmat"

[08:55] <moritz> Xliff: 100%

[08:55] <Xliff> moritz: Could that be accomplished in module-land?

[08:55] <Xliff> What would have to be changed?

[08:55] <AlexDaniel`> I highly doubt that

[08:56] <Xliff> I've always had to use .flat --- and sometimes that doesn't work.

[08:56] *** pecastro joined
[08:56] <moritz> Xliff: no, it's pretty deep in List, Array, iterators, and probably even dispatch

[08:56] <AlexDaniel`> yes, in many cases it would've required just a tiny little bit more of code, but it'd be so much more explicit and a lot easier to reason about

[08:56] <Xliff> Huh. Thanks for the explanation.

[08:58] <AlexDaniel`> I think lizmat's response to these discussions was ‚Äúha so you'd much rather write that? perl5 snippet‚Äù, well, I don't use perl5, and dealing with lists is so much easier in other languages (even if it requires a few extra characters), so‚Ä¶

[08:58] <AlexDaniel`> ü§∑

[09:00] <AlexDaniel`> but there comes the issue ‚Äì fixing something like this will likely break compatibility, but without that you can't really argue that raku helps you write less buggy code, in fact it's the opposite. Soo‚Ä¶ what does raku offer again, remind me? üôÇ

[09:00] <AlexDaniel`> anyway, I'd better run‚Ä¶ o/

[09:01] <Xliff> Wow! Tell us how you really feel! :)

[09:01] <Xliff> Dropping that molotov into the flammable laundry and fleeing? So soon?

[09:02] <Xliff> I find that Raku's bugs are just....different... than the bugs I get in other languages.

[09:02] <Xliff> That is, of course, unless I am attempting to bridge with said other language.

[09:03] <Xliff> I develop (and debug) faster in Raku than I can in any other lanugage I've used.

[09:03] <Xliff> *language

[09:03] <Xliff> So... it's 4am. I'm EDT. I should have been in bed hours ago. 'night everyone.

[09:04] *** Xliff left
[09:04] *** dakkar joined
[09:06] <AlexDaniel`> they are not different, they are unique

[09:07] <AlexDaniel`> I do agree that writing scratch projects is faster in Raku, until a certain point that is reached pretty soon

[09:08] <AlexDaniel`> that's not something you can successfully market though, even if it's wonderfully true

[09:09] *** BenGoldberg left
[09:12] *** berber44 joined
[09:24] *** Sgeo left
[09:27] *** BenGoldberg joined
[09:43] *** BenGoldberg left
[09:43] *** sortiz left
[09:52] *** brtastic joined
[10:00] *** dakkar left
[10:01] *** dakkar joined
[10:05] *** thdrmz joined
[10:09] *** thdrmz left
[10:10] *** thdrmz joined
[10:17] <gfldex> m: my @t := <h i>, <b y e>; dd @t.flat;

[10:17] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´("h", "i", "b", "y", "e").Seq‚ê§¬ª

[10:17] <gfldex> notandinus: see ^^^

[10:18] *** domidumont joined
[10:20] <gfldex> m: sub s(*@a) { dd @a }; s(<h i>, <b y e>);

[10:20] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´Array element = ["h", "i", "b", "y", "e"]‚ê§¬ª

[10:21] <gfldex> notandinus: I don't really use .flat at all. I do most of the fancy list handling with slips and signatures.

[10:21] *** wamba left
[10:23] <JJAtria[m]> We're starting to index zef dists in raku.land now! https://raku.land/zef:jjatria/HTTP::Tiny

[10:41] *** wamba joined
[10:41] *** PimDaniel joined
[10:41] <PimDaniel> Hi everybody!

[10:42] <PimDaniel> I installed rakudo-star-2020.10.tar.gz tarball on my computer.

[10:42] <PimDaniel> It contains moarvm and nqp which are also installed on my machine.

[10:43] <PimDaniel> I read here and there that we can compile java jar files, true?

[10:44] <PimDaniel> But where can i find documentation on how to do that.

[10:47] <MasterDuke> the jvm backend is not as mature, so it usually isn't bundled. but you can build it yourself if you'd like

[10:48] <MasterDuke> https://github.com/rakudo/rakudo#configuring-rakudo-to-run-on-the-jvm

[10:48] *** mowcat joined
[10:50] <PimDaniel> @MasterDuke, thank's! Do you know is there is a mature vm?

[10:51] <MasterDuke> well, MoarVM is the most mature vm for Rakudo (the JVM and JS VMs are obviously quite mature for their native langs)

[10:52] <PimDaniel> Ok but what kind of file produces MoarVM?

[10:52] <PimDaniel> Is is built with : raku --target=moarvm options?

[10:54] <MasterDuke> --target=mbc -o <filename> will output the MoarVM bytecode to a file

[10:54] <PimDaniel> Where can i find documentation for that?

[10:55] <MasterDuke> for the bytecode?

[10:56] <MasterDuke> https://github.com/MoarVM/MoarVM/blob/master/docs/bytecode.markdown

[10:59] <PimDaniel> Thanks! no, for the commands: where is the process documented : tu build bytecode and run it?

[11:00] <MasterDuke> it's a little tricky to run the bytecode directly

[11:02] <PimDaniel> MasterDuke : thank you very mutch. 

[11:02] <MasterDuke> i'm not sure i've ever done it

[11:03] <MasterDuke> timotimo knows how i think. or patrickbr

[11:03] <PimDaniel> I like tricky things but that said , i could regret what i say!

[11:04] <MasterDuke> you could look at what https://github.com/rakudo/rakudo/blob/master/src/vm/moar/runner/main.c does

[11:06] <MasterDuke> or if the tarball comes with a (rakudo|perl6)-gdb-m shell script you could look at how it calls the moarvm executable

[11:06] <PimDaniel> MasterDuke : i thank you very much. I'll look ... anyway it is not a priority.

[11:06] <MasterDuke> welcome

[11:10] *** PimDaniel left
[11:16] *** berber44 left
[11:18] *** berber44 joined
[11:23] *** webstrand left
[11:30] *** Altai-man joined
[11:31] *** mowcat left
[11:32] *** sena_kun left
[11:40] *** ufobat_ joined
[11:41] *** ufobat left
[11:48] *** PimDaniel joined
[11:49] <notandinus> gfldex: i see, thanks

[11:49] <notandinus> m: my @t = <h i>, <b y e>; say @t.flat;

[11:49] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´((h i) (b y e))‚ê§¬ª

[11:49] <notandinus> m: my @t := (<h i>, <b y e>); say @t.List.flat;

[11:49] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´(h i b y e)‚ê§¬ª

[11:49] <notandinus> hmm, what does := change?

[11:51] <notandinus> https://docs.raku.org/language/containers#Flattening,_items_and_containers

[11:51] <notandinus> ^ has these examples

[11:52] <notandinus> so it says scalar container prevents flatenning, 

[11:53] <notandinus> so @t = <h i>, <b y e> is stored in 2 scalar containers? 

[12:07] <PimDaniel> Hum :(! Reading here and there i can see that running bytecode is not achieve yet.

[12:08] <PimDaniel> Weird! For such a beautifull langage!

[12:12] *** mowcat joined
[12:14] <CIAvash> notandinus: I don't know if you missed my message, but yes it stores two scalar containers. binding puts the list inside @t so @t becomes a List, not an array

[12:14] <tbrowder> hi, all

[12:15] <moritz> hi there tbrowder 

[12:16] <PimDaniel> Salut tbrower!

[12:16] <tbrowder> FYI, skaji_ has fixed App::Mi6 so the build step works with a Build.rakumod file now. I'm using it successfully to build additional Markdown files  from pod. Good stuff!

[12:17] <tbrowder> PimDaniel: hello \o/

[12:17] <gfldex> notandinus: `@t =` basically means `@t[0] :=`, while `@t :=` means (sort of) `@t[*] :=`.

[12:18] <tbrowder> do i know you in another life?

[12:18] <tbrowder> good morning moritz

[12:19] *** Black_Ribbon left
[12:20] <tbrowder> i was surprised at the sudden response, and didn't recognize PimDaniel

[12:22] <tbrowder> tony-o: my love for App::Mi6 is going to delay my working with fez unless the two can be integrated somehow

[12:22] <tbrowder> it woul

[12:23] <tbrowder> *would be convenient to use the same module repo layout for both systems

[12:24] *** PimDaniel left
[12:28] *** hippo_ left
[12:36] *** PimDaniel joined
[12:40] *** PimDaniel left
[13:34] <notandinus> CIAvash: oh i hadn't missed it, i just don't understand containers properly

[13:34] <notandinus> gfldex: thanks, that makes sense

[13:51] *** notagoodidea joined
[13:52] <notagoodidea> hey #raku, if some of you want to lose some time : https://github.com/notagoodidea/todos

[13:53] <notagoodidea> feedbacks, ideas and/or critics welcomed :)

[14:02] *** dakkar left
[14:03] *** dakkar joined
[14:04] *** aborazmeh joined
[14:04] *** aborazmeh left
[14:04] *** aborazmeh joined
[14:05] <notandinus> how would you match https://paste.debian.net/hidden/571a2555/

[14:06] <notandinus>  i want to match "C* H A M\nO* G L L\nR N I E\nA L G N"

[14:06] <notandinus> anything before that is to eb ignored, text before that is not sttatic and can change

[14:07] <notandinus> i'm doing  /\n\n (.*) \n (.*) \n (.*) \n (.*)/ but that matches (correctly) the intial text too

[14:10] <JJAtria[m]> tbrowder: would anything other than a UploadWithFez release handler for App::Mi6 be needed?

[14:12] <tbrowder> off the top of my head the only thing that might cause problems are the auth name differences.

[14:15] <tbrowder> also, how can one module repo support two distro systems at one time during the trials until we are happy with the new one?

[14:16] <tbrowder> hm, ignore that last question

[14:48] *** cpage left
[14:49] *** berber44 left
[14:51] <notandinus> i solved that thing by doing: / ([[(\w [\*]?) \s*] ** 4]) ** 4 $/, just need to cleanup this thing now

[14:52] *** parabolize joined
[14:57] *** |oLa| joined
[14:59] *** aborazmeh left
[15:06] *** Sgeo joined
[15:23] <notandinus> flatenning is so confusing

[15:26] <notandinus> i have: https://paste.debian.net/hidden/11a6bcf5/

[15:26] <notandinus> ^ how do i flatten it? (turn it into 1d array)

[15:31] <notandinus> ok, Whatever does what i want:  https://docs.raku.org/language/subscripts#index-entry-flattening_

[15:31] *** sena_kun joined
[15:32] <jmerelo> m: my @a = Array.new(:shape(4,), [["c", "h", "a", "m"], ["o", "g", "l", "l"], ["r", "n", "i", "e"], ["a", "l", "g", "n"]]); say @a[], |@a, @a<>

[15:32] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´[[c h a m] [o g l l] [r n i e] [a l g n]][c h a m][o g l l][r n i e][a l g n][[c h a m] [o g l l] [r n i e] [a l g n]]‚ê§¬ª

[15:33] *** Altai-man left
[15:33] <jmerelo> m: my @a = Array.new(:shape(4,), [["c", "h", "a", "m"], ["o", "g", "l", "l"], ["r", "n", "i", "e"], ["a", "l", "g", "n"]]); say @a[*]

[15:33] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´([c h a m] [o g l l] [r n i e] [a l g n])‚ê§¬ª

[15:33] <jmerelo> m: my @a = Array.new(:shape(4,), [["c", "h", "a", "m"], ["o", "g", "l", "l"], ["r", "n", "i", "e"], ["a", "l", "g", "n"]]); say @a.duckmap: -> @a { |@a } 

[15:33] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´[c h a m o g l l r n i e a l g n]‚ê§¬ª

[15:34] <jmerelo> notandinus: ^^^ https://stackoverflow.com/questions/50201995/what-does-duckmap-really-do

[15:34] <notandinus> say @a[*;*] does the job

[15:34] <notandinus> hmm, i'll checkout duckmap

[15:35] <jmerelo> notandinus: with duckmap you don't need to know in advance the number of dimensions. Anyway, if that works for you... 

[15:39] <notandinus> ah i see, duckmap is nice

[15:39] <notandinus> nothing would work if it's not 2 dimensional 4x4 so i'll do *;* for now

[15:41] <notandinus> does flat not work on my code because those values are stored in 4 different containers?

[15:42] <Geth> ¬¶ doc: b957fc163d | Coke++ | xt/pws/words.pws

[15:42] <Geth> ¬¶ doc: track new word.

[15:42] <Geth> ¬¶ doc: 

[15:42] <Geth> ¬¶ doc: new type in rakudo source

[15:42] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/b957fc163d

[16:03] <jmerelo> notandinus: right. flat only flattens the first level

[16:08] *** aahm joined
[16:13] *** xinming joined
[16:15] *** xinming_ left
[16:25] *** squashable6 left
[16:27] *** squashable6 joined
[16:41] <kawaii> If I have a scalar with a list inside, how can I extract [0] and [1] to be the k and v in a hash? Do I need to use map or? `Odd number of elements found where hash initializer expected: Only saw: $("Omar G.", <2/3>)` `my %r = @results.sort( -*.[1] ).head(1);`

[16:41] *** xelxebar_ joined
[16:42] *** xelxebar left
[16:51] <[Coke]> m: my @a = <a b c>; dd @a.kv

[16:51] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´(0, "a", 1, "b", 2, "c").Seq‚ê§¬ª

[16:52] <[Coke]> m: my @a = <a b c>; my %r = @a.kv; dd %r;

[16:52] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´Hash %r = {"0" => "a", "1" => "b", "2" => "c"}‚ê§¬ª

[16:52] <[Coke]> ^^ ?

[16:52] <[Coke]> kawaii: Is that what you're looking for?

[16:54] <kawaii> [Coke]: hmmm, not quite, this gave me an output of `{0 => (Omar G. 0.666667)}`

[16:54] <kawaii> [Coke]; test script https://www.irccloud.com/pastebin/wTnhCbiF/

[16:56] *** |oLa| left
[17:03] <notandinus> can i use functions from the main script for raku tests?

[17:04] *** melezhik joined
[17:04] <notandinus> main script being in bin/ and tests in t/

[17:04] <melezhik> .tell notagoodidea on - todos repo - ¬† take a look at https://modules.raku.org/dist/App::Tasks:cpan:JMASLAK

[17:04] <tellable6> melezhik, I'll pass your message to notagoodidea

[17:05] <melezhik> .tell JJAtria[m] "We're starting to index zef dists in raku.land now!" do you mean from fez repositories ?

[17:05] <tellable6> melezhik, I'll pass your message to JJAtria[m]

[17:07] <melezhik> .tell JJAtria[m]¬† the order is broken in recent entries on https://raku.land/ ... for example for fez , not a big deal, just for info ... :]

[17:07] <tellable6> melezhik, I'll pass your message to JJAtria[m]

[17:08] <notandinus> oh & about fez, where does it upload stuff to?

[17:08] <notandinus> will there be a fez specific repository?

[17:09] <notandinus> i'm going afk, will be back after 12 hours, thanks

[17:11] <[Coke]> m: my %r = 0, 'a', 0, 'b', 0, 'c'; dd %r;

[17:11] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´Hash %r = {"0" => "c"}‚ê§¬ª

[17:15] <JJAtria[m]> melezhik: Yes, I meant dists in the zef ecosystem. And thanks for the heads up on the timing issues. We had noticed them, just trying to find the TUITs :) 

[17:16] <[Coke]> kawaii: if I try to run your snippet, it just hangs here.

[17:16] <[Coke]> can you golf it a bit so it's just processing data and not hitting the network?

[17:17] <kawaii> [Coke]: will do, few moments

[17:17] <[Coke]> Or maybe remove the kv and do a dump of the line that would end in head(1)

[17:18] <[Coke]> if your @results is more complicated than my @a...

[17:18] <[Coke]> oh, it did eventually finish.

[17:19] <kawaii> [Coke], done https://www.irccloud.com/pastebin/mOXSCriu/

[17:19] <[Coke]> so, the head(1) entry is:

[17:19] <[Coke]> $("Omar G.", <2/3>)

[17:20] <kawaii> Yeah, and I'd like to extrapolate it to be something like `%("Omar G." => <2/3>)`

[17:20] <[Coke]> ... so if that is your array element 0, it's going to stringify as "Omar G. 0.66667" (or so). So it's doing what we told it.

[17:20] <[Coke]> so you have to construct your string.

[17:20] <[Coke]> if the default stringification isn't what you want...

[17:21] *** thundergnat joined
[17:21] <thundergnat> m: .say for [("Omar G.", <2/3>), ("Gomer P.", <7/8>), ("Homer S.", <13/16>)].map({ .[0] => .[1] }).sort({ .value }).head;

[17:21] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´Omar G. => 0.666667‚ê§¬ª

[17:21] <[Coke]> maybe add a .map(*.raku) to the pipeline?

[17:21] <thundergnat> Maybe? ^

[17:22] <kawaii> thundergnat: let me try this :)

[17:23] <kawaii> thundergnat: much closer, but it seems to disorder my original array

[17:23] <[Coke]> m: .say for [("Omar G.", <2/3>), ("Gomer P.", <7/8>), ("Homer S.", <13/16>)].map({ .[0] => .[1] }).kv

[17:23] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´0‚ê§Omar G. => 0.666667‚ê§1‚ê§Gomer P. => 0.875‚ê§2‚ê§Homer S. => 0.8125‚ê§¬ª

[17:23] <[Coke]> no, because if he's doing the .kv he's still getting the stringification of list to string that he didn't like.

[17:24] <[Coke]> m: my %r = [("Omar G.", <2/3>), ("Gomer P.", <7/8>), ("Homer S.", <13/16>)].map(*.raku).kv; dd %r

[17:24] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´Hash %r = {"0" => "\$(\"Omar G.\", <2/3>)", "1" => "\$(\"Gomer P.\", 0.875)", "2" => "\$(\"Homer S.\", 0.8125)"}‚ê§¬ª

[17:24] <[Coke]> ^^

[17:24] <kawaii> I get `{Chris Boulton => 0.041667}` which is the right structure but wrong data, as Omar should be the highest value 

[17:24] <[Coke]> if you want something more clever than *.raku, you can swap out the map.

[17:25] <kawaii> [Coke]: ah that's perfect, thank you :)

[17:26] <[Coke]> oh good

[17:28] <notagoodidea> melezhik: Yeah I found it before. todos in my idea was more a playground to showcase some raku code under a loose constraint.

[17:28] <tellable6> 2021-01-13T17:04:41Z #raku <melezhik> notagoodidea on - todos repo - ¬† take a look at https://modules.raku.org/dist/App::Tasks:cpan:JMASLAK

[17:28] <notagoodidea> todo list is just an excuse. Worst case, I have fun on my side.

[17:29] <guifa> kawaii: default sort is low to high.  So if you want the highest value, use .sort( -*.value) 

[17:30] <kawaii> guifa: yep, got it, thanks :)

[17:31] <melezhik> notagoodidea so you people add a source code of their todo manages to your todo repo, right?

[17:31] <tellable6> 2021-01-12T06:14:26Z #raku <lucs> melezhik: Yeah, makes sense. Just not used to that term I guess.

[17:31] <tellable6> 2021-01-12T18:43:36Z #raku <tony-o> melezhik you're welcome to push tests. #15 is merged

[17:32] <melezhik> so you -> so you want

[17:32] <melezhik> tony-o cool, will try to make a PR with fez /Sparky tests

[17:33] <Geth> ¬¶ doc: 14ad7fa562 | Coke++ | doc/Type/Seq.pod6

[17:33] <Geth> ¬¶ doc: Remove skip

[17:33] <Geth> ¬¶ doc: 

[17:33] <Geth> ¬¶ doc: With latest rakudo/master (executable and source dir)

[17:33] <Geth> ¬¶ doc: all tests pass on the file.

[17:33] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/14ad7fa562

[17:33] <linkable6> Link: https://docs.raku.org/type/Seq

[17:33] *** Tirifto joined
[17:35] <notagoodidea> melezhik: for example or just something silly on the repo. Does your question imply a scheme of gathering others code without credits. If not, now I ask myself if it the best way by doing it under my repos.

[17:36] *** dakkar left
[17:37] <notagoodidea> For example, I am trying to code golf a todo list manager right now and after that I will try to do one with internationlization of the CLI.

[17:37] *** thundergnat left
[17:38] <notagoodidea> Just a frame to play with stuff in raku. At least that was my initial idea. Not any intent ready to ship programs for "serious" uses.

[17:38] <guifa> Is there a way that I can make a class that automagically uses a proxy for access or does that require a trait?

[17:38] <melezhik> notagoodidea I see. No I am just curios. Basically you choose between referencing¬† to other repos from your todo repo or asking people to merge their tools to your todo repo ...

[17:39] <notagoodidea> In a way, both could be done. Letting people chose to edit the readme to link to their repo or drop other stuff in the repo.

[17:39] *** patrickb joined
[17:39] <melezhik> notagoodidea ++

[17:40] <patrickb> .

[17:40] <notagoodidea> melezhik: thanks for the eye opening :)

[17:43] <patrickb> tony-o: I think now might be a good time to publish an introduction to the zef ecosystem, the new p6c indexer and the fez uploader. I think it's high time to drive out the confusion of the zef eco vs the fez uploader.

[17:46] <jjatria> patrickb++

[17:46] <melezhik> patrickb++

[17:46] <melezhik> however I know writing docs is tough ha-ha :]

[17:49] <Geth> ¬¶ doc: c378f15235 | Coke++ | xt/check-signatures.t

[17:49] <Geth> ¬¶ doc: Add a note for editors/testers

[17:49] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/c378f15235

[17:50] <guifa> okay actually a trait won‚Äôt be bad but

[17:51] <guifa> how can I have a trait produce a Proxy on access for an attribute

[17:51] *** cpan-raku left
[17:51] * guifa pokes the queen of traits, lizmat

[17:51] *** cpan-raku joined
[17:51] *** cpan-raku left
[17:51] *** cpan-raku joined
[17:53] <kawaii> Is there a method I can use to transform a hash with a single kv into a pair?

[17:54] <patrickb> tony-o: Also I'd be very interested in how the p6c indexer works exactly. Does it guarantee that installing some version will always install the exact same thing? If so, how does it decide what commit to use for a given version?

[17:54] <guifa> kawaii not a single one.  Just .pairs.head

[17:55] <notagoodidea> :p?

[17:55] *** sortiz joined
[17:56] <patrickb> tony-o: And btw. a huge thanks for picking this up again and investing time into the new eco. It's really amazing to see this move forward!

[17:56] <notagoodidea> m: my %foo = {foo => 1}; say %foo:p; say %foo:p.^name;

[17:56] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´5===SORRY!5===‚ê§Variable '%foo:p' is not declared‚ê§at <tmp>:1‚ê§------> 3my %foo = {foo => 1}; say 7‚èè5%foo:p; say %foo:p.^name;‚ê§Other potential difficulties:‚ê§    Useless use of hash composer on right side of hash assignment; did you me‚Ä¶¬ª

[17:58] *** clarjon1 left
[17:59] <notagoodidea> m: my %foo = foo => 1; say %foo<foo>:p; say %foo<foo>:p.^name;

[17:59] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed postfix call‚ê§at <tmp>:1‚ê§------> 3 => 1; say %foo<foo>:p; say %foo<foo>:p.7‚èè5^name;‚ê§¬ª

[17:59] <notagoodidea> m: my %foo = foo => 1; say %foo<foo>:p;

[17:59] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´foo => 1‚ê§¬ª

[17:59] <notagoodidea> m: my %foo = foo => 1; say %foo<>:p;

[17:59] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´(foo => 1)‚ê§¬ª

[18:05] <guifa> nm, I got the proxy for the attribute, but now I can‚Äôt access the actual value, when I use $attribute.get_value(self), it calls the proxy again for an instant infinite loop =/

[18:13] <tony-o> patrickb: i have it started to make an intro to fez and the new eco

[18:13] <tony-o> should probably be done with that on friday

[18:14] <patrickb> Yay! I'm really happy to see all the progress.

[18:23] <melezhik> tony-o++

[18:42] *** domidumont left
[19:01] *** lucasb joined
[19:10] *** aahm left
[19:30] *** Altai-man joined
[19:32] *** sena_kun left
[19:48] *** jmerelo left
[19:52] *** b2gills1 left
[19:54] *** aahm joined
[19:54] *** aahm left
[20:15] *** b2gills joined
[20:17] *** coldpress left
[20:26] *** melezhik left
[20:27] *** MasterDuke left
[20:28] *** patrickb left
[20:30] <sortiz> m: my %h = foo => 1; my $p = %h.pairs[0]; $p.WHAT.say; # kawaii 

[20:30] <camelia> rakudo-moar 12b49b834: OUTPUT: ¬´(Pair)‚ê§¬ª

[20:32] *** ufobat__ joined
[20:35] *** ufobat_ left
[20:50] <notagoodidea> .tell melezhik Does the new wording/structure better match the intent? https://github.com/notagoodidea/todos/blob/main/README.md

[20:50] <tellable6> notagoodidea, I'll pass your message to melezhik

[20:50] *** notagoodidea left
[20:51] *** Maylay left
[20:52] *** melezhik joined
[20:52] *** sjm_uk left
[20:52] <melezhik> .

[20:52] <tellable6> 2021-01-13T20:50:37Z #raku <notagoodidea> melezhik Does the new wording/structure better match the intent? https://github.com/notagoodidea/todos/blob/main/README.md

[20:54] <melezhik> .tell notagoodidea: this is good , very clear

[20:54] <tellable6> melezhik, I'll pass your message to notagoodidea

[20:56] *** Maylay joined
[21:02] *** stoned75 left
[21:03] *** stoned75 joined
[21:07] *** Black_Ribbon joined
[21:07] *** Maylay left
[21:10] *** MasterDuke joined
[21:14] * [Coke] yawns.

[21:30] *** Garbanzo joined
[21:33] *** melezhik left
[21:49] *** webstrand joined
[21:50] *** Tirifto left
[21:56] *** stoned75 left
[21:58] *** stoned75 joined
[22:11] *** melezhik joined
[22:12] <melezhik> .

[22:22] *** melezhik left
[22:23] *** notagoodidea joined
[22:24] *** xelxebar joined
[22:24] *** xelxebar_ left
[22:25] *** wamba left
[22:31] *** Altai-man left
[22:33] *** brtastic left
[22:36] <Geth> ¬¶ doc: 90efdf1f9e | (Stoned Elipot)++ | 3 files

[22:36] <Geth> ¬¶ doc: Fix links to Empty

[22:36] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/90efdf1f9e

[22:39] *** cono left
[22:43] *** Maylay joined
[22:49] *** Garbanzo left
[23:07] <Geth> ¬¶ problem-solving: melezhik assigned to rba Issue Independent CI server for Raku modules and infrastructure https://github.com/Raku/problem-solving/issues/258

[23:10] *** MasterDuke left
[23:18] *** melezhik joined
[23:18] <melezhik> .

[23:18] *** kiti_nomad[m] joined
[23:21] *** lucasb left
[23:23] *** melezhik left
[23:59] *** melezhik joined
