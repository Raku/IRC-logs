[00:01] *** defaultxr joined
[00:50] *** pecastro left
[01:07] *** simcop2387 left
[01:32] *** JRaspass left
[01:35] *** Altai-man_ joined
[01:36] *** CesareoAguirre joined
[01:36] *** sena_kun left
[01:42] *** MasterDuke left
[02:13] *** kvw_5_ joined
[02:17] *** kvw_5 left
[02:27] *** marcusr left
[02:28] *** marcusr joined
[02:42] *** marcusr left
[02:44] *** marcusr joined
[02:48] *** gnufr33dom joined
[02:48] *** marcusr left
[02:49] *** marcusr joined
[02:59] *** marcusr left
[03:00] *** marcusr joined
[03:29] *** kaiwulf left
[03:43] *** aindilis joined
[04:02] *** marcusr left
[04:04] *** marcusr joined
[04:07] *** marcusr left
[04:09] *** marcusr joined
[04:37] *** brtastic joined
[05:10] *** CesareoAguirre left
[05:16] *** sno joined
[05:16] *** CesareoAguirre joined
[05:16] *** parabolize left
[05:21] *** sno left
[05:25] *** sno joined
[05:29] *** guifa left
[05:42] *** CesareoAguirre69 joined
[05:42] *** CesareoAguirre69 left
[05:49] *** wamba joined
[06:15] *** CesareoAguirre left
[06:17] *** neshpion left
[06:28] *** jmerelo joined
[06:29] *** kst left
[06:59] *** ufobat joined
[07:20] *** aborazmeh joined
[07:23] *** sjm_uk joined
[07:26] *** wamba left
[07:35] *** wamba joined
[07:48] *** patrickb joined
[07:53] *** Sgeo left
[08:04] *** gnufr33dom left
[08:24] *** abraxxa joined
[08:28] *** abraxxa left
[08:29] *** abraxxa joined
[08:34] *** aborazmeh left
[08:41] *** dakkar joined
[08:45] *** Scimon joined
[08:49] *** pecastro joined
[09:00] *** MitarashiDango[m left
[09:07] *** MasterDuke joined
[09:11] *** bdju joined
[09:12] *** dakkar left
[09:14] *** dakkar joined
[09:16] *** domidumont joined
[09:20] *** JRaspass joined
[09:31] *** rindolf joined
[09:50] *** MasterDuke left
[09:54] *** MasterDuke joined
[09:56] *** El_Che left
[09:58] *** El_Che joined
[10:10] *** ftq joined
[10:12] <ftq> p6: say 3.times 3

[10:12] <evalable6> ftq, rakudo-moar 4fb9c19b0: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Er‚Ä¶¬ª

[10:12] <evalable6> ftq, Full output: https://gist.github.com/695fec1327fb348c6b4d20181c7ef766

[10:18] <ftq> hello

[10:22] <MasterDuke> m: say 3*3; say "hello" x 3; (say "hello") xx 3 # not sure which you were trying to do with the `.times`

[10:22] <evalable6> MasterDuke, rakudo-moar 9152a0cc2: OUTPUT: ¬´9‚ê§hellohellohello‚ê§hello‚ê§hello‚ê§hello‚ê§¬ª

[10:38] <ftq> thx

[10:38] <ftq> i have no clue either

[11:10] *** linkable6 left
[11:10] *** evalable6 left
[11:12] *** evalable6 joined
[11:13] *** linkable6 joined
[11:14] <dakkar> m: role Times { method times($t) { return self * $t } }; say (3 but Times).times: 3;

[11:14] <evalable6> dakkar, rakudo-moar 9152a0cc2: OUTPUT: ¬´9‚ê§¬ª

[11:14] <dakkar> üòú

[11:25] <lizmat> m: role Times[\times] { method times() { return self * times } }; say (3 but Times[3]).times  #  :-)

[11:25] <evalable6> lizmat, rakudo-moar 9152a0cc2: OUTPUT: ¬´9‚ê§¬ª

[11:27] <tadzik> m: m: role Times[\times] { method gist() { return self * times } }; say (3 but Times[3])

[11:27] <evalable6> tadzik, rakudo-moar 9152a0cc2: OUTPUT: ¬´(exit code 1) This type cannot unbox to a native string: P6opaque, Int‚ê§  in block <unit> at /tmp/R9gciIwKDI line 1‚ê§‚ê§¬ª

[11:27] <tadzik> well thta's a fun error message

[11:27] <tadzik> m: role Times[\times] { method gist() { return self * times } }; say (3 but Times[3])

[11:28] <evalable6> tadzik, rakudo-moar 9152a0cc2: OUTPUT: ¬´(exit code 1) This type cannot unbox to a native string: P6opaque, Int‚ê§  in block <unit> at /tmp/8lLVkhyyb1 line 1‚ê§‚ê§¬ª

[11:28] <tadzik> ah, it outsmarted me

[11:28] <dakkar> m: role Times[\times] { method gist() { return (self * times).gist } }; say (3 but Times[3])

[11:29] <evalable6> dakkar, rakudo-moar 9152a0cc2: OUTPUT: ¬´9‚ê§¬ª

[11:32] <dakkar> (ugh, I don't remember the name for the "canonical" embedding of the lambda calculus in a Hindley-Milner type system‚Ä¶)

[11:56] *** HaraldJoerg joined
[12:02] *** xinming left
[12:04] *** xinming joined
[12:18] *** tobs` joined
[12:19] *** tobs` is now known as tobs

[13:03] *** Xliff left
[13:14] *** Black_Ribbon left
[13:15] *** MasterDuke left
[13:19] *** MasterDuke joined
[13:32] *** PimDaniel joined
[13:36] *** jmerelo left
[13:37] <PimDaniel> .tell Duke I just try to do package lookup through variables : let's say you have a package A::B:TRUC::D::E::F; my $truc='TRUC' how do you interpolate $truc to access to this package. If i write my %h = A::B::TRUC::D::E::F::; %h contains my symbols. if i write my %h = ::A::B::($truc)::D::E::F , Noooo :(

[13:37] <tellable6> PimDaniel, I haven't seen Duke around, did you mean kleb?

[13:38] *** MasterDuke left
[13:38] *** MasterDuke joined
[13:39] <PimDaniel> .tell Duke now back to the example, and look at my code but there's probably more simple example to explain what i wanna do. And please forget what the example do : it does nothing, i just want to undestand what is under the box `Raku`.

[13:39] <tellable6> PimDaniel, I haven't seen Duke around, did you mean kleb?

[13:40] <PimDaniel> I try to do package lookup through variables : let's say you have a package A::B:TRUC::D::E::F; my $truc='TRUC' how do you interpolate $truc to access to this package. If i write my %h = A::B::TRUC::D::E::F::; %h contains my symbols. if i write my %h = ::A::B::($truc)::D::E::F , Noooo :(

[13:41] <PimDaniel> I tried many solutions but none work :(

[13:42] <PimDaniel> .tell Coke I just try to do package lookup through variables : let's say you have a package A::B:TRUC::D::E::F; my $truc='TRUC' how do you interpolate $truc to access to this package. If i write my %h = A::B::TRUC::D::E::F::; %h contains my symbols. if i write my %h = ::A::B::($truc)::D::E::F , Noooo :(

[13:42] <tellable6> PimDaniel, I'll pass your message to [Coke]

[13:42] <PimDaniel> .tell Coke now back to the example, and look at my code but there's probably more simple example to explain what i wanna do. And please forget what the example do : it does nothing, i just want to undestand what is under the box `Raku`.

[13:42] <tellable6> PimDaniel, I'll pass your message to [Coke]

[13:44] *** harrison_ joined
[13:47] *** modula joined
[13:48] *** defaultxr left
[13:48] *** modula is now known as defaultxr

[13:48] *** harrison_ left
[13:54] *** JRaspass left
[13:56] *** PimDaniel left
[14:08] *** PimDaniel joined
[14:13] *** PimDaniel left
[14:15] *** holyghost joined
[14:24] *** PimDaniel joined
[14:28] *** PimDaniel left
[14:29] <RaycatWhoDat> This is the first time I've been logged in longer than a hour or so.

[14:29] <RaycatWhoDat> There were some very "interesting" conversations over the last few days.

[14:31] <tyil> RaycatWhoDat: this is why bouncers are so popular among IRC users

[14:31] <tyil> there's just so much happening that you don't want to miss out on

[14:31] <El_Che> tyil: nw you're being sarcastic :)

[14:32] <tyil> El_Che: well, not on the reason bouncers being popular :p

[14:34] *** gnufr33dom joined
[14:34] <RaycatWhoDat> Well, hopefully, it's not a common thing and I just missed it this whole time.

[14:35] <tyil> RaycatWhoDat: it's not a common thing in #raku from my experience

[14:35] <tyil> there's other networks where it is the norm, but Freenode is generally quite on-topic with most of its channels

[14:48] *** epony left
[14:51] *** epony joined
[14:52] *** PimDaniel joined
[14:58] *** PimDaniel left
[15:00] *** rindolf left
[15:10] *** wamba left
[15:24] *** Sgeo joined
[15:25] <[Coke]> over the last few months, the most popular off topic convos were about US politics & space x launches.

[15:25] <tellable6> hey [Coke], you have a message: https://gist.github.com/47592bc3b8b618303f9a10e21312f74c

[15:25] <tellable6> hey [Coke], you have a message: https://gist.github.com/3e6fd5e4395b08e85389f8284b829abb

[15:25] <[Coke]> thankfully only one of those is still exploding.

[15:25] *** patrickb84 joined
[15:26] <tadzik> kek

[15:28] *** patrickb left
[15:30] *** parabolize joined
[15:40] <lizmat> well, exploding: rapid unscheduled deconstruction  :-)

[15:40] *** wamba joined
[15:41] <lizmat> and I don't think it technically exploded: it crashed, releasing excess fuel that ignited

[15:42] <lizmat> it's al very impressive, but most of the damage is still from the crash, I'd say

[15:42] <tadzik> should've made them electric, Teslas at least don't explode when the roofs fall off

[15:47] *** defaultxr left
[15:53] *** defaultxr joined
[15:54] *** rindolf joined
[15:58] <El_Che> tadzik: they just autocombust

[16:00] *** JRaspass joined
[16:07] *** sno left
[16:09] *** defaultxr left
[16:12] *** defaultxr joined
[16:13] *** defaultxr left
[16:14] *** defaultxr joined
[16:15] *** ftq left
[16:21] *** sno joined
[16:32] *** Manifest0 joined
[16:41] *** neshpion joined
[16:42] *** guifa joined
[16:47] *** wamba left
[16:50] <guifa> Well‚Ä¶ that‚Äôs embarassing.  LOL.  Apparently on my number formatting module, I never thought to do a test for 0.  And the standard way of determining the number of digits using ceiling log10 ‚Ä¶ doesn‚Äôt work with 0.

[16:53] *** jmerelo joined
[16:57] *** fluca1978 left
[17:00] *** gnufr33dom left
[17:01] *** dakkar left
[17:01] *** dakkar joined
[17:06] *** squashable6 left
[17:07] *** squashable6 joined
[17:25] *** patrickb84 left
[17:26] <[Coke]> m: module THIS::THAT { our $WHY = 3; }; my $var = "WHY"; dd $THIS::THAT::($var); # PimDaniel

[17:26] <evalable6> [Coke], rakudo-moar 583ce30c8: OUTPUT: ¬´Int $WHY = 3‚ê§¬ª

[17:29] *** MasterDuke left
[17:33] *** mowcat joined
[17:34] *** Scimon left
[17:34] *** dakkar left
[17:36] *** PimDaniel joined
[17:40] <PimDaniel> Thank's Coke, but i yet know how to do this  : what i want to coherce into a variable is THAT:  module $THIS::THAT { our $WHY ) 3; }; my $var = 'THAT' , and got the same result as Stash = ::THIS::THAT using $var, Thank's.

[17:40] *** vike left
[17:41] <PimDaniel> sorry i'v put '$' before $THIS : remove it. 

[17:42] <PimDaniel> The Stash inherits a hash and i want to get it but it seams to be impossible.

[17:46] <PimDaniel> .tell Coke  Thank's Coke, but i yet know how to do this.  what i want to get from a variable is THAT:  module THIS::THAT { our $WHY = 3; }; my $var = 'THAT' ,  (Stash) my %st  = ::THIS::$var or THIS::$var:: or any , using $var, Thank's.

[17:46] <tellable6> PimDaniel, I'll pass your message to [Coke]

[17:46] <[Coke]> if I've just sent it, you don't have to .tell me. :)

[17:46] <PimDaniel> ok sorry :/

[17:47] <[Coke]> m: module THIS::THAT { our $WHY = 3; }; my $var = "THAT"; dd $THIS::($var)::WHY;

[17:47] <evalable6> [Coke], rakudo-moar 583ce30c8: OUTPUT: ¬´Int $WHY = 3‚ê§¬ª

[17:49] <PimDaniel> True it work when you go forward, but i want to get the Stash object , kinda hash , not WHY element into THAT, Sorry.

[17:50] <PimDaniel> THIS::THAT::.kv works!

[17:51] <PimDaniel> THIS.kv too. 

[17:52] <PimDaniel> *THIS::.kv

[17:53] <[Coke]> show me a line using .kv that works given that module?

[17:53] <PimDaniel> Ok, i've may not writen it like this.

[17:53] <[Coke]> (or a different module if that one isn't sufficient)

[17:55] <[Coke]> m: module THIS::THAT { our $WHY = 3; }; dd THIS::THAT::.kv # ?

[17:55] <evalable6> [Coke], rakudo-moar 583ce30c8: OUTPUT: ¬´("\$WHY", 3).Seq‚ê§¬ª

[17:57] <PimDaniel> I confirm dd THIS::THAT::.kv works.

[17:58] <[Coke]> m: module THIS::THAT { our $WHY = 3; }; dd THIS::('THAT')::.kv # so this is the error

[17:58] <evalable6> [Coke], rakudo-moar 583ce30c8: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Er‚Ä¶¬ª

[17:58] <evalable6> [Coke], Full output: https://gist.github.com/fcbb8c663e8a6fd51aedcd486b997d99

[17:58] <[Coke]> Combination of indirect name lookup and call not supported

[17:58] <PimDaniel> you said $THIS::($var)::WHY

[17:58] <[Coke]> so if you can't do it with syntax, you'll have to do it indirectly.

[17:59] <[Coke]> the $ is because the WHY is a scalar.

[17:59] <[Coke]> (the $ at the beginning)

[18:00] <PimDaniel> look at that : https://pastebin.com/DjBCeDXE

[18:01] <PimDaniel> MyModule::Inner::.kv works for me.

[18:04] <PimDaniel> What are your running with? : re 'module THIS::THAT { our $WHY = 3; }; dd THIS::THAT::.kv ' => ("\$WHY", 3).Seq 

[18:04] <PimDaniel> re is an alias='raku -e'

[18:05] <tonyo> m: module X { package I { our $v = 42; } }; say X::I::<$v>; 

[18:05] <evalable6> tonyo, rakudo-moar 583ce30c8: OUTPUT: ¬´42‚ê§¬ª

[18:05] <PimDaniel> m: module THIS::THAT { our $WHY = 3; }; dd THIS::THAT::.kv

[18:05] <evalable6> PimDaniel, rakudo-moar 583ce30c8: OUTPUT: ¬´("\$WHY", 3).Seq‚ê§¬ª

[18:05] <tonyo> PimDaniel: ^

[18:05] <PimDaniel> Hi tonyo

[18:06] *** aluaces left
[18:06] *** vike joined
[18:07] <PimDaniel> Ok Coke i think a must look at the url you gave me, thank's

[18:10] <PimDaniel> I suppose a solution for that is to loop into hashes, then , attributes. It is probably wanted since Stash i do well understand means something like `hidden`, please tell me if i'm wrong.

[18:10] <PimDaniel> Nothing is urgent: i just wanna understand what is under the box (Raku).

[18:12] *** PimDaniel left
[18:16] *** wamba joined
[18:19] *** domidumont left
[18:29] <tonyo> ü§¶‚Äç‚ôÄÔ∏è

[18:32] *** aluaces joined
[18:32] <[Coke]> m: module THIS::THAT { our $WHY = 3; } ; var $x = "THAT" ; dd THIS.WHO{$THAT}.WHO

[18:32] <evalable6> [Coke], rakudo-moar 583ce30c8: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Er‚Ä¶¬ª

[18:32] <evalable6> [Coke], Full output: https://gist.github.com/e33dcd33e771fa70fb5dff4e7d53841c

[18:32] <[Coke]> m: module THIS::THAT { our $WHY = 3; } ; var $x = "THAT" ; dd THIS.WHO{$x}.WHO

[18:32] <evalable6> [Coke], rakudo-moar 583ce30c8: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Er‚Ä¶¬ª

[18:32] <evalable6> [Coke], Full output: https://gist.github.com/7915f5e5288f80d6376e357825fac3d4

[18:33] <[Coke]> m: module THIS::THAT { our $WHY = 3; } ; my $x = "THAT" ; dd THIS.WHO{$x}.WHO

[18:33] <evalable6> [Coke], rakudo-moar 583ce30c8: OUTPUT: ¬´Stash element = {"\$WHY" => 3}‚ê§¬ª

[18:33] <[Coke]> ^^

[18:34] <[Coke]> .WHO on something like THIS gives you its stash. then you can index it like you'd expect.

[18:34] <[Coke]> .tell PimDaniel m: module THIS::THAT { our $WHY = 3; } ; my $x = "THAT" ; dd THIS.WHO{$x}.WHO

[18:34] <tellable6> [Coke], I'll pass your message to PimDaniel

[18:50] *** [Sno] joined
[18:50] *** guifa_ joined
[18:51] *** vike1 joined
[18:51] *** vike left
[18:52] *** guifa left
[18:52] *** sno left
[18:52] *** guifa_ is now known as guifa

[18:55] *** jmerelo left
[19:09] *** natrys joined
[19:20] *** buffet joined
[19:24] *** stoned75 joined
[19:41] *** MasterDuke joined
[19:41] <summerisle> m: say $_.base(64) for gather { with '/dev/random'.IO.open.read(32) { take .shift while .so } };

[19:41] <evalable6> summerisle, rakudo-moar 583ce30c8: OUTPUT: ¬´(exit code 1) base argument to base out of range. Is: 64, should be in 2..36‚ê§  in block <unit> at /tmp/PylbyDHvNA line 1‚ê§‚ê§¬ª

[19:41] <summerisle> m: say $_.base(16) for gather { with '/dev/random'.IO.open.read(32) { take .shift while .so } };

[19:41] <evalable6> summerisle, rakudo-moar 583ce30c8: OUTPUT: ¬´ED‚ê§D0‚ê§2D‚ê§46‚ê§6A‚ê§79‚ê§98‚ê§8D‚ê§C5‚ê§3E‚ê§C9‚ê§E7‚ê§82‚ê§2D‚ê§C8‚ê§2D‚ê§4D‚ê§A2‚ê§30‚ê§B8‚ê§78‚ê§E7‚ê§5B‚ê§92‚ê§A7‚ê§65‚ê§8C‚ê§5F‚ê§67‚ê§1B‚ê§30‚ê§87‚ê§¬ª

[19:41] *** ufobat left
[19:42] <summerisle> m: say $_.base(16) for gather with '/dev/random'.IO.open.read(32) { take .shift while .so };

[19:42] <evalable6> summerisle, rakudo-moar 583ce30c8: OUTPUT: ¬´(signal SIGHUP) ¬´timed out after 10 seconds¬ª¬ª

[19:42] <summerisle> m: say $_.base(36) for gather { with '/dev/random'.IO.open.read(32) { take .shift while .so } };

[19:42] <evalable6> summerisle, rakudo-moar 583ce30c8: OUTPUT: ¬´1N‚ê§X‚ê§E‚ê§4H‚ê§1F‚ê§6W‚ê§4X‚ê§3P‚ê§3M‚ê§¬ª

[20:01] *** stoned75 left
[20:10] *** sjm_uk left
[20:21] *** wamba left
[20:23] *** CesareoAguirre joined
[20:25] <tbrowder> .tell lizmat FYI the planet.raku.org does use both rss and atom format feed types. the README could use some love, and i'll try to help that iff i get my blog feed working

[20:25] <tellable6> tbrowder, I'll pass your message to lizmat

[20:25] <lizmat> ++tbrowder

[20:45] *** ufobat joined
[21:03] *** krako[m] joined
[21:22] *** natrys left
[21:26] *** ufobat left
[21:35] *** natrys joined
[21:38] *** natrys left
[21:42] *** kaiwulf joined
[21:43] <krako[m]> Sorry to annoy you again.  I might be stupid but I see *.asc files with the files but don't find the public key...

[21:43] <krako[m]> Anyone know where I can find it, please ?

[21:44] <krako[m]> (about the rakudo download files)

[22:11] <krako[m]> Sorry, I copy pasted my question from the raku's discord server like an idiot.

[22:11] <krako[m]> I downloaded 'rakudo-moar' and 'rakudo-star' from "rakudo.org".

[22:11] <krako[m]> With these files, there are `*.asc` files but I can't find the public keys.

[22:12] <krako[m]> Does anyone could help please ?

[22:12] <MasterDuke> tyil and Altai-man_ are who you probably want to ask

[22:13] <tyil> krako[m]: rakudo-star should be signed by my key, https://www.tyil.nl/pubkey.txt

[22:14] <tyil> I should probably document it in the README at least

[22:16] <krako[m]> For this file `rakudo-moar-2020.12-01-win-x86_64-msvc.zip` I have this fingerprint `7A6C9EB8809CFEAF0ED4E09F18C438E6FF24326D`

[22:16] <krako[m]> I imported your tyil but it doesn't match

[22:16] <krako[m]> *yours

[22:16] *** rindolf left
[22:16] <tyil> oh, windows, that would be hankache, but I haven't heard of him for ages

[22:16] <krako[m]> I also downloaded this file `rakudo-moar-2020.12-01-win-x86_64-msvc.zip`

[22:17] <tyil> wait, no that's rakudo-moar, not rakudo-star

[22:17] <tyil> I don't know who signs those

[22:17] *** brtastic left
[22:18] <krako[m]> thank you anyway !

[22:19] <tyil> krako[m]: I've asked on #raku-dev, perhaps someone's looking over there that can tell

[22:19] <krako[m]> for the last cited file, I made a clipboard mistake. I also downloaded this file : `rakudo-star-2020.05.1-01-win-x86_64-JIT.msi`

[22:19] <tbrowder> i've submitted a PR for https://github.com/Raku/planet.raku.org if someone could please take a look

[22:19] <tyil> krako[m]: I only do rakudo-star's source release (usable on GNU+Linux and BSDs), hankache did the windows release for it, but as stated before, he's been missing for a while

[22:20] <tbrowder> pr #4

[22:20] <tyil> if you have the knowledge (and desire!) to play with github actions, perhaps you can set up an automated build to make a .msi out of it too :>

[22:21] <krako[m]> tyil: that's sad but ok ! Sorry, but I don't have a github account and don't know github actions

[22:22] <tyil> too bad, but understandable

[22:22] <tyil> the last thing I can offer you is hankache's repo, with instructions on how to build rakudo-star on windows

[22:22] <tyil> https://github.com/hankache/rakudo-star-win

[22:23] <tyil> if nothing else, you'd still be able to locally make your own up-to-date rakudo-star .msi :)

[22:26] *** Sir_Ragna joined
[22:33] <krako[m]> not much... but thanks tyil !

[22:35] *** Black_Ribbon joined
[22:38] *** HaraldJoerg left
[22:49] <[Coke]> You can also do a build of rakudo on windows; installing zef after that and the modules you need is easy

[22:50] *** lizmat left
[22:50] <[Coke]> I do occasional builds with strawberry perl & MSVC... 17? once you have the devtools command prompt and the perl, it's easy

[22:50] <[Coke]> (and git)

[22:57] <El_Che> [Coke]: is the tooling available on Github Actions?

[23:14] <[Coke]> No clue. I can give it a shot I guess.

[23:14] <[Coke]> do we have github actions for, e.g. linux?

[23:14] <[Coke]> to do a build?

[23:18] *** neshpion left
[23:30] <El_Che> every repo has it

[23:31] <El_Che> you can run linux, windows, mac

[23:31] <El_Che> en containers

[23:59] *** neshpion joined
