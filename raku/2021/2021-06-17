[00:02] *** reportable6 left
[00:02] *** b2gills joined
[00:03] *** reportable6 joined
[00:07] *** Doc_Holliwood joined
[00:19] *** melezhik left
[00:27] *** justsomeguy joined
[00:39] *** xinming_ left
[00:41] *** Doc_Holliwood left
[01:22] *** justsomeguy left
[01:34] *** holly_ left
[02:16] *** a3r0 joined
[02:36] *** solitario joined
[02:39] *** solitario left
[02:39] *** solitario joined
[02:44] <codesections> Wow, that was an unpleasant bug to track down in my code!

[02:44] <codesections> m: my $a = 'foo'; my $b = 'foo' but role {}; say $a eq $b; say $a ~~ $b; say $a (elem) ($b, 2)

[02:44] <camelia> rakudo-moar cd4a72b6a: OUTPUT: ¬´True‚ê§True‚ê§False‚ê§¬ª

[02:45] <codesections> I had no idea that a type with a role mixed in no longer counted as an (elem) of a list

[02:50] <moon-child> I guess ‚àä is using eqv?

[02:50] <moon-child> m: my $a = 'foo'; my $b = 'foo' but role {}; my $c = 'foo'; say $a eqv $b; say $a eqv $c;

[02:50] <camelia> rakudo-moar cd4a72b6a: OUTPUT: ¬´False‚ê§True‚ê§¬ª

[02:57] <codesections> yeah, must be

[03:02] <moon-child> probably should be documented

[03:05] <moon-child> https://github.com/rakudo/rakudo/blob/master/src/core.c/set_elem.pm6#L85  this is ... a bit strange

[03:08] <codesections> How so?  It's comparing the two .WHICH values, which is the same thing &[===] does (at least according to https://github.com/rakudo/rakudo/blob/master/src/core.c/set_elem.pm6#L85 )

[03:09] <codesections> doing it with Str comparison is a bit odd, but I'd assume that's something nqp-related

[03:10] <moon-child> yeah, using string comparison to implement structural equality seems weird to me

[03:13] <codesections> ha, if you're bothered by using Str comparison even when it's on .WHICH, then you _definitely_ shouldn't look at https://github.com/rakudo/rakudo/blob/master/src/core.c/Mu.pm6#L1210 

[03:14] <moon-child> my

[03:33] *** stoned75 left
[04:24] *** a3r0 left
[04:46] <Geth> ¬¶ doc: stuart-little++ created pull request #3901: fix typo in Callable.pod6

[04:46] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3901

[05:24] *** linkable6 left
[05:24] *** evalable6 left
[05:24] *** evalable6 joined
[05:26] *** linkable6 joined
[05:33] *** Doc_Holliwood joined
[05:34] *** jmcgnh left
[05:40] *** jmcgnh joined
[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:07] *** abraxxa joined
[06:12] *** stoned75 joined
[06:13] *** abraxxa left
[06:14] *** abraxxa joined
[06:25] *** ufobat_ joined
[06:30] *** ufobat_ left
[06:35] <stoned75> releases my $n = <2e0>; say $n.^find_method("Num").candidates>>.package

[06:36] <stoned75> commit: releases my $n = <2e0>; say $n.^find_method("Num").candidates>>.package

[06:36] <committable6> stoned75, https://gist.github.com/c6f5e3d725a29d5817b917ed858a7264

[06:37] <stoned75> I'm wondering if inheriting .Num from Num class instead of Str class would not make more sense ?

[06:38] <stoned75> hum... no. I guess it would not work

[06:40] <stoned75> or would it ? :-}

[06:52] *** RandalSchwartz left
[06:53] *** RandalSchwartz joined
[06:53] *** RandalSchwartz left
[06:54] *** RandalSchwartz joined
[06:55] *** RandalSchwartz left
[06:56] *** RandalSchwartz joined
[06:56] *** RandalSchwartz left
[06:56] *** RandalSchwartz joined
[06:56] *** RandalSchwartz left
[06:57] *** RandalSchwartz joined
[06:57] *** RandalSchwartz left
[06:58] *** RandalSchwartz joined
[06:59] *** RandalSchwartz left
[07:00] *** RandalSchwartz joined
[07:00] *** RandalSchwartz left
[07:01] *** RandalSchwartz joined
[07:01] *** RandalSchwartz left
[07:01] *** RandalSchwartz joined
[07:01] *** RandalSchwartz left
[07:02] *** RandalSchwartz joined
[07:03] *** RandalSchwartz left
[07:04] *** RandalSchwartz joined
[07:04] *** RandalSchwartz left
[07:04] *** RandalSchwartz joined
[07:04] *** RandalSchwartz left
[07:05] *** RandalSchwartz joined
[07:05] *** RandalSchwartz left
[07:05] *** RandalSchwartz joined
[07:05] *** RandalSchwartz left
[07:06] *** ufobat joined
[07:06] *** RandalSchwartz joined
[07:06] *** RandalSchwartz left
[07:08] *** RandalSchwartz joined
[07:08] *** RandalSchwartz left
[07:09] *** RandalSchwartz joined
[07:09] *** RandalSchwartz left
[07:09] *** RandalSchwartz joined
[07:09] *** RandalSchwartz left
[07:10] *** RandalSchwartz joined
[07:23] *** Doc_Holliwood left
[07:25] <guifa> Nice.  I got DateTime.fmt working and using basically entirely nqp ops.  Even parsing the formatting string on every run, it's only about 3x slower than the raw .Str,which is not bad.  bodes well for later use with RakuAST

[07:42] <lizmat> guifa++

[07:57] <lizmat> weekly: https://vrurg.github.io/2021/06/16/article-on-roles

[07:57] <notable6> lizmat, Noted! (weekly)

[08:08] *** dakkar joined
[08:08] *** LizBot left
[08:09] *** LizBot joined
[08:09] *** LizBot left
[08:09] *** LizBot joined
[08:14] *** Sgeo left
[08:24] *** LizBot left
[08:24] *** LizBot joined
[08:25] *** LizBot left
[08:25] *** LizBot joined
[08:47] *** MoC joined
[09:14] *** linkable6 left
[09:16] *** linkable6 joined
[09:25] <lizmat> someone with running Raku on a windows machine: could you tell me the output of:

[09:25] <lizmat> use nqp; dd nqp::atkey(nqp::backendconfig,"os")

[09:25] <evalable6> lizmat, rakudo-moar 15d372e2f: OUTPUT: ¬´"linux"‚ê§¬ª

[09:26] <MasterDuke> lizmat: "win32"

[09:27] <lizmat> ok

[09:27] <lizmat> thanks!

[09:27] <Altreus> how did evalable6 know to run that

[09:29] <MasterDuke> roughly, if a message starts with certain keywords and/or contains a lot of punctuation compared to test (i.e., looks like it might be code), it tried to run it

[09:29] <AlexDaniel> üòÅ

[09:29] <Altreus> aha!

[09:29] <AlexDaniel> Actually it attempts to run almost any message

[09:30] <AlexDaniel> Unless its clearly just text, plus some other heuristics

[09:30] <AlexDaniel> But most heuristics look at he output of running the message, not the message itself

[09:30] <MasterDuke> m: say $*KERNEL.arch # lizmat this is empty on windows, which causes failing spectest

[09:30] <camelia> rakudo-moar cd4a72b6a: OUTPUT: ¬´x86_64‚ê§¬ª

[09:30] <Altreus> I guess the question between "this should have run but failed" and "this isn't intended to run" is an unsolvable problem 

[09:31] <lizmat> MasterDuke: I need something to run from NQP  :-)

[09:31] <MasterDuke> no worries, just thought you might be working on code near there

[09:56] *** sono left
[10:05] *** ufobat left
[10:33] *** Doc_Holliwood joined
[10:48] *** morayj joined
[11:14] *** xinming joined
[11:16] *** Altai-man joined
[11:19] *** sena_kun left
[11:42] *** Doc_Holliwould joined
[11:43] *** morayj left
[11:45] *** Doc_Holliwood left
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:13] *** ufobat joined
[12:23] *** Doc_Holliwould left
[12:27] *** xinming left
[12:39] *** peder left
[12:39] *** peder joined
[12:40] *** Doc_Holliwood joined
[12:42] *** peder left
[12:42] *** peder joined
[12:49] *** peder left
[12:49] *** peder joined
[13:07] *** peder left
[13:08] *** peder joined
[13:30] <guifa> lizmat: I'll also be around later today and doing some Windows testing for UserLanguage if you want me to run anything

[13:35] *** RandalSchwartz left
[13:38] *** RandalSchwartz joined
[13:44] <lizmat> guifa: thanks, but I think the issue is solved now: I realized I don't need to be able to check for WIndows in NQP after all

[13:46] <Altreus> the best solution is to not have a problem!

[13:46] <El_Che> that sounds like a fallacy

[13:47] <Altreus> More like a paradox

[13:47] *** Sgeo joined
[13:48] <stoned75> :q

[13:48] *** xinming joined
[13:51] <Altreus> heh, I tried to sarcastically put :p in response

[13:51] <Altreus> But I accidentally typed it into my vim window :D

[13:51] <Altreus> that seems karmic

[13:53] <El_Che> lol

[13:53] <El_Che> it looks like my cat

[13:55] *** cbk joined
[13:56] <Altreus> karma is a great name for a cat

[14:00] <Geth> ¬¶ doc: ada40bc638 | chirvasitua++ (committed by Juan Juli√°n Merelo Guerv√≥s) | doc/Type/Callable.pod6

[14:00] <Geth> ¬¶ doc: fix typo in Callable.pod6

[14:00] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/ada40bc638

[14:01] <linkable6> Link: https://docs.raku.org/type/Callable

[14:23] *** cbk left
[14:39] *** ufobat_ joined
[14:42] *** ufobat left
[15:42] *** bisectable6 left
[15:42] *** unicodable6 left
[15:42] *** benchable6 left
[15:42] *** tellable6 left
[15:42] *** quotable6 left
[15:42] *** bloatable6 left
[15:42] *** shareable6 left
[15:42] *** committable6 left
[15:42] *** reportable6 left
[15:42] *** releasable6 left
[15:42] *** greppable6 left
[15:42] *** notable6 left
[15:42] *** coverable6 left
[15:42] *** linkable6 left
[15:42] *** sourceable6 left
[15:42] *** squashable6 left
[15:42] *** statisfiable6 left
[15:42] *** nativecallable6 left
[15:42] *** evalable6 left
[15:43] *** releasable6 joined
[15:43] *** greppable6 joined
[15:43] *** statisfiable6 joined
[15:43] *** benchable6 joined
[15:43] *** notable6 joined
[15:43] *** bloatable6 joined
[15:44] *** tellable6 joined
[15:44] *** Doc_Holliwood left
[15:44] *** reportable6 joined
[15:44] *** shareable6 joined
[15:44] *** linkable6 joined
[15:44] *** squashable6 joined
[15:45] *** coverable6 joined
[15:45] *** sourceable6 joined
[15:45] *** evalable6 joined
[15:45] *** bisectable6 joined
[15:45] *** committable6 joined
[15:45] *** quotable6 joined
[15:45] *** unicodable6 joined
[15:45] *** nativecallable6 joined
[16:20] *** Doc_Holliwood joined
[16:34] *** ufobat_ left
[16:38] *** dakkar left
[16:44] *** zacts joined
[16:45] *** zacts left
[16:46] *** melezhik joined
[16:48] <melezhik> I started an experimental tool - R3 (Rakudo Release Readiness Toolkit) aimed to help with rakudo releases and bug tracking - https://github.com/melezhik/r3tool  if someone is interested. No promise for a long support, just a prototype for idea  

[16:53] *** stoned75 left
[16:55] *** Doc_Holliwood left
[16:56] *** melezhik left
[17:17] *** cbk joined
[17:32] *** cbk left
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:19] *** Doc_Holliwood joined
[18:22] <[Coke]> m: say $*PROGRAM.parent(1).child('eek');

[18:22] <camelia> rakudo-moar 4f61a108b: OUTPUT: ¬´"/tmp/eek".IO‚ê§¬ª

[18:23] <[Coke]> https://docs.raku.org/routine/child says that .child is deprecated in 6.d, but I'm not seeing any warnings locally

[18:32] *** abraxxa-home joined
[18:34] *** abraxxa-home left
[18:35] *** abraxxa-home joined
[18:36] *** sono joined
[18:48] <[Coke]> Looks like it was upgraded from "eventualy deprecated" to "deprecated in 6.d", but there's nothing in core.d aout IO::Path.

[18:48] <[Coke]> will open doc ticket

[18:55] *** axmed99 joined
[18:56] <Geth> ¬¶ doc: coke self-assigned incorrect deprecation notice on .child https://github.com/Raku/doc/issues/3902

[18:57] *** b2gills left
[18:58] <ugexe> meh i prefer .child/.parent vs .add/.parent

[18:59] <Geth> ¬¶ doc: c7392ee08a | Coke++ | doc/Type/IO/Path.pod6

[18:59] <Geth> ¬¶ doc: Remove deprecation notice

[18:59] <Geth> ¬¶ doc: 

[18:59] <Geth> ¬¶ doc: Closes #3902

[18:59] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/c7392ee08a

[19:00] <linkable6> Link: https://docs.raku.org/type/IO::Path

[19:00] *** linkable6 left
[19:02] *** linkable6 joined
[19:03] <Geth> ¬¶ doc: 96ece3fe64 | Coke++ | 2 files

[19:03] <Geth> ¬¶ doc: fix typo/learn word

[19:03] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/96ece3fe64

[19:03] <[Coke]> ugexe: me too - and now that it's not incorrectly deprecated, use with impunity

[19:04] *** holly_ joined
[19:04] <[Coke]> now off to use .child() in some work code.

[19:04] *** b2gills joined
[19:04] <guifa> I get that the .add was probably to make more sense adding in multiple sub directories at once, where child just implies a single level

[19:05] <guifa> But apparently now macOS allows slashes in file names (!)

[19:05] <ugexe> it was that the functionality was going to be different

[19:05] <ugexe> something something child-secure

[19:05] *** Kaiepi left
[19:05] * guifa tries .add("foo/bar") where 'foo/bar' is the literal file name

[19:07] <guifa> huh.  How in the world did I create that file name

[19:09] <guifa> WTF.  Okay Apple, that makes no sense.  So apparently Apple decided that blocking both colons and slashes in file names was stupid.  The result?  You can type a slash in a file name.  But it's stored as a colon.  Create a file at the command line with a colon and .... it shows up as a slash in the Finder

[19:24] *** ilogger2 left
[19:24] *** Doc_Holliwould joined
[19:24] *** ilogger2 joined
[19:27] *** Doc_Holliwood left
[19:35] <tonyo> why protect users from themselves?

[19:36] <tonyo> the finder prevents a colon

[19:39] *** vodkra left
[19:45] <japhb> [Coke]: I thought the .child deprecation was due to a security-gotcha-by-design problem?  (Meaning that it wasn't inherently a security hole itself, but the API encouraged people to make them, sorta like strcat in C.)

[19:52] *** vodkra joined
[20:02] <[Coke]> japhb: whatever the reason: there's no deprecation

[20:02] <[Coke]> if it's a trap or a stylistic thing, we can doc that, but if you run in 6.d, there's no deprecation warning.

[20:28] *** PotatoGim_ joined
[20:32] <japhb> Oh sure, I just meant, the answer may not be to un-deprecate, but to fix the warning so it *is* deprecated.

[20:33] <japhb> jnthn may remember more about it, ISTR him and Zoffix discussing the problem way back when, though I don't know where in the logs I'd look for that.

[20:34] <japhb> Related to this maybe?  https://github.com/raku-community-modules/IO-Path-ChildSecure/blob/master/lib/IO/Path/ChildSecure.pm6

[20:35] *** PotatoGim left
[20:35] *** PotatoGim_ is now known as PotatoGim

[20:35] <japhb> Oh this is odd: https://github.com/raku-community-modules/IO-Path-ChildSecure#special-notes

[20:35] <MasterDuke> i think Zoffix's IO grant reports have some info

[20:36] *** abraxxa left
[20:38] *** abraxxa-home left
[20:38] *** axmed99 left
[20:45] *** Kaiepi joined
[20:49] <[Coke]> japhb: if a deprecation is added, we'll add it back. no worries.

[20:49] *** squashable6 left
[20:50] *** squashable6 joined
[20:50] <[Coke]> (or we can add a link to that module)

[20:51] *** squashable6 left
[20:53] *** squashable6 joined
[20:54] *** abraxxa-home joined
[21:03] * japhb has done his occasional duty as "index into institutional knowledge"  :-)

[21:09] <[Coke]> BTDT! Thank you. :)

[21:26] *** codesect` joined
[21:28] *** codesections left
[21:34] *** MoC left
[21:39] *** linkable6 left
[21:42] *** linkable6 joined
[22:04] *** Doc_Holliwould left
[22:37] *** abraxxa-home left
[22:39] *** abraxxa joined
[22:53] *** thundergnat joined
[22:54] <thundergnat> bisectable6: say "{+$_} found:\n{.batch(10)¬ª.fmt('%3d').join: "\n"}" given (1..^100).hyper.grep: { .is-prime and $_ + .comb.sum.is-prime };

[22:54] <bisectable6> thundergnat, Will bisect the whole range automagically because no endpoints were provided, hang tight

[22:57] <thundergnat> did I kill bisectable? :-(

[22:58] *** bisectable6 left
[22:58] <thundergnat> Sigh. Yep, I killed bisectable. :-(

[22:59] *** bisectable6 joined
[22:59] <thundergnat> New issue R#4413

[23:00] <thundergnat> um, https://github.com/rakudo/rakudo/issues/4413

[23:00] *** linkable6 left
[23:01] <thundergnat> ah crap. I'm killin' the bots left and right.

[23:01] <thundergnat> I'll stop now.

[23:01] *** thundergnat left
[23:03] *** linkable6 joined
[23:17] *** holly_ left
[23:22] *** domattps left
[23:23] <moon-child> m: say 42.base("beer")

[23:23] <camelia> rakudo-moar d881ac054: OUTPUT: ¬´üçªüç∫üçªüç∫üçªüç∫‚ê§¬ª

[23:26] <gfldex> camelia: source

[23:27] <codesect`> core.c/Int.pm6 line 115

[23:28] <ugexe> https://github.com/ugexe/Raku-sanity :P

[23:29] <codesect`> m: #`(I'm partial to) note "Life, the Universe and Everything".WHY

[23:29] <camelia> rakudo-moar d881ac054: OUTPUT: ¬´Don't know setting RESTRICTED‚ê§   at gen/moar/ModuleLoader.nqp:249  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/Perl6/ModuleLoader.moarvm:previous_setting_name)‚ê§ from gen/moar/ModuleLoader.nqp:254  (/home/camelia/rakudo-m-inst-2/share/perl6/lib/‚Ä¶¬ª

[23:29] <codesect`> m: note "Life, the Universe and Everything".WHY

[23:29] <camelia> rakudo-moar d881ac054: OUTPUT: ¬´42‚ê§¬ª

[23:30] <moon-child> m: my int $x = 5; $x := $x - 2

[23:30] <camelia> rakudo-moar d881ac054: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Cannot bind to natively typed variable '$x'; use assignment instead‚ê§at <tmp>:1‚ê§------> 3my int $x = 5; $x := $x - 27‚èè5<EOL>‚ê§¬ª

[23:30] <moon-child> m: my int $x = 5; $x = $x - 2

[23:30] <camelia> rakudo-moar d881ac054: ( no output )

[23:30] <moon-child> eh?

[23:30] <moon-child> oh, the repl is just being dumb again.  Nevermind

[23:34] *** codesect` left
[23:35] *** codesections joined
