[00:03] *** reportable6 left
[00:05] *** reportable6 joined
[00:08] *** Kaiepi joined
[00:10] *** Kaiepi left
[00:10] *** Kaiepi joined
[00:17] *** Kaiepi left
[00:17] *** Kaiepi joined
[00:26] *** Kaiepi left
[00:26] *** Kaiepi joined
[00:44] *** Kaiepi left
[00:44] *** Kaipi joined
[00:47] *** Kaipi left
[00:48] *** Kaipi joined
[00:51] *** frost joined
[01:01] *** Kaipi left
[01:01] *** Merfont joined
[01:08] *** Merfont left
[01:08] *** Merfont joined
[01:16] *** andinus left
[01:42] *** Merfont left
[01:43] *** Kaiepi joined
[01:59] *** Kaiepi left
[01:59] *** Kaiepi joined
[02:15] *** mahafyi left
[02:20] *** evalable6 joined
[02:33] *** Kaiepi left
[02:33] *** Kaipi joined
[02:36] *** Kaipi left
[02:37] *** Kaiepi joined
[03:09] *** Kaipi joined
[03:09] *** Kaiepi left
[03:16] *** Kaipi left
[03:29] <eof> is the a design document on the overall language grammar?
[03:29] <eof> s/the /there /
[03:30] <discord-raku-bot> <Petr#9247> i cant find , when needed ...
[03:30] <eof> there are several items that are explained as if they are a uniform self-contained construct but are clearly composed of many discrete lexemes such as the arbitrary base literals, which are presented as `:N<N>` while `:N('N')` will also work. This makes it rather difficult to write language support for editors...
[03:31] <eof> of course, there are things like Perl6/Grammar.nqp
[03:43] <guifa> I believe you're looking for STD.pm6
[03:43] <guifa> https://github.com/perl6/std/blob/master/STD.pm6
[03:43] <guifa> (I'm sure a Raku-renamed version is somewhere, but this grammar has been held to pretty well)
[03:51] <eof> i think i can work off this
[03:51] <eof> i think i may have run across it at some point
[03:52] <eof> regardless, I need to refresh my understanding of some Raku grammar behaviors...
[03:54] *** clarjon1 left
[04:14] *** mahafyi joined
[04:30] *** gfldex left
[04:30] *** tobs left
[04:30] *** thowe_ left
[04:30] *** peder left
[04:30] *** Voldenet left
[04:30] *** kybr left
[04:30] *** JRaspass left
[04:30] *** El_Che left
[04:30] *** Ulti_ left
[04:30] *** pejayes left
[04:30] *** tobs joined
[04:30] *** El_Che joined
[04:30] *** gfldex joined
[04:30] *** JRaspass joined
[04:30] *** peder joined
[04:30] *** kybr joined
[04:30] *** thowe joined
[04:31] *** Ulti joined
[04:31] *** pejayes joined
[04:31] *** Voldenet joined
[05:27] *** Kaiepi joined
[05:36] *** anser joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[06:08] *** abraxxa-home joined
[06:08] *** abraxxa joined
[06:13] *** abraxxa left
[06:13] *** abraxxa joined
[06:17] *** anser left
[06:19] *** anser joined
[06:27] *** anser left
[06:30] *** anser joined
[06:41] *** anser left
[06:49] *** pony left
[06:59] *** pony joined
[07:00] *** Sgeo left
[07:07] *** Kaiepi left
[07:07] *** Kaiepi joined
[07:35] *** Manifest0 joined
[07:53] *** dakkar joined
[08:02] *** cognominal_ joined
[08:03] *** cognominal_ joined
[08:03] *** patterner_ left
[08:03] *** ecocode__ left
[08:03] *** patterner_ joined
[08:04] *** ecocode__ joined
[08:05] *** cog__ left
[08:23] <Xliff> Hello! Precompilation has stopped working for me.
[08:23] <Xliff> Meaning  I am compiling compunits way too often.
[08:23] <Xliff> I am unsing latest commit: v2021.09-277-gbc2cac136
[09:01] <lizmat> Xliff: on master, spectest went back to Files=1349, Tests=117859, 346 wallclock secs 
[09:02] <lizmat> which is way better than Files=1349, Tests=117859, 616 wallclock a few commits back
[09:05] *** linkable6 left
[09:05] *** evalable6 left
[09:05] *** linkable6 joined
[09:07] *** evalable6 joined
[09:12] *** RakuIRCLogger left
[09:12] *** RakuIRCLogger joined
[09:44] *** sena_kun left
[09:51] *** mahafyi left
[09:53] *** Kaipi joined
[09:53] *** Kaiepi left
[10:04] *** Kaipi left
[10:08] *** Kaiepi joined
[10:28] <lizmat> moritz_ : could you also let Camelia run on #raku-beginner ?
[10:38] *** sena_kun joined
[11:05] *** camelia left
[11:05] <moritz_> Oct 18 13:05:31 camelia bash[16842]: Server error occurred! Closing Link: camelia.detonation.org (This server is not accepting connections. Please reconnect to irc.libera.chat)
[11:05] <moritz_> seems it doesn't work as well as I had hoped :-(
[11:05] <lizmat> meh  :-(
[11:32] <moritz_> there was an IPv6 address hard coded in the cameila config. Now trying with the FQDN instead.
[11:34] *** camelia joined
[11:34] <moritz_> m: say 42
[11:34] <moritz_> first one is always slooow, maybe related to IRC rate limiting or so
[11:34] <camelia> rakudo-moar 1d8bf66a5: OUTPUT: «42␤»
[11:35] *** squashable6 left
[11:41] *** djerius left
[11:42] *** djerius joined
[11:44] <El_Che> m: 42.say
[11:44] <camelia> rakudo-moar 1d8bf66a5: OUTPUT: «42␤»
[11:45] <El_Che> everything is an object! :)
[11:48] <moritz_> so they all say, and then I ask them to show me the function invocation object :D
[11:48] <El_Che> defined? :)
[11:48] *** mahafyi joined
[11:54] <ugexe> Xliff: previously CURFS would load a module using a comp-unit-id that could be incorrect because it didn't account for changes in the repository chain. if you are now suddenly precompiling way too often i would guess you are changing the repo chain (adding -I's or `use lib ...`s)
[11:56] <Xliff> ugexe: Yes, I am using -I when I need to make changes to upstream modules.
[11:56] <Xliff> Which is unfortunately a very common case when developing this app server for $dayJob
[11:56] <Xliff> Howver now, symbols are not getting recognized as well.
[11:57] <ugexe> you could technically work around it by always passing the same -I's 
[11:57] <ugexe> i.e. always try to use the same repo chain
[11:57] <Xliff> 'use B::I::Symbol; Symbol.new' <= now generates an error.
[11:58] <Xliff> ugexe: The invocation is in a script which is what precompiles and executes. It is always the same -I list in the same order.]
[11:58] <ugexe> and the script doesnt use `use lib ...`?
[11:58] <Xliff> No
[11:58] <ugexe> yeah i dunno then
[11:59] <Xliff> Yeah. Figured that. New behavior over the last week.
[11:59] <ugexe> i kind of wonder if you were somehow relying on buggy behavior
[11:59] <Xliff> Last time I could run the app server was about this time last week. Not it won't run.
[12:00] <Xliff> Let's see... I guess I can drop it back to...ff6951f59
[12:00] <Xliff> ?
[12:01] <Xliff> But there was a crash bug for that so... later
[12:01] <ugexe> for instance previous `perl6 -I foo1/ -I foo2/ -e '{ use Foo:ver<1>; say Foo::my-version(); }; { use Foo:ver<2>; say Foo::my-version(); }'` would print 1 twice instead of 1 2
[12:01] <ugexe> because it was reusing the wrong precomp file
[12:02] <ugexe> so its certainly possible there is new legit precompilation going on for you
[12:02] <Xliff> Maybe I'll try 308d6856 and see if that works.
[12:02] <ugexe> of course with how elaborate some of the things you appear to work on are it probably shouldnt surprise me if there is some weird edge case
[12:02] *** reportable6 left
[12:03] <ugexe> you'd want 8d1f24f or earlier
[12:04] *** linkable6 left
[12:05] <ugexe> you'll probably have to look at the RAKUDO_MODULE_DEBUG=1 output and determine what you think shouldn't be happening
[12:05] <ugexe> i can give more insight then
[12:10] <Xliff> ugexe: That's tricky ... cos https://github.com/rakudo/rakudo/issues/4570
[12:10] <Xliff> Does 8d1f24f contain the fix?
[12:12] <Xliff> I'd probably have to build from MoarVM in stages.
[12:12] <ugexe> no, i made 3 revisions of my fix. that commit is prior to the first one
[12:12] <ugexe> i dont see how it would help but i'd suggest s{/lib}{} where possible
[12:13] <ugexe> i.e. -I. instead of -Ilib
[12:13] <ugexe> point at the META6
[12:13] <Xliff> There is no META6 for this project, as yet.
[12:13] <Xliff> If I need to create one, I will
[12:13] <[Coke]> Xliff: looks like 4570 was fixed?
[12:13] <Xliff> [Coke]: Yes. In MoarVM
[12:14] <Xliff> Howeever HEAD rakudo is now breaking things further for the same project.
[12:22] <ugexe> Xliff, just revert the three commits by me from the last few days
[12:23] <Xliff> ugexe: That's what I will try next after this last bit of debugging.
[12:24] <ugexe> im trying it locally but i only got a few minutes before i need to get to other work
[12:30] <ugexe> hmm, lots of dependencies im having to install one-by-one. maybe a meta6.json would be useful in that regard
[12:30] <Xliff> ugexe: Thanks.
[12:30] <Xliff> ugexe: There is an install-prereqs file
[12:30] <Xliff> It's incomplete, you will need to add Method::Also and CompUnit::Util to the list 
[12:31] <ugexe> ah my moar-blead doesn't have the segfault fix
[12:33] <ugexe> im out of time for now but if you could post the RAKUDO_MODULE_DEBUG=1 for when it works correctly vs incorrectly, as well as pointing out at what point you think its wrong, it would speed up my investigation
[12:34] <Xliff> ugexe: if I have the time to do so, I will.
[12:34] <Xliff> Thanks for all of the support.
[12:37] *** squashable6 joined
[12:49] *** linkable6 joined
[13:23] *** frost left
[13:46] <guifa> o.O
[13:54] <guifa> So after much wailing and gnashing of teeth, and flipping around different environments, etc. I think I finally tracked down the source of error (as well as fixed a ton of little calculation bugs that), and put simply, the bug may have nothing to do with new-disp, and somehow is caused by a difference in files generated by TZ's helper utility.  Identical source files produced non-identical binary data files, the latter of which appear to b
[13:54] <guifa> truncated
[13:54] <lizmat> yuck
[13:55] <lizmat> problem with nulls in strings truncating ?
[13:56] *** Sgeo joined
[14:01] <guifa> I don't think so.  The ZIC tool (converts a human readable format to binary) is pure C and when I run my updater script, it just downloads, compiles, and runs it, and I can't find any commits in their code that could result in different processing. 
[14:03] <guifa> Hopefully I can find some time to build a bunch of different versions of ZIC and figure out where things went wrong — I can't imagine them having introduced such a radical bug and not have the mailing list blow up, so it's got to be something on me
[14:05] *** reportable6 joined
[14:07] * guifa is mainly annoyed because he'd rather be having fun taking advantage of new-disp's fix on wraps lol
[14:30] <sena_kun> guifa++ # investigation
[14:32] <lizmat> and another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/10/18/2021-42-learning-with/
[14:39] *** mjgardner_ is now known as mjgardner
[14:52] <xinming_> SmokeMachine: in lib/Red/ResultAssociative.pm6 the method keys should  returns(Any) instead of returns(Int), Because when people do DISTINCT, people do it on strings too.
[14:52] <xinming_> DISTINCT on text too
[14:57] <Geth> ¦ doc: 2d3d50c23b | (Peter du Marchie van Voorthuysen)++ (committed by Juan Julián Merelo Guervós) | 2 files
[14:57] <Geth> ¦ doc: Document pop, shift, push and append more concisely
[14:57] <Geth> ¦ doc: 
[14:57] <Geth> ¦ doc: In the "Defined as" sections, use meaningful parameter names and
[14:57] <Geth> ¦ doc: omit multis that are implemented only for performance reasons.
[14:57] <Geth> ¦ doc: This should more clearly convey the intent of these routines.
[14:57] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/2d3d50c23b
[14:57] <Geth> ¦ doc: 6686dfef35 | (Peter du Marchie van Voorthuysen)++ (committed by Juan Julián Merelo Guervós) | 2 files
[14:57] <Geth> ¦ doc: Restore documentation of multis
[14:57] <Geth> ¦ doc: 
[14:57] <Geth> ¦ doc: All multi signatures found in the Rakudo implementation should be
[14:57] <Geth> ¦ doc: documented. Parameter names can be changed to fit the documentation.
[14:57] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/6686dfef35
[14:57] <Geth> ¦ doc: b2fa218803 | (Peter du Marchie van Voorthuysen)++ (committed by Juan Julián Merelo Guervós) | doc/Type/independent-routines.pod6
[14:57] <Geth> ¦ doc: Restore a one-line example.
[14:57] <linkable6> Link: https://docs.raku.org/type/independent-routines
[14:57] <Geth> ¦ doc: 
[14:57] <Geth> ¦ doc: Not everybody agreed this example was redundant.
[14:57] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/b2fa218803
[14:58] <xinming_> Or maybe, We make it return Str, Which is more proper
[15:19] <[Coke]> ^^ I disagree with the statement that "all multi signatures found... should be documented" - It's existence in Rakudo doesn't mean it's part of the spec.
[15:20] <[Coke]> I agree it's a decent first pass, however.
[15:21] <moritz_> if you have two signatures :($) and :($, $), you can also document it as :($, $?)
[15:21] <moritz_> doesn't matter for the user that it's implemented as two multis
[15:25] *** Xliff left
[15:34] <[Coke]> Agreed. most tests in roast are checking to see if you get a certain behavior when you invoke a method, not that you get X methods with those signatures.
[15:37] <[Coke]> pandemic problems. new coworker (who is an ex coworker of mine as well!) wants to do a few hours in the local office... Guess who hasn't had to use his badge in 18 months and has no idea where it is today..
[15:46] <SmokeMachine> xinming_: yes, that makes sense, thanks! Would you mind to create a issue with that, please?
[16:00] *** thundergnat joined
[16:02] <thundergnat> lizmat: Thank you so much for all of you work publishing the RWN, it is very much appreciated. I don't have nearly as much time to commit to Raku as I'd like and the weekly helps me stay informed. Thanks!!
[16:02] <tellable6> 2021-08-17T14:20:13Z #raku <lizmat> thundergnat: there is no .first on hypers yet
[16:18] *** abraxxa left
[16:47] *** xinming_ left
[16:49] *** xinming_ joined
[16:51] *** dakkar left
[17:16] <lizmat> thundergnat: you're welcome
[17:18] *** sena_kun left
[17:48] *** gordonfish- is now known as gordonfish
[18:02] *** melezhik joined
[18:02] <melezhik> .
[18:03] *** reportable6 left
[18:24] <Kaiepi> how will rakuast interact with existing slangs?
[18:25] <lizmat> probably badly: they will probably need to be fixed when running 6.e
[18:25] <lizmat> and possibly for lower language versions as well
[18:28] <Kaiepi> i'm wondering because i have a Qw-like Quote slang i've been sitting on for a while that can be written without QAST, but idk if it's releasable or not before rakuast despite that
[18:33] <lizmat> Kaiepi: that's a good question, I have no answer
[19:02] *** xinming_ left
[19:02] *** xinming_ joined
[19:34] *** Sgeo left
[19:37] *** Sgeo joined
[19:42] *** abraxxa-home left
[19:43] *** abraxxa-home joined
[19:43] *** abraxxa-home left
[19:46] *** sena_kun joined
[19:51] *** melezhik left
[20:03] *** reportable6 joined
[20:17] * lizmat smiles just generally
[20:19] <gfldex> lizmat: reading the weekly made me google "megamorph", what made me smile
[20:20] <lizmat> :-) indeed
[20:20] * [Coke] STR that's a static ability in MTG
[20:21] * lizmat goes afk for the day and most of tomorrow
[20:23] * [Coke] hurls https://mtg.fandom.com/wiki/Morph#Megamorph which has nothing to do with moarvm megamorph :)
[20:32] <gfldex> That's what I found. That card sounds like it can be really powerful or bit your real hard. Very fitting.
[21:03] *** linkable6 left
[21:03] *** evalable6 left
[21:17] *** sena_kun left
[21:22] *** sena_kun joined
[21:37] *** squashable6 left
[21:40] *** squashable6 joined
[22:06] *** sena_kun left
[22:18] *** sena_kun joined
[22:33] <guifa> Kaiepi: basically I've put off all work on that type of stuff pending RakuAST
[22:34] <guifa> It just doesn't seem a good use of time to make it work one way, and then have to redo everything again, and deal with folks potentially using old versions, etc
[23:05] *** evalable6 joined
[23:06] *** linkable6 joined
[23:14] *** colemanx joined
[23:37] <guifa> I think I found what the issue is.  Might need to do some recoding on my end up but they thankfully included a switch for older readers.  Yay.  
