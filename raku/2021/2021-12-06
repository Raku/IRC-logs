[00:02] *** reportable6 left
[00:15] <tbrowder> .tell tony-o fez problem solved with "zef upgrade fez"

[00:15] <tellable6> tbrowder, I'll pass your message to tonyo

[00:22] <tonyo> Thanks tbrowder, another update coming soon. I'm testing fez orgs out right now

[00:22] <tellable6> 2021-12-04T17:25:58Z #raku <tbrowder> tonyo my fez user name was entered as tbrowder. new App::Mi6 expects it to be "zef:tbrowder". can i change it in the .fez-config.json file or do i have to start over with a new fez account, or should mi6 deal with it?

[00:22] <tellable6> 2021-12-04T23:37:42Z #raku <tbrowder> tonyo i need help with my fez issue #49. mi6 barfs on the "fez upload --file=Foo.tar.gz" part, and i don't understand yr readme on the tar issue.

[00:24] <tonyo> .tell tbrowder I know you're all set but just for posterity, fez expects your meta auth to be `zef:tbrowder`. What's the error and what info were you looking for so I can make the readme better?

[00:24] <tellable6> tonyo, I'll pass your message to tbrowder

[00:25] *** [Coke] left
[00:28] *** Colt left
[00:28] *** Colt joined
[00:28] *** abraxxa-home left
[00:53] *** monkey_ joined
[01:05] *** reportable6 joined
[01:43] *** ggoebel left
[01:49] *** monkey_ left
[02:11] <tbrowder> tony-o: it's working fine. i just had an old version. a Changes file would have helped see the fix.

[02:11] <tellable6> 2021-12-06T00:24:42Z #raku <tonyo> tbrowder I know you're all set but just for posterity, fez expects your meta auth to be `zef:tbrowder`. What's the error and what info were you looking for so I can make the readme better?

[02:49] *** evalable6 left
[02:49] *** linkable6 left
[02:50] *** evalable6 joined
[03:21] *** euandreh left
[03:22] *** euandreh joined
[04:22] *** shareable6 left
[04:22] *** nativecallable6 left
[04:22] *** sourceable6 left
[04:22] *** quotable6 left
[04:22] *** greppable6 left
[04:22] *** benchable6 left
[04:22] *** evalable6 left
[04:22] *** bloatable6 left
[04:22] *** notable6 left
[04:22] *** bisectable6 left
[04:22] *** unicodable6 left
[04:22] *** squashable6 left
[04:22] *** reportable6 left
[04:22] *** committable6 left
[04:22] *** statisfiable6 left
[04:22] *** releasable6 left
[04:22] *** tellable6 left
[04:22] *** coverable6 left
[04:22] *** bloatable6 joined
[04:22] *** nativecallable6 joined
[04:22] *** coverable6 joined
[04:22] *** bisectable6 joined
[04:22] *** releasable6 joined
[04:23] *** unicodable6 joined
[04:24] *** sourceable6 joined
[04:24] *** shareable6 joined
[04:25] *** committable6 joined
[04:40] *** Flwyd joined
[05:08] *** oodani left
[05:09] *** oodani joined
[05:10] *** frost joined
[05:22] *** benchable6 joined
[05:23] *** evalable6 joined
[05:24] *** reportable6 joined
[05:24] *** squashable6 joined
[05:26] *** Manifest0 left
[05:26] *** jjatria left
[05:26] *** sjn left
[05:26] *** tobs left
[05:26] *** gugod left
[05:26] *** ilogger2 left
[05:26] *** squashable6 left
[05:26] *** Flwyd left
[05:26] *** euandreh left
[05:26] *** Colt left
[05:26] *** seednode left
[05:26] *** qorg11 left
[05:26] *** MasterDuke left
[05:26] *** renormalist left
[05:26] *** Summer left
[05:26] *** gcd left
[05:26] *** kybr left
[05:26] *** sftp left
[05:26] *** dogbert17 left
[05:26] *** silug left
[05:26] *** dmc00 left
[05:26] *** ptc left
[05:26] *** lucs left
[05:26] *** tonyo left
[05:26] *** pejayes left
[05:26] *** thowe left
[05:26] *** sivoais left
[05:26] *** vrurg left
[05:26] *** unicodable6 left
[05:26] *** bisectable6 left
[05:26] *** bloatable6 left
[05:26] *** mtj left
[05:26] *** summerisle left
[05:26] *** jast left
[05:26] *** Ulti left
[05:26] *** avuserow left
[05:26] *** goblin left
[05:26] *** mjgardner left
[05:26] *** skaji left
[05:26] *** tbrowder left
[05:26] *** rjbs left
[05:26] *** SmokeMachine left
[05:26] *** peder left
[05:26] *** hexology left
[05:26] *** corwin left
[05:26] *** jercos left
[05:26] *** BinGOs left
[05:26] *** jcallen left
[05:26] *** ugexe left
[05:26] *** GreaseMonkey left
[05:26] *** happy-dude left
[05:26] *** _________ left
[05:26] *** Altreus left
[05:26] *** leedo left
[05:26] *** dpk left
[05:26] *** synthmeat left
[05:26] *** timo left
[05:26] *** pjlsergeant left
[05:26] *** mykhal left
[05:26] *** ingy left
[05:26] *** andrea[m] left
[05:26] *** demostanis[m] left
[05:26] *** casaca left
[05:26] *** sena_kun left
[05:26] *** sienet_ja_LSD[m] left
[05:26] *** phogg left
[05:26] *** Tirifto left
[05:26] *** Util_ left
[05:26] *** nine left
[05:26] *** AlexDaniel left
[05:26] *** Maylay left
[05:26] *** bdju left
[05:26] *** moritz_ left
[05:26] *** broquain1 left
[05:26] *** xkr47 left
[05:26] *** codesections left
[05:26] *** mathias[m]12 left
[05:26] *** DarthGandalf left
[05:26] *** chronon left
[05:26] *** Arathorn left
[05:26] *** CIAvash left
[05:26] *** merryprog left
[05:26] *** Voldenet left
[05:26] *** JRaspass left
[05:26] *** pierrot left
[05:26] *** Juerd left
[05:26] *** polettix left
[05:26] *** El_Che left
[05:26] *** charsbar left
[05:26] *** jdv left
[05:26] *** masak_ left
[05:26] *** jrjsmrtn left
[05:26] *** Od1n left
[05:26] *** kawaii_ left
[05:26] *** rypervenche left
[05:26] *** samcv left
[05:26] *** samebchase left
[05:26] *** elcaro left
[05:26] *** dg left
[05:26] *** Grrrr left
[05:26] *** wanko left
[05:26] *** tejr left
[05:28] *** squashable6 joined
[05:28] *** Flwyd joined
[05:28] *** unicodable6 joined
[05:28] *** bisectable6 joined
[05:28] *** bloatable6 joined
[05:28] *** euandreh joined
[05:28] *** Colt joined
[05:28] *** mathias[m]12 joined
[05:28] *** silug joined
[05:28] *** seednode joined
[05:28] *** dmc00 joined
[05:28] *** tejr joined
[05:28] *** ptc joined
[05:28] *** Manifest0 joined
[05:28] *** sienet_ja_LSD[m] joined
[05:28] *** qorg11 joined
[05:28] *** MasterDuke joined
[05:28] *** renormalist joined
[05:28] *** DarthGandalf joined
[05:28] *** mtj joined
[05:28] *** Summer joined
[05:28] *** lucs joined
[05:28] *** dogbert17 joined
[05:28] *** hexology joined
[05:28] *** gcd joined
[05:28] *** kybr joined
[05:28] *** tonyo joined
[05:28] *** sftp joined
[05:28] *** pejayes joined
[05:28] *** chronon joined
[05:28] *** thowe joined
[05:28] *** Altreus joined
[05:28] *** leedo joined
[05:28] *** jjatria joined
[05:28] *** summerisle joined
[05:28] *** tobs joined
[05:28] *** sivoais joined
[05:28] *** dpk joined
[05:28] *** sjn joined
[05:28] *** vrurg joined
[05:28] *** Arathorn joined
[05:28] *** synthmeat joined
[05:28] *** jrjsmrtn joined
[05:28] *** timo joined
[05:28] *** pjlsergeant joined
[05:28] *** mykhal joined
[05:28] *** jast joined
[05:28] *** JRaspass joined
[05:28] *** phogg joined
[05:28] *** Tirifto joined
[05:28] *** Util_ joined
[05:28] *** BinGOs joined
[05:28] *** El_Che joined
[05:28] *** Ulti joined
[05:28] *** avuserow joined
[05:28] *** nine joined
[05:28] *** Od1n joined
[05:28] *** kawaii_ joined
[05:28] *** goblin joined
[05:28] *** rypervenche joined
[05:28] *** mjgardner joined
[05:28] *** skaji joined
[05:28] *** tbrowder joined
[05:28] *** rjbs joined
[05:28] *** SmokeMachine joined
[05:28] *** peder joined
[05:28] *** ingy joined
[05:28] *** pierrot joined
[05:28] *** corwin joined
[05:28] *** jcallen joined
[05:28] *** ugexe joined
[05:28] *** GreaseMonkey joined
[05:28] *** jercos joined
[05:28] *** samcv joined
[05:28] *** happy-dude joined
[05:28] *** AlexDaniel joined
[05:28] *** Maylay joined
[05:28] *** bdju joined
[05:28] *** andrea[m] joined
[05:28] *** demostanis[m] joined
[05:28] *** CIAvash joined
[05:28] *** _________ joined
[05:28] *** gugod joined
[05:28] *** ilogger2 joined
[05:28] *** samebchase joined
[05:28] *** casaca joined
[05:28] *** moritz_ joined
[05:28] *** broquain1 joined
[05:28] *** xkr47 joined
[05:28] *** sena_kun joined
[05:28] *** codesections joined
[05:28] *** merryprog joined
[05:28] *** Voldenet joined
[05:28] *** Juerd joined
[05:28] *** polettix joined
[05:28] *** charsbar joined
[05:28] *** jdv joined
[05:28] *** masak_ joined
[05:28] *** elcaro joined
[05:28] *** dg joined
[05:28] *** Grrrr joined
[05:28] *** wanko joined
[05:28] *** jmcgnh left
[05:28] *** dmc00 left
[05:29] *** jmcgnh joined
[05:30] *** Colt left
[05:30] *** gordonfish left
[05:30] *** Colt joined
[05:31] *** gordonfish joined
[05:37] *** El_Che left
[05:37] *** charsbar left
[05:37] *** jdv left
[05:37] *** masak_ left
[05:37] *** masak joined
[05:37] *** jdv joined
[05:37] *** El_Che joined
[05:37] *** charsbar joined
[05:38] *** gordonfish- joined
[05:40] *** gordonfish left
[05:50] *** jrjsmrtn left
[05:50] *** Od1n left
[05:50] *** kawaii_ left
[05:50] *** rypervenche left
[05:50] *** samcv left
[05:50] *** samebchase left
[05:50] *** elcaro left
[05:50] *** dg left
[05:50] *** Grrrr left
[05:50] *** wanko left
[05:50] *** wanko joined
[05:50] *** elcaro joined
[05:50] *** dg joined
[05:50] *** Grrrr joined
[05:50] *** rypervenche joined
[05:50] *** Od1n joined
[05:50] *** kawaii_ joined
[05:51] *** rypervenche left
[05:51] *** rypervenche joined
[05:51] *** jrjsmrtn joined
[05:51] *** samcv joined
[05:51] *** solitario joined
[06:02] *** reportable6 left
[06:05] *** slowtyper joined
[06:23] *** nebuchadnezzar joined
[06:23] *** quotable6 joined
[06:23] *** tellable6 joined
[06:50] *** linkable6 joined
[07:27] *** seednode left
[07:28] *** seednode joined
[07:38] *** dmc00 joined
[07:51] *** jjido joined
[07:53] *** abraxxa-home joined
[07:55] *** abraxxa joined
[07:59] *** abraxxa left
[08:00] *** abraxxa joined
[08:04] *** riffraff joined
[08:07] <riffraff> Hey everyone, I'm trying to build a Hash with defaults starting from a list. I can use BagHash to do a tally/count of the various things, but I can't see how to also set a default value, any clues?

[08:08] <riffraff> I.e. I do

[08:08] <riffraff> my @list = [1,2,2,3,3,3,4]

[08:08] <riffraff> my %h = bag @list

[08:08] <riffraff> %h{2} # 2

[08:08] <riffraff> %h{99} #raku I want a zero here, but I get (Any)

[08:12] *** merpaderp left
[08:12] *** merpaderp joined
[08:15] <riffraff> ah it seems

[08:15] <riffraff> my Int %h{Int} = bag a

[08:15] <riffraff> works :)

[08:19] <riffraff> ah no, still unininitialized:(

[08:19] <moritz_> m: my %h is default(0); say %h{42}

[08:19] <camelia> rakudo-moar d7152ea59: OUTPUT: «0␤»

[08:20] <moon-child> m: my Int:D() %h; say %h{99} #whyn't?

[08:20] <camelia> rakudo-moar d7152ea59: OUTPUT: «(Int)␤»

[08:24] *** notable6 joined
[08:32] <moritz_> I guess coercions to smily'ed types aren't implemented

[08:38] <riffraff> thanks moritz_ ! Now I think  I may have found a bug: clone'ing does not carry over the default. But I am not sure if its supposed to :)

[08:38] <riffraff> m: my %h is default(0); my %h2 = %h.clone; say %h2{99}

[08:38] <camelia> rakudo-moar d7152ea59: OUTPUT: «(Any)␤»

[08:39] <SmokeMachine> m: my @list = 1,2,2,3,3,3,4; my %h := bag @list; say %h{2}; say %h{99}

[08:39] <camelia> rakudo-moar d7152ea59: OUTPUT: «2␤0␤»

[08:40] <moritz_> m: my %h is default(0); my %h2 := %h.clone; say %h2{99}

[08:40] <camelia> rakudo-moar d7152ea59: OUTPUT: «0␤»

[08:40] <moritz_> riffraff: ^^ it's not the cloning that loses the default, it's the assigment. Using binding instead to avoid the assignment

[08:41] <SmokeMachine> riffraff: when you do %h = bag @list, you are giving a bag to a hash, to make  %h a bag, use := or my %h is Bag

[08:41] <riffraff> ah-ha, that makes sense, thanks again

[08:42] *** Sgeo left
[08:42] <SmokeMachine> m: my @list = 1,2,2,3,3,3,4; my %h is Bag = |@list; say %h{2}; say %h{99}

[08:42] <camelia> rakudo-moar d7152ea59: OUTPUT: «2␤0␤»

[08:59] <riffraff> ah that is also nice, so my problem was self-inflicted because I was casting the Bag into a Hash to begin with, right?

[08:59] <riffraff> ops, I realize now I should have been in #raku-beginner sorry for the noise :(

[09:04] *** reportable6 joined
[09:13] *** dakkar joined
[09:19] * nine didn't know that there was a raku-beginner channel

[09:45] *** Skarsnik_ joined
[09:50] *** Zero_Dogg left
[10:22] *** statisfiable6 joined
[10:34] *** Zero_Dogg joined
[10:35] *** ggoebel joined
[10:58] *** atroxaper joined
[10:58] <atroxaper> Hello, #raku

[10:58] <tellable6> 2021-12-05T20:52:37Z #raku <MasterDuke> atroxaper https://gist.github.com/MasterDuke17/b9ff1efd4057e1bd62da77a70ef2eca7 is a lightly edited version, it really didn't need a whole lot

[10:59] <atroxaper> .tell MasterDuke Many-many thanks to you! You've helped me a lot. I've already add the article to the advent list.

[10:59] <tellable6> atroxaper, I'll pass your message to MasterDuke

[11:01] *** riffraff left
[11:02] *** riffraff joined
[11:07] <discord-raku-bot> <Nemokosch#9980> hello hello

[11:07] <discord-raku-bot> <Nemokosch#9980> is there a detailed description of list comprehensions somewhere?

[11:11] *** riffraff left
[11:11] *** riffraff joined
[11:15] *** riffraff left
[11:16] *** Altai-man joined
[11:23] *** jjido left
[11:24] *** atroxaper left
[11:40] *** riffraff joined
[11:42] *** tejr left
[11:43] *** tejr joined
[12:02] *** reportable6 left
[12:05] *** Skarsnik_ left
[12:44] <tbrowder> tonyo: you here?

[12:48] <frost> m: "/dev/urandom".IO.open.read(5).read-ubits(0, 5*8)

[12:48] <camelia> rakudo-moar d7152ea59: ( no output )

[12:49] <frost> m: say "/dev/urandom".IO.open.read(5).read-ubits(0, 5*8)

[12:49] <camelia> rakudo-moar d7152ea59: OUTPUT: «307861414805␤»

[12:49] <frost> m: say "/dev/urandom".IO.open.read(5).read-ubits(0, 5*8), ' ', now - INIT now

[12:49] <camelia> rakudo-moar d7152ea59: OUTPUT: «442574743393 0.007803579␤»

[12:55] <tbrowder> info for Raku module authors: i just published two of mine on the recommended Zef repo using mi6. it works great if you prep your module repo to change it from cpan to zef properly (and it's easy to do).

[12:56] <tbrowder> lizmat and others have started the move already. mi6 (v2.0.1+) is fully able to greatly assist in the effort--check it out!

[13:04] *** atroxaper joined
[13:05] *** reportable6 joined
[13:10] *** jjido joined
[13:15] *** Zero_Dogg left
[13:54] *** frost left
[13:59] *** Zero_Dogg joined
[14:00] *** atroxaper left
[14:11] <ggoebel> still trying to grok Str ranges and how raku does incrementing using character classes...

[14:11] <ggoebel> m: ("aa".."bb")>>.say

[14:11] <camelia> rakudo-moar d7152ea59: OUTPUT: «aa␤ab␤ba␤bb␤»

[14:11] <ggoebel> m: ("ab".."ba")>>.say

[14:11] <camelia> rakudo-moar d7152ea59: OUTPUT: «ab␤aa␤bb␤ba␤»

[14:12] <ggoebel> why isn't the later «ab␤ba␤»?

[14:14] <ggoebel> m: "ab".succ.say

[14:14] <camelia> rakudo-moar d7152ea59: OUTPUT: «ac␤»

[14:14] <lizmat> TimToady knows

[14:14] *** dextercd joined
[14:22] <ggoebel> m: ("bb".."aa")>>.say

[14:22] <camelia> rakudo-moar d7152ea59: ( no output )

[14:22] <ggoebel> m: ("bb"..."aa")>>.say

[14:22] <camelia> rakudo-moar d7152ea59: OUTPUT: «bb␤ba␤ab␤aa␤»

[14:22] <ggoebel> m: ("ab".."ba")>>.say

[14:22] <camelia> rakudo-moar d7152ea59: OUTPUT: «ab␤aa␤bb␤ba␤»

[14:22] <ggoebel> m: ("ab"..."ba")>>.say

[14:22] <camelia> rakudo-moar d7152ea59: OUTPUT: «ab␤aa␤bb␤ba␤»

[14:22] *** greppable6 joined
[14:25] *** atroxaper joined
[14:27] <atroxaper> ggoebel: hyper operations can be done in concurrent way.

[14:28] <ggoebel> m: ("aa".."bb").flat.say

[14:28] <camelia> rakudo-moar d7152ea59: OUTPUT: «(aa ab ba bb)␤»

[14:28] <ggoebel> m: ("ab".."ba").flat.say

[14:28] <camelia> rakudo-moar d7152ea59: OUTPUT: «(ab aa bb ba)␤»

[14:30] *** Sgeo joined
[14:30] <ggoebel> atroxaper: regarding hyper ops... "methods can be called in an out of order, concurrent fashion. The resulting list will be in order."

[14:31] <El_Che> I wonder if the intellij plans around Fleet will impact Comma IDE

[14:31] <atroxaper> ggoebel: .say do not have a result in you case. Only the side effect. My point was for sure.

[14:32] <atroxaper> El_Che: Which for example?

[14:33] <El_Che> as I understand it, Fleet is not based on the Intellij framework but it's reqrite

[14:35] *** Zero_Dogg left
[14:39] <El_Che> w

[14:41] <atroxaper> El_Che: Fleet do not require IntelliJ. Fleet uses a common code base of IntelliJ.

[14:44] *** A26F64 joined
[14:45] <Altai-man> El_Che, don't take it as an official opinion or anything, but I don't see any ways for it to cause any impact on Comma so far.

[14:45] <tellable6> 2021-12-03T18:18:02Z #raku <SmokeMachine> Altai-man yes, that makes sense, thanks

[14:50] <tbrowder> m: say "12".succ

[14:50] <camelia> rakudo-moar d7152ea59: OUTPUT: «13␤»

[15:00] *** riffraff left
[15:00] *** riffraff joined
[15:18] *** Zero_Dogg joined
[15:21] *** riffraff left
[15:21] *** riffraff joined
[15:25] *** riffraff left
[15:36] *** abraxxa left
[15:37] *** abraxxa joined
[15:44] *** monkey_ joined
[15:45] *** [Coke] joined
[15:46] <El_Che> atroxaper: I understood Fleet was written in Kotlyn and Rust

[15:48] <atroxaper> El_Che: yes.

[15:52] <japhb> El_Che: Do you have a link to the announcement or article or what have you?

[15:55] *** riffraff joined
[16:03] <El_Che> japhb: https://blog.jetbrains.com/blog/2021/11/29/welcome-to-fleet/ 

[16:03] <El_Che> japhb: there was a comment by a fleet dev with the kotlyn+rust info, but it looks it's gone

[16:06] <El_Che> this one: https://blog.jetbrains.com/blog/2021/11/29/welcome-to-fleet/#remark42__comment-ac6e4928-dd81-4d93-895a-ece157a8e7f4

[16:06] <El_Che> although it's more about the ui

[16:07] <El_Che> I wonder if it's kotlyn native or the jvm

[16:07] <El_Che> the speed of opening a file hints native

[16:09] <atroxaper> El_Che: native or jvm is only runtime thing. Fleet can be run on native or jvm either. No?

[16:10] <atroxaper> El_Che: and JB works a lot to speed up native, of course.

[16:12] <El_Che> atroxaper: their target is inmediate startup, no way they can do that with the jvm

[16:13] <El_Che> but you load the ide features by clicking a button (how lame is that???), so maybe they load the jvm then :)

[16:20] <atroxaper> El_Che: IDE features appears in separate process, i think. Because they can appears on another machine.

[16:22] <El_Che> I think so too

[16:33] *** A26F64 left
[16:38] <El_Che> anyway, what I wonder if it will replace intellij platform if it's a success

[16:39] <El_Che> (and let's be honest, intellij is a great ide (I have ultimate) but the java only menus when programming in other languages are terrible)

[16:39] <El_Che> if it would be easy to fix, they would have done so already

[16:39] *** riffraff left
[16:39] *** riffraff joined
[16:42] <[Coke]> Someone offered to buy github.com/coke from me.

[16:43] <ggoebel> m: my @a = (1,2); @a = @a.rotate; @a[0] += @a[1]; @a.raku.say

[16:43] <camelia> rakudo-moar d7152ea59: OUTPUT: «[3, 1]␤»

[16:43] <[Coke]> They wanted to take over the account, not somehow have me release/transfer the nick, too.

[16:43] <ggoebel> m: my @a = (1,2); @a[0] += (@a = @a.rotate)[1]; @a.raku.say

[16:43] <camelia> rakudo-moar d7152ea59: OUTPUT: «[2, 1]␤»

[16:44] <ggoebel> why don't those two give the same output?

[16:44] *** gordonfish- is now known as gordonfish

[16:46] <ggoebel> Coke: if it is Coca Cola... maybe they'll make an offer you can't refuse :-)

[16:47] <[Coke]> in the second case, the += is getting the original value before the rotate

[16:47] <[Coke]> ggoebel: some rando offerring 40USD.

[16:47] <[Coke]> I would totally have considered Coca Cola money. :)

[16:50] <ggoebel> thx. another difference from Perl which surprised me...

[16:52] <[Coke]> (to clarify, we're setting a0 in the rotated array to the 0-index of the original array plus the 1-index of the rotated array)

[16:52] <[Coke]> You can probaly verify that by looking at some AST output.

[16:52] <[Coke]> *probably

[16:52] <[Coke]> a0==0-index

[16:59] <ggoebel> m: my @a = (1,2); @a[0] += (@a[0,1] = @a.rotate)[1]; @a.raku.say

[16:59] <camelia> rakudo-moar d7152ea59: OUTPUT: «[3, 1]␤»

[17:00] <ggoebel> m: my @a = (1,2); @a[0] += (@a = @a.rotate)[1]; @a.raku.say

[17:00] <camelia> rakudo-moar d7152ea59: OUTPUT: «[2, 1]␤»

[17:00] <ggoebel> hmm... not understanding why those are different either

[17:02] <[Coke]> coding style aside (why would you not do the rotate first to avoid this?), I imagine you're referring directly to a[0] in the first one, and only @a as a whole in the second. You should definitely compare the --target=ast output to see what the code gen is doing in each case.

[17:02] <[Coke]> ... I imagine "it's because" you're...

[17:03] <[Coke]> "raku --target=ast -e '...'"

[17:03] <ggoebel> the code is just a golf of a problem I ran into when trying to collapse 2 loc into 1. Normally I write for readability, but this was for brevity.

[17:03] <ggoebel> will try that

[17:07] *** azee joined
[17:09] *** azee left
[17:18] *** synthmeat left
[17:18] *** synthmeat1 joined
[17:22] *** djerius left
[17:22] *** djerius joined
[17:24] *** abraxxa left
[17:30] *** riffraff left
[17:30] *** riffraff joined
[17:35] *** dakkar left
[17:44] *** discord-raku-bot left
[17:45] *** discord-raku-bot joined
[17:51] <tonyo> tbrowder: i'm here now, what's up?

[17:58] *** Flwyd left
[18:02] *** reportable6 left
[18:08] <tbrowder> i wanted you to know mi6 and fez are interoperating well. i am working on an advent article on moving mi6 modules from cpan mgmt to fez. you might want to use part of it for yr faq or readme when it's published.

[18:10] <tbrowder> tonyo: ^^^

[18:12] *** Altai-man left
[18:15] <tonyo> danke, i'll add it to the FAQ

[18:19] *** jjido left
[18:27] *** patrickb joined
[19:20] *** atroxaper left
[19:22] *** melezhik joined
[19:22] <melezhik> Sparky now has "watcher" mechanism allow to wait till asynchronous jobs are finished, here is an example - https://github.com/melezhik/sparrowdo/blob/master/doc/sparky-integration.md#watcher-jobs

[19:30] <melezhik> interesting , do I need to sleep within supply block? or it will hold CPU does useless jobs, instead of doing something useful? I am not sure how supply works from this point of view ... The reason for sleep might be not to over stretch sparky web app ...  

[19:44] *** monkey_ left
[20:03] *** riffraff left
[20:04] *** riffraff joined
[20:05] *** riffraff left
[20:05] *** riffraff joined
[20:06] *** melezhik left
[20:12] <tonyo> melezhik: what do you mean sleep in supply block? why would you need to do that?

[20:12] <tellable6> tonyo, I'll pass your message to melezhik

[20:14] *** monkey_ joined
[20:20] *** Skarsnik_ joined
[20:41] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/12/06/2021-49-adventing-is-on/

[20:41] <merryprog> the Net must have a lot of bruises after so many

[20:43] *** melezhik joined
[20:43] <melezhik> .

[20:43] <tellable6> 2021-12-06T20:12:55Z #raku <tonyo> melezhik: what do you mean sleep in supply block? why would you need to do that?

[20:45] <melezhik> tonyo I mean "The reason for sleep might be not to over stretch sparky web app, not to generate too many request ", from other hand it's a waste of CPU, right? 

[20:48] <tonyo> can you golf it?

[20:48] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2021/12/06/main-course/

[20:48] <gfldex> vasko: ^^^ This is your fault! :->

[20:53] <lizmat> gfldex: will be in the next weekly  :-)

[20:57] <lizmat> and /me has a comment about it on /r/rakulang

[21:03] *** reportable6 joined
[21:08] *** jgaz joined
[21:10] *** melezhik left
[21:33] *** jgaz left
[21:41] *** Xliff joined
[22:19] *** tbrowder left
[22:21] *** riffraff left
[22:21] *** riffraff joined
[22:22] *** tbrowder joined
[22:27] *** riffraff left
[22:32] *** pamplemousse joined
[22:36] *** abraxxa-home left
[22:42] *** jjido joined
[22:52] *** riffraff joined
[22:58] *** pamplemousse left
[23:00] *** riffraff left
[23:02] *** monkey_ left
[23:09] *** Skarsnik_ left
[23:13] *** riffraff joined
[23:19] *** riffraff left
[23:24] *** ProperNoun left
[23:24] *** ProperN[out] joined
[23:30] *** jjido left
[23:32] *** riffraff joined
[23:41] *** riffraff left
