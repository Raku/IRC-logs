[00:01] *** phogg left
[00:02] *** reportable6 left
[00:04] *** stoned75 left
[00:05] *** reportable6 joined
[00:11] *** guer joined
[00:16] *** guer left
[00:52] *** b2gills left
[01:15] *** b2gills joined
[01:31] *** phogg joined
[01:31] *** phogg left
[01:31] *** phogg joined
[01:44] *** thundergnat joined
[02:44] *** bisectable6 left
[02:44] *** sourceable6 left
[02:44] *** coverable6 left
[02:44] *** shareable6 left
[02:44] *** quotable6 left
[02:44] *** reportable6 left
[02:44] *** committable6 left
[02:44] *** greppable6 left
[02:44] *** squashable6 left
[02:44] *** evalable6 left
[02:44] *** tellable6 left
[02:44] *** linkable6 left
[02:44] *** notable6 left
[02:44] *** benchable6 left
[02:44] *** nativecallable6 left
[02:44] *** unicodable6 left
[02:44] *** releasable6 left
[02:44] *** statisfiable6 left
[02:44] *** bloatable6 left
[02:44] *** linkable6 joined
[02:44] *** coverable6 joined
[02:44] *** releasable6 joined
[02:44] *** sourceable6 joined
[02:44] *** benchable6 joined
[02:44] *** tellable6 joined
[02:44] *** committable6 joined
[02:44] *** quotable6 joined
[02:44] *** evalable6 joined
[02:44] *** squashable6 joined
[02:45] *** reportable6 joined
[02:45] *** bloatable6 joined
[02:46] *** bisectable6 joined
[02:46] *** greppable6 joined
[02:46] *** notable6 joined
[02:46] *** unicodable6 joined
[02:47] *** statisfiable6 joined
[02:47] *** nativecallable6 joined
[02:47] *** shareable6 joined
[03:11] *** japhb joined
[04:11] *** reportable6 left
[04:11] *** coverable6 left
[04:11] *** statisfiable6 left
[04:11] *** notable6 left
[04:11] *** committable6 left
[04:11] *** unicodable6 left
[04:11] *** sourceable6 left
[04:11] *** greppable6 left
[04:11] *** shareable6 left
[04:11] *** tellable6 left
[04:11] *** quotable6 left
[04:11] *** nativecallable6 left
[04:11] *** releasable6 left
[04:11] *** bisectable6 left
[04:11] *** linkable6 left
[04:11] *** evalable6 left
[04:11] *** benchable6 left
[04:11] *** squashable6 left
[04:11] *** bloatable6 left
[04:12] *** benchable6 joined
[04:12] *** sourceable6 joined
[04:12] *** evalable6 joined
[04:12] *** bloatable6 joined
[04:12] *** statisfiable6 joined
[04:12] *** releasable6 joined
[04:12] *** linkable6 joined
[04:13] *** greppable6 joined
[04:13] *** nativecallable6 joined
[04:13] *** notable6 joined
[04:13] *** committable6 joined
[04:14] *** shareable6 joined
[04:14] *** coverable6 joined
[04:14] *** reportable6 joined
[04:14] *** squashable6 joined
[04:14] *** unicodable6 joined
[04:26] *** aca joined
[04:33] *** cbk joined
[04:47] *** cbk left
[04:55] *** samebchase2 is now known as samebchase

[05:19] *** squashable6 left
[05:27] *** tellable6 joined
[06:02] *** Doc_Holliwood joined
[06:03] *** reportable6 left
[06:05] *** reportable6 joined
[06:18] *** bisectable6 joined
[06:26] *** squashable6 joined
[06:35] *** aca left
[06:42] *** frost joined
[06:53] *** Raycat|Home joined
[07:02] *** stoned75 joined
[07:32] *** patrickb joined
[07:37] *** Doc_Holliwood left
[07:40] *** Sgeo left
[07:43] *** Doc_Holliwood joined
[08:10] *** Kaipi is now known as Kaiepi

[08:16] <jjatria> Altreus: while on the topic of games written in Raku, I've been playing around with Pop and implementing a clone of the Pico-8 version of Celeste, and that's felt very smooth: https://gitlab.com/jjatria/celeste-clone

[08:16] <jjatria> I'm currently stuck on a collision bug, though, but other than that, pretty smooth :P 

[08:19] <Altreus> jjatria: nice

[08:19] <Altreus> I followed the link to the emulator and soft-locked myself by turning around somehow

[08:19] <Altreus> (Since I'd never heard of it I wanted to see what it was)

[08:19] <Altreus> (I didn't expect a playable version!)

[08:20] <jjatria> Pico-8 is great

[08:23] <japhb> Altreus: Join us over in #raku-gamedev ?  :-)

[08:23] <Altreus> sure

[08:25] *** raydiak joined
[08:26] *** bdju left
[08:28] *** bdju joined
[08:28] *** bdju left
[08:28] *** bdju joined
[09:07] *** suman joined
[09:10] *** guer joined
[09:20] <patrickb> %

[09:21] <moon-child> @

[09:21] <raydiak> Useless use of unnamed % variable in sink context (line 1)

[09:27] *** suman left
[09:28] <lizmat> !

[09:37] <raydiak> not sure whether to call that negative or complementary :)

[09:43] <Altreus> Take it as a complement

[09:44] *** Doc_Holliwood left
[09:50] <raydiak> was perhaps an overly-obscure logic joke. negation is also called the complement

[09:50] <raydiak> heh, raku's ! twigil is specifically mentioned in https://en.wikipedia.org/wiki/Exclamation_mark

[09:57] *** thundergnat left
[09:58] <Altreus> Perhaps my own pun ("Take it as a compliment") was itself obscure ;)

[09:58] <Altreus> maybe it was the same joke

[09:59] <Altreus> I approve of the Wikipedia article being exclamation mark, not exclamation point

[09:59] <raydiak> of course...you win this time :)

[10:01] *** perlmaros joined
[10:05] <lizmat> :-)

[10:07] <raydiak> if ! by itself is the complement of nothing, does that make it a concise expression of all possible things?

[10:09] <Altreus> It is easy to go from this concept to that of being overwhelmed to the point of wordlessness

[10:12] <raydiak> ...which takes us back to nothing

[10:12] <raydiak> this is why empty text files and blank paper give me writer's block. I immediately realize it simultaneously represents nothing and the possibility of all things. then I need a nap :)

[10:13] <Altreus> Imagination requires constraints

[10:14] <Altreus> I should say s/Imagination/Creativity/

[10:19] <raydiak> creating a defined thing does imply that it's defined as not some other thing

[10:21] *** bdju left
[10:21] <Altreus> You shouldn't open the file or take up the paper until you have spontaneously imagined a constraint in which to work

[10:22] *** bdju joined
[10:23] <raydiak> or not do it at all, which apparently is the least destructive thing possible

[10:24] <Altreus> And the least constructive

[10:24] <Altreus> If you choose inaction you still have made a choice

[10:25] <raydiak> but the possibilities from that point are endless, which doesn't sound like a bad point to be at

[10:26] <Altreus> At rock bottom, the only way is up

[10:30] <raydiak> I wouldn't call inaction rock bottom. often our first compulsion is to do something which ends up making a situation worse. in other words up is not the only way to go from rock bottom if you pull out a jackhammer

[10:31] *** bdju left
[10:31] *** bdju joined
[10:34] <raydiak> Buddhism holds nothingness in very high regard, from what I understand

[10:34] <lizmat> and then there's Mu  :-)

[10:36] <raydiak> ha! we're on topic after all

[10:47] *** morayj joined
[10:49] <raydiak> time for sleep. I'm going to go contemplate nothingness...or everythingness...or whatever it is(n't)...

[10:50] <lizmat> sleep well!

[10:51] <raydiak> ty :)

[11:17] *** RakuIRCLogger joined
[11:18] * lizmat says something

[11:18] *** sono left
[11:22] *** Doc_Holliwood joined
[11:34] <lizmat> https://logs.liz.nl now shows live logs from now on (although today will still be incomplete, to be fixed tomorrow)

[11:43] *** morayj left
[11:43] *** morayj joined
[11:43] *** morayj_ joined
[11:45] *** bdju left
[11:47] *** morayj left
[11:47] *** morayj_ is now known as morayj

[11:51] *** morayj left
[11:51] *** morayj joined
[11:57] <Altreus> I know Mu from GÃ¶del, Escher, Bach

[11:58] <Altreus> Maybe I should read that again so I have some tangible knowledge in that slot

[12:02] *** bdju joined
[12:03] *** reportable6 left
[12:03] *** reportable6 joined
[12:24] *** Doc_Holliwood left
[12:33] *** Doc_Holliwood joined
[12:45] *** morayj left
[12:54] *** Kaiepi left
[13:01] *** quotable6 joined
[13:25] *** guer left
[13:26] *** guer joined
[13:31] *** guer left
[13:32] *** Kaiepi joined
[14:01] *** Doc_Holliwood left
[14:04] *** guer joined
[14:29] *** Sgeo joined
[14:30] *** squashable6 left
[14:34] *** dakkar joined
[15:01] *** sono joined
[15:16] *** frost left
[15:21] <Woodi> hi

[15:23] <Woodi> just upgraded Debian host and "perl6-*" packages was *very* slow to upgrade... probably it is like that since few years. maybe packaging could be improved ?

[15:23] <Woodi> probably related to zef and modules

[15:24] * Woodi assumes "perl6-*" are Raku but just naming...

[15:25] <El_Che> Woodi: I offer this as an alternative https://github.com/nxadm/rakudo-pkg

[15:25] <El_Che> (if you need a more recent pkg)

[15:26] <nine> Woodi: is there an open Debian bugreport on this? I seem to remember them doing precompilation in a post-install script which is just not how it's meant to be done. Precompilation should be done as part of packaging and it'd be about time they fix this

[15:27] <Woodi> nine: possible

[15:28] <Woodi> El_Che: sorry, but I prefer distros packages or compiling from sources. except on Windows I totally do not care :)

[15:30] <El_Che> Woodi: no sorry, just a pointer :)

[15:42] *** guer left
[15:51] *** squashable6 joined
[15:55] *** gordonfish left
[16:09] *** suman joined
[16:11] <Altreus> If there's one thing I appreciate about raku it's that - is a valid part of an identifier

[16:11] <Altreus> I'm so often failing at shift when using _ that it's just not fun any more

[16:12] <Altreus> in fact can someone make a slang that just guesses what I mean by [], and then I don't have to use shift at all

[16:19] *** suman left
[16:26] <Geth> Â¦ doc: 5e1480f7db | (JJ Merelo)++ | doc/Type/Proc.pod6

[16:26] <Geth> Â¦ doc: Changes Â«old styleÂ» links, fixes #3895

[16:26] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/5e1480f7db

[16:26] <linkable6> Link: https://docs.raku.org/type/Proc

[16:27] *** linkable6 left
[16:29] <Altreus> you broke the link bot

[16:29] *** linkable6 joined
[16:35] *** cbk joined
[16:36] *** juanfra left
[16:36] *** demostanis[m] left
[16:36] *** ComplYue[m] left
[16:36] *** tyil[m] left
[16:36] *** CIAvash left
[16:37] <Geth> Â¦ doc: a5acf6a1aa | (JJ Merelo)++ | type-graph.txt

[16:37] <Geth> Â¦ doc: Types need to go to typegraph too

[16:37] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/a5acf6a1aa

[16:38] *** juanfra joined
[16:43] *** demostanis[m] joined
[16:43] *** tyil[m] joined
[16:43] *** ComplYue[m] joined
[16:43] *** CIAvash joined
[16:59] <codesections> Altreus: don't plan to use any sigils? 

[17:07] <Geth> Â¦ doc: 45a5f0a868 | (JJ Merelo)++ | type-graph.txt

[17:07] <Geth> Â¦ doc: Reverting last commit after @stoned found it was done already

[17:07] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/45a5f0a868

[17:12] *** pierrot joined
[17:18] <Altreus> codesections: \ is not a shift

[17:18] <Altreus> :D

[17:18] <Altreus> oh wait, colon

[17:22] *** suman joined
[17:23] <codesections> Altreus: but \ creates a *sigil-less* variable (that's why I said "sigils" instead of "variables")

[17:24] <Altreus> so splendid

[17:31] *** dakkar left
[17:41] *** pierrot left
[18:02] *** reportable6 left
[18:03] *** suman left
[18:03] *** reportable6 joined
[18:06] *** cbk left
[18:39] *** Doc_Holliwood joined
[18:52] *** pierrot joined
[18:53] *** gordonfish joined
[18:56] *** pierrot left
[18:56] *** pierrot joined
[19:44] <m6locks> ok guise

[19:44] <m6locks> how does Comma's projects structure work?

[19:45] <m6locks> I created a project with a .pm6 file in the lib/ directory, there's a .p6 file in the bin/ directory

[19:46] <m6locks> but when I do raku Peli.p6 it says could not find the .pm6 file

[19:49] <tonyo> do raku -Ilib Peli.p6

[19:50] <m6locks> nope, still the same error

[19:50] <tonyo> what's your code look like?  the `-I` flag is adding that directory to the module search path

[19:51] <m6locks> it's literally 3 lines

[19:51] <tonyo> oh now i know what they are.

[19:53] <m6locks> the basic setup for a project does use module (in my case Kasino.pm6 is the module file name, use Kasino;) and the I create a class and try to say the class contents

[19:54] <m6locks> the module name lib/Kasino.pm6 is listed in the META6.json file thee

[19:54] <m6locks> +r

[19:54] <tonyo> in your Kasino.pm6 you have either `module Kasino` or `class Kasino` ?

[19:54] <m6locks> ah, no

[19:54] <m6locks> trying

[19:55] <m6locks> I added the module Kasino; line in Kasino.pm6 but no

[19:55] <m6locks> still the same error 

[19:56] <tonyo> with the -I flag?

[19:56] <m6locks> aye, with the -I flag

[19:57] <gfldex> m6locks: `raku -e 'say $*CWD;'` might help

[19:58] <m6locks> it's the /bin dir

[19:58] <gfldex> try -I../lib then

[19:58] <tonyo> ^

[19:59] <m6locks> ah, now it does something

[19:59] <m6locks> thank you

[20:02] <m6locks> should I do java-style one-class-in-one-pm6-file or how does that work?

[20:02] <m6locks> it's now saying Undeclare name although I have a class of that name in the pm6

[20:02] <m6locks> +d

[20:02] <gfldex> did you export it?

[20:03] <m6locks> hmm no

[20:03] <tonyo> m6locks: https://gist.github.com/tony-o/ffb28eaad98f8efd31c8e162949fd2e7

[20:04] *** linkable6 left
[20:04] *** evalable6 left
[20:04] <m6locks> it appears the naming convention would need to have the module name in fron of the class name

[20:05] *** linkable6 joined
[20:06] *** evalable6 joined
[20:08] <tonyo> if you have a class embedded in a module then yes

[20:08] <m6locks> yes, now it works

[20:09] <m6locks> what about classes as method arguments, it says invalid typename 

[20:10] <m6locks> (I'm literally re-doing an old Java project in Raku)

[20:11] <lizmat> m: class Foo { };  sub a(Foo $b) { dd $b }; a Foo

[20:11] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«Fooâ¤Â»

[20:11] <lizmat> m6locks: we need more to go on :-)

[20:11] <tonyo> if you want the entire file to be a class then use `unit class Kasino;` at the top of the file rather than putting the lcass inside a module

[20:12] <m6locks> do I need to add the Kasino:: in front of the class name in the argument field?

[20:12] <m6locks> they are both found in the same unit module

[20:12] <m6locks> the classes that is

[20:12] <tonyo> you want the class itself as an argument or you want a typed parameter?

[20:13] <m6locks> it's just a type, yes

[20:13] <tonyo> m: class A {has $.x = 5; }; sub say-a(A $x) { dd $x; }; say-a(A.new);

[20:13] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«A.new(x => 5)â¤Â»

[20:14] <m6locks> hmm

[20:16] <tonyo> m: class A {has $.x = 5; }; sub say-a(A $x) { dd $x; }; say-a(A);

[20:16] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«Aâ¤Â»

[20:16] <tonyo> m: class A {has $.x = 5; }; sub say-a(A:D $x) { dd $x; }; say-a(A);

[20:16] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«Parameter '$x' of routine 'say-a' must be an object instance of typeâ¤'A', not a type object of type 'A'.  Did you forget a '.new'?â¤  in sub say-a at <tmp> line 1â¤  in block <unit> at <tmp> line 1â¤â¤Â»

[20:16] <tonyo> m: class A {has $.x = 5; }; sub say-a(A:D $x) { dd $x; }; say-a(A.new);

[20:16] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«A.new(x => 5)â¤Â»

[20:22] <raydiak> I'm with lizmat on this one: it would help a lot if we could see the code in a gist or pastebin or something so we know exactly how things are arranged and declared instead of playing 20 questions :)

[20:22] <m6locks> just a sec

[20:24] <m6locks> https://dpaste.com/2RE2HEY8N

[20:24] <m6locks> that's the two files in one paste

[20:25] <lizmat> X::AdHox   looks like a typo for X::AdHoc ?

[20:26] <m6locks> I can fix it, it's not complaining about that tho

[20:26] <lizmat> @!pino = Array.new;   # is a noop, you can remove that line

[20:26] <m6locks> aye, good

[20:26] <m6locks> my error is Invalid typename 'Kortti' in parameter declaration.

[20:27] <m6locks> row 66 in the paste 

[20:27] <lizmat> Kortti inside Kasino::Pino is short for Kasino::Pino::Kortti

[20:28] <lizmat> which doesn't exist

[20:28] <lizmat> so you should fully qualify it inside Kasino::Pino

[20:29] <m6locks> aye, yes that seems to do the trick

[20:29] <m6locks> thank you

[20:30] <lizmat> yw

[20:36] <gfldex> m: constant hidden = class { role R }; sub s(hidden::("R") $p) {};

[20:36] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Unable to parse role definitionâ¤at <tmp>:1â¤------> 3constant hidden = class { role R 7â5}; sub s(hidden::("R") $p) {};â¤    expecting any of:â¤        generic roleâ¤Â»

[20:36] <gfldex> m: constant hidden = class { role R {} }; sub s(hidden::("R") $p) {};

[20:36] <camelia> rakudo-moar 89fd8a8df: ( no output )

[20:36] <gfldex> when is `hidden::("R")` evaluated?

[20:36] <gfldex> in this example that is

[20:40] <[Coke]> wouldn't it be runtime because of the dynamic lookup?

[20:41] <raydiak> I thought ::() was interpolated at runtime, though I can't currently find the doc I read it in, so can't confirm

[20:41] <[Coke]> ... oh, misread the example, it's in the signature. hurm.

[20:42] <[Coke]> m: constant hidden = class { role R {} }; sub s(hidden::("R") $p) {}; s(); # it knows the sig is required...

[20:42] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Calling s() will never work with declared signature (<anon|1>::R $p)â¤at <tmp>:1â¤------> 3ole R {} }; sub s(hidden::("R") $p) {}; 7â5s(); # it knows the sig is required...â¤Â»

[20:43] *** patrickb left
[20:48] *** cbk joined
[20:49] <raydiak> apparently if it can't be resolved at compile time, you'll get this error:

[20:49] <raydiak> m: constant hidden = class { role R {} }; sub s(hidden::(say 0 and "R") $p) {}; s(hidden::R)

[20:49] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«===SORRY!===â¤Name hidden::(say 0 and "R") is not compile-time known, and can not serve as a type nameâ¤Â»

[21:05] <gfldex> m: constant hidden = class { role R {} }; sub s(hidden::("R") $p) {}; s.signature.say;

[21:05] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Calling s() will never work with declared signature (<anon|1>::R $p)â¤at <tmp>:1â¤------> 3ole R {} }; sub s(hidden::("R") $p) {}; 7â5s.signature.say;â¤Â»

[21:05] <gfldex> m: constant hidden = class { role R {} }; sub s(hidden::("R") $p) {}; &s.signature.say;

[21:05] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«(<anon|1>::R $p)â¤Â»

[21:05] <gfldex> so it is compile time with a funky full name

[21:07] <raydiak> yes though the funk is from the unnamed class, not the ::()

[21:09] <raydiak> m: my class hidden { role R {} }; sub s(hidden::("R") $p) {}; &s.signature.say

[21:09] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«(hidden::R $p)â¤Â»

[21:13] <raydiak> ^ is still hidden as long as you lexicalize it with my

[21:13] <raydiak> m: { class not-hidden { } }; say not-hidden

[21:13] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«(not-hidden)â¤Â»

[21:13] <raydiak> vs

[21:13] <raydiak> m: { my class hidden {} }; say hidden

[21:13] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Undeclared routine:â¤    hidden used at line 1â¤â¤Â»

[21:14] <raydiak> imo feels cleaner, and no funky anon

[21:20] *** wphtech joined
[21:21] *** wphtech left
[21:26] <raydiak> I guess I don't really know what kind of hiding you're trying to do though. same is true for constant scoping, so maybe your goal was something entirely different

[21:26] <raydiak> m: { constant hidden = class {} }; say hidden

[21:26] <camelia> rakudo-moar 89fd8a8df: OUTPUT: Â«(<anon|1>)â¤Â»

[21:27] *** linkable6 left
[21:29] *** linkable6 joined
[21:35] *** squashable6 left
[21:36] *** squashable6 joined
[22:21] *** kraxn joined
[22:28] <kraxn> hi there. New to raku - i just installed raku for ubuntu, using "sudo apt-get install rakudo" via https://rakudo.org/downloads. To get the repl, I can use 'Perl6', but most examples use 'raku'. Did I miss something in the configuration? In addition I also tried to use 'zef' to install a package, but it wasn't recognised. Did I miss something on the

[22:28] <kraxn> install here too? 

[22:43] <juanfra> kraxn, do you have the file "/usr/share/perl6/site/bin/zef"?

[22:44] <phogg> kraxn: per packages.ubuntu.org there is a package called perl6-zef, maybe that's it

[22:44] <phogg> s/org/com

[22:45] <juanfra> if he installed raku using the packages from rakudo.org, then he shouldn't install the zef package from the ubuntu repo

[22:46] <kraxn> juanfra - no I don't, phogg: sorry, I working from Linux. I just realised I i didn't install the star bundle, would this have the modules I need? 

[22:47] <phogg> kraxn: probably best to ignore me

[22:48] *** yewscion joined
[22:48] <kraxn> phogg: no worries, any help is appreciated!

[22:49] <m6locks> aye,  star has modules

[22:50] <kraxn> thanks, I will give this a shot now. 

[22:51] *** kraxn18 joined
[22:52] <juanfra> kraxn, ok, i think i understand now. you just ran the command "sudo apt-get install rakudo" because rakudo.org says that. you are using the official ubuntu package then. try installing perl6-zef as phogg said

[22:53] <juanfra> i thought that rakudo had some kind of official rakudo build for ubuntu.

[22:53] <phogg> it might have had that, but I guess not

[22:54] *** kraxn left
[23:01] <m6locks> well it is confusing tbh, since the webpage says that rakudo moar includes zef (implying you could install modules with it)

[23:02] <m6locks> rakubrew worked nice for me

[23:03] <tonyo> if the ubuntu package comes without zef then zef's readme has how to install it naturally

[23:07] *** kraxn18 left
[23:41] *** stoned75 left
