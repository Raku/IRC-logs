[00:02] *** reportable6 left
[00:03] *** casaca joined
[00:05] *** Doc_Holliwood left
[00:23] <mykhal> c: releases say (1..10).&{ .?expand // .?agile // .?eager }
[00:23] <committable6> mykhal, ¬¶releases (56 commits): ¬´(1 2 3 4 5 6 7 8 9 10)‚ê§¬ª
[00:38] <mykhal> c: releases  say (1..3).Set.keys.sort.join ; say (1..3).Set.sort.keys.join
[00:38] <committable6> mykhal, ¬¶releases (56 commits): ¬´123‚ê§012‚ê§¬ª
[00:43] *** japhb left
[00:44] *** japhb joined
[01:01] *** japhb left
[01:04] *** reportable6 joined
[01:24] *** MaxRozeman joined
[01:25] *** MaxRozeman left
[01:26] *** MxRz joined
[01:30] *** MxRz left
[01:45] *** justsomeguy joined
[01:51] *** zacts joined
[01:55] *** zacts left
[01:56] *** zacts joined
[02:16] *** zacts left
[02:34] *** swaggboi left
[02:40] *** squashable6 left
[02:41] *** swaggboi joined
[02:43] *** squashable6 joined
[02:51] *** squashable6 left
[03:09] *** Doc_Holliwood joined
[03:48] *** kjp_ joined
[03:51] *** kjp left
[03:59] *** kjp_ left
[04:51] *** Doc_Holliwood left
[04:54] *** squashable6 joined
[05:01] *** stoned75_ left
[05:03] *** stoned75 joined
[05:10] *** kjp joined
[05:38] *** Doc_Holliwood joined
[06:00] <CIAvash> vasko:  For that specific example, you can also do `(0..4).map($++ => *¬≤).hash` or `(0..4).kv.map(* => *¬≤).hash` or `(0..4).map(*¬≤).kv.hash`.
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[06:09] *** japhb joined
[06:11] *** Doc_Holliwood left
[06:28] *** squashable6 left
[06:29] *** clarjon1 left
[06:30] *** squashable6 joined
[06:32] *** squashable6 left
[06:32] *** squashable6 joined
[06:52] *** Doc_Holliwood joined
[07:31] *** Frozenset joined
[07:32] <Geth> ¬¶ doc: dcbec63a1f | (JJ Merelo)++ | doc/Language/js-nutshell.pod6
[07:32] <Geth> ¬¶ doc: Adds requested section, closes #3928
[07:32] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/dcbec63a1f
[07:32] <linkable6> Link: https://docs.raku.org/language/js-nutshell
[07:33] *** linkable6 left
[07:33] *** linkable6 joined
[07:38] <Geth> ¬¶ doc: f0447e85a6 | (JJ Merelo)++ | doc/Language/js-nutshell.pod6
[07:38] <Geth> ¬¶ doc: Addressing @moon-chilled comments #3928
[07:38] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f0447e85a6
[07:38] <linkable6> Link: https://docs.raku.org/language/js-nutshell
[07:39] *** linkable6 left
[07:40] *** linkable6 joined
[07:46] <Geth> ¬¶ doc: 68191b2b57 | (JJ Merelo)++ | doc/Language/modules.pod6
[07:46] <Geth> ¬¶ doc: Fixes #3911 link
[07:46] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/68191b2b57
[07:46] <linkable6> Link: https://docs.raku.org/language/modules
[07:47] *** linkable6 left
[07:47] *** linkable6 joined
[07:58] <AlexDaniel> committable6: releases say $*PERL.compiler.version
[07:59] <committable6> AlexDaniel, https://gist.github.com/dcf3243800499f06643d45181cde700d
[07:59] <AlexDaniel> Altai-man: I think I figured it out. It's probably the case of tag not being pushed (or being pulled) before the commit is fetched
[08:00] <AlexDaniel> Altai-man: so for whateverable, at the moment of building, 2021.06 didn't exist. I deleted the build and now it shows up correctly
[08:00] <AlexDaniel> (deleting a build means it regenerates it in a few minutes)
[08:26] *** eseyman_ is now known as eseyman
[10:19] *** Sgeo left
[11:19] *** sourceable6 left
[11:19] *** quotable6 left
[11:19] *** nativecallable6 left
[11:19] *** notable6 left
[11:19] *** releasable6 left
[11:19] *** benchable6 left
[11:19] *** unicodable6 left
[11:19] *** bloatable6 left
[11:19] *** greppable6 left
[11:19] *** committable6 left
[11:19] *** statisfiable6 left
[11:19] *** tellable6 left
[11:19] *** evalable6 left
[11:19] *** shareable6 left
[11:19] *** coverable6 left
[11:19] *** squashable6 left
[11:19] *** reportable6 left
[11:19] *** linkable6 left
[11:19] *** bisectable6 left
[11:19] *** committable6 joined
[11:19] *** evalable6 joined
[11:19] *** squashable6 joined
[11:20] *** sourceable6 joined
[11:20] *** notable6 joined
[11:20] *** tellable6 joined
[11:21] *** statisfiable6 joined
[11:21] *** benchable6 joined
[11:21] *** reportable6 joined
[11:50] *** MoC joined
[11:52] <vasko> CIAvash: Nice! The ¬´kv¬ª method looks awesome :) I'm starting to see how the `*` slot works, thanks!
[11:58] *** patrickb joined
[12:03] *** reportable6 left
[12:03] *** reportable6 joined
[12:20] *** quotable6 joined
[12:20] *** releasable6 joined
[12:20] *** linkable6 joined
[12:22] *** unicodable6 joined
[12:22] *** coverable6 joined
[12:53] *** sono left
[13:21] *** bisectable6 joined
[13:21] *** shareable6 joined
[13:51] <daxim> do we have a moral equivalent of webperl?  I want to try out raku in the front-end
[14:03] <patrickb> daxim: I think not. The best there is, is rakudo-js: https://www.npmjs.com/package/rakudo
[14:04] <patrickb> rakudo-js works. Biggest caveats are that it's currently not being actively worked on, and long load times.
[14:19] <daxim> http://perlpunks.de/paste/show/61055be2.609b.266?plain=1
[14:20] *** nativecallable6 joined
[14:21] *** bloatable6 joined
[14:44] *** zacts joined
[15:05] *** zacts left
[15:13] *** MoC left
[15:21] *** greppable6 joined
[15:33] *** zacts joined
[16:07] <patrickb> Is there a call-if-object-exists-op? something like `$obj.some-meth() if $obj`?
[16:07] <lizmat> .foo with $obj
[16:10] <codesections> ($obj//Nil).foo also works, but ^^^ is what I'd go with
[16:13] *** zacts left
[16:15] <patrickb> ($obj//Nil).foo looks strange. Is Nil.foo a noop?
[16:15] <MasterDuke> mostly
[16:16] <codesections> Nil.anything returns Nil (but also may have some warnings)
[16:16] <MasterDuke> m: Nil.foo; Nil.push
[16:16] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´Use of Nil.push not allowed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[16:16] <patrickb> Ah, understood.
[16:16] <lizmat> Nil.push is not allowed, because .push should mutate the invocant, and Nil is immutable
[16:17] <lizmat> m: Nil.append
[16:17] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´Use of Nil.append not allowed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[16:17] <lizmat> m: Nil.shift
[16:17] <camelia> rakudo-moar 54f1b7a5f: ( no output )
[16:17] <codesections> ^^^ despite saying "not allowed", that's still a warning, right?
[16:17] <lizmat> m: Nil.pop
[16:17] <camelia> rakudo-moar 54f1b7a5f: ( no output )
[16:17] <lizmat> hmmm... looks like we forgot a few
[16:18] <lizmat> ah, Nil.shift could be considered a .shift on an empty Array, and that returns a Failure
[16:18] <lizmat> m: dd [].shift
[16:18] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´Failure.new(exception => X::Cannot::Empty.new(action => "shift", what => "Array"), backtrace => Backtrace.new)‚ê§¬ª
[16:18] <lizmat> and since Nil is a sort of soft Failure, I guess Nil.shift and Nil.pop are ok
[16:19] <codesections> Oh, no, I was wrong: Nil.push is an error (not a warning).  It's just runtime rather than compile time
[16:20] <codesections> m: try Nil.push; say $!.raku
[16:20] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´X::AdHoc.new(payload => "Use of Nil.push not allowed")‚ê§¬ª
[16:24] <MasterDuke> m: sub a($b) { dd $b }; my $c; .&a with $c; ($c//Nil).&a
[16:24] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´Nil‚ê§¬ª
[16:41] *** Kaiepi left
[16:41] *** Kaiepi joined
[17:41] *** evalable6 left
[17:41] *** linkable6 left
[17:44] *** linkable6 joined
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[18:16] *** stoned75 left
[18:18] *** stoned75 joined
[18:39] *** Sgeo joined
[18:43] *** evalable6 joined
[18:54] <tbrowder> can anyone using emacs tell me how to avoid the editor rerunning all the unicode font prep? i haven't noticed when it happens, but, out of the blue i will open a text file and it takes quite a few seconds to map unicode chars and such. i would capture the messages but i'm never prepared for it when it happens!
[18:55] <tbrowder> i suspect i need something that's absent in my emacs config files
[18:56] <tbrowder> but know not what :-(
[19:17] *** Kaipi joined
[19:17] *** Kaiepi left
[19:22] *** linkable6 left
[19:22] *** linkable6 joined
[19:30] <CIAvash> tbrowder: I'm not sure, but try `(setq inhibit-compacting-font-caches t)`
[19:31] <tbrowder> thnx, will do
[19:31] <codesections> I use emacs but don't do any unicode stuff with it (I use a compose key with xmodmap) so I haven't run into that
[19:33] <codesections> I'm surprised that can take so long, though.  What's it _doing_ with that time?
[19:34] <tbrowder> well as far as i know i'm not doing anything explicitly unicodey, but i'm mostly a copy/paste guy (except for the regex indexing thing)
[19:36] <tbrowder> i do have some user files with embedded unicode i read with emacs, so i guess i need to test with those.
[19:37] <tbrowder> CIAvash: thnx, bye
[19:44] *** Merfont joined
[19:44] *** Kaipi left
[19:48] *** Merfont left
[19:48] *** Merfont joined
[19:51] *** zacts joined
[20:02] *** Merfont left
[20:03] *** Merfont joined
[20:31] *** Merfont left
[20:34] *** Kaiepi joined
[20:42] *** zacts left
[20:46] *** Kaiepi left
[20:51] *** Doc_Holliwood left
[20:53] *** silug left
[21:02] *** Kaiepi joined
[21:08] *** Frozenset left
[21:13] *** Kaiepi left
[21:13] *** Kaiepi joined
[21:28] *** Kaiepi left
[21:30] *** Kaiepi joined
[22:07] *** eagerlist joined
[22:10] <discord-raku-bot> <ionsolo#0792> Hi, someone knowns how can set a variable n times of change? , for example $x only can change 5 times
[22:15] *** jess joined
[22:16] *** silug joined
[22:18] *** sono joined
[22:18] *** linkable6 left
[22:48] *** Kaiepi left
[22:48] *** Kaiepi joined
[23:00] <lizmat> iosolo#0792: use a Proxy and you can add all the logic that you want: https://docs.raku.org/type/Proxy
[23:02] *** tirnanog joined
[23:20] <discord-raku-bot> <ionsolo#0792> Lol, I forget the Proxy class, thanks Lizmat :)
[23:20] *** linkable6 joined
[23:48] *** patrickz joined
[23:50] *** patrickz left
[23:52] *** patrickb left
[23:53] *** patrickb left
