[00:00] *** euandreh left
[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:10] <[Coke]> yay, fixed macport issue. https://apple.stackexchange.com/questions/407162/cant-upgrade-macports-under-big-sur
[00:29] <[Coke]> I recall a bug reported with URI?
[00:29] <[Coke]> (seeing one on install, don't see it in the issue tracker for URI)
[00:33] *** euandreh joined
[00:33] <[Coke]> https://github.com/jonathanstowe/URI-Template/issues/3 - trying with a released version of rakudo now
[00:52] *** Skarsnik left
[01:47] *** melezhik joined
[01:47] *** melezhik left
[01:50] *** melezhik joined
[01:53] *** xinming__ left
[01:55] *** xinming__ joined
[02:01] <japhb> [Coke]: https://github.com/raku-community-modules/URI/issues/48
[02:01] *** melezhik34 joined
[02:01] <[Coke]> That module didn't show up when I searched for "URI" on the modules site.
[02:01] <[Coke]> (nor is it the one that zef found for me, I don't think)
[02:02] <japhb> That's ... suboptimal.
[02:02] <[Coke]> 'zef info URI' points at jonathanstowe/URI-Template; maybe it's a partial match?
[02:03] <[Coke]> closed mine
[02:04] <japhb> [Coke]: Note this mismatch:
[02:04] <japhb> - Info for: URI
[02:04] <japhb> - Identity: URI::Template:ver<0.0.9>:auth<github:jonathanstowe>:api<1.0>
[02:04] <japhb> - Recommended By: Zef::Repository::Ecosystems<cpan>
[02:04] <japhb> - Installed: Yes, as URI:ver<0.3.3>
[02:04] <japhb> The versions don't line up.
[02:05] <japhb> I think `zef info` is confused.  But at least when it's installed, it gets the 0.3.3 one.
[02:09] <ugexe> i see whats causing that
[02:12] <ugexe> looks like a regression from https://github.com/ugexe/zef/commit/a12d286312c6d7bc3c8ffebe51cce4caae6268cf
[02:13] <ugexe> should be fixed by https://github.com/ugexe/zef/pull/424
[02:16] <[Coke]> ugexe++ # quick turnaround time
[02:21] *** melezhik34 left
[02:27] *** DarthGandalf left
[02:27] *** DarthGandalf joined
[02:29] *** bingos_ joined
[02:30] *** BinGOs left
[02:41] *** seednode4 left
[02:43] *** seednode4 joined
[02:58] *** Altai-man joined
[02:59] *** sena_kun left
[03:38] *** melezhik left
[03:54] *** xinming__ left
[03:55] *** xinming__ joined
[04:03] *** tejr left
[04:04] *** tejr joined
[05:04] *** sourceable6 left
[05:04] *** committable6 left
[05:04] *** releasable6 left
[05:04] *** benchable6 left
[05:04] *** linkable6 left
[05:04] *** unicodable6 left
[05:04] *** notable6 left
[05:04] *** squashable6 left
[05:04] *** quotable6 left
[05:04] *** nativecallable6 left
[05:04] *** greppable6 left
[05:04] *** bisectable6 left
[05:04] *** statisfiable6 left
[05:04] *** evalable6 left
[05:04] *** tellable6 left
[05:04] *** reportable6 left
[05:04] *** bloatable6 left
[05:04] *** coverable6 left
[05:04] *** shareable6 left
[05:04] *** linkable6 joined
[05:04] *** nativecallable6 joined
[05:05] *** statisfiable6 joined
[05:05] *** greppable6 joined
[05:05] *** tellable6 joined
[05:05] *** squashable6 joined
[05:05] *** committable6 joined
[05:05] *** evalable6 joined
[05:06] *** coverable6 joined
[05:06] *** shareable6 joined
[05:06] *** bloatable6 joined
[05:07] *** sourceable6 joined
[06:04] *** benchable6 joined
[06:05] *** quotable6 joined
[06:05] *** reportable6 joined
[06:06] *** unicodable6 joined
[06:17] *** seednode4 left
[06:17] *** seednode4 joined
[07:05] *** notable6 joined
[07:06] *** bisectable6 joined
[07:06] *** releasable6 joined
[08:06] *** evalable6 left
[08:06] *** linkable6 left
[08:07] *** evalable6 joined
[08:08] *** linkable6 joined
[08:12] *** Sgeo left
[08:42] *** MoC joined
[08:47] *** childlikempress joined
[08:47] *** Kaipi joined
[08:47] *** moon-child left
[08:50] *** Kaiepi left
[08:58] *** Kaipi left
[08:58] *** Kaiepi joined
[09:00] *** Skarsnik joined
[09:00] *** childlikempress is now known as moon-child
[09:22] *** Kaiepi left
[09:22] *** Kaiepi joined
[09:28] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2021/11/05/timtowtditime/
[09:33] *** linkable6 left
[09:34] *** bingos_ is now known as BinGOs
[09:34] *** BinGOs left
[09:34] *** BinGOs joined
[09:50] <gfldex> lolibloggedagain: https://gfldex.wordpress.com/2021/11/05/should-it-mutate-or-not-yes/
[09:51] <gfldex> I am happy to report this to be post No. 150. Raku is BIG!
[10:34] *** evalable6 left
[10:36] *** linkable6 joined
[10:36] *** evalable6 joined
[10:59] <discord-raku-bot> <Nemokosch#9980> üòÇ
[11:02] *** dakkar joined
[11:17] *** dakkar left
[11:49] *** melezhik joined
[11:50] *** melezhik left
[11:55] *** sena_kun joined
[12:02] *** reportable6 left
[12:05] *** linkable6 left
[12:05] *** reportable6 joined
[12:06] *** linkable6 joined
[12:15] *** abraxxa left
[12:24] *** avar left
[12:25] *** avar joined
[12:26] *** dpk left
[12:26] *** dpk joined
[12:33] *** guifa left
[12:39] *** Xliff joined
[13:10] *** vrurg_ joined
[13:12] *** vrurg left
[13:15] *** Xliff_ joined
[13:18] *** Xliff left
[13:31] *** jess left
[13:47] *** Sgeo joined
[14:07] *** TempIRCLogger left
[14:08] *** TempIRCLogger joined
[14:36] *** melezhik joined
[14:41] <melezhik> lizmat is it possible to keep logs for #raku-news channel?
[14:41] <lizmat> they are already kept
[14:41] <melezhik> cool
[14:41] <lizmat> https://logs.liz.nl/raku-news/live.html
[14:42] <melezhik> thanks! great
[15:23] *** [Coke] left
[15:27] *** MoC left
[15:37] *** vrurg_ is now known as vrurg
[15:46] *** Sgeo_ joined
[15:49] *** Sgeo left
[15:52] <melezhik> I've just added shortcuts support for raku.land and github http links to mybfio comments - https://mybf.io/project/mybfio/reviews#melezhik_1636123442
[15:57] *** [Coke] joined
[16:06] *** _________ left
[16:11] *** _________ joined
[16:38] *** nebuchadnezzar left
[16:45] *** Sgeo joined
[16:48] *** Sgeo_ left
[16:55] *** melezhik left
[17:13] *** dogbert11 joined
[17:13] *** dogbert17 left
[18:01] *** Kaiepi left
[18:02] *** Kaiepi joined
[18:15] *** sena_kun left
[18:30] *** euandreh left
[18:31] *** euandreh left
[18:44] *** euandreh joined
[19:21] *** Skarsnik left
[19:21] *** andinus left
[19:21] *** andinus` joined
[19:25] *** melezhik joined
[19:33] *** melezhik left
[19:35] *** Sgeo_ joined
[19:37] *** Sgeo left
[19:52] <Od1n> hello people
[19:52] <Od1n> i need some help to transform this perl line in raku : map /type_(.*)/, qw< foo bar type_min type_max >
[19:58] <Od1n> the best i have is gather for qw< foo bar type_min type_max > { take ~$0 if /type_(.*)/ }
[20:00] *** andinus` left
[20:01] <Od1n> better but not as simple as the perl version : map { ~$0 if /type_(.*)/ }, < foo bar type_min type_max > 
[20:01] *** andinus` joined
[20:12] <lizmat> is the match guaranteed ?
[20:12] <lizmat> ah, I guess not
[20:13] <lizmat> so you'd want the result to be <foo bar min max> ?
[20:13] <lizmat> or just <min max>   # my perl is a bit rusty
[20:13] <lizmat> Od1n ^^
[20:17] <Od1n> lizmat: hi! thanks for replying. there is no guaranty: those are filenames i parse and some data clearly are missing
[20:18] <lizmat> so what is your expected result from your example?
[20:20] <Od1n> it's so weird i can show you something in perl :)) actually: when you use captures in a list context, perl release the captured parts
[20:20] <Od1n> so yes < min max > is expected 
[20:20] <Od1n> the real raku code here is : types => (map { ~$0 if /type_(.*)/ }, soft.dir) 
[20:20] <Od1n> (for the moment 
[20:21] <lizmat> m: <foo bar type_min type_max>.map: { .
[20:21] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed postfix call (only basic method calls that exclusively use a dot can be detached)‚ê§at <tmp>:1‚ê§------> 3<foo bar type_min type_max>.map: { .7‚èè5<EOL>‚ê§¬ª
[20:23] <lizmat> m: dd <foo bar type_min type_max>.map: { .Str with .match(/ type_ <( .* /) }
[20:23] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´("min", "max").Seq‚ê§¬ª
[20:24] <lizmat> re <(   see https://docs.raku.org/language/regexes#Capture_markers:_%3C(_)%3E
[20:30] <Od1n> arghhh ... i always forget them. my raku isn't fluent enough at all
[20:30] <Od1n> thank you so much lizmat 
[20:31] <lizmat> m: dd <foo bar type_min type_max>.map: { ~$/ if / type_ <( .* / }
[20:31] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´("min", "max").Seq‚ê§¬ª
[20:31] <lizmat> a bit shorter, but more linenoisy
[20:32] <lizmat> I've grown to appreciate the less line-noisy variants
[20:36] <Od1n> well ... the same to me when in comes to shell scripting (sed regexps are boring to maintain) but raku has a very acceptable way to be noisy
[20:38] <lizmat> BTW, I was disappointed to see that / foo <( / would not simply fetch everything after the first "foo"
[20:38] <lizmat> sadly the .* is needed
[21:01] *** evalable6 left
[21:01] *** linkable6 left
[21:02] *** evalable6 joined
[21:10] <Od1n> fair enough here. i'm more disappointed by the fact i need an entire block when just a regexp used to make the job done. trade offs ... but no doubt raku is the best deal 
[21:14] <lizmat> Od1n but you have a block in your perl code as well ?
[21:15] <Od1n> nope, just the regexps: map /type_(.*)/ @foo returns all the captures that was matched in @foo 
[21:16] <Od1n> map /type_(.*)/, @foo , sorry
[21:17] <lizmat> m: dd <a b c>.map: / b /  # not sure why this couldn't work 
[21:17] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´No such method '!cursor_start' for invocant of type 'Str'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[21:17] <Od1n> /type_(.*)/ is simpler than { $~/ if / type_ <( .* / }
[21:17] *** archenoth left
[21:17] *** archenoth joined
[21:18] <lizmat> ~$/ actually, but yeah
[21:18] <Od1n> ~$/ ... sorry
[21:18] <Od1n> yes :)
[21:18] <lizmat> hmmm.. that feels like something that could be pursued  :-)
[21:19] <Od1n> :)
[21:19] <Od1n> "it would be great"
[21:19] <Od1n> map / type_ <( /, @foo should be the ultimate goal
[21:20] <lizmat> it would, wouldn't it  :-)
[21:20] <Od1n> indeed :)
[21:23] *** _Xliff_ joined
[21:23] *** Xliff_ left
[21:24] *** leedo_ joined
[21:25] *** Summer_ joined
[21:25] *** rba_ joined
[21:26] *** leedo left
[21:26] <ugexe> >>.comb(/ ... /) ? 
[21:27] *** jcallen_ joined
[21:27] *** Summer left
[21:27] *** Summer_ is now known as Summer
[21:28] *** rba left
[21:28] *** leah2 left
[21:28] *** jcallen left
[21:28] *** rba_ is now known as rba
[21:29] *** leah2 joined
[21:29] <lizmat> ugexe: indeed, I guess I was lead too much by the perl idiom
[21:29] <lizmat> Od1n ^^
[21:30] <lizmat> m: dd <foo bar type_min type_max>.comb: / type_ <( .* /
[21:30] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´("min type_max",).Seq‚ê§¬ª
[21:30] <lizmat> m: dd <foo bar type_min type_max>.comb: /:g type_ <( .* /
[21:30] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unrecognized regex modifier :g‚ê§at <tmp>:1‚ê§------> 3dd <foo bar type_min type_max>.comb: /:7‚èè5g type_ <( .* /‚ê§    expecting any of:‚ê§        argument list‚ê§        term‚ê§¬ª
[21:31] <Od1n> wow ... same problem as lizmat: i try too much translating my perl ideas in raku
[21:31] <Od1n> thanks ugexe 
[21:33] *** MoC joined
[21:33] <Od1n> ugexe: but not exactly: if there is no match, the entire string is returned so there are a lot of false positive 
[21:33] <Od1n> i'm checking for the parameters of .comb
[21:34] <lizmat> m: dd <a foo_b foo_c>.comb: / foo_ <( .*? >> /   # slight mod on the regex
[21:34] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´("b", "c").Seq‚ê§¬ª
[21:35] <lizmat> m: dd <a foo_b foo_c>.comb: / foo_ <( \w+ /   # alternate version
[21:35] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´("b", "c").Seq‚ê§¬ª
[21:35] <Od1n> haha. this one works but i don't understand why
[21:35] <Od1n> >> is unseen to me 
[21:36] <Od1n> https://docs.raku.org/language/regexes#index-entry-regex__%3C%3C-_regex__%3E%3E-_regex__%C2%AB-_regex__%C2%BB
[21:36] <lizmat> word boundary at right
[21:36] <Od1n> yes. as i just read but why is this enough to remove the others
[21:37] <ugexe> .comb on a list is stringifying the list, no?
[21:37] <lizmat> ugexe: eh, yes of course
[21:37] <Od1n> ahhhhh ... got it! thanks
[21:37] <lizmat> m: dd <foo bar type_min type_max>>>.comb: / type_ <( .* /
[21:37] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´(().Seq, ().Seq, ("min",).Seq, ("max",).Seq)‚ê§¬ª
[21:38] <lizmat> m: say <foo bar type_min type_max>>>.comb: / type_ <( .* /
[21:38] <camelia> rakudo-moar e98e17da7: OUTPUT: ¬´(() () (min) (max))‚ê§¬ª
[21:38] <Od1n> wicked!
[21:40] <Od1n> nope: soft.dir>>.comb( /type_<(.*/ ) gives me an error 
[21:41] <Od1n> 'fluent/fluent150' is a directory, cannot do '.open' on a directory
[21:41] <Od1n> but .comb: / foo_ <( .*? >> /  made me happy :)
[21:56] <Tirifto> Is there a way to somehow precompile code which is about to be EVALuated (multiple times) ‚Äì that is, when it does not come from a module?
[22:04] *** linkable6 joined
[22:05] <Od1n> are raku.land and modules.raku.org different facets of the same ecosystem ?
[22:09] <lizmat> yes
[22:10] <lizmat> modules.raku.org is basically what modules.perl6.org used to be
[22:10] <lizmat> raku.land is a new thing, based on Cro
[22:10] <Od1n> ok. so there is no implementation of Template::Toolkit in raku.
[22:10] <Od1n> ahh cool! cro in production !
[22:11] <lizmat> also: logs.liz.nl   # also cro, and also production :-)
[22:11] <lizmat> if you're thinking about templating in Raku, I've become pretty enamoured by Cro::WebApp
[22:12] <Od1n> your irc logs are gorgeous! i like it 
[22:13] <lizmat> thank you  :-)
[22:13] <Od1n> actually i need static pages
[22:14] <lizmat> https://logs.liz.nl/raku/2021-11-04.html is actually a static page
[22:15] <Od1n> build with cro ?
[22:15] <lizmat> yup
[22:16] <lizmat> and Cro::WebApp
[22:16] <Od1n> is there a chance to pull the code of logs.liz.nl ?
[22:16] <lizmat> https://github.com/lizmat/App-Raku-Log/issues
[22:16] <lizmat> and all the modules that it uses :-)
[22:16] <lizmat> https://github.com/lizmat/App-Raku-Log
[22:16] <lizmat> actually  :-)
[22:17] <Od1n> thank you so much! i'll study this
[22:17] <lizmat> not a lot of docu yet, as a lot is still in flux
[22:17] <lizmat> but the modules that are used, are better documented
[22:17] <lizmat> https://github.com/lizmat/App-IRC-Log  for erxample
[22:18] <Od1n> reading raku code is something i have to exercize on so it's ok :)
[22:18] <Od1n> but for now got to sleep. thank you again
[22:18] <lizmat> sleep well!
[22:18] <lizmat> and you're welcome  :)
[22:18] <Od1n> have a nice week-end rakoons
[22:19] <lizmat> thanks, we will  :-)
[22:26] *** monkey_ joined
[22:30] *** Kaiepi left
[22:32] *** Kaiepi joined
[22:49] *** MasterDuke left
[23:03] *** MoC left
[23:09] *** hyperreal left
[23:18] *** monkey_ left
[23:19] *** monkey_ joined
[23:34] *** monkey_ left
[23:55] *** nebuchadnezzar joined
