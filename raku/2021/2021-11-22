[00:01] *** Zippy left
[00:02] *** reportable6 left
[00:02] *** reportable6 joined
[00:09] *** Skarsnik left
[00:20] *** sm1 left
[00:24] *** jess left
[00:28] *** Manifest0 left
[01:27] *** frost joined
[01:34] *** ramdom joined
[01:34] *** sm1 joined
[01:35] *** ramdom left
[01:40] *** monkey_ left
[02:28] *** sm1 left
[02:42] *** sm1 joined
[02:53] *** sm1 left
[03:19] *** sm1 joined
[03:34] *** sm1 left
[04:04] *** Colt2 joined
[04:04] *** Colt2 left
[04:04] *** Colt2 joined
[04:04] *** sm1 joined
[04:05] *** Colt left
[04:06] *** Colt2 left
[04:07] *** Colt joined
[04:33] *** sm1 left
[05:29] *** sm1 joined
[05:47] *** Sgeo_ joined
[05:48] *** BinGOs left
[05:48] *** jmcgnh left
[05:48] *** ptc_ left
[05:48] *** gabiruh left
[05:48] *** ptc joined
[05:48] *** bingos joined
[05:49] *** gabiruh joined
[05:49] *** Sgeo left
[05:51] *** jmcgnh joined
[05:54] *** corwin left
[05:54] *** GreaseMonkey left
[05:54] *** daxim left
[05:54] *** ugexe left
[05:54] *** jcallen left
[05:54] *** camelia left
[05:54] *** Ekho left
[05:54] *** dcx left
[05:54] *** peder left
[05:54] *** dustinm`_ left
[05:54] *** Ulti_ left
[05:54] *** mtj left
[05:54] *** ingy left
[05:54] *** jercos left
[05:55] *** pierrot left
[05:55] *** jercos joined
[05:55] *** greaser|q joined
[05:55] *** ugexe joined
[05:55] *** jcallen joined
[05:55] *** daxim joined
[05:55] *** mtj joined
[05:56] *** corwin joined
[05:56] *** corwin left
[05:56] *** corwin joined
[05:56] *** pierrot joined
[05:56] *** dcx joined
[05:57] *** camelia joined
[05:57] *** dustinm` joined
[05:57] *** ingy joined
[05:57] *** greaser|q left
[05:57] *** greaser|q joined
[05:57] *** greaser|q is now known as GreaseMonkey

[06:00] *** peder joined
[06:00] *** Ulti joined
[06:00] *** Ekho joined
[06:02] *** reportable6 left
[07:02] *** linkable6 left
[07:02] *** sourceable6 left
[07:02] *** squashable6 left
[07:02] *** nativecallable6 left
[07:02] *** bloatable6 left
[07:02] *** bisectable6 left
[07:02] *** quotable6 left
[07:02] *** statisfiable6 left
[07:02] *** unicodable6 left
[07:02] *** notable6 left
[07:02] *** evalable6 left
[07:02] *** coverable6 left
[07:02] *** shareable6 left
[07:02] *** tellable6 left
[07:02] *** greppable6 left
[07:02] *** benchable6 left
[07:02] *** committable6 left
[07:02] *** releasable6 left
[07:03] *** unicodable6 joined
[07:03] *** reportable6 joined
[07:04] *** notable6 joined
[07:04] *** greppable6 joined
[07:04] *** coverable6 joined
[07:04] *** bloatable6 joined
[07:04] *** linkable6 joined
[07:05] *** statisfiable6 joined
[07:05] *** benchable6 joined
[07:05] *** tellable6 joined
[07:06] *** sm1 left
[07:08] *** Flwyd left
[07:25] *** sm1 joined
[07:27] *** seednode left
[07:28] *** seednode joined
[07:44] *** sm1 left
[07:53] *** abraxxa joined
[07:53] *** ecocode__ left
[07:53] *** ecocode__ joined
[07:58] *** abraxxa left
[07:58] *** abraxxa joined
[08:01] *** Sgeo_ left
[08:03] *** sm1 joined
[08:05] *** evalable6 joined
[08:05] *** shareable6 joined
[08:05] *** quotable6 joined
[08:05] *** squashable6 joined
[08:21] *** Manifest0 joined
[08:44] *** sm1 left
[08:50] *** dakkar joined
[09:05] *** releasable6 joined
[09:05] *** committable6 joined
[09:08] *** bingos is now known as BinGOs

[09:19] *** sm1 joined
[09:27] *** mjgardner left
[09:27] *** PotatoGim left
[09:28] *** patterner_ left
[09:28] *** rjbs left
[09:28] *** tbrowder left
[09:28] *** zostay left
[09:28] *** leont left
[09:28] *** abraxxa left
[09:29] *** kawaii_ left
[09:29] *** ecocode__ left
[09:29] *** skaji left
[09:29] *** SmokeMachine_ joined
[09:29] *** SmokeMachine left
[09:29] *** pjlsergeant left
[09:29] *** SmokeMachine_ is now known as SmokeMachine

[09:30] *** kawaii_ joined
[09:31] *** patterner_ joined
[09:31] *** leont joined
[09:31] *** ecocode__ joined
[09:31] *** rjbs joined
[09:31] *** tbrowder joined
[09:32] *** zostay joined
[09:32] *** pjlsergeant joined
[09:34] *** skaji joined
[09:42] *** PotatoGim joined
[09:42] *** mjgardner joined
[09:46] *** abraxxa joined
[10:03] *** nativecallable6 joined
[10:04] *** bisectable6 joined
[10:28] *** sm1 left
[10:29] *** sm1 joined
[10:34] *** ircuser is now known as merpaderp

[11:04] *** sourceable6 joined
[11:20] *** ufobat joined
[11:20] *** ufobat left
[11:39] *** Altai-man joined
[11:54] *** andrzejku joined
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:19] *** abraxxa left
[12:20] *** abraxxa joined
[12:24] *** abraxxa left
[12:26] *** abraxxa joined
[12:33] *** atweedie joined
[12:45] *** atweedie left
[12:45] *** atweedie joined
[12:50] <atweedie> m: my @a = 1..4; for @a.kv -> $i, $j { "$i//$j".say }

[12:50] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´0//1‚ê§1//2‚ê§2//3‚ê§3//4‚ê§¬ª

[12:50] <atweedie> m: my @a = 1..4; for ^Inf Z @a -> $i, $j { "$i//$j".say }

[12:50] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´0 1//1 2‚ê§2 3//3 4‚ê§¬ª

[12:51] <atweedie> according to the (12-year old) https://perl6advent.wordpress.com/2009/12/07/day-7-looping-for-fun-and-profit/ the latter should be identical to the first?

[12:54] <frost> m: my @a = 1..4; for (^Inf Z @a).flat -> $i, $j { "$i//$j".say }

[12:54] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´0//1‚ê§1//2‚ê§2//3‚ê§3//4‚ê§¬ª

[13:01] <frost> my @a = 1..4; for ^Inf Z @a -> ($i, $j) { "$i//$j".say }

[13:01] <evalable6> frost, rakudo-moar cca98704a: OUTPUT: ¬´0//1‚ê§1//2‚ê§2//3‚ê§3//4‚ê§¬ª

[13:01] <atweedie> ty! I realize I encountered .flat in the comments of one of the earlier sections. It was mentioned in the context of the Great List Refactor

[13:01] <atweedie> ddg turns up some results on the GLR, so I'll do some reading...

[13:01] <frost> the 2009 version is too old

[13:02] <atweedie> oh that's nicer!

[13:02] <frost> somethings must have be changed, but i don't know, too

[13:03] <frost> the channel is so quiet today

[13:04] <Geth> ¬¶ ecosystem: a4672f8e06 | (Elizabeth Mattijsen)++ | META.list

[13:04] <Geth> ¬¶ ecosystem: Remove Zodiac::Chinese

[13:04] <Geth> ¬¶ ecosystem: 

[13:04] <Geth> ¬¶ ecosystem: It appears to have vanished from existence

[13:04] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/a4672f8e06

[13:04] <atweedie> good to know that's an anomaly

[13:10] <frost> will a new version be released this month?

[13:16] *** frost left
[13:26] <lizmat> .tell frost most likely not

[13:26] <tellable6> lizmat, I'll pass your message to frost

[14:02] *** atweedie left
[14:27] *** sm1 left
[14:43] *** Sgeo joined
[14:51] *** atweedie joined
[14:52] *** atweedie left
[14:52] *** atweedie joined
[15:06] *** sm1 joined
[15:21] *** Colt left
[15:27] *** andrzejku left
[15:32] *** patrickb joined
[15:32] <patrickb> o/

[15:33] <patrickb> codesections: Did you notice: https://github.com/rakudo/rakudo/issues/4611#issuecomment-960553458

[15:43] *** Kaiepi left
[15:59] *** Altai-man left
[16:20] *** andrzejku joined
[16:33] *** andrzejku left
[16:51] *** patrickb left
[16:51] *** patrickb joined
[16:57] *** patrickb left
[16:58] *** patrickb joined
[16:59] *** sm1 left
[17:03] *** patrickb left
[17:04] *** patrickb joined
[17:07] *** patrickb left
[17:08] *** patrickb joined
[17:09] *** patrickb left
[17:10] *** patrickb joined
[17:14] *** patrickb left
[17:14] *** patrickb joined
[17:15] *** patrickb left
[17:23] *** andrzejku joined
[17:24] *** rypervenche left
[17:29] *** atweedie left
[17:29] *** Guest4 joined
[17:35] <Guest4> Bonjour! Is it possible to use the zip operator with an inline function? Something like:

[17:35] <Guest4> m: say <1 2 3> Z[&{$^a + $^b}] <4 4 4>

[17:35] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in bracketed infix; couldn't find final ']' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3say <1 2 3> Z[&7‚èè5{$^a + $^b}] <4 4 4>‚ê§¬ª

[17:36] *** dakkar left
[17:42] <lizmat> m: say <1 2 3> Z[&(* + *)] <4 4 4>   # Guest4 

[17:42] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´(5 6 7)‚ê§¬ª

[17:43] <lizmat> m: say <1 2 3> Z[&({ $^a + $^b })] <4 4 4>    # Guest4 

[17:43] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´(5 6 7)‚ê§¬ª

[17:46] *** sm1 joined
[17:47] <Guest4> thank you lizmat!

[17:48] <MasterDuke> https://github.com/rakudo/rakudo/issues/4423 is related

[17:53] <Guest4> and thank you for the caveat MasterDuke!

[17:53] <MasterDuke> np

[17:58] *** rypervenche joined
[18:02] *** andrzejku left
[18:02] *** reportable6 left
[18:03] *** reportable6 joined
[18:04] <Guest4> okay, one more... why does this produce a Nil either side?

[18:04] <Guest4> m: 'foo'.split("").map(*.ord)

[18:04] <camelia> rakudo-moar cf1ee490c: ( no output )

[18:05] <lizmat> because that's what split dies

[18:05] <lizmat> *does

[18:05] <MasterDuke> m: 'foo'.split("", :skip-empty).map(*.ord).say

[18:05] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´(102 111 111)‚ê§¬ª

[18:05] <lizmat> you probably want .comb

[18:05] <MasterDuke> m: 'foo'.comb.map(*.ord).say

[18:05] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´(102 111 111)‚ê§¬ª

[18:06] <Guest4> Is the intent like C-strings to make a falsy delimiter for loop/construct termination on iteration over?

[18:06] * lizmat has trouble parsing your question

[18:07] <Guest4> Where can I look up why the sequence generated by split creates Nil on either end?

[18:08] <Guest4> There is no mention of Nil at https://docs.raku.org/routine/split

[18:08] <MasterDuke> "If DELIMITER is the empty string, it effectively returns all characters of the string separately (plus an empty string at the begin and at the end)."

[18:08] <Guest4> Thanks, but why?

[18:09] <[Coke]> It's not a Nil, it's an empty string, IIRC.

[18:09] <[Coke]> m: dd 'this'.split('');

[18:09] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´("", "t", "h", "i", "s", "").Seq‚ê§¬ª

[18:10] <[Coke]> :skip-empty is also mentioned in the first few paragraphs.

[18:10] <MasterDuke> i don't actually know why that behavior was decided upon though

[18:10] <Guest4> Okay, thanks.

[18:11] <[Coke]> Very old, and there's a note about it in the p5-raku page, IIRC

[18:12] <lizmat> with "" you're splitting on the boundary between characters.  The first character also have a boundary with the conceptual begin / end of string

[18:12] <lizmat> *and last

[18:13] <lizmat> but there's nothing inbetween

[18:13] <Guest4> Okay. That makes sense.

[18:13] <lizmat> it can be handy on some situations  :-)

[18:13] <Altreus> Raku strikes me as the sort of language to have tokens that mean start of string and end of string

[18:13] <lizmat> ^ and $

[18:13] <Altreus> I mean values, identifiers

[18:14] <MasterDuke> https://github.com/Raku/roast/commit/256d6a924be26b00106c606ffbf0a68d3b5696de is actually a bit more recent than i'd expected

[18:25] *** sm1 left
[18:26] *** Guest4 left
[18:29] *** squashable6 left
[18:30] *** squashable6 joined
[18:37] *** p6steve joined
[19:03] *** andrzejku joined
[19:14] *** p6steve left
[19:16] *** abraxxa left
[19:16] *** abraxxa joined
[19:20] *** p6steve joined
[19:20] *** abraxxa left
[19:20] *** abraxxa joined
[19:20] <lizmat> PSA: the Rakudo Weekly News will be published tomorrow, 23 November 2021

[19:20] *** abraxxa left
[19:27] <p6steve> hi all - can anyone tell me the docker / ubuntu recipe (ie. FROM xxx, RUN yyy) for a fast yet complete rakudo-star install?

[19:27] <p6steve> (ok to point me to somewhere in GitHub that is a good jump off point)

[19:30] <El_Che> p6steve: I just add the repo to a upstream distro image: https://github.com/nxadm/rakudo-pkg#os-repositories

[19:30] <El_Che> (mind you: rakudo+zef, not rakudo-star)

[19:37] <p6steve> El_Che yes ... perfect ... thanks !!

[19:38] <p6steve> (other answers also of interest...)

[19:39] <El_Che> p6steve: one of the use cases was containers because I throught star was not a match (you want small images)

[19:39] <El_Che> p6steve: let me look for the docker image of jj

[19:39] <p6steve> I have the jj images - no need

[19:40] <El_Che> https://github.com/JJ/alpine-raku

[19:40] <p6steve> they are cool for test ... but I want a (small) container image build setup

[19:41] <p6steve> (actually raku + zen is better for what I need)

[19:44] <El_Che> I am interested to hear if there are other options

[19:52] *** goblin left
[19:52] *** gfldex left
[19:52] *** goblin joined
[19:52] *** gfldex joined
[19:53] *** p6steve left
[20:07] *** p6steve joined
[20:13] *** colemanx joined
[20:33] *** andrzejku left
[20:39] *** p6steve left
[20:49] <SmokeMachine> Do you people something like this (https://github.com/FCO/Test-Describe/blob/main/test.rakutest) would make sense on the ecosystem?

[20:56] <lizmat> it feels it lacks in the documentation dept   :-)

[20:56] * lizmat goes afk&

[21:06] *** Kaiepi joined
[21:51] <gfldex> m: say '‚ÖØ‚ÖØ‚Ö©‚Ö©‚Ö†'.Int;

[21:51] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3‚èè5‚ÖØ‚ÖØ‚Ö©‚Ö©‚Ö†' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:51] <discord-raku-bot> <Nemokosch#9980> what the...

[21:52] <gfldex> m: say '‚Ö£'.Int;

[21:52] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3‚èè5‚Ö£' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:52] <discord-raku-bot> <Nemokosch#9980> I mean... should this even work? üòÑ

[21:54] <gfldex> How else am I supposed to count those fine folk? https://i.pinimg.com/originals/9e/7c/8e/9e7c8ea29537870abbfb6afa9fc7c0f6.jpg

[21:54] <discord-raku-bot> <Nemokosch#9980> the hard üëè way üëè

[21:55] <gfldex> Given that years are still frequently¬π written in roman numerals, there is good reason to support that.

[21:56] <gfldex> ¬π) by film studios to hide the fact of reruns

[21:56] <discord-raku-bot> <Nemokosch#9980> https://www.rosettacode.org/wiki/Roman_numerals/Decode#Raku

[21:57] <gfldex> m: say Date.new(‚ÖØ‚Ö©‚Ö©‚Ö†);

[21:57] <camelia> rakudo-moar cf1ee490c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3say Date.new(‚ÖØ7‚èè5‚Ö©‚Ö©‚Ö†);‚ê§    expecting any of:‚ê§        ‚Ä¶¬ª

[22:06] *** evalable6 left
[22:06] *** linkable6 left
[22:07] *** linkable6 joined
[22:28] <tbrowder> i think there is a module for roman numerals...maybe perl if not raku

[22:29] <tbrowder> Math::Roman

[22:30] <tbrowder> raku

[22:38] <gfldex> That module doesn't talk unicode.

[22:42] *** sm1 joined
[22:54] *** Geth__ joined
[22:54] *** TempIRCLogger left
[22:54] *** Geth left
[22:54] *** Geth__ left
[22:54] *** Geth joined
[22:54] *** lizmat left
[22:55] *** lizmat_ left
[22:55] *** lizmat joined
[23:07] *** evalable6 joined
[23:20] *** squashable6 left
[23:27] *** Guest495 joined
[23:43] *** sm1 left
[23:45] <tbrowder> maybe time for a PR

