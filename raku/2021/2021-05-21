[00:02] *** reportable6 left
[00:04] *** reportable6 joined
[00:08] *** aborazmeh left
[00:31] *** canbenshanlo joined
[00:35] <canbenshanlo> general noob question: why is EVAL in raku so much slower than in ruby, for example? seeing something like 35s vs 12ms for the same task in both languages while evaling thousands of individual expressions. Is raku fireing off a huge machinery behind the scenes for each and every EVAL?

[00:35] <tellable6> 2021-05-15T02:50:47Z #raku <tonyo> canbenshanlo you're likely hitting an issuer with the scheduler filling the pool and blocking the main loop, look at $*SCHEDULER.max_threads and don't hit that limit, see if that fixes your issue.

[00:36] <canbenshanlo> oh, good to know. $*SCHEDULER.max_threads is 64, way below my requirements. reimplemented it in ruby and their new ractors, no issue so far

[00:40] <leont> In general, compilation is Raku's performance weak spot

[00:40] <leont> And EVAL is obviously doing lots of compilation

[00:41] <ugexe> RAKUDO_MAX_THREADS env var can change the max threads

[00:41] <japhb> canbenshanlo: Rakudo uses a thread pool model.  max_threads is how man *operating system* threads it will max out at (and that number is configurable), but it can have an arbitrary number of tasks waiting for those threads.

[00:41] <japhb> *how many

[00:45] <raydiak> raku has an extremely broad dynamic range, lots and lots of syntax. additionally, the syntax is extensible. because of these things, the parser has to be fairly hefty, and can make far fewer assumptions than most languages. on top of that, the raku parser is written in raku (vs ruby which is entirely implemented in C from what I understand). we usually get around the slowness by precompiling to bytecode, but of

[00:45] <raydiak> course there is no persistent precomp cache for EVALd strings

[00:46] <b2gills> The RakuAST should make it possible to make EVAL faster as it might not have to fully compile the code before running it

[00:49] <canbenshanlo> thanks, everyone, for the explanations! will keep reading the weekly and hoping for more news on the perf front.

[00:54] <raydiak> of course! I am curious, what is your use case for evaling thousands of expressions? other than as a synthetic benchmark, that sounds...concerning :)

[00:54] <canbenshanlo> raydiak: "the syntax is extensible" -- how so? is that similar to common lisp's reader macros where i can overwrite the evaluation of tokens while compiling?

[00:54] <canbenshanlo> oh, i'm just doing advent of code in raku; my way of learning a new language

[00:54] <raydiak> oh, cool

[00:56] <canbenshanlo> input has a bunch of these expressions feeding a small register machine: "k inc 303 if k > -8"

[00:56] <canbenshanlo> a bit of gsub/trans and you are good to go to EVAL the whole damn thing

[00:57] <raydiak> I'm not familiar enough with lisp to compare, but you can define your own terms and operators, for example. with a slang you can do more than that, I believe it hooks directly into the main grammar so you can add or redefine grammar rules

[01:00] <canbenshanlo> ah, just found this, sounds interesting: https://perl6advent.wordpress.com/2013/12/16/day-16-slangs/

[01:00] <canbenshanlo> will read more into it later

[01:00] <canbenshanlo> thanks!

[01:00] <raydiak> you're welcome :)

[01:04] *** lucasb left
[01:06] *** frost-lab joined
[01:08] <raydiak> m: sub postfix:<!>(Int:D $n where * > 0) { [*] 1..$n }; say 4! # simple example of a user-defined factorial syntax, just for fun

[01:08] <camelia> rakudo-moar face292a0: OUTPUT: «24␤»

[01:10] *** |Sno| joined
[01:11] *** [Sno] left
[01:23] <canbenshanlo> yeah, familar with that, but way more intrigued about the slang grammer redefinitions. will get into it tomorrow when i have some downtime

[01:24] *** kvw_5 joined
[01:27] *** kvw_5_ left
[01:33] *** ggoebel left
[01:35] <raydiak> I mean it more as just one small example of extensibility in answer to your question about slowness. think about what that kind of thing requires in terms of parser complexity. much of the core syntax is implemented the same way. where a usual parser can just look for a static set of symbols in certain positions and infer a certain semanic, raku's parser has to do substantially more dynamic magic. it doesn't

[01:35] <raydiak> know that syntax until after it parses and compiles the definition (which in this example is even in the same compilation unit as where it's being used)

[01:59] * raydiak looks back at his advent article and cringes

[01:59] <canbenshanlo> while ruby has no syntax altering capabilities like that, it still has its fair share of dynamic magic. guess time will tell how people will wield all this additional hundred-year-language power that brings more complexity to the table. reader macros weren't really used all that much in the glory common lisp days

[02:00] <canbenshanlo> then again, racket peeps have the time of their lives with the lang support

[02:00] <raydiak> .oO( shoulda just called that article "how to abuse classes and alienate professionals" )

[02:01] <raydiak> yeah honestly I don't know very much about ruby either, I can't give you a good comparison of their respective strengths and weaknesses

[02:03] <raydiak> I recall ruby having perl-like sigils and everything is an object. that's most of what I know about it besides skimming the wikipedia article

[02:09] <raydiak> so far, slangs haven't seen a lot of use that I'm aware of. most of https://modules.raku.org/search/?q=slang look like toys/experiments more than being meant for serious use. the Slang::SQL being one obvious exception. the potential is there to do some really cool stuff, though

[02:10] <canbenshanlo> ruby has @class-instance, @@class-static, $global and &block sigils and such, but it's mainly plain old identifier. oh, and don't forget smart-matching. some of these ruby-to-raku translation basicially means adding a few raku sigils here and there and rename some methods. other times i'm struggling more when i'm seeing surprising console output and can't, for the love of me, identify the problem, because raku behaves "wierdly"

[02:14] <canbenshanlo> skimming over the slang-sql examples, that looks similar to what some racket peeps are cooking up with their custom language support. will get into that tomorrow, brain is fried today

[02:15] <raydiak> I imagine translating between similar-looking languages with different semantics being rather confusing at times

[02:17] <canbenshanlo> sure, in a major project perhaps, but i'm just toying around with small scripts, no problem here. and ruby is surprisingly perl-like in some aspects, easing the transition

[02:18] *** rindolf joined
[02:26] <raydiak> makes sense. I read somewhere that perl was one of the larger influences/inspirations of ruby

[02:33] <canbenshanlo> and by "weirdly" i mean stuff like this, that catches me off-guard every now and then while translating a solution over to raku

[02:34] <canbenshanlo> ruby: a = (1..5).to_a; b = {}; b[a] = true; puts b; #=> {[1, 2, 3, 4, 5]=>true}

[02:34] <canbenshanlo> m: my @a = (1..5); my %b; %b{@a} = True; say %b

[02:34] <camelia> rakudo-moar face292a0: OUTPUT: «{1 => True, 2 => (Any), 3 => (Any), 4 => (Any), 5 => (Any)}␤»

[02:37] <raydiak> ah...yes our hashes are keyed by strings by default

[02:38] <raydiak> m: my @a = (1..5); my %b{Any}; %b{$@a} = True; say %b

[02:38] <camelia> rakudo-moar face292a0: OUTPUT: «{[1 2 3 4 5] => True}␤»

[02:39] <raydiak> and the subscript is a list context, for slicing. so you have to itemize if you don't meant to taking a slice

[02:40] <raydiak> slicing is a really nice feature, though

[02:41] <raydiak> m: my @a = (1..5); my %b; %b{@a} = "a"..*; say %b

[02:41] <camelia> rakudo-moar face292a0: OUTPUT: «{1 => a, 2 => b, 3 => c, 4 => d, 5 => e}␤»

[02:42] <guifa2> raydiak: indeed, slangs are going ot be very cool.  I have a pretty crazy slang I've been working on, but I'm waiting until RakuAST to finish off my work because I don't want to have to duplicate a lot of stuff

[02:42] <raydiak> really nice that is, except when that's not what you meant to do :)

[02:43] <guifa2> Anyone have any idea what "Frame has no lexical with name '$_'" might mean as a runtime error?

[02:44] <guifa2> What triggers it is adding a method to a class via a trait

[02:45] <raydiak> guifa2: I look forward to seeing this very cool thing. last I heard we were *hoping* rakuast might be merged Q4 this year

[02:45] <guifa2> raydiak: it's a binary and object (two separate slangs, really) regex

[02:46] <raydiak> oh, neat. I can see that being useful in several places

[02:46] <raydiak> can you pastebin your problem? I have no idea off the top of my head, but I'd poke at it if you have a small example of the failure

[02:55] <raydiak> disclaimer: I'm being told it's almost dinner time

[02:57] <canbenshanlo> raydiak: there's no sexy slicing like that in ruby, instead you would do the following to achieve the same: a = (1..5).to_a; b = {}; b.merge a.zip('a'..).to_h

[02:58] <canbenshanlo> alright, enough for today; bed time

[02:58] <canbenshanlo> thanks for your time!

[03:05] *** canbenshanlo left
[04:05] *** shareable6 left
[04:05] *** reportable6 left
[04:05] *** bloatable6 left
[04:05] *** squashable6 left
[04:05] *** releasable6 left
[04:05] *** benchable6 left
[04:05] *** linkable6 left
[04:05] *** evalable6 left
[04:05] *** committable6 left
[04:05] *** nativecallable6 left
[04:05] *** coverable6 left
[04:05] *** tellable6 left
[04:05] *** notable6 left
[04:05] *** unicodable6 left
[04:05] *** sourceable6 left
[04:05] *** quotable6 left
[04:05] *** greppable6 left
[04:05] *** statisfiable6 left
[04:05] *** bisectable6 left
[04:05] *** nativecallable6 joined
[04:05] *** sourceable6 joined
[04:05] *** coverable6 joined
[04:06] *** committable6 joined
[04:06] *** notable6 joined
[04:06] *** greppable6 joined
[04:06] *** releasable6 joined
[04:06] *** tellable6 joined
[04:06] *** evalable6 joined
[04:06] *** unicodable6 joined
[04:07] *** bloatable6 joined
[04:07] *** reportable6 joined
[04:07] *** quotable6 joined
[04:07] *** benchable6 joined
[04:07] *** linkable6 joined
[04:08] *** statisfiable6 joined
[04:08] *** bisectable6 joined
[04:08] *** shareable6 joined
[04:08] *** squashable6 joined
[04:37] *** solitario joined
[05:37] *** statisfiable6 left
[05:37] *** notable6 left
[05:37] *** coverable6 left
[05:37] *** greppable6 left
[05:37] *** nativecallable6 left
[05:37] *** bloatable6 left
[05:37] *** shareable6 left
[05:37] *** benchable6 left
[05:37] *** releasable6 left
[05:37] *** committable6 left
[05:37] *** linkable6 left
[05:37] *** unicodable6 left
[05:37] *** sourceable6 left
[05:37] *** bisectable6 left
[05:37] *** quotable6 left
[05:37] *** tellable6 left
[05:37] *** evalable6 left
[05:37] *** reportable6 left
[05:37] *** squashable6 left
[05:38] *** shareable6 joined
[05:38] *** committable6 joined
[05:38] *** evalable6 joined
[05:39] *** unicodable6 joined
[05:39] *** statisfiable6 joined
[05:39] *** notable6 joined
[05:39] *** nativecallable6 joined
[05:39] *** releasable6 joined
[05:39] *** linkable6 joined
[05:39] *** greppable6 joined
[05:39] *** quotable6 joined
[05:39] *** tellable6 joined
[05:40] *** bisectable6 joined
[05:40] *** reportable6 joined
[05:40] *** squashable6 joined
[05:40] *** wamba joined
[05:40] *** sourceable6 joined
[05:40] *** bloatable6 joined
[05:40] *** benchable6 joined
[05:40] *** coverable6 joined
[05:49] *** domidumont joined
[05:58] *** aborazmeh joined
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[06:12] *** ufobat__ joined
[06:41] *** squashable6 left
[06:44] <tyil> raydiak: re: Libera, the Perl mods are more politically involved in the move, so they're putting more hurry on it, however, there's no Matrix bridge (yet) for instance, which is something we probably want since some people in our community only use Matrix, and I don't want to shut them out over some petty staff politics

[06:44] *** squashable6 joined
[06:51] *** jmerelo joined
[06:54] *** Sgeo left
[07:03] <raydiak> fair enough. not having used matrix personally, I had assumed that was a simple matter of switching some config on our end to point to libera instead of freenode. reading up on it now, I see that I was mistaken

[07:04] <tadzik> it's a bit more involved since the config is on on our end ;)

[07:06] <raydiak> that's what I gathered from https://github.com/matrix-org/matrix-appservice-irc/issues/1324 among other things I'm skimming. thanks for the clarification

[07:06] <tyil> the Libera and Matrix folk are working on it, but there's no schedule yet since it's a little hectic there

[07:07] <raydiak> I can only imagine

[07:26] *** brtastic joined
[07:33] *** brtastic left
[07:43] *** pecastro joined
[07:50] *** ufobat__ left
[08:07] *** sena_kun left
[08:11] *** sena_kun joined
[08:16] *** aborazmeh left
[08:21] *** hankache joined
[08:40] *** mowcat joined
[08:53] *** xinming_ left
[08:57] *** Voldenet_ joined
[08:58] *** Voldenet left
[09:00] *** Garland_g[m] left
[09:06] *** aborazmeh joined
[09:09] *** wamba left
[09:10] *** Voldenet_ is now known as Voldenet

[09:10] *** Voldenet left
[09:10] *** Voldenet joined
[09:16] *** nige joined
[09:24] *** wamba joined
[09:25] *** nige left
[09:25] *** nige joined
[09:30] *** nige left
[09:30] *** nige joined
[09:31] *** mowcat left
[09:48] *** wamba left
[09:48] *** wamba joined
[09:50] *** nige left
[09:50] *** nige joined
[09:54] *** aborazmeh left
[09:55] *** nige left
[09:55] *** nige joined
[10:08] <El_Che> "petty staff politics"? weird phrasing for the taking over of a network

[10:15] *** ggoebel joined
[10:23] *** nige left
[10:23] *** ggoebel left
[10:28] <Voldenet> seems like petty staff politics tho https://freenode.net/news/freenode-is-foss

[10:32] <El_Che> yeah, that's the guy who did the hostile takeover

[10:36] <Voldenet> since I can't do anything, I'll just treat it as natural disaster

[10:40] *** |Sno| left
[10:40] *** hankache left
[10:40] *** hankache joined
[10:42] *** hankache left
[10:42] *** hankache joined
[10:50] <El_Che> that's the thing. People moved to libra and oftc

[10:59] *** |Sno| joined
[10:59] *** hankache left
[11:05] *** Bucciarati left
[11:10] *** broquaint left
[11:11] *** broquaint joined
[11:18] *** broquain1 joined
[11:18] *** broquain1 left
[11:40] *** avar left
[11:41] *** avar joined
[11:41] *** avar left
[11:41] *** avar joined
[11:41] *** avar left
[11:42] *** avar joined
[11:42] *** avar left
[11:42] *** avar joined
[11:42] *** avar left
[11:43] *** avar joined
[11:43] *** avar left
[11:43] *** avar joined
[11:57] *** hankache joined
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:25] *** jmerelo left
[12:25] *** hankache left
[12:59] *** asymptotically joined
[13:06] *** |Sno| left
[13:14] *** canbenshanlo joined
[13:58] *** realdonutking123 joined
[14:00] *** realdonutking123 left
[14:11] *** gugod joined
[14:22] *** abraxxa left
[14:27] *** domidumont left
[14:29] *** domidumont joined
[14:36] <canbenshanlo> what's the reason behind this not working the same as the following two?

[14:36] <canbenshanlo> m: .say for <abc def xy yz>.categorize(*.chars).max.value

[14:36] <camelia> rakudo-moar face292a0: OUTPUT: «[abc def]␤»

[14:36] <canbenshanlo> m: <abc def xy yz>.categorize(*.chars).max.value.map(*.say)

[14:36] <camelia> rakudo-moar face292a0: OUTPUT: «abc␤def␤»

[14:37] <canbenshanlo> m: .say for <abc def xy yz>.categorize(*.chars).max.value.List

[14:37] <camelia> rakudo-moar face292a0: OUTPUT: «abc␤def␤»

[14:37] <canbenshanlo> why isn't for iterating over the individual array values when it does so with @foo?

[14:41] *** thundergnat joined
[14:42] <thundergnat> canbenshanlo: The first is returning a single item (an Array), the second explicitly iterates over the returned array and the third is returning an already flattened List.

[14:43] <thundergnat> m:.say for flat <abc def xy yz>.categorize(*.chars).max.value

[14:43] <evalable6> thundergnat, rakudo-moar face292a0: OUTPUT: «abc␤def␤»

[14:43] <thundergnat> ^^^ if you flatten the Array it iterates over it

[14:44] *** wamba left
[14:45] <canbenshanlo> hm, so Arrays and @arr are different then. guess i have to go over the docs again. thanks!

[14:46] *** frost-lab left
[14:46] <thundergnat> You may also be getting confused by the single argument rule

[14:47] <thundergnat> m: my @foo = <a b c>; my @bar = <D E F>; .say for @foo; .say for @foo, @bar;

[14:47] <camelia> rakudo-moar face292a0: OUTPUT: «a␤b␤c␤[a b c]␤[D E F]␤»

[14:48] *** lucasb joined
[14:49] <thundergnat> When you feed a single collective argument, it treats it as a collection and iterates over it, but when you feed multiple collective arguments, it treats each as a single "element" unless explicitly flattened.

[14:50] <thundergnat> It's a little confusing but it allows for syntax that was heavily ingrained in the Perl installed base.

[14:52] <thundergnat> Without it, something like this wouldn't work as expected:

[14:52] <canbenshanlo> erm, stupid questions: why is the above arrary (single item, as you said) not treated as a iterable then?

[14:52] <thundergnat> m: my @foo = <a b c>; my @bar = @foo; .say for @bar;

[14:52] <camelia> rakudo-moar face292a0: OUTPUT: «a␤b␤c␤»

[14:53] <thundergnat> m: my @foo = <a b c>; my @baz = <D E F>; my @bar = @foo, @baz; .say for @bar;

[14:53] <camelia> rakudo-moar face292a0: OUTPUT: «[a b c]␤[D E F]␤»

[14:54] *** |Sno| joined
[14:56] <canbenshanlo> hm, guess i get it. still strange coming from ruby where the above "just works". thanks!

[14:56] <thundergnat> In that above case, the .say method has explicit candidates for both scalar (single) values and for Arrays. categorize returns an array. (In this case it only holds one item)

[14:57] <thundergnat> Single argument rule is sometimes confusing, but it makes other things "just work"

[14:58] <thundergnat> Opps, cut my thought short. categorize returns an array of arrays

[15:00] <vrurg> categorize returns a Hash. Not an array.

[15:00] <vrurg> m: say <abc def xy yz>.categorize(*.chars)

[15:00] <camelia> rakudo-moar face292a0: OUTPUT: «{2 => [xy yz], 3 => [abc def]}␤»

[15:01] <vrurg> Apparently, Hash and Array behave differently when iterated over.

[15:01] <lizmat> Hash produces pairs when iterated over

[15:02] <vrurg> canbenshanlo: when you get into such kind of situation, try unwinding the method call chain back up to the common point of two chains. And then introspect the data you get. .WHAT/.WHICH/etc.

[15:04] <canbenshanlo> well, what's returned is an array

[15:04] <canbenshanlo> m: say <abc def xy yz>.categorize(*.chars).max.value.WHAT

[15:04] <camelia> rakudo-moar face292a0: OUTPUT: «(Array)␤»

[15:04] <canbenshanlo> that's why i am confused

[15:04] <canbenshanlo> not the intermediate steps

[15:05] <vrurg> m: say <abc def xy yz>.categorize(*.chars).max.value.raku

[15:05] <camelia> rakudo-moar face292a0: OUTPUT: «$["abc", "def"]␤»

[15:05] <thundergnat> actually .max returns a pair whose value is an array

[15:06] <thundergnat> vrurg is absolutely correct and I was wrong (should have reviewed the docs before speaking) .categorize returns a hash

[15:06] *** Sgeo joined
[15:07] <vrurg> canbenshanlo: Also, notice the $ before [. It means you array is itemized. I.e. for considers it a single element.

[15:07] <vrurg> say <abc def xy yz>.categorize(*.chars).max.value.VAR.^name

[15:07] <evalable6> vrurg, rakudo-moar face292a0: OUTPUT: «Scalar␤»

[15:07] <vrurg> say <abc def xy yz>.categorize(*.chars).max.value<>.VAR.^name

[15:07] <evalable6> vrurg, rakudo-moar face292a0: OUTPUT: «Array␤»

[15:07] <vrurg> canbenshanlo: See the differnce. And then:

[15:08] <vrurg> m: .say for <abc def xy yz>.categorize(*.chars).max.value<>

[15:08] <camelia> rakudo-moar face292a0: OUTPUT: «abc␤def␤»

[15:08] <vrurg> Or, another way, though somewhat slower:

[15:08] <vrurg> m: .say for <abc def xy yz>.categorize(*.chars).max.value.List

[15:08] <camelia> rakudo-moar face292a0: OUTPUT: «abc␤def␤»

[15:08] *** brtastic joined
[15:08] * vrurg is afk&

[15:11] <canbenshanlo> yeah, that's what i gathered from the exchange with thundergnat. but good to know about this representation: $["abc", "def"]

[15:11] <canbenshanlo> thanks!

[15:15] *** thundergnat left
[15:42] *** nevore joined
[16:08] *** mowcat joined
[16:11] <andinus> m: my $x=2; my $y=1; my $z = $y = $x + 9; say "x $x y $y z $z"

[16:11] <camelia> rakudo-moar face292a0: OUTPUT: «x 2 y 11 z 11␤»

[16:12] <andinus> how does this work?

[16:13] <tobs> assignment is right-associative. It is executed as $z = ($y = $x + 9). The assignment to $y modifies $y and returns the assigned value.

[16:13] <andinus> m: (my $y = 1)

[16:13] <camelia> rakudo-moar face292a0: ( no output )

[16:14] <andinus> then shouldn't this throw an error? because assignment returns the assigned value?

[16:14] <tobs> you just ignore the value, that's not an error

[16:14] <andinus> m: my $x = 1; $x;

[16:14] <camelia> rakudo-moar face292a0: OUTPUT: «WARNINGS for <tmp>:␤Useless use of $x in sink context (line 1)␤»

[16:14] <andinus> ^ this eror, useless use ?

[16:15] <tobs> that's a warning, not an error, but presumably declaring the variable with `my` prevents it

[16:16] <tobs> m: say my $y = 1  # it still returns the value, though

[16:16] <camelia> rakudo-moar face292a0: OUTPUT: «1␤»

[16:20] *** aluaces left
[16:20] <andinus> i see

[16:32] *** DarthGandalf left
[16:32] *** DarthGandalf joined
[16:37] *** DarthGandalf left
[16:37] *** Some-body_ joined
[16:37] *** domidumont left
[16:39] *** Some-body_ is now known as DarthGandalf

[16:46] *** nevore left
[17:01] *** stigo left
[17:02] *** stigo joined
[17:05] *** perigrin left
[17:05] *** perigrin joined
[17:08] *** cog left
[17:09] *** cog joined
[17:14] <nine> raydiak: about RSC discussions vs. the minutes I can honestly say that you're not missing out on anything. Of course the minutes don't cover every spoken word, but those words are simply highly redundant.

[17:15] <nine> It's a bunch of people discussing the matters stated in the minutes. So most of it is just people trying to find the right words to get the intended meaning across. And we catch the meaning into the minutes

[17:16] *** aluaces joined
[17:20] *** aborazmeh joined
[17:38] *** timlegge_ left
[17:41] *** aborazmeh left
[18:02] *** reportable6 left
[18:02] *** reportable6 joined
[18:03] *** stigo left
[18:03] *** stigo joined
[18:06] *** brass left
[18:08] *** brass joined
[18:16] *** Altreus left
[18:21] *** hobbs left
[18:31] *** brtastic left
[18:37] *** Black_Ribbon joined
[18:38] *** aborazmeh joined
[18:51] *** MasterDuke joined
[18:55] *** sftp joined
[19:14] *** linkable6 left
[19:14] *** linkable6 joined
[19:15] *** linkable6 left
[19:15] *** tellable6 left
[19:15] *** evalable6 left
[19:15] *** shareable6 left
[19:16] *** tellable6 joined
[19:16] *** evalable6 joined
[19:17] *** linkable6 joined
[19:18] *** shareable6 joined
[19:18] *** linkable6 left
[19:21] *** linkable6 joined
[19:25] *** mowcat left
[19:27] *** shareable6 left
[19:27] *** nativecallable6 left
[19:27] *** evalable6 left
[19:27] *** linkable6 left
[19:27] *** greppable6 left
[19:27] *** bisectable6 left
[19:27] *** unicodable6 left
[19:27] *** reportable6 left
[19:27] *** squashable6 left
[19:27] *** benchable6 left
[19:27] *** statisfiable6 left
[19:27] *** committable6 left
[19:27] *** sourceable6 left
[19:27] *** bloatable6 left
[19:27] *** releasable6 left
[19:27] *** coverable6 left
[19:27] *** quotable6 left
[19:27] *** tellable6 left
[19:27] *** notable6 left
[19:47] <codesect`> .

[19:47] *** nativecallable6 joined
[19:48] *** bisectable6 joined
[19:48] *** codesect` left
[19:48] *** notable6 joined
[19:48] *** sourceable6 joined
[19:48] *** releasable6 joined
[19:48] *** codesections joined
[19:49] *** squashable6 joined
[19:49] *** coverable6 joined
[19:49] *** evalable6 joined
[19:49] *** tellable6 joined
[19:49] *** greppable6 joined
[19:49] *** committable6 joined
[19:49] *** shareable6 joined
[19:49] *** quotable6 joined
[19:50] *** reportable6 joined
[19:50] *** benchable6 joined
[19:50] *** bloatable6 joined
[19:50] *** unicodable6 joined
[19:50] *** linkable6 joined
[19:50] *** statisfiable6 joined
[20:01] <raydiak> nine: I'll keep that in mind, though I still don't see a reason not to make the logs available. it's literally just a minute or two of effort for someone to copy their log and toss it up on github (stipulating the hopefully very rare need to hand-redact a sensitive issue). I still feel that this is a distinct lack of transparency no matter how we spin it. I doubt it's any more confused than the rest of our more

[20:01] <raydiak> public discussions; why is this regarded so differently?

[20:01] *** ltl_ joined
[20:01] *** ltl_ left
[20:02] <kybr> ummm.

[20:02] <sienet_ja_LSD[m]> oh noes

[20:02] <Grinnz> just spammers trying to piss off both networks, carry on

[20:02] <kybr> is that what they call a false flag operation?

[20:03] <sienet_ja_LSD[m]> you can expect that spam action in the new network

[20:03] <El_Che> the dropped the child pornography part it seems

[20:04] <ugexe> ya know they could have went to the effort to say this channel moved to the same channel name its in

[20:04] <kybr> yes. crumby execution

[20:05] <kybr> was the slow posting to get past some sort of anti-pasting filter?

[20:07] <Grinnz> rate limiting to avoid being klined automatically, probably

[20:13] *** MasterDuke left
[20:13] *** MasterDuke joined
[20:16] *** demsh9 joined
[20:17] <sienet_ja_LSD[m]> :<

[20:17] *** demsh9 left
[20:17] *** canbenshanlo left
[20:28] <[Coke]> Do we have a libera contact regarding this sort of thing, or do we have to self-police?

[20:28] <[Coke]> oops. I see I meant freenode. (ETOOMANYIRCS)

[20:29] <leont> The entire freenode staff resigned, so probably not

[20:29] <[Coke]> what sad, pathetic people.

[20:29] <[Coke]> ... bad timing, I mean the spammers, not the staff!

[20:29] <Grinnz> :)

[20:30] <leont> I bet there's some replacement, but I can't imagine them being well-staffed and well-trained enough to handle this

[20:30] <tbrowder> agree, 'bout the spammers

[20:30] <tbrowder> probably still in parents' basement

[20:32] <raydiak> how is this handled when the offender is switching nicks, IPs, and providers?

[20:33] *** brtastic joined
[20:35] *** brtastic left
[20:37] *** abraxxa-home joined
[20:38] <[Coke]> I'm all for leaving IRC and using a different chat system, btw.

[20:40] *** sgo joined
[20:41] *** stigo left
[20:42] *** abraxxa-home left
[20:43] *** abraxxa-home joined
[20:44] *** dgonyeo4 joined
[20:44] *** dgonyeo4 left
[20:45] <Geth> ¦ doc: 574dc4a0ec | Coke++ | xt/pws/words.pws

[20:45] <Geth> ¦ doc: new irc network name

[20:45] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/574dc4a0ec

[20:45] <Geth> ¦ doc: de51563d16 | Coke++ | doc/Language/operators.pod6

[20:45] <Geth> ¦ doc: can't test this snippet

[20:45] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/de51563d16

[20:45] <linkable6> Link: https://docs.raku.org/language/operators

[20:48] *** akraut25 joined
[20:48] *** akraut25 left
[20:52] <[Coke]> :(

[20:52] *** [Coke] left
[20:58] *** Platypuschan5 joined
[21:00] <raydiak> can't even spell "libera"...

[21:11] *** abraxxa-home left
[21:12] *** abraxxa-home joined
[21:13] *** b2gills left
[21:15] *** b2gills joined
[21:15] *** asymptotically left
[21:15] *** asymptotically joined
[21:20] *** gabiruh left
[21:20] *** gabiruh joined
[21:22] *** eb0t joined
[21:23] *** eb0t left
[21:24] *** aborazmeh left
[21:27] *** leont left
[21:33] *** asymptotically left
[21:35] *** xelxebar left
[21:35] *** xelxebar joined
[21:36] *** Hien12 joined
[21:36] *** aborazmeh joined
[21:36] *** Hien12 left
[21:42] *** likivik-M16 joined
[21:42] *** likivik-M16 left
[21:43] <Nasrudin> I'd like to take this time to mention matrix.org :)

[21:52] *** zostay left
[21:53] *** spycrab0 left
[21:53] *** lucasb left
[21:53] *** wamba joined
[21:54] *** kawaii left
[21:55] *** peteretep left
[21:57] *** Grinnz left
[21:58] *** AlexDaniel joined
[21:59] *** kawaii joined
[21:59] *** lucasb joined
[21:59] *** zostay joined
[21:59] *** spycrab0 joined
[21:59] *** Grinnz joined
[21:59] *** peteretep joined
[22:00] *** Nasrudin left
[22:04] <AlexDaniel`> hehe :)

[22:06] <AlexDaniel`> Dave: not that it matters, but I do agree (right, speaking from Matrix right now), but I don't know how well matrix.org servers themselves can handle

[22:06] <AlexDaniel`> in the past they used to be slow

[22:06] <AlexDaniel`> like, really slow. Type your message, wait a few seconds before others see it

[22:07] <AlexDaniel`> freenode bridge is through the matrix.org servers too, so oops…

[22:07] *** GNU\colossus20 joined
[22:07] *** GNU\colossus20 left
[22:07] <El_Che> spammers are annouing and so obviously false :)

[22:08] *** ChanServ sets mode: +o AlexDaniel

[22:08] <AlexDaniel> OK let's see if this time I'll be a bit quicker…

[22:09] <AlexDaniel> macro ready

[22:17] *** asok joined
[22:17] *** asok left
[22:18] *** Pyrus20 joined
[22:18] *** Pyrus20 left
[22:19] *** aborazmeh left
[22:25] *** wamba left
[22:34] *** abhixec joined
[22:34] *** abhixec was kicked by AlexDaniel (Kicked by AlexDaniel))
[22:34] <AlexDaniel> hmm

[22:35] <AlexDaniel> ok maybe it's time to bring back the bot

[22:40] *** HarmtH left
[22:55] *** maedox18 joined
[22:55] *** maedox18 was kicked by AlexDaniel (Kicked by AlexDaniel))
[23:03] <sienet_ja_LSD[m]> yes

[23:03] <AlexDaniel`> haa, more matrix users 🤗

[23:04] <sienet_ja_LSD[m]> I was kind of resisting at first but now I see its point

[23:04] <AlexDaniel`> I've been using it as my main means of communication for years now

[23:04] <AlexDaniel`> at first it was absolutely horrible 🤐

[23:04] <sienet_ja_LSD[m]> hehe

[23:05] <AlexDaniel`> nowadays it's absolutely alright

[23:05] <AlexDaniel`> I don't do group calls so can't comment on that

[23:06] <AlexDaniel`> 1-to-1 calls are fine when my own turnserver is not acting weird…

[23:06] <AlexDaniel`> oh, and yeah, I do run my own homeserver, and that is probably part of my positive experience

[23:06] <sienet_ja_LSD[m]> yea setting up a server of my own would be something to look at

[23:08] <AlexDaniel`> this year I tried to get someone to try matrix… they made an account on matrix.org (which was easy), and then matrix.org immediately had issues

[23:08] <AlexDaniel`> don't know if it was planned maintenance or what, but we couldn't message each other for a few minutes

[23:08] <AlexDaniel`> 🤦‍♂️

[23:08] <sienet_ja_LSD[m]> aye seems like it's been growing a lot 

[23:09] *** blueness6 joined
[23:09] *** canbenshanlo joined
[23:09] *** blueness6 was kicked by AlexDaniel (Kicked by AlexDaniel))
[23:09] *** Manifest0 left
[23:09] <AlexDaniel> damn that one was sending messages so fast

[23:09] <AlexDaniel> no way to do it without a bot

[23:10] <AlexDaniel`> sienet_ja_LSD: OK you don't see that

[23:10] <AlexDaniel`> and that part is weird.

[23:10] <AlexDaniel`> like, what is going on there. The spammer joined the channel, sent some messages…

[23:10] <canbenshanlo> oh, they are still going? :(

[23:10] <AlexDaniel`> but why don't we see it in matrix?

[23:11] <sienet_ja_LSD[m]> there were some that I saw, yes

[23:11] <AlexDaniel`> and that's a longstanding issue of the matrix-freenode bridge – some messages are just not passed over

[23:12] <AlexDaniel`> I think all Matrix messages are sent to freenode, but not all freenode messages appear in matrix

[23:12] <sienet_ja_LSD[m]> aye that's an issue, but conveniently this channel works, but I have a couple of other channels that I need to back check if the messages have gone through

[23:12] <AlexDaniel`> yep, it's convenient enough that nowadays I don't use a normal IRC client anymore

[23:13] <AlexDaniel`> being able to send a few messages to IRC from a phone when needed is really convenient

[23:13] *** canbenshanlo left
[23:14] *** Manifest0 joined
[23:15] *** abraxxa-home left
[23:20] *** sjourdan[m]1 joined
[23:20] *** sjourdan[m]1 was kicked by AlexDaniel (Kicked by AlexDaniel))
[23:20] <AlexDaniel> ugh

[23:20] * guifa2 just made his first custom HOW + declarator

[23:20] <guifa2> I think GTK + custom declarators will be a pretty sweet combination

[23:20] <AlexDaniel> OK friends we might need a bot for this situation…

[23:20] * guifa2 pokes tyil 

[23:22] <AlexDaniel> what we did last time when freenode was spammed to hell: we set +m so that only voiced users can speak

[23:22] <AlexDaniel> then also +z so that ops can still see the messages

[23:22] <AlexDaniel> created a bot who was opped, waiting for users to join and send a message

[23:22] <AlexDaniel> if someone joined and sent a message right away, they were not voiced

[23:23] <AlexDaniel> if they were quiet for a minute or so, then +v was given

[23:23] <AlexDaniel> it wasn't entirely perfect but it did the trick fantastically well

[23:25] <AlexDaniel> let's see

[23:26] <AlexDaniel> I found the bot

[23:26] *** tru_tru joined
[23:27] *** tru_tru was kicked by AlexDaniel (Kicked by AlexDaniel))
[23:29] *** timewasteable6 joined
[23:29] *** timewasteable6 left
[23:30] *** AlexDaniel is now known as timewasteable6

[23:30] <guifa2> hmm, this is weird.  adding a method 'new' via .^add_method('new', method { … } is bombing pretty hard

[23:31] *** timewasteable6 is now known as AlexDaniel

[23:31] *** timewasteable6 joined
[23:31] *** ChanServ sets mode: +o timewasteable6

[23:31] *** vodkaInf1rno26 joined
[23:31] *** vodkaInf1rno26 left
[23:33] *** AlexDaniel is now known as unspammable6

[23:33] *** pecastro left
[23:33] *** unspammable6 is now known as AlexDaniel

[23:34] *** emias13 joined
[23:34] *** emias13 was kicked by AlexDaniel (Kicked by AlexDaniel))
[23:34] <AlexDaniel> ye ye just wait I'll set +m and that'd gone

[23:34] *** evalable6 left
[23:34] *** squashable6 left
[23:36] *** AlexDaniel sets mode: +z
 
[23:36] *** evalable6 joined
[23:36] *** timewasteable6 sets mode: +v evalable6

[23:37] *** squashable6 joined
[23:38] *** timewasteable6 sets mode: +v squashable6

[23:39] *** timewasteable6 left
[23:39] *** timewasteable6 joined
[23:39] *** ChanServ sets mode: +o timewasteable6

[23:43] *** AndreyP-t17 joined
[23:43] *** AndreyP-t17 left
[23:44] <AlexDaniel> 🙏🙏🙏 We're trying to reduce the amount of spam on Raku channels, there are some upcoming counter measures. Your IRC client might bleep when we give you voice (+v), please ignore! Thank you for your understanding 🤗🤗🤗

[23:45] <guifa2> AlexDaniel++ xx 99 ** 99

[23:49] *** ChanServ sets mode: +vvvv evalable6 Manifest0 peteretep Grinnz

[23:49] *** ChanServ sets mode: +vvvv spycrab0 zostay lucasb kawaii

[23:49] *** ChanServ sets mode: +vvvv xelxebar gabiruh b2gills sgo

[23:49] *** ChanServ sets mode: +vvvv MasterDuke statisfiable6 linkable6 unicodable6

[23:49] *** ChanServ sets mode: +vvvv bloatable6 benchable6 reportable6 quotable6

[23:49] *** ChanServ sets mode: +vvvv shareable6 committable6 greppable6 tellable6

[23:49] *** ChanServ sets mode: +vvvv coverable6 codesections releasable6 sourceable6

[23:49] *** ChanServ sets mode: +vvvv notable6 bisectable6 nativecallable6 sftp

[23:49] *** ChanServ sets mode: +vvvv Black_Ribbon brass aluaces cog

[23:49] *** ChanServ sets mode: +vv perigrin DarthGandalf

[23:50] *** ChanServ sets mode: +vvvv Sgeo |Sno| gugod avar

[23:50] *** ChanServ sets mode: +vvvv broquaint Voldenet sena_kun solitario

[23:50] *** ChanServ sets mode: +vvvv rindolf kvw_5 guifa2 dogbert11

[23:50] *** ChanServ sets mode: +vvv epony cpage kybr

[23:50] *** ChanServ sets mode: +vvvv maggotbrain rypervenche xkr47 vrurg

[23:50] *** ChanServ sets mode: +vvvv Xliff DiffieHellman elcaro stoned75

[23:50] *** ChanServ sets mode: +vvvv bonz060 PotatoGim BuildTheRobots tbrowder

[23:50] *** ChanServ sets mode: +vvv mrsolo synthmeat AlexDaniel`

[23:50] *** ChanServ sets mode: +vvvv telex dotdotdot jmcgnh stux|RC

[23:50] *** ChanServ sets mode: +vvvv kst agentzh a6502 jast

[23:50] *** ChanServ sets mode: +vvvv raydiak timeless rjeli caasih

[23:50] *** ChanServ sets mode: +vvvv LizBot lizmat simcop2387 swaggboi

[23:50] *** ChanServ sets mode: +vv juanfra__ patrickbkr[m]

[23:50] *** ChanServ sets mode: +vvvv gordonfish camelia nine japhb

[23:50] *** ChanServ sets mode: +vvvv APic eater Kaiepi samcv

[23:50] *** ChanServ sets mode: +vvvv uzl[m] sienet_ja_LSD[m] unclechu kini

[23:50] *** ChanServ sets mode: +vvv defaultxr eseyman sivoais

[23:50] *** CryptoClub15 joined
[23:50] *** CryptoClub15 left
[23:50] *** ChanServ sets mode: +vvvv kiti_nomad[m] leah2 dustinm` spacebat2

[23:50] *** ChanServ sets mode: +vvvv __jrjsmrtn__ ServerStatsDisco pounce albino

[23:50] *** ChanServ sets mode: +vvvv fvox mendel perlmaros Henry151

[23:50] *** ChanServ sets mode: +vvvv karupanerura tadzik masak gfldex

[23:50] *** ChanServ sets mode: +vvvv demostanis[m] pwr22 ThaEwat Tirifto[m]

[23:50] *** ChanServ sets mode: +vvv tusooa ens dpk

[23:50] *** ChanServ sets mode: +vvvv silug nicholatian ecocode Geth

[23:50] *** ChanServ sets mode: +vvvv 18WAAENQI rjbs robinsmidsrod lnx

[23:50] *** ChanServ sets mode: +vvvv cxreg BinGOs tailgate jraspass

[23:50] *** ChanServ sets mode: +vvvv hvxgr tobs markmarkmark afresh1

[23:50] *** ChanServ sets mode: +vv El_Che ribasushi

[23:50] *** ChanServ sets mode: +vvvv kiti_nomad[m] leah2 dustinm` spacebat2

[23:50] *** ChanServ sets mode: +vvvv __jrjsmrtn__ ServerStatsDisco pounce albino

[23:50] *** ChanServ sets mode: +vvvv fvox mendel perlmaros Henry151

[23:50] *** ChanServ sets mode: +vvvv karupanerura tadzik masak gfldex

[23:50] *** ChanServ sets mode: +vvvv demostanis[m] pwr22 ThaEwat Tirifto[m]

[23:50] *** ChanServ sets mode: +vvv tusooa ens dpk

[23:50] *** ChanServ sets mode: +vvvv gordonfish camelia nine japhb

[23:50] *** ChanServ sets mode: +vvvv APic eater Kaiepi samcv

[23:50] *** ChanServ sets mode: +vvvv uzl[m] sienet_ja_LSD[m] unclechu kini

[23:50] *** ChanServ sets mode: +vvv defaultxr eseyman sivoais

[23:50] *** ChanServ sets mode: +vvvv silug nicholatian ecocode Geth

[23:50] *** ChanServ sets mode: +vvvv 18WAAENQI rjbs robinsmidsrod lnx

[23:50] *** ChanServ sets mode: +vvvv cxreg BinGOs tailgate jraspass

[23:50] *** ChanServ sets mode: +vvvv hvxgr tobs markmarkmark afresh1

[23:50] *** ChanServ sets mode: +vv El_Che ribasushi

[23:50] *** ChanServ sets mode: +vvvv doconthe2ocks spacekookie Grrrr sjn

[23:50] *** ChanServ sets mode: +vvvv cooper m_athias bdju vaskozl

[23:50] *** ChanServ sets mode: +vvvv jjatria Sir_Ragna ambs UukGoblin

[23:50] *** ChanServ sets mode: +vvv xi stux|RC-only Ekho

[23:50] *** ChanServ sets mode: +vvvv Util moritz m6locks esh

[23:50] *** ChanServ sets mode: +vvvv jhill andinus Woodi tinita

[23:50] *** ChanServ sets mode: +vvvv rba bartolin_ jdv79 krunen

[23:50] *** ChanServ sets mode: +vvvv tonyo klapperl Ulti nebuchadnezzar

[23:50] *** ChanServ sets mode: +vv oftl timotimo

[23:50] *** ChanServ sets mode: +vvvv pel dg Benett ilogger2

[23:50] *** ChanServ sets mode: +vvvv Maylay brown121407 ingy skaji_

[23:50] *** ChanServ sets mode: +vvvv pierrot mtj shadowpaste tyil

[23:50] *** ChanServ sets mode: +vvvv samebchase literal renormalist mightypork

[23:50] *** ChanServ sets mode: +v benaiah

[23:50] *** ChanServ sets mode: +vvvv Mithaldu KotH ugexe perry

[23:50] *** ChanServ sets mode: +vvvv riatre Grauwolf SmokeMachine jcallen

[23:50] *** ChanServ sets mode: +vvvv a3f mojca pnu__ charsbar

[23:51] <AlexDaniel> OK

[23:51] *** AlexDaniel sets mode: +m
 
[23:51] <AlexDaniel> can somebody say something? :)

[23:52] <gordonfish> something

[23:52] <guifa2> something? :)

[23:52] <bdju> hi

[23:52] <AlexDaniel> hi :)

[23:53] *** ChanServ sets mode: -o AlexDaniel

[23:53] <epony> well done

[23:54] *** timewasteable6 left
[23:54] *** unspammable6 joined
[23:54] *** ChanServ sets mode: +o unspammable6

[23:54] *** ChanServ sets mode: +v AlexDaniel

[23:55] <AlexDaniel> ahh lemme see actually if there are any bots still coming…

[23:55] *** ChanServ sets mode: +o AlexDaniel

