[00:02] *** reportable6 left
[00:04] *** reportable6 joined
[00:04] *** Guest12 joined
[00:07] *** no-n joined
[00:08] *** pony left
[00:15] *** Guest12 left
[01:15] *** linkable6 left
[01:15] *** evalable6 left
[01:16] *** linkable6 joined
[01:18] *** evalable6 joined
[01:51] *** swaggboi left
[02:01] *** swaggboi joined
[02:10] *** pony joined
[02:11] *** casaca left
[02:11] *** no-n left
[02:11] *** casaca joined
[02:12] *** MasterDuke left
[02:15] *** melezhik joined
[02:16] <melezhik> wow! SmokeMachine have done a lot of reviews/comments for some Raku/Perl modules on https://mybf.io - thanks a lot Ferdnando, way to go! 

[02:19] <melezhik> one of the feature of mybfi - one can quickly announce a release and get feedbacks from users - https://mybf.io/project/Red/reviews even though people don't see it strait away, they can write back latter, somewhat alternative to irc/tell thing )))

[02:19] *** SmokeMachine left
[02:19] *** skaji left
[02:19] *** skaji joined
[02:19] *** SmokeMachine joined
[02:20] *** mjgardner left
[02:20] *** patterner_ left
[02:21] <melezhik> or better say addition to irc/tell thing 

[02:22] *** mjgardner joined
[02:23] *** patterner_ joined
[02:24] *** melezhik left
[02:31] *** leont left
[02:31] *** zostay_ joined
[02:31] *** zostay left
[02:31] *** zostay_ is now known as zostay

[02:32] *** mjgardner left
[02:32] *** leont joined
[02:32] *** patterner_ left
[02:32] *** patterner_ joined
[02:36] *** mjgardner joined
[03:36] *** benchable6 left
[03:36] *** quotable6 left
[03:36] *** releasable6 left
[03:36] *** statisfiable6 left
[03:36] *** nativecallable6 left
[03:36] *** coverable6 left
[03:36] *** unicodable6 left
[03:36] *** tellable6 left
[03:36] *** bisectable6 left
[03:36] *** reportable6 left
[03:36] *** committable6 left
[03:36] *** squashable6 left
[03:36] *** shareable6 left
[03:36] *** sourceable6 left
[03:36] *** linkable6 left
[03:36] *** bloatable6 left
[03:36] *** greppable6 left
[03:36] *** notable6 left
[03:36] *** evalable6 left
[03:37] *** coverable6 joined
[03:37] *** sourceable6 joined
[03:37] *** statisfiable6 joined
[03:37] *** nativecallable6 joined
[03:38] *** reportable6 joined
[03:39] *** tellable6 joined
[04:38] *** unicodable6 joined
[04:39] *** shareable6 joined
[04:39] *** bloatable6 joined
[04:39] *** greppable6 joined
[04:39] *** evalable6 joined
[05:38] *** linkable6 joined
[05:38] *** notable6 joined
[05:39] *** committable6 joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[06:38] *** bisectable6 joined
[06:40] *** benchable6 joined
[07:39] *** quotable6 joined
[07:40] *** releasable6 joined
[07:46] *** MasterDuke joined
[08:26] *** squashable6 joined
[08:50] *** andinus left
[09:46] *** Sgeo left
[10:46] *** evalable6 left
[10:46] *** linkable6 left
[10:47] *** linkable6 joined
[10:48] *** evalable6 joined
[10:54] *** notna joined
[10:55] *** notna left
[10:56] *** notna joined
[10:57] *** notna left
[10:58] *** notna joined
[11:58] *** evalable6 left
[11:58] *** linkable6 left
[12:00] *** evalable6 joined
[12:02] *** reportable6 left
[12:05] *** reportable6 joined
[12:07] *** tejr left
[12:08] *** tejr joined
[12:09] *** tejr left
[12:13] *** tejr joined
[12:47] *** notna left
[12:50] *** frost left
[12:54] <Geth> ¬¶ examples: 5f17abce45 | (Roman Baumer)++ | 2 files

[12:54] <Geth> ¬¶ examples: It seems Pod::To::Perl is actually still used

[12:54] <Geth> ¬¶ examples: 

[12:54] <Geth> ¬¶ examples: for building the examples documtation using "raku htmlify.pl"

[12:54] <Geth> ¬¶ examples: 

[12:54] <Geth> ¬¶ examples: Revert "Remove unused Pod::To::Perl module"

[12:54] <Geth> ¬¶ examples: This reverts commit 52de88cd638d80c4760ffa34959171b1c863d966.

[12:54] <Geth> ¬¶ examples: review: https://github.com/Raku/examples/commit/5f17abce45

[12:55] <Geth> ¬¶ examples: 4409c18e07 | (Roman Baumer)++ | README.md

[12:55] <Geth> ¬¶ examples: htmlify.p6 -> htmlify.pl

[12:55] <Geth> ¬¶ examples: review: https://github.com/Raku/examples/commit/4409c18e07

[12:59] *** linkable6 joined
[13:04] <rba> [Coke]: I made a git pull, rebuild of doc, so example.raku.org is on the latest update.

[13:04] <rba> s/example.raku.org/examples.raku.org/

[13:35] *** Xliff joined
[13:50] *** andinus joined
[14:50] *** evalable6 left
[14:50] *** linkable6 left
[14:51] *** Tirifto left
[14:55] *** notna joined
[15:02] *** notna left
[15:26] <tbrowder> hi, i just used DateTime.clone for the first time and it wouldn't let me use ":$seconds", sounds like a bug to me

[15:27] <ugexe> isnt it :second?

[15:27] <tbrowder> m: my $t = DateTime.now; my $u = $t.clone(:seconds(0))

[15:27] <camelia> rakudo-moar 1891cd24a: ( no output )

[15:28] <tbrowder> supposedly, looking at the code, the plural form for most parts are acceptable

[15:29] <ugexe> quickly looking at the code i do not draw the same conclusion

[15:29] <tbrowder> hm, got to go but back later

[15:29] <ugexe> maybe thats what $valid-units does though

[15:30] <tbrowder> yes, that's what i see

[15:30] <tbrowder> bye

[15:47] *** tejr left
[15:48] *** tejr joined
[15:51] *** Manifest0 left
[15:51] *** evalable6 joined
[15:53] *** linkable6 joined
[15:58] <tbrowder> ok, back. the problem is it takes the seconds but doesn‚Äôt use them

[15:59] *** tejr left
[15:59] *** tejr joined
[16:00] <tbrowder> m: my $t=DateTime.now; say $t.clone(:0second); say $t.clone(:0seconds);

[16:00] <camelia> rakudo-moar 6dc3a4700: OUTPUT: ¬´2021-10-23T18:00:00+02:00‚ê§2021-10-23T18:00:34.404287+02:00‚ê§¬ª

[16:02] <ugexe> yeah it looks like the clone method doesnt take any named parameters

[16:02] <ugexe> :year etc dont work either

[16:02] <ugexe> nm i read the code wrong, although :year isnt working

[16:08] <ugexe> oh jeez :year works fine, my example had a thinko

[16:09] <ugexe> :years doesnt work in clone though, so maybe method clone needs to integrate that $valid-units

[16:15] *** notna joined
[16:15] *** monkey_ joined
[16:16] *** notna left
[16:20] <tbrowder> roger

[16:20] <tbrowder> second works fine, but not seconds

[16:23] *** Manifest0 joined
[16:32] <tbrowder> so roast needs a new test, too

[16:33] *** atroxaper joined
[16:38] <ugexe> maybe... it might be that its not in the spirit of .clone to also handle those type of variations on input parameters and instead only affect actual attributes

[17:02] <tbrowder> well, i think that‚Äôs what the docs say: clone is used to modify attrs of a copy of an existing dt obj

[17:10] <ugexe> yeah but $!seconds isnt an attribute of DateTime

[17:11] <ugexe> its an alternative parameter name for a method yeah, but not an actual attribute

[17:11] <ugexe> so in that respect its probably not a bug

[17:33] *** linkable6 left
[17:33] *** evalable6 left
[17:34] *** evalable6 joined
[17:37] <tbrowder> m: say DateTime.new(:2000year, :1month, :1day, :1hour, :2minutes, :3seconds)

[17:37] <camelia> rakudo-moar 6dc3a4700: OUTPUT: ¬´2000-01-01T01:00:00Z‚ê§¬ª

[17:38] <lizmat> m: say DateTime.new(:2000year, :1month, :1day, :1hour, :2minute, :3second)

[17:38] <camelia> rakudo-moar 6dc3a4700: OUTPUT: ¬´2000-01-01T01:02:03Z‚ê§¬ª

[17:38] <lizmat> hmmm

[17:39] <tbrowder> hm, i thought i had used plurals before, must be losing my mind

[17:43] <lizmat> it has the plurals for .later / .ealier

[17:43] <lizmat> *earlier

[17:44] <lizmat> allowing the plurals for DateTime.new, would make that a lot slower  :-(

[17:44] <atroxaper> lizmat: Hello. Please, add my new post about RaCoCo to the weekly.

[17:45] <lizmat> link?  :-)

[17:45] <lizmat> m: say DateTime.new(2021,10,23,19,15,42)   # tbrowder 

[17:45] <camelia> rakudo-moar 6dc3a4700: OUTPUT: ¬´2021-10-23T19:15:42Z‚ê§¬ª

[17:45] <lizmat> tbrowder: you can just specify them as positionals as well

[17:46] <atroxaper> lizmat: https://rakurs.atroxaper.net/2021/10/23/code-coverage.html The is a link to google translate version inside.

[17:46] <lizmat> weekly: https://rakurs.atroxaper.net/2021/10/23/code-coverage.html

[17:46] <notable6> lizmat, Noted! (weekly)

[17:46] <tbrowder> gotcha, i just need to stop thinking plurals  guess, OR we could add plurals for all just for fun!

[17:47] <lizmat> atroxaper: that's how you note it for the weekly

[17:47] <lizmat> tbrowder: not if it would make DateTime.new 20% slower

[17:47] <atroxaper> lizmat: I didn't dare to do it on my own :)

[17:47] *** monkey_ left
[17:47] <lizmat> atroxaper: please do so, it will make it easier for me to do the weekly

[17:48] <tbrowder> oh, it would slow down the whole thing, not a good idea as you said

[17:48] <atroxaper> lizmat: deal.

[17:49] <tbrowder> but the positional approach is something i'll try, and i vaguely remember you mentioning that before...

[17:50] <ugexe> my guess was it would just be replacing e.g. :$seconds parameters with :second(:$seconds)

[17:50] <ugexe> or vice versa

[17:51] <ugexe> not that i agree it should be done

[17:51] <tbrowder> m: say DateTime.new(2000,1,1,   1, 1);

[17:51] <camelia> rakudo-moar 6dc3a4700: OUTPUT: ¬´Cannot resolve caller new(DateTime:U: Int:D, Int:D, Int:D, Int:D, Int:D); none of these signatures match:‚ê§    (DateTime: $y, $mo, $d, $h, $mi, $s, :$timezone = 0, :&formatter, *%_ --> DateTime:D)‚ê§    (DateTime: :$year!, :$month = 1, :$day = 1, :$h‚Ä¶¬ª

[17:51] <lizmat> ugexe: well, maybe I should spectest that

[17:51] <lizmat> *benchmark

[17:52] <lizmat> tbrowder: yes, you must specify all 6 parameters that way :-)

[17:52] <tbrowder> i see i need all the params

[17:53] <tbrowder> m: say DateTime.new(1000,1,1, 1,1,1)

[17:53] <camelia> rakudo-moar 6dc3a4700: OUTPUT: ¬´1000-01-01T01:01:01Z‚ê§¬ª

[17:57] <tbrowder> m: my $t = DateTime.now; say $t.clone(:0hour, :0minute, :0second)

[17:57] <camelia> rakudo-moar 6dc3a4700: OUTPUT: ¬´2021-10-23T00:00:00+02:00‚ê§¬ª

[17:59] <tbrowder> "raku to self: do NOT use plural attrs with DateTime!"

[17:59] <tbrowder> (or Date)

[18:02] *** reportable6 left
[18:05] *** reportable6 joined
[18:09] <tbrowder> without beating a dead horse, why doesn't DateTime throw when using named plurals that aren't recognized?  (that sounds like a recent PR fix that may be in the next release)

[18:32] <ugexe> no methods do that

[18:32] <ugexe> only subroutines

[18:33] <lizmat> indeed, this is one of TimToady's decisions

[18:34] <lizmat> I hope to be able to provide a trait after RakuAST has landed to:

[18:34] *** linkable6 joined
[18:34] <lizmat> a. disallow unrecognized nameds in a method call

[18:35] <lizmat> and allow dispatch to work on that

[18:48] *** atroxaper left
[18:57] <tbrowder> ok, that will be very useful to me fer sure

[18:58] *** Sgeo joined
[19:00] <Xliff> What's the best way to re-export symbols like exceptions or subs?

[19:03] <lizmat> create an EXPORT sub in the compunit that returns a Map with the name => what it is mapping

[19:07] <Xliff> But doesn't that need to be OUTSIDE the compunit definition?

[19:07] <Xliff> That means in the case of unit compunits it needs to be at the top of the file, which means a lot of predeclarations, yes?

[19:08] <Xliff> Also, this EXPORT sub needs to make sure the default mechanism still works, so how do you reuse the existing "is default" mechanism?

[19:08] <lizmat> sorry I wasn't clear

[19:08] <lizmat> it needs to be at the compunit level

[19:09] <lizmat> so if you indeed have a "unit module Foo" or "unit class Foo" it should be before it (can you actually do that)?

[19:10] <Xliff> Yes! That's what I am asking without the parenthetical!

[19:11] <lizmat> an extreme example: https://github.com/lizmat/P5built-ins/blob/main/lib/P5built-ins.rakumod

[19:29] *** Garlandg joined
[19:41] *** perlbot left
[19:41] *** simcop2387 left
[20:41] *** linkable6 left
[20:41] *** evalable6 left
[20:55] *** squashable6 left
[20:56] *** squashable6 joined
[21:17] *** monkey_ joined
[21:43] *** linkable6 joined
[22:06] *** simcop2387 joined
[22:08] *** perlbot joined
[22:36] *** MoC joined
[22:44] *** MoC left
[22:53] *** Tirifto joined
[23:00] *** Tirifto left
[23:02] *** Kaiepi left
[23:08] *** Tirifto joined
[23:19] *** discord-raku-bot left
[23:19] *** discord-raku-bot joined
[23:39] *** ToddAndMargo joined
[23:40] <ToddAndMargo> Anyone on newbie duty today?

[23:40] <tellable6> 2021-07-13T03:53:37Z #raku-dev <Xliff> ToddAndMargo class AA { has Str @.I is rw; submethod BUILD (:$data) { @!I[.key] = .value for $data.pairs }; method new(*%data) { self.bless( :data => %data );  }; }; AA.new(66 => 23, 10 => 1, 100 => 'a').gist.say;

[23:40] <tellable6> hey ToddAndMargo, you have a message: https://gist.github.com/6324e746f164c4b2b8ecde10a1de95a6

[23:41] <[Coke]> rba: thank you, that fixes the euler page issue, appreciate it

[23:41] <ToddAndMargo> I am trying to slice up a web page.  The following hangs on me `$NewRev ~~ s/ .*? ('Release Notes <strong>V') //;

[23:41] <ToddAndMargo> `  Is there a better way of doing putting special characters into a regex?

[23:44] *** evalable6 joined
[23:48] <[Coke]> rba: if there are more updates for examples, should we ping you again for a new build?

[23:54] *** monkey_ left
[23:57] <rba> [Coke]: for the moment yes, I have to update it manually. Just ping me.

