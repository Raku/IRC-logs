[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[01:05] *** greppable6 left
[01:05] *** reportable6 left
[01:05] *** unicodable6 left
[01:05] *** bloatable6 left
[01:05] *** coverable6 left
[01:05] *** benchable6 left
[01:05] *** notable6 left
[01:05] *** releasable6 left
[01:05] *** sourceable6 left
[01:05] *** nativecallable6 left
[01:05] *** statisfiable6 left
[01:05] *** committable6 left
[01:05] *** evalable6 left
[01:05] *** tellable6 left
[01:05] *** linkable6 left
[01:05] *** bisectable6 left
[01:05] *** quotable6 left
[01:05] *** shareable6 left
[01:06] *** statisfiable6 joined
[01:07] *** linkable6 joined
[01:07] *** shareable6 joined
[01:07] *** coverable6 joined
[01:07] *** bloatable6 joined
[01:08] *** releasable6 joined
[01:12] *** squashable6 joined
[02:06] *** committable6 joined
[02:06] *** evalable6 joined
[02:06] *** benchable6 joined
[02:07] *** reportable6 joined
[02:07] *** nativecallable6 joined
[02:08] *** tellable6 joined
[02:08] *** sourceable6 joined
[03:06] *** notable6 joined
[03:07] *** unicodable6 joined
[03:07] *** bisectable6 joined
[03:24] *** squashable6 left
[03:26] *** squashable6 joined
[03:34] *** squashable6 left
[03:35] *** squashable6 joined
[04:07] *** greppable6 joined
[04:08] *** quotable6 joined
[04:29] *** ad-absurdum joined
[05:02] *** thowe left
[05:02] *** thowe joined
[05:40] *** tejr left
[05:52] *** zacts joined
[06:02] *** reportable6 left
[06:02] *** reportable6 joined
[06:11] *** djerius left
[06:11] *** djerius joined
[07:06] *** bdju left
[07:07] *** bdju joined
[07:10] *** Altai-man joined
[07:12] *** Altai-man left
[07:14] *** Altai-man joined
[07:14] *** sena_kun left
[08:09] *** Sgeo left
[08:09] <El_Che> 2021.09 test build for packages running

[08:09] <El_Che> of ok, linux packagessshould be up soon

[08:09] <El_Che> (rakudo-pkg)

[08:25] <moon-child> m: my $x; my Str:D() $y = $x

[08:25] <camelia> rakudo-moar 28303d0c6: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤»

[08:26] <moon-child> how do people feel about the warning's being printed in that case?  I think it is spurious, because the code explicitly requests conversion to a defined type, but apparently others disagree

[08:35] <moritz_> I think the warning is fine, because there's an implicit coercion from undefined to defined. So a warning about it being undefined is, like, fine :D

[09:09] *** evalable6 left
[09:09] *** linkable6 left
[09:10] *** linkable6 joined
[09:11] *** tejr joined
[09:12] *** evalable6 joined
[10:01] <gfldex> moon-child: The assignment is not the problem here. `Str:D()` is equivalent to `Str:D(Any)` and that is a contradiction. I'm leaning towards a problem solving issue.

[10:12] *** linkable6 left
[10:13] *** linkable6 joined
[10:42] *** Altai-man left
[10:58] <CIAvash> Just hit the "Cannot invoke object with invocation handler in this context" bug or whatever it is, while playing with traits, CALL-ME and using Signature's ACCEPTS method.

[11:29] *** Skarsnik joined
[11:31] *** abraxxa-home joined
[11:40] *** abraxxa-home left
[11:40] *** abraxxa-home joined
[11:42] *** frost joined
[11:45] *** abraxxa-home left
[11:45] *** abraxxa-home joined
[12:02] *** reportable6 left
[12:17] *** djerius left
[12:17] *** djerius joined
[12:35] *** keutoi joined
[12:35] *** abraxxa-home left
[13:04] *** reportable6 joined
[13:10] *** jrjsmrtn left
[13:46] *** jrjsmrtn joined
[14:08] *** frost left
[14:24] *** jrjsmrtn left
[14:27] *** jrjsmrtn joined
[14:39] *** melezhik joined
[14:39] <melezhik> .

[14:40] <melezhik> hi Raku users. I continue to beta test "my butterflies" - independent software reviews site. I've dropped quite a number of Raku project here. Please add your reviews or vote if you have something to say . http://161.35.115.119/mbf/

[14:40] <melezhik> or add your project if you have any - http://161.35.115.119/mbf/add-project

[14:40] <melezhik> thanks

[14:46] *** melezhik left
[15:14] *** very joined
[15:23] *** linkable6 left
[15:24] *** linkable6 joined
[15:27] *** sena_kun joined
[15:30] *** keutoi left
[15:47] <tbrowder> melezhik:/

[15:47] <tbrowder> melezhik: very nice!

[15:47] <tellable6> tbrowder, I'll pass your message to melezhik

[16:15] *** Skarsnik_ joined
[16:16] *** Skarsnik left
[16:18] <discord-raku-bot> <holmdunc#3527> The Raku syntax highlighter definitions for various editors all feature big lists of the language's keywords. I'm wondering is there an official comprehensive source for this list?

[16:21] <tonyo> holmdunc - probably possible to generate a list from the raku grammar

[16:30] <discord-raku-bot> <holmdunc#3527> Is that this file? https://github.com/rakudo/rakudo/blob/master/src/Perl6/Grammar.nqp

[16:30] <discord-raku-bot> <holmdunc#3527> Is that this file? https://github.com/rakudo/rakudo/blob/master/src/Perl6/Grammar.nqp

[16:38] *** patrickb joined
[16:40] *** very8 joined
[16:40] *** djerius left
[16:41] *** djerius joined
[16:41] *** very left
[16:42] <tonyo> that'd be a good start, yea

[16:51] <discord-raku-bot> <holmdunc#3527> Thanks. I feel such a list would be a nice addition to this page eventually: https://docs.raku.org/language/syntax

[16:55] <tonyo> you could also use this list holmdunc https://docs.raku.org/routine.html

[16:56] *** ad-absurdum left
[17:01] <discord-raku-bot> <holmdunc#3527> nah, it would be the one with the likes of: if, given, unit

[17:09] <discord-raku-bot> <holmdunc#3527> oh, but yes that one would also be handy if writing a syntax highlighter!

[17:35] <Geth> ¦ mu: f95bcf3377 | (Elizabeth Mattijsen)++ | 2 files

[17:35] <Geth> ¦ mu: Freenode -> Libera.chat

[17:35] <Geth> ¦ mu: review: https://github.com/Raku/mu/commit/f95bcf3377

[17:41] <Geth> ¦ mu: 80c1cd712e | (Elizabeth Mattijsen)++ | README

[17:41] <Geth> ¦ mu: Update the README a bit

[17:41] <Geth> ¦ mu: review: https://github.com/Raku/mu/commit/80c1cd712e

[17:52] *** notna joined
[18:03] *** reportable6 left
[18:05] *** reportable6 joined
[18:08] *** patrickb left
[18:33] <Xliff> Good morning, #raku!

[18:34] <Xliff> p6-GLib-Suite timings - Total non-parallel compile times: 16749.57s

[18:34] <Xliff> Total parallel compile times: 4981.28443677s

[18:36] <Xliff> Detailed view at: https://github.com/Xliff/p6-GLib/blob/master/doc/Perl6%20Projects%20Line%20Counts.xlsx

[18:49] *** very joined
[18:52] *** very8 left
[19:11] <xinming> What is the tied hash in raku?

[19:12] <xinming> hmm, I mean in perl5, we can have tie to do thing to replace dbmopen, but in raku, what module we use plese?

[19:16] <lizmat> well, if you want to keep in the same mindset, there's an implementation of tie in Raku: P5tie

[19:17] <lizmat> however, depending on what you want to do, you could create your own class that does Associative, and has its own AT-KEY methods and friends

[19:18] <lizmat> if you want to go that avenue, then Hash::Agnostic may be module you want to look at

[19:20] *** notna left
[19:50] <xinming> lizmat: thanks

[19:51] <xinming> lizmat: Is there a way to get match result to hash for all  / $<xx> = [...] $<yyy> = [...] /

[20:20] *** evalable6 left
[20:20] *** linkable6 left
[20:21] <japhb> "match result to hash"?  Not sure what you're asking, but note that Match is a subclass of Capture, which means that like Capture it has .hash and .list methods to pull out the Associative and Positional parts respectively.

[20:22] *** evalable6 joined
[20:24] <japhb> Oh, for those following along ... official standardization of the CBOR extension for Capture is delayed by required experts being on vacation at the moment.  It's implemented at HEAD of CBOR::Simple of course (though the tag number may change if the standards folks wish it).  :-)

[20:26] *** nine left
[20:26] *** nine joined
[20:28] <xinming> japhb: I read the docs.raku.org, and I realized that we can have .hash method, but what I mean is, return the hash with Str result, not Match

[20:30] <xinming> Another question anyway, When I try to memorize token vs rule, What is the best way to distinguish these two? Something like .hyper vs .race, and someone told me `in a .race, You never know who will be the first`, <-- this answer will keep in my mind for the rest of my life. ;-)

[20:31] <xinming> wish some way for token/rule too, as I start to confuse for a while, and have to lookup doc again.

[20:55] *** very left
[20:55] <ugexe> you know what they say... The only difference between the token and rule declarators is that the rule declarator causes :sigspace to go into effect for the Regex

[20:58] <ugexe> TODBTTARDITTRDCSTGIEFTR

[21:01] <xinming> ugexe: Yea, but sometimes, I get confused again.

[21:01] <xinming> So, I wanna find a hint which can easily be memorized.

[21:01] <ugexe> yeah just remember TODBTTARDITTRDCSTGIEFTR

[21:03] <perryprog> In grade school they always taught us TODBTTARDITTRDC:STGIEFTR or sometimes even TODBTTARDITTRDCCSTGIEFTR

[21:09] <Xliff> xinming: Otherwise known as this: rule objects automatically swallows whitespace

[21:10] <Xliff> xinming: so for tokens, you have to explicitly account for whitespace

[21:10] <Xliff> rule automatically includes <.ws> between space-separated rules

[21:22] <xinming> I know the definition, but to me, still confusing after a while I don't code, and I have to lookup doc again, So hope to find something like: `in a .race, you don't know who will be the first`

[21:23] <xinming> the .hyper vs .race thing was also a confusing thing to me, until I have that memoric sentence.

[21:34] <xinming> well, never mind, I'll try to remember it the hard way.

[21:55] *** evalable6 left
[21:58] *** Skarsnik_ left
[22:45] *** vrurg joined
[22:57] *** evalable6 joined
[23:05] *** Manifest0 left
[23:12] *** monkey_ joined
[23:20] *** linkable6 joined
