[00:02] *** reportable6 left
[00:03] *** coleman-x left
[00:03] *** coleman-x joined
[00:04] *** reportable6 joined
[00:16] *** bigboi joined
[00:16] *** bigboi left
[00:22] *** evalable6 joined
[00:45] *** tejr left
[01:24] *** linkable6 joined
[02:04] *** xinming_ left
[02:04] *** xinming_ joined
[02:23] <perryprog> Oh my goodness... how have I not seen this: http://www.ozonehouse.com/mark/periodic/
[02:56] *** holyghost joined
[03:26] *** xinming_ left
[03:27] *** xinming_ joined
[04:18] *** xinming_ left
[04:18] *** xinming_ joined
[04:23] *** Eddward_ left
[05:18] *** kjp_ is now known as kjp
[05:43] *** abraxxa left
[06:02] *** reportable6 left
[06:03] *** Xliff_ joined
[06:04] *** Xliff_ joined
[06:05] *** perlmaros_ joined
[06:05] *** lucerne9 joined
[06:05] *** abraxxa joined
[06:06] *** lucerne left
[06:06] *** ericdm2 joined
[06:06] *** bartolin joined
[06:06] *** japhb_ joined
[06:07] *** clarjon_1 joined
[06:07] *** avar joined
[06:09] *** elcaro_ joined
[06:10] *** peder_ joined
[06:10] *** jdv_ joined
[06:13] *** jercos_ joined
[06:13] *** thowe_ joined
[06:13] *** tobs` joined
[06:14] *** Grrrr left
[06:14] *** timo left
[06:14] *** jargan left
[06:14] *** Xliff left
[06:14] *** peder left
[06:14] *** lizmat left
[06:14] *** broquaint left
[06:14] *** clarjon1 left
[06:14] *** MasterDuke left
[06:14] *** dustinm` left
[06:14] *** japhb left
[06:14] *** ericdm left
[06:14] *** lucerne left
[06:14] *** avarab left
[06:14] *** chronon left
[06:14] *** thowe left
[06:14] *** a3r0 left
[06:14] *** tobs left
[06:14] *** jercos left
[06:14] *** ilogger2 left
[06:14] *** elcaro left
[06:14] *** perlmaros left
[06:14] *** casaca left
[06:14] *** Util left
[06:14] *** markmarkmark left
[06:14] *** bartolin_ left
[06:14] *** raydiak left
[06:14] *** masak left
[06:14] *** jdv left
[06:14] *** ericdm2 is now known as ericdm
[06:14] *** lucerne9 is now known as lucerne
[06:14] *** tobs` is now known as tobs
[06:14] *** broquain1 joined
[06:14] *** perlmaros_ is now known as perlmaros
[06:14] *** peder_ is now known as peder
[06:14] *** a3r0_ joined
[06:15] *** timo joined
[06:16] *** masak joined
[06:16] *** jargan joined
[06:16] *** lizmat joined
[06:16] *** dustinm` joined
[06:16] *** chronon joined
[06:16] *** Grrrr joined
[06:17] *** Util joined
[06:17] *** ufobat_ joined
[06:19] *** markmarkmark joined
[06:20] *** raydiak joined
[06:20] *** ufobat_ left
[06:25] *** ilogger2 joined
[06:27] *** dustinm` left
[06:27] *** dustinm` joined
[06:38] *** patrickb joined
[06:49] *** jast joined
[06:50] *** jargan left
[07:03] *** reportable6 joined
[07:12] *** broquain1 left
[07:12] *** avar left
[07:12] *** broquaint joined
[07:14] *** avar joined
[07:16] *** Kaipi joined
[07:18] *** shareable6_ joined
[07:21] *** shareable6 left
[07:21] *** Kaiepi left
[07:21] *** tellable6 left
[07:21] *** tellable6 joined
[07:22] *** childlikempress joined
[07:22] *** moon-child left
[07:22] *** childlikempress is now known as moon-child
[07:24] *** immediate joined
[07:24] *** samebchase9 joined
[07:25] *** committable6_ joined
[07:25] *** notable6_ joined
[07:26] *** ecocode__ joined
[07:26] *** xkr47_ joined
[07:27] *** notable6 left
[07:27] *** committable6 left
[07:27] *** ecocode_ left
[07:27] *** samebchase left
[07:27] *** xkr47 left
[07:27] *** xkr47_ is now known as xkr47
[07:31] *** samcv_ joined
[07:33] <immediate> hi, why doesn't `substr` without arguments fail directly but hang
[07:33] *** Henry151_ joined
[07:33] *** Sgeo left
[07:33] <immediate> m: "this".substr
[07:33] <camelia> rakudo-moar 38f6f8731: OUTPUT: «MoarVM panic: Memory allocation failed; could not allocate 157600 bytes␤»
[07:34] *** jjido joined
[07:34] <immediate> isn't the first parameter mandatory
[07:34] *** samcv left
[07:34] *** Henry151 left
[07:34] <moon-child> immediate: looks like bug
[07:35] <moon-child> j
[07:39] <moon-child> found the culprit.  Cool.substr with no args forwards to Str.substr with no args, but that is not a thing
[07:43] <moon-child> https://github.com/rakudo/rakudo/pull/4544  PR'd fix
[07:43] *** Name joined
[07:43] *** Name is now known as Guest4024
[07:45] <moon-child> (actually I'm kinda surprised it OOM'd.  Guessing there's no TCO to mmaintain tracebacks?)
[07:46] *** clarjon_1 left
[07:46] <immediate> moon-child: thanks for the fix :d
[08:09] *** Guest4024 is now known as clarjon1
[08:11] <immediate> But `"this"` is already a string why that method should be called?
[08:11] <immediate> m: say "this".^mro
[08:11] <camelia> rakudo-moar 38f6f8731: OUTPUT: «((Str) (Cool) (Any) (Mu))␤»
[08:14] <immediate> ah okay because there is no matching candidate in Str's methods, sorry
[08:14] <moon-child> Str does Cool, for obvious reasons.  Str defines a number of substr candidates, all of which take one or two parameters.  Cool defines substr candidates of one and two parameters, which look like: multi method substr(Cool:D: \x) { self.Str.substr(x) }.  Normally those will never get selected for an actual Str, but for an Int, it is converted to a Str and substr is called on the resulting Str
[08:15] <moon-child> oh you got it...ninja'd!
[08:15] <immediate> :d
[08:15] <lizmat> the problem is the missing Str.substr candidate.... fixing now
[08:15] <moon-child> oh, there _should_ be a zero-argument Str.substr?
[08:15] <moon-child> what's it do, return self?
[08:16] *** elcaro_ left
[08:16] *** elcaro joined
[08:17] <moon-child> m: proto f(|) returns Int {*}; multi f($x) returns Str { ';o' }; say f 5
[08:17] <camelia> rakudo-moar 38f6f8731: OUTPUT: «;o␤»
[08:17] <moon-child> why is ^^ legal?
[08:17] *** jdv_ left
[08:17] *** jdv joined
[08:18] <lizmat> moon-child: I'd say that should be a compile time error
[08:19] <moon-child> yeah.  But even if not compile time, why not run time?
[08:19] <moon-child> (and still passes if I leave off the return type on the multi candidate--it's not inherited from the proto.  Should I file a bug report?)
[08:21] <lizmat> moon-child: pretty sure it will be a run-time error if you make the proto something other than {*}
[08:21] *** abraxxa left
[08:23] *** jjido left
[08:23] <moon-child> what else can I make it that lets the other candidate run?
[08:25] <moon-child> hmm, https://docs.raku.org/syntax/proto has examples with multis returning something other than the proto.  So intended maybe?
[08:25] <lizmat> m: proto foo(--> Int) { say "foo"; {*} }; multi foo(--> Str) { "bar" }; foo()
[08:25] <camelia> rakudo-moar 38f6f8731: OUTPUT: «foo␤Type check failed for return value; expected Int but got Str ("bar")␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»
[08:26] <lizmat> moon-child: I think the problem is that the compiler assumes it can ignore the proto if it only consists of {*}
[08:29] *** bloatable6 left
[08:29] *** bisectable6 left
[08:29] <moon-child> that makes sense!
[08:30] *** bloatable6 joined
[08:30] *** bisectable6 joined
[08:30] <moon-child> anyway  http://ix.io/3Au6/perl6  demonstration of multis being less dangerous than methods
[08:31] <moon-child> though hmmm, it works if I make it a multi method!
[08:32] <moon-child> however that requires the child class to declare it as a multi method.  So it is easy to bypass.  You can't express the constraint entirely in the parent role
[08:40] *** Kaipi left
[08:40] *** holyghost left
[08:42] *** broquaint left
[08:42] *** corwin left
[08:42] *** broquain1 joined
[08:42] *** Kaiepi joined
[08:42] *** corwin joined
[08:42] *** reportable6 left
[08:42] *** perlbot left
[08:43] <lizmat> moon-child: please make an issue for the proto / multi return constraint you found
[08:43] *** reportable6 joined
[08:43] *** perlbot joined
[08:43] *** GreaseMonkey left
[08:43] *** synthmeat left
[08:43] *** synthmeat joined
[08:44] *** greaser|q joined
[08:46] <moon-child> done!  I assume the class method behaviour is intentional?
[08:47] *** xkr47 left
[08:47] *** xkr47 joined
[08:55] *** linkable6 left
[09:07] *** jdv left
[09:07] *** jdv joined
[09:08] *** masak_ joined
[09:08] *** masak left
[09:11] *** avarab joined
[09:12] *** jdv_ joined
[09:14] *** avar left
[09:14] *** chronon left
[09:14] *** elcaro left
[09:14] *** jdv left
[09:14] *** elcaro joined
[09:14] *** moon-child left
[09:14] *** moon-child joined
[09:16] *** chronon joined
[09:43] *** immediate left
[10:24] *** casaca joined
[10:48] *** Altai-man joined
[10:48] *** immediate joined
[10:56] *** linkable6 joined
[10:59] *** linkable6 left
[11:00] *** linkable6 joined
[11:39] *** holyghost joined
[11:53] *** holyghost left
[12:03] *** reportable6 left
[12:03] *** reportable6 joined
[12:15] *** abraxxa joined
[12:15] *** rypervenche left
[12:19] *** abraxxa left
[12:20] *** abraxxa joined
[12:29] *** japhb_ is now known as japhb
[12:29] *** rypervenche joined
[12:35] *** abraxxa left
[12:54] *** Maylay left
[13:02] *** Maylay joined
[13:17] *** holyghost joined
[13:25] *** [Coke] is now known as CokeZero
[13:25] *** CokeZero is now known as [Coke]
[14:12] *** Sgeo joined
[14:21] *** holyghost left
[14:33] *** jjido joined
[14:39] *** jjido left
[14:48] *** ericdm left
[15:10] *** anser joined
[15:12] *** anser left
[15:12] *** anser joined
[15:15] *** anser left
[15:15] *** anser joined
[15:15] *** anser left
[15:16] *** anser joined
[15:20] *** anser left
[15:55] *** immediate left
[16:18] *** MasterDuke joined
[16:31] *** coleman-x left
[16:50] *** slu joined
[17:09] *** linkable6 left
[17:12] *** djerius left
[17:13] *** djerius joined
[17:23] *** patrickb left
[17:34] *** Altai-man left
[17:54] *** phogg left
[17:54] *** phogg joined
[18:00] *** Henry151_ is now known as Henry151
[18:03] *** reportable6 left
[18:07] *** jess left
[18:10] *** linkable6 joined
[18:12] *** jjido joined
[18:22] *** jess joined
[18:34] <Voldenet> m: say (20/3) div 2
[18:34] <camelia> rakudo-moar 21271aa5f: OUTPUT: «Cannot resolve caller infix:<div>(Rat:D, Int:D); none of these signatures match:␤    (Int:D $a, Int:D $b --> Int:D)␤    (int $a, int $b --> int)␤  in block <unit> at <tmp> line 1␤␤»
[18:34] <Voldenet> m: multi sub infix:<div> { ($^a - $^a % $^b) / $^b }; say (20/3) div 2
[18:34] <camelia> rakudo-moar 21271aa5f: OUTPUT: «3␤»
[18:34] <Voldenet> I wish it was already defined
[18:36] *** melezhik joined
[18:36] <melezhik> .
[18:36] <tellable6> 2021-09-29T23:37:04Z #raku <tbrowder> melezhik try Inline::Perl5 with Perl modules from GraphicsMagick
[18:37] <melezhik> tbrowder thanks
[18:38] <melezhik> hi! I have started to test a water with open source project contest on mybfio, not sure if it matches Raku as current eco system is still not big, anyway here is the link - https://mybf.io/contest
[18:38] <melezhik> I'd appreciate for comments
[18:38] *** abraxxa-home joined
[18:51] *** jjido left
[18:55] *** immediate joined
[18:56] *** melezhik left
[19:04] *** reportable6 joined
[19:19] <[Coke]> 4
[19:20] *** slu left
[19:52] *** abraxxa-home left
[20:43] *** jjido joined
[20:56] *** jjido left
[21:05] *** immediate left
[21:39] *** gordonfish- joined
[21:41] *** gordonfish left
[21:42] *** gordonfish- is now known as gordonfish
[21:44] *** chloekek joined
[21:46] <chloekek> m: say ‘哈’ x 10
[21:46] <camelia> rakudo-moar 21271aa5f: OUTPUT: «哈哈哈哈哈哈哈哈哈哈␤»
[22:35] *** greaser|q left
[22:35] *** greaser|q joined
[22:35] *** greaser|q is now known as GreaseMonkey
[23:32] *** gordonfish left
[23:33] *** gordonfish joined
