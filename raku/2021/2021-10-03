[00:03] *** reportable6 left
[00:06] <SmokeMachine> is anyone else having problems to run zef and `use` modules (Red on my test) on Mac OS Monterey beta? both hangs for ever for me...

[00:17] <[Coke]> anyone know how to make rakubrew build with a triple of "latest everything" ?

[00:17] <[Coke]> raydiak: it's landed, it's the default

[00:19] <[Coke]> https://github.com/rakudo/rakudo/issues/2627 - this ticket should be moved to problem solving

[00:23] <timo> raydiak: you may be confusing new-disp with rakuast

[00:24] <raydiak> oh, you're right. I am

[00:28] <raydiak> in a first quick informal test, 2021.09 was at 1m 24s and master is at 1m 7s

[00:29] <japhb> \o/

[00:29] <japhb> Nice to see

[00:30] <timo> cool

[00:31] <raydiak> yes, a very substantial gain. I'm testing again with 4x the pixels. and this is a laptop, I ran 2021.09 first. so any thermal advantage would have been there

[00:35] <raydiak> 2021.09: 65536 pixels / 5 mins 47 secs 476.58 ms = 188.61 pixels/sec

[00:35] <raydiak> starting master

[00:39] <[Coke]> lizmat: is https://github.com/rakudo/rakudo/issues/3992 rejected, and can we close it?

[00:42] <[Coke]> m: multi sub foo($x where say hello) { }

[00:42] <camelia> rakudo-moar 21271aa5f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    hello used at line 1. Did you mean 'shell'?‚ê§‚ê§¬ª

[00:42] <raydiak> master: 65536 pixels / 4 mins 49 secs 86 ms = 226.70 pixels/sec

[00:42] <camelia> rakudo-moar 21271aa5f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 03655367‚èè5 pixels / 4 mins 49 secs 86 ms = 226.70 ‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§        state‚Ä¶¬ª

[00:42] <[Coke]> m: multi sub foo($x where say 'hello') { }; foo 42

[00:42] <camelia> rakudo-moar 21271aa5f: OUTPUT: ¬´hello‚ê§¬ª

[00:44] <raydiak> that's examples/scene-07.json at --width=256 if anyone else wants to try

[00:47] <[Coke]> .ask altai-man - is https://github.com/rakudo/rakudo/issues/4314 closable?

[00:47] <tellable6> [Coke], I'll pass your message to Altai-man

[00:51] <raydiak> both comparisons show a 20% gain. looking good right off the bat

[00:51] <[Coke]> m: say 12.500000000000002.round(1e-5);

[00:51] <camelia> rakudo-moar 21271aa5f: OUTPUT: ¬´12.500000000000002‚ê§¬ª

[00:52] <[Coke]> m: say 12.500000000000002.round(1);

[00:52] <camelia> rakudo-moar 21271aa5f: OUTPUT: ¬´13‚ê§¬ª

[00:52] <[Coke]> m: say 12.500000000000002.round(.000001);

[00:52] <camelia> rakudo-moar 21271aa5f: OUTPUT: ¬´12.5‚ê§¬ª

[01:03] *** linkable6 left
[01:03] *** reportable6 joined
[01:38] <raydiak> timo: here is a comparison of all my examples scenes of pray running at 64x64: https://gist.github.com/raydiak/7af56c666a2ababfed1bd3a0d37a0409 master shows an across-the-board improvoement for all scenes, regardless of it being CSG heavy, refraction, misses instead of hits...in all cases tested here, master is faster

[01:43] <timo> well, we've been looking to rename the branch from master anyway, why not call it faster instead

[01:46] *** Guest4488 joined
[01:50] *** Guest4488 left
[01:51] <raydiak> heh, I like it! by way of mainfesting :) practically speaking, I think "main" is fine

[01:56] <timo> yeah i have no problem with "main", i just couldn't resist the joke

[01:56] <timo> also every time we come up with a new big optimization we'd have to add an "er"

[01:57] <timo> where at some point we'll tell our users to "please check out fasterererererererererererererer from github"

[02:00] <japhb> fast‚Üë‚Üë‚Üëer

[02:02] <timo> oh jeez arrow notation

[02:02] <timo> now we're talking

[02:03] <japhb> I mean, if you really want to talk about speeding things up a lot, it seemed like good compression

[02:08] <timo> faster-5-copy-final

[02:16] <japhb> runaway-train, speeding-bullet, bat-out-of-hell

[02:16] <timo> can those be ordered on a proper number line?

[02:16] <timo> or at least an ordering in general

[02:20] <japhb> I think that's actually a correct ordering, based on local colloquial use at least

[02:42] *** gordonfish- joined
[02:44] *** gordonfish left
[02:44] <raydiak> we could use knuth up arrow notation to descrive how many times we've gotten faster

[02:44] <perryprog> nice

[02:44] <raydiak> *describe

[02:49] <raydiak> or maybe I should say fasterer :)

[03:01] *** gordonfish- left
[03:04] *** gordonfish joined
[03:04] *** linkable6 joined
[03:28] *** monkey_ joined
[03:31] *** evalable6 joined
[03:35] *** gordonfish left
[03:36] *** gordonfish joined
[04:13] *** jercos joined
[04:13] *** clarjon_1 joined
[04:14] *** charsbar_ joined
[04:15] *** silug7 joined
[04:15] *** Summer_ joined
[04:15] *** codesections5 joined
[04:16] *** Tirifto_ joined
[04:17] *** Henry151_ joined
[04:19] *** gordonfish- joined
[04:20] *** Summer left
[04:20] *** clarjon1 left
[04:20] *** Henry151 left
[04:20] *** jercos_ left
[04:20] *** Scotteh left
[04:20] *** silug left
[04:20] *** Tirifto left
[04:20] *** charsbar left
[04:20] *** codesections left
[04:20] *** Summer_ is now known as Summer

[04:20] *** codesections5 is now known as codesections

[04:20] *** silug7 is now known as silug

[04:20] *** charsbar_ is now known as charsbar

[04:21] *** Scotteh joined
[04:22] *** MasterDuke left
[04:22] *** Henry151_ left
[04:22] *** gordonfish left
[04:23] *** Henry151 joined
[04:23] *** Kaipi joined
[04:24] *** Kaiepi left
[04:24] *** Altai-man joined
[04:24] *** silug left
[04:25] *** silug joined
[04:25] *** skaji_ joined
[04:27] *** jercos_ joined
[04:27] *** bisectable6_ joined
[04:27] *** committable6_ joined
[04:27] *** skaji left
[04:27] *** jercos left
[04:27] *** skaji_ is now known as skaji

[04:28] *** sourceable6_ joined
[04:28] *** sena_kun left
[04:28] *** xkr47 left
[04:28] *** committable6 left
[04:28] *** bisectable6 left
[04:28] *** mjgardner left
[04:28] *** sourceable6 left
[04:28] *** rypervenche left
[04:28] *** xkr47_ joined
[04:28] *** releasable6 left
[04:28] *** notable6 left
[04:28] *** ugexe left
[04:29] *** xkr47_ is now known as xkr47

[04:29] *** ugexe joined
[04:29] *** jdv_ left
[04:29] *** jdv joined
[04:29] *** rypervenche joined
[04:29] *** GreaseMonkey left
[04:30] *** pjlsergeant left
[04:30] *** greaser|q joined
[04:31] *** pjlsergeant joined
[04:31] *** clarjon1 joined
[04:32] *** SmokeMachine_ joined
[04:32] *** shareable6_ joined
[04:33] *** unicodable6_ joined
[04:33] *** coverable6 left
[04:33] *** SmokeMachine left
[04:33] *** shareable6 left
[04:33] *** unicodable6 left
[04:33] *** SmokeMachine_ is now known as SmokeMachine

[04:33] *** tbrowder left
[04:33] *** tbrowder joined
[04:34] *** clarjon_1 left
[04:37] *** Summer left
[04:37] *** Summer joined
[04:38] *** Henry151 left
[04:39] *** Henry151 joined
[04:41] *** nativecallable6 left
[04:41] *** avarab left
[04:41] *** synthmeat left
[04:41] *** avar joined
[04:41] *** nativecallable6 joined
[04:41] *** synthmeat joined
[04:42] *** monkey_ left
[04:42] *** mjgardner joined
[04:47] *** gfldex_ joined
[04:47] *** gfldex left
[04:48] *** statisfiable6 left
[04:48] *** statisfiable6 joined
[04:49] *** benchable6 left
[04:49] *** benchable6 joined
[04:50] *** squashable6_ joined
[04:51] *** synthmeat1 joined
[04:51] *** squashable6 left
[04:51] *** synthmeat left
[05:01] *** bloatable6_ joined
[05:03] *** bloatable6 left
[05:25] *** releasable6 joined
[05:27] *** coverable6 joined
[05:28] *** notable6 joined
[05:34] *** gordonfish- left
[05:38] *** gordonfish joined
[05:44] <CIAvash> [Coke]: I don't know about `triple` but you can do `rakubrew build moar-blead master`

[06:02] *** reportable6 left
[06:05] *** reportable6 joined
[06:26] <Geth> ¬¶ problem-solving/JJ-patch-1: a17ae4d921 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | solutions/meta/TheRakuFoundation.md

[06:26] <Geth> ¬¶ problem-solving/JJ-patch-1: Addressing @vrurg comments

[06:26] <Geth> ¬¶ problem-solving/JJ-patch-1: review: https://github.com/Raku/problem-solving/commit/a17ae4d921

[06:57] *** a joined
[06:58] *** a left
[07:22] *** MasterDuke joined
[07:25] *** Summer left
[07:26] *** Summer joined
[07:37] *** immediate joined
[08:26] *** jercos_ is now known as jercos

[09:06] *** Geth joined
[09:07] *** TempIRCLogger joined
[09:08] *** gfldex_ is now known as gfldex

[09:09] *** Guest17 joined
[09:21] *** Guest17 left
[09:30] *** Geth joined
[09:30] *** TempIRCLogger__ joined
[09:31] *** RakuIRCLogger left
[09:31] *** lizmat left
[09:31] *** TempIRCLogger left
[09:32] *** lizmat_ left
[09:32] *** lizmat joined
[09:40] *** Sgeo left
[09:53] *** gordonfish left
[10:53] *** linkable6 left
[10:53] *** evalable6 left
[10:53] *** evalable6 joined
[11:50] *** immediate left
[11:55] *** linkable6 joined
[12:03] *** reportable6 left
[12:04] *** reportable6 joined
[12:29] *** Guest78 joined
[12:37] *** jgaz joined
[12:50] *** Guest78 left
[13:02] *** holyghost joined
[13:02] *** jgaz left
[13:06] *** gordonfish joined
[13:06] *** MoC joined
[13:07] *** jjido joined
[13:21] *** gordonfish left
[13:21] *** gordonfish- joined
[13:42] *** monkey_ joined
[13:49] *** jgaz joined
[14:07] *** monochromec joined
[14:08] *** monochromec left
[14:21] *** jgaz left
[14:26] *** Guest94 joined
[14:39] *** jjido left
[14:52] *** gordonfish joined
[14:53] *** Guest94 left
[14:54] *** gordonfish- left
[14:56] *** xinming_ left
[14:58] *** xinming_ joined
[15:00] *** gordonfish left
[15:02] *** gordonfish- joined
[15:12] *** holyghost left
[15:18] *** gordonfish- left
[15:26] *** gordonfish joined
[15:36] *** gordonfish- joined
[15:37] *** gordonfish left
[15:47] *** gordonfish- left
[15:50] *** gordonfish joined
[15:54] *** Maylay left
[15:57] *** vodkra left
[16:00] *** vodkra joined
[16:08] <discord-raku-bot> <Anton Antonov#7232> @CIAvash Never used `rakubrew` before, but your comment made me try it. Great stuff!

[16:10] *** greyrat left
[16:12] *** greyrat joined
[16:21] *** vodkra left
[16:31] *** vodkra joined
[16:51] *** gordonfish- joined
[16:52] *** gordonfish left
[17:10] *** gordonfish joined
[17:13] *** gordonfish- left
[17:22] *** monkey_ left
[17:37] *** gordonfish left
[17:41] *** gordonfish joined
[17:47] *** monkey_ joined
[17:56] *** Sgeo joined
[18:00] *** jjido joined
[18:02] *** reportable6 left
[18:06] *** japhb left
[18:09] *** japhb joined
[18:11] *** abraxxa-home joined
[18:13] <CIAvash> üôÇ

[18:35] *** abraxxa-home left
[19:11] *** monkey_ left
[19:23] *** MoC left
[19:41] *** Guest95 joined
[20:04] *** reportable6 joined
[21:04] <Geth> ¬¶ ecosystem: e9117985c0 | (Jonathan Stowe)++ | META.list

[21:04] <Geth> ¬¶ ecosystem: Audio::PortAudio, Audio::PortMIDI gone to CPAN

[21:04] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/e9117985c0

[21:04] *** linkable6 left
[21:04] *** evalable6 left
[21:05] *** linkable6 joined
[22:05] *** linkable6 left
[22:06] *** Manifest0 left
[22:06] *** Tirifto_ is now known as Tirifto

[22:06] *** linkable6 joined
[22:07] *** evalable6 joined
[22:10] <Tirifto> Is there some way I can split a program into multiple files without worrying about modules too much, specially with regard to variable definitions?

[22:10] *** monkey_ joined
[22:13] <Tirifto> I guess declaring a variable with ‚Äòour‚Äô and then importing the file it‚Äôs in with ‚Äòuse‚Äô is the most straightforward way?

[22:14] <MasterDuke> depending on how "clean" you want to be, and/or your usecase, EVALFILE might be useful

[22:21] <Tirifto> MasterDuke: For my use case, that might actually feel ‚Äòcleaner‚Äô. :-) I suppose EVALFILE only works at runtime, though?

[22:22] <MasterDuke> dunno, don't believe i've ever used it, just know of its existence

[22:23] <timo> evalfile is a run-time thing, yes

[22:23] <timo> it can not give you local variables or subs, since those are fixed at compile time

[22:24] <timo> you can run EVALFILE at compile time with BEGIN, but that won't just return stuff into your scope either

[22:31] <Tirifto> Thank you, timo and MasterDuke.

[22:33] *** monkey_ left
[22:48] <Tirifto> Passing thought: Intuitively, I expected a Set to be like an orderless List, but it feels more like a valueless Map.

[22:56] <lizmat> a Set is an object Map with only True / False as possible values

[23:07] <timo> you could implement a set based on just a list, but it will have implications on performance that you usually don't want

[23:10] *** Guest95 is now known as berber44

[23:40] <discord-raku-bot> <Nemokosch#9980> Yes, I don't think this was a particularly Raku thing

[23:43] *** berber44 left
[23:57] *** squashable6_ left
[23:59] *** squashable6 joined
