[00:12] *** xelxebar left
[00:12] *** xelxebar_ joined
[00:28] *** sena_kun left
[00:28] *** sena_kun joined
[00:29] *** Sgeo joined
[00:32] *** Sgeo left
[00:35] *** swaggboi joined
[00:36] *** frost-lab joined
[00:42] *** raydiak joined
[00:42] *** Sgeo joined
[00:57] *** _jrjsmrtn joined
[00:58] *** __jrjsmrtn__ left
[01:03] *** Doc_Holliwood left
[01:31] *** kvw_5 joined
[01:34] *** kvw_5_ left
[01:41] *** mowcat left
[02:11] *** ambs_ left
[02:18] *** ambs joined
[02:52] *** frost-lab left
[02:54] *** frost-lab joined
[03:16] *** sxmx joined
[03:17] *** monkey__ joined
[03:36] *** Kaiepi left
[03:36] *** Kaiepi joined
[03:41] *** berber44 left
[03:57] *** abraxxa left
[03:59] *** abraxxa joined
[04:01] *** wamba joined
[04:03] *** Kaeipi joined
[04:03] *** Kaiepi left
[04:08] *** aborazmeh joined
[04:12] *** monkey__ left
[04:51] *** kurahaupo left
[04:53] *** gordonfish left
[05:04] *** monkey__ joined
[05:04] *** aborazmeh left
[05:18] *** jmcgnh left
[05:21] *** kurahaupo joined
[05:23] *** defaultxr left
[05:32] *** monkey__ left
[05:32] *** wamba left
[05:34] *** parabolize left
[05:35] *** wamba joined
[05:36] *** wamba left
[05:38] *** wamba joined
[05:38] *** wamba left
[05:39] *** wamba joined
[05:41] *** wamba left
[05:41] *** wamba joined
[05:42] *** jmcgnh joined
[05:43] *** wamba left
[05:44] *** wamba joined
[05:52] *** defaultxr joined
[05:58] *** xinming_ left
[06:28] *** havenwood joined
[06:35] <summerisle> codesections: if you're interested i'm exploring a custom syntax-propertize-function as a way to deal with smart heredoc indentation

[06:35] <summerisle> in emacs

[06:38] *** domidumont joined
[06:40] *** nebuchad` is now known as nebuchadnezzar

[06:45] *** neshpion left
[07:02] *** Sgeo left
[07:04] *** xinming_ joined
[07:05] *** guifa2 left
[07:27] *** pecastro joined
[07:32] *** jmerelo joined
[08:12] *** bobv joined
[08:12] *** Doc_Holliwood joined
[08:14] *** abraxxa left
[08:15] *** abraxxa joined
[08:41] * lizmat realizes she forgot to clickbait  https://rakudoweekly.blog/2021/03/29/2021-13-games-pop/ yesterday

[08:43] <sjn> yay!

[08:43] *** Geth left
[08:44] *** Geth joined
[09:18] *** wamba left
[09:25] *** abraxxa left
[09:27] *** abraxxa joined
[09:43] *** grumble left
[09:45] *** grumble joined
[09:50] *** pat_js joined
[10:06] *** Black_Ribbon left
[10:15] *** wamba joined
[10:18] *** kanliot joined
[10:18] *** kanliot left
[10:18] *** kanliot joined
[10:18] <kanliot> welp

[10:18] <kanliot> my debian install of raku broke

[10:18] <kanliot> i guess you switched servers

[10:19] <kanliot> and i can't read this page https://cloudsmith.io/~nxadm-pkgs/repos/rakudo-pkg/setup/#formats-deb

[10:19] <kanliot> no idea what that's trying to tell me to do 

[10:19] <kanliot> easier just to apt-get remove raku*

[10:19] <lizmat> El_Che ^^

[10:19] <kanliot> so just complaining a bit

[10:19] <kanliot> k

[10:20] <lizmat> kanliot so what broke?  /me has apt-getted raku without any issue from 2021.02 onwards

[10:20] <kanliot> yeah that's when it broke i think

[10:21] <kanliot> E: The repository 'https://dl.bintray.com/nxadm/rakudo-pkg-debs buster Release' does not have a Release file.

[10:22] <jmerelo> m: my $foo = 3 but "bar"; say $foo ~~ Int; say $foo ~~ Str

[10:22] <camelia> rakudo-moar 726a75e24: OUTPUT: «True␤False␤»

[10:22] <jmerelo> m: my $foo = 3 but "bar"; say $foo.raku

[10:22] <camelia> rakudo-moar 726a75e24: OUTPUT: «bar␤»

[10:22] <jmerelo> m: my $foo = 3 but "bar"; say $foo.^name

[10:22] <camelia> rakudo-moar 726a75e24: OUTPUT: «Int+{<anon|1>}␤»

[10:23] <jmerelo> m: my $foo = 3 but my Str $bar = "bar"; say $foo ~~ Int; say $foo ~~ Str

[10:23] <camelia> rakudo-moar 726a75e24: OUTPUT: «True␤False␤»

[10:23] *** kanliot left
[10:23] <jmerelo> m: my $foo = 3 but my Str $bar = "bar"; say $foo.^name

[10:23] <camelia> rakudo-moar 726a75e24: OUTPUT: «Int+{<anon|1>}␤»

[10:25] <jmerelo> m: my $foo = 3 but Str; say $foo.^name

[10:25] <camelia> rakudo-moar 726a75e24: OUTPUT: «Cannot mix in non-composable type Str into object of type Int␤  in block <unit> at <tmp> line 1␤␤»

[10:25] <jmerelo> m: my $foo = 3 but Stringy; say $foo.^name

[10:25] <camelia> rakudo-moar 726a75e24: OUTPUT: «Int+{Stringy}␤»

[10:28] <jmerelo> m: my $foo = 3 but Stringy; say $foo.^name ~~ /\+/

[10:28] <camelia> rakudo-moar 726a75e24: OUTPUT: «｢+｣␤»

[10:30] *** abraxxa left
[10:31] *** abraxxa joined
[10:40] *** Xliff joined
[10:40] <Xliff> \o

[10:42] <Xliff> Hi all. Over the last few weeks, I've been working on Raku bindings for libical. See https://github.com/Xliff/p6-ICal

[10:42] <Xliff> This is a departure from my normal work (sort of) from p6-GLib

[10:42] <Xliff> It's not part of GLib, but uses many of the same methods used to write it.

[10:42] <Xliff> So I am at a decent stopping (and release) point for it.

[10:42] <Xliff> Since I haven't done this in a while, would appreciate help on getting this released and in the ecosystem.

[10:43] <Xliff> Can someone help?

[10:43] <lizmat> Xliff: do you have a PAUSE account ?

[10:43] <Xliff> lizmat: Don't think I do

[10:43] <lizmat> ok, then App::Mi6 would not be your thing

[10:44] <lizmat> perhaps ugexe / tonyo can help you set up with fez

[10:44] <lizmat> I'm more the old fashioned one, having had a PAUSE account for almost 20 years now  :-)

[10:44] <Xliff> https://pause.perl.org/pause/query?ACTION=pause_06history

[10:44] <Xliff> ?

[10:44] <jmerelo> Xliff: you can release it to the ecosystem, no problem at all.

[10:45] <jmerelo> Xliff: but you're probably looking for other kind of help, right? Coding and stuff

[10:45] <Xliff> jmerelo: Yes, but what are decent steps to take BEFORE that?

[10:45] <Xliff> jmerelo: Well... more like release prep

[10:45] <jmerelo> Xliff: make sure metadata in META6.json is right; the tests have a decent coverage, and some documentation

[10:45] <Xliff> Once the coding is done, what steps should be taken up to and including the release.

[10:46] <Xliff> test coverage will have to be WIP, seeing as the source material is similarly lacking.

[10:46] <jmerelo> Xliff: Essentially META6.json (you can also add a check with Test::Meta) and tests. Documentation will also help, of course.

[10:46] <Xliff> Same with documentation.

[10:47] <Xliff> I'm a one man show, here. Both of those take... more.

[10:47] <jmerelo> Can try to have a look and help

[10:47] <Xliff> jmerelo: Please do! 

[10:48] <Xliff> Create issues for things you see lacking. It will give me a scaffold from which to work.

[10:48] <jmerelo> Yep, the README.md need some work... OK, I'll raise some issues and try and address them

[10:48] <Xliff> Thanks!

[10:48] <Xliff> README needs documentation to refer to, which isn't there.

[10:49] <Xliff> I think to have effective docs, I'd need more content than the original project.

[10:49] <Xliff> And it's documentation isn't nearly as good as I would expect to write for anything I'd call 1.0

[10:49] <jmerelo> Well, I'd say 99% of any ecosystem is not anywhere close to 1.0

[10:49] <jmerelo> Closer to 0.0.1, I'd say

[10:50] <Xliff> I'd be happy to get even there.

[10:50] <jmerelo> OK, let's see what we can do today...

[10:50] <Xliff> That would mean breakdowns of all compunits with class definitions.

[10:50] <Xliff> jmerelo: Thank you so much!

[10:53] <Xliff> lizmat: HAH! So I do have a PAUSE account.

[10:53] <Xliff> CBWOOD

[10:54] <lizmat> well, if you still have the credentials

[10:54] <lizmat> personally I use App::Mi6

[10:55] <lizmat> write the pod, then "mi6 release" produces the README from the pod, and uploads to PAUSE and the ecosystem

[10:55] <lizmat> couldn't be much simpler than that

[10:55] <lizmat> it also makes you take care of the Changelog

[10:57] *** wamba left
[10:57] *** lizmat_ joined
[10:58] *** wamba joined
[10:58] <Xliff> (zef speedup for finding dependencies)++ -- When did this land?

[11:00] <jmerelo> Xliff: you've got whole dependency resolving script here, isn't it? https://github.com/Xliff/p6-GtkPlus/blob/master/scripts/build.sh

[11:00] <jmerelo> Shouldn't it probably go how that zef is faster?

[11:00] *** lizmat left
[11:01] <Xliff> jmerelo: Yes.

[11:01] <Xliff> Those are scripts that I'd like to separate out into their own thing.

[11:01] <Xliff> Currently intrinsic to p6-GLib based projects. 

[11:01] <jmerelo> Xliff: that, too... So that you don't have to inter-link between your repos or copy

[11:02] <Xliff> p6-ICal doesn't use p6-GLib. First I've written that doesn't

[11:02] <jmerelo> Xliff: so maybe all "p6" stuff should go. Will open an issue

[11:03] <Xliff> jmerelo: Yes. scripts/ I plan to break away into its own thing.

[11:03] <Xliff> For release, I may just zero the links and create a script to recreate them if a developer wants.

[11:05] <jmerelo> Xliff: but what is it they do? Can't you put them into a Build.pm6 file so that `zef build` covers them?

[11:05] <Xliff> No.

[11:06] <Xliff> They do a variety of things. To document them would take me a month if I started now.

[11:06] <Xliff> They are very useful for developing NativeCall-based projects quickly.

[11:07] <jmerelo> Xliff: probably better to release independently, then? With cursory documentation that can be improved with time?

[11:07] <Xliff> I should amend that. I don't know how 'zef build' works, so I don't know whether I can leverage Build.pm6 to handle things.

[11:07] <Xliff> jmerelo: That's the plan.

[11:07] <jmerelo> Xliff: you probably can. And it's probably much better if you stick to standards so that people will know what to do without looking up the documentation

[11:08] <Xliff> jmerelo: When I started doing this stuff 3 years ago... there were no standards. Believe me. I asked.

[11:08] <Xliff> I then submerged myself into work. Now that I've resurfaced...lo: standards!

[11:08] <Xliff> So I guess starting points on learning those would be appreciated.

[11:09] <Xliff> Particularly in p6-ICal's case, since I need to build a C-based helper to smooth the use of Raku with libical.so

[11:10] <jmerelo> Xliff: I believe you.

[11:15] <jmerelo> Xliff: I've created a few issues; let me know if I can be of help in some other way.

[11:16] <Xliff> jmerelo: Thanks!

[11:17] *** _jrjsmrtn left
[11:17] *** Doc_Holliwood left
[11:19] *** __jrjsmrtn__ joined
[11:20] *** afresh1 joined
[11:21] *** lizmat_ is now known as lizmat

[11:30] *** abraxxa left
[11:32] *** abraxxa joined
[11:33] <Geth> ¦ doc: tbrowder++ created pull request #3847: Reformat and better define 'daycount' and its relation to MJD

[11:33] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3847

[11:36] <Geth> ¦ doc: 8c6159f119 | (Tom Browder)++ (committed by Juan Julián Merelo Guervós) | doc/Type/Dateish.pod6

[11:36] <Geth> ¦ doc: Reformat and better define 'daycount' and its relation to MJD

[11:36] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/8c6159f119

[11:36] <linkable6> Link: https://docs.raku.org/type/Dateish

[11:38] *** Xliff left
[11:39] *** Doc_Holliwood joined
[11:40] <jmerelo> m: my $foo = 3 but "bar"; say $foo.Int; say $foo.Num

[11:40] <camelia> rakudo-moar 726a75e24: OUTPUT: «bar␤3␤»

[11:44] <lizmat> yeah, that seems right ?

[11:44] <jmerelo> lizmat: can you explain? I'm raising an issue, would be saved the trouble...

[11:44] <lizmat> say calls .gist on the Int, and that falls back to Str

[11:45] <tbrowder> \o/  good TZ-CDT all

[11:46] <jmerelo> tbrowder: hey, Tom!

[11:47] <tbrowder> lizmat i'm leaning toward something like an 'Instant.from-mjd' for the juliandatish situation

[11:47] <tbrowder> hi jj!

[11:47] <jmerelo> lizmat: it calls .gist on the container that was initially an Int

[11:48] <jmerelo> tbrowder: when I read MJD I think about Mark-Jason Dominus

[11:49] <jmerelo> m: say $*COMPILER

[11:49] <camelia> rakudo-moar 726a75e24: OUTPUT: «Dynamic variable $*COMPILER not found␤  in block <unit> at <tmp> line 1␤␤»

[11:49] <tbrowder> well, it could be 'Instant.from-modified-juliandate'

[11:49] <jmerelo> m: say $*RAKU

[11:49] <camelia> rakudo-moar 726a75e24: OUTPUT: «Raku (6.d)␤»

[11:49] <jmerelo> m: say $*RAKU.compiler

[11:49] <camelia> rakudo-moar 726a75e24: OUTPUT: «rakudo (2021.02.25.g.726.a.75.e.24)␤»

[11:51] <tbrowder> jmerelo: now i see yr ref to mjd, very nice!

[11:52] <tbrowder> btw, yesterday i checked w/ no. 1 son and it looks like trip to spain is off

[11:53] <tbrowder> but did i see on net that spain situation is improving?

[11:56] <jmerelo> tbrowder: too bad... Well, right now looks like the 4th wave is surging

[11:57] <jmerelo> It's improving on the long term (more people get vaccinated) but on the short term, more restrictions and an increase in the number of cases.

[11:57] <tbrowder> erg, stay safe

[11:57] <jmerelo> You too :-) And everyone else, of course.

[11:58] <tbrowder> wife & i got vaccinations, and now both our children

[12:00] <jmerelo> At home, only my daughter who's working now in the health system. University professors are not on the agenda for the time being.

[12:02] <lizmat> you could ask your GP to be put on the "backlist": at the end of a day of shooting vaccines, frequently they have doses leftover, and no people to stick them into

[12:02] <lizmat> you'd be on-call

[12:02] <jmerelo> It _is_ improving in the US, right?

[12:02] <lizmat> worked for woolfy :-)

[12:02] <jmerelo> lizmat: in Spain it's not done at the GP level, it's done in special places, and in hospitals.

[12:03] <jmerelo> lizmat: glad to hear that. 

[12:05] <lizmat> well, NL also has that, but GP's also deliver vaccines to people

[12:06] *** Woodi joined
[12:07] <jmerelo> m: my $foo = "bar" but 42; say $foo.Num; say $foo.Int; say $foo.Stringy

[12:08] <camelia> rakudo-moar 726a75e24: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5bar' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[12:08] <jmerelo> m: my $foo = "bar" but 42; say $foo

[12:08] <camelia> rakudo-moar 726a75e24: OUTPUT: «bar␤»

[12:08] <jmerelo> m: my $foo = "bar" but 42; say $foo.Int

[12:08] <camelia> rakudo-moar 726a75e24: OUTPUT: «42␤»

[12:08] <jmerelo> m: my $foo = "bar" but 42; say $foo.Str

[12:08] <camelia> rakudo-moar 726a75e24: OUTPUT: «bar␤»

[12:08] <jmerelo> m: my $foo = "bar" but 42; say $foo.^roles

[12:08] <camelia> rakudo-moar 726a75e24: OUTPUT: «((<anon|1>) (Stringy))␤»

[12:09] <jmerelo> m: my List.^roles

[12:09] <camelia> rakudo-moar 726a75e24: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed my␤at <tmp>:1␤------> 3my List7⏏5.^roles␤»

[12:09] <jmerelo> m: my (2,).^roles

[12:09] <camelia> rakudo-moar 726a75e24: ( no output )

[12:09] <jmerelo> m: my @list (2,); say @list.^roles

[12:09] <camelia> rakudo-moar 726a75e24: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Signatures as constraints on variables not yet implemented. Sorry.␤at <tmp>:1␤------> 3my @list (2,)7⏏5; say @list.^roles␤»

[12:09] <jmerelo> m: my @list = (2,); say @list.^roles

[12:09] <camelia> rakudo-moar 726a75e24: OUTPUT: «((Positional) (Iterable))␤»

[12:09] <jmerelo> m: my @list = (2,) but "bar"; say @list.List

[12:09] <camelia> rakudo-moar 726a75e24: OUTPUT: «(2)␤»

[12:10] <jmerelo> m: my @list = (2,) but "bar"; say @list.Positional

[12:10] <camelia> rakudo-moar 726a75e24: OUTPUT: «No such method 'Positional' for invocant of type 'Array'␤  in block <unit> at <tmp> line 1␤␤»

[12:10] <jmerelo> m: my @list = (2,) but "bar"; say @list.Str

[12:10] <camelia> rakudo-moar 726a75e24: OUTPUT: «2␤»

[12:10] <jmerelo> m: my @list = (2,) but "bar"; say @list.Stringy

[12:10] <camelia> rakudo-moar 726a75e24: OUTPUT: «2␤»

[12:10] <jmerelo> m: my @list = (2,) but "bar"; orubt @list.Stringy

[12:10] <camelia> rakudo-moar 726a75e24: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    orubt used at line 1␤␤»

[12:10] <jmerelo> m: my @list = (2,) but "bar"; print @list.Stringy

[12:10] <camelia> rakudo-moar 726a75e24: OUTPUT: «2»

[12:10] <jmerelo> m: my @list = (2,) but "bar"; print @list.Str

[12:10] <camelia> rakudo-moar 726a75e24: OUTPUT: «2»

[12:11] <jmerelo> m: my @list = (2,) but "bar"; pput @list.Str

[12:11] <camelia> rakudo-moar 726a75e24: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    pput used at line 1. Did you mean 'put'?␤␤»

[12:11] <jmerelo> m: my @list = (2,) but "bar"; put @list.Str

[12:11] <camelia> rakudo-moar 726a75e24: OUTPUT: «2␤»

[12:14] <jmerelo> m: my @list = (2,3) but "bar"; put @list.Str

[12:14] <camelia> rakudo-moar 726a75e24: OUTPUT: «2 3␤»

[12:14] <jmerelo> m: my @list = (2,3) but Set(2,3); put @list.Set

[12:14] <camelia> rakudo-moar 726a75e24: OUTPUT: «2 3␤»

[12:14] <jmerelo> m: my @list = (2,3) but Set(4,5); put @list.Set

[12:14] <camelia> rakudo-moar 726a75e24: OUTPUT: «3 2␤»

[12:23] <Geth> ¦ doc: 244abcae9b | (JJ Merelo)++ | 2 files

[12:23] <Geth> ¦ doc: Working on signal

[12:23] <Geth> ¦ doc: 

[12:23] <Geth> ¦ doc: This refs #3844

[12:23] <Geth> ¦ doc: 

[12:23] <Geth> ¦ doc: Also, totally unrelated (although they are functionally related, working on improving Scheduler #refs 3845"

[12:23] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/244abcae9b

[12:23] <Geth> ¦ doc: e06de0bb98 | (JJ Merelo)++ | 2 files

[12:23] <Geth> ¦ doc: Adds the definition of signal in the right place, refs #3844

[12:23] <Geth> ¦ doc: 

[12:23] <Geth> ¦ doc: Also improves the description of `.condition`, closes #2788, partially superseded also by #3844

[12:23] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/e06de0bb98

[12:24] *** linkable6 left
[12:24] *** linkable6 joined
[12:26] <Geth> ¦ doc: 7657a54be5 | (JJ Merelo)++ | type-graph.txt

[12:26] <Geth> ¦ doc: Adds to typegraph.txt

[12:26] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/7657a54be5

[12:29] *** havenwood left
[12:35] *** seanrobert joined
[12:37] *** Doc_Holliwood left
[12:39] <El_Che> kanliot: yes, bintray is shutting down, so the repos were force to move: https://github.com/nxadm/rakudo-pkg/issues/77

[12:39] <tellable6> El_Che, I'll pass your message to kanliot

[12:48] *** seanrobert left
[12:54] *** Doc_Holliwood joined
[13:31] *** glaceon joined
[13:35] *** frost-lab left
[13:43] *** glaceon left
[13:56] *** ManifestO joined
[13:58] *** Manifest0 left
[14:22] *** zxcvz joined
[14:32] *** gordonfish joined
[14:33] *** Sgeo joined
[14:33] *** wamba left
[14:43] *** Doc_Holliwood left
[14:48] *** wamba joined
[14:58] *** parabolize joined
[15:20] *** wamba left
[15:24] *** rindolf joined
[15:31] *** aindilis left
[15:33] <jmerelo> m: say d('2013-12-30').earlier(week => 1, hour => 1 )

[15:33] <camelia> rakudo-moar 726a75e24: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    d used at line 1␤␤»

[15:34] <jmerelo> m: say Date.new('2013-12-30').earlier(week => 1, hour => 1 )

[15:34] <camelia> rakudo-moar 726a75e24: OUTPUT: «More than one time unit supplied.  Please provide these as a List of␤Pairs to indicate order of application if this is intended.␤  in block <unit> at <tmp> line 1␤␤»

[15:34] <jmerelo> m: say Date.new('2013-12-30').earlier( ( week => 1, hour => 1 ) )

[15:34] <camelia> rakudo-moar 726a75e24: OUTPUT: «2012-12-23␤»

[15:41] <jmerelo> m: say Date.new('2013-12-30').earlier( |  week => 1, hour => 1  )

[15:41] <camelia> rakudo-moar 726a75e24: OUTPUT: «More than one time unit supplied.  Please provide these as a List of␤Pairs to indicate order of application if this is intended.␤  in block <unit> at <tmp> line 1␤␤»

[15:48] <jmerelo> m: say Date.new('2021-03-31').earlier(  ( year => 3, month => 2, day => 8 )  )

[15:48] <camelia> rakudo-moar 726a75e24: OUTPUT: «2018-01-23␤»

[16:04] *** PimDaniel joined
[16:04] <PimDaniel> o/

[16:06] <jmerelo> Hey!

[16:06] <PimDaniel> This is an algorithm problem: I made all the process to decompose a rectilinear polygon into a set of rectangle using hopfkorp and karp algo to optimize.

[16:06] <jmerelo> m: my $d = DateTime.new(date => Date.new('2015-02-27')).later( (:1month, :2days) )

[16:06] <camelia> rakudo-moar 726a75e24: ( no output )

[16:06] *** aindilis joined
[16:07] <jmerelo> PimDaniel: Algorithms with ks in their names are always cool

[16:07] <jmerelo> m: say DateTime.new(date => Date.new('2015-02-27')).later( (:1month, :2days) )

[16:07] <camelia> rakudo-moar 726a75e24: OUTPUT: «2015-03-29T00:00:00Z␤»

[16:08] <PimDaniel> Now i'v got the set of rectangle make by cuts of my orthogon but i stuggle produce the list of rectangles by parsing the polygon.

[16:09] <PimDaniel> It's may be simple: but 1 : i'm stupid. 2 i'm a very bad programmer.

[16:11] <PimDaniel> jmerelo : my name has an 's' but no 'k' hélas!

[16:12] <jmerelo> PimDaniel: no algorithms for you, then. Maybe a theorem.

[16:13] <jmerelo> s i names make good theorems. Look at Gauss

[16:15] <PimDaniel> Here's the subject on stackoverflow : https://stackoverflow.com/questions/5919298/algorithm-for-finding-the-fewest-rectangles-to-cover-a-set-of-rectangles-without/66890485#66890485 

[16:16] <Geth> ¦ doc/master: 4 commits pushed by (JJ Merelo)++

[16:16] <Geth> ¦ doc/master: 7698e45ba9 | Moves earlier to Dateish.pod6

[16:16] <Geth> ¦ doc/master: 177884ff24 | Exemplifies latest for of earlier

[16:16] <Geth> ¦ doc/master: a4f7bd999f | Later moved to Dateish

[16:16] <Geth> ¦ doc/master: a71e711205 | Explained new form of later

[16:16] <Geth> ¦ doc/master: review: https://github.com/Raku/doc/compare/7657a54be506...a71e711205b3

[16:18] <PimDaniel> jmerelo Yes it is probably only a theorem, i don't know how to start and a rectangle does not really exist programmatically speaking. My orthogon is represented by succession of points.

[16:18] <jmerelo> PimDaniel: cool. I think I've done that with evolutionary algorithms...

[16:18] <jmerelo> PimDaniel: you need to extract rectangles from a list of vertices

[16:19] <jmerelo> PimDaniel: do you have an example for that?

[16:19] <jmerelo> PimDaniel: Also, I would really encourage you to submit questions to StackOverflow. We've had very few this month, and it helps increase visibility of the language (and also solutions)

[16:19] <PimDaniel> jmerelo I've allready cut my orthogon in rectangles.

[16:20] <PimDaniel> And made many tests with succeedeed.

[16:20] <PimDaniel> This is the ultimate Step.

[16:21] <PimDaniel> The question is now : how go i get the list of rectangles : i ca see the rectangle but cannot have his list.

[16:21] <jmerelo> PimDaniel: please give all needed context so that we can try and help you. And I would really appreciate if you would do it in StackOverflow

[16:24] <PimDaniel> jemerelo Ok thank's! Very kind! i'll try to put my forms on stackoverflows. This is console ascii chars so not sure to be able to.

[16:26] <jmerelo> PimDaniel: don't think there will be a problem.

[16:26] <PimDaniel> jmerelo it is a problem.

[16:27] <PimDaniel> stackoverflow limits character size.

[16:27] <PimDaniel> I've just try and it does NOT work.

[16:27] <PimDaniel> The best way should be to publish my code so that you could use it.

[16:31] <jmerelo> PimDaniel: that never hurts. You can insert a link to a gist, or a github repo

[16:31] <PimDaniel> Welll the problem is rather simple : i've set of rectangle composed of remaining vertices, and cut axes and, borders. These are the minumum decomposition of the orthogon into rectangles. But now i struggle to produce the set of rectangles. I suppose turning around the Points of the polygon but i do not know how to do.

[16:33] <PimDaniel> I'll have to publish the code anyway on GitHub.

[16:37] *** mowcat joined
[16:37] *** parabolize left
[16:37] <Geth> ¦ doc: bf9480f04d | (JJ Merelo)++ | doc/Type/Lock.pod6

[16:37] <Geth> ¦ doc: Some clarifications on Lock

[16:37] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/bf9480f04d

[16:37] <linkable6> Link: https://docs.raku.org/type/Lock

[16:41] *** domidumont left
[16:55] <PimDaniel> jemerelo My code is pushing....

[16:57] *** abraxxa left
[16:58] *** parabolize joined
[16:59] *** abraxxa joined
[17:00] <jmerelo> PimDaniel++

[17:05] <Geth> ¦ doc: 76e4a37be8 | (JJ Merelo)++ | doc/Type/Scheduler.pod6

[17:05] <Geth> ¦ doc: Clarifies introduction.

[17:05] <Geth> ¦ doc: 

[17:05] <Geth> ¦ doc: Also adds a stub, following advice in #3209. Adds a missing method stub, refs #3321.

[17:05] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/76e4a37be8

[17:05] <linkable6> Link: https://docs.raku.org/type/Scheduler

[17:06] *** linkable6 left
[17:07] *** linkable6 joined
[17:10] *** sourceable6 joined
[17:35] *** HarmtH_ left
[17:42] <PimDaniel> Sorry if this is a bit long...

[17:49] <pat_js> hi, haven't been here for a while (acutally have never been here, but I used to hang out in #perl6 way back when…), is there an ideom for reducing an array of hashes into a HoH?

[17:51] <pat_js> i have [{key=>'foo', date=>Date.new('2020-03-31'), hours=>2}…] and want {'2020-03-31'=>{ foo => ⟨sum of hours⟩}

[17:56] <pat_js> I would grab for .reduce, but am not sure if there's an operator chain that does it as well

[18:01] *** wamba joined
[18:05] *** zxcvz left
[18:06] *** HarmtH joined
[18:08] <Geth> ¦ doc: 77300b9e97 | (JJ Merelo)++ | doc/Type/Lock/ConditionVariable.pod6

[18:08] <Geth> ¦ doc: Clarifies signal

[18:08] <Geth> ¦ doc: 

[18:08] <Geth> ¦ doc: Adding an example. This closes #3844; this is done. It can probably be improved, but please anyone open a new issue for that.

[18:08] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/77300b9e97

[18:08] <linkable6> Link: https://docs.raku.org/type/Lock::ConditionVariable

[18:08] *** linkable6 left
[18:09] *** linkable6 joined
[18:12] *** PimDanie1 joined
[18:12] *** neshpion joined
[18:12] <Geth> ¦ ecosystem: 9e412765e8 | Altai-man++ (committed using GitHub Web editor) | META.list

[18:12] <Geth> ¦ ecosystem: Remove modules now indexed by fez

[18:12] <Geth> ¦ ecosystem: 

[18:12] <Geth> ¦ ecosystem: Actually a test to see how it behaves.

[18:12] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/9e412765e8

[18:13] <PimDanie1> jmerelo  https://github.com/Pim-tech/Orthogon

[18:14] <PimDanie1> jemerlo Please read the README.md your os must have an xterm terminal or so.

[18:18] *** PimDaniel left
[18:18] *** PimDanie1 left
[18:18] <jmerelo> PimDanie1: OK, I'll check it out. Did you create also a StackOverflow question? Or an issue where we can see what's the problem?

[18:18] <tellable6> jmerelo, I'll pass your message to PimDanie1

[18:23] *** Sgeo_ joined
[18:24] *** Sgeo__ joined
[18:25] *** PimDaniel joined
[18:27] *** Sgeo left
[18:28] *** Sgeo_ left
[18:29] <PimDaniel> jemerelo Yes please look at my last link about stackoverflow. But the question is really simple: how to constituate the list of rectangles to fill them to make a rectangle whe need a common point an 2 lines rectices 90° or 2 points never mind but even with a completed polygon it's not so easy.

[18:33] <pat_js> ah found the multi-level-classification part of the docs! neat (and sorry for the spam)

[18:35] *** Doc_Holliwood joined
[18:35] *** ggoebel joined
[18:35] <ggoebel> is there an irc channel for the comma ide?

[18:37] *** jmerelo left
[18:37] <lizmat> not that I'm aware of, but most comma devs also hang out on #cro

[18:39] <PimDaniel> ggoebel comma look good but i struggle to have informations too.

[18:39] *** HarmtH left
[18:40] *** Sgeo_ joined
[18:40] <PimDaniel> lizmat Do you know if we may debug step by step with non paying version?

[18:41] <lizmat> I don't know, I'm not a Comma user myself

[18:41] <lizmat> deeply entrenched in the vi world  :-)

[18:42] *** HarmtH joined
[18:42] <PimDaniel> lizmat Ok,Thank's! I tried and i gave up. I use vim with powerfull plugins too.

[18:43] <PimDaniel> lizmat Do you know if there are interesting vim/neovim plugins for Raku?

[18:43] <lizmat> none other than mentioned in the docs

[18:43] *** Sgeo__ left
[18:44] <PimDaniel> Ok For now i just find one the make syntax colorisation.

[18:45] *** PimDaniel left
[19:05] <ggoebel> was trying to figure out how to insert a unicode character in comma... but comma binds [ctrl]+[shift]+u to uppercase... so standard linux ibus support for inserting unicode doesn't work...

[19:06] <lizmat> sena_kun ^^

[19:07] <ggoebel> wound up inserting the unicode character in the firefox browser url then cutting and pasting

[19:07] <sena_kun> ggoebel, if you want operators and terms, you can enable automatic conversion in settings.

[19:07] <sena_kun> As for completely random characters I am not sure what can help other than removing the binding.

[19:08] <ggoebel> I'm not a huge fan of automatic conversion... it usually winds up biting me as often as it helps... If it comes up again, I'll try removing the binding.

[19:08] <ggoebel> thx

[19:11] <codesections> ggoebel: (a bit on an aside, but I hadn't heard of ctrl+shift+u as a Linux thing for Unicode.  After a quick web search, it turns out to be a Gnome-binding.  I've always thought of the compose key as the standard Linux approach to Unicode, but I guess TIMTOWTDI )

[19:12] <codesections> s/on (an aside)/of $0/ 

[19:16] <ggoebel> codesections: fwiw I'm using it on arch linux w/ kde plasma... per https://wiki.archlinux.org/index.php/IBus

[19:18] *** b2gills left
[19:19] <codesections> ggoebel++ TIL 

[19:24] <japhb> ggoebel: I usually use a fast (Raku-based) search of the Unicode database, with easy to cut and paste output

[19:25] <japhb> I think [Coke]++ published a variant

[19:26] *** Black_Ribbon joined
[19:26] <japhb> Yeah, here's his: https://github.com/coke/raku-uni

[19:27] <ggoebel> nice

[19:28] <japhb> (Mine differs in outputting different information per character, but it looks like his is meant to be compatible with RJBS's Perl version)

[19:32] *** retropikzel joined
[19:32] <japhb> ggoebel: Here's mine: https://gist.github.com/japhb/7b8a68da1b4b6c201e5334c1269b951a

[19:40] *** retropikzel left
[19:49] *** whatnext joined
[19:51] <whatnext> hello all... I am the author of this question on perlmonks https://perlmonks.org/?node_id=11130506 - which now has an answer courtesy SmokeMachine - and I am v happy and grateful about that =D

[19:52] <lizmat> :-)

[19:52] <whatnext> but now I am also trying to figure out the best way to namespace the models

[19:52] *** bobv left
[19:53] *** retropikzel joined
[19:53] <whatnext> I mean, if in my main code I want to e.g. refer to the models as `Schema::User`, `Schema::Vmail` etc. is there a way to achieve that?

[19:55] <whatnext> I thought to have `unit module Schema` at the top of my `.rakumod` file, and that means I can refer to `Schema::User` in my script as I want; however then it seems the models can't see each other

[19:55] <japhb> whatnext: Here's my hack for that sort of thing: https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/Server/Storage/Driver/Red/SQLite/IdentitySchema.rakumod#L10

[19:56] <japhb> (Also note that there is a #red channel too, though I think it's welcome discussion here.)

[19:56] <MasterDuke> whatnext: `unit *` means treat the entire file as that *, so you don't need to have everything indented

[19:59] <lizmat> japhb: there is a #red channel?  I don't see it in my channel list

[20:00] <ggoebel> PimDaniel: yes it looks like you can set breakpoints and debug step by step in the community editions

[20:00] <tellable6> ggoebel, I'll pass your message to PimDaniel

[20:00] *** guifa2 joined
[20:00] <japhb> lizmat: Huh, that's the second time you've said you couldn't see a channel that I was actually in ...  :-?

[20:01] <whatnext> @MasterDuke yes I believe I understand that - I was thinking it would effectively namespace the classes to the `module` name

[20:02] <japhb> whatnext: I think with Red there's the problem that Red is trying to manage things from *outside* the namespace of your schema.

[20:03] <whatnext> @japhb thanks - that looks interesting. I might need a few mins to figure out what you did there!

[20:05] <japhb> Egregious hax.  ;-)

[20:05] *** Geth left
[20:08] <whatnext> @japhb maybe there is a "best practice" way to organise files/classes that avoids this? e.g. putting the classes in different files... although I was trying to avoid that

[20:08] <whatnext> probably I'm thinking about it too much '=D

[20:09] <japhb> Yeah, this definitely fell into my category of "There's a one-line workaround sub to just do the magic incantation.  I'm going to abstract that, and move on with my life."

[20:10] <codesections> ‘japhb and the Egregious Hax’ ... not a bad band name 

[20:10] <japhb> And frankly, aside from that bit of magic, the rest is fairly self-documenting, so :shrug:

[20:11] <japhb> codesections: :-D

[20:13] *** abraxxa left
[20:13] *** ggoebel left
[20:15] *** abraxxa joined
[20:16] *** ggoebel joined
[20:17] <whatnext> haha no doubt you are right! I'll look into your black magic solution... thanks (y)

[20:21] *** Doc_Holliwood left
[20:27] *** Doc_Holliwood joined
[20:38] <whatnext> ok wait...

[20:38] <whatnext> now I get what you did there (sorry bit slow sometimes)

[20:39] <japhb> Oh no worries, it's definitely one of those "sudden enlightenment" things.

[20:39] <japhb> Once it clicks, you go "OH!  GOT IT!"

[20:40] <whatnext> that's definitely an improvement in terms of saving on typing

[20:40] <whatnext> haha yes

[20:40] <dpk> i've probably asked this before, but are the semantics of :ignoremark formally defined anywhere?

[20:42] <whatnext> but I still have the namespace issue though, right?

[20:46] <japhb> whatnext: I exported them directly (as the bare model names), because that worked fine for me -- all my code that touches the DB is hidden in a module of its own which uses my schema module, so I don't leak out beyond the storage driver.  But yeah, you may need a tweak for your main code if you want the models in a partial namespace.

[20:46] <japhb> My fix just cleans up the problem of being able to refer between the models without your eyes crossing and fingers getting sore.

[20:46] <japhb> :-)

[20:47] *** rindolf left
[20:47] <whatnext> japhb yep it's a cool fix - definitely going to incorporate it

[20:47] <japhb> whatnext: You can see how I did the matching storage driver in https://github.com/Raku-MUGS/MUGS-Core/blob/main/lib/MUGS/Server/Storage/Driver/Red/SQLite.rakumod (which implements roles saying what storage drivers must support).  Nothing outside of that module is aware the DB even has a schema.

[20:48] <japhb> (And in fact, the "Fake" in-memory storage driver doesn't really.)

[20:55] <whatnext> japhb ok thanks - I think this might be a bit beyond me at this stage however '=D

[20:57] <SmokeMachine> One could also use schema to do that…

[20:59] *** wamba left
[20:59] <guifa2> dpk: ignoremark does a comparison based on the first character only of decomposed characters.

[20:59] <guifa2> so the formal definition would be in unicode itself

[20:59] <whatnext> SmokeMachine how do you mean?

[20:59] <SmokeMachine> One could export a schema, and when importing it, you could get the models from its methods

[21:01] <dpk> guifa2: is is formally specified somewhere that that’s what ignoremark does, though?

[21:02] <dpk> because if what you said is accurate, it’ll be wrong and useless for e.g. Hangul

[21:02] <whatnext> SmokeMachine do you have a link to an example of what you mean?

[21:03] <SmokeMachine> whatnext: I’m searching… (sorry, on mobile)

[21:03] <dpk> and for emoji regional indicators, to use a more trendy example

[21:05] <dpk> raku: say "🇩🇪" ~~ /:ignoremark 🇩🇰/

[21:05] <evalable6> dpk, rakudo-moar fc359927d: OUTPUT: «(exit code 1) 04===SORRY!04=== Er…»

[21:05] <evalable6> dpk, Full output: https://gist.github.com/3f8a6c0ed9f1154cb7b11451b7ca28c0

[21:05] <guifa2> dpk: Hangul doesn't have combining characters.  It either has precomposed characters or it uses the jamo which are composed at a font level, but are not actually combining characters

[21:05] <SmokeMachine> whatnext: something like this: https://github.com/FCO/Red/blob/master/t/51-schema.t (sorry for not finding a good example)

[21:06] <guifa2> m: 🇩🇪.ords.say 

[21:06] <camelia> rakudo-moar 726a75e24: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Bogus statement␤at <tmp>:1␤------> 3<BOL>7⏏5🇩🇪.ords.say␤    expecting any of:␤        prefix␤        statement list␤        term␤»

[21:06] <guifa2> m: "🇩🇪".ords.say

[21:06] <camelia> rakudo-moar 726a75e24: OUTPUT: «(127465 127466)␤»

[21:06] <guifa2> 127465 and 127466 are both defined as base characters

[21:06] <dpk> ... what definition of ‘character’ were you using jn your original definition?

[21:06] <dpk> i assumed codepoint

[21:07] <dpk> what’s a base character for Raku?

[21:07] <japhb> Well, we can always try asking samemark

[21:07] <japhb> m: "🇩🇪".samemark(' ').say

[21:07] <camelia> rakudo-moar 726a75e24: OUTPUT: «🇩␤»

[21:07] <japhb> Of course, that could be a bug too, I dunno.

[21:07] <dpk> raku: say "🇩🇪" ~~ /:ignoremark '🇩🇰'/

[21:07] <evalable6> dpk, rakudo-moar fc359927d: OUTPUT: «｢🇩🇪｣␤»

[21:07] <guifa2> m: "🇩🇪">>.samemark(' ').say

[21:07] <camelia> rakudo-moar 726a75e24: OUTPUT: «(🇩)␤»

[21:08] <guifa2> err

[21:08] <MasterDuke> dpk: samcv is probably the right person to ask

[21:08] <dpk> ‘Germany and Denmark “actually the same country”’ — Raku, 2021

[21:08] <guifa2> "🇩🇪".comb>>.samemark(' ').say

[21:08] <evalable6> guifa2, rakudo-moar fc359927d: OUTPUT: «(🇩)␤»

[21:08] <whatnext> @SmokeMachine ah ok I think i get the idea

[21:09] <guifa2> "🇩🇪".uniprops.say 

[21:09] <evalable6> guifa2, rakudo-moar fc359927d: OUTPUT: «(So So)␤»

[21:09] <guifa2> ^^ So = "Symbol, other"

[21:10] <dpk> ‘We’re aware of the long-standing issue of the border with Schleswig-Holstein’, said guifa2, ‘and we thought it would just be easier to make them all one country.’

[21:10] <guifa2> m: "q̃".uniprops.say

[21:10] <camelia> rakudo-moar 726a75e24: OUTPUT: «(Ll Mn)␤»

[21:10] <guifa2> ^^ LL = Letter, lowercase; Mn = Mark, nonspacing

[21:10] <whatnext> yes I think I have an idea what I can do now... thanks

[21:11] <dpk> it seems to me it’d be better if ignoremarks only ignored codepoints that are actually in character class M*

[21:11] <dpk> because the current behaviour, as shown, makes it think Germany and Denmark are the same country. and based on that, i assume my objection about Hangul stands

[21:13] <japhb> dpk: Officially propose the change in an issue, citing relevant Unicode TRs, and showing what would need to change in roast.  :-)

[21:13] <dpk> i’ll get round to it

[21:13] * japhb hands dpk a Round Tuit

[21:14] <dpk> thanks!

[21:16] <dpk> hmm, but it also shouldn’t ignore codepoints in category Mc, i think. otherwise it’d be wrong/surprising for Devanagari and some others

[21:19] <guifa2> dpk: perhaps the issue issue is more a confusion on characters vs glyphs.  Consider the following sequence in Hangul: ᄼᆡᇫ

[21:19] <guifa2> Unicode defines that as a single glyph

[21:19] <dpk> (‘citing relevant Unicode TRs’ will be tricky, because except in a very few cases (specifically, converting everything to ASCII), ignoring and stripping diacritics etc is something which the Unicode people pretty clearly think should Not Be Done)

[21:20] <guifa2> (of course, I don't have the font for it so it shows up as three distinct characters — but mac OS X will not let me put the cursor in between them)

[21:20] <guifa2> m: 'ᄼᆡᇫ'.chars.say

[21:20] <camelia> rakudo-moar 726a75e24: OUTPUT: «1␤»

[21:20] <dpk> guifa2: neither ‘character’ nor ‘glyph’ is a firmly-defined concept in Unicode. please be clearer.

[21:20] <guifa2> character = codepoint

[21:20] <guifa2> glyph = composed unit

[21:21] <dpk> it’s a single extended grapheme cluster, which Raku and Swift call a character but most languages don’t care about

[21:21] <dpk> it’s three codepoints, which are what most languages call a character

[21:21] <guifa2> Yes, I'm well aware of this :-)

[21:21] <dpk> your font renderer may use any number of glyphs it pleases to show it to you, depending on how the font is constructed

[21:22] <dpk> but already, that’s the OpenType definition of glyph and not a Unicode one

[21:22] <japhb> dpk: Having been recently in the normalization TRs and in the IETF PRECIS RFCs, there seems to be a carved out space around searching (case-ignoring or mark-ignoring search).  As in, how to convert when you want to create an index to quickly search against.

[21:25] *** Doc_Holliwood left
[21:25] *** Doc_Holliwould joined
[21:26] <dpk> japhb: i’ll take a closer look

[21:28] *** dogbert11 joined
[21:28] <jjatria> I've been getting this error sometimes recently, and I'm not sure I understand it

[21:28] <jjatria> 'Serialization Error: missing static code ref for closure '' (gen/moar/World.nqp:2597)'

[21:29] <jjatria> Or, more like "I'm sure I don't understand it"

[21:30] <jjatria> The odd thing is that sometimes it goes away, and then the exact same code continues to work fine

[21:31] *** dogbert17 left
[21:31] <guifa2> But yes, it does appear that Raku is assuming that all clusters are made of combining marks.   And thankfully we don't need to bother samcv because it seems it's handled all in Rakudo world based on the samemark method: https://github.com/rakudo/rakudo/blob/8668474dd387c3c4fc590e5de29405fe70cdff24/src/core.c/Str.pm6#L2553

[21:32] *** dogbert17 joined
[21:35] *** dogbert11 left
[21:39] <guifa2> and here's the main roast file, which doesn't consider anything beyond combining marks https://github.com/Raku/roast/blob/beeb2cb31d67b970f756e1f1490b2f482bb34397/S05-modifier/ignoremark.t

[21:42] <japhb> Yeah, underspecification is our friend on that one, because it means we can choose a more precise behavior without having to change existing tests.

[21:42] <japhb> Though it does specify some behavior around Cf codepoints

[21:43] <japhb> (Near the bottom)

[21:59] <guifa2> I'll write up an issue for it

[22:00] *** benaiah left
[22:45] *** benaiah joined
[22:57] *** whatnext left
[23:10] *** Doc_Holliwould left
[23:11] *** pecastro left
