[00:00] *** gordonfish- joined
[00:02] *** gordonfish left
[00:02] *** reportable6 left
[00:05] *** reportable6 joined
[00:35] *** evalable6 joined
[00:55] *** greaser|q left
[00:55] *** greaser|q joined
[00:55] *** greaser|q is now known as GreaseMonkey

[01:03] *** gordonfish- left
[01:36] *** linkable6 joined
[01:46] *** gordonfish joined
[01:56] *** Xliff joined
[01:59] <Xliff> Hello! What would be involved with the smoketester project?

[02:10] *** berber44 joined
[03:01] *** gordonfish left
[03:07] *** berber44 left
[03:11] *** gordonfish joined
[03:38] *** gordonfish left
[03:38] <vrurg> .tell Xliff smoke testing was just an example. I'd be glad to hear somebody really started it.

[03:38] <tellable6> vrurg, I'll pass your message to Xliff

[03:39] <vrurg> .tell Xliff BTW, if you still suffer from missing imported symbols, I know what the cause is and how to get around it until a proper fix is developed.

[03:39] <tellable6> vrurg, I'll pass your message to Xliff

[03:41] <japhb> vrurg: Do tell?

[03:41] <vrurg> japhb: pardon?

[03:45] <Xliff> vrurg: Indeed

[03:46] <Xliff> vrurg: I am a bit curious. How is "smoketest" different from Blin?

[03:46] <Xliff> Would a web front-end on Blin be sufficent for the task?

[03:46] <vrurg> A bit late today, I'm almost afk already. Remind me tomorrow. But basically, creating explicit to-level module and use it in every submodule should work.

[03:47] <Xliff> And please, a workaround would be wonderful!

[03:47] <vrurg> Xliff: as to smoke test, consider a distributed infrastructure for it.

[03:47] <vrurg> Similar to what they have in perl.

[03:47] <vrurg> Too late already, afk for late dinner.

[03:48] <Xliff> I don't know what they have in Perl. Also, distributed infrastructures requires a decision on what handles the distribution. We'd need to spec that out.

[03:48] <Xliff> vrurg: OK. See you tomorrow. Looking forward to it.

[04:38] *** evalable6 left
[04:38] *** linkable6 left
[04:40] *** evalable6 joined
[05:35] <japhb> vrurg: Sorry, didn't see you had responded right off.  I meant, could you share the missing imported symbols cause and workaround with all of us?  I know I'm interested to hear the details.  :-)

[05:40] *** evalable6 left
[06:02] *** reportable6 left
[06:04] *** reportable6 joined
[06:33] *** holyghost joined
[06:41] *** Altai-man left
[06:41] *** linkable6 joined
[06:42] *** sena_kun joined
[06:43] *** evalable6 joined
[06:48] *** Sgeo left
[06:53] *** jjido joined
[07:00] *** ufobat joined
[07:13] *** moon-child left
[07:13] *** moon-child joined
[07:23] *** MasterDuke left
[07:28] *** holyghost left
[07:28] *** MasterDuke joined
[07:46] *** jjido left
[08:08] *** dakkar joined
[08:08] *** MasterDuke left
[08:12] *** KotH left
[08:12] *** abraxxa left
[08:12] *** TempIRCLogger__ left
[08:12] *** renormalist left
[08:12] *** clarjon1 left
[08:12] *** xkr47 left
[08:12] *** jercos left
[08:12] *** swaggboi left
[08:12] *** elcaro left
[08:12] *** samebchase left
[08:21] *** MasterDuke joined
[08:24] *** KotH joined
[08:24] *** abraxxa joined
[08:24] *** TempIRCLogger__ joined
[08:24] *** renormalist joined
[08:24] *** clarjon1 joined
[08:24] *** xkr47 joined
[08:24] *** jercos joined
[08:24] *** swaggboi joined
[08:24] *** elcaro joined
[08:24] *** samebchase joined
[09:48] *** linkable6 left
[09:48] *** evalable6 left
[11:28] *** abraxxa left
[11:42] *** abraxxa joined
[12:02] *** reportable6 left
[12:03] *** reportable6 joined
[12:03] * Xliff is playing https://www.deezer.com/us/track/1406992982?autoplay=true

[12:26] <sena_kun> o/

[12:27] <sena_kun> Can anyone with a docker setup help me confirm something please? I need `docker run -i -t rakudo-star:2021.04 /bin/bash` and then to see if `apt-get update` works.

[12:28] <El_Che> running it

[12:28] <El_Che> or ruining it

[12:28] <El_Che> eye of the beholder thing

[12:29] <El_Che> works

[12:29] <sena_kun> geh

[12:29] <El_Che> I use podman though

[12:29] <sena_kun> it fails for both my machines somehow

[12:29] <El_Che> dns?

[12:29] <sena_kun> same for 2020.10

[12:29] <sena_kun> Temporary failure resolving 'deb.debian.org'

[12:30] <El_Che> DNS allright

[12:30] <El_Che> that's a host failure, probably

[12:30] <sena_kun> Oh, it's the same for nginx image, then something is wrong with my two machines with completely different environments.

[12:31] <El_Che> yeah

[12:31] <sena_kun> It resolves nicely on the host of course, but not in containers.

[12:31] <El_Che> DNS or bridge setup

[12:31] <El_Che> try pinging

[12:31] <El_Che> an ip

[12:31] <El_Che> so you know if it's network or dns

[12:31] <El_Che> ping 8.8.8.8

[12:32] <sena_kun> it pings the deb.debian.org IP well, same for ping 8.8.8.8

[12:32] <sena_kun> in /etc/resolv.conf I have `nameserver 192.168.8.1`, which is presumably host?

[12:33] <sena_kun> aye, that's router

[12:34] <El_Che> search local

[12:34] <El_Che> nameserver 10.0.2.3

[12:34] <El_Che> nameserver 172.16.1.5

[12:34] <El_Che> it puts the bride address and my network setup

[12:35] <El_Che> are you claiming port 53 on one of your containers?

[12:35] <sena_kun> No

[12:36] <sena_kun> My current idea is to overwrite resolve.conf to point to something working like 8.8.8.8 and see if it helps.

[12:36] <El_Che> that's a workaround and not a fix

[12:37] <sena_kun> Well, I need to release Comma somehow. :P

[12:37] <sena_kun> El_Che, if you are curious to investigate, then please elaborate what do you mean by "search local"?

[12:37] <El_Che> that's a paste of my resolv.conf

[12:37] <El_Che> search local means it attaches .local to hosts

[12:38] <El_Che> you can safely ignore it

[12:38] <sena_kun> Ah, I thought it's something for me to do to get more details.

[12:38] <El_Che> sena_kun: try --nds

[12:38] <El_Che> dns

[12:39] <El_Che> run -ti --dns 8.8.8.8

[12:39] <El_Che> if you need a less hacky workaround

[12:40] <El_Che> I don't know your setup, maybe it's confused by the systemd resolvconf 

[12:49] *** Xliff left
[12:49] *** tejr_ joined
[12:49] <El_Che> sena_kun: completely next to the point: have you tried podman? It does not need root, so it's great for developing

[12:49] *** Xliff joined
[12:50] *** tejr left
[12:50] *** evalable6 joined
[12:51] *** linkable6 joined
[12:53] <ugexe> i know it was yesterday but i had dns issues most of the day due to the facebook fiasco overloading most dns servers

[13:11] *** patrickb joined
[13:12] <patrickb> o/

[13:13] <patrickb> Just wanted to chime in. El_Che already said so, but unsure if the point came accross: `docker run -it --dns 8.8.8.8 rakudo-star:2021.04 /bin/bash` might do the trick.

[13:54] *** sena_kun left
[13:55] *** sena_kun joined
[14:03] *** Altai-man joined
[14:04] *** sena_kun left
[14:15] *** Altai-man_ joined
[14:16] *** Sgeo joined
[14:17] *** Altai-man_ left
[14:32] *** jess left
[14:37] <Xliff> I'm getting a lot of these error messages from a lot of different compunits: "Type check failed for return value; expected Seq:D but got Seq (Seq)"

[14:57] *** jmcgnh left
[15:01] <SmokeMachine> I was having some problems on my personal computer with the new Mac OS beta that it was hanging every time I tried to use something… Raku runs, but if I `use Red` for example it hangs for ever… zef was also hanging… it seemed to me a Mac permission problem… but I couldn’t see any message or something like that… is anyone else having that issue?

[15:02] <SmokeMachine> Running that inside a container works

[15:06] *** jmcgnh joined
[15:32] <ugexe> might look at the output of RAKUDO_MODULE_DEBUG=1 and see if it appears stuck on something or if its stuck in a loop

[15:44] <SmokeMachine> ugexe: I'll try it later, thanks!

[15:46] *** patrickb left
[15:48] <SmokeMachine> ugexe: I tried, but I couldn't hold my self: https://usercontent.irccloud-cdn.com/file/KvJLzn2w/image.png

[15:50] <SmokeMachine> ugexe: and running `zen install App::Mi6` (this is just the end of the log) https://usercontent.irccloud-cdn.com/file/NJfZsRA4/image.png

[15:51] <SmokeMachine> it seems to have loaded Zef::CLI (the beginning of the log): https://usercontent.irccloud-cdn.com/file/hKUYI0Ew/image.png

[15:54] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/NslDI3vo/image.png

[15:55] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/GsI8QdFQ/image.png

[15:57] <SmokeMachine> anyone with the same problem?

[16:01] *** berber44 joined
[16:02] <dakkar> not exactly

[16:03] <dakkar> I just tried running `zef` on a recently-upgraded rakudo (first time I run anything after the upgrade), and it took ~20 seconds of full CPU

[16:03] <dakkar> second run takes ½s

[16:03] <dakkar> but that's "normal", as all the precomp needs re-doing

[16:13] <SmokeMachine> I'll leave it running, but: https://usercontent.irccloud-cdn.com/file/aMU51jIW/image.png

[16:13] <SmokeMachine> dakkar: ^^

[16:15] <SmokeMachine> dakkar: are you running on beta?

[16:15] <dakkar> 2021.08

[16:15] <SmokeMachine> https://usercontent.irccloud-cdn.com/file/xrDI0Hhn/image.png

[16:15] <dakkar> oh, sorry, not a mac

[16:16] <dakkar> this is a gentoo linux

[16:16] <dakkar> so whatever happens onmy machine is not useful to you

[16:16] <SmokeMachine> hum... this started happening to me when I've updated to this beta

[16:16] *** berber44 left
[16:17] <SmokeMachine> I'll stop this... I'm pretty sure it will never finish: https://usercontent.irccloud-cdn.com/file/AUPrRfj6/image.png

[16:22] <dakkar> at this point I usually try `strace`, to see what files are being opened and what errors the system calls produce

[16:22] <dakkar> but reading the output of strace takes some practice

[16:34] *** dakkar left
[16:38] *** gordonfish joined
[16:45] <codesections> If code inside a .tap throws an error, I get that error in exactly the way I'd expect:

[16:45] <codesections> m: my Supplier $s .= new; $s.Supply.tap: { say 42 / $_ }; $s.emit: 0;

[16:45] <camelia> rakudo-moar ec65ffc8d: OUTPUT: «Attempt to divide by zero when coercing Rational to Str␤  in block <unit> at <tmp> line 1␤␤»

[16:46] <codesections> Is there some reason why I *don't* get that error if I run the same code in a .throttle block instead of .tap?

[16:46] <codesections> m:  my Supplier $s .= new; $s.Supply.throttle: 1, { say 42 / $_ }; $s.emit: 0;

[16:46] <camelia> rakudo-moar ec65ffc8d: ( no output )

[16:48] <codesections> (This *feels* like it could be a buggy holdover from the pre-v6.d behavior of start, https://docs.raku.org/language/control#start but it's also possible that it isn't a bug/I'm missing a good reason for it to swallow those exceptions) 

[16:55] <codesections> (or maybe the .throttle example should be the below (which also doesn't throw))

[16:55] <codesections> m:  my Supplier $s .= new; $s.Supply.throttle(1, { say 42 / $_ }).tap({.result}); $s.emit: 0

[16:55] <camelia> rakudo-moar ec65ffc8d: ( no output )

[17:38] *** linkable6 left
[17:38] *** evalable6 left
[18:03] *** reportable6 left
[18:05] *** reportable6 joined
[18:10] *** [Coke] left
[18:13] *** [Coke] joined
[18:30] <Geth> ¦ examples: coke self-assigned Only first 100 Project Euler problems should have solutions https://github.com/Raku/examples/issues/79

[18:39] *** linkable6 joined
[18:41] *** evalable6 joined
[18:48] <lizmat> SPA: the Rakudo Weekly News is like the Deutsche Bahn: delayed (until tomorrow)

[18:48] *** gordonfish- joined
[18:49] *** gordonfish left
[18:49] *** gordonfish- is now known as gordonfish

[18:54] *** clarkema left
[19:04] *** jess joined
[19:16] *** berber44 joined
[19:19] *** moon-child left
[19:19] *** moon-child joined
[19:24] *** berber44 left
[19:26] *** childlikempress joined
[19:26] *** moon-child left
[19:27] *** gordonfish- joined
[19:27] *** gordonfish left
[19:32] <discord-raku-bot> <Anton Antonov#7232> 🙂

[19:34] *** gordonfish- left
[19:38] *** gordonfish joined
[19:43] *** childlikempress left
[19:45] *** tejr_ is now known as tejr

[19:47] *** moon-child joined
[20:02] *** moon-child left
[20:03] *** moon-child joined
[20:10] *** gordonfish left
[20:16] *** Maylay joined
[20:19] <discord-raku-bot> <Anton Antonov#7232> I apologize for this ignorant question: Are the new RakuAST functionalities available in the Raku version I will get if I use `rakubrew build moar-blead master` ?

[20:19] *** DarthGandalf left
[20:20] <MasterDuke> no, the work hasn't been completed yet so it's happening on the rakuast branch

[20:20] *** gordonfish joined
[20:21] <[Coke]> I think you need the rakuast branch, and an env var, and I don't think it's been rebased since new-disp landed.

[20:21] <MasterDuke> i'm not sure if you need the env var anymore

[20:22] <MasterDuke> but i'm pretty sure it was rebased just today

[20:22] <[Coke]> oh, nifty

[20:29] *** moon-child left
[20:29] *** childlikempress joined
[20:41] *** DarthGandalf joined
[20:42] <discord-raku-bot> <Anton Antonov#7232> Thank you MasterDuke and Coke.

[20:50] *** ufobat left
[20:52] *** jjido joined
[20:59] *** DarthGandalf left
[21:09] *** DarthGandalf joined
[21:10] *** guerr joined
[21:15] *** Guest12 joined
[21:16] *** childlikempress is now known as moon-child

[21:17] *** guerr left
[21:19] <Guest12> Doc says "Trying to assign a value that does not fit into a particular native type, produces an exception". But...

[21:20] <Guest12> raku: say my int32 $ = 1000000000000

[21:20] <evalable6> Guest12, rakudo-moar ec65ffc8d: OUTPUT: «-727379968␤»

[21:20] <Guest12> raku: say my int32 $ = 10000000000000000000000000000000000000

[21:20] <evalable6> Guest12, rakudo-moar ec65ffc8d: OUTPUT: «(exit code 1) Cannot unbox 123 bit wide bigint into native integer␤  in block <unit> at /tmp/mh3jQvUPCH line 1␤␤»

[21:21] <MasterDuke> there are still some bugs and/or not yet implemented features in unsigned or smaller-than-64-bit natives

[21:22] <Guest12> bisectable: say (my int32 $ = 1000000000000) == -727379968

[21:22] <bisectable6> Guest12, Will bisect the whole range automagically because no endpoints were provided, hang tight

[21:22] <bisectable6> Guest12, ¦6c (58 commits): «True␤»

[21:22] <bisectable6> Guest12, Nothing to bisect!

[21:23] <Guest12> MasterDuke: Thanks. Does it make sense for the docs to reflect (very long-standing and basic) bugs?

[21:24] <MasterDuke> there's been debate about that. should they reflect the limitations of a particular implementation? or the intentions of the language?

[21:24] <Guest12> Ah. "NOTE: at the time of this writing (2018.05), certain implementations (such as Rakudo)

[21:25] <Guest12> offer somewhat spotty details on native types, such as whether int64 is available

[21:25] <Guest12> and is of 64-bit size on 32-bit machines, and how to detect when your program is running on such hardware."

[21:26] <MasterDuke> yes. currently i would recommend only using the signed, 64-bit versions with rakudo, i believe those work fine

[21:26] <Guest12> I missed that note. (I searched for "bug" and "known")

[21:27] <Guest12> MasterDuke: Thanks. Makes sense.

[21:27] <MasterDuke> np

[21:28] *** Guest12 left
[21:30] *** MasterDuke left
[21:39] *** DarthGandalf left
[21:45] *** DarthGandalf joined
[21:55] *** chloekek joined
[22:02] *** MasterDuke joined
[23:02] *** tellable6 left
[23:02] *** bisectable6 left
[23:02] *** releasable6 left
[23:02] *** notable6 left
[23:02] *** unicodable6 left
[23:02] *** sourceable6 left
[23:02] *** nativecallable6 left
[23:02] *** shareable6 left
[23:02] *** committable6 left
[23:02] *** bloatable6 left
[23:02] *** squashable6 left
[23:02] *** reportable6 left
[23:02] *** statisfiable6 left
[23:02] *** greppable6 left
[23:02] *** linkable6 left
[23:02] *** quotable6 left
[23:02] *** benchable6 left
[23:02] *** coverable6 left
[23:02] *** evalable6 left
[23:03] *** benchable6 joined
[23:04] *** sourceable6 joined
[23:04] *** bisectable6 joined
[23:05] *** releasable6 joined
[23:05] *** notable6 joined
[23:05] *** bloatable6 joined
[23:06] *** evalable6 joined
[23:06] *** chloekek left
[23:16] *** berber44 joined
[23:29] *** berber44 left
