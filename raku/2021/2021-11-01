[00:00] <japhb> Doc_Holliwould: your multi isn't in the scope of the definition of sort.
[00:00] <japhb> You can fake it by using a 2-arg function for sort, rather than a 1-arg, which is implicitly using the *builtin* cmp.
[00:02] *** andrea[m]123 joined
[00:02] *** reportable6 left
[00:04] *** andrea[m]123 left
[00:10] *** kjp joined
[00:11] *** andrea[m]123 joined
[00:17] *** euandreh joined
[00:33] *** Guest6924 left
[00:38] *** Tirifto left
[00:49] *** releasable6 joined
[00:50] *** statisfiable6 joined
[00:50] *** bloatable6 joined
[00:54] *** Tirifto joined
[01:03] *** reportable6 joined
[01:05] *** dogbert11 joined
[01:08] *** dogbert17 left
[01:14] *** Doc_Holliwould left
[01:50] *** linkable6 joined
[02:30] *** aca joined
[02:30] *** aca is now known as Guest9169
[02:50] *** euandreh left
[03:02] *** nine left
[03:02] *** nine joined
[03:48] *** greppable6 joined
[03:49] *** nativecallable6 joined
[04:13] *** lizmat_ joined
[04:13] *** RakuIRCLogger left
[04:14] *** TempIRCLogger left
[04:14] *** tejr left
[04:14] *** tejr joined
[04:15] *** Geth left
[05:15] *** statisfiable6 left
[05:15] *** squashable6 left
[05:15] *** quotable6 left
[05:15] *** bloatable6 left
[05:15] *** tellable6 left
[05:15] *** bisectable6 left
[05:15] *** linkable6 left
[05:15] *** releasable6 left
[05:15] *** greppable6 left
[05:15] *** sourceable6 left
[05:15] *** coverable6 left
[05:15] *** evalable6 left
[05:15] *** committable6 left
[05:15] *** shareable6 left
[05:15] *** unicodable6 left
[05:15] *** notable6 left
[05:15] *** reportable6 left
[05:15] *** nativecallable6 left
[05:15] *** benchable6 left
[05:15] *** reportable6 joined
[05:16] *** committable6 joined
[05:16] *** linkable6 joined
[05:17] *** coverable6 joined
[05:17] *** quotable6 joined
[05:17] *** evalable6 joined
[05:18] *** shareable6 joined
[05:18] *** squashable6 joined
[05:41] *** tejr left
[05:42] *** tejr joined
[05:54] *** polettix joined
[05:54] *** kybr joined
[05:54] *** gugod joined
[05:54] *** pjlsergeant joined
[05:54] *** rjbs joined
[05:54] *** oodani joined
[05:54] *** Juerd joined
[05:55] *** Maylay joined
[06:02] *** reportable6 left
[06:02] *** dpk joined
[06:02] *** bingos joined
[06:03] *** tinita joined
[06:03] *** Guest9169 left
[06:03] *** esh joined
[06:03] *** spacekookie joined
[06:03] *** Henry151 joined
[06:17] *** nativecallable6 joined
[06:18] *** sourceable6 joined
[06:18] *** seednode4 left
[06:18] *** benchable6 joined
[06:18] *** tellable6 joined
[06:19] *** seednode4 joined
[06:46] *** Sgeo left
[07:04] *** reportable6 joined
[07:15] *** statisfiable6 joined
[07:15] *** bisectable6 joined
[07:17] *** notable6 joined
[07:17] *** greppable6 joined
[07:48] *** Manifest0 joined
[08:16] *** unicodable6 joined
[08:25] *** Geth joined
[08:26] *** lizmat_ left
[08:26] *** TempIRCLogger joined
[08:26] *** lizmat joined
[08:28] *** dogbert17 joined
[08:28] *** dogbert11 left
[08:35] *** dogbert11 joined
[08:37] *** dogbert17 left
[08:44] *** dogbert17 joined
[08:46] *** dogbert11 left
[08:50] *** dogbert11 joined
[08:53] *** dogbert17 left
[08:55] *** dakkar joined
[08:56] *** dogbert11 left
[08:56] *** dogbert11 joined
[09:12] *** dogbert17 joined
[09:16] *** dogbert11 left
[09:17] *** releasable6 joined
[09:51] <lizmat> notable6: weekly
[09:51] <notable6> lizmat, 2 notes: 2021-10-28T12:19:14Z <lizmat>: https://www.reddit.com/r/rakulang/   we have just passed the 1000 Rakoons mark!  ;  2021-10-31T23:33:34Z <melezhik>: weekly update for Raku on #mybfio - https://mybf.io/?language=Raku&filter=top
[09:52] *** dogbert11 joined
[09:55] *** dogbert17 left
[10:03] *** dogbert17 joined
[10:04] *** dogbert11 left
[11:04] *** linkable6 left
[11:04] *** evalable6 left
[11:17] *** bloatable6 joined
[11:28] <lizmat> notable6: weekly reset
[11:28] <notable6> lizmat, Moved existing notes to “weekly_2021-11-01T11:28:38Z”
[11:30] <[Coke]> Hope folks had a pleasant Halloween.
[11:30] <lizmat> oh, is that what that was?  :-)
[11:30] * lizmat just assumed Covid19 had turned ugly  :-)
[11:30] <Altreus> how do you think it started? :D
[11:54] *** euandreh joined
[12:02] *** reportable6 left
[12:04] *** evalable6 joined
[12:06] *** linkable6 joined
[12:23] *** djerius left
[12:25] *** djerius joined
[12:33] <discord-raku-bot> <Anton Antonov#7232> If you want to generate lists with random pet names or random bullshit job titles please take a look at the package `Data::Generators` . https://github.com/antononcube/Raku-Data-Generators
[12:43] *** dszz joined
[12:48] *** bob joined
[12:48] *** bob left
[12:58] *** frost joined
[13:03] *** dszz left
[13:04] *** reportable6 joined
[13:05] *** Sgeo joined
[13:25] <discord-raku-bot> <Skarsnik#7370> Hello there ^^
[13:27] *** Skarsnik joined
[13:27] <Skarsnik> m:sub piko {react whenever Promise.in(1) { return 42;}}; piko();
[13:27] <evalable6> Skarsnik, rakudo-moar 580b3ba79: OUTPUT: «(exit code 1) MoarVM panic: Internal error: Unwound entire stack and missed handler␤»
[13:28] <Skarsnik> Today, in "Skarsnik does some Raku and find a new bug" xD
[13:37] <lizmat> And yet another Rakudo Weekly news hits the Net: https://rakudoweekly.blog/2021/11/01/2021-44-1000-rakoons/
[13:42] <Skarsnik> Nice :)
[13:49] *** frost left
[14:03] <Skarsnik> Hm, I am trying to send request to a UPD server, it seems my second attempt at using print-to fail and prevent me from getting the reply
[14:07] <Skarsnik> It's my second attempt at reading the data that fail, not sure why :(
[14:09] <timo> well, with udp you never know! :D
[14:10] <Skarsnik> code is like sub write-socket ($towrite) {await $socket.print-to("127.0.0.1", 55355, $towrite);}
[14:11] <Skarsnik> sub read-socket {my $toret;
[14:11] <Skarsnik>  react whenever $socket.Supply -> $data { $toret = $data;
[14:11] <Skarsnik>    done();}
[14:11] <Skarsnik>  return $toret;}
[14:12] <Skarsnik> read-socket fails the second time (Yes I don't need a async api x))
[14:12] <ugexe> seems a bit odd that $socket would be a global variable, no?
[14:13] <Skarsnik> Died because of the exception:
[14:13] <Skarsnik>  connection already in progress
[14:13] <timo> hm, getting the supply twice, huh?
[14:13] <timo> i assume requesting the supply is what turns listening on
[14:13] <Skarsnik> it's just a dumb script to poke at RetroArch udp api
[14:14] <timo> perhaps you can't get .Supply a second time as fast unless you SO_REUSEADDR
[14:14] <ugexe> sure, but your computer only cares about logic not if its just a dumb script
[14:14] <timo> i'd really just grab $socket.Supply.Channel early and use that
[14:15] *** Resol joined
[14:19] <Skarsnik> Ok that worked, thank timo :)
[14:21] *** Manifest0 left
[14:24] *** Resol left
[14:24] <Skarsnik> How could I replace .raku On Buf/Blob to print Hex value and not Int?
[14:25] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).format("%x").say
[14:25] <camelia> rakudo-moar 580b3ba79: OUTPUT: «No such method 'format' for invocant of type 'Buf'␤  in block <unit> at <tmp> line 1␤␤»
[14:25] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).list.format("%x").say
[14:25] <camelia> rakudo-moar 580b3ba79: OUTPUT: «No such method 'format' for invocant of type 'List'␤  in block <unit> at <tmp> line 1␤␤»
[14:25] <timo> oh?
[14:25] <timo> ah
[14:25] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).fmt("%x").say
[14:25] <camelia> rakudo-moar 580b3ba79: OUTPUT: «No such method 'fmt' for invocant of type 'Buf'␤  in block <unit> at <tmp> line 1␤␤»
[14:25] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).list.fmt("%x").say
[14:25] <camelia> rakudo-moar 580b3ba79: OUTPUT: «1 2 a 14 5a 5b 5c␤»
[14:25] <timo> m: Buf.new(1, 2, 10, 20, 90, 91, 92).list.fmt("%02x", ",").say
[14:25] <camelia> rakudo-moar 580b3ba79: OUTPUT: «01,02,0a,14,5a,5b,5c␤»
[14:31] <japhb> Those buffer contents are giving me flashbacks of the last week's work (parsing ANSI control code schemes)
[14:38] *** Manifest0 joined
[14:51] *** Altai-man joined
[14:51] *** Voldenet left
[14:51] *** Altai-man left
[14:52] <Skarsnik> damn, no method to search a buffer in another one x)
[14:54] *** Voldenet joined
[15:01] *** gordonfish left
[15:06] *** monkey_ joined
[15:28] *** andrea[m]123 left
[15:53] *** monkey_ left
[16:02] *** Voldenet left
[16:07] *** Voldenet joined
[16:11] *** abraxxa-home joined
[16:34] *** monkey_ joined
[16:59] *** andrea[m]123 joined
[17:12] *** monkey_ left
[17:18] *** djerius left
[17:20] *** djerius joined
[17:42] *** dakkar left
[18:02] *** reportable6 left
[18:04] *** reportable6 joined
[18:06] *** euandreh left
[18:07] *** euandreh joined
[18:13] *** abraxxa-home left
[18:13] *** abraxxa-home joined
[18:17] *** euandreh left
[18:26] *** gordonfish joined
[19:00] *** melezhik joined
[19:00] <melezhik> how can I check that an array includes another array?
[19:06] <ugexe> m: my @a = 1,2,3,4,5,6; my @b = 2,3,4; say @a.rotor(@b.elems => -(@b.elems - 1)).grep(* ~~ @b)
[19:06] <camelia> rakudo-moar 580b3ba79: OUTPUT: «((2 3 4))␤»
[19:07] *** euandreh joined
[19:09] <melezhik> m: say (1,2,5).contains([1,2])
[19:09] <camelia> rakudo-moar 580b3ba79: OUTPUT: «Calling '.contains' on a List, did you mean 'needle (elem) list'?␤True␤  in block <unit> at <tmp> line 1␤»
[19:10] <ugexe> i dont think that does what you want
[19:11] <melezhik> m: say (1,2).contains([1,2,5])
[19:11] <camelia> rakudo-moar 580b3ba79: OUTPUT: «Calling '.contains' on a List, did you mean 'needle (elem) list'?␤False␤  in block <unit> at <tmp> line 1␤»
[19:11] <melezhik> ugexe why?
[19:11] <ugexe> maybe it does... i thought .contains stringified lists
[19:12] <ugexe> m: my @a = 1,2,3; say @a.contains("1 2")
[19:12] <camelia> rakudo-moar 580b3ba79: OUTPUT: «Calling '.contains' on a Array, did you mean 'needle (elem) list'?␤True␤  in block <unit> at <tmp> line 1␤»
[19:12] <ugexe> that probably isnt the behavior you desire 
[19:12] <melezhik> what do you mean ? warnings?
[19:13] <ugexe> well do you expect @a = 1,2,3 to contains "1 2"?
[19:13] <tonyo> m: my @a = 1,2; say "1 2".contains(@a)
[19:13] <camelia> rakudo-moar 580b3ba79: OUTPUT: «True␤»
[19:13] <tonyo> m: my $a = (1,2); say "1 25".contains($a)
[19:13] <camelia> rakudo-moar 580b3ba79: OUTPUT: «True␤»
[19:15] <melezhik> yeah, but I need check for arrays ... 
[19:16] <ugexe> yes, that is why we are telling you .contains doesnt work
[19:16] <melezhik> ok
[19:16] <ugexe> m: my @a = 1,2,3,4,5,6; my @b = 2,3,4; say @a.rotor(@b.elems => -(@b.elems - 1)).grep(* ~~ @b)
[19:16] <camelia> rakudo-moar 580b3ba79: OUTPUT: «((2 3 4))␤»
[19:16] <melezhik> so the only way is the code you've shared before?
[19:19] <MasterDuke> m: my @a = 1,2,3,4,5,6; my @b = 2,3,4; say @b (elem) @a.rotor(@b.elems => -(@b.elems - 1))    # i'm sort of surprised this doesn't work
[19:19] <camelia> rakudo-moar 580b3ba79: OUTPUT: «False␤»
[19:20] <ugexe> i mean you could use (&) but i assume you want the items in the same sequence 
[19:20] <ugexe> i.e. 1,2,3 doesnt match 1,2,9,3
[19:21] <melezhik> ah , no, I mean I don't need to take an order into account for this ...
[19:26] <MasterDuke> m: my @a = 1,2,"c",4,5,6; my @b = "c",8; say so all(@b.map(* (elem) @a)); my @c = "c",6; say so all(@c.map(* (elem) @a));
[19:26] <camelia> rakudo-moar 580b3ba79: OUTPUT: «False␤True␤»
[19:28] *** notna joined
[19:30] <tonyo> my $arr = [1,2,3]; my $search = [1,2]; say [&&] |([||] $arr.map(* == $_) for $search);
[19:30] <evalable6> tonyo, rakudo-moar 580b3ba79: OUTPUT: «True␤»
[19:30] <tonyo> if you don't care about order
[19:31] <tonyo> m: my $arr = [1,2,3]; my $search = [1,2,4]; say [&&] |([||] $arr.map(* == $_) for $search);
[19:31] <camelia> rakudo-moar 580b3ba79: OUTPUT: «True␤»
[19:31] <tonyo> oops.
[19:31] <tonyo> something like that
[19:34] <tonyo> m: my $arr = [1,2,3]; my $search = [1,2,4]; say [&&] ([||] $arr.map(* == $_) for |$search);
[19:34] <camelia> rakudo-moar 580b3ba79: OUTPUT: «False␤»
[19:34] <tonyo> m: my $arr = [1,2,3]; my $search = [1,2]; say [&&] ([||] $arr.map(* == $_) for |$search);
[19:34] <camelia> rakudo-moar 580b3ba79: OUTPUT: «True␤»
[19:39] *** melezhik left
[19:42] *** lucerne left
[19:42] *** AntonOks joined
[19:45] <AntonOks> hi dev's. who has commit and the like right on https://github.com/rakudo/star?
[19:45] *** greyrat left
[19:45] <AntonOks> it would be great if someone looks into https://github.com/rakudo/star/pull/167
[19:45] *** greyrat joined
[19:45] <AntonOks> any feedback for that pull is highly appreciated...
[19:45] *** lucerne joined
[19:48] *** notna left
[19:53] *** Kaiepi left
[19:53] *** Kaiepi joined
[20:01] *** AntonOks left
[20:05] *** stoned75 joined
[20:12] <Geth> ¦ doc: cddc09f799 | (Stoned Elipot)++ | doc/Language/operators.pod6
[20:12] <Geth> ¦ doc: Document U+2A75 and U+2A76 operator aliases
[20:12] <Geth> ¦ doc: 
[20:12] <Geth> ¦ doc: ref #3922
[20:12] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/cddc09f799
[20:12] <linkable6> Link: https://docs.raku.org/language/operators
[20:12] *** linkable6 left
[20:31] *** melezhik joined
[20:31] <melezhik> .
[20:32] <melezhik> I have created devops weekly on top of mybfio projects and added on Raku project there, feel free to add your project if you consider them devops related - https://www.reddit.com/r/devops/comments/qkmj95/devops_weekly_on_mybfio/
[20:32] <melezhik> there is only one there  right now 
[20:36] *** melezhik left
[20:40] *** stoned75 left
[21:06] <tonyo> .tell melezhik not sure you saw this for array in array - `my $arr = [1,2,3]; my $search = [1,2,4]; say [&&] ([||] $arr.map(* == $_) for |$search);`
[21:06] <tellable6> tonyo, I'll pass your message to melezhik
[21:09] <tonyo> could even be shortened to `my $arr = (1,2,3); my $search = (1,2); say [&&] ([||] $_ ∈ $arr for |$search);`
[21:36] *** abraxxa-home left
[21:44] *** tejr left
[21:45] *** tejr joined
[21:55] *** Xliff left
[21:55] *** Xliff_ joined
[22:13] *** linkable6 joined
[22:16] *** Guest90 joined
[22:28] *** melezhik joined
[22:28] <melezhik> .
[22:28] <tellable6> 2021-11-01T21:06:45Z #raku <tonyo> melezhik not sure you saw this for array in array - `my $arr = [1,2,3]; my $search = [1,2,4]; say [&&] ([||] $arr.map(* == $_) for |$search);`
[22:28] <melezhik> .tell tonyo: - thanks
[22:28] <tellable6> melezhik, I'll pass your message to tonyo
[22:39] *** melezhik left
[22:57] <tonyo> if you care about ordering then use a loop
[22:57] <tellable6> 2021-11-01T22:28:48Z #raku <melezhik> tonyo: - thanks
[23:39] *** evalable6 left
[23:39] *** linkable6 left
[23:43] *** dogbert17 left
[23:45] *** Guest90 left
[23:46] *** dogbert17 joined
