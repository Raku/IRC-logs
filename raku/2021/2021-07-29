[00:00] *** linkable6 left
[00:00] *** evalable6 left
[00:00] *** evalable6 joined
[00:01] *** linkable6 joined
[00:02] *** reportable6 left
[00:08] *** Doc_Holliwood joined
[00:13] *** jmcgnh left
[00:13] *** codesections left
[00:19] *** jess left
[00:23] *** jmcgnh joined
[00:45] *** thundergnat left
[01:01] <moon-child> this makes the common lisp approach of using dynamic scoping for _all_ globals seem somewhat attractive
[01:04] *** reportable6 joined
[02:04] *** linkable6 left
[02:04] *** quotable6 left
[02:04] *** bloatable6 left
[02:04] *** nativecallable6 left
[02:04] *** statisfiable6 left
[02:04] *** greppable6 left
[02:04] *** squashable6 left
[02:04] *** sourceable6 left
[02:04] *** reportable6 left
[02:04] *** shareable6 left
[02:04] *** committable6 left
[02:04] *** coverable6 left
[02:04] *** bisectable6 left
[02:04] *** evalable6 left
[02:04] *** benchable6 left
[02:04] *** releasable6 left
[02:04] *** unicodable6 left
[02:04] *** notable6 left
[02:04] *** tellable6 left
[02:04] *** shareable6 joined
[02:04] *** nativecallable6 joined
[02:04] *** squashable6 joined
[02:04] *** benchable6 joined
[02:05] *** quotable6 joined
[02:05] *** reportable6 joined
[02:06] *** bloatable6 joined
[03:05] *** coverable6 joined
[03:06] *** statisfiable6 joined
[03:06] *** committable6 joined
[03:06] *** evalable6 joined
[03:06] *** linkable6 joined
[03:07] *** releasable6 joined
[03:07] *** greppable6 joined
[03:23] *** sono left
[03:38] *** frost-lab joined
[04:06] *** notable6 joined
[04:06] *** unicodable6 joined
[04:16] *** frost-lab left
[04:39] *** Guest92 joined
[04:41] *** Guest92 left
[05:01] <mykhal> btw is there something like Python's globals() and locals()
[05:01] <mykhal> ?
[05:05] *** sourceable6 joined
[05:06] *** tellable6 joined
[05:19] *** Guest92 joined
[05:22] *** Guest92 left
[05:22] *** frost-lab joined
[05:30] <moritz> m: my $x; say MY::.keys
[05:30] <camelia> rakudo-moar 74d7ff771: OUTPUT: «($/ GLOBALish EXPORT $! $_ $x !UNIT_MARKER ::?PACKAGE $=pod $=finish $?PACKAGE $¢)␤»
[05:30] <moritz> m: say OUR::.keys
[05:30] <camelia> rakudo-moar 74d7ff771: OUTPUT: «()␤»
[05:30] <moritz> mykhal: ^^
[05:30] <Util> mykhal: I am heading for bed, but this is is a start: https://docs.raku.org/language/packages#index-entry-MY_(package)
[05:30] <Util> moritz++
[05:42] <mykhal> m: my $x = <x> ; say ( MY.?keys, MY.?x )
[05:42] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(() Nil)␤»
[05:44] * mykhal did not read lines above
[05:45] *** ufobat joined
[06:02] *** reportable6 left
[06:14] <mykhal> m: CORE::.keys.grep(/fix/).map(*.subst(/.* 'fix:' ['<'||'«'] (.*) ['>'||'»']/, {$0}))
[06:14] <camelia> rakudo-moar 74d7ff771: ( no output )
[06:14] <mykhal> m: say CORE::.keys.grep(/fix/).map(*.subst(/.* 'fix:' ['<'||'«'] (.*) ['>'||'»']/, {$0}))
[06:14] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(^ ge (+) ^...^ && but ~~ ⊎ ~^ ∉ [; ] ~| ⚛-= ^^ so ⩵ > , ...^ ∈ =~= ÷ ne { } ∖ × = .. ⊂ {; } ⚛−= ** ⊃ & ⚛ ^ or − || +| +> ∘ ⊉ ?| != [ ] (>=) cmp ?^ ∋ before (<=) ~ %% ⊇ ⊈ o ! le ≽ ⚛= | and ^..^ (&) xor div min -…»
[06:28] <mykhal> nice, that would be like __builtins__ and beyond
[06:31] <Geth> ¦ doc: 2483b6a3ff | (Trey Harris)++ (committed by Juan Julián Merelo Guervós) | doc/Language/py-nutshell.pod6
[06:31] <Geth> ¦ doc: py-nutshell: Add how to enumerate in iteration
[06:31] <Geth> ¦ doc: 
[06:31] <Geth> ¦ doc: Resolves #3924.
[06:31] <Geth> ¦ doc: 
[06:31] <Geth> ¦ doc: Modified from suggestion in issue to include `kv()`’s other use case in maps,
[06:31] <Geth> ¦ doc: matching Python’s `dict.items()`.
[06:31] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/2483b6a3ff
[06:31] <linkable6> Link: https://docs.raku.org/language/py-nutshell
[06:31] <Geth> ¦ doc: 1c844d668b | (Trey Harris)++ (committed by Juan Julián Merelo Guervós) | doc/Language/py-nutshell.pod6
[06:31] <Geth> ¦ doc: Copyediting
[06:31] <Geth> ¦ doc: 
[06:31] <Geth> ¦ doc: @JJ — I noticed that in this doc, `L<>`’s to routine docs are not in `C<>`’s, so appear as regular text instead of monospaced. This seems to be a case where there’s different styles on different pages—but should I submit a separate patch to change all these routine-link `L<>`’s to code font? Thanks.
[06:31] *** discord-raku-bot left
[06:31] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1c844d668b
[06:31] *** linkable6 left
[06:31] *** abraxxa joined
[06:32] *** discord-raku-bot joined
[06:39] *** abraxxa left
[06:39] *** abraxxa joined
[06:45] *** Doc_Holliwood left
[07:03] *** reportable6 joined
[07:06] *** bisectable6 joined
[07:08] *** frost-lab left
[07:18] *** Sgeo left
[07:29] *** Doc_Holliwood joined
[07:32] *** linkable6 joined
[08:25] *** linkable6 left
[08:26] *** linkable6 joined
[08:39] <mykhal> m: my $six = 6 but "one" ;  say ( 0+$six, +$six )
[08:39] <camelia> rakudo-moar 681e3b5e8: OUTPUT: «(6 one)␤»
[08:40] <mykhal> .. i meant "six".. imperfectly over-edited, point is surprise, that 0+… and +… behaves different
[08:42] <moon-child> eh, six of one...
[08:42] <moon-child> serious answer:  +$six is the same as saying $six.Numeric, and since $six is already numeric, that's a no op
[08:43] <moon-child> where as 0+$six actually performs an addition, which constructs a _new_ object which doesn't know to but "one"
[08:43] <lizmat> and then the say calls .gist on that
[08:43] <moon-child> m: my $six = 6 but 'one'; say $six
[08:43] <camelia> rakudo-moar 681e3b5e8: OUTPUT: «one␤»
[09:04] <mykhal> m: say ( +RatStr.new(16/9, "16:9"), +(16/9 but "16:9") )
[09:04] <camelia> rakudo-moar 681e3b5e8: OUTPUT: «(1.777778 16:9)␤»
[09:04] *** renormalist left
[09:05] <mykhal> m: say ( 9*RatStr.new(16/9, "16:9"), 9*(16/9 but "16:9") )
[09:05] <camelia> rakudo-moar 681e3b5e8: OUTPUT: «(16 16)␤»
[09:06] <mykhal> i guess but is not meant for such usage
[09:08] <mykhal> m: say (2 but "II").^name
[09:08] <camelia> rakudo-moar 681e3b5e8: OUTPUT: «Int+{<anon|1>}␤»
[09:15] <mykhal> my m: say so 2.Rat == 2 but 2/1
[09:16] <mykhal> m: say so 2.Rat == 2 but 2/1
[09:16] <camelia> rakudo-moar 681e3b5e8: OUTPUT: «Unexpected named argument 'value' passed␤  in block <unit> at <tmp> line 1␤␤»
[09:41] <mykhal> m: my \True = Bool::True but "Fake"; say True; say ~True
[09:41] <camelia> rakudo-moar 681e3b5e8: OUTPUT: «===SORRY!===␤No compile-time value for True␤»
[09:43] <mykhal> interesting, does no fail in my m 2021.07
[09:44] <moon-child> rather, it works at the repl but not otherwise
[09:45] <moon-child> m: EVAL ‘my \True = Bool::True but "Fake"; say True; say ~True’
[09:45] <camelia> rakudo-moar 681e3b5e8: OUTPUT: «True␤Fake␤»
[09:45] <mykhal> moon-child: right
[09:47] *** Frozenset joined
[09:52] <synthmeat> new rakudo-star is getting packaged up in the august, right?
[09:59] *** codesections joined
[10:00] *** MasterDuke left
[10:03] *** patrickb joined
[10:03] <lizmat> .tell Util ttps://github.com/rakudo/rakudo/pull/4484
[10:03] <tellable6> lizmat, I'll pass your message to Util
[10:04] <patrickb> synthmeat: Can you clarify the question?
[10:05] *** MasterDuke joined
[10:06] *** Doc_Holliwood left
[10:14] <synthmeat> patrickb: i think i read somewhere rakudo-star gets packaged up quarterly. like rakudo is monthly, i guess.
[10:15] <patrickb> synthmeat: The release process wrt the star bundle is currenty undergoing a refactor. It's not entirely clear if we want to stick to the release cycle.
[10:16] <patrickb> Currently there are monthly releases of the Windows MSI installer for star. The star source release is being worked on. When that work will finish, and what release cycle we'll commit to has not been decided yet.
[10:20] <synthmeat> okie, thanks for the info. lots of refactors recently, judging by skimming liz's weeklies.
[10:22] *** Xliff joined
[10:36] *** juanfra left
[10:36] *** AlexDaniel left
[10:36] *** cnx left
[10:36] *** aolko[m] left
[10:36] *** CIAvash left
[10:36] *** littlebenlittle[ left
[10:36] *** rba[m] left
[10:36] *** happy-dude left
[10:39] *** juanfra joined
[10:43] *** AlexDaniel joined
[10:43] *** cnx joined
[10:43] *** happy-dude joined
[10:43] *** littlebenlittle[ joined
[10:43] *** aolko[m] joined
[10:43] *** rba[m] joined
[10:43] *** CIAvash joined
[10:49] *** Frozenset left
[11:07] *** sena_kun joined
[11:13] *** patrickb left
[11:14] *** patrickb joined
[11:15] *** patrickb left
[11:16] *** patrickb joined
[11:17] *** patrickb left
[11:18] *** patrickb joined
[11:20] *** patrickb left
[11:20] *** patrickb joined
[11:22] *** patrickb left
[11:22] *** patrickb joined
[11:26] *** patrickb left
[11:26] *** patrickb joined
[11:28] *** patrickb left
[11:28] *** patrickb joined
[11:30] *** patrickb left
[11:30] *** patrickb joined
[11:32] *** patrickb left
[11:32] *** patrickb joined
[11:34] *** patrickb left
[11:34] *** patrickb joined
[11:36] *** patrickb left
[11:36] *** patrickb joined
[11:36] *** patrickb left
[12:02] *** reportable6 left
[12:04] *** reportable6 joined
[12:14] *** Doc_Holliwood joined
[12:18] *** patrickb joined
[12:24] *** Frozenset joined
[13:05] *** Sgeo joined
[13:10] *** Xliff left
[13:30] *** sena_kun left
[13:32] *** simcop2387 is now known as mycroft2387
[13:32] *** mycroft2387 is now known as simcop2387
[13:38] *** stoned75 joined
[13:38] <Geth> ¦ doc: 946431335f | (Stoned Elipot)++ | doc/Type/Int.pod6
[13:38] <Geth> ¦ doc: Fix typo
[13:38] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/946431335f
[13:39] <linkable6> Link: https://docs.raku.org/type/Int
[14:04] *** renormalist joined
[14:12] *** renormalist left
[14:12] *** renormalist joined
[14:24] *** Doc_Holliwood left
[15:16] *** ufobat left
[15:17] *** Doc_Holliwood joined
[15:32] *** Doc_Holliwood left
[15:34] *** Doc_Holliwood joined
[15:44] *** patrickb left
[15:46] <Geth> ¦ doc: 9bc7589a9a | Coke++ | doc/Language/py-nutshell.pod6
[15:46] <Geth> ¦ doc: prefer array-like
[15:46] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/9bc7589a9a
[15:46] <Geth> ¦ doc: f75ebf4d15 | Coke++ | xt/pws/code.pws
[15:46] <Geth> ¦ doc: learn new word used in code
[15:46] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/f75ebf4d15
[15:46] <Geth> ¦ doc: ad022d4f01 | Coke++ | doc/Language/py-nutshell.pod6
[15:46] <Geth> ¦ doc: whitespace
[15:46] <linkable6> Link: https://docs.raku.org/language/py-nutshell
[15:46] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/ad022d4f01
[16:44] *** linkable6 left
[16:44] *** evalable6 left
[16:46] *** linkable6 joined
[17:18] *** ufobat joined
[17:36] *** Frozenset left
[17:39] *** Frozenset joined
[18:02] *** reportable6 left
[18:12] *** Frozenset left
[18:35] *** ufobat left
[18:45] *** evalable6 joined
[19:04] <kybr> m: for 1,2,3,4,5 -> $a, $b { say "$a-$b" }
[19:04] <camelia> rakudo-moar 62e291f09: OUTPUT: «1-2␤Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤3-4␤»
[19:06] <kybr> what's a way to walk through the list 1,2,3,4,5 such that we get pairs like 1,2 2,3 3,4 4,5 instead of 1,2 3,4 5!
[19:08] <moon-child> m: .say for (1..5).rotor(2 => -1)
[19:08] <camelia> rakudo-moar 62e291f09: OUTPUT: «(1 2)␤(2 3)␤(3 4)␤(4 5)␤»
[19:10] <moon-child> 2 means take batches of 2 items; -1 means step forward by 2-1 each time
[19:27] <codesections> m: .say for (1..5).&{$_ Z .skip} # also works
[19:27] <camelia> rakudo-moar 62e291f09: OUTPUT: «(1 2)␤(2 3)␤(3 4)␤(4 5)␤»
[19:34] *** sono joined
[19:45] *** melezhik joined
[19:45] <melezhik> weekly: https://www.reddit.com/r/rakulang/comments/ou4qqn/data_structures_and_algorithms_with_raku_and/
[19:45] <notable6> melezhik, Noted! (weekly)
[19:45] <tellable6> 2021-07-26T07:56:28Z #raku <lizmat> melezhik approved
[19:46] <melezhik>  hopefully this one won't be banned by reddit this time ))) cc lizmat
[19:47] <melezhik> lizmat thanks for approval the previous one and maybe new ones ))) I don't know why reddit don't love my posts )))
[19:47] <lizmat> I don't know either  :-(
[19:48] <melezhik> maybe posts looks like spam , anyway not a big deal ... I am not offended by reddit ;D 
[20:03] *** reportable6 joined
[20:07] <moon-child> lizmat: somewhere in the mod tools you can change how aggressively it deletes/hides things it thinks are spam
[20:09] <moon-child> 'spam filter strength' in 'subreddit settings', on the old reddit at least
[20:33] *** melezhik left
[20:56] *** phogg joined
[20:57] *** phogg joined
[21:18] *** Frozenset joined
[21:18] *** Frozenset left
[22:18] *** linkable6 left
[22:18] *** evalable6 left
[22:21] *** evalable6 joined
[23:19] *** Xliff joined
[23:20] *** linkable6 joined
