[00:02] *** reportable6 left
[00:05] *** gordonfish- joined
[00:06] *** Skarsnik_ left
[00:06] *** gordonfish left
[00:10] *** gordonfish- left
[00:10] *** gordonfish joined
[00:21] <Ergo444> hi

[00:21] *** Ergo444 left
[00:29] *** gordonfish left
[00:32] *** gordonfish joined
[00:35] <[Coke]> hi

[00:36] <[Coke]> m: say (3/99).nude

[00:36] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´(1 33)‚ê§¬ª

[00:36] <[Coke]> ^^ is there a way to make that work without parens? some other way to force the precedence?

[00:37] <moon-child> m: say .nude given 3/99

[00:37] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´(1 33)‚ê§¬ª

[00:37] <moon-child> ideally you would be able to say '3/99 .nude'.  It works for negatives and complex numbers, but not fractions apparently

[00:38] <[Coke]> heh. I literally had that typed out and was going to send it. :)

[00:38] <moon-child> :)

[01:27] <japhb> m: say 3/99\.nude  # Curious

[01:27] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´No such method 'nude' for invocant of type 'Int'.  Did you mean any of‚ê§these: 'NFD', 'Num', 'none', 'note'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:27] <japhb> Ah well

[01:27] <japhb> m: say 3/99\ .nude  # Curious

[01:27] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´No such method 'nude' for invocant of type 'Int'.  Did you mean any of‚ê§these: 'NFD', 'Num', 'none', 'note'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:27] <japhb> Well, so much for that idea

[01:28] <moon-child> if you find angle brackets more to your liking than parenthesis, you can do

[01:28] <moon-child> m: say <3/99>.nude

[01:28] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´(1 33)‚ê§¬ª

[01:28] <moon-child> (imo angle brackets are easier to parse, because their contents have limited lexical complexity; YMMV)

[01:32] *** linkable6 left
[01:32] *** evalable6 left
[01:34] *** evalable6 joined
[01:35] *** linkable6 joined
[01:37] <japhb> m: say <3/99>.WHAT

[01:37] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´(Rat)‚ê§¬ª

[01:37] <japhb> m: say < 3/99 >.WHAT

[01:37] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´(RatStr)‚ê§¬ª

[01:37] <japhb> But be careful of that difference ^^

[01:37] <japhb> One is a Rat literal, the other is a string converted by val() to a RatStr

[02:05] *** reportable6 joined
[02:18] *** mcmillhj joined
[03:06] *** mcmillhj left
[04:06] *** reportable6 left
[04:06] *** unicodable6 left
[04:06] *** greppable6 left
[04:06] *** notable6 left
[04:06] *** linkable6 left
[04:06] *** quotable6 left
[04:06] *** coverable6 left
[04:06] *** benchable6 left
[04:06] *** statisfiable6 left
[04:06] *** bloatable6 left
[04:06] *** bisectable6 left
[04:06] *** tellable6 left
[04:06] *** evalable6 left
[04:06] *** committable6 left
[04:06] *** squashable6 left
[04:06] *** releasable6 left
[04:06] *** nativecallable6 left
[04:06] *** shareable6 left
[04:06] *** sourceable6 left
[04:07] *** benchable6 joined
[04:07] *** sourceable6 joined
[04:07] *** nativecallable6 joined
[04:08] *** bloatable6 joined
[04:08] *** linkable6 joined
[04:09] *** evalable6 joined
[04:09] *** statisfiable6 joined
[04:44] *** mcmillhj joined
[04:46] <mcmillhj> A bit confused about set operations, specifically inequality. In this gist, why is `$last` `(Any)`: https://gist.github.com/mcmillhj/a54ea1515cab011b3000e8ae81218f74

[04:48] <moon-child> != is numeric inequality, which I expect is not what you want

[04:50] <mcmillhj> Both inputs are Sets so I thought it would use the Set inequality operator. It there some way that I need to indicate that I want that operator used?

[04:51] <moon-child> !(==) is the set inequality operator

[04:52] <moon-child> (or, really it is (==) that is the set equality operator, to which the ! metaoperator can be applied.  But, potato potato)

[04:53] <mcmillhj> ah whoops, I was misreading ‚â¢ in the docs as != ... That's my mistake. Thanks for the help! 

[04:53] <moon-child> np

[04:56] *** colemanx left
[05:02] *** mcmillhj left
[05:04] *** frost joined
[05:06] *** notable6 joined
[05:06] *** unicodable6 joined
[05:07] *** committable6 joined
[05:08] *** greppable6 joined
[05:09] *** coverable6 joined
[05:09] *** shareable6 joined
[05:09] *** reportable6 joined
[05:36] *** b2gills joined
[06:02] *** reportable6 left
[06:06] *** tellable6 joined
[06:07] *** releasable6 joined
[06:08] *** bisectable6 joined
[06:49] *** euandreh left
[07:04] *** reportable6 joined
[07:07] *** quotable6 joined
[07:11] *** vrurg_ joined
[07:11] *** frost left
[07:11] *** MasterDuke left
[07:12] *** vrurg left
[07:12] *** frost joined
[07:26] *** seednode left
[07:27] *** seednode joined
[07:28] *** abraxxa joined
[07:31] *** ugexe left
[07:31] *** ugexe joined
[07:35] *** abraxxa left
[07:36] *** abraxxa joined
[07:50] *** TheAthlete joined
[07:52] *** Ergo444 joined
[07:52] <Ergo444> hi

[07:52] <TheAthlete> Hello!

[08:00] <Ergo444> I have this problem... https://stackoverflow.com/questions/70286420/command-executed-through-procasync-is-not-tapped-correctly

[08:03] *** Sgeo left
[08:06] *** squashable6 joined
[08:09] <moritz_> I've answered on SO, hope it helps

[08:11] <Ergo444> I added more information

[08:11] <Ergo444> It is not that simple.

[08:11] <Ergo444> The program keeps running, doing stuff

[08:12] <Ergo444> The full output is printed when the program ends.. with a considerable delay.

[08:12] *** jjido joined
[08:18] <Ergo444> I think it buffers the output.....for a while before printing

[08:18] <Ergo444> how to make it print more often?

[08:19] <moritz_> see my updated answer

[08:21] <Ergo444> ok

[08:22] <Ergo444> but if I run the program in itself... it does not delay that much.

[08:22] <moritz_> (having the discussion in two different places in parallel doesn't work well)

[08:23] <SmokeMachine> m: say 3/99 .nude

[08:23] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´No such method 'nude' for invocant of type 'Int'.  Did you mean any of‚ê§these: 'NFD', 'Num', 'none', 'note'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[08:25] <moritz_> I don't think that the space lowers the precedence

[08:27] <Ergo444> saying the same thing everywhere

[08:34] *** jjido left
[08:44] *** Oshawott left
[08:50] *** MasterDuke joined
[09:10] *** synthmeat left
[09:12] *** dakkar joined
[09:16] *** archenoth joined
[09:20] *** TempIRCLogger left
[09:21] *** TempIRCLogger joined
[09:22] *** archenoth left
[09:28] <SmokeMachine> moritz_: shouldn't it? it works for ^10 .max (or am I misremembering it?)

[09:29] <SmokeMachine> m: say ^10 .max

[09:29] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´10‚ê§¬ª

[09:29] <SmokeMachine> m: say ^10 .min

[09:29] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´0‚ê§¬ª

[09:29] <SmokeMachine> m: say ^10.min

[09:29] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´Potential difficulties:‚ê§    Precedence of ^ is looser than method call; please parenthesize‚ê§    at <tmp>:1‚ê§    ------> 3say ^107‚èè5.min‚ê§^10‚ê§¬ª

[09:30] *** Skarsnik_ joined
[09:34] *** frost left
[09:34] *** MasterDuke left
[09:39] *** frost joined
[09:44] *** MasterDuke joined
[09:47] *** jjido joined
[10:07] *** Merfont left
[10:12] *** TempIRCLogger left
[10:12] *** TempIRCLogger joined
[10:25] *** synthmeat joined
[10:31] *** Geth left
[10:36] *** Geth joined
[10:37] *** patrickb joined
[11:25] *** ab5tract joined
[11:30] *** jjido left
[11:39] *** gordonfish- joined
[11:41] *** gordonfish left
[11:51] *** Skarsnik_ left
[12:02] *** reportable6 left
[12:06] *** archenoth joined
[12:09] *** Kaiepi joined
[12:20] *** Guest85 joined
[12:25] <ab5tract> hmm... is it curious that Bags don't have a median method?

[12:26] *** b2gills left
[12:27] <Guest85> Hi All,

[12:28] <Guest85> How would you solve this?

[12:28] <Guest85> https://blogger.googleusercontent.com/img/a/AVvXsEhexCeqvzDCeI0p8HZ_Crazkx4dpjdSAAIQX_pznLIwEZv6tnkw8aZD4rDu9dw4ZqMFDemHaSJXpqqsvMHQHtz36E-g2YDUGMNFLlYZ4_iIDEPVlolfGbQEQJ1EagIzneYAN5zf7hwiiPopyl6QNcfEfSjg5-UvuFS9CLmVaJYizSok4zcgFA7uDXgaig=w640-h370

[12:28] <Guest85> m: <25 2 10 3 20 5 15 0>.combinations(3).grep: *.sum == 35;

[12:28] <camelia> rakudo-moar 6e457595a: ( no output )

[12:29] <Guest85> That does not count multiple throws at the same dart board score.

[12:29] *** synthmeat left
[12:29] <Guest85> I got as far as:

[12:30] <Guest85> m: say sort gather {

[12:30] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3say sort gather {7‚èè5<EOL>‚ê§¬ª

[12:30] <Guest85> ¬† for ([X,] <25 2 10 3 20 5 15 0> xx 3) {

[12:30] <Guest85> ¬†¬†¬† take sort $_ if (sum $_) == 35;

[12:30] <Guest85> ¬† }

[12:30] <Guest85> }

[12:30] <Guest85> But that does not make the list unique and I'm struggling with 'with'.

[12:34] <ab5tract> m: 34.5 .ceil

[12:34] <camelia> rakudo-moar 6e457595a: OUTPUT: ¬´No such method 'ceil' for invocant of type 'Rat'.  Did you mean any of‚ê§these: 'Real', 'cis', 'perl', 'tail'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:34] <ab5tract> ^^^ LTA bug: .ceil should mention .ceiling :)

[12:35] <El_Che> cis

[12:35] <El_Che> lol

[12:52] *** Kaiepi left
[12:52] *** Kaiepi joined
[12:55] <lizmat> https://github.com/rakudo/rakudo/commit/57adbb1ef0  # ab5tract 

[13:00] <lizmat> aaah... it *is*

[13:00] <lizmat> oops, ww

[13:02] <Geth> ¬¶ ecosystem: c68d532e11 | (Elizabeth Mattijsen)++ | META.list

[13:02] <Geth> ¬¶ ecosystem: Text::Markdown now lives in the zef ecosystem

[13:02] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/c68d532e11

[13:04] *** euandreh joined
[13:04] <ab5tract> lizmat: I had a feeling it wouldn't last too long :D

[13:05] *** jgaz joined
[13:05] *** reportable6 joined
[13:06] <lizmat> ab5tract: I wonder if there are many more of these false friends

[13:06] <lizmat> do you know of any offhand that wouldn't be caught already ?

[13:25] <ab5tract> lizmat not off the top of my head, no

[13:38] *** patrickb left
[13:41] *** kostas joined
[13:47] *** kostas left
[13:47] *** kostas joined
[13:52] *** Guest85 left
[13:57] <Ergo444> Are threads safe to use with perl5 modules?

[14:00] *** lucs left
[14:00] *** tonyo left
[14:00] <MasterDuke> Ergo444: i believe so, but nine would know for sure

[14:01] *** lucs joined
[14:01] <Ergo444> I encountered some problems

[14:01] *** tonyo joined
[14:05] *** Zero_Dogg left
[14:05] *** Zero_Dogg joined
[14:24] *** lizmat_ joined
[14:27] *** lizmat left
[14:39] *** synthmeat joined
[14:44] *** monkey_ joined
[15:00] *** Guest85 joined
[15:12] *** frost left
[15:16] *** euandreh left
[15:39] *** ab5tract left
[15:45] *** euandreh joined
[15:45] *** xinming joined
[15:48] *** ab5tract joined
[15:49] <ab5tract> Ergo444: IIRC you need to have Perl compiled with support for having more than one interpreter in memory

[15:49] <ab5tract> I forget the specific flag

[15:52] <El_Che> -Dusethreads

[15:54] <ab5tract> El_Che: I think it is actually separate from that flag, though the use of -Dusethreads implies/enforces the flag I'm thinking of.

[15:56] <ab5tract> I'm relatively confident that it is -Duseshrplib

[15:59] *** synthmeat left
[16:00] *** synthmeat joined
[16:02] <ab5tract> though looking at the docs here makes me question whether that is correct.. https://metacpan.org/dist/perl/view/INSTALL#Building-a-shared-Perl-library

[16:02] *** synthmeat left
[16:02] <ab5tract> as -Dusethreads doesn't mention anything about an associated performance penalty

[16:07] *** [Coke] left
[16:09] *** synthmeat joined
[16:09] *** lizmat_ left
[16:10] *** lizmat joined
[16:10] <ab5tract> m: my @a = [[1,2,3],[4,5,6]]; @a.unshift: [0,0,0]; @a.append: [0,0,0]; dd @a

[16:10] <camelia> rakudo-moar f4aebe40c: OUTPUT: ¬´Array @a = [[0, 0, 0], [1, 2, 3], [4, 5, 6], 0, 0, 0]‚ê§¬ª

[16:10] <ab5tract> why does append "un-array" my value?

[16:11] <ab5tract> m: my @a = [[1,2,3],[4,5,6]]; @a.unshift: [0,0,0]; @a.append: $[0,0,0]; dd @a

[16:11] <camelia> rakudo-moar f4aebe40c: OUTPUT: ¬´Array @a = [[0, 0, 0], [1, 2, 3], [4, 5, 6], [0, 0, 0]]‚ê§¬ª

[16:11] *** synthmeat left
[16:11] <ab5tract> ok, so there is the solution.. but it feels like a WAT to me

[16:12] *** [Coke] joined
[16:12] <[Coke]> .

[16:14] <lizmat> ab5tract: why use .append and  not .push ??

[16:15] <lizmat> m: my @a; @a.push: [1,2,3]; dd @a

[16:15] <camelia> rakudo-moar f4aebe40c: OUTPUT: ¬´Array @a = [[1, 2, 3],]‚ê§¬ª

[16:15] <lizmat> .append and .prepend where specifically created for their flattening behaviour

[16:17] *** seednode left
[16:19] *** seednode joined
[16:21] *** synthmeat joined
[16:21] <ab5tract> lizmat: doh! that was a total thinko on my part. of course .push is the corresponding method for .unshift

[16:21] <lizmat> ok, glad to be able to clear that up :-)

[16:22] <ab5tract> lizmat: much appreciated :D

[16:22] <lizmat> the reason that .push doesn't have single arg semantics

[16:23] <lizmat> is whether @array.push(@array.pop) should restore the array in the original state regardless of the contents of the last elemen

[16:23] <lizmat> t

[16:30] *** lichtkind joined
[16:32] *** gordonfish- is now known as gordonfish

[16:40] *** dextercd joined
[16:41] *** monkey_ left
[16:53] *** lichtkind left
[16:54] *** lichtkind joined
[16:55] *** lichtkind left
[16:55] *** lichtkind joined
[17:01] <ab5tract> lizmat++ thanks for the explanation

[17:02] *** monkey_ joined
[17:03] *** kostas left
[17:09] *** xinming left
[17:17] *** synthmeat left
[17:23] *** [Coke]_ joined
[17:26] *** [Coke] left
[17:27] *** linkable6 left
[17:28] *** seednode left
[17:33] *** seednode joined
[17:36] *** synthmeat joined
[17:36] *** dakkar left
[17:43] <merryprog> Hey lizmat, do you know where the regex engine is implemented? Looking to make a bugfix or positive lookbehinds

[17:44] <merryprog> my code search-fu isn't turning up where the main logic happens

[17:45] <moon-child> merryprog: https://github.com/Raku/nqp/tree/master/src/QRegex

[17:45] <merryprog> ah that'd be why :P was looking in Rakudo

[17:45] <merryprog> thank you!

[18:00] *** monkey_ left
[18:02] *** reportable6 left
[18:05] *** reportable6 joined
[18:06] *** gcd left
[18:12] *** ab5tract left
[18:15] *** abraxxa left
[18:26] *** Guest85 left
[18:28] *** linkable6 joined
