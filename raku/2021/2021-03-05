[00:01] *** marcusr joined
[00:07] *** Deej69 left
[00:13] *** aborazmeh left
[00:15] *** patrickbkr[m] left
[00:15] *** patrickbkr[m] joined
[00:15] *** juanfra__ left
[00:15] *** MitarashiDango[m left
[00:15] *** AlexDaniel` left
[00:19] *** MitarashiDango[m joined
[00:20] *** AlexDaniel` joined
[00:22] *** juanfra__ joined
[00:34] *** MasterDuke left
[00:34] *** pecastro left
[00:41] *** dotdotdot joined
[00:42] *** aborazmeh joined
[00:45] *** neshpion left
[00:48] *** monkey__ joined
[00:50] *** dogbert17 joined
[00:54] *** dogbert11 left
[01:08] *** aborazmeh left
[01:14] *** sten_ joined
[01:15] *** neshpion joined
[01:27] *** sten_ left
[01:28] *** sten_____ joined
[01:28] <sten_____> :

[01:28] *** dogbert17 left
[01:29] <sten_____> .say for <A>..<z>

[01:29] <evalable6> sten_____, rakudo-moar ceac52170: OUTPUT: ¬´A‚ê§B‚ê§C‚ê§D‚ê§E‚ê§F‚ê§G‚ê§H‚ê§I‚ê§J‚ê§K‚ê§L‚ê§M‚ê§N‚ê§O‚ê§P‚ê§Q‚ê§R‚ê§S‚ê§T‚ê§U‚ê§V‚ê§W‚ê§X‚ê§Y‚ê§Z‚ê§[‚ê§\‚ê§]‚ê§^‚ê§_‚ê§`‚ê§a‚ê§b‚ê§c‚ê§d‚ê§e‚ê§f‚ê§g‚ê§h‚ê§i‚ê§j‚ê§k‚ê§l‚ê§m‚ê§n‚ê§o‚ê§p‚ê§q‚ê§r‚ê§s‚ê§t‚ê§u‚ê§v‚ê§w‚ê§x‚ê§y‚ê§z‚ê§¬ª

[01:29] *** dogbert17 joined
[01:31] <sten_____> '[' , ']' , '\' , '^' , '`' : What that ???? 

[01:37] <uzl[m]> m: say "A".ord, "z".ord;

[01:37] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´65122‚ê§¬ª

[01:38] <uzl[m]> m: say "A".ord, " ", "z".ord, " ", "[";

[01:38] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´65 122 [‚ê§¬ª

[01:38] <uzl[m]> m: say "A".ord, " ", "z".ord, " ", "[".ord;

[01:38] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´65 122 91‚ê§¬ª

[01:40] <uzl[m]> sten_____: You're looping over a range from "A" to "z", and that range includes a few other characters other than alphabetic characters

[01:45] *** juanfra__ left
[01:45] *** l-as left
[01:46] *** mark[m] left
[01:46] *** uzl[m] left
[01:46] *** Tirifto[m] left
[01:47] *** JRaspass left
[01:48] *** AlexDaniel` left
[01:48] *** krako[m] left
[01:48] *** CIAvash left
[01:48] *** tusooa left
[01:48] *** ThaEwat left
[01:48] *** MitarashiDango[m left
[01:48] *** unclechu left
[01:48] *** guifa2 left
[01:49] *** juanfra__ joined
[02:04] *** uzl[m] joined
[02:04] *** mark[m] joined
[02:11] *** l-as joined
[02:11] *** Tirifto[m] joined
[02:16] *** xinming left
[02:17] *** xinming joined
[02:17] *** monkey__ left
[02:18] *** AlexDaniel` joined
[02:19] *** CIAvash joined
[02:22] *** unclechu joined
[02:27] *** tusooa joined
[02:32] *** kvw_5 joined
[02:32] *** ThaEwat joined
[02:35] *** kvw_5_ left
[02:36] *** krako[m] joined
[02:39] *** MitarashiDango[m joined
[02:44] *** mowcat left
[02:44] *** mowcat joined
[02:44] *** mowcat left
[02:45] *** mowcat joined
[02:45] *** leont left
[02:57] *** mowcat left
[03:08] *** kaiwulf joined
[03:11] *** neshpion_ joined
[03:13] *** neshpion_ left
[03:14] *** neshpion left
[03:26] *** k-man left
[03:30] *** mowcat joined
[03:31] *** guifa joined
[03:32] *** mowcat left
[03:32] *** k-man joined
[04:09] *** hythm_ joined
[04:12] *** hythm left
[04:41] *** sten_____ left
[04:44] *** sten_ joined
[04:57] *** wamba joined
[05:14] *** kaiwulf left
[05:18] *** sten_ left
[05:45] *** xinming left
[05:45] *** xinming joined
[06:05] *** Geth left
[06:05] *** Geth joined
[06:10] *** brtastic joined
[06:18] *** vike left
[06:21] *** vike joined
[06:54] *** Doc_Holliwood joined
[07:09] *** ufobat_ joined
[07:14] *** domidumont joined
[07:18] *** pounce left
[07:28] *** parabolize left
[07:32] *** jmerelo joined
[07:37] *** Sgeo left
[08:09] *** pecastro joined
[08:14] *** sena_kun left
[08:35] *** squashable6 left
[08:35] *** squashable6 joined
[08:37] *** patrickb joined
[09:07] *** Doc_Holliwood left
[09:08] *** rindolf joined
[09:23] *** BinGOs left
[09:29] *** bingos joined
[09:39] *** domidumont left
[09:58] *** JRaspass joined
[10:04] *** xinming left
[10:06] *** xinming joined
[10:06] *** Doc_Holliwood joined
[10:18] *** plvicente joined
[10:25] *** ufobat_ left
[10:33] *** PimDaniel joined
[10:34] <PimDaniel> \o Hi

[10:34] <tellable6> 2021-03-04T10:42:15Z #raku <jmerelo> PimDaniel sorry, I didn't catch this before... You can use .tell jmerelo to leave messages for me here.

[10:34] <tellable6> 2021-03-04T10:43:21Z #raku <jmerelo> PimDaniel you can use the sigil & to indicate it's a block instead of a $

[10:34] <Geth> ¬¶ problem-solving: patrickbkr assigned to codesections Issue The PS-process' acceptance policy doesn't match reality https://github.com/Raku/problem-solving/issues/272

[10:34] * PimDaniel jemerelo the last problem is done. Thank's.

[10:35] *** xinming left
[10:36] *** xinming joined
[10:38] <PimDaniel> I've got a problem  with push : when inside a class i write : push @!angle, ($!xpos,$!xpos); It seams that i pushed an address instead of values because at least each part of the array @angle contains the last value of $!xpos and $!ypos. How to work around this?

[10:40] <PimDaniel> I can resolve the problem by copying $!xpos and $!xpos into my variables eg ($x,$y) = $!xpos,$!ypos but i think there's a better solution.

[10:50] <moritz> are these numbers? if yes, just push (+$!xpos, +$!xpos)

[10:53] * PimDaniel thank's moritz, i just seee into the reference that $!xpos.item could decontainerize it.

[10:54] <PimDaniel> If this works, i think it's better for one to read code afterwards.

[10:55] <moritz> TBH I find .item just as unintuitive as +, because it's it's already an item (just like it's already a number)

[10:55] *** sena_kun joined
[10:56] <moritz> maybe most readable: sub decont($x) { $x } with an explanatory comment

[10:56] <moritz> and then push (decont($!a), decont($!b))

[10:58] * PimDaniel moritz , it does not seam to work anyway with .item. :(

[10:58] <PimDaniel> decont is probably the best method.

[10:58] <PimDaniel> The *good one.

[11:06] *** PimDaniel left
[11:07] *** pedro__ joined
[11:08] *** plvicente left
[11:09] *** PimDaniel joined
[11:10] *** PimDaniel left
[11:16] *** Doc_Holliwould joined
[11:16] *** Doc_Holliwood left
[11:33] *** xinming left
[11:33] *** xinming joined
[11:37] <pedro__> hi

[11:39] <moritz> hi pedro__ 

[11:39] <pedro__> I have a doubt

[11:39] *** Black_Ribbon left
[11:52] *** Doc_Holliwould left
[11:55] *** pedro_ joined
[11:55] *** pedro__ left
[12:05] *** Doc_Holliwood joined
[12:12] *** mowcat joined
[12:12] *** leont joined
[12:16] *** mowcat left
[12:16] *** mowcat joined
[12:17] <Geth> ¬¶ doc/finanalyst-patch-2: cce55dd49e | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Type/IO/Path/Parts.pod6

[12:17] <Geth> ¬¶ doc/finanalyst-patch-2: Update Parts.pod6

[12:17] <Geth> ¬¶ doc/finanalyst-patch-2: 

[12:17] <Geth> ¬¶ doc/finanalyst-patch-2: copy-paste-o

[12:17] <Geth> ¬¶ doc/finanalyst-patch-2: by context should be 'volume', probably text pasted from elsewhere.

[12:17] <Geth> ¬¶ doc/finanalyst-patch-2: review: https://github.com/Raku/doc/commit/cce55dd49e

[12:19] *** pedro_ left
[12:25] *** squashable6 left
[12:25] *** squashable6 joined
[12:29] *** xinming left
[12:29] *** xinming joined
[12:39] *** brtastic1 joined
[12:45] *** plvicente joined
[12:51] *** domidumont joined
[12:53] *** xinming left
[12:54] *** brtastic1 left
[12:55] *** xinming joined
[13:01] *** plvicente left
[13:08] *** lizmat_ joined
[13:10] *** dotdotdot left
[13:10] *** lizmat left
[13:11] *** plvicente joined
[13:12] *** hazim joined
[13:14] <uzl[m]> .ask lizmat is the bot for submitting Rakudo Weekly News entries still around? In any case, this is a Raku-related link: https://lobste.rs/s/diluza/imagining_ideal_language_for_writing

[13:14] <tellable6> uzl[m], I'll pass your message to lizmat

[13:15] *** dotdotdot joined
[13:18] <hazim> hello i have a question , is there something like java synchronized in raku

[13:18] <tellable6> 2021-01-31T10:29:24Z #raku <jmerelo> hazim that fails from time to time. You can try and install it by hand in advance.

[13:18] <tellable6> 2021-01-31T10:36:53Z #raku <PimDaniel> hazim i tried to install cro and i got theses erreurs => /usr/bin/ld¬†: ne peut trouver -ltommath /usr/bin/ld¬†: ne peut trouver -latomic_ops

[13:18] <tellable6> 2021-01-31T10:38:22Z #raku <PimDaniel> hazim but theses are easy to resolve has you may know, but you can may be check if you have theses libraries  anyway.

[13:19] *** mowcat left
[13:22] <CIAvash> weekly: https://lobste.rs/s/diluza/imagining_ideal_language_for_writing

[13:22] <notable6> CIAvash, Noted! (weekly)

[13:28] *** JRaspass left
[13:29] *** xinming left
[13:29] *** xinming joined
[13:38] *** Doc_Holliwood left
[13:40] *** plvicente left
[13:52] *** hazim left
[13:52] *** plvicente joined
[13:53] *** jmerelo left
[14:18] <codesections> CIAvash: thanks for linking that; it's good to hear what some non-Rakoons think about those ideas

[14:23] *** wamba left
[14:24] *** rindolf left
[14:33] *** Sgeo joined
[14:41] *** rindolf joined
[14:45] *** leont left
[14:46] *** leont joined
[14:46] *** bingos is now known as BinGOs

[14:48] *** brtastic left
[15:03] *** xinming left
[15:04] *** xinming joined
[15:08] *** frost-lab left
[15:10] *** plvicente left
[15:12] *** parabolize joined
[15:19] *** xinming left
[15:20] *** xinming joined
[15:34] *** JRaspass joined
[15:35] *** lizmat_ is now known as lizmat

[15:36] <lizmat> weekly: https://lobste.rs/s/diluza/imagining_ideal_language_for_writing

[15:36] <notable6> lizmat, Noted! (weekly)

[15:36] <tellable6> 2021-03-05T13:14:07Z #raku <uzl[m]> lizmat is the bot for submitting Rakudo Weekly News entries still around? In any case, this is a Raku-related link: https://lobste.rs/s/diluza/imagining_ideal_language_for_writing

[15:36] *** wamba joined
[15:36] <lizmat> ^^ uzl[m] noted  :-)

[15:36] *** maggotbrain left
[15:39] *** xinming left
[15:39] *** xinming joined
[15:44] *** mowcat joined
[15:46] *** plvicente joined
[15:47] *** maggotbrain joined
[15:47] *** maggotbrain left
[15:50] *** xinming left
[15:51] *** xinming joined
[15:52] <codesections> From that comment thread: > The speaker goes on to talk about Raku, which I guess is what Perl6 turned into (?), as being one of the fun languages with a friendly community.

[15:52] <codesections> which gets the reply: > Yikes, I wouldn‚Äôt touch perl with a barge pole :)

[15:53] * codesections sighs heavily 

[15:58] *** gnufr33dom left
[16:01] *** mowcat left
[16:01] *** mowcat joined
[16:06] *** Garbanzo left
[16:07] *** Garbanzo joined
[16:11] *** brtastic joined
[16:14] *** JRaspass left
[16:30] *** plvicente left
[16:39] *** plvicente joined
[16:46] *** wamba left
[16:56] <jdv79> sounds about right.  nothings changed in the last decade or so in that regard.

[17:02] *** plvicente left
[17:09] *** vike left
[17:16] *** orinthe left
[17:17] *** orinthe joined
[17:23] *** mniip left
[17:29] *** mniip joined
[17:30] <tonyo> if there isn't implicit variable declaration what is the point?

[18:12] *** Doc_Holliwood joined
[18:15] *** wbiker joined
[18:20] *** orinthe left
[18:21] *** orinthe joined
[18:23] *** domidumont left
[18:23] *** plvicente joined
[18:29] <gfldex> codesections: I like it when I read such comments. Without knowing a person well it can be quite hard to tell if their opinion is based on good judgement/deep knowledge or if they are driven my vanity. The faster I can identify a fool the faster I can ignore them.

[18:30] <El_Che> gfldex: https://www.kimaerickson.com/wp-content/uploads/2015/04/thHWPMILWT.jpg

[18:36] *** plvicente left
[18:40] *** wamba joined
[18:48] *** _jrjsmrtn joined
[18:48] *** brtastic left
[18:50] *** Doc_Holliwould joined
[18:50] *** Doc_Holliwood left
[18:50] *** __jrjsmrtn__ left
[18:57] *** MasterDuke joined
[19:13] *** Doc_Holliwould left
[19:14] <raydiak> Just playing devil's advocate here, but to assess a statement based on its source (and by extension, the source's real or imagined motivation, character, history, or other attributes) is a logical fallacy with some latin name from debate class which I don't know. There's always more context you may or may not know, regardless of your assumptions about the source. The person could be saying that because they're

[19:14] <raydiak> emtionally attached to another paradigm with a lot of dogma about why perl is so bad, or because they were the lead developer of a large project with too many junior engineers under them, or because they wrote mission-critical stuff in raku and it actually failed to achieve mission objectives

[19:16] <codesections> what syntactical role is the colon in the following line playing?

[19:17] <codesections> m: say :{ #`( stuff) }

[19:17] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´{}‚ê§¬ª

[19:18] <codesections> My first thought would be that it makes sure that the {} is a hash rather than a block (or the reverse), but it doesn't seem to

[19:19] <raydiak> codesections: https://docs.raku.org/language/hashmap#index-entry-:{}

[19:20] <raydiak> "By default keys in { } are forced to strings. To compose a hash with non-string keys, use a colon prefix"

[19:20] <MasterDuke> --target=parse might be helpful

[19:20] *** Doc_Holliwood joined
[19:21] <codesections> not sure how I missed that, raydiak++.  Thanks

[19:21] <raydiak> yw

[19:30] *** timlegge left
[19:49] *** phogg left
[19:51] *** phogg joined
[20:20] <raydiak> Anyone working on anything cool/awesome/inpiring/(verg/adverb/part-of-speech-of-your-choice) today?

[20:22] *** kst left
[20:24] *** plvicente joined
[20:24] *** timlegge joined
[20:32] *** wamba left
[20:34] <El_Che> raydiak: I wanted to pick up some JS for a future project and wrote a page with cats and Kanban/Agile quotes (to laugh with the extreme evangelists at work :) )

[20:36] <El_Che> Cool, you can just drop js on github pages and it works

[20:39] *** wbiker left
[20:53] *** patrickb left
[20:56] *** plvicente left
[20:57] <cog> Hi, is there a way to predeclare an enum, I will define later with an EVAL ?

[20:57] *** patrickb joined
[20:59] <moritz> well, you can do something like my \TheEnum = EVAL $string;

[21:00] <moritz> of course you have none of the compile-time benefits of an enum if you don'T delare it at compile time

[21:03] *** freezing_ left
[21:04] *** MasterDuke left
[21:06] <cog> m: BEGIN { my $reg-type-str = "1 => 1"; EVAL "enum  Reg-Types is export (  $reg-type-str )"; }

[21:06] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§EVAL is a very dangerous function!!! (use the MONKEY-SEE-NO-EVAL pragma‚ê§to override this error but only if you're VERY sure your data contains‚ê§no injection attacks).‚ê§at <tmp>:1‚ê§------> 3 Reg-Ty‚Ä¶¬ª

[21:07] <cog> m: use MONKEY-SEE-NO-EVAL; BEGIN { my $reg-type-str = "1 => 1"; EVAL "enum  Reg-Types is export (  $reg-type-str )"; }

[21:07] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a BEGIN‚ê§at <tmp>:1‚ê§Exception details:‚ê§  5===SORRY!5=== Error while compiling ‚ê§  This type cannot unbox to a native string: P6opaque, Int‚ê§  at :‚ê§¬ª

[21:08] *** MasterDuke joined
[21:10] <cog> m: > use MONKEY-SEE-NO-EVAL; BEGIN { EVAL "enum  Reg-Types is export ( 1 => 1 )"; }

[21:10] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Preceding context expects a term, but found infix > instead.‚ê§at <tmp>:1‚ê§------> 3>7‚èè5 use MONKEY-SEE-NO-EVAL; BEGIN { EVAL "e‚ê§¬ª

[21:11] <cog> m:  use MONKEY-SEE-NO-EVAL; BEGIN { EVAL "enum  Reg-Types is export ( 1 => 1 )"; }

[21:11] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a BEGIN‚ê§at <tmp>:1‚ê§Exception details:‚ê§  5===SORRY!5=== Error while compiling ‚ê§  This type cannot unbox to a native string: P6opaque, Int‚ê§  at :‚ê§¬ª

[21:13] *** patrickb left
[21:13] <cog> m: use MONKEY-SEE-NO-EVAL; BEGIN { EVAL "class  {}"; }

[21:13] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´Use of Nil in string context‚ê§  in block  at <tmp> line 1‚ê§5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a BEGIN‚ê§at <tmp>:1‚ê§Exception details:‚ê§  5===SORRY!5=== Error while compiling /home/camelia/E‚Ä¶¬ª

[21:14] *** aborazmeh joined
[21:14] <cog> m: use MONKEY-SEE-NO-EVAL; BEGIN { EVAL "class  \{\}"; }

[21:14] <camelia> rakudo-moar 726a75e24: ( no output )

[21:15] <raydiak> El_Che: kanban means many different things according to search engines and even my own work expeience. can you show me in code what you're working on?

[21:16] <El_Che> "working on"is stretching it :) https://nxadm.github.io/TheOracleOfKanbanJS/

[21:19] <raydiak> heh, cool little steam of inspiration, though

[21:20] <El_Che> :)

[21:23] <raydiak> I used to work on the shop floor of a manufacutring company which took many inspirations from Toyota, we had a very different concept of "kanban" more like here: https://en.wikipedia.org/wiki/Kanban

[21:25] <cog> m: > use MONKEY-SEE-NO-EVAL; BEGIN { EVAL "enum  Reg-Types is export ( a => 1 )"; }

[21:25] <camelia> rakudo-moar 726a75e24: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Preceding context expects a term, but found infix > instead.‚ê§at <tmp>:1‚ê§------> 3>7‚èè5 use MONKEY-SEE-NO-EVAL; BEGIN { EVAL "e‚ê§¬ª

[21:26] <cog> m:  use MONKEY-SEE-NO-EVAL; BEGIN { EVAL "enum  Reg-Types is export ( a => 1 )"; }

[21:26] <camelia> rakudo-moar 726a75e24: ( no output )

[21:26] <cog> Silly me

[21:29] *** rindolf left
[21:29] <El_Che> raydiak: I have no problems with kanban (or boards and tracks), but I feel the ideas are not really followed and it turns very fast into rituals

[21:31] *** MasterDuke left
[21:34] <raydiak> El_Che: if you are saying that some poeple grasp quickly for rote knowledge while others seek a higher structural and logical wisdom, then...I agree?

[21:35] *** MasterDuke joined
[21:40] <cog> Solved my problem. Creating my enum in a BEGIN { EVAL "..." }, I dit not need to predeclare. But that question is left open.

[21:48] *** Doc_Holliwould joined
[21:51] *** Doc_Holliwood left
[21:53] *** aborazmeh left
[21:58] *** brtastic joined
[22:12] *** JRaspass joined
[22:27] *** kaiwulf joined
[22:31] <tonyo> we used a flavor of kanban in the military for avionics

[22:32] <tonyo> they didn't call it that, though. we also did lean and six sigma.

[22:40] *** dogbert11 joined
[22:41] *** dogbert11 left
[22:42] *** dogbert11 joined
[22:42] *** dogbert17 left
[22:45] *** dogbert11 left
[22:46] *** dogbert11 joined
[22:49] *** brtastic left
[22:53] <jdv79> all the "agile" stuff ive seen is garbage.  ritual, excess, and unproductive.

[22:55] <jdv79> at $work we oficially do kanban but in reality not really. its bs.

[22:55] *** JRaspass left
[22:58] *** xinming left
[22:58] *** xinming joined
[23:09] *** neshpion joined
[23:10] *** Black_Ribbon joined
[23:27] *** xinming left
[23:29] *** xinming joined
[23:31] *** vrurg left
[23:53] *** vrurg joined
