[00:01] <Xliff> Why is this being emitted? "No exception handler located for warn"

[00:01] <tellable6> hey Xliff, you have a message: https://gist.github.com/146d57d7ff58c3240049b5179dc5411e

[00:01] <Xliff> And how can I fix it?

[00:07] <Xliff> tony-o: Can you show me what you did? I can't seem to get it to work on my updated gist. Feel free to fork it and send me the new URL.

[00:18] <guifa2> [Coke]++ codesections++ 

[00:24] *** eax joined
[00:26] <Xliff> Why is this being emitted? "No exception handler located for warn"

[00:27] <Xliff> And how can I fix it?

[00:27] *** berber44 joined
[00:36] <berber44> Hello, I'm reading Apocalypses and have a question. In one place it is written: "we will make the rule that a left curly that has whitespace in front of it will never be interpreted as a subscript in Perl 6". Is this rule still valid in Raku?

[00:36] <guifa2> berber44: yes

[00:36] <berber44> Thanks, guifa2

[00:37] <guifa2> well, unless you count the unspace, but I don' think that counts since unspacing is literally removing spacing :-)

[00:38] <guifa2> [Coke]: is that behavior documented anywhere?  Like....it's awesome, but still…

[00:39] <moon-child> guifa2: unspacing?

[00:39] <guifa2> moon-child: no, putting a constant as a type for multi dispatch

[00:40] <guifa2> m: multi sub foo (1 :$a) { say "one" }; multi sub foo ('a' :$a) { say "ay" }; foo 'a'; foo 1

[00:40] <camelia> rakudo-moar 4d40e23e0: OUTPUT: «5===SORRY!5===␤Calling foo(Str) will never work with any of these multi signatures:␤    (Int :$a where { ... }) ␤    (Str :$a where { ... })␤at <tmp>:1␤------> 3; multi sub foo ('a' :$a) { say "ay" }; 7⏏5foo 'a'; foo 1␤Calling f…»

[00:40] <guifa2> weird it literally just worked for me haha

[00:41] <guifa2> err done

[00:41] <moon-child> guifa2: no I mean, what's unspacing?

[00:41] <guifa2> moon-child: unspacing is using a backslash and then you can follow it as many spaces as you want, as if it weren't there

[00:41] <guifa2> my @a = 1,2,3,4; say @a\           [1]

[00:41] <evalable6> guifa2, rakudo-moar 4d40e23e0: OUTPUT: «2␤»

[00:41] <moon-child> m: my $abc = 5; say $a\  bc;

[00:41] <camelia> rakudo-moar 4d40e23e0: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$a' is not declared␤at <tmp>:1␤------> 3my $abc = 5; say 7⏏5$a\  bc;␤»

[00:42] <guifa2> moon-child: it always breaks an identifier though IIRC

[00:42] <moon-child> ahh ok

[00:47] *** sortiz left
[00:58] <tony-o> you can use a MAIN and accept an array

[00:58] <tellable6> 2021-01-05T20:11:00Z #raku <melezhik> tony-o I've found one issue with fez - https://github.com/tony-o/raku-fez/issues/9

[01:05] *** berber44 left
[01:14] *** cpan-raku left
[01:16] *** cpan-raku joined
[01:16] *** cpan-raku left
[01:16] *** cpan-raku joined
[01:16] *** guifa2 left
[01:38] *** notagoodidea left
[01:49] <eax> is there an equivalent text2html in raku? as in perl5. Or will I just have to inline it?

[02:05] <Xliff> eax: text2html? What module is that from?

[02:07] <Xliff> tony-o: Can you show me what you did with the regex? Thanks.

[02:09] <SmokeMachine> .tell xinming it seems the `.grep: { $min < .col and .col <= $max }` is not related to the Optimization (but I'm not sure yet...). but it seems something like this works: `.say for Bla.^all.grep: { $min > .col >= $min }` maybe it could help while it's not fixed

[02:09] <tellable6> SmokeMachine, I'll pass your message to xinming

[02:11] <eax> @Xliff HTML::FromText

[02:17] <Xliff> eax: Nope. Looks like you will have to Inline it.

[02:19] <eax> no worries, I was mentally prepped, just wanted to give it another check. Thank you Sir

[02:32] *** eax left
[03:33] *** linkable6 joined
[03:33] *** bisectable6 joined
[03:33] *** squashable6 joined
[03:33] *** tellable6 joined
[03:33] *** cheeze42 joined
[03:33] *** committable6 joined
[03:33] *** bloatable6 joined
[03:33] *** coverable6 joined
[03:34] *** nativecallable6 joined
[03:34] *** benchable6 joined
[03:34] *** unicodable6 joined
[03:34] *** notable6 joined
[03:34] *** evalable6 joined
[03:35] *** greppable6 joined
[03:35] *** quotable6 joined
[03:35] *** releasable6 joined
[03:35] *** shareable6 joined
[03:35] *** sourceable6 joined
[03:35] *** statisfiable6 joined
[03:36] *** cheeze42 left
[04:36] *** sourceable6 left
[04:36] *** quotable6 left
[04:36] *** coverable6 left
[04:36] *** greppable6 left
[04:36] *** bloatable6 left
[04:36] *** bisectable6 left
[04:36] *** statisfiable6 left
[04:36] *** evalable6 left
[04:36] *** notable6 left
[04:36] *** unicodable6 left
[04:36] *** nativecallable6 left
[04:36] *** committable6 left
[04:36] *** linkable6 left
[04:36] *** releasable6 left
[04:36] *** squashable6 left
[04:36] *** benchable6 left
[04:36] *** shareable6 left
[04:36] *** tellable6 left
[04:36] *** greppable6 joined
[04:37] *** bisectable6 joined
[04:37] *** releasable6 joined
[04:37] *** evalable6 joined
[04:37] *** notable6 joined
[04:37] *** quotable6 joined
[04:37] *** tellable6 joined
[04:38] *** benchable6 joined
[04:38] *** sourceable6 joined
[04:38] *** linkable6 joined
[04:38] *** statisfiable6 joined
[04:38] *** bloatable6 joined
[04:38] *** nativecallable6 joined
[04:39] *** squashable6 joined
[04:39] *** shareable6 joined
[04:39] *** unicodable6 joined
[04:39] *** committable6 joined
[04:39] *** coverable6 joined
[05:39] *** sourceable6 left
[05:39] *** bisectable6 left
[05:39] *** releasable6 left
[05:39] *** greppable6 left
[05:39] *** nativecallable6 left
[05:39] *** squashable6 left
[05:39] *** shareable6 left
[05:39] *** benchable6 left
[05:39] *** committable6 left
[05:39] *** statisfiable6 left
[05:39] *** evalable6 left
[05:39] *** linkable6 left
[05:39] *** coverable6 left
[05:39] *** tellable6 left
[05:39] *** bloatable6 left
[05:39] *** notable6 left
[05:39] *** quotable6 left
[05:39] *** unicodable6 left
[05:40] *** releasable6 joined
[05:40] *** committable6 joined
[05:40] *** greppable6 joined
[05:40] *** squashable6 joined
[05:40] *** linkable6 joined
[05:40] *** nativecallable6 joined
[05:41] *** notable6 joined
[05:41] *** bloatable6 joined
[05:41] *** coverable6 joined
[05:41] *** benchable6 joined
[05:41] *** evalable6 joined
[05:41] *** quotable6 joined
[05:42] *** tellable6 joined
[05:42] *** shareable6 joined
[05:42] *** statisfiable6 joined
[05:42] *** sourceable6 joined
[05:42] *** unicodable6 joined
[05:42] *** bisectable6 joined
[06:20] *** brtastic joined
[06:57] <tib> .

[06:57] <tellable6> 2021-01-05T23:51:34Z #raku <melezhik> tib I've create a simple Sparrow plugin tom list sparky builds, it's built on go and does not require any dependencies . It's very simple but illustrate the idea - http://sparrowhub.io/plugin/sparky-db/0.000001 

[07:03] *** parabolize left
[07:27] *** sjm_uk joined
[07:28] *** jmerelo joined
[07:53] *** frost-lab joined
[08:03] *** stoned75 joined
[08:06] *** Sgeo left
[08:07] *** domidumont joined
[08:43] *** pecastro joined
[08:44] *** sena_kun joined
[08:48] *** JRaspass joined
[08:52] *** Doc_Holliwood joined
[09:10] *** Toilie joined
[09:14] <Xliff> Which is faster? .^can or .^lookup?

[10:04] *** jmchael joined
[10:23] <MasterDuke> benchable6: compare HEAD my $a = "foo"; my $b; my $c; for ^100_000 { $b = $a.^can("index"); $c = $a.^can("bar") } ||| my $x = "foo"; my $y; my $z; for ^100_000 { $y = $x.^lookup("index"); $z = $x.^lookup("bar") }

[10:23] <benchable6> MasterDuke, starting to benchmark the 1 given commit

[10:23] <benchable6> MasterDuke, ¦HEAD: «Benchmark: ␤«timed out after 10 seconds»»

[10:24] <MasterDuke> benchable6: compare HEAD my $a = "foo"; my $b; my $c; for ^1_000 { $b = $a.^can("index"); $c = $a.^can("bar") } ||| my $x = "foo"; my $y; my $z; for ^1_000 { $y = $x.^lookup("index"); $z = $x.^lookup("bar") }

[10:24] <benchable6> MasterDuke, starting to benchmark the 1 given commit

[10:24] <benchable6> MasterDuke, https://gist.github.com/2e12a32826aaddca447267c02e57f138

[10:24] <MasterDuke> Xliff: https://gist.github.com/2e12a32826aaddca447267c02e57f138 seems `.^lookup` is faster

[10:26] <Xliff> MasterDuke++: Thanks. I'll have to save that bit you did for my own evil purposes! :)

[10:26] <Xliff> MasterDuke: Do you have the lowdown on how to use sourceable?

[10:27] *** wamba joined
[10:27] <MasterDuke> i'm not very good at using sourceable6. AlexDaniel` is much better. but the wiki does have some documentation

[10:27] <MasterDuke> sourceable6: help

[10:27] <sourceable6> MasterDuke, Like this: sourceable6: 42.base(16) # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Sourceable

[10:28] <MasterDuke> what are you trying to find?

[10:29] *** patrickb joined
[10:30] *** sno left
[10:33] *** frost-lab left
[10:39] *** Doc_Holliwood left
[10:42] *** frost-lab joined
[10:44] <jmerelo> Surprisingly (or not) I managed to compile up to NQP in FreeBSD... https://github.com/raku-community-modules/LWP-Simple/runs/1655738697?check_suite_focus=true

[10:48] <MasterDuke> there are a couple people using rakudo on some of the bsds, don't know which ones though

[10:49] <MasterDuke> istr tyil is on a bsd

[10:49] <jmerelo> MasterDuke: Kaiepi IIRC

[10:49] <jmerelo> MasterDuke: not sure about tyil

[10:50] <tyil> I have some BSD machines, but those aren't my "main" machines

[10:50] *** domidumont left
[10:50] <jmerelo> MasterDuke: anyway, I was trying to address an issue in LWP-Simple, and then fell into the rabbit hole. Then, one thing is knowing some people use it, and another setting up a workflow to compile and test stuff for you.

[10:50] <jmerelo> tyil: did you use Raku here?

[10:51] <tyil> only for testing purposes

[10:51] <tyil> (also, only freebsd so far)

[10:51] *** domidumont joined
[10:51] <jmerelo> tyil: so you managed to compile it there...

[10:52] <tyil> yes

[10:52] <jmerelo> I mean, it does not seem impossible, only you have to know all the tricks. Latest one is you can't use the supplied make, but gmake.

[10:52] <tyil> I even have precompiled r* for freebsd

[10:52] <jmerelo> tyil: oh. That would have saved me some trouble... Are they accessible somewhere?

[10:52] *** aluaces joined
[10:53] <jmerelo> tyil: oh yes https://www.tyil.nl/post/2020/06/21/lately-in-raku/

[10:53] <tyil> https://dist.tyil.nl/tmp/

[10:54] <tyil> no organisation in there yet :p

[10:54] *** Doc_Holliwood joined
[10:55] <jmerelo> OK. Anyway, I'm reproducing it in a Github action workflow, and I think I can create artifacts for downloading there. When I've got it working (or if I got it working) I can upload it to the rakudo repo so that it can create... something for download.

[10:55] <tyil> should be very possible

[10:56] <tyil> sadly sourcehut started limiting to 4 build jobs :(

[10:56] <tyil> (and their freebsd env is software emulation, so it takes about an hour instead of 15-20min)

[10:58] <jmerelo> tyil: this will probably take around 30 minutes https://github.com/raku-community-modules/LWP-Simple/actions/runs/465826226

[10:59] <jmerelo> tyil: it's a FreeBSD vm running within vmbox in macosx. Just booting the vm takes around 5 minutes.

[10:59] <jmerelo> tyil: which is why it could be a nice thing to have binaries, as well as actual vm ci. I'll try to look up if there's something around.

[11:00] <jmerelo> Hm, Azure Pipelines could be it...

[11:02] *** patrickb left
[11:03] <jmerelo> Or CirrusCI... https://cirrus-ci.org/guide/FreeBSD/

[11:04] *** notagoodidea joined
[11:09] <notagoodidea> Looking at Sparrow repo, what is the "glue" lib that I see in every file in the ressources dir?

[11:19] *** sena_kun left
[11:20] *** sena_kun joined
[11:22] *** defaultxr joined
[11:23] *** cpan-raku left
[11:27] *** ThaEwat joined
[11:30] *** cpan-raku joined
[11:30] *** cpan-raku left
[11:30] *** cpan-raku joined
[11:34] *** unclechu joined
[11:34] *** AlexDaniel` joined
[11:34] *** JJAtria[m] joined
[11:34] *** CIAvash joined
[11:34] *** MitarashiDango[4 joined
[11:34] *** MitarashiDango[m joined
[11:45] <tyil> jmerelo: welp, let's see how this goes https://github.com/rakudo/star/runs/1656083082

[11:47] *** wamba left
[11:49] *** notagoodidea left
[11:49] *** wamba joined
[11:51] *** notagoodidea joined
[11:56] *** notagoodidea left
[11:57] *** Altai-man joined
[11:58] <jmerelo> tyil: It failed here https://github.com/raku-community-modules/LWP-Simple/runs/1655903447?check_suite_focus=true

[11:59] <tyil> device not configured doesn't tell me anything on first glance :<

[12:00] *** sena_kun left
[12:19] <Kaiepi> jmerelo: my vps runs freebsd

[12:20] <El_Che> "11:49 < MasterDuke> istr tyil is on a bsd"

[12:20] <El_Che> I read: tyil is on lsd

[12:21] <tyil> I mena

[12:21] <tyil> I could be

[12:21] <Kaiepi> that's a bmake issue i think

[12:21] <tyil> who knows ;)

[12:21] <Kaiepi> if gmake is installed, that should be used

[12:22] <Kaiepi> since nqp and rakudo's build system will generate a gnu makefile if that's the case

[12:25] <Kaiepi> oh i should read more of chat

[12:29] *** Doc_Holliwood left
[12:39] <tyil> does anyone know how I can remove this circle-ci check from the rakudo star repo? I don't use it, and I'm unsure why it's even there

[12:42] *** notagoodidea joined
[12:58] <Geth> ¦ problem-solving: ash assigned to JJ Issue Subdomain for the Raku Course https://github.com/Raku/problem-solving/issues/257

[13:04] <tyil> also, can a release on github be deleted after publishing, or is that only possible with drafts?

[13:05] <tyil> (I'm trying to make github actions build a r* on a release, but apparently release events only trigger on non-drafts, so I'll need to use an actual release to test and I don't want to clutter up with test releases)

[13:12] *** ggoebel joined
[13:14] *** sena_kun joined
[13:17] *** Altai-man left
[13:21] *** frost-lab left
[13:40] *** Altai-man joined
[13:43] <Geth> ¦ problem-solving: lizmat assigned to rba Issue Subdomain for the Raku Course https://github.com/Raku/problem-solving/issues/257

[13:43] <Geth> ¦ problem-solving: lizmat unassigned from JJ Issue Subdomain for the Raku Course https://github.com/Raku/problem-solving/issues/257

[13:43] *** sena_kun left
[13:44] <notagoodidea> For those than could be interested: a patch has been merged to KDESyntaxHighlight to consodilate the raku highlighting (used by Kate) and if everything goes well will be pushed to skylighting the syntax highlighting used by neuron and pandoc.

[13:45] <MasterDuke> nice

[13:48] *** Altai-man left
[13:49] *** jmerelo left
[13:50] *** v_m_v joined
[13:52] <xinming> SmokeMachine: with Model.^all method which returns the ResultSeq, We should take snapshot of the table name.

[13:52] <tellable6> hey xinming, you have a message: https://gist.github.com/18914fae6d856161cc8b483396e828d8

[13:53] <xinming> SmokeMachine: otherwise, when we get ResultSeq, which go out of the scope of the block uses `temp Model.^table = "blabla"`, The ResultSeq will use the old table name.

[13:55] <xinming> SmokeMachine: so soemthing like this will work.   my $rs-seq = do { temp Model.^table = "blabla"; Model.^all.grep({ }); };

[13:55] *** guifa2 joined
[13:58] <xinming> SmokeMachine: also, For now, .grep({ ... })    is chained with "and", do we have methods to do chain with "or"?

[13:58] *** v_m_v left
[13:59] *** v_m_v joined
[14:03] <guifa2> When doing a lot of string concating in perf-sensitive code, is there a known best approach?  Switch to native str? Generate a list and then join at the end?  I think I remember that string handling is done in chunks that are joined in the VM but I don't remember the details

[14:03] <guifa2> (I'll do some tests to see if no one knows off hand, just curious if there was a standard approach)

[14:04] *** v_m_v left
[14:06] <SmokeMachine> xinming: &&, and, || and or should work... if it isn’t, that’s a bug...

[14:06] <MasterDuke> yeah, the vm has a concept of strands, so repetition (i.e., the `x` operator) and concatenation can just increment a strand count or create a new strand

[14:07] <SmokeMachine> xinming: but that’ll really work well when I concert Red to use RakuAST...

[14:07] <MasterDuke> but it does depend on how you're using the strings, so the vm may end up flattening all the strands anyway

[14:08] <MasterDuke> so you really need to benchmark with the operations/code you will be doing for real

[14:10] <guifa2> MasterDuke: thanks.  I'm having to create my own sprintf effectively and trying to come up with different ways to generate the digits in numbers

[14:19] <notagoodidea> guifa2: For the integration of Intl::CLDR in a program, is it possible to only get a fixed set of words without having to take the all the files available?

[14:22] <guifa2> notagoodidea: depends, and there are several approaches.  Each language has a strings and data file, and that's only opened on demand (in fact, the loading is even lazier than that).  So long as you're working on a single language, that should be fairly efficient, but it does require the installation of all of Intl::CLDR's resource files (which is a hefty 75 MB or so)

[14:22] <xinming> SmokeMachine: What I mean is, the .grep({ }).grep({ })  is a `and` op, Do we have chaining op to make the new chain `or`

[14:23] <guifa2> If you're wanting to reduce that weight (or allow for faster loading of a small subset of data across all languages), I'd recommend using a preprocessing script that directly accesses Intl::CLDR, and generates the specific data you need

[14:24] <xinming> SmokeMachine: In DBIx::Class, We can do something like this, I just forgot the syntax.

[14:25] <notagoodidea> mm ok:) My idea was : I am gonna need those words, say <hello bye foobar>, in all language available. Best to preprocess and back it somewhere.

[14:25] <guifa2> (e.g. a calendar app you might use `cldr{$lang}.dates.calendars.gregorian.months.stand-alone.wide[1..12] for @langs` and output that into a file and read it in more quickly

[14:26] <guifa2> yeah, exactly.  I imagine about half of people using it will have the `use` statement in the main script, and about the half using it for preprocessing, depending on use case

[14:26] <xinming> SmokeMachine: BTW, the reason I ask that ResultSeq should remember the 'temped' table name is.

[14:27] <tyil> notagoodidea: re: raku highlighting in KDESyntaxHighlight: nice!

[14:27] <notagoodidea> guifa2: I was poking with the idea to find a way for localized CLI arguments but not right now.

[14:27] <xinming> SmokeMachine: I just have some requirement which is like,  my $rs1 = { temp Model.^table = "blabla"; Model.^all };    my $rs2 = { temp Model.^table = "bleble"; Model.^all };

[14:28] <guifa2> I'll have a localized number parser available again soon :-)

[14:28] <guifa2> literally just use <local-number> in your regex and it will get you both the string and evaluate the value of the number as a mixin

[14:29] <notagoodidea> tyil: Yep, it was already there but buggy due to Q String parsing. I just found the why and more knowledgeable people solved the issue :D

[14:29] <tyil> notagoodidea++

[14:29] <tyil> something to add into next week's rakudo weekly :>

[14:30] <notagoodidea> guifa2: It was more about the options/flag localized. That you could use --files (en) or --fichiers (fr) and the parser get the right options/flag modulo the existence of those words in the corpus.

[14:31] <SmokeMachine> xinming: .grep (|) .grep?

[14:31] <notagoodidea> tyil: :D If it is integrate to skylighting before end of the week, I will tell you. When it happends, raku will be supported by further version of pandoc/neuron.

[14:32] <guifa2> notagoodidea: Ah.  You might find Fluent to have some better solutions there (that's my next target for rewriting after finishing up some CLDR work).  It's Mozilla's localization framework.  It's currently mostly usable in Raku, but I can do much better now

[14:33] *** cosimo joined
[14:33] *** sena_kun joined
[14:34] *** Sgeo joined
[14:35] *** mowcat joined
[14:35] <notagoodidea> guifa2: Neat, even if right now, I am not confident to use a research project from Mozilla as they are dropped every six months (used to use Send, Notes, etc. and *poof* gone).

[14:37] *** sno joined
[14:38] <guifa2> Heh fair.  But since fluent is an internal framework (really, at its core, it's just a file type description) it doesn't require any long-term support from them :-) 

[14:48] <xinming> SmokeMachine: Something like that, But the (|) union is different from a `where ... OR ... `

[14:48] <SmokeMachine> xinming: yes, it is...

[14:52] <xinming> SmokeMachine: We need someway to add a top-or condition, instead of .grep only.

[14:59] * [Coke] yawns.

[15:00] <tyil> .tell brass if you still want to look into mac builds of rakudo star, you might be able to get some automated builds working with github actions, I just made it work (I think?) for GNU+Linux tarballs

[15:00] <tellable6> tyil, I'll pass your message to brass

[15:05] *** tejr joined
[15:05] *** xelxebar joined
[15:14] *** ggoebel left
[15:15] <SmokeMachine> xinming: With Red, I usually think the opposite... having this Raku's syntax, what should be the generated SQL to replicate Raku's behaviour

[15:17] <SmokeMachine> xinming: how would you do, with raku, grep a list by something OR something else... the best way I see would be: @list.grep: { .&cond1 || .&cond2 }

[15:18] <SmokeMachine> xinming: it's being hard to find another way...

[15:20] <cog> Is there a raku routine which prints the printable glyphs for control chars ?

[15:21] <cog> ... in a string

[15:22] <SmokeMachine> xinming: something that could be done is: for `$a.grep(&cond1) (|) $b.grep(&cond2)` when `$a eqv $b` optimise to `$a.grep: { .&cond1 || .&cond2 }`

[15:25] *** notagoodidea left
[15:25] <xinming> SmokeMachine: the problem with that approach is, we can't build search conditions based on "conditions"

[15:25] <SmokeMachine> xinming: maybe, that way you could do something like: `my $a = Model.^all.grep: &cond1; ...; my $or = $a (|) $a.parent.grep: &cond2`

[15:25] <guifa2> cog: not a premade one, but you could do it fairly easy using Str.trans

[15:26] <cog> Thx guifa2 

[15:26] <SmokeMachine> xinming: sorry, what do you mean by `we can't build search conditions based on "conditions"`

[15:26] <SmokeMachine> ?

[15:26] *** guifa2 left
[15:34] *** ggoebel joined
[15:39] *** mowcat left
[15:39] *** notagoodidea joined
[16:04] *** parabolize joined
[16:19] *** _jrjsmrtn joined
[16:29] <tony-o> .tell patrickb merged the config stuff into fez

[16:29] <tellable6> tony-o, I'll pass your message to patrickb

[17:02] *** jmerelo joined
[17:02] <jmerelo> .tell tyil maybe you should post the instructions to build FreeBSD somewhere. I couldn't pull it off.

[17:02] <tellable6> jmerelo, I'll pass your message to tyil

[17:04] <tyil> jmerelo: I just used `rstar fetch && rstar install`, though that's been a couple months ago

[17:04] <tyil> maybe one of the projects changed something that broke this

[17:04] <tyil> also, I dont seem to be installing gmake for freebsd in my build instructions

[17:04] *** sortiz joined
[17:05] <jmerelo> The compilation I'm attempting breaks with "Device not configured" which apparently has nothing to do with compilation, but with using sshfs

[17:05] <SmokeMachine> xinming: ???

[17:05] <jmerelo> This is the log https://github.com/raku-community-modules/LWP-Simple/actions/runs/465898571

[17:05] <tyil> interesting

[17:06] <tyil> I'm not well versed in github actions, but I'm guessing you can't use something else than sshfs then

[17:07] <jmerelo> tyil: I really have no idea. Here's the action, it should be pretty straightforward to understand https://github.com/raku-community-modules/LWP-Simple/blob/1981292257918e9d0e52995c47edf59f1959482c/.github/workflows/freebsd.yaml

[17:09] <jmerelo> tyil: it sets up a freebsd vm, which is connected to the MacOSx port via sshfs. I have no idea why it breaks down after a while. Anyway, if you manage to package it for FreeBSD this could be use to run FreeBSD tests where they're needed.

[17:09] <tony-o> jmerelo: sent you a pm

[17:09] <tellable6> 2021-01-06T10:32:53Z #raku-dev <patrickb> tony-o Did you know JRaspass and JJAtria[m] are working on a pure-Raku modules.raku.org replacement? You should probably start a conversation on how to best integrate the fez ecosystem.

[17:09] <jmerelo> Or maybe we can set up something in SourceHut, I have no idea how it works.

[17:09] <jmerelo> tony-o: gotcha

[17:10] <tony-o> JRaspass: jjatria - i have some ideas about that if you guys want to chat.

[17:11] <JJAtria[m]> tony-o Sure :D 

[17:11] <JRaspass> ditto

[17:13] <JJAtria[m]> Just in case: I'm going to be afk for a bit in a bit, but I should be back in about an hour or so

[17:13] *** bdju joined
[17:13] <tony-o> what stage are you in?  do you have a roadmap?

[17:14] <JRaspass> for the site? there's an unordered list of things to do on the README.md called a roadmap :-P

[17:14] <tony-o> what's the project link?

[17:15] <JRaspass> https://gitlab.com/raku-land/raku-land

[17:16] <tony-o> can we add the zef ecosystem to that roadmap?

[17:17] <JRaspass> sure, patches welcome ;-)

[17:19] <tony-o> just requested access as `tony-o` 

[17:19] *** jess left
[17:20] <tyil> jmerelo: looking at my latest freebsd build (4 hours ago), it should still work, so I'm going to guess this is purely an issue with that freebsd vm setup (https://builds.sr.ht/~tyil/job/388507)

[17:20] <JRaspass> approved

[17:21] <jmerelo> tyil: how can that be used?

[17:21] <tyil> jmerelo: the build itself?

[17:21] <tony-o> thanks

[17:21] <jmerelo> right

[17:22] <tyil> jmerelo: download https://dist.tyil.nl/tmp/rakudo-star-amd64-fbsd-23807a36a0815ff979e58bf7faeac5fb8dfdd0f5.tar.gz, and extract it to /usr/local (or any other place you want to install it)

[17:29] *** stoned75 left
[17:29] <jmerelo> tyil++

[17:36] *** mowcat joined
[17:38] *** squashable6 left
[17:41] *** Altai-man joined
[17:41] *** ufobat joined
[17:42] *** squashable6 joined
[17:43] *** sena_kun left
[18:03] *** domidumont left
[18:13] *** wamba left
[18:22] *** stoned75 joined
[18:25] *** ufobat left
[18:29] *** notagoodidea left
[18:42] *** notagoodidea joined
[18:44] <notagoodidea> tyil: The new raku definition have been merged in skylighting (https://github.com/jgm/skylighting/issues/114) :D

[18:44] <tyil> notagoodidea: awesome!

[18:45] *** Xliff left
[18:46] *** Doc_Holliwood joined
[18:48] *** wamba joined
[18:53] <jmerelo> notagoodidea++

[19:10] <Geth> ¦ doc: 5b3407028c | (Stoned Elipot)++ | doc/Type/ValueObjAt.pod6

[19:10] <Geth> ¦ doc: Typography tweak

[19:10] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/5b3407028c

[19:10] <linkable6> Link: https://docs.raku.org/type/ValueObjAt

[19:18] *** Black_Ribbon joined
[19:23] *** Doc_Holliwood left
[19:24] <stoned75> m: releases my %m is Map = a => 42; say %m.WHICH, ' ', %m.WHICH.^name;

[19:24] <camelia> rakudo-moar 4d40e23e0: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    releases used at line 1. Did you mean 'reverse', 'repeated'?␤␤»

[19:25] <stoned75> commit: releases my %m is Map = a => 42; say %m.WHICH, ' ', %m.WHICH.^name;

[19:25] <moon-child> what's the difference between my %m is Map and my Map %m?

[19:25] <committable6> stoned75, https://gist.github.com/27dd1813076ed5f291ffdd6571637487

[19:26] <stoned75> m: my Map %h; say %h.^name

[19:26] <camelia> rakudo-moar 4d40e23e0: OUTPUT: «Hash[Map]␤»

[19:26] <stoned75> m: my  %m is Map; say %m.^name

[19:26] <camelia> rakudo-moar 4d40e23e0: OUTPUT: «Map␤»

[19:27] <stoned75> not the same type at all :)

[19:28] *** Doc_Holliwood joined
[19:30] <stoned75> %h here is a Hash of Map while %m is a Map

[19:32] <stoned75> hum... the evolution seen in https://gist.github.com/Whateverable/27dd1813076ed5f291ffdd6571637487 is ... interesting

[19:44] <moon-child> stoned75: right

[19:45] *** aluaces left
[19:46] *** aluaces joined
[19:46] *** jmerelo left
[19:54] *** JRaspass left
[20:03] <tony-o> JJAtria[m]: what exactly is the bin/fetch mentioned in the README? i see the bin/(git|cpan) - are those being called via some cron?

[20:03] <tony-o> .tell melezhik the issue on fez should be moot in the next couple of weeks

[20:03] <tellable6> tony-o, I'll pass your message to melezhik

[20:04] <JJAtria[m]> tony-o I think that was renamed to 'parse' on https://gitlab.com/raku-land/raku-land/-/commit/dbeddef7106608203e855ac98583d7880eacb7bb

[20:04] <JJAtria[m]> The documentation seems to be a bit out of date :P 

[20:05] *** stoned75 left
[20:06] <JJAtria[m]> The scripts in `bin` are mostly orchestrated by `bin/ingest`, which is run from the Makefile

[20:06] *** sxmx joined
[20:07] <tony-o> gotcha - is that container just hotswapped upon being built then?

[20:08] <JJAtria[m]> JRaspass would know the specifics about what exactly runs `make ingest`, which runs the process in the deployment box

[20:08] <JJAtria[m]> I don't think this process requires it to be rebuilt, actually

[20:09] <JJAtria[m]> It just re-creates the entire dataset in the DB in a transaction

[20:09] *** v_m_v joined
[20:10] <JJAtria[m]> But as far as I understand that's talking to the DB, not the container running the site

[20:16] <tony-o> sounds good - i can work with that ty

[20:16] <tony-o> i'll submit a patch for p6c and zef

[20:25] <[Coke]> So, OT, but, as a US citizen... WTAF.

[20:25] <El_Che> [Coke]: :/

[20:25] <tadzik> yeah, surreal

[20:26] <El_Che> [Coke]: I have seen the hand in the US supporting scenes like that in Latin America, but let me tell you, I have no schadenfreude at all. I hope democracy is not  too badly damaged.

[20:27] <El_Che> it reads like a bad scenario. Trump is even bad at coups

[20:29] <El_Che> Seeing on how well armed are police, national guard, etc, I would expected rioters get into the senate floor

[20:29] <El_Che> wow

[20:29] *** melezhik joined
[20:30] <melezhik> I spin up a Sparky CI server for dog fooding , if someone wants to play with - http://161.35.142.50/ cc tib

[20:30] <tellable6> 2021-01-06T20:03:47Z #raku <tony-o> melezhik the issue on fez should be moot in the next couple of weeks

[20:36] <tony-o> coup is kind of a stretch

[20:40] <tony-o> not that i disagree with the rest of the WTAF sentiment

[20:43] <El_Che> it doesn't have to be a succesful coup to be a coup

[20:44] <El_Che> there was a similar failed coup in Venezuela last year

[20:44] <El_Che> pretty identical scenario

[20:45] <timotimo> it's not a coup if the military isn't involved

[20:46] <El_Che> it's a coup if the military stays mostly out

[20:46] <El_Che> that's was the original scenario in Bolivia

[20:47] *** sjm_uk left
[20:47] <El_Che> (the military had to step in later because the coup leaders weren't popular at all)

[20:47] <timotimo> oh?

[20:47] <timotimo> i guess that's a good point

[20:47] <El_Che> it's was very innovative :)

[20:47] <timotimo> if the military just shrugs from the sideline, you can't really say they are "not involved"

[20:47] <El_Che> well, sone of that is maybe here in play

[20:48] <El_Che> where is the National Guard? 

[20:48] <El_Che> how does a smallish number of protesters get into the Senate?

[20:48] <El_Che> probably the best secured place next to the White House

[20:49] <El_Che> let's hope it's just a farce of an attempt of Trump to poison the well while he leaves

[20:54] <sortiz> El_Che, The request by DC officials to deploy de NG was denied by the Defense Department.

[20:54] <El_Che> yeah, pretty WTF

[20:55] <[Coke]> WaPo has an update on that, they are deploying.

[20:56] <[Coke]> there's a lot of churn right now in the news 

[20:56] <El_Che> I hate to see boots on the streets, but this looks warranted

[20:56] <[Coke]> (washington post)

[20:57] <El_Che> Remember the Senate elections in Georgia? Good times.

[20:57] <El_Che> It sounds like ages ago :/

[20:58] <sortiz> They are deploying at Trump request?!

[20:58] <[Coke]> https://www.washingtonpost.com/dc-md-va/2021/01/06/dc-protests-trump-rally-live-updates/#link-TUWTETLEN5AEFG5VHC357IIUEM

[20:58] <El_Che> if you wonder how the protestor got so fast inside the Senate: https://twitter.com/bubbaprog/status/1346920198461419520?s=20

[21:00] <El_Che> https://twitter.com/FridaGhitis/status/1346923180473114624?s=20

[21:00] <El_Che> Improvised explosive device found in the Capitol: NBC

[21:12] *** v_m_v left
[21:12] *** mowcat left
[21:21] *** notagoodidea left
[21:22] *** stoned75 joined
[21:42] *** sena_kun joined
[21:44] *** Altai-man left
[21:46] *** wamba left
[21:48] *** kensanata joined
[21:52] *** ggoebel left
[21:56] *** samcv joined
[21:57] *** aindilis` joined
[21:59] *** mowcat joined
[22:05] *** melezhik left
[22:08] *** melezhik joined
[22:09] *** Xliff joined
[22:10] <Xliff> How can I get Cro::WebApps::Template to use a literal string as its template?

[22:20] <moritz> Xliff: https://github.com/croservices/cro-webapp/blob/master/lib/Cro/WebApp/Template/Repository.pm6#L63 seems to be the answer

[22:21] <moritz> $source is the template string

[22:21] <Xliff> Yeah. I am working through that now. Was hoping I wouldn't have to roll my own.

[22:21] *** sena_kun left
[22:21] <Xliff> When I test this, I may have to formalize it for a non-file and submit a PR.

[22:26] <timotimo> "D.C. Police Lose Control Of Rioting Trump Supporters After Hundreds Of Officers Called Away To Deal With Black Jaywalker"

[22:26] <timotimo> https://www.theonion.com/d-c-police-lose-control-of-rioting-trump-supporters-af-1846002738

[22:28] <El_Che> lol

[22:37] *** ggoebel joined
[22:43] *** jess joined
[22:43] <Xliff> timotimo: Yes. I'm living that. Right now.

[22:43] <Xliff> I'm also black. And I jaywalk.

[22:43] <Xliff> So DCPD scurs me.

[22:44] <Xliff> Also... is it known that raku will choke on symlinks?

[22:44] <lizmat> it does ?

[22:45] <El_Che> Xliff: you're Washiington DC based if I remember corrctly?

[22:45] * lizmat wishes Xliff strength in the coming night of curfew

[22:51] <perryprog> Xliff, stay safe <3

[22:53] <tony-o> JJAtria[m]: submitted a mr for review for zef&p6c on raku.land

[22:53] *** aluaces left
[22:56] <gfldex> Thinking about The Situation In General, I just realised how much Raku helped me to stay sane lately.

[22:57] *** oddp joined
[22:58] <JJAtria[m]> tony-o++

[23:01] <Xliff> lizmat: Yes. If the file being compiled is a symlink, it gives a remarkable bit of LTA.

[23:01] <Xliff> Can you check to confirm that on your end?

[23:02] *** melezhik left
[23:02] <Xliff> Thanks all for the safe wishes. I am in mah house in lockdown with plenty of beer.

[23:02] <lizmat> sure... if you tell me what to check

[23:07] <lizmat> Xliff: do you have a gist ?

[23:09] *** aindilis` left
[23:10] *** aindilis joined
[23:11] <Xliff> lizmat: No impossible to gist.

[23:11] *** ggoebel left
[23:11] <Xliff> Create a raku file. Symlink it to another location. Try to run raku on the symlinked file.

[23:14] <timotimo> Xliff: i likewise wish you strength, all of this is very fucked, and has been for a long, long time

[23:14] <Xliff> timotimo++ : thanks

[23:16] <lizmat> Xliff: should it be in a different dir ?

[23:17] <lizmat> Xliff: cannot reproduce on MacOS Mojave

[23:17] *** oddp left
[23:17] <Xliff> lizmat: OK, thanks.

[23:18] <Xliff> If I can confirm it again with concise reproduction steps, I'll bug it.

[23:18] <sortiz> Xliff: Also I can't reproduce on Linux (Fedora 33)

[23:18] <Xliff> sortiz++

[23:19] <Xliff> sortiz: Are you on  v2020.12-32-g8150a2864?

[23:20] *** perry joined
[23:20] <sortiz> Yep, moar-blead.

[23:22] *** kensanata left
[23:22] * lizmat also

[23:22] <sortiz> Your symlinked file 'use' something relative?

[23:24] *** melezhik joined
[23:25] <melezhik> tony-o I found another issue with fez installation - http://161.35.142.50/report/fez-test/24 , I filled it to fez-GH

[23:26] <tony-o> melezhik: just responded to it

[23:26] <melezhik> tony-o ++

[23:29] <tony-o> try a `zef update` and give it another go

[23:31] <melezhik> yeah

[23:32] *** squashable6 left
[23:32] *** squashable6 joined
[23:32] <melezhik> did not help, the same error ))-

[23:35] <Xliff> moritz: Um. -Ilib was specified, where the compunits in lib/ were symlinked

[23:36] <melezhik> tony-o interesting ... -  https://gist.github.com/melezhik/2bfea47bdb6cd7b86246d77f0d227eeb

[23:36] <melezhik> it happens immediately after successful install , really weird 

[23:37] <Xliff> https://gist.github.com/Xliff/23d83c2ddcfc69aae26f33c572caa87d

[23:49] *** JRaspass joined
[23:54] <melezhik> tony-o I created a SCM triggering CI on fez - http://161.35.142.50/project/fez-test if you're interested ... :-))

