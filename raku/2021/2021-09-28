[00:03] *** reportable6 left
[00:04] *** juanfra joined
[00:04] *** demostanis[m] joined
[00:07] *** cnx joined
[00:41] *** squashable6 left
[00:42] *** squashable6 joined
[00:59] *** Xliff left
[01:04] *** reportable6 joined
[01:42] <codesections> can anyone explain this little boolean riddle? 

[01:42] <codesections> m: say ?Any; say Any && False

[01:42] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´False‚ê§(Any)‚ê§¬ª

[01:43] <codesections> er, that's not what I meant

[01:45] <codesections> nevermind, I took something out of context.  Specifically, out of the boolean context I thought it was in

[02:02] <[Coke]> .seen dwarring

[02:02] <tellable6> [Coke], I saw dwarring 2021-08-30T01:29:34Z in #raku: <dwarring> @pisa not sure

[02:03] <[Coke]> .ask dwarring can you golf https://gist.github.com/coke/1941961de1897cd3e8b0f2a4ffee7b61? It's the last blocker to merge new-disp branch on rakudo, and there is a LOT going on under the hood there.

[02:03] <tellable6> [Coke], I'll pass your message to dwarring

[02:04] *** linkable6 left
[02:04] *** evalable6 left
[02:06] *** evalable6 joined
[02:07] *** linkable6 joined
[02:43] *** frost joined
[03:43] *** linkable6 left
[03:43] *** evalable6 left
[03:44] *** linkable6 joined
[03:44] *** evalable6 joined
[04:23] *** cheskidov joined
[04:24] *** cheskidov left
[04:54] *** frost left
[05:10] *** Eddward left
[05:42] *** immediate joined
[05:53] *** Xliff joined
[06:02] *** reportable6 left
[06:03] *** reportable6 joined
[07:03] *** linkable6 left
[07:03] *** evalable6 left
[07:04] *** linkable6 joined
[07:38] *** immediate left
[07:48] *** immediate joined
[07:51] *** immediate left
[07:52] *** immediate joined
[07:57] *** immediate left
[07:58] *** immediate joined
[08:01] *** Sgeo left
[08:05] *** evalable6 joined
[08:09] *** frost joined
[08:10] *** frost left
[08:14] *** dakkar joined
[08:18] *** frost joined
[08:18] *** very joined
[08:20] <very> hello `combinations` function has `$of` parameter but `permutations` doesn't. How can I find (n, k) permutations? I couldn't install Math::Libsgl::Permutation on windows

[08:21] <dakkar> very: I'm pretty sure that you're looking for something different that `permutations`

[08:21] <dakkar> "permutations" are (more or less) the different ways of ordering elements in a list

[08:22] <dakkar> m:(1..3).permutations.say

[08:22] <very> dakkar: Python has itertools.permutations I'm looking for the same thing

[08:22] <evalable6> dakkar, rakudo-moar ba15173fd: OUTPUT: ¬´((1 2 3) (1 3 2) (2 1 3) (2 3 1) (3 1 2) (3 2 1))‚ê§¬ª

[08:22] <very> https://docs.python.org/3/library/itertools.html#itertools.permutations

[08:23] <very> it has an `r` parameter

[08:23] <dakkar> uh‚Ä¶ that's a strange name for a thing that is *not* generating permutations

[08:23] <moon-child> ^

[08:23] <cnx> iirc in the nPr notation P stands for permutation

[08:24] <moon-child> looks like it's effectively x.cominations($of)).map(&permutations)

[08:25] <moon-child> cnx: or 'pick' (where nCr is 'choose')

[08:25] <cnx> well i could be wrong

[08:28] <very> moon-child thanks for it, then I go for `@a.combinations($of).map(*.permutations.Slip).sort`

[08:28] <dakkar> aah, I was trying to figure out that `.Slip`

[08:29] <very> which seems more inefficient than a built-in `permuations($of)` but I guess there are reasons for not including it

[08:31] <dakkar> very: it would perform exactly the same operations‚Ä¶ built-ins are not always magical ‚ò∫

[08:32] <very> but faster, I meant

[08:32] <dakkar> not necessarily

[08:32] <very> okay then

[08:32] <very> but there is sort at the end?

[08:33] <very> direct implementation wouldn't have that I believe

[08:33] <lizmat> if a builtin is not the fastest, it needs to be fixed  :-)

[08:36] *** dakkar left
[08:36] <moon-child> recently on a trivial benchmark (file reading) raku was 10x faster than common lisp.  Was because the cl implementation was doing something stupid, but still nice to see!

[08:36] <moon-child> then again, dispatch in raku is still 100x slower than cl.  ¬Ø\_(„ÉÑ)_/¬Ø

[08:37] *** dakkar joined
[08:48] *** very left
[08:49] *** frost63 joined
[08:52] *** frost left
[08:52] *** frost63 left
[09:03] *** Manifest0 left
[09:05] *** Manifest0 joined
[09:06] *** jmcgnh left
[09:18] *** jmcgnh joined
[09:19] *** immediate left
[09:29] <moritz> does CL do multi dispatch?

[09:29] <moon-child> yes

[09:30] <moon-child> thought not with arbitrary predicates

[09:34] *** immediate joined
[09:36] *** spacekookie left
[09:38] *** spacekookie joined
[09:48] <discord-raku-bot> <Nemokosch#9980> CL is kinda famous for multi dispatch, isn't it

[09:50] * lizmat clickbaits https://rakudoweekly.blog/2021/09/27/2021-39-programming-haku/

[10:28] *** frost joined
[10:49] *** jjido joined
[10:55] *** jjido left
[11:13] *** squashable6 left
[11:16] *** squashable6 joined
[11:32] *** jjido joined
[11:38] *** immediate left
[11:39] *** immediate joined
[12:02] *** reportable6 left
[12:05] *** reportable6 joined
[12:12] *** jjido left
[12:45] *** frost left
[13:01] *** Eddward joined
[13:03] *** immediate left
[13:09] *** t3nj1n joined
[13:31] *** clarkema left
[13:42] *** whaaat joined
[13:43] <whaaat> is anyone here who can help me get started?

[13:44] <[Coke]> do you have a copy of raku yet?

[13:45] *** clarkema joined
[13:45] <clarkema> #freebsd

[13:45] <clarkema> sorry, mis-typed command

[13:54] *** bdju left
[13:55] *** bdju joined
[14:00] <whaaat> no

[14:00] <cnx> what OS are you on

[14:01] <whaaat> windows 10

[14:03] <[Coke]> You can build your own if adventurous, or there's an installer availale at https://rakudo.org/downloads

[14:03] <[Coke]> *available

[14:04] <whaaat> ok

[14:19] *** whaaat left
[14:50] *** jmcgnh left
[14:52] *** Sgeo joined
[14:54] <discord-raku-bot> <Anton Antonov#7232> "do you have a copy of raku yet?" -- Great "first time user" question !!!

[14:54] *** jmcgnh joined
[14:56] <[Coke]> ... is it too early for Halloween yard decorations? asking for a friend.

[14:56] <jdv> my wife says no

[14:57] <perryprog> yes

[14:57] <perryprog> literally not even October smh

[14:57] <jdv> october starts this week so i'd side with her

[14:58] <discord-raku-bot> <Nemokosch#9980> one months still seems a lot though

[14:58] <discord-raku-bot> <Nemokosch#9980> one month still seems a lot though

[15:00] <El_Che> it's always too early for Halloween decorations

[15:07] <jdv> looks like new-disp is about 5% slower on startup and 30% slower on core setting parse for me

[15:07] <jdv> uh, that's backwards

[15:08] <jdv> i meant 5% on parse and 30% on startup

[15:10] <discord-raku-bot> <Nemokosch#9980> what's new-disp?

[15:12] <[Coke]> new branch of rakudo/nqp/MoarVM that changes the dispatch model

[15:12] <jdv> this is the way

[15:13] <[Coke]> Should be transparent to users and (by next release) should be faster (and have more options for optimization)

[15:14] <jdv> iirc its been mentioned many times in the weekly

[15:17] <discord-raku-bot> <Nemokosch#9980> what ever "the weekly" is üòÖ I can vaguely recall something from the conference though

[15:17] <[Coke]> most new development has been on that branch, hope to merge it back to primary branch shortly.

[15:18] *** immediate joined
[15:18] <[Coke]> https://rakudoweekly.blog/

[15:18] <[Coke]> a weekly "newsletter"

[15:19] <discord-raku-bot> <Nemokosch#9980> oh interesting

[16:30] <Geth> ¬¶ doc/heredoc-output: 30b7bd6d43 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/quoting.pod6

[16:30] <Geth> ¬¶ doc/heredoc-output: Add output to "multiple heredoc" example

[16:30] <Geth> ¬¶ doc/heredoc-output: 

[16:30] <Geth> ¬¶ doc/heredoc-output: The docs previously stated that you can start multiple heredocs on a 

[16:30] <Geth> ¬¶ doc/heredoc-output: single line, but didn't neither said what effect that had nor showed the 

[16:30] <Geth> ¬¶ doc/heredoc-output: output in the accompanying example.

[16:30] <Geth> ¬¶ doc/heredoc-output: 

[16:30] <Geth> ¬¶ doc/heredoc-output: This commit adds both an explanation and example output.

[16:30] <Geth> ¬¶ doc/heredoc-output: review: https://github.com/Raku/doc/commit/30b7bd6d43

[16:31] <Geth> ¬¶ doc: codesections++ created pull request #3968: Add output to "multiple heredoc" example

[16:31] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3968

[16:37] *** dakkar left
[16:39] *** abraxxa left
[17:26] <Geth> ¬¶ doc/unordered-enums: 9eb11c966a | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/typesystem.pod6

[17:26] <Geth> ¬¶ doc/unordered-enums: Clarify that enum iteration is unordered

[17:26] <Geth> ¬¶ doc/unordered-enums: 

[17:26] <Geth> ¬¶ doc/unordered-enums: Because enums are Maps, they do not iterate in any defined order.

[17:26] <Geth> ¬¶ doc/unordered-enums: But the docs didn't mention this, and provided an example that suggested

[17:26] <Geth> ¬¶ doc/unordered-enums: ordered iteration.  This commit adds a note to that effect and updates the 

[17:26] <Geth> ¬¶ doc/unordered-enums: example

[17:26] <Geth> ¬¶ doc/unordered-enums: review: https://github.com/Raku/doc/commit/9eb11c966a

[17:26] <Geth> ¬¶ doc: codesections++ created pull request #3969: Clarify that enum iteration is unordered

[17:26] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3969

[17:39] *** linkable6 left
[17:39] *** evalable6 left
[17:41] *** evalable6 joined
[17:43] *** xinming left
[17:44] *** xinming joined
[17:45] *** patrickb joined
[18:03] *** reportable6 left
[18:04] *** MoC joined
[18:12] *** dwarring joined
[18:14] * dwarring building HTML::Canvas on new-disp branch

[18:14] <tellable6> 2021-09-28T02:03:57Z #raku <[Coke]> dwarring can you golf https://gist.github.com/coke/1941961de1897cd3e8b0f2a4ffee7b61? It's the last blocker to merge new-disp branch on rakudo, and there is a LOT going on under the hood there.

[18:14] <[Coke]> dwarring: it's fixed!

[18:14] <[Coke]> jnthn found a missing guard.

[18:14] <dwarring> awesome

[18:15] <dwarring> yes there is a lot going on there

[18:15] <dwarring> I'll yest it in a while to verify

[18:17] * dwarring test

[18:42] *** t3nj1n left
[18:43] *** t3nj1n joined
[18:43] *** t3nj1n_ joined
[18:43] *** t3nj1n_ left
[18:48] * dwarring HTML::Canvas tests now passing on new-disp

[19:04] <lizmat> whee!

[19:04] *** reportable6 joined
[19:11] *** dogbert17 left
[19:15] <sjn> Hey guys, what's considered the best way to install rakudo these days? I have my own Makefile that checks out stuff from git and builds it. Is rakudobrew still ok?

[19:15] *** dogbert17 joined
[19:16] <sjn> I see there is something called rakubrew.org

[19:16] <lizmat> sjn: I understand that's the recommended one nowadays

[19:17] <sjn> ah, cool

[19:22] <ugexe> rakudobrew became rakubrew

[19:35] *** MoC left
[19:42] *** linkable6 joined
[19:59] <Geth> ¬¶ doc: 30b7bd6d43 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/quoting.pod6

[19:59] <Geth> ¬¶ doc: Add output to "multiple heredoc" example

[19:59] <Geth> ¬¶ doc: 

[19:59] <Geth> ¬¶ doc: The docs previously stated that you can start multiple heredocs on a 

[19:59] <Geth> ¬¶ doc: single line, but didn't neither said what effect that had nor showed the 

[19:59] <Geth> ¬¶ doc: output in the accompanying example.

[19:59] <Geth> ¬¶ doc: 

[19:59] <Geth> ¬¶ doc: This commit adds both an explanation and example output.

[19:59] <linkable6> Link: https://docs.raku.org/language/quoting

[19:59] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/30b7bd6d43

[19:59] <Geth> ¬¶ doc: 2b58999697 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/quoting.pod6

[19:59] <Geth> ¬¶ doc: Merge pull request #3968 from Raku/heredoc-output

[19:59] <Geth> ¬¶ doc: 

[19:59] <Geth> ¬¶ doc: Add output to "multiple heredoc" example

[19:59] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/2b58999697

[20:06] *** patrickb left
[20:07] *** patrickb joined
[20:11] *** jjido joined
[20:19] *** immediate left
[20:34] *** patrickb left
[21:00] <Geth> ¬¶ doc/unordered-enums: cf3b74226a | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/typesystem.pod6

[21:00] <Geth> ¬¶ doc/unordered-enums: Correct statement re: cause of unordered iteration

[21:00] <Geth> ¬¶ doc/unordered-enums: 

[21:00] <Geth> ¬¶ doc/unordered-enums: My previous commit stated that `enum`s provide unordered iteration because they 

[21:00] <Geth> ¬¶ doc/unordered-enums: _are_ `Map`s.  That is incorrect.  `enum`s provide unordered iteration because the

[21:00] <Geth> ¬¶ doc/unordered-enums: relevant iteration methods _create_ a corresponding `Map` to iterate over.

[21:00] <Geth> ¬¶ doc/unordered-enums: 

[21:00] <Geth> ¬¶ doc/unordered-enums: This commit corrects that misstatement.

[21:00] <Geth> ¬¶ doc/unordered-enums: review: https://github.com/Raku/doc/commit/cf3b74226a

[21:34] *** linkable6 left
[21:34] *** evalable6 left
[21:35] *** linkable6 joined
[22:35] *** linkable6 left
[22:35] *** evalable6 joined
[22:37] *** jess joined
[22:44] <ugexe> codesections: i think one way to know if a react block is setup is to set a flag at the end of the react block

[22:45] <ugexe> not exactly elegant

[22:45] <ugexe> start  { react { whenever $supplier { say $_ }; $ready = True }; }

[22:45] <ugexe> await start { while not $ready { } };

[23:00] *** clarkema left
[23:04] *** xinming left
[23:06] *** xinming joined
[23:06] <jjido> ugexe I have no issue with that pattern. Looks fine

[23:35] *** linkable6 joined
[23:56] *** pierrot left
[23:57] *** pierrot joined
[23:58] *** grondilu left
[23:59] *** grondilu joined
