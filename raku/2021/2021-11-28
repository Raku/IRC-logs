[00:02] *** reportable6 left
[00:06] *** Arathorn joined
[00:09] *** jmcgnh joined
[00:23] *** monkey_ joined
[00:33] *** Skarsnik left
[00:47] *** lembark joined
[00:57] *** getimiskon left
[01:05] *** reportable6 joined
[01:55] *** monkey_ left
[02:18] *** [Coke] left
[02:19] *** [Coke] joined
[02:21] <SmokeMachine> m: use Test; my $*a = 42; react whenever Promise.in: 1 { await start { is $*a, 42 } } # should this work?
[02:21] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´not ok 1 - ‚ê§# Failed test at <tmp> line 1‚ê§# expected: '42'‚ê§#      got: (Failure)‚ê§¬ª
[02:22] <SmokeMachine> m: use Test; my $*a = 42; react whenever Promise.in: 1 { is $*a, 42 }
[02:22] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´ok 1 - ‚ê§¬ª
[02:23] <SmokeMachine> m: use Test; my $*a = 42; await start { is $*a, 42 }
[02:23] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´ok 1 - ‚ê§¬ª
[02:23] <SmokeMachine> why it's ok with whenever, it's on on a Promise but when doing both that breaks?
[02:28] <Voldenet> m: my $b; my $*a = 42; react whenever Promise.in: 1 { await start { $b = $*a } };
[02:29] <Voldenet> rip
[02:29] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´(timeout)¬ª
[02:30] <Voldenet> when you don't do this assignment, however
[02:30] <Voldenet> m: my $b; my $*a = 42; react whenever Promise.in: 1 { await start { } };
[02:30] <camelia> rakudo-moar d6817f088: ( no output )
[02:31] <SmokeMachine> m: my $*a = 42; react whenever Promise.in: 1 { await start { say $*a } };
[02:32] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´A react block:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Died because of the exception:‚ê§    An operation first awaited:‚ê§      in block  at <tmp> line 1‚ê§‚ê§    Died with the exception:‚ê§        Dynamic variable $*a not found‚ê§          in block ‚Ä¶¬ª
[02:32] <SmokeMachine> m: my $a = 42; react whenever Promise.in: 1 { await start { say $a } }; # not dyn
[02:32] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´42‚ê§¬ª
[02:39] <Voldenet> m: use Test; my $*a = 42; await start { await start { is $*a, 42 } };
[02:39] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´not ok 1 - ‚ê§# Failed test at <tmp> line 1‚ê§# expected: '42'‚ê§#      got: (Failure)‚ê§¬ª
[02:39] <Voldenet> m: use Test; my $*a = 42; await start { is $*a, 42 };
[02:39] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´ok 1 - ‚ê§¬ª
[02:41] <SmokeMachine> It seems a bug to me... does it seem a but to you, Voldenet ?
[02:42] <Voldenet> I bet it can be explained, but it doesn't seem fine at all
[02:51] <SmokeMachine> https://github.com/rakudo/rakudo/issues/4654
[03:19] *** evalable6 left
[03:19] *** linkable6 left
[03:21] *** linkable6 joined
[03:41] *** [Coke] left
[04:02] *** [Coke] joined
[04:02] <[Coke]> .
[04:10] <discord-raku-bot> <frost#6297> Hello all
[04:11] <discord-raku-bot> <frost#6297> The question is about zef, can I set DefaultCUR as a custom path in the config.json?
[04:21] *** evalable6 joined
[04:28] *** kjp left
[04:31] *** kjp joined
[05:31] *** bisectable6 left
[05:31] *** greppable6 left
[05:31] *** committable6 left
[05:31] *** reportable6 left
[05:31] *** sourceable6 left
[05:31] *** quotable6 left
[05:31] *** shareable6 left
[05:31] *** coverable6 left
[05:31] *** releasable6 left
[05:31] *** unicodable6 left
[05:31] *** squashable6 left
[05:31] *** statisfiable6 left
[05:31] *** tellable6 left
[05:31] *** benchable6 left
[05:31] *** nativecallable6 left
[05:31] *** linkable6 left
[05:31] *** notable6 left
[05:31] *** bloatable6 left
[05:31] *** evalable6 left
[05:32] *** releasable6 joined
[05:32] *** quotable6 joined
[05:32] *** tellable6 joined
[05:32] *** bloatable6 joined
[05:33] *** greppable6 joined
[05:33] *** linkable6 joined
[05:34] *** reportable6 joined
[05:34] *** notable6 joined
[05:34] *** benchable6 joined
[06:01] *** small_petit joined
[06:02] *** small_petit left
[06:02] *** reportable6 left
[06:12] *** dogbert12 joined
[06:32] *** nativecallable6 joined
[06:33] *** coverable6 joined
[06:34] *** shareable6 joined
[06:36] *** andrzejku joined
[07:03] *** reportable6 joined
[07:25] *** seednode left
[07:26] *** seednode joined
[07:29] *** Xliff joined
[07:33] *** sourceable6 joined
[07:34] *** committable6 joined
[08:30] *** Sgeo left
[08:33] *** evalable6 joined
[08:44] *** lizmat_ joined
[08:45] *** RakuIRCLogger left
[08:45] *** Geth left
[08:46] *** lizmat left
[09:33] *** bisectable6 joined
[09:34] *** squashable6 joined
[09:34] *** unicodable6 joined
[10:00] *** nebuchad` is now known as nebuchadnezzar
[10:08] *** andrzejku left
[10:22] <Voldenet> m: use Test; my $*a = 42; await start { await start { is $*a, 42 } };
[10:22] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´not ok 1 - ‚ê§# Failed test at <tmp> line 1‚ê§# expected: '42'‚ê§#      got: (Failure)‚ê§¬ª
[10:22] <Voldenet> m: $*SCHEDULER = CurrentThreadScheduler; use Test; my $*a = 42; await start { await start { is $*a, 42 } };
[10:22] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´ok 1 - ‚ê§¬ª
[10:34] *** statisfiable6 joined
[10:36] *** lizmat_ left
[10:36] *** TempIRCLogger joined
[10:42] *** Xliff_ joined
[10:43] <Xliff_> Here's a sample of what you can now do with Raku. Please note the full script for this example on the right.
[10:43] <Xliff_> https://vimeo.com/650780944
[10:43] <Xliff_> Thank YOU, #rakyu
[10:43] <Xliff_> :P # raku
[10:44] <Xliff_> https://github.com/Xliff/p6-GEGL
[10:46] <timo> "Video is not rated. Log in to watch." :\
[10:47] <timo> vimeo forgot what video i wanted to watch when i created an account with "sign in with google"
[10:48] <Xliff_> LOL
[10:48] <Xliff_> Let me see if I can rate it.
[10:49] <timo> the slow / abrupt movement of the grid makes it look like it's stuttering :D
[10:50] <Xliff_> Yeah. Interpolation is float, but the property is int.
[10:52] <timo> just hvae the grid twice and fade opacity between one step and the next perhaps :D
[10:52] <Xliff_> Perhaps. That is a whole different level of complexity.
[10:52] <Xliff_> Probably be easier to modify gegl:grid to use a float.
[10:53] <Xliff_> Then again... probably not
[10:54] <timo> couldn't really read the code on the video, so no clue how gegl actually works
[10:56] <Xliff_> https://github.com/Xliff/p6-GEGL/blob/main/t/spiral.t
[10:56] <timo> ha, that wasn't there when last i looked :D
[10:58] <phogg> Should probably link to the source in the description (or a comment)
[11:06] <Xliff_> timo: Good idea. Busy fixing a snack. Will add that when I'm done.
[11:06] <Xliff_> You can get an operation list, here: https://gegl.org/operations/
[11:30] *** _Xliff joined
[11:31] <_Xliff> https://vimeo.com/650787185
[11:31] <_Xliff> This one is rated, so should be viewable without a login.
[11:38] <timo> the fractal zoomer is just a node implemented inside of gegl itself?
[11:40] <_Xliff> Yes.
[11:41] <_Xliff> Actually, it's a fully functional  explorer.
[11:41] <_Xliff> Have to work on getting better colors out of it, though.
[11:48] <timo> so gegl has a concept of user input as well?
[11:53] <_Xliff> Hmmm... what do you mean?
[11:55] <timo> like, i imagine a fully functional explorer you'd control with the mouse or something?
[11:55] <_Xliff> Yes. You can accomplish that using GTK.
[11:56] <_Xliff> There's a project out there called GEGL-Gtk. It's written for GTK2, but shouldn't be hard to convert to GTK3.
[11:56] <_Xliff> I'm pretty sure there's an easier route, though.
[11:56] <timo> ah, ok
[11:56] <_Xliff> It's all GLib
[11:57] <timo> how easy is it to hook a gegl renderer up to SDL's windowing and opengl/vulkan context management?
[11:57] <_Xliff> https://gitlab.gnome.org/GNOME/gegl-gtk
[11:57] <_Xliff> Don't know. Haven't looked that far yet. Project is only 10 days old. :)
[11:58] <_Xliff> https://gegl.org/operations/gegl-sdl2-display.html
[12:00] <timo> oh that's fun
[12:00] <_Xliff> =)
[12:00] <timo> looks like it takes control of the window completely or something like that?
[12:01] <_Xliff> Actually, I think it just controls the content. SDL still controls the window.
[12:01] <timo> right, i meant more like you can't pass something from SDL to use or get the thing from gegl to use your own sdl stuff with?
[12:01] <timo> not that important :)
[12:02] *** reportable6 left
[12:02] <_Xliff> Actually, you should be able tgo.
[12:03] <_Xliff> You'd use the SDL buffer as an input.
[12:04] <_Xliff> https://gegl.org/operations/gegl-load.html
[12:04] <_Xliff> https://gegl.org/operations/gegl-pixbuf.html
[12:05] <_Xliff> https://gegl.org/operations/gegl-buffer-source.html
[12:05] <_Xliff> So convert SDL buffer to one of those and you should be good.
[12:06] <_Xliff> Set your chain up to do processing in the middle and then output to gegl:sdl2-display
[12:06] <_Xliff> Yet another way to do user input, too.
[12:06] <_Xliff> Let SDL handle it. ;)
[12:07] <_Xliff> timo: Mind taking a gander at https://github.com/rakudo/rakudo/issues/4655?
[12:08] <_Xliff> nine is working on it, but more eyes couldn't hurt. That's the last thing killing the weekly timings since new-disp landed.
[12:08] <timo> don't really have the opportunity to try to reproduce it, but when nine catches it in the rr, i shall have a look or two
[12:09] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2021/11/28/leaky-rakudo/
[12:10] <timo> oh, gfldex, if you had zstd available at moarvm build time, you'll be using the newer heap snapshot format that's already compressed
[12:13] <timo> you can see which format it is from the first 16 bytes of the file
[12:16] <_Xliff> What is `rr`? Rakudo Repository?
[12:17] <timo> rr is mozilla's time traveling debugger / recorder and replay tool
[12:18] <timo> i've been the one who keeps shouting "have you tried rr" for perhaps a year or so :P
[12:27] <_Xliff> Huh. Is it easy to set up?
[12:37] <discord-raku-bot> <frost#6297> To be honest, I'm confused about the zef configüò´
[12:39] <discord-raku-bot> <frost#6297> in the README file, it said that the config.json in ¬†$*HOME/.zef/config.json will override the default config.json
[12:39] <discord-raku-bot> <frost#6297> Most cases
[12:40] <discord-raku-bot> <frost#6297> actually, that path is not working
[12:41] <discord-raku-bot> <frost#6297> The right path is $*HOME/.config/zef/config.json
[12:41] <Xliff> README might need updating.
[12:42] <Xliff> You'll have to ask ugexe about that.
[12:42] <discord-raku-bot> <frost#6297> Yeah
[12:42] <discord-raku-bot> <frost#6297> I think so
[12:42] <Xliff> weekly: https://vimeo.com/650780944, https://vimeo.com/650787185, http://github.com/p6-GEGL
[12:42] <notable6> Xliff, Noted! (weekly)
[12:43] <timo> if you don't run into any trouble, it's trivial to set up
[12:43] <timo> `rr record raku -e 'say "hi"'`, then `rr replay`
[12:43] <timo> you land in a regular old gdb but now commands like "reverse-step", "reverse-continue" etc work
[12:44] <Xliff> Huh... OK
[12:44] <timo> also compatible with that browser-based gdb frontend, gdbgui i think it's called?
[13:00] <nine> timo: I think you've advertised rr a lot longer than just a year ;) And good thing you did that, too
[13:00] <timo> time is relative, especially when you rr
[13:01] *** MoC joined
[13:02] <gfldex> timo: Am I looking for "MoarHeapDumpv002"?
[13:04] <timo> ok that format will benefit from compression, and also be slower to load in the heap dump explorer
[13:17] *** MoC left
[13:18] *** Skarsnik joined
[14:03] *** andinus left
[14:05] *** reportable6 joined
[14:13] *** dextercd joined
[14:30] *** Xliff left
[14:46] *** Xliff joined
[14:53] *** _Xliff left
[15:08] <qorg11> will there ever be a fork() function in raku?
[15:09] <tbrowder> or goto  (pls)
[15:10] <tbrowder> ah, well, getting along without it so far  ;-D
[15:10] <qorg11> I don't usually use goto
[15:11] <tbrowder> i see need for it less and less since i don't have it. forgetting fortran was easy!
[15:20] <qorg11> Well, you can call fork() using NativeCall
[15:20] <qorg11> `sub fork( --> int32) is native("c",v6) {*}`
[15:23] <Skarsnik> hm, still no luck getting moar with debug symbols :(
[15:24] <Skarsnik> goto is useful (for me) to replace exception or when you have some clean up to do before exiting a function. The last part you can probably do with the LEAVE phaser or don't worry at all since you don't have to free memory
[15:29] <Xliff> Skarsnik: Are you using --moar-option="--debug" when you invoke Configuree.pl?
[15:29] <Xliff> s/eee/
[15:29] <Skarsnik> yes
[15:29] <Xliff> Huh.
[15:33] <Skarsnik> perl Configure.pl --gen-moar --moar-option='--optimize=0 --debug=3 -g' --gen-nqp --backends=moar --prefix=/home/skarsnik/raku/ && make && make install
[15:34] <ugexe> qorg11: there is nqp::fork() although unless you really know whats going on internally re threadpool, mutxes, etc you're going have a bad time
[15:43] <Xliff> Skarsnik: Try with just --debug
[15:44] <Skarsnik> I think that never rebuild moar actually
[15:44] <Xliff> Sounds about right.
[15:44] <Xliff> --force-rebuild
[15:44] <Xliff> ./Configure.pl --gen-moar --force-rebuild --moar-option="--debug" # Works for me.... ymv
[15:45] <Xliff> s/ymv/ymmv/
[15:51] <Skarsnik> aaah
[15:51] <Skarsnik> finall xD
[15:51] *** monkey_ joined
[15:54] <Skarsnik> https://gist.github.com/Skarsnik/611d0211fb95b94604a6277c430da149
[16:19] <nine> Skarsnik: What does `p *key` say?
[16:23] <Skarsnik> (gdb) p *key
[16:23] <Skarsnik> $1 = {common = {header = {sc_forward_u = {forwarder = 0x0, sc = {sc_idx = 0, idx = 0}, st = 0x0}, owner = 0,
[16:23] <Skarsnik>       flags1 = 0 '\000', flags2 = 0 '\000', size = 0}, st = 0x0}, body = {storage = {blob_32 = 0x0, blob_ascii = 0x0,
[16:23] <Skarsnik>       blob_8 = 0x0, strands = 0x0, any = 0x0}, storage_type = 0, num_strands = 0, num_graphs = 0,
[16:23] <Skarsnik>     cached_hash_code = 0}}
[16:24] <Skarsnik> (gdb)
[16:25] <Skarsnik> This code is annoying, it does not always merge everything :( (sometime it merge 1 struct and sometime 2}
[16:25] <Skarsnik> when it does not crash x)
[16:28] <nine> That's a lot of 0es for a string
[16:30] <Skarsnik> I think it try to use a deleted key (that why I need to test for ~~ Struct since I got Any when it's something I removed)
[16:32] *** monkey_ left
[16:36] <nine> That alone doesn't explain it. MoarVM is not allowed to segfault just because you're trying to access a deleted hash entry.
[16:38] <Skarsnik> I pushed the code on https://github.com/Skarsnik/gptrixie. I am using the  MQTTProperties.h from https://github.com/eclipse/paho.mqtt.c .Just run gptrixie like this for example gptrixie --structs --castxml=c99 tmp/paho.mqtt.c/src/MQTTProperties.h
[16:38] <Skarsnik> Time to do something else x)
[17:09] *** Xliff left
[17:30] *** Sgeo joined
[17:32] *** Xliff joined
[18:02] *** reportable6 left
[18:03] *** monkey_ joined
[18:05] *** reportable6 joined
[18:43] *** discord-raku-bot left
[19:03] *** Ergo444 joined
[19:03] <Ergo444> m: say now;say ^1000000 .race.grep(*.is-prime) .elems;say now
[19:03] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´Instant:1638126262.303614874‚ê§78498‚ê§Instant:1638126263.255051417‚ê§¬ª
[19:04] <Ergo444> m: say now;say ^1000000  .grep(*.is-prime) .elems;say now
[19:04] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´Instant:1638126281.673599486‚ê§78498‚ê§Instant:1638126282.05227383‚ê§¬ª
[19:04] <Ergo444> m: $t= now;say ^1000000  .grep(*.is-prime) .elems;say now-$t
[19:04] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$t' is not declared‚ê§at <tmp>:1‚ê§------> 3<BOL>7‚èè5$t= now;say ^1000000  .grep(*.is-prime) ‚ê§¬ª
[19:05] <Ergo444> m: my $t= now;say ^1000000  .grep(*.is-prime) .elems;say now-$t
[19:05] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    now used at line 1. Did you mean 'HOW', 'not'?‚ê§‚ê§¬ª
[19:05] <Ergo444> m: my $t= now();say ^1000000  .grep(*.is-prime) .elems;say now()-$t
[19:05] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    now used at line 1. Did you mean 'not', 'HOW'?‚ê§‚ê§¬ª
[19:06] <Ergo444> m: my $t= now.Int;say ^1000000  .grep(*.is-prime) .elems;say now.Int-$t
[19:06] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´78498‚ê§0‚ê§¬ª
[19:06] <Ergo444> m: my $t= now.Num;say ^1000000  .grep(*.is-prime) .elems;say now.Num-$t
[19:06] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´78498‚ê§0.3817102909088135‚ê§¬ª
[19:07] <Ergo444> m: my $t= now.Num;say ^1000000  .race .grep(*.is-prime) .elems;say now.Num-$t
[19:07] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´78498‚ê§0.6764755249023438‚ê§¬ª
[19:08] *** discord-raku-bot joined
[19:17] *** discord-raku-bot left
[19:17] *** discord-raku-bot joined
[19:22] *** discord-raku-bot left
[19:30] *** discord-raku-bot joined
[19:40] <gfldex> m: say ^1000000  .race .grep(*.is-prime) .elems; say now - BEGIN now;
[19:40] <camelia> rakudo-moar d6817f088: OUTPUT: ¬´78498‚ê§0.893027857‚ê§¬ª
[19:41] <gfldex> Ergo444: ^^^ we got phasers for that
[20:23] *** Xliff_ left
[20:26] *** A26F64 joined
[20:47] <xinming> releasable6: status
[20:47] <releasable6> xinming, Next release in ‚âà5 days and ‚âà22 hours. 4 blockers. Changelog for this release was not started yet
[20:47] <releasable6> xinming, Details: https://gist.github.com/e83d7e1f4be2e33b2e7fe6418dc02eb0
[21:22] *** patrickb joined
[21:22] *** monkey_ left
[21:23] <patrickb> qorg11: There is a blog post about Form in Rakudo: http://brrt-to-the-future.blogspot.com/2018/10/a-future-for-fork2.html?m=1
[21:23] <tellable6> 2021-11-27T03:43:46Z #raku-dev <andinus> patrickb: ah i see, then i should be able to manage releases after this december's release
[21:26] *** patrickb left
[21:42] *** A26F64 left
[21:43] *** patrickb joined
[21:43] *** patrickb left
[22:03] <SmokeMachine> Are there still available slots for the advent calendar?
[22:06] <[Coke]> https://github.com/Raku/advent/blob/master/raku-advent-2021/authors.md
[22:06] <[Coke]> Looks like, yes.
[22:06] <[Coke]> I can add an entry for you if you like.
[22:16] <SmokeMachine> I‚Äôm still not sure if I‚Äôll have enough time to finish my post‚Ä¶ :(
[22:25] <[Coke]> I will add you as a potential-don't-count-on-me so someone can find you later to ask, OK?
[22:26] <[Coke]> ... nevermind, that's too much pressure.
[22:39] <japhb> Xliff: You probably figured this out in the ensuing two days, but if not ... For the Mandelbrot coordinates I posted, I believe to convert for the GEGL explorer: real -> x, imaginary -> y
[22:43] *** evalable6 left
[22:43] *** linkable6 left
[22:44] <SmokeMachine> [Coke]: I think I‚Äôm almost finishing it‚Ä¶ but I‚Äôll really need someone to review/price read it‚Ä¶ my English is already not good and I‚Äôm writing that on my cellphone. So it will probably be even worse‚Ä¶
[22:44] *** evalable6 joined
[22:46] <gfldex> SmokeMachine: Neither is my English. Yet, I never got hurt by hitting the publish button. They make those from extra soft rubber. :)
[22:48] <gfldex> I would go so far to say: A good post in bad English is better then a bad post is good English.
[22:52] <SmokeMachine> What about a bad post in bad English?
[22:57] <timo> if you abandon your post i will have your cord mashalled
[23:04] <moon-child> SmokeMachine: only way to make anything better is practice
[23:04] <moon-child> if you make a bad post in bad english, the next post you write will be better and better written
[23:06] <SmokeMachine> I‚Äôve already done 2 other bad posts in bad English for advent calendar‚Ä¶ this one should be going a bit better‚Ä¶ but it seems not to be the case‚Ä¶ :(
[23:22] *** Ergo444 left
[23:22] <SmokeMachine> I think it‚Äôs done‚Ä¶ would someone one like to review/prof read?
[23:23] *** djerius left
[23:24] *** djerius joined
[23:37] <Xliff> japhb: Did you try it out?
[23:46] *** linkable6 joined
[23:54] *** Skarsnik left
[23:57] *** monkey_ joined
