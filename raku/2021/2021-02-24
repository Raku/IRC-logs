[00:15] *** m_athias left
[00:22] *** m_athias joined
[00:30] *** JRaspass left
[00:32] *** pecastro left
[00:39] <gfldex> .seen raiph

[00:39] <tellable6> gfldex, I saw raiph 2021-02-22T00:18:21Z in #raku: <raiph> SmokeMachine: goodnight; I hope you dream of throwing dictionaries through hoops :)

[00:40] <gfldex> .tell raiph we don't need to wait for RakuAST. see: https://gist.github.com/79ac4c5505086b37bf42affac89084db

[00:41] <tellable6> gfldex, I'll pass your message to raiph

[00:41] <gfldex> also functional > OO

[00:41] <gfldex> :)

[00:47] *** peteretep_ left
[00:51] *** clarjon1 left
[00:52] *** clarjon1 joined
[00:56] *** neshpion left
[01:09] <guifa2> "Unable to allocate an array of 18446744073709551612 elements… " <--- weak Raku, weak.  (kidding, somehow I borked the XML module )

[01:09] *** linkable6 left
[01:11] *** linkable6 joined
[01:15] *** mowcat left
[01:26] *** squashable6 left
[01:26] <codesections> Well, searching the Internet for 18446744073709551612 tells me that it's both one of the bests planets in No Man's Sky and a valid FedEx tracking number

[01:26] *** linkable6 left
[01:27] <codesections> so I guess Raku isn't up to storing all NMS planets in a single array 

[01:27] *** linkable6 joined
[01:28] <codesections> ...or whatever _really bad_ program design that would need an array with the length of a FedEx tracking number

[01:29] *** squashable6 joined
[01:29] <codesections> "I know, I'll just store the string 'invalid' or 'valid' at the array index of each tracking #"

[01:44] *** lucasb left
[02:08] *** JRaspass joined
[02:16] *** cj left
[02:16] *** cj joined
[02:17] *** pel left
[02:17] *** pel joined
[02:19] <moon-child> hmmm, is this a bug?

[02:19] <moon-child> m: my uint32 $x = -1; say $x; my uint64 $y = -1; say $y;

[02:19] <camelia> rakudo-moar 3235f3e42: OUTPUT: «4294967295␤-1␤»

[02:27] *** gnufr33dom joined
[02:42] *** edk_ joined
[02:43] *** JRaspass left
[02:44] *** dataangel left
[02:44] *** kvw_5_ joined
[02:48] *** kvw_5 left
[03:00] *** leont left
[03:06] <codesections> moon-child: do we just not *have* uint64s?  (which is a bug, of course)

[03:06] <codesections> m: my uint64 $i = 9223372036854775807; say $i + 1

[03:06] <camelia> rakudo-moar 3235f3e42: OUTPUT: «-9223372036854775808␤»

[03:06] <codesections> m: my int64 $i = 9223372036854775807; say $i + 1

[03:06] <camelia> rakudo-moar 3235f3e42: OUTPUT: «-9223372036854775808␤»

[03:32] <guifa2> codesections:  we do have them

[03:32] <guifa2> but I'd bet that -1 is getting boxed somehow

[03:32] <guifa2> it's VERY easy to switch out of native semantics

[03:36] <guifa2> hrm

[03:49] *** neshpion joined
[03:58] <guifa2> codesections: I'm actually trying to see how those are even compiled differently.  I just tried with uint8 (which properly wraps) and uint64, and the AST is identical, but it's not showing me all the options used

[04:12] *** japhb left
[04:16] *** aindilis joined
[04:17] *** xelxebar_ left
[04:18] *** japhb joined
[04:19] *** xelxebar joined
[04:23] <guifa2> codesections: whoa

[04:23] <guifa2> https://github.com/rakudo/rakudo/blame/029094282ce1f7ea032f08e85836daddd1a9e239/src/core.c/natives.pm6#L12

[04:23] <guifa2> Look at the gitblame

[04:28] *** kaiwulf left
[04:32] *** aindilis left
[04:34] *** aindilis joined
[05:02] *** samcv left
[05:03] *** samcv joined
[05:23] *** Garbanzo left
[05:24] *** Garbanzo joined
[05:35] *** neshpion left
[05:57] *** rindolf joined
[06:16] *** parabolize left
[06:33] *** brtastic joined
[06:38] *** jmcgnh left
[06:55] *** jmcgnh joined
[07:08] *** Garbanzo left
[07:16] *** guifa2 left
[07:23] *** brtastic left
[07:26] *** guifa2 joined
[07:28] *** Geth joined
[07:42] *** Sgeo left
[07:49] *** domidumont joined
[07:57] *** abraxxa joined
[07:59] *** guifa2 left
[08:01] *** wamba joined
[08:01] *** abraxxa left
[08:02] *** abraxxa joined
[08:30] *** stigo left
[08:40] *** leont joined
[08:42] *** dakkar joined
[08:47] *** Doc_Holliwood joined
[09:05] *** JRaspass joined
[09:14] *** pecastro joined
[09:24] *** aluaces left
[09:25] *** aluaces joined
[09:26] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2021/02/24/pattern-dispatch/

[09:36] *** mowcat joined
[09:44] *** edk_ is now known as e

[09:51] *** xinming left
[09:52] *** xinming joined
[10:04] *** cgfbee joined
[10:08] *** MasterDuke left
[10:22] *** MasterDuke joined
[11:04] *** gnufr33dom left
[11:05] *** berber44 left
[11:08] *** shlomif joined
[11:10] *** rindolf left
[11:11] *** shlomif is now known as rindolf

[11:29] *** MasterDuke left
[11:30] *** MasterDuke joined
[11:34] *** kerframil joined
[11:40] *** Doc_Holliwood left
[11:44] *** sena_kun left
[11:46] *** xinming left
[11:47] *** xinming joined
[11:53] *** mowcat left
[12:08] *** PimDaniel joined
[12:08] <PimDaniel> \o

[12:09] <PimDaniel> I'm trying to translate Python code and Python preserve hash key type , well say , at least String/Num.

[12:09] <PimDaniel> But Raku hash key is allways and Str. How could we do a workaround for this?

[12:11] <tyil> PimDaniel: do you want to mix int and str keys in a single hash?

[12:12] * PimDaniel tyil. I do not understand your question? Sorry i'm a few tired.

[12:12] *** xinming left
[12:12] *** xinming joined
[12:12] <tyil> https://docs.raku.org/language/hashmap#Non-string_keys_(object_hash)

[12:14] <tyil> PimDaniel: do you want to make all keys in a Hash of type Int, or do you want to be able to use both Int and Str keys in a single Hash?

[12:14] <PimDaniel> My entry hash is '%(john => [ 1,2,3] , june => [4,5,6]) or %(1 => [8,11,12], 4 => [6,9,2])

[12:15] <tyil> in that example, why would you need to keep the keys as Ints? I don't think anything would break by stringifying them

[12:15] <PimDaniel> which leads numbers key 1,4 to string : "1", "4"..., i look at your url, thank's.

[12:17] <PimDaniel> Good question: it is due to the algorithm that commutes keys to values (and the opposite) and compare them. And sometime this leads to a type mismatch.

[12:19] <PimDaniel> I should probably post the code but it is quite complex: you have 3 methods, a while(True) loop and and recursing method. The algorithm is Hopcropft and Karp bipartit graph.

[12:22] <PimDaniel> The problem is "probably" i should have to reconsider the problem from scratch with Raku.

[12:23] *** wamba left
[12:24] <PimDaniel> But since i discovered what is the problem and am close to achieve it, i try to find a solution.

[12:24] *** Black_Ribbon left
[12:36] *** sena_kun joined
[12:42] *** sxmx left
[12:45] *** _________ left
[12:45] *** _________ joined
[12:47] * PimDaniel tyil May be declaring hash my %h{Any} will make it? ...

[12:48] <tyil> potentially

[12:50] *** wamba joined
[12:51] <PimDaniel> Thank's for your help tyil! 

[12:51] <tyil> good luck

[12:55] *** sxmx joined
[12:58] *** PimDaniel left
[13:18] *** PimDaniel joined
[13:20] <PimDaniel> Pfff i don't even understand at all the sense of := vs = assignment. And such of all why and when should i use one or the orther. This is very confuse to me.

[13:23] *** JRaspass left
[13:40] *** jjmerelo left
[13:40] <PimDaniel> ok think it's just an object.

[13:40] <PimDaniel> kinda address.

[13:50] <lizmat> PimDaniel: in Raku, hashes by default will coerce their keys to Str

[13:51] <lizmat> but if you want to have a different types of keys, you can specify that

[13:52] <lizmat> m: my %oh{Any} = 42, "a", 666, "b"; say .WHAT for %oh.keys

[13:52] <camelia> rakudo-moar 3235f3e42: OUTPUT: «(Int)␤(Int)␤»

[13:52] <PimDaniel> True lizmat, i'm studing this.

[13:52] <lizmat> oki!

[13:53] <PimDaniel> I try to have an %h{Any} but i discover my problem else elsewhere.

[13:53] <PimDaniel> Confusion with hash and positionnals.

[13:54] <PimDaniel> when we write a => b, c => d; is it hash or positionnals?

[13:54] <PimDaniel> Raku is full of confusing concepts.

[13:54] <PimDaniel> and is not easier than Perl5 at all.

[13:55] <lizmat> Well, if you're coming from Perl, then you have a lot of false friends  :-)

[13:55] <PimDaniel> True!

[13:56] <PimDaniel> I think it's even better to comme from Python or PHP.

[13:56] <lizmat> ok, let's take this one step at a time

[13:56] <lizmat> my $b = a => 42

[13:56] <PimDaniel> hum...

[13:56] <lizmat> in that case, a => 42 is a Pair

[13:56] <lizmat> if you say:

[13:56] <PimDaniel> hum hum...

[13:56] <lizmat> if you say: my $l = a => 42, b => 666

[13:56] <lizmat> that's a List of Pairs

[13:57] <PimDaniel> ok

[13:57] <lizmat> note that in Raku, the comma is the List builder, **not** the parentheses

[13:57] <lizmat> if you say: my %h = a => 42, b => 666

[13:57] <lizmat> then you're initializing a hash with a List of Pairs

[13:58] <lizmat> the hash initializer will take a Pair as indicating a key and value to set

[13:58] <lizmat> but it will also take non-Pair values

[13:58] <lizmat> if you say: my %h = "a",42,"b",666

[13:59] <lizmat> then that would be the same, because the initializer will take alternating values to be key/value

[13:59] <lizmat> m: my %h = "a",42,"b"

[13:59] <camelia> rakudo-moar 3235f3e42: OUTPUT: «Odd number of elements found where hash initializer expected:␤Found 3 (implicit) elements:␤Last element seen: "b"␤  in block <unit> at <tmp> line 1␤␤»

[13:59] <PimDaniel> ok i understand this and this is what i observed.

[14:00] <PimDaniel> SO, suppose i want to initiate a hash{Str} with a constructor.

[14:01] <lizmat> so that would mean you would **only** accept Str as keys, and *not* have have any other types coerced to Str, right ?

[14:01] <PimDaniel> i don't need to pass the constructor parameter a hash: i can pass it a list of Pair, No?

[14:01] <lizmat> yup

[14:02] <PimDaniel> for example : 1 => [3], '1' => [1,2,3],'2' =>[10,11,12],2 => [3,4,5], 6 => [3], 7 => [3,5,8], '7' => [11,1,2]

[14:02] <PimDaniel> whatch that you have a trap here!

[14:04] <PimDaniel> I'm very twisted!

[14:04] <lizmat> m: my %h{Any} = 1 => [3], '1' => [1,2,3],'2' =>[10,11,12],2 => [3,4,5], 6 => [3], 7 => [3,5,8], '7' => [11,1,2]; dd %h

[14:04] <camelia> rakudo-moar 3235f3e42: OUTPUT: «Hash[Any,Any] %h = (my Any %{Any} = "1" => $[1, 2, 3], 1 => $[3], 2 => $[3, 4, 5], "2" => $[10, 11, 12], 6 => $[3], 7 => $[3, 5, 8], "7" => $[11, 1, 2])␤»

[14:04] <lizmat> m: say 1 === "1"

[14:04] <camelia> rakudo-moar 3235f3e42: OUTPUT: «False␤»

[14:05] <PimDaniel> yess, i have === into my algorithm

[14:05] <PimDaniel> it it is especially the reason why... all of this.

[14:06] <PimDaniel> in fact : i'm loosing my types in my constructor parameters.

[14:06] <lizmat> ah, gist?

[14:07] <PimDaniel> How do we declare a list of positionnal as parameters in a new sub

[14:07] <PimDaniel> ??

[14:07] <PimDaniel> well this is another question.

[14:08] *** Sgeo joined
[14:09] <lizmat> sub foo($one, $two) 

[14:09] <lizmat> ?

[14:09] <lizmat> ah, a List of positionals?

[14:10] <lizmat> yeah, that is still underdeveloped in Raku

[14:10] <PimDaniel> In other words : what is the that could feet for 1 => [3], '1' => [1,2,3],'2' =>[10,11,12],2 => [3,4,5], 6 => [3], 7 => [3,5,8], '7' => [11,1,2] directly sent to the constructor.

[14:10] <lizmat> m: sub foo(List $l) { dd $l }; foo 1,2

[14:10] <camelia> rakudo-moar 3235f3e42: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Calling foo(Int, Int) will never work with declared signature (List $l)␤at <tmp>:1␤------> 3sub foo(List $l) { dd $l }; 7⏏5foo 1,2␤»

[14:11] <lizmat> m: sub foo(List $l) { dd $l }; foo (1,2)

[14:11] <camelia> rakudo-moar 3235f3e42: OUTPUT: «$(1, 2)␤»

[14:11] <PimDaniel> probaly make a subset

[14:11] <lizmat> yeah, there's that, or maybe look at the Rake module in the ecosystem

[14:11] <PimDaniel> but i need to preserve types as is.

[14:12] <lizmat> alternately, (which is probably better for performance anyway), is to create a class for that list

[14:12] <PimDaniel> I think i allready dit it: i must look at my codes.

[14:13] <lizmat> in Perl, using a hash or a list as an object, is usually the fastest way to do things, because of the overhead of accessors

[14:13] <PimDaniel> hum may be. The 1st goal is to preserve the types into my hash class attribute at least.

[14:13] <lizmat> in Raku, using objects is almost *always* faster

[14:13] <PimDaniel> Good to know.

[14:14] <lizmat> so that's one of the false friends you need to get rid of

[14:14] <PimDaniel> I watched it is sometimes very slow without good reasons.

[14:15] <lizmat> see e.g. https://github.com/Raku/CCR/blob/main/Remaster/Elizabeth%20Mattijsen/How-to-make-it-more-classy.md

[14:15] <PimDaniel> I mean compare to others interpreted langages like Per5,Python,PHP, and others.

[14:15] <PimDaniel> Thank you very much.

[14:22] * PimDaniel lizmat : your url is very interesting: raku is so wide than i'm allways wondering : what is the best way? And often the way i choose does not feet.

[14:22] <lizmat> yeah, it can be overwhelming initially

[14:23] <lizmat> just that you're at a beach, and are learning to swim: nobody expects you to be able to swim across  :-)

[14:27] <Altreus> PimDaniel: I think you mean fit not feet :D

[14:29] <PimDaniel> True: Sorry for English.

[14:29] <PimDaniel> *my English

[14:30] <lizmat> PimDaniel: the native English speakers are in a minority here.. :-)

[14:30] <PimDaniel> in France too :)))

[14:30] *** kaiwulf joined
[14:31] <PimDaniel> I meand the good English speakers. :))

[14:31] <PimDaniel> *mean 

[14:33] *** Doc_Holliwood joined
[14:33] <PimDaniel> back later, thank's to all of you.

[14:33] *** PimDaniel left
[14:57] <Altreus> I have been learning French :o maybe I can get practice here and there

[14:58] <lizmat> bien sûr!

[14:59] <Altreus> I say some very silly things in my French lessons, half-remembered from school or just invented Franglais

[15:01] <codesections> .ask moritz: do you happen to remember what the index in the old irclog.perlgeek.de URLs corresponds to (e.g., the `13961377` in https://irclog.perlgeek.de/perl6-dev/2017-01-20#i_13961377)?  Is it a timestamp of some sort?  (I'm going to try to update some links to point to the colabti archive)

[15:01] <tellable6> codesections, I'll pass your message to moritz

[15:01] *** gnufr33dom joined
[15:01] <codesections> or if anyone else knows ^^^^

[15:03] <moritz> codesections: that ID was an autoincrement key (with negative values for messages that were back-imported later

[15:03] <codesections> ah.  So not super useful right now.  shame

[15:03] <codesections> thanks

[15:07] *** hungrydonkey joined
[15:10] *** JRaspass joined
[15:21] *** hungrydonkey left
[15:23] *** Doc_Holliwood left
[15:34] *** xinming left
[15:34] *** lizmat left
[15:36] *** xinming joined
[15:48] *** lizmat joined
[15:54] *** parabolize joined
[15:58] *** mowcat joined
[16:03] *** mowcat left
[16:03] *** gnufr33dom left
[16:08] *** jmerelo joined
[16:25] *** dataangel joined
[16:25] *** Geth left
[16:42] *** zxcvz joined
[16:48] *** mowcat joined
[16:49] *** kaiwulf left
[17:36] *** dakkar left
[17:50] *** xinming left
[17:50] *** xinming joined
[17:58] *** domidumont left
[18:03] *** m_athias left
[18:03] *** m_athias joined
[18:05] *** xinming left
[18:07] *** xinming joined
[18:14] *** JRaspass left
[18:22] *** xinming left
[18:23] *** xinming joined
[18:32] *** guifa2 joined
[18:35] *** brtastic joined
[18:41] *** _jrjsmrtn joined
[18:42] *** __jrjsmrtn__ left
[18:53] *** camelia left
[18:54] *** aborazmeh joined
[18:57] *** xinming left
[19:00] *** xinming joined
[19:09] <codesections> woo: https://www.reddit.com/r/rakulang/comments/lr5uci/github_started_highlighting_code_for_raku_files/

[19:09] *** zxcvz left
[19:11] *** xinming left
[19:12] *** xinming joined
[19:13] <guifa2> codesections: still not for rakutest though

[19:19] *** camelia joined
[19:27] *** aborazmeh left
[19:33] *** jmerelo left
[19:44] *** Doc_Holliwood joined
[19:48] *** JRaspass joined
[19:56] *** xinming left
[19:56] *** xinming joined
[20:04] *** camelia left
[20:06] <codesections> Yeah.  Shame about that, but still.  Code highlighting seems especially helpful for new/curious users, and having it for the .raku files will go a long way 

[20:07] *** camelia joined
[20:09] *** camelia left
[20:09] <tonyo> check out colorForth for syntax highlighting done right 

[20:10] *** camelia joined
[20:12] *** xinming left
[20:13] <codesections> tonyo: you mean like this? https://github.com/narke/colorForth/blob/master/screenshots/colorforth_bochs.png

[20:13] *** xinming joined
[20:13] <codesections> that looks slightly appalling :)

[20:14] *** sortiz joined
[20:18] *** camelia left
[20:22] <tonyo> yea

[20:22] <tonyo> it's pretty interesting, actually (as is forth) from a language pov

[20:23] <codesections> yeah, agreed re: forth.  

[20:24] *** camelia joined
[20:24] <codesections> I'm not the right audience for that color scheme – I prefer very little color (my current colors are basically https://emacsthemes.com/themes/nordless-theme.html)

[20:26] <codesections> But trying out a forth is on my to-play-with list.  Maybe factor?  https://factorcode.org/

[20:26] <hobbs> that's a "technically this has a color" theme

[20:27] *** xinming left
[20:28] *** xinming joined
[20:28] <hobbs> I expect you would call mine fruit salad: https://i.imgur.com/GukELdp.png

[20:28] <guifa2> egads mine eyes

[20:28] <guifa2> that magenta

[20:28] <hobbs> yeah I should probably change that one, it's not a feature I ever used when I tweaked the scheme

[20:28] <codesections> agreed :-)

[20:29] <hobbs> it doesn't spend much time on the screen

[20:29] <hobbs> but I would probably lavender it up a bit

[20:29] <hobbs> maybe I'll do that

[20:29] <codesections> and I genuinely don't think I could read more than a few words in the TODO blue.  (But maybe that's all it has?i)

[20:30] <hobbs> yeah, it's only used for TODO and XXX

[20:30] <hobbs> Out of the box it was like white on red

[20:30] <codesections> s/'has?i'/has?/

[20:31] * codesections spent too long thinking through the syntax for that regex

[20:31] <hobbs> :)

[20:38] *** telex left
[20:39] *** telex joined
[21:12] *** xinming left
[21:13] *** xinming joined
[21:18] *** telex left
[21:18] *** telex joined
[21:34] *** xinming left
[21:36] *** xinming joined
[21:37] <rba> tonyo: Did you ask for access logs on modules.raku.org?

[21:39] *** wamba left
[21:40] *** brtastic left
[21:43] *** brtastic joined
[21:50] *** Garbanzo joined
[22:08] *** xinming left
[22:10] *** sena_kun left
[22:11] *** sena_kun joined
[22:11] *** xinming joined
[22:23] *** sxmx left
[22:25] *** xinming left
[22:25] *** sxmx joined
[22:27] *** xinming joined
[22:48] *** aindilis` joined
[22:49] *** aindilis left
[22:51] *** xinming left
[22:52] *** xinming joined
[22:55] *** aindilis` left
[22:56] *** Black_Ribbon joined
[23:04] *** xinming left
[23:04] *** xinming joined
[23:14] *** rindolf left
[23:49] *** MasterDuke left
