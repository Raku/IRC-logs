[00:00] *** reportable6 left
[00:00] <rf> Yeah there are definetley tradeoffs

[00:01] *** Manifest0 left
[00:02] *** reportable6 joined
[00:33] *** jpn joined
[00:39] *** jpn left
[00:56] *** jpn joined
[01:04] *** jpn left
[01:34] *** nort left
[01:46] *** jpn joined
[01:51] *** jpn left
[01:56] *** derpydoo joined
[02:23] *** deoac joined
[02:30] *** jpn joined
[02:35] *** jpn left
[03:03] *** rf left
[03:22] *** razetime joined
[03:41] *** jpn joined
[03:50] *** jpn left
[03:55] *** TieUpYourCamel left
[04:05] *** razetime left
[04:13] *** nort joined
[04:14] *** deoac left
[04:28] *** nort left
[04:28] *** nort joined
[04:37] *** tea3po left
[04:44] *** teatime joined
[04:55] *** razetime joined
[04:56] *** nort left
[05:11] *** jpn joined
[05:26] *** jpn left
[05:35] *** nort joined
[05:36] *** nort left
[05:37] *** nort joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:39] *** jpn joined
[06:44] *** jpn left
[06:49] *** teatime left
[06:49] *** teatime joined
[06:49] *** razetime left
[06:51] *** teatime left
[06:52] *** teatime joined
[07:07] *** jpn joined
[07:13] *** jpn left
[07:21] *** jpn joined
[07:42] *** Sgeo left
[08:05] *** jpn left
[08:28] <Geth> ¦ doc/main: 4143d9fa59 | (Elizabeth Mattijsen)++ | doc/Type/VM.rakudoc

[08:28] <Geth> ¦ doc/main: Document VM.request-garbage-collection

[08:28] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/4143d9fa59

[08:29] <lizmat> doc pushes will only be reported on #raku-doc from now on, to reduce noise here

[08:43] *** jpn joined
[08:53] *** jpn left
[09:04] *** abraxxa joined
[09:07] *** xinming left
[09:08] *** xinming joined
[09:34] *** jpn joined
[09:47] <Geth> ¦ App-Rakubrew: 8640a60ad5 | (Nick Logan)++ | 2 files

[09:47] <Geth> ¦ App-Rakubrew: Use an arm64 perl in rakubrew standalone executeable

[09:47] <Geth> ¦ App-Rakubrew: 

[09:47] <Geth> ¦ App-Rakubrew: Previously the macos rakubrew was build with a x86 perl, which

[09:47] <Geth> ¦ App-Rakubrew: resulted in a x86 rakubrew and ultimately an x86 rakudo. This

[09:47] <Geth> ¦ App-Rakubrew: updates the macos build script to detect arm64 systems and to

[09:47] <Geth> ¦ App-Rakubrew: download the appropriate perl, build an arm64 rakubrew, which

[09:47] <Geth> ¦ App-Rakubrew: itself will build arm64 rakudos.

[09:47] <Geth> ¦ App-Rakubrew: 

[09:47] <Geth> ¦ App-Rakubrew: This also updates the version of perl used to one that has an arm

[09:48] <Geth> ¦ App-Rakubrew: build available.

[09:48] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/8640a60ad5

[09:48] <Geth> ¦ App-Rakubrew: b4d2039cb8 | (Patrick Böker)++ (committed using GitHub Web editor) | 2 files

[09:48] <Geth> ¦ App-Rakubrew: Merge pull request #72 from Raku/macos-arm64

[09:48] <Geth> ¦ App-Rakubrew: 

[09:48] <Geth> ¦ App-Rakubrew: Enable building of arm64 rakudos on Apple silicon

[09:48] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/b4d2039cb8

[10:32] *** a3r0 left
[10:32] *** a3r0 joined
[11:13] *** tejr left
[11:18] *** tejr joined
[11:55] <Geth> ¦ App-Rakubrew: ddb60a939e | (Patrick Böker)++ | lib/App/Rakubrew/Download.pm

[11:55] <Geth> ¦ App-Rakubrew: Better error reporting in Download _unzip

[11:55] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/ddb60a939e

[11:55] <Geth> ¦ App-Rakubrew: 10df00e323 | (Patrick Böker)++ | 2 files

[11:55] <Geth> ¦ App-Rakubrew: Automate building rakubrew on ARM MacOS

[11:55] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/10df00e323

[11:55] <Geth> ¦ App-Rakubrew: b9b2b21a96 | (Patrick Böker)++ | 4 files

[11:55] <Geth> ¦ App-Rakubrew: Version 34

[11:55] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/b9b2b21a96

[11:55] <Geth> ¦ App-Rakubrew/refs/tags/v34: 9d1d5d4493 | (Patrick Böker)++ | lib/App/Rakubrew/Download.pm

[11:55] <Geth> ¦ App-Rakubrew/refs/tags/v34: Better error reporting in Download _unzip

[11:55] <Geth> ¦ App-Rakubrew/refs/tags/v34: review: https://github.com/Raku/App-Rakubrew/commit/9d1d5d4493

[11:55] <Geth> ¦ App-Rakubrew/refs/tags/v34: 6e91baa9c8 | (Patrick Böker)++ | 2 files

[11:55] <Geth> ¦ App-Rakubrew/refs/tags/v34: Automate building rakubrew on ARM MacOS

[11:55] <Geth> ¦ App-Rakubrew/refs/tags/v34: review: https://github.com/Raku/App-Rakubrew/commit/6e91baa9c8

[11:55] <Geth> ¦ App-Rakubrew/refs/tags/v34: 8d74d22022 | (Patrick Böker)++ | 4 files

[11:55] <Geth> ¦ App-Rakubrew/refs/tags/v34: Version 34

[11:55] <Geth> ¦ App-Rakubrew/refs/tags/v34: review: https://github.com/Raku/App-Rakubrew/commit/8d74d22022

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:02] <Geth> ¦ App-Rakubrew: cc4daf4170 | (Patrick Böker)++ | 4 files

[12:02] <Geth> ¦ App-Rakubrew: Version 35

[12:02] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/cc4daf4170

[12:17] <Geth> ¦ App-Rakubrew: 0112188108 | (Patrick Böker)++ | release-stuff/trigger-manual-build.sh

[12:17] <Geth> ¦ App-Rakubrew: Fix MacOS ARM build to build the current version

[12:17] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/0112188108

[12:17] <Geth> ¦ App-Rakubrew: 818d584bbb | (Patrick Böker)++ | 2 files

[12:17] <Geth> ¦ App-Rakubrew: Simplyfy release process a bit more

[12:17] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/818d584bbb

[12:40] <ugexe> [Coke]: looks like rakubrew should build arm64 on mac now as appropriate

[13:01] *** linkable6 left
[13:01] *** evalable6 left
[13:02] *** evalable6 joined
[13:03] *** linkable6 joined
[13:14] *** jpn left
[13:16] <discord-raku-bot> <lucs> In raku.land, can the search box be used to find modules matching a given tag?

[13:19] *** linkable6 left
[13:22] *** linkable6 joined
[13:22] <lizmat> yes, e.g. https://raku.land/?q=CPAN5

[13:23] <discord-raku-bot> <lucs> Aha, thanks.

[13:24] <discord-raku-bot> <lucs> (Well, not exactly the search box, but that'll do.)

[13:24] <lizmat> I typed that in the search box: the search box just creates a URL like that ?

[13:27] <discord-raku-bot> <lucs> Oh, I actually typed that in my browser's address field.

[13:27] <discord-raku-bot> <lucs> Not sure what you typed in the page's search box to get that result.

[13:31] <discord-raku-bot> <lucs> I just noticed that if I enter some tag in the search box, it appears to list the modules that happen to have been tagged with that tag, but it also lists modules that have that string in their name or description, things like that.

[13:33] <discord-raku-bot> <lucs> @lizmat: Am I misunderstanding what you're telling me?

[13:39] <lizmat> lucs: yes, it's either the tag, name or description

[13:39] <lizmat> for some tags, that works, for others less so

[13:40] *** jpn joined
[13:42] <discord-raku-bot> <lucs> I guess that's pretty much okay, but I was wondering if there was a way to list only the modules that had been tagged with a particular tag -- currently, it seems that the answer is "no".

[13:42] <discord-raku-bot> <lucs> Another raku.land/tags question:

[13:46] <discord-raku-bot> <lucs> Oh, never mind (while preparing the question in my editor, I found a rather simple way to do what I wanted).

[13:48] <discord-raku-bot> <lucs> (Wanted to know how to list all currently used tags: just click on an arbitrary tag displayed by any module, and all tags will be displayed on the right.)

[13:51] <discord-raku-bot> <lucs> (Oh, and there is a way to list only the modules tagged with a given tag, but it's a bit roundabout: click on an arbitrary module's arbitrary tag, then on the right, click on the desired tag.)

[13:52] *** jpn left
[13:53] <lizmat> ok, so the URL is https://raku.land/tags/xxxx  with xxxx being the lowercase tag

[13:53] <lizmat> TIL

[13:55] <discord-raku-bot> <lucs> Okay, but ain't nobody got time to enter all that 😉

[14:00] *** rf joined
[14:00] *** jpn joined
[14:01] <rf> Morning, happy friday :)

[14:01] <discord-raku-bot> <lucs> Gooood morning to you too.

[14:09] <discord-raku-bot> <Anton Antonov> What is a good name for a Raku package/module that accesses OpenAI (and its ChatGTP)? I consider(ed) the names:  (1) "AI:OpenAI" -- does not hint WebAPI much  (2) "Lingua::Generation::OpenAI" -- too specific to text (3) "WebAPI::OpenAI" -- too "technical" (4) "Shmack::ShmePT" -- has a slight hint of my opinion about ChatGPT (5) "(ML|AI)::OpenAI::WebAPI" -- "same" 1 and 3

[14:09] <discord-raku-bot> <Anton Antonov> Any suggestions would help!

[14:09] *** jpn left
[14:10] <rf> OpenAI::WebAPI

[14:19] <discord-raku-bot> <Anton Antonov> Yeah. Or "OpenAI::Playground::WebAPI".

[14:19] <vrurg> In Perl world they used to use WWW namespace for that. Raku has three modules in that NS already too.

[14:20] <discord-raku-bot> <Anton Antonov> Ok, like this one: https://raku.land/github:Altai-man/WWW::DuckDuckGo

[14:20] <vrurg> I think so. It clearly points at the use scope of the package.

[14:21] *** abraxxa left
[14:21] *** jpn joined
[14:22] <discord-raku-bot> <Anton Antonov> Yes. I checked the "AI::" prefix in raku.land, but it did not occur to me to try "WWW::" .

[14:22] <vrurg> WWW::ShmackGPT...

[14:23] <discord-raku-bot> <Anton Antonov> 🙂 Yeah, of course. (I even considered "ACME::" prefixes...)

[14:25] <vrurg> ACME::KoyotGPT?

[14:26] *** jpn left
[14:28] <discord-raku-bot> <Anton Antonov> @vrurg I created this one : https://github.com/antononcube/Raku-WWW-OpenAI

[14:28] <vrurg> I wonder how much of CPU power backs the model. When I tried a question which it is not well trained for, apparently, it was like hearing its gears moving while it was producing an answer word-by-word.

[14:29] <discord-raku-bot> <Anton Antonov> Oh, yeah -- they have many and huge servers.

[14:30] <vrurg> Anton: looking forward for seeing the module in the wild! 

[14:31] <discord-raku-bot> <Anton Antonov> I will try to "populate it" into its initial version within the next 30 min. Hopefully, it would be Zef-ready tomorrow.

[14:33] *** jpn joined
[14:59] <patrickb> ugexe I'm still on it. The website is still todo. Would you be willing to test once I'm done?

[15:02] <ugexe> patrickb: yeah just ping me when

[15:19] *** abraxxa-home joined
[15:20] *** abraxxa-home left
[15:21] *** abraxxa-home joined
[15:48] <discord-raku-bot> <Anton Antonov> The first -- very basic -- version  of "WWW:OpenAI" is completed : https://github.com/antononcube/Raku-WWW-OpenAI .

[15:49] <discord-raku-bot> <Anton Antonov> I hope it works on non-macOS platforms. I have to figure out how to replace the curl queries with "direct" URLs...

[15:50] <rf> You can use Cro HTTPClient

[15:58] <[Coke]> ugexe++

[16:04] <tonyo> .

[16:06] <Geth> ¦ rakubrew.org: d18f7ec911 | (Patrick Böker)++ | 3 files

[16:06] <Geth> ¦ rakubrew.org: Add support for ARM Mac builds

[16:06] <Geth> ¦ rakubrew.org: review: https://github.com/Raku/rakubrew.org/commit/d18f7ec911

[16:10] *** Sgeo joined
[16:26] *** knarkhov joined
[16:27] <knarkhov> hi, rakkoons!

[16:27] <rf> knarkhov o/

[16:27] <lizmat> knarkhov o/  long time no see!

[16:34] <knarkhov> I need help with Inline::Perl5 and IO::Socket::UNIX. I'm dealing with some dummy bot via unix sockets, and on server side i can not get buffer from socket. `my $bytes = $ipcconn.read($outbuf, 64);` Here's `bytes` are ok, exactly what i read, but `$outbuf` is blank. I guess this is due to Perl5 read is used and it assume `$outbuf` as writable by default. But not in raku.

[16:35] <tonyo> m: any reason to not use IO::Socket in raku?

[16:35] <camelia> rakudo-moar 675c77173: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> any reason to not use IO::Socket⏏ in raku?␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤…»

[16:38] <discord-raku-bot> <Nemokosch> kostas?

[16:44] <knarkhov> tonyo, actually no any global reasons, I'm bit confusing - I saw in some module IPC communication via IO::Socket... Let me find. But also i remember, a long story about unix sockets native support in raku. Looks like it was delivered a while ago.

[16:45] <tonyo> if you're not doing anything tricky with the sockets then iirc they were pretty stable ~2015 ?

[16:46] *** razetime joined
[16:46] *** razetime left
[16:47] <knarkhov> lizmat, hi, yep, was kicked from usual lifecycle an year ago...  

[16:48] <lizmat> as were many, I believe :-(

[16:56] <knarkhov> tonyo, thanks!!!!!!

[16:56] <knarkhov> https://github.com/Raku/roast/blob/master/S32-io/IO-Socket-INET-UNIX.t

[16:56] <knarkhov> my bot is working)))

[16:57] <knarkhov> have no clue why I looked into Inline::Perl5 and IO::Socket::UNIX

[16:57] <lizmat> .oO( old habits die hard )

[16:59] <rf> tonyo I much prefer IO::Socket::Async

[16:59] <knarkhov> 100% true

[17:00] <Geth> ¦ rakubrew.org: cce38d13a8 | (Patrick Böker)++ | resources/homepage.md.tmpl

[17:00] <Geth> ¦ rakubrew.org: Explain how to best automate: without Rakubrew

[17:00] <Geth> ¦ rakubrew.org: review: https://github.com/Raku/rakubrew.org/commit/cce38d13a8

[17:02] <discord-raku-bot> <Nemokosch> Iirc Leon's complaint was specifically about Unix domain sockets

[17:02] <discord-raku-bot> <Nemokosch> The lack thereof, that is

[17:46] *** linkable6 left
[17:46] *** evalable6 left
[17:48] *** evalable6 joined
[17:49] *** linkable6 joined
[17:55] *** knarkhov left
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:05] <discord-raku-bot> <Anton Antonov> @rf Using "Cro::HTTP::Client" was a good advice -- thanks!

[18:05] *** vrurg_ joined
[18:05] *** vrurg left
[18:23] <tonyo> m: 120 ^^ 4294967295

[18:23] <camelia> rakudo-moar 9c0307545: ( no output )

[18:23] <tonyo> m: dd (120 ^^ 4294967295)

[18:23] <camelia> rakudo-moar 9c0307545: OUTPUT: «Nil␤»

[18:24] *** linkable6 left
[18:25] <tonyo> hm

[18:27] *** linkable6 joined
[18:28] <tonyo> m: dd 0 ^^ 0xFFFF_FFFF;

[18:28] <camelia> rakudo-moar 9c0307545: OUTPUT: «4294967295␤»

[18:29] <rf> Anton, no problem :)

[18:37] *** knarkhov joined
[18:41] *** knarkhov left
[18:47] *** teatwo joined
[18:50] *** teatime left
[18:56] *** jpn left
[19:02] <patrickb> ugexe: I have finished updating the Rakubrew website and toolchain. You could start testing.

[19:10] <Geth> ¦ rakubrew.org: d3a347260d | (Nick Logan)++ (committed using GitHub Web editor) | resources/homepage.md.tmpl

[19:10] <Geth> ¦ rakubrew.org: Add missing word

[19:10] <Geth> ¦ rakubrew.org: review: https://github.com/Raku/rakubrew.org/commit/d3a347260d

[19:22] *** jpn joined
[19:23] <ugexe> patrickb: the curl instructions and the standalone instructions both work as expected. only thing worth noting is with the standalone instructions I also had to `chmod +x ~/.rakubrew/bin/rakubrew`

[19:28] *** jpn left
[19:38] *** vrurg_ left
[19:39] *** vrurg joined
[19:43] *** jpn joined
[19:47] *** jpn left
[20:01] *** jpn joined
[20:02] <tonyo> rf: did you end up looking at the globber?

[20:09] *** jpn left
[20:26] <tonyo> oh ^^ is not the typical ^, +^ is smdh

[20:34] *** abraxxa-home left
[20:37] *** jpn joined
[20:45] *** jpn left
[20:51] *** jpn joined
[20:56] *** jpn left
[20:57] *** derpydoo left
[21:00] <discord-raku-bot> <Nemokosch> :cameliathink:

[21:00] *** gcd joined
[21:02] *** deoac joined
[21:12] *** jpn joined
[21:31] *** MoC joined
[21:32] *** Manifest0 joined
[21:33] *** jpn left
[21:34] *** MoC left
[21:44] *** jpn joined
[21:54] <Geth> ¦ rakubrew.org: a4fc8839b7 | Rawley++ (committed by Patrick Böker) | public/install-on-perl.sh

[21:54] <Geth> ¦ rakubrew.org: Fix typo

[21:54] <Geth> ¦ rakubrew.org: review: https://github.com/Raku/rakubrew.org/commit/a4fc8839b7

[21:55] <rf> tonyo: Not yet sorry

[22:04] *** jpn left
[22:05] <Geth> ¦ rakubrew.org: 17482f02e3 | (Patrick Böker)++ | resources/homepage.md.tmpl

[22:05] <Geth> ¦ rakubrew.org: Clarify that one needs to make rakubrew executable

[22:05] <Geth> ¦ rakubrew.org: 

[22:05] <Geth> ¦ rakubrew.org: When doing a manual installation that is.

[22:05] <Geth> ¦ rakubrew.org: review: https://github.com/Raku/rakubrew.org/commit/17482f02e3

[22:07] <patrickb> ugexe: Thanks for testing. I added a bit of clarification to the website.

[22:26] *** derpydoo joined
[22:50] *** jpn joined
[23:01] *** jpn left
[23:28] <tonyo> m: my $b = Buf[uint8].new(0 xx 0xFFFF); dd $b.bytes; my $a = Buf[uint8].new; $a.append(|$b.subbuf(0, 0xFFFF));

[23:28] <camelia> rakudo-moar 2a5220a5f: OUTPUT: «65535␤Flattening produced 65538 values, but argument lists are limited to 65535␤  in block <unit> at <tmp> line 1␤␤»

[23:40] <Voldenet> you don't even ned the second buffer

[23:40] <Voldenet> m: Buf[uint8].new.append(|(0 xx 0xFFFF))

[23:40] <camelia> rakudo-moar 2a5220a5f: OUTPUT: «Flattening produced 65538 values, but argument lists are limited to 65535␤  in block <unit> at <tmp> line 1␤␤»

[23:41] <tonyo> how is that flattening to three extra values?

[23:42] <Voldenet> m: [].push(|(0 xx 0xFFFF))

[23:42] <camelia> rakudo-moar 2a5220a5f: OUTPUT: «Flattening produced 65538 values, but argument lists are limited to 65535␤  in block <unit> at <tmp> line 1␤␤»

[23:42] <Voldenet> even

[23:43] <Voldenet> Argument list contains 3 elements already

[23:43] <Voldenet> m: [].push(1, |(0 xx 0xFFFF))

[23:43] <camelia> rakudo-moar 2a5220a5f: OUTPUT: «Flattening produced 65539 values, but argument lists are limited to 65535␤  in block <unit> at <tmp> line 1␤␤»

[23:44] <Voldenet> m: sub x { }; x(|(0 xx 0xFFFF));

[23:44] <camelia> rakudo-moar 2a5220a5f: OUTPUT: «Flattening produced 65536 values, but argument lists are limited to 65535␤  in block <unit> at <tmp> line 1␤␤»

[23:44] <Voldenet> maybe first arg is thread context or something like that?

[23:44] <tonyo> ah i guess because of the flip of @x.push is giving you some args eh

[23:44] <tonyo> i'll just do it in halves

[23:44] <tonyo> is a problem for gzip uncompressed blocks

[23:45] <Voldenet> I'm not sure if it's good idea to even use append here, I'd be tempted to use memcpy

[23:46] * Voldenet a perlxs aficionado

[23:47] <tonyo> trying to keep no build deps in fez

[23:48] <Voldenet> tbh. I'm surprised buf can't be copied into another buf

[23:50] <tonyo> yea i just double looked at the docs

[23:50] <tonyo> am also surprised

[23:51] <Voldenet> …maybe it does

[23:51] <Voldenet> m: my $b = Buf.new(0 xx 0xFFFF); dd $b.bytes; Buf[uint8].new.append($b.subbuf(0, 0xFFFF));

[23:51] <camelia> rakudo-moar 2a5220a5f: OUTPUT: «65535␤»

[23:51] <tonyo> with subbuf-rw ?

[23:52] <Voldenet> apparently append simply accepts Buf

[23:52] <tonyo> hmm..could've sworn i tried that

[23:54] *** bigdata joined
[23:56] <Voldenet> a lot more obvious when you look at supported types https://github.com/rakudo/rakudo/blob/main/src/core.c/Buf.pm6#L1370

[23:59] *** jpn joined
