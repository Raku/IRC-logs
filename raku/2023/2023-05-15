[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[01:03] *** reportable6 left
[01:03] *** greppable6 left
[01:03] *** bloatable6 left
[01:03] *** squashable6 left
[01:03] *** linkable6 left
[01:03] *** sourceable6 left
[01:03] *** shareable6 left
[01:03] *** coverable6 left
[01:03] *** statisfiable6 left
[01:03] *** nativecallable6 left
[01:03] *** releasable6 left
[01:03] *** unicodable6 left
[01:03] *** evalable6 left
[01:03] *** quotable6 left
[01:03] *** bisectable6 left
[01:03] *** committable6 left
[01:03] *** committable6 joined
[01:03] *** quotable6 joined
[01:03] *** linkable6 joined
[01:03] *** sourceable6 joined
[01:03] *** nativecallable6 joined
[01:03] *** squashable6 joined
[01:03] *** releasable6 joined
[01:04] *** xinming left
[01:04] *** bisectable6 joined
[01:05] *** coverable6 joined
[01:05] *** unicodable6 joined
[01:05] *** statisfiable6 joined
[01:05] *** evalable6 joined
[01:05] *** shareable6 joined
[01:05] *** reportable6 joined
[01:06] *** greppable6 joined
[01:06] *** bloatable6 joined
[01:06] *** xinming joined
[01:29] *** squashable6 left
[01:32] *** squashable6 joined
[02:17] *** tea3po joined
[02:18] *** tea3po left
[02:19] *** tea3po joined
[02:20] *** tea3po left
[02:20] *** tea3po joined
[02:20] *** teatwo left
[02:22] *** tea3po left
[02:22] *** tea3po joined
[02:28] <uzl[m]> I started playing around with parsing a binary file format (i.e., DBF III w/o memo file) with Raku, and well it ended up turning into an article. Since I've a bunch of code snippets in it, I figured it made sense to make the whole thing a module/program the reader could tinker with so that's what I'm doing. However I'm... (full message at <https://libera.ems.host/_matrix/media/v3/download/libera.chat/8df3b5b8536d374757c0c980a4e885370a19ae9e>)

[02:47] *** frost joined
[03:06] *** frost left
[03:46] *** rf left
[04:46] *** evalable6 left
[04:46] *** nativecallable6 left
[04:46] *** statisfiable6 left
[04:46] *** linkable6 left
[04:46] *** notable6 left
[04:46] *** greppable6 left
[04:46] *** coverable6 left
[04:46] *** sourceable6 left
[04:46] *** benchable6 left
[04:46] *** bisectable6 left
[04:46] *** releasable6 left
[04:46] *** quotable6 left
[04:46] *** committable6 left
[04:46] *** unicodable6 left
[04:46] *** tellable6 left
[04:46] *** shareable6 left
[04:46] *** evalable6 joined
[04:46] *** quotable6 joined
[04:46] *** notable6 joined
[04:46] *** sourceable6 joined
[04:46] *** coverable6 joined
[04:46] *** unicodable6 joined
[04:47] *** statisfiable6 joined
[04:47] *** committable6 joined
[04:47] *** linkable6 joined
[04:47] *** bisectable6 joined
[04:47] *** greppable6 joined
[04:48] *** tellable6 joined
[04:48] *** benchable6 joined
[04:48] *** nativecallable6 joined
[04:48] *** shareable6 joined
[04:49] *** releasable6 joined
[05:49] *** bloatable6 left
[05:49] *** nativecallable6 left
[05:49] *** notable6 left
[05:49] *** coverable6 left
[05:49] *** unicodable6 left
[05:49] *** quotable6 left
[05:49] *** committable6 left
[05:49] *** statisfiable6 left
[05:49] *** sourceable6 left
[05:49] *** squashable6 left
[05:49] *** reportable6 left
[05:49] *** linkable6 left
[05:49] *** benchable6 left
[05:49] *** evalable6 left
[05:49] *** greppable6 left
[05:49] *** tellable6 left
[05:49] *** bisectable6 left
[05:49] *** shareable6 left
[05:49] *** releasable6 left
[05:49] *** bisectable6 joined
[05:49] *** quotable6 joined
[05:50] *** committable6 joined
[05:50] *** reportable6 joined
[05:50] *** coverable6 joined
[05:50] *** evalable6 joined
[05:50] *** shareable6 joined
[05:50] *** squashable6 joined
[05:51] *** releasable6 joined
[05:51] *** linkable6 joined
[05:51] *** benchable6 joined
[05:51] *** nativecallable6 joined
[05:51] *** bloatable6 joined
[05:51] *** sourceable6 joined
[05:51] *** greppable6 joined
[05:51] *** tellable6 joined
[05:52] *** unicodable6 joined
[05:52] *** statisfiable6 joined
[05:52] *** notable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:27] *** jast left
[06:28] *** jast joined
[06:29] *** bpalmer` joined
[06:29] *** camelia left
[06:29] *** leont left
[06:29] *** SmokeMachine left
[06:29] *** leedo left
[06:29] *** SmokeMachine joined
[06:29] *** leedo joined
[06:29] *** phogg left
[06:31] *** bpalmer left
[06:31] *** heartburn left
[06:31] *** jcallen left
[06:31] *** Altreus left
[06:31] *** moritz left
[06:31] *** jcallen joined
[06:32] *** moritz joined
[06:32] *** phogg joined
[06:32] *** heartburn joined
[06:34] *** jpn left
[06:41] *** lucs left
[06:41] *** lucs joined
[06:44] *** leont joined
[06:44] *** Altreus joined
[06:59] *** jpn joined
[07:03] *** jpn left
[07:08] *** squashable6 left
[07:09] *** squashable6 joined
[07:09] *** abraxxa joined
[07:24] *** ab5tract left
[07:36] *** ab5tract joined
[07:40] *** Sgeo left
[07:47] *** sena_kun joined
[07:49] *** ab5tract left
[07:53] *** camelia joined
[07:57] *** dakkar joined
[07:58] *** Tirifto left
[08:00] *** jpn joined
[08:00] *** frost92 joined
[08:01] *** Tirifto joined
[08:04] *** jpn left
[08:09] *** jpn joined
[08:10] *** frost92 left
[08:14] *** jpn left
[08:34] *** ab5tract joined
[08:35] *** frost98 joined
[08:36] *** jpn joined
[08:37] *** frost98 left
[08:48] *** abraxxa left
[08:49] *** frost3 joined
[09:02] *** ab5tract left
[09:11] *** frost3 left
[09:29] *** phogg left
[09:29] *** phogg joined
[09:45] *** abraxxa joined
[10:17] *** derpydoo left
[10:21] *** jpn left
[10:23] *** jpn joined
[11:30] <tbrowder__> uzl[m]: i couldn't get the link, but i am interested in binary parsing, esp. for getting

[11:31] <tbrowder__> *

[11:33] <tbrowder__> access to common Windows output files. David Warring has large coverage of PDF, but there are other things to look at.

[11:34] <tbrowder__> i guess PDF is not quite binary...

[11:44] *** linkable6 left
[11:44] *** evalable6 left
[11:45] *** evalable6 joined
[11:46] *** linkable6 joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:14] *** jpn left
[12:34] *** jpn joined
[12:39] *** jpn left
[13:40] <moritz> .oO( ternary PDF )

[13:41] *** jpn joined
[14:17] *** teatwo joined
[14:17] *** teatwo left
[14:18] *** teatwo joined
[14:19] *** tea3po left
[14:32] <Voldenet> iirc pdf can be mostly plaintext

[14:35] *** Sgeo joined
[14:35] <Voldenet> but most pdfs use compressed streams

[14:49] <tbrowder__> ternary, good description

[14:53] <tbrowder__> moritz: you and jj and some of the other published authors ought to join forces and publish a short book on beginning programming in raku for youngsters to compete with the similar books using (cough, cough) python

[14:54] <tbrowder__> get them started young and see what happens

[15:15] *** guifa joined
[15:16] *** guifa_ left
[15:40] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/05/15/2023-20-so-survey/

[15:53] *** saint- joined
[15:56] <moritz> tbrowder__: I don't really have energy for writing atm :-(

[15:56] <moritz> nor do I feel I'm doing a good job explaining things to beginners

[16:00] <discord-raku-bot> <Nemokosch> there was zero interest in at least compiling the existing materials into an accessible maintained list, even

[16:02] *** abraxxa left
[16:27] *** gkqha joined
[16:27] *** gkqha left
[16:30] *** jmcgnh left
[16:33] *** bpalmer` is now known as bpalmer

[16:38] *** euandreh left
[16:38] <tonyo> rf: is it possible to swap out the backend server in hummingbird?  would you prefer a PR if i go down that route?

[16:38] <tellable6> tonyo, I'll pass your message to rf

[16:44] *** jmcgnh joined
[16:44] *** dakkar left
[16:48] *** euandreh joined
[16:57] *** bpalmer left
[17:18] *** jpn left
[17:31] *** jpn joined
[17:47] *** Sgeo left
[17:58] *** jpn left
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:15] *** euandreh left
[18:15] *** euandreh joined
[18:39] *** jpn joined
[18:46] *** rf joined
[19:11] *** Sgeo joined
[19:23] *** jpn left
[19:27] *** rf_ joined
[19:28] *** rf left
[19:39] *** heartburn left
[19:47] *** heartburn joined
[19:48] <tbrowder__> moritz: i understand, take care

[19:49] <Voldenet> tonyo: iirc hummingbird is supposed to be exposed via reverse proxy in that case

[19:54] <Voldenet> not that it's technically impossible to write alternative Request.decode method even using native call

[20:25] *** rf_ left
[20:25] *** rf joined
[20:26] <rf> tonyo: Yes I would be interested in a PR if you'd be up to it :)

[20:26] <tellable6> 2023-05-15T16:38:53Z #raku <tonyo> rf: is it possible to swap out the backend server in hummingbird?  would you prefer a PR if i go down that route?

[20:26] <rf> That was something I was debating about, I think it is valuable. At the moment the backend is fairly simple/naive

[20:29] <rf> I designed request, response like that on purpose to potentially allow for this later, but since I couldn't find a Plack/Rack style library I just rolled it myself.

[20:44] <tonyo> the way this is designed is very choice.  my routes read a lot like fp that just _does the right thing_

[20:44] <tonyo> Voldenet: mostly interested in a non-single threaded option, an nginx proxy is OK

[20:45] <rf> tonyo++ Excited to see what you come up with

[20:46] <tonyo> can you expose the query string params list somewhere?  looks like it exists for headers and params but not for query()

[20:47] <rf> Yeah I ran into that yesterday, I'll put it in

[20:53] <rf> tonyo: Pull down 2.1.5

[21:06] *** Tirifto left
[21:09] *** Tirifto joined
[21:20] *** jpn joined
[21:25] *** jpn left
[21:27] *** patrickb left
[21:27] *** patrickb joined
[21:28] *** archenoth joined
[21:29] *** Oshawott left
[21:30] *** rf left
[21:53] *** squashable6 left
[21:54] *** sena_kun left
[21:56] *** squashable6 joined
[22:02] <uzl[m]> tbrowder__: Do you mean my github gist link? It should be accessible to any one who has the link

[22:06] <uzl[m]> I'm using element/matrix to connect the the libera channel and after looking at the logs, it seems most of my message got cut off lol

[22:07] <uzl[m]> I started playing around with parsing a binary file format (i.e., DBF III w/o memo file) with Raku, and well it ended up turning into an article. Since I've a bunch of code snippets in it, I figured it made sense to make the whole thing a module/program the reader could tinker with so that's what I'm doing.

[22:07] <uzl[m]> However I'm trying to make sure if this layout makes sense.

[22:07] <uzl[m]> Right now, I've a Header class that represents the header. Within the header, there's a subsection called the field array descriptor which contains an array of fields but I moved that to its own Fields class. 

[22:08] <uzl[m]> Then I've the DBF class which is the entry point: it creates a handle from the path in :r and :bin mode, and then passes it to Header and Fields objects (the file pointer is being moved so the order matters).

[22:08] <uzl[m]> Next would be reading the records.

[22:08] <uzl[m]> Anyways... I know TMTOWTDI but I'm wondering if this code layout makes sense (please tag me if you respond to this, otherwise I might lose track of it).

[22:08] <uzl[m]> LINK: https://gist.github.com/uzluisf/d73207207553fd54931fcfdde1db71b3

[22:16] <uzl[m]> gfldex: What does "ENODOC" mean? Iguess it means not documented but first coming across that term/acronym 😅

[22:17] <uzl[m]> *first time

[22:20] <uzl[m]> tbrowder__: ref book for beginners: I think Rosenfeld's "Think in Raku" does quite a nice job at that, or do you mean something more basic than that?

[22:24] <[Coke]> Error, NO DOC umentation

[22:25] <[Coke]> e.g. https://www.gnu.org/software/libc/manual/html_node/Error-Codes.html

[22:26] <[Coke]> ENOENT, ENOEXEC, ENODEV, ENOSPC, etc.

[22:26] <uzl[m]> Thanks!!! Quite the list :)

[22:28] *** rf joined
[23:08] *** explorer joined
[23:23] *** explorer left
[23:26] *** rf left
[23:43] <tbrowder__> uzl[m]: ref the first link it didn't work for me, safari reported something about unable to get a secure connection...the last link did

[23:45] <tbrowder__> ref book: much more basic.  jmerelo's book '' is  a fairly

[23:46] <tbrowder__> good start for high school and older, but maybe not for most middle school kids.

[23:52] <tonyo> rf++  danke!

[23:58] <uzl[m]> tbrowder__: Probably something like "Python for Kids" (https://nostarch.com/python-kids-2nd-edition). I gotta admit it might've been the first book I read, even though I was already in highschool haha. I don't remember finishing it though

