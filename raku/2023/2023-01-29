[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:33] <Homer_Simpson> my code is saying its line 0 if I make it 6 which is wrong https://pastebin.com/3NbJTa2k

[00:34] <Homer_Simpson>  oops here pastebin.com/3NbJTa2k

[00:40] <tonyo> what's in data.ldr

[00:44] <Homer_Simpson> 6 6

[00:45] <Homer_Simpson> and this is saying invalid line type if I make it 0 6 : https://pastebin.com/rUYmSJws

[01:00] <Homer_Simpson> even eq isnt working

[01:02] *** jpn joined
[01:06] <Homer_Simpson> anyone here

[01:08] *** raschipi joined
[01:10] *** jpn left
[01:21] <discord-raku-bot> <:(**@rest, *%rest)> me

[01:21] <tonyo> m: dd "6" && " ";

[01:21] <camelia> rakudo-moar 85240f0c2: OUTPUT: «" "␤»

[01:22] <discord-raku-bot> <:(**@rest, *%rest)> Homer_Simpson: it looks like bad code tbh

[01:22] <discord-raku-bot> <stevied> /tonyo left you a present, earlier

[01:22] <tonyo> ^^

[01:23] <discord-raku-bot> <stevied> here ya go: https://github.com/tony-o/raku-fez/issues/80

[01:23] <discord-raku-bot> <:(**@rest, *%rest)> Homer_Simpson: also you can try dd @x

[01:23] <discord-raku-bot> <stevied> blank lines in .gitignore cause problems for fez

[01:24] <tonyo> stevied: i have a branch that may fix if you're savvy

[01:24] <discord-raku-bot> <stevied> i wouldn't call myself savvy, just know enough to be dangerous

[01:25] <tonyo> the `glob` branch *should* fix that error, i'm currently testing before releasing

[01:25] <tonyo> the current way is entirely wrong and sometimes that regex ends up with zero files so pax|tar hangs waiting on stdin

[01:26] <discord-raku-bot> <stevied> what's weird is that the pax command seems to complete, it's only when .exitcode is called on it do things hang, afaict.

[01:26] <discord-raku-bot> <stevied> not sure exactly what's going on with that

[01:27] <discord-raku-bot> <stevied> i'll wait for official release. solved the problem by just deleting the blank line

[01:27] <Homer_Simpson> present?

[01:28] <discord-raku-bot> <stevied> o

[01:28] <Homer_Simpson> the last thing I see on my irc is: <tonyo> what's in data.ldr

[01:28] <discord-raku-bot> <stevied> i'm not 100% sure, but I think the blank line in .gitignore was causing mi6 to choke: https://github.com/skaji/mi6/issues/166#issuecomment-1399647182

[01:29] *** Homer_Simpson is now known as pingu

[01:29] <discord-raku-bot> <stevied> i was able to install a module with 2022.12 that I couldn't earlier after getting rid of blank line

[01:30] <discord-raku-bot> <:(**@rest, *%rest)> Homer_Simpson: do you have a discord

[01:33] <pingu> yes

[01:33] <pingu> ill check it

[01:34] <pingu> I wasnt logged in

[01:34] <pingu> so I cant see the chat history

[01:35] <pingu> oh wait is it #raku-irc not #general ?

[01:36] <discord-raku-bot> <:(**@rest, *%rest)> raku-irc is different from general

[01:38] <discord-raku-bot> <Saul Goodman> I see say "6" && " "; but I dont see how that would help

[01:38] <discord-raku-bot> <Saul Goodman> 2 mins

[01:39] <discord-raku-bot> <:(**@rest, *%rest)> can you recreate the data.ldr or just send the file

[01:41] <discord-raku-bot> <:(**@rest, *%rest)> @Saul Goodman

[01:43] <discord-raku-bot> <Saul Goodman> the data is 6 6

[01:43] <discord-raku-bot> <Saul Goodman> but if I do when ("0" && " ") I get "line is ype 0"

[01:43] <discord-raku-bot> <Saul Goodman> which is wrong

[01:44] <discord-raku-bot> <Saul Goodman> because its 6

[01:46] <discord-raku-bot> <:(**@rest, *%rest)> "0" && " " is " " i think

[01:49] <raschipi> m:"0" && " "

[01:50] <evalable6> raschipi, rakudo-moar d52342eb0: OUTPUT: «WARNINGS for /tmp/ItQOvvBmD8:␤Useless use of constant string " " in sink context (line 1)␤»

[01:50] <raschipi> m: say "0" && " "

[01:50] <camelia> rakudo-moar 85240f0c2: OUTPUT: « ␤»

[01:52] <discord-raku-bot> <:(**@rest, *%rest)> m: dd '0' && ' '

[01:53] <raschipi> m: dd '0' && ' '

[01:53] <camelia> rakudo-moar 85240f0c2: OUTPUT: «" "␤»

[01:53] <discord-raku-bot> <:(**@rest, *%rest)> back to @Saul Goodman

[01:53] <discord-raku-bot> <:(**@rest, *%rest)> what error do you have exactly

[01:54] <discord-raku-bot> <Saul Goodman> theres no error its printing the wrong result

[01:54] <discord-raku-bot> <Saul Goodman> my file is 6 6 but the console is saying that its line 0

[01:55] <discord-raku-bot> <:(**@rest, *%rest)> no?

[01:55] <discord-raku-bot> <:(**@rest, *%rest)> it says invalid line type

[01:56] <raschipi> If you smartmatch against True, it's always success.

[01:56] <raschipi> Ops, please ignore what I said, && returns the argument.

[01:58] <discord-raku-bot> <Saul Goodman> I'm telling you what error I have with my code

[01:58] <discord-raku-bot> <Saul Goodman> though its not so much an error per se

[01:59] <discord-raku-bot> <Saul Goodman> https://pastebin.com/gnC4jUQ5

[01:59] <discord-raku-bot> <:(**@rest, *%rest)> i recreated it here https://glot.io/snippets/ghq0smqf9n

[02:01] <discord-raku-bot> <:(**@rest, *%rest)> don't know what are you expecting

[02:01] <discord-raku-bot> <Saul Goodman> that code does not work if I make it 0 6

[02:02] <discord-raku-bot> <Saul Goodman> (in the file)

[02:05] <discord-raku-bot> <:(**@rest, *%rest)> i saw the problem @[0][0..1] is not a string

[02:05] <discord-raku-bot> <:(**@rest, *%rest)> but you matched it against one

[02:06] <discord-raku-bot> <Saul Goodman> its a sequence

[02:06] <discord-raku-bot> <Saul Goodman> according to dd

[02:08] <discord-raku-bot> <:(**@rest, *%rest)> you have to join them

[02:08] <discord-raku-bot> <:(**@rest, *%rest)> https://glot.io/snippets/ghq0smqf9n

[02:09] <discord-raku-bot> <Saul Goodman> aight that works

[02:22] *** epony left
[02:23] *** epony joined
[02:34] *** jpn joined
[02:41] *** jpn left
[02:47] <tonyo> stevied: if you could install the glob branch of fez and give it a go it'd much appreciated

[02:49] <discord-raku-bot> <stevied> /tonyo ok, will do. is there a way to do a "fake" upload

[02:49] <discord-raku-bot> <stevied> I'd like to test it without actually uploading

[02:50] <discord-raku-bot> <stevied> I can throw an exit; in the code for now but wondering if there is a better way

[02:56] <discord-raku-bot> <stevied> i'm getting a message that "Directory version(0.0.10) appears to exist"

[02:56] <discord-raku-bot> <stevied> i guess some kind of check was added in the glob branch? how do I circumvent that?

[03:01] *** codesections left
[03:06] *** razetime joined
[03:29] *** jpn joined
[03:34] *** jpn left
[03:43] <tonyo> stevied if you upload you have about 24 hours to run a fez remove <full dist, same that's output when you `fez list`>

[03:43] <tonyo> the other option is doing something like an ACME package, that's what i use to test things

[03:44] <tonyo> (Fez::ACME), it's just an empty module

[03:46] <rf> When would I ever use try?

[03:50] <raschipi> To separate error handling from normal code. Say an exception is very unlikely, you don't want to keep the code that deals with it mixed in normal flow.

[03:50] <discord-raku-bot> <stevied> yeah, used the earlier today, in fact.

[03:56] <rf> Makes sense

[04:01] *** rf left
[04:05] *** razetime left
[04:21] *** pingu left
[04:24] *** jpn joined
[04:30] *** jpn left
[04:45] *** raschipi left
[04:50] <tonyo> also optionally including functionality if some module exists

[04:50] <tonyo> try require ::("Terminal::ANSIColor")

[04:54] <shmup> messing around with raku. i have a socket listener and it's just echo'ing back the $conn.line   from a client connection, if i ^c then my react block blows up "Malformed UTF-8". can someone point me to a doc that can set me straight? is there a convention that isn't trying to catch it?

[05:01] *** perryprog left
[05:01] *** oodani_ left
[05:02] *** MasterDuke left
[05:02] *** energizer left
[05:11] *** oodani joined
[05:12] *** perryprog joined
[05:12] *** energizer joined
[05:22] *** razetime joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:11] *** jpn joined
[06:18] *** jpn left
[06:34] *** jpn joined
[06:38] *** jpn left
[06:50] *** Kernspin left
[06:51] *** Kernspin joined
[07:23] *** snonux joined
[07:51] *** rantanplan joined
[07:57] *** jpn joined
[08:04] *** jpn left
[08:56] *** Sgeo left
[09:09] *** Xliff joined
[09:30] *** jpn joined
[09:38] *** jpn left
[10:02] *** jjido joined
[10:10] *** sena_kun joined
[10:11] *** Kernspin left
[10:12] *** Kernspin joined
[10:16] *** Kernspin left
[10:18] *** Kernspin joined
[10:26] *** jpn joined
[10:58] *** jjido left
[10:59] *** jjido joined
[11:19] *** rantanplan left
[11:19] *** snonux left
[11:21] *** jjido left
[11:22] *** jjido joined
[11:24] *** ab5tract joined
[11:41] *** lichtkind joined
[11:46] *** jpn left
[11:53] *** Kernspin left
[11:53] *** jjido left
[11:56] *** Kernspin joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:11] *** rantanplan joined
[12:11] *** rantanplan left
[12:11] *** snonux joined
[12:12] *** snonux left
[12:12] *** snonux joined
[12:17] *** snonux left
[12:23] *** razetime left
[13:09] <discord-raku-bot> <:(**@rest, *%rest)> are objects that don’t have .Bool coercer implemented always truthy?

[13:12] *** razetime joined
[13:16] <lizmat> m: dd Mu.Bool

[13:16] <camelia> rakudo-moar 775bdb283: OUTPUT: «Bool::False␤»

[13:16] <lizmat> m: dd Mu.new.Bool

[13:16] <camelia> rakudo-moar 775bdb283: OUTPUT: «Bool::True␤»

[13:16] <lizmat> that's your default .Bool

[13:16] <lizmat> it's true if it is instantiated, else not

[13:17] *** ab5tract left
[13:20] <discord-raku-bot> <:(**@rest, *%rest)> hmm ok

[13:54] *** raschip joined
[14:12] *** razetime left
[14:13] *** jpn joined
[14:18] *** jpn left
[15:18] *** linkable6 left
[15:18] *** evalable6 left
[15:19] *** linkable6 joined
[15:19] <discord-raku-bot> <:(**@rest, *%rest)> m: say '2' ~~ /[0-9]/ 

[15:20] *** evalable6 joined
[15:20] <discord-raku-bot> <:(**@rest, *%rest)> m: say '2' ~~ /<[0..9]>/

[15:20] <discord-raku-bot> <:(**@rest, *%rest)> hmm

[15:22] <discord-raku-bot> <Nemokosch> for what?

[15:23] *** jpn joined
[15:23] *** cfa joined
[15:26] <discord-raku-bot> <:(**@rest, *%rest)> why does /[0-9]/ give an error

[15:27] <discord-raku-bot> <Nemokosch> first you tell me: what behavior you'd prefer?

[15:30] *** jpn left
[15:31] <discord-raku-bot> <:(**@rest, *%rest)> i want to parse characters in between 0 and 9

[15:33] <discord-raku-bot> <:(**@rest, *%rest)> /[0-9]/ is how i would do it better yet /\d/ but im talking more general than that

[15:34] <discord-raku-bot> <:(**@rest, *%rest)> /[0-9]/ instead in raku throw an error

[15:37] <raschip> [...] in a Raku regex is a non-capturing group, not a character class

[15:38] <discord-raku-bot> <:(**@rest, *%rest)> m: say '0-9' ~~ /[0-9]/

[15:38] *** rf joined
[15:38] <discord-raku-bot> <:(**@rest, *%rest)> what

[15:39] <discord-raku-bot> <:(**@rest, *%rest)> m: say '0-9' ~~ /0-9/

[15:39] <raschip> m: say '0-9' ~~ /[0\-9]/

[15:39] <camelia> rakudo-moar ea60d168b: OUTPUT: «｢0-9｣␤»

[15:39] <discord-raku-bot> <Nemokosch> yeah ultimately you'd want to learn Raku regexes

[15:39] <raschip> You need to quote the -

[15:39] <discord-raku-bot> <:(**@rest, *%rest)> how can yours work

[15:40] <discord-raku-bot> <:(**@rest, *%rest)> like \-?

[15:40] <raschip> yep

[15:40] <raschip> m: say '0-9' ~~ /0\-9/

[15:40] <camelia> rakudo-moar ea60d168b: OUTPUT: «｢0-9｣␤»

[15:40] <discord-raku-bot> <:(**@rest, *%rest)> m: say '0-9' ~~ /0\-9/ 

[15:40] <discord-raku-bot> <Nemokosch> it doesn't show up in the bridged message

[15:40] <discord-raku-bot> <Nemokosch> misleading

[15:40] <discord-raku-bot> <:(**@rest, *%rest)> discord ate away the \ 😭

[15:41] <discord-raku-bot> <Nemokosch> tbh I'd rather really quote strings inside a regex

[15:41] <discord-raku-bot> <Nemokosch> even looks better usually

[15:41] <discord-raku-bot> <Nemokosch> and it's more transparent overall

[15:45] *** jpn joined
[15:49] <discord-raku-bot> <:(**@rest, *%rest)> the repetition operator in raku regex is **

[15:49] <raschip> Yep, exponentiation

[15:49] <raschip> aaa == a**3

[15:51] <discord-raku-bot> <:(**@rest, *%rest)> m: regex ip-num { \d**1..3 } regex ip { (<ip-num>) '.' (<ip-num) '.' (<ip-num) '.' (<ip-num) }  say '192.168.1.1' ~~ ip; 

[15:51] *** jpn left
[15:51] <discord-raku-bot> <:(**@rest, *%rest)> m: regex ip-num { \d**1..3 } regex ip { (<ip-num>) '.' (<ip-num>) '.' (<ip-num>) '.' (<ip-num>) }  say '192.168.1.1' ~~ ip; 

[15:51] <discord-raku-bot> <:(**@rest, *%rest)> bruh

[15:54] *** perlbot left
[15:54] *** simcop2387 left
[15:57] <raschip> m: '192.168.1.1' ~~ /(\d**1..3)**4 % '.'/

[15:57] <camelia> rakudo-moar ea60d168b: ( no output )

[15:58] <raschip> m: say '192.168.1.1' ~~ /(\d**1..3)**4 % '.'/

[15:58] <camelia> rakudo-moar ea60d168b: OUTPUT: «｢192.168.1.1｣␤ 0 => ｢192｣␤ 0 => ｢168｣␤ 0 => ｢1｣␤ 0 => ｢1｣␤»

[15:59] <discord-raku-bot> <:(**@rest, *%rest)> m: my regex ip-num { \d**1..3 } my regex ip { <ip-num>**4 % \. }  my $match = '192.168.1.1' ~~ &ip;  dd $match; 

[16:00] <discord-raku-bot> <:(**@rest, *%rest)> m: my regex ip-num { \d**1..3 } my regex ip { <ip-num>**4 % \. }  my $match = '192.168.1.1' ~~ &ip;  say $match; 

[16:01] <discord-raku-bot> <:(**@rest, *%rest)> raku regex are more complex and feature rich than perl/pcre regex lol

[16:03] *** snonux joined
[16:03] *** snonux_ joined
[16:06] <discord-raku-bot> <:(**@rest, *%rest)> m: my regex hex {   ‘0x’?   <[\dA..Fa..f]>+ }  say ‘DEAD’ ~~ &hex; 

[16:06] <discord-raku-bot> <:(**@rest, *%rest)> m: my regex hex {   ‘0x’?   <[\dA..Fa..f]>+ }  say ‘0x1234DEAD’ ~~ &hex; 

[16:07] <raschip> Of course Raku regexes are more feature rich than Perl re, they are used to parse Raku itself...

[16:07] <discord-raku-bot> <:(**@rest, *%rest)> i thought pcre is as complex as it can get

[16:09] <raschip> Well, they are, really, but the features that make them as complex as Raku's are obscure and hard to use. They are Turing-complete, after all. Raku's regexes make those features way easier to use.

[16:10] <discord-raku-bot> <:(**@rest, *%rest)> m: my regex hex-prefix { ‘0x’ } my regex hex-digit {   \d | <[A..F]> | <[a..f]> } my regex hex {   <hex-prefix>?   <hex-digit>+ }  say ‘0x1234Dead’ ~~ &hex; 

[16:10] <discord-raku-bot> <:(**@rest, *%rest)> i think this time i can use a grammar?

[16:12] <raschip> Regexes and Grammars are the same thing, really, just two ways of declaring the same objects. Use whatever is more convenient...

[16:13] <discord-raku-bot> <:(**@rest, *%rest)> ok so raku regexes are both used for lexing and parsing... grammars are just regexes under the hood

[16:17] *** snonux left
[16:18] *** snonux joined
[16:38] *** snonux left
[16:38] *** snonux_ left
[17:13] *** derpydoo joined
[17:18] *** snonux joined
[17:18] *** snonux_ joined
[17:35] *** jgaz joined
[17:43] <rf> Can I make zef run tests in the it/ directory for integration tests?

[17:49] <[Coke]> rf; "zef test ." ?

[17:50] <[Coke]> oh, it/ isn't a typo. hmm

[17:50] *** jpn joined
[17:52] *** derpydoo left
[17:57] <rf> Yeah like if I have tests in it/

[17:57] <rf> or xt/

[17:57] *** djerius left
[18:00] *** reportable6 left
[18:01] <[Coke]> https://github.com/ugexe/zef/blob/main/lib/Zef/Service/Shell/prove.rakumod#L106

[18:01] <[Coke]> Looks like the t is hardcoded

[18:03] *** reportable6 joined
[18:10] *** jpn left
[18:24] *** eseyman left
[18:24] *** jjido joined
[18:30] *** simcop2387 joined
[18:32] *** perlbot joined
[18:32] *** jpn joined
[18:34] *** cfa left
[18:42] <rf> Darn

[18:43] <rf> ugexe: Is there any way to run tests in it/ and t/ with zef?

[18:43] *** p6steve joined
[19:00] <ugexe> no, like tests in e.g. xt/ are run during authoring/development typically and so the functionality doesn't really need to exist for general distribution consumption. i usually run my xt/ tests in CI manually via `raku -I. xt/my-test.rakutest` or like `prove6 -I. xt/`

[19:01] <ugexe> so theoretically i might add xt/, but then you're asking for it/ which shows other people will want foot/ etc

[19:11] <rf> Makes sense

[19:11] <rf> Thanks for the response

[19:19] <ugexe> another technique is running like SKIP-ALL() or whatever it is unless some ENV var is set

[19:19] <ugexe> so put all your tests in t/, but at the top of the test check for %*ENV<RAKU_AUTHOR_TESTS> or some such

[19:20] <ugexe> then you can do `RAKU_AUTHOR_TESTS=1 zef test .`

[19:24] <rf> I just added prove6 to my CI pipeline I think it'll be fine, realistically I'll be the only one authoring this so if it fails CI and gets authored that's more of a me problem

[19:25] *** Sgeo joined
[19:31] *** epony left
[19:33] *** jpn left
[19:52] *** eseyman joined
[20:05] *** jpn joined
[20:15] *** jpn left
[20:19] *** xinming joined
[20:58] *** epony joined
[21:00] *** Sauvin left
[21:01] *** Sauvin joined
[21:07] *** snonux left
[21:07] *** snonux_ left
[21:10] *** jgaz left
[21:11] *** pingu joined
[21:19] <ugexe> yeah thats how i handle it as well with zef, which has xt/

[21:19] <ugexe> well i just run `raku -I xt/tet-name.rakutest` but yeah the same sentiment

[21:25] <pingu> is there a way to do this without having to do .join https://pastebin.com/jL3smrqy

[21:26] <pingu> the contents of data.ldr is: 0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n

[21:27] <pingu> also im getting error: Type check failed in binding to parameter '$address'; expected Str but got Any

[21:27] <pingu> validateline type should not have to start making new arrays and joining stuff

[21:31] <pingu> just for @x -> @line works but I wanted to pass the line number as a range or an int as a function argument

[21:32] <pingu> not have the function hardcoded to just do all lines at once

[21:38] <pingu> ok I fixed one thing, this works: given (@x[0][0] ~ @x[0][1])

[21:38] <pingu> now I dont need the for loop

[21:40] <discord-raku-bot> <Nemokosch> could you quickly say what you are trying to achieve?

[21:41] <pingu> its fine I fixed it

[21:42] <pingu> only problem is, I thought <space>0<space>0\n would be invalid ldraw but its valid so now I gotta change the code again

[21:48] <pingu> so: my $line = 0; my $index = 0; loop (@x[$line][$index] = 0 ; @x[$line][$index] le chr(32) ; $index++) { #`{...}`}

[21:55] <raschip> v6.e.PREVIEW isn't available in the REPL?

[21:59] *** thundergnat joined
[21:59] <thundergnat> m: https://gist.github.com/thundergnat/ff2f5e228fdb05c6a3bb680b28e9e68c

[21:59] <camelia> rakudo-moar 52b909216: OUTPUT: «0␤1␤2␤3␤4␤5␤-1␤-1␤3␤4␤0␤»

[22:00] <thundergnat> pingu: seems like you are doing an awful lot of extra work. See the above gist ^^

[22:03] <pingu> yes but at least im learning, not just copying other peoples code

[22:04] <pingu> ill try this thx

[22:06] <thundergnat> 👍 Kudos for learning. Nothing wrong with copying either, as long as you are doing it to gain understanding.

[22:13] *** jpn joined
[22:18] *** jpn left
[22:33] *** jpn joined
[22:36] *** sena_kun left
[22:44] *** jpn left
[22:46] *** jjido left
[23:00] *** jpn joined
[23:02] <discord-raku-bot> <Nemokosch> raschip: the way the REPL works is, well, not very smart, simply put

[23:03] <discord-raku-bot> <Nemokosch> it doesn't actually create a compilation unit, for example, so it cannot set a version

[23:03] <discord-raku-bot> <Nemokosch> maybe if you can get rakudo execute stuff before opening the REPL

[23:05] *** jpn left
[23:05] *** jpn joined
[23:06] *** Air4x joined
[23:06] <discord-raku-bot> <Nemokosch> pingu: what thundergnat said + please keep in mind that Raku is kind of a language with batteries, a nuclear reactor, a swiss army knife and a space station included

[23:06] <discord-raku-bot> <Nemokosch> one of the most common things to happen is "oh why did nobody tell me this cool thing existed"

[23:10] *** jpn left
[23:11] <raschip> Nemokosch: True, but I'm having REPL problems lately and I wasn't sure if it was just me or a general thing, thanks.

[23:11] <tellable6> raschip, I'll pass your message to Nemokosch

[23:12] <discord-raku-bot> <Nemokosch> freshly defined operators also wouldn't work, as another example

[23:24] *** jpn joined
[23:37] <tonyo> .

