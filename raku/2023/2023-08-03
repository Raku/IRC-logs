[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:43] *** guifa_ joined
[00:43] *** poohman joined
[00:45] *** guifa left
[00:57] *** jpn joined
[00:57] <thowe> I have, technically, now been paid to write Raku code.

[01:02] *** jpn left
[01:07] *** perlbot left
[01:07] *** simcop2387 left
[01:09] *** perlbot joined
[01:12] *** razetime joined
[01:12] *** simcop2387 joined
[01:50] *** MasterDuke left
[01:53] <guifa_> thowe++ !

[02:43] *** rf joined
[02:45] *** jpn joined
[02:47] *** rf left
[02:50] *** jpn left
[03:22] <thowe> It's not as exciting as it sounds.  I had to do some figuring and tabulating and I decided it would be fun to do it with Raku.  So, I was on the clock, and decided to use Raku.  thus "technically".

[03:25] *** jpn joined
[03:29] *** jpn left
[04:09] *** razetime left
[04:14] *** TieUpYourCamel left
[04:27] *** TieUpYourCamel joined
[04:50] *** razetime joined
[05:00] *** jpn joined
[05:05] *** jpn left
[05:23] *** jetchisel left
[05:24] *** jetchisel joined
[05:42] *** siavash joined
[05:45] <tonyo> technically correct is the best kind, fwiw

[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:03] *** kjp left
[06:06] *** kjp joined
[06:14] *** tea3po left
[06:15] *** teatime joined
[06:16] *** swaggboi left
[06:21] *** jjido joined
[06:48] *** jpn joined
[06:53] *** jpn left
[07:02] *** camelia left
[07:02] *** patrickb left
[07:02] *** patrickb joined
[07:03] *** atweedie left
[07:03] *** clarkema left
[07:03] *** heartburn left
[07:03] *** swaggboi joined
[07:05] *** atweedie joined
[07:05] *** clarkema joined
[07:05] *** heartburn joined
[07:18] *** Kubic joined
[07:19] <Kubic> hello

[07:20] *** Kubic left
[07:31] *** gugod left
[07:36] *** camelia joined
[07:36] *** gugod joined
[07:45] *** jpn joined
[07:50] *** Sgeo left
[07:54] *** jpn left
[07:56] *** jjido left
[08:10] *** sena_kun joined
[08:13] *** dakkar joined
[08:13] *** teatwo joined
[08:14] *** teatwo left
[08:14] *** teatwo joined
[08:16] *** teatime left
[08:19] *** melezhik joined
[08:19] <melezhik> o/

[08:19] <melezhik> how can I make raku function named argument mandatory?

[08:20] *** razetime left
[08:22] <melezhik> ok, should add ! after an argument name ))

[08:31] *** razetime joined
[08:37] <lizmat> yup

[08:42] <melezhik> yeah, thanks!

[08:42] <melezhik> how things are Liz?

[08:43] <lizmat> okish... weather has been sh*t here the past weeks and at least the coming week

[08:43] <melezhik> oh, in Denmark?

[08:43] <lizmat> rain most of the day: good for the plants, not so good for my mood (or my joints for that matter)

[08:43] <lizmat> no, in NL

[08:43] <lizmat> close enough

[08:43] <melezhik> yeah, NL not close to Denmark

[08:44] <lizmat> at least I'm not at Wacken  :-)

[08:44] <melezhik> yeah, I know rain could be annoying)) you can fight it by drinking some coffee ))

[08:45] <melezhik> Wacken? where it is?

[08:45] <lizmat> https://www.youtube.com/watch?v=j81buqQR1V0

[08:45] <melezhik> ah, ok, already goggled it

[08:45] <lizmat> north of Germany, close to Denmark :-)

[08:45] <melezhik> I see

[08:46] <melezhik> I almost convinced my company to use Raku in production, so finger crossed , yet another use case for Raku ))

[08:46] <lizmat> ++melezhik 

[08:47] <melezhik> don't promise anything, but looks like at least my technical management is quite loyal to the language

[08:47] <lizmat> good to hear!

[08:47] <melezhik> so ...

[08:47] <melezhik> yeah, I did not expect this at firts

[08:48] <melezhik> basically I am writing transpiller for a vast configuration system , so that developer would defined application configuration in pure Raku

[08:48] <melezhik> those guys write code mostly in golang, so ... surprise, surprise ,

[08:49] <lizmat> brb&

[08:49] <melezhik> also if things get going in a good way, my devops mate would be learning some Raku as well ))

[08:49] <melezhik> see ya

[08:50] <melezhik> actually mates, few of them

[09:20] *** jpn joined
[09:25] *** jpn left
[09:36] *** jpn joined
[09:42] *** jpn left
[09:45] <discord-raku-bot> <antononcube> @thowe I was being payed to write Raku code during the first few months of this year. üôÇ (Writing in Raku was the primary effort.)

[09:47] <discord-raku-bot> <antononcube> More precisely, "writing in Raku was the primary job."

[09:56] *** jpn joined
[10:10] *** jpn left
[10:18] *** melezhik left
[10:20] *** jpn joined
[10:20] *** abraxxa joined
[10:25] *** jpn left
[10:34] *** siavash left
[10:44] *** wafflus joined
[10:47] <wafflus> i'm trying to do a search and replacement across multiple files using perl6 -pi.bak -e 's/search/replace/g' files

[10:47] <wafflus> however there is no i option

[10:47] <wafflus> does anyone know how to do it without having to write a seperate raku program

[10:50] <dutchie> sed

[10:51] <lizmat> wafflus: App:Rak with the --modify-files option: https://raku.land/zef:lizmat/App::Rak

[10:55] <wafflus> k thanks lizmat i will check it out look promising

[10:55] <wafflus> dutchie i kind of want to use raku regex

[10:56] <wafflus> not sure how i install this app:rak

[10:57] *** jpn joined
[10:58] <lizmat> zef install App::Rak::Complete   # also installs all optional dependencies

[10:59] <wafflus> k ty installing

[11:01] <wafflus> k done that not sure how to run it typing rak does nothing

[11:04] *** jpn left
[11:09] <lizmat> rak --help

[11:09] <lizmat> doesn'd do anything?

[11:09] <wafflus> Command 'rak' not found, did you mean:

[11:09] <lizmat> ok, then you need to adjust your path

[11:10] <wafflus> doesnt matter thanks anyway

[11:10] <lizmat> you'd need to add install/share/perl6/site/bin to your path

[11:11] <lizmat> from the rakudo install

[11:12] <lizmat> wafflus: which version of Rakudo are you using ?

[11:12] <wafflus> 6.d

[11:13] <lizmat> what does "raku -v" say ?

[11:13] *** teatwo left
[11:14] <lizmat> brb&

[11:14] <wafflus> Welcome to Rakudo‚Ñ¢ v2023.06.

[11:14] <wafflus> Implementing the Raku¬Æ Programming Language v6.d.

[11:14] <wafflus> Built on MoarVM version 2023.06.

[11:14] *** teatwo joined
[11:25] <lizmat> ok, that's pretty recent  :-)

[11:26] <wafflus> i'm using windows btw

[11:26] <lizmat> ah.. hmm... I broke my last Windows machine 20+ years ago, so *I* won't be able to be of much help on that, I'm afraid

[11:27] <wafflus> k its a pitty i can't just ise the i option

[11:28] <wafflus> i did try installing on wsl but it doesnt even install

[11:30] <lizmat> But conceptually as Raku code:  for @files>>.IO {  .slurp(.subst(/foo/,'bar',:g)) }

[11:30] <lizmat> But conceptually as Raku code:  for @files>>.IO {  .spurt(.slurp.subst(/foo/,'bar',:g)) }

[11:30] <wafflus> k i can use that from the terminal?

[11:33] <lizmat> raku -e 'for <file1 file2>>>.IO {  .spurt(.slurp.subst(/foo/,'bar',:g)) }

[11:33] <lizmat> should do the trick I thing, barring quoting issues maybe

[11:33] <lizmat> *think

[11:34] <wafflus> ok i shall mess I take it that i can use terminal wildcards though?

[11:36] <lizmat> dir * | raku -e 'for $*IN.lines>>.IO {  .spurt(.slurp.subst(/foo/,q/bar/,:g)) }'

[11:36] <wafflus> ok the 2nd option seems easier i will see if it wokrs

[11:36] <lizmat> actually shorter:

[11:36] <wafflus> works

[11:36] <lizmat> dir * | raku -e 'for lines>>.IO {  .spurt(.slurp.subst(/foo/,q/bar/,:g)) }'

[11:37] *** jpn joined
[11:38] <wafflus> bit confused the syntax seems different than the s/// i sually use

[11:39] <lizmat> well, s/// depends on $_ being set, and $_ in the above example is the IO::Path object of the file

[11:39] <lizmat> so that wouldn't work

[11:40] <lizmat> fwiw, .subst is what is being called under the hood if you do s///

[11:42] *** jpn left
[11:42] <wafflus> look weird to me¬† /,q and ,:g¬† i guess the g is a global flag not sure the use of the comma syntax make me feel confused :P

[11:43] <lizmat> q/foo/ is just the same as 'foo'   but it won't get you in trouble with quoting rules on the command line

[11:44] <wafflus> k why is there comma at the end?

[11:44] <lizmat> that's separation of arguments

[11:44] <wafflus> it seems to work except in widnows your have to get the name of the file and then pipe it btw

[11:45] <lizmat> .subst( /foo/, q/bar/, :global )

[11:45] <lizmat> if you want to be more verbose

[11:45] <wafflus> oh ofc but why don't they just use g instead of g?

[11:45] <wafflus> oh ofc but why don't they just use g instead of :g?

[11:46] <lizmat> because :g is an optional named argument to .subst

[11:46] <lizmat> without it, it would only do the substitution once

[11:47] <wafflus> k but what the use of :?

[11:47] <lizmat> in Perl terms: :foo is short for: foo => True

[11:48] <wafflus> k thnaks not sure i will remeber all this it seems to be a bit overly verbose

[11:58] *** jjido joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:14] *** jjido left
[12:22] <wafflus> syntax question how do i get this working¬† for 1,2,3 {with $_ { when * > 0 {-($_)}; when $_ < 0 {-($_)}; when 0 {0}; }}

[12:22] <wafflus> it's supposed to retern the negated numvbers i can get it to work if use map I just can't work out how to do one liner for loop

[12:23] <wafflus> I'm sure i manged to do it once before as well

[12:24] *** A26F64 joined
[12:25] <lizmat> $_ is already set inside the for loop, so the with $_ {   }  is superfluous

[12:26] <lizmat> m: say (1,2,3).map(-*)

[12:26] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´(-1 -2 -3)‚ê§¬ª

[12:27] <wafflus> k i already got it working using map though it was not nice looking like yoiurs

[12:27] <lizmat> the * is a Whatever, and in some simple syntax situations it creates a WhateverCode

[12:28] <lizmat> -*  is the equivalent of -> $_ { -$_ }

[12:30] <wafflus> it's a closure

[12:31] <wafflus> ??

[12:31] <lizmat> yes

[12:31] <lizmat> * + 42   would be the same as   -> $_ { $_ + 42 }

[12:32] <lizmat> m: my $foo = * + 42; say $foo(666)

[12:32] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´708‚ê§¬ª

[12:32] <wafflus> thanks but do you have any idea how to take the code i wrote and stick it in a for loop i jsut get nil back i'm sure i somehow manged to get it to work before

[12:32] <lizmat> a for loop returns Nil unless you put a "do" in front of it

[12:33] <lizmat> m: say do for 1,2,3 { -$_ }

[12:33] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´(-1 -2 -3)‚ê§¬ª

[12:34] <wafflus> k that seems to work ty (i'm sure i somehow got it to work before because i was orginally going to ask a different question) :)

[12:35] <wafflus> raku seems to have a billion different ways to do things

[12:36] <lizmat> well, yes, it's multi-paradigm  :-)

[12:37] *** razetime left
[12:43] <wafflus> ok now i have my code (do for 1,2,3 -> $test {with $test { when $test > 0 {-($_)}; when $test < 0 {-($_)};}; FIRST {say "starting loop";}; }).grep(-1) using the FIRST to print a message seems to make it outpot nothing

[12:43] *** tejr left
[12:45] <lizmat> m: for 1,2,3 { FIRST .say }

[12:45] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´1‚ê§¬ª

[12:45] <lizmat> why do you want to use "with" there ?

[12:46] <lizmat> and then not use the topic afterwards ?

[12:46] <lizmat> also, you're negating always, except in the 0 case ?

[12:48] <wafflus> i'm using with because A I saw it in a video¬† B I don't want to get things working one way first C i wan to check its valid way first

[12:48] *** tejr joined
[12:49] <discord-raku-bot> <nemokosch> That's a lot of messages

[12:49] <wafflus> i want to learn one way first

[12:49] <wafflus> i move onto another way of doing things then i will loose my train of thought

[12:50] <wafflus> i'm always negating the number yes

[12:50] <wafflus> postive to negative and negative to postive is what i want to do

[12:51] <wafflus> i know i could also use a given as well but that is slightly different and slightly more verbose as well

[12:51] <discord-raku-bot> <nemokosch> Okay but do you know what with even does?

[12:52] <wafflus> i thought it checked if it the value is set

[12:53] <wafflus> defined

[12:53] <discord-raku-bot> <nemokosch> That's right

[12:53] <wafflus> prize? :)

[12:54] <discord-raku-bot> <nemokosch> Why do you need it when the values are clearly set, then?

[12:54] <wafflus> well what if there not?

[12:54] <discord-raku-bot> <nemokosch> But you defined the values, lol

[12:55] <wafflus> > (do for -1,2,3.WHAT -> $test {with $test { when $test > 0 {-($_)}; when $test < 0 {-($_)};};; })

[12:55] <wafflus> could a situation not arrive that it could happan?

[12:55] <discord-raku-bot> <nemokosch> That's hard to read, especially on discord üò¨

[12:57] <wafflus> is it not good practice to always check these things I assume that why they invented those checks in the first place?

[12:57] <wafflus> i dunno the answers or the best way

[12:57] <lizmat> if $a > 0 do something, if $a < 0 do the same ?

[12:57] <discord-raku-bot> <nemokosch> To give one the choice to decide

[12:58] <discord-raku-bot> <nemokosch> Raku really has this "you are free to know better" mindset

[12:59] <discord-raku-bot> <nemokosch> lizmat raised a good point though

[12:59] <wafflus> the reason i did the check is also because i found out that raku can have something be the type of an int but also at the same time not be an int? and then weirdness

[13:00] <discord-raku-bot> <nemokosch> No, you didn't find that yet...

[13:00] <discord-raku-bot> <nemokosch> That will be with the allomorphs

[13:00] <lizmat> https://docs.raku.org/type/Allomorph

[13:01] <discord-raku-bot> <nemokosch> Right now you are still safe and naive üòõ

[13:02] <wafflus> ;|

[13:02] <wafflus> maybe non of this matters and i'm safe to ignore the monster?

[13:03] <lizmat> well, you came here guidance, no?

[13:03] <discord-raku-bot> <nemokosch> Look, if this then do x and if that then also do x will never make sense

[13:03] <discord-raku-bot> <nemokosch> There are no monsters that would monkey-patch logic on the way

[13:04] <lizmat> also the use of "with" and then not using the topic in conditions...  

[13:04] <discord-raku-bot> <nemokosch> I think that's okay. if .defined doesn't look superior to me

[13:05] <lizmat> yeah, but the whole point of "with" is that it also sets the topic

[13:05] *** poohman left
[13:05] <lizmat> with $test { when $_ > 0 { .... }; when $_ < 0 { ... } }

[13:05] <lizmat> would make more sense

[13:06] <discord-raku-bot> <nemokosch> Well, if your point is that it's better to use the topic than to copy-paste the expression in with

[13:06] <discord-raku-bot> <nemokosch> Then there's no disagreeing

[13:06] <lizmat> and then there's the thing that the "with" is not needed, as by default the topic us already set

[13:07] <wafflus> so its bad to set the topic with with?

[13:07] <lizmat> do for 1,2,3 { when $_ < 0 { ... }; when $_ > 0 { ... } }

[13:07] <lizmat> wafflus: no, that's one of the reasons "with" exists

[13:07] <lizmat> but you don't need to use "with" in that example, is what I'm saying

[13:08] <lizmat> you're adding unnecessary boilerplate

[13:08] <discord-raku-bot> <nemokosch> How would you extend this example to handle undefined values?

[13:09] <lizmat> if you expect that, *then* you can use "with" inside the for loop

[13:09] <lizmat> as I said: with $test { when $_ > 0 { .... }; when $_ < 0 { ... } }

[13:09] <lizmat> but then use the topic inside, I would say

[13:10] <lizmat> otherwise you might have well said:

[13:10] <lizmat> as I said: if $test.defined { when $test > 0 { .... }; when $test < 0 { ... } }

[13:10] <lizmat> s/as I said://  :-)

[13:11] <discord-raku-bot> <nemokosch> To be honest, I'm very biased towards the map-filter-reduce way of doing things overall

[13:11] <wafflus> maybe a seperate function that says validates user input first and checks it and then passes it onto anoher function would be simpler and cleaner?

[13:12] <lizmat> handle($input) if valid($input)

[13:12] <discord-raku-bot> <nemokosch> Perhaps it would be cleaner, that's why I'm so clueless about &prompt and the allomorphs ü§™

[13:14] <lizmat> m: dd promot

[13:14] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    promot used at line 1. Did you mean 'prompt'?‚ê§‚ê§¬ª

[13:14] <lizmat> m: dd prompt

[13:14] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´"¬ªWann treffen wir drei wieder zusamm?¬´"‚ê§¬ª

[13:14] <lizmat> m: dd prompt

[13:14] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´"¬ªWann treffen wir drei wieder zusamm?¬´"‚ê§¬ª

[13:15] <discord-raku-bot> <nemokosch> :DDD

[13:15] <lizmat> m: .say while prompt

[13:15] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´(Any)‚ê§(Any)‚ê§(Any)‚ê§(Any)‚ê§(Any)‚ê§¬ª

[13:16] <lizmat> m: liz@M1Mini rakudo % r '

[13:16] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> liz‚èè@M1Mini rakudo % r '‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§        statement modifier‚ê§       ‚Ä¶¬ª

[13:16] <lizmat> meh  copypasto fail

[13:16] <lizmat> m: while prompt() -> $_ { .say }

[13:16] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´¬ªWann treffen wir drei wieder zusamm?¬´‚ê§   ¬ªUm die siebente Stund‚Äò, am Br√ºckendamm.¬´‚ê§     ¬ªAm Mittelpfeiler.¬´‚ê§         ¬ªIch l√∂sche die Flamm.¬´‚ê§ ¬ªIch mit¬´‚ê§¬ª

[13:17] <lizmat> https://docs.raku.org/routine/prompt

[13:18] <discord-raku-bot> <nemokosch> > as of Rakudo 2018.08

[13:19] <discord-raku-bot> <nemokosch> Freedom!

[13:20] <discord-raku-bot> <nemokosch> Anyway, something happier

[13:21] <discord-raku-bot> <nemokosch> m: (1,2,3.WHAT).grep(Any:D).map(-*).say

[13:21] <discord-raku-bot> <Raku eval>  (-1 -2) 

[13:21] <discord-raku-bot> <nemokosch> It's so happy it even has a smiley

[13:22] <wafflus> ohh cool

[13:22] <wafflus> thanks

[13:22] <lizmat> m: m: (1,2,3.WHAT).map( { $_ if .defined } ).say

[13:22] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´(1 2)‚ê§¬ª

[13:23] <lizmat> m: (1,2,3.WHAT).map( { -$_ if .defined } ).say

[13:23] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´(-1 -2)‚ê§¬ª

[13:24] <discord-raku-bot> <nemokosch> There is a difference that makes .defined better most of the time

[13:24] <discord-raku-bot> <nemokosch> m: say (1 if False)

[13:24] <discord-raku-bot> <Raku eval>  () 

[13:24] <discord-raku-bot> <nemokosch> Oh dang, too late?

[13:25] <lizmat> a failing condition returns Empty

[13:25] <discord-raku-bot> <nemokosch> And that's what I hoped to see

[13:26] <discord-raku-bot> <nemokosch> m: my \gimme-that-already = (1 if False); dd gimme-that-already

[13:26] <discord-raku-bot> <Raku eval>  Empty 

[13:26] <discord-raku-bot> <nemokosch> Thankies

[13:27] <discord-raku-bot> <nemokosch> say Empty.defined, Empty ~~ Any:D

[13:27] <discord-raku-bot> <nemokosch> Oop

[13:28] <discord-raku-bot> <nemokosch> m: say Empty.defined, Empty ~~ Any:D

[13:28] <discord-raku-bot> <Raku eval>  FalseTrue 

[13:29] <discord-raku-bot> <nemokosch> Even if something is a concrete value as much as the type system is concerned, one can give it undefined semantics

[13:30] *** sena_kun left
[13:31] *** sena_kun joined
[13:33] <wafflus> one last simeple question : when I output a list using say for instance I can't tell where one value begins and another ends i can use a printf and formatted string to make it clearer but,¬† i'm wondering if there is something inbuilt that works

[13:33] <wafflus> i;ve tried .say problem is all the values blend toghter

[13:35] <discord-raku-bot> <nemokosch> they are separated by whitespace, for what it's worth

[13:35] <discord-raku-bot> <nemokosch> but the .raku output is more precise

[13:36] <discord-raku-bot> <nemokosch> m: say <<'Shine on' you crazy diamond>>.raku

[13:36] <discord-raku-bot> <Raku eval>  ("Shine on", "you", "crazy", "diamond") 

[13:36] <lizmat> wafflus: there's printf and sprintf if you are so inclined

[13:36] <wafflus> yeah i was using printf

[13:36] <wafflus> the raku seems better

[13:36] <discord-raku-bot> <nemokosch> dd also uses the .raku output

[13:36] <discord-raku-bot> <nemokosch> m: my $foo = <heavy metal>; dd $foo

[13:36] <discord-raku-bot> <Raku eval>  List $foo = $("heavy", "metal") 

[13:37] <discord-raku-bot> <nemokosch> it tries to bring some additional metadata as well

[13:38] <lizmat> dd is the tiny data dumper, so small it lost the "t"

[13:39] <wafflus> m: <<"apple pie" case>>.say;

[13:39] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´(apple pie case)‚ê§¬ª

[13:39] <wafflus> m: <apple pie case>>.say;

[13:39] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§(Any)‚ê§Useless use of ">" in expression "<apple pie case>>.say" in sink context (line 1)‚ê§¬ª

[13:39] <wafflus> m: <apple pie case>.say;

[13:39] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´(apple pie case)‚ê§¬ª

[13:40] <lizmat> m: .say for <<"apple pie" case>>

[13:40] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´apple pie‚ê§case‚ê§¬ª

[13:40] <lizmat> m: .say for <apple pie case>

[13:40] <camelia> rakudo-moar c1b1ae8a7: OUTPUT: ¬´apple‚ê§pie‚ê§case‚ê§¬ª

[13:40] <wafflus> that the problem i was having looks the same but different anways thankyou everyone i will use .raku from now on

[13:41] <wafflus> cu around

[13:42] *** wafflus left
[13:59] *** razetime joined
[14:00] *** A26F64 left
[14:04] *** Sgeo joined
[14:11] *** ab5tract joined
[14:12] *** nullzeiger joined
[14:12] *** abraxxa left
[14:14] <nullzeiger> Hello

[14:14] <lizmat> nullzeiger o/

[14:15] <nullzeiger> to start better Rakudo or Rakudo Star?

[14:15] <dakkar> Star is just rakudo plus a few generally-useful libraries

[14:15] <lizmat> Rakudo itself is pretty bare, so Rakudo Star is probably a better starting point

[14:15] <dakkar> so I'd say try that first, so you don't have to think about where/how to get those lbiraries

[14:16] <nullzeiger> Thanks I try with Rakudo Star

[14:17] <lizmat> and Rakudo Star comes with "zef" so you can easily install any additional modules

[14:19] <nullzeiger> For now, nothing in particular, just converting a simple program written in Perl

[14:22] <lizmat> https://docs.raku.org/language/5to6-nutshell might be of interest

[14:26] <nullzeiger> Thanks very helpful

[14:28] <nullzeiger> Is Emacs okay as a text editor for Raku?

[14:32] <dakkar> emacs works for me ‚ò∫ it's all text, after all

[14:33] <lizmat> nullzeiger am a vim addict myself, so couldn't say...  :-)   but you can take dakkar's word for it

[14:35] <nullzeiger> I'm also using Emacs right now on IRC, it's my favorite OS :-)

[14:40] <discord-raku-bot> <antononcube> @dakkar Do you use 0rg-mode? Do make Org-mode documents with Raku code?

[14:41] <discord-raku-bot> <antononcube> @nullzeiger I should try that (IRC-ing via Emacs.)

[14:47] <dakkar> antononcube: never started learning org-mode, can't help you

[14:48] <discord-raku-bot> <antononcube> @dakkar Org-mode allows Literate programming. So, you can interlace text with Raku code and then have Org-mode file "woven" (or "executed").

[14:49] <discord-raku-bot> <antononcube> @dakkar I do most of my Raku Literate programming with Markdown. I should try to do that with Org-mode more often...

[14:56] <nullzeiger> I'm ready to start and make errors

[14:57] <nullzeiger> Thanks for your help

[15:00] <ab5tract> Anyone have luck using the croservices/cro-http docker images? My Dockerfile is dying with `/bin/sh: 1: zef: not found`

[15:04] <lizmat> perhaps ask on #cro ?

[15:04] <ab5tract> good looking out lizmat++

[15:12] *** linkable6 left
[15:12] *** evalable6 left
[15:13] *** evalable6 joined
[15:14] *** linkable6 joined
[15:15] <discord-raku-bot> <librasteve> I just followed the cro gettings started

[15:15] <discord-raku-bot> <librasteve> https://cro.services/docs/intro/getstarted

[15:15] <discord-raku-bot> <librasteve> cro stub http hello hello && cro run

[15:16] *** nullzeiger left
[15:18] <discord-raku-bot> <librasteve> the cro stub makes a DF - but cro run does not use it

[15:19] <discord-raku-bot> <librasteve> then I went cd hello && > [2/5] RUN mkdir /app: #9 0.263 exec /bin/sh: exec format error ------ process "/bin/sh -c mkdir /app" did not complete successfully: exit code: 1

[15:20] <discord-raku-bot> <librasteve> > [2/5] RUN mkdir /app: #9 0.263 exec /bin/sh: exec format error ------ process "/bin/sh -c mkdir /app" did not complete successfully: exit code: 1

[15:20] <discord-raku-bot> <librasteve> ^^ guess this is the same error you are seeing

[15:21] <discord-raku-bot> <librasteve> fwiw you probably already know about cro/docs /docker-deployment.md

[15:22] <discord-raku-bot> <librasteve> so, ys I would raise an issue on cro GH or over at cro.services help

[15:26] *** jgaz_ left
[15:26] *** jgaz joined
[15:40] <ab5tract> librasteve: I wasn't aware of the docker deployment page

[15:40] <ab5tract> thanks for the tip

[16:26] *** linkable6 left
[16:26] *** evalable6 left
[16:27] *** linkable6 joined
[16:28] *** evalable6 joined
[16:30] *** Xliff joined
[16:31] <[Coke]> Team, anyone who is interesting in contributing to the docs (preferably by editing existing docs or writing new ones), please join #raku-doc and ping me.

[16:31] *** dakkar left
[16:34] <Xliff> m: class GimpMatrix2 is repr('CStruct') is export { has gdouble $.c0 is rw; has gdouble $.c1 is rw; has gdouble $.c2 is rw; has gdouble $.c3 is rw; method Array { my $a = [ 0e0 xx 2 ] xx 2; $a[0;0] := $!c0; $a[0;1] := $!c1; $a[1;0] := $!c2; $a[1;1] := $!c3; $a }; }; my $a = GimpMatrix2.new; $a.Array[1;0] = 4; $a.gist.say

[16:34] <camelia> rakudo-moar 36f561a3c: OUTPUT: ¬´===SORRY!===‚ê§Type 'gdouble' is not declared‚ê§at <tmp>:1‚ê§------>  repr('CStruct') is export { has gdouble‚èè $.c0 is rw; has gdouble $.c1 is rw; has‚ê§Malformed has‚ê§at <tmp>:1‚ê§------> trix2 is repr('CStruct') is export { has‚Ä¶¬ª

[16:34] <Xliff> m: class GimpMatrix2 is repr('CStruct') is export { has num64 $.c0 is rw; has num64 $.c1 is rw; has num64 $.c2 is rw; has num64 $.c3 is rw; method Array { my $a = [ 0e0 xx 2 ] xx 2; $a[0;0] := $!c0; $a[0;1] := $!c1; $a[1;0] := $!c2; $a[1;1] := $!c3; $a }; }; my $a = GimpMatrix2.new; $a.Array[1;0] = 4; $a.gist.say

[16:34] <camelia> rakudo-moar 36f561a3c: OUTPUT: ¬´Cannot assign to a readonly variable or a value‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:34] <Xliff> ^^ Why readonly?

[16:35] <Xliff> m: class GimpMatrix2 is repr('CStruct') is export { has num64 $.c0 is rw; has num64 $.c1 is rw; has num64 $.c2 is rw; has num64 $.c3 is rw; method Array { my $a = [ 0e0 xx 2 ] xx 2; $a .= Array; $a[0;0] := $!c0; $a[0;1] := $!c1; $a[1;0] := $!c2; $a[1;1] := $!c3; $a }; }; my $a = GimpMatrix2.new; $a.Array[1;0] = 4; $a.gist.say

[16:35] <camelia> rakudo-moar 36f561a3c: OUTPUT: ¬´Cannot assign to a readonly variable or a value‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:36] <Xliff> m: class GimpMatrix2 is repr('CStruct') is export { has num64 $.c0 is rw; has num64 $.c1 is rw; has num64 $.c2 is rw; has num64 $.c3 is rw; method Array { my $a = [ 0e0 xx 2 ] xx 2; $a .= Array; $a[0][0] := $!c0; $a[0][1] := $!c1; $a[1][0] := $!c2; $a[1][1] := $!c3; $a }; }; my $a = GimpMatrix2.new; $a.Array[1][0] = 4; $a.gist.say

[16:36] <camelia> rakudo-moar 36f561a3c: OUTPUT: ¬´This type cannot unbox to a native number: P6opaque, Int‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:36] <Xliff> m: class GimpMatrix2 is repr('CStruct') is export { has num64 $.c0 is rw; has num64 $.c1 is rw; has num64 $.c2 is rw; has num64 $.c3 is rw; method Array { my $a = [ 0e0 xx 2 ] xx 2; $a .= Array; $a[0][0] := $!c0; $a[0][1] := $!c1; $a[1][0] := $!c2; $a[1][1] := $!c3; $a }; }; my $a = GimpMatrix2.new; $a.Array[1][0] = 4e0; $a.gist.say

[16:36] <camelia> rakudo-moar 36f561a3c: OUTPUT: ¬´GimpMatrix2.new(c0 => 0e0, c1 => 0e0, c2 => 4e0, c3 => 0e0)‚ê§¬ª

[16:36] <Xliff> Oho....

[16:37] <Xliff> m: class GimpMatrix2 is repr('CStruct') is export { has num64 $.c0 is rw; has num64 $.c1 is rw; has num64 $.c2 is rw; has num64 $.c3 is rw; method Array { my $a = [ 0e0 xx 2 ] xx 2; $a .= Array; $a[0][0] := $!c0; $a[0][1] := $!c1; $a[1][0] := $!c2; $a[1][1] := $!c3; $a }; }; my $a = GimpMatrix2.new; my $b = $a.Array; $b[1][0] = 4e0; $a.gist.say; $b[1;0].say

[16:37] <camelia> rakudo-moar 36f561a3c: OUTPUT: ¬´GimpMatrix2.new(c0 => 0e0, c1 => 0e0, c2 => 4e0, c3 => 0e0)‚ê§4‚ê§¬ª

[16:37] <Xliff> ??

[16:40] *** japhb left
[16:47] *** japhb joined
[16:52] *** rf joined
[17:23] *** jpn joined
[17:26] *** squashable6 left
[17:28] *** squashable6 joined
[17:30] *** jpn left
[17:42] *** razetime left
[17:53] *** ab5tract left
[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:06] *** rf left
[18:39] *** ab5tract joined
[18:49] *** teatwo left
[18:50] *** teatwo joined
[19:31] *** jjido joined
[20:05] <discord-raku-bot> <librasteve> @ab5tract - my guess is that you are on a M1/2 Apple Silicon?

[20:06] <discord-raku-bot> <librasteve> with Docker Desktop for macos, I got the base image to run with:

[20:06] <discord-raku-bot> <librasteve> docker run -p10000:10000 --platform=linux/amd64 -it croservices/cro-http:0.8.9

[20:13] *** tea3po joined
[20:14] *** tea3po left
[20:14] *** PipStuart left
[20:14] *** tea3po joined
[20:16] *** teatwo left
[20:19] <discord-raku-bot> <librasteve> that said, the stub generated Dockerfile still fails since there is no zef and the zef install does not proceed

[20:32] <japhb> Sounds like the Dockerfile skeleton needs a bit of tweaking

[20:34] *** jjido left
[21:07] <ab5tract> librasteve: I'm running archlinux on amd64

[21:10] <ab5tract> the Dockerfile skeleton definitely implies that zef should be available. which makes sense, because it should be able to install all the dependencies of your cro app

[21:25] *** sena_kun left
[21:27] *** sena_kun joined
[21:48] *** sena_kun left
[21:50] *** tea3po left
[21:51] *** tea3po joined
[22:07] *** rf joined
[22:13] *** ab5tract left
[22:31] *** Guest94 joined
[22:32] *** Guest94 left
[22:33] *** Guest86 joined
[22:36] *** Guest86 left
[22:37] *** Guest64 joined
[22:37] *** ProperNoun left
[22:41] *** ProperNoun joined
[22:52] *** Guest64 left
[22:53] *** ingy left
[22:53] *** ingy joined
[23:05] *** ab5tract joined
