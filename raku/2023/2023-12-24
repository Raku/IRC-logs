[00:01] *** jpn left
[00:36] *** constxqt_ left
[00:39] *** epony left
[00:41] *** epony joined
[00:57] *** jpn joined
[01:02] *** jpn left
[01:16] *** Manifest0 left
[01:48] *** constxqt_ joined
[01:54] *** jpn joined
[01:56] *** constxqt_ left
[01:59] *** jpn left
[02:10] *** constxqt_ joined
[02:12] <jdv> CIAvash: should be done

[02:12] <tellable6> jdv, I'll pass your message to CIAvash

[02:28] *** kylese left
[02:28] *** kylese joined
[02:45] *** constxqt_ left
[02:48] *** constxqt_ joined
[02:52] *** constxqt_ left
[03:15] *** kylese left
[03:15] *** kylese joined
[03:18] *** constxqt_ joined
[03:23] *** constxqt_ left
[03:39] *** constxqt_ joined
[03:42] *** jpn joined
[03:43] *** constxqt_ left
[03:47] *** jpn left
[04:07] *** constxqt_ joined
[04:12] *** constxqt_ left
[04:41] *** stanrifkin joined
[04:42] <stanrifkin> rakubrew download -> 599 error Anyone does have the same error?

[04:53] *** jpn joined
[04:58] *** jpn left
[05:28] <stanrifkin> seems it has something to do with my recent perl-38.2 install

[05:37] *** stanrifkin left
[06:27] *** jpn joined
[06:32] *** jpn left
[07:02] *** jpn joined
[07:07] *** CIAvash joined
[07:07] *** jpn left
[07:13] <CIAvash> jdv++ patrickb++

[07:13] <tellable6> 2023-12-24T02:12:46Z #raku <jdv> CIAvash: should be done

[07:30] *** jaguart left
[07:30] *** jaguart joined
[07:56] *** jpn joined
[07:56] *** dbonnafo2 joined
[08:00] *** jpn left
[08:58] *** dbonnafo3 joined
[09:00] *** jpn joined
[09:00] *** dbonnafo2 left
[09:05] *** jpn left
[09:11] *** CIAvash left
[09:24] *** jpn joined
[09:36] *** jpn left
[09:45] *** jpn joined
[09:51] *** jpn left
[10:11] *** sena_kun joined
[10:31] *** jpn joined
[10:45] *** melezhik joined
[10:45] <melezhik> o/

[10:45] <melezhik> https://fosstodon.org/@melezhik/111634983440520918

[10:46] <melezhik> Raylib::Bindinds installation using alpine Linux package manager

[10:48] <melezhik> If someone interested in adding their Raku modules please let me know

[10:48] *** melezhik left
[10:49] *** jpn left
[11:01] *** melezhik joined
[11:06] *** melezhik left
[11:08] *** jpn joined
[11:10] *** dbonnafo2 joined
[11:10] *** dbonnafo3 left
[11:16] *** dbonnafo3 joined
[11:16] *** dbonnafo2 left
[11:21] *** MasterDuke left
[11:21] *** dbonnafo2 joined
[11:22] *** dbonnafo3 left
[12:01] *** jpn left
[12:04] *** dbonnafo2 left
[12:10] *** jpn joined
[12:19] *** jpn left
[12:23] *** jpn joined
[12:43] *** jpn left
[12:55] *** abraxxa-home joined
[12:56] *** Sgeo left
[13:10] *** jpn joined
[13:18] *** abraxxa-home left
[14:00] *** silug left
[14:02] *** silug joined
[14:30] <discord-raku-bot> <antononcube> @ingy Can you suggest any documents discussing why YAMLScript should be looked at/adopted/used?

[14:47] *** xinming left
[14:49] *** xinming joined
[15:08] <discord-raku-bot> <nemokosch> They say volunteer work is non-fungible

[15:08] <discord-raku-bot> <nemokosch> That's what I hope with this

[15:09] <discord-raku-bot> <nemokosch> I hope this doesn't happen instead of anything

[15:10] <discord-raku-bot> <nemokosch> melezhik++

[15:12] <ab5tract> nice work melezhik!

[15:27] <discord-raku-bot> <antononcube> https://imgur.com/a/dPHqQ4U

[15:31] *** constxqt_ joined
[15:47] *** constxqt_ left
[15:53] *** constxqt_ joined
[16:05] *** constxqt_ left
[16:12] *** constxqt_ joined
[16:13] *** jpn left
[16:19] *** constxqt_ left
[16:51] *** mcmillhj joined
[16:58] *** gdown joined
[17:07] *** jpn joined
[17:09] <thowe> Can the IO methods be used to somehow tail a file?  I want to watch and deal with new lines appended to a log file.  It would be nice to also have the option of dealing with all file lines that exist first, and then start tailing as they are added...  It's not obvious to me from the IO Handle docs how to achieve this, if it can be done.

[17:11] <thowe> Basically I want "tail -f" or better yet "tail -F"

[17:12] <discord-raku-bot> <antononcube> @thowe Hmm... I think can always use run or shell with tail to do that "tailing". (Assuming you ware running on a UNIX-like OS.)

[17:15] <thowe> Really hoping to figure out how to do it without calling outside tools.  There is a module called IO::TailFile, but it does things I don't readily understand.

[17:17] <thowe> Also, -F in tail is able to continue after a file rotation...  That would be neat.

[17:21] <thowe> IO::TailFile might be able to do that too...  I'm not sure what the inode handling is meant to do in the code.  It uses nqp as well, and I'm not sure why but might have something to platform specific inode handling(?)

[17:24] <thowe> and apparently github now requires the use of a smart phone

[17:28] <discord-raku-bot> <antononcube> Yeah, or other form of two-level authentication.

[17:31] <thowe> other paid form...  they don't support WebAuthn

[17:32] <discord-raku-bot> <antononcube> I think I use Google's "Authenticator" app, which can be used on a tablet or laptop.

[17:32] <thowe> but don't you still need your phone to get to that setup for it?

[17:33] <discord-raku-bot> <antononcube> Hmm... I forgot the setup steps I went through. It might be the case, but I think I just did via email.

[17:33] <thowe> don't usually use Google anything if I can avoid it.  Time to ditch github for gitlab entirely I guess.

[17:34] <discord-raku-bot> <librasteve> nah - it's the MS authenticator app

[17:36] <discord-raku-bot> <antononcube> @thowe Sure. I do not like the alternatives of GitHub that much, so far. I tried both GitLab and SourceForge.

[17:42] *** constxqt_ joined
[17:46] *** constxqt_ left
[17:49] <thowe> so, anyway...  Is IO::TailFile my best bet?  Or is there a way to do this without extra modules?

[17:50] *** robmus joined
[17:55] <lucs> Not sure why you want to avoid getting the module, but you could copy its source into your own project.

[17:57] *** sena_kun left
[17:58] <thowe> Well, I'm not really trying to avoid it...  I just kind of want to understand if I can replicate what I get from it myself.

[17:58] *** sena_kun joined
[17:58] <lucs> I'd start by copying the original :)

[18:02] <discord-raku-bot> <antononcube> @thowe Where do you run your tailing program? In an IDE, in a notebook, in a UNIX terminal? If the latter, then using tail -F is not that external.

[18:04] <thowe> This is for a program I want to run on my *nix servers.

[18:05] <thowe> I want to replace a few tools with an all-in-one thing.  Want to tail files to replace the fail2ban stuff.

[18:06] <thowe> need a config file with patterns, build functions based on those patterns, do things like report upstream to shared data, add to pf tables, etc...

[18:08] <thowe> but intelligent tailing of log files shouldn't be as hard a problem as it must be.  especially -F which can "see if the file being followed has been renamed or rotated".

[18:08] <thowe> I don't need this to run on non-unix-like systems if that helps.

[18:10] *** constxqt_ joined
[18:12] <discord-raku-bot> <antononcube> @thowe I think you should do an MVP using run 'tail', '-F', '<file-name>'  and try it in your workflows. (And then replace it with whatever Raku package.)

[18:13] <thowe> MVP?

[18:15] <discord-raku-bot> <antononcube> Sorry, MVP = Minimal Viable Product.

[18:16] <thowe> Ah.  Well, then I need my Raku thing to act like a FIFO

[18:17] <thowe> if it checks the file and there are no new lines, won't it just think it is done?  How do you just keep checking in case there is more?

[18:20] <ingy> antononcube: https://yamlscript.org/posts/advent-2023/index/ are the best documents I have at the moment for using YAMLScript...

[18:20] <discord-raku-bot> <antononcube> @ingy I browsed those -- did not say any "motivational" or "marketing" documents.

[18:21] <ingy> antononcube: But maybe most important to raku programmers is that the raku YS module will be by far the best YAML loader option for raku.

[18:23] <ingy> since almost all yaml files are valid ys files and load the way a yaml file would with yaml 1.2 semantics

[18:23] <discord-raku-bot> <antononcube> @thowe Hmmm... maybe you need a way to "cronify" your file check-and-dump. (Say, using a loop.)

[18:24] <discord-raku-bot> <antononcube> @ingy Yeah, I read a similar statement in https://yamlscript.org/posts/advent-2023/index/ .

[18:26] <thowe> Yeah, I need to loop; ask "got more file for me? ; if so process those lines

[18:27] <thowe> but how to check if file rotated or changes names?  Does the inode stay the same?  Can I check file name and close and grab new file if it changed?  Not really a Raku question...

[18:28] <discord-raku-bot> <antononcube> See/find the "cronify" examples by Moritz Lenz and JJ Merelo.

[18:29] *** jpn left
[18:31] <thowe> mm, I have Perl 6 Fundamantals, parsing with grammars, and Raku Recipes...  You mean in one of those?  Guess I should have checked Recipes...

[18:32] <discord-raku-bot> <antononcube> Yeah, the second one had cron examples. (I think.)

[18:33] <discord-raku-bot> <antononcube> I meant this book by Moritz Lenz:  "Raku Fundamentals: A Primer with Examples, Projects, and Case Studies". 2nd ed. (2020), Apress.

[18:33] <thowe> The parsing book has a cronify example?  I do see a change detection method in the Recipes book...  I'll play with some code and maybe ask more intelligent questions when I have some.

[18:34] <thowe> I have that one, but it is the older one that still says "Perl 6"

[18:35] <thowe> Chapter 6?  "Silent Cron, A cron wrapper"?

[18:36] <discord-raku-bot> <antononcube> Yes.

[18:37] <discord-raku-bot> <antononcube> @thowe In "Raku Recepies" there is a chapter "Recipe 2-5. Watch a File for Changes".

[18:41] *** dbonnafo2 joined
[18:44] <thowe> Yeah, that's the one I was saying I saw...  Not sure why it would be better than .modified and .changed.  I don't think I can use tail -f to feed data in to my program.  If piped -f or -F is a noop

[18:45] <thowe> I thnk I need to track what line I am on, somehow ignore reaching the end, and read each new line if more.

[18:46] <thowe> er, wait, there actually is a tail -f example...

[18:47] <thowe> I should play with that with -F and see what happens on file rotation...

[18:53] *** simcop2387 left
[18:53] *** perlbot left
[18:56] *** simcop2387 joined
[18:57] *** sena_kun left
[18:57] *** jpn joined
[18:58] *** perlbot joined
[18:58] *** sena_kun joined
[18:59] <thowe> then I think I need to generate functions based on the patterns and run them in some kind of non-blocking event loop, but one thing at a time...

[19:35] *** melezhik joined
[19:36] *** melezhik left
[19:38] *** melezhik joined
[19:40] *** denofT joined
[19:40] <melezhik> tellable6: thowe: maybe no exactly what you are after but you could spin up a Sparky cron job to watch file changes and react upon

[19:40] <tellable6> melezhik, I'll pass your message to thowe

[19:41] <melezhik> https://github.com/melezhik/sparky#run-by-cron

[19:41] <denofT> Hi, i have lost all my saved money to FTX jews around 20000 dollars.

[19:41] <denofT> Please help me live. Please help me.

[19:41] <denofT> BTC :   bc1q9vfmfwj6av9pxj50r6xyl652mwhqvw5ds86nw2

[19:41] <denofT> xmr: 44QNNugXXCWUcUGi7UGsRM4pqnKKmn4zYjcZT3BnNHWBWyXRoe4mfLwT5L67kGyTLu76c1hmPV7QKZESP9w7bQ7m8Y1VUgx

[19:41] *** denofT left
[19:42] *** melezhik left
[19:57] <xinming> in main function, when we do   multi MAIN ($amount where { $_ (elem) <a b> });   multi MAIN ($amount where { $_ (elem) <c d> });   In this case, when the command auto outputs help, It shows  2 command line with same amount arg, How can we change $amount with something like amount=a|b    amount=c|d   so these 2 command line can be distinct?

[20:16] *** mcmillhj left
[20:59] *** gdown left
[21:52] *** Sgeo joined
[21:54] *** dbonnafo2 left
[22:56] *** sena_kun left
[23:56] *** jpn left
