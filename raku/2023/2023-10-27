[00:04] *** MasterDuke joined
[00:26] *** buildable6 left
[00:28] *** buildable6 joined
[00:46] *** jpn joined
[00:51] *** jpn left
[00:52] *** HobGoblin joined
[00:53] *** tadzik left
[00:54] *** mst left
[00:54] *** tadzik joined
[00:54] *** goblin left
[00:55] *** tib left
[00:55] *** MasterDuke left
[00:55] *** mst joined
[00:55] *** peder left
[00:58] *** peder joined
[01:07] *** tib_ joined
[01:14] *** Manifest0 left
[01:23] *** hythm joined
[01:28] *** buildable6 left
[01:29] *** hythm left
[01:29] *** buildable6 joined
[01:53] <tonyo> tbrowder__: are you trying to get the $?DISTRIBUTION of a dist?

[01:54] <tonyo> or is that in the bin file? if it is then that's a known bug and the work around is to encapsulate all the functionality into a precomp'd lib/ file

[02:27] *** ToddAndMargo joined
[02:29] *** buildable6 left
[02:32] *** buildable6 joined
[02:36] *** buildable6 left
[02:36] *** buildable6 joined
[02:38] *** dbonnafo joined
[02:42] *** dbonnafo left
[02:54] <japhb> .tell Xliff Since we're going back and forth super slowly and I'm on really weird hours right now ... how about opening an issue in the GitHub repo for your questions, and we can have the discussion there?

[02:54] <tellable6> japhb, I'll pass your message to Xliff

[03:31] *** nine left
[03:31] *** nine_ joined
[03:31] *** camelia left
[03:32] *** buildable6 left
[03:34] *** buildable6 joined
[03:36] *** camelia joined
[03:48] *** jpn joined
[03:53] *** jpn left
[04:34] *** buildable6 left
[04:37] *** buildable6 joined
[04:39] *** Xliff left
[04:41] *** buildable6 left
[04:41] *** buildable6 joined
[05:14] *** ToddAndMargo left
[05:31] *** buildable6 left
[05:34] *** buildable6 joined
[05:39] *** buildable6 left
[05:39] *** buildable6 joined
[05:43] *** AlexDaniel left
[05:50] *** jpn joined
[05:55] *** jpn left
[05:56] *** abraxxa joined
[06:20] *** jpn joined
[06:34] *** buildable6 left
[06:37] *** buildable6 joined
[06:39] *** dbonnafo joined
[06:42] *** buildable6 left
[06:42] *** buildable6 joined
[06:43] *** jpn left
[06:44] *** dbonnafo left
[07:00] *** jpn joined
[07:16] *** jpn left
[07:29] *** beginner_toad joined
[07:34] *** andinus left
[07:34] *** andinus joined
[07:35] *** andinus left
[07:36] *** andinus joined
[07:36] *** andinus left
[07:37] *** andinus joined
[07:37] *** buildable6 left
[07:40] *** buildable6 joined
[07:40] *** Manifest0 joined
[07:43] *** jpn joined
[07:49] *** sena_kun joined
[07:54] *** merp left
[08:01] *** jpn left
[08:04] *** merp joined
[08:19] *** Sgeo left
[08:26] *** jpn joined
[08:35] *** sena_kun left
[08:40] *** buildable6 left
[08:42] *** buildable6 joined
[09:19] *** lichtkind joined
[09:42] *** buildable6 left
[09:43] *** buildable6 joined
[09:45] *** dbonnafo joined
[09:50] *** dbonnafo left
[09:52] *** El_Che left
[09:53] *** El_Che joined
[10:03] *** beginner_toad left
[10:15] *** abraxxa left
[10:43] *** buildable6 left
[10:44] *** buildable6 joined
[11:01] *** dbonnafo joined
[11:06] *** dbonnafo left
[11:19] <tbrowder__> tonyo: i'm working on a Demo module and can examine an installed DISTRIBUTION just fine. i'm trying to recover from a failure when i attempt to access it incorrectly. the try/catch attempt is in the subroutine in the module code, not the bin file.

[11:20] <tbrowder__> the purpose is to ga

[11:20] <tbrowder__> *get working example for the docs

[11:21] <tbrowder__> current code is in github/tbrowder/Demo.git

[11:33] *** Voldenet left
[11:40] *** antim0d3s left
[11:40] *** sdfgsdfg joined
[11:42] *** teatwo joined
[11:43] *** dbonnafo joined
[11:44] *** buildable6 left
[11:45] *** tea3po left
[11:45] *** buildable6 joined
[11:47] *** dbonnafo left
[12:13] <ugexe> I'm failing to think of a situation where $?DISTRIBUTION.content(...) should be called in a way that both A) fails and B) is expected to potentially fail

[12:14] *** Voldenet joined
[12:14] <ugexe> either an incorrect path is being fed to it (and if so there is no reason to want this to be a runtime error, as a distribution is static)

[12:15] <ugexe> or someone has deleted random files from the installation (deleting whatever file is being referenced in .content, but not the code containing the call to $?DISTIBUTION.content)

[12:15] <ugexe> like you can't even install a distribution that lists a file that doesn't exist in its META6.json

[12:16] <ugexe> so such a check doesn't really need to be able to work on installed distributions

[12:21] <ugexe> what are you trying to use this check for? maybe we can suggest something more appropriate

[12:21] <ugexe> because it feels like this might not be the right tool for this job

[12:33] *** dbonnafo joined
[12:34] *** edr joined
[12:37] *** dbonnafo left
[12:45] *** buildable6 left
[12:47] *** buildable6 joined
[13:14] *** dbonnafo joined
[13:19] *** dbonnafo left
[13:35] <tbrowder__> well, that module is installed, the file exists, and the file is not referenced in the META6.json. hence the failure that i intentially expect a failure i would like to recover from with try/catch. if that's not possible, fine.

[13:36] <tbrowder__> i'm trying to collect enough information to impove the docs regarding use of DISTRIBUTION and RESOURCES

[13:38] <tbrowder__> between you and tonyo and lizmat, if it's possible to recover one of you will show us how.

[13:40] <tbrowder__> the doc info will also improve try/catch handling with a real-world example

[13:41] <tbrowder__> btw, i install it with, in top-level of the rrepo: "zef install . --force-install"

[13:42] <tbrowder__> it gets installed in my personal store and $HOME/.raku/bin

[13:47] *** buildable6 left
[13:49] <ugexe> I'm not sure .content is the right tool to check if a distribution contains some file

[13:50] *** buildable6 joined
[13:52] <ugexe> or at least you'd need to take an additional step such as trying to open the file

[13:52] <ugexe> m: my $some-distribution = CompUnit::RepositoryRegistry.repository-for-name("core").candidates("Test").head; { CATCH { default { say "error: $_" } }; $some-distribution.content("lib/Test.rakumodX").open(:r) }

[13:52] <camelia> rakudo-moar a3baa9df3: OUTPUT: «Use of uninitialized value element of type Any in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤error: '/home/camelia/rakudo-m-inst-1/share/perl6/core/resources' is a directory, cannot d…»

[13:53] <ugexe> so that warning isn't ideal and could probably be fixed, but as you see we can indeed CATCH the error. additionally I am calling .content(...).open(:r) to test if the file exists

[13:54] <ugexe> you can think of it like how IO::Handle.new(path => "some-non-existent-file") doesn't throw an error until you try to actually do something with it

[13:54] <ugexe> in this case the .open()

[13:56] <ugexe> sub resource-exists($path? --> Bool) is export { return False unless $path.defined; return so try $?DISTRIBUTION.content($path).open(:r); }

[13:56] <ugexe> personally that's how i'd write your function... I wouldn't even bother with CATCH

[13:57] <ugexe> hmm actually that needs to be adjusted to close handle when its done

[13:59] <ugexe> sub resource-exists($path? --> Bool) is export { return False unless $path.defined; return so try $?DISTRIBUTION.content($path).open(:r).close; }

[14:11] *** dbonnafo joined
[14:16] *** dbonnafo left
[14:20] <tbrowder__> ugexe: sorry, you’re right, that file is NOT in the distro, just the repo. i still  want to recover. maybe chk contents of RESOURCES

[14:23] <drakonis> https://buttondown.email/hillelwayne/archive/raku-is-surprisingly-good-for-clis/ i see y'alls got a new raku stan

[14:31] <ugexe> if the file is not in the distro then it will not show up in %?RESOURCES when it is installed

[14:32] <ugexe> if you find it *is* showing up, then you are doing something wrong

[14:32] <ugexe> like including -Ilib or some such

[14:34] <ugexe> %?RESOURCES and $?DISTRIBUTION are only for files included in the distribution

[14:34] <ugexe> they are not made to interface with random files in e.g. a git repository

[14:50] *** buildable6 left
[14:51] *** buildable6 joined
[14:53] *** dbonnafo joined
[14:54] *** Sgeo joined
[14:56] *** buildable6 left
[14:56] *** buildable6 joined
[14:57] *** dbonnafo left
[15:00] *** buildable6 left
[15:00] *** buildable6 joined
[15:03] *** evalable6 left
[15:03] *** evalable6 joined
[15:34] *** jgaz left
[15:36] *** jgaz joined
[15:38] *** erik`` left
[15:38] *** unicodable6 left
[15:39] *** unicodable6 joined
[15:41] *** jgaz left
[15:51] *** buildable6 left
[15:52] *** buildable6 joined
[15:57] *** ruben joined
[15:58] *** ruben left
[16:22] *** jpn left
[16:28] *** jpn joined
[16:34] *** swaggboi left
[16:36] *** swaggboi joined
[16:52] *** buildable6 left
[16:53] *** buildable6 joined
[17:05] <tbrowder__> ok, cool, and thnx for the try code

[17:14] *** dbonnafo joined
[17:15] *** bigdata joined
[17:18] *** dbonnafo left
[17:31] *** bigdata left
[17:41] *** jgaz joined
[17:47] *** sena_kun joined
[17:53] *** buildable6 left
[17:55] *** kst left
[17:55] *** dbonnafo joined
[17:56] *** buildable6 joined
[17:56] *** kst joined
[18:00] *** dbonnafo left
[18:22] <jdv> where is the zoom info for the conf?  i "got a ticket" but i don't see zoom infos.

[18:34] <gfldex> .tell Xliff I got rewarded with "Stage mast       : Object does not exist in serialization context", while building Rakudo. #raku-dev could not help.

[18:34] <tellable6> gfldex, I'll pass your message to Xliff

[18:41] *** sftp left
[18:49] *** dbonnafo joined
[18:53] *** dbonnafo left
[18:56] *** buildable6 left
[18:57] *** buildable6 joined
[19:09] *** dbonnafo joined
[19:14] *** dbonnafo left
[19:30] *** dbonnafo joined
[19:35] *** dbonnafo left
[19:37] *** sftp joined
[19:57] *** buildable6 left
[19:58] *** buildable6 joined
[20:01] *** jpn left
[20:03] <lizmat> jdv you should have received the zoom link in email just now

[20:12] <jdv> lizmat: thanks:)

[20:13] <lizmat> ash made that happen, not me  :-)

[20:13] <lizmat> afk&

[20:17] *** jpn joined
[20:25] *** jpn left
[20:47] <tbrowder__>  lizmat: i, too, have a ticket to the raku conf, but i don't see a video link anywhere yet. is it in the links on the schedule?

[20:49] <tbrowder__> ah, i see it now in new email

[20:49] *** discord-raku-bot left
[20:51] <tbrowder__> hm, can't make all live sessions, but they are being recorded for youtube channel i assume

[20:58] *** buildable6 left
[21:00] *** buildable6 joined
[21:01] <tonyo> hope so, like last year

[21:01] <tonyo> needed a reminder on how i did my slides last year

[21:01] <tonyo> and i'll be live tomorrow, rather than recorded

[21:20] *** discord-raku-bot joined
[21:25] *** jpn joined
[21:30] *** japhb left
[21:30] *** jpn left
[21:31] *** dbonnafo joined
[21:32] <tbrowder__> tonyo: good topic you're taking on--watching with much interest

[21:32] <tonyo> thanks, if you have anything specific you'd like me to talk about please let me know

[21:34] <tbrowder__> aren't you and nick working on formalizing specs on module distros and such?

[21:35] *** dbonnafo left
[21:38] <tbrowder__> for eventual, hm, module certification or more rigid requirements?

[21:58] *** sena_kun left
[22:00] *** buildable6 left
[22:01] *** buildable6 joined
[22:02] <tonyo> not too much on specs at the moment, we have two changes in the pike that'll speed up zef quite a bit.  one is moving towards binary tree indexes for the zef ecosystem (50kx faster for exact and 400% for searching) and the other is removing a little precomp dance that happens currently.  i don't know when either of those will land.  the spec on the fez side is going to get a little more feedback-y in

[22:02] <tonyo> that you'll be able to see logs for the failed uploads and we've been chatting a little about how to handle native deps and whether to recommend dist or module names in needs but that stuff will all be in the chat tomorrow

[22:03] <tonyo> are the speakers tomorrow just taking control of the big zoom meeting?

[22:03] *** tellable6 left
[22:03] *** tellable6 joined
[22:04] *** discord-raku-bot left
[22:07] *** Maylay joined
[22:11] *** discord-raku-bot joined
[22:12] *** jpn joined
[22:18] *** jpn left
[22:19] *** kst` joined
[22:23] *** kst left
[22:25] *** teatwo left
[22:33] <leont> mi6 is making my life difficult again. I want to cut a release, and I want it to ignore xt/ tests. Apparently it can't do that.

[22:34] <leont> I managed to cut a release, I have no idea if it is correct or not because it doesn't let me check that either.

[22:35] <leont> Apparently I should have done a --keep so I could check after the fact.

[22:36] *** teatime joined
[22:36] <discord-raku-bot> <nemokosch> what does --keep achieve

[22:40] <leont> It keeps the tarball

[23:00] <discord-raku-bot> <nemokosch> so basically a workaround

[23:01] *** buildable6 left
[23:03] *** buildable6 joined
[23:41] *** teatime left
[23:42] *** teatime joined
[23:43] *** Manifest0 left
[23:56] *** jpn joined
