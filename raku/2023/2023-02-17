[13:27] <tonyo> rf: if you do have time to tackle that typeglob bug in fez, a pr would be much appreciated

[13:27] *** Geth joined
[13:28] <rf> tonyo: Yeah I'm going to lookinto that today at some point

[13:28] <tonyo> bless

[13:28] <rf> My employer who insisted on Kubernetes is now feeling Kubernetes lol,  been very busy

[13:29] <tonyo> k8s will not make good on the promise of soothing any souls

[13:29] *** Altai-man joined
[13:29] *** sena_kun left
[13:30] <rf> Yeah, I would die on the hill of not having it but wasn't my decision ¯\_(ツ)_/¯

[13:32] *** frost left
[13:35] *** frost joined
[13:35] *** ispyhumanfly joined
[13:39] <rf> So it takes 24 hours for JSON::Fast to do 100000 iterations on a 1 gb JSON file

[13:39] <rf> And 26 hours for my simd port (single threaded)

[13:41] *** ispyhumanfly left
[13:42] <tonyo> is json fast recursive or single pass?

[13:45] <tonyo> much different than it was in the JSON::Faster days

[13:45] <rf> Tbh I couldn't really decipher what it was doing, I think its using some sort of caching.

[13:45] <rf> I wonder if its faster to take the MD5 of JSON before you parse and store it as known

[13:46] <lizmat> yeah, JSON::Fast has been nqp-ified a lot

[13:47] <rf> I have an interesting idea for how to make my port faster, but it basically involves me writing a virtual machine lol

[13:47] <rf> tonyo: Is there a "dry run" command I can use with fez-upload?

[13:48] <tonyo> nope but i can toss one into the dist branch if you're keen

[13:49] <rf> I can just short circuit, no worries.

[13:49] <rf> Might be a good idea to add at some point though.

[13:50] *** jpn joined
[13:51] <tonyo> just added it to the dist branch

[13:51] <tonyo> -d or --dry-run will do it

[13:51] <rf> tonyo++

[13:59] <rf> tonyo: https://github.com/tony-o/raku-fez/pull/85/files

[14:01] <tonyo> i'll add that commit to the dist branch

[14:01] <tonyo> (merged)

[14:03] <tonyo> added to the dist branch so you don't have to bounce back and forth

[14:03] *** simcop2387 left
[14:03] *** ispyhumanfly joined
[14:04] *** jpn left
[14:05] *** codesections left
[14:06] *** codesections joined
[14:06] *** simcop2387 joined
[14:09] *** thundergnat joined
[14:09] <thundergnat> My entirely unsolicited take on the Nemokosch situation.

[14:10] <thundergnat> Seems like a very smart individual, with a lot of interesting observations, but comes across as dismissive and confrontational when people who have worked on those very issues say "Yes, but.

[14:10] <thundergnat> Someone disagreeing with you is not neccesarily a personal attack.

[14:10] <thundergnat> While I don't want to appeal to authority, sometimes people who have been working on it for 10+ years really do have a better understanding of the problem space and the trade-offs that have been made.

[14:10] <thundergnat> On the other hand, he has a lot of energy and has enlivened the chat channels quite a bit, (not _always_ in a good way, but pretty often.)

[14:11] <thundergnat> Honestly, he reminds me of early Zoffix, before he stopped drinking heavily. High energy, lots of interesting ideas, not much filter.

[14:11] <thundergnat> I would be sad to see him go. I think he brings a lot of potential, but I also agree that he does on occasion make it feel "less fun" to be here. :-(

[14:11] <thundergnat> (Which may be a non-sequitur because I am not actually "here" all that often, though I do enjoy reading the logs pretty regularly.)

[14:12] *** thundergnat left
[14:18] *** codesections left
[14:19] *** melezhik joined
[14:20] <MasterDuke> rf: btw, nine said it isn't supposed to be possible to create a raku hash and return it via nativecall. jnthn's suggestion was to"return, say, an array of values and build the hash back in Raku space."

[14:20] <MasterDuke> "Although it seems the API of simdjson is more iterator based, so it may make more sense to consume that directly in Raku (that is, iterate to produce the hash)"

[14:21] <[Coke]> Would love to include this as a potential how-to on the docs site for nativecall if someone wanted to write it up as an example. :)

[14:22] *** melezhik left
[14:22] *** melezhik joined
[14:22] *** cfa joined
[14:23] <cfa> o/

[14:24] <rf> MasterDuke: I'll look into that, good idea.

[14:25] <melezhik> Hi devs! My previous comment on the Nemokosch situation for some reasons got lost . Anyway I would second thundergnat and hythm views on this. Just my 2 cents here - I see him more trying to help and being really passionated about the language rather then _intentionally_ trying to disrupt the order in the channel, however I am ready to accept his

[14:25] <melezhik> style of communications might be improved ))) if people say so. Anyway it would be sad to see him going because if some ( sometimes unavoidable) tractions ...

[14:26] <melezhik> tractions -> tensions

[14:27] *** jpn joined
[14:27] <melezhik> if -> of

[14:28] *** melezhik left
[14:50] *** Altai-man left
[14:52] *** Maylay left
[15:32] *** TieUpYourCamel left
[15:47] *** jgaz joined
[15:53] *** TieUpYourCamel joined
[16:05] *** Sgeo joined
[16:07] *** frost left
[16:31] *** razetime joined
[16:37] *** ab5tract left
[16:39] <coleman> Nah, the tensions are always avoidable

[16:39] <coleman> Doing lots of work isn't a license to be aggressive. Yes, I agree it's a shame.

[16:40] <El_Che> I think that was lizmat's point

[16:40] <coleman> Yep. Seconded.

[16:41] <[Coke]> I would also like to note: it's always been hard to gauge what folks *intent* is when you're speaking with text only (I've seen this going back to the 80s!) (more)

[16:41] *** thundergnat joined
[16:42] <[Coke]> But, if folks tell you you're coming across a certain way, you need to incorporate that feedback into your communication style.

[16:42] <El_Che> I had to learn my self that there is a difference between pragmatics and semantics

[16:42] <coleman> I've had to look at some of my aggro behavior and off-color joking in the past.

[16:42] <coleman> It takes humility

[16:47] <rf> tonyo: I may have had a typo lol. There is now a backslash in Glob.rakumod, I will PR to fix it sorry.

[16:52] *** thundergnat left
[16:53] *** ab5tract joined
[17:09] *** avuserow left
[17:11] *** razetime left
[17:31] *** tg57 joined
[17:31] *** Guest8418 joined
[17:32] *** avuserow joined
[17:37] *** codesections joined
[17:37] *** MasterDuke left
[17:40] <[Coke]> does anyone have strong feelings about whether docs in moarvm, nqp, and rakudo should be in pod6 vs. md? I think it makes sense to always have a README.md (LCD), I think it makes sense for our public facing language docs to be pod6, but I don't think we're standardized elsewhere.

[17:40] <[Coke]> (question triggered by seeing we have two release guide docs in rakudo/rakudo, one of each kind, one with -, one with _...)

[17:41] <coleman> I like README in md and everything else in pod6?

[17:43] <[Coke]> I think it might also make sense to have rakudo/rakudo be pod6, but keep nqp & moarvm as .md (since they wouldn't have a way to view it)

[17:57] <Guest8418> Is there a way to check if a json file is empty without it crashing using JSON::Fast? 

[17:57] *** Guest8418 left
[17:57] *** tg_57 joined
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:01] *** bbrtj joined
[18:10] *** jpn left
[18:11] <rf> Hows it goin today folks?

[18:11] <cfa> rf: well over here, thanks; you?

[18:12] *** tg_57 left
[18:16] <[Coke]> you could do the check with raku: $filename.IO.e 

[18:16] <cfa> [Coke]: that won't check for emptiness though

[18:19] <rf> cfa: Good, thanks. No stupid prod issues at work :^)

[18:20] *** p6steve joined
[18:23] <tonyo> backslash in glob?

[18:23] <cfa> how about .s ?

[18:23] <cfa> m: '/tmp/empty'.IO.spurt: ''; say "/tmp/empty".IO.s

[18:23] <camelia> rakudo-moar 268da12b3: OUTPUT: «0␤»

[18:23] <cfa> m: '/tmp/non-empty'.IO.spurt: 'foo'; say "/tmp/non-empty".IO.s

[18:23] <camelia> rakudo-moar 268da12b3: OUTPUT: «3␤»

[18:24] <tonyo> oh - rf: just pushed a fix

[18:24] <rf> Sorry again :L

[18:25] <tonyo> no worries

[18:33] <tonyo> PRs are always appreciated, going to add license info to fez, more help messages, and then do a release with the dist stuff integrated

[18:33] *** tg57 left
[18:33] <tonyo> then the following version will be no system dependencies on tar/gzip/pax

[18:38] *** sena_kun joined
[18:46] <lizmat> fwiw, I thoroughly agree with thundergnat

[18:47] <lizmat> wrt to logs: the logger conked out after midnight CET, until 14:27 CET when I restarted it

[18:47] *** jpn joined
[18:48] <lizmat> will resolve the logs with the colabti logger tomorrow, and then all that was said on #raku until 14:27 today, should be visible on irclogs.raku.org again

[18:48] <lizmat> fwiw, I can only resolve stale logs, so have to wait until midnight UTC before today's log becomes stale

[18:50] *** MasterDuke joined
[18:58] *** jpn left
[19:05] <discord-raku-bot> <p6steve> on the NK situation, there are two dimensions: active-inactive and positive-negative ... NK sits in the active/negative position and this makes the situation very awkward

[19:07] <discord-raku-bot> <p6steve> in any social context we each need to be self aware and prepared to adjust our behaviours according to feedback

[19:09] <discord-raku-bot> <p6steve> I worry that the first contact a new visitor to raku-beginner (or raku-irc) will be a negative take on the features of the language, delivered very quickly... the situation is made worse by the wider audience / better discoverability on Discord (which generally I see as a good thing)

[19:12] <discord-raku-bot> <p6steve> it would be better for us to progress with the good new stuff on raku development rather than cycle back to long decided points (see ^^ on Nil)

[19:14] *** TieUpYourCamel left
[19:14] <discord-raku-bot> <p6steve> and imo we could be/should be a bit more positive about the fantastic cool stuff that brings us here in the first place

[19:15] *** abraxxa-home joined
[19:25] <lizmat> I cannot see what this is about, but I can guess

[19:37] <lizmat> afk again&

[19:40] *** TieUpYourCamel joined
[19:42] *** p6steve left
[19:44] *** notna joined
[19:50] *** notna1 joined
[19:54] *** jpn joined
[19:55] *** notna left
[19:55] *** notna1 is now known as notna

[20:00] <discord-raku-bot> <Zephyr> it has been 24 hours since Nemokosch was excluded from the bridge. however, at the state of how things currently are, there appears to be no changes on both their and the opposing peoples' stances. I'm afraid reverting the bridge's state will cause more controversies currently. since there's no proper way for the IRC side to moderate users from the Discord side or block/ignore them, for now I think I'll keep Nemokosch

[20:00] <discord-raku-bot> excluded from the bridge until a more reasonable alternative is provided that allows for things to be less chaotic. it's night time in my timezone unfortunately, so I'll have to go sleep now. I'll continue reading any related discussions when I'm online

[20:04] <cfa> https://colabti.org/irclogger/irclogger_log/raku?date=2023-02-16#l334

[20:05] <cfa> indefinite blocking seems severe given that this was originally 24 hours

[20:12] *** NemokoschKiwi joined
[20:12] <NemokoschKiwi> It makes sense, though, and I agreed to it.

[20:12] *** NemokoschKiwi left
[20:14] *** jpn left
[20:14] <rf> Hmm. I accidentally published a dist, how can I delete it

[20:18] *** abraxxa-home left
[20:20] <cfa> rf: https://github.com/tony-o/raku-fez#removing-a-module ?

[20:22] <cfa> tonyo: shouldn't the about text read "This project is for 'fez'"?

[20:27] <[Coke]> (.e isn't empty) (oops, yes, I should have said .s)

[20:28] <cfa> and .e then an .s test makes sense anyway :)

[20:29] <[Coke]> cfa++ # figuring out what I was trying to say

[20:54] *** TieUpYourCamel left
[20:55] <tonyo> cfa: ??

[20:56] <tonyo> oh, whoa. updated - forgot entirely about that blurb on gh repos

[21:11] <rf> tonyo: Can I delete a package I published later than 24 hours lol. When I was doing some cleanup of my META6 last publish of Humming-Bird went under a new name (oops)

[21:19] *** notna left
[21:22] *** melezhik joined
[21:22] *** tg57 joined
[21:22] <melezhik> Anton Antonov , 👋 could you please take a look at my PR for Raku-DSL-Shared? Thanks

[21:23] <melezhik> https://github.com/antononcube/Raku-DSL-Shared/pull/2

[21:25] *** melezhik left
[21:28] <cfa> tonyo: :)

[21:29] <tonyo> rf: there's no real good way of doing that

[21:38] <rf> Darn.

[21:43] <shmup> what's the diff between t and xt, for test dirs?

[21:44] *** jgaz left
[21:44] *** codesections left
[21:44] <shmup> i se a comment in the xt sole test saying: "# These tests should be moved to t/ once perl6 is faster" 

[21:48] *** swaggboi left
[21:50] <cfa> i think xt is for author/developer tests, not intended to be run by users at the time of installation

[22:05] <rf> I've seen and used it as well, for integration tests

[22:10] *** jpn joined
[22:14] *** melezhik joined
[22:15] *** jpn left
[22:19] <tonyo> xt is meant for things like you need your environment set up a particular way for testing.  ctilmes' has a lot of modules that use xt (like the libpostgres stuff) because testing requires postgres set up in a particular way

[22:19] *** melezhik left
[22:23] *** derpydoo left
[22:29] *** RandalSchwartz joined
[22:30] *** jpn joined
[22:36] *** RandalSchwartz left
[22:37] *** jpn left
[22:41] *** cfa left
[22:42] *** ab5tract left
[22:57] *** sena_kun left
[23:09] * leont really likes the convention of subdirs in xt, like xt/author/ or xt/release/, makes it much more obvious which test is run when

[23:10] *** jpn joined
[23:14] *** tg57 left
[23:15] *** jpn left
[23:39] <discord-raku-bot> <Anton Antonov> @melezhik Will do.

[23:40] <discord-raku-bot> <Anton Antonov> .tell melezhik I will look into “DSL::Shared” tonight or tomorrow morning.

[23:56] <discord-raku-bot> <melezhik> Thanks !

[23:56] *** derpydoo joined
