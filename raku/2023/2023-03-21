[00:00] *** jpn joined
[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:05] *** jpn left
[00:08] *** kjp left
[00:08] *** kjp joined
[00:09] *** kjp left
[00:09] *** kjp joined
[00:44] *** jgaz left
[00:45] <rf> m: my $proc = Proc.new(:command('curl5', '-v'), :out, :err); dd $proc;
[00:45] <camelia> rakudo-moar 58157b8d3: OUTPUT: ¬´Proc $proc = (my \Proc_6154464698824 = Proc.new(in => IO::Pipe, out => IO::Pipe.new(proc => Proc_6154464698824, path => IO::Path, chomp => Bool::True, nl-in => "\n", nl-out => "\n", encoding => "utf8"), err => IO::Pipe.new(proc => Proc_6154464698824, ‚Ä¶¬ª
[00:46] <rf> m: my $proc = Proc.new(:command('curl5', '-v'), :out, :err); dd $proc.err;
[00:46] <camelia> rakudo-moar 58157b8d3: OUTPUT: ¬´(my \IO::Pipe_4695249479552 = IO::Pipe.new(proc => (my \Proc_4695249560008 = Proc.new(in => IO::Pipe, out => IO::Pipe.new(proc => Proc_4695249560008, path => IO::Path, chomp => Bool::True, nl-in => "\n", nl-out => "\n", encoding => "utf8"), err => IO:‚Ä¶¬ª
[00:49] <rf> tonyo Yeah something is broken with the stderr
[00:49] <rf> tonyo Yeah something is broken with the stderr, and stdout returns the same thing
[00:52] *** sena_kun left
[00:55] <rf> m: my $proc = Proc.new(:command("curl5", "-v"), :out, :err); say $proc.err.IO.slurp
[00:55] <camelia> rakudo-moar 58157b8d3: OUTPUT: ¬´Cannot resolve caller slurp(IO::Path:U: ); none of these signatures matches:‚ê§    (IO::Path:D: :$bin!, *%_)‚ê§    (IO::Path:D: :$enc!, *%_)‚ê§    (IO::Path:D: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[00:55] <rf> err is Null for some reason
[01:03] *** xinming left
[01:05] *** xinming joined
[02:05] *** sourceable6 left
[02:06] *** sourceable6 left
[02:06] *** greppable6 left
[02:06] *** benchable6 left
[02:06] *** reportable6 left
[02:06] *** tellable6 left
[02:06] *** bisectable6 left
[02:06] *** squashable6 left
[02:06] *** unicodable6 left
[02:06] *** nativecallable6 left
[02:06] *** notable6 left
[02:06] *** releasable6 left
[02:06] *** linkable6 left
[02:06] *** evalable6 left
[02:06] *** evalable6 joined
[02:06] *** unicodable6 joined
[02:06] *** notable6 joined
[02:07] *** sourceable6 joined
[02:07] *** reportable6 joined
[02:07] *** benchable6 joined
[02:07] *** nativecallable6 joined
[02:08] *** linkable6 joined
[02:08] *** releasable6 joined
[02:08] *** squashable6 joined
[02:08] *** greppable6 joined
[02:08] *** tellable6 joined
[02:09] *** bisectable6 joined
[02:28] *** ProperNoun joined
[02:54] *** sftp left
[02:55] *** sftp joined
[03:02] *** razetime joined
[03:07] *** rf left
[03:39] *** kjp left
[03:40] *** kjp joined
[03:44] *** razetime left
[03:47] *** razetime joined
[04:47] *** benchable6 left
[04:47] *** committable6 left
[04:47] *** statisfiable6 left
[04:47] *** notable6 left
[04:47] *** bloatable6 left
[04:47] *** coverable6 left
[04:47] *** quotable6 left
[04:47] *** shareable6 left
[04:47] *** tellable6 left
[04:47] *** squashable6 left
[04:47] *** greppable6 left
[04:47] *** sourceable6 left
[04:47] *** bisectable6 left
[04:47] *** quotable6 joined
[04:47] *** sourceable6 joined
[04:47] *** squashable6 joined
[04:47] *** statisfiable6 joined
[04:48] *** benchable6 joined
[04:48] *** greppable6 joined
[04:48] *** bisectable6 joined
[04:48] *** committable6 joined
[04:49] *** tellable6 joined
[04:49] *** bloatable6 joined
[04:49] *** notable6 joined
[04:49] *** shareable6 joined
[04:50] *** coverable6 joined
[04:56] *** jmcgnh left
[05:07] *** jmcgnh joined
[05:22] *** tea3po joined
[05:25] *** teatwo left
[05:25] *** razetime left
[05:25] *** razetime joined
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[06:09] *** jmcgnh left
[06:13] *** jpn joined
[06:14] *** razetime left
[06:16] *** jmcgnh joined
[06:18] *** jpn left
[06:39] *** Sgeo left
[06:47] *** jpn joined
[06:48] *** sena_kun joined
[06:49] *** teatwo joined
[06:49] *** teatwo left
[06:50] *** teatwo joined
[06:52] *** tea3po left
[06:55] *** sena_kun left
[07:07] *** jpn left
[07:17] *** razetime joined
[07:19] *** razetime left
[07:25] *** jpn joined
[07:57] *** euandreh left
[07:58] *** jpn left
[08:11] *** sena_kun joined
[08:30] *** derpydoo joined
[08:39] *** jpn joined
[08:40] *** sdafds joined
[08:40] *** jpn left
[08:40] *** sdafds left
[08:59] *** NemokoschKiwi joined
[09:03] *** razetime joined
[09:13] *** dakkar joined
[09:21] *** abraxxa joined
[09:32] *** euandreh joined
[09:35] *** discord-raku-bot left
[09:36] *** discord-raku-bot joined
[10:04] *** NemokoschKiwi left
[10:07] *** japhb left
[10:31] * lizmat clickbaits https://rakudoweekly.blog/2023/03/20/2023-12-priced-2/
[10:33] *** japhb joined
[10:36] *** merp left
[10:37] <El_Che> I am not clicking on whatever you're selling, lady!
[10:37] <El_Che> :)
[10:38] <lizmat> yeah, I get it: you're not buying it :-)
[10:45] *** jpn joined
[11:04] *** japhb left
[11:04] *** japhb joined
[11:18] *** jpn left
[11:47] *** euandreh left
[11:50] *** jpn joined
[11:54] *** jpn left
[11:57] *** japhb left
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:06] *** euandreh joined
[12:27] *** razetime left
[12:32] <discord-raku-bot> <Anton Antonov> Has anyone used "WebService::GitHub" recently? Does that package still "work." If it does, please, point to example usage code. The examples in the README and repository do not work for me. (See here: https://raku.land/zef:raku-community-modules/WebService::GitHub .)
[12:40] <jast> I can't even install it (but possibly I just have no idea what I'm doing), but have you tried the alternative auth parameters from the "Setup" section in the readme?
[12:41] <discord-raku-bot> <Anton Antonov> @jast Thanks for trying it out! I did try a few alternatives without success. I am giving up on this package.
[12:45] <discord-raku-bot> <Anton Antonov> Is there a simple (or complicated but already coded) way of finding all of the keywords and symbols in Raku? (I can scrape the documentation, but that is too much work for me.)
[12:47] <lizmat> t/spec/S02-types/WHICH.t contains a list of classes that are expected to exist in Raku
[12:47] <lizmat> although it may be incomplete
[12:52] *** Ulti_ left
[12:55] <discord-raku-bot> <Anton Antonov> Ok, that is a good start. Also, this index can be used: https://raku-musings.com/keywords.html .
[13:09] *** jgaz joined
[13:13] *** jpn joined
[13:18] <discord-raku-bot> <Nemokosch> gonna see about that Github module
[13:25] <discord-raku-bot> <Anton Antonov> @Nemokosch Ok, sounds good. üôÇ
[13:47] <[Coke]> (musings index) ooh, nifty
[13:49] * [Coke] was very happy to click on that, click on a random article, click on a random link to the docs... it worked (whew)
[13:49] <discord-raku-bot> <Anton Antonov> @Coke I am mostly interested to use that list of keywords and symbols to make a Raku plug-in for Geany.
[13:52] *** kaskal left
[13:59] <discord-raku-bot> <Nemokosch> Geany, lol
[14:03] *** japhb joined
[14:27] <discord-raku-bot> <Nemokosch> so, it seems that CSON allowed one to wrap long lines without preserving the line breaks
[14:27] <discord-raku-bot> <Nemokosch> to be honest, I don't terribly mind to let this one go if there is no good way to do it in Raku
[14:28] <discord-raku-bot> <Nemokosch> still let me ask: is there a way to wrap string literals so that the linebreaks don't count into the string?
[14:37] <lizmat> q:to/END/.subst("\n",:g)
[14:37] <lizmat> q:to/END/.subst("\n", " ":g)   # if you want it replaced by a space
[14:37] <lizmat> q:to/END/.subst("\n", " ",:g)   # if you want it replaced by a space
[14:42] *** Sgeo joined
[14:44] * [Coke] signs up for google bard waitlist
[14:54] <discord-raku-bot> <Nemokosch> I was looking for a new favorite Raku snippet
[14:54] <discord-raku-bot> <Nemokosch> $data>>.=subst: 'XXX', $name, :g;
[14:54] <discord-raku-bot> <Nemokosch> quite a solid candidate xD
[14:55] <discord-raku-bot> <Nemokosch> "change the arbitrary template marker to the given string in all leaf nodes"
[14:57] <discord-raku-bot> <Nemokosch> while deepmap is kind of awkward for arrays, it makes perfect sense for JSON-like structures where it's common that only leaf nodes hold custom data
[14:57] *** squashable6 left
[15:00] *** squashable6 joined
[15:17] *** rf joined
[15:17] <rf> Morning folks
[15:22] *** abraxxa left
[15:42] *** jpn left
[15:49] *** archenoth joined
[15:50] *** codesections joined
[15:51] *** Oshawott left
[15:55] *** jpn joined
[16:02] *** jgaz left
[16:06] *** rf_ joined
[16:06] *** rf left
[16:21] *** jpn_ joined
[16:24] *** jpn left
[16:32] *** jpn joined
[16:34] *** jpn_ left
[16:43] *** jgaz joined
[16:52] *** perlbot left
[16:54] *** simcop2387 left
[16:59] *** jpn left
[17:08] *** simcop2387 joined
[17:10] *** perlbot joined
[17:15] *** derpydoo left
[17:27] <discord-raku-bot> <Nemokosch> how does the is copy trait copy exactly?
[17:29] <discord-raku-bot> <Nemokosch> I should have suspected that it doesn't try to copy hard enough since it doesn't even exist for @-sigilled variables
[17:45] *** QhpAptyj9hj0RQwM joined
[17:47] <discord-raku-bot> <Nemokosch> anyway, apparently it's pretty simple to get deep clone (or at least deep enough for my purposes)
[17:47] <discord-raku-bot> <Nemokosch> my $data = $input>>.clone;
[17:47] *** dakkar left
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:05] *** TieUpYourCamel left
[18:10] *** rf_ left
[18:14] *** gabiruh_ is now known as gabiruh
[18:18] *** TieUpYourCamel joined
[18:28] *** japhb left
[18:30] *** japhb joined
[18:49] *** tea3po joined
[18:52] *** teatwo left
[19:01] *** tg57 joined
[19:09] *** euandreh1 joined
[19:10] *** euandreh left
[19:10] *** euandreh1 is now known as euandreh
[19:13] *** jgaz left
[19:26] *** abraxxa-home joined
[20:00] *** jgaz joined
[20:16] *** tg57 left
[20:57] *** vrurg__ is now known as vrurg
[21:13] *** jgaz left
[21:14] *** abraxxa-home left
[21:26] <tbrowder__> hi. i know how  to get a modules version from the local one in its repo. BUT how do i get it from the installed version? the docs are a bit confusing to me. the docs say this "say $?DISTRIBUTION.meta<ver>;" but it doesn't work for me
[21:29] <tbrowder__> and i hate to hard wire it
[21:30] <ugexe> you cant access $?DISTRIBUTION from outside the distribution its from, so that wont work
[21:30] <ugexe> for instance you could query the various CompUnit::Repositories for some distribution and see what versions it finds
[21:31] <ugexe> but i'm not sure you can like `use Foo; say Foo.^ver;` unless ^ver was explicitly set in Foo
[21:32] <ugexe> however if you are asking if `$?DISTRIBUTION.meta<ver>;` works for a given distribution when installed, yes it works
[21:32] <ugexe> i.e. an installed distribution can use its own $?DISTRIBUTION in that way
[21:33] <ugexe> tbrowder__: also you probably want `$?DISTRIBUTION.meta<version>;`
[21:34] <tbrowder__> well, how do i get access to it internally? i've tried it from an installed bin file...but maybe it needs to be in the lib part...gonna check...
[21:34] <ugexe> cant be in a bin file
[21:35] <ugexe> cant be in a bin file
[21:35] <ugexe> it has to be in a module
[21:35] <ugexe> you can then use that module from the bin file 
[21:35] <tbrowder__> i do have a get-version sub in the lib, and call it from the bin file
[21:35] <ugexe> can you show me the code?
[21:36] <tbrowder__> https://www.irccloud.com/pastebin/zKSNXJ3h/
[21:37] <ugexe> i don't see why you need anything other than $?DISTRIBUTION.meta<version> // '';
[21:37] <ugexe> `sub get-version is export { $?DISTRIBUTION.meta<version> }`
[21:38] <ugexe> if the `version` key exists in the META6.json file, then the above should be sufficient for installed and non-installed
[21:39] <tbrowder__> because i want to see the version when i'm in my repo
[21:39] <ugexe> i dont see why that would be any different
[21:39] <ugexe> i'd have to see your repo i guess
[21:40] <ugexe> $?DISTRIBUTION is going to use your local repo if you are running `raku -I. bin/my-code.raku`
[21:40] <ugexe> and its going to be the installed repo if you run `raku bin/my-code.raku`
[21:41] <tbrowder__> ok, that should be okay. i'll try that...
[21:44] <tbrowder__> that works fine, thanks!
[21:46] <lucs> ugexe: I appear to have a problem with "zef install .", problem that is solved with "zef install /full/path/to/my/module".
[21:46] <lucs> Are you aware of such problems, or would it be useful for me to send you the details?
[21:47] <lucs> (Appears to have to do with some "resources" not being found."
[21:47] <ugexe> it works for me fwiw
[21:47] <ugexe> im pretty sure the CI tests have a test case for absolute local paths as well
[21:48] <ugexe> whats your repo, and wheres the full output
[21:48] <lucs> It also involves NativeCall, just saying.
[21:49] <lucs> Um, it's not my module actually, so I'll write up the problem in detail, rather than go back and forth here with you.
[22:00] *** sena_kun left
[22:08] *** tg57 joined
[22:10] *** rf joined
[22:10] <rf> Does anyone know off hand what algorithm .sort uses?
[22:15] <[Coke]>                 Rakudo::Sorting.MERGESORT-REIFIED-LIST(
[22:15] <rf> [Coke]++
[22:17] <[Coke]> https://github.com/rakudo/rakudo/blob/main/tools/build/makeNATIVE_SORTING.raku#L69
[22:47] *** tg57 left
[23:47] *** linkable6 left
[23:47] *** evalable6 left
[23:49] *** evalable6 joined
[23:50] *** linkable6 joined
