[01:43] *** Manifest0 left
[02:14] <discord-raku-bot> <antononcube> Anyone still around? üôÇ I have an advent post question.

[02:17] <discord-raku-bot> <antononcube> I am not sure where to make the blog post: to my blog or to "Raku Advent Calendar".

[02:19] <discord-raku-bot> <antononcube> @lizmat Here is the Markdown file I mentioned / promised: https://github.com/antononcube/RakuForPrediction-book/blob/main/Articles/Using-DALL-E-models-in-Raku.md .

[02:20] <discord-raku-bot> <antononcube> @lizmat I know I should make a gist, but I can also make an HTML file instead, right?

[02:23] *** gdown joined
[02:31] *** kylese left
[02:32] *** kylese joined
[03:15] *** kylese left
[03:15] *** kylese joined
[04:40] *** MasterDuke joined
[05:17] <gdown> Sets and hashes don't handle lists/classes as keys at all, is there a good way do it that I'm missing? Stringifying objects works, but feels absolutely horrible

[05:45] *** hythm joined
[05:53] <hythm> I'm trying to understand the purpose of `RUN-MAIN`, the docs says: "It gets a Callable that is the MAIN that should be executed". however, if I provided a new main, I see the default MAIN run as well:

[05:53] <tellable6> 2023-11-26T09:48:45Z #raku <melezhik> hythm: I got you üòâ

[05:54] <hythm> m: sub new-main () { say "new main"}; RUN-MAIN(&new-main, Nil); sub MAIN() {say "main"}

[05:54] <camelia> rakudo-moar 15a787cb3: OUTPUT: ¬´new main‚ê§main‚ê§¬ª

[05:56] <hythm> So my question is what is the purpose of RUN-MAIN, because it looks like I misunderstand its purpose

[06:00] *** teatime left
[06:09] <japhb> m: my $h := :{ set(3,4) => 12, <a b c> => 42 }; dd $h

[06:09] <camelia> rakudo-moar 15a787cb3: OUTPUT: ¬´:{Set.new(4,3) => 12, ("a", "b", "c") => 42}‚ê§¬ª

[06:09] <japhb> gdown: You just have to specify an object-keyed hash ^^

[06:24] *** teatime joined
[06:30] *** izel joined
[06:31] <izel> japhb: try retrieving <a b c>'s value please

[06:31] <izel> how are we supposed to do that

[06:37] *** hythm left
[06:42] *** Xliff_ left
[06:43] <gdown> m: my @a = 1,2,3; my $b = %{@a => 5} ; say $b{$(1,2,3)}

[06:43] <camelia> rakudo-moar 15a787cb3: OUTPUT: ¬´5‚ê§¬ª

[06:43] <gdown> izel: I could've sworn I tested it and it didn't work, but it apparently does

[06:43] *** goblin left
[06:43] *** goblin joined
[06:44] *** izel left
[06:44] *** izel joined
[06:47] <izel> why isn't this working then though

[06:47] <izel> m: my %h{List} = (0, 0) => 3; say %h{$(0, 0)}.raku

[06:47] <camelia> rakudo-moar 15a787cb3: OUTPUT: ¬´Any‚ê§¬ª

[06:47] <izel> confusing

[06:47] <izel> i guess i can't write the type List there it makes it bad

[06:49] <gdown> That is weird

[06:53] *** Xliff_ joined
[06:57] <gdown> japhb: It also seems that if you set a class as a key, it only can be indexed by the original instance of the class, which doesn't work for what I'm trying to use it for

[06:58] <gdown> :m class T { has $.a }; my $a = T.new(a => 1); my $b = T.new(a => 1); my $c = :{$a => 5}; say $c{$a}; say $c{$b}; dd $c

[06:58] <gdown> err

[06:58] <gdown> m: class T { has $.a }; my $a = T.new(a => 1); my $b = T.new(a => 1); my $c = :{$a => 5}; say $c{$a}; say $c{$b}; dd $c

[06:58] <camelia> rakudo-moar 15a787cb3: OUTPUT: ¬´5‚ê§Hash[Mu,Any] $c = $(:{T.new(a => 1) => 5})‚ê§(Mu)‚ê§¬ª

[06:59] <gdown> stderr got jumbled into the middle of stdout there, but I hope the point is still clear

[07:00] *** MasterDuke left
[07:13] *** izel left
[07:15] *** gdown left
[07:34] *** constxqt_ left
[07:49] *** constxqt_ joined
[07:54] *** sena_kun joined
[07:55] *** constxqt_ left
[08:08] *** constxqt_ joined
[08:12] *** jpn joined
[08:13] *** constxqt_ left
[08:22] *** jpn left
[08:27] *** jpn joined
[08:29] *** Sgeo left
[08:32] *** jpn left
[08:37] *** dbonnafo3 left
[08:38] *** dbonnafo2 joined
[08:38] *** Manifest0 joined
[08:39] *** jpn joined
[08:40] *** epony left
[08:40] *** constxqt_ joined
[08:43] *** jpn left
[08:45] *** constxqt_ left
[08:47] <ab5tract> grown: it uses WHICH inside, so only the object used as a key to store can be used as a key to retrieve

[08:48] <ab5tract> I haven‚Äôt had coffee yet so ymmv ;)

[08:51] *** dbonnafo2 left
[08:56] *** dakkar joined
[09:02] *** jpn joined
[09:25] *** derpydoo left
[09:59] *** constxqt_ joined
[10:04] *** constxqt_ left
[10:12] <ab5tract> gd

[10:12] <ab5tract> *gdown

[10:14] <ab5tract> You can always use stringification of the object as the key

[10:20] <ab5tract> Or you can make a custom hash-like class that uses smartmatch. You will need to override ACCEPTS on the key classes because

[10:21] <ab5tract> The default object smartmatch won‚Äôt return true in the example you shared

[10:22] <lizmat> in that light, https://raku.land/zef:lizmat/Hash::Agnostic might be interesting

[10:25] *** constxqt_ joined
[10:31] *** constxqt_ left
[10:49] *** constxqt_ joined
[10:54] <ab5tract> Oh nice! I was going to say, it‚Äôs sort of annoying to fully implement a hash ‚Äúequivalent‚Äù class. Looks like lizmat++ already provides all that scaffolding

[10:54] *** constxqt_ left
[11:02] *** constxqt_ joined
[11:07] *** constxqt_ left
[11:15] <discord-raku-bot> <nemokosch> It honestly shouldn't come as a surprise that you need a hashable data type to use something as a hash key

[11:15] <discord-raku-bot> <nemokosch> There is nothing Raku-specific about this

[11:34] *** constxqt_ joined
[11:39] *** constxqt_ left
[11:49] <ab5tract> I wouldn‚Äôt call it unreasonable to expect object hashes to use ACCEPTS instead of WHICH. It‚Äôs also not beyond imagination to expect default ACCEPTS to DWIM with objects that have the same attribute values.

[11:51] <ab5tract> In both cases Raku goes a different way but my own personal assumption on the matter is that these options would have been debated at implementation time.

[11:53] *** constxqt_ joined
[11:56] <ab5tract> Regardless of whether that‚Äôs true, Raku‚Äôs actually decently tunable around this, enough that the desired behavior is a role and three methods away.

[11:57] *** constxqt_ left
[12:08] <lizmat> when using ACCEPTS, how would one select the proper "key" without needing to check all keys to see whether ACCEPTed ?

[12:12] <ab5tract> You‚Äôd have to do that indeed

[12:12] <ab5tract> Quite costly, but it might be an appropriate trade off

[12:13] <ab5tract> If you know your objects will be simple, for instance. Or limited in attribute count.

[12:14] <ab5tract> With a limited set of keys

[12:15] <ab5tract> I‚Äôd probably still go with a deterministic stringification, to be honest.

[12:18] *** constxqt_ joined
[12:25] <lizmat> and that is what .WHICH is supposed to be

[12:30] <ab5tract> Right, but depending  on the use case you could use .Str to make a looser but deterministic-for-the-context matching

[12:31] <ab5tract> Overriding .WHICH to not always resolve to a single object would probably cause problems, right?

[12:37] <lizmat> yes

[12:38] *** jpn left
[12:39] <discord-raku-bot> <nemokosch> I would call it unreasonable to expect object hashes to use ACCEPTS üòõ

[12:40] <discord-raku-bot> <nemokosch> I don't think they could be called "hashes" at that point

[12:44] *** jpn joined
[12:44] <lizmat> associative arrays then ?

[12:52] *** jpn left
[12:56] <discord-raku-bot> <nemokosch> maybe buckets

[12:57] <discord-raku-bot> <nemokosch> smartmatch is very very far from an identity relation, it's only sufficient for superficial grouping

[13:11] <ab5tract> It‚Äôs clear that an identity relation is not what he is looking for, otherwise the default object behavior would work.

[13:13] <ab5tract> My point regarding ‚Äúunreasonable‚Äù is that Raku uses ACCEPTS more or less seamlessly in a number of places. So it‚Äôs not unfounded. Maybe that would have been a better word choice

[13:39] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/12/18/2023-51-still-more-magic/

[13:57] <discord-raku-bot> <antononcube> @lizmat Is the link to the Markdwon file of my post sufficient? Should I make gist of it?

[13:57] <discord-raku-bot> <antononcube> @lizmat Here is the link: https://github.com/antononcube/RakuForPrediction-book/blob/main/Articles/Using-DALL-E-models-in-Raku.md

[13:58] <lizmat> yeah, that'll work, thanks!

[14:00] <[Coke]> (associative arrays) Shades of TCL!

[14:04] *** epony joined
[14:04] <discord-raku-bot> <antononcube> Great!

[14:08] *** derpydoo joined
[14:25] *** jpn joined
[14:28] *** edr joined
[15:06] <discord-raku-bot> <nemokosch> it probably is an identity relation what he's looking for, just not the one described by ===

[15:07] <lizmat> antononcube am a bit confused about the rendering of "basename => raccoons-with-snowballs.png"    that feels incorrect ?

[15:08] <discord-raku-bot> <antononcube> @lizmat This is a "default output" of the DALL-E magic cell when an export of an image is made. It uses .IO.parts.tail (or something similar.)

[15:11] <discord-raku-bot> <antononcube> The function image-export is used by the DALL-E meta magic cells in "Jupyter::Chatbook". So, image-export instead of giving a True/False value gives the file path of the exported image, if the export was successful. That is helpful in bigger workflows.

[15:12] <discord-raku-bot> <antononcube> @lizmat Do you think I should add more explanations in that document? Or it is "too late" now?

[15:12] <lizmat> it's not too late... but please wait until I've done the initial version of the post  :-)

[15:13] <discord-raku-bot> <antononcube> üôÇ Ok. I am not sure what the overall procedure is...

[15:13] <lizmat> antononcube  you have a WP login it seems, so I will be able to give you a link with the draft version

[15:14] <discord-raku-bot> <antononcube> Ok, good.

[15:14] <discord-raku-bot> <antononcube> The advent instructions say to make a WordPress post -- where that post should have been: 1) my blog or 2) Raku Advent Calendar ?

[15:17] <lizmat> Raku Advent Calendar.... and it's ready for your perusal: https://rakuadventcalendar.wordpress.com/?p=3298&preview=true

[15:18] <discord-raku-bot> <antononcube> @lizmat Thanks!

[15:42] <discord-raku-bot> <antononcube> @lizmat Should I make edits in the WordPress document? (The link you provided.) Or just GitHub in my GitHub file?

[15:42] <lizmat> please in the WordPress document  :-)

[15:44] <discord-raku-bot> <antononcube> Ok.

[16:25] *** sena_kun left
[16:25] *** sena_kun joined
[16:32] *** izel joined
[16:32] *** izel left
[16:34] *** sena_kun left
[16:34] *** sena_kun joined
[16:47] *** nine left
[16:47] *** nine joined
[17:03] *** sena_kun left
[17:03] *** sena_kun joined
[17:26] *** jpn left
[17:38] *** jpn joined
[17:46] *** dakkar left
[17:47] *** jpn left
[18:01] *** jpn joined
[18:12] *** jpn left
[18:43] *** jpn joined
[20:04] *** jpn left
[20:07] *** jpn joined
[20:25] <Geth> ¬¶ advent/main: 1141a0a237 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2023/authors.md

[20:25] <Geth> ¬¶ advent/main: Add Anton Antonov's post

[20:25] <Geth> ¬¶ advent/main: review: https://github.com/Raku/advent/commit/1141a0a237

[20:26] <lizmat> only 2 slots left!

[20:26] *** jpn left
[20:29] *** jpn joined
[20:36] *** jpn left
[20:38] *** jpn joined
[20:51] <discord-raku-bot> <antononcube> @lizmat I can volunteer for another post. When is the next slot / date?

[20:51] <lizmat> 23/24

[20:53] <discord-raku-bot> <antononcube> Ok, I am volunteering then -- a post titled "Streamlining AI vision workflows" (with Raku). Or something like that.

[20:55] <lizmat> for the 24th then?

[20:56] *** kylese left
[20:56] *** kylese joined
[20:57] <Geth> ¬¶ advent/main: 1c0e8f3f74 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2023/authors.md

[20:57] <Geth> ¬¶ advent/main: Schedule another Anton Antonov for the 24th!

[20:57] <Geth> ¬¶ advent/main: review: https://github.com/Raku/advent/commit/1c0e8f3f74

[21:02] *** jpn left
[21:18] <discord-raku-bot> <antononcube> @lizmat Yes, 24th is fine.

[21:19] <lizmat> so scheduled :-)

[21:20] *** Guest6036 joined
[21:29] *** Guest6036 left
[21:55] *** Guest6821 joined
[22:05] *** Guest6821 left
[22:06] *** epony left
[22:08] *** Guest5572 joined
[22:12] *** epony joined
[22:20] *** epony left
[22:21] *** Guest5572 left
[22:25] *** epony joined
[22:39] *** sena_kun left
[22:47] *** Sgeo joined
