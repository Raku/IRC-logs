[00:00] *** reportable6 left
[00:00] *** lichtkind_ left
[00:03] *** reportable6 joined
[00:45] *** leah2 left
[01:45] *** evalable6 left
[01:45] *** linkable6 left
[01:46] *** linkable6 joined
[01:47] *** evalable6 joined
[02:27] *** teatwo joined
[02:27] *** linkable6 left
[02:30] *** linkable6 joined
[02:30] *** tea3po left
[03:30] *** linkable6 left
[03:30] *** evalable6 left
[03:31] *** linkable6 joined
[03:33] *** evalable6 joined
[04:33] *** bloatable6 left
[04:33] *** statisfiable6 left
[04:33] *** greppable6 left
[04:33] *** evalable6 left
[04:33] *** linkable6 left
[04:33] *** committable6 left
[04:33] *** reportable6 left
[04:33] *** bisectable6 left
[04:33] *** sourceable6 left
[04:33] *** coverable6 left
[04:33] *** quotable6 left
[04:33] *** squashable6 left
[04:33] *** releasable6 left
[04:33] *** tellable6 left
[04:33] *** notable6 left
[04:33] *** nativecallable6 left
[04:33] *** unicodable6 left
[04:33] *** benchable6 left
[04:33] *** shareable6 left
[04:33] *** shareable6 joined
[04:33] *** linkable6 joined
[04:33] *** benchable6 joined
[04:33] *** bloatable6 joined
[04:34] *** sourceable6 joined
[04:34] *** releasable6 joined
[04:34] *** reportable6 joined
[04:34] *** coverable6 joined
[04:34] *** unicodable6 joined
[04:34] *** quotable6 joined
[04:34] *** committable6 joined
[04:34] *** tellable6 joined
[04:34] *** bisectable6 joined
[04:34] *** greppable6 joined
[04:35] *** squashable6 joined
[04:35] *** statisfiable6 joined
[04:35] *** nativecallable6 joined
[04:36] *** evalable6 joined
[04:36] *** notable6 joined
[04:36] *** jpn joined
[04:41] *** jpn left
[04:57] *** leah2 joined
[05:02] *** squashable6 left
[05:02] *** Sgeo joined
[05:04] *** squashable6 joined
[05:45] *** willthechill left
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[06:10] *** jpn joined
[06:19] *** abraxxa joined
[06:53] *** Sgeo left
[07:51] *** jpn left
[07:54] *** dakkar joined
[08:23] *** jpn joined
[08:45] *** sena_kun joined
[09:22] *** Aedil left
[09:22] *** Aedil joined
[09:38] *** jpn left
[09:49] *** lichtkind_ joined
[10:49] *** evalable6 left
[10:49] *** linkable6 left
[10:49] *** evalable6 joined
[10:49] *** linkable6 joined
[11:17] *** abraxxa left
[11:50] *** jpn joined
[11:55] *** jpn left
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:33] *** abraxxa joined
[12:41] *** abraxxa left
[12:43] *** abraxxa joined
[12:45] *** jpn joined
[12:50] *** jpn left
[13:09] <discord-raku-bot> <antononcube> I curious about the reasons @nemokosch has that opinion about bash. I might scrape all (bash-bashing) IRC messages by him in order to get a better picture...

[13:09] *** jpn joined
[13:10] <dpk> the UNIX-HATERS Handbook has some choice words about shell ‚Äòprogramming‚Äô

[13:10] <discord-raku-bot> <antononcube> @dpk Thanks -- will read (at least a little of it.)

[13:13] *** jgaz left
[13:13] *** jpn left
[13:17] *** burpshirt joined
[13:20] *** jgaz joined
[13:22] *** burpshirt left
[13:29] <discord-raku-bot> <antononcube> @dpk Maybe you refer to the chapter "The Shell Game"...

[13:42] *** rf joined
[13:53] <discord-raku-bot> <nemokosch> I wonder if somebody needs to hate Unix to come to the same conclusions though

[13:54] <discord-raku-bot> <nemokosch> I think it's really easy to summarize

[13:54] <discord-raku-bot> <nemokosch> 1. No proper data types

[13:54] <discord-raku-bot> <nemokosch> 2. No proper variables and scoping

[13:54] <discord-raku-bot> <nemokosch> 3. No proper control structures or even syntax

[13:57] <discord-raku-bot> <nemokosch> I started learning about Tcl and it really seems that's what shell would look like if it were actually designed

[14:00] <tbrowder__> btw, bash is handy for running raku scripts during module development.

[14:02] <tbrowder__> a raku question, is there any way to specify a class is not to be used with a certain role (or vice versa)?

[14:04] <discord-raku-bot> <antononcube> @dpk BTW, the first book I read about R was the "R Inferno". https://www.burns-stat.com/documents/books/the-r-inferno/

[14:15] <[Coke]> tbrowder__: I don't think so, no, unless you have a special meta model that is aware of both the classes and roles.

[14:16] <[Coke]> (tcl) I spent a lot of time trying to get tcl to work on parrot, which was interesting but never really ended up somewhere useful.

[14:17] <[Coke]> [puts "hello, partcl"]

[14:24] <tbrowder__> ah, the answer (at least for my situation) is to use a method instead of an attribute for the conflicting values.

[14:26] *** teatwo left
[14:27] *** teatwo joined
[14:32] *** Aedil left
[14:42] *** zapwai joined
[14:49] *** RonaldR34g4m left
[14:49] <tbrowder__> [Coke]: thanks

[14:52] <tbrowder__> btw, those having no *nix experience probably have not had a shop with multiple *nix hosts before Win NT came along.

[14:52] *** Vyrus joined
[14:53] <tbrowder__> bash or csh were required

[14:54] *** squashable6 left
[14:55] <tbrowder__> i used perl to runany required tcl stuff

[14:57] *** squashable6 joined
[15:00] <[Coke]> (tcl) once ast lands, maybe adding a new-style Slang for tcl might be interesting.

[15:08] *** willthechill joined
[15:26] <[Coke]> (but one of the issues there was always that tcl really wants to just embed its own interpreter, not have a reimplementation)

[16:08] *** linkable6 left
[16:08] *** evalable6 left
[16:09] *** evalable6 joined
[16:10] *** linkable6 joined
[16:32] *** dakkar left
[16:39] <tonyo> .

[16:43] <tbrowder__> i think i had to capture stderr and stdout and extract wanted items. using perl 4 (went to p5 way later than i should have)

[16:43] <tbrowder__> used expect a bit, too

[16:44] <tbrowder__> ugh, hooray raku!

[16:56] <discord-raku-bot> <nemokosch> yep, Tcl sounds simple enough to implement within Raku

[16:57] <discord-raku-bot> <nemokosch> and tbh so far the relation really looks like Tcl is a much more shell-ish language than even oldschool Perl

[16:58] <discord-raku-bot> <nemokosch> but yeah, at least it starts to feel like a language with programming language ambitions, rather than eval hacking ambitions

[17:32] *** linkable6 left
[17:32] *** evalable6 left
[17:34] *** evalable6 joined
[17:35] *** linkable6 joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:31] *** toaaster joined
[18:55] *** abraxxa left
[19:15] *** toaaster left
[19:16] *** toaaster joined
[19:42] *** toaaster left
[19:55] <rf> nemokosch: TCL is basically string theory

[19:55] <tellable6> rf, I'll pass your message to Nemokosch

[20:01] <discord-raku-bot> <nemokosch> string theory ü§£

[20:01] <discord-raku-bot> <nemokosch> well, astrophysics is cool isn't it

[20:15] *** Voldenet_ joined
[20:16] *** Voldenet left
[20:16] *** Voldenet_ is now known as Voldenet

[20:33] *** deoac joined
[20:35] *** jpn joined
[20:41] *** jpn left
[20:41] *** gabiruh left
[20:51] *** jpn joined
[21:04] *** jpn left
[21:15] *** jpn joined
[21:17] *** Voldenet_ joined
[21:17] *** Voldenet left
[21:17] *** Voldenet_ is now known as Voldenet

[21:19] *** zapwai left
[21:20] *** jpn left
[21:20] *** gabiruh joined
[21:21] *** sena_kun left
[21:24] *** jpn joined
[22:04] <tbrowder__> .tell lizmat: i'm looking for raku volunteers to propose a string of suitable text in their native language (using the two-letter ISO code to identify it) for a font-sampler prog that will accompany my upcoming module 'FontFactory'. a similar request was made for my Date::Names module, but this is much easier (but more artistic in some ways). file the suggested text in a single issue per language. each input should include the 

[22:04] <tbrowder__> two-letter ISO code for the language and the desired name for attribution. single lines to fit  between the margins of portrait A4 paper are preferred. file issues at https://github.com/tbrowder/FontFactory. p.s. the inputs can add a preferred font if desired (and it's readily available as a free font, or provide a link to the font).

[22:04] <tellable6> tbrowder__, I'll pass your message to lizmat

[22:18] *** jpn left
[22:59] *** jpn joined
[23:04] *** jpn left
[23:16] *** Sgeo joined
[23:35] *** Util joined
[23:39] *** Xliff joined
[23:40] <Xliff> m: say "perl".comb.Bag ‚äÜ "scriptinglanguage".comb.Bag;

[23:40] <camelia> rakudo-moar a04661369: OUTPUT: ¬´True‚ê§¬ª

[23:41] <Xliff> m: say "perl".comb.Bag ‚ää "scriptinglanguage.comb.Bag

[23:41] <camelia> rakudo-moar a04661369: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> say "perl".comb.Bag‚èè ‚ää "scriptinglanguage.comb.Bag‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§‚Ä¶¬ª

[23:41] <Xliff> The difference is the use of...

[23:41] <Xliff> m: 0x22a8.uniname.say

[23:41] <camelia> rakudo-moar a04661369: OUTPUT: ¬´TRUE‚ê§¬ª

[23:42] <Xliff> m: chr(0x22a8).uniname.say

[23:42] <camelia> rakudo-moar a04661369: OUTPUT: ¬´TRUE‚ê§¬ª

[23:42] <Xliff> *snarl*

[23:42] <Xliff> ‚äÜ - Works

[23:42] <Xliff> vs 

[23:42] <Xliff> ‚ää - does not work (0x228a)

[23:43] <Xliff> Bug?

[23:43] <Xliff> Oversight?

[23:43] <Xliff> If one operator works, the rule of orthogonality says the other should as well.

[23:45] *** zapwai joined
[23:54] <[Coke]> ‚äÜ - U+002286 - SUBSET OF OR EQUAL TO [Sm]

[23:54] <[Coke]> ‚ää - U+00228A - SUBSET OF WITH NOT EQUAL TO [Sm]

[23:57] *** lichtkind_ left
