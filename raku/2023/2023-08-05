[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:04] *** squashable6 left
[00:07] *** squashable6 joined
[01:07] *** linkable6 left
[01:07] *** evalable6 left
[01:07] *** linkable6 joined
[01:09] *** evalable6 joined
[01:16] *** razetime joined
[01:41] <tbrowder__> i look at most raku blogs and want to give like or thumbs up but stopped by various login stupidities (like having to enter a password i can‚Äôt see or captcha pictures 5mm square

[01:42] <tbrowder__> well, larger but dull

[01:42] <tbrowder__> hard to see anyway

[02:16] *** evalable6 left
[02:16] *** linkable6 left
[02:17] *** linkable6 joined
[02:18] *** evalable6 joined
[02:41] *** coleman joined
[03:31] *** hythm left
[03:37] *** xs joined
[03:56] *** razetime left
[04:19] *** xs left
[05:19] *** greppable6 left
[05:19] *** unicodable6 left
[05:19] *** committable6 left
[05:19] *** tellable6 left
[05:19] *** sourceable6 left
[05:19] *** bisectable6 left
[05:19] *** coverable6 left
[05:19] *** statisfiable6 left
[05:19] *** evalable6 left
[05:19] *** notable6 left
[05:19] *** releasable6 left
[05:19] *** quotable6 left
[05:19] *** benchable6 left
[05:19] *** bloatable6 left
[05:19] *** squashable6 left
[05:19] *** shareable6 left
[05:19] *** nativecallable6 left
[05:19] *** reportable6 left
[05:19] *** linkable6 left
[05:20] *** linkable6 joined
[05:20] *** evalable6 joined
[05:20] *** committable6 joined
[05:20] *** reportable6 joined
[05:20] *** squashable6 joined
[05:20] *** releasable6 joined
[05:21] *** bloatable6 joined
[05:21] *** shareable6 joined
[05:21] *** nativecallable6 joined
[05:21] *** unicodable6 joined
[05:21] *** quotable6 joined
[05:22] *** tellable6 joined
[05:22] *** bisectable6 joined
[05:22] *** notable6 joined
[05:22] *** sourceable6 joined
[05:22] *** greppable6 joined
[05:22] *** benchable6 joined
[05:22] *** statisfiable6 joined
[05:22] *** coverable6 joined
[05:41] *** siavash joined
[06:00] *** reportable6 left
[06:00] *** jpn joined
[06:03] *** reportable6 joined
[07:03] *** squashable6 left
[07:03] *** linkable6 left
[07:03] *** bisectable6 left
[07:03] *** bloatable6 left
[07:03] *** evalable6 left
[07:03] *** nativecallable6 left
[07:03] *** greppable6 left
[07:03] *** statisfiable6 left
[07:03] *** notable6 left
[07:03] *** quotable6 left
[07:03] *** benchable6 left
[07:03] *** coverable6 left
[07:03] *** unicodable6 left
[07:03] *** sourceable6 left
[07:03] *** committable6 left
[07:03] *** shareable6 left
[07:03] *** tellable6 left
[07:03] *** releasable6 left
[07:03] *** reportable6 left
[07:03] *** nativecallable6 joined
[07:03] *** notable6 joined
[07:04] *** bloatable6 joined
[07:04] *** reportable6 joined
[07:04] *** benchable6 joined
[07:04] *** evalable6 joined
[07:04] *** bisectable6 joined
[07:05] *** sourceable6 joined
[07:05] *** coverable6 joined
[07:05] *** greppable6 joined
[07:05] *** tellable6 joined
[07:05] *** squashable6 joined
[07:05] *** committable6 joined
[07:05] *** quotable6 joined
[07:05] *** unicodable6 joined
[07:05] *** linkable6 joined
[07:05] *** statisfiable6 joined
[07:05] *** releasable6 joined
[07:06] *** shareable6 joined
[07:08] *** jpn left
[07:11] *** jpn joined
[07:39] *** jpn left
[07:46] *** jpn joined
[08:15] *** tea3po joined
[08:15] *** teatwo left
[08:16] *** tea3po left
[08:16] *** tea3po joined
[08:17] *** tea3po left
[08:38] *** sena_kun joined
[08:48] *** razetime joined
[08:56] *** jpn left
[09:13] *** teatime joined
[09:54] *** Sgeo left
[10:03] <xinming> What is the best way to pass an customized array string to a raku script?  I don't like the eval approach, But I feel it probably the only way to do so.

[10:03] *** jpn joined
[10:06] <discord-raku-bot> <nemokosch> What does "customized array string" mean?

[10:08] *** jpn left
[10:14] <discord-raku-bot> <antononcube> @xinming For the CLI scripts of ‚ÄúText::Plot‚Äù I do ad hoc parsing of the ‚Äúcustomized arrays‚Äù. I.e. strings specifying lists of points.

[10:15] *** NemokoschKiwi joined
[10:23] *** NemokoschKiwi left
[10:24] *** vrurg_ joined
[10:26] *** vrurg left
[10:36] *** siavash left
[11:36] *** linkable6 left
[11:36] *** evalable6 left
[11:39] *** linkable6 joined
[11:39] *** evalable6 joined
[11:52] *** jpn joined
[11:55] <xinming> nemokosch, flat array can be handled with simple string split with delimiter, But multi dimentional array is hard to do in this case

[11:55] <xinming> antononcube thanks

[11:57] *** jpn left
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:48] *** jpn joined
[12:53] *** jpn left
[12:54] <discord-raku-bot> <nemokosch> yeah well, you could parse it recursively

[12:54] <discord-raku-bot> <nemokosch> depends on how formal your input is

[12:55] <discord-raku-bot> <nemokosch> if it has some simple formalism, then maybe it's still better to parse it than to EVAL it; if it really is some arbitrary Raku content then obviously you can't beat EVAL

[13:19] <discord-raku-bot> <antononcube> @xinming I thinking this might be a good use case for "Text::SubParsers" -- I face similar problems when dealing LLM outputs. (I strategically do what @nemokosch  outlined above.)

[13:33] *** razetime left
[13:43] *** jpn joined
[13:46] *** sena_kun left
[13:47] *** sena_kun joined
[13:51] *** jpn left
[13:59] *** Matthew|m left
[14:04] *** Altai-man joined
[14:05] *** Geth left
[14:07] *** sena_kun left
[14:11] <discord-raku-bot> <librasteve> I would like to get my blog added to planet.raku.org ... seems that Roman Baumer is listed as the contact. Does he ever stop by here? By what name?

[14:11] <lizmat> librasteve what's the RSS feed URL ?

[14:12] <discord-raku-bot> <librasteve> planet.raku.org/atom.xml

[14:13] <lizmat> no, I mean of your blog  :-)

[14:13] <discord-raku-bot> <librasteve> rakujourney.wordpress.com

[14:13] <discord-raku-bot> <librasteve> lol

[14:14] <lizmat> gimme a o

[14:14] <lizmat> mo

[14:22] <lizmat> ok, updated... should be live in an hour or so

[14:31] <discord-raku-bot> <nemokosch> pretty sure Roman Baumer stopped being the contact but who is it then

[14:32] <lizmat> I put myself in for now

[14:33] *** NemokoschKiwi joined
[14:36] *** Tirifto_ left
[14:39] *** Tirifto joined
[14:40] *** Tirifto left
[14:41] *** Tirifto joined
[14:59] <gfldex> :q1

[15:30] <lizmat> librasteve you're in!

[15:34] *** jpn joined
[15:39] *** jpn left
[16:12] <xinming> nemokosch, I know we can have EVAl, But that's the last option to choose.

[16:12] <xinming> antononcube, thanks.

[16:13] <discord-raku-bot> <nemokosch> not sure why you said that though

[16:13] <xinming> nemokosch, EVAL can run all things in the script.

[16:14] <discord-raku-bot> <nemokosch> I know but why are you saying this? Why is this your takeaway?

[16:15] <xinming> the script will probably run with another user.

[16:27] <discord-raku-bot> <nemokosch> okay, I guess I'll never know why you said this üòÑ

[16:28] <discord-raku-bot> <antononcube> @lizmat Please include https://rakuforprediction.wordpress.com !!! üôÇ

[16:29] <lizmat> antononcube  will do

[16:30] <Geth> ¬¶ planet.raku.org: 2ac1bacf72 | (Elizabeth Mattijsen)++ | perlanetrc

[16:30] <Geth> ¬¶ planet.raku.org: Add Anton Antonov

[16:30] <Geth> ¬¶ planet.raku.org: review: https://github.com/Raku/planet.raku.org/commit/2ac1bacf72

[16:30] <lizmat> should be live in about an houre

[16:30] <lizmat> *hour

[16:33] <discord-raku-bot> <antononcube> @lizmat Thanks!

[16:39] *** linkable6 left
[16:39] *** evalable6 left
[16:40] *** evalable6 joined
[16:41] *** linkable6 joined
[16:45] <discord-raku-bot> <nemokosch> say Foo explodes at compile time but say Foo::Bar only explodes at runtime

[16:45] <discord-raku-bot> <nemokosch> these are such demotivating nonsensical things

[16:46] <discord-raku-bot> <nemokosch> even say Foo::{'Bar'} or say Foo::<Bar> will blow up at compile time

[16:46] <discord-raku-bot> <nemokosch> but the one that looks the least like an operation, makes it to runtime

[17:09] *** jpn joined
[17:12] *** rf joined
[17:14] *** jpn left
[17:22] <Geth> ¬¶ planet.raku.org: dc4a563cea | (Elizabeth Mattijsen)++ | perlanetrc

[17:22] <Geth> ¬¶ planet.raku.org: Arhg, messed up Anton Antonov's feed URL

[17:22] <Geth> ¬¶ planet.raku.org: review: https://github.com/Raku/planet.raku.org/commit/dc4a563cea

[17:22] <lizmat> antononcube sorry, will take another hour  :-(

[17:40] *** NemokoschKiwi left
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[19:02] *** evalable6 left
[19:03] *** evalable6 joined
[19:12] <rf> What library is recommended for SHA1?

[19:17] <ugexe> m: sub sha1($str) { (CompUnit::Repository::Distribution but role :: { method Str { $str } }).id }; say sha1("abc")

[19:17] <camelia> rakudo-moar 1d100f8e7: OUTPUT: ¬´A9993E364706816ABA3E25717850C26C9CD0D89D‚ê§¬ª

[19:17] <ugexe> just use nqp::sha1 by abusing other actual public apis!

[19:18] <xinming> Is there a ubuntu repo for newest rakudo compiler?

[19:19] <xinming> I'm using gentoo, so I compile each time with new release, But another machine I manage which is ubuntu.

[19:19] <rf> ugexe nice!

[19:19] <xinming> So, looking for a lazyman's way

[19:19] <rf> Rakubrew

[19:19] <xinming> the built-in raku is 2019.12

[19:19] <rf> Is your best friend

[19:20] <xinming> Thanks, will check that, I never know that

[19:21] *** jpn joined
[19:21] <rf> ugexe do you know how that performs vs something like Digest::SHA1 native or Digest?

[19:22] <rf> I've seen that NQP is unearthly fast sometimes

[19:22] <ugexe> i was only joking

[19:23] <rf> Lol. I know just pondering

[19:23] <ugexe> nqp::sha1 is probably fairly optimized

[19:24] <rf> I'm adding web-sockets to Humming-Bird and you have to do a dance of SHA1 -> Base64 + Magic string to enable comms, that's why this came up

[19:29] *** justache is now known as reddit-boat

[19:29] *** reddit-boat is now known as justache

[19:31] *** ab5tract joined
[19:39] *** jpn left
[19:42] *** jpn joined
[19:47] *** jpn left
[19:56] *** rf left
[20:06] *** ab5tract left
[20:07] <discord-raku-bot> <librasteve> brilliant - thanks!

[20:09] <discord-raku-bot> <librasteve> ++

[20:14] *** teatwo joined
[20:17] *** teatime left
[20:21] *** Sgeo joined
[20:24] *** teatwo left
[20:24] *** teatwo joined
[20:26] *** rf joined
[20:47] *** ab5tract joined
[21:17] *** ab5tract left
[21:19] <El_Che> xinming: https://github.com/nxadm/rakudo-pkg

[21:25] <lizmat> for all the vim users: https://groups.google.com/g/vim_announce/c/tWahca9zkt4   

[21:27] *** rf left
[21:29] <japhb> I'm blanking -- is there syntactic relief for passing on an optional named argument *only if it was defined*?  In other words, something to clean up the inner call of `method a(:$optional = True) { dd $optional };  method b(:$some, :$optional, :$args) { self.a(|(:$optional if $optional.defined)) }`

[21:31] *** wafflus joined
[21:31] <lizmat> :optional($_) with $optional

[21:31] <lizmat> ?

[21:32] <japhb> Hmmm

[21:32] <japhb> Will that avoid having to wrap in |() as well?

[21:33] <lizmat> no, don't think so

[21:33] <japhb> Gah, that's annoying.

[21:33] <japhb> (Although thanks for the idea, lizmat++)

[21:34] <japhb> I guess I'm wanting something like a `:?$optional` syntax

[21:34] <lizmat> the other idea, if there are multiple cases like this, is to set up a hash, and than flatten the hash into the arguments

[21:34] <japhb> lizmat: Yeah, I do that in a couple places.  It doesn't end up being hugely shorter, but sometimes it's at least a bit more clear

[22:03] *** wafflus left
[22:08] *** jpn joined
[22:24] *** hellwolf left
[22:24] *** hellwolf joined
[22:29] *** jpn left
[22:32] *** ab5tract joined
[22:43] *** ab5tract left
[22:51] *** Altai-man left
[23:51] *** evalable6 left
[23:51] *** unicodable6 left
[23:51] *** greppable6 left
[23:51] *** nativecallable6 left
[23:51] *** committable6 left
[23:51] *** tellable6 left
[23:51] *** quotable6 left
[23:51] *** releasable6 left
[23:51] *** shareable6 left
[23:51] *** coverable6 left
[23:51] *** squashable6 left
[23:51] *** benchable6 left
[23:51] *** notable6 left
[23:51] *** bisectable6 left
[23:51] *** sourceable6 left
[23:51] *** statisfiable6 left
[23:51] *** linkable6 left
[23:51] *** bloatable6 left
[23:51] *** reportable6 left
[23:51] *** quotable6 joined
[23:51] *** benchable6 joined
[23:51] *** committable6 joined
[23:51] *** coverable6 joined
[23:52] *** tellable6 joined
[23:52] *** statisfiable6 joined
[23:52] *** linkable6 joined
[23:52] *** greppable6 joined
[23:52] *** reportable6 joined
[23:52] *** squashable6 joined
[23:52] *** nativecallable6 joined
[23:52] *** notable6 joined
[23:52] *** unicodable6 joined
[23:53] *** evalable6 joined
[23:53] *** shareable6 joined
[23:53] *** bloatable6 joined
[23:54] *** releasable6 joined
[23:54] *** sourceable6 joined
[23:54] *** bisectable6 joined
