[00:42] <ugexe> I’d probably use Cro::FastCGI then 

[00:42] <ugexe> Cro::FCGI rather 

[01:32] *** MasterDuke left
[01:48] *** epony joined
[02:07] <Voldenet> I like using plain http server more (Cro::HTTP::Server), because it's sufficiently fast and easier to reason about

[02:08] <Voldenet> It's not the general rule, but in a lot of languages http server is also faster than fcgi

[02:15] <Voldenet> and since Cro::FastCGI is supposed to be drop-in replacement, fcgi can be added later

[02:23] *** epony left
[02:27] *** epony joined
[02:42] *** kylese joined
[02:43] *** hulk left
[03:15] *** kylese left
[03:15] *** kylese joined
[03:28] *** k3ut0i joined
[03:30] *** kylese left
[03:35] *** kylese joined
[03:54] <tonyo> sparrow is another good option

[03:55] <tonyo> not sparrow, rather

[03:55] <tonyo> humming-bird

[04:34] *** maylay left
[04:43] *** maylay joined
[05:10] *** Guest1 left
[05:20] *** jpn joined
[05:25] *** jpn left
[05:27] *** tejr left
[06:27] *** tejr joined
[07:21] *** derpydoo joined
[07:29] *** epony left
[07:38] *** epony joined
[07:53] *** k3ut0i left
[08:19] *** jpn joined
[08:24] *** jpn left
[09:00] *** jpn joined
[09:04] *** jpn left
[09:14] *** jpn joined
[09:18] *** melezhik joined
[09:23] <melezhik> My 2 cents. I you want something simple and lightweight ( just a few deps ) then use humming bird , cro is more mature solution but comes with more dependencies overhead and sometimes harder to debug ( cause it involves a lot of calls along a stack trace and some of them are not trivial to comprehend , especially when it comes to cro templates

[09:23] <melezhik> errors or cro routes errors ) . Humming bird does not have template engine out of the box . So I have used both of them and they have pros and cons . SparrowCI and sparky runs on cro , internal job web site runs on HB and I am quite satisfied with that.

[09:28] *** melezhik left
[10:06] *** sena_kun joined
[10:10] *** Summer left
[10:10] <discord-raku-bot> <nemokosch> Adding an own template engine is kind of a weird flex for most web frameworks imo

[10:11] <discord-raku-bot> <melezhik> Why ?

[10:13] <discord-raku-bot> <nemokosch> Because templating is just a bunch of glorified opinions anyway. It's not like there are considerably better or worse options or any need to reinvent it for the umpteenth time

[10:13] <discord-raku-bot> <melezhik> I mean not necessarily own template engine , but support of existing   , I always find this useful , so a user don’t spend time on integration…

[10:14] <discord-raku-bot> <nemokosch> I'm specifically talking about $yet-another-amazing-template-system

[10:14] <discord-raku-bot> <melezhik> Yeah

[10:14] <discord-raku-bot> <nemokosch> Integrating an existing, well-established system is fine and reasonable

[10:15] <discord-raku-bot> <nemokosch> Of course this is all the funnier if the language happens to be PHP

[10:15] <discord-raku-bot> <melezhik> I mean I would be quite happy with  any template engine supported out if the box in a web framework so I just don’t spend time on integration , and I agree all in all the are “all the same” , it’s just the matter of a choice and taste

[10:17] <discord-raku-bot> <nemokosch> Symfony brings its own template system called Twig. And frankly, the arguments they themselves list for using it over vanilla PHP are anything but convincing lol

[10:17] <discord-raku-bot> <melezhik> Like am I am not a huge fan or cro template engine , but after all it’s better then nothing

[10:18] <discord-raku-bot> <nemokosch> Maybe the one about security. But then I'm pretty sure Twig also allows one to inject code and then what was all the hassle for

[10:19] <discord-raku-bot> <melezhik> Ok …

[10:19] <discord-raku-bot> <nemokosch> This is also why YAML seems to be going the wrong way, neglecting its own very niche and purpose

[10:19] <discord-raku-bot> <nemokosch> The world doesn't need another scripting language, that's what the world needs the least

[10:19] <discord-raku-bot> <melezhik> You mean in a sense of using it as a tempting system for web or ?

[10:21] <discord-raku-bot> <nemokosch> I mean that YAML is a data language. Data that a system gives meaning to. Because people hated writing and reading XML and later JSON as well

[10:25] <discord-raku-bot> <nemokosch> YAML has references and attribute flattening. These are fairly essential data composition operations. However, it's not meant to allow "take every odd value and multiply them by two" kind of hacks. This sort of configurability kills portability and simplicity, aka the sole purpose

[10:25] <discord-raku-bot> <nemokosch> When somebody replaces PHP for a scriptable template system, it's the same thing.

[10:26] <discord-raku-bot> <nemokosch> PHP is the scriptable template system

[10:27] <discord-raku-bot> <nemokosch> Of course this applies for PHP frameworks, not the whole world. The whole world should just decide a bunch of scriptable(? maybe not) template systems to use

[11:16] *** jpn left
[11:33] *** abraxxa-home joined
[11:49] *** k3ut0i joined
[11:59] *** Sgeo left
[13:13] *** jpn joined
[13:20] *** jpn left
[14:09] *** jpn joined
[14:13] *** jpn left
[14:23] *** jpn joined
[14:29] *** jpn left
[15:11] *** k3ut0i left
[15:19] *** Guest1 joined
[15:26] *** _________ left
[15:28] *** _________ joined
[15:36] *** jpn joined
[15:40] *** jpn left
[15:42] <jdv> should?  why don't we all use asm or c or python then - no need for alternatives

[15:45] <jdv> i've only used cro's template stuff once but it seemed decently raku/minimal-ish

[15:46] <jdv> with how powerful interoplation is in raku i'd contend it might be enough natively for "web/html templating"

[16:00] *** stanrifkin_ joined
[16:02] *** _________ left
[16:10] <discord-raku-bot> <nemokosch> for template systems, really there should be like 3 options and that's it

[16:10] *** _________ joined
[16:11] <discord-raku-bot> <nemokosch> just like for data exchange XML was dominant once upon and now it's fairly obviously all JSON, no alternatives

[16:14] <jdv> i have written a simple xml generation "subsystem" in raku before for a project and it was delighful - all 100% just raku string interp

[16:15] <jdv> the only slightly annoying part was getting it all "pretty/lined up"  but that's probably something stupid on my part

[16:22] <tinita> nemokosch: what's attribute flattening?

[16:28] <discord-raku-bot> <nemokosch> that you can combine key-value pairs from different YAML object references into one object

[16:29] <tinita> nemokosch: ah, so I assume you mean the << merge key?

[16:29] <discord-raku-bot> <nemokosch> yes

[16:31] <discord-raku-bot> <nemokosch> once upon I considered using YAML to replace the baked CSON files (awk hackery) in the Raku highlighter plugin - it turned out that it has no similar flattening for lists. Not because there weren't hundreds of people that asked about it before or dozens of people who requested it, "just because"

[16:32] <discord-raku-bot> <nemokosch> so suddenly there was no point in using YAML and eventually I used plain Raku code that defines Maps and references some dynamic variables that I documented in comments

[16:34] <tinita> nemokosch: it would be easy to implement though with a custom tag. e.g. !concat [*seq1, *seq1, ...]

[16:35] <discord-raku-bot> <nemokosch> so by essentially running code?

[16:35] <tinita> the merge key will also internally run code, yeah. it's basically the same mechanism

[16:36] <discord-raku-bot> <nemokosch> I mean "internally" all parsed data runs code but it makes a huge difference what the provided interface is. For data description, the interface should be tight and the least scriptable because that's more secure and portable

[16:36] <tinita> the parser itself does not know anything about merge keys. it's detected by the constructor as the !!merge tag

[16:37] <discord-raku-bot> <nemokosch> well, how to put it. You are essentially saying that it's worse than I assumed, or I don't know

[16:37] <tinita> so a custom !concat tag and the implicit !!merge tag will both run some code during construction

[16:38] <tinita> maybe, that depends on how you define worse =)

[16:38] <discord-raku-bot> <nemokosch> the point is all the same: there shouldn't be all this custom scriptability; there should be reasonable fundamentals

[16:38] <discord-raku-bot> <nemokosch> and I'm kind of butthurt about this, if that's the right word to use, because most people simply don't get the chance to roll out their technology and get it used by millions

[16:39] <discord-raku-bot> <nemokosch> not understanding - or worse, ignoring - what one got entrusted with feels so... wrong

[16:42] <discord-raku-bot> <antononcube> This is exactly what I hear when I (try to) discuss my Machine Learning (ML) template engines. (One made with Mathematica, the other with Raku.)

[16:42] <tinita> at work we are using YAML::PP with files that use << plus the custom !include tag to load files. so it's really helpful

[16:42] <tinita> aws is using custom tags to make the files less verbose

[16:43] <discord-raku-bot> <nemokosch> at that point, they could really be using any scripting language, except sunk cost is strong

[16:43] <tinita> ansible is also using a custom tag, !vault

[16:44] <discord-raku-bot> <antononcube> @nemokosch Thanks! I was just going to ask would it better make additional ML templates with/via YAML.

[16:44] <discord-raku-bot> <nemokosch> and they really could be using anything because from all I know, these YAML files are anything but portable and basically depend on the underlying system to be secure

[16:45] <discord-raku-bot> <antononcube> One of my mistakes was to base my template engines on CSV files -- I should have used JSON from the get go.

[16:45] <tinita> *shrug* they could be, but they aren't. I guess we can agree to disagree =)

[16:45] <discord-raku-bot> <nemokosch> it's the same story as Markdown (with all the flavors) except worse (because Markdown is still recognizable as what it was meant to be)

[16:46] <discord-raku-bot> <antononcube> Markdown rules! (Meaning, most likely, I am not using Pod6 for anything serious anytime soon.)

[16:47] <discord-raku-bot> <nemokosch> And then one asks "which markdown" and you see how it went wrong

[16:48] <discord-raku-bot> <antononcube> 🙂 🙂 Comes with the territory. But, in my case it is easy -- the one supported by GitHub.

[16:49] <discord-raku-bot> <antononcube> I mentioned this before -- in order the debug the Markdown parser I work on, I use its Pod6 interpreter.

[16:49] <discord-raku-bot> <nemokosch> it's almost a cliché, an elaborate version of the second system syndrome, that once something fulfills its purpose just perfectly, it's damned to lose its original purpose

[16:49] <discord-raku-bot> <nemokosch> now Markdown still kind of retains its original purpose I guess because I haven't seen Markdown that stopped looking like mildly decorated text

[16:50] <discord-raku-bot> <antononcube> Please, come up with proper "marketable" name and write 5-6 paragraphs describing it in more detail.

[16:51] <discord-raku-bot> <nemokosch> but YAML doesn't. All that YAML in the cloud world is basically a custom language hardwired to the platform and they resemble each other without having virtually any benefits of that resemblance

[16:51] <discord-raku-bot> <antononcube> I think dependencies on Markdown tables and/or Mermaid diagrams can make it less decorated.

[16:52] <discord-raku-bot> <antononcube> Actually, Mermaid diagrams are just a bonus, so, they should not be taken into account.

[16:52] <discord-raku-bot> <nemokosch> it's suddenly a half-assed scripting language with custom extensions that bears no value as a universal data description language competing with JSON (or XML and TOML at times)

[16:52] <discord-raku-bot> <antononcube> As for something that is a "decorated" Markdown, I think that is Markdeep.

[16:53] <discord-raku-bot> <nemokosch> it is competing with EVALFILE invoked on Raku code

[16:54] <discord-raku-bot> <nemokosch> oh Mermaid diagrams are already quite far fetched 😄

[16:54] <discord-raku-bot> <nemokosch> doesn't even seem to be text-oriented

[16:55] <discord-raku-bot> <antononcube> I think YAML fits well with Markdown from a "data scientist" perspective. For example, YAML is used a lot in RStudio / Quarto notebooks.

[16:56] <discord-raku-bot> <nemokosch> and for YAML, it really is a shame that it's not really universal because it would have been almost banal to just improve over JSON by adding references and maybe some essential composability, like one dedicated operation or two

[17:00] <discord-raku-bot> <nemokosch> I'm kind of embarrassed myself that I found it so obvious that custom concatenation of CSON files using awk is unmaintainable, unreadable and has to go - and then the best I could come up with was turning all the data into some Raku expression with dynamic variables that I documented in some comments

[17:01] <discord-raku-bot> <antononcube> Yeah, using templates is very tempting.

[17:02] <discord-raku-bot> <nemokosch> yeah... at the end of the day, it pretty much was some template files, that's one way to look at them

[17:03] <discord-raku-bot> <nemokosch> except preferably a structural template, not a textual template

[17:04] <discord-raku-bot> <antononcube> This is what I have been doing mostly in the last few days -- template programming. (See "JavaScript::D3".)

[17:31] <jdv> idk. part of the pros of json to me is its severe restrain and minimalism

[17:32] <jdv> give people a bit of nonsense and they'll amplify it no matter what it seems

[17:33] <jdv> its a similar sentiment to why i sometimes write stuff in shell - force it to stay "simpler" cause peeps love to jamb shit in everywhere that has no place being there

[17:39] <discord-raku-bot> <librasteve> yep

[17:43] <discord-raku-bot> <librasteve> btw - found this  ... http://www.stilldrinking.org/programming-sucks ... seems apposite to the YAML conversation

[17:52] *** jpn joined
[17:56] *** jpn left
[18:24] *** epony left
[18:38] *** epony joined
[19:25] *** jpn joined
[19:34] *** jpn left
[19:38] *** jpn joined
[19:45] <discord-raku-bot> <nemokosch> yes, and the sentiment seems to be quite similar

[19:51] <discord-raku-bot> <antononcube> @jdv I try to have a CLI script to access the functionalities of almost all of my Raku packages. I think this should be some sort of unwritten rule for packages submitted to raku.land.

[19:58] *** jpn left
[20:03] *** lizmat_ joined
[20:06] *** lizmat left
[20:24] *** jpn joined
[20:26] <tonyo> melezhik: humming-bird and Ryml are great together, too.  ryml gives you type support in your template (and it's all raku)

[20:30] <discord-raku-bot> <nemokosch> Ryml is basically HTML::Tag with less clumsy syntax

[20:31] *** jpn left
[20:33] <discord-raku-bot> <melezhik> I will check it out, thanks @tonyo

[20:35] <tonyo> ahh yea, wish i'd seen that one first.  ryml is all generated code, there was some thought into how to do that with XSDs too to make them type safe just haven't gotten around to it

[20:40] *** Guest1 left
[20:44] *** jpn joined
[20:48] *** jpn left
[21:06] <discord-raku-bot> <nemokosch> well I could say the other way around as well - maybe if Ryml was around when I needed a more convenient way to generate HTML, I would have chosen that 😄

[21:10] *** stanrifkin_ left
[21:20] *** abraxxa-home left
[21:31] *** elcaro left
[21:31] *** elcaro joined
[21:40] *** Summer joined
[21:41] *** jpn joined
[21:46] *** jpn left
[21:49] *** jpn joined
[21:54] *** jpn left
[22:15] *** jpn joined
[22:20] *** jpn left
[22:26] *** jpn joined
[22:32] <discord-raku-bot> <antononcube> Any chess players around? (Hmm... in the Raku community as whole.)

[22:33] <discord-raku-bot> <antononcube> I plan to make two chess-related personas for LLM-didactic purposes. It would be nice if someone(s) test them. (Using Raku.)

[22:33] <jdv> not since hs chess club.  circa late 90s:)

[22:34] <discord-raku-bot> <antononcube> @jdv You qualify! Do you have OpenAI / ChatGPT account and API key?

[22:35] <jdv> maybe

[22:36] <discord-raku-bot> <antononcube> Great! There are three options, using: 1) Raku REPL  2) Raku chatbook 3) ChatGPT's interface

[22:37] <jdv> can you email?

[22:37] <discord-raku-bot> <antononcube> I am interested in people interested in the first 2. 🙂

[22:37] <jdv> i can try i guess

[22:37] <discord-raku-bot> <antononcube> @jdv What do you mean? To email you the Raku script / notebook?

[22:38] <discord-raku-bot> <antononcube> I will most likely put the prompt and the related setup and experiments in GitHub.

[22:39] <jdv> cool.  just wut u want me tp do.

[22:40] <jdv> im a bit distracted atm

[22:40] <discord-raku-bot> <antononcube> Ok. I will put a list and a demo.

[22:40] <jdv> thanks

[22:42] *** jpn left
[22:58] *** Tekk left
[23:20] *** sena_kun left
[23:20] <discord-raku-bot> <antononcube> @jdv Basically, no need -- GPT sucks at chess. (Not a big surprise...)

[23:21] <discord-raku-bot> <antononcube> Or, more precisely, ChatGPT-4 sucks at chess when FEN notation is used.

[23:23] <jdv> oof

[23:23] <jdv> drawing board?

[23:25] <discord-raku-bot> <antononcube> No, misplacing pieces and pawns.

[23:25] <discord-raku-bot> <antononcube> I plan to report that in a blog post. 🙂 I am glad I have that evidence.

[23:27] <jdv> cool.  i meant the classic "back to the drawing board":)

[23:27] <jdv> maybe theres another way

[23:27] <tonyo> antoncube i still play a bit

[23:28] <discord-raku-bot> <antononcube> Yeah, some other clever prompting... Maybe, but I doubt it. I strongly suspect it is a waste of time.

[23:29] <jdv> alright

[23:29] <discord-raku-bot> <antononcube> Here is my prompt:

[23:29] <discord-raku-bot> <antononcube> > You are a ChessMaster engaged in a text-based chess game. You play the opponent, usually with the black chess pieces and pawns.  > The game should be easy to follow and adhere to standard chess rules.  >  > Here is how you behave: >  > - Forsyth-Edwards Notation (FEN) strings to communicate the state of the gameplay >  > - Ensure you play by standard chess rules. >  > - Ensure the game interprets and executes

[23:29] <discord-raku-bot> these moves correctly >  > - Allow the player to input using  >     1. Algebraic Notation (AN) input, for example, "e2 to e4" to move a pawn >     2. Descriptive input, like, "biship from a3 to f8"  >  > - When the user gives you AN string you respond with three strings:  >     1. FEN position after user's AN input is played >     2. Your move given as AN string >     3. FEN position after your AN move is played >  > - If asked

[23:29] <discord-raku-bot> provide clear feedback to the player after each move, including the move itself >     - For example, "You moved: e2 to e4" and "Opponent moved: e7 to e5". >  > - If asked provide player guidance >     - Include in-game guidance resources or instructions that explain chess rules, move input, and special conditions like check and checkmate >      > - Proclaim when the user gives you AN move that is wrong, non-complient with the

[23:29] <discord-raku-bot> stanard chess rules. >  > - When the user asks you to start a game without specifying a FEN string: >     - You give the standard initial position as start >      > - You play the black opponent, the user the white, except if the user says that he plays the black side

[23:29] <jdv> whoa:)

[23:29] <tonyo> chess is a little too open ended, there's some videos of levy r and hikaru trying to play gpt and after 20 or 30 moves it loses game context and starts making illegal/bad moves

[23:30] <discord-raku-bot> <antononcube> Good to know! Mine started illegal moves almost right away.

[23:30] <jdv> youd think gpt has it in there somewhere

[23:31] <jdv> but maybe the context and spread is a bit much...

[23:34] <tonyo> is 4 the newest one? they had to do something to make it even playable

[23:34] <discord-raku-bot> <antononcube> Yes, but the newest one has several incarnatinos. Mostly, number of tokens related. (Input/output-wise.)

[23:35] <tonyo> i wonder if limiting its moves to something that's been played before and has the highest chance of winning is a key to making it work, then it's just acting as a big dumb db

[23:37] <discord-raku-bot> <antononcube> Here is how the chess game with the prompt above looks like (using Raku chatbook):

[23:37] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1190800792173695083/ChessMaster-LLM-persona-demo.png?ex=65a31ea8&is=6590a9a8&hm=f520eda60e9602ba34cc175d7e6f70216a2e37600820c5868c24d9ec2cf069d7&

[23:37] <discord-raku-bot> <antononcube> Notice the wrong placement of the white bishop!

[23:39] <jdv> fun

