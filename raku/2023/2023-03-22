[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:05] *** QhpAptyj9hj0RQwM left
[00:44] *** Voldenet left
[00:44] *** Voldenet joined
[01:33] *** razetime joined
[02:33] *** committable6 left
[02:33] *** linkable6 left
[02:33] *** sourceable6 left
[02:33] *** statisfiable6 left
[02:33] *** benchable6 left
[02:33] *** bisectable6 left
[02:33] *** quotable6 left
[02:33] *** squashable6 left
[02:33] *** unicodable6 left
[02:33] *** coverable6 left
[02:33] *** releasable6 left
[02:33] *** bloatable6 left
[02:33] *** tellable6 left
[02:33] *** shareable6 left
[02:33] *** greppable6 left
[02:33] *** notable6 left
[02:33] *** evalable6 left
[02:33] *** nativecallable6 left
[02:33] *** reportable6 left
[02:34] *** quotable6 joined
[02:34] *** reportable6 joined
[02:34] *** evalable6 joined
[02:34] *** coverable6 joined
[02:34] *** shareable6 joined
[02:34] *** linkable6 joined
[02:34] *** benchable6 joined
[02:34] *** unicodable6 joined
[02:35] *** committable6 joined
[02:35] *** notable6 joined
[02:35] *** tellable6 joined
[02:35] *** greppable6 joined
[02:35] *** nativecallable6 joined
[02:35] *** bloatable6 joined
[02:35] *** sourceable6 joined
[02:35] *** bisectable6 joined
[02:36] *** statisfiable6 joined
[02:36] *** squashable6 joined
[02:36] *** releasable6 joined
[03:10] *** razetime left
[03:19] *** razetime joined
[03:28] *** ProperNoun left
[03:29] *** razetime left
[03:40] *** rf left
[04:40] *** quotable6 left
[04:40] *** statisfiable6 left
[04:40] *** reportable6 left
[04:40] *** bisectable6 left
[04:40] *** evalable6 left
[04:40] *** committable6 left
[04:40] *** nativecallable6 left
[04:40] *** greppable6 left
[04:40] *** benchable6 left
[04:40] *** tellable6 left
[04:40] *** notable6 left
[04:40] *** sourceable6 left
[04:40] *** shareable6 left
[04:40] *** linkable6 left
[04:40] *** unicodable6 left
[04:40] *** coverable6 left
[04:40] *** squashable6 left
[04:40] *** releasable6 left
[04:40] *** bloatable6 left
[04:40] *** evalable6 joined
[04:40] *** unicodable6 joined
[04:41] *** quotable6 joined
[04:41] *** committable6 joined
[04:41] *** benchable6 joined
[04:41] *** notable6 joined
[04:41] *** tellable6 joined
[04:41] *** coverable6 joined
[04:42] *** squashable6 joined
[04:42] *** bisectable6 joined
[04:42] *** bloatable6 joined
[04:42] *** reportable6 joined
[04:42] *** releasable6 joined
[04:42] *** derpydoo joined
[04:42] *** statisfiable6 joined
[04:43] *** linkable6 joined
[04:43] *** nativecallable6 joined
[04:43] *** shareable6 joined
[04:43] *** greppable6 joined
[04:43] *** sourceable6 joined
[05:43] *** reportable6 left
[05:43] *** evalable6 left
[05:43] *** tellable6 left
[05:43] *** committable6 left
[05:43] *** bloatable6 left
[05:43] *** unicodable6 left
[05:43] *** greppable6 left
[05:43] *** notable6 left
[05:43] *** sourceable6 left
[05:43] *** shareable6 left
[05:43] *** statisfiable6 left
[05:43] *** nativecallable6 left
[05:43] *** benchable6 left
[05:43] *** quotable6 left
[05:43] *** coverable6 left
[05:43] *** linkable6 left
[05:43] *** bisectable6 left
[05:43] *** releasable6 left
[05:44] *** committable6 joined
[05:44] *** evalable6 joined
[05:44] *** unicodable6 joined
[05:44] *** benchable6 joined
[05:44] *** shareable6 joined
[05:44] *** sourceable6 joined
[05:45] *** tellable6 joined
[05:45] *** releasable6 joined
[05:45] *** reportable6 joined
[05:45] *** greppable6 joined
[05:45] *** linkable6 joined
[05:45] *** statisfiable6 joined
[05:45] *** quotable6 joined
[05:45] *** coverable6 joined
[05:46] *** nativecallable6 joined
[05:46] *** bloatable6 joined
[05:46] *** bisectable6 joined
[05:46] *** notable6 joined
[05:48] *** derpydoo left
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:31] *** initrd joined
[06:48] *** tea3po left
[06:49] *** tea3po joined
[07:19] *** Sgeo left
[07:32] *** peder left
[07:33] *** peder joined
[07:40] *** tejr left
[07:48] *** tejr joined
[07:52] *** tejr left
[08:03] *** tejr joined
[08:13] *** initrd left
[08:53] *** merp joined
[09:06] *** dakkar joined
[09:07] *** jpn joined
[09:10] *** abraxxa joined
[09:31] *** tejr left
[09:32] *** tejr joined
[09:41] *** zebzzw joined
[09:45] <discord-raku-bot> <Nemokosch> so yeah, yesterday I managed to get one generated part of the highlighter config right

[09:45] <discord-raku-bot> <Nemokosch> there are five parts

[09:46] <discord-raku-bot> <Nemokosch> is there anyone who comprehends Coffeescript strings? I came across something that looks like a Python docstring (triple apostrophe) and it seems to have comments in it, like wtf

[09:49] <exp> Nemokosch: can you show an example? I'm not aware of anything like that, but boy I haven't heard Coffeescript in a while!

[09:49] <tellable6> exp, I'll pass your message to Nemokosch

[09:52] <discord-raku-bot> <Nemokosch> okay, so they are apparently called "block strings"

[09:52] <discord-raku-bot> <Nemokosch> moment

[09:53] <exp> no need, that's enough for googling, gracias :)

[09:55] <discord-raku-bot> <Nemokosch> https://github.com/Raku/atom-language-perl6/blob/b6167e4ee60bebc35d82c43f799057a93ca4454d/dev/q-qq-Q-template.raku#L288

[09:56] <discord-raku-bot> <Nemokosch> there are similar things in the output as well

[09:56] <discord-raku-bot> <Nemokosch> https://github.com/Raku/atom-language-perl6/blob/b6167e4ee60bebc35d82c43f799057a93ca4454d/grammars/raku.cson#L813

[09:57] <discord-raku-bot> <Nemokosch> the way I understand it, these strings keep the linebreaks, they are much like heredoc strings

[09:58] <discord-raku-bot> <Nemokosch> however, I cannot comprehend how they can contain comments, and whether that's a language feature of Coffescript or some stupid custom hack in Atom or that Ruby regex processor

[10:02] <discord-raku-bot> <Nemokosch> it seems to me that it's NOT Coffeescript that is weird about that comment

[10:04] <discord-raku-bot> <Nemokosch> https://github.com/Alhadis/Regex-Comments#-line-comments goddamnit

[10:04] <discord-raku-bot> <Nemokosch> this is indeed an Atom hack

[10:06] <discord-raku-bot> <Nemokosch> hm, not Atom but PCRE mode of this regex engine

[10:08] <discord-raku-bot> <Nemokosch> anyway, I guess I might as well leave these comments there, and see how it works out

[10:41] *** evalable6 left
[10:41] *** linkable6 left
[10:42] *** linkable6 joined
[10:43] *** evalable6 joined
[11:01] *** ab5tract joined
[11:17] *** jpn left
[11:20] *** jpn joined
[11:23] *** tejr left
[11:37] *** ab5tract left
[11:45] *** sena_kun joined
[11:56] *** ab5tract joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:07] *** ab5tract left
[12:15] *** ab5tract joined
[12:38] *** ab5tract left
[12:38] *** ab5tract joined
[12:39] *** peder left
[12:48] *** peder joined
[12:50] *** ProperNoun joined
[13:09] *** ab5tract left
[13:13] *** ab5tract joined
[13:19] *** jgaz joined
[13:59] <discord-raku-bot> <Anton Antonov> I have a project in which one of the possible solutions is to construct a grammar from a list of regexes. Should I use RakuAST or the approach given here : https://perl6advent.wordpress.com/tag/bnf/ ?

[14:01] <discord-raku-bot> <Anton Antonov> I assume the non-RakuAST is going to always work. Meaning, after RakuAST is finished and "main stream" the ^add_method and EVAL  implementation is still going to work. Is this correct?

[14:10] <discord-raku-bot> <Anton Antonov> I more recent/updated work corresponding to the advent link above is this Raku module repository: https://github.com/tadzik/Grammar-BNF .

[14:12] *** ab5tract left
[14:26] *** rf joined
[14:27] <lizmat> Anton Antonov the past week I got regex / rule / token declarations to work in a useful way

[14:28] <rf> Morning folks

[14:28] <lizmat> I haven't written any tests for creating grammars yet, but that *should* be trivial

[14:29] <lizmat> m: say Q|grammar A { token B { b } }|.AST.statements.head.expression    # to give you an idea how that would look

[14:29] <camelia> rakudo-moar bc481335b: OUTPUT: «RakuAST::Package.new(␤  declarator       => "grammar",␤  name             => RakuAST::Name.from-identifier("A"),␤  body             => RakuAST::Block.new(␤    body => RakuAST::Blockoid.new(␤      RakuAST::StatementList.new(␤        RakuAST…»

[14:35] *** ab5tract joined
[14:38] *** zebzzw left
[14:45] *** sarna left
[14:46] *** sarna joined
[14:48] *** clarkema left
[14:48] *** patrickb left
[14:48] *** atweedie left
[14:49] *** silasfox joined
[14:50] *** atweedie joined
[14:51] *** clarkema joined
[14:51] *** patrickb joined
[15:03] *** ab5tract left
[15:06] *** sarna left
[15:10] *** sarna joined
[15:11] <discord-raku-bot> <Anton Antonov> @lizmat Thanks!

[15:17] *** ab5tract joined
[15:28] *** jpn left
[15:34] *** jpn joined
[15:36] *** Sgeo joined
[15:50] *** clarkema left
[15:50] *** patrickb left
[15:50] *** atweedie left
[15:55] *** atweedie joined
[15:56] *** patrickb joined
[15:56] *** clarkema joined
[16:05] *** perlbot left
[16:05] *** simcop2387 left
[16:31] *** silasfox left
[16:43] *** ab5tract left
[16:45] *** ab5tract joined
[17:12] *** japhb left
[17:19] *** simcop2387 joined
[17:19] *** simcop2387 left
[17:22] *** codesections left
[17:23] *** japhb joined
[17:26] *** nort left
[17:36] *** dakkar left
[17:36] *** sarna left
[17:36] *** sarna joined
[17:42] *** QhpAptyj9hj0RQwM joined
[17:48] *** abraxxa left
[18:00] *** reportable6 left
[18:00] *** jpn left
[18:03] *** reportable6 joined
[18:04] *** jpn joined
[18:17] *** jpn left
[18:37] *** jpn joined
[18:50] *** volare joined
[18:51] <volare> question: can i install rakudo perl using apt-get in debian?

[18:58] <tonyo> m: my Buf[uint8] $x .=new;  dd $x;

[18:58] <camelia> rakudo-moar 3a9c1540d: OUTPUT: «Buf[uint8 $x = Buf[uint8].new()␤»

[19:02] <volare> is perl6 backward compatible with perl5?

[19:07] <lucs> volare: I believe it is recommended to install rakudo with rakubrew (see rakubrew.org).

[19:08] <lucs> And no, Raku is similar to Perl in many ways, but it is a different language.

[19:08] <lucs> (perl6 is now called Raku)

[19:20] *** jpn left
[19:23] <volare> lucs: i managed to install it with sudo apt-get install rakudo

[19:23] *** teatwo joined
[19:24] <volare> i am converting a simple perl 5 program and the for loop doesn't work 

[19:24] <lucs> Oh, that indeed works, but I've seen people

[19:24] <lucs> recommend rakubrew

[19:25] <lucs> The 'for' syntax may be different in Raku.

[19:27] <lucs> volare: Enter "5to6" in the search box here for clues: https://docs.raku.org/

[19:27] *** tea3po left
[19:28] <lucs> This one mentions 'for' loops: https://docs.raku.org/language/5to6-perlsyn.html

[19:32] *** jpn joined
[19:33] <tonyo> volare: what is the output of `raku -v`

[19:38] *** jpn left
[19:38] <volare> Welcome to Rakudo(tm) v2020.12.

[19:38] <volare> Implementing the Raku(tm) programming language v6.d.

[19:38] <lucs> Yikes, kind of old.

[19:38] <volare> Built on MoarVM version 2020.12.

[19:39] <volare> how do you say a text and variable on the same line?

[19:39] <lucs> rakubrew can get you 2023.02.

[19:39] <lucs> volare: Not sure what you mean...

[19:40] <lucs> Maybe this?:  say "Value is $the-val"

[19:40] <volare>  say "\nYou thought of number: ";

[19:40] <volare>  say  ($count-6);

[19:40] <evalable6> volare, rakudo-moar 3a9c1540d: OUTPUT: «␤You thought of number: ␤»

[19:40] <volare> i want to say both lines on one line

[19:41] <lucs> m: $num = 42; say "You thought of number ", $num;

[19:41] <camelia> rakudo-moar 3a9c1540d: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '$num' is not declared.  Did you mean any of these: 'Num',␤'num'?␤at <tmp>:1␤------> <BOL>⏏$num = 42; say "You thought of number ",␤»

[19:42] <lucs> m: my $num = 42; say "You thought of number ", $num;

[19:42] <camelia> rakudo-moar 3a9c1540d: OUTPUT: «You thought of number 42␤»

[19:43] <lucs> volare: I suggest you join the raku-beginner channel instead of this one.

[19:43] <volare> it worked thank you

[19:44] <lucs> You're welcome, even more welcome in raku-beginner :-)

[19:45] <volare> https://magical.ddns.net/software/listings/unix_downloads/perl5/

[19:45] <volare> the perl6 program is there

[19:46] <lucs> Wow, 1-space shiftwidth. Where are my glasses!

[19:48] <volare> lucs: how do i join the developer community?

[19:49] <lucs> Not sure, someone else can answer.

[19:53] <volare> thank you lucs 

[19:53] <lucs> Sure thing.

[19:53] <lucs> (Now I have that song stuck in my head :-) )

[19:56] <volare> lol

[20:02] <tonyo> 2020 is a pretty old version volare 

[20:02] <volare> i will look into getting the brew

[20:04] <volare> thank you

[20:08] *** tg57 joined
[20:10] <rf> I didn't realise how easily you can express quicksort with Raku lol

[20:10] <rf> https://rosettacode.org/wiki/Sorting_algorithms/Quicksort#Raku

[20:14] <volare> lucs: you should watch the one with penolope cruz

[20:15] <lucs> I just watched the original, Domenico Modugno, on Ed Sullivan.

[20:16] <lucs> The song was a big hit when I was a kid (yeah, I'm pretty old.)

[20:16] <lucs> I'll look at the one with MsCruz.

[20:16] <volare> alrighty

[20:18] *** jpn joined
[20:19] <lucs> Oh, she's "just" dancing ;-)

[20:19] <volare> :^)

[20:20] <discord-raku-bot> <Nemokosch> I don't like that quicksort solution, to be honest. It tries to be very generic but kinda ruins it by using flat

[20:20] <discord-raku-bot> <Nemokosch> it would be better to make slips

[20:24] <volare> lucs: listen to Pianoholic 2022 on Spotify or Deezer

[20:49] *** volare left
[20:58] *** tg57 left
[21:11] *** jpn left
[21:14] *** dustinm` left
[21:20] *** jgaz left
[21:22] *** sena_kun left
[21:28] *** jpn joined
[21:34] *** QhpAptyj9hj0RQwM left
[21:41] *** dustinm` joined
[22:03] *** jpn left
[22:11] <tbrowder__> m: say (7 mod 3)

[22:11] <camelia> rakudo-moar 3a9c1540d: OUTPUT: «1␤»

[22:12] <tbrowder__> m: say (8 div 7)

[22:12] <camelia> rakudo-moar 3a9c1540d: OUTPUT: «1␤»

[22:28] <tbrowder__> m: say so (8 mod 7)

[22:28] <camelia> rakudo-moar 3a9c1540d: OUTPUT: «True␤»

[22:58] *** tejr joined
[23:02] <tonyo> tbrowder__: your usaf site makes me a bit nostalgic

[23:12] *** derpydoo joined
[23:23] *** jpn joined
[23:29] *** jpn left
