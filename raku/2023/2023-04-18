[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:16] *** maettu left
[00:18] *** maettu joined
[00:26] *** euandreh left
[00:27] *** euandreh joined
[00:48] *** maettu left
[00:59] *** jpn joined
[01:04] *** maettu joined
[01:04] *** jpn left
[01:08] *** maettu left
[01:15] *** maettu joined
[01:26] *** maettu left
[01:37] <discord-raku-bot> <Anton Antonov> @tonyo Worked with a simple fez. Just now: https://raku.land/zef:antononcube/WWW::MermaidInk
[01:38] *** maettu joined
[01:41] *** kitsunegari joined
[01:45] *** kitsunegari left
[02:12] *** teatwo joined
[02:16] *** tea3po left
[02:22] *** teatwo left
[02:23] *** teatwo joined
[02:48] *** jpn joined
[02:52] *** jpn left
[02:55] *** cm left
[02:58] *** RonaldR34g4m joined
[02:58] *** Vyrus left
[02:59] *** cm joined
[03:49] *** kitsunegari joined
[04:02] *** kitsunegari left
[04:38] *** jpn joined
[04:43] *** jpn left
[05:05] *** xinming left
[05:07] *** xinming joined
[05:16] *** jpn joined
[05:19] *** Tirifto_ left
[05:36] *** Tirifto joined
[05:40] *** derpydoo joined
[05:50] *** Tirifto left
[06:00] *** reportable6 left
[06:01] *** Tirifto joined
[06:02] *** reportable6 joined
[06:10] *** Tirifto left
[06:31] *** Tirifto joined
[07:04] *** tejr left
[07:09] *** tejr joined
[07:10] *** jpn left
[07:13] *** abraxxa joined
[07:17] *** abraxxa left
[07:40] *** RakuIRCLogger left
[07:58] *** sena_kun joined
[08:11] *** dakkar joined
[08:17] *** Sgeo left
[08:21] <Xliff> m: sub a { my $a = 0; $a ?? 42 };
[08:21] <camelia> rakudo-moar 1fd667cf7: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unexpected closing bracket␤at <tmp>:1␤------> sub a { my $a = 0; $a ?? 42 ⏏};␤»
[08:21] <Xliff> ^^ This looks to be LTA - Error should be...
[08:21] <Xliff> m: 0 ?? 1 
[08:21] <camelia> rakudo-moar 1fd667cf7: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Confused: Found ?? but no !!␤at <tmp>:1␤------> 30 ?? 1⏏<EOL>␤»
[08:22] <Xliff> ^^ lizmat MasterDuke [Coke]
[08:22] *** Xliff left
[08:42] *** Xliff joined
[08:43] *** abraxxa joined
[08:44] <Xliff> .tell lizmat Question for you -- I have utility that I am writing and it would be great if I could use String::Utils::root if String::Utils is detected. I've tried this - 'require ::("String::Utils"); ::("&root").^name.say;' with no luck. What would you suggest? Thanks!
[08:44] <tellable6> Xliff, I'll pass your message to lizmat
[08:45] *** Xliff left
[08:52] *** euandreh left
[08:59] <lizmat> .tell Xliff why not rip out the code of sub root from String::Utils ?
[08:59] <tellable6> lizmat, I'll pass your message to Xliff
[08:59] <lizmat> it's only 30 lines: you might need to stick a "use nqp" in it though :-)
[09:00] <tellable6> hey lizmat, you have a message: https://gist.github.com/df683fe5a6f3088517672dec70573a6a
[09:19] *** jpn joined
[09:24] *** jpn left
[09:30] *** jpn joined
[09:55] <tbrowder__> .seen jubilatious
[09:55] <tellable6> tbrowder__, I haven't seen jubilatious around
[10:17] *** abraxxa left
[10:19] *** derpydoo left
[10:30] <tbrowder__> .seen jubilatious1
[10:30] <tellable6> tbrowder__, I haven't seen jubilatious1 around
[10:31] * lizmat clickbaits https://rakudoweekly.blog/2023/04/17/2023-16-student-win/
[10:34] *** euandreh joined
[10:56] *** abraxxa joined
[11:05] <Geth> ¦ ecosystem: Demayl++ created pull request #617: Add Terminal::Size to the ecosystem
[11:05] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/617
[11:08] <Geth> ¦ ecosystem/main: 624be4377c | Demayl++ | META.list
[11:08] <Geth> ¦ ecosystem/main: Add Terminal::Size to the ecosystem
[11:08] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/624be4377c
[11:08] <Geth> ¦ ecosystem/main: aa272a5e67 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | META.list
[11:08] <Geth> ¦ ecosystem/main: Merge pull request #617 from Demayl/master
[11:08] <Geth> ¦ ecosystem/main: 
[11:08] <Geth> ¦ ecosystem/main: Add Terminal::Size to the ecosystem
[11:08] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/aa272a5e67
[11:24] *** abraxxa left
[11:56] *** jpn left
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:19] *** jpn joined
[12:22] <guifa> Xliff: are you using the FQN?
[12:22] <tellable6> guifa, I'll pass your message to Xliff
[12:24] *** jpn left
[12:40] *** clarkema1 joined
[12:41] <lucs> Xliff: What do you mean by ⌊$a ?? 42⌉?
[12:41] <tellable6> lucs, I'll pass your message to Xliff
[12:44] <lizmat> lucs: it was about the error message *that* produced
[12:44] <discord-raku-bot> <lucs> Oh, I see, thanks.
[13:02] *** TieUpYourCamel joined
[13:16] *** jpn joined
[13:28] *** nebuchadnezzar joined
[13:32] *** TieUpYourCamel left
[13:33] *** jgaz joined
[13:54] *** abraxxa joined
[14:03] *** rf joined
[14:03] <rf> Morning folks
[14:10] <discord-raku-bot> <Anton Antonov> @rf Hi! As far as I know, you did not make a Raku last weekend. Again.
[14:11] *** teatwo left
[14:12] *** teatwo joined
[14:12] <guifa> Is there any way for slang writing to namespace? NQPMatch and Match aren't compatible
[14:17] <rf> Yeah you are right Anton, soon haha
[14:32] *** TieUpYourCamel joined
[14:40] <vrurg> guifa: what do you mean?
[14:47] *** abraxxa left
[14:57] <guifa> vrurg: I'll try to get a MWE / golfed version tonight, off to $day-job now
[15:09] *** Sgeo joined
[15:22] <[Coke]> m: my @a=<5 34 2 4>; dd @a.map(+*).sort({$^a <= $^b})
[15:22] <camelia> rakudo-moar 1fd667cf7: OUTPUT: «(34, 5, 4, 2).Seq␤»
[15:24] <[Coke]> Can someone explain why it's order high to low there? I would have expected low to high
[15:44] <discord-raku-bot> <Nemokosch> I think it's because sort takes a comparator which a mere <= isn't. A comparator should produce More, Less or Same
[15:46] <discord-raku-bot> <Nemokosch> m: my @a=<5 34 2 4>.map(+*); say @a[0] <= @a[1]; say Order(@a[0] <= @a[1]);
[15:46] <discord-raku-bot> <Raku eval>  True  Exit code: 1 No value 'True' found in enum Order   in block <unit> at main.raku line 1  
[15:46] <discord-raku-bot> <Nemokosch> aalmoost
[15:46] <discord-raku-bot> <Nemokosch> m: my @a=<5 34 2 4>.map(+*); say @a[0] <= @a[1]; say (@a[0] <= @a[1]).Order;
[15:46] <discord-raku-bot> <Raku eval>  True More 
[15:52] *** jpn left
[16:00] <lizmat> m: my @a=<5 34 2 4>; dd @a.map(+*).sort({$^a <=> $^b})
[16:00] <camelia> rakudo-moar 1fd667cf7: OUTPUT: «(2, 4, 5, 34).Seq␤»
[16:00] <lizmat> m: my @a=<5 34 2 4>; dd @a.map(+*).sort({$^b <=> $^a})
[16:00] <camelia> rakudo-moar 1fd667cf7: OUTPUT: «(34, 5, 4, 2).Seq␤»
[16:04] <tonyo> guifa: you are definitely an edge case haha, taking a look at that issue today
[16:07] <[Coke]> Thank you. will give a better example in the docs.
[16:07] <[Coke]> (for sort)
[16:35] *** dakkar left
[16:39] *** abraxxa joined
[17:01] <[Coke]> ... or I'll just read the docs more.
[17:04] <discord-raku-bot> <p6steve> m: <5 34 2 4>.sort.reverse.say
[17:04] <discord-raku-bot> <Raku eval>  (34 5 4 2) 
[17:04] <discord-raku-bot> <p6steve> another way ;-)
[17:06] <discord-raku-bot> <p6steve> no need to coerce to Num with '+' since sort (cmp) "compares numbers with number semantics"
[17:16] <discord-raku-bot> <Nemokosch> keep in mind that the elements here are a bit of a corner case: they are allomorphs
[17:17] <discord-raku-bot> <Nemokosch> I think their numeric nature will have precedence but it's a bit tricky because something else might deduce them to be strings
[17:18] *** abraxxa left
[17:40] <[Coke]> p6steve, I did need the sort comparator function, I just was starting with the simplest one.
[17:58] <moritz> m: say "aa" ~~ /$<start>=<.alpha> $<start>/
[17:58] <camelia> rakudo-moar 1fd667cf7: OUTPUT: «｢aa｣␤ start => ｢a｣␤»
[17:58] <moritz> m: say "aa" ~~ /$<start>=<alpha> $<start>/
[17:58] <camelia> rakudo-moar 1fd667cf7: OUTPUT: «Nil␤»
[17:58] <moritz> bug or unknown-to-me feature?
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:07] <moritz> I've opened https://github.com/rakudo/rakudo/issues/5248 for that, assuming it's a bug
[18:07] *** Oshawott joined
[18:11] *** archenoth left
[18:42] *** Guest10 joined
[19:14] *** Guest10 left
[19:23] <[Coke]> https://gist.github.com/coke/a018706e1abb76e30674316610adfd16 - weird fetch FAIL when trying to install cro locally
[19:26] <[Coke]> it's not that dep, specifically, getting that on everything I try to install.
[19:29] <[Coke]> ah, might be a local cert issue (works fine in the browser)
[19:32] <ugexe> you could test that theory by seeing if `zef install https://360.zef.pm/C/RO/CRO/b2222c623bcc77878579ab291d41456895b2d058.tar.gz` fails but `zef install http://360.zef.pm/C/RO/CRO/b2222c623bcc77878579ab291d41456895b2d058.tar.gz` installs
[19:32] <ugexe> oh maybe not
[19:32] <ugexe> i thought there was non-https urls as well
[19:33] <ugexe> ah there is, there was just a trailing ` in the clickable link of my irc client
[19:33] <ugexe> so yeah you should be able to run those two commands and see if one works and one doesnt
[19:34] <[Coke]> "something went wrong extracting .... Win32::Registry
[19:34] <[Coke]> zef used to work fine on this windows box, wonder what happened. :|
[19:42] * [Coke] updates git bash on the hope it also updates curl and default certs.
[19:43] <ugexe> i'm not sure if zef will use that curl or not
[19:44] <ugexe> modern windows comes with a version of curl now
[19:45] <ugexe> ok to answer that question zef will try to use `curl.exe --help` first, and if that fails it will try `curl --help`. it picks how it invokes its curl that way
[19:49] <ugexe> the fun part is on modern windows with the git bash stuff installed a person will have 3 curls. 1) a curl.exe included in modern versions of windows 2) a curl.exe included with the git bash tools 3) a curl command that is just a powershell around a simple fetcher but doesn't emulate the curl cli api at all
[19:56] *** deoac left
[20:06] <[Coke]> installing an updated git bash I must have picked a weird option because it "lost" my installed raku and 'raku -version' isn't using utf8
[20:07] <[Coke]> and now that I resolved the path, the curl is still failing. Wondering if it was a dayjob windows update that updated local certs unhelpfully
[20:41] *** deoac joined
[21:38] *** Xliff joined
[21:38] <Xliff> \o
[21:38] <tellable6> 2023-04-18T08:59:10Z #raku <lizmat> Xliff why not rip out the code of sub root from String::Utils ?
[21:38] <tellable6> 2023-04-18T12:22:34Z #raku <guifa> Xliff: are you using the FQN?
[21:38] <tellable6> 2023-04-18T12:41:40Z #raku <lucs> Xliff: What do you mean by ⌊$a ?? 42⌉?
[21:40] <Xliff> guifa: I was using the FQN, yes. It still didn't work. Reason: That routine is in a "my" scope and exported via EXPORT()
[21:40] <Xliff> And I don't think I can get access to EXPORT
[21:46] <Xliff> m: sub a { }; &a.^methods.map( *.name ).grep( *.starts-with("s") ).say
[21:46] <camelia> rakudo-moar 027e37ccc: OUTPUT: «(soft set_op_props set_why signature static_id)␤»
[21:47] <discord-raku-bot> <p6steve> I think that (1,4,3).sort will work ....beginner level "some integers can be sorted", expert level "these literals are InStr Allomorphs that will auto numify so that cmp goes to <=> and then that coerces its arguments to Int"
[21:47] <discord-raku-bot> <p6steve> m: (1,4,3).sort.say
[21:47] <discord-raku-bot> <Raku eval>  (1 3 4) 
[21:48] <Xliff> Do Sub objects expose the type of scope they've been declared as?
[21:48] <Xliff> m: my sub a { }; our sub b { }; 
[21:48] <camelia> rakudo-moar 027e37ccc: ( no output )
[21:49] <Xliff> ^ Is there a method that I can use that  can tell me the scope of a() and b()?
[21:49] <Xliff> [ 'our' vs 'my' ]
[21:54] <Xliff> .tell lizmat A simple and obvious soluition. Thanks!
[21:54] <tellable6> Xliff, I'll pass your message to lizmat
[21:55] *** Xliff left
[21:58] <discord-raku-bot> <Nemokosch> what I meant is
[21:59] <discord-raku-bot> <Nemokosch> m: dd (1, 4, 3); dd <1 4 3>
[21:59] <discord-raku-bot> <Raku eval>  (1, 4, 3) (IntStr.new(1, "1"), IntStr.new(4, "4"), IntStr.new(3, "3")) 
[22:48] *** nebuchadnezzar left
[23:56] *** squashable6 left
[23:56] *** bloatable6 left
[23:56] *** sourceable6 left
[23:56] *** unicodable6 left
[23:56] *** committable6 left
[23:56] *** statisfiable6 left
[23:56] *** benchable6 left
[23:56] *** tellable6 left
[23:56] *** bisectable6 left
[23:56] *** nativecallable6 left
[23:56] *** linkable6 left
[23:56] *** shareable6 left
[23:56] *** notable6 left
[23:56] *** quotable6 left
[23:56] *** coverable6 left
[23:56] *** releasable6 left
[23:56] *** greppable6 left
[23:56] *** evalable6 left
[23:56] *** reportable6 left
[23:56] *** reportable6 joined
[23:56] *** evalable6 joined
[23:56] *** bloatable6 joined
[23:57] *** quotable6 joined
[23:57] *** bisectable6 joined
[23:57] *** coverable6 joined
[23:57] *** unicodable6 joined
[23:57] *** sourceable6 joined
[23:58] *** greppable6 joined
[23:58] *** squashable6 joined
[23:58] *** linkable6 joined
[23:58] *** releasable6 joined
[23:58] *** tellable6 joined
[23:58] *** notable6 joined
[23:58] *** statisfiable6 joined
[23:58] *** committable6 joined
[23:59] *** nativecallable6 joined
[23:59] *** benchable6 joined
[23:59] *** shareable6 joined
