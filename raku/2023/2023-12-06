[00:02] *** jpn joined
[00:07] *** jpn left
[01:39] *** jpn joined
[01:44] *** jpn left
[02:44] *** hulk joined
[02:45] *** kylese left
[02:54] *** jpn joined
[02:59] *** jpn left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:55] *** jpn joined
[03:58] *** itaipu left
[04:00] *** jpn left
[06:26] *** Xliff_ joined
[06:26] *** Xliff__ left
[06:27] *** Xliff left
[06:27] *** Xliff__ joined
[06:58] *** jpn joined
[07:03] *** abraxxa joined
[07:03] *** jpn left
[07:38] *** sena_kun joined
[07:48] *** abraxxa left
[07:50] *** teatime joined
[08:00] *** abraxxa joined
[08:30] *** lichtkind_ joined
[09:11] *** dakkar joined
[09:12] *** mscha joined
[09:12] *** mscha left
[09:23] *** jpn joined
[09:43] *** Sgeo left
[10:18] *** oodani left
[10:19] *** oodani joined
[10:36] *** sena_kun left
[11:51] *** lichtkind__ joined
[11:54] *** lichtkind_ left
[12:38] *** jpn left
[13:18] *** edr joined
[13:32] *** jpn joined
[13:37] *** jpn left
[13:52] *** jpn joined
[14:27] <[Coke]> Good *, Folks.

[14:31] <Geth> ¦ advent/main: 7fe145b985 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2023/authors.md

[14:31] <Geth> ¦ advent/main: Schedule "The Magic of $/" for tomorrow

[14:31] <Geth> ¦ advent/main: review: https://github.com/Raku/advent/commit/7fe145b985

[14:48] <Geth> ¦ raku.org: 871f78d727 | (Elizabeth Mattijsen)++ | 2 files

[14:48] <Geth> ¦ raku.org: Add Virtual Blue as a company with Raku in production

[14:48] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/commit/871f78d727

[14:49] <[Coke]> we should have links to the companies whose logos are on that page.

[14:50] <lizmat> yeah, feels to me as well, but it also feels like this was not an oversIght, so not adding them now

[14:53] <Geth> ¦ raku.org: coke assigned to codesections Issue Add links to companies? https://github.com/Raku/raku.org/issues/219

[14:55] <[Coke]> there we go.

[15:41] *** Maylay left
[15:44] *** mark22k left
[15:47] *** mark22k joined
[15:54] *** Maylay joined
[16:28] *** derpydoo joined
[16:59] *** MoC joined
[17:00] *** abraxxa left
[17:36] *** jpn left
[17:44] *** jpn joined
[17:44] *** dakkar left
[18:46] *** sena_kun joined
[19:48] *** chmod222 joined
[19:50] <chmod222> Heya, I very often run into the following snag: I have a function that indicates a return type of Hash[Int] or Array[Str] or anything somewhat typed, but simply doing "return {...}" or "return [...]" will fail because the literals are of course untyped. So I help myself with a named return variable that has the same type as the return of the function, but this can get annoying for functions that ideally 

[19:50] <chmod222> are oneliners

[19:50] <chmod222> Is there a language tool I'm missing that makes it a bit more convenient?

[19:51] <chmod222> I tried copying what .raku does with "return (my Int % = { ... })" but no dice

[19:51] <Xliff_>  Can someone tell me how to turn off Blob creation in JSON::Fast?

[19:51] <Xliff_> I have some json that uses unrecognized character codes, but they get turned into Blob[uint8] when they are really Str.

[20:12] *** Xliff_ left
[20:46] *** jpn left
[21:11] *** jpn joined
[21:16] *** jpn left
[21:19] <ugexe> m: sub foo(--> Array[Int]) { return my Int @ = 1,2,3 }; say foo()

[21:19] <camelia> rakudo-moar 50df535cc: OUTPUT: «[1 2 3]␤»

[21:20] <ugexe> m: sub foo(--> Hash[Int]) { return my Int % = "a" => 1 }; say foo()

[21:20] <camelia> rakudo-moar 50df535cc: OUTPUT: «{a => 1}␤»

[21:20] <ugexe> for one-liners though type safety generally isn't a high priority

[21:52] *** jpn joined
[22:24] *** jpn left
[22:29] *** jpn joined
[22:36] *** jpn left
[22:54] *** lichtkind__ left
[22:55] *** MoC left
[22:57] *** itaipu joined
[23:05] *** derpydoo left
[23:11] *** sena_kun left
[23:51] *** Sgeo joined
