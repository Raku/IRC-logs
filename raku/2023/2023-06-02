[00:00] <uzl[m]> .tell dakkar The gamification sounds like a good idea, although I'd be interested on how many Rakoons are interested on that haha

[00:00] <tellable6> uzl[m], I'll pass your message to dakkar

[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:54] *** zxrom left
[00:55] *** zxrom joined
[01:09] <tonyo> uzl[m]: i would likely accept a PR for it

[01:09] <tellable6> hey tonyo, you have a message: https://gist.github.com/f7b709a5b3095ab3450718ade19a95e8

[01:12] <tonyo> dakkar uzl[m] i've made something similar for fez/zef very early on and we removed it for various reasons, with fez i have the plan to redo all of that but i don't have enough time or days to get to everything yet

[01:31] *** andydude joined
[01:43] <SmokeMachine> Is this error message (`Cannot find method 'add_object_if_no_sc' on object of type NQPMu`) related to something missing on RakuAST yet? I always get that when adding `use Red` on code when RAKUDO_RAKUAST=1 is set. https://usercontent.irccloud-cdn.com/file/cN1NFZFk/image.png

[01:51] <tbrowder__> if you use mi6 you write in rakudoc and let mi6 convert to markdown for github. a win-win imho

[02:07] <tonyo> :)

[02:21] *** tea3po left
[02:21] *** tea3po joined
[02:33] *** teatwo joined
[02:36] *** tea3po left
[02:52] *** squashable6 left
[02:55] *** squashable6 joined
[03:48] *** squashable6 left
[03:48] *** squashable6 joined
[04:13] *** cm left
[04:25] *** cm joined
[04:29] *** andydude left
[04:32] *** andydude joined
[04:32] *** andydude left
[05:29] *** jpn joined
[05:57] *** dustinm` left
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[06:14] *** dustinm` joined
[06:33] *** abraxxa joined
[06:40] *** vi69 joined
[06:52] *** vi69 left
[06:54] *** abraxxa left
[06:59] *** jpn left
[07:00] *** jpn joined
[07:08] *** jpn left
[07:14] <patrickb> I think supporting Rakudoc and people starting to use it will result in people starting to write more extensive documentation. To me MD always felt like a stopgap. "Put a README.MD at the top level and you are done." People don't write extensive class / method / ... documentation in that one file. I believe Rakudoc, which can be mixed into source code and split into many files, will give people a 

[07:14] <patrickb> framework to write such extensive documentation.

[07:14] <discord-raku-bot> <librasteve> fwiw I wrote a toy script for personal use https://gist.github.com/librasteve/79a2731e699022ebbda737131b37c4f9

[07:14] *** derpydoo joined
[07:16] <discord-raku-bot> <librasteve> this is the inverse of rakudoc in that it helps "literate programming" where you have a lot of markdown text and a small amount of raku code in code blocks such as config options

[07:17] <discord-raku-bot> <librasteve> then I have a couple of github repos that are basically a walk thought of various processes that can actually be run with ramd README.md

[07:18] <discord-raku-bot> <librasteve> I would prefer something that lets me write MD inline in raku code rather than having to become fluent in rakudoc

[07:36] <discord-raku-bot> <Nemokosch> welcome to the AlexDaniel camp

[07:58] *** sena_kun joined
[07:58] *** Xliff joined
[07:59] <Xliff> m: class A { method a ($a, $b) { say $a; say $b };  }; multi sub postcircumfix:<[ ]> (A $a, $b, $c) { say "Whee!"; $a($b, $c) }; my $a = A.new; $a[1, 2]

[07:59] <camelia> rakudo-moar 5be4c809f: ( no output )

[07:59] <Xliff> But or E_NOTINSCOPE?

[07:59] <Xliff> Er... Bug? or E_NOTINSCOPE?

[07:59] <Xliff> m: class A { method a ($a, $b) { say $a; say $b };  }; multi sub postcircumfix:<[ ]> (A $a, Int $b, Int $c) { say "Whee!"; $a($b, $c) }; my $a = A.new; $a[1, 2]

[07:59] <camelia> rakudo-moar 5be4c809f: ( no output )

[08:09] *** Sgeo left
[08:25] *** Xliff left
[08:28] <discord-raku-bot> <Nemokosch> m: class A { method a ($a, $b) { say $a; say $b };  }; multi sub postcircumfix:<[ ]> (A $a, Int $b, Int $c) { say "Whee!"; $a.a($b, $c) }; my $a = A.new; $a[1, 2]

[08:28] <discord-raku-bot> <Raku eval>  

[09:02] *** zara joined
[09:19] *** squashable6 left
[09:21] *** squashable6 joined
[09:31] *** jpn joined
[09:32] *** sena_kun left
[09:36] <timo> m: class A { }; my $a = A.new; multi sub postcircumfix:<[ ]>(A $x, ($a, $b)) { say $a, $b }; $a[1, 2]

[09:36] <camelia> rakudo-moar 5be4c809f: OUTPUT: «12␤»

[09:49] *** Xliff joined
[09:51] *** jpn left
[09:51] <Xliff> m: class A { }; my $a = A.new; multi sub postcircumfix:<[ ]>(A $x, ($a, $b)) { say $a, $b }; $a[1, 2]

[09:51] <camelia> rakudo-moar 5be4c809f: OUTPUT: «12␤»

[09:52] <Xliff> Thank you, thank you, timo!

[10:05] *** atweedie left
[10:05] *** clarkema left
[10:05] *** patrickb left
[10:06] *** atweedie joined
[10:07] *** patrickb joined
[10:07] *** clarkema joined
[10:11] *** jpn joined
[10:20] *** jpn left
[10:21] *** lizmat_ joined
[10:25] *** lizmat left
[10:25] *** lizmat_ left
[10:25] *** lizmat joined
[10:29] <timo> YW :)

[10:34] *** sena_kun joined
[10:44] *** zara left
[10:51] *** lizmat left
[10:52] *** lizmat joined
[11:23] *** jpn joined
[11:28] *** jpn left
[12:00] *** reportable6 left
[12:00] *** sena_kun left
[12:00] *** Altai-man joined
[12:01] *** reportable6 joined
[12:18] *** jpn joined
[12:25] *** jpn left
[13:10] *** ab5tract left
[13:38] *** jpn joined
[13:42] *** jpn left
[13:49] *** guifa joined
[13:52] *** guifa_ left
[14:09] <[Coke]> any raku users going to the TPRF conference in Canada?

[14:24] *** tea3po joined
[14:26] *** tea3po left
[14:27] *** tea3po joined
[14:27] *** teatwo left
[14:44] <discord-raku-bot> <Anton Antonov> @Coke TPRF-2023 in Canada is too far me ...

[14:47] <[Coke]> Yah, It's probably best for me and jdv and not many others. :)

[15:09] * [Coke] wonders if we have to rakubrew to get a working build on m2 macs. (I tried a standalone build just before the 2023.05 release, and got the intel vs. m2 erros on one of the libraries()

[15:09] <[Coke]> but a rakubrew of the HEAD at the same time worked fine.

[15:12] <[Coke]> (not necessarily the same exact commit, but within a few)

[15:13] *** pmqs50 joined
[15:14] *** pmqs50 left
[15:14] *** pmqs joined
[15:19] *** Sgeo joined
[15:23] *** pmqs left
[15:29] *** codesections1 joined
[15:36] *** codesections1 left
[15:37] *** Xliff left
[15:43] <discord-raku-bot> <librasteve> Coke: here's my recipe for arm64 https://github.com/librasteve/raku-Dockerfiles/blob/main/basic-ma/Dockerfile but it is for ubuntu not MacOS on m1 ... I have torn out much hair with MacOS and now use with rakubrew AND, separately I run vftools for very fast ubuntu vms on MacOS

[15:45] <discord-raku-bot> <librasteve> https://rakujourney.wordpress.com/2021/11/27/raku-at-monterey-docks-part-ii/ (the Vector Two chapter) has a kink to the vftools setup

[15:48] <discord-raku-bot> <librasteve> personally I am pretty despairing at Apple with the way they contort unix

[15:50] <leont> Yeah, they keep breaking stuff that has worked since forever

[15:51] <discord-raku-bot> <librasteve> then when I really need Intel (e.g. to run the standard Jupyter Docker images), then I just spin up an AWS instance with https://github.com/librasteve/raku-CLI-AWS-EC2-Simple (what I wrote)

[15:52] <discord-raku-bot> <librasteve> the video demo for that is here https://rakujourney.wordpress.com/2022/12/29/raku-cli-aws-postvent/

[15:57] *** euandreh left
[16:33] *** codesections left
[16:34] <tonyo> patrickb: i could be convinced more to use it if there was a tool analagous to `go doc`

[16:34] <tonyo> [Coke]: it's not bad for me but i'll be in switzerland

[16:46] *** derpydoo left
[17:05] <tonyo> is there a way to invoke the `--doc=SOMETHING` functionality from a running process?

[17:05] <lizmat> running as in actually running, or maybe as a CHECK phaser ?

[17:09] <tonyo> like, i want to do some work in a script, parse pod out of another file, and then do some other stuff with it

[17:10] <tonyo> basically i want to build go doc into fez or something else so i can run `fez doc SomeClass.method1` and get just the documentation for that method from the command line

[17:10] <tonyo> so i need to do some resolution first to find the right file for SomeClass, etc

[17:11] <lizmat> look at lib/Rakudo/To/Text.rakumod in 2023.05 for an example

[17:11] <lizmat> perhaps some logic for finding the right file

[17:11] <lizmat> and then to walk the pod

[17:14] <tonyo> ahhh this requires the RakuAST?

[17:15] <tonyo> this is nice, ty lizmat 

[17:24] *** ab5tract joined
[17:32] *** Altai-man left
[17:38] *** ab5tract left
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:22] *** sena_kun joined
[18:39] *** Xliff joined
[18:44] *** jpn joined
[18:49] *** jpn left
[19:34] *** euandreh joined
[19:54] *** euandreh left
[19:54] *** euandreh joined
[20:06] *** jpn joined
[20:06] *** euandreh left
[20:07] *** euandreh joined
[20:13] *** jpn left
[20:18] <guifa> [Coke]: I'm going!

[21:02] <tonyo> lizmat: getting `Cannot find method 'from-paragraphs' on object of type NQPMu` on that branch

[21:05] <tonyo> basically resolving where Zef::Client is and running `$path.IO.slurp.ast` against it

[21:35] *** guifa left
[21:49] <gfldex> lizmat: I just wrote `eigenstates(@a.all²)` what made me chuckle.

[21:50] *** jpn joined
[21:51] <kawaii> Are there any Raku modules for lemmatization of words? i.e. finding the root of a word? kissing -> kiss, does -> do, hugged > hug ?

[21:55] <gfldex> m: say (1,2,3)»²;

[21:55] <camelia> rakudo-moar 5be4c809f: OUTPUT: «(1 4 9)␤»

[21:55] <gfldex> Why does that work? o.0

[21:56] *** jpn left
[21:56] <gfldex> Ohh, ² is considered an unary operator!

[22:20] *** sena_kun left
[22:56] *** euandreh left
[22:56] *** euandreh1 joined
[22:58] *** euandreh1 is now known as euandreh

[22:59] <lizmat> tonyo: you need to run with RAKUDO_RAKUAST=1

[23:02] *** euandreh left
[23:03] *** euandreh joined
[23:06] <Xliff> kawaii: You'd need a dictionary for that.

[23:26] <tonyo> different error: https://gist.github.com/tony-o/a7946566c750e87b850b2bb70b2c67cd

[23:29] *** kst left
[23:31] <tonyo> oh, weird - raku ast doesn't like zef's source. disregard

[23:38] *** jpn joined
[23:43] *** jpn left
