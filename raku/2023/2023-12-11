[00:16] *** Summer left
[01:01] *** jpn joined
[01:06] *** jpn left
[01:50] *** constxqt_ left
[02:02] *** jpn joined
[02:07] *** jpn left
[02:23] <Xliff> Can you feed arguments to a grammar?
[02:38] *** kylese left
[02:39] *** hulk joined
[03:15] *** hulk left
[03:15] *** kylese joined
[05:57] *** [Coke] left
[05:59] *** [Coke] joined
[07:07] *** jpn joined
[07:07] *** dbonnafo2 joined
[07:12] *** jpn left
[07:36] *** sena_kun joined
[07:39] *** gdown left
[07:47] *** dbonnafo2 left
[07:53] *** jpn joined
[07:57] *** jpn left
[07:58] *** Sgeo left
[08:13] *** jpn joined
[08:16] *** Xliff left
[08:16] *** Xliff__ left
[08:29] *** jpn left
[08:53] *** dakkar joined
[09:08] <lizmat> Xliff: yes, you can specify attributes in your grammar, and .new will set them for you
[09:08] <tellable6> lizmat, I'll pass your message to Xliff
[09:09] <lizmat> Xliff: and you can pass a Capture to the :args argument of .parse, and that will be passed on to the first token executed (which is usually TOP
[09:09] <tellable6> lizmat, I'll pass your message to Xliff
[09:12] *** jpn joined
[09:14] <Geth> ¦ advent/main: 29b91e5339 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2023/authors.md
[09:14] <Geth> ¦ advent/main: Schedule vrurg's post for the 16th
[09:14] <Geth> ¦ advent/main: review: https://github.com/Raku/advent/commit/29b91e5339
[09:26] *** sena_kun left
[09:28] *** sena_kun joined
[09:29] *** sena_kun left
[09:40] <discord-raku-bot> <librasteve> raku Set operations include the notion of a null Set ∅ (aka 'Set()')
[09:41] <discord-raku-bot> <librasteve> raku Range operations lack this idea, and this lack recently became apparent in this So question https://stackoverflow.com/questions/77608044/is-there-an-elegant-way-in-raku-to-see-if-two-ranges-overlap
[09:42] <discord-raku-bot> <librasteve> (this is not the same as the "zero" Range which I take to be '0..0')
[09:42] <discord-raku-bot> <librasteve> currently I can go...
[09:42] <discord-raku-bot> <librasteve> m: say 0..0
[09:42] <evalable6> librasteve, rakudo-moar bd43800b1: OUTPUT: «Cannot test bd43800b14919ed61c8fa3fcef1447684fa249c1 (Broken archive)»
[09:42] <discord-raku-bot> <Raku eval>  0..0 
[09:43] <discord-raku-bot> <librasteve> m: say Nil..Nil
[09:43] <evalable6> librasteve, rakudo-moar bd43800b1: OUTPUT: «Cannot test bd43800b14919ed61c8fa3fcef1447684fa249c1 (Broken archive)»
[09:43] <discord-raku-bot> <Raku eval>  Nil..Nil 
[09:43] <discord-raku-bot> <librasteve> soon we will have...
[09:43] <discord-raku-bot> <librasteve> m: use v6.e.PREVIEW; say so 1..0;
[09:43] <evalable6> librasteve, rakudo-moar bd43800b1: OUTPUT: «Cannot test bd43800b14919ed61c8fa3fcef1447684fa249c1 (Broken archive)»
[09:43] <discord-raku-bot> <Raku eval>  True 
[09:44] <discord-raku-bot> <librasteve> (errr that should be False! since the endpoints are not ascending)
[09:45] <discord-raku-bot> <librasteve> m: use v6.e.PREVIEW;  say so 0..0;
[09:45] <evalable6> librasteve, rakudo-moar bd43800b1: OUTPUT: «Cannot test bd43800b14919ed61c8fa3fcef1447684fa249c1 (Broken archive)»
[09:45] <discord-raku-bot> <Raku eval>  True 
[09:47] <discord-raku-bot> <librasteve> ^^^ and correctly (?) even thought the IRC preview is not working(?) 0..0 is True because it is well formed (I could argue that like Int, a zero Range like this should be False, but I guess someone has already thought this through?)
[09:47] <discord-raku-bot> <librasteve> m: use v6.e.PREVIEW;  say so Nil..Nil;
[09:47] <evalable6> librasteve, rakudo-moar bd43800b1: OUTPUT: «Cannot test bd43800b14919ed61c8fa3fcef1447684fa249c1 (Broken archive)»
[09:47] <discord-raku-bot> <Raku eval>  True 
[09:47] <discord-raku-bot> <librasteve> so ^^^ once again IRC preview is broken, in the wild, this goes
[09:47] <discord-raku-bot> <librasteve>  [1] > say so Nil..Nil; Range cannot be iterated over because its starting point 'Any' does not have a '.succ' method   in block <unit> at <unknown file> line 1   in any <main> at /Users/stephenroe/.rakubrew/versions/moar-2023.10/bin/../share/perl6/runtime/perl6.moarvm line 1   in any <entry> at /Users/stephenroe/.rakubrew/versions/moar-2023.10/bin/../share/perl6/runtime/perl6.moarvm line 1 
[09:52] <discord-raku-bot> <librasteve> So 6.e.PREVIEW has changed the behaviour of Nil..Nil literal (which may throw up some suprises) ... my request (after this long winded thread) is that we collectively decide that the null Range is Nil..Nil special value and make this available to return from Range operations eg. when no overlap between two arguments is the result ...?
[10:02] <lizmat> shouldn't it be Empty ?
[10:05] <discord-raku-bot> <librasteve> m: say ∅ ~~ Set
[10:05] <evalable6> librasteve, rakudo-moar bd43800b1: OUTPUT: «Cannot test bd43800b14919ed61c8fa3fcef1447684fa249c1 (Broken archive)»
[10:05] <discord-raku-bot> <Raku eval>  True 
[10:05] <discord-raku-bot> <librasteve> m: say Empty ~~ Range
[10:05] <evalable6> librasteve, rakudo-moar bd43800b1: OUTPUT: «Cannot test bd43800b14919ed61c8fa3fcef1447684fa249c1 (Broken archive)»
[10:05] <discord-raku-bot> <Raku eval>  False 
[10:06] <discord-raku-bot> <librasteve> good question, naively I would say the same rationale that applies to null Set should apply to null Range (whereas Empty is a null List afaik)
[10:07] <discord-raku-bot> <librasteve> or maybe we make something up like ∅..∅ ?
[10:07] <lizmat> well, the empty Set is an instantiated Set object without any elements
[10:08] <discord-raku-bot> <librasteve> currently Nil..Nil is a Range object without any endpoints (I believe an instantiated Range holds the endpoints and does not interpolate them on creation)
[10:10] <discord-raku-bot> <librasteve> https://github.com/Raku/problem-solving/issues/410 <== anyway I made a discussion here
[10:10] <lizmat> m: (Nil..Nil).iterator.pull-one   # I feel this should produce Nil
[10:10] <camelia> rakudo-moar bd43800b1: OUTPUT: «Range cannot be iterated over because its starting point 'Any' does not␤have a '.succ' method␤  in block <unit> at <tmp> line 1␤␤»
[10:13] <discord-raku-bot> <librasteve> yeah, if we agree Nil..Nil then any kind of non Range operation treating like an Iterator should return Nil
[10:25] <discord-raku-bot> <librasteve> hmmm use of Nil in Range is generally problemetic (already) ....
[10:25] <discord-raku-bot> <librasteve> m: say Nil..0
[10:25] <evalable6> librasteve, rakudo-moar bd43800b1: OUTPUT: «Cannot test bd43800b14919ed61c8fa3fcef1447684fa249c1 (Broken archive)»
[10:25] <discord-raku-bot> <Raku eval>  Nil..0 
[10:26] <lizmat> yeah... I tried a quick fix, but that quick fix didn't fix and borked other stuff...
[10:26] <discord-raku-bot> <librasteve> oops
[10:26] <lizmat> so let's see what semantics we decide on in the problem solving issue before working on the code
[10:27] <lizmat> which is now roughly 10 years old...   so maybe it needs a full overhaul
[10:27] <discord-raku-bot> <librasteve> I am leaning to making up a symbol like 𝟘 (aka Range())
[10:27] <discord-raku-bot> <librasteve> sure ... I'll take this over to the issue
[10:28] <lizmat> 1D7D8 MATHEMATICAL DOUBLE-STRUCK DIGIT ZERO 𝟘
[10:40] <discord-raku-bot> <librasteve> scary!
[10:40] *** Xliff joined
[10:40] *** Xliff_ joined
[10:40] <discord-raku-bot> <librasteve> yep
[10:41] *** samcv left
[10:42] *** samcv joined
[13:02] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/12/11/2023-50-more-magic/
[13:14] *** jpn left
[13:20] *** sjn left
[14:03] *** jpn joined
[14:17] *** edr joined
[14:31] *** constxqt_ joined
[14:41] *** Dominika is now known as sdomi
[15:15] *** Sgeo joined
[15:45] *** MoC joined
[16:04] *** silug left
[16:04] *** silug joined
[16:05] *** MoC left
[16:21] *** MoC joined
[16:45] *** MoC left
[17:41] *** sjn joined
[17:46] *** dakkar left
[17:59] <ab5tract> so I've been exploring optimizations for the snowfall simulator... and I can't seem to stop the performance degradation. Here's the update version, in case anyone is curious: https://gist.github.com/ab5tract/ff53731543df4cedd1c5f15fb0599c93
[18:02] *** araujo left
[18:31] <Xliff> Where can I get Raylib?
[18:31] <tellable6> 2023-12-11T09:08:04Z #raku <lizmat> Xliff: yes, you can specify attributes in your grammar, and .new will set them for you
[18:31] <tellable6> 2023-12-11T09:09:18Z #raku <lizmat> Xliff: and you can pass a Capture to the :args argument of .parse, and that will be passed on to the first token executed (which is usually TOP
[18:32] <Xliff> lizmat++: Thanks! Got it.
[18:35] *** Rajhan joined
[18:36] <Rajhan> hello Raj here from India, want to learn programming, want to start with Raku. kindly suggest how to prroceed
[18:39] *** sena_kun joined
[18:47] *** dbonnafo joined
[18:51] *** dbonnafo left
[18:54] <Xliff> Rajhan: docs.raku.org is a decent starting place. One sec...
[18:54] <Xliff> Rahjan: There is also: https://course.raku.org/
[18:55] *** dbonnafo joined
[18:57] <[Coke]> https://raku.org/resources/ - newcomers
[18:57] <jdv> pick a rando problem and try to solve it?
[18:58] *** Rajhan left
[18:58] <jdv> fail or not on task itll be worthy learnings
[18:59] *** dbonnafo left
[19:35] <ab5tract> Xliff: it should be available in your package manager
[19:37] <ab5tract> Rajhan: welcome! there is also a Raku track at exercism and people also find this one helpful: https://learnxinyminutes.com/docs/raku/
[19:37] <tellable6> ab5tract, I'll pass your message to Rajhan
[19:55] *** dbonnafo joined
[20:00] *** dbonnafo left
[20:04] *** jpn left
[20:07] <discord-raku-bot> <.vushu> @abstract I got a solution for your problem
[20:08] <discord-raku-bot> <.vushu> I think I should be a ok solution
[20:08] *** mcmillhj joined
[20:08] <discord-raku-bot> <.vushu> maybe you can improve a bit upon it
[20:10] <discord-raku-bot> <.vushu> https://gist.github.com/vushu/ea36578a57280b84f94d1a26eed768d1
[20:11] <discord-raku-bot> <.vushu> So the trick is to recycle the flakes
[20:13] <discord-raku-bot> <.vushu> they fall a bit clustered but the frame rate is fine, a bit of tweaking can be done, but you get the gist of it.
[20:13] <discord-raku-bot> <.vushu> https://cdn.discordapp.com/attachments/633753286209699870/1183864200968294480/snowfall.gif?ex=6589e274&is=65776d74&hm=8afd602451e2357f3e8a21ed57fad1358ef9d06d58fd7b0992217f96bca2a8cd&
[20:18] *** dbonnafo2 joined
[20:30] <ab5tract> .vushu: awesome!
[20:47] *** jpn joined
[20:49] *** TieUpYourCamel left
[21:02] *** TieUpYourCamel joined
[21:08] *** jpn left
[21:12] *** mort left
[21:13] *** samebchase left
[21:13] *** samebchase joined
[21:13] *** mort joined
[21:14] *** mort left
[21:14] *** samebchase left
[21:14] *** samebchase joined
[21:14] *** mort joined
[21:14] *** RakuIRCLogger left
[21:16] *** jpn joined
[21:21] *** jpn left
[21:48] *** dbonnafo3 joined
[21:48] *** dbonnafo2 left
[21:56] *** Maylay left
[21:57] *** maylay joined
[22:16] *** jpn joined
[22:21] *** jpn left
[22:33] *** TieUpYourCamel left
[22:41] <tbrowder__>  hi, whadda y’all think about a project to completely rakuize the Raku-Advent.blog? maybe get a grant for some cro export like tonyo to lead the project.  it bothers me that a company that makes so much money has such a terrible UI (and UX, and all the other U* acronyms)
[22:43] <tbrowder__> pardon me, but i seem to get on this rant every year, my innate scrooge i guess
[22:52] *** jpn joined
[22:57] *** jpn left
[23:09] *** sena_kun left
[23:24] <tbrowder__> *cro expert
[23:24] *** sena_kun joined
[23:24] <tbrowder__> tonyo is
[23:26] *** sena_kun left
[23:26] *** jpn joined
[23:31] *** mcmillhj left
[23:32] *** jpn left
[23:39] *** TieUpYourCamel joined
