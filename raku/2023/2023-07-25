[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:18] *** vrurg left
[00:19] *** vrurg joined
[01:09] *** razetime joined
[01:57] <SmokeMachine> lizmat: ProblemSolver is not a new module, but a very old one that I just have fixed a few lines on its readme and haven‚Äôt released any new version‚Ä¶ :(
[02:09] *** linkable6 left
[02:09] *** evalable6 left
[02:10] *** linkable6 joined
[02:11] *** evalable6 joined
[02:17] *** swaggboi left
[03:17] *** evalable6 left
[03:17] *** tellable6 left
[03:17] *** greppable6 left
[03:17] *** unicodable6 left
[03:17] *** benchable6 left
[03:17] *** bisectable6 left
[03:17] *** nativecallable6 left
[03:17] *** bloatable6 left
[03:17] *** sourceable6 left
[03:17] *** linkable6 left
[03:17] *** shareable6 left
[03:17] *** statisfiable6 left
[03:17] *** squashable6 left
[03:17] *** coverable6 left
[03:17] *** committable6 left
[03:17] *** quotable6 left
[03:17] *** notable6 left
[03:17] *** releasable6 left
[03:17] *** reportable6 left
[03:18] *** committable6 joined
[03:18] *** sourceable6 joined
[03:18] *** quotable6 joined
[03:18] *** squashable6 joined
[03:19] *** linkable6 joined
[03:19] *** shareable6 joined
[03:19] *** nativecallable6 joined
[03:19] *** benchable6 joined
[03:20] *** greppable6 joined
[03:20] *** coverable6 joined
[03:20] *** releasable6 joined
[03:20] *** statisfiable6 joined
[03:20] *** notable6 joined
[03:20] *** tellable6 joined
[03:20] *** reportable6 joined
[03:20] *** evalable6 joined
[03:20] *** unicodable6 joined
[03:20] *** bloatable6 joined
[03:20] *** bisectable6 joined
[03:32] *** camelia left
[03:32] *** m_athias left
[03:32] *** nine left
[03:33] <MasterDuke> guifa__: just watched your TPRC videos, nice stuff
[03:33] *** m_athias joined
[03:37] *** nine joined
[03:37] *** camelia joined
[03:48] *** MasterDuke left
[04:11] *** razetime left
[04:32] *** razetime joined
[04:42] *** teatime left
[04:42] *** teatime joined
[04:44] *** teatime left
[04:44] *** teatime joined
[05:06] *** teatwo joined
[05:08] *** teatwo left
[05:08] *** teatwo joined
[05:09] *** teatime left
[05:09] *** squashable6 left
[05:12] *** squashable6 joined
[05:20] *** jpn joined
[05:25] *** jpn left
[05:40] *** siavash joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:17] *** jpn joined
[06:23] *** jpn left
[07:01] *** jpn joined
[07:04] *** knarkhov joined
[07:07] <knarkhov> Tyil's git repo is back, all modules are available now! I've connected him via matrix. He is upgrading home servers, so I was a reason of temporary down.
[07:07] *** Geth left
[07:08] *** knarkhov left
[07:08] *** RakuIRCLogger left
[07:09] *** jpn left
[07:09] *** lizmat left
[07:10] *** lizmat joined
[07:21] *** Geth joined
[07:49] *** m_athias left
[07:49] *** m_athias joined
[08:07] *** andydude left
[08:09] *** dakkar joined
[08:15] *** Sgeo left
[08:26] *** razetime left
[08:30] *** sena_kun joined
[08:33] *** squashable6 left
[08:36] *** squashable6 joined
[08:44] *** razetime joined
[08:48] *** squashable6 left
[08:49] *** squashable6 joined
[09:08] *** jpn joined
[09:31] *** nine left
[09:31] *** m_athias left
[09:31] *** nine joined
[09:31] *** m_athias joined
[09:41] *** merp left
[10:18] *** eroux left
[10:22] *** eroux joined
[10:28] *** jpn left
[10:32] *** jpn joined
[10:36] *** jpn left
[10:43] *** eroux_ joined
[10:44] *** eroux left
[10:49] *** eroux joined
[10:49] *** eroux_ left
[11:49] *** linkable6 left
[11:49] *** evalable6 left
[11:51] *** evalable6 joined
[11:52] *** linkable6 joined
[11:52] *** razetime left
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:09] *** razetime joined
[12:16] *** hellwolf joined
[12:18] *** jpn joined
[12:23] *** jpn left
[12:24] *** siavash left
[12:48] *** jpn joined
[12:55] *** jpn left
[12:55] *** knarkhov joined
[12:56] *** knarkhov left
[13:11] *** jpn joined
[13:24] *** vrurg_ joined
[13:26] *** vrurg left
[13:26] *** vrurg_ left
[13:27] *** oodani left
[13:28] *** eroux left
[13:28] *** oodani joined
[13:31] *** eroux joined
[13:36] *** vrurg joined
[13:42] <Xliff> \o
[13:43] *** andydude joined
[13:43] <Xliff> m: my @a = <1 2 3 4 5 6 7>; @a.rotate(-1); say "A: { @a.gist }"
[13:43] <camelia> rakudo-moar aed6be5b7: OUTPUT: ¬´A: [1 2 3 4 5 6 7]‚ê§¬ª
[13:43] <Xliff> m: my @a = <1 2 3 4 5 6 7>; @a .= rotate(-1); say "A: { @a.gist }"
[13:43] <camelia> rakudo-moar aed6be5b7: OUTPUT: ¬´A: [7 1 2 3 4 5 6]‚ê§¬ª
[13:44] <Xliff> m: enum <SUN MON TUE WED THR FRI SAY>; my @a = <1 2 3 4 5 6 7>; @a .= rotate(-1 + SUN.Int); say "A: { @a.gist }"
[13:44] <camelia> rakudo-moar aed6be5b7: OUTPUT: ¬´A: [7 1 2 3 4 5 6]‚ê§¬ª
[13:44] <Xliff> m: enum <SUN MON TUE WED THR FRI SAY>; my @a = <1 2 3 4 5 6 7>; @a .= rotate(-1 + WED.Int); say "A: { @a.gist }"
[13:44] <camelia> rakudo-moar aed6be5b7: OUTPUT: ¬´A: [3 4 5 6 7 1 2]‚ê§¬ª
[14:06] *** andydude left
[14:20] <Xliff> Cannot resolve caller print(Str:D: BOOTStr); none of these signatures matches:
[14:20] <Xliff> What is the fix for this? Did nqp::hllize go away?
[14:21] <lizmat> m: use nqp; dd nqp::hllize(42)
[14:21] <camelia> rakudo-moar aed6be5b7: OUTPUT: ¬´42‚ê§¬ª
[14:21] <lizmat> you'd need "use nqp"
[14:48] <tonyo> ,
[14:49] *** eroux left
[14:53] *** Phytolizer joined
[14:54] *** eroux joined
[15:05] *** rf joined
[15:07] *** Sgeo joined
[15:20] *** codesections1 joined
[15:21] *** codesections left
[15:21] *** codesections1 is now known as codesections
[15:26] *** codesections1 joined
[15:28] *** codesections left
[15:28] *** codesections1 is now known as codesections
[15:32] *** razetime left
[15:45] * lizmat clickbaits https://rakudoweekly.blog/2023/07/24/2023-30-morevids/
[16:03] *** jpn left
[16:06] *** [Coke] joined
[16:06] <[Coke]> haven't heard "PascalCase" before having spent so much time in perl communities, but have heard it 2-3 times at work this week.
[16:07] <lizmat> PascalCase === CamelCase ?
[16:10] <[Coke]> apparently.
[16:11] <[Coke]> though the last reference did offer CC as an alternative "if you prefer"
[16:11] <lizmat> well, Pascal *was* earlier
[16:15] <[Coke]> regarding the json::unmarshall error - can we get the updated releases so we can install again? (or are they already in flight?)
[16:24] <tonyo> isn't camelCase different from PascalCase ?
[16:24] <dakkar> DromeDaryCase
[16:24] <dakkar> (or the other one, I always confuse them)
[16:35] *** dakkar left
[16:40] *** _________ left
[16:42] <snonux> never heard of PascalCase, until now.
[16:42] *** tea3po joined
[16:45] *** teatwo left
[16:52] *** andydude joined
[17:06] <discord-raku-bot> <librasteve> PascalCase /== camelCase
[17:24] *** Phytolizer left
[17:31] <leont> Yeah what tonyo said
[17:33] <lizmat> so what's the difference 
[17:33] <lizmat> ?
[17:38] <ugexe> camels have a hump in the middle
[17:38] <ugexe> theHump, not TheJHump
[17:39] <lizmat> ah, gotcha
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:20] *** codesections1 joined
[18:22] *** codesections left
[18:22] *** codesections1 is now known as codesections
[18:41] <El_Che> Exelvision (eg EXL-100) also had a butterfly logo: https://en.wikipedia.org/wiki/EXL_100#/media/File:Exelvision_EXL-100_couleur.jpg
[18:44] <discord-raku-bot> <nemokosch> so there is even a reasoning for it (camelCase, that is)
[18:44] *** tea3po left
[18:45] <discord-raku-bot> <nemokosch> but yeah, PascalCase is different, it is widely used for C# for example
[18:45] <discord-raku-bot> <nemokosch> C# itself being Delphi for Java developers with C++ sugar
[18:46] *** teatime joined
[18:46] <tonyo> loved delphi back when
[18:47] <discord-raku-bot> <nemokosch> there is a reason to think Anders Hejlsberg did know something, after all
[18:47] <discord-raku-bot> <nemokosch> Turbo Pascal, Delphi, C# and Typescript
[18:59] <xinming_> https://termbin.com/881n
[18:59] <xinming_> This time, I found above code works as expected.
[19:00] <xinming_> but first @array misses a pair.
[19:00] <xinming_> Is this considered a bug?
[19:01] *** Phytolizer joined
[19:03] <discord-raku-bot> <nemokosch> there is something funny about chaining pairs, I think nine also complained about the parsing
[19:04] <discord-raku-bot> <nemokosch> m: :a<A>:b<B> andthen .say
[19:04] <discord-raku-bot> <Raku eval>  a => A 
[19:05] <discord-raku-bot> <nemokosch> m: (:a<A>:b<B>) andthen .say
[19:05] <discord-raku-bot> <Raku eval>  (a => A b => B) 
[19:07] *** Phytolizer left
[19:07] *** Phytolizer joined
[19:14] <discord-raku-bot> <nemokosch> the natural intelligence is sometimes wrong about the comment summaries
[19:15] <discord-raku-bot> <nemokosch> "it's a keeper" applies to Perl, "big or new stuff" would be Raku üòº
[19:31] <xinming_> nemokosch, Could you please give the idea about why these 2 are different?
[19:33] <discord-raku-bot> <nemokosch> if only I knew... well, I can try to analyze what the parser and the core are doing
[19:40] <discord-raku-bot> <nemokosch> the way I understand it, :a<A> :b<B> is a pair (:a<A>) with an adverb "hacked" to it (:b<B>)
[19:42] *** _________ joined
[19:43] <discord-raku-bot> <nemokosch> okay, found the parsing rule for the parens in the old grammar
[19:46] <discord-raku-bot> <nemokosch> well, it's a whole lot of code, I don't necessary want to understand it but long story short, this "adverb on pair" is basically special-cased in the parser if it happens to be in parens
[19:46] <discord-raku-bot> <nemokosch> https://github.com/rakudo/rakudo/blob/bef9ea40cf95894237972e72b2fbf449b9d852b1/src/Perl6/Actions.nqp#L6952
[19:49] *** codesections left
[19:49] *** codesections1 joined
[19:50] <xinming_> nemokosch, So the test I posted, It parsed the pair without comma as adverb on the pair
[19:51] *** codesections1 is now known as codesections
[19:51] <discord-raku-bot> <nemokosch> yeah, or at least adverb on something that just drops it. Adverbs have a quite low precedence regarding where they attach, I wouldn't know by heart
[19:52] <xinming_> m: my @a = :a :b;  @a.raku.say;
[19:52] <camelia> rakudo-moar bef9ea40c: OUTPUT: ¬´[:a]‚ê§¬ª
[19:52] <discord-raku-bot> <nemokosch> what I'm doing is raku --target=parse -e 'some expression', by the way, dont be afraid to try it
[19:52] <xinming_> So, adverb form, will only work right within function calls.
[19:54] <discord-raku-bot> <nemokosch> well, if the function can handle them as named arguments, at least
[19:55] <xinming_> in this case, The adverb doesn't attach to the previous :pair.
[19:55] <xinming_> So I think it's a inconsistent then
[19:56] <discord-raku-bot> <nemokosch> I'd say if niner openly criticizes something in the design, it's probably bad enough üòÑ
[20:08] *** TieUpYourCamel joined
[20:09] <xinming_> m: (1..10).pick xx 5
[20:09] <camelia> rakudo-moar bef9ea40c: ( no output )
[20:09] <xinming_> m: ((1..10).pick xx 5).raku.say;
[20:09] <camelia> rakudo-moar bef9ea40c: OUTPUT: ¬´(6, 7, 1, 8, 1).Seq‚ê§¬ª
[20:10] <xinming_> Is there a way to create a random list from existing list?
[20:11] <xinming_> m: ((1..10).pick(5)).raku.say;
[20:11] <camelia> rakudo-moar bef9ea40c: OUTPUT: ¬´(7, 10, 6, 9, 1).Seq‚ê§¬ª
[20:11] <xinming_> hmm, Ignore me. :-)
[20:19] <discord-raku-bot> <nemokosch> m: ((1..10).pick xx 5).raku.say;
[20:19] <discord-raku-bot> <Raku eval>  (8, 6, 6, 2, 4).Seq 
[20:19] <discord-raku-bot> <nemokosch> why does this kind of seem to work?
[20:20] <discord-raku-bot> <nemokosch> I mean, apparently the left handside is evaluated again and again
[20:48] *** andydude left
[21:12] *** andydude joined
[21:41] *** Phytolizer left
[22:07] *** andydude left
[22:35] *** leah2 left
[22:42] *** leah2 joined
[22:51] *** sena_kun left
[23:51] *** reportable6 left
[23:51] *** sourceable6 left
[23:51] *** greppable6 left
[23:51] *** nativecallable6 left
[23:51] *** unicodable6 left
[23:51] *** benchable6 left
[23:51] *** committable6 left
[23:51] *** notable6 left
[23:51] *** linkable6 left
[23:51] *** statisfiable6 left
[23:51] *** releasable6 left
[23:51] *** bloatable6 left
[23:51] *** squashable6 left
[23:51] *** coverable6 left
[23:51] *** tellable6 left
[23:51] *** quotable6 left
[23:51] *** bisectable6 left
[23:51] *** shareable6 left
[23:51] *** evalable6 left
[23:51] *** notable6 joined
[23:51] *** tellable6 joined
[23:51] *** linkable6 joined
[23:51] *** sourceable6 joined
[23:52] *** coverable6 joined
[23:52] *** statisfiable6 joined
[23:52] *** evalable6 joined
[23:52] *** squashable6 joined
[23:52] *** bloatable6 joined
[23:53] *** unicodable6 joined
[23:53] *** benchable6 joined
[23:53] *** quotable6 joined
[23:53] *** greppable6 joined
[23:53] *** releasable6 joined
[23:53] *** committable6 joined
[23:53] *** nativecallable6 joined
[23:54] *** bisectable6 joined
[23:54] *** shareable6 joined
[23:54] *** reportable6 joined
[23:54] *** swaggboi joined
[23:55] *** kst left
