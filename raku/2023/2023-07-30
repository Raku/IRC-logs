[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[01:00] *** linkable6 left
[01:00] *** evalable6 left
[01:01] *** evalable6 joined
[01:02] *** linkable6 joined
[01:24] *** razetime joined
[01:34] *** _________ left
[02:12] *** ProperNoun joined
[02:46] *** razetime left
[03:02] *** razetime joined
[03:35] <guifa> jdv librasteve thanks!

[03:35] <guifa> SmokeMachine that's.....crazy lol

[03:37] *** kst joined
[03:37] <guifa> re RSC: I was wondering to what extent we should leave :P5 in there.  One thing to consider is that PCRE is still the most common engine.  Maybe instead of :P5 just deprecate in favor of :pcre or similar

[03:52] *** razetime left
[04:35] *** rf left
[05:10] *** _________ joined
[05:11] *** jpn left
[05:17] <SmokeMachine> I've been thinking on my old EEL (EventExpressionLanguage (https://github.com/FCO/EventExpressionLanguage)) to make it a slang for Raku (after getting exited with guifa's BF's talk) (instead of something a Raku script would parse). And I'm trying to rethink its syntax. So, does this make any sense for any of you? https://gist.github.com/FCO/274fcdce93b2c5f3c257f91e3dfafb0c

[05:17] *** guifa_ joined
[05:31] *** siavash joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:01] *** bloatable6 left
[07:01] *** quotable6 left
[07:01] *** notable6 left
[07:01] *** linkable6 left
[07:01] *** shareable6 left
[07:01] *** squashable6 left
[07:01] *** coverable6 left
[07:01] *** unicodable6 left
[07:01] *** nativecallable6 left
[07:01] *** evalable6 left
[07:01] *** statisfiable6 left
[07:01] *** bisectable6 left
[07:01] *** releasable6 left
[07:01] *** reportable6 left
[07:01] *** tellable6 left
[07:01] *** benchable6 left
[07:01] *** committable6 left
[07:01] *** sourceable6 left
[07:01] *** coverable6 joined
[07:01] *** notable6 joined
[07:01] *** bisectable6 joined
[07:02] *** evalable6 joined
[07:02] *** benchable6 joined
[07:02] *** sourceable6 joined
[07:02] *** tellable6 joined
[07:03] *** linkable6 joined
[07:03] *** statisfiable6 joined
[07:03] *** reportable6 joined
[07:03] *** bloatable6 joined
[07:03] *** quotable6 joined
[07:03] *** unicodable6 joined
[07:03] *** squashable6 joined
[07:03] *** committable6 joined
[07:03] *** shareable6 joined
[07:03] *** nativecallable6 joined
[07:03] *** releasable6 joined
[07:19] *** siavash left
[07:21] *** siavash joined
[07:44] *** jpn joined
[08:10] *** jpn left
[08:16] *** tea3po left
[08:16] *** tea3po joined
[08:48] *** jpn joined
[08:56] *** jpn left
[09:11] <xinming> releasable6: status

[09:11] <releasable6> xinming, Next release will happen when it's ready. There are no known blockers. 0 out of 64 commits logged (⚠ 167 warnings)

[09:11] <releasable6> xinming, Details: https://gist.github.com/6d15049a9bb73b1cfd9254d82b2c6a77

[09:11] *** sena_kun joined
[09:28] <lizmat> xinming: there won't be a 2023.07 release

[09:28] <lizmat> on account of vacation  :-)

[09:30] *** razetime joined
[09:32] *** Sgeo left
[09:32] *** razetime left
[09:43] *** jpn joined
[09:48] *** jpn left
[10:05] *** ab5tract joined
[10:06] *** siavash left
[10:08] *** siavash joined
[10:20] <xinming> lizmat: got it, Will waiting for 2023.08 the

[10:20] <xinming> then

[10:21] <lizmat> you could download the repo and built the latest  :-)

[10:21] <lizmat> is there a specific feature you need after 2023.06 ?

[10:24] *** siavash left
[10:24] *** siavash joined
[10:34] *** siavash2 joined
[10:36] *** siavash left
[10:37] *** jpn joined
[10:43] *** jpn left
[10:45] <xinming> lizmat: Nope, It's just always go for newest version habbit.

[10:46] <lizmat> ok  :-)

[11:14] *** jpn joined
[11:15] <snonux> i am with whatever my distro sticks to :-) as long the version is not 100 years old!

[11:19] *** jpn left
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:09] *** jpn joined
[12:11] *** siavash2 left
[12:13] <lizmat> weekly: https://github.com/Raku/problem-solving/issues/378

[12:13] <notable6> lizmat, Noted! (weekly)

[12:14] *** timo left
[12:14] *** jpn left
[12:24] *** mark22k left
[12:24] *** poohman joined
[12:25] *** timo joined
[12:26] *** mark22k joined
[12:32] *** timo left
[12:38] *** timo joined
[12:48] <discord-raku-bot> <nemokosch> Is there any chance the decision won't get blocked by niner yet again?

[12:48] <discord-raku-bot> <nemokosch> I mean, in the case of any other decision than "let it all remain the way it is"

[13:04] *** phogg joined
[13:10] *** phogg left
[13:10] *** phogg joined
[13:41] <lizmat> nemokosch: I started a new issue, let's not start we preconceived notions

[13:58] *** jpn joined
[14:03] *** jpn left
[14:17] <discord-raku-bot> <antononcube> @lizmat Are "App::Rak" Markdown documents in your articles repository upto date with "App::Rak" itself?

[14:18] <lizmat> they should be

[14:18] <discord-raku-bot> <antononcube> @lizmat Meaning, have you developed/changed new functionalities not reflected in the articles.

[14:18] <discord-raku-bot> <antononcube> @lizmat Ok - thanks!

[14:28] <discord-raku-bot> <antononcube> @lizmat I plan to file an issue for "App::Rak" about language extensions. Guess which? 🙂

[14:29] * lizmat haz no inspiration atm

[14:30] <discord-raku-bot> <nemokosch> App::Rak is useful and it could get some love regarding improvements, I'm used to encountering bugs

[14:30] <discord-raku-bot> <antononcube> Sorry -- no need to entertain my escapades ...

[14:30] <discord-raku-bot> <nemokosch> however, the code is such much "not me" that I wouldn't want to work with it, honestly

[14:30] <discord-raku-bot> <nemokosch> so much*

[14:30] *** timo left
[14:31] <discord-raku-bot> <antononcube> @nemokosch I am trying to generate "App::Rak" usage code using the provided documentation. I am using several NLP techniques, (and technologies.)

[14:31] <lizmat> OOC, what would make the code more "you" nemokosch?

[14:32] *** timo joined
[14:32] <discord-raku-bot> <nemokosch> if it weren't so monolithic, for starters

[14:32] <discord-raku-bot> <antononcube> @lizmat Obviously, interlaced with a certain type of comments.

[14:33] <lizmat> well, it's actually dualithic, wth 

[14:33] <lizmat> with "rak" providing the low-level functionality

[14:33] <discord-raku-bot> <nemokosch> actually, it does consist of two parts: the CLI and the underlying library - but the cut is often not too obvious

[14:34] <discord-raku-bot> <nemokosch> the CLI part itself is quite thick and does quite a lot of imperative magic to set the scene up

[14:34] <lizmat> nemokosch are you saying there are too many comments, or is it about the content of the comments ?

[14:35] <discord-raku-bot> <nemokosch> no, I'm saying that the App::Rak part itself does a lot, and it's often not obvious what is done in the underlying library and what is downright transformed inside the CLI part

[14:36] <lizmat> well, having a CLI that takes 143 options, is bound to be a little complicated

[14:36] <discord-raku-bot> <antononcube> @lizmat That is why natural language command have to be used. 🙂

[14:37] <discord-raku-bot> <nemokosch> iirc it was a common sight that there was some shared variable which at some point got set imperatively

[14:38] <discord-raku-bot> <nemokosch> this is part of the reason there were strange side-effect bugs, like certain options interacted in unexpected ways

[14:56] *** timo left
[15:02] *** timo joined
[15:15] <guifa_> lizmat : if you want I can start to work on a proof of concept Perl regex module.  Then we can play around with deciding whether it's better to keep Perl/PCRE in core or figure out a pluggable manner

[15:15] <lizmat> guifa_: that would be excellent!

[15:16] <guifa_> I just need to finish up one or two more small things on the ECMA262 and thankfully 95% of the word transfers over since JS basically uses PCRE

[15:16] <guifa_> work*

[15:16] <lizmat> but allowing for pluggable quotelangs will be on my list of todo  :-)

[15:17] <guifa_> tbh though, Perl --> Raku can be a simple transpiling, but for how captures are numbered, and that's solvable with a minor edit to the match class i think

[15:17] *** timo left
[15:21] *** timo joined
[15:35] *** jpn joined
[15:38] *** timo left
[15:44] *** timo joined
[15:54] *** rf joined
[15:57] *** jpn left
[16:03] *** timo left
[16:05] *** timo joined
[16:11] <discord-raku-bot> <antononcube> @guifa I plan to complain (publicaly) in one of my blog posts about your neglet of "Intl::Token::Number". What reference name do you prefer: 1) alabamenhu, or 2) guifa ?

[16:13] <lizmat> antononcube did you provide a PR ?

[16:13] <discord-raku-bot> <antononcube> @lizmat I was planning to ask : do you prefer PR or Issue? I guess PR...

[16:14] <discord-raku-bot> <antononcube> I will implement my proposed extensions and make the PR within  an hour.

[16:16] <lizmat> ++antononcube

[16:17] <discord-raku-bot> <antononcube> @guifa Of course, I can just mention the name of Raku module. 🙂

[16:23] *** razetime joined
[16:25] <guifa> guifa works.  I'm gonna update it soon though I was just waiting for RakuAST

[16:26] <guifa> just so many of them

[16:26] <discord-raku-bot> <antononcube> @guifa Right, that kind of excuses are going to be mentioned too...

[16:27] <[Coke]> (blin), ok, found docker/dblin in the repo. I get the same error, No build for start point

[16:27] <[Coke]> (running it in docker I would expect eliminates the OS issue)

[16:28] <[Coke]> .. ugh. and if I specify --old and --new I instead get a bus error!

[16:29] <[Coke]> Looks like depending on what old and new I have, I either get the "no build" or a bus error.

[16:29] <lizmat> meh

[16:33] <discord-raku-bot> <antononcube> @lizmat I will join @nemokosch  in the "App::Ral" is too monolithic complaints -- the file Rak.rakumod is so big that Comma has 0.5 lag while editing it. (On a fairly powerful MacBookPro.)

[16:34] <discord-raku-bot> <antononcube> @lizmat This observation might make you more "entrenched" in vi. 🙂

[16:34] <lizmat> antononcube now imagine having "rak" in there as well

[16:34] <[Coke]> Where does whateverable keep the builds?

[16:35] <[Coke]> (so I can pre-vet that i'm picking one expected to work)

[16:35] <lizmat> 3700 lines in App::Rak, 1408 lines in rak

[16:35] <discord-raku-bot> <antononcube> @lizmat I see!

[16:36] <lizmat> and that's without the 2149 + 899 lines of rakudoc

[16:36] <lizmat> antononcube I'm open to suggestions on how to break it up

[16:38] <lizmat> but I'm  not seeing it atm

[16:38] <discord-raku-bot> <antononcube> @lizmat Aghh -- refactoring is hard. I might have some suggestions after I make the natural DSL code generation for "App::Rak".

[16:38] <lizmat> sure  :-)

[16:39] <discord-raku-bot> <antononcube> @lizmat Often I make DSLs just for that -- to figure the interaction between components and the corresponding architecture.

[16:39] * [Coke] opens https://github.com/Raku/Blin/issues/32 - if someone not on a mac m2 could duplicate that, it'd be helpful.

[16:40] <discord-raku-bot> <antononcube> @lizmat I am just going to make the PR without testing. (I do not dare... and I need to finish a blog post.)

[16:42] *** poohman left
[16:46] <discord-raku-bot> <antononcube> @lizmat Just created the PR request : https://github.com/lizmat/App-Rak/pull/42

[16:54] *** timo left
[16:56] *** timo joined
[16:57] <discord-raku-bot> <nemokosch> On a different note: do y'all have an idea about GUI Raku content that could be tried on Windows? Simply for demonstrative purposes

[16:59] *** jpn joined
[17:00] <discord-raku-bot> <antononcube> "GUI Raku content" -- what do you mean? A Raku workflow that requires interactivity?

[17:09] *** jpn left
[17:09] <rf> I actually like monolithic applications, especially ones as straight-forward as Rak tbh!

[17:14] <discord-raku-bot> <antononcube> @rf Learned programming with FORTRAN and Pascal, you did, hmm?

[17:15] <discord-raku-bot> <antononcube> (Trying out a LLM Yoda persona...)

[17:17] <discord-raku-bot> <antononcube> Some might like this: https://i.imgur.com/x9fpDH0.png

[17:50] <Geth> ¦ ecosystem/main: 52b5bb2061 | (Elizabeth Mattijsen)++ | META.list

[17:50] <Geth> ¦ ecosystem/main: Remove Shell::Command

[17:50] <Geth> ¦ ecosystem/main: 

[17:50] <Geth> ¦ ecosystem/main: It will live in zef soon

[17:50] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/52b5bb2061

[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:01] *** Sgeo joined
[18:16] *** tjr joined
[18:22] <discord-raku-bot> <nemokosch> I meant some GUI program written in Raku

[18:29] *** razetime left
[18:39] *** timo left
[19:00] <Geth> ¦ ecosystem/main: c9f69e32de | (Elizabeth Mattijsen)++ | META.list

[19:00] <Geth> ¦ ecosystem/main: Remove "if", it will live in zef soon

[19:00] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/c9f69e32de

[19:02] <rf> @antonocube: No actually I learned with C and worked in lots of programs with files >5-10k lines, so that may have something to do with it

[19:06] *** timo joined
[19:09] <discord-raku-bot> <nemokosch> Anyway, what's so bad about Pascal 😡

[19:11] <rf> Turbo Pascal is great :)

[19:11] <discord-raku-bot> <nemokosch> >your Pascal:

[19:12] <discord-raku-bot> <nemokosch> >turboflex Pascal:

[19:13] *** timo left
[19:23] *** timo joined
[19:32] <discord-raku-bot> <antononcube> @nemokosch There is some terminal menu package/module. But that is CLI, not GUI. There is GNU plotting package/module that might work on Windows — interactive, but “half” GUI.

[19:40] <discord-raku-bot> <nemokosch> my whole reasoning is that if you are an absolute outsider beginner, this is stuff you'd like to see working. you are most probably a Windows user who wants to at least know that graphical action is possible

[20:13] *** teatwo joined
[20:16] *** tea3po left
[20:19] <discord-raku-bot> <antononcube> That is why I think “notebook solutions” for Raku a really important.

[20:19] *** teatwo left
[20:19] *** teatwo joined
[20:20] *** jpn joined
[20:25] *** jpn left
[20:26] *** teatwo left
[20:26] *** teatwo joined
[20:28] *** teatwo left
[20:28] *** teatwo joined
[20:33] *** jpn joined
[20:37] <guifa> Don't we have a Jupyter thing working now for Raku?

[20:43] *** ab5tract left
[20:46] <SmokeMachine> https://github.com/bduggan/raku-jupyter-kernel

[20:47] *** jpn left
[20:52] *** bigdata joined
[20:58] *** ab5tract joined
[21:14] <discord-raku-bot> <antononcube> @guifa Yes, there are (at least) two notebook solutions for Raku right now: 1) "Jupyter::Kernel" with the Jupypter framework, and 2) "Text::CodeProcessing" and "RakuMode" for Mathematica.

[21:15] <discord-raku-bot> <antononcube> Especially for integrating LLMs into Raku workflows using a notebook is the best. At least, a good REPL is needed.

[21:17] <discord-raku-bot> <antononcube> @guifa Oh, and "power" tokens <local-number>  would really help.

[21:30] *** ab5tract left
[21:30] <discord-raku-bot> <nemokosch> Yeah but I'm not thinking of a notebook solution

[21:31] <discord-raku-bot> <nemokosch> Sorry to break it down for you but I don't think any layperson would be impressed by the way a notebook document looks 😅

[21:31] <discord-raku-bot> <nemokosch> it's not even a real application

[21:32] <discord-raku-bot> <nemokosch> it reminds me of being a 5th grader in school and thinking "why the hell do we need to suffer with Comenius Logo when even Paint is a much better image editor"

[21:35] *** bigganso23456 joined
[21:36] *** bigganso23456 left
[22:00] <guifa_> at work they use Jupyter all over the place for python.  Regardless whether I find it useful or not, clearly other folk do

[22:05] <guifa_> lizmat: one thing that's been getting me a lot.  Is there a reason some of the AST nodes are so picky about what kind of positional you pass them?

[22:06] *** bigdata left
[22:12] <lizmat> guifa_: example ?

[22:12] <guifa_> I had had

[22:13] <guifa_> RakuAST::Regex::CharClassElement::Enumeration.new( elements => @foo.map(*.GENERATE) )

[22:13] <lizmat> ah, yes

[22:13] <guifa_> where GENERATE produces RakuAST::Regex::CharClassEnumerationElement::Character objects (in this case, at least)

[22:13] <lizmat> add a .List after that

[22:13] <guifa_> the only way it would take it is if I did .Array.  .List or Slips didn't work

[22:14] <lizmat> .List didn't ?

[22:14] <discord-raku-bot> <antononcube> I understand that -- I mentioned noteboooks "in ralation to..."

[22:14] <guifa_> Actually looks like .List does too, must have had another issue somewhere else too

[22:14] <lizmat>    method new(List :$elements!, Bool :$negated) {

[22:14] <lizmat> is the signature

[22:15] <lizmat> now, remember this is basically NQP

[22:15] <guifa_> yeah fair

[22:15] <lizmat> so, it doesn't know how to handle a .Seq

[22:15] <lizmat> that's really a HLL construct that NQP doesn't know about

[22:16] <discord-raku-bot> <antononcube> @guifa How scalable is your wrapper solution in "Intl::Token::Number" ? In other words, should I try to understand it, or you plan to replace it with som RakuAST based code?

[22:16] <lizmat> guifa_

[22:16] <lizmat> and slurpies only work on positionals in nqp

[22:17] <guifa_> actually, wait, can confirm that .List does not work.  .List ends up with an empty enumeration, .Array fills it properly

[22:17] <lizmat> that feels... weird

[22:18] *** bigdata joined
[22:18] <guifa_> antononcube: I mean, that one will probably mostly end up becoming a RakuAST translation of what's there.  So if you understand how it works, that's probably mostly how the RAST version will work

[22:20] <guifa_> basically, it grabs data from CLDR for digits, decimals, etc.  Then pieces it together in a standardized format, currently without regard to whether in some locale the ordering may be different

[22:20] *** sena_kun left
[22:21] <guifa_> so it looks for something akin to <negative>? [<digit> | <grouper>]+ [<decimal> <digit>+]? [<exponential> <plus-or-minus> <digit>+]? 

[22:22] <guifa_> where each of those are determined by values pulled from CLDR rather than hard coded.  That's where RakuAST will speed things along, because I'll compile individual regexen per locale which will hard code those in and hsould be much more effiicent

[22:22] <discord-raku-bot> <antononcube> @guifa Thanks for the detailed explanations!

[22:35] <guifa_> oh yeah I can also do the role bit much nicer now hahah

[23:15] *** ProperNoun left
[23:16] *** ProperNoun joined
