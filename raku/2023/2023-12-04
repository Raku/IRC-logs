[00:24] *** teatime joined
[00:24] *** lichtkind_ left
[00:29] *** jpn joined
[00:38] *** jpn left
[00:54] *** sdomi left
[00:55] *** sdomi joined
[00:59] *** itaipu left
[01:13] *** itaipu joined
[01:48] *** jpn joined
[01:53] *** jpn left
[02:45] *** kylese left
[02:46] *** kylese joined
[02:56] *** swaggboi left
[03:01] *** jpn joined
[03:02] *** swaggboi joined
[03:06] *** jpn left
[03:15] *** kylese left
[03:15] *** kylese joined
[03:46] *** jpn joined
[03:54] *** jpn left
[05:37] *** jpn joined
[05:42] *** jpn left
[06:32] *** jpn joined
[06:37] *** jpn left
[06:56] *** jpn joined
[07:05] *** jpn left
[07:08] *** Sgeo_ joined
[07:11] *** Sgeo left
[07:41] *** jpn joined
[07:46] *** jpn left
[07:55] *** jpn joined
[08:00] *** jpn left
[08:47] *** jpn joined
[08:49] *** abraxxa joined
[08:53] *** jpn left
[08:56] *** Sgeo_ left
[09:15] *** abraxxa left
[09:16] *** abraxxa joined
[09:18] *** lichtkind_ joined
[09:45] *** jpn joined
[09:53] *** jpn left
[10:01] *** jpn joined
[10:14] *** jpn left
[10:24] *** jpn joined
[10:44] *** sena_kun joined
[11:48] *** foo63 joined
[11:51] *** lichtkind__ joined
[11:55] *** lichtkind_ left
[12:42] *** jpn left
[13:05] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/12/04/2023-49-venting-this-ad/
[13:36] <sjn> lizmat++
[13:38] *** jpn joined
[13:44] *** gabiruh left
[13:52] *** gabiruh joined
[14:39] <discord-raku-bot> <librasteve> o/
[14:41] <discord-raku-bot> <librasteve> hello - I have a question about name lookup ... this works vvv
[14:41] <discord-raku-bot> <librasteve> m: class C::X { has $.y=42 }; role R[$x='X'] {method new {C::X.new}}; dd R.new;
[14:41] <evalable6> librasteve, rakudo-moar 8dca71e89: OUTPUT: «C::X.new(y => 42)␤»
[14:41] <discord-raku-bot> <Raku eval>  C::X.new(y => 42) 
[14:42] <discord-raku-bot> <librasteve> (phew, it worked)
[14:42] <discord-raku-bot> <librasteve> but this fails vvv
[14:42] <discord-raku-bot> <librasteve> m: class C::X { has $.y=42 }; role R[$x='X'] {method new {C::($x).new}}; dd R.new;
[14:42] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Combination of indirect name lookup and call not supported at /home/glot/main.raku:1 ------> 2 }; role R[$x='X'] {method new {C::($x)⏏.new}}; dd R.new;     expecting any of:         argument list 
[14:42] <evalable6> librasteve, rakudo-moar 8dca71e89: OUTPUT: «(exit code 1) 4===SORRY!4=== Er…»
[14:42] <evalable6> librasteve, Full output: https://gist.github.com/3a4d697ba1dc1f30fc116ea74af2d502
[14:42] <discord-raku-bot> <librasteve> what I am doing wrong?
[14:48] <discord-raku-bot> <librasteve> oh - I have worked it out... vvv
[14:48] <discord-raku-bot> <librasteve> m: class C::X { has $.y=42 }; my $x= 'X'; dd C::{$x}.new;
[14:48] <evalable6> librasteve, rakudo-moar 8dca71e89: OUTPUT: «C::X.new(y => 42)␤»
[14:48] <discord-raku-bot> <Raku eval>  C::X.new(y => 42) 
[14:48] <discord-raku-bot> <nemokosch> yeppers
[14:48] <discord-raku-bot> <nemokosch> m: class C::X { has $.y=42 }; role R[$x='X'] {method new {C::{$x}.new}}; dd R.new;
[14:48] <evalable6> nemokosch, rakudo-moar 8dca71e89: OUTPUT: «C::X.new(y => 42)␤»
[14:48] <discord-raku-bot> <Raku eval>  C::X.new(y => 42) 
[14:49] <discord-raku-bot> <librasteve> thanks!
[14:50] <discord-raku-bot> <librasteve> wonder what happens if I use ≪≫    [oh so funny joke]
[14:55] <discord-raku-bot> <nemokosch> not sure if we want to see that
[14:57] <discord-raku-bot> <nemokosch> oh right, somebody said that %hash<<$key>> would be an allomorph-based lookup. Fortunately that's not the case. The base implementation coerces the key into the exact Str type
[14:58] <discord-raku-bot> <nemokosch> one would wonder what happens for an "object hash"
[14:59] <discord-raku-bot> <nemokosch> m: my %demo{Any}; %demo<12> = 5; %demo.keys.&dd; %demo{12} = 99; dd %demo;
[14:59] <evalable6> nemokosch, rakudo-moar 8dca71e89: OUTPUT: «(IntStr.new(12, "12"),).Seq␤Hash[Any,Any] %demo = (my Any %{Any} = IntStr.new(12, "12") => 5, 12 => 99)␤»
[14:59] <discord-raku-bot> <Raku eval>  (IntStr.new(12, "12"),).Seq Hash[Any,Any %demo = (my Any %{Any} = IntStr.new(12, "12") => 5, 12 => 99) 
[15:00] <discord-raku-bot> <nemokosch> this one does do allomorph-based lookups, even with the single angular brackets
[15:00] <discord-raku-bot> <nemokosch> looking at the behavior, I rest my case, honestly
[15:01] <discord-raku-bot> <librasteve> m: my %demo{Any}; %demo≪12≫ = 5; %demo.keys.&dd; %demo{12} = 99; dd %demo;
[15:01] <evalable6> librasteve, rakudo-moar 8dca71e89: OUTPUT: «(exit code 1) 4===SORRY!4=== Er…»
[15:01] <evalable6> librasteve, Full output: https://gist.github.com/3f6e0c21c009b8fa02f35261a9bd3754
[15:02] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Bogus postfix at /home/glot/main.raku:1 ------> my %demo{Any}; %demo⏏≪12≫ = 5; %demo.keys.&dd; %demo{12} = 99     expecting any of:         infix         infix stopper         statement end         statement modifier         statement modifier loop 
[15:04] <discord-raku-bot> <nemokosch> m: my %demo{Any}; %demo<<12>> = 5; %demo.keys.&dd; %demo{12} = 99; dd %demo;
[15:04] <evalable6> nemokosch, rakudo-moar 8dca71e89: OUTPUT: «(IntStr.new(12, "12"),).Seq␤Hash[Any,Any] %demo = (my Any %{Any} = 12 => 99, IntStr.new(12, "12") => 5)␤»
[15:04] <discord-raku-bot> <Raku eval>  (IntStr.new(12, "12"),).Seq Hash[Any,Any %demo = (my Any %{Any} = IntStr.new(12, "12") => 5, 12 => 99) 
[15:04] <discord-raku-bot> <nemokosch> it probably wasn't the one
[15:05] <discord-raku-bot> <librasteve> maybe Discord is manlging my unicode
[15:07] <discord-raku-bot> <librasteve> anyway, all rakoons should know that angle brackets autoquote stringy literals and make allomorphs out of numeric literals, right?
[15:08] <discord-raku-bot> <librasteve> when you know that the hash behaviour you illustrate is self evident (just putting two familiar things together)
[15:09] <discord-raku-bot> <librasteve> (or would you rather have different behaviour for angle brackets when used for associative indices?)
[15:10] <discord-raku-bot> <librasteve> you certainly haven't said anything yet that will make me think removing allomorphs from raku is a good idea
[15:10] <discord-raku-bot> <librasteve> ;-)
[15:11] <discord-raku-bot> <nemokosch> it seems like you would reject any sort of evidence
[15:13] <discord-raku-bot> <nemokosch> I don't find it a healthy attitude to always just say to whatever that can cause problems more often than not that one can just learn them and then suddenly it's all fine...
[15:13] <discord-raku-bot> <nemokosch> echo chamber stuff
[15:19] *** jpn left
[15:28] *** jpn joined
[17:05] *** euandreh joined
[18:24] *** edr joined
[18:30] *** melezhik joined
[18:30] <melezhik> o/
[18:31] <melezhik> if there is a way to dump sub signature in a nice way? like Data::Dumper does?
[18:31] <melezhik> m: my &f = sub (Int $s ) { say $s }; say &f.signature;
[18:31] <camelia> rakudo-moar 8dca71e89: OUTPUT: «(Int $s)␤»
[18:31] <melezhik> m: my &f = sub (Int :$s ) { say $s }; say &f.signature;
[18:31] <camelia> rakudo-moar 8dca71e89: OUTPUT: «(Int :$s)␤»
[18:32] <[Coke]> m: my &f = sub (Int :$s ) { say $s }; dd &f.signature;
[18:32] <camelia> rakudo-moar 8dca71e89: OUTPUT: «:(Int :$s)␤»
[18:32] <[Coke]> dd is the rakudo specific data dumper
[18:32] <MasterDuke> m: my &f = sub (Int :$s ) { say $s }; dd &f;
[18:32] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say $s }; say &f.signature;
[18:32] <camelia> rakudo-moar 8dca71e89: OUTPUT: «Sub &f = sub (Int :$s) { #`(Sub|2506422275968) ... }␤»
[18:32] <camelia> rakudo-moar 8dca71e89: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '$s' is not declared.  Perhaps you forgot a 'sub' if this was␤intended to be part of a signature?␤at <tmp>:1␤------> p, Any :$getters_count_limit))  ) { say ⏏$s }; say &f.signat…»
[18:33] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  }; say &f.signature;
[18:33] <camelia> rakudo-moar 8dca71e89: OUTPUT: «(:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit)))␤»
[18:33] <melezhik> so I have quite complex signature and I would like to dump them with new lines around nested hashes / etc
[18:34] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  }; say dd(&f.signature);
[18:34] <camelia> rakudo-moar 8dca71e89: OUTPUT: «:(:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit)))␤Nil␤»
[18:34] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  }; say dd(&f);
[18:34] <camelia> rakudo-moar 8dca71e89: OUTPUT: «Sub &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))) { #`(Sub|4214510647424) ... }␤Nil␤»
[18:34] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  }; say dd(&f.signature);
[18:34] <camelia> rakudo-moar 8dca71e89: OUTPUT: «:(:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit)))␤Nil␤»
[18:34] <[Coke]> If you want a pretty printer, you'll have to write one.
[18:34] <melezhik> yeah, that's the point, I thought the maybe already exists, no biggies though
[18:35] <[Coke]> m: my &f = sub (Int :$s ) { say $s }; dd &f.signature.^attributes;
[18:35] <camelia> rakudo-moar 8dca71e89: OUTPUT: «(Attribute.new, Attribute.new, Attribute.new, Attribute.new, Attribute.new, Attribute.new)␤»
[18:35] <[Coke]> m: my &f = sub (Int :$s ) { say $s }; dd &f.signature.params
[18:35] <camelia> rakudo-moar 8dca71e89: OUTPUT: «(Int :$s,)␤»
[18:35] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  }; say dd(&f.signature.params);
[18:35] <camelia> rakudo-moar 8dca71e89: OUTPUT: «(:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit)),)␤Nil␤»
[18:36] <[Coke]> Should be able to introspect all of that.
[18:36] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  };  for &f.signature.params.^attributes -> $a { say $a.perl } );
[18:36] <camelia> rakudo-moar 8dca71e89: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unexpected closing bracket␤at <tmp>:1␤------> arams.^attributes -> $a { say $a.perl } ⏏);␤»
[18:36] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  };  for &f.signature.params.^attributes -> $a { say $a.perl } ;
[18:36] <camelia> rakudo-moar 8dca71e89: OUTPUT: «Attribute.new␤Attribute.new␤»
[18:36] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  };  for &f.signature.params.^attributes -> $a { say $a.Str } ;
[18:36] <camelia> rakudo-moar 8dca71e89: OUTPUT: «$!reified␤$!todo␤»
[18:37] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  };  for &f.signature.params.^attributes -> $a { say $a } ;
[18:37] <camelia> rakudo-moar 8dca71e89: OUTPUT: «Mu $!reified␤Mu $!todo␤»
[18:37] <melezhik> reified and todo - quite unexpected output, huh? 🤔 )))
[18:37] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  };  for &f.signature.params -> $a { say $a } ;
[18:37] <camelia> rakudo-moar 8dca71e89: OUTPUT: «:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))␤»
[18:38] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  };  for &f.signature.params -> $a { say $a, "\n" } ;
[18:38] <camelia> rakudo-moar 8dca71e89: OUTPUT: «:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))␤␤»
[18:38] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  };  for &f.signature.params<> -> $a { say $a, "\n" } ;
[18:38] <camelia> rakudo-moar 8dca71e89: OUTPUT: «:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))␤␤»
[18:38] <melezhik> m: my &f = sub (:%params (:%i18n (Any :$path), :%server_params (Any :$notification_objects_page_size, Any :$calendars_count_max, Any :$empty_tag_throttling_sleep, Any :$getters_count_limit))  ) { say 1000  };  for &f.signature.params.^attributes -> $a { say $a.gist } ;
[18:38] <camelia> rakudo-moar 8dca71e89: OUTPUT: «Mu $!reified␤Mu $!todo␤»
[18:40] <lizmat> melezhik: you know you can also do private messages to camelia?
[18:41] <melezhik> liz ?
[18:42] <melezhik> you mean, another eval bot ?
[18:43] <melezhik> camelia: say 1000;
[18:49] *** melezhik left
[18:51] <lizmat> no, do m: say "foo" in a private message to camelia 
[18:54] <[Coke]> you're generating a lot of backscroll by using public messages.
[18:54] <[Coke]> I will often do a bunch of stuff in private and then showcase one or two in public
[19:17] *** euandreh left
[19:19] *** euandreh joined
[19:23] *** rba_ joined
[19:23] *** meooow_ joined
[19:23] *** kaskal- joined
[19:24] *** jcallen joined
[19:25] *** melezhik joined
[19:25] *** gfldex_ joined
[19:25] *** lesihctej joined
[19:25] *** rypervenche_ joined
[19:25] *** rba left
[19:25] *** rba_ is now known as rba
[19:25] *** meooow left
[19:26] *** gfldex left
[19:26] *** jetchisel left
[19:26] *** jjatria left
[19:26] *** kaskal left
[19:26] *** edr left
[19:26] *** jcallen_ left
[19:26] *** rypervenche left
[19:26] *** rba_ is now known as rba
[19:27] <melezhik> Ahh, ok. I see. I never thought this is gonna be a issue , I see people do that all time here, I thought this is how others see the thoughts flow ))) anyways I will try to be considering ...
[19:31] *** jpn left
[19:33] *** melezhik left
[19:36] *** jjatria joined
[19:49] *** jpn joined
[20:11] *** melezhik joined
[20:14] *** melezhik left
[20:34] *** TieUpYourCamel left
[20:49] *** TieUpYourCamel joined
[21:11] *** jpn left
[21:32] <[Coke]> Appreciate it, and we aren't trying to single you out.
[21:45] *** lucerne left
[21:45] *** jpn joined
[21:50] *** jpn left
[21:55] *** lucerne joined
[22:06] *** jpn joined
[22:15] *** foo63 left
[22:19] *** euandreh left
[22:24] *** jpn left
[22:26] *** euandreh joined
[22:30] *** euandreh left
[22:33] *** euandreh joined
[22:42] *** abraxxa left
[22:43] *** japhb left
[22:56] *** japhb joined
[23:00] *** habere-et-disper joined
[23:00] *** euandreh left
[23:28] <mort> does raku grammars have a way of dealing with comments nicely?
[23:28] <mort> I'd want to extend the concept of "whitespace" to include anything between '//' and the end of a line
[23:30] *** Sgeo joined
[23:36] <mort> ah I guess you define your own ws token
[23:41] *** jpn joined
[23:47] *** jpn left
[23:48] *** sena_kun left
