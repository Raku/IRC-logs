[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:26] <discord-raku-bot> <Nemokosch> legendary

[00:38] <Geth> ¬¶ doc: 2colours++ created pull request #4193: NFG link modifications

[00:38] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4193

[00:56] *** ispyhumanfly joined
[01:01] *** cokebot9000 joined
[01:01] *** freeside left
[01:03] *** ispyhumanfly left
[01:13] *** japhb left
[01:13] *** freeside joined
[01:18] *** Manifest0 left
[01:18] *** freeside left
[01:31] <tonyo> m: use NativeCall;

[01:31] <camelia> rakudo-moar 156fc2cfa: ( no output )

[01:34] *** japhb joined
[01:42] *** melezhik joined
[01:45] <melezhik> .tell [Coke]  I've seen some CI related issues in raku/doc repo , I know you guys probably use GH actions now for the most of things , but feel free to ping me if maybe we can try out SparrowCI fir some tasks ... it supports many  Linux distros

[01:45] <tellable6> melezhik, I'll pass your message to [Coke]

[01:47] *** freeside joined
[01:48] *** spacekookie left
[01:51] *** melezhik left
[01:52] *** freeside left
[01:56] <cokebot9000> All the CI there should probably be disabled until we're done with raku/doc-website work. (I bet most of it is obsolete at this point)

[01:56] <cokebot9000> Can you open a ticket in raku/doc and assign dontlaugh for now?

[01:57] <cokebot9000> (and me, I guess?)

[01:57] <cokebot9000> oh, he's gone?

[01:57] <cokebot9000> .tell melezhik - thanks

[01:57] <tellable6> cokebot9000, I'll pass your message to melezhik

[01:59] <Geth> ¬¶ doc/main: fc05e537aa | (Will Coleda)++ | 43 files

[01:59] <Geth> ¬¶ doc/main: Remove build/site code, assets, docs

[01:59] <Geth> ¬¶ doc/main: 

[01:59] <Geth> ¬¶ doc/main: Superseded by raku/doc-website

[01:59] <Geth> ¬¶ doc/main: review: https://github.com/Raku/doc/commit/fc05e537aa

[01:59] <Geth> ¬¶ doc/main: 62a84d94d8 | (Will Coleda)++ | .circleci/config.yml

[01:59] <Geth> ¬¶ doc/main: Remove CI that tested build

[01:59] <Geth> ¬¶ doc/main: review: https://github.com/Raku/doc/commit/62a84d94d8

[02:07] *** freeside joined
[02:08] <cokebot9000> Using raku version 2022.07, it takes 815.57s to run -c --doc on all the pod files in the raku/doc repository

[02:08] <cokebot9000> (and that's with .race)

[02:08] <discord-raku-bot> <Nemokosch> did I read that right...

[02:09] <discord-raku-bot> <Nemokosch> that's almost an hour and a half

[02:09] <cokebot9000> m: 815.57 / 60

[02:09] <camelia> rakudo-moar 156fc2cfa: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "/" in expression "815.57 / 60" in sink context (line 1)‚ê§¬ª

[02:09] <cokebot9000> m: say 815.57 / 60

[02:09] <camelia> rakudo-moar 156fc2cfa: OUTPUT: ¬´13.592833‚ê§¬ª

[02:09] <cokebot9000> no, it's 13 minutes.

[02:09] <discord-raku-bot> <Nemokosch> xddd

[02:09] <discord-raku-bot> <Nemokosch> I'm gonna blame it for the late hour

[02:09] <cokebot9000> fair

[02:09] <cokebot9000> 13m is still slow, and we're trying to run this on each commit

[02:10] <discord-raku-bot> <Nemokosch> 60 seconds feel like an hour after 3am

[02:11] <discord-raku-bot> <Nemokosch> is this a raku built-in option or is there a dedicated script that does this?

[02:12] <cokebot9000> raku -c --doc validates the pod

[02:18] <discord-raku-bot> <Nemokosch> üëç

[02:19] *** cokebot9000 left
[02:23] *** melezhik joined
[02:23] <melezhik> .

[02:23] <tellable6> 2023-02-06T03:01:28Z #raku <tonyo> melezhik add a key `"bundlers": ["Fez::Util::Pax"]` in your ~/.fez-config.json

[02:23] <tellable6> 2023-02-08T01:57:28Z #raku <cokebot9000> melezhik - thanks

[02:25] <melezhik> .tell [Coke] , do you mean me , when say "create a ticket" ?

[02:25] <tellable6> melezhik, I'll pass your message to [Coke]

[02:26] *** melezhik left
[02:49] <discord-raku-bot> <el gatito (** advocate)> does raku use refcounting

[02:52] <discord-raku-bot> <Nemokosch> https://github.com/MoarVM/MoarVM/blob/master/docs/gc.markdown

[02:54] <rf> Goodnight folks.

[02:55] *** rf left
[02:55] <Nemokosch> oof, just when I saw his message...

[02:55] <tellable6> 2023-01-31T17:29:18Z #raku <nine> Nemokosch: we don't have people who want to manage and we don't have people who would want to be managed. So that line of discussion can only be theoretical until both facts change.

[02:55] <tellable6> 2023-01-31T17:35:58Z #raku <nine> Nemokosch: well volunteered!

[02:55] <tellable6> 2023-01-31T17:51:20Z #raku <ab5tract> Nemokosch: You are referring to the coercers?

[02:55] <tellable6> 2023-01-31T21:27:04Z #raku <ab5tract> Nemokosch: I wish MVM_SPESH_DISABLE noted its existence somewhere in the run output

[02:55] <tellable6> 2023-02-03T14:20:46Z #raku-dev <ab5tract> Nemokosch: I don't totally understand what you mean

[02:55] <tellable6> 2023-02-03T20:04:45Z #raku <jdv> Nemokosch:  i think your "push to map" may be the biggest release blocker but i havent confirmed it yet

[02:55] <tellable6> 2023-02-04T20:47:59Z #raku-dev <lizmat> Nemokosch: are you done with Data::MessagePack for now?  don't want to interfere 

[02:55] <tellable6> 2023-02-05T01:54:29Z #raku <guifa> Nemokosch: that re my answer for pingu or for the XML module?

[02:55] <tellable6> 2023-02-05T02:04:35Z #raku <guifa> Nemokosch: the XML module was clearly designed waaaaaaaaaaay back (it was very likely one of the very first modules ever written for Raku)

[02:55] <tellable6> 2023-02-05T12:46:16Z #raku-dev <ab5tract> Nemokosch: Ah yes, I see your concern

[02:55] <tellable6> 2023-02-05T13:01:15Z #raku <guifa> Nemokosch: I don't have write access for it, but I'll start a fork and up it there

[02:55] <tellable6> 2023-02-05T22:54:24Z #raku <ab5tract> Nemokosch: "they unwrap even if they are in Scalar containers - is this desirable?" 

[02:55] <tellable6> 2023-02-07T10:45:07Z #raku <El_Che> Nemokosch: bundling is good

[02:55] <tellable6> 2023-02-07T10:46:07Z #raku <El_Che> Nemokosch: bundling == you are responsable, you need to publish an update

[02:56] <Nemokosch> absolute apocalypse

[03:14] *** jpn joined
[03:15] *** jgaz left
[03:19] *** jpn left
[03:22] *** gabiruh left
[03:25] *** gabiruh joined
[03:29] *** Nemokosch left
[03:38] <tonyo> guifa: referring to the one the html parser relies upon?

[04:10] <guifa> tonyo: I think so.  It's just 'XML' (talk about namespace squatting lol)

[04:25] <discord-raku-bot> <el gatito (** advocate)> why does anyone uses xml these days for anything other than markup

[04:26] <discord-raku-bot> <el gatito (** advocate)> there are far better options for saving data

[04:29] *** linkable6 left
[04:29] *** evalable6 left
[04:30] *** evalable6 joined
[04:31] *** linkable6 joined
[04:32] *** deoac joined
[04:45] <deoac> p6steve: macOS Ventura 13.1.¬† I installed rakudo with the Rakudo Star Bundle.¬† I used your recipe from #raku-beginner 3 February.

[04:45] <tellable6> deoac, I'll pass your message to p6steve

[05:15] *** deoac left
[05:21] <Geth> ¬¶ doc/main: 02998c27c3 | (M√°rton Polg√°r)++ (committed using GitHub Web editor) | doc/Language/glossary.pod6

[05:21] <Geth> ¬¶ doc/main: NFG link modifications (#4193)

[05:21] <Geth> ¬¶ doc/main: 

[05:21] <Geth> ¬¶ doc/main: I added another 6guts blog link that I found particularly useful about the topic - probably more useful than its prequel. Also "deseriousalized" the chat discussion: it's clearly cute and funny if you already kind of grasp the topic but perhaps a newcomer shouldn't take it too seriously, that wouldn't seem good PR. :v

[05:21] <Geth> ¬¶ doc/main: review: https://github.com/Raku/doc/commit/02998c27c3

[05:28] *** ispyhumanfly joined
[05:32] *** ispyhumanfly left
[05:51] *** freeside left
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[07:03] *** bloatable6 left
[07:03] *** notable6 left
[07:03] *** sourceable6 left
[07:03] *** greppable6 left
[07:03] *** committable6 left
[07:03] *** benchable6 left
[07:03] *** bisectable6 left
[07:03] *** shareable6 left
[07:03] *** unicodable6 left
[07:03] *** squashable6 left
[07:03] *** quotable6 left
[07:03] *** coverable6 left
[07:03] *** reportable6 left
[07:03] *** releasable6 left
[07:03] *** nativecallable6 left
[07:03] *** statisfiable6 left
[07:03] *** evalable6 left
[07:03] *** tellable6 left
[07:03] *** linkable6 left
[07:03] *** coverable6 joined
[07:03] *** evalable6 joined
[07:03] *** sourceable6 joined
[07:04] *** statisfiable6 joined
[07:04] *** releasable6 joined
[07:04] *** reportable6 joined
[07:04] *** tellable6 joined
[07:04] *** notable6 joined
[07:04] *** bisectable6 joined
[07:04] *** nativecallable6 joined
[07:04] *** committable6 joined
[07:04] *** linkable6 joined
[07:04] *** benchable6 joined
[07:05] *** greppable6 joined
[07:05] *** shareable6 joined
[07:05] *** unicodable6 joined
[07:05] *** quotable6 joined
[07:06] *** bloatable6 joined
[07:06] *** squashable6 joined
[07:18] *** freeside joined
[07:38] *** razetime joined
[07:38] *** sena_kun joined
[07:43] *** Sgeo left
[07:47] *** ircuser joined
[07:53] *** jpn joined
[07:58] *** freeside left
[07:59] *** jpn left
[08:02] *** razetime left
[08:21] *** razetime joined
[08:22] *** freeside joined
[08:25] *** dustinm`_ left
[08:31] *** jpn joined
[08:48] *** dustinm`_ joined
[08:51] *** human-blip left
[08:58] *** Manifest0 joined
[09:02] *** freeside left
[09:08] *** dakkar joined
[09:37] *** ab5tract joined
[09:55] *** freeside joined
[10:01] *** freeside left
[10:05] *** lichtkind joined
[10:07] *** jpn left
[10:10] *** freeside joined
[10:12] *** jpn joined
[10:15] *** freeside left
[10:19] *** jpn left
[10:30] *** sena_kun left
[10:34] <discord-raku-bot> <Nemokosch> Perl6::Parser will turn unneeded once the RakuAST frontend works, right?

[10:35] <lizmat> most likely, yes

[10:36] <discord-raku-bot> <Nemokosch> yeah seems like Tidy stuff will become easier and less magician tier

[10:36] *** spacekookie joined
[10:37] <lizmat> there's already a basic tidy now:  .AST.DEPARSE any code  :-)

[10:38] <lizmat> m: say 'my $foo       =     42'.AST.DEPARSE

[10:38] <camelia> rakudo-moar 156fc2cfa: OUTPUT: ¬´my $foo = 42‚ê§‚ê§¬ª

[10:39] <lizmat> you can actually already create a subclass of RakuAST::Deparse, and pass that to DEPARSE as the argument

[10:39] <lizmat> m: use experimental :rakuast; class A is RakuAST::Deparse { }; say 'my $foo       =     42'.AST.DEPARSE(A)

[10:39] <camelia> rakudo-moar 156fc2cfa: OUTPUT: ¬´my $foo = 42‚ê§‚ê§¬ª

[10:43] <discord-raku-bot> <Nemokosch> ü§©

[10:44] <discord-raku-bot> <Nemokosch> what is PDL?

[10:44] <discord-raku-bot> <el gatito (** advocate)> perl data langauge

[10:48] <discord-raku-bot> <Nemokosch> is this relevant to Raku in any way? just saw a mention of it on github

[10:49] <lizmat> you can probably use it with Inline::Perl5

[10:51] <discord-raku-bot> <el gatito (** advocate)> are there any other perl ffis than inline perl5

[10:53] <lizmat> NativeCall ?

[10:53] <discord-raku-bot> <Nemokosch> üß†

[10:53] <discord-raku-bot> <Nemokosch> Is Inline::Perl5 not built on NativeCall itself?

[10:53] <lizmat> indeed

[10:53] *** jpn joined
[10:54] <lizmat> that's why I wondered about the question

[10:54] <discord-raku-bot> <Nemokosch> btw does NativeCall stuff run outside of MoarVM?

[10:56] <discord-raku-bot> <el gatito (** advocate)> no i don‚Äôt mean C FFI

[10:57] <lizmat> https://raku.land/?q=Inline%3A%3A

[10:57] <discord-raku-bot> <el gatito (** advocate)> inline python real

[10:59] *** freeside joined
[11:00] <discord-raku-bot> <Nemokosch> Inline::Python would need an upgrade - if you feel ambitious, there is a good project for you üòõ

[11:02] <discord-raku-bot> <el gatito (** advocate)> anyhow have anyone tried to recreate perligata in raku

[11:04] *** freeside left
[11:04] <lizmat> it would require a radically different approach, as Raku does not have, and will not have, any source filters

[11:05] *** razetime left
[11:12] <discord-raku-bot> <Nemokosch> I'm tempted to see Tcl in Raku but probably isn't gonna manifest, just a fun idea

[11:12] *** freeside joined
[11:12] <discord-raku-bot> <Nemokosch> talking about diehard C stuff

[11:13] *** woei left
[11:17] *** freeside left
[11:31] *** razetime joined
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:03] *** freeside joined
[12:08] *** freeside left
[12:44] <guifa> Unfortunately I've found a few nodes don't like to deparse very well (chained operators are one), but that's just a question of adding support for them methinks

[12:44] <guifa> lizmat / Nemokosch ^^

[12:45] <lizmat> guifa: provide code samples, and I'm on it

[12:46] *** freeside joined
[12:46] <guifa> :D  I'll try to get you some this evening when I'm home from work

[12:46] * guifa also needs to get back working on RAST::PrettyPrint

[12:48] <guifa> Also I'd love to upgrade this module https://github.com/FROGGS/p6-Inline-C/ to work more akin to https://github.com/alabamenhu/BasicTest

[12:51] *** freeside left
[12:52] <guifa> Only problem is I'd need to be able to detect the final } that completes the code block and isn't part of the C code which means having to parse C code

[12:58] *** ispyhumanfly joined
[13:00] <lizmat> isn't a C grammar pretty... easy ?

[13:01] <discord-raku-bot> <Nemokosch> with or without the preprocessor? üòÇ

[13:02] <lizmat> without I would assume ?

[13:03] *** ispyhumanfly left
[13:05] <guifa> Should be fairly simple.  I looked at the official grammar from ISO and the only problem is that some of its definitions use left expansion

[13:05] <guifa> like a number is defined as 

[13:06] <guifa> token digit {¬†<[0..9]> }; token number {¬†<number> <digit> }

[13:06] <guifa> so I can't quite C&P everything but it shouldn't be too hard

[13:08] <discord-raku-bot> <el gatito (** advocate)> token number { <digit>+ }

[13:08] <discord-raku-bot> <el gatito (** advocate)> or use a LALR parser ig

[13:11] <guifa> Right, my point is I will actually have to do a small degree of thinking to write the parser in Raku rather than just copy it all down

[13:11] <guifa> some left expansions are easier to deal with than others 

[13:11] <lizmat> I wonder whether there aren't any Marpa grammars for C around, and I recall Jeff Goff having worked on a Marpa -> Raku translator ?

[13:14] <discord-raku-bot> <Nemokosch> with ANTLR surely, that module I've come across recently

[13:14] <guifa> possibly.  I just did a quick glance and found the ISO standard and its grammar, I'm sure there are other implementable ones out there if I looked harder haha

[13:14] *** razetime left
[13:15] * guifa is afk

[13:49] *** deoac joined
[13:54] <discord-raku-bot> <Anton Antonov> I used Jeff Goff's ANLTR-to-Raku package(s) a few times. With small tweaking the results became immediately operational.

[13:59] *** ispyhumanfly joined
[14:06] *** jpn left
[14:07] *** jpn joined
[14:19] *** freeside joined
[14:23] *** freeside left
[14:23] *** Maylay joined
[14:27] <discord-raku-bot> <Anton Antonov> Has anyone worked with connecting Raku to Elasticsearch? If yes, please, share the experience... üôÇ To be clear, I am interested in using Elasiticsearch in Raku.

[14:34] *** ab5tract left
[14:37] *** epony left
[14:41] *** freeside joined
[14:44] *** epony joined
[14:45] *** Nemokosch joined
[14:52] <moritz> I haven't, but elastic just uses a http(s) API, so connecting to it via Cro or so shouldn't be too hard

[15:16] <discord-raku-bot> <Anton Antonov> @moritz I was thinking that too. But I was wondering is there some Raku package similar to this Perl5 one: https://github.com/elastic/elasticsearch-perl .

[15:23] *** pingu joined
[15:36] *** Sgeo joined
[15:41] <tonyo> the harder part of the transpilers is getting the actions right

[16:03] *** deoac left
[16:07] *** razetime joined
[16:57] *** n1to joined
[17:11] *** razetime left
[17:13] *** n1to left
[17:22] *** codesections joined
[17:29] *** Nemokosch left
[17:29] *** Nemokosch joined
[17:31] *** saint- joined
[17:31] *** clarjon1 joined
[17:37] *** dakkar left
[17:42] *** melezhik joined
[17:42] <melezhik> .

[17:42] <melezhik> .tell [Coke] - https://github.com/Raku/doc/issues/4195

[17:42] <tellable6> melezhik, I'll pass your message to [Coke]

[17:43] *** melezhik left
[17:53] <pingu> are regexes mutable if assigned to a scalar

[17:58] <pingu> m: my $regex = /.*a.*/; my $val = 'bar'; if ($val ~~ $regex) { print("regex matches\n"); $regex = /ca.*/; }

[17:58] <camelia> rakudo-moar e3b9c6636: OUTPUT: ¬´regex matches‚ê§¬ª

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:02] <pingu> ok cool

[18:02] <moritz> you can assign a new value to the variable

[18:02] <moritz> but the regex object itself? dunno if that's mutable

[18:03] <moritz> m: my $regex = /.*a.*/; $regex.name = 'my-re'

[18:03] <camelia> rakudo-moar e3b9c6636: OUTPUT: ¬´Cannot modify an immutable Str ()‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:16] <tonyo> m: my $r = /.*a.*/; $r.name := 're'

[18:16] <camelia> rakudo-moar e3b9c6636: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Cannot use bind operator with this left-hand side‚ê§at <tmp>:1‚ê§------> my $r = /.*a.*/; $r.name := 're'‚èè<EOL>‚ê§¬ª

[18:18] *** jpn left
[18:19] *** jpn joined
[18:36] *** sena_kun joined
[18:47] *** freeside left
[18:48] *** ab5tract joined
[18:49] *** derpydoo joined
[18:58] *** freeside joined
[19:17] *** deoac joined
[20:17] *** bisectable6 left
[20:17] *** bloatable6 left
[20:17] *** notable6 left
[20:17] *** nativecallable6 left
[20:17] *** committable6 left
[20:17] *** statisfiable6 left
[20:17] *** tellable6 left
[20:17] *** sourceable6 left
[20:17] *** shareable6 left
[20:17] *** unicodable6 left
[20:17] *** releasable6 left
[20:17] *** benchable6 left
[20:17] *** greppable6 left
[20:17] *** reportable6 left
[20:17] *** evalable6 left
[20:17] *** squashable6 left
[20:17] *** coverable6 left
[20:17] *** linkable6 left
[20:18] *** squashable6 joined
[20:18] *** sourceable6 joined
[20:18] *** greppable6 joined
[20:18] *** reportable6 joined
[20:18] *** bisectable6 joined
[20:18] *** evalable6 joined
[20:18] *** releasable6 joined
[20:18] *** bloatable6 joined
[20:19] *** benchable6 joined
[20:19] *** unicodable6 joined
[20:19] *** coverable6 joined
[20:19] *** notable6 joined
[20:19] *** shareable6 joined
[20:19] *** linkable6 joined
[20:19] *** tellable6 joined
[20:19] *** committable6 joined
[20:20] *** nativecallable6 joined
[20:20] *** statisfiable6 joined
[20:25] <tonyo> melezhik: that unattended flag onlyh works in that specific function - working off the dist branch which is introducing dist management stuff and i'll integrate that there if you want to do some pre-testing on that branch

[20:25] <tellable6> tonyo, I'll pass your message to melezhik

[20:25] <tonyo> s/yh/y

[21:10] *** jpn left
[21:11] *** freeside left
[21:23] *** freeside joined
[21:28] *** freeside left
[21:36] *** jpn joined
[21:45] *** freeside joined
[21:54] *** bigdata joined
[22:04] *** jpn left
[22:05] *** jpn joined
[22:09] <discord-raku-bot> <Nemokosch> from the readme of rakuast:

[22:09] <discord-raku-bot> <Nemokosch> > gets the resolution if their is one, or throws an exception if not

[22:09] *** sena_kun left
[22:10] <discord-raku-bot> <Nemokosch> so it's not only me who types by phonetic approximation üòå

[22:10] <discord-raku-bot> <Nemokosch> "their is one", probably meant "there is one"

[22:20] *** jpn left
[22:21] *** deoac left
[22:32] *** clarjon1 left
[22:32] *** clarjon1 joined
[22:49] *** jpn joined
[22:54] *** freeside left
[23:03] *** derpydoo left
[23:05] *** freeside joined
[23:09] <Geth> ¬¶ rakudoc: coke self-assigned Deprecated Code https://github.com/Raku/rakudoc/issues/20

[23:20] <pingu> how do I make my regex match just the first new line so that my for loop can store each line as a new array element

[23:21] <pingu>  /[\n\r]+/ isnt working

[23:22] <pingu> it would be nice if it kept blank lines in because people like to use blank lines to separate groups of lines that are going the related

[23:32] <discord-raku-bot> <Nemokosch> which of them do you actually want? match just the first new line, or store each line as a new array element?

[23:37] <pingu> store each line in an array

[23:38] <discord-raku-bot> <Nemokosch> and I'm taking you don't like .lines?

[23:40] *** BarrOff joined
[23:42] *** jpn left
[23:45] <pingu> well, it depends

[23:45] <pingu> I was just learning regex

