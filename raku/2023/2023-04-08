[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:09] *** vrurg_ joined
[00:11] *** vrurg left
[01:04] <discord-raku-bot> <Anton Antonov> @guifa Link(s)?

[01:04] <guifa> Will post as soon as I fixed an issue with the week formatter

[01:05] * guifa is having to do math and ... boo

[01:08] *** MasterDuke left
[01:21] <guifa> Basically I realized that Raku's week-based functions for $datetime were all pretty much based on ISO

[01:22] <guifa> but for proper localization,  I needed to be able to adjust the formula.  Most of the ones online are optimized for that case, and so I'm working back from a multilayer formula now to see just how slim I can make it

[01:28] *** nort left
[02:10] *** teatwo joined
[02:13] *** tea3po left
[02:15] *** teatwo left
[02:15] *** teatwo joined
[02:35] *** jumpnbrownweasel joined
[02:37] *** epony left
[02:59] *** epony joined
[03:19] *** lmz joined
[03:27] *** nort joined
[03:34] *** nort left
[03:36] *** nort joined
[04:11] *** holyghost left
[04:11] *** nort left
[04:19] *** nort joined
[04:20] *** nort left
[04:21] *** nort joined
[04:25] *** nort left
[05:25] *** sourceable6 left
[05:25] *** squashable6 left
[05:25] *** benchable6 left
[05:25] *** unicodable6 left
[05:25] *** tellable6 left
[05:25] *** shareable6 left
[05:25] *** evalable6 left
[05:25] *** linkable6 left
[05:25] *** coverable6 left
[05:25] *** nativecallable6 left
[05:25] *** statisfiable6 left
[05:25] *** bloatable6 left
[05:25] *** reportable6 left
[05:25] *** notable6 left
[05:25] *** quotable6 left
[05:25] *** releasable6 left
[05:25] *** greppable6 left
[05:25] *** bisectable6 left
[05:25] *** committable6 left
[05:25] *** statisfiable6 joined
[05:25] *** reportable6 joined
[05:25] *** linkable6 joined
[05:26] *** quotable6 joined
[05:26] *** nativecallable6 joined
[05:26] *** coverable6 joined
[05:26] *** unicodable6 joined
[05:26] *** tellable6 joined
[05:26] *** bisectable6 joined
[05:26] *** notable6 joined
[05:27] *** releasable6 joined
[05:27] *** committable6 joined
[05:27] *** evalable6 joined
[05:27] *** greppable6 joined
[05:27] *** benchable6 joined
[05:27] *** squashable6 joined
[05:27] *** shareable6 joined
[05:28] *** bloatable6 joined
[05:28] *** sourceable6 joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:33] *** jpn joined
[06:57] *** jpn left
[06:58] *** epony left
[06:59] *** jpn joined
[07:06] *** jpn left
[07:21] *** holyghost joined
[07:24] *** epony joined
[07:24] *** nort joined
[07:35] *** nort left
[07:35] <discord-raku-bot> <Anton Antonov> @guifa I find programming date both difficult and boring, so, I consider your efforts heroic .

[07:36] *** nort joined
[07:40] *** nort left
[07:43] *** jpn joined
[08:38] *** sena_kun joined
[08:43] *** Fritz joined
[08:47] *** Fritz is now known as fritz

[09:57] *** holyghost left
[09:58] *** fritz left
[10:29] *** Sgeo left
[11:16] *** lmz left
[11:26] *** jpn left
[11:28] *** squashable6 left
[11:29] *** squashable6 joined
[11:56] *** holyghost joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:05] <guifa> AntonAntonov: I don't necessarily find it boring, but difficult for sure.  It's so easy to have a single digit or operator wrong and everything blows up.

[12:11] <guifa> I'm still trying to figure out the best way to handle adding in new calendar types

[12:12] <guifa> Timezones was one thing because for the most part it doesn't muck with anything involved in calculations other than the offset which is built into DateTIme anyways

[12:16] *** Fritz joined
[12:38] *** jpn joined
[12:54] *** jpn left
[13:07] *** jpn joined
[13:11] *** Xliff joined
[13:11] <Xliff> \o

[13:11] <tellable6> 2023-04-06T15:40:58Z #raku <tonyo> xliff these svg docs from mdn aren't very consistent, you may find some issues with types when you start trying to use the SVG in Ryml

[13:11] <Xliff> Happy Caturday!

[13:11] <Xliff> .tell tonyo No worries. Thanks for your efforts!

[13:11] <tellable6> Xliff, I'll pass your message to tonyo

[13:11] <Xliff> Is this a bug?

[13:11] <Xliff> Cannot resolve caller openDB(Bizzell::Roles::DB:U: Str:D, Hash:D); none of these signatures matches:

[13:11] <Xliff>     (Bizzell::Roles::DB: $name, *%_)

[13:11] <Xliff>     (Bizzell::Roles::DB: $name, $config, *%_)

[13:13] <Xliff> m: sub a ($b, $c) { say $b.^name; say $c.^name }; my $c = { a => 1 }; a("Bleah!", $c)

[13:13] <camelia> rakudo-moar d1fe3fee8: OUTPUT: ¬´Str‚ê§Hash‚ê§¬ª

[13:13] <Xliff> ???

[13:15] <discord-raku-bot> <Anton Antonov> @guifa Again -- heroic considerations. üôÇ

[13:15] <Xliff> m: sub a ($b, $c) { say $b.^name; say $c.^name }; my $c = { a => {  b=> 2 }  }; a("Bleah!", $c<a>)

[13:15] <camelia> rakudo-moar d1fe3fee8: OUTPUT: ¬´Str‚ê§Hash‚ê§¬ª

[13:16] <guifa> I'd love if we could have Dateish and Timeish objects separate, and then it just happens that DateTime fulfills both roles

[13:16] *** Vyrus left
[13:16] <Xliff> m: my $c = { a => {  b=> 2 }  }; multi sub ($a) { samewith($a, $c{$a} ); }; sub a ($b, $c) { say $b.^name; say $c.^name }; a('a')

[13:16] <camelia> rakudo-moar d1fe3fee8: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§An anonymous routine may not take a multi declarator‚ê§at <tmp>:1‚ê§------> ulti sub ($a) { samewith($a, $c{$a} ); }‚èè; sub a ($b, $c) { say $b.^name; say $c.‚ê§    expecting any of:‚ê§        h‚Ä¶¬ª

[13:16] <Xliff> m: my $c = { a => {  b=> 2 }  }; multi sub a  ($a) { samewith($a, $c{$a} ); }; sub a ($b, $c) { say $b.^name; say $c.^name }; a('a')

[13:16] <camelia> rakudo-moar d1fe3fee8: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Redeclaration of routine 'a'.  Did you mean to declare a multi-sub?‚ê§at <tmp>:1‚ê§------>  ($b, $c) { say $b.^name; say $c.^name }‚èè; a('a')‚ê§    expecting any of:‚ê§        horizontal whitesp‚Ä¶¬ª

[13:16] <Xliff> m: my $c = { a => {  b=> 2 }  }; multi sub a  ($a) { samewith($a, $c{$a} ); }; multi sub a ($b, $c) { say $b.^name; say $c.^name }; a('a')

[13:16] <camelia> rakudo-moar d1fe3fee8: OUTPUT: ¬´Str‚ê§Hash‚ê§¬ª

[13:17] <Xliff> m: my $c = { a => {  b=> 2 }  }; class A { multi method  a  ($a) { samewith($a, $c{$a} ); }; multi method  a ($b, $c) { say $b.^name; say $c.^name };  }; A.a('a')

[13:17] <camelia> rakudo-moar d1fe3fee8: OUTPUT: ¬´Str‚ê§Hash‚ê§¬ª

[13:18] <Xliff> Huh. That's the entire golf and I can't replicate.

[13:18] <Xliff> m: my %c = ( a => {  b=> 2 }  ); class A { multi method  a  ($a) { samewith($a, $c{$a} ); }; multi method  a ($b, $c) { say $b.^name; say $c.^name };  }; A.a('a')

[13:18] <camelia> rakudo-moar d1fe3fee8: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Variable '$c' is not declared.  Did you mean '%c'?‚ê§at <tmp>:1‚ê§------>  { multi method  a  ($a) { samewith($a, ‚èè$c{$a} ); }; multi method  a ($b, $c) { ‚ê§¬ª

[13:18] <Xliff> m: my %c = ( a => {  b=> 2 }  ); class A { multi method  a  ($a) { samewith($a, %c{$a} ); }; multi method  a ($b, $c) { say $b.^name; say $c.^name };  }; A.a('a')

[13:18] <camelia> rakudo-moar d1fe3fee8: OUTPUT: ¬´Str‚ê§Hash‚ê§¬ª

[13:28] <discord-raku-bot> <Anton Antonov> @guifa Is there an "official" Timish role?

[13:29] <guifa> There is not

[13:29] *** holyghost left
[13:29] *** Xliff left
[13:30] *** Vyrus joined
[13:30] *** an3223 left
[13:34] *** Vyrus left
[13:35] *** Fritz left
[13:38] <guifa> In a perfect world, we'd have Dateish, Timeish, and then where we have DateTime we could check for Dateish/Timeish

[13:38] *** jpn left
[13:40] <guifa> right now though, the Dateish role is a bit odd, because while you can assume use Dateish as a generic type constraint (allowing other calendar systems), you can't do the same once time is added in

[13:41] <discord-raku-bot> <Anton Antonov> @guifa Would it be hard to make perfect parallel world for you? You can define Timish, then, say, TimeDate that inherits DateTime and plays both Timish and Datish.

[13:44] <guifa> Yeah unfortunately it wouldn't serve my goals.  

[13:45] <guifa> I'd like to have a drop in module that suddenly makes other calendar systems available but keep them compatible with everything else in Raku

[13:45] <guifa> DateTime::Timezones does that -- just add it and boom, all DateTimes in Raku are now fully timezone aware

[13:47] <discord-raku-bot> <Anton Antonov> @guifa I see. You need a suitable placeholder role in Datish or DateTime.

[13:48] <guifa> I think it's doable, but I'm not sure how it would interact with DateTime::Timezones.  I need to do some more experiments

[13:52] *** jpn joined
[13:54] *** Vyrus joined
[13:56] *** Vyrus left
[13:57] *** Vyrus joined
[13:59] <guifa> The nice thing is once I'm done, the formatting code only requires one tiny change 

[14:10] *** tea3po joined
[14:12] *** tea3po left
[14:12] *** tea3po joined
[14:13] *** teatwo left
[14:24] *** an3223 joined
[14:27] *** Vyrus left
[14:27] *** tea3po left
[14:27] *** Vyrus joined
[14:27] *** tea3po joined
[14:29] *** Vyrus left
[14:32] *** Vyrus joined
[14:34] *** Vyrus left
[14:35] *** Vyrus joined
[14:51] *** TieUpYourCamel left
[14:56] *** jpn left
[15:03] *** jpn joined
[15:03] *** TieUpYourCamel joined
[15:15] *** an3223 left
[15:36] *** MoC joined
[15:44] *** nort joined
[15:48] *** kylese joined
[16:07] *** Util joined
[16:13] <gfldex> guifa: If you got a standalone time-object (without a date part), how do you convert that to GPS-time (or any other universal time), if you don't know if it's a leap day?

[16:14] <gfldex> guifa: Also, how do you validate a time-object if you don't know if a leap second may pop up?

[16:17] *** jpn left
[16:21] *** jpn joined
[16:36] <guifa> gfldex: there wouldn't be a conversion to anything else, as it'd be date agnostic

[16:36] <discord-raku-bot> <Nemokosch> leap seconds have been suspended for a long enough time from what I know

[16:37] <discord-raku-bot> <Nemokosch> from IT point of view, it was super annoying for everyone

[16:44] *** Fritz joined
[16:49] *** kylese left
[16:50] <guifa> New leapseconds have been suspended for the time being -- basically so they can figure out what to do an avoid a Y2K thing when there's a negative one included (fwiw, the ubiquitous tz library already supports them. another reason to not roll your own especially when tz is crazy portable)

[16:50] <guifa> but you still have to deal with the current ones.  sort of like if they got rid of DST -- still gotta deal with the older times

[16:52] *** Fritz left
[16:59] *** MoC left
[17:20] *** Tirifto_ joined
[17:20] *** avuserow_ joined
[17:22] *** eseyman_ joined
[17:24] *** Tirifto left
[17:24] *** eseyman left
[17:24] *** avuserow left
[17:24] *** bd3i left
[17:27] *** bd3i joined
[17:32] *** MasterDuke joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:20] <discord-raku-bot> <Nemokosch> the older ones can be just listed. The Rakudo implementation does something to deal with them, even if I'm not completely sure it does "the right thing"

[18:23] *** jpn left
[18:56] *** sena_kun left
[18:56] *** sena_kun joined
[19:10] *** jpn joined
[19:24] *** ab5tract joined
[19:27] *** jpn left
[19:30] *** ab5tract left
[19:43] *** jpn joined
[19:53] *** jpn left
[20:41] *** Sgeo joined
[21:03] *** jpn joined
[21:26] *** squashable6 left
[21:27] *** squashable6 joined
[21:29] *** sena_kun left
[21:32] *** jpn left
[21:36] *** Fritz joined
[21:50] *** Fritz left
[22:04] *** jpn joined
[22:19] *** epony left
[22:21] *** jpn left
[23:24] *** shareable6 left
[23:24] *** squashable6 left
[23:24] *** statisfiable6 left
[23:24] *** committable6 left
[23:24] *** quotable6 left
[23:24] *** unicodable6 left
[23:24] *** sourceable6 left
[23:24] *** benchable6 left
[23:24] *** notable6 left
[23:24] *** bisectable6 left
[23:24] *** greppable6 left
[23:24] *** releasable6 left
[23:24] *** reportable6 left
[23:24] *** tellable6 left
[23:24] *** linkable6 left
[23:24] *** coverable6 left
[23:24] *** nativecallable6 left
[23:24] *** evalable6 left
[23:25] *** evalable6 joined
[23:25] *** releasable6 joined
[23:25] *** shareable6 joined
[23:25] *** tellable6 joined
[23:26] *** statisfiable6 joined
[23:26] *** benchable6 joined
[23:26] *** quotable6 joined
[23:26] *** nativecallable6 joined
[23:26] *** notable6 joined
[23:26] *** sourceable6 joined
[23:26] *** coverable6 joined
[23:26] *** linkable6 joined
[23:27] *** greppable6 joined
[23:27] *** committable6 joined
[23:27] *** bisectable6 joined
[23:27] *** unicodable6 joined
[23:27] *** squashable6 joined
[23:27] *** reportable6 joined
