[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:28] *** deferen joined
[01:28] *** evalable6 left
[01:28] *** linkable6 left
[01:30] *** m_athias left
[01:30] *** nine left
[01:30] *** evalable6 joined
[01:31] *** linkable6 joined
[01:31] *** nine joined
[01:32] *** m_athias joined
[01:36] *** derpydoo left
[01:45] *** rf joined
[01:48] *** MasterDuke left
[02:01] *** rf left
[02:06] *** RonaldR34g4m left
[02:10] *** Vyrus joined
[02:26] *** teatwo joined
[02:27] *** teatwo left
[02:29] *** teatime joined
[02:30] *** tea3po left
[02:36] *** teatime left
[02:36] *** teatime joined
[03:17] *** Maylay left
[03:27] *** vrurg left
[03:42] *** rf joined
[03:58] *** vrurg joined
[04:04] *** rf left
[04:30] <andinus> lizmat

[04:30] <andinus> ah sorry, meant to /query

[05:04] *** linkable6 left
[05:04] *** evalable6 left
[05:06] *** linkable6 joined
[05:06] *** evalable6 joined
[05:36] *** jpn joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:08] *** jpn left
[06:13] *** jpn joined
[07:00] *** elcaro left
[07:00] *** elcaro joined
[07:03] *** codesections1 joined
[07:04] *** codesections left
[07:04] *** codesections1 is now known as codesections

[07:06] *** jpn left
[07:09] *** codesections1 joined
[07:10] *** jpn joined
[07:10] *** codesections left
[07:10] *** codesections1 is now known as codesections

[07:13] *** abraxxa joined
[07:16] *** jpn left
[07:21] *** jpn joined
[07:26] *** jpn left
[07:30] *** jpn joined
[07:42] *** jpn left
[07:46] *** jpn joined
[07:50] *** jpn left
[07:54] *** ab5tract joined
[08:00] *** jpn joined
[08:05] *** jpn left
[08:12] *** dakkar joined
[08:34] *** sena_kun joined
[08:54] *** jpn joined
[08:59] *** jpn left
[08:59] *** Sgeo left
[09:32] *** sena_kun left
[09:41] <andinus> looks like rakudo on rockylinux repos is broken

[09:42] <andinus> rakudo is currently at v2023.02, moarvm and nqp are at v2023.05, (seems like moarvm, nqp package size has reduced quite a bit too)

[09:42] <lizmat> recently, like on 2023.06?  or longer alreay?

[09:43] <andinus> iirc until last month or so it was working, i upgraded a system today and rakudo fails

[09:43] <andinus> with Unhandled exception: Missing or wrong version of dependency 'gen/moar/stage2/MASTNodes.nqp' (from 'gen/moar/Pod.nqp')

[09:48] *** jpn joined
[09:53] *** jpn left
[10:04] *** crimsonred joined
[10:06] *** crimsonred left
[11:06] *** bloatable6 left
[11:06] *** committable6 left
[11:06] *** shareable6 left
[11:06] *** linkable6 left
[11:06] *** unicodable6 left
[11:06] *** coverable6 left
[11:06] *** evalable6 left
[11:06] *** benchable6 left
[11:06] *** notable6 left
[11:06] *** releasable6 left
[11:06] *** reportable6 left
[11:06] *** bisectable6 left
[11:06] *** greppable6 left
[11:06] *** statisfiable6 left
[11:06] *** squashable6 left
[11:07] *** unicodable6 joined
[11:07] *** coverable6 joined
[11:07] *** bisectable6 joined
[11:07] *** committable6 joined
[11:07] *** statisfiable6 joined
[11:07] *** squashable6 joined
[11:08] *** shareable6 joined
[11:08] *** reportable6 joined
[11:08] *** bloatable6 joined
[11:08] *** linkable6 joined
[11:08] *** evalable6 joined
[11:09] *** benchable6 joined
[11:09] *** notable6 joined
[11:09] *** greppable6 joined
[11:09] *** releasable6 joined
[11:18] *** merp left
[11:23] *** merp joined
[11:51] *** ab5tract left
[11:51] *** ab5tract joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:06] *** jpn joined
[12:13] *** jpn left
[12:15] *** Some-body_ joined
[12:15] *** DarthGandalf left
[12:18] *** Some-body_ is now known as DarthGandalf

[13:01] *** jpn joined
[13:06] *** jpn left
[13:11] *** vrurg left
[13:13] *** vrurg joined
[13:21] <tbrowder__> hi, looking for an opinion: given creation of a LOT of class objects, space and time wise, is it better to minimize attributes in favor of methods or vice versa?

[13:24] <tbrowder__> that is, for example, i can have either attribute z or method z that calculates z if needed.

[13:30] <tbrowder__> i think i'll favor fewer attrs and more methods.

[13:48] <lizmat> YMMV   really

[13:48] <lizmat> how expensive is the calculation?

[13:49] <lizmat> if you don't always need z, then calculating it (maybe only once and then store it in an attribute) would be more lazy  :-)

[13:54] *** Xliff joined
[13:54] *** Xliff left
[14:01] <vrurg> And the last lizmat statement is exactly where AttrX::Mooish shines. :p

[14:02] <lizmat> tbrowder_ ^^

[14:17] *** rf joined
[14:24] <rf> Morning folks

[14:24] <tellable6> 2023-06-27T16:52:04Z #raku <tonyo> rf: did that work for you?

[14:25] <rf> tonyo: lgtm

[14:25] *** xinming left
[14:26] *** teatime left
[14:26] *** teatime joined
[14:28] *** xinming joined
[14:38] *** dakkar left
[14:39] *** dakkar joined
[14:49] *** jpn joined
[14:54] *** jpn left
[14:54] *** Voldenet_ joined
[14:55] *** Voldenet left
[14:55] *** Voldenet_ is now known as Voldenet

[14:58] *** Maximus joined
[14:58] *** Sevalecan left
[14:58] *** Maximus is now known as Sevalecan

[15:37] *** Sgeo joined
[15:59] *** [Coke]_ joined
[16:00] <tonyo> tak

[16:01] *** [Coke] left
[16:31] *** jpn joined
[16:38] *** dakkar left
[16:41] *** jpn left
[16:45] *** abraxxa left
[17:00] *** bigdata joined
[17:21] *** amenonsen left
[17:21] *** amenonsen joined
[17:42] *** sena_kun joined
[17:49] *** Sgeo left
[17:49] *** jpn joined
[17:51] *** Sgeo joined
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:51] *** jpn left
[18:57] *** [Coke]_ is now known as [Coke]

[19:46] *** MitarashiDango[m joined
[19:46] <MitarashiDango[m> Is the directory specified in the checksum for Rakudo 2023.06 there intentionally? Its not consistent with previous releases. If it is, I'll need to update the asdf plugin for raku.

[19:49] *** bigdata left
[20:14] *** oodani left
[20:15] *** oodani joined
[20:15] *** jpn joined
[20:20] *** jpn left
[20:58] <Voldenet> tbrowder__: contrary to what people say (ymmv) I believe in never storing state that's not needed â€“ computations scale well on 128-core systems, but no kind of storage scales well

[20:59] <Voldenet> storing state in such cases is an optimization technique for specific use case only, but it shouldn't be go-to strategy by default ever

[21:02] <Voldenet> Even if returning a value allocates and JIT is not optimizing it anyhow at the moment, it might in the future and state will be a lot harder to optimize

[21:07] <Voldenet> not that I say to never use state, just use it only when it speeds up a piece of code by 50%

[21:07] <Voldenet> or something equally impressive

[21:20] *** evalable6 left
[21:20] *** linkable6 left
[21:22] *** evalable6 joined
[21:22] *** linkable6 joined
[21:34] *** sena_kun left
[21:37] <discord-raku-bot> <librasteve> tbrowder: I have found that lazy generation of classes is best - for example in Physics::Unit generating all 270 classes on start up was very slow ... so now I just make them when they are needed

[21:40] <discord-raku-bot> <librasteve> its here https://github.com/librasteve/raku-Physics-Unit/blob/main/lib/Physics/Unit.rakumod at about line 320

[21:42] *** jpn joined
[21:42] <lizmat> jdv MitarashiDango[m> has a question re checksum

[21:45] <discord-raku-bot> <librasteve> PS. I tried leveraging precomp but that route was a dead end - here is a blog post that hopefully illuminates the progress https://rakujourney.wordpress.com/2021/01/03/raku-performance-and-physicsunit/

[21:49] *** jpn left
[21:59] <Voldenet> if I remember correctly using postfix operators reloads the grammar on every new op :/

[22:01] <Voldenet> that's why I'm using methods instead of symbols even if syntax isn't as nice

[22:02] <lizmat> Voldenet: that's only true with compilation though, so anything precompiled doesn't have to do that

[22:02] <Voldenet> but then you end up needing to put everything in the module

[22:03] <Voldenet> it works, but it's not as low-maintenance as simply having one file

[22:03] <lizmat> afaik scripts are precompiled as well nowadays?

[22:49] *** linkable6 left
[22:49] *** evalable6 left
[22:49] *** linkable6 joined
[22:50] *** evalable6 joined
[22:51] *** ab5tract left
[22:52] *** ab5tract joined
[23:14] *** shmup left
[23:14] *** shmup joined
[23:38] *** squashable6 left
[23:40] *** squashable6 joined
[23:54] *** codesections left
[23:58] *** codesections joined
[23:59] *** xinming left
