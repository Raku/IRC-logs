[00:00] *** Manifest0 left
[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:41] <tbrowder__> .tell uzl[m] Briggs isn't interested. He doesn't mind following his TOC but interested parties would have to deal with his publisher.

[00:41] <tellable6> tbrowder__, I'll pass your message to uzl[m]

[01:02] *** Xliff joined
[01:02] <Xliff> \o

[01:02] <Xliff> Is there a way to use EVAL to declare a sub in the OUTER namespace?

[01:03] *** xinming left
[01:04] <gfldex> m: my &outer; { &outer = 'sub { say "hello Xliff" }'; }; outer();

[01:04] <camelia> rakudo-moar fac61c28e: OUTPUT: ¬´Type check failed in assignment to &outer; expected Callable but got Str ("sub \{ say \"hello ...)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:04] <gfldex> m: my &outer; { &outer = 'sub { say "hello Xliff" }'.EVAL; }; outer();

[01:04] <camelia> rakudo-moar fac61c28e: OUTPUT: ¬´hello Xliff‚ê§¬ª

[01:05] *** xinming joined
[01:05] <Xliff> gfldex++ # Thanks, mate!

[01:06] <gfldex> :)

[01:53] *** andydude joined
[01:53] *** andydude1 joined
[01:55] *** derpydoo joined
[01:57] *** andydude left
[02:19] *** teatime joined
[02:21] *** teatwo left
[02:21] *** tea3po left
[02:22] *** teatwo joined
[03:43] *** rf left
[03:54] *** kjp left
[03:54] *** kjp joined
[04:27] *** zara joined
[04:58] *** zara left
[05:35] *** MoC joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:30] <Xliff> bleah

[06:57] *** andydude1 left
[07:17] *** jpn joined
[07:22] *** jpn left
[07:36] *** jpn joined
[07:49] *** merp left
[07:50] *** jpn left
[07:50] *** merp joined
[08:00] *** jpn joined
[08:04] *** jpn left
[08:17] *** jpn joined
[08:31] *** jpn left
[08:33] *** jpn joined
[08:38] *** jpn left
[08:43] *** sena_kun joined
[09:21] *** jpn joined
[09:32] <Voldenet> Xliff: there's another way, very similar

[09:32] <Voldenet> m: my &outer; { '&outer = sub { say "hello Xliff" }'.EVAL; }; outer();

[09:32] <camelia> rakudo-moar fac61c28e: OUTPUT: ¬´hello Xliff‚ê§¬ª

[09:40] *** jpn left
[09:44] *** jpn joined
[10:23] *** Sgeo left
[10:59] *** derpydoo left
[11:21] *** jpn left
[11:27] <gfldex> TIL: `trusts` takes a Package too.

[11:27] <gfldex> ENODOC++; # :(

[11:28] <lizmat> what would that mean ?

[11:29] <lizmat> you can't inherit from a Package ?

[11:33] <gfldex> Blogpost incomming. :)

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:42] *** andydude joined
[12:42] *** andydude left
[13:22] *** MoC left
[13:50] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2023/05/21/most-trusting/

[14:00] *** kybr left
[14:00] *** kybr joined
[14:16] *** teatime left
[14:16] *** teatwo left
[14:23] <jdv> eval? say "foo"

[14:23] <jdv> !eval say "foo"

[14:23] <jdv> evalable6: say "foo"

[14:23] <evalable6> jdv, rakudo-moar 4b69dd51e: OUTPUT: ¬´foo‚ê§¬ª

[14:24] <jdv> bisectable6: say "foo"

[14:24] <bisectable6> jdv, Will bisect the whole range automagically because no endpoints were provided, hang tight

[14:24] <bisectable6> jdv, ¬¶6c (68 commits): ¬´foo‚ê§¬ª

[14:24] <bisectable6> jdv, Nothing to bisect!

[14:32] <tonyo> m: enum A <a b c>; for A.values -> $v { say $v ~~ a; }; # tbrowder__ 

[14:32] <camelia> rakudo-moar fac61c28e: OUTPUT: ¬´True‚ê§False‚ê§False‚ê§¬ª

[14:56] <Xliff> \o

[14:56] <Xliff> Can someone explain to me how I can use --doc?

[15:03] <Xliff> gfldex: Why is infix:</> just a class in your blog post. I would figure that would contain much of what is in sub speed() 

[15:04] <gfldex> It's just there to construct the new unit.

[15:06] <gfldex> inspiration for this blogpost: https://www.youtube.com/watch?v=MAGdU-G5OZg

[15:09] <avuserow> Xliff: raku --doc MyFile.rakumod # convert to plain text and dump to the terminal

[15:10] <avuserow> you can also do `raku --doc=Markdown MyFile.rakumod` and it will use Pod::To::Markdown and print to the terminal, assuming you have that module installed

[15:16] *** rf joined
[15:33] *** MoC joined
[15:43] <tbrowder__> tonyo: thnx!

[15:48] *** andydude joined
[15:57] *** Xliff left
[16:05] *** Manifest0 joined
[16:13] <rf> Morning folks

[16:44] <guifa> o/

[17:17] <discord-raku-bot> <Anton Antonov> @guifa You recently gave some advice about building grammars, here, in this IRC. Do you have your advice consolidated in an article or  presentation?

[17:18] <guifa> Not on grammars.  I think my tl;dr advice is small to big on grammars, big to small on actions

[17:20] <guifa> Also, always ensure you consume at least *something* lol

[17:21] <discord-raku-bot> <Anton Antonov> Ok. I think you said also to start with tokens.

[17:22] <guifa> yeah.  rules and such can be useful, but I think they can cause some more trouble than they're worth when learning

[17:26] <discord-raku-bot> <Anton Antonov> üëç

[17:34] *** Sgeo joined
[17:51] *** andydude left
[17:58] *** andydude joined
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:21] <discord-raku-bot> <librasteve> https://github.com/librasteve/raku-Physics-Unit/issues/20

[18:39] <discord-raku-bot> <Anton Antonov> Does anyone here got access to Bard's API -- i.e. PalLM API ?

[18:41] *** tobs left
[18:50] *** tobs joined
[18:57] *** tobs left
[18:57] *** tobs joined
[18:59] *** andydude left
[19:12] <leont>  I've been meaning to write a Slang to add binary literals, but given the RakuAst transition it may be easier to wait for that? Or maybe I should add it to the code grammar instead?

[19:22] <tbrowder__> .tell uzl[m]  I emailed JJ and he said, quote, "You can copy anything you want, it's got a Cc license, so as long as you mention the original, we're good." End quote. Then he said, quote, "...So just go ahead and fork the repo. I'll try to help when possible." End quote.

[19:22] <tellable6> tbrowder__, I'll pass your message to uzl[m]

[19:24] *** Xliff joined
[19:24] <Xliff> \o

[19:24] <Xliff> What exception emits a "Malformed UTF bytes" message, and why is that fatal?

[19:43] <discord-raku-bot> <Anton Antonov> @leont I would say it is always better to have a separate grammar, and then related slangs, or ASTs, or whatever.

[20:14] *** jpn joined
[20:20] *** jpn left
[20:28] *** blue-coffee joined
[20:39] *** blue-coffee left
[20:42] <vrurg> Xliff: it's thrown by the backend. I'm not familiar with UTF guts to know why is it fatal. But it feels like a legitimate outcome for a broken UTF string.

[21:33] *** MoC left
[22:05] *** jpn joined
[22:09] *** jpn left
[22:13] *** sena_kun left
[22:21] <Xliff> OK. I have a proto sub MAIN defined in a module. I'd like to load this module like so "use My::Module <parameter-to-proto-main>".

[22:22] <Xliff> Is there a way I can pass the string "parameter-to-proto-main to the proto sub MAIN before it executes the MAIN in the script that uses My::Module?

[22:23] <Xliff> I've tried some excercises with sub EXPORT, but then the script doesn't load the proto.

[22:57] *** TieUpYourCamel left
[22:57] *** andydude joined
[23:20] *** Xliff left
[23:24] *** Manifest0 left
[23:30] *** andydude left
[23:53] *** jpn joined
[23:58] *** jpn left
