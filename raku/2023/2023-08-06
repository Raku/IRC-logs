[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:58] *** ab5tract joined
[00:58] *** razetime joined
[01:16] *** teatwo left
[01:16] *** teatime joined
[01:50] *** bigdata joined
[02:44] *** teatime left
[02:44] *** teatime joined
[02:49] *** jpn joined
[02:53] *** jpn left
[03:00] *** razetime left
[03:12] *** razetime joined
[03:23] *** oodani left
[03:24] *** oodani joined
[03:32] *** razetime left
[03:47] *** razetime joined
[03:52] *** bigdata left
[04:44] *** jpn joined
[04:49] *** jpn left
[05:32] *** siavash joined
[05:46] <xinming> Is there a existing script uses multi processes to manage Proc::Async?

[05:46] <xinming> Hmm, What I mean is, I want to script several Proc::Async, and wait for them to proceed, When one of Proc finished, I start another.

[05:48] <teatime> doesn't sound very async :)

[05:48] <xinming> Before I've written this kind of script once, But I had a disk failure, I lost it, So start to be clueless on how I need to sort this out again. :-(

[05:48] <teatime> jk

[05:48] <xinming> :-)

[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[06:20] *** razetime left
[06:21] *** razetime joined
[06:22] *** jpn joined
[07:09] *** siavash2 joined
[07:12] *** siavash left
[07:20] *** razetime left
[07:25] <xinming> Is there a statement where we can run the script, and break at some point, so I can test some vars?

[07:30] *** siavash2 left
[07:36] *** siavash joined
[07:51] *** sena_kun joined
[08:14] *** teatwo joined
[08:17] *** teatime left
[08:21] *** jpn left
[08:25] <xinming> m: my @c = (0..3).map({Channel.new}); my $p = start { react whenever @c.map(*.receive) { .raku.say } }; @c[1].send("hello"); await $p;

[08:26] <xinming> In this example, with @c[0].send("hello");  it worked fine.

[08:26] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «(timeout)»

[08:26] <xinming> Is it possible to monitor an array of channel?

[08:27] <xinming> m: my @c = (0..3).map({Channel.new}); my $p = start { react { for @c { whenever .receive { .raku.say; } } }; @c[1].send("hello"); await $p;

[08:27] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> y; } } }; @c[1].send("hello"); await $p;⏏<EOL>␤»

[08:29] <xinming> m:  my @c = (0..3).map({Channel.new}); my $p = start { react do { for @c { whenever $_ { .raku.say } } } }; @c[3].send("hello"); await $p;     # <--- This version worked as expected, But wish something more sweet, Something like, react whenever any(@c) { ... }

[08:29] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «(timeout)"hello"␤»

[08:38] *** MoC joined
[09:06] *** teatwo left
[09:06] *** teatwo joined
[09:24] *** teatwo left
[09:24] *** teatwo joined
[09:27] *** jpn joined
[09:54] *** NemokoschKiwi joined
[09:58] *** NemokoschKiwi left
[10:24] *** Sgeo left
[10:29] *** jpn left
[10:33] *** jpn joined
[10:45] *** jpn left
[11:11] *** ab5tract left
[11:50] *** ab5tract joined
[12:00] *** reportable6 left
[12:02] *** reportable6 joined
[12:08] *** sena_kun left
[12:13] *** ab5tract left
[12:32] <discord-raku-bot> <antononcube> @xinming I am not sure is this going to be an useful answer — if you use Comma you can put breakpoints in your Raku programs / scripts.

[12:40] *** ab5tract joined
[12:41] <gfldex> m: my $var = 42; for ^10000 { repl if $_ > 1000 };

[12:41] <gfldex> xinming: ^^^

[12:41] *** jpn joined
[12:41] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «(timeout)You may want to `zef install Readline`, `zef install Linenoise`, or `zef install Terminal::LineEditor` or use rlwrap for a line editor␤␤Type 'exit' to leave␤[0] > ===SORRY!=== Error while compiling <tmp>␤Missing infix inside hyp…»

[12:46] *** jpn left
[12:57] <xinming> gfldex: Thanks. repl is what I want.

[12:57] <xinming> I'll search doc for what repl mean.

[12:58] <xinming> antononcube, will check Comma module anyway.

[13:01] <discord-raku-bot> <antononcube> @xinming Comma is an Integrated Development Environment (IDE) based on IntelliJ. There is a payed version and (free) community version. There are also Comma plugins for IntelliJ. I am not sure do the community versions allow debugging. (I think that is integral part of IntelliJ, but I have not verified it…)

[13:03] *** ab5tract left
[13:16] <xinming> antononcube, Ok, then I'll stick with vim. :-)

[13:17] <discord-raku-bot> <antononcube> Agh — another vim-er!!!

[13:17] <xinming> old emacs'er

[13:17] <discord-raku-bot> <antononcube> Who? 🙂

[13:18] <discord-raku-bot> <antononcube> I am old enough, I guess, and fan of Emacs, so I qualify,

[13:18] <xinming> I used call myself emacs'er, I just realized I haven't use emacs for over 5+ years.

[13:23] <xinming> m: my $a = "world"; my @a = |<<hello $a>>; @a.raku.say;

[13:23] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Malformed postfix␤at <tmp>:1␤------> my $a = "world"; my @a = |<<hello $a>>⏏; @a.raku.say;␤    expecting any of:␤        postfix␤»

[13:23] <xinming> Is this a bug?

[13:23] <xinming> |<a b>   works,  But |<<a $b>> fails

[13:27] <discord-raku-bot> <antononcube> Currently, I only use Emacs with/for Org-mode. I rarely use it for anything else. Org-mode, though, is a “killer feature” and integrates well with Babel. That is why “Text::CodeProcessing” can be used over Org-mode files. I.e. we can do Literate programming with Raku via Org-mode (and Babel) files.

[13:30] <discord-raku-bot> <antononcube> I have been trying to figure out how to get and use ZMQ in Emacs. Using ZMQ interactive Raku with Org-mode (and Babel) we can have an Emacs “notebook solution” similar to “Jupyter::Kernel” and “RakuMode” (in Mathematica.)

[13:35] *** razetime joined
[13:39] <discord-raku-bot> <antononcube> * […] ”Using ZMQ to interact Raku with Org-mode …”

[14:10] *** siavash left
[14:18] *** jpn joined
[14:20] <discord-raku-bot> <nemokosch> the error message is horrible for sure

[14:20] <discord-raku-bot> <nemokosch> tells you exactly nothing, besides vaguely hinting that a syntax error happened

[14:23] *** jpn left
[14:26] <discord-raku-bot> <nemokosch> anyway, it seems that it parses as |<<hello (hyper operator applied to whatever hello resolves to), followed by $a>> where an operator should finish the hyper operator up

[14:26] <discord-raku-bot> <nemokosch> the same problem doesn't arise with |< which has no operator-like meaning

[14:27] <discord-raku-bot> <nemokosch> $<foo bar> bothers me more tbh

[14:28] <discord-raku-bot> <nemokosch> m: dd $[0, 1]; dd $<foo bar>;

[14:28] <discord-raku-bot> <Raku eval>  $[0, 1] (Nil, Nil) 

[14:28] <discord-raku-bot> <nemokosch> because it performed key lookup on the match variable $/

[14:29] <discord-raku-bot> <nemokosch> I for one would ban these dangling abstractions and mandate parens

[14:30] <discord-raku-bot> <nemokosch> it's impossible to know what the user meant so do-what-i-mean will be half of the time do-something-i-didn't-even-have-in-mind

[14:48] <xinming> m: my @a = |<a b>; @a.raku.say;

[14:48] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «["a", "b"]␤»

[14:48] <xinming> m: my @a = |<<a b>>; @a.raku.say;

[14:48] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Malformed postfix␤at <tmp>:1␤------> my @a = |<<a b>>⏏; @a.raku.say;␤    expecting any of:␤        argument list␤        postfix␤»

[14:49] <xinming> I think we have some bugs in parsers to deal with << >>

[14:51] <discord-raku-bot> <nemokosch> I explained the situation, didn't I?

[14:55] <xinming> nemokosch, You do :-)

[15:17] *** razetime left
[15:42] <discord-raku-bot> <nemokosch> I wonder

[15:43] <discord-raku-bot> <nemokosch> can we drop the "archive" part of raku.org?

[15:43] <discord-raku-bot> <nemokosch> https://raku.org/archive

[15:43] <discord-raku-bot> <nemokosch> https://github.com/Raku/raku.org/tree/master/source/archive there are loads of files here but where do they even appear?

[15:44] <discord-raku-bot> <nemokosch> if you write the paths explicitly, you will hit some pages eventually, but much more broken links

[15:51] <Geth> ¦ raku.org: 4d4884e120 | (Elizabeth Mattijsen)++ | 2478 files

[15:51] <Geth> ¦ raku.org: Moved the archive to a non-accessible place

[15:51] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/commit/4d4884e120

[15:51] <lizmat> nemokosch ^^

[15:55] *** eseyman left
[15:56] *** manu_ joined
[15:57] *** manu_ is now known as eseyman

[15:58] <discord-raku-bot> <nemokosch> great, thank you, less things to (un)break

[15:58] <lizmat> yup

[15:58] <lizmat> git mv is your friend   :-)

[16:05] *** jpn joined
[16:11] *** jpn left
[16:29] *** PolarBearXL joined
[16:31] <PolarBearXL> How to get 0.37 without using EVAL?    raku -e 'say "㊲".comb(/<:N>+/).EVAL/100 '

[16:35] <ugexe> m: say ㊲.Int

[16:35] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «37␤»

[16:36] <ugexe> m: say ㊲.Int / 100

[16:36] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «0.37␤»

[16:36] <ugexe> m: say ㊲ / 100

[16:36] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «0.37␤»

[16:37] <lizmat> m: say ㊲.^name

[16:37] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «Int␤»

[16:37] <lizmat> m: dd ㊲.Str

[16:37] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «"37"␤»

[16:37] <lizmat> hmmm..  wonder if we should make allomorphs of these

[16:38] <ugexe> m: say unival("㊲") / 100

[16:38] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «0.37␤»

[16:38] <lizmat> so they'd stringify back to ㊲

[16:38] <ugexe> I dunno if making anything else allmorphs is good or not

[16:45] <PolarBearXL>   .unival  (!)   thanks!

[16:46] <discord-raku-bot> <nemokosch> I dunno if anything about allomorphs is good or not 😛

[16:47] <discord-raku-bot> <nemokosch> m: my Int() $not-five = <5>; say $not-five.Int === $not-five;

[16:47] <discord-raku-bot> <Raku eval>  False 

[16:48] <discord-raku-bot> <nemokosch> oh right, Int() is probably not even needed

[16:48] <discord-raku-bot> <nemokosch> m: my Int $not-five = <5>; say $not-five.Int === $not-five;

[16:48] <discord-raku-bot> <Raku eval>  False 

[16:48] <discord-raku-bot> <nemokosch> dang

[17:15] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2023/08/06/parenthood/

[17:15] <PolarBearXL> m: "③ ③ bottles" ~~ m:g/<:N>+/

[17:15] <camelia> rakudo-moar a4a2bbd24: ( no output )

[17:15] <PolarBearXL> m: say "③ ③ bottles" ~~ m:g/<:N>+/

[17:15] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «(｢③｣ ｢③｣)␤»

[17:16] <PolarBearXL> m: say "33 bottles" ~~ m:g/<:N>+/

[17:16] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «(｢33｣)␤»

[17:18] *** jpn joined
[17:23] *** jpn left
[17:24] <PolarBearXL> m: say "③③ bottles" ~~ m:g/<:N>+/

[17:24] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «(｢③③｣)␤»

[17:26] *** PolarBearXL left
[17:32] <ugexe> m: say "③" ~~ m:g/\d+/

[17:32] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «()␤»

[17:32] <ugexe> m: say ③ ~~ m:g/\d+/

[17:32] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «(｢3｣)␤»

[17:32] <ugexe> that seems kind of odd

[17:33] <ugexe> m: say ③.Str ~~ m:g/\d+/

[17:33] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «(｢3｣)␤»

[17:33] <ugexe> i wonder why the first and third example differ

[17:36] *** Sgeo joined
[17:43] <lizmat> strange indeed

[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:12] *** sena_kun joined
[18:19] <discord-raku-bot> <nemokosch> is \d for Nd?

[18:20] <discord-raku-bot> <nemokosch> in that case, it's another "Unicode bug"

[18:21] <discord-raku-bot> <nemokosch> m: '③'.uniprops.say

[18:21] <discord-raku-bot> <Raku eval>  (No) 

[18:21] <discord-raku-bot> <nemokosch> it's not Nd

[18:50] *** jpn joined
[18:55] *** jpn left
[19:18] *** jpn joined
[19:19] *** AntonOks joined
[19:26] *** Tirifto left
[19:27] *** jpn left
[19:28] *** Tirifto joined
[19:53] *** AntonOks left
[20:03] <gfldex> m: say ‘③’.succ;

[20:03] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «④␤»

[20:04] <gfldex> m: say ‘⓪’.succ;

[20:04] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «⓪␤»

[20:04] <gfldex> m: say ‘①’.pred;

[20:04] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «Decrement out of range␤  in block <unit> at <tmp> line 1␤␤»

[20:05] <gfldex> Is this a Unicodebug or Rakudobug?

[20:10] <gfldex> m: say (‘①’ .. ‘㊿’).join;

[20:10] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇⒈⒉⒊⒋⒌⒍⒎⒏⒐⒑⒒⒓⒔⒕⒖⒗⒘⒙⒚⒛⒜⒝⒞⒟⒠⒡⒢⒣⒤⒥⒦⒧⒨⒩⒪⒫⒬⒭⒮⒯⒰⒱⒲…»

[20:10] <gfldex> :-/

[20:14] *** tea3po joined
[20:18] *** teatwo left
[20:24] *** teatwo joined
[20:25] <discord-raku-bot> <nemokosch> hmmm

[20:25] <discord-raku-bot> <nemokosch> m:  ‘⓪’.Int.say

[20:25] <discord-raku-bot> <Raku eval>  Exit code: 1 Cannot convert string to number: base-10 number must begin with valid digits or '.' in '⏏⓪' (indicated by ⏏)   in block <unit> at main.raku line 1  

[20:25] <discord-raku-bot> <nemokosch> dammit

[20:25] <discord-raku-bot> <nemokosch> m: say ‘①’.Int.say;

[20:25] <discord-raku-bot> <Raku eval>  Exit code: 1 Cannot convert string to number: base-10 number must begin with valid digits or '.' in '⏏①' (indicated by ⏏)   in block <unit> at main.raku line 1  

[20:26] <discord-raku-bot> <nemokosch> clueless

[20:27] *** tea3po left
[20:28] *** teatime joined
[20:30] *** teatwo left
[20:48] *** MoC left
[20:56] *** jpn joined
[21:04] *** jpn left
[21:26] <discord-raku-bot> <nemokosch> xinming: maybe | <<Hello $asd>> would work, with the space?

[21:33] <lizmat> m: say ‘①’.pred;   # this is not a rakudo bug, but a rakudo feature

[21:33] <camelia> rakudo-moar a4a2bbd24: OUTPUT: «Decrement out of range␤  in block <unit> at <tmp> line 1␤␤»

[21:35] <lizmat> gfldex: https://github.com/rakudo/rakudo/blob/main/src/core.c/Rakudo/Internals.pm6#L1512-L1530

[21:36] <lizmat> aka: https://github.com/rakudo/rakudo/blob/main/tools/build/makeMAGIC_INC_DEC.raku

[21:38] <discord-raku-bot> <nemokosch> makeMAGIC

[21:40] *** euandreh joined
[21:49] <discord-raku-bot> <antononcube> @Nemokosh I am making some LLM magic right now. 😎

[21:54] <discord-raku-bot> <nemokosch> why don't you visit us in the Raku-study meeting? 😛

[21:55] *** jpn joined
[21:59] *** jpn left
[22:02] <discord-raku-bot> <antononcube> Agh... I forget about it ! When I see the announcements for it I always have the intentions to attend (or troll...)

[22:03] <discord-raku-bot> <antononcube> weekly:https://rakuforprediction.wordpress.com/2023/08/06/number-guessing-games-palm-vs-chatgpt/

[22:05] <discord-raku-bot> <nemokosch> still doesn't work via the bridge I think

[22:06] <discord-raku-bot> <antononcube> Damn! (And thanks for pointing it out.)

[22:13] <discord-raku-bot> <nemokosch> you can still check some weekly challenges 😂 ^^

[22:17] <discord-raku-bot> <antononcube> That is good idea, maybe. But that seems "waste of time" for me. (Since, I have a fair amount of packages to develop and document.)

[22:17] <discord-raku-bot> <antononcube> I realize it is somewhat myopic point of view.

[22:18] <discord-raku-bot> <nemokosch> It's okay

[22:18] <discord-raku-bot> <nemokosch> I think the early stages might be more interesting for you anyway

[22:28] *** jgaz left
[22:30] *** jgaz joined
[22:30] <discord-raku-bot> <antononcube> I see.

[22:32] *** ab5tract joined
[22:37] *** sena_kun left
[23:00] *** jpn joined
[23:05] *** jpn left
