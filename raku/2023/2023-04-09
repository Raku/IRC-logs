[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:16] <guifa> Right: but all that happens when you add a new leapsecond is push one more element onto an array (technically, either one element to two, or two elements to one: both the moment of the leapsecond and how much of an offset from TAI UTC will be.

[00:17] *** jpn joined
[00:17] <guifa> It's kind of funny that in removing the leapsecond, they're really just delaying something potentially worse: a leap minute (that's one of the proposals)

[00:18] <guifa> It'd happen less often but systems are already set up with leapseconds.  Leap minute would be horrendous

[00:19] <guifa> (I mean, the tz library could handle it, it'd just jump the offset 60 seconds, but if we go 100 years before we make a change, there's likely gonna be tons of software made with bad assumptions)

[00:22] *** jpn left
[00:59] *** tea3po left
[01:01] *** teatime joined
[01:03] *** xinming left
[01:05] *** xinming joined
[01:32] *** gcd left
[01:35] *** razetime joined
[01:47] *** razetime left
[01:47] *** razetime joined
[02:10] *** teatime left
[02:10] *** teatime joined
[02:11] *** razetime left
[02:22] *** epony joined
[02:30] *** gcd joined
[02:39] *** MasterDuke left
[02:40] <tonyo> .

[02:40] <tellable6> 2023-04-08T13:11:34Z #raku <Xliff> tonyo No worries. Thanks for your efforts!

[02:55] *** teatime left
[02:56] *** teatime joined
[02:58] *** teatime left
[02:58] *** teatime joined
[02:59] *** MasterDuke joined
[03:10] *** MasterDuke left
[03:30] *** razetime joined
[03:56] *** MasterDuke joined
[04:02] *** razetime left
[04:02] *** razetime joined
[04:07] *** razetime left
[05:07] *** squashable6 left
[05:07] *** unicodable6 left
[05:07] *** linkable6 left
[05:07] *** releasable6 left
[05:07] *** statisfiable6 left
[05:07] *** quotable6 left
[05:07] *** nativecallable6 left
[05:07] *** evalable6 left
[05:07] *** coverable6 left
[05:07] *** statisfiable6 joined
[05:08] *** evalable6 joined
[05:09] *** squashable6 joined
[05:09] *** quotable6 joined
[05:09] *** coverable6 joined
[05:09] *** nativecallable6 joined
[05:09] *** unicodable6 joined
[05:09] *** releasable6 joined
[05:10] *** linkable6 joined
[05:42] *** razetime joined
[05:50] *** holyghost joined
[05:53] *** razetime left
[06:00] *** holyghost left
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:08] *** holyghost joined
[06:09] *** holyghost left
[06:36] *** jpn joined
[06:43] *** jpn left
[07:00] *** jpn joined
[07:15] *** holyghost joined
[07:21] *** jpn left
[07:22] *** holyghost left
[07:25] *** jpn joined
[07:59] *** abraxxa-home joined
[08:01] *** abraxxa-home left
[08:02] *** holyghost joined
[08:02] *** abraxxa-home joined
[08:05] *** razetime joined
[08:05] *** holyghost left
[08:09] *** razetime left
[08:50] *** sena_kun joined
[08:50] *** jpn left
[08:57] *** jpn joined
[09:09] *** jpn left
[09:21] <discord-raku-bot> <Nemokosch> Yes well, it's all a matter of using time well. I would think the main problem with leap-whatever-they-are-going-to-use is that it's nondeterministic

[09:22] *** holyghost joined
[09:22] <discord-raku-bot> <Nemokosch> Doing it less often, well, I'd think should help somewhat, even if it doesn't address the general problem

[09:51] *** Sgeo left
[10:03] *** epony left
[10:14] *** kylese joined
[10:14] *** holyghost left
[10:23] *** abraxxa-home left
[10:37] *** holyghost joined
[10:39] *** holyghost left
[11:39] *** reportable6 left
[11:39] *** nativecallable6 left
[11:39] *** committable6 left
[11:39] *** linkable6 left
[11:39] *** greppable6 left
[11:39] *** sourceable6 left
[11:39] *** bisectable6 left
[11:39] *** quotable6 left
[11:39] *** bloatable6 left
[11:39] *** shareable6 left
[11:39] *** tellable6 left
[11:39] *** benchable6 left
[11:39] *** notable6 left
[11:39] *** squashable6 left
[11:39] *** unicodable6 left
[11:39] *** releasable6 left
[11:40] *** notable6 joined
[11:40] *** unicodable6 joined
[11:40] *** benchable6 joined
[11:40] *** linkable6 joined
[11:40] *** tellable6 joined
[11:40] *** nativecallable6 joined
[11:41] *** bloatable6 joined
[11:41] *** bisectable6 joined
[11:41] *** squashable6 joined
[11:41] *** shareable6 joined
[11:41] *** sourceable6 joined
[11:42] *** quotable6 joined
[11:42] *** committable6 joined
[11:42] *** releasable6 joined
[11:42] *** greppable6 joined
[11:42] *** reportable6 joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:30] *** codesections left
[12:30] *** codesections1 joined
[12:32] *** codesections1 is now known as codesections

[12:40] *** kylese left
[13:40] *** committable6 left
[13:40] *** benchable6 left
[13:40] *** greppable6 left
[13:40] *** releasable6 left
[13:40] *** coverable6 left
[13:40] *** reportable6 left
[13:41] *** committable6 joined
[13:42] *** benchable6 joined
[13:42] *** releasable6 joined
[13:42] *** reportable6 joined
[13:43] *** greppable6 joined
[13:43] *** coverable6 joined
[13:49] *** holyghost joined
[13:54] *** epony joined
[13:58] *** tejr left
[13:58] *** tejr joined
[14:02] *** tejr left
[14:10] *** teatime left
[14:10] *** teatime joined
[14:28] *** holyghost left
[14:34] *** teatwo joined
[14:38] *** teatime left
[14:43] *** jpn joined
[14:58] *** tejr joined
[15:11] *** jpn left
[15:12] *** epony left
[15:12] *** holyghost joined
[15:17] *** holyghost left
[15:19] *** epony joined
[15:30] <guifa> I feel like this is a LTA: `Type check failed in binding to parameter '$address'; expected Str but got Any (Any)` when importing a module?  I just had a typo in the module name

[15:39] *** jpn joined
[15:41] *** epony left
[15:44] *** jpn left
[15:49] *** ProperNoun left
[15:50] *** ProperNoun joined
[16:50] *** evalable6 left
[16:50] *** linkable6 left
[16:51] *** evalable6 joined
[16:51] *** Sauvin left
[16:52] *** Sauvin joined
[16:53] *** linkable6 joined
[17:07] *** jpn joined
[17:11] *** jpn left
[17:24] <discord-raku-bot> <Nemokosch> In the module name? ðŸ¤”

[17:25] <discord-raku-bot> <Nemokosch> Wouldn't that throw something like "I looked on the following places and couldn't find this module"?

[17:59] <guifa> One would think

[17:59] <guifa> I THINK the issue might lurk in the fact that one module was call

[17:59] <guifa> Foo::Bar

[17:59] <guifa> and the typoed one was Foo::bar

[17:59] <guifa> which from Raku's perspective are different, but from my file system's perspect are the same

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[19:25] *** tea3po joined
[19:27] *** teatime joined
[19:28] *** teatwo left
[19:29] *** teatwo joined
[19:30] *** tea3po left
[19:31] *** teatime left
[19:34] *** tea3po joined
[19:36] *** teatime joined
[19:36] *** Sgeo joined
[19:37] *** teatwo left
[19:39] *** tea3po left
[20:05] *** svragv left
[20:24] *** fritz joined
[20:30] *** fritz left
[20:48] *** squashable6 left
[20:50] *** squashable6 joined
[21:04] *** jpn joined
[21:15] *** sena_kun left
[22:11] *** bigdata joined
[22:30] *** jpn left
[22:35] *** bigdata left
[23:08] *** jgaz joined
[23:14] *** euandreh left
[23:18] *** euandreh joined
[23:21] *** euandreh left
[23:22] *** euandreh joined
[23:24] *** euandreh left
[23:27] *** euandreh joined
[23:42] <discord-raku-bot> <Rog> How would I phrase a typed Array literal? I need something that's specifically Positional[Str] so later typechecking can work

[23:43] <discord-raku-bot> <Rog> But I'm creating N of said Arrays so assigning into a typed container seems impossible - or maybe not?

[23:43] <discord-raku-bot> <Rog> Actually, hm, perhaps I've rubber-duckied myself into a solutin

[23:45] <discord-raku-bot> <Rog> Ah, damn, nevermind. That ends up being the same object for all of them

[23:47] <discord-raku-bot> <Rog> To give context, I have an expression like <a b c> Z=> [] xx * and I want [] to explicitly be Positional[Str]

[23:57] *** epony joined
