[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:04] *** andydude left
[00:30] *** whatnext joined
[01:01] *** whatnext left
[01:01] *** andydude joined
[01:05] <japhb> tbrowder__: So I went and ran it with Rakudo 2023.06, and everything seems to work *except* that .raku/EVAL seems to just go walking off into the weeds.  Comment that "codec" out of the list, and it runs to completion just fine.

[01:05] <japhb> Which is ... embarassing, really.

[01:39] <japhb> More testing: it's not .raku, it's EVAL that's going off the rails.

[01:40] <tbrowder__> ok, readme works for me, thanks

[01:44] <japhb> Yup, .raku is even competitive for several of the tests.  Now to figure out if there are particular tests that EVAL falls over on ....

[01:44] <japhb> tbrowder__: Ah good.

[01:47] <discord-raku-bot> <antononcube> Damn! I was just about a list a few of my tests of my code-of-conduct adherence classifier...

[01:48] *** pony joined
[01:57] <japhb> Well that seems suboptimal: "Bytecode validation error at offset 54, instruction 9: register operand index 54 out of range 0..3"

[02:00] <japhb> OK, so it seems EVAL has trouble with the JSON-structured data test and the buf8 test.

[02:10] <discord-raku-bot> <antononcube> "[...] Sawyer X's talk should be obligatory viewing for everyone. [...]" -- I agree with @gfldex the talk is somewhat boring. I watched it in full, but with 1.25 playback speed-up.

[02:10] <pony> talk about what?

[02:11] <discord-raku-bot> <antononcube> @pony The talk was linked / posted above by @guifa. See https://youtu.be/Q1H9yKf8BI0 .

[02:11] <pony> thanks, I just joined the channel so I couldn't see it

[02:12] <discord-raku-bot> <antononcube> Well, it is not a fun topic. Talk's title is "No One is Immune to Abuse".

[02:13] <pony> still, an important one

[02:15] <discord-raku-bot> <antononcube> @pony Hmm... it seems I have heard or seen that kind of "preaching" before. Important or not, it is somewhat boring.

[02:15] <pony> ok

[02:16] *** razetime joined
[02:17] <discord-raku-bot> <antononcube> @pony Damn! I thought you would argue!!

[02:17] <pony> hehe

[02:21] *** squashable6 left
[02:24] *** squashable6 joined
[02:26] <discord-raku-bot> <antononcube> I know how to make that talk interesting -- I can make a Raku script that 1) gets the transcript from the video, 2) gets a moderation score for each deemed offensive statement.

[03:24] *** evalable6 left
[03:24] *** linkable6 left
[03:26] *** linkable6 joined
[03:26] *** evalable6 joined
[03:37] *** andinus joined
[03:47] *** razetime left
[04:36] *** razetime joined
[04:42] *** razetime left
[05:42] *** evalable6 left
[05:42] *** quotable6 left
[05:42] *** reportable6 left
[05:42] *** linkable6 left
[05:42] *** shareable6 left
[05:42] *** coverable6 left
[05:42] *** greppable6 left
[05:42] *** bisectable6 left
[05:42] *** squashable6 left
[05:42] *** benchable6 left
[05:42] *** tellable6 left
[05:42] *** bloatable6 left
[05:42] *** nativecallable6 left
[05:42] *** sourceable6 left
[05:42] *** statisfiable6 left
[05:42] *** releasable6 left
[05:42] *** unicodable6 left
[05:42] *** notable6 left
[05:42] *** committable6 left
[05:42] *** benchable6 joined
[05:42] *** releasable6 joined
[05:42] *** committable6 joined
[05:42] *** greppable6 joined
[05:42] *** statisfiable6 joined
[05:43] *** tellable6 joined
[05:43] *** bloatable6 joined
[05:43] *** coverable6 joined
[05:43] *** notable6 joined
[05:43] *** unicodable6 joined
[05:44] *** squashable6 joined
[05:44] *** sourceable6 joined
[05:44] *** linkable6 joined
[05:44] *** shareable6 joined
[05:44] *** reportable6 joined
[05:44] *** bisectable6 joined
[05:44] *** quotable6 joined
[05:45] *** nativecallable6 joined
[05:45] *** evalable6 joined
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[06:12] *** siavash joined
[07:12] *** committable6 left
[07:12] *** tellable6 left
[07:12] *** greppable6 left
[07:12] *** notable6 left
[07:12] *** unicodable6 left
[07:12] *** statisfiable6 left
[07:12] *** evalable6 left
[07:12] *** releasable6 left
[07:12] *** reportable6 left
[07:12] *** nativecallable6 left
[07:12] *** quotable6 left
[07:12] *** bloatable6 left
[07:12] *** linkable6 left
[07:12] *** benchable6 left
[07:12] *** bisectable6 left
[07:12] *** shareable6 left
[07:12] *** coverable6 left
[07:12] *** sourceable6 left
[07:12] *** squashable6 left
[07:12] *** greppable6 joined
[07:13] *** shareable6 joined
[07:13] *** squashable6 joined
[07:13] *** unicodable6 joined
[07:13] *** nativecallable6 joined
[07:13] *** statisfiable6 joined
[07:13] *** evalable6 joined
[07:13] *** sourceable6 joined
[07:13] *** bloatable6 joined
[07:13] *** andydude left
[07:13] *** coverable6 joined
[07:13] *** linkable6 joined
[07:14] *** notable6 joined
[07:14] *** quotable6 joined
[07:14] *** reportable6 joined
[07:14] *** bisectable6 joined
[07:14] *** tellable6 joined
[07:15] *** benchable6 joined
[07:15] *** releasable6 joined
[07:15] *** committable6 joined
[07:36] *** euandreh left
[07:57] *** euandreh joined
[08:12] *** jpn joined
[08:29] *** sena_kun joined
[08:47] *** ab5tract joined
[08:50] *** jpn left
[08:53] *** jpn joined
[09:06] *** jpn left
[09:12] <discord-raku-bot> <nemokosch> ü§£

[09:17] <discord-raku-bot> <nemokosch> I see there's another video about Rust

[09:30] <discord-raku-bot> <antononcube> Yeah, Rust for some reason is referred to a lot in that Perl/Raku conference ‚Ä¶

[09:40] <discord-raku-bot> <nemokosch> I can kind of see why but I don't think there's a lot to be adopted

[10:01] *** jpn joined
[10:01] *** Sgeo left
[10:06] *** jpn left
[10:56] *** jpn joined
[11:03] *** rf left
[11:03] *** rf joined
[11:10] *** jpn left
[11:33] <discord-raku-bot> <antononcube> Can you briefly explain?

[11:34] <discord-raku-bot> <antononcube> Or should I ask ChatGPT / PaLM‚Ä¶

[11:59] *** siavash left
[11:59] *** squashable6 left
[12:00] *** reportable6 left
[12:02] *** squashable6 joined
[12:02] *** reportable6 joined
[12:10] *** rf left
[12:30] <discord-raku-bot> <antononcube> Well, the LLM answers are too generic‚Ä¶

[12:31] *** squashable6 left
[12:33] *** squashable6 joined
[12:43] *** jpn joined
[12:45] <guifa> I only think Rust+Raku could be a potent combination.  The guy who talks about Rust and Go at these conferences is a long time Perlmonger.

[12:56] <discord-raku-bot> <antononcube> @guifa It seems you want to be in Steve Roe‚Äôs camp.

[12:58] <discord-raku-bot> <antononcube> @guifa BTW, I am watching your ‚Äúslangs & DSLs‚Äù presentation right now. I am still at the warm-up part (~17 min mark.)

[13:03] *** jpn left
[13:04] <Xliff> \o

[13:04] <Xliff> How does dispatch usually handle type resolution?>

[13:05] <Xliff> How would these be ordered --> sub ($a) { ... } / sub (Int $a) { ... } / sub (Str() $a) { ... }

[13:07] <lizmat> the "constraint" on sub ($a) and sub (Str() $a) is the same, so that feels like ambigupus

[13:08] <Xliff> Hrm...

[13:08] <lizmat> m: multi a($a) { dd }; multi a(Str() $a) { dd }; a 42

[13:08] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´Ambiguous call to 'a(Int)'; these signatures all match:‚ê§  ($a)‚ê§  (Str(Any) $a)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:08] <lizmat> yup

[13:08] <Xliff> Ok. So omit the coercion for now.

[13:09] <lizmat> well, it first tries all candidates in a trial-bind, and if there's one candidate left, it calls that candidate

[13:09] <lizmat> if there's more than one, you get the above error

[13:10] <lizmat> m: multi a(Int $a) { dd }; multi a(Str $a) { dd }; a now

[13:10] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´Cannot resolve caller a(Instant:D); none of these signatures matches:‚ê§    (Int $a)‚ê§    (Str $a)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:10] <Xliff> I thought dispatch did some ordeirng and then did the trial bind

[13:10] <lizmat> and if there is none, you get ^^

[13:10] <lizmat> possibly, but that would be an optimization, I guess...  I mean, if the number of positionals differ, there is no point trying to do a trial-bind

[13:11] <Xliff> m: multi a (Int $a) { dd }; multi a (Str $a) { dd }; multi a ($a) {  }

[13:11] <camelia> rakudo-moar 34a1a5da5: ( no output )

[13:11] <Xliff> m: multi a (Int $a) { dd }; multi a (Str $a) { dd }; multi a ($a) {  }

[13:11] <camelia> rakudo-moar 34a1a5da5: ( no output )

[13:11] <Xliff> m: multi a (Int $a) { dd }; multi a (Str $a) { dd }; multi a ($a) { 'non }

[13:11] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Unable to parse expression in single quotes; couldn't find final "'" (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> a (Str $a) { dd }; multi a ($a) { 'non }‚èè<EOL>‚ê§    expecting ‚Ä¶¬ª

[13:11] <Xliff> m: multi a (Int $a) { dd }; multi a (Str $a) { dd }; multi a ($a) { 'non' }; a(1).say

[13:11] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´sub a(Int $a)‚ê§Nil‚ê§¬ª

[13:11] <Xliff> So why didn't it conflict with (Int $a) and ($a)?

[13:11] <guifa> antononcube: that one is more of a historical type thing than anything else.  Not much on the technical level.  

[13:12] <guifa> codesections had a good Q, basically, "why bother with inline since that might make display in editors difficult"

[13:12] <Xliff> lizmat: Is it that it only trial-binds on typed signatures first then uses untyped next?

[13:12] <guifa> of course afterwards I realized the correct answer is, "good languages don't need syntax highlight" (Larry, paraphrased)

[13:14] <Xliff> At any rate... been up all night. Must go *boom*.... or is it *poof*.

[13:14] * Xliff away Insomnia is BAD...mmmm'kay?

[13:15] <lizmat> hmmm...  I guess after the trial bind there's another elimination process

[13:15] <lizmat> would really have to look at the binding code in the bootstrap for that

[13:16] <Xliff> Thanks, lizmat.

[13:16] <lizmat> jnthn would have that more in his head, as they wrote most of that

[13:16] <discord-raku-bot> <antononcube> @guifa I might write extensive LLM-powered criticism later...

[13:17] <guifa> I was happy this year though that all three of my talks followed a theme

[13:17] <discord-raku-bot> <antononcube> It is not trivial to prepare 3 talks!

[13:19] * guifa . o O ( as evidenced by my typos and one major missing slide in one of the talks haha )

[13:21] <discord-raku-bot> <antononcube> It happens -- my talks are much messier. Usually, my presentations are fairly non-linear -- I meaning scroll back and forth a lot -- so, typos and other problems are hard to spot.

[13:26] <discord-raku-bot> <antononcube> @guifa Also, if you really like using formulas from articles / books you should consider switching to Mathematica. üôÇ

[13:27] <guifa> oh joy, I have a huge typo in one of my talks hahahahahahahhaha, this is what I get from making a slide from memory and not from test

[13:27] <guifa> m: my &foo = m/blah/;

[13:27] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´Use of uninitialized value of type Any in string context.‚ê§Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.‚ê§  in block <unit> at <tmp> line 1‚ê§¬ª

[13:27] <guifa> ooooooops

[13:27] <guifa> shit

[13:28] <guifa> f***

[13:28] <guifa> I wonder if I can quickly sneak in better slides 

[13:29] *** ab5tract left
[13:30] <discord-raku-bot> <antononcube> @guifa Well, you can have a  GitHub repository for your presentations where you can refine their content at will.

[13:31] <guifa> yeah.  But it's for the lightning talk, you'd think I'd get that right

[13:34] <discord-raku-bot> <antononcube> @gufia Lightning talks are the easiest to get wrong. They are "just advertisements" anyway.

[13:39] *** xinming_ left
[13:40] <guifa> That's basically all I did, advertising Polyglot::Regexen

[13:41] *** xinming_ joined
[13:44] <discord-raku-bot> <antononcube> @guifa As for the Roman numbers -- I was recently (this week) looking for Roman numbers grammars / parsers in order do deal with LLM outputs.

[13:44] <discord-raku-bot> <antononcube> So, I so that Roman number slang. (Did not use it.)

[13:50] *** jpn joined
[13:55] * guifa is afk

[13:57] *** jpn left
[14:09] *** jpn joined
[14:12] *** perlbot left
[14:12] *** simcop2387 left
[14:14] *** jpn left
[14:34] <tbrowder__> it was long, and i haven't finished, but i always enjoy listening to sawyer. i forgot the tpc was on :-(

[14:36] *** simcop2387 joined
[14:39] *** perlbot joined
[14:55] *** razetime joined
[15:04] *** jpn joined
[15:09] *** jpn left
[15:20] *** jgaz left
[16:10] *** jpn joined
[16:13] *** ab5tract joined
[16:15] *** jpn left
[16:33] *** ab5tract left
[16:46] *** jgaz joined
[16:56] *** teut joined
[17:06] *** jpn joined
[17:11] *** jpn left
[17:12] <teut> Hi, may I know whats the speciality of this language? Like python for data, js for web and c++ for performance

[17:13] <teut> rest just exist for paradigms and elixir for event driven and so on..

[17:18] *** jpn joined
[17:21] <discord-raku-bot> <antononcube> @teut Which language? And Python is not that good for data.

[17:21] <teut> lol

[17:21] <teut> you are correct, its just good for wrapping other languages

[17:22] <teut> but atleast it has the best data¬† processibg libraries

[17:22] <teut> n*

[17:22] <teut> raku obviously

[17:23] *** jpn left
[17:25] <discord-raku-bot> <antononcube> @teut I have probably fairly biased and incomplete view on "why use Raku." I recently responded to a similar question in a different forum, so I will just post the link here.

[17:25] <teut> sure

[17:25] <teut> oh so I m taking to a person from discord

[17:25] <teut> I just realized

[17:26] <discord-raku-bot> <antononcube> @teut Yes, I am of Discord. üôÇ Here is the link : https://www.reddit.com/r/Mathematica/comments/12kkss4/rakumode_wolfram_language_paclet_repository/

[17:26] <teut> let me come to discord

[17:27] <teut> Grammar programming within the Object-Oriented Programming (OOP) paradigm

[17:27] <teut> this is the strength ?

[17:27] <teut> I know OOP but not grammar programminh

[17:27] <teut> g*

[17:29] <teut> other one, python is already good at it

[17:29] <teut> the REPL thing

[17:30] <discord-raku-bot> <antononcube> @teut Yeah, "grammar design" and "parse programming" is somewhat less taught in Programming classes / schools / degrees.

[17:30] <teut> I m from chemistry background

[17:30] <teut> not CS

[17:30] <discord-raku-bot> <antononcube> @teut Do you distinguish between REPL and CLI?

[17:31] <teut> hmm, good question

[17:31] <discord-raku-bot> <antononcube> @teut "I m from chemistry background" -- You lucky to have met me then!! üôÇ

[17:31] <teut> repl runs the statements in eval

[17:31] <teut> Read eval print loop

[17:31] <teut> cli runs the commands in shell

[17:32] <teut> let me good that once

[17:33] <teut> I know about various stages of compiler parsing the code, like parsing, tokenization, code optimization

[17:33] <teut> etc

[17:33] <discord-raku-bot> <antononcube> @teut It seems you are on right path! üôÇ

[17:34] <teut> ya, I studied what I wanted, college is good for nothing even if you are in the best one

[17:34] *** euandreh left
[17:34] <discord-raku-bot> <antononcube> @teut How easy it is to implement this Stoichiometry equations parser and balancer in other, non-Raku languages? https://raku.land/zef:antononcube/Chemistry::Stoichiometry

[17:34] <teut> hmm, need to split the lhs and rhs of equation

[17:34] <teut> we can use a regex

[17:35] <discord-raku-bot> <antononcube> @teut Or a grammar. üôÇ

[17:35] <teut> oh yes

[17:35] <teut> there are even two types of parsers, regex based and grammar based

[17:36] <teut> I forgot the computer science terms for that

[17:36] <discord-raku-bot> <antononcube> At some point I was planning to write a book about teaching functional programming to Chemists and Chemical Engineers. The chemical formula parsing was the first chapter I wrote.

[17:36] <teut> great, so you got this package https://raku.land/zef:antononcube/Chemistry::Stoichiometry , let me see the source code

[17:37] <teut> well functional programming, why so?

[17:37] <discord-raku-bot> <antononcube> @teut Please do! I am looking for chemstry background testers!

[17:37] <discord-raku-bot> <antononcube> @teut It was mostly about Mathematica for chemists, hence functional programming.

[17:37] <teut> ok, I m looking for contributing on open source, just need a point to start

[17:38] <teut> I havent used mathmetica

[17:38] <teut> only Matlab I ve used

[17:38] <discord-raku-bot> <antononcube> The chemists I taught programming to were much better at understanding procedural programming and flowcharts.

[17:38] *** euandreh joined
[17:38] <discord-raku-bot> <antononcube> So, I was considering making the connections between those.

[17:39] <teut> oh so you woked at mathematica before

[17:39] <teut> nice

[17:39] <discord-raku-bot> <antononcube> Yes, I worked at Wolfram Research for 6-7 years.

[17:39] <teut> hmm, procedural programming, thats pascal

[17:39] <teut> or cobol

[17:39] <discord-raku-bot> <antononcube> üôÇ and Matlab.

[17:40] <teut> but matlab has classes

[17:40] <teut> isnt procedural programming the one where you dont jump up and down?

[17:40] <teut> like which doesnt have functions

[17:41] <teut> hold on, I m looking at it

[17:41] <teut> what was in my head was programming that is unidirectional is procedural

[17:44] <discord-raku-bot> <antononcube> I am not sure when Matlab got classes. For long time it was just procedural with some sort of shallow polymorphism (i.e. OOP) via signature overloading.

[17:44] <teut> yes, matlab has classes

[17:45] <teut> I was thinking why you are saying it functional

[17:46] <teut> atleast this much I was sure that having classes in a program makes it non procedural

[17:47] <discord-raku-bot> <antononcube> Mathematica is mostly a funcitonal programming language. Also, rule based, etc.

[17:47] <discord-raku-bot> <antononcube> Well, what I am saying is that Matlab for most of its existence was "just" procedural.

[17:47] <teut> most people use matlab

[17:48] <teut> although mathmatica and maple have more featires

[17:48] <teut> u*

[17:48] <teut> https://github.com/antononcube/Raku-Chemistry-Stoichiometry/blob/main/examples/Stoichiometry-examples.raku¬† hmm, I just know englisg

[17:49] <teut> h*

[17:51] <teut> https://github.com/antononcube/Raku-Chemistry-Stoichiometry/blob/main/lib/Chemistry/Stoichiometry/Grammar/ChemicalElement.rakumod¬† what does this do?

[17:51] <teut> these are the tokens, I get that much

[17:51] <discord-raku-bot> <antononcube> @teut "most people use matlab" -- very strange statement? üôÇ

[17:51] <teut> atleast in India

[17:52] <teut> this sounds more correct

[17:53] <discord-raku-bot> <antononcube> @teut ChemicalElement.rakumod lists the tokens that going to be encountered in the Chemical Equations Grammar Universe  (CEGU).

[17:53] <teut> ya these are atmoic symbols

[17:53] <teut> atomic*

[17:53] <teut> let me see the parset

[17:53] <teut> r*

[17:53] <teut> hmm, I am too bad at typing

[17:53] <discord-raku-bot> <antononcube> Now CEGU has also assignment symbols and summation signs.

[17:54] <teut> https://github.com/antononcube/Raku-Chemistry-Stoichiometry/blob/main/lib/Chemistry/Stoichiometry/Grammar/ChemicalEquation.rakumod#L31 this is the bnf right?

[17:54] <discord-raku-bot> <antononcube> Yes, it is very similar to BNF. (Not the same though.)

[17:55] <teut> ya its SMILES

[17:55] <teut> I just observed

[17:56] <discord-raku-bot> <antononcube> Right, I targeted SMILES with the parser/grammar.

[17:56] <teut> chemistry is taught just a memorization based subject

[17:56] <teut> so this is the first time I m hearing of this

[17:57] <discord-raku-bot> <antononcube> Yeah, all chemists I have met were/are alchemists. Hence, I felt the urge to teach them Mathematica, so they can be more systematic or scientific.

[17:59] <teut> alchemy is what?

[18:00] <teut> see I hate lab work

[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:01] <teut> I think understand your code can me helpful to me

[18:01] <teut> which file should I look to start understanding it completely?

[18:01] <discord-raku-bot> <antononcube> Ok. good!

[18:02] <discord-raku-bot> <antononcube> Hmm... let me think.

[18:03] <teut> like when someone enters "NaOH + HCl -> NaCL +H2)" acid base neutralization"

[18:03] <teut> H2O *

[18:03] <teut> which function takes it in and starts the tokenization

[18:05] <discord-raku-bot> <antononcube> See Chemistry::Stoichiometry::Grammar.parse.

[18:05] <discord-raku-bot> <antononcube> The method parse is a grammar class method.

[18:06] <teut> which file?

[18:07] <discord-raku-bot> <antononcube> https://github.com/antononcube/Raku-Chemistry-Stoichiometry/blob/main/lib/Chemistry/Stoichiometry.rakumod

[18:07] <discord-raku-bot> <antononcube> See line 76.

[18:12] <teut> so you are kind of interacting between julia and mathematica objects?

[18:14] <discord-raku-bot> <antononcube> @teut I am not sure what do you mean. It that chemistry module only Raku is used.

[18:14] <teut> https://github.com/antononcube/Raku-Chemistry-Stoichiometry/blob/main/lib/Chemistry/Stoichiometry.rakumod#L31

[18:14] <teut> this part

[18:15] <teut> I mean is this module usable in both mathematica and julia?

[18:15] <teut> I m really curious about what technique is used to use this package in those languages

[18:16] <discord-raku-bot> <antononcube> Well, the idea is to translate the strings with chemical equations / formulas into objects of, say, WL, Python, etc.

[18:17] <discord-raku-bot> <antononcube> Those translators are not implemented yet.

[18:17] *** jpn joined
[18:17] <teut> so python has something called as a dict

[18:18] <discord-raku-bot> <antononcube> Yeah, Python universe is well known for misnaming things. üôÇ

[18:18] <teut> no, dict is a good name

[18:18] <teut> look at js, it says it Object

[18:18] <discord-raku-bot> <antononcube> Good does not make it right. üôÇ

[18:18] <teut> thats a crap name

[18:19] <discord-raku-bot> <antononcube> This module might be easier to follow and understand: https://github.com/antononcube/Raku-Lingua-NumericWordForms .

[18:20] <teut> thats fine, but lets only focus on that chemistry module only

[18:20] <discord-raku-bot> <antononcube> I did not have the time to implement Hindy numeric forms. I was thinking yesterday to "just" implement Sancrit numeric forms.

[18:21] <teut> even if you will, who 'd be using it?

[18:21] <teut> in india, the crap peeps do not have a national language

[18:21] <discord-raku-bot> <antononcube> üôÇ Agh, good question.

[18:22] <teut> everyone who is literate enough to use that package would be knowing english

[18:22] *** jpn left
[18:22] <teut> I live in India

[18:23] <discord-raku-bot> <antononcube> I hear that argument often, for other natural language processing projects of mine.

[18:23] <teut> in china, france etc, I have heard things are differet

[18:23] <teut> India has english as an official language

[18:24] <teut> but there is no national language

[18:24] <discord-raku-bot> <antononcube> Well, to some extend that is why Hindi and Sanscrit numbers are not implemented yet. üôÇ

[18:24] <teut> so using hindi would mostly be a wasteful effort

[18:24] *** razetime left
[18:24] <discord-raku-bot> <antononcube> Sure. Depends on the target audience, though.

[18:25] <teut> who is going to read hindi chemical reactions rather than people in¬† India.

[18:25] <discord-raku-bot> <antononcube> I usually target technically literate users, so your argument stands. üôÇ

[18:26] <teut> if it was 1990's then you might have needed hindi

[18:26] <discord-raku-bot> <antononcube> Good to know!

[18:26] <teut> there were many great chemists in Bengal

[18:26] <teut> lol, but then you'd need bengali

[18:27] <discord-raku-bot> <antononcube> Ok, should I program Bengali numbers or not? üôÇ

[18:27] <teut> The Eighth Schedule of the Indian Constitution recognizes 22 languages as scheduled languages, which means they are officially recognized and have a special status. These languages include Assamese, Bengali, Bodo, Dogri, Gujarati, Hindi, Kannada, Kashmiri, Konkani, Maithili, Malayalam, Manipuri, Marathi, Nepali, Odia, Punjabi, Sanskrit, Santali,

[18:27] <teut> Sindhi, Tamil, Telugu, and Urdu.

[18:28] <teut> Hindi is spoken in majority of India

[18:28] <teut> but if we make it national, south Indians would start protests

[18:28] <discord-raku-bot> <antononcube> Yeah. That was my line of thinking: 1) Hindi is the most popular, 2) Sanskrit is the easiest to program.

[18:29] <discord-raku-bot> <antononcube> From the non-English languages...

[18:29] <teut> 2) Sanskrit is the easiest to program.¬† >>

[18:29] <teut> ?? *

[18:29] <teut> never heard of anyone programming or even speaking in sanskrit

[18:30] <teut> we cant even type hindi /sanskrit etc on our keyboards

[18:30] <discord-raku-bot> <antononcube> I think originally Sanskrit numbers forms were specified with some sort of Backus-Naur Form. (Thousands of years ago,)

[18:30] <teut> all keyboards are english

[18:30] <teut> maybe

[18:31] <teut> ya wikipedia says a lot about that and the south indian mathematicians but sanskrit is what only some professors or pundits would be knowing

[18:31] <teut> not common people in India

[18:31] <discord-raku-bot> <antononcube> Agh, but Raku can handle Sanskrit numbers / digits. (I think.)

[18:32] <teut> oh

[18:32] <teut> the only problem I see is how would I or anyone type sanskrit or hindi on my keyboard

[18:33] <teut> I can use a virtual keyboard though

[18:33] <discord-raku-bot> <antononcube> I understand your utilitarian point of view. But in some projects, we just want to demonstrate ability and versatility, not "pure" utility.

[18:35] <discord-raku-bot> <antononcube> @teut Talking to you gives the idea to re-write the Mathematica-for-Chemists documents into Raku-for-Chemists ones.

[18:36] <teut> hmm

[18:36] <teut> let me first use this package

[18:36] <teut> that would be the perfect start

[18:37] <discord-raku-bot> <antononcube> Yeah.

[18:38] <discord-raku-bot> <antononcube> If you use Jupyter, then you can try using "Jupyter::Kernel" (for Raku notebooks.)

[18:38] <teut> oh great

[18:39] <teut> jupyter has features for R when I saw it last tym

[18:39] <teut> had*

[18:39] *** rir joined
[18:40] <discord-raku-bot> <antononcube> See here : https://raku.land/cpan:BDUGGAN/Jupyter::Kernel

[18:40] <teut> hmm, this is also a good prpject

[18:40] <teut> o*

[18:42] <discord-raku-bot> <antononcube> Yes, it is great.

[18:42] <discord-raku-bot> <antononcube> Here is demo of using Jupyter and Raku:  https://www.youtube.com/watch?v=THNnofZEAn4 . (Shamless plug, BTW.)

[18:45] <teut> what are those images of?

[18:46] <teut> oh I have heard of these things, the mandelbroth set

[18:48] <discord-raku-bot> <antononcube> No!!! Those mandalas!

[18:48] <discord-raku-bot> <antononcube> I strongly suspect you have been exposed to mandalas before. üôÇ

[18:50] <teut> I have just seen the mandalbroth set

[18:50] <teut> althrough the word mandal seems to be hindi word

[18:50] <teut> but never seen these patterns associated with this word

[18:51] <teut> "mandal" means a group

[19:04] *** Sgeo joined
[19:06] <gfldex> m: my $a ‚âî 42; say $*RAKU.compiler.version;

[19:06] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> my $a‚èè ‚âî 42; say $*RAKU.compiler.version;‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§        statement modifier‚Ä¶¬ª

[19:07] <gfldex> m: say (my $a) ‚âà 42;

[19:07] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> say (my $a)‚èè ‚âà 42;‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚ê§   ‚Ä¶¬ª

[19:15] <discord-raku-bot> <antononcube> @teut good to know!

[19:15] <teut> =D

[19:18] *** jpn joined
[19:18] <gfldex> m: say 1‚Ä•2;

[19:18] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Bogus postfix‚ê§at <tmp>:1‚ê§------> say 1‚èè‚Ä•2;‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚ê§       ‚Ä¶¬ª

[19:28] <gfldex> m: my $n = ‚Üä; say $n;

[19:28] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Malformed initializer‚ê§at <tmp>:1‚ê§------> my $n =‚èè ‚Üä; say $n;‚ê§    expecting any of:‚ê§        prefix‚ê§        term‚ê§¬ª

[19:29] <gfldex> m: my $n = '‚Üä'; say $n.Int;

[19:29] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´Cannot convert string to number: base-10 number must begin with valid digits or '.' in '‚èè‚Üä' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:29] <Xliff> antoncube: Where is the <chemical-element> token defined from here -- https://github.com/antononcube/Raku-Chemistry-Stoichiometry/blob/main/lib/Chemistry/Stoichiometry/Grammar/ChemicalEquation.rakumod#L31?

[19:30] *** jpn left
[19:45] <discord-raku-bot> <antononcube> @Xliff See: https://github.com/antononcube/Raku-Chemistry-Stoichiometry/blob/main/lib/Chemistry/Stoichiometry/Grammar/ChemicalElement.rakumod

[19:48] *** jpn joined
[19:53] *** jpn left
[20:10] <Xliff> m: sub a ( @b ($a, $b, $c, $d) ) { @b.one.so.say }; a(0, 1, 0, 1); 

[20:10] <camelia> rakudo-moar 34a1a5da5: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Calling a(Int, Int, Int, Int) will never work with declared signature (@b (Any $a, Any $b, Any $c, Any $d))‚ê§at <tmp>:1‚ê§------> b ($a, $b, $c, $d) ) { @b.one.so.say }; ‚èèa(0, 1, 0, 1);‚ê§¬ª

[20:10] <Xliff> O_o -- did I do array decomp wrong?

[20:11] <Xliff> antoncube: O I C! I forget that they are both roles. Thanks.

[20:17] <guifa> The good thing re my slides are at least the moduels I mention both work

[20:26] <discord-raku-bot> <antononcube> @guifa Where are the slides?

[20:26] <guifa> on the video :-)

[20:26] <guifa> I'll work this evening to update slides and post them

[20:27] <guifa> https://www.youtube.com/watch?v=LSnkFfE7vPg&list=PLA9_Hq3zhoFwrDiojWd_lFUaOHlsUUEJa&index=30 <-- brain fuck talk posted

[20:28] <discord-raku-bot> <antononcube> ok

[20:30] <discord-raku-bot> <antononcube> @guifa In the YouTube description it seems you are using RakuAS. (Not RakuAST.)

[20:34] *** sena_kun left
[20:35] *** rir left
[20:44] <discord-raku-bot> <antononcube> @Xliff Yeah, no problem. Thank you for your interest!

[20:48] *** teut left
[21:48] *** nativecallable6 left
[21:48] *** bisectable6 left
[21:48] *** quotable6 left
[21:48] *** tellable6 left
[21:48] *** notable6 left
[21:48] *** statisfiable6 left
[21:48] *** bloatable6 left
[21:48] *** evalable6 left
[21:48] *** benchable6 left
[21:48] *** committable6 left
[21:48] *** shareable6 left
[21:48] *** releasable6 left
[21:48] *** unicodable6 left
[21:48] *** sourceable6 left
[21:48] *** squashable6 left
[21:48] *** coverable6 left
[21:48] *** reportable6 left
[21:48] *** greppable6 left
[21:48] *** linkable6 left
[21:48] *** benchable6 joined
[21:49] *** tellable6 joined
[21:49] *** linkable6 joined
[21:49] *** squashable6 joined
[21:49] *** nativecallable6 joined
[21:49] *** reportable6 joined
[21:49] *** statisfiable6 joined
[21:49] *** unicodable6 joined
[21:49] *** coverable6 joined
[21:49] *** quotable6 joined
[21:49] *** releasable6 joined
[21:49] *** notable6 joined
[21:50] *** committable6 joined
[21:50] *** bisectable6 joined
[21:51] *** sourceable6 joined
[21:51] *** greppable6 joined
[21:51] *** evalable6 joined
[21:51] *** bloatable6 joined
[21:51] *** shareable6 joined
[22:51] *** reportable6 left
[22:51] *** nativecallable6 left
[22:51] *** committable6 left
[22:51] *** benchable6 left
[22:51] *** greppable6 left
[22:51] *** squashable6 left
[22:51] *** notable6 left
[22:51] *** coverable6 left
[22:51] *** shareable6 left
[22:51] *** bisectable6 left
[22:51] *** quotable6 left
[22:51] *** statisfiable6 left
[22:51] *** linkable6 left
[22:51] *** bloatable6 left
[22:51] *** evalable6 left
[22:51] *** unicodable6 left
[22:51] *** sourceable6 left
[22:51] *** tellable6 left
[22:51] *** releasable6 left
[22:51] *** benchable6 joined
[22:51] *** reportable6 joined
[22:52] *** squashable6 joined
[22:52] *** evalable6 joined
[22:52] *** quotable6 joined
[22:52] *** notable6 joined
[22:53] *** bisectable6 joined
[22:53] *** coverable6 joined
[22:53] *** releasable6 joined
[22:53] *** greppable6 joined
[22:53] *** nativecallable6 joined
[22:54] *** unicodable6 joined
[22:54] *** committable6 joined
[22:54] *** tellable6 joined
[22:54] *** statisfiable6 joined
[22:54] *** linkable6 joined
[22:54] *** sourceable6 joined
[22:54] *** bloatable6 joined
[22:54] *** shareable6 joined
[23:52] *** kst left
