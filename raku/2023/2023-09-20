[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:27] *** Maylay left
[01:29] *** nine left
[01:29] *** m_athias left
[01:30] *** nine joined
[01:30] *** m_athias joined
[01:44] *** deoac joined
[02:22] *** deoac left
[02:43] *** squashable6 left
[02:46] *** squashable6 joined
[03:46] *** reportable6 left
[03:46] *** linkable6 left
[03:46] *** nativecallable6 left
[03:46] *** evalable6 left
[03:46] *** tellable6 left
[03:46] *** notable6 left
[03:46] *** releasable6 left
[03:46] *** committable6 left
[03:46] *** coverable6 left
[03:46] *** sourceable6 left
[03:46] *** greppable6 left
[03:46] *** shareable6 left
[03:46] *** squashable6 left
[03:46] *** bisectable6 left
[03:46] *** bloatable6 left
[03:46] *** quotable6 left
[03:46] *** benchable6 left
[03:46] *** statisfiable6 left
[03:46] *** unicodable6 left
[03:46] *** coverable6 joined
[03:47] *** releasable6 joined
[03:47] *** sourceable6 joined
[03:47] *** bisectable6 joined
[03:47] *** linkable6 joined
[03:48] *** reportable6 joined
[03:48] *** benchable6 joined
[03:48] *** bloatable6 joined
[03:48] *** notable6 joined
[03:48] *** nativecallable6 joined
[03:48] *** greppable6 joined
[03:48] *** tellable6 joined
[03:48] *** squashable6 joined
[03:48] *** unicodable6 joined
[03:48] *** quotable6 joined
[03:48] *** evalable6 joined
[03:49] *** shareable6 joined
[03:49] *** committable6 joined
[03:49] *** statisfiable6 joined
[04:10] *** oodani left
[04:10] *** oodani joined
[04:13] *** simcop2387 left
[04:14] *** simcop2387 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:36] *** abraxxa joined
[07:11] *** Xliff joined
[07:11] <Xliff> \o

[07:11] <Xliff> m: sub a ( 1 | 2 ) { 42 }; a.say

[07:11] <camelia> rakudo-moar f1c6261c4: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Malformed parameter‚ê§at <tmp>:1‚ê§------> sub a ( 1 |‚èè 2 ) { 42 }; a.say‚ê§    expecting any of:‚ê§        constraint‚ê§¬ª

[07:11] <Xliff> O_o? When did we lose the ability to use junctions in signatures?

[07:12] <Xliff> m: my Subset OneorTwo of Int where 1 | 2; sub a (OneOrTwo) { 42 }; a.say

[07:12] <camelia> rakudo-moar f1c6261c4: OUTPUT: ¬´===SORRY!===‚ê§Type 'Subset' is not declared‚ê§at <tmp>:1‚ê§------> my Subset‚èè OneorTwo of Int where 1 | 2; sub a (One‚ê§Malformed my‚ê§at <tmp>:1‚ê§------> my‚èè Subset OneorTwo of Int where 1 | 2; sub‚ê§‚ê§¬ª

[07:12] <Xliff> m: my subset OneorTwo of Int where 1 | 2; sub a (OneOrTwo) { 42 }; a.say

[07:12] <camelia> rakudo-moar f1c6261c4: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Invalid typename 'OneOrTwo' in parameter declaration.  Did you mean‚ê§'OneorTwo'?‚ê§at <tmp>:1‚ê§------> rTwo of Int where 1 | 2; sub a (OneOrTwo‚èè) { 42 }; a.say‚ê§¬ª

[07:13] <Xliff> m: my subset OneOrTwo of Int where 1 | 2; sub a (OneOrTwo) { 42 }; a.say

[07:13] <camelia> rakudo-moar f1c6261c4: OUTPUT: ¬´Too few positionals passed; expected 1 argument but got 0‚ê§  in sub a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[07:13] <Xliff> m: my subset OneOrTwo of Int where 1 | 2; sub a (OneOrTwo) { 42 }; a(1).say

[07:13] <camelia> rakudo-moar f1c6261c4: OUTPUT: ¬´42‚ê§¬ª

[07:13] <Xliff> m: my subset OneOrTwo of Int where 1 | 2; sub a (OneOrTwo) { 42 }; a(0).say

[07:13] <camelia> rakudo-moar f1c6261c4: OUTPUT: ¬´Constraint type check failed in binding to parameter '<anon>'; expected OneOrTwo but got Int (0)‚ê§  in sub a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[07:13] <Xliff> So still legal via subset, but the shorthand was removed?

[07:39] *** ab5tract left
[07:51] *** Sgeo left
[07:54] *** dakkar joined
[07:56] *** Manifest0 joined
[07:56] <guifa> I don't remember junctions ever being able to be used in signatures, only in where clauses

[07:57] <guifa> m: sub a($ where 1 | 2) { say "yay" }; a(1)

[07:57] <camelia> rakudo-moar f1c6261c4: OUTPUT: ¬´yay‚ê§¬ª

[07:59] * guifa has a new half baked project in the works

[08:00] <guifa> Basically thinking about doing something akin to Automator on the mac, but not quite as linear

[08:23] *** teatwo joined
[08:24] *** teatwo left
[08:24] *** teatwo joined
[08:25] *** teatwo left
[08:26] *** teatwo joined
[08:26] *** tea3po left
[08:58] <discord-raku-bot> <nemokosch> Yes... I think it was kinda bothersome always that you had to type out two separate candidates if you wanted a literal

[09:20] *** timo left
[09:21] *** timo joined
[09:24] <guifa> m: sub a(any(1,2)) { say "yay" }; a(1)

[09:24] <camelia> rakudo-moar f1c6261c4: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Invalid typename 'any' in parameter declaration.  Did you mean 'Any'?‚ê§at <tmp>:1‚ê§------> sub a(any‚èè(1,2)) { say "yay" }; a(1)‚ê§¬ª

[09:25] <guifa> given sub a(1 | 2, 3), is it 1 or (2,3), or 1 or 2, and then 3.  That's probably why it's disallowed

[09:39] <discord-raku-bot> <nemokosch> that's a simple matter of operator precedence, isn't it

[09:40] <Xliff> guifa++ # Thanks for the workaround!

[09:40] <discord-raku-bot> <nemokosch> m: my $test := 1 | 2 , 3; dd $test

[09:40] <discord-raku-bot> <Raku eval>  (any(1, 2), 3) 

[09:40] <Xliff> That's the way I would suspect it would have worked out.

[09:41] <discord-raku-bot> <nemokosch> there is a different point, though... would such a construct be a smartmatch or an exact value?

[09:42] <Xliff> guifa: How would you start with something like that? Would be a fun project.

[09:42] <Xliff> You would need hooks in.... everything.

[09:42] <Xliff> (re: the Automater thing)

[09:46] <guifa> Xliff: so my initial idea is just to have two real inputs: literal string, or grab a file/files.  Otherwise come up with some basic actions based around general processing of texts / file naming, etc.  Interface would be akin to https://github.com/elliottlawrence/flo but hopefully a bit more polished/userfriendly.  In the background, Raku would generate a sub for each step in the flow, and then handle some logic on when to run each step.  

[09:47] <guifa> I have a pretty good idea of how the background stuff would be handled, but right now I'm working on the interface.  Drawing the arrows is requiring me to learn how to do svg.

[09:47] <guifa> Once I get the logic of "Draw arrow from boxes" to "Draw arrows to/from in/out parts of boxes" I'll start working on the backend

[09:48] <guifa> Hooks for everything else will come later.  But you can always call AppleScript from the commandline via osa-script (but sadly it looks like Apple has EOL'ed AppleScript, or worse, has left it to die a slow unannounced death)

[09:51] <Xliff> guifa: Ahh... and Apple's loss could be our gain! :D

[09:52] <discord-raku-bot> <nemokosch> So Automator is a mac tool apparently, and AppleScript is also mac technology

[09:53] <discord-raku-bot> <nemokosch> are you planning to replace mac stuff on mac? I don't quite get it

[09:53] <Xliff> guifa: Ooh! I love it. Let me know where I can help.

[09:53] <guifa> nemokosch: no

[09:53] <guifa> I used Automator as an example of what I want to create

[09:54] <guifa> but Automator is very linear, so of limited utility 

[09:54] <discord-raku-bot> <nemokosch> if it's not meant to run on a mac, how does AppleScript come into play?

[09:54] <Xliff> guifa: BTW... when it comes to drag and drop, there's always GTK.... :D

[09:55] <guifa> Because Xliff mentionined needing hooks in everything

[09:55] <Xliff> (https://github.com/Xliff/p6-GtkPlus)

[09:55] <Xliff> Actually, I've already hoovered through GTK4

[09:55] <Xliff> (https://github.com/Xliff/raku-GTK4)

[09:56] <guifa> Automator allows you to you to say, for instance, "Take these pictures, have the Finder copy the files with a new name based on scheme X.  Now open them up in Pages and export them to PDF.  Have Mail send them to person Y"

[09:57] <guifa> I can get how Xliff's hooks reference might not have been an obvious AppleScript reference for those not on a Mac

[09:57] <Xliff> Xliff's hooks reference was quite subversive.

[09:57] <Xliff> (https://github.com/Xliff/p6-WebkitGTK)

[09:58] <discord-raku-bot> <nemokosch> no I mean, it sounded like you want to use AppleScript

[09:58] <discord-raku-bot> <nemokosch> so I was thinking, are we fighting an Apple tool with another Apple tool

[09:58] <Xliff> nemokosch: No.

[09:58] <Xliff> The Apple tool is inspiration. 

[09:58] <guifa> To be fair, I have had a separate goal of enabling Raku to send AppleScript events

[09:58] <discord-raku-bot> <nemokosch> then what is the plan actually? üòÖ

[09:59] <Xliff> nemokosch: Implementing something more functional on Linux! :)

[09:59] <guifa> create a Raku-based Automator-like processing utility

[09:59] <guifa> but less linear

[09:59] <Xliff> ^^

[10:00] <Xliff> <snark> We could use Satisfactory as the interface! </s>

[10:00] * Xliff turns into a ball and rolls into the nearest hole.

[10:01] <guifa> haha I'm thinking about implementing the interface in JS/HTML.  GTK is fun, but I'm not sure I'm up for the complexity of drawing lines/arrows on its canvas equivalent.

[10:04] <discord-raku-bot> <nemokosch> Satisfactory :DD

[10:05] <discord-raku-bot> <nemokosch> is it similar to the chart generation that Anton is using?

[10:05] <discord-raku-bot> <nemokosch> forgot the name tbh

[10:07] <discord-raku-bot> <nemokosch> D3 I think

[10:08] <discord-raku-bot> <nemokosch> I mean, not Satisfactory but the goal

[10:15] *** tejr joined
[10:32] *** ab5tract joined
[10:33] *** jpn joined
[10:44] *** ProperNoun left
[11:01] <Xliff> guifa: I have lines and arrow examples in my repositories.

[11:01] <Xliff> Honestly, SVG is similar enough to Cairo I could probably write a compatibility layer to do both.

[11:02] <Xliff> guifa: When you get something into a repo, let me know!

[11:03] *** Xliff left
[11:04] <discord-raku-bot> <nemokosch> Xliff: by the way, do you not want to move to raku-ish extensions in your repo?

[11:34] *** teatwo left
[11:35] *** teatime joined
[11:58] *** guifa left
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:08] *** ProperNoun joined
[12:19] *** jpn left
[12:35] *** abraxxa left
[12:41] *** derpydoo joined
[12:42] *** abraxxa joined
[12:44] *** jpn joined
[12:55] *** jgaz left
[12:56] *** jgaz joined
[13:16] *** jpn left
[13:23] <discord-raku-bot> <antononcube> @nemokosch Yes, I made package ‚ÄúJavaScript::D3‚Äù which hijacks the JavaScript library D3.js .

[13:23] <discord-raku-bot> <antononcube> @guifa Try to get inspired by Apple‚Äôs Shortcuts! üôÇ

[13:26] <lizmat> antononcube maybe this is up your alley? https://www.reddit.com/r/rakulang/comments/16n25iw/is_raku_good_for_neural_nets_compared_with_python/

[13:29] <discord-raku-bot> <antononcube> Further on mimicing Apple‚Äôs Shortcuts: 1) From my point of view, that would require adopting monadic programming. 2) Also using a parsable chart language, like, Mermaid or UML. 3) With LLMs one can generate monadic pipeline specs with natural language commands. 4) Or Mermaid or UML diagrams, which can be translated to pipelines.

[13:29] *** jpn joined
[13:31] <discord-raku-bot> <antononcube> @lizmat Thanks for the link! I will respond after. (Politely‚Ä¶)

[13:31] <lizmat> thanks!  :-)

[13:34] *** codesections joined
[14:15] *** guifa joined
[14:47] <discord-raku-bot> <antononcube> @lizmat I posted two comments. (Maybe not very polite...)

[14:56] *** MoC joined
[15:14] *** guifa left
[15:48] *** jpn left
[16:08] *** guifa joined
[16:24] *** jmcgnh left
[16:32] *** jmcgnh joined
[16:34] *** dakkar left
[16:42] *** derpydoo left
[17:01] *** m_athias left
[17:01] *** m_athias joined
[17:06] *** derpydoo joined
[17:23] <tonyo> does rf still hang out here?

[17:23] <tonyo> .seen rf

[17:23] <tellable6> tonyo, I saw rf 2023-08-07T20:59:12Z in #raku: <rf> Where does this person get gremlins from? Besides that I think they liked Raku?

[17:26] <discord-raku-bot> <antononcube> üôÇ

[17:35] *** abraxxa left
[17:36] *** abraxxa joined
[17:38] <discord-raku-bot> <nemokosch> that was more than a month ago??

[17:45] <tonyo> yea long time, loving humming bird

[17:47] <[Coke]> I was both annoyed by the gremlins comment in the video but also like: well, true.

[17:47] <[Coke]> I guess I am a gremlin.

[17:53] <discord-raku-bot> <antononcube> I assume is "Humming-Bird" is simpler and easier to use than "Cro".  Have not tried it yet.

[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:07] <tonyo> it's structured in a way that makes it easier to have fp style call chains for routes in separate files which makes it easier for me, i'd assume cro is a little easier for most people since it's more similar to other langs' out of the box

[18:07] <tonyo> currently porting all of the lambdas to raku for the zef eco since AWS is getting rid of the mechanism i'm using in january

[18:13] *** guifa left
[18:31] <discord-raku-bot> <antononcube> @tonyo Really good to know!

[18:38] *** ProperNoun left
[18:50] *** guifa joined
[19:00] *** bingos is now known as BinGOs

[19:07] *** abraxxa left
[19:09] *** manu_ joined
[19:10] *** eseyman left
[19:31] *** manu_ is now known as eseyman

[19:53] <discord-raku-bot> <nemokosch> the video with that YMCA dude was a waste of human resources

[19:53] <discord-raku-bot> <nemokosch> the blog post itself was okay

[19:55] <discord-raku-bot> <nemokosch> but that YMCA dude... like, I never imagined there is Twitch-streamer shitposting for programming as well xD Just knowing that this has any impact on the world makes me a bit upset, the best thing I can come up with is a mental quarantine where they can live in peace, outside of my world

[20:04] <discord-raku-bot> <antononcube> @nemokosch  "[...] outside of my world" -- Unfortunately, people like that also become politicians, and then their misunderstandings cannot be ignored...

[20:21] *** MoC left
[20:53] <discord-raku-bot> <nemokosch> I don't know, it's not even like misunderstandings, more like, to them, all of this is just a joke and a couple of echoed presumptuous hot takes

[20:53] <discord-raku-bot> <nemokosch> Although that's not terribly unlike politicians I guess

[20:57] *** ab5tract left
[20:58] *** guifa left
[20:58] *** ab5tract joined
[21:02] *** ProperNoun joined
[21:03] <discord-raku-bot> <antononcube> A certain writer described people / politicians exhibiting that phenomenon as " those who are merely play-acting at politics and terror."

[21:08] *** [Coke] left
[22:08] *** unicodable6 left
[22:08] *** benchable6 left
[22:08] *** committable6 left
[22:08] *** bisectable6 left
[22:08] *** greppable6 left
[22:08] *** evalable6 left
[22:08] *** releasable6 left
[22:08] *** notable6 left
[22:08] *** quotable6 left
[22:08] *** nativecallable6 left
[22:08] *** tellable6 left
[22:08] *** sourceable6 left
[22:08] *** linkable6 left
[22:08] *** shareable6 left
[22:08] *** reportable6 left
[22:08] *** statisfiable6 left
[22:08] *** coverable6 left
[22:08] *** squashable6 left
[22:08] *** bloatable6 left
[22:09] *** greppable6 joined
[22:09] *** notable6 joined
[22:09] *** squashable6 joined
[22:09] *** tellable6 joined
[22:09] *** quotable6 joined
[22:09] *** bisectable6 joined
[22:09] *** nativecallable6 joined
[22:10] *** bloatable6 joined
[22:10] *** unicodable6 joined
[22:10] *** benchable6 joined
[22:10] *** committable6 joined
[22:10] *** shareable6 joined
[22:10] *** coverable6 joined
[22:10] *** linkable6 joined
[22:10] *** evalable6 joined
[22:11] *** sourceable6 joined
[22:11] *** releasable6 joined
[22:11] *** reportable6 joined
[22:11] *** statisfiable6 joined
[22:33] *** Util left
[22:35] *** Util joined
[23:24] *** Manifest0 left
[23:37] *** teatime left
[23:38] *** teatime joined
[23:52] *** teatwo joined
[23:55] *** teatime left
