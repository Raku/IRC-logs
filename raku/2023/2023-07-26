[00:00] *** vrurg left
[00:00] *** dogbert17 left
[00:00] *** mark22k left
[00:00] *** jgaz left
[00:00] *** DarthGandalf left
[00:00] *** Woodi left
[00:00] *** gfldex left
[00:00] *** jrjsmrtn left
[00:00] *** justache left
[00:00] *** gugod left
[00:00] *** SmokeMachine left
[00:00] *** xelxebar left
[00:00] *** mjgardner left
[00:00] *** amenonsen left
[00:00] *** Sevalecan left
[00:00] *** elcaro left
[00:00] *** elcaro joined
[00:00] *** gfldex joined
[00:00] *** SmokeMachine joined
[00:00] *** reportable6 left
[00:00] *** mjgardner joined
[00:00] *** dogbert17 joined
[00:00] *** vrurg joined
[00:01] *** jrjsmrtn joined
[00:01] *** justache joined
[00:01] *** justache left
[00:02] *** DarthGandalf joined
[00:02] *** xelxebar joined
[00:02] *** amenonsen joined
[00:02] *** Sevalecan joined
[00:03] *** mark22k joined
[00:03] *** reportable6 joined
[00:03] *** jgaz joined
[00:03] *** gugod joined
[00:05] *** PipStuart joined
[00:06] *** justache joined
[00:10] *** Woodi joined
[00:14] *** kst joined
[00:27] *** PipStuart left
[00:54] *** PipStuart joined
[01:07] *** razetime joined
[01:15] *** andydude joined
[02:15] *** reportable6 left
[02:15] *** tellable6 left
[02:15] *** statisfiable6 left
[02:15] *** nativecallable6 left
[02:15] *** squashable6 left
[02:15] *** greppable6 left
[02:15] *** notable6 left
[02:15] *** bloatable6 left
[02:15] *** coverable6 left
[02:15] *** linkable6 left
[02:15] *** unicodable6 left
[02:15] *** bisectable6 left
[02:15] *** sourceable6 left
[02:15] *** evalable6 left
[02:15] *** committable6 left
[02:15] *** shareable6 left
[02:15] *** quotable6 left
[02:15] *** releasable6 left
[02:15] *** benchable6 left
[02:15] *** bisectable6 joined
[02:15] *** notable6 joined
[02:16] *** quotable6 joined
[02:16] *** committable6 joined
[02:16] *** greppable6 joined
[02:16] *** bloatable6 joined
[02:16] *** sourceable6 joined
[02:16] *** coverable6 joined
[02:16] *** evalable6 joined
[02:16] *** squashable6 joined
[02:17] *** benchable6 joined
[02:17] *** shareable6 joined
[02:17] *** reportable6 joined
[02:17] *** tellable6 joined
[02:17] *** unicodable6 joined
[02:17] *** nativecallable6 joined
[02:18] *** linkable6 joined
[02:18] *** statisfiable6 joined
[02:18] *** releasable6 joined
[03:18] *** releasable6 left
[03:18] *** nativecallable6 left
[03:18] *** bloatable6 left
[03:18] *** unicodable6 left
[03:18] *** bisectable6 left
[03:18] *** greppable6 left
[03:18] *** shareable6 left
[03:18] *** benchable6 left
[03:18] *** tellable6 left
[03:18] *** evalable6 left
[03:18] *** sourceable6 left
[03:18] *** coverable6 left
[03:18] *** quotable6 left
[03:18] *** notable6 left
[03:18] *** reportable6 left
[03:18] *** committable6 left
[03:18] *** squashable6 left
[03:18] *** statisfiable6 left
[03:18] *** linkable6 left
[03:18] *** shareable6 joined
[03:18] *** quotable6 joined
[03:18] *** ben_ left
[03:18] *** statisfiable6 joined
[03:19] *** tellable6 joined
[03:19] *** evalable6 joined
[03:19] *** notable6 joined
[03:19] *** nativecallable6 joined
[03:19] *** bloatable6 joined
[03:19] *** bisectable6 joined
[03:19] *** linkable6 joined
[03:20] *** coverable6 joined
[03:20] *** reportable6 joined
[03:20] *** greppable6 joined
[03:20] *** unicodable6 joined
[03:20] *** committable6 joined
[03:20] *** sourceable6 joined
[03:21] *** releasable6 joined
[03:21] *** benchable6 joined
[03:21] *** squashable6 joined
[03:31] *** nine_ joined
[03:31] *** m_athias left
[03:31] *** nine left
[03:31] *** camelia left
[03:31] *** m_athias_ joined
[03:31] *** codesections left
[03:36] *** m_athias_ is now known as m_athias

[03:39] *** camelia joined
[03:59] *** rf left
[04:07] *** razetime left
[04:41] *** teatwo joined
[04:44] *** teatime left
[04:50] *** razetime joined
[05:06] *** razetime_ joined
[05:06] *** razetime left
[05:09] *** eseyman left
[05:13] *** manu_ joined
[05:14] *** manu_ is now known as eseyman

[05:34] *** siavash joined
[05:37] *** razetime_ left
[05:38] *** razetime joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:02] <xinming_> m: my @a = [0 .. 99]; @a[(0 ... Inf, 3)];

[06:02] <camelia> rakudo-moar bef9ea40c: ( no output )

[06:02] <xinming_> m: my @a = [0 .. 99]; @a[(0 ... Inf, 3)].raku.say;

[06:02] <camelia> rakudo-moar bef9ea40c: OUTPUT: «(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, …»

[06:57] *** jpn joined
[06:58] *** merp joined
[07:06] *** sena_kun joined
[07:22] *** sena_kun left
[07:38] *** eroux left
[07:42] *** eroux joined
[08:00] *** andydude left
[08:02] *** dakkar joined
[08:21] *** Sgeo left
[09:07] *** jpn left
[09:22] *** sena_kun joined
[09:43] *** jpn joined
[10:10] <tadzik> oh hai

[10:11] <tadzik> I just transferred File-Find to raku-community-modules, as requested. There may have been more, so let me know if you're interested in anything – I'm not sure if anything else is in demand :)

[10:37] *** moritz_ is now known as moritz

[10:57] <Geth> ¦ ecosystem/main: 3e8671a813 | (Elizabeth Mattijsen)++ | META.list

[10:57] <Geth> ¦ ecosystem/main: Remove File::Find and JSON::Unmarshal

[10:57] <Geth> ¦ ecosystem/main: 

[10:57] <Geth> ¦ ecosystem/main: The now live in raku-community-modules and on fez

[10:57] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/3e8671a813

[11:00] <lizmat> tadzik: thank you for all the work!

[11:08] *** tadzik- joined
[11:12] *** tadzik is now known as mtadzik

[11:12] *** tadzik- is now known as tadzik

[11:13] *** tadzik left
[11:13] *** tadzik joined
[11:44] <tbrowder__> tadzik: thanks

[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:29] *** jpn left
[12:32] *** jpn joined
[12:36] *** jpn left
[12:45] *** jpn joined
[13:12] *** tejr left
[13:17] *** mtadzik left
[13:26] *** swaggboi left
[13:27] *** swaggboi joined
[13:36] *** tejr joined
[13:42] *** siavash left
[14:01] *** razetime left
[14:47] <tbrowder__> lizmat: ck my comments in File::Find ref the tags issue

[15:01] *** evalable6 left
[15:01] *** linkable6 left
[15:02] *** linkable6 joined
[15:02] *** evalable6 joined
[15:22] *** jpn left
[15:48] *** sftp left
[15:53] *** jpn joined
[15:57] *** jpn left
[15:58] *** jpn joined
[16:03] *** jpn left
[16:14] *** jpn joined
[16:19] *** jpn left
[16:30] *** sena_kun left
[16:35] *** dakkar left
[16:41] *** rf joined
[16:43] *** teatime joined
[16:44] *** teatwo left
[16:56] *** jpn joined
[17:02] *** jpn left
[17:13] *** sena_kun joined
[17:24] <discord-raku-bot> <librasteve> tadzik: would you say Grammar::BNF, Shell::Command and Test::Harness are in fair shape ... they all seem like good ones to preserve / continue

[17:32] *** jpn joined
[17:39] *** jpn left
[18:00] *** jpn joined
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:04] *** jpn left
[18:06] *** rf left
[18:24] *** jpn joined
[18:33] <xinming_> m: subset X of Str where *.so; class A { method a (X $x) { $x.say }; }; my A $a .= new; (1..10).hyper(:batch, :degree(2)).map({ $a.a($_); });

[18:33] <camelia> rakudo-moar 0ee022884: OUTPUT: «A worker in a parallel iteration (hyper or race) initiated here:␤  in block <unit> at <tmp> line 1␤␤Died at:␤    Type check failed in binding to parameter '$x'; expected X but got Int (1)␤      in method a at <tmp> line 1␤      in block  a…»

[18:33] <xinming_> I think this is a bug in method call, any ideas?

[18:38] <xinming_> m: subset X of Str where *.so; class A { method a (X $x) { $x.say }; }; my A $a .= new; (1..10).hyper(:batch(1), :degree(2)).map({ $a.a($_); });

[18:38] <camelia> rakudo-moar 0ee022884: OUTPUT: «A worker in a parallel iteration (hyper or race) initiated here:␤  in block <unit> at <tmp> line 1␤␤Died at:␤    Type check failed in binding to parameter '$x'; expected X but got Int (1)␤      in method a at <tmp> line 1␤      in block  a…»

[18:39] <discord-raku-bot> <Nahita> but you're passing an integer to what expects a nonempty string (X)? so it's not a bug i think

[18:39] <discord-raku-bot> <Nahita> if you call it with, e.g., $a.a("$_") it shouldn't error

[18:40] *** jpn left
[18:40] <discord-raku-bot> <Nahita> or ~$_

[18:50] *** notna joined
[18:56] *** notna left
[18:58] <xinming_> m: subset X of Str where *.so; class A { method a (X $x) { $x.say }; }; my A $a .= new; (1..10).hyper(:batch(1), :degree(2)).map({ $a.a("$_"); });

[18:58] <camelia> rakudo-moar 0ee022884: OUTPUT: «1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤»

[18:58] <xinming_> hmm, sorry, I don't narrow down the issue enough.

[18:58] <xinming_> Will try more, I do actually meet some kind of issue like this today.

[19:00] <xinming_> m: my %m = ("a" => 1, "b" => 2, "c" => 3); subset X of Str where * (elem) %m.keys.Set; class A { method a (X $x) { $x.say }; }; my A $a .= new; ("a" .. "c").hyper(:batch, :degree(2)).map({ $a.a($_); });

[19:00] <camelia> rakudo-moar 0ee022884: OUTPUT: «A worker in a parallel iteration (hyper or race) initiated here:␤  in block <unit> at <tmp> line 1␤␤Died at:␤    Constraint type check failed in binding to parameter '$x'; expected X but got Str ("a")␤      in method a at <tmp> line 1␤    …»

[19:01] <xinming_> Nahita, Now, this time is subset X of Str...

[19:01] <xinming_> this is exactly I discovered

[19:04] <discord-raku-bot> <nemokosch> is the hyper needed?

[19:05] <xinming_> nemokosch, without hyper, it runs fine.

[19:06] <xinming_> m: my %m = ("a" => 1, "b" => 2, "c" => 3); subset X of Str where * (elem) %m.keys.Set; class A { method a (X $x) { $x.say }; }; my A $a .= new; ("a" .. "c").map({ $a.a($_); });

[19:06] <camelia> rakudo-moar 0ee022884: OUTPUT: «a␤b␤c␤»

[19:06] <xinming_> we are talking about the bug triggered   :-)

[19:07] *** NemokoschKiwi joined
[19:07] <xinming_> So I think it's probably a edge case cause subset type validation fails with hyper/race

[19:08] *** vrurg left
[19:09] *** vrurg joined
[19:10] <NemokoschKiwi> m: my %m = ("a" => 1, "b" => 2, "c" => 3); subset X of Str where * (elem) %m.keys.Set; class A { method a (X $x) { $x.say }; }; my A $a .= new; $a.a(all "a" .. "c")

[19:10] <camelia> rakudo-moar 0ee022884: OUTPUT: «a␤b␤c␤»

[19:11] <NemokoschKiwi> I wish there were <<.

[19:11] <NemokoschKiwi> not just >>.

[19:11] <discord-raku-bot> <Nahita> seems so. BTW, you can do * (elem) %m instead of .keys.Set because keys are already unique and (elem) against a Map looks for keys

[19:11] <discord-raku-bot> <Nahita> or  * ~~ %m does the same thing also

[19:12] *** sftp joined
[19:12] *** notna joined
[19:12] <discord-raku-bot> <Nahita> * ∈ %m is the shortest

[19:13] <xinming_> Anyone here would confirm my bug?

[19:13] *** NemokoschKiwi left
[19:13] <discord-raku-bot> <Nahita> i ran with 2021.04 and got an error

[19:13] <xinming_> Let's not talk about the * (elem) %m.keys.Set     thing

[19:14] <discord-raku-bot> <nemokosch> oh right...

[19:14] <discord-raku-bot> <nemokosch> bisectable time

[19:14] *** NemokoschKiwi joined
[19:14] <NemokoschKiwi> keep calm, and...

[19:14] <NemokoschKiwi> bisectable6: my %m = ("a" => 1, "b" => 2, "c" => 3); subset X of Str where * (elem) %m.keys.Set; class A { method a (X $x) { $x.say }; }; my A $a .= new; ("a" .. "c").hyper(:batch, :degree(2)).map({ $a.a($_); });

[19:14] <bisectable6> NemokoschKiwi, Will bisect the whole range automagically because no endpoints were provided, hang tight

[19:15] <bisectable6> NemokoschKiwi, Output on all releases: https://gist.github.com/3cbc7dd556a11bead88dfaf096f36735

[19:15] <bisectable6> NemokoschKiwi, More than 4 changes to bisect, please try a narrower range like old=2017.09 new=HEAD

[19:15] <discord-raku-bot> <nemokosch> ultimately it's the same error everywhere

[19:15] *** NemokoschKiwi left
[19:16] <xinming_> I think it's a long time bug.

[19:19] *** notna left
[19:45] *** jpn joined
[19:50] *** xinming_ left
[19:53] *** jpn left
[19:55] *** xinming joined
[19:56] <xinming> If anyone responds to the bug, Please copy the answer agaiin, I restarted the machine

[19:58] *** jpn joined
[20:02] <discord-raku-bot> <librasteve> nice!

[20:05] <tadzik> hm, I built Test::Harness?

[20:05] *** jpn left
[20:06] <tadzik> https://github.com/tadzik/Test-Harness hmm, I don't think I did after all :P

[20:07] <tadzik> is it actually used?

[20:09] <discord-raku-bot> <librasteve> tadzik: sorry I took a deeper look and its only 72 lines marked May change. Probably too early to use this.

[20:10] <discord-raku-bot> <librasteve> I withdraw my request

[20:10] <xinming> m: m: my %m = ("a" => 1, "b" => 2, "c" => 3); subset X of Str where * (elem) %m.keys.Set; sub a (X $x) { $x.say }; ("a" .. "c").hyper(:batch(1), :degree(2)).map({ a($_); });

[20:10] <camelia> rakudo-moar 0ee022884: OUTPUT: «A worker in a parallel iteration (hyper or race) initiated here:␤  in block <unit> at <tmp> line 1␤␤Died at:␤    Constraint type check failed in binding to parameter '$x'; expected X but got Str ("a")␤      in sub a at <tmp> line 1␤      i…»

[20:10] <xinming> So, I think it's not only the method call will trigger the bug

[20:10] <xinming> but also sub calls.

[20:11] <discord-raku-bot> <librasteve> probably should remove from raku.land too if its not a real thing

[20:12] <discord-raku-bot> <librasteve> (or at least mark as deprecated somehow)

[20:30] *** bdju left
[20:32] *** bdju joined
[20:34] *** rf joined
[21:00] *** jpn joined
[21:39] *** rf left
[21:55] *** sena_kun left
[22:00] *** rf joined
[22:05] *** jpn left
[22:21] *** jpn joined
[22:33] *** Sgeo joined
[22:33] *** rf left
[22:43] *** squashable6 left
[22:44] *** squashable6 joined
[23:31] *** Guest667 joined
[23:54] *** Guest667 left
