[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:04] *** jpn joined
[00:08] *** jpn left
[00:16] *** discord-raku-bot left
[00:17] *** discord-raku-bot joined
[00:29] *** lichtkind left
[00:55] *** archenoth left
[00:58] *** jpn joined
[01:04] *** jpn left
[01:16] *** discord-raku-bot left
[01:17] *** discord-raku-bot joined
[01:53] *** razetime joined
[02:17] *** discord-raku-bot left
[02:17] *** discord-raku-bot joined
[02:23] *** epony joined
[02:24] *** jpn joined
[02:28] *** jpn left
[02:31] *** jjido left
[02:49] <rf> Is there an issue with Test::META? Consistently getting: Fetching [FAIL]: Test::META:ver<0.0.19>:auth<zef:jonathanstowe>:api<1.0> from https://360.zef.pm/T/ES/TEST_META/dc24995617245438c8d845d1924a5b4b908ab674.tar.gz

[03:03] *** rf left
[03:17] *** discord-raku-bot left
[03:17] *** discord-raku-bot joined
[03:48] *** rf joined
[03:55] *** rf left
[03:55] *** rf joined
[03:59] *** rf left
[03:59] *** razetime left
[04:18] *** Xliff left
[05:14] <guifa> constant R = RakuAST; # <--- best line of code ever when working with RakuAST lol

[05:18] *** linkable6 left
[05:18] *** evalable6 left
[05:19] *** evalable6 joined
[05:20] *** linkable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:21] *** heartburn left
[06:22] *** heartburn joined
[06:33] *** razetime joined
[06:39] *** razetime left
[07:05] *** Sgeo_ joined
[07:05] *** razetime joined
[07:06] *** razetime left
[07:07] *** samcv_ joined
[07:07] *** oodani_ joined
[07:07] *** Voldenet_ joined
[07:07] *** gabiruh joined
[07:08] *** Some-body_ joined
[07:10] *** xinming_ joined
[07:14] *** Ulti_ joined
[07:14] *** Sgeo left
[07:14] *** JRaspass left
[07:14] *** xinming left
[07:14] *** samcv left
[07:14] *** gabiruh_ left
[07:14] *** destroycomputers left
[07:14] *** oodani left
[07:14] *** Voldenet left
[07:14] *** DarthGandalf left
[07:14] *** Ulti left
[07:14] *** elcaro left
[07:14] *** Voldenet_ is now known as Voldenet

[07:14] *** Some-body_ is now known as DarthGandalf

[07:15] *** destroycomputers joined
[07:17] *** elcaro joined
[07:22] *** JRaspass joined
[07:39] *** epony left
[08:17] *** discord-raku-bot left
[08:17] *** xinming_ left
[08:17] *** discord-raku-bot joined
[08:17] *** xinming_ joined
[08:44] *** sena_kun joined
[08:55] *** xinming_ left
[08:55] *** xinming_ joined
[09:08] <Geth> ¦ examples/master: 4 commits pushed by (JJ Merelo)++

[09:08] <Geth> ¦ examples/master: 97473847c3 | Rename to address #95

[09:08] <Geth> ¦ examples/master: e4b179f7c8 | Solves the printing problem #95

[09:08] <Geth> ¦ examples/master: 8e87a400dc | Rename to address #95

[09:08] <Geth> ¦ examples/master: bb9a353770 | Commenting out as indicated by @tsalada, closes #95

[09:08] <Geth> ¦ examples/master: review: https://github.com/Raku/examples/compare/3694c3b03356...bb9a35377070

[09:55] *** evalable6 left
[09:57] *** evalable6 joined
[10:15] *** Xliff joined
[10:17] *** Xliff left
[10:31] *** xinming_ left
[10:31] *** xinming_ joined
[10:35] *** epony joined
[10:42] *** Sgeo_ left
[10:45] *** xinming_ left
[10:46] *** xinming_ joined
[11:35] *** lichtkind joined
[11:49] *** discord-raku-bot left
[11:49] *** discord-raku-bot joined
[11:52] *** Xliff joined
[11:57] *** discord-raku-bot left
[11:58] *** discord-raku-bot joined
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:26] *** xinming_ left
[12:26] *** xinming_ joined
[12:30] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { self.orig.comb("\n").elems.succ }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce>/

[12:30] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «===SORRY!===␤Unrecognized regex metacharacter < (must be quoted to match literally)␤at <tmp>:1␤------>  .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <⏏[bce>/␤Unrecognized regex metacharacter [ (must be quoted to match literally)␤at <…»

[12:30] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { self.orig.comb("\n").elems.succ }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce]>/

[12:30] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «b - 1␤c - 1␤e - 1␤»

[12:31] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { self.orig.substr(0, .to).comb("\n").elems.succ }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce>/

[12:31] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «===SORRY!===␤Unrecognized regex metacharacter < (must be quoted to match literally)␤at <tmp>:1␤------>  .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <⏏[bce>/␤Unrecognized regex metacharacter [ (must be quoted to match literally)␤at <…»

[12:31] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { self.orig.substr(0, .to).comb("\n").elems.succ }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce]>/

[12:31] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «No such method 'to' for invocant of type 'Any'.  Did you mean 'so'?␤  in method line at <tmp> line 1␤  in block  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[12:31] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { self.orig.substr(0, self.to).comb("\n").elems.succ }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce]>/

[12:31] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «b - 1␤c - 1␤e - 1␤»

[12:32] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { my $o = self.orig.substr(0, self.to); $o.say; $o.comb("\n").elems.succ }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce]>/

[12:32] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «ab␤b - 1␤ab\nc␤c - 1␤ab\nc\nde␤e - 1␤»

[12:32] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { my $o = self.orig.substr(0, self.to); $o.say; $o.lines.elems.succ }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce]>/

[12:32] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «ab␤b - 2␤ab\nc␤c - 2␤ab\nc\nde␤e - 2␤»

[12:33] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { my $o = self.orig.substr(0, self.to); $o.say; $o.lines.elems }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce]>/

[12:33] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «ab␤b - 1␤ab\nc␤c - 1␤ab\nc\nde␤e - 1␤»

[12:33] <Xliff> WTF?

[12:34] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { my $o = self.orig.substr(0, self.to.pred); $o.say; $o.lines.elems }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce]>/

[12:34] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «a␤b - 1␤ab\n␤c - 1␤ab\nc\nd␤e - 1␤»

[12:36] <Xliff> m: $a = "a"; $a.lines.elems.say'

[12:36] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '$a' is not declared.  Perhaps you forgot a 'sub' if this was␤intended to be part of a signature?␤at <tmp>:1␤------> <BOL>⏏$a = "a"; $a.lines.elems.say'␤»

[12:36] <Xliff> m: my $a = "a"; $a.lines.elems.say'

[12:36] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> my $a = "a"; $a.lines.elems.say⏏'␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier…»

[12:36] <Xliff> m: my $a = "a"; $a.lines.elems.say

[12:36] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «1␤»

[12:36] <Xliff> m: $a = "a\nb"; $a.lines.elems.say'

[12:36] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '$a' is not declared.  Perhaps you forgot a 'sub' if this was␤intended to be part of a signature?␤at <tmp>:1␤------> <BOL>⏏$a = "a\nb"; $a.lines.elems.say'␤»

[12:36] <Xliff> m: $a = "a\nb"; $a.lines.elems.say

[12:36] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '$a' is not declared.  Perhaps you forgot a 'sub' if this was␤intended to be part of a signature?␤at <tmp>:1␤------> <BOL>⏏$a = "a\nb"; $a.lines.elems.say␤»

[12:37] <Xliff> m: my $a = "a\nb"; $a.lines.elems.say

[12:37] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «2␤»

[12:37] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { my $o = self.orig.substr(0, self.to.pred); $o.say; $o.lines.elems }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce]>/

[12:37] <camelia> rakudo-moar c1c6ef26e: OUTPUT: «a␤b - 1␤ab\n␤c - 1␤ab\nc\nd␤e - 1␤»

[12:37] <Xliff> Odd.

[13:13] *** PipStuart joined
[13:16] *** xinming_ left
[13:17] *** xinming_ joined
[13:41] *** Homer_Simpson joined
[13:44] *** PipStuart left
[13:46] *** PipStuart joined
[13:50] <Xliff> m: use MONKEY-TYPING; augment class  Match { method line { my $o = self.orig.substr(0, self.to.pred); $o.say; $o.lines.elems }; }; say "{ .Str } - { .line }" for "ab\\nc\\nde\\n" ~~ m:g/ <[bce]>/

[13:50] <camelia> rakudo-moar a564ff379: OUTPUT: «a␤b - 1␤ab\n␤c - 1␤ab\nc\nd␤e - 1␤»

[13:51] <Xliff> Is there an easy way to take an array <A B C> and turn it into a hash refrence %<A><B><C> ?

[13:51] <guifa> Xliff yes

[13:51] <Xliff> guifa! Whoa! Please share!

[13:52] <guifa> m: my @foo = <A B C>; my %bar = A => %( B => %( C => "D" ) ); say %bar{||@foo}

[13:52] <camelia> rakudo-moar a564ff379: OUTPUT: «({B => {C => D}} (Any) (Any))␤»

[13:52] <guifa> errr

[13:52] <guifa> I thought that was put into main a few months ago?

[13:53] <Xliff> guifa: Where is the discussion on that?

[13:53] <guifa> m: use 6.e; my @foo = <A B C>; my %bar = A => %( B => %( C => "D" ) ); say %bar{||@foo}

[13:53] <camelia> rakudo-moar a564ff379: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared routine:␤    use used at line 1 (in Raku please use "v" prefix for pragma (e.g., "use v6;", "use v6.c;") instead)␤␤»

[13:53] <guifa> m: use v6.e; my @foo = <A B C>; my %bar = A => %( B => %( C => "D" ) ); say %bar{||@foo}

[13:53] <camelia> rakudo-moar a564ff379: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Raku v6.e requires PREVIEW modifier␤at <tmp>:1␤------> use v6.e⏏; my @foo = <A B C>; my %bar = A => %( B␤»

[13:53] <guifa> Xliff: I'll see if I remember, but the operator is || 

[13:53] <Xliff> m: use v6.e PREVIEW; my @foo = <A B C>; my %bar = A => %( B => %( C => "D" ) ); say %bar{||@foo}

[13:53] <camelia> rakudo-moar a564ff379: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Raku v6.e requires PREVIEW modifier␤at <tmp>:1␤------> use v6.e⏏ PREVIEW; my @foo = <A B C>; my %bar = A␤»

[13:53] *** dogbert11 left
[13:54] <guifa> it's like a super slip of sorts

[13:54] <guifa> but I can't think of the right search term to find it

[13:56] <Xliff>  my @foo = <A B C>; my %bar = A => %( B => %( C => "D" ) ); my %h; %h := %h{$_} for @foo; %h.gist.say

[13:56] <Xliff> m: my @foo = <A B C>; my %bar = A => %( B => %( C => "D" ) ); my %h; %h := %h{$_} for @foo; %h.gist.say

[13:56] <camelia> rakudo-moar a564ff379: OUTPUT: «Type check failed in binding; expected Associative but got Any (Any)␤  in block <unit> at <tmp> line 1␤␤»

[13:57] *** dogbert11 joined
[13:57] <Xliff> m: my @foo = <A B C>; my %bar = A => %( B => %( C => "D" ) ); my $h = %bar; $h := $h{$_} for @foo; $h.gist.say

[13:57] <camelia> rakudo-moar a564ff379: OUTPUT: «D␤»

[13:57] <Xliff> There we do.

[14:15] <Xliff> What role needs to be implemented for an object to work with for?

[14:16] <Xliff> I have Iterable with a method iterator, but it doesn't work.

[14:17] *** discord-raku-bot left
[14:18] *** discord-raku-bot joined
[14:20] <guifa> I can't remember if for checks for Positional or Iterable

[14:20] <guifa> probably Iterable I'd guess so 

[14:22] <discord-raku-bot> <Nemokosch> well, what happens?

[14:28] *** razetime joined
[14:30] *** dogbert11 left
[14:43] *** razetime left
[14:50] *** dogbert11 joined
[14:54] *** simcop2387 left
[14:54] *** perlbot left
[14:55] *** perlbot joined
[14:57] *** simcop2387 joined
[14:58] *** grondilu joined
[15:00] <grondilu> m: say ($(1,2),).Set === ($(1,2),).Set  # shouldn't that be True?

[15:00] <camelia> rakudo-moar a564ff379: OUTPUT: «False␤»

[15:04] <discord-raku-bot> <Nemokosch> wait, === ? Probably not

[15:04] <discord-raku-bot> <Nemokosch> they are reference types

[15:06] *** discord-raku-bot left
[15:06] *** discord-raku-bot joined
[15:08] <grondilu> m: say ($(1,2),).Set ~~ ($(1,2),).Set

[15:08] <camelia> rakudo-moar a564ff379: OUTPUT: «False␤»

[15:09] <grondilu> m: say ($(1,2),).Set (==) ($(1,2),).Set

[15:09] <camelia> rakudo-moar a564ff379: OUTPUT: «False␤»

[15:10] <grondilu> m: say ((1,2),).Set (==) ((1,2),).Set

[15:10] <camelia> rakudo-moar a564ff379: OUTPUT: «True␤»

[15:10] <grondilu> m: say ((1,2),).Set.elems

[15:10] <camelia> rakudo-moar a564ff379: OUTPUT: «2␤»

[15:10] <grondilu> 🤔

[15:12] <grondilu> what I want is to use `classify` with a test function returning a set.  I can't make it work when the set contains Lists.

[15:14] <moritz> that's because Lists can contain references, so they aren't good value types

[15:15] <discord-raku-bot> <Nemokosch> Actually, the WHICH method of a Set is a bit interesting

[15:15] <discord-raku-bot> <Nemokosch> maybe it is a value type, after all? <:cameliathink:897316667653247057>

[15:15] <discord-raku-bot> <Nemokosch> List surely isn't, that one returns something that looks like a plain address

[15:16] *** NemokoschKiwi joined
[15:16] <NemokoschKiwi> m: (1, 2).List.say; (1, 2).Set.say;

[15:16] <camelia> rakudo-moar a564ff379: OUTPUT: «(1 2)␤Set(1 2)␤»

[15:16] <NemokoschKiwi> oops, dum dum

[15:16] <NemokoschKiwi> m: (1,2).List.WHICH.say; (1, 2).Set.WHICH.say;

[15:16] <camelia> rakudo-moar a564ff379: OUTPUT: «List|3094028646688␤Set|AEA2F4CA275C3FE01D5709F416F895F283302FA2␤»

[15:18] <grondilu> what's the value type equivalent of a List, then?

[15:18] <grondilu> I doubt a Seq would work

[15:19] <grondilu> m: say ((1,2).Seq,).Set (==) ((1,2).Seq,).Set

[15:19] <camelia> rakudo-moar a564ff379: OUTPUT: «True␤»

[15:22] <NemokoschKiwi> https://raku.land/zef:lizmat/ValueList

[15:24] <discord-raku-bot> <grondilu> Not in core, really?

[15:25] <NemokoschKiwi> I don't know of anything else

[15:32] <Homer_Simpson> can someone make me a subroutine that read a single char from an array, compares it to a char that the user specifies, and returns true if it matches and false if it does not match

[15:34] <Homer_Simpson> it should also move to the next char if the user does $chr++ in a loop say 

[15:38] <Homer_Simpson> I couldnt find a built in routine that does what I want

[15:38] *** shmup left
[15:38] <Homer_Simpson> and my $chr is implicitally a string not a single character

[15:39] <Homer_Simpson> so even if I did substr (@contents, 0..4) it would by pass the range 

[15:40] <Homer_Simpson> if chr(32) != $chr = substr(@contents[$line], $chr, $chr++)) { ... }

[15:41] <Homer_Simpson> if ($chr = substr(@contents[$line], $chr, $chr++) ne chr(32)) { ... }

[15:41] <Homer_Simpson> idk

[15:42] <Homer_Simpson> it would be nice to have search(@contents[$line], $chr++, chr(32));

[15:43] <Homer_Simpson> if the file contents was 1 2\n11 2\n it should match space regardless if its 1, 11 or 111 etc

[15:44] <grondilu> Homer_Simpson: I suspect you think strings are arrays.  In raku, they're not.

[15:44] <Homer_Simpson> I know

[15:44] <grondilu> ok, sorry

[15:44] <Homer_Simpson> but im trying to find a way to do it

[15:44] *** guifa_ joined
[15:44] <Homer_Simpson> I do have a simular function: 

[15:45] <Homer_Simpson> https://pastebin.com/Jmcucthn

[15:45] <Homer_Simpson> so maybe just modify that one

[15:46] <Homer_Simpson> this one simply replaces a single char from a string

[15:46] *** guifa left
[15:49] <Homer_Simpson> I probably didnt' realize that $chr wasn't doing what I thought

[15:50] <grondilu> you could just convert your string into an array of characters, if that would make it easier for you.

[15:50] <Homer_Simpson> even with a range in substr

[15:50] <Homer_Simpson> how 

[15:50] <grondilu> m: say "foo".comb

[15:50] <camelia> rakudo-moar a564ff379: OUTPUT: «(f o o)␤»

[15:51] <Homer_Simpson> ok so comb returns a char array?

[15:52] <Homer_Simpson> ok interesting hmm

[15:52] <grondilu> an array of graphemes, I think.

[15:52] <grondilu> but in ascii that would be the same.

[15:53] <grondilu> also it may be a List or even a Seq.  Not sure.

[15:53] <grondilu> m: say "foo".comb.WHAT

[15:53] <camelia> rakudo-moar a564ff379: OUTPUT: «(Seq)␤»

[15:53] <grondilu> so affect it to an array.

[15:53] <grondilu> m: say my @txt = "foo".comb; say @txt.WHAT

[15:53] <camelia> rakudo-moar a564ff379: OUTPUT: «[f o o]␤(Array)␤»

[15:57] <Homer_Simpson> can I do say(my @c-array = comb(@contents));

[15:58] <grondilu> comb is not a routine IIRC

[15:58] <Homer_Simpson> ill try and make a routine from most of combs declaration

[15:59] <Homer_Simpson> for now, can it at least do @content.comb = @c-array

[16:01] <Homer_Simpson> so if @contente was ["hello"] , ["world"] then @c-array would be (('h','e','l','l','o'),('w','o','r','l','d'))

[16:01] <tbrowder> howdy, i have a new host with raku installed for use by root or my normal user. zef is currenty installed for use only by root. i want raku modules only installable by root but have them installed for use by all users. the modules should be installed into a standard directory created

[16:02] *** dogbert17 joined
[16:02] <tbrowder> under /opt/rakudo-pkg

[16:04] <Homer_Simpson> my @str = ("hello","world"); @str.comb = my @c-arrray; #Cannot modify an immutable Seq ((h e l l o   w o r l d))

[16:04] *** dogbert11 left
[16:04] <Xliff> Nemokosch: Got it working. Had to do .say for $a[] where A does Iterable

[16:04] <tellable6> Xliff, I'll pass your message to Nemokosch

[16:05] <Xliff> That's more like ".say for $a[]" where $a does Iterable, to clarify what is code and what isn't.

[16:05] <Xliff> m class A { }; role B { }; A does B; A.^name.say

[16:05] <Xliff> m: class A { }; role B { }; A does B; A.^name.say

[16:05] <camelia> rakudo-moar a564ff379: OUTPUT: «Cannot use 'does' operator on a type object A.␤  in block <unit> at <tmp> line 1␤␤»

[16:05] <grondilu> m: say my @c-array = (my @content = <hello world>)>>.comb

[16:05] <camelia> rakudo-moar a564ff379: OUTPUT: «[(h e l l o) (w o r l d)]␤»

[16:06] <Xliff> How can you pun a role on a class after the class is defined?

[16:06] <Homer_Simpson> my @str = ("hello","world");

[16:06] <Homer_Simpson> my @c-array = @str.comb;

[16:06] <Homer_Simpson> print(@c-array[1]);

[16:06] <Homer_Simpson> thx

[16:06] <Homer_Simpson> beat me to it  :)

[16:08] <Xliff> m: class A { }; role B { }; use MONKEY-TYPING; augment class A { also does B }; A.^name.say'

[16:08] <camelia> rakudo-moar a564ff379: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> ent class A { also does B }; A.^name.say⏏'␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement …»

[16:08] <tbrowder> that "standard" dir should be what in zef's terms ("--install-to=some-dir")?

[16:08] <Xliff> m: class A { }; role B { }; use MONKEY-TYPING; augment class A { also does B; }; A.^name.say'

[16:08] <camelia> rakudo-moar a564ff379: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> nt class A { also does B; }; A.^name.say⏏'␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement …»

[16:10] <Xliff> m: class A { }; role B { }; A.add_role(B); A.^name.say

[16:10] <camelia> rakudo-moar a564ff379: OUTPUT: «No such method 'add_role' for invocant of type 'A'␤  in block <unit> at <tmp> line 1␤␤»

[16:10] <Xliff> m: class A { }; role B { }; A.^add_role(B); A.^name.say

[16:10] <camelia> rakudo-moar a564ff379: OUTPUT: «A␤»

[16:10] <Xliff> m: class A { }; role B { }; A.^add_role(B); A.^compose; A.^name.say

[16:10] <camelia> rakudo-moar a564ff379: OUTPUT: «A␤»

[16:15] *** grondilu left
[16:17] <discord-raku-bot> <Nemokosch> Xliff: oh right, you know, "itemization" of Scalar containers

[16:37] *** shmup joined
[16:40] *** discord-raku-bot left
[16:40] *** discord-raku-bot joined
[16:54] <Homer_Simpson> ok so, how do I convert my file into an array where each line is one dimention and each ccharacter is another dimention, using comb

[16:54] <Homer_Simpson> ddimension*

[16:55] <Homer_Simpson> lines i.e up to \n

[16:56] <Homer_Simpson> I keep getting array out of index

[17:01] <Homer_Simpson> something like: my $fh = open "data.ldr", :r; my $line = $fh.lines; my $index; $fh.lines.comb; my @contents = ($line ; $index); close($fh);

[17:02] <Homer_Simpson> or: my $fh = open "data.ldr", :r; my @line = $fh.lines; my @index; $fh.lines.comb; my @contents = (@line ; @index); close($fh);

[17:13] <Homer_Simpson> brb

[17:17] *** discord-raku-bot left
[17:17] *** discord-raku-bot joined
[17:20] <Xliff> What's the proper parameter target when the parameter is a literal value?

[17:20] <Xliff> Rather, the proper RakuAST Node

[17:21] <Xliff> So, I'm trying to create the RakuAST for: method a("me") { ... }

[17:23] <lizmat> "file".IO.lines.map(*.comb.List)     # comes to mind Homer_Simpson 

[17:23] <guifa_> my @lines = $fh.lines.map(*.comb)

[17:23] <guifa_> lol

[17:23] <guifa_> jinx

[17:23] <lizmat> I think you need the .List otherwise you'll just get Seqs

[17:24] <Xliff> lizmat: Can you help, please?

[17:24] <lizmat> and either would break, or just created Arrays under the hood

[17:24] <Xliff> lizmat: Let me know if you are busy or not. I am not trying to intrude or interrupt. Just would like a little bit of help.

[17:24] <lizmat> Xliff: look for RakuAST::Method in t/12-rakuast

[17:25] <Xliff> lizmat: All occurrences are "expression => RakuAST::Method.new(" which doesn't look right

[17:26] <lizmat> what doesn't look right about it?

[17:26] <lizmat> RakuAST::Method.new(

[17:26] <lizmat>                 name => RakuAST::Name.from-identifier('meth-a'),

[17:26] <lizmat>                 body => RakuAST::Blockoid.new(

[17:26] <lizmat>                   RakuAST::StatementList.new(

[17:26] <lizmat>                     RakuAST::Statement::Expression.new(

[17:26] <lizmat>                       expression => RakuAST::IntLiteral.new(99)

[17:26] <lizmat>                     )

[17:26] <lizmat>                   ),

[17:26] <lizmat>                 )

[17:27] <Xliff> OK, sorry. 

[17:27] <Xliff> The example was too literal.,

[17:27] <Xliff> I need the signature object, not the method declaration.

[17:28] <Xliff> And that's the AST for "method meth-a { 99 }" not "method meth-a (99) { }"

[17:30] <lizmat> then look for RakuAST::Signature

[17:31] <lizmat> RakuAST::Signature.new(

[17:31] <lizmat>             parameters => (

[17:31] <lizmat>               RakuAST::Parameter.new(

[17:31] <lizmat>                 target => RakuAST::ParameterTarget::Var.new('$param')

[17:31] <lizmat>               ),

[17:31] <lizmat>             )

[17:32] <Xliff> It's not in signature.rakutest -- that one tests all possible variable-based signatures

[17:32] <Xliff> Same with statement.rakutest

[17:33] <Xliff> Same with label.rakutest

[17:33] <Xliff> Same with code.rakutest.

[17:33] <Xliff> That's all the occurrences.

[17:35] *** linkable6 left
[17:37] <lizmat> Xliff?  rak finds 29 occurrences of RakuAST::Signature in t/12-rakuast

[17:37] <Xliff> lizmat: I've  checked them all, not a single one deals with  a Parameter Listeral. They are all variables

[17:38] *** linkable6 joined
[17:38] <lizmat> ok, what is the code that you want to make?  /me is confused

[17:38] <Xliff> "method meth-a (99) { }

[17:38] <Xliff> What you've shown is: "method meth-a { 99 }"

[17:40] <lizmat> https://github.com/rakudo/rakudo/blob/main/t/12-rakuast/code.rakutest#L61   is: ($param)

[17:42] <lizmat> https://github.com/rakudo/rakudo/blob/main/t/12-rakuast/signature.rakutest#L58   is (Int $x)

[17:42] <lizmat> https://github.com/rakudo/rakudo/blob/main/t/12-rakuast/signature.rakutest#L205   is   (:first(:fst($var))!)

[17:42] <lizmat> aren't these sufficient examples?

[17:44] <Xliff> No!

[17:44] <Geth> ¦ doc: jmaslak++ created pull request #4185: throws-like does not work correctly a string for the exception name

[17:44] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4185

[17:44] <Xliff> lismat: Every example you've posted has a "$" in it!

[17:44] <Xliff> I'm not looking for variables, I need parameter Literals!

[17:45] <Xliff> m: multi sub a  (42) { "Boo!" }; multi sub a ($a) { "Not Boo!" }; say a(2); say a(42)

[17:45] <camelia> rakudo-moar a67c85984: OUTPUT: «Not Boo!␤Boo!␤»

[17:45] <lizmat> aah... ok

[17:45] <lizmat> lemme see if that a. works, and b. I can write a test for it  :-)

[17:46] <lizmat> m: say Q| sub foo (42) { } |.AST.dump    # that may not work yet

[17:46] <camelia> rakudo-moar a67c85984: OUTPUT: «CompUnit 𝄞 /home/camelia/EVAL_0:1 ⎡ sub foo (42) { } ⎤␤  StatementList 𝄞 /home/camelia/EVAL_0:1 ⎡sub foo (42) { } ⎤␤    Statement::Expression ▪𝄞 /home/camelia/EVAL_0:1 ⎡sub foo (42) { } ⎤␤      Sub 𝄞 /home/camelia/EVAL_…»

[17:48] <Xliff> D'oh! I forgot about --target!

[17:49] <Xliff> Aaand.... --target ast not so good.

[17:50] <discord-raku-bot> <p6steve> comb is both a sub and a method ... but you need to supply a matcher first if using the sub variant

[17:50] <discord-raku-bot> <p6steve> m:say my @c-array = comb(/./,"foo");

[17:54] <Homer_Simpson> thx @lizmat 

[17:59] *** pleasantpheasant joined
[18:00] <pleasantpheasant> Testing IRC-Discord bridge

[18:00] *** reportable6 left
[18:01] <discord-raku-bot> <Nemokosch> huhu

[18:02] *** raku-discord joined
[18:02] *** reportable6 joined
[18:02] <pleasantpheasant> Testing again...

[18:02] <discord-raku-bot> <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <raku-discord> <4raku-bot> <pleasantpheasant> Testing again...

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <raku-discord> <4raku-bot> <raku-discord>  <4raku-bot> <pleasantpheasant> Testing again... <4raku-bot> <raku-discord> <4raku-bot> <raku-discord> <4raku-bot> <raku-discord> <4stevied> which one was that, the one that lets you use a menu to navigate it?

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <raku-discord> <4raku-bot> <raku-discord> <4raku-bot> <raku-discord>  <4raku-bot> <pleasantpheasant> Testing again... <4raku-bot> <raku-discord> <4raku-bot> <raku-discord> <4raku-bot> <raku-discord> <4stevied> which one was that, the one that lets you use a menu to navigate it?

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <raku-discord> <4raku-bot> <raku-discord> <4raku-bot> <raku-discord> <4raku-bot> <raku-discord>  <4raku-bot> <pleasantpheasant> Testing again... <4raku-bot> <raku-discord> <4raku-bot> <raku-discord> <4raku-bot> <raku-discord> <4stevied> which one was that, the one that lets you use a menu to navigate it?

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<pleasantpheasant>** Testing again...

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<plea

[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<disc

[18:02] *** raku-discord left
[18:02] <discord-raku-bot> <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<discord-raku-bot>** <Raku bridge> **<disc

[18:03] <pleasantpheasant> Well, *that* was less than ideal.

[18:03] <Homer_Simpson> holy mackrel

[18:03] <discord-raku-bot> <Zephyr> indeed...

[18:03] <discord-raku-bot> <Rog> I expected double messages but not the ping-pong

[18:04] <discord-raku-bot> <Zephyr> me neither

[18:11] *** squashable6 left
[18:12] *** squashable6 joined
[18:16] *** codesections joined
[18:17] *** jpn joined
[18:27] <tbrowder> can anyone say if installing zef only in /opt/rakudo-pkg/bin would work for both root and a normal user for using installed modules?

[18:33] *** NemokoschKiwi left
[18:44] *** jpn left
[18:47] *** josh24 joined
[18:50] *** jpn joined
[18:51] *** josh24 left
[18:52] *** djerius left
[18:52] *** djerius joined
[19:12] <El_Che> tbrowder: the user will able to use the root installed modules. But it's a good idea to install zef as a user imho

[19:13] <tellable6> 2023-01-20T23:29:13Z #raku <melezhik> El_Che - thanks - will let you know

[19:47] *** discord-raku-bot left
[19:49] <tbrowder> El_Che: thanks. i understand, and generally agree. for my pristine box, though, and i being the only user for now, want to see if i can do better at installing modules for use system-wide. i'm writing a bash script to help me do that.

[19:50] <tbrowder> i've run into weird cases with mixed installations and haven't had much luck getting a handle on it.

[19:51] <tbrowder> and there's nothing at the moment stopping any other user from installing for themselves.

[19:52] <tbrowder> so i'm keeping zef out of my user account until it's too much pain

[19:53] *** raku-discord joined
[19:55] *** Zephyr[m] joined
[19:55] <Zephyr[m]> test

[19:57] <raku-discord> <2Zephyr> test2

[20:01] <El_Che> tbrowder: I use it 2 ways. Local in my home on my user machines. as root in /opt in containers

[20:02] <raku-discord> <5Nemokosch> woah

[20:02] <raku-discord> <5Nemokosch> I mean, it does look fancy, not gonna lie 😄

[20:02] <raku-discord> <5Nemokosch> why the number 5 in front of my name though

[20:03] <raku-discord> <2Zephyr> ...I'm not quite sure, lemme check

[20:03] <raku-discord> <2Zephyr> it doesn't appear on Matrix, lemme just log into IRC

[20:03] <raku-discord> <2Zephyr> https://cdn.discordapp.com/attachments/633753286209699870/1066810337191538838/image.png

[20:03] <tbrowder> El_Che: by containers are you talking docker VMs or qemu VMs or?

[20:04] *** Zep20230123 joined
[20:05] <raku-discord> <2Zephyr> test

[20:05] <raku-discord> <2Zephyr> @Nemokosch doesn't show up for me

[20:05] <raku-discord> <2Zephyr> https://cdn.discordapp.com/attachments/633753286209699870/1066810841703391293/image.png

[20:05] *** jpn left
[20:05] <raku-discord> <5Nemokosch> https://irclogs.raku.org/raku/live.html

[20:05] <raku-discord> <5Nemokosch> well, where does the log get it from, then

[20:06] <raku-discord> <2Zephyr> weird, https://colabti.org/irclogger/irclogger_log/raku doesn't have it

[20:07] <raku-discord> <5Nemokosch> true..

[20:07] <raku-discord> <5Nemokosch> well I guess the logging will need to be adapted either way

[20:07] <raku-discord> <2Zephyr> maybe this?

[20:07] <raku-discord> <2Zephyr> https://cdn.discordapp.com/attachments/633753286209699870/1066811417900109925/image.png

[20:07] <raku-discord> <5Nemokosch> could be

[20:08] <raku-discord> <5Nemokosch> they do show some correspondence to our colors, that's for sure

[20:08] *** Guest93 joined
[20:09] *** Guest93 left
[20:09] <raku-discord> <2Zephyr> I think we should look into bridging other channels as well, also removing the webring channel since it doesn't exist anymore

[20:09] <raku-discord> <2Zephyr> I guess that's for tomorrow though, I'll go sleep for today

[20:10] <raku-discord> <5Nemokosch> okay, good night 🙂

[20:13] *** raku-discord left
[20:13] *** discord-raku-bot joined
[20:13] <discord-raku-bot> <Zephyr> test2

[20:14] <discord-raku-bot> <Zephyr> I guess the outcome was the new bridge adapting, but yeah

[20:16] <discord-raku-bot> <Nemokosch> oh well

[20:16] <discord-raku-bot> <Nemokosch> tricky-tricky

[20:16] <discord-raku-bot> <Nemokosch> name change?

[20:16] <discord-raku-bot> <Zephyr> name change + colored nickname disabling

[20:16] *** Sgeo joined
[20:16] <discord-raku-bot> <Zephyr> I didn't realize there was an option for the latter

[20:16] <discord-raku-bot> <Nemokosch> oh cool

[20:17] *** Zephyr[m] left
[20:17] *** Zep20230123 left
[20:20] <tbrowder> El_Che: ah, i just found /opt/rakudo-pkg/bin/zef-as-root, that looks like i should use that shebang line in my script. do you know what its intended purpose is?

[20:21] *** squashable6 left
[20:22] *** squashable6 joined
[20:54] *** jpn joined
[20:58] *** sena_kun left
[21:07] *** Geth left
[21:07] *** Geth joined
[21:07] *** Geth left
[21:08] *** Geth joined
[21:11] *** rf joined
[21:53] *** jpn left
[22:05] <Geth> ¦ Raku-Steering-Council: codesections++ created pull request #55: Announcement of JJ's resignation

[22:05] <Geth> ¦ Raku-Steering-Council: review: https://github.com/Raku/Raku-Steering-Council/pull/55

[22:07] *** Geth left
[22:08] *** Geth joined
[22:12] *** Geth left
[22:12] *** Geth joined
[22:18] <[Coke]> -1 on the colors.

[22:20] *** Xliff left
[22:30] <El_Che> sad to see JJ go

[23:10] <discord-raku-bot> <Nemokosch> is there a nice and straightforward way to split a list by series of identical values?

[23:30] *** epony left
[23:51] *** lichtkind left
