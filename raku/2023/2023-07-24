[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:28] *** jpn joined
[00:32] *** jpn left
[01:11] *** razetime joined
[01:37] *** Geth left
[01:37] *** Geth joined
[01:41] *** Geth left
[01:41] *** Geth joined
[01:42] *** razetime left
[01:43] *** razetime joined
[02:43] *** bisectable6 left
[02:43] *** coverable6 left
[02:43] *** bloatable6 left
[02:43] *** statisfiable6 left
[02:43] *** quotable6 left
[02:43] *** squashable6 left
[02:43] *** linkable6 left
[02:43] *** shareable6 left
[02:43] *** tellable6 left
[02:43] *** committable6 left
[02:43] *** releasable6 left
[02:43] *** reportable6 left
[02:43] *** nativecallable6 left
[02:43] *** unicodable6 left
[02:43] *** benchable6 left
[02:43] *** greppable6 left
[02:43] *** notable6 left
[02:43] *** sourceable6 left
[02:43] *** evalable6 left
[02:43] *** coverable6 joined
[02:43] *** tellable6 joined
[02:43] *** sourceable6 joined
[02:43] *** shareable6 joined
[02:43] *** reportable6 joined
[02:43] *** greppable6 joined
[02:44] *** bisectable6 joined
[02:44] *** squashable6 joined
[02:44] *** bloatable6 joined
[02:44] *** releasable6 joined
[02:44] *** linkable6 joined
[02:45] *** evalable6 joined
[02:45] *** nativecallable6 joined
[02:45] *** quotable6 joined
[02:45] *** notable6 joined
[02:45] *** committable6 joined
[02:46] *** benchable6 joined
[02:46] *** statisfiable6 joined
[02:46] *** unicodable6 joined
[03:46] *** quotable6 left
[03:46] *** nativecallable6 left
[03:46] *** bloatable6 left
[03:46] *** tellable6 left
[03:46] *** linkable6 left
[03:46] *** committable6 left
[03:46] *** greppable6 left
[03:46] *** benchable6 left
[03:46] *** reportable6 left
[03:46] *** statisfiable6 left
[03:46] *** releasable6 left
[03:46] *** sourceable6 left
[03:46] *** bisectable6 left
[03:46] *** shareable6 left
[03:46] *** unicodable6 left
[03:46] *** evalable6 left
[03:46] *** notable6 left
[03:46] *** squashable6 left
[03:46] *** coverable6 left
[03:46] *** shareable6 joined
[03:46] *** quotable6 joined
[03:46] *** notable6 joined
[03:46] *** benchable6 joined
[03:47] *** nativecallable6 joined
[03:47] *** statisfiable6 joined
[03:47] *** tellable6 joined
[03:47] *** coverable6 joined
[03:47] *** linkable6 joined
[03:48] *** squashable6 joined
[03:48] *** greppable6 joined
[03:48] *** unicodable6 joined
[03:48] *** bloatable6 joined
[03:48] *** sourceable6 joined
[03:49] *** evalable6 joined
[03:49] *** bisectable6 joined
[03:49] *** committable6 joined
[03:49] *** releasable6 joined
[03:49] *** reportable6 joined
[04:28] *** razetime left
[04:29] <guifa__> lizmat thank you for working on all of the regex nodes.  my polyglot::regex module is looking a million times cleaner 

[04:29] <tellable6> 2023-07-22T17:05:34Z #raku-dev <lizmat> guifa are you aware of https://github.com/edumentab/p6-ecma262regex ?

[04:31] <guifa__> lizmat: I was.  I used it to get an idea of how things should work, but it's lacks the trickiest part: captures

[04:32] <guifa__> or it has it, but doesn't handle the differences

[04:33] <guifa__> so if you fed it (a(b(c))) it would translate it to raku (a(b(c)))

[04:33] <guifa__> the problem is that $3 would not yield c, rather Nil

[04:34] <guifa__> Also, if you do 'abc'.match(rx/(.)+/) in JS, the first match is just a, but in Raku it produces a list of matches

[04:35] <guifa__> so really (.)+ should convert to (.).* in Raku

[04:36] <guifa__> In either case, some shenanigans are required to ensure that positional captures go left to right.  Also, if you naïvely insert named captures, you'll run into problems: Raku ignores named captures for the purpose of positional matches, but in Javascript, all captures are positional, and names are just aliases that point there

[04:39] <guifa__> I solved it in my module by inserting applying a role to the $¢, and reporting each capture back to the mothership with its left-to-right id, and then providing a name to positional id relationship.  AT-POS and AT-KEY get overriden so its transparent to the user.  there may be a more interesting way to do it by searching through the match tree, but I was lazy ^_^

[04:41] *** tea3po joined
[04:43] *** tea3po left
[04:43] *** tea3po joined
[04:44] *** teatwo left
[05:11] *** razetime joined
[05:20] *** razetime left
[05:33] *** tea3po left
[05:33] *** tea3po joined
[05:35] *** siavash joined
[05:39] *** andydude joined
[05:54] *** jpn joined
[05:58] *** jpn left
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:02] *** committable6 left
[07:02] *** evalable6 left
[07:02] *** bisectable6 left
[07:02] *** coverable6 left
[07:02] *** notable6 left
[07:02] *** releasable6 left
[07:02] *** unicodable6 left
[07:02] *** statisfiable6 left
[07:02] *** squashable6 left
[07:02] *** linkable6 left
[07:02] *** shareable6 left
[07:02] *** sourceable6 left
[07:02] *** reportable6 left
[07:02] *** nativecallable6 left
[07:02] *** benchable6 left
[07:02] *** greppable6 left
[07:02] *** quotable6 left
[07:02] *** bloatable6 left
[07:02] *** tellable6 left
[07:03] *** linkable6 joined
[07:03] *** evalable6 joined
[07:03] *** bloatable6 joined
[07:04] *** sourceable6 joined
[07:04] *** releasable6 joined
[07:04] *** benchable6 joined
[07:04] *** squashable6 joined
[07:04] *** bisectable6 joined
[07:04] *** unicodable6 joined
[07:04] *** committable6 joined
[07:05] *** notable6 joined
[07:05] *** quotable6 joined
[07:05] *** reportable6 joined
[07:05] *** nativecallable6 joined
[07:05] *** shareable6 joined
[07:05] *** coverable6 joined
[07:05] *** greppable6 joined
[07:05] *** tellable6 joined
[07:05] *** statisfiable6 joined
[07:26] *** jpn joined
[07:43] *** sena_kun joined
[07:49] *** jpn left
[07:57] *** dakkar joined
[08:07] *** jpn joined
[08:13] *** Sgeo left
[08:37] *** andydude left
[09:27] *** jpn left
[09:40] *** jpn joined
[09:46] *** sena_kun left
[10:02] *** razetime joined
[11:02] *** notable6 left
[11:02] *** linkable6 left
[11:02] *** evalable6 left
[11:02] *** evalable6 joined
[11:02] *** linkable6 joined
[11:03] *** notable6 joined
[11:18] *** razetime left
[11:58] *** siavash left
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:10] *** jpn left
[12:34] *** jpn joined
[12:41] *** jpn left
[12:46] *** jpn joined
[13:09] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2023/07/24/2023-30-morevids/

[13:10] <El_Che> again? RWN is the unforgiving ticking of time

[13:10] <El_Che> :)

[13:11] <El_Che> lizmat: the twitter thing :)

[13:11] <lizmat> hehe   :-)

[13:16] <El_Che> "I noticed that the Raku developers were deeply in love with Raku and were excited about the possibilities of the future. They had a great energy." <- the parent of the response you cited

[13:31] *** andydude joined
[13:32] <guifa__> It amazes me the number of people who misunderstood ovid's post re Perl 8

[13:33] <lizmat> well, I think the "had" is a bIt of a meh  :-)

[13:34] <guifa__> I mean he was narrating in the past, I didn't think anything of it.  Thanks to him I have another nother side project / challenge

[13:34] <lizmat> If I would post something like "P5P had a great energy" in /r/perl, it would get a lot of hatemail

[13:35] <guifa__> last TPRC I got the challenge to do the polyglot regex module and now because lizmat++ got those nodes, I can really finish it off 

[13:35] *** jpn left
[13:35] <guifa__> this TPRC Ovid challenged me to add in logical programming into it

[13:36] *** jpn joined
[13:40] *** jpn left
[13:42] <guifa__> I'm thinking something like logic Foo { fact x { cat(tom) }; rule z { animal(X) :- cat(X) } }; Foo.query('animal(X)') # X = tom

[13:42] <guifa__> obviously though `rule` doesn't really work though since that's used in grammars 

[13:43] <lizmat> SmokeMachine might also be interested in that ?

[13:45] <guifa__> yup, we talked briefly about it

[13:45] *** jpn joined
[13:52] <discord-raku-bot> <nemokosch> yeah I'd assume that "they had a great energy" was simply meant to be about the conference, or whatever related to that

[13:53] <discord-raku-bot> <nemokosch> a retrospective on something you were exposed to, kind of thing

[13:54] <discord-raku-bot> <nemokosch> the "no love for Raku" comment gets the post right in my opinion - or at least I misunderstand it the same way 😛

[13:54] <SmokeMachine> lizmat: yes! guifa__ if I can help on that somehow… please let me know…

[13:57] <SmokeMachine> guifa__: would that make sense to implement the syntax with an interchangeable engine? To make it possible to implement different ones?

[13:58] <discord-raku-bot> <nemokosch> the commenter's position was that ultimately, Perl is merely an ubiquitous legacy tool and basically any sort of development that doesn't serve the legacy use case is in vain, moreover harmful

[13:59] <discord-raku-bot> <nemokosch> it's not my business whether that's right or wrong, perhaps it should rather be the community that can decide that

[13:59] <lizmat> a point I made 5 years ago already: https://www.perl.com/article/an-open-letter-to-the-perl-community/

[14:01] <lizmat> the response was overwhelmingly: how dare you suggest something like that

[14:03] <Geth> ¦ problem-solving: lizmat assigned to codesections Issue It is time to drop the "(formerly Perl 6)" https://github.com/Raku/problem-solving/issues/377

[14:03] <Geth> ¦ problem-solving: lizmat unassigned from codesections Issue It is time to drop the "(formerly Perl 6)" https://github.com/Raku/problem-solving/issues/377

[14:06] *** Sgeo joined
[14:44] *** teatime joined
[14:47] *** tea3po left
[15:12] *** buffet left
[16:03] *** knarkhov joined
[16:08] <knarkhov> Hi, all! Does anyone know what's happened with Tyil's https://git.tyil.nl/? There were a lot of dependency modules for Rakudo Star, since the repo is down my nightly builds are totally in errors...

[16:09] <[Coke]> .seen tyil

[16:09] <tellable6> [Coke], I saw tyil 2021-06-20T16:51:00Z in #raku-dev: <tyil> that should be all of the (non-archived) docs

[16:09] <[Coke]> Have the modules been taken over by someone else in the community? I'm surprised to see a 3rd party git repo.

[16:10] <El_Che> knarkhov: as far as I know someone else took over rakudo star. Anton iirc?

[16:10] <[Coke]> (that is, not gitlab or github)

[16:11] <[Coke]> https://git.tyil.nl/rakudo-star/ is not the official Star repo, if that's what you're looking for.

[16:11] <[Coke]> maybe you need to start with https://github.com/rakudo/star ?

[16:12] <knarkhov> I'm building custom RStar distro with specific modules from sources

[16:12] <[Coke]> ok, so Star isn't the problem, it's the dep you have on tyil's repo - can you name one of the repos you're trying to get from there?

[16:13] <knarkhov> Tyil had all his modules in one place, and those ones are used in RS repo, but some of them (those in official RS repo have outdated version)

[16:13] <[Coke]> also: please don't call a custom distro "Star", it will cause confusion.

[16:14] <[Coke]> My recommendation would be to update those versions in RS itself.

[16:15] <discord-raku-bot> <nemokosch> well, if he never wanted them to live in some more centralized environment then I guess this was set to happen one day

[16:15] <discord-raku-bot> <nemokosch> by the way, the META6 outage also makes Collection fail

[16:15] <knarkhov> that's the list: Log, Log-Colored, Hash-Merge, IO-Path-XDG, Config, Config-Parser-toml, Config-Parser-yaml

[16:16] *** jpn left
[16:17] <[Coke]> https://raku.land/?q=log+colored, for example, is listed as living in tyil's repo, and there's no other repo listed.

[16:17] <knarkhov> RS official distro uses this repo as well https://github.com/rakudo/star/blob/master/etc/modules.txt 

[16:18] <knarkhov> as I said a lot of modules are taken from his repo and I'm not sure that we have a mirrors at GH/GL

[16:19] <[Coke]> Sure. if tyil's gone (and their repos are gone), we should remove it from Star. If someone has a clone of that repo, we could theoretically put it into github under community modules, but someone should reach out to tyil.

[16:19] <discord-raku-bot> <nemokosch> yes, probably the most luck would be to have a copy lying somewhere around

[16:20] <[Coke]> the easy solution: remove those modules from star.

[16:20] <[Coke]> I wouldn't include any unsupported modules in that distro.

[16:22] <discord-raku-bot> <nemokosch> then it would basically vanish, reading through the included, well, these are rather distributions than modules

[16:23] <discord-raku-bot> <nemokosch> does this Readline fork really work? https://github.com/lathropd/perl6-readline

[16:25] <[Coke]> based on that fact that one of these is on cpan, maybe tyil@cpan.org can reach him.

[16:28] <[Coke]> (also on github.com/Tyil)

[16:29] <[Coke]> maybe open a star bug and tag him.

[16:30] <knarkhov> I think he is rebuilding his home server rack: https://www.tyil.nl/post/2023/07/23/my-new-server-rack-mieshu/, looks like some stuff is at migration stage. Hope git will be up again soon

[16:30] *** jpn joined
[16:30] <discord-raku-bot> <nemokosch> anyway, this is something to get prepared for, I mean that code like that can fall out at any moment

[16:31] <knarkhov> exactly

[16:35] *** dakkar left
[16:41] *** knarkhov left
[16:41] *** teatwo joined
[16:42] *** jpn left
[16:44] *** teatime left
[16:44] *** jpn joined
[16:46] <tonyo> ^ that is why fez doesn't allow modules to be deleted after 24h

[16:46] <tonyo> not that it would help if AWS went out of business tomorrow

[16:48] <discord-raku-bot> <nemokosch> but yeah, I guess we convince ourselves that if AWS or Github fails, there will be much bigger problems...

[16:48] <discord-raku-bot> <nemokosch> and consequently that it wouldn't be let happen

[16:48] *** jpn left
[16:51] <[Coke]> I have moved from wanting a rack in my home to using a cloud server if it comes up.

[16:52] <[Coke]>  ... but mostly it doesn't come up anymore

[16:52] <[Coke]> (for me)

[16:59] <discord-raku-bot> <scullucs> How can I tell if/where IO::String is implemented in the Rakudo source repo? (I can "use IO::String", but it's behaving differently today compared to when I was using many months ago.)

[17:00] <discord-raku-bot> <scullucs> I used to be able to created an instance, then call the eof() method on it, which would return False if there was something left to read in it, but nowadays it appears to always return True.

[17:01] <discord-raku-bot> <scullucs> *create

[17:01] <lucs> And docs.raku.org appears to know nothing about IO::String.

[17:08] <discord-raku-bot> <nemokosch> is it really a built-in?

[17:08] <discord-raku-bot> <nemokosch> doesn't seem like that

[17:12] <discord-raku-bot> <scullucs> True. And indeed in the past I had installed it with zef.

[17:12] <discord-raku-bot> <scullucs> But the behaviour has changed, so to try to figure out what was going on, I zef-uninstalled it, yet it still can be used.

[17:13] <discord-raku-bot> <scullucs> And just to be sure, I nuked every single .precomp directory I could find.

[17:13] <discord-raku-bot> <nemokosch> I can't use IO::String with Rakudo 2023.04

[17:13] <discord-raku-bot> <scullucs> Hmm... I have 2023.02.

[17:13] <discord-raku-bot> <nemokosch> run zef list --installed

[17:14] <discord-raku-bot> <scullucs> Good idea...

[17:14] <discord-raku-bot> <nemokosch> in case there is some instance lying around or idk

[17:14] <discord-raku-bot> <scullucs> .h▸ zef list --installed | grep String ===> Found via inst#/shome/lucs/rakubrew/versions/moar-2023.02/share/perl6/site ===> Found via inst#/shome/lucs/rakubrew/versions/moar-2023.02/share/perl6/core String::CRC32:ver<0.05>:auth<cosimo> String::Utils:ver<0.0.15>:auth<zef:lizmat> 

[17:15] <discord-raku-bot> <scullucs> Weird.

[17:15] <discord-raku-bot> <nemokosch> don't forget (probably) my biggest "ceterum censeo" with dependency management

[17:16] <discord-raku-bot> <scullucs> Listening...

[17:16] <discord-raku-bot> <nemokosch> that modules are wrapped into distributions

[17:16] <discord-raku-bot> <nemokosch> and even though you can only install distributions, and only distributions contain a proper amount of metadata, your dependencies are the underlying modules

[17:17] <discord-raku-bot> <nemokosch> so IO::String can be something living in a distribution called my-little-pony and you wouldn't notice

[17:17] <discord-raku-bot> <scullucs> Oooh...

[17:17] <discord-raku-bot> <nemokosch> this is a truly horrendous design

[17:18] <discord-raku-bot> <nemokosch> do you have Text::CSV by any chance?

[17:18] <discord-raku-bot> <scullucs> Yep.

[17:18] <discord-raku-bot> <nemokosch> I suspect (based on zef search) that it has an IO::String

[17:18] <discord-raku-bot> <scullucs> I think you're right.

[17:19] <discord-raku-bot> <nemokosch> https://github.com/Tux/CSV/blob/master/META6.json

[17:19] <discord-raku-bot> <nemokosch> there

[17:19] <discord-raku-bot> <scullucs> I'll test by uninstalling Text::CSV.

[17:19] <discord-raku-bot> <nemokosch> just how many people need to be bitten by this bullshit for it to be addressed

[17:20] <discord-raku-bot> <scullucs> Yeah, once that is uninstalled, IO::String can't be 'use'd.

[17:20] <discord-raku-bot> <nemokosch> the usual cop(e)-out is "always specify the author and the version, duh"

[17:21] <discord-raku-bot> <nemokosch> but then what was the whole purpose of this system, if you basically need to run extra laps to do the reasonable thing (=depend on what is actually installed)

[17:21] *** observant_meat joined
[17:22] *** [Coke] left
[17:23] <discord-raku-bot> <scullucs> Heh, here's something "interesting". So I earlier uninstalled IO::String, and just now, Text::CSV, and I do, and get, this:

[17:24] <discord-raku-bot> <nemokosch> there is this banal truth that people don't know what they don't know

[17:24] <discord-raku-bot> <scullucs> .h▸ zef install IO::String        ===> Searching for: IO::String ===> Updating fez mirror: https://360.zef.pm/ ===> Updated fez mirror: https://360.zef.pm/ ===> Updating rea mirror: https://raw.githubusercontent.com/Raku/REA/main/META.json ===> Updated rea mirror: https://raw.githubusercontent.com/Raku/REA/main/META.json ===> Testing: Text::CSV:ver<0.012>:auth<github:Tux> ===> Testing [OK] for

[17:24] <discord-raku-bot> Text::CSV:ver<0.012>:auth<github:Tux> ===> Installing: Text::CSV:ver<0.012>:auth<github:Tux> 

[17:24] <discord-raku-bot> <nemokosch> higher version number wins 🤡

[17:25] <discord-raku-bot> <scullucs> Er, but I didn't ask for Text::CSV, eh.

[17:25] <discord-raku-bot> <nemokosch> no no. You asked for a module named IO::String

[17:25] <discord-raku-bot> <nemokosch> and zef will give you the highest version of that

[17:26] <discord-raku-bot> <nemokosch> ... which is to be found in Text::CSV 🤡

[17:26] <discord-raku-bot> <scullucs> Hmm...

[17:26] <discord-raku-bot> <scullucs> LTA

[17:26] <discord-raku-bot> <nemokosch> it absolutely doesn't care at this point if there is a distribution named exactly the same way

[17:27] <discord-raku-bot> <nemokosch> it's actually pretty dangerous; I'd say dangerous enough to not be allowed to happen implicitly

[17:28] <discord-raku-bot> <nemokosch> one can just hijack any module installed without the :auth<> yadda yadda if they give a sufficiently large version number to the malicious distribution it's in

[17:30] <discord-raku-bot> <nemokosch> And as everyone can see really, people just don't know about this, and they can't anticipate it

[17:34] <discord-raku-bot> <nemokosch> I hope you will never feel safe again after installing something without the :auth<> yadda yadda; you'd be very right with that

[17:34] <discord-raku-bot> <scullucs> Okay, I get it. I just looked at the Text::CSV META6.json file, and it indeed "provides" IO::String, thus the conflict.

[17:35] <discord-raku-bot> <scullucs> Right 😦

[17:37] <discord-raku-bot> <nemokosch> It's crippling to think that this would be pretty easy to fix from the technical side (I mean, dependencies should just be the distributions) - however, there is the (legitimate) counter-argument that it would (potentially/probably) break the ecosystem into atoms

[17:39] <discord-raku-bot> <nemokosch> and to that I can't say anything still, apart from this shouldn't have ever made it into production 🤷‍♂️

[17:42] <discord-raku-bot> <scullucs> Halfway "solution": at compile time, if more than one non-"auth" qualified Baz::Foo is available when use'ing it, fail to compile and insist that the "auth" (and maybe "version") be specified?

[17:51] <discord-raku-bot> <scullucs> Er, I meant: "..., if use'ing a non-"auth" qualified Baz::Foo and more than one is available, ..."

[17:55] *** sena_kun joined
[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:15] <discord-raku-bot> <nemokosch> Yeah well, there are two things

[18:15] <discord-raku-bot> <nemokosch> Dependency management and module resolution

[18:16] <discord-raku-bot> <nemokosch> Dependency management pretends to be module resolution and that could have been avoided easily

[18:17] <discord-raku-bot> <nemokosch> Module resolution has no easy fix if all modules are stored globally and the names don't have to be unique

[18:18] <discord-raku-bot> <nemokosch> Arguably, both should fail loud and clear when there's ambiguity, though

[18:18] <discord-raku-bot> <nemokosch> Because that's always better than guessing wrong

[18:21] *** knarkhov joined
[18:22] <discord-raku-bot> <nemokosch> at that point it's not even sure if the user can recover actually

[18:24] *** knarkhov left
[18:25] <discord-raku-bot> <nemokosch> if the dependency resolution succeeds but then the code complains about the ambiguity in the use statement that's probably hell though

[18:26] *** observant_meat left
[18:28] <discord-raku-bot> <nemokosch> @scullucs oh right, isn't it also funny that zef install IO::String installs Text::CSV but zef uninstall IO::String won't uninstall it?

[18:39] *** hellwolf left
[18:49] *** jpn joined
[18:58] *** jpn left
[19:21] *** dogbert17 joined
[19:34] *** Zen93 joined
[19:34] *** Zen93 left
[19:55] *** jpn joined
[19:59] *** jpn left
[20:59] *** linkable6 left
[20:59] *** evalable6 left
[20:59] *** benchable6 left
[20:59] *** sourceable6 left
[20:59] *** unicodable6 left
[20:59] *** releasable6 left
[20:59] *** greppable6 left
[20:59] *** bisectable6 left
[20:59] *** nativecallable6 left
[20:59] *** bloatable6 left
[20:59] *** statisfiable6 left
[20:59] *** tellable6 left
[21:00] *** benchable6 joined
[21:00] *** sourceable6 joined
[21:00] *** releasable6 joined
[21:00] *** linkable6 joined
[21:01] *** unicodable6 joined
[21:01] *** jpn joined
[21:01] *** greppable6 joined
[21:01] *** bisectable6 joined
[21:02] *** tellable6 joined
[21:02] *** statisfiable6 joined
[21:02] *** evalable6 joined
[21:02] *** nativecallable6 joined
[21:02] *** bloatable6 joined
[21:06] <tbrowder__> lovate

[21:07] <tbrowder__> pls disregard

[21:09] <tbrowder__> i have an IO/String from hoelzro pre 2019

[21:11] <tbrowder__> lizmat: any progress on getting File::Find transferred from tadzik?

[21:13] *** eroux left
[21:17] *** eroux joined
[21:21] *** jpn left
[22:20] *** sena_kun left
[22:28] *** rf joined
[22:40] <lizmat> tbrowder__: I privmsg'd tadzik, no reply yet

[22:49] *** rf left
[22:53] <discord-raku-bot> <nemokosch> oh I even sent an email several months ago...

[23:15] <tbrowder__> lizmat: thank you

[23:17] *** jpn joined
[23:22] *** jpn left
[23:30] *** teatime joined
[23:32] *** teatwo left
