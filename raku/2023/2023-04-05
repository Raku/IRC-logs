[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:26] *** theesm left
[00:29] *** theesm joined
[01:04] *** xinming left
[01:06] *** xinming joined
[01:08] *** bigdata left
[02:08] *** unicodable6 left
[02:08] *** bloatable6 left
[02:08] *** sourceable6 left
[02:08] *** tellable6 left
[02:08] *** sourceable6 joined
[02:10] *** unicodable6 joined
[02:10] *** teatwo left
[02:10] *** tellable6 joined
[02:11] *** teatwo joined
[02:11] *** bloatable6 joined
[02:12] *** tea3po joined
[02:16] *** teatwo left
[02:34] <japhb> [Coke]: Proof of concept to see if I'm going in the right direction: https://gist.github.com/japhb/e146da8b3cfbc34ce7c555a7e1f14ada

[02:37] *** lizmat left
[02:38] *** lizmat_ joined
[02:53] *** razetime joined
[03:31] *** Marelle joined
[03:31] <Marelle> Hello *waves*.

[03:36] *** razetime left
[03:45] *** razetime joined
[03:45] <discord-raku-bot> <lucs> m: class Baz { class Foo::Jub { } }; class Foo { }; Baz::Foo::Jub.new;

[03:45] <discord-raku-bot> <Raku eval>  

[03:46] <lucs> m: class Baz { class Foo::Jub { } }; class Foo { }; Baz::Foo::Jub.new;

[03:46] <lucs> ï¿¼

[03:46] <lucs> @lucs

[03:46] <lucs> m: class Baz { class Foo::Jub { } }; class Foo { }; Baz::Foo::Jub.new;

[03:46] <camelia> rakudo-moar f380b87ba: ( no output )

[03:46] <camelia> rakudo-moar f380b87ba: ( no output )

[03:47] <discord-raku-bot> <lucs> (sorry about the IRC-Discord mixup)

[03:56] *** razetime left
[04:03] *** guifa joined
[04:06] *** guifa_ left
[05:00] <discord-raku-bot> <pelevesque> Is there an official way in the Perl universe to create a To-Do list? Like Changes is usually the Changes file with capital C and no extension. Should I create a ToDo file, or maybe have it in my README.md?

[05:06] *** linkable6 left
[05:06] *** evalable6 left
[05:07] *** evalable6 joined
[05:09] *** linkable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:28] *** eponym joined
[06:28] *** epony left
[06:31] *** BabyLoveWoodrose left
[06:31] *** eponym left
[06:32] *** Vyrus joined
[06:36] *** epony joined
[07:16] *** jpn joined
[07:41] <moritz> nothing official, many projects link to github/gitlab repo, and have issues for the TODOs there

[07:54] *** epony left
[07:56] *** Sgeo left
[08:00] *** epony joined
[08:09] *** dakkar joined
[08:14] <discord-raku-bot> <pelevesque> Thanks @moritz. Thanks for your book too on Regexes and Grammars, it really helped me.

[08:15] <moritz> you're welcome, I'm glad you liked it :-)

[08:41] *** xinming left
[09:10] *** guifa left
[09:11] *** guifa joined
[09:33] *** jpn left
[09:34] *** jpn joined
[10:34] *** linkable6 left
[10:34] *** evalable6 left
[10:34] *** sourceable6 left
[10:34] *** bloatable6 left
[10:34] *** notable6 left
[10:34] *** nativecallable6 left
[10:34] *** statisfiable6 left
[10:34] *** bisectable6 left
[10:34] *** reportable6 left
[10:34] *** squashable6 left
[10:34] *** releasable6 left
[10:34] *** committable6 left
[10:34] *** benchable6 left
[10:34] *** tellable6 left
[10:34] *** quotable6 left
[10:34] *** unicodable6 left
[10:34] *** coverable6 left
[10:34] *** greppable6 left
[10:34] *** shareable6 left
[10:35] *** statisfiable6 joined
[10:35] *** releasable6 joined
[10:35] *** linkable6 joined
[10:35] *** reportable6 joined
[10:35] *** unicodable6 joined
[10:35] *** shareable6 joined
[10:35] *** sourceable6 joined
[10:35] *** bloatable6 joined
[10:35] *** bisectable6 joined
[10:36] *** quotable6 joined
[10:36] *** notable6 joined
[10:36] *** nativecallable6 joined
[10:36] *** squashable6 joined
[10:36] *** greppable6 joined
[10:36] *** tellable6 joined
[10:37] *** evalable6 joined
[10:37] *** committable6 joined
[10:37] *** coverable6 joined
[10:37] *** benchable6 joined
[10:49] *** holyghost joined
[10:55] *** Geth__ left
[10:55] *** Geth joined
[11:35] *** emanuellee joined
[11:35] *** emanuellee left
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:07] *** theesm left
[12:29] *** theesm joined
[12:44] *** lizmat_ left
[12:44] *** lizmat joined
[12:52] *** jpn left
[13:18] *** jgaz joined
[13:24] *** holyghost left
[13:25] *** grondilu joined
[13:31] *** jpn joined
[13:36] *** jpn left
[13:47] *** jpn joined
[14:10] *** tea3po left
[14:10] *** tea3po joined
[14:38] *** xinming joined
[15:09] *** simcop2387 left
[15:09] *** perlbot left
[15:14] *** Marelle left
[15:15] *** Sgeo joined
[15:30] *** simcop2387 joined
[15:31] *** perlbot joined
[16:08] <discord-raku-bot> <Anton Antonov> Is there a translator of Perl5 regexes into Raku regexes. (RakuAST solutions are of interest too...)

[16:09] <discord-raku-bot> <Anton Antonov> (Also, I aware that one can use the adverb :Perl5 in Raku regex applications.)

[16:11] <grondilu> Even cooler would be a translator from raku's regexes to P5's.

[16:11] <lizmat> not that I know of: also which version of Perl regexes?

[16:11] <tellable6> 2023-04-04T13:04:33Z #raku <Nemokosch> grondilu: I suspect this has something to do with which operations copy and which do not

[16:13] <discord-raku-bot> <Anton Antonov> @lizmat The version of regexes is Perl5  -- maybe this is not specific enough. (I do not know...)

[16:14] <lizmat> Perl's regexes have gone through some changes since the Raku branch of :Perl5 was mad

[16:14] <lizmat> e

[16:16] <discord-raku-bot> <Anton Antonov> @lizmat Ok. I have to experiment with regexes I want to translate first and see which Perl5 version they adhere to.

[16:16] <lizmat> of note: I think :k isn't supported in :Perl5

[16:16] <discord-raku-bot> <Anton Antonov> @grondilu "Even cooler would be a translator from raku's regexes to P5's." -- Yes, I agree.

[16:16] <lizmat> why?

[16:17] <lizmat> 1. Raku's regexes have features that cannot be supported by Perl

[16:17] <lizmat> 2. why first write Raku code to generate Perl ?

[16:20] <discord-raku-bot> <Anton Antonov> @lizmat On the subject of Raku and Perl5 regexes from- and to-translations, I am mostly interested in: 1) speed comparisons, and 2) communicating solutions to others. (For example, Perl5 regexes is something I can bravely give to Java and Python programmers.)

[16:20] <lizmat> "Perl5 regexes is something I can bravely give to Java and Python programmers"   colour me surprised

[16:21] <grondilu> lizmat: because that would allow to write regexes for other languages.

[16:21] <lizmat> I thought the Perl regex linenoise was something that Python programmers really hate ?

[16:21] <grondilu> bash/python/javascript etc

[16:21] <discord-raku-bot> <Anton Antonov> @lizmat ðŸ™‚ yeah, but they should be able to experiment with those... and come up with their own solutions.

[16:22] <grondilu> a compatibility layer of sort

[16:22] <discord-raku-bot> <Anton Antonov> I have module / package naming question. (Again)

[16:22] <lizmat> grondilu: compatibility layers generally are the lowest common denominator

[16:22] <lizmat> Raku regexes are not that

[16:23] <grondilu> well in my mind the layer would be the P5 regexes

[16:24] <perryprog> What exactly is the necessity, though?

[16:24] <grondilu> writing a P5 regex is no fun, but it's typically the only one available in many progr lang

[16:24] <perryprog> (Ironically I was reading through the whole regex documentation page for the last two days, since I hadn't yet familiarized myself with them. I'm quite proficient in POSIX regex.)

[16:25] <grondilu> so the idea would be you write the raku grammar and translate it into Perl regexes

[16:25] <lizmat> grondilu: but even Perl regexes aren't standard ?

[16:25] <grondilu> aren't they?

[16:25] <japhb> [Coke]: Was the proof of concept I posted last night close to what you were looking for?

[16:26] <grondilu> I mean there is a POSIX standard for regexes

[16:27] <perryprog> There's POSIX Regex (what you get with grep), POSIX extended regex (what you get with grep -e... I think), and then there's PCRE which isn't POSIX compliant

[16:27] <perryprog> (I think)

[16:27] <discord-raku-bot> <Anton Antonov> I want to reprogram this WL package "NLP-Template-Engine" (https://github.com/antononcube/NLP-Template-Engine) into Raku.  "NLP-Template-Engine" generates code based in different computational specifications, using different Machine Learning (ML) algorithms. What would be a good Raku module name for that? Here are my current variants: (1) "ML::NLP::TemplateEngine", (2) "DSL::NLPTemplateEngine".

[16:28] <lizmat> check the perldeltas: 5.10 added support for recursive patterns and named capture buffers

[16:28] <lizmat> https://perldoc.perl.org/5.10.0/perldelta#Regular-expressions

[16:28] <grondilu> point taken

[16:28] <lizmat> grondilu: and that was just the start

[16:29] <lizmat> https://perldoc.perl.org/5.14.0/perldelta#Regular-Expressions

[16:29] <lizmat> etc. etc. etc

[16:29] <discord-raku-bot> <Anton Antonov> @lizmat Thanks!

[16:29] <lizmat> that was one of the reason the "use v5" project failed: there was no clear target anymore

[16:30] <discord-raku-bot> <Anton Antonov> LOL

[16:31] *** evalable6 left
[16:31] *** linkable6 left
[16:31] *** dakkar left
[16:33] *** evalable6 joined
[16:33] *** linkable6 joined
[16:34] *** jgaz left
[16:34] <discord-raku-bot> <Anton Antonov> @lizmat I experimented with the code you provided for my rule-to-regex conversion question. It worked on "moar-blead" only, so I had to program special converter. (Fairly ad hoc / naive at this point, but "does the job.")

[16:36] <lizmat> cool  :-)

[16:57] *** jpn left
[16:58] *** ProperNoun left
[17:04] *** jgaz joined
[17:07] *** grondilu left
[17:09] *** ProperNoun joined
[17:20] *** jpn joined
[17:36] *** kaskal left
[17:45] *** kaskal joined
[18:00] *** reportable6 left
[18:01] *** jpn left
[18:02] *** reportable6 joined
[18:06] *** jpn joined
[18:12] *** jpn left
[18:19] *** jpn joined
[18:26] *** jpn left
[18:27] *** jpn joined
[18:29] *** perlbot left
[18:29] *** perlbot joined
[18:30] *** simcop2387 left
[18:31] *** simcop2387 joined
[18:43] *** jpn left
[19:12] *** jpn joined
[19:52] <discord-raku-bot> <pelevesque> fez question: When I run fez review, I see a bunch of .DS_Store files in my Bundle Manifest. I have not committed these in Git. They are Apple made files. I guess when fez creates the bundle my Mac adds them? Does this mean I should include a line for them in my .gitignore?

[19:53] <discord-raku-bot> <pelevesque> https://cdn.discordapp.com/attachments/633753286209699870/1093262082578862190/Screenshot_2023-04-05_at_3.47.39_PM.png

[19:59] <tonyo> pelevesque: the mac finder creates those (includes the file dialogs, not fez), they contain info about how to display the folder.  you should just add a `.DS_Store` to your .gitignore and fez will ignore those

[20:00] <tonyo> fez also bundles what's on disk and not what's committed 

[20:00] *** epony left
[20:01] <discord-raku-bot> <pelevesque> I see. Normally, it is not recommended to add .DS_Store to the repo itself, I guess I can add it to my global .gitignore file?

[20:01] <discord-raku-bot> <lucs> Would listing them in .git/info/exclude work?

[20:03] *** epony joined
[20:09] *** xkr47 left
[20:10] *** jpn left
[20:13] *** jpn joined
[20:31] <tonyo> that would also work

[20:31] <tonyo> a lot of modules list .DS_Store in their git ignore

[20:32] <tonyo> the exclude file also works locally but fez doesn't read from it

[20:36] <discord-raku-bot> <lucs> Hmm... So fez would pick up those files, unfortunate.

[20:36] <tonyo> yea, adding those to the .gitignore would be better.  particularly for forks and other people debugging

[21:13] *** evalable6 left
[21:13] *** linkable6 left
[21:13] *** jgaz left
[21:15] *** linkable6 joined
[21:16] *** evalable6 joined
[21:47] <[Coke]> japhb: see the gist, will have to review it

[21:48] <[Coke]> japhb: sorry, was at jury duty all day

[21:48] <japhb> [Coke]: Should be runnable standalone (delta having the two modules at the top, of course).  It will just run a simulation.

[21:49] <japhb> I'm pretty sure that's a valid excuse for not paying attention to the outside world.  :-D

[21:50] <japhb> The idea was to have a class that can accept commands to run, queue them up to limit excessive parallelism, and then run through them showing output, coloring errors, and keeping a status bar

[21:51] <guifa> Anton Antonov / grondilu / lizmat : I'm working on a module that allows inline use of various regex flavors

[21:52] <guifa> it's actually fairly easy to create a parser for regex (minus code blocks) and then do a superficial translation.  the question is how perfect you want it to be (did you know that . doesn't mean the same thing in all regex? ha)

[22:00] <discord-raku-bot> <Anton Antonov> @guifa Hmm... yeah, I also have a parser of some regex expressions in "Grammar::TokenProcessing" (https://raku.land/zef:antononcube/Grammar::TokenProcessing). But -- as you say -- making the details and flavors parsed takes some time develop (and devotion to testing.)

[22:00] <guifa> I've got ecma mostly all finished

[22:01] <discord-raku-bot> <Anton Antonov> Great -- I anxious, eager, willing to try it!

[22:01] <guifa> but the idea for mine is ecma/python/p5/java --> raku, not the other way around

[22:12] <discord-raku-bot> <Anton Antonov> That would be great.

[22:13] <discord-raku-bot> <Anton Antonov> ... for me. (grondilu wants it in the other direction.)

[22:15] *** Oshawott joined
[22:17] <discord-raku-bot> <Anton Antonov> @guifa Is your current version in a GitHub repository?

[22:17] <guifa> probably 95% current version yeah

[22:18] *** archenoth left
[22:18] <guifa> https://github.com/alabamenhu/PolyglotRegexen

[22:19] <guifa> ight now unfortunately it transplites to Raku regex-as-string, because when I wrote it RakuAST::Regex::* wasn't yet available

[22:19] <discord-raku-bot> <Anton Antonov> That is fine (and what I need right now.)

[22:23] <discord-raku-bot> <Anton Antonov> @guifa Actually, I remember seeing the PolyglotRegexen repository before -- somehow I forgot about it...

[22:35] <guifa> I need to go back and revisit it soon 

[23:18] *** linkable6 left
[23:18] *** evalable6 left
[23:19] *** evalable6 joined
[23:20] *** linkable6 joined
[23:22] *** archenoth joined
[23:24] *** jpn left
[23:25] *** Oshawott left
[23:32] *** tea3po left
[23:33] *** teatime joined
