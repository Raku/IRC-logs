[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:36] <SmokeMachine> m: proto bla {}; say &bla.^attributes

[00:36] <camelia> rakudo-moar d45fb6e5d: OUTPUT: «(List @!dispatchees Mu $!dispatcher int $!flags Mu $!inline_info Mu $!package List @!dispatch_order Mu $!op_props Mu $!phasers Mu $!why Code $!do Signature $!signature List @!compstuff)␤»

[01:01] *** evalable6 left
[01:01] *** linkable6 left
[01:02] *** linkable6 joined
[01:04] *** evalable6 joined
[01:30] *** guifa left
[02:27] *** tea3po joined
[02:30] *** teatwo left
[02:47] *** guifa joined
[02:51] <Xliff> m: Method.^attributes.map(*.name).gist.say;

[02:51] <camelia> rakudo-moar d45fb6e5d: OUTPUT: «(@!dispatchees $!dispatcher $!flags $!inline_info $!package @!dispatch_order $!op_props $!phasers $!why $!do $!signature @!compstuff)␤»

[02:54] <Xliff> Yeah, so .candidates uses Method::@!dispatchees... and I currently have yet to find a way to access that without nqp.

[03:46] *** squashable6 left
[03:49] *** squashable6 joined
[04:16] *** rf left
[05:16] *** squashable6 left
[05:16] *** greppable6 left
[05:16] *** bloatable6 left
[05:16] *** shareable6 left
[05:16] *** statisfiable6 left
[05:16] *** quotable6 left
[05:16] *** committable6 left
[05:16] *** bisectable6 left
[05:16] *** releasable6 left
[05:16] *** evalable6 left
[05:16] *** reportable6 left
[05:16] *** unicodable6 left
[05:16] *** linkable6 left
[05:16] *** benchable6 left
[05:16] *** sourceable6 left
[05:16] *** tellable6 left
[05:16] *** notable6 left
[05:16] *** coverable6 left
[05:16] *** nativecallable6 left
[05:16] *** shareable6 joined
[05:16] *** evalable6 joined
[05:16] *** reportable6 joined
[05:16] *** unicodable6 joined
[05:16] *** sourceable6 joined
[05:17] *** releasable6 joined
[05:17] *** benchable6 joined
[05:17] *** greppable6 joined
[05:17] *** bloatable6 joined
[05:17] *** committable6 joined
[05:17] *** quotable6 joined
[05:17] *** nativecallable6 joined
[05:18] *** coverable6 joined
[05:18] *** squashable6 joined
[05:18] *** statisfiable6 joined
[05:18] *** tellable6 joined
[05:18] *** notable6 joined
[05:18] *** bisectable6 joined
[05:19] *** linkable6 joined
[05:46] *** jpn joined
[05:51] *** jpn left
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[06:06] *** jpn joined
[06:19] *** jpn left
[06:25] *** jpn joined
[06:30] *** Guest43 joined
[06:49] *** Guest43 left
[06:52] *** jpn left
[07:05] *** jpn joined
[07:09] *** jpn left
[07:27] *** abraxxa joined
[07:29] *** abraxxa1 joined
[07:31] *** abraxxa left
[07:32] *** abraxxa joined
[07:35] *** abraxxa1 left
[07:46] *** RonaldR34g4m joined
[07:47] *** Vyrus left
[07:55] *** dakkar joined
[08:07] *** Sgeo left
[08:13] *** sena_kun joined
[08:47] *** jpn joined
[09:06] *** abraxxa1 joined
[09:08] *** abraxxa left
[09:13] *** jpn left
[09:13] *** jpn joined
[09:21] *** abraxxa1 left
[09:23] *** CIAvash left
[09:29] *** abraxxa joined
[09:32] <discord-raku-bot> <nemokosch> if there's a way using nqp, that's not all that bad

[09:32] <discord-raku-bot> <nemokosch> this is really within the guts of the language, or better said, not even the language but the runtime

[09:33] <discord-raku-bot> <nemokosch> the language most probably doesn't say anything about doing something like this

[09:46] *** jpn left
[10:02] *** jpn joined
[10:06] *** jpn left
[10:14] *** jpn joined
[10:16] *** siavash joined
[10:20] *** siavash left
[10:21] *** jpn left
[10:23] *** siavash joined
[10:27] *** jpn joined
[10:35] *** jpn left
[10:42] <Xliff> nemokosch: True. I'd just add it and see what happens, but I am worried about the particular order.

[10:42] <Xliff> I think it might be OK, if I just copy one proto's @!dispatchees to another...

[10:42] <Xliff> Now if only I knew how to do that! :)

[10:42] <Xliff> nqp is not my thing quite yet.

[10:50] *** melezhik joined
[10:50] <melezhik> .

[10:50] <tellable6> 2023-07-10T13:39:09Z #raku <SmokeMachine> melezhik: I’m also playing with configurations: https://github.com/FCO/Configuration

[10:50] <melezhik> SmokeMachine - thanks

[10:56] *** siavash left
[10:57] <melezhik> what's up in Raku world? I am thinking about publishing short SparrowCI post on testing modules against multiple versions of Rakudo -

[10:57] <melezhik> https://dev.to/melezhik/sparrowci-testing-your-raku-module-against-different-rakudo-distributions-2f9d-temp-slug-7828095?preview=090daff6ac7249fc56f4aa1a6b84f27cddcad68783c07cff0b7778157c5a1e2820b80de286eb863cde8cb95907bc1778f99020e81d44b4d226cefed6

[10:58] *** siavash joined
[11:01] *** melezhik left
[11:04] <discord-raku-bot> <nemokosch> that sounds great

[11:10] *** abraxxa left
[11:16] *** abraxxa joined
[11:24] *** jpn joined
[11:40] *** euandreh left
[11:41] *** jpn left
[11:45] *** jpn joined
[11:47] <tbrowder__> .ask antononcube can you say what os and supporting equip you're using for producing your mathematica and raku work as shown in article above? thnx

[11:47] <tellable6> tbrowder__, I'll pass your message to antononcube

[11:50] * lizmat clickbaits https://rakudoweekly.blog/2023/07/10/2023-28-composition/

[11:51] *** siavash left
[11:53] *** jpn left
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:22] *** guifa left
[12:25] *** guifa joined
[12:52] *** abraxxa left
[13:08] <discord-raku-bot> <antononcube> @nemokosch As I promised I LLM-generated an R article, “R is arcane, designed by a committee, and LISP-curseless” : https://github.com/antononcube/RakuForPrediction-book/blob/main/Articles/LLM-generated/R-is-arcane-by-comittee-and-LISP-curseless-PaLM.md

[13:08] <discord-raku-bot> <antononcube> It is short, and not very acidic.

[13:08] *** guifa left
[13:09] *** guifa joined
[13:10] *** guifa left
[13:11] *** jpn joined
[13:25] *** deoac left
[13:28] *** guifa joined
[13:32] *** abraxxa joined
[13:40] *** xinming_ left
[13:42] *** xinming_ joined
[13:50] <discord-raku-bot> <antononcube> @tbrowder I almost exclusively work within macOS. I write / make the Mathematica and Raku packages and articles with Apple MacBookPro's (with Apple Silicon M1 chip or Intel chip.)

[13:54] <tbrowder__> antononcube, thank you, i appreciate your contributions to the Raku community

[13:55] <discord-raku-bot> <antononcube> @tbrowder Thank you, good to hear! (And I appreciate your contributions and enthusiasm.)

[14:07] *** guifa left
[14:10] *** guifa joined
[14:28] *** teatwo joined
[14:31] *** tea3po left
[14:34] *** guifa left
[14:40] *** siavash joined
[14:42] *** guifa joined
[14:42] *** guifa left
[14:45] *** guifa joined
[14:49] *** guifa left
[14:56] *** siavash left
[15:24] *** guifa joined
[15:28] *** abraxxa left
[15:47] *** Sgeo joined
[15:48] *** [Coke] joined
[15:50] *** guifa left
[16:00] *** jpn left
[16:13] *** guifa joined
[16:19] *** rf joined
[16:40] *** rf left
[16:40] *** dakkar left
[16:44] <[Coke]> maybe you can if you recompose?

[16:45] * guifa got an evil idea from TPRC but doesn't know how he might be able to pull it off (might not be doable at all)

[16:45] * [Coke] hopes all tprc have a very good conference </bugs bunny meme>

[16:45] <guifa> Someone made a module called goto::file, when it hits that, it continues processing code from that point onward at the top of a new file, potentially even to include recursion

[16:46] <guifa> why?  I don't know.  Feels like an interesting challenge to do though given raku's grammar parsing

[17:03] *** willthechill joined
[17:08] *** willthechill left
[17:21] *** willthechill joined
[17:25] <xinming_> Now, I'm learning neural network things, really wish to have a raku lib for neural network design

[17:31] *** guifa left
[17:32] <tbrowder__> antononcube: you should use that tool to create a draft of an article on why one should prefer raku over python

[17:35] *** guifa joined
[17:37] *** rf joined
[17:50] <discord-raku-bot> <antononcube> @tbrowder I attempt that.

[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:05] <tbrowder__> this is a broad question i know, but here goes: without testing, do you thinks it's more efficient to read a large hash (3000 or more keys, plus several subkeys with long strings as values) from a compiled rakumod file or a JSON file?

[18:05] *** ljyv joined
[18:05] *** ljyv left
[18:09] <tbrowder__> i guess the advantage of the json file is it can saved with any new data versus the static rakumod file. but the json file would need a reliable home on disk.

[18:10] <japhb> tbrowder__: My suspicion is that CBOR would be faster than JSON, and I would *guess* that compiled Rakumod would be even faster, but I haven't actually done that comparison (I compared the speed of a number of data formats a year or two ago, but I didn't include "compiled Raku code" as one of those).

[18:11] <japhb> tbrowder__: https://github.com/japhb/serializer-perf

[18:12] <tbrowder__> thnx, was that an advent article? it sounds familiar.

[18:13] <japhb> (Note that the .raku/EVAL was treating it as a data file, *not* as a precompiled module, for pretty much the reason you pointed out -- I was only measuring things that were easy to R/W.)

[18:13] <japhb> I don't think so ... but it might have been in an RWN or mentioned in a talk or some such.

[18:17] <Geth> ¦ docker/2023.06: 7cae2b1fce | (Daniel Mita)++ | 5 files

[18:17] <Geth> ¦ docker/2023.06: Bump to 2023.06

[18:17] <Geth> ¦ docker/2023.06: review: https://github.com/Raku/docker/commit/7cae2b1fce

[18:17] <Geth> ¦ docker: m-dango++ created pull request #55: Bump to 2023.06

[18:17] <Geth> ¦ docker: review: https://github.com/Raku/docker/pull/55

[18:17] *** abraxxa-home joined
[18:23] <[Coke]> huh. I can get to https://twitter.com/liztormato/status/1677625536858804224 without a twitter account, but not the tweet itself.

[18:24] *** guifa left
[18:27] <[Coke]> (I knew the latter, am surpised by the former)

[18:27] *** guifa joined
[18:31] <tbrowder__> japhb: i do remember that. maybe i can add a test for read-only after converting json data to a rakumod file for compiling.

[18:41] <japhb> That would be great, tbrowder__ !  Thank you in advance!  :-)

[19:16] <tbrowder__> you are welcome. i might have to ask for help, so there's that.

[19:24] *** guifa left
[19:30] <japhb> Heh, no worries.  :-)

[19:42] <tbrowder__> how about changing the repo name to the name of App-SerializerPerf per the name at Raku.land: 'App::SerializerPerf'?

[19:45] <discord-raku-bot> <nemokosch> distribution names were always meant to be system path friendly, isn't that right?

[19:46] *** guifa joined
[19:46] *** vrurg left
[19:47] *** vrurg joined
[19:49] <tbrowder__> i'm not sure it is a rule, but good practice imho

[19:50] <tbrowder__> if it were up to me, i would be stricter in current module requirements.

[19:55] <discord-raku-bot> <nemokosch> I don't think it's possible to teach people to feel responsible for something if they genuinely have no urge for it

[20:01] <tbrowder__> maybe

[20:08] *** abraxxa-home left
[20:09] *** abraxxa-home joined
[20:09] <japhb> tbrowder__: The repo was named differently pretty much for historical reasons: at first, it was just a script, without library modules.

[20:10] <japhb> Come to think of it, I don't think I've ever renamed a GH repo that I wasn't transferring to another org.

[20:12] *** Maylay left
[20:14] *** Maylay joined
[20:18] *** euandreh joined
[20:32] <lizmat> weekly: https://codeberg.org/gfldex/raku-local-github-issues

[20:32] <notable6> lizmat, Noted! (weekly)

[20:33] <tbrowder__> if you can rename the repo i can take care of the rest in the PR

[20:34] <tbrowder__> which i've started as App-SerializerPerf

[20:37] <leont> Yeah, colons aren't valid in path names on Windows, so generally a bad idea around git repositories

[20:38] <tbrowder__> well afaik github won't accept colon

[20:39] <tbrowder__> s, raku takes care of the colon parts naturally ("organically?")

[20:42] *** jpn joined
[20:43] <discord-raku-bot> <nemokosch> within namespaces yes, for distributions I wouldn't be so sure

[20:43] <discord-raku-bot> <nemokosch> a distribution name might pop up in a file path during installation

[20:54] *** sena_kun left
[21:01] *** euandreh left
[21:04] <tbrowder__> well even

[21:04] <tbrowder__> ..

[21:05] <tbrowder__> was gonna say even zef needs apostrophes around module names with adverbs

[21:11] *** abraxxa-home left
[21:16] *** jrjsmrtn left
[21:31] *** guifa left
[21:31] <japhb> tbrowder__: Repo name changed.  Was actually less painful than I expected.

[21:50] <tbrowder__> i just saw that, thanks! i'm on it...

[21:57] *** jrjsmrtn joined
[22:06] *** jpn left
[22:45] *** willthechill left
[22:55] *** guifa joined
[23:10] *** willthechill joined
[23:16] *** guifa left
[23:55] *** cm_ joined
[23:56] *** cm left
[23:56] *** cm_ is now known as cm

