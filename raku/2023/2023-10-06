[00:06] *** xinming left
[00:08] *** xinming joined
[00:30] *** Manifest0 left
[01:29] *** nine left
[01:30] *** nine joined
[02:05] *** Timon joined
[02:31] <Timon> Halo

[03:31] *** bisectable6 left
[03:31] *** committable6 left
[03:32] *** committable6 joined
[03:33] *** bisectable6 joined
[03:51] *** Timon left
[04:51] *** committable6 left
[04:51] *** bisectable6 left
[04:52] *** bisectable6 joined
[04:54] *** committable6 joined
[05:05] *** RonaldR34g4m left
[05:05] *** Vyrus joined
[05:07] *** Vyrus left
[06:07] *** committable6 left
[06:07] *** bisectable6 left
[06:07] *** committable6 joined
[06:09] *** bisectable6 joined
[06:25] *** andydude joined
[06:38] *** andydude left
[07:07] *** jpn joined
[07:12] *** jpn_ joined
[07:13] *** jpn left
[07:41] *** Manifest0 joined
[07:48] *** jpn_ left
[08:03] *** jpn joined
[08:32] *** Sgeo left
[09:32] *** bisectable6 left
[09:32] *** committable6 left
[09:33] *** committable6 joined
[09:35] *** bisectable6 joined
[09:46] *** xinming left
[09:48] *** xinming joined
[09:52] *** lichtkind__ joined
[10:14] *** abraxxa left
[10:38] *** Voldenet left
[10:44] *** oodani left
[10:44] *** oodani joined
[10:46] *** lichtkind__ left
[10:48] *** Voldenet joined
[11:00] <discord-raku-bot> <nemokosch> it's crazy that in Raku you can just take LibXML::Reader (dwarring++) and in Javascript everything is flooded by DOM-based XML parsers or SAX at most

[11:01] <discord-raku-bot> <nemokosch> I wanted a pulling XML parser where I can ask for the next tag or something...

[11:01] <discord-raku-bot> <nemokosch> and if I don't ask for it, no "parsing" happens

[11:16] *** daxim left
[11:24] *** linkable6 left
[11:24] *** notable6 left
[11:24] *** tellable6 left
[11:24] *** linkable6 joined
[11:24] *** notable6 joined
[11:24] *** tellable6 joined
[11:28] *** notable6 left
[11:28] *** linkable6 left
[11:28] *** notable6 joined
[11:28] *** linkable6 joined
[11:35] *** ab5tract joined
[12:16] <discord-raku-bot> <antononcube> @nemokosch I am not sure are you criticizing JavaScript, or, praising DWarring/Raku.

[12:20] <discord-raku-bot> <nemokosch> does it always have to be any of such choices?

[12:21] <discord-raku-bot> <antononcube> I am not sure.

[12:23] *** lichtkind__ joined
[13:33] *** sftp left
[13:33] *** sftp joined
[13:51] <discord-raku-bot> <nemokosch> How does planet.raku.org work? It would be nice to get an API to the recent blog posts, better than the whole Atom XML feed

[14:51] *** committable6 left
[14:51] *** bisectable6 left
[14:52] *** bisectable6 joined
[14:53] *** committable6 joined
[15:28] <lizmat> nemokosch I have no idea...

[15:29] *** Sgeo joined
[15:30] <lizmat> nemokosch I also think planet.raku.org could also use an overhaul

[15:31] <lizmat> nemokosch in a more "managed" fashion, allowing insertion of "ad-hoc" raku blog finds into planet.raku.org instead of needing to subscribe to a RSS feed

[15:43] *** Tirifto left
[15:43] *** Tirifto joined
[16:26] *** lichtkind__ left
[17:23] *** ProperNoun left
[17:24] <tonyo> m: use nqp; my $a; sub a { nqp::bindkey(nqp::ctxcaller(nqp::ctx()), '$a', 5); }; a; dd $a

[17:24] <camelia> rakudo-moar e330d6f16: OUTPUT: «Any $a = Any␤»

[17:27] <tonyo> m: use nqp; my $a; sub a { nqp::bindlexdyn('$a', 5); }; a; dd $a

[17:27] <camelia> rakudo-moar e330d6f16: OUTPUT: «Any $a = Any␤»

[17:27] <tonyo> hmm

[17:32] <discord-raku-bot> <nemokosch> lizmat: perhaps it could but it's really bothersome that you wanted to solve a very specific problem and everything falls right at your face

[17:33] <lizmat> fwiw, I know the feeling

[17:34] <discord-raku-bot> <nemokosch> the raku.org site basically provides a voluntaristic API for the most recent blog posts by regularly polling a large xml file and generating a JSON from it

[17:35] <discord-raku-bot> <nemokosch> it would be already better if whatever serves planet.raku.org did this itself and provided an endpoint

[17:35] <lizmat> agree

[17:36] <discord-raku-bot> <nemokosch> no need to save the whole world. It wouldn't even make a difference for that host probably

[17:36] <discord-raku-bot> <nemokosch> however, that does make a difference for building raku.org content into a static server

[17:36] <discord-raku-bot> <nemokosch> whether it needs to provide an ad-hoc API by regularly polling some online resource or not

[17:37] <lizmat> couldn't you make the list of recent blog posts the only non-static thing?

[17:38] <lizmat> or is that your point: making it a static JS call to a shortened list provided by planet.raku.org ?

[17:43] <discord-raku-bot> <nemokosch> Well, I'm not sure if I get you but maybe I can just say how it went down

[17:44] <discord-raku-bot> <nemokosch> the current raku.org workflow is basically a cronjob running on a host who-knows-where

[17:44] <discord-raku-bot> <nemokosch> this cronjob does a few things: it updates the repo, rebuilds the site, and fetches the new blog posts into a JSON

[17:45] <discord-raku-bot> <nemokosch> so when this idea came to build an image for all content states, I thought, let's just get rid of the blog post fetching, so stupid, the client could just do this

[17:46] <discord-raku-bot> <nemokosch> it turned out that there are no great real-time ways to deal with a hefty XML in the first place. Perhaps building a DOM could still be fast enough but it's a waste of resources

[17:47] <discord-raku-bot> <nemokosch> and this is when it hit me: the whole reason for this preprocessing in the cronjob and then only serving the JSON is most probably that you wouldn't want to charge all visitors by a 4MB and growing XML for something as mundane as showing 7 titles with 7 links

[17:48] <discord-raku-bot> <nemokosch> basically there were two parallel things in the cronjob: building the site, and building this mini API that is a static JSON file

[17:49] <discord-raku-bot> <nemokosch> for now, I think it's workable to just steal this mini API from the actually running raku.org instance, so that it can serve whatever other instance of the website

[17:49] *** sena_kun joined
[17:50] <discord-raku-bot> <nemokosch> but ultimately if we do want to replace the running raku.org instance, something should provide this service, and it's preferrable that it not be built into the static website itself

[17:53] * [Coke] wonders if we could write an azure function that used cro, or if the overhead of getting raku & cro in there is too much

[17:57] <discord-raku-bot> <nemokosch> for planet.raku.org and blog post aggregation, that could make sense

[17:57] <discord-raku-bot> <nemokosch> that's currently pretty much untouchable, using some tool called perlanet

[18:00] <tonyo> any ideas on how to get set a variable in an outer context like that?

[18:06] <ugexe> m: my $a; sub a { CALLERS::<$a> = 5; }; a; dd $a

[18:06] <camelia> rakudo-moar e330d6f16: OUTPUT: «Int $a = 5␤»

[18:09] <tonyo> i can't get callers out far enough from the package

[18:09] <tonyo> i can find the lexical scope using nqp but can't seem to bind to it's pad

[19:09] *** jpn left
[20:07] *** swaggboi left
[20:12] *** swaggboi joined
[20:14] *** lichtkind__ joined
[20:18] *** derpydoo joined
[20:39] <tbrowder__> language police: its, its, its....

[20:40] <tbrowder__> hey, tonyo, working on yr book at all?

[20:42] <tonyo> yea yea, i always have to go back and correct that one when writing

[20:42] <tonyo> which book?

[20:51] *** swaggboi left
[20:57] *** swaggboi joined
[21:28] <tonyo> my computer borked and i lost all of one of them and partial of another

[21:44] *** swaggboi left
[21:46] *** xinming left
[21:48] *** xinming joined
[21:58] *** swaggboi joined
[22:17] *** derpydoo left
[22:18] *** sena_kun left
[22:50] *** justache is now known as justHaunting

[22:57] <tbrowder__> y

[23:00] <tbrowder__> i thought you said some time ago you were thinking about writing a book by expanding a doc on one of yr projects

[23:02] <tbrowder__> on my todo list is to use yr article on the website to put my contact db online for friends  and family

