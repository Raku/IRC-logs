[00:01] *** jpn joined
[00:07] *** lichtkind left
[00:08] *** Manifest0 left
[00:13] <tbrowder__> ok, that worked

[00:14] <tbrowder__> ugexe: that‚Äôs good to hear, thanks!

[00:16] *** jpn left
[00:17] *** ProperNoun left
[00:18] *** jpn joined
[00:20] *** hexology left
[00:20] *** hexology joined
[00:21] *** hexology left
[00:21] *** hexology joined
[00:32] *** hexology left
[00:32] *** hexology joined
[00:33] *** jpn left
[00:33] *** jpn joined
[00:38] *** hexology left
[00:38] *** hexology joined
[01:01] *** derpydoo joined
[01:10] *** jpn left
[01:11] *** jpn joined
[01:38] *** jpn left
[01:39] *** jpn joined
[01:53] *** jpn left
[01:53] *** jpn joined
[02:09] *** jpn left
[02:10] *** jpn joined
[02:21] *** MasterDuke joined
[02:23] *** jpn left
[03:04] *** derpydoo left
[04:24] *** ecocode left
[04:29] *** ecocode joined
[05:33] *** siavash joined
[06:26] *** xinming left
[06:29] *** xinming joined
[06:42] *** abraxxa joined
[06:55] *** sena_kun joined
[07:52] *** Manifest0 joined
[07:54] *** dakkar joined
[07:58] *** spacekookie left
[08:01] *** Sgeo left
[08:09] *** sena_kun left
[08:10] *** sena_kun joined
[08:11] *** jpn joined
[08:25] *** sena_kun left
[08:26] *** sena_kun joined
[08:35] *** ab5tract left
[08:51] *** lichtkind joined
[09:18] *** siavash left
[09:30] *** sena_kun left
[10:25] *** lichtkind left
[10:31] <AlexDaniel> ===SORRY!=== Error while compiling /home/alex/git/whateverable/site#sources/8143677EA272A04F4BA3843A02BBD016F5269804 (IO::Socket::Async::SSL)

[10:31] <AlexDaniel> Could not find OpenSSL in: ‚Ä¶

[10:31] <AlexDaniel> zef install OpenSSL # candidates are currently installed

[10:31] <AlexDaniel> All candidates*

[10:31] <AlexDaniel> so‚Ä¶ how do I make it see it? what do I do? I'm trying to install dependencies of whateverable

[10:44] <AlexDaniel> Using rakudo 2023.09 and zef 0.19.1

[10:53] <AlexDaniel> I succeeded by installing depnedencies one by one. This was‚Ä¶ not great‚Ä¶

[10:56] <AlexDaniel> my best guess is that these modules come preinstalled with rakudo star, which is why I'm not seeing the same issues in docker containers

[10:56] *** ProperNoun joined
[10:58] <AlexDaniel> Merging GLOBAL symbols failed: duplicate definition of symbol SSL

[10:58] <AlexDaniel> oh my god -_-

[10:59] <discord-raku-bot> <nemokosch> >Merging GLOBAL symbols failed: duplicate definition of symbol SSL

[10:59] <discord-raku-bot> <nemokosch> this seems familiar ü•¥

[11:00] <AlexDaniel> yes? How do I solve it?

[11:03] <AlexDaniel> Could not open /home/alex/.raku/sources/D16471B7EF31A659EFE7431A641190D8A130BCB2. Failed to stat file: no such file or directory

[11:03] <AlexDaniel> I tried reinstalling OpenSSL package‚Ä¶ it reinstalled, now I'm getting this

[11:11] <Xliff> Soon to be coming down the pike. Looking for proofers before I finish this one off: https://dev.to/xliff/working-with-glib-and-raku-47b-temp-slug-4932484?preview=055e75c04e249a29114bd5b235b6c57be9b3e0fa1f1d6dba059d14e16ec0f69261a3ea1f8fc98d98304b9df1c3a6a237507b6079425de8bf0b4db64b

[11:12] <Xliff> Of course...to finish it off, I have to finish long postponed changes to GLib::HashTable... ^_^

[11:28] <AlexDaniel> I'm doing the final attempt of installing all star dependencies first and then trying to install deps of whateverable‚Ä¶ if that doesn't work then I'm back to working through docker :S

[11:29] <AlexDaniel> otherwise I've spent 2 hours already trying to install dependencies

[11:53] <discord-raku-bot> <nemokosch> that's madness

[11:54] <discord-raku-bot> <nemokosch> I wonder how stuff like this can just slip through

[12:07] *** ab5tract joined
[12:17] *** derpydoo joined
[12:54] <AlexDaniel> I was able to run whateverable by first installing rakudo star modules and then installing whateverable dependencies

[12:54] <AlexDaniel> next problem

[12:54] <AlexDaniel> Invocant of method 'match' must be a type object of type 'Any', not an object instance of type 'IRC::Client::Message::Privmsg::Channel'.¬† Did you forget a 'multi'?

[12:55] <AlexDaniel> this happens to fairly typical whateverable code: https://github.com/Raku/whateverable/blob/9eff36756ad919bf97e0587b892842ca9ba36739/xbin/Notable.p6#L68-L76

[12:56] <AlexDaniel> lizmat: could it be a regression in IRC::Client itself?

[12:58] <AlexDaniel> wait, but

[12:58] <AlexDaniel> of course it is a type of any, what else could it possibly be

[13:13] <dakkar> `method match(Any:U:)` ? does it explicitly wants an undefined value?

[13:13] <dakkar> (guessing at the signature, there, based on the error message)

[13:14] <AlexDaniel> dakkar: can you expand on that? I'm not sure I understand. You mean in IRC::Client itself in this case?

[13:15] <dakkar> (again, I'm guessing) the error message says ¬´invocant of method 'match' must be a type object of type Any¬ª

[13:16] <dakkar> "a type object" is the thing that's matched by a `:U` qualifier on a type specification (and vaguely corresponds to what perl calls "undefined")

[13:16] <dakkar> so I'm wondering if somewhere there's a `method match(Any:U: ‚Ä¶)`

[13:16] <dakkar> which would be a weird thing to have, I think

[13:21] <dakkar> ooh, reproduced

[13:21] <dakkar> (my copying bits of code that seemed relevant)

[13:22] <dakkar> so the error is almost certainly in whateverable, not in IRC::Client

[13:22] <dakkar> (the only bit of IRC::Client I've copied is `role Message`)

[13:22] <AlexDaniel> I mean, whateverable used to work :)

[13:24] <AlexDaniel> dakkar: do you have a reproduction snippet?

[13:24] <dakkar> ok, that `match` is the regex/grammar matching

[13:24] <AlexDaniel> yes

[13:25] <dakkar> https://gist.github.com/dakkar/3b5d54bf3830ea1ca1f4ae0e25c326d9

[13:25] <dakkar> I think I can reduce it

[13:28] <dakkar> ok, minimised

[13:29] <dakkar> `$thing where { m/‚Ä¶/ }` will give that error when given anything that's not a string

[13:29] <dakkar> even if it has a `method Str`

[13:31] <dakkar> even easier‚Ä¶

[13:31] <dakkar> m: class X { }; X.new ~~ m/a/

[13:31] <camelia> rakudo-moar 95dce3cdf: OUTPUT: ¬´Invocant of method 'match' must be a type object of type 'Any', not an‚ê§object instance of type 'X'.  Did you forget a 'multi'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:31] <dakkar> I say LTA error‚Ä¶

[13:32] <AlexDaniel> it's either a regression in IRC::Client or Rakudo itself, the choice is one of the two

[13:32] <dakkar> were messages from IRC::Client always object?

[13:32] <AlexDaniel> the code used to work for the last 4 years

[13:33] <AlexDaniel> yes, they were always an object

[13:33] <dakkar> then something broke in rakudo

[13:34] <dakkar> because you say `irc-to-me($msg where { m/‚Ä¶/ })` worked, and now we get that error

[13:34] <dakkar> something lost a stringification

[13:34] <AlexDaniel> lizmat: can you please assist? This is currently keeping a few bots from going up in a useful way

[13:34] <dakkar> m: class X { method Str { "aa" } }; X.new ~~ m/a/ # this should work, right?

[13:34] <camelia> rakudo-moar 95dce3cdf: OUTPUT: ¬´Invocant of method 'match' must be a type object of type 'Any', not an‚ê§object instance of type 'X'.  Did you forget a 'multi'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:35] <Xliff>  class X { method Str { "aa" } }; ~X.new ~~ m/a/

[13:35] <Xliff> m: class X { method Str { "aa" } }; ~X.new ~~ m/a/

[13:35] <camelia> rakudo-moar 95dce3cdf: ( no output )

[13:35] <Xliff> Workaround?

[13:36] <AlexDaniel> how would I put it into the signature though?

[13:36] <dakkar> sure, but if it used to work and no longer does‚Ä¶ it's a regression

[13:36] <Xliff> m: class X { method Str { "aa" } }; X.new.Str ~~ m/a/

[13:36] <camelia> rakudo-moar 95dce3cdf: ( no output )

[13:36] <AlexDaniel> `where ~$msg ~~` ?

[13:36] <AlexDaniel> if I recall correctly that didn't exactly work sometimes

[13:36] <dakkar> AlexDaniel: for example, or `where { $msg.Str ~~ m/‚Ä¶/ }`

[13:36] <AlexDaniel> I'll try

[13:36] <Xliff> AlexDaniel: where { .Str ~~ m/a/ }

[13:37] <dakkar> ah yes, thank Xliff for the correction

[13:38] *** bisectable6 joined
[13:38] <dakkar> (there's still a rakudo problem: either a regression (if it's supposed to work and no longer does), an opportinity to improve the documentation (if it's not supposed to work), but definitely a non-great error message)

[13:38] <AlexDaniel> bisect: class X { method Str { "aa" } }; X.new ~~ m/a/

[13:38] <bisectable6> AlexDaniel, Will bisect the whole range automagically because no endpoints were provided, hang tight

[13:39] <bisectable6> AlexDaniel, Output on all releases: https://gist.github.com/bdee3fa3e0496447b7ff2d60d274d5b8

[13:39] <bisectable6> AlexDaniel, Bisecting by output (old=2020.06 new=2020.07) because on both starting points the exit code is 1

[13:39] <AlexDaniel> that's not the right repro

[13:39] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/6dd879672023f2d26b1667f1452f0554

[13:39] <bisectable6> AlexDaniel, (2020-07-06) https://github.com/rakudo/rakudo/commit/5f423a7e6f810615d9a1c695311a1d9d346fc713

[13:39] <bisectable6> AlexDaniel, Bisecting by output (old=2017.04.3 new=2017.05) because on both starting points the exit code is 1

[13:39] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/d5194a4676fbd059f1115cb13b819d0c

[13:39] <bisectable6> AlexDaniel, (2017-04-24) https://github.com/rakudo/rakudo/commit/1c21974d29be3f2d8a0820916e800ad2cdc36a94

[13:39] <AlexDaniel> please chill bisectable, I'm not interested in error messages :D

[13:39] <bisectable6> AlexDaniel, Bisecting by output (old=2016.12 new=2017.01) because on both starting points the exit code is 1

[13:39] *** committable6 joined
[13:40] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/14c3f068b976339bb4e10a8283456d97

[13:40] <bisectable6> AlexDaniel, (2016-12-19) https://github.com/rakudo/rakudo/commit/3fe589309da1d7bc6dcf74188ccf730595e279b1

[13:40] <bisectable6> AlexDaniel, Bisecting by output (old=2016.09 new=2016.10) because on both starting points the exit code is 1

[13:40] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/3c2386de68db4a2ade947cf8833a880f

[13:40] <bisectable6> AlexDaniel, ‚ö† New output detected, please review the results manually

[13:40] <bisectable6> AlexDaniel, Output on all releases and bisected commits: https://gist.github.com/790f48cc948be9c820cf8ffa7e692f37

[13:40] <AlexDaniel> oh my god was it me who decided on that behavior

[13:43] <AlexDaniel> okay I lowered the $changes-limit to reduce spam, but I'm not sure if I lowered it enough to prevent that specific case above

[13:43] <AlexDaniel> either way it's gonna be better now

[13:45] <dakkar> AlexDaniel++ # improving the tooling

[13:45] <discord-raku-bot> <nemokosch> X.new ~~ m/a/ is such a horrible pattern...

[13:46] <dakkar> nemokosch: yes, but it's a minimal reproduction for a different problem

[13:47] <AlexDaniel> This workaround actually helps! https://github.com/AlexDaniel/whateverable/commit/cd6bd908dd33a34148a5672ecb57a814f293ce1a

[13:47] <dakkar> good!

[13:47] <AlexDaniel> well

[13:47] <AlexDaniel> not great, not terrible

[13:48] <Xliff> Sometimes "meh" is grand.

[13:48] <discord-raku-bot> <nemokosch> I frankly don't know if this was supposed to work, as in, could be yes, could be no, probably nobody thought about it too hard

[13:50] <AlexDaniel> when I was the release manager that didn't make any difference. You can't be just breaking code, especially code that is part of your own tooling and infrastructure

[13:50] <AlexDaniel> I have now spent a few days trying to bring whateverable back up on a new server. It's not fun at all

[13:50] <Xliff> Are you running whateverable in the cloud or at a colo?

[13:51] <AlexDaniel> what's a colo? It's my own dedicated server, but now it's dockerized properly

[13:51] <AlexDaniel> any push to the whateverable repo deploys a new version automatically

[13:54] <discord-raku-bot> <nemokosch> I wouldn't know what you previously did that made a difference with the releases. But let's be frank, I wouldn't trust Blin at this point if it cannot catch its own breakage xD

[13:56] <discord-raku-bot> <nemokosch> ... so how was it? No need to pin Rakudo versions because nothing ever breaks and you can just update to the latest always, "duh"?

[13:59] <Xliff> AlexDaniel: OK. Cool.

[14:00] *** NemokoschKiwi joined
[14:02] <NemokoschKiwi> bisectable6: class X { method Str { 'lalala' } }; $_ = X.new;¬† m/a/

[14:02] <bisectable6> NemokoschKiwi, Will bisect the whole range automagically because no endpoints were provided, hang tight

[14:02] <bisectable6> NemokoschKiwi, Output on all releases: https://gist.github.com/03476c84cccb24a3cf03e62dfb6c44c7

[14:02] <bisectable6> NemokoschKiwi, Bisecting by output (old=2020.06 new=2020.07) because on both starting points the exit code is 1

[14:03] <bisectable6> NemokoschKiwi, bisect log: https://gist.github.com/99a13210db6fe597bd10ec49e19e3512

[14:03] <bisectable6> NemokoschKiwi, (2020-07-06) https://github.com/rakudo/rakudo/commit/5f423a7e6f810615d9a1c695311a1d9d346fc713

[14:03] <bisectable6> NemokoschKiwi, Bisecting by output (old=2017.04.3 new=2017.05) because on both starting points the exit code is 1

[14:03] <NemokoschKiwi> as we say, "l√°ttam √©n m√°r kar√≥n varj√∫t"

[14:03] <bisectable6> NemokoschKiwi, bisect log: https://gist.github.com/53e080ebf3e1c0d9c5714e501798b540

[14:03] <bisectable6> NemokoschKiwi, (2017-04-24) https://github.com/rakudo/rakudo/commit/1c21974d29be3f2d8a0820916e800ad2cdc36a94

[14:03] <bisectable6> NemokoschKiwi, Bisecting by output (old=2016.12 new=2017.01) because on both starting points the exit code is 1

[14:03] <bisectable6> NemokoschKiwi, bisect log: https://gist.github.com/65d9a97de8ef1911001bc9dee36962e0

[14:03] <bisectable6> NemokoschKiwi, (2016-12-19) https://github.com/rakudo/rakudo/commit/3fe589309da1d7bc6dcf74188ccf730595e279b1

[14:03] <bisectable6> NemokoschKiwi, Bisecting by output (old=2016.09 new=2016.10) because on both starting points the exit code is 1

[14:03] <NemokoschKiwi> but it seems to do the same

[14:04] <bisectable6> NemokoschKiwi, bisect log: https://gist.github.com/5ca7e16c67df446d4c4bb07addb703cf

[14:04] <bisectable6> NemokoschKiwi, ‚ö† New output detected, please review the results manually

[14:04] <bisectable6> NemokoschKiwi, Output on all releases and bisected commits: https://gist.github.com/c91a948c232899418c0039a8898a2303

[14:06] <NemokoschKiwi> which directs a great amount of suspicion towards `where`

[14:08] <NemokoschKiwi> bisectable: class X { method Str { 'lalala' } }; multi test($x where { m/a/ }) { say 'OH YES' }; try test(X.new);

[14:08] <bisectable6> NemokoschKiwi, Will bisect the whole range automagically because no endpoints were provided, hang tight

[14:09] <bisectable6> NemokoschKiwi, ¬¶6c (68 commits): ¬´¬ª

[14:09] <bisectable6> NemokoschKiwi, Nothing to bisect!

[14:09] <NemokoschKiwi> this never dispatched ü§î

[14:13] *** NemokoschKiwi left
[14:17] *** nine left
[14:17] *** m_athias left
[14:17] <discord-raku-bot> <antononcube> @nemokosch is back to New Zealand...

[14:18] *** nine joined
[14:18] *** nine left
[14:18] *** nine joined
[14:24] <discord-raku-bot> <nemokosch> I have no clue what happened there

[14:41] *** bradford joined
[14:41] *** bradford left
[14:41] *** bradfordFE joined
[14:42] *** bradfordFE left
[15:42] *** committable6 left
[15:42] *** bisectable6 left
[15:43] *** bisectable6 joined
[15:45] *** committable6 joined
[15:46] *** kybr left
[15:47] *** kybr joined
[16:33] *** jpn left
[16:36] *** dakkar left
[16:36] *** jpn joined
[16:42] *** Xliff left
[16:45] *** abraxxa left
[16:50] *** nine left
[16:50] *** nine joined
[17:13] *** spacekookie joined
[17:48] *** sena_kun joined
[18:20] *** cleo left
[18:23] *** MoC joined
[18:41] <lizmat> AlexDaniel: was afk for most of the day... and in no shape to look at IRC::Client issues... will look tomorrow

[19:41] *** bisectable6 left
[19:41] *** committable6 left
[19:43] *** committable6 joined
[19:44] *** bisectable6 joined
[19:55] *** lichtkind joined
[20:06] <codesections> All of the (very few) interactions I've had with TimToady have involved him disagreeing with something I said.  But they still make me happy, somehow.  

[20:06] <codesections> (re https://github.com/Raku/problem-solving/issues/389)

[20:25] *** tejr left
[20:34] *** mjgardner left
[20:36] *** mjgardner joined
[20:42] *** MoC left
[20:55] *** sena_kun left
[20:56] *** cleo joined
[21:00] <discord-raku-bot> <nemokosch> there should be some sort of agreement

[21:00] <discord-raku-bot> <nemokosch> like, after one bike-shedding issue, let's tackle a serious one

[21:06] <jdv> i'm with larry on that one.  less potential confusion.

[21:13] <codesections> jdv: yeah, fair.  I'm really fine with any arrow; I'd just like there to be one

[21:45] <El_Che> I find it interesting that Raku-dians/Raku-tins/Raku-ists/... love to discuss utf8 operators and are proud on how nice the look, while the wider programming world make fun of us because of the untypable operators.

[21:45] <El_Che> (just a small almost midnight musing :) )

[21:47] *** jpn left
[21:52] <discord-raku-bot> <nemokosch> and it's basically just smalltalk material in both directions

[21:56] <codesections> El_Che: :D ‚Äì or, maybe I should say üòÄ

[21:56] <discord-raku-bot> <nemokosch> About markdown vs pod, though... given that the documentation system is all based around pod6, or rakudoc, as we like to call it these days, it's not realistic

[21:57] <discord-raku-bot> <nemokosch> this might sound a bit ironic but I'm not sure what markdown could bring for the project, or what it would even mean to "support it"

[21:57] <codesections> What would be realistic is an easy way to go from Markdown ‚Üí rakudoc, though

[21:57] <codesections> For people who are more comfortable writing md, I mean

[21:58] <discord-raku-bot> <nemokosch> nobody is forbidden to write markdown, at the end of the day

[21:58] <discord-raku-bot> <nemokosch> and I think it's actually a great feature that there is NO "Raku-flavored markdown"

[21:58] <discord-raku-bot> <nemokosch> enough of these flavors already

[21:59] <discord-raku-bot> <codesections> Agreed.  But I'd like a Markdown‚Üírakudoc parser that just supports CommonMark (or some other standard md) with the message "if you want more than this, write actual rakudoc"

[22:01] <discord-raku-bot> <nemokosch> @antononcube happens to have a Markdown-converter module

[22:02] <discord-raku-bot> <codesections> Oh, interesting.  I'll have to take a look at that

[22:04] <discord-raku-bot> <nemokosch> I have seen a shirt that I really liked, probably somebody wore it at a protest. It had one sentence written on it

[22:04] <discord-raku-bot> <nemokosch> All you need is less

[22:08] <discord-raku-bot> <nemokosch> At the end of the day, there are a lot of topics where one could ask what the point is, like what do you expect from doing it.

[22:10] <discord-raku-bot> <nemokosch> to some extent, the documentation format is also a lower-importance topic I think, and unicode looks for code are quite definitely in that category

[22:12] <discord-raku-bot> <nemokosch> if it's too much fun to miss, maybe it can be done in user space, or at least it should be decided and implemented quickly

[22:22] *** Sgeo joined
[22:39] *** NemokoschKiwi joined
[22:47] *** NemokoschKiwi left
[22:47] <discord-raku-bot> <antononcube> @codesections I made the package/module  ‚ÄúMarkdown::Grammar‚Äù in order to convert Markdown documents to notebooks. Other interpreters/converters are to HTML, Org-mode, and Pod6.

[22:51] <discord-raku-bot> <antononcube> The Pod6 converter is very useful for debugging and testing. I also have demoed that module in a few videos.

[22:52] <discord-raku-bot> <antononcube> Here is one: https://www.youtube.com/watch?v=2UjAdQaKof8

[22:54] <discord-raku-bot> <codesections> @antononcube Thanks!  I'm not sure how I missed that talk ‚Äì I thought I'd seen all the Raku talks Fosdem 2022

[22:55] <discord-raku-bot> <antononcube> That is/ was not a conference talk. Just an instance of unprovoked marketing. üòõ

[23:02] *** ab5tract left
[23:02] *** ab5tract joined
[23:04] *** lichtkind left
[23:18] <discord-raku-bot> <codesections> @antononcube Oh, I don't know where I got "Fosdem 2022" from.  Must be seeing things!

[23:19] <discord-raku-bot> <codesections> Unless it's already going to be a part of your Large Language Models talk, it'd make a nice Raku Conf talk for this year üôÇ

[23:21] <discord-raku-bot> <antononcube> I think my TRC-2023 talk would be an expansion of this one: https://www.youtube.com/watch?v=wNpIGUAwZB8

[23:23] <discord-raku-bot> <codesections> Cool, I'll look forward to it üëç

[23:25] *** Manifest0 left
[23:50] <jdv> AlexDaniel: i can install Whateverable (with passing tests) on 2 boxes of mine.

[23:52] <jdv> both of those boxes are ~2023.08/09.

