[00:00] *** reportable6 left
[00:01] *** reportable6 joined
[00:13] *** nort left
[00:14] *** jpn joined
[00:23] *** jpn left
[01:23] *** coverable6 left
[01:23] *** linkable6 left
[01:23] *** evalable6 left
[01:23] *** unicodable6 left
[01:23] *** notable6 left
[01:23] *** benchable6 left
[01:23] *** bloatable6 left
[01:23] *** shareable6 left
[01:23] *** greppable6 left
[01:23] *** nativecallable6 left
[01:23] *** releasable6 left
[01:24] *** bloatable6 joined
[01:24] *** releasable6 joined
[01:25] *** evalable6 joined
[01:25] *** coverable6 joined
[01:25] *** linkable6 joined
[01:25] *** notable6 joined
[01:25] *** greppable6 joined
[01:25] *** shareable6 joined
[01:26] *** nativecallable6 joined
[01:26] *** unicodable6 joined
[01:26] *** benchable6 joined
[01:37] *** sivoais left
[01:48] *** simcop2387 left
[01:48] *** perlbot left
[02:01] *** simcop2387 joined
[02:02] *** perlbot joined
[02:08] *** sivoais joined
[02:30] *** nine left
[02:32] *** nine joined
[02:35] *** Guest10 joined
[02:35] *** Guest10 is now known as XliffMac
[02:35] <XliffMac> \o
[02:38] *** jacob_c joined
[02:41] *** jacob_c left
[02:47] *** XliffMac left
[02:49] *** sivoais left
[02:53] *** raiph joined
[03:21] *** raiph left
[03:39] *** raiph joined
[03:41] *** kjp left
[03:49] *** sivoais joined
[04:16] *** Kidush joined
[04:16] *** kjp joined
[04:20] *** raiph left
[04:36] *** Kidush left
[05:36] *** benchable6 left
[05:36] *** statisfiable6 left
[05:36] *** coverable6 left
[05:36] *** tellable6 left
[05:36] *** quotable6 left
[05:36] *** squashable6 left
[05:36] *** bloatable6 left
[05:36] *** evalable6 left
[05:36] *** committable6 left
[05:36] *** sourceable6 left
[05:36] *** reportable6 left
[05:36] *** bisectable6 left
[05:36] *** unicodable6 left
[05:36] *** notable6 left
[05:36] *** shareable6 left
[05:36] *** linkable6 left
[05:36] *** releasable6 left
[05:36] *** greppable6 left
[05:36] *** nativecallable6 left
[05:37] *** unicodable6 joined
[05:37] *** notable6 joined
[05:37] *** shareable6 joined
[05:37] *** sivoais left
[05:37] *** reportable6 joined
[05:37] *** coverable6 joined
[05:37] *** benchable6 joined
[05:37] *** quotable6 joined
[05:37] *** nativecallable6 joined
[05:37] *** greppable6 joined
[05:37] *** statisfiable6 joined
[05:38] *** tellable6 joined
[05:38] *** linkable6 joined
[05:38] *** releasable6 joined
[05:38] *** sourceable6 joined
[05:38] *** evalable6 joined
[05:38] *** squashable6 joined
[05:39] *** committable6 joined
[05:39] *** bisectable6 joined
[05:39] *** bloatable6 joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:39] *** sivoais joined
[06:44] *** sivoais left
[06:49] *** tea3po joined
[06:52] *** teatwo left
[06:53] *** tea3po left
[06:54] *** tea3po joined
[06:59] *** tea3po left
[06:59] *** tea3po joined
[07:01] *** jpn joined
[07:11] *** jpn left
[07:20] *** jpn joined
[07:29] *** sivoais joined
[08:44] *** jpn left
[08:44] *** jpn joined
[08:49] *** jpn left
[09:01] *** jpn joined
[09:14] *** abraxxa-home joined
[09:17] *** jpn left
[09:22] *** jpn joined
[09:27] *** jpn left
[09:56] *** jpn joined
[09:57] *** Sgeo left
[10:01] *** jpn left
[10:06] *** abraxxa-home left
[10:12] *** abraxxa-home joined
[10:34] *** eseyman left
[10:35] *** eseyman left
[10:35] *** manu_ joined
[10:36] *** manu_ is now known as eseyman
[10:55] *** abraxxa-home left
[11:02] <guifa> o/
[11:07] <discord-raku-bot> <Nemokosch> suppers
[11:12] <discord-raku-bot> <Nemokosch> how do y'all feel about establishing an editor/tooling workgroup, on similar terms to the documentation?
[11:12] <discord-raku-bot> <Nemokosch> this has been bugging me for a while and this time I actually started messing with the quasi-abandoned highlighter
[11:13] <lizmat> by all means, go for it :-)
[11:15] <discord-raku-bot> <Nemokosch> btw never trust people who say "just run this script and you are done"
[11:16] <discord-raku-bot> <Nemokosch> either they say what the script achieves, or no deal, lol
[11:16] <discord-raku-bot> <Nemokosch> replace.sh be like
[11:23] <discord-raku-bot> <Nemokosch> p=1 in AWK means like, "print the current line" while p=0 is "don't print the current line", right?
[11:25] * lizmat skipped over awk/sed and went straight to Perl in the early 90s
[11:26] <tea3po>    same
[11:27] <discord-raku-bot> <Nemokosch> yes tbh I had the same thing in mind and if there is some quick text mashing I usually rather try to do it in Perl... but somebody (maybe Samantha) didn't have the same background/mindset
[11:28] <discord-raku-bot> <Nemokosch> https://github.com/Raku/atom-language-perl6/blob/b6167e4ee60bebc35d82c43f799057a93ca4454d/dev/replace.sh#L12
[11:28] <discord-raku-bot> <Nemokosch> but the hypothesis makes sense at least, no? ðŸ˜„
[11:28] <discord-raku-bot> <Nemokosch> this reads to me like "skip everything between the markers, print a while instead"
[11:28] <discord-raku-bot> <Nemokosch> file* xD
[11:30] <discord-raku-bot> <Nemokosch> shockingly, since CSON is whitespace-sensitive, the fetched files need to be aware where they will be included, otherwise the indentation won't be right
[11:31] <discord-raku-bot> <Nemokosch> but it seems to me that they actually come with the right amount of whitespace
[11:31] <tbrowder__> good news for module authors. i changed a windows.yml test to use rakudo version 2022.07 and the test now passes.
[11:32] <discord-raku-bot> <Nemokosch> I think this was also kind of known
[11:37] *** gcd joined
[11:42] *** Bocaneri joined
[11:43] *** Bocaneri is now known as Guest8096
[11:44] *** jpn joined
[11:45] *** Sauvin left
[11:48] *** jpn left
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:13] <tbrowder__> yes, but ugexe and others say otherwise. look at the repo and issues for TAP module. apparently it's not consistent. i just changed to 2022.07 for windows tests fo about 10 modules and i'm waiting for github results. first 3 are now green
[12:17] <tbrowder__> and, sure enough, not all are fixed--definitely a problem somewhere
[12:18] <tbrowder__> must be aliens
[12:18] <tbrowder__> extraterrestial, that is
[12:38] *** jpn joined
[12:42] <tbrowder__> arg, false alarm, TAP on windows not reliable at all
[12:43] <tea3po> what's TAP
[12:47] <tea3po> nvm, I knew that
[12:48] <tea3po> nvm, I knew that
[12:50] *** jpn left
[13:25] <discord-raku-bot> <Nemokosch> sadly, TAP established itself mainly as a source of problems
[13:41] <ugexe> its just windows + precompilation
[13:42] <ugexe> TAP just happens to be one of the more ubiquitous modules and hence it seemingly shows up for it more
[13:42] <ugexe> same thing happens with zef though
[13:42] <discord-raku-bot> <Nemokosch> and module installation, and obfuscating test results...
[13:43] <ugexe> zef isnt' noticible for everyone cause it comes already installed on the github containers i believe
[13:49] <discord-raku-bot> <Nemokosch> usually it's enough to mess things up once in a while for people to remember - like when a TAP bug made all module tests fail for a short period of time. When you want colleagues to install your stuff and the current situation is like "well, um, it's broken at the moment, use this workaround", that's awkward the least to say
[13:49] <discord-raku-bot> <Nemokosch> it's not just Raku's test harness, though. Spectesting can also yield completely clueless errors and that uses Perl 5 stuff iirc
[13:50] *** linkable6 left
[13:50] *** evalable6 left
[13:50] <discord-raku-bot> <Nemokosch> so for me it's a combination of too many and too visible breakdowns overall, and the mere idea of a "test harness" being a big fat WAT
[13:50] *** linkable6 joined
[13:53] *** evalable6 joined
[14:20] *** jpn joined
[14:53] *** jpn left
[15:32] <thowe> I don't know what TAP is.
[15:48] <lizmat> Test Anything Protocol
[16:20] *** linkable6 left
[16:20] *** evalable6 left
[16:22] *** evalable6 joined
[16:23] *** linkable6 joined
[16:37] *** sivoais left
[17:06] <moritz> it's the format in which Perl and Raku tests output test success and failure, and which test harnesses parse to determine if the tests passed
[17:09] *** sivoais joined
[17:14] *** sivoais left
[17:19] *** sivoais joined
[17:33] *** jgaz joined
[17:38] *** euandreh left
[17:56] *** swaggboi left
[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:10] *** simcop2387 left
[18:10] *** perlbot left
[18:10] *** swaggboi joined
[18:11] *** perlbot joined
[18:11] *** simcop2387 joined
[18:14] *** simcop2387 left
[18:15] *** simcop2387 joined
[18:16] *** perlbot left
[18:17] *** perlbot joined
[18:33] <discord-raku-bot> <Nemokosch> A note on dogfooding that didn't really appear to me earlier
[18:33] <discord-raku-bot> <Nemokosch> it's not just that you get to experience your technology and invest into it - this part seemed kind of obvious
[18:34] <discord-raku-bot> <Nemokosch> but by using the very things you are aiming to develop, you actually minimize outer dependencies and lower the entry point of the project in most cases
[18:39] *** perlbot left
[18:42] *** perlbot joined
[18:48] *** tea3po left
[18:48] *** tea3po joined
[18:50] *** tea3po left
[18:50] *** tea3po joined
[18:51] *** tea3po left
[18:51] *** tea3po joined
[19:08] *** Sgeo joined
[19:11] *** euandreh joined
[19:27] <discord-raku-bot> <Anton Antonov> @Nemokosch I consider the latter to be a consequence of the former.
[19:37] <discord-raku-bot> <Nemokosch> Hm, I wouldn't say so, or at least they are not the same aspect of dogfooding
[19:38] <discord-raku-bot> <Nemokosch> the former is related to the "do use ..." part while the latter is related to the "preferably do not use ..." part
[19:42] *** derpydoo left
[19:52] *** perlbot left
[19:52] *** simcop2387 left
[19:53] *** simcop2387 joined
[19:53] *** perlbot joined
[19:57] *** simcop2387 left
[19:57] *** jacob_c joined
[19:58] *** perlbot_ joined
[19:58] *** perlbot left
[19:58] *** jpn joined
[19:58] *** simcop2387 joined
[19:59] *** perlbot_ is now known as perlbot
[20:04] *** perlbot left
[20:04] *** simcop2387 left
[20:04] *** jpn left
[20:06] *** tea3po left
[20:06] <jacob_c> A few days ago I commented on here that I was having trouble with SDL2::Raw. I figured out my problem! What's uploaded on raku.land isn't the exact same as what's currently in the GitHub repo. I was trying to run the particles_surface example (which I also somehow got confused with the particles example), which uses functions that weren't exposed
[20:06] <jacob_c> in the module that's available in raku.land. And the reason I was able to get it working when I copy pastedÂ  it into a foo.pm6 file in my local directory is because I copied the code from GitHub directly, which gave me the newest code that matched the example I was using.
[20:06] *** tea3po joined
[20:09] *** perlbot joined
[20:10] <guifa> Ah yeah, that would make sense potentially
[20:11] <guifa> SDL2::Raw is from CPAN and we've almost entirely moved away from that ecosystem.  No doubt when timo updated things on github he didn't think to push it into the new ecosystem
[20:14] *** simcop2387 joined
[20:14] *** perlbot left
[20:16] <jacob_c> Ohh. Yeah, it got me wondering what the convention is. When people update their module on GitHub do they immediately push the changes to the package manager ecosystem? Or is there typically some lag? And if lag exists, is there an easy way to browse the examples in raku.land itself to help prevent you from accidentally confusing what's uploaded to
[20:16] *** perlbot joined
[20:16] <jacob_c> what's bleeding edge on GitHub?
[20:18] <jacob_c> Or maybe it's just one of those situations that doesn't come up that often? Really the thing that caught me off guard was trying to use the example, and not knowing any better just pulling the latest from GitHub.
[20:20] *** simcop2387 left
[20:21] *** simcop2387 joined
[20:26] <discord-raku-bot> <Nemokosch> This is a social problem, not a matter of technology...
[20:32] *** perlbot left
[20:32] *** simcop2387 left
[20:37] <jacob_c> Well the technology could help. Essentially what we have is a snapshot in time of a particular module uploaded for package managers to use, and if anything user facing, such as documentation or examples can be saved in that snapshot and accessible, then it makes it less likely to get tripped up because you won't be cross referencing GitHub which
[20:37] <jacob_c> could have bleeding edge changes that are incompatible. But that's why I was curious about the typical convention for how closely what's available to users should follow the latest on GitHub. It might be rare to find those kinds of discrepancies in real life that often.
[20:42] *** perlbot joined
[20:43] <discord-raku-bot> <Nemokosch> I think this could be summarized as "tell the authors to actually publish their modules"
[20:43] <discord-raku-bot> <Nemokosch> which I agree with
[20:44] *** jgaz left
[20:45] *** simcop2387 joined
[20:45] <jacob_c> That's certainly fair. I guess as another example, in raku.land (or maybe some other module browser) if I wanted to use an older version of a module for some reason, would there be an easy way to browse the docs for that specific version? Or would I have to search for that moment in time in GitHub? Or maybe find where the source gets installed on
[20:45] <jacob_c> my computer and look through manually. (It took me a while to actually find where zef installed the source for this thing.) Anyway, just thinking out loud.
[20:50] *** perlbot left
[20:50] <jacob_c> Ah, looking at raku.land I saw this issue. https://gitlab.com/raku-land/raku-land/-/issues/44 So it appears there is some sort of doc viewing method in raku.land.
[20:50] *** perlbot joined
[20:54] <jacob_c> Or I guess I should say, adding more functionality around module documentation is on their radar.
[20:58] *** tea3po left
[20:59] *** tea3po joined
[21:10] *** simcop2387 left
[21:10] *** perlbot left
[21:12] *** simcop2387 joined
[21:14] *** perlbot joined
[21:33] *** simcop2387 left
[21:34] *** perlbot left
[21:38] *** perlbot joined
[21:42] *** simcop2387 joined
[22:07] *** ab5tract left
[22:11] *** n1to joined
[22:11] *** n1to left
[22:26] *** perlbot left
[22:29] *** simcop2387 left
[22:39] *** perlbot joined
[22:46] <tbrowder__> jacob_c: i may write a blog post about that. i am very opinionated regarding best practices for creating and publishing Raku modules.   
[22:47] <jacob_c> Oh neat! I would definitely be interested in reading that.
[22:50] *** simcop2387 joined
[23:01] *** jpn joined
[23:06] *** jpn left
[23:46] *** razetime joined
