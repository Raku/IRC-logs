[00:00] *** reportable6 left
[00:01] *** jpn joined
[00:01] *** reportable6 joined
[00:06] *** jpn left
[00:14] *** deoac joined
[00:21] <Geth> ¦ doc/main: 1775237659 | (Will Coleda)++ | xt/braces.t
[00:21] <Geth> ¦ doc/main: Ironically don't check Brackets file
[00:21] <Geth> ¦ doc/main: 
[00:21] <Geth> ¦ doc/main: Closes #4212
[00:21] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/1775237659
[00:25] *** jpn joined
[00:28] <rf> Found a decent workaround using state and a block
[00:29] *** jpn left
[00:33] *** freeside joined
[00:38] <[Coke]> folks, we're getting close to release; please review docs-dev.raku.org, feedback to #raku-doc or issues on raku/doc-website (or raku/doc for just content)
[00:40] *** freeside left
[00:41] <rf> [Coke]++
[00:44] <[Coke]> do we something in the ecosystem that gives me a regex for URLs?
[00:48] <[Coke]> thought we had a regexp common or something alreasy but couldn't find it
[00:51] <ugexe> URI module?
[01:01] *** MasterDuke joined
[01:01] * guifa would suggest Token::URI if anyone wants to make it haha
[01:03] *** xinming left
[01:05] *** xinming joined
[01:18] *** jpn joined
[01:26] *** bigdata left
[01:27] *** jpn left
[01:33] *** Manifest0 left
[01:38] *** freeside joined
[01:43] *** freeside left
[01:47] *** razetime joined
[02:04] *** squashable6 left
[02:06] *** squashable6 joined
[02:08] *** deoac left
[02:08] *** theesm left
[02:10] *** theesm joined
[02:11] *** frost joined
[02:13] *** jpn joined
[02:13] *** frost left
[02:22] *** jpn left
[02:30] *** nort left
[02:32] *** razetime1 joined
[02:33] <Geth> ¦ doc/main: 01f0952ac9 | (Will Coleda)++ | doc/Language/traps.pod6
[02:33] <Geth> ¦ doc/main: Partial revert of 542729c22027d95d623a2a6d6b478907666104a1
[02:33] <Geth> ¦ doc/main: 
[02:34] <Geth> ¦ doc/main: debug URL added?
[02:34] <Geth> ¦ doc/main: 
[02:34] <Geth> ¦ doc/main: found with updated links test.
[02:34] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/01f0952ac9
[02:34] <Geth> ¦ doc/main: 68b3c2040a | (Will Coleda)++ | doc/Language/pod.pod6
[02:34] <Geth> ¦ doc/main: Pass updated link test
[02:34] <Geth> ¦ doc/main: 
[02:34] <Geth> ¦ doc/main: URLs need to be L<>, not C<>
[02:34] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/68b3c2040a
[02:34] <Geth> ¦ doc/main: 502a0e3ed0 | (Will Coleda)++ | 2 files
[02:34] <Geth> ¦ doc/main: Examine pod directly instead of using pod2html
[02:34] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/502a0e3ed0
[02:34] *** razetime left
[02:34] *** razetime1 is now known as razetime
[02:40] *** frost joined
[02:50] <rf> Anyone know how to get around Missing serialize REPR function for REPR MVMContext (BOOTContext), I fixed it once but I can't remember
[02:58] *** frost left
[03:00] *** freeside joined
[03:05] *** freeside left
[03:07] *** jpn joined
[03:11] <Geth> ¦ doc/main: 576063a7a7 | (Will Coleda)++ | 4 files
[03:11] <Geth> ¦ doc/main: Remove more ™
[03:11] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/576063a7a7
[03:14] *** jpn left
[03:27] *** jpn joined
[03:35] *** jpn left
[03:47] *** jpn joined
[03:52] *** freeside joined
[03:52] *** jpn left
[03:53] *** razetime1 joined
[03:55] *** razetime left
[03:55] *** razetime1 is now known as razetime
[04:08] *** rf left
[04:12] *** razetime left
[04:26] <[Coke]> can we get raku/doc-website commits tracked here and in #raku-doc?
[04:31] <shmup> [Coke]++
[04:33] *** frost joined
[04:37] <[Coke]> oh, right, I have the keys. Done.
[05:02] *** razetime joined
[05:35] *** jpn joined
[05:40] *** jpn left
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:50] *** razetime left
[07:00] *** jpn joined
[07:05] *** jpn left
[07:26] *** jpn joined
[08:26] *** linkable6 left
[08:26] *** statisfiable6 left
[08:26] *** notable6 left
[08:26] *** quotable6 left
[08:26] *** committable6 left
[08:26] *** greppable6 left
[08:26] *** unicodable6 left
[08:26] *** bloatable6 left
[08:26] *** tellable6 left
[08:26] *** evalable6 left
[08:26] *** benchable6 left
[08:26] *** nativecallable6 left
[08:26] *** shareable6 left
[08:26] *** sourceable6 left
[08:26] *** squashable6 left
[08:26] *** releasable6 left
[08:26] *** coverable6 left
[08:27] *** statisfiable6 joined
[08:27] *** shareable6 joined
[08:27] *** unicodable6 joined
[08:27] *** evalable6 joined
[08:27] *** squashable6 joined
[08:27] *** releasable6 joined
[08:28] *** linkable6 joined
[08:28] *** committable6 joined
[08:28] *** bloatable6 joined
[08:28] *** sourceable6 joined
[08:28] *** coverable6 joined
[08:28] *** benchable6 joined
[08:28] *** quotable6 joined
[08:29] *** tellable6 joined
[08:29] *** nativecallable6 joined
[08:29] *** greppable6 joined
[08:29] *** notable6 joined
[08:30] *** jpn left
[08:31] *** Guest79 joined
[08:34] *** jpn joined
[08:45] *** nort joined
[08:55] <Guest79> what is the command line to compile a raku code to JVM ?
[08:55] <Guest79> $ cat t.raku
[08:55] <Guest79> my $a =1;
[08:55] <Guest79> say $a;
[08:55] <Guest79> $ raku -target=jar -o t.jar t.raku
[08:55] <Guest79> 1
[08:55] <Guest79> Use of Nil in string context
[08:55] <Guest79>   in any print at gen/moar/stage2/NQPCORE.setting line 1594
[08:56] <Guest79> this one generates a zero length jar file
[09:06] <discord-raku-bot> <Nemokosch> I don't think you can compile to JVM
[09:09] <discord-raku-bot> <el gatito (** advocate)> wdym
[09:10] <discord-raku-bot> <Nemokosch> What I just said, lol
[09:19] *** jpn left
[09:25] <discord-raku-bot> <el gatito (** advocate)> wdym by “cannot compile to jvm” raku can be compiled into jvm bytecode
[09:28] <Guest79> documentation explicitly says it can be done
[09:38] *** ab5tract joined
[09:42] <discord-raku-bot> <Nemokosch> I have asked it a while ago and found no sufficient evidence that it can
[09:43] <discord-raku-bot> <Nemokosch> and checking out the so-called "JVM backend", that's mostly a bytecode interpreter running in JVM
[09:43] <discord-raku-bot> <Nemokosch> it consumes QAST, like the other backends
[09:44] <discord-raku-bot> <Nemokosch> so I'm curious now what the documentation says explicitly
[09:47] *** jpn joined
[09:48] <Geth> ¦ doc-website/main: a9d0ccaa2d | (Will Coleda)++ (committed using GitHub Web editor) | 3 files
[09:48] <Geth> ¦ doc-website/main: add more ™ (#141)
[09:48] <Geth> ¦ doc-website/main: review: https://github.com/Raku/doc-website/commit/a9d0ccaa2d
[09:49] <discord-raku-bot> <Nemokosch> remove more tm, add more tm... argh
[09:50] <discord-raku-bot> <Nemokosch> on a different note: > gen/moar/stage2/NQPCORE.setting it says "moar" so I guess the compiler used was wrong (built with MoarVM, not JVM)
[09:53] <discord-raku-bot> <el gatito (** advocate)> so its not like clojure
[09:54] <discord-raku-bot> <el gatito (** advocate)> also using java to interpret raku feels cursed lmao
[09:56] <Guest79> https://www.raku.org/compilers/ says: Rakudo runs on MoarVM and the Java Virtual Machine (JVM).
[09:57] <discord-raku-bot> <Nemokosch> so from what I know, it's rather "it runs on something that runs on the Java Virtual Machine"
[09:58] *** sena_kun joined
[09:58] <discord-raku-bot> <Nemokosch> and hence saying that it runs in the JVM is a bit like saying for MoarVM that it runs natively, since MoarVM is written in C compiled to native code
[10:00] *** NemokoschKiwi joined
[10:01] <NemokoschKiwi> bartolin: are you around, good sir, by any chance?
[10:02] <Guest79> at least MoarVM could be written in Rust... this way Raku is just the good old Perl ... a newer language.. but...
[10:02] <Guest79> does it run on WebAssembly ?
[10:04] *** jpn left
[10:06] <discord-raku-bot> <Nemokosch> When MoarVM was started, there was no Rust around, basically
[10:07] <discord-raku-bot> <Nemokosch> and also, I suppose the argument that the language barrier should be kept low, still stands
[10:07] <discord-raku-bot> <Nemokosch> If your possible contributors don't know Rust, you end up with a "weird flex" situation
[10:08] <discord-raku-bot> <Nemokosch> Also, the important difference is that it could be, indeed, written in Rust, while Perl couldn't, because Perl is fixated on providing a C ABI basically
[10:11] *** Sgeo left
[10:15] *** NemokoschKiwi left
[10:17] <discord-raku-bot> <Nemokosch> oh I found this old issue, by the way https://github.com/Raku/old-issue-tracker/issues/5756
[10:17] <discord-raku-bot> <Nemokosch> > The feature you're asking for does not exist at the moment. >  > You can get the precompiled compilation unit of a Perl 6 program as a .jar with C<--target=jar>, but that doesn't help you, because it a compilation unit that can be understood by a Rakudo executable, not a jar file that can be understood by any JVM.
[10:32] *** Manifest0 joined
[10:46] *** jpn joined
[10:50] *** frost left
[10:51] *** frost left
[10:52] *** jpn left
[11:06] *** jpn joined
[11:14] *** jpn left
[11:18] *** NemokoschKiwi joined
[11:27] *** jpn joined
[11:32] *** jpn left
[11:33] *** NemokoschKiwi left
[11:42] *** abraxxa-home joined
[11:48] *** jpn joined
[11:53] *** jpn left
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:07] *** jpn joined
[12:14] *** jpn left
[12:44] *** jpn joined
[12:49] *** jpn left
[12:55] * guifa definitely needs to make a flow chart for this number formatting.  so many different options with random little bits of code
[12:57] *** hythm joined
[13:04] <Geth> ¦ ecosystem/main: 2bcb932eda | (Elizabeth Mattijsen)++ | META.list
[13:04] <Geth> ¦ ecosystem/main: Remove GTK::Simple
[13:04] <Geth> ¦ ecosystem/main: 
[13:04] <Geth> ¦ ecosystem/main: It now lives in the zef ecosystem
[13:04] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/2bcb932eda
[13:16] <ab5tract> guifa: which number formatting is this?
[13:17] <guifa> ab5tract: Intl::Format::Number
[13:17] <guifa> I've got it currently supporting percent/permille with max/min int/frac digits
[13:17] <guifa> Currently working on adding support for scientific (aka exponential) number, which also mostly gets me significant digits for free
[13:18] <guifa> Currently working on adding support for scientific (aka exponential) number, which also mostly gets me significant digits for free
[13:22] <ab5tract> nice!
[13:26] <guifa> But piecing it all together is … interesting haha
[13:31] <guifa> i could make one mega sub but I'd rather optimize and hard code values where they can be, remove code that won't be used, etc
[13:36] *** hythm left
[13:39] *** jpn joined
[13:47] *** jpn left
[13:56] *** jpn joined
[14:02] *** jpn left
[14:03] *** jpn joined
[14:07] *** jpn left
[14:28] *** jpn joined
[14:41] *** jpn left
[14:55] <ab5tract> guifa: torment the implementor :)
[14:56] <guifa> oh absolutely
[14:57] *** jpn joined
[14:58] <guifa> I think what I'll ultimately do is spin off the number formatter code into a separate module, and then have the Intl::Format::Number just reference it
[14:59] <guifa> I could enable a bit more optimization by allowing people to make formatting options static (e.g. set the maximum digits once, and not allow any changes)
[15:05] *** jpn left
[15:10] *** abraxxa-home left
[15:27] *** abraxxa-home joined
[15:35] *** rf joined
[15:35] <rf> Morning
[15:40] *** abraxxa-home left
[15:43] <guifa> o/
[15:49] *** jpn joined
[15:53] <cfa> morning rf, guifa 
[15:56] *** jpn left
[15:57] <Geth> ¦ doc-website/alter_more_dropdown: 2730af21d1 | finanalyst++ | 2 files
[15:57] <Geth> ¦ doc-website/alter_more_dropdown: remove extended search and error-report, add website issue reporting
[15:57] <Geth> ¦ doc-website/alter_more_dropdown: review: https://github.com/Raku/doc-website/commit/2730af21d1
[15:58] *** abraxxa-home joined
[16:00] <Geth> ¦ doc-website: finanalyst++ created pull request #142: remove extended search and error-report, add website issue reporting
[16:00] <Geth> ¦ doc-website: review: https://github.com/Raku/doc-website/pull/142
[16:01] <Geth> ¦ doc-website/main: 6d36781923 | (Richard Hainsworth)++ (committed using GitHub Web editor) | 2 files
[16:01] <Geth> ¦ doc-website/main: remove extended search and error-report, add website issue reporting (#142)
[16:01] <Geth> ¦ doc-website/main: review: https://github.com/Raku/doc-website/commit/6d36781923
[16:13] <discord-raku-bot> <Anton Antonov> @guifa Just installed "Intl::Format::Number" without problems / complains on moar-2023.02 .
[16:14] <guifa> yay!
[16:15] <guifa> I'm almost done with scientific numbers haha.  I just have to write the digit loop the exponential (which honestly feels like overkill, I mean, how many people are going to have more than like 3 or 4 digits in it?  But I'd rather not spit out an error because a number is too big)
[16:16] <discord-raku-bot> <Anton Antonov> @guifa I haven't tried "Intl::Format::Number" itself yet. So, do not go into relaxation mode too much...
[16:18] <discord-raku-bot> <Anton Antonov> @guifa The package "Lingua::NumericWordForms" deals with cardinals (integers) only at this point. I have to make it deal with ordinals (e.g. "1st", "3rd", etc.) After that scientific numbers and percentages.
[16:18] <guifa> Are you using CLDR to source those?
[16:19] <guifa> Word based formatting is my next thing -- only because it's also needed for handling some other non-numeric (but also non-digit) number formatting
[16:21] <guifa> (I just need to write the parser for RBNF "rule based number formats", which I had been waiting on RakuAST to do ha)
[16:23] <guifa> once I finish the Intl::Format::Number, though, i'm going to do Intl::Format::Currency and revisit Intl::Format::Unit, both of which will use the number formatting at their core.  I'm scared to jump into date formatting LOL
[16:27] <discord-raku-bot> <Anton Antonov> @guifa "Are you using CLDR to source those?" No, and I do not want to introduce a dependency to other packages in "Lingua::NumericWordForms". But I want "Lingua::NumericWordForms" to play nicely with "Intl::Format::Number". For example, "Intl::Format::Number" could used to "decorate" the results of "Lingua::NumericWordForms".
[16:28] *** simcop2387 left
[16:28] *** perlbot left
[16:29] <eseyman> perl -E 'say chr(97)'
[16:30] <lizmat> eseyman: why perl?
[16:30] <discord-raku-bot> <el gatito (** advocate)> is :: in the package name just a simple separator or is it actual namespace operator (like . in java packages)
[16:31] <lizmat> it's a separator
[16:32] <discord-raku-bot> <el gatito (** advocate)> me when
[16:39] <discord-raku-bot> <Anton Antonov> Probably this was discussed already -- I cannot do uploads with "fez:ver<40>" when using moar-2022.12 and moar-2023.02. Is "the cure" to edit ".gitignore" file(s) ?
[16:42] <rf> Can you do union types in Raku, like my Foo | Bar $baz = f();
[16:44] <discord-raku-bot> <el gatito (** advocate)> you can use where constraint for that
[16:44] <rf> Yeah that's what I use right now, I thought maybe there was some subset magic or something I could do
[16:44] <lizmat> or a subset:
[16:44] <lizmat> m: subset StrInt where * ~~ Str | Int; my StrInt $baz = "foo"
[16:44] <camelia> rakudo-moar 95e0a1783: ( no output )
[16:44] *** jpn joined
[16:44] <lizmat> m: subset StrInt where * ~~ Str | Int; my StrInt $baz = 42
[16:44] <camelia> rakudo-moar 95e0a1783: ( no output )
[16:44] <lizmat> m: subset StrInt where * ~~ Str | Int; my StrInt $baz = 42e0
[16:44] <camelia> rakudo-moar 95e0a1783: OUTPUT: «Type check failed in assignment to $baz; expected StrInt but got Num (42e0)␤  in block <unit> at <tmp> line 1␤␤»
[16:45] <rf> Makes sense cool
[16:45] <lizmat> I guess it's just a matter of creating an anonymous subset to allow my Str | Int $a
[16:46] <lizmat> but then we'd want to cache that somehow...  
[16:46] <lizmat> so I guess for now, being explicit is better :-)
[16:46] <discord-raku-bot> <Nemokosch> It's the contrary - :: itself is a namespace 😛
[16:46] <lizmat> ah?  
[16:47] <guifa> I guess they aren't true union types though, at least not inasmuch as how they work in C.  (that would be cool, but I couldn't figure out how to play with the is-repr to maybe have two different types backed by, e.g., a list)
[16:47] <discord-raku-bot> <Anton Antonov> Extraordinary claims require evidence!
[16:47] <discord-raku-bot> <Nemokosch> For dist lookup, it's just an arbitrary sequence of characters I guess
[16:47] <lizmat> indeed
[16:47] <lizmat> dinner&
[16:47] <discord-raku-bot> <Nemokosch> :: stands for .WHO
[16:48] <discord-raku-bot> <Nemokosch> And by itself, for MY.WHO iirc
[16:48] <rf> @Anton about your comments with fez upload, there are some issues with .gitignore make sure it doesn't have a ~ character or it blows up
[16:49] <discord-raku-bot> <el gatito (** advocate)> given raku's history of funny nonconformist names why doesn't it refer to the double colon as paamayim nekudotayim lmao
[16:51] <discord-raku-bot> <Anton Antonov> @rf So, I gathered -- thanks!
[16:51] <discord-raku-bot> <Nemokosch> fez really needs more testing...
[16:52] <discord-raku-bot> <Nemokosch> With some mocked backend at least
[16:52] <rf>  Sounds like you just volunteered :)
[16:52] *** jpn left
[16:52] <discord-raku-bot> <Nemokosch> Not until there is interest in taking those changes, which has been a serious problem
[17:01] *** abraxxa-home left
[17:04] <Geth> ¦ ecosystem: zhouzhen1++ created pull request #616: handover perl6-Inline-Scheme-Gambit to iynehz
[17:04] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/616
[17:11] *** jpn joined
[17:16] *** simcop2387 joined
[17:17] *** perlbot joined
[17:17] *** jpn left
[17:20] <guifa> rf: also if you have a comment line.  I submitted a PR to fix that bit, which tonyo said he'll integrate in once he's back from a trip
[17:23] <rf> Yeah I fixed the ~ recently in a PR as well just not yet live
[17:25] *** ab5tract left
[17:32] *** jpn joined
[17:45] *** jpn left
[17:51] *** jpn joined
[17:53] <rf> It would be neat to have a Perl humble bundle book sale
[17:53] <rf> Perl+Raku of course.
[17:55] <shmup> i bet you can make that happen
[17:56] <rf> I think it's on the publishers to contact humble, but not sure.
[17:57] <shmup> i'm sure it'd be something like that. i'm sure you'd have to first contact the publishers ;)
[17:58] <rf> I'll look into it :^)
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:09] <discord-raku-bot> <Nemokosch> Humble bundle? So is that not game only?
[18:10] <rf> They do programming book sales
[18:10] <lucs> What can I expect to happen if I 'use' the same module more than once in a file? (I didn't find the answer in the docs, maybe I missed it...)
[18:11] <rf> I think you may see some errors about functions overlapping
[18:12] <lucs> I (kind of) accidentally did it, and it appears that my EXPORT sub is run again, but I'm not sure what else might be happening.
[18:17] *** codesections left
[18:25] <tonyo> rf: guifa: just pushed your PRs as fez v41 (still not back, just had a few minutes)
[18:25] <tellable6> 2023-02-18T21:53:19Z #raku <rf> tonyo Will do!
[18:26] <rf> tonyo++
[18:27] <Geth> ¦ doc-website/revised_about_page: 7106290dd9 | finanalyst++ | Website/structure-sources/about.rakudoc
[18:27] <Geth> ¦ doc-website/revised_about_page: New about page
[18:27] <Geth> ¦ doc-website/revised_about_page: review: https://github.com/Raku/doc-website/commit/7106290dd9
[18:28] <Geth> ¦ doc-website: finanalyst++ created pull request #143: New about page
[18:28] <Geth> ¦ doc-website: review: https://github.com/Raku/doc-website/pull/143
[18:32] *** codesections joined
[18:53] *** rf left
[18:56] *** ab5tract joined
[18:58] *** Sgeo joined
[19:12] *** jpn left
[19:13] *** codesections left
[19:29] *** codesections joined
[20:21] *** perlbot left
[20:23] *** perlbot joined
[20:42] *** jpn joined
[20:47] *** jpn left
[21:31] *** guifa_ joined
[21:35] *** guifa left
[21:50] <shmup> rf: it'll be cool if someone publishes a raku book on no starch press
[21:50] <tellable6> shmup, I'll pass your message to rf
[22:15] *** jpn joined
[22:20] *** jpn left
[22:52] *** sena_kun left
[23:11] *** rf joined
[23:25] *** codesections left
[23:32] *** Maylay left
[23:38] *** Maylay joined
