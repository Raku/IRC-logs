[00:00] *** reportable6 left
[00:02] *** reportable6 joined
[00:03] *** epony joined
[00:04] *** ab5tract left
[00:04] *** lichtkind left
[00:07] <pingu> i dont think its cause the function has the same name as the file

[00:07] <pingu> ive done that before and it had no problems

[00:10] *** derpydoo joined
[00:10] <discord-raku-bot> <Nemokosch> are you exporting that function in the ValidTokenChk  module of yours?

[00:11] <pingu> nope

[00:12] <pingu> when do I need to export it

[00:13] <discord-raku-bot> <Nemokosch> well, always 😄 or what do you mean

[00:14] <discord-raku-bot> <Nemokosch> in order to get it pulled into your lexical scope when useing the module, you need to export your stuff

[00:15] <pingu> k now it works

[00:15] <pingu> hmm but replace.rakumod doesnt need is export

[00:16] <pingu> ah crap  it is export

[00:16] <pingu> ok my bad

[00:16] <pingu> trying to renember a ocean of stuff here :|

[00:16] <discord-raku-bot> <Nemokosch> 🍬

[00:21] *** derpydoo left
[00:27] *** Oshawott joined
[00:30] *** archenoth left
[00:44] *** stevied__ joined
[00:44] *** stevied_test left
[01:11] *** Manifest0 left
[01:17] *** stevied__ left
[01:20] *** stevied_test joined
[01:53] <[Coke]> (cold) HOLY CRAP is it.

[02:02] <pingu> bbl

[02:20] *** linkable6 left
[02:20] *** evalable6 left
[02:20] *** NemokoschKiwi joined
[02:21] *** NemokoschKiwi left
[02:21] *** evalable6 joined
[02:23] *** linkable6 joined
[02:29] <[Coke]> I have installed cro without test errors on an ubuntu box in azure, yes.

[02:30] <rf> Hmm, can I generate a class at runtime?

[02:30] <discord-raku-bot> <Nemokosch> interesting, for me it "broke" on WSL iirc

[02:31] <discord-raku-bot> <Nemokosch> sure you can, that's what the compiler itself does 😛

[02:31] <discord-raku-bot> <Nemokosch> I think there is even a code example in the docs. It's MOP stuff

[02:31] <rf> Awesome i'll look

[02:31] <rf> Was wondering how deep into Meta programming I could go lol

[02:31] <rf> I found that declaring types as JSON for this project makes the most sense so hopefully I can pull it off

[02:32] <discord-raku-bot> <Nemokosch> this is actually the first example basically

[02:32] <discord-raku-bot> <Nemokosch> hope it's up-to-date

[02:33] *** razetime joined
[02:33] *** cfa left
[02:37] *** swaggboi joined
[02:38] <rf> @Nemokosch can you pass a link

[02:40] <[Coke]> guessing https://docs.raku.org/language/mop

[02:40] <rf> [Coke]++ Nemokosch++

[02:44] <Geth> ¦ doc: coke unassigned from JJ Issue 1-file HTML does not yet exist https://github.com/Raku/doc/issues/3632

[02:44] <Geth> ¦ doc: coke unassigned from JJ Issue Change templates and the rest of the code to point to the new repo https://github.com/Raku/doc/issues/3101

[02:44] <Geth> ¦ doc: coke unassigned from JJ Issue `is equiv`/`is tighter`/`is looser` underdocumented https://github.com/Raku/doc/issues/1730

[02:45] <Geth> ¦ doc: coke unassigned from JJ Issue Create a new page with info about OS portability https://github.com/Raku/doc/issues/670

[02:45] <Geth> ¦ doc: coke unassigned from JJ Issue Test internal modules https://github.com/Raku/doc/issues/1751

[02:46] <Geth> ¦ doc: coke unassigned from JJ Issue Intent, not syntax https://github.com/Raku/doc/issues/1748

[02:49] <rf> Hmm how can I add a field to a MetaModel?

[02:50] <rf> m: my T := MetaModel::ClassHOW.new_type(name => T); T.^add_attr('abc');

[02:50] <camelia> rakudo-moar 37f525995: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Malformed my (did you mean to declare a sigilless \T or $T?)␤at <tmp>:1␤------> my T⏏ := MetaModel::ClassHOW.new_type(name =>␤»

[02:50] <rf> m: constant T := MetaModel::ClassHOW.new_type(name => T); T.^add_attr('abc');

[02:50] <camelia> rakudo-moar 37f525995: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared name:␤    T used at line 1␤␤»

[02:50] <rf> m: my constant T := MetaModel::ClassHOW.new_type(name => T); T.^add_attr('abc');

[02:50] <camelia> rakudo-moar 37f525995: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared name:␤    T used at line 1␤␤»

[02:51] <discord-raku-bot> <Nemokosch> m: my \T = MetaModel::ClassHOW.new_type(name => T); T.^add_attr('abc');

[02:51] <discord-raku-bot> <Raku eval>  Exit code: 1 Could not find symbol '&ClassHOW' in 'GLOBAL::MetaModel'   in block <unit> at main.raku line 1   

[02:51] <discord-raku-bot> <Nemokosch> m: my \T = Metamodel::ClassHOW.new_type(name => T); T.^add_attr('abc');

[02:51] <discord-raku-bot> <Raku eval>  Exit code: 1 No such method 'add_attr' for invocant of type 'Perl6::Metamodel::ClassHOW'   in block <unit> at main.raku line 1   

[02:52] <discord-raku-bot> <Nemokosch> getting there

[02:52] <rf> To the source code I go

[02:52] <discord-raku-bot> <Nemokosch> m: my \T = Metamodel::ClassHOW.new_type(name => T); T.^add_attribute('abc', Attribute.new);

[02:52] <discord-raku-bot> <Raku eval>  Exit code: 1 Required named parameter 'name' not passed   in block <unit> at main.raku line 1   

[02:53] <discord-raku-bot> <Nemokosch> well yeah, something like this

[02:53] <discord-raku-bot> <Nemokosch> https://docs.raku.org/type/Metamodel::ClassHOW#(Metamodel::AttributeContainer)_method_add_attribute

[02:53] <rf> Looks like I need ot use AttributeContainer

[02:54] <discord-raku-bot> <Nemokosch> ClassHOW implements that 😉

[02:54] <rf> Ah

[02:54] <rf> Nice

[02:55] <rf> m: my \T = Metamodel::ClassHOW.new_type(name => 'T'); T.^add_attribute('abc', Attribute.new);

[02:55] <camelia> rakudo-moar 37f525995: OUTPUT: «Required named parameter 'name' not passed␤  in block <unit> at <tmp> line 1␤␤»

[02:55] <rf> m: my \T = Metamodel::ClassHOW.new_type(name => 'T'); T.^add_attribute('abc', Attribute.new(name => 'abc'));

[02:56] <camelia> rakudo-moar 37f525995: OUTPUT: «Required named parameter 'type' not passed␤  in block <unit> at <tmp> line 1␤␤»

[02:56] <rf> m: my \T = Metamodel::ClassHOW.new_type(name => 'T'); T.^add_attribute('abc', Attribute.new(name => 'abc', type => 'string'));

[02:56] <camelia> rakudo-moar 37f525995: OUTPUT: «Required named parameter 'package' not passed␤  in block <unit> at <tmp> line 1␤␤»

[02:56] <rf> m: my \T = Metamodel::ClassHOW.new_type(name => 'T'); T.^add_attribute('abc', Attribute.new(name => 'abc', type => 'string', package => ACME::Types));

[02:56] <camelia> rakudo-moar 37f525995: OUTPUT: «Could not find symbol '&Types' in 'GLOBAL::ACME'␤  in block <unit> at <tmp> line 1␤␤»

[02:56] <rf> m: my \T = Metamodel::ClassHOW.new_type(name => 'T'); T.^add_attribute('abc', Attribute.new(name => 'abc', type => 'string', package => ACME));

[02:56] <camelia> rakudo-moar 37f525995: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared name:␤    ACME used at line 1␤␤»

[02:56] <rf> m: my \T = Metamodel::ClassHOW.new_type(name => 'T'); T.^add_attribute('abc', Attribute.new(name => 'abc', type => 'string', package => NativeCall));

[02:56] <camelia> rakudo-moar 37f525995: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared name:␤    NativeCall used at line 1␤␤»

[02:56] <rf> m: use NativeCall; my \T = Metamodel::ClassHOW.new_type(name => 'T'); T.^add_attribute('abc', Attribute.new(name => 'abc', type => 'string', package => NativeCall));

[02:56] <camelia> rakudo-moar 37f525995: OUTPUT: «Too many positionals passed; expected 3 arguments but got 4␤  in block <unit> at <tmp> line 1␤␤»

[02:56] <rf> Meh lol

[02:59] <discord-raku-bot> <Nemokosch> What if it really wanted :: ?

[03:00] <discord-raku-bot> <Nemokosch> As in,  .WHO?

[03:05] <Geth> ¦ doc: coke assigned to dontlaugh Issue We need to speed up tests or otherwise reduce dependence on Travis https://github.com/Raku/doc/issues/3777

[03:05] *** rf left
[03:14] <Geth> ¦ doc: coke self-assigned Take care of CI and all repo-related tooling https://github.com/Raku/doc/issues/3102

[03:14] <Geth> ¦ doc: coke assigned to dontlaugh Issue Take care of CI and all repo-related tooling https://github.com/Raku/doc/issues/3102

[03:14] <Geth> ¦ doc: coke self-unassigned Take care of CI and all repo-related tooling https://github.com/Raku/doc/issues/3102

[03:20] <Geth> ¦ doc: coke assigned to dontlaugh Issue Run extended/author tests regularly/automatically https://github.com/Raku/doc/issues/3036

[03:20] <Geth> ¦ doc: coke self-assigned Time to delete stale branches... again https://github.com/Raku/doc/issues/3003

[03:21] <Geth> ¦ doc: coke self-assigned Version 2.0 Roadmap https://github.com/Raku/doc/issues/2983

[03:21] <Geth> ¦ doc: coke self-assigned Parameterization vs. parametrization https://github.com/Raku/doc/issues/2967

[03:29] <Geth> ¦ doc/main: ddf8c69abd | (Will Coleda)++ | xt/word-variants.t

[03:29] <Geth> ¦ doc/main: Parameterization vs. parametrization

[03:29] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/ddf8c69abd

[03:29] <Geth> ¦ doc/main: 520c466f4c | (Will Coleda)++ | app.pl

[03:29] <Geth> ¦ doc/main: Remove perl5 app runner

[03:29] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/520c466f4c

[03:35] *** kjp left
[03:41] <Geth> ¦ doc: coke self-assigned Intent, not syntax https://github.com/Raku/doc/issues/1748

[03:42] <[Coke]> m: say 3.print-nl

[03:42] <camelia> rakudo-moar 37f525995: OUTPUT: «Cannot resolve caller print(Int:D: Str:D); none of these signatures matches:␤    (Mu: *%_)␤  in block <unit> at <tmp> line 1␤␤»

[03:52] <Geth> ¦ doc/main: a639587650 | (Will Coleda)++ | util/test-links.sh

[03:52] <Geth> ¦ doc/main: Remove link checker

[03:53] <Geth> ¦ doc/main: 

[03:53] <Geth> ¦ doc/main: https://github.com/Raku/doc-website/issues/72

[03:53] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/a639587650

[03:57] *** razetime left
[04:09] *** pingu left
[04:14] *** pingu joined
[04:24] *** razetime joined
[04:34] *** kjp joined
[04:36] *** Abhoerschutz joined
[05:36] *** nativecallable6 left
[05:36] *** reportable6 left
[05:36] *** evalable6 left
[05:36] *** benchable6 left
[05:36] *** statisfiable6 left
[05:36] *** unicodable6 left
[05:36] *** bisectable6 left
[05:36] *** bloatable6 left
[05:36] *** committable6 left
[05:36] *** notable6 left
[05:36] *** coverable6 left
[05:36] *** tellable6 left
[05:36] *** quotable6 left
[05:36] *** greppable6 left
[05:36] *** sourceable6 left
[05:36] *** releasable6 left
[05:36] *** shareable6 left
[05:36] *** squashable6 left
[05:36] *** linkable6 left
[05:36] *** nativecallable6 joined
[05:37] *** tellable6 joined
[05:37] *** benchable6 joined
[05:37] *** evalable6 joined
[05:37] *** releasable6 joined
[05:37] *** quotable6 joined
[05:38] *** statisfiable6 joined
[05:38] *** greppable6 joined
[05:38] *** notable6 joined
[05:38] *** squashable6 joined
[05:39] *** bisectable6 joined
[05:39] *** reportable6 joined
[05:39] *** coverable6 joined
[05:39] *** shareable6 joined
[05:39] *** linkable6 joined
[05:39] *** bloatable6 joined
[05:39] *** unicodable6 joined
[05:39] *** sourceable6 joined
[05:39] *** committable6 joined
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:02] *** notable6 left
[07:02] *** statisfiable6 left
[07:02] *** shareable6 left
[07:02] *** linkable6 left
[07:02] *** sourceable6 left
[07:02] *** unicodable6 left
[07:02] *** coverable6 left
[07:02] *** nativecallable6 left
[07:02] *** greppable6 left
[07:02] *** tellable6 left
[07:02] *** reportable6 left
[07:02] *** quotable6 left
[07:02] *** bisectable6 left
[07:02] *** benchable6 left
[07:02] *** releasable6 left
[07:02] *** evalable6 left
[07:02] *** quotable6 joined
[07:02] *** notable6 joined
[07:02] *** evalable6 joined
[07:02] *** benchable6 joined
[07:02] *** reportable6 joined
[07:03] *** greppable6 joined
[07:03] *** linkable6 joined
[07:03] *** statisfiable6 joined
[07:03] *** nativecallable6 joined
[07:04] *** tellable6 joined
[07:04] *** coverable6 joined
[07:04] *** unicodable6 joined
[07:04] *** bisectable6 joined
[07:04] *** releasable6 joined
[07:05] *** shareable6 joined
[07:05] *** sourceable6 joined
[07:18] *** jpn joined
[07:59] *** pingu left
[08:01] *** razetime left
[08:01] *** razetime joined
[08:05] *** razetime left
[08:17] *** Abhoerschutz left
[08:20] *** razetime joined
[08:21] *** derpydoo joined
[08:54] *** MoC joined
[08:59] *** snonux joined
[08:59] *** rantanplan joined
[09:06] *** snonux left
[09:07] *** rantanplan left
[09:21] *** rantanplan joined
[09:22] *** snonux joined
[09:26] *** Oshawott left
[09:28] *** Oshawott joined
[09:47] *** jpn left
[09:47] *** Manifest0 joined
[10:02] *** jpn joined
[10:09] *** ab5tract joined
[10:17] *** sena_kun joined
[10:19] *** freeside joined
[10:20] *** jpn left
[10:31] *** rantanplan left
[10:31] *** snonux left
[10:49] *** Abhoerschutz_ joined
[10:50] *** Abhoerschutz_ left
[10:50] *** Schokotraum joined
[10:54] *** Sgeo left
[10:58] *** Schokotraum left
[11:01] <discord-raku-bot> <Nemokosch> The day has come: I'm adopting the Data::MessagePack module under raku-community-modules

[11:03] <discord-raku-bot> <Nemokosch> and if there are no objections, soon I will remove the original version from p6c

[11:04] *** Schokotraum joined
[11:07] *** Schokotraum left
[11:07] *** Schokotraum joined
[11:08] <lizmat> Nemokosch++

[11:12] *** jpn joined
[11:22] *** razetime left
[11:59] *** jpn left
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:23] *** lichtkind joined
[12:48] *** codesections left
[13:09] <discord-raku-bot> <Nemokosch> do you know about something like "bring PR to fork as well" ?

[13:13] *** guifa left
[13:15] *** jpn joined
[13:15] <lizmat> nope, the only way is to transfer the whole repo to raku-community-modules

[13:15] <lizmat> which would need the cooperation of the owner

[13:16] <lizmat> and I think lack of cooperation is the reason to fork, right ?

[13:17] <discord-raku-bot> <Nemokosch> yes

[13:17] <discord-raku-bot> <Nemokosch> Actually, in this case, it's easier to just replicate the idea of the PR since it couldn't be directly applied anyway and it's a one liner

[13:18] <discord-raku-bot> <Nemokosch> but there might be other cases where this would have been useful

[13:18] <lizmat> indeed...

[13:18] <lizmat> similar to wikis

[13:19] <lizmat> I had to copy Ben Davies' wikis of some repos manually

[13:19] *** razetime joined
[13:19] <discord-raku-bot> <Nemokosch> :\

[13:20] <lizmat> in the end only 4 files, but still...

[13:20] <lizmat> fortunately you could clone the wiki

[13:20] <lizmat> hmmm.. now I think about it, maybe I could have cloned and then pushed again  ....

[13:20] <lizmat> ah well, next time

[13:22] <discord-raku-bot> <Nemokosch> yes, in theory, this could get infinitely complex, if something big needs to be moved for whatever reason

[13:23] <discord-raku-bot> <Nemokosch> one'd hope that in that case transferring would be an option

[13:24] <lizmat> It *is* an option, but requires cooperation

[13:24] <lizmat> and that's a good thing :-)

[13:24] <discord-raku-bot> <Nemokosch> Unfortunately, someone's passing does not only leave the sorrow and missing behind, but also administrative complications.

[13:25] <discord-raku-bot> <Nemokosch> Eventually it would be good to get to process Ben's legacy, as in, unfinished work for example. But I can't even imagine when there will be a sufficient occasion for that...

[13:27] *** jpn left
[13:30] <discord-raku-bot> <Nemokosch> off topic: the overall CLI design of git is horrible regarding consistency

[13:30] <discord-raku-bot> <Nemokosch> as if the person designing git branch and the one designing git remote had no knowledge of each other's work

[13:35] <discord-raku-bot> <el gatito (** advocate)> just use github desktop 😎

[13:42] <Voldenet> lazygit is pretty nice

[13:42] *** freeside left
[13:42] <discord-raku-bot> <Nemokosch> oh? never heard of it?

[13:45] <Voldenet> it was sold to me when I didn't have to use the stash before the pull, it's such a pointless chore

[13:46] <discord-raku-bot> <Nemokosch> you mean the "you have uncommitted changes" stuff?

[13:46] <Voldenet> Yeah, it gets really annoying if you see that for 800th time

[13:47] <discord-raku-bot> <Nemokosch> fair enough haha

[13:47] <discord-raku-bot> <Nemokosch> I don't often work on repos where this would be prevalent but it happened to me as well a couple of days ago, on my own Raku-ideas repo that I tend to edit all over the place

[13:49] *** razetime left
[13:56] *** freeside joined
[14:35] *** rf joined
[14:36] <rf> Morning folks

[14:40] <discord-raku-bot> <Nahita> hi what is "<.kok>" seen in the grammar?

[14:41] <Voldenet> it's a `token kok` probably

[14:41] <discord-raku-bot> <Nahita> maybe, what couldn't find definition

[14:41] <discord-raku-bot> <Nahita> *but

[14:41] <Voldenet> https://github.com/rakudo/rakudo/blob/37f5259/src/Raku/Grammar.nqp#L2752

[14:42] <discord-raku-bot> <Nahita> thank you sorry

[14:42] <Voldenet> np, it's a strange name nonetheless

[14:45] <[Coke]> https://blogs.perl.org/users/damian_conway/2019/09/itchscratch.html - "Keyword that's OK"

[14:45] <discord-raku-bot> <Nemokosch> lmao xD

[14:47] *** MoC left
[14:49] *** derpydoo left
[14:52] *** jgaz joined
[14:53] <rf> I have a new project on the go, I think it's going to be very interesting to see how it plays out :D

[14:54] <rf> Trying to apply Raku to cloud-infra and containers stuff

[14:55] <Geth> ¦ doc/main: 7a30bae1b2 | (Will Coleda)++ | util/issue-with-all-pod6.raku

[14:55] <Geth> ¦ doc/main: Update repo reference

[14:55] <Geth> ¦ doc/main: 

[14:55] <Geth> ¦ doc/main: Closes #3101

[14:55] <Geth> ¦ doc/main: review: https://github.com/Raku/doc/commit/7a30bae1b2

[14:59] *** freeside left
[15:00] <Voldenet> I appreciate the explanation of `kok` and `tok`

[15:12] *** derpydoo joined
[15:16] *** freeside joined
[15:21] *** freeside left
[15:22] *** freeside joined
[15:25] *** mst joined
[15:27] *** freeside left
[15:30] *** snonux joined
[15:30] *** snonux left
[15:30] *** snonux joined
[15:33] *** snonux_ joined
[15:41] *** freeside joined
[15:58] <[Coke]> might be worth a glossary entry

[16:00] *** freeside left
[16:13] <discord-raku-bot> <el gatito (** advocate)> is there a “truncate with scale” function

[16:14] <discord-raku-bot> <el gatito (** advocate)> as in, i want to round a number to a multiple of 100 (for instance) towards zero

[16:15] *** freeside joined
[16:18] *** razetime joined
[16:25] *** derpydoo left
[16:28] *** snonux left
[16:28] *** snonux_ is now known as snonux

[16:28] *** snonux left
[16:32] *** snonux joined
[16:32] <Voldenet> round?

[16:32] <Voldenet> m: my $x = "1234.5678"; say $x.round(100); say $x.round(0.01);

[16:32] <camelia> rakudo-moar d824e6d24: OUTPUT: «1200␤1234.57␤»

[16:34] <Voldenet> if you need truncate to accept scale, you'd need to write your subroutine :/

[16:36] <Voldenet> m: sub trunc(Num() $num, Num() $scale) { truncate($num / $scale) * $scale }; say $x.trunc(100); say $x.trunc(0.01);

[16:36] <camelia> rakudo-moar d824e6d24: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable '$x' is not declared.  Perhaps you forgot a 'sub' if this was␤intended to be part of a signature?␤at <tmp>:1␤------> truncate($num / $scale) * $scale }; say ⏏$x.trunc(100); say $x…»

[16:36] <discord-raku-bot> <Nemokosch> ohh, as opposed to "round with scale"?

[16:36] <Voldenet> m: sub trunc(Num() $num, Num() $scale) { truncate($num / $scale) * $scale }; my $x = "1234.5678"; say $x.trunc(100); say $x.trunc(0.01);

[16:36] <camelia> rakudo-moar d824e6d24: OUTPUT: «No such method 'trunc' for invocant of type 'Str'.  Did you mean␤'trans'?␤  in block <unit> at <tmp> line 1␤␤»

[16:36] <discord-raku-bot> <Nemokosch> That sounds like yet another thing that could be added to core eventually

[16:36] <Voldenet> m: sub trunc(Num() $num, Num() $scale) { truncate($num / $scale) * $scale }; my $x = "1234.5678"; say $x.&trunc(100); say $x.&trunc(0.01);

[16:36] <camelia> rakudo-moar d824e6d24: OUTPUT: «1200␤1234.56␤»

[16:37] <Voldenet> well, 'truncate' could accept scale parameter

[16:37] <mst> something like $str.truncate($str.length.round(100)) ?

[16:38] <Voldenet> something like that

[16:41] <Voldenet> hah, `round` pretty much does the same thing

[16:41] <Voldenet> multi method round(Real:D: Real() $scale) { (self / $scale + 1/2).floor * $scale; }

[16:45] <mst> hrm, the +1/2 means it's going to round to nearest, not down

[16:46] <mst> I think there's a version that takes a direction but I don't remember clearly so you probably want to poke at the docs/code a bit if you want to find out whether I'm right and if so what it's called ;)

[16:49] <Voldenet> well, it's rounding not truncating

[16:50] <Voldenet> truncate itself does floor/ceiling depending on the sign

[16:50] *** jgaz left
[16:51] <mst> yes but at that point it's -already- rounded so truncate is potentially going to get the higher number

[16:52] <mst> I suspect what you actually want is 'div' though I also don't remember if raku calls it that

[16:52] *** ab5tract left
[16:54] *** NemokoschKiwi joined
[16:59] <Voldenet> div only works on (Rat, Rat) sadly

[17:01] <mst> isn't string.length an Int and therefore trivially upgradable?

[17:01] <mst> m: my $str = "foobarbaz"; say string.length div 4

[17:01] <camelia> rakudo-moar d824e6d24: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared routine:␤    string used at line 1␤␤»

[17:02] <mst> m: my $str = "foobarbaz"; say $str.length div 4

[17:02] <camelia> rakudo-moar d824e6d24: OUTPUT: «No such method 'length' for invocant of type 'Str'.  Did you mean any␤of these: 'chars', 'codes'?␤  in block <unit> at <tmp> line 1␤␤»

[17:02] <mst> m: my $str = "foobarbaz"; say $str.chars div 4

[17:02] <camelia> rakudo-moar d824e6d24: OUTPUT: «2␤»

[17:02] <mst> Voldenet: see, works fine

[17:02] <mst> m: my $str = "foobarbaz"; say $str.truncate(($str.chars div 4) * 4)

[17:02] <camelia> rakudo-moar d824e6d24: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[17:03] <mst> ok, I clearly did something stupid there

[17:03] <mst> m: my $str = "foobarbaz"; say $str.truncate($str.chars div 4 * 4)

[17:03] <camelia> rakudo-moar d824e6d24: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[17:03] <mst> I think I am failing at raku syntax and somebody else should likely take over now

[17:03] <mst> Voldenet: but div definitely works, it's just a question of putting the rest together

[17:04] <Voldenet> whoa whoa, that truncate expects Str, the original question was about the Numeri

[17:04] <Voldenet> Numeric*

[17:04] <Voldenet> I think

[17:05] <Voldenet> mst: truncate is not doing what you think it does, it's for numbers

[17:06] <mst> oh, I must've misunderstood something you said earlier

[17:07] <mst> though if you have an int to start with, div 100, * 100, should work fine

[17:07] <mst> and if you have a Rat to start with, just int() it first

[17:07] <mst> gah

[17:07] <mst> Real

[17:07] * mst grumbles

[17:07] <mst> m: my $x = 2.345; say $x.Int

[17:07] <camelia> rakudo-moar d824e6d24: OUTPUT: «2␤»

[17:07] <mst> m: my $x = 9.345; say $x.Int div 4 * 4

[17:07] <camelia> rakudo-moar d824e6d24: OUTPUT: «8␤»

[17:08] <mst> Voldenet: that closer to what you had in mind?

[17:08] <Voldenet> the problem given was `truncate the number given the scale, so (0.01) or (100)`

[17:09] <mst> which is what that does, no?

[17:09] <mst> oh, except 0.01 is going to ... sigh

[17:10] <Voldenet> that's why I've used truncate and /

[17:10] <discord-raku-bot> <Nemokosch> div reminds me

[17:10] <mst> m: my $x = 9.345; say $x.Rat div 0.01 * 0.01

[17:10] <camelia> rakudo-moar d824e6d24: OUTPUT: «Cannot resolve caller infix:<div>(Rat:D, Rat:D); none of these signatures matches:␤    (Int:D $a, Int:D $b --> Int:D)␤    (int $a, int $b --> int)␤    (uint $a, uint $b --> uint)␤  in block <unit> at <tmp> line 1␤␤»

[17:10] <discord-raku-bot> <Nemokosch> we haven't had an upgrade on the issue I opened about ^^^^ this

[17:10] <mst> m: my $x = 9.345; say $x.Rat div 0.01.Rat * 0.01.Rat

[17:10] <camelia> rakudo-moar d824e6d24: OUTPUT: «Cannot resolve caller infix:<div>(Rat:D, Rat:D); none of these signatures matches:␤    (Int:D $a, Int:D $b --> Int:D)␤    (int $a, int $b --> int)␤    (uint $a, uint $b --> uint)␤  in block <unit> at <tmp> line 1␤␤»

[17:10] <discord-raku-bot> <Nemokosch> like, why does [&div] bizarrely not coerce?

[17:10] *** snonux left
[17:11] <Voldenet> yeah, div is not Cool

[17:11] <discord-raku-bot> <Nemokosch> when even [&gcd] does

[17:11] <discord-raku-bot> <Nemokosch> I think MasterDuke adapted the tests to the coercing behavior back in the day, then the discussion kinda rallied off

[17:11] <mst> it just gets annoyed about reals, which ... personally I like things that are picky about floats because of the number of times I've seen people shoot themselves in the foot with floats when there was no actual need to be using them

[17:12] <mst> however inconsistency between functions is suboptimal

[17:12] <discord-raku-bot> <Nemokosch> Reals are not the same as floats - the latter would be Num

[17:12] <discord-raku-bot> <Nemokosch> Reals are really the abstract, mathematically sane category

[17:12] <mst> sorry

[17:13] <mst> li'l bit rusty here

[17:13] <discord-raku-bot> <Nemokosch> lately there've been work on adding more support for Complex operations to the core

[17:13] <discord-raku-bot> <Nemokosch> like the logarithm of -1 and the sign of complex numbers

[17:14] <discord-raku-bot> <Nemokosch> the "sign" is the normalized direction iirc

[17:15] <discord-raku-bot> <Nemokosch> I'm pro sqrt -1 as well, although that would definitely be a new language version for safety

[17:16] <mst> I'm ambivalent because that would make sqrt return different types in different situations unless you made it always return Complex and that probably has its own Interesting Times attached as a choice

[17:17] <discord-raku-bot> <el gatito (** advocate)> sqrt(-1) eh most people don’t know complex numbers and its better to throw errors rather than giving something strange to them

[17:19] <discord-raku-bot> <Nemokosch> I mean, use types if you aren't happy with a complex number

[17:19] <discord-raku-bot> <Nemokosch> it's really not a huge risk

[17:19] <discord-raku-bot> <Nemokosch> if you cast to Real, you get the error

[17:19] * mst expresses no opinion about that part because he's a pure maths grad without sufficient theory of mind to model how the general user would see it

[17:20] <discord-raku-bot> <Nemokosch> yeah I'd say always complex tbh, there is .narrow to help out

[17:21] *** NemokoschKiwi left
[17:22] <mst> gut feeling is that most users would be better served by an exception, and having either a csqrt or a 'DWIMs for mathemamticans sqrt' that can be imported might be a wiser idea

[17:23] <discord-raku-bot> <Nemokosch> I think that genuinely goes against the decision of division returning rational numbers

[17:23] <discord-raku-bot> <Nemokosch> this was a marketing topic, even, "it does the right thing, it knows math by default"

[17:23] <discord-raku-bot> <Nemokosch> why disregard it immediately with powers

[17:25] <discord-raku-bot> <el gatito (** advocate)> but then is it a math oriented language?

[17:26] *** snonux joined
[17:26] <discord-raku-bot> <el gatito (** advocate)> does people use it for that purpose

[17:27] <mst> the question, basically, is whether the feature will be more useful to people intending to do complex math than it will be confusing to everybody who isn't

[17:28] <mst> and I'm unsure how one would answer that

[17:28] <discord-raku-bot> <el gatito (** advocate)> id imagine the people using complex math to be a small subset of people using sqrt

[17:29] <mst> m: say -1.Complex

[17:29] <camelia> rakudo-moar d824e6d24: OUTPUT: «-1-0i␤»

[17:30] <mst> wonder if taking a complex number as input as a hint would work

[17:30] <mst> so you have Real -> Real and Complex -> Complex signatures

[17:30] <discord-raku-bot> <Nemokosch> I think if you are doing that call at all, you do want it to work

[17:31] *** snonux left
[17:31] <mst> or you're doing sqrt($x) and you -thought- $x wasn't negative and were mistaken

[17:31] <discord-raku-bot> <Nemokosch> getting an error for that is NOT that valuable, and if you want that to happen, it's really a very welcome solution to use types

[17:31] <discord-raku-bot> <el gatito (** advocate)> m: say -1.Complex.sqrt

[17:31] <discord-raku-bot> <Raku eval>  -1-0i  

[17:32] <discord-raku-bot> <el gatito (** advocate)> the sqrt of -1 is -1

[17:32] <discord-raku-bot> <el gatito (** advocate)> real

[17:32] <mst> uh

[17:32] <mst> that ... uh

[17:32] <discord-raku-bot> <el gatito (** advocate)> m: say (-1).Complex.sqrt

[17:32] <discord-raku-bot> <Raku eval>  0+1i  

[17:32] <discord-raku-bot> <el gatito (** advocate)> ok

[17:33] <mst> I think I'm just gonna hide under my desk and rock for a bit now.

[17:33] <discord-raku-bot> <Nemokosch> xD

[17:33] <discord-raku-bot> <el gatito (** advocate)> why do i always forget that unary is less precedent than dot

[17:34] <mst> oh, of course, so we ended up with -(1.Complex.sqrt)

[17:34] <discord-raku-bot> <el gatito (** advocate)> either that or -1 should be a number literal

[17:36] <discord-raku-bot> <Nemokosch> -1 is not a number literal

[17:36] <discord-raku-bot> <Nemokosch> buuut

[17:36] <discord-raku-bot> <Nemokosch> whitespace helps xD

[17:36] <discord-raku-bot> <Nemokosch> -1 .Complex.sqrt

[17:38] *** rypervenche left
[17:40] *** rypervenche joined
[17:40] *** razetime left
[17:49] <discord-raku-bot> <el gatito (** advocate)> ik

[17:51] *** snonux joined
[17:52] *** jpn joined
[17:53] *** pingu joined
[17:53] *** notna joined
[17:56] *** jpn left
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:09] *** simcop2387 left
[18:09] *** perlbot left
[18:12] *** snonux left
[18:14] *** p6steve joined
[18:14] <p6steve> m: (-1).sqrt

[18:14] <camelia> rakudo-moar d824e6d24: ( no output )

[18:14] <p6steve> m: (-1).sqrt.say

[18:14] <camelia> rakudo-moar d824e6d24: OUTPUT: «NaN␤»

[18:17] <discord-raku-bot> <p6steve> sqrt coerces arg to Num (since it will return an irrational result by definition and uses the FPU sqrt for performance and IEEE P754 type error behaviour)

[18:18] <discord-raku-bot> <p6steve> I just saw the above discussion ... made me smile

[18:20] *** snonux joined
[18:29] *** freeside left
[18:30] *** snonux left
[18:43] *** freeside joined
[18:43] *** snonux joined
[18:47] *** jgaz joined
[18:49] *** snonux left
[19:03] <pingu> if (Str($tok) == False) is not working if I assign a non string value to $tok

[19:05] <discord-raku-bot> <Nemokosch> it shouldn't be working so that's correct

[19:07] <pingu> it is meant to check if the value is a string

[19:08] <pingu> https://pastebin.com/SQrVhWxp

[19:08] <pingu> doing my $x = 4; prints 4

[19:11] <discord-raku-bot> <Nemokosch> meant by whom, though 😛 because it's clearly not a Raku thing

[19:12] <pingu> are you saying that raku cant differentiate between 4 and '4'

[19:12] *** jpn joined
[19:12] <lizmat> m: say "4".^name; say 4.^name

[19:12] <camelia> rakudo-moar d824e6d24: OUTPUT: «Str␤Int␤»

[19:13] <pingu> I wish there was more help online for raku

[19:14] <pingu> derek banas has a video tut but its not very good and well,, I checked rakus website for how to do it and I dont know

[19:15] <lizmat> m: say "is a string" if "42" ~~ Str

[19:15] <camelia> rakudo-moar d824e6d24: OUTPUT: «is a string␤»

[19:15] <lizmat> m: say "is a string" if 42 ~~ Str

[19:15] <camelia> rakudo-moar d824e6d24: ( no output )

[19:17] <pingu> if I make $x 'a' now, doing if if ($x.^name) fails

[19:17] <pingu> but it works if its 4 or 4.4

[19:17] *** jpn left
[19:17] <pingu> ok ill try ~~

[19:18] <pingu> it does the same

[19:18] <lizmat> if you want to see if something is numeric, use Numeric

[19:18] <lizmat> m: say "numeric" if 42.2 ~~ Numeric

[19:18] <camelia> rakudo-moar d824e6d24: OUTPUT: «numeric␤»

[19:18] <lizmat> m: say "numeric" if 42e4 ~~ Numeric

[19:18] <camelia> rakudo-moar d824e6d24: OUTPUT: «numeric␤»

[19:18] <lizmat> m: say "numeric" if 42i ~~ Numeric

[19:18] <camelia> rakudo-moar d824e6d24: OUTPUT: «numeric␤»

[19:18] <lizmat> m: say "numeric" if "42" ~~ Numeric

[19:18] <camelia> rakudo-moar d824e6d24: ( no output )

[19:19] <pingu> in reality the string can contain numbers puncuation and alphanumerics

[19:19] <pingu> for now im adding ' ' around it but when its in a file that will be another problem

[19:19] <pingu> because you cant have ' ' in ldraw format

[19:19] <lizmat> ok, lemme get this straight what you want

[19:20] <lizmat> you want to create a lexical variable that may only contain strings?

[19:21] <pingu> if it is " " or ' ' it should print the value else it should print ("must be a string value");

[19:21] <pingu> < > is probably ok too but I will be using ' ' or " " only

[19:23] <pingu> maybe if I try what you said and what I did in one if condition using &&

[19:23] <lizmat> ' ' and " " *create* a string.  Or do you want a string that contains ' or "

[19:23] <pingu> if ($x ~~ Str && Str($x) == False)

[19:24] <lizmat> in normal words: if $x is a string and $x is not a string ???

[19:24] <pingu> if its of type Str then yes print its contents

[19:25] <pingu> if $is a not a string print an error else print the value of $x

[19:25] <lizmat> I think what you need is:

[19:25] <lizmat> my Str $x

[19:26] <lizmat> if what you try to assign is not a string, then you will get an error

[19:26] <lizmat> m: my Str $x = 42

[19:26] <camelia> rakudo-moar d824e6d24: OUTPUT: «Type check failed in assignment to $x; expected Str but got Int (42)␤  in block <unit> at <tmp> line 1␤␤»

[19:26] <lizmat> so you want a better error message ?

[19:27] <pingu> ah wait I need !~~

[19:28] <pingu>  I was putting ~~ in the false part of the if statement

[19:28] <pingu> yeah my bad !~~ works thx

[19:29] <pingu> so when it doubt try smart match

[19:29] <lizmat> I guess

[19:30] *** snonux joined
[19:34] *** jpn joined
[19:45] *** freeside left
[19:59] *** freeside joined
[20:02] <discord-raku-bot> <Nemokosch> is "source-url" used for anything in META6.json these days?

[20:03] *** jpn left
[20:03] *** freeside left
[20:04] *** freeside joined
[20:04] <ugexe> yes, its more of an ecosystem level thing though

[20:05] <ugexe> as in - ecosystems can set this value or override the existing one if they wish

[20:06] <discord-raku-bot> <Nemokosch> okay, then I will fix the value rather than delete it

[20:06] <discord-raku-bot> <Nemokosch> in this MessagePack bundle

[20:12] <discord-raku-bot> <Nemokosch> One more thing: can Perl6-Data-MessagePack be removed from p6c? I'm about to release the Rakufied, community module version to zef's ecosystem

[20:14] <ugexe> yeah, but you don't have to hurry either since the version of fez will be preferred regardless of i its higher or lower version

[20:15] <discord-raku-bot> <Nemokosch> fair enough, it's more the urge to leave a "clean sheet" that pushes me to this direction

[20:16] <ugexe> it should be fine since the zef ecosystem has been integrated for awhile now

[20:17] <ugexe> fine to just remove it that is

[20:17] *** jgaz left
[20:22] <Geth> ¦ ecosystem: 2colours++ created pull request #613: Remove Data::MessagePack

[20:22] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/pull/613

[20:22] *** jgaz joined
[20:27] *** jpn joined
[20:33] <Geth> ¦ ecosystem/main: 808476955b | (Márton Polgár)++ (committed using GitHub Web editor) | META.list

[20:33] <Geth> ¦ ecosystem/main: Remove Data::MessagePack (#613)

[20:33] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/808476955b

[20:33] *** abraxxa-home joined
[20:34] <lizmat> fg

[20:35] *** abraxxa-home left
[20:36] *** abraxxa-home joined
[20:37] <discord-raku-bot> <Nemokosch> abraxxa: the https://msgpack.org/ site has a sort of weird flow: if you put a certain text into your repo description, it will be generated into the site, and this is updated hourly. This means, the Raku version would soon show up, however the Perl 6 version would also stay there

[20:39] *** snonux left
[20:40] *** snonux joined
[20:50] *** guifa joined
[21:00] *** rantanplan joined
[21:02] *** plantanran joined
[21:02] *** jpn left
[21:04] *** snonux left
[21:05] *** rantanplan left
[21:18] *** freeside left
[21:30] *** freeside joined
[21:37] *** notna left
[21:41] *** Sgeo joined
[21:49] *** freeside left
[21:53] *** plantanran left
[21:56] *** jpn joined
[22:01] *** jpn left
[22:04] *** freeside joined
[22:24] *** jpn joined
[22:29] *** jpn left
[22:31] *** guifa left
[23:06] *** ProperNoun left
[23:07] *** freeside left
[23:19] *** freeside joined
[23:20] *** sena_kun left
[23:24] *** freeside left
[23:30] *** ab5tract joined
[23:30] *** abraxxa-home left
[23:36] *** simcop2387 joined
[23:37] *** perlbot joined
[23:38] *** freeside joined
[23:45] *** ab5tract left
