[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:03] *** jpn left
[00:04] *** kjp left
[00:07] *** kjp joined
[00:22] *** nort left
[00:50] <perryprog> In Soviet Russia, you only can use package scope.

[00:52] *** jpn joined
[00:57] *** jpn left
[00:59] *** derpydoo joined
[01:09] *** japhb left
[01:33] *** japhb joined
[01:46] *** jpn joined
[01:51] *** jpn left
[02:16] *** razetime joined
[02:37] <Voldenet> in soviet russia package scope uses you

[02:43] *** an3223 joined
[02:44] <perryprog> UGH

[02:44] <perryprog> I knew there was a better version

[02:44] <perryprog> thought the my/our joke is less clear

[02:46] <Voldenet> joking is very important business ability in IT, so I hone that ability‚Ä¶

[02:56] <Voldenet> rf: if you give `sort-fast` already sorted array, it will allocate things 3 times and on top of that reallocate for every element ‚Äì it might be possible to use MVMArray and friends directly without copying anything

[03:02] <Voldenet> imo at minimum you should export multi dpqs_sort for CArray[num64], so it's possible to use it without copying memory

[03:34] *** jpn joined
[03:39] *** jpn left
[03:48] *** razetime left
[04:01] <perryprog> How can one customize the search path for nativecall? It's not finding dylibs installed under /opt/homebrew/lib.

[04:01] <Voldenet> you can provide full path

[04:02] <perryprog> Well this is for an installed thingy

[04:02] <perryprog> Net::ZMQ, to be specific

[04:09] <rf> Voldenet yeah that'll be the next steps I take

[04:22] <Voldenet> m: use NativeCall; my $*VM = class :: { method platform-library-name(IO $libname, $apiversion = "") { "/lib/hehe.so.4" } }.new;  my sub zmq_socket() is native("zmqswtf_WTF",v5) { * }; zmq_socket();

[04:22] <camelia> rakudo-moar b258927b0: OUTPUT: ¬´Cannot locate native library '/lib/hehe.so.4': /lib/hehe.so.4: cannot open shared object file: No such file or directory‚ê§  in method setup at /home/camelia/rakudo-m-inst-1/share/perl6/core/sources/C3AB583B2A487B774A5B6012470C058B4893F1C7 (NativeCall‚Ä¶¬ª

[04:22] <Voldenet> perryprog: maybe the above will help

[04:22] <Voldenet> ofc, you might need to capture previous $*VM and redispatch

[04:25] <perryprog>   I'm sorry, I did a really bad job of stating what my problem actually was. What I'm actually trying to do is install Jupyter::Kernel, which depends on ZMQ, which of course expects a native call to libzmq.5.dylib, but it can't find it since it's not in the search path that it's getting from.... somewhere

[04:26] <Voldenet> from here most likely https://github.com/rakudo/rakudo/blob/main/src/core.c/VM.pm6#L73

[04:28] <perryprog> I did find that, but I don't see where it's grabbing its search path from

[04:33] <Voldenet> hm, I'd try using LIB env variable before anything

[04:34] <perryprog> Nope

[04:34] <perryprog> (Funnily enough, the search path does have . as a default so I can run it while in /opt/homebrew/lib just fine :) )

[04:36] *** razetime joined
[04:37] <Voldenet> DYLD_LIBRARY_PATH perhaps?

[04:37] <perryprog> Tried that too, but macOS is weird about env vars that start with DYLD

[04:37] <Voldenet> or DYLD_FALLBACK_LIBRARY_PATH

[04:37] <perryprog> ‚ùØ DYLD_FOOBAR=123 bash -c echo $DYLD_FOOBAR # prints nothing

[04:38] <Voldenet> consider `DYLD_FOOBAR=123 bash -c 'echo $DYLD_FOOBAR'`

[04:38] <perryprog> oop u right

[04:38] <perryprog> phew I was also right

[04:38] <perryprog> (still nothing)

[04:39] <perryprog> Sadly it does seem like Jupyter::Kernel is pretty crashy at least in console mode (I dunno why) and I'm quite tired so I'll have to poke around at another time

[04:40] <Voldenet> I'm pretty sure that MVM_backend_config contains prefix for libs

[04:40] <perryprog> (basically crashes if you tab complete in like... the wrong place? I'm not sure)

[04:40] <Voldenet> but I have no idea how to override that

[04:40] <perryprog> that sounds promising

[04:40] <Voldenet> m: use nqp; nqp::backendconfig<prefix> = "/eh";

[04:40] <camelia> rakudo-moar b258927b0: OUTPUT: ¬´Cannot assign to an immutable value‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[04:41] <perryprog> I should probably file a bug report for Jupyter::Kernel regarding the tab complete crash instead of being blas√© and not ü§î

[04:41] <perryprog> is Brian Duggan on IRC at all?

[04:43] <Voldenet> probably not, but github issue may be more useful for this

[04:45] <perryprog> Yeah, but sometimes I like to check with more async-chat-active people if there's an "is this known" thing about a certain issue

[04:45] <perryprog> Note that's 100% code for "I'm lazy"

[04:47] <Voldenet> not lazy, time-efficient

[04:48] <perryprog> right right. Yes. That.

[04:48] <perryprog> Eh who needs sleep. I just got distracted by a link to cpan and then that made me remember this work of art exists. https://metacpan.org/dist/Lingua-Romana-Perligata/view/lib/Lingua/Romana/Perligata.pm

[04:49] <Voldenet> m: use nqp; nqp::backendconfig<prefix> := "/eh"; use NativeCall; my sub zmq_socket() is native("zmq",v5) { * }; zmq_socket();

[04:49] <camelia> rakudo-moar b258927b0: OUTPUT: ¬´Cannot locate native library 'libzmq.so.5': libzmq.so.5: cannot open shared object file: No such file or directory‚ê§  in method setup at /home/camelia/rakudo-m-inst-1/share/perl6/core/sources/C3AB583B2A487B774A5B6012470C058B4893F1C7 (NativeCall) line‚Ä¶¬ª

[04:49] <Voldenet> that doesn't appear to be working either way

[04:55] *** euandreh left
[05:04] *** Sgeo_ joined
[05:04] *** Sgeo left
[05:10] *** japhb left
[05:18] *** jpn joined
[05:20] *** euandreh joined
[05:24] *** jpn left
[05:35] *** euandreh left
[05:38] *** nort joined
[05:48] *** euandreh joined
[06:00] *** reportable6 left
[06:00] *** reportable6 joined
[06:07] *** Tirifto left
[06:13] *** jpn joined
[06:18] *** jpn left
[06:22] *** Tirifto joined
[06:47] *** Sgeo_ left
[06:49] *** tea3po joined
[06:53] *** teatwo left
[07:53] *** bloatable6 left
[07:53] *** nativecallable6 left
[07:53] *** sourceable6 left
[07:53] *** committable6 left
[07:53] *** shareable6 left
[07:53] *** statisfiable6 left
[07:53] *** benchable6 left
[07:53] *** bisectable6 left
[07:53] *** notable6 left
[07:53] *** greppable6 left
[07:53] *** reportable6 left
[07:53] *** evalable6 left
[07:53] *** quotable6 left
[07:53] *** coverable6 left
[07:53] *** squashable6 left
[07:53] *** unicodable6 left
[07:53] *** tellable6 left
[07:53] *** releasable6 left
[07:53] *** linkable6 left
[07:53] *** benchable6 joined
[07:53] *** committable6 joined
[07:53] *** shareable6 joined
[07:53] *** sena_kun joined
[07:53] *** reportable6 joined
[07:54] *** sourceable6 joined
[07:54] *** notable6 joined
[07:54] *** bloatable6 joined
[07:54] *** tellable6 joined
[07:54] *** linkable6 joined
[07:54] *** greppable6 joined
[07:54] *** releasable6 joined
[07:55] *** nativecallable6 joined
[07:55] *** coverable6 joined
[07:55] *** evalable6 joined
[07:55] *** statisfiable6 joined
[07:55] *** unicodable6 joined
[07:55] *** quotable6 joined
[07:55] *** squashable6 joined
[07:56] *** bisectable6 joined
[08:01] *** jpn joined
[08:07] *** razetime left
[08:13] *** jpn left
[08:17] *** svragv joined
[08:22] *** jpn joined
[08:25] *** an3223 left
[08:34] *** razetime joined
[08:52] *** jpn left
[09:00] *** BarrOff left
[09:01] *** squashable6 left
[09:01] *** squashable6 joined
[09:17] *** jpn joined
[09:20] *** razetime1 joined
[09:21] *** razetime left
[09:21] *** razetime1 is now known as razetime

[09:59] *** razetime left
[10:29] *** sena_kun left
[10:54] *** teatime joined
[10:55] *** teatwo joined
[10:56] *** tea3po left
[10:58] *** teatime left
[11:06] *** ab5tract joined
[11:51] *** rf left
[11:51] *** rf joined
[11:56] *** lizmat left
[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:11] *** kaskal joined
[12:16] *** hankache joined
[12:30] *** derpydoo left
[12:47] *** hankache left
[13:08] *** sena_kun joined
[13:17] *** sena_kun left
[13:18] *** sena_kun joined
[13:34] *** japhb joined
[13:52] <discord-raku-bot> <Anton Antonov> @perryprog ‚ÄúSadly it does seem like Jupyter::Kernel is pretty crashy [‚Ä¶]‚Äù ‚Äî yes, others have observed that too. Of course, if you have Mathematica then you can use Raku in Mathematica notebooks (via the Mathematica-Raku connection.)  üôÇ

[13:53] <discord-raku-bot> <Anton Antonov> @perryprog As Voldenet said, you can submit a GitHub issue ‚Äî Brian has been fairly quick to respond to issues I have submitted.

[13:56] <discord-raku-bot> <Anton Antonov> I have dealt in the past with libzmq related problems‚Ä¶ I can find relevant references of resolving those in macOS. But that might not be of interest to @perryprog and @Voldenet.

