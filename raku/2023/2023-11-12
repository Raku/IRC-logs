[00:10] *** jpn left
[00:19] *** lichtkind__ left
[00:22] *** gdown joined
[00:41] *** adsasd joined
[00:42] <adsasd> hello. Who I can get help of functions in REPL ?

[00:45] <MasterDuke> adsasd: what's the problem?

[00:46] <adsasd> no problem, only I want now if the REPL is like Julia, with help of function and can see the source code of functions

[00:46] <adsasd> or list of parameters of methods

[00:47] <MasterDuke> sort of. `foo.^methods` will give you a list of all methods for foo

[00:48] <MasterDuke> then you could choose one and call `.signature` on it to see what parameters it takes

[00:49] <MasterDuke> and .WHY on a method should give you a link to it's page on docs.raku.org

[00:50] <MasterDuke> but you can't easily see the documentation or implementation inline in the REPL

[00:51] *** tejr left
[00:51] *** tejr joined
[00:53] <adsasd> Perfect, thanks!!! There are page in docs.raku.org or other site with the information you have given me or more things ?

[00:54] <MasterDuke> yeah, that's the main documentation site

[00:54] <adsasd> do you know the page ?

[00:58] <MasterDuke> hm. i don't think the docs have a section specifically about the REPL. information about introspection is also kind of scattered throughout. e.g., https://docs.raku.org/language/objects#Metaobject_programming_and_introspection has some information, but it doesn't have everything

[01:01] <adsasd> many thanks

[01:01] <MasterDuke> welcome

[01:02] <MasterDuke> the search on the doc site is pretty good. if you search for introspection you'll get a lot of relevant hits

[01:02] <adsasd> I am new to Raku and Spanish. If you would like to help by for example gathering information to create a page in the REPL documentation where you could start

[01:05] <MasterDuke> hm, not quite sure what you mean. are you asking where you could find information about the REPL so you could combine it all into one page?

[01:06] <adsasd> yes

[01:08] <MasterDuke> i'm not sure. i don't think there is very much information specifically about the REPL. it doesn't have a whole lot of unique functionality, it's pretty much the same as the rest of the language. i.e., those things i mentioned like .WHY and .signature are just part of the general language, not only for the REPL

[01:08] <MasterDuke> but i would suggest asking in #raku-doc, you'll probably get a more useful answer there

[01:10] <adsasd> thanks

[01:10] <MasterDuke> happy to help

[01:16] <MasterDuke> fyi, a bunch of the doc people are also in europe, so there's a decent chance they won't be online until tomorrow

[01:20] *** adsasd left
[01:34] *** ab5tract left
[01:34] *** ab5tract joined
[02:11] *** hulk joined
[02:12] *** kylese left
[02:16] *** adsasd joined
[02:31] <andinus> rakudo downloads should work now: setup redirects for: https://rakudo.org/dl/rakudo/rakudo-2023.10.tar.gz 

[02:49] *** adsasd left
[02:55] *** AlexDaniel joined
[02:59] *** AlexDaniel left
[03:41] *** tea3po joined
[03:44] *** teatwo left
[03:50] *** Xliff left
[04:20] *** oodani left
[04:21] *** oodani joined
[04:50] *** svartur-hrafn left
[05:36] *** leah2 left
[05:37] *** leah2 joined
[05:51] *** CIAvash joined
[05:55] *** arkiuat joined
[06:58] *** gdown left
[07:08] *** arkiuat left
[08:17] *** guifa_ joined
[08:18] *** guifa left
[08:52] *** Xliff joined
[08:54] *** lichtkind__ joined
[08:56] *** hulk left
[08:58] *** kylese joined
[09:10] *** constxqt left
[09:12] *** Marcool04 joined
[09:14] <ab5tract> andinus++

[09:14] <Marcool04> andinus confirmed!

[09:14] <Marcool04> thanks a bunch üëçÔ∏è

[09:30] *** grondilu joined
[09:53] <grondilu> m: say grammar { rule TOP { <ident>* \% \s \n } }.parse: qq{foo bar\n}

[09:53] <camelia> rakudo-moar 356faf99e: OUTPUT: ¬´Nil‚ê§¬ª

[09:53] <grondilu> m: say grammar { rule TOP { <ident>* % \s \n } }.parse: qq{foo bar\n}

[09:53] <camelia> rakudo-moar 356faf99e: OUTPUT: ¬´Nil‚ê§¬ª

[09:54] <grondilu> m: say grammar { rule TOP { <ident>* % \s } }.parse: qq{foo bar\n}

[09:54] <camelia> rakudo-moar 356faf99e: OUTPUT: ¬´ÔΩ¢foo bar‚ê§ÔΩ£‚ê§ ident => ÔΩ¢fooÔΩ£‚ê§ ident => ÔΩ¢barÔΩ£‚ê§¬ª

[09:54] <grondilu> m: say grammar { rule TOP { <ident>* % \s $ } }.parse: qq{foo bar\n}

[09:54] <camelia> rakudo-moar 356faf99e: OUTPUT: ¬´ÔΩ¢foo bar‚ê§ÔΩ£‚ê§ ident => ÔΩ¢fooÔΩ£‚ê§ ident => ÔΩ¢barÔΩ£‚ê§¬ª

[09:54] <grondilu> m: say grammar { rule TOP { [<ident>* % \s]\n } }.parse: qq{foo bar\n}

[09:54] <camelia> rakudo-moar 356faf99e: OUTPUT: ¬´Nil‚ê§¬ª

[10:01] *** jpn joined
[10:04] <CIAvash> rakudo binary download urls still redirect to Rakudo's GitHub page https://rakudo.org/dl/rakudo/rakudo-moar-2023.10-01-linux-x86_64-gcc.tar.gz

[10:05] <CIAvash> Rakudo Downloads page also shows a "500 Server Error" https://rakudo.org/downloads

[10:05] <Marcool04> CIAvash ah... indeed. I only checked the source tarball link ü§¶‚Äç‚ôÇÔ∏è

[10:06] <andinus> yes i only setup redirects for source tarballs

[10:06] <Marcool04> I think the binaries were hosted elsewhere and haven't been pulled back yep

[10:06] <Marcool04> yet*

[10:06] <andinus> atikon boxes are still down, i won't be able to pull it from theere

[10:07] <andinus> patrickb has binaries for last few releases, we should be able to restore them

[10:07] <Marcool04> out of pure curiosity, can I ask what happened with atikon? is it a hardware/infrastructure issue on their side?

[10:08] <andinus> the point of contact addresses we had, they don't work there anymore

[10:08] <andinus> they relayed that the services should have been up but that's not the case

[10:08] <andinus> seems to be a major outage on their end

[10:09] <Marcool04> wow ok

[10:22] *** adsasd joined
[10:22] *** adsasd left
[10:29] *** sena_kun joined
[10:37] <grondilu> m: say grammar { rule TOP { [<ident>* % \s]\n } }.parse: qq{foo bar\n}

[10:37] <camelia> rakudo-moar 356faf99e: OUTPUT: ¬´Nil‚ê§¬ª

[10:37] <grondilu> ^why doesn't that parse?

[10:46] <grondilu> m: say grammar { rule TOP { foo\n } }.parse: qq{foo\n}

[10:46] <camelia> rakudo-moar 356faf99e: OUTPUT: ¬´ÔΩ¢foo‚ê§ÔΩ£‚ê§¬ª

[10:46] <discord-raku-bot> <nemokosch> not using rules is always a safe choice

[10:46] <discord-raku-bot> <nemokosch> this whole "sigspace" business does more harm than good tbh

[10:46] <grondilu> m: say grammar { regex TOP { [<ident>* % \s]\n } }.parse: qq{foo bar\n}

[10:46] <camelia> rakudo-moar 356faf99e: OUTPUT: ¬´ÔΩ¢foo bar‚ê§ÔΩ£‚ê§ ident => ÔΩ¢fooÔΩ£‚ê§ ident => ÔΩ¢barÔΩ£‚ê§¬ª

[11:03] *** constxqt joined
[11:05] *** grondilu left
[11:14] *** jpn left
[11:19] <andinus> https://rakudo.org/downloads is up, i restored some old binaries, https://rakudo.org/downloads/star is up as well

[11:22] *** jpn joined
[11:29] <discord-raku-bot> <librasteve> üëç

[11:45] *** teatwo joined
[11:46] <xinming> Is it possible to import defined constants from c header files?

[11:46] <xinming> Or we need to duplicate all these definitions in raku again?

[11:48] *** tea3po left
[11:50] <ab5tract> No way to import directly, no.

[11:52] *** Sgeo left
[11:55] *** CIAvash left
[11:59] *** Marcool04 left
[12:42] *** jpn left
[13:13] <xinming> ab5tract: Ok, thanks. what is the best practise to import then? Writing in c, and regex to extract the define values?

[13:15] <ab5tract> It‚Äôs pretty common to parse them. Others just copy paste and correct to Raku‚Äôs syntax, doing it manually.

[13:16] <ab5tract> When you parse the C header, you use a grammar to generate Raku as output

[13:17] <ab5tract> Then the generated output is your library

[13:17] <xinming> ab5tract: Is there lib for this purpose?

[13:17] <ab5tract> That‚Äôs how I‚Äôve seen it done, when parsed.

[13:18] <ab5tract> There is one called gptrixie though it is bit unpolished and out of date

[13:19] <xinming> ab5tract: thanks, will use them as long as it works. No need for the polished things.

[13:19] <ab5tract> you might look at what vushu is doing in this library: https://github.com/vushu/raylib-raku

[13:20] <ab5tract> In case you run into issues with gptrixie

[13:21] <xinming> Ok, thanks, I try to use raku to control 51 mcu for fun.

[13:21] <ab5tract> What is 51 mcu?

[13:22] <xinming> ab5tract: 8051 micro controller.

[13:22] <xinming> mcs-51

[13:22] <ab5tract> ah, cool!

[13:23] <ab5tract> I hope you have lots of fun hacking on it in Raku! Consider keeping us posted with any problems and progress :)

[13:24] <xinming> ab5tract: will trouble here, But probably be a slow progress  :-)

[13:34] *** jpn joined
[13:39] *** jpn left
[14:35] *** jpn joined
[14:40] *** jpn left
[15:15] *** jgaz joined
[15:24] *** jpn joined
[15:24] *** sftp left
[15:27] *** sftp joined
[15:29] *** jpn left
[15:56] *** dbonnafo left
[15:56] *** dbonnafo joined
[16:03] *** dbonnafo left
[16:03] *** dbonnafo joined
[16:10] *** jpn joined
[16:15] *** jpn left
[17:07] *** jpn joined
[17:12] *** jpn left
[17:20] *** jjatria left
[17:20] *** jjatria joined
[17:38] *** jpn joined
[17:42] *** skaji_ left
[17:42] *** skaji_ joined
[17:49] *** jpn left
[18:24] *** nine left
[18:24] *** nine joined
[18:39] *** jpn joined
[19:12] <SmokeMachine> Hi there! Does anyone know why I had to add `no precompilation` here (https://github.com/FCO/HTML-Component/blob/main/lib/HTML/Component/EndpointList.rakumod) to make it return the same ‚Äúobject‚Äù every time I used it? I feel like it should work without that‚Ä¶ is that a bug?

[19:23] *** jpn left
[19:26] <discord-raku-bot> <holmdunc> The interesting thing about Raylib specifically is that they provide a complete description of their C API as JSON https://github.com/raysan5/raylib/blob/master/parser/output/raylib_api.json , meaning source code for a binding can simply be generated in a data-driven way

[19:39] <discord-raku-bot> <.vushu> yes i noticed this to, but it is only done for raylib, but isnt done for raygui which I also try to tackle üòä

[20:06] *** jpn joined
[20:11] *** Sgeo joined
[20:13] *** jpn left
[20:20] *** jpn joined
[20:23] <tbrowder__> SmokeMachine: is that supposed to be somthing like a singleton?

[20:25] *** jpn left
[20:26] <SmokeMachine> tbrowder__: yes

[20:26] <tbrowder__> docs describe how to do that

[20:27] <tbrowder__> i don't think you need method new, for one thing

[20:29] <tbrowder__> sorry, it does show a new method. the example is "class Singleton"

[20:29] <SmokeMachine> I have tried many different ways‚Ä¶ as just a class, with new using anonymous variable, with a my variable inside the class‚Ä¶

[20:29] <tbrowder__> i just searched for "singleton" in the docs box

[20:30] <tbrowder__> don't know if that will help

[20:30] <tbrowder__> yr use case

[20:31] <SmokeMachine> Just saw that on the docs‚Ä¶ I tried that way too‚Ä¶

[20:33] <SmokeMachine> That works if I `use` it only in 1 file‚Ä¶ but returns a different object when `use`ing it from different files

[20:37] <ugexe> fwiw i'm not sure i'd use //= since parallel calls to new could result in a situation where the definedness check is false for two threads, and so both end up setting the value

[20:38] <ugexe> that wouldn't be related to your stated problem though

[20:41] <ugexe> (you could also just put a lock around the use of //=)

[20:42] <SmokeMachine> I‚Äôll try with a lock, but I‚Äôm not sure if that‚Äôs it on this case‚Ä¶

[20:43] <ugexe> class Foo { my $cached-self; my $cached-self-lock = Lock.new; method new { $cached-self-lock.protect({ return $cached-self //= self.bless }) } }

[20:44] <ugexe> thats probably how i would have written that type of logic, although i'm not sure if its actually any better

[20:44] <SmokeMachine> I tried with a class like this as well: class Bla { my @bles; method push(|c) { @bles.push: |c }

[20:52] *** jpn joined
[20:57] *** jpn left
[20:59] <SmokeMachine> no luck with the lock... :(

[21:00] <SmokeMachine> ugexe: ^^

[21:29] <ab5tract> .vushu is raygui included in the raylib-raku distribution?

[21:32] <discord-raku-bot> <.vushu> ab5stract im still working on it and have yet not release anything, but have made progress, i think im making a seperate module for it üôÇ

[22:02] *** constxd left
[22:03] *** constxd joined
[22:06] *** dbonnafo_ joined
[22:07] *** dbonnafo left
[22:11] *** dbonnafo_ left
[22:11] <ab5tract> Ok! I had fun playing around with raylib-raku today. Even got into shaders a bit. That‚Äôs one powerful little header file Ray has put together. And your wrapper to it feels very idiomatic

[22:11] *** dbonnafo joined
[22:12] *** sena_kun left
[22:21] *** dbonnafo left
[22:23] *** jpn joined
[22:25] <discord-raku-bot> <.vushu> ab5tract indeed raylib is a very cool library, nice that you enjoy the wrapper üòä

[22:27] *** justThanks left
[22:28] *** justache joined
[22:31] *** jpn left
[22:41] <discord-raku-bot> <librasteve> so the Singleton in the docs (https://docs.raku.org/language/classtut#Class_variables) is not thread safe I guess... maybe that could be improved with an ‚öõÔ∏è class variable?

[22:41] *** justache left
[22:48] *** justache joined
[22:51] <discord-raku-bot> <librasteve> fwiw that example also needs to have (or reinstate) the way to get the instance object ie. my $obj = Singleton.instance;

[22:52] <discord-raku-bot> <librasteve> anyway it needs someone a bit sharper than me on the atomic safety side to make a doc issue since I will likely butcher it

[22:54] *** jpn joined
[22:59] *** jpn left
[23:01] *** lichtkind__ left
[23:15] *** justache left
[23:20] *** justache joined
[23:26] *** justache left
[23:31] *** justache joined
[23:44] *** teatwo left
[23:45] *** teatwo joined
[23:46] *** jpn joined
[23:50] *** jpn left
