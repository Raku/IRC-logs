[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:30] *** derpydoo joined
[01:03] *** lichtkind_ left
[02:22] *** tea3po left
[02:22] *** tea3po joined
[02:23] *** teatwo joined
[02:26] *** tea3po left
[04:50] *** andinus joined
[04:52] *** zara joined
[04:55] *** andinus left
[04:58] *** andinus joined
[05:04] *** zara left
[05:21] *** japhb joined
[05:48] *** merp left
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[07:31] <discord-raku-bot> <Nemokosch> those of you who were wary of Discord turned out to be right painfully soon: https://www.reddit.com/r/discordapp/comments/144pyt4/discord_is_restricting_permanent_invites_to/

[07:38] *** linkable6 left
[07:38] *** evalable6 left
[07:40] *** linkable6 joined
[07:41] *** evalable6 joined
[07:44] *** Sgeo left
[08:09] *** emakei joined
[08:26] *** jpn joined
[08:33] *** sena_kun joined
[09:17] *** samcv left
[09:18] *** samcv joined
[09:25] <Geth> ¦ Raku-Steering-Council/main: f821d74e24 | (Elizabeth Mattijsen)++ | 2 files

[09:25] <Geth> ¦ Raku-Steering-Council/main: Announcement Richard Hainsworth joining the board

[09:25] <Geth> ¦ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/f821d74e24

[09:52] *** lichtkind_ joined
[09:54] *** kaol joined
[10:20] *** emakei left
[10:24] *** jpn left
[10:34] *** ab5tract joined
[10:55] *** Manifest0 joined
[11:00] *** euandreh joined
[11:47] <discord-raku-bot> <Anton Antonov> Good to know!

[12:00] *** reportable6 left
[12:00] *** reportable6 joined
[12:52] *** emakei joined
[13:07] *** derpydoo left
[13:22] <[Coke]> wow, I'm out of the loop, congrats to Richard!

[13:23] <lizmat> well, with 5/6 RSC members at the Raku Core Summit, it was hardly any effort at all

[13:23] <lizmat> and Richard was there as well, and was on the original ballot, and accepted the invitation, so there's that  :-)

[13:30] <discord-raku-bot> <Nemokosch> sounds like a good choice so Forza

[14:15] *** jpn joined
[14:21] *** teatwo left
[14:22] *** teatwo joined
[14:38] *** Sgeo joined
[15:27] *** emakei left
[15:38] <tonyo> .

[15:38] <tellable6> 2023-06-07T23:45:31Z #raku <tbrowder__> tonyo: my suspicion is correct, the book's pseudo code is misleaading and my tests prove it. i'll update the repo in a minute.

[15:39] <tonyo> ahh which book are you going through?

[15:39] *** jpn left
[16:39] *** notable6 left
[16:39] *** unicodable6 left
[16:39] *** reportable6 left
[16:39] *** quotable6 left
[16:39] *** benchable6 left
[16:39] *** statisfiable6 left
[16:39] *** greppable6 left
[16:39] *** coverable6 left
[16:39] *** committable6 left
[16:39] *** bisectable6 left
[16:39] *** evalable6 left
[16:40] *** bisectable6 joined
[16:40] *** benchable6 joined
[16:41] *** quotable6 joined
[16:41] *** coverable6 joined
[16:41] *** unicodable6 joined
[16:41] *** statisfiable6 joined
[16:41] *** evalable6 joined
[16:41] *** greppable6 joined
[16:42] *** reportable6 joined
[16:42] *** committable6 joined
[16:42] *** notable6 joined
[17:15] <tbrowder__> well knock me down, *I* had the (nonlethal) bug. passed all my tests, but it wouldn't work for overlapping patterns. (book is refernced in the README: Intro to Algorithyms, 3e). see the updated module for all the gory details.

[17:30] *** ab5tract left
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:42] *** dogbert11 left
[18:45] *** dogbert11 joined
[19:26] *** dogbert17 joined
[19:27] <tbrowder__> module is "AlgorithmsIT" (IT for "Introduction to")

[19:28] *** dogbert11 left
[19:56] *** buffet left
[20:36] *** dogbert11 joined
[20:36] *** dogbert17 left
[20:36] <tbrowder__> finana

[20:37] <tbrowder__> .tell finanalyst congratulations Richard

[20:37] <tellable6> tbrowder__, I'll pass your message to finanalyst

[20:42] *** dogbert17 joined
[20:44] *** dogbert11 left
[20:59] *** dogbert17 left
[21:08] *** dogbert17 joined
[21:18] *** dogbert11 joined
[21:20] *** dogbert17 left
[21:26] *** dogbert17 joined
[21:28] *** dogbert11 left
[21:28] *** dogbert11 joined
[21:31] *** dogbert17 left
[21:33] *** jpn joined
[21:35] *** dogbert11 left
[21:53] *** jpn left
[22:06] *** dogbert11 joined
[22:16] *** dogbert11 left
[22:26] *** dogbert11 joined
[22:32] *** dogbert11 left
[22:35] *** dogbert11 joined
[22:45] <Tirifto> So apparently numeric operators operate (;D) separately from numeric context in Raku. I thought defining the method ‘Numeric’ would let me use the objects of a custom class in numeric comparisons, but it seems the less-than (<) operator requires the method Real instead, as it coerces its operands to Real.

[22:46] <Tirifto> In other words, if I want a custom class to be usable as (able to be coerced to) a number, I need to care about more than just the numeric context.

[22:48] <Tirifto> Is that correct? And if so, is there a complete interface the class should implement, perhaps documented somewhere? Or should I just check the behaviour of every operator I might want to use?

[22:49] <Tirifto> Just asking out of curiosity, for the most part.

[23:21] <avuserow> Tirifto: I think you may just need to implement the Bridge method, and maybe claim that you implement the Real role.

[23:22] <avuserow> m: class Foo {has Int $.data; method Bridge { $!data }}; my $f = Foo.new(:data(3)); say $f; $f++; say $f

[23:22] <camelia> rakudo-moar 0df71cfc3: OUTPUT: «Foo.new(data => 3)␤No such method 'succ' for invocant of type 'Foo'.  Did you mean 'sum'?␤  in block <unit> at <tmp> line 1␤␤»

[23:23] <avuserow> m: class Foo {has Int $.data; method Bridge { $!data }}; my $f = Foo.new(:data(3)); say $f; say $f + 14;

[23:23] <camelia> rakudo-moar 0df71cfc3: OUTPUT: «Foo.new(data => 3)␤Cannot resolve caller Numeric(Foo:D: ); none of these signatures matches:␤    (Mu:U \v: *%_)␤  in block <unit> at <tmp> line 1␤␤»

[23:23] <avuserow> Let me look a bit, it's been a while

[23:25] <Tirifto> Thank you. ^ ^

[23:35] *** evalable6 left
[23:35] *** linkable6 left
[23:36] *** evalable6 joined
[23:38] *** derpydoo joined
[23:38] *** linkable6 joined
[23:54] <avuserow> m: class Foo does Real {has Int $.data; method Bridge { $!data }}; my $f = Foo.new(:data(3)); say $f; say $f + 14; say $f++; say $f

[23:54] <camelia> rakudo-moar 0df71cfc3: OUTPUT: «3␤17␤3␤4␤»

[23:54] <avuserow> Tirifto: ^^

[23:55] <avuserow> looks like the minimum viable number needs to implement the Real class, and then have a `Bridge` method that returns the numeric guts. everything else seems to just work

[23:57] <Tirifto> Very interesting! :o Thank you, avuserow.

[23:58] <avuserow> though, if you want `$f + $f` in that example to return an instance of Foo, then you will also need to implement your own `multi method infix:<+>(Foo $a, Foo $b) {...}`

[23:58] <avuserow> m: class Foo does Real {has Int $.data; method Bridge { $!data }}; my $f = Foo.new(:data(3)); say $f.WHAT; say $f ~~ Foo; my $f2 = $f + $f; say $f2.WHAT; say $f2 ~~ Foo;

[23:58] <camelia> rakudo-moar 0df71cfc3: OUTPUT: «(Foo)␤True␤(Int)␤False␤»

[23:59] <avuserow> m: class Foo does Real {has Int $.data; method Bridge { $!data }; multi method infix:<+>(Foo $a, Foo $b) {Foo.new(:data($a + $b))}}; my $f = Foo.new(:data(3)); say $f.WHAT; say $f ~~ Foo; my $f2 = $f + $f; say $f2.WHAT; say $f2 ~~ Foo;

[23:59] <camelia> rakudo-moar 0df71cfc3: OUTPUT: «(Foo)␤True␤(Int)␤False␤»

[23:59] <avuserow> m: class Foo does Real {has Int $.data; method Bridge { $!data }; multi sub infix:<+>(Foo $a, Foo $b) {Foo.new(:data($a + $b))}}; my $f = Foo.new(:data(3)); say $f.WHAT; say $f ~~ Foo; my $f2 = $f + $f; say $f2.WHAT; say $f2 ~~ Foo;

[23:59] <camelia> rakudo-moar 0df71cfc3: OUTPUT: «(Foo)␤True␤(Int)␤False␤»

