[07:42] <lizmat> .

[07:42] <tellable6> 2023-04-18T21:54:59Z #raku <Xliff> lizmat A simple and obvious soluition. Thanks!

[07:44] <discord-raku-bot> <p6steve> ^^ sure - Allomorphs are cool ... but raku (and perl5 IIRC) are both tuned to dwim that numbers are numbers and strings are strings depending on the context. So, in raku, the cmp operator as the smart comparison operator will apply <=> for numeric items and leg for string items and (my understanding from playing around) is that cmp will 'prefer' numbers to strings. So none of this mechanism needs to be surfaced if all

[07:44] <discord-raku-bot> you want is to sort some numerics ;-)

[08:04] *** Bocaneri joined
[08:05] *** Bocaneri is now known as Guest2454

[08:07] *** dakkar joined
[08:07] *** Sauvin left
[08:09] *** Guest2454 is now known as Sauvin

[08:12] *** Sgeo left
[08:18] *** jpn joined
[08:29] <Voldenet> javascript behaviour is so much more sane: `[5, 1, 2, 25].sort()` gets turned into `[1, 2, 25, 5]` :)

[08:29] <Voldenet> m: <1 2 25 5>.map(*.Str).sort.say

[08:29] <camelia> rakudo-moar 027e37ccc: OUTPUT: «(1 2 25 5)␤»

[08:30] <Voldenet> I'm glad this expected behaviour can be emulated easily ;>

[08:31] *** cm left
[08:32] *** cm joined
[08:33] <lizmat> m: <1 2 25 5>.sort(~*).say   # no need for map

[08:33] <camelia> rakudo-moar 5d1d02d95: OUTPUT: «(1 2 25 5)␤»

[08:33] <lizmat> m: dd <1 2 25 5>.sort(~*)

[08:33] <camelia> rakudo-moar 5d1d02d95: OUTPUT: «(IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(25, "25"), IntStr.new(5, "5")).Seq␤»

[08:33] <lizmat> note that this also keeps the allomorphiness

[08:45] <Voldenet> m: <1 2 25 5>.sort(*.elems).say

[08:45] <camelia> rakudo-moar 5d1d02d95: OUTPUT: «(1 2 25 5)␤»

[08:45] <Voldenet> …it produces expected result ;)

[08:45] <lizmat> yeah, the sort is stable

[08:49] <discord-raku-bot> <Nemokosch> lol

[08:49] <discord-raku-bot> <Nemokosch> m: <1 2 25 5>.sort(*.chars).say

[08:49] <discord-raku-bot> <Raku eval>  (1 2 5 25) 

[08:49] <discord-raku-bot> <Nemokosch> ez win

[09:01] *** euandreh joined
[10:01] *** evalable6 left
[10:04] *** evalable6 joined
[10:16] *** frost joined
[10:32] *** frost left
[11:32] *** statisfiable6 left
[11:32] *** sourceable6 left
[11:32] *** greppable6 left
[11:32] *** bisectable6 left
[11:32] *** releasable6 left
[11:32] *** nativecallable6 left
[11:32] *** bloatable6 left
[11:32] *** unicodable6 left
[11:32] *** benchable6 left
[11:32] *** committable6 left
[11:32] *** shareable6 left
[11:32] *** quotable6 left
[11:32] *** coverable6 left
[11:32] *** reportable6 left
[11:32] *** notable6 left
[11:32] *** tellable6 left
[11:32] *** evalable6 left
[11:32] *** squashable6 left
[11:32] *** linkable6 left
[11:33] *** tellable6 joined
[11:33] *** nativecallable6 joined
[11:33] *** nine left
[11:33] *** m_athias left
[11:33] *** nine joined
[11:33] *** unicodable6 joined
[11:33] *** m_athias joined
[11:33] *** greppable6 joined
[11:33] *** committable6 joined
[11:34] *** linkable6 joined
[11:34] *** quotable6 joined
[11:34] *** benchable6 joined
[11:34] *** notable6 joined
[11:34] *** squashable6 joined
[11:34] *** statisfiable6 joined
[11:35] *** sourceable6 joined
[11:35] *** coverable6 joined
[11:35] *** shareable6 joined
[11:35] *** bloatable6 joined
[11:35] *** releasable6 joined
[11:35] *** bisectable6 joined
[11:35] *** reportable6 joined
[11:35] *** evalable6 joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:23] *** nebuchadnezzar joined
[12:39] *** jpn left
[13:00] *** jpn joined
[13:05] *** jpn left
[13:12] *** perlbot left
[13:12] *** simcop2387 left
[13:29] *** jgaz joined
[13:31] *** jpn joined
[13:32] <uzl[m]> I'd appreciate a look at this PR: https://github.com/Raku/doc/pull/4284/files

[13:32] <uzl[m]> I've received some great feedback from 2colours and coke but I figured a few more eyes on it wouldn't hurt :-)

[13:39] <uzl[m]> What's the Raku equivalent for this NodeJS code?... (full message at <https://libera.ems.host/_matrix/media/v3/download/libera.chat/2b960b85688aa78b1a84a78dd285283255e3d5c1>)

[13:39] <uzl[m]> It's probably worth asking in SO to add to the raku questions count :)

[13:40] <lizmat> indeed :-)

[13:40] <lizmat> only 39 to go to 2000  :-)

[13:42] <uzl[m]> I'm a novice when it comes to asynchronous (and event-driven) programming so I'm sort of like trying to map concepts between languages even though I know they don't map 1-to-1 but it does help regardless

[13:42] <uzl[m]> Wow that's awesome. Only a few years ago, it was in the hundreds

[13:43] <uzl[m]> Btw does JJ still hang out in the chat?

[13:49] <lizmat> no...  he's easier to reach on the birdsite

[13:52] <ugexe> i dont think there is something exactly equivalent

[13:53] <ugexe> specifically the sending a message when it "starts" and sending a value to the "end" handler

[13:53] <ugexe> m: my $eventEmitter = Supplier.new; my $eventConsumer = $eventEmitter.Supply; $eventConsumer.tap({ once say "started" }); $eventConsumer.tap(-> $_ { say $_ }, done => { say "ended" }); $eventEmitter.emit("start"); $eventEmitter.done()

[13:53] <camelia> rakudo-moar 7b4b680e3: OUTPUT: «started␤start␤ended␤»

[13:53] <ugexe> thats close, but not exactly what you asked for

[13:56] <ugexe> notable that the last bit, $eventEmitter.done() can't be $eventEmitter.done(23)

[14:09] *** japhb left
[14:11] *** japhb joined
[14:11] *** tea3po left
[14:12] *** tea3po joined
[14:12] *** tea3po left
[14:13] *** ab5tract joined
[14:13] *** tea3po joined
[14:24] *** xinming left
[14:26] *** xinming joined
[14:52] *** deoac joined
[15:01] *** Sgeo joined
[15:54] *** cm left
[15:54] *** cm joined
[15:59] *** cm_ joined
[15:59] *** cm left
[16:00] *** cm_ is now known as cm

[16:06] *** cm left
[16:06] *** cm_ joined
[16:07] *** cm_ is now known as cm

[16:08] *** simcop2387 joined
[16:09] *** simcop2387 left
[16:16] *** cm left
[16:17] *** cm joined
[16:22] *** japhb left
[16:22] *** cm left
[16:22] *** cm joined
[16:26] *** japhb joined
[16:30] *** simcop2387 joined
[16:32] *** perlbot joined
[16:33] *** cm_ joined
[16:34] *** cm left
[16:34] *** cm_ is now known as cm

[16:37] *** jgaz left
[16:38] *** cm_ joined
[16:38] *** cm left
[16:38] *** cm_ is now known as cm

[16:39] *** dakkar left
[16:44] *** jpn left
[17:00] *** jpn joined
[17:13] *** ab5tract left
[17:22] <tonyo> uzl[m]: https://raku.land/zef:tony-o/Event::Emitter

[17:23] <tonyo> m: use Event::Emitter;

[17:23] <camelia> rakudo-moar 3b838eafb: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Could not find Event::Emitter in:␤    /home/camelia/.raku␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-…»

[17:25] <tonyo> https://gist.github.com/tonyooooooo/8f0d8f2962353c66b052b686b79a0d68

[17:25] <tonyo> uzl[m]: ^

[17:26] <tonyo> otherwise you can do what ugexe did and do the serialization in the .emit() and deserialization/routing all within a tap

[17:30] <ugexe> i suppose it could be done a little cleaner with supply and react blocks, since i dont think it would require a `once { ... }` (just put that logic inside the react block)

[17:36] *** jpn left
[17:45] *** jpn joined
[17:58] *** jgaz joined
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:06] *** jpn left
[18:15] *** jgaz left
[18:21] <tonyo> the 'start' thing in that js code isn't a once equiv though, it'll get run any time something emits a `start` and not when the event emitter receives its first message or starts listening

[18:23] <tonyo> using a class or hash would allow for the value

[18:27] <tonyo> anton: i'm not sure how to reproduce the issue with fez you were seeing, i've tarred (in random order) and untarred it using system tar several 1000 times now with no error..do you happen to be using osx and the repo is on a network share?

[18:28] <tonyo> same with the other two tars that were causing issues

[18:30] *** sena_kun left
[18:30] *** deoac left
[18:31] *** sena_kun joined
[18:51] *** jpn joined
[18:57] *** jpn left
[19:00] *** jpn joined
[19:08] *** rf joined
[19:27] *** ab5tract joined
[19:54] *** ab5tract left
[20:18] *** jpn left
[20:50] *** japhb left
[20:54] *** japhb joined
[20:56] *** jpn joined
[21:01] *** jpn left
[21:14] *** sarna left
[21:20] *** orylesor joined
[21:27] *** sarna joined
[21:39] *** sena_kun left
[22:38] *** orylesor left
[22:45] *** jpn joined
[22:49] *** jpn left
[23:39] *** andinus left
[23:40] *** jpn joined
[23:45] *** jpn left
