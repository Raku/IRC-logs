[00:00] *** reportable6 left
[00:02] *** derpydoo joined
[00:03] *** reportable6 joined
[00:41] *** RonaldR34g4m left
[00:41] *** RonaldR34g4m joined
[00:52] <[Coke]> can you golf it and put it in a gist?
[01:01] *** jpn joined
[01:03] *** xinming__ left
[01:06] *** jpn left
[01:06] *** xinming__ joined
[01:17] *** squashable6 left
[01:19] *** squashable6 joined
[01:20] *** bigdata left
[01:39] *** derpydoo left
[01:46] *** xinming__ left
[01:46] *** bigdata joined
[01:46] *** bigdata left
[01:48] *** xinming__ joined
[02:15] <discord-raku-bot> <roguerakudev> This replicates it: https://pastebin.com/7UtLZbRA
[02:19] <discord-raku-bot> <roguerakudev> Oh, I just needed to add is export... still, a rather misleading error
[02:22] <MasterDuke> yeah, that's probably worthy of at least an LTA error message bug report
[02:26] *** tea3po joined
[02:29] *** teatwo left
[02:46] *** jpn joined
[02:51] *** jpn left
[03:19] <guifa> can a class prevent a subclass from overriding a method?  I thought only would do it but it seems not
[03:34] *** derpydoo joined
[03:37] *** rf left
[04:05] *** kjp left
[04:08] *** kjp joined
[04:08] *** kjp left
[04:08] *** kjp joined
[04:35] *** jpn joined
[04:40] *** jpn left
[04:59] <discord-raku-bot> <roguerakudev> is it not possible to have named params in sub EXPORT? I have a module with an export sub that takes Bool :$with-internals, but upon importing it like use ModuleName :with-internals; I get Error while importing from 'ModuleName': no such tag 'with-internals'
[05:28] *** Xliff left
[05:36] *** skyesoss left
[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[06:23] *** jpn joined
[06:28] *** jpn left
[06:51] *** abcd joined
[06:51] *** abcd left
[07:06] *** PotatoGim_ left
[07:07] *** PotatoGim_ joined
[07:20] *** squashable6 left
[07:21] *** squashable6 joined
[07:28] *** jpn joined
[07:34] *** jpn left
[08:00] *** jpn joined
[08:02] *** skyesoss joined
[08:04] *** jpn left
[08:11] *** dakkar joined
[08:12] *** notagoodidea joined
[08:18] *** Sgeo left
[08:25] *** abraxxa joined
[08:31] *** notagoodidea left
[08:32] *** sena_kun joined
[08:55] *** jpn joined
[08:56] *** abraxxa left
[09:00] *** jpn left
[09:08] *** nine left
[09:08] *** m_athias left
[09:08] *** nine joined
[09:08] *** m_athias joined
[09:26] *** abraxxa joined
[10:11] *** derpydoo left
[10:35] *** jpn joined
[10:55] *** PotatoGim_ left
[10:56] *** PotatoGim joined
[11:01] * lizmat clickbaits https://rakudoweekly.blog/2023/06/26/2023-26-pretty-damn-cool/
[11:05] *** jpn left
[11:45] *** xinming__ left
[11:47] *** xinming__ joined
[11:52] *** guifa left
[11:53] *** guifa joined
[11:54] *** guifa joined
[12:00] *** reportable6 left
[12:03] *** reportable6 joined
[12:06] *** xinming__ left
[12:08] *** xinming__ joined
[12:23] *** jpn joined
[12:28] *** jpn left
[12:47] *** perryprog left
[12:48] *** perryprog joined
[13:23] *** xinming__ left
[13:25] *** xinming__ joined
[13:33] *** ab5tract joined
[14:05] *** xinming__ left
[14:07] *** xinming__ joined
[14:23] *** xinming joined
[14:25] *** xinming__ left
[14:25] *** tea3po left
[14:26] *** tea3po joined
[14:28] *** abraxxa left
[14:47] <discord-raku-bot> <skyb0rg007> What part of the Rakudo compilation process creates the ~/.raku directory? It's currently filled with precompilation files and I'm trying to move it somewhere else.
[14:52] <dakkar> https://github.com/rakudo/rakudo/blob/master/src/core.c/CompUnit/RepositoryRegistry.pm6#L160-L172 looks like it's this bit of code, and I don't think there's a decent way of telling rakudo to put it somewhere else
[14:52] <lizmat> skyb0rg007   you can nuke the ~/.raku/precomp dir at any time
[14:52] <lizmat> it will re-create precomps as needed, as long as it can be created again
[14:54] <dakkar> well… `HOME=/not/there raku` (2023.02) says `I ran into a problem while trying to set up Readline: Failed to create directory '/not/there/.raku/short' with mode '0o777': Failed to mkdir: No such file or directory`
[14:54] <dakkar> then the same for other line-editor libraries, then shows the prompt without having loaded any
[14:54] <dakkar> (I have Readline and Linenoise installed)
[14:55] <dakkar> so, at least on my build, not being able to create that compunit repository breaks things
[14:55] <dakkar> (should I report it as a bug?)
[14:55] <lizmat> probably ugexe ?
[14:59] <dakkar> oh, probably smaller case: `raku -MNot::There -e 1` dies (correctly) with `Could not find Not::There in…`; `HOME=/not/there raku -MNot::There -e 1` dies with `Failed to create directory '/not/there/.raku/short' with mode '0o777'`
[15:00] <dakkar> (just to make sure it's not related to the particular line-edit libraries)
[15:05] <discord-raku-bot> <skyb0rg007> lizmat   I'd like to avoid needing to constantly remove the file, my hope is that there's an environment variable I can set to make rakudo put the precomp directory under ~/.cache/raku or something similar
[15:06] <lizmat> looking at the code dakkar pointed to, setting the HOME environment variable should wor?
[15:06] <lizmat> *work?
[15:08] *** n0den1te joined
[15:10] <discord-raku-bot> <skyb0rg007> I don't consider that a possibility, since messing with $HOME has a lot of problems (especially if I use raku to launch a command subprocess)
[15:13] <dakkar> yes, that
[15:14] <discord-raku-bot> <skyb0rg007> Do you know what part of the compilation process creates ~/.raku? If there isn't any way to change that now I can try to make a PR since this is such a simple feature add.
[15:15] <discord-raku-bot> <skyb0rg007> It may be set with the initialization of $*REPO but I'm not sure
[15:16] <dakkar> yes, it's the code I linked to, above
[15:17] <discord-raku-bot> <skyb0rg007> Thanks, I missed it. Hmmm that definitely looks hard-coded.
[15:18] <dakkar> I see two distinct problems, there: 1) it should be configurable (both at rakudo-build-time, and at runtime via env variables) 2) failure do `mkdir` it should not kill the compiler (may warn and disable precomp, sure)
[15:21] *** n0den1te left
[15:22] <discord-raku-bot> <skyb0rg007> Is "disabling precompilation" possible? I thought that was necessary to handle Raku's staging
[15:29] <ugexe> its a core repository that is expected to exist, that is why it dies
[15:31] <ugexe> https://gist.github.com/ugexe/e4ab88096f32942e33adad8c51ea9aea i wrote a draft grant to do something that would solve this 
[15:34] <ugexe> one could also write a custom CUR that skips the first repo (home) and provides a install target at a different location. but that is an exercise left to the reader
[15:44] *** xinming left
[15:46] <dakkar> ugexe++ # Configurable Raku repository chain
[15:46] *** xinming joined
[15:51] *** Sgeo joined
[15:52] <discord-raku-bot> <skyb0rg007> Is it possible to just add a check "Don't create a repository if it doesn't exist"? That seems much easier to implement (ie. I could do it this weekend)
[15:54] <dakkar> that would be sub-optimal: `~/.raku/` would generally not exist on first use, and creating it is *generally* the right behaviour
[15:55] <dakkar> otherwise rakudo doesn't have any place to store precompiled modules (or a default place for user-installed modules)
[15:55] <ugexe> it would also break when users do `rm -rf ~/.raku` to clear (in this case the home) a given repository
[15:56] <dakkar> (sometimes I get the impression that most problems with straightforward solutions have been solved already, and we're now left with the fiddly&complicated ones)
[15:56] <ugexe> i'm pretty sure in the commit history somewhere is a commit that removed the automatic directory creation, it broke stuff for people, and then it was fixed
[15:56] <ugexe> refixed rather
[16:08] <discord-raku-bot> <skyb0rg007> How about changing the default from ~/.raku to $XDG_DATA_HOME/raku (using old path if it exists)? That models modern Linux programs more closel
[16:08] <discord-raku-bot> <skyb0rg007> closely.
[16:10] <discord-raku-bot> <skyb0rg007> Though precompilation files should really be under $XDG_CACHE_HOME, while the home repo should be under $XDG_DATA_HOME...
[16:34] <ugexe> we changed from ~/.perl6 to ~/.raku so technically i don't think using a different location is out of the question, although weather to use xdg or not is a different question
[16:36] *** dakkar left
[16:38] <discord-raku-bot> <skyb0rg007> I definitely think XDG base directory specifications are the way to go if any changes are made, and should probably use a better default on Windows too (such as %LOCALAPPDATA%\raku). That way users have a much better time with migrating computers and backing up directories since everything is organized by how its used.
[16:52] <tonyo> rf: did that work for you?
[16:52] <tellable6> tonyo, I'll pass your message to rf
[16:54] *** ab5tract left
[17:54] *** linkable6 left
[17:54] *** evalable6 left
[17:55] *** linkable6 joined
[17:57] *** evalable6 joined
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:15] *** bigdata joined
[18:42] *** jpn joined
[18:53] *** jpn left
[18:56] *** bigdata left
[18:57] *** jpn joined
[19:02] *** jpn left
[19:21] *** bigdata joined
[19:25] *** jpn joined
[19:30] *** jpn left
[19:38] *** jpn joined
[19:45] *** jpn left
[19:59] *** bigdata left
[20:07] *** jpn joined
[20:12] *** jpn left
[20:15] *** snonux left
[20:15] *** snonux joined
[20:15] *** [Coke] left
[20:23] *** [Coke] joined
[20:28] *** [Coke] left
[20:48] *** [Coke] joined
[20:48] *** tejr left
[20:52] *** jpn joined
[20:56] *** tejr joined
[20:58] *** jpn left
[21:58] *** sourceable6 left
[21:58] *** nativecallable6 left
[21:58] *** benchable6 left
[21:58] *** linkable6 left
[21:58] *** committable6 left
[21:58] *** notable6 left
[21:58] *** squashable6 left
[21:58] *** releasable6 left
[21:58] *** bloatable6 left
[21:58] *** statisfiable6 left
[21:58] *** reportable6 left
[21:58] *** quotable6 left
[21:58] *** coverable6 left
[21:58] *** bisectable6 left
[21:58] *** tellable6 left
[21:58] *** greppable6 left
[21:58] *** unicodable6 left
[21:58] *** evalable6 left
[21:58] *** shareable6 left
[21:59] *** notable6 joined
[21:59] *** benchable6 joined
[21:59] *** squashable6 joined
[21:59] *** bloatable6 joined
[21:59] *** bisectable6 joined
[21:59] *** coverable6 joined
[21:59] *** reportable6 joined
[22:00] *** unicodable6 joined
[22:00] *** linkable6 joined
[22:00] *** committable6 joined
[22:01] *** shareable6 joined
[22:01] *** greppable6 joined
[22:01] *** releasable6 joined
[22:01] *** statisfiable6 joined
[22:01] *** sourceable6 joined
[22:01] *** evalable6 joined
[22:01] *** quotable6 joined
[22:01] *** nativecallable6 joined
[22:01] *** tellable6 joined
[22:09] *** sena_kun left
[22:13] *** deferen joined
[22:14] *** deferen left
[22:18] *** kiranraku joined
[22:20] *** tonyo left
[22:20] *** tonyo joined
[22:25] *** kiranraku78 joined
[22:25] *** kiranraku left
[22:39] *** kiranraku78 left
[22:40] *** kiranraku joined
[22:46] *** kiranraku left
[22:49] *** kiranraku joined
[22:53] *** kiranraku left
[22:57] *** skyesoss left
[23:03] *** CIAvash joined
[23:05] *** daxim left
[23:21] *** Orbstheorem joined
[23:34] *** derpydoo joined
[23:39] *** bigdata joined
[23:40] *** daxim joined
[23:41] *** bigdata left
