[00:24] *** teatime left
[00:30] *** derpydoo left
[00:51] *** djuber left
[00:51] *** Sgeo joined
[00:51] *** djuber joined
[00:54] *** lucs_ left
[00:54] *** lucs joined
[00:58] *** facetious left
[01:00] *** japhb left
[01:04] *** cm left
[01:04] *** gordonfish left
[01:04] *** broquain1 left
[01:04] *** nicole left
[01:04] *** peder left
[01:04] *** phogg left
[01:04] *** ecocode left
[01:04] *** avar left
[01:04] *** Tirifto_ left
[01:04] *** avuserow left
[01:04] *** cleo left
[01:04] *** tjr left
[01:04] *** slu left
[01:04] *** notable6 left
[01:04] *** tellable6 left
[01:04] *** bisectable6 left
[01:04] *** bdju left
[01:04] *** thowe left
[01:04] *** bartolin_ left
[01:04] *** constxqt_ left
[01:04] *** vrurg left
[01:04] *** Voldenet left
[01:04] *** lucerne left
[01:04] *** Geth left
[01:04] *** quotable6 left
[01:04] *** benchable6 left
[01:04] *** shareable6 left
[01:04] *** greppable6 left
[01:04] *** jrjsmrtn left
[01:04] *** _________ left
[01:04] *** Sgeo left
[01:05] *** antim0d3s left
[01:05] *** dutchie left
[01:05] *** timo left
[01:05] *** xkr47 left
[01:05] *** lucerne joined
[01:06] *** thowe joined
[01:06] *** bartolin_ joined
[01:06] *** constxqt_ joined
[01:06] *** vrurg joined
[01:06] *** Voldenet joined
[01:06] *** Geth joined
[01:06] *** quotable6 joined
[01:06] *** benchable6 joined
[01:06] *** shareable6 joined
[01:06] *** greppable6 joined
[01:06] *** jrjsmrtn joined
[01:06] *** _________ joined
[01:06] *** cm joined
[01:06] *** gordonfish joined
[01:06] *** broquain1 joined
[01:06] *** nicole joined
[01:06] *** peder joined
[01:06] *** _________ left
[01:06] *** Sgeo joined
[01:06] *** antim0d3s joined
[01:06] *** dutchie joined
[01:06] *** timo joined
[01:06] *** xkr47 joined
[01:07] *** _________ joined
[01:07] *** gordonfish left
[01:07] *** phogg joined
[01:07] *** ecocode joined
[01:07] *** avar joined
[01:07] *** Tirifto_ joined
[01:07] *** avuserow joined
[01:07] *** cleo joined
[01:07] *** tjr joined
[01:07] *** slu joined
[01:07] *** notable6 joined
[01:07] *** tellable6 joined
[01:07] *** bisectable6 joined
[01:07] *** bdju joined
[01:08] *** gordonfish joined
[01:09] *** japhb joined
[01:11] *** tailgate joined
[01:22] *** jpn left
[01:28] *** swaggboi joined
[01:32] *** Sgeo left
[01:40] *** jpn joined
[01:40] *** Sgeo joined
[01:42] *** lichtkind left
[02:51] *** hulk joined
[02:53] *** kylese left
[03:08] *** japhb left
[03:13] <tbrowder__> tsk, tsk

[03:15] *** hulk left
[03:15] *** kylese joined
[03:29] *** japhb joined
[03:30] *** edr left
[03:55] *** jpn left
[04:34] *** jpn joined
[04:39] *** jpn left
[05:48] *** jpn joined
[05:54] *** jpn left
[05:56] *** cm left
[06:00] *** cm joined
[06:49] *** jpn joined
[06:49] *** japhb left
[06:54] *** jpn left
[06:55] *** japhb joined
[07:13] *** japhb left
[07:13] *** japhb joined
[07:22] *** Sgeo left
[07:29] *** eseyman left
[07:30] *** manu_ joined
[07:31] *** manu_ is now known as eseyman

[07:32] *** japhb left
[07:36] *** Sgeo joined
[07:42] *** japhb joined
[07:50] *** japhb left
[07:50] *** jpn joined
[07:56] *** jpn left
[08:10] *** jpn joined
[08:15] *** jpn left
[08:22] *** jpn joined
[08:37] *** lichtkind joined
[08:50] *** jpn left
[08:54] *** jpn joined
[08:55] *** dakkar joined
[09:11] *** japhb joined
[09:23] *** abraxxa joined
[09:26] *** japhb left
[09:27] *** sena_kun joined
[09:28] *** Sgeo left
[09:31] *** abraxxa left
[09:31] *** abraxxa joined
[09:35] *** jpn left
[09:57] *** jpn joined
[10:11] *** sena_kun left
[11:13] <tbrowder__> here is a test CSV file in English, I would appreciate a similar test CSV file in other languages:

[11:13] <tbrowder__> https://gist.github.com/tbrowder/20632e8dbfc0973f4eaf4ebf866ff78b

[11:15] <tbrowder__> oops, that hobby should read "...railroad...on YouTube (and live)"

[11:16] <discord-raku-bot> <nemokosch> what are you talking about?

[11:30] <discord-raku-bot> <librasteve> gonna need an LLM for that

[11:31] <discord-raku-bot> <antononcube> @tbrowder programmatically automatic translations can be obtained with “Lingua::Translation:DeepL”, or “WWW::OpenAI”, or “WWW::PaLM”, or “LLM::Functions”.

[11:32] *** Xliff_ joined
[11:32] <discord-raku-bot> <antononcube> The value of the third column of the linked CSV file.

[11:32] <Xliff_> \o

[11:33] <Xliff_> How compatible are C++ classes with a Raku NativeCall CStruct?

[11:33] * Xliff_ is still hoping somehow for a better way of interfacing Raku with C++

[11:34] <Xliff_> Seriously! I wonder what trouble I could get in with Raku bindings for Unreal Engine 5?

[11:34] <Xliff_> Would need a workaround for some STL features though (Generics in particular)

[11:35] <discord-raku-bot> <antononcube> @librasteve The translation can be done with DeepL — it uses neural networks, but they are not LLMs. Their service can be used for free.

[11:36] <discord-raku-bot> <nemokosch> this is a C++ question, and from what I know, C++ classes (that don't use virtual methods) are binary compatible with C structs

[11:37] <Xliff_> nemokosch++ -- But what about those that do use virtual methods. Is ther a workaround?

[11:37] <discord-raku-bot> <antononcube> @tbrowder Here is DeepL : https://www.deepl.com/translator

[11:38] <discord-raku-bot> <nemokosch> well, from all I know, virtual methods are internally represented as pointers/references so probably there is

[11:38] <Xliff_> Huh,

[11:38] <Xliff_> Something like -- class MyCPPClass is repr<CStruct> { has Pointer $!stupidVirtualMethod }

[11:40] <discord-raku-bot> <librasteve> antononcube: ah - that's cool thanks!

[11:45] <discord-raku-bot> <nemokosch> I think one should read the standard to say something comprehensible about it. Either you are lucky and NativeCall goes out of its way to support C++ somewhat, or I can only say maybe it's not the best idea to begin with

[11:46] <discord-raku-bot> <nemokosch> these C structs are for sharing data between native code and Raku

[11:46] <discord-raku-bot> <nemokosch> classes that contain real "class-y" things are not really data

[11:47] <discord-raku-bot> <nemokosch> https://docs.raku.org/language/nativecall#C++_support

[11:51] *** lichtkind_ joined
[11:54] *** lichtkind left
[12:14] <Xliff_> What the heck is the "is nativeconv" trait? Is it documented? 

[12:16] <Xliff_> All hidden behind nqp:buildnativecall

[12:16] <Xliff_> s/:/::/

[12:30] <tbrowder__> antononcube: thnx for link and ideas, but i really need tranlation AND with proper unicode chars. see my Date::Names for 13 languages and native chars. i can't easily produce those non-ASCII chars on my keyboard without a lot of ff when our non-english friends here can snap it out in a heartbeat (really interesting to watch Koreans typing on their keyboards)

[12:31] <tbrowder__> those translations were contributed by Raku users

[12:32] <tbrowder__> i think i need to buy a special add-on keyboard

[12:38] <discord-raku-bot> <antononcube> @tbrowder I strongly suspect that if you put the description you gave to an LLM you’ll get something very close to what you want.

[12:42] <tbrowder__> ok, sounds like a plan

[12:51] <discord-raku-bot> <librasteve> tbrowder__ took me about two mins to do this on ChatGPT ...

[12:51] <discord-raku-bot> <librasteve> ^^^ this with ChatGPT 3.5 (free)  please make me a csv with 30 rows like this name, language, hobby Steve, US English, watching railroad operations  ok, now take column 3 and translate into the language  please add unicode characters and decorators where appropriate

[12:52] <discord-raku-bot> <librasteve> The results are in your gist as a comment

[13:11] <Xliff_> Do class attributes store their index in .^attributes?

[13:21] *** edr joined
[13:36] <tbrowder__> librasteve: looks pretty good, thanks

[13:41] <tbrowder__> Xliff: try taking .name and .value od .

[13:42] <tbrowder__> of .^attributes list

[13:42] <tbrowder__> items

[13:45] <tbrowder__> m: class f { has $.id; has $.val }; my $a = f.new(:id(2), :val("fdot")); dd $.a.^attributes

[13:45] <camelia> rakudo-moar b0c030838: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Variable $.a used where no 'self' is available␤at <tmp>:1␤------> $a = f.new(:id(2), :val("fdot")); dd $.a⏏.^attributes␤    expecting any of:␤        argument list␤        term␤»

[13:46] <tbrowder__> arg xtra dot

[13:48] <tbrowder__> m: class f {has $.id; has $.val}; my $a = f.new: :id(2), :val("fdot"); dd $a.^attributes

[13:48] <camelia> rakudo-moar b0c030838: OUTPUT: «(Attribute.new, Attribute.new)␤»

[13:49] <tbrowder__> take each attr and use methods .name and .value

[13:50] <discord-raku-bot> <antononcube> @librasteve  , @trbrowder After joining OpenAI and ChatGPT-3 is "free" for three months. Meaning, you are given an allowance of $20 that you have to spent within three months.

[14:03] <[Coke]> m: dd flat 1..4, 10..12

[14:03] <camelia> rakudo-moar b0c030838: OUTPUT: «(1, 2, 3, 4, 10, 11, 12).Seq␤»

[14:03] <[Coke]> m: dd |(1..4, 10..12)

[14:03] <camelia> rakudo-moar b0c030838: OUTPUT: «1..4␤10..12␤»

[14:09] <[Coke]> m: dd flat(1..4, 10..12) #not the parens per se.

[14:09] <camelia> rakudo-moar b0c030838: OUTPUT: «(1, 2, 3, 4, 10, 11, 12).Seq␤»

[14:24] <tbrowder__> antononcube: have you looked into github copilot?

[14:28] <timo> infuriate people by implementing a library for path / filename operations that uses the "div" infix operator for concatenating paths

[14:28] <discord-raku-bot> <antononcube> @tbrowder Yes. Also, tabnine. I cannot use them at most places I work, so I do not want to be dependent on them.

[14:29] <discord-raku-bot> <antononcube> That said, for my open sources projects I use PaLM and ChatGPT a lot, especially for reprogramming from one lanugage to another.

[14:39] <discord-raku-bot> <antononcube> Also, both PaLM and ChatGPT are very useful when I have to reformat, say, Markdown lists into Markdown or HTML tables. Usually, the time I spent the most is on understanding the software code (architecture, idioms, syntax, etc) and documenting it. Not so much on the actual code writing.

[14:42] *** japhb joined
[14:45] <discord-raku-bot> <librasteve> Coke: Note that the flattening is recursive, so ((("a", "b"), "c"), "d").flat returns ("a", "b", "c", "d"), but it does not flatten itemized sublists

[14:46] <discord-raku-bot> <librasteve> otoh | (aka .Slip) is not recursive

[14:50] <discord-raku-bot> <librasteve> there are many wrinkles like this in raku and it makes me wonder whether this lack of consistency is by sloppy design, or perhaps a way to support timtowtdi with readable and concise variants that cover (in this case) both recursive and non-recursive behaviours (but require you to know what you are doing in the detail) ... personally I lean to the latter

[15:05] <discord-raku-bot> <nemokosch> and that's fair

[15:06] <discord-raku-bot> <nemokosch> leaning towards a certain explanation is fine. What bothers me is the fundamentalism, and routinely responding to complaints by saying "you just need to learn it and then you will understand, duh"

[15:07] <discord-raku-bot> <nemokosch> That's not you, to make it clear, but it's definitely a prevalent phenomenon on multiple platforms

[15:08] *** jpn left
[15:13] <[Coke]> btw, my flat item there was for a problem solving Q that came in recently (I don't have the number in front of me)

[15:14] <discord-raku-bot> <nemokosch> I'm trying to stay away from that issue. We have spent a lot of time on it in the Raku Study meeting, AlexDaniel has complained about it for years, at this point I'd say everybody knows it, there is nothing more to say

[15:15] <discord-raku-bot> <nemokosch> It's only a matter of willingness to at least ban a lot of use-cases, if it cannot be remedied

[15:17] <Geth> ¦ planet.raku.org: 93acf1641d | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | perlanetrc

[15:17] <Geth> ¦ planet.raku.org: Fix feed URL

[15:17] <Geth> ¦ planet.raku.org: review: https://github.com/Raku/planet.raku.org/commit/93acf1641d

[15:22] *** jpn joined
[15:30] <discord-raku-bot> <nemokosch> https://www.youtube.com/watch?v=qBn1KpwskI0

[15:30] <discord-raku-bot> <nemokosch> haven't seen this before. Wholesome haha

[15:38] * lizmat wonders what the added value is of having it as a Youtube movie

[15:38] <lizmat> when you're supposed to be reading all of the time

[15:55] <tbrowder__> ok, tried it, chatgpt is very cool, it uses unicode, AND it seems to understand Raku in my simple tests

[15:59] <Xliff_> tbrowder: Actually, using .name and .value are what I am trying to avoid.

[15:59] <Xliff_> After thinking about it, I can see why Attribute does NOT have an index into a classes .^attributes since that object might be used in more than one class.

[16:00] <tbrowder__> lizmat: at least he gave Mi6::Helper some publicity ;-D

[16:00] <lizmat> true...  but a blog post would have done the same

[16:01] <tbrowder__> but he didn't show using it :-(

[16:03] <tbrowder__> mea culpa

[16:05] <[Coke]> lizmat: some people learn better reading, some watching.

[16:05] <[Coke]> ... as my internet connection hangs and I can't even watch it

[16:06] <lizmat> but that's what I don't get: the video is just showing test that you're supposed to "read", with some pretty horrible background music

[16:06] <lizmat> *text

[16:06] <[Coke]> Yah, this isn't much more than a video blog post.

[16:07] <tbrowder__> Xliff_: what is your use case?

[16:32] <Xliff_> tbrowder: Trying to save an attribute's location at compile time for use at INIT time. The data itself does not change, but the facilities are not available when the data is collected (via trait)

[16:33] <Xliff_> So I do not want to have to do several O(N) searches of various .^attributes across classes, and I can't serialize the Attribute class at compile time.

[16:33] <Xliff_> So having an attributes index into ::?CLASS.^attributes would really be helpful.

[16:35] <Xliff_> m: multi sub trait_mod:<is> (Attribute $a, :$saveable!) { $a.package.^attributes.first( $a, :k ).say }; class A { has $.a; has $.b is saveable; has $.c };

[16:35] <camelia> rakudo-moar b0c030838: OUTPUT: «1␤»

[16:35] <Xliff_> m: multi sub trait_mod:<is> (Attribute $a, :$saveable!) { $a.package.^attributes.first( $a, :k ).say }; class A { has $.a; has $.b; has $.c is saveable };

[16:35] <camelia> rakudo-moar b0c030838: OUTPUT: «2␤»

[16:35] <Xliff_> Although that actually worked out pretty well, LOL!

[16:36] <Xliff_> m: multi sub trait_mod:<is> (Attribute $a, :$saveable!) { $a.package.^attributes.first( $a, :k ).say }; class A { has $.a; has $.b is saveable; has $.c is saveable };

[16:36] <camelia> rakudo-moar b0c030838: OUTPUT: «1␤2␤»

[16:37] <Xliff_> That's much better, as I don't care about a compile-time performance hit from .first! :D

[16:49] <Xliff_> Wow... that video was..... helpful?

[16:49] <Xliff_> I guess?

[16:49] <Xliff_> I knew about everything in it though.

[16:58] <Geth> ¦ advent/main: 06274eb0a6 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2023/authors.md

[16:58] <Geth> ¦ advent/main: Schedule JJ Atria for Dec 2

[16:58] <Geth> ¦ advent/main: review: https://github.com/Raku/advent/commit/06274eb0a6

[17:25] <[Coke]> speaking of marketing, I wonder if we could get some concensus on what kind of videos we'd like to see.

[17:25] <[Coke]> I was thinking that about 5m intros on neat features would be one kind of helpful video.

[17:33] *** dakkar left
[17:40] <discord-raku-bot> <nemokosch> what do you mean, ultimate background music time

[17:57] <Geth> ¦ advent/main: 2a7e5b5f6a | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2023/authors.md

[17:57] <Geth> ¦ advent/main: Schedule heyajulia for Dec 3

[17:57] <Geth> ¦ advent/main: review: https://github.com/Raku/advent/commit/2a7e5b5f6a

[18:02] <discord-raku-bot> <antononcube> @lizmat "wonders what the added value is of having it as a Youtube movie [...]" -- It is a Zoomer / Gen-Z thing.

[18:03] <lizmat> I guess they can't read anymore then

[18:03] <lizmat> I mean: the suggestion of pausing the movie to read was ...  unneeded for me

[18:03] <lizmat> at least triple speed the movie would have worked better for me

[18:05] <discord-raku-bot> <antononcube> @lizmat With my previous comment I was mostly trying to indicate that I am age-prejudiced.

[18:05] <lizmat> :-)

[18:05] <discord-raku-bot> <antononcube> And, yes, most of the time I watch listen YouTube movies with at least 25% speed-up.

[18:24] *** tirnanog joined
[18:30] *** jpn left
[18:35] <discord-raku-bot> <nemokosch> To be fair, youtube is a platform. There is no similar platform for textual content. One could insist that Facebook or Reddit would be one, in some sense - honestly, not really

[18:40] <discord-raku-bot> <librasteve> substack, wordpress, medium (also reddit) come to mind

[18:41] *** jpn joined
[18:41] <lucs> Mr.Schneider has posted about 25K (sic) videos on his channel since he started about a year ago (over 70 posted in the last 24 hours), most lasting around 3 minutes, pretty much all the same format: he chit-chats a bit at the start, then shows one or more ways to solve some given problem.

[18:42] <lucs> I don't know what the quality of the solutions is, I've only been looking at his stuff since it was mentioned here earlier.

[18:42] <lucs> But with so many videos, I'm not sure how anyone can find one on any specific problem.

[18:42] <lucs> And when it would be relevant, there is unfortunately never any code that a viewer can copy/paste.

[18:42] <lucs> Yep, his work would probably be a couple of orders of magnitude more useful if it was plain-text based and searchable.

[18:43] <Geth> ¦ advent/main: 5adc2a9f38 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | raku-advent-2023/authors.md

[18:43] <Geth> ¦ advent/main: Add 2023 Review

[18:43] <Geth> ¦ advent/main: review: https://github.com/Raku/advent/commit/5adc2a9f38

[18:51] *** sena_kun joined
[18:55] <discord-raku-bot> <antononcube> @lucs Of course, recommender systems can be used. Transcripts can be combined with specially biased LLMs, etc.

[19:03] <lucs> A lot of technology to circumvent what would be so simple with plain text, no?

[19:05] *** teatime joined
[19:13] <discord-raku-bot> <antononcube> Absolutely! Why do it a simple way if we can do it in a contrived way.

[19:14] <lucs> Gotcha :)

[19:18] *** hxcdk joined
[19:19] *** hxcdk left
[19:21] *** abraxxa left
[19:34] *** jpn left
[19:43] *** japhb left
[19:43] *** japhb joined
[19:47] *** TieUpYourCamel left
[19:56] *** teatwo joined
[19:57] *** teatime left
[20:01] <tbrowder__> amen, brother!

[20:09] *** TieUpYourCamel joined
[20:49] *** japhb left
[20:51] <ab5tract> Idk

[20:52] <ab5tract> sorry, what I meant to say is: regarding video content, sometimes a video can go into much more depth than a blog post. This particular video does not appear to be a good example of this

[20:53] <discord-raku-bot> <scullucs> Agreed.

[21:07] <ab5tract> regarding potential Raku video content: It could be really interesting to have a semi-regular showcase, basically a Raku channel where ad-hoc presentations can appear throughout the year.

[21:16] <tonyo> .

[21:16] <tellable6> 2023-11-24T14:44:42Z #raku <tbrowder__> tonyo see ref to CSV::Parser above ^^^

[21:16] <tellable6> 2023-11-24T20:19:57Z #raku <melezhik> tonyo: CVS will work in US, lol 😂

[21:17] <discord-raku-bot> <librasteve> can someone look at https://www.reddit.com/r/rakulang/comments/1858m14/zef_install_failure/ and assist with install of docs-website please?

[21:17] <discord-raku-bot> <librasteve> (mainly for woody-...)

[21:18] <[Coke]> ... you don't install doc-website

[21:19] <discord-raku-bot> <librasteve> dont tell me tell woody ;-)

[21:19] <discord-raku-bot> <librasteve>  This repo can be cloned and the main dependencies can be installed with zef install . --deps-only 

[21:19] <[Coke]> ah, they are just installing deps. so the doc-website is not the problem. they need `graphviz` installed, probably.

[21:20] <[Coke]> also: why are they not reporting this on the issues site.

[21:20] <discord-raku-bot> <librasteve> can someone enable Discord invites for me and I will invite them here

[21:21] <discord-raku-bot> <librasteve> yes - they would likely have got quicker attention

[21:27] <[Coke]> added a note there about graphviz and the github site

[21:27] <[Coke]> (and also I replied to them originally)

[21:31] <discord-raku-bot> <librasteve> https://github.com/Raku/doc-website/issues/320

[21:32] <discord-raku-bot> <librasteve> thanks!!

[21:32] <discord-raku-bot> <librasteve> btw I have worked out how to get Discord invite

[21:34] *** japhb joined
[21:39] <discord-raku-bot> <librasteve> [Coke] oddly, this is not from the OP afaict

[21:43] <ugexe> they could probably just follow the instructions zef gives and do --exclude="curl"

[21:49] <ugexe> https://github.com/CurtTilmes/raku-libcurl/blob/master/META6.json#L18

[21:50] <ugexe> that has :ver<4> but the output on their netbsd system showed libcurl/8.4.0

[21:50] <ugexe> i dunno if that is relevant

[21:51] <ugexe> if it is relevant they can probably just do --exclude="curl" and be fine since the binding probably works with most versions

[21:54] <[Coke]> librasteve++ ugexe++

[22:21] *** jpn joined
[22:22] <discord-raku-bot> <nemokosch> by the way, I haven't heard of substack, wordpress doesn't aggregate content, and reddit is not really for blog posts

[22:22] <discord-raku-bot> <nemokosch> The server has public invites

[22:27] <discord-raku-bot> <nemokosch> writing here as well - the fix of https://github.com/Raku/doc-website/issues/320 is problematic because it alters an output file rather than the corresponding source

[22:27] *** sena_kun left
[22:28] <[Coke]> I'll re-fix it (probably tomorrow), thanks

[22:30] *** jpn left
[22:33] <discord-raku-bot> <nemokosch> thank you

[22:33] <discord-raku-bot> <nemokosch> it would be good to know what exactly finanalyst runs to update these files; it clearly is raku-pod-render some way

[22:37] *** Sgeo joined
[22:38] <[Coke]> yup, that'll be part of my fix is to document that. :)

[22:39] <[Coke]> most distros that do that probably use mi6 for it when they do a release, but we don't do releases.

[22:41] <discord-raku-bot> <nemokosch> also, mi6 would probably use the old Pod::To::Markdown

[22:50] *** jpn joined
[23:10] *** jpn left
[23:11] *** Xliff_ left
[23:47] *** lichtkind_ left
