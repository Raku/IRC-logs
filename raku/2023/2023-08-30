[00:00] *** reportable6 left
[00:00] *** reportable6 joined
[00:56] *** MasterDuke left
[01:06] *** MasterDuke joined
[01:20] *** merp joined
[01:25] *** japhb joined
[01:28] *** jmcgnh left
[01:28] *** bd3i left
[01:29] *** bd3i joined
[01:38] *** jmcgnh joined
[02:08] *** deoac joined
[03:08] *** tellable6 left
[03:08] *** releasable6 left
[03:08] *** reportable6 left
[03:08] *** nativecallable6 left
[03:08] *** committable6 left
[03:08] *** statisfiable6 left
[03:08] *** bisectable6 left
[03:08] *** benchable6 left
[03:08] *** linkable6 left
[03:08] *** unicodable6 left
[03:08] *** coverable6 left
[03:08] *** shareable6 left
[03:08] *** bloatable6 left
[03:08] *** quotable6 left
[03:08] *** notable6 left
[03:08] *** greppable6 left
[03:08] *** squashable6 left
[03:08] *** sourceable6 left
[03:08] *** evalable6 left
[03:08] *** bisectable6 joined
[03:08] *** squashable6 joined
[03:08] *** coverable6 joined
[03:08] *** statisfiable6 joined
[03:08] *** benchable6 joined
[03:08] *** sourceable6 joined
[03:08] *** unicodable6 joined
[03:09] *** committable6 joined
[03:09] *** releasable6 joined
[03:09] *** reportable6 joined
[03:09] *** evalable6 joined
[03:09] *** bloatable6 joined
[03:09] *** greppable6 joined
[03:10] *** shareable6 joined
[03:10] *** linkable6 joined
[03:10] *** nativecallable6 joined
[03:10] *** notable6 joined
[03:10] *** tellable6 joined
[03:11] *** quotable6 joined
[03:15] *** spikemaster left
[03:39] *** razetime joined
[04:12] *** deoac left
[04:18] *** amenonsen left
[04:19] *** amenonsen joined
[04:45] *** squashable6 left
[04:47] *** squashable6 joined
[05:36] *** siavash joined
[05:41] *** jpn joined
[05:46] *** jpn left
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[07:02] *** greppable6 left
[07:02] *** bisectable6 left
[07:02] *** linkable6 left
[07:02] *** evalable6 left
[07:02] *** committable6 left
[07:02] *** sourceable6 left
[07:02] *** reportable6 left
[07:02] *** notable6 left
[07:02] *** coverable6 left
[07:02] *** tellable6 left
[07:02] *** benchable6 left
[07:02] *** squashable6 left
[07:02] *** quotable6 left
[07:02] *** nativecallable6 left
[07:02] *** statisfiable6 left
[07:02] *** unicodable6 left
[07:02] *** bloatable6 left
[07:02] *** releasable6 left
[07:02] *** shareable6 left
[07:03] *** notable6 joined
[07:03] *** sourceable6 joined
[07:03] *** coverable6 joined
[07:03] *** statisfiable6 joined
[07:03] *** unicodable6 joined
[07:03] *** shareable6 joined
[07:03] *** benchable6 joined
[07:03] *** squashable6 joined
[07:04] *** quotable6 joined
[07:04] *** committable6 joined
[07:04] *** bisectable6 joined
[07:04] *** bloatable6 joined
[07:04] *** evalable6 joined
[07:04] *** reportable6 joined
[07:05] *** releasable6 joined
[07:05] *** linkable6 joined
[07:05] *** tellable6 joined
[07:05] *** nativecallable6 joined
[07:06] *** greppable6 joined
[07:14] *** abraxxa joined
[07:15] *** abraxxa left
[07:19] *** abraxxa joined
[07:25] *** abraxxa left
[07:25] *** merp left
[07:30] *** merp joined
[07:35] *** abraxxa joined
[07:40] *** siavash left
[07:43] *** jpn joined
[07:56] *** razetime left
[08:18] *** teatwo left
[08:19] *** teatwo joined
[08:21] *** Sgeo left
[08:25] *** jpn left
[08:32] *** razetime joined
[08:43] *** sena_kun joined
[08:46] *** jpn joined
[09:09] *** jpn left
[09:10] *** jgaz left
[09:11] *** jpn joined
[09:20] *** sena_kun left
[09:54] *** razetime left
[10:24] *** guifa joined
[10:38] *** jpn left
[10:40] *** jpn joined
[11:07] *** jpn left
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:53] *** jpn joined
[13:04] *** jpn_ joined
[13:04] *** dogbert17 joined
[13:05] *** jpn left
[13:07] *** razetime joined
[14:04] *** razetime left
[14:09] *** razetime joined
[14:16] *** [Coke] joined
[14:25] *** razetime left
[14:27] *** jpn_ left
[15:18] *** MoC joined
[15:46] <tbrowder__> hi, in a module repo Foo i have a file Foo/resources/files/bar.txt.  i  try "raku -It

[15:52] <tbrowder__> erg: raku -I. t/test.t and get failure. test.t has "$m = %?RESOURCES<files/bar.txt>.absolute; is $m, IO::Path" and it fails. in file META6.json i have "resources:" [ "files/bar.txt" ]". how can i test the file is found?

[16:01] <[Coke]> Is the Foo a subdir in your clone, or == the top level of the repo?

[16:02] <[Coke]> also, what does $m contain before you call is?

[16:02] <[Coke]> also: you mean "resources":, not "resources:", yes?

[16:06] <tonyo> ahh - so basically just building the dependency graph?

[16:09] <tonyo> tbrowder__: .absolute turns that into a Str

[16:11] <tonyo> tbrowder__: could jsut be: ok %?RESOURCES<files/bar.txt>.IO.f # tests that the file exists

[16:11] *** zz joined
[16:11] *** zz left
[16:13] <[Coke]> i think you don't need .IO there.

[16:13] <[Coke]> docs indicate it returns an IO already

[16:19] <tonyo> it returns Distribution::Resource

[16:19] <tonyo> which may be an IO but .f doesn't work on it directly

[16:19] <tonyo> so i doubt it

[16:22] <tbrowder__> Foo is top level dir

[16:23] <tonyo> and [Coke]'s question is a good one, re: also: you mean "resources":, not "resources:", yes?

[16:24] <tbrowder__> good ideas, guys...i'

[16:25] <tbrowder__> i was using is instead of ok

[16:26] <tbrowder__> hm, ckng Meta fr resources...

[16:27] <tbrowder__> yes, my typo here, i do have "resources":

[16:34] <tonyo> ah okay, did the `ok` work for you?  `is` should work but you should be checking for type Str after calling .absolute

[16:35] *** jpn joined
[16:39] <ugexe> only modules have access to %?RESOURCES

[16:40] *** jpn left
[16:41] <ugexe> you can add some subroutine to your module that does something like `sub MYRESOURCES() is implementation-detail { return %?RESOURCES }` and then in your tests do my $resources = MYRESOURCES(); say $resources<files/bar.txt>

[16:42] <tonyo> ugexe++

[16:48] *** jpn joined
[16:50] <tbrowder__> ugexe: thanks! (again)

[16:57] *** razetime joined
[17:06] <tbrowder__> ok, that works. thank you. that really needs to be in the docs near the def of var %?RESOURCES. i swear there is an example somewhere...searching source...

[17:07] <tonyo> tbrowder__: if you link the page i'll update it

[17:12] <tbrowder__> i can't find it...

[17:14] <tbrowder__> i think the trick is the fact the sub in lib gets precompiled. then the magic happens.

[17:14] <tonyo> haha

[17:14] <tonyo> is there a place to see what talks are already submitted for oct conference?

[17:15] <tonyo> or is there any interest in a talk about the ecosystem stuff?  if so, which parts/aspects of it?

[17:17] <tbrowder__> love to hear plans of the sqlite idea for better performance installing/searching for module distros. module distro best practices

[17:17] *** jpn left
[17:17] *** razetime left
[17:20] *** jpn joined
[17:21] <tonyo> if we go that route then my json indexer willn't be necessary

[17:22] <tonyo> if we want to go that route i can hack on it and do a little thing on it

[17:22] <tonyo> definitely can do a talk on the latter

[17:38] <[Coke]> https://docs.raku.org/language/variables#%%3FRESOURCES

[17:39] <[Coke]> (the search for that *does* work, thankfully. :)

[17:40] <[Coke]> and it does not mention that you have to be in a module, so good catch

[17:40] *** sena_kun joined
[17:55] *** abraxxa left
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[19:01] *** linkable6 left
[19:01] *** evalable6 left
[19:01] *** linkable6 joined
[19:03] *** evalable6 joined
[19:09] *** bigdata joined
[19:16] *** jpn left
[19:24] *** jpn joined
[20:07] *** bigdata left
[20:09] *** jpn left
[20:18] *** teatwo left
[20:19] *** teatwo joined
[20:19] *** teatwo left
[20:20] *** teatwo joined
[20:30] *** jpn joined
[20:30] *** MoC left
[20:31] <tonyo> did you already fix it?  the first sentence in there is `%?RESOURCES is a compile-time variable available to the code of a Distribution.`

[20:35] <[Coke]> distribution != Module

[20:35] <[Coke]> and I think that difference matters base don what ugexe said.

[20:35] <[Coke]> PRs to clean it up very welcome.

[20:41] <ugexe> ideally we could say something like Module::Name::<%?RESOURCES> or some such

[20:45] <tonyo> it'd be nice for those to be exposed

[21:30] *** evalable6 left
[21:33] *** evalable6 joined
[22:13] *** jpn left
[22:24] *** Sgeo joined
[22:25] *** sena_kun left
[22:41] *** jpn joined
[23:02] <elcaro> Got an issue with my recent fez upload

[23:02] <elcaro> fez review is ok, but I get an email saying "Error reading META from your last upload"

[23:03] <elcaro> json is valid... so I'm not sure what the issue is. Error message could be more helpful.

[23:08] <elcaro> Hmm... comparing to previous versions... I added `:auth` id to my depends module. Maybe it doesn't like it?

[23:12] <elcaro> hmm, tried removing the auth tag and it didn't help. Any ideas, anyone?

[23:21] <[Coke]> can you show your META6.json file?

[23:32] <elcaro> https://github.com/0racle/raku-Inline-J/blob/master/META6.json

[23:36] <elcaro> Perl and Python both read it fine, the JSON is not malformed

[23:37] <elcaro> Apart from bumping the version, the only thing I did was remove "NativeCall" from depends, because it's  in  core.

[23:37] <elcaro> I had also added `:auth` to the other dependency, but removed it and still getting the email advising error

[23:41] *** linkable6 left
[23:41] *** linkable6 joined
