[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:12] *** Sauvin left
[00:13] *** Sauvin joined
[01:13] *** shareable6 left
[01:13] *** greppable6 left
[01:13] *** benchable6 left
[01:13] *** bisectable6 left
[01:13] *** bloatable6 left
[01:13] *** squashable6 left
[01:13] *** nativecallable6 left
[01:13] *** unicodable6 left
[01:13] *** statisfiable6 left
[01:13] *** linkable6 left
[01:13] *** evalable6 left
[01:13] *** notable6 left
[01:13] *** coverable6 left
[01:13] *** releasable6 left
[01:13] *** reportable6 left
[01:13] *** committable6 left
[01:13] *** tellable6 left
[01:13] *** quotable6 left
[01:13] *** sourceable6 left
[01:13] *** committable6 joined
[01:14] *** benchable6 joined
[01:14] *** shareable6 joined
[01:14] *** unicodable6 joined
[01:14] *** coverable6 joined
[01:14] *** notable6 joined
[01:14] *** squashable6 joined
[01:15] *** releasable6 joined
[01:15] *** statisfiable6 joined
[01:15] *** evalable6 joined
[01:15] *** greppable6 joined
[01:15] *** reportable6 joined
[01:15] *** bisectable6 joined
[01:15] *** quotable6 joined
[01:15] *** nativecallable6 joined
[01:15] *** tellable6 joined
[01:15] *** sourceable6 joined
[01:16] *** bloatable6 joined
[01:16] *** linkable6 joined
[01:56] *** jgaz left
[02:01] <lucs> tonyo: Hmm... Contrary to some days ago, every time I try a 'zef upload' it not only fails (used to too), but it also does something which makes the .tar.gz it creates under sdist/ contain some .precomp files (that I removed before trying the upload).

[02:26] *** razetime joined
[02:39] *** squashable6 left
[02:42] *** squashable6 joined
[03:01] *** Oshawott joined
[03:05] *** archenoth left
[03:09] *** simcop2387 joined
[03:10] *** perlbot joined
[03:28] *** tejr_ joined
[03:29] *** tejr_ left
[03:31] *** tejr left
[04:28] *** Sauvin left
[04:32] *** Sauvin joined
[04:44] *** oodani left
[04:44] <tonyo> how did .precomp files that weren't there end up in the dist?

[04:45] *** oodani joined
[05:06] *** squashable6 left
[05:09] *** an3223 joined
[05:09] *** squashable6 joined
[05:59] *** razetime left
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:51] *** teatwo joined
[06:54] *** tea3po left
[07:11] *** Sgeo left
[07:22] *** squashable6 left
[07:23] *** abraxxa joined
[07:23] *** squashable6 joined
[07:35] *** derpydoo joined
[07:37] *** silug joined
[07:38] *** Voldenet_ joined
[07:41] *** elcaro_ joined
[07:46] *** abhinav joined
[07:46] *** thowe left
[07:46] *** uzl[m] left
[07:46] *** Voldenet left
[07:46] *** discord-raku-bot left
[07:46] *** elcaro left
[07:46] *** PotatoGim left
[07:46] *** daxim left
[07:46] *** pierrot left
[07:46] *** DarthGandalf left
[07:46] *** silug8 left
[07:46] *** Voldenet_ is now known as Voldenet

[07:46] *** thowe joined
[08:06] *** dakkar joined
[08:06] *** abhinav left
[08:34] *** Xliff joined
[08:34] *** sarna left
[08:35] <Xliff> \o

[08:35] <tellable6> 2023-03-19T20:51:16Z #raku <vrurg> Xliff I haven't followed the full context of your question about OUTER, but what you probably need to iterate over out contexts is .WHO<OUTER>

[08:35] <Xliff> raku.land looks to be down. Can someone restart?

[08:35] <Xliff> vrurg: Ah! Thanks!

[08:35] <Xliff> .tell vrurg Ah! Thanks!

[08:35] <tellable6> Xliff, I'll pass your message to vrurg

[08:43] *** tejr joined
[08:50] *** sarna joined
[08:53] *** uzl[m] joined
[08:53] *** discord-raku-bot joined
[08:53] *** PotatoGim joined
[08:53] *** pierrot joined
[08:53] *** daxim joined
[08:53] *** DarthGandalf joined
[08:54] *** sena_kun left
[08:56] *** uzl[m] left
[08:56] *** Matthew|m left
[08:57] *** CIAvash left
[08:57] *** tadzik left
[08:58] *** sena_kun joined
[08:58] *** derpydoo left
[09:17] *** CIAvash joined
[09:19] *** sarna left
[09:20] *** sarna joined
[09:33] *** jpn joined
[09:35] *** CIAvash left
[09:39] *** CIAvash joined
[09:52] <discord-raku-bot> <Nemokosch> these questions are worrying

[09:52] *** Matthew|m joined
[09:52] *** tadzik joined
[09:52] *** uzl[m] joined
[09:54] <discord-raku-bot> <Nemokosch> from what I understood, the main source of problems is what gets included in the package, and .gitignore globs in particular. Why not make that a standalone package with its own tests and maintenance?

[10:15] *** CIAvash left
[10:15] *** tadzik left
[10:15] *** uzl[m] left
[10:15] *** Matthew|m left
[10:35] *** tadzik joined
[10:55] *** CIAvash joined
[10:56] *** uzl[m] joined
[11:05] *** Matthew|m joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:10] *** an3223 left
[12:33] *** derpydoo joined
[13:05] *** tejr left
[13:19] *** tejr joined
[13:41] *** abhinav joined
[13:56] *** gcd left
[14:03] *** gcd joined
[14:06] <lucs> tonyo: I'm sorry, I wasn't clear. Here's a gist explaining in detail: https://gist.github.com/lucs/49e797ac936b3d7bf0ff08904878f22d

[14:17] <discord-raku-bot> <Anton Antonov> @lucs Interesting package : "Test::Selector". I should try to figure out how from Gherkin specs to generate Raku test files that use the proposed way of test selection. (The Gherkin language allows tests labeling for selective running.)

[14:18] <lucs> I hope it works out for you.

[14:18] <discord-raku-bot> <Anton Antonov> @lucs I might have multiple feature enhancements requests. 🙂

[14:18] <lucs> I use the module especially during development, because that's when you don't necessarily want to run all the tests all the time.

[14:21] *** gcd left
[14:22] <lucs> Anton: I'll gladly look at any suggested enhancements :-)

[14:28] <discord-raku-bot> <Anton Antonov> @lucs Well, they are going to be inspired by this guide: https://cucumber.io/docs/cucumber/api/?lang=java#tags

[14:29] <discord-raku-bot> <Anton Antonov> Basically, it would be nice if we can associate a list of tags for test and be able to select test running based on a tag or two from each list.

[14:32] *** rf_ joined
[14:32] <discord-raku-bot> <Anton Antonov> @lucs I easy or hard is to implementing using of Tuple   objects as test tags?

[14:32] <discord-raku-bot> <Anton Antonov> https://raku.land/zef:lizmat/Tuple

[14:33] <lucs> I suppose something like that is doable.

[14:33] <rf_> Sorry for no article last sunday, was very busy

[14:33] *** rf_ left
[14:33] <rf> That was me^

[14:34] <tonyo> ahh lucs do you have a .gitignore in the directory you're bundling?

[14:35] <tonyo> and which version of fez are you using?  `fez version`

[14:35] <lucs> Currently, one can select a subset of the available runnable blocks (or tests, if you will) by asking for those whose label (which work as a single tag) match a glob-like pattern.

[14:36] <lucs> Anton: This has worked well enough for me over the years.

[14:37] <lucs> tonyo: Yes, the bundle has a .gitignore (you can see it listed in the .tar.gz archive).

[14:37] <lucs> fez version 42 (the best, I'm sure!)

[14:37] <tonyo> haha

[14:38] <tonyo> fez 43 attempts to fix up the globbing so that it works with .gitignore rather than like real typeglobbing

[14:38] <tonyo> so an update _might_ fix your issue though i'm getting other reports that it isn't fixing anything

[14:38] <lucs> Uh, zef can get that version, right?

[14:40] <lucs> Okay, got 43, will try again.

[14:40] <tonyo> bless

[14:42] <lucs> Hmm... This time: "=<< Failed to tar and gzip: tar: Cowardly refusing to create an empty archive"

[14:42] <lucs> (and created a .precomp/)

[14:43] <lucs> I did only a 'fez upload' there; is there an operation that should precede that?

[14:45] *** ab5tract left
[14:46] <lucs> tonyo: Do you know why it creates a lib/.precomp? Is the 'upload' running my code or something?

[14:46] <tonyo> hmm no - i think i figured out what's happening

[14:47] <tonyo> one sec

[14:54] *** an3223 joined
[14:58] *** sarna left
[15:06] <tonyo> lucs: pushing a fix

[15:08] *** Sgeo joined
[15:08] <lucs> Thanks. I'll try it out when it becomes available, and let you know how it goes.

[15:10] <tonyo> v44 is up and available lucs 

[15:12] <lucs> OK. Not quite zef-available here yet, it'll take a few minutes I guess.

[15:13] <lucs> Or should I download from github?

[15:16] <tonyo> zef update should refresh the mirror

[15:16] <tonyo> `zef update && zef install ..`

[15:16] <lucs> Oh, forgot to do that, thanks.

[15:18] *** vrurg_ joined
[15:18] *** vrurg left
[15:18] <lucs> Okay: turns out the latter part needs "upgrade" instead of "install", and... it's installed!

[15:18] <lucs> Trying...

[15:20] <tonyo> woo

[15:20] <tonyo> if it doesn't work, i have a workaround for you until i can figure that out

[15:22] <lucs> :-( No luck. "null regex not allowed" and "Failed to tar..." / "All bundlers exhausted..."

[15:24] <lucs> By the way, I'm in no hurry to upload this version, and I can test your versions, maybe from github if you prefer not to keep uploading 45, 46, etc.

[15:25] *** abraxxa left
[15:27] <discord-raku-bot> <Anton Antonov> @lucs Yeah, sure glob like patterns is one obvious way of doing it. It is not that close the Gherkin syntax, but can be used in a MVP.

[15:28] <lucs> Anton: Yeah, I fear the whole tags system may be somewhat of a YAGNI.

[15:33] <tonyo> lucs: is your repo public?

[15:33] <lucs> Yes: https://github.com/lucs/Data-RandomKeep

[15:37] <lucs> tonyo: Something I should mention about my setup, which may be irrelevant, but maybe not:

[15:37] <lucs> I notice there is a '.fez-config.json' file in the $HOME directory.

[15:37] <lucs> If your code needs to consult that file (I guess it does), it needs to indeed search for it in $HOME as it is set at that moment, not in the home directory that is specified in the /etc/passwd file (yeah, I change $HOME when I work in different projects).

[15:39] <lucs> (Since the file has been written in different project/$HOME directories, I guess your code reads from it there too, but just wanted to inform you, in case.)

[15:43] <Xliff> Who is handling doc site development?

[15:44] <lucs> Join channel raku-doc, they'll know :)

[15:44] <Xliff> Thanks.

[15:45] <tonyo> the bundling should work okay without that

[15:45] <tonyo> lucs: if you want to try uploading with fez from github i just pushed a few other fixes that should work

[15:45] <tonyo> i tested against your repo and it looked correct after the change i just made ^

[15:46] <lucs> Ok, will try.

[15:52] <lucs> tonyo: It worked! The comments mentioned looking a sdist/….tar.gz for a META6.json, but that directory appears to have been removed after the upload (which is fine).

[15:52] <lucs> But it did create a lib/.precomp, so not sure if that was uploaded.

[16:02] <lucs> tonyo: Anyway, thanks!

[16:04] *** jpn left
[16:17] <tonyo> i'll take a look

[16:19] <tonyo> yep, no precomp files in the dist

[16:19] <tonyo> thank you @lucs

[16:25] *** jgaz joined
[16:27] <lucs> tonyo: Excellent. Thanks again for such a quick resolution.

[16:27] <lucs> (And don't forget to upload 45 ;-) )

[16:27] <tonyo> that should also help guifa and [Coke] 

[16:28] <tonyo> i'm actually pretty close to releasing the `dist` branch if you want to check it out

[16:28] <tonyo> which will revolutionize synergy.  it also will help manage the dist

[16:29] <lucs> Er, synergy the concept, or is that some software I don't know about? 

[16:30] <tonyo> the marketing jargon : )

[16:30] <lucs> Okay :)

[16:33] *** sarna joined
[16:35] *** rf_ joined
[16:35] *** dakkar left
[16:37] *** rf left
[16:45] <lucs> (Now I keep lolling every time I read "revolutionize synergy" :-) )

[16:46] <tonyo> heh

[16:59] *** bigdata joined
[17:50] *** Ergo444 joined
[17:50] <Ergo444> hi how can I view the byte code of a raku program in an assembly form?

[17:50] <tellable6> 2023-03-26T01:08:36Z #raku <tonyo> ergo444: did you reinstall fez or is it using precomp from the older version of rakudo?

[17:52] *** gcd joined
[18:00] *** reportable6 left
[18:01] *** reportable6 joined
[18:11] *** gcd left
[18:21] <tonyo> Ergo444: my guess is it'd be in the precomp files

[18:31] <discord-raku-bot> <Anton Antonov> @lucs Here is a Raku one line for you to try:   raku -MData::Generators -e '.say for random-pretentious-job-title(100).grep({ $_.lc.contains("syner") })' 

[18:31] <discord-raku-bot> <Anton Antonov> You might get something like:  National Paradigm Synergist Interactive Intranet Synergist Corporate Mobility Synergist 

[18:32] <discord-raku-bot> <lucs> Hehe!

[18:33] <discord-raku-bot> <Anton Antonov> Note it is made with a "fellow" random-based package from "Data::*".

[18:34] <tonyo> haha

[18:34] <tonyo> okay, fez as a full dist manager is ready to roll - wee

[18:35] <discord-raku-bot> <lucs> Right. But note that "data" and "random" can cover a pretty wide area, so it turns out that at best, they're pretty distant cousins 🙂

[18:38] <discord-raku-bot> <Anton Antonov> @lucs Absolutely. But I need random data generators or samplers a lot for/during data wrangling demos. The package "Data::RandomKeep" can be fairly useful during data acquisition.

[18:39] <discord-raku-bot> <Anton Antonov> Which means I am filing an issue.

[18:39] <discord-raku-bot> <lucs> Uh, oh. That was fast 🙂

[18:40] <discord-raku-bot> <lucs> One feature I thought of adding is an optimization when you know how many elements the set you'll be picking from has.

[18:41] *** vrurg_ left
[18:43] <discord-raku-bot> <Anton Antonov> https://github.com/lucs/Data-RandomKeep/issues/1

[18:44] <discord-raku-bot> <lucs> Interesting. What would the "--/resample" mean?

[18:51] <discord-raku-bot> <Anton Antonov> Say, if you have 100 lines in the file and your request 120 to be kept.

[18:51] *** tea3po joined
[18:52] <discord-raku-bot> <Anton Antonov> You can shuffle the 100 lines, return them, and probably print a warning.

[18:53] <discord-raku-bot> <Anton Antonov> Alternatively, you can sample with repetitions, and return 120 lines.

[18:53] *** tea3po left
[18:54] *** tea3po joined
[18:54] <discord-raku-bot> <lucs> Oh, I see.

[18:54] *** teatwo left
[18:55] <discord-raku-bot> <Anton Antonov> “resemble”  might not be a good option. Say, —upto=120 might be a better signature.

[18:56] <discord-raku-bot> <lucs> Interesting. I'll work out a spec and ask you how it sounds.

[19:04] *** vrurg joined
[19:20] *** jgaz left
[19:27] <tonyo> fez v45 uploaded, full dist management is there now

[19:35] *** an3223 left
[19:44] <tonyo> rf_, guifa, lucs, [Coke] ^ dist features should be GA, the gitignore thing should also work better

[19:46] <[Coke]> tonyo: do you remember what I was looking for?

[19:53] <tonyo> it was a problem with the gitignore globber 

[19:54] <tonyo> it wasn't ignoring things in quite the same way as gitignore (it was a strict typeglobber), i've added a mode that does it more like .gitignore works.  iirc it was a on timezone or date related repo that was giving you issues

[20:19] <perryprog> So I must be looking in the wrong place, but I'm trying to figure out 1) how to configure the search path that nativecall uses to find libraries and 2) why I can't find where this is actually implemented in Rakudo.

[20:20] <perryprog> The specific problem I've been trying to solve is to get Net-ZMQ to actually find libzmq.5.dylib, which I have installed at /opt/homebrew/lib/libzmq.5.dylib

[20:21] <tonyo> perryprog: how's your `is native(...)` call look?

[20:22] <perryprog> And here's the actual error: https://gist.github.com/perryprog/7ff8296b9ce48f0d0256bf30b0861bda

[20:23] <tonyo> where's the file trying to load that?

[20:23] <perryprog> I think that'd be https://github.com/arnsholt/Net-ZMQ/blob/master/lib/Net/ZMQ4/Context.pm6#L7-L16

[20:25] <tonyo> you may have to set the LD_LIBRARY_PATH to add stuff installed with homebrew

[20:25] <perryprog> LD_LIBRARY_PATH=/opt/homebrew/lib zef install Net::ZMQ doesn't seem to work.

[20:25] <tonyo> in your case, try `LD_LIBRARY_PATH=/opt/homebrew zef install Net::ZMQ --force-install` or whatever the syntax for setting a variable is for your shell

[20:25] <tonyo> minus the lib

[20:26] <perryprog> aaaa

[20:26] <perryprog> right

[20:26] <perryprog> Also nope, and I don't see a change in the "tired" locations in either case.

[20:27] <perryprog> But that's why I started trying to find where the search actually happens but no luck.

[20:34] *** mtj left
[20:42] *** mtj joined
[20:48] *** rf_ left
[20:48] *** rf joined
[20:52] *** jjido joined
[21:07] *** jgaz joined
[21:11] *** Ergo444 left
[21:26] *** merp left
[21:27] *** merp joined
[21:28] *** jjido left
[21:42] *** jpn joined
[21:44] *** jjido joined
[21:46] *** jpn left
[21:47] *** jpn joined
[21:54] *** jpn left
[22:13] *** rf left
[22:15] *** jgaz left
[22:16] *** sena_kun left
[22:17] *** derpydoo left
[22:29] *** jjido left
[22:38] *** squashable6 left
[22:40] *** squashable6 joined
[22:42] *** lichtkind joined
[22:44] *** perlmaros left
[22:56] *** rf joined
[22:59] *** rf left
[22:59] *** tg57 joined
[23:07] <guifa> dang it

[23:07] <guifa> my file system is case insensitive and I actually had a valid reason to name two modules identically but for capitalizations

[23:09] <ugexe> you can technically make it work

[23:10] <ugexe> if the distribution is in a tar file already: use Distribution::Common::Tar, install it via CompUnit::Repository::Installation

[23:11] <perryprog> ... what was the valid reason? 🤔

[23:12] <perryprog> I'm not saying I don't believe you

[23:12] <perryprog> but I'm not not saying that

[23:12] <ugexe> take for instance raku docs, having a Int.rakudoc and int.rakudoc

[23:12] <perryprog> ummmmm. Heck.

[23:14] <perryprog> I'm not saying I'm wrong

[23:14] <perryprog> But I'm not not saying it

[23:24] *** squashable6 left
[23:27] *** squashable6 joined
[23:35] *** jpn joined
[23:40] *** jpn left
[23:50] <guifa> ugexe: heh, yeah this is for a module I'm developing so files need to sit around

[23:51] *** lichtkind left
[23:51] <guifa> perryprog rather than do one monstruous formatters file, I decided to break them up by code

[23:51] <guifa> so Intl::Format::DateTime::Formatters::m.rakumod vs Intl::Format::DateTime::Formatters::M.rakumod

[23:53] <guifa> I could call them "…::MonthDigits", "…::MonthStandAloneText", "…::MonthGenitiveText", but… meh, I'd rather just use the code lol

[23:55] *** derpydoo joined
