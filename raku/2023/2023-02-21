[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:15] *** jgaz left
[00:18] *** Manifest0 left
[01:04] *** xinming left
[01:06] *** xinming joined
[02:06] *** releasable6 left
[02:06] *** bloatable6 left
[02:06] *** shareable6 left
[02:06] *** evalable6 left
[02:06] *** linkable6 left
[02:06] *** tellable6 left
[02:06] *** greppable6 left
[02:06] *** squashable6 left
[02:06] *** quotable6 left
[02:06] *** unicodable6 left
[02:06] *** nativecallable6 left
[02:06] *** statisfiable6 left
[02:06] *** benchable6 left
[02:06] *** bisectable6 left
[02:06] *** reportable6 left
[02:06] *** committable6 left
[02:06] *** coverable6 left
[02:06] *** quotable6 joined
[02:06] *** benchable6 joined
[02:06] *** evalable6 joined
[02:06] *** squashable6 joined
[02:06] *** statisfiable6 joined
[02:07] *** shareable6 joined
[02:07] *** greppable6 joined
[02:07] *** releasable6 joined
[02:07] *** bloatable6 joined
[02:07] *** coverable6 joined
[02:07] *** committable6 joined
[02:08] *** nativecallable6 joined
[02:08] *** unicodable6 joined
[02:08] *** reportable6 joined
[02:08] *** bisectable6 joined
[02:09] *** linkable6 joined
[02:09] *** tellable6 joined
[02:20] *** codesections joined
[02:35] *** hythm left
[02:44] *** derpydoo left
[02:53] *** freeside joined
[02:57] *** freeside left
[03:03] *** razetime joined
[03:08] *** frost joined
[03:10] *** frost left
[03:29] *** freeside joined
[03:29] *** rf left
[03:32] *** razetime left
[03:38] *** razetime joined
[03:43] *** codesections left
[03:43] *** codesections joined
[04:27] *** razetime left
[04:27] *** derpydoo joined
[04:45] *** Sgeo left
[04:47] *** Sgeo joined
[05:00] *** frost joined
[05:03] *** razetime joined
[05:04] *** frost left
[05:40] *** razetime left
[06:00] *** reportable6 left
[06:02] *** reportable6 joined
[06:28] *** tonyo left
[06:28] *** kybr left
[06:28] *** tonyo joined
[06:29] *** kybr joined
[06:32] *** squashable6 left
[06:34] *** squashable6 joined
[07:10] *** grondilu joined
[07:17] * grondilu passes by to test his ERC auth

[07:23] <discord-raku-bot> <el gatito (** advocate)> why doesn‚Äôt fez have a web or gui interface üò≠

[08:07] *** [Coke] left
[08:09] *** Sgeo left
[08:23] <discord-raku-bot> <Nemokosch> What would it even do?

[08:34] *** freeside left
[08:35] *** Manifest0 joined
[08:42] *** [Coke] joined
[08:49] *** jpn joined
[08:54] *** jpn left
[08:56] <discord-raku-bot> <el gatito (** advocate)> allow you to manage your packages bruh

[09:01] <discord-raku-bot> <Anton Antonov> Meh. (Or, more precisely ‚Äî feh .)

[09:02] *** sena_kun joined
[09:03] <discord-raku-bot> <Nemokosch> how would a gui help with that?

[09:05] *** dakkar joined
[09:10] <discord-raku-bot> <el gatito (** advocate)> actually nvm

[09:16] *** ab5tract joined
[09:21] <discord-raku-bot> <el gatito (** advocate)> i wanted web fez so i don‚Äôt have to install lmao

[09:26] *** freeside joined
[09:29] <discord-raku-bot> <Nemokosch> xD

[09:31] <discord-raku-bot> <el gatito (** advocate)> web is the true cross platform

[09:33] *** ab5tract left
[09:58] <discord-raku-bot> <Nemokosch> I don't mind the web but I definitely not like hosting stuff

[10:06] *** ab5tract joined
[10:07] *** freeside left
[10:08] *** freeside joined
[10:13] *** freeside left
[10:17] *** eseyman left
[10:41] *** ab5tract left
[10:41] *** ab5tract joined
[11:00] *** ab5tract left
[11:01] *** grondilu left
[11:20] *** ab5tract joined
[11:56] *** jpn joined
[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:09] *** ab5tract left
[12:33] *** derpydoo left
[12:33] *** frost joined
[12:51] <ugexe> hmmm https://github.com/ugexe/Raku-CompUnit--Repository--Github

[12:52] <ugexe> you really don't want to do that though... the above is just proof you can

[13:08] *** kawaii left
[13:08] *** kawaii joined
[13:11] <tbrowder> hi, can anyone tell me the default branch of the  raku/doc.git repo?

[13:13] <lizmat> github thinks it's "main"

[13:14] <tbrowder> ok, now i am trying to use it but can't get in synch from the former master branch.

[13:15] <tbrowder> i can change to the main branch in the web interface, but can't get the upstream and origin set to default to main

[13:16] <tbrowder> BTW, are all the repos now using main?

[13:16] <lizmat> not all yet

[13:18] <tbrowder> so how can i unmurfle my doc repo? delete master, rename master, or ?

[13:19] <lizmat> do you have changes you want to keep?

[13:19] <tbrowder> my own default for new repos is still master

[13:19] <tbrowder> no my doc master is clean

[13:22] <lizmat> then I suggest to just do a fresh git clone

[13:22] <tbrowder> ok, will do

[13:37] *** rf joined
[13:40] <Geth> ¬¶ doc: tbrowder++ created pull request #4207: Replace the 'Opener graphemes' table with 'Brackets'

[13:40] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4207

[13:40] <rf> good morning folks

[13:41] <tbrowder> mornin'

[13:42] <tbrowder> "it's a beautiful day in my neighborhood"

[13:44] <rf> I've been waking up to 10-15 deer in my yard, been quite nice :) Besides the 5 feet of snow..

[13:50] <tbrowder> brr

[13:51] <tbrowder> rf mind saying where you are?

[13:54] <rf> Central Canada

[13:57] <tbrowder> whoa! mucho snow!

[13:57] <rf> Yeah, we normally get around 10 feet a year, but it was warm so a lot of it melted

[13:57] <rf> Now its cold and snowy again

[13:58] <tbrowder> we've been to western ca and eastern ca, great places to visit

[13:59] <rf> Yeah when people think Canada they mostly think east and west coast :)

[13:59] <rf> Tourists only really come where I am to go fishing or skiing

[13:59] <tbrowder> though about train across the country but they stopped doing the whole country some time ago.

[14:00] <rf> Yeah that sucks

[14:01] <tbrowder> last time there we entered and left vIa the crossing near glacier nat'l park.

[14:01] <discord-raku-bot> <Nemokosch> there is a little problem with fez

[14:03] <discord-raku-bot> <Nemokosch> the optional metadata fields can't be actually optional because the types don't match between the callee and the caller (Any goes in, Str is expected)

[14:06] <discord-raku-bot> <Nemokosch> seems fixable by deleting 3 lines of code

[14:06] <rf> PR !

[14:07] <discord-raku-bot> <Nemokosch> or so I thought - the supposedly updated metadata doesn't show up when running "fez meta" again

[14:13] *** freeside joined
[14:14] *** melezhik joined
[14:14] <[Coke]> If discord folks want to bridge #raku-doc, I'm OK with that.

[14:16] <melezhik> .tell grondilu you can use Spa to upload modules via fez , here is an example code - https://raku.land/zef:melezhik/SparrowCI-SandBox

[14:16] <tellable6> melezhik, I'll pass your message to grondilu

[14:16] <melezhik> Spa -> SparrowCI

[14:16] <discord-raku-bot> <Anton Antonov> @Coke My Raku gherkins are bigger than yours! (Or just more.)

[14:16] <discord-raku-bot> <Nemokosch> bridging #raku-doc would be nice üòõ

[14:17] *** melezhik left
[14:19] <kawaii> Are there any tools for sigscanning external processes in Raku yet?

[14:20] *** freeside left
[14:20] <discord-raku-bot> <Anton Antonov> @tbrowder Thanks for mentioning the Cucumber framework! (6-7 days ago.)

[14:38] <[Coke]> Anton++_

[14:39] <[Coke]> Thanks for jumping in.

[14:44] <discord-raku-bot> <Anton Antonov> @Coke Welcome! I have to document the process more and / or make a few movies illustrating the workflow. Also, in all fairness, it was in my TODO list for at least 1.5 years to make a DSL parser-interpreter for testing workflows. I did not know about Cucumber/Gherkin framework and designs -- leveraging them makes lots of sense.

[14:45] *** freeside joined
[14:50] *** melezhik joined
[14:52] <[Coke]> Ugh. This bug with MAX_PATH - I can trigger it with a call to dir, but my actual use case is inside of File::Find, so I have no easy way to trap the error. :(

[14:52] *** freeside left
[14:54] <discord-raku-bot> <Nemokosch> slightly offtopic: https://raku.land/cpan:LEONT/Path::Finder as a better File::Find?

[14:54] *** melezhik left
[14:54] <leont> I should be promoting it more, I'm very satisfied with how rakuish that module has become

[14:57] <discord-raku-bot> <Nemokosch> to recite a classic: "if Leon likes it, fine by me" üòÑ

[14:58] <discord-raku-bot> <Anton Antonov> @leont Speaking of self-promotion -- you might like this : https://github.com/antononcube/Raku-Gherkin-Grammar/blob/main/resources/DateTime-interpretation.rakutest .

[14:58] <[Coke]> leont: it, obviously, suffers from the same MAX_PATH issue I'm facing here.

[14:59] <discord-raku-bot> <Anton Antonov> @leont And the related ".feature" file : https://github.com/antononcube/Raku-Gherkin-Grammar/blob/main/resources/DateTime-interpretation.feature .

[15:00] <discord-raku-bot> <Anton Antonov> @leont I am filing an issue or two to "Path::Finder".

[15:03] *** a3r0 left
[15:03] *** a3r0 joined
[15:09] <discord-raku-bot> <Anton Antonov> @leont Just submitted one issue -- basically a request for "Path::Finder" CLI. I realize that would "compete" with "App::Rak", at least to a point.

[15:19] *** freeside joined
[15:23] *** freeside left
[15:24] <leont> The tricky thing there is that there are some 50ish named arguments, and while the boolish ones are easy to map, the smartmatching ones are trickier.

[15:29] <discord-raku-bot> <Anton Antonov> @leont Hmm‚Ä¶ ‚ÄúApp::Rak‚Äù has the same ‚Äúproblem.‚Äù My solution to that kind of problems is make a DSL.(Again, making a file finding DSL is something in my TODO list for at least a year.)

[15:49] *** Sgeo joined
[15:54] *** freeside joined
[15:59] *** freeside left
[16:14] <ugexe> [Coke]: clone File::Find to e.g. C:\Foo\Bar, edit C:\Foo\Bar\lib\File\Find.rakumod to add debug output or whatever, then run your program `raku -I "C:\Foo\Bar" my-script.raku`

[16:17] <[Coke]> Works fine for me, but not scalable for other work users.

[16:17] <ugexe> i mean just for trapping the error

[16:17] *** freeside joined
[16:17] <[Coke]> Basically need either copy File::Find, or make my own module that can skip these folders and complain about them rather than die.

[16:18] <ugexe> oh you dont want to know what the error is, you want to take action based on the error

[16:19] <[Coke]> I can do an --ll-exception from the `dir` command to get the underlying error.

[16:20] <ugexe> i suppose you can't catch the exception and then just .resume

[16:20] <ugexe> in your program

[16:21] <[Coke]> will that work if the error is in the guts of a File::Find callback somewhere?

[16:21] <[Coke]> `read from dirhandle failed: 3`, btw.

[16:21] *** freeside left
[16:21] <ugexe> no idea lol

[16:23] <[Coke]> where 3 is GetLastError

[16:23] <dakkar> https://github.com/tadzik/File-Find/blob/master/lib/File/Find.rakumod#L40 I guess the error is not the kind that `keep-going` helps with

[16:24] <[Coke]>             MVM_exception_throw_adhoc(tc, "read from dirhandle failed: %lu", GetLastError());

[16:24] <[Coke]> It's not a typed exception, so no

[16:24] <ugexe> you can grep on the message

[16:24] <ugexe> $_.message.contains('read from dirhandle failed')

[16:24] <dakkar> üòµ‚Äçüí´

[16:25] <dakkar> ugexe: the "not a typed exception" was in answer to my question about `keep-going`

[16:25] <[Coke]> I'll probably end up (short term) making a very small module that does what I need to walk dirs and skip this error (rather than copying the module)

[16:26] <dakkar> on the other hand, rakudo should throw a `X::IO::Dir`, not a adhoc, when that happens, right?

[16:26] <[Coke]> I think ugexe is continuing his suggestion that I copy file:find and then I can update that keep-going check to the error *I* care about.

[16:28] <[Coke]> Ah. that's the moarvm exception. if I catch this in raku and print the ^name, it *IS* the right type.

[16:28] <[Coke]> let me try keep-going...

[16:28] <ugexe> yeah sort of. i meant in your program you would catch the exception from File::Find, cept if it contains the message "read from dirhandle failed", and if so .resume the exception

[16:29] *** freeside joined
[16:30] <[Coke]> if this works, will submit a patch to File-Find to mention this may also help on windows with MAX_PATH. :)

[16:33] *** freeside left
[16:34] <dakkar> so, windows has 2 different "maximum length of a full pathname", and it can be instructed to ignore the shorter one?

[16:34] * dakkar is a bit boggled

[16:35] <[Coke]> there is a MAX_PATH; you can set a registry entry to ignore it. Raku ignores your ignore and fails anyway.

[16:36] <dakkar> in linux, there's a maxpath, but that's the longest size the kernel will accept‚Ä¶ there's no ignoring that

[16:38] <dakkar> (correction, it's called PATH_MAX, and it's 4096 bytes)

[16:43] *** freeside joined
[16:44] <ugexe> from what I saw setting the long path in the Windows registry allowed me to create a directory with an absolute path beyond 256. however i could not create a file with an absolute path beyond 256, nor could i create a single directory beyond 256

[16:44] <dakkar> 256‚Ä¶ what's this, CP/M? (it probably is)

[16:48] *** freeside left
[16:50] <[Coke]> windows isn't the problem here - even before I changed the registry, the files that raku can't touch are fine in explorer, cmd, powershell...

[16:51] <[Coke]> maybe I should say "verified" instead of changed, maybe I just set it to 1 a second time. :|

[16:52] <[Coke]> Looks like File::Find is happy (so far) with the keep-going setting, thank you very much for calling that to my attention

[16:53] <dakkar> we like simple&effective solutions!

[16:53] <dakkar> (well, work-arounds in this case, but still)

[16:56] <[Coke]> With this, hopefully that buys me enough time to maybe figure out how to update moarvm's functions (which, as ugexe pointed out, I can mostly do on my non-windows dev box)

[16:56] <dakkar> https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation oh gods it's all kinds of complicated

[17:03] *** freeside joined
[17:05] <ugexe> yeah, but we're really only worried about one thing: precompilation paths

[17:05] <ugexe> those tend to be longish due to multiple sha1 directories deep

[17:06] <ugexe> however, if long paths are enabled in Windows, and each directory part can be 256 characters, the sha1 paths shouldn't be an issue

[17:06] <ugexe> yet we get these errors when the absolute path reaches a length around 256

[17:07] <dakkar> now I'm thinking how did Java people deal with it‚Ä¶ they tend to have very deep source trees

[17:07] <[Coke]> ... I am worried about my paths, thank you. :)

[17:07] *** freeside left
[17:07] <[Coke]> I am OK with setting this registry being part of the windows install recommendations, once we avoid the current bug.

[17:08] <ugexe> i agree re: setting the registry thing. but it doesn't seem to help much

[17:08] <[Coke]> (to reduce concern about the sha paths)

[17:08] <[Coke]> because moarvm is broken, yes.

[17:08] <ugexe> rakudo-j: say 42

[17:09] <ugexe> ü§∑

[17:09] <ugexe> i guess it wouldnt be running on windows anyways heh

[17:09] <[Coke]> rakudo-j?

[17:09] <[Coke]> I haven't tried that in some time.

[17:09] <ugexe> if we had a bot that stil ran it, yeah

[17:10] <ugexe> mainly just wanted to see if i could create a long path using Windows + jvm rakudo

[17:10] <ugexe> but not bad enough to try and install all that

[17:11] <[Coke]> heh

[17:12] <ugexe> hmm maybe gdb can be installed on windows relatively easily

[17:12] <ugexe> https://stackoverflow.com/questions/70830151/gdb-on-windows-machine

[17:14] <dakkar> (quick look at the nqp source hints that rakudo-j should work as well as the JRE itself does)

[17:25] <[Coke]> ooh, MasterDuke is working on it!!

[17:30] <BarrOff> Hello, I was wondering what kind of regex engine is used by the rakudo compiler? Is it a DFA or NFA (and in this case traditional or POSIX)?

[17:35] *** dakkar left
[17:36] *** freeside joined
[17:37] <moritz> BarrOff: it basically builds a recursive-descend parser that uses an NFA for the declarative / "regular" parts

[17:38] *** hizibiz joined
[17:40] *** freeside left
[17:43] *** freeside joined
[17:48] *** freeside left
[17:51] *** hythm joined
[18:00] *** reportable6 left
[18:00] *** reportable6 joined
[18:07] *** derpydoo joined
[18:11] <BarrOff> <moritz> "BarrOff: it basically builds a..." <- Is that the reason you can't have regular backreferences inside a regex? What I mean is there is nothing like `\1` but you can use a code block '{$1}' instead

[18:17] <moritz> yes; matching backrefs isn't part of regular languages, and this makes it kinda obvious

[18:18] <moritz> (though there are also non-regular features that are less obvious, like sequential alternation with ||, so maybe it's more about making common things easy and hard things possible)

[18:27] <BarrOff> moritz: thank you very much for making that clear.

[18:31] *** freeside joined
[18:32] *** tg57 joined
[18:36] *** freeside left
[18:56] <patrickb> o/

[18:56] <patrickb> guifa: May I ping you again wrt https://github.com/alabamenhu/DateTimeTimezones/pull/7

[19:17] *** kybr left
[19:19] *** linkable6 left
[19:20] *** linkable6 joined
[19:23] <tg57> Any suggestions on how to loop through a list of pairs and get both the key and value?

[19:24] <lizmat> for @pairs { .key, .value } ?

[19:25] <jdv> tg57: https://docs.raku.org/type/Pair ?  not sure wut u mean.

[19:27] <tg57> Ok thanks. Was just making sure there wasn't a better way that didn't use for loop. 

[19:28] <jdv> there are many "loopy" constructs.  depends on context and such.

[19:33] <jdv> maybe youre looking for hyper operator like stuff?

[19:55] <moritz> tg57: you could also use signature unpacking

[19:55] <moritz> m: for (:a, :b) ->  (:$key, :$value) { say "$key: $value" }

[19:55] <camelia> rakudo-moar c3b370110: OUTPUT: ¬´a: True‚ê§b: True‚ê§¬ª

[20:13] *** codesections left
[20:15] *** archenoth joined
[20:19] *** Oshawott left
[20:33] <rf> m: for (:a(123), :b(456)) -> (:$key, :$value) { say $key, $value }

[20:33] <camelia> rakudo-moar c3b370110: OUTPUT: ¬´a123‚ê§b456‚ê§¬ª

[20:39] <rf> m: my $x = do given([ 1, 2, 3]) { when ($a, $b, $c) { 'Worked?' } default { 'Not worked' } }; say $x;

[20:39] <camelia> rakudo-moar c3b370110: OUTPUT: ¬´===SORRY!===‚ê§The word 'given' is interpreted as a 'given()' function call.  Please‚ê§use whitespace instead of parentheses.‚ê§at <tmp>:1‚ê§------> my $x = do given‚èè([ 1, 2, 3]) { when ($a, $b, $c) { 'Work‚ê§Unexpected block in infix p‚Ä¶¬ª

[20:40] <rf> m: my $x = do given([ 1, 2, 3]) { when ($a, $b, $c) { 'Worked?' } default { 'Not worked' } }; say $x;

[20:40] <camelia> rakudo-moar c3b370110: OUTPUT: ¬´===SORRY!===‚ê§The word 'given' is interpreted as a 'given()' function call.  Please‚ê§use whitespace instead of parentheses.‚ê§at <tmp>:1‚ê§------> my $x = do given‚èè([ 1, 2, 3]) { when ($a, $b, $c) { 'Work‚ê§Unexpected block in infix p‚Ä¶¬ª

[20:40] <rf> m: my $x = do given([ 1, 2, 3]) { when ($a, $b, $c) { 'Worked?' }; default { 'Not worked' } }; say $x;

[20:40] <camelia> rakudo-moar c3b370110: OUTPUT: ¬´===SORRY!===‚ê§The word 'given' is interpreted as a 'given()' function call.  Please‚ê§use whitespace instead of parentheses.‚ê§at <tmp>:1‚ê§------> my $x = do given‚èè([ 1, 2, 3]) { when ($a, $b, $c) { 'Work‚ê§Unexpected block in infix p‚Ä¶¬ª

[20:40] <rf> m: my $x = do given ([ 1, 2, 3]) { when ($a, $b, $c) { 'Worked?' }; default { 'Not worked' } }; say $x;

[20:40] <camelia> rakudo-moar c3b370110: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Variable '$a' is not declared.  Perhaps you forgot a 'sub' if this was‚ê§intended to be part of a signature?‚ê§at <tmp>:1‚ê§------> my $x = do given ([ 1, 2, 3]) { when (‚èè$a, $b, $c) { 'Worked?'‚Ä¶¬ª

[20:40] <rf> Doesn't work :(

[20:45] <discord-raku-bot> <Nemokosch> m: my $x = do given ([ 1, 2, 3]) { when :($a, $b, $c) { 'Worked?' }; default { 'Not worked' } }; say $x;

[20:45] <discord-raku-bot> <Raku eval>  Worked? 

[20:53] <discord-raku-bot> <Nemokosch> m: my $x = do given ([ 1, 2 ]) { when :($a, $b, $c) { 'Worked?' }; default { 'Not worked' } }; say $x;

[20:53] <discord-raku-bot> <Raku eval>  Not worked 

[20:53] <discord-raku-bot> <Nemokosch> üòé

[20:54] <discord-raku-bot> <Nemokosch> (sub)signatures are indicated with the colon

[20:58] *** QhpAptyj9hj0RQwM joined
[21:09] <tbrowder> leont: i appreciate yr new Path::Finder but File::Find still suits me just fine, thanks!

[21:10] <tbrowder> don't need all that horsepower

[21:19] <discord-raku-bot> <Nemokosch> my concern is simply that File::Find is effectively unmaintained. If we even know better, that's just an extra reason to stay away from it

[21:21] *** hizibiz left
[21:21] *** hizibiz joined
[21:30] *** codesections joined
[21:30] *** codesections left
[21:31] *** codesections joined
[21:31] *** sena_kun left
[21:34] *** tg57 left
[21:37] *** hizibiz left
[21:53] *** derpydoo left
[22:00] *** frost left
[22:11] *** hythm left
[22:24] <tbrowder> well, it works fine for me

[22:25] <tbrowder> if it ever breaks, i file an issue

[22:26] <tbrowder> then see what happens

[22:27] *** El_Che left
[22:33] <guifa> patrickb: sorry, I did the approve but not the merge.

[22:44] <patrickb> guifa: Now it's merged. All good. Thanks!

[22:52] *** codesections left
[22:53] *** codesections joined
[22:55] *** codesections left
[22:55] *** codesections joined
[22:59] *** codesections left
[22:59] *** codesections joined
[23:00] <Geth> ¬¶ doc: finanalyst self-assigned Numbered lists (and its alias #) are not documented https://github.com/Raku/doc/issues/3053

[23:57] *** jgaz joined
