[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:48] *** Manifest0 left
[00:50] <rf> ugexe: I'm kind of having a nightmare installing dependencies with Zef on a slightly slow internet connection, I constantly get Fetching [FAIL]'s is there anyway to retry fetches?

[00:50] <rf> If I --force-fetch I get an error

[01:18] *** jgaz left
[01:18] *** sena_kun left
[01:19] <discord-raku-bot> <Anton Antonov> @guifa I usually do ($m - $m % $d, $m % $d)  . (Not very elegant, but quick enough.)

[01:19] <guifa> Anton: yeah, I guess I should have stated when I mean efficient I meant performant haha.

[01:20] <discord-raku-bot> <Anton Antonov> @cf Works with camels too  say 21.base("camel")  :  üê´üê™üê´üê™üê´ .

[01:21] <guifa> btw Anton, I released the Intl::Format::Number, currently handles percentages, permillages, and most all numbers

[01:21] <guifa> I'm working to add in support for significant figures and exponential numbers (the latter requires the former)

[01:22] <discord-raku-bot> <Anton Antonov> @guifa I noticed! (Liz mentioned it in the rakudoweekly.) I have hard installing those packages without errors on my computer. But once installed, they seem to work fine.

[01:23] <guifa> Anton: if you get any errors, definitely let me know.  Probably the issue was the requirement for Intl::CLDR:ver<0.4.2>, I had issues uploading that.  I submitted a PR for fez to fix the issue though so now it should be available

[01:24] <discord-raku-bot> <Anton Antonov> @guifa Ok, will do.

[01:24] <discord-raku-bot> <Anton Antonov> @guifa Mathematica has the functions QuotientReminder   ( https://reference.wolfram.com/language/ref/QuotientRemainder.html ) , so I thought (for some reason) that Raku would have a similar function.

[01:25] <cfa> i just tried installing Intl::Format::Number and got an error too

[01:25] <guifa> cfa: what's the error?

[01:25] <cfa> it's from the User::Language test; i think there's a missing dependency declaration

[01:25] * guifa sometimes has stray extra old modules laying around and it silently borks installs

[01:26] <cfa> Could not find Intl::LanguageTag:ver<0.12+>:auth<zef:guifa> in ...

[01:26] <cfa> hmm, but above that: ===> Testing [OK] for Intl::LanguageTag:ver<0.12.2>:auth<zef:guifa>

[01:26] <guifa> that's.....weird

[01:26] <cfa> anyway, the error is from UserLanguage/lib/User/Language.rakumod

[01:27] *** sena_kun joined
[01:27] <cfa> guifa: https://gist.github.com/cfa/b69d8d7a52beec176dff1643a24a2f57

[01:28] <guifa> huh, I wonder if the issue is that I need to have it be :ver<0.12.2+>

[01:28] <cfa> oh, do you need a test-depends?

[01:28] <discord-raku-bot> <Anton Antonov> Yes, same here -- errors while installing because " Intl::LanguageTag" cannot be found. (Just tried it.)

[01:29] <discord-raku-bot> <Anton Antonov> I see the same messages as @cfa .

[01:30] <cfa> hmm

[01:31] <cfa> this is odd

[01:32] <guifa> I wonder if during the install/testing it's somehow treating the dependency (left as 0.12.1+) is somehow being treated different from 0.12+, so when it's running things it doesn't realize that they're one and the same

[01:33] <guifa> let me try uploading to fez again

[01:35] <guifa> okay, I just sent a new copy to fez

[01:35] <guifa> set all the dependencies to 0.12.2+ for User::Language

[01:37] <cfa> https://github.com/alabamenhu/UserLanguage/blob/master/META6.json#L11

[01:37] <cfa> this reads auth:<zef:guifa>

[01:38] <cfa> rather than auth<zef:guifa>

[01:38] <guifa> wooooow

[01:38] <guifa> I knew it'd be a stupid typo somewhere

[01:38] <cfa> not sure whether that's the cause but seems a good candidate

[01:38] <guifa> I just uploaded a new new version with that typo fixed :-)

[01:48] <ugexe> rf: force fetch just continues to the next step if fetching fails, which almost always won‚Äôt work 

[01:48] <ugexe> I dunno why a slow connection would matter though

[01:49] <ugexe> maybe try ‚Äîfetch-timeout=6000 if it‚Äôs a timeout issue 

[01:49] <rf> I have satellite internet, for some reason on packages with a large number of deps (Cro stuff typically), it blows up with fetch errors and I have to try 50+ times until its installed

[01:51] <ugexe> Yeah but it‚Äôs just calling curl, which I imagine works fine manually 

[01:52] <ugexe> oh actually

[01:52] <rf> Yeah, not sure why its breaking.

[01:52] <ugexe> try --fetch-degree=1

[01:52] <ugexe> i forgot that defaults to 5

[01:53] <ugexe> if that works you can set an env var to change the default -- https://github.com/ugexe/zef/blob/5345b9183928184aea9cd9cf6d26a057039d5df9/lib/Zef/CLI.rakumod#L124

[01:53] <rf> I'll test it out thanks!

[02:01] <rf> Seems to have worked thanks a lot!

[02:01] <rf> What does fetch-degree do?

[02:01] <Voldenet> if you use satellite internet, consider vpn over tcp

[02:01] <Voldenet> it's laggy as hell, but reliable

[02:02] <rf> I use a VPN for work, but not personally. My internet isn't too bad just cuts out every 3-4 hours for a few seconds

[02:02] *** rf left
[02:04] *** rf joined
[02:16] <ugexe> :degree is how many downlads at once

[02:16] <ugexe> like: @things-to-download.hyper(:degree($this), :batch(1))

[02:17] <rf> Cool

[02:28] <cfa> guifa: well this is odd,

[02:28] <cfa> $ zef info User::Language

[02:28] <cfa> ===> Searching for: User::Language

[02:28] <cfa> - Info for: User::Language

[02:28] <cfa> - Identity: User::Language:ver<0.5.1>:auth<zef:guifa>:api<1>

[02:28] <cfa> - Recommended By: Zef::Repository::Ecosystems<fez>

[02:29] <cfa> - Installed: No

[02:29] <cfa> Description:	 A simple module for obtaining the user‚Äôs preferred language(s)

[02:29] <cfa> License:	 Artistic-2.0

[02:29] <cfa> Source-url:	 git://github.com/alabamenhu/UserLanguage.git

[02:29] <cfa> Provides: 5 modules

[02:29] <cfa> Depends: 0 items

[02:29] <cfa> zef thinks there are zero dependencies

[02:35] <guifa> I wonder if me reuploading didn't actually change anything and I actually need to version bump

[02:35] <cfa> yeah maybe

[02:35] <cfa> looks like i'm still getting the auth:<zef:guifa> dep

[02:36] <cfa> even after an update

[02:36] <guifa> Let me try that

[02:36] <guifa> one sec

[02:36] <cfa> sure

[02:37] <guifa> alright just uploaded it through fez, shows one dependency now

[02:38] <cfa> ack, i'm seeing deps now

[02:39] <cfa> huzzah, installed User::Language

[02:39] <cfa> now for Intl::Format::Number

[02:42] <cfa> all tests passed, installed without error \o/

[02:44] <Geth> ¬¶ doc/main: ef6037ec82 | thundergnat++ (committed using GitHub Web editor) | doc/Language/unicode.pod6

[02:44] <Geth> ¬¶ doc/main: Change supported Unicode version (#4210)

[02:44] <Geth> ¬¶ doc/main: 

[02:45] <Geth> ¬¶ doc/main: It's kind-of dependent on the VM it's running on though.

[02:45] <Geth> ¬¶ doc/main: review: https://github.com/Raku/doc/commit/ef6037ec82

[02:45] <Geth> ¬¶ doc/main: 6c4b51a78d | (Tom Browder)++ (committed using GitHub Web editor) | 3 files

[02:45] <Geth> ¬¶ doc/main: Replace the 'Opener graphemes' table with 'Brackets' (#4207)

[02:45] <Geth> ¬¶ doc/main: 

[02:45] <Geth> ¬¶ doc/main: * Replace the 'Opener graphemes' table with 'Brackets'

[02:45] <Geth> ¬¶ doc/main: 

[02:45] <Geth> ¬¶ doc/main: The original table was incomplete in that it

[02:45] <Geth> ¬¶ doc/main: didn't show the closing bracket for each opener.

[02:45] <Geth> ¬¶ doc/main: 

[02:45] <Geth> ¬¶ doc/main: <‚Ä¶commit message has 9 more lines‚Ä¶>

[02:45] <Geth> ¬¶ doc/main: review: https://github.com/Raku/doc/commit/6c4b51a78d

[02:50] <discord-raku-bot> <Anton Antonov> @guifa I can install "Intl::CLDR" without errors. I get errors trying to install  "Intl::Format::Number".  I get "Error while importing from 'experimental': no such tag 'rakuast'"

[02:50] <guifa> aaaah you need to update Rakudo then, as your version doesn't have rakuast support (I think that begins with 2022.12)

[02:50] * guifa will add more information to the readme

[02:51] <discord-raku-bot> <Anton Antonov> @guifa Well, my version is "moar-2022.12"...

[02:53] <guifa> If you're getting the message `no such tag rakuast` on experimental, then it's just an older version.  You maybe have one that's like a few days before the big merge happened

[02:53] <discord-raku-bot> <Anton Antonov> Ok, I will experiment with that some other time.

[03:04] *** evalable6 left
[03:06] *** evalable6 joined
[03:31] *** PipStuart left
[03:34] *** Sgeo left
[03:38] *** Sgeo joined
[03:44] *** razetime joined
[03:47] *** pingu joined
[03:56] *** razetime left
[03:57] *** cfa left
[03:59] <rf> Goodnight folks

[03:59] *** rf left
[04:13] *** bigdata joined
[04:40] *** razetime joined
[04:42] *** bigdata left
[04:57] *** jpn joined
[04:59] *** pingu left
[05:02] *** jpn left
[05:10] *** razetime1 joined
[05:11] *** razetime left
[05:11] *** razetime1 is now known as razetime

[05:49] *** razetime1 joined
[05:50] *** razetime left
[05:50] *** razetime1 is now known as razetime

[06:00] *** reportable6 left
[06:03] *** reportable6 joined
[06:33] *** freeside left
[07:09] *** freeside joined
[07:50] *** freeside left
[08:01] *** Sgeo left
[08:07] *** razetime left
[08:17] *** eseyman joined
[08:30] *** razetime joined
[09:02] *** Manifest0 joined
[09:20] *** razetime1 joined
[09:21] *** razetime left
[09:21] *** razetime1 is now known as razetime

[09:24] *** razetime1 joined
[09:25] *** razetime left
[09:25] *** razetime1 is now known as razetime

[09:29] *** razetime1 joined
[09:30] *** razetime left
[09:30] *** razetime1 is now known as razetime

[09:34] *** razetime1 joined
[09:34] *** razetime left
[09:34] *** razetime1 is now known as razetime

[09:38] *** razetime1 joined
[09:39] *** razetime left
[09:40] *** jpn joined
[09:41] *** razetime joined
[09:42] *** razetime1 left
[10:25] *** freeside joined
[10:30] *** freeside left
[10:39] *** sena_kun left
[11:03] *** jpn left
[11:05] *** freeside joined
[11:06] *** ab5tract joined
[11:07] *** jpn joined
[11:09] *** freeside left
[11:15] *** jpn left
[11:19] <El_Che> weekly: rakudo-pkg for 2023.02

[11:19] <notable6> El_Che, Noted! (weekly)

[11:20] *** jpn joined
[11:29] <lizmat> $ raku --version

[11:29] <lizmat> Welcome to Rakudo‚Ñ¢ v2023.02.

[11:30] <lizmat> whee!

[11:32] <El_Che> lizmat: had to ping cloudsmith to had new repo for new released distros :)

[11:32] <El_Che> every. single. time. :)

[11:33] <lizmat> El_Che++

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:05] *** perlbot left
[12:06] *** simcop2387 left
[12:12] *** simcop2387 joined
[12:14] *** perlbot joined
[12:21] <discord-raku-bot> <Anton Antonov> If I have a proto regex with multiple syms can I define an action method that is invoked (used, corresponds) to all syms of that regex?

[12:41] *** grondilu joined
[12:43] <discord-raku-bot> <Nemokosch> have you checked the docs? if anything must be written down, it's this

[12:44] <discord-raku-bot> <Anton Antonov> I did -- that particular question is not answered there.

[12:44] <discord-raku-bot> <Anton Antonov> At this point I simply assume the answer is "no."

[12:51] *** freeside joined
[12:56] *** freeside left
[13:01] *** freeside joined
[13:04] *** PipStuart joined
[13:06] *** freeside left
[13:08] *** freeside joined
[13:08] <discord-raku-bot> <Nemokosch> yep, looks like that

[13:11] *** jpn left
[13:12] *** freeside left
[13:19] <[Coke]> Anton - as someone who works on the docs, having a list of missing things will definitely help us fix things eventually - we have a small number of authors and basically zero editors; so we can probably get someone to write up a known missing thing but not review a document for what's missing

[13:20] <[Coke]> bot people, maybe an "ENODOC" chat function that threw a note somewhere for the docs people to track.

[13:21] <[Coke]> I would have expected, btw, that you can only have one proto with a given name.

[13:21] <[Coke]> Since I thought protos were also defining minimum required signatures, as well as function bodies.

[13:25] <discord-raku-bot> <Nemokosch> https://gist.github.com/2colours/0b6f4611360746f33ff82462ff79787e

[13:26] <discord-raku-bot> <Nemokosch> a simple extension of the doc example - the supposed proto method does nothing

[13:27] <[Coke]> ah. protos at the method level, do those work with the name:thing syntax? 

[13:27] <[Coke]> (as opposed to the proto in the rule, which does)

[13:28] *** freeside joined
[13:29] <discord-raku-bot> <Nemokosch> aaaand that's exactly the question

[13:29] <discord-raku-bot> <Nemokosch> the (modified) example didn't work, that much I can tell

[13:33] *** freeside left
[13:39] *** jpn joined
[13:48] *** jpn left
[13:55] <grondilu> Hello.  Can someone help me deciphering the following arabic sentence : 'u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F' ?  How would I decode that in raku?

[13:55] <tellable6> 2023-02-21T14:16:02Z #raku <melezhik> grondilu you can use Spa to upload modules via fez , here is an example code - https://raku.land/zef:melezhik/SparrowCI-SandBox

[13:58] <lizmat> s:g/+u/\\x/ ?

[13:58] <sourceable6> lizmat, No idea, boss. Can you give me a Code object? Output: https://gist.github.com/59d64d5dd82039369769da5e67e15d2f

[13:58] <lizmat>  s:g/+u/\\x/ ?

[13:58] *** jpn joined
[14:00] <grondilu> m: say "u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F".words.join.subst: 'u+', '\\x'

[14:00] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´\x0644u+064Au+0647u+0645u+0627u+0628u+062Au+0643u+0644u+0645u+0648u+0634u+0639u+0631u+0628u+064Au+061F‚ê§¬ª

[14:00] <grondilu> m: say "u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F".words.join.subst: 'u+', '\\x', :g

[14:00] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´\x0644\x064A\x0647\x0645\x0627\x0628\x062A\x0643\x0644\x0645\x0648\x0634\x0639\x0631\x0628\x064A\x061F‚ê§¬ª

[14:00] <grondilu> m: say "u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F".words.join.subst: 'u+', '\x', :g

[14:00] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´\x0644\x064A\x0647\x0645\x0627\x0628\x062A\x0643\x0644\x0645\x0648\x0634\x0639\x0631\x0628\x064A\x061F‚ê§¬ª

[14:01] <lizmat> m: say "\x0644\x064A\x0647\x0645\x0627\x0628\x062A\x0643\x0644\x0645\x0648\x0634\x0639\x0631\x0628\x064A\x061F:

[14:01] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3648\x0634\x0639\x0631\x0628\x064A\x061F:‚èè<EOL>‚ê§    expecting‚Ä¶¬ª

[14:01] <lizmat> m: say "\x0644\x064A\x0647\x0645\x0627\x0628\x062A\x0643\x0644\x0645\x0648\x0634\x0639\x0631\x0628\x064A\x061F"

[14:01] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´ŸÑŸäŸáŸÖÿßÿ®ÿ™ŸÉŸÑŸÖŸàÿ¥ÿπÿ±ÿ®Ÿäÿü‚ê§¬ª

[14:01] <grondilu> Nice. But how to do that without copy-pasting?

[14:01] <grondilu> if you see what I mean

[14:01] *** rf joined
[14:02] <lizmat> m: say "u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F".words.map(*.substr(2).chr).join

[14:02] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´Cannot convert string to number: trailing characters after number in '3064‚èèA' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:02] <lizmat> m: say "u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F".words.map(*.substr(2).Int.chr).join

[14:02] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´Cannot convert string to number: trailing characters after number in '3064‚èèA' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:02] <grondilu> m: say "u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F".words.join.subst('u+', '\x', :g).comb(..).map(*.parse-base(16))

[14:02] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Please use ..* for indefinite range‚ê§at <tmp>:1‚ê§------> words.join.subst('u+', '\x', :g).comb(..‚èè).map(*.parse-base(16))‚ê§¬ª

[14:03] <grondilu> m: say "u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F".words.join.subst('u+', '\x', :g).comb(/../).map(*.parse-base(16))

[14:03] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´Cannot convert string to number: malformed base-16 number in '‚èè\\x' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:03] <lizmat> m: say "u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F".words.map(*.substr(2).base(16).chr).join

[14:03] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´No such method 'base' for invocant of type 'Str'.  Did you mean any of‚ê§these: 'AST', 'Bag', 'Date', 'Hash', 'are', 'asec', 'hash', 'take'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:03] <rf> Morning folks

[14:03] <lizmat> m: say "u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F".words.map(*.substr(2).parse-base(16).chr).join

[14:03] <camelia> rakudo-moar 48c19e152: OUTPUT: ¬´ŸÑŸäŸáŸÖÿßÿ®ÿ™ŸÉŸÑŸÖŸàÿ¥ÿπÿ±ÿ®Ÿäÿü‚ê§¬ª

[14:03] <lizmat> whee

[14:04] <grondilu> thanks

[14:05] *** jpn left
[14:05] <discord-raku-bot> <Nemokosch> m: 'u+0644 u+064A u+0647 u+0645 u+0627 u+0628 u+062A u+0643 u+0644 u+0645 u+0648 u+0634 u+0639 u+0631 u+0628 u+064A u+061F'.comb(/ 'u+' <( . ** 4 )> /)>>.parse-base(16)>>.chr.join.say

[14:05] <discord-raku-bot> <Raku eval>  ŸÑŸäŸáŸÖÿßÿ®ÿ™ŸÉŸÑŸÖŸàÿ¥ÿπÿ±ÿ®Ÿäÿü 

[14:05] <discord-raku-bot> <Nemokosch> hmmm

[14:06] <discord-raku-bot> <Nemokosch> oh okay, the font is different

[14:06] <grondilu> I see them identical 

[14:06] <rf> Font is client side

[14:07] <discord-raku-bot> <Nemokosch> yes and no but anyway, it is the same

[14:08] <grondilu> I didn't know chr could be used beyond ASCII.

[14:09] <lizmat> yes... it basically should be called .grapheme I guess

[14:09] <lizmat> and .ord should be called .codepoint  :)

[14:12] *** sarna left
[14:12] *** razetime left
[14:17] *** sarna joined
[14:19] *** jpn joined
[14:22] <discord-raku-bot> <Anton Antonov> @Coke Thank you for your explanations!

[14:24] *** cfa joined
[14:24] <cfa> üëã

[14:25] <discord-raku-bot> <Anton Antonov> Thanks for making the example!

[14:25] *** derpydoo joined
[14:28] *** freeside joined
[14:29] <discord-raku-bot> <Nemokosch> ü§†

[14:29] *** jgaz joined
[14:30] <[Coke]> ... bitten by HOME vs. HOMEDIR - git bash gives me HOME, but of course he doesn't have that. :)

[14:32] <rf> Ooof

[14:32] <rf> Windows moment?

[14:32] <discord-raku-bot> <Anton Antonov> @rf Seems like "roof" moment to me.

[14:33] <rf> Lol.

[14:34] *** freeside left
[14:42] *** m6502 joined
[14:42] *** m6502 left
[14:44] *** jgaz left
[14:47] *** jgaz joined
[15:18] *** TieUpYourCamel joined
[15:56] *** Sgeo joined
[16:00] *** freeside joined
[16:04] *** freeside left
[16:40] *** freeside joined
[16:45] *** freeside left
[17:01] *** freeside joined
[17:02] *** ab5tract left
[17:06] *** freeside left
[18:00] *** reportable6 left
[18:03] *** reportable6 joined
[18:07] *** sena_kun joined
[18:09] *** jpn left
[18:21] *** jpn joined
[18:34] *** Altai-man joined
[18:38] *** sena_kun left
[18:50] <Geth> ¬¶ doc/main: 6e7b449a59 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/101-basics.pod6

[18:50] <Geth> ¬¶ doc/main: remove TM char for consistency (#4205)

[18:50] <Geth> ¬¶ doc/main: 

[18:51] <Geth> ¬¶ doc/main: This addresses issue #119 in doc-website

[18:51] <Geth> ¬¶ doc/main: review: https://github.com/Raku/doc/commit/6e7b449a59

[18:52] *** freeside joined
[18:53] *** derpydoo left
[18:56] *** freeside left
[19:17] <shmup> cfa: the only change i made in that script was removing some unnecessary flow control, but you have little reason to update :) you can if you want

[19:20] <shmup> https://github.com/shmup/irssi-scripts/blob/main/raku-discord-bot-renamer.pl

[19:28] <Geth> ¬¶ doc: coke assigned to finanalyst Issue Can't install raku/doc deps https://github.com/Raku/doc/issues/4211

[19:36] <Geth> ¬¶ doc/main: 7 commits pushed by (Will Coleda)++

[19:36] <Geth> ¬¶ doc/main: b55004a5dc | update to latest release

[19:36] <Geth> ¬¶ doc/main: bb6b24e583 | no vim line!

[19:36] <Geth> ¬¶ doc/main: 76edb7aa71 | whitespace

[19:36] <Geth> ¬¶ doc/main: 0b1ab4707b | Allow to be run from anywhere

[19:36] <Geth> ¬¶ doc/main: 40585a5670 | regen

[19:36] <Geth> ¬¶ doc/main: 87bd1e7652 | Remove trailing whitespace

[19:36] <Geth> ¬¶ doc/main: 249aab61c1 | new words from generated page

[19:36] <Geth> ¬¶ doc/main: review: https://github.com/Raku/doc/compare/6e7b449a590a...249aab61c175

[19:42] *** grondilu left
[19:44] *** codesections joined
[19:47] <cfa> shmup: okay, can try that -- thanks

[19:47] <cfa> do i unload then reload? (i still haven't set up the auto stuff)

[19:50] *** derpydoo joined
[19:50] <cfa> shmup: https://github.com/shmup/irssi-scripts/blob/main/raku-discord-bot-renamer.pl#L36

[20:07] *** codesections left
[20:13] <shmup> what's up cfa, unsure what you're asking with that line hehe

[20:13] <shmup> cfa when you replace the script, you could /unload script-name and /load script-name. i forget. i'd do that

[20:15] <cfa> shmup: the line ends with `$targe`

[20:15] <shmup> ahhhHHhhHHHH

[20:16] <shmup> okay pushed, bumped version. /script shows you what's loaded which can be nice to verify after you unload. i wish it showed the version though :)

[20:16] <shmup> thanks cfa i have no excuse for that besides nvr let me be in charge of code reviews ;)

[20:16] <cfa> ha ha

[20:19] <cfa> oh, https://github.com/shmup/irssi-scripts/blob/main/raku-discord-bot-renamer.pl#L30

[20:19] <cfa> i didn't spot that before

[20:19] *** freeside joined
[20:24] <shmup> what the hell happened

[20:25] <shmup> yeah i mean i see that i did that but i do not understand how. this is embarrassing haha

[20:25] <shmup> i force pushed.. not gonna keep making 1 commit per 1 dumb moment haha

[20:26] *** codesections joined
[20:26] *** codesections left
[20:26] *** freeside left
[20:27] <shmup> all of that happened in the last commit or so i guess. guess i'm gonna write a pre-commit hook ;)

[20:29] *** vrurg left
[20:29] *** codesections joined
[20:30] <shmup> cfa: lmk if you notice anything else!! :) 

[20:30] *** vrurg joined
[20:30] <Geth> ¬¶ doc: coke self-assigned Update links-not-links.t to not use pod-to-html https://github.com/Raku/doc/issues/4213

[20:41] *** jpn left
[20:46] <cfa> shmup: (re)loaded

[20:51] <cfa> hmm

[20:54] <cfa> zef is installing an older version (0.2.2) of GTK::Simple -- i believe because this is the most recent in the zef ecosystem, even though a newer version (0.2.4) was published by lizmat to the REA

[20:54] <cfa> will zef always prefer the most recent in its own ecosystem before considering REA?

[20:55] <cfa> zef is installing GTK::Simple:ver<0.2.2>:auth<zef:finanalyst>

[20:59] *** jpn joined
[21:02] <[Coke]> what's your command line to the installer?

[21:02] <[Coke]> if it's some other thing, you have to check if this is pinned at a specific version as a prereq to some other module

[21:03] *** freeside joined
[21:04] *** jpn left
[21:05] *** codesections left
[21:10] *** freeside left
[21:13] *** freeside joined
[21:16] *** bigdata joined
[21:16] *** jpn joined
[21:19] *** freeside left
[21:26] *** jpn left
[21:32] *** jpn joined
[21:52] *** derpydoo left
[21:56] *** jpn left
[22:00] <cfa> [Coke]: zef install GTK::Simple, zef look GTK::Simple, zef info GTK::Simple

[22:00] <cfa> (after zef update)

[22:01] <cfa> so, not a declared dependency -- a direct install

[22:01] <cfa> i'll try uninstalling then reinstalling shortly (i'm between meetings right now)

[22:01] <lizmat> fwiw, uploads to the REA are automated

[22:05] *** squashable6 left
[22:07] <cfa> can anyone here try: $ zef --update info GTK::Simple | grep Identity

[22:07] <cfa> and let me know what it reports?

[22:08] *** squashable6 joined
[22:09] <guifa> - Identity: GTK::Simple:ver<0.2.4>:auth<zef:finanalyst>

[22:10] <ugexe> yes, with the default config zef will prefer distributions in fez

[22:11] <ugexe> otherwise you could do `zef install GTK::Simple:ver<0.2.4>` and it'll have to look at REA to find it

[22:11] *** jpn joined
[22:12] <cfa> and if i uninstall GTK::Simple, would it install 0.2.2 again?

[22:12] <cfa> guifa's result suggests not

[22:12] <cfa> (uninstall, then reinstall that is)

[22:12] <ugexe> I see Identity: GTK::Simple:ver<0.2.2>:auth<zef:finanalyst>

[22:13] <ugexe> just do `zef install GTK::Simple:ver<0.2.4>`

[22:13] <ugexe> or `zef info "zef install GTK::Simple:ver<0.2.4>"` to see its info

[22:14] <ugexe> er, `zef info "GTK::Simple:ver<0.2.4>"`

[22:15] *** jpn left
[22:18] *** jpn joined
[22:23] *** jpn left
[22:24] *** Altai-man left
[22:35] *** jpn joined
[22:37] *** freeside joined
[22:39] <cfa> sure

[22:40] <cfa> but the installation of 0.2.2 instead of 0.2.4 when the version number wasn't supplied is what surprised me

[22:40] <cfa> (i'm unclear on whether the issue was local state in my repository or something else)

[22:41] *** freeside left
[22:42] <cfa> i think it's my repo

[22:43] <cfa> hmm

[22:44] *** jpn left
[22:44] <cfa> GTK::Simple is uninstalled but after an update, info is still reporting 0.2.2

[22:45] <ugexe> yes, that is correct

[22:45] <ugexe> that is the version on fez, and "...with the default config zef will prefer distributions in fez"

[22:45] <cfa> ah okay, i didn't realise that was confirmed -- thanks

[22:46] <cfa> and guifa is seeing 0.2.4 because that's been separately installed with a version number?

[22:46] <cfa> ugexe: sorry, i'd overlooked your reply 

[22:46] <ugexe> we won't know without the 'Recommended By:' line

[22:47] <ugexe> i imagine they already had fetched or installed it at some point

[22:49] <cfa> and an older version of zef might find and install 0.2.4 when invoked with `zef install GTK::Simple` because it wouldn't be checking fez (first), right?

[22:49] <ugexe> yeah, although it would have to be like a year or so old

[22:50] <cfa> yeah this is rakudo from debian with whatever version of zef that was

[22:52] <cfa> and ideally, GTK::Simple 0.2.4 should be deployed to fez

[22:53] *** jmcgnh left
[22:54] <ugexe> Oct 2021 is when it was changed

[22:55] <ugexe> v0.13.0

[22:55] <cfa> aha; on that debian box it's v0.9.4

[22:56] <cfa> and i've manually installed 0.2.4 on this box fwiw 

[22:56] *** jpn joined
[22:56] <ugexe> a zef that old is still good for one thing: installing a newer version of zef

[22:56] <cfa> :)

[22:58] *** jgaz left
[23:02] *** jpn left
[23:12] *** jmcgnh joined
[23:16] <rf> And just like that, another Humming-Bird version is released https://github.com/rawleyfowler/Humming-Bird/releases/tag/2.0.2

[23:22] *** jpn joined
[23:22] <rf> How would I run some code on module import time

[23:22] *** codesections joined
[23:26] <guifa> I forget exactly when the code gets run for modules declared with module Foo {¬†class foo is export {‚Ä¶}¬†}, but if you use sub EXPORT() I believe all the code in there runs for each import statement

[23:26] <rf> Cool, thanks!

[23:26] *** jpn left
[23:28] <rf> Nice that worked like a charm.

[23:30] <guifa> (that can definitely be a good thing or a gotcha, depending haha)

[23:32] <rf> I want to export a dynamic variable at import time is my goal

[23:33] <rf> Not sure if this is working as good as I thought it would...

[23:40] *** jpn joined
[23:47] <guifa> Ah I think I remember trying that, can't remember if I managed to pull it off

[23:49] *** jpn left
