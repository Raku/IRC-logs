[00:06] *** lichtkind left
[00:19] *** MoC left
[00:37] *** arkiuat left
[00:49] *** arkiuat joined
[01:04] *** zetaaaa left
[01:15] <disbot1> <aruniecrisps> here's the repo: https://github.com/arunvickram/DataStar/blob/main/lib/DataStar.rakumod

[01:15] <disbot1> <aruniecrisps> let me know what you guys think! i was playing around with it yesterday

[01:25] *** zetaaaa joined
[01:45] *** vrurg left
[01:57] *** zetaaaa left
[01:58] *** zetaaaa joined
[02:10] *** vrurg joined
[02:31] *** zetaaaa left
[03:13] *** ntv left
[03:13] *** apogee_ntv joined
[03:20] *** stanrifkin_ joined
[03:23] *** stanrifkin left
[03:36] *** derpydoo joined
[03:50] *** arkiuat left
[04:02] *** Aedil joined
[04:02] *** apac joined
[04:21] *** arkiuat joined
[04:24] *** Aedil_ joined
[04:24] *** Aedil left
[04:24] *** bolangi left
[04:24] *** human-blip left
[04:24] *** bolangi joined
[04:24] *** human-blip joined
[04:25] *** arkiuat left
[04:43] *** apac left
[04:54] *** arkiuat joined
[04:59] *** arkiuat left
[05:28] *** arkiuat joined
[05:37] *** arkiuat left
[06:04] *** derpydoo left
[06:04] *** arkiuat joined
[06:13] *** arkiuat left
[06:27] *** arkiuat joined
[06:36] *** arkiuat left
[06:39] *** kjp left
[06:41] *** kjp joined
[06:42] *** kjp left
[06:42] *** kjp joined
[06:48] *** arkiuat joined
[06:53] *** arkiuat left
[07:05] *** arkiuat joined
[07:10] *** arkiuat left
[07:33] *** arkiuat joined
[07:38] *** arkiuat left
[08:07] *** arkiuat joined
[08:16] *** arkiuat left
[08:34] *** arkiuat joined
[08:39] *** arkiuat left
[08:44] *** Sgeo__ left
[09:06] *** arkiuat joined
[09:11] *** arkiuat left
[09:35] *** arkiuat joined
[09:40] *** arkiuat left
[10:08] *** arkiuat joined
[10:13] *** Aedil_ left
[10:14] *** arkiuat left
[10:19] *** jmcgnh left
[10:21] *** jmcgnh joined
[10:36] *** arkiuat joined
[10:41] *** arkiuat left
[10:46] *** tejr left
[10:52] *** tejr joined
[10:59] *** arkiuat joined
[11:03] *** tejr left
[11:08] *** tejr joined
[11:22] *** arkiuat left
[11:26] *** lichtkind joined
[11:33] *** apac joined
[13:17] *** itaipu left
[13:33] *** itaipu joined
[13:41] *** apac left
[14:05] *** itaipu left
[14:20] *** itaipu joined
[14:52] <tbrowder> aruniecrisp: cool, it looks like you may have used Mi6::Helper.

[15:00] <tbrowder> but you didn't take advantage of writing your README in the ./docs/README.rakudoc file. I am most proud of that feature because (1) i don't like Markdown and (2) i love rakudoc. But be careful because if you run mi6 again you're likely to overwrite your existing README.md file.

[15:44] *** ds7832 joined
[15:51] *** itaipu left
[15:52] *** elcaro left
[15:52] *** sivoais left
[15:52] *** Voldenet left
[15:52] *** gabiruh_ left
[15:52] *** pierrot left
[15:52] *** maylay left
[15:57] *** itaipu joined
[15:57] *** elcaro joined
[15:57] *** sivoais joined
[15:57] *** Voldenet joined
[15:57] *** gabiruh_ joined
[15:57] *** pierrot joined
[15:57] *** maylay joined
[15:57] *** itaipu left
[16:01] *** itaipu joined
[16:14] *** jdv_ is now known as jdv

[16:40] *** human-blip left
[16:42] *** human-blip joined
[16:54] *** Aedil joined
[16:57] *** stanrifkin_ left
[17:12] *** Guest49 joined
[17:13] *** Guest49 left
[17:14] <disbot1> <.landyacht.> Does anyone know if Moar tries to free the thing pointed to by a class SomeCType is repr('CPointer') { } when a variable of type SomeCType gets GC'd, or does it just free the memory holding the address? I'm seeing a weird double free when interacting with libcrypto and I don't see any other obvious cause...

[17:17] *** Voldenet left
[17:19] *** Voldenet joined
[17:21] *** pierrot_ joined
[17:22] *** pierrot left
[17:27] *** Ekho left
[17:36] *** librasteve_ joined
[17:42] *** Ekho joined
[17:44] <disbot1> <librasteve> @arun hey!

[17:45] <disbot1> <librasteve> on RIP (Raku Intellij Plugin) - I get those all the time and just x them out (not zef, pacjage not installed) _ I think that RIP tries to hook the zef installation of the SDK and to auto manage packages in some complicated way ... suggest you raise an issue over on the RIP repo...

[17:50] <disbot1> <librasteve> on DataStar - lol - first and foremost I am very impressed with the module *and the name DataStar works for me also - second afaict, data-star is a competitor to HTMX ... for reasons of practicality my "reactive" raku web application - the Air module - currently leans into HTMX and thus away from data-star)  ... oh well, let many flowers bloom

[18:53] *** cryosis joined
[19:02] *** Sgeo joined
[19:15] *** sivoais left
[19:15] *** maylay left
[19:15] *** elcaro left
[19:16] *** sivoais joined
[19:17] *** elcaro joined
[19:19] *** maylay joined
[19:52] *** apac joined
[19:55] *** oodani left
[19:55] *** oodani joined
[19:57] *** Aedil left
[20:10] <disbot1> <aruniecrisps> @tbrowder_04810 I did indeed! I will be sure to write it in the rakudoc format. It's fine if i overwrite it I feel

[20:11] <disbot1> <aruniecrisps> @librasteve I'll pull up an issue on RIP, although I have been trying to get a LSP going, but that stuff is too big-brained for me I feel considering the complexity of the Raku language and the fact that I'm still constantly learning it.

[20:12] <disbot1> <aruniecrisps> And yea, I wanted to have something on the board for DataStar as well because I figured that HTMX isn't the only solution in town, and I think having some helper functions for DataStar would also be useful

[20:13] <disbot1> <librasteve> nice - please do share in the DataStar community ... along with the power of raku in the web back end

[20:13] <disbot1> <librasteve> (& cro & Cromponent)

[20:15] *** silug joined
[20:28] <disbot1> <aruniecrisps> will do!

[20:37] *** pierrot_ left
[20:37] <disbot1> <aruniecrisps> interesting

[20:37] <disbot1> <aruniecrisps> it doesn't seem to be indexing

[20:37] *** pierrot joined
[20:39] <disbot1> <aruniecrisps> yea it looks like DataStar isn't showing up on raku.land for me

[20:40] *** zuphinx joined
[21:02] *** jast joined
[21:07] <disbot1> <aruniecrisps>  $ fez list >>= DataStar:ver<0.0.1>:auth<zef:arunvickram> >>= Moneys:ver<0.0.1>:auth<zef:arunvickram> >>= Moneys:ver<0.0.2>:auth<zef:arunvickram> >>= Moneys:ver<0.0.3>:auth<zef:arunvickram> >>= Moneys:ver<0.0.4>:auth<zef:arunvickram> 

[21:42] <disbot1> <aruniecrisps> weird, i've also tried removing the package and i'm also getting an error:  $ fez remove 'DataStar:ver<0.0.1>:auth<zef:arunvickram>' =<< FATAL: Couldn't find DataStar:ver<0.0.1>:auth<zef:arunvickram> 

[21:48] *** zuphinx left
[21:56] <disbot1> <.landyacht.> hm, actually it seems like it's just explicitly-manage not preventing GC like it should?

[21:57] <disbot1> <.landyacht.> that or libcrypto is buggy

[21:57] <disbot1> <aruniecrisps> i don't understand, do you think you could give me more context?

[21:58] *** apac left
[21:59] <disbot1> <.landyacht.> Yeah, I'm trying to interact with libcrypto's API for public-key cryptography, using RSA-OAEP, and it seems like calling EVP_PKEY_CTX_set0_rsa_oaep_label more than once causes a double free

[22:00] <disbot1> <.landyacht.> the docs state that libcrypto takes possession of the label passed in, so I use explicitly-manage from NativeCall to pass in the label string https://docs.openssl.org/3.0/man3/EVP_PKEY_CTX_ctrl/#synopsis

[22:01] <disbot1> <.landyacht.> but upon trying to change the label when it's been set before, the program crashes with a double free error

[22:01] <disbot1> <.landyacht.> explicitly-manage should mean Moar won't GC the string itself, so I'm wondering if libcrypto is buggy, but that seems unlikely

[22:12] *** oodani left
[22:14] *** oodani joined
[22:17] <disbot1> <aruniecrisps> ah is that why for some reason the dist isn't being indexed online?

[22:24] <disbot1> <.landyacht.> oh sorry, I was rambling on about my own problem - not related to DataStar

[22:29] <disbot1> <aruniecrisps> oh i gotchu no worries üôÇ

[22:29] <disbot1> <aruniecrisps> i am in a bit of a pickle unfortunately, i may need some help regarding this

[22:32] <disbot1> <.landyacht.> also I did just put together a test in plain C calling the same sequence of routines from libcrypto, and I did not get any double free errors until trying to free the label data myself (as expected), though interestingly if you clear the label (pass in NULL for the label) it doesn't ever free the old one...

[22:33] <disbot1> <.landyacht.> I'm not too well-versed in fez myself unfortunately, hopefully others can help

[22:36] *** librasteve_ left
[23:19] *** Guest14 joined
[23:24] *** vrurg_ joined
[23:25] *** vrurg left
[23:26] <Voldenet> landyacht: but can you even change the string after doing `explicitly-manage`?

[23:29] <Voldenet> I think it mixes in the role, so you can't do `my $x = "test"; $x = explicitly-manage($x); thing($x); $x = "whatever"‚Ä¶` but instead you have to do `thing(explicitly-manage($x))` to "unown" strings

[23:37] <Guest14> Can anyone give proof of a glitch in the Raku Manual? There is given the regex <[A..Z>]> as an example. Seems to me the first closing pointed bracket after the 'Z' is obsolet and not intended in the context of that example there. https://docs.raku.org/language/regexes#$/_changes_each_time_a_regular_expression_is_matched

[23:44] <Voldenet> I've tested my assumptions and this doesn't work for me

[23:44] <Voldenet> m: use NativeCall; sub free(Str) is native { * }; my $n = "huh"; free explicitly-manage $n;

[23:45] <Voldenet> snippet doesn't work, but I get double free

[23:45] <camelia> rakudo-moar 89765fe8b: OUTPUT: ¬´(signal ABRT)free(): double free detected in tcache 2‚ê§¬ª

[23:46] <Voldenet> yes, there it is

[23:49] <Voldenet> BUT

[23:50] <Voldenet> m: use NativeCall; sub free(Str) is native { * }; my $n = "huh"; explicitly-manage $n; free $n

[23:50] <camelia> rakudo-moar 89765fe8b: ( no output )

