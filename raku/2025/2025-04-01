[00:05] *** maylay left
[00:07] *** maylay joined
[00:27] *** Aedil joined
[01:34] *** hulk joined
[01:34] *** kylese left
[02:15] *** hulk left
[02:15] *** kylese joined
[02:48] *** yewscion joined
[02:58] *** yewscion left
[03:14] *** yewscion joined
[03:19] *** yewscion left
[04:09] *** yewscion joined
[04:16] *** yewscion left
[04:17] *** kjp left
[04:18] *** kjp joined
[04:24] *** kjp left
[04:24] *** kjp joined
[04:30] *** kylese left
[04:33] *** kylese joined
[05:30] *** kylese left
[05:32] *** kylese joined
[06:12] *** yewscion joined
[06:17] *** derpydoo joined
[06:18] *** yewscion left
[06:21] *** derpydoo left
[06:22] *** derpydoo joined
[06:39] *** dano left
[07:16] *** dano joined
[07:49] *** Sgeo left
[08:05] *** yewscion joined
[08:10] *** dakkar joined
[08:15] *** yewscion left
[08:34] *** apac joined
[08:56] *** sena_kun joined
[08:59] <discord-raku-bot> <melezhik.> antononcube: thanks . You will need to follow all my answers  where I have Raku/Sparrow  and talk about parsing ( alternative solution to sed / perl / bash and friends ), except the last ( old ) one where I talk about Python scripts deployments it’s irrelevant

[09:01] <discord-raku-bot> <melezhik.> Yesterday I had a good session with some rockylinux team guy where he successfully launched qemu instance and run some test scenarios on it using Sparky, very good experience

[09:06] <grondilu> Saw 1 occurrence of deprecated code.

[09:06] <grondilu> ================================================================================

[09:06] <grondilu> Method Str (from Distribution::Resource) seen at: SETTING::src/core.c/Mu.rakumod, line 831

[09:06] <grondilu> Please use %?RESOURCES<key> directly instead.

[09:06] <grondilu> --------------------------------------------------------------------------------

[09:06] <grondilu> Please contact the author to have these occurrences of deprecated code

[09:06] <lizmat> heh

[09:07] <grondilu> weird, right?

[09:07] <lizmat> ulti method Stringy(Mu:D $:) { self.Str }

[09:07] <lizmat> m

[09:08] <lizmat> guess the problem is where .Stringy is being called

[09:09] <grondilu> BTW I think this was when trying to interpolate %?RESOURCES<images/checkerboard.pgn> in a string.

[09:10] <grondilu> https://github.com/grondilu/chess/blob/fe4b00d1bb7dae701a09e8ce5e17c59ae59d4e6e/lib/Chess.rakumod#L897

[09:11] <lizmat> and what do you want to do with that string ?

[09:12] <grondilu> no my bad, that's not the interpolation the problem.

[09:12] <grondilu> Initially I wanted the absolude path name but when using .absolute I was getting a warning about deprecated code.

[09:14] <grondilu> Saw 1 occurrence of deprecated code.

[09:14] <grondilu> ================================================================================

[09:14] <grondilu> Method absolute (from Distribution::Resource) seen at: /var/home/grondilu/.local/src/chess/lib/Chess/Graphics.rakumod (Chess::Graphics), lines 5,8

[09:14] <grondilu> Please use %?RESOURCES<key> directly instead.

[09:14] <grondilu> --------------------------------------------------------------------------------

[09:14] <grondilu> Please contact the author to have these occurrences of deprecated code

[09:14] <grondilu> adapted, so that this message will disappear!

[09:15] <lizmat> does it say that if you do: %?RESOURCES<images/foo.jpg>.absolute; ??

[09:15] <grondilu> yes

[09:16] <grondilu> and if I don't I get the former message

[09:16] <lizmat> then we at least have a doc issue, as that is what https://docs.raku.org/language/variables#%?RESOURCES describes

[09:16] <grondilu> indeed

[09:26] *** jpn joined
[09:26] <lizmat> the important bit of that doc though:

[09:26] <lizmat> Note that paths and names of resource files can be mangled in an installed distribution, so do not rely on their values in any other case besides using them as keys for the %?RESOURCES variable.

[09:27] <lizmat> in App::Rak I use %?RESOURCES with either .slurp(:close) or .lines

[09:28] <lizmat> but I guess you need to refer to the actual path to be able to show the images, right ?

[09:28] <lizmat> perhaps ugexe has thoughts about this

[09:29] <grondilu> yes I wanted the path to use the file in a shell script (using imageMagick commands)

[09:30] <grondilu> before that I was slurping the file, base64 encode it, and decode it in the script. That was quite convoluted.

[09:36] <grondilu> and by shell script I mean qx{}, to be clear.

[09:40] <lizmat> I have no other recommendation than ignoring the warning about .absolute for now

[09:41] <grondilu> got it

[09:55] *** jpn left
[09:55] *** jpn_ joined
[10:04] *** xkr47 left
[10:07] * lizmat clickbaits https://rakudoweekly.blog/2025/03/31/2025-13-a-component-journey/

[10:11] *** xkr47 joined
[10:25] *** maylay left
[10:28] *** maylay joined
[10:41] *** jpn_ left
[10:49] *** jpn joined
[11:08] *** JimmyZhuo joined
[11:14] <grondilu> m: say q{"foo bar"} ~~ /\" ~ \" <print>*/

[11:14] <camelia> rakudo-moar a3841c261: OUTPUT: «｢"foo bar"｣␤ print => ｢f｣␤ print => ｢o｣␤ print => ｢o｣␤ print => ｢ ｣␤ print => ｢b｣␤ print => ｢a｣␤ print => ｢r｣␤»

[11:14] <grondilu> m: say grammar { token TOP { \" ~ \" <print>* } }.parse: q{"foo bar"}

[11:14] <camelia> rakudo-moar a3841c261: OUTPUT: «Nil␤»

[11:14] <grondilu> ^what am I missing here?

[11:14] <grondilu> m: say q{"foo bar"} ~~ /\" ~ \" <.print>*/

[11:14] <camelia> rakudo-moar a3841c261: OUTPUT: «｢"foo bar"｣␤»

[11:15] <grondilu> m: say grammar { token TOP { \" ~ \" <.print>* } }.parse: q{"foo bar"}

[11:15] <camelia> rakudo-moar a3841c261: OUTPUT: «Nil␤»

[11:15] <grondilu> m: say grammar { token TOP { \" <.print>* \" } }.parse: q{"foo bar"}

[11:15] <camelia> rakudo-moar a3841c261: OUTPUT: «Nil␤»

[11:16] <grondilu> m: say grammar A { token TOP { \" <.print>* \" } }; say q{"foo bar"} ~~ /<A::TOP>/

[11:16] <camelia> rakudo-moar a3841c261: OUTPUT: «(A)␤Nil␤»

[11:16] <grondilu> m: say grammar { regex TOP { \" <.print>* \" } }.parse: q{"foo bar"}

[11:16] <camelia> rakudo-moar a3841c261: OUTPUT: «｢"foo bar"｣␤»

[11:16] <discord-raku-bot> <antononcube> @melezhik. I put a blog-post generation workflow in a notebook and a couple of generation results. See: https://github.com/antononcube/RakuForPrediction-blog/blob/main/Notebooks/Jupyter/Blog-post-generation.ipynb

[11:20] <grondilu> I think I get it.  the token version takes the ending \" in <print>, but does not backtrack once it doesn't see anymore \" at the end.

[11:20] <grondilu> m: say grammar { token TOP { \" <.print>*? \" } }.parse: q{"foo bar"}

[11:20] <camelia> rakudo-moar a3841c261: OUTPUT: «｢"foo bar"｣␤»

[11:20] <grondilu> m: say grammar { token TOP { \" ~ \" <.print>*? } }.parse: q{"foo bar"}

[11:20] <camelia> rakudo-moar a3841c261: OUTPUT: «｢"foo bar"｣␤»

[11:32] *** yewscion joined
[11:37] *** yewscion left
[11:58] *** derpydoo left
[12:16] *** jpn left
[12:17] *** melezhik joined
[12:17] <melezhik> .

[12:19] <melezhik> antononcube: thanks ! interesting though in general results look correct, however all three LLMS have failed to pasre Sparrow Task Check DSL synstax, which is probably ok, as it ( yet )) not well known at all

[12:21] *** jpn joined
[12:24] <discord-raku-bot> <antononcube> Sure, those generations have to be proofread. But, you have a blog post written at least 75%.

[12:26] *** jpn left
[12:34] <ugexe> The deprecation message is legit please look at the commit message or PR explanation 

[12:35] <ugexe> if you need the original file names then do not use resources 

[12:36] <ugexe> Copy the files at build time to a know location or some such 

[12:39] <melezhik> antononcube: sure

[12:51] *** jpn joined
[12:57] *** jpn left
[13:02] *** melezhik left
[13:02] *** melezhik joined
[13:09] *** maylay left
[13:11] *** melezhik left
[13:12] *** maylay joined
[13:19] *** yewscion joined
[13:21] *** jpn joined
[13:22] *** yewscion left
[13:28] *** jpn left
[13:34] *** JimmyZhuo left
[13:35] *** yewscion joined
[13:42] *** phogg left
[13:51] *** jpn joined
[13:53] *** phogg joined
[13:56] *** sena_kun left
[13:56] *** sena_kun joined
[14:00] *** maylay left
[14:01] *** maylay joined
[14:16] *** sena_kun left
[14:17] *** sena_kun joined
[14:18] *** Geth left
[14:18] *** Geth joined
[14:18] *** maylay left
[14:21] *** maylay joined
[14:23] *** sena_kun left
[14:24] *** sena_kun joined
[14:27] *** maylay left
[14:36] *** apac left
[14:37] <grondilu> ugexe: so basically I should not expect any of the files that I declare in resources to be actually present in the filesystem after installation of the module.  They are only available as things I can slurp or as an IO::Handle.  Right?

[14:37] <grondilu> I suppose that makes using them inside a shell quoting tricky.

[14:39] <grondilu> I'll probably have to revert to base64 encode/decode in process substitions.

[14:41] *** maylay joined
[14:41] *** maylay left
[14:44] <grondilu> instead of qqx{some-shell-command {%?RESOURCES<resource-name>.absolute}}  I have to do qqx{some-shell-command <(basenc -d --base64 <<<{use Base64; print encode-base64(%?RESOURCES<resource-name>.slurp).join})}

[14:45] *** yewscion left
[14:49] *** maylay joined
[14:49] *** maylay left
[14:53] *** human_blip left
[14:54] *** human_blip joined
[14:58] *** maylay joined
[14:58] *** maylay left
[15:01] *** jpn left
[15:06] *** maylay joined
[15:17] *** maylay left
[15:22] *** maylay joined
[15:22] *** maylay left
[15:23] *** apac joined
[15:27] *** yewscion joined
[15:31] <discord-raku-bot> <librasteve> there is something wrong with this subset Inner where Str is export; but I cannot work out how to fix it (works fine with subset Attr of Str is export;) please can someone diagnose?

[15:31] <discord-raku-bot> <librasteve>  Two terms in a row at /Users/.../Air/site#sources/CB0FAAA02D002ECCE7CF2AC692253B93C992C781 (Air::Functional):112 ------> subset Inner where Str<HERE> is export;     expecting any of:         infix         infix stopper         postfix         statement end         statement modifier         statement modifier loop 

[15:31] *** yewscion left
[15:40] *** maylay joined
[15:40] *** apac left
[15:41] *** yewscion joined
[15:41] *** maylay left
[15:50] *** maylay joined
[15:50] *** maylay left
[15:51] *** jpn joined
[15:51] *** stanrifkin joined
[16:00] *** jpn left
[16:04] *** maylay joined
[16:42] *** dakkar left
[17:01] *** maylay left
[17:03] *** maylay joined
[17:22] <ugexe> grondilu: they do exist on the file system but you aren't supposed to assume they are

[17:23] <ugexe> things like CompUnit::Repository::Github could return data from a socket when %?RESOURCES<foo> is called for instance

[17:24] <grondilu> noted

[17:38] *** apac joined
[17:41] <grondilu> I'm still struggling to make it work.  It works fine when I run the code from the repo directory with -Ilib, but after install I get "Use of uninitialized value element of type Any in string context.".  Basically not getting anything from %?RESOURCES, apparently.

[17:42] <grondilu> https://github.com/grondilu/chess/blob/2ebdc722e8ac6a8eb88dbc5234d505d057a124cf/lib/Chess.rakumod#L901

[17:42] <ugexe> you'd see the same issue with -I. presumably

[17:43] <ugexe> did you populate the resources section of meta6.json?

[17:44] <ugexe> i dont see images/checkerboard.png for instance

[17:53] <grondilu> oh

[17:54] <grondilu> indeed I had forgotten about the checkerboard

[17:54] <grondilu> regarding -I, I'm a bit confused.  Should I use -I. or -Ilib?

[17:55] <ugexe> -I. is going to use the meta data as an authority

[17:55] <ugexe> -Ilib is as if the META6.json doesn't exist so it infers things like the provides or resources section by what is on the file system

[17:55] <grondilu> I see

[17:55] <ugexe> since installed modules use what is in META6.json you generally want to use -I. once a META6.json has been created for your project

[17:56] <grondilu> it works now, thanks!

[18:10] * grondilu is trying to upload Chess with fez

[18:11] <grondilu> fez complains about files in ./resources that are not in meta.  These files are part of a submodule for which I need only a few files.  I guess I should put the submodule somewhere else and use links to the files I need?

[18:13] *** apac left
[18:26] <ugexe> well it doesn't make sense to distribute them as part of your distribution if they aren't used by it does it?

[18:26] <ugexe> arguably fez could allow ignoring certain files so it doesn't put them into the tar file

[18:28] * grondilu moved the submodule somewhere else and created links to relevant files

[18:32] <grondilu> ok now fez complains about the old files not in the meta, and mentions the new files (the links) are in the meta but are not expected.

[18:32] <grondilu> what are its expectations based on?

[18:37] *** apac joined
[18:40] <grondilu> I mean they are in the meta and they are in ./resources.  What's the problem?

[18:49] <grondilu> ok apparently fez did not like symbolic links.  I made hard links and now the upload worked fine.

[18:51] <grondilu> now on rakuland I have a note about the author names not matching.  zef:grondilu vs github:grondilu.    

[18:59] *** derpydoo joined
[19:16] * grondilu tries to rename `auth` to `github:grondilu` in META6

[19:22] *** DarthGandalf is now known as [LLM]DarthGandal

[19:28] *** Aedil left
[19:32] *** yewscion left
[19:39] <ugexe> it has to be zef:* to be uploaded to zef

[19:39] <ugexe> so you shouldn't change it

[19:41] <ugexe> raku.land may take some time before it has e.g. https://raku.land/zef:grondilu/Chess available

[19:41] <ugexe> if not then something is wrong with raku.land

[19:41] <[Coke]> I think there is a delay, for sure

[19:48] *** melezhik joined
[19:49] <melezhik> so I have 11 correct and tested recipes of replacing sed/awk/perl with Raku and Sparrow, please vote if you like them - https://stackoverflow.com/search?q=Raku%2FSparrow

[19:56] *** stanrifkin left
[20:08] *** melezhik left
[20:28] <discord-raku-bot> <antononcube> @melezhik I might write a blog post about generating blog posts from StackExchange / StackOverflow.

[20:45] *** Sgeo joined
[20:49] *** yewscion joined
[20:52] *** kst left
[21:02] *** kst joined
[21:07] *** derpydoo left
[21:40] *** maylay left
[21:43] *** maylay joined
[21:53] *** human_blip left
[21:58] *** [LLM]DarthGandal is now known as DarthGandalf

[21:59] *** sena_kun left
[22:19] *** yewscion left
[22:59] *** yewscion joined
[23:05] *** yewscion left
