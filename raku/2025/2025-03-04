[00:01] *** hudo_ joined
[00:03] *** LainExperiments left
[00:03] *** hudo left
[00:04] *** wbooze joined
[00:05] *** Sgeo joined
[00:10] *** wbooze left
[00:13] *** LainExperiments joined
[00:28] *** kjp left
[00:28] *** kjp_ joined
[00:30] *** kjp_ left
[00:31] *** kjp joined
[01:40] *** LainExperiments9 joined
[01:41] *** LainExperiments left
[01:48] *** Voldenet left
[01:56] *** Voldenet joined
[02:35] *** Aedil joined
[02:46] *** hulk joined
[02:47] *** kylese left
[03:08] *** yewscion joined
[03:12] *** yewscion left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:28] *** LainExperiments9 left
[04:44] *** yewscion joined
[04:49] *** yewscion left
[05:09] *** discord-raku-bot left
[05:10] *** discord-raku-bot joined
[05:33] *** yewscion joined
[05:51] *** yewscion left
[06:16] *** tjr left
[06:16] *** tjr joined
[06:19] *** Aedil left
[06:29] *** yewscion__ left
[06:29] *** Geth left
[06:29] *** jetchisel left
[06:29] *** rba left
[06:29] *** elcaro left
[06:29] *** thowe left
[06:29] *** lucs left
[06:29] *** charsbar left
[06:29] *** Voldenet left
[06:29] *** bdju left
[06:29] *** dmvrtx left
[06:29] *** BooK left
[06:29] *** Guest7021 left
[06:29] *** snonux left
[06:29] *** dpk left
[06:29] *** SmokeMachine left
[06:29] *** perryprog left
[06:29] *** Tirifto_ left
[06:29] *** maylay left
[06:29] *** thaewrapt left
[06:29] *** grondilu left
[06:29] *** leah2 left
[06:29] *** skaji__ left
[06:29] *** tobs left
[06:29] *** greenfork left
[06:29] *** jmcgnh left
[06:29] *** ab5tract left
[06:29] *** avar left
[06:29] *** mst left
[06:29] *** bd3i left
[06:29] *** tjr left
[06:29] *** kjp left
[06:29] *** sjn left
[06:29] *** bloatable6 left
[06:29] *** greppable6 left
[06:29] *** kst left
[06:29] *** simcop2387 left
[06:29] *** sorenson left
[06:29] *** bisectable6 left
[06:29] *** perlbot left
[06:29] *** sourceable6 left
[06:29] *** benchable6 left
[06:29] *** shareable6 left
[06:29] *** quotable6 left
[06:29] *** dano left
[06:29] *** constxd left
[06:29] *** broquaint left
[06:29] *** tadzik left
[06:29] *** gugod left
[06:29] *** slu left
[06:29] *** tejr left
[06:29] *** sftp left
[06:29] *** Sevalecan left
[06:29] *** mtj left
[06:29] *** camelia left
[06:29] *** sivoais left
[06:29] *** zostay left
[06:29] *** leedo left
[06:29] *** Altreus left
[06:29] *** merp left
[06:29] *** thatonelutenist left
[06:29] *** tellable6 left
[06:29] *** unicodable6 left
[06:29] *** releasable6 left
[06:29] *** linkable6 left
[06:29] *** committable6 left
[06:29] *** eof left
[06:29] *** BinGOs left
[06:29] *** timo left
[06:29] *** tinita left
[06:29] *** kylese left
[06:29] *** Sgeo left
[06:29] *** coleman left
[06:29] *** synthmeat left
[06:29] *** jaguart left
[06:29] *** xelxebar left
[06:29] *** inspork left
[06:29] *** destroycomputers left
[06:29] *** ingy left
[06:29] *** JRaspass left
[06:29] *** tjr joined
[06:29] *** kylese joined
[06:29] *** Voldenet joined
[06:29] *** kjp joined
[06:29] *** Sgeo joined
[06:29] *** tejr joined
[06:29] *** sjn joined
[06:29] *** coleman joined
[06:29] *** Tirifto_ joined
[06:29] *** charsbar joined
[06:29] *** lucs joined
[06:29] *** thowe joined
[06:29] *** elcaro joined
[06:29] *** rba joined
[06:29] *** jetchisel joined
[06:29] *** Geth joined
[06:29] *** yewscion__ joined
[06:29] *** tobs joined
[06:29] *** skaji__ joined
[06:29] *** leah2 joined
[06:29] *** grondilu joined
[06:29] *** thaewrapt joined
[06:29] *** maylay joined
[06:29] *** bd3i joined
[06:29] *** mst joined
[06:29] *** avar joined
[06:29] *** ab5tract joined
[06:29] *** jmcgnh joined
[06:29] *** greenfork joined
[06:29] *** perryprog joined
[06:29] *** SmokeMachine joined
[06:29] *** dpk joined
[06:29] *** snonux joined
[06:29] *** Guest7021 joined
[06:29] *** BooK joined
[06:29] *** dmvrtx joined
[06:29] *** bdju joined
[06:29] *** tadzik joined
[06:29] *** broquaint joined
[06:29] *** constxd joined
[06:29] *** dano joined
[06:29] *** quotable6 joined
[06:29] *** shareable6 joined
[06:29] *** benchable6 joined
[06:29] *** sourceable6 joined
[06:29] *** perlbot joined
[06:29] *** bisectable6 joined
[06:29] *** sorenson joined
[06:29] *** simcop2387 joined
[06:29] *** kst joined
[06:29] *** bloatable6 joined
[06:29] *** greppable6 joined
[06:29] *** merp joined
[06:29] *** sftp joined
[06:29] *** Sevalecan joined
[06:29] *** synthmeat joined
[06:29] *** mtj joined
[06:29] *** jaguart joined
[06:29] *** thatonelutenist joined
[06:29] *** camelia joined
[06:29] *** sivoais joined
[06:29] *** zostay joined
[06:29] *** leedo joined
[06:29] *** tellable6 joined
[06:29] *** unicodable6 joined
[06:29] *** releasable6 joined
[06:29] *** linkable6 joined
[06:29] *** committable6 joined
[06:29] *** Altreus joined
[06:29] *** eof joined
[06:29] *** BinGOs joined
[06:29] *** xelxebar joined
[06:29] *** slu joined
[06:29] *** gugod joined
[06:29] *** timo joined
[06:29] *** inspork joined
[06:29] *** tinita joined
[06:29] *** destroycomputers joined
[06:29] *** JRaspass joined
[06:29] *** ingy joined
[06:30] *** MyNetAz left
[06:30] *** hudo_ left
[06:30] *** hudo__ joined
[06:30] *** apac left
[06:30] *** ACfromTX left
[06:30] *** DarthGandalf left
[06:30] *** Ekho left
[06:30] *** gfldex left
[06:30] *** nicole left
[06:30] *** avuserow left
[06:30] *** samebchase left
[06:30] *** corwin left
[06:30] *** jast left
[06:30] *** jjatria left
[06:30] *** ugexe left
[06:31] *** constxd left
[06:31] *** tjr left
[06:31] *** greenfork left
[06:31] *** Aedil joined
[06:32] *** tjr joined
[06:33] *** constxd joined
[06:33] *** apac joined
[06:33] *** ACfromTX joined
[06:33] *** DarthGandalf joined
[06:33] *** Ekho joined
[06:33] *** gfldex joined
[06:33] *** nicole joined
[06:33] *** avuserow joined
[06:33] *** samebchase joined
[06:33] *** corwin joined
[06:33] *** jast joined
[06:33] *** jjatria joined
[06:33] *** ugexe joined
[06:33] *** Ekho left
[06:34] *** greenfork joined
[06:34] *** tjr left
[06:34] *** kjp left
[06:34] *** sjn left
[06:34] *** bloatable6 left
[06:34] *** greppable6 left
[06:34] *** kst left
[06:34] *** simcop2387 left
[06:34] *** sorenson left
[06:34] *** bisectable6 left
[06:34] *** perlbot left
[06:34] *** sourceable6 left
[06:34] *** benchable6 left
[06:34] *** shareable6 left
[06:34] *** quotable6 left
[06:34] *** dano left
[06:34] *** broquaint left
[06:34] *** tadzik left
[06:34] *** yewscion__ left
[06:34] *** Geth left
[06:34] *** jetchisel left
[06:34] *** rba left
[06:34] *** elcaro left
[06:34] *** thowe left
[06:34] *** lucs left
[06:34] *** charsbar left
[06:35] *** yewscion__ joined
[06:35] *** Geth joined
[06:35] *** jetchisel joined
[06:35] *** rba joined
[06:35] *** elcaro joined
[06:35] *** thowe joined
[06:35] *** lucs joined
[06:35] *** charsbar joined
[06:36] *** tjr joined
[06:36] *** kjp joined
[06:36] *** sjn joined
[06:36] *** greppable6 joined
[06:36] *** bloatable6 joined
[06:36] *** kst joined
[06:36] *** simcop2387 joined
[06:36] *** sorenson joined
[06:36] *** bisectable6 joined
[06:36] *** perlbot joined
[06:36] *** sourceable6 joined
[06:36] *** benchable6 joined
[06:36] *** shareable6 joined
[06:36] *** quotable6 joined
[06:36] *** dano joined
[06:36] *** broquaint joined
[06:36] *** tadzik joined
[06:36] *** Tirifto_ left
[06:36] *** maylay left
[06:36] *** thaewrapt left
[06:36] *** grondilu left
[06:36] *** leah2 left
[06:36] *** skaji__ left
[06:36] *** tobs left
[06:37] *** Tirifto_ joined
[06:37] *** maylay joined
[06:37] *** thaewrapt joined
[06:37] *** grondilu joined
[06:37] *** leah2 joined
[06:37] *** skaji__ joined
[06:37] *** tobs joined
[06:38] *** jmcgnh left
[06:38] *** ab5tract left
[06:38] *** avar left
[06:38] *** mst left
[06:38] *** bd3i left
[06:38] *** hudo__ left
[06:38] *** Voldenet left
[06:38] *** bdju left
[06:38] *** dmvrtx left
[06:38] *** BooK left
[06:38] *** Guest7021 left
[06:38] *** snonux left
[06:38] *** dpk left
[06:38] *** SmokeMachine left
[06:38] *** perryprog left
[06:38] *** hudo__ joined
[06:38] *** Voldenet joined
[06:38] *** bdju joined
[06:38] *** dmvrtx joined
[06:38] *** BooK joined
[06:38] *** Guest7021 joined
[06:38] *** snonux joined
[06:38] *** dpk joined
[06:38] *** SmokeMachine joined
[06:38] *** perryprog joined
[06:39] *** dano2 joined
[06:40] *** sorenson left
[06:40] *** tjr left
[06:40] *** dano left
[06:40] *** dano2 is now known as dano

[06:40] *** perlbot left
[06:40] *** sorenson joined
[06:40] *** jmcgnh joined
[06:40] *** ab5tract joined
[06:40] *** avar joined
[06:40] *** mst joined
[06:40] *** bd3i joined
[06:40] *** perlbot joined
[06:41] *** tjr joined
[06:46] *** Ekho- joined
[07:03] *** MyNetAz joined
[08:54] *** jpn joined
[08:58] *** jpn left
[08:59] *** Sgeo left
[09:00] *** jpn joined
[09:11] *** dakkar joined
[09:17] *** apac left
[09:19] *** jpn left
[09:23] *** jpn joined
[09:28] *** comborico1611 joined
[09:30] *** dmvrtx_ left
[09:49] *** _________ left
[09:56] *** _________ joined
[10:05] *** jpn left
[10:13] *** LainExperiments joined
[10:22] *** yewscion joined
[10:23] *** LainExperiments4 joined
[10:24] *** LainExperiments left
[10:27] *** yewscion left
[10:44] *** sena_kun joined
[10:45] *** rba left
[10:49] *** LainExperiments4 left
[10:49] *** MyNetAz left
[10:50] *** LainExperiments joined
[10:50] *** rba joined
[10:54] *** yewscion joined
[10:58] *** yewscion left
[11:04] *** MyNetAz joined
[11:42] *** yewscion joined
[11:52] *** yewscion left
[11:56] *** Tirifto_ left
[12:02] *** Tirifto joined
[12:10] *** LainExperiments left
[12:18] *** Tirifto_ joined
[12:18] *** Tirifto left
[12:18] *** euandreh left
[12:18] *** euandreh joined
[12:23] *** LainExperiments joined
[12:40] *** comborico1611 left
[12:49] *** yewscion joined
[12:53] *** hudo__ left
[12:53] *** hudo__ joined
[12:54] *** yewscion left
[12:54] *** sjn left
[12:54] *** sjn joined
[13:03] *** jpn joined
[13:04] *** yewscion joined
[13:07] *** jpn left
[13:09] *** yewscion left
[13:27] *** LainExperiments left
[13:28] *** LainExperiments6 joined
[13:28] * lizmat clickbaits https://rakudoweekly.blog/2025/03/03/2025-09-counting-down/

[13:50] *** MyNetAz left
[14:05] *** MyNetAz joined
[14:18] *** yewscion joined
[14:24] *** vrurg_ joined
[14:24] *** vrurg left
[14:46] *** LainExperiments6 left
[14:58] *** LainExperiments joined
[15:03] *** yewscion_ joined
[15:04] *** yewscion left
[15:21] *** LainExperiments left
[15:48] *** LainExperiments joined
[15:59] *** LainExperiments left
[16:25] *** yewscion joined
[16:26] *** jgaz left
[16:26] *** jgaz joined
[16:29] *** yewscion_ left
[16:40] *** yewscion left
[16:41] *** LainExperiments joined
[16:46] *** yewscion joined
[17:35] *** dakkar left
[17:36] *** LainExperiments left
[17:54] *** Guest48 joined
[17:55] <Guest48> bisectable: say Any === Mu

[17:55] <bisectable6> Guest48, Will bisect the whole range automagically because no endpoints were provided, hang tight

[17:55] <bisectable6> Guest48, Output on all releases: https://gist.github.com/aa29d99776a5cb7da520956d0095a851

[17:55] <bisectable6> Guest48, More than 3 changes to bisect, please try a narrower range like old=2022.07 new=HEAD

[17:57] <Guest48> makes sense

[18:00] <Guest48> > If no type is provided by the user Raku assumes the type to be Any. This includes containers, base-classes, parameters and return types.

[18:00] <Guest48> This applies, then

[18:02] <Guest48> > For containers the default type is Any but the default type constraint is Mu.

[18:02] <Guest48> What does this mean, though

[18:05] <lizmat> m: my $a; dd $a; $a = Mu; dd $a

[18:05] <camelia> rakudo-moar ef0174bb5: OUTPUT: «$a = Any␤$a = Mu␤»

[18:05] <lizmat> m: my Any $a; dd $a; $a = Mu; dd $a

[18:05] <camelia> rakudo-moar ef0174bb5: OUTPUT: «Any $a = Any␤Type check failed in assignment to $a; expected Any but got Mu (Mu)␤  in block <unit> at <tmp> line 1␤␤»

[18:10] <Guest48> my @a; dd @a;

[18:10] <evalable6> Guest48, rakudo-moar ef0174bb5: OUTPUT: «[]␤»

[18:10] <Guest48> my \a = Mu; dd a;

[18:10] <evalable6> Guest48, rakudo-moar ef0174bb5: OUTPUT: «Mu␤»

[18:12] <Guest48> couldn't the (\a, \b --> Bool) signature work based on the same principle, then?

[18:13] <lizmat> not sure what you mean ?

[18:14] <Guest48> ruminating https://github.com/rakudo/rakudo/issues/5796

[18:17] * lizmat tries adapting the \a, \b candidate to Mu \a, Mu \b

[18:22] <lizmat> breaks 6 tests in roast  :-(

[18:23] <lizmat> making it with that signature, breaks auto-threading

[18:25] <Guest48> auto-threading over ===?

[18:25] <lizmat> m: say ?Int === Str|Num|Int

[18:25] <camelia> rakudo-moar ef0174bb5: OUTPUT: «any(False, False, False)␤»

[18:26] <lizmat> m: say ?(Int === Str|Num|Int)

[18:26] <camelia> rakudo-moar ef0174bb5: OUTPUT: «True␤»

[18:27] <Guest48> Huh, this doesn't seem like a good idea at all..

[18:27] <lizmat> autothreading over === ?

[18:27] <Guest48> yes

[18:28] <lizmat> well, how would === be different from other operators ?

[18:28] <lizmat> m: say "a string" if "foo" ~~ Int | Num | Str

[18:28] <camelia> rakudo-moar ef0174bb5: OUTPUT: «a string␤»

[18:28] <Guest48> m: say Int =:= Str|Num|Int

[18:28] <camelia> rakudo-moar ef0174bb5: OUTPUT: «False␤»

[18:28] <Guest48> it is different

[18:29] <Guest48> === is a pretty darn low-level operation

[18:29] <lizmat> =:= is more low level

[18:29] <Guest48> Still, these two are more similar than ~~ to either.

[18:29] <lizmat> in any case, there are roast tests for it

[18:31] <Guest48> Then there is an answer to that issue.

[18:35] * lizmat tries something else

[18:48] <lizmat> https://github.com/rakudo/rakudo/commit/3f6ac5a2d3

[18:48] <Guest48> m: say so 1&2 === 1&2

[18:48] <camelia> rakudo-moar ef0174bb5: OUTPUT: «False␤»

[18:48] <Guest48> To me, this looks concerning with ===

[18:49] <lizmat> m: say so 1 | 2 === 1 | 2

[18:49] <camelia> rakudo-moar ef0174bb5: OUTPUT: «True␤»

[18:49] <lizmat> m: say 1 & 2 === 1 & 2

[18:49] <camelia> rakudo-moar ef0174bb5: OUTPUT: «all(all(True, False), all(False, True))␤»

[18:53] <Guest48> 1&2 =:= 1&2 is False because the references don't match. Fair enough. But === distributes and anything that is higher-level than that will probably also distribute.

[18:54] *** jpn joined
[18:54] <Guest48> Despite the fact that a Junction like this seems to have a stable hash:

[18:54] <Guest48> m: say (1&2).WHICH eq (1&2).WHICH

[18:54] <camelia> rakudo-moar ef0174bb5: OUTPUT: «True␤»

[18:56] <lizmat> yeah, but that feels like DIHWIDT

[18:56] *** LainExperiments3 joined
[18:57] <lizmat> afk for a few hours&

[18:57] <Guest48> I don't think equal-checking for a junction means intrinsically less sense than using === to query its elements

[18:57] <Guest48> makes*

[18:57] <Guest48> Especially since you can do this:

[18:58] <Guest48> m: my %all-goes-here{Mu}; %all-goes-here{1|2} = 3; dd %all-goes-here

[18:58] <camelia> rakudo-moar ef0174bb5: OUTPUT: «Any  = (my Any %{Mu} = any(1, 2) => 3)␤»

[18:59] <Guest48> If a junction can end up as the key of a hash (probably also not a good idea but bugs exist), at the very least one should have a way to detect the value

[18:59] *** LainExperiments joined
[19:01] <Guest48> Anyway, the good news is the same as the bad news: using .WHICH will get you different behavior and then you might prefer that. It probably also works instead of the code in the issue. :)

[19:02] *** Guest48 left
[19:03] *** LainExperiments3 left
[19:19] *** jpn left
[19:28] *** LainExperiments5 joined
[19:29] *** LainExperiments left
[19:41] *** jjido joined
[20:00] *** LainExperiments joined
[20:02] *** LainExperiments5 left
[20:12] *** Aedil left
[20:15] *** LainExperiments left
[20:39] *** LainExperiments joined
[20:48] *** LainExperiments left
[21:07] *** wbooze joined
[21:14] *** charsbar left
[21:15] *** sjn left
[21:15] *** jetchisel left
[21:16] *** sjn joined
[21:16] *** elcaro left
[21:16] *** dg left
[21:17] *** jetchisel joined
[21:19] *** charsbar joined
[21:20] *** Xliff left
[21:20] *** acidsys left
[21:20] *** patrickb left
[21:20] *** atweedie left
[21:20] *** peder left
[21:20] *** evalable6 left
[21:20] *** PotatoGim left
[21:20] *** tailgate left
[21:20] *** Xliff joined
[21:20] *** acidsys joined
[21:20] *** patrickb joined
[21:20] *** atweedie joined
[21:20] *** peder joined
[21:20] *** evalable6 joined
[21:20] *** PotatoGim joined
[21:20] *** tailgate joined
[21:23] *** dg joined
[21:23] *** yewscion left
[21:27] *** yewscion joined
[21:27] *** elcaro joined
[21:30] <Xliff> Hello.

[21:31] <Xliff> If I have a grammar with a proto, is there any way I can get the :sym value of the proto that matched?

[21:32] <discord-raku-bot> <librasteve> hi - I think I saw an example of that ... rootling now

[21:32] <Xliff> m: grammar A { proto aa { * }; token aa:sym<aa> { 'AA' }; token TOP { <aa> }; }; A.parse("aa").gist.say'

[21:32] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------>  TOP { <aa> }; }; A.parse("aa").gist.say<HERE>'␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier…»

[21:32] <Xliff> m: grammar A { proto aa { * }; token aa:sym<aa> { 'AA' }; token TOP { <aa> }; }; A.parse("aa").gist.say

[21:32] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «No such method 'aa' for invocant of type 'A'.  Did you mean 'at'?␤  in regex TOP at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:33] *** yewscion left
[21:33] <Xliff> m: grammar A { rule TOP { <aa> }; proto aa { * }; token aa:sym<aa> { 'AA' };  }; A.parse("aa").gist.say

[21:33] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «No such method 'aa' for invocant of type 'A'.  Did you mean 'at'?␤  in regex TOP at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:33] <Xliff> m: grammar A { rule TOP { <aa> }; proto method aa { * }; token aa:sym<aa> { 'AA' };  }; A.parse("aa").gist.say

[21:33] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «Cannot resolve caller aa(A:D); Routine does not have any candidates.  Is only the proto defined?␤  in regex TOP at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:33] <Xliff> m: grammar A { rule TOP { <aa> }; proto token aa { * }; token aa:sym<aa> { 'AA' };  }; A.parse("aa").gist.say

[21:33] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «Nil␤»

[21:34] <timo> "proto" by default gives you a sub

[21:34] <Xliff> m: grammar A { rule TOP { <aa> }; proto token aa { * }; token aa:sym<aa> { 'AA' };  }; A.parse("AA").gist.say

[21:34] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «｢AA｣␤ aa => ｢AA｣␤»

[21:34] <Xliff> So the only thing returned is the proto, not the exact multi (or sym).

[21:34] *** LainExperiments joined
[21:35] <Xliff> Would love to see if there was a way to get "aa:<aa>" in that output, somehow.

[21:35] <timo> how do you mean "returned"?

[21:35] <timo> captured?

[21:36] <Xliff> The parse output. I guess captured might be a better way.

[21:36] <timo> thing about capture is that the caller is responsible for putting the result where it goes, not the callee

[21:36] <Xliff> So... maybe an action class?

[21:36] <timo> that's why you can <.aa> or <foo=.aa> etc

[21:37] <timo> yeah, action classes go great with proto tokens with :sym

[21:37] <Xliff> m: grammar A { rule TOP { <aa> }; proto token aa { * }; token aa:sym<aa> { 'AA' };  }; class AA-Actions { method aa:sym<aa> { say 'AA' }; }; A.parse("AA", action=AA-Actions.new).gist.say

[21:37] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared routine:␤    action used at line 1␤␤»

[21:37] <Xliff> m: grammar A { rule TOP { <aa> }; proto token aa { * }; token aa:sym<aa> { 'AA' };  }; class AA-Actions { method aa:sym<aa> { say 'AA' }; }; A.parse("AA", action => AA-Actions.new).gist.say

[21:37] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «｢AA｣␤ aa => ｢AA｣␤»

[21:38] <timo> i think it's actions rather than action

[21:38] <Xliff> m: grammar A { rule TOP { <aa> }; proto token aa { * }; token aa:sym<aa> { 'AA' };  }; class AA-Actions { method aa:sym<aa> { say 'AA' }; }; A.parse("AA", actions => AA-Actions.new).gist.say

[21:38] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in method aa:sym<aa> at <tmp> line 1␤  in regex aa:sym<aa> at <tmp> line 1␤  in regex aa at <tmp> line 1␤  in regex TOP at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:38] <discord-raku-bot> <librasteve> Xliff: maybe this pattern would work for you https://docs.raku.org/language/grammar_tutorial#Keeping_grammars_with_actions_tidy_with_make_and_made ... specifically with the action - say $match<command>.Str;   # OUTPUT: «update␤» ???

[21:38] <timo> and action methods need to take the match object as first positional arg

[21:38] <Xliff> m: grammar A { rule TOP { <aa> }; proto token aa { * }; token aa:sym<aa> { 'AA' };  }; class AA-Actions { method aa:sym<aa> ($/) { say 'AA' }; }; A.parse("AA", actions => AA-Actions.new).gist.say

[21:38] <camelia> rakudo-moar 3f6ac5a2d: OUTPUT: «AA␤｢AA｣␤ aa => ｢AA｣␤»

[21:38] <Xliff> Aha!

[21:39] <Xliff> So the Action class is basically how I have to note differences in the proto? :P

[21:39] <discord-raku-bot> <librasteve> oh - looks like you got there already!

[21:39] <timo> well, you can do something specific in the multi token as well

[21:40] <timo> it just doesn't happen on its own automatically

[21:40] <discord-raku-bot> <librasteve> fwiw I have tried to not use actions and found that this is nigh on impossible due to the backtracking behaviours ... it is well worth trying out make / made and getting a feel for what they provide

[21:40] <timo> you can use the <sym> rule to match what's in the :sym<here> of your token/rule/regex, and if you spell it <sym> rather than <.sym> it will also show up in the capture

[21:41] <timo> but the "sym" you want isn't always literally what you want matched

[21:44] <timo> it might be kind of interesting to be able to just put whatever you want into the match result, regardless of what the actual regex provides in terms of capturing bits. though possibly also rather confusing if you encounter it in someone else's code

[21:45] *** sdomi joined
[22:01] *** LainExperiments left
[22:07] *** jgaz left
[22:09] *** yewscion joined
[22:10] *** yewscion_ joined
[22:12] *** yewscion left
[22:21] *** LainExperiments joined
[22:38] *** wbooze_ joined
[22:41] *** wbooze left
[22:45] *** LainExperiments left
[23:00] *** vrurg_ left
[23:00] *** vrurg joined
[23:08] *** yewscion_ left
[23:08] *** wbooze_ left
[23:08] *** wbooze_ joined
[23:31] *** LainExperiments joined
[23:49] *** jjido left
