[00:08] *** lucerne left
[00:17] *** arkiuat left
[00:18] *** arkiuat joined
[00:23] *** arkiuat left
[00:40] *** kjp left
[00:41] *** kjp joined
[00:45] *** kjp left
[00:45] *** kjp joined
[00:48] *** arkiuat joined
[00:57] *** arkiuat left
[01:08] *** arkiuat joined
[01:10] *** hulk joined
[01:11] *** kylese left
[01:13] *** arkiuat left
[01:38] *** arkiuat joined
[01:38] *** lichtkind left
[01:43] *** MyNetAz left
[01:46] *** arkiuat left
[01:59] *** arkiuat joined
[02:02] *** hulk left
[02:05] *** arkiuat left
[02:37] *** arkiuat joined
[02:41] *** arkiuat left
[03:12] *** arkiuat joined
[03:17] *** arkiuat left
[03:26] <disbot> <jubilatious1_98524> m: $_ = 'ab ac ad ae af'; m:g/ (a.) { $0.say } /.iterator andthen $/.[0..*];

[03:26] <evalable6> jubilatious1_98524, rakudo-moar f56482941: OUTPUT: «ab␤ac␤ad␤ae␤af␤»

[03:26] <disbot> <Raku eval>  Exit code: 1 Too many positionals passed; expected 1 argument but got 2   in block <unit> at main.raku line 1  

[03:30] <disbot> <jubilatious1_98524> m: $_ = "ab ac ad ae af"; m:g/ (a.) { $0.say } / andthen $/.[0..*];

[03:30] <evalable6> jubilatious1_98524, rakudo-moar f56482941: OUTPUT: «ab␤ac␤ad␤ae␤af␤»

[03:30] <disbot> <Raku eval>  Exit code: 1 Too many positionals passed; expected 1 argument but got 2   in block <unit> at main.raku line 1  

[03:35] <disbot> <jubilatious1_98524> ~ % printf 'ab ac ad ae af\n' | raku -ne 'm:g/ (a.) { $0.say } / andthen $/.[0..*];' ｢ab｣ ｢ac｣ ｢ad｣ ｢ae｣ ｢af｣ 

[03:38] *** arkiuat joined
[03:42] *** bartolin left
[03:43] *** arkiuat left
[03:47] *** bartolin joined
[03:57] <disbot> <jubilatious1_98524> @Voldenet  The reputation of andthen is that it forces the creation if a local $_ topic variable, which can either be used or discarded as you see fit. But you can inspect $/ in a separate statement also: ~ % printf 'ab ac ad ae af\n' | /Users/wmichels/rakudo/rakudo-2024.09/rakudo-moar-2024.09-01-macos-arm64-clang/bin/raku -ne 'm:g/ (a.) /; .put for $/>>.[0..*];' ab ac ad ae af 

[03:57] <disbot> <jubilatious1_98524> ~ % printf 'ab ac ad ae af\n' | /Users/wmichels/rakudo/rakudo-2024.09/rakudo-moar-2024.09-01-macos-arm64-clang/bin/raku -ne 'm:g/ (a.) / andthen $/.join("\n").put;' ab ac ad ae af 

[03:58] <disbot> <jubilatious1_98524>  ~ % printf 'ab ac ad ae af\n' |  raku -ne 'm:g/ (a.) /; .put for $/>>.[0..*];' ab ac ad ae af 

[04:00] *** arkiuat joined
[04:05] <Voldenet> overall .iterator.sink-all sounds like something that would discard the result semantically (I'm guessing list with matches is still going to be kept anyway in reality)

[04:06] *** arkiuat left
[04:06] <Voldenet> > cat /dev/random | tr -dc 'a-z\n' | raku -ne 'm:g/ (a.) { $0.say } /.iterator.sink-all'

[04:09] <Voldenet> in theory the above could process the stream endlessly, andthen $/[*] would probably crash at some point

[04:10] <Voldenet> though I'm only speculating, I have no actual idea if it doesn't stream data properly too

[04:10] <Voldenet> ah, right, it will do processing per line, so no oom anyway ┐(´～`；)┌ 

[04:15] <disbot> <jubilatious1_98524> @Voldenet First time I've ever heard of .iterator.sink-all   was your/SIBL's code!

[04:16] *** arkiuat joined
[04:17] <disbot> <jubilatious1_98524> Have you seen Raiph's StackOverflow posts on {} publication of a match variable?

[04:21] <disbot> <jubilatious1_98524> Links here: https://github.com/Raku/doc/issues/2887

[04:27] *** hudo__ left
[04:28] *** hudo__ joined
[04:28] *** jdv left
[04:28] *** jdv joined
[04:44] *** Aedil joined
[05:47] *** dustinm` left
[05:50] *** dustinm` joined
[06:09] *** kylese joined
[06:30] *** Sgeo left
[06:55] *** abraxxa joined
[06:59] *** abraxxa1 joined
[07:01] *** abraxxa left
[07:05] *** abraxxa joined
[07:08] *** abraxxa1 left
[07:16] *** jjido joined
[07:16] <disbot> <simon_sibl> bduggan raku-terminal-ui is amazing, I really like the blog to show how to make a mc like file browser in very few lines of code

[07:17] <disbot> <simon_sibl> I found that if I use an ui.alert in an ui.pane.on-sync I couldnt press ok on the alert

[07:25] *** jjido left
[07:27] *** arkiuat left
[07:31] *** abraxxa left
[07:32] *** abraxxa joined
[07:55] <Voldenet> it was mentioned somewhere in 2017 I believe

[07:56] *** arkiuat joined
[08:00] *** wayland76 joined
[08:01] *** abraxxa1 joined
[08:01] *** arkiuat left
[08:04] *** abraxxa left
[08:28] *** arkiuat joined
[08:35] <disbot> <simon_sibl> are horizontal pane easier to manage than vertical ones ? it seems there are only horizontal pane by default

[08:39] *** arkiuat left
[08:44] *** lucs left
[08:53] *** amaz0n joined
[08:53] *** amaz0n left
[08:53] *** amaz0n joined
[08:58] *** lucs joined
[09:14] *** sorenson left
[09:21] *** arkiuat joined
[09:25] *** arkiuat left
[09:36] *** abraxxa1 left
[09:38] *** abraxxa joined
[09:44] *** lichtkind joined
[10:02] *** abraxxa1 joined
[10:04] *** abraxxa left
[10:09] *** inspork left
[10:13] *** inspork joined
[10:38] *** wayland76 left
[10:39] *** arkiuat joined
[10:43] *** arkiuat left
[10:47] *** abraxxa joined
[10:47] *** abraxxa2 joined
[10:49] *** jmcgnh left
[10:50] *** wayland76 joined
[10:51] *** abraxxa1 left
[10:51] *** abraxxa left
[10:52] *** jmcgnh joined
[10:52] *** amaz0n left
[10:57] *** tbrowder left
[10:58] *** tbrowder joined
[10:58] *** itaipu left
[11:06] *** arkiuat joined
[11:08] *** sorenson joined
[11:11] *** arkiuat left
[11:12] *** itaipu joined
[11:36] *** arkiuat joined
[11:41] *** arkiuat left
[11:50] *** kaskal left
[11:50] *** kaskal joined
[11:55] *** melezhik joined
[12:03] *** itaipu left
[12:20] *** itaipu joined
[12:52] *** abraxxa joined
[12:53] *** abraxxa1 joined
[12:55] *** abraxxa2 left
[12:57] *** vrurg left
[12:57] *** abraxxa left
[12:57] *** vrurg joined
[13:08] *** apac joined
[13:25] *** Guest82 joined
[13:25] *** arkiuat joined
[13:27] <Guest82> Hi. Do I need to uninstall the previous version of Rakudo before installig the new one on Windows?

[13:30] *** arkiuat left
[13:44] *** arkiuat joined
[13:47] *** Aedil left
[13:47] <[Coke]> Guest82: which installers are you using?

[13:50] *** arkiuat left
[13:52] *** Aedil joined
[13:56] <[Coke]> I think the general answer to that is no, however.

[14:06] *** Guest82 left
[14:12] *** Guest82 joined
[14:12] *** Guest82 left
[14:20] *** japhb left
[14:27] *** arkiuat joined
[14:31] *** japhb joined
[14:31] *** arkiuat left
[14:59] *** arkiuat joined
[15:10] *** wayland joined
[15:11] *** wayland76 left
[15:14] *** wayland76 joined
[15:14] *** wayland left
[15:27] <disbot> <antononcube> This summarizes my talks to python programmers: https://imgur.com/EP3ZuYh

[15:37] *** wayland joined
[15:37] *** wayland76 left
[15:41] *** eseyman left
[15:41] *** eseyman joined
[15:59] *** abraxxa1 left
[16:15] *** melezhik left
[16:34] *** wayland76 joined
[16:35] *** wayland left
[16:54] *** wayland76 left
[16:55] *** wayland76 joined
[17:02] *** ACfromTX left
[17:02] *** ACfromTX joined
[17:09] *** jjido joined
[17:19] *** apac left
[17:55] *** jjido left
[18:03] *** jjido joined
[18:16] *** jjido left
[18:18] *** nort joined
[18:21] <librasteve_> weekly: https://imgur.com/EP3ZuYh

[18:21] <notable6> librasteve_, Noted! (weekly)

[18:23] <disbot> <antononcube> thanks!

[18:54] <patrickb> Guest82: Ideally you should be able to replace a previous installation by just installing over it. I think I tried it and it worked. If you try, I'm interested in how it went.

[19:39] *** Aedil left
[19:50] *** jjido joined
[20:15] *** itaipu left
[20:20] *** itaipu joined
[20:30] *** itaipu left
[20:32] *** itaipu joined
[20:36] *** jjido left
[21:01] *** apac joined
[21:42] *** tejr left
[21:42] *** tejr joined
[21:51] *** lichtkind left
[22:02] *** jjido joined
[22:02] *** wayland76 left
[22:11] *** jmcgnh left
[22:16] *** apac left
[22:17] *** jmcgnh joined
[22:33] *** arkiuat left
[22:46] *** arkiuat joined
[23:02] *** arkiuat left
[23:08] *** disbot left
[23:08] *** disbot joined
[23:10] *** arkiuat joined
[23:36] *** jjido left
[23:38] *** Sgeo joined
