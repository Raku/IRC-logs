[00:22] *** Guest54 left
[01:59] *** kylese left
[01:59] *** hulk joined
[02:15] *** hulk left
[02:15] *** kylese joined
[03:31] *** Aedil joined
[03:45] *** kylese left
[03:48] *** kylese joined
[03:48] <discord-raku-bot> <coranila> visualizations of what?

[03:50] <discord-raku-bot> <coranila> i don't think i understand; visualizing irreducible spirals?

[04:08] *** Guest55 joined
[04:23] *** Guest55 left
[05:48] *** yeahitsme joined
[06:35] *** human-blip left
[06:36] *** human-blip joined
[06:50] *** apac joined
[06:54] <discord-raku-bot> <antononcube> Some ideas for “Collatz visualizations” can be found here: https://demonstrations.wolfram.com/search?query=Collatz

[07:16] *** human-blip left
[07:16] *** Sgeo left
[07:18] *** human-blip joined
[07:22] *** jjido joined
[07:28] <discord-raku-bot> <librasteve> weekly: https://rakujourney.wordpress.com/2025/05/19/harc-stack-minimal/

[07:28] <notable6> librasteve, Noted! (weekly)

[07:28] <tellable6> hey librasteve, you have a message: https://gist.github.com/2636bd70608876dfb53b05bcd2c5f57f

[07:28] *** jjido left
[07:56] *** dakkar joined
[07:59] *** librasteve_ joined
[08:09] *** lichtkind joined
[08:16] *** apac left
[09:09] <lizmat> librasteve is it correct that there is no App::Crag update?

[09:09] <tellable6> 2025-05-18T17:37:12Z #raku <coranila> lizmat: i'd need to bump NQP revision to push the '"working"" (with 12 GB heap size..) rakudo-j build, but i can't push the corresponding NQP commits

[09:11] <lizmat> coranila: perhaps make them PRs?

[09:16] <discord-raku-bot> <coranila> lizmat: is there a reason for different permissions for NQP and Rakudo? am i supposed to use my old nick? is make j-bootstrap-files sacred?

[09:16] *** guifa left
[09:18] *** guifa joined
[09:19] <discord-raku-bot> <coranila> perhaps there are too many barriers for me to meaningfully contribute; especially considering the vibes include "arguing about whether LLMs are OK" and "ignoring when someone tries to stop a fight" and yeah

[09:21] <discord-raku-bot> <coranila> but that's all fine, im just upset because of my disabilities

[09:24] <lizmat> coranila I just checked NQP settings, but didn't find any access for your old nick there?

[09:25] * lizmat looks better

[09:26] <discord-raku-bot> <coranila> oh, it's probably gotten lost in the TPF/TRF transition?

[09:27] <discord-raku-bot> <coranila> like i sent that letter to the TPF ~11 years ago for the perl6 org commit bit

[09:27] <discord-raku-bot> <coranila> but yeah

[09:27] <discord-raku-bot> <coranila> it's all good, im just gonna step away again for a few days and see how i feel then

[09:27] <lizmat> hmmm.....  doubt: maybe I screwed up when I removed the old nick?

[09:33] <lizmat> fwiw, coranila sent you an invite

[09:58] *** wayland joined
[10:01] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2025/05/19/2025-20-less-is-mini/

[10:39] *** librasteve_ left
[11:27] *** apac joined
[11:27] *** topnep left
[11:30] *** topnep joined
[12:04] <tbrowder> ++lizmat, i don't know how you find all those raku nuggets for the weekly, but i'll bet you have a fancy, raku web scraper that does a lot of it.

[12:05] <lizmat> actually, it's mostly just checking a number of sites...

[12:06] <lizmat> the final one being a Google search on "Raku Programming Language"

[12:06] <lizmat> and limiting to "past week"

[12:07] <tbrowder> well, it's a lot of work and we always appreciate it very much!

[12:08] <lizmat> thank you  :-)

[12:08] <tbrowder> you are welcome!

[12:16] <tbrowder> i'm trying to modernize some published distros and use Rakudoc instead of Pod (or Pod6) and would appreciate some opinions. if we look at some of the docs, RakuDoc (mixed case) is used, but in other cases it's Rakudoc which i think is more likely to be used by others. and it's like *Raku* and *raku*. use *Rakudoc* in documentation and *rakudoc* in code.

[12:19] <tbrowder> finanalyst uses the mixed case to emphasize the V2 version but i think that's gonna be lost on us ppl in userville. V2 is supposed to be a superset of V1.

[12:24] <tbrowder> my motivation at the moment is a modernization of JJ's Pod::Load. he suggested instead of my PR there, publish the PR under a new name. my choice is Rakudoc::Load, but the alternative would be RakuDoc::Load

[12:27] <tbrowder> i know this seems like hair-splitting, but i think Rakudoc will enhance consistency in the long run

[12:43] <tbrowder> oops, JJ likes RakuDoc

[12:46] <tbrowder> hm, i do see the upside, RakuDoc emphasizes the Doc and clearly different from RakuPod which is already in public code...

[12:47] <discord-raku-bot> <melezhik.> Also … Pod has a strong association with k8s world

[13:19] *** JimmyZhuo joined
[13:32] <tbrowder> k8s? not familiar with that

[13:33] <tbrowder> pod as in human shelter?

[13:33] *** JimmyZhuo left
[13:34] *** topnep left
[13:34] <tbrowder> 8.3 as in old 16-bit name length?

[13:35] *** topnep joined
[13:41] *** apac left
[13:50] <discord-raku-bot> <antononcube> @tonyo It seems that the newest "WWW::OpenAI" I pushed via fez is not published. (Again.)

[14:06] <discord-raku-bot> <melezhik.> tbrowder: https://kubernetes.io/docs/concepts/workloads/pods/

[14:12] <discord-raku-bot> <antononcube> @coranila Some comments related to "arguing about whether LLMs are OK"  1. Having LLMs in a programming language / system is a "must", otherwise that system would be seen as old and irrelevant. 2. Raku is exceptionally good at dealing with LLMs.    - Related to a another discussion of ours, I consider it to be much better than Python.    - For example: How the "two lines transpiler" I posted two days ago would

[14:12] <discord-raku-bot> look in Python?       - Hint: it can be done using Raku-inspired Python packages. 3. Anyone who prefers to be an "LLM-luddite" -- also those who embrace LLMs --  should read  "The Death of Stubborn Developer" and / or "The End of Programming as We Know It".

[14:14] <discord-raku-bot> <antononcube> BTW, I do not consider those two articles are that insightful, but I do think they indicated well the current fashion of thought for LLMs and development. For example, 3D car printing analogy in "The Death of the Stubborn Developer" is quite nice.

[15:24] <jdv> who runs the discord bot?

[15:39] *** topnep left
[15:40] *** topnep joined
[15:43] *** tjr joined
[16:05] <coleman> I just got an alert that the docs site it down. I'm on the train but I will check on it soon 

[16:09] <tbrowder> melezhik: thanks, i’m not savvy enough with kubernetes lingo, but i’ll bet perl pods predates that use

[16:09] *** kjp left
[16:10] *** kjp joined
[16:24] <coleman> should be back up

[16:26] <[Coke]> coleman: looks good, thanks for the quick turnaround.

[16:35] *** jjido joined
[16:38] *** librasteve_ joined
[16:42] *** dakkar left
[16:49] <lucs> This prints BAZ, which is what I want:

[16:49] <lucs> my $baz = 'Baz'; class A { method Baz {'BAZ'} }; say A."$baz"()

[16:49] <evalable6> lucs, rakudo-moar 75e3952ab: OUTPUT: «BAZ␤»

[16:49] <lucs> But with "our sub" instead of "method", how can I do the same thing?:

[16:50] <lucs> # my $baz = 'Baz'; class A { our sub Baz {"BAZ"} }; say A⋯?

[16:58] <Voldenet> m: my $baz = "Baz"; class A { our sub Baz {"BAZ"} }; say A::{"&" ~ $baz}();

[16:58] <camelia> rakudo-moar 75e3952ab: OUTPUT: «BAZ␤»

[16:59] <Voldenet> lucs: something like the above

[16:59] <[Coke]> but also : why are you doing that? :)

[17:02] <lucs> Voldenet: Yes! Thanks. Note simpler ending:  A::{"&$baz"}()

[17:03] <lucs> [Coke]: Great question, eh :-)

[17:03] <Voldenet> m: my $baz = "Baz"; class A { our sub Baz {"BAZ"} }; say ::("A::&$baz")();

[17:03] <camelia> rakudo-moar 75e3952ab: OUTPUT: «BAZ␤»

[17:03] <Voldenet> this also works, idk which is better in the case

[17:03] <lucs> Voldenet: Nice one too.

[17:06] <lucs> [Coke]: I'm writing tests for some "our sub"s in a module that is not mine, and it turns out that the tests are easier to write by having the sub name as a variable.

[17:07] <[Coke]> the our subs are *inside* a class, though? Seems od

[17:07] <[Coke]> *odd*

[17:07] <lucs> Easier, after having spent a lot of time trying to unsuccessfully get the syntax right :-)

[17:07] <lucs> [Coke]: Welp, not my code.

[17:08] <lucs> Maybe it could be written otherwise, not sure.

[17:12] <tbrowder> i’m still looking for a relatively easy web framework for a website. has anyone used Raku Hummingbird? if so, how was construction and live deployment compared to others you’ve tried?

[17:17] <ugexe> i prefer say `&A::("$baz")()`

[17:17] <ugexe> rather `&A::($baz)()`

[17:20] <lucs> I don't exactly understand how all these variations result in the correct output, but that last one is perhaps the most elegant (and shortest!).

[17:21] <ugexe> $baz is the only dynamic part of the namespace so ideally you wouldn't put e.g. & inside "" etc

[17:37] *** jjido left
[17:44] *** topnep left
[17:45] *** topnep joined
[18:35] *** abraxxa-home joined
[18:45] *** yeahitsme left
[18:47] *** librasteve_ left
[19:07] *** samebchase joined
[19:18] *** jjido joined
[19:39] *** Guest72 joined
[19:49] *** topnep left
[19:50] *** topnep joined
[20:10] *** Aedil left
[20:11] *** jjido left
[20:12] *** wayland76 joined
[20:12] *** wayland left
[20:15] <discord-raku-bot> <librasteve> tbrowder: have you considered https://harcstack.org … there are some very simple examples for you to peruse in the Air::Play raku module (in lib/Air/Play dir)

[20:16] <discord-raku-bot> <librasteve> HARC Stack is built on Cro, Red is an optional extra for simple sites.

[20:46] *** Guest72 left
[20:51] *** Guest72 joined
[21:18] *** jjido joined
[21:19] *** abraxxa-home left
[22:00] *** arkiuat joined
[22:04] <arkiuat> I'm getting 23 identical lines from:      for -11..11 {DateTime.new("2025-05-19T17:00:00"~"%+03d".sprintf($_)).julian-date.say}

[22:05] <arkiuat> If you remove the call to .julian-date, you can see that they're definitely 23 different timezones

[22:08] <lizmat> looks like .julian-date is not taking into account the timezone of the DateTime object

[22:08] <lizmat> could you make an issue for that?

[22:20] <arkiuat> first time for everything, i guess. a rakudo issue on github, i take it?

[22:20] <lizmat> yes, please  :-)

[22:20] <lizmat> afk&

[22:21] <arkiuat> looking over CONTRIBUTING.md

[22:31] <arkiuat> issue #5884 filed. whee!

[22:56] *** lichtkind left
[23:03] *** Sgeo joined
[23:06] <lucs> arkiuat: Your nick reminds me of someone who used to hang out in #perl...

[23:49] *** Guest72 left
[23:49] *** Guest72 joined
