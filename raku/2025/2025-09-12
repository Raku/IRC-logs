[00:16] *** itaipu left
[00:27] *** itaipu joined
[01:19] *** eseyman left
[01:21] *** eseyman joined
[01:26] *** hulk joined
[01:27] *** dg left
[01:27] *** kylese left
[01:32] *** dg joined
[01:47] *** librasteve_ left
[02:15] *** hulk left
[02:15] *** kylese joined
[03:07] *** Aedil joined
[03:33] *** jmcgnh joined
[03:45] *** dgl joined
[03:47] *** dg left
[03:47] *** dgl is now known as dg

[05:32] *** rantanplan left
[05:40] *** snonux joined
[05:47] *** snonux left
[05:48] *** snonux joined
[06:38] *** apac joined
[07:37] *** wayland joined
[07:39] *** Sgeo left
[07:47] *** Aedil left
[07:48] <disbot1> <librasteve> Voldenet: my latest on FatRatStr is here https://github.com/Raku/problem-solving/issues/494#issuecomment-3284156996, I conclude that you are right and that we need to make FatRatStr for these extreme cases

[07:58] <Voldenet> nice

[08:08] <Voldenet> a bit on the topic, Posit imo is a better choice for bit-constrained fp

[08:13] <Voldenet> softPosit C implementation exists and it keeps getting more hardware support

[08:59] *** melezhik joined
[08:59] <melezhik> I have added components page, describing various components of Sparrow framework - https://sparrowhub.io/components

[09:02] *** melezhik_ joined
[09:02] <melezhik_> .

[09:07] <melezhik> also added new examples for 1) Podman/Quadlet - https://sparrowhub.io/examples#Podman/  2) Systemd - https://sparrowhub.io/examples#Systemd/

[09:15] *** melezhik left
[09:15] *** melezhik_ is now known as melezhik

[09:28] <disbot1> <simon_sibl> when using async with Supply, react, does Raku automatically dispatch the tasks on different thread ? or it all happens on the same thread and only use threads if explicitly using start or Thread ?

[09:59] <lizmat> you can check by printing $*THREAD

[09:59] <lizmat> m: say $*THREAD

[09:59] <camelia> rakudo-moar a988e79f9: OUTPUT: «Immortal Thread #1 (Initial thread)␤»

[09:59] <lizmat> m: say $*THREAD.id   # if you just want numbers

[09:59] <camelia> rakudo-moar a988e79f9: OUTPUT: «1␤»

[10:17] *** human-blip left
[10:19] *** human-blip joined
[12:26] <Voldenet> simon_sibl: I've observed that in general react blocks are executed by thread emitting to the live supply

[12:28] <Voldenet> and with channels there's no real way to control it

[12:30] <Voldenet> with channels you'll end up on default thread pool

[12:38] <disbot1> <simon_sibl> So supply for same thread Channels for thread pool

[12:38] <Voldenet> sounds about right

[12:39] <Voldenet> however I'm not sure if that's something you can count on

[12:42] <Voldenet> I mean – nowhere says that emitting thread will execute the react block, it just happens to work like that currently

[12:46] <disbot1> <antononcube> weekly: https://rakuforprediction.wordpress.com/2025/09/12/llmgraph-plots-interpretation-guide/

[12:46] <notable6> antononcube, Noted! (weekly)

[12:52] *** melezhik left
[13:10] *** wayland76 joined
[13:10] *** wayland left
[14:35] *** Sgeo joined
[15:31] *** Aedil joined
[15:33] *** melezhik joined
[15:44] *** human-blip left
[15:46] *** human-blip joined
[16:29] *** human-blip left
[16:32] *** human-blip joined
[16:48] *** wayland joined
[16:49] *** wayland76 left
[17:15] *** cryosis joined
[17:28] *** human-blip left
[17:30] *** human-blip joined
[17:43] *** melezhik left
[19:29] *** japhb left
[19:33] *** japhb joined
[20:18] *** human-blip left
[20:19] *** human-blip joined
[23:51] *** Aedil left
