[00:02] *** apac left
[00:08] *** LainIwakura left
[00:11] *** arkiuat left
[00:21] *** arkiuat joined
[00:26] *** arkiuat left
[00:30] *** Sgeo joined
[00:51] *** arkiuat joined
[00:56] *** arkiuat left
[01:15] *** arkiuat joined
[01:28] *** hulk joined
[01:29] *** kylese left
[01:48] *** Aedil joined
[02:15] *** hulk left
[02:15] *** kylese joined
[02:50] *** patrickb left
[02:50] *** patrickb joined
[03:18] *** deoac left
[03:36] *** arkiuat left
[03:45] *** kylese left
[03:49] *** arkiuat joined
[03:53] *** arkiuat left
[04:13] *** arkiuat joined
[04:18] *** arkiuat left
[04:27] *** arkiuat joined
[04:35] *** arkiuat left
[04:48] *** arkiuat joined
[04:54] *** arkiuat left
[05:07] *** arkiuat joined
[05:11] *** arkiuat left
[05:18] *** arkiuat joined
[05:23] *** arkiuat left
[05:29] *** Sgeo left
[05:35] *** arkiuat joined
[05:39] *** arkiuat left
[05:46] *** LainIwakura joined
[06:05] *** arkiuat joined
[06:09] *** arkiuat left
[06:28] *** kylese joined
[06:34] *** arkiuat joined
[06:35] *** silug left
[06:40] *** arkiuat left
[06:48] *** silug joined
[07:10] *** LainIwakura left
[07:13] *** arkiuat joined
[07:17] *** arkiuat left
[07:19] *** arkiuat joined
[07:23] *** arkiuat left
[07:25] *** LainIwakura joined
[07:35] *** lichtkind joined
[07:52] *** arkiuat joined
[07:56] *** arkiuat left
[08:10] *** arkiuat joined
[08:11] *** dakkar joined
[08:15] *** arkiuat left
[08:24] *** Manifest0 joined
[08:25] *** arkiuat joined
[08:26] <disbot4> <librasteve> melezhik: please can you ‚Äúweekly‚Äù this (i can‚Äôt do it from discord)

[08:27] <disbot4> <melezhik.> weekly: https://news.ycombinator.com/item?id=44726955 - Application less containers

[08:33] *** arkiuat left
[08:37] <lizmat> weekly: https://news.ycombinator.com/item?id=44726955

[08:37] <notable6> lizmat, Noted! (weekly)

[08:47] <guifa> two new realizations in working with nativecall

[08:48] <guifa> 1) we don't actually have a guide on how to do callbacks (there's just a stackoverflow post which feels less than optimal)

[08:49] <guifa> 2) it's possible to have a sub and a method with the same name in a class. I know why, but it still feels weird haha, but makes my life a lot easier tbh

[09:01] *** arkiuat joined
[09:04] <Voldenet> there is some guide on callbacks in https://docs.raku.org/language/nativecall (see Function arguments and Function pointers) but it isn't really exhaustive

[09:05] *** arkiuat left
[09:13] <guifa> Voldenet: yeah, but it's very brief. I think it could use some "what do things look like on the C side" / a toy example.  I thikn I can write that up this week 

[09:14] <guifa> maybe too I can turn this little adventure into a nice advent calendar post too

[09:16] *** apac joined
[09:21] *** arkiuat joined
[09:26] *** arkiuat left
[09:39] *** kaskal left
[09:44] *** kaskal joined
[09:44] *** inspork left
[09:46] *** inspork joined
[09:53] *** arkiuat joined
[09:58] *** arkiuat left
[10:07] *** melezhik joined
[10:07] <melezhik> asciinema on managing Alpine Linux with Sparrow - https://asciinema.org/a/730670

[10:07] <tellable6> 2025-07-27T03:19:47Z #raku <wayland76> melezhik Yeah, I didn't ask for the comparison to RakuDist.  Feel free to remove that part, and replace it with a comparison to chef/ansible/cfengine instead :) .  

[10:07] <tellable6> 2025-07-27T03:21:00Z #raku <wayland76> melezhik And, it sounds like the questions should be re-asked, but with Sparky as part of the mix.  My point is, these are the kinds of things that I think people visiting the Sparrow site will want to know.  

[10:08] <melezhik> added to HN as well - https://news.ycombinator.com/item?id=44732514

[10:14] *** melezhik left
[10:14] *** arkiuat joined
[10:19] *** arkiuat left
[10:24] *** Aedil left
[10:29] *** Aedil joined
[10:39] *** arkiuat joined
[10:44] *** arkiuat left
[11:17] *** arkiuat joined
[11:30] *** arkiuat left
[11:32] *** LainIwakura left
[11:38] *** arkiuat joined
[11:45] *** arkiuat left
[11:50] *** LainIwakura joined
[11:53] *** apac left
[12:10] *** arkiuat joined
[13:01] <disbot4> <antononcube> @guifa I have been looking into packages of Itsuki Toyota (titsuki) and Brian Duggan (bduggan) for using Raku's Native Call.

[13:03] <disbot4> <antononcube> I created two very important for me native-call-based packages: "Math::SparseMatrix::Native" and "Math::DistanceFunctions::Edit".

[13:04] <disbot4> <antononcube> ... more or less, following titsuki's "pattern" of Native Call utilization.

[13:20] *** LainIwakura left
[13:22] *** guifa left
[13:27] *** LainIwakura joined
[13:46] *** om joined
[13:48] *** apac joined
[13:49] *** LainIwakura left
[13:52] *** om82 joined
[13:53] *** om82 left
[13:54] *** om left
[14:04] *** LainIwakura joined
[15:02] *** cpli joined
[15:02] <cpli> heyya, thought of writing some cute offline dsp programs, and noticed Buf doesn't allow for writing num16...

[15:03] <cpli> actually the entire language seems to lack num16 is that deliberate, they appear quite often in dsp q-q

[15:06] <cpli> though i guess ffmpeg doesn't even have support for f16le‚Äîat most providing support for f32le‚Äîso maybe i should just swallow the buffer sizes

[15:22] *** librasteve_ joined
[15:31] <disbot4> <librasteve> cpli: afaik raku has not yet implemented num16, num8 and so on ‚Ä¶ actually the language is fine for it (although likely some of the alternates for very short floats will need some names) as the notion of num32, num16 implies, it‚Äôs actually a not implemented aspect I think ‚Ä¶ all the hooks such as NativeCall and coercion, even infectiousness are there ‚Ä¶ so would be a great module project

[15:32] *** LainIwakura left
[15:36] <disbot4> <antononcube> For some machine learning computationsnum16 and/or num8 are useful, because of compactness and speed when using dense vectors and matrices.

[15:40] <disbot4> <antononcube> I am not sure what would be the priority to introduce those types, though. I would say "low", except, if implementing them is a low hanging fruit.

[15:44] <cpli> librasteve, would it actually be possible to simply add those features as a module, i would have thought native data types are too intrinsic to be implemented outside the interpreter

[15:50] <cpli> antononcube, honestly currently listening to `ffmpeg -i "$m" -f s8 - | ffplay -ch_layout stereo -` and it isn't too offputting, so i'll just play around with signed bytes for a bit

[15:51] <Voldenet> maybe I'm crazy but it seems like a very low hanging fruit

[15:52] <Voldenet> it could be enough to add it to typemap in NativeCall.rakumod

[15:52] <Voldenet> and NativeHOW.nqp

[15:55] <tbrowder> .tell zorfnorf go to channel #raku-beginner and we can help better there

[15:55] <tellable6> tbrowder, I'll pass your message to zorfnorf

[15:55] <Voldenet> yeah, nevermind, it's not enough

[15:58] <Voldenet> > https://github.com/MoarVM/MoarVM/blob/b1c74b8d8f7108be7ca86b9fd4cd78b40541bef0/src/6model/reprs/P6num.c#L107

[15:58] <Voldenet> > https://github.com/MoarVM/MoarVM/blob/b1c74b8d8f7108be7ca86b9fd4cd78b40541bef0/src/6model/reprs/P6num.h#L6

[15:59] <Voldenet> it seems like low hanging fruit still, but it's not trivial

[16:15] *** LainIwakura joined
[16:17] *** apac left
[16:39] *** dakkar left
[16:46] <disbot4> <librasteve> cpli: yeah you are probably right, I as thinking that most of the stuff is there from a module - but you probably need to hook the compiler and actually add those native types as Voldenet mentions [well you could write a slang to make up your own types in a module but I'm ignoring that]

[16:49] <lizmat> Voldenet: could you make a MoarVM issue for that ?

[16:52] *** LainIwakura left
[17:03] *** LainIwakura joined
[17:05] <disbot4> <librasteve> who is the "owner" of the channel controls on the Discord Raku server? please

[17:06] <disbot4> <librasteve> [ie the admin]

[17:10] <lizmat> disbot4: help

[17:10] <lizmat> meh

[17:11] <disbot4> <antononcube> üôÇ

[17:18] <disbot4> <nahita3882> Rog

[17:26] <disbot4> <librasteve> tx

[17:27] *** kybr joined
[17:30] <disbot4> <librasteve> hi @.landyacht. i have a couple of change requests for the raku Discord server (eg remove/archive some channels to keep it lively and reduce confusion) ‚Ä¶ i suggest to make a raku discussion issue on github to encourage others to comment on my ideas and then to ask you to make the changes according to the consensus‚Ä¶ is that process ok by you

[17:33] <disbot4> <.landyacht.> Sure, that works for me

[17:34] <disbot4> <.landyacht.> Depending on the results I may apply some level of discretion, but I will try to follow the consensus as much as possible

[17:34] <disbot4> <librasteve> cool - thanks!

[17:35] <disbot4> <librasteve> will share here so that you can point our when we suggest the impossible ;-)

[17:35] *** LainIwakura left
[17:36] <arkiuat> I'm using NeoVim on MacOS more or less out-of-the-box, and it's annoying me that comment text is the same color (light blue) as variable names.  Looking at the vim.raku from https://github.com/Raku/vim-raku, I find that the syntax file makes no direct reference to any colors, but presumably hooks up with something which does and which can be edited. Any tips?

[17:36] <disbot4> <librasteve> (ie share the issue url)

[17:39] *** LainIwakura joined
[17:42] *** LainIwakura left
[17:42] <arkiuat> n/m I found the info in https://neovim.io/doc/user/syntax.html

[17:49] *** undermine left
[17:51] <arkiuat> wow, I just changed three color settings and it's SO much better :D

[18:29] <lizmat> nice reference

[19:13] *** stanrifkin joined
[19:14] *** arkiuat left
[19:19] *** arkiuat joined
[19:23] *** arkiuat left
[19:25] *** apac joined
[19:38] *** Aedil left
[19:53] *** arkiuat joined
[19:57] *** arkiuat left
[20:18] <Voldenet> lizmat: I will, but honestly I have no idea how would one express num8 in C, there's only C23 proposal for num16

[20:19] <lizmat> but wasn't it the point that some LLM software uses some representation of those tiny nums?   wouldn't that be a good start?

[20:19] <lizmat> anyway, my point was to make an issue, so it doesn't fall through the cracks

[20:19] <Voldenet> yeah, making it right now

[20:25] <disbot4> <librasteve> https://www.perplexity.ai/search/i-am-writing-a-hll-compiler-an-jnI7GKc8Tkap.bZkdhM2QA

[20:25] *** arkiuat joined
[20:28] <disbot4> <librasteve> looks like there is a need to distinguish between vector types (eg. CUDA shader float4) and regular (ie scalar) types ... I expect with Raku that the vectors are out of scope in the absence of a big extension (think PDL)

[20:28] *** inspork_ joined
[20:30] *** inspork left
[20:30] *** inspork_ is now known as inspork

[20:37] <Voldenet> I hope I didn't miss anything discussed before https://github.com/MoarVM/MoarVM/issues/1951

[21:30] *** arkiuat left
[21:42] *** arkiuat joined
[21:47] *** arkiuat left
[22:09] *** lichtkind left
[22:13] *** stanrifkin left
[22:14] *** arkiuat joined
[22:18] *** apac left
[22:19] *** arkiuat left
[22:20] *** guifa joined
[22:35] *** Sgeo joined
[22:38] *** arkiuat joined
[22:43] *** arkiuat left
[22:52] *** arkiuat joined
[23:08] *** librasteve_ left
[23:13] <arkiuat> one of the things I wish I had learned earlier than I did was that .keys and .kv can be applied to arrays to get the indices. It certainly makes it easier to switch back and forth between array and hash when trying different things out

[23:25] <arkiuat> m: my IntStr $l = 5

[23:25] <camelia> rakudo-moar 5e8d7f656: OUTPUT: ¬´Type check failed in assignment to $l; expected IntStr but got Int (5)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[23:25] <arkiuat> m: my IntStr $l = "5"

[23:25] <camelia> rakudo-moar 5e8d7f656: OUTPUT: ¬´Type check failed in assignment to $l; expected IntStr but got Str ("5")‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[23:25] <arkiuat> Is it just not possible to assign to IntStr or other Allomorphs?

[23:26] <arkiuat> oh wait, there's an IntStr.new method but it doesn't seem to be documented?

[23:27] <arkiuat> oh wait, it is documented. I was looking in Allomorph's docs and not IntStr's, sorry

[23:28] <arkiuat> so that answers my earlier question

