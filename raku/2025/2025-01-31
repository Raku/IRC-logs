[00:02] <Geth> ¦ raku.org/main: c2b918f849 | (Will Coleda)++ | source/community/irc/index.html

[00:02] <Geth> ¦ raku.org/main: Remove reference to old bot.

[00:02] <Geth> ¦ raku.org/main: 

[00:02] <Geth> ¦ raku.org/main: Closes #230

[00:02] <Geth> ¦ raku.org/main: review: https://github.com/Raku/raku.org/commit/c2b918f849

[00:37] <[Coke]> ab5tract: can you provide a new oneliner for comma at https://raku.org/whatever/ ?

[00:42] <timo> tbrowder: could be stale precompilation files causing that problem. it looks like the code is trying to re-bless a Signature to a Stash, which to me feels like the wrong kind of object coming out of a serialized blob

[01:14] *** yewscion joined
[01:17] *** yewscion left
[01:27] <tbrowder> hm, i’ll try removing .precomp and see what happens…

[01:34] *** yewscion joined
[01:36] *** yewscion left
[01:38] *** Sgeo left
[01:44] *** Sgeo joined
[01:59] <Geth> ¦ raku.org: coke self-assigned Don't depend on abandoned Mowyw module https://github.com/Raku/raku.org/issues/174

[02:01] <tbrowder> timo: good suggestion, i got past the error, thank you!

[02:20] *** ulipink joined
[02:21] *** kylese left
[02:21] *** hulk joined
[02:26] *** Sgeo left
[02:29] *** Sgeo joined
[03:15] *** human-blip left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:16] *** human-blip joined
[03:31] *** jpn joined
[03:35] *** jpn left
[03:37] *** yewscion joined
[03:41] *** yewscion left
[03:43] *** yewscion joined
[03:46] *** yewscion left
[03:48] *** yewscion joined
[03:52] *** yewscion left
[04:12] *** yewscion joined
[04:17] *** yewscion left
[04:47] *** yewscion joined
[04:49] *** yewscion left
[04:51] *** human-blip left
[04:53] *** human-blip joined
[04:57] *** yewscion joined
[04:58] *** jpn joined
[05:00] *** yewscion left
[05:02] *** jpn left
[05:16] *** yewscion joined
[05:18] *** yewscion left
[05:24] *** guifa left
[05:46] *** yewscion joined
[05:50] *** yewscion left
[05:58] *** yewscion joined
[06:02] *** yewscion left
[06:27] *** ulipink left
[06:41] *** jmcgnh left
[06:42] *** jmcgnh joined
[07:08] *** Aedil joined
[07:22] *** yewscion joined
[07:27] *** yewscion left
[08:19] *** jpn joined
[08:28] <ab5tract> [Coke]: I think that’s better done once we release to the marketplace

[08:38] *** jpn left
[08:46] *** jpn joined
[09:00] *** merpp joined
[09:02] *** merp left
[09:04] *** jpn left
[09:12] *** Sgeo left
[09:24] *** jpn joined
[10:00] *** eseyman left
[10:05] *** manu_ joined
[10:05] *** manu_ is now known as eseyman

[10:11] *** sena_kun joined
[11:12] *** sena_kun left
[12:26] *** ilogger2 left
[12:26] *** ilogger2_ joined
[12:45] <tbrowder> hi, i'm looking for a pointer to the community version of commaide. the link on raku.org points to the original edument version.

[12:47] <tbrowder> i know it's in work but imho i think there should be a link to any public code.

[12:51] <lizmat> ab5tract ^^

[12:52] <lizmat> I believe: https://github.com/ab5tract/comma-plugin/releases/tag/2024.3-beta.1

[12:52] <lizmat> (from the Raku 2024 Review)

[12:52] <ab5tract> That’s the one!

[12:53] <ab5tract> Will try and get this released and integrated into IntelliJ marketplace during February

[12:53] <ab5tract> tbrowder: note that there is no standalone version anymore

[13:17] <[Coke]> ab5tract: I understand it's not in it's final form yet but the current description there is wrong. ... but if it's fixed by february, that's not far. Thanks.

[13:17] <[Coke]> s/by/in/

[13:27] *** Aedil left
[13:38] *** Aedil joined
[14:01] <tbrowder> thnx

[14:04] <tbrowder> is the community edition of intellij good enough to run it?

[14:28] <[Coke]> anyone looking for a raku programming task that would help out a bit: https://github.com/Raku/doc/issues/4509 - convert one http client to another to get rid of a dependency

[14:28] *** yewscion joined
[14:42] *** Sgeo joined
[14:57] <[Coke]> anyone have any comments on git fsck errors here: https://github.com/Raku/raku.org/issues/50 ? Not a fan of rewriting all the historical SHAs to avoid it

[15:12] <[Coke]> ... though losing historical sha on the website repo is _probably_ fine

[15:12] <discord-raku-bot> <antononcube> This is impressive:  https://codegolf.stackexchange.com/a/185311

[15:13] <discord-raku-bot> <antononcube> I have idea how that Perl6 / Raku code works, but it seems to produce correct results for a few Gaussian integers I tried.

[15:31] <discord-raku-bot> <antononcube> Well, Grok helped understanding that code -- again, impressive "Raku terseness" utilization.

[16:30] *** yewscion left
[16:39] *** yewscion joined
[17:52] *** msiism joined
[18:01] <msiism> lizmat: re: REPL commands: Could you give an example of a Raku command colliding with a Rakudo REPL command?

[18:01] <lizmat> well, in the current repl, there is no "exit" command

[18:01] <lizmat> when you type "exit" it just executes the "exit" command

[18:02] <lizmat> if you have happened to define your own "exit" sub in the REPL

[18:02] <lizmat> you can't exit with that

[18:03] <msiism> And this couldn't be the case with `=quit`?

[18:03] *** snonux joined
[18:04] <lizmat> no, because you can't have a sub with the name "=quit"

[18:04] <msiism> I see.

[18:04] <lizmat> well, never say never, but you would have to get into meta-programming land to create such a sub

[18:05] <lizmat> and by that time, I'd say it's a case of DIHWIDT

[18:06] <msiism> I see.

[18:07] <msiism> I've just been looking at the Racket REPL. It use `,<command>` for REPL commands.

[18:07] <msiism> Any particular reason you'd use `=`?

[18:11] <lizmat> the reason for = is that you'd generally would enter commands from the beginning of the prompt

[18:11] <lizmat> and lines that start with "=" are considered to be RakuDoc specifications in Raku

[18:12] <lizmat> and since  you most like would not be writing RakuDoc inside a REPL, it felt like a good candidate for an "escape" key

[18:12] <lizmat> m: =foo

[18:12] <camelia> rakudo-moar b2198d9e1: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Preceding context expects a term, but found infix = instead.␤Did you make a mistake in Pod syntax?␤at <tmp>:1␤------> =foo<HERE><EOL>␤»

[18:14] <msiism> Okay, that makes sense.

[18:14] <lizmat> also, the equal sign is used a lot in code, so it probably is at an easily reachable location on the keyboard

[18:15] <msiism> Well, some people, like me, do have to hit Shift to type it. But that's really a very minor issue.

[18:16] <lizmat> well, I'm open to suggestions  :-)

[18:17] *** jpn left
[18:17] <msiism> I have a feeling I'm not exactly qualified to make suggestions here. So, FWIW, let me just say that the comma doesn't require me to hit Shift.

[18:22] <lizmat> right

[18:23] <lizmat> but in Raku, since the REPL allows expressions over multiple lines, a comma at the start of the line is **not** by definition an error

[18:25] <msiism> I see.

[18:33] <lizmat> although you could argue that's also the case for =

[18:33] <lizmat> but that feels less likely, as some people like their lists with the commas before the value, and some after

[18:53] *** MyNetAz left
[18:56] *** yewscion left
[18:58] *** yewscion joined
[19:02] <msiism> Okay, so `=` is probably the way to go then.

[19:08] *** MyNetAz joined
[19:24] *** jdv left
[19:26] *** apac joined
[19:36] *** jdv joined
[19:41] *** sena_kun joined
[20:13] <discord-raku-bot> <antononcube> @msiism Are you "new" to Raku?

[20:30] <msiism> Yes, currently going through the Raku Course. So, I know some basics.

[20:42] <discord-raku-bot> <antononcube> Please, consider using VS Code with Raku -- both scripts and notebooks. If you install the one of the Jupyther notebook packages, you can "keep track" of your course examples or homework.

[20:43] <Geth> ¦ docker: bf7a27f54b | (Anton Oks)++ (committed using GitHub Web editor) | README.md

[20:43] <Geth> ¦ docker: README.md: Delete stale link

[20:43] <Geth> ¦ docker: review: https://github.com/Raku/docker/commit/bf7a27f54b

[20:50] <msiism> Hm… I'm actually reasonably pleased with using Nano for plain text editing.

[20:58] <ab5tract> antononcube: VS Code > IntelliJ for you these days?

[21:22] *** Aedil left
[21:23] <discord-raku-bot> <antononcube> IntelliJ for writing, maintaining, and documenting Raku packages. VSCode for Jupyter (Raku) notebooks. Occasionally, for Raku scripts.

[21:24] <discord-raku-bot> <antononcube> I would say, Raku-wise, I spent most of the time in IntelliJ. But also spent fair amount of time using Raku-chatbooks in VSCode.

[22:23] *** apac left
[22:26] <xinming> When I make move a raku program into docker container, Each time the app starts, It'll compile a lot of modules before start. What is the right way to let the raku compile all files in a directly?   with something like `find -type f -name '*.raku*' -exec raku {} \;` doesn't seem to be right

[22:29] *** guifa joined
[22:33] <timo> is the program a proper module? then you can "zef install" it, which will also include precompilation i assume

[22:42] *** sena_kun left
[23:12] *** sena_kun joined
[23:15] *** sena_kun left
[23:27] *** yewscion left
[23:28] *** DarthGandalf left
[23:29] *** DarthGandalf joined
[23:38] <ugexe> you would want to load each module using the same include paths you would when running the app

[23:38] <ugexe> for example if you are running your app via `raku -I. bin/foo` then you could do something like `raku -I. -e 'use Test; use-ok($_) for Distribution::Path.new($*CWD).meta<provides>.keys'`

[23:42] <ugexe> slightly simplified: `raku -I. -e 'for Distribution::Path.new($*CWD).meta<provides>.keys { require ::($_) }'`

[23:55] *** msiism left
