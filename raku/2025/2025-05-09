[00:25] *** guifa_ joined
[00:25] *** guifa_ left
[01:07] *** hulk joined
[01:08] *** kylese left
[01:10] *** topnep left
[01:11] *** topnep joined
[02:15] *** hulk left
[02:15] *** kylese joined
[03:10] *** gabiruh left
[03:11] *** gabiruh joined
[03:15] *** topnep left
[03:15] *** topnep joined
[03:38] *** _________ left
[03:45] *** kylese left
[03:48] *** kylese joined
[04:04] *** _________ joined
[04:12] *** guifa left
[04:31] *** gordonfish left
[04:31] *** gordonfish joined
[04:52] *** Aedil joined
[05:19] *** topnep left
[05:21] *** topnep joined
[06:16] *** gordonfish left
[06:16] *** gordonfish joined
[06:40] *** apac joined
[07:22] *** apac left
[07:25] *** topnep left
[07:26] *** topnep joined
[07:29] *** Sgeo_ left
[07:45] *** wayland76 joined
[07:51] <wayland76> [Coke]: I've been using "zef --depends --build-depends --test-depends install ." and it installs the package as well.  If I leave out the '.' it throws a usage message.  The usage message indicates that the . is optional.  

[07:51] <tellable6> 2025-05-08T23:40:30Z #raku <japhb> wayland76 The --depends option, I believe

[07:51] <tellable6> 2025-05-08T23:58:13Z #raku <[Coke]> wayland76 zef install --deps-only .

[07:52] <wayland76> Oh, --deps-only -- I missed that comment.  

[07:53] *** sjm_ joined
[07:55] <wayland76> Yeah, that works.  Thanks!  

[08:28] *** lichtkind joined
[08:39] *** lizmat left
[10:04] *** sjm_ left
[10:13] *** sjm_ joined
[11:14] *** donaldh left
[11:28] <ab5tract> Does anyone have experience building a modern PWA that is entirely intended to run on locally?

[11:29] <ab5tract> Or should I just stop fighting and use Electron?

[11:36] *** topnep left
[11:39] *** topnep joined
[11:43] *** topnep left
[11:43] *** cmburn1 joined
[11:43] *** topnep joined
[11:45] *** cmburn left
[11:51] *** Guest18 joined
[11:51] *** lichtkind left
[12:32] *** apac joined
[13:04] <[Coke]> ./win 13

[13:08] *** apac left
[13:10] *** sjm_ left
[14:13] *** lichtkind joined
[14:20] *** apac joined
[14:46] *** PaulW2U joined
[14:46] *** apac left
[14:57] *** apac joined
[15:08] *** Sgeo joined
[15:18] *** apac left
[16:39] *** wayland76 left
[16:40] *** wayland76 joined
[16:42] <[Coke]> kicked off a 3d print job with filament that is colored/textured like wood.

[16:42] <[Coke]> ... it smells like a firestarter when printing.

[16:42] <[Coke]> is there actually *wood* in here? wtf.

[16:44] <discord-raku-bot> <coranila> according to google, yes, wood filament contains 15% wood

[16:44] <tellable6> 2025-05-08T09:31:04Z #raku <wayland76> coranila Thanks!  

[16:45] <discord-raku-bot> <coranila> kinda makes sense too; lignin and cellulose don't really mind the temperatures most FDM printers print at; inventing synthetic wood-likes seems harder

[17:00] *** apac joined
[17:21] *** apac left
[18:10] *** melezhik joined
[18:10] <melezhik> weekly: https://sparrowdo.wordpress.com/2025/05/09/sparky-distributed-jobs-flow/

[18:10] <notable6> melezhik, Noted! (weekly)

[18:11] <melezhik> if someone would read this I'd appreciate any feedback ( typos, logical flaws, style improvements, whatever ) - thanks

[18:12] *** melezhik left
[18:28] *** lizmat joined
[18:30] *** lizmat left
[18:31] *** lizmat_ joined
[18:49] *** apac joined
[19:06] <Voldenet> ab5tract: I have and indexedDB is surprisingly good api

[19:07] *** wayland joined
[19:07] *** wayland76 left
[19:08] <Voldenet> but electron apps don't suffer from many problems – they don't get suspended, they don't share thread with js scripts on other pages

[19:11] <Voldenet> if you design it well (with typescript's interfaces), you can share a lot of the code between environments

[19:15] *** abraxxa-home joined
[19:18] *** stanrifkin joined
[19:30] *** abraxxa-home left
[19:30] *** Guest18 left
[19:31] *** Aedil left
[20:09] *** abraxxa-home joined
[20:10] <discord-raku-bot> <melezhik.> Also cross posted this to HN - https://news.ycombinator.com/item?id=43939889 , please vote if you like , thanks

[20:16] *** lizmat_ left
[20:17] *** lizmat joined
[21:22] *** Xliff joined
[21:22] <Xliff> \o

[21:23] <Xliff> Is anyone now using RakuAST in any of their own projects?

[21:26] <[Coke]> 12

[21:37] *** abraxxa-home left
[21:45] <Xliff> [Coke] - You have 12 projects using RakuAST?

[22:00] <wayland> melezhik: 2 problems.  1. The first paragraph in the Sparrow Integration section contains a run-on sentence.  Either split into multiple sentences, or use other punctuation (semicolons, em-dashes), or both.  

[22:01] <wayland> 2. The text is pretty clear, but the diagram isn't.  In the first diagram, I get the first line, but not sure what the rest are doing.  

[22:02] <wayland> In the second diagram, it's not clear what all the parts inside "node i" are doing.  Nor is it clear how the tasks relate to the Sparrowhub repo.  

[22:02] <wayland> Might be worth asking an AI to turn them into UML SVG diagrams, and then see if they make sense that way.  

[22:03] <wayland> (I mentioned UML because it's conventionalised, so it's easier to understand what's going on, since it's familiar)

[22:03] <wayland> Maybe tell the AI to ask you clarifying questions as well.  

[22:04] <[Coke]> Xliff: ww

[22:04] <wayland> Xliff: Yes-and-no.  I'm using the RakuAST branch because it fixes bugs that annoy me, but I'm not using the actual RakuAST for anything yet.  

[22:05] <wayland> I tried building Signatures with it manually at one point, but ran into a bug doing that, and haven't gone back to it.  

[22:06] <wayland> The Signatures effort was part of a Logic Programming idea that's probably 3rd or 4th on the list (after Table-Oriented Programming and Tree-Oriented Programming).  

[22:11] *** cmburn1 left
[22:24] *** lichtkind left
[22:32] <Xliff> weyland: So is signature creation still borked?

[22:33] <Xliff> Because I would love a way to make reusable signatures for NativeCall function pointers.

[22:37] <Xliff> Yeah... so why can't you use a Signature in a sub declaration?

[22:37] <Xliff> m: use NativeCall; my $s = :(uint32, num64, Pointer); $s.^name.say; sub mySub ($s) { ... };

[22:37] <camelia> rakudo-moar bb0857c8b: OUTPUT: «Signature␤»

[22:38] <Xliff> That doesn't work because the original definition of $s is no longer in scope.

[22:38] <Xliff> Hence my desire to see if I can get it working via RakuAST

[22:46] *** lizmat left
[22:47] <wayland> Xliff: https://github.com/rakudo/rakudo/issues/5591

[22:47] <timo> at the very least it would have to be a constant rather than a lexical variable

[22:47] <wayland> I haven't tested in nearly a year now, so it may work.  

[22:49] <wayland> I'd like to put Signatures on tables at some point (so that people can only push in correct data), but haven't gotten there yet.  

[22:53] <Xliff> Nope. Not fixed.

[22:53] <timo> how are you trying to use it?

[22:54] <Xliff> timo: Running the given code

[22:54] <timo> ah, that is never going to work like that though

[22:54] <timo> you're just declaring a sub that takes an argument and calls it $s

[22:54] <timo> the $s in that spot isn't related to the $s from outside

[22:54] <Xliff> Oh, I know that. I'm talking about weyland's from 5591

[22:55] <Xliff> I'm thinking the only way my thing is going to work is if I send it through RakuAST.

[22:55] <Xliff> Then I can feed the signature through the sub declaration nodes.

[23:02] <timo> ah

[23:13] *** lichtkind joined
[23:18] <SmokeMachine> m: say [1,2,3] ~~ [*,*,*] # if this is true...

[23:18] <camelia> rakudo-moar bb0857c8b: OUTPUT: «True␤»

[23:19] <SmokeMachine> m: say %(:bla("1"), :ble("2")) ~~ %(:bla(*), :ble(*)) # should this also be true?

[23:19] <camelia> rakudo-moar bb0857c8b: OUTPUT: «False␤»

[23:23] <timo> there doesn't seem to be a behaviour of ACCEPTS for Map - Map

[23:24] <timo> m: say <bla ble> ~~ %(:bla(*), :ble(*));

[23:24] <camelia> rakudo-moar bb0857c8b: OUTPUT: «True␤»

