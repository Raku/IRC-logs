[00:00] *** apac left
[00:01] *** erry joined
[00:02] <erry> i may have stayed up too late and got cursed ideas

[00:02] <erry> and became a perl^w raku developer

[00:02] <erry> but this looks the kind of language where i could use to make my own thing?

[00:02] <erry> liek say i wanted to rename 'if' statements and make it not english 

[00:02] <erry> mwhahah

[00:03] <erry> i feel like i should be able to do it but chatgpt is useless at this stuff

[00:03] <erry> got to become a raku dev, not enough examples for chatgpt to replace

[00:16] *** tjr left
[00:18] *** DarthGandalf left
[00:20] *** DarthGandalf joined
[00:21] <disbot1> <antononcube> @err Use the prompt "CodeWriterX" -- it produces good / workable Raku code reliably.

[00:22] <ugexe> https://github.com/rakudo/rakudo/blob/94457945e4f87130656380bf6103d0a03197308d/lib/RakuAST/L10N.rakumod#L818

[00:23] <ugexe> also see https://dev.to/finanalyst/creating-a-new-programming-language-draig-503p

[00:23] <ugexe> for creating non-english syntax

[00:45] <erry> oh

[00:45] <erry> https://gist.github.com/errietta/601c3ccef002c594c92c83db0d09e477

[00:45] <erry> lel

[00:45] <erry> so i shouldnt have done it like that

[00:45] <erry> D:

[00:46] <erry> z.

[00:54] *** guifa_ joined
[00:55] <disbot1> <antononcube> Looks interesting, for sure.

[00:55] *** guifa left
[00:58] <ugexe> https://github.com/Raku/L10N/tree/main/localizations

[00:59] <ugexe> https://github.com/finanalyst/rakuast-L10N-JA even

[01:01] <erry> :(

[01:01] <erry> ok i check that

[01:02] <erry> nice

[01:02] <erry> i can learn japanese that way

[01:02] <erry> very efficienet

[01:02] <erry> i pass the n1 in no time like that

[01:02] <erry> i'll become very jouzu

[01:02] <erry> ew

[01:04] <Geth> ¦ examples/docker-build-actions: 5e2a54a886 | (Coleman McFarland)++ | .github/workflows/build-docker.yml

[01:04] <Geth> ¦ examples/docker-build-actions: Add GHA workflow to build and push docker container

[01:04] <Geth> ¦ examples/docker-build-actions: 

[01:04] <Geth> ¦ examples/docker-build-actions: Still need to add secrets to the Repo's backend to make the push work.

[01:04] <Geth> ¦ examples/docker-build-actions: review: https://github.com/Raku/examples/commit/5e2a54a886

[01:05] <Geth> ¦ examples: dontlaugh++ created pull request #103: Add GHA workflow to build and push docker container

[01:05] <Geth> ¦ examples: review: https://github.com/Raku/examples/pull/103

[01:07] <tbrowder> hi [Coke] thnx

[01:12] *** yewscion joined
[01:16] *** yewscion left
[01:45] *** hulk joined
[01:45] *** kylese left
[01:52] *** yewscion joined
[01:56] *** yewscion left
[01:58] *** yewscion joined
[02:03] *** yewscion left
[02:15] *** hulk left
[02:15] *** kylese joined
[02:19] *** yewscion joined
[02:24] *** yewscion left
[02:41] *** yewscion joined
[02:46] *** yewscion left
[03:09] <SmokeMachine> weekly: https://dev.to/fco/deps-453b

[03:09] <notable6> SmokeMachine, Noted! (weekly)

[03:09] <SmokeMachine> Voldenet: https://dev.to/fco/deps-453b

[03:30] *** stanrifkin_ joined
[03:33] *** stanrifkin left
[03:45] *** kylese left
[03:48] *** kylese joined
[04:16] *** Aedil joined
[04:28] *** human-blip left
[04:34] *** human-blip joined
[05:04] *** yeahitsme joined
[05:43] <Voldenet> SmokeMachine: `:priority<deffer>` probably typo

[05:44] <Voldenet> but that's a nice post

[06:41] *** yewscion joined
[06:46] *** yewscion left
[07:45] *** apac joined
[08:13] *** apac left
[08:45] *** Aedil left
[08:53] *** librasteve_ joined
[08:54] *** lizmat left
[08:56] *** lizmat joined
[08:59] <disbot1> <librasteve> o/

[08:59] *** Aedil joined
[09:04] <lizmat> librasteve ToyJeansEnableHardly

[09:05] *** Guest43 joined
[09:05] *** Guest43 left
[09:05] <disbot1> <librasteve> 2 mins

[09:06] *** mozambique joined
[09:10] <mozambique> hello

[09:16] *** mozambique left
[09:30] <[Coke]> 'allo

[09:34] *** abraxxa-home joined
[10:07] <Geth> ¦ raku.org/main: b2ac305d23 | (Will Coleda)++ | source/fun/index.html

[10:07] <Geth> ¦ raku.org/main: Remove cafepress, the link is dead.

[10:07] <Geth> ¦ raku.org/main: review: https://github.com/Raku/raku.org/commit/b2ac305d23

[10:33] *** lichtkind joined
[10:43] *** apac joined
[11:23] <wayland> Hi all, but especially librasteve_ : I've done a bit of an analysis of what we should have conversion guides for.  My idea is that the new raku.org page will provide a pathway into a series of guides, but then the guides themselves will live in the doco.  See https://github.com/librasteve/raku-org-25-proto/issues/7 for what I've put together.  

[11:30] <wayland> In particular, people interested in the hARC stack (Red, Cro, etc) will be interested in the Web Frameworks section, and melezhik will be interested in the System/Configuration Management section.  

[11:46] *** Sgeo left
[12:48] <disbot1> <librasteve> wayland: thanks … i’ll go and take a look

[13:14] <tbrowder> hi, if i have a string: ,

[13:15] <tbrowder> string: ':type("name")'

[13:16] <tbrowder> whats the easy way to convert it to a pair?

[13:17] <tbrowder> m: my $s = ':type("name")'; say $s. ^name

[13:17] <camelia> rakudo-moar 3dad1a55a: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unsupported use of .  to concatenate strings.  In Raku please use: ~.␤at <tmp>:1␤------> my $s = ':type("name")'; say $s.<HERE> ^name␤»

[13:18] <tbrowder> erg, spaces..

[13:19] <tbrowder> m: my $s = ':type("name")'; say $s.^name

[13:19] <camelia> rakudo-moar 3dad1a55a: OUTPUT: «Str␤»

[13:21] *** apac left
[13:24] <tbrowder> m: my $s = "\:key\(\"value\"\)";  say $s.^name; my %h = %($s); say %h.^name

[13:24] <camelia> rakudo-moar 3dad1a55a: OUTPUT: «Str␤Odd number of elements found where hash initializer expected:␤Only saw: ":key(\"value\")"␤  in block <unit> at <tmp> line 1␤␤»

[13:26] <tbrowder> i can do the trick a small piece at a time, but is there golfish way to do it?

[13:32] <timo> m: say val(Q[:key("value")]).raku

[13:32] <camelia> rakudo-moar 3dad1a55a: OUTPUT: «":key(\"value\")"␤»

[13:32] <timo> mhm, that's just the string

[13:35] <timo> i don't think we have something easily accessible that's not "toss the full raku language parser at it" at the moment

[13:36] <lucs> m: my $x = EVAL ':K("V")'; print $x.key, $x.value   # If EVAL is acceptable.

[13:36] <camelia> rakudo-moar 3dad1a55a: OUTPUT: «KV»

[13:38] <disbot1> <librasteve> yeah - I think EVAL is good, or you could roll a mini Grammar

[13:39] <timo> i would really not suggest EVAL :)

[13:39] <Geth> ¦ examples: b5598e1c29 | (Will Coleda)++ | t/000-check-dependencies.t

[13:39] <Geth> ¦ examples: This test just verifies deps are installed.

[13:39] <Geth> ¦ examples: 

[13:39] <Geth> ¦ examples: Duplicative of info in 'zef install --deps-only .'.

[13:39] <Geth> ¦ examples: review: https://github.com/Raku/examples/commit/b5598e1c29

[13:39] <Geth> ¦ examples: 3fac5104f5 | (Will Coleda)++ | README.md

[13:39] <Geth> ¦ examples: Note site is being archived

[13:39] <Geth> ¦ examples: 

[13:39] <Geth> ¦ examples: Part of #104

[13:39] <Geth> ¦ examples: review: https://github.com/Raku/examples/commit/3fac5104f5

[13:41] <Geth> ¦ raku.org/main: 71183b1573 | (Will Coleda)++ | source/index.html

[13:41] <Geth> ¦ raku.org/main: Remove link to stale examples site

[13:41] <Geth> ¦ raku.org/main: review: https://github.com/Raku/raku.org/commit/71183b1573

[13:41] <timo> we don't have a way to "parse this but don't run any code", neither for the old raku grammar and the RakuAST grammar

[13:52] <tbrowder> how about using RakuAST?

[13:54] <timo> what i just said :)

[13:54] <timo> m: use experimental :rakuast; Q[:value(my constant LOL = say "owned")].AST.raku.say

[13:54] <camelia> rakudo-moar 3dad1a55a: OUTPUT: «owned␤RakuAST::StatementList.new(␤  RakuAST::Statement::Expression.new(␤    expression => RakuAST::ColonPair::Value.new(␤      key   => "value",␤      value => RakuAST::Circumfix::Parentheses.new(␤        RakuAST::SemiList.new(␤         …»

[13:55] <disbot1> <antononcube> weekly: https://rakuforprediction.wordpress.com/2025/06/07/llm-function-calling-workflows-part-2-googles-gemini/

[13:55] <notable6> antononcube, Noted! (weekly)

[13:56] *** abraxxa-home left
[13:56] <tbrowder> yes, i was slow typing and didn't see yrs until i hit return :-(

[13:59] *** abraxxa-home joined
[14:01] <tbrowder> cool! but i'll do it my own pick-apart way for now: thanks timo

[14:26] *** yewscion joined
[14:33] *** yewscion left
[14:36] *** abraxxa-home left
[14:37] *** yewscion joined
[14:42] *** yewscion left
[14:59] *** yewscion joined
[15:04] *** yewscion left
[15:04] *** yewscion joined
[15:08] *** yewscion left
[15:16] <disbot1> <davidromero55> Hi, im working in a personal project and get something confusing, Why can not declare class Foo::Bar {} inside Foo/Bar.rakumod ?    or just declade class Bar {} and use as Foo::Bar.new?

[15:22] <[Coke]> The first one should work, no?

[15:22] <timo> there's an important difference between "what do i put after `use`" and "what do i get after i use `use`"; the location of the file tells you what you "use", and what's in it decides what you get from it

[15:23] <timo> you will need to have that class exported or "our" scoped for it to show up after you "use" it

[15:23] <[Coke]> The second does not, the file name doesn't fixup the 

[15:23] <[Coke]> ... class name automagically

[15:25] <disbot1> <davidromero55> I finally get the problem, It work as class Foo::Bar {} but for some reason the Raku VS Code plugin is showing an error "Syntax: Redeclaration of symbol 'Foo::Bar'".  In the compiler it runs....

[15:26] <disbot1> <antononcube> I was going to ask about that -- what editor / IDE are you using>

[15:27] <disbot1> <antononcube> Better use IntelliJ for Raku package programming. I use VSCode with Raku a lot, but that is only for research projects.

[15:28] *** vrurg left
[15:28] <disbot1> <davidromero55> O thanks I going to try with IntelliJ

[15:29] <disbot1> <davidromero55> did you use Comma IDE or  IntelliJ base Ide?

[15:30] <disbot1> <antononcube> I use both now. But Comma IDE is obsolete.

[15:31] <disbot1> <antononcube> Use a recent IntelliJ with this Raku plugin: https://github.com/ab5tract/comma-plugin

[15:37] *** yewscion joined
[15:38] *** vrurg joined
[15:42] *** yewscion left
[15:57] *** wayland76 joined
[15:58] *** wayland left
[15:59] *** yewscion joined
[16:04] *** yewscion left
[16:04] *** yewscion joined
[16:09] *** yewscion left
[16:26] *** yewscion joined
[16:30] *** yewscion left
[16:48] *** yeahitsme left
[16:51] *** yewscion joined
[16:54] *** apac joined
[16:56] *** yewscion left
[16:58] *** yewscion joined
[17:02] *** yewscion left
[17:04] *** yewscion joined
[17:10] *** yewscion left
[17:26] *** apac left
[17:30] *** yewscion joined
[17:40] *** yewscion left
[18:20] *** yewscion joined
[18:24] *** yewscion left
[18:27] *** yewscion joined
[18:31] *** yewscion left
[18:37] *** lizmat left
[18:39] *** lizmat joined
[18:53] *** yewscion joined
[18:57] *** yewscion left
[18:59] *** yewscion joined
[19:04] *** yewscion left
[19:12] *** Sgeo joined
[19:19] *** yewscion joined
[19:31] *** yewscion left
[19:34] *** yewscion joined
[19:41] *** yewscion left
[20:04] *** yewscion joined
[20:09] *** yewscion left
[20:26] <erry> does anybody actually use raku at work

[20:26] <erry> i was a perl dev a looooong time ago

[20:26] <erry> but there's not really perm jobs, i jumped to save my career

[20:26] <erry> but my career eventually deaded anyway

[20:26] <erry> nod

[20:28] <disbot1> <antononcube> @erry Yeah. I answered similar question a few weeks ago here.

[20:28] <disbot1> <librasteve> i use raku at work ... this is the most useful thing I have said https://rakujourney.wordpress.com/2024/11/13/raku-perl-a-reconciliation/

[20:29] <erry> why llm prompt engineering specifically

[20:29] <erry> i mean you can do that in any language

[20:30] <erry> it's jjust an api call to <insert your favourite toy>

[20:31] <disbot1> <librasteve> <<DSLLM>>

[20:32] <disbot1> <librasteve> raku Grammars are fantastic for Domain Speciifc Languages (aka Slangs) ... and LLMs are language machines

[20:33] <disbot1> <librasteve> thus DSLLMs (DSLs + LLMs)

[20:33] <disbot1> <antononcube> @erry For "why doing LLM with Raku?" see "LLM::Functions" and/or "Jupyter::Chatbook".

[20:33] <disbot1> <antononcube> Raku provides a more "uniform" LLM experience.

[20:34] <erry> oh my god the flowchart

[20:34] <disbot1> <librasteve> like a lot of things, if you match the power of the (prompt engineering) tool to the challenges of the (LLM) services you can get the best automation ... "impedance matching"

[20:35] <erry> huh

[20:35] <erry> th ellm stuff is .. something

[20:36] <disbot1> <librasteve> "My God, it's full of stars."

[20:38] <disbot1> <antononcube> @erry As I menttioned I am repeating myself here: (1) I use Raku for different work-related projects. (2) Half of the time the employers/clients do not know (or care) that I have implemented the functionalities in Raku. (3) I use the Raku-LLM functionalities for supporting other my use of other programming language and/or forming or analyzing documents.

[20:41] <disbot1> <antononcube> At this point Raku is good for exploratory data analysis with datasets that have, say, less than 50k rows.

[20:43] <disbot1> <antononcube> Most of the Raku programmers claim that Raku's CLI is excellent for making shell scripts. (I sort of agree, but "docopt" has made CLI in many programming languages easy.)

[20:48] *** yewscion joined
[20:48] <erry> yes 

[20:48] <erry> i c

[20:49] <erry> uh

[20:49] <erry> so you can have your pre-written prompts and call them as functions

[20:50] <erry> it's kinda like langchain?

[20:50] *** apac joined
[20:50] <erry> i have to learn that

[20:51] <disbot1> <antononcube> Right. "LLM::Prompts" also facilitates the declaring and usage of "local" prompts.

[20:51] <erry> i c ic 

[20:51] <erry> every job ad now has 'langchain experience'

[20:51] <erry> it's ridiculous. it's been out for like 3 years

[20:52] <erry> I can learn it on my free time but if my job wasn't using it, it wasn't using it

[20:52] <erry> how am i supposed to make work experience out of nowhere!

[20:52] <erry> grbml.

[20:52] <erry> grmbl.

[20:52] <[Coke]> Yah, that was always an issue for me when I was consulting. Much easier now that I'm in a long term gig.

[20:52] *** yewscion left
[20:55] <erry> [Coke]: nah i'm talking perm roles

[20:55] <erry> the job market is LOL at the moment

[20:55] <erry> you need to match the keywords 100% and then also drop your salary expectations down to as close to £0 as possible

[20:55] <erry> >_>

[20:56] <erry> and while you're at it possibly offer to do sexual favours to the hiring manager i guess

[20:56] <erry> can't hurt

[20:56] <erry> sigh

[20:56] <erry> also what's a long temr gig

[20:56] * erry laughs at tech redundancies every year

[20:57] <erry> having said that i'm a job hopper

[20:57] <erry> :D

[20:58] <disbot1> <antononcube> @erry Yeah. IT job ads like "Looking for 21-26 year old code barista with long, shaved legs." might become common.

[20:58] <erry> i have to shave my legs?

[20:58] <erry> god damn it

[20:59] <disbot1> <antononcube> Maybe, depends on the country or state..

[20:59] <erry> the lenghts i have to go to to get a jo

[20:59] <erry> b

[21:00] <disbot1> <antononcube> BTW, data science jobs also shrunk.

[21:01] <erry> fub

[21:01] <erry> fun

[21:01] <erry> i wanna start applying for jobs maybe next month

[21:02] <erry> or in 

[21:02] <erry> a bit more than tha

[21:02] <erry> my life is all up in the air right now

[21:02] <disbot1> <antononcube> @erry I am curious now -- do you use Jupyter? Or you reacted to some other LLM-related flowchart...

[21:02] <erry> disbot1: no the flowchart in the llm thing

[21:03] <erry> i've used jupyter a bit but really i've not studied data analysis as much as maybe i should

[21:03] <erry> i think it's a skill i need to have

[21:03] <erry> we used DBT cloud a bit in my last gig

[21:03] <erry> unfortunately just for 1 year before i got laid off

[21:03] <erry> :(

[21:03] <erry> i would have stayed there longer

[21:03] <erry> instead of the job i ended up doing right after it

[21:04] <erry> that's been uh, something

[21:05] <disbot1> <antononcube> Hmmm... I have not heard of "dbt Cloud" before -- had to look it up.

[21:05] <erry> they call it 'ai' now

[21:05] <erry> wasn't the case when i used it

[21:05] <erry> just data analysis

[21:05] <disbot1> <antononcube> I see.

[21:06] <erry> i wish i could keep getting jobs by word of mouth

[21:06] <erry> when that happens i barely need an interview process

[21:06] <erry> makes it much more pleasant

[21:08] <erry> but normal application is like, upload CV, hope the ATS doesn't just auto reject you because you wrote 'nodejs' instead of 'node.js', message the hiring manager to show your appreciation for his talents, have first interview with some guy who has no idea what python or node even are, do a take home test which you have to narrate, have a STAR interview in a 5 person panel, do a live coding exercise, do a live architecture exercise, talk to the CEO....

[21:08] <erry> then you get a job offer that 's like £10k below market value and you get a 6 month probation period

[21:09] <erry> like that's long enough! if you get 6 whiole months that you can just get rid of me without any notice, why do you even need that ridiculous interview process

[21:09] <erry> just hire me and fire me if i can't do the job

[21:09] <disbot1> <antononcube> There was recently a Vampire joke about interviewing with panel...

[21:10] <erry> i saw a job ad where they wanted to say 12-13 years of experience (as if that's not long enough already) but the - got eaten so it required 1213 years of experience

[21:10] <erry> i posted on linkedin like "any vampires in my network interested in this job?"

[21:11] <disbot1> <antononcube> > Interview with the Vampire  > Technical screen with the Vampire > Leetcode with the Vampire > 2nd Round Interview with the Vampire > 3rd Round Interview with the Vampire  > Zoom Whole-Team Interview with the Vampire  > Executive Interview with the Vampire  > After careful consideration, we decided we’re not moving ahead with your application, but we’ll keep your name in mind for future positions with the Vampire.

[21:11] <erry> LMAOOO

[21:12] <erry> ow

[21:12] <erry> that hurts

[21:12] <disbot1> <antononcube> Shouldn't it be "LMVAO" ?!

[21:12] <erry> :)

[21:12] <erry> I wonder if I should just buy a derelict house in japan and rennovate it and turn it into an airbnb

[21:12] <erry> and live off that

[21:12] <erry> idk anything but this :'(

[21:13] <disbot1> <antononcube> With vampire services or without? (That Japanese house.)

[21:14] <erry> yeah sure why not

[21:14] <erry> it'll be a japanese vampire

[21:14] *** dg left
[21:14] <erry> TIL 吸血鬼

[21:16] <disbot1> <antononcube> Right "blood demon".

[21:19] *** yewscion joined
[21:25] *** yewscion left
[21:26] *** yewscion joined
[21:31] *** yewscion left
[21:41] <disbot1> <librasteve> Leetcode with the Vampire - XDD

[21:52] <japhb> I've had interviews that felt like my life was being sucked out through my neck, so ... can confirm?

[21:52] *** yewscion joined
[21:54] <japhb> Worst interview group though is the one where you realize that the person interviewing you doesn't actually know what they would need to in order to assess your answers.  And that person is the hiring manager.

[21:57] *** yewscion left
[21:58] <disbot1> <antononcube> 💯

[21:58] *** yewscion joined
[21:59] <tbrowder> if i use experimental :rakuast in a prog, how do i interrogate the equivalent of $=pod6? our docs have a lot on RakuAST and rakudoc v2, but no direct help for a user that i can see. there is a  “render” method out there, in the ether, but its description is hard to deal with for me—way too much http involved.

[22:02] <timo> just "use experimental :rakuast" doesn't switch the parser used for your code over yet, you need that env var for it

[22:02] <timo> RAKUDO_RAKUAST=1

[22:02] <tbrowder> ah, i forgot

[22:03] *** yewscion left
[22:05] <[Coke]> $=pod gets you (in my case here) an array of Pod::Blocks

[22:07] <[Coke]> I think $=pod might always be everything, but you could a particular section if you have it named.

[22:14] *** bdju left
[22:16] *** bdju joined
[22:20] *** yewscion joined
[22:30] *** yewscion left
[22:34] <disbot1> <antononcube> I forgot what was "Leetcode"...

[22:42] <tbrowder> yeah, i can get an RakuAST::Block.new but only get empty methods so far

[22:43] <tbrowder> i mean RakuAST::Doc::Block.nee

[22:52] *** yewscion joined
[22:53] <tbrowder> until we can get the equiv of $=pod6 inside a raku script i can’t see much utility for self documentation, but i’m not a very forward thinker.

[22:54] <tbrowder> ^^^ for RakuAST::Doc::*, that is

[22:57] *** yewscion left
[22:58] *** yewscion joined
[23:03] *** yewscion left
[23:04] *** yewscion joined
[23:04] *** apac left
[23:05] *** ACfromTX left
[23:09] *** yewscion left
[23:18] *** Aedil left
[23:18] <tbrowder> but, i will keep experimenting. actually, the current docs do have info on the RakuAST::Doc::* methods i haven't seen anywhere else and the look promising for external pod files...

[23:19] <tbrowder> *they

[23:22] <timo> hm. i can only get regular old instances of the Pod classes from $=pod as well as &mysub.WHY; is the rakuast doc classes maybe not meant to replace these pod classes at all?

[23:23] <timo> like, the Pod:: classes are what you get out of stuff, and RakuAST::Doc is what you have to work with when you work with RakuAST directly, and then it will compile into Pod::blah instances

[23:26] *** yewscion joined
[23:31] *** yewscion left
[23:49] *** ACfromTX joined
[23:59] *** ACfromTX left
