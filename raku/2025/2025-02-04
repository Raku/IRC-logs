[00:25] *** Sgeo joined
[01:12] *** ulipink left
[01:45] *** ulipink joined
[01:45] *** ulipink left
[01:45] *** ulipink joined
[01:50] *** ulipink left
[01:53] *** SrainUser left
[02:11] *** human-blip left
[02:13] *** human-blip joined
[02:17] *** hulk joined
[02:18] *** kylese left
[02:24] *** ulipink joined
[02:24] *** ulipink left
[02:24] *** ulipink joined
[02:29] *** ulipink left
[02:43] *** ulipink joined
[02:43] *** ulipink left
[02:43] *** ulipink joined
[03:15] *** hulk left
[03:15] *** kylese joined
[03:35] *** yewscion joined
[03:47] *** yewscion left
[04:01] *** yewscion joined
[04:07] *** yewscion left
[04:34] *** yewscion joined
[04:39] *** yewscion left
[04:41] *** yewscion joined
[04:45] *** yewscion left
[05:04] *** yewscion joined
[05:09] *** yewscion left
[05:12] *** ulipink left
[05:15] *** Sgeo left
[05:27] *** Sgeo joined
[05:32] *** ulipink joined
[05:37] *** ulipink left
[05:47] *** Aedil joined
[06:16] *** ulipink joined
[06:21] *** ulipink left
[06:22] *** ryoskzypu left
[06:22] *** ryoskzypu joined
[06:36] *** ulipink joined
[06:40] *** ulipink left
[07:06] *** Sgeo left
[07:10] *** ulipink joined
[07:16] *** ulipink left
[07:35] *** ulipink joined
[07:41] *** Sgeo joined
[07:42] *** melezhik joined
[07:42] <melezhik> o/

[07:43] <melezhik> just applied this Minecraft theme to my WP site, looks cool, huh? https://sparrowdo.wordpress.com/2025/02/03/sparrow-whirl-of-generators/ ))

[07:43] *** ulipink left
[07:44] *** ulipink joined
[07:44] *** ulipink left
[07:44] *** ulipink joined
[07:46] *** melezhik left
[07:48] *** ulipink left
[08:12] *** Sgeo left
[08:53] <timo> "Discover the ultimate Minetest resource ‚Äì your go-to guide for expert tutorials, stunning mods, and exclusive stories. Elevate your game with insider knowledge and tips from seasoned Minetest enthusiasts." - i'm not sure that's the right text for the sparrowdo site :)

[08:54] <timo> "I‚Äôm Bedrock. Discover the ultimate Minetest resource ‚Äì your go-to guide for expert tutorials, stunning mods, and exclusive stories. Elevate your game with insider knowledge and tips from seasoned Minetest enthusiasts." - this neither

[09:01] *** sena_kun joined
[09:10] *** dakkar joined
[09:12] *** yewscion joined
[09:16] *** yewscion left
[09:17] *** melezhik joined
[09:17] <melezhik> .

[09:17] <melezhik> weekly: https://sparrowdo.wordpress.com/2025/02/04/harden-syslog-conf-by-sparrow-checks/

[09:17] <notable6> melezhik, Noted! (weekly)

[09:18] *** melezhik left
[09:34] *** melezhik joined
[09:34] <melezhik> post thing on linux channel programming.dev - https://programming.dev/post/24947338?scrollToComments=true , not sure if Linux people are familiar with Raku, please upvote if you like ... thanks 

[09:39] <timo> did you see my messages from ~45min ago melezhik?

[09:40] <melezhik> timo: I can check by history logs 

[09:40] <melezhik> or feel free to repost it 

[09:40] <melezhik> ^^ @timo

[09:40] *** melezhik left
[09:41] <timo> it was just that there's some text refering to minetest specifically that's now in your website

[09:42] *** melezhik joined
[09:42] <melezhik> ohhh - the title 

[09:42] <melezhik> it must have crept in when I changed the theme

[09:42] <melezhik> thanks timo

[09:44] <melezhik> fixed now, thanks a lot @timo

[09:45] <melezhik> anyways this was fun - my 2 boys used to play Minecraft a lot ))

[09:46] *** yewscion joined
[09:51] *** yewscion left
[09:52] <timo> i still see the two blocks of text

[09:53] <timo> in the footer of the page and in the top block of the right-side bar next to an article

[09:54] <timo> and the twitch, twitter, tiktok, facebook, instagram buttons all just link to the front page of that service, so can probably just be removed

[09:57] <melezhik> oh

[09:58] <melezhik> I guess I am going revet this theme back, too annoying to change all the bits, anyway - thanks!

[10:15] *** melezhik left
[10:16] *** jpn joined
[10:21] *** melezhik joined
[10:21] <melezhik> timo: finally got back to bedrock , just have removed all irrelevant traces  

[10:30] *** jpn left
[10:33] *** melezhik left
[10:39] *** yewscion joined
[10:41] *** jpn joined
[10:45] *** jpn left
[10:46] *** yewscion left
[10:47] *** jpn joined
[11:33] *** jpn left
[12:00] *** jpn joined
[12:06] *** jpn left
[12:24] *** jpn joined
[12:34] *** leah2 left
[12:36] *** jpn left
[12:41] *** jpn joined
[12:45] *** jpn left
[12:47] *** leah2 joined
[13:09] *** leah2 left
[13:14] * lizmat clickbaits https://rakudoweekly.blog/2025/02/03/2025-05-trixie-awaits/

[13:23] *** leah2 joined
[13:25] *** jpn joined
[13:26] <[Coke]> is mi6 standardizing on http:// instead of git for github URLs?

[13:26] <lizmat> yeah, it's a bit annoying

[13:27] <lizmat> fwiw, I use ssh:/ for mine

[13:27] <lizmat> takes a little tweaking in .git/config   and only once

[13:27] <[Coke]> I understand it, was just surprised.

[13:45] <lizmat> BTW, I think I will have the basics for ecosystem source searching done later today

[13:45] <lizmat> for *all* the current modules  :-)

[13:47] *** yewscion joined
[13:54] <timo> it would be kinda neat if we had like a search index based on AST instead of just input text

[13:54] <timo> though tbh i don't have a use case for that yet

[13:54] <lizmat> I have thoughts about integrating that into rak, fwiw

[13:55] <timo> oh, parsing raku source to ast, then searching through the structure?

[13:56] <lizmat> yeah...  problem is that too much code out there doesn't parse to RakuAST yet :-(

[13:56] <timo> right. plus side-effects from parsing code, of course

[13:56] <lizmat> and there's that, indeed  :-)

[13:57] <timo> who wants to try if we can modify the rakuast of a program and use DEPARSE to generate a diff of the source code that represents the changes of the ast?

[13:57] <timo> kind of like structured editing / structured patches / semantic patches

[13:58] <timo> something for the very future maybe

[13:58] <lizmat> who wants to try get RakuAST finished

[13:58] <lizmat> feels like it should be done first

[13:58] <lizmat> :-)

[13:59] <timo> phew.

[14:10] <lizmat> afk for a few hours&

[14:20] <[Coke]> lizmat: cut a release of date-slang with your update. sorry that fell through the cracks.

[14:52] <discord-raku-bot> <librasteve> I have raised an issue on mi6 to request using yaml (or something else) for config rather than dist.ini since it's kinda weird seeing that on a mac ... got no joy from the author ... but I suspect that skaji may have been more amenable had I provided in the form of a PR

[14:53] <discord-raku-bot> <librasteve> perhaps that (a PR) will work, maybe as a setting for git:// instead of http://  ... maybe too late to change

[15:23] <[Coke]> FWIW, I'm fine with dist.ini for something that I setup once and almost never have to edit again (I also release all my dists on a mac.) 

[15:24] <[Coke]> I also wouldn't necessarily push people to git or ssh over http to github urls. http is fine for most of what users of our modules are going to do.

[15:26] <[Coke]> (but if authors want to skip that override, they should be able to)

[15:34] <El_Che> There is big group of people that dislike ini (or TOML). :)

[15:34] *** jpn left
[15:35] *** jpn joined
[15:39] <[Coke]> fair

[15:49] <discord-raku-bot> <librasteve> yeah well it works fine with dist.ini on a mac ‚Ä¶ just makes me retch a little

[15:53] <[Coke]> De gustibus non est disputandum

[16:11] <El_Che> [Coke]: Etiam de eo disputandum est!

[16:11] <El_Che> :)

[16:25] <discord-raku-bot> <antononcube> @El_Che Good to know. (About TOML.) I am following B. Duggan's "lead" for many of infrastructure packages and he uses TOML. (E.g. "LLM::DWIM".)

[16:25] <discord-raku-bot> <antononcube> For now, I mostly stick to JSON for special initializations.

[16:27] <El_Che> I suspect that TOML was a joke on .ini and people ran with it

[16:28] <El_Che> antononcube: JSON is awful for config. No YAML because of the superset thingy?

[16:28] <El_Che> but as [Coke] states De gustibus non est disputandum

[16:29] <discord-raku-bot> <antononcube> Yeah, I tend to dislike YAML. üôÇ TOML seemed a good alternative.

[16:31] <El_Che> I can't easily parse the flatness in my mind

[16:35] <tonyo> you guys know ingy is in this channel, right?  say nothing bad of YAML !

[16:35] <tonyo> (haha)

[16:36] <jdv> yaml is not a superset of json:)

[16:37] <El_Che> are you going there, jdv? :)

[16:37] <jdv> nah, i don't care

[16:38] <tonyo> i ran to metacpan to find that doc battle

[17:05] <ugexe> git:// is deprecated

[17:05] <discord-raku-bot> <antononcube> YAML is used too much in R. But, I -- and others -- tend to distrust languages with significant white space. So, I avoid using YAML. (Except when working with R.)

[17:06] <ugexe> https://github.blog/security/application-security/improving-git-protocol-security-github/

[17:06] <ugexe> i guess if you aren't using github that may not be relevant though

[17:06] * [Coke] finds https://blog.readthedocs.com/github-git-protocol-deprecation/

[17:35] *** dakkar left
[17:57] <jdv> wut?  git:// isn't deprecaated.  old key algos are.  right?

[17:58] <discord-raku-bot> <melezhik.> My 2 cents to yaml ‚Äúholy war‚Äù - yaml as configuration form is fine as long it‚Äôs simple and not too nested . Coding in yaml - imho not the best idea.

[18:00] <jdv> i stumbled on a circleci conf once that took me a while to figure out.  think it was using multiple refs or something.  too much fun for me.

[18:30] <ugexe> git:// is deprecated on github yes

[18:31] <ugexe> git@ is still fine

[18:42] *** japhb left
[18:48] <jdv> ah, gotcha

[18:49] *** japhb joined
[18:57] *** jpn left
[19:18] *** Aedil left
[19:43] *** snonux left
[19:44] *** snonux joined
[19:46] <coleman> Toml is great IF you don't have deep nesting.

[19:47] *** [Coke] left
[19:47] *** [Coke]_ joined
[20:06] <El_Che> toml is great if you don't use it. :)

[20:07] <El_Che> (just kidding, use what you like)

[20:08] <discord-raku-bot> <melezhik.> Well the same ( my statement for yaml ) works for toml - when nesting is not too deep )) , it‚Äôs just ( when one has too many nested layers ) in yaml you struggle with bunch of tabs, subtle errors due to that and with toml - I am not sure - but I don‚Äôt think it is designed for complex structures ad well

[20:09] <El_Che> as long it's just configuration, you'll be fine. It's only painful when you try to be smart

[20:09] <discord-raku-bot> <melezhik.> Yeah . Or when you try to make your configuration smart üòÄ

[20:11] <El_Che> json could be ok, besides commas and comments

[20:11] <El_Che> so, no

[20:16] <discord-raku-bot> <melezhik.> JSON is ok, but I would say for machine interactions, for people it‚Äôs a bit verbose

[20:17] <timo> what's the name of that ini-like format again ...

[20:17] <timo> TOML?

[20:17] <El_Che> yes

[20:20] <timo> so far that seems like a good format to me

[20:21] <El_Che> it's annoying when you need lists of dictionaries

[20:22] <El_Che> s/of/or/

[20:22] <El_Che> I don't need to look up stuff up when using whatever config format

[20:23] <El_Che> I need to look everything up in toml

[20:23] <El_Che> and I can't understand it later

[20:23] <El_Che> the perl is write-only joke does apply to toml

[20:23] <El_Che> (the python whitespace thing applies to yaml)

[20:26] <timo> i'm thinking if you have configuration files in whatever format, you should also offer a template file with examples and commented default values and all that. in that case it wouldn't be write-only for people making changes, at least i think so

[20:27] <ugexe> definitely a big drawback to json

[20:29] <coleman> I am a big fan when software is packaged with a 99% commented-out and documented config file that shows the defaults

[20:29] <coleman> Or when cli tools have a generate-config subcommand that spits an example file to stdout.

[20:29] <timo> that too, yeah

[20:31] <timo> and if there's something like "includes" or anything involving conditionals and maybe overrides from environment or commandline arguments, it's great to have a "write out the effective configuration" flag as well

[20:32] <timo> and a flag to check a given config for correctness without doing anything that has side-effects ... if possible

[20:32] <coleman> yes! that is such a nice feature

[20:33] <coleman> every incident I've ever caused was config-related

[20:35] *** apac joined
[21:06] <discord-raku-bot> <librasteve> on this general topic, I have a couple of modules that write an example YAML to eg .raws-config/aws-ec2-launch.yaml during Build.pm ... but then I also have to cp out any existing file to a backup location to avoid overwriting any changes made by the user - is there any best practice out there? - is there any standard for where to stick my yaml configs?

[21:09] <timo> ah, that's tricky. dpkg and rpm have configuration file handling built in, so they check if you have changes and then offer you a choice how to deal with it. but i'm not sure that's "in scope" for zef

[21:12] <discord-raku-bot> <librasteve> wordpress provides wp-config-sample.php and a configurator to make the final wp-config.php ...

[21:16] *** discord-raku-bot left
[21:16] *** discord-raku-bot joined
[21:16] *** discord-raku-bot left
[21:17] *** discord-raku-bot joined
[21:18] <timo> for finding where configuration files should go, the XDG specification can be good. XDG_CONFIG_HOME is where you would probably put thees yaml files, though i'm not sure what they do exactly. could also be for XDG_DATA_HOME instead. and of course a fallback for systems that don't have XDG

[21:19] <tonyo> well, yamlscript is aiming to take care of templating

[21:20] *** discord-raku-bot left
[21:21] *** discord-raku-bot joined
[21:32] *** yewscion left
[21:34] *** [Coke]_ is now known as [Coke]

[21:34] <discord-raku-bot> <librasteve> timo: I recall some discussion here about XDG and the general sense was that it is not widely enough supported to be a decent standard iirc (sorry if I have poor memory) .... what I would like is for there to be something like a consensus that the path HOME/.raku-config/CLI/AWS/EC2-Simple/config/aws-ec2-launch.yaml  is good where the filename.yaml are up to the discretion of the module writer - and an easy way for

[21:34] <discord-raku-bot> the user to get the path and to go in and edit the yamls

[21:38] <timo> well, if the auth isn't part of the path, it's no good :)

[21:38] <discord-raku-bot> <librasteve> I guess this could be somewhere like ~/.rakubrew/versions/moar-2024.10/share/perl6/site/config/CLI/AWS/EC2-Simple/aws-ec2-launch.yaml but the site dir these days is quite obfuscated in terms of the module name / lib path and afaik there may be a good reason that the module paths are not generally used and also this is pretty deep for someone to go in and edit a config vs eg. ~/.zshrc

[21:39] <timo> it depends very very much on how you want to handle the configurations

[21:39] <discord-raku-bot> <librasteve> ah yes probably you will want the auth and the ver

[21:39] <timo> if you put it below a specific version of rakudo, then a rakudo update will make your configs disappear

[21:39] <timo> i mean your user's custom changes wouldn't be found any more

[21:39] <discord-raku-bot> <librasteve> good point

[21:40] <discord-raku-bot> <librasteve> but the config file format may change from time to time so maybe some notion of migration

[21:41] <timo> yes indeed

[21:41] <timo> it's a topic that requires a lot of careful thought, and there is probably no one-size-fits-all solution at all?

[21:42] <discord-raku-bot> <librasteve> yeah - I do see that

[21:43] <coleman> XDG is widely used

[21:44] <coleman> Caveat: for software post ~2015-ish

[21:49] <coleman> There's a lot of magical systemd integrations with XDG, but even if you don't use or pay attention to that stuff, it's a very well thought-out system.

[21:52] *** Guest37 joined
[21:53] <discord-raku-bot> <librasteve> https://irclogs.raku.org/search.html?query=XDG&type=words&ignorecase=True&nicks=&channel=raku&message-type=&from-yyyymmdd=2019-10-13&to-yyyymmdd=2025-02-04

[21:54] <discord-raku-bot> <librasteve> yeah - looks like my recollection is unfairly reflecting on the popularity of XDG - having found and scanned the irclogs ^^

[22:00] *** apac left
[22:02] *** yewscion joined
[22:11] <ugexe> i dislike that xdg puts stuff in multiple locations. it is quite convenient to remove a single directory to clean up that stuff. it is also nice to look in that directory to see all the things you could possibly want to edit

[22:13] <ugexe> in other words i dislike xdg because im lazy

[22:15] <discord-raku-bot> <librasteve> laziness is a virtue

[22:17] *** Guest37 left
[22:29] *** sena_kun left
[23:47] *** yewscion left
