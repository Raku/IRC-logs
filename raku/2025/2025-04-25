[00:01] <wayland> OK, I've passed %?RESOURCES into the test successfully, and selected the one I want into $resource, but when I run $resource.open(), I get: No such method 'open' for invocant of type 'Slip'.  Did you mean 'one'?

[00:01] <wayland> Any hints on how to debug this?  

[00:05] <ugexe> show your code and the command you are using to run into the issue

[00:10] <wayland> ugexe: https://gist.github.com/wayland/4886d162d381f339951c0081946e3340

[00:11] <wayland> Includes the code I think is relevant to the issue.  

[00:11] <ugexe> use     lib 'lib/raku'; # i see you're still using use lib :P

[00:11] <evalable6> ugexe, rakudo-moar cd4c360a1: OUTPUT: «Saw 1 occurrence of deprecated code.␤==========…»

[00:11] <evalable6> ugexe, Full output: https://gist.github.com/dd1c48f598d5d50bc514ed4edcb8ecb8

[00:12] <wayland> Thanks!  I got rid of that in some of the other test files, but I guess I missed this one.  

[00:15] <wayland> OK, I've used grep and gotten rid of all of them I think.  Hopefully I won't bother you with that one any more :) 

[00:15] <ugexe> remove that and run your test with `raku -I. t/01-basic-table.rakutest` or `zef test .`

[00:16] <wayland> I have, and that seemed to work better; now I'm going to test them in my docker container (the same one I use in my GitHub action)

[00:30] *** MasterDuke joined
[00:48] *** [Coke]_ joined
[00:49] *** jargan joined
[00:49] *** greenfork_ joined
[00:49] *** nativecallable6_ joined
[00:49] *** shareable6__ joined
[00:49] *** releasable6__ joined
[00:50] *** releasable6 left
[00:50] *** nativecallable6 left
[00:50] *** shareable6 left
[00:50] *** [Coke] left
[00:50] *** greenfork left
[00:50] *** jast left
[00:50] *** greenfork_ is now known as greenfork

[00:51] *** maylay left
[00:51] *** jdv left
[00:52] *** jdv joined
[00:53] *** maylay joined
[00:53] *** MasterDuke left
[01:11] *** hulk joined
[01:11] *** kylese left
[02:15] *** hulk left
[02:16] *** kylese joined
[02:25] *** Aedil left
[03:45] *** kylese left
[03:48] *** kylese joined
[05:07] *** Tirifto left
[05:11] *** Tirifto joined
[05:21] *** Tirifto_ joined
[05:21] *** Tirifto left
[05:37] *** charsbar left
[05:40] *** charsbar joined
[05:50] *** charsbar left
[05:53] *** charsbar joined
[05:55] *** charsbar left
[05:56] *** charsbar joined
[06:01] *** Aedil joined
[06:26] *** charsbar left
[06:28] *** charsbar joined
[06:33] *** Xliff joined
[06:33] <Xliff> \o

[06:33] <Xliff> What TUI package is good for drawing bars across the screen?

[06:33] <Xliff> Ones offering a fade routine are a plus!

[06:37] *** apac joined
[06:41] *** charsbar_ joined
[06:41] *** charsbar left
[06:41] *** charsbar_ is now known as charsbar

[06:43] *** charsbar_ joined
[06:43] *** charsbar left
[06:43] *** charsbar_ is now known as charsbar

[06:52] *** charsbar left
[06:53] *** charsbar joined
[06:56] *** apac left
[07:03] *** wayland left
[07:03] *** wayland76 joined
[07:05] *** charsbar left
[07:06] *** charsbar joined
[07:14] *** Sgeo left
[07:31] *** charsbar_ joined
[07:31] *** charsbar left
[07:31] *** charsbar_ is now known as charsbar

[07:34] <Xliff> .tell japhb Are you still working on Terminal::Widgets? I may need your help with a ProgressBar implementation that it can use. Ping me.

[07:34] <tellable6> Xliff, I'll pass your message to japhb

[07:46] *** Xliff left
[08:04] <discord-raku-bot> <sergot> lizmat: I just transfered these repos: openssl, io-socket-ssl and http-useragent

[08:06] <discord-raku-bot> <sergot> .tell lizmat: I just transfered these repos: openssl, io-socket-ssl and http-useragent ; )

[08:06] <tellable6> sergot, I'll pass your message to lizmat

[08:44] *** Aedil left
[08:48] *** Aedil joined
[08:56] <lizmat> thanks sergot    I will take care of them later today

[08:56] <tellable6> 2025-04-25T08:06:07Z #raku <sergot> lizmat: I just transfered these repos: openssl, io-socket-ssl and http-useragent ; )

[09:54] *** wayland76 left
[09:56] *** wayland76 joined
[10:42] *** melezhik joined
[10:42] <melezhik> o/

[10:43] <melezhik> exciting news Alpine now supports all Sparrow packages, see the bootstrap log - https://gist.github.com/melezhik/fed04ac36e32717625760e147aa39a51#file-report-log-L40-L55

[10:43] <melezhik> all these raku-* packages

[10:44] <Geth> ¦ ecosystem: 7d62896272 | (Elizabeth Mattijsen)++ | META.list

[10:44] <Geth> ¦ ecosystem: Remove sergot's modules

[10:44] <Geth> ¦ ecosystem: 

[10:44] <Geth> ¦ ecosystem: that will be re-appearing as Raku Community Modules

[10:44] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/7d62896272

[10:46] <melezhik> see also - https://pkgs.alpinelinux.org/packages?name=raku-*&branch=edge&repo=&arch=x86_64&origin=&flagged=&maintainer=

[10:47] <melezhik> that means that for Alpine uses it's enough to say `apk add raku-sparrow6` and get sparrow up and running in seconds, not minutes 

[10:47] <lizmat> wow!

[10:48] <lizmat> that's worthy of a blog post   *hint*    :-)

[10:48] <melezhik> like I said - Alpine guys "mean bussines" )))

[10:48] <melezhik> i am trying to "sell" Sparrow/Sparky for alpine images testing, so let's see ))

[10:49] <melezhik> one those packages are testes they will go from edge/testing alpine repo to the stable one

[10:57] *** melezhik left
[11:07] *** JimmyZhuo joined
[11:09] *** melezhik joined
[11:09] <melezhik> example of alpine nginx cookbook - https://gist.github.com/melezhik/fed04ac36e32717625760e147aa39a51?permalink_comment_id=5555810#gistcomment-5555810

[11:22] *** melezhik left
[11:24] *** melezhik joined
[11:25] <melezhik> lizmat: thanks for the hint, I am going to wait a bit, till things settled completely so to come up with complete use case

[11:28] <melezhik> question from Alpine maintainer who is doing raku-* package for Sparrow - "are the precompilation files specific to a particular version of Rakudo? In other words, after a Rakudo upgrade, do i need to precompile every Raku module again?"

[11:29] <melezhik> My knowlege it is not, but I am not sure.

[11:29] <melezhik> cc lizmat:

[11:29] *** melezhik left
[11:36] <wayland76> Hi!  Just wanting to clarify something -- when I see something listed on raku.land, is that technically a distribution containing one or more modules?  

[12:06] *** apac joined
[12:15] *** melezhik joined
[12:20] *** apac left
[12:21] *** [Coke]_ is now known as [Coke]

[12:24] *** apac joined
[12:27] *** melezhik left
[12:27] *** melezhik joined
[12:38] *** melezhik left
[12:42] <discord-raku-bot> <antononcube> @wayland76 I think that is correct. For example, one distribution on raku.land can have multiple .rakumod files each starting wth unit module M<integer> .

[12:43] <nine> melezhik: if that alpine list impresses you, what about the openSUSE one? https://build.opensuse.org/project/show/devel:languages:raku

[12:43] <tellable6> nine, I'll pass your message to melezhik

[12:44] *** melezhik joined
[12:44] <wayland76> antononcube: Great!  I'm making a PR on the doco once I get the tests working (currently says "Could not find Test-Files") and wanted to make sure I get it right.  

[12:45] <nine> Packaging for openSUSE is even mostly automated using https://github.com/niner/module2rpm which despite its name should actually be easily extensible for other package formats

[12:47] <sjn> s/module2rpm/module2package/ # ? :-)

[12:50] *** Xliff joined
[12:50] <Xliff> Is anyone getting this error:

[12:50] <Xliff> ./p6gtkexec -e 'use LWP::Simple'

[12:50] <Xliff> Stage start      :   0.000

[12:50] <Xliff> ===SORRY!=== Error while compiling -e

[12:50] <Xliff> New type Block for List is not a mixin type

[12:50] <Xliff> at -e:1

[12:52] <nine> I actually have seen this kind of error. It's caused by non-reproducible builds. Clearing .precomp directories helps

[13:04] *** melezhik left
[13:14] *** JimmyZhuo left
[13:15] <discord-raku-bot> <melezhik.> nine: it not the list that impresses me by alpine dev that are very helpful and look like they might take an interest in Sparky

[13:15] <discord-raku-bot> <melezhik.> by -> but

[13:27] <Xliff> nine: It also looks like it might be a serialization issue. If I have INIT blocks with a block as the "return" value (ie last item), it will trigger this. The solution was to always end my INIT blocks with a Nil

[13:29] <nine> Huh....that is interesting. I wonder if the same with RakuAST

[13:29] <Xliff> nine: Does the INIT block actually have a return value, now?

[13:30] <nine> INIT blocks have always had a return value. Otherwise the common timing idiom say now - INIT now; wouldn't work

[13:30] <Xliff> Oh. LOL! Right.

[13:30] *** raku joined
[13:31] <Xliff> So it looks like INIT doesn't like a Block as a return value.

[13:33] <raku> nine: I am aware of module2rpm, the point is alpine maintainers are interested in creating apk packages for Raku modules the way they do for all other software which is in my view is really cool 

[13:33] <nine> raku: what way is that?

[13:33] <evalable6> nine, rakudo-moar b527cefcb: OUTPUT: «(exit code 1) ===SORRY!=== Error while compilin…»

[13:33] <evalable6> nine, Full output: https://gist.github.com/140af4dd1ab4ee588dae340b03940cb5

[13:35] <raku> I don’t know but the point is it’s not me creating the packages but they so I leave this to them )

[13:36] <raku> Upss I got a weird nickname ))

[13:36] *** raku left
[13:50] *** apac left
[14:04] <Xliff> .seen japhb

[14:04] <tellable6> Xliff, I saw japhb 2025-04-19T17:52:56Z in #raku-dev: <japhb> dev2: Other languages don't have ternary at the same precedence as C does, because C was wrong on this.  The change was intentional, and not because every language from the 90s "fucked this up".

[14:26] *** Sgeo joined
[14:30] *** Sgeo_ joined
[14:34] *** Sgeo left
[14:56] *** wayland joined
[14:57] *** wayland76 left
[15:28] *** apac joined
[15:34] *** melezhik joined
[15:35] *** apac left
[15:35] *** melezhik left
[15:35] *** melezhik joined
[15:35] *** apac joined
[15:36] *** melezhik left
[15:50] *** apac left
[16:07] *** dmvrtx left
[16:28] *** derpydoo joined
[16:37] *** nine left
[16:37] *** nine joined
[17:26] *** lichtkind joined
[18:11] *** abraxxa-home joined
[18:18] *** apac joined
[18:40] <Geth> ¦ docker: 6ad95b9d37 | (Anton Oks)++ (committed using GitHub Web editor) | 2025.04/alpine/Dockerfile

[18:40] <Geth> ¦ docker: alpine Dockerfile: Add git as a `build dependency`

[18:40] <Geth> ¦ docker: 

[18:40] <Geth> ¦ docker: see https://github.com/docker-library/official-images/pull/18923

[18:40] <Geth> ¦ docker: review: https://github.com/rakudo/docker/commit/6ad95b9d37

[18:57] <Geth> ¦ docker: d6045c9967 | (Anton Oks)++ (committed using GitHub Web editor) | 2025.04/alpine/Dockerfile

[18:57] <Geth> ¦ docker: alpine Dockerfile: Adding git via apk

[18:57] <Geth> ¦ docker: review: https://github.com/rakudo/docker/commit/d6045c9967

[20:13] *** Ekho left
[20:25] *** Ekho joined
[20:37] *** apac left
[20:46] *** apac joined
[20:57] *** apac left
[21:01] *** Aedil left
[21:07] *** LainIwakura joined
[21:16] *** LainIwakura left
[21:38] *** LainIwakura joined
[22:04] *** LainIwakura41 joined
[22:06] *** LainIwakura left
[22:25] *** abraxxa-home left
[23:04] *** lichtkind left
[23:05] *** sdomi left
[23:12] *** wayland76 joined
[23:14] *** wayland left
[23:20] *** sdomi joined
