[01:02] *** kjp left
[01:03] *** kjp joined
[01:04] *** kjp left
[01:05] *** kjp joined
[01:35] *** CultOfTheGlenda joined
[01:39] <CultOfTheGlenda> Good morning. I probably have another stupid question. I want to add some sort of operator or language construct. It will look something like

[01:39] <CultOfTheGlenda> do-when $t {

[01:39] <CultOfTheGlenda>   #some callable here

[01:39] <CultOfTheGlenda> }

[01:39] <CultOfTheGlenda> In this case $t is a DateTime. I can achieve what I want by using a subroutine or prefix operator for the most part but I have to use a comma after the $t. Essentially I want that gone.

[01:46] <CultOfTheGlenda> I think I've read that things like for loops are written in raku in an operator or grammar. That is basically what I am looking to do. If someone could point me to that, that would be great. Just trying to learn more of the deeper innerworkings. Thanks guys.

[01:50] <Voldenet> I think there is such operator already

[01:51] <Voldenet> m: my $x = DateTime.now; with $x { .say }; # defined

[01:51] <camelia> rakudo-moar 86d216d3f: OUTPUT: «2025-09-25T03:51:25.061270+02:00␤»

[01:51] <Voldenet> m: my DateTime $x;; with $x { .say }; # not defined

[01:51] <camelia> rakudo-moar 86d216d3f: ( no output )

[01:51] <Voldenet> s/operator/keyword/

[01:53] <Voldenet> there are plenty of ways to do exactly what you want or something similar - the easiest (but not precisely what you want) is a sub

[01:53] <Voldenet> m: sub do-when ($y, &x) { with $y { x($y) } }; do-when DateTime.now, { .say } # no hacking, boring code

[01:54] <camelia> rakudo-moar 86d216d3f: OUTPUT: «2025-09-25T03:54:00.063156+02:00␤»

[01:54] <Voldenet> it requires `,` after the parameter, so it's not as good

[01:56] <CultOfTheGlenda> Yeah, this is an exercise to learn more about raku(do). What's the hard way?

[01:57] <Voldenet> other option is a slang (where you add subrules to a grammar) - it's sufficiently complex at the moment because of QAST/RakuAST differences

[01:57] <Voldenet> https://github.com/0racle/raku-Slang-Otherwise/tree/master example slang, but you can find more in raku.lang

[01:58] <Voldenet> raku.land*

[01:59] <CultOfTheGlenda> Thanks, I was afraid slang was the way. That comma is looking better already.

[01:59] <Voldenet> I think the most modern way would be rakuast macros

[02:00] <Voldenet> there's also keywords on the HOW levels, but I think they're limited to defining class-like keywords, maybe I'm not seeing bigger picture though

[02:01] <Voldenet> example of that approach (probably not applicable to defining entirely new syntax) https://github.com/raku-community-modules/OO-Actors/tree/main

[02:01] <CultOfTheGlenda> One thing that confuses me about raku is arrays in a hashmap. I will then point another array at that nested array thusly

[02:01] <CultOfTheGlenda> my @ss := %hashmap<key-that-points-to-array>;

[02:01] <CultOfTheGlenda> When I do that @ss becomes a nested array. Why is that?

[02:02] <CultOfTheGlenda> I've been doing raku for years now, and that still trips me up.

[02:03] <Voldenet> m: my %x = a => [1]; say %x<a>; my @n := %x<a>; say @n

[02:03] <camelia> rakudo-moar 86d216d3f: OUTPUT: «[1]␤[1]␤»

[02:03] <Voldenet> you mean the above?

[02:04] <Voldenet> m: my %x = a => [1]; say %x<a>; my @n := %x<a>; say @n; my @nested = %x<a>;

[02:04] <camelia> rakudo-moar 86d216d3f: OUTPUT: «[1]␤[1]␤»

[02:04] <Voldenet> m: my %x = a => [1]; say %x<a>; my @n := %x<a>; say @n; my @nested = %x<a>; say @nested

[02:04] <camelia> rakudo-moar 86d216d3f: OUTPUT: «[1]␤[1]␤[[1]]␤»

[02:07] <Voldenet> the last one copies the scalar that contains an array

[02:08] <Voldenet> you can see incarnations of this in many places

[02:08] <Voldenet> m: my %x = a => [1, 2, 3]; for %x<a> { .say }

[02:08] <camelia> rakudo-moar 86d216d3f: OUTPUT: «[1 2 3]␤»

[02:09] <disbot1> <.landyacht.> m: my %x = a => [1, 2, 3]; for @%x<a> { .say }

[02:09] <evalable6> .landyacht., rakudo-moar 86d216d3f: OUTPUT: «(exit code 1) Type List does not support associative indexing.␤  in block <unit> at /tmp/Szu2Abr8kU line 1␤␤»

[02:09] <disbot1> <.landyacht.> ay?

[02:09] <disbot1> <.landyacht.> m: my %x = a => [1, 2, 3]; for @(%x<a>) { .say }

[02:09] <evalable6> .landyacht., rakudo-moar 86d216d3f: OUTPUT: «1␤2␤3␤»

[02:09] <Voldenet> The above is what I used to do, but

[02:09] <disbot1> <.landyacht.> eesh, don't love that...

[02:09] <Voldenet> it's not quite right

[02:09] <Voldenet> it calls .list on that and COPIES the contents

[02:10] <Voldenet> but what you can do is say "I don't want the container but the contents"

[02:10] <Voldenet> m: my %x = a => [1, 2, 3]; for %x<a><> { .say }

[02:10] <camelia> rakudo-moar 86d216d3f: OUTPUT: «1␤2␤3␤»

[02:10] <disbot1> <.landyacht.> I'm sure I remember this working this way to make something else DWIM nicely, but I can't for the life of me remember what that thing is

[02:13] <Voldenet> m: my %x = a => [1, 2, 3]; for %x<a>.list { .say } # this is doing the same as @(…) version

[02:13] <camelia> rakudo-moar 86d216d3f: OUTPUT: «1␤2␤3␤»

[02:16] <Voldenet> lists aren't expensive, but at the moment I think they're allocated, so they're not as free as the version with <>

[02:24] <Voldenet> there's also Slip version of it, but I don't know how that internally works

[02:25] <Voldenet> m: my %x = a => [1, 2, 3]; for |%x<a> { .say } # the same as %x<a>.Slip

[02:25] <camelia> rakudo-moar 86d216d3f: OUTPUT: «1␤2␤3␤»

[02:36] <Voldenet> Slip also probably copies the list, that's what benchmarks suggest at the moment: https://0x0.st/KmV7.raku

[02:43] *** greaser|q left
[02:43] *** greaser|q joined
[02:43] *** greaser|q is now known as GreaseMonkey

[03:26] <disbot1> <cultoftheglenda> Back on discord. Thanks for all the information guys.

[03:59] <CultOfTheGlenda> What would the performance impact be of a shlang?

[04:07] *** CultOfTheGlenda left
[04:11] <Voldenet> CultOfTheGlenda: altering the grammar takes up to 1s, but after that there's hardly any impact

[04:11] <tellable6> Voldenet, I'll pass your message to CultOfTheGlenda

[04:34] *** derpydoo joined
[05:24] *** Aedil joined
[05:24] *** derpydoo left
[05:34] *** Sgeo left
[05:50] *** melezhik joined
[06:06] *** abraxxa joined
[06:31] *** derpydoo joined
[07:20] *** melezhik_ joined
[07:27] <melezhik_> .tell ds7832: - please take a look at Sparky - looks good for your tasks IMHO - https://gist.github.com/melezhik/d1f42e5ef8cfe56518e41aef5da5b879

[07:27] <tellable6> melezhik_, I'll pass your message to ds7832

[07:27] *** melezhik_ left
[07:53] <Geth> ¦ raku.org/Inline-Perl5: a2896f6a79 | librasteve++ | lib/Org/Home.rakumod

[07:53] <Geth> ¦ raku.org/Inline-Perl5: tweak code example

[07:53] <Geth> ¦ raku.org/Inline-Perl5: review: https://github.com/Raku/raku.org/commit/a2896f6a79

[07:55] <Geth> ¦ raku.org/main: da5a0cd6dc | librasteve++ | lib/Org/Home.rakumod

[07:55] <Geth> ¦ raku.org/main: add CPAN vignette

[07:55] <Geth> ¦ raku.org/main: review: https://github.com/Raku/raku.org/commit/da5a0cd6dc

[07:55] <Geth> ¦ raku.org/main: a2896f6a79 | librasteve++ | lib/Org/Home.rakumod

[07:55] <Geth> ¦ raku.org/main: tweak code example

[07:55] <Geth> ¦ raku.org/main: review: https://github.com/Raku/raku.org/commit/a2896f6a79

[07:55] <Geth> ¦ raku.org/main: f50d23d8d1 | librasteve++ (committed using GitHub Web editor) | lib/Org/Home.rakumod

[07:55] <Geth> ¦ raku.org/main: Merge pull request #265 from Raku/Inline-Perl5

[07:55] <Geth> ¦ raku.org/main: 

[07:55] <Geth> ¦ raku.org/main: add CPAN vignette

[07:55] <Geth> ¦ raku.org/main: review: https://github.com/Raku/raku.org/commit/f50d23d8d1

[08:00] *** lichtkind joined
[08:12] *** dakkar joined
[09:50] *** melezhik left
[10:24] *** lizmat left
[10:24] *** guifa_ joined
[10:24] *** lizmat joined
[10:24] *** slu left
[10:24] *** atweedie left
[10:24] *** BooK left
[10:24] *** atweedie joined
[10:24] *** guifa left
[10:24] *** leont left
[10:24] *** BooK joined
[10:24] *** zostay left
[10:24] *** skaji__ left
[10:24] *** rjbs left
[10:24] *** leont joined
[10:24] *** zostay joined
[10:24] *** rjbs joined
[10:24] *** skaji__ joined
[10:24] *** slu joined
[10:24] *** GreaseMonkey left
[10:25] *** greaser|q joined
[10:27] *** apac joined
[10:36] *** apac left
[10:39] *** apac joined
[10:46] <tbrowder> Cool docs tweak, even I get it!

[10:49] *** greaser|q left
[10:49] *** greaser|q joined
[10:50] *** greaser|q is now known as GreaseMonkey

[11:04] <ds7832> Can one easily handle D-Bus interfaces in Raku?

[11:04] <tellable6> 2025-09-25T07:27:22Z #raku <melezhik_> ds7832: - please take a look at Sparky - looks good for your tasks IMHO - https://gist.github.com/melezhik/d1f42e5ef8cfe56518e41aef5da5b879

[11:41] <disbot1> <antononcube> This was asked / answered before here… Or maybe, for some other “buses.”

[11:51] <ds7832> In the IRC logs the last message on "dbus" or "d-bus" is one from October 2022, impliying that at that time there was no such module: <leont> Which shouldn't be too hard once we have a dbus module, but someone has to write that first

[11:52] <ds7832> But since I couldn't find anything in the web, I do suspect that today too there's no module for that out there yet.

[11:55] <ds7832> Perhaps there's something in the making though.

[12:12] <lizmat> I guess using NativeCall and libdbus, it shouldn't be too hard to write a module for it

[12:13] <lizmat> but I don't know anybody at this point working on that, maybe leont has some thoughts about it

[12:13] <leont> Yeah it shouldn't be too hard.

[12:14] <leont> I haven't worked on it because I'd want to write a gobject library first and that is actually harder.

[12:36] *** ACfromTX left
[12:38] *** MoC joined
[12:40] *** ACfromTX joined
[13:15] <ab5tract> leont: I wish I could manage to comprehend https://gi.readthedocs.io/en/latest/

[13:15] <ab5tract> *GObject Introspection

[13:43] *** apac left
[13:49] *** derpydoo left
[13:58] <Geth> ¦ raku.org/html404: bfa6d6746c | librasteve++ | 2 files

[13:58] <Geth> ¦ raku.org/html404: tweak code example

[13:58] <Geth> ¦ raku.org/html404: review: https://github.com/Raku/raku.org/commit/bfa6d6746c

[13:58] *** Sgeo joined
[14:00] <Geth> ¦ raku.org: librasteve++ created pull request #266: Add HTML 404 Response

[14:00] <Geth> ¦ raku.org: review: https://github.com/Raku/raku.org/pull/266

[14:09] *** lichtkind left
[14:10] <Geth> ¦ raku.org/main: bfa6d6746c | librasteve++ | 2 files

[14:10] <Geth> ¦ raku.org/main: tweak code example

[14:10] <Geth> ¦ raku.org/main: review: https://github.com/Raku/raku.org/commit/bfa6d6746c

[14:10] <Geth> ¦ raku.org/main: 34e704130c | librasteve++ (committed using GitHub Web editor) | 2 files

[14:10] <Geth> ¦ raku.org/main: Merge pull request #266 from Raku/html404

[14:10] <Geth> ¦ raku.org/main: 

[14:10] <Geth> ¦ raku.org/main: Add HTML 404 Response

[14:11] <Geth> ¦ raku.org/main: review: https://github.com/Raku/raku.org/commit/34e704130c

[14:26] *** lichtkind joined
[15:00] *** stanrifkin joined
[15:37] *** apac joined
[16:06] *** apac left
[16:29] *** davidschultz joined
[16:39] *** dakkar left
[16:41] *** apac joined
[16:47] *** apac left
[16:57] *** apac joined
[17:20] *** human-blip left
[17:23] *** human-blip joined
[17:48] *** apac left
[17:48] *** apac joined
[17:48] *** apac left
[17:48] *** apac joined
[17:53] *** melezhik joined
[17:53] <melezhik> .

[18:16] <Geth> ¦ docker: c40c9a5499 | AntonOks++ | 2025.08.1/trixie/Dockerfile

[18:16] <Geth> ¦ docker: Adding debian trixie

[18:16] <Geth> ¦ docker: 

[18:16] <Geth> ¦ docker: trixie will be "latest"

[18:16] <Geth> ¦ docker: review: https://github.com/rakudo/docker/commit/c40c9a5499

[18:30] <[Coke]> is antonoks on irc?

[18:33] <lizmat> not afaik

[19:08] *** [Coke] left
[19:10] *** [Coke] joined
[20:03] *** melezhik left
[20:55] <lizmat> weekly: https://news.ycombinator.com/item?id=45378812

[20:55] <notable6> lizmat, Noted! (weekly)

[21:59] <disbot1> <antononcube> 🤔

[22:27] *** apac left
[22:33] *** apac joined
[22:48] *** lichtkind left
[23:25] *** davidschultz left
[23:55] *** dustinm` left
