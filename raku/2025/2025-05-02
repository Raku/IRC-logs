[00:06] *** LainIwakura joined
[00:45] *** lichtkind left
[01:14] *** hulk joined
[01:14] *** kylese left
[02:15] *** hulk left
[02:15] *** kylese joined
[03:11] *** stanrifkin_ joined
[03:14] *** stanrifkin left
[03:45] *** kylese left
[03:48] *** kylese joined
[03:56] *** derpydoo joined
[05:25] *** LainIwakura left
[05:34] *** SpaceRobot joined
[05:34] <SpaceRobot> 0 Hello robots......

[05:37] *** lizmat_ joined
[05:41] *** lizmat left
[06:02] *** derpydoo left
[06:10] *** LainIwakura joined
[06:21] *** SpaceRobot left
[06:22] *** LainIwakura left
[06:24] *** Aedil joined
[06:37] *** derpydoo joined
[06:39] *** derpydoo left
[06:40] *** LainIwakura joined
[06:44] *** LainIwakura left
[09:46] *** Geth joined
[10:39] *** sjm_ left
[10:58] <wayland> .tell ab5tract: The changes to the Distribution/Resource writeup are in a PR at https://github.com/Raku/doc/pull/4570 (you may not be that keen, but thought I'd mention it)

[10:58] <tellable6> wayland, I'll pass your message to ab5tract

[11:00] <wayland> Do we still have a karma bot?  

[11:07] <lizmat> don't think we do, but we haz logs and a search engine on the logs...

[11:16] <wayland> Was that intentional, or did it just fall by the wayside?  

[11:18] <lizmat> I think the latter...

[11:19] <lizmat> but since we haz the logs, we could get one up and running again, and feed it all the karma back to 2005 if one feels that to be necessary

[12:03] <discord-raku-bot> <antononcube> I uploaded with fez a new version of "WWW::OpenAI" , version 0.3.6, and still do not see it in raku.land and 360.zef.pm .

[12:03] <discord-raku-bot> <antononcube> Anyone else having that problem?

[12:41] <wayland> antononcube: I've had it take a fair while before.  

[12:42] <wayland> lizmat: Cool :) .  

[12:44] <discord-raku-bot> <antononcube> @wayland Ok. But it is already 11+ hours since I uploaded it. üôÇ

[12:50] <wayland> I don't think I've had any go longer than 2h.  

[13:00] <discord-raku-bot> <antononcube> üò≠

[13:16] *** grondilu joined
[13:17] <grondilu> Hello.  Is mixing a parametric role supposed to be expensive?  I used one in my Chess module and lost a lot of performance.

[13:18] <grondilu> see https://github.com/grondilu/chess/commit/f97b26f81be30d3fd527da6dbfc4fc862f85998c

[13:44] <vasko> librasteve: The reason `PUT /task/1/done` and `DELETE /task/1/done` is more HTMX & REST over `GET /task/1/toggle` is that the former is more uniform. With a `GET /task/1/done` subresource to check if it's done. It also has the benefit of being declarative and idempotent. The `/toggle` is basically RPC. And as you already mentioned if you want a

[13:44] <vasko> `/task/1/toggle` you want `POST` for XSS, preloading & caching reasons.

[13:46] <vasko> librasteve: The other approach is not to use a subresource, you can also do a form which does a `PUT /task/1` with an `done` key in the body.

[14:00] *** wayland left
[14:00] *** wayland joined
[14:10] <ugexe> i dunno if mixing in a parametric role is supposed to be expensive, but it certainly feels intuitive that it would be the fastest/cheapest thing

[14:10] <ugexe> that it would not be the fastest/cheapest thing rather

[14:12] *** wayland left
[14:12] *** wayland joined
[14:21] <SmokeMachine> vasko: I‚Äôm thinking about that, and maybe doing something like this would make that possible: `multi method done is accessible{:http-method<PUT>) { $!done = True }; multi method done is accessible{ :http-method<DELETE> } { $!done = False }`. I don‚Äôt think this would work now (because, if I remind it correctly, I save use the method name instead of the method it self) but I think that might be implementable‚Ä¶

[14:21] *** wayland left
[14:21] *** wayland joined
[14:22] <SmokeMachine> And it should work for any set of http methods‚Ä¶

[14:28] <vasko> SmokeMachine can you make `done` a cromponent too?

[14:31] *** Sgeo joined
[14:32] <Voldenet> grondilu: Is mixin always being slow or just when using parametrized role with it? Because I'm suspecting that https://github.com/rakudo/rakudo/blob/main/src/Perl6/Metamodel/Mixins.nqp#L65 gets called for any parametrized value

[14:35] <Voldenet> in general I'd expect specialization/monomorphization be slow, but I was wondering which part was slower

[14:43] <Voldenet> m: role SAN[Str $san] { method SAN { $san } }; my $start = now; for ^1000 { my $w = "a" but SAN["bleh"]; }; say now - $start # parametrized role

[14:43] <camelia> rakudo-moar b527cefcb: OUTPUT: ¬´0.008457542‚ê§¬ª

[14:44] <Voldenet> m: role SAN { has $.san; method SAN { $.san } }; my $start = now; for ^1000 { my $w = "a" but SAN.new(san => "bleh"); }; say now - $start # non-parametrized role

[14:44] <camelia> rakudo-moar b527cefcb: OUTPUT: ¬´0.564101691‚ê§¬ª

[14:45] <Voldenet> m: my $start = now; for ^1000 { my $w = "a" but role { has $.SAN = "bleh" }; }; say now - $start

[14:45] <camelia> rakudo-moar b527cefcb: OUTPUT: ¬´0.082737783‚ê§¬ª

[14:45] <Voldenet> fascinating

[14:45] <SmokeMachine> vasko: sorry, what do you mean by making it a Cromponent? How would you use that?

[14:47] <Voldenet> however

[14:47] <Voldenet> m: role SAN[Str $san] { method SAN { $san } }; my $start = now; for ^1000 { my $w = "a" but SAN["bleh" ~ $_]; }; say now - $star

[14:47] <camelia> rakudo-moar b527cefcb: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Variable '$star' is not declared.  Did you mean '$start'?‚ê§at <tmp>:1‚ê§------>  "a" but SAN["bleh" ~ $_]; }; say now - <HERE>$star‚ê§¬ª

[14:47] <Voldenet> m: role SAN[Str $san] { method SAN { $san } }; my $start = now; for ^1000 { my $w = "a" but SAN["bleh" ~ $_]; }; say now - $start

[14:47] <camelia> rakudo-moar b527cefcb: OUTPUT: ¬´0.735249532‚ê§¬ª

[14:48] <Voldenet> So, parametrization takes a lot of time if it doesn't hit the cache

[14:48] <Voldenet> and mixin fails to hit the cache for different specializations it seems

[14:52] *** wayland left
[14:52] *** wayland joined
[14:56] <[Coke]> 'rakubrew build-zef' gave me Building zef latest but then HEAD is now at f924b1f Bump version 0.22.8

[14:57] <[Coke]> missing a fetch or something? (shouldn't that be 2c6ab9f?)

[14:58] <ugexe> i think that shows what version the local clone is currently at

[14:59] <ugexe> and it gets updated *from* that version to whatever

[15:02] <[Coke]> looks like you need 'rakubrew self-upgrade' in there to update that zef clone

[15:07] <[Coke]> ugexe: if I have items in test-depends, but try to run with --/test, 'zef install --deps-only --/test .' does nothing - Is there a way to say "I want to install my test dependencies but not test the deps themselves"?

[15:10] <ugexe> `--/test --test-depends` maybe

[15:10] <ugexe> along with --deps-only

[15:11] <Voldenet> m: my $start = now; for ^1000 -> $i { my $w = "a" but role { has $.SAN = "bleh" ~ $i }; }; say now - $start # for completion

[15:11] <camelia> rakudo-moar b527cefcb: OUTPUT: ¬´0.063507467‚ê§¬ª

[15:11] <ugexe> yeah - https://github.com/ugexe/zef/blob/2c6ab9ff94bb0f786c21c46bd05f9a2305bf0471/lib/Zef/CLI.rakumod#L405

[15:13] <[Coke]> nice, thanks!

[15:13] <[Coke]> (raku/doc is just a weird repo, can't imagine anyone else wants this particular combo. :)

[15:16] <discord-raku-bot> <antononcube> .seen patrickb

[15:16] <tellable6> antononcube, https://gist.github.com/6d3c66c82f1f4ac72b28ae028253488a

[15:18] *** human-blip left
[15:20] *** human-blip joined
[15:22] *** wayland left
[15:23] *** wayland joined
[15:29] <Voldenet> grondilu: I've compared profiles and with `$move but SAN[‚Ä¶variable‚Ä¶]` roughly the same time is taken by ParametricRoleGroupHOW.parametrize and Mixins.mixin ‚Äì `$move but role { has $.SAN = ‚Ä¶ }` is orders of magnitude faster

[15:32] <vasko> SmokeMachine Like if you made `done` a cromponent within `Task`, then `done` would could routes `GET/PUT/DELETE /task/$id/done`. If you do `GET /task/1/done` you would get a 200 or a 404 indicating if whether the done subresource exists.

[15:32] <Voldenet> generate_mixin is called every time, but it isn't slow

[15:33] *** wayland left
[15:33] *** wayland joined
[15:40] *** wayland left
[15:40] *** wayland76 joined
[15:49] *** Aedil joined
[15:53] *** wayland76 left
[15:53] *** wayland joined
[16:14] *** wayland left
[16:14] *** wayland joined
[16:24] *** wayland left
[16:24] *** wayland joined
[16:31] <SmokeMachine> vasko: but how would the RENDER method for done work?  I‚Äôm not getting how would work done as a component‚Ä¶

[16:43] *** wayland left
[16:44] *** wayland joined
[16:52] *** Sgeo_ joined
[16:55] *** Sgeo left
[16:55] *** wayland left
[16:56] *** wayland joined
[17:36] *** wayland left
[17:36] *** wayland joined
[17:50] *** wayland left
[17:51] *** wayland76 joined
[17:51] *** wayland76 left
[17:51] *** wayland76 joined
[18:56] *** kst`` left
[19:00] <discord-raku-bot> <antononcube> So, who can fix fez ? üôÇ  I do not see 'WWW::OpenAI:ver<0.3.6>" in https://360.zef.pm , but it try to upload version I get an email that I have to bump the package version.

[19:03] *** kst`` joined
[19:06] <SmokeMachine> wayland76: hi! Just to let you know I have answered your Red issue.

[20:28] <ab5tract> Voldenet: that‚Äôs a really interesting finding. Can I trouble you to create a ticket for this so it doesn‚Äôt fall through the cracks?

[20:28] <tellable6> 2025-05-02T10:58:13Z #raku <wayland> ab5tract: The changes to the Distribution/Resource writeup are in a PR at https://github.com/Raku/doc/pull/4570 (you may not be that keen, but thought I'd mention it)

[20:32] <patrickb> antononcube: What's up? I'm usually following IRC pretty closely. Off to bed now, but type away!

[20:32] <wayland76> patrickb: He uploaded his module, but it's not appearing on raku.land, etc.

[20:33] <wayland76> (not sure if that's what he wanted you for, but anyway :) )

[21:51] <lizmat> antononcube ping tonyo

[21:51] <lizmat> antononcube fwiw, the REA didn't see it either yet

[21:51] <lizmat> so that tracks

[21:55] <tbrowder> lizmat: distro 'Pod::TreeWalker' might be the solution for my use case rather than the RakuAST route. Your touch in the 't/lib/TestWalker.rakumod' appears to be a very good example of how to collect desired data from pod.

[21:59] <discord-raku-bot> <antononcube> .seen tonyo

[21:59] <tellable6> antononcube, I saw tonyo 2025-04-15T15:52:08Z in #raku-dev: <tonyo> then

[22:11] <discord-raku-bot> <antononcube> @patrickb You asked for certain LLM processing of IRC logs.

[22:30] <wayland76> m: role Foo { method foo() {} }; say Foo.^methods(:all);

[22:30] <camelia> rakudo-moar b527cefcb: OUTPUT: ¬´(foo)‚ê§¬ª

[22:31] <wayland76> Why doesn't that return all the methods from eg. Mu?  

[22:34] <discord-raku-bot> <coranila> m: role Foo {}; say Foo.new.methods(:all)

[22:34] <discord-raku-bot> <Raku eval>  Exit code: 1 No such method 'methods' for invocant of type 'Foo'   in block <unit> at main.raku line 1  

[22:34] <evalable6> coranila, rakudo-moar b527cefcb: OUTPUT: ¬´(exit code 1) No such method 'methods' for invocant of type 'Foo'‚ê§  in block <unit> at /tmp/gFtp5LXGSL line 1‚ê§‚ê§¬ª

[22:35] <discord-raku-bot> <coranila> ah shucks, the caret!

[22:35] <discord-raku-bot> <coranila> wayland76: the point stands, you gotta pun to get an actual MRO; the role is not an object and as such does not know how to look for methods particularly well

[22:36] <discord-raku-bot> <coranila> m: role Foo {}; say Foo.new.^methods(:all)

[22:36] <discord-raku-bot> <Raku eval>  (permutations prepend max flat FLATTENABLE_HASH batch match throw-cannot-be-empty end nodemap fmt join Array AT-KEY maxpairs ACCEPTS splice produce roll List ASSIGN-KEY Bag SetHash tree BIND-KEY repeated none grep values ZEN-KEY print-nl unique are iterator lazy-if all pairup any Hash minmax elems BagHash keys serial fail-cannot-be-empty collate ASSIGN-POS push Slip reduce Seq antipairs sort Supply BIND-POS

[22:36] <discord-raku-bot> combinations Mix AT-POS EXISTS-KEY Map iterator-and-first unshift Set slice nl-out cache FLATTENABLE_LIST deepmap duckmap pairs EXISTS-POS kv skip head DELETE-POS first DELETE-KEY rotor sum MixHash categorize chrs toggle tail minpairs squish map reverse throw-iterator-cannot-be-lazy pick append classify eager hash flatmap invert fail-iterator-cannot-be-lazy list min one ...) 

[22:36] <evalable6> coranila, rakudo-moar b527cefcb: OUTPUT: ¬´(EXISTS-KEY DELETE-KEY DELETE-POS cache list fm‚Ä¶¬ª

[22:36] <evalable6> coranila, Full output: https://gist.github.com/9b72a888fb346ec1025c252a4efcdceb

[22:37] <vasko> SmokeMachine: it doesn't matter it could be an empty 200, a Boolean or some resource with information about when it was done, but we don't care too much. What we care is it exists or not.

[22:37] *** wayland76 left
[22:43] <SmokeMachine> vasko: but that‚Äôs the thing‚Ä¶ for a component it should matter‚Ä¶ a component, at least initially, is something to be shown on the browser‚Ä¶

[22:45] *** wayland76 joined
[22:46] <wayland76> coranila: Thanks!  

[23:08] *** lichtkind left
