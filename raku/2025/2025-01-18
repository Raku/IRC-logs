[00:34] *** human-blip joined
[00:41] *** oodani left
[00:42] *** Sgeo joined
[00:46] *** oodani joined
[00:55] *** Sgeo left
[01:02] *** Guest69 joined
[01:18] <ugexe> if it is indeed related to . and .. in the path somewhere i wonder if we could update this conditional - https://github.com/MoarVM/MoarVM/blob/dd98cb2e349c8eb7c9787f1f8118a1cb9cb6136b/src/io/io.c#L448 - to naive do the cleanup of those two things

[01:21] <ugexe> .cleanup doesnt do anything with .. and .resolve doesnt do anything if part of the path doesnt exist yet (since it depends on checking if the file is a link etc i guess) but that will fail because the path is too long and wont be a valid long path in moarvm due to the ..

[01:25] *** Sgeo joined
[01:45] *** Guest69 left
[02:29] *** nine left
[02:30] *** nine joined
[02:36] *** hulk joined
[02:37] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:30] *** kylese left
[03:34] *** kylese joined
[03:36] *** yewscion_ joined
[03:40] *** Sgeo left
[03:41] *** yewscion_ left
[03:51] *** yewscion_ joined
[03:56] *** yewscion_ left
[04:02] *** ramman joined
[04:13] *** Sgeo joined
[04:55] *** Aedil joined
[06:44] *** Aedil left
[08:26] *** rir_ joined
[08:28] *** rir left
[08:30] *** rir_ left
[08:36] *** Aedil joined
[09:24] *** human-blip left
[09:26] *** human-blip joined
[09:38] *** euandreh1 joined
[09:39] *** euandreh1 left
[09:40] *** euandreh left
[09:42] *** euandreh joined
[10:29] *** euandreh left
[10:30] *** euandreh joined
[10:32] *** euandreh left
[10:59] *** eseyman left
[11:03] *** manu_ joined
[11:06] *** manu_ is now known as eseyman

[11:14] *** Sgeo left
[11:31] *** sena_kun joined
[11:50] *** melezhik joined
[11:50] <melezhik> .

[11:50] <melezhik> hey patrickb , maybe you're interested in test failure for Rainbow - https://sparky.sparrowhub.io/report/sh-patrickb-Rainbow/23033

[11:53] <patrickb> Definitely interested. Can you maybe create a ticket at https://todo.sr.ht/~patrickb/Rainbow

[11:57] *** melezhik left
[12:41] *** yewscion_ joined
[12:46] *** yewscion_ left
[13:02] *** yewscion_ joined
[13:07] *** yewscion_ left
[13:26] <discord-raku-bot> <melezhik.> https://todo.sr.ht/~patrickb/Rainbow/9

[13:27] *** human-blip left
[13:29] *** human-blip joined
[13:33] *** yewscion_ joined
[13:38] *** yewscion_ left
[14:03] *** sena_kun left
[14:05] *** sena_kun joined
[14:11] *** sena_kun left
[14:12] *** sena_kun joined
[14:12] *** yewscion_ joined
[14:17] *** yewscion_ left
[14:29] *** human-blip left
[14:31] *** human-blip joined
[14:33] <patrickb> Cool. Thank you!

[14:58] *** human-blip left
[14:59] *** human-blip joined
[16:02] *** yewscion_ joined
[16:10] *** yewscion_ left
[16:18] *** yewscion_ joined
[16:25] *** yewscion_ left
[16:31] <tbrowder> ugexe: i'm stuck with a bad zef ugrade for module PDF::Font::Loader. Unfortunately I uninstalled the previous working version and i can't seem to install the previous version even with --force-install. is there any way to force such an install?

[16:32] <timo> what is preventing the install of the previous version from working?

[16:32] <timo> in other words, what error are you getting?

[16:52] *** apac joined
[16:59] <tbrowder> i get no installation error, but zef will not install the specific version i want (the older version). zef always installs the latest version regardless of my input. maybe i'm using the wrong syntax. i have tried: "zef install 'PDF::Font::Loader:version<0.8.10>:auth<zef:dwarring>'" (and variations) to no avail.

[17:00] <tbrowder> i mean "ver"

[17:01] <timo> ok, so you can see in the output of the "zef install" call that it's actually grabbing a newer version?

[17:03] <timo> the first line shows "Searching for: PDF::Font::Loader:ver<0.8.10>:auth<zef:dwarring>"?

[17:03] <tbrowder> my bad BIG typo, but no warning from zef. i was using 'v<>' instead of 'ver'

[17:04] <timo> oh, ok

[17:04] <tbrowder> zef ignored the v part in all instances

[17:05] <tbrowder> my end is working now, but...i'll try --debug...

[17:12] <tbrowder> ok, no warning, but zef completely ignored the 'v<0.8.10>' part

[17:12] <lizmat> could actually be a CURI issue

[17:13] <tbrowder> and that confused me old eyes that kept missing the typo

[17:14] <tbrowder> now if i can just 'member that weirdism

[17:17] <ugexe> you use the same syntax as if you were loading the module

[17:18] <ugexe> you wouldnt do `use Foo:v<0.8.10>`

[17:18] <ugexe> you would do `use Foo:ver<0.8.10>;`

[17:19] <ugexe> zef also allows one to use :version<...> although raku does not look at e.g. `use Foo:version<0.8.0>` (to raku this is still :ver<*>)

[17:20] <ugexe> but the easiest way to remember it is to just use the syntax you would use to actually use the module you want

[17:20] <timo> is a check for wrong adverbs missing in zef, or in rakudo?

[17:21] <ugexe> i dont think it is missing in rakudo because that wouldnt forward compatible or whatever

[17:22] <ugexe> arguably zef could emit a warning, but generally it doesnt as it doesnt make sense to warn when parsing some bad name in an ecosystem when it generates its initial index or some such. so it would need to be targeted towards the parsing of user input specifically

[18:07] <ramman> Are all PCRE regexs valid Raku regexs?

[18:13] <[Coke]> Not intentionally?

[18:13] <[Coke]> I would certainly not expect them to mean the same things all the time

[18:15] <[Coke]> Why do you ask?

[18:19] <timo> most pcre regexes are not valid raku regexes

[18:20] <timo> er, unless it's okay that they don't mean the same thing

[18:20] <ramman> Cool, thanks.

[18:20] <timo> you can put a literal < in a PCRE right?

[18:25] <timo> so for example, every pcre that matches raku-regex / <[a..z A..Z 0..9]>* '<' <[a..z A..Z 0..9>]* / is valid pcre but invalid raku regex

[18:26] <timo> that was supposed to be 0..9]>* rather than 0..9>]*

[18:26] <timo> because < in raku are a construct that requires a matching > to go along with it

[18:28] <timo> but /[abcdef]/ are valid in both pcre and raku, but they match different things

[18:30] <ramman> Okay, I understand. I was basically just asking if you need to learn a different way of doing regexs to use them in Raku.

[18:31] <coleman> It's not 100% new, but it is different

[18:32] <timo> there is limited backwards compatibility in raku for p5 regexes

[18:32] <timo> m: say "abcd" ~~ m:P5/[abcd]/;

[18:32] <camelia> rakudo-moar 3559bb9bc: OUTPUT: «｢a｣␤»

[18:32] <timo> m: say "abcd" ~~ m/[abcd]/;

[18:32] <camelia> rakudo-moar 3559bb9bc: OUTPUT: «｢abcd｣␤»

[18:53] <tbrowder> ugexe: i know that, but i finger-fumble a lot and my eyes don't catch such errors. a warning or failure from zef would be very helpful. and i know the old saying something like: " doing the same thing over and over and expecting different results is the defintion of insanity"

[18:56] <discord-raku-bot> <librasteve> ramman: not sure if you know the history, but Larry put regex into perl and it became the universal standard - thus "Perl Compatible Regular Expressions" == PCRE. But come the rediesign and Larry knew that PCRE were broken, particularly in respect to high level composition of regexen such as Grammars - and so with perl6 (now called raku) he fixed it.

[18:59] <discord-raku-bot> <librasteve> this section of the perl => raku guidance https://docs.raku.org/language/5to6-nutshell#Regular_expressions_(_regex_/_regexp_) has some tips for the level of change which is fairly low overall

[18:59] <ramman> What didn't he like about pcre?

[19:00] <lizmat> not being composable

[19:00] <lizmat> prematurely huffman coded

[19:01] <discord-raku-bot> <librasteve> tbrowder: take a sec ... you are asking for zef to consider all the ways you are typing ver<...> incorrectly and then to warn you ... err this is your own lookout

[19:02] <timo> https://github.com/Raku/raku.org/blob/main/archive/doc/design/apo/A05.pod this might help, that's from long long ago

[19:03] <tbrowder> well, yes, but just tell me it can't handle it and why. i do that with my progs.

[19:03] <tbrowder> raku does that.

[19:04] <discord-raku-bot> <librasteve> https://github.com/Raku/old-design-docs/blob/master/S05-regex.pod

[19:04] <tbrowder> most good programs do that

[19:05] <tbrowder> esp. with "--debug"

[19:06] <timo> i explicitly did not link to the synopsis but the apocalypse

[19:06] <tbrowder> librasteve: ^^

[19:07] <discord-raku-bot> <librasteve> sorry timo - I didn't realise you had beaten me to it ... ramman ... please start with timos link

[19:11] <tbrowder> i love raku regexes, it was a joy redoing my old perl uses into raku

[19:12] <discord-raku-bot> <librasteve> amen to that

[19:13] <timo> the synopses are often no longer correct due to changes to the language that happened after they were no longer considered the "source of truth"

[19:13] <timo> though i don't know what has changed in the regex one

[19:14] <discord-raku-bot> <librasteve> timo: thanks for the link to the apo - it is a very good read

[19:14] <timo> but the apo document goes through specifically what larry didn't like about PCRE and what the RFCs were that went into the design

[19:15] <discord-raku-bot> <librasteve> yeah

[19:24] *** apac left
[19:27] <discord-raku-bot> <librasteve> We're frogs who are getting boiled in a pot full of single-character morphemes, and we don't notice. <== PCRE

[19:35] <timo> i should probably point out that there are also still things in the apo document that are no longer how the regex design ended up, even when there is an "Update:" there those updates themselves are also possibly outdated

[19:40] *** dmvrtx left
[19:41] *** dmvrtx joined
[19:49] *** Guest69 joined
[20:02] *** yewscion_ joined
[20:08] *** yewscion_ left
[20:30] *** ramman left
[20:33] *** Guest69 left
[20:39] *** Guest69 joined
[20:39] *** Sgeo joined
[20:46] <xinming> releasable6: status

[20:46] <releasable6> xinming, Next release in ≈6 days and ≈22 hours. There are no known blockers. Changelog for this release was not started yet

[20:46] <releasable6> xinming, Details: https://gist.github.com/2ca98afc000c40e4241acfae85989ac5

[20:48] *** bisectable6 left
[20:51] *** Aedil left
[20:57] *** bisectable6 joined
[21:10] <coleman> Today I learned (or re-learned, because I never use them) that "git trailers" metadata is a thing https://alchemists.io/articles/git_trailers

[21:14] *** abhinav joined
[21:17] <timo> oh this is the first time i've heard of branch descriptions

[21:36] *** abhinav left
[21:52] <discord-raku-bot> <antononcube> They remind me of conventional commits: https://www.conventionalcommits.org/en/v1.0.0/

[22:33] *** ramman joined
[22:58] *** yewscion_ joined
[23:03] *** yewscion_ left
[23:30] *** yewscion_ joined
[23:34] *** yewscion_ left
[23:47] *** sena_kun left
