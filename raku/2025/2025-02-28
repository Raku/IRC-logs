[00:12] <discord-raku-bot> <antononcube> My approach of computing related primes in Raku is probably slow, i.e. it can be optimized. But it is easy to verify.

[00:13] *** lichtkind_ left
[00:14] *** sena_kun left
[00:18] *** nil78 joined
[00:37] *** nil78 left
[00:43] *** nil78 joined
[00:45] *** Guest51 joined
[00:45] *** Guest51 left
[00:46] *** Guest517 joined
[00:48] *** Guest517 left
[01:32] *** nil78 left
[01:35] *** nil78 joined
[01:44] *** nil78 left
[01:46] *** nil78 joined
[02:41] *** yewscion joined
[02:49] *** yewscion left
[02:50] *** hulk joined
[02:51] *** kylese left
[02:52] *** yewscion joined
[02:57] *** yewscion left
[03:15] *** hulk left
[03:15] *** kylese joined
[04:00] *** nil78 left
[04:03] *** guifa left
[04:06] *** nil78 joined
[04:07] *** comborico1611 joined
[05:02] *** ACfromTX left
[05:05] *** ACfromTX joined
[05:12] *** nil78 left
[05:20] *** nil78 joined
[05:31] *** Sevalecan left
[05:32] *** Sevalecan joined
[06:05] *** Aedil joined
[06:44] *** nil78 left
[06:46] *** nil78 joined
[07:07] *** yewscion joined
[07:12] *** yewscion left
[07:18] *** comborico1611 left
[07:59] *** wbooze joined
[08:06] *** wbooze left
[08:19] *** melezhik joined
[08:19] <melezhik> .

[08:35] *** Sgeo left
[08:36] *** jpn joined
[08:37] *** wbooze joined
[08:37] <melezhik> .tell antononcube: I've migrated your modules to sparky, you may need to remove sparky.yaml from repos ( no longer required ) and update markdown badges, according build pages - https://gist.github.com/melezhik/2aaa9e013d7776488f0d4a888d8f0bb1

[08:37] <tellable6> melezhik, I'll pass your message to antononcube

[08:38] <melezhik> to pick up a badge, just go a module build page, say https://sparky.sparrowhub.io/report/antononcube-Raku-ML-ROCFunctions/23757 and then artifact -> badge.txt 

[08:51] *** melezhik left
[08:51] *** jpn left
[09:18] *** jpn joined
[09:19] *** wayland76 joined
[09:24] <wayland76> Hi!  :) 

[09:25] *** sena_kun joined
[09:28] <wbooze> morning

[09:38] *** lichtkind joined
[09:52] *** tgt left
[09:52] *** tgt joined
[10:04] *** dustinm` left
[10:10] *** dustinm` joined
[10:24] *** tgt left
[10:28] *** sena_kun left
[10:53] *** yewscion joined
[10:56] *** nil78 left
[10:57] *** yewscion left
[11:01] *** nil78 joined
[11:02] <wayland76> wbooze: morning :) .  Though it's 10pm here :) 

[11:03] *** jpn left
[11:18] *** nil78 left
[11:20] *** nil78 joined
[11:29] *** nil78 left
[11:32] *** nil78 joined
[11:33] *** jpn joined
[11:36] *** derpydoo joined
[11:37] *** Guest90 joined
[11:38] *** Guest90 left
[11:44] *** nil78 left
[11:50] *** nil78 joined
[11:53] *** yewscion joined
[11:58] *** yewscion left
[11:59] *** derpydoo left
[12:04] *** guifa joined
[12:20] *** nil78 left
[12:24] *** nil78 joined
[12:46] *** guifa left
[12:47] *** yewscion joined
[12:51] *** yewscion left
[13:04] *** yewscion joined
[13:07] *** jpn left
[13:09] *** yewscion left
[13:22] *** jpn joined
[13:36] *** JimmyZ joined
[13:38] *** JimmyZ left
[13:52] *** yewscion joined
[14:00] *** yewscion left
[14:50] *** Sgeo joined
[14:55] <tbrowder> lizmat: ref digits and non-digits unable to be in a single set. other than a custom class, could enabling that in core be feasible?

[14:56] <tbrowder> numeric and non-numeric...

[14:58] <discord-raku-bot> <librasteve> tbrowder: hi. I am probably in a minority, but I am a fan of Allomorphs and I think that this is the kind of use case that the perl6 designers had in mind

[14:58] <discord-raku-bot> <librasteve> for example

[14:59] <discord-raku-bot> <librasteve> m: my %h is Set = <0 1 2 a b>; say %h<1>, %h<a>

[14:59] <evalable6> librasteve, rakudo-moar e0aaadf19: OUTPUT: ¬´TrueTrue‚ê§¬ª

[14:59] <discord-raku-bot> <Raku eval>  TrueTrue 

[15:01] <discord-raku-bot> <librasteve> or more clearly...

[15:03] <tbrowder> m: my $aset = <a b>.Set

[15:03] <camelia> rakudo-moar e0aaadf19: ( no output )

[15:03] <discord-raku-bot> <librasteve> m: my %h is Set[NumStr()] = <0 1 2 a b>; say %h<1>, %h<a>

[15:03] <evalable6> librasteve, rakudo-moar e0aaadf19: OUTPUT: ¬´TrueTrue‚ê§¬ª

[15:03] <discord-raku-bot> <Raku eval>  TrueTrue 

[15:05] <tbrowder> m: my $aset=<a b>.Set; my $bset = <1 2 3>.Set; $aset (|) $bset;

[15:05] <camelia> rakudo-moar e0aaadf19: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "(|)" in expression "$aset (|) $bset" in sink context (line 1)‚ê§¬ª

[15:07] <tbrowder> m: my $a=<a b>.Set; my $b = <1 2>.Set; my $c = $a (|) $b; say $c.gist

[15:07] <camelia> rakudo-moar e0aaadf19: OUTPUT: ¬´Set(1 2 a b)‚ê§¬ª

[15:10] <tbrowder> m: my $a=<a b 1 2>.Set; my $b = <b>.Set; my $res = $b (<=) $a; say $res

[15:10] <camelia> rakudo-moar e0aaadf19: OUTPUT: ¬´True‚ê§¬ª

[15:10] *** jgaz joined
[15:11] <discord-raku-bot> <librasteve> yeah - seems like that dwims by the look of your example - or am I missing something?

[15:12] <tbrowder> hm? surprising, didn't get same result in own code, but my syntax was not quite the same

[15:12] <discord-raku-bot> <librasteve> yeah - I imagine your were aiming to show some errors / limitations

[15:13] <tbrowder> that result ^^ is what i wanted, let me try here what i did offline, a short eg.

[15:13] <discord-raku-bot> <librasteve> sure

[15:15] <tbrowder> m: my $a = <1 2 a b>.Set; my $res = <1>.Set (<=) $a; say $res

[15:15] <camelia> rakudo-moar e0aaadf19: OUTPUT: ¬´True‚ê§¬ª

[15:16] *** abraxxa-home joined
[15:16] <tbrowder> hm?  must have been to tired!!! this is very encouraging!

[15:16] *** abraxxa-home left
[15:16] <tbrowder> *too

[15:17] <discord-raku-bot> <librasteve> it does mean that the literal <> syntax and index <> syntax are carrying a lot of the load

[15:17] *** abraxxa-home joined
[15:17] <tbrowder> that's ok with me!

[15:18] <discord-raku-bot> <librasteve> and as lizmat mentioned yesterday - you cannot use {1} or {'1'} to index digits - has to be <1>

[15:20] <discord-raku-bot> <librasteve> I'll add to my "reasons to hug an allomorph"

[15:20] *** abraxxa-home left
[15:20] <tbrowder> yes, but that get's hidden behind the $, and i think i can live with that...back to the drawing board...

[15:22] <discord-raku-bot> <librasteve> m: my $a=<a b 1 2 10e0>.Set; my $i = <10e0>; say $i (<) $a

[15:22] <evalable6> librasteve, rakudo-moar e0aaadf19: OUTPUT: ¬´True‚ê§¬ª

[15:22] <discord-raku-bot> <Raku eval>  True 

[15:22] <tbrowder> m: my $a=<1 2 a b>.Set; my $b =<1 a>.Set; my $res = $b (<=) $a; say $res

[15:22] <camelia> rakudo-moar e0aaadf19: OUTPUT: ¬´True‚ê§¬ª

[15:22] <discord-raku-bot> <librasteve> ^^ checks (i find I remember stuff better when I try it)

[15:22] <tbrowder> \o/ touchdown!

[15:23] <discord-raku-bot> <librasteve> m: say "c\[THUMBS UP SIGN]"

[15:23] <evalable6> librasteve, rakudo-moar e0aaadf19: OUTPUT: ¬´c[THUMBS UP SIGN]‚ê§¬ª

[15:23] <discord-raku-bot> <Raku eval>  c[THUMBS UP SIGN] 

[15:24] <tbrowder> üëç raku is so sweet!

[15:25] <discord-raku-bot> <librasteve> m: say "c\[THUMBS UP SIGN]"

[15:25] <discord-raku-bot> <Raku eval>  c[THUMBS UP SIGN] 

[15:25] <evalable6> librasteve, rakudo-moar e0aaadf19: OUTPUT: ¬´c[THUMBS UP SIGN]‚ê§¬ª

[15:26] <tbrowder> i can't believe the perl peeps keep struggling with that stuff. with arrows and messed sigils

[15:26] <discord-raku-bot> <librasteve> m: say "\c[THUMBS UP SIGN]"

[15:26] <discord-raku-bot> <Raku eval>  üëç 

[15:26] <evalable6> librasteve, rakudo-moar e0aaadf19: OUTPUT: ¬´üëç‚ê§¬ª

[15:26] <tbrowder> gotta go. later gator

[15:28] *** sftp_ joined
[15:28] *** sftp left
[15:28] *** sftp_ is now known as sftp

[15:40] *** yewscion joined
[16:21] *** yewscion left
[16:34] *** ryoskzypu joined
[16:51] *** wbooze left
[17:04] *** wbooze joined
[17:12] *** yewscion joined
[17:26] *** yewscion left
[17:56] *** yewscion joined
[18:23] *** sena_kun joined
[18:30] *** yewscion left
[18:49] *** sena_kun left
[18:50] *** sena_kun joined
[18:58] *** jpn left
[19:02] *** jpn joined
[19:03] *** sftp left
[19:04] *** sftp joined
[19:42] *** yewscion joined
[19:55] *** jpn left
[20:47] *** Aedil left
[21:11] *** notna joined
[21:11] *** notna left
[21:12] *** notna joined
[21:23] <tbrowder> ok, got it to work for me: programmatic creation of sets and proper subsets of  alphanumeric words and then testing various inputs. essentially i hid all the word chars as individual stir chars and all works. in timo's words, i "hid the sausage making" that lizmat showed inside a couple of subs.

[21:23] <tbrowder> *Str chars

[21:24] <tbrowder> i üíó raku!

[21:34] *** notna left
[21:44] *** yewscion left
[21:46] <tbrowder> and the chief core dev!

[21:51] *** yewscion joined
[22:05] *** yewscion left
[22:05] *** jgaz left
[22:26] *** guifa joined
[22:51] *** guifa left
[22:53] *** guifa joined
[23:01] *** wbooze_ joined
[23:04] *** wbooze left
[23:05] *** wbooze_ is now known as wbooze

[23:07] *** sena_kun left
[23:10] *** yewscion joined
[23:13] *** yewscion left
[23:28] *** lichtkind left
[23:42] *** ryoskzypu left
[23:44] *** Sgeo_ joined
[23:46] <wayland76> Does anyone know whether we've looked at having a Raku module for Umbrello?  

[23:46] *** Sgeo__ joined
[23:46] *** guifa left
[23:47] *** Sgeo left
[23:49] *** Sgeo_ left
[23:57] *** guifa joined
