[00:04] *** Sgeo joined
[00:11] *** yewscion joined
[00:11] *** ulipink joined
[00:16] *** ulipink left
[00:58] *** BooK left
[01:02] *** BooK joined
[01:08] *** BooK left
[01:09] *** BooK joined
[01:10] *** BooK left
[01:10] *** BooK joined
[01:16] *** yewscion left
[01:22] *** ulipink joined
[02:45] *** kylese left
[02:45] *** hulk joined
[02:52] *** yewscion joined
[03:00] *** lyiiq75 joined
[03:03] *** lyiiq75 left
[03:12] *** human-blip left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:59] *** SrainUser joined
[04:13] *** yewscion left
[04:26] *** Aedil joined
[05:16] *** Aedil left
[07:08] *** Sgeo left
[07:30] *** SrainUser left
[08:57] *** ulipink left
[09:14] *** dakkar joined
[09:59] *** sena_kun joined
[10:50] *** sorenson left
[10:54] *** sorenson joined
[11:43] *** ulipink joined
[11:43] *** ulipink left
[11:43] *** ulipink joined
[11:55] *** guifa left
[12:36] *** Aedil joined
[12:45] <tbrowder> well that is messy. i would like to see just the hot path in my code without the moarvm and such.

[12:56] <timo> can you elaborate on what your actual goal is?

[12:56] <timo> do you want to like, see performance numbers? do you want to know what different places a given function was called from?

[13:18] <discord-raku-bot> <antononcube> Speaking of "performance numbes" I think there should be a dedicated Number Theory package.

[13:18] <timo> we have the profiler where you run the program with like `raku --profile=my_profile.html -I something/something blabla.raku` and you end up with a html file you can open in your browser that has a call graph tab with a flame graph (well, icicle graph) or a table of routines that you can sort by different criteria

[13:19] <discord-raku-bot> <antononcube> Some of the Number Theory functions would likely be a good source of code the check and improve "performance numbers" for.

[13:20] <timo> there's a tool called "moarperf" that's my "new" profiler frontend which wants to have the output that you get with `--profile=my_profile.sql`, it's a little cro webapp. i'm actually not exactly sure if i've got proper releases for that at the moment

[13:20] <timo> https://github.com/timo/moarperf/releases/tag/untagged-0e520c445f30a5ea4aae here's an AppImage that contains a rakudo inside and needs no further manual work

[13:20] <discord-raku-bot> <antononcube> "Math::Sequences" has a few functions like that, but, well, it should be about sequences. I expect some of its code to be factored out.

[13:23] <timo> oh, tbrowder what OS are you on?

[13:25] <tbrowder> debian

[13:26] <timo> ok cool.

[13:26] <tbrowder> hi, timo. i just want to see the various sub calls.

[13:28] <tbrowder> i'm in the middle of some very old perl-to-raku code mixed in with ps and pdf and i got too sloppy

[13:29] <timo> "see the various sub calls" is not quite specific enough for me to give a good answer

[13:29] <timo> the Raku plugin for JetBrains IDEs, aka Comma, can "go to definition" by ctrl-clicking on subs

[14:20] *** msiism joined
[14:58] <jdv> is there a raku lsp yet?  i forget.

[15:11] <patrickb> There is one created by bscan.

[15:13] <discord-raku-bot> <antononcube> Yeah -- I used it all the time in VSCode.

[15:14] <discord-raku-bot> <antononcube> ≈95% via Jupyter, ≈%5 with Raku text/code files.

[15:21] <tbrowder> timo thanks, sorry for the sloppy answer. i'm making progress now.

[15:22] <tbrowder> i do want to try comma-ide again, but no time at the moment.

[15:30] <jdv> ah cool

[15:36] *** Sgeo joined
[15:39] <[Coke]> releasable6: status

[15:39] <releasable6> [Coke], Next release in ≈16 days and ≈3 hours. There are no known blockers. Changelog for this release was not started yet

[15:39] <releasable6> [Coke], Details: https://gist.github.com/6bcd86e439edcae1beef914d613e8af9

[15:44] <msiism> [Coke]: Should the problem report about the REPL prompt go into Rakudo problems or MoarVM problems?

[15:49] <lizmat> msiism: you mean about the index?   then rakudo

[15:52] <msiism> Yes, that. Thanks.

[15:58] *** ulipink left
[16:05] *** yewscion joined
[16:07] *** yewscion left
[16:19] <Geth> ¦ problem-solving: coke self-assigned Rakudo REPL’s prompt not configurable https://github.com/Raku/problem-solving/issues/459

[16:22] <[Coke]> Thanks. I'll poke around!

[16:22] <lizmat> [Coke]: also, https://raku.land/zef:lizmat/Prompt

[16:25] <[Coke]> Do you care if it's an env var vs. a class you plugin?

[16:25] <[Coke]> I am leaning towards env var.

[16:26] <jdv> cli arg isnt even considered?:)

[16:26] <[Coke]> given how big bash PS1's get, I wouldn't

[16:26] <jdv> i like env var

[16:28] *** ulipink joined
[16:28] *** ulipink left
[16:28] *** ulipink joined
[16:29] <msiism> [Coke]: Thank you. I'll stay tuned.

[16:30] <msiism> I don't really know about classes you plug in, so I can't really say. But an environment variable would be fine with me.

[16:31] *** yewscion joined
[16:32] *** ulipink left
[16:35] <[Coke]> do we see this as a rakudo feature or a raku feature?

[16:35] <[Coke]> (putting it in with a rakudo-specific name for now)

[16:36] <msiism> I would be able to set the environment variable from within the REPL, right?

[16:37] <[Coke]> https://github.com/rakudo/rakudo/tree/coke/ps1

[16:38] <[Coke]> Yes.

[16:38] <msiism> Good.

[16:38] <[Coke]> you'd have do so something like [0] > %*ENV<RAKUDO_REPL_PROMPT>='abc >'

[16:38] <[Coke]> abc >

[16:39] <msiism> I see.

[16:39] <lizmat> note that the prompt changes with incomplete statements

[16:44] <jdv> it could be set pre invocation too, right?

[17:01] *** ulipink joined
[17:01] *** ulipink left
[17:01] *** ulipink joined
[17:03] *** SrainUser joined
[17:06] *** ulipink left
[17:31] *** dakkar left
[17:52] *** ulipink joined
[17:57] *** ulipink left
[18:08] *** yewscion left
[18:11] *** ulipink joined
[18:15] *** ulipink left
[18:29] *** ulipink joined
[18:33] *** ulipink left
[18:35] *** yewscion joined
[19:02] *** zetaaaa joined
[19:03] *** ulipink joined
[19:03] *** ulipink left
[19:03] *** ulipink joined
[19:08] *** ulipink left
[19:28] <Geth> ¦ ecosystem/main: 202b4b9056 | (Elizabeth Mattijsen)++ | META.list

[19:28] <Geth> ¦ ecosystem/main: Remove Editsrc::Uggedit

[19:28] <Geth> ¦ ecosystem/main: 

[19:28] <Geth> ¦ ecosystem/main: it has bitrotted beyond repair

[19:28] <Geth> ¦ ecosystem/main: review: https://github.com/Raku/ecosystem/commit/202b4b9056

[19:36] *** ulipink joined
[19:42] *** ulipink left
[19:58] *** ulipink joined
[20:02] *** ulipink left
[20:20] *** jmcgnh left
[20:28] *** jmcgnh joined
[20:30] *** yewscion left
[20:31] *** ulipink joined
[20:33] *** yewscion joined
[20:36] *** ulipink left
[20:58] *** ulipink joined
[21:25] *** ulipink left
[21:26] <[Coke]> lizmat: I assumed we'd do something like PS1 for the main and PS2 for the secondary prompt (but allow the same substitutions in both)

[21:27] <[Coke]> and yes, you can set the env in your startup, or on the command line, etc.

[21:29] <[Coke]> msiism: I have a POC with \t, \A ( from the bash options) and \i to show the line number.

[21:29] <[Coke]> anyone have suggestions on a) which of these to support: https://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html and b) if we should follow the same naming convention.

[21:40] *** ulipink joined
[21:40] *** ulipink left
[21:40] *** ulipink joined
[21:45] *** ulipink left
[21:48] *** guifa joined
[21:59] *** ulipink joined
[22:03] *** ulipink left
[22:07] *** ulipink joined
[22:11] *** ulipink left
[22:23] *** yewscion left
[22:34] *** guifa left
[22:40] *** ulipink joined
[22:44] *** ulipink left
[23:03] *** ulipink joined
[23:16] *** sena_kun left
[23:18] <msiism> Name of the shell seems to be common as well.

[23:18] <msiism> Bash and OpenBSD’s KSH use `\s` for that. 

[23:19] <msiism> [Coke]: By line number you mean that result count that is in the default prompt, right?

[23:23] <msiism> Not sure about `\t` and `\A`. I wonder if it would be better to use a single datetime symbol that optionally accepts a format specification.

[23:25] <msiism> And if you have name of the shell, it does make sense to have the shell's release version too. That's `\v` in both Bash and OpenBSD KSH. 

[23:26] <msiism> I mean, I'm probably only going to use this whole feature to have less in my prompt, but these are the ones I'd imagine to be quite helpful at times.

[23:28] *** yewscion joined
[23:39] <timo> fish has it where you provide a function that prints stuff and you can use words instead of escape sequences for a bunch of stuff

[23:40] *** yewscion left
[23:42] <msiism> Sounds like Bash's PROMPT_COMMAND.

[23:43] <timo> [...] `set stat (set_color red)"[$last_status]"(set_color normal)` [...] `string join '' -- (set_color green) (prompt_pwd) (set_color normal) $stat '>'`

[23:45] <msiism> The problem with that (as with my suggestion to use a single datetime symbol followed by a spec) is that it's not very convenient for applying quick temporary changes.

[23:46] <timo> what kinds of things do we expect people will find useful in the raku repl prompt?

[23:49] <msiism> The result count, some sort of time display as well as the REPL's name and version are probably sufficient.

[23:50] <msiism> And adding arbitrary literal characters to it.

[23:51] *** yewscion joined
[23:54] <msiism> Also, the standard `> ` at the end should probably better not be hard-coded.

[23:55] <timo> right

