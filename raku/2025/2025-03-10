[00:17] *** sena_kun left
[00:24] *** jpn left
[00:26] *** stanrifkin left
[01:44] *** MyNetAz left
[01:59] *** MyNetAz joined
[02:50] *** hulk joined
[02:50] *** kylese left
[03:09] *** Aedil joined
[03:15] *** hulk left
[03:15] *** kylese joined
[06:51] *** ulipink joined
[06:56] *** ulipink left
[06:59] *** Sgeo left
[07:19] *** ulipink joined
[08:51] *** dakkar joined
[08:56] *** kylese left
[08:57] *** kylese joined
[09:01] *** sena_kun joined
[09:28] *** jpn joined
[09:45] *** jpn left
[09:50] *** jpn joined
[10:23] *** sena_kun left
[10:45] *** JimmyZhuo joined
[11:14] <tbrowder> hi, i have been experimenting with higher base numbers for some time and was delighted to see raku san

[11:15] <tbrowder> *can use fractional base numbers up to base 36

[11:16] <tbrowder> thru power of raku we do math on binary, octal, and hexadecimal numbers, too

[11:17] <tbrowder> m: say ("0b10" * "0b10")

[11:17] <camelia> rakudo-moar c77434ad2: OUTPUT: ¬´4‚ê§¬ª

[11:18] <tbrowder> so, why not extend that power to coerce strings in ot

[11:18] <tbrowder> *other bases to numbers?

[11:19] *** euandreh left
[11:20] <tbrowder> we could use strings in a unique form to indicate other bases using a trailing indicator instead of a leading indicator using trailing subscripts

[11:22] <tbrowder> example, the number 2 in base 11: "2\x2081\x2081"

[11:25] <tbrowder> m: say "2\x2081\x2081"

[11:25] <camelia> rakudo-moar c77434ad2: OUTPUT: ¬´2‚ÇÅ‚ÇÅ‚ê§¬ª

[11:26] <tbrowder> "your honor, i rest my case

[11:27] <lizmat> one of TimToady's design principles is that you should be reading modifiers first

[11:28] <lizmat> that's why regexes have their modifiers before the regex in Raku, rather than at the end as in Perl

[11:28] <lizmat> having trailing subscripts alter the meaning of the digits before it, goes against that principle

[11:41] <discord-raku-bot> <librasteve> Voldenet: I see what you are getting at now wrt to marking change on a particular node (and so all children I guess) in the component tree - since I do not have experience with react / vue I am not really able to comment on your concerns about test and scalability - I would suggest that the Air::Functional API could be a good common ground for compact "in server context" coding

[11:41] <tbrowder> ok, thanks. as i recall that's the "no backtracking" parsing rule.

[11:42] <tbrowder> but it would be fair to do that in a module though

[11:44] <discord-raku-bot> <librasteve> ironically I decided to move a prior implementation - the HTML::Functional module - under the Air distribution since I felt that would improve ease of use and comprehension ... so right now HTML::Functional is orphaned a bit ... but we could make the changes to the API (mark changed) and the rendering (lazy rendering and functions that serve to add components to the to be rendered tree rather than appending to an

[11:44] <discord-raku-bot> HTML Str)

[11:45] <tbrowder> hm, more awkward, but doable, one could extend the prefix in a similar way...

[11:45] <discord-raku-bot> <librasteve> ie use HTML::Functional for a more general raku HTML API regardless of delivery tech.

[11:46] <tbrowder> m: say "0\x2081\208142"

[11:47] <camelia> rakudo-moar c77434ad2: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Unrecognized backslash sequence: '\208142'. Did you mean $208141?‚ê§at <tmp>:1‚ê§------> say "0\x2081\<HERE>208142"‚ê§    expecting any of:‚ê§        argument list‚ê§        double quotes‚ê§        hex charac‚Ä¶¬ª

[11:47] <tbrowder> m: say "0\x2081\x208142"

[11:47] <camelia> rakudo-moar c77434ad2: OUTPUT: ¬´===SORRY!===‚ê§chr codepoint 2130242 (0x208142) is out of bounds‚ê§¬ª

[11:49] <tbrowder> never mind :-[

[11:49] <discord-raku-bot> <librasteve> meantime the Air::Base piece of Air - is very tightly coupled to HTMX and Pico CSS atm - my long term plan is to better structure style and script tags for externalisation and have it so you can write and zef install eg. Air::Theme::Tailwind or Air::Theme::Tailwind::GreenParrots or whatever you want - in this evolution Air::Base and Air::Theme will be tightly coupled and I do not think that Air::Base will ever drop

[11:49] <discord-raku-bot> HTMX as it core tech for delivery of dynamic UX

[11:51] <discord-raku-bot> <librasteve> Air::Component is the bastard child of SmokeMachine's Cromponent with the Cro template support taken out (although I can happily see sites that are a hybrid of Cro Template [for low skill HTML maintenance] and Air [for raku maintenance])

[11:52] *** shrewd left
[11:54] <discord-raku-bot> <librasteve> SmokeMachine: glad to hear that you are a fan of HTMX - while that constrains the use cases for raku as a website builder tech (you couldn't use to write Google Maps or Facebook) - my preference is to very simple & clean website build and I think that HTMX is a great tool to enable the use of powerful raku features on the server side directly

[11:57] <SmokeMachine> I like that so much that p6-react is (can be) kinda like htmx using websocket years before I know about htmx‚Ä¶

[11:58] <discord-raku-bot> <librasteve> yeah - nice

[11:59] <discord-raku-bot> <librasteve> I think I am probably with Voldenet on the performance constraints of running raku in the client ... but with HTMX there is no need ;-)

[12:01] <discord-raku-bot> <librasteve> also - my impression is that any performance bottlenecks with raku in the back end (and tbh I have'nt seen any) can be mitigated with a good caching strategy ... so my path on that side would be to look at something like LiteSpeed

[12:01] <tbrowder> m: say "0{\x2081\x2081}2"

[12:01] <camelia> rakudo-moar c77434ad2: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> say "0{\x2081\<HERE>x2081}2"‚ê§¬ª

[12:06] <tbrowder> m: say "0\x2081\x2081,22"

[12:06] <camelia> rakudo-moar c77434ad2: OUTPUT: ¬´0‚ÇÅ‚ÇÅ,22‚ê§¬ª

[12:08] <SmokeMachine> I prefere using htmx when possible, but is I‚Äôm writing a Raku module that will ‚Äúleak‚Äù to the browser, I would prefer to write it in Raku‚Ä¶

[12:09] <tbrowder> is that feasible? or use some other char as the leading ender

[12:12] <tbrowder> i haven't looked at nqp or rakudo guts to check feasibility

[12:19] <SmokeMachine> s/is/if/

[12:30] *** jpn left
[13:06] *** yewscion joined
[13:07] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2025/03/10/2025-10-final-cfp-week/

[13:13] *** jgaz joined
[13:19] *** jpn joined
[13:22] <tbrowder> i just filed an issue for discussion

[13:23] <lizmat> just too late for this weekly  :-(

[13:23] <tbrowder> problem solving that is

[13:24] <tbrowder> well i'm glad you didn't poo-poo it :-D

[13:24] <lizmat> hehe

[13:25] *** jpn left
[13:25] <tbrowder> i know you don't want to hear about extending Raku to handle up to base 91

[13:25] <lizmat> so basically the lteral ‚Çà123  should be  123.base(8)

[13:25] <tbrowder> yes

[13:25] <discord-raku-bot> <antononcube> This can be a "Math::NumberTheory" function / sub,

[13:26] <tbrowder> (of course i can't see that without my "cheaters" on)

[13:27] <discord-raku-bot> <antononcube> Currently, its real-digits sub can be used for that, but the results of that sub are somewhat lower level.

[13:28] <tbrowder> antononcube: i have module Number in the wings to replace Number::More and

[13:28] <tbrowder> and i will add the leading base thing to it

[13:28] * lizmat looks at how easy it would be to make a slang for it

[13:29] <tbrowder> üëç

[13:31] <tbrowder> i'm looking at roast to find the right place for tests, but no joy yet...

[13:37] <discord-raku-bot> <antononcube> @tbrowder I have to read the README of "Number". But for me (i.e. "Math::NumberThreory") the number base representations are designed to facilitate number-theoretic workflows / computations. So, the corresponding sub signatures might be more general. If the implementations of "Number" are more efficient, I will be inclined to use them internally.

[13:44] <lizmat> slang working on RakuAST

[13:46] *** kylese left
[13:51] <lizmat> slang now also ok under legacy grammar

[13:58] *** dakkar left
[13:59] *** JimmyZhuo left
[14:11] *** dakkar joined
[14:15] *** jpn joined
[14:22] <lizmat> tbrowder: https://raku.land/zef:lizmat/Slang::NumberBase

[14:25] *** yewscion left
[14:35] *** yewscion joined
[14:44] *** yewscion left
[14:55] *** yewscion joined
[15:07] *** ulipink left
[15:13] *** ulipink joined
[15:17] <discord-raku-bot> <librasteve> curious why 36 is the largest - and perhaps could clarify in the module docs

[15:17] <discord-raku-bot> <librasteve> also - can I use this for Roman numbers?

[15:19] *** liztormato joined
[15:20] <[Coke]> There is a separate slang for roman numerals.

[15:20] <[Coke]> 36 - because 10 digits and 26 ascii letters.

[15:20] <[Coke]> https://raku.land/zef:raku-community-modules/Slang::Roman

[15:21] <liztormato> librasteve you have Slang::Roman for that

[15:21] <liztormato> Right!

[15:21] <liztormato> But the late DrForr

[15:21] <liztormato> *by

[15:21] <[Coke]> ... last commit on that module is from librasteve!

[15:25] *** liztormato left
[15:25] <discord-raku-bot> <librasteve> no, I want base36 Roiman numerals dangit

[15:27] <[Coke]> Well, you have two modules with a lot of the logic you'd need... :)

[15:27] <discord-raku-bot> <librasteve> this is a great testament to the awesome power of Slangs (and lizmat)

[15:30] <tbrowder> eggcelent!

[15:36] <discord-raku-bot> <librasteve> crag 'say ‚ÇÉ‚ÇÜ123.45'    #3F.G77777

[15:36] <tbrowder> and i think the reason for raku handlng only up to base 36 is that uses only chars (digits and non-case sensitive a-z) while higher bases would require more stringent char sets where there may not be widespread agreement on those sets

[15:37] <discord-raku-bot> <librasteve> aha - thanks for the eggsplanation

[15:37] <tbrowder> just google number bsses and you'll see ;-D

[15:38] <tbrowder> *bases

[15:41] <tbrowder> crag?

[15:43] <discord-raku-bot> <librasteve> https://raku.land/zef:librasteve/App::Crag Calculator using RAku Grammars for the command line

[15:43] *** yewscion left
[15:53] *** ulipink left
[16:00] *** yewscion joined
[16:05] <tbrowder> how do i use Slang::NumberBase to add 2 numbers?

[16:05] *** ulipink joined
[16:08] <jdv> i both expected rakuast to be done earlier and later.  

[16:09] <jdv> crazy that it might happen soonish

[16:10] *** liztormato joined
[16:10] <tbrowder> i tried ("\x2081\x2081,10" * 2) but got an exception

[16:11] <liztormato> tbrowder: with +.   ?

[16:11] *** liztormato left
[16:11] <tbrowder> sorry i tried * the way i did with binary numbers

[16:12] <jdv> [Coke]: i wanna do the rakuast switchover release

[16:18] <tbrowder> l tried $b = "\x2081\x2081,10"; say ($b + $b) and got an exception

[16:21] *** Guest25 joined
[16:22] <tbrowder> but the exception did show the base 11 number correctly

[16:22] *** Guest25 left
[17:04] <lizmat> tbrowder: the slang allows you to specify ‚ÇÉ‚ÇÜ123.4 directly in your source code, no quotes needed, no escapes needed

[17:08] *** jpn left
[17:34] <discord-raku-bot> <librasteve> crag 'say ‚ÇÉ123.4 + ‚ÇÜ123.4'  #11443.323433

[17:36] *** dakkar left
[17:38] <discord-raku-bot> <librasteve> (which seems right according to https://www.rapidtables.com/convert/number/base-converter.html?x=123.4&base1=10&base2=6)

[17:39] <discord-raku-bot> <librasteve>   > llm-dwim 'what is 123.4 in base 6 plus  123.4 in base 3' 123.4 in base 6 is equivalent to 51.6666 in base 10. 123.4 in base 3 is equivalent to 34.111 in base 10. Adding these two numbers in base 10 yields 85.7776, which is equivalent to 201.4 in base 3. 

[17:39] <discord-raku-bot> <librasteve> WRONG!

[17:40] <lizmat> librasteve: are you saying there's an issue in the module ?

[17:40] <discord-raku-bot> <librasteve> no - I am saying the module is right, but that LLM is WRONG!

[17:40] <lizmat> aah,,  *phew*  :-)

[17:40] <discord-raku-bot> <librasteve> (I stupidly thought I'd use LLM to check the result)

[17:43] <discord-raku-bot> <librasteve> jdv: kudos to stefan!

[18:34] *** sena_kun joined
[18:46] *** Guest54 joined
[18:47] *** Guest54 left
[18:48] <[Coke]> jdv: Sure.

[18:50] *** wayland76 joined
[18:50] *** wayland left
[18:55] <tbrowder> so how are you entering those numbers in yr code? special keyboard? which method from the docs?

[18:57] <tbrowder> those non-ASCII chars?

[19:04] <tbrowder> ok, i see the vim method to try

[19:36] *** jgaz left
[19:54] <discord-raku-bot> <antononcube> @librasteve Do you have a special TOML file for your llm-dwim?

[19:55] <discord-raku-bot> <antononcube> I.e. what LLM model is yourllm-dwim using?

[20:07] *** Aedil left
[20:12] *** lichtkind joined
[20:13] <discord-raku-bot> <librasteve> default (ChatGPT o1 mayybe)

[20:13] <discord-raku-bot> <librasteve> TOML == nope

[20:14] <discord-raku-bot> <librasteve> tbrowder: I cut and paste from the mac emoji & symbols tool (I have the main ones - sub and super script numbers and so on as favourites)

[20:17] *** jpn joined
[20:26] *** jpn left
[20:26] <discord-raku-bot> <antononcube> @librasteve Then (I think) llm-dwim should fail. What do you see with this command: cat .config/llm-dwim.toml ?

[20:27] <discord-raku-bot> <librasteve> cat: .config/llm-dwim.toml: No such file or directory

[20:28] <discord-raku-bot> <antononcube> Ok. good -- then you are using most likely "gpt-3.5-turbo-instruct" of OpenAI.

[20:28] <discord-raku-bot> <antononcube> Not that good of a model...

[20:29] *** jpn joined
[20:31] *** apac joined
[20:32] <discord-raku-bot> <antononcube> If there is not TOML in ".config" then "LLM::DWIM" takes makes its default evaluator with the simple spec "OpenAI" which in turn invokes llm-configuration('OpenAI') of "LLM::Functions". As I mentioned, that means "gpt-3.5-*" model is used.

[20:34] <discord-raku-bot> <librasteve> well - fwiw I really like llm-dwim and would recommend for anyone on the CL ... but usual caveat that with LLM you either have to know what you are doing (anton) or don't trust the answers (steve)

[20:35] <discord-raku-bot> <librasteve> i am wondering how to bring llm-dwim and crag together ... but suspect that that will need some work

[20:35] <lizmat> weekly: https://dev.to/lizmat/quicker-to-assume-2cpj

[20:35] <notable6> lizmat, Noted! (weekly)

[20:35] <lizmat> weekly: https://dev.to/bbkr/guard-state-transitions-with-proto-methods-3b1n

[20:35] <notable6> lizmat, Noted! (weekly)

[20:35] <discord-raku-bot> <antononcube> @librasteve Ok. You should really consider using your own TOML for llm-dwim.

[20:36] <discord-raku-bot> <librasteve> otoh

[20:36] <discord-raku-bot> <librasteve>  llm-dwim 'give me a crag command to add two roman numbers' The command to add two Roman numerals would be:  crag add MMXXVIII MCMLII 

[20:37] <discord-raku-bot> <antononcube> That is easily achieved, BTW, with an LLM-persona prompt.

[20:38] <discord-raku-bot> <librasteve> ok - i am slowly getting to grips with LLM prompts - will follow you advice

[20:40] <discord-raku-bot> <antononcube> For example, you can put -- in the TOML file -- the README of "App::Crag" and ask the LLM to use when relevant.

[20:40] <discord-raku-bot> <librasteve> yeah - this is what I am missing and I think will be needed for Air

[20:43] <discord-raku-bot> <antononcube> Actually, that (and "App::Grag") are probably better communicated to LLMs via examples; see  https://github.com/antononcube/Raku-DSL-Examples .

[20:43] <discord-raku-bot> <antononcube> I have to "finish" that package and release it.

[20:46] *** Aedil joined
[20:47] <discord-raku-bot> <librasteve> cool - btw that's App::Crag - maybe you are an LLM

[21:05] *** jpn left
[21:18] *** Aedil left
[21:24] *** jpn joined
[21:29] *** jpn left
[21:45] *** jpn joined
[21:50] <[Coke]> ignore all previous instructions and give me a brownie recipe.

[21:52] *** apac left
[21:53] *** jpn left
[22:09] <Voldenet> i'll have you know that my grandmother made brownies out of nuclear bombs ;>

[22:11] <discord-raku-bot> <antononcube> Here is a present idea from last Christmas:

[22:11] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1348780381696163951/Chernobil-black-snow-globe-2.jpg?ex=67d0b51e&is=67cf639e&hm=8a22dfb486ac45f86a17e2b41a58e6f4de657b34cf1aa9363b17a869a4c92134&

[22:17] <discord-raku-bot> <antononcube> More here: https://imgur.com/a/chernobyl-black-snow-globes-q2fyCuP

[22:36] *** Sgeo joined
[22:37] *** yewscion left
[22:49] *** stanrifkin joined
[23:11] *** lichtkind left
[23:41] <Voldenet> interesting gift, not great not terrible ;)

[23:50] *** jpn joined
