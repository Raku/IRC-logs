[00:25] *** ecocode___ left
[01:05] *** hulk joined
[01:05] *** kylese left
[02:15] *** hulk left
[02:15] *** kylese joined
[02:22] *** facetious joined
[03:56] *** topnep left
[03:57] *** topnep joined
[04:38] *** gordonfish- joined
[04:39] *** sivoais left
[04:39] *** gordonfish left
[04:39] *** ilogger2 left
[04:39] *** phogg` joined
[04:39] *** _________ left
[04:39] *** phogg left
[04:39] *** avuserow left
[04:40] *** sivoais joined
[04:41] *** _________ joined
[04:41] *** gordonfish- is now known as gordonfish

[04:41] *** avuserow joined
[04:51] *** ilogger2 joined
[05:18] *** Aedil joined
[06:03] *** abraxxa joined
[06:06] *** abraxxa left
[06:09] *** abraxxa joined
[06:49] *** Sgeo left
[07:20] <disbot8> <librasteve> it makes me weep to see so many dist.ini files sprinkled around raku.land ... a couple of years back I filed an issue to allow .yaml (or toml?) but there was no response

[07:20] <disbot8> <librasteve> it's just so Windows 3.11

[07:36] *** skaji__ left
[07:36] *** skaji__ joined
[08:05] *** wayland joined
[08:07] *** topnep left
[08:08] *** topnep joined
[08:15] *** lichtkind joined
[08:51] *** Aedil left
[08:53] <lizmat> fwiw, /me hates yaml, but that might just be personal, because it feels like programming in Perl without "use strict"

[08:54] *** Aedil joined
[09:24] *** nine left
[09:24] *** nine joined
[09:28] *** apac joined
[10:12] *** topnep left
[10:13] *** topnep joined
[10:36] *** apac left
[10:36] *** apa_c joined
[11:08] <disbot8> <holmdunc> @tbrowder That sounds similar to how some people don't like masses of ~/.something files in their home directory and ask various program maintainers to use ~/.config/.something instead (i.e. $XDG_CONFIG_HOME)

[11:09] <disbot8> <holmdunc> ~/.config/something, rather

[11:17] *** itaipu joined
[11:36] *** apa_c left
[12:17] *** topnep left
[12:21] *** topnep joined
[12:38] *** tejr_ joined
[12:38] *** tejr left
[12:38] *** tejr_ is now known as tejr

[13:26] *** apa_c joined
[13:47] *** zostay joined
[14:04] *** ab5tract left
[14:05] *** ab5tract joined
[14:19] <disbot8> <librasteve> lizmat: there is obviously a wide range of config file types (json, yaml, toml, etc) - please give it a 2nd look because (i) yaml is a very clean way to present large amounts of config - such as https://github.com/librasteve/raku-Physics-Unit/blob/main/resources/Unit/Definitions/en_SI/general.yaml and (ii) the raku YAMLish module (by Leon Timermans) is role model behaviour for "how to make a grammar that's extensible - such as

[14:19] <disbot8> https://github.com/librasteve/raku-Physics-Unit/blob/952c92c1e1a28cad1a18c896dcf3a93b2cdc2b30/lib/Physics/Unit/en_SI.rakumod#L6   ;-)

[14:21] <lizmat> librasteve I'm glad you like it, but as I said, it reminds me too much of Perl and that just brings back bad memories

[14:26] <disbot8> <antononcube> I don't hate YAML, but only use it if I have to. Especially, for the Raku LLM packages, using JSON is always preferable because: (1) LLMs work with JSON, (2) LLMs produce reliably JSON results, and (3) the easy conversions to/from Raku data structures.

[14:36] <disbot8> <librasteve> we're going to agree to differ on that then! (i fully accept what you say on LLM side ... but all those quotes are a bit heavy for my needs)

[14:40] *** apac joined
[14:41] *** apa_c left
[14:43] <lizmat> I'd rather type some extra quotes than have the entire meaning change because of some sloppy whitespacing

[15:10] *** itaipu left
[15:13] *** itaipu joined
[15:14] *** librasteve_ joined
[15:20] <tbrowder> hi, once more routine "split" is confounding me. given a csv header or record with empty internal or trailing empty fields, how do i run split to capture all the fields' contents into a list--where the list will include the empty fields?

[15:22] <tbrowder> i should have said all the header fields *will* be filled

[15:23] <tbrowder> ^^^ no empty fields in the header

[15:36] <lizmat> use Text::CSV

[15:42] <disbot8> <antononcube> @tbrowder Do you mean the sum of the roles have fewer fields than the number of columns?

[15:49] <[Coke]> m: dd "this,that,other".split(',')

[15:49] <camelia> rakudo-moar f56482941: OUTPUT: «("this", "that", "other").Seq␤»

[15:49] <[Coke]> "no empty fields" ^^

[15:50] <[Coke]> m: dd "this,that,,".split(',')

[15:50] <camelia> rakudo-moar f56482941: OUTPUT: «("this", "that", "", "").Seq␤»

[15:50] <[Coke]> m: dd "this,that,,".split(',', :skip-empty)

[15:50] <camelia> rakudo-moar f56482941: OUTPUT: «("this", "that").Seq␤»

[15:50] <[Coke]> but, yes, if you're doing anything with CSV, do NOT do it by hand.

[15:50] <[Coke]> you'll only regret it later.

[15:58] *** apac left
[16:15] *** apac joined
[16:31] *** topnep left
[16:32] *** topnep joined
[16:34] <tbrowder> thnx all. it's a subtle string problem it seems, i shouldn't have cried wolf

[16:35] <tbrowder> and [Coke] do you mean using say vi to fiddle with it?

[16:54] *** apac left
[16:54] *** apac joined
[17:11] *** apac left
[17:29] <[Coke]> I mean don't write code to do CSV - it's a solved problem, and you'll miss so many non-simple cases that are valid in CSV

[17:32] <disbot8> <librasteve> Coke++ CSV decode can be quite misleading - I always use Text::CSV

[17:47] *** topnep left
[17:49] *** topnep joined
[18:26] *** itaipu left
[18:28] *** itaipu joined
[18:36] <[Coke]> I've fallen into the trap myself a few times, and almost immediately need to handle commas inside quotes

[18:36] <librasteve_> notable6: weekly

[18:36] <notable6> librasteve_, 1 note: 2025-08-19T18:21:56Z <librasteve_>: https://imgur.com/EP3ZuYh

[18:38] *** thowe left
[18:38] *** thowe joined
[18:45] *** itaipu left
[19:00] *** itaipu joined
[19:01] <librasteve_> notable6: weekly reset

[19:01] <notable6> librasteve_, Moved existing notes to “weekly_2025-08-25T19:01:41Z”

[19:10] <librasteve_> https://rakudoweekly.blog/2025/08/25/2025-34-computationally-irreducible/

[19:14] <disbot8> <antononcube> @librasteve I think "Antons’s Corner" should be corrected to "Anton’s Corner".

[19:53] *** topnep left
[19:54] *** topnep joined
[19:59] <disbot8> <librasteve> @antononcube oops - thanks!!

[20:04] *** nort joined
[20:23] *** itaipu left
[20:40] *** itaipu joined
[20:59] <disbot8> <cultoftheglenda> Hello everyone, apologies for using the bridge, but I have a rather simple question.  I am interested in getting the version of the current package. I have a method in a .rakumod file that returns the following reference: $?DISTRIBUTION.meta<ver>. This evaluates to "*" rather than what I would expect "2.5.0" which is defined in the META6.json file. What meaning does "*" have here?

[21:12] *** ecocode___ joined
[21:56] <lizmat> whatever

[21:56] <lizmat> librasteve++

[22:21] *** librasteve_ left
[22:24] *** topnep_ joined
[22:25] <ugexe> cultoftheglenda: use $?DISTRIBUTION.meta<version>. <ver> is an old leaked implementation detail

[22:25] <ugexe> in other words: write $?DISTRIBUTION.meta<$key> where $key matches the key as it is literally written in the META6.json file

[22:26] <ugexe> oh also

[22:26] <ugexe> you'd get * as a version when using an include path that does not contain a META6.json

[22:26] <ugexe> -Ilib would return *, -I. will return what is in the META6.json

[22:27] *** nort left
[22:27] *** Aedil left
[22:27] *** topnep left
[22:29] *** Aedil joined
[22:29] *** lichtkind left
[22:41] *** Aedil left
[22:57] *** wayland left
[23:14] *** Sgeo joined
[23:22] *** ecocode___ left
