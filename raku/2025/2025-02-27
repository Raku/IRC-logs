[00:36] *** guifa joined
[02:05] *** kjp left
[02:24] *** kjp joined
[02:26] *** kjp left
[02:27] *** kjp joined
[02:51] *** hulk joined
[02:51] *** kylese left
[02:56] *** guifa left
[03:15] *** hulk left
[03:15] *** kylese joined
[03:26] *** guifa joined
[03:34] *** nil78 left
[03:36] *** nil78 joined
[04:08] *** yewscion left
[04:10] *** discord-raku-bot left
[04:11] *** discord-raku-bot joined
[04:14] *** guifa left
[05:05] *** yewscion joined
[05:12] *** Aedil joined
[05:15] *** yewscion left
[05:17] *** oodani left
[05:17] *** oodani joined
[05:18] *** oodani left
[05:19] *** oodani joined
[06:20] *** wbooze joined
[06:34] *** wbooze left
[08:20] *** yewscion joined
[08:24] *** yewscion left
[08:26] *** tgt joined
[09:02] *** Sgeo left
[10:01] *** sena_kun joined
[10:07] *** tgt left
[10:21] *** jpn joined
[10:25] *** nil78 left
[10:33] *** nil78 joined
[10:34] *** lichtkind joined
[10:36] *** tgt joined
[10:36] *** apac joined
[10:42] *** wbooze joined
[10:52] *** apac left
[11:30] *** apac joined
[12:23] *** guifa joined
[12:28] *** guifa left
[12:45] * lizmat drops a pin

[12:45] *** yewscion joined
[12:46] *** inline joined
[12:50] *** yewscion left
[12:56] *** apac left
[13:09] *** BooK left
[13:09] *** BooK joined
[13:10] *** bloatable6 left
[13:10] *** greppable6 left
[13:10] *** bloatable6 joined
[13:10] *** greppable6 joined
[13:14] *** [Coke] left
[13:18] *** nil78 left
[13:19] *** yewscion joined
[13:22] *** nil78 joined
[13:24] *** yewscion left
[13:37] *** apac joined
[13:39] *** yewscion joined
[14:21] <discord-raku-bot> <antononcube> I will drop a graph then:

[14:21] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1344675769506332782/Rock-Paper-Scissors-Lizard-Spock-emojis.png?ex=67c1c666&is=67c074e6&hm=902a34d8cb1178059939610462854a86b6cd8a88fbc0dde80565a3c94d810ec7&

[14:21] *** [Coke] joined
[14:22] <discord-raku-bot> <antononcube> @lizmat See the above image, in case you are curious why am I looking into "Text::Emoji".

[15:33] *** jgaz joined
[15:33] *** yewscion left
[15:41] *** wbooze left
[15:59] <lizmat> antononcube  Spock!

[16:17] *** Sgeo joined
[16:19] *** wbooze joined
[16:37] *** yewscion joined
[16:45] *** apac left
[16:46] *** apac joined
[16:59] *** apac left
[17:00] *** apac joined
[17:03] *** jpn left
[17:17] *** apac left
[17:18] *** apac joined
[17:54] <tbrowder> lizmat: can one define a Set containing IntStr’s like (0 1 2 a b) without quotes?

[17:55] <tbrowder> if so, how would i check for membership of 1 or a?

[17:55] <lizmat> "a" and "b" are not IntStr so that wouldn't work

[17:56] <tbrowder> hm, i see.

[17:56] <lizmat> m: 'my %h is Set[Str] = <0 1 2 a b>; dd %h<1>, %h{1}

[17:56] <camelia> rakudo-moar 101f50557: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unable to parse expression in single quotes; couldn't find final "'" (corresponding starter was at line 1)␤at <tmp>:1␤------>  Set[Str] = <0 1 2 a b>; dd %h<1>, %h{1}<HERE><EOL>␤    expecting any of:␤…»

[17:57] <lizmat> m: my %h is Set[Str] = <0 1 2 a b>; dd %h<1>, %h{1}

[17:57] <camelia> rakudo-moar 101f50557: OUTPUT: «Bool::True␤Bool::False␤»

[17:57] <lizmat> m: my %h is Set[Str] = <0 1 2 a b>; dd %h<1>, %h{1}, %h{"1"}

[17:57] <camelia> rakudo-moar 101f50557: OUTPUT: «Bool::True␤Bool::False␤Bool::False␤»

[17:58] <tbrowder> thnx, something to play with

[17:59] <lizmat> note that constraining the Set to Str, does allow allomorphs

[18:00] <tbrowder> ah, that’s the term i was forgetting, “allomorphs”

[18:00] <tbrowder> ok, cool

[18:01] <lizmat> note that "1" and 1 are *not* allomorphs, so return False when checking for membership that way

[18:07] *** apac left
[18:13] *** nil78 left
[18:19] *** nil78 joined
[18:22] *** wbooze left
[18:27] *** wbooze joined
[18:28] <[Coke]> m: sub aa($a) {my $s=[+] $a.comb; $s.comb.elems > 1 ?? aa($s) !! $s}; say (5..*).grep(*.is-prime).rotor(2 => -1).grep({.[0]+2==.[1]}).map({.[0]*.[1]}).map({aa($_)})[^100]

[18:28] <camelia> rakudo-moar 101f50557: OUTPUT: «(8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8)␤»

[18:28] <tellable6> 2025-02-26T07:13:46Z #raku <melezhik> [Coke]: there is also GRPC/protobug thing - that serialize data in internal binary format but for end client this looks like remote procedure calls which are just native to a language data structures 

[18:31] *** wbooze left
[18:35] *** jpn joined
[18:36] <[Coke]> (apparently if you take twin primes starting with 5, multiple them together, then add the digits together iteratively until you're left with a single digit... it's 8.)

[18:38] *** wbooze joined
[18:43] <[Coke]> seen on a youtube short recently, apparently I watch too much maths.

[18:45] <[Coke]> ah, the proof is simpler than I thought. Nifty.

[18:46] <[Coke]> also, if anyone can golf that more...

[18:46] *** jpn left
[18:57] <lizmat> and there I was thinking at was just a very convoluted way to say (8 x 100).List

[18:57] <lizmat> :-)

[19:03] *** wbooze left
[19:12] *** wbooze joined
[19:13] *** wbooze left
[19:18] *** wbooze joined
[19:24] *** wbooze left
[19:33] *** apac joined
[19:34] *** wbooze joined
[19:59] *** Aedil left
[20:23] <lucs> [Coke]: Here's a very ungolfed version I made for my notes: https://gist.github.com/lucs/b5be63a3961b6993773db3d235e667bc

[20:32] <[Coke]> https://chalkdustmagazine.com/blog/digital-sum-products-twin-primes-8/

[20:35] <lucs> Aha, thanks.

[20:37] <[Coke]> https://www.youtube.com/shorts/I8lAobOidvo was the video, btw.

[20:43] *** jpn joined
[20:43] *** yewscion left
[20:47] *** jpn left
[21:05] <japhb> lizmat: Trying to build the world at Rakudo 2025.02, I can't install App::Rak::Complete because ParaSeq:ver<0.2.7>:auth<zef:lizmat> fails testing.  It appears to be fine until passing 10-invert, and then it goes very low CPU and just stalls out until eventually the (Perl 5) harness kills it.

[21:16] *** wbooze left
[21:19] <[Coke]> How is the p5 harness involved?

[21:19] <[Coke]> (just kicked off a zef --serial install of R::A::C and it also appears to.... slow down on ParaSeq

[21:23] <japhb> [Coke], lizmat: Clarified in https://github.com/lizmat/ParaSeq/issues/4

[21:23] *** yewscion joined
[21:25] *** yewscion left
[21:27] *** apac left
[21:52] *** guifa joined
[22:03] <[Coke]> Oh, I forgot about this - it's still hanging. :)

[22:04] *** jgaz left
[22:04] <[Coke]> I'm on macOS 14.6.1 here

[22:04] <[Coke]> killed it by hand.

[22:05] <japhb> OK, thanks for the confirmation that it's not just me.  :-)

[22:05] <japhb> Mind if I add this to the bug report?

[22:07] <[Coke]> that's fine

[22:08] <[Coke]> while running *11, the last output here is [ParaSeq] ok 3 - The object is-a 'ParaSeq'

[22:09] <[Coke]> (did an install with -serial, and then a zef look on paraseq and a zef test -v .

[22:09] <ugexe> you can just run `raku -I. t/11-reduce.rakutest` after zef look ParaSeq to further isolate

[22:15] <japhb> Bug updated, thanks

[22:18] *** nil78 left
[22:19] *** sjn left
[22:26] *** nil78 joined
[22:26] *** yewscion joined
[22:26] *** sjn joined
[22:31] *** yewscion left
[22:44] *** yewscion joined
[22:49] *** yewscion left
[22:53] *** nil78 left
[22:55] *** nil78 joined
[23:05] <lizmat> japhb [Coke] weird, I thought I had removed the dependency on ParaSeq a little while ago...

[23:05] <lizmat> ah,it's JSON::Fast::Hyper...

[23:07] <discord-raku-bot> <antononcube> Agh, twin primes...

[23:08] <discord-raku-bot> <antononcube> I was wondering should I make a twin-primes sub in "Math::NumberTheory".

[23:09] <discord-raku-bot> <antononcube> It is border line trivial, but then, many of the subs in "Math::NumberTheory" are. (And that is one of its selling points.)

[23:09] <lizmat> In a little while App::Rak::Complete should be installable again

[23:12] <[Coke]> would a twin primes sub generate the list or verify if two numbers are?

[23:13] <discord-raku-bot> <antononcube> @Coke Good question. In some sense I cannot stop with just making twin-primes -- I have to make twin-prime, cousin-primes, and sexy-primes.

[23:14] <discord-raku-bot> <antononcube> twin-primes(n) : gives the first n pairs of twin primes.

[23:15] <discord-raku-bot> <antononcube> The subs cousin-primes and sexy-primes are similar, but use difference 4 and 6 respectively.

[23:17] <discord-raku-bot> <antononcube> twin-prime(n) -- just returns the first of a twin primes pair.

[23:32] <[Coke]> I imagine "sixy" primes are harder since you can't just compare the two consecutive ones?

[23:35] <discord-raku-bot> <antononcube> Hm... It is a simple intersection using two lists generated via the sub prime. I will commit the related-primes code with 10 min -- the procedure would be seen there.

[23:36] *** lichtkind_ joined
[23:36] <japhb> lizmat: Is ParaSeq a legacy module now?

[23:36] <lizmat> no, it's been put into production too soon

[23:37] <lizmat> also, now that we have  -Mown-up   I can finally figure out where it's deadlocking :-)

[23:37] <lizmat> but first, sleep&

[23:38] *** lichtkind left
[23:39] <japhb> I missed too much while I was mostly out of commission, sigh.

[23:54] *** nil78 left
[23:54] <discord-raku-bot> <antononcube> @Coke See https://github.com/antononcube/Raku-Math-NumberTheory/blob/main/t/10-related-primes.rakutest

