[00:05] *** MyNetAz joined
[00:15] *** sjn left
[00:35] <discord-raku-bot> <antononcube> Thank you!

[00:47] *** sjn joined
[00:54] *** sjn left
[01:01] *** sjn joined
[01:09] *** sjn left
[01:09] *** sjn joined
[01:19] *** sjn left
[01:19] *** sjn joined
[01:28] *** sjn left
[01:30] *** sjn joined
[01:56] *** rypervenche left
[02:41] *** Aedil joined
[02:50] *** sjn left
[02:53] *** hulk joined
[02:53] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[04:22] *** Sgeo left
[04:22] *** Sgeo joined
[05:02] *** sjn joined
[07:24] *** Sgeo left
[09:03] <discord-raku-bot> <frostcod> very interesting 🙂

[09:24] <discord-raku-bot> <antononcube> @frost Thanks! There was an important omission in the introduction -- why functional parsers are used instead of Raku grammars. (Fixed now with a brief remark.)

[09:43] *** sena_kun joined
[10:54] *** zenmov joined
[11:16] *** eof left
[11:16] *** summerisle joined
[13:23] <[Coke]> anyone else seeing https://github.com/tony-o/perl6-data-dump/issues/40 ?

[13:23] <[Coke]> tonyo: ^^

[13:24] <timo> can you get the value it's actually expecting?

[13:25] <timo> so for 06-match.t it looks like my $expected = "Match :: (\n  made => (Nil),\n  pos  => 7.Int,\n  hash => \{ \},\n  from => 4.Int,\n  list => [ ],\n  orig => \"hello world\".Str,\n)";

[13:27] <timo> m: my $expected = "Match :: (\n  made => (Nil),\n  pos  => 7.Int,\n  hash => \{ \},\n  from => 4.Int,\n  list => [ ],\n  orig => \"hello world\".Str,\n)"; my $got = "Match :: (\n  made => Nil :: (\n  ),\n  pos  => 7.Int,\n  hash => \{ },\n  from => 4.Int,\n  list => [ ],\n  orig => \"hello world\".Str,\n)"; say $expected eq $got

[13:27] <camelia> rakudo-moar e7f9223c5: OUTPUT: «False␤»

[13:28] <timo> the Nil has parethesis in one and not the other

[13:30] <timo> obj.t expects $!public => (Nil) but gets $!public => undefined

[13:31] <timo> but i couldn't tell you why i can install it successfully and you can't

[13:37] <timo> do you have a DATA_DUMP env var with stuff in it?

[14:10] *** zenmov left
[14:12] *** zenmov joined
[14:45] <[Coke]> unlikely. One sec

[14:46] <[Coke]> no env var.

[14:50] <[Coke]> timo: test would tell me that if it used `is` instead of 'ok $a eq $b`

[14:51] <[Coke]> working with a local copy...

[14:53] <[Coke]> The only difference here is the undefined vs. (Nil)

[14:55] <[Coke]> m: class E { has $.public }; dd E.new;

[14:55] <camelia> rakudo-moar e7f9223c5: OUTPUT: «E.new(public => Any)␤»

[14:55] * [Coke] wonders why the module is showing that as Nil OR undefined.

[15:00] *** Sgeo joined
[15:08] <[Coke]> https://gist.github.com/coke/d3f749ec9966bd67e71d8e5a82ea2848 - timo

[15:09] <timo> what does that line number point at locally for you? 147 and 133?

[15:16] <[Coke]> it's going to take me some time to golf this, and I'm back at $dayjob. will try to get a golfed set of raku that behaves differently on win vs. *nix

[15:18] <[Coke]> 133 is unchanged, 147 is the try Dump that is paired with '// 'undefined''

[15:18] <[Coke]> I removed the try and just called the Dump directly; but the trace isn't inside the Dump call, it's one of the parameters.

[15:19] <[Coke]> trying to dig, I'm now seeing: Cannot resolve caller min(Any:U: ); none of these signatures matches:

[15:19] <[Coke]> but there's no min() in the lib/ dir.

[15:19] <[Coke]> m: say min(Any)

[15:19] <camelia> rakudo-moar e7f9223c5: OUTPUT: «Inf␤»

[15:21] <[Coke]> I'll dig later today

[15:59] <timo> maybe the extreme hammer that is `MVM_COVERAGE_LOG=huge_file.txt MVM_COVERAGE_CONTROL=2 rakudo -I . t/blah.t` can give any kind of insight. it will output one line for every single line that rakudo executes. it will likely be absolutely enormous.

[15:59] <timo> maybe a lot easier to use the moar remote debugger tbh

[16:02] <discord-raku-bot> <antononcube> How many people here are interested in answer(s) of this question: > Number of ways of arranging 2n+1 non-attacking semi-queens on a (2n+1) X (2n+1) toroidal board.

[16:03] <discord-raku-bot> <antononcube> A semi-queen can only move horizontal, vertical and parallel to the main diagonal of the board. Moves parallel to the secondary diagonal are not allowed.

[16:15] *** silug left
[16:29] *** silug joined
[17:06] *** Geth joined
[17:07] <discord-raku-bot> <antononcube> I am not sure should I blog about it or not...

[17:27] <tbrowder> imho, blogging about it using hyper and such would be very useful.

[17:46] *** Geth joined
[17:47] *** lizmat_ left
[17:47] *** lizmat joined
[18:14] <discord-raku-bot> <antononcube> Hmm... that blog post would be somewhat late. Meaning, it is 2025 already.

[18:20] <timo> 2025 is allowed to have blog posts as well :P

[18:21] <timo> ..i should post blog

[18:24] <discord-raku-bot> <antononcube> It looks like I do not know a fair amount of the properties of the core Raku numerical functions. Meaning, I should prepare a blog post showing different mathematical properties of the number 2025.

[18:24] <discord-raku-bot> <antononcube> "Math::Sequences" would simplify that post a lot.

[18:29] *** zenmov left
[18:56] <lizmat> m: say [+] (1..9)>>³ 

[18:56] <camelia> rakudo-moar e7f9223c5: OUTPUT: «2025␤»

[18:58] <discord-raku-bot> <antononcube> Yeah that.

[18:58] *** xinming left
[18:59] <discord-raku-bot> <antononcube> And more simply:   (20+25) ** 2 # 2025 

[19:02] <lizmat> too bad we can't use 𝚺 as a unicode version of [+]

[19:03] <lizmat> say 𝚺 (^10)»³   would've been cool

[19:15] *** Aedil left
[19:18] <discord-raku-bot> <librasteve> m: `multi prefix:<𝚺>(@a) {sum @a}; say 𝚺 (1..9)>>³ ;

[19:18] <evalable6> librasteve, rakudo-moar e7f9223c5: OUTPUT: «Cannot test e7f9223c59e70e9cd829b592bc3133322b82b3ab (Broken archive)»

[19:18] <linkable6> (2024-12-30) https://github.com/rakudo/rakudo/commit/e7f9223c59 [JVM] Add extra check for GLOBAL being null (#5710)

[19:18] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Bogus statement at /home/glot/main.raku:1 ------> <BOL>⏏`multi prefix:<𝚺>(@a) {sum @a}; say 𝚺 (1     expecting any of:         prefix         statement list         term 

[19:18] <discord-raku-bot> <librasteve> m: multi prefix:<𝚺>(@a) {sum @a}; say 𝚺 (1..9)>>³ ;

[19:18] <evalable6> librasteve, rakudo-moar e7f9223c5: OUTPUT: «Cannot test e7f9223c59e70e9cd829b592bc3133322b82b3ab (Broken archive)»

[19:18] <discord-raku-bot> <Raku eval>  2025 

[19:26] <discord-raku-bot> <antononcube> How about Raku-simplifying this one:  ((1..9).sum)²

[19:50] *** SrainUser joined
[20:24] <SrainUser> I'm getting the error: 'use lib' cannot be pre-compiled and thus cannot be used in a module. What do I use instead of 'use lib "."' in imported modules?

[20:29] <ugexe> you set RAKULIB=/foo/bar or pass -I /foo/bar to the raku command

[20:29] <ugexe> or `use lib ...` in your top level raku script

[20:34] <SrainUser> Where do I set RAKULIB=/foo/bar? on the command line?

[20:36] <ugexe> however way your OS supported. typically one might do `RAKULIB=/foo/bar bin/my-script.raku` to only set it when invoking the script

[20:38] <ugexe> to be clear by "set RAKULIB" I mean set the RAKULIB environment variable. how you set your environment variable depends on your OS

[20:38] <ugexe> regardless of OS you could just run `raku -I /foo/bar bin/my-script.raku`

[21:02] <SrainUser> If I have more than 2 raku files in the same directory, how do they share each each others functions without throwing the error?

[21:05] <SrainUser> or modules?

[21:09] <SrainUser> I see. The raku language server was throwing the error. I was able to run the program just fine.

[21:21] *** MoC joined
[21:29] *** MoC left
[21:31] *** MoC joined
[21:50] *** MoC left
[22:17] *** sena_kun left
[22:35] <discord-raku-bot> <antononcube> Is a there an existing module where a generalization of base can put in? That generalization function is called real-digits; can take non-integer bases.

[22:35] <discord-raku-bot> <antononcube> For example, this should work : real-digits(π, ϕ, :20length )

[22:36] <discord-raku-bot> <antononcube> I was thinking "Math::Sequences", but seems to be more about integers, etc.

[22:58] <timo> sounds like polymod

[22:58] <timo> m: say ϕ, π

[22:58] <camelia> rakudo-moar e7f9223c5: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Undeclared routine:␤    ϕ used at line 1␤␤»

[22:58] <timo> aw we don't have phi

