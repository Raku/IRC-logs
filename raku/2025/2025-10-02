[00:38] <disbot3> <antononcube> It seems that "fez" does not upload packages.

[00:46] *** human-blip left
[00:48] *** human-blip joined
[00:52] <disbot3> <aruniecrisps> @SmokeMachine, i have a question, can Red models map to SQL views or materialized views?

[00:54] <SmokeMachine> aruniecrisps: yes, it can: https://github.com/FCO/Red/blob/a6758a423a8cd7b5fb7eddbb0f55d5fbbdf6f8ec/t/76-view.rakutest#L4

[00:57] <disbot3> <aruniecrisps> Thanks!

[00:57] <disbot3> <aruniecrisps> exactly what i was looking for!

[00:58] <SmokeMachine> I should add an entry the cookbook for that...

[01:00] <disbot3> <aruniecrisps> I was also curious about Cromponent, was wondering if it was meant specifically to be used in tandem with cro templates? one of the biggest pain points for me using cro was the compile times on the templates for even small projects

[01:03] <SmokeMachine> ye, it was... but librasteve is using that on his module getting rid of cro template, maybe you could use that if you don't want to use cro templates. Cromponent will compile the template of a module while compiling that module, maybe it could help?

[01:04] <SmokeMachine> aruniecrisps: ‚òùÔ∏è

[01:05] <disbot3> <aruniecrisps> yea i might end up using Air::Functional in that case

[01:25] *** arkiuat left
[01:31] *** arkiuat joined
[01:39] *** LainIwakura left
[04:05] <disbot3> <simon_sibl> I see, thank you for the precision üôè

[04:25] *** Aedil joined
[04:54] *** arkiuat left
[05:00] *** arkiuat joined
[05:06] *** arkiuat left
[05:18] *** arkiuat joined
[05:22] *** arkiuat left
[05:39] *** Pixi__ joined
[05:41] *** Pixi` left
[05:48] *** arkiuat joined
[05:53] *** arkiuat left
[06:22] *** arkiuat joined
[06:27] *** arkiuat left
[06:52] *** [Coke] left
[06:52] *** [Coke] joined
[06:54] *** arkiuat joined
[06:58] *** arkiuat left
[07:05] *** [Coke] left
[07:09] *** MoC joined
[07:18] *** [Coke] joined
[07:19] <disbot3> <librasteve> weekly: https://unix.stackexchange.com/questions/794481/how-to-extract-specific-fields-from-systemctl-output-for-a-custom-report/800132#800132

[07:20] *** librasteve_ joined
[07:20] <librasteve_> weekly: https://unix.stackexchange.com/questions/794481/how-to-extract-specific-fields-from-systemctl-output-for-a-custom-report/800132#800132

[07:20] <notable6> librasteve_, Noted! (weekly)

[07:26] *** apa_c joined
[07:29] <disbot3> <librasteve> @aruniecrisps - Air::Functional is my alternate proposal to Cro templates ‚Ä¶ it‚Äôs just some libraries that run raku and emit HTML so no template repository compile step ‚Ä¶ you can control the cycle time if you break up your web app into rakumod files since they are pre compiled also. The Air::Component piece of Air is just a thin layer on Cromponent. The third main part, Air::Base provides convenience libation of pre build

[07:29] <disbot3> Air::Components and Page, Nav, Site classes but you should be able to use each piece independently.

[07:29] *** arkiuat joined
[07:32] *** Sgeo left
[07:34] *** arkiuat left
[07:38] *** arkiuat joined
[07:43] *** arkiuat left
[07:45] *** apa_c left
[07:55] *** arkiuat joined
[07:58] *** apa_c joined
[08:00] *** arkiuat left
[08:10] *** apa_c left
[08:10] *** dakkar joined
[08:27] <disbot3> <melezhik.> .tell tonyo: the one which is here - https://github.com/melezhik/sparky in  META6 file , but I guess it‚Äôs issues on Raku.land site ?

[08:28] *** arkiuat joined
[08:33] *** apa_c joined
[08:33] *** arkiuat left
[08:47] *** lichtkind_ joined
[08:55] *** arkiuat joined
[08:58] *** melezhik_ joined
[08:58] <melezhik_> .tell tonyo - I have uploaded it again now - https://sparky.sparrowhub.io/report/release-to-zef/25739 , let's see what it does ...

[08:58] <tellable6> melezhik_, I'll pass your message to tonyo

[08:59] <melezhik_> cc ^^^ JRaspass

[08:59] <tellable6> 2025-10-01T21:17:37Z #raku <tonyo> melezhik: what is the version?

[08:59] <tellable6> 2025-10-02T05:48:22Z #raku-dev <patrickb> melezhik: No progress yet. First step would be to curate a list of precise architectures we'd like to support. Then see if there are online services that allow building there.

[08:59] *** arkiuat left
[09:00] *** melezhik joined
[09:05] *** Aedil left
[09:09] *** melezhik_ left
[09:09] *** melezhik_ joined
[09:12] *** oodani left
[09:13] *** oodani joined
[09:16] *** melezhik_ left
[09:21] *** melezhik_ joined
[09:23] *** melezhik_ left
[09:28] *** melezhik_ joined
[09:29] *** arkiuat joined
[09:32] *** melezhik_ left
[09:33] *** arkiuat left
[09:40] *** librasteve_ left
[09:40] *** arkiuat joined
[09:44] *** arkiuat left
[09:46] <JRaspass> I've made a small change to raku.land to skip over cpan rsync failures for now (most dists come from zef these days anyways), so re-indexing should be working now

[10:06] *** apa_c left
[10:13] *** arkiuat joined
[10:18] *** arkiuat left
[10:18] *** librasteve_ joined
[10:40] *** arkiuat joined
[10:45] *** arkiuat left
[10:54] *** apa_c joined
[10:58] <tbrowder>  erg, my raku foo is disappearing rapidly...in a single module file: can i predeclare a sub Z, have the following sub A use it, then define sub Z following sub A's use of it?

[10:58] *** peder left
[10:58] *** peder joined
[10:58] <lizmat> you shouldn't worry about that

[10:59] <lizmat> m: sub a() { z }; sub z { say "foo" }; a

[10:59] <camelia> rakudo-moar 5147b67f7: OUTPUT: ¬´foo‚ê§¬ª

[10:59] <lizmat> subroutines don't need to be pre-declared, classes do

[11:00] <tbrowder> ah, right, thanks!

[11:00] <lizmat> m: class A { method a() { B.new } }; class B { 

[11:00] <camelia> rakudo-moar 5147b67f7: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> ss A { method a() { B.new } }; class B {<HERE><EOL>‚ê§¬ª

[11:00] <lizmat> m: class A { method a() { B.new } }; class B {  }

[11:00] <camelia> rakudo-moar 5147b67f7: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Illegally post-declared type:‚ê§    B used at line 1‚ê§‚ê§¬ª

[11:01] <lizmat> m: class B { ... }; class A { method a() { B.new } }; class B { }

[11:01] <camelia> rakudo-moar 5147b67f7: ( no output )

[11:02] *** melezhik_ joined
[11:04] <tbrowder> um, if i am exporting such a class from a sub, does "is export" go on the forward decl or the def or both or?

[11:05] <tbrowder> i'm advertising a new AI product: ChatLIZ

[11:06] <lizmat> how would you export a class from a sub ?

[11:07] <tbrowder> m: class A is export {}

[11:07] <camelia> rakudo-moar 5147b67f7: ( no output )

[11:07] <lizmat> if you don't prefix it with "my" the export isn't necessary

[11:08] <melezhik_> .

[11:08] <tbrowder> ok, thanks again!

[11:10] <melezhik_> .tell patrickb: it'd be cool to add binary for arm64and risc-v - it'd be extremely helpful for folks from rocky linux team. No pressure though ))

[11:10] <tellable6> melezhik_, I'll pass your message to patrickb

[11:12] *** arkiuat joined
[11:16] *** melezhik_ left
[11:16] *** melezhik_ joined
[11:18] *** arkiuat left
[11:22] *** melezhik_ left
[11:30] <tbrowder> if i define a class Z in module A::Classes, how do i create an instance of it in module A?

[11:32] <tbrowder> my $obj = A::Classes.....

[11:33] <tbrowder> or my $obj = Z.new: ....

[11:41] *** arkiuat joined
[11:46] *** arkiuat left
[11:55] <tbrowder> ah, the old package lookup syntax...

[11:59] *** Aedil joined
[12:15] *** arkiuat joined
[12:21] *** arkiuat left
[12:26] *** melezhik left
[12:37] *** xinming left
[12:41] *** apa_c left
[12:42] *** arkiuat joined
[12:47] *** arkiuat left
[12:50] *** xinming joined
[13:10] *** librasteve_ left
[13:10] *** vasko4 left
[13:11] *** vasko4 joined
[13:16] *** arkiuat joined
[13:20] *** arkiuat left
[13:31] *** arkiuat joined
[13:52] *** PotatoGim left
[13:56] *** PotatoGim joined
[13:58] *** Sgeo joined
[14:02] *** apa_c joined
[14:04] *** librasteve_ joined
[14:48] *** kylese joined
[14:53] *** kylese left
[14:55] *** kylese joined
[15:15] *** apa_c left
[15:33] <tonyo> tbrowder caused the problem, tbrowder solved it : )

[15:33] <tellable6> 2025-10-01T18:09:26Z #raku <melezhik_> tonyo: I have uploaded new version of Sparky via fez upload few hours ago, but still don't see it on raku.land

[15:33] <tellable6> 2025-10-01T18:10:10Z #raku <melezhik_> tonyo: here the manifest - https://github.com/melezhik/sparky

[15:33] <tellable6> 2025-10-02T08:58:50Z #raku <melezhik_> tonyo - I have uploaded it again now - https://sparky.sparrowhub.io/report/release-to-zef/25739 , let's see what it does ...

[15:34] <tonyo> melezhik: what version of fez is this and what version of sparky? can you add those to your build steps in the future?

[15:34] <tellable6> tonyo, I'll pass your message to melezhik_

[15:53] *** sorenson left
[15:53] *** sorenson joined
[16:00] *** stanrifkin joined
[16:05] *** abraxxa left
[16:05] *** abraxxa joined
[16:11] *** melezhik_ joined
[16:12] <melezhik_> .

[16:12] <tellable6> 2025-10-02T15:34:30Z #raku <tonyo> melezhik: what version of fez is this and what version of sparky? can you add those to your build steps in the future?

[16:12] <melezhik_> .tell tonyo: added https://github.com/melezhik/ci.sparrowhub/commit/c28b809ab2ea61c28f695ac4ac8dfe869a487ea2

[16:12] <tellable6> melezhik_, I'll pass your message to tonyo

[16:16] *** melezhik_ left
[16:30] <tonyo> yikes

[16:30] <tellable6> 2025-10-02T16:12:46Z #raku <melezhik_> tonyo: added https://github.com/melezhik/ci.sparrowhub/commit/c28b809ab2ea61c28f695ac4ac8dfe869a487ea2

[16:35] *** dakkar left
[16:38] <[Coke]> Trying to use rakudo-star docker container; if I run a raku script, I get a note that IO::Socket::SSL is not installed. if I specifically install it with zef, it succeeds, and then I run the test, and immediately get an error to Please install IO::Socket::SSL

[16:42] *** apa_c joined
[16:43] <[Coke]> ah. "don't install with --/test the first time you do something"

[16:54] <[Coke]> ok, next problem, rakudo-star:latest doesn't have sudo in it??

[17:15] *** apa_c left
[17:27] <ugexe> [Coke]: or do --/test --test-depends

[17:28] *** apa_c joined
[17:28] <ugexe> --/test implies --/test-depends, but you can explicitly make it still download those dependencies with --test-depends

[17:37] *** arkiuat left
[17:50] *** arkiuat joined
[17:55] *** arkiuat left
[17:59] *** apa_c left
[18:01] <[Coke]> oh, no, it's that none of the tests worked, but I didn't realize it

[18:01] <[Coke]> sorry I wasn't clear.

[18:01] <[Coke]> so I installed it, but then the thing that ran it said "oh, https didn't work, you must have to install IO::Socket::SSL'

[18:02] <[Coke]> and because rakudo-star:latest doesn't have sudo on it, I have to jump through a small hoop to get a star container I can install libssl-dev on.

[18:05] <disbot3> <aruniecrisps> @librasteve I‚Äôm looking into it right now, it‚Äôs solid work you‚Äôve done

[18:05] *** arkiuat joined
[18:12] *** arkiuat left
[18:24] <disbot3> <librasteve> Air::Functional is trying to mimic elmlang - turns out that the standard raku sub syntax can be bent to the purpose

[18:24] *** arkiuat joined
[18:25] <disbot3> <librasteve> anyway - please do feedback and I would welcome others to join in the Air work ... there is much to be done!

[18:25] *** apa_c joined
[18:29] *** arkiuat left
[18:42] *** stanrifkin left
[18:44] <disbot3> <aruniecrisps> There is one idea that I had: raku has really good support for heredocs and multiline strings quotations; and it has a robust interpolation system through its adverbs

[18:55] *** arkiuat joined
[19:00] *** arkiuat left
[19:00] <disbot3> <aruniecrisps> I was thinking maybe perhaps there would be a way to maybe add an adverb or possibly a new quotation operator altogether that auto sanitizes HTML

[19:11] <tbrowder> tonyo: mea culpa

[19:17] *** hulk joined
[19:17] *** kylese left
[19:19] *** arkiuat joined
[19:38] *** stanrifkin joined
[19:48] *** Aedil left
[19:51] *** arkiuat left
[19:53] *** hulk left
[19:58] *** apa_c left
[20:02] <disbot3> <librasteve> good idea

[20:03] <disbot3> <librasteve> I guess you mean like JSX?

[20:03] *** arkiuat joined
[20:05] <disbot3> <librasteve> nevertheless, I much prefer the functional approach (like in elmlang)

[20:05] <disbot3> <librasteve> https://cdn.discordapp.com/attachments/633753286209699870/1423400404842184744/Screenshot_2025-10-02_at_21.03.29.png?ex=68e02c6e&is=68dedaee&hm=d9aa6d783ae30c17467917631382044fa666d2febbbb37104dfd7b84bb3f291a&

[20:06] <disbot3> <librasteve> I suppose I think that there are coders who know (only) HTML and then JSX is comfortable and there are coders who know raku and want to make HTML without all the angle bracket noise

[20:08] <disbot3> <librasteve> so that ^^ footer vs. this vv

[20:08] <disbot3> <librasteve> footer p ['Aloft on ', b '√Öir'],

[20:09] *** arkiuat left
[20:09] *** GreaseMonkey left
[20:19] <disbot3> <aruniecrisps> @librasteve yea basically JSX except we‚Äôre just rendering HTML; I figured that it might be worth it

[20:19] <disbot3> <aruniecrisps> Or rather the dev is writing HTML

[20:22] <disbot3> <aruniecrisps> Although your approach does make it a lot easier to do what Seaside in the Smalltalk world does or what the stateful server library in the Racket world allows you to do: basically embedding much of the logic in the HTML generation itself to tightly couple the backend and fronted for things like shopping carts and whatnot

[20:24] *** arkiuat joined
[20:28] <disbot3> <librasteve> lol - well raku is home to a bunch of us misfits and contrarians - it is true that Air (aka HARC) is quite opinionated in terms of clean / functional (raku) code - I hereby extend a welcome to you (& others) to come and help the HARC stack project

[20:28] <disbot3> <librasteve> me I am allergic to HTML <> angle brackets in my code

[20:28] *** arkiuat left
[20:30] <disbot3> <librasteve> (but in raku, there are many ways to success)

[20:30] *** arkiuat joined
[20:31] <disbot3> <aruniecrisps> Yea that‚Äôs what I love about Raku, it‚Äôs extensible enough where I almost do whatever I want with the language and it‚Äôs absurdly powerful

[20:32] <disbot3> <aruniecrisps> It honestly reminds a lot of Lisps; i think Raku and maybe Nim are the closest I‚Äôve seen a C-like language get to that level of extensibility

[20:35] <disbot3> <librasteve> =b

[20:36] <disbot3> <librasteve> would you mind doing a mini project with Air::Functional and then giving your review / feeback?

[20:36] <disbot3> <aruniecrisps> That was actually my plan

[20:36] <disbot3> <aruniecrisps> I can write a blog post on it at some point

[20:36] <disbot3> <librasteve> that would be great

[20:37] <disbot3> <librasteve> tx!

[20:38] <disbot3> <librasteve> must sleep

[20:44] *** librasteve_ left
[21:11] *** greaser|q joined
[21:27] *** lichtkind_ left
[21:27] *** LainIwakura joined
[21:41] *** arkiuat left
[21:47] *** MoC left
[22:00] <stanrifkin> Can I use two parameters in an circumfix operator overload? https://termbin.com/vvfr

[22:09] <Voldenet> m: sub circumfix:<a b>(@a) { @a.map("<"~*~">").say }; a 1, 2 b

[22:09] <camelia> rakudo-moar 5147b67f7: OUTPUT: ¬´(<1> <2>)‚ê§¬ª

[22:10] *** arkiuat joined
[22:10] <Voldenet> m: sub circumfix:<a b>(@a where *.elems == 2) { @a.map("<"~*~">").say }; a 1, 2 b # if you need the constraint

[22:10] <camelia> rakudo-moar 5147b67f7: OUTPUT: ¬´(<1> <2>)‚ê§¬ª

[22:11] <stanrifkin> parenthesis `() can't get overloaded?

[22:14] <Voldenet> maybe they can, but I don't know how

[22:14] <Voldenet> it may have something to do with sub calling

[22:15] *** arkiuat left
[22:15] <Voldenet> m: sub circumfix:<[ ]>(@a where *.elems == 2) { @a.map("<"~*~">").say }; [1, 2] # this can, so maybe I don't know the syntax for ()

[22:15] <camelia> rakudo-moar 5147b67f7: OUTPUT: ¬´(<1> <2>)‚ê§¬ª

[22:16] <stanrifkin> I tried this, https://termbin.com/10o9

[22:16] <stanrifkin> But it seems not possible

[22:17] <Voldenet> m: say list 1^..10 # these are more idiomatic fwiw

[22:17] <camelia> rakudo-moar 5147b67f7: OUTPUT: ¬´(2 3 4 5 6 7 8 9 10)‚ê§¬ª

[22:18] <stanrifkin> Yeah, I know. The idea was to use parenthesis.

[22:21] <Voldenet> let's wait, maybe someone knowing will show up, because it sounds like something that could be possible

[22:23] <tonyo> there is RyML that gives you a templating in code like JSX

[22:23] <tonyo> so long as you're doing HTML but it can be extended and or the same basic idea used for custom markup generation

[22:24] *** LainIwakura left
[22:34] *** peder left
[22:38] *** arkiuat joined
[22:39] *** peder joined
[22:42] *** arkiuat left
[22:45] <stanrifkin> https://termbin.com/k0vds

[22:45] <stanrifkin> it seems circumfix operator depends on its initial symbol

[22:45] <stanrifkin> left hand side symbol

[23:08] *** arkiuat joined
[23:13] *** arkiuat left
[23:21] *** arkiuat joined
[23:26] *** arkiuat left
[23:32] *** arkiuat joined
[23:36] *** arkiuat left
[23:48] *** arkiuat joined
[23:52] *** arkiuat left
