[01:53] *** jgaz left
[01:58] *** _________ left
[02:07] *** hulk joined
[02:07] *** kylese left
[02:09] *** wbooze left
[02:15] *** _________ joined
[02:33] *** Aedil joined
[02:57] *** swaggboi left
[03:00] *** swaggboi joined
[03:15] *** hulk left
[03:15] *** kylese joined
[03:30] *** Aedil left
[03:38] *** Aedil joined
[03:56] *** maylay left
[03:58] *** maylay joined
[04:30] *** kylese left
[04:32] *** kylese joined
[04:33] *** jpn joined
[04:37] *** jpn left
[05:30] *** kylese left
[05:30] *** kylese joined
[05:33] <discord-raku-bot> <melezhik.> [Coke]: it’s fresh install indeed. ugexe: I am still not sure what you are trying to say, there is certainly delay here , we just don’t know why whst cause it, to eliminate any side effects of CI I  will probably run zef install Air on docker container manually and see what it does . With regard to buffering - if this is the case why then we don’t see buffering/delays on other lines ? Also I am 99% I disable

[05:33] <discord-raku-bot> buffering in my code … by anyways we will see what it does when gets run without any ci layer   Also I have noticed such a behavior of zef ( a significant search stage even for small number of dependencies) many times on all other environments

[05:58] *** yewscion_ left
[06:02] *** jpn joined
[06:07] *** jpn left
[07:35] *** yewscion_ joined
[07:45] *** yewscion_ left
[07:49] <discord-raku-bot> <librasteve> thanks for trying Air both from a CI and a user point of view … please bear in mind that Air is the glue in the “HARC stack” that’s HTMX, Air, Red & Cro so zen install Air has a lot of heavy lifting to do … that’s why, in the Getting Started I say

[07:50] <discord-raku-bot> <librasteve>   Install Air, Cro & Red - zef install --/test cro - zef install Red --exclude="pq:ver<5>" - zef install Air```

[07:52] <discord-raku-bot> <librasteve> this manual instruction is needed on my macOS to force Cro and Red to install in a reasonable time … I don’t know what the exclude on Red is doing. right now this works on my machine on 2024.10 but I cannot get Red to install in 2025.02

[07:55] <discord-raku-bot> <librasteve> the point of saying this in the getting started is to lift installing Cro and Red to the fore and for users to hit any errors on these directly and can seek help on their respective authors due to their size and complexity (and that I do not know much about eg Red install deps)

[07:58] <discord-raku-bot> <librasteve> it is not surprising that these modules struggle on CI since afaik we cannot adverb in META6.json like —\test … I would happily add these if we had them … another option I guess is to go `zen Air —\test’ but that seems to defeat the whole idea

[08:02] *** jpn joined
[08:07] *** maylay left
[08:08] *** maylay joined
[08:12] *** yewscion_ joined
[08:12] *** jpn left
[08:16] *** yewscion_ left
[08:38] *** jpn joined
[08:46] *** Geth left
[08:46] *** lizmat left
[08:46] *** Geth joined
[08:47] *** lizmat joined
[08:58] *** melezhik joined
[09:01] <melezhik> librasteve: thanks, but I use Air as an example of slow zef ( Raku ? )  performance during installation , but like I said it happened to me with many other modules  

[09:01] *** melezhik left
[09:03] *** Sgeo left
[09:08] *** jpn joined
[09:13] *** jpn left
[09:17] *** yewscion_ joined
[09:22] *** yewscion_ left
[09:27] *** sena_kun joined
[10:31] *** jpn joined
[10:36] *** jpn left
[10:57] *** yewscion_ joined
[11:02] *** yewscion_ left
[11:11] *** abraxxa-home joined
[11:22] *** Aedil left
[11:40] <wayland76> Just wanted to say I'm joining up to Discord, and in the "Info and Rules" channel, there's a bunch of messages that refer to other channels.  All those channel names are currently invisible (ie. they just say "No Access") because I don't belong to them.  I don't know if this is something that needs fixing, but thought I'd mention it.  

[11:40] *** abraxxa-home left
[11:41] *** abraxxa-home joined
[11:46] *** wayland76 left
[11:49] *** wayland76 joined
[11:50] *** wayland-mobile joined
[11:54] *** jpn joined
[11:59] *** jpn left
[12:18] *** jpn joined
[12:23] *** jpn left
[12:26] <discord-raku-bot> <librasteve> wayland76: I have checked and the info and rules references should be visible (ie they refer to channels that still exist and that I can see) you are not missing much the occasional post on showcase and raku-beginner are busiest

[12:27] <discord-raku-bot> <librasteve> maybe there is a way to search for / join channels on the discord server in the app, i don’t remember what i did back in the day

[12:31] <discord-raku-bot> <librasteve> there’s a chance you didn’t notice the drop down arrows

[12:31] <discord-raku-bot> <librasteve> otherwise, whoever is admin may need to check permissions…

[12:37] <wayland-mobile> Also, before I joined, I used the discord search to search for Raku, and it didn't show up.

[12:39] <wayland-mobile> I think the only way you could fix it would be to make the channel names not actually be linked to the channels (could they be included in code blocks?)

[12:40] <wayland-mobile> (that second message referred to the first problem, not the second)

[12:42] *** bazzrrr0 joined
[12:49] <bazzrrr0> m: my @a = (1, 2, 3); say @a; my %h = %('a',@a); say %h{'a'};

[12:49] <camelia> rakudo-moar 69d4fcb4e: OUTPUT: «[1 2 3]␤[1 2 3]␤»

[12:49] *** wayland joined
[12:50] *** wayland76 left
[12:53] *** habere-et-disper joined
[12:53] <bazzrrr0> m: my @a = (1, 2, 3); say join(',', @a); my %h = %('a',@a); say join(',', %h{'a'});

[12:53] <camelia> rakudo-moar 69d4fcb4e: OUTPUT: «1,2,3␤1 2 3␤»

[12:55] *** apac left
[13:01] <bazzrrr0> if I have a tin of beans, and inspect it, then stash the tin as a keyed value in a hash, and inspect again, should it not be the same tin of beans?

[13:02] <lizmat> thing is: when you store it in an array like that, it gets another tin around it

[13:02] <lizmat> m: my @a = (1, 2, 3); say join(',', @a); my %h = %('a',@a); say join(',', %h{'a'}<>);

[13:02] <camelia> rakudo-moar 69d4fcb4e: OUTPUT: «1,2,3␤1,2,3␤»

[13:02] <lizmat> the <> removes the outer tin

[13:03] <lizmat> normally you don't notice the outer tin (aka container)

[13:03] <lizmat> but for iterable values, it does matter: it they're in a container, they're considered a *single* value

[13:04] <lizmat> m: my @a = (1, 2, 3); say join(',', @a); my %h = %('a',@a); say %h{'a'};  # the join didn't join anything

[13:04] <camelia> rakudo-moar 69d4fcb4e: OUTPUT: «1,2,3␤[1 2 3]␤»

[13:04] <lizmat> m: my @a = (1, 2, 3); say join(',', @a); my %h = %('a',@a); say %h{'a'}.Str;  # but just stringified

[13:05] <camelia> rakudo-moar 69d4fcb4e: OUTPUT: «1,2,3␤1 2 3␤»

[13:06] *** jpn joined
[13:08] <bazzrrr0> I see, thanks lizmat for explaining why the behaviour is so, and for showing the <> operator usage :->

[13:08] *** lizmat_ joined
[13:10] *** lizmat left
[13:11] *** jpn left
[13:15] *** lizmat_ left
[13:15] *** lizmat joined
[13:16] <bazzrrr0> I guess I'm wondering if the extra container should be automatically removed if the value is extracted from the hash, but I'm sure it's been discussed previously.

[13:16] <lizmat> you don't want that

[13:17] <lizmat> m: my %h = a => 42; say %h<a>; %h<a> = 666; say %h<a>

[13:17] <camelia> rakudo-moar 69d4fcb4e: OUTPUT: «42␤666␤»

[13:17] <lizmat> otherwise ^^ wouldn't work

[13:47] *** bazzrrr0 left
[14:07] *** jpn joined
[14:07] *** Aedil joined
[14:12] *** jpn left
[14:26] *** maylay left
[14:27] *** abraxxa-home left
[14:28] *** maylay joined
[14:47] *** melezhik joined
[14:48] <melezhik> o/

[14:48] *** melezhik left
[14:54] *** habere-et-disper left
[15:08] *** jpn joined
[15:13] *** jpn left
[16:03] *** maylay left
[16:05] *** maylay joined
[16:09] *** jpn joined
[16:14] *** jpn left
[16:33] *** bazzrrr0 joined
[17:07] *** yewscion_ joined
[17:09] <bazzrrr0> Just wanna say, from my hobbyist standpoint, Raku totally rocks! wrote myself a script that tackles a [PDF::Extract] html extract of a specific PDF document, and fixes the inconsistencies in the document, so ending up with a usable dataset. I couldn't imagine how I could do the same in another language, say Python, as the ease of use of Raku makes

[17:09] <bazzrrr0> the "debugging and trial and error, and where next" aspect of programming all just part of the application thought process.

[17:10] *** jpn joined
[17:11] <bazzrrr0> tried to post ^^ earlier but it seems like the client was disconnected at the time, as the comment didn't appear in the chat log.

[17:12] *** yewscion_ left
[17:14] <discord-raku-bot> <antononcube> @bazzrrr0 Most likely the procedure you outline can be done as easily with Wolfram Language (WL). But WL's code would be longer than Raku's.

[17:15] *** jpn left
[17:16] *** bazzrrr0 left
[17:17] <discord-raku-bot> <antononcube> Raku is terser when it comes to string manipulation.

[17:20] *** LainExperiments joined
[17:20] *** LainExperiments9 joined
[17:24] *** coleman left
[17:24] *** LainExperiments left
[17:27] *** LainExperiments9 left
[17:47] *** habere-et-disper joined
[17:52] *** yewscion_ joined
[17:57] *** yewscion_ left
[18:05] *** lichtkind joined
[18:11] *** jpn joined
[18:13] *** Sgeo joined
[18:16] *** jpn left
[18:18] *** LainExperiments joined
[18:20] *** stanrifkin joined
[18:26] *** LainExperiments7 joined
[18:28] *** LainExperiments left
[18:30] *** jpn joined
[18:32] *** LainExperiments7 left
[18:35] *** LainExperiments joined
[18:41] *** Altai-man joined
[18:41] *** sena_kun left
[18:44] *** wbooze joined
[18:45] *** habere-et-disper left
[18:54] *** coleman joined
[19:19] *** Altai-man left
[19:19] *** sena_kun joined
[19:23] *** sena_kun left
[19:25] *** sena_kun joined
[19:26] *** bazzrrr0 joined
[19:35] <bazzrrr0> antononcube thanks for the comment re. Wolfram language and string manipulation, I will try to check it out, maybe even install it too :-)

[19:45] *** sena_kun left
[19:46] *** sena_kun joined
[19:48] *** sena_kun left
[19:49] *** sena_kun joined
[19:54] *** jpn left
[20:00] *** bazzrrr0 left
[20:07] *** wbooze left
[20:19] *** Aedil left
[20:32] <SmokeMachine> Would someone like to proofread a new blog post? https://dev.to/fco/the-future-of-red-orm-for-raku-1m6k-temp-slug-8151519

[20:33] <SmokeMachine> it's heavily edited by chatgpt...

[20:33] <[Coke]> SmokeMachine: 404

[20:34] <SmokeMachine> what about now? https://dev.to/fco/the-future-of-red-orm-for-raku-44gf

[20:37] <[Coke]> :ok:

[20:37] *** maylay left
[20:38] <SmokeMachine> weekly: https://dev.to/fco/the-future-of-red-orm-for-raku-44gf

[20:38] <notable6> SmokeMachine, Noted! (weekly)

[20:39] *** Guest69 joined
[20:39] *** maylay joined
[20:39] <[Coke]> benefits for developer bullet points have a lot of capitalization that seems unnecessary.

[20:40] <[Coke]> Only style note is that I personally would prefer more monospace stuff when referring to code/specific attributes outside of a full code block, but that's not a hard rule. Otherwise seems fine.

[20:41] <[Coke]> e.g. I'd monospace the WHERE in WHERE clause.

[20:41] <[Coke]> but again, personal pref.

[20:54] <coleman> SmokeMachine++ that is a great explanation of the power of RakuAST

[20:54] <[Coke]> Sorry, should have led with that. :)

[20:55] <[Coke]> was more "did you spell things right, use apostrophes..." :)

[20:58] <SmokeMachine> About the styling, I’m not really sure about how to change it… :(

[20:59] <[Coke]> eh, no worries

[21:07] <SmokeMachine> [Coke]: I did change the capitalisation, is it looking better now?

[21:07] <[Coke]> Yes, thanks

[21:08] <SmokeMachine> Thank you! :)

[21:17] *** LainExperiments left
[21:33] <discord-raku-bot> <librasteve> SmokeMachine: proof reads good to me

[21:35] <SmokeMachine> Thanks

[22:05] *** lizmat_ joined
[22:05] *** lizmat left
[22:10] *** sena_kun left
[22:11] *** wayland left
[22:16] *** yewscion_ joined
[22:22] *** yewscion_ left
[22:29] *** apac joined
[22:37] *** stanrifkin left
[22:52] *** lichtkind left
[23:10] *** maylay left
[23:14] *** sena_kun joined
[23:14] *** maylay joined
[23:14] *** sena_kun left
[23:33] <[Coke]> El_Che, patrickb: 2025.03 release is available on github

[23:33] *** jpn joined
[23:33] <[Coke]> Hopefully a little smoother to digest than the 2025.01 was.

[23:37] *** jpn left
[23:37] <jdv> woohoo

