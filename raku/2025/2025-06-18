[00:21] *** librasteve left
[00:33] *** librasteve joined
[00:38] *** librasteve left
[01:00] *** librasteve joined
[01:05] *** librasteve left
[01:32] *** librasteve joined
[01:33] *** kylese left
[01:33] *** kylese joined
[01:37] *** librasteve left
[02:05] *** librasteve joined
[02:10] *** librasteve left
[02:15] *** kylese left
[02:15] *** kylese joined
[02:24] *** grondilu left
[02:24] *** grondilu joined
[02:40] *** librasteve joined
[02:44] *** librasteve left
[02:56] *** librasteve joined
[03:18] *** stanrifkin_ joined
[03:20] *** stanrifkin left
[03:45] *** kylese left
[03:48] *** kylese joined
[05:06] *** librasteve left
[05:06] *** yewscion joined
[05:08] *** yewscion left
[05:15] *** Aedil joined
[05:18] *** librasteve joined
[05:23] *** librasteve left
[05:24] *** librasteve joined
[05:33] *** librasteve left
[05:47] *** librasteve joined
[05:48] *** soverysour joined
[06:00] *** Sgeo left
[06:00] *** soverysour left
[06:29] *** dg left
[06:38] *** dg joined
[06:48] *** soverysour joined
[06:53] *** librasteve left
[06:53] *** soverysour left
[06:57] *** librasteve joined
[07:03] *** librasteve left
[07:16] *** admin___ joined
[07:17] *** admin___ left
[07:22] *** holyghost joined
[07:25] *** librasteve joined
[07:29] *** librasteve left
[07:34] *** donaldh- left
[07:39] *** soverysour joined
[07:50] *** librasteve joined
[08:36] *** dakkar joined
[08:52] *** soverysour left
[08:55] *** soverysour joined
[08:56] *** librasteve left
[08:59] *** soverysour left
[09:06] *** librasteve joined
[09:07] <lizmat> weekly: https://dev.to/patrickbkr/the-second-raku-core-summit-3d2

[09:07] <notable6> lizmat, Noted! (weekly)

[09:11] *** derpydoo joined
[09:15] *** soverysour joined
[09:25] *** soverysour left
[09:26] *** wayland76 joined
[09:27] *** derpydoo left
[09:34] *** soverysour joined
[09:40] *** donaldh joined
[09:53] *** lichtkind joined
[10:05] *** soverysour left
[10:14] *** librasteve left
[10:26] *** librasteve joined
[10:31] <erry> https://youtu.be/6QSiEuByC1Y?t=140 handwritten japanese is valid raku

[10:33] <lizmat> weekly: https://youtu.be/6QSiEuByC1Y?t=140 handwritten japanese is valid raku

[10:33] <notable6> lizmat, Noted! (weekly)

[10:34] <erry> what weekly?

[10:34] *** librasteve left
[10:34] <lizmat> erry: https://rakudoweekly.blog/blog-feed/

[10:34] <erry> I should note by the waym i used https://github.com/finanalyst/rakuast-L10N-JA?tab=readme-ov-file to run the actual 'raku' code, but python to do ocr and feed it to raku

[10:35] <erry> it's a polyglot endeavour 

[10:35] <erry> lizmat: great,i'm glad to spread this totally normal code to the world

[10:35] <timo> yes, it's perfect

[10:35] <lizmat> yeah: am overhauling all localizations at the moment, in a new organization:

[10:36] <lizmat> https://github.com/Raku-L10N/

[10:37] <erry> nice :D

[10:38] *** derpydoo joined
[10:40] <erry> lizmat: maybe you want to remove the ?t=

[10:40] <erry> it starts the video from that timestamp

[10:44] <lizmat> erry: I thought that was the point ?   but yeah, will incorporate the ?t= URL in the next weekly

[10:46] *** librasteve joined
[10:52] *** librasteve left
[10:58] <timo> well, posting for IRC and posting for the weekly may have different intended audiences right?

[11:03] *** derpydoo left
[11:03] <lizmat> well, yes: posting on IRC is immediate, and posting with weekly: is both immediate and a good chance of being mentioned in the next weekly

[11:04] <erry> oki

[11:04] <erry> :3

[11:04] <timo> right. and you took the message from erry 1:1 and put it into "weekly:", that's why erry pointed out the timecode may not be right to have in the weekly as well

[11:05] <timo> i'm not sure if we're actually in disagreement about anything

[11:05] *** librasteve joined
[11:05] <lizmat> I don't think we are?

[11:05] <timo> cool

[11:09] *** librasteve left
[11:25] *** soverysour joined
[11:26] *** simcop2387 left
[11:26] *** librasteve joined
[11:27] *** simcop2387 joined
[11:31] *** librasteve left
[11:33] *** soverysour left
[11:35] *** jjido joined
[11:36] *** simcop2387 left
[11:36] *** simcop2387 joined
[11:45] *** librasteve joined
[11:49] *** librasteve left
[11:50] *** librasteve joined
[11:50] *** jjido left
[11:51] *** soverysour joined
[11:54] *** librasteve left
[12:07] *** librasteve joined
[12:19] *** tjr joined
[12:21] *** librasteve left
[12:27] *** librasteve joined
[12:35] *** yewscion joined
[12:40] *** yewscion left
[12:41] *** soverysour left
[12:46] *** soverysour joined
[12:46] *** soverysour left
[12:46] *** soverysour joined
[13:13] *** soverysour left
[13:18] *** soverysour joined
[13:29] *** jjido joined
[13:39] *** librasteve left
[13:53] *** soverysour left
[13:55] *** jjido left
[14:02] *** librasteve joined
[14:14] *** yewscion joined
[14:41] <[Coke]> Team - please help me to nominate a list of "essential" modules that a) must succeed on blin runs, and b) might be part of more frequent blin testing.

[14:42] <jdv> we already basically do that

[14:42] <[Coke]> (knowing that some of these have a lot of deps, which are then implicitly covered - ok to list the deps explictly as well)

[14:42] <jdv> if its a well known dist it pretty much blocks the release

[14:42] *** soverysour joined
[14:42] *** soverysour left
[14:42] *** soverysour joined
[14:44] <[Coke]> https://github.com/Raku/Blin/wiki/Essential-Modules

[14:44] <jdv> i'd say all the cro dists, zef, DBIish, DB::Pg, the handful of ssl dists at least

[14:46] <[Coke]> 'Cro' by itself would pull in all the cro stuff, yes?

[14:46] <disbot2> <librasteve> yes

[14:47] <disbot2> <librasteve> but note its lowercase cro ... also the usual advice is to go --/test since the test time is quite long

[14:51] <jdv> well, the point of testing is to...test:)

[14:51] <disbot2> <librasteve> amen

[14:54] *** maylay left
[15:00] *** maylay joined
[15:09] *** stanrifkin_ left
[15:13] <disbot2> <librasteve> ===SORRY!=== Error while compiling /Users/stephenroe/Library/CloudStorage/Dropbox/GitWorld/Air-Play/lib/Air/Play/Site14-CounterRed.rakumod (Air::Play::Site14-CounterRed) Incompatible MROs in P6opaque rebless for types Perl6::Metamodel::ClassHOW+{<anon>}+{<anon>} and Perl6::Metamodel::ClassHOW+{<anon>}

[15:15] <disbot2> <librasteve> I am use'ing Red:api<2>; red-defaults “SQLite”; and use experimental :rakuast; use RakuAST::Deparse::Highlight; on the other and I wonder if this error is because Red is somehow incompatible with RakuAST (at least maybe I need to call experimental somehow with the Red code...?

[15:17] <SmokeMachine> I wasn't yet able to run Red using RakuAST... That's why I haven"t started using RakeAST on Red...

[15:20] <disbot2> <librasteve> ah - thanks for the info - looks like I am going to be one of the first "testers" ... meantime I will somehow avoid using both database and code highlighting ;-)

[15:21] <disbot2> <librasteve> the joys of life on the (bleeding) edge

[15:29] *** soverysour left
[15:33] *** soverysour joined
[15:33] *** soverysour left
[15:33] *** soverysour joined
[15:44] *** soverysour left
[15:50] *** soverysour joined
[15:55] <SmokeMachine> librasteve: but what do you want to do with RakuAST::Deparse::Highlight and Red?

[15:56] <disbot2> <librasteve> I want HARC to work with Red (like in the SearchTable example) and I want HARC to do raku code highlighting

[15:57] <disbot2> <librasteve> so I am trying to bring in the Rakudoc Hilite code that finanalyst made that uses Rainbow that uses RakuAST::Deparse::Highlight

[15:58] <SmokeMachine> but do you need 'use experimental :rakuast' to work with code highlighting? I suppose that's only neded to make the compiler to use RakuAST, no?

[15:58] <lizmat> Rainbow uses ::Deparse::Highlight?

[15:58] <SmokeMachine> but does it need 'use experimental :rakuast'? I would guess it doesn't... but I might be wrong...

[15:58] <disbot2> <librasteve> it seems that the MRO error is thrown on the use RakuAST::Deparse::Highlight; 

[15:59] <disbot2> <librasteve> hang on a sec

[16:00] <disbot2> <librasteve> Hilite / Rainbow seems to work fine without the use experimental :rakuast;

[16:01] <disbot2> <librasteve> but the MRO error persists ... so that is definitely caused by combining use Red; and use RakuAST::Deparse::Highlight;

[16:02] <SmokeMachine> Red uses a lot of meta stuff... are you trying to highlight code using Red or are you highlighting some code and using Red only for storing stuff?

[16:03] <disbot2> <librasteve> i'm going to just reject HARC sites that try to use Red (ie for site data) and Hilite by conditional import ... but that is sub optimal in the medium term

[16:04] *** soverysour left
[16:15] <SmokeMachine> librasteve: https://usercontent.irccloud-cdn.com/file/m0ybOq5r/image.png

[16:19] *** gabiruh_ left
[16:20] *** gabiruh joined
[16:20] <disbot2> <librasteve> appreciate the help - sadly that's not going to work in this case since the Rakudoc Hilite.rakumod gives errors unless I use RakuAST::Deparse::Highlight; and I do not want to have to rewrite that

[16:22] <disbot2> <librasteve> suggest I punt on this issue until Hilite is released as a stand alone module (I have made some changes to support this) --- then you are welcome to go in and fix that ... but my preference would be to get Red to work wirh RakuAST ;-)

[16:26] <Geth> ¦ problem-solving: lizmat self-assigned Towards a Raku Foundation https://github.com/Raku/problem-solving/issues/477

[16:26] <SmokeMachine> I really think that once Red works without RakuAST, the correct would be to make RakeAST work with Red...

[16:26] *** soverysour joined
[16:27] <SmokeMachine> make sense?

[16:28] <SmokeMachine> I mean Red works... if RakuAST intends to work transparently, that should work with Red...

[16:28] <disbot2> <librasteve> errr nope ... I think the current status is "the core team is working on RakuAST and that has increasing improved coverage on the raky test suite - therefore when RakuAST is passing all core tests, the next challenge for the team will be to make RakuAST work with important modules such as Red"

[16:29] <disbot2> <librasteve> yeah - I agree that Red should just work with RakuAST when that works is at a sufficiently high quality

[16:34] *** wayland joined
[16:34] *** wayland76 left
[16:35] <SmokeMachine> interesting: https://usercontent.irccloud-cdn.com/file/Tu0Ltdoo/image.png

[16:35] <disbot2> <librasteve> oh - I just remembered that Hilite is going to be a combination of something like Air::Plugin::Hilite [that uses a standalone raku module called Hilite] when this stabilizes ... so you will have to go use Air::Plugin::Hilite in the preamble - so in the short term the guidance will be to not do that if you want to use Red

[16:36] <lizmat> weekly: https://dev.to/lizmat/towards-a-raku-foundation-3ne2

[16:36] <notable6> lizmat, Noted! (weekly)

[16:36] <disbot2> <librasteve> appreciate your help

[16:36] <SmokeMachine> it sees it as a package...

[16:39] *** soverysour left
[16:41] *** dakkar left
[17:04] *** librasteve left
[17:06] *** soverysour joined
[17:13] *** soverysour left
[17:20] *** librasteve joined
[17:28] *** soverysour joined
[17:28] *** soverysour left
[17:28] *** soverysour joined
[17:35] *** soverysour left
[17:39] <El_Che> hallo

[17:39] <tellable6> 2025-05-17T16:41:44Z #raku-dev <jdv> El_Che 2025.05 happened

[17:39] <El_Che> damn, I haven't been on irc much

[17:49] *** holyghost left
[18:47] *** librasteve left
[18:51] *** soverysour joined
[18:57] *** librasteve joined
[19:12] *** stanrifkin joined
[19:16] *** librasteve left
[19:32] *** nine left
[19:32] *** nine joined
[19:33] *** librasteve joined
[19:38] *** librasteve left
[19:50] *** soverysour left
[19:51] *** apac joined
[19:51] *** librasteve joined
[19:57] *** ACfromTX left
[20:01] *** jjido joined
[20:08] *** apac left
[20:31] *** stanrifkin left
[20:46] *** librasteve left
[20:55] *** apac joined
[20:59] *** librasteve joined
[21:01] *** yewscion_ joined
[21:02] *** yewscion left
[21:04] *** librasteve left
[21:05] *** stanrifkin joined
[21:07] *** yewscion_ left
[21:16] *** librasteve joined
[21:17] <timo> weekly: https://wakelift.de/2025/06/18/re-emergence-of-the-blog/

[21:17] <notable6> timo, Noted! (weekly)

[21:21] *** librasteve left
[21:22] <[Coke]> timo++

[21:27] <disbot2> <DataKinds> Hey all, is there a page where performance regression testing for Rakudo is posted? Currently trying to compare a program's runtime across compiler versions to some baseline

[21:32] *** Aedil left
[21:32] <timo> no, there's a package that i've used a rather long time ago that automatically built different rakudo versions and ran a little suite of microbenchmarks and one or two not-so-micro benchmarks and generated html pages with javascript graphs, but i haven't used it in a long long time

[21:33] <disbot2> <DataKinds> Ahh that's okay. I can compare a few versions manually, thanks

[21:33] <timo> we do have the benchable6 bot here on irc which can look for performance regressions by bisecting rakudo versions against code you give it

[21:33] <disbot2> <DataKinds> how does the bot work?

[21:33] <timo> and sourceable6 has download links for every rakudo commit

[21:33] <timo> benchable6: help

[21:33] <benchable6> timo, Like this: benchable6: f583f22,HEAD my $a = ‘a’ x 2¹⁶; for ^1000 {my $b = $a.chop($_)} # See wiki for more examples: https://github.com/Raku/whateverable/wiki/Benchable

[21:35] <timo> are you looking for anything in particular? did you find something that seems to have become slower?

[21:37] <disbot2> <DataKinds> I found a microbenchmark someone else wrote that is slower than I expected it to be & am wondering if it was a regression. Currently rewriting it to one line to run through the bot

[21:44] <timo> i think the bot can take gist links, too

[21:45] <timo> i've got a lot of experience looking at performance stuff so maybe i can figure out what's wrong

[21:51] *** librasteve joined
[21:57] *** librasteve left
[21:57] *** jjido left
[21:57] *** apac left
[22:02] *** yewscion joined
[22:05] <timo> but first, some amount of sleep

[22:06] <Voldenet> I read about missing docs about PromiseStatus and I think that this is not really too comfortable to use in a lot of cases

[22:06] <Voldenet> m: say Promise.kept(42).status ~~ PromiseStatus::Kept

[22:06] <camelia> rakudo-moar 92068d9b4: OUTPUT: «True␤»

[22:06] <[Coke]> ?

[22:07] <Voldenet> this is quite lengthy

[22:07] <Voldenet> m: say Promise.kept(2).kept # this could exist

[22:07] <camelia> rakudo-moar 92068d9b4: OUTPUT: «Cannot resolve caller kept(Promise:D: ); none of these signatures matches:␤    (Promise:U $:: *%_)␤    (Promise:U $:: Mu \result, *%_)␤  in block <unit> at <tmp> line 1␤␤»

[22:07] <[Coke]> m: say Promise.kept(42).status ~~ Kept

[22:07] <camelia> rakudo-moar 92068d9b4: OUTPUT: «True␤»

[22:08] <Voldenet> sure, but it's still not remotely as nice as single method for this

[22:08] <Voldenet> > .kept .broken .completed

[22:09] *** lichtkind left
[22:09] <[Coke]> .kept is already in use for saying it's kept.

[22:10] <Voldenet> but only for Promise:U

[22:10] <[Coke]> are you saying you want a single method that does kept, broken or complete?

[22:10] <Voldenet> well, three helper methods

[22:11] <Voldenet> .then is rarely used, but not-so-nice syntax makes it even more obscure

[22:13] <Voldenet> m: say Promise.kept(2).then( -> $p { $p.status ~~ Kept ?? "Yes" !! "No" }).&await

[22:13] <camelia> rakudo-moar 92068d9b4: OUTPUT: «Yes␤»

[22:15] <Voldenet> m: use MONKEY-TYPING; augment class Promise { multi method kept(Promise:D:) { self.status ~~ Kept  }}; say Promise.kept(2).then( -> $p { $p.kept ?? "Yes" !! "No" }).&await

[22:15] <camelia> rakudo-moar 92068d9b4: OUTPUT: «Yes␤»

[22:16] <Voldenet> I know that improvements I promise are not major and add some maintenance cost

[22:16] <Voldenet> s/promise/propose/ ┐(´～`；)┌ 

[22:19] <Voldenet> that's why I'm not writing github issues with these, I only feel that promises lack the brevity I'm used to in raku

[22:19] *** librasteve joined
[22:19] *** yewscion_ joined
[22:21] <Voldenet> and I certainly don't want to turn it into project reactor, which has obnoxious number of methods for Mono<T>

[22:22] *** yewscion left
[22:22] <Voldenet> for reference: https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html

[22:23] *** Sgeo joined
[22:26] *** librasteve left
[22:26] <Voldenet> I stand corrected, `.completed` already exists as `.Bool`

[22:27] <lizmat> m: say Promise.kept(42).status ~~ Kept   # shorter

[22:27] <camelia> rakudo-moar 92068d9b4: OUTPUT: «True␤»

[22:27] <lizmat> ah, already said

[22:29] <Voldenet> though maybe the way forward is actually spectesting andthen/orelse pair, not adding more code

[22:30] <Voldenet> m: say Promise.kept(2).andthen({"Yes"}).orelse({"No"}).&await # this already works

[22:30] <camelia> rakudo-moar 92068d9b4: OUTPUT: «Yes␤»

[22:31] <Voldenet> but first I'd have to work on MR for https://github.com/rakudo/rakudo/issues/5892

[22:41] *** librasteve joined
[22:42] *** yewscion_ left
[22:48] <lizmat> weekly: https://wakelift.de/2025/06/18/re-emergence-of-the-blog/

[22:48] <notable6> lizmat, Noted! (weekly)

[23:12] *** wayland left
