[01:06] *** Aedil joined
[01:07] <tbrowder> scullocs: i think i remember learning to call th

[01:07] <tbrowder> *the part without the extension when i was introduve

[01:09] <tbrowder> *introduced to the Dec OS in 1987.

[01:10] <tbrowder> or the Cyber OS or the Sun OS a bit later. a long time ago you couldnt

[01:11] <tbrowder> *couldn't always use "special" chars in a basename

[01:12] <tbrowder> maybe it was the old DOS 8.3 thing...

[01:14] <tbrowder> i dunno, but i like it, and lizmat made it happen! ðŸ’—

[01:18] <lucs> tbrowder: Ah. I don't remember seeing that name back in the day, but glad we adopted it.

[02:06] <tbrowder> yeah, but to be honest, i may have made it up, the old days were a bit wild westish (going back to 1961, my first intro to digital computers)

[02:42] *** hulk joined
[02:42] *** kylese left
[03:15] *** hulk left
[03:15] *** kylese joined
[07:20] <discord-raku-bot> <librasteve> o/

[07:20] <discord-raku-bot> <librasteve> lizmat: is there any interest in the IntelliJ OSS project licence (you mentioned that this was on agenda for yesterday's meeting)?

[09:54] *** abraxxa-home joined
[09:55] *** abraxxa-home left
[09:56] *** abraxxa-home joined
[10:36] *** Manifest0 joined
[11:01] *** sena_kun joined
[11:02] <lizmat> yes, we will apply for one

[11:09] <tbrowder> yay!

[11:35] <lizmat> weekly: https://dev.to/lizmat/towards-more-coverage-fne

[11:35] <notable6> lizmat, Noted! (weekly)

[11:35] <timo> does the "fne" in the URL mean anything?

[11:37] <lizmat> no, it's a random thing dev.to adds afaik to make the URLs less generatable ?

[11:37] <timo> OK

[11:43] <lizmat> afk&

[11:45] <timo> nice. lizmat++

[11:45] *** merp left
[12:25] *** Sgeo left
[13:15] <timo> do we already have anything that can take a raku regex and "explain what it does" so to say?

[13:15] <timo> "regexplainer" :D

[13:19] *** Aedil left
[13:35] <discord-raku-bot> <antononcube> Yes, via LLMs.

[13:37] <discord-raku-bot> <antononcube> A more dedicated LLM prompt can be developed, instead of just "plain" explanation requests. This would be nice to test with experts.

[13:37] <timo> ok. i'm looking for something more procedural though

[13:37] <discord-raku-bot> <antononcube> Sure, then we can use LLM to make that procedural explainer.

[13:39] <timo> not interested in that either

[13:39] <ab5tract> timo: I would expect RakuAST could provide a useful starting point

[13:40] <timo> yep, that's what i'm starting with

[13:40] <discord-raku-bot> <antononcube> But, if LLMs can make the explaining tool, why not use it?

[13:40] <discord-raku-bot> <antononcube> I have too many "little" LLM projects like this, BTW. And I want to do other things than LLM-tooling.

[13:41] <timo> to me, LLMs are like asbestos. i will not put it into the walls of houses i build, no matter how well it prevents fires

[13:42] <discord-raku-bot> <antononcube> This kind of luddite attitude toward LLMs is common.

[13:43] <timo> luddites were based btw

[13:43] <discord-raku-bot> <antononcube> To some extend, that is why I deal with LLMs a lot, because I do not trust them.

[13:45] <discord-raku-bot> <antononcube> Basically, before 4/2023 if anyone use "artificial intelligence" in Data Science (DS) or Machine Learning (ML) professional conversations I would immediately start doubting their knowledge or expertiese in DS and ML.

[13:46] <discord-raku-bot> <antononcube> But, now I do thing the phrase "artificial intelligence" has concrete and "provable" meaning.

[13:46] <timo> yeah, "when it makes us more than five billion USD per year" then it's artificially intelligent

[13:48] <discord-raku-bot> <antononcube> Hm... yes, but it is not simple. I thought -- and still - do AI is a brilliant phrase to extract money from USAs millitary complex.

[13:49] <timo> let's not fill up #raku with AI discussion

[13:49] <discord-raku-bot> <antononcube> The thing is the whatever passed for "AI" in the 80's and 90's provided certain logistics algorithms that the USA military used to save billions in the 1st Iraq of war (of USA.)

[13:51] <discord-raku-bot> <antononcube> Hmm... why not? Nobody is using Raku. And one way to get interest into Raku is via LLMs. (Facilitation, demos, etc.)

[13:55] <timo> i'm not saying you can't keep doing your thing. i just don't feel like discussing AI here with you at this moment

[13:57] <discord-raku-bot> <antononcube> Ok.

[13:58] <timo> i understood correctly that you don't have something with LLMs yet that specifically tries to explain raku regexes? possibly only something that explains raku code more generally?

[14:00] <discord-raku-bot> <antononcube> The latter. But it is not that hard to do the following: 1) Make a small prompt that explains Raku regexes based upon, say, "CodeWriterX" 2) Make a larger prompt with the whole page "Regexes" at docs.raku.org 3) Use LLMs to facilitate the writing of Raku program that does regex explanations

[14:01] <discord-raku-bot> <antononcube> Actually, the 3rd option is kind "open" to the taste of the programmer using it. The first 2 are really straightforward.

[14:02] <discord-raku-bot> <antononcube> I will post an example later...

[14:04] <timo> I'd expect that adding a dump of the node tree of RakuAST to the prompt would make it significantly more likely for the LLM to get things right, since it doesn't have to process the syntax of the regex language in order for the correct result

[14:06] <discord-raku-bot> <antononcube> As in all statistical method -- adding determinism makes them (much) better.

[14:07] <timo> i'm not sure i'd call that "adding determinism" though

[14:09] <timo> let me give you a starting point. gimme like five minutes or ten

[14:09] <discord-raku-bot> <antononcube> Yeah, it is more a of structure...

[14:10] <discord-raku-bot> <antononcube> Here is an example using the first option I mentioned above:

[14:10] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1328003117580554331/Raku-simple-Regex-explainer.png?ex=67851ec8&is=6783cd48&hm=e06718627b87b2249615d7be1783a10c006dd12125ffdc3a0ff2effad4976274&

[14:11] <discord-raku-bot> <antononcube> Maybe, it is too simple, but I took a "random real life" regex from here: https://dev.to/taw/100-languages-speedrun-episode-47-raku-perl-6-regular-expressions-4p8n

[14:21] <timo> for the "regexplainer" i would also want to have something showing how the resulting match object structure comes into existence. the code writer X prompt is probably not the right tool for that? or maybe if the prompt asks for "store interesting parts of the resulting match object in local variables with fitting names" or something like that?

[14:22] *** merp joined
[14:22] <discord-raku-bot> <antononcube> "something showing how the resulting match object structure comes into existence." -- for this, I think, the LLMs would be best prompted with examples.

[14:23] <discord-raku-bot> <antononcube> And, yeah, "CodeWriterX" is too simple.

[14:23] <discord-raku-bot> <antononcube> Let's try the last suggestion...

[14:26] <discord-raku-bot> <antononcube> Here is the result with an addition to the request, not the prompt:

[14:26] <discord-raku-bot> <antononcube> https://cdn.discordapp.com/attachments/633753286209699870/1328007112135020647/Raku-simple-Regex-explainer-2.png?ex=67852280&is=6783d100&hm=8c6e6cf24891266c6fd044c3608a05ee26daca029aef516a97c71c85ff1ee571&

[14:26] <timo> try this: raku -e 'use experimental :rakuast; slurp().AST.visit-dfs(-> $node { if $node ~~ RakuAST::Regex { say "The regex source code:\n$node.origin.Str.indent(4)\n\nThe abstract syntax tree:\n$node.dump()"; exit 0 }; True})'

[14:26] <timo> it takes some raku code on standard input and dumps the tree

[14:26] <timo> but you can easily rewrite it to go into your chatbook

[14:26] <discord-raku-bot> <antononcube> Ok.

[14:27] <timo> in order to see if it's actually useful, the regexes will have to be a bit more spicy than that

[14:27] <discord-raku-bot> <antononcube> BTW, the package "LLM::DWIM" helps making CLI tools out of LLM personas. (Specified via TOML.)

[14:27] <timo> but try also with the example code that Todd had on the mailing list: $_ ~~ m:g/ <?before ^ | download > .*? <?before \> | \h+ > /

[14:28] <discord-raku-bot> <antononcube> @timo Yeah, of course. I would not trust such an LLM tool without some vetting by experts.

[14:28] <timo> (have to replace the $something variable with $_ because that's defined, otherwise the RakuAST parser will complain)

[14:45] *** topnep joined
[14:51] <discord-raku-bot> <antononcube> The "Todd regex" does not work for me. I get the error: >  > # Store interesting parts in local variables > my $start = @matches[0].from;       # Starting position of the first match > my $end   = @matches[*-1].to;       # Ending position of the last match > my $text  = @matchesÂ¬Âª.Str.join(''); # Concatenated matched text

[14:53] <patrickb> On the idea of a regexplainer: It should be doable to not only have a regexplainer, but a rakusplainer via RakuAST, right?

[14:53] <patrickb> whatsthis.raku.org

[14:53] <patrickb> :-P

[14:53] <patrickb> So many things to do, so little time...

[14:59] <discord-raku-bot> <antononcube> Yeah, a particular type solution is sought after

[15:02] <timo> for a rakusplainer via RakuAST we could have a look at what .DEPARSE spits out for code with tricky constructs perhaps? but i think deparse might be built to be as close as possible to the original

[15:06] <discord-raku-bot> <antononcube> I was thinking yesterday about the many ways I can use deparsing. For example, to have symbolic-like behavior of certain numerical functions.

[15:06] <timo> for that you likely want .AST rather than .DEPARSE, since DEPARSE gives you source code back out as a string?

[15:12] *** Aedil joined
[15:13] <discord-raku-bot> <antononcube> For example, in numerical integration very often (most of the time) variable transformations are applied to the integrand before the actual integration. Instead of making compositions of functions -- fine idea, per se -- I can modify the integrand function directly with the variable transformations.

[15:17] <discord-raku-bot> <antononcube> In general, the substitution of both strings and RakuAST tree structures is possible. I can see why the latter is much more robust and "right." I was thinking that if I have deparse function I can manipulate text before RakuAST becomes main stream.

[15:19] <discord-raku-bot> <antononcube> TBH, after working with the JavaScript-graphics-code generating packages I am too comfortable with the idea of text templates manipulation, which is very likely an antipattern.

[15:21] <timo> using an AST gives you a set of guarantees and safety rails

[15:21] <discord-raku-bot> <antononcube> Yeah, I can see that.

[15:22] <discord-raku-bot> <antononcube> So, the "deparse thoughts" were just about a possible crutch. Also, most likely, because is a possible technique in R.

[16:17] *** abraxxa-home left
[17:01] <discord-raku-bot> <antononcube> .seen lizmat

[17:01] <tellable6> antononcube, I saw lizmat 2025-01-12T11:43:43Z in #raku: <lizmat> afk&

[17:01] <discord-raku-bot> <antononcube> @lizmat Still AFK? ðŸ™‚

[18:27] *** msiism joined
[18:29] <msiism> [Coke]: Re: https://github.com/Raku/problem-solving/pull/460 I'd think "escape sequence" would be an appropriate name.

[18:29] <msiism> You could also say "symbol" or "code", I guess.

[18:32] <msiism> Okay, just realized you're saying "sequence" now. Yeah, that'll work as well, I guess.

[18:36] <discord-raku-bot> <librasteve> lizmat: ++ on intellij - tx!

[18:48] <timo> no way to put a \t character? or do you put an actual tab character in the string for that purpose?

[18:53] <timo> yeah that's probably it

[18:54] *** yewscion joined
[18:55] <msiism> timo: You mean the prompt?

[18:57] <timo> yeah. you use \t in it to get at strftime formatting

[19:01] <msiism> Yeah. Unix shells also don't seem to care much about conflicting with ANSI C escape sequences.

[19:02] <msiism> You could probably also use the Unicode escape code for Tab.

[19:03] *** yewscion_ joined
[19:03] <msiism> Depends on how the prompt string is parsed.

[19:04] <msiism> Or maybe `\\t`?

[19:05] *** yewscion left
[19:07] <msiism> I don't have [Coke]'s latest version running here and my C skills are about zero, so just throwing out ideas.

[19:09] <timo> you tend to have to use sprintf in the shell to put escape sequences "into action"

[19:11] <msiism> Not sure I get what you mean by that.

[19:13] <tbrowder> late to the game ref raku LLM, how about a new #raku-LLM or AI

[19:16] <discord-raku-bot> <librasteve> afaiui, LLMs are a combination of core code written in NVIDIA CUDA and scripting languages (Go|Python) that run librareis such as PyTorch to configure and kick off the underlying core code

[19:18] <discord-raku-bot> <librasteve> so, I guess there is a possible project to port PyTorch or similar to Raku - however, I think that there is a lot of corporate sponsorship (resources) invested in the (eg) Python LLM toolchain - orders of magnitude above the raku folks resource constraints

[19:22] <discord-raku-bot> <librasteve> short term, seems like Anton is on the right path to invest time & effort in raku as a prompt management tool (at which it is very good imo)

[19:23] <discord-raku-bot> <librasteve> I suggest you try the raku LLM modules to get a sense for what is possible - I have been using Antons Jupyter::Chatbook recently which gives me LLM access in my IDe

[19:31] <timo> i think you might have misread the question?

[19:31] <[Coke]> if \t becomes tab, what to rename existing \t to?

[19:32] <timo> well, i assume \t becomes tab (on the way into rakudo, so rakudo won't see the backslash or the t) and \\t is for strftime (because it needs to get past the shell syntax)

[19:32] <[Coke]> msiism: it's written in Raku, not C.

[19:33] <[Coke]> timo: ah, yes, relying on the shell is just fine. :)

[19:33] <msiism> Ohâ€¦ need to take a closer look. o_0

[19:34] <[Coke]> https://github.com/rakudo/rakudo/blob/coke/ps1/src/core.c/REPL.rakumod#L411-L475 and                 print self.interactive_prompt($previous-evals.elems);

[19:34] <[Coke]> er, https://github.com/rakudo/rakudo/blob/coke/ps1/src/core.c/REPL.rakumod#L484

[19:36] <timo> you would expect the core is written in c with a name like that but no!

[19:40] <msiism> I mean I thought about whether it would be possible not to collide with the ANSI escape sequences at all. But then, Unix shells didn't seem to care much, so I stopped thinking about it.

[19:42] <timo> for the purposes of this, we'll be contending with multiple layers of quoting and syntax that the user is supposed to get their stuff pushed through

[19:44] *** Sgeo joined
[19:49] *** Aedil left
[20:34] <lizmat> antononcube back at the keyboard again

[21:12] <patrickb> ugexe: I just stumbled over https://github.com/ugexe/zef/blob/main/lib/Zef/Service/Shell/wget.rakumod#L71 not entirely sure if it's a bug or not, but the curl looks out of place.

[21:15] <timo> i think that's just to check if running "wget" will get you "weird powershell wget" or "actual real wget"?

[21:16] <timo> hm. no, you may be exactly right

[21:16] <timo> https://github.com/ugexe/zef/commit/c52ad45e3c7dddfe2fd082fc9ee97eeeec31d4db this is where it was introduced

[21:28] <patrickb> ugexe: I currently try to create a minimal tool to generate a local ecosystem from a list of dist repos. It currently mushes together all the META6.json files into a big array, writes that out into a eco.json and adds an ecosystem entry to the zef config.

[21:29] <patrickb> Only now I realized that I'm not providing the information of how to obtain each of the distributions (i.e. the `path` key is missing in each entry in my eco.json).

[21:29] <patrickb> This might be a show stopper.

[21:30] <patrickb> ugexe: Do you see a way to make this work without starting up a webserver? Could I mis-use the LocalCache Repository impl?

[21:42] <discord-raku-bot> <antononcube> @lizmat I want to factor out my recent commit to "Math::Sequences" for two reasons: (1) I don't think I put it in the correct file the new functions real-digits and phi-number-system, and (2) I plan to have those functions in "Math::NumberTheory".

[21:43] <discord-raku-bot> <antononcube> Also, I want to use "Math::Sequences" and "Math::NumberTheory" together in a session. There would be name clashes.

[21:44] <lizmat> antononcube am about to go afk again

[21:44] <lizmat> please make an issue in Math::Sequences for this, so it doesn't fall through the cracks

[21:44] <lizmat> afk&

[21:45] *** yewscion_ left
[21:46] *** yewscion joined
[21:50] <discord-raku-bot> <antononcube> ok

[22:33] *** dg left
[22:33] *** sena_kun left
[22:55] *** msiism left
[23:13] *** sena_kun joined
[23:59] *** jaguart joined
[23:59] *** jaguart left
