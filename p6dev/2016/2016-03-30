[01:47] *** ilbot3 joined
[06:49] <[Tux]> test            21.750

[06:49] <[Tux]> test-t          12.120

[06:49] <[Tux]> csv-parser      25.602

[06:50] <[Tux]> going the right direction again :)

[07:23] *** RabidGravy joined
[08:00] *** sortiz_ joined
[08:47] <dalek> nqp: 01fd41b | (Pawel Murias)++ | src/vm/js/ (2 files):

[08:47] <dalek> nqp: [js] Start working on compiling things that are not complete QAST::CompUnits.

[08:47] <dalek> nqp:

[08:47] <dalek> nqp: Pass the first 3 tests of t/qast/01-qast.t

[08:47] <dalek> nqp: review: https://github.com/perl6/nqp/commit/01fd41b8b6

[11:41] *** vendethiel joined
[12:20] <dalek> nqp: eea75dc | (Pawel Murias)++ | src/vm/js/ (3 files):

[12:20] <dalek> nqp: [js] Compile BVals outside of CompUnits.

[12:20] <dalek> nqp:

[12:20] <dalek> nqp: Pass more of the qast test.

[12:20] <dalek> nqp: review: https://github.com/perl6/nqp/commit/eea75dcebe

[12:20] <dalek> nqp: 250beb3 | (Pawel Murias)++ | src/vm/js/nqp-runtime/reprs.js:

[12:20] <dalek> nqp: [js] Make the REPR put methods on STable in setup_STable rather then an assortment of hacky places.

[12:20] <dalek> nqp: review: https://github.com/perl6/nqp/commit/250beb389a

[12:55] *** lizmat_ joined
[13:08] *** skids joined
[13:19] *** d4l3k_ joined
[13:22] <dalek> rakudo/nom: 268e9c6 | lizmat++ | tools/build/makeMAGIC_INC_DEC.pl6:

[13:22] <dalek> rakudo/nom: More WIP on magical increment/decrement

[13:22] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/268e9c673e

[15:50] <dalek> nqp: d98d15d | (Pawel Murias)++ | src/vm/js/Operations.nqp:

[15:50] <dalek> nqp: [js] Implement nqp::stmts.

[15:50] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d98d15d3ac

[15:50] <dalek> nqp: 9397ca1 | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[15:50] <dalek> nqp: [js] Ignore only known things in the pre_serialization list of things.

[15:50] <dalek> nqp: review: https://github.com/perl6/nqp/commit/9397ca11f0

[15:50] <dalek> nqp: d32f936 | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[15:50] <dalek> nqp: [js] Set the context to null when compiling pre/post deserialization code.

[15:50] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d32f936345

[16:38] *** Ven joined
[16:53] <dalek> nqp: 48fd5f9 | (Pawel Murias)++ | src/vm/js/Compiler.nqp:

[16:53] <dalek> nqp: [js] Support .resultchild on QAST::Stmt and QAST::Stmts. Implement having multiple children for QAST::Stmt.

[16:53] <dalek> nqp: review: https://github.com/perl6/nqp/commit/48fd5f91d7

[16:57] *** Ven joined
[17:09] *** Ven joined
[17:16] *** Ven joined
[17:23] *** Ven joined
[17:33] *** Ven joined
[17:46] *** Ven joined
[17:57] *** FROGGS joined
[18:22] *** perlpilot joined
[18:23] *** Ven joined
[18:38] *** Ven joined
[19:04] *** Ven joined
[19:12] <dalek> rakudo/nom: 5bd1e96 | lizmat++ | src/core/IO/ (2 files):

[19:12] <dalek> rakudo/nom: Implement $*DEFAULT-READ-ELEMS for reading

[19:12] <dalek> rakudo/nom:

[19:12] <dalek> rakudo/nom: Inspired by https://www.mail-archive.com/perl6-language@perl.org/msg35150.html

[19:12] <dalek> rakudo/nom:

[19:12] <dalek> rakudo/nom: Takes its default from the DEFAULT_READ_ELEMS environment variable,

[19:12] <dalek> rakudo/nom: or assumes 65536 if that cannot be found either.

[19:12] <dalek> rakudo/nom:

[19:12] <dalek> rakudo/nom: Since this number will both be used for string based reading (so the

[19:12] <dalek> rakudo/nom: number reflects the number of chars read, which can be more than 1 byte

[19:12] <dalek> rakudo/nom: per char), as well as binary reading, it felt right to call it ELEMS

[19:12] <dalek> rakudo/nom: rather than BYTES or CHARS.

[19:14] <lizmat> hmmm.. looks like dalek got kicked?  the commit is https://github.com/rakudo/rakudo/commit/5bd1e9655d5bd660f660

[19:16] <timotimo> hm, now how do we get this into moar's ops that do buffered reading?

[19:18] <timotimo> lizmat: can you reproduce .IO.open.split("\n") being even slower than .IO.lines ?

[19:18] * timotimo AFK

[19:19] <timotimo> (if you need an example file, just run anything with --profile=heap and make sure it stops after 3 or 4 heap snapshots have been taken)

[19:19] <lizmat> timotimo: maybe use "\x0a" instead of \n ?

[19:19] <lizmat> in my case, split was 2x as fast

[19:26] <timotimo> oh, huh.

[20:10] <jnthn> lizmat: I think I'd rather the read size be a property of a handle

[20:11] <jnthn> lizmat: Also it perhaps wants to be in bytes if we're going to use it as the buffer size we pass "all the way down"

[20:11] <lizmat> well, it was something *i* could to easily to get the discussion  going  :-)

[20:11] <lizmat> having it at VM level on a handle would be excellent  :-)

[20:12] <jnthn> Aye, it's not in the language until it's in a released test suite, so no panic. :-)

[20:12] <lizmat> indeed  :-)

[20:14] <jnthn> The mailing list discussion kinda suggests a default set in PROCESS and so overridable by a dynvar is also valuable though :)

[20:15] <jnthn> But yeah, I think it'll wanna be bytes, since those are what you actually request from the operating system.

[20:21] <lizmat> jnthn: but readcharsfh needs a number of chars

[20:21] <lizmat> but maybe that should default to whatever we have for bytes

[20:22] <timotimo> there's a difference between how many bytes to request from the OS to read into our internal buffers and what we want to have returned right-now

[20:22] <jnthn> What's readcharsfh used for though? Not slurp nor .lines nor .get...

[20:22] <jnthn> I guess for things that have their own buffer?

[20:23] <lizmat> jnthn: yeah, things like .words .split .comb

[20:23] <jnthn> Also, d'oh, I somehow thought today was Tuesday, not Wednesday, 'cus of the bank holiday...

[20:24] <timotimo> my attempts at making p6sink cleverer about unless/if with only two children is breaking the restricted setting :<

[20:24] <jnthn> Guess I'll see about mostly stealing tomorrow for Perl 6 things then :-)

[20:24] <jnthn> .oO( If I'm not smart enough to know what day it is, maybe it's a good thing I didn't hack on Perl 6 stuff :P )

[20:24] <timotimo> um. no. it's breaking anything that runs

[20:25] <jnthn> timotimo: Congrats, or something :P

[20:27] *** Skarsnik joined
[20:29] <timotimo> the things run to completion, apparently, and then i get Cannot look for method 'sink' on a null object

[20:29] <timotimo> and --ll-exception doesn't get me more detail on that >_>

[21:33] <dalek> rakudo/nom: ae3a791 | lizmat++ | tools/build/makeMAGIC_INC_DEC.pl6:

[21:33] <dalek> rakudo/nom: More WIP on magic decrement

[21:33] <dalek> rakudo/nom:

[21:33] <dalek> rakudo/nom: Turns out we need a hash on boundary condition anyway.

[21:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ae3a79129c

[21:35] *** AlexDaniel joined
[21:50] *** pouledodue joined
[22:14] *** pouledodue left
[22:21] *** skids joined
