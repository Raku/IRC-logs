[02:39] *** tomboy64 joined
[02:45] <tomboy64> are nqp-m/nqp-j runtime requirements for perl6?

[05:48] *** sno joined
[07:16] <[Tux]> This is Rakudo version 2016.04-33-gf05c77b built on MoarVM version 2016.04

[07:16] <[Tux]> test            23.022

[07:16] <[Tux]> test-t          13.500

[07:16] <[Tux]> csv-parser      24.776

[07:18] *** brrt joined
[07:35] <nine_> tomboy64: yes

[08:01] *** astj_ joined
[08:11] <lizmat> stmuk_++

[08:12] <stmuk_> its not perfect but maybe its progress

[08:28] <psch> tomboy64: your nqp PR fails travis

[08:28] <psch> tomboy64: which is a bit suspect, considering it only builds moar

[08:28] <psch> tomboy64: https://travis-ci.org/perl6/nqp/jobs/125729392

[08:32] <psch> ah, apparently perl5.10 doesn't have s///r

[08:32] <psch> it's in the 5.13.2 delta (well, unless that's 5.1.32: http://perldoc.perl.org/perl5132delta.html#Non-destructive-substitution)

[08:49] *** RabidGravy joined
[08:58] *** [TuxCM] joined
[10:48] *** dalek joined
[11:31] <lizmat> And another Perl 6 Weekly hits the net: https://p6weekly.wordpress.com/2016/04/26/2016-17-making-our-introductions/

[11:45] <lizmat> is dalek dead?

[11:46] <timotimo> i kicked dalek half an hour ago with my features/ changes, but dalek came back after that

[11:46] <timotimo> it hasn't said anything since

[11:47] <lizmat> I did 2 commits just now

[11:48] <timotimo> dang

[11:51] <lizmat> fwiw, I'm trying out running with HARNESS_TYPE=6 , but am still only getting halfway through the first test file  :-(

[11:54] <timotimo> is there a switch to go from parallel to sequential?

[11:54] <dalek> rakudo/nom: ca29881 | lizmat++ | lib/TAP.pm (2 files):

[11:54] <dalek> rakudo/nom: We usually name our own libs .pm6

[11:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ca298810e8

[11:54] <lizmat> timotimo: TEST_JOBS=

[11:55] <timotimo> oh, duh :)

[11:55] <dalek> rakudo/nom: 6224838 | lizmat++ | tools/build/install-core-dist.pl:

[11:55] <dalek> rakudo/nom: Make sure we install TAP like other libs

[11:55] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6224838d79

[12:45] * [Coke] gets the RT CLI working agian.

[12:45] <[Coke]> *again #thanks to robrt & alex

[12:49] <lizmat> hmmm.... t/harness6 and lib/TAP.pm6 use TABs, instead of spaces...

[12:50] <lizmat> should I convert them to spaces or not?

[12:51] <[Coke]> we should only have tabs in makefiles.

[12:51] <[Coke]> IMO

[12:52] <lizmat> yeah...  IMO as well  :-)

[12:52] <jnthn> Would rather we stick to spaces (except darn Makefiles, where some make programs just can't handle not having tabs :))

[12:53] <jnthn> And probably s/some/most/

[12:53] <jnthn> nmake actually copes, which led me to bust the build on a couple of occasions :)

[12:54] <timotimo> why doesn't nmake have -fpedantic? :)

[12:54] <lizmat> is there a way to make such a change still attributable to leont ?

[12:54] <jnthn> lizmat: Well, if you want to pretend he made the commit you can --author when comitting. :)

[12:54] <timotimo> yeah, you have full control over author and commiter

[12:54] <lizmat> jnthn: ack

[12:56] <dalek> rakudo/nom: ce5dc00 | leont++ | / (2 files):

[12:56] <dalek> rakudo/nom: We use spaces instead of tabs in source files

[12:56] <dalek> rakudo/nom:

[12:56] <dalek> rakudo/nom: See http://irclog.perlgeek.de/p6dev/2016-04-26#i_12394560

[12:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ce5dc00693

[13:01] <jnthn> .oO( what evil shall I commit as lizmat today? :D )

[13:01] <lizmat> .oO( my secret is out :-)

[13:04] <masak> come to think of it, has anyone ever seen jnthn and lizmat in the same room lately?

[13:04] <masak> *gasp* :P

[13:06] <jnthn> :P

[13:22] *** skids joined
[13:28] <[Coke]> GLR : 6; JVM : 51; LHF : 1; LTA : 35; MOARVM : 2; PATCH : 4; PERF : 14; POD : 3; PRECOMP : 3; SEGV : 22; SPESH : 1; STAR : 1; UNI : 5; WEIRD : 2;

[13:28] <[Coke]> that's with the help of the rt cli and some minor tag cleanups.

[13:29] <[Coke]> still some work to do. And only reporting on actual []

[13:30] <[Coke]> s, whereas before I might have mentioned LTA if it occurred anywhere in the subject.

[13:31] <[Coke]> I wonder if we can systematically close the STD requests at this point. Perhaps that's something a @larry could do.

[13:53] *** tomboy64 joined
[14:27] <tomboy64> psch: oh ... uhm. any idea what to do about that?

[14:27] <psch> tomboy64: rewrite lines 84, 85, 87 and 88 (i think) without s///r :)

[14:28] <psch> tomboy64: like, maybe just assign to $_ and s/// normally i guess

[14:28] <tomboy64> :-}

[14:29] <tomboy64> that's what i wanted to avoid

[14:29] <tomboy64> but okay, gonna do that

[14:54] <timotimo> you'll have to avoid s///r because we're relying on very-old-perl5

[15:13] <tomboy64> yeah, we don't even have that in the tree anymore

[15:13] <tomboy64> the oldes we have in the tree is 5.20. i doubt i could go any lower than 5.16 with my current system

[15:18] <geekosaur> huh. macports still has 5.8 (thought we'd removed everything older than 5.14, and that was on the way out. cleaning up the old ports is painful...)

[15:42] <timotimo> "the tree"?

[15:56] *** |Tux| joined
[17:36] *** sortiz joined
[18:08] *** sno joined
[20:04] * [Coke] wonders if https://rt.perl.org/Ticket/Display.html?id=128000 will get rejected or not.

[20:09] <jnthn> If it was being proposed on CArray, yes. But it looks like it's proposing it on CPointer, and we know the size. So it's not an unreasonable request. :)

[20:10] <jnthn> Just need to define method succ and method pred on CPointer, I'd expect.

[20:11] <jnthn> And if we implement those at all on CPointer, then incrementing by the type size is the sensible thing to do.

[20:11] <jnthn> So, no rejection from me

[20:14] * jnthn will be digging into the GC torture testing fallout tomorrow :)

[20:20] <[Coke]> LHF: see if this patch applies and breaks no spectests (master or 6.c-errata): RT #124104

[20:20] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=124104

[20:22] <[Coke]> m: macro FOO { 'say 1' }; FOO;

[20:22] <camelia> rakudo-moar ce5dc0: OUTPUT«===SORRY!=== Error while compiling /tmp/1PyoW7BGCq␤Use of macros is experimental; please 'use experimental :macros'␤at /tmp/1PyoW7BGCq:1␤------> macro⏏ FOO { 'say 1' }; FOO;␤»

[20:23] <[Coke]> m: use experimental: macro FOO { 'say 1' }; FOO;

[20:23] <camelia> rakudo-moar ce5dc0: OUTPUT«===SORRY!=== Error while compiling /tmp/uE6U8UbDOV␤Confused␤at /tmp/uE6U8UbDOV:1␤------> use experimental⏏: macro FOO { 'say 1' }; FOO;␤»

[20:23] <[Coke]> m: use experimental :macros; macro FOO { 'say 1' }; FOO;

[20:23] <camelia> rakudo-moar ce5dc0: OUTPUT«===SORRY!===␤Too few positionals passed; expected 3 arguments but got 2␤»

[20:24] <[Coke]> m: goto b; b: ; say "hello";

[20:24] <camelia> rakudo-moar ce5dc0: OUTPUT«===SORRY!=== Error while compiling /tmp/59rsYNatJf␤Variable '&b' is not declared␤at /tmp/59rsYNatJf:1␤------> goto ⏏b; b: ; say "hello";␤»

[20:33] <[Coke]> m: my @a; @a[0] = |(1,2,3); dd @a; my @b = |(1,2,3); dd @b;

[20:33] <camelia> rakudo-moar ce5dc0: OUTPUT«Array @a = [slip(1, 2, 3),]␤Array @b = [1, 2, 3]␤»

[20:33] <[Coke]> ^^ should those work out the same? RT #126861

[20:33] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=126861

[20:38] <jnthn> No

[20:39] <jnthn> Assigning to an array element is an assignment to that element.

[20:42] <masak> the chairman of the tautology club is the chairman of the tautology club

[20:42] <[Coke]> jnthn: ok. Rejecting ticket.

[20:44] <[Coke]> 1298 tickets left! ;)

[20:47] <[Coke]> masak: do you mind if I stall the macro tickets until we start to move them out of :experimental?

[20:48] <masak> I don't mind; that sounds appropriate

[20:49] <[Coke]> Danke.

[20:49] <jnthn> masak: ...and he'd be most upset if a langauge feature suddenly made him not be so! :P

[20:54] <masak> :)

[20:56] <[Coke]> m: use Test; lives_ok { my $पहला = 1; }, "hindi declaration";

[20:56] <camelia> rakudo-moar ce5dc0: OUTPUT«===SORRY!=== Error while compiling /tmp/Wcut6HPJcG␤Undeclared routine:␤    lives_ok used at line 1. Did you mean 'lives-ok', 'dies-ok'?␤␤»

[20:57] <[Coke]> m: use Test;  lives-ok { my $पहला = 1; }, "hindi declaration";

[20:57] <camelia> rakudo-moar ce5dc0: OUTPUT«ok 1 - hindi declaration␤»

[20:57] <[Coke]> m: is((do { my $दूसरा = 2; sub टोटल ($x) { $x + 2 }; टोटल($दूसरा) }), 4, "evaluation");

[20:57] <camelia> rakudo-moar ce5dc0: OUTPUT«===SORRY!=== Error while compiling /tmp/Rz54QWJID8␤Undeclared routine:␤    is used at line 1␤␤»

[20:57] <[Coke]> muse Test; : is((do { my $दूसरा = 2; sub टोटल ($x) { $x + 2 }; टोटल($दूसरा) }), 4, "evaluation");

[20:58] <[Coke]> m: use Test; is((do { my $दूसरा = 2; sub टोटल ($x) { $x + 2 }; टोटल($दूसरा) }), 4, "evaluation");

[20:58] <camelia> rakudo-moar ce5dc0: OUTPUT«ok 1 - evaluation␤»

[20:58] <jnthn> Nice :)

[20:59] <[Coke]> looks like those tests can be unskipped.

[20:59] <[Coke]> Ok to unskip them in 6.c-errata as well, yes?

[21:00] <jnthn> I'd guess so...I'm not sure they're recent fixes?

[21:00] <jnthn> At a guess, if they were bust at one point, they woulda started working after the NFG improvements pre-xmas

[21:00] <[Coke]> no, I'm sure this was fixed ages ago and just missed because it was a skip and not a todo

[21:01] <jnthn> Well, they coulda parse-failed before...

[21:01] <[Coke]> where ages is the NFG work, aye.

[21:01] <[Coke]> they did.

[21:01] <[Coke]> TTIAR

[21:01] <[Coke]> RT #122340

[21:01] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=122340

[21:01] <jnthn> Glad they work now :)

[21:02] <jnthn> m: say "पहला".chars

[21:02] <camelia> rakudo-moar ce5dc0: OUTPUT«3␤»

[21:02] <jnthn> m: say "पहला".codes

[21:02] <camelia> rakudo-moar ce5dc0: OUTPUT«4␤»

[21:02] <jnthn> m: say "पहला".NFC

[21:02] <camelia> rakudo-moar ce5dc0: OUTPUT«NFC:0x<092a 0939 0932 093e>␤»

[21:02] <jnthn> m: say uninames "पहला"

[21:02] <camelia> rakudo-moar ce5dc0: OUTPUT«(DEVANAGARI LETTER PA DEVANAGARI LETTER HA DEVANAGARI LETTER LA DEVANAGARI VOWEL SIGN AA)␤»

[21:02] <jnthn> say uniprop "\c[DEVANAGARI VOWEL SIGN AA]", 'Canonical_Combining_Class'

[21:03] <jnthn> m: say uniprop "\c[DEVANAGARI VOWEL SIGN AA]", 'Canonical_Combining_Class'

[21:03] <camelia> rakudo-moar ce5dc0: OUTPUT«0␤»

[21:03] <[Coke]> ok. down to 1269 open/new tickets.

[21:03] <jnthn> Yeah, 'twas one of those.

[21:03] <jnthn> m: say uniprop "\c[DEVANAGARI VOWEL SIGN AA]", 'Grapheme_Extend'

[21:03] <camelia> rakudo-moar ce5dc0: OUTPUT«0␤»

[21:03] <jnthn> hm, forgot that prop name :)

[21:05] <[Coke]> m: sub a { my &x = { return }; &x }; my &y = a; &y() # RT#114042

[21:05] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=114042

[21:05] <camelia> rakudo-moar ce5dc0: OUTPUT«Attempt to return outside of any Routine␤  in block <unit> at /tmp/njS134PF41 line 1␤␤»

[21:07] <masak> that looks like one of mine... :)

[21:08] <masak> ...yep

[21:10] <[Coke]> m:  sub foo($a = CALLER::CALLER::<$_>) { say $a }; given 42 { foo(1); foo() } # RT #123660

[21:10] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=123660

[21:10] <camelia> rakudo-moar ce5dc0: OUTPUT«1␤42␤»

[22:12] *** timotimo joined
[22:44] *** tomboy64 joined
