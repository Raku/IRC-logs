[00:40] *** awwaiid joined
[01:13] <awwaiid> Is there a way to dump a hash in nqp? (doing some print-to-stderr based debugging of my modified repl to find where it is losing its lexical context)

[01:13] <awwaiid> I want to dump the %adverbs in src/HLL/Compiler.nqp method eval

[01:16] <awwaiid> oh look! there is literally a dumper method in here

[01:26] <awwaiid> well... that didn't work. now trying other random things

[01:26] <hoelzro> awwaiid: I've always just iterated over the hash =/

[01:39] <awwaiid> sweet

[01:49] <awwaiid> hoelzro: worked!

[04:08] *** geekosaur joined
[04:11] *** geekosaur joined
[05:24] *** hankache joined
[06:13] *** geekosaur joined
[07:32] *** hankache_ joined
[08:32] *** RabidGravy joined
[09:04] <dalek> nqp: 8466354 | (Nelo Onyiah)++ | README.pod:

[09:04] <dalek> nqp: Update README.pod

[09:04] <dalek> nqp:

[09:04] <dalek> nqp: Keep the formatting consistent.

[09:04] <dalek> nqp: review: https://github.com/perl6/nqp/commit/8466354151

[09:04] <dalek> nqp: 543cbbd | lizmat++ | README.pod:

[09:04] <dalek> nqp: Merge pull request #279 from j1n3l0/patch-1

[09:04] <dalek> nqp:

[09:04] <dalek> nqp: Update README.pod

[09:04] <dalek> nqp: review: https://github.com/perl6/nqp/commit/543cbbd446

[09:04] <dalek> rakudo/nom: 46dca95 | bspecht++ | src/core/ (2 files):

[09:04] <dalek> rakudo/nom: disallow dimensions smaller or equal 0 in shapes

[09:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/46dca95547

[09:04] <dalek> rakudo/nom: 98b5b8c | lizmat++ | src/core/ (2 files):

[09:04] <dalek> rakudo/nom: Merge pull request #737 from spebern/nom

[09:04] <dalek> rakudo/nom:

[09:04] <dalek> rakudo/nom: disallow dimensions smaller or equal 0 in shapes

[09:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/98b5b8c3c9

[09:07] <dalek> roast: ed2dbe5 | peschwa++ | S12-attributes/clone.t:

[09:07] <dalek> roast: Unfudge passing tests for RT #125577.

[09:07] <dalek> roast: review: https://github.com/perl6/roast/commit/ed2dbe5de4

[09:07] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=125577

[09:14] <psch> t/spec/S32-io/socket-recv-vs-read.t ........................... Dubious, test returned 10 (wstat 2560, 0xa00)

[09:14] <psch> Failed 10/11 subtests

[09:14] <psch> anyone seen this recently?

[09:14] * lizmat fires up a spectest

[09:14] <masak> psch: not recently, but I've seen it quite a lot

[09:15] <psch> masak: okay, so i'll assume it's not my code for now

[09:15] <psch> lizmat: hope you'll confirm that.. :)

[09:15] <psch> +i

[09:21] <lizmat> Files=1109, Tests=52301, 273 wallclock secs (13.76 usr  3.82 sys + 1623.68 cusr 147.26 csys = 1788.52 CPU)

[09:21] <lizmat> no fails

[09:22] <psch> lizmat: thanks.  i guess i do have to look at the test and see if my changes are involved

[09:23] <psch> except now my spectest apparently hangs somewhere :/

[09:43] *** hankache joined
[09:53] <psch> well, now it's 10 minutes at 't/spec/S32-io/IO-Socket-Async.t ............................... 5/6' :/

[10:25] <lizmat> psch: not seeing anything like that  :-(

[10:26] <psch> lizmat: well, there's other things wrong with my branch anyway... maybe it'll sort itself out once i fix those.. :)

[10:26] * lizmat wishes psch strength

[10:29] <psch> lizmat: thanks :)

[11:45] <dalek> rakudo/nom: 935059f | lizmat++ | src/core/Rakudo/Internals.pm:

[11:45] <dalek> rakudo/nom: Tweak some shape setting code

[11:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/935059ffb5

[11:45] <dalek> rakudo/nom: 5bfc8fb | lizmat++ | src/core/Rakudo/Internals.pm:

[11:45] <dalek> rakudo/nom: Don't need an intermediate

[11:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5bfc8fb9e3

[12:18] *** hankache joined
[14:46] *** camelia joined
[15:58] <awwaiid> hoelzro: I finally got my WIP on bringing looping to the REPL up at https://github.com/rakudo/rakudo/pull/738/files

[17:10] *** geekosaur joined
[17:11] *** geekosaur joined
[17:26] <hoelzro> awwaiid++

[18:16] *** AlexDaniel joined
[18:34] *** vendethiel joined
[19:13] <dalek> roast: 3352127 | usev6++ | S03-metaops/hyper.t:

[19:13] <dalek> roast: Unfudge passing test for RT #126527 [JVM]

[19:13] <dalek> roast: review: https://github.com/perl6/roast/commit/3352127bb7

[19:13] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=126527

[19:23] <lizmat> awwaiid: I just reported some issues with your PR

[19:34] <dalek> roast: 31bb8c1 | usev6++ | S32-list/squish.t:

[19:34] <dalek> roast: Unfudge another test fixed with rakudo ec52cce [JVM]

[19:34] <dalek> roast: review: https://github.com/perl6/roast/commit/31bb8c17a0

[19:37] *** FROGGS joined
[20:05] <dalek> rakudo/nom: 1cb2e8d | lizmat++ | src/core/Str.pm:

[20:05] <dalek> rakudo/nom: Fix for RT #127866

[20:05] <dalek> rakudo/nom:

[20:05] <dalek> rakudo/nom: Well, only on Moar, as the JVM doesn't support "unival" yet.

[20:05] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1cb2e8d9e7

[20:05] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=127866

[20:15] *** TimToady joined
[20:35] <dalek> rakudo/nom: 576f975 | lizmat++ | src/core/Str.pm:

[20:35] <dalek> rakudo/nom: Make sure we return Int on Str.Int

[20:35] <dalek> rakudo/nom:

[20:35] <dalek> rakudo/nom: $ 6 'say "à¼³".Int'

[20:35] <dalek> rakudo/nom: 0    # instead of -0.5

[20:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/576f975237

[20:57] <RabidGravy> If I made a module "Algorithm::Euclid" what would you expect it to do?

[20:57] <RabidGravy> oh, #p6dev not #perl6

[21:33] <dalek> rakudo/nom: 37857b2 | lizmat++ | src/core/Str.pm:

[21:33] <dalek> rakudo/nom: Optimize Str.Numeric a bit

[21:33] <dalek> rakudo/nom:

[21:33] <dalek> rakudo/nom: - remove optional ":strict" that was not being used at all

[21:33] <dalek> rakudo/nom: - don't explicitely return for empty strings

[21:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/37857b239a

[21:51] *** vendethiel joined
