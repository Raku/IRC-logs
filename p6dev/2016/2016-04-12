[00:30] <dalek> roast: ab7d758 | (David Warring)++ | S10-packages/precompilation.t:

[00:30] <dalek> roast: fix erroneous precomp failure for RT#123276

[00:30] <dalek> roast: review: https://github.com/perl6/roast/commit/ab7d7580c4

[00:30] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=123276

[01:00] *** lizmat joined
[01:01] *** stmuk_ joined
[01:21] *** stmuk joined
[01:26] *** stmuk_ joined
[01:36] *** AlexDaniel joined
[01:37] *** stmuk joined
[02:10] *** stmuk_ joined
[02:17] *** stmuk joined
[02:21] *** stmuk_ joined
[05:34] *** vendethiel joined
[06:28] <[Tux]> test            25.500

[06:28] <[Tux]> test-t          14.556

[06:28] <[Tux]> csv-parser      26.435

[06:28] <[Tux]> This is Rakudo version 2016.03-116-gd1eeb38 built on MoarVM version 2016.03-104-g10d3971

[06:28] <[Tux]> no idea why it is still at 104

[06:56] *** geekosaur joined
[08:25] *** RabidGravy joined
[09:32] *** vendethiel- joined
[10:54] *** vendethiel joined
[12:21] *** brrt joined
[13:16] <dalek> nqp: f12f8e1 | (Pawel Murias)++ | src/ (4 files):

[13:16] <dalek> nqp: [js] Add a --substagestats option to time the subparts of turning QAST into js.

[13:16] <dalek> nqp: review: https://github.com/perl6/nqp/commit/f12f8e1fa6

[13:16] <dalek> nqp: 19f1a0a | (Pawel Murias)++ | src/vm/js/nqp-runtime/io.js:

[13:16] <dalek> nqp: [js] Increase the buffer size of readallfh, speeding up slurp() of large files a GIGANTIC amount.

[13:16] <dalek> nqp: review: https://github.com/perl6/nqp/commit/19f1a0add5

[14:08] <|Tux|> So, under rakudobrew I have git_reference/MoarVM ( http://tux.nl/Files/20160412160631.png ) and moar-nom ( http://tux.nl/Files/20160412160820.png )

[14:09] <|Tux|> to *me* is is completely unclear how these two relate, and I would love to know why I cannot "see" timotimo's last updates to the first in the second

[14:09] <timotimo> i'd assume git_reference is only there to make clones faster by not having to download it off the internets again

[15:30] <[Coke]> RT: 1277; SEGV: 26; JVM: 60; LTA: 130; PERF: 12

[16:07] <[Coke]> NYI: 88 # we should probably verify that we're still planning on doing these NYIs.

[16:08] <[Coke]> (e.g. cat, KeyExtractor, complex)

[16:55] <psch> something i'm wondering is the lack of CLA on roast

[16:56] <psch> considering that's the official specification and rakudo is just one implementation it feels weird that the former has to be covered with a CLA but the latter doesn't

[16:56] <psch> afaiu, the CLA serves to establish ownership of TPF over the code, which with roast be official would make more sense there to me

[16:57] <psch> s/be/being/

[16:58] <psch> as it stands, this to me seems like rakudo is TPF-supported, but roast isn't

[16:59] <[Coke]> it's not about financial support.

[17:00] <psch> oh, so because rakudo might have grants associated it gets the CLA treatment?

[17:00] <[Coke]> no.

[17:00] <[Coke]> it's not about money.

[17:01] <psch> ...i don't get it.  i don't think i implied it could be about money in general

[17:01] <[Coke]> as I understand it, it was for legal protection in case of a suit.

[17:01] <[Coke]> "support". what other kind of support?

[17:01] <psch> so it's that roast isn't liable to be used for faulty, monetary products?

[17:02] <psch> 'cause it doesn't do anything that business could use

[17:03] <psch> ...this might too far into lawyer-stuff for me to actually make sense of anyway :)

[17:04] <psch> yeah, i've reread the CLA and apparently i'm completely clueless what exactly it is i signed there :P

[17:40] <perlpilot> psch: you signed a document that says that there is no one who other than you who may claim to your contributions and that you give your contributions to TPF  (or something like that)

[17:40] <perlpilot> (at least that's how I remember it)

[17:42] <perlpilot> Though, I'm still not sure how this is "legal protection" really.   Sure, it protects the project from legal recourse when someone *does* have a claim on contributed code, but if their claim stands, we still have to rip it out and recreate that part.

[17:43] <teatime> it might help a little bit if a large contributor decided to quibble about the terms under which they licensed their code to perl / got mad and tried to make you rip out all of their contributions

[17:44] <teatime> but it doesn't seem to be super valuable, from my quick read

[17:44] <psch> i'm really not legalese-savvy in any capacity

[17:45] <psch> an agreement paraphrasable as "i bring these toys, they are mine, but because they are digital (and thus duplicable) you can keep your copy" seems fine to me vOv

[17:46] <psch> i do realise that i'm not the primary entity which has to be fine with the CLA, though, but i trust that TPF has competent enough lawyers to make it useful enough for their purposes

[18:19] <[Coke]> If you ever meet Allison Randal at a perl conference, ask her. :)

[18:20] <perlpilot> Does Allison still go to Perl conferences?

[19:17] <[Coke]> no clue!

[19:17] <[Coke]> she did the last time I saw her, perhaps for obvious reasons. :)

[19:19] *** AlexDaniel joined
[19:49] <teatime> can someone sanity check my units (Dur means Duration):  Dur ÷ Dur → Real,  Dur ÷ Real → Dur,  Dur % Dur → remainder in seconds,  Dur % Real → remainder in seconds

[20:11] <perlpilot> teatime: are not your "remainders in seconds" actually Durations?

[20:12] <teatime> yes, they are Durations

[20:12] <teatime> I just said it that way to make it clear they were the remainder

[20:12] <teatime> but they're durations, since they're in seconds

[20:12] <perlpilot> then it all seems fine to me

[20:13] <teatime> cool, ty

[21:02] *** hankache joined
[22:59] *** vendethiel- joined
[23:25] *** sortiz joined
