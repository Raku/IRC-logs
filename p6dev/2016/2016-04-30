[01:52] *** sortiz joined
[02:13] *** ugexe joined
[06:50] *** geekosaur joined
[06:52] <dalek> roast: a1cd3e7 | usev6++ | S (2 files):

[06:52] <dalek> roast: Fudge tests for RT #128031 on JVM

[06:52] <dalek> roast: review: https://github.com/perl6/roast/commit/a1cd3e757c

[06:52] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128031

[06:57] <dalek> roast: 985a4a0 | usev6++ | S14-roles/mixin.t:

[06:57] <dalek> roast: Fudge test for RT #127916 on JVM

[06:57] <dalek> roast: review: https://github.com/perl6/roast/commit/985a4a073d

[06:57] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=127916

[07:12] *** RabidGravy joined
[08:37] <masak> "it's perhaps most accurate to say that V8 supports compliance with the “continually maintained draft future ECMAScript standard”" -- interesting reading. http://v8project.blogspot.se/2016/04/es6-es7-and-beyond.html

[09:08] *** vendethiel joined
[10:15] *** pmurias joined
[12:00] *** masak_ joined
[12:01] *** [Coke]_ joined
[12:12] *** JimmyZ joined
[12:48] <psch> how is the long[][] handlers in StaticCodeInfo structured anyway..?

[12:48] <psch> it's documented as "Map of handlers"

[12:56] <psch> ...and how do i get the equivalent of this https://gist.github.com/peschwa/d61db7a81c253790d48c0894ee45bc65 for r-m? :S

[12:57] <psch> i mean, something feels weird to my limited understanding there.  first off, the current CF doesn't have a handler at all, but the first caller has one for 'last'

[12:57] <psch> i mean, i might be misunderstanding that, but the nqp::debugnoop call shouldn't introduce a new CallFrame, should it?

[13:04] <psch> and then there's two more handlers, with what i think are invalid categories

[13:05] <psch> oh, or they're for more than one category...

[13:07] <psch> aha.  tc.curFrame.caller.curHandler is 342, which is the handler that handles next, last and redo in the gist, i.e. handlers[2]

[13:18] <psch> oh, the caller of the for is the scope/block that applies the label to the for block, isn't it

[13:18] <psch> so it's not the debugnoop that adds a frame but it's the for loop that does

[13:25] <dalek> nqp: c459573 | (Pawel Murias)++ | src/vm/js/nqp-runtime/sixmodel.js:

[13:25] <dalek> nqp: [js] Support nqp::atpos on type objects.

[13:25] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c4595730ce

[13:25] <dalek> nqp: 1daaef5 | (Pawel Murias)++ | src/vm/js/RegexCompiler.nqp:

[13:25] <dalek> nqp: [js] Initialize variable before use.

[13:25] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1daaef5c58

[13:25] <dalek> nqp: a28876c | (Pawel Murias)++ | src/vm/js/nqp-runtime/nfa.js:

[13:25] <dalek> nqp: [js] Fix a bug with NQPMu $!cstack breaking the bstack.

[13:25] <dalek> nqp: review: https://github.com/perl6/nqp/commit/a28876cf6e

[13:25] <dalek> nqp: 0234430 | (Pawel Murias)++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/IOOps.java:

[13:25] <dalek> nqp: [jvm] Remove commented out code.

[13:25] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0234430724

[13:25] <psch> pmurias++

[13:25] <psch> i totally missed removing that

[13:34] <psch> updated the gist, fwiw

[13:34] <psch> the way i see it, we're simply not installing a handler when we don't find any of next/last/redo inside the block

[13:35] <psch> instead we should probably also just do it if we find a label

[13:37] <[Tux]> This is Rakudo version 2016.04-53-g1acf805 built on MoarVM version 2016.04

[13:37] <[Tux]> test            21.940

[13:37] <[Tux]> test-t          13.421

[13:37] <[Tux]> csv-parser      23.385

[13:39] *** RabidGravy joined
[13:50] *** pmurias joined
[14:26] <psch> hm, just installing handlers if we have a label apparently isn't enough /o\

[14:31] <psch> ohh, wait.  for gets compiled as p6for, which desugars to a map call

[14:34] *** skids joined
[14:35] *** brrt joined
[15:01] <dalek> rakudo/nom: edd8964 | (Zoffix Znet)++ | src/core/IO/Path.pm:

[15:01] <dalek> rakudo/nom: Fix wrong method names in exception messages for file tests

[15:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/edd8964aa5

[15:01] <dalek> rakudo/nom: b939c4e | lizmat++ | src/core/IO/Path.pm:

[15:01] <dalek> rakudo/nom: Merge pull request #761 from zoffixznet/patch-1

[15:01] <dalek> rakudo/nom:

[15:01] <dalek> rakudo/nom: Fix wrong method names in exception messages for file tests

[15:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b939c4ed1a

[15:24] <dalek> rakudo/nom: d7698f3 | lizmat++ | src/core/ (2 files):

[15:24] <dalek> rakudo/nom: Fix for RT #128039

[15:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d7698f3de2

[15:24] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128039

[16:34] *** geekosaur joined
[16:55] *** pmurias joined
[18:16] *** brrt joined
[18:19] <dalek> roast: 6d2545c | usev6++ | S16-io/supply.t:

[18:19] <dalek> roast: Fudge test for RT #128041 for rakudo-j

[18:19] <dalek> roast: review: https://github.com/perl6/roast/commit/6d2545cc30

[18:19] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128041

[18:21] *** dalek joined
[19:39] <dalek> nqp: 1c90b06 | (David Warring)++ | examples/rubyish/rubyish.nqp:

[19:39] <dalek> nqp: [rubyish] disambiguate '=' && '=='

[19:39] <dalek> nqp:

[19:39] <dalek> nqp: fixes some parse errors in latest nqp-m

[19:39] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1c90b06c34

[19:39] <dalek> nqp: 67e04c7 | (David Warring)++ | examples/rubyish/t/hashs.t:

[19:39] <dalek> nqp: [rubyish] fix hash-key ordering in test suite

[19:39] <dalek> nqp: review: https://github.com/perl6/nqp/commit/67e04c7c9e

[19:39] <dalek> nqp: a6739ba | (David Warring)++ | examples/rubyish/README.md:

[19:39] <dalek> nqp: [rubyish] prefer MoarVM over Parrot in README.md

[19:39] <dalek> nqp: review: https://github.com/perl6/nqp/commit/a6739ba3dc

[19:47] *** sortiz joined
[19:47] <sortiz> \o #perl6

[19:53] <sortiz> stmuk_, DBIish update don't require --force, the version was changed.

[21:07] <ugexe> maybe needs to do `zef/panda update` to update the package list with the updated version number

[21:08] * ugexe needs to document zef auto package-list update config option

[23:17] <sortiz> timotimo, Trying to bisect the spectest failure found nothing. I can't reproduce it. So, or some garbage in my workdir or some heisenbug.

[23:24] <timotimo> oh, could be :\

[23:24] <timotimo> we tend to call these tests "flappers"

[23:24] <timotimo> it was start.t, right?

[23:26] <sortiz> yep

[23:27] <timotimo> yeah, multi-threaded stuff ...

[23:27] <timotimo> i'm not 100% sure whether the deadlock bug was due to the new code in jnthn's branch or an old one that's always been there

[23:30] <sortiz> I'll keep an eye on it.

[23:33] <timotimo> have you read jnthn's last report?

[23:36] <sortiz> Yes.

[23:38] <sortiz> If I understand well, that work hasn't landing yet in MoarVM master, right?

[23:39] <timotimo> correct

[23:40] <timotimo> having the frames reference-counted instead of gc-managed used to be a major factor in their speed

[23:40] <timotimo> so until the optimization lands that makes frames only gc-managed when they "escape" ... everything that involves frames will be crazy slow

[23:41] <sortiz> After read jnthn discoveries, I somewhat surprised that Rakudo works ;-)

[23:42] <timotimo> well, those GC issues are really hard to hit. extremely hard to hit reliably

[23:42] <timotimo> unless of course you turn on gc torture testing :)

[23:43] <sortiz> Yep, it is clear.

[23:43] <timotimo> and there was already a nice torture testing session like that a year or two ago, and the features that were already there at that point got the benefit of the testing already

[23:43] <timotimo> of course, those features likely were touched in the mean time, too
