[04:09] *** lizmat_ joined
[04:13] *** lizmat left
[05:25] *** tbrowder left
[05:27] *** tbrowder joined
[07:39] *** lizmat_ left
[07:39] *** lizmat joined
[11:41] <SmokeMachine> lizmat: is there a way to a query using :find to return the name of the file? it seems to be returning  "<find>", and I don't know from where it's getting those line numbers... https://usercontent.irccloud-cdn.com/file/KUWdBEmS/image.png

[11:42] <SmokeMachine> (but I think it's .looking good... :)

[11:43] <lizmat> iirc :find should return the filenames as the result ?

[11:46] <SmokeMachine> I mean as $key when calling result...

[11:46] <SmokeMachine> shouldn't it?

[11:49] <lizmat> I think the Callable is wrong

[11:49] <lizmat> it should be something like:  { try { $_ if .slurp.AST... } }, ...

[11:54] <SmokeMachine> a simpler example: https://usercontent.irccloud-cdn.com/file/nHY91At7/image.png

[11:56] <lizmat> the reason you get the contents, is because the callable returns the contents, instead of True or False

[11:56] <SmokeMachine> so I should return the IO?

[11:57] <SmokeMachine> but is there a way to print the custom value and the filename?

[12:00] <lizmat> you determine that by what you return in the Callable

[12:00] <lizmat> could well be anything

[12:00] <SmokeMachine> I mean, on my case I'm searching for specific AST on many files of code, and I want to return the name of the files where that ast was found and the ast itself...

[12:00] <lizmat> so, why did you specify :find then ?

[12:01] <SmokeMachine> because otherwise my callable would receice each line, instead of the IO...

[12:01] <lizmat> and why not use the "rak" CLI ?

[12:01] <lizmat> aah... --per-file

[12:01] <lizmat> not sure what that is in the rak module

[12:02] <lizmat> the mapping of cli opts to args to the "rak" sub is not always 1 one 1

[12:06] <lizmat> fwiw, it feels that your use of "rak" is a bit of overkill

[12:06] <SmokeMachine> and I'm not using the rak cli because it seems to not be importing the exports of modules (or I am doing something wrong) (https://github.com/lizmat/rak/issues/5) https://usercontent.irccloud-cdn.com/file/ohv0uwbD/image.png

[12:07] <lizmat> feels to me https://raku.land/zef:lizmat/paths should be enough to make a file selection

[12:07] <lizmat> and then .IO.slurp do you thing on what that produces

[12:08] <SmokeMachine> I'll give a try on `path`, thanks!

[12:09] <SmokeMachine> what about the --module?

[12:09] <lizmat> there's an issue for it... didn't get around to looking at that yet

[12:10] <tbrowder> ah, paths my be what i need, too!

[12:10] <tbrowder> *may be

[12:10] <SmokeMachine> lizmat: thanks!

[12:18] <SmokeMachine> lizmat: it seems `paths` is working well on my case, thanks! https://usercontent.irccloud-cdn.com/file/PgBMqtig/image.png

[12:20] <lizmat> paths(:file(*.ends-with(".rakumod"))   would be faster  :-)

[12:20] <lizmat> and then $file.IO.slurp

[12:21] <lizmat> prevents a lot of IO::Path objects from being made

[12:23] <SmokeMachine> working well, thanks! Now, my next step is to fix the array inside array on named results on ASTQuery, (not related to rak nor paths), thanks! https://usercontent.irccloud-cdn.com/file/2lKcICJZ/image.png

[12:24] <lizmat> yw

[12:26] <tbrowder> lizmat: paths IS what i need, sorry for the bother, but it might be worth mention ing module "paths" in the rak docs.

[12:27] <tbrowder> thank you very much!

[17:43] <tbrowder> hm, how about pairing 'paths' with 'App::Rak' to get the equiv of Gnu find?

[17:46] <tbrowder> maybe allow something like :  $rak = rak {paths(@dirs)} , :named1, :etc;

[17:51] <lizmat> $ rak --find

[17:51] <lizmat> should already be very close to GU find in functionaliy ?

[17:52] <lizmat> $ rak foo --find

[17:52] <lizmat> will find all files with "foo" in their  name

[23:24] <tbrowder> yes, i think i see how to use it as a CLI cmd. i‚Äôll have to experiment some more, though.

[23:26] <tbrowder> i‚Äôm working on a PR for rak doc tweaks to help us weaker-minded users apply it as simply as possible  üòÅ

[23:29] <lizmat> nice

[23:29] <lizmat> meanwhile I'm going for some shuteye  &

[23:58] <tbrowder> nitey nite

