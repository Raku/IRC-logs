[14:45] *** qorg11 left
[14:45] *** qorg11 joined
[14:46] *** qorg11 left
[14:46] *** gotem joined
[15:36] <lizmat> JRaspass: OOC, on the module page, the time since last upload (e.g. "7 hours ago" for Inline::Perl5 atm), do you have a library for that ?

[17:27] <JRaspass> lizmat: for cpan its the modified time of the tarball (rsync will preserve), for zef its the last modified header, for the p6c we get it by querying github/lab over graphql for the time of the last commit.

[17:28] <lizmat> I meant: how do you convert from seconds to "7 hours ago"  :-)

[17:28] <JRaspass> oh i see, yep, i want to upstream that, it's https://gitlab.com/raku-land/raku-land/-/blob/master/lib/DateTime/Relative.rakumod

[17:29] <JRaspass> that's part of the reason i create the raku-land zef org, to upstream some of this

[17:29] <JRaspass> and we add title text in the current timezone with js - https://gitlab.com/raku-land/raku-land/-/blob/master/js/common.js

[17:30] <lizmat> ah, I see: so you're defaulting to a date if more than a day ago

[17:31] <JRaspass> it goes to a date when its >28 days

[17:31] <lizmat> ah, indeed

[17:31] <lizmat> ok

[17:32] <JRaspass> the monkey patching is a little evil, i wish there was a better way to add vmethods/filters to the template

[17:32] <lizmat> well, I'm thinking with the way new-disp works, you should be able to have a lexical method augmenting DateTime, without needing to augment the global DateTime

[17:33] <lizmat> actually, come to think of it:

[17:33] <JRaspass> then i would need to augment each dt in each row in each route?

[17:33] <lizmat> class DateTime is DateTime { method relative() ... }

[17:34] <lizmat> as long as the DateTime objects are created in that lexical scope, that should work

[17:34] <lizmat> but I guess that's a hassle as well

[17:34] <JRaspass> yep, that's why i went with the global, id rather have it just scoped to cro templates if possible

[17:35] <JRaspass> i do even more evil things like adding a comma method to Int :-P

[17:35] <lizmat> mL class DateTime is DateTime { method foo() { dd } }; dd DateTime.now.foo

[17:35] <lizmat> m: class DateTime is DateTime { method foo() { dd } }; dd DateTime.now.foo

