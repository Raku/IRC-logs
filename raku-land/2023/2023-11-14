[00:02] <sjn> where does the spec reside, btw?

[00:02] <sjn> on CPAN, it's CPAN::Meta::Spec

[00:05] <jjatria> I think the synopses are the closest we have: https://github.com/Raku/old-design-docs/blob/master/S22-package-format.pod

[00:07] <sjn> ok, there needs to be a formal specification

[00:07] <sjn> anything less than that should be considered a bug

[00:31] <sjn> jjatria: btw, would you like to join the #perl-raku channel on the OWASP CycloneDX slack? There are a bunch of people there who are looking into improving the state of SBOM there, though I think I'm the only one who raised the hand for the Raku ecosystem 

[02:19] <tonyo> tbrowder__: there is a spec for marking a module deprecated is by marking it's replacement as a supercedes

[02:20] <tonyo> i doubt it's implemented anywhere, quite possibly in zef (i know it did at some point, before there was any usages)

[02:24] <tonyo> a smaller design change that allows you to deduplicate (in a way) is filtering by auth.  another, easier way, might just be a checksum of the package

[02:24] <tonyo> err, of the lib folder (since the meta is different)

[02:59] *** JRaspass left
[03:00] *** JRaspass joined
[08:18] *** lizmat_ left
[08:18] *** lizmat joined
[13:01] <lizmat> so I made a PR and JJ Merelo immediately merged it: https://github.com/Raku/ecosystem/blob/main/SUPERSEDING.list

[13:01] <lizmat> jjatria: that format should allow you to de-dupe, right?

[13:02] <lizmat> not that it would work for this initial set, as I have removed all of my modules from PAUSE, so they weren't seen by raku.lad ayway

[13:02] <lizmat> *anyway

[13:03] <lizmat> if this appeals, then I could do the same for all raku community modules

[13:46] <lizmat> nvm   sorry for the noise

[14:38] *** hernan left
[14:38] *** hernan joined
[15:39] <tonyo> filtering by auth, probably should've said ecosystem

[15:39] <tonyo> so you can filter and just look for stuff like zef: or cpan: or whatever:

