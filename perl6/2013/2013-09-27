[00:02] <timotimo> huh, strange

[00:02] <timotimo> /home/siddhant/rakudo/install/bin/parrot  -  exists and is readable + executable?

[00:11] *** stevan_ left
[00:11] *** REPLeffect joined
[00:12] *** Psyche^ joined
[00:15] *** Psyche^_ left
[00:18] *** REPLeffect left
[00:22] *** hypolin joined
[00:32] *** REPLeffect joined
[00:40] *** REPLeffect left
[00:51] *** REPLeffect joined
[00:56] *** REPLeffect left
[00:56] *** cognominal left
[01:00] *** REPLeffect joined
[01:04] *** REPLeffect left
[01:14] *** btyler left
[01:18] *** REPLeffect joined
[01:27] *** REPLeffect left
[01:27] *** REPLeffect joined
[01:37] *** REPLeffect left
[01:49] *** REPLeffect joined
[01:56] *** FROGGS_ joined
[01:57] *** preflex left
[01:57] *** preflex_ joined
[01:57] *** ChanServ sets mode: +v preflex_

[01:58] *** preflex_ is now known as preflex

[02:00] *** FROGGS left
[02:04] *** skids joined
[02:08] *** btyler joined
[02:11] *** lichtkind left
[02:17] *** btyler left
[02:40] *** odoacre joined
[02:48] *** fridim__ joined
[02:49] *** xinming left
[02:51] *** xinming joined
[03:00] *** tokuhirom left
[03:03] *** tokuhirom joined
[03:09] *** preflex left
[03:11] *** preflex joined
[03:11] *** ChanServ sets mode: +v preflex

[03:21] *** geekosaur left
[03:21] *** geekosaur joined
[04:15] *** stevan_ joined
[04:16] *** stevan_ left
[04:18] *** stevan_ joined
[04:23] *** popl joined
[04:31] <moritz> \o

[04:32] <popl> hi

[04:33] <moritz> good morning popl 

[04:33] *** btyler joined
[04:34] <popl> I'm running spec_smoldertest right now (I just finished building rakudo/parrot) so there will be some more qa data soon

[04:34] <popl> I think I counted 918 tests

[04:34] <popl> it's only through about 20 of them

[04:35] <popl> (not that it's terribly interesting)

[04:36] <popl> moritz: good morning

[04:37] <popl> perl6 is not even released but it's very old. I have a lot to catch up on. :P

[04:41] *** BenGoldberg left
[04:44] *** btyler left
[04:45] <diakopter> popl: well, there are regular releases by some peoples' definition of release, but not by others'

[04:46] *** xenoterracide_ left
[04:46] <popl> diakopter: yes, I understand it is nebulous

[04:54] *** sftp left
[04:57] *** sftp joined
[04:59] *** Rotwang joined
[05:37] *** popl left
[05:41] *** SamuraiJack joined
[05:47] *** raiph left
[05:49] *** PacoAir joined
[05:49] *** PacoAir left
[05:50] *** PacoAir joined
[06:06] *** popl joined
[06:20] *** PacoAir left
[06:37] *** denisboyun joined
[06:41] *** denisboyun left
[06:51] *** kaleem joined
[06:57] *** darutoko joined
[07:07] *** SamuraiJack_ joined
[07:07] *** atroxaper joined
[07:09] *** SamuraiJack left
[07:13] *** zakharyas joined
[07:14] <atroxaper> Hello #perl6 !

[07:15] *** kaleem left
[07:15] <atroxaper> Does anybody know, does moritz has plans for making R* release for windows?

[07:17] <nwc10> atroxaper: I believe that usually Pm has done that

[07:18] <atroxaper> Hope so...

[07:19] <atroxaper> Hello pmichaud. Will you build windows R* release? Please ;)

[07:19] *** kaleem joined
[07:28] *** kaleem left
[07:29] *** kaleem joined
[07:29] <moritz> just for the record, I don't have access to any windows machine with the appropriate development/compilation toolchain

[07:30] <moritz> if anybody wants to finance a sufficiently powerful laptop for dual boot and windows development, I might reconsider :-)

[07:31] *** popl left
[07:31] <atroxaper> moritz: ok)

[07:36] *** daxim joined
[07:42] <FROGGS_> moritz: I have a windows7 + visual studio, if there is a guide I'll do my best

[07:45] <moritz> FROGGS_: the Makefile has an 'msi' target

[07:45] <FROGGS_> hopefully it complains nicely about missing tools :o)

[07:50] <masak> morning, #perl6

[07:50] <FROGGS_> o/

[07:52] *** ssutch left
[07:54] *** ssutch joined
[07:54] *** odoacre left
[07:59] *** dmol joined
[08:05] *** hummeleB1 joined
[08:05] *** cognominal joined
[08:06] *** ssutch left
[08:07] *** odoacre joined
[08:08] *** fridim__ left
[08:10] <moritz> .seen Mouq

[08:10] <yoleaux> I saw Mouq 25 Sep 2013 04:42Z in #perl6: <Mouq> Oh, cool, I understand. Thank you TimToady

[08:14] *** FROGGS_ left
[08:16] *** hummeleB1 left
[08:17] *** iSlug joined
[08:27] *** daxim_ joined
[08:27] *** daxim left
[08:30] <lizmat> good *, #perl6!

[08:30] <moritz> good morning, lizmat 

[08:31] <masak> lizmat! \o/ good morning!

[08:31] <lizmat> jnthn: re jnthn: re http://irclog.perlgeek.de/perl6/2013-09-26#i_7637196 , the pop_phaser approach is only because there is currently no way (that I know of) to create a "remove_phaser" method that accepts the block to be removed

[08:32] <lizmat> geekosaur: note that the initial aproach *did* have a once block insider an ENTER phaser

[08:32] <lizmat> disadvantage of that, is that you will still run the ENTER phaser each time the sub/method is called

[08:32] <lizmat> my approach would be that the ENTER phaser is only run once, to tell the world the sub/method has been deprecated

[08:33] <atroxaper> lizmat o/

[08:33] <lizmat> so you could argue that this is a premature micro optimization

[08:34] <lizmat> otoh, having the capability that phasers disable themselves, might be a good thing to have anyway

[08:34] <masak> lizmat: sounds like you're sniffing very close to the "handle" model/solution.

[08:35] <masak> i.e. at the point of adding the phaser, a handle object is returned, a kind of IDisposable that knows how to un-add the phaser.

[08:35] <masak> we do that for function wrapping, which means a pancake can be removed from the middle of the pancake stack. it's quite pretty.

[08:39] <masak> (it's also possible I'm completely off the mark here... but a quick skim of the backlog caused me to think of handles.)

[08:40] *** sqirrel joined
[08:41] <atroxaper>  r: for ((1...3) X (3...1)) Z ^Inf -> $i, $j, $n {say "-$n|$i:$j-"}

[08:41] <camelia> rakudo a79c94: OUTPUT«-3|1:0-␤-2|1:1-␤-1|2:3-␤-5|4:1-␤-3|2:6-␤-8|7:2-␤-2|2:9-␤-11|10:1-␤-3|3:12-␤-14|13:3-␤-3|2:15-␤-17|16:1-␤»

[08:42] <atroxaper> Am i doing something wrong?

[08:46] <masak> atroxaper: I think the tuple doesn't flatten like you think it will.

[08:48] <atroxaper> masak: i just want to X two arrays and add index for that.

[08:50] <atroxaper>  r: for ((1...3) X (3...1)) -> $i, $j {say "-$i:$j-"}

[08:50] <camelia> rakudo a79c94: OUTPUT«-1:3-␤-1:2-␤-1:1-␤-2:3-␤-2:2-␤-2:1-␤-3:3-␤-3:2-␤-3:1-␤»

[08:51] <atroxaper> But how can i and index for that ?! )

[08:51] <masak> r: say ((1..3 X reverse 1..3) Z ^Inf).perl

[08:51] <camelia> rakudo a79c94: OUTPUT«((1, 0), (3, 1), (1, 2), (2, 3), (1, 4), (1, 5), (2, 6), (3, 7), (2, 8), (2, 9), (2, 10), (1, 11), (3, 12), (3, 13), (3, 14), (2, 15), (3, 16), (1, 17)).list␤»

[08:52] <masak> there's your problem.

[08:52] <masak> r: class Blorb { trusts ::Blorb::Handle }; class Blorb::Handle { has &!remove; submethod BUILD(:&!remove) {}; method remove { &!remove() } }; class BlorbHolder { method add($blorb) { say "$blorb added"; return Blorb::Handle.new(:remove({ self.remove($blorb) })) }; method remove($blorb) { say "$blorb removed" } }; my $handle = BlorbHolder.new.add(Blorb.new); $handle.remove

[08:52] <camelia> rakudo a79c94: OUTPUT«Blorb<-25000658> added␤Blorb<-25000658> removed␤»

[08:52] <masak> lizmat: ^^

[08:53] *** BooK left
[08:53] *** mtk left
[08:53] *** FROGGS joined
[08:54] *** BooK joined
[08:54] <atroxaper> masak: i should think about that. Thank you for hint!

[08:55] <masak> essentially, tuple parentheses are too "soft" and they "break" when you Z on them.

[08:56] <masak> r: for ((1..3 X reverse 1..3).tree Z ^Inf) -> [$i, $j], $n { say "($i, $j) -- $n" }

[08:56] <camelia> rakudo a79c94: OUTPUT«(1, 3) -- 0␤(1, 2) -- 1␤(1, 1) -- 2␤(2, 3) -- 3␤(2, 2) -- 4␤(2, 1) -- 5␤(3, 3) -- 6␤(3, 2) -- 7␤(3, 1) -- 8␤»

[08:56] * masak bows

[08:56] <masak> .tree did le trick.

[08:57] <moritz> it usually does :-)

[08:57] <moritz> .list in one way, .tree in the other

[08:58] <masak> right.

[08:58] <masak> that accords with my mental model.

[08:58] <masak> and X and Z tend to .list if they have to.

[08:58] <masak> just like many of the other primitives.

[08:58] *** fhelmberger joined
[08:58] <atroxaper> Wow!

[08:58] <atroxaper> Cool!

[08:58] <masak> so .tree becomes, semantically, "there is some interesting structure in there that I'd like to turn into []s"

[08:59] <masak> like, "harden" the parentheses.

[08:59] *** mtk joined
[08:59] <lizmat> masak: it is indeed very close to the handle solution

[09:00] <lizmat> however, the trait_mod doesn't have anywhere to return to

[09:00] *** mtk left
[09:00] <lizmat> the return value of adding the ENTER phaser would be needed *inside* that phaser

[09:00] <lizmat> I guess we could do something like:

[09:01] *** mtk joined
[09:01] <lizmat> my $handle; $handle = $r.add_phaser('ENTER', { $handle.remove } ) ?

[09:05] <masak> that looks... one step too superfluous, somehow.

[09:05] <masak> specifically, having to manually specify the removal.

[09:05] *** kaleem left
[09:06] <lizmat> well, I want something that will not interfere with normal phaser execution

[09:06] <lizmat> so checking a flag with every phaser execution, is a nono in my book

[09:08] <masak> *nod*

[09:08] <lizmat> adding some overhead when creating a self-annihilating phaser, is ok

[09:08] <masak> "Remember that Rust is still a rapidly changing language, and releases have very little connotation of stability, support, or any other guarantees." -- https://news.ycombinator.com/item?id=6454443

[09:11] <masak> see also the child comment, about "maturity #5 - production ready"

[09:12] <masak> it would be interesting to map Perl 6 to those maturity levels.

[09:16] <nwc10> I don't think that it's possible to generate a URL for this page that defaults it to the "3 year" range filter: https://www.ohloh.net/p/parrot/commits/summary

[09:18] <nwc10> I think that there is now more activity on https://www.ohloh.net/p/moarvm/commits/summary + https://www.ohloh.net/p/nqp/commits/summary + https://www.ohloh.net/p/rakudo/commits/summary than on https://www.ohloh.net/p/perl/commits/summary

[09:18] *** kaleem joined
[09:19] <masak> nwc10++ # digging up these

[09:19] <nwc10> I had been wondering for a couple of days if aggregate perl6 (core) activity is now more than perl5 (core)

[09:19] <nwc10> (sorry, chromatic, I missed the spaces)

[09:20] *** kaleem left
[09:20] <masak> nwc10: that would be... very odd.

[09:20] *** kaleem joined
[09:20] <nwc10> not necessarily

[09:20] <masak> I can imagine that it's *true*, mind you.

[09:21] <masak> but it still feels extremely strange.

[09:21] <nwc10> 1) it's self hosted. It's more accessible

[09:21] <nwc10> 2) There is more obvious stuff to *do*

[09:21] <nwc10> 3) It's far more "progress" than "maint"

[09:22] <masak> or, in other words: 1) easy onramps, 2) fun, 3) goal

[09:23] <masak> it suddenly strikes me that we should milk 3) for all its worth.

[09:23] <jnthn> o/

[09:23] <masak> I mean, I've realized before that we need to set milestones and establish where we're going. (and we have, to an extent.)

[09:24] <masak> but maybe it's the biggest unbound parameter at our disposal.

[09:24] <masak> to *blast* out our current status and what needs to be done to reach the nice goal, to attract contributors.

[09:24] <nwc10> yes. I'd not thought of it like that

[09:25] <masak> the message not being "hey, look how done we are"

[09:25] <masak> but "hey, look how on the way to done we are -- care to give a hand?"

[09:25] <masak> we blog till we're blue in the face trying to show how feature-complete and stable Perl 6 is.

[09:25] <masak> maybe that's not what will attract people.

[09:26] <nwc10> maybe. But I think that a decade ago perl 5 sucked in contributors (at least partly) because enough of it worked to get them using it, but stuff they *also* wanted was broken and needed fixing

[09:26] <masak> maybe the sense of being a settler, an early adopter, will.

[09:26] <masak> right.

[09:26] <lizmat> afk

[09:27] <masak> the right mix of "I can use this" and "wouldn't it be nice if..."

[09:27] <nwc10> so I'm wondering if the road to getting more contributors is to suck them in from users

[09:27] <bonsaikitten> are there any "frameworks" in perl6 ?

[09:27] <bonsaikitten> stuff that I'd casually use because it's awesome (and not stuff I need to write myself)

[09:28] <nwc10> is Rakudo on JVM now good enough to port ilbot to Perl 6?

[09:29] <jnthn> .tell lizmat The remove the phaser thing is a premature opt. I've only been saying as much for the last week. :(

[09:29] <yoleaux> jnthn: I'll pass your message to lizmat.

[09:32] <jnthn> .tell lizmat Not to mention that working to make *deprecated* things faster feels odd. The point is for people to stop using them; "they're an iota slower 'cus of the deprecation warning" is a motivator to stop using 'em.

[09:32] <yoleaux> jnthn: I'll pass your message to lizmat.

[09:34] <jnthn> nwc10: It has the sockets for it...

[09:44] <masak> if it's time to port ilbot to Rakudo/JVM, I'm willing to head or participate in a hackathon that does this.

[09:44] <masak> some suitable weekend or other.

[09:47] *** darutoko left
[09:48] <nwc10> beware that I'm saying this things from a somewhat outside/high level/unfamiliar with the code/probably not able to help do work

[09:49] <nwc10> but I would hope that first ilbot and then later the website publishing atop Perl 6 would

[09:49] <nwc10> a) generate useful reusable code

[09:49] <nwc10> b) be a prominent example of dogfood

[09:49] <nwc10> c) it would amuse me if the various Perl 5 IRC channels were being logged by Perl 6

[09:49] <nwc10> (and the NSA, and GCHQ, and the Chinese, etc)

[09:50] <nwc10> (and no, I'm not going to say anything stupid because the CIA are just down the hill from me, and I don't want the black segways to come visiting)

[09:51] <nwc10> at least, I hope it would be that, and not predator drones

[09:51] <jnthn> oh noes you just disclosed their secret location!

[09:51] <masak> you never know these days.

[09:51] <nwc10> jnthn: the secret/"secret" has been an utter farce over the past month

[09:53] <nwc10> apparently it ended up with 100 "friends of architecture" coming to photograph it:

[09:53] <nwc10> http://derstandard.at/1378248419619/Ein-virtueller-Spaziergang-zur-NSAVilla

[09:53] <FROGGS> hehe

[09:54] <nwc10> the building in question has a police cubical outside, a security guard inside, bristling with CCTV cameras, and *no name plate*

[09:54] <nwc10> which immediately gives it away as interesting

[09:54] <nwc10> so I asked, and a friend said "it's the CIA building. Everyone round here knows that"

[09:54] <nwc10> the couldn't have made it more obvious if they tried

[09:55] <jnthn> haha

[09:55] <jnthn> fail

[09:55] *** kivutar joined
[09:56] <FROGGS> but that is really a nice building :o)

[09:56] <nwc10> http://goo.gl/maps/tptyE and it's not blurred out

[10:02] *** hypolin left
[10:07] *** sqirrel left
[10:09] * masak thinks that people in the west are too happy with their iPods, TV series and soda machines to ever rebel against their government, no matter how power-hungry, privacy-grabbing, or infringing on human rights

[10:10] <masak> https://en.wikipedia.org/wiki/Bread_and_circuses has been refined to the point where power doesn't have to worry.

[10:11] *** atroxaper left
[10:12] <masak> I would be outraged about it, but I'm too busy watching "Boston Legal" right now.

[10:12] <jnthn> tbh, I don't think it's "just the west". "We'll let you make money and have iPods if you leave us to the politics" is working reasonably well in China. :)

[10:12] <masak> that's because China has becoming more western (in that sense) for the past 20 or so years :)

[10:13] <jnthn> Aye 

[10:13] <masak> become*

[10:13] <jnthn> Ah, you meant "west" as in "value wise" rather than "geography wise"...

[10:14] <masak> also, having a populace leave you alone with your politics is especially easy in a country where for the past 40 years or so, *everything* was about politics, like it or not.

[10:21] *** jnap joined
[10:23] *** sqirrel joined
[10:33] *** darutoko joined
[10:35] <dalek> rakudo/nom: 8182d13 | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[10:35] <dalek> rakudo/nom: Just use a once block for is DEPRECATED and be done with it

[10:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8182d13e34

[10:35] <jnthn> lizmat++

[10:35] <lizmat> mind you, I think it would be good to have add_phaser return a Phaser object, that you could call .remove on

[10:35] <yoleaux> 09:29Z <jnthn> lizmat: The remove the phaser thing is a premature opt. I've only been saying as much for the last week. :(

[10:35] <yoleaux> 09:32Z <jnthn> lizmat: Not to mention that working to make *deprecated* things faster feels odd. The point is for people to stop using them; "they're an iota slower 'cus of the deprecation warning" is a motivator to stop using 'em.

[10:46] *** jnap left
[10:55] <masak> an iota of a motivation.

[10:55] <lizmat> that much ?

[11:00] <lizmat> sorry, can't be less handwavy than that

[11:05] *** pmurias joined
[11:13] *** sqirrel left
[11:15] *** rindolf joined
[11:17] *** kivutar left
[11:18] *** jnap joined
[11:29] <Woodi> hallo :)

[11:29] <lizmat> Woodi o/

[11:31] <Woodi> after opening that NSAvilla link my MS occupiet box frozen hard... maybe it was contacting "home" ? ;) even ctrlAltDel didn't worked :)

[11:31] *** samri joined
[11:32] <samri> helo, what is best implementation of perl6 to install and are there any book to buy about it? i checked oreilly i didnt find any..

[11:32] <tadzik> Rakudo is the most complete implementation, samri 

[11:32] <tadzik> at the moment, there are no books to buy. There is one free book, a draft actually

[11:33] <tadzik> it might be a bit outdated, but you may find it to your liking. It's listed on http://perl6.org/documentation

[11:33] <samri> so there is no up to date references on this language?

[11:33] <Woodi> but on topic: Perl6 need GUI, IMO. like Java and C# - without GUI their instant-like market acceptation would be imposible...

[11:34] <FROGGS>         C:\Perl\bin\perl.exe -MExtUtils::Command -e chmod 755 modules/rakudo-debugger/perl6-debug.exe

[11:34] <FROGGS> Cannot chmod 755 modules/rakudo-debugger/perl6-debug.exe:No such file or directory at C:/Perl/lib/ExtUtils/Command.pm line 274.

[11:34] <moritz> samri: there is reference at http://perlcabal.org/syn/

[11:34] <moritz> Woodi: then write one

[11:34] <FROGGS> (when building on windows to make the msi)

[11:35] <tadzik> Woodi: it should be quite possible to do a GUI these days, talking to JVM classes

[11:35] <tadzik> well volunteered :)

[11:36] <FROGGS> moritz: I could create the msi but the debugger would not be included

[11:36] <samri> just got this when searched: 

[11:36] <samri>  O'Reilly Media and the authors of the current Learning Perl are looking foward to a book on Perl 6 when it's stable. Honestly, we started a long time ago, twice actually, and everything we wrote is now obsolete or has disappeared from the language. It's our hope that someday they'll settle on the final language, allowing us time to make the book.  When we start writing the book, we'll use this domain to let you participate in the proce

[11:36] <samri> so i guess it is too early to learn it..

[11:37] <moritz> FROGGS: well, fixing the build would be preferable, of course :-)

[11:37] <moritz> FROGGS: maybe you need 'make install' first?

[11:38] <FROGGS> moritz: I guess the debugger is still broken

[11:38] *** mkp19901 joined
[11:38] <FROGGS> this was `nmake install` btw

[11:38] *** jnap left
[11:38] *** mkp19901 left
[11:38] <moritz> :/

[11:39] *** samri left
[11:41] <FROGGS> moritz: at least panda seems ok now, it doesn't copy the panda.bat by default to the bin dir

[11:41] *** sqirrel joined
[11:44] <moritz> FROGGS: anyway, I'd prefer a .msi without perl6-debugger to no .msi at all

[11:45] <FROGGS> moritz: I am uploading a RC atm

[11:45] *** BabsSeed left
[11:46] <moritz> \o/

[11:47] <FROGGS> moritz: so if you want to buy another machine, install windows and try it you are welcome :o)

[11:47] <nwc10> an .msi without a debugger can be replaced with an .msi with a debugger

[11:47] <nwc10> (if the problem is in the .msi build)

[11:47] <nwc10> FROGGS: IIRC he said he was quite happy for *someone else* to buy him another

[11:47] <FROGGS> nwc10: the debugger itself is broken on all platforms

[11:47] <nwc10> oh :-(

[11:47] <jnthn> huh...

[11:48] <jnthn> I only fixed it a few weeks back...

[11:48] <nwc10> although it's probably cheaper to buy beer to distract jnthn and use his machine while he's busy

[11:48] <jnthn> What's happened to break it?

[11:48] <FROGGS> jnthn: I'll give you a paste in a few mionutes

[11:48] <FROGGS> -o

[11:49] * lizmat probably broke it with method2sub branch ?

[11:49] <moritz> lizmat: that was merged after the rakudo release, no?

[11:49] <lizmat> yes

[11:49] <lizmat> ok

[11:49] <moritz> lizmat: then it wouldn't be broken in R*

[11:49] <lizmat> then no  :-)

[11:50] <nwc10> bisect! bisect!

[11:50] <jnthn> fwiw, I just built it against a Rakudo and NQP built yesterday and it runs OK here.

[11:50] <nwc10> http://www.codinghorror.com/blog/2007/03/the-works-on-my-machine-certification-program.html

[11:51] <jnthn> (using Makefile)

[11:51] <jnthn> nwc10: :P

[11:53] <dalek> rakudo/nom: 575afc0 | (Elizabeth Mattijsen)++ | src/Perl6/Optimizer.nqp:

[11:53] <dalek> rakudo/nom: Make sure a problem in reporting, does not inhibit the report

[11:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/575afc057a

[11:54] <jnthn> lizmat: You didn't need the curlies there, I think... ;)

[11:54] <jnthn> lizmat: What did you find to trigger that, ooc? Something in setting building?

[11:55] <lizmat> yes

[11:55] <jnthn> lizmat: OK.

[11:55] <jnthn> If it was triggerable in some other way it'd deserve an RT... :)

[11:56] <lizmat> no, it was me being stupid in the setting

[11:56] <lizmat> basically, optimizer telling me that DEPRECATED() should be called with 2 parameters

[11:56] <lizmat> instead of one

[11:56] <jnthn> Nice :)

[11:56] <jnthn> Yeah, as it goes about doing inline analysis it can also spot things that'll never possibly work :)

[11:57] <lizmat> and that erorr message bombed

[11:58] <lizmat> before: Method 'Str<3477132080187517822>' not found for invocant of class 'Perl6::Metamodel::ClassHOW'

[11:58] <lizmat> after: CHECK FAILED:

[11:58] <lizmat> Calling 'DEPRECATED' will never work with argument types (str) (lines 1415, 1415, 6510, 6510, 7422, 7422, 8446, 8446, 8450, 8450, 8862, 8862, 9123, 9123, 14980, 14980, 15302, 15302)

[11:58] <lizmat>     Expected: 

[11:59] *** kaleem left
[11:59] <FROGGS> jnthn: that looks more like a pandabug: https://gist.github.com/FROGGS/4cb5ec025cf7e2203908

[11:59] <jnthn> Hm...why's it dupe...

[11:59] <jnthn> the line nums

[11:59] <lizmat> because it expected 2 params ?  and I only gave it one ?

[11:59] <jnthn> Feels odd

[12:00] <FROGGS> even even

[12:00] <jnthn> No, it should report once per call

[12:00] * lizmat running spectest now, will check in a bit

[12:00] <jnthn> I mean, we can squish 'em but I wanna know where they're coming from. :)

[12:01] <jnthn> oh neins...zugriff verweigert

[12:01] <jnthn> But yeah, that's while installing Term::ANSIColor...

[12:01] <moritz> jnthn: tray again please

[12:01] <moritz> *try

[12:01] *** ksh left
[12:02] *** skids left
[12:02] <jnthn> ah, it means "access denied"

[12:02] <jnthn> Odd...

[12:03] <jnthn> I think I've seen that happen now and then on Windows with Panda...

[12:03] <dalek> rakudo/nom: 0327e30 | (Elizabeth Mattijsen)++ | src/Perl6/Optimizer.nqp:

[12:03] <dalek> rakudo/nom: jnthn++ tells me the {} were not needed

[12:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0327e30022

[12:04] *** brrt joined
[12:04] <lizmat> r: sub a ($a) {}; a("a","b","c","d")

[12:04] <camelia> rakudo 8182d1: OUTPUT«===SORRY!===␤CHECK FAILED:␤Calling 'a' will never work with argument types (Str, Str, Str, Str) (lines 1, 1)␤    Expected: :($a)␤»

[12:04] <lizmat> seems to always double, regardless of # params

[12:05] <jnthn> yeah

[12:05] *** iSlug left
[12:05] <jnthn> Will look later...

[12:08] <FROGGS> hmm, maybe its cwd is wrong and it can't find the .work?

[12:08] <jnthn> That'd probably not give access denied, though?

[12:11] <FROGGS> yeah, and it checks -d on that path before deleting it :/

[12:11] <FROGGS> ahh, wait

[12:12] <dalek> rakudo/nom: 155487c | (Elizabeth Mattijsen)++ | src/core/ (20 files):

[12:12] <dalek> rakudo/nom: Mark "exists" as DEPRECATED, change all calls of .exists to .exists_key|pos

[12:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/155487c889

[12:12] <lizmat> errands&

[12:14] *** denisboyun joined
[12:20] * JimmyZ wonders why exists  is DEPRECATED

[12:21] <moritz> JimmyZ: to emit deprecation warnings

[12:22] <JimmyZ> I meant why 'exists' is not used 

[12:22] <tadzik> :)

[12:23] <moritz> JimmyZ: because it's ambiguous

[12:23] <moritz> positional vs. associative

[12:26] <JimmyZ> looks like it is

[12:28] <FROGGS> jnthn: yes, doing `nmake` works...

[12:29] * [Coke] waves to the room before dayjobbing.

[12:29] <yoleaux> 26 Sep 2013 23:48Z <sisar_> [Coke]: thanks for looking into it, but no luck. It fails with: http://sprunge.us/fVAH. I'm unfamiliar with the build process, but I thought that invoking '--gen-parrot' would automaticall build nqp too.

[12:29] * jnthn waves at [Coke] while dayjobbing

[12:30] <JimmyZ> waves at [Coke] after dayjobbing

[12:31] <jnthn> Timezones! \o/

[12:31] * nwc10 merely waves

[12:32] <[Coke]> .to sisar - hurm, maybe I was looking at the wrong line on the initial paste there. what version of rakudo are you using? what platform? have you tried removing the existing nqp directory and trying again?

[12:32] <yoleaux> [Coke]: I'll pass your message to sisar.

[12:33] * masak .oO( if you wave at someone while dayjobbing, does the observer experience the Jobbler effect? )

[12:39] <FROGGS> iiiiiieeeeeeeeeeaaaaaaaaauuuuuuuuuu

[12:39] *** kivutar joined
[12:40] <daxim_> aioeu

[12:40] <FROGGS> no

[12:41] <FROGGS> well, maybe it is aioeu in austria :o)

[12:49] *** xenoterracide_ joined
[12:52] *** iSlug joined
[13:04] *** jnap joined
[13:05] *** raiph joined
[13:08] *** ssqq joined
[13:09] *** lowpro30 joined
[13:16] <ssqq> #parrot channel no person

[13:16] *** lowpro30 left
[13:17] <moritz> ssqq: try #parrot on irc.perl.org

[13:17] <moritz> though last I looked there, not much was going on

[13:18] <moritz> ok, 3 days ago there was a bit of actual parrot discussion

[13:19] *** sqirrel left
[13:19] <ssqq> thanks moritz, If the project of parrot have some problem?

[13:21] <moritz> ssqq: lack of active contributors and development

[13:22] <ssqq> moritz: If the parrot have been stable enough?

[13:22] <moritz> ssqq: stable enough for what?

[13:22] *** ajr joined
[13:23] <ssqq> moritz: stable enough for run Rakudo.

[13:23] *** ajr is now known as Guest84621

[13:23] <ssqq> The network name of irc.perl.org is?

[13:23] <moritz> ssqq: it runs rakudo, yes. Though not as fast as we would like :-)

[13:23] *** prevost joined
[13:23] <moritz> ssqq: magnet

[13:24] <JimmyZ> ssqq: PerlVim, 你好

[13:24] *** rindolf left
[13:24] <ssqq> JimmyZ: How are you

[13:24] <ssqq> JimmyZ: Nice to see you here.

[13:24] <JimmyZ> er

[13:25] <ssqq> thanks moritz.

[13:27] <JimmyZ> ssqq: 你的 makefile 实现怎么样了

[13:29] *** Guest84621 is now known as ajr_

[13:33] *** skids joined
[13:34] *** GibbaTheHutt joined
[13:34] *** sqirrel joined
[13:40] *** btyler joined
[13:41] *** kaleem joined
[13:41] *** kivutar left
[13:41] <ssqq> JimmyZ: makefile 早就不写了。

[13:41] <FROGGS> jnthn: star's Makefile is to blame about the perl-debug build. it prints the the statements but it does not execute them

[13:42] <jnthn> huh? :)

[13:42] <FROGGS> jnthn: I temporary prefixed them with cmd /c, and it works

[13:42] <jnthn> ok :)

[13:42] <jnthn> .oO( Makefail )

[13:42] <FROGGS> yeah

[13:42] <FROGGS> no idea why it does it like that

[13:43] <FROGGS> k, creating another RC of the msi :o)

[13:43] *** iSlug left
[13:44] <ssqq> JimmyZ:  我原来以为一个内置的 make 会大大简化一个解释器的模型。

[13:45] <FROGGS> moritz: SCHNARRENBLARKEN make SCHMETTERLING KAMPFPANZERWAGEN!!

[13:45] <FROGGS> :P

[13:46] <FROGGS> <--- coffee

[13:46] <ssqq> JimmyZ: 现在发现影响一个语言解释器的最重要的东西是语法。

[13:47] <ssqq> JimmyZ: 一个复杂语法的语言，最终将处理一个非常复杂的数据结构。

[13:48] <JimmyZ> ssqq: 呵呵。我之前就讲过不可行了

[13:50] *** cognominal left
[13:50] <JimmyZ> FROGGS: try add 'SHELL = cmd' to Makefile

[13:50] <FROGGS> too bad, windows is already shutting down :o)

[13:51] <FROGGS> I'll take a note and try later, thanks!

[13:51] <ssqq> JimmyZ: Perl 6 在正则表达式和语言表达方面的能力越强大，Perl 6能参与进来的人就越少。因为太复杂了。

[13:52] <JimmyZ> ssqq: 你多虑了

[13:52] <timotimo> perl6 is not too complicated! ;)

[13:52] * JimmyZ .oO( timotimo knows about chinese ... )

[13:53] <timotimo> does that concern perl6 the language (to users) or rakudo the implementation (to core developers)?

[13:53] <ssqq> JimmyZ: 我最近看了非常精简的 Lua，非常简洁的 Ruby， 和扩展性很好的 Lisp。

[13:53] <timotimo> 我不知道多少中国人。谷歌翻译帮助我了解。

[13:54] <timotimo> 翻译结果不包含“谷歌”或“翻译”。我很高兴。

[13:54] <timotimo> 没有人会了解我的秘密。

[13:54] <JimmyZ> hehe

[13:54] <brrt> can't really follow this discussion anymore

[13:54] <timotimo> huehuehuehuehue

[13:54] <timotimo> (from another asian country)

[13:55] *** iSlug joined
[13:56] *** ssqq left
[13:56] <dalek> nqp: bc537f3 | Mouq++ | src/QRegex/P6Regex/Actions.nqp:

[13:56] <dalek> nqp: Fix bug with integer ** quantifiers

[13:56] <dalek> nqp: 

[13:56] <dalek> nqp: / a ** 2_0 / previously matched "a" two times.

[13:56] <dalek> nqp: Now uses the .ast of <decint>.

[13:56] <dalek> nqp: review: https://github.com/perl6/nqp/commit/bc537f35ec

[13:56] <timotimo> cool! :)

[13:56] *** ssqq joined
[13:56] <jnthn> oops :)

[13:56] <jnthn> We probably need tests for that :)

[13:57] <tadzik> wow :)

[13:57] <tadzik> Mouq++

[13:58] <JimmyZ> ssqq: 有空了解一下 MoarVM

[13:59] <FROGGS> nqp: say("aaaa" ~~ / a ** 2_0 .. 4_0 /)

[13:59] <camelia> nqp: OUTPUT«Spaces not allowed in bare range at line 2, near " 4_0 /)"␤current instr.: 'panic' pc 14693 (src/stage2/gen/NQPHLL.pir:5223) (src/stage2/gen/NQPHLL.nqp:279)␤»

[13:59] <FROGGS> nqp: say("aaaa" ~~ / a ** 2_0..4_0 /)

[13:59] <camelia> nqp: OUTPUT«aaaa␤»

[13:59] <FROGGS> alright

[13:59] *** kivutar joined
[13:59] <FROGGS> now I see the min.ast in the diff too :o)

[14:00] <jnthn> nqp: say("aaaa" ~~ / a ** 4_0..2_0 /)

[14:00] <camelia> nqp: OUTPUT«Empty range at line 2, near " /)"␤current instr.: 'panic' pc 14693 (src/stage2/gen/NQPHLL.pir:5223) (src/stage2/gen/NQPHLL.nqp:279)␤»

[14:00] <jnthn> That also needs a fix.

[14:00] <jnthn> It's in Grammar.pm

[14:00] <jnthn> no, wait, I meant

[14:00] <FROGGS> LTA?

[14:00] <jnthn> nqp: say("aaaa" ~~ / a ** 4..2_0 /)

[14:00] <camelia> nqp: OUTPUT«Empty range at line 2, near " /)"␤current instr.: 'panic' pc 14693 (src/stage2/gen/NQPHLL.pir:5223) (src/stage2/gen/NQPHLL.nqp:279)␤»

[14:00] <jnthn> That's the one. That should not be an error.

[14:00] <FROGGS> ohh

[14:02] *** ssqq left
[14:03] <FROGGS> ohh, call for papers for the german perl workshop 2014 in my inbox

[14:05] <FROGGS> moritz: you are going to come to hannover in march?

[14:06] <FROGGS> timotimo: you?

[14:06] <FROGGS> I don't need to ask liz I guess :o)

[14:07] <timotimo> hm, hannover is pretty far for me (i'm not an airplane person (though how cool would that be?)), so probably not

[14:07] <FROGGS> the perl workshop in berlin was awesome!

[14:08] <FROGGS> sad that there are usually no hackathons

[14:08] <tadzik> there was one in Erlangen, didn't attract many people

[14:08] <tadzik> I think it attracted 3: me, moritz and jnthn 

[14:08] <FROGGS> 130ppl in berlin

[14:08] <FROGGS> *g*

[14:08] <tadzik> add masak to that, and that's 4 people :)

[14:09] <FROGGS> still LT "A".ord

[14:10] <jnthn> Hm, I guess Hannover is a shortish train journey from Hamburg?

[14:10] <FROGGS> jnthn: correct :o)

[14:10] <jnthn> Hm, so it's trainable from here if I wanted to come.

[14:11] <FROGGS> that would be nice

[14:11] <FROGGS> if you are not going to come I'll give a perl6-status talk too

[14:11] <FROGGS> ... in germish

[14:11] <jnthn> You could do that anyway :)

[14:11] <FROGGS> yeah

[14:11] <jnthn> And I could find other things to talk about

[14:12] <jnthn> I'm pretty sure I won't talk about anything in germish :)

[14:12] <FROGGS> I have time till mid december to decide what to say

[14:12] <FROGGS> (and how to say it)

[14:13] <timotimo> hmm, when jnthn needs to "find other things to talk about" he usually comes up with something that leaves mouths agape :P

[14:13] <timotimo> hoelzro: where do we have to look to find out the current progress on the perl6 syntax highlighting on github?

[14:14] <FROGGS> yeah, and that means he will needs something extra-ordinary to hack on a few weeks before the conference

[14:14] <FROGGS> like... what if bytecode could hack for us? and then we need to call the hacking bytecode "backer" or so

[14:17] <FROGGS> timotimo: I guess first v1.7 of pygments must be releases: https://bitbucket.org/birkenfeld/pygments-main/src/tip/CHANGES

[14:17] <timotimo> https://github.com/tmm1/pygments.rb/pull/73 - this is the PR we were all looking at

[14:18] *** PacoAir joined
[14:19] <PerlJam> timotimo: Add a comment to the PR shaming github for lagging behind bitbucket?  ;)

[14:19] <GlitchMr> rn: say sort <1 10 2>

[14:19] <camelia> niecza v24-95-ga6d4c5f: OUTPUT«1 2 10␤»

[14:19] <camelia> ..rakudo 155487: OUTPUT«1 10 2␤»

[14:19] <TimToady> I suppose out-of-sync highlighting would have to be called 色ばけ

[14:19] <GlitchMr> rn: say <1 10 2>.perl

[14:19] <camelia> rakudo 155487: OUTPUT«("1", "10", "2")␤»

[14:19] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT«(val("1"), val("10"), val("2"))␤»

[14:19] <timotimo> PerlJam: i'm not sure i understand

[14:22] *** iSlug left
[14:22] <PerlJam> timotimo: apparently bitbucket.org already does perl6 syntax highlighting

[14:23] *** kaleem left
[14:24] <timotimo> it ... does!?

[14:24] <timotimo> that's neat!

[14:24] <timotimo> do you have an example link?

[14:25] <PerlJam> timotimo: no, just http://irclog.perlgeek.de/perl6/2013-09-17#i_7596584

[14:25] <timotimo> https://bitbucket.org/birkenfeld/pygments-main/src/7304e4759ae65343d89a51359ca538912519cc31/tests/examplefiles/RoleQ.pm6?at=default

[14:25] *** sqirrel left
[14:25] *** logie left
[14:26] <timotimo> you can't spell properly without perl

[14:27] *** kivutar left
[14:27] <jnthn> nice :)

[14:27] <FROGGS> absolutely

[14:28] <TimToady> you can't spell nice without c

[14:29] <PerlJam> timotimo: superlative ;)

[14:29] <FROGGS>  /o\ now I got it

[14:29] <diakopter> you can't spell without the

[14:30] <TimToady> sure you can, just use the other one instead

[14:30] *** SamuraiJack_ left
[14:30] <timotimo> FROGGS: not many of those work on two levels like this one

[14:30] <diakopter> no, I meant *you*  O_O

[14:30] <pmurias> Woodi: re GUI, isn't most new GUI stuff done as web apps? ;)

[14:31] <timotimo> we have SWT on jvm ;)

[14:33] *** rindolf joined
[14:33] *** fhelmberger left
[14:34] *** prevost left
[14:36] <GlitchMr> ($by.?count // 2) < 2

[14:36] <GlitchMr> What does .? syntax mean?

[14:36] <TimToady> lizmat: actually, we should pessimize the deprecated function, not be trying to optimize it; maybe throw in a sleep 1 into the function we're deprecating :)

[14:36] <GlitchMr> $by is subroutine.

[14:36] <timotimo> if the call doesn't succeed (no method found or something) return Nil instead

[14:37] <timotimo> r: say "foo".?heeeyooooo()

[14:37] <camelia> rakudo 155487: OUTPUT«Nil␤»

[14:37] <timotimo> r: say "foo".heeeyooooo()

[14:37] <camelia> rakudo 155487: OUTPUT«No such method 'heeeyooooo' for invocant of type 'Str'␤  in block  at /tmp/4AOZFBYVix:1␤␤»

[14:37] <GlitchMr> oh,ok

[14:37] <GlitchMr> So it's allowed to not exist.

[14:37] <timotimo> probably also turns exceptions into nil

[14:37] <PerlJam> GlitchMr: aye, it doesn't die when the method doesn't exist 

[14:37] <timotimo> r: class A { method test() { die "oh noes!" } }; say A.test()

[14:37] <camelia> rakudo 155487: OUTPUT«oh noes!␤  in method test at /tmp/PMT_nyFXyS:1␤  in block  at /tmp/PMT_nyFXyS:1␤␤»

[14:38] <timotimo> r: class A { method test() { die "oh noes!" } }; say A.?test()

[14:38] <camelia> rakudo 155487: OUTPUT«oh noes!␤  in method test at /tmp/x5_PScbt8O:1␤  in block  at /tmp/x5_PScbt8O:1␤␤»

[14:38] <timotimo> ah. nope.

[14:38] *** daxim_ left
[14:38] <jnthn> No, it's just about if a method with the name exists

[14:38] <FROGGS> I guess it is like: A.can('test') ?? A.test() !! Nil

[14:38] *** daxim_ joined
[14:39] <jnthn> Yes, but a tad more efficient. :)

[14:39] <FROGGS> sure

[14:39] <lizmat> TimToady: first make sure the spectest is not calling any deprecated functions, then I'll add the sleep 1 :-)

[14:39] <TimToady> r: try "foo".heeeyoooo()

[14:39] <camelia> rakudo 155487: ( no output )

[14:40] <lizmat> $ perl6 -e 'my %h; say %h.exists("a")'

[14:40] <lizmat> Method 'EnumMap.exists' has been deprecated, please use the :exists adverb instead  in block  at -e:1

[14:40] <lizmat> instead of mentioning exists_key

[14:41] *** cognominal joined
[14:41] <dalek> rakudo/nom: 384a0fa | (Elizabeth Mattijsen)++ | src/core/ (8 files):

[14:41] <dalek> rakudo/nom: Mention the :exists adverb, instead of 'exists_key'

[14:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/384a0fa76b

[14:42] *** thou joined
[14:44] <TimToady> I'm sure the user felt they were calling Hash.exists, not EnumMap.exists :)

[14:45] <TimToady> so maybe the message should look at the actual type of the invocant, not the static type

[14:45] <TimToady> or maybe it should put both if they differ

[14:46] <lizmat> will fix after cycling&

[14:46] <dalek> nqp: 8bcdb14 | Mouq++ | src/QRegex/P6Regex/ (2 files):

[14:46] <dalek> nqp: Fix empty range error in ** quantifier

[14:46] <dalek> nqp: review: https://github.com/perl6/nqp/commit/8bcdb14e40

[14:52] *** jnap1 joined
[14:54] *** jnap left
[15:09] *** jnap1 left
[15:10] *** sqirrel joined
[15:12] *** jnap joined
[15:12] <moritz> FROGGS: I'm not sure I'll make it to GPW2014, due to the dates

[15:13] <FROGGS> moritz: some day we will make it to the same conference ;o)

[15:13] <moritz> FROGGS: or we just visit each other :-)

[15:13] <moritz> FROGGS: where are you based?

[15:14] <FROGGS> moritz: near Berlin

[15:15] <FROGGS> .tell BenGoldberg This issue might need to go to RT (via [email@hidden.address] https://github.com/rakudo/star/issues/31

[15:15] <yoleaux> FROGGS: I'll pass your message to BenGoldberg.

[15:16] <FROGGS> brb

[15:16] *** FROGGS left
[15:17] *** FROGGS joined
[15:17] <FROGGS> btw: http://froggs.de/perl6/rakudo-star-2013.09-RC1.msi

[15:17] <FROGGS> spread the world! o/

[15:17] *** FROGGS left
[15:17] <moritz> should I upload that to rakudo.org?

[15:20] *** rindolf left
[15:21] *** kaare_ joined
[15:23] *** krokite joined
[15:24] *** brrt left
[15:32] *** zakharyas left
[15:34] *** benabik joined
[15:41] *** raiph left
[15:47] *** kivutar joined
[15:50] *** sisar joined
[15:52] <sisar> so I deleted my rakudo directory, started with a fresh clone, but I'm still unable to build nqp: http://sprunge.us/AdSb . Any pointers as to what may be wonrg ? I'm using Cygwin (32-bit) on Windows 7 (64-bit).

[15:52] <yoleaux> 12:32Z <[Coke]> sisar: - hurm, maybe I was looking at the wrong line on the initial paste there. what version of rakudo are you using? what platform? have you tried removing the existing nqp directory and trying again?

[15:54] *** GibbaTheHutt left
[15:55] *** xenoterracide_ left
[15:55] <sisar> I'm behind a HTTP proxy, maybe that is the problem ? However, I've set git to use the proxy, and it works. git was able to fetch the rakudo repo over https, and was able to fetch the parrot repo too.

[15:57] <sisar> I also used the command "git config --system url."https://".insteadOf git://" beacuse the git:// protocol is unable to go through my institute's proxy.

[15:58] <benabik> It doesn't seem to be related to network issues.

[15:59] <benabik> It's complaining that /home/siddhant/rakudo/nqp/install/ doesn't exist.

[16:00] *** sqirrel left
[16:00] <benabik> But parrot seems to have installed itself into /home/siddhant/rakudo/install/, so I don't know why NQP is trying a different directory.  I'm guessing a --prefix when missing somewhere?

[16:01] *** kivutar left
[16:01] <sisar> I'm sorry, I don't understand. How would I fix that ?

[16:03] <benabik> sisar: I think it's a bug in the Configure.pl script.  NQP is trying to install itself somewhere different than parrot.  Hopefully someone who knows the scripts a bit better can try to fix it.  (I don't have time right now.)

[16:03] <sisar> benabik: Ah. Ok. Thank you :)

[16:07] *** krokite left
[16:12] <moritz> or maybe interference with a previously installed nqp or parrot

[16:17] <sisar> moritz: where do I look for that ? There's nothing in /bin

[16:22] <moritz> sisar: do a   find ~ -name parrot -type f   for example

[16:22] <moritz> sisar: also,   which parrot   

[16:22] *** dmol left
[16:26] * TimToady supposes we'll have to define a FatNum to pick the largest supported floater, since num80 and num128 are arguably overspecific to be portable

[16:29] <sisar> moritz: find ~ -name parrot -type f has no output, and output of which parrot is "/home/siddhant/rakudo/install/bin/parrot"

[16:30] <[Coke]> sisar: please try:

[16:30] <[Coke]> perl Configure.pl --gen-parrot --gen-nqp

[16:30] *** sqirrel joined
[16:30] * sisar gives it a try

[16:31] <[Coke]> (you might also need to rm -rf nqp install parrot if you have a botched install in progress)

[16:36] *** xenoterracide_ joined
[16:40] *** bluescreen10 joined
[16:53] <[Coke]> diakopter: can you think of anything happening on host06 that would cause the rakudo.jvm run (using t/spec/test_summary.pl) to abort every test after N tests are run?

[16:53] <[Coke]> the evalserver is still running, but everything aborts. no diagnostic output anywhere.

[16:53] <diakopter> no.. 

[16:54] <[Coke]> hokay.

[16:54] <diakopter> :(

[16:54] <[Coke]> been going on for about a week. hopefully will be able to dig into it this weekend.

[16:54] *** sisar left
[16:55] <diakopter> [Coke]: maybe try on host07?

[16:55] <[Coke]> eh. I can try on my laptop, too.

[16:56] <[Coke]> ->

[16:59] *** FROGGS joined
[16:59] <FROGGS> o/

[17:01] <FROGGS> moritz: would be nice if someone could test it before uploading it...

[17:18] *** btyler left
[17:20] *** ajr_ left
[17:21] *** ajr joined
[17:22] *** ajr is now known as Guest85219

[17:22] *** Guest85219 is now known as ajr_

[17:25] <jnthn> FROGGS: It just needs installing?

[17:25] <jnthn> FROGGS: I can download and run the MSI here if you like...

[17:28] *** ajr_ left
[17:29] *** popl joined
[17:30] <jnthn> FROGGS: Hm, it comaplains "Could not load oplib `nqp_ops'" here

[17:31] <dalek> perl6-Acme-Addslashes: b1e401e | (Konrad Borowski)++ | lib/Acme/Addslashes.pm:

[17:31] <dalek> perl6-Acme-Addslashes: Use `s///` notation instead of `subst`

[17:31] <dalek> perl6-Acme-Addslashes: review: https://github.com/GlitchMr/perl6-Acme-Addslashes/commit/b1e401e8c3

[17:31] <jnthn> FROGGS: And moving my existing installed one out the way didn't help...

[17:32] <FROGGS> jnthn: :/

[17:33] <FROGGS> jnthn: I dunno, I did nothing special

[17:35] <jnthn> FROGGS: I see the issue, I think

[17:35] <jnthn> libdir => 'C:/rakudo-star-2013.09/install/lib'

[17:35] <jnthn> If you run parrot_config.exe that is in there

[17:35] <jnthn> But it installs it to c:\rakudo\bin\lib

[17:35] <jnthn> oops

[17:36] <jnthn> c:\rakudo\lib

[17:36] <FROGGS> ohh

[17:36] <FROGGS> hmmm

[17:36] <jnthn> I think you may have to build it in the "right palce"?

[17:36] <jnthn> *palace

[17:36] <jnthn> *place

[17:36] <FROGGS> yeah, looks like

[17:36] <jnthn> grr, dinner, bbi20 :)

[17:36] <FROGGS> k, time for RC2 :o)

[17:36] <popl> http://smolder.parrot.org/app/projects/report_details/43699 # \o/

[17:37] <FROGGS> ohh, we have smolder reports again

[17:37] <popl> I just submitted that one.

[17:37] <FROGGS> popl: awesome!

[17:38] <popl> It took a long time to test.

[17:38] <FROGGS> popl++

[17:38] <popl> I was more than halfway finished with the testing yesterday but then the adapter plug fell out of my laptop and my machine lost power so I had to start over.

[17:39] <FROGGS> ohh, hehe

[17:45] <popl> some of the tests that failed have TODOs so I guess failure is not unexpected there.

[17:49] *** rindolf joined
[17:50] *** sqirrel left
[17:56] *** btyler joined
[17:57] *** bbkr joined
[17:57] *** raiph joined
[18:00] *** daxim_ left
[18:10] <timotimo> is that the same thing as the results page that is hosted on some ip-only web address?

[18:12] *** SamuraiJack_ joined
[18:12] *** dmol joined
[18:12] <TimToady> r/j seems to be testing out fine on my supercomputer at home; the ulimits are the same as host06, same arch, only difference is host06 is running 3.5.0-17-generic, while mine is running 3.8.0-19-generic

[18:13] <TimToady> [Coke]: ^^

[18:15] *** rindolf left
[18:22] *** logie joined
[18:23] *** darutoko left
[18:25] <dalek> rakudo-js: bed6635 | (Pawel Murias)++ | runtime/.gitignore:

[18:25] <dalek> rakudo-js: Add .gitignore for the generated unicode char name to codepoint database.

[18:25] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/bed663552e

[18:25] <dalek> rakudo-js: aa0b73a | (Pawel Murias)++ | run (7 files):

[18:25] <dalek> rakudo-js: Refactor ops that depend on node modules to seperate files.

[18:25] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/aa0b73a15d

[18:25] <dalek> rakudo-js: 6d60cca | (Pawel Murias)++ | / (46 files):

[18:25] <dalek> rakudo-js: Refactor the runtime in nqp-runtime-core (the platform indepdent part) and nqp-runtime-node (the node.js specific part).

[18:25] <dalek> rakudo-js: 

[18:25] <dalek> rakudo-js: The nqp-runtime loads the right runtime (currently always nqp-runtime-core).

[18:25] <dalek> rakudo-js: Fails some bugs due to a newly surfaced bug.

[18:25] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/6d60ccab83

[18:26] <jnthn> .oO( Isn't faling bugs good? :) )

[18:26] *** odoacre left
[18:26] <diakopter> lolz

[18:26] <pmurias> heh

[18:26] <pmurias> * fails some tests

[18:26] <GlitchMr> perl6: say sort <file1 file2 file10 file20>

[18:26] <camelia> rakudo 384a0f, niecza v24-95-ga6d4c5f: OUTPUT«file1 file10 file2 file20␤»

[18:27] <GlitchMr> It makes sense, but well, if you want sort by ASCII.

[18:27] *** btyler left
[18:29] *** logie left
[18:29] *** odoacre joined
[18:41] <FROGGS> C:\MoarVM>perl6 -e "say 42"

[18:41] <FROGGS> PARROT VM: Could not load bytecode

[18:41] <FROGGS> Could not load oplib `nqp_ops'

[18:41] <FROGGS> jnthn: you do you check which path it is looking for?

[18:42] <jnthn> FROGGS: parse fail

[18:43] <jnthn> ...oh, "how do you..."?

[18:43] <jnthn> Run parrot_config --dump

[18:43] <FROGGS> k

[18:43] <jnthn> Installed in the bin folder

[18:43] <diakopter> bring newspapers

[18:44] <FROGGS> hmmm, C:/rakudo/... everywhere

[18:45] *** odoacre left
[18:47] <jnthn> FROGGS: Does running it from within the install dir work?

[18:47] <nwc10> FROGGS++ # SCHMETTERLING KAMPFPANZERWAGEN (even if it was a bit cheeky)

[18:48] <FROGGS> there is no install dir, but it doesnt work from within C:\rakudo\bin

[18:48] <nwc10> unicode-- # no butterfly icon (yet)

[18:49] <FROGGS> *g*

[18:49] <TimToady> I guess they figure the CJK character is good enough

[18:49] <FROGGS> jnthn: nqp_ops.dll is in C:\rakudo\lib\parrot\5.5.0\dynext though

[18:49] <TimToady> well, at least they've got a bactrian camel

[18:50] <nwc10> I don't think that Ronja (sp?) cares for camels

[18:50] <FROGGS> jnthn: okay, I think I move these to the bin folder now

[18:50] <TimToady> so that gives 'em, what, another ten fifteen years or so to come up with a butterfly

[18:51] <FROGGS> damn

[18:51] <FROGGS> C:\rakudo>perl6 -e "say 42"

[18:51] <FROGGS> "load_bytecode" couldn't find file 'ModuleLoader.pbc'

[18:53] <TimToady> some of the cuneiforms look kinda like bugs

[18:53] <TimToady> 𒋧

[18:54] *** dmol left
[18:54] <nwc10> TimToady: on some platforms C's long double is only 64 bytes (even if the CPU can do (or emulate) something bigger)

[18:54] <nwc10> at least some ARM ABIs, and PPC OS X

[18:54] <lue> nwc10: surely you mean 64 bits?

[18:54] <nwc10> not that PPC OS X will really be around when Christmas arrives

[18:54] <nwc10> lue: yes, I do

[18:54] <nwc10> naughty fingers

[18:54] <TimToady> though mostly they look like fish

[18:57] *** iSlug joined
[18:58] *** odoacre joined
[19:01] <jnthn> FROGGS: Oddness

[19:01] <jnthn> What's the parrot_config --dump look like for you now?

[19:02] <FROGGS> jnthn: what I said, all paths start with C:\rakudo\

[19:02] <jnthn> OK, then it..."should work" now :)

[19:03] <FROGGS> yeah, but it does not

[19:03] <jnthn> :S

[19:03] <FROGGS> it is like if the parrot lib dir is wrong

[19:03] <FROGGS> let me check that

[19:03] *** stevan_ left
[19:06] <TimToady> oh, hey, today is Google's birthday :)

[19:06] <FROGGS> hmmm

[19:06] <FROGGS> jnthn: prefix => 'C:/rakudo/install', but there is not install dir

[19:06] <PerlJam> when's Perl 6's birthday?  Is it still in gestation, or does the cup throwing incident count as "birth" ?

[19:08] <TimToady> hah, the mouseover

[19:09] <FROGGS> jnthn: there is an install dir when I create the msi, but after installing it it has no install dir

[19:09] <FROGGS> clearly I am doing something wrong

[19:09] <jnthn> FROGGS: yeah, what --prefix are you passing when building?

[19:09] <jnthn> Just C:\rakudo ?

[19:09] <FROGGS> none

[19:09] <FROGGS> just perl Configure.pl --gen-parrot

[19:09] <jnthn> Oh, you checked out into c:\rakudo and then build there?

[19:09] <jnthn> Yeah...that won't work :)

[19:10] <FROGGS> meh

[19:10] <FROGGS> I'd like to ha a guide

[19:10] <FROGGS> have*

[19:10] <jnthn> Get a checkout somewhere, and then

[19:10] <jnthn> perl Configure.pl --prefix=C:\rakudo --gen-parrot # or similar

[19:11] <jnthn> And then it will use C:\rakudo as the install directory, not create a c:\rakudo\install 

[19:11] <FROGGS> hmmm

[19:11] <jnthn> And yes, document what this ;-)

[19:11] <iSlug> What are you coding actually?

[19:11] <iSlug> I've no idea this night :/

[19:11] <FROGGS> and the `nmake msi` target will find it and bundle it correctly?

[19:11] <jnthn> FROGGS: Believe so

[19:12] * lizmat back from cycling but too tired to do any reliable programming tonight

[19:12] <jnthn> looks like from makefile

[19:12] <lizmat> going to do some r&r and then sleep&

[19:13] <jnthn> .oO( rum and rakudo )

[19:22] * masak .oO( ribosomes and resistors )

[19:22] *** thundergnat joined
[19:22] *** grondilu joined
[19:24] *** telex left
[19:25] <thundergnat> Good morning (UGT) #perl6 

[19:25] *** raiph left
[19:26] *** telex joined
[19:26] <thundergnat> I updated my rakudo install and ran into a bunch of problems with NQP and Rakudo installing in wrong directories.

[19:27] <FROGGS> thundergnat: on what os are you on?

[19:27] *** stevan_ joined
[19:28] <thundergnat> FROGGS: Linux, ubuntu 12,04

[19:28] <thundergnat> Seems that if you have a DESTDIR set in your environment and DON"T specify a destination directory, it installs in odd ways.

[19:29] <thundergnat> Or, at least, that's what it seems like to me.

[19:30] <FROGGS> hmmm, so you have destdir set to an existing path, but dont specify --prefix?

[19:30] <thundergnat> Yes. At least that's what I did first.

[19:30] <FROGGS> k

[19:31] *** iSlug left
[19:32] <thundergnat> DESTDIR is set for panda, but the Configure script grabs it too for SOME of the parrot / nqp /  rakudo build... but not all of it.

[19:33] *** SamuraiJack_ left
[19:37] <notjack> quit

[19:37] *** notjack left
[19:38] <jnthn> .u 2205

[19:38] <yoleaux> U+2205 EMPTY SET [Sm] (∅)

[19:41] <thundergnat> To be more specific, with a env DESTDIR set , --gen-parrot and no --prefix, parrot builds and installs in {cwd}/install/; then nqp builds and installs in {DESTDIR}/install/; then the build process fails because it can't find NQP. (On my machine)

[19:42] <thundergnat> Like I said, I was able to work around it.. but it was certainly LTA.

[19:47] <masak> std: ∅ ** ∅

[19:47] <camelia> std 7c17586: OUTPUT«[31m===[0mSORRY![31m===[0m␤Bogus statement at /tmp/QriLe68jrf line 1:␤------> [32m<BOL>[33m⏏[31m∅ ** ∅[0m␤Parse failed␤FAILED 00:00 42m␤»

[19:47] <masak> bah. not even STD knows about ∅ :)

[19:49] <masak> std: set(<b>) ⊂ set(<a b c>)

[19:49] <camelia> std 7c17586: OUTPUT«[31m===[0mSORRY![31m===[0m␤Confused at /tmp/uQKhk5oMgH line 1:␤------> [32mset(<b>) [33m⏏[31m⊂ set(<a b c>)[0m␤    expecting any of:␤       feed_separator␤ infix or meta-infix␤    infixed function␤       statement modifier loop␤Parse failed␤FAILED 00:00 43m␤…»

[19:50] <masak> things are not in sync here.

[19:50] <flussence> std: set(<b>) (<) set(<a b c>)

[19:50] <camelia> std 7c17586: OUTPUT«[31m===[0mSORRY![31m===[0m␤Confused at /tmp/z2tQKTHyEf line 1:␤------> [32mset(<b>) [33m⏏[31m(<) set(<a b c>)[0m␤    expecting any of:␤     feed_separator␤ infix or meta-infix␤    infixed function␤       statement modifier loop␤Parse failed␤FAILED 00:00 44m␤…»

[19:50] <flussence> ENOSETOPS

[19:52] <TimToady> weird, it's in CORE.setting

[19:53] <TimToady> ah well, STD was always a massive kludge, and has probably seen most of its usefulness already

[19:54] <masak> STD++

[19:54] <masak> best kludge ever.

[19:55] <masak> I still remember the feeling back when Rakudo and Pugs were so underpowered, grammar-wise, that what STD did seemed like pure magic.

[19:55] <masak> we've caught up since then. gradually.

[19:56] <TimToady> well, rakudo still hasn't quite caught up in Q sublanguages, but yeah, it's a lot closer than it was

[19:56] <GlitchMr> Isn't STD needed to modify Perl 6 grammar?

[19:57] <TimToady> we're talking about the prototype standard grammar that runs by a very ad hoc translation to Perl 5

[19:57] <TimToady> though not as ad hoc as it used to be

[19:57] <pmichaud> It's Google's birthday also?

[19:57] <TimToady> but P5 really doesn't have the chops to do STD correctly

[19:58] *** SmokeMachine joined
[19:58] <TimToady> also STD is written largely in terms of hashes-as-objects, and we'll be wanting to move away from that mindset

[19:58] * pmichaud knocks 126 candies out of the Google pinata.

[19:58] <TimToady> pmichaud: apparently the birthday of their first search page, anyway

[19:59] * lue wonders if std will run on rakudo or if that's still a ways away.

[19:59] <GlitchMr> I guess it won't.

[19:59] <GlitchMr> Even Niecza needs modified version of STD.

[19:59] * TimToady can't get to the piñata because google is overlaying it with more personalized greetings :)

[19:59] <pmichaud> :)

[20:00] <GlitchMr> ===SORRY!===

[20:00] <GlitchMr> Could not find DEBUG in any of: /usr/lib/parrot/5.6.0/languages/perl6/site/lib, /usr/lib/parrot/5.6.0/languages/perl6/vendor/lib, /usr/lib/parrot/5.6.0/languages/perl6/lib, /home/glitchmr/.perl6/2013.08/lib

[20:00] <GlitchMr> it won't.

[20:00] * TimToady is scared to ask google's new search engine whether it knows my SSN

[20:01] * pmichaud is not scared.

[20:01] <GlitchMr> STD.pm depends on Perl 5 code.

[20:01] <GlitchMr> I assume .pmc is Perl 5 code.

[20:01] <lue> Really? I could swear it was written in P6

[20:01] <FROGGS> hi pmichaud 

[20:01] <TimToady> .pm6 is written in Perl 6

[20:01] <popl> scared of a hummingbird? ;P

[20:02] *** REPLeffect left
[20:02] <TimToady> here in Mountain View, Google is the 800-lb hummingbird...

[20:02] <GlitchMr> lue, yes, but it uses modules that are written in Perl 5.

[20:02] <TimToady> the .pmc is translated from the .pm6

[20:02] <popl> that is kind of scary

[20:03] <TimToady> by viv, which is a STD-based parser :)

[20:03] <pmichaud> Google doesn't give me a scary answer for "what is my ssn?"

[20:03] <TimToady> just because it's bootstrapped that way doesn't mean it isn't a kludge

[20:03] <TimToady> it does things like substitute local variables for dynamic variables

[20:03] <pmichaud> It's a slightly more scary answer for "What is Larry Wall's social security number?"

[20:04] <TimToady> what does it say?

[20:04] <pmichaud> and after typing "What is Larry Wall", Google autocompletes with " doing now?"  :-P

[20:04] <TimToady> typing

[20:04] <TimToady> strongly

[20:04] <pmichaud> TimToady: it pulls up some obituary records.  :-/

[20:04] <TimToady> oops, my secret is out

[20:04] <lue> O.o

[20:04] <popl> TimToady is undead.

[20:05] <pmichaud> TimToady: well, not surprising I guess, since TheDamian claims you're immortal.

[20:05] * TimToady was hoping the new gray hairs would fool everone

[20:06] <jnthn> TimToady: Where is Q in Rakudo not quite caught up, ooc?

[20:06] * jnthn did a bunch of aligning with STD there a while back... :)

[20:06] <jnthn> o/ pmichaud 

[20:06] <TimToady> oh, does it work by mixins now?

[20:07] <pmichaud> jnthn: somewhere in the Continuum, I suspect.  

[20:07] <jnthn> TimToady: yes, as of Nov last year, when I also was putting in heredocs, etc. :)

[20:07] <pmichaud> (sorry, somewhat obscure)

[20:07] <jnthn> pmichaud: Too obscure for me ;)

[20:07] <pmichaud> https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&ved=0CCwQFjAA&url=http%3A%2F%2Fen.wikipedia.org%2Fwiki%2FQ_Continuum&ei=VuVFUq-COMmL2AXHxICYCw&usg=AFQjCNE76a8Tm1zXVx8niS84xJnLNpLqCw&sig2=lcZfJSWo7hETbmCg7eowFQ

[20:07] <pmichaud> arrgh!

[20:07] <pmichaud> http://en.wikipedia.org/wiki/Q_Continuum

[20:07] <pmichaud> better

[20:08] <benabik> Arg, yeah, the google links.  :-(

[20:08] <GlitchMr> Google links will kill us all.

[20:08] <FROGGS> jnthn: this should work: http://froggs.de/perl6/rakudo-star-2013.09-RC2.msi

[20:09] <GlitchMr> And after they will kill, they will use die to throw an exception.

[20:10] <FROGGS> what? one has to explain what the Q Continuum is??

[20:10] <jnthn> pmichaud: Ah. :)

[20:10] <FROGGS> well, at least tadzik++ knows

[20:10] <jnthn> FROGGS: trying

[20:10] <FROGGS> jnthn: thank you

[20:10] <jnthn> aww, my frist crack at termdef explodes...

[20:10] <jnthn> ...maybe 'cus I typed something really great...

[20:11] <FROGGS> jnthn: I even made .bat files for perl6-debug, p6doc and panda

[20:11] <jnthn> perl6-debug is already a .exe, no? :)

[20:11] <FROGGS> hmmm, yeah

[20:11] <FROGGS> then not for perl6-debug :P

[20:11] <FROGGS> 'explodes' is a term that is not known in the real world in that context btw

[20:12] *** SmokeMachine left
[20:12] <FROGGS> my colleagues are always shocked when I use it

[20:12] <FROGGS> or at least amused

[20:12] <tadzik> tadzik knows!

[20:12] <tadzik> knows what

[20:13] <FROGGS> hehe, my man!

[20:13] <tadzik> ach, Q :)

[20:13] <FROGGS> yeah, Q-who, deja-Q, and all these things

[20:14] *** silug_ left
[20:14] *** REPLeffect joined
[20:14] <tadzik> I liked the one about Picard re-living his live _very_ much

[20:14] <tadzik> possibly the second best TNG imho, after The Measure of a Man

[20:14] <FROGGS> nah, the inner light is the best one

[20:15] <FROGGS> but I think you mean the one where he gets a heart-surgery?

[20:22] <lue> .oO(I imagine it also frightens normal people when you talk about killing programs.)

[20:22] <tadzik> yes, that one

[20:22] <tadzik> inner light, hmm

[20:22] <tadzik> oh, that's very good to

[20:22] <tadzik> too

[20:23] <tadzik> nothing beats The Measure of a Man imho

[20:23] <tadzik> I cried watching that one

[20:23] <tadzik> a little bit, but still :)

[20:24] <arnsholt> Speaking of weird usages, I used hysterical raisins at work one time. Only one colleague caught it =)

[20:26] <thundergnat> Sigh. Is there a reason why .subst on an undefined value is now a fatal error? It didn't used to be. 

[20:26] <thundergnat> r: my @a = <a1 b2>, Any, <d4 e5>; .subst(/\d/,'',:g).say for @a;

[20:27] <camelia> rakudo 384a0f: OUTPUT«a␤b␤No such method 'subst' for invocant of type 'Any'␤  in block  at /tmp/wENJTYbBID:1␤␤»

[20:27] <FROGGS> tadzik: really? hmmm, seems like what this episode is to you, is the inner light to me

[20:27] <masak> arnsholt: "hysteriska russin"? :)

[20:28] *** silug_ joined
[20:29] *** FROGGS left
[20:29] *** benabik left
[20:29] *** FROGGS joined
[20:29] <GlitchMr> Perl 6 debug is annoying to use with white terminal background.

[20:29] <GlitchMr> Seriously, yellow?

[20:29] <jnthn> You were menat to use it with a black one :P

[20:30] <jnthn> Seriously, patches welcome to support custom color schems and config. :) Or wait for me to eventually get to it. :)

[20:30] <FROGGS> r: my @a = <a1 b2>, Any, <d4 e5>; .Str.subst(/\d/,'',:g).say for @a # not fatal

[20:30] <camelia> rakudo 384a0f: OUTPUT«a␤b␤use of uninitialized value of type Any in string context  in block  at /tmp/Q3zehi4oL5:1␤␤␤d␤e␤»

[20:30] <FROGGS> jnthn: and we need to disable colors when these are not supported

[20:31] <TimToady> there are people who program with a white background?!?

[20:31] <jnthn> FROGGS: When's that happen, ooc? :)

[20:31] <FROGGS> dunno how to check for it though

[20:31] <FROGGS> jnthn: standard cmd.exe prints the escape codes, which makes the debugger useless

[20:32] <FROGGS> TimToady: there is always more that one way to ... :o)

[20:32] <arnsholt> masak: Nah, in English. Some of my colleagues don't speak Norwegian

[20:32] <jnthn> FROGGS: Oh...we need a Term::WindowsColor that knows how to do what cmd.exe wnats :)

[20:33] *** silug_ left
[20:33] <arnsholt> Also, the pun doesn't really work outside of English =)

[20:33] <jnthn> FROGGS: And then a Term::AnyColor that frontends the two :)

[20:33] <FROGGS> O.o

[20:33] *** silug_ joined
[20:33] <FROGGS> ++jnthn :P

[20:35] <masak> arnsholt: in Esperanto it becomes "por histeraj koaloj" -- the word for "reason" being "kialo".

[20:35] <tadzik> and HTML colours

[20:35] <masak> hm, pro*

[20:37] <FROGGS> esperanto?? are you serious?

[20:38] <lue> masak's very fluent, from what I've seen (and reminded me I should get back to it sometime).

[20:39] *** xinming left
[20:40] * grondilu paroletas esperanton

[20:40] <grondilu> (longe vivu la verda stelo de esperanto :) )

[20:41] *** xinming joined
[20:43] *** REPLeffect left
[20:44] *** ajr joined
[20:45] *** ajr is now known as Guest91954

[20:45] <masak> FROGGS: I'm serious, to the extent I'm ever serious.

[20:45] <masak> FROGGS: I learned it back in 2000-ish, and it's one of my three fluent languages.

[20:46] <lue> .oO(What are the other two, you english-speaking Swede?)

[20:47] <masak> :)

[20:47] * masak .oO( 我不知道...荷兰语？ ) :P

[20:48] <masak> hm, that one should probably end in a 吗...

[20:48] *** REPLeffect joined
[20:49] <jnthn> .oO( There's no question about it... )

[20:50] <masak> jnthn: unless your mom's horse does weed. :P

[20:53] *** Guest91954 is now known as ajr_

[20:54] *** REPLeffect left
[20:55] *** Chat0979 joined
[20:55] <Chat0979> hi

[20:55] *** Chat0979 left
[20:55] <jnthn> bye

[20:55] <dalek> rakudo/nom: b1d6759 | jnthn++ | src/Perl6/ (2 files):

[20:55] <dalek> rakudo/nom: Start getting defterm handling in place.

[20:55] <dalek> rakudo/nom: 

[20:55] <dalek> rakudo/nom: This enables things like:

[20:55] <dalek> rakudo/nom: 

[20:55] <dalek> rakudo/nom:     constant term:<inator> = "I'll be back";

[20:55] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b1d6759b8a

[20:55] <popl> Does that happen often?

[20:55] <masak> popl: jnthn commits? yes. :)

[20:56] <jnthn> My mom's horse doing weed? All the time, man...

[20:56] <popl> I meant drive-by greetings

[20:56] <jnthn> oh :)

[20:56] <lue> what exactly *is* defterm, anyway? is it being able to define these:<things> ?

[20:56] <jnthn> yeah

[20:56] <popl> whenever someone ends a sentence with "doing weed" or "on weed" it makes me think of Jon Stewart's character from the film Half-Baked.

[20:57] <lue> (as something other than subs and similar that is)

[20:57] *** skids left
[20:58] <jnthn> TimToady: Should things like this work:

[20:58] <jnthn> sub foo(\infix:<whatevs>) { say 1 whatevs 2 }; foo(*+*)

[20:58] <jnthn> ?

[20:58] *** REPLeffect joined
[20:58] <jnthn> If so, does it magic up an & on the start of the name?

[20:59] <jnthn> Or should we for now conservatively constrain it to really only let you do \term:<x>?

[21:05] *** SmokeMachine joined
[21:10] <jnthn> r: bar(); sub foo() { my $x = 42; our sub bar() { say $x; } }; foo(); bar();

[21:10] <camelia> rakudo 384a0f: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/57oiivIJUi␤Undeclared routine:␤    bar used at line 1. Did you mean '&bag'?␤␤»

[21:10] *** REPLeffect left
[21:11] <jnthn> r: GLOBAL::bar(); sub foo() { my $x = 42; our sub bar() { say $x; } }; foo(); GLOBAL::bar();

[21:11] <camelia> rakudo 384a0f: OUTPUT«Could not find symbol 'bar'␤  in method <anon> at src/gen/CORE.setting:11803␤  in any  at src/gen/Metamodel.nqp:2671␤  in any find_method_fallback at src/gen/Metamodel.nqp:2659␤  in any find_method at src/gen/Metamodel.nqp:946␤  in block  at /tmp/v1bYovewov:1␤␤…»

[21:11] <jnthn> r: sub foo() { my $x = 42; our sub bar() { say $x; } }; foo(); GLOBAL::bar();

[21:11] <camelia> rakudo 384a0f: OUTPUT«Could not find symbol 'bar'␤  in method <anon> at src/gen/CORE.setting:11803␤  in any  at src/gen/Metamodel.nqp:2671␤  in any find_method_fallback at src/gen/Metamodel.nqp:2659␤  in any find_method at src/gen/Metamodel.nqp:946␤  in block  at /tmp/fEzWIxGlya:1␤␤…»

[21:11] <jnthn> r: sub foo() { my $x = 42; our sub bar() { say $x; } }; foo(); GLOBAL::<&bar>();

[21:11] <camelia> rakudo 384a0f: OUTPUT«42␤»

[21:12] *** REPLeffect joined
[21:12] <masak> r: sub foo() { my $x = 42; our sub bar() { say $x; } }; GLOBAL::<&bar>()

[21:12] <camelia> rakudo 384a0f: OUTPUT«(Any)␤»

[21:16] *** REPLeffect left
[21:16] *** TgMts joined
[21:19] *** stevan_ left
[21:19] * masak ponders the slogan "scopes are objects, instantiated on entry"

[21:39] *** thundergnat left
[21:39] *** Mouq joined
[21:44] <masak> actually, I guess that slogan explains pretty well why scopes can be used for encapsulation (like in JavaScript).

[21:45] <Mouq> .tell moritz I've been around + check the IR Clogs, I'm just busy with school and cross country

[21:45] <yoleaux> Mouq: I'll pass your message to moritz.

[21:55] *** moritz left
[21:55] *** moritz joined
[21:55] *** _ilbot left
[21:55] *** bluescreen10 left
[21:55] *** _ilbot joined
[21:57] *** popl left
[21:57] *** prammer left
[21:58] *** Bucciarati joined
[22:00] *** mls left
[22:00] *** mls joined
[22:00] *** _ilbot left
[22:02] *** moritz left
[22:03] *** kaare_ left
[22:03] *** moritz joined
[22:07] *** denisboyun left
[22:07] *** stevan_ joined
[22:08] *** prammer joined
[22:09] *** stevan_ left
[22:09] *** stevan_ joined
[22:09] *** _ilbot joined
[22:19] *** xinming left
[22:20] *** grondilu left
[22:21] *** xinming joined
[22:23] *** sftp left
[22:23] *** pmurias left
[22:24] *** sftp joined
[22:24] *** PacoAir left
[22:29] *** TgMts left
[22:44] *** mls left
[22:44] *** mls joined
[22:46] *** benabik joined
[22:49] <TimToady> I'd say we can conservatively ignore \infix for now, since we'd probably get the wrong precedence on it anyway...

[22:49] <TimToady> jnthn: ^^

[22:51] <TimToady> in any case, we can't really change the language based on a run-time binding; that's more the province of a macro, and we haven't defined mixed-arg macros yet

[22:54] <jnthn> r: sub foo(\term:<lol>) { say lol }; foo(42)

[22:54] <camelia> rakudo b1d675: OUTPUT«===SORRY!===␤No such method 'orig' for invocant of type 'NQPMu'␤»

[22:54] <jnthn> hmmm

[22:55] <jnthn> r: constant \term:<lol> = 42; say lol

[22:55] <camelia> rakudo b1d675: OUTPUT«42␤»

[22:55] <jnthn> r: constant term:<lol> = 42; say lol

[22:55] <camelia> rakudo b1d675: OUTPUT«42␤»

[22:55] <jnthn> r: constant lol = 42; say lol

[22:55] <camelia> rakudo b1d675: OUTPUT«42␤»

[22:55] <jnthn> Well, that lot works now at least...

[22:55] <jnthn> Will have to look at the other one

[22:56] <jnthn> r: constant \term:["lol"] = 42; say lol

[22:56] <camelia> rakudo b1d675: OUTPUT«===SORRY!===␤No such method 'ast' for invocant of type 'NQPMu'␤»

[22:56] <jnthn> grrr

[22:57] <TimToady> r: constant \term:<lol> = 42; say lol + lol

[22:57] <camelia> rakudo b1d675: OUTPUT«84␤»

[22:59] <Mouq> I don't think thing:[anything()] is implemented yet in rakudo

[23:01] <jnthn> r: sub infix:["lol"]($a, $b) { "$a lol $b" }; 'omg' lol 'toaster'

[23:01] <camelia> rakudo b1d675: OUTPUT«===SORRY!===␤No such method 'ast' for invocant of type 'NQPMu'␤»

[23:01] <jnthn> I thought that one was...

[23:02] * jnthn wishes we didn't have a gazzilion forms for these things... :)

[23:07] *** benabik left
[23:07] <TimToady> n: sub infix:["lol"]($a, $b) { "$a lol $b" }; 'omg' lol 'toaster'

[23:07] <camelia> niecza v24-95-ga6d4c5f: ( no output )

[23:07] <TimToady> n: sub infix:["lol"]($a, $b) { "$a lol $b" }; say 'omg' lol 'toaster'

[23:08] <camelia> niecza v24-95-ga6d4c5f: OUTPUT«omg lol toaster␤»

[23:08] <jnthn> n: sub getlol() { "lol" }; sub infix:[getlol]($a, $b) { "$a lol $b" }; 'omg' lol 'toaster' # curious

[23:08] <camelia> niecza v24-95-ga6d4c5f: ( no output )

[23:08] <jnthn> n: sub getlol() { "lol" }; sub infix:[getlol]($a, $b) { "$a lol $b" }; say 'omg' lol 'toaster' # curious

[23:08] <camelia> niecza v24-95-ga6d4c5f: OUTPUT«omg lol toaster␤»

[23:08] <TimToady> a gazillion forms is what we invented syntax for to let us treat them as a few semantic constructs :)

[23:09] <jnthn> .oO( just BEGIN it... )

[23:10] <TimToady> yeah, those have to resolve at compile time

[23:10] <TimToady> one of those little semantic constructs I mentioned :P

[23:12] *** PacoAir joined
[23:14] <TimToady> but a lot of things are obvious to sorear++ that are not obvious to the rest of us :)

[23:18] * Mouq sent in a CLA but hasn't heard anything about it… he just makes a pull request

[23:19] *** Rotwang left
[23:20] *** BenGoldberg joined
[23:34] <Mouq> …On the topic of my PR, STD.pm6/grammar Regex both has a token that disallows unspace, and a backslash:<unspace> that matches it.

[23:46] <TimToady> the latter is likely a fossil

[23:47] <jnthn> 'night, #perl6

[23:47] <TimToady> sleep pretty

[23:47] <colomon> \o

[23:54] *** ilogger2 joined
[23:54] *** ChanServ sets mode: +v ilogger2

