[00:01] <jnthn> 'night, #perl6

[00:02] <BenGoldberg> n: say 'alive'

[00:02] <camelia> niecza v24-108-g17d73e4: OUTPUT«(timeout)[auto-compiling setting]␤»

[00:06] *** jeffreykegler left
[00:06] *** btyler left
[00:06] *** lizmat joined
[00:07] *** woolfy joined
[00:08] *** beastd left
[00:13] *** tgt left
[00:24] *** dayangkun left
[00:25] *** dmol left
[00:37] <dalek> mu: 4983aa3 | (Elizabeth Mattijsen)++ | misc/perl6advent-2013/schedule:

[00:37] <dalek> mu: sync titles of post to reality

[00:37] <dalek> mu: review: https://github.com/perl6/mu/commit/4983aa3a1a

[00:37] <lizmat> sadly, no one for tomorrow just yet

[00:41] *** ajr_ left
[00:52] <dalek> roast: 476ad78 | (Elizabeth Mattijsen)++ | S17-concurrency/ (2 files):

[00:52] <dalek> roast: Some additional tests and variance in expressivity

[00:52] <dalek> roast: review: https://github.com/perl6/roast/commit/476ad78980

[00:53] <lizmat> some leftovers while working on short p6 presentation at last Amsterdam.pm meeting

[00:55] *** stevan_ joined
[00:57] *** stevan_ left
[00:57] *** stevan_ joined
[01:00] *** rurban1 left
[01:02] *** dayangkun joined
[01:10] *** woolfy left
[01:17] <lizmat> asleep in Paris&

[01:25] *** rurban1 joined
[01:33] <dalek> perl6-roast-data: 4f6d4ac | coke++ | / (4 files):

[01:33] <dalek> perl6-roast-data: today (automated commit)

[01:33] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/4f6d4ac653

[01:33] *** zakharyas left
[01:59] <japhb__> OK, now there's an error I've never seen before:

[01:59] <japhb__> $ git describe

[01:59] <japhb__> warning: tag 'Malmö' is really 'Malmo􏿽xCC􏿽x88' here

[01:59] <japhb__> Malmö-22-g262e600

[01:59] * japhb__ wonders how that even happens

[02:00] * geekosaur sees differences... normalized utf8

[02:00] <japhb> In the right font, those do look different, BTW -- the dots are higher on the right in my terminal.

[02:01] <japhb> The thing that mystifies me is why the tag is being treated as anything but a bag of bytes.

[02:01] <geekosaur> they're offset slightly here on the right, making me think that one uses a combining character instead of the unified one

[02:01] <japhb__> Most likely, yeah.

[02:02] <japhb__> Still wondering how that happened in the first place ....

[02:02] <japhb> I know, let's just insist on ASCII-only git tags!  >.<

[02:05] *** xinming left
[02:06] <japhb__> Has anyone seen this error?

[02:06] <japhb__> ./parrot -o runtime/parrot/include/parrotlib.pbc runtime/parrot/library/parrotlib.pir

[02:06] <japhb__> error:imcc:No such file or directory 'interpinfo.pasm' in file 'runtime/parrot/library/parrotlib.pir' line 194

[02:06] *** xinming joined
[02:06] <japhb__> I'm getting it in only one of my build trees.

[02:08] <japhb__> As far as I can tell, at the FS level there are two differences: 1) the broken one is on a network filesystem, while the working one is local, and 2) the broken one has the `git describe` output in its path, while the working one has an ASCII-only path.

[02:09] <japhb__> The failure is at a consistent spot, so it's not the network FS just being flaky.

[02:09] * japhb__ tries knocking out one of the differences.

[02:13] *** bbkr left
[02:13] *** bbkr joined
[02:24] <japhb__> It looks like ASCII path on network FS is working fine.

[02:25] <japhb__> That's disappointing.  Not sure if the failure is the net FS or parrot's build.  But I suspect the latter.

[02:29] *** jnap left
[02:29] *** Ben_Goldberg joined
[02:31] *** BenGoldberg left
[02:33] <DrEeevil> sigh, MoarVM "build system" needs a cattleprod

[02:33] <DrEeevil> y'all need to learn more about packaging ;)

[02:37] <diakopter> DrEeevil: what about it is sucky? (feel free to lambast) :)

[02:37] <DrEeevil> diakopter: it tries to run git needlessly

[02:37] <DrEeevil> so the release tarball is useless

[02:37] <DrEeevil> and then it is VERY confused about where to put files

[02:38] <DrEeevil> also it needlessly bundles stuff that could be provided by the system, I'm a gonna try to patch that up

[02:38] <diakopter> immagonna coin some vernacular

[02:38] <diakopter> (teehee)

[02:38] *** rurban1 left
[02:39] <diakopter> DrEeevil: any suggestions/patches I'm sure would be welcomed

[02:39] <diakopter> DrEeevil: what does it bundle that could be provided by the system

[02:39] <diakopter> afaik all the bundled things have custom patches

[02:40] <DrEeevil> diakopter: libtommath and libuv look like good candidates

[02:40] <diakopter> libtommath definitely has custom patches

[02:40] <diakopter> I know for a fact

[02:40] <japhb__> Yeah, I was about to say.

[02:41] <diakopter> pretty sure libuv does too

[02:41] <diakopter> DrEeevil: in both cases, however, the headers provided by the system versions don't expose enough

[02:42] <DrEeevil> eew :(

[02:42] <DrEeevil> that's so Google

[02:42] * diakopter turns to look at japhb__ 

[02:45] *** rurban1 joined
[02:47] <DrEeevil> oh well, I can tolerate the bundling ... just manually generating tarballs is annoying

[02:47] <DrEeevil> and I still don't know how to get "make install" to do something reasonable

[02:47] * japhb__ looks around at his bus mates

[02:48] <diakopter> DrEeevil: what prefix

[02:49] <japhb__> OOC, what does the "that's so Google" comment even mean in this context?

[02:49] <DrEeevil> diakopter: eh, sucky - make install ignores it, needs to be set at configure time

[02:49] <DrEeevil> japhb__: google patches and bundles everything, Chromium still has >50 bundled libs for no reason except ... google

[02:49] <DrEeevil> "oh let's just patch boost and nail it in, it saves me some thinking"

[02:50] <diakopter> well, optimizers mumble mumble mumble static linking mumble 

[02:50] <DrEeevil> it's very cowboy coding stupid thingy

[02:50] <DrEeevil> diakopter: yeah ... err ... needing >6GB RAM to *link* ?!

[02:51] <diakopter> well that's C++'s fault :D

[02:51] <DrEeevil> no, it can be used properly

[02:51] <diakopter> (joking)

[02:51] <DrEeevil> but by doing hackpatchery "to make startup faster" ... 

[02:51] * DrEeevil recommends increasing the medication dose ;)

[02:51] <diakopter> double the max safe dose, I always say

[02:52] <DrEeevil> here, have some opiates ;)

[02:53] <japhb__> LD50?  Why not LD100?

[02:55] <japhb__> As for so many bundled libs, I don't know Chromium's particular reasoning, but I do know from other projects that there is real, deep, horrible pain in trying to deal (as an upstream project) with version skew between distros when you need lots of libs.  Because frankly, many libs have the compatibility levels of pre-industrialized manufacturing.

[02:56] <japhb__> Which is to say, very little.

[02:57] <DrEeevil> ... and nqp build system is ... uhm ... too much optimized 

[02:57] <DrEeevil> it should check if moar, parrot etc. are in PATH, maybe

[02:57] <DrEeevil> japhb__: so hardcode it for specific versions - bundling is always wrong

[02:58] <DrEeevil> japhb__: I have no trouble nailing dependencies down to specific revisions, but by bundling you just increase the pain level

[02:58] <japhb__> Heck, I remember that personally from working on the OpenGL bindings for Parrot.  When Apple decided one day to change some fundamental types that had been agreed by everyone since OpenGL existed, I just about threw up my hands.

[02:58] <DrEeevil> (see v8 - no api stability, and it changes every 6 weeks)

[02:58] <DrEeevil> heh. I don't support legacy OSen

[02:59] <japhb__> DrEeevil: Nail to revisions?  Really?  How is that a win, if no distro has an actively supported package of your nailed revision for every lib you need.

[03:00] <DrEeevil> japhb__: I'm packager. I can make that package-revision if needed

[03:00] <DrEeevil> trust me, I play a doctor on the Internet ;)

[03:00] <japhb__> It's easy to say, but either A) you nail a git rev, and insist on people building from git checkouts of all libs, or you realize that not all the world is Debian and just bundle.

[03:00] <DrEeevil> but - being that specific is usually a sign of fragile code, iow: you're not doing things sanely

[03:00] <DrEeevil> s/Debian/Gentoo/ ;)

[03:01] <japhb__> DrEeevil: It's not the callers that are insane, it's the libs.  BUGS.

[03:01] <DrEeevil> so fix them

[03:01] <DrEeevil> and by "fix" I don't mean local patching and that's it

[03:01] <japhb__> And if we could get even two distros to package a current version of any of our stuff, I would lend that more credence.

[03:01] *** lizmat_ joined
[03:01] <DrEeevil> you're part of an ecosystem, so ... behave properly

[03:02] <DrEeevil> japhb__: am I the only distro-packager doing perl6 stuff?! :(

[03:02] <japhb__> DrEeevil: most end users do not keep the equivalent of an unstable repo in their repo list.  So you can never assume the end user will actually have the fixed version available to them from the system -- so back to source build, or bundle.

[03:03] <DrEeevil> such an arcane way of doing things

[03:03] <japhb__> DrEeevil: not the only.  But possibly the only one trying to stay current right now, I don't know for certain.

[03:04] *** lizmat left
[03:04] <japhb__> (Note: I have built packages for things in the past.  I don't do it anymore, because it made me weep for the time I will never get back.)

[03:05] <DrEeevil> (sigh. why does nqp release depend on features that are not in moarvm release ...)

[03:05] * DrEeevil cooks up a tarball from HEAD and pretends that's a release

[03:05] <japhb__> Gentoo, FreeBSD, etc. have the advantage of culturally building from source ... but not every distro is like that.

[03:06] <japhb__> Because MoarVM support is iterating more rapidly than monthly releases.

[03:06] <DrEeevil> it's the only way to be sane ;)

[03:06] <DrEeevil> well, if nqp release relies on something, then moarvm should have an intermediate release - not like you run out of numbers

[03:07] <japhb__> Releases take time and energy from the very small pool of people we have to work on it.

[03:07] <japhb__> Mind you, if you're volunteering to do rapid release cycles for MoarVM for us ...  ;-)

[03:07] <DrEeevil> a single script ...

[03:07] * DrEeevil is an automater

[03:07] <japhb__> There is more to a release than a script.

[03:08] <japhb__> But if you're volunteering to put up a CI server and integrate with that, ...

[03:08] <DrEeevil> well, you tag the current HEAD, make a tarball, run regression test, and if it works push tarball and VCS and that's most of it

[03:08] <japhb__> Seeing a common thread.  ;-)

[03:08] <japhb__> s/./?/

[03:09] <japhb__> BTW, I don't mean to be difficult, or discouraging.

[03:09] <japhb__> Just understand ... things are rarely so simple as they seem at first glance.

[03:09] <DrEeevil> well, I'll see if I can optimize things

[03:10] <japhb__> ++DrEeevil then.  :-)

[03:10] <DrEeevil> but it's slightly irritating to see typical beginner mistakes in every perl6-related package

[03:10] <DrEeevil> so I'm trying to reduce the pain

[03:10] <japhb__> We are all beginners at something.

[03:10] <DrEeevil> indeed

[03:18] <diakopter> release every minute

[03:23] <DrEeevil> GORAMMIT

[03:23] <DrEeevil> you cannot compute a version from git in a release tarball

[03:23] * DrEeevil applies sed

[03:24] * diakopter wonders how you'll get sed for windows

[03:24] <DrEeevil> I don't deal with legacy platforms

[03:26] <japhb__> DrEeevil: ... but we do.

[03:26] <japhb__> Please don't berate design decisions we make because of our desire to be everywhere.

[03:27] <DrEeevil> japhb__: I'm just pointing out how your "release tarballs" are worse than useless

[03:28] <DrEeevil> which is a bit funny because it means that no one has ever used them

[03:28] <DrEeevil> (and github makes it hard to change that, so ... double funny)

[03:28] <japhb__> Hard to change what?

[03:29] <DrEeevil> to provide proper release tarballs

[03:29] <DrEeevil> I'm getting really tired of having to work around that ... thing

[03:30] <DrEeevil> so ... nqp+moarvm: http://bpaste.net/show/155958/ - so close, but no dice

[03:30] * japhb__ looks at DrEeevil quizzically

[03:30] <DrEeevil> japhb__: github - when it works (3 days a week on average) it's slow, glitchy, has known issues that have been reported literally years ago

[03:30] <DrEeevil> it makes sourceforge look good

[03:31] <DrEeevil> nqp-2013.11, moarvm HEAD 

[03:31] <japhb__> <eight-year-old>That's hyperbole.<eight-year-old>

[03:32] <DrEeevil> their downloads were completely not-working for a few days last week

[03:32] <japhb__> Which release tarballs are you referring to?  MoarVM?  NQP?

[03:32] <DrEeevil> right now MoarVM, the release tarballs have two fatal failures :)

[03:33] <japhb__> Ah.  Well, I'm not surprised.  MoarVM is used pretty much only by people working on it.  It's not surprising that no one noticed the release tarball stop working.

[03:34] <japhb__> (I should say, that's only the case right now because of the very active work on it to bring support for Rakudo.)

[03:35] <diakopter> I didn't even know there was a release tarball targe

[03:35] <dalek> roast: 4e2b3d7 | (Solomon Foster)++ | S05-grammar/protoregex.t:

[03:35] <dalek> roast: Fudge for Niecza.

[03:35] <dalek> roast: review: https://github.com/perl6/roast/commit/4e2b3d7455

[03:36] <DrEeevil> diakopter: automatically created if you have a tag

[03:36] <DrEeevil> which is funny because it gives people a false sense of security

[03:36] <japhb__> Now, if NQP, Rakudo, or Rakudo Star release tarballs fail (especially R*), that's a bigger deal.

[03:37] <japhb__> Oh, you're just talking about GitHub auto-generating tarballs?  Then trusting those really is insane.

[03:38] <japhb__> I thought you were talking about ones generated using our build process and uploaded.

[03:38] <dalek> roast: 9c3354e | (Solomon Foster)++ | S12-construction/construction.t:

[03:38] <dalek> roast: Fudge for Niecza.

[03:38] <dalek> roast: review: https://github.com/perl6/roast/commit/9c3354e80f

[03:38] * japhb__ is about to turn into a pumpkin

[03:38] <DrEeevil> japhb__: that's the trap of using github :)

[03:39] <DrEeevil> I still refuse to interact with it more than strictly needed

[03:39] <lue> That's the one thing I find funny about github: they refer to tags as "releases". Not that you'd ever use tags for anything else though :) .

[03:39] <DrEeevil> lue: and half the time their release downloads are inaccessible

[03:39] <DrEeevil> so ... screw that, use a professional service like BerliOS if you need free hosting

[03:40] <lue> So I'm guessing now is that .5 of the time that the downloads are accessible, right? :)

[03:42] <lue> .oO(at least the webfont'd private character next to "x Releases" is a picture of a tag)

[03:49] *** xinming left
[03:49] *** rurban1 left
[03:50] *** xinming joined
[03:54] *** lizmat_ left
[03:57] *** BenGoldberg joined
[03:57] *** Ben_Goldberg left
[04:01] *** Ben_Goldberg joined
[04:01] *** BenGoldberg left
[04:05] *** BenGoldberg joined
[04:07] *** Ben_Goldberg left
[04:14] *** BenGoldberg left
[04:18] *** kaleem joined
[04:22] *** preflex_ joined
[04:22] *** ChanServ sets mode: +v preflex_

[04:23] *** preflex left
[04:23] *** preflex_ is now known as preflex

[04:33] *** kaleem left
[04:50] *** rurban1 joined
[04:54] *** rurban1 left
[05:19] *** SamuraiJack_ joined
[05:22] *** kaleem joined
[05:26] <raiph> DrEeevil: do you have an account on feather?

[05:26] *** jeffreykegler joined
[05:27] *** [Sno] left
[05:27] <DrEeevil> raiph: no

[05:28] *** jeffreykegler left
[05:30] <raiph> DrEeevil: have you ever done a jenkins setup or anything like it?

[05:32] <DrEeevil> raiph: I've set up random automation taks, but not jenkins (and the java bits suggest that I shouldn't be near it)

[05:33] *** TimK1 left
[05:41] <raiph> DrEeevil: i don't have the skills to do it, but i'm pretty sure a lot of us would love to see p6 get ci automation

[05:41] <DrEeevil> indeedly

[06:06] *** zakharyas joined
[06:17] <moritz> \o

[06:18] <FROGGS[mobile]> o/

[06:33] *** rurban left
[06:34] *** zakharyas left
[06:35] *** [Sno] joined
[06:35] *** rurban joined
[06:54] *** FROGGS[mobile] left
[07:09] *** darutoko joined
[07:34] *** SamuraiJack_ left
[07:39] <Woodi> morning :)

[07:42] <Woodi> DrEeevil: our big problem is that distros do only one or two Perl6 packages a year... And each month we do releases for not-dev audience. Packaging just this would help a lot.

[07:43] <DrEeevil> Woodi: I am too far removed from normality to understand this idea that stale == stable

[07:43] <Woodi> DrEeevil: I would left packages of MoarVM alone for now becouse it have 'Hallo World' feature just 1 day old :)

[07:43] <DrEeevil> Woodi: pff. nqp claims to support it as backend!11

[07:43] <Woodi> DrEeevil: we thing Rakudo Star releases are moust usable

[07:44] <Woodi> but nqp is still in half way to Pelt6

[07:44] <Woodi> Perl6 of course

[07:44] <DrEeevil> star is not really package-able for me

[07:44] <Woodi> and Niecha had month releases, when was maintained...

[07:45] <DrEeevil> yup, and it got some build system fixes to make it easier to build for me

[07:45] <DrEeevil> that was quite nice while it lasted

[07:45] *** dmol joined
[07:46] <Woodi> I have 10 star releases packaged via graft :) can switch them in two console-commands :)

[07:47] <Woodi> but must say I tried to do Debian package of R* via one-script but something stopped me, no remember what... :)

[07:48] <Woodi> Rakudo on Parrot is kind strange becouse it is subsystem of Parrot, it is installed like plugin not separate app...

[08:03] <hoelzro> morning #perl6!

[08:04] <hoelzro> Woodi: what's graft?

[08:05] <Woodi> perl script to do packaging via links:  http://peters.gormand.com.au/Home/tools/graft/graft-html

[08:06] <Woodi> actually it compiles something, no idea what exactly it is internally :)

[08:06] <hoelzro> interesting...

[08:11] <hoelzro> perl6 --rxtrace is supposed to trace *every* rule during parsing, right?

[08:11] <hoelzro> because for me, it stops at comp_unit

[08:20] *** FROGGS joined
[08:23] *** denis_boyun joined
[08:24] *** fhelmberger joined
[08:25] *** silug_ left
[08:25] *** bbkr_ joined
[08:26] *** cognominal left
[08:26] *** stevan__ joined
[08:27] *** fhelmberger_ joined
[08:27] *** [Sno]_ joined
[08:27] *** ggoebel112 joined
[08:29] *** takesako_ joined
[08:30] *** rom1504_ joined
[08:30] *** FROGGS_ joined
[08:30] *** PacoAir_ joined
[08:30] *** ssutch_ joined
[08:30] *** hummeleBop1 joined
[08:30] *** djanatyn1 joined
[08:30] *** cognominal joined
[08:30] *** awwaiid_ joined
[08:31] *** emma_ joined
[08:31] *** Ulti_ joined
[08:31] *** fhelmberger_ left
[08:31] *** Vlavv_ joined
[08:32] *** fhelmberger_ joined
[08:32] *** SimonFelix joined
[08:33] *** Shozan joined
[08:34] *** cooper_ joined
[08:34] *** cybernicus joined
[08:34] *** ggoebel111 left
[08:34] *** hummeleB1 left
[08:34] *** ssutch left
[08:34] *** FROGGS left
[08:34] *** [Sno] left
[08:34] *** stevan_ left
[08:34] *** awwaiid left
[08:34] *** djanatyn left
[08:34] *** fhelmberger left
[08:34] *** bbkr left
[08:34] *** cooper left
[08:34] *** raiph left
[08:35] *** PacoAir left
[08:35] *** Vlavv` left
[08:35] *** Ulti left
[08:35] *** SevenWolf left
[08:35] *** roboticus left
[08:35] *** [Sno]_ is now known as [Sno]

[08:35] *** cooper_ is now known as cooper

[08:35] *** PacoAir_ is now known as PacoAir

[08:35] *** cooper left
[08:35] *** cooper joined
[08:36] *** SimonFelix is now known as SevenWolf

[08:36] *** cognominal left
[08:39] <Woodi> I wonder is it possible to unbundle parrot and nqp from R* package. Maybe instead README can have "required" section with parrot/nqp version number and links. It will be good, at least, for me :)  --build-gen options are for devs and devs switches to githun anyway...

[08:40] <DrEeevil> Woodi: that would make life easier for us, but harder for everyone else

[08:41] <nwc10> I think that that defeats the entire point of the R* distribution - that it tries to be an "everything you need to get started" download

[08:42] *** FROGGS_ is now known as FROGGS

[08:43] <hoelzro> I can imagine breaking up rakudo-star into a package that depends on parrot and nqp

[08:44] <moritz> well, for an OS package, R* would likely be a meta package

[08:44] <moritz> that depends on Rakudo and the modules

[08:44] <moritz> and Rakudo in turn depends on nqp

[08:45] <moritz> and nqp on parrot, the JVM and later Moar

[08:46] <JimmyZ> # perl Configure.pl --backends=moar --prefix=../MoarVM/install/

[08:46] <JimmyZ> Missing braces on \N{} in regex; marked by <-- HERE in m/(?<v>[\d\._]+)\N <-- HERE +\n(?<n>\S+)/ at Configu

[08:46] <JimmyZ> This is perl, v5.10.1 (*) built for x86_64-linux-thread-multi

[08:46] <hoelzro> moritz: that's how I would do it

[08:46] <JimmyZ> rakudo branch

[08:47] <moritz> JimmyZ: is that in moar-support?

[08:47] <JimmyZ> yeah

[08:47] <FROGGS> JimmyZ: that was me

[08:47] <JimmyZ> ;)

[08:48] <moritz> FROGGS: simply use . instead of \N

[08:48] <FROGGS> k

[08:49] *** denis_boyun left
[08:50] <dalek> rakudo/moar-support: 16da194 | (Tobias Leich)++ | Configure.pl:

[08:50] <dalek> rakudo/moar-support: s/\N/./, JimmyZ++ and moritz++

[08:50] <dalek> rakudo/moar-support: review: https://github.com/rakudo/rakudo/commit/16da1941ed

[08:51] <Woodi> I always thinked R* do not need bundled Parrot (until it patch it...) a) ppls wantin to compile Perl6-thing can just download Parrot tgz with easy; b) ppls do not wanting to complie have .msi

[08:51] *** FROGGS[mobile] joined
[08:51] <Woodi> looks lazy ppls use .msi :>

[08:51] <JimmyZ> hmm, make -j8 is broken in moar-support branch

[08:53] <Woodi> in R* extracting knowledge what Parrot/nqp version is needed was paintfull, so bundling was usefull :)

[08:53] <hoelzro> does anyone feel like "idiom-checking" some code I wrote last night?

[08:53] <hoelzro> I implemented a min heap, but it feels like I'm writing another language in Perl 6

[08:54] <hoelzro> if anyone's interested: https://gist.github.com/hoelzro/7820243

[08:55] <moritz> (($current-index + 1) / 2).floor   I'd write that as  ($current-index + 1) div 2

[08:55] <moritz> also, I find $current-index to be too verbose :-)

[08:55] <moritz> I'd just name it $i

[08:55] <hoelzro> ahhh

[08:57] <moritz> also the outermost 'if' in method pop looks superfluous to me

[08:57] <moritz> I'd write that as    my $value   = @!values.pop; return unless @!values; # code from the else-branch here

[08:59] <hoelzro> ok, seems reasonable

[09:05] *** cognominal joined
[09:06] *** cognominal left
[09:22] *** lizmat joined
[09:25] * lizmat has arrived at the Carrefour Numérique a la Cité des Sciences

[09:26] <lizmat> aka patch -p1 is starting

[09:26] <hoelzro> nice

[09:27] <hoelzro> I wish I'd stop finding out about these things a few days before they happen =)

[09:33] <lizmat> yes, the marketing of the patch -p1 left something to be desired

[09:34] <lizmat> but I have no doubt there will be a patch -p2 sometime next year  :-)

[09:36] * lizmat wonders how Chinese/Japanese developers use git tag

[09:42] *** xinming left
[09:42] * lizmat will start with writing "Bagging the changes in the Set specification" advent post, so it can be used for tomorrow if no alternative presents itself

[09:42] <moritz> lizmat++

[09:42] <moritz> lizmat: re git tag, "with Unicode"?

[09:43] <lizmat> yes, as Malmö apparently creates problems as a tag in some situations :-(

[09:44] * moritz didn't have any

[09:45] <lizmat> perhaps on ascii only filesystems ?

[09:47] <JimmyZ> lizmat: for Chinese developers, they use english as git tag, or pinyin

[09:47] <JimmyZ> and number

[09:49] *** xinming joined
[09:49] <mathw> oh patch -p1 is an event?

[09:50] *** rindolf joined
[09:50] <mathw> lizmat: maybe in non-UTF8 locales?

[09:50] <mathw> if such things still exist

[09:50] <lizmat> http://patch.pm/p1

[09:52] *** FROGGS[mobile] left
[09:55] <FROGGS> hoelzro: I'd swap line 34 with line 35, and do: my int $left-index  = $right-index - 1

[09:55] *** xinming left
[09:55] <hoelzro> why's that?

[09:56] <FROGGS> hoelzro: so you dont do ($current-index + 1) * 2 twice

[09:56] *** xinming joined
[09:56] <hoelzro> ah, fair enough

[09:56] <FROGGS> and you see at once that the left index is rigth index minus one

[09:57] *** woolfy joined
[10:09] *** SamuraiJack_ joined
[10:11] *** tgt joined
[10:14] *** xenoterracide joined
[10:17] *** woolfy left
[10:18] *** rurban1 joined
[10:21] *** cognominal joined
[10:22] *** rurban1 left
[10:27] *** SamuraiJack_ left
[10:28] *** SamuraiJack_ joined
[10:28] <hoelzro> if I'm debugging in NQP, and I want to dump something's time, will nqp::say(nqp::what($obj)) do the job?

[10:28] <hoelzro> or do I have to do something like nqp::say(nqp::what($obj).name)?

[10:29] <lizmat> I'm not sure, FROGGS might know

[10:32] <hoelzro> also, if I want to say() something in NQP, and it tells me "cannot stringify this", can I add a method to the thing being said do enable stringification?

[10:32] <FROGGS> nqp: my $a = "abc"; say($a.HOW.name($a))

[10:32] <camelia> nqp-moarvm: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near " \"abc\"; sa"␤panic␤»

[10:32] <camelia> ..nqp-parrot: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near " \"abc\"; sa"␤current instr.: 'panic' pc 16262 (gen/parrot/stage2/NQPHLL.pir:6020) (gen/parrot/stage2/NQPHLL.nqp:426)␤»

[10:32] <camelia> ..nqp-jvm: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near " \"abc\"; sa"␤  in panic (gen/jvm/stage2/NQPHLL.nqp:379)␤  in infix:sym<=> (gen/jvm/stage2/NQP.nqp)␤  in !protoregex (gen/jvm/stage2/QRegex.nqp:746)␤  in infix (gen/jvm/stage2/NQPHLL.nqp…»

[10:32] <FROGGS> nqp: my $a := "abc"; say($a.HOW.name($a))

[10:32] <camelia> nqp-moarvm, nqp-jvm: OUTPUT«BOOTStr␤»

[10:32] <camelia> ..nqp-parrot: OUTPUT«Can only use get_how on a SixModelObject␤current instr.: '' pc 53 ((file unknown):44) (/tmp/ObK3epAQW1:1)␤»

[10:32] <FROGGS> parrot does not like natives

[10:33] <hoelzro> I'm getting pretty tired of Parrot.

[10:33] <FROGGS> nqp: my $a := "abc"; say(nqp::objprimspec($a)) # 0=obj, 1=int, 2=num 3=str or so

[10:33] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«3␤»

[10:33] <hoelzro> and I've only been looking into Rakudo for a few months now =/

[10:34] *** dayangkun left
[10:34] <FROGGS> hoelzro: but that is our design, not parrot's fault

[10:34] <hoelzro> doesn't matter! blaming Parrot!

[10:34] <FROGGS> :P

[10:35] <hoelzro> denouncing!

[10:40] *** woolfy joined
[10:47] <FROGGS> r: say $*VM<config><prefix>

[10:47] <camelia> rakudo-parrot 262e60: OUTPUT«/home/p6eval/rakudo-inst-2␤»

[10:47] <camelia> ..rakudo-jvm 262e60: OUTPUT«(Any)␤»

[10:47] <FROGGS> Any? :(

[10:48] <jnthn> FROGGS: What's under <config> is VM-specific at the moment, iirc

[10:48] <jnthn> See terms.pm for how it gets the prefix out differently.

[10:49] <FROGGS> r: say $*VM<properties><perl6.prefix>

[10:49] <camelia> rakudo-jvm 262e60: OUTPUT«/home/p6eval/rakudo-inst-1␤»

[10:49] <camelia> ..rakudo-parrot 262e60: OUTPUT«(Any)␤»

[11:11] *** SevenWolf left
[11:17] *** szabgab joined
[11:18] <szabgab> hi,  I just compiled * 2013.11 on OSX

[11:18] *** rurban1 joined
[11:18] <szabgab> and tried to    panda list    but it takes ages

[11:19] <szabgab> actually after 5 or 10 min I stopped it without seeing any output

[11:19] *** mberends left
[11:20] *** denis_boyun joined
[11:20] <FROGGS> seems like it is unable to fetch http://feather.perl6.nl:3000/projects.json

[11:20] <FROGGS> hmm, and so am I

[11:21] <szabgab> my little resarch also showed that it gets stuck in the method update

[11:21] <szabgab>   that was supposed to fetch that file

[11:21] <szabgab> FROGGS: but how did you see that so fast?

[11:23] <FROGGS> szabgab: I know what it wants to do and that is the only thing that is likely to hang

[11:23] *** rurban1 left
[11:23] <FROGGS> and I've got that projects.json in my browser's history, so I tried

[11:24] <FROGGS> I can connect to http://feather.perl6.nl:3000, but I don't seem to get the json file :/

[11:24] <jnthn> Something not restarted after recent reboot, maybe?

[11:24] <FROGGS> jnthn: no, I was able to fetch that file yesterday evening

[11:25] <jnthn> oh...

[11:29] *** atroxaper joined
[11:32] *** autumn left
[11:35] *** autumn joined
[11:45] *** szabgab left
[12:03] *** dayangkun joined
[12:07] <hoelzro> grr

[12:07] <hoelzro> how much memory does it take to build jakudo?

[12:08] <jnthn> Couple of gigs last I checked.

[12:09] <hoelzro> curses!

[12:09] *** denis_boyun left
[12:10] <nwc10> hoelzro: what was the answer you were hoping for?

[12:10] <hoelzro> hmm

[12:10] <hoelzro> I guess I didn't know what else to expect

[12:11] <hoelzro> considering my VM with 2.5GB RAM kills the build process everytime

[12:13] <lizmat> S32/Containers:1162

[12:14] <lizmat> S32:1162

[12:14] <synopsebot> Link: http://perlcabal.org/syn/S32.html#line_1162

[12:15] * lizmat wishes synopsebot would point S32/Containers:1162 correctly to http://perlcabal.org/syn/S32/Containers.html#line_1162

[12:19] *** rurban1 joined
[12:21] <moritz> S32::Containers:1162

[12:22] *** [Sno] left
[12:22] <lizmat> I think the regex should just also allow /

[12:22] <lizmat> before the :

[12:22] <lizmat> and all would be well, no?

[12:23] *** rurban1 left
[12:32] *** p5eval joined
[12:32] <lizmat> S03:3311

[12:32] <synopsebot> Link: http://perlcabal.org/syn/S03.html#line_3311

[12:33] <lizmat> .oO( just abusing the synopsebot to get links )

[12:33] <jnthn> Isn't that what it's for? :P

[12:40] * colomon used to abuse the ir clog for links...

[12:48] * moritz too

[12:56] <dalek> specs: 9fdb85e | (Elizabeth Mattijsen)++ | S32-setting-library/Containers.pod:

[12:56] <dalek> specs: I don't think we ever had a MixBag

[12:56] <dalek> specs: review: https://github.com/perl6/specs/commit/9fdb85ecfd

[13:04] * lizmat provisionally finished Day 12 of advent: https://gist.github.com/lizmat/7823431/raw/f5d515ad35f6afec2d4c09dc43f85b3e9afff242/gistfile1.txt

[13:05] <lizmat> comments welcome: moritz, masak, jnthn ?

[13:05] <lizmat> lue?  :-)

[13:08] *** cybernicus left
[13:12] *** denis_boyun joined
[13:15] *** brrt joined
[13:20] *** xenoterracide left
[13:20] *** denis_boyun left
[13:21] *** tgt left
[13:21] *** rurban1 joined
[13:21] *** brrt left
[13:23] *** kaare_ joined
[13:28] *** tgt joined
[13:36] *** kaleem left
[13:38] <lizmat> ok, scheduled the post for Dec 12, 0:00.

[13:39] <lizmat> if we need it for tomorrow, it's just a matter of changing the title (s/12/07) and the publish date

[13:39] <FROGGS> lizmat++

[13:42] *** [Sno] joined
[13:53] *** sqirrel joined
[13:56] *** ajr joined
[13:57] *** ajr is now known as Guest8998

[13:57] *** Guest8998 is now known as ajr_

[13:58] <ajr_> Is the equivalent of $. implemented in P6 yet?

[13:59] *** V_S_C joined
[13:59] <moritz> p: my $dummy = get(); say $*ARGFILES.ins

[13:59] <camelia> rakudo-parrot 262e60: OUTPUT«1␤»

[14:02] *** V_S_C left
[14:24] <ajr_> Thanks, moritz

[14:25] *** rindolf left
[14:26] *** SamuraiJack_ left
[14:44] *** p5eval left
[14:49] *** thou joined
[14:49] *** pecastro left
[14:55] *** denisboyun joined
[14:56] <woolfy> I just read and re-read lizmat++ 's advent calender day 12 contribution (  https://gist.github.com/lizmat/7823431/raw/f5d515ad35f6afec2d4c09dc43f85b3e9afff242/gistfile1.txt ) and I liked it (not understood it completely, but hell)

[15:03] <PerlJam> woolfy: maybe that's a sign that lizmat++ needs to expand on a couple of things to make them more understandable?

[15:03] <lizmat> fwiw, it already felt as a long advent blog post

[15:04] * PerlJam is reading now

[15:04] <lizmat> apparently, there is a preview available at http://perl6advent.wordpress.com/?p=1938&preview=true

[15:05] <PerlJam> ah, even better

[15:07] <woolfy> PerlJam: no, it's a sign that I should study Perl 6 better and harder and more in-depth and that at home I should ask more 'stupid' questions to lizmat++

[15:08] <PerlJam> you know ... I'm not sure who our audience is with the advent calendar.  For instance, "implemented as dispatchers" and "expense of another call frame" may not make enough sense to our readers without links to somewhere that explain

[15:09] <lizmat> ah, good point

[15:09] <lizmat> hmmm....

[15:09] <PerlJam> however, lizmat++ for an excellent advent post!  

[15:09] <woolfy> Our audience?  We should all mention the advent calendar on our facebook, in our tweets, in our own blogs, on this channel and on other channels and mailing lists.  That might easily double to audience from 10 to 20 readers!

[15:10] <woolfy> (or what that number demotivational)

[15:10] <lizmat> woolfy: it's more than that already (moritz has the numbers)

[15:10] <PerlJam> woolfy: do you have a wordpress login for the advent calendar?

[15:11] <moritz> we've had between 600 and 1k page views per day since Dec 01

[15:11] <woolfy> ow cool

[15:11] <moritz> today "only" 320, but today isn't over yet

[15:11] <colomon> best ever 11,000 views.

[15:11] <woolfy> I do have a wordpress login. 

[15:11] <moritz> woolfy: if you tell me the login name, I can invite you to that blog

[15:12] <moritz> colomon: that was when slashdot had us on the front page

[15:12] <PerlJam> The residual 50ish views each day in Nov are interesting too :)

[15:12] <woolfy> moritz: my login name is wendyga

[15:13] <woolfy> ( http://wendyga.wordpress.com/ )

[15:13] <moritz> woolfy: invitation sent

[15:13] <woolfy> Which reminds me that I have to write a next blog about Fosdem...  we have a devroom and we need speakers...

[15:13] <woolfy> moritz: thanks

[15:18] <PerlJam> Has anyone "advertised" the advent calendar around the internet this year?

[15:19] <PerlJam> I see there's a perlmonk post that mentions is.

[15:19] <PerlJam> er it

[15:19] *** rurban1 left
[15:20] <woolfy> Moritz:  "invited you to become an editor"???   ow...  I just accepted the invitation...  now I have to write too...  I don't wanna write about something that I know not enough about.

[15:21] *** fhelmberger joined
[15:21] <PerlJam> woolfy: you don't *have* to write something ... but if you have something interesting to say ...  :-)

[15:21] <lizmat> PerlJam: made the reference to dispatcher and call frame a bit less incrowdy

[15:22] <lizmat> PerlJam++ for the suggestion

[15:22] <woolfy> PerlJam: maybe at Fosdem at the Perl-booth...  not on a blog about Perl 6.

[15:22] <moritz> woolfy: as an editor you have the possibilities to preview other people's posts

[15:22] <moritz> woolfy: which is why I chose that permission level -- feel free not to use the extra power :-)

[15:24] *** fhelmberger_ left
[15:25] <woolfy> I just want to read and maybe I will comment by email.

[15:25] <moritz> that should work with the current permissions :-)

[15:25] *** fhelmberger left
[15:28] * colomon is afraid power will go to woolfy++'s head…  ;)

[15:28] * PerlJam is scheming how to get an advent post out of woolfy for next season  ;)

[15:30] <jnthn> "An illustrated guide to the tuits of 2014" :D

[15:33] <lizmat> I think an illustrated guide to the tuits and buttons of 2013 would already be possible  :-)

[15:33] <jnthn> aye :)

[15:33] <lizmat> including some pictures of the biggest tuit of them all

[15:33] * jnthn will take some pretty Camelia tuits with him to his Build Stuff talk next week :)

[15:34] <woolfy> You nutty people stop scheming to get me writing advent calender stuff.  I will not do it.  Hmm, maybe.  No no no!  Aw come on...   NOOOOOO!!!!

[15:35] <lizmat> please?

[15:35] <jnthn> haha :)

[15:35] <woolfy> oO(how bad would cancelling my whole Wordpress-account be?)

[15:36] <jnthn> .oO( Could cause locuts plagues and a nuclear winter... )

[15:36] <moritz> PerlJam: start scheming your own advent post!

[15:36] <lizmat> .oO( how many levels of reverse psychology would be needed to get woolfy to write an advent post? )

[15:37] <PerlJam> moritz: I've been scheming, but nothing has gelled yet. :(

[15:37] <woolfy> oO(I am sleepy and want to go into hibernation for the rest of winter)

[15:38] <jnthn> r: sub woolfy() { say 'psychology'.comb.reverse.join; woolfy }; woolfy

[15:38] *** raiph joined
[15:38] <colomon> lolcats plagues?

[15:38] <camelia> rakudo-parrot 262e60: OUTPUT«(timeout)ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp…»

[15:38] <camelia> ..rakudo-jvm 262e60: OUTPUT«ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp␤ygolohcysp…»

[15:39] <PerlJam> lizmat, woolfy: Have you guys seen http://www.youtube.com/watch?v=Xe1TZaElTAs ?  That the tuits are "woodne nickels" resonates with the shinto shrine that Shirky talks about  :)

[15:41] *** sqirrel left
[15:41] <woolfy> Read about that movie and about the shrine and the Unesco response. Watching the movie right now.

[15:41] <woolfy> jnthn: it's not working! it's not working! it's not working! it's not working! it's not working! it's not working! it's not working! it's not working! it's not working! it's not working! 

[15:41] *** denisboyun left
[15:42] <lizmat> :-)

[15:42] <lizmat> r: %(:a :b).perl.say

[15:42] <camelia> rakudo-parrot 262e60, rakudo-jvm 262e60: OUTPUT«("a" => Bool::True).hash␤»

[15:42] <lizmat> n: %(:a :b).perl.say

[15:42] <camelia> niecza v24-108-g17d73e4: OUTPUT«(timeout)[auto-compiling setting]␤»

[15:42] <lizmat> std: %(:a :b).perl.say

[15:42] <camelia> std 3b262af: OUTPUT«ok 00:01 124m␤»

[15:42] <nwc10> jnthn: that's not too bad. It's not like you said "hoardes of Zombies"

[15:43] <lizmat> n: %(:a :b).perl.say

[15:43] <camelia> niecza v24-108-g17d73e4: OUTPUT«(timeout)[auto-compiling setting]␤»

[15:43] *** jnap joined
[15:44] <jnthn> lizmat: I *think* that's adverbing the adverb. It's oddly confusedly dropping it somehow, I guess...

[15:45] <lizmat> afaics, it's *not* getting passed as a named parameter to e.g. Hash.new

[15:45] <jnthn> No, I doubt it will be

[15:45] <jnthn> I suspect it's just getting lost

[15:45] <lizmat> seems it's getting lost in the AST building

[15:45] <moritz> lost in adverbian

[15:45] <jnthn> Probably 'cus nothing notices it's there, or thinks to look.

[15:45] <jnthn> I don't know exactly where that'd want fixing, off hand...

[15:46] <lizmat> well, I would think we want that to be passed as a named parameter, and then have e.g. Hash.new complain about additional named parameters ?

[15:46] *** ajr_ left
[15:47] <lizmat> or maybe we should force multiple named parameters to have no whitespace between them

[15:47] <lizmat> and make it a TTIAR error ?

[15:48] <lizmat> the fact that forgetting a comma makes code silently forget, feels pretty bad to me

[15:48] *** ajr joined
[15:48] *** ajr is now known as Guest83859

[15:48] *** Guest83859 is now known as ajr_

[15:48] <jnthn> lizmat: I'm not sure exactly what should happen here...

[15:48] <jnthn> I know that in:

[15:49] <jnthn> foo(:a :b)

[15:49] <jnthn> It's meant to be have like

[15:49] <jnthn> foo(:a, :b)

[15:49] <jnthn> It's certainly not meant to just be silently forgotten.

[15:50] *** thou left
[15:50] *** rurban1 joined
[15:53] <lizmat> n: sub foo { say %_.perl }; foo(:a :b)

[15:53] <camelia> niecza v24-108-g17d73e4: OUTPUT«(timeout)[auto-compiling setting]␤»

[15:53] <lizmat> r: sub foo { say %_.perl }; foo(:a :b)

[15:53] <camelia> rakudo-parrot 262e60, rakudo-jvm 262e60: OUTPUT«("a" => Bool::True).hash␤»

[15:53] <lizmat> .oO( is niecza on the blink? )

[15:54] *** denis_boyun joined
[15:55] <lizmat> jnthn: what does "QAST::Op(call &foo) foo(:a :b)" mean

[15:55] <lizmat> is the "foo(:a :b)" just comments ?

[15:56] <FROGGS> yes

[15:56] <FROGGS> it is just what in $/ was when calling the action method

[15:57] <lizmat> ok

[15:57] <lizmat> diffing -uw the --target=ast

[15:57] <lizmat> +                  - QAST::Op+{QAST::SpecialArg}(p6bool)

[15:57] <lizmat> +                    - QAST::IVal(1)

[15:57] <lizmat> +                        - QAST::Op+{QAST::SpecialArg}(p6bool)

[15:57] <lizmat> +                          - QAST::IVal(1)

[15:57] <lizmat> is what seems to be added for the case with comma

[15:58] <lizmat> I guess the "QAST::Op+{QAST::SpecialArg}(p6bool)" is a stringification that loses the name of the key, right?

[15:59] <FROGGS> it does not show the key, never

[15:59] *** Psyche^_ joined
[15:59] <lizmat> ah, ok

[15:59] <FROGGS> p: say (:a :b)

[15:59] <woolfy> So, question...  I am reading the Perl 6 Advent Calendar: http://wordpress.com/read/blog/id/10740073/    and I see '30 followers'.  If I would use this URL on my Facebook page, would my friends be able to read the contributions?

[15:59] <camelia> rakudo-parrot 262e60: OUTPUT«"a" => Bool::True␤»

[15:59] <moritz> patches to make the QAST dumper more informative or clear are always welcome :-)

[16:00] *** kaleem joined
[16:00] <lizmat> hmmm... so the name of the keys can never be seen in the AST dump ?

[16:00] <PerlJam> woolfy: aye, they should.

[16:00] * moritz decommuters

[16:01] <FROGGS> PerlJam: not as far as I know

[16:01] <jnthn> lizmat: Knowing how those work, I think it's likely they don't get shown, yeah.

[16:01] <PerlJam> hmm.

[16:02] <FROGGS> btw, the ":a :b" parses as a single term:sym<colonpair> according to viv

[16:02] *** Psyche^ left
[16:02] <FROGGS> like in:

[16:02] *** rindolf joined
[16:02] <FROGGS> p: use Test:a :b

[16:02] <camelia> rakudo-parrot 262e60: OUTPUT«===SORRY!===␤Error while importing from 'Test': no such tag 'b'␤»

[16:02] <FROGGS> ohh

[16:03] <FROGGS> interesting

[16:03] <FROGGS> p: use Test:a:b

[16:03] <camelia> rakudo-parrot 262e60: ( no output )

[16:03] <jnthn> I suspect it does in Rakudo too; it's the EXPR that parses the other one...

[16:03] <jnthn> Well, it's that infix can parse a colonpair...

[16:05] *** denis_boyun left
[16:05] *** kaleem left
[16:10] *** FROGGS left
[16:11] <woolfy> PerlJam: ok, thanks, I will mention it

[16:11] *** denis_boyun joined
[16:13] *** thou joined
[16:25] <lizmat> n: sub foo { say %_.perl }; foo(:a :b)

[16:25] <camelia> niecza v24-108-g17d73e4: OUTPUT«(timeout)[auto-compiling setting]␤»

[16:25] <lizmat> I guess niecza *is* on the blink

[16:28] <[Coke]> lizmat: first time you use niecza, it auto compiles the setting. try again.

[16:28] <[Coke]> n: sub foo { say %_.perl }; foo(:a :b)

[16:28] <camelia> niecza v24-108-g17d73e4: OUTPUT«(timeout)[auto-compiling setting]␤»

[16:29] <colomon> :(

[16:29] <colomon> n: say "Hi"

[16:29] <[Coke]> whoever has the camelia code to build niecza, if you run a simple hello world after the build, it'll do that step for us.

[16:29] <camelia> niecza v24-108-g17d73e4: OUTPUT«(timeout)[auto-compiling setting]␤»

[16:29] <colomon> seems like something is wrong here?

[16:30] <[Coke]> it can take a little while, but 5m seems excessive. wonder if we're screwing it up byasking repeatedly. ;)

[16:30] * [Coke] heads back to dayjob.

[16:30] *** sqirrel joined
[16:30] <dalek> rakudo-star-daily: 858b52a | coke++ | log/ (5 files):

[16:30] <dalek> rakudo-star-daily: today (automated commit)

[16:30] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/858b52a0b9

[16:31] <[Coke]> https://github.com/coke/rakudo-star-daily/blob/master/log/test-modules.log - don't see any deprecation warnings or failures. whee.

[16:31] <lizmat> [Coke]++

[16:31] <lizmat> so, just over 6 hours until the next advent blog and no takers yet

[16:32] *** xinming left
[16:32] <lizmat> around an hour from now, patch -p1 will shut down for the day and I will be most likely offline for the evening

[16:32] <[Coke]> I am dayjobbed out. I might be able to take one later in the month, after a weekend.

[16:32] <lizmat> maybe I should just schedule my day 12 presentation for tonight ?

[16:33] *** xinming joined
[16:33] *** kst` is now known as kst

[16:34] *** ssutch_ left
[16:35] <PerlJam> lizmat: +1 (especially since you've already got it written :)

[16:35] <[Coke]> lizmat: it would save a kitten.

[16:35] <jnthn> +1

[16:36] <jnthn> .oO( Every time you write a Perl 6 advent post last minute, God kills a kitten? )

[16:36] <lizmat> ok, scheduled for 7 Dec 2013, UTC 0:00

[16:36] <[Coke]> lizmat++

[16:37] <dalek> mu: b0e7c18 | (Elizabeth Mattijsen)++ | misc/perl6advent-2013/schedule:

[16:37] <dalek> mu: Move Day 12 to Day 7

[16:37] <dalek> mu: review: https://github.com/perl6/mu/commit/b0e7c18940

[16:37] <lizmat> which means our first open day is Dec 12 now

[16:38] <[Coke]> I'll take the 12th.

[16:38] <[Coke]> put me down for something. :|

[16:39] <dalek> mu: 778f99c | (Elizabeth Mattijsen)++ | misc/perl6advent-2013/schedule:

[16:39] <dalek> mu: Putting coke up to something

[16:39] <dalek> mu: review: https://github.com/perl6/mu/commit/778f99ca4d

[16:39] <lizmat> :-)

[16:40] <PerlJam> lizmat++  (you were reading my mind apparently)

[16:40] <lizmat> great minds think alike  :-)

[16:40] <[Coke]> subroutine signatures? Doesn't look like we've had a post specifically on that.

[16:41] <[Coke]> ah. ok, leave that one, put me down for another one on the 21st.

[16:41] <lizmat> about subroutine signatures ?

[16:42] *** tipdbmp left
[16:43] *** djanatyn1 is now known as djanstyn

[16:43] *** bluescreen10 joined
[16:43] *** djanstyn is now known as djanatyn

[16:44] <dalek> mu: 74fe36c | (Elizabeth Mattijsen)++ | misc/perl6advent-2013/schedule:

[16:44] <dalek> mu: Putting coke up for some more on the 21st

[16:44] <dalek> mu: review: https://github.com/perl6/mu/commit/74fe36c2af

[16:44] *** tipdbmp joined
[16:46] *** pmurias joined
[16:49] * lizmat gives up on foo(:a :b) for now

[16:50] *** yeltzooo left
[16:53] <woolfy> OK, when I log out of WordPress and try to view http://wordpress.com/read/blog/id/10740073/ it wants me to sign in before allowing me to read it.

[16:53] *** cooper left
[16:53] <woolfy> So that URL is not something I can tell my friends to go read.  Most of them have no account on WordPress.

[16:54] <woolfy> Anybody a better idea?

[16:54] *** robinsmidsrod left
[16:54] <lizmat> sorry, /me is a complete Wordpress noob

[16:54] *** cooper joined
[16:54] *** cooper left
[16:54] *** cooper joined
[16:55] *** TimK1 joined
[16:55] *** yeltzooo joined
[16:55] *** obra joined
[16:56] <[Coke]> as opposed to http://perl6advent.wordpress.com/ ?

[16:56] *** jeffreykegler joined
[16:56] *** robinsmidsrod joined
[16:56] <[Coke]> ok, dayjob ferrealz.

[16:57] <lizmat> woolfy: perhaps http://perl6advent.wordpress.com/2013/11/ ?  that gives you a table of contents

[16:58] *** denis_boyun left
[16:59] * lizmat sees perlpilot editing the toc  :-)

[17:01] <woolfy> lizmat++  that's much better thank you

[17:02] <woolfy> [Coke]++ thank you, would have worked too

[17:03] *** kivutar joined
[17:06] *** atroxaper left
[17:10] *** robinsmidsrod left
[17:10] *** jeffreykegler left
[17:10] *** robinsmidsrod joined
[17:10] *** btyler joined
[17:10] *** ajr_ left
[17:11] <woolfy> So, advertised the advent calendar on my FB page.

[17:11] *** jeffreykegler joined
[17:12] *** ajr joined
[17:12] *** ajr is now known as Guest25690

[17:12] *** Guest25690 is now known as ajr_

[17:14] <lizmat> cool!

[17:19] <dalek> rakudo/nom: dcf13b5 | (Elizabeth Mattijsen)++ | src/vm/jvm/core/Promise.pm:

[17:19] <dalek> rakudo/nom: Fix param snafu in Promise.then

[17:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dcf13b5dab

[17:19] *** denis_boyun joined
[17:24] *** ssutch joined
[17:24] *** sqirrel left
[17:25] <dalek> roast: f7caca4 | (Elizabeth Mattijsen)++ | S17-concurrency/promise.t:

[17:25] <dalek> roast: Add Promise.allof test that previously failed

[17:25] <dalek> roast: review: https://github.com/perl6/roast/commit/f7caca4494

[17:26] <lizmat> patch -p1 dismantling for today, see you guys later&

[17:26] *** lizmat left
[17:26] *** cognominal left
[17:28] *** jeffreykegler left
[17:30] *** FROGGS[mobile] joined
[17:31] <moritz> idea for an advent post: rewrite the code on http://leonerds-code.blogspot.co.uk/2013/12/futures-advent-day-1.html and the following posts in p6 :-)

[17:32] * woolfy says I love you all with a huge great love and until tomorrow

[17:32] *** woolfy left
[17:36] *** kivutar left
[17:37] *** robinsmidsrod left
[17:39] *** robinsmidsrod joined
[17:40] *** zakharyas joined
[17:42] *** robinsmidsrod left
[17:44] *** ajr_ left
[17:44] *** robinsmidsrod joined
[17:49] *** FROGGS joined
[17:49] *** SL-RHanson left
[17:56] *** jnap left
[17:56] *** robinsmidsrod left
[17:57] *** robinsmidsrod joined
[17:59] *** sftp left
[17:59] *** sftp joined
[18:04] *** denis_boyun left
[18:04] *** robinsmidsrod left
[18:04] *** robins joined
[18:05] *** rhr left
[18:13] *** rhr joined
[18:17] *** rindolf left
[18:18] *** robins left
[18:18] *** robinsmidsrod joined
[18:21] *** vky joined
[18:30] *** darutoko left
[18:35] *** aindilis` left
[18:35] *** xinming left
[18:36] <timotimo> i spent pretty much all day playing starbound with two friends

[18:36] <timotimo> now for some relaxing java debugging

[18:36] *** xinming joined
[18:39] *** jnap joined
[18:39] *** aindilis` joined
[18:43] *** jnap left
[18:51] *** sqirrel joined
[18:55] *** FROGGS[mobile] left
[18:55] *** denis_boyun joined
[18:56] *** kivutar joined
[18:59] *** denis_boyun left
[19:02] *** SamuraiJack_ joined
[19:03] *** btyler left
[19:05] *** telex left
[19:07] *** telex joined
[19:08] *** sqirrel left
[19:09] <lue> lizmat++ excellent post

[19:09] <lue> .oO(So you're saying if we toss the Norwegian Blue we can use literal Unicode in the setting like civilized people? I'm OK with that.)

[19:10] <TimToady> let's wait until we have moar options

[19:17] <PerlJam> This channel always makes me smile  :-)

[19:17] <lue> TimToady: But of course :)

[19:18] <lue> .oO(We just need to give MoarVM an animal mascot, and name it Eric.)

[19:18] *** vky left
[19:19] *** japhb__ left
[19:19] <jnthn> Hm, a few of us pondered a Moar mascot at YAPC::EU and I think a Chimera was what we came up with... :)

[19:20] <jnthn> .oO( anagram of "eric ham"... )

[19:22] <TimToady> with eric internalizing occuaptional therapy, you have erOTic, which is OT

[19:22] <PerlJam> As soon as someone puts a chimera on the flip side of a tuit, it'll be official :)

[19:23] *** btyler joined
[19:23] <lue> jnthn: sounds great, you just need to get a license for Eric now...

[19:23] <TimToady> .oO(Better Eric the Red than Eric the Dead...)

[19:24] * TimToady liefs now before someone swings a battleax at him

[19:25] * FROGGS .oO( battleaux - Is that french? )

[19:27] <TimToady> wouldn't you vike to know?

[19:28] *** araujo left
[19:29] <PerlJam> TimToady: you must've been exercising to need all of that stretching

[19:29] *** kivutar left
[19:29] <PerlJam> :)

[19:30] <TimToady> it's already a long boat

[19:32] <dalek> rakudo/moar-support: 84e430f | jnthn++ | src/Perl6/Actions.nqp:

[19:32] <dalek> rakudo/moar-support: Avoid another p6bindassert with Mu.

[19:32] <dalek> rakudo/moar-support: review: https://github.com/rakudo/rakudo/commit/84e430f241

[19:32] *** gjb__ joined
[19:32] *** gjb__ is now known as japhb

[19:33] *** araujo joined
[19:35] *** SamuraiJack_ left
[19:37] *** avuserow joined
[19:56] <raydiak> I can't seem to recall where in the synopses I read about this: How do I call a method in a parent class from my method which overrides it?

[19:56] *** rurban1 left
[19:56] <jnthn> self.LeParentClass::method(...) to be very explicit

[19:57] <jnthn> But normall one of callsame/callwith/nextsame/nextwith is enough.

[19:57] <jnthn> *normally

[19:58] *** jnap joined
[19:59] <raydiak> thanks jnthn++ ...I should locally clone the specs so I can grep them

[20:01] <japhb> Is panda supposed to work properly for installing to both the parrot and jvm backends when you have a single rakudo tree with both backends installed?

[20:08] *** kivutar joined
[20:09] <jnthn> Don't think so...

[20:09] <diakopter> .

[20:10] <dalek> rakudo/opts: eb9cd18 | jnthn++ | src/Perl6/Optimizer.nqp:

[20:10] <dalek> rakudo/opts: Make paramless block opt on JVM a level 3.

[20:10] <dalek> rakudo/opts: 

[20:10] <dalek> rakudo/opts: Breaks some spectests. Need better analysis before it can become a

[20:10] <dalek> rakudo/opts: level 2. Doesn't break anything in the setting itself, though, so we

[20:10] <dalek> rakudo/opts: can keep the benefit from better optimizing that.

[20:10] <dalek> rakudo/opts: review: https://github.com/rakudo/rakudo/commit/eb9cd18928

[20:10] <japhb> jnthn: Sigh.

[20:11] <japhb> OK, at least I know to stop banging my head against it.

[20:13] <jnthn> japhb: We only had a build system that could build/install both at once for a couple of months. We only had a second backend that was useful for stuff 4-5 months... It's not so surprising Panda doesn't know how to handle this case yet.

[20:15] *** vky joined
[20:16] *** vky left
[20:20] <jnthn> nqp: class A { has $!a; method a() { $!a } }; say(nqp::isnull(np::create(A).a))

[20:20] <camelia> nqp-jvm: OUTPUT«Can not invoke this object␤  in  (/tmp/1vjTjeiUJ7:1)␤  in  (gen/jvm/stage2/NQPHLL.nqp:1100)␤  in eval (gen/jvm/stage2/NQPHLL.nqp:1086)␤  in evalfiles (gen/jvm/stage2/NQPHLL.nqp:1292)␤  in command_eval (gen/jvm/stage2/NQPHLL.nqp:1196)␤  in command_line (ge…»

[20:20] <camelia> ..nqp-parrot: OUTPUT«invoke() not implemented in class 'NQPMu'␤current instr.: '' pc 138 ((file unknown):76) (/tmp/_gs92h975A:1)␤»

[20:20] <camelia> ..nqp-moarvm: OUTPUT«Cannot invoke this object␤frame_name_0␤»

[20:21] <jnthn> nqp: class A { has $!a; method a() { $!a } }; say(nqp::isnull(nqp::create(A).a))

[20:21] <camelia> nqp-moarvm: OUTPUT«1␤»

[20:21] <camelia> ..nqp-jvm, nqp-parrot: OUTPUT«0␤»

[20:22] <TimToady> Doesn't putting Python references into our advent postings violate our anti-anti-lol policy somehow?

[20:26] *** denisboyun joined
[20:27] *** rurban1 joined
[20:28] *** rurban2 joined
[20:31] *** rurban1 left
[20:33] *** rurban2 left
[20:34] <jnthn> um...seems nqp-p.bat on windows ends up containg a shell script. wtf.

[20:35] <lue> jnthn: maybe it's a BATch of shell scripts? :)

[20:38] <jnthn> I can't actually figure out where gen\parrot\nqp_launcher comes from...

[20:39] <jnthn> fill_template_file('src/vm/parrot/nqp.sh', 'gen/parrot/nqp_launcher', %config);

[20:39] <jnthn> ...oh.

[20:41] <lue> ? wouldn't/shouldn't that be parrot's built-in nqp there?

[20:42] <jnthn> huh?

[20:42] <jnthn> No, it should have a conditional and use the nqp.bat on Windows.

[20:47] *** raiph left
[20:51] *** raiph joined
[20:51] <sjohnson> anti-lol = no laughing

[20:51] *** denisboyun left
[20:53] <dalek> nqp/indy-args: ee45ffe | jnthn++ | / (2 files):

[20:53] <dalek> nqp/indy-args: Fix NQP runner on Windows, so make test works.

[20:53] <dalek> nqp/indy-args: review: https://github.com/perl6/nqp/commit/ee45ffe9e9

[20:53] <dalek> nqp/indy-args: ed3c300 | jnthn++ | src/QAST/Node.nqp:

[20:53] <dalek> nqp/indy-args: Fix build on Parrot after indy-args work.

[20:53] <dalek> nqp/indy-args: review: https://github.com/perl6/nqp/commit/ed3c300166

[20:57] <colomon> rn: say 5 +< 8

[20:57] <camelia> rakudo-parrot dcf13b, rakudo-jvm dcf13b: OUTPUT«1280␤»

[20:57] <camelia> ..niecza v24-108-g17d73e4: OUTPUT«(timeout)[auto-compiling setting]␤»

[20:57] *** avuserow left
[21:00] <lue> r: my $a = 0x80; my int8 $b = 0x80; say ($a +< 1).fmt("%02X"); say ($a +< 1).fmt("%02X");

[21:00] <camelia> rakudo-parrot dcf13b, rakudo-jvm dcf13b: OUTPUT«100␤100␤»

[21:05] *** SevenWolf joined
[21:16] *** Entonian joined
[21:22] <dalek> Heuristic branch merge: pushed 28 commits to nqp by jnthn

[21:27] <lue> .oO(What is a heuristic branch merge anyway?)

[21:29] *** rurban1 joined
[21:31] *** xenoterracide joined
[21:32] <timotimo> turns out: no jvm work until now :P

[21:34] *** rurban1 left
[21:35] * colomon is trying to puzzle out enough of sorear++'s regex handler to fix sigspace

[21:36] <dalek> rakudo/nom: afb0511 | jnthn++ | src/Perl6/Optimizer.nqp:

[21:36] <dalek> rakudo/nom: Start trying to use callstatic where possible.

[21:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/afb05111bf

[21:36] <dalek> rakudo/nom: ceb7f13 | jnthn++ | src/Perl6/Optimizer.nqp:

[21:36] <dalek> rakudo/nom: Avoid double-walking trees in sink context.

[21:36] *** dalek left
[21:37] *** dalek joined
[21:37] *** ChanServ sets mode: +v dalek

[21:37] *** Entonian left
[21:39] <dalek> rakudo/nom: de5c8f8 | jnthn++ | tools/build/NQP_REVISION:

[21:39] <dalek> rakudo/nom: Bump NQP_REVISION.

[21:39] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/de5c8f874e

[21:46] <lee_> i'm getting an error trying to build the latest nqp-jvm (after a make clean)

[21:46] <lee_> https://gist.github.com/leedo/0243ac58685541a7bc1e

[21:46] <lee_> hope that is of some help

[21:46] <lee_> i should try a clean nqp checkout i guess

[21:46] <japhb> lue: It means dalek saw a big pile of commits, heuristically assumed they were from a branch merge, and rather than spam the channel, it just said it looked like a branch merge happened.

[21:47] *** ajr joined
[21:47] <jnthn> lee_: Ah...that looks like an error reporting fail due to the bootstrap using an old op, rather than a real failure...

[21:47] *** ajr is now known as Guest89226

[21:47] <lee_> trying a clean checkout

[21:47] *** Guest89226 is now known as ajr_

[21:48] <dalek> Heuristic branch merge: pushed 61 commits to rakudo/moar-support by jnthn

[21:48] <jnthn> uh, ratehr than *the* real failure

[21:48] <lue> japhb: I figured something like that, though perhaps "28 commits pushed to nqp by jnthn. That's quite a bit" or something would avoid having to guess things :)

[21:49] <jnthn> Anybody pushing that much at once is probably merging a branch. OR they just had a really long hacking vacation in a place without internets :)

[21:49] <lue> come to think of it, "28 commits pushed ... . Last of the commits is:" followed by the last commit in traditional dalek style might be a nice improvement.

[21:49] <japhb> It's getting harder and harder to have a hack vacation without internets.

[21:50] <jnthn> japhb: True that... :)

[21:50] <lue> (because the Heuristic message provides no links or anything to view what happened. Not that it's unbearable, but would be nice otherwise.)

[21:52] <jnthn> Anyway, the thing I just pushed was just sync'ing moar-support with the latest work from nom.

[21:52] *** kaare_ left
[21:52] <timotimo> and nqp's master branch now has all the goodies?

[21:52] <jnthn> Yeah

[21:52] <timotimo> yays

[21:52] <jnthn> indy-args is merged and gone.

[21:52] <lue> .oO( <dalek> 37 commits to branch foo by bar. EXPLAIN! )

[21:53] <lue> jnthn++ # merging work into master is always worth something :)

[21:53] <jnthn> And the Rakudo opts branch is merged into nom and gone.

[21:55] <timotimo> did moar-support get goodies, too?

[21:55] <timotimo> ah, yes

[21:55] <timotimo> cool

[21:55] <jnthn> I merged opts into nom before I merged nom into moar-support, yes.

[21:56] <jnthn> git++ # making this stuff easy

[21:58] <jnthn> I guess main question for the future is when we want to merge moar-support :)

[21:58] <jnthn> Probably when sanity test passes...

[21:59] <timotimo> sounds sane

[21:59] <jnthn> :P

[21:59] *** dmol left
[21:59] *** dmol joined
[22:00] <timotimo> huh, weird: No rule to make target `tools/build/create-moar-runner.pl', needed by `m-install'.  Stop.

[22:01] *** jeffreykegler joined
[22:02] <jnthn> You're trying to m-install it? :P

[22:02] <timotimo> i'm trying to -j3 install

[22:03] <timotimo> Heap corruption detected: pointer 0x2ae949585cf8 to past fromspace   so that wasn't fixed yet? :(

[22:03] <jnthn> No; didn't reproduce it locally here yet either.

[22:04] <timotimo> OK. i'll try to go at it again without --optimize

[22:04] <jnthn> Something happens when we build with --optimize.

[22:06] *** lizmat joined
[22:07] *** woolfy joined
[22:09] *** bluescreen100 joined
[22:10] *** bluescreen100 left
[22:10] *** bluescreen100 joined
[22:11] <lizmat> good *, #perl6!

[22:11] <lizmat> I just git pulled and tried to make install, and get:

[22:11] <lizmat> Error while compiling op call: Method 'jast' not found for invocant of class 'NQPMu'

[22:12] *** bluescreen10 left
[22:12] <lizmat> trying from a reconfigure again now

[22:13] <jnthn> You'll need an NQP update too, if you didn't already...

[22:13] <jnthn> I did bump NQP_REVISION, though...

[22:13] <lizmat> well, a simple make install didn't seem to pick that up

[22:14] <timotimo> yeah, that check only hppens when you run configure

[22:14] <lizmat> should it have?

[22:14] <lizmat> ah, ok

[22:14] *** zakharyas left
[22:16] <jnthn> Ah, I thought we'd got a makefile dependency on it...

[22:18] *** zakharyas joined
[22:19] <lizmat> compiled and installed ok now

[22:20] <lizmat> running spectest now

[22:21] <lizmat> oops, only configured ok until now... making now

[22:21] <jnthn> lizmat: For me, the latest stuff shaved nearly half a minute or so off spectest on JVM.

[22:22] <jnthn> lizmat: Hopefully it's a little faster for you too :)

[22:22] * lizmat hopes so too

[22:23] <timotimo> the stage after optimize for moarvm takes reeeeally long if you're not optimized

[22:23] <lizmat> btw, how do you run the spectests on JVM, without using the evalserver ?

[22:24] <timotimo> Unhandled exception: Cannot invoke this object - this is the one i should see, right? for Pod::To::Text?

[22:24] <timotimo> well, i get to a hello world \o/

[22:24] <lizmat> if I just do 'make j-spectest' , after about ~30 test files, it starts to say 'no subtests run'

[22:28] <jnthn> lizmat: No, I just make spectest

[22:28] <jnthn> timotimo: Yeah, though I think it's for Test.pm...

[22:28] <lizmat> with an TEST_JOBS setting ?

[22:28] <timotimo> you are right.

[22:29] * raydiak has to run and may be gone for many hours, but just so someone knows, day 8 advent post is in good shape and will be ready on time

[22:30] *** rurban1 joined
[22:31] *** denisboyun joined
[22:31] <jnthn> lizmat: Yeah, 6, iirc

[22:33] <lizmat> ah, not 8 then

[22:33] <lizmat> (which is what I use)

[22:34] *** rurban1 left
[22:35] <lizmat> t/spec/S05-mass/properties-script.rakudo.jvm ................. No subtests run   :-(

[22:36] <lizmat> runnint with TEST_JOBS=6 now

[22:42] <hoelzro> timotimo: ping

[22:44] <lizmat> Java HotSpot(TM) 64-Bit Server VM warning: Exception java.lang.OutOfMemoryError occurred dispatching signal SIGINT to handler- the VM may need to be forcibly terminated

[22:44] <lizmat> Exception in thread "Thread-0" 

[22:44] <lizmat> Exception: java.lang.OutOfMemoryError thrown from the UncaughtExceptionHandler in thread "Thread-0"

[22:44] <lizmat> jippie!

[22:44] <lizmat> :-(

[22:45] <lizmat> so I still can't do a JVM spectest  completely

[22:45] <diakopter> exceptionhandler threw an exception

[22:45] <diakopter> not very handled

[22:47] *** BenGoldberg joined
[22:48] <timotimo> hoelzro: pong

[22:48] <hoelzro> timotimo: is Starbound any good?

[22:51] *** filly joined
[22:52] *** woolfy left
[22:56] <TimK1> r: sub f(Array[Int] $a) { }; my Int @a = 1,2,3; f(@a)

[22:56] <camelia> rakudo-jvm de5c8f: OUTPUT«Nominal type check failed for parameter '$a'␤  in block  at /tmp/TmgGpkNk2u:1␤  in any eval at gen/jvm/stage2/NQPHLL.nqp:1086␤  in any evalfiles at gen/jvm/stage2/NQPHLL.nqp:1292␤  in any command_eval at gen/jvm/stage2/NQPHLL.nqp:1196␤  in any com…»

[22:56] <camelia> ..rakudo-parrot de5c8f: OUTPUT«Nominal type check failed for parameter '$a'; expected Array[Int] but got Array[Int] instead␤  in sub f at /tmp/tMT7em56P6:1␤  in block  at /tmp/tMT7em56P6:1␤  in any  at /tmp/tMT7em56P6:1␤  in any  at gen/parrot/stage2/NQPHLL.nqp:1146␤  in any…»

[22:57] <TimK1> Is that me or Rakudo getting confused? (Or a little of each?)

[22:57] <jnthn> Rakudo.

[22:57] <TimK1> OK. Thx.

[22:57] <timotimo> hoelzro: i like it. i've been playing with two friends

[22:57] <jnthn> sub f(Int @a) { ... } works

[22:57] <timotimo> the linux port is fine

[22:57] <hoelzro> I saw it like a week ago; the idea intrigued me

[22:57] <hoelzro> might have to pick it up =)

[22:58] <timotimo> there's a post on their blog telling you when the right moment to join the beta is

[22:58] <lizmat> parrot spectest ok

[22:58] <timotimo> at the moment you can expect frequent wipes of your worlds/characters, i bet

[22:58] <timotimo> and crazy loads of balancing changes

[22:58] <lizmat> seems to have gone down from 480 seconds to 440 seconds wallclock

[22:58] <lizmat> hmmm... that was testjobs=6

[22:58] <hoelzro> ouch

[22:58] <lizmat> trying again with testjobs=8

[22:58] <timotimo> 10%?

[22:59] *** Piers_ joined
[23:00] <Piers_> So... if a chap is interested in playing with Perl 6 and concurrency again, is it worth trying to play with MoarVM, or am I better off with the Java build?

[23:00] <timotimo> you'd have to wait a bit longer to play with concurrency on moarvm i'm afraid

[23:00] <timotimo> we just got to hello world this week

[23:00] * Piers_ grins.

[23:00] <Piers_> Congrats!

[23:01] <timotimo> (though hello world on rakudo means a whole lot already)

[23:01] * hoelzro isn't sure if 10% was referring to a Perl 6 thing or a Starbound thing

[23:01] <Piers_> Yeah.

[23:01] <timotimo> hoelzro: that was the speed improvement

[23:01] <timotimo> a bad estimae, though. would be more like 8%

[23:01] <hoelzro> ah, ok

[23:02] <timotimo> if you'd like, we can hop onto mumble or something and i'll host a game (but i'm out of the house right now)

[23:02] <hoelzro> maybe another night

[23:03] <hoelzro> almost bed time for me =)

[23:03] <jnthn> Yes, JVM is the thing to use to play with concurrency stuff

[23:03] <timotimo> sure

[23:05] <Piers_> Any timetable for getting concurrency into Moar?

[23:06] <jnthn> Piers_: I'm currently thinking that by March/April is realistic.

[23:06] <lizmat> down from 480 to 420, so about 12.5% faster in the spectest (for rakudo)

[23:06] <Piers_> jnthn: Brilliant.

[23:07] <Piers_> Can't remember if I said, but the Perl 6 stuff at YAPC::Eu this year was about the only stuff I thought was exciting.

[23:08] * jnthn will try to have even more exciting things for YAPC::EU 2014 :)

[23:08] <colomon> Piers_!  o/

[23:08] <colomon> jnthn: please don't wait that long to be exciting.  ;)

[23:09] <Piers_> Hmm... do I need a specific nqp branch to build rakudo@nom? Just did 'perl ./Configure.pl --gen-nqp --backends=jvm' and had it barf with NoSuchMethodError

[23:09] * lizmat is tired of parler franglais all day, with some double dutch intermixed

[23:09] <lizmat> sleep&

[23:09] <colomon> Piers_: should be automatic.

[23:10] <colomon> I always do it perl ./Configure.pl --gen-parrot --backends=jvm

[23:10] <Piers_> Hrm... hang on, I'll nopaste the error.

[23:10] *** btyler_ joined
[23:10] <colomon> (and yes, that makes no sense to me.)

[23:10] <jnthn> colomon: you...what... :)

[23:10] <colomon> jnthn: is that not how you're supposed to do it?

[23:10] <jnthn> colomon: I'm just a bit surprised at the mix of --gen-parrot and --backends=jvm :)

[23:11] <jnthn> colomon: Does it add parrot into the backends list automatically? 

[23:11] <Piers_> Error: https://gist.github.com/pdcawley/41c4e3b44bebea9cef5f

[23:11] <colomon> jnthn: … I don't think so?

[23:11] <Piers_> Arse. Meant --gen-nqp

[23:11] <lue> .oO(The Norweigian Blue 'asn't 'ad its coffee this mornin'!)

[23:11] <Piers_> (which is what I actually _typed_)

[23:11] <colomon> jnthn: trying to build from scratch now

[23:12] <jnthn> Piers_: Hm, somebody else got that earlier...

[23:12] <jnthn> Piers_: Was this a clean checkout?

[23:12] <Piers_> Think so. I'll zap it.

[23:12] *** btyler left
[23:16] <hoelzro> so, I've been looking at that odd assignment issue I discovered yesterday

[23:16] <hoelzro> I discovered that the --target=parse output differs, which is...odd

[23:16] <hoelzro> now I'm searching for a debugging technique to print out what matched a rule at the end of a rule in Perl6::Grammar

[23:16] <hoelzro> any pointers?

[23:17] <jnthn> If it's just the one, then throw in a { say($/) } at the end of it...

[23:17] <Piers_> jnthn: That seems to have helped, btw - it seems to have got past where it fell over last time.

[23:18] * perigrin isn't used to Piers_ being named Piers_ ... *visibly*

[23:20] <hoelzro> ok, wasn't sure if that work

[23:20] <hoelzro> *would work

[23:20] <hoelzro> maybe I should stop working...

[23:20] *** Piers_ is now known as pdcawley

[23:20] <pdcawley> perigrin: better?

[23:20] <jnthn> pdcawley: Phew. :)

[23:21] <pdcawley> Hmm... configure is now failing with an OutOfMemory error trying to build QAST.jar

[23:23] <colomon> jnthn: just rebuilt from scratch with perl Configure.pl --gen-parrot --backends=jvm, seems to have worked perfectly, no obvious signs that it created a parrot

[23:23] <japhb> Oh panda, why are you not doing anything at all?

[23:24] <perigrin> pdcawley: *much* :)

[23:25] *** btyler_ left
[23:26] <pdcawley> I'm 'Piers' on the work IRC 'cos there's a pdm on there as well and boss's 'type two letters and hit tab' practice falls over hard in the face of that. So, I've accommodated him.

[23:27] <jnthn> japhb: Earlier, it was 'cus it couldn't reach the module list on feather...

[23:29] * pdcawley tries setting JAVAC to 'javac -Xms500m -Xmx2g' before running Configure.pl to see if that helps.

[23:29] <pdcawley> Arse... no it won't 'cos it's running 'java'

[23:30] *** denisboyun left
[23:30] <colomon> pdcawley: what version of java are you running?

[23:30] <japhb> jnthn: Oh, interesting.  I wonder if it's having that problem again ....

[23:30] <japhb> Is there a way to get it to be verbose enough to tell?

[23:31] <japhb> (Because I can't install the debugger in order to use it, and panda seems to be locking up on startup)

[23:31] <jnthn> japhb: I'd guess if left long enough it *should* get a network timeout?

[23:32] <jnthn> japhb: Not sure how well debugger installs for JVM yet, btw. I did most of the other things it needed...

[23:32] <jnthn> japhb: Bad news is that it doesn't know anything about threads yet so it gets REALLY confused.

[23:32] <japhb> Oh, I bet!

[23:33] <jnthn> Well, my 2012 YAPC::EU talk was "a debugger for Perl 6" and my 2013 one was "concurrency stuff", so I guess 2014 can be "a debugger with support for concurrent stuff in Perl 6" :)

[23:34] <japhb> heh

[23:34] <jnthn> Having the debugger actually be clueful about promises, channels, etc is probably a good idea. :)

[23:34] <japhb> Oh yeah, I can connect to feather.perl6.nl:3000 just fine, but sending the GET /projects.json HTTP/1.0<ret><ret> just sleeps

[23:34] <japhb> WTH?

[23:35] <jnthn> I've no idea how that's actually set up...

[23:36] <japhb> Methinks there ought to be a fallback.  Redundancy for the win.

[23:37] <pdcawley> colomon: 1.7.0_25

[23:37] <pdcawley> on a mac.

[23:37] * pdcawley tweaks nqp/tools/build/Makefile-JVM.in

[23:37] <pdcawley> tries again.

[23:37] <hoelzro> so...

[23:38] <pdcawley> jnthn: There's a perl 6 debugger?

[23:38] <hoelzro> <EXPR('e=')>

[23:38] <pdcawley> awesome!

[23:38] *** Grrrr left
[23:38] <hoelzro> that's expressions with a precedence greater than e?

[23:38] *** Grrrr joined
[23:38] *** tgt left
[23:39] <pdcawley> Yay! That built it.

[23:39] <colomon> pdcawley: that's actually more …. yay!

[23:39] <colomon> what did you change?

[23:40] <pdcawley> tweaked Makefile-JVM.in to add -Xms500m -Xmx2g to the 'JAVA' variable.

[23:40] <lue> hoelzro: no, that just means precedence level 'e'.

[23:40] <pdcawley> Pretty much cargo culting from README.md

[23:41] <hoelzro> lue: so what does that actually match?

[23:41] * jnthn finally found time to scribble a short blog post: http://6guts.wordpress.com/2013/12/07/a-few-quick-updates/

[23:42] *** mtk left
[23:42] <lue> Any operator registered as having a precedence level of 'e'. In rakudo's grammar, this would be anything that falls under the %list_prefix category (search for the INIT { } block)

[23:42] <hoelzro> I see

[23:42] <hoelzro> hmm

[23:43] *** pecastro joined
[23:45] <lue> I'm sure jnthn or others can tell you if there are such things as e> or d<= . I'm guessing not :) .

[23:45] <hoelzro> I don't see anything tagged with list_prefix =/

[23:45] <jnthn> The thing past to EXPR is actually a precedence limit.

[23:45] *** mtk joined
[23:46] <jnthn> Encountering aAnything looser causes EXPR to consider its work done.

[23:46] *** mtk left
[23:47] *** mtk joined
[23:47] <hoelzro> I see

[23:48] <hoelzro> it seems like parsing this one line alters some state in the parser somehow

[23:48] <hoelzro> and makes things angry.

[23:48] <jnthn> Which one line?

[23:48] *** thou left
[23:49] <hoelzro> https://rt.perl.org/Public/Bug/Display.html?id=120704

[23:49] <hoelzro> "@!values[0] = 1;"

[23:49] <hoelzro> I've been trying really hard to fix this one

[23:49] <hoelzro> but not making a lot of headway =/

[23:49] <jnthn> That's not a parsing issue at all.

[23:49] <hoelzro> it's not?

[23:49] * hoelzro headdesks

[23:49] <jnthn> I don't think so.

[23:49] <hoelzro> or head tables

[23:50] <jnthn> I think it correctly gets interpreted as

[23:50] <jnthn> my $value = (@!values[0] = @!values.pop);

[23:50] <jnthn> So the assoc is OK

[23:50] <jnthn> But the problem is then when it gets sent down for code-gen.

[23:50] <hoelzro> I assumed it was, considering that perl6 --target=parse produces wildly different output if that line is commented out

[23:51] <jnthn> We emit the code to evaluate @!values[0] before the code to evaluate @!values.pop. For most operators this doesn't matter. For = it rather does...

[23:51] <jnthn> Thing is, that worked at some point.

[23:51] <hoelzro> then why does it work if I comment out line 12?

[23:52] <jnthn> Line 12 of...?

[23:53] <jnthn> r: my @values = 1,2; my $value = (@values[0] = @values.pop); say $value; say @values;

[23:53] *** PacoAir left
[23:53] <camelia> rakudo-parrot de5c8f, rakudo-jvm de5c8f: OUTPUT«2␤2␤»

[23:53] <lue> jnthn: the bug report has a odd.t attachment

[23:53] <jnthn> Oh...

[23:53] * colomon 's Mac compiles the JVM stage parse faster than his Linux box does.  I think the Linux box wins handily compiling Parrot stage parse.  Weird.

[23:54] <hoelzro> sorry, maybe I should've been more specific

[23:54] <hoelzro> the standalone example works

[23:54] <hoelzro> (which lead to a lot of headscratching)

[23:55] <lue> r: class Foo { has @!values = 1,2; method Bar { my $value = (@!values[0] = @!values.pop); say $value; say @!values; } }; Foo.Bar;

[23:55] <camelia> rakudo-jvm de5c8f: OUTPUT«Cannot look up attributes in a type object␤  in method Bar at /tmp/bk9dWyUPXD:1␤  in block  at /tmp/bk9dWyUPXD:1␤  in any eval at gen/jvm/stage2/NQPHLL.nqp:1086␤  in any evalfiles at gen/jvm/stage2/NQPHLL.nqp:1292␤  in any command_eval at gen/jvm/…»

[23:55] <camelia> ..rakudo-parrot de5c8f: OUTPUT«Cannot look up attributes in a type object␤  in method Bar at /tmp/vbFuQ07kG5:1␤  in block  at /tmp/vbFuQ07kG5:1␤  in any  at /tmp/vbFuQ07kG5:1␤  in any  at gen/parrot/stage2/NQPHLL.nqp:1146␤  in any eval at gen/parrot/stage2/NQPHLL.nqp:1133␤…»

[23:55] <jnthn> um...oh...wtf.

[23:55] <lue> r: class Foo { has @!values = 1,2; method Bar { my $value = (@!values[0] = @!values.pop); say $value; say @!values; } }; Foo.new.Bar;

[23:55] <camelia> rakudo-parrot de5c8f, rakudo-jvm de5c8f: OUTPUT«2␤2␤»

[23:55] <colomon> pdcawley: I don't have any difficulties compiling JVM Rakudo from scratch on my Mac.  10.8, Java 1.7.0_04-b20

[23:55] <lue> r: class Foo { has @!values = 1,2; method Baz { @!values[0] = 5; }; method Bar { say @!values, "---"; my $value = (@!values[0] = @!values.pop); say $value; say @!values; } }; Foo.new.Bar;

[23:56] <camelia> rakudo-parrot de5c8f, rakudo-jvm de5c8f: OUTPUT«1 2---␤2␤2␤»

[23:56] <jnthn> hoelzro: OK, so...I see what you're seeing with commetning that line out.

[23:56] <jnthn> OK, there is more going on there then. wtf.

[23:56] <hoelzro> ok, good

[23:56] <hoelzro> I'm not crazy!

[23:56] <lue> Oh Oh Oh! hoelzro: get rid of the parens around (84, 85), what happens then?

[23:56] <hoelzro> hmm

[23:56] * hoelzro tries

[23:56] <hoelzro> still broken =/

[23:57] <pdcawley> colomon: Strange.

[23:57] <lue> r: class Foo { has @!values = (1,2); method Baz { @!values[0] = 5; }; method Bar { say @!values, "---"; my $value = (@!values[0] = @!values.pop); say $value; say @!values; } }; Foo.new.Bar;

[23:57] <camelia> rakudo-parrot de5c8f, rakudo-jvm de5c8f: OUTPUT«1 2---␤2␤2␤»

[23:57] <hoelzro> I've tried adding a bunch of output to the grammar/actions to try and understand it better, but I don't think I have enough experience to find out what's really going on.

[23:57] <pdcawley> colomon: 10.9 here.

[23:57] <hoelzro> I'd like to fix this myself

[23:57] <pdcawley> Anyway, it built now.

[23:57] <hoelzro> because it "seems" simple enough for me to fix

[23:58] *** mtk left
[23:58] <jnthn> hoelzro: Interestingly, if you just mention @!values on the last line of that method it's enough.

[23:58] <lue> hoelzro: does it happen on the first pop or the second? /me copies over the file now locally

[23:58] <jnthn> uh, not

[23:58] <hoelzro> lue: it should be screwed up for both

[23:58] <jnthn> Yeah, there has to be the assignment there

[23:59] <hoelzro> but it works for length 1, I believe

[23:59] <hoelzro> because @!values[@!values.end] == @!values[0] there

[23:59] <hoelzro> so I probably could omit the second call to pop

[23:59] <hoelzro> this came up while I was implementing a min heap for fun

