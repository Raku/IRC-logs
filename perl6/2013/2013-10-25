[00:00] *** jnap joined
[00:00] *** dansamo joined
[00:12] *** Psyche^ joined
[00:15] *** Psyche^_ left
[00:17] *** dansamo left
[00:28] *** jnap left
[00:28] *** genehack joined
[00:29] *** hypolin joined
[00:30] *** hypolin left
[00:31] *** hypolin joined
[00:36] *** fridim_ joined
[00:42] *** sftp joined
[00:44] *** LWA left
[00:55] *** ajr_ left
[01:10] *** sizz left
[01:18] *** jnap joined
[01:18] *** dmol left
[01:24] *** sizz joined
[01:35] *** SmokeMachine joined
[01:41] *** jnap left
[02:53] *** wbill joined
[02:54] *** benabik left
[02:59] *** benabik joined
[03:35] *** preflex left
[03:35] *** preflex_ joined
[03:35] *** ChanServ sets mode: +v preflex_

[03:36] *** preflex_ is now known as preflex

[03:40] *** fridim_ left
[03:53] *** BenGoldberg left
[03:57] *** rajeshg007 joined
[03:58] *** rajeshg007 left
[04:22] *** [Sno] left
[04:32] <Mouq> https://github.com/perl6/std/commit/fadaff1e

[04:50] <Mouq> https://github.com/rakudo/rakudo/commit/1b6cbf6

[04:55] <Mouq> std: s||| <-- STDBug

[04:55] <camelia> std 082981d: OUTPUT«===SORRY!===␤Unrecognized regex metacharacter < (must be quoted to match literally) at /tmp/RHgx0p84GT line 1:␤------> s||| <⏏-- STDBug␤Can't call method "from" on unblessed reference at STD.pm line 54407.␤FAILED 00:…»

[04:58] <Mouq> std: s&&& #?

[04:58] <camelia> std 082981d: OUTPUT«===SORRY!===␤Regex not terminated at /tmp/E66xfkDwP7 line 1 (EOF):␤------> s&&& #?⏏<EOL>␤Parse failed␤FAILED 00:01 120m␤»

[05:01] <TimToady> std: s|x||

[05:01] <camelia> std 082981d: OUTPUT«ok 00:01 122m␤»

[05:01] <TimToady> it's the initial || or && thing

[05:03] <TimToady> I guess the code is assuming you're smart enough not to expect a null regex to be meaningful there :)

[05:03] <TimToady> so it's one of those bugs that well-meaning people will never see...

[05:04] <TimToady> std: s|||a||b||c||

[05:04] <camelia> std 082981d: OUTPUT«===SORRY!===␤Unsupported use of suffix regex modifiers; in Perl 6 please use prefix adverbs at /tmp/OSuxjd9E8l line 1:␤------> s|||a||b⏏||c||␤Parse failed␤FAILED 00:01 121m␤»

[05:04] <TimToady> heh

[05:04] <TimToady> now that's probably a realer bug

[05:05] <TimToady> or not, depending on how you think of it

[05:05] <TimToady> it's definitely close to the DIHWIDT category

[05:05] * Mouq has no idea what s|||a||b||c|| is supposed to be

[05:05] <moritz> \o

[05:05] <TimToady> std: s/||a||b||c//

[05:06] <camelia> std 082981d: OUTPUT«ok 00:01 122m␤»

[05:06] <moritz> Mouq: s/// can have custom delimiter characters

[05:06] <TimToady> but the parser does check for terminator before || where normal ops can be, just not the leading one, which is special-cased

[05:06] <moritz> Mouq: seems it was an attempt to use || as delimiter

[05:06] <TimToady> well, ||| since it was a subst :)

[05:08] <Mouq> Ah. I wasn't reading the last || as |{''}|

[05:08] <TimToady> the line in question is in nibbler,         [ <.normspace>? < || | && & > ]?

[05:09] <TimToady> that allows a null first case dis or conjunction

[05:09] <Mouq> [ <.normspace>? <!stopper> < || | && & > ]?

[05:09] <TimToady> it's eating the || and then expecting more cases

[05:09] <TimToady> could fix that, if it really needs fixing :)

[05:10] <TimToady> can't hurt, I suppose

[05:10] <TimToady> probably closer to what the user was expecting, so I guess it's good

[05:10] * Mouq is just looking at this stuff to try to get s&a&b& etc. working on the stdsigspace branch

[05:11] * Mouq is almost up to spectest

[05:12] <TimToady> Mouq++  # persistence

[05:13] <Mouq> The big thing I don't know how to fix is that sigspace calls <.ws>, but not the locally defined <.ws> :( It appears to have done so before, which is weird since I haven't changed the ast generated much

[05:15] <TimToady> why is ws locally defined?  the std grammar doesn't redefine it...

[05:16] <TimToady> if something more specialized eats the ws first, then any ws called from EXPR is a no-op

[05:17] *** SamuraiJack joined
[05:17] <Mouq> rn: grammar A { token ws { x }; rule foo {foo bar} }; 'fooxbar' ~~ /<A::foo>/

[05:17] <camelia> rakudo 2ce544: ( no output )

[05:17] <camelia> ..niecza v24-98-g473bd20: OUTPUT«Unhandled exception: Cannot dispatch to a method on A because it is not inherited or done by Cursor␤  at /home/p6eval/niecza/lib/CORE.setting line 288 (Mu.dispatch:<::> @ 4) ␤  at /tmp/YKc8wUz4OW line 1 (ANON @ 4) ␤  at /home/p6eval/niecza/lib/CO…»

[05:17] <lue> .oO(When is s# # # going to work? I don't think I can go on without it.)

[05:17] <Mouq> r: grammar A { token ws { x }; rule foo {foo bar} }; say 'fooxbar' ~~ /<A::foo>/

[05:17] <camelia> rakudo 2ce544: OUTPUT«｢fooxbar｣␤ A::foo => ｢fooxbar｣␤␤»

[05:18] <TimToady> std: s♯foo♯bar♯

[05:18] <camelia> std 082981d: OUTPUT«ok 00:01 122m␤»

[05:18] <TimToady> there you go

[05:19] <Mouq> Oh, wait. It does work now. What do ya know?

[05:19] <Mouq> *on stdsigspace

[05:20] *** SmokeMachine left
[05:21] *** SmokeMachine joined
[05:25] *** SmokeMachine left
[05:29] <lue> std: m☃canhaz☄

[05:29] <camelia> std 082981d: OUTPUT«===SORRY!===␤Unrecognized regex metacharacter ☄ (must be quoted to match literally) at /tmp/VW1r5W4rMT line 1:␤------> m☃canhaz☄⏏<EOL>␤Couldn't find terminator ☃ at /tmp/VW1r5W4rMT line 1 (EOF):␤------> …»

[05:31] <TimToady> all you have to do is persuade the Unicode consortium to define those as a matched pair

[05:31] <lue> .oO(Stupid STD, ☃ is only part of Ps, not Pe)

[05:32] <TimToady> you can't fight The (snow)Man

[05:33] <lue> I'll find the more artistically-minded members of the consortium and send them a letter "On Symbolism of the disjunction between Earth and Space, expressed through officially-recognized character pairings."

[05:34] <TimToady> fortunately or unfortunately, they really believe in the "uni" part of what they're doing :)

[05:35] <TimToady> what you really need to do is persuade them to add characters like COMBINING LEFT BRACKETNESS and COMBINING RIGHT BRACKETNESS

[05:37] <lue> COMBINING PS CONTROL ADVERB :) [hey, they already got the LTR/RTL indicators...]

[05:38] <lue> "Because sometimes mathematicians do crazy stuff like [0,∞[ and it'd be nice to let my text editor know that the second [ is supposed to be Pe, not Ps."

[05:38] <TimToady> might be a tough sell, though, considering how all the other char traits tend to stick to the base char, not the combiners...

[05:39] <TimToady> so what you need is just a LEFT BRACKETNESS character with a COMBINING IS REALLY THE FOLLOWING CHARACTER

[05:40] *** FROGGS left
[05:40] <TimToady> to the first approximation, mathematicians should be ignored rather than shot

[05:43] <lue> Curse you TimToady, for I now wish to attempt the most high-brow letter for such a proposal. But tomorrow o/

[05:43] *** denis_boyun joined
[05:48] <diakopter> TimToady: in that case, the first approximation has about 1 significant digit and a thousand degrees of freedom

[05:49] <TimToady> To whomever eventually stoops so low as to canvas these logs for more cute sayings of mine to inflict on the quote files of the world, please feel free to capitalize my sentences and put punctuation on the end without extra annotations like those silly brackets you always see.  Thank you.

[05:52] *** xenoterracide left
[05:52] <Mouq> n: my \term:<❄> = "☃☃".ords;say ->$a,$b{->$snow-flakes{eval "('$a'.comb$snow-flakes'$b'.comb)$snow-flakes❄"}(Q ☃ **☃ )+$a.comb*$b.comb*1000+❄}(|<sno w!!>).chr

[05:52] <camelia> niecza v24-98-g473bd20: OUTPUT«☃␤»

[05:52] *** [Sno] joined
[05:54] <Mouq> n: my \term:<❄> = "☃☃".ords;say ->$left-hand,$right-hand{->$snow-flakes{eval "('$left-hand'.comb$snow-flakes'$right-hand'.comb)$snow-flakes❄"}(Q ☃ **☃ )+$left-hand.comb*$right-hand.comb*1000+❄}(|<sno w!!>).chr

[05:54] <camelia> niecza v24-98-g473bd20: OUTPUT«☃␤»

[05:54] <Mouq> ^^ Slightly more poetic

[05:54] *** kaleem joined
[05:58] <Mouq> n: my \term:<❄> = "☃☃".ords; my \term:<❆> = ❄+❄+so True; say ->$left-hand,$right-hand{->$snow-flakes{eval "('$left-hand'.comb$snow-flakes'$right-hand'.comb)$snow-flakes❄"}(Q ☃ **☃ )+$left-hand.comb*$right-hand.comb*❆*❆*❄*❆*❄*❄+❄}(|<sno w!!>).chr

[05:58] <camelia> niecza v24-98-g473bd20: OUTPUT«☃␤»

[06:00] <TimToady> amazing what you can make with two hands and five fingers each

[06:01] <TimToady> maybe you can use ✌ and ✋

[06:13] <dalek> nqp/stdsigspace: 3cfcbaa | Mouq++ | src/QRegex/P6Regex/ (2 files):

[06:13] <dalek> nqp/stdsigspace: Fixes to work correctly on Rakudo

[06:13] <dalek> nqp/stdsigspace: review: https://github.com/perl6/nqp/commit/3cfcbaaa4a

[06:15] <dalek> nqp/stdsigspace: 9a1455c | (Tobias Leich)++ | src/vm/moar/ (2 files):

[06:15] <dalek> nqp/stdsigspace: wire up and use nqp::backendconfig

[06:15] <dalek> nqp/stdsigspace: 

[06:15] <dalek> nqp/stdsigspace: This is just lacking a fresh stage0 to work.

[06:15] <dalek> nqp/stdsigspace: review: https://github.com/perl6/nqp/commit/9a1455cc85

[06:15] *** dalek left
[06:15] *** dalek joined
[06:15] *** ChanServ sets mode: +v dalek

[06:19] * Mouq makes pull requests for nqp and rakudo

[06:25] <Mouq> I also have updates to roast to get it up to spec that I'll push when (slash if) the PRs get accepted

[06:25] <Mouq> Or should I push them now?

[06:26] <TimToady> dunno, probably need to collect more opinions on that

[06:26] <TimToady> .oO(push driven development)

[06:27] <TimToady> long run, can't hurt, but maybe someone has a good reason to hold off short-term

[06:28] <TimToady> otoh, if the new tests are closer to spec, who's to complain?

[06:29] <TimToady> only fudgers, I guess

[06:29] <TimToady> but hey, fudgers are people too

[06:35] <Mouq> How do you throw unthrown exceptions in NQP?

[06:39] *** darutoko joined
[06:43] *** denis_boyun__ joined
[06:44] <moritz> Mouq: you can push the roast changes in branches

[06:45] <moritz> Mouq: there are no NQP-level unthrown exceptions, afaict. a Perl 6 failure can be thrown simply calling .Str, for example

[06:45] <moritz> (if it's not handled yet)

[06:45] *** denis_boyun left
[06:46] <moritz> Mouq++ # stdsigspace

[06:49] <masak> morning, #p6

[06:49] <moritz> masak, masak

[06:50] <dalek> roast/stdsigspace: 5e06d2c | Mouq++ | S05- (4 files):

[06:50] <dalek> roast/stdsigspace: Test for sigspace semantics correctly

[06:50] <dalek> roast/stdsigspace: review: https://github.com/perl6/roast/commit/5e06d2c4ac

[06:50] <dalek> roast/stdsigspace: d20823e | Mouq++ | S05-mass/rx.t:

[06:50] <dalek> roast/stdsigspace: Fix faulty regex tests

[06:50] <dalek> roast/stdsigspace: review: https://github.com/perl6/roast/commit/d20823eda6

[06:51] <masak> moritz: http://www.masak-masak.blogspot.se/

[06:51] <masak> "Malaysian food adventures (and mishaps)"

[06:52] <moritz> masak: :-)

[06:52] <masak> seems "masak" is Malay for "cook" or "cooked" or "ripe".

[06:53] <moritz> ripe, cooked masak!

[06:56] <dalek> rakudo/nom: e51cbdd | moritz++ | / (3 files):

[06:56] <dalek> rakudo/nom: [Configure] [JVM] move some generated files to gen/jvm/

[06:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e51cbdda8b

[06:56] <dalek> rakudo/nom: 8b61933 | moritz++ | tools/build/Makefile-Parrot.in:

[06:56] <dalek> rakudo/nom: [Build] [parrot] generate some files in gen/parrot/

[06:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8b619339aa

[06:56] <dalek> rakudo/nom: 73344a6 | moritz++ | LHF.markdown:

[06:56] <dalek> rakudo/nom: remove LHF.markdown (out of date)

[06:56] <dalek> rakudo/nom: 

[06:56] <dalek> rakudo/nom: all the TODOs in there are already done, and nom has been the

[06:56] <dalek> rakudo/nom: default branch for quite some time

[06:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/73344a6edf

[07:01] <hoelzro> o/ #perl6

[07:02] <moritz> \o hoelzro, *

[07:07] *** FROGGS joined
[07:16] *** kaleem left
[07:17] <moritz> any objections to merging Mouq++'s stdsigspace branches?

[07:18] *** dansamo joined
[07:18] <Mouq> moritz: me!

[07:18] <moritz> Mouq: you object?

[07:19] <moritz> how very OO :-)

[07:19] <Mouq> Heh. Give a minute to compile and I can fix the bug with not throwing null regex exceptions

[07:19] <moritz> Mouq: ok. Don't hurry :-)

[07:20] * masak decides to play bad cop

[07:20] <masak> Mouq: hurry! go go go go!

[07:21] <masak> compile faster!

[07:21] <moritz> masak: we should really try good cop/bad cop in real life at some point :-)

[07:22] <masak> oh man.

[07:22] <masak> yes.

[07:22] <FROGGS> we should totally invent a board or card game where one is the null pmc access and the others need to catch (or rethrow) it

[07:22] <masak> moritz: complete with throwing Mouq in an actual interrogation room and everything. :P

[07:23] <moritz> masak: and the good cop handing out chocolate and the bad cop handing out super spicy chilli sweets or so :-)

[07:23] <masak> djungelvrål :)

[07:24] <arnsholt> Salmiak is fun for terrorizing non-Scandinavians =D

[07:24] <masak> no, the bad cop goes "YOU THINK I'M GOING TO GIVE YOU CANDY, DO YOU? DO YOU!?"

[07:24] <FROGGS> http://www.youtube.com/watch?v=OtV47HMjmY8

[07:24] <moritz> masak: - "yes" - "AND YOU WOULD BE RIGHT! HERE YOU GO!"

[07:25] <FROGGS> with a flashlight pointing to mouq

[07:26] <masak> moritz: that's a rather agreeable bad cop ;)

[07:26] <arnsholt> FROGGS: Have you seen the DailyWTF guy's review of Salmiak? Pretty hilarious =D

[07:27] <FROGGS> arnsholt: umm, no :/

[07:27] <moritz> masak: I keep think of the Order of Chaos (HPMoR)

[07:28] <masak> yeah, chaotic cop.

[07:28] <arnsholt> FROGGS: http://www.salmiyuck.com/

[07:28] *** iSlug joined
[07:39] *** SmokeMachine joined
[07:42] <Mouq> r: my %objections = :Mouq<me>; %objections<Mouq>:delete; say +%objections

[07:42] <camelia> rakudo 2ce544: OUTPUT«0␤»

[07:45] <Mouq> moritz: If no one else objects, I'm okay with them being merged

[07:45] *** denis_boyun__ left
[07:45] <moritz> Mouq: I'll wait for jnthn to wake up before merging

[07:46] <Mouq> Fine by me

[07:46] * Mouq bed &

[07:46] <moritz> good night, and dream of correctly sig'ed spaces

[07:48] *** Mouq left
[07:51] <masak> not to mention correctly spaced sigs.

[07:51] <masak> plane &

[07:58] *** LWA joined
[08:01] *** zakharyas joined
[08:15] *** kaleem joined
[08:40] *** SmokeMachine left
[08:46] *** SmokeMachine joined
[08:46] *** dmol joined
[08:50] *** fhelmberger joined
[08:59] *** pernatiy left
[09:01] *** darutoko- joined
[09:02] *** darutoko left
[09:06] <jnthn> morning o/

[09:06] <yoleaux> 07:46Z <nwc10> jnthn: hide from moritz :-)

[09:06] <hoelzro> ahoy jnthn 

[09:07] <jnthn> .oO( how do you hide on IRC? :) )

[09:09] *** iSlug left
[09:10] <hoelzro>  /hide?

[09:19] <jnthn> Was there not some unresolved issue with sigspace + nqp-m?

[09:21] <moritz> jnthn: I hope that's resolved; the pull request contains a Moar bootstrap update

[09:21] <moritz> but I guess I should run tests with moar

[09:24] <jnthn> I'm curious how the Moar bootstrap update was done

[09:24] <jnthn> Given it has no make bootstrap-files target yet

[09:24] <jnthn> Because we're not quite ready to commit to bytecode back-compat yet.

[09:28] <moritz> but ins't that same problem with the existing bootstrap files?

[09:29] <moritz> erm, rephrase

[09:29] <moritz> don' the existing bootstrap files have the exact same problem?

[09:32] <jnthn> No because for now we re-generate stage0 from the cross-compiler

[09:32] <jnthn> So I'm curious if that was also updated

[09:32] <jnthn> (And if so where the PR for it is.)

[09:37] <moritz> jnthn: ah, so a possible approach would be to merge the code into MoarVM/nqp-cc too... and then, does it matter which compiler generated the bootstrap files for NQP?

[09:37] *** daxim joined
[09:37] *** hypolin left
[09:37] *** iSlug joined
[09:40] <jnthn> moritz: Yeah, though maybe simpler for everyone is that I spend a couple of hours today looking over the bytecode stuff and figuring out what changes I'd like before we stabalize it.

[09:41] <jnthn> moritz: I don't think there'll be much.

[09:41] <moritz> jnthn: ok, then I'll simply wait for now

[09:44] *** xinming_ joined
[09:45] <jnthn> Yeah, I'll have time to do it in a little bit. Just got a couple of small $dayjob errands to take care of first.

[09:45] <moritz> ok, no hurry at all

[09:48] *** xinming left
[09:50] *** darutoko- left
[10:03] *** denis_boyun joined
[10:11] *** chayin joined
[10:17] *** woolfy1 joined
[10:17] *** woolfy left
[10:23] *** denis_boyun left
[10:26] *** SmokeMachine left
[10:41] *** dansamo left
[10:41] *** denis_boyun joined
[10:50] *** Gothmog_ joined
[10:54] *** wbill left
[10:54] *** SmokeMachine joined
[10:59] *** rindolf joined
[10:59] *** pernatiy joined
[11:08] *** iSlug left
[11:14] *** xenoterracide joined
[11:23] *** iSlug joined
[11:24] *** xinming_ left
[11:25] *** xinming joined
[11:31] *** stevan_ left
[11:34] *** wbill joined
[11:37] *** daxim left
[11:57] *** denis_boyun left
[12:01] <dalek> nqp: db75765 | jnthn++ | / (19 files):

[12:01] <dalek> nqp: Add m-bootstrap-files target; close the loop.

[12:01] <dalek> nqp: 

[12:01] <dalek> nqp: We now work the same way with MoarVM's stage0 as for JVM and Parrot.

[12:01] <dalek> nqp: Note this means that from here on, MoarVM must maintain bytecode

[12:01] <dalek> nqp: back-compat at least long enough to keep stage0 building!

[12:01] <dalek> nqp: review: https://github.com/perl6/nqp/commit/db7576522e

[12:02] <jnthn> .tell Mouq The bootstrap loop is closed on NQP on Moar now, and there's an m-bootstrap-files target. So it should be possible to do the sigspace updates for it also. :)

[12:02] <yoleaux> jnthn: I'll pass your message to Mouq.

[12:03] <jnthn> moritz: If you want to take the pull request and do that bit of the task, feel free also. :)

[12:08] *** Bzek joined
[12:11] *** benabik left
[12:12] *** pdurbin left
[12:25] *** daxim joined
[12:28] *** xenoterracide left
[12:31] *** ajr joined
[12:31] *** ajr is now known as Guest36135

[12:32] *** Guest36135 is now known as ajr_

[12:33] *** rhr joined
[12:42] <dalek> perl6-roast-data: 9f2ba87 | coke++ | / (3 files):

[12:42] <dalek> perl6-roast-data: today (automated commit)

[12:42] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/9f2ba871c1

[12:44] <[Coke]> niecza++

[12:46] *** adiz joined
[12:49] <jnthn> [Coke]: Something needs updating due to recent build changes?

[12:49] * [Coke] also gets the .../rakudo.parrot/install/bin/parrot: not found error during a parrot only build.

[12:49] <[Coke]> jnthn: yes, working on it

[12:50] <jnthn> k :)

[12:51] *** fhelmberger left
[12:54] <dalek> rakudo/nom: 2fceb75 | coke++ | Configure.pl:

[12:54] <dalek> rakudo/nom: build - fix typo, throw entire error message

[12:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2fceb75160

[12:56] * jnthn ducks to avoid being hit by a flying entire error message

[12:56] <dalek> rakudo/nom: 493505c | coke++ | Configure.pl:

[12:56] <dalek> rakudo/nom: this is perl 5. Also, iterate correct hash.

[12:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/493505cc64

[12:57] <moritz> and here I thought die() took a list, just like print()

[12:57] <[Coke]> here I thought I was editing perl 6. ;)

[12:58] *** sftp left
[12:58] <[Coke]> ooh, you made --gen-nqp work with jvm? nice.

[12:58] *** sftp joined
[12:58] <[Coke]> moritz: is "make all" still going to work if I do a build with backend=jvm || backend=parrot ?

[12:58] <[Coke]> (will I still get a ./perl6 in both cases?)

[13:00] <moritz> [Coke]: it totally should

[13:00] <[Coke]> excellent. I'm too lazy to wait and find out now, so we'll see after lunchtime. ;)

[13:00] <dalek> perl6-roast-data: 341cdae | coke++ | doit:

[13:00] <dalek> perl6-roast-data: no more merging in pugs results by hand

[13:00] <dalek> perl6-roast-data: 

[13:00] <dalek> perl6-roast-data: Either it runs on this machine, or it doesn't.

[13:00] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/341cdae90a

[13:00] <dalek> perl6-roast-data: b8880ca | coke++ | bin/rakudo. (2 files):

[13:00] <dalek> perl6-roast-data: track changes from new build setup.

[13:00] <dalek> perl6-roast-data: 

[13:00] <dalek> perl6-roast-data: moritz++

[13:00] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/b8880cabfa

[13:01] <[Coke]> There. anyone gets sad when pugs goes to zero, I could use your help getting it running on the "new" test box.

[13:07] <hoelzro> [Coke]: you're breathing new life into Pugs?

[13:08] <[Coke]> hoelzro: oh hellz no

[13:08] <[Coke]> I'm just keeping it on life support.

[13:08] <[Coke]> but I'm tired of doing the pugs run on feather and manually merging in the results to the run on the new test box.

[13:09] <masak> [Coke]++ # life support

[13:09] <[Coke]> I did a bunch of work about... a year ago? to fudge tests for pugs so we'd get an idea of how much of it was still spec/working. (about 1/3)

[13:09] <[Coke]> I think we got one or two ods back into bugs as a result, but only reaaaaaaaaly low hanging fruit.

[13:09] <[Coke]> *mods

[13:09] <[Coke]> into *pugs

[13:10] <[Coke]> wow.

[13:10] <[Coke]> -> Dayjob

[13:10] <masak> is there anything *other* than "give it a MOP" that could be done to Pugs that would be productive and interesting and -Ofun?

[13:10] <hoelzro> ah, I see

[13:11] <[Coke]> masak: not even that, if the last 2 years are any indication.

[13:11] <[Coke]> have fun, though. there's a perfectly good test suite to keep you honest in the meantime!

[13:11] <[Coke]> now really, dayjobbing.

[13:13] <masak> :)

[13:14] *** denis_boyun joined
[13:14] <moritz> masak: maybe bring the multi dispatcher to current spec?

[13:18] <masak> ooh

[13:27] *** PacoAir joined
[13:29] <colomon> [Coke]: yeah, the (rakudo parrot based) smoke test completely failed overnight too.

[13:31] *** darutoko joined
[13:32] <dalek> nqp/stdsigspace: db75765 | jnthn++ | / (19 files):

[13:32] <dalek> nqp/stdsigspace: Add m-bootstrap-files target; close the loop.

[13:32] <dalek> nqp/stdsigspace: 

[13:32] <dalek> nqp/stdsigspace: We now work the same way with MoarVM's stage0 as for JVM and Parrot.

[13:32] <dalek> nqp/stdsigspace: Note this means that from here on, MoarVM must maintain bytecode

[13:32] <dalek> nqp/stdsigspace: back-compat at least long enough to keep stage0 building!

[13:32] <dalek> nqp/stdsigspace: review: https://github.com/perl6/nqp/commit/db7576522e

[13:32] <dalek> nqp/stdsigspace: fa7ac95 | Mouq++ | / (19 files):

[13:32] <dalek> nqp/stdsigspace: Merge branch 'master' of https://github.com/perl6/nqp into stdsigspace

[13:32] <dalek> nqp/stdsigspace: review: https://github.com/perl6/nqp/commit/fa7ac95796

[13:32] <dalek> nqp/stdsigspace: e96eed0 | Mouq++ | src/vm/moar/stage0/ (11 files):

[13:32] <dalek> nqp/stdsigspace: Update MoarVM bootstrap

[13:32] <dalek> nqp/stdsigspace: review: https://github.com/perl6/nqp/commit/e96eed0265

[13:34] * moritz tries again to merge and test the branches

[13:37] *** adiz left
[13:37] *** benabik joined
[13:38] *** denis_boyun left
[13:40] *** kaleem left
[13:42] *** stevan_ joined
[13:45] *** kaare_ joined
[13:50] *** LlamaRider joined
[13:51] <LlamaRider> o/ #perl6

[13:51] <LlamaRider> Has any of you wonderful people successfully installed NativeCall for the JVM-based Rakudo?

[13:52] <diakopter> hi LlamaRider

[13:52] *** jnap joined
[13:53] <jnthn> LlamaRider: NativeCall on Rakudo JVM is still a work in progress, mostly by arnsholt++. It supports basic calls so far, but is missing (last I checked) the array/struct/callback bits.

[13:54] *** denis_boyun joined
[13:54] <LlamaRider> I see. Thanks jnthn! I guess it's back to Parrot for me then... only that Parrot stopped installing properly on Ubuntu 13.10 due to some missing Unicode support ... but hopefully it's just my local upgrade gone wrong somehow.

[13:54] <tadzik> do you have libicu installed?

[13:55] *** SmokeMachine left
[13:55] <LlamaRider> no and what's worse:    E: Unable to locate package libicu

[13:55] *** SmokeMachine joined
[13:55] <LlamaRider> seems it got torn out of universe (or wherever it was)

[13:56] <moritz> LlamaRider: libicu-dev?

[13:56] <diakopter> LlamaRider: libicu-dev I think

[13:57] <masak> LlamaRider! \o/

[13:58] <LlamaRider> libicu-dev is already the newest version.

[13:58] <LlamaRider> well that's good news

[13:58] <diakopter> LlamaRider: oh, the paths changed

[13:58] <diakopter> moritz: it's the header location change

[13:59] *** btyler joined
[13:59] <moritz> LlamaRider: I created a symlink /usr/include/unicode to  /usr/include/x86_64-linux-gnu/unicode and it fix parrot's icu detection

[14:00] *** SmokeMachine left
[14:01] <LlamaRider> moritz++ that worked!

[14:20] <dalek> nqp: bd56c4e | benabik++ | tools/build/Makefile-JVM.in:

[14:20] <dalek> nqp: Use configured prefix for JVM runner

[14:20] <dalek> nqp: 

[14:20] <dalek> nqp: $(PREFIX) has the DESTDIR prepended to the prefix, which is not what

[14:20] <dalek> nqp: we want when using a DESTDIR for packaging.

[14:20] <dalek> nqp: review: https://github.com/perl6/nqp/commit/bd56c4e4c4

[14:20] <benabik> Oh hey, I do have a commit bit.

[14:20] <moritz> benabik++

[14:20] * diakopter doubles it

[14:20] <benabik> I had half-expected that push to fail.

[14:22] *** araujo left
[14:22] *** araujo joined
[14:23] <masak> sorry to half-disappoint you :)

[14:24] <moritz> half-sorry to disappoint you :-)

[14:25] *** sftp left
[14:25] *** SamuraiJack left
[14:25] *** sftp joined
[14:28] *** iguano joined
[14:29] <iguano> http://www.theweeklypay.com/index.php?share=19844/

[14:30] <moritz> iguano: please don't spam here. Thanks.

[14:33] <geekosaur> they're hitting #haskell too :(

[14:34] *** ChanServ sets mode: +o moritz

[14:35] *** moritz sets mode: +b *!*iguano@166.48.42.*

[14:35] *** iguano was kicked by moritz (iguano))
[14:35] *** moritz sets mode: -o moritz

[14:36] *** LlamaRider left
[14:37] *** stevan_ left
[14:46] *** dmol left
[14:56] *** kbaker_ joined
[14:56] *** darutoko left
[15:00] *** iSlug left
[15:03] *** hopea joined
[15:07] *** hopea left
[15:25] *** rurban left
[15:33] *** benabik left
[15:46] *** FROGGS left
[15:50] *** zakharyas left
[15:53] *** FROGGS[mobile] left
[15:54] <japhb__> jnthn: Reviewing the perl5 docs, I think the pack directives I most need are f (float), d (double), and what I'll call W -- like w (BER-encoded unisigned int, i.e. base-128 encoded with high bit set on all octets except the last one), except for PB varints I need least-significant octect first, rather than most-significant octect first as for BER.

[15:54] <japhb__> I also would like to have pack and unpack start at arbitrary offsets, of course.  :-)

[15:56] *** LWA left
[15:58] *** stevan_ joined
[15:58] * masak closes his eyes and wishes he could reproduce the success story of sprintf with pack/unpack, too

[15:58] <masak> clearly we should implement pack/unpack in nqp, for starters.

[16:00] <diakopter> +large_integer

[16:02] <masak> I suspect I'd need to "seed" it by pouring some tuits into getting the source code started.

[16:02] <masak> I will not have such tuits for quite a while, sadly. :/

[16:02] <masak> middle of November, let's say.

[16:03] <masak> hm, second week of November.

[16:03] *** daxim left
[16:04] *** denis_boyun left
[16:05] *** iSlug joined
[16:16] *** iSlug left
[16:24] *** [Sno] left
[16:31] *** ajr joined
[16:31] *** ajr_ left
[16:32] *** ajr is now known as Guest79713

[16:33] *** Guest79713 is now known as ajr_

[16:37] *** denis_boyun joined
[16:38] *** stevan_ left
[16:39] *** jnap left
[16:44] *** cognominal left
[16:44] *** cognominal joined
[16:47] *** pernatiy left
[16:50] *** wbill left
[16:53] *** dmol joined
[16:58] *** betterworld joined
[16:59] *** iSlug joined
[17:05] *** colomon left
[17:07] *** Bzek left
[17:12] *** ajr_ left
[17:20] *** jnap1 joined
[17:20] *** iSlug left
[17:26] *** darutoko joined
[17:31] *** isBEKaml joined
[17:34] *** iSlug joined
[17:46] *** isBEKaml left
[17:48] *** FROGGS[mobile] joined
[17:51] *** SamuraiJack joined
[17:51] *** ajr joined
[17:52] *** ajr is now known as Guest93079

[17:52] *** korakinos joined
[17:52] *** Guest93079 is now known as ajr_

[17:54] *** lue left
[17:57] *** lue joined
[17:57] <lue> hello world o/

[17:58] *** havenwood joined
[17:59] <masak> hello, lue, sir.

[17:59] *** korakinos left
[18:02] <lue> [backlog] <TimToady> To whomever eventually stoops so low as to canvas these logs for more cute sayings of mine to inflict on the quote files of the world, please feel free to capitalize [M]y [S]entences and put punctuation on the end[;] without extra annotations like those silly brackets you always see.  Thank you.

[18:03] <perigrin> [Y]our [W]e[lc]om[e]

[18:04] *** bloonix joined
[18:04] <masak> ftfy :)

[18:06] *** rindolf left
[18:10] *** stevan_ joined
[18:10] *** FROGGS joined
[18:12] *** [Sno] joined
[18:15] *** denis_boyun left
[18:17] *** stevan__ joined
[18:17] *** stevan_ left
[18:20] *** darutoko left
[18:22] *** stevan___ joined
[18:22] <dalek> Heuristic branch merge: pushed 19 commits to nqp by moritz

[18:22] <dalek> rakudo/nom: 37acfa1 | Mouq++ | src/Perl6/Grammar.nqp:

[18:22] <dalek> rakudo/nom: First pass at updating Perl6::Grammar

[18:22] <dalek> rakudo/nom: 

[18:22] <dalek> rakudo/nom: Builds! And passes something like 85% of spec tests!

[18:22] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/37acfa1d76

[18:22] *** dalek left
[18:22] <moritz> that was stdsigspace by Mouq++

[18:23] <jnthn> \o/

[18:23] *** dalek joined
[18:23] *** ChanServ sets mode: +v dalek

[18:23] <dalek> rakudo/nom: 619cc7e | moritz++ | docs/ROADMAP:

[18:23] <dalek> rakudo/nom: remove completed ROADMAP item, Mouq++

[18:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/619cc7eb6f

[18:23] <diakopter> .tell Mouq awesome work on stdsigspace Mouq++

[18:23] <yoleaux> diakopter: I'll pass your message to Mouq.

[18:23] <FROGGS> does that mean we fail 15% of the tests?

[18:24] <moritz> FROGGS: just a hand full of spectests

[18:24] <FROGGS> k

[18:24] <moritz> and I'm pretty sure Mouq++ has a fix for those in his local copy already

[18:25] *** _erik__ joined
[18:25] *** stevan__ left
[18:29] *** _erik__ left
[18:32] <TimToady> didn't he push those into a branch already?

[18:33] <TimToady> http://irclog.perlgeek.de/perl6/2013-10-25#i_7762318

[18:35] *** stevan___ left
[18:38] <TimToady> "give it a MOP" was exactly the stage at which pugs was abandoned, iirc, but we didn't have sixmodel then

[18:38] <nwc10> is it known that current NQP head doesn't build on current MoarVM head?

[18:38] <nwc10> and is this the right channel to ask that, or should I ask over there? -->

[18:39] <TimToady> probably here

[18:39] <nwc10> OK

[18:39] <TimToady> build integration going on here mostly

[18:39] <nwc10> Not sure if this will paste, but it ends up erroring as:

[18:39] <nwc10> /home/nicholas/Sandpit/moar-g/bin/moar --libpath=gen/moar/stage1 gen/moar/stage1/nqp.moarvm --bootstrap --setting=NULL --no-regex-lib --target=mbc \ --output=gen/moar/stage2/nqpmo.moarvm gen/moar/stage2/nqpmo.nqp

[18:39] <nwc10> This type does not support elems

[18:39] <nwc10> ws

[18:39] <nwc10> make: *** [gen/moar/stage2/nqpmo.moarvm] Error 10

[18:40] <nwc10> nqp is at 6a87efbec731725222cd1401c9c27889d6c52a57, Merge branch 'stdsigspace' of https://github.com/perl6/nqp

[18:40] <nwc10> MoarVM is at 51495577207e29740aca08e24e9fdd2dee58397b, Fix delayed-by-1-run STable freeing in gen2.

[18:40] <nwc10> and I don't think that I'm doing anything stupid, but it's always a possibility

[18:41] <TimToady> nqp/moar has been a pretty fast moving target of late, which is a good problem to have :)

[18:45] <TimToady> moritz: forgot you highlight you 13 minutes ago

[18:45] <diakopter> nwc10: it's possible jnthn might need to update the bootstrap

[18:46] <TimToady> nwc10: they're just now closing the bootstrap loop and abandoning the cross-compiler for stage0, so could be some transient from that

[18:52] *** xenoterracide joined
[18:52] <diakopter> nwc10: though of course my answer is the easy answer.. it's probably more likely an actual problem..

[18:53] *** benabik joined
[19:01] *** SamuraiJack left
[19:02] <nwc10> OK, the left side of that merge builds fine

[19:02] <nwc10> the right side of the merge, the bootstrap update, e96eed02654605b72b6c4432e11757b7017c57ca

[19:02] <nwc10> has the same error

[19:03] <jnthn> Grr, why u build so slow

[19:03] <jnthn> oh...'cus it's a debug moar

[19:03] <jnthn> nwc10: Yes, I got the same error here.

[19:03] <lizmat> hmm.... rakudo doesn't build on parrot (either)

[19:03] <lizmat> Error while constructing error object:Could not locate compile-time value for symbol Syntax::Confused

[19:03] <lizmat> Error while compiling, type X::Syntax::Confused

[19:03] <lizmat>  at line 4476, near "where { 0 "

[19:04] <nwc10> OK, good, in that you can replicate it. Not so good (that it exists)

[19:04] <jnthn> I wonder...

[19:04] <jnthn> Man, so much churn today

[19:04] <TimToady> does everything need rebootstrapping?

[19:04] <benabik> Because the boots are falling off.

[19:05] <diakopter> E2BUTTERY

[19:05] <jnthn> Progress is good, but when a huge semantics change patch + Moar bootstrap loop closing land on the same day... :)

[19:05] <lizmat> hmmm... I can't see a src/gen/p-CORE.setting  ?

[19:05] <TimToady> stdsigspace was a pretty violent change, and misplaced :s will cause heartburn

[19:06] * lizmat is rebuilding from scratch

[19:08] <jnthn> nwc10: I think one of my MoarVM patches is to blame for the elems regression.

[19:08] <jnthn> I thought I'd tested it but musta messed up

[19:10] <lizmat> subset UInt64 of Int where { 0 <= $_ < $UINT64_UPPER }   seems to be the offending line

[19:11] <jnthn> nwc10: Confirmed, MoarVM d83796b9c is to blame.

[19:13] *** Mouq joined
[19:13] <lizmat> jnthn: are we talking about the same problem?

[19:14] <jnthn> lizmat: No

[19:14] <jnthn> lizmat: A least, I'm not talking about the one you just pasted about :)

[19:15] <jnthn> lizmat: I'm dealing with the one nwc10++ reported

[19:15] <lizmat> ok, then I guess the stdsigspace is to blame

[19:17] <lizmat> *merge

[19:17] * TimToady doesn't see anything wrong with the rules for subset et al. under the new sigspace rules, so maybe it's a bug in sigspaceyness

[19:18] <TimToady> or in the bootstrapping thereof

[19:19] <lizmat> called from Sub 'eat_terminator' pc 63807 (src/gen/perl6-grammar.pir:23503) (src/Perl6/Grammar.nqp:1066) seems to be the one failing

[19:20] <TimToady> that could just be trying to eat the terminator after failing to match the where (there's a ? on the where matcher, so the subset rule would still "succeed")

[19:21] <TimToady> but there would be no valid terminator there

[19:21] * TimToady is guessing someone will have to start inserting <.ws> at an earlier stage to see which ws it's not seeing

[19:21] <Mouq> merged: Woo! … issues after merge: Uhhh

[19:21] <yoleaux> 12:02Z <jnthn> Mouq: The bootstrap loop is closed on NQP on Moar now, and there's an m-bootstrap-files target. So it should be possible to do the sigspace updates for it also. :)

[19:21] <yoleaux> 18:23Z <diakopter> Mouq: awesome work on stdsigspace Mouq++

[19:23] <lizmat> TimToady: you mean around here:                 [ where <EXPR('e=')> ]**0..1  (line 2572) ?

[19:23] <TimToady> yeah

[19:24] <TimToady> but it's the parser for that from the previous stage that presumably isn't doing something right

[19:24] *** kaare_ left
[19:25] <jnthn> I assume that we did commit an NQP revision bump?

[19:25] * TimToady did not hear anything go bump in the night

[19:27] <jnthn> 2013.10-75-g6ee9539 # what Rakudo has

[19:27] <jnthn> 2013.10-129-g3ea0dd4 # current git describe output

[19:27] <jnthn> :)

[19:27] <lizmat> I was looking at sym<enum> and noticed <trait>* had a <.ws> before it, and sym<subset> didn't

[19:27] <jnthn> Wed Oct 23 was the last NQP_REVISION update

[19:27] <lizmat> but alas, no difference

[19:27] <jnthn> And today ain't Wednesday :)

[19:27] <TimToady> shouldn't need one, but think jnthn++ has discovered a klew

[19:28] <dalek> rakudo/nom: f127a17 | jnthn++ | tools/build/NQP_REVISION:

[19:28] <dalek> rakudo/nom: Bump NQP_REVISION for sigspace changes.

[19:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f127a1707a

[19:28] <TimToady> \o/ (provisionally)

[19:28] <dalek> nqp: 3ea0dd4 | jnthn++ | src/HLL/World.nqp:

[19:28] <dalek> nqp: Toss dead code.

[19:28] <dalek> nqp: review: https://github.com/perl6/nqp/commit/3ea0dd401f

[19:29] * lizmat is building again

[19:30] <dalek> nqp: ec5a04b | jnthn++ | tools/build/MOAR_REVISION:

[19:30] <dalek> nqp: Require an up-to-date Moar.

[19:30] <dalek> nqp: 

[19:30] <dalek> nqp: Due to many changes/improvements. Not sure anybody is really tracking

[19:30] <dalek> nqp: this yet, but can't hurt to keep it up to date.

[19:30] <dalek> nqp: review: https://github.com/perl6/nqp/commit/ec5a04bfaf

[19:31] <benabik> I think I saw a --gen-moar commit go past, so I guess someone is tracking it.

[19:31] *** dansamo joined
[19:32] <jnthn> benabik: oh, wow :)

[19:32] <benabik> moritz++ # 6437a71 [Configure] implement --gen-moar

[19:33] <dalek> Heuristic branch merge: pushed 17 commits to rakudo/moar-support by jnthn

[19:33] <jnthn> (merge just syncs moar-support branch with latest nom work)

[19:38] <lizmat> build on parrot succeeded, spectesting now

[19:43] *** pernatiy joined
[19:48] <lizmat> new errors: https://gist.github.com/lizmat/7160781

[19:48] <Mouq> lizmat++

[19:48] <TimToady> did anyone ever merge roast/stdsigspace?

[19:49] <lizmat> ah, good point, I will do that

[19:49] <lizmat> hmmm.... don't seem to have that branch

[19:50] <lizmat> is that a pull request ?

[19:51] <dalek> roast: 5e06d2c | Mouq++ | S05- (4 files):

[19:51] <dalek> roast: Test for sigspace semantics correctly

[19:51] <dalek> roast: review: https://github.com/perl6/roast/commit/5e06d2c4ac

[19:51] <dalek> roast: d20823e | Mouq++ | S05-mass/rx.t:

[19:51] <dalek> roast: Fix faulty regex tests

[19:51] <dalek> roast: review: https://github.com/perl6/roast/commit/d20823eda6

[19:51] <lizmat> testing with these changes now

[19:53] <TimToady> jvm rebuild successful

[19:54] <lizmat> only todo's left now, afaics

[19:54] *** dansamo left
[19:55] *** madog joined
[19:58] <moritz> jnthn++ # cleaning up after me :-)

[19:58] * moritz -> sleep

[19:58] <FROGGS> gnight moritz 

[19:58] <Mouq> o/ moritz 

[20:00] <jnthn> 'night, moritz 

[20:02] *** iSlug left
[20:03] <dalek> roast: 380370c | (Elizabeth Mattijsen)++ | S05-m (2 files):

[20:03] <dalek> roast: Unfudged tests now passing thanks to Mouq++'s work

[20:03] <dalek> roast: review: https://github.com/perl6/roast/commit/380370c53c

[20:06] <Mouq> :D The only other thing is that in ROADMAP "2 * Null pattern detection (at parse time)" has been completed too.

[20:06] <Mouq> That's actually why I started doing this in the first place :P

[20:08] <lizmat> well, then remove the line from the roadmap, or don't you have a commit bit to rakudo ?

[20:08] <Mouq> I don't

[20:09] <dalek> rakudo/nom: 2f94aa6 | (Elizabeth Mattijsen)++ | docs/ROADMAP:

[20:09] <dalek> rakudo/nom: null pattern detection goal achieved, Mouq++

[20:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2f94aa6356

[20:10] <TimToady> um...pardon my asking, but regarding the CLA, are you even legally old enough to sign contracts?  :D

[20:11] <dalek> rakudo/nom: 71041aa | jnthn++ | docs/ROADMAP:

[20:11] <dalek> rakudo/nom: Remove another todone.

[20:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/71041aa795

[20:13] * TimToady was trying to figure out what "2 * Null" patterns were...  :)

[20:15] <benabik> / + // ?

[20:17] *** jnap1 left
[20:17] <Mouq> Hmm… It appears the law is that I *can*, and I can also void the contract whenever I want. (?)

[20:18] <benabik> That sounds not very good for the other side.

[20:18] *** sizz_ joined
[20:18] *** jnap joined
[20:18] *** sizz left
[20:19] <Mouq> "Minors (those under the age of 18, in most states) lack the capacity to make a contract. So a minor who signs a contract can either honor the deal or void the contract."

[20:20] <TimToady> Kids these days...

[20:20] <benabik> Basically you can sign it, but it doesn't mean anything.

[20:20] <diakopter> (so that means tpf can't trust your contract)

[20:20] <TimToady> but then, if the problem is that he has a contract with someone else, that one doesn't work either :)

[20:22] <Mouq> .oO( Did I say 1996? Sorry, fencepost error :)

[20:23] *** colomon joined
[20:27] <Mouq> I'll just print another one, sign it, and have my mother sign it as well. AFAICT if is signed "with the assistance of a guardian," it's a legal and binding contrat

[20:29] <Mouq> With the caveat that the guardian can be made to fufill the requirements of the contract

[20:31] <geekosaur> (now you just get to get your mother to hack perl6...)

[20:33] <TimToady> no, she merely has to volunteer to do as much as she wants to :)

[20:34] <lue> $ perl Configure.pl

[20:34] <lue> No suitable nqp executables found! Please specify some --backends, or a --prefix that contains nqp-{p,j} executables

[20:34] <lue> so, should this pick up nqp-p automatically or no?

[20:36] <Mouq> lue: It's kind of annoying it doesn't look in path

[20:36] * lue should sign the CLA sometime... print-sign-scan is still an option, right?

[20:36] *** erik_bkcaus joined
[20:36] <Mouq> *$PATH // $ENV{PATH}

[20:37] <lue> Mouq: Yeah :/ Sometimes I'm amazed at how much focus is put on the --gen stuff, but that's because I never use it, but rather the exact opposite.

[20:38] <lizmat> lue: most people are interested in Perl 6, whichever way it works underneath

[20:38] <lizmat> --gen is an easy magic incantation to get that to happen, without having to know what's underneath

[20:39] <lue> :) I'm not saying it's terrible (not by a long shot). I just happen to be someone who maintains separate VM/NQP/Perl6 repos (because I'm that involved in this PEARL thing :P) and install everything to /usr/local.

[20:40] <Mouq> lue: exactly what I do

[20:40] <lue> So when I see all the (rightful) focus on --gen and then Configure.pl won't find /usr/local/bin/nqp-p, it's a momentary sense of "well then" and then moving on :) .

[20:40] * woolfy1 and lizmat are ready for  T-DOSE: van is packed with books, shelves, camel, books, brochures, buttons, Tuits and other stuff (and did I mention books?).  Of course, plenty of Camelia Tuits and Perl 6 brochures.

[20:41] <lizmat> www.t-dose.org, if anybody's interested   :-)

[20:41] <woolfy1> (T-DOSE:  https://www.t-dose.org/  )

[20:41] <woolfy1> Hey, stealing my thunder!

[20:41] <woolfy1> You do the tech stuff, I do the marketing stuff, remember?  :-)

[20:41] <lizmat> yes, dear  :-)

[20:42] <woolfy1> That's just what I wanted to hear, my lovely!

[20:42] <woolfy1> oO(walls are echoing with laughter)

[20:42] <Mouq> have fun <lizmat woolfy1>!

[20:42] <woolfy1> Mouq: already the case, but will try to have more, thanks

[20:43] <lue> I'm not sure why I expected --backends to magically search $PATH. (Perhaps I'll fix it, if I'm ready for putting on my pith helmet to find and dust off the perldoc tomes, to understand the ancient tongue of five.)

[20:50] <perigrin> :p

[20:55] <lue> I'd recommend a Configure.p6 so people don't have to learn *such* an old dialect to fix the Configure, but then waitaminute ;)

[20:57] *** BenGoldberg joined
[20:57] <BenGoldberg> Good afternoon

[20:58] <TimToady> it is at that

[20:58] * lizmat calls it a night, it's going to be a 49 hour weekend  :-)

[20:58] <TimToady> o/

[21:00] <Mouq> o/ lizmat 

[21:03] *** kbaker_ left
[21:04] *** stevan_ joined
[21:06] <BenGoldberg> rn: say gather { my $b = 1; ++$b, take $b for 1..10 }

[21:06] <camelia> rakudo 2ce544: OUTPUT«2 3 4 5 6 7 8 9 10 11␤»

[21:06] <camelia> ..niecza v24-98-g473bd20: OUTPUT«1 2 3 4 5 6 7 8 9 10␤»

[21:07] <BenGoldberg> Is one of those wrong?  Or is it allowed to be different?

[21:07] <FROGGS> rn: say gather { my $b = 1; ++$b, take $b for 1..10; 1 }

[21:07] <camelia> rakudo 2ce544: OUTPUT«2 3 4 5 6 7 8 9 10 11␤»

[21:07] <camelia> ..niecza v24-98-g473bd20: OUTPUT«1 2 3 4 5 6 7 8 9 10␤»

[21:09] <BenGoldberg> If this were C or C++, and I did foo( ++var, ++var ), it's explicitly Undefined what happens, and may vary from one implementation to another, or even depending on what optimization options are set.

[21:10] <FROGGS> rn: say gather { my $b = 1; take ++$b for 1..10 } # it should be clearly the same as this

[21:10] <camelia> rakudo 2ce544, niecza v24-98-g473bd20: OUTPUT«2 3 4 5 6 7 8 9 10 11␤»

[21:10] <FROGGS> or ...

[21:11] <FROGGS> yes, I think niecza is wrong in your example

[21:11] <FROGGS> rn: say gather { my $b = 1; ++$b && take $b for 1..10 }

[21:11] <camelia> rakudo 2ce544, niecza v24-98-g473bd20: OUTPUT«2 3 4 5 6 7 8 9 10 11␤»

[21:12] <BenGoldberg> rnp: my $a = 1; say ++$a, ++$a, ++$a

[21:12] <camelia> niecza v24-98-g473bd20: OUTPUT«444␤»

[21:12] <camelia> ..rakudo 2ce544, pugs: OUTPUT«234␤»

[21:13] <Mouq> rn: say 'abcd' ~~ / .**2 {say 'Ack!'} cd | ab {say "LTM'd correctly"} cd /

[21:13] <camelia> niecza v24-98-g473bd20: OUTPUT«Ack!␤｢abcd｣␤␤»

[21:13] <camelia> ..rakudo 2ce544: OUTPUT«LTM'd correctly␤｢abcd｣␤␤»

[21:15] *** SmokeMachine joined
[21:15] <Mouq> rn: say 'abcd' ~~ / . {say 'Ack!'} bcd | ab {say "LTM'd correctly"} cd /

[21:15] <camelia> rakudo 2ce544, niecza v24-98-g473bd20: OUTPUT«LTM'd correctly␤｢abcd｣␤␤»

[21:15] <TimToady> it's just the tiebreaker is wrong, I guess

[21:16] <TimToady> rn: say 'abcd' ~~ / ab {say "LTM'd correctly"} cd | .**2 {say 'Ack!'} cd /  # just checking...

[21:16] <camelia> niecza v24-98-g473bd20: OUTPUT«Ack!␤｢abcd｣␤␤»

[21:16] <camelia> ..rakudo 2ce544: OUTPUT«LTM'd correctly␤｢abcd｣␤␤»

[21:16] <BenGoldberg> rn: say do { my @b = (Inf, 1, 1); my ($a, $b) = (1, 1); gather { .take for @b; for (3..Inf) { ($a, $b) = ($b, [+] @b[$_-$a, $_-$b]); take $b; push @b, $b } } }[1..10]

[21:17] <camelia> niecza v24-98-g473bd20: OUTPUT«1 1 6 6 6 6 6 6 6 6␤»

[21:17] <camelia> ..rakudo 2ce544: OUTPUT«1 1 2 3 3 4 5 5 6 6␤»

[21:18] <BenGoldberg> I don't understand how/why niecza prints 6 6 6 ...

[21:19] <TimToady> doesn't decontainerize as much as rakudo does

[21:20] <TimToady> so things you think of as different are really pointers to the same container

[21:21] *** pecastro left
[21:23] <BenGoldberg> rn: say do { my @b = (Inf, 1, 1); my ($a, $b) = (1, 1); gather { .take for @b; for (3..Inf) { ($a, $b) = ($b, [+] @b[$_-$a, $_-$b]); take $b; push @b, Int($b) } } }[1..10]

[21:23] <camelia> rakudo 2ce544: OUTPUT«1 1 2 3 3 4 5 5 6 6␤»

[21:23] <camelia> ..niecza v24-98-g473bd20: OUTPUT«Unhandled exception: Unable to resolve method postcircumfix:<( )> in type Int␤  at /tmp/86SJMFye_s line 1 (ANON @ 17) ␤  at <unknown> line 0 (KERNEL dogather @ 1) ␤  at /home/p6eval/niecza/lib/CORE.setting line 2622 (GatherIterator.reify @ 6) ␤…»

[21:23] <BenGoldberg> rn: say do { my @b = (Inf, 1, 1); my ($a, $b) = (1, 1); gather { .take for @b; for (3..Inf) { ($a, $b) = ($b, [+] @b[$_-$a, $_-$b]); take o+$b; push @b, $b } } }[1..10]

[21:24] <camelia> rakudo 2ce544: OUTPUT«===SORRY!=== Error while compiling /tmp/7iwA58_3ne␤Undeclared routine:␤    o used at line 1␤␤»

[21:24] <camelia> ..niecza v24-98-g473bd20: OUTPUT«===SORRY!===␤␤Undeclared routine:␤     'o' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit…»

[21:24] <BenGoldberg> rn: say do { my @b = (Inf, 1, 1); my ($a, $b) = (1, 1); gather { .take for @b; for (3..Inf) { ($a, $b) = ($b, [+] @b[$_-$a, $_-$b]); take 0+$b; push @b, $b } } }[1..10]

[21:24] <camelia> rakudo 2ce544, niecza v24-98-g473bd20: OUTPUT«1 1 2 3 3 4 5 5 6 6␤»

[21:35] *** stevan_ left
[21:36] *** pippo joined
[21:37] <pippo> nr: say "one, two,  three" ~~ /(\w+)+ % ','/

[21:37] <camelia> rakudo 2ce544, niecza v24-98-g473bd20: OUTPUT«｢one｣␤ 0 => ｢one｣␤␤»

[21:37] <pippo> nr: say "one, two,  three" ~~ /(\w+) +% ','/

[21:37] <camelia> rakudo 2ce544, niecza v24-98-g473bd20: OUTPUT«｢one｣␤ 0 => ｢one｣␤␤»

[21:38] <pippo> nr: say "one, two,  three" ~~ /:s (\w+) +% ','/

[21:38] <camelia> niecza v24-98-g473bd20: OUTPUT«｢one, two,  three｣␤ 0 => ｢one｣␤ 0 => ｢two｣␤ 0 => ｢three｣␤␤»

[21:38] <camelia> ..rakudo 2ce544: OUTPUT«｢one｣␤ 0 => ｢one｣␤␤»

[21:38] *** colomon left
[21:38] <diakopter> nqp-m: say('alive')

[21:38] <camelia> nqp-moarvm: OUTPUT«Unhandled exception: Bytecode segment overflows end of stream␤»

[21:38] <diakopter> boohoo

[21:39] <jnthn> my segment overfloweth

[21:39] <diakopter> i'll fix soon

[21:40] *** pippo left
[21:40] <BenGoldberg> nqp: say 1

[21:40] <camelia> nqp-parrot: OUTPUT«Confused at line 2, near "say 1"␤current instr.: 'panic' pc 14748 (src/stage2/gen/NQPHLL.pir:5229) (src/stage2/gen/NQPHLL.nqp:279)␤»

[21:40] <camelia> ..nqp-moarvm: OUTPUT«Unhandled exception: Bytecode segment overflows end of stream␤»

[21:40] <camelia> ..nqp-jvm: OUTPUT«Confused at line 2, near "say 1"␤  in panic (src/stage2/gen/NQPHLL.nqp:279)␤  in comp_unit (src/stage2/gen/NQP.nqp:772)␤  in TOP (src/stage2/gen/NQP.nqp:669)␤  in parse (src/stage2/gen/QRegex.nqp:1247)␤  in parse (src/stage2/gen/NQPHLL.nqp:1376)␤  in  (sr…»

[21:40] <diakopter> BenGoldberg: need parens

[21:40] <BenGoldberg> nqp: say(1)

[21:40] <camelia> nqp-jvm, nqp-parrot: OUTPUT«1␤»

[21:40] <camelia> ..nqp-moarvm: OUTPUT«Unhandled exception: Bytecode segment overflows end of stream␤»

[21:41] <BenGoldberg> In which Spec is the syntax for @foo = { some code here } ... *; defined?

[21:43] *** wbill joined
[21:52] *** btyler left
[21:54] *** SmokeMac_ joined
[21:56] * lue idly wonders if the Configure.pl script could be changed to ln -s instead of cp the perl6-* to perl6 on symlink-capable systems.

[21:57] *** SmokeMachine left
[21:57] *** jnap left
[21:59] <japhb__> lue: It would be nice if it did that, yes.

[22:00] <benabik> LN_S = "ln -s" on *nix and = "cp" on Windows.  :-D

[22:00] <japhb__> .oO( "Well volunteered!" I should have said. )

[22:00] *** SmokeMachine joined
[22:02] <lue> japhb__: I need to fill out a CLA. (I know I don't *need* to, but I'd really like to not have to make pull requests all the time :/)

[22:02] *** denis_boyun joined
[22:02] <japhb__> Might as well just get it done.  Life is so much easier with real commit bits.

[22:02] <japhb__> :-)

[22:03] <dalek> rakudo/moar-support: 8d8d914 | jnthn++ | / (4 files):

[22:03] <dalek> rakudo/moar-support: Stub in rakudo_scalar support.

[22:03] <dalek> rakudo/moar-support: 

[22:03] <dalek> rakudo/moar-support: Not doing anything useful yet, but gets BOOTSTRAP a little further.

[22:03] <dalek> rakudo/moar-support: review: https://github.com/rakudo/rakudo/commit/8d8d914127

[22:03] <dalek> rakudo/moar-support: ed8e9b2 | jnthn++ | .gitignore:

[22:03] <dalek> rakudo/moar-support: Add dynext/*.o[bj]? to .gitignore.

[22:03] <dalek> rakudo/moar-support: review: https://github.com/rakudo/rakudo/commit/ed8e9b2562

[22:03] *** SmokeMac_ left
[22:05] *** denis_boyun left
[22:05] <lue> If the print-sign-scan-email method is still valid, and I found out how exactly to do it, that'd be nice.

[22:14] *** dmol1 joined
[22:16] *** dmol left
[22:18] *** havenwood left
[22:30] <japhb__> My eyes cross looking at the glob/regex chymera that is '*.o[bj]?'

[22:31] <jnthn> You're welcome :)

[22:31] <geekosaur> that's not a chimera, globs support character classes

[22:31] <geekosaur> oh, the trailing ?

[22:31] <jnthn> And the fact it's a Perl 6 gruop, not a char class :P

[22:32] <geekosaur> wel, if I parse as a glob, that's anything ending in . o (one-of b j) (any char) :p

[22:35] <lue> *\.[s?o[bj|[\.\d+]*]?|l?a] should cover it, methinks :P

[22:35] *** madog left
[22:37] <TimToady> r: say "one, two,  three" ~~ /:s (\w+) +% ',' /

[22:37] <camelia> rakudo 2ce544: OUTPUT«｢one｣␤ 0 => ｢one｣␤␤»

[22:37] <lue> s:st(1)/*/.+/

[22:40] <BenGoldberg> rn: print '0'...'F'

[22:40] <camelia> rakudo 2ce544, niecza v24-98-g473bd20: OUTPUT«0123456789:;<=>?@ABCDEF»

[22:40] <BenGoldberg> rn: print '0'..'F'

[22:40] <camelia> niecza v24-98-g473bd20: OUTPUT«(timeout)»

[22:40] <camelia> ..rakudo 2ce544: OUTPUT«0123456789:;<=>?@ABCDEF»

[22:41] *** dmol1 left
[22:42] <TimToady> looks like still the old rakudo from yesterday

[22:42] <jnthn> git show 2ce544

[22:42] <jnthn> ...

[22:42] <jnthn> Date:   Wed Oct 23 16:48:44 2013 +0200

[22:43] <jnthn> So yes, it is... :)

[22:43] <jnthn> Wonder why it's got stuck...

[22:43] * TimToady guesses a bunch of realcleaning and such is needed

[22:44] *** pdurbin joined
[22:47] *** jnap joined
[22:54] *** pippo joined
[22:58] <jnthn> 'night, #perl6

[22:58] <TimToady> o/

[22:58] *** jnap left
[22:59] *** jnap joined
[22:59] *** SmokeMachine left
[23:00] <TimToady> pippo: that example works right under the latest rakudo/jvm, but camelia isn't updated to run that yet

[23:00] *** SmokeMachine joined
[23:00] <TimToady> well, under parrot too it works right

[23:01] <TimToady> someone with an account on host07 will need to look at it

[23:01] *** SmokeMachine left
[23:02] *** SmokeMachine joined
[23:02] <pippo> TimToady: I am using latest git from rakudo JVM. And it does not work. I thought it was my error. This is the rason why I checked Camelia. 

[23:03] <TimToady> r: say "one, two,  three" ~~ /:s (\w+) +% ',' /

[23:03] <camelia> rakudo 2ce544: OUTPUT«｢one｣␤ 0 => ｢one｣␤␤»

[23:03] <TimToady> this is incorrect, but correct on my machine

[23:03] <TimToady> (note I added a space after the ',')

[23:03] <TimToady> otherwise :s can't match the whitespace after each comma

[23:04] <pippo> Checking...

[23:05] <pippo> TimToady: indeed it works with the space at the end. Thank you very much.

[23:05] <TimToady> glad to be of help

[23:06] <pippo> :-)

[23:06] <pippo> Good night.

[23:06] <TimToady> o/

[23:06] *** pippo left
[23:15] *** yoleaux left
[23:22] <lue> r: say 1 !&& 1; say 1 !&& 0; say 0 !&& 1; say 0 !&& 0; # NAND, clearly.

[23:22] <camelia> rakudo 2ce544: OUTPUT«===SORRY!=== Error while compiling /tmp/O5S0gnYZFj␤Cannot negate && because it is not iffy enough␤at /tmp/O5S0gnYZFj:1␤------> say 1 !&&⏏ 1; say 1 !&& 0; say 0 !&& 1; say 0 !&& ␤»

[23:23] <lue> std: say 1 !&& 1; say 1 !&& 0; say 0 !&& 1; say 0 !&& 0; # NAND, clearly.

[23:23] <camelia> std 082981d: OUTPUT«ok 00:01 123m␤»

[23:24] <lue> rn: say 1 !&& 1; say 1 !|| 1; say 1 !^^ 1; # I want to say rakudobug.

[23:24] <camelia> niecza v24-98-g473bd20: OUTPUT«False␤False␤Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Niecza.StashCursor.Core (System.String key, Boolean final, Niecza.StashCursor& sc, Niecza.Variable& v, Niecza.Variable bind_…»

[23:24] <camelia> ..rakudo 2ce544: OUTPUT«===SORRY!=== Error while compiling /tmp/HZ3LUlcApt␤Cannot negate && because it is not iffy enough␤at /tmp/HZ3LUlcApt:1␤------> say 1 !&&⏏ 1; say 1 !|| 1; say 1 !^^ 1; # I want t␤»

[23:25] *** pecastro joined
[23:26] <lue> At least, I don't see how the logical ops are not iffy enough. It is their entire purpose, no? (Being a part of if-conditionals and the like, that is.)

[23:31] <TimToady> yes, those are explicitly set to iffy in STD

[23:33] <lue> Of course you can do !(), but I prefer the look of 1 NAND 2 to NOT(1 AND 2) sometimes :)

[23:33] * lue files rakudobug

[23:33] <TimToady> std: say /foo/ !ff /bar/

[23:33] <camelia> std 082981d: OUTPUT«===SORRY!===␤Cannot negate ff because conditional operators are too fiddly at /tmp/vGMzu_hIdn line 1:␤------> say /foo/ !ff⏏ /bar/␤Cannot negate ff because conditional operators are not iffy enough at /tmp/vGMzu_hIdn l…»

[23:34] <TimToady> arguably that should work too

[23:35] <TimToady> I draw the line at !?? !! though :)

[23:36] <geekosaur> unless {} else {}

[23:36] <lue> TimToady: Why would you do that? Of course you would use !! ?? instead. (LUE GOT: 1 SLANG-USING MODULE IDEA [Perl6::ReverseTernary])

[23:36] *** erik_bkcaus left
[23:37] <TimToady> .oO(crap)

[23:37] <lue> sorry, ::InverseTernary .

[23:38] <geekosaur> ‽‽ ⸘⸘

[23:38] <lue> .oO(Or is it contraverse? I need to brush up on my 'verses)

[23:42] <TimToady> it's definitely contraverseal.

[23:42] *** SmokeMachine left
[23:42] *** SmokeMachine joined
[23:43] <lue> TimToady: have you seen my  why {} because ()  idea? >:P (the elsif equivalent is buthenwhy, haven't figure out the else equivalent.)

[23:43] <TimToady> Mouq: if you need another project now, you could look at getting rakudo to accept http://rosettacode.org/wiki/Parsing/RPN_calculator_algorithm#Perl_6

[23:44] <TimToady> lue: if I did see it, I probably found a way to blot out the memory to preserve my sanity

[23:45] *** ssutch left
[23:46] <lue> And then, most evilly||usefully, a nelse/ndefault that executes after a successful if/elsif/when. :D

[23:46] <lue> .oO(I would've been a hit during the RFC period :P)

[23:47] * TimToady could very nearly see an argument for !!?? based on end-weight

[23:49] <geekosaur> it should be but, but that's taken

[23:49] *** ssutch joined
[23:49] <geekosaur> maybe igiveup

[23:49] <TimToady> in other news, http://rosettacode.org/wiki/Parse_EBNF still works

[23:49] <TimToady> afk &

[23:49] *** SmokeMachine left
[23:54] *** FROGGS left
[23:54] *** SmokeMachine joined
[23:55] *** FROGGS joined
