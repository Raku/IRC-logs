[00:02] <dalek> rakudo/nom: 0358bae | jonathan++ | src/vm/jvm/core/Threading.pm:

[00:02] <dalek> rakudo/nom: Clean-up and re-working of Promise.

[00:02] <dalek> rakudo/nom: 

[00:02] <dalek> rakudo/nom: The outside API remains largely the same, except the constructor is

[00:02] <dalek> rakudo/nom: now only taking :$scheduler. The main change is that Promise is no

[00:02] <dalek> rakudo/nom: longer tied to running code at all. Rather, that's just what the

[00:02] <dalek> rakudo/nom: run factory method and then methods set up. Promise.sleep(...) is

[00:02] <dalek> rakudo/nom: also mostly delegated to the Scheduler. This makes Promise more

[00:02] <dalek> rakudo/nom: focused around its synchronization primitive nature, and puts the

[00:02] <dalek> rakudo/nom: other Promise factories on a more even footing.

[00:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0358bae239

[00:03] <jnthn> ...and also means you can create a TestScheduler to test your Promise.sleep-ing stuff.

[00:03] <japhb__> r: my $buf := buf8.new(); sub set_first(buf8 $buf, Int $offset, int $value) { nqp::bindpos_i($buf, $offset, $value) }; set_first($buf, 0, 42); $buf[0];

[00:04] <camelia> rakudo-jvm 882e33: OUTPUT«(timeout)»

[00:04] <camelia> ..rakudo-parrot 91a1b0: ( no output )

[00:04] <japhb__> r: my $buf := buf8.new(); sub set_first(buf8 $buf, Int $offset, int $value) { nqp::bindpos_i($buf, $offset, $value) }; set_first($buf, 0, 42); say $buf[0];

[00:04] <camelia> rakudo-jvm 882e33: OUTPUT«(timeout)»

[00:04] <camelia> ..rakudo-parrot 91a1b0: OUTPUT«42␤»

[00:07] <japhb__> r: my $buf := buf8.new(); sub set_first(buf8 $buf, Int $offset is rw, int $value) { nqp::bindpos_i($buf, $offset, $value) }; set_first($buf, my $ = 0, 42); say $buf[0];

[00:07] <camelia> rakudo-jvm 882e33: OUTPUT«(timeout)»

[00:07] <camelia> ..rakudo-parrot 91a1b0: OUTPUT«42␤»

[00:07] <japhb__> r-j: say "alive"

[00:07] *** dansamo joined
[00:07] <camelia> rakudo-jvm 882e33: OUTPUT«(timeout)»

[00:09] *** dmol left
[00:09] <timotimo> as a response to a recent conversation in this here channel, i bought some greek-style jogurt

[00:09] <timotimo> with honey :)

[00:12] <colomon> yum

[00:14] * japhb__ wants some of that now-ish, actually, but it's too close to dinner time.

[00:17] *** stevan_ left
[00:17] *** stevan_ joined
[00:19] <BenGoldberg> Does the evalbot start a new jvm process for each request?

[00:20] <BenGoldberg> Or is there a rakudo-jvm server running, which the evalbot gives requests to?

[00:23] * japhb__ is finding with annoyance that inserting "say '';" before a line makes it stop working.

[00:23] <japhb__> ... on jvm.

[00:29] *** dansamo left
[00:29] <diakopter> r-j: say "\n"; say 'alive'

[00:29] <camelia> rakudo-jvm 882e33: OUTPUT«(timeout)»

[00:29] <diakopter> wat

[00:32] <BenGoldberg> r-j: say 'alive'

[00:32] <camelia> rakudo-jvm 882e33: OUTPUT«(timeout)»

[00:33] *** benabik left
[00:39] <jnthn> sleep &

[00:46] <dalek> p6-pb: 63fc1c5 | (Geoffrey Broadwell)++ | lib/PB/Binary/Reader.pm:

[00:46] <dalek> p6-pb: Minor cleanups: sub order, vertical alignment, #=

[00:46] <dalek> p6-pb: 

[00:46] <dalek> p6-pb: * Move decode subs to the top so that all the read-* subs can be together.

[00:46] <dalek> p6-pb: * Vertically align some arguments that were bugging me as is.

[00:46] <dalek> p6-pb: * Change a # comment to #=.

[00:46] <dalek> p6-pb: review: https://github.com/samuraisam/p6-pb/commit/63fc1c554e

[00:46] <dalek> p6-pb: 4c2a971 | (Geoffrey Broadwell)++ | lib/PB/Binary/Reader.pm:

[00:46] <dalek> p6-pb: Add type and 'is pure' annotations to Reader subs

[00:46] <dalek> p6-pb: review: https://github.com/samuraisam/p6-pb/commit/4c2a97105d

[00:46] <dalek> p6-pb: a71214a | (Geoffrey Broadwell)++ | lib/PB/Binary/Writer.pm:

[00:46] <dalek> p6-pb: Begin building low-level binary PB writer code

[00:46] <dalek> p6-pb: 

[00:46] <dalek> p6-pb: Approximately matches what the reader can do, except for length-delimited

[00:46] <dalek> p6-pb: values, which are still WIP.

[00:46] <dalek> p6-pb: review: https://github.com/samuraisam/p6-pb/commit/a71214a139

[00:46] <dalek> p6-pb: efdeed3 | (Geoffrey Broadwell)++ | t/binary-writer.t:

[00:46] <dalek> p6-pb: Tests for low-level binary writer

[00:46] <dalek> p6-pb: 

[00:46] <dalek> p6-pb: Tests writing varints, fixed32, fixed64, and pairs thereof.

[00:46] <dalek> p6-pb: review: https://github.com/samuraisam/p6-pb/commit/efdeed3c10

[00:53] *** benabik joined
[00:53] *** jnap left
[01:09] *** cbk1090 joined
[01:23] *** dirk103 joined
[01:26] *** dirk103 left
[01:34] *** cbk1090 left
[02:03] *** araujo left
[02:03] *** araujo joined
[02:07] <retupmoca> MIME::Base64 now has a pure perl version!

[02:07] <lue> retupmoca++

[02:07] <retupmoca> (but will still use the parrot library by default if running rakudo on parrot)

[02:09] <retupmoca> it also has a new interface, so you can encode a Blob or Buf directly

[02:09] *** Guest19106 left
[02:21] <colomon> \o/

[02:26] *** araujo left
[02:27] *** araujo joined
[02:31] <retupmoca> and now Email::MIME uses the new MIME::Base64

[02:31] <retupmoca> so it is now (in theory) feature complete

[02:31] <retupmoca> next step is documenting all this stuff, I suppose

[03:01] *** cbk1090 joined
[03:13] *** renormalist joined
[03:13] *** cbk1090 left
[04:16] *** nofks joined
[04:25] *** nofks left
[04:32] *** SamuraiJack_ joined
[04:50] *** bloonix left
[04:54] *** preflex_ joined
[04:54] *** ChanServ sets mode: +v preflex_

[04:55] *** preflex left
[04:55] *** preflex_ is now known as preflex

[05:02] *** daniel-s__ left
[05:03] *** daniel-s__ joined
[05:06] *** xenoterracide left
[05:07] *** BenGoldberg left
[05:21] *** [Sno] left
[05:47] *** logie joined
[06:08] *** atta left
[06:09] *** jtpalmer left
[06:12] *** crazedpsyc joined
[06:12] *** cotto joined
[06:12] *** atrodo joined
[06:13] *** ivan`` joined
[06:15] *** atta joined
[06:16] *** retupmoca joined
[06:16] *** hoelzro joined
[06:17] *** jtpalmer joined
[06:18] <moritz> retupmoca++

[06:21] *** johnny5_ left
[06:22] *** johnny5_ joined
[06:23] *** johnny5_ left
[06:24] *** johnny5_ joined
[06:28] *** kaleem joined
[06:33] *** logie left
[06:39] *** denis_boyun joined
[06:58] <tadzik> hello from Denmark o/

[07:05] *** nnunley left
[07:05] <dalek> p6-pb: 60dadfc | (Geoffrey Broadwell)++ | lib/PB/Binary/Writer.pm:

[07:05] <dalek> p6-pb: Refactor with a WireType enum

[07:05] <dalek> p6-pb: 

[07:05] <dalek> p6-pb: Get rid of the magic wire type numbers in PB::Binary::Writer.

[07:05] <dalek> p6-pb: review: https://github.com/samuraisam/p6-pb/commit/60dadfc481

[07:05] <dalek> p6-pb: a41d773 | (Geoffrey Broadwell)++ | lib/PB/Binary/Writer.pm:

[07:05] <dalek> p6-pb: Add write-blob8() for length delimited fields

[07:05] <dalek> p6-pb: 

[07:06] <dalek> p6-pb: Will be used for both bytes and string field types.

[07:06] <dalek> p6-pb: review: https://github.com/samuraisam/p6-pb/commit/a41d773c88

[07:06] <dalek> p6-pb: 5eb0bb2 | (Geoffrey Broadwell)++ | t/binary-writer.t:

[07:06] <dalek> p6-pb: Test writing string and bytes fields, including utf8

[07:06] <dalek> p6-pb: review: https://github.com/samuraisam/p6-pb/commit/5eb0bb2890

[07:06] <japhb__> Hello to Denmark o/

[07:06] <japhb__> ;-)

[07:07] *** darutoko joined
[07:07] <diakopter> .

[07:09] *** iSlug joined
[07:21] <diakopter> tadzik: hi

[07:47] *** iSlug left
[07:49] *** iSlug joined
[08:02] *** ingy^ joined
[08:02] <ingy^> o/

[08:04] *** Vendethi_ joined
[08:12] <frettled> Hello, Earthlings!

[08:12] *** xinming left
[08:12] <moritz> Hello, frettling

[08:13] *** xenoterracide joined
[08:14] *** xinming joined
[08:14] <arnsholt> o/

[08:21] *** denis_boyun left
[08:21] *** nnunley joined
[08:23] <tadzik> hrm, CPH wifi is weird

[08:25] <masak> in what way?

[08:25] *** nnunley left
[08:26] <masak> (g'm', #p6)

[08:26] <tadzik> it's randomly saying "There's been an error: Unknown error" or "Welcome back, you can now browse the web"

[08:26] <tadzik> so, well, it's like a regular public wifi ;)

[08:28] *** rindolf joined
[08:29] <mathw> good $localtime

[08:29] <rindolf> mathw: hello.

[08:31] <mathw> I'm going to a wedding today! :D

[08:32] <moritz> mathw: have fun!

[08:32] <mathw> Halloween is clearly the best day to get married

[08:32] *** dansamo joined
[08:32] <mathw> Unfortunately I have to spend the day at work first

[08:33] *** woolfy joined
[08:34] <masak> lizmat: https://github.com/perl6/specs/commit/3150289f13c70873f7734afebfe9a817671a5640 -- "PDD" feels a bit misleading, as "P" (depending on context) might just as easily mean "Problem" or "Pwnage" or "Pet" or "Pirouette".

[08:34] <mathw> hah

[08:34] <mathw> PDD drives half the stuff at my office

[08:37] <masak> lizmat: also, one (joking) usage of something doesn't make it rise to the level of a term "used within the Perl 6 community"... had the same feeling with the "lmddgtfy" entry, which as far as I know was a one-off joke.

[08:38] <tadzik> isn't it an actual website?

[08:38] <tadzik> http://lmddgtfy.com/ sort of...

[08:39] * moritz thought that "PDD" was a "Parrot Design Document"

[08:40] *** ingy^ left
[08:41] *** tobyink joined
[08:42] *** iSlug left
[08:49] *** Rotwang joined
[08:50] <masak> tadzik: let me error establishing a database connection for you :)

[08:51] <masak> moritz: now, *that* would actually be a useful S99 entry.

[08:53] *** woolfy left
[09:01] *** dmol joined
[09:03] *** tobyink left
[09:08] *** Rotwang left
[09:11] *** zakharyas joined
[09:13] *** Vendethi_ left
[09:14] *** Vendethi_ joined
[09:15] *** iSlug joined
[09:17] *** GlitchMr left
[09:19] *** Vendethi_ left
[09:23] *** GlitchMr joined
[09:23] *** spider-mario joined
[09:35] <dalek> specs: 0a8c287 | masak++ | S99-glossary.pod:

[09:35] <dalek> specs: [S99] PDD means Parrot Design Document

[09:35] <dalek> specs: review: https://github.com/perl6/specs/commit/0a8c287312

[09:36] *** tobyink joined
[09:38] *** Vendethi_ joined
[09:41] *** donaldh joined
[09:50] *** sqirrel joined
[09:54] *** tobyink left
[10:09] *** nnunley joined
[10:11] *** xenoterracide left
[10:13] *** nnunley left
[10:20] *** fhelmberger joined
[10:27] *** fhelmberger_ joined
[10:30] *** fhelmberger left
[10:37] *** daxim joined
[10:43] *** odoacre left
[10:44] *** sisar joined
[10:48] *** donaldh left
[10:59] *** iSlug left
[11:03] *** pecastro joined
[11:09] *** dmol left
[11:15] *** rixx joined
[11:20] *** Vendethi_ left
[11:21] *** rixx left
[11:36] <sisar> Hello. I'm unable to install rakudo. Full log: http://paste.ubuntu.com/6335241/ . What am I doing wrong ?

[11:39] <FROGGS> ohh, you build on cygwin?

[11:39] <diakopter> sisar: seems that library was built on line 400

[11:39] <FROGGS> sisar: you can't use the windows msi by any chance?

[11:40] <sisar> FROGGS: yes, Cygwin

[11:40] <diakopter> .. however, it was copied to dynext, not /home/siddhant/rakudo/install/dynext

[11:40] <diakopter> another prefix fail

[11:41] <sisar> FROGGS: Cygwin would be preferrable because then I can build the latest rakudo

[11:41] <sisar> diakopter: what do you mean by 'prefix fail'?

[11:41] <FROGGS> sisar: if you had ActivePerl and MSVC Express, you could build latest too

[11:42] <FROGGS> sisar: the dll is not in the right place

[11:42] <moritz> that's the wrong approach

[11:42] <moritz> we need to fix rakudo to also build on cygwin

[11:43] <FROGGS> moritz: true, but I wanted to offer something that would work right now

[11:44] <sisar> FROGGS: are there instructions for that approach available anywhere ?

[11:44] <FROGGS> sisar: in the README perhaps?

[11:44] <FROGGS> I think I've seen it somewhere

[11:45] <sisar> also, the file INSTALL.txt in the rakudo repo needs to be updated to reflect recent changes

[11:45] <FROGGS> but installing ActivePerl, Git, MSVC Express, and then configure + nmake it in the MSCV developer console should be all you need to do

[11:45] <moritz> sisar: can you please do a   grep PARROT_LIB_DIR Makfile|head -n1  and paste the result here?

[11:47] <sisar> moritz: "grep: Makfile: No such file or directory"

[11:47] <moritz> sisar: sorry, Makefile

[11:47] <sisar> oh !

[11:47] <sisar> moritz: no output

[11:50] <moritz> that is seriously weird

[11:51] <moritz> sisar: can you please put the entire Makefile somewhere where I can read it?

[11:51] <sisar> ok

[11:51] *** ivan`` left
[11:52] <FROGGS> I'd suggest you would also compile parrot again... maybe it is build with another --prefix?

[11:52] <FROGGS> sisar: is that possible?

[11:52] <FROGGS> (the changed prefix I mean)

[11:52] <diakopter> what about also incluing --gen-parrot

[11:53] <sisar> diakopter: that fails in the same way

[11:53] <sisar> moritz: http://paste.ubuntu.com/6335309/

[11:53] <moritz> that's all not helpful

[11:53] <moritz> the output shows for example /home/siddhant/rakudo/install/lib/parrot/5.9.0-devel/tools/build/pmc2c.pl 

[11:53] <moritz> which shows that parrot has the correct prefix

[11:53] <FROGGS> k

[11:54] <moritz> oh my

[11:54] <FROGGS> does that lack the parrot specific makefile snippets?

[11:55] <moritz> yes

[11:55] <moritz> because npq-p failed to build

[11:55] * moritz has been looking at the wrong end

[11:57] <moritz> sisar: sorry, I need nqp/Makefile too

[11:58] *** nnunley joined
[11:58] <sisar> ok

[11:58] *** ivan`` joined
[12:00] <diakopter> ヽ༼ຈل͜ຈ༽ﾉ

[12:00] <moritz> UniArt

[12:01] <sisar> moritz: http://paste.ubuntu.com/6335335/

[12:02] *** nnunley left
[12:06] <moritz> sisar: in the nqp/ dir, please try running  /home/siddhant/rakudo/install/bin/parrot.exe -L. -X. -Xdynext -o src/vm/parrot/stage0/nqpmo.pbc       src/vm/parrot/stage0/NQPMO-s0.pir

[12:06] <moritz> sisar: if that works, I know how to fix it

[12:07] <sisar> moritz: "error:imcc:loadlib directive could not find library `nqp_bigint_ops'         in file 'src/vm/parrot/stage0/NQPMO-s0.pir' line 1"

[12:07] <moritz> sisar: but dynext/nqp_bigint_ops.dll exists, right?

[12:08] <sisar> moritz: yes

[12:08] <moritz> rurban_: does parrot on cygwin look for dynamic extensions in .dll files?

[12:11] *** darutoko left
[12:15] *** ribasushi left
[12:15] *** benabik left
[12:20] * sisar afk

[12:21] *** BitPuffin left
[12:21] *** BitPuffin joined
[12:21] *** ribasushi joined
[12:22] <diakopter> moritz: usually on wi dowz dkls have to br in ths path or same dir az the launched binaryy to be fou d

[12:24] <diakopter> un

[12:24] <diakopter> unless you ask with the dll'sfull path

[12:25] *** Vendethi_ joined
[12:27] <diakopter> moritz: u could ask sisar to try removing the .dll extension *shrug*

[12:28] *** dmol joined
[12:28] <moritz> diakopter: well, the -X option to parrot should control where it looks for these libraries

[12:41] *** SamuraiJack_ left
[12:42] *** SamuraiJack joined
[12:45] *** SamuraiJack left
[12:45] *** SamuraiJack joined
[12:48] *** [particle]1 joined
[12:49] *** [particle] left
[12:50] *** dansamo left
[12:53] *** dansamo joined
[12:57] *** [particle]1 left
[12:58] *** sisar left
[13:01] *** iSlug joined
[13:11] <dalek> perl6-roast-data: 507a1c5 | coke++ | / (5 files):

[13:11] <dalek> perl6-roast-data: today (automated commit)

[13:11] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/507a1c5295

[13:14] *** ajr joined
[13:15] *** ajr is now known as Guest88233

[13:15] *** nnunley joined
[13:15] *** Guest88233 is now known as ajr_

[13:22] <[Coke]> I screwed up and we missed a day. no real changes for days, though, so it was a good day to miss.

[13:22] *** jaffa4 joined
[13:23] <masak> [Coke]++ # tireless

[13:25] * FROGGS cygwin setup: 48%

[13:27] <masak> FROGGS: that statistic sounds totally made up. :P

[13:28] <moritz> FROGGS: but 87% of all statistices are totally made up!

[13:28] <moritz> (autopun!)

[13:28] <moritz> erm, meant to say that to masak 

[13:28] <FROGGS> *g*

[13:29] <jaffa4> FROGGS: any progress?

[13:29] <FROGGS> jaffa4: not yet

[13:30] <FROGGS> had to repair the dishwasher this morning :o)

[13:30] <jaffa4> Can you do that?

[13:31] <masak> moritz: don't worry, according to the Institute of Incomplete Information, 8 out of every 10

[13:33] <FROGGS> jaffa4: repairing the dishwasher? well, it works now again :o)

[13:33] <moritz> \o/

[13:38] <masak> "Should array indices start at 0 or 1? My compromise of 0.5 was rejected without, I thought, proper consideration." — Stan Kelly-Bootle

[13:38] <masak> :P

[13:38] <arnsholt> =D

[13:39] <FROGGS> hehe

[13:39] <mathw> hah

[13:40] <FROGGS> hi mathw 

[13:42] <mathw> hi FROGGS

[13:42] <PerlJam> greetings

[13:43] <masak> ahoj

[13:43] <FROGGS> o/

[13:43] <masak> so it has come to this.

[13:48] <moritz> it has, indeed, come to this.

[13:48] *** bluescreen10 joined
[13:49] <moritz> why does youtube has to end playing the current video when I start a new search?

[13:49] <PerlJam> foolishness

[13:49] <moritz> it could just move it to a corner, make it a bit smaller, and does the search with ajax in the main area

[13:50] <masak> moritz: that's the way the iPad YouTube client works, fwiw.

[13:51] <mathw> that would immediately lead to people saying "why does YouTube keep playing the video when I do a new search?"

[13:51] <moritz> mathw: to which the obvious answer is "because you didn't stop the video"

[13:52] <mathw> the obvious answer to your question is why not open a new window and search in that? :)

[13:52] <moritz> because that's a hassle

[13:56] <masak> YouTube as a whole is a hassle. it keeps asking me to provide my "real name". as if watching videos has anything to do with that at all.

[13:57] * moritz thinks of "masak" as a kind of valid "real name"

[14:00] <masak> oh, they apparently stopped doing that. now they ask "you have an unused channel -- can we just remove that?" -- yes, please.

[14:02] *** darutoko joined
[14:03] *** jnap joined
[14:04] * FROGGS cygwin setup: 2%

[14:04] <FROGGS> -.-

[14:07] <mathw> I find it odd. Google integrate YouTube comments with their global identity system which is most manifest in the form of Google+ profiles. Half the reaction I see is "Google+ is a failure so obviously Google are trying to get higher user counts for it by the back door!"

[14:07] <mathw> not "I don't want to tie my YouTube activity to my Google+ account"

[14:07] <masak> FROGGS: that's a lot fewer percents than last time.

[14:07] <mathw> not privacy concerns

[14:07] <mathw> but worry about Google claiming Google+ is more successful than it is

[14:07] <mathw> very odd

[14:08] <masak> I don't want to tie my YouTUbe activity to my Google+ account. I don't want a Google+ account.

[14:08] <mathw> I think some people think that one day it might become more popular and they'll suddenly be forced to stop using Facebook.

[14:08] *** rurban joined
[14:09] <masak> well, I'd rather be in Google's silo than in Facebooks. but my first choice is neither of them.

[14:10] <mathw> that's a viewpoint I can understand

[14:10] <mathw> I don't understand this apparent fear some people have of Google+ appearing to be anything more than an abject failure (which it isn't, but they like to pretend)

[14:11] <moritz> well, facebook and google both have way too much private data of folks

[14:11] <moritz> imagine all that data in one hand

[14:11] <moritz> that's truly scary

[14:13] *** Vendethi_ left
[14:14] <PerlJam> ... and that's how skynet starts its attack.

[14:15] <mathw> moritz: I'm mostly seeing these viewpoints from avid Facebook users, so their data's already out there.

[14:15] <moritz> mathw: but not out there at google

[14:15] *** logie joined
[14:15] <masak> PerlJam: Skynet seeding its first attack on social user accounts? now *that's* scary.

[14:16] <moritz> most avoid facebook users are *also* avid google users

[14:16] <moritz> (because most everybody is)

[14:16] <masak> yeah, most of us have our feet stuck really deep in the cloud.

[14:18] <FROGGS> masak: yeah, after about 95% it decided that the file transfer had aborted, so it asked nicely about choosing AGAIN what to install

[14:18] <mathw> FROGGS: fun!

[14:19] <FROGGS> yeah :/

[14:20] * geekosaur notes that "avoid" and "avid" are almost but not quite antonyms...

[14:23] <PerlJam> avoid avid ovid video

[14:25] *** rurban left
[14:25] *** pernatiy joined
[14:26] *** denis_boyun joined
[14:26] *** rurban joined
[14:27] *** kaleem left
[14:28] *** bluescreen100 joined
[14:31] *** bluescreen10 left
[14:32] *** pernatiy left
[14:37] <masak> I think many ovid^Wavoid^Wavid language design people on this channel will enjoy http://exple.tive.org/blarg/2013/10/22/citation-needed/

[14:38] *** lizmat joined
[14:39] <PerlJam> I mildly enjoyed some of the comments.  It's like they didn't even read the article.

[14:39] <masak> sounds like most comments on the web :/

[14:40] <japhb__> .oO( Hey!  I object to that!  You're completely wrong!  Wait, what's the topic again? )

[14:41] <geekosaur> there is a reason I use the Shut Up extension in my browsers :)

[14:42] *** Vendethi_ joined
[14:42] <japhb__> geekosaur: What does it do?  Remove comments like ABP removes ads?

[14:42] <geekosaur> also, they seem to have missed perl (< 6)'s own $[, granting that it is deprecated in perl5

[14:43] <geekosaur> yep

[14:43] <geekosaur> mangles CSS

[14:43] <geekosaur> one unforutnate side effect is it also tends to remove bugzilla (and some other bug tracker) comments, so you need to turn it off there

[14:44] <geekosaur> but as it stores state per-site, that's a one-time thing per bug tracker

[14:47] <masak> geekosaur: you imply bugzilla comment are somehow less bad than comments in general? :P

[14:48] <geekosaur> at least a *slightly* higher signal to noise ratio, usually

[14:48] <geekosaur> given that anything over 0 qualifies

[14:49] <jaffa4> is there perl6 parser, short example?

[14:49] <geekosaur> (besides, the dev responses to garbage comments can also be interesting in their own way :)

[14:50] *** risou_awy is now known as risou

[14:50] *** risou is now known as risou_awy

[14:50] *** risou_awy is now known as risou

[14:51] <masak> jaffa4: are you thinking of something like https://github.com/moritz/json/blob/master/lib/JSON/Tiny/Grammar.pm ?

[14:51] <lizmat> good *, #perl6, from Salzburg, Austria

[14:52] <moritz> \o lizmat 

[14:52] <jaffa4> masak: maybe

[14:52] *** kaleem joined
[14:52] *** jeffreykegler joined
[14:53] <lizmat> afk to see sights &

[14:53] <jaffa4> I mean perl 6 language perser. there is std.. but is there a short example of using std?

[14:53] <masak> jaffa4: then maybe that example will serve you well. :)

[14:53] <masak> jaffa4: oh! using STD.

[14:54] <masak> jaffa4: I can't think of any.

[14:54] <moritz> jaffa4: yes, the 'tryfile' script in the STD repo

[14:54] *** tobyink joined
[14:54] <masak> oh, nice.

[14:54] <TimToady> ./viv -e is what I usually use

[14:54] *** iSlug left
[14:55] <jaffa4> and the std repo isM

[14:55] <moritz> ... easy to find

[14:56] <jaffa4> https://github.com/perl6/std/?

[14:57] <moritz> yes

[15:04] *** benabik joined
[15:04] *** kaare_ joined
[15:07] <jaffa4> STD_P5.pm6 does not compile, there is noe TD

[15:08] <jaffa4> there is no STD.

[15:08] *** rurban left
[15:10] *** rurban joined
[15:13] <jaffa4> I am getting a weird error

[15:13] <jaffa4> Could not locate compile-time value for symbol P6

[15:14] *** Vendethi_ left
[15:14] *** rurban left
[15:15] *** pernatiy joined
[15:15] *** rurban joined
[15:17] *** rurban1 joined
[15:18] <dalek> specs: fb6536e | masak++ | S99-glossary.pod:

[15:18] <dalek> specs: [S99] PDD means two things

[15:18] <dalek> specs: 

[15:18] <dalek> specs: The two meanings now homestead together under one entry, warming themselves

[15:18] <dalek> specs: under each other's feathers.

[15:18] <dalek> specs: review: https://github.com/perl6/specs/commit/fb6536e306

[15:19] *** rurban left
[15:26] *** kaleem left
[15:27] *** FROGGS left
[15:28] *** lizmat left
[15:28] *** jaffa4 left
[15:28] *** pernatiy left
[15:28] *** pernatiy joined
[15:32] *** pernatiy_ joined
[15:35] *** pernatiy left
[15:36] *** PZt left
[15:36] *** [particle] joined
[15:39] *** FROGGS joined
[15:43] *** dmol left
[15:46] *** lowpro30 joined
[15:58] *** denis_boyun left
[15:58] *** tobyink left
[16:00] *** sqirrel left
[16:05] *** PZt joined
[16:14] *** rindolf left
[16:15] *** rurban1 left
[16:17] *** rurban joined
[16:22] *** pernatiy_ left
[16:22] *** pernatiy joined
[16:23] *** denis_boyun joined
[16:27] *** rurban left
[16:29] *** pernatiy left
[16:30] *** pernatiy joined
[16:34] *** dmol joined
[16:35] *** jnap left
[16:37] *** jnap joined
[16:38] *** zakharyas left
[16:40] *** rurban joined
[16:45] *** jnap left
[16:51] *** iSlug joined
[16:51] <japhb__> I have been wondering for some time how to describe the greater part of my Perl 6 development work to someone who isn't in the community (I get asked by friends and relatives all the time), and I just came up with the moniker "mantle developer".  Not a core developer, but not a crust developer either.  I figure it will be more fun to explain that term than the intracasies of Str.Numeric.  :-)

[16:51] *** pernatiy left
[16:52] <arnsholt> That's a good word. I may very well steal it =)

[16:52] *** jnap joined
[16:53] <moritz> japhb__++

[16:53] <colomon> japhb++

[16:53] * colomon hopes there is only one japhb.

[16:53] <japhb__> There Can Be Only One.

[16:53] <japhb__> (In fact, that was the whole point of the nick.  ;-)

[16:54] * moritz wants to create more subduction zones that draw crust developers into the mantle and mantle developers into the core

[16:56] * jnthn wonders what a mantle plume would be... :)

[16:58] *** jnap1 joined
[16:59] *** jnap left
[17:03] *** jnap1 left
[17:05] <benabik> Lots of developers do tend to get ejected by energetic eruptions...

[17:07] *** iSlug left
[17:12] <jeffreykegler> I definitely will steal the core/mantle/crust meme

[17:12] <japhb__> moritz: jnthn++'s two day training was an excellent subduction zone.  I think it just needs marketing.

[17:13] <japhb__> .oO( Come visit the Marianas Trip and say you went deeper than ever before! )

[17:13] <japhb__> s/Trip/Trench/

[17:13] <japhb__> Sheesh.

[17:14] <japhb__> s/Marianas/Mariana/

[17:14] * japhb__ rolls his eyes

[17:16] *** ajr joined
[17:17] *** ajr is now known as Guest41749

[17:17] *** ajr_ left
[17:17] *** Guest41749 is now known as ajr_

[17:25] *** jeffreykegler left
[17:28] *** pernatiy joined
[17:31] <TimToady> Perl uses 0-based indexing because modular arithmetic is 0-based, and computers are all about modular arithmetic.

[17:36] *** rurban left
[17:38] <japhb__> I use 0-based indexing because I can't *not* think about the CPU opcodes that implement standard compiled language data structures.

[17:38] <japhb__> IOW: I use 0-based indexing because the CPU does.

[17:39] *** stevan_ left
[17:39] <japhb__> Although I do admit to using 0 as an in-band sentinel for some algorithms.

[17:40] *** rurban joined
[17:42] <TimToady> what we need is a numeric type that is (1 but 0), (2 but 1), (3 but 2) ... *

[17:43] * TimToady had better go decorate for halloween before doing any more psychic damage

[17:43] *** pernatiy left
[17:44] <geekosaur> postfix º / ª ?

[17:44] *** sqirrel joined
[17:45] *** rurban left
[17:46] *** fhelmberger_ left
[17:48] *** ajr_ left
[17:50] *** bluescreen10 joined
[17:52] *** stevan__ joined
[17:53] *** bluescreen100 left
[17:58] *** daxim left
[18:03] *** [Sno] joined
[18:08] *** risou is now known as risou_awy

[18:10] *** risou_awy is now known as risou

[18:11] *** ajr_ joined
[18:15] *** rurban joined
[18:16] *** cognominal__ joined
[18:18] *** darutoko left
[18:19] *** FOAD_ joined
[18:25] *** cotto left
[18:25] *** mathw left
[18:25] *** cognominal left
[18:25] *** FROGGS[mobile] left
[18:25] *** markov left
[18:25] *** ggoebel13 left
[18:25] *** woosley left
[18:25] *** Celelibi left
[18:25] *** _ilbot left
[18:25] *** rafl left
[18:25] *** FOAD left
[18:25] *** _sri left
[18:25] *** FOAD_ is now known as FOAD

[18:26] *** Celelibi joined
[18:27] *** risou is now known as risou_awy

[18:27] *** iSlug joined
[18:31] *** tobyink joined
[18:32] *** PacoAir left
[18:37] *** sqirrel left
[18:38] <diakopter> masak: you've already got a virtual google identity/profile

[18:38] <diakopter> and they probably know all your personal info too.. 

[18:38] *** iSlug left
[18:41] <diakopter> masak: I guess I'm a meteorite developer

[18:44] *** dansamo left
[18:54] *** SamuraiJack left
[18:55] *** iSlug joined
[18:55] <dalek> evalbot: 92be771 | moritz++ | runtime/run-rakudo-jvm-evalserver:

[18:55] <dalek> evalbot: no need to use negative PIDs for killing the JVM

[18:55] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/92be77133f

[18:57] *** lizmat joined
[18:59] <moritz> j: say 42

[18:59] <camelia> rakudo-jvm 882e33: OUTPUT«42␤»

[19:04] *** woolfy joined
[19:05] *** SamuraiJack joined
[19:10] *** SamuraiJack left
[19:18] *** cotto joined
[19:18] *** mathw joined
[19:18] *** FROGGS[mobile] joined
[19:18] *** markov joined
[19:18] *** ggoebel13 joined
[19:18] *** woosley joined
[19:18] *** _ilbot joined
[19:18] *** rafl joined
[19:18] *** _sri joined
[19:20] *** jaffa4 joined
[19:20] *** Rotwang joined
[19:23] <FROGGS> /home/leicht/rakudo/install/bin/parrot.exe -L. -X. -o src/vm/parrot/stage0/nqpmo.pbc       src/vm/parrot/stage0/NQPMO-s0.pir

[19:23] <FROGGS> error:imcc:loadlib directive could not find library `nqp_bigint_ops'

[19:24] <FROGGS> moritz: I get the same

[19:24] * lizmat is back from seeing sights and catching up on backlog

[19:26] <FROGGS> moritz: that nqp_bigint_ops.dll seems to be fine... (checking with ldd and nm)

[19:27] *** slava joined
[19:27] *** slava is now known as slava-work

[19:27] <lizmat> [Coke], timotimo: re http://irclog.perlgeek.de/perl6/2013-10-30#i_7786286 and tests of Mix.roll: I can now replicate the problem

[19:27] <lizmat> and am looking at a solution

[19:28] <moritz> FROGGS: is there something like strace on cygwin?

[19:28] <slava-work> TimToady: hate to ask here, but it appears that there was a video where you were show casing a module that showed what the regex engine in perl 5 did as it tried to match a regex against a string

[19:28] <moritz> FROGGS: if yes, please try to run it, and see what file names it looks for

[19:28] <moritz> slava-work: perl -Mre=debug

[19:29] <FROGGS> moritz: how do I use it?

[19:29] <moritz> FROGGS: strace $command

[19:29] <slava-work> moritz: ahh, thanks

[19:29] <moritz> or strace -o file $program

[19:30] *** Rotwang left
[19:31] *** jeffreykegler joined
[19:32] *** slava-work left
[19:34] *** FROGGS left
[19:35] *** xinming left
[19:36] <lue> hello world o/

[19:37] *** xinming joined
[19:39] *** sqirrel joined
[19:44] *** Rotwang joined
[19:49] *** FROGGS joined
[19:49] <dalek> roast: fa28a3b | (David Warring [email@hidden.address] | S05-grammar/protoregex.t:

[19:49] <dalek> roast: added fudged test for RT120146

[19:49] <dalek> roast: review: https://github.com/perl6/roast/commit/fa28a3b41a

[19:49] <lizmat> [Coke], timotimo: testing fix for Mixy.rolll now

[19:57] <dalek> rakudo/nom: 1dd6720 | (Elizabeth Mattijsen)++ | src/core/Mixy.pm:

[19:57] *** lizmat left
[19:57] <dalek> rakudo/nom: Fix Mixy.roll, to not use negative weights

[19:57] <dalek> rakudo/nom: 

[19:57] <dalek> rakudo/nom: Spotted by [Coke]++ and further investigated by timotimo++

[19:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1dd6720464

[19:58] *** lizmat joined
[19:59] <dalek> roast: e195bd8 | (Elizabeth Mattijsen)++ | S02-types/mix.t:

[19:59] <dalek> roast: Small adaptation to Mixy.roll test

[19:59] <dalek> roast: 

[19:59] <dalek> roast: To make sure that if it fails, it will fail both on parakudo and jakudo

[19:59] <dalek> roast: review: https://github.com/perl6/roast/commit/e195bd87df

[20:02] *** lowpro30_ joined
[20:05] *** lowpro30 left
[20:11] *** risou_awy is now known as risou

[20:13] *** iSlug left
[20:14] *** jeffreykegler left
[20:27] *** risou is now known as risou_awy

[20:32] *** bluescreen10 left
[20:32] <moritz> tadzik: http://irclog.perlgeek.de/perl.pl/ is now fixed

[20:33] <dalek> specs: e27f008 | (Elizabeth Mattijsen)++ | S02-bits.pod:

[20:33] <dalek> specs: Add :chop adverb to quoting adverbs

[20:33] <dalek> specs: 

[20:33] <dalek> specs: The idea being that in combination with :to, a .chop could be done at compile

[20:33] <dalek> specs: time already if there is no interpolation happening at the end of the result.

[20:33] <dalek> specs: review: https://github.com/perl6/specs/commit/e27f00820a

[20:33] *** bluescreen10 joined
[20:38] *** stevan__ left
[20:47] *** sqirrel left
[20:47] *** Vlavv` left
[20:55] *** benabik left
[20:56] <dalek> nqp: 4f69419 | dwarring++ | examples/rubyish/ (5 files):

[20:56] <dalek> nqp: rubyish slurpy params

[20:56] <dalek> nqp: review: https://github.com/perl6/nqp/commit/4f69419e77

[20:56] <dalek> rakudo/nom: 2bf7cbc | (Elizabeth Mattijsen)++ | docs/compiler_overview.pod:

[20:56] <dalek> rakudo/nom: RLHF fixes

[20:56] <dalek> rakudo/nom: 

[20:56] <dalek> rakudo/nom: Wow, is this document outdated now.

[20:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2bf7cbcf93

[20:58] *** lizmat_ joined
[20:58] *** lizmat left
[20:58] <lizmat_> .oO( Wifi at hotel really sucks )

[20:59] *** Vlavv` joined
[20:59] <jnthn> Balcony wifi here is very slow, but stable. :)

[21:01] <itz>  /last salz

[21:01] <itz> oops

[21:02] <moritz> does the JVM backend translate QAST straight to JVM bytecode?

[21:02] <moritz> or is there an intermediate format?

[21:04] *** rurban left
[21:04] *** rurban joined
[21:04] *** telex left
[21:05] <lizmat_> at one point, I was sure there was an intermediate step, but right now I'm not so sure

[21:05] <lizmat_> jnthn will know  :-)

[21:05] <lizmat_> just found this in docs/deprecations:

[21:05] <lizmat_>     Str.capitalize and &capitalize are deprecated in favor

[21:05] <lizmat_>     of the the Str.wordcase and &wordcase routines.

[21:05] <lizmat_>     They will uncondtionally warn in 2012.10, and be removed in 2012.11.

[21:06] <jnthn> moritz: JAST

[21:06] <moritz> jnthn: takk

[21:06] *** stevan_ joined
[21:06] <jnthn> moritz: Which is pretty close to JVM bytecode

[21:06] * moritz tries to update docs/architecture.svg to multiple backends

[21:06] *** telex joined
[21:07] <jnthn> moritz: For Moar it's MAST, which goes straight to bytecode (no textual phase)

[21:07] <moritz> I wonder if the serializer should be a separate box

[21:07] <moritz> like the backend-dependent part of World

[21:07] <jnthn> The format is the same but it's gotta be implemented per backend...

[21:10] <moritz> and the QAST compilers don't use World, right?

[21:10] *** lizmat_ is now known as lizmat

[21:10] <lizmat> so should I remove capitalize ?

[21:11] <moritz> lizmat: +1

[21:11] *** zwut00 joined
[21:11] *** kaare_ left
[21:12] <dalek> rakudo/nom: 09a2ec1 | jonathan++ | src/vm/jvm/core/Threading.pm:

[21:12] <dalek> rakudo/nom: A Lock primitive, for use in low-level things.

[21:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/09a2ec199c

[21:12] <dalek> rakudo/nom: b83de34 | jonathan++ | src/vm/jvm/core/Threading.pm:

[21:12] <dalek> rakudo/nom: De-confuse start/run on Thread.

[21:12] <dalek> rakudo/nom: 

[21:12] <dalek> rakudo/nom: We use .run on the Scheduler to mean "run this thing", and .run on

[21:12] <dalek> rakudo/nom: a Promise to mean "promise to run this thing", so Thread.run should

[21:12] <dalek> rakudo/nom: really mean "run this on a new thread".

[21:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b83de3478e

[21:12] <dalek> rakudo/nom: c1064c7 | jonathan++ | src/vm/jvm/core/Threading.pm:

[21:12] <dalek> rakudo/nom: Implement Promise.Bool.

[21:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c1064c7558

[21:12] <dalek> roast: 5051341 | jonathan++ | S17-concurrency/promise.t:

[21:12] <dalek> roast: Test Promise boolification.

[21:12] <dalek> roast: review: https://github.com/perl6/roast/commit/5051341b58

[21:12] <dalek> roast: 1f4fd4a | jonathan++ | S17-concurrency/lock.t:

[21:12] <dalek> roast: Tests for Lock.

[21:12] <dalek> roast: review: https://github.com/perl6/roast/commit/1f4fd4ae68

[21:12] <dalek> roast: 6f65a8b | jonathan++ | S17-concurrency/thread.t:

[21:12] <dalek> roast: Update thread.t for API change.

[21:12] <dalek> roast: review: https://github.com/perl6/roast/commit/6f65a8bc42

[21:20] <dalek> rakudo/nom: f5f8e47 | (Elizabeth Mattijsen)++ | src/core/Cool.pm:

[21:20] <dalek> rakudo/nom: Remove capitalize, as per docs/deprecations

[21:20] <dalek> rakudo/nom: 

[21:20] <dalek> rakudo/nom: Originally scheduled for 2012.11

[21:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f5f8e47a6d

[21:21] <dalek> roast: 46006ae | (Elizabeth Mattijsen)++ | S02-types/deprecations.t:

[21:21] <dalek> roast: Remove deprecation tests for capitalize

[21:21] <dalek> roast: 

[21:21] <dalek> roast: As capitalize is no more

[21:21] <dalek> roast: review: https://github.com/perl6/roast/commit/46006ae028

[21:21] <jnthn> .oO( capitalize punishment issued )

[21:29] *** araujo left
[21:33] <dalek> rakudo/nom: 0c62dab | (Elizabeth Mattijsen)++ | docs/ROADMAP:

[21:33] <dalek> rakudo/nom: Remove mention of KeySet/KeyBag

[21:33] <dalek> rakudo/nom: 

[21:33] <dalek> rakudo/nom: As they're respecced and implemented

[21:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0c62daba9c

[21:34] <dalek> rakudo/nom: cf66175 | moritz++ | docs/architecture.svg:

[21:34] <dalek> rakudo/nom: update architecture.svg to multiple backends

[21:34] <dalek> rakudo/nom: 

[21:34] <dalek> rakudo/nom: it contains the MoarVM backend in good faith

[21:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cf66175992

[21:38] *** araujo joined
[21:43] *** logie left
[21:47] *** jaffa4 left
[21:47] * lizmat tries to get an early night

[21:48] *** lowpro30_ left
[21:51] *** woolfy left
[21:54] *** colomon left
[22:00] *** colomon joined
[22:02] *** lizmat left
[22:05] *** denis_boyun left
[22:05] *** Ulti joined
[22:05] *** denis_boyun joined
[22:05] *** bluescreen10 left
[22:08] *** BenGoldberg joined
[22:12] *** risou_awy is now known as risou

[22:25] *** denis_boyun left
[22:26] *** denis_boyun joined
[22:26] *** FROGGS[mobile] left
[22:30] *** risou is now known as risou_awy

[22:32] *** colomon left
[22:33] *** xenoterracide joined
[22:34] *** colomon joined
[23:03] <dalek> rakudo/nom: adf8221 | jonathan++ | src/vm/jvm/core/Threading.pm:

[23:03] <dalek> rakudo/nom: Provide a Thread.yield method.

[23:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/adf82214ee

[23:03] <dalek> rakudo/nom: 7409806 | jonathan++ | src/vm/jvm/core/Threading.pm:

[23:03] <dalek> rakudo/nom: Fixes/improvements to select.

[23:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/74098064b4

[23:03] <dalek> rakudo/nom: 15a4103 | jonathan++ | src/vm/jvm/core/Threading.pm:

[23:03] <dalek> rakudo/nom: Add a CurrentThreadScheduler.

[23:03] <dalek> rakudo/nom: 

[23:03] <dalek> rakudo/nom: Always schedules things on the current thread. Useful for forcing

[23:03] <dalek> rakudo/nom: synchrony on things that default to asynchrony.

[23:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/15a4103275

[23:03] *** spider-mario left
[23:04] *** rjbs joined
[23:05] *** BitPuffin left
[23:06] *** BitPuffin joined
[23:07] *** sftp left
[23:07] *** sftp joined
[23:07] *** Celelibi left
[23:09] *** grondilu joined
[23:09] *** rurban left
[23:11] *** Celelibi joined
[23:19] <japhb__> jnthn++ # Kicking concurrent butt

[23:20] <jnthn> *butts # :)

[23:23] <dalek> nqp: 1d2a068 | dwarring++ | examples/rubyish/ (3 files):

[23:23] <dalek> nqp: rubyish slurpy hash params

[23:23] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1d2a068759

[23:33] <japhb__> jnthn: When you're thinking you could really use a break from threads, but are still in a hacking mood, ability to convert between (u)int32/64 and float/double on JVM is near and dear to me.  :-)

[23:34] * japhb__ attempts to enqueue a job on jnthn.scheduler ...

[23:34] *** zwut00 left
[23:34] <japhb__> Come to think of it, arnsholt would know how to do that too, I suspect.

[23:35] *** PacoAir joined
[23:35] <jnthn> japhb__: Where convert means "re-interpret bytes"?

[23:36] <japhb__> jnthn: exactly

[23:37] <japhb__> The problem is that Protocol Buffers intrinsically see data on two levels: chunks of raw data of certain lengths, and typed data.  When you read a field from the PB, you read a tag indicating field ID and a "wire type" that says how to calculate the length to read.

[23:39] <japhb__> Then after that you read the raw bytes, and encode/decode the bytes as appropriate according to the field type you look up for that field ID.  If you don't recognize the field ID (because you have an old copy of the message definition), you are required to pass the raw bytes through for other processing elsewhere.

[23:40] <japhb__> The inverse occurs while going the other direction; dumb filters are supposed to be lossless, except for possibly rearranging fields on the wire for canonical packing.

[23:41] <japhb__> So I've got code that sees a "64 bit" wire type, loads 8 bytes and turns them into a uint64, and passes them on to the code that tries to map a field type to determine whether to reinterpret as a double.

[23:43] <japhb__> And I'm trying to do all this without creating and passing a ridiculous number of tiny blob8's around.

[23:45] *** Vendethi_ joined
[23:46] <jnthn> Thus why you'd like to be able to cheaply get a subblob too that doens't copy, I guess...

[23:47] <japhb__> Yeah.

[23:48] *** denis_boyun left
[23:48] <japhb__> There's lots of places I'd like to do work directly on subblobs/subbufs -- like encoding/decoding strings, for instance.

[23:50] *** Vendethi_ left
[23:50] <tadzik> greetings, #perl6

[23:50] <dalek> rakudo/nom: 9c52be0 | jonathan++ | src/vm/jvm/core/Threading.pm:

[23:50] <dalek> rakudo/nom: Assorted Channel API tweaks and improvements.

[23:50] <dalek> rakudo/nom: 

[23:50] <dalek> rakudo/nom: Change "finish" to "close", since it is more clear. Also "completed"

[23:50] <dalek> rakudo/nom: becomese "closed" to match, removing that naming oddity. There is now

[23:50] <dalek> rakudo/nom: also a peek method, and a bug fix to closed.

[23:50] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9c52be0e00

[23:51] <jnthn> japhb__: Maybe when I'm done with my current round of concurrency work, I should spend some time on our binary data handling :)

[23:51] <dalek> roast: 6013403 | jonathan++ | S17-concurrency/channel.t:

[23:51] <dalek> roast: Some Channel tests.

[23:51] <dalek> roast: review: https://github.com/perl6/roast/commit/6013403730

[23:52] <jnthn> japhb__: I think I've figured out what kinda direction to go in for subblob just referring to the underlyuing blob.

[23:53] <jnthn> o/ tadzik 

