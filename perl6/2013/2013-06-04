[00:00] <eternaleye> r: multi a( $b where * < 5 ) is pure { (state $c)++ }; multi a( $b where * >= 5 ) is pure { $b }; a( $_ ).say for 5..10;

[00:00] <camelia> rakudo b2072f: OUTPUT«5␤6␤7␤8␤9␤10␤»

[00:00] <eternaleye> r: multi a( $b where * < 5 ) is pure { (state $c)++ }; multi a( $b where * >= 5 ) is pure { (state $c)++ }; a( $_ ).say for 5..10;

[00:00] <camelia> rakudo b2072f: OUTPUT«0␤1␤2␤3␤4␤5␤»

[00:00] <timotimo> it's kinda not surprising that that can't be folded.

[00:01] <eternaleye> The stub code one interests me, though. It looks like declaring is pure on a proto makes it fold the proto and ignore the multis.

[00:01] <lue> Am I right in thinking the sentence about q:z<foo>// in S02:3877..3879 is useless, wrt S02:3752..3755 ?

[00:02] <eternaleye> That might turn out to be a gotcha for people coming from Haskell.

[00:02] <timotimo> oh

[00:02] <timotimo> yeah, if you don't put a {*} somewhere in there, it won't work

[00:03] <eternaleye> r: proto a( $b ) { ... }; multi a( Int $b ) is pure { $b }; multi a( Str $b ) is pure { $b }; a( $_ ).say for 5..10;

[00:03] <camelia> rakudo b2072f: OUTPUT«Stub code executed␤  in method gist at src/gen/CORE.setting:10161␤  in method gist at src/gen/CORE.setting:893␤  in sub say at src/gen/CORE.setting:11047␤  in method say at src/gen/CORE.setting:890␤  in method say at src/gen/CORE.setting:889␤  in block  at /tmp/Wd0…

[00:03] <eternaleye> r: proto a( $b ) { * }; multi a( Int $b ) is pure { $b }; multi a( Str $b ) is pure { $b }; a( $_ ).say for 5..10;

[00:03] <camelia> rakudo b2072f: OUTPUT«5␤6␤7␤8␤9␤10␤»

[00:03] <eternaleye> r: proto a( $b ) { * }; multi a( Int $b ) is pure { $b+20 }; multi a( Str $b . 'zzz' ) is pure { $b }; a( $_ ).say for 5..10;

[00:03] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Missing block␤at /tmp/xHNO3PbFJW:1␤------> $b ) is pure { $b+20 }; multi a( Str $b ⏏. 'zzz' ) is pure { $b }; a( $_ ).say fo␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤   …

[00:03] <eternaleye> r: proto a( $b ) { * }; multi a( Int $b ) is pure { $b+20 }; multi a( Str $b ~ 'zzz' ) is pure { $b }; a( $_ ).say for 5..10;

[00:03] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Missing block␤at /tmp/XeiI_4PcYX:1␤------> $b ) is pure { $b+20 }; multi a( Str $b ⏏~ 'zzz' ) is pure { $b }; a( $_ ).say fo␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤   …

[00:03] <eternaleye> oldp5habits--

[00:03] <eternaleye> Gah

[00:04] <flussence> lue: good catch, I think you're right

[00:04] <eternaleye> r: proto a( $b ) { * }; multi a( Int $b ) is pure { $b+20 }; multi a( Str $b ) is pure { $b ~ 'zzz' }; a( $_ ).say for 5..10;

[00:04] <camelia> rakudo b2072f: OUTPUT«25␤26␤27␤28␤29␤30␤»

[00:04] <eternaleye> Mm

[00:04] <eternaleye> timotimo: Thanks

[00:04] *** irdan left
[00:04] <eternaleye> timotimo: Haven't used proto since { ... } was the proper syntax.

[00:04] <timotimo> oh! :)

[00:04] <timotimo> i don't think i was born back then :P

[00:05] <eternaleye> timotimo: Eh, it was less than 3yr back.

[00:05] <timotimo> oh. yeah, i was indeed born before that

[00:05] <eternaleye> r: proto a( $b ) is pure { * }; multi a( Int $b ) is pure { $b+20 }; multi a( Str $b ) is pure { $b ~ 'zzz' }; a( $_ ).say for 5..10;

[00:05] <camelia> rakudo b2072f: OUTPUT«25␤26␤27␤28␤29␤30␤»

[00:05] <eternaleye> Cool, that's more like I expected.

[00:06] <eternaleye> 'is pure' + 'is cached' sounds like it'd be VERY nice for some mathematical work.

[00:06] <timotimo> er. i dunno what i had expected to happen when i did pure on the 0 to 10 example with when * < 5 and when * >= 5 ...

[00:06] <timotimo> it would seem like is cached should just blanket-apply is pure as well :P

[00:07] <eternaleye> timotimo: Yeah, where clauses act differently IIRC. Don't they actually happen as a second stage in multi dispatch, and they just each get evaluated?

[00:07] <lue> flussence: I think I'll remove it, unless someone who knows the design of Perl 6 like the back of their hand tells me that either it's the paren-only statement is wrong or that "no really, that's supposed to be like that"

[00:07] <timotimo> eternaleye: i should have applied the same parater twice in a row to figure out if it'd get folded.

[00:08] <eternaleye> timotimo: Mmm. for 5 xx 10?

[00:08] <timotimo> more like that, yeah.

[00:08] <timotimo> now i need a few seconds to think about how to generate a list 1, 1, 2, 2, 3, 3 in the most simple way.

[00:09] <timotimo> r: say (1.0, 1.5 ... 10)>>.floor

[00:09] <camelia> rakudo b2072f: OUTPUT«1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10␤»

[00:09] <timotimo> almost.

[00:09] <timotimo> r: say (1.0, 1.5 ... 10.5)>>.floor

[00:09] <camelia> rakudo b2072f: OUTPUT«1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10␤»

[00:09] <timotimo> r: say (^10 xx 2).flat.perl

[00:09] <camelia> rakudo b2072f: OUTPUT«(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9).list␤»

[00:09] <timotimo> oh, nope.

[00:09] <flussence> std: q:z<foo>//

[00:09] <camelia> std 2504c1a: OUTPUT«===SORRY!===␤Unrecognized quote modifier: z at /tmp/S8vTsyQXAY line 1:␤------> q⏏:z<foo>//␤Bogus term at /tmp/S8vTsyQXAY line 1 (EOF):␤------> q:z<foo>//⏏<EOL>␤Parse failed␤FAILED 00:00 42m␤»

[00:10] <eternaleye> r: say (^10 xx 2).tree.zip.perl

[00:10] <camelia> rakudo b2072f: OUTPUT«No such method 'zip' for invocant of type 'List'␤  in block  at /tmp/5qLQU5oIOm:1␤␤»

[00:10] <eternaleye> r: say ( [Z] (^10 xx 2).tree ).perl

[00:10] <camelia> rakudo b2072f: OUTPUT«((0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9),).list␤»

[00:10] <timotimo> oh, nope.cute idea.

[00:10] <eternaleye> r: say ( [Z] (^10 xx 2) ).perl

[00:10] <camelia> rakudo b2072f: OUTPUT«((0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9),).list␤»

[00:10] <timotimo> r: say (^10 Z ^10).flat.perl

[00:10] <eternaleye> r: say ( [Z] (^10) xx 2 ).perl

[00:11] <camelia> rakudo b2072f: OUTPUT«(0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9).list␤»

[00:11] <camelia> rakudo b2072f: OUTPUT«((0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9),).list␤»

[00:11] <timotimo> got it :)

[00:11] <eternaleye> r: say ( [Z] (^10) xx 2 ).perl

[00:11] <camelia> rakudo b2072f: OUTPUT«((0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9),).list␤»

[00:11] <timotimo> no, look

[00:11] <eternaleye> Yup, you did.

[00:11] <timotimo> :)

[00:11] <eternaleye> I couldn't tell who camelia was responding to, so I repeated mine.

[00:11] <timotimo> ah. yeah, it would be something worth exploring in the evalbot source

[00:12] <timotimo> if there were two requests very recently by different people, add a highlight to the front

[00:12] <eternaleye> Mm, maybe make it "rakudo $revision (for $person):"

[00:12] <timotimo> that sounds nice.

[00:12] <timotimo> the evalbot is perl5, though, isn't it?

[00:12] <eternaleye> timotimo: Even in general, not just close together. Simpler that way.

[00:13] <eternaleye> timotimo: Even if it is, that's find. P5 was my first programming languagd :D

[00:13] <flussence> (while we're at it, how about playing tricks with sink context so code without a "say" returns the last value...)

[00:13] <timotimo> nah, otherwise it's just more noise

[00:13] <eternaleye> *language

[00:13] <timotimo> you started programming that recently? ;)

[00:13] <eternaleye> timotimo: I'm only 22, 23 on the 27th of this month.

[00:13] <timotimo> my first experiences were when my father pointed me at qbasic and showed me nibbles and gorillas in qbasic ;)

[00:13] <eternaleye> Started when I was 15.

[00:14] <timotimo> but i was an incredibly priviledged child

[00:14] <eternaleye> (Well, I used shell first, but I don't count that)

[00:15] <dalek> specs: 0cefa72 | lue++ | S02-bits.pod:

[00:15] <dalek> specs: [S02] Removed useless statement concerning quoting forms.

[00:15] <dalek> specs: 

[00:15] <dalek> specs: Specifically, q:z<foo> will always be a quote form using angle brackets

[00:15] <dalek> specs: delimiters and an additional (imaginary in this case) :z adverb that

[00:15] <dalek> specs: didn't take any arguments, because according to the Adverbial Pair Forms

[00:15] <dalek> specs: section above, only parens give arguments to quote form adverbs.

[00:15] <dalek> specs: review: https://github.com/perl6/specs/commit/0cefa72524

[00:19] <dalek> roast: d0a1b09 | (Solomon Foster)++ | S32-io/dir.t:

[00:19] <dalek> roast: Add some tests that Niecza can pass.

[00:19] <dalek> roast: review: https://github.com/perl6/roast/commit/d0a1b098ea

[00:26] <dalek> niecza: 5c63c23 | (Solomon Foster)++ | lib/CORE.setting:

[00:26] <dalek> niecza: IO::FileTestable doesn't have $!path.

[00:26] <dalek> niecza: 

[00:26] <dalek> niecza: Switch to ~self instead.

[00:26] <dalek> niecza: review: https://github.com/sorear/niecza/commit/5c63c23cd2

[00:34] *** redditanalytics joined
[00:35] <redditanalytics> is there a way to see what release of Perl6 is in a certain ubuntu repository?

[00:35] <timotimo> do you mean just by opening up the repository with a browser?

[00:36] *** colomon left
[00:37] <redditanalytics> oh I was thinking from a command line

[00:37] <redditanalytics> but I guess that would work

[00:37] <redditanalytics> lol

[00:37] <redditanalytics> I doubt the May 31 release is in the Repo

[00:37] <timotimo> otherwise, apt should have some way to do it. i'm not sure either way

[00:37] <timotimo> it's very unlikely, indeed.

[00:37] <redditanalytics> what was the release before May 31?

[00:37] <timotimo> i think earlier today i heard ubuntu has some 2011 version of rakudo star

[00:37] <timotimo> march or february i think

[00:38] <timotimo> http://rakudo.org/2013/02/24/rakudo-star-2013-02-released/

[00:38] <redditanalytics> let me go muck with it and find out.  I'm running Mint 15 which I believe is using the 13.04 reps

[00:38] <timotimo> if you mean a rakudo compiler release, it'd be a little bit more recent. hold on

[00:38] <tadzik> FROGGS, FROGGS 

[00:38] <FROGGS> apt-cache showpkg rakudo

[00:38] <timotimo> https://github.com/rakudo/rakudo/tree/nom/docs/announce - this page says we had compiler releases in 2013-04 and 2013-03, too

[00:38] <tadzik> :D

[00:38] <FROGGS> Versions: 

[00:38] <FROGGS> 0.1~2012.04.1-2build1

[00:39] <timotimo> hah, were you sitting adjacent to each other? :P

[00:39] <tadzik> FROGGS: where are you man?

[00:39] <redditanalytics> haha

[00:39] <FROGGS> tadzik: whats up?

[00:39] <FROGGS> in the hotel, finishing slides (hopefully)

[00:39] <tadzik> FROGGS: we're about to have somefood, you're in?

[00:39] <FROGGS> hmmm, no, really need to do this

[00:39] <redditanalytics> what conference are you guys at?

[00:39] <timotimo> FROGGS: i finished the last slide for my talk at the GPN literally 10 minutes before the talk.

[00:40] <timotimo> YAPCNA in austin texas

[00:40] <FROGGS> timotimo: well, I'm at least 30 slides from beeing done

[00:40] <tadzik> FROGGS: ok, keep up the good work

[00:40] <FROGGS> ó.ò

[00:40] <tadzik> I'll eat for us both :)

[00:40] <FROGGS> hehe

[00:40] <redditanalytics> make sure you close your IRC window before presenting

[00:40] <timotimo> i think i should try to popularize my incredibly niche presentation framework in the perl6 community :P

[00:40] <FROGGS> tadzik++ # my man :o)

[00:41] <tadzik> timotimo: please do!

[00:41] <timotimo> it requires you to have perl6, use vim and also use i3 for a window manager.

[00:41] <FROGGS> redditanalytics: my client is pretty silent

[00:41] <redditanalytics> is Larry Walls as the conference?

[00:41] <FROGGS> he is

[00:41] <timotimo> but it's 10x better than using the perl6 repl that doesn't have line editing at all

[00:42] <redditanalytics> you should go bar hopping later .. Austin is great

[00:42] <timotimo> luckily it seems like many of the perl6 people like beer

[00:42] <FROGGS> hehe, yes

[00:43] <timotimo> (of course there's other nice stuff you can have at bars. like hot chocolate with rum :P )

[00:43] <FROGGS> but more important is that the perl6 ppl like ppl

[00:43] <tadzik> timotimo: I'm fine with that :)

[00:43] <redditanalytics> hahaha

[00:44] <redditanalytics> what is the main site people should use to follow perl6?

[00:44] * FROGGS imagines a drunken snoring tadzik in his room later :P

[00:44] <redditanalytics> perl6.org?

[00:44] <FROGGS> redditanalytics: a site?

[00:44] <redditanalytics> website

[00:44] <FROGGS> what do you need a site for?

[00:44] <FROGGS> to stalk somebody?

[00:44] <timotimo> i've put this: http://planetsix.perl.org/  into my feed reader

[00:45] <redditanalytics> read blogs, follow releases, find ways to blow things up more spectacularly 

[00:45] <FROGGS> yeah, planetsix, masaks blog (strangelyconsistent) and jnthns blog (sixguts)

[00:46] <timotimo> but those two blogs are in the planet, too, aren't they?

[00:46] <FROGGS> ohh, are they?

[00:46] <FROGGS> I only read them when links are posted to this channel *gg*

[00:47] <timotimo> yes, both are.

[00:47] <redditanalytics> I am rewriting Reddit's entire search system in Perl ... this page has their real-time metrics ... http://www.redditanalytics.com/metrics.html

[00:47] <timotimo> oh, a replacement for the notoriously bad search system? great!

[00:47] <redditanalytics> perl doesn't even break a sweat

[00:47] <timotimo> i have found it impossible to find a post that was on my front page after one or two days

[00:48] *** thou left
[00:48] <timotimo> even if i still know like three words out of the title

[00:48] <redditanalytics> it is horrible. .. you'll be able to search by author, keywords, date range .. use filters (i.e. only show score > 1000)

[00:48] <redditanalytics> any metric in their json 

[00:49] <timotimo> perl6 *would* break a sweat ;)

[00:49] <timotimo> well, rakudo would anyway

[00:49] <redditanalytics> hahaha

[00:49] <redditanalytics> I'm keeping the last 500,000 comments in a hash

[00:50] <redditanalytics> but I wanted to check out perl6 to see if it could do anything easier than perl 

[00:51] <timotimo> to my eyes, the perl6 code you'd end up with for any given problem is prettier, often simpler; but i'ven't done any perl5 whatsoever

[00:52] <FROGGS> masak proved it today, reduce an >10 lines p5 script to a single line with about 25 chars, and it was of course more readable :o)

[00:52] <redditanalytics> I really need to look at just how different the two languages are .... 

[00:52] <timotimo> i'm astounded by the comment-per-subreddit breakdown

[00:53] <redditanalytics> the guys over on #perl say, "it's a different language completely"

[00:53] <redditanalytics> and I said "but it's Perl"

[00:53] <timotimo> indeed, it's perl. the difference isn't trivial, though

[00:53] *** Targen left
[00:53] <timotimo> the fact that it has more type system in it than perl5 does makes a huge difference in my opinion

[00:53] <redditanalytics> would a perl5 script run under perl6?

[00:53] <FROGGS> like C and C++, there are at least as much differences as similarities

[00:53] <timotimo> probably not, no.

[00:54] <FROGGS> hey!

[00:54] <timotimo> only if it's very simple (or if you use FROGGS++ v5 module)

[00:54] <FROGGS> redditanalytics: some day, yes :o)

[00:54] <redditanalytics> is there an Inline::Perl6 for perl 5?

[00:54] <redditanalytics> just kidding

[00:54] <FROGGS> no

[00:55] <FROGGS> but there are discussions about interaction of 5 and 6 that addresses this

[00:56] <timotimo> indeed. i just heard about that concept when i watched the moarvm talk at yapcna

[00:57] <FROGGS> right, but there is nothing to show right now

[00:57] *** Nom- joined
[00:57] <timotimo> indeed.

[01:04] *** snearch left
[01:04] *** anuby joined
[01:09] <flussence> rn: my %foo = a=>1, b=>2; my %bar = a=>2, b=>3; say all(%foo{$_} < %bar{$_} for <a b>)

[01:09] <camelia> niecza v24-65-g5c63c23: OUTPUT«===SORRY!===␤␤Unable to parse argument list at /tmp/QY0ZvUbI2W line 1:␤------> >1, b=>2; my %bar = a=>2, b=>3; say all(⏏%foo{$_} < %bar{$_} for <a b>)␤Couldn't find final ')'; gave up at /tmp/QY0ZvUbI2W line 1:␤------> …

[01:09] <camelia> ..rakudo b2072f: OUTPUT«===SORRY!===␤Unable to parse expression in argument list; couldn't find final ')'␤at /tmp/uvzd9kNC7i:1␤------> a=>2, b=>3; say all(%foo{$_} < %bar{$_} ⏏for <a b>)␤    expecting any of:␤        postfix␤        statement end␤     …

[01:09] <flussence> I don't understand what's wrong with that...

[01:10] <timotimo> r: say all("a" ~ $_ lt "b" ~ $_ for <a b c>)

[01:10] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Unable to parse expression in argument list; couldn't find final ')'␤at /tmp/w6BQAq2jpU:1␤------> say all("a" ~ $_ lt "b" ~ $_ ⏏for <a b c>)␤    expecting any of:␤        postfix␤»

[01:10] <timotimo> r: say all(("a" ~ $_) lt ("b" ~ $_) for <a b c>)

[01:10] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Unable to parse expression in argument list; couldn't find final ')'␤at /tmp/slZfVR8mor:1␤------> say all(("a" ~ $_) lt ("b" ~ $_) ⏏for <a b c>)␤    expecting any of:␤        postfix␤»

[01:11] <timotimo> r: say all([("a" ~ $_) lt ("b" ~ $_) for <a b c>])

[01:11] <camelia> rakudo b2072f: OUTPUT«all(True True True)␤»

[01:11] <timotimo>  rn: my %foo = a=>1, b=>2; my %bar = a=>2, b=>3; say all(%foo{$_} < %bar{$_} for <a b>)

[01:11] <camelia> niecza v24-65-g5c63c23: OUTPUT«===SORRY!===␤␤Unable to parse argument list at /tmp/xFhxlx7gNh line 1:␤------> >1, b=>2; my %bar = a=>2, b=>3; say all(⏏%foo{$_} < %bar{$_} for <a b>)␤Couldn't find final ')'; gave up at /tmp/xFhxlx7gNh line 1:␤------> …

[01:11] <camelia> ..rakudo b2072f: OUTPUT«===SORRY!===␤Unable to parse expression in argument list; couldn't find final ')'␤at /tmp/NYNmjJFkYg:1␤------> a=>2, b=>3; say all(%foo{$_} < %bar{$_} ⏏for <a b>)␤    expecting any of:␤        postfix␤        statement end␤     …

[01:11] <timotimo>  rn: my %foo = a=>1, b=>2; my %bar = a=>2, b=>3; say all([%foo{$_} < %bar{$_} for <a b>])

[01:11] <camelia> rakudo b2072f: OUTPUT«all(True True)␤»

[01:11] <camelia> ..niecza v24-65-g5c63c23: OUTPUT«all([Bool::True, Bool::True], )␤»

[01:11] <timotimo>  rn: my %foo = a=>1, b=>2; my %bar = a=>2, b=>3; say all((%foo{$_} < %bar{$_} for <a b>))

[01:11] <camelia> niecza v24-65-g5c63c23: OUTPUT«all(Bool::True, Bool::True)␤»

[01:11] <camelia> ..rakudo b2072f: OUTPUT«all(True, True)␤»

[01:11] <timotimo>  rn: my %foo = a=>1, b=>2; my %bar = a=>2, b=>3; say all (%foo{$_} < %bar{$_} for <a b>)

[01:11] <camelia> niecza v24-65-g5c63c23: OUTPUT«all(Bool::True, Bool::True)␤»

[01:11] <camelia> ..rakudo b2072f: OUTPUT«all(True, True)␤»

[01:11] <timotimo> i don't know why, but i fixed it

[01:12] <flussence> I don't get it, but if one space fixes it I'm not gonna complain :)

[01:12] <timotimo>  rn: my %foo = a=>1, b=>2; my %bar = a=>2, b=>3; say all %foo{$_} < %bar{$_} for <a b>

[01:12] <camelia> niecza v24-65-g5c63c23: OUTPUT«all(Bool::True, )␤all(Bool::True, )␤»

[01:12] <camelia> ..rakudo b2072f: OUTPUT«all(True)␤all(True)␤»

[01:12] <timotimo> now it's even shorter ;)

[01:13] <Nom-> Curious... how is the JVM implementation of NQP coming along?  I've been distracted lately with other $work related projects and haven't been able to keep up :)

[01:14] <Nom-> I know it was mostly functional last I saw, but is the Rakudo implementation coming along?

[01:14] <timotimo> nqp on jvm is already self-hosting

[01:14] <timotimo> the rakudo implementation is coming along indeed, but a part of the work is being done on the MoarVM, too

[01:14] <redditanalytics> apparently my xchat can't show all the unicode characters

[01:16] <FROGGS> redditanalytics: you switched to utf8?

[01:16] <Nom-> heh... building another VM :P

[01:16] <timotimo> yeah, this time it's built from the start to work well with 6model

[01:16] <redditanalytics> ℣

[01:16] <redditanalytics> ahhh there we go

[01:17] <timotimo> also, it's got thoughts about threading put into it right from the start

[01:17] <Nom-> I still question whether these guys would be better investing some time helping out on the Rubinius VM... there's already been some implementations of other languages on that VM and they're making pretty huge leaps on performance for Ruby code (at least)

[01:17] <timotimo> do it ;)

[01:18] <timotimo> parrot and jvm aren't going to be dropped just becaues of moarvm

[01:18] <timotimo> so another vm will only mean the nqp code will improve

[01:18] <Nom-> Yeah, I was starting to work on NQP on Rubinius a while back, but I was a bit out of my depth... went back to learning phase

[01:19] <FROGGS> and having an vm that is made for 6model should actually be better in the end then, say, rubinius vm

[01:19] <timotimo> yeah, that's also the conclusion fijal came to when i pulled him over here to discuss things

[01:19] <Nom-> Maybe... but getting threading and a good concurrent GC is going to take a lot of hours

[01:19] <timotimo> although he suggested reimplementing rakudo completely on rpython

[01:19] <timotimo> (i think?)

[01:21] <Nom-> Running on the JVM is probably a really good idea long term, but that startup time kills a lot of simple scripts

[01:21] <FROGGS> true

[01:21] <Nom-> I did come across RPython a while back ... interesting project if you want to learn stuff :)

[01:21] <timotimo> yeah, moarvm is going to have killer startup times! (just my hopes and dreams)

[01:22] <FROGGS> mine too

[01:22] <redditanalytics> i know some of those words

[01:23] <timotimo> :D

[01:23] <redditanalytics> relevant for you guys later tonight ... http://xkcd.com/323/

[01:31] * timotimo already had a cocktail, but is very far away from texas

[01:41] <timotimo> i may make a screencast tomorrowvabout and with my presentation framework

[01:46] <Nom-> ls

[01:46] <Nom-> oops wrong window :)

[01:47] <timotimo> r: say dir

[01:47] <camelia> rakudo b2072f: OUTPUT«IO::Path<star> IO::Path<src> IO::Path<.subversion> IO::Path<.bashrc> IO::Path<nom-inst1> IO::Path<toqast> IO::Path<test3.pl> IO::Path<.profile> IO::Path<t> IO::Path<nom-inst2> IO::Path<nom-inst> IO::Path<toqast-inst> IO::Path<toqast-inst2> IO::Path<examples> IO::Pa…

[01:47] *** lustlife joined
[01:47] <timotimo> r: say dir.>>Str

[01:47] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Confused␤at /tmp/aNyzHlj3eO:1␤------> say dir.⏏>>Str␤    expecting any of:␤        dotty method or postfix␤»

[01:48] <timotimo> say dir>>.Str

[01:49] <timotimo> digh. darned phone keyboard

[01:49] <FROGGS> r: say dir>>.Str

[01:49] <camelia> rakudo b2072f: OUTPUT«star src .subversion .bashrc nom-inst1 toqast test3.pl .profile t nom-inst2 nom-inst toqast-inst toqast-inst2 examples Makefile .gitignore lib test2.pl .local bin rakudo p1 VERSION simple-tests .perlbrew std obj main.pl .lesshst nom niecza test.pl .cpanm log .bash_…

[01:54] * [Coke] gets a twitter password reset link IM and wonders who is trying to hack his account.

[01:55] <flussence> rn: sub a { for ^5 { next if $_ %% 2; NEXT { say $_; START say 'first' } } }; a; a;

[01:55] <camelia> rakudo b2072f: OUTPUT«0␤first␤1␤2␤3␤4␤0␤1␤2␤3␤4␤»

[01:55] <camelia> ..niecza v24-65-g5c63c23: OUTPUT«===SORRY!===␤␤Action method statement_prefix:NEXT not yet implemented at /tmp/oWI6g8AoHc line 1:␤------> %% 2; NEXT { say $_; START say 'first' }⏏ } }; a; a;␤␤Unhandled exception: Unable to resolve method statement_leve…

[02:07] <timotimo> wondering if there's any value to determining sequences (like 1, 2, 4 ... *) at compile-time

[02:09] <timotimo> r: macro yoink(\x) { quasi { {{{ x }}}.Str }; yoink(123).perl.say

[02:09] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Unable to parse expression in block; couldn't find final '}'␤at /tmp/6qYATakZwT:1␤------> i { {{{ x }}}.Str }; yoink(123).perl.say⏏<EOL>␤    expecting any of:␤        method arguments␤        statement end␤        s…

[02:09] <timotimo> r: macro yoink(\x) { quasi { {{{ x }}}.Str } }; yoink(123).perl.say

[02:09] <camelia> rakudo b2072f: OUTPUT«"123"␤»

[02:11] * timotimo looks to see what happens when sub WHAT is turned into a macro

[02:18] <flussence> hm, one of these Text-Tabs-Wrap tests is taking an absurdly long time to run and I don't remember that being the case...

[02:22] *** Targen joined
[02:31] <flussence> ouch, profiler says regex matching is taking up 84% of the execution time.

[02:31] <timotimo> "Code ref 'new' does not exist in serialization context" that wasn't helpful :(

[02:36] *** pecastro_ joined
[03:21] *** preflex_ joined
[03:21] *** ChanServ sets mode: +v preflex_

[03:21] *** fgomez left
[03:22] *** preflex left
[03:22] *** preflex_ is now known as preflex

[03:29] *** fgomez joined
[03:42] *** census joined
[03:57] *** ztt_ joined
[04:02] <Tene> Hey, anyone here want my copy of The Art of the Metaobject Protocol?

[04:02] <Tene> I thought it would be a bit more general than it is; it's mostly a description of CLOS.

[04:17] *** thou joined
[04:24] <masak> yeah, that's what it is, basically.

[04:26] *** ztt_ left
[04:26] <Teratogen> meta-object

[04:26] *** Psyche^ joined
[04:26] <Teratogen> is that like metaphysics?

[04:27] <PerlJam> It's turtles all the way down

[04:28] <Teratogen> damn straight

[04:28] *** colomon joined
[04:28] <Teratogen> PerlJam++

[04:29] <colomon> PerlJam++ # don't know why, must backlog

[04:29] <PerlJam> heh

[04:29] *** Patterner left
[04:29] *** Psyche^ is now known as Patterner

[04:31] <masak> r: class A {}; say A.^name; say A.HOW.^name

[04:31] <camelia> rakudo b2072f: OUTPUT«A␤Perl6::Metamodel::ClassHOW␤»

[04:31] <masak> Teratogen: that second object there, is the object that knows a bunch of stuff about the class A. it's a class metaobject.

[04:32] <Teratogen> ah, cooll

[04:32] <PerlJam> Teratogen: I take it you haven't played with Moose much?

[04:33] <Teratogen> BRAKE FOR MOOSE!  (It Could Save Your Life)

[04:33] <Teratogen> no, haven't

[04:34] <eternaleye> PerlJam: I thought it'd be ducks, really.

[04:37] <Teratogen> there is a sci fi short story about a scientist who hated ducks, so he created a robot duck that slowly but surely killed all the ducks in the pond outside of his office

[04:37] <PerlJam> I'm not sure why the platypus never made it as the Perl mascot

[04:38] <masak> Teratogen: so for each class in a program, there's an instance of Perl6::Metamodel::ClassHOW, knowing the specifics of that class (attributes, methods, parent classes, etc)

[04:38] <PerlJam> (more apt than ducks or camels or onions I think)

[04:38] <masak> PerlJam: I'm guessing you've seen http://www.geekosystem.com/platypus-keytar-venn-diagram/ ? :)

[04:39] <Teratogen> this is how I imagine Perl 6 right now:

[04:39] <Teratogen> http://www.vagabondjourney.com/big-swiss-army-knife.jpg

[04:39] <sorear> good * #perl6

[04:39] <PerlJam> masak: actually, I hadn't (or at least hadn't remembered seeing it)

[04:39] <masak> Teratogen: I generally find Perl 6 a bit more manageable than that -- but otherwise, yes ;)

[04:40] <masak> PerlJam: the more I look at that Venn diagram, the more awesome it gets :)

[04:41] <PerlJam> Teratogen: to me Perl 6 looks more like an ordinary swiss army knife that's bigger on the inside  :)

[04:42] <PerlJam> It's like you can only see 4 or 5 tools at a time, but there are thousands of them to cycle through if you need them.

[04:43] *** LordV left
[04:46] *** chipdude left
[04:47] *** atroxaper joined
[04:47] *** gdey joined
[04:48] <atroxaper> r: say "Hello, #perl6!"

[04:48] <camelia> rakudo b2072f: OUTPUT«Hello, #perl6!␤»

[04:48] <PerlJam> atroxaper: greetings!

[04:49] <sorear> o/ atroxaper, PerlJam

[04:50] *** Jimmy__ joined
[04:50] <Jimmy__> Tene: ping

[04:50] <atroxaper> o/ PerlJam, sorear

[04:50] *** birdwindupbird joined
[04:51] <PerlJam> sorear o/

[04:53] *** Jimmy__ left
[04:54] *** Jimmy__ joined
[04:56] *** konundra left
[05:00] *** Jimmy__ left
[05:02] *** zby_home_ joined
[05:03] <pmichaud> 04:41 <PerlJam> Teratogen: to me Perl 6 looks more like an ordinary swiss army knife that's bigger on the inside  :)

[05:03] <pmichaud> Perl 6: The Tardis of Programming Languages.

[05:04] <pmichaud> we even have daleks on our channel.

[05:05] <PerlJam> fortunately they don't seem to be the kind that shout "EXTERMINATE!" all the time

[05:06] <sorear> :) pmichaud

[05:06] <lue> most git repos here consider the master authoritative :/

[05:09] <masak> 'night, #perl6

[05:10] <PerlJam> g'night masak

[05:11] <eternaleye> lue: Yeah, but if something kills Davros our dalek goes too :P

[05:12] *** sqirrel joined
[05:13] <lue> .oO(Suggestion: git repos use "doctor" instead of "master" for the main branch, and dalek is renamed to either Torchwood or UNIT :) )

[05:14] *** census left
[05:15] *** labster joined
[05:20] *** trexy joined
[05:25] *** kaleem joined
[05:35] <eternaleye> lue: The problem then would be that everyone would want to merge^Wdance with the 'harkness' branch.

[05:42] <trexy> if perl5 is the swiss army knife of languages then perl6 is more like a sonic screwdriver with all the knobs "turned up to 11" ;-)

[05:42] <trexy> http://www.slideshare.net/trexy/nigel-hamiltonmegameet2013

[05:53] *** zby_home_ left
[05:53] *** dmol joined
[05:54] *** fgomez left
[05:54] *** sftp joined
[05:59] *** prevost left
[06:07] *** labster left
[06:09] *** sqirrel left
[06:11] *** tomyan joined
[06:11] *** domidumont joined
[06:15] *** gdey left
[06:21] *** sqirrel joined
[06:23] *** woolfy joined
[06:23] *** domidumont left
[06:25] *** tomyan left
[06:27] *** dmol left
[06:27] *** sqirrel left
[06:30] *** kivutar joined
[06:36] *** daxim joined
[06:38] *** shachaf joined
[06:47] <moritz> good morning

[06:48] *** domidumont joined
[06:50] *** domidumont left
[06:51] *** domidumont joined
[07:04] *** fgomez joined
[07:07] *** tomyan joined
[07:13] *** domidumont left
[07:13] *** domidumont joined
[07:13] *** brrt joined
[07:21] *** fuad joined
[07:21] *** tomyan left
[07:22] <daxim> https://build.opensuse.org/project/monitor?project=home:ldieckow:branches:devel:languages:parrot   # rakudo 2013.05 is all green

[07:25] *** thou left
[07:26] <moritz> \o/

[07:33] *** rindolf joined
[07:35] *** rindolf left
[07:35] *** rindolf joined
[07:56] *** sivoais left
[07:59] *** dayangkun joined
[08:01] *** sivoais joined
[08:02] *** dayangkun left
[08:08] *** fuad left
[08:09] *** sivoais left
[08:24] *** sivoais joined
[08:26] *** brrt left
[08:48] *** domidumont1 joined
[08:49] *** dakkar joined
[08:51] *** domidumont left
[08:53] *** domidumont1 left
[08:53] *** domidumont joined
[08:55] *** fhelmberger joined
[09:01] *** toebu left
[09:47] *** fhelmberger_ joined
[09:50] *** fh joined
[09:50] *** fhelmberger_ left
[09:51] *** fhelmberger left
[10:04] *** anuby left
[10:07] *** fh left
[10:11] *** fhelmberger joined
[10:17] *** fhelmberger left
[10:20] *** fhelmberger joined
[10:39] *** betterworld joined
[10:43] *** Guest1337 joined
[10:49] *** avar left
[10:49] *** avar joined
[10:49] *** avar left
[10:49] *** avar joined
[10:52] *** avar left
[10:52] *** avar joined
[10:52] *** vmspb joined
[10:53] *** vmspb left
[10:54] *** vmspb joined
[10:55] *** fhelmberger left
[10:55] *** fhelmberger_ joined
[11:01] *** fhelmberger_ left
[11:04] *** betterworld left
[11:07] *** fhelmberger_ joined
[11:07] *** atroxaper left
[11:10] *** betterworld joined
[11:18] *** huf joined
[11:21] *** kivutar left
[11:28] *** fhelmberger joined
[11:29] *** fhelmberger_ left
[11:29] *** cognominal left
[11:36] *** betterworld left
[11:36] *** betterworld joined
[11:40] *** vmspb left
[11:47] *** gudahtt joined
[11:47] *** betterworld left
[11:48] *** shachaf left
[11:48] *** sciurius joined
[11:48] *** shachaf joined
[11:49] *** Timbus joined
[11:50] *** betterworld joined
[11:57] *** fhelmberger left
[11:57] *** atroxaper joined
[12:02] <tadzik> hello

[12:03] <tadzik> daxim: have you seen panda with --prefix?

[12:03] <daxim> bugs allewo!

[12:04] <daxim> https://github.com/tadzik/panda/issues/40

[12:04] <tadzik> oh noes

[12:04] <tadzik> duh

[12:05] <tadzik> will look into it

[12:05] *** flaviusb joined
[12:05] <tadzik> I'm leaving austin soonish

[12:06] *** sqirrel joined
[12:07] *** fhelmberger joined
[12:11] *** LordV joined
[12:13] <nwc10> there is somewhere more exiting than Austin?

[12:14] <tadzik> exams are pretty exciting, in a negative way

[12:14] *** tgt joined
[12:16] <colomon> colomon: huh, smoke test did not run overnight because Rakudo failed to build

[12:16] <colomon> [08:12am] colomon: https://gist.github.com/colomon/5705459

[12:17] *** skids left
[12:20] *** SmokeMachine left
[12:22] *** fhelmberger left
[12:25] *** SmokeMachine joined
[12:26] *** JimmyZ joined
[12:27] <JimmyZ> colomon: I got this failure sometimes, but after I rebuild parrot then no failure 

[12:27] *** labster joined
[12:27] <colomon> JimmyZ: I'm trying a full fresh build just to see what happens

[12:28] <redditanalytics> good morning 

[12:28] <colomon> o/

[12:28] <redditanalytics> I'm hoping to have some search components up later today.  Will keep you posted (if you like Reddit)

[12:32] *** fhelmberger joined
[12:32] <colomon> JimmyZ: yeah, looks like a clean build may work just fine.

[12:32] <JimmyZ> colomon: :)

[12:33] <colomon> Do you have ICU installed?

[12:33] <JimmyZ> colomon: Nope

[12:33] <colomon> I'm thinking I probably should for smoke testing.  (Assuming I don't now... will check when the build is done.)

[12:35] *** ajr joined
[12:35] *** ajr is now known as Guest82103

[12:35] *** SmokeMachine left
[12:38] *** labster left
[12:38] *** Guest82103 is now known as ajr_

[12:39] *** Targen left
[12:41] *** SmokeMachine joined
[12:44] *** SmokeMachine left
[12:47] <redditanalytics> colomon, how long does your build process normally take and what kind of hardware do you use?

[12:47] <colomon> redditanalytics: It's on the order of 5-10 minutes, I usually go do something else instead of watching it, if you know what I mean.

[12:48] *** fhelmberger left
[12:48] <redditanalytics> I am not a low level coder like you guys, but is C / Perl6 going to be able to take advantage of the new instructions in Haswell like FMA?

[12:49] *** Shozan is now known as SHODAN

[12:51] *** lizmat joined
[12:51] <colomon> This is on my Linux box.  Intel(R) Core(TM) i7-3770K CPU @ 3.50GHz, 32G RAM.  I'm not trying to build in parallel.

[12:52] <redditanalytics> that's a nice setup

[12:52] <redditanalytics> I'm assuming you maxed out your ram with the 8gb SIMMS

[12:52] <redditanalytics> unless you have a server motherboard

[12:52] <colomon> my $work can take all the computing power I can throw at it.  :)  Having a nice machine for building p6 is just a bonus. 

[12:53] *** Guest1337 left
[12:53] *** SmokeMachine joined
[12:54] <PerlJam> redditanalytics: What's FMA?

[12:54] <redditanalytics> Fused Multiply Add

[12:54] <redditanalytics> http://en.wikipedia.org/wiki/FMA_instruction_set

[12:54] <colomon> redditanalytics: I wouldn't expect Perl6 to take much advantage of FMA anytime soon.

[12:54] <redditanalytics> I'm assuming they have to build it into the C compiler first

[12:55] <colomon> redditanalytics: right, but even then it's a mismatch of levels.

[12:55] <redditanalytics> I see

[12:56] <PerlJam> looks like GCC supports FMA, so ... maybe?

[12:56] <colomon> like I wouldn't expect $a + $b * $c in p6 to ever hit a level where C code would see a + b * c to optimize it.

[12:56] <PerlJam> colomon: not even in the JIT?

[12:56] <moritz> colomon: with natively typed ints and/or JIT it's thinkable, but a whole lot of work

[12:57] <colomon> right

[12:57] <colomon> is FMA for ints or floating point?

[12:58] *** SmokeMachine left
[12:58] <moritz> float

[12:58] <colomon> but anyway, it seems like it would take special work to support it in p6, and even then you'd have to have just the right circumstances to make them work.

[12:58] <redditanalytics> I believe integer

[12:58] <flaviusb> You could perhaps have a quasi quoter or slang that took expressions like that and lowered them to FMA's, but it would be something that you would have to do around expressions you wanted to have that happen to. Right?

[12:59] <moritz> "Both contain fused multiply–add (FMA) instructions for floating point scalar and SIMD operations"

[12:59] <redditanalytics> what about Advanced Vector Extensions 2 (AVX2)?  

[12:59] <moritz> from that wiki page

[12:59] <redditanalytics> that was the other big one

[12:59] *** fhelmberger joined
[13:00] <moritz> fwiw I think that vectorization/SIMD is a better fit for Perl 6, at least when working with arrays of pre-declared type and shape

[13:00] <moritz> and then doing hyper/vector operations on them

[13:00] <moritz> but again, it's a topic far into the future

[13:00] <jnthn> morning, #perl6

[13:00] <moritz> for now we struggle with making our "normal" stuff fast

[13:00] <moritz> \o jnthn 

[13:01] <PerlJam> good morning jnthn

[13:01] <redditanalytics> morning

[13:02] <colomon> o/

[13:02] <PerlJam> (It's weird that we're all going through "morning" at the same time for a change :)

[13:02] <colomon> \o/ morning has unbroken!

[13:02] <colomon> (except for moritz++)

[13:02] <nwc10> quick, write more tests for it

[13:03] <JimmyZ> morning, jnthn

[13:03] <flussence> (it's kind of odd just watching the join/quit messages scroll by all morning)

[13:04] <redditanalytics> 90% of IRC traffic is probably just that

[13:04] * moritz generally ignores join/quit on #perl6

[13:04] * JimmyZ too

[13:04] *** fgomez left
[13:06] <moritz> redditanalytics: more about 33%, according to my logs

[13:06] <flussence> I wish irssi was a bit smarter about pruning them; you generally don't care if $random_user reconnected 50 times if they've only said one line in the past month...

[13:06] <moritz> (with a total of about 9 mio lines logged)

[13:07] *** lizmat left
[13:07] *** woolfy left
[13:07] *** lizmat joined
[13:07] <moritz> flussence: irclog.perlgeek.de tries to be smarter, by collapsing multiple joins/quits into one

[13:07] <gfldex> .oO(if they finish Perl 6 as fast as they talk...)

[13:07] <moritz> gfldex: it's not all #perl6

[13:08] <gfldex> chatter is chatter even if you do it around the corner

[13:08] <moritz> (only about 40% of logs is from #perl6)

[13:08] *** SmokeMachine joined
[13:08] * moritz is data driven today

[13:09] <redditanalytics> after downloading Perl6 last night (being a Perl5 guy) ... http://i.imgur.com/xVyoSl.jpg

[13:10] <JimmyZ> :)

[13:10] *** lizmat left
[13:11] <jnthn> urgh, get it's gonna be hot outside

[13:11] <jnthn> *bet

[13:12] *** FROGGS left
[13:12] *** fgomez joined
[13:13] <redditanalytics> sunny and high of 75 here in Baltimore today

[13:20] *** FROGGS joined
[13:20] <FROGGS> sqirrel: whats up?

[13:24] <FROGGS> sqirrel: here: https://new.livestream.com/accounts/4219145/events/2150574

[13:28] * colomon is running an hour later this morning when the conference schedule is more or less an hour earlier....

[13:28] *** FROGGS left
[13:28] *** kaleem left
[13:30] *** konundra joined
[13:31] *** kaleem joined
[13:32] <TimToady> commuting &  :)

[13:36] <timotimo> oh wow, i got up right on time to see the first talk! that's amazing

[13:38] *** guardian left
[13:40] *** cognominal joined
[13:44] <timotimo> am i the only one who doesn't hear anything on stream?

[13:45] <timotimo> ah, now i do hear something (but there's humming)

[13:45] <timotimo> (and a tiny bit of clipping)

[13:47] *** btyler joined
[13:49] *** colomon left
[13:51] *** skids joined
[13:51] *** mucker joined
[13:52] <mucker> Oh boy, that "stranger than fact" talk was heavy.

[13:53] *** gdey joined
[13:53] <mucker> larry mentioned that you can go sigil-free in p6. can you ?

[13:54] <flaviusb> Is there a non-flash version of http://new.livestream.com/accounts/4219145/events/2150574 by any chance?

[13:54] <TimToady> no, Larry pointed out that all Californians are liars

[13:55] <moritz> r: my \x = 42; say x

[13:55] <camelia> rakudo b2072f: OUTPUT«42␤»

[13:55] *** japhb_ joined
[13:55] <timotimo> flaviusb: you can grab the .smil file and it has a "http_base" and a "src" attribute, when you concatenate those you can directly feed mplayer or so

[13:56] <timotimo> but whenever i tried, it would kick me off every few seconds :(

[13:56] <nwc10> mucker: IIRC that's using parcel syntax

[13:57] <flaviusb> timotimo: Thanks, I'll give that a try.

[13:57] *** stevan_ joined
[13:57] <mucker> TimToady++ for non-linear talks

[13:57] <timotimo> also, you need to watch out, it *may* change the contents of the file at specific intervals that i didn't try yet

[13:57] <timotimo> (i just booted my windows box to watch the streams)

[13:58] *** lizmat joined
[13:58] <timotimo> the humming is crazy; doesn't yapcna have enough money to hire a professional sound engineer for each lecture hall?

[13:58] <timotimo> (but tbh, the one we had at gpn apparently wasn't competent enough to make sure the sound doesn't clip most of the time >_>)

[14:00] <btyler> timotimo: as I understand, all the stream-tending people are volunteers

[14:00] <timotimo> ah, mhm

[14:01] <timotimo> d'aaw

[14:01] *** diederich joined
[14:01] *** prevost joined
[14:02] <TimToady> mucker: http://rosettacode.org/wiki/First-class_functions#Perl_6 is written partly in a sigilles style, except for $_

[14:02] <TimToady> *less

[14:02] *** colomon joined
[14:03] *** Targen joined
[14:03] *** FROGGS joined
[14:03] *** btyler_ joined
[14:04] <mucker> TimToady: I don't know whether you have thought about it. But I have a lot of people use perly sytax in casual talk. Like $emphasis or $$greed. @many, `code goes here`. /yeah, a damn fine lie/ for regexes and snide(non-linear) comments.

[14:05] <mucker> I honestly think, the english needs to hacked with more syntax.

[14:05] <TimToady> :)

[14:06] *** btyler left
[14:06] <mucker> TimToady: if you are free, can we formalize perl as a markup language ? I'm a volunteer :)

[14:06] <pmichaud> "Perglish"?

[14:06] <flaviusb> timotimo: Cool. I'm getting cut off every few seconds too. I'll try monkeying around with mplayer streaming options.

[14:07] <timotimo> flaviusb: the first thing you should try is -loop 0

[14:07] <timotimo> :P

[14:07] <timotimo> mucker: we could adopt Pod perhaps? :P

[14:07] <TimToady> mucker: see http://perlcabal.org/syn/S26.html

[14:08] <mucker> TimToady: I did read that, but I mean more along the lines of **acutual written** communation, for programming magazines.

[14:09] <mucker> https://raw.github.com/themucker/MarkPerl/master/demo/test.mk

[14:09] <flaviusb> timotimo: ... :)

[14:10] *** xilo left
[14:11] *** flaviusb left
[14:11] <mucker> TimToady: new punctuation like ⸮, a hack on english alphabet or grammar for better communication (very silly idea :)

[14:12] *** japhb_ left
[14:15] * colomon had no idea FROGGS++ was that far along!

[14:15] <PerlJam> FROGGS++

[14:15] <timotimo> FROGGS++ :)

[14:17] *** flaviusb joined
[14:19] <flussence> If anyone else is still stuck, rtmpdump | mplayer is doing the job here :)

[14:19] <diakopter> TimToady: maybe Mark wants to write an XS/C interpreter in Perl 6

[14:20] <pmichaud> FROGGS++

[14:20] <timotimo> cool talk

[14:20] <pmichaud> needs to be blogged somewhere :)

[14:20] <colomon> +1

[14:20] <JimmyZ> +1

[14:21] <timotimo> once there's a reliable link to the video recording anyway

[14:21] <diakopter> TimToady: or compiler

[14:21] <pmichaud> I mean the work, not just the talk :)

[14:21] <timotimo> ah, sure

[14:22] <lizmat> FROGGS++ indeed!

[14:22] <colomon> to me, it really feels like the last few years where it looked like p6 was treading water were regrouping to support all the awesome that is blossoming now...

[14:22] *** flaviusb left
[14:22] <atroxaper> Was it FROGGS at stream?

[14:22] <timotimo> yes

[14:22] <arnsholt> Yeah

[14:22] <atroxaper> Oh. I see :)

[14:22] <PerlJam> colomon: indeed.

[14:22] <colomon> (I mean, looked to the outside world like p6 was treading water)

[14:22] <timotimo> oh yay pmichaud! i really enjoyed his presentations so far

[14:23] <timotimo> colomon: "treading water" as in "stuck in the same place"?

[14:23] *** japhb_ joined
[14:25] *** FROGGS left
[14:25] *** labster joined
[14:26] <gfldex> timotimo: treading water is what you do when you swim in place. You just move your legs a little so you dont sink.

[14:26] <timotimo> right, thanks

[14:26] <TimToady> it was more like furious swimming to stay out of the whirlpool :)

[14:27] *** FROGGS joined
[14:27] <timotimo> hey FROGGS :)

[14:27] <FROGGS> :o)

[14:27] <timotimo> you missed all the "FROGGS++" messages from everyone :P

[14:27] *** colomon left
[14:27] * FROGGS is still alive, even when he not expected it

[14:27] <FROGGS> *g*

[14:27] <PerlJam> FROGGS++ (here's one while you're here :)

[14:27] <FROGGS> thank you all

[14:28] <sqirrel> \o/ 

[14:29] <masak> FROGGS++

[14:29] *** gdey left
[14:29] <FROGGS> okay, now I can enjoy the yapc

[14:29] <TimToady> FROGGS: I know the feeling :)

[14:30] <moritz> you mean presenting was no fun? :-)

[14:30] * masak hugs TimToady 

[14:30] <FROGGS> moritz: well, it is better after than before

[14:30] <TimToady> well, there's fun, and then there's "fun"

[14:30] <masak> -O"fun"

[14:30] <FROGGS> "hehe"

[14:30] <jnthn> FROGGS++ # v5 talk

[14:31] <jnthn> And v5 itself :)

[14:31] <labster> FROGGS++

[14:31] <PerlJam> FROGGS: A question no one asked you ... when will it be "done"?   ;-)

[14:31] <FROGGS> I even put my california-look-a-like shirt on *g*

[14:31] <masak> TimToady: I just want to point out that I spotted the Epimenides in "all Californians are liars". ;)

[14:31] <timotimo> that's why you were so colorful! :D

[14:31] *** colomon joined
[14:32] <colomon> n: say 1 eq "a"

[14:32] <camelia> niecza v24-65-g5c63c23: OUTPUT«False␤»

[14:32] <colomon> third try is the charm.  # first two times I was offline, I think.  stupid ATTWIFI.

[14:32] <FROGGS> PerlJam: well, I'm at this for about three months, the first month was dedicated directly to get the grammar compiling and setting it up properly as a module

[14:32] *** ajr_ left
[14:32] <FROGGS> PerlJam: so I expect much this year

[14:32] <masak> n: sub letter-code { ord($^letter) - ord('a') + 1 }; say 1 eq letter-code "a"

[14:32] <camelia> niecza v24-65-g5c63c23: OUTPUT«True␤»

[14:33] <colomon> masak: I'm trying to sort out a problem where Niecza doesn't seem to be converting to Str before doing eq.  Trying to sort out the boundaries of the problem...

[14:33] <PerlJam> FROGGS: yeah, you've gotten much done (more than I expected anyway)  Keep up the good work and have fun!  :-)

[14:33] <FROGGS> I'll do, it is quiet fun

[14:33] <pmichaud> Indeed, it's impressive how far FROGGS++ has gotten.

[14:34] *** ajr joined
[14:34] <FROGGS> (it really is, Perl6 grammars are just awesome)

[14:34] <pmichaud> I almost wish we could put up a "features matrix" like page for it.

[14:34] <colomon> It's also a tribute to how nice Perl 6 grammars and NQP are.

[14:34] *** ajr is now known as Guest33299

[14:34] <PerlJam> pmichaud: are you going to IRC during your talk?  ;)

[14:34] <timotimo> part of the amazingness is how great the tools already work to allow FROGGS to even start in the first place

[14:34] <FROGGS> pmichaud: just email me the complete feature-list :P

[14:34] <FROGGS> timotimo: true

[14:34] *** crab2313 joined
[14:35] <timotimo> pmichaud: may i ask you to briefly repeat the questions of audience members during Q&A?

[14:35] <timotimo> oh, he already disattended his laptop

[14:35] <masak> n: sub letter-code { ((my %) = 'a'..'z' Z=> 1..*){$^letter} }; say 1 eq letter-code "a"

[14:35] <camelia> niecza v24-65-g5c63c23: OUTPUT«True␤»

[14:35] *** rindolf left
[14:35] *** cognominal left
[14:35] <pmichaud> timotimo: I will try to do so, but I often forget :)

[14:35] <masak> n: sub letter-code { (hash 'a'..'z' Z=> 1..*){$^letter} }; say 1 eq letter-code "a"

[14:35] <camelia> niecza v24-65-g5c63c23: OUTPUT«True␤»

[14:35] <timotimo> thanks!

[14:35] *** xilo joined
[14:36] <colomon> masak: I suspect it knows how to do conversions of built-in types but not user-defined classes.

[14:36] <timotimo> r: sub letter-code { (hash 'a'..'z' Z=> 1..*){$^letter} }; say "hello".comb>>.&letter-code;

[14:36] <camelia> rakudo b2072f: OUTPUT«8 5 12 12 15␤»

[14:36] <masak> colomon: I see.

[14:36] *** flaviusb joined
[14:37] <colomon> n: class Rasp { has $.berry; method Str { self.berry }; }; my $r = Rasp.new(:berry("blue")); say $r eq "blue"

[14:37] <camelia> niecza v24-65-g5c63c23: OUTPUT«True␤»

[14:37] <timotimo> i don't know who changed what, but stream audio is so much better right now

[14:37] <masak> \o/

[14:37] <colomon> masak: or, I am barking up the wrong tree

[14:38] <colomon> n: class Rasp { has $.berry; method Str { self.berry }; }; my $r = Rasp.new(:berry("blue")); say $r eq "straw"

[14:38] <camelia> niecza v24-65-g5c63c23: OUTPUT«False␤»

[14:39] <masak> n: class Tree { has $.type; method gist { "the $.type tree" }; class Dog { method bark-up(Tree $t) { say "woof: $t" } }; Dog.new.bark-up(Tree.new( :type<wrong> )

[14:39] <camelia> niecza v24-65-g5c63c23: OUTPUT«===SORRY!===␤␤Unable to parse argument list at /tmp/0SameNwoAj line 1:␤------> ) { say "woof: $t" } }; Dog.new.bark-up(⏏Tree.new( :type<wrong> )␤Couldn't find final ')'; gave up at /tmp/0SameNwoAj line 1 (EOF):␤------> …

[14:39] <masak> n: class Tree { has $.type; method gist { "the $.type tree" }; class Dog { method bark-up(Tree $t) { say "woof: $t" } }; Dog.new.bark-up(Tree.new( :type<wrong> ))

[14:39] <camelia> niecza v24-65-g5c63c23: OUTPUT«===SORRY!===␤␤Unable to parse block at /tmp/UeHTxmdQfp line 1:␤------> class Tree {⏏ has $.type; method gist { "the $.type t␤Couldn't find final '}'; gave up at /tmp/UeHTxmdQfp line 1 (EOF):␤------> og.new.bark-up(…

[14:39] <masak> n: class Tree { has $.type; method gist { "the $.type tree" } }; class Dog { method bark-up(Tree $t) { say "woof: $t" } }; Dog.new.bark-up(Tree.new( :type<wrong> ))

[14:39] <camelia> niecza v24-65-g5c63c23: OUTPUT«woof: Tree()<instance>␤»

[14:39] <masak> hm.

[14:39] <masak> n: class Tree { has $.type; method Str { "the $.type tree" } }; class Dog { method bark-up(Tree $t) { say "woof: $t" } }; Dog.new.bark-up(Tree.new( :type<wrong> ))

[14:39] <camelia> niecza v24-65-g5c63c23: OUTPUT«woof: the wrong tree␤»

[14:40] <masak> \o/

[14:41] *** flaviusb left
[14:47] *** kaare_ joined
[14:48] <btyler_> for the sake of stream watchers, please ask the speakers to repeat the question before they answer!

[14:49] <PerlJam> btyler_: The question was "will JVM somehow show up in the feature matrix on perl6.org" give or take

[14:50] <PerlJam> btyler_: the other question that was asked while I was typing was "where does moarvm fall in the image on the screen"

[14:50] <btyler_> thanks. pmichaud++, this is a great talk

[14:50] *** woosley1 joined
[14:50] <PerlJam> I think he repeated the others.

[14:50] *** crab2313 left
[14:51] *** Guest33299 is now known as ajr_

[14:51] <masak> pmichaud++'s talk is great.

[14:52] <colomon> agreed. pmichaud++

[14:52] <PerlJam> masak++ (World :)

[14:54] <colomon> n: my $p = IO::Path(:directory(""), :basename("Hello"), :volume("")); say $p eq "Hello"

[14:54] <camelia> niecza v24-65-g5c63c23: OUTPUT«Unhandled exception: Unable to resolve method postcircumfix:<( )> in type Path␤  at /tmp/ZC7dpsnvEs line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4502 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4503 (module-CORE @ 58…

[14:54] <colomon> :\

[14:54] *** japhb_ left
[14:54] <colomon> n: my $p = IO::Path.new(:directory(""), :basename("Hello"), :volume("")); say $p eq "Hello"

[14:54] <camelia> niecza v24-65-g5c63c23: OUTPUT«Unhandled exception: Cannot unbox a String from an object of repr P6opaque␤  at /tmp/c4o2vj35MP line 1 (mainline @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4502 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4503 (module-CORE @ 586) ␤…

[14:54] <colomon> n: my $p = IO::Path.new(:directory(""), :basename("Hello"), :volume("")); say ~$p

[14:55] <camelia> niecza v24-65-g5c63c23: OUTPUT«"Hello".IO␤»

[14:55] <moritz> r: say IO::Path.can('Str')

[14:55] <camelia> rakudo b2072f: OUTPUT«Str Str␤»

[14:55] <labster> \o/

[14:55] <moritz> so it doesn't look at .Str for comparisions?

[14:55] <PerlJam> lots of jnthn++ love in the room

[14:55] <timotimo> oh yeah

[14:55] <timotimo> what's not to love

[14:55] *** japhb_ joined
[14:56] <moritz> don't cuddle him to death, we still need him!

[14:56] <TimToady> the joke here was: just think how much he'd get done if he wasn't a slacker

[14:56] <moritz> :-)

[14:57] <masak> jnthn++

[14:57] <timotimo> hahaha

[14:57] <timotimo> that would be mind blowing

[14:57] <JimmyZ> jnthn++ indeed

[14:58] <masak> PerlJam: "World" may be my best naming decision ever.

[14:58] *** salv0 left
[14:59] <JimmyZ> 麦高，明天就是你的演讲了？

[14:59] *** lizmat_ joined
[14:59] *** salv0 joined
[14:59] <PerlJam> .oO( "I don't speak wind" )

[15:00] <TimToady> JimmyZ: it's still on the schedule

[15:01] <JimmyZ> Yeah, so is 明天

[15:01] <TimToady> 10:35 Texas time (CDT)

[15:01] <timotimo> i'm interested in exploring deployment of perl6 on heroku. sounds like a nice blogpost?

[15:02] <JimmyZ> agentzh‎ is here?

[15:02] <masak> JimmyZ: 是。

[15:03] <PerlJam> timotimo: why was that a question?  :)

[15:03] <TimToady> 是的

[15:03] *** lizmat left
[15:03] <masak> JimmyZ: 两个昨天，两个明天。^^

[15:03] <timotimo> ;)

[15:03] <JimmyZ> 呵呵。

[15:04] <masak> JimmyZ: 诚然，我值得的绰号“masakist”

[15:04] <masak> :P

[15:04] <JimmyZ> :)

[15:04] <TimToady> Jam yesterday, jam tommorw, but never jam today...

[15:04] <TimToady> *tommorow

[15:04] <masak> TimToady: :D

[15:05] <masak> for those who haven't seen that reference: https://en.wikipedia.org/wiki/Jam_tomorrow

[15:05] <PerlJam> "at least the next few months"  :-)

[15:05] *** daxim left
[15:06] *** colomon left
[15:06] <masak> PerlJam: it's scary.

[15:06] <masak> PerlJam: we're now moving so quickly that we're talking about *months*.

[15:08] <TimToady> there has to be some advantage to thinking about this for 13 years in advance :)

[15:09] <PerlJam> sounds like we're reaching critical mass.

[15:09] <PerlJam> (and we all know where that leads)

[15:10] <masak> PerlJam: to the mushroom cloud?

[15:10] <PerlJam> masak: a big explosion anywa.  I'm not sure that a mushroom cloud is a given

[15:10] *** stevan_ left
[15:11] <masak> "any sufficiently large blast will produce the same sort of effect" -- https://en.wikipedia.org/wiki/Mushroom_cloud

[15:11] <TimToady> I want the World, I want the whole World, I want it now!!!

[15:12] *** woosley1 left
[15:12] *** labster left
[15:12] *** colomon joined
[15:13] * colomon just realized that even if he can't get Rakudo-JVM running on his Mac, he's still got a linux box.

[15:14] <PerlJam> masak: if the explosion is big enough, atmospheric effects will be irrelevant

[15:14] <masak> ok, you got me there.

[15:14] <masak> points for thinking big enough.

[15:15] *** thou joined
[15:16] *** sivoais left
[15:18] *** konundra left
[15:19] * colomon isn't seeing an obvious way to build the JVM version?  Do you have to build nqp-jvm by hand (rather than by Configure.pl) ?

[15:19] <flussence> cd nqp; perl ConfigureJVM.pl --stuff; ...;

[15:19] <flussence> (I'll let you know if I get it working :)

[15:20] <colomon> flussence: there is no nqp directory at this point...

[15:20] <jnthn> cd nqp; perl ConfigureJVM.pl --prefix=../install-jvm

[15:20] *** lizmat_ left
[15:20] <jnthn> make install

[15:20] <jnthn> cd ..

[15:20] *** sivoais joined
[15:20] <jnthn> perl ConfigureJVM.pl && make

[15:21] *** woosley1 joined
[15:21] <colomon> https://gist.github.com/colomon/5706754 # results of perl ConfigureJVM.pl for me

[15:22] <PerlJam> chip++

[15:22] <timotimo> oh yes, you have to --with-nqp and ConfigureJVM.pl in nqp/ 

[15:22] <timotimo> i think if you set the install path in ConfigureJVM to ../install-jvm it'll just work™

[15:23] <timotimo> pmichaud++ # repeating questions

[15:25] <timotimo> disco disco!

[15:25] <timotimo> "i don't like that phase right now" or what was that?

[15:25] <avuserow> yes

[15:25] <flussence> phr

[15:25] *** japhb_ left
[15:26] <flussence> "Stage parse      :  78.584"

[15:26] <flussence> oh wow. I like this jvm stuff already...

[15:26] *** domidumont left
[15:27] *** colomon left
[15:27] <timotimo> pmichaud++ great talk, thanks!

[15:27] <avuserow> and suddenly dozens of people start compiling rakudo-jvm :) pmichaud++ jnthn++

[15:27] *** sivoais left
[15:27] *** domidumont joined
[15:27] <timotimo> it's a good thing this java technology is cloud based, otherwise it would break under the strain of all the people trying to use it at once!

[15:28] <atroxaper> 70? or 17?

[15:28] <flussence> sounded like 70 to me

[15:28] <avuserow> 70.

[15:28] <PerlJam> 709

[15:28] <PerlJam> er 70

[15:28] *** labster joined
[15:28] <avuserow> blog post: http://pmthium.com/2013/06/a-perl-6-developers-reply-to-a-russian-perl-podcast/

[15:30] *** sivoais joined
[15:30] *** FROGGS left
[15:31] <flussence> well I managed to get a working java ./perl6 in the space of the last slide there :D

[15:32] <avuserow> I only managed to get a broken nqp-jvm. What are the requirements of jvm?

[15:33] *** domidumont left
[15:33] *** lizmat joined
[15:33] *** lizmat left
[15:34] *** domidumont joined
[15:34] *** jeffreykegler joined
[15:34] <flussence> I dunno if there's anything special to do, I just did a `perl ConfigureJVM.pl --prefix=../installjvm && make && make install` in my rakudo/nqp/ and `perl ConfigureJVM.pl --with-nqp=installjvm/nqp --prefix=installjvm` in rakudo/ and it all seemed to build like normal

[15:35] *** JimmyZ left
[15:36] *** sivoais left
[15:37] *** labster left
[15:40] *** sivoais joined
[15:46] *** sivoais left
[15:48] *** woosley1 left
[15:50] *** sivoais joined
[15:51] *** domidumont left
[15:52] <[Coke]> https://rt.perl.org/rt3/Ticket/Display.html?id=118287 isn't stopping others from building rakudo-java? bother.

[15:52] *** benabik joined
[15:52] <flussence> is that on 32bit or 64?

[15:53] <[Coke]> 64 bit.

[15:53] *** benabik left
[15:54] *** benabik joined
[15:54] <[Coke]> added to ticket.

[15:55] <flussence> I've only had OOM problems like that with java when I go out of my way to mess with the system overcommit setting.

[15:57] *** sivoais left
[15:57] <[Coke]> RUN_PERL6 = $(JAVA) -Xms500m -Xmx2g -Xbootclasspath/a:.:$(NQP_JARS):rakudo-runtime.jar -cp $(NQP_PREFIX) perl6

[15:57] *** labster joined
[15:58] <[Coke]> looks like the memory is only updated on the runtime, not on the build.

[15:58] <flussence> how much RAM are you building with? mine's got about 4GB free.

[15:59] <[Coke]> machine has 4gb, some swap.

[16:00] *** sivoais joined
[16:00] *** stevan_ joined
[16:01] <flussence> the one major difference I can see is I'm using IcedTea, not the standard java binary...

[16:01] <flussence> (but I can't imagine that's the cause, they're the same codebase IIRC)

[16:02] *** stevan_ left
[16:02] *** labster left
[16:02] <[Coke]> freed up some swap, trying again.

[16:04] *** colomon joined
[16:04] <[Coke]> no change. plenty of memory free, still dies.

[16:07] <flussence> might be worth doing a sanity check: what does `cat /proc/sys/vm/overcommit_{memory,ratio}` show? (0 / 50 here)

[16:07] *** sivoais left
[16:10] *** sivoais joined
[16:12] * PerlJam is probably going to wait for the "early majority" when it comes to the JVM

[16:17] * flussence isn't :)

[16:17] *** sivoais left
[16:18] <colomon> frankly, I think the faster we have JVM working, the better it will be for the community.  So I'm going to do my best to get in early.

[16:20] *** sivoais joined
[16:20] <PerlJam> colomon: oh, agreed on the importance of getting things working on the JVM

[16:20] *** rurban1 joined
[16:22] *** fhelmberger left
[16:22] *** WACJNSA joined
[16:27] *** sivoais left
[16:30] *** sivoais joined
[16:33] <diakopter> TimToady: combining diacritics should be optional forms of sigils

[16:34] * flussence flinches slightly

[16:34] <timotimo> my ârray = 1, 2, 3 # like this?

[16:34] *** domidumont joined
[16:34] <timotimo> slang it ;)

[16:34] *** redditanalytics left
[16:34] *** kaleem left
[16:35] <TimToady> erm...

[16:35] *** ajr_ left
[16:36] <diakopter> also

[16:36] <diakopter> other diacritics could be declarators 

[16:36] <anocelot> diakopter: You're a diacritic.

[16:36] *** ajr joined
[16:36] *** stevan_ joined
[16:37] *** ajr is now known as Guest23137

[16:37] <colomon> diakopter: was doubtful at first, but it would be pretty awesome to be about to put arrows over vector names...

[16:37] *** sivoais left
[16:37] *** Guest23137 is now known as ajr_

[16:37] <diakopter> anocelot: you're an anotation

[16:37] <TimToady> you can already do all this with the sigilless style, at least by spec

[16:38] <TimToady> grapheme classifiers are supposed to apply only to the base char

[16:38] * anocelot already uses sigils stylelessly.  Oh, wait.  You said...  nvm

[16:38] <diakopter> you can have a style in Perl?

[16:39] <flussence> sure! just use the vim-to-html plugin...

[16:39] *** FROGGS joined
[16:40] *** sivoais joined
[16:40] *** lizmat joined
[16:42] <TimToady> std: my \Spin̈al_Tap = 42; say Spin̈al_Tap;

[16:42] <camelia> std 2504c1a: OUTPUT«ok 00:00 42m␤»

[16:42] <TimToady> nrp: my \Spin̈al_Tap = 42; say Spin̈al_Tap;

[16:42] <camelia> pugs: OUTPUT«*** ␤    Unexpected "\\"␤    expecting "=", formal parameter, context, ":" or "("␤    at /tmp/_yVoDWeVXv line 1, column 4␤»

[16:42] <camelia> ..rakudo b2072f: OUTPUT«===SORRY!===␤Method 'ast' not found for invocant of class 'NQPMu'␤»

[16:42] <camelia> ..niecza v24-65-g5c63c23: OUTPUT«42␤»

[16:42] <colomon> niecza++

[16:43] *** sivoais left
[16:43] <FROGGS> r: my \a = 42; say a

[16:43] <camelia> rakudo b2072f: OUTPUT«42␤»

[16:43] <FROGGS> r: my \ä = 42; say ä

[16:43] <camelia> rakudo b2072f: OUTPUT«42␤»

[16:44] <TimToady> rakudo's parser has not quite achieved STDhood yet...

[16:44] <FROGGS> r: my \n̈ = 42; say n̈

[16:44] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Method 'ast' not found for invocant of class 'NQPMu'␤»

[16:44] <FROGGS> ahh

[16:44] <FROGGS> my irc client has problems with this character too

[16:44] *** thou left
[16:44] <TimToady> r: say 'n̈'

[16:44] <camelia> rakudo b2072f: OUTPUT«n̈␤»

[16:45] <FROGGS> when selecting text doesnt dispaly the dots, and the selection is one char off

[16:45] <TimToady> r: sub n̈ { say '\o/' }; n̈

[16:45] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Missing block␤at /tmp/ysqMX1Y9EC:1␤------> sub n⏏[31m̈ { say '\o/' }; n̈␤    expecting any of:␤        statement list␤        prefix or term␤        prefix or meta-prefix␤        new name to be defined␤»…

[16:45] <colomon> sorear++

[16:46] *** domidumont left
[16:46] *** Chat7761 joined
[16:46] *** Chat7761 left
[16:48] <TimToady> p: sub n̈ { say '\o/' }; n̈

[16:48] <camelia> pugs: OUTPUT«\o/␤»

[16:48] <TimToady> au++  :)

[16:49] <FROGGS> nqp: say 'n̈' ~~ / <identifier> /

[16:49] <camelia> nqp: OUTPUT«Confused at line 2, near "say 'n\u0308' ~"␤current instr.: 'panic' pc 14721 (src/stage2/gen/NQPHLL.pir:5232) (src/stage2/gen/NQPHLL.nqp:279)␤»

[16:49] <FROGGS> nrp: say 'n̈' ~~ / <identifier> /

[16:49] <camelia> niecza v24-65-g5c63c23: OUTPUT«Unhandled exception: Unable to resolve method identifier in type Cursor␤  at /tmp/2Z1r4aDgHT line 1 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3026 (Regex.ACCEPTS @ 10) ␤  at /tmp/2Z1r4aDgHT line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/l…

[16:49] <camelia> ..rakudo b2072f: OUTPUT«No such method 'identifier' for invocant of type 'Cursor'␤  in regex  at /tmp/ZmBZmph2tm:1␤  in method ACCEPTS at src/gen/CORE.setting:10509␤  in method ACCEPTS at src/gen/CORE.setting:683␤  in block  at /tmp/ZmBZmph2tm:1␤␤»

[16:49] <camelia> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20120717/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** Can't locate P…

[16:49] <FROGGS> nrp: say 'n̈' ~~ / <ident> /

[16:49] <camelia> rakudo b2072f: OUTPUT«｢n｣␤ ident => ｢n｣␤␤»

[16:49] <camelia> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20120717/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** Can't locate P…

[16:49] <camelia> ..niecza v24-65-g5c63c23: OUTPUT«｢n̈｣␤ ident => ｢n̈｣␤␤»

[16:50] <FROGGS> ha!

[16:50] <TimToady> TMTOWTDI :)

[16:50] <FROGGS> rn: say 'n̈' ~~ /^ <ident> $/

[16:50] <camelia> rakudo b2072f: OUTPUT«Nil␤»

[16:50] <camelia> ..niecza v24-65-g5c63c23: OUTPUT«｢n̈｣␤ ident => ｢n̈｣␤␤»

[16:50] <FROGGS> there we go

[16:50] <colomon> wait, why are rakudo and niecza different there?

[16:51] <lizmat> because rakudo is wrong?

[16:51] <FROGGS> rakudo doesnt treat it as an identifier, which is a bug

[16:51] <FROGGS> it doesnt treat is as a single character to be clear

[16:51] <lizmat> but which should be easily fixable?

[16:51] <FROGGS> .u n̈

[16:51] <yoleaux> U+006E LATIN SMALL LETTER N [Ll] (n)

[16:51] <yoleaux> U+0308 COMBINING DIAERESIS [Mn] (◌̈)

[16:51] <colomon> FROGGS: ah!

[16:52] <FROGGS> so, what is it? is it one char or not?

[16:52] <colomon> now I see, the n matches but not the diaeresis

[16:52] <flussence> p5eval: use Unicode::UCD; Unicode::UCD::num("⅖")

[16:52] <p5eval> flussence: ERROR: Can't locate Unicode/UCD.pm in @INC (you may need to install the Unicode::UCD module) (@INC contains: /lib) at (eval 7) line 1.BEGIN failed--compilation aborted at (eval 7) line 1.

[16:52] <TimToady> what do you mean by "char"?

[16:52] <flussence> :(

[16:52] <TimToady> it's one grapheme

[16:52] <TimToady> it's two codepoints

[16:52] <TimToady> this is why we're moving toward NFG in p6

[16:53] <FROGGS> what should <ident> match, a codepoint or a grapheme?

[16:53] <FROGGS> I guess the latter

[16:53] <TimToady> p6 is supposed to default to grapheme semantics

[16:53] <TimToady> no implementation does that completely yet

[16:53] <colomon> rn: say 'n̈' ~~ /^ <ident>+ $/

[16:53] <camelia> rakudo b2072f: OUTPUT«Nil␤»

[16:53] <camelia> ..niecza v24-65-g5c63c23: OUTPUT«｢n̈｣␤ ident => ｢n̈｣␤␤»

[16:53] <FROGGS> ohh

[16:53] <TimToady> MoarVM is probably the closest, actually...

[16:53] *** sivoais joined
[16:54] <lizmat> .u LATIN SMALL LETTER N

[16:54] <TimToady> you don't need the +

[16:54] <yoleaux> U+006E LATIN SMALL LETTER N [Ll] (n)

[16:54] <FROGGS> hmm, looks like there is not much I can do about it right now for rakudo@parrot

[16:54] <TimToady> rn: say "nnn" ~~ /^ <ident> $/

[16:54] <camelia> rakudo b2072f, niecza v24-65-g5c63c23: OUTPUT«｢nnn｣␤ ident => ｢nnn｣␤␤»

[16:55] <TimToady> FROGGS: NFG support on Parrot will probably be a retrofit from MoarVM

[16:55] *** fhelmberger joined
[16:55] *** domidumont joined
[16:55] *** colomon left
[16:56] <diakopter> ...

[16:56] <FROGGS> TimToady: would be cool... 

[16:56] <FROGGS> k, off to lunch

[16:58] *** RedditAnalytics joined
[16:59] *** rurban1 left
[17:00] *** lizmat left
[17:00] *** stevan_ left
[17:00] *** dakkar left
[17:01] *** FROGGS left
[17:01] *** fhelmberger left
[17:02] *** ajr_ left
[17:06] *** birdwindupbird left
[17:09] <benabik> Well, that's fascinating: failed assertion 'Parrot_pcc_get_regs_used(interp, ctx, REGNO_STR) > idx' (compiling NQP master on Parrot master)

[17:12] <[Coke]> flussence: this is OS X. there is no /proc

[17:14] *** konundra joined
[17:17] *** jeffreykegler left
[17:23] *** saxx11 joined
[17:23] *** spanner joined
[17:24] *** domidumont1 joined
[17:25] *** rurban1 joined
[17:26] *** domidumont left
[17:27] *** pochi left
[17:28] *** rurban1 left
[17:29] *** domidumont1 left
[17:33] *** rurban1 joined
[17:34] *** spanner left
[17:34] *** PacoAir joined
[17:35] *** fklstx joined
[17:36] *** fklstx left
[17:36] *** spanner joined
[17:38] *** spanner left
[17:42] *** Chillance joined
[17:44] *** rurban1 left
[17:44] *** Guest1337 joined
[17:48] *** domidumont joined
[17:52] *** [particle]1 joined
[17:53] *** kbenson1 joined
[17:54] *** Timbus|Away joined
[17:55] *** mathw_ joined
[17:55] *** estrabd_ joined
[17:55] <Tene> no procfs?!  abomination!

[17:55] <Tene> What's next?  No sysfs?

[17:56] *** kaare__ joined
[17:57] *** cxreg2 joined
[17:57] *** hoelzro_ joined
[17:57] *** saxx11 left
[17:57] *** sftp_ joined
[17:58] *** chayin_ joined
[17:59] *** aghbas_ joined
[17:59] *** snarkyboojum_ joined
[17:59] *** Timbus left
[17:59] *** estrabd left
[17:59] *** sftp left
[17:59] *** kaare_ left
[17:59] <diederich> ouch

[17:59] *** Timbus|Away is now known as Timbus

[18:00] *** sftp_ is now known as sftp

[18:00] *** groky joined
[18:01] *** FROGGS joined
[18:02] *** itz joined
[18:04] *** [particle] joined
[18:04] *** MrMeek-afk joined
[18:04] *** tgt_ joined
[18:05] *** Ulti_ joined
[18:05] *** kaare_ joined
[18:05] *** nwc10_ joined
[18:05] *** shachaf_ joined
[18:07] *** shachaf_ left
[18:07] *** shachaf_ joined
[18:11] *** ilogger2 joined
[18:11] *** ChanServ sets mode: +v ilogger2

[18:12] *** jercos joined
[18:13] *** Juerd joined
[18:13] *** Pleiades` joined
[18:14] <flussence> [Coke]: whoops, no idea then. sorry

[18:14] <flussence> .oO( maybe I should keep a darwin VM around just in case... )

[18:14] *** genehack joined
[18:16] *** kshannon joined
[18:16] *** araujo joined
[18:16] *** yves_ joined
[18:16] *** ruoso joined
[18:16] *** Tene joined
[18:16] *** FOAD_ joined
[18:16] *** sergot joined
[18:17] *** d4l3k_ joined
[18:17] *** Maddingu1 joined
[18:17] <flussence> .oO( wow, freenode's being quite violent today... )

[18:18] *** xilo_ joined
[18:18] <d4l3k_> v5: 206e529 | (Tobias Leich)++ | lib/Perl5/ (3 files):

[18:18] <d4l3k_> v5: let `say` be a term, rather then a sub

[18:18] <d4l3k_> v5: 

[18:18] <d4l3k_> v5: If it is a sub it will pollute nested v6 blocks.

[18:18] <d4l3k_> v5: review: https://github.com/rakudo-p5/v5/commit/206e529ae9

[18:18] <d4l3k_> v5: 37adf8f | (Tobias Leich)++ | lib/Perl5/Grammar.nqp:

[18:18] <d4l3k_> v5: allow subroutine forward declarations

[18:18] <d4l3k_> v5: review: https://github.com/rakudo-p5/v5/commit/37adf8f003

[18:18] <d4l3k_> v5: 53e3a12 | (Tobias Leich)++ | lib/Perl5/Actions.nqp:

[18:18] <d4l3k_> v5: handle missing <block> in routine_def

[18:18] <d4l3k_> v5: review: https://github.com/rakudo-p5/v5/commit/53e3a12c73

[18:19] *** mattp__ joined
[18:19] *** Khisanth joined
[18:19] *** Maddingue left
[18:19] *** Rix left
[18:20] *** crazedpsyc joined
[18:20] *** tadzik joined
[18:20] <RedditAnalytics> did they build this IRC network on a Fisher Price "My first topological IRC" kit?

[18:21] <timotimo> have i missed the grammars talk already?

[18:21] <flussence> they did build it on a "My first chat protocol"...

[18:21] <FROGGS> timotimo: what grammar talk?

[18:22] *** FOAD_ is now known as FOAD

[18:22] <timotimo> what if perl6 grammars could generate

[18:22] <timotimo> is the title i think

[18:23] <flussence> that's in 100 mins from now

[18:23] <timotimo> great?

[18:23] <timotimo> !

[18:23] *** groky joined
[18:23] <FROGGS> right!

[18:24] <FROGGS> :o)

[18:24] <tadzik> hello folks

[18:24] *** dalek joined
[18:24] *** ChanServ sets mode: +v dalek

[18:24] <timotimo> hey

[18:24] *** sivoais_ joined
[18:25] <tadzik> any idea which terminal on jfk has both power sockets and wifi? :)

[18:25] *** Rix joined
[18:25] <FROGGS> tadzik: no idea :/

[18:25] <tadzik> dang

[18:25] <timotimo> i ended up locking myself out of my VM rather than making my screencat

[18:25] <flussence> .oO( the vt100 in the broom cupboard might )

[18:25] <tadzik> what's up in austin?

[18:26] * FROGGS .oO( nice purly screencat )

[18:26] <FROGGS> tadzik: reini urban about p2/potion/p5/p6 in a few minutes

[18:26] <tadzik> nice

[18:26] *** spider-mario joined
[18:27] <tadzik> I'll continue my hunt for a place of power

[18:27] *** dmol joined
[18:28] *** bloonix_ joined
[18:28] *** BooK_ joined
[18:28] *** breinbaa1 joined
[18:28] *** genehack_ joined
[18:28] *** zamolxes joined
[18:28] *** diakopte1 joined
[18:28] *** integral_ joined
[18:28] *** integral_ left
[18:28] *** integral_ joined
[18:28] *** Gothmog__ joined
[18:28] *** odoacre joined
[18:29] *** mj41_ joined
[18:29] *** lestrrat joined
[18:30] *** Maddingu1 is now known as Maddingue

[18:30] *** mj41 left
[18:30] *** sjohnson left
[18:30] *** camelia left
[18:30] *** jerome__ joined
[18:30] *** domidumont joined
[18:30] <tadzik> ha! I look like a first-world bum now

[18:31] *** sjohnson joined
[18:31] *** camelia joined
[18:31] *** rurban1 joined
[18:32] *** ChanServ sets mode: +v camelia

[18:49] *** ilogger2 joined
[18:49] *** ChanServ sets mode: +v ilogger2

[18:50] <colomon> jnthn++

[18:50] *** Khisanth joined
[18:51] *** silug joined
[18:52] *** Nom- joined
[19:01] * colomon has a working Rakudo-JVM!

[19:01] *** dagurval joined
[19:01] <tadzik> yay

[19:01] *** kaare__ joined
[19:01] *** Ulti_ joined
[19:01] *** rhr_ joined
[19:01] <colomon> tadzik: your trip home going okay?

[19:01] *** jlaire_ joined
[19:02] <tadzik> colomon: yeah

[19:02] <colomon> tadzik: it was great to meet you.

[19:02] <tadzik> colomon: I went to terminal 5 (I'm supposed to be at 1), sat next to the cold wall becuase there's a power socket and a wifi here

[19:02] *** ironcamel joined
[19:02] <tadzik> colomon: yeah, it was terrific to meet you too!

[19:02] *** jtpalmer_ joined
[19:03] <tadzik> you're not done with me yet, I'll be back :)

[19:03] <tadzik> I like the US

[19:03] <jnthn> ;)

[19:03] <colomon> :)

[19:03] *** orevdiabl joined
[19:03] <tadzik> everyone speaks the language I understand

[19:03] *** [Coke]_ joined
[19:03] <nwc10> and I'm sure the US loves you, and your money

[19:03] <tadzik> and people are generally merry and chatty

[19:03] <tadzik> of course it does, it's a fair deal I guess

[19:04] *** charsbar_______2 joined
[19:04] <colomon> tadzik: that varies from place to place, but it's certainly true where I'm from, too.

[19:04] <colomon> (Merry and chatty, I mean.)

[19:04] *** robins joined
[19:05] *** sjohnson1 joined
[19:05] *** exodist_ joined
[19:05] <colomon> tadzik: If you're trying to get around the country, you're certainly welcome to crash in our guest room for a few nights.

[19:05] *** kaare_ left
[19:05] *** salv0 left
[19:05] *** flussence joined
[19:05] *** stevan_ joined
[19:05] *** frdmn joined
[19:05] <tadzik> colomon: thanks, I appreciate that

[19:05] *** Yappo_________ joined
[19:06] <tadzik> diakopter scared me though with the "renting a car is expensive if you're under 25"

[19:06] <tadzik> but I guess I could as well train around

[19:06] *** odoacre joined
[19:07] *** jlaire_ is now known as jlaire

[19:07] <colomon> tadzik: that's actually of limited use in the US -- limited coverage and frequently pretty expensive.

[19:07] *** tokuhirom joined
[19:07] <tadzik> hm

[19:07] *** ingy joined
[19:08] <colomon> but I bet if you put your mind to it, you can figure it out.  (or we can -- bet you can get us locals to give you a hand, too.)

[19:08] *** tomyan joined
[19:10] <tadzik> yeah, I guess so

[19:10] *** sqirrel_ joined
[19:14] *** ilogger2_ joined
[19:14] <tadzik> bah

[19:15] <tadzik> I can drive manual, are you not entertained? ;)

[19:15] <tadzik> stupid regulations

[19:15] <colomon> actually, taking the bus between cities might be the best solution.  But I haven't done that since I was very young.

[19:15] <tadzik> so I can basically rent a car at a sane price 7 years after I get my driving license? :)

[19:15] <nwc10> IIRC insisting on a manual and a couple of other obscure features was a way to game hire places to get a better car for the same price

[19:16] <nwc10> as all the features weren't often available in a low-end manual

[19:16] <tadzik> hmm

[19:16] <nwc10> I don't try this

[19:16] <nwc10> I don't like hiring cars. Or driving, hugely

[19:16] *** Yappo_________ joined
[19:16] *** araujo joined
[19:16] <nwc10> Other people can drive. I'll drink

[19:16] *** tomyan joined
[19:16] *** mattp__ joined
[19:17] <benabik> There are some very surprising bus deals.  I think there's a $15 bus between DC and NYC.

[19:17] <dalek> rakudo/nom: 2975f0b | pmichaud++ | README:

[19:17] <dalek> rakudo/nom: Add another note to README.

[19:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2975f0b9f9

[19:17] <tadzik> that's reasonable

[19:18] <colomon> tadzik: I guess properly speaking, I'd rather encourage you to come visit the states!  Just warning that the planing may be tricky if you're intent on seeing a lot of different places in one trip.

[19:18] *** salv0 joined
[19:18] <tadzik> sure :)

[19:19] *** araujo left
[19:19] *** kshannon joined
[19:19] *** rjbs left
[19:19] *** araujo joined
[19:21] *** FROGGS_ joined
[19:21] *** broquaint joined
[19:21] *** silug joined
[19:21] *** yves_ joined
[19:22] *** domidumont1 joined
[19:23] *** snearch joined
[19:23] *** sivoais joined
[19:23] *** colomon joined
[19:24] *** sivoais left
[19:25] *** rjbs joined
[19:25] *** ruoso joined
[19:26] *** lizmat joined
[19:27] <colomon> n: my $p = "hello".path; say ~$p;

[19:27] <camelia> niecza v24-65-g5c63c23: OUTPUT«"hello".IO␤»

[19:27] <colomon> thats... weird, actually

[19:28] <moritz> it is

[19:28] <moritz> why would the stringification contain .IOI

[19:28] *** mikemol joined
[19:29] <moritz> s/I$/?/

[19:29] *** FROGGS_ left
[19:30] *** rurban joined
[19:30] *** quietfanatic joined
[19:30] <quietfanatic> rn: say "hello".path.gist; say "hello".path.perl

[19:30] <camelia> rakudo b2072f: OUTPUT«IO::Path<hello>␤IO::Path.new(basename => "hello", directory => ".", volume => "")␤»

[19:30] <camelia> ..niecza v24-65-g5c63c23: OUTPUT«Path<hello>␤IO::Path.new(:basename("hello"), :directory(""), :volume(""))␤»

[19:31] <quietfanatic> rn: say ~("hello".path)

[19:31] <camelia> niecza v24-65-g5c63c23: OUTPUT«"hello".IO␤»

[19:31] <camelia> ..rakudo b2072f: OUTPUT«hello␤»

[19:31] <colomon> moritz: yes, I'm considering that a bug.  Just getting distracted here...

[19:31] <quietfanatic> I thought say was supposed to use .gist

[19:31] *** domidumont1 left
[19:31] <quietfanatic> or wait

[19:31] <quietfanatic> that's strinigification

[19:31] <quietfanatic> nm

[19:31] *** rurban left
[19:32] <moritz> n: print 'hello'.path

[19:32] <camelia> niecza v24-65-g5c63c23: OUTPUT«Unhandled exception: Cannot unbox a String from an object of repr P6opaque␤  at /home/p6eval/niecza/lib/CORE.setting line 1734 (List.join @ 6) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1378 (print @ 6) ␤  at /tmp/QN8vu7XurQ line 1 (mainline @ 4) ␤  a…

[19:32] <moritz> n: print 'hello'.path.Str

[19:32] <camelia> niecza v24-65-g5c63c23: OUTPUT«hello»

[19:33] <moritz> n: print ~'hello'.path

[19:33] <camelia> niecza v24-65-g5c63c23: OUTPUT«hello»

[19:33] <moritz> wwwwat?

[19:33] <moritz> oh

[19:33] <moritz> n: say (~'hello'.path).WHAT

[19:33] <camelia> niecza v24-65-g5c63c23: OUTPUT«(IO)␤»

[19:33] <moritz> n: say IO ~~ Str

[19:33] <camelia> niecza v24-65-g5c63c23: OUTPUT«False␤»

[19:34] <moritz> so the stringification with ~ doesn't return a Str

[19:34] <moritz> that is indeed "curious"

[19:34] *** FROGGS_ joined
[19:36] *** sivoais joined
[19:37] <colomon> moritz: yes, I think that's the source of my problem.  or maybe a related problem.

[19:37] <PerlJam> stevan++

[19:38] <colomon> PerlJam: Moe talk?

[19:39] <PerlJam> colomon: aye

[19:39] <colomon> PerlJam: good stuff, I take it?

[19:39] <PerlJam> yep

[19:39] *** guru joined
[19:39] *** guru is now known as ajr_

[19:39] <colomon> PerlJam: I'll have to watch the video sometime

[19:40] <PerlJam> moe == Perl 5½  :-)

[19:40] <colomon> on scala.

[19:40] <PerlJam> he borrows more from Perl 6 than I thought he did.

[19:40] <colomon> how much is working now?

[19:43] *** FROGGS_ left
[19:43] *** sivoais left
[19:44] <colomon> moritz: oh, I see what you're saying.  this is seriously odd.

[19:46] <timotimo> oooh, i like karen pauleys accent a lot

[19:46] <colomon> moritz: oooo, I'm an idiot.

[19:46] <colomon> timotimo: +1

[19:46] *** breinbaas joined
[19:46] *** sivoais joined
[19:47] <colomon> moritz: bug fixed locally.

[19:48] <dalek> niecza: aee6525 | (Solomon Foster)++ | lib/CORE.setting:

[19:48] <dalek> niecza: Path.Str should NOT return an IO object.

[19:48] <dalek> niecza: review: https://github.com/sorear/niecza/commit/aee6525c97

[19:48] *** rindolf joined
[19:50] <colomon> and pushed

[19:50] <PerlJam> colomon: you'll have to watch the talk or grab the slides from stevan :)

[19:51] <colomon> PerlJam: what, he swore you to secrecy?!  ;)

[19:52] <PerlJam> colomon: nah, I'm actually too busy helping a student worker back home on another channel, sorryt.

[19:52] <PerlJam> s/yt/y/

[19:52] <colomon> PerlJam: that's a very good excuse.  PerlJam++

[19:53] <dalek> perl6-roast-data: 9cab527 | coke++ | / (4 files):

[19:53] <dalek> perl6-roast-data: today (automated commit)

[19:53] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/9cab527480

[19:53] <dalek> rakudo-star-daily: fb63bcf | coke++ | log/ (5 files):

[19:53] <dalek> rakudo-star-daily: today (automated commit)

[19:53] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/fb63bcff97

[19:53] *** sivoais left
[19:53] *** lizmat left
[19:54] *** FROGGS_ joined
[19:54] *** cibs left
[19:55] *** cibs joined
[19:55] <[Coke]_> looks the daily rakudo-star build exploded. wtf.

[19:56] <[Coke]> (complained about being in a .git directory for the first time ever.)

[19:56] *** sivoais joined
[19:57] <[Coke]> jnthn: any pointers on a workaround for https://rt.perl.org/rt3/Ticket/Display.html?id=118287 ?

[19:58] <[Coke]> .ask Juerd if he can install some version of java 7 on feather1 ?

[19:58] <yoleaux> [Coke]: I'll pass your message to Juerd.

[19:58] <anocelot> [Coke]: jnthn may be setting up a presentation just now.

[19:59] <timotimo> seems so from the stream, he's plugging in VGA right now

[19:59] <[Coke]> yes, I'm not expecting an immediate reply.

[20:00] <Juerd> [Coke]: feather already has a severe RAM shortage, so no, I'm not going to install any java vm.

[20:00] <yoleaux> 19:58Z <[Coke]> Juerd: if he can install some version of java 7 on feather1 ?

[20:01] *** sivoais left
[20:03] *** labster joined
[20:03] <[Coke]> Juerd: ... lovely. ok. guess I'll have to spring for a box somewhere.

[20:03] <colomon> [Coke]: I haven't managed to get the smoke test first last night to run yet either.  Not sure why, many things distracting me.

[20:04] <[Coke]> colomon: your smoke test is all modules?

[20:04] <colomon> [Coke]: yes

[20:04] <colomon> Its first attempt to build rakudo failed, I fixed that but now panda is not happy.

[20:05] *** rurban joined
[20:05] <[Coke]> colomon: is that different from sergot's thing that does that?

[20:05] <colomon> you're just wanting to run make spectest for JVM?

[20:05] <colomon> [Coke]: I have no idea what sergot has.

[20:05] *** stevan_ joined
[20:05] <[Coke]> just? I'm wanting to integrate it with the existing one. which is currently (but not for long I guess) running on feather.

[20:06] <timotimo> wow, holy hell, those pbc files, like CORE.setting.pbc could *really* benefit from a bit of compression

[20:06] <[Coke]> colomon: http://feather.perl6.nl/~sergot/modules/, which I think was recently killed for running on feather.

[20:06] <timotimo> as in: a huge part of it is just lots and lots of nullbytes

[20:06] <timotimo> 004a780: 0c00 0000 0000 0000 7a00 0000 0000 0000  ........z.......

[20:06] <colomon> [Coke]: I've just got a straightforward script which updates rakudo, rebootstraps panda, and then runs emmentaler and stores the results.

[20:06] <timotimo> almost every line seems to look like that

[20:06] <[Coke]> it used to have a list of all modules in the ecosystem, and list whether or not they passed their tests.

[20:07] <colomon> [Coke]: well, I do that: http://71.10.146.50:3001/report

[20:07] <colomon> but that's running on my home box and isn't up all the time.

[20:07] *** labster left
[20:08] <FROGGS_> moritz aka sinkmaster, are you there?

[20:08] <FROGGS_> okay, already solved it I guess

[20:08] *** frdmn joined
[20:10] *** rurban left
[20:10] *** labster joined
[20:13] *** odoacre_ joined
[20:14] <[Coke]> colomon: I'm just trying to make sure we're avoiding duplicate of effrot.

[20:14] <[Coke]> we already had sergot's list which was a rework of modules.perl6.org that never got backfilled.

[20:14] <colomon> lexical classes... woah.

[20:16] <anocelot> Is it a coincidence that ==> looks a bit like a shovel?

[20:16] <quietfanatic> anocelot: Er, probably

[20:16] <pmichaud> at jnthn's talk

[20:16] <pmichaud> btw, I've been thinking that i^Hperhaps n^Hinfinities should be transitive throuh .map, .grep, etc.

[20:16] <colomon> [Coke]: my goal is mainly to highlight regressions in module performance

[20:16] <timotimo> does somebody know if bailador will work on niecza?

[20:17] <anocelot> Because when jnthn said "shove it into" I immediately thought, "Hey!  It's a shovel!"

[20:17] <colomon> timotimo: tend to doubt it, but I haven't tried.

[20:17] <timotimo> does it sound sensible to want to try to put niecza onto heroku and plug it into the web framework using psgi?

[20:18] *** yves_ left
[20:18] *** mattp__ left
[20:18] *** takesako_____ left
[20:18] <colomon> timotimo: no clue.   I don't really know what heroku is, to be honest.  :(

[20:19] <timotimo> heroku is a pretty awesome hosting platform thingie

[20:19] <timotimo> platform as a service

[20:21] <colomon> timotimo: remind me to take a look sometime later?  jnthn++ is being insanely cool at the moment.  :)

[20:21] *** baest joined
[20:21] <timotimo> i'm watching that right now, too

[20:21] <timotimo> and yeah, he's so cool!

[20:22] <[Coke]> Does anyone have a place where we can do a daily build for testing that isn't feather?

[20:22] *** quietfanatic left
[20:22] <benabik> What's jnthn talking about?

[20:23] <colomon> http://www.yapcna.org/yn2013/talk/4657

[20:23] *** sivoais joined
[20:24] <timotimo> mhhh, delicious yeti

[20:24] *** PerlJam joined
[20:25] *** bloonix joined
[20:25] <timotimo> why is the ( backslashed?

[20:25] *** Nom- joined
[20:25] * benabik misses YAPC.

[20:25] *** rurban joined
[20:25] <timotimo> ah, a capture

[20:26] <pmichaud> I've been thinking that list infinity should be transitive through .map and .grep

[20:26] <pmichaud> (having seen jnthn++'s example at the beginning of the talk)

[20:26] <timotimo> i wonder if there's some enhancement to be had from making "make" refer to the $/ more directly at compile time and spare some lookups? maybe that already happens

[20:27] *** rurban left
[20:27] *** mattp__ joined
[20:28] <timotimo> what was the good example?

[20:28] *** colomon left
[20:28] *** yves_ joined
[20:28] *** charsbar_______2 joined
[20:28] *** tgt_ joined
[20:28] *** chayin_ joined
[20:28] *** PacoAir joined
[20:28] *** berekuk joined
[20:28] *** takesako_____ joined
[20:28] *** colomon_ joined
[20:29] <pmichaud> my @a = 1..Inf;  my @b = @a.grep( *.is-prime );   # not jnthn's exact example, but it gets the point across

[20:29] <pmichaud> the first assignment knows to stop.  the second one is eager and goes.... forever.

[20:29] *** tgt_ left
[20:30] *** ggoebel_ joined
[20:30] *** sivoais left
[20:30] *** alester joined
[20:31] *** ggoebel_ is now known as ggoebel

[20:33] *** sivoais joined
[20:34] <timotimo> wait, is jnthn about to present a fully working generative grammar?

[20:34] <colomon_> timotimo: he's certainly sketching one out...

[20:35] <timotimo> it would seem like jnthn to have a talk entitled "what if we could $really_cool_thing" and then presents "well, here's a fully working implementation."

[20:35] <colomon_> oh, absolutely

[20:36] <TimToady> btw, I think that close to none of those <?> were actually necessary, given the invoking rules always eat whitespace first

[20:38] <[Coke]> Unhandled exception: Method 'backtrace' not found (rakudo-java on any test file)

[20:38] <timotimo> :(

[20:40] <[Coke]> it's the "use v6";

[20:40] *** sivoais left
[20:41] <timotimo> huh!

[20:41] <timotimo> weird.

[20:41] <[Coke]> if I comment those out, a lot of the sanity tests pass.

[20:41] *** rurban joined
[20:41] <colomon_> Backtions++

[20:41] <TimToady> Bactions?

[20:42] <timotimo> haha

[20:42] <timotimo> what jnthn calls reverse action classes

[20:43] <colomon_> timotimo: that was a spelling question, TimToady++ is sitting in front of me. 

[20:43] <timotimo> ah

[20:43] *** sivoais joined
[20:44] * TimToady is always looking to save a character of typing :)

[20:45] <colomon_> https://github.com/jnthn/grammar-generative

[20:46] <[Coke]> r: "is always looking to save a character of typing :)".chars.say

[20:46] <camelia> rakudo b2072f: OUTPUT«50␤»

[20:47] <timotimo> wow.

[20:47] <flussence> *applause*

[20:47] <TimToady> "vicariously lazy"

[20:47] *** rurban left
[20:49] <flussence> a few years ago I wondered out loud if there was a way to turn the sprintf grammar in the spec into a list of valid patterns for autogenerating tests... but I'd written it off as impossible.

[20:50] <TimToady> back to LBJ...

[20:50] <FROGGS_> flussence: if the goal is to support exactly the same like perl5, there are tests

[20:50] <colomon_> flussence: "impossible" means it takes jnthn++ 401 lines of code

[20:50] <flussence> :D

[20:50] <timotimo> jnthn++ # excellent stuff!

[20:50] <FROGGS_> hehe

[20:50] *** PZt joined
[20:50] *** sivoais left
[20:50] <flussence> jnthn++ indeed

[20:52] *** colomon_ left
[20:53] <flussence> (actually I think it was also suggested back then GGE could maybe be hacked up to do it, but I can't imagine that being fun to use :)

[20:53] *** sivoais joined
[20:54] *** stevan_ left
[20:54] *** labster left
[20:55] <timotimo> i'm currently discussing in #parrot that the CORE.setting.pbc has basically hundreds of screenfuls of one column of data, three columns of nullbytes in its hexdump output

[20:55] <timotimo> 0000190: 725f 414e 4e00 0000 a21f 2000 0000 0000  r_ANN..... .....

[20:55] <timotimo> 004b800: 0800 0100 0000 0000 e1ff ffff ffff ffff  ................

[20:55] <timotimo> every line between those two has '0000 0000 0000' in it.

[20:56] <flussence> looks like lots of 32bit ints used to store tiny values?

[20:56] *** FROGGS_ left
[20:58] <timotimo> 64 bits, no?

[20:59] <timotimo> anyway, gzipping the core setting pbc turns it into 1.7 mb down from 17 mb. i wonder if startup time would be improved that way.

[20:59] *** DreamingInCode joined
[20:59] <flussence> why settle for gzip? xz -9 gets it down to 850kB :)

[20:59] *** sivoais left
[20:59] *** rurban joined
[21:00] <benabik> Because integrating xz into Parrot is more effort than using the GzipHandle dynpmc that's already there?  :-D

[21:00] <flussence> oh fine :)

[21:00] <timotimo> does xz decompress similarly fast?

[21:01] <flussence> IIRC it's somewhere between gz and bz2, toward the gzip end of the scale

[21:02] <flussence> .oO( hmm, I have a zpaq compressor here... )

[21:02] *** stevan_ joined
[21:03] *** dmol joined
[21:03] <flussence> well that's a bit rubbish, it actually came out larger than xz.

[21:04] <timotimo> huh?

[21:04] <flussence> lrzip -z

[21:04] <timotimo> apparently the core setting also contains a boatload of binary data expressed in some kind of  "don't have any non-printable characters" format

[21:04] <flussence> (-z uses PAQ, which is ridiculously impractical and only meant to win benchmarks)

[21:05] <timotimo> endless blocks of data that looks a lot like "AAAAAN0LAABUAAAA"

[21:06] <timotimo> (perhaps the same kind of 2 bytes data + 6 bytes padding rubbish from the earlier parts of the pbc)

[21:06] <flussence> I'm looking at the hex dump and wow. That's a ton of repeated values, not just null bytes

[21:07] <benabik> Compiling for Parrot requires a step through a text format.  Avoiding non-printables probably makes life easier.

[21:08] <timotimo> >_<

[21:09] *** FROGGS_ joined
[21:09] <benabik> I was trying to fix that in last year's GSoC, but ran out of time.  Having a baby tends to ruin schedules.

[21:09] *** rurban left
[21:09] <timotimo> is the code severely bitrotted?

[21:10] <benabik> Only got up to disassembly.  IIRC, I was mucking around with making the Key PMC easier to deal with.  It's fairly magical.

[21:10] <timotimo> well, it's not really very pressing, is it?

[21:11] <benabik> The disassembler still seems to work, for some value of work, although Rosella seems to be bit rotted.

[21:11] <timotimo> i was just kind of astounded when i saw it.

[21:11] *** bruges joined
[21:13] *** FROGGS_ left
[21:14] <flussence> you know what works better than xxd for showing this stuff?

[21:14] <flussence> import it in gimp as raw data, indexed, ~1000 wide

[21:14] *** konundra joined
[21:20] * jnthn survived his first talk :)

[21:21] * TimToady hopes to survive his last talk :)

[21:21] *** lizmat joined
[21:21] *** FROGGS_ joined
[21:24] <timotimo> he's calling perl dead!

[21:25] <timotimo> could the serializing format be bettered? it's mostly As and \es

[21:25] <eternaleye> flussence: zpaq is less a compression algorithm and more a container, which has a.) a compression algo written in a DSL and b.) a bytestream to decompress it.

[21:26] <eternaleye> flussence: So it can be faster than gzip or smaller than XZ, depending on the compressor.

[21:26] <flussence> oh jeez, that's scary. Sounds like RAR...

[21:26] <eternaleye> flussence: No, no

[21:26] <eternaleye> flussence: It was meant to fix the mutual imcompatibility problem in the PAQ family

[21:26] <flussence> are you sure? I've seen an article that demonstrated rar is turing-complete... :)

[21:26] <eternaleye> flussence: By encoding 'how to decode' inside the file.

[21:27] <eternaleye> flussence: Intriguing

[21:27] <eternaleye> flussence: Anyway, http://mattmahoney.net/dc/zpaq.html

[21:27] <eternaleye> ^^^ Original author's page

[21:28] *** dmol left
[21:29] *** rurban joined
[21:30] <flussence> ok, based on my extremely crude .pbc viewer, the first third of the setting is poorly packed integers, the middle is base64 data, and the end is also poorly packed integers, but *sequential* too.

[21:30] *** calicojck joined
[21:30] <timotimo> m)

[21:30] <timotimo> could improving this yield better startup time?

[21:30] <timotimo> i mean ... base64? seriously? :(

[21:31] <flussence> it certainly couldn't hurt.

[21:31] <benabik> The "first third" is the bytecode.  The end is debug annotations with line numbers.

[21:31] <jnthn> The JVM one is smaller, fwiw

[21:32] <timotimo> jnthn: and the moarvm one is probably also smaller, no?

[21:32] <jnthn> don't have it yet :)

[21:32] <benabik> Well, Line numbers and bytecode indexes.

[21:32] <timotimo> completely unreadable slide :(

[21:33] <timotimo> oooh, i'm hungrin' for some noodles now :(

[21:34] *** tgt joined
[21:35] <masak> rn: say "Just Another Perl 6 Hacker".comb[22, 13, 5, 6].join.uc

[21:35] <camelia> rakudo b2072f, niecza v24-66-gaee6525: OUTPUT«CPAN␤»

[21:35] <masak> \o/

[21:35] <timotimo> one thousand lines of push $P5463, 0 or push $P5463, 1

[21:35] <timotimo> yaaaay

[21:35] <jnthn> :P

[21:36] <masak> r: say "CPAN".comb (<) "Just Another Perl 6 Hacker".uc.comb

[21:36] <camelia> rakudo b2072f: OUTPUT«True␤»

[21:36] *** DreamingInCode left
[21:37] <timotimo> ... (<) is syntax for what?

[21:37] <masak> timotimo: set membership.

[21:37] <masak> er.

[21:37] <masak> subsethood, sorry.

[21:38] <timotimo> mhm, ok

[21:38] <masak> strict subsethood, even.

[21:38] *** rurban left
[21:38] <masak> r: say set() (<) set()

[21:38] <camelia> rakudo b2072f: OUTPUT«False␤»

[21:38] *** DreamingInCode joined
[21:38] <timotimo> oh, it's the texas subsetness thing

[21:38] <masak> yeah.

[21:39] <flussence> .oO( the setting is quite literally painful to look at when rendered as 8bit grayscale )

[21:40] <timotimo> flussence: what's the button to get that?

[21:40] *** lizmat left
[21:40] <flussence> open in gimp, filetype raw data, set to 1536w×20000h, indexed colour

[21:40] <timotimo> cute

[21:41] <timotimo> i missed the slide about marketing that made people applaud :(

[21:41] <anocelot> (Mark Keating)

[21:41] <flussence> stream stopped working entirely for me on this one :(

[21:41] *** donaldh joined
[21:42] <timotimo> oh, ok

[21:42] <anocelot> It looks like it's still sendind data.  Reset the stream client?

[21:42] *** fgomez joined
[21:43] <flussence> no good, it doesn't even get past the connecting stage for me :/

[21:43] <flussence> (worked fine before...)

[21:45] <flussence> oh well, they'll all end up on youtube eventually...

[21:45] <anocelot> Hmm...  I'd check it on my lappy, but I'm trying very hard not to install flash on this machine.  >.>

[21:46] <flussence> I've been getting by using rtmpdump all day

[21:47] <timotimo> what's the @{$x} for? o_O

[21:48] <timotimo> this person is not making me interested in learning perl 5 after perl 6 :P

[21:49] *** donaldh left
[21:49] <anocelot> timotimo: I think it's basically @$x.  Just unnecessicarily disambiguated.

[21:50] <timotimo> oh, @$x == 0 would be "list inside $x has 0 elements"?

[21:51] <anocelot> That's my understanding.  It's certainly possible I'm wrong. ;)

[21:52] <huf> the *array*

[21:52] <huf> the array referred to by $x has 0 elements

[21:52] <timotimo> sorry. okay.

[21:57] <dalek> perl6-bench: 8a6d7d7 | (Geoffrey Broadwell)++ | timeall:

[21:57] <dalek> perl6-bench: Fix a regression in timeall that broke the ability to save partial timing results if the user ctrl-c's in the middle of a chain of tests

[21:57] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/8a6d7d756b

[21:57] <dalek> perl6-bench: 911bc4d | (Geoffrey Broadwell)++ | components.json:

[21:57] <dalek> perl6-bench: Add a moarvm component

[21:57] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/911bc4d65e

[21:57] <dalek> perl6-bench: a24fce5 | (Geoffrey Broadwell)++ | compilers.pl:

[21:57] <dalek> perl6-bench: Add an nqp-moarvm compiler entry

[21:57] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/a24fce5235

[21:57] <dalek> perl6-bench: cb84c62 | (Geoffrey Broadwell)++ | mi (2 files):

[21:57] <dalek> perl6-bench: Add skips for tests that make nqp-moarvm blow up

[21:57] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/cb84c62fc6

[21:57] <huf> oh jesus fuck timotimo dont listen to me

[21:57] <huf> i'm mouthing off in the wrong channel. damn.

[21:57] <huf> sorry.

[21:58] <huf> OH, you *were* talking about p5? oh.

[21:59] *** vmspb joined
[21:59] <timotimo> haha :)

[21:59] <huf> yeah, p5 works like i said. :D

[21:59] <pmichaud> "Easier to write a new language than patch p5."   Hmmmm, where have I heard that before?  ;-)

[21:59] *** PacoAir left
[22:00] <anocelot> pmichaud: FORTRAN.

[22:00] <flussence> PH... *ducks tomatoes*

[22:05] *** Guest1337 joined
[22:06] <timotimo> nietzsche perl6? :)

[22:08] *** dmol joined
[22:08] <anocelot> "Quick language design is the opiate of the masses." -- Nietzsche perl6

[22:08] *** rurban joined
[22:10] *** stevan_ left
[22:12] <timotimo> d'aaw, pixel art doggie

[22:12] *** jac50 joined
[22:13] *** ajr_ left
[22:16] *** DreamingInCode left
[22:17] <timotimo> haha, what's going on i don't even ...

[22:18] <anocelot> Someone handed a very excitable person the microphone and he had everyone go Yeeeehaw and do the wave.

[22:18] *** stevan_ joined
[22:18] <timotimo> yeah, i kind of saw that

[22:19] <anocelot> XD  I'm good at answering rhetorical questions.

[22:19] <timotimo> :)

[22:22] *** DreamingInCode joined
[22:26] <dalek> perl6-bench: 2c55b57 | (Geoffrey Broadwell)++ | compilers.pl:

[22:26] <dalek> perl6-bench: nqp-jvm is no longer its own specialized compiler, it's just part of nqp, so fix the compiler def

[22:26] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/2c55b57dbd

[22:28] *** Guest1337 left
[22:29] *** FROGGS_ left
[22:30] <timotimo> oh so much text on a slide

[22:31] <timotimo> two thousand packages o_O

[22:32] *** xilo joined
[22:33] <timotimo> i think he forgot to click the "does this setup look okay?" "yes" button

[22:35] <anocelot> timotimo: Yerp.

[22:37] <dalek> v5: 85b720e | (Tobias Leich)++ | / (4 files):

[22:37] <dalek> v5: make `scalar` a token

[22:37] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/85b720e500

[22:38] *** FROGGS_ joined
[22:39] <lue> hello world o/

[22:40] <timotimo> hey lue

[22:41] * masak .oO( o/ Hey, Lue o/ )

[22:41] <timotimo> i'd love to be able to use o/ ... o/ for regexes %)

[22:42] <masak> r: sub circumfix:<o/ o/>($music) { say $music }; o/ Hey, Lue o/

[22:42] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Unable to parse expression in circumfix:sym<o/ o/>; couldn't find final $stopper␤at /tmp/diwTHMN2B7:1␤------> >($music) { say $music }; o/ Hey, Lue o/⏏<EOL>␤    expecting any of:␤        argument list␤        prefix…

[22:42] <sorear> o/ folks

[22:42] <masak> :/

[22:43] <timotimo> sorear: do you have experience with niecza and psgi?

[22:43] <FROGGS_> *schock*, I missed jnthn's talk >.<

[22:43] <FROGGS_> -c

[22:43] <sorear> timotimo: i got it working once, long ago

[22:44] <sorear> don't remember much

[22:44] <timotimo> unfortunately i have no idea how psgi and friends work ... hm.

[22:44] <masak> FROGGS_: I'm sure it'll be online.

[22:44] *** rurban left
[22:48] *** fgomez left
[22:48] *** dmol left
[22:50] *** vmspb left
[22:52] *** cognominal joined
[22:54] *** prevost joined
[22:54] <FROGGS_> masak: whut?

[22:54] <FROGGS_> damnit

[22:55] <FROGGS_> do he'll give me a privat lesson if I buy beer?

[22:55] <FROGGS_> masak: ahh, I read a 'not' in your sentence

[22:55] <sorear> which jnthn talk?

[22:55] <FROGGS_> not it is gone

[22:56] <FROGGS_> 'if grammars could generate'

[22:56] <sorear> it was cute

[22:56] <FROGGS_> 'cute' ?

[22:56] <jnthn> or "crazy"

[22:57] <FROGGS_> "aha"

[22:58] <timotimo> that's ingy, isn't it?

[22:59] <jnthn> yes :)

[22:59] *** calicojck left
[23:00] <timotimo> perl6 to snusp compiler incoming?

[23:03] <sorear> pretty sure shachaf(?) was working on a brainfuck backend for gcc

[23:03] <shachaf> Me? No.

[23:03] *** tomyan left
[23:03] <timotimo> pretty sweet.

[23:03] <shachaf> sorear: I think you're thinking of ais523.

[23:04] <sorear> probably.

[23:04] <timotimo> wait, where did i hear this before

[23:05] <timotimo> wasn't the same talk in lightning talks yesterday too?

[23:05] <sorear> not quite

[23:05] <timotimo> oh, right, yesterday was a rage-filled cgi.pm must die talk

[23:05] <sorear> Saywer X was doing his CGI MUST DIE talk

[23:06] <sorear> which incidentally was given, exactly the same, in Frankfurt

[23:06] <FROGGS_> incidentally?

[23:06] <sorear> by the way

[23:06] <timotimo> Frankfurt am Main?

[23:06] <sorear> yes

[23:06] <sorear> yapc::eu 2012

[23:07] <sorear> I was there

[23:07] <FROGGS_> ya, seen it

[23:07] <timotimo> mhm

[23:09] <TimToady> chow &

[23:10] *** stevan_ left
[23:10] <sorear> bye TimToady

[23:10] *** skids joined
[23:11] *** DreamingInCode left
[23:12] *** DreamingInCode joined
[23:13] *** DreamingInCode left
[23:13] <timotimo> oops, the psgi module fails with current rakudo :(

[23:13] * timotimo investigates

[23:14] *** kshannon left
[23:14] <FROGGS_> masak: are you going to the game night or is there a hackathon planned?

[23:15] *** FROGGS_ left
[23:15] *** FROGGS_ joined
[23:16] <timotimo> gaaah, it fails only when using blib/lib

[23:17] <timotimo> rakudo seems to be trying to go for $orig in a Stash

[23:18] <timotimo> which doesn't seem to be the way you do it.

[23:18] *** snoopy joined
[23:19] <timotimo> it seems like it doesn't supply an iteration thingie at all, so do i have to nqp::getattr?

[23:20] *** FROGGS_ left
[23:21] *** jac50 left
[23:22] *** lue left
[23:22] *** sorear joined
[23:27] *** lue joined
[23:31] <timotimo> /home/timo/build/rakudo/perl6.c:921: undefined reference to `Parrot_set_config_hash'

[23:31] <timotimo> how did ... i do that?

[23:32] *** kshannon joined
[23:35] <timotimo> oh i know

[23:35] <timotimo> i stripped files that i shouldn't have stripped

[23:41] *** benabik joined
[23:50] *** quietfanatic joined
[23:57] *** rurban1 joined
