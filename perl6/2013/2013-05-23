[00:00] *** cognominal__ joined
[00:03] <japhb_> Interesting, if I make install for nqp-jvm, ./nqp in the top level directory works, but install/nqp (or cd install; ./nqp) does not

[00:03] <japhb_> $ install/nqp --version

[00:03] <japhb_> Unhandled exception: Method 'options' not found

[00:03] <japhb_>   in command_line

[00:03] <japhb_>   in MAIN

[00:03] <japhb_>   in <anon>

[00:03] <japhb_> (Same error with cd install; ./nqp)

[00:04] *** cognominal left
[00:08] *** Chillance left
[00:12] *** maximone left
[00:17] *** PacoAir left
[00:19] *** PacoAir joined
[00:31] *** risou_awy is now known as risou

[00:32] *** risou is now known as risou_awy

[00:32] *** risou_awy is now known as risou

[00:38] <dalek> perl6-bench: 8ea7c51 | (Geoffrey Broadwell)++ | analyze:

[00:38] <dalek> perl6-bench: Change width attribute of chart divs to max-width

[00:38] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/8ea7c517df

[00:38] <dalek> perl6-bench: 0a119a6 | (Geoffrey Broadwell)++ | TODO:

[00:38] <dalek> perl6-bench: Add a feature TODO

[00:38] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/0a119a6a8e

[00:38] <dalek> perl6-bench: 9f640ae | (Geoffrey Broadwell)++ | / (2 files):

[00:38] <dalek> perl6-bench: Add nqp-jvm component, build instructions, and compiler info

[00:38] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/9f640ae8c4

[00:41] <japhb_> nqp-jvm REPL seems to silently not work on master -- is this known

[00:41] <japhb_> ?

[00:43] *** berekuk left
[00:47] <timotimo> i knew about it

[00:50] *** risou is now known as risou_awy

[00:52] *** sftp joined
[00:54] <japhb_> What's the correct syntax for eval'ing a string in NQP?

[00:57] <japhb_> (In the benchmark code, I need to eval "pir::getinterp__P().recursion_limit(100000);" only when running on Parrot.  If it's in the [unquoted] source, nqp-jvm will choke just trying to compile it, since pir:: isn't recognized)

[01:04] *** rindolf left
[01:05] *** xinming joined
[01:07] *** anuby joined
[01:16] *** PacoAir left
[01:38] *** IKARi__ left
[01:39] *** japhb_ left
[01:48] *** FROGGS_ joined
[01:52] *** FROGGS left
[02:04] *** gdey left
[02:04] *** jaldhar joined
[02:08] *** lustlife joined
[02:09] *** estrabd joined
[02:10] *** dayangkun joined
[02:18] *** dayangkun left
[02:19] *** prevost joined
[02:20] *** jaldhar left
[02:23] *** jaldhar joined
[02:36] <TimToady> http://rosettacode.org/wiki/Variable_size/Set#Perl_6 to go with the Get entry

[02:37] <TimToady> 3 behind D, and 70 behind Python :)

[02:47] *** Timbus|Away joined
[02:47] *** Timbus|Away is now known as Timbus

[02:48] <labster> TimToady++

[02:51] <colomon> TimToady: I'd love to work on some of the bezier curve stuff (assuming someone else hasn't already done it) but it is like #30 on my to-do list of projects, and I'm having a heck of a time getting anywhere with the much more important things at the top of the list.  :\

[03:03] <dukelet0> colomon: mmmmm, bezier curves :)

[03:05] *** pecastro joined
[03:15] <TimToady> I promise not to work on them any time soon.

[03:30] *** cognominal__ left
[03:30] *** cognominal__ joined
[03:33] *** odoacre joined
[03:38] *** fildon_ joined
[03:57] *** gdey joined
[03:57] *** preflex_ joined
[03:58] *** preflex_ is now known as preflex

[04:14] *** gdey left
[04:23] *** rhr left
[04:25] *** genehack left
[04:25] *** Psyche^ joined
[04:29] *** Psyche^ is now known as Patterner

[04:34] *** REPLeffect joined
[04:35] <TimToady> http://rosettacode.org/wiki/Date_manipulation#Perl_6

[04:43] *** zby_home joined
[04:57] *** japhb_ joined
[05:00] *** prevost left
[05:05] <masak> good morning, #perl6

[05:07] *** genehack joined
[05:08] <TimToady> o/

[05:08] <masak> TimToady: "(mostly due to a reticence to inflict Western cultural imperialism on other cultures...or maybe just due to laziness)" -- the latter, I'd say. also, that date format looks very US-centric to me, not just western :)

[05:09] <TimToady> that's why I called the grammar US-DateTime

[05:10] <masak> fairynuff.

[05:11] <TimToady> I was unsuccessful in setting the DateTime timezone however; had to use .delta to get to Zulu

[05:11] <TimToady> and looking at the code, it appears to ignore any named argument it doesn't know

[05:14] <TimToady> maybe I just did it wrong

[05:14] <masak> well, .delta is obviously wrong from a philosophical perspective.

[05:14] <masak> and yes, the constructor probably should carp on unknown nameds.

[05:15] <TimToady> yeah, I was just doing it rwong

[05:18] *** robinsmidsrod joined
[05:18] <masak> seems $timezone expects to be given in minutes or seconds, if I read the source right.

[05:19] <moritz> \o

[05:26] <TimToady> doesn't work with minutes, but does with seconds

[05:27] <TimToady> anyway, fixed to use :$timezone now

[05:34] <masak> \o/

[05:34] * masak away until this evening, teaching

[05:38] *** FROGGS_ left
[05:53] *** FROGGS_ joined
[05:57] *** FROGGS_ left
[05:57] *** FROGGS_ joined
[05:58] *** FROGGS_ is now known as FROGGS

[05:58] <FROGGS> o/

[05:59] *** domidumont joined
[06:02] <dalek> perl6-bench: b6cd4bd | (Geoffrey Broadwell)++ | analyze:

[06:02] <dalek> perl6-bench: Continued improvements to html_plot output: relative info in plot tooltips, angled X-axis tick labels, undef rate protection, skip empty chart with --compare

[06:02] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/b6cd4bd5d2

[06:02] <dalek> perl6-bench: 9a0b2c7 | (Geoffrey Broadwell)++ | analyze:

[06:02] <dalek> perl6-bench: Use a linear X axis when plotting linear-scaled tests, like rc-man-or-boy-test

[06:02] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/9a0b2c7323

[06:02] <dalek> perl6-bench: 17e7d2d | (Geoffrey Broadwell)++ | timeall:

[06:02] <dalek> perl6-bench: Increase minimum run time for scalable tests to 3.0 seconds

[06:02] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/17e7d2d8e3

[06:02] <dalek> perl6-bench: 1454441 | (Geoffrey Broadwell)++ | timeall:

[06:02] <dalek> perl6-bench: Properly handle linear-scaled tests in timeall

[06:02] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/1454441482

[06:02] <dalek> perl6-bench: 46452be | (Geoffrey Broadwell)++ | timeall:

[06:02] <dalek> perl6-bench: Properly skip tests that aren't enabled

[06:02] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/46452beb16

[06:02] <dalek> perl6-bench: ce24c29 | (Geoffrey Broadwell)++ | / (2 files):

[06:02] <dalek> perl6-bench: Factor mini-benchmark definitions out of timeall into minibenchmarks.pl; change default size of rc-forest-fire map from 30x20 to 16x16

[06:02] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/ce24c29da7

[06:02] *** zby_home left
[06:04] <dalek> perl6-bench: 52656de | (Geoffrey Broadwell)++ | jqplot/plugins/jqplot.canvasAxisTickRenderer.min.js:

[06:04] <dalek> perl6-bench: Add another required jqPlot plugin (canvasAxisTickRenderer), in minimized form as usual

[06:04] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/52656de7ef

[06:08] *** PacoAir joined
[06:09] *** dmol joined
[06:13] *** mikemol joined
[06:13] *** domidumont left
[06:14] *** domidumont joined
[06:14] *** dmol left
[06:20] <dalek> v5: f42a6ab | (Tobias Leich)++ | lib/Perl5/Actions.nqp:

[06:20] <dalek> v5: eager for loops, moritz++

[06:20] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/f42a6abcb8

[06:20] <dalek> v5: 276f51e | (Tobias Leich)++ | STATUS.md:

[06:20] <dalek> v5: status update

[06:20] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/276f51e1d5

[06:22] <FROGGS> I'll start to prepare the nqp/rakudo compiler release in about 12 hours btw

[06:25] <dalek> perl6-bench: 74a2fce | (Geoffrey Broadwell)++ | timeall:

[06:25] <dalek> perl6-bench: Refactor timeall compiler definitions to not use VM{foo} all over the place

[06:25] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/74a2fce738

[06:26] <dalek> specs: 381e96a | larry++ | S32-setting-library/Containers.pod:

[06:26] <dalek> specs: first should just return Nil on failure

[06:26] <dalek> specs: 

[06:26] <dalek> specs: Don't throw an exception saying there's no value; that's what Nil means!

[06:26] <dalek> specs: review: https://github.com/perl6/specs/commit/381e96a2d7

[06:27] <TimToady> nr: say first * > 5, 1..3

[06:27] <camelia> rakudo a50c2e: OUTPUT¬´No values matched‚ê§  in method gist at src/gen/CORE.setting:10065‚ê§  in method gist at src/gen/CORE.setting:893‚ê§  in sub say at src/gen/CORE.setting:10963‚ê§  in block  at /tmp/KeF1SaUNxa:1‚ê§‚ê§¬ª

[06:27] <camelia> ..niecza v24-51-g009f999: OUTPUT¬´Nil‚ê§¬ª

[06:27] <TimToady> rakudobug :)

[06:28] <FROGGS> bah :P

[06:33] <diakopter> r: say first Nil

[06:33] <camelia> rakudo a50c2e: OUTPUT¬´No values matched‚ê§  in method gist at src/gen/CORE.setting:10065‚ê§  in method gist at src/gen/CORE.setting:893‚ê§  in sub say at src/gen/CORE.setting:10963‚ê§  in block  at /tmp/LCx_5zdaGd:1‚ê§‚ê§¬ª

[06:35] *** kaleem joined
[06:35] <diakopter> r: say first is last and last is first

[06:35] <camelia> rakudo a50c2e: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Undeclared routines:‚ê§    and used at line 1. Did you mean '&rand', '&end', '&any'?‚ê§    is used at line 1‚ê§‚ê§¬ª

[06:36] <FROGGS> r: say (ord("0") .. ord("A")).elems

[06:36] <camelia> rakudo a50c2e: OUTPUT¬´18‚ê§¬ª

[06:36] <FROGGS> r: say ("0" .. "A").elems

[06:36] <camelia> rakudo a50c2e: OUTPUT¬´(timeout)¬ª

[06:36] <FROGGS> r: say ("A" .. "0").elems

[06:36] <camelia> rakudo a50c2e: OUTPUT¬´0‚ê§¬ª

[06:37] <diakopter> r: say (0 .. "A").elems

[06:37] <camelia> rakudo a50c2e: OUTPUT¬´Cannot call 'Real'; none of these signatures match:‚ê§:(Mu:U \v: Mu *%_)‚ê§  in method Real at src/gen/CORE.setting:870‚ê§  in method Real at src/gen/CORE.setting:2535‚ê§  in method Real at src/gen/CORE.setting:870‚ê§  in method new at src/gen/CORE.setting:5441‚ê§  in method n‚Ä¶

[06:37] <FROGGS> that could work too...

[06:38] <FROGGS> I like the way you can do math using chars in C...

[06:38] <FROGGS> but I guess "A" + 1 will never happen in perl

[06:39] <diakopter> eval "A"+1

[06:39] <diakopter> eval: "A"+1

[06:39] <FROGGS> 2

[06:39] <diakopter> p5eval: "A"+1

[06:39] <p5eval> diakopter: 1

[06:39] *** IKARi joined
[06:39] <FROGGS> hmmm

[06:39] <FROGGS> p5eval: -"A" - 1

[06:39] <p5eval> FROGGS: -1

[06:39] *** IKARi is now known as Guest77722

[06:50] *** PacoAir left
[06:52] *** odoacre is now known as boredomlv______

[06:52] *** boredomlv______ is now known as boredomlv_______

[06:53] *** boredomlv_______ is now known as manabar_

[06:53] *** manabar_ is now known as manabar___

[06:53] *** manabar___ is now known as odoacre

[07:08] *** fgomez left
[07:13] *** xinming left
[07:13] *** brrt joined
[07:14] *** xinming joined
[07:20] *** SamuraiJack joined
[07:26] *** Guest77722 is now known as imIKARi

[07:29] *** domidumont left
[07:41] <nwc10> jnthn: is there a way to get the perl6 compiler to spit out a Java class file that I can run standalone? (at least, stand alone enough that I don't have to load the perl 6 compiler?)

[07:42] *** domidumont joined
[07:43] *** daxim joined
[07:46] *** domidumont left
[07:47] *** domidumont joined
[07:55] <diakopter> nwc10: standalone without the runtime? no. standalone without the compiler? no, because the runtime depends on the compiler because of string eval

[07:57] <diakopter> also, there's not actually much of the compiler that's not inextricable from the runtime even if you were to unbind string eval... just the Perl 6 grammar and actions really

[07:58] <diakopter> nwc10: are you thinking about load time or disk size or what?

[07:59] <diakopter> afaik, load time is negligible compared to the jvm and its runtime

[08:04] <sorear> niecza can create standalone runnable assemblies, I don't see the problem

[08:04] *** imIKARi left
[08:04] <sorear> string eval (there is no other kind in perl 6) throws an exception

[08:05] <diakopter> that was all I meant - you'd have to decouple it

[08:05] <sorear> this is actually necessary because niecza is bootstrapped and we don't want an infinite regress of compilers

[08:10] *** cibs joined
[08:14] *** imIKARi joined
[08:15] *** salv0 left
[08:15] *** arlinius left
[08:16] *** salv0 joined
[08:42] *** berekuk joined
[08:43] *** berekuk left
[08:44] *** fhelmberger joined
[08:44] *** berekuk joined
[08:45] *** arlinius joined
[08:50] <dalek> v5: ee62a77 | (Tobias Leich)++ | / (5 files):

[08:50] <dalek> v5: moved more specialvars to Perl5::Terms

[08:50] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/ee62a77af2

[08:52] *** risou_awy left
[08:56] *** risou_awy joined
[08:56] *** charsbar_______1 joined
[08:58] *** Yappo_________ joined
[09:05] *** Yappo_________ left
[09:08] *** dakkar joined
[09:08] *** Nom- joined
[09:09] *** imIKARi left
[09:10] *** kurahaupo left
[09:12] *** hypolin joined
[09:17] *** SamuraiJack left
[09:18] *** takesako_____ joined
[09:18] *** Yappo_________ joined
[09:19] <dalek> rakudo/nom: 627e17b | (Brent Laabs)++ | src/core/IO.pm:

[09:19] <dalek> rakudo/nom: IO::Handle.slurp now does :enc/:bin, auto-opens prior .open; add .encoding

[09:19] <dalek> rakudo/nom: * IO::Handle.encoding($enc?) added - get/set text encoding

[09:19] <dalek> rakudo/nom: * IO::Handle.slurp no longer needs .open, always calls .close

[09:19] <dalek> rakudo/nom: * sub slurp refactored into IO::Handle version

[09:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/627e17b664

[09:20] <FROGGS> labster++

[09:20] <labster> Now I just need to spec all of that stuff :o)

[09:20] *** berekuk left
[09:23] <FROGGS> :o)

[09:24] <FROGGS> and you need to add .input-line-separator, since I've got failing v5-tests *cough*

[09:27] <FROGGS> mumble, okay, I think the next I do is to support 'use vars qw(...)' and then subroutine prototypes -.-

[09:28] <FROGGS> after that I can apply TimToady++'s patch for indirect object notation *evenmorecough* *g*

[09:28] <daxim> http://weathercrack.com/#!graphs;a=Poland/Warsaw

[09:29] <tadzik> almost sunny

[09:30] <daxim> I'll pack the long trousers :-<

[09:31] <FROGGS> you can unpack them for austin though

[09:33] <tadzik> btw, are you folks aware if trans-atlantic flights have AC power onboard, so I can charge my laptop during flights?

[09:33] <FROGGS> no idea

[09:33] <FROGGS> never left our nice continent :/

[09:33] <daxim> only in first class, and only on very modern planes

[09:33] <daxim> so forget it

[09:33] <FROGGS> I though about bying another batterie pack though

[09:34] <tadzik> I'll buy some extra batteries

[09:34] <tadzik> orr... there's always a slot for a shaver in the toilet, no? :o

[09:34] <FROGGS> *g*

[09:36] <FROGGS> tadzik: there are mobile phone chargers with a crank... maybe there is something for you laptop model?

[09:36] <FROGGS> you have to be very fast though wen compiling rakudo :/

[09:36] *** berekuk joined
[09:36] <tadzik> hehe

[09:40] <bonsaikitten> tadzik: Emirates, for example

[09:41] <dalek> roast: 2a5f7c4 | (Brent Laabs)++ | S32-io/ (2 files):

[09:41] <dalek> roast: unfudge rakudo in slurp.t and io-path-unix.t, slurp encoding tests

[09:41] <dalek> roast: review: https://github.com/perl6/roast/commit/2a5f7c4776

[09:44] *** imIKARi joined
[09:47] <FROGGS> I guess I'll a batterie pack for the drive bay and a regular on, so I can hot swap it

[09:48] <diakopter> tadzik: check seatguru.com for your flight to see if there's power

[09:52] *** sqirrel joined
[09:52] <tadzik> Business Class offers a laptop power connection at every seat. There are no connections in economy class. 

[09:52] <tadzik> 9-cell battery it is then :0

[10:02] <mathw> The image of someone sitting with a laptop desperately turning a handle to keep Rakudo compiling has put a big smile on my face this morning

[10:05] *** hypolin left
[10:05] *** hypolin joined
[10:08] *** imIKARi left
[10:10] *** berekuk left
[10:27] *** anuby left
[10:32] *** brrt left
[10:52] *** rindolf joined
[11:00] <FROGGS> mathw: :P

[11:02] <tadzik> or the handheld wind power plant, sticking your hand outside the airplane windows and yelling "FASTER! FASTER!"

[11:06] *** brrt joined
[11:09] *** sqirrel left
[11:44] <sergot_> hi! o/

[11:44] * sergot_ sergot

[11:49] *** drbean joined
[11:50] <tadzik> o/

[12:05] *** PacoAir joined
[12:05] *** Vlavv joined
[12:10] *** aborazmeh joined
[12:10] *** domidumont left
[12:13] *** xinming left
[12:15] *** xinming joined
[12:24] <daxim> I'm going to demo/walk through http://use.perl.org/use.perl.org/_masak/journal/40516.html at next Œªheads

[12:37] <timotimo> meh, use.perl.org doesn't seem to load comments fully when you click on them and apparently the functionality is broken completely ... ?!

[12:43] *** brrt left
[12:49] <daxim> it is

[12:49] <daxim> also, browsing through all my old u.p.o comments, damn, that was a good side

[12:49] <daxim> b.p.o is crap in comparison

[12:50] <daxim> site

[12:51] <[Coke]> timotimo: sorry, which dash-e.t failures?

[12:51] <timotimo> the ones in test-roast.t in the star testing repository

[12:53] <[Coke]> ok. it's on feather - if you have an account there, you should be able to reproduce.

[12:53] <[Coke]> oh.

[12:53] <timotimo> i don't

[12:53] <[Coke]> I suspect that's due to an env variable. See:

[12:54] *** ajr joined
[12:54] <[Coke]> https://github.com/coke/perl6-roast-data/blob/master/bin/rakudo.sh

[12:54] *** ajr is now known as Guest13243

[12:54] <[Coke]> vs.

[12:54] <[Coke]> https://github.com/coke/rakudo-star-daily/blob/master/bin/star.sh

[12:54] *** Guest13243 is now known as ajr_

[12:55] <[Coke]> I wasn't even looking at roast failures in star, since I already have perl60-roast-data to catch those.

[12:55] <[Coke]> *perl6-r

[12:55] <daxim> bloggers, please revisit http://stackoverflow.com/questions/3135673/what-performance-increases-can-we-expect-as-the-perl-6-implementations-mature and post your 2013 findings

[12:57] *** risou_awy is now known as risou

[13:01] <timotimo> "There are also thoughts of porting Rakudo to other VMs, but that'll surely wait till after end of July." -- moritz 2010

[13:03] <FROGGS> well, there is a july comming

[13:05] <tadzik> well, it's after july 2010 now ;)

[13:05] <timotimo> wasn't saying it's wrong

[13:06] <FROGGS> (moritz is never wrong)

[13:06] *** bluescreen10 joined
[13:06] *** mtk joined
[13:08] <[Coke]> r: say [+] 1 .. 100000;

[13:08] <moritz> (except when I am)

[13:08] <camelia> rakudo 627e17: OUTPUT¬´5000050000‚ê§¬ª

[13:08] *** rhr joined
[13:09] <[Coke]> ah, I remember optimizing something in re: ranges, but it wasn't that.

[13:10] <timotimo> well, i suppose reduce on ranges could do without explicitly generating an actual range

[13:10] <timotimo> er, an actual list

[13:10] <timotimo> kind of like inlining the iteration into the reduce sub

[13:11] <timotimo> no clue if that will make a noticable difference

[13:11] *** sqirrel joined
[13:13] <moritz> [Coke]: I think you optimizied .elems

[13:14] <moritz> well, for this case you can also use a direct arithmetic expression

[13:15] <moritz> r: multi prefix:<[+]>(Range $r where { $r.min ~~ Int && $r.max ~~ Int }) { ($r.max * ($r.max + 1) / 2).Int }

[13:15] <camelia> rakudo 627e17:  ( no output )

[13:15] <moritz> r: multi prefix:<[+]>(Range $r where { $r.min ~~ Int && $r.max ~~ Int }) { ($r.max * ($r.max + 1) / 2).Int }; say [+] 1 .. 100000

[13:15] <camelia> rakudo 627e17: OUTPUT¬´===SORRY!===‚ê§CHECK FAILED:‚ê§Calling 'prefix:<[+]>' will never work with argument types (int) (lines 1, 1)‚ê§    Expected any of:‚ê§    :(Range $r)‚ê§¬ª

[13:15] <moritz> r: multi prefix:<[+]>(Range $r where { $r.min ~~ Int && $r.max ~~ Int }) { ($r.max * ($r.max + 1) / 2).Int }; say [+] (1 .. 100000)

[13:15] <camelia> rakudo 627e17: OUTPUT¬´5000050000‚ê§¬ª

[13:15] <moritz> meh, precedence issue

[13:15] <moritz> r: multi prefix:<[+]>(Range $r where { $r.min ~~ Int && $r.max ~~ Int }) { ($r.max * ($r.max + 1) / 2).Int }; say [+] (1.1 .. 5.1)

[13:15] <camelia> rakudo 627e17: OUTPUT¬´Cannot call 'prefix:<[+]>'; none of these signatures match:‚ê§:(Range $r)‚ê§  in sub prefix:<[+]> at /tmp/mnf_NdsOey:1‚ê§  in block  at /tmp/mnf_NdsOey:1‚ê§‚ê§¬ª

[13:16] <moritz> and that's the real problem :/

[13:17] <timotimo> oh my :|

[13:17] <timotimo> yeah, longest-token-matching is your friend

[13:18] <moritz> that's not related to LTM

[13:18] <timotimo> hm, so the [+] token isn't a longer token than the reduce + token?

[13:18] <moritz> the problem is that the meta operator generates a prefix:<[+]> with same precedence as a listop

[13:19] *** aborazmeh left
[13:20] <moritz> timotimo: it is, which is why the approach to optimizing meta ops can work at all

[13:20] <timotimo> so, the original meta op will still be a candidate?

[13:20] <timotimo> that's nice

[13:20] <moritz> well, that's the second problem

[13:20] <moritz> the meta op only creates a subroutine if there's none yet

[13:21] <moritz> so once you define your own multi, the normal mechanism doesn't kick in anymore

[13:21] <timotimo> oh, whoops

[13:21] <moritz> r: multi prefix:<[+]>(Range $r where { $r.min ~~ Int && $r.max ~~ Int }) { ($r.max * ($r.max + 1) / 2).Int }; say [+] (1.1 .. 5.1)

[13:21] <camelia> rakudo 627e17: OUTPUT¬´Cannot call 'prefix:<[+]>'; none of these signatures match:‚ê§:(Range $r)‚ê§  in sub prefix:<[+]> at /tmp/O6a0IyNUvs:1‚ê§  in block  at /tmp/O6a0IyNUvs:1‚ê§‚ê§¬ª

[13:21] <moritz> that's why this one fails

[13:21] <timotimo> right

[13:21] *** aborazmeh joined
[13:21] <moritz> r: [+] 1, 2; do { multi prefix:<[+]>(Range $r where { $r.min ~~ Int && $r.max ~~ Int }) { ($r.max * ($r.max + 1) / 2).Int }; say [+] (1.1 .. 5.1) }

[13:21] <camelia> rakudo 627e17: OUTPUT¬´Cannot call 'prefix:<[+]>'; none of these signatures match:‚ê§:(Range $r)‚ê§  in sub prefix:<[+]> at /tmp/OJ3gIVHPFd:1‚ê§  in block  at /tmp/OJ3gIVHPFd:1‚ê§‚ê§¬ª

[13:21] <timotimo> hm, but wouldn't that only be acceptable if the user didn't override + in that lexical scope?

[13:22] <moritz> proper checks must be made while optimizing such things, yes

[13:22] <timotimo> r: sub infix:<+>($a, $b) { $a - $b }; say [+] (1 ... 50)

[13:22] <camelia> rakudo 627e17: OUTPUT¬´-1273‚ê§¬ª

[13:22] <moritz> like &infix:<+> === &CORE::infix:<+> or so

[13:23] <timotimo> so it would indeed be something the optimizer would have to do? insert a correct optimised-metaop in the tightest scope that makes it still work or something?

[13:24] <moritz> I'm not sure

[13:27] *** FROGGS left
[13:28] *** kivutar joined
[13:29] <Ulti_> daxim most of the time is just Rakudo startup

[13:29] *** Ulti_ is now known as Ulti

[13:29] <daxim> needs more lazy loading of features, then

[13:30] <Ulti> or just dont worry about the half second it takes something to run

[13:30] <Ulti> and use perl5 for your dirty one liners

[13:30] *** broquain1 is now known as broquaint

[13:31] <Ulti> the point at which perl5 use case falls over and needs perl6 is large systems that aren't limited by the startup time of the interpreter

[13:31] *** ajr_ left
[13:32] *** aborazmeh left
[13:32] <Ulti> its as if sysadmins and ex-sed/awk users believe thats the only thing perl is for

[13:32] <timotimo> i'm still hoping the startup time will improve dramatically some day

[13:32] *** ajr_ joined
[13:32] <Ulti> I use perl to run calculations that take months to finish, the runtime isnt even language limited using C wouldnt be much faster

[13:33] <Ulti> I'm not like OMG 0.005s startup this is the best language for the task

[13:33] <Ulti> if you want fast startup time buy an SSD for your computer

[13:33] <timotimo> i don't want to learn perl 5 just to make fast one-liners :P

[13:34] <timotimo> i have an SSD, in fact

[13:34] <timotimo> perl6 -e 'say 10' -> 1.68user 0.32system 0:02.07elapsed 96%CPU (0avgtext+0avgdata 179716maxresident)k

[13:35] <Ulti> perl6 -e 'exit' real 0m 0.433s

[13:35] <timotimo> your ssd must be much better than mine

[13:35] <Ulti> perl -e 'exit' real 0m 0.005s

[13:36] <Ulti> perl6 -e 'my $i += $_ for 1 .. 100; say $i;' real 0m 0.461s

[13:36] <timotimo> what kind of beast machine is this? :)

[13:36] <Ulti> perl -e '$i += $_ for 1 .. 100; print $i;' real 0m 0.007s

[13:36] <timotimo> oh, i may have set my processor to powersave ...

[13:36] <Ulti> guess I should have used strict :)

[13:37] <timotimo> okay, it's 0.71s now for -e exit

[13:37] <Ulti> < timotimo> what kind of beast machine is this? :)   <--- a MacBook Air 1.7GHz i5

[13:37] <Ulti> >:3

[13:40] <Ulti> I'm just waiting for threaded loops in perl6 so I can do a super fair benchmark of rakudo against perl5 on my 24 core dual xeon machine :)

[13:40] <Ulti> lets see who wins then

[13:41] <timotimo> bwahaha :)

[13:42] <Ulti> seriously though perl5 vs perl6 "debate" has far too many perl5 sysadmin voices

[13:43] <geekosaur> (hey now...)

[13:43] <Ulti> as a Bioinformatician there is essentially nothing wrong with the state of perl6 right now apart from the limited port of BioPerl libraries, which I plan to help out with once I finish my thesis

[13:44] *** bamboo joined
[13:44] <timotimo> what about those rosalind exammmples that are too slow to even finish? ;(

[13:44] <timotimo> (in one patient-person-time)

[13:44] <Ulti> orly

[13:44] <Ulti> the only thing I'm :'( about is the runtime of grammars on big data files

[13:45] <Ulti> but that really comes from being greedy and objectafying everything rather than just writing the simple parser you would have otherwise written

[13:46] <ajr_> I golfed the startup down to perl[6 ] -e ""

[13:46] <ajr_> Is anyone interested in the results?

[13:47] <geekosaur> although, as a perl5 sysadmin, one of my big regrets is not having the time to sit down and figure out perl6 properly. wonder how much of that is in the background of my colleagues?

[13:47] <moritz> ajr_: yes

[13:48] <ajr_> time perl -e ""

[13:48] <ajr_> 0.00user 0.00system 0:00.00elapsed 0%CPU (0avgtext+0avgdata 5744maxresident)k

[13:48] <ajr_> 0inputs+0outputs (0major+422minor)pagefaults 0swaps

[13:48] <timotimo> holy hell, that's fast

[13:48] <ajr_> time perl6 -e ""

[13:48] <ajr_> 0.57user 0.15system 0:00.73elapsed 98%CPU (0avgtext+0avgdata 392480maxresident)k

[13:48] <ajr_> 0inputs+0outputs (0major+28073minor)pagefaults 0swaps

[13:49] <Ulti> geekosaur: I'm a "bash sysadmin" on the side... why perl?

[13:49] <geekosaur> watch out for cache effects when timing stuff like that

[13:49] <timotimo> 60x as much memory usage, too

[13:50] <geekosaur> Ulti, I'm faitly familiar with bash, but it still doesn't take much for me to decide that it'll be easier or more readable in perl

[13:50] <geekosaur> that said I will do in shell what can be done in shell

[13:50] <Ulti> I guess most of our cron stuff is all perl, but I wouldnt call what runs "sysadmin"

[13:50] <ajr_> The 5 job was the first one. I ran the 6 several times to let the cache effects settle. (The first one was 

[13:50] <ajr_> time perl6 -e ""

[13:50] <ajr_> 2.11user 0.49system 0:03.49elapsed 74%CPU (0avgtext+0avgdata 392512maxresident)k

[13:50] <ajr_> 47640inputs+0outputs (31major+28045minor)pagefaults 0swaps

[13:51] <geekosaur> but about the time I need some kind of map/dictionary structure that's sane, or the quoting gets funky, I switch to something sane

[13:51] <geekosaur> which is mostly perl in my case although sometimes python for coworkers' sakes

[13:52] <geekosaur> (said coworkers don't know shell very well either...)

[13:52] <Ulti> I installed rakudo with the prefix /dev/shm that was the right thing to do, right? ;P

[13:52] <Ulti> geekosaur: yeah I agree with that

[13:53] <ajr_> I did some straces to see if it was purely file finding and reading time, but if I've interpreted the results correctly,

[13:53] <timotimo> shell syntax is very off-putting to me, tbh

[13:53] <ajr_> there's some heavy thinking going on.

[13:53] <Ulti> geekosaur or as soon as you need anything other than integer arithmetic

[13:53] <Ulti> :)

[13:54] <geekosaur> enh

[13:54] <geekosaur> I have been known to pipe to dc in a shell script, when nothing else was available

[13:54] <geekosaur> (hello older solaris...)

[13:54] *** yx left
[13:55] <Ulti> error token is ".0 "  <--- dont lie bash, you have never tokenised input

[13:55] <geekosaur> it does tokenize, actually. they're just not what we're used to thinking of as tokens

[13:55] <Ulti> :)

[13:56] <geekosaur> also the builtins are not parsed *as* builtins, each one does its own parse

[13:56] <geekosaur> (aside from e.g. control structures)

[13:57] <ajr_> perl 5 actually got slightly worse on subsequent tries:

[13:57] <ajr_> perl -e ""

[13:57] <ajr_> 0.00user 0.01system 0:00.01elapsed 90%CPU (0avgtext+0avgdata 5728maxresident)k

[13:57] <ajr_> 0inputs+0outputs (0major+421minor)pagefaults 0swaps

[13:59] <Ulti> geekosaur: if you want a "fun" sysadmin perl6 challenge use the perl6 IRC module (which is really quite nice) to stream filtered logs from a load of servers to an IRC channel, then have it so you can just chat to the server to run commands

[13:59] <timotimo> that's not just slightly, that's infinity times slower!

[13:59] <Ulti> also I want that tool it would be p. useful

[14:00] <timotimo> accepting commands from IRC, what could possibly go wrong

[14:00] <Ulti> obviously on your own server with encryption jees

[14:00] <Ulti> also the commands dont have to be arbitrary

[14:02] *** FROGGS joined
[14:03] <Ulti> heh the more I think about this the more I might do it myself just as a research tool, just type SQL into IRC and have whichever server finds it has the database run the query and give me the result

[14:03] <timotimo> :)

[14:03] <dalek> v5: 859212e | (Tobias Leich)++ | / (3 files):

[14:03] <dalek> v5: fixed: require VERSION

[14:03] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/859212e8e7

[14:04] <Ulti> or have servers bid on chunks of a data file to process and have a prallel job just work by itself without me thinking

[14:05] <Ulti> install some android push IRC bridge to my phone... and I dont even need to do work anymore

[14:08] <PerlJam> Add the voice-to-text interface and you can just call your system and tell it what to do just like any other minion

[14:09] <GlitchMr> rn: / #`[A comment] /

[14:09] *** domidumont joined
[14:09] <camelia> rakudo 627e17: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Regex not terminated‚ê§at /tmp/W2dH483kaE:1‚ê§------> [32m/ #`[A comment] /[33m‚èè[31m<EOL>[0m‚ê§    expecting any of:‚ê§        statement list‚ê§        prefix or term‚ê§        prefix or meta-prefix‚ê§        infix stopper‚ê§¬ª

[14:09] <camelia> ..niecza v24-51-g009f999:  ( no output )

[14:09] <GlitchMr> std: / #`[A comment] /

[14:09] <camelia> std 0336087: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Null pattern not allowed at /tmp/6DjTukt9xb line 1:‚ê§------> [32m/ #`[A comment] [33m‚èè[31m/[0m‚ê§    expecting any of:‚ê§     statement end‚ê§  statement list‚ê§Parse failed‚ê§FAILED 00:00 41m‚ê§¬ª

[14:09] <GlitchMr> Niecza allows null pattern pattern

[14:12] <colomon> weird

[14:14] <PerlJam> That's a rakudo buglet that #`[] isn't recognized in regex, isn't it?   (at least that's what I think is causing the "Regex not terminated" error)

[14:15] <moritz> PerlJam: correct

[14:15] *** xilo left
[14:18] *** yx joined
[14:19] *** domidumont left
[14:22] *** domidumont joined
[14:22] *** domidumont left
[14:23] <FROGGS> rn: / #`[A comment]‚ê§ /

[14:23] <camelia> rakudo 627e17, niecza v24-51-g009f999:  ( no output )

[14:24] <FROGGS> rn: say "a" ~~ / #`[A comment]‚ê§ /

[14:24] <camelia> rakudo 627e17, niecza v24-51-g009f999: OUTPUT¬´ÔΩ¢ÔΩ£‚ê§‚ê§¬ª

[14:24] <FROGGS> rakudo should complain too about null pattern

[14:25] <moritz> it's null pattern detection is known to be very incomplete

[14:25] <FROGGS> yesh

[14:25] <moritz> *its

[14:27] *** bluescreen10 left
[14:27] *** bluescreen10 joined
[14:34] *** prevost joined
[14:36] *** xilo joined
[14:37] *** SamuraiJack joined
[14:43] *** rindolf left
[14:43] *** spider-mario joined
[14:48] *** imIKARi joined
[14:50] *** zby_home_ joined
[14:51] *** rindolf joined
[14:54] *** lizmat joined
[14:54] <FROGGS> t/spec/S32-hash/delete-adverb.rakudo                    (Wstat: 0 Tests: 108 Failed: 1)

[14:54] <FROGGS>   Failed test:  27

[14:54] *** risou is now known as risou_awy

[14:55] <FROGGS> not ok 27 - slice unexisting single key/value   # got: Any   # expected: $("e", Any)

[14:55] *** risou_awy is now known as risou

[14:57] <FROGGS> nr: my %h; say %h<e>:!kv:delete # why should this give ('e', Any) ?

[14:57] <camelia> rakudo 627e17, niecza v24-51-g009f999: OUTPUT¬´(Any)‚ê§¬ª

[14:58] <FROGGS> that is the only error I see, so it is going to be a nice release day o)

[14:58] <FROGGS> :o)

[14:59] <lizmat> FROGGS: that wasn't marked as todo ?

[15:00] <lizmat> it should, because the key did not exist, and you're asking for a key/value even if it doesn't exist (because of the ! in :!kv)

[15:00] <FROGGS> lizmat: looks like the test count is wrong

[15:01] <FROGGS> 6 todo for 4 is_deeply checks

[15:01] <lizmat> let me check

[15:01] * lizmat just arrived in the east of Germany  :-)

[15:01] <FROGGS> where exactly?

[15:01] <lizmat> Querfurt

[15:02] <lizmat> in the Eisleben / Halle area

[15:02] <FROGGS> ahh

[15:04] <lizmat> hmmm.. that file doesn't have a plan, so I can't get the number of tests wrong

[15:04] <FROGGS> lizmat: looks like *I* cant count

[15:04] <FROGGS> there is '6 todo', followed by 2xok, and 4xis_deeply

[15:05] *** woolfy joined
[15:06] <FROGGS> lizmat: the 'my' declaration gets the todo, so the last test doesnt

[15:06] <lizmat> argh, it's # lines, not # of tests...

[15:07] *** kaare_ joined
[15:07] <dalek> roast: 298edbd | (Elizabeth Mattijsen)++ | S32-hash/delete-adverb.t:

[15:07] <dalek> roast: Fix fudging, it's # of lines, *NOT* number of tests, stupid!  (that would be me)

[15:07] <dalek> roast: review: https://github.com/perl6/roast/commit/298edbdab5

[15:12] <lizmat> FROGGS: are we ok now?

[15:13] *** bamboo left
[15:13] *** bamboo joined
[15:13] *** risou is now known as risou_awy

[15:15] <FROGGS> I'll check

[15:16] <lizmat> tadzik: "or the handheld wind power plant, sticking your hand outside the airplane windows and yelling "FASTER! FASTER!""

[15:17] <lizmat> that is actually exactly how the fallback fallback power supply of many planes work:

[15:17] <tadzik> haha

[15:17] <lizmat> when needed, a small propellor comes out of the hull in the back and generates electricity

[15:18] <tadzik> I just had an idea that it could generate electricity from braking, like a car does. That may not work though.

[15:18] <lizmat> that's what a Prius does already

[15:18] <tadzik> yes

[15:18] <tadzik> may be tricky with a plane

[15:18] <lizmat> ah, you mean the plane

[15:19] <lizmat> generally, they're glad if they don't smoke the tires

[15:19] <lizmat> also: the energy flow would be very peaky: a fast brake in a Prius will also not load the battery, as it wouldn't be able to cope with that much energy in a short period

[15:20] *** kivutar left
[15:20] <daxim> http://enwp.org/regenerative_braking

[15:22] <lizmat> what I said :-)

[15:27] *** bamboo left
[15:27] *** bamboo joined
[15:31] <masak> evenin', #perl6

[15:32] <tadzik> it's masak! \o/

[15:32] * masak double-checks, just to be sure

[15:32] <masak> yup.

[15:35] <lizmat> masak+

[15:35] <lizmat> at least one of them, right?

[15:35] <masak> nr: say first * > 5, 1..3

[15:35] *** daxim left
[15:35] <camelia> niecza v24-51-g009f999: OUTPUT¬´Nil‚ê§¬ª

[15:35] <camelia> ..rakudo 627e17: OUTPUT¬´No values matched‚ê§  in method gist at src/gen/CORE.setting:10065‚ê§  in method gist at src/gen/CORE.setting:893‚ê§  in sub say at src/gen/CORE.setting:10963‚ê§  in block  at /tmp/gR86f5feCs:1‚ê§‚ê§¬ª

[15:36] * masak submits TimToady++'s rakudobug from earlier

[15:36] <masak> <TimToady> rakudobug :)

[15:37] <FROGGS> t/spec/S32-hash/delete-adverb.rakudo  TODO passed:   17, 22-23, 25, 28-29, 31, 34-37, 39, 54, 68

[15:37] <FROGGS> Result: PASS

[15:37] <FROGGS> lizmat: ^^

[15:38] <FROGGS> nr: say first Nil

[15:38] <camelia> rakudo 627e17: OUTPUT¬´No values matched‚ê§  in method gist at src/gen/CORE.setting:10065‚ê§  in method gist at src/gen/CORE.setting:893‚ê§  in sub say at src/gen/CORE.setting:10963‚ê§  in block  at /tmp/4oL6SnCZ4n:1‚ê§‚ê§¬ª

[15:38] <camelia> ..niecza v24-51-g009f999: OUTPUT¬´Unhandled exception: No value for parameter '$test' in 'first'‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 0 (first @ 1) ‚ê§  at /tmp/mhKl5YSEUm line 1 (mainline @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ‚ê§  at /home/p6eval/niecz‚Ä¶

[15:39] <TimToady> that's smartmatching with Nil, which is always false

[15:40] *** woolfy left
[15:40] <TimToady> nr: say Nil ~~ Nil

[15:40] <camelia> rakudo 627e17, niecza v24-51-g009f999: OUTPUT¬´True‚ê§¬ª

[15:40] <masak> nr: say grep * > 5, 1..3

[15:40] <camelia> rakudo 627e17, niecza v24-51-g009f999: OUTPUT¬´‚ê§¬ª

[15:40] <TimToady> two bugs for the price of one :)

[15:40] <lizmat> afk until maybe later tonight / tomorrow

[15:40] *** lizmat left
[15:41] <masak> TimToady: I see one: 'Nil ~~ Nil' should be False.

[15:41] <masak> what's the other one?

[15:41] <TimToady> nr is two things

[15:42] <masak> TimToady: waitwait, why was 'nr: say first * > 5, 1..3' => 'No values matched' a bug in Rakudo?

[15:43] <masak> I almost pushed the "Send" button, but now I'm not so sure.

[15:43] <flussence> probably because there's a backtrace in there for no apparent reason

[15:43] <moritz> masak: I think TimToady meant that Nil~~Nil being true is a bug both in Rakudo and Niecza, so two bugs

[15:44] <flussence> oh wait

[15:44] <masak> flussence: it's a Failure, which gets triggered because we try to print the (non-existent) first value.

[15:44] <flussence> never mind, I misread your line as the actual code

[15:44] <masak> moritz: ok. then I see why I was confused; I only report Rakudobugs ;)

[15:44] <masak> (except when I don't)

[15:45] <flussence> nr: say first * > 5, 1..3 => 'No values matched' # just ooc, I wonder what this'll do

[15:45] <camelia> niecza v24-51-g009f999: OUTPUT¬´Unhandled exception: Cannot use value like Pair as a number‚ê§  at <unknown> line 0 (ExitRunloop @ 0) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 293 (Any.Numeric @ 6) ‚ê§  at <unknown> line 0 (ExitRunloop @ 0) ‚ê§  at /tmp/_GYD2ok9bg line 0 (ANON @ 1) ‚ê§  at‚Ä¶

[15:45] <camelia> ..rakudo 627e17: OUTPUT¬´Cannot call 'Real'; none of these signatures match:‚ê§:(Mu:U \v: Mu *%_)‚ê§  in method Real at src/gen/CORE.setting:870‚ê§  in sub infix:<>> at src/gen/CORE.setting:3047‚ê§  in sub infix:<>> at src/gen/CORE.setting:3045‚ê§  in block  at /tmp/MDwtBBP4Kx:1‚ê§‚ê§¬ª

[15:45] <masak> TimToady: timing out; unsubmitting bug.

[15:47] <masak> if anything, that's a Nieczabug.

[15:49] <masak> no, I change my mind again: the behavior is *unspec'd*, and Rakudo and Niecza are just exposing two reasonable implementations of the hole in the spec.

[15:49] <masak> so, which one do we like better? :)

[15:49] <masak> let's fill the hole in the spec with our preferred implementation.

[15:50] <TimToady> which behavior are you referring to?

[15:50] <moritz> niecza's is more user friendly

[15:50] <moritz> nr: say (42 => 5) > 1

[15:50] <camelia> niecza v24-51-g009f999: OUTPUT¬´Unhandled exception: Cannot use value like Pair as a number‚ê§  at <unknown> line 0 (ExitRunloop @ 0) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 293 (Any.Numeric @ 6) ‚ê§  at <unknown> line 0 (ExitRunloop @ 0) ‚ê§  at /tmp/HXsebyRmh7 line 1 (mainline @ 3) ‚ê§‚Ä¶

[15:50] <camelia> ..rakudo 627e17: OUTPUT¬´Cannot call 'Real'; none of these signatures match:‚ê§:(Mu:U \v: Mu *%_)‚ê§  in method Real at src/gen/CORE.setting:870‚ê§  in sub infix:<>> at src/gen/CORE.setting:3047‚ê§  in sub infix:<>> at src/gen/CORE.setting:3045‚ê§  in block  at /tmp/X9yaimO7bk:1‚ê§‚ê§¬ª

[15:53] <masak> TimToady: I'm referring to the rakudobug you reported and I just unsubmat.

[15:53] <masak> nr: say first * > 5, 1..3

[15:53] <camelia> niecza v24-51-g009f999: OUTPUT¬´Nil‚ê§¬ª

[15:53] <camelia> ..rakudo 627e17: OUTPUT¬´No values matched‚ê§  in method gist at src/gen/CORE.setting:10065‚ê§  in method gist at src/gen/CORE.setting:893‚ê§  in sub say at src/gen/CORE.setting:10963‚ê§  in block  at /tmp/YvhvRLAF2u:1‚ê§‚ê§¬ª

[15:53] <masak> that one.

[15:53] <masak> the spec doesn't say what to do in this situation.

[15:53] <masak> nr: say first 5, ()

[15:53] <TimToady> yes it does :)

[15:53] <camelia> niecza v24-51-g009f999: OUTPUT¬´Nil‚ê§¬ª

[15:53] <camelia> ..rakudo 627e17: OUTPUT¬´No values matched‚ê§  in method gist at src/gen/CORE.setting:10065‚ê§  in method gist at src/gen/CORE.setting:893‚ê§  in sub say at src/gen/CORE.setting:10963‚ê§  in block  at /tmp/mAqDm3pDCS:1‚ê§‚ê§¬ª

[15:53] <masak> TimToady: where?

[15:53] <masak> I went to S32/Containers and looked for 'first' there.

[15:54] <masak> maybe I looked in the wrong place?

[15:54] <TimToady> did you git pull?

[15:55] * masak does so now

[15:55] * masak submits rakudobug

[15:56] <TimToady> that's why there was a smiley on it, because I'd just done that

[15:56] <masak> ah.

[15:56] <masak> sorry, I'm too exhausted to get subtle jokes ;)

[15:56] <TimToady> in general, I'm of the opinion that subscript failure should probably just return Nil, not failure

[15:57] <TimToady> (or a WHENCE when it might be an lvalue)

[15:57] <TimToady> but lists can't do that, so Nil

[15:58] <TimToady> (arrays probably return their default value instead of Nil)

[15:58] <moritz> oh wow

[15:58] <moritz> that means that stuff like @a[2..*] won't DWIM anymore

[15:59] <moritz> because it returns a trailing, infinite list of Nil's

[15:59] <TimToady> ranges can still be special

[15:59] *** PacoAir left
[16:00] <TimToady> in the same way we're already distinguishing it such that it's currently returning a failure

[16:00] *** saxx11 joined
[16:00] *** PacoAir joined
[16:01] <TimToady> Nil is just the most benign sort of failure, and I think subscripting is a good place to keep it simple

[16:01] *** bamboo left
[16:02] <TimToady> or going the other way, one can think of a failure as Nil with extra baggage

[16:04] *** leeder-krenon joined
[16:04] *** kaleem left
[16:05] *** AMENDEES_ joined
[16:05] *** saxx11 left
[16:06] *** fhelmberger left
[16:10] <FROGGS> $ perl6 -e 'my ($a, $c); ($a, $, $c) = 1..3'

[16:10] <FROGGS> Non-declarative sigil is missing its name

[16:10] <FROGGS> ------> my ($a, $c); ($a, $‚èè, $c) = 1..3

[16:11] <FROGGS> hmmmm

[16:11] <masak> I'm not sure it makes much sense to use '$' outside of a signature.

[16:11] *** japhb_ left
[16:12] <FROGGS> but it might be still better to treat it as '$' and not '$,' there, right?

[16:12] <TimToady> nr: my ($a, $c); ($a, *, $c) = 1..3;

[16:12] <camelia> rakudo 627e17, niecza v24-51-g009f999:  ( no output )

[16:12] <TimToady> FROGGS: that's why I did the STD patch

[16:13] <TimToady> std: my ($a, $c); ($a, $, $c) = 1..3

[16:13] <camelia> std 0336087: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Non-declarative sigil is missing its name at /tmp/wTvOaI3RgM line 1:‚ê§------> [32mmy ($a, $c); ($a, [33m‚èè[31m$, $c) = 1..3[0m‚ê§Use of uninitialized value $first in string eq at STD.pm line 66016.‚ê§Use of uninitialized value $first in s‚Ä¶

[16:14] <FROGGS> TimToady: ahh, there already is a patch *g*

[16:16] *** REPLeffect left
[16:17] <TimToady> std: my ($a, $c); ($a, $(), $c) = 1..3;  # curious

[16:17] <camelia> std 0336087: OUTPUT¬´ok 00:00 47m‚ê§¬ª

[16:17] <TimToady> npr: my ($a, $c); ($a, $(), $c) = 1..3;  # curious

[16:17] <camelia> niecza v24-51-g009f999: OUTPUT¬´Unhandled exception: Unable to resolve method ast in type Any‚ê§  at /tmp/gp1hCMi0wY line 1 (mainline @ 4) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4332 (module-CORE @ 582) ‚ê§  at /home/p6‚Ä¶

[16:17] <camelia> ..pugs:  ( no output )

[16:17] <camelia> ..rakudo 627e17: OUTPUT¬´No such method 'ast' for invocant of type 'Any'‚ê§  in block  at /tmp/jORWahGc1p:1‚ê§‚ê§¬ª

[16:18] <TimToady> ah, $() is special already

[16:29] *** ajr_ left
[16:29] *** SamuraiJack left
[16:29] *** SamuraiJack joined
[16:36] <dalek> rakudo/nom: 25bfa5f | (Tobias Leich)++ | src/Perl6/Grammar.nqp:

[16:36] <dalek> rakudo/nom: by TimToady++: only carp about P5 $, variable where it is obvious

[16:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/25bfa5fa80

[16:41] *** yx left
[16:42] <dalek> rakudo/nom: d3b36e4 | jonathan++ | README:

[16:42] <dalek> rakudo/nom: Fix year in README.

[16:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d3b36e40f3

[16:42] *** yx joined
[16:43] <timotimo> fix the whole year? wow.

[16:43] <FROGGS> 2013 is safe now man

[16:44] <jnthn> you're welcome

[16:44] <timotimo> jnthn and his fabulous cape save the day^Wyear again

[16:45] <timotimo> (jnthns cape is actually shaped like two +es)

[16:46] *** dmol joined
[16:48] *** denisboyun joined
[16:51] <FROGGS> so like a # ?

[16:52] <TimToady> that's four

[16:52] <masak> so, like a ‚Ä° ?

[16:53] <FROGGS> I'd expected to see a 'qnthn' on his cape

[16:53] <TimToady> ÂçÑ

[16:53] <FROGGS> or maybe the 'j' is on purpose and the jvm port was destiny? 

[16:54] <TimToady> Âçå

[16:56] *** ajr joined
[16:57] *** ajr is now known as Guest45706

[16:57] *** japhb_ joined
[16:58] <masak> TimToady: ‚ò®

[16:58] <timotimo> :D

[16:58] <masak> "cross of jnthainne"

[16:58] *** dakkar left
[17:00] <dalek> Heuristic branch merge: pushed 32 commits to rakudo/jvm-support by jnthn

[17:03] *** SamuraiJack left
[17:08] *** denisboyun left
[17:11] <dalek> rakudo/jvm-support: 4e74ee5 | jonathan++ | tools/build/ (2 files):

[17:11] <dalek> rakudo/jvm-support: Tweak some memory flags.

[17:11] <dalek> rakudo/jvm-support: review: https://github.com/rakudo/rakudo/commit/4e74ee5905

[17:12] <timotimo> "tweak JVM to use less RAM"

[17:13] <jnthn> Well, "tweak it to use enough RAM to get through the setting" too :)

[17:13] <jnthn> (Its default limits vary by system.)

[17:14] *** Guest45706 is now known as ajr_

[17:14] <timotimo> hehe

[17:14] <timotimo> is that the "code object too large" problem?

[17:15] <jnthn> timotimo: that was in NQP and I did the patch last night

[17:15] <jnthn> I will merge stuff after the Rakudo release today though

[17:15] <timotimo> oh, ok

[17:22] <Util> jnthn: who is cutting the Rakudo release today?

[17:22] <jnthn> 2013-05-23   Rakudo #64 "Austin"             FROGGS

[17:23] *** rindolf left
[17:23] *** rindolf joined
[17:24] <jnthn> Looks like masak gets to relesae the first Rakudo with some amount of JVM support :)

[17:25] <masak> yesssss! \o/

[17:25] <jnthn> (Amount to be determined ;))

[17:26] <Util> masak: Be advised that Parrot 5.4.0, which I released 2 days ago, had a problem that causes it to fail the .t file for Parrot::Distribution. It is a harmless failure.

[17:27] *** denisboyun joined
[17:28] <Util> The problem is my fault, and I can release 5.4.1 if the `make test` failure is screwing up your release process.

[17:28] <Util> The problem is already fixed in HEAD.

[17:31] <jnthn> Nearly home...time to detrain...

[17:31] <jnthn> bbl

[17:32] *** denisboyun left
[17:32] <Util> FROGGS: ^^^

[17:34] <timotimo> Util: would you be receptible to worries about the readline implementation?

[17:35] <timotimo> if i told you readline-ing from a socket will sometimes give me a not-complete line and leave me with no way to figure out what is a full line and what is bugged, would you consider that something that should be fixed?

[17:38] *** REPLeffect joined
[17:45] *** kaleem joined
[17:45] <Util> timotimo: yes. Is there an open ticket on this issue?

[17:46] <timotimo> i didn't actually make one yet :(

[17:46] <timotimo> i think i'll have to make a reproducible, small, self-contained test case

[17:50] *** rindolf left
[17:51] *** rindolf joined
[17:53] *** kaleem left
[17:53] *** AMENDEES_ left
[18:08] *** nyuszika7h joined
[18:14] <dalek> roast: ab1d3b7 | dagurval++ | S32-io/spurt.t:

[18:14] <dalek> roast: unfudge rakudo, fudge niecza

[18:14] <dalek> roast: review: https://github.com/perl6/roast/commit/ab1d3b76f4

[18:15] * colomon doesn't like the sounds of that

[18:18] <timotimo> dagurval: it doesn't seem to have a plan now, is that intended?

[18:19] <timotimo> oh, maybe it has a "done" at the end

[18:19] <timotimo> indeed it does

[18:19] <Util> timotimo: Looks like not_gerd was working on the readline issue: http://irclog.perlgeek.de/parrotsketch/2013-03-12

[18:19] <dagurval> timotimo: it was kind of difficult with the fudging :).

[18:20] *** SamuraiJack joined
[18:20] <timotimo> it doesn't sound like the issue i was getting, though

[18:21] <FROGGS> Ulti: whats up?

[18:24] <FROGGS> Ulti: I won't upgrade parrot for today's release

[18:25] <masak> FROGGS: Util, not Ulti.

[18:25] <FROGGS> ohh

[18:26] * masak is such a big help :)

[18:26] <FROGGS> Util^^ sorry for that

[18:26] <FROGGS> masak++ # indeed :o)

[18:26] *** sqirrel left
[18:27] <Util> FROGGS: No problem. You are not the first to switch us up.

[18:27] <FROGGS> yeah, I should stop reading just the first and the last letter :o)

[18:28] <FROGGS> err, well, you know what I mean *g*

[18:29] <dagurval> r: "/tmp/asdf".IO.spurt("hello").WHAT.say

[18:29] <camelia> rakudo d3b36e: OUTPUT¬´(Bool)‚ê§¬ª

[18:29] <dagurval> I wonder what spurt should return, perhaps self?

[18:30] <masak> FROGGS: I bet you've seen http://dan.hersam.com/2005/01/27/reading-jumbled-letters/

[18:30] <dalek> rakudo/nom: 90daa18 | (Tobias Leich)++ | src/Perl6/Grammar.nqp:

[18:30] <dalek> rakudo/nom: by TimToady++: allow $% and $@ itemizers to align with STD

[18:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/90daa18887

[18:30] <FROGGS> masak: not this one, but a similar article

[18:32] <masak> yeah.

[18:34] *** bluescreen10 left
[18:35] <dalek> specs: c2ac9b8 | dagurval++ | S32-setting-library/IO.pod:

[18:35] <dalek> specs: Updated IO::Handle.slurp and added IO::Handle.spurt

[18:35] <dalek> specs: review: https://github.com/perl6/specs/commit/c2ac9b87be

[18:38] *** denisboyun_ joined
[18:39] *** alester joined
[18:43] *** denisboyun_ left
[18:52] *** berekuk joined
[18:58] *** Bzek joined
[19:01] <dagurval> I think this is a bug:

[19:01] <dagurval> r: "/tmp/asdf".IO.open(:w).print("hello world"); say slurp("/tmp/asdf")

[19:01] <camelia> rakudo d3b36e: OUTPUT¬´‚ê§¬ª

[19:01] <dagurval> r: my $a = "/tmp/asdf".IO; $a.open(:w); $a.print("hello world"); $a.close; say slurp("/tmp/asdf")

[19:01] <camelia> rakudo d3b36e: OUTPUT¬´hello world‚ê§¬ª

[19:01] <dagurval> Has top be closed explicitly. Does it have to do with GC?

[19:02] *** massimino joined
[19:02] <PerlJam> buffering I'd wager.

[19:02] <moritz> yes, and with the lack of destroy methods

[19:03] <dagurval> ok, so it's something that will be fixed when destroy methods arrive?

[19:03] <PerlJam> or, autoflush on the filehandle.

[19:04] <moritz> dagurval: yes

[19:04] * masak is not so sure

[19:05] <masak> the thing with destroy methods is that they are not timely, no?

[19:05] <masak> can you even guarantee that they run before the program exits normally?

[19:05] <masak> I guess you can, though Java seems to have had issues in that area, for some reason.

[19:06] * masak mislikes DESTROY methods and would much prefer to see a total transition to the Dispose pattern

[19:06] <dagurval> r: "/tmp/asdf".IO.open(:w).print("hello world");

[19:06] <camelia> rakudo d3b36e:  ( no output )

[19:06] <dagurval> this seems to never actually be written

[19:06] <dagurval> r: say slurp("/tmp/asdf")

[19:06] <camelia> rakudo d3b36e: OUTPUT¬´‚ê§¬ª

[19:08] <PerlJam> r: my $fh = "/tmp/asdf".IO.open(:w); $fh.print("hello world"); $fh.flush();  say slurp("/tmp/asdf");

[19:08] <dalek> nqp: 7305cf5 | (Tobias Leich)++ | docs/release_guide.pod:

[19:08] <dalek> nqp: fixed typo

[19:08] <dalek> nqp: review: https://github.com/perl6/nqp/commit/7305cf5e15

[19:08] <camelia> rakudo d3b36e: OUTPUT¬´hello world‚ê§¬ª

[19:09] <grondilu> rn: say 0/0

[19:09] <camelia> rakudo d3b36e: OUTPUT¬´Divide by zero‚ê§  in sub infix:<div> at src/gen/CORE.setting:3347‚ê§  in sub infix:<div> at src/gen/CORE.setting:2998‚ê§  in sub DIVIDE_NUMBERS at src/gen/CORE.setting:7992‚ê§  in sub infix:</> at src/gen/CORE.setting:8124‚ê§  in sub infix:</> at src/gen/CORE.setting:2993‚ê§ ‚Ä¶

[19:09] <camelia> ..niecza v24-51-g009f999: OUTPUT¬´0‚ê§¬ª

[19:09] <PerlJam> dagurval: you can't trust that camelia won't clean up after itself between invocations.

[19:09] * grondilu was expecting NaN

[19:10] <dagurval> PerlJam: it doesn't clean the files I create with IO

[19:10] <dagurval> r: "/tmp/asdf".IO.open(:w).spurt("hello world");

[19:10] <camelia> rakudo d3b36e:  ( no output )

[19:10] <dagurval> r: say slurp("/tmp/asdf")

[19:10] <camelia> rakudo d3b36e: OUTPUT¬´hello world‚ê§¬ª

[19:10] <masak> r: say 0.0 / 0.0

[19:10] <camelia> rakudo d3b36e: OUTPUT¬´Divide by zero‚ê§  in sub infix:<div> at src/gen/CORE.setting:3347‚ê§  in sub infix:<div> at src/gen/CORE.setting:2998‚ê§  in sub DIVIDE_NUMBERS at src/gen/CORE.setting:7992‚ê§  in sub infix:</> at src/gen/CORE.setting:8103‚ê§  in sub infix:</> at src/gen/CORE.setting:2993‚ê§ ‚Ä¶

[19:11] <dalek> nqp: 6bbc8bd | (Tobias Leich)++ | VERSION:

[19:11] <dalek> nqp: bump VERSION to 2013.05

[19:11] <dalek> nqp: review: https://github.com/perl6/nqp/commit/6bbc8bd929

[19:11] <jnthn> r: say 0e0 / 0e0

[19:11] <camelia> rakudo d3b36e: OUTPUT¬´Divide by zero‚ê§  in sub infix:</> at src/gen/CORE.setting:3801‚ê§  in sub infix:</> at src/gen/CORE.setting:2993‚ê§  in block  at /tmp/jF1SKLvONe:1‚ê§‚ê§¬ª

[19:13] <PerlJam> r: say $*PID;

[19:13] <camelia> rakudo d3b36e: OUTPUT¬´24667‚ê§¬ª

[19:13] <PerlJam> r: say $*PID;

[19:13] <camelia> rakudo d3b36e: OUTPUT¬´24673‚ê§¬ª

[19:19] <massimino> Good evening. I've a problem installing modules with panda Can someone help me please? The problem is https://gist.github.com/anonymous/5638586

[19:19] <masak> good evening massimino.

[19:20] <massimino> Hi masak

[19:20] <masak> everyone: is this panda problem known?

[19:20] <masak> can someone reproduce it on a clean Star build?

[19:21] <masak> is 2013.02 known-bad? I think not.

[19:21] <masak> or is it known-bad for Opensuse?

[19:21] <sorear> o/

[19:21] <massimino> I downloaded rakudo star yesterday. It's 2013.2 and panda one hour ago

[19:21] <jnthn> Doesn't look like a familiar error to me.

[19:22] <jnthn> Does R* not come with a Panda?

[19:22] <jnthn> (May just be some kinda version skew...)

[19:22] <masak> massimino: how did you run panda? did you download it separately from Rakudo Star?

[19:23] <massimino> yes masak

[19:23] <massimino> I downloaded rakudo star and i've change my path. Then I downloaded panda and changed my path again

[19:24] <masak> :/

[19:24] <massimino> after run bootstrap.pl

[19:24] <masak> that... may not work.

[19:24] <masak> Rakudo Star already has a panda. use that.

[19:24] <masak> er, I mean "I suggest you use that" :)

[19:24] <massimino> Ok I try

[19:25] <masak> shouldn't a full 'make' of Rakudo Star already invoke panda, even?

[19:25] <masak> or is that a diff'rent 'make' target?

[19:25] <jnthn> Not sure...I recall that something was done a while back to make the Panda with star recognize the already-supplied module...

[19:29] <tadzik> massimino: does 'panda update' change anything?

[19:29] <massimino> The error seems to be the panda command in rakudo.

[19:30] <massimino> because when I launch

[19:30] <massimino> panda on diretory I've downloaded from git-hub I see the list of modules

[19:31] <massimino> but there is another error: https://gist.github.com/anonymous/5638777

[19:33] <massimino> I'm trying panda update

[19:35] <massimino> Error again: no such method 'update' for invocant of type 'Any'

[19:35] <tadzik> oh shit

[19:35] <tadzik> how new is that panda?

[19:35] <tadzik> oh, I see it

[19:35] <tadzik> this has been fixed some time ago

[19:35] <tadzik> like, 5 days ;)

[19:36] <tadzik> sorry for that

[19:36] *** fgomez joined
[19:36] <massimino> I've downloaded rakudo yesterday. But panda 1:30 ago

[19:36] <tadzik> hmm

[19:36] <tadzik> that shouldn't be happening, since...

[19:37] <tadzik> https://github.com/tadzik/panda/commit/02765c9329 since this

[19:37] <massimino> I don't know but the first error is when I run panda that comes with rakudo.

[19:38] <tadzik> massimino: I did some serious refactoring with panda some time ago, I may have broken stuff :( sorry for that

[19:39] <FROGGS> maybe the old panda that is flying around should be removed from disk?

[19:39] <massimino> Yes but when I run panda inside that I've downloaded from git-hub I can see the list of modules  but I've another error: https://gist.github.com/anonymous/5638777

[19:39] <massimino> I don't know what directory .work is

[19:42] <tadzik> it's the same one

[19:43] <TimToady> http://rosettacode.org/wiki/Subset_sum_problem#Perl_6

[19:45] <TimToady> btw, that's a pretty fast combinations routine in there, compared to the recursive version

[19:47] <tadzik> massimino: did you try the very fresh panda? How do you install it?

[19:47] <tadzik> I suck at maintaining this

[19:49] <massimino> massimino: I've three executables of panda: one in rakudo-star-2013.02/install/bin, another in rakudo-star-2013.02/install/lib/parrot/4.10.0/languages/perl6/site/bin and another in ~/panda (I've downloaded it today)

[19:50] <massimino> I run certainly panda in the first directory

[19:50] <tadzik> did you boostrap it?

[19:50] <tadzik> like, 'perl6 boostrap.pl'

[19:50] <FROGGS> massimino: what does 'which panda' tell you?

[19:50] <massimino> yes

[19:50] <massimino> I've tried a thing.

[19:51] <massimino> inside rakudo-star-2013.02/install/lib/parrot/4.10.0/languages/perl6/site/bin i've created the directory work

[19:51] <massimino> then I launched ./panda list

[19:52] <massimino> All was ok

[19:52] <tadzik> aww

[19:53] <tadzik> massimino: is this the star panda, that requires the .work directory to work?

[19:53] <tadzik> That shouldn't have ever got in any release

[19:53] *** kaare_ left
[19:53] <massimino> In rakudo star there are two panda commands

[19:54] *** konundra joined
[19:54] <tadzik> really?

[19:54] <tadzik> at least htat's not my faul...

[19:54] <massimino> the second I think was created when I did perl6 bootstrap.pl

[19:54] <tadzik> ah

[19:54] <tadzik> okay, again

[19:55] <tadzik> you installed star, and the bundled panda didn't work ootb?

[19:55] <massimino> because the last message was that I had to modify my path

[19:55] <massimino> I don't know... after installed rakudo I downloaded panda and I did perl6 bootstrap.pl

[19:56] <tadzik> ah. That was not necessary

[19:56] <tadzik> now you have two pandas

[19:56] <tadzik> panda is included in star

[19:57] <tadzik> you installed another, and they interact in the bad way

[19:57] <tadzik> the git version is a bit untested, there's a reason it's not released yet

[19:57] <tadzik> please try removing rakudo-star-2013.02/install/lib/parrot/4.10.0/languages/perl6/site altogether

[19:57] <tadzik> then you should still have the star panda

[19:58] <massimino> Ok tadzik, I try

[19:58] <tadzik> unless star installs to site. I hope not

[19:59] <massimino> I will try to cancel my rakudo star installation and reinstall it to have a clean installation

[19:59] *** dmol left
[20:00] <tadzik> I'm sorry panda gave you trouble

[20:00] <sorear> .o( I will cancel my rakudo star subscription!!! )

[20:01] <massimino> Don't worry. 

[20:03] <tadzik> it's a bit of an unruly child

[20:03] <tadzik> rebellious age and all that

[20:03] <arnsholt> tadzik: We'll have to meet up and discuss our unruly children in Austin

[20:03] <arnsholt> NativeCall is a bit of a handful as well =)

[20:03] <sorear> terrible twos?

[20:04] <arnsholt> Yeah, something like that

[20:04] <sorear> arnsholt: you're making it to austin?

[20:04] <sorear> in spite of the INS?

[20:04] <arnsholt> Hehe

[20:04] <arnsholt> Norway is part of the visa waiver program, so it wasn't as hard as it was for tadzik 

[20:04] <jnthn> .oO( LET ME INS! )

[20:06] <tadzik> arnsholt: good :0

[20:07] <tadzik> maybe panda should warn if it's already installed?

[20:08] <sorear> ETOOMANYPANDAS

[20:08] <tadzik> eggzactly

[20:08] <sorear> PANDA CARRYING CAPACITY EXCEEDED

[20:09] *** nebuchadnezzar joined
[20:25] *** zby_home_ left
[20:29] <masak> PANDA TO ≈ªUBR RATIO OUT OF BOUNDS

[20:29] *** eternaleye joined
[20:31] <jnthn> .oO( Just teething problems... )

[20:33] <sorear> never heard of that before

[20:37] *** eternaleye left
[20:37] *** bbkr joined
[20:38] * masak almost deadpans an explanation in sorear's direction about teeth

[20:38] *** fhelmberger joined
[20:39] <masak> sorear: by the way, today's weird mathematical object: https://en.wikipedia.org/wiki/Empty_semigroup

[20:40] <masak> or not so much "weird" as "amusingly useless".

[20:41] *** eternaleye joined
[20:42] <sorear> masak: was actually referring to /Bison bonasus/

[20:43] <masak> aye.

[20:43] <masak> sorear: I've seen them. they are very docile.

[20:43] <masak> almost went extinct.

[20:43] <masak> very hard to rebuild from scratch after they do.

[20:44] <massimino> tadzik: I've reinstalled rakudo 2013.2 and now panda works fine thank you for everything

[20:44] <FROGGS> O.o

[20:44] <jnthn> Gee, I hope I didn't accidentally eat one in Belarus...

[20:44] <jnthn> (I was on the other side of the border at the same national park, and ate some wild meat that I never worked out what actually was :))

[20:45] <masak> jnthn: nah. probably just dodo. :P

[20:45] <jnthn> :P

[20:45] <jnthn> oh bother. Seems that when I did the git merge nom on the train into jvm-support, I busted it.

[20:46] <FROGGS> jnthn: np, I'll add that as a quote to the changelog *g*

[20:48] <jnthn> FROGGS: It's in a branch :P

[20:48] <jnthn> I've got until the next release to fix it. :P

[20:49] <FROGGS> ha, I'll do two releases!!

[20:49] <masak> nooo

[20:50] *** Bzek left
[20:51] *** fhelmberger left
[20:54] *** eternaleye left
[20:54] *** eternaleye joined
[21:00] <dalek> rakudo/nom: 781a32b | (Tobias Leich)++ | docs/ (3 files):

[21:00] <dalek> rakudo/nom: prepared current release

[21:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/781a32bdc3

[21:01] <timotimo> ++ underlaying nqp layer support parrot and JVM as backend <- should be "underlying"

[21:02] <timotimo> would like to see the line of contributors hard wrapped

[21:03] <jnthn> Dunno whether to mention that in Rakudo release; people may not read it properly and think this release has the some Rakudo on JVM support... :)

[21:06] *** rindolf left
[21:07] <FROGGS> timotimo: will fix both, thanks for reporting

[21:09] *** spider-mario left
[21:15] *** bbkr left
[21:18] <timotimo> oh, indeed

[21:23] <FROGGS> jnthn: but it is somehow important to mention me thinks

[21:27] *** risou_awy is now known as risou

[21:28] <labster> JVM support is nigh!

[21:29] * timotimo holds up signs

[21:31] <dalek> rakudo/jvm-support: 2778b30 | jnthn++ | src/vm/jvm/runtime/org/perl6/rakudo/ (2 files):

[21:31] <dalek> rakudo/jvm-support: Make (|c) signatures work in binder.

[21:31] <dalek> rakudo/jvm-support: 

[21:31] <dalek> rakudo/jvm-support: Means .^foo now works, which somehow we'd come to hit during setting

[21:31] <dalek> rakudo/jvm-support: loading. Thus, basic stuff works again.

[21:31] <dalek> rakudo/jvm-support: review: https://github.com/rakudo/rakudo/commit/2778b30470

[21:31] <dalek> nqp/rak-jvm-support: 8c43ba4 | jnthn++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/ (3 files):

[21:31] <dalek> nqp/rak-jvm-support: Some error reporting fixes.

[21:31] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/8c43ba4c32

[21:32] <jnthn> FROGGS: Yeah, maybe just make it super clear ("in preparation for JVM support in a future Rakudo release" or so maybe...)

[21:32] <FROGGS> will do

[21:34] <dalek> rakudo/nom: 80c00e8 | (Tobias Leich)++ | docs/ChangeLog:

[21:34] <dalek> rakudo/nom: make clear what JVM support is about

[21:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/80c00e8dea

[21:34] <dalek> rakudo/nom: b79a19c | (Tobias Leich)++ | docs/announce/2013.05.md:

[21:34] <dalek> rakudo/nom: added contributors

[21:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b79a19c35a

[21:41] *** berekuk left
[21:43] *** berekuk joined
[21:43] *** bruges joined
[21:44] <dalek> rakudo/nom: 264859c | (Tobias Leich)++ | tools/build/NQP_REVISION:

[21:44] <dalek> rakudo/nom: [release] bump NQP revision

[21:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/264859cf02

[21:44] <dalek> rakudo/nom: f7bfee6 | (Tobias Leich)++ | VERSION:

[21:44] <dalek> rakudo/nom: [release] bump VERSION

[21:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f7bfee6cd6

[21:46] *** risou is now known as risou_awy

[21:46] *** lizmat joined
[21:47] *** colomon_ joined
[21:49] *** colomon left
[21:49] *** colomon_ is now known as colomon

[21:52] <colomon> psst -- http://71.10.146.50:3001/report -- very primitive and temporary preview of module smoke test reports

[21:53] *** woolfy joined
[21:53] <FROGGS> colomon: the columns are the last n days?

[21:54] <colomon> FROGGS: yes

[21:54] <colomon> with the latest on the right

[21:54] <colomon> obviously very crude at the moment

[21:55] <FROGGS> but you already see what is going on

[21:55] <FROGGS> colomon++

[21:56] <jnthn> colomon++

[21:56] <colomon> I'm planning on sorting it so the most recently changed modules go on top

[21:56] <lizmat> colomon++

[21:56] <colomon> and making the module name links go to a useful page.

[21:56] <colomon> my first ever Dancer app

[21:56] <FROGGS> :o)

[21:58] <labster> nice colomon++

[21:58] <sorear> colomon++

[22:01] *** SamuraiJack left
[22:04] *** lustlife left
[22:05] <colomon> okay, turned off outside access to it again.  :)

[22:05] <FROGGS> meh

[22:05] *** xilo left
[22:06] <grondilu> what's "constant folding"?

[22:06] * grondilu has rred this expression several times lately.

[22:07] <Tene> grondilu: an optimizer pass to evaluate expressions only involving constants at compile time

[22:07] <Tene> for example, replacing 5+3 with 8

[22:08] <grondilu> ok.  thanks

[22:08] <dalek> nqp/rak-jvm-support: c8bbb9a | jnthn++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/IndyBootstrap.java:

[22:08] <dalek> nqp/rak-jvm-support: Missing decont in indcall.

[22:08] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/c8bbb9a799

[22:08] <dalek> nqp/rak-jvm-support: 086cb6f | jnthn++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/Ops.java:

[22:08] <dalek> nqp/rak-jvm-support: Implement some missing exception related ops.

[22:08] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/086cb6fed6

[22:18] *** kurahaupo joined
[22:19] <lizmat> goodnight #perl6

[22:22] <FROGGS> gnight

[22:23] *** snearch joined
[22:27] <jnthn> Would love to bughunt some more, but I'm making too many silly mistakes to come out with more fixed that broke...

[22:27] <jnthn> 'night o/

[22:27] <timotimo> http://tellaparteng.tumblr.com/post/51142273614/presenting-commandr-an-easy-to-use-and-automatic-cli - cool, kind of like MAIN in perl6

[22:27] <masak> 'night, #perl6

[22:27] * grondilu is not sure about the semantics of List.combinations

[22:28] <grondilu> "Returns all combinations of the list taken N at a time (specified by the $of parameter)."

[22:29] <sorear> so [1,2,3,4,5]; 2  -->  [[1,2], [1,3], [1,4], ... [4,5]]

[22:30] <sorear> https://en.wikipedia.org/wiki/Combinations

[22:31] <grondilu> yeah that's how I understood it first.  But "taken N at a time" is a terrible way to phrase it imho.

[22:32] * grondilu would have written: "Returns all combinations of N elements of the list"

[22:32] <geekosaur> that's combinatorics lingo, I believe

[22:32] *** massimino left
[22:33] *** xilo joined
[22:33] <sorear> yeah, fairly standard wording in the english-language literature

[22:34] <grondilu> oh indeed the expression "at a time" is in the wikipedia article.  I had no clue.

[22:34] <grondilu> it's all good then.  My bad.

[22:37] <dalek> rakudo/nom: 72eff27 | (Tobias Leich)++ | docs/announce/2013.05.md:

[22:37] <dalek> rakudo/nom: forgot to update short changelog -.-

[22:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/72eff27b5b

[22:38] *** ajr_ left
[22:40] *** berekuk left
[22:42] <FROGGS> (pmichaud, jnthn, masak, tadzik, moritz, PerlJam: can someone please upload this to rakudo.org? froggs.de/rakudo-2013.05.tar.gz froggs.de/nqp-2013.05.tar.gz

[22:42] *** berekuk joined
[22:53] *** woolfy left
[22:57] *** REPLeffect left
[23:00] <FROGGS> gnight all

[23:04] *** jerome__ left
[23:11] <diakopter> yapc austin registrations: http://i.imgur.com/0D2q3nr.png

[23:17] *** jerome__ joined
[23:17] *** REPLeffect joined
[23:31] *** raiph left
[23:47] *** jerome__ left
[23:53] *** adu joined
[23:56] *** japhb_ left
