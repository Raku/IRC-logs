[00:00] <FROGGS> ó.ò

[00:00] <FROGGS> I'd say make a gist but github is down somehow

[00:01] <FROGGS> hmmm, the website is fine...

[00:02] <FROGGS> timotimo: maybe you have to use nqp::getattr ?

[00:02] <lue> FROGGS: why do you say github is down? (fwiw I got a "connection reset by peer" error from git earlier today, but it worked fine the second time)

[00:02] <timotimo> i don't know what i'm doing

[00:02] <timotimo> i'm just trying to make my constructor work ;_;

[00:03] <FROGGS> lue: I cant push

[00:03] <FROGGS> timotimo: can you paste a diff

[00:03] <FROGGS> ?

[00:03] <timotimo> http://sprunge.us/hTCb - here's the/a code

[00:03] <FROGGS> git pull

[00:03] <FROGGS> Connection closed by 207.97.227.239

[00:03] <FROGGS> fatal: The remote end hung up unexpectedly

[00:06] <FROGGS> timotimo: maybe it is because of the sigilless objects?

[00:06] <timotimo> what exactly?

[00:07] <timotimo> https://gist.github.com/timo/5226114#file-adt-pm6-L107 - this was the original code which worked no problem

[00:07] <FROGGS> timotimo: forget what I said... it is the same with $Tree, $Branch, ...

[00:07] <timotimo> the only change was how the new-foo methods are built

[00:13] <timotimo> if you remove the "new-$name.lc()" between method and ($signature), you'll also get rid of the "useless has-foo something declaration something mumble" message

[00:13] *** spider-mario left
[00:14] <FROGGS> timotimo: I believe I'm too tired to be of any help

[00:14] <timotimo> don't worry. you tried :)

[00:15] <dalek> v5: c261fd3 | (Tobias Leich)++ | / (2 files):

[00:15] <dalek> v5: removed Perl6::P5World

[00:15] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/c261fd36d0

[00:15] <dalek> v5: 3eefed5 | (Tobias Leich)++ | lib/Perl6/P5 (2 files):

[00:15] <dalek> v5: added p5disect_longname to work around a missing token

[00:15] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/3eefed5a96

[00:15] <FROGGS> and I can push... so, gnight and goo luck

[00:15] <timotimo> i guess i'll revert the change. well i don't really have to, i can just get it back from the gist

[00:15] <timotimo> good night :)

[00:15] <FROGGS> ya, a bit

[00:15] <timotimo> although i think i want to keep this for later when i figure out how to make it work

[01:44] *** Liz joined
[01:45] *** Liz is now known as Guest1410

[01:46] *** Chillance left
[01:51] *** Guest1410 is now known as lizmat

[01:57] *** fgomez joined
[02:08] <dalek> ecosystem: 749b9da | timo++ | META.list:

[02:08] <dalek> ecosystem: add the amazing ADT module.

[02:08] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/749b9daceb

[02:09] <colomon> woah, what

[02:09] <diakopter> timotimo++

[02:10] <timotimo> ☺

[02:10] <diakopter> who's Tobias

[02:10] <timotimo> i enjoy praise, so i do funny stuff

[02:10] <timotimo> FROGGS is tobias

[02:10] <timotimo> funny stuff like work

[02:10] <diakopter> FROGGS: disect is spelled with two s

[02:12] <timotimo> colomon: hopefully i didn't put your hopes up too far, it doesn't do very good compile-time stuffs yet

[02:12] <sorear> timo is not FROGGS, FROGGS is FROGGS on github

[02:12] <sorear> istr timo is supernovus

[02:13] <diakopter> O_O

[02:13] <sorear> oh, you were replying to something earlier

[02:13] *** xinming joined
[02:15] <timotimo> does supernovus just mean "very new"?

[02:17] <diakopter> male of supernova?

[02:17] <timotimo> so i'm exploding?

[02:18] <sorear> supernovus is somebody's handle

[02:19] <timotimo> oh

[02:19] <timotimo> no, that timo is me

[02:23] <timotimo> "Timothy" supernovus is supernovus on github

[02:38] <sorear> totten or such

[02:38] <timotimo> indeed

[02:38] <timotimo> comments about the ADT module?

[02:44] *** FROGGS_ joined
[02:48] *** FROGGS left
[02:48] <dalek> perl6-roast-data: 91961dd | coke++ | / (3 files):

[02:48] <dalek> perl6-roast-data: today (automated commit)

[02:48] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/91961dd304

[02:48] *** dwoldrich_ joined
[02:50] *** dwoldrich_ is now known as dwoldrich

[03:01] *** Targen joined
[03:08] *** orafu joined
[03:10] *** Targen left
[03:11] *** Targen joined
[03:39] *** preflex_ joined
[03:40] *** preflex_ is now known as preflex

[03:43] *** rindolf joined
[03:46] *** renormalist left
[03:53] *** renormalist joined
[04:31] *** thou left
[04:54] *** dwoldrich left
[04:58] *** thou joined
[05:03] *** colomon left
[05:08] *** quester joined
[05:17] <quester> rnp: printf "%d"

[05:18] <p6eval> pugs: OUTPUT«(timeout)»

[05:18] <p6eval> ..rakudo 221a95: OUTPUT«Null PMC access in get_integer()␤  in sub sprintf at src/gen/CORE.setting:2471␤  in sub printf at src/gen/CORE.setting:2476␤  in block  at /tmp/HOqXzOn375:1␤␤»

[05:18] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«Unhandled exception: Not enough arguments for this format string␤  at /home/p6eval/niecza/lib/CORE.setting line 1370 (sprintf @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1371 (printf @ 5) ␤  at /tmp/csUgPBAymx line 1 (mainline @ 3) ␤  at /home/p6e…

[05:20] *** toddr_ joined
[05:21] <quester> rnp: printf "%s"  # rakudo bug #62316, closed in Aug 2009

[05:21] <p6eval> pugs: OUTPUT«(timeout)»

[05:21] <p6eval> ..rakudo 221a95: OUTPUT«Null PMC access in get_string()␤  in sub sprintf at src/gen/CORE.setting:2471␤  in sub printf at src/gen/CORE.setting:2476␤  in block  at /tmp/Bu7zOuzh1Y:1␤␤»

[05:21] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«Unhandled exception: Not enough arguments for this format string␤  at /home/p6eval/niecza/lib/CORE.setting line 1370 (sprintf @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1371 (printf @ 5) ␤  at /tmp/3oBC6P0NjI line 1 (mainline @ 3) ␤  at /home/p6e…

[05:46] * quester submitted it as rakudo bug #117317

[06:01] *** SamuraiJack joined
[06:20] <moritz> if a bug report already existed, why not reopen that one?

[06:24] *** dwoldrich joined
[06:26] <quester> moritz:  The old bug report, #62316, had been closed for two a half years.  I would suspect the bug itself is likely new, even if it does have the same symptoms.

[06:27] <moritz> quester: if you don't know it, it's pure speculation. And if you don't know what's going on, you have to go after the symptoms, not the causes

[06:27] <moritz> anyway, I can merge the two

[06:28] <quester> Ah, I see your point...  Okay, thank you.

[06:49] *** am0c joined
[07:06] *** quester left
[07:27] *** kivutar joined
[07:43] *** drbean left
[07:44] *** drbean joined
[08:00] *** cognominal left
[08:04] *** cognominal joined
[08:08] *** toddr_ left
[08:23] <FROGGS_> diakopter: thanks for pointing out the typo, my mind was already in bed at that time

[08:23] *** FROGGS_ is now known as FROGGS

[08:25] <diakopter> oh; was it just typo in the commit message? I didn't check

[08:26] *** dwoldrich left
[08:27] <FROGGS> diakopter: no, even within the rakudo repo it is spelled that way: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/World.pm#L1906

[08:27] <FROGGS> I just copy-pasted that

[08:27] <diakopter> ah

[08:39] <moritz> ah yes, I've stumbled over that once or twice before

[08:40] *** lizmat left
[08:41] <FROGGS> moritz: should I fix that?

[08:41] *** Liz joined
[08:42] *** Liz is now known as Guest91638

[08:43] *** Guest91638 is now known as lizmat

[08:43] <moritz> FROGGS: yes

[08:45] *** labster left
[08:54] <dalek> v5: 4ae984e | (Tobias Leich)++ | / (5 files):

[08:54] <dalek> v5: revive Perl6::P5World

[08:54] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/4ae984ebbd

[08:54] <dalek> v5: 85bbba6 | (Tobias Leich)++ | t/v5/ (37 files):

[08:54] <dalek> v5: pull in Perlito test files

[08:54] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/85bbba61d0

[08:55] <FROGGS> will push to nom after spectest

[09:07] *** domidumont joined
[09:08] <dalek> rakudo/nom: b972ca3 | (Tobias Leich)++ | src/Perl6/ (3 files):

[09:08] <dalek> rakudo/nom: fixed spello as diakopter++ pointed out

[09:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b972ca3987

[09:09] <FROGGS> sad there is no RT ticket for that :o)

[09:15] <dalek> Perlito: 0ff7ea2 | (Flavio S. Glock)++ | src (2 files):

[09:15] <dalek> Perlito: Perlito backend - stub code for Perlito6::X64::Assembler, Perlito5::X64::Assembler

[09:15] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/0ff7ea257e

[09:16] *** spider-mario joined
[09:21] <dalek> v5: 5bfeb4a | (Tobias Leich)++ | / (2 files):

[09:21] <dalek> v5: fix infix:sym<,>

[09:21] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/5bfeb4a345

[09:30] <FROGGS> std: use v5; sub a ($x, $y) { 42 }

[09:30] <p6eval> std 86b102f: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/feB3Cf_b8v line 1:␤------> [32muse v5; sub a ($x[33m⏏[31m, $y) { 42 }[0m␤  $y is declared but not used at /tmp/feB3Cf_b8v line 1:␤------> [32muse v5; sub a ($x, $y[33m⏏[31m) { 42 }[0m␤ok 00:01 52m␤…

[09:30] <FROGGS> std: use v5; sub a ($x, $y) { $x + $y }

[09:30] <p6eval> std 86b102f: OUTPUT«ok 00:01 53m␤»

[09:31] <FROGGS> std: use v5; sub a ($x, $y) { $x + $y }; print a(2, 4)

[09:31] <p6eval> std 86b102f: OUTPUT«ok 00:01 53m␤»

[09:31] <FROGGS> I expected: Malformed prototype for main::a: $x,$y at -e line 1.

[09:32] *** domidumont left
[09:33] *** domidumont joined
[09:45] *** domidumont1 joined
[09:46] *** thou left
[09:47] *** domidumont left
[09:55] <masak> good forenoon, #perl6

[09:56] <tadzik> hello masak

[09:56] <FROGGS> hi masak 

[09:59] <moritz> \o masak, tadzik, FROGGS, *

[10:00] <lizmat> good *, all!

[10:01] *** domidumont1 left
[10:02] *** domidumont joined
[10:02] * lizmat is in lyon recovering from a chartreuse night

[10:05] <moritz> \o lizmat

[10:07] <sorear> o/ all

[10:07] <sorear> what's a chartreuse night

[10:07] <tadzik> it's the one when you go to beed sober and wake up drunk

[10:08] <moritz> iirc chartreuse is some sort of wine

[10:08] <tadzik> or that's what I remember from FPW

[10:09] * sorear imagines a chartreuse aurora over .nl that makes people who see it ill

[10:11] <masak> that pretty much sums it up. :)

[10:12] <huf> reusing charts... this is what the economy has come to?!

[10:12] * moritz doesn't think lyon is in .nl :-)

[10:12] <huf> someone could be lyon here :)

[10:12] <huf> (eh, not really0

[10:13] <masak> the edit distance between 'lyon' and '.nl' isn't horrible... :P

[10:15] <masak> *lol*, 5.2.0 ended up being called "Stuffed Parrot" :P

[10:15] <moritz> larger than between tcl and t2 :-)

[10:15] <masak> :P

[10:15] <moritz> lol

[10:15] <masak> and the quote is from Spamalot, "I am not dead yet"!

[10:16] <masak> Util++

[10:16] <lizmat> fwiw: http://en.wikipedia.org/wiki/Chartreuse_(liqueur)

[10:16] <masak> oh, dang. https://rt.perl.org/rt3/Ticket/Display.html?id=117317 makes me want to hurry up with my sprintf implementation.

[10:17] <lizmat> Chartreuse Night is a tradition started by Philippe 'book' Bruhat, usually happening one night on YAPC::Europe

[10:17] <masak> I got pretty far into the, hm, first 10% or so.

[10:18] <lizmat> it involves several bottles of Chartreuse and other liquors, a place near a hotel, and N number of perl geeks

[10:19] <lizmat> last night, N was 3

[10:19] <masak> but... it's green!!! o.O

[10:19] <lizmat> and the number of bottles was also 3

[10:19] <lizmat> (albeit there were not all full to start with)

[10:19] <masak> and not just mildly green, but kind of... radioactively so.

[10:19] <lizmat> indeed..  "the green monster" it is also sometimes called

[10:19] <masak> why does that sound like an understatement? :P

[10:20] <lizmat> although personally, I like to reserve that for "Verveine du Velay"

[10:20] <masak> "It is composed of distilled alcohol aged with 130 herbal extracts."

[10:20] <masak> you people are crazy!

[10:20] <masak> :P

[10:20] <masak> what if one of those herbs are dangerous?

[10:20] <tadzik> one?!??

[10:20] <tadzik> that'd be softcore ;)

[10:21] <masak> heh.

[10:21] <lizmat> also note, the green Verveine is 55%  :-)

[10:22] <sorear> if it's under any selective pressure not to be eaten, it's probably poisonous. ;)

[10:22] <tadzik> that's a "wow" even by my standards :)

[10:22] * lizmat makes mental note to take a bottle to the Polish Perl Workshop

[10:25] <tadzik> oh-o

[10:25] <tadzik> that's gonna be fun :)

[10:28] <tadzik> (un)fun fact: drinking on streets is forbidden in Poland

[10:28] <masak> tadzik knows this the hard way. ;)

[10:29] <tadzik> yeah :)

[10:32] <huf> is it enforced?

[10:32] <masak> seems so.

[10:33] <huf> we have this law too, and it's one of the ones the police overlook unless they have some other reason to bother you

[10:33] <tadzik> yeah, it is

[10:33] <tadzik> I ignored the 100PLN ticket the police gave me

[10:33] <huf> like, if you're loud, homeless, nonwhite, whatever, they'll stop you from drinking, but otherwise go ahead :)

[10:33] <tadzik> after 3 months I got a snail-mail letter which was a copy of the letter they sent to my bank

[10:33] <huf> huh.

[10:34] * lizmat is checking out, offline until probably later tomorrow

[10:34] *** lizmat left
[10:34] <huf> come to think of it, being loud here doesnt mean this law will get enforced... :)

[10:34] <tadzik> it ordered the bank to freeze my account temporarily, transfer the amount on the ticket + some additional fee to the police, then unfreeze my account again

[10:34] <tadzik> (or keep it frozen if there's not enough mana^Wmoney there)

[10:34] <tadzik> so yeah, they don't fsck around ;)

[10:34] <huf> huh. shoudl've used a brown paper bag i suppose ;)

[10:35] <tadzik> haha

[10:36] <tadzik> maybe I should've talked them away from it, instead of continuing to work on my laptop with my friend and explaining the Chomsky hierarchy and why regexes can't parse html

[10:36] <sorear> .oO( regex which parses real-world html: .* )

[10:36] <moritz> sorear: works only in Perl 6, in Perl 5 you need an /s :-)

[10:37] *** domidumont left
[11:03] *** eternaleye_ joined
[11:04] *** preflex left
[11:05] *** preflex joined
[11:06] *** dmol joined
[11:13] *** SamuraiJack left
[11:18] <masak> today's mini-challenge: set up a Perl 6 program that responds to Ajax requests.

[11:23] <arnsholt> Did anything ever happen to the project to revive Emmentaler?

[11:24] <masak> I saw some activity in that region, led by (I think) sergot. but it's a while ago.

[11:30] <tadzik> I think it's just cronjobs that aren't running

[11:31] <tadzik> well, it's a bit basic right now too

[11:31] <tadzik> but was mostly working at http://feather.perl6.nl/~sergot/modules/

[11:31] <masak> sergot++

[11:31] <masak> ecosystem testing is going to be doubly important once we're on the JVM, too.

[11:31] <masak> simply to hold together the implementations and backends.

[11:37] *** PacoAir joined
[11:37] *** preflex left
[11:39] *** preflex joined
[11:41] *** SamuraiJack_ joined
[11:57] <arnsholt> Yeah, I had a thought as I put off getting out of bed today

[11:58] <arnsholt> Essentially, I'd like to set up something largely similar to what I saw in use at Opera

[11:58] <tadzik> which thing

[11:58] <tadzik> ?

[11:59] <arnsholt> The Spartan infrastructure

[11:59] <tadzik> hmm

[11:59] <arnsholt> The code driving it is kinda awful (I've seen it =), but the actual functionality is pretty awesome

[12:00] <arnsholt> Of course, a volunteer-driven project like this needs something a bit different, since we can't just decide to set up a bunch of slaves to do testing all the time, but the idea is sound I think

[12:02] <arnsholt> My first plan was setting up some code that automatically fetches and builds Rakudo from git (and maybe NQP as well)

[12:02] <arnsholt> Then run the test suite and spectest suite and capture the TAP stream. Parse it and extract data, plus render it to HTML for easy inspection

[12:03] <arnsholt> Once that works, integrate with Panda to do the same for modules

[12:15] *** _sri left
[12:16] *** _sri joined
[12:27] *** kivutar left
[12:31] *** Chillance joined
[12:38] <dalek> ecosystem: 5db057e | mrhdias++ | META.list:

[12:38] <dalek> ecosystem: Was added the perl6-GD module.

[12:38] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/5db057e70b

[12:38] <dalek> ecosystem: 9626e4d | moritz++ | META.list:

[12:38] <dalek> ecosystem: Merge pull request #23 from mrhdias/master

[12:38] <dalek> ecosystem: 

[12:38] <dalek> ecosystem: Add the perl6-GD module.

[12:38] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/9626e4d0ff

[12:46] *** am0c left
[12:46] <DrEeevil> arnsholt: sounds like a great plan. I'm willing to spend some time and resources on helping out with it

[12:47] <arnsholt> Cool!

[12:48] <arnsholt> I think the initial version should mostly be Perl 5 (and possibly some Makefiles. Makefiles are cool =)

[12:48] <DrEeevil> yeah, sh+make+perl5 sounds good

[12:48] <DrEeevil> keep it as simple as needed

[12:49] *** SamuraiJack__ joined
[12:49] *** SamuraiJack_ left
[12:57] <arnsholt> Hmm. Actually, I should probably not use too much make (or sh)

[12:57] <arnsholt> The easier it is to run it on Windows, the better

[13:01] *** crab2313 joined
[13:02] *** SamuraiJack__ left
[13:04] *** SamuraiJack joined
[13:12] <masak> make runs on windows.

[13:12] <masak> you just can't use all the nice GNU syntax.

[13:12] <FROGGS> ya, well, you can have two Makefiles...

[13:12] <FROGGS> a dmake one and a gnu make one

[13:14] <arnsholt> Well yeah, but I don't have a Windows machine, so I won't really know if it works properly on Windows or not =)

[13:14] *** SamuraiJack_ joined
[13:14] <FROGGS> well then somebody has to port your makefile to windows :o)

[13:14] *** SamuraiJack_ left
[13:15] *** SamuraiJack left
[13:15] <arnsholt> True, true

[13:15] *** SamuraiJack_ joined
[13:25] *** crab2313 left
[13:30] <masak> rn: my $i = 0; until $i = 100_000_000_000 { $i++ }; say now - INIT now

[13:30] <p6eval> niecza v24-35-g5c06e28: OUTPUT«Unhandled exception: Cannot use value like Instant as a number␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 293 (Any.Numeric @ 6) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /tmp/iFxciPYgYz line 1 (mainline @ 1…

[13:30] <p6eval> ..rakudo b972ca: OUTPUT«0.033560␤»

[13:31] <masak> :)

[13:35] <moritz> rn: my $dummy = do for 1..100_000_000_000 { }; say now - INIT now

[13:35] <p6eval> niecza v24-35-g5c06e28: OUTPUT«(timeout)Potential difficulties:␤  $dummy is declared but not used at /tmp/kPIZm1Ea1h line 1:␤------> [32mmy [33m⏏[31m$dummy = do for 1..100_000_000_000 { }; [0m␤␤»

[13:35] <p6eval> ..rakudo b972ca: OUTPUT«0.0366133␤»

[13:37] <dalek> v5: 03f3283 | (Tobias Leich)++ | lib/Perl6/P5Grammar.pm:

[13:37] <dalek> v5: comment out term "shift"

[13:37] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/03f32830ea

[13:37] <dalek> v5: 7ecd591 | (Tobias Leich)++ | / (2 files):

[13:37] <dalek> v5: added implicit slurpy @_ parameter to subs

[13:37] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/7ecd5911d8

[13:38] *** SunilJoshi joined
[13:54] *** pmurias joined
[13:59] <DrEeevil> people still care about OS/2 and Windows? :)

[14:00] <FROGGS> :o)

[14:02] <masak> DrEeevil: you greatly underestimate the number of lost souls out there, and the work ahead. :)

[14:02] <DrEeevil> masak: my last installation of the redmond gameloader died in 2007 due to hardware upgrade

[14:03] <DrEeevil> I just don't see a reason to use inferior tools :)

[14:03] <masak> indeed. and that's also not the point where I was arguing. :)

[14:04] <DrEeevil> well, yeah, at my current workplace there's still some windows being used because lots of people write nonportable code

[14:04] <DrEeevil> we almost had to aquire new hardware for a legacy app because of a customer

[14:05] <masak> pesky customers.

[14:06] <DrEeevil> well, it'd have needed more hardware than our current platform to serve less users too

[14:07] <DrEeevil> which makes me very sad, because that is already inefficient code that we just throw more hardware at

[14:08] *** skids joined
[14:09] * arnsholt <3 cpanm

[14:09] <pmurias> FROGGS: Perl6::P5World is calling a non-existant dissect_longname method

[14:10] <pmurias> shouldn't Perl6::P5Grammar be called Perl5::Grammar?

[14:11] <FROGGS> pmurias: no, you need latest rakudo/nom

[14:11] <FROGGS> there was a typo I fixed

[14:13] *** eternaleye_ is now known as eternaleye

[14:16] <pmurias> FROGGS: there's no dissect_longname method in Perl6::World

[14:16] <moritz> commit b972ca3987a945fcca68273a996889d18f50e036

[14:16] <moritz> Author: Tobias Leich [email@hidden.address]
[14:16] <moritz> Date:   Sun Mar 24 10:07:47 2013 +0100

[14:16] <moritz> fixed spello as diakopter++ pointed out

[14:17] <moritz> that's the commit that renamed it from disect to dissect

[14:19] <pmurias> ahh, I have cloned a fork :(

[14:20] <FROGGS> not my fault \o/

[14:21] * moritz forks a clone

[14:23] *** Psyche^ joined
[14:27] *** Patterner left
[14:27] *** Psyche^ is now known as Patterner

[14:31] * masak forks a dongle

[14:33] <DrEeevil> omg

[14:33] * DrEeevil adds extra drama

[14:36] <tadzik> haha

[14:36] <tadzik> I'm offended!

[14:36] * tadzik takes a picture

[14:41] <Patterner> that won't work here. no girls^Wwomen^Wwopersons^Wwepersiblings

[14:42] *** census joined
[14:44] <dalek> v5: 450a0e0 | (Tobias Leich)++ | lib/Perl6/P5 (2 files):

[14:44] <dalek> v5: implement sigil-change (@a, $a[0])

[14:44] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/450a0e0a96

[14:45] *** pmurias left
[14:48] <DrEeevil> tadzik: be careful, the last person that did that got fired ;)

[14:52] *** pmurias joined
[15:02] *** census left
[15:03] *** colomon joined
[15:13] *** kivutar joined
[15:26] *** SunilJoshi left
[15:26] * moritz fires a forked dongle at masak

[15:29] <masak> Patterner: I'm offended by your assertion that there aren't any females here... ;)

[15:29] <masak> there's at least a handful. I won't call them out.

[15:31] <moritz> now that ~/.perl6/lib is gone from @*INC, I can try to set up a production rakudo that's completely separate from the dev setup

[15:36] <moritz> GNAAAA

[15:36] <moritz> now I'm running into the "Method 'seek' not implemented for type Socket" parrot bug again

[15:37] <moritz> because at the time of rakudo's release, there was no new parrot release, so we're still stuck with the old version :(

[15:43] <dalek> Perlito: d7f0089 | (Flavio S. Glock)++ | / (2 files):

[15:43] <dalek> Perlito: Perlito5::X64::Assembler - add t5-x64/01_sanity.t

[15:43] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/d7f0089552

[15:43] <dalek> Perlito: 810d6f3 | (Flavio S. Glock)++ | / (2 files):

[15:43] <dalek> Perlito: Perlito5::X64::Assembler - t5-x64/01_sanity.t runs in perl and node.js

[15:43] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/810d6f3d6f

[15:44] <hoelzro> ahoy #perl6

[15:45] *** domidumont joined
[15:47] <masak> hoelzro! \o/

[15:48] <hoelzro> almost done with the pygments highlighter!

[15:48] <masak> yay

[15:48] <hoelzro> it now highlights Grammar.pm perfectly =)

[15:48] <tadzik> whoa

[15:49] <hoelzro> just need some more tests

[15:49] <tadzik> hoelzro++

[15:50] <hoelzro> and make sure that some corner cases work

[15:50] <hoelzro> and handle filetype detection =/

[15:50] <hoelzro> on that note...is 'use strict' valid Perl 6?

[15:50] <tadzik> if there's 'strict.pm' somewhere..

[15:50] <masak> hoelzro++

[15:51] <hoelzro> I wonder if I find 'use strict' in a file, if I should tell pygments to consider it as Perl 5

[15:51] <hoelzro> tadzik: of course =)

[15:51] <moritz> n: use strict; say 42

[15:51] <p6eval> niecza v24-35-g5c06e28: OUTPUT«42␤»

[15:51] <hoelzro> damn

[15:51] <hoelzro> oh well

[15:51] <moritz> hoelzro: rakudo doesn't support it yet, but there's supposed to be 'no strict' and 'use strict;' in Perl 6 too

[15:52] <hoelzro> I see

[15:52] *** xinming left
[15:52] <hoelzro> well, I guess that's off the table

[15:53] *** xinming joined
[15:56] *** census joined
[15:59] <rindolf> Hi hoelzro, moritz , masak , tadzik . What's up?

[15:59] <rindolf> Isn't "use strict;" superfluous in Perl 6?

[15:59] <hoelzro> hello rindolf 

[15:59] <hoelzro> just talking about the pygments highlighter I'm working on =)

[15:59] <moritz> rindolf: not on -e one-liners

[15:59] <rindolf> moritz: ah.

[15:59] <hoelzro> after this, it's on to the next thing =)

[16:00] <hoelzro> which I think will be improving Perl 6 packaging

[16:08] <dalek> Perlito: b6c2983 | (Flavio S. Glock)++ | / (2 files):

[16:08] <dalek> Perlito: Perlito5::X64::Assembler - more internal functions

[16:08] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/b6c2983269

[16:09] <moritz> meh. ilbot6 won't join channels :(

[16:09] <arnsholt> Whoops

[16:10] <arnsholt> At least you're at the point where you can run your program and see what happens =)

[16:12] *** ggoebel_ joined
[16:14] <masak> for the record, I didn't expect the discussion with allison on #parrot to get heated. I'm sorry about that.

[16:14] <masak> it was kind of a slippery slope into all-out disagreement and talking past each other.

[16:15] <arnsholt> I didn't see it coming either, FWIW =/

[16:16] <masak> ironically -- in a "ha ha not funny" kind of way -- the structure of the conversation mimics the structure of the teams. it's the same inability to work together that manifests on both levels.

[16:16] <arnsholt> That's a good point

[16:16] <moritz> that's why a stable VM has such a big appeal

[16:16] <masak> how the heck did we end up with a Parrot that does not have the best interests of Rakudo/Perl 6 at heart? :(

[16:17] <moritz> it doesn't require "us" to talk to "them", because "their stuff" simply works

[16:17] <masak> and whose *leaders* then complain at us for not having any users?

[16:17] <masak> makes me want to cry.

[16:17] <moritz> masak: former leader, fwiw

[16:17] <moritz> masak: I haven't heard such FUD from cotto

[16:18] <masak> troo.

[16:37] *** jeffreykegler joined
[16:37] *** raiph joined
[16:43] <dalek> Perlito: 61a5f3c | (Flavio S. Glock)++ | / (2 files):

[16:43] <dalek> Perlito: Perlito5::X64::Assembler - add the registers

[16:43] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/61a5f3c346

[16:46] *** fglock joined
[16:46] <fglock> hi

[16:47] <fglock> I'm adding a jit to perlito

[16:47] <moritz> does that mean you're also adding a native backend?

[16:47] <moritz> or is there one already?

[16:48] <jeffreykegler> Question: Perl 6 is a family of languages, not just a language, I am told.  Where is the most extensive write-up of that?

[16:48] <moritz> jeffreykegler: that's news to me

[16:49] <moritz> jeffreykegler: there are several compilers which all implement slightly different subsets of Perl 6

[16:49] <moritz> jeffreykegler: but I wouldn't call that a family of languages

[16:49] <jeffreykegler> moritz: larry told me this once, on this channel, some years ago

[16:49] <jeffreykegler> ... and the same idea appears in the Perl tablets

[16:49] <moritz> oh

[16:49] <moritz> I think what he meant is that there are several "slangs"

[16:49] <fglock> moritz: yes, I'm working on Perlito5::X64::Assembler now

[16:50] <moritz> that is, regexes are a different "language" than the mainline

[16:50] <fglock> I started Perlito5::X64::Assembler, but I can just cross-compile perl5 to perl6

[16:50] <moritz> and quotes are yet another language

[16:50] <moritz> so yes, in that sense, one can talk about a family of language

[16:50] <moritz> s

[16:50] <moritz> jeffreykegler: sorry, I misunderstood at first

[16:50] <jeffreykegler> Yes, I think the slangs, with the main language, were what Larry called the "family of languages"

[16:51] <fglock> I mean, Perlito6::X64::Assembler

[16:51] <fglock> sorry

[16:51] <moritz> jeffreykegler: S02 has a bit on slangs

[16:51] <moritz> jeffreykegler: http://perlcabal.org/syn/S02.html#Slangs

[16:52] <cognominal> rn: class A { has $!a; method new($a) { A.bless(A.CREATE(), a => $a) }; method gist { say $!a }};  say A.new(42) 

[16:52] <p6eval> rakudo b972ca, niecza v24-35-g5c06e28: OUTPUT«(Any)␤True␤»

[16:52] <cognominal> hum

[16:53] <jeffreykegler> mortiz: thanks.  Anything more extensive?  I'm interested in theory & ideas as much (or more) than implementation

[16:55] <cognominal> moritz, what is wrong with my online?

[16:56] <moritz> cognominal: only public attributes are initialized by default

[16:56] <moritz> cognominal: http://doc.perl6.org/language/classtut#Constructors

[16:57] <cognominal> thx

[16:57] <moritz> sorry abou the formatting being a mess

[16:59] <cognominal> anyway being silent about passing a private attribute is probably wrong

[17:00] <moritz> allowing a public constructor to initialize a PRIVATE attribute by default would be wrong

[17:00] <moritz> it would mean that private attributes can be written (but not read) from the outside by default

[17:01] *** ilbot6 joined
[17:01] <cognominal> yes, I understand the rational

[17:04] <moritz> I'm afraid that one way or another, we have a FAQ at hand

[17:06] <cognominal> I am kind of rusty in that OO stuff...

[17:07] <arnsholt> moritz: What was the root of your socket problem, OOC?

[17:08] <moritz> arnsholt: a for loop that wasn't sunk properly :(

[17:08] <arnsholt> Right. Which makes it unexpected laziness, right?

[17:09] <moritz> correct

[17:09] <arnsholt> Oh, right. This is why a for loop at the end of a sub will behave unexpectedly, isn't it?

[17:10] <cognominal> I try to reconstruct my original line of thought. I suppose I considered bless sort like a private method.

[17:10] <moritz> arnsholt: in this case it's simply never executed :(

[17:10] <arnsholt> Yeah

[17:10] * moritz is so >.< close to making for-loops eager again

[17:11] <arnsholt> I'm somewhat embarassed to note that I spend most of my "Perl 6" time programming in C, and not Perl 6 =)

[17:14] <masak> arnsholt: :)

[17:14] <masak> moritz: that is my feeling too. for loops have always "felt" eager to me.

[17:14] <dalek> Perlito: 0e13f14 | (Flavio S. Glock)++ | / (2 files):

[17:14] <dalek> Perlito: Perlito5::X64::Assembler - add push/pop

[17:14] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/0e13f14b05

[17:14] <arnsholt> I do program a bit of NQP, though. It's almost Perl 6, but not quite

[17:19] <jeffreykegler> Btw, here's the exchange I was referring to at 9:48am: http://irclog.perlgeek.de/perl6/2008-02-03#i_191262  I note in that exchange, that Larry does not use the phrase "family of languages"; he says Perl 6 will be "many languages"

[17:20] * arnsholt twiddles his thumbs and waits for the compiler to compile itself

[17:24] <arnsholt> Progress!

[17:30] *** ilbot6 left
[17:41] <masak> I do not want to continue the discussion on #parrot. but it strikes me that regardless of how many users Perl 6 has, Parrot could have had excellent HLL interop, admirable GC, and wonderful thread support. it doesn't.

[17:42] <masak> and I don't see what the fact that it doesn't has to do with the success or failure of Perl 6.

[17:44] <arnsholt> In happier news, I think my vmlist NQP branch is close to compiling itself again =)

[17:45] <masak> yay

[17:45] *** renormalist left
[17:46] <dalek> Perlito: 073e847 | (Flavio S. Glock)++ | / (2 files):

[17:46] <dalek> Perlito: Perlito5::X64::Assembler - more push/pop

[17:46] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/073e847fb6

[17:46] <arnsholt> Yeah, I'm pretty happy about that

[17:46] <arnsholt> For a while I was unsure how to go about the HLL config stuff, but after some Parrot source-diving, it was pretty straightforward

[17:51] *** thou joined
[17:51] <cognominal> Today, I am seeing parrot as a way to bootstrap rakudo. Thx to jnthn recent efforts, we are close to see other VM as backend. And even if in TimToady mind, Perl 6 is probably what Perl 5 ought to be, I don't see any interest thinking one in term of the other. some Perl 5 habits translate to Perl 6, that's nice. Some Perl 6 ideas have been implemented in Perl 5. that's cool. But thinking one in term of the other is just creating a bigger ghetto.

[17:51] <arnsholt> Gah. Stuff I don't understand in the regex code

[17:52] *** ilbot6 joined
[17:53] <arnsholt> ilbot6 \o/

[17:53] <moritz> it even connects to mysql

[17:53] <arnsholt> moritz++ # ilbot6

[17:54] *** ilbot6 left
[17:54] <moritz> it just doesn't log yet :(

[17:54] <arnsholt> But progress!

[17:54] <arnsholt> I have a long-running NQP branch that hasn't been able to compile itself for several weeks. Progress is always good =)

[17:55] <moritz> aye :-)

[17:58] <moritz> TODO: implement method ping in DBDish::mysql::Connection

[17:59] *** ilbot6 joined
[18:00] <moritz> strike previous TODO. New TODO: test DBDish::mysql::Connection.ping

[18:00] <arnsholt> \o/

[18:02] *** ilbot6 left
[18:03] <dalek> Perlito: 27f3c4b | (Flavio S. Glock)++ | src5/lib/Perlito5/X64/Assembler.pm:

[18:03] <dalek> Perlito: Perlito5::X64::Assembler - add scale factors for operands

[18:03] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/27f3c4bd22

[18:08] <dalek> DBIish: 60438cf | moritz++ | lib/DBDish/mysql.pm6:

[18:08] <dalek> DBIish: implement ping method for mysql backend

[18:08] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/60438cfa6a

[18:12] *** bloonix joined
[18:15] <moritz> r: say now

[18:15] <p6eval> rakudo b972ca: OUTPUT«Instant:1364148985.722886␤»

[18:15] <moritz> r: say now.Int

[18:15] <p6eval> rakudo b972ca: OUTPUT«1364148992␤»

[18:16] <masak> r: sub what-apout { say @_ }; what-apout now

[18:16] <p6eval> rakudo b972ca: OUTPUT«Instant:1364149015.075067␤»

[18:16] <masak> :P

[18:17] <moritz> how do I get today's date, but from the perspective of UTC, not localtime?

[18:19] *** ilbot6 joined
[18:19] *** ilbot6 left
[18:19] <dalek> v5: ff19c0c | (Tobias Leich)++ | / (3 files):

[18:19] <dalek> v5: in the middle of allowing to have named iterators in for loops

[18:19] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/ff19c0c0b9

[18:20] * ruoso commute &/win 4

[18:21] * ruoso not looking when typing

[18:25] *** ilbot6 joined
[18:25] *** ilbot6 left
[18:33] <masak> IRC: not looking when typing since 1988. ;)

[18:34] <dalek> Perlito: 54135fa | (Flavio S. Glock)++ | / (2 files):

[18:34] <dalek> Perlito: Perlito5::X64::Assembler - add some mov variants

[18:34] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/54135fa370

[18:34] <dalek> roast: db2d159 | coke++ | S0 (6 files):

[18:34] <dalek> roast: pugs fudge

[18:34] <dalek> roast: review: https://github.com/perl6/roast/commit/db2d1596e1

[18:34] <dalek> perl6-roast-data: 5fc0f95 | coke++ | / (3 files):

[18:34] <dalek> perl6-roast-data: today (automated commit)

[18:34] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/5fc0f956da

[18:38] *** cognominal left
[18:40] <dalek> Perlito: d2b88ac | (Flavio S. Glock)++ | src5/lib/Perlito5/X64/Assembler.pm:

[18:40] <dalek> Perlito: Perlito5::X64::Assembler - add repmovs variants

[18:40] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/d2b88ac6ed

[18:43] *** ggoebel_ left
[18:44] *** cognominal joined
[18:45] *** cognominal left
[18:45] *** cognominal joined
[18:49] <dalek> Perlito: c50d5a9 | (Flavio S. Glock)++ | / (2 files):

[18:49] <dalek> Perlito: Perlito5::X64::Assembler - add shld, shrd, rdtsc

[18:49] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/c50d5a9827

[19:02] <dalek> nqp/vmarray-list: 2de3300 | (Arne Skjærholt)++ | src/6model/reprs/VMArray.c:

[19:02] <dalek> nqp/vmarray-list: Implement copy_to in VMArray.

[19:02] <dalek> nqp/vmarray-list: review: https://github.com/perl6/nqp/commit/2de330087d

[19:02] <dalek> nqp/vmarray-list: ee613a6 | (Arne Skjærholt)++ | src/ (2 files):

[19:02] <dalek> nqp/vmarray-list: Remove dependencies on get_number VTABLE for nqp::list.

[19:02] <arnsholt> *sigh* That does tend to happen, doesn't it?

[19:03] *** dalek joined
[19:03] *** ChanServ sets mode: +v dalek

[19:05] <dalek> Perlito: ab5f52f | (Flavio S. Glock)++ | / (2 files):

[19:05] <dalek> Perlito: Perlito5::X64::Assembler - add xchg

[19:05] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/ab5f52f9a8

[19:07] *** skyheights joined
[19:10] *** benabik joined
[19:10] * skyheights liked the discussion earlier on #parrot as both sides articulated valuable points.

[19:15] *** dmol left
[19:18] *** skyheights left
[19:18] <masak> skyheights: guess so. it was hard to be a part of, though. I could sense messages missing their target in both directions. :/

[19:21] *** denisboyun joined
[19:23] <arnsholt> Hmm. Suddenly I'm sad jnthn++ is away on holiday

[19:23] <hoelzro> ok, all that's left is file type detection.

[19:24] *** dmol joined
[19:24] <tadzik> hoelzro: are you looking for 'use vSomething'?

[19:24] <hoelzro> yup

[19:24] <tadzik> vim comments?

[19:24] <hoelzro> right now, I only look for shebang lines and 'use v6'

[19:24] <hoelzro> modelines did occur to me

[19:25] <tadzik> std: package F { };

[19:25] <p6eval> std 86b102f: OUTPUT«ok 00:00 42m␤»

[19:25] <tadzik> std: package F; 1;

[19:25] <p6eval> std 86b102f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Semicolon form of package definition indicates a Perl 5 module; unfortunately,␤  STD doesn't know how to parse Perl 5 code yet at /tmp/oGdn1lIiEw line 1:␤------> [32mpackage F[33m⏏[31m; 1;[0m␤    expecting any of:␤   name␤   trait␤Parse…

[19:25] <tadzik> well, these days Perl5 has the former form too

[19:25] <arnsholt> IIRC top-level module, class and grammar declarators are pretty reliable Perl 6 indicators as well

[19:26] <hoelzro> yeah, I thought of that too =/

[19:26] <hoelzro> arnsholt: pretty much, yes

[19:26] <hoelzro> but with the advent of Moose and MooseX::Declare...

[19:26] <hoelzro> it makes things a little blurier

[19:26] <arnsholt> Ah, right

[19:27] <hoelzro> right now, I'm working on building a corpus of p5/p6 code to test against

[19:27] <tadzik> 'module' and 'grammar' are still Perl6-only, I think

[19:28] <tadzik> hoelzro: what if Perl 6 pygments somehow subclassed Perl 5 pygments? Could it work for both?

[19:28] <hoelzro> yes, but grammar isn't in every Perl 6 file =/

[19:28] <hoelzro> yikes

[19:28] <hoelzro> I think that would cause more harm that good

[19:28] <hoelzro> well, for starters, I know it wouldn't work

[19:28] *** ilbot6 joined
[19:28] <hoelzro> the Perl 6 lexer needs to be of type ExtendedRegexLexer

[19:29] <hoelzro> because I have some special logic that can't be expressed in just regexes

[19:29] <moritz> ilbot6 now logs into a database

[19:29] <tadzik> whoa

[19:29] <tadzik> moritz++

[19:30] <arnsholt> hoelzro: Yeah, grammar won't catch everything, but it'll be a pretty reliable indicator

[19:30] <moritz> I found a bug in the mysql DBDish driver along the way

[19:31] <moritz> grammar and 'use v6;' are both very reliable

[19:32] <hoelzro> true

[19:34] *** pmurias left
[19:35] *** pmurias joined
[19:40] <masak> moritz++

[19:41] <masak> moritz: was it the #parrot discussion that made you go work on ilbot6? :)

[19:41] *** ilbot6 left
[19:41] <moritz> masak: no, I worked on it before the #parrot discussion

[19:41] <moritz> and it was the reason I didn't want to waste my time on pointless discussions, because I had better to do :-)

[19:42] <dalek> DBIish: 3790014 | moritz++ | / (3 files):

[19:42] <dalek> DBIish: fix quoting in mysql

[19:42] <dalek> DBIish: 

[19:42] <dalek> DBIish: the old mechanism did not consider undefined values NULL, and failed

[19:42] <dalek> DBIish: for empty strings and for stuff that looked vaguely like numbers, but were

[19:42] <dalek> DBIish: not well-formed numbers

[19:42] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/3790014d4a

[19:43] <pmurias> fglock: hi

[19:43] <pmurias> fglock: what do you plan to use for garbadge collection?

[19:45] <hoelzro> ugh.

[19:45] <hoelzro> tests tend not to have grammar.

[19:45] <hoelzro> and I'm not seeing a lot of use v6 there, either

[19:45] <tadzik> hmm

[19:45] <tadzik> 'use Test'

[19:45] <hoelzro> =(

[19:46] <tadzik> in Perl 5 it's always (I think) Test::Simple, Test::More or so

[19:46] <hoelzro> I might just favor Perl 5

[19:46] <tadzik> that too

[19:46] <hoelzro> if you want your tests/files probably highlighted, 'use v6'

[19:46] <hoelzro> modules will probably be fine

[19:46] <tadzik> yes, I'd lean to that

[19:47] <hoelzro> I'd rather incorrectly highlight 6 as 5 rather than 5 as 6

[19:47] *** Targen left
[19:48] <masak> a heuristic that would work quite well, I think, would be looking for any occurrence of '$obj.method' in the code. Perl 5 programs don't tend to have that.

[19:49] <pmurias> hoelzro: one thing you should look "# vim: ft=perl6"

[19:49] <pmurias> * look for

[19:49] <fglock> pmurias: for perl6 I'll look for an existing dynamic loadable library, if possible

[19:49] <masak> or many other Perl 6-specific idioms, such as 'map { ... }, @note_the_comma'

[19:49] <masak> but those things would remain heuristics, of course.

[19:49] <fglock> for perl5, it needs reference counting

[19:49] <masak> bet there are good ones, though :)

[19:50] *** ilbot6 joined
[19:50] <fglock> pmurias: so it needs to be implemented closer to the emitter

[19:51] <pmurias> so you plan to work on both Perlito and Perlito5?

[19:51] *** ilbot6 left
[19:52] *** Targen joined
[19:53] <moritz> meh, the mysql backend doesn't like real-world data

[19:53] <fglock> yes

[19:54] * lue wonders if there's a nice summary mode for this #parrot discussion on perlgeek

[19:55] *** Guest89482 joined
[19:58] *** colomon left
[19:59] <arnsholt> I think you'll just have to read the log =)

[19:59] *** jeffreykegler left
[19:59] *** cognominal left
[20:00] <arnsholt> moritz: Since you're working on DBIish, I'll warn you that I hope to make some changes to how strings are handled in Zavolaj at some point in the (hopefully) not too distant future

[20:00] <moritz> arnsholt: the ownership stuff?

[20:00] <arnsholt> Just have to get all my yaks in a row

[20:00] <arnsholt> The ownership stuff too

[20:01] <arnsholt> But also marshalling between CArrays and Bufs

[20:02] <arnsholt> So that string stuff that works like foo(char *data, size_t datalen) can decode the Str into a Buf and create a CArray from that

[20:02] *** Guest89482 left
[20:02] <arnsholt> Since the somewhat naive approach we have now breaks horribly with Unicode in cases like that

[20:03] <arnsholt> After that works I'll do the ownership stuff

[20:06] *** cognominal joined
[20:07] <arnsholt> But first I have to get this vmarray yak shaved, which might block on me talking to jnthn 

[20:10] <[Coke]> rakudo is still green. pugs will be green tomorrow - that leaves niecza with 18 failures.

[20:11] <hoelzro> pmurias: I was thinking it, yeah

[20:12] <hoelzro> masak: so just /\$\w+\.\w+/?

[20:14] <moritz> [$@%&]\w+\.\w+\(

[20:16] *** SamuraiJack_ left
[20:16] <dalek> Perlito: 0be697d | (Flavio S. Glock)++ | / (2 files):

[20:16] <dalek> Perlito: Perlito5::X64::Assembler - add labels

[20:16] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/0be697dd51

[20:16] <masak> well, the paren is optional, but yes.

[20:20] <hoelzro> twigils are also a good giveaway

[20:21] <moritz> though note that   $foo.bar() is also valid Perl 5 syntax

[20:21] <moritz> a concatenation of a variable and a method call

[20:21] *** domidumont left
[20:23] <masak> sub call, yes.

[20:23] <masak> maybe better to search for the absence of '$foo->bar()', actually.

[20:24] <masak> std: my $foo; $foo->bar()

[20:24] <p6eval> std 86b102f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unsupported use of -> as postfix; in Perl 6 please use either . to call a method, or whitespace to delimit a pointy block at /tmp/DHrv_gCKit line 1:␤------> [32mmy $foo; $foo->[33m⏏[31mbar()[0m␤Parse failed␤FAILED 00:00 42m␤»…

[20:25] <arnsholt> Good idea. -> is an excellent discriminator for Perl 5

[20:28] <lue> .oO(This parrot discussion looks interesting. Too bad it seems to have ended)

[20:28] <dalek> Perlito: 7b6df97 | (Flavio S. Glock)++ | src5/lib/Perlito5/X64/Assembler.pm:

[20:28] <dalek> Perlito: Perlito5::X64::Assembler - add conditions

[20:28] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/7b6df97d18

[20:31] <arnsholt> hoelzro: I guess what you want is a set of heuristics that are highly specific in both directions

[20:32] *** kaare_ joined
[20:32] <FROGGS> well, you could define rules which vote for either Perl 5 or 6 and then if it is   Perl5  0.18 <=>  0.72 Perl6   you know what to choose

[20:33] <FROGGS> so just put these rules/guesses in a list

[20:33] <FROGGS> ... even if they are just good guesses

[20:34] <masak> yeah. basically a Bayesian filter.

[20:34] <masak> http://www.paulgraham.com/spam.html

[20:35] *** ilbot6 joined
[20:35] *** ilbot6 left
[20:35] *** kivutar left
[20:35] <arnsholt> masak: I was thinking decision tree, but yeah

[20:36] <arnsholt> FROGGS: Actually, I should have thought of that

[20:36] <moritz> meh. ilbot6 segfaults when inserting stuff into a postgresql database :(

[20:36] <arnsholt> hoelzro: If you've collected a decent-ish corpus of Perl 5 and Perl 6, you could consider training a Naive Bayes model to discriminate

[20:36] <lue> .oO(If you go Bayesian, you might be able to set up some sort of temporary pygments-using webpage that goes "Upload a Perl 6 or Perl 5 file!" ==> Upload file ==> "We detected this is a Perl 6 (or Perl 5) file. Is this correct?" ==> answer yes/no, to improve the filter)

[20:37] *** ilbot6 joined
[20:37] *** ilbot6 left
[20:37] <arnsholt> FROGGS++ # Reminding me of stuff I should've thought of =)

[20:37] <masak> lue: yes, but that would be yak shaving.

[20:38] <masak> since the goal is to syntax-highlight code. :)

[20:38] <timotimo> if we have a corpus of the same problem solved in perl5 and perl6, we could build a machine translation system :D

[20:39] <arnsholt> I'm not sure how well SMT would work for programming language translation =D

[20:39] <arnsholt> OTOH, you could consider compilers (terribly complicated) RBMT systems ^_^

[20:39] <timotimo> :)

[20:39] <lue> masak: But how would you improve (quickly|easily) the bayesian filter on github if it gets things wrong? :)

[20:40] <arnsholt> moritz: Segfaults are no fun. Tell me if it's my faualt =)

[20:43] <moritz> arnsholt: I have no idea

[20:44] *** rindolf left
[20:46] *** cognominal left
[20:48] <FROGGS> gdb?

[20:48] <masak> lue: manually, on a case-by-case basis, I suppose.

[20:49] <moritz> jnthn++ # very nice syntax errors messages, with accurate line numbers

[20:50] <hoelzro> I would prefer to avoid something that requires explicit teaching

[20:50] <hoelzro> I want the logic to be visible

[20:50] <arnsholt> In that case, a decision tree might be the best way to go

[20:50] *** kurahaupo joined
[20:50] <moritz> or simpler

[20:50] <arnsholt> A cascade of highly discriminating choices is essentially a decision tree, FWIW

[20:51] <moritz> use v6;| grammar | module | # vim: ft=perl6  => Perl 6

[20:51] <moritz> otherwise: Perl 5

[20:52] <hoelzro> that makes the most sense

[20:52] <hoelzro> and it's in line with S01

[20:52] *** ilbot6 joined
[20:52] <FROGGS> well, this might catch these Perl6ish modules from cpan that have these keywords in pod

[20:52] <moritz> hoelzro++ # p6 hilighting

[20:53] <hoelzro> FROGGS: nice idea

[20:53] <moritz> one can check 'use v6;' on the start of a line

[20:53] <hoelzro> I'm checking for that at the moment

[20:53] <moritz> r: say ?42

[20:53] <p6eval> rakudo b972ca: OUTPUT«True␤»

[20:53] *** ilbot6 left
[20:53] <hoelzro> the grammar/module thing would be nice as well

[20:54] <hoelzro> the trick about *that* is proper implementation =)

[20:54] *** ilbot6 joined
[20:55] <moritz> r: say ?0

[20:55] *** ilbot6 left
[20:55] <p6eval> rakudo b972ca: OUTPUT«False␤»

[20:56] <arnsholt> hoelzro: I'd urge you to try some naive Bayes models though. They're pretty easy to implement, and efficient

[20:56] <arnsholt> Definitely one of the very best bang-for-buck machine learners

[20:57] <pmurias> hoelzro: at the start of a line with a semicolon at the end of the line?

[20:57] <hoelzro> pmurias: is that re: grammar/module?

[20:58] <pmurias> hoelzro: yes

[20:58] <hoelzro> but that wouldn't match 'grammar MyGrammar {', right?

[20:59] <pmurias> so with a { at the end of the line

[21:00] *** dmol left
[21:00] <FROGGS> my grammar FooBar is WhateverGrammar does Something[Int] \n {

[21:01] *** dmol joined
[21:01] <hoelzro> ah

[21:02] <dalek> Perlito: 84ad906 | (Flavio S. Glock)++ | / (2 files):

[21:02] <dalek> Perlito: Perlito5::X64::Assembler - add "jmp" stub; add V8 copyright message

[21:02] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/84ad906a19

[21:02] <FROGGS> hoelzro: not that I want you to cry :o)

[21:03] <hoelzro> oh, I realize how much a pain this is =)

[21:03] <FROGGS> that's why I'd vote for a list (>10 items), and after all decisions you decide

[21:04] <pmurias> just having simple easy to understand heuristics should be ok

[21:04] <pmurias> if a piece of Perl6 code gets highlighted as Perl 5 nothing particularly bad happens

[21:05] <hoelzro> exactly

[21:05] <hoelzro> I'd rather favor Perl 5

[21:05] <moritz> aye; start simple, and once there are many reports about false classifications you can still tweak it

[21:05] <hoelzro> (for now ;) )

[21:08] *** ilbot6 joined
[21:09] * arnsholt comments out catch blocks for fun and profit

[21:09] <arnsholt> Where profit is defined as tracking down that pesky bug =)

[21:09] <FROGGS> arnsholt: you are a ferengi?

[21:10] * FROGGS .oO( is Perl 6 like umox? )

[21:10] <arnsholt> Haven't seen enough ST:TNG to get that reference, I'm afraid =)

[21:10] *** cognominal joined
[21:10] <diakopter> ds9?

[21:10] <FROGGS> ds9

[21:11] <FROGGS> quark asked a girl (his employee) if she would make umox (sex) for fun and profit

[21:13] <hoelzro> woooo, 189/206 wrong

[21:13] <moritz> hoelzro: maybe invert the condition?

[21:13] <hoelzro> heh

[21:13] <arnsholt> hoelzro: It's important to have a bad baseline. That way your system looks better in the paper ;)

[21:13] <moritz> then you'll just have 17 wrong

[21:13] <hoelzro> all I'm doing at the moment is looking for a shebang line and 'use v6' =)

[21:14] <hoelzro> so I have room for improvement!

[21:14] <FROGGS> right, it would be worse if there was no room for it :P

[21:14] <dalek> DBIish: 7903d63 | moritz++ | lib/DBDish/mysql.pm6:

[21:14] <dalek> DBIish: [mysql] do not screw up when there are question marks in the data

[21:14] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/7903d6378a

[21:14] <hoelzro> not that I would mind with 0/206 ;)

[21:14] <moritz> ok, ilbot6 logs into a database again

[21:14] <moritz> and doesn't die when question marks are used :-)

[21:14] <arnsholt> hoelzro: What kind of split do you have between Perl 5 and Perl 6, OOC?

[21:15] <moritz> r: just a test

[21:15] <p6eval> rakudo b972ca: OUTPUT«[31m===[0mSORRY![31m===[0m␤Undeclared routines:␤    a used at line 1␤    just used at line 1␤    test used at line 1␤␤»

[21:15] <hoelzro> well, right now, I have 206 Perl 6 files and 99 Perl 5

[21:15] <moritz> wow, even formatting codes and Unicode is correctly logged

[21:16] <moritz> I'll leave that running through the night

[21:16] <moritz> sleep&

[21:16] <masak> 'night, moritz. dream of more than zero users in businesses and governments.

[21:19] *** fglock left
[21:20] <FROGGS> gnight moritz

[21:23] *** kaare_ left
[21:28] *** pmurias left
[21:28] <hoelzro> the Perl 5 corpus could probably use some shoring up

[21:28] <hoelzro> I just included a smattering of Perl6:: modules

[21:29] <hoelzro> woot, 53/206!

[21:34] <dalek> Perlito: d57161d | (Flavio S. Glock)++ | / (2 files):

[21:34] <dalek> Perlito: Perlito5::X64::Assembler - add cpuid, neg, leave, int3

[21:34] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/d57161d949

[21:35] <hoelzro> I think checking for 'use Moose' and the like would be a good way of catching things

[21:59] *** spider-mario left
[22:03] *** dmol left
[22:04] *** dmol joined
[22:04] <hoelzro> ok, 8 failures

[22:04] <hoelzro> er, 7

[22:04] <hoelzro> all tolerable misses, imo =)

[22:04] <FROGGS> cool!

[22:09] <hoelzro> pull request created \o/

[22:11] <hoelzro> boy, that feels good.

[22:12] *** dmol left
[22:13] <FROGGS> hoelzro++

[22:13] <FROGGS> hoelzro += 10 # at least

[22:13] *** dmol joined
[22:13] <hoelzro> hooray, fake Internet points =)

[22:13] <FROGGS> :o)

[22:14] <FROGGS> but hey, mind that there is a guy at the other end that is happy too :o)

[22:14] <hoelzro> ;)

[22:14] <hoelzro> I hope that the author accepts the pull request

[22:14] <hoelzro> and doesn't just turn his nose and say "hmmph! Perl!"

[22:14] <FROGGS> well, most do, right?

[22:15] <cognominal> karma hoelzro

[22:15] <cognominal> who handle the karma in #perl6 ? :)

[22:15] <diakopter> ilbot

[22:15] <cognominal> dalek, karma hoelzro

[22:15] <cognominal> ilbo, karma hoelzro

[22:15] <tadzik> naah, phenny did that

[22:16] <FROGGS> ohh man

[22:16] <diakopter> ilbot logs them!

[22:16] <diakopter> so... moritz' clogs need the feature of displaying current karma :D

[22:16] <cognominal> r: say " hoelzro++ " for 1..10

[22:16] <p6eval> rakudo b972ca: OUTPUT« hoelzro++ ␤ hoelzro++ ␤ hoelzro++ ␤ hoelzro++ ␤ hoelzro++ ␤ hoelzro++ ␤ hoelzro++ ␤ hoelzro++ ␤ hoelzro++ ␤ hoelzro++ ␤»

[22:17] <cognominal> I don't know if many increments are accepted in one line

[22:18] <cognominal> is there an integer divide in Perl 6?

[22:18] <sorear> rn: say 18 div 5

[22:18] <p6eval> rakudo b972ca, niecza v24-35-g5c06e28: OUTPUT«3␤»

[22:19] <diakopter> rn: say Inf div Inf

[22:19] <p6eval> niecza v24-35-g5c06e28: OUTPUT«1␤»

[22:19] <p6eval> ..rakudo b972ca: OUTPUT«Cannot call 'infix:<div>'; none of these signatures match:␤:(Int:D \a, Int:D \b)␤:(int $a, int $b)␤  in sub infix:<div> at src/gen/CORE.setting:2886␤  in block  at /tmp/LB3GSCRPoJ:1␤␤»

[22:19] <hoelzro> sleep &

[22:19] <diakopter> niecza++ I think

[22:20] <FROGGS> gnight hoelzro 

[22:23] <sorear> karma hoelzro

[22:29] *** denisboyun left
[22:37] *** leprevost joined
[22:49] *** dmol left
[22:50] *** PacoAir left
[23:10] *** pmurias joined
[23:11] *** baest_ joined
[23:12] *** bakedb_ joined
[23:13] *** sftp left
[23:13] *** hoelzro_ joined
[23:13] *** `patch` joined
[23:14] *** prammer_ joined
[23:14] *** sftp joined
[23:14] *** Targen left
[23:14] *** thou_ joined
[23:14] *** Targen_ joined
[23:14] *** Maddingue left
[23:14] *** moritz_ joined
[23:14] *** thou left
[23:14] *** fgomez left
[23:14] *** broquaint joined
[23:14] *** fgomez_ joined
[23:15] *** Maddingue joined
[23:15] *** cosimo_ joined
[23:15] *** jtpalmer joined
[23:15] *** BinGOs_ joined
[23:15] *** ruoso joined
[23:16] *** anocelot joined
[23:17] *** Yappo____ joined
[23:17] *** felher joined
[23:18] *** pnu_ joined
[23:18] *** snuffles joined
[23:18] *** census left
[23:19] *** nwc10_ joined
[23:19] *** Some-body_ joined
[23:20] *** autumn joined
[23:20] *** Bucciarati joined
[23:20] *** cosimo left
[23:20] *** Some-body_ is now known as DarthGandalf

[23:20] *** __sri joined
[23:20] *** shachaf_ joined
[23:21] *** mangala_ joined
[23:21] *** xorp joined
[23:21] *** shachaf_ left
[23:21] *** shachaf_ joined
[23:21] *** BinGOs_ is now known as BinGOs

[23:21] *** BinGOs left
[23:21] *** BinGOs joined
[23:21] *** shachaf_ is now known as shachaf

[23:23] *** bloonix left
[23:23] *** _sri left
[23:23] *** mangala left
[23:23] *** pmurias left
[23:24] *** yeltzooo joined
[23:24] *** ingyfoo joined
[23:24] *** pmurias_ joined
[23:24] *** sitaktif1 joined
[23:24] *** bloonix joined
[23:25] *** rking joined
[23:26] *** zamolxes joined
[23:28] *** dpk joined
[23:30] *** dpk left
[23:30] *** dpk joined
[23:34] <dalek> v5: 4064558 | (Tobias Leich)++ | / (3 files):

[23:34] <dalek> v5: for loops with named iterator ok

[23:34] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/40645581f1

[23:36] *** groky joined
[23:37] *** dayangkun joined
[23:39] *** groky left
[23:40] *** groky joined
[23:43] *** xalbo_ joined
[23:44] *** yx joined
[23:44] *** sunnavy_ joined
[23:47] *** Yappo______ joined
[23:51] *** mathw_ joined
[23:52] *** zamolxes left
[23:52] *** sitaktif1 left
[23:52] *** pmurias_ left
[23:52] *** ingyfoo left
[23:52] *** Yappo____ left
[23:52] *** eiro left
[23:52] *** Rix left
[23:52] *** awwaiid left
[23:52] *** takesako__ joined
[23:52] *** jtpalmer_ joined
[23:52] *** eiro joined
[23:53] *** Rix joined
[23:55] *** raiph left
[23:55] *** araujo joined
[23:55] *** xorp left
[23:56] *** zamolxes joined
[23:57] *** xorp joined
[23:57] *** jtpalmer_ left
[23:57] *** jtpalmer left
[23:57] *** prammer_ left
[23:57] *** leprevost left
[23:57] *** timotimo_ joined
[23:58] *** clkao left
[23:59] *** rom1504 joined
[23:59] *** pmurias joined
[23:59] *** Maddingue left
[23:59] *** yoleaux joined
