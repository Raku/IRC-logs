[00:02] <timotimo> indeed :|

[00:06] <dalek> nqp/awesome_bindattr: bd80cda | (Timo Paulssen)++ | src/vm/parrot/QAST/Operations.nqp:

[00:06] <dalek> nqp/awesome_bindattr: this actually works!

[00:06] <dalek> nqp/awesome_bindattr: review: https://github.com/perl6/nqp/commit/bd80cdaaf8

[00:06] <timotimo> (oops)

[00:07] <timotimo> damnit, what am i doing wrong now? >_>

[00:08] <lue> .oO(And then they tell you about a cool, effectively-essential matching paren highlighter! How else could you ever figure out that mess o' parens?)

[00:11] *** eternaleye left
[00:11] <timotimo> where do i accidentally generate a repr_bind_attr_int_p_p_sc_s_ic?!

[00:12] <timotimo> ah, of course

[00:12] *** Psyche^ joined
[00:12] <timotimo> i'm quite surprised it didn't blow up earlier

[00:13] *** xenoterracide left
[00:15] <timotimo> like, before i commited the code publically and made a total ass of myself ;)

[00:16] <lue> then your next commit should start with "... in breaking nqp." :)

[00:16] *** Psyche^_ left
[00:16] <dalek> nqp/awesome_bindattr: 1e8a295 | (Timo Paulssen)++ | src/vm/parrot/QAST/Operations.nqp:

[00:16] <dalek> nqp/awesome_bindattr: confusion about argument order cleared up.

[00:16] <dalek> nqp/awesome_bindattr: review: https://github.com/perl6/nqp/commit/1e8a295fc1

[00:16] <timotimo> aaw, i saw that just a second too late! :(

[00:17] <timotimo> that's why i shouldn't get a rakudo commit bit, i break stuff :)

[00:17] <timotimo> i hope my changes are stable and result in a faster nqp+rakudo

[00:17] <timotimo> that would be hella nice

[00:17] <timotimo> the changes from the very first commit already cause a 3% speedup when compiling the setting :)

[00:17] <timotimo> okay, now to build a rakudo and time it :)

[00:17] <timotimo> i have 12 timings without the optimisations

[00:18] <lue> on the upside, you don't seem to be committing to nqp/master .

[00:19] <timotimo> that's right

[00:19] <timotimo> tomorrow (logically; physically it's "today" to me) is rakudo-release-day

[00:27] <timotimo> good news

[00:28] <timotimo> the first timing is 3:21.8s wallclock vs 3:27.0s wallclock without the optimization

[00:28] *** fridim__ joined
[00:28] <timotimo> (but this is rm + gen-cat.pl + perl6 compile-ze-setting + parrot compile-ze-pbc)

[00:28] <timotimo> (so the measurement is a bit off, especially the last step takes quite a bit of time, too)

[00:29] <timotimo> i should really measure those steps individually and subtract them from the overall run time

[00:29] <timotimo> else these measurements are useless

[00:30] *** berekuk left
[00:34] *** stevan_ left
[00:34] <diakopter> timotimo: you're being too hard on yourself :P

[00:34] *** eternaleye joined
[00:34] *** stevan_ joined
[00:34] <timotimo> ah, very good. i can subtract 30 seconds from each measurement just for the parrot pbc step.

[00:35] <timotimo> the gen-cat takes just 0.02s, so that makes no difference

[00:42] *** berekuk joined
[00:43] <timotimo> so, is a win of 6% when compiling the setting worth merging my branch?

[00:56] <timotimo> probably closer to 3% actually

[00:57] * timotimo runs spectests

[01:03] *** zwut00 left
[01:06] <timotimo> spectests are clean

[01:09] *** FROGGS joined
[01:09] *** berekuk left
[01:11] <timotimo> ah, github pull requests are b0rked still

[01:14] <timotimo> .tell masak would you consider mergint awesome_bindattr before cutting the release today?

[01:14] <yoleaux> timotimo: I'll pass your message to masak.

[01:14] <timotimo> bedtimey times

[01:14] *** FROGGS left
[01:19] *** eternaleye left
[01:21] *** jnap joined
[01:37] *** jnap left
[01:37] *** FROGGS joined
[01:46] *** FROGGS left
[01:48] *** FROGGS joined
[01:49] *** BenGoldberg left
[01:52] *** crab2313 joined
[01:59] *** kbaker joined
[02:08] *** FROGGS left
[02:09] *** FROGGS joined
[02:25] *** FROGGS left
[02:47] *** FROGGS joined
[02:54] *** kbaker left
[02:54] *** crab2313 left
[03:00] *** FROGGS left
[03:05] *** preflex left
[03:05] *** preflex_ joined
[03:05] *** ChanServ sets mode: +v preflex_

[03:06] *** preflex_ is now known as preflex

[03:12] *** cjwelborn joined
[03:20] *** EvanTeitelman left
[03:20] *** FROGGS joined
[03:38] *** FROGGS left
[03:40] *** FROGGS joined
[03:45] *** FROGGS left
[03:50] *** FROGGS joined
[04:08] *** eternaleye joined
[04:09] *** eternaleye_ joined
[04:09] *** eternaleye left
[04:09] *** eternaleye_ is now known as eternaleye

[04:13] *** FROGGS left
[04:15] *** SamuraiJack__ joined
[04:15] *** daniel-s joined
[04:24] *** xinming joined
[04:25] *** FROGGS joined
[04:27] *** fridim__ left
[04:33] *** baest left
[04:36] *** FROGGS left
[04:39] *** cjwelborn left
[05:08] *** xinming left
[05:09] *** xinming joined
[05:24] *** rindolf joined
[05:33] *** xenoterracide joined
[05:35] *** agathangelos_ joined
[05:40] *** raiphvb joined
[05:41] *** domidumont joined
[05:42] *** risou_awy is now known as risou

[05:44] *** raiphvb left
[05:46] *** domidumont left
[05:47] *** domidumont joined
[05:51] *** denis_boyun joined
[06:02] *** agathangelos_ left
[06:09] *** trnh joined
[06:09] *** trnh left
[06:09] *** trnh joined
[06:10] *** dmol joined
[06:13] *** xenoterracide left
[06:15] *** denis_boyun left
[06:21] *** rindolf left
[06:24] *** flussence left
[06:25] *** flussence joined
[06:26] *** FROGGS joined
[06:26] *** iSlug joined
[06:28] *** baest joined
[06:30] *** dakkar joined
[06:36] <hoelzro> good morning #perl6!

[06:36] <TimToady> o/

[06:37] <JimmyZ> \o

[06:37] *** trnh left
[06:38] <TimToady> actually, here in california it's about time for werewolves, with the full moon and all

[06:45] *** [Sno] left
[06:45] *** [Sno]_ joined
[06:49] *** trnh joined
[06:51] *** kaleem joined
[06:55] *** domidumont left
[07:05] *** sqirrel joined
[07:07] <moritz> timotimo: is it an nqp-only branch? or some things required in rakudo too?

[07:08] *** domidumont joined
[07:14] <arnsholt> hoelzro: I think changing return in NQP to being a token should be pretty straightforward. If you want a bit of help with it, I'm pretty sure I can talk you through it

[07:16] *** zakharyas joined
[07:25] <lizmat> good *, #perl6!

[07:27] <moritz> o/ lizmat, arnsholt, hoelzro, *

[07:27] <lizmat> moritz o/

[07:35] *** daxim joined
[07:58] <hoelzro> so my allocations test showed that allocations make up about 2 seconds of runtime when building the core setting

[07:59] <hoelzro> arnsholt: I can give it another shot tomorrow

[07:59] *** risou is now known as risou_awy

[07:59] *** fhelmberger joined
[08:00] <arnsholt> hoelzro: Cool, gimme a prod if you have any questions

[08:00] * hoelzro hands arnsholt a cattle prod

[08:01] <lizmat> so what was the question?

[08:01] <hoelzro> I'm sure I have them; I just don't know what they are yet =)

[08:03] <arnsholt> s/if/when/, in that case =)

[08:04] <hoelzro> I find it interesting that many languages (at least among the ones I've studied) don't really distinguish between 'if' and 'when'

[08:04] <hoelzro> either that, or I haven't studied said languages enough =)

[08:05] *** mberends joined
[08:09] <lizmat> hoelzro: I'm pretty sure said languages *do*, but their *users* don't

[08:09] <hoelzro> ah

[08:21] *** iSlug left
[08:33] *** betterwo1ld joined
[08:42] *** berekuk joined
[08:45] <arnsholt> lizmat: The distinctions a language makes is mostly dictated by its users though

[08:46] <arnsholt> Prescriptivists may rant and rave, but correct language is still socially constructed

[08:51] *** berekuk left
[08:53] *** DarthGandalf left
[08:57] *** daniel-s left
[09:03] <dalek> Perlito: 657299a | (Flavio S. Glock)++ | / (3 files):

[09:03] <dalek> Perlito: Perlito5 - grammar - format() tweak

[09:03] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/657299a41e

[09:04] <nwc10> [Coke]: On the Friday, does the caterpiller eat "Apfelsinen" and the next day is called "Sonnabend"? :-)

[09:06] *** salv0 left
[09:07] <hoelzro> how is EXPR implemented, again?

[09:08] <moritz> with magic :-)

[09:08] <hoelzro> iirc it's specially generated via the operator precedence table or something

[09:08] <moritz> it's a regular method

[09:08] <moritz> but it uses the operator precedence table

[09:08] <FROGGS> hoelzro: there is a EXPR method in nqp

[09:08] *** berekuk joined
[09:08] <hoelzro> ah!

[09:08] <FROGGS> nqp/src/HLL/Actions.nqp:77:    method EXPR($/, $key?) {

[09:09] <FROGGS> ahh, this one: nqp/src/HLL/Grammar.nqp:403:    method EXPR(str $preclim = '', int :$noinfix = 0) {

[09:13] *** berekuk left
[09:14] *** berekuk joined
[09:14] *** pernatiy joined
[09:17] *** risou_awy is now known as risou

[09:21] *** DarthGandalf joined
[09:37] *** salv0 joined
[09:52] *** Maddingue left
[09:57] *** eiro joined
[09:58] *** Maddingue joined
[10:02] *** ssutch left
[10:06] *** rindolf joined
[10:16] *** dmol left
[10:19] *** krokite left
[10:22] *** berekuk left
[10:24] *** berekuk joined
[10:55] *** sqirrel left
[10:58] *** flussence left
[10:58] *** flussence joined
[10:59] *** FROGGS left
[11:01] <arnsholt> hoelzro: The EXPR rule in the grammar is inherited from QRegex (and it does OPP using the infix, prefix etc rules). That rule then calls EXPR in the Actions class normally, just like any other rule

[11:03] <arnsholt> And now that it's written in NQP, it's a lot simpler to understand than it was in PIR =)

[11:03] *** sqirrel joined
[11:19] *** xinming left
[11:21] *** xinming joined
[11:21] <lizmat> r: my %h; my $a; $a ?? %h<a>:k !! %h<a>:v   # what's wrong with this?

[11:21] <camelia> rakudo 6f8668: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/MbN0_LQyVO‚ê§You can't adverb that‚ê§at /tmp/MbN0_LQyVO:1‚ê§------> [32mmy %h; my $a; $a ?? %h<a>:k !! %h<a>:v[33m‚èè[31m   # what's wrong with this?[0m‚ê§    expecting any of:‚ê§        pair value‚ê§¬ª

[11:22] <lizmat> std: my %h; my $a; $a ?? %h<a>:k !! %h<a>:v   # what's wrong with this?

[11:22] <camelia> std 7c17586: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Precedence of :k is too loose to use between ?? and !!; please use parens around inner expression at /tmp/ZcCwZyyk5Q line 1:‚ê§------> [32mmy %h; my $a; $a ?? %h<a>:k[33m‚èè[31m !! %h<a>:v   # what's wrong with this?[0m‚ê§    expectin‚Ä¶¬ª

[11:22] <lizmat> LTA error message is what is

[11:24] *** [Sno]_ is now known as [Sno]

[11:27] <timotimo> moritz: nqp-only

[11:28] *** berekuk left
[11:28] *** iSlug joined
[11:29] *** berekuk joined
[11:29] <timotimo> hoelzro: now the question is: even if the allocations only take up 2 seconds in total, does reducing the number of existing cursors to half/a third/two thirds/whatever by using a singleton failure cursor relieve some GC pressure or something like that?

[11:30] <hoelzro> hmm

[11:30] <hoelzro> I should do some tests on the size of objects that are being allocated

[11:31] <timotimo> actually, i could try the singleton failure match myself, i'm kind of intrigued now

[11:31] <hoelzro> if you have the time, please do

[11:31] <hoelzro> I'd like to see how it does

[11:32] <hoelzro> my schedule is full until tomorrow night =/

[11:33] <timotimo> OK

[11:33] <timotimo> hm, the cursor is a role that gets mixed into a grammar class, i wonder if i can get away with just mixing the role into an empty class to pun it?

[11:35] <timotimo> can i has your allocation counting code for this?

[11:37] <timotimo> compiling the first attempt

[11:39] <hoelzro> timotimo: it's at home =/

[11:40] <hoelzro> I might be able to reproduce it quickly, though

[11:40] <timotimo> not that important

[11:40] <timotimo> i'll just measure time to see if it makes a big difference

[11:41] <hoelzro> ok

[11:42] *** berekuk left
[11:43] <timotimo> seems like i compiled it, that's pretty good

[11:44] *** berekuk joined
[11:44] <hoelzro> \o/

[11:44] <hoelzro> compilation!

[11:44] <timotimo> FINISH IT!

[11:44] <corecatcher> :>

[11:48] <timotimo> now for an actual timing

[11:52] <timotimo> now it's at 117s for parse

[11:52] <timotimo> i don't know what exactly it was yesterday on nqp-master

[11:52] <[Coke]> nwc10: (apfelsinen, sonnabend) ,ja

[11:52] <timotimo> but i do know how much time it cost all in all

[11:52] *** salv0 left
[11:54] <timotimo> shaves off about as much as the awesome_bindattr optimisation; like 6 seconds out of 170

[11:55] <[Coke]> r: say 5/170

[11:55] <camelia> rakudo 6f8668: OUTPUT¬´0.029412‚ê§¬ª

[11:55] <[Coke]> r: say 6/170

[11:55] <camelia> rakudo 6f8668: OUTPUT¬´0.035294‚ê§¬ª

[11:55] <lizmat> timotimo: another 3%

[11:55] <lizmat> cool

[11:55] <timotimo> doesn't mean it both adds up to 6%, though

[11:55] <timotimo> also, 6% is still kinda pitiful :(

[11:55] <timotimo> where are my 50% improvements? :(

[11:56] <lizmat> I'll take those 6%

[11:56] * moritz currently tries to optimize some regex-heavy perl 5 code. What a PITA

[11:56] *** risou is now known as risou_awy

[11:57] *** xinming left
[11:57] <timotimo> moritz: imagine it had been perl6 code initially, then you'd have gotten a huge win by porting it to perl5! ;)

[11:58] *** jnap joined
[12:00] <dalek> nqp/singleton_fail: 3314cf5 | (Timo Paulssen)++ | src/QRegex/Cursor.nqp:

[12:00] <dalek> nqp/singleton_fail: use a singleton FailCursor for all parsing.

[12:00] <dalek> nqp/singleton_fail: review: https://github.com/perl6/nqp/commit/3314cf53e0

[12:01] <timotimo> here's your commit, sirs and madames

[12:01] *** jnap1 joined
[12:01] *** xinming joined
[12:02] *** jnap left
[12:03] <hoelzro> timotimo: what about memory usage/

[12:03] <hoelzro> ?

[12:03] <arnsholt> Does it change the time it takes to compile CORE.setting appreciably?

[12:03] <timotimo> no big change i can see

[12:03] <hoelzro> grr

[12:03] <hoelzro> I was hoping to see a huge win =/

[12:03] <hoelzro> oh well

[12:03] <hoelzro> 6/170 seconds isn't a bad start =)

[12:04] <timotimo> let me calculate some averages and shit

[12:05] <timotimo> the average maxresidentk of unoptimized nqp is 1_732_984

[12:05] <timotimo> i need to make a few measurements now.

[12:13] *** pmurias joined
[12:13] *** FROGGS joined
[12:13] <dalek> rakudo-js: 68ac723 | (Pawel Murias)++ | src/QAST/Compiler/JavaScript.nqp:

[12:13] <dalek> rakudo-js: Implement if ... -> $value {...}.

[12:13] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/68ac723336

[12:13] <dalek> rakudo-js: b9a56df | (Pawel Murias)++ | runtime/hash.js:

[12:13] <dalek> rakudo-js: Fix bug.

[12:13] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/b9a56dffc0

[12:13] <dalek> rakudo-js: 76c3337 | (Pawel Murias)++ | runtime.js:

[12:13] <dalek> rakudo-js: Add .to_s conversions to ops.

[12:13] <dalek> rakudo-js: 

[12:13] <dalek> rakudo-js: Implement nqp::markcodestub.

[12:13] <dalek> rakudo-js: Stub nqp::freshcoderef.

[12:13] <dalek> rakudo-js: Make nqp::where work on all objects with an _STable.

[12:13] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/76c333732b

[12:13] <dalek> rakudo-js: 56b789b | (Pawel Murias)++ | runtime (2 files):

[12:13] <dalek> rakudo-js: Implement nqp::objprimspec.

[12:14] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/56b789b856

[12:14] *** berekuk left
[12:19] *** salv0 joined
[12:20] *** skids left
[12:31] *** benabik left
[12:39] <pmurias> can I use git diff to compare untracked files? (I want to use the --color-words option which GNU diff does not have)

[12:39] <yoleaux> 18 Sep 2013 23:46Z <[Coke]> pmurias: - re smartlinks - let's start with checking to see if every variant listed in the docs has a test. (and that every variant in the code has  doc)

[12:43] *** grondilu joined
[12:44] <moritz> pmurias: you can just git add them, compare, and then unstage them again

[12:44] <moritz> or use wdiff (not color, but word-based diff)

[12:44] <moritz> $ wdiff a b

[12:44] <moritz> [-A-]{+B+} B

[12:44] * grondilu had to run 'cd /usr/include; ln -s ./i386-linux-gnu/unicode .' as root in order to compile rakudo with ICU.  Doesn't know why exactly.

[12:45] *** SamuraiJack joined
[12:45] <hoelzro> ugh

[12:45] <hoelzro> --target=jast output is not intended for human consumption, is it?

[12:47] <moritz> nope

[12:48] <nwc10> [Coke]: the choice of those two words is quirky. They are colloquial or obscure

[12:48] *** SamuraiJack__ left
[12:49] <pmurias> moritz: git diff seems to work fine without adding them :)

[12:51] <moritz> pmurias: huh. It always comes out empty for me

[12:53] *** xinming left
[12:55] <pmurias> with the --no-index option?

[12:55] *** xinming joined
[12:55] <moritz> ah, that works

[13:00] *** SamuraiJack left
[13:00] *** SamuraiJack_ joined
[13:04] *** dmol joined
[13:06] *** nyuszika7h left
[13:06] *** nyuszika7h joined
[13:09] *** berekuk joined
[13:09] *** grondilu left
[13:10] *** ajr joined
[13:11] *** ajr is now known as Guest93640

[13:11] *** Guest93640 is now known as ajr_

[13:12] *** trnh left
[13:16] <arnsholt> pmurias: vimdiff does colors (but maybe not the kind you want)

[13:18] <hoelzro> is there a way a trait could affect a Grammar's underlying regex implementation?

[13:18] <hoelzro> could one, for example, do something like this: grammar MyGrammar is RE2 { regex something { ... } }

[13:20] <moritz> hoelzro: you'd have to give it a different meta object, which will probably be done with a different keyword than 'grammar'

[13:21] <hoelzro> hmm

[13:21] <hoelzro> that would probably be ok

[13:33] <lizmat> away until much later tonight / tomorrow&

[13:36] <pmurias> git diff --no-index --word-diff does what I want

[13:37] <timotimo> is --no-index like git diff ... HEAD?

[13:37] <FROGGS> moritz: you can even override the grammar keyword lexically... it is somewhere in the RaNIW material

[13:37] <timotimo> indeed, the EXPORTHOW thingie, no?

[13:37] <FROGGS> hmm, dunno :o)

[13:40] <dalek> rakudo-js: 86893fc | (Pawel Murias)++ | runtime/null.js:

[13:40] <dalek> rakudo-js: stringifcation for nulls

[13:40] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/86893fc005

[13:40] <dalek> rakudo-js: c3ffffb | (Pawel Murias)++ | runtime.js:

[13:40] <dalek> rakudo-js: fix nqp::existskey.

[13:40] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/c3ffffb007

[13:43] *** imarcusthis- joined
[13:47] *** imarcusthis- left
[13:58] *** thou joined
[13:58] *** skids joined
[14:04] <pmurias> can the current file position on a file handle move by itself? node lacks seek/tell in it's standard libary so I could either emulate that myself or use an external library

[14:05] <hoelzro> it can

[14:05] <hoelzro> if you're sharing a file descriptor with another process

[14:06] <hoelzro> how are they missing seek and tell?

[14:06] <hoelzro> =(

[14:06] <hoelzro> could you add bindings for them?

[14:06] <timotimo> wow, that's a bad miss.

[14:06] <timotimo> but node isn't meant to do any process sharing or threading or any similar thing anyway

[14:07] <hoelzro> timotimo: what if you inherit a file from your parent process, though?

[14:08] <timotimo> node will probably not let you use it

[14:08] <hoelzro> I mean, it's stupid to have the parent affect the file offset if it's handed a file descriptor off to its child

[14:08] <hoelzro> but it's possible

[14:08] <timotimo> somehow, i think of node as a toy with training wheels everywhere

[14:08] <timotimo> maybe i should try to use it some time?

[14:08] <timotimo> i guess i will when rakudo runs on it

[14:09] *** benabik joined
[14:16] <pmurias> hoelzro: re add bindings, I can import seek from a fs-ext module (and implement tell using seek)

[14:16] <pmurias> they don't have a function to read a line also :/

[14:16] <timotimo> does seek return what tell would?

[14:17] <hoelzro> with SEEK_CUR and offset = 0, yes

[14:18] *** patspam joined
[14:18] *** Juerd joined
[14:18] *** rs0 joined
[14:18] *** pmichaud joined
[14:18] *** jfried joined
[14:19] *** pernatiy left
[14:20] *** `patch` joined
[14:23] *** trnh joined
[14:23] *** trnh left
[14:23] *** trnh joined
[14:23] *** denis_boyun joined
[14:31] *** ajr_ left
[14:32] *** sqirrel left
[14:32] *** ajr joined
[14:32] *** ajr is now known as Guest59671

[14:35] *** Guest59671 is now known as ajr_

[14:36] *** pernatiy joined
[14:45] *** Woodi left
[14:45] *** tba left
[14:46] *** tba joined
[14:51] <pmurias> so how is nqp::readlinefh supposed to work? read a line (and a bit more) using explicitly explicitly specified offsets and the seek to the exact end of line?

[14:51] *** Woodi joined
[14:51] *** dalek left
[14:52] *** dalek joined
[14:52] *** ChanServ sets mode: +v dalek

[14:54] <diakopter> pmurias: see it in moarvm

[14:55] <diakopter> JimmyZ did it I think

[14:55] <FROGGS> and me

[14:55] <FROGGS> there is also a good test in moarvm

[14:55] <diakopter> i mean FROGGS 

[14:55] <FROGGS> t/nqp/19

[15:00] *** risou_awy is now known as risou

[15:04] *** xinming left
[15:04] *** xinming joined
[15:09] *** sqirrel joined
[15:10] <pmurias> what's the default encoding?

[15:10] *** dmol left
[15:14] *** xenoterracide joined
[15:15] <pmurias> doe nqp::readlinefh work on utf16 files (it doesn't seem to looking at the code)

[15:22] <JimmyZ> pmurias: there is an setencoding

[15:22] <JimmyZ> pmurias: but looks like utf16 encoding doesn't work on moarvm

[15:27] *** FROGGS left
[15:31] *** zakharyas left
[15:35] *** colomon left
[15:38] <pmurias> :/ node.js doesn't support the latin1 encoding

[15:38] <pmurias> not that latin1 doesn't deserve to die ;)

[15:42] *** kaleem left
[15:50] *** colomon joined
[15:55] <dalek> rakudo-js: 03810bc | (Pawel Murias)++ | runtime.js:

[15:55] <dalek> rakudo-js: Make nqp::primspec handle nqp::null().

[15:55] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/03810bc87c

[15:55] <dalek> rakudo-js: 24a4cb2 | (Pawel Murias)++ | / (2 files):

[15:55] <dalek> rakudo-js: Pass test 19.

[15:55] <dalek> rakudo-js: 

[15:55] <dalek> rakudo-js: Implement nqp::tellfh,nqp::readlinefh,nqp::chdir,nqp::rmdir,

[15:55] <dalek> rakudo-js: nqp::mkdir,nqp::getstdin,nqp::getstdout,nqp::getstderr and nqp::unlink.

[15:55] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/24a4cb2c40

[15:56] <dalek> rakudo-js: a95feca | (Pawel Murias)++ | run_tests:

[15:56] <dalek> rakudo-js: Add test 19 to run_test.

[15:56] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/a95fecaa46

[16:01] <PerlJam> Anyone want to vet some changes I'm thinking of making to the release guide?  See https://gist.github.com/perlpilot/6625489

[16:01] <colomon> oooo, release day!  does this mean we're finally getting a bump in the NQP version?

[16:02] <PerlJam> I moved the list of releases that have already happened to the bottom of the document and removed some parrot-specific bits and re-emphasized some other parroty bits.

[16:04] * moritz will be gone until late Sunday or so

[16:04] <moritz> have a nice Rakudo release day, and a nice weekend!

[16:05] *** coax75ohm joined
[16:05] <PerlJam> moritz: you have fun in whatever you're doing too! :)

[16:05] *** xenoterracide left
[16:06] *** FROGGS joined
[16:06] *** ajr_ left
[16:07] *** ajr joined
[16:07] *** kaare_ joined
[16:07] *** ajr is now known as Guest85591

[16:08] *** Guest85591 is now known as ajr_

[16:09] *** dmol joined
[16:19] <[Coke]> nwc10: your truth is a downer.

[16:19] * [Coke] thinks pmurias is doing an awful lot of work during the pencils nearly down period. shhhh. ;)

[16:22] *** xenoterracide joined
[16:24] <daxim> remember 2008?  http://use.perl.org/use.perl.org/_Ovid/journal/36776.html

[16:24] *** domidumont left
[16:30] <pmurias> jnthn: we have both a NQPRegex class and a NQPRegex knowhow?

[16:31] *** trnh left
[16:32] *** panchiniak joined
[16:32] *** iSlug left
[16:33] *** daxim left
[16:33] <pmurias> [Coke]: it's better then after the pencils down period ;)

[16:36] *** denis_boyun__ joined
[16:36] *** denis_boyun left
[16:38] *** panchiniak left
[16:38] <dalek> rakudo-js: 1431cb5 | (Pawel Murias)++ | / (3 files):

[16:38] <dalek> rakudo-js: Misc fixes attempting to get grammars to work in standalone nqp.

[16:38] <dalek> rakudo-js: 

[16:38] <dalek> rakudo-js: Implement nqp::push_s.

[16:38] <dalek> rakudo-js: Fix the !dba regex subtype.

[16:38] <dalek> rakudo-js: Set the custom-regex-lib nqp-compiler.nqp.

[16:38] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/1431cb565e

[16:40] *** ajr_ left
[16:42] *** coax75ohm left
[16:44] *** lambdacat joined
[16:44] *** domidumont joined
[16:45] <masak> oh hai, #perl6...

[16:45] <yoleaux> 01:14Z <timotimo> masak: would you consider mergint awesome_bindattr before cutting the release today?

[16:45] <masak> ...from a train! :D

[16:46] *** fhelmberger left
[16:46] <masak> timotimo: yes, I'll consider it.

[16:46] <geekosaur> entrainced by perl6?

[16:47] * masak starts by backlogging

[16:51] <masak> timotimo: [backlog] "Luminosity"

[16:54] <pmurias> jnthn: I'm confused by the fact that we have a NQPRegex in the setting and a different one in our regex library

[17:01] *** pernatiy left
[17:08] <benabik> Isn't jnthn on vacation?

[17:09] <[Coke]> Yes.

[17:13] *** sqirrel left
[17:15] *** iSlug joined
[17:18] *** lambdacat left
[17:18] <TimToady> pmurias: and he said to use .tell becuase he didn't expect to backlog

[17:18] <TimToady> *au

[17:25] <pmurias> .tell?

[17:25] <pmurias> ahh, the bot command

[17:26] *** krokite joined
[17:26] *** krokite left
[17:26] *** krokite joined
[17:26] <pmurias> I was implement the nqp::tellfh(...) today so I got confused ;)

[17:27] <benabik> Is jnthn a file handle?

[17:28] <diakopter> yes, a buffered one

[17:28] <nwc10> [Coke]: I don't know. Be amused that the choice of wording is slightly quirky, and happy that you (like me) have learned a couple of obscure words

[17:28] <nwc10> (just be aware that they aren't the usual ones)

[17:28] <nwc10> and be thankful that they aren't Austrian dialect :-)

[17:29] *** pmurias left
[17:29] *** ssutch joined
[17:33] <jnthn> Well, that was eventful...

[17:34] <TimToady> eh?

[17:34] <nwc10> but did it eventually end up with you in the right place, with your luggage?

[17:34] <nwc10> can they use the plane again?

[17:34] <masak> jnthn! \o/

[17:34] <TimToady> jnthn! /o\

[17:34] <jnthn> nwc10: I'm pretty sure they will use that plane again, but it'll need the multiple things wrong with it fixed... :S

[17:34] <nwc10> oh, one of those?

[17:35] <nwc10> did the airport fire engines come out to meet you?

[17:35] <jnthn> Yeah. 15 minutes in... "So, we have this landing geer issue..." 

[17:35] <nwc10> oh :-/

[17:35] <jnthn> *gear

[17:35] *** dakkar left
[17:35] <jnthn> Made it down safely, but the plane lost its ability to be steered, so we nicely clogged the runway for a while until we could be towed away...

[17:35] <nwc10> last year, the "problem" was "fixed", and then after quite a while we arrived on the runway. But the meet and greet from all the fire engines was highy uneventful.

[17:36] <jnthn> Yeah, the landing in the end was thankfully uneventful.

[17:36] <nwc10> aha. that sounds a bit too much "interesting times"

[17:36] <TimToady> maybe we shouldn't allow jnthn to fly on the same plane as jnthn...

[17:37] <jnthn> Yes, the pilot spoke very reassuringly but I'm not sure how much, if anything, he left out. :)

[17:37] <jnthn> Anyway, ended up rather late. And on a different plane. :)

[17:38] <nwc10> were the cabin crew, um, bricking themselves?

[17:38] *** sqirrel joined
[17:39] <jnthn> The one I had chance to observe seemed quite composed in the air, but decided I was a good person to talk a lot to after we landed. :)

[17:39] * masak read that as "seemed quite composed of air"

[17:40] <nwc10> aha - OK. Yes, on that flight the crew didn't want to tell us what had happened, but they did seem shaken. Kept it all together while in the air.

[17:40] <nwc10> so, I'm buying into your assumption that some stuff was left out.

[17:41] <jnthn> Well, the fact the thing couldn't be steered off the runway after we landed suggests there was a slightly more interesting failure than "the wheel door won't close properly"

[17:41] <nwc10> you landed back where you took off from?

[17:42] <nwc10> (with that plane)

[17:42] <TimToady> well, 15 minutes in sounds like they couldn't crank it up, so maybe just a general hydraulics failure in the area

[17:42] <jnthn> Yeah

[17:42] <jnthn> After a lot of circling because we were too heavy to land.

[17:43] <diakopter> "we don't dump fuel; we just burn it"

[17:48] <benabik> Well, dumping fuel ends with flammables falling on people's heads.

[17:48] <TimToady> and if you try to flare it off, and it doesn't ignite immediately, you have a lovely fuel-air bomb

[17:49] <jnthn> I'm pretty sure burning it off was by a good way the best option here

[17:49] * TimToady thinks they reserve dumping for when you have to land Right Now

[17:49] *** thou left
[17:50] *** thou joined
[17:50] <jnthn> I'd imagine so. It doesn't sound like a great option.

[17:50] <TimToady> but acutally, knowing how they design hydraulics, it's unlikely to be hydraulics cause this kind of issue, though it could be mechanicals closely associated with the hydraulics

[17:51] <TimToady> generally with simple hydraulic failure you just lose 25% of your slew rate or so, assuming four systems

[17:51] <TimToady> and if you lost all your hydraulics, you'd be in the news

[17:52] <jnthn> Aye... Anyways, all worked out well in the end.

[17:52] <jnthn> Think I'll go find some dinner while there's still places open :)

[17:52] <TimToady> well, er, continue to have the appropriate amount of fun!

[17:53] <masak> timotimo: http://luminous.elcenia.com/story.shtml

[17:53] <jnthn> :P

[17:53] <jnthn> bbl

[17:56] *** colomon left
[17:59] *** colomon joined
[18:00] <masak> presently running the spectests on my Linux install on the laptop. getting lots of "Dubious" with test files returning 1 (wstat 256, 0x100).

[18:03] <masak> hm. reading the output more closely, seems 'make spectest' failed to fast-forward t/spec properly. false alarm -- so far.

[18:08] *** thou left
[18:17] *** iSlug left
[18:18] *** dmol left
[18:19] <masak> heh, this second run of 'make spectest' looks much better. :)

[18:20] *** dmol joined
[18:22] *** cjwelborn joined
[18:26] *** pecastro_ joined
[18:28] *** pecastro left
[18:30] *** denis_boyun__ left
[18:31] <Tene> masak: Yes, luminosity was a fun read.

[18:38] *** denis_boyun joined
[18:39] <masak> Tene: moritz suggested it. I haven't started reading it myself yet.

[18:39] <masak> Tene: though today (through the hpmor subreddit), I found http://parahumans.wordpress.com/table-of-contents/ which is supposedly very much worth reading.

[18:41] *** iSlug joined
[18:41] *** sftp_ joined
[18:42] <Tene> It was fun, but somehow I never got around to finishing the latest third or so.

[18:43] *** sftp left
[18:49] <masak> huh.

[18:54] *** Rotwang joined
[18:55] *** risou is now known as risou_awy

[18:57] *** domidumont left
[19:06] *** sftp joined
[19:08] *** zwut00 joined
[19:08] *** zwut00 left
[19:10] *** sftp_ left
[19:12] *** denis_boyun left
[19:21] *** skids left
[19:26] *** SamuraiJack_ left
[19:31] *** ksh left
[19:45] *** pernatiy joined
[19:47] *** lichtkind joined
[19:51] *** iSlug left
[19:52] *** rindolf left
[19:52] *** denis_boyun joined
[19:53] *** denis_boyun left
[19:54] *** spider-mario joined
[20:01] *** skids joined
[20:14] <lue> hello world o/

[20:14] <masak> hellue \o

[20:14] <masak> timotimo's origin/awesome_bindattr is a fast-forward merge from nqp's origin/master. it passes all tests. should I merge it into master?

[20:14] <masak> or, to put it this way: is there any compelling reason not to?

[20:15] <masak> I haven't tried spectesting Rakudo on top of the merged version. maybe I should.

[20:16] <nwc10> that would seem wise

[20:16] <masak> :)

[20:16] <nwc10> how long does it take to build and run the tests of what goes into Star?

[20:24] *** kaare_ left
[20:27] <masak> it will take another ~30 minutes until I get home and can start the release engineering.

[20:27] <masak> it would be very useful if someone could build Rakudo on top of nqp's awesome_bindattr branch, to see if Rakudo passes all the spectests.

[20:28] <masak> if that doesn't happen before I get home, I may simply decide on the safer option of releasing without merging.

[20:28] <masak> (because it's late and I'm tired)

[20:29] <nwc10> I'm not in a position to do this

[20:29] <nwc10> (It is late and we all had a bad night last night, and we may get another one)

[20:31] <diakopter> "we all"?

[20:31] * masak guesses dad + mom + child

[20:31] <nwc10> correct, although I wouldn't spell mom that way :-)

[20:32] <nwc10> actually, "bit of a bad night" is more accurate, but it's enough

[20:32] * masak .oO( you Brits, you mummify words )

[20:33] <masak> as for me, I speak and write International English, which is a euphemism for scavenging BE and AE for the best parts and using a pidgin of those

[20:34] <masak> (as taught by Swedish television) :)

[20:39] <masak> detrain &

[20:41] *** spider-mario left
[20:41] <timotimo> masak, in the backlog i wrote i spectested it

[20:46] <diakopter> jdk7 skipped from update 25 to update 40?

[20:48] <diakopter> meh, okay..

[20:56] <timotimo> one increment per security hole plugged

[20:57] *** djanatyn left
[20:57] <skids> .oO(Because "Mom" better damn well be capitalized! :-)

[21:00] *** zwut00 joined
[21:03] *** skids left
[21:03] *** benabik left
[21:07] *** djanatyn joined
[21:09] *** Rotwang left
[21:09] *** alester left
[21:09] *** Tene joined
[21:09] *** Tene left
[21:09] *** Tene joined
[21:10] *** sqirrel left
[21:10] <hoelzro> is there a (working) way to get a file's modified time?

[21:11] *** dmol left
[21:13] *** BenGoldberg joined
[21:14] <FROGGS> nqp: nqp::statfh()

[21:14] <camelia> nqp: OUTPUT¬´Error while compiling block : Error while compiling op statfh (source text: "nqp::statfh()"): No registered operation handler for 'statfh'‚ê§current instr.: '' pc 52004 (src/stage2/QAST.pir:18966) (src/stage2/QAST.nqp:3186)‚ê§¬ª

[21:14] <FROGGS> nqp: nqp::stat)

[21:14] <camelia> nqp: OUTPUT¬´Confused at line 2, near "nqp::stat)"‚ê§current instr.: 'panic' pc 14693 (src/stage2/gen/NQPHLL.pir:5223) (src/stage2/gen/NQPHLL.nqp:279)‚ê§¬ª

[21:14] <FROGGS> nqp: nqp::stat()

[21:14] <camelia> nqp: OUTPUT¬´Error while compiling block : Error while compiling op stat (source text: "nqp::stat()"): Operation 'stat' requires 2 operands, but got 0‚ê§current instr.: '' pc 52004 (src/stage2/QAST.pir:18966) (src/stage2/QAST.nqp:3186)‚ê§¬ª

[21:14] <FROGGS> r: say ".".IO.^methods

[21:14] <camelia> rakudo 6f8668: OUTPUT¬´open close eof get getc lines read seek tell write opened t print slurp spurt copy chmod IO path flush encoding d e f s l r w x z modified accessed changed say Str gist perl <anon> <anon>‚ê§¬ª

[21:15] <hoelzro> ah, thanks FROGGS

[21:15] <FROGGS> r: say ".".IO.modified

[21:15] <camelia> rakudo 6f8668: OUTPUT¬´1379320960‚ê§¬ª

[21:20] <masak> timotimo: oh, you spectested it? well, then I don't see a reason not to merge.

[21:20] <yoleaux> 21:10Z <PerlJam> masak: Have a look at https://gist.github.com/perlpilot/6625489 and tell me your thoughts.  I've de-emphasized Parrot a little bit and moved some stuff around.  I'm waffling on actually changing the release guide because I can't quite decide if it's not better to just wait until moarvm/jvm are the standard backends.

[21:22] <masak> PerlJam: is this something I should have a look at before I start release engineering? because I was thinking of doing that... now.

[21:22] <PerlJam> masak: nah, it can wait

[21:23] <PerlJam> masak: or you could follow it and see if you get lost :)

[21:23] <dalek> nqp: 1af1098 | (Timo Paulssen)++ | src/vm/parrot/ (3 files):

[21:23] <dalek> nqp: WIP on bind/set/getattr with hints

[21:23] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1af1098993

[21:23] <dalek> nqp: bd80cda | (Timo Paulssen)++ | src/vm/parrot/QAST/Operations.nqp:

[21:23] <dalek> nqp: this actually works!

[21:23] <dalek> nqp: review: https://github.com/perl6/nqp/commit/bd80cdaaf8

[21:23] <dalek> nqp: 1e8a295 | (Timo Paulssen)++ | src/vm/parrot/QAST/Operations.nqp:

[21:23] <dalek> nqp: confusion about argument order cleared up.

[21:23] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1e8a295fc1

[21:23] <masak> heh :)

[21:23] <masak> timotimo: awesome_bindattr merged. feel free to remove the branch.

[21:24] <masak> Rakudo release process starts... now.

[21:24] <masak> do not adjust your set.

[21:25] <PerlJam> masak: good luck!

[21:25] <masak> this month's release name: Shanghai.

[21:25] <masak> why? because I say so, that's why.

[21:25] <PerlJam> be sure to put that in the release announcement :)

[21:25] <masak> (they have a .pm group, and I visited Shanghai in July.)

[21:27] <masak> that's way less crazy than some of the past code names. :)

[21:27] <masak> "Bicycle"!?

[21:28] <masak> :P

[21:28] <timotimo> masak: you could have merged the failure branch thingie, too

[21:28] <timotimo> i think

[21:28] <Tene> Just don't name it "release name"

[21:28] <timotimo> oh, actually i have not spectested that

[21:30] <dalek> perl6-roast-data: 60a3879 | coke++ | / (5 files):

[21:30] <dalek> perl6-roast-data: today (automated commit)

[21:30] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/60a3879d6d

[21:30] <masak> timotimo: then let's wait.

[21:31] <timotimo> sure, no problem

[21:31] <masak> Tene: is "release name" a .pm group?

[21:31] <timotimo> maybe hoelzro's future work on it will create better performance gains

[21:31] * PerlJam recently created CorpusChristi.pm  (just saying ;-)

[21:31] <Tene> masak: Not currently.

[21:32] <Tene> I'd advise against changing that, however.

[21:33] <masak> oy vey, the ChangeLog hasn't been updated much lately, has it?

[21:33] <timotimo> oh my :(

[21:33] <timotimo> have we even changed anything?

[21:33] <timotimo> i think we've all just been sitting on our butts

[21:36] <timotimo> all the pull requests i see relate to jvm, chdir, shell and panda for jakudo

[21:38] <dalek> rakudo/nom: a8ea2a5 | masak++ | docs/announce/2013.09.md:

[21:38] <dalek> rakudo/nom: [docs/announce/2013.09.md] draft announcement

[21:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a8ea2a5a3c

[21:38] <masak> eyeballs welcomed.

[21:38] <masak> timotimo: I can't imagine that with all the lizmat activity, we havn't changed anything!

[21:39] *** donaldh joined
[21:39] <masak> but let's find out. ChangeLog is next.

[21:39] * masak pops open a stout

[21:39] <PerlJam> masak: commits 5caf9288d38b2225df879f58acf003f9ecbcc60b and  283f763a5e670e66951ec837a761088f26e9cad9 should make it into the ChangeLog IMHO  :)

[21:39] <PerlJam> (just reading the git log right now)

[21:40] <masak> ok.

[21:40] * masak .oO( people are so full of suggestions, but do they commit to the ChangeLog? noooooo ) :P

[21:41] <dalek> roast: 28715ba | (David Warring)++ | S05-mass/charsets.t:

[21:41] <dalek> roast: more charset tests, including unicode classes

[21:41] <dalek> roast: review: https://github.com/perl6/roast/commit/28715ba0ab

[21:42] <PerlJam> masak: if you look at the release_guide.pod, you'll see that step one is to remind people to update the ChangeLog a few days before the release  ;)

[21:42] *** xinming left
[21:42] <masak> well, shoot.

[21:42] <timotimo> hehe

[21:42] <masak> will a retroactive reminder do?

[21:43] <masak> or is it enough if I berate you for failing to remind me to remind you to update the changelog? :P

[21:44] *** xinming joined
[21:46] <FROGGS> masak: there is no parrot release, no?

[21:46] <PerlJam> heh

[21:47] <FROGGS> because there actually is a patch which would be nice having

[21:47] <PerlJam> FROGGS: you should read my reformulation of the release_guide too:  https://gist.github.com/perlpilot/6625489

[21:47] <PerlJam> :-)

[21:47] *** krokite left
[21:47] <PerlJam> FROGGS: which patch?

[21:48] <FROGGS> my patch :P

[21:48] <timotimo> JVM sockets could go in, too

[21:48] <FROGGS> PerlJam: a bugfix about utf8 character sequences being split by chunksize

[21:49] <PerlJam> aye, I've already found it in the parrot logs :)

[21:49] <PerlJam> FROGGS++

[21:49] <FROGGS> hehe, I guess it wasn't too hard to find *g*

[21:49] <PerlJam> (I've stopped paying attention to parrot, so I hadn't noticed that you'd even submitted a patch)

[21:50] <masak> FROGGS: I will simply follow the current release_guide, and I suspect that will end up without your patch this time :/

[21:50] <masak> FROGGS: I'm sorry there wasn't a Parrot release.

[21:50] <masak> it would've been nice to get your patch in.

[21:51] <FROGGS> masak: well, as it sounds only you and me had the issue anyway

[21:51] <masak> troo

[21:59] *** trnh joined
[21:59] *** trnh left
[21:59] *** trnh joined
[22:04] <dalek> rakudo/nom: d93f1da | masak++ | docs/ChangeLog:

[22:04] <dalek> rakudo/nom: [docs/ChangeLog] update since last release

[22:04] <dalek> rakudo/nom: 

[22:04] <dalek> rakudo/nom: Highly subjective; please add stuff I missed, probably unintentionally.

[22:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d93f1daab5

[22:04] <dalek> nqp: 931fd2b | duff++ | docs/release_guide.pod:

[22:04] <dalek> nqp: minor wording change

[22:04] <dalek> nqp: review: https://github.com/perl6/nqp/commit/931fd2b2cc

[22:05] <masak> PerlJam++

[22:05] * masak makes the corresponding change in the release announcement

[22:06] * PerlJam afk &

[22:07] <dalek> rakudo/nom: aa1417b | masak++ | docs/announce/2013.09.md:

[22:07] <dalek> rakudo/nom: reword slightly

[22:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/aa1417b640

[22:09] <dalek> rakudo/nom: 733c824 | masak++ | docs/announce/2013.09.md:

[22:09] <dalek> rakudo/nom: [docs/announce/2013.09.md] some of the changes

[22:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/733c8249c0

[22:09] *** trnh left
[22:10] <diakopter> masak: learnperl6.com makes me cry

[22:10] <diakopter> *headfloor*

[22:10] <masak> that has absolutely nothing to do with release engineering.

[22:10] <masak> focus! :)

[22:11] <diakopter> first I cry from laughing so hard.. then I cry from the sadness of it

[22:16] <dalek> rakudo/nom: dbaa372 | masak++ | docs/announce/2013.09.md:

[22:16] <dalek> rakudo/nom: [docs/announce/2013.09.md] add contributors

[22:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dbaa3726a3

[22:16] <masak> diakopter: while crying, please review the release announcement.

[22:17] * masak .oO( "...presently" )

[22:19] *** BenGoldberg left
[22:23] *** lichtkind left
[22:23] <dalek> rakudo/nom: 965ee80 | masak++ | docs/release_guide.pod:

[22:23] <dalek> rakudo/nom: [release_guide.pod] move current release up

[22:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/965ee8027f

[22:23] <dalek> rakudo/nom: 84b953e | masak++ | docs/release_guide.pod:

[22:23] <dalek> rakudo/nom: [release_guide.pod] add some future release dates

[22:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/84b953ef73

[22:24] *** FROGGS left
[22:24] <masak> descending into NQP release sub-process.

[22:25] *** pmurias joined
[22:26] <masak> indeed, by the instructions of the NQP release guide, I should *not* bump the Parrot revision.

[22:27] <dalek> nqp: 9441e1c | masak++ | VERSION:

[22:27] <dalek> nqp: bump VERSION to 2013.09

[22:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/9441e1cf31

[22:28] <pmurias> .tell jnthn why is NQPRegex defined twice? (as a knowhow in the setting, and as a class in the regex lib)

[22:28] <yoleaux> pmurias: I'll pass your message to jnthn.

[22:39] *** skids joined
[22:40] <masak> NQP tag pushed.

[22:41] <dalek> roast: f7cb1e8 | (David Warring)++ | S05-mass/charsets.t:

[22:41] <dalek> roast: :Punct => :Punctuation

[22:41] <dalek> roast: review: https://github.com/perl6/roast/commit/f7cb1e8139

[22:42] <masak> nqp-2013.09.tar.gz uploaded.

[22:43] <masak> popping the call stack; back to your regularly scheduled Rakudo release engineering.

[22:43] * diakopter returns from biweekly twitter turn-the-other-cheek-to-p6-bashing

[22:44] <dalek> rakudo/nom: 337cf72 | masak++ | tools/build/NQP_REVISION:

[22:44] <dalek> rakudo/nom: [release] bump NQP revision

[22:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/337cf72bc5

[22:44] <dalek> rakudo/nom: f86a1a8 | masak++ | VERSION:

[22:44] <dalek> rakudo/nom: [release] bump VERSION

[22:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f86a1a8311

[22:45] <diakopter> except lately it's been more like turn-the-other-cheek-to-raiph-reactionism

[22:46] <diakopter> er, reactionism-to-raiph

[22:46] <masak> doy++ # https://twitter.com/doyster/status/380009297998282752

[22:47] <REPLeffect> diakopter: out of curiousity, what about learnperl6.com makes you cry (with the caveat that I have only glanced at the main page)

[22:48] <masak> REPLeffect: it's either the CGI or the PIR, I'll bet.

[22:48] <REPLeffect> what about the CGI?

[22:48] <masak> CGI ceased to be a good idea at least a decade ago. PIR was never a good idea.

[22:49] *** markov left
[22:49] <diakopter> well.

[22:49] <lue> .oO(But... CGI is the future!)

[22:49] <yoleaux> lue: Sorry: that command is a web-service, but it didn't respond in plain text.

[22:50] <REPLeffect> :D

[22:50] <lue> w-what?

[22:50] <lue> .oO(Webservice)

[22:50] <diakopter> .oO(But...

[22:50] <yoleaux> diakopter: Sorry: that command is a web-service, but it didn't respond in plain text.

[22:50] <diakopter> .oO(But

[22:50] <diakopter> .oO(But..

[22:50] <yoleaux> diakopter: Sorry: that command is a web-service, but it didn't respond in plain text.

[22:50] <diakopter> .oO(But.

[22:50] <yoleaux> diakopter: Sorry: that command is a web-service, but it didn't respond in plain text.

[22:50] <diakopter> .oO(GET.

[22:50] <yoleaux> diakopter: Sorry: that command is a web-service, but it didn't respond in plain text.

[22:51] <geekosaur> o.O

[22:51] <REPLeffect> oh, geez.  Has that page not been updated since 2009? 

[22:52] *** markov joined
[22:52] <lue> .TestingYoleaux.

[22:52] <yoleaux> lue: Sorry: that command is a web-service, but it didn't respond in plain text.

[22:53] <lue> .TestingYoleaux

[22:53] <diakopter> REPLeffect: well, it describes itself as "document as I learn Perl 6, for others who want to learn Perl 6"... but then it teaches some PIR

[22:54] <REPLeffect> anyone know who's domain it is?

[22:54] <pmurias> heh, learnperl6.com uses the horrible parrot Env PMC I had the pleasure to remove from nqp

[22:55] <masak> pmurias++

[22:55] <diakopter> REPLeffect: whois says Lyle Hopkins

[22:55] <REPLeffect> was just getting there :D

[22:56] <masak> it's after midnight here. do I mark the release date on Wikipedia as 2013-09-19 or 2013-09-20.

[22:56] <masak> I know LylePerl. he's here occasionally.

[22:56] <masak> he was at YAPC::EU.

[22:56] <masak> diakopter: he was the one who lightning talked about helping a designer.

[22:57] <REPLeffect> being that's a hosting site, I doubt Lyle spends much time with Perl 6 (or that he's ever spent any)

[22:57] <lue> masak: I recommend consulting UTC.

[22:57] <masak> well, then I have another hour. should be fine.

[22:58] <masak> REPLeffect: correct.

[22:59] <diakopter> masak: orly

[23:01] *** donaldh left
[23:05] <masak> yarly

[23:08] <masak> rakudo tarball uploaded.

[23:11] <masak> p6c announcement email sent.

[23:11] *** Mouq joined
[23:17] <masak> Wikipedia article updated.

[23:17] <masak> done. standing down release mode.

[23:18] <masak> conveniently, the beer is already finished -- so I can skip the celebrating, too :)

[23:18] <masak> ...and go directly to bed.

[23:18] <diakopter> gnaight

[23:18] <masak> 'night, diakopter, #perl6

[23:23] *** risou_awy is now known as risou

[23:30] *** Pleiades` left
[23:31] *** Pleiades` joined
[23:38] *** BenGoldberg joined
[23:46] *** jnap1 left
[23:47] *** jnap joined
[23:52] *** EvanTeitelman joined
[23:54] *** Mouq left
