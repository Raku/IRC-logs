[00:00] <diakopter> theoretically there are other invokable things besides coderefs

[00:00] <diakopter> like CFunction

[00:01] <diakopter> P5SV will be invokable, ish

[00:16] *** Psyche^ left
[00:17] *** Psyche^ joined
[00:27] *** Mouq left
[00:45] *** colomon left
[00:45] *** Mouq joined
[00:52] *** colomon joined
[01:04] *** colomon left
[01:07] *** grondilu left
[01:07] *** colomon joined
[01:18] *** FROGGS_ joined
[01:22] *** FROGGS left
[01:28] *** dayangkun__ left
[01:31] *** benabik joined
[01:40] *** dayangkun__ joined
[01:45] *** _ilbot left
[01:46] *** _ilbot joined
[01:49] *** zakharyas joined
[02:12] <dalek> nqp: 49838b9 | dwarring++ | examples/rubyish/rubyish-examples/fractal-tree.rbi:

[02:12] <dalek> nqp: colored the fractal tree

[02:12] <dalek> nqp: review: https://github.com/perl6/nqp/commit/49838b9cc4

[02:12] <dalek> nqp: 3a3ae17 | dwarring++ | examples/rubyish/t/ (2 files):

[02:12] <dalek> nqp: nqp::xxx -> nqp:xxx

[02:12] <dalek> nqp: review: https://github.com/perl6/nqp/commit/3a3ae17e48

[02:12] <dalek> nqp: d64ee9f | dwarring++ | examples/rubyish/rubyish.nqp:

[02:12] <dalek> nqp: rubyish '\' source line continuation, etc

[02:12] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d64ee9fb78

[02:13] <JimmyZ> std: macro prefix:<if>($a, $b) { ... }

[02:13] <camelia> std a0bcfb1: OUTPUT«Potential difficulties:␤  $b is declared but not used at /tmp/r_s9rZsx3Y line 1:␤------> macro prefix:<if>($a, ⏏$b) { ... }␤  $a is declared but not used at /tmp/r_s9rZsx3Y line 1:␤------> macro prefix:<if>(⏏$a, $b) {…»

[02:14] <JimmyZ> std: macro prefix:<if>($a, $b) { if {{{ $a + $b }}} }

[02:14] <camelia> std a0bcfb1: OUTPUT«===SORRY!===␤Expression needs parens to avoid gobbling block at /tmp/N395niHeeW line 1:␤------> macro prefix:<if>($a, $b) { if ⏏{{{ $a + $b }}} }␤Missing block (apparently gobbled by expression) at /tmp/N395niHeeW line…»

[02:14] <JimmyZ> std: macro prefix:<if>($a, $b) { $a + $b }

[02:14] <camelia> std a0bcfb1: OUTPUT«ok 00:01 131m␤»

[02:34] <japhb__> Gah, from the absurdly slow department:

[02:34] <japhb__> r: IO::Spec::Unix.canonpath("/a/.") for ^1000; say now - BEGIN now;

[02:34] <camelia> rakudo e22ac2: OUTPUT«(timeout)»

[02:35] <japhb__> r: IO::Spec::Unix.canonpath("/a/.") for ^500; say now - BEGIN now;

[02:35] <camelia> rakudo e22ac2: OUTPUT«9.2826684␤»

[02:35] <japhb__> 'cause, OUCH.  That function is used deep in the call trees of a lot of IO stuff.

[02:36] <JimmyZ> It was much slower

[02:43] *** jnap left
[02:49] *** lowpro joined
[02:52] <japhb__> JimmyZ: Meaning, at some point in the past it was even slower than the above would indicate?

[02:53] <JimmyZ> yes, iirc

[02:59] *** xenoterracide joined
[03:00] <japhb__> I get the feeling that speeding up the current version will involve either A) finding an obvious oops, or B) involve deep stuff, because canonpath consists almost entirely of '$path ~~ s {} = ""' constructions, with a few eq comparisons and such.  Meaning that most likely, somehow that construction is really dragging.

[03:11] <labster> oh ouch, that is slow.

[03:13] <labster> r: for ^1000 { my $str = 'a||b'; $str ~~ s/ '||' /\|/ }; say now - BEGIN now;

[03:13] <camelia> rakudo e22ac2: OUTPUT«4.90180351␤»

[03:14] <labster> r: for ^1000 { my $str = 'a||b'; $str ~~ s { '||' } = '|' }; say now - BEGIN now;

[03:14] <camelia> rakudo e22ac2: OUTPUT«5.12081435␤»

[03:14] *** Mouq left
[03:19] *** woolfy left
[03:20] <labster> The construction looks like it could be optimized a little, most of that time looks like it's in building strings.

[03:21] <labster> r: IO::Spec.Unix.canonpath('/a/b') for ^1000 ; say now - BEGIN now;

[03:22] <camelia> rakudo e22ac2: OUTPUT«No such method 'Unix' for invocant of type 'IO::Spec'␤  in block  at /tmp/WlkGNcMKSB:1␤␤»

[03:22] <labster> r: IO::Spec::Unix.canonpath('/a/b') for ^1000 ; say now - BEGIN now;

[03:22] <camelia> rakudo e22ac2: OUTPUT«(timeout)»

[03:22] <lizmat> decommute&

[03:22] *** lizmat left
[03:23] <japhb__> Odd time to be decommuting ... what timezone are you in today, lizmat?

[03:23] <japhb__> .oO( Hawaii )

[03:25] *** xinming left
[03:25] *** lowpro left
[03:25] *** xinming joined
[03:45] *** preflex left
[03:46] *** preflex_ joined
[03:46] *** ChanServ sets mode: +v preflex_

[03:46] *** preflex_ is now known as preflex

[03:59] *** xenoterracide left
[04:00] *** xenoterracide joined
[04:07] <dalek> ecosystem: c2e87a5 | (Andrew Egeler)++ | META.list:

[04:07] <dalek> ecosystem: Add simplistic Email::MIME (no charset/transfer-encoding/creation support yet)

[04:07] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/c2e87a561a

[04:20] <dalek> specs: 75b2e71 | (Geoffrey Broadwell)++ | S99-glossary.pod:

[04:20] <dalek> specs: Correcting sigil definition in S99 to include &.  Still not including the Role names to avoid further confusion.

[04:20] <dalek> specs: review: https://github.com/perl6/specs/commit/75b2e71f33

[04:22] *** kurahaupo_ joined
[04:23] *** hummeleB1 joined
[04:28] *** [Sno] left
[04:28] *** skids joined
[04:31] *** dayangkun__ left
[04:31] *** dayangkun joined
[04:43] <diakopter> retupmoca++

[04:45] <diakopter> retupmoca: nice work :)

[04:51] *** kurahaupo_ left
[04:52] *** kurahaupo_ joined
[05:00] *** kurahaupo_ left
[05:00] *** darutoko joined
[05:03] *** skids left
[05:14] *** hummeleB1 left
[05:16] *** kurahaupo_ joined
[05:17] *** ssutch left
[05:21] *** SamuraiJack_ joined
[05:28] *** BenGoldberg left
[05:39] *** daniel-s__ joined
[05:40] *** _daniel-s__ joined
[05:42] *** daniel-s_ left
[05:44] *** daniel-s__ left
[06:00] *** [Sno] joined
[06:08] *** frdmn left
[06:15] *** SHODAN joined
[06:20] *** kurahaupo__ joined
[06:20] *** kurahaupo_ left
[06:25] *** xinming left
[06:26] *** xenoterracide left
[06:26] *** _daniel-s__ left
[06:26] *** xinming joined
[06:50] *** kurahaupo__ left
[06:51] *** xenoterracide joined
[06:52] *** Rotwang joined
[06:55] *** zakharyas left
[06:58] *** dansamo joined
[06:58] *** lizmat joined
[07:00] <lizmat> japhb__: it was 4:22 am when I did that: because of a storm, our fast ferry across the Irish Sea was cancelled

[07:01] <lizmat> so we had to take one about 6 hours earlier  :-(

[07:01] <lizmat> it was still a 3 hour ride to the ferry, but now safely on board   :-)

[07:06] *** iravan joined
[07:33] <moritz> safe travel then!

[07:36] <moritz> is anybody working on unifying nqp's Configure*.pl and Makefiles?

[07:38] <FROGGS_> moritz: nobody picked that task yet afaik

[07:39] <lizmat> moritz: it's going to be a bumpy ride for the next 3 hours

[07:40] <FROGGS_> moritz: but you know about that one, right? https://github.com/perl6/nqp/issues/110

[07:40] <moritz> FROGGS_: yes

[07:41] *** iravan left
[07:42] <FROGGS_> what I would think is that you end up with nqp-moar, nqp-jvm and nqp-parrot, then a wrapper `nqp` that points to your favourite, is able to list the other candidates, and let you switch the favourite

[07:42] <FROGGS_> like perlbrew does

[07:43] <FROGGS_> dunno if that fits the needs of that ticket, since it mentions debian-alternatives... which, well, is debian-specific

[07:44] <moritz> well, alternatives can be used on debian

[07:44] <moritz> I guess a simple 'make install-without-nqp-link' or so would be fine for debian, which then takes care of creating the 'nqp' alias

[07:44] <FROGGS_> yeah

[07:45] <FROGGS_> perl Configure.pl --but-please-don't-create-the-wrapper-because-I-am-daxim-:o)

[07:45] <moritz> fwiw my plan so far is

[07:46] <moritz> 1) move the generated files into per-vm directories

[07:46] <moritz> 2) unifiy the makefiles

[07:46] <moritz> 3) unify the Configures

[07:46] <moritz> and at each step, make sure it still builds :-)

[07:47] <dalek> nqp/unified-build: de8a945 | moritz++ | gen/ (3 files):

[07:47] <dalek> nqp/unified-build: create and .gitignore gen/{parrot,jvm,moar}

[07:47] <dalek> nqp/unified-build: review: https://github.com/perl6/nqp/commit/de8a945198

[07:47] <dalek> nqp/unified-build: e222b61 | moritz++ | tools/build/Makefile-Parrot.in:

[07:47] <dalek> nqp/unified-build: [parrot] build stage{1,2} in gen/parrot/

[07:47] <dalek> nqp/unified-build: review: https://github.com/perl6/nqp/commit/e222b6116b

[07:48] <FROGGS_> ahh yeah, we need the per-vm directories for fudged source files only, right?

[07:49] <moritz> I want to put every VM-specific, generated file into a per-vm dir

[07:49] <moritz> so that if there happen to be name collisions, we are fine

[07:49] <FROGGS_> k

[07:50] *** Rotwang left
[07:58] *** fhelmberger joined
[08:02] <FROGGS_> I think I am going to bisect this these days: t/spec/S06-other/main-usage.rakudo.parrot ....................... Dubious, test returned 1 (wstat 256, 0x100)

[08:02] <FROGGS_> Failed 19/22 subtests 

[08:03] <moritz> is this the one that succeeds when run on its own?

[08:03] <FROGGS_> yes

[08:03] <FROGGS_> but since it fails always on my box when running with -j4, it should be bisectable

[08:04] <moritz> the question is whether to bisect rakudo or t/spec/

[08:05] <FROGGS_> I guess nqp+rakudo?

[08:08] <moritz> well, if you find a starting point for the bisect by going back in time in nqp+rakudo, then that's what you need to bisect

[08:09] *** frdmn joined
[08:13] *** cibs left
[08:13] <dalek> Perlito: 674c046 | (Flavio S. Glock)++ | / (3 files):

[08:13] <dalek> Perlito: Perlito5 - perl6 - refator "while <>" to "for lines"

[08:13] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/674c04611c

[08:15] *** djanatyn left
[08:16] *** Tene left
[08:16] *** xalbo left
[08:17] <dalek> Perlito: 2e7463d | (Flavio S. Glock)++ | html/perlito5to6.html:

[08:17] <dalek> Perlito: Perlito5 - perl6 - update example in html

[08:17] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/2e7463d2f2

[08:18] *** cibs joined
[08:18] *** xinming left
[08:21] *** fhelmberger_ joined
[08:23] *** fhelmberger_ left
[08:23] *** fhelmberger_ joined
[08:24] *** fhelmberger left
[08:25] *** xenoterracide left
[08:26] *** xinming joined
[08:29] *** dayangkun left
[08:33] *** wtw joined
[08:37] *** daxim joined
[08:39] *** lizmat left
[08:41] *** dayangkun joined
[08:46] *** iSlug joined
[08:49] <dalek> nqp/unified-build: f4848dc | moritz++ | tools/build/Makefile-Parrot.in:

[08:49] <dalek> nqp/unified-build: [parrot] generate nqp in gen/parrot/

[08:49] <dalek> nqp/unified-build: 

[08:49] <dalek> nqp/unified-build: currently that nqp is only invocable from gen/parrot/;

[08:49] <dalek> nqp/unified-build: need to fix that before the build can succeed

[08:49] <dalek> nqp/unified-build: review: https://github.com/perl6/nqp/commit/f4848dc7bf

[08:56] *** dakkar joined
[09:00] <dalek> nqp/unified-build: e4903ea | moritz++ | tools/build/Makefile-Parrot.in:

[09:00] <dalek> nqp/unified-build: unbust the build

[09:00] <dalek> nqp/unified-build: 

[09:00] <dalek> nqp/unified-build: "make test" does not work though

[09:00] <dalek> nqp/unified-build: review: https://github.com/perl6/nqp/commit/e4903eaa7f

[09:00] *** dmol joined
[09:05] *** zakharyas joined
[09:08] *** fglock joined
[09:11] <mathw> morning

[09:12] <fglock> p56: print $_ while <>

[09:12] <camelia> p5-to-p6 : OUTPUT«print($_)␤    for lines()␤»

[09:15] *** xalbo joined
[09:15] *** Tene joined
[09:16] *** djanatyn joined
[09:21] <jnthn> o/ mathw, * :)

[09:22] <moritz> jnthn: I'll have to pick your brain on some build system / library path questions, but not right now

[09:23] *** salv0 left
[09:23] <moritz> (Ronja has her first day in kindergarten today, and I have to fetch her early :-)

[09:23] <tadzik> :)

[09:24] *** zakharyas left
[09:25] *** salv0 joined
[09:26] <jnthn> moritz: I need to leave for the airport in 10 mins anyways :)

[09:31] <FROGGS_> moritz: ohh, you need to fetch it from thin air then :/

[09:34] *** markov left
[09:39] <jnthn> commute &

[09:43] *** ssutch joined
[09:43] *** lizmat joined
[09:50] *** dayangkun left
[09:50] *** dayangkun joined
[09:52] *** FROGGS_ left
[09:56] *** markov joined
[10:09] *** FROGGS_ joined
[10:18] *** berekuk left
[10:21] *** berekuk joined
[10:28] <lizmat> land ho!   decommute continues&

[10:28] *** lizmat left
[10:42] *** pernatiy left
[11:02] *** CharellKing joined
[11:15] *** CharellKing left
[11:16] <dalek> Perlito: 994fbee | (Flavio S. Glock)++ | / (6 files):

[11:16] <dalek> Perlito: Perlito - www.perlito.org is down, use github page instead

[11:16] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/994fbee827

[11:21] *** FROGGS_ left
[11:27] *** ssutch left
[11:39] *** wtw left
[11:41] *** wtw joined
[11:43] *** pernatiy joined
[11:54] *** xinming left
[11:56] *** xinming joined
[12:02] <tadzik> https://www.fsf.org/blogs/community/recognizing-an-inspiring-woman-for-ada-lovelace-day-audrey-tang

[12:07] *** araujo left
[12:07] *** FROGGS joined
[12:07] *** araujo joined
[12:08] *** [Sno] left
[12:10] <dalek> Perlito: 1e10200 | (Flavio S. Glock)++ | / (2 files):

[12:10] <dalek> Perlito: Perlito5 - perl6 - refactor 0..num to ^(num+1)

[12:10] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/1e1020013e

[12:12] *** araujo left
[12:13] *** araujo joined
[12:13] <moritz> fglock: fwiw I would refactor 0..$#num to @num.keys

[12:13] <moritz> (personal preference only)

[12:26] <fglock> yes, makes sense to me - adding to the TODO

[12:30] <dalek> Perlito: c022193 | (Flavio S. Glock)++ | TODO-perlito5:

[12:30] <dalek> Perlito: Perlito5 - perl6 - TODO update

[12:30] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/c022193a0d

[12:35] <fglock> p56:  print for 0..9 

[12:35] <camelia> p5-to-p6 : OUTPUT«.print␤    for ^10␤»

[12:37] <diakopter> fglock++ :)

[12:39] <dalek> nqp: 384469f | (Tobias Leich)++ | tools/build/PARROT_REVISION:

[12:39] <dalek> nqp: bump parrot revision, closes #133

[12:39] <dalek> nqp: review: https://github.com/perl6/nqp/commit/384469f07b

[12:46] *** PacoAir joined
[12:47] *** berekuk_ joined
[12:50] *** berekuk left
[12:57] <felher> Is it possible to write something like http://bpaste.net/show/140995/ or do I have to check that via, say, BUILD

[12:59] *** darutoko left
[13:02] <felher> ( I know that I also could use a subset for that. )

[13:02] *** fhelmberger_ left
[13:03] *** fhelmberger joined
[13:08] *** ajr joined
[13:09] *** ajr is now known as Guest38561

[13:09] *** Guest38561 is now known as ajr_

[13:18] *** SamuraiJack_ left
[13:20] *** kaare_ joined
[13:21] *** PZt left
[13:26] <timotimo> felher: that should work. it will explode inside build or buildall if you get it wrong

[13:30] <felher> timotimo: maybe thats NYI :)

[13:30] <felher> r: class X { has $.x where * > 0; }; X.new(x => -3).x.say;

[13:30] <camelia> rakudo e22ac2: OUTPUT«-3␤»

[13:32] <timotimo> wait what

[13:32] <timotimo> you may have to use a subset then

[13:34] *** berekuk joined
[13:34] *** berekuk_ left
[13:34] <timotimo> r: class X { has $.x where * > 0 }; say X.HOW.methods;

[13:34] <camelia> rakudo e22ac2: OUTPUT«too few positional arguments: 1 passed, 2 (or more) expected␤  in any methods at src/gen/Metamodel.nqp:425␤  in block  at /tmp/Mqft1HBMYY:1␤␤»

[13:34] <timotimo> r: class X { has $.x where * > 0 }; say X.HOW.methods(X);

[13:34] <camelia> rakudo e22ac2: OUTPUT«x␤»

[13:35] <timotimo> r: class X { has $.x where * > 0 }; say X.HOW.methods(X).perl;

[13:35] <camelia> rakudo e22ac2: OUTPUT«(method x(Mu $self: Mu *%_) { ... },)␤»

[13:35] <timotimo> r: class X { has $.x where * > 0 }; say X.HOW.attributes(X).perl;

[13:35] <camelia> rakudo e22ac2: OUTPUT«(Attribute.new(),)␤»

[13:35] <timotimo> r: class X { has $.x where * > 0 }; say X.HOW.attributes(X)[0].^methods;

[13:35] <camelia> rakudo e22ac2: OUTPUT«<anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> compose apply_handles get_value set_value container has-accessor readonly package Str gist␤»

[13:35] <timotimo> hum.

[13:36] *** japhb left
[13:36] <moritz> r: class X { has $.x where * > 0 }; say X.^attributes[0]

[13:36] <camelia> rakudo e22ac2: OUTPUT«Mu $!x␤»

[13:36] <moritz> r: class X { has $.x where * > 0 }; say X.^attributes[0].WHAT

[13:36] <camelia> rakudo e22ac2: OUTPUT«(Attribute)␤»

[13:36] *** japhb joined
[13:36] *** lowpro30 joined
[13:36] <moritz> r: say Attribute.^methods

[13:36] <camelia> rakudo e22ac2: OUTPUT«<anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> <anon> compose apply_handles get_value set_value container has-accessor readonly package Str gist␤»

[13:37] <timotimo> one of these anons must be storing the refinement thingie

[13:37] <moritz> timotimo: I believe many of those methods coem from the bootstrap

[13:37] <timotimo> that would perhaps explain why they don't have a name set

[13:38] <timotimo> r: class X { has Int $.x where * > 0; }; X.new(x => -3).x.say;

[13:38] <camelia> rakudo e22ac2: OUTPUT«-3␤»

[13:38] <timotimo> r: subset Positive of Cool where * > 0; class X { has Positive $.x }; X.new(x => -3).x.say;

[13:38] <camelia> rakudo e22ac2: OUTPUT«Type check failed in assignment to '$!x'; expected 'Positive' but got 'Int'␤  in block  at src/gen/CORE.setting:838␤  in method BUILDALL at src/gen/CORE.setting:821␤  in method bless at src/gen/CORE.setting:810␤  in method new at src/gen/CORE.setting:79…»

[13:38] <timotimo> at least that works!

[13:38] <timotimo> r: class X { has Int $.x is rw where * > 0; }; X.new(x => -3).x = -10;

[13:38] <camelia> rakudo e22ac2: ( no output )

[13:39] <timotimo> neither of those blows up :o

[13:40] <moritz> maybe there 'where * > 0' is parsed as an attribute trait that is not yet implemented?

[13:41] *** lowpro30_ joined
[13:41] <timotimo> r: class X { has Int where * > 0 $.x; }; X.new(x => -3).x.say;

[13:41] <camelia> rakudo e22ac2: OUTPUT«Error while constructing error object:Could not locate compile-time value for symbol Undeclared␤===SORRY!===␤Error while compiling, type X::Undeclared␤  what: Type␤  symbol: Int␤  suggestions: 1␤ at line 2, near " where * >"␤»

[13:41] <timotimo> right

[13:43] *** lowpro30 left
[13:44] <moritz> calling classes 'X' is a bad idea :-)

[13:45] <felher> well, at least it's an exceptional idea... (well, yeah, pretty bad pun, I admit it :) )

[13:49] *** darutoko joined
[13:51] <GlitchMr> Is naming classes like 'X' is as bad idea as using $a and $b as lexicals in Perl 5?

[13:52] *** bluescreen10 joined
[13:53] <diakopter> worse, b/c it can have non-local effects

[14:00] *** grondilu joined
[14:06] *** raiph joined
[14:08] *** kaare_ left
[14:13] <jnthn> Naming something so it collides with a name of a thing in the setting is typically a bad idea, unless you intend to do it :)

[14:14] *** PZt joined
[14:15] *** skids joined
[14:16] *** iSlug left
[14:17] <jnthn> evening talks; bbl &

[14:25] *** jnap joined
[14:31] *** frdmn_ joined
[14:34] *** frdmn left
[14:34] *** frdmn_ left
[14:35] *** frdmn joined
[14:48] *** iSlug joined
[14:51] <japhb__> tadzik: ping

[14:51] <tadzik> japhb__: pong

[14:51] *** FROGGS left
[14:52] <japhb__> Rather than go through the whole fork-pull annoyance, can you either give me a commitbit for Shell-Command, or fix rm_rf so that it sorts the file list before reversing it?

[14:52] <japhb__> This causes panda build failure on some filesystems.

[14:52] <tadzik> I'll give you a commit bit

[14:53] <japhb__> thx

[14:54] <tadzik> should work now

[14:59] <japhb__> pushed

[15:01] <nwc10> "sort then reverse" so that subdirectories are deleted before their parents?

[15:02] <japhb__> nwc10: yes, and so that files are deleted before containing directories.

[15:02] <japhb__> --> bus &

[15:04] <dalek> Perlito: 794f076 | (Flavio S. Glock)++ | / (2 files):

[15:04] <dalek> Perlito: Perlito5 - perl6 - refactor_range_operator wip

[15:04] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/794f0763ff

[15:05] * TimToady idly wonders whether ^@num will end up more optimizable than @num.keys

[15:05] <felher> Is there a way to import some Class and giving it a new Name in the Prozess? Something like 'use very::deeply::nested::class::in::some::strange::module::ClassName as MyClassName; MyClassName.new ...". I think I did ask that once and probably did just forget, so sorry for that.

[15:05] <moritz> felher: 'constant' can be used for aliasing

[15:05] * felher tests that right away

[15:07] <TimToady> see also S11:554 and following

[15:07] *** ajr_ left
[15:07] <synopsebot> Link: http://perlcabal.org/syn/S11.html#line_554

[15:08] *** ajr joined
[15:08] *** ajr is now known as Guest16407

[15:09] *** Guest16407 is now known as ajr_

[15:10] <felher> moritz: if you meant to use constant like "constant NewName = foo::bar::OldName", yeah, that works just fine, thanks. :)

[15:12] <moritz> felher: exactly what I meant, yes

[15:12] <TimToady> aliasing is supposed to be built into 'use'

[15:13] <moritz> TimToady: with which syntax?

[15:13] <TimToady> do I need to repeat the link I just gave?

[15:13] <moritz> erm, no :-)

[15:14] <moritz> ah, with   use Aliased:name<Original::Name>;

[15:15] <TimToady> though :name is perhaps a bad name for one of two names :)

[15:15] * TimToady didn't add that...

[15:16] <TimToady> :was or :really would be clearer to the reader

[15:17] <felher> TimToady: I guess 'the short name' of foo::bar::SomeClass:ver<1.2.3> would be 'SomeClass'? Or foo::bar::SomeClass with just the version stripped?

[15:17] <TimToady> :from is taken, I guess, but the original intent was to use :from for that

[15:18] <japhb__> TimToady: FWIW, :from makes more sense to me as "from this other world" than "from this other name"

[15:19] <TimToady> well, the second component was the from-name, but maybe it's confusing to call that "name"

[15:19] <PerlJam> Why not "use Foo::Bar::Baz:as<Fred>" for aliasing?   Is that another of those end-weight things?

[15:19] <TimToady> yeah

[15:20] <PerlJam> That feels more natural to me, but I can see how it could hide the alias if you're not careful.

[15:20] *** kaare_ joined
[15:21] <TimToady> maybe a cleaner fix would be to reduce :from to :from<name version> and then have some prefix for name that indicates some language other than P6

[15:22] <TimToady> or maybe there's just some other thing we're too stupid to think up yet :)

[15:25] <TimToady> the prefix could live in package namespace anyway, lang::Java::Foo::Bar::Baz

[15:25] <TimToady> or some such

[15:25] <japhb__> Gah, how do I force the Shell-Command submodule in panda to update to the latest commit?  (I could just nuke it and clone again, but there has got to be a standard way ...)

[15:25] <TimToady> then you could just look in the lang package to see what languages are supported :)

[15:26] <diakopter> rj: constant a = a

[15:26] <camelia> rakudo-jvm e22ac2: OUTPUT«===SORRY!===␤java.lang.NullPointerException␤»

[15:29] <diakopter> dear lazy#perl6, write me an ircbot in Perl 6 to send emails to rakudobug only if requested on channel (not on privmsg)

[15:29] <diakopter> rbug: rj: constant a = a

[15:29] <diakopter> rbug: rj: constant a = a # email subject: NullPointerException when nonsense constant initializer

[15:31] <TimToady> plus putting lang::Java into the name hierarchy means we could probably have a Perl6 lang::Java stub that specifies how to delegate to the Java name system

[15:32] <ingy> moin o/

[15:32] <TimToady> otoh, not all languages are named with identifiers

[15:34] <TimToady> need to cogitate on that a bit more, I guess

[15:34] * diakopter sends you a round rumination

[15:37] <diakopter> hugme: are you written in Perl 6?

[15:37] <diakopter> hugme: hug

[15:37] <hugme> diakopter: 

[15:37] <diakopter> hugme: hug?

[15:37] <hugme> diakopter: 

[15:38] <diakopter> hugme: hug hug

[15:38] * hugme hugs hug

[15:38] <diakopter> .. must be written in Perl 6

[15:40] *** iSlug left
[15:41] *** xenoterracide joined
[15:41] <diakopter> commutelariatrastrialafastalismariananklermontrositration &

[15:43] <retupmoca> r: my @foo = (1,2,3); say @foo[0][0][0];

[15:43] <camelia> rakudo e22ac2: OUTPUT«1␤»

[15:43] <retupmoca> why does that work?

[15:43] <TimToady> because every item is also a list of one element

[15:44] <TimToady> r: say 42[0]

[15:44] <camelia> rakudo e22ac2: OUTPUT«42␤»

[15:44] <diakopter> nqp-m: my @foo := [1,2,3]; say(@foo[0][0][0]);

[15:44] <camelia> nqp-moarvm: OUTPUT«This representation (P6int) does not support positional access␤frame_name_0␤»

[15:44] <retupmoca> oh, ok. That actually makes sense

[15:44] <TimToady> npq is pickier

[15:45] <TimToady> it's one of the intentional dwims built into Perl 6, along with flattening in list context, and numeric/string conversions

[15:46] <retupmoca> yeah, I actually like that I think

[15:46] <retupmoca> I just keep thinking in perl5

[15:46] <diakopter> rj: my @foo; @foo[0] := @foo; say @foo[0]

[15:47] <camelia> rakudo-jvm e22ac2: OUTPUT«(timeout)»

[15:47] <diakopter> nqp-m: my @foo; @foo[0] := @foo; say(@foo[0])

[15:47] <camelia> nqp-moarvm: OUTPUT«Rebuild in progress␤»

[15:47] <TimToady> .gist is not smart enough to recognize recursion

[15:47] <diakopter> boo

[15:47] <dalek> panda: d634901 | (Geoffrey Broadwell)++ | ext/Shell__Command:

[15:47] <dalek> panda: Updated Shell__Command to latest upstream

[15:47] <dalek> panda: review: https://github.com/tadzik/panda/commit/d634901222

[15:47] <TimToady> or maybe it's .perl at that point

[15:48] <diakopter> rj: my @foo; @foo[0] := @foo; print @foo[0]

[15:48] <camelia> rakudo-jvm e22ac2: OUTPUT«(timeout)»

[15:48] <diakopter> rj: my @foo; @foo[0] := @foo; print @foo[0].WHAT

[15:48] <camelia> rakudo-jvm e22ac2: OUTPUT«use of uninitialized value of type Array in string context␤»

[15:48] <diakopter> o_O

[15:50] *** FROGGS joined
[15:51] <japhb__> rj: my @foo; @foo[0] := @foo; print @foo[0].DUMP

[15:51] <camelia> rakudo-jvm e22ac2: OUTPUT«Array<1>(␤    :$!flattens(▶Mu),␤    :$!items(BOOTArray<3>(=Array<1>)),␤    :$!nextiter(▶Mu)␤)»

[15:52] *** bluescreen10 left
[15:55] *** [Sno] joined
[16:04] *** daxim left
[16:04] *** rindolf joined
[16:23] *** lowpro30 joined
[16:27] *** lowpro30_ left
[16:36] *** brotherkevin joined
[16:47] *** colomon left
[16:49] *** raiph left
[16:50] *** fglock left
[16:51] *** colomon joined
[16:55] *** fhelmberger left
[16:58] *** ajr_ left
[16:58] *** benabik left
[17:01] *** kurahaupo joined
[17:03] *** benabik joined
[17:04] *** benabik left
[17:05] *** lizmat joined
[17:07] *** kurahaupo left
[17:07] *** kurahaupo_ joined
[17:13] *** brotherkevin left
[17:15] *** lizmat_ joined
[17:15] *** lizmat left
[17:15] *** lizmat_ is now known as lizmat

[17:16] *** dakkar left
[17:20] *** woolfy joined
[17:24] *** kurahaupo joined
[17:24] *** kurahaupo_ left
[17:24] *** nebuchadnezzar left
[17:27] *** kurahaupo_ joined
[17:27] *** kurahaupo left
[17:27] *** raiph joined
[17:35] *** SamuraiJack_ joined
[17:39] *** permutation joined
[17:41] *** rindolf left
[17:43] *** pippo_ joined
[17:43] <permutation> Can someone help me with this code? I'm trying to obtain a text with 30 amino acids in each string using the 21 amino acid. I'm in the testing stage and I really like how this code is working for me. The only problem is that I cannot output the resut into a textfile. I can see the result in the command prombt. Here is the code: https://gist.github.com/anonymous/7011819 anyhelp will be greatly apprechiated. I'm new to this

[17:44] <pippo_> r: "one, two, three" ~~ /(\w+) % ','/

[17:44] <camelia> rakudo e22ac2: OUTPUT«===SORRY!===␤Unrecognized regex metacharacter % (must be quoted to match literally)␤at /tmp/RHy6lgYfjs:1␤------> "one, two, three" ~~ /(\w+) ⏏% ','/␤Unable to parse regex; couldn't find final '/'␤at /tmp/RHy6lgYf…»

[17:44] *** logie left
[17:45] *** ssutch joined
[17:46] *** ssutch left
[17:47] <pippo_> why it does not work?

[17:47] *** ssutch joined
[17:47] <grondilu> pippo_: because there are spaces

[17:47] <grondilu> hum no, actually

[17:48] <grondilu> r: r: "one, two, three" ~~ /(\w+)+ % ','/

[17:48] <camelia> rakudo e22ac2: ( no output )

[17:48] <grondilu> r: say "one, two, three" ~~ /(\w+)+ % ','/

[17:48] <camelia> rakudo e22ac2: OUTPUT«｢one｣␤ 0 => ｢one｣␤␤»

[17:48] <moritz> r: "one, two, three" ~~ /(\w+) ** ','/

[17:48] <camelia> rakudo e22ac2: OUTPUT«===SORRY!=== Error while compiling /tmp/C0uw5umsPJ␤Quantifier quantifies nothing␤at /tmp/C0uw5umsPJ:1␤------> "one, two, three" ~~ /(\w+) ** ⏏','/␤    expecting any of:␤        postfix␤        infix stopper␤ …»

[17:48] <grondilu> r: say "one, two, three" ~~ /(\w+)+ % [','\s+]/

[17:48] <camelia> rakudo e22ac2: OUTPUT«｢one, two, three｣␤ 0 => ｢one｣␤ 0 => ｢two｣␤ 0 => ｢three｣␤␤»

[17:48] <moritz> grondilu++

[17:49] <moritz> r: say "one, two, three" ~~ /:s (\w+)+ % \, /

[17:49] <camelia> rakudo e22ac2: OUTPUT«｢one｣␤ 0 => ｢one｣␤␤»

[17:49] <grondilu> r: say "one, two, three" ~~ /[\w+]+ % [','\s+]/

[17:49] <camelia> rakudo e22ac2: OUTPUT«｢one, two, three｣␤␤»

[17:49] *** pippo joined
[17:49] <grondilu> r: say "one, two, three" ~~ /\w+ % [','\s+]/

[17:49] <moritz> permutation: $op.print prints the empty string. You likely want $op.print($_)

[17:49] <camelia> rakudo e22ac2: OUTPUT«｢o｣␤␤»

[17:50] <grondilu> r: say .perl given "one, two, three" ~~ /[\w+] % [','\s+]/

[17:50] <camelia> rakudo e22ac2: OUTPUT«===SORRY!===␤Unrecognized regex metacharacter % (must be quoted to match literally)␤at /tmp/uGPKAnfQkH:1␤------> .perl given "one, two, three" ~~ /[\w+] ⏏% [','\s+]/␤Unable to parse regex; couldn't find final '/'…»

[17:50] <grondilu> r: say .perl given "one, two, three" ~~ /[\w+]+ % [','\s+]/

[17:50] <camelia> rakudo e22ac2: OUTPUT«Match.new(orig => "one, two, three", from => 0, to => 15, ast => Any, list => ().list, hash => EnumMap.new())␤»

[17:51] *** pippo_ left
[17:51] <grondilu> r: say .[0] given "one, two, three" ~~ /[\w+]+ % [','\s+]/

[17:51] <camelia> rakudo e22ac2: OUTPUT«(Any)␤»

[17:51] <grondilu> r: say .[0] given "one, two, three" ~~ /(\w+)+ % [','\s+]/

[17:51] <camelia> rakudo e22ac2: OUTPUT«｢one｣␤ ｢two｣␤ ｢three｣␤␤»

[17:52] <grondilu> r: say .[0] given my @ = "one, two, three" ~~ /(\w+)+ % [','\s+]/

[17:52] <camelia> rakudo e22ac2: OUTPUT«｢one, two, three｣␤ 0 => ｢one｣␤ 0 => ｢two｣␤ 0 => ｢three｣␤␤»

[17:55] *** pernatiy left
[17:55] <pmichaud> r: say "one, two, three" ~~ rule / (\w+)+ % ',' /

[17:55] <camelia> rakudo e22ac2: OUTPUT«===SORRY!=== Error while compiling /tmp/SnChtQ5_3U␤Malformed regex␤at /tmp/SnChtQ5_3U:1␤------> say "one, two, three" ~~ rule ⏏/ (\w+)+ % ',' /␤    expecting any of:␤        postfix␤        infix stopper␤    …»

[17:56] <grondilu> permutation: why don't you just output to STDOUT and use redirections?

[17:56] <pmichaud> r: say "one, two, three" ~~ rule { (\w+)+ % ',' }

[17:56] <camelia> rakudo e22ac2: OUTPUT«｢one｣␤ 0 => ｢one｣␤␤»

[17:56] <permutation> moritz: but why when I use .print for [X]... i can see the result in the command prompt but when it's writing to the text file, it output it as empty strings?

[17:56] <pmichaud> r: say "one, two, three" ~~  /:sigspace (\w+)+ % ',' /

[17:56] <camelia> rakudo e22ac2: OUTPUT«｢one｣␤ 0 => ｢one｣␤␤»

[17:56] <pmichaud> hmmm.

[17:57] <pmichaud> permutation: ".print" works on $_.   $op.print doesn't.

[17:57] *** wtw left
[17:57] <pmichaud> ".print" is the same as "$_.print"

[17:58] <grondilu> permutation: $op.print($_) will do

[17:58] *** pippo left
[17:58] <pmichaud> you can also do:   { my $*OUT = $op; .print for [X] }

[18:01] <permutation> grondilu: I tried $op.print($_), it didn't work

[18:01] <permutation> pmichaud: i'll try your suggestion and see

[18:01] <grondilu> r: say $*OUT.print("hi")

[18:01] <camelia> rakudo e22ac2: OUTPUT«hiTrue␤»

[18:01] <grondilu> r: $*OUT.print("hi")

[18:01] <camelia> rakudo e22ac2: OUTPUT«hi»

[18:02] <grondilu> r: $*OUT.print($_) for <a b c>

[18:02] <camelia> rakudo e22ac2: OUTPUT«abc»

[18:02] <grondilu> $op.print($_) should work

[18:04] *** wtw joined
[18:04] *** kurahaupo_ left
[18:04] *** kurahaupo joined
[18:06] *** isBEKaml joined
[18:08] *** wtw left
[18:08] *** wtw joined
[18:09] *** isBEKaml left
[18:10] <permutation> thanks everyone, after looking at everyone's comments and playing with it. I finally got it to work. grondilu: $op.print($_) works!! 

[18:11] *** permutation left
[18:12] *** cognominal joined
[18:12] *** pippo joined
[18:15] <pippo> "one, two, three" ~~ / (\w+)+ % ', ' /

[18:15] <pippo> r: "one, two, three" ~~ / (\w+)+ % ', ' /

[18:15] <camelia> rakudo e22ac2: ( no output )

[18:16] <pippo> r-jvm: "one, two, three" ~~ / (\w+)+ % ', ' /

[18:16] <camelia> rakudo-jvm e22ac2: ( no output )

[18:16] <pippo> n: "one, two, three" ~~ / (\w+)+ % ', ' /

[18:16] <camelia> niecza v24-98-g473bd20: ( no output )

[18:16] <pippo> ?

[18:16] <FROGGS> pippo: you have to "say" or "print" it

[18:17] <FROGGS> r: say "one, two, three" ~~ / (\w+)+ % ', ' /

[18:17] <camelia> rakudo e22ac2: OUTPUT«｢one, two, three｣␤ 0 => ｢one｣␤ 0 => ｢two｣␤ 0 => ｢three｣␤␤»

[18:17] <pippo> OK Thank you!

[18:17] <FROGGS> r: say @("one, two, three" ~~ / (\w+)+ % ', ' /).perl

[18:17] <camelia> rakudo e22ac2: OUTPUT«((Match.new(orig => "one, two, three", from => 0, to => 3, ast => Any, list => ().list, hash => EnumMap.new()), Match.new(orig => "one, two, three", from => 5, to => 8, ast => Any, list => ().list, hash => EnumMap.new()), Match.new(orig => "one, two, three", fr…»

[18:17] <FROGGS> r: say @("one, two, three" ~~ / (\w+)+ % ', ' /)

[18:17] <camelia> rakudo e22ac2: OUTPUT«｢one｣␤ ｢two｣␤ ｢three｣␤␤»

[18:17] <FROGGS> r: say @("one, two, three" ~~ / (\w+)+ % ', ' /)>>.Str.perl

[18:17] <camelia> rakudo e22ac2: OUTPUT«("one", "two", "three")␤»

[18:18] *** cognominal left
[18:18] <rjbs> This channel makes me happy for many reasons, but the nice use of non-ASCII characters is up there.

[18:19] <flussence_> .oO( I still need to get those bracket chars working on my laptop... )

[18:19] <jnthn> evening, #perl6

[18:23] <diakopter> jnthn: ahoyah

[18:23] <FROGGS> o/

[18:24] * jnthn survived his evening talks :)

[18:24] <jnthn> Got a sore throat, though :/

[18:25] * diakopter is getting a cold too it seems

[18:25] <FROGGS> jnthn: I know what would be good now :o)

[18:25] <moritz> \o

[18:28] <jnthn> FROGGS: oh?

[18:28] <jnthn> .oO( Beer? )

[18:29] *** pippo left
[18:30] <moritz> jnthn: are you up for some build and library path discussion?

[18:31] <FROGGS> jnthn: of course beer :o)

[18:31] <jnthn> moritz: sure, let's try )

[18:32] <moritz> jnthn: ok, my goal is to be able to build all NQP on all backends within the same source dir

[18:32] <diakopter> moritz: I think the different backends should have different libdirs

[18:32] <moritz> jnthn: so I think a good approach is to split off generated files into different directories

[18:32] <diakopter> (when installed)

[18:33] <moritz> jnthn: which works fine, until I try to invoke NQP from within the source dir, not within the build dir

[18:34] <jnthn> moritz: Which generated files, ooc?

[18:34] <moritz> jnthn: all of them, if possible

[18:34] <jnthn> I know that if we try to not build stuff into blib/Perl6 we're gonna hit fun...

[18:34] <jnthn> Ah, but we're still on NQP at the moment?

[18:34] <moritz> yes, NQP

[18:34] <moritz> sorry

[18:35] <moritz> so I have this branch 'unified-build', which starts to do that for parrot

[18:35] <diakopter> moritz: you don't agree?

[18:35] <moritz> diakopter: I agree

[18:35] <moritz> ./gen/parrot/nqp-p -e 1

[18:35] <moritz> "load_bytecode" couldn't find file 'ModuleLoader.pbc'

[18:35] <moritz> because ModuleLoader.pbc is in gen/parrot/, not in .

[18:36] <jnthn> Right

[18:36] <jnthn> It relies on it being in the install location or in .

[18:36] <moritz> can I somehow fudge the include path, preferably from within nqp?

[18:37] <jnthn> Well, if we toss the fake executable and go to the same approach as the other backends then it's just the --include or --library args (I forget which) to Parrot...

[18:37] <jnthn> Not sure if that's throwing the baby out with the bathwater though

[18:37] <moritz> or else I could create an ./nqp that is a shell script/batch file that invokes parrot with all those amgical args 

[18:37] <moritz> jnthn: we could still use the fakexecutable for the installed nqp

[18:37] <jnthn> True

[18:37] *** kurahaupo left
[18:38] <jnthn> In which case this approach has a decided attraction :)

[18:39] <jnthn> Since a similar approach will work just fine for JVM and MoarVM too :)

[18:39] <dalek> nqp/unified-build: 6059c4a | moritz++ | tools/build/Makefile-Parrot.in:

[18:39] <dalek> nqp/unified-build: executable name nqp-p

[18:39] <dalek> nqp/unified-build: review: https://github.com/perl6/nqp/commit/6059c4a5df

[18:41] <moritz> ok, in this branch, stuff is built in 3rdparty/*, config.stats, dynext/*, gen/parrot/*, src/gen/nqp-config.nqp and src/vm/parrot/*

[18:41] <moritz> *config.status

[18:41] <moritz> so I guess src/gen/nqp-config.nqp is the only real problem of those, since all others are parrot specific

[18:42] <jnthn> I think that path may just come from the Makefile, though

[18:43] *** denis_boyun joined
[18:43] <moritz> yep, looks easy to fix

[18:45] *** wtw left
[18:48] *** darutoko left
[18:50] <jnthn> yay

[18:51] <dalek> nqp: 0637faa | pmichaud++ | src/vm/parrot/HLL/Backend.nqp:

[18:51] <dalek> nqp: Update HLL::Backend::Parrot to use new EvalPMC/PackfileView API.

[18:51] <dalek> nqp: 

[18:51] <dalek> nqp: Resolves issue #76, but requires a Parrot newer than

[18:51] <dalek> nqp: RELEASE_5_7_0-20-g07dfdb4.  See issue #76 for more details.

[18:51] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0637faa4a1

[18:51] <dalek> nqp: dc9d7ff | pmichaud++ | src/vm/parrot/stage0/ (9 files):

[18:51] <dalek> nqp: Update parrot bootstrap files for EvalPMC/PackfileView changes.

[18:51] <dalek> nqp: 

[18:51] <dalek> nqp: Fixes NQP issue #76.

[18:51] <dalek> nqp: review: https://github.com/perl6/nqp/commit/dc9d7ff092

[18:52] <moritz> any reason not to bump PARROT_REVISION to 5.9.0 immediately?

[18:52] *** araujo left
[18:52] <pmichaud> it's already been bumped.

[18:52] <FROGGS> moritz: already done so

[18:53] <pmichaud> it was bumped before I did the merge.

[18:53] *** araujo joined
[18:53] *** araujo left
[18:53] *** araujo joined
[18:53] <moritz> oh, my local master was out of date, sorry

[18:53] <dalek> nqp/unified-build: 175cec1 | moritz++ | tools/build/Makefile-Parrot.in:

[18:53] <dalek> nqp/unified-build: move nqp-config to gen/parrot

[18:53] <dalek> nqp/unified-build: review: https://github.com/perl6/nqp/commit/175cec1a90

[18:54] *** wtw joined
[18:54] <jnthn> pmichaud: Does this give us/get us much closer to --target=pbc?

[18:57] *** ajr_ joined
[18:57] <pmichaud> jnthn: yes.

[18:57] *** cognominal joined
[18:57] <pmichaud> now we wait for Parrot to switch to PackfileView PMC.

[18:58] <pmichaud> I can go ahead and add a --target=pbc option sooner than that (currently NQP issue #139), but it won't work unless/until the PackfileView PMC is enabled.

[18:58] <jnthn> ok

[18:58] <jnthn> No hurry, it may just cut some time off builds

[18:58] <pmichaud> right.

[18:59] <pmichaud> I'll probably add --target=pbc in the next day or so.

[18:59] <pmichaud> I just wanted to go ahead and get this much in place for the release.

[18:59] <moritz> pmichaud++

[18:59] <jnthn> Nice

[19:00] <pmichaud> especially since it handles the bootstrapping issue that would otherwise be present

[19:00] *** araujo left
[19:01] *** araujo joined
[19:02] *** jeff_s2 joined
[19:02] *** jeff_s1 left
[19:05] <lue> hello world o/

[19:08] <colomon> goodbye cruel world

[19:08] * moritz hopes that colomon doesn't jump off a cliff or so

[19:09] * colomon lives somewhere that is very flat

[19:09] <FROGGS> somebody forgot to turn of flattening, ehh?

[19:09] <FROGGS> off**

[19:10] <FROGGS> in germany we would say this was a flat joke

[19:10] <colomon> someone forgot to turn off the glaciers. 

[19:14] <nwc10> om nom cwm

[19:18] <jnthn> .oO( Which cabaret was set in a glacier? Moulin Rouge )

[19:21] * nwc10 groans

[19:25] <FROGGS> I don't get it :/

[19:26] <nwc10> I thought I got it, but now I'm confused.

[19:26] <jnthn> http://en.wikipedia.org/wiki/Moulin_Rouge

[19:26] <jnthn> http://en.wikipedia.org/wiki/Moulin_(geology)

[19:26] <japhb> nwc10, Some years ago I saw the results of a contest to come up with the shortest English sentence containing all 26 letters in the alphabet.  The commentators said something along the lines of "Apparently to do well at this, you need to know the word cwm."

[19:26] <nwc10> I was confusing it with what is acutally http://en.wikipedia.org/wiki/Roche_moutonn%C3%A9e

[19:27] <FROGGS> ahh

[19:27] <dalek> nqp/unified-build: 0ad9563 | moritz++ | tools/build/Makefile-Parrot.in:

[19:27] <dalek> nqp/unified-build: fix bootstrap-files

[19:27] <dalek> nqp/unified-build: review: https://github.com/perl6/nqp/commit/0ad95635df

[19:27] <nwc10> :-)

[19:28] <jnthn> Such are the risks inherent in taking the plunge with an esoteric pun... :)

[19:28] <moritz> such puns are hard for us non-natives to understand

[19:29] <jnthn> I'm not entirely sure all natives know the geological meaning of moulin :)

[19:29] <FROGGS> you would have to box these puns so we can handle them

[19:30] <lue> .oO(I'm not an "NQP guy", so I can only deal with C<Pun>s, not these weird native C<pun>s.)

[19:31] *** lowpro30_ joined
[19:34] *** lowpro30 left
[19:39] <colomon> r: lines.sort

[19:39] <camelia> rakudo e22ac2: ( no output )

[19:39] <colomon> r: lines.sort.say

[19:39] <camelia> rakudo e22ac2: OUTPUT«  Einig laß in Brüderchören, Hast seit frühen Ahnentagen Heimat bist du großer Söhne, Heiß umfehdet, wild umstritten Land der Berge, Land am Strome, Land der Hämmer, zukunftsreich! Land der Äcker, Land der Dome, Mutig in die neuen Zeiten, Vaterland, di…»

[19:40] <colomon> r: lines.sort.splurt("probably-cant-do-this")

[19:40] <camelia> rakudo e22ac2: OUTPUT«No such method 'splurt' for invocant of type 'Parcel'␤  in block  at /tmp/TR4xXUkXwt:1␤␤»

[19:40] <rurban> Is this the german or austrian hymn?

[19:40] <colomon> spew?

[19:40] <moritz> rurban: Austrian

[19:41] <rurban> yes, I thought so :)

[19:41] <moritz> rurban: (and shouldn't you know this? :-)

[19:41] <colomon> r: lines.sort.spurt("probably-cant-do-this")

[19:41] <rurban> I sounded familiar. but my wife and mother is german so I was not sure

[19:41] <camelia> rakudo e22ac2: OUTPUT«No such method 'spurt' for invocant of type 'Parcel'␤  in block  at /tmp/VTmKktUC6I:1␤␤»

[19:41] <lue> How can you tell it's austrian, specifically? (I really need to brush up on my German...)

[19:42] <rurban> Land der Erbsen, Land der Bohnen,

[19:42] <rurban> Land der vier Besatzungszonen,

[19:42] <rurban> Wir verkaufen dich im Schleich,

[19:42] <rurban> Vielgeliebtes 􏿽xD6sterreich!

[19:42] <rurban> Und droben 􏿽xFCberm Hermannskogel

[19:42] <rurban> Flattert froh der Bundesvogel.

[19:42] <dalek> Perlito: ef76153 | (Flavio S. Glock)++ | / (6 files):

[19:42] <dalek> Perlito: Revert "Perlito - www.perlito.org is down, use github page instead"

[19:42] <dalek> Perlito: 

[19:42] <dalek> Perlito: This reverts commit 994fbee82747d0539fece6538e6d1d19fb9d3f73.

[19:42] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/ef76153c6d

[19:42] <moritz> lue: not from the language, but if you lived there for a while, you should know :-)

[19:42] <rurban> The language is the same, the culture also.

[19:42] <jnthn> "Österreich" is a pretty big clue too ;)

[19:42] <diakopter> nqp-m: say(32)

[19:42] <camelia> nqp-moarvm: OUTPUT«32␤»

[19:42] <lue> .oO(At least it's real easy to tell when some piece of text is Swiß German.)

[19:43] <moritz> camelia: it's probably spurt 'file', @lines;  or so

[19:43] <colomon> "Österreich" is something like "east kingdom"?

[19:43] <rurban> And the composers also mixup

[19:43] <rurban> colomon: yes

[19:44] <colomon> r: "probably-cant-do-this".path.spurt(lines.sort)

[19:44] <camelia> rakudo e22ac2: OUTPUT«No such method 'spurt' for invocant of type 'IO::Path'␤  in block  at /tmp/YuicwlqYvB:1␤␤»

[19:45] <rurban> just austria had the only emperor (kaiser) in europe, not just a king.

[19:45] <dalek> Perlito: 02b74b6 | (Flavio S. Glock)++ | / (2 files):

[19:45] <dalek> Perlito: Perlito - perl6 - fix a reference

[19:45] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/02b74b616c

[19:45] <moritz> rurban: ... for some time, yes :-)

[19:46] <diakopter> difference between emperor and king?

[19:46] <moritz> ok, I had this really stupid idea of switching around the default input of camelia based on date

[19:46] <rurban> germany was for a long time the success of distributed government

[19:46] <rurban> The Kaiser was the only one crowned by the pope

[19:46] <lue> kaiser is a particularly Roman sort of king-like thing. (Caesar -> Kaiser)

[19:47] <diakopter> _._.

[19:47] <moritz> like, using the Address to the Haggis on Burns Night etc.

[19:48] <colomon> +1 to Address to the Haggis

[19:48] <lue> moritz: rotating inputs doesn't sound like a bad idea to me.

[19:48] * lue wonders how many here would guess whereabouts he's from if utters "Wittekind".

[19:48] <colomon> You could just leave it AttH, I like Burns.

[19:48] <rurban> And when german and austria overdid it with their centralistic government approach, we know what came out. So maybe russia will be now powerful than before

[19:49] <diakopter> _._

[19:51] *** iSlug joined
[19:51] <dalek> Perlito: ce7b71d | (Ahmad M. Zawawi)++ | Makefile:

[19:51] <dalek> Perlito: Added .gitignore and minify produces Perl 5 and 6 JS files that end with the .min.js suffix

[19:51] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/ce7b71d725

[19:51] <dalek> Perlito: f3f095d | (Ahmad M. Zawawi)++ | .gitignore:

[19:51] <dalek> Perlito: Added forgotten .gitignore

[19:51] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/f3f095d42f

[19:51] <dalek> Perlito: 5177835 | (Flavio S. Glock)++ | / (2 files):

[19:51] <dalek> Perlito: Merge pull request #15 from azawawi/master

[19:51] <dalek> Perlito: 

[19:51] <dalek> Perlito: Perl 5 and 6 minified with the .min.js suffix

[19:51] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/51778356c2

[19:51] *** dansamo left
[19:56] *** jeff_s2 left
[19:56] *** stevan_ left
[19:56] <dalek> evalbot/host07: c34f4aa | moritz++ | stdin:

[19:56] <dalek> evalbot/host07: stdin => Address to a Haggis

[19:56] <dalek> evalbot/host07: review: https://github.com/perl6/evalbot/commit/c34f4aab31

[19:57] *** jeff_s1 joined
[19:58] <moritz> r: say get

[19:58] <camelia> rakudo e22ac2: OUTPUT« Fair fa' your honest, sonsie face,␤»

[19:58] <dalek> evalbot/host07: d2a5ea4 | moritz++ | stdin:

[19:58] <dalek> evalbot/host07: remove leading space

[19:58] <dalek> evalbot/host07: review: https://github.com/perl6/evalbot/commit/d2a5ea4762

[19:58] <moritz> r: say get

[19:58] <camelia> rakudo e22ac2: OUTPUT«Fair fa' your honest, sonsie face,␤»

[19:59] <moritz> r: say lines.grep(m:i/knife/).elems

[19:59] <camelia> rakudo e22ac2: OUTPUT«Cannot call 'match'; none of these signatures match:␤:(Cool:D : $target, *%adverbs)␤  in method match at src/gen/CORE.setting:3386␤  in block  at /tmp/XU2SHKm1Ob:1␤␤»

[20:00] <moritz> r: say lines.grep(/:i knife/).elems

[20:00] <camelia> rakudo e22ac2: OUTPUT«1␤»

[20:00] <moritz> r: say lines.grep(/:i haggis/).elems

[20:00] <camelia> rakudo e22ac2: OUTPUT«2␤»

[20:00] <moritz> r: say lines.grep(/:i haggis/)

[20:00] <camelia> rakudo e22ac2: OUTPUT«But mark the Rustic, haggis-fed, Gie her a Haggis␤»

[20:01] *** iSlug left
[20:04] *** FROGGS left
[20:05] *** raiph left
[20:10] <colomon> r: say lines.grep(/:i clan/)

[20:10] <camelia> rakudo e22ac2: OUTPUT«␤»

[20:11] *** SamuraiJack_ left
[20:11] <colomon> r: say lines.grep(/:i puddin/)

[20:11] <camelia> rakudo e22ac2: OUTPUT«Great chieftain o the puddin'-race!␤»

[20:11] *** dmol left
[20:11] * colomon always forgets the right words, which is why it's nice to have it as stdin

[20:11] *** berekuk_ joined
[20:13] *** stevan__ joined
[20:13] *** bbkr left
[20:14] *** berekuk left
[20:23] *** aindilis joined
[20:29] *** lowpro30_ left
[20:34] <masak> evening, #perl6.

[20:34] <masak> I just realized something.

[20:34] <timotimo> that it's evening?

[20:34] <masak> "cargo culting" is a form of positive bias.

[20:34] <moritz> "cargo culting" is the most basic form of learning

[20:35] <masak> that, too ;)

[20:35] <moritz> newborns just do what they see others do; they don't understand why

[20:35] <masak> also, the form of madness that consists of doing the same thing over and expecting different results, is also a form of positive bias.

[20:35] <masak> ...maybe.

[20:37] <moritz> one day, when trying to brush my daughter's teeth, I thought I could use that "learning by mirroring" to good effect

[20:37] <moritz> I opened my mouth wide and said AAAAAAAAAHHH, and after a while she did too. Succcess!

[20:38] <timotimo> masak: so cargo culting is basically like madness :)

[20:38] <moritz> fast-forward a few days: $daugther doesn't want her teeth brushed. I open my mouth wide and say AAAAAAAAAHH. She does the same, and immediately clasps her hand in front of her open mouth. Defeat!

[20:39] <masak> :)

[20:39] <moritz> out-smarted by a 2y-old

[20:40] <masak> interesting though that she still mirrored you :)

[20:40] <moritz> timotimo: when it comes to software: yes.

[20:40] <masak> moritz: I learned a trick yesterday. when feeding a child, don't go "please open your mouth wide so I can put food in it". instead, go "show me what it sounds like when you bite into this piece of food" ... "oh wow, that sounded like a <something hilarious>!"

[20:40] <masak> (repeat N times)

[20:41] <masak> I found that really clever. I also saw it work in practice, really really well.

[20:41] <moritz> masak: :-)

[20:41] <masak> I think there's a psychological payoff involved. the feeder deposits some amount of imagination into the mind of the child, in the form of the choice of hilarious thing.

[20:42] <timotimo> that sounds like an umbrella!

[20:42] <masak> LOL

[20:42] * timotimo could probably succeed at feeding masak

[20:42] <masak> probably.

[20:42] *** kaare_ left
[20:43] <moritz> though of course when a child is old enough to be amused by that kind of stuff, it is probably also old enough to refuse food for good reasons

[20:45] <masak> I was just thinking that. "how long before that scheme stops working?"

[20:47] *** lizmat left
[20:48] *** lizmat joined
[20:48] *** woolfy left
[20:48] *** lowpro30_ joined
[20:53] *** avar left
[20:54] *** avar joined
[20:54] *** avar left
[20:54] *** avar joined
[21:01] *** woolfy joined
[21:02] *** bruges_ joined
[21:03] *** skids left
[21:04] *** dayangkun left
[21:04] *** bruges left
[21:09] *** PacoAir left
[21:13] *** grondilu_ joined
[21:13] *** bluescreen10 joined
[21:16] *** grondilu left
[21:17] *** dayangkun joined
[21:21] *** dmol joined
[21:24] * masak finds https://en.wikipedia.org/wiki/The_Hedgehog_and_the_Fox and thinks "Perl 5 is a hedgehog and Perl 6 is a fox"

[21:24] <masak> ...for some reason.

[21:32] *** grondilu_ is now known as grondilu

[21:32] *** grondilu left
[21:32] *** grondilu joined
[21:35] *** dmol left
[21:39] * lizmat caught up on backlog again and calls it a day

[21:43] <diakopter> lizmat: glad you had safe travels; 'nite

[21:43] *** jeff_s1 left
[21:43] <diakopter> masak: when you're a nail, everything looks like a hammer

[21:44] *** xenoterracide left
[21:46] *** ajr_ left
[21:47] *** lowpro30_ left
[21:55] *** BenGoldberg joined
[21:55] *** stevan__ left
[21:58] *** sahadev joined
[22:14] *** Ben_Goldberg joined
[22:16] *** BenGoldberg left
[22:18] *** denis_boyun left
[22:21] *** bluescreen10 left
[22:27] <dalek> nqp: 45b52fd | dwarring++ | examples/rubyish/ (10 files):

[22:27] <dalek> nqp: rubyish - style, use of '(' ~ ')' constructs, etc

[22:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/45b52fdb16

[22:35] *** pernatiy joined
[22:44] *** ssutch left
[22:45] <dalek> perl6-roast-data: e5babfd | coke++ | perl6_pass_rates.csv:

[22:45] <dalek> perl6-roast-data: today (automated commit)

[22:45] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/e5babfd621

[22:47] <timotimo> when you're a null everything looks like a Segmentation Fault (core dumped)

[22:52] * [Coke] thinks he's finally recovered from the lung crud he got post workshop. o/

[22:57] <timotimo> glad to hear!

[23:10] *** ssutch joined
[23:14] *** Mouq joined
[23:23] *** berekuk_ left
[23:25] *** berekuk joined
[23:36] *** Ben_Goldberg left
[23:49] *** telex left
[23:50] *** telex joined
[23:53] *** BenGoldberg joined
[23:59] *** stevan_ joined
