[00:00] <colomon_phone> He's checked in obviously...

[00:00] <diakopter> just tell them you're on that reservation

[00:00] <diakopter> I'll be right down to knock some heads

[00:01] *** raiph joined
[00:03] <raiph> timotimo: aiui moarvm has adequate gc and jit stories

[00:03] <raiph> (re pypy as alternate to moarvm)

[00:08] *** cognominal left
[00:13] <colomon_phone> diameter , we're good now

[00:21] *** adu left
[00:21] * tadzik grumbles at delayed flight

[00:22] <tadzik> although it's nice that they refer to passengers as "you guys"

[00:22] <tadzik> it has this friendly touch

[00:30] <lue> colomon_phone: does your phone use autocorrect? :)

[00:30] <colomon_phone> Yes

[00:31] <japhb_> auto-do-the-wrong-thing

[00:31] *** stevan_ joined
[00:32] <lue> .oO[ Autocorrect isn't stupid. It's just optimized for a small, narrow subset of common language. If the "auto" wasn't there, there'd be no complaints :) ]

[00:33] <geekosaur> .oO { autoincorrect }

[00:35] *** colomon_phone left
[00:40] <dalek> perl6-roast-data: 4510272 | coke++ | / (4 files):

[00:40] <dalek> perl6-roast-data: today (automated commit)

[00:40] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/45102728af

[00:41] <TimToady> .oO(autocorrupt)

[00:43] <dalek> roast: a53aa97 | coke++ | S32-num/int.t:

[00:43] <dalek> roast: pugs fudge

[00:43] <dalek> roast: review: https://github.com/perl6/roast/commit/a53aa97e5a

[00:44] *** stevan_ left
[00:49] <tadzik> the problem, imho, is that it assumes you are wrong and, well, autocorrects

[00:49] <tadzik> not autosuggests

[01:06] *** stevan_ joined
[01:08] *** adu joined
[01:14] <dalek> rakudo-star-daily: e9e085f | coke++ | log/ (5 files):

[01:14] <dalek> rakudo-star-daily: today (automated commit)

[01:14] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/e9e085f62b

[01:43] *** swuecho joined
[01:51] *** swuecho left
[02:02] *** snearch_ joined
[02:05] *** snearch left
[02:16] *** adu left
[02:17] <timotimo> i can't build moarvm because apparently apr.h is missing

[02:18] <timotimo> (and installing the -dev package for libapr1 doesn't help)

[02:18] <timotimo> but now it's time to get some sleep

[02:22] *** FROGGS joined
[02:22] <FROGGS> o/

[02:23] *** snearch_ left
[02:25] <geekosaur> timotimo: may need to tell it where apr lives, on my Mint the header is /usr/include/apr-1.0/apr.h

[02:39] *** FROGGS left
[03:00] * pmichaud arrives at the doubletree

[03:00] <TimToady> welcome!

[03:05] *** arlinius left
[03:08] *** census joined
[03:11] <diakopter> hi

[03:11] <Teratogen> howdy

[03:11] <Teratogen> what is happening in Austin?

[03:11] <diakopter> could someone who's met tadzik before come with me to the airport to pick him up at 1 a.m

[03:12] <japhb_> timotimo, join #moarvm, and then we can figure out build problems there ....

[03:12] <Teratogen> I would, but I am in Tempe, Arizona

[03:12] <census> hi diakopter!

[03:13] <census> when does the conference begin?  tomorrow?

[03:14] <pmichaud> diakopter: I can do that

[03:14] <diakopter> pmichaud: awesome

[03:14] <pmichaud> conference begins monday, hackathons and tutorials tomorrow

[03:14] <diakopter> well, today

[03:14] <pmichaud> well, yes, there were some today

[03:14] <pmichaud> they start for *me* tomorrow :)

[03:15] <pmichaud> diakopter: meet when/where to go to airport?

[03:15] <diakopter> lemme track his flight; sec

[03:16] *** mikemol joined
[03:23] <pmichaud> diakopter: I'm going to run to the store quickly; will check back on airport time

[03:33] *** danaj left
[03:36] <japhb_> pmichaud, is there currently a link somewhere that always points to the *newest* Rakudo Star tarball/msi?

[03:40] *** preflex left
[03:40] *** preflex_ joined
[03:40] *** ChanServ sets mode: +v preflex_

[03:40] *** preflex_ is now known as preflex

[03:42] *** adu joined
[03:47] *** danaj joined
[03:51] *** arlinius joined
[04:00] *** woolfy joined
[04:10] *** woolfy left
[04:10] <pmichaud> japhb_: (link) not at present, no.

[04:10] <pmichaud> we can certainly create one.

[04:14] *** japhb_ left
[04:16] *** japhb_ joined
[04:19] *** konundra left
[04:22] <sorear> hihi.

[04:26] *** Psyche^ joined
[04:28] *** raiph left
[04:29] *** Patterner left
[04:29] *** Psyche^ is now known as Patterner

[04:33] *** ggoebel left
[04:35] *** raiph joined
[04:35] *** Targen joined
[04:44] *** ggoebel joined
[04:45] *** Chillance left
[04:55] *** kaare_ joined
[05:03] *** census left
[05:10] *** atroxaper joined
[05:14] *** thou left
[05:16] *** rindolf joined
[05:34] *** sqirrel joined
[05:41] *** atroxaper left
[05:50] *** ggoebel left
[05:58] *** drbean left
[06:03] *** ggoebel joined
[06:05] <tadzik> hey

[06:06] <tadzik> I'm at doubletree, but the wrong one apparently

[06:06] <tadzik> this one is 6070 pr 6017 or something

[06:07] <tadzik> could someone drop diakopter a call or something? I think we missed each other

[06:08] *** drbean joined
[06:10] *** _sri left
[06:10] *** pecastro_ left
[06:10] *** Ulti left
[06:10] *** hoelzro left
[06:10] *** espent left
[06:10] *** `patch` left
[06:10] *** flussence left
[06:10] *** `patch` joined
[06:12] *** flussence joined
[06:13] *** hoelzro joined
[06:18] *** _sri joined
[06:18] *** pecastro joined
[06:21] *** Ulti joined
[06:21] *** espent joined
[06:21] *** atroxaper joined
[06:21] *** espent_ joined
[06:21] *** espent left
[06:29] *** zby_home joined
[06:29] *** dmol1 joined
[06:29] *** dmol left
[06:32] *** bruges joined
[06:32] *** aindilis` joined
[06:32] *** aindilis left
[06:32] *** bruges_ left
[06:35] *** aindilis` left
[06:36] *** Targen left
[06:36] *** Ulti left
[06:38] <tadzik> ok, I'm found anf fine :)

[06:39] <TimToady> \o/

[06:39] <rindolf> Hi all.

[06:39] *** rindolf left
[06:39] <atroxaper> Hello!

[06:40] *** rindolf joined
[06:49] *** adu left
[06:49] *** Ulti joined
[06:53] *** rindolf left
[06:53] *** japhb_ left
[06:53] *** rindolf joined
[07:04] *** cooper left
[07:08] *** rindolf left
[07:08] *** rindolf joined
[07:13] *** cooper joined
[07:13] *** cooper left
[07:13] *** cooper joined
[07:33] *** denisboyun_ joined
[07:41] *** rindolf left
[07:42] *** rindolf joined
[07:47] *** cognominal joined
[07:58] *** xilo left
[08:06] *** smace joined
[08:16] *** rindolf left
[08:16] *** rindolf joined
[08:31] *** stevan_ left
[08:32] *** stevan_ joined
[08:32] *** stevan_ left
[08:33] *** ggoebel left
[08:48] *** rindolf left
[08:48] *** rindolf joined
[08:51] *** xilo joined
[09:00] *** tgt joined
[09:02] *** ggoebel joined
[09:06] *** rindolf left
[09:06] *** rindolf joined
[09:10] *** cognominal left
[09:24] *** Guest1337 joined
[09:38] *** rindolf left
[09:38] *** rindolf joined
[09:44] <moritz> \o

[09:52] <nwc10> o/

[10:00] *** cognominal joined
[10:00] *** spider-mario joined
[10:02] *** smace left
[10:06] *** spider-mario left
[10:08] *** spider-mario joined
[10:08] <dalek> doc: 2814352 | GlitchMr++ | lib/Int.pod:

[10:08] <dalek> doc: expmod and is-prime aren't operators.

[10:08] <dalek> doc: review: https://github.com/perl6/doc/commit/28143523cc

[10:08] *** tomyan joined
[10:13] *** rindolf left
[10:14] *** rindolf joined
[10:18] *** pochi left
[10:25] <moritz> anyway, back to the topic of those operators that want their types known at compile time

[10:25] <moritz> what's the use case?

[10:25] <moritz> beyond a desparate case of premature optimization, that is

[10:35] <timotimo> yes, premature all the optimizations!

[10:36] <huf> pedobear the programmer?

[10:38] *** smace joined
[10:39] <moritz> timotimo: no honestly, is there a use case except optimization?

[10:40] <timotimo> exploding even sooner at compile time than before is the only one i can think of

[10:41] <moritz> I'm not convinced, for the following reasons:

[10:41] <moritz> 1) it seems we have many performance issues not related to dispatching at all; I think we're attacking from the wrong angle here, and not attacking the real culprit

[10:43] <moritz> 2) such a feature should probably belong to the caller, not to the callee

[10:43] <timotimo> that seems sensible, indeed.

[10:43] <moritz> the callee doesn't care whether it got the right types at run time or a compile time; it's the caller that cares (in terms of optimization)

[10:47] <moritz> 3) we have many operators take (Any, Any) and then coerce; so in nearly all cases, such a trait would be a noop

[10:47] <moritz> *that take

[10:55] *** Guest1337 left
[10:56] *** rindolf left
[10:57] *** rindolf joined
[10:58] *** raiph left
[11:03] *** testtest joined
[11:06] *** testtest left
[11:12] *** census joined
[11:39] *** kaare_ left
[11:42] *** rindolf left
[11:43] *** rindolf joined
[11:45] *** ztt_ joined
[11:45] *** smace left
[11:48] *** rindolf left
[11:49] *** smace joined
[11:56] *** smace left
[11:59] <atroxaper> Does anybody know where i can find .fmt implementation?

[12:00] *** census left
[12:01] <tadzik> various places in src/core

[12:01] <tadzik> (assuming you mean rakudo)

[12:01] *** smace joined
[12:02] <tadzik> atroxaper: https://gist.github.com/tadzik/5693435

[12:04] *** denisboyun_ left
[12:05] *** rindolf joined
[12:10] <atroxaper> tadzik: Oh... It's great way! Thank you.

[12:10] *** kivutar joined
[12:11] *** colomon joined
[12:23] <colomon> o/

[12:23] <arnsholt> \o

[12:23] <arnsholt> tadzik: You in the lobby or your room? =)

[12:27] *** tgt left
[12:27] *** tgt joined
[12:28] <tadzik> arnsholt: still in the room

[12:28] <tadzik> arnsholt: are you in the lobby? I'll be there in 2 minutes

[12:29] *** kivutar left
[12:31] *** rindolf left
[12:31] <arnsholt> tadzik: Still in the room

[12:32] <arnsholt> colomon's just jumped in the shower, but I'll drag him down to the lobby as soon as he's out

[12:32] *** rindolf joined
[12:32] <arnsholt> I need some breakfast, as well

[12:34] <tadzik> okay, I'm sitting near the reception, will wait for you guys

[12:36] <arnsholt> Cool. Sounds like the shower's stopped, so not too long now, I think

[12:37] <tadzik> heh

[12:38] <tadzik> I feel like ine Big Brother :D

[12:38] <colomon> putting on shoes...

[12:42] * tadzik can't wait

[12:44] *** domidumont joined
[12:54] *** lizmat joined
[12:57] <lizmat> morning #perl6!

[13:00] *** rindolf left
[13:00] *** rindolf joined
[13:03] *** woolfy joined
[13:05] *** silug left
[13:07] *** tomyan left
[13:14] *** rindolf left
[13:20] *** smace left
[13:21] *** espadrine joined
[13:29] *** daniel-s joined
[13:34] *** tomyan joined
[13:36] *** FROGGS[mobile] joined
[13:36] <FROGGS[mobile]> morning

[13:36] <grondilu> morning

[13:39] *** kivutar joined
[13:39] *** risou_awy is now known as risou

[13:40] *** tomyan left
[13:41] *** zby_home left
[13:45] *** woolfy left
[13:46] *** lizmat left
[13:46] *** dmol1 left
[13:46] *** crab2313 joined
[13:46] *** dmol joined
[13:46] *** colomon left
[13:47] *** thou joined
[13:48] *** crab2313 left
[13:49] *** crab2313 joined
[13:52] *** kaare_ joined
[14:01] *** FROGGS[mobile] left
[14:02] *** Chillance joined
[14:03] <pmichaud> good morning, #perl6

[14:04] <nwc10> is it cooler than Frankfurt?

[14:05] <pmichaud> so far, yes.

[14:05] <pmichaud> 20degC at the moment (at 09h00)

[14:05] *** dukeleto joined
[14:06] <dukeleto> o/

[14:06] <dukeleto> github.com is down, in case y'all didn't notice

[14:06] <dukeleto> push/pull and website is borked

[14:06] <nwc10> http://perl5.git.perl.org/ is up

[14:06] <pmichaud> today's high is expected to be 32degC

[14:07] *** dmol left
[14:09] *** dmol joined
[14:10] <pmichaud> "14:00 UTC We are investigating issues with our database server"  -- status.github.com

[14:10] *** leont joined
[14:12] *** ztt_ left
[14:12] *** ajr joined
[14:13] *** ajr is now known as Guest45506

[14:13] <anocelot> Wait, github is down?  I'm in the git training today.  :D

[14:13] <anocelot> So it is.  LOL

[14:18] *** colomon joined
[14:18] <colomon> o/

[14:22] *** birdwindupbird joined
[14:29] *** FROGGS[mobile] joined
[14:30] *** denisboyun_ joined
[14:35] *** FROGGS joined
[14:35] *** spider-mario left
[14:36] *** denisboyun_ left
[14:37] *** aborazmeh joined
[14:39] <pmichaud> anyone at the hackathon venue yet?

[14:40] <FROGGS> pmichaud: yes

[14:40] <FROGGS> 8 ppl or so

[14:40] <pmichaud> I'll head that way then.

[14:40] <FROGGS> \o/

[14:41] <FROGGS> the TCC building is on the north side of the roadworks (so between the roadworks and the I.35, but directly near the roadworks)

[14:41] <FROGGS> I walked a bit to figure that out

[14:41] <pmichaud> no problem, I'll be driving my car to the parking lot :)

[14:41] <pmichaud> already got my map

[14:43] <anocelot> That's good, because the UT website is down for maint.

[14:43] <FROGGS> anocelot: ya :/

[14:43] <FROGGS> but no problem, so I had the chance to see some squirrels

[14:44] <anocelot> FROGGS: They're pretty acrobatic here.

[15:00] *** japhb_ joined
[15:02] *** FROGGS[mobile] left
[15:04] *** crab2313 left
[15:04] * jnthn makes it to the hackathon o/

[15:05] <FROGGS> \o/

[15:05] *** Ulti left
[15:05] <FROGGS> it is more some of slideathon, ehh? :o)

[15:05] <jnthn> well, my slides have hacking dependencies :P

[15:05] <FROGGS> maybe I'll use the night more for slide rather than this time

[15:06] *** FROGGS[mobile] joined
[15:08] * masak rezzes o/

[15:08] <masak> hello from the pre-YAPC::NA hackathon, Austin, TX! \o/

[15:10] *** zby_home_ joined
[15:11] *** FROGGS[mobile] left
[15:12] *** zby_home_ left
[15:13] <colomon> jnthn: Not sure how we beat you here...

[15:18] <anocelot> Looks like github is back up now.

[15:21] *** zakalwe left
[15:24] *** zakalwe joined
[15:28] *** lizmat joined
[15:29] *** woolfy joined
[15:32] * moritz waves to the hackathoneers

[15:33] <colomon> o/

[15:33] <lizmat> moritz /o

[15:33] <colomon> http://71.10.146.50:3001/report # new look, not sure it's an improvement

[15:34] *** kivutar left
[15:34] <FROGGS> ohh, all these colors :o)

[15:35] <moritz> colomon: I'd propose to leave out the question marks with black background

[15:35] * moritz should fix MiniDBI

[15:37] <colomon> moritz: FROGGS is trying to find the CPAN smoker page to steal... he's got it.

[15:37] <FROGGS> colomon: http://www.cpantesters.org/distro/S/SDL.html#SDL-2.540

[15:37] <colomon> FROGGS++

[15:37] *** Guest45506 is now known as ajr_

[15:38] <FROGGS> but maybe someone should just play a bit with the html and make a design

[15:42] <colomon> I'd very gratefully accept contributions...

[15:42] * colomon is busy stealing colors

[15:42] <colomon> there's a good bit of additional information that should probably go up, too.

[15:43] *** rindolf joined
[15:44] <TimToady> UT maps are back up too

[15:45] <TimToady> though you can just find TCC on google maps

[15:45] <colomon> http://71.10.146.50:3001/report 

[15:45] <colomon> updated, duller colors.

[15:45] <colomon> err, less insane colors

[15:45] <colomon> hidden question marks

[15:45] *** labster joined
[15:47] <FROGGS> colomon: I'm giving it a try

[15:48] <FROGGS> (after coffee)

[15:51] <anocelot> TimToady: Yeah; that's what I eventually did.  :)

[15:52] <masak> colomon++ # http://71.10.146.50:3001/report

[15:53] <masak> I might get around to fixing some of my modules today.

[15:53] <masak> first priority is my talks, though.

[15:54] *** dukeleto left
[15:55] <masak> colomon: could I donate a new yellow to you? I know yellow is really hard to get right in these kinds of status diagrams.

[15:55] <colomon> masak: I'd love it.

[15:55] <masak> ok, hold on.

[15:56] *** rindolf left
[15:59] <dalek> rakudo/nom: af2b6ce | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp:

[15:59] <dalek> rakudo/nom: A temporary fix for faster module loading

[15:59] <dalek> rakudo/nom: 

[15:59] <dalek> rakudo/nom: *All* directories and *all* types were being checked, whereas always only the

[15:59] <dalek> rakudo/nom: first was being used.  This quick fix short-circuits search as soon as the

[15:59] <dalek> rakudo/nom: first candidate is found.

[15:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/af2b6cef0f

[15:59] <dalek> rakudo/nom: 0020ef7 | lizmat++ | src/Perl6/ModuleLoader.nqp:

[15:59] <dalek> rakudo/nom: Merge pull request #145 from lizmat/fastermoduleload

[15:59] <dalek> rakudo/nom: 

[15:59] <dalek> rakudo/nom: A temporary fix for faster module loading

[15:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0020ef749f

[15:59] <masak> colomon: suggest red => #d22, yellow => #ff5, green => #1c1. also suggest the yellow have black text, #000. the other two can have white text, I think.

[15:59] <masak> (tested in inkscape against the same grey background as the page has.)

[15:59] <colomon> okay, will try that once I've got my current change tested.  :)

[15:59] <masak> cool.

[15:59] <dalek> rakudo/nom: 0f88d34 | (Elizabeth Mattijsen)++ | src/ (2 files):

[15:59] <dalek> rakudo/nom: Fix for autoviv Typed hash problem

[15:59] <dalek> rakudo/nom: 

[15:59] <dalek> rakudo/nom: As suggested by jnthn.  I think there is a ticket for this, but do not know

[15:59] <dalek> rakudo/nom: its number.

[15:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0f88d34e30

[15:59] <dalek> rakudo/nom: 7d5480e | lizmat++ | /:

[16:00] <dalek> rakudo/nom: Merge pull request #146 from lizmat/autovivtypedhash

[16:00] <dalek> rakudo/nom: 

[16:00] <dalek> rakudo/nom: Fix for autoviv Typed hash problem

[16:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7d5480ea1c

[16:01] <tadzik> I get build failures in nqp, ./nqp --target=pir --output=src/stage2/gen/NQPP5QRegex.pir \

[16:01] <tadzik>     src/stage2/gen/NQPP5QRegex.nqp

[16:01] <tadzik> exists_keyed_str() not implemented in class 'ResizableStringArray'

[16:01] * colomon has royally broken his code

[16:02] <lizmat> fwiw, I'm utilizing by brand new commit bit to merge my own pull requests  :-)

[16:03] <masak> oh noes what have we done

[16:03] <masak> j/k, lizmat++ :D

[16:03] <tadzik> :)

[16:03] *** aborazmeh left
[16:04] <dalek> rakudo/nom: 88dae22 | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[16:04] <dalek> rakudo/nom: Fix for "exists" handling on typed hashes

[16:04] <dalek> rakudo/nom: 

[16:04] <dalek> rakudo/nom: Made in cooperation with jnthn++ and moritz++

[16:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/88dae22ecf

[16:04] <dalek> rakudo/nom: 6973abb | (Elizabeth Mattijsen)++ | src/core/Hash.pm:

[16:04] <dalek> rakudo/nom: Suggested change by jnthn

[16:04] <dalek> rakudo/nom: 

[16:04] <dalek> rakudo/nom: See http://irclog.perlgeek.de/perl6/2013-05-28#i_7124130 .  Spectested ok.

[16:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6973abb4cc

[16:04] <dalek> rakudo/nom: 99c82d3 | lizmat++ | src/core/ (2 files):

[16:04] <dalek> rakudo/nom: Merge pull request #147 from lizmat/existstypedhash

[16:04] <dalek> rakudo/nom: 

[16:04] <dalek> rakudo/nom: Fix for "exists" handling on typed hashes

[16:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/99c82d3732

[16:05] *** ajr_ left
[16:08] *** rindolf joined
[16:11] *** dalek left
[16:11] *** dalek joined
[16:11] *** ChanServ sets mode: +v dalek

[16:13] *** gdey joined
[16:13] <masak> gdey: \o

[16:14] <gdey> masak:hello

[16:14] <masak> gdey: again, let me know as soon as you get stuck; either IRL or here. :)

[16:14] <gdey> Will do thanks!

[16:14] <moritz> it seems lizmat++ has commit access to rakudo. \o/

[16:15] <colomon> \o/

[16:15] <masak> I was convinced RT had a ticket about .perl infinite-regressing on things like 'my $a = []; $a.push($a); $a.perl' -- but I looked, twice, carefully, and I cannot find it.

[16:15] <masak> anyone else want to have a go -- or should I just create a Justin Case ticket about it?

[16:16] <moritz> I'm also convinced that we have a ticket for that

[16:17] <moritz> I'll try to find it

[16:17] <masak> I searched for '.perl' -- 50 tickets, but not that one. then I searched for 'infinite' -- 34 tickets, but not that one.

[16:17] * masak searches in his mailbox, too

[16:18] <tadzik>  /me has a "what idiot wrote that" moment looking at https://github.com/tadzik/panda/blob/master/lib/Panda/Ecosystem.pm#L51

[16:18] <tadzik> and I'm quite sure it was me

[16:19] <colomon> tadzik: one of the great joys of being a programmer

[16:19] <tadzik> yeah

[16:19] *** raiph joined
[16:19] <dalek> rakudo/nom: d670aaa | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp:

[16:19] <dalek> rakudo/nom: Oops, we had a diff + in there that wasn't supposed to be there

[16:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d670aaa0e1

[16:19] <tadzik> does anyone around know how ./configure --prefix usually works, and can explain it to me?

[16:21] *** risou is now known as risou_awy

[16:22] <hoelzro> tadzik: how do you mean?

[16:23] *** vmspb joined
[16:23] <tadzik> hoelzro: well, as far as I understand it, what you put in --prefix somehow affects the source code itself

[16:23] <tadzik> I wonder how does that work, istr there's a config.h or so?

[16:23] <hoelzro> right

[16:23] <moritz> masak: I can't find it either :(

[16:24] * masak submits rakudobug

[16:24] <hoelzro> if I were writing C, I would probably write prefix >> config.h

[16:24] <tadzik> I'm trying to make --prefix work for panda, so I need to alter bin/panda

[16:24] <hoelzro> it's a bit trickier for a language like Perl =/

[16:24] <hoelzro> but you could have a Config.pm or something I guess

[16:24] <tadzik> I can just put ###CHOCOLATECAKE on top of the file, and then s/// it

[16:24] <masak> r: my $a = []; $a.push($a); say $a.perl; say "alive"

[16:24] <camelia> rakudo 99c82d: OUTPUT«(timeout)»

[16:24] <tadzik> well, Config.pm may not work, because I also need to alter the module loading process

[16:25] <tadzik> I need panda to be entirely self-contained, so installing new modules or new versions will never confuse it

[16:25] <tadzik> so I'll be putting all its deps along with it

[16:25] <moritz> masak: https://rt.perl.org/rt3/Ticket/Display.html?id=58922

[16:26] * masak looks

[16:26] *** rindolf left
[16:26] <moritz> masak: it seems that [Coke]++ has migrated to be a spec issue (which it also is)

[16:26] <moritz> and then rejected it

[16:26] <masak> oh!

[16:26] *** rindolf joined
[16:26] <moritz> maybe re-open it, and stall it until the spec issue is resolved

[16:27] <masak> it's an issue on roast; I should probably migrate it to specs.

[16:27] <moritz> oh

[16:27] * masak does that

[16:27] <masak> oh; already done.

[16:27] <masak> https://github.com/perl6/specs/issues/6

[16:31] <dalek> rakudo/nom: 4c6ef79 | labster++ | src/core/IO.pm:

[16:31] <dalek> rakudo/nom: make dir() lazy; written while waiting for plane to YAPCNA

[16:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4c6ef790b9

[16:31] <dalek> rakudo/nom: 9557da2 | (Brent Laabs)++ | src/core/IO.pm:

[16:31] <dalek> rakudo/nom: Merge pull request #161 from labster/nom

[16:31] <dalek> rakudo/nom: 

[16:31] <dalek> rakudo/nom: make dir() lazy; written while waiting for plane to YAPCNA

[16:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9557da29eb

[16:32] * masak commented on https://github.com/perl6/specs/issues/6

[16:32] <tadzik> labster++

[16:32] <tadzik> nice one

[16:32] <labster> I did make it safely to the hackathon :)

[16:32] <moritz> labster++

[16:33] <colomon> labster++

[16:33] *** denisboyun_ joined
[16:35] <moritz> jnthn: I have a fix for JSON::Path; want to give me a commit bit, or do you prefer pull requests?

[16:36] <jnthn> commkt bit

[16:37] <colomon> rn: say $Inf

[16:37] <jnthn> moritz: you got one

[16:37] <camelia> niecza v24-55-g7942a09: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Variable $Inf is not predeclared at /tmp/i13FYgoTks line 1:␤------> [32msay [33m⏏[31m$Inf[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ␤  at /home/p6eval/niecz…

[16:37] <camelia> ..rakudo 99c82d: OUTPUT«Inf␤»

[16:37] <moritz> jnthn: tusen takk; fix pushed

[16:37] <jnthn> takk *you*

[16:38] <masak> :)

[16:38] <moritz> var så gud

[16:38] <dalek> nqp/rak-jvm-support: cd35271 | jonathan++ | src/vm/parrot/6model/reprs/NativeCall.c:

[16:38] <dalek> nqp/rak-jvm-support: Add missing gc_mark registration.

[16:38] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/cd35271c0c

[16:38] <masak> you people attempting Scandinavian -- it's so cute!

[16:39] <tadzik> takk for i dag

[16:39] <moritz> masak: understanding is quite OK, speaking... well. Writing is really hard for me though

[16:41] <masak> tadzik: impressive.

[16:41] *** smace joined
[16:41] <masak> moritz: I have the same with German.

[16:41] *** rindolf left
[16:41] *** rindolf joined
[16:41] <moritz> colomon: can you please nopaste/gist the test output for DateTime::Format? I just got no test failures, and wonder why http://71.10.146.50:3001/project/DateTime::Format shows it red

[16:42] <colomon> moritz: give me a minute or two

[16:42] <moritz> and the last commit was May 06, so it's not a recent fix

[16:42] <tadzik> my german showoff is "Ich besischtige die sehenswuerdigkeiten", or something

[16:42] <moritz> s/sch/ch/but otherwise correct

[16:42] <tadzik> I'm good at pronouncing it :)

[16:42] <moritz> so you are :-)

[16:44] * masak can parse that :)

[16:44] <masak> "I'm checking the sights", right?

[16:45] <moritz> yes

[16:46] *** konundra joined
[16:46] <pmichaud> lizmat:  Hash[TKey,TVal].new   # create hash with TKey keys and TVal values

[16:47] <pmichaud> for example:  Hash[Int, Book]   # create hash with Int keys and Book values

[16:47] <masak> rn: class Book {}; say Hash[Int, Book].new

[16:47] <camelia> niecza v24-55-g7942a09: OUTPUT«Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Builtins.InvokeSub (Niecza.P6any obj, Niecza.Variable[] pos) [0x00000] in <filename unknown>:0 ␤  at Niecza.Kernel.ToComposable (Niecza.STable arg…

[16:47] <camelia> ..rakudo 99c82d: OUTPUT«().hash␤»

[16:47] <colomon> moritz: when I run the tests by hand I get all successes as well.

[16:47] <masak> rakudo accepts that :)

[16:47] <pmichaud> Array[Int]

[16:48] <pmichaud> if I say  "my Book %hash{Int}"

[16:48] <moritz> colomon: then it might be interesting why it thinks the tests fail

[16:48] <colomon> moritz: but when I try to install it with panda, it fails.

[16:48] <pmichaud> that desugars to    Hash[Int, Book]

[16:49] <colomon> moritz: https://gist.github.com/colomon/5694107

[16:50] *** Guest1337 joined
[16:51] <FROGGS> colomon: https://gist.github.com/FROGGS/624b75ab0d331015b35c

[16:51] <colomon> FROGGS: https://github.com/colomon/SmokeResults is my github repo for this.  :)

[16:51] <colomon> public/css has the style sheet

[16:52] <moritz> colomon: might be a precompilation issue :(

[16:53] <moritz> indeed, fails when precompiled

[16:55] <moritz> seems like it might be not too bad to reduce to a minimal example, because it doesn't depend on any other modules

[16:56] <moritz> and Text::Emotion is another module that fails its tests when precompiled, and passes otherwise

[16:56] <moritz> no other prrequs necessary

[16:56] <masak> :/

[16:57] <masak> oh, and that's a single 50-line module.

[16:57] <masak> should be eminently golfable.

[16:57] <masak> https://github.com/MattOates/Text--Emotion/blob/master/lib/Text/Emotion/Scorer.pm

[16:57] <masak> wut, it has a '1;' in the end!?

[16:57] <masak> :D

[16:58] * masak makes a pull request removing it

[16:59] <masak> other things that look wrong in that module: 'package Text::Emotion' and then, inside that, 'class Text::Emotion::Scorer'...

[17:00] <lizmat> r: class Baz { method new (*@p, *%n) { say @p; say %n } }; say Baz[Int,Str].new

[17:00] <camelia> rakudo 99c82d: OUTPUT«===SORRY!===␤Type Baz cannot accept type arguments␤»

[17:01] <pmichaud> r: class Baz[::TKey, ::TVal] { };  say Baz[Int,Str].new

[17:01] <camelia> rakudo 99c82d: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unable to parse class definition␤at /tmp/n4iXbNemZD:1␤------> [32mclass Baz[33m⏏[31m[::TKey, ::TVal] { };  say Baz[Int,Str].[0m␤    expecting any of:␤        statement list␤        prefix or term␤        prefix or meta-prefix␤    …

[17:02] *** smace left
[17:02] <colomon> FROGGS: I think I'm going to swap the two reds

[17:04] <pmichaud> r: say Hash[Int,Int].new

[17:04] <camelia> rakudo 99c82d: OUTPUT«().hash␤»

[17:06] <masak> r: my %h = Hash[Int, Int]; %h{"OH"} = "HAI"; say %h.perl

[17:06] <camelia> rakudo 99c82d: OUTPUT«Cannot look up attributes in a type object␤  in method pairs at src/gen/CORE.setting:7097␤  in method list at src/gen/CORE.setting:6828␤  in method STORE at src/gen/CORE.setting:6959␤  in block  at /tmp/QDEAjEYe9b:1␤␤»

[17:06] *** woolfy left
[17:06] <masak> r: my %h = Hash[Int, Int].new; %h{"OH"} = "HAI"; say %h.perl

[17:06] <camelia> rakudo 99c82d: OUTPUT«("OH" => "HAI").hash␤»

[17:07] *** birdwindupbird left
[17:08] *** rindolf left
[17:09] *** rindolf joined
[17:09] <pmichaud> Hash[TVal, TKey}

[17:09] <pmichaud> Hash[TVal, TKey]

[17:11] <colomon> http://71.10.146.50:3001/report # new look thanks to FROGGS++

[17:12] <masak> ...sorry everyone who is not attending the hackathon; IRC lines are bound to be incomprehensible...

[17:13] <colomon> FROGGS: I'm thinking maybe centering instead of left: 25% for the table?  

[17:13] <TimToady> are you trying to say that the rest of them are comprehensible?

[17:13] <FROGGS> colomon: if you know how to center a table cross platf^Wbrowser

[17:13] <masak> TimToady: point taken.

[17:14] <colomon> FROGGS: there's no modern equivalent of align="center"  ?

[17:15] *** zby_home joined
[17:16] *** wooden left
[17:18] <masak> colomon: for text or images?

[17:18] <colomon> masak: tables

[17:18] <colomon> I've got something that works for Chrome, anyway.

[17:18] <colomon> reload the report.  :)

[17:18] <masak> colomon: http://www.w3.org/Style/Examples/007/center

[17:18] <masak> colomon: url?

[17:19] <labster> masak: http://71.10.146.50:3001/report

[17:21] <masak> colomon: did you try my color suggestions?

[17:21] *** broone joined
[17:21] <colomon> masak: I let FROGGS redesign the colors.

[17:21] <sorear> greetings

[17:21] <masak> oh, ok.

[17:21] <colomon> masak: so, no.  sorry.

[17:21] <colomon> (I mean, I didn't even try them.)

[17:21] <masak> fwiw, I think my suggestion is better. :)

[17:21] <colomon> masak++

[17:21] <masak> it's in the backlog if you're curious.

[17:23] <masak> also, what do the letters "P", "T", and "B" mean?

[17:23] <pmichaud> r: my @array = 3,4,5;  say @array.perl;   say [3,4,5].perl

[17:23] <camelia> rakudo 9557da: OUTPUT«Array.new(3, 4, 5)␤[3, 4, 5]␤»

[17:23] <colomon> Prereq, Tests, Build

[17:24] <colomon> the stage it failed at

[17:24] <colomon> I'm going to add a key in a minute or two.

[17:25] *** rindolf left
[17:25] <colomon> except some of the Ps are Passed

[17:25] <masak> :/

[17:25] <colomon> Is there an easy way to get a check mark or something?

[17:26] <masak> ✓

[17:26] *** broone left
[17:26] <masak> https://en.wikipedia.org/wiki/Tick_(check_mark)

[17:27] <jnthn> masak: Yes, but is there a tick in a box?

[17:27] <pmichaud> .u 2611

[17:27] <yoleaux> U+2611 BALLOT BOX WITH CHECK [So] (☑)

[17:27] <colomon> I'm thinking outside the box.  ;)

[17:27] <rjbs> and don't forget...

[17:27] <rjbs> .u 2327

[17:27] <yoleaux> U+2327 X IN A RECTANGLE BOX [So] (⌧)

[17:27] <pmichaud> .u 237b

[17:27] <yoleaux> U+237B NOT CHECK MARK [So] (⍻)

[17:27] <dalek> rakudo/nom: 9cf3a88 | labster++ | src/core/IO.pm:

[17:27] <dalek> rakudo/nom: keep lines() with limit from reading an extra line

[17:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9cf3a88b60

[17:28] <rjbs> I really hate 237B.

[17:28] <rjbs> It often seems to be rendered almost indistinguishably from a check mark.

[17:28] <rjbs> pmichaud: See you in Austin?

[17:28] <pmichaud> rjbs: I'm here now!  and having fun

[17:29] *** rindolf joined
[17:29] <rjbs> I need to put U+20E0 onto my keyboard map.

[17:29] <rjbs> pmichaud: Cool!

[17:30] *** tomyan joined
[17:30] <pmichaud> rjbs: we're all now amused by looking up U+237B

[17:31] <pmichaud> and mostly saying "that's just wrong"

[17:31] <masak> s/amused/horrified/ :)

[17:32] <sorear> rjbs: looking forward to seeing you

[17:33] <masak> +1

[17:33] <rjbs> I am looking forward to being seen, especially if I am eating something delicious when it happens.

[17:33] * rjbs hopes to make it to hear about MOARVM.

[17:33] <rjbs> I forget what its competitionw as...

[17:34] <dalek> roast: 2004f14 | labster++ | S16-filehandles/io.t:

[17:34] <dalek> roast: unfudge rakudo: lines() with limit

[17:34] <dalek> roast: review: https://github.com/perl6/roast/commit/2004f14224

[17:34] <rjbs> Oh, man, p6 on JVM is opposite Tim's Size Me!

[17:35] <rjbs> Looks like I'll almost certainly get to moar, though.

[17:41] <dalek> rakudo/nom: 21a9579 | (Elizabeth Mattijsen)++ | src/core/Any.pm:

[17:41] <dalek> rakudo/nom: Support for subscript adverb :delete in combination with :kv :p :k :v

[17:41] <dalek> rakudo/nom: 

[17:41] <dalek> rakudo/nom: As described in S02:2514

[17:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/21a957937d

[17:41] <dalek> rakudo/nom: d0ac9a7 | (Elizabeth Mattijsen)++ | / (16 files):

[17:41] <dalek> rakudo/nom: Merge remote-tracking branch 'upstream/nom' into deleteadverbkvpkv

[17:41] <dalek> rakudo/nom: 

[17:41] <dalek> rakudo/nom: Conflicts:

[17:41] <dalek> rakudo/nom: 	src/core/Any.pm

[17:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d0ac9a78de

[17:41] <dalek> rakudo/nom: d292900 | (Elizabeth Mattijsen)++ | src/core/Any.pm:

[17:41] <dalek> rakudo/nom: We don't need no Mu

[17:41] <dalek> rakudo/nom: 

[17:41] <dalek> rakudo/nom: After discussing this with jnthn at PLPW

[17:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d2929008ff

[17:41] <dalek> rakudo/nom: 12b13e5 | lizmat++ | src/core/Any.pm:

[17:41] <dalek> rakudo/nom: Merge pull request #158 from lizmat/deleteadverbkvpkv

[17:41] <dalek> rakudo/nom: 

[17:41] <dalek> rakudo/nom: Support for subscript adverb :delete in combination with :kv :p :k :v

[17:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/12b13e5254

[17:43] <moritz> .u U+237B

[17:43] <yoleaux> U+237B NOT CHECK MARK [So] (⍻)

[17:44] <colomon> New version, with checks and key: http://71.10.146.50:3001/report

[17:44] <tadzik> yoleaux: seen daxim?

[17:44] <tadzik> seen daxim

[17:44] <tadzik> pff

[17:44] <moritz> .seen daxim

[17:44] <yoleaux> I saw daxim 29 May 2013 13:22Z in #perl6: <daxim> r: say ('foo.bar.baz' ~~ /(\w+)+/).list.perl

[17:44] <tadzik> ah, thanks moritz 

[17:44] <masak> .seen masak

[17:44] <yoleaux> You're right there.

[17:45] <masak> hrm. :)

[17:46] <masak> yoleaux: does that mean you're at the hackathon, too? :P

[17:47] <atroxaper> night! gl hf gg (as starcrafters says)

[17:49] <dalek> rakudo/nom: 2fe2537 | (Elizabeth Mattijsen)++ | src/core/List.pm:

[17:49] <dalek> rakudo/nom: Make List.gist not warn on undefined values

[17:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2fe2537aa1

[17:49] <dalek> rakudo/nom: 1dace73 | (Elizabeth Mattijsen)++ | src/core/List.pm:

[17:49] <dalek> rakudo/nom: .gist is better for defined values than .Str

[17:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1dace737f9

[17:49] <dalek> rakudo/nom: 7869a67 | (Elizabeth Mattijsen)++ | src/core/List.pm:

[17:49] <dalek> rakudo/nom: Always just use .gist to create the final .gist

[17:49] <dalek> rakudo/nom: 

[17:49] <dalek> rakudo/nom: As suggested by Moritz++

[17:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7869a67fbb

[17:49] <dalek> rakudo/nom: b2072f5 | lizmat++ | src/core/List.pm:

[17:49] <dalek> rakudo/nom: Merge pull request #152 from lizmat/ListgistAnyok

[17:49] <dalek> rakudo/nom: 

[17:49] <dalek> rakudo/nom: Make List.gist not warn on undefined values

[17:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b2072f578c

[17:50] *** spider-mario joined
[17:53] <colomon> Okay, that's enough fiddling with the smoke results.  Next project to hack on...

[17:58] *** labster left
[17:58] *** fgomez left
[18:00] *** fgomez joined
[18:02] <masak> lunch &

[18:02] <jnthn> lunch &

[18:04] <TimToady> lunch &

[18:04] <lizmat> lunch &

[18:05] <colomon> lunch !

[18:05] <felher> lunch :

[18:06] <sorear> felher: you here?

[18:07] <sorear> luch &

[18:07] *** colomon left
[18:07] <dalek> panda/prefix: cdf0c1a | tadzik++ | b (2 files):

[18:07] <dalek> panda/prefix: Add --prefix to bootstrap.

[18:07] <dalek> panda/prefix: 

[18:07] <dalek> panda/prefix: Now panda and its dependencies are self-contained separately, so you

[18:07] <dalek> panda/prefix: actually can update some panda dependencies without breaking panda

[18:08] <dalek> panda/prefix: itself.

[18:08] <dalek> panda/prefix: 

[18:08] <dalek> panda/prefix: Awesome!

[18:08] <dalek> panda/prefix: review: https://github.com/tadzik/panda/commit/cdf0c1ab85

[18:08] <felher> sorear: nope, but I though i'll join you in spirit and get something to eat, too. Even though it's (a bit past) dinner time here in germany :)

[18:08] *** colomon joined
[18:09] *** FROGGS left
[18:11] <moritz> it's not past dinner time until about 6am :-)

[18:13] *** ggoebel left
[18:13] *** smace joined
[18:17] <felher> moritz: ah, fair enough :)

[18:23] *** ggoebel joined
[18:24] *** vmspb left
[18:30] *** FROGGS joined
[18:39] *** xilo left
[18:39] *** rindolf left
[18:40] *** rindolf joined
[18:41] *** rindolf left
[18:41] *** rindolf joined
[18:42] *** rindolf left
[18:43] *** rindolf joined
[18:43] *** rindolf left
[18:44] *** rindolf joined
[18:44] *** stevan_ joined
[18:45] *** rindolf left
[18:48] *** woolfy1 joined
[18:54] *** ajr joined
[18:54] *** ajr is now known as Guest91182

[18:54] *** Guest91182 is now known as ajr_

[19:00] *** ggoebel left
[19:02] *** rindolf joined
[19:06] *** telex left
[19:08] *** telex joined
[19:12] *** ggoebel joined
[19:14] <nwc10> it's all gone very quiet. Is everyone sniffing whiteboard pens? :-)

[19:21] *** Gruber is now known as Grrrr

[19:25] <woolfy1> the group of Perl 6 developers that are at YAPC::NA went out to lunch and heated debate just an hour ago.  They can return within the hour, or it may take longer...

[19:25] <woolfy1> Big group, by the way, many of them quite vocal on this channel...

[19:27] *** trexy left
[19:29] *** domidumont left
[19:29] <lue> .oO(heated debate?)

[19:33] *** mucker joined
[19:36] <mucker> http://themucker.github.io/plu/ perl on the browser !

[19:36] *** thou left
[19:39] <moritz> wtf does that do? it froze my browser :-)

[19:39] <colomon> FROGGS: http://acmeism.org/

[19:39] <TimToady> we're back now, so the noise should go back up :)

[19:39] <moritz> \o/

[19:40] * jnthn back too :)

[19:40] <moritz> mucker: does that try to compile perl to JS?

[19:40] <mucker> moritz: yes. emscripten kinda like 

[19:41] <mucker> http://dg.cx/jsperl/ but I the build files are on github

[19:41] <moritz> that explains why it's so slow :-)

[19:43] <mucker> the interesting thing, (I haven't added it yet) you can use open and other file ops

[19:45] *** Ultali joined
[19:45] <moritz> and where can it open those files?

[19:45] <moritz> from local paths?

[19:46] * moritz kills his browser after several minutes of hanging

[19:46] <mucker> currently you can add files in tmp

[19:46] <mucker> but later I add tutorial.txt or something similiar

[19:46] * masak is back, but hacking slides

[19:46] <sorear> hiii

[19:47] <sorear> wb masak ;)

[19:47] <mucker> moritz: does the execute button hang ? 

[19:47] <timotimo> we should emscripten parrot to js, it will be vastly faster than on C, because js has jits!

[19:48] <dalek> panda: 096063e | tadzik++ | bin/panda:

[19:48] <dalek> panda: Uncomment some code which I commented out for unknown reasons

[19:48] <dalek> panda: review: https://github.com/tadzik/panda/commit/096063ec77

[19:48] <masak> sorear: everything's interconnected. category theory is warping my brain ;)

[19:49] <mucker> masak: sounds like LSD :P

[19:50] <timotimo> https://rt.perl.org/rt3/Ticket/Display.html?id=118263 - so apparently if i derive a class form a role, the role will be "mixed into" an empty class and that's why the error message is so opaque

[19:51] <colomon> Is there somewhere out there with hints on building rakudo/jvm-support?

[19:52] <tadzik> yeah

[19:52] <tadzik> you need nqp on branch rak-jvm-support

[19:53] <tadzik> and build both with ConfigureJVM.pl

[19:54] <nwc10> and java (1.)7

[19:54] <nwc10> and if the JVM SEGVs, you need a newer JVM with that bug fixed

[19:54] <nwc10> pwnage!

[19:54] <colomon> there's no lazy man's --gen-nqp option for ConfigureJVM, eh?

[19:55] *** s1n joined
[19:55] <tadzik> no eye deer

[19:55] <colomon> doesn't seem to be.

[19:56] *** census joined
[19:56] *** dagurval joined
[19:57] <dagurval> r: "/tmp/a.pm6".spurt("sub abc() is export { }"); require("/tmp/a.pm6") <abc>; abc();

[19:57] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Error while compiling block  (source text: "\"/tmp/a.pm6\".spurt(\"sub abc() is export { }\"); require(\"/tmp/a.pm6\") <abc>; abc();"): Error while compiling op call: Error while compiling block : Error while compiling op call: Null PMC access in find_…

[19:57] *** atroxaper left
[19:58] <dagurval> Null PMC is always a bug right? :)

[19:58] *** census left
[19:58] <jnthn> yes

[19:58] <dagurval> is this a known one?

[19:58] <sorear> evil code :)

[19:59] <jnthn> Probably accidental code.

[19:59] <jnthn> It probably wanted '...' around the sub

[19:59] <jnthn> Not "..." which interpolates the closure

[19:59] <jnthn> But that shouldn't caues an error like this

[19:59] <sorear> r: "foo { }"

[19:59] <camelia> rakudo b2072f:  ( no output )

[20:00] <sorear> r: sub abc() is export 

[20:00] <camelia> rakudo b2072f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Missing block␤at /tmp/Fh7RFUXTXA:1␤------> [32msub abc() is export[33m⏏[31m<EOL>[0m␤    expecting any of:␤        statement list␤        prefix or term␤        prefix or meta-prefix␤        new name to be defined␤»…

[20:00] <sorear> r: eval "sub abc() is export { }"

[20:00] <camelia> rakudo b2072f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Missing block␤at eval_0:1␤------> [32msub abc() is export [33m⏏[31m<EOL>[0m␤    expecting any of:␤        statement list␤        prefix or term␤        prefix or meta-prefix␤        new name to be defined␤»

[20:03] *** raiph left
[20:04] <dalek> panda: 914450e | tadzik++ | bin/panda.bat:

[20:04] <dalek> panda: Re-add panda.bat which I accidentally removed when working on panda2

[20:04] <dalek> panda: review: https://github.com/tadzik/panda/commit/914450e3a2

[20:04] <dalek> panda: e0474ee | tadzik++ | lib/Panda/Installer.pm:

[20:04] <dalek> panda: Fix GH-36

[20:04] <dalek> panda: review: https://github.com/tadzik/panda/commit/e0474ee191

[20:06] *** cooper left
[20:06] <masak> there's a lot of bubbling enthusiasm in this room. I realize I'd been missing the hackathon feeling a bit :)

[20:07] * moritz missses it

[20:08] <sorear> :)

[20:08] <colomon> :)

[20:09] <avuserow> anything bite-sized going on that I could help a bit with?

[20:09] * avuserow is around but not hacking actively yet

[20:11] <sorear> t/nqp/24-module.t ............... All 3 subtests passed

[20:11] <sorear> jnthn: rak-jvm-support is not totally clean tests, expected?

[20:11] <jnthn> sorear: yes, there' sthat one, and then a handful of regex test failures

[20:11] <jnthn> The regex ones are probably not so hard to hunt

[20:12] <sorear> how about I make a pass at that?

[20:12] <jnthn> Go for it. iirc, some of them are related to newline stuff

[20:13] <sorear> nod

[20:13] <sorear> will have many qs later

[20:13] <jnthn> :)

[20:13] <jnthn> The relevant code-gen is in src/vm/jvm/QAST/Compiler.nqp

[20:13] * colomon is still hung up getting Java 1.7 installed on OS X 10.6.8

[20:14] * colomon is also lightly hacking on Niecza in another window

[20:14] <nwc10> colomon: I believe that it involves hacks. I haven't attempted it

[20:14] <sorear> jnthn: https://gist.github.com/sorear/5694782, full list of fails FWIW

[20:15] <colomon> nwc10: yes, I'm working on the hacks now.  :)

[20:15] <colomon> http://stackoverflow.com/questions/13536667/how-to-install-java-jdk-7-on-snow-leopard

[20:15] <sorear> nwc10: you here and/or coming?

[20:16] <nwc10> sorear: no, I'm not

[20:18] *** xilo joined
[20:19] <colomon> nwc10: :(

[20:20] <tadzik> r: https://gist.github.com/tadzik/5694821 # bug?

[20:20] <camelia> rakudo b2072f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Two terms in a row␤at /tmp/NQkDK_ZQ2S:1␤------> [32mhttps[33m⏏[31m://gist.github.com/tadzik/5694821 # bug?[0m␤    expecting any of:␤        argument list␤        postfix␤        infix stopper␤        infix or meta-infix␤        st…

[20:20] <tadzik> eeh?

[20:20] <tadzik> r: https://gist.github.com/tadzik/5694821

[20:20] <camelia> rakudo b2072f: OUTPUT«rmdir is disallowed in restricted setting␤current instr.: 'throw' pc 347557 (src/gen/CORE.setting.pir:151689) (src/gen/CORE.setting:8887)␤called from Sub 'die' pc 36608 (src/gen/CORE.setting.pir:14320) (src/gen/CORE.setting:578)␤called from Sub 'die' pc 36506 (src/…

[20:20] <tadzik> hrmng

[20:20] <tadzik> ...can someone try it locally and tell me if it's a bug, or I just don't understand END?

[20:22] *** zby_home left
[20:22] *** kivutar joined
[20:23] *** naids joined
[20:23] *** sqirrel left
[20:23] <avuserow> r: sub foo { say "called foo"; END {say "in END";} }

[20:23] <camelia> rakudo b2072f: OUTPUT«in END␤»

[20:24] <sorear> jnthn: FWIW, the JVM use of PREFIX does not quite folllow the filesystem hierarchy standard.  can fix that and/or talk about it later

[20:24] *** rindolf left
[20:25] <sorear> colomon: any luck?

[20:25] <colomon> not yet

[20:25] <colomon> In theory I've got it on my machine now, but it's not finding it yet

[20:25] <sorear> hash -r / ldconfig stuff?

[20:26] <colomon> maybe?  hmmm

[20:27] <sorear> > $*VM

[20:27] <sorear> java.lang.NullPointerException

[20:28] <sorear> I HAS A BUILT RAKUDO-JVM

[20:28] <arnsholt> =D

[20:28] <colomon> \o/

[20:29] <avuserow> .oO( there should be a $*DEFAULT_CRASH_TYPE to tell you if it's a NullPMC, NullPointerException, segfault, etc)

[20:30] <dalek> niecza: 67d20f1 | (Solomon Foster)++ | lib/CORE.setting:

[20:30] <dalek> niecza: Try to get CUSTOM_LIB working.

[20:30] <dalek> niecza: 

[20:30] <dalek> niecza: Very simple version, but hopefully enough to make panda happy.

[20:30] <dalek> niecza: review: https://github.com/sorear/niecza/commit/67d20f1824

[20:30] *** kaare_ left
[20:30] <sorear> 2+2 works, anyway

[20:30] <jnthn> :)

[20:31] *** mucker left
[20:31] <colomon> sorear: jnthn might have hardcoded that.  Try 2+3 just to be sure.  ;)

[20:32] <nwc10> no, try 6*9 :-)

[20:34] <pmichaud> 42.

[20:35] <lue> r: say 6*9

[20:35] <camelia> rakudo b2072f: OUTPUT«54␤»

[20:35] <lue> .oO(darn, rakudo's broken)

[20:41] *** ilogger2 joined
[20:41] *** ChanServ sets mode: +v ilogger2

[20:43] * colomon is giving up on Rakudo-JVM for the moment, in the interesting on not going insane trying to figure out how to get Java 1.7 working.  :\

[20:44] <colomon> moritz++ # was just going to start working on fixing JSONPath, then realized you had already done it.  :)

[20:45] *** woolfy joined
[20:45] <masak> BUT...

[20:45] <masak> r: say (6 * 9).base(13)

[20:45] <camelia> rakudo b2072f: OUTPUT«42␤»

[20:45] <masak> \o/

[20:46] <masak> I'm not sure DNA was aware of that, at least at the time of writing the books... :)

[20:46] <colomon> masak: I always just figured he ran out of letters before he could get to the rest of the formula.  :)

[20:47] <masak> heh.

[20:48] <colomon> tadzik: any notion how hard it would be to make the Rakudo version of Panda install modules for Niecza?

[20:49] <colomon> tadzik: I realize you're involved in a big discussion at the whiteboard rather than checking IRC at the moment, I just wanted to float the idea before I forgot it.  

[20:49] <lue> masak: "I may be a sorry case, but I don't write jokes in base 13." -- Douglas Adams

[20:51] <masak> lue: ah, yes. of course you'd know this, too :P

[20:52] <lue> (hey, I had to look up the exact wording of the quote!)

[20:52] <masak> yeah, yeah :P

[20:52] * masak .oO( with a nick like yours... )

[20:52] <masak> :P

[20:54] <lue> r: say 42.chr; # only fitting the answer to LUE would mean this Perl 6

[20:54] <camelia> rakudo b2072f: OUTPUT«*␤»

[20:56] <eiro> hello everyone

[20:57] <sorear> hello eiro

[20:57] <sorear> you in austin?

[20:57] <eiro> i wish i would be in austin. i can't afford it 

[20:57] *** tomyan joined
[20:57] <masak> eiro! \o/

[20:58] <eiro> just discovered MoarVM and submit patches to make it compile on linux 

[20:58] <masak> eiro++

[20:58] <eiro> hey masak :) you're at austin ? 

[20:58] <masak> eiro: then you should probably check out #moarvm, too :)

[20:58] <masak> eiro: I'm in Austin, hacking on my talks :D

[20:59] <colomon> eiro: something to do with APR?

[20:59] <eiro> colomon: yep. apr is just forgotten under linux (the string was empty) 

[21:00] <eiro> https://github.com/eiro/MoarVM/commit/74e2c80b0717d63a61758deaf964f67e97ba9749

[21:00] <colomon> eiro: I built APR by hand to get it working on Linux.  If you've fixed that, that's a big eiro++

[21:01] <eiro> thanks! now i can read a VM code :)

[21:03] <lue> So, is MoarVM supposed to be another VM for NQP, like JVM and Parrot? (That's what it seems to be, but for a second I thought differently)

[21:03] <masak> lue: yes.

[21:04] <masak> lue: see http://strangelyconsistent.org/blog/a-vm-for-6model

[21:04] <eiro> colomon: btw the patch is gross, just repeating a line in both if and else block. i don't know why it was empty (maybe there was a good reason?) but it fixed the problem to fill it   

[21:04] <colomon> eiro: atm I'm just focusing on verifying it works.  

[21:05] <masak> even a crude fix is better than a non-working state :)

[21:06] <sorear> I guess I'm going to have to learn to read this JAST stuff

[21:06] <sorear> jnthn: working on t/nqp/24-module.t atm.

[21:07] <dalek> ecosystem: 424e795 | dagurval++ | META.list:

[21:07] <dalek> ecosystem: Added Image::Resize

[21:07] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/424e795ed7

[21:08] <masak> sorear++!

[21:09] <jnthn> sorear: That one is some closure related thingy, iirc...

[21:09] <jnthn> sorear++ # hacking on nqp-jvm

[21:15] <colomon> masak, jnthn: I can confirm that eiro++'s patch makes MoarVM build on my Linux box (without the workaround hack I used yesterday)

[21:15] <tadzik> can someone give me a hand with https://gist.github.com/tadzik/5694821 ?

[21:15] <colomon> tadzik: what's the problem?

[21:16] <tadzik> colomon: try running it :)

[21:16] <sorear> "fortunately, rakudo can work for quite a while with completely broken closures"

[21:16] <tadzik> tl;dr: END is set up even if foo() is never ran

[21:16] <colomon> big error there.

[21:16] <colomon> ooh!

[21:16] <tadzik> if that's correct, then it's at least confusing

[21:17] <sorear> tadzik: That's how it's supposed to work.

[21:17] <jnthn> tadzik: Yes, it hould be

[21:17] <jnthn> tadzik: Did you want LEAVE?

[21:17] <sorear> END blocks are called once, period.

[21:17] <sorear> at process exit

[21:17] <colomon> He wanted END but only if foo was called

[21:17] <sorear> it does not work like atexit(3)

[21:17] <tadzik> I do want it at process exit

[21:18] <sorear> then you need to manage a list of directories-to-remove

[21:18] <tadzik> if I have foo() creating a random tmpdir, but I want them all destroyed atexit

[21:18] <tadzik> okay

[21:18] <jnthn> OK. Have an our variable you set in the sub.

[21:18] <colomon> how about END { rmdir $foo if $foo }

[21:18] <colomon> ?

[21:18] <tadzik> yeah, I could do that, but it's still broken if I have multiple foos

[21:18] <sorear> (or use eval 'END { rmdir $s }', but ick)

[21:18] <tadzik> I guess I have to go the way sorear++ says

[21:19] <colomon> wouldn't an array of foos work?

[21:20] <tadzik> bah

[21:20] *** btyler joined
[21:20] <sorear> colomon: 16:18 < sorear> then you need to manage a list of directories-to-remove

[21:20] <sorear> btyler! o/

[21:20] <colomon> sorear++

[21:21] <btyler> hiya

[21:23] * colomon 's version: https://gist.github.com/colomon/5695031

[21:24] *** mst joined
[21:25] <sorear> jnthn: got tips for reading jast?

[21:25] <jnthn> Don't? ;)

[21:25] <masak> ingy: https://github.com/perl6/nqp/tree/master/src/QRegex

[21:26] <masak> and https://github.com/perl6/nqp/blob/master/src/QAST/Regex.nqp I guess.

[21:30] *** Guest1337 joined
[21:31] <sorear> 2081 lines of javap output \o/

[21:32] * masak pictures the name "javap" as being the result of someone saying "java" and then quickly having his mouth covered by someone else

[21:32] *** woolfy left
[21:33] <sorear> qb_13, qb_14, ...

[21:34] <pmichaud> it does somewhat feel as though we'd like to be able to dynamically add closures to be run at END time

[21:34] <masak> r: my &closure = { say "OH HAI" }; END { &closure() }

[21:34] <camelia> rakudo b2072f: OUTPUT«OH HAI␤»

[21:35] <masak> pmichaud: worksforme ;)

[21:35] <colomon> pmichaud: it is quite easily done by the end user already.

[21:36] <masak> r: my $un-greeting; my &closure = { say $un-greeting }; $un-greeting = "bai bai!"; END { &closure() }

[21:36] <camelia> rakudo b2072f: OUTPUT«bai bai!␤»

[21:36] * colomon isn't trying to argue against the idea, mind you.

[21:36] <tadzik> I would expect that to work :)

[21:36] <sorear> I've always thought that atexit() would make a nice addition

[21:36] <sorear> perhaps under that name

[21:36] <masak> pmichaud: I'm also not arguing against the idea. I would really like a nice API for dynamically building regexes, even though most of that can be done with /<$rx>/

[21:37] <masak> which is an analogous situation.

[21:37] <tadzik> I think it should be a phaser, phasers are those things that mangle the regular control flow

[21:37] <pmichaud> https://gist.github.com/pmichaud/5695072

[21:37] <tadzik> as atexit would

[21:37] <pmichaud> is the best I can come up with

[21:37] <lue> .oO(ATEXIT { })

[21:37] <tadzik> heh, yeah :)

[21:38] <dalek> panda: d3042b8 | tadzik++ | lib/Panda.pm:

[21:38] <dalek> panda: Fix GH-6

[21:38] <dalek> panda: review: https://github.com/tadzik/panda/commit/d3042b8f68

[21:41] <colomon> ATEXIT: https://gist.github.com/colomon/5695083

[21:43] <tadzik> haha, awesome

[21:43] <tadzik> now we only need a module

[21:44] <pmichaud> and perhaps there's an argument to be made that the closures should be run LIFO  :)

[21:44] <colomon> pmichaud: good point

[21:44] <masak> yes.

[21:44] <FROGGS> eiro: the empty string was intention

[21:45] <colomon> should I do a module?  or should we just add it straight into the language?

[21:45] <masak> pmichaud++ colomon++ tadzik++ # you just created a new phaser in, like, 10 minutes!

[21:45] <masak> colomon: modules, IMO.

[21:45] <masak> module*

[21:45] <tadzik> haha! Beat that, spock!

[21:45] <pmichaud> I'm thinking it's a potential language construct, but we don't have enough use cases to know it exactly yet

[21:45] <pmichaud> so, module

[21:45] <colomon> works for me.

[21:45] <pmichaud> if it turns out to be incredibly common, then it can be added to language

[21:45] <colomon> I've got it.

[21:46] <tadzik> colomon++

[21:46] <colomon> module name?

[21:46] <colomon> Perl6::ATEXIT

[21:46] <colomon> ?

[21:47] <tadzik> Phaser::ATEXIT?

[21:47] <espadrine> what's the difference with END if they're both LIFO?

[21:47] <sorear> espadrine: END foo =~ BEGIN ATEXIT foo

[21:48] <sorear> ATEXIT foo =~ eval 'END foo'

[21:48] <masak> espadrine: this one is per-sub call. END never is.

[21:49] <espadrine> ok

[21:50] *** rindolf joined
[21:51] <lue> is quoteharder a real thing? (Looking at S02:3831, "macro quote:<❰ ❱> ($text) { quasi { {{{$text}}}.quoteharder } }")

[21:52] * sorear found enterFromMain

[21:53] <eiro> FROGGS: why was it ?

[21:55] <masak> lue: not in the sense that it's something more than just an example in S02.

[21:56] *** aindilis joined
[21:56] <lue> so it might as well be .foobar . OK then, it seemed like maybe it was an actual core language feature :)

[21:57] <ingy> masak: ta

[21:57] <dalek> ecosystem: d4da6a1 | colomon++ | META.list:

[21:57] <dalek> ecosystem: Add Phaser::ATEXIT

[21:57] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/d4da6a184a

[21:58] <colomon> 12 minutes -- not bad.

[21:58] <colomon> Guess I should make the README better.

[22:01] <colomon> done.

[22:02] * sorear wonders what hllName is about

[22:03] <arnsholt> IIRC, it's the name of the HLL that owns a type

[22:03] <jnthn> sorear: Are we in nqp, perl6, etc.

[22:03] <jnthn> Used for type mapping, knowing when we cross a NQP/Rakudo boundary, etc.

[22:03] <arnsholt> Since NQP objects leaking into Perl 6 is generally wrong

[22:04] <sorear> Is a "static code ref" the same thing as a protosub in niecza?

[22:06] <avuserow> does hyper or race work in any implementations?

[22:07] <sorear> not afaik

[22:08] <jnthn> sorear: I'm not sure I know what a protosub is in niecza.

[22:08] <jnthn> sorear: Sounds like, though.

[22:09] <jnthn> sorear: It's the original code ref before any closure cloning of it, etc.

[22:09] <FROGGS> eiro: the thing in the string is a static lib, my patch from yesterday or so was meant to use the dynamic library instead, which get loaded by -lapr-1

[22:10] <FROGGS> eiro: ... which fixed a build issue on my box

[22:10] <FROGGS> eiro: so after your patch it will include the static library and load the dynamic one

[22:11] <FROGGS> eiro: I'm curious that it works that way... what linux do you have? what architecture?

[22:12] *** gdey joined
[22:14] <dalek> roast: db118a6 | (Elizabeth Mattijsen)++ | S (2 files):

[22:14] <dalek> roast: Unfudge tests that I made passing today

[22:14] <dalek> roast: review: https://github.com/perl6/roast/commit/db118a6ca2

[22:16] *** Guest1337 left
[22:18] *** Guest1337 joined
[22:19] *** thou joined
[22:19] <pmichaud> lizmat++  # "tests that I made passing today"

[22:20] <pmichaud> I always like hearing that.

[22:24] *** tomyan left
[22:28] *** labster joined
[22:28] <sorear> jnthn: How does gather/take work?

[22:29] *** tomyan joined
[22:31] <jnthn> sorear: On Parrot uses coroutines. On the JVM uses the thing I didn't finish yet...

[22:31] *** silug joined
[22:32] <jnthn> sorear: It's the transform where at the point of a call you ensure the stack is empty.

[22:32] <jnthn> And then uses exceptions as a stack iterator.

[22:32] <jnthn> And save the stack

[22:33] <jnthn> the "stack empty on call" invariant is already upheld.

[22:33] <sorear> Neat

[22:34] <sorear> How is invokedynamic being used here?

[22:34] <sorear> I have no idea what's going on with this closure bug or how to instrument debugging for it

[22:35] <dalek> v5: bb684f4 | (Tobias Leich)++ | lib/Perl5/ (3 files):

[22:35] <dalek> v5: added support for: do EXPR

[22:35] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/bb684f4a11

[22:35] <dalek> v5: 4edddfd | (Tobias Leich)++ | / (2 files):

[22:35] <dalek> v5: added "use vars" support, +128 passing tests

[22:35] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/4edddfd850

[22:36] <colomon> FROGGS++

[22:38] <sorear> jnthn: how can I tell what part of the AST qb_13 corresponds to?  Is there anything else that's good to look at besides ast and classfile/javap?

[22:39] <jnthn> sorear: Hmm...does javap not show annotations... 

[22:39] <jnthn> 'cus the actual name is in that.

[22:41] *** tomyan left
[22:44] *** havenwood joined
[22:44] <sorear>     RuntimeVisibleAnnotations:

[22:44] <sorear>       0: #8(#9=s#109,#11=s#14,#13=s#110,#15=[s#111,s#112,s#113],#16=[],#17=[],#18=[],#19=[J#20])

[22:44] <sorear> that?

[22:44] <FROGGS> maybe you have to read that backwards

[22:45] <jnthn> um. Yes, that. How...beautifully dumped :/

[22:45] <colomon> http://71.10.146.50:3001/report # now with stats for for the first date, too.  +10 passing modules in the last two weeks (and I think maybe three more today, but not in the stats yet)

[22:46] *** gdey left
[22:46] <sorear> Is it just me or is the sub name passed to every invokedynamic?

[22:47] <jnthn> sorear: Yes; Perl 6 sub names don't comply with JVM method names 

[22:47] <sorear> jnthn: Is that just an ignored parameter for debugging?

[22:47] <sorear> colomon: Nifto

[22:47] <jnthn> sorear: Yeah

[22:48] <jnthn> sorear: passing it as an arg isn't so bad, though; the JIT should be able to see that the bound callsite always drops it.

[22:48] <sorear> niecza embeds a mangled version of the source name in the true method name

[22:48] <jnthn> I pondered that, but was too lazy to mangle. :)

[22:49] <jnthn> Don't mind if that happens.

[22:50] * sorear wonders about wval_noa vs subcall_noa

[22:52] <jnthn> sorear: wval_noa is for world values (lookups in an SC)

[22:52] <jnthn> subcall_noa is a subroutine call, looking up the name lexically

[22:52] <jnthn> So we do the resolution/lookup once.

[23:00] *** rindolf left
[23:07] *** gdey joined
[23:07] <timotimo> i feel like someone has to build ACME::QuoteHarder

[23:11] *** snearch joined
[23:12] <sorear> jnthn: some qs for later: 1. is there a nice way to dump SixModelObjects?  2. what IDE if any do you use?

[23:16] <lue> I don't suppose there's a way to do what I mean by "use Module::DebugStuff is export(:debug)" in a "main" module, is there?

[23:17] <lue> (I could probably have the user set a global variable first and then "if ($*debug) { use Module::DebugStuff; }" in the main module, but I wonder if there's another way)

[23:18] *** colomon joined
[23:18] * colomon has retreated back to his hotel room

[23:22] *** gdey left
[23:28] <lue> Seems like EXPORT might be my solution, but I can't get it to do anything :/

[23:29] <timotimo> you mean sub EXPORT?

[23:33] <lue> yes. Apparently I can't put in under C<module TheModule;>, and you must export it, in other words "sub EXPORT(*@a) is export {"

[23:34] *** FROGGS joined
[23:35] <timotimo> try our sub EXPORT

[23:35] <timotimo> but yeah, that's what's currently implemented. it has a few holes

[23:35] *** labster left
[23:36] <tadzik> sorear: I'm quite sure jnthn uses Visual Studio

[23:40] <lue> Also, use Module :named <positional> breaks (<positional> :named as well), and the use statement in the EXPORT sub doesn't work outside the sub (to be expected, but grr) :/

[23:41] <lue> timotimo: I like sub EXPORT is export better. It feels more -Ofun :)

[23:42] <timotimo> hehe

[23:42] <timotimo> -Olol

[23:42] *** japhb_ joined
[23:47] *** FROGGS left
[23:48] *** Guest1337 left
[23:49] <lue> r: macro foo(:$flag) { quasi { say 42 } if $flag }; foo(:flag);

[23:49] <camelia> rakudo b2072f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Too many positional parameters passed; got 1 but expected 0␤at /tmp/8bO2z1Miku:1␤------> ␤»

[23:50] * lue thought he had an answer for a second, but nope

[23:56] <lue> Am I not allowed to use named parameters in macros, or is that a bug?

