[00:00] *** jerome__ joined
[00:19] *** kurahaupo left
[00:24] <dalek> specs: 1dbea27 | lue++ | S02-bits.pod:

[00:24] <dalek> specs: [S02] Fix small formatting code typo.

[00:24] <dalek> specs: review: https://github.com/perl6/specs/commit/1dbea27a7d

[00:29] *** REPLeffect left
[00:57] *** PacoAir left
[00:58] *** anuby joined
[01:05] *** imIKARi left
[01:06] *** berekuk left
[01:08] *** berekuk joined
[01:10] *** berekuk left
[01:16] *** REPLeffect joined
[01:29] *** snearch left
[01:32] *** jerome__ left
[01:44] *** jerome__ joined
[01:49] *** FROGGS left
[01:57] *** lizmat left
[02:03] *** FROGGS joined
[02:07] *** lustlife joined
[02:17] <pmichaud> FROGGS:  404 Not Found

[02:18] <pmichaud> FROGGS: also, you shouldn't send out the email announcement until the files are actually available :-/

[02:19] <pmichaud> that looks... bad.

[02:19] * pmichaud double-checks the release guide docs.

[02:21] <dalek> rakudo/nom: 8bf24a8 | pmichaud++ | docs/release_guide.pod:

[02:21] <dalek> rakudo/nom: Don't send out email announcements before tarballs are uploaded.

[02:21] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8bf24a868c

[02:23] *** lizmat joined
[02:32] *** japhb_ joined
[02:33] <japhb_> Erm, Rakudo commit f7bfee6cd6259be7463b458a78a67efa639af12a looks rather wrong to me ....

[02:34] <japhb_> Was Rakudo already released like that?

[02:49] *** raiph joined
[03:13] *** kurahaupo joined
[03:15] *** rom1504 joined
[03:33] *** hypolin left
[03:37] *** fildon__ joined
[03:40] *** hypolin joined
[03:40] <dalek> perl6-bench: ead65e6 | (Geoffrey Broadwell)++ | / (2 files):

[03:40] <dalek> perl6-bench: Factor compiler definitions out of timeall into compilers.pl

[03:40] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/ead65e6742

[03:40] *** fildon_ left
[03:55] *** preflex_ joined
[03:56] *** preflex left
[03:56] *** preflex_ is now known as preflex

[04:05] <pmichaud> japhb_: you're correct, f7bfee6cd is incorrect.

[04:05] <pmichaud> there hasn't been a tarball published yet, though, so.... I dunno.

[04:06] <pmichaud> I'm guessing we might need some qc for first-time-release-managers

[04:06] <pmichaud> although in this case FROGGS isn't a first-timer.  So, I dunno.

[04:12] *** kurahaupo left
[04:12] <dalek> rakudo/nom: 17b9fe4 | pmichaud++ | docs/release_guide.pod:

[04:12] <dalek> rakudo/nom: Release announcements now have .md extension.

[04:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/17b9fe4578

[04:14] *** kurahaupo joined
[04:20] *** IKARi__ joined
[04:24] *** census joined
[04:25] *** Psyche^ joined
[04:29] *** Patterner left
[04:29] *** Psyche^ is now known as Patterner

[04:30] *** zby_home joined
[04:34] *** adu left
[04:36] *** spider-mario joined
[05:03] *** kurahaupo left
[05:03] *** spider-mario left
[05:07] *** prevost left
[05:08] *** dmol joined
[05:10] <FROGGS> pmichaud: ó.ò sorry

[05:11] <FROGGS> these are the correct links: http://froggs.de/perl6/rakudo-2013.05.tar.gz http://froggs.de/perl6/nqp-2013.05.tar.gz

[05:14] <dalek> rakudo/nom: f97991c | (Tobias Leich)++ | VERSION:

[05:14] <dalek> rakudo/nom: [release] bump VERSION to 2013.05

[05:14] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f97991ccc0

[05:14] <dalek> rakudo/nom: 9743c6b | (Tobias Leich)++ | docs/release_guide.pod:

[05:14] <dalek> rakudo/nom: Merge branch 'nom' of github.com:rakudo/rakudo into nom

[05:14] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9743c6bd7a

[05:21] *** snoopy joined
[05:24] <FROGGS> I've rebuild the tarball to have the right version fwiw

[05:26] <FROGGS> I'm really sorry that I've messed up the release, will start the release next time a few ours earlier to not get into midnight sleepiness again

[05:26] <FROGGS> and I'll double check what I'm going to commit, I believe I made the same mistake in november already

[05:32] *** raiph left
[05:40] *** FROGGS[mobile] joined
[05:44] *** zby_home left
[05:44] *** FROGGS left
[05:45] *** tgt left
[05:47] *** census left
[05:49] *** kurahaupo joined
[05:53] *** atroxaper joined
[05:53] *** FROGGS joined
[05:54] <atroxaper> Hello guys!

[05:55] <FROGGS> hi atroxaper 

[05:55] <atroxaper> Does anybody know when new Rakudo Start will release?

[05:57] <FROGGS> atroxaper: there will be a release when  all modules pass, see https://github.com/coke/rakudo-star-daily/blob/master/log/test-modules.log

[05:58] <FROGGS> atroxaper: currently are three modules affected

[06:00] *** FROGGS[mobile] left
[06:02] <atroxaper> Ok. Thank you.

[06:06] *** atroxaper left
[06:08] *** SamuraiJack joined
[06:09] *** dmol left
[06:14] *** sqirrel joined
[06:16] <cognominal__> r: say('a' ~~ /a|aa/)

[06:16] <camelia> rakudo 9743c6: OUTPUT«｢a｣␤␤»

[06:16] <cognominal__> I thought Perl 6 was using LTM. How is that compatible with that result?

[06:24] *** arlinius left
[06:26] *** lizmat left
[06:28] *** SamuraiJack left
[06:33] <TimToady> I don't see an 'aa' to match, so it falls back to 'a'

[06:34] *** raiph joined
[06:35] <tadzik> hmm. Stratopan is about having custom, CPAN-like repos in a cloud. Custom. CPAN-like. Something for panda, maybe

[06:36] <tadzik> I seem to have a life-long account too

[06:36] <cognominal__> oops

[06:37] <cognominal__> indeed

[06:37] <cognominal__> r: say('aa' ~~ /a|aa/)

[06:37] <camelia> rakudo 9743c6: OUTPUT«｢aa｣␤␤»

[06:37] <cognominal__> everything is find and dandy indeed.

[06:38] <cognominal__> and the term "falls back" is probably inappropriate for declarative matching.

[06:39] <cognominal__> r: say('aa' ~~ m:p5/a|aa/)

[06:39] <camelia> rakudo 9743c6: OUTPUT«[31m===[0mSORRY![31m===[0m␤Adverb p5 not allowed on m␤at /tmp/ppi6jWJRG8:1␤------> [32msay('aa' ~~ m:p5/a|aa/[33m⏏[31m)[0m␤»

[06:39] <cognominal__> r: say('aa' ~~ m:P5/a|aa/)

[06:39] <camelia> rakudo 9743c6: OUTPUT«｢a｣␤␤»

[06:40] <cognominal__> P5 | is the P6 ||   :)

[06:40] *** lizmat joined
[06:40] <cognominal__> good morning lizmat.

[06:41] <cognominal__> …and other #perl6 denizens

[06:42] <lizmat> morning cognominal!

[06:42] <lizmat> and #perl6!

[06:42] <cognominal__> learning that denizen comme from old french  deinz 'within' which is probably the ancestor of the modern "dans"

[06:44] <cognominal__> indeed, both are coming from late latin deintus

[06:47] <hoelzro> cognominal__: that's cool!

[06:49] <cognominal__> everything is cool in #perl6 except when I am too tired to think straight

[06:50] <cognominal__> but thinking straight maybe incompatible with lateral thinking, or diagonal, or fractal...

[06:51] <tadzik> morning lizmat!

[06:51] <lizmat> I usually only think out of the box

[06:51] <lizmat> morning tadzik!

[06:51] <lizmat> still only a 7 hour drive…  :-)

[06:51] <lizmat> with a few stops on the way

[06:52] <cognominal__> about fractals :  http://imgur.com/gallery/lWkhr

[06:52] *** woolfy joined
[06:52] <timotimo> r: =item First␤=item Second␤=item Third;␤    .Str.say for $=pod;

[06:52] <camelia> rakudo 9743c6: OUTPUT«Pod::Item<678915223>␤Pod::Item<-386447946>␤Pod::Item<-398726255>␤»

[06:52] <timotimo> should the .Str method output a stringified version of those items instead?

[06:52] <timotimo> there's not terribly much about this in the spec, i fear

[06:55] <timotimo> also, good * people :)

[06:55] *** lizmat left
[06:55] <timotimo> also, i thought about using Konsole for a bit, but it seems like it has major trouble with that nl character >_<

[06:55] *** lizmat joined
[06:56] <timotimo> depending on wether the cursor is left of it or right of it, text seems to be too far to the left, so i can't see what i'm typing

[06:56] <FROGGS> PerlJam++ # next rakudo star smoke run will have only two failing modules instead of three

[06:56] <timotimo> oooh, what did you do? :)

[06:58] <FROGGS> he fixed the tests for Grammar-Profiler-Simple

[06:58] <timotimo> neat

[06:59] * timotimo builds the newest release

[07:00] *** kurahaupo left
[07:01] <timotimo> hmm.

[07:02] <FROGGS> zavolaj (NativeCall) and perl6-lwp-simple still failing

[07:02] <timotimo> can i just write a sub that takes an invocant and invoke that sub on some object without having to put it into the class explicitly?

[07:03] <tadzik> yes

[07:04] <tadzik> just do $foo.&bar instead of bar($foo)

[07:04] <tadzik> bar needn't be special

[07:04] *** kaleem joined
[07:04] <tadzik> r: sub plusone($a) { $a + 1 }; say(plusone 5); say (5.&plusone)

[07:04] <camelia> rakudo 9743c6: OUTPUT«6␤6␤»

[07:05] <timotimo> r: enum Frob <FOO BAR>; sub not-special(Frob:D: $num) { say self; say $num }; FOO.&not-special(10);

[07:05] <camelia> rakudo 9743c6: OUTPUT«[31m===[0mSORRY![31m===[0m␤'self' used where no object is available␤at /tmp/H3eDyXwyGj:1␤------> [32mR>; sub not-special(Frob:D: $num) { say [33m⏏[31mself; say $num }; FOO.&not-special(10);[0m␤    expecting any of:␤        argument list␤        prefix or te…

[07:05] <timotimo> r: enum Frob <FOO BAR>; method not-special(Frob:D: $num) { say self; say $num }; FOO.&not-special(10);

[07:05] <camelia> rakudo 9743c6: OUTPUT«Useless declaration of a has-scoped method in mainline␤[31m===[0mSORRY![31m===[0m␤Undeclared name:␤    &not-special used at line 1␤␤»

[07:05] <timotimo> not like that, obviously?

[07:05] *** SamuraiJack joined
[07:06] *** brrt joined
[07:06] <tadzik> well, it's not really passed as an invocant then, I s'pose

[07:06] <tadzik> it's a regular function call with a fancy syntax

[07:06] <timotimo> mhm

[07:07] <timotimo> well, i could always enhance the values of the enum with a role, no?

[07:07] <timotimo> r: enum Frob <FOO BAR>; role Frobable { method frob() { return self +^ 42 }; FOO does Frobable; BAR does Frobable; BAR.frob.say;

[07:07] <camelia> rakudo 9743c6: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unable to parse expression in block; couldn't find final '}'␤at /tmp/c4_e1qoy82:1␤------> [32mobable; BAR does Frobable; BAR.frob.say;[33m⏏[31m<EOL>[0m␤    expecting any of:␤        method arguments␤        statement end␤        s…

[07:08] <timotimo> r: enum Frob <FOO BAR>; role Frobable { method frob() { return self +^ 42 } }; FOO does Frobable; BAR does Frobable; BAR.frob.say;

[07:08] <camelia> rakudo 9743c6: OUTPUT«No such method 'mixin' for invocant of type 'Perl6::Metamodel::EnumHOW'␤  in sub infix:<does> at src/gen/CORE.setting:13509␤  in sub infix:<does> at src/gen/CORE.setting:13503␤  in block  at /tmp/_Ymduy6jF9:1␤␤»

[07:08] <timotimo> ah, not for those types i suppose

[07:09] <tadzik> what are you trying to do?

[07:13] <timotimo> just idly toying with language features that may or may not exist

[07:13] <timotimo> then i'll have a look at why lwp-simple may be stumbling

[07:17] *** REPLeffect left
[07:20] <timotimo> http://www.software-path.com/was-cgi/json_rpc_server_test.cgi - that's what's causing the lwp test failure

[07:20] <timotimo> it's just a 500 error

[07:20] <timotimo> probably expired domain?

[07:21] <moritz> then either disable the test, or find some other URL to test against

[07:21] <lizmat> rakudo.org ?

[07:22] <tadzik> uh

[07:23] <lizmat> have it send a request to an URL to rakudo.org ?

[07:23] <lizmat> *at

[07:23] <timotimo> it seems like it needs a cgi that will echo the command sent to it via a header

[07:24] <timotimo> no, actually from the POST content

[07:24] <FROGGS> timotimo: there are other problems too,  already send a pull request to fix one

[07:24] *** fhelmberger joined
[07:24] <lizmat> that should not be too hard to make?   anyways, just a suggestion

[07:24] * lizmat goes on the road…   

[07:25] <lizmat> see you all later, on irc or in meatspace  :-)

[07:25] <FROGGS> o/ :o)

[07:25] * woolfy is joining lizmat...  :-)

[07:25] *** lizmat left
[07:25] *** woolfy left
[07:26] <tadzik> oh

[07:26] <timotimo> the other pull request might be good to apply, too

[07:26] <FROGGS> uhh, moritz++

[07:26] <tadzik> fun fact: if you write 'Build' which calls panda under the hood, you get a perl 6 module installable with cpanm

[07:26] <timotimo> cosimo: do you have time to do it in the coming days?

[07:27] <timotimo> tadzik: would you think a panda command to clone the repository for the module you specify to the CWD/repo-name would fit panda?

[07:27] <tadzik> timotimo: I don't see why not

[07:28] <diakopter> panda climb

[07:28] <tadzik> but wait, isn't that what 'panda-fetch' is about?

[07:28] <timotimo> not sure, i thought panda fetch fetches the code to a folder hidden away somewhere

[07:28] <dalek> panda: b641a4d | tadzik++ | bin/panda:

[07:28] <dalek> panda: Restore a fix which was lost during panda2 merge

[07:28] <dalek> panda: review: https://github.com/tadzik/panda/commit/b641a4d7db

[07:28] <tadzik> not anymore

[07:28] <timotimo> cool

[07:28] <tadzik> I mean, 'panda-fetch', not 'panda fetch'

[07:29] <tadzik> everything's a lot more stupid these days

[07:29] <timotimo> ah, ok

[07:29] <tadzik> but for what you say you'd want some kind of a wrapper for

[07:29] <tadzik> fetch is apparently too stupid :)

[07:29] <tadzik> so yeah, that'd make sense

[07:31] <timotimo> tadzik: what's the difficulty in making p6prove, btw?

[07:33] <tadzik> timotimo: nothing specific. Tuits, mostly, I think

[07:33] <timotimo> care to point me at what's missing?

[07:33] <timotimo> i'd like test runs to take longer, you know? :P

[07:34] <tadzik> :P

[07:35] <tadzik> timotimo: well, what needs to be done is: do a module smoketest, then make panda run p6prove instead of prove, then do a module smoketest again, compare differences

[07:35] <tadzik> that'll give you new testcases for p6prove

[07:35] <timotimo> where do i find the super-convenient "smoketest" command?

[07:35] <tadzik> then you just need to fix bugs :0

[07:36] <tadzik> https://github.com/tadzik/emmentaler here

[07:36] <tadzik> there's a difftool which gives you a colourful summary of what has changed

[07:36] <tadzik> so when it says "LWP::Simple now passes its tests", you'll know that p6prove is wrong about LWP::Simple

[07:38] <timotimo> aaw :)

[07:38] <timotimo> should i use the projectsfile from star?

[07:39] *** arlinius joined
[07:39] <timotimo> hm, no, apparently it should be the regular modules file?

[07:39] <tadzik> I think the regular one, with all the things

[07:39] <tadzik> http://feather.perl6.nl:3000/projects.json

[07:40] <timotimo> ah, i was about to get the META.list instead

[07:40] <dalek> panda: 9f6e824 | tadzik++ | / (2 files):

[07:40] <dalek> panda: Fix panda-install

[07:40] <dalek> panda: review: https://github.com/tadzik/panda/commit/9f6e824268

[07:40] <tadzik> this is generated from META.list

[07:41] <tadzik> the regular module smoketest is ran from this file

[07:41] <tadzik> (the one from which http://feather.perl6.nl/~sergot/modules/ has the results)

[07:42] <tadzik> I think https://gist.github.com/tadzik/5641922 is quite awesome :)

[07:42] *** kresike joined
[07:42] <kresike> hello all you happy perl6 people

[07:42] <tadzik> you just need a fancy Build.PL (which can be a no-op), and Build (which just rans panda under the hood)

[07:43] <tadzik> so now I can write 'panda cpanize' which does that for you

[07:44] <tadzik> s/rans/runs/

[07:44] <FROGGS> cool! tadzik++

[07:44] <timotimo> oh, neat

[07:44] <tadzik> it should be possible to extract Perl 6 Pod from the files, convert it to Perl 5 Pod and store all in .pod

[07:44] <tadzik> then metacpan and friends should be able to read it too

[07:45] <timotimo> something's wrong with the smoker:  No such method 'project-list' for invocant of type 'Any'  -  in line 40: for $panda.ecosystem.project-list -> $p {

[07:45] <tadzik> /o\

[07:46] <tadzik> I cannot reproduce that. Hrm

[07:46] <timotimo> and indeed, dumping $panda gives me :ecosystem(▶Any)

[07:46] <timotimo> this is panda2, btw

[07:46] <tadzik> oh

[07:46] <tadzik> panda2 is merged

[07:47] <tadzik> you may want to use master again :)

[07:47] <tadzik> merging fixed some bugs and introduced other

[07:47] <tadzik> but it seems to work here

[07:47] <timotimo> oh, ok

[07:48] <tadzik> sorry for the mess

[07:48] *** tgt joined
[07:49] <timotimo> AFK for 30

[07:58] <tadzik> heh. I can install panda with cpanm :D

[08:00] *** konundra left
[08:00] <FROGGS> O.o

[08:01] <dalek> panda: 8bdbe7b | tadzik++ | bin/panda-cpanize:

[08:01] <dalek> panda: Add panda-cpanize

[08:01] <dalek> panda: review: https://github.com/tadzik/panda/commit/8bdbe7baea

[08:01] <tadzik> it doesn't solve any bootstraping problem, sadly

[08:01] <tadzik> cpanm or not, it's still panda code doing the heavy lifting underneath

[08:02] <tadzik> now I need to wait for stratopan to show up and put our entire ecosystem there

[08:02] <tadzik> that's going to be fun :0

[08:04] *** arlinius left
[08:08] <labster> good morning

[08:08] <tadzik> hi labster 

[08:09] <FROGGS> \o

[08:10] *** berekuk joined
[08:11] <labster> So I noticed this line in the specs for &open: A file opened with :bin may still be processed line-by-line, but IO will be in terms of Buf rather than Str types.

[08:12] <labster> So, wait, we're supposed to do this .lines as strings, and then .encode to a Buf?  And how are you supposed to figure out what whitespace is if it's binary?

[08:12] <labster> *horizontal whitespace

[08:17] <timotimo> i suppose it will rely on the tried-and-true cr and/or lf "standard"

[08:17] *** TheAthlete joined
[08:18] <labster> I think it makes more sense to still do stringy operations on a file opened as binary, but allow the compiler to assume a single-byte encoding.

[08:19] <labster> Or maybe just get rid of the :bin switch altogether on open.  If you want to do binary reading, use .read or .slurp(:bin).  

[08:19] <jnthn> morning, #perl6

[08:19] <brrt> \o jnthn

[08:20] *** sqirrel left
[08:20] <timotimo>  .o( method slur(:racial?, :ethnical?) { ... } )

[08:21] <labster> this isn't the yapc email list :P

[08:21] <tadzik> :D

[08:22] <tadzik> morning jnthn 

[08:22] <jnthn> tadzik: hey, guess where I'm flying to today? :)

[08:23] <tadzik> \o/

[08:23] <tadzik> -o-

[08:23] <tadzik> \o/

[08:23] <tadzik> -o-

[08:23] <tadzik> \o/

[08:23] <tadzik> -o-

[08:23] <tadzik> sorry, couldn't resist

[08:24] <jnthn> You're making it look like hard work :P

[08:24] <tadzik> I'm always excited when a plane takes off

[08:24] <tadzik> someone pulls a lever, and a giant metal piece starts falling upwards

[08:24] <tadzik> I'm always like "Yeah! Science, bitches!"

[08:25] <jnthn> I'm always pretty relieved when it lands safely too :)

[08:25] <tadzik> (no sexism and/or coc offense intended)

[08:25] *** TheAthlete left
[08:25] <tadzik> that too :)

[08:25] <tadzik> There was sort of a Polish tradition of clapping hands when the pilot lands safely

[08:26] <cosimo> timotimo: what should i do?

[08:26] <yoleaux> 17 May 2013 01:41Z <[Coke]> cosimo: can you get perl6-lwp-simple passing its tests so we can cut a star release? looks like some sub signatures have changed.

[08:26] <cosimo> oh :-)

[08:27] <FROGGS> cosimo: is fixed already :o)

[08:27] <cosimo> great then

[08:27] <tadzik> jnthn: will you be at the pre-conf beer?

[08:28] <cosimo> i'm a bit out of touch with p6 lately

[08:28] <cosimo> have been

[08:28] <timotimo> yeah, there's two pull requests waiting for you; also, one of the tests fails because a host is giving a 500 internal server error, maybe the domain it was on expired

[08:28] <jnthn> tadzik: My flight lands at 16:55, so yeah, I should make it.

[08:29] <tadzik> awesome :)

[08:29] <jnthn> tadzik: Just looking at where I'm staying, where that is, how to get from airport, etc. :)

[08:29] <FROGGS> cosimo: can you apply my three pull requests please? https://github.com/cosimo/perl6-lwp-simple/pulls

[08:29] <diakopter> what's the pre-conf beer

[08:29] <tadzik> jnthn: have you seen http://act.yapc.eu/plpw2013/wiki?node=TheHitchhikersGuideToWarsaw?

[08:29] <tadzik> er, remove trailing ?

[08:30] <tadzik> diakopter: a cheapskate version of "welcome dinner party" ;)

[08:30] <diakopter> wait, which conf

[08:30] <tadzik> Polish Perl Workshop

[08:30] <diakopter> oh ok :)

[08:31] <diakopter> 'cuz I hadn't written down the pre-conf beer place Saturday the 1st

[08:31] <diakopter> well I did in a side channel

[08:31] <tadzik>  :)

[08:31] <diakopter> :D

[08:32] *** raiph left
[08:33] *** IKARi__ left
[08:34] *** imIKARi joined
[08:34] *** arlinius joined
[08:36] <timotimo> tadzik: i don't understand how the smoker is supposed to work like that; it seems like the class Panda requires an Ecosystem instance to be passed, yet the only thing that the smoker passes is the projectsfile

[08:37] <tadzik> hm

[08:37] <tadzik> maybe I didnt push my fixes :o

[08:37] <tadzik> oh, *facedesk*

[08:37] <tadzik> sorry

[08:37] *** berekuk left
[08:37] <dalek> emmentaler: 0d67c41 | tadzik++ | smoker:

[08:37] <dalek> emmentaler: Make it panda2-compatible

[08:37] <dalek> emmentaler: review: https://github.com/tadzik/emmentaler/commit/0d67c41fcb

[08:38] <tadzik> timotimo: there, that should fi it

[08:40] <timotimo> :)

[08:40] * timotimo smokes

[08:42] <cosimo> FROGGS: done!

[08:43] <timotimo> er ...

[08:43] <cosimo> please don't assume I can read everything GH throws at me, a mail would be great if I'm blocking you

[08:43] <timotimo> i wonder how long that'll take

[08:44] <timotimo> probably more ignoring than blocking, no?

[08:44] <FROGGS> cosimo: 'am currently testing... thanks!

[08:44] <timotimo> i feel mildly uneasy about just running code from github like that :|

[08:45] <cosimo> timotimo: ruby folks do it all the time, must be cool ;-)

[08:45] <timotimo> heh.

[08:45] <FROGGS> perl 5 folks too

[08:45] *** berekuk joined
[08:46] <FROGGS> but having a moderated app-store like 6pan is crap too

[08:46] * timotimo removes projects from github users he doesn't recognize

[08:46] <FROGGS> *but having a moderated app-store as 6pan is crap too

[08:49] <FROGGS> okay, only zavolaj left with failling tests

[08:51] <FROGGS> timotimo: it took like 6 hours at my (slow) server at home 

[08:51] <FROGGS> hmmm, zavolaj doesnt fail if I run it :/

[08:53] <timotimo> yikes

[08:53] <timotimo> i should fire up my somewhat mighty desktop

[08:53] <timotimo> maybe i could do something to parallelize test runs in smoker?

[08:54] <timotimo> tadzik: is it dangerous to run multiple panda installs at the same time?

[08:54] <FROGGS> ahh, [Coke]'s failing rakudo perl6 binary is 2013.04, a working one is 2013.04-97-gf7bfee6

[08:55] <FROGGS> [Coke]: after upgrading to rakudo 2013.05 all modules should be fine

[08:56] *** domidumont joined
[08:56] <tadzik> timotimo: at this point it may be

[08:56] <tadzik> because they all write to '.work/'

[08:57] <tadzik> I should make it '.work.PID' or something, that'd be safe

[08:57] <FROGGS> [Coke]: btw, the S02-types/bool.t failure does not happen using 2013.04!

[08:58] <FROGGS> I guess bisecting 97 commits is rather pain on feather -.-

[08:58] <timotimo> i'm considering adding a -j or SMOKER_JOBS parameter that would flatten the whole tree (dependency resolution and all that) and collect the outputs into an ordered kind of way or something

[08:59] <timotimo> so that each run will give the same output ordering for correct diffs

[08:59] *** fgomez left
[09:00] <FROGGS> nice

[09:01] <timotimo> tadzik: are you going to add the .PID right now?

[09:01] *** bbkr joined
[09:01] <FROGGS> my not have each module in its own TAP file? so a file is only changed if its tests change somehow

[09:02] <timotimo> hm, that would be sensible, too.

[09:07] *** xinming left
[09:12] *** rindolf joined
[09:14] *** atroxaper joined
[09:14] *** atroxaper left
[09:14] <timotimo> i have to ./smoker > output, don't i?

[09:15] <FROGGS> I think so

[09:15] <FROGGS> or wait, is there a result.json?

[09:16] <FROGGS> but to get the TAP you need to capture stdout

[09:16] <timotimo> right.

[09:20] <tadzik> timotimo: not right now, this evening, maybe

[09:27] *** berekuk left
[09:28] *** berekuk joined
[09:29] *** araujo joined
[09:29] *** araujo left
[09:29] *** araujo joined
[09:36] *** imIKARi left
[09:39] *** xinming joined
[09:49] *** SamuraiJack left
[09:50] *** SamuraiJack joined
[09:51] *** berekuk left
[09:57] *** sqirrel joined
[10:04] <FROGGS> arrgghh!! Unsupported serialization format version 5 (current version is 4)

[10:04] <FROGGS> lunch &

[10:13] *** mrlo joined
[10:22] *** SamuraiJack left
[10:22] *** raiph joined
[10:25] *** jest joined
[10:27] <timotimo> tadzik: i'm not sure why, but the $statefile doesn't properly get passed to the ecosystem's BUILD method :|

[10:31] <timotimo> what's keeping the tarballs from being released? does it still need testing?

[10:33] *** anuby left
[10:35] *** brrt left
[10:41] <tadzik> timotimo: you're talking about smoker?

[10:42] <timotimo> yes

[10:42] *** rindolf left
[10:43] <tadzik> hm

[10:43] <tadzik> that's bad :(

[10:44] <tadzik> do you have a testcase?

[10:46] *** raiph left
[10:47] <timotimo> yes, hold on

[10:48] <timotimo> use Panda; my $projectsfile = "projects.json"; my $e = Panda::Ecosystem.new( statefile    => "{cwd}/state", projectsfile => $projectsfile,); my $panda = Panda.new( ecosystem => $e, installer => Panda::Installer.new(destdir => "{cwd}/installlib"));

[10:48] <tadzik> looks similar to smoker :)

[10:49] <tadzik> I have quite a busy day, if you could open a bug for me, I'll probably manage to fix it tomorrow

[10:49] <masak> oh hai, #perl6

[10:49] <masak> tadzik: guess where I too am going today? :D

[10:50] <masak> unlike jnthn though, I need to stay behind a bit, and take the next flight. so I'll miss any pre-conf stuff.

[10:50] * masak is still in teaching mode

[10:50] <masak> gonna go home in a few hours and write my presentations :P

[10:51] <FROGGS> masak: can you upload this to rakudo.org? http://froggs.de/perl6/rakudo-2013.05.tar.gz http://froggs.de/perl6/nqp-2013.05.tar.gz

[10:51] <masak> FROGGS: 'fraid not. lunch right now, but I can't swap in non-$dayjob tasks :/

[10:51] <FROGGS> k

[10:52] <masak> someone else is bound to be able to help, though.

[10:54] <FROGGS> does somebody know what that means when trying to build nqp? Unsupported serialization format version 5 (current version is 4)

[10:55] <tadzik> masak: \o/

[10:55] <tadzik> masak: guess what arrived with the post today :)

[10:55] <tadzik> FROGGS: clean ALL THE THINGS maybe

[10:56] <masak> tadzik: nice! happy reading!

[10:57] <FROGGS> tadzik: k, will do

[10:57] * masak away for a few more hours

[11:04] *** brrt joined
[11:06] <FROGGS> tadzik: even after removing and cloning nqp again, I cant build 2013.04 :/

[11:06] <tadzik> FROGGS: hm :|

[11:06] <tadzik> I have no clue

[11:07] <FROGGS> maybe parrot was configured using other flags...

[11:11] *** mtk left
[11:13] <jnthn> Poland &

[11:13] <FROGGS> no, even rebuilding parrot doesnt work

[11:15] *** mtk joined
[11:15] *** PacoAir joined
[11:18] *** jest left
[11:25] <FROGGS> looks like it didnt rebuild parrot even when passing -gen-parrot and removing its folder

[11:25] <Ulti> has the release schedule for R* changed to a longer period? or is everything on hiatus for JVM stuff?

[11:25] <FROGGS> I removed the install folder now

[11:25] <FROGGS> Ulti: there were failing modules

[11:25] <Ulti> ah right

[11:26] <FROGGS> I am currently trying to hunt down the last bug

[11:26] <Ulti> cool

[11:26] <timotimo> so, r* may even come this weekend?

[11:28] <FROGGS> well, first we have to fix that bug and find someone who can make a release (and has tuits)

[11:29] * moritz back

[11:31] <FROGGS> moritz: can you upload this to rakudo.org? http://froggs.de/perl6/rakudo-2013.05.tar.gz http://froggs.de/perl6/nqp-2013.05.tar.gz

[11:33] <moritz> seems I can :-)

[11:33] <FROGGS> \o/

[11:33] <moritz> done.

[11:34] * bbkr is testing release

[11:35] <FROGGS> bbkr++

[11:35] <FROGGS> cool, looks like my nqp-2013.04 got compiled

[12:01] *** rindolf joined
[12:02] *** dayangkun joined
[12:05] <timotimo> hm. when i want to override only a subset of the candidates of a multi method in a class i derive from, could i get at those other candidates within a proto i write for the derived class?

[12:06] <timotimo> huh, i just noticed in this advent post about LTM, there's a rule { +? } which i'm rather sure should be .+? instead or something similar

[12:06] <timotimo> and the rule text is empty?

[12:06] <timotimo> oooh, angle brackets perhaps?

[12:14] <timotimo> tadzik: huh, with current panda i can't install rakudo-debug; it will just copy the rakudo-debug.nqp file to my bin folder?!

[12:15] <tadzik> timotimo: uh-oh, I must've broken something :(

[12:15] <timotimo> no, happens with ufo, too

[12:15] <tadzik> ufo was never capable of running Build.pm I think

[12:16] <timotimo> oh, right

[12:16] <tadzik> I'll try to fix it this weekend, if you could open me a bug

[12:16] <timotimo> since it's blocking r* (or should block r*), i'll try to fix it myself first

[12:17] <timotimo> yeah, there's a FIXME around the Build.pm part

[12:18] <tadzik> ah, there we go

[12:18] <tadzik> thank you

[12:20] *** dayangkun left
[12:21] <pmichaud> (R*)  if someone will tell me when modules are no longer failing, I can find tuits to cut the R* release

[12:23] <moritz> afaict timotimo++ just fixed LWP::Simple

[12:23] <timotimo> timotimo-- didn't, FROGGS++ did

[12:23] <moritz> oh right

[12:23] <moritz> your nicks both contain an 'o', no wonder I keep confusing you :-)

[12:23] <timotimo> if R* is made, maybe revert to panda1

[12:24] <tadzik> is it made now?

[12:24] <tadzik> oh

[12:24] <timotimo> probably not immediately

[12:24] <tadzik> good

[12:24] <tadzik> I'll try to fix everything during plpw

[12:24] <tadzik> or at least during yapcna

[12:25] <timotimo> so, Resources got axed from panda2; Rakudo::Debugger sets my $workdir = $.resources.workdir, but doesn't use the variable at all

[12:25] <tadzik> yeah, I killed Resources with firne

[12:26] <tadzik> and for a reason :0

[12:26] <timotimo> it didn't seem very useful, maybe it was supposed to grow past its form at that time?

[12:26] <timotimo> i wonder how many Build.pm there are in R*

[12:26] <tadzik> I think there's one, and not just in R* :)

[12:27] <timotimo> but i suppose i can find out with Task::Star

[12:27] <tadzik> yep

[12:27] <tadzik> new build($x) should probably just chdir to $x (justin case) and do the same thing that it does now

[12:28] <timotimo> ah, so no more Pies::Project argument

[12:28] <tadzik> yep

[12:29] <timotimo> should it be a Str or an IO?

[12:29] <tadzik> er, I think Str

[12:29] <timotimo> ok

[12:29] <tadzik> like in https://github.com/tadzik/panda/blob/master/lib/Panda/Builder.pm#L54

[12:30] <tadzik> I think the topmost 'return' there is wrong too

[12:30] <arnsholt> pmichaud: I hope to get Zavolaj fixed in Austin, but I'm not terribly optimistic about getting it fixed before that, sadly :/

[12:32] <timotimo> tadzik: is .IO.d not preferable to .IO ~~ :d?

[12:33] <tadzik> timotimo: timtowtdi, I guess

[12:33] <timotimo> mhm

[12:33] <tadzik> the former seems cleaner to me

[12:33] <timotimo> but a few lines down you use .IO.f ;)

[12:33] <tadzik> hehe

[12:33] <timotimo> what's wrong about the return? should it be moved down after looking fora Build.pm?

[12:34] <tadzik> I think it can be removed altogether

[12:34] <timotimo> u r boss! ;)

[12:34] <tadzik> :)

[12:34] <tadzik> module can have a custom-built bin/foo, but no lib

[12:34] <tadzik> it just never happened before

[12:34] <tadzik> I'm terrified about being the boss. So many things break because of me

[12:35] <timotimo> as long as we can backpaddle a few commits and things work again ... ;)

[12:37] <timotimo> should i add a chdir after the custom Build is called, so that the custom Build can't wreak havoc?

[12:37] <moritz> yes, sounds sane

[12:39] *** kaleem left
[12:44] <dalek> perl6-roast-data: 15eafd8 | coke++ | / (4 files):

[12:44] <dalek> perl6-roast-data: today (automated commit)

[12:44] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/15eafd823d

[12:45] <timotimo> i'm having trouble requiring the Build file

[12:45] <[Coke]> ah, hell, looks like the data collection bit at the end misfired there. 

[12:46] <[Coke]> also looks like rakudo started failing a bunch of tests yesterday.

[12:46] <timotimo> require 'Build' will give "Could not find file 'Build' for module Build", require "Build.pm" will give a huge stacktrace resulting apparently from not being able to stringify the exception that flies

[12:46] <[Coke]> (all in S32-io/IO-Socket-INET.t)

[12:47] <FROGGS> [Coke]: rakudo was clean on my box

[12:47] <FROGGS> [Coke]: btw there are some notes in the scrollback

[12:48] <[Coke]> FROGGS: the test was run with rakudo 25bfa5f and roast 298edbd

[12:49] <[Coke]> If you want to bump the version rakudo * is building with before the automated run this afternoon, perhaps that will help the star module run.

[12:49] <dalek> rakudo-star-daily: 34b4847 | coke++ | log/ (5 files):

[12:49] <dalek> rakudo-star-daily: today (automated commit)

[12:49] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/34b48474ca

[12:50] <[Coke]> no change in star test module runs.

[12:50] <[Coke]> (those are both from yesterday's run, not pushed until now)

[12:50] <dalek> star: c79a520 | pmichaud++ | modules/ (10 files):

[12:50] <dalek> star: Pull latest modules for a possible Rakudo Star 2013.05 release.

[12:50] <dalek> star: review: https://github.com/rakudo/star/commit/c79a520aab

[12:51] *** bluescreen10 joined
[12:51] <tadzik> timotimo: (re chdir) you may want to use indir

[12:51] <tadzik> it's in Panda::Common or somewhere

[12:51] <tadzik> it's pretty polished

[12:52] <timotimo> there's something else problematic

[12:52] <timotimo> it seems like $where is a relative directory

[12:52] <timotimo> how do i turn it into an absolute?

[12:52] <tadzik> uhhh

[12:52] <tadzik> fix Panda.pm, I suppose :/

[12:52] <[Coke]> pmichaud++

[12:52] <timotimo> Failed to change the working directory to '.work/1369399823_0': chdir failed: No such file or directory <- this is what happens if i chdir $where in my Build.pm/method build

[12:52] <tadzik> timotimo: or don't touch in an actual Build.m

[12:52] <tadzik> it worked without it before

[12:52] <pmichaud> hmmm... Rakudo's release announcement doesn't note the change in ?-semantics.

[12:54] <FROGGS> [Coke]: I have to update the modules versions too for a clean star, right?

[12:55] <FROGGS> pmichaud: true, that is in the changelog only

[12:57] <timotimo> perl6-debug seems to install properly now

[12:58] <tadzik> yeah! timotimo++

[12:58] <timotimo> i'll have a pull request for you shortly

[12:59] <dalek> star: fc649f7 | pmichaud++ | docs/announce/2013.0 (2 files):

[12:59] <dalek> star: Rename 2013.04.md announcement to 2013.05.md.

[12:59] <dalek> star: review: https://github.com/rakudo/star/commit/fc649f7d11

[12:59] <dalek> star: d1cb981 | pmichaud++ | / (2 files):

[12:59] <dalek> star: Some updates for a 2013.05 release.

[12:59] <dalek> star: review: https://github.com/rakudo/star/commit/d1cb981468

[13:00] <dalek> star: 9fabc39 | pmichaud++ | / (2 files):

[13:00] <dalek> star: Update star release number in README/Makefile.in .

[13:00] <dalek> star: review: https://github.com/rakudo/star/commit/9fabc39db7

[13:00] <[Coke]> FROGGS: pmichaud  just did that.

[13:01] * [Coke] will try to track down the roast-spec failure from yesterday (the meta-failure, not hte rakudo socket failures) and maybe rewrite history.

[13:01] <dalek> panda: 6b2cc0d | (Timo Paulssen)++ | lib/Panda/Builder.pm:

[13:01] <dalek> panda: make custom Build.pm files work again.

[13:01] <dalek> panda: review: https://github.com/tadzik/panda/commit/6b2cc0d139

[13:01] <dalek> panda: 23ff9b7 | tadzik++ | lib/Panda/Builder.pm:

[13:01] <dalek> panda: Merge pull request #46 from timo/master

[13:01] <dalek> panda: 

[13:01] <dalek> panda: make custom Build.pm work again

[13:01] <dalek> panda: review: https://github.com/tadzik/panda/commit/23ff9b7324

[13:02] <tadzik> I have to admit, I didn't even test that :)

[13:02] <timotimo> hm. i have a slight feeling that rakudo::debugger has suffered from a bit of bitrot

[13:04] <timotimo> jnthn: you'll find a pull request for Rakudo::Debugger, too

[13:05] <timotimo> it no longer seems to show what part of text was matched so far by regexes

[13:06] <dalek> rakudo/nom: 45ae2d2 | pmichaud++ | docs/release_guide.pod:

[13:06] <dalek> rakudo/nom: Bump copyright year as suggested by bbkr++.

[13:06] <dalek> rakudo/nom: 

[13:06] <dalek> rakudo/nom: Closes #159.

[13:06] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/45ae2d2486

[13:08] *** fhelmberger left
[13:10] <bbkr> FROGGS: 2013.05 release works fine on OS X 10.6 and 10.7

[13:10] <brrt> you know what would be awesome? json for actual graphs

[13:13] *** jaldhar left
[13:13] *** ajr joined
[13:13] *** ajr is now known as Guest73822

[13:13] <timotimo> where do i get the current cursor from again? $/.CURSOR?

[13:14] *** Guest73822 is now known as ajr_

[13:14] <timotimo> i think something's wrong about the way rakudo::debugger tries to get the cursor object

[13:15] <timotimo> my $cur = eval_in_ctx($ctx, q[DYNAMIC::<$¢>]);

[13:15] *** cognominal__ left
[13:16] <pmichaud> current cursor is in $¢

[13:16] *** cognominal__ joined
[13:16] <timotimo> This type does not support positional operations is the error that line is causing

[13:16] <pmichaud> $/.CURSOR will get there, but builds a Match object in the process.

[13:16] <timotimo> ^H^H^H^H^H^H^H^H^H^Hok

[13:16] * timotimo tries with "..." instead of q[...]

[13:17] *** Pleiades` left
[13:18] <timotimo> i don't quite understand how i get that error :|

[13:19] <timotimo> the same with eval_in_ctx($ctx, '1 + 1'), so maybe the error is in eval_in_ctx

[13:20] <timotimo> ah, that's probably it, yes.

[13:21] <timotimo> it's a ForeignCode object, that's probably what broke it. recently ForeignCode was introduced, right?

[13:24] <timotimo> i don't really know how to get at an object inside that to set the outer context :|

[13:24] <pmichaud> timotimo: I don't know either

[13:24] <timotimo> well, just removing the line with set_outer_ctx seems to fix it

[13:24] *** Pleiades` joined
[13:25] <timotimo> maybe it's now enough that the outer context was given as :outer_ctx in the $compiler.compile call

[13:31] <timotimo> interesting! if the last line doesn't end in a semicolon, it won't be highlighted

[13:33] <timotimo> but that's just a minor papercut

[13:37] *** SmokeMachine joined
[13:40] * timotimo feels useful for a change :3

[13:40] <timotimo> i should create a few "slides"

[13:45] <Ulti> http://i.minus.com/iH8aOpXstddxg.gif

[13:45] <Ulti> ^ not perl6 related

[13:45] <timotimo> wow, she is not enjoying that

[13:45] <timotimo> i imagine i would be amused at least

[13:46] <FROGGS> bbkr: cool! good to know

[13:46] <Ulti> I laughed out loud at the top of my voice in the office :/ people came to see what was wrong

[13:46] <timotimo> heh.

[13:47] <diakopter> the audio isn't working for me

[13:47] <Ulti> the audio on the .gif?

[13:47] <timotimo> so, i'm trying to write code that runs if Text::Levenshtein exists, but doesn't explode at compile-time if it doesn't. "require Text::Levenshtein <distance>" doesn't seem to do what i want: Trying to import from 'Text::Levenshtein', but the following symbols are missing: distance

[13:47] <timotimo> but there's a sub "distance" in there that is marked "is export"

[13:48] <Ulti> instead of Levenshtein implement Bitap :] http://en.wikipedia.org/wiki/Bitap_algorithm

[13:49] <timotimo> levenshtein is already implemented. i'd just have to use it

[13:49] <timotimo> but not with "Use"

[13:51] <timotimo> Error while compiling block  (source text: "require Text::Levenshtein <distance>;\nsay distance(\"foo\", \"boo\");\n"): Error while compiling op call: Error while compiling block : Error while compiling op call (source text: "say distance(\"foo\", \"boo\")"): Error while compiling op call (source text: "\"foo\", \"boo\""): Null PMC access in find_method('handle')

[13:51] <timotimo> that's better! ... not :(

[13:52] <FROGGS> arnsholt: ping

[13:54] *** bruges left
[13:54] *** bruges joined
[13:58] <timotimo> tadzik: do you think ecosystem.suggest-project is a good place to put a suggestion generating method for when a project name has been misspelt?

[14:00] <FROGGS> what about ecosystem-typo-projectname?

[14:00] <FROGGS> suggest-project sounds like advertisement to me

[14:01] <PerlJam> good $localtime #perl6 people !

[14:01] <brrt> hi PerlJam

[14:01] <timotimo> hehehe

[14:01] <PerlJam> What's new in the world?

[14:01] <brrt> nothing, ever

[14:02] <brrt> we decay by the second law

[14:02] <brrt> but that is not what you meant, is it? :-)

[14:02] <PerlJam> brrt: I dunno what I meant because whoever answers is meant to supply the missing context  ;)

[14:03] <brrt> good point

[14:03] <timotimo> it's like when an interviewer keeps holding the microphone to someones face after they stopped talking

[14:04] <Ulti> brrt maybe if you are a physicist and not a biologist

[14:05] <brrt> huh, i actually study biology ;-)

[14:05] <Ulti> life isn't really heading towards maximum entropy even after a billion years

[14:05] <timotimo> hm, there's bioperl, but is there physiperl?

[14:05] <PerlJam> timotimo: In p5-land that's called PDL  ;)

[14:06] <Ulti> PDL is physiperl I guess

[14:06] <brrt> ulti, and why is that, really?

[14:06] <Ulti> more astro/image analysis perl

[14:06] <brrt> its true

[14:06] <brrt> but its weird isn't it?

[14:06] <timotimo> is that like numpy for python?

[14:07] <PerlJam> really PDL is kind of like mathperl (which we all know is the basis for physiperl (which, in turn, is the basis for bioperl))   

[14:07] <PerlJam> :-)

[14:08] <timotimo> you forgot the chemiperl in the middle

[14:08] <timotimo> Project Text::Levenshtein not found in the ecosystem. Maybe you meant Text-Levenshtein?

[14:08] <Ulti> brrt the best sorts of intersections between life and thermodynamics are papers like these http://www.ncbi.nlm.nih.gov/pubmed/16408074

[14:08] <timotimo> (a little bit of an autopun?)

[14:08] <timotimo> tadzik: do you like that? :)

[14:09] <brrt> that is bizarre… thanks for that

[14:10] <Ulti> entropy motors are p. neat this is why I love molecular biology evolution at this level is just hacking reality

[14:11] <PerlJam> Ulti: all of what we do is "hacking reality"

[14:11] <PerlJam> we imagine a future, then hack reality to match our imagination.

[14:12] <Ulti> sure but this is a blind natural process

[14:12] <Ulti> like imagine if the ocean just started doing something weird like teleporting around, its that level of wtf some of what happens in your cells

[14:12] *** PacoAir left
[14:13] <Ulti> that kinesin motor I just linked to, is usually paired with another protein that is biased to "walk" in the opposite direction so it switches footing when it bumps into something in its way

[14:13] *** dayangkun joined
[14:14] *** dayangkun left
[14:14] <PerlJam> And Conway's Game of Life comes full circle  ;)

[14:15] <Ulti> :) yeah basically gliders on a lattice :)

[14:15] <Ulti> they even look a bit like them too

[14:16] <Ulti> http://www.youtube.com/watch?v=y-uuk4Pr2i8

[14:17] <timotimo> i am bummed out that no new video about that stuff has been made since that one came out

[14:17] <Ulti> yeah

[14:18] <Ulti> timotimo: have you seen this book http://www.amazon.com/The-Machinery-Life-David-Goodsell/dp/0387849246 might be of interest

[14:19] *** xinming left
[14:20] *** PacoAir joined
[14:21] *** xinming joined
[14:22] *** PacoAir left
[14:22] *** PacoAir joined
[14:23] *** PacoAir left
[14:23] *** PacoAir joined
[14:27] <tadzik> timotimo: sounds good :)

[14:27] <tadzik> timotimo: there was a panda ticket with some discussion about this, have you seen it?

[14:29] <tadzik> the implementation is nice and elegant too

[14:29] <timotimo> i read it now

[14:29] <timotimo> the implementation i made?

[14:32] <tadzik> yep

[14:32] <timotimo> thank you :D

[14:32] <PerlJam> Does panda use Levenshtein edit distance to offer helpful advice on possible module names when it can't find what the user has asked for?

[14:32] <tadzik> not yet

[14:32] <tadzik> but see timotimo++'s pull request

[14:32] <timotimo> no, it doesn't, because i couldn't get Text::Levenshtein in as a runtime-only-dependency

[14:33] <PerlJam> oh! 

[14:33] <PerlJam> Nice.   

[14:33] <PerlJam> (I was just asking because I typed "panda install Text::Levenstein" and was surprised that it couldn't be found :)

[14:33] <FROGGS> hehe

[14:34] <timotimo> 16:07 < timotimo> Project Text::Levenshtein not found in the ecosystem. Maybe you meant Text-Levenshtein?

[14:34] <timotimo> ;)

[14:35] <PerlJam> okay, even when I type it correctly, I get "Project Text::Levenshtein not found in the ecosystem"  What gives?

[14:35] <timotimo> "panda update"?

[14:36] <PerlJam> no dice.

[14:36] * FROGGS thinks he has found the core.pm of all evil

[14:37] <FROGGS> actually src/core/terms.pm

[14:37] <timotimo> er. that's not how you type correctly, PerlJam 

[14:37] <timotimo> Maybe you meant Text-Levenshtein?

[14:38] <PerlJam> Hrm.  that's icky.

[14:38] <FROGGS> it is

[14:38] <PerlJam> panda install Text::CSV worked fine.

[14:38] <PerlJam> What does it use to determine the module name?

[14:38] <FROGGS> the value in META.info

[14:39] <PerlJam> I think I feel itchy

[14:40] <PerlJam> maybe panda could try  Module::Name and then Module-Name ?

[14:40] *** Guest73688 joined
[14:40] <timotimo> don't think so

[14:41] <timotimo> see the discussion in the ticket about case insensitivity

[14:41] * PerlJam reads

[14:41] <PerlJam> timotimo++ btw

[14:41] *** Guest73688 left
[14:42] <timotimo> :3

[14:45] <kresike> bye folks

[14:45] *** kresike left
[14:46] *** kaleem joined
[14:51] *** spider-mario joined
[14:55] *** sjn left
[14:57] *** sjn joined
[14:58] *** domidumont left
[14:59] <FROGGS> [Coke]: btw, in rakudo/src/core/terms.pm, if you comment out line 8 and line 117, S02-bool.t passes

[14:59] <FROGGS> will bisect zavolaj this evening more

[14:59] <FROGGS> bbl

[14:59] *** FROGGS left
[15:00] *** PacoAir left
[15:01] *** PacoAir joined
[15:04] *** FROGGS[mobile] joined
[15:05] <timotimo> i wonder if the many object systems for perl5 will work atop rakudo

[15:08] <FROGGS[mobile]> we will find out

[15:12] * brrt off

[15:12] *** brrt left
[15:13] *** kaleem left
[15:22] *** IKARi__ joined
[15:23] *** risou_awy is now known as risou

[15:25] <timotimo> i wonder if it would make sense to introduce a way to say $a is always exactly a Dog, never has roles applied on it or contains a subclass of Dog

[15:25] <timotimo> but that's probably too specific

[15:26] <PerlJam> timotimo: you mean as a constraint or a compiler hint?

[15:28] <timotimo> constraint would be sanest

[15:29] <timotimo> i wouldn't like to hint at the compiler "this is always a Dog" and then accidentally put a subclass of Dog in there

[15:29] <pmichaud> maybe a "is <mumble>" trait

[15:30] <timotimo> is exactly[Dog]

[15:30] <pmichaud> my Dog $a is pure;

[15:30] <timotimo> maybe "purely"

[15:31] *** Chillance joined
[15:31] <timotimo> is "methods on Cool exist as sub, too" a rule without exceptions?

[15:31] <pmichaud> I don't think so.

[15:32] <pmichaud> some methods can't easily be subbed

[15:32] <timotimo> mhm

[15:33] <pmichaud> grep is an example.

[15:33] <pmichaud> (although grep is really defined on Any)

[15:34] <timotimo> how incomplete is :P5 support for regexes in rakudo?

[15:34] <pmichaud> "30"

[15:35] *** alester left
[15:35] <PerlJam> Where's the regex feature matrix for :P5 ?   :)

[15:35] *** rindolf left
[15:36] <pmichaud> r:  say 101.base(16)

[15:36] <camelia> rakudo 45ae2d: OUTPUT«65␤»

[15:37] <pmichaud> r: say base(101, 16);  

[15:37] <camelia> rakudo 45ae2d: OUTPUT«[31m===[0mSORRY![31m===[0m␤Undeclared routine:␤    base used at line 1␤␤»

[15:37] <pmichaud> there's an example of a method in Cool that isn't a sub.

[15:46] *** IKARi__ left
[15:46] <timotimo> right. that 30 was to what base? :)

[15:47] <timotimo> i feel like i need to take a nap :/

[15:47] <timotimo> my slides are not progressing

[16:12] <colomon> does p5 have a FIRST phaser?

[16:15] *** zby_home joined
[16:16] * colomon worked around it...

[16:16] *** raiph joined
[16:17] *** REPLeffect joined
[16:32] <masak> oh hai, #perl6

[16:35] <FROGGS[mobile]> o/

[16:39] *** FROGGS[mobile] left
[16:39] *** FROGGS[mobile] joined
[16:49] *** bluescreen10 left
[16:49] *** fgomez joined
[16:51] *** domidumont joined
[16:55] *** apejens joined
[16:59] *** ajr_ left
[17:05] *** FROGGS joined
[17:11] *** Timbus left
[17:14] *** Timbus joined
[17:16] *** risou is now known as risou_awy

[17:16] *** risou_awy is now known as risou

[17:32] *** prevost joined
[17:34] *** risou is now known as risou_awy

[17:36] *** ajr joined
[17:36] *** ajr is now known as Guest99846

[17:37] *** Guest99846 is now known as ajr_

[17:49] *** imIKARi joined
[17:54] *** linguini joined
[17:55] *** raiph left
[17:58] *** berekuk joined
[18:10] *** kaare_ joined
[18:16] *** japhb_ left
[18:16] *** kaleem joined
[18:17] *** kaleem left
[18:17] *** saxx11 joined
[18:20] <PerlJam> #perl6 is too quiet today.

[18:20] <colomon> It's because we're scheming.

[18:21] *** dukelet0 is now known as dukeleto

[18:21] <geekosaur> shouldn't you be perl6ing?

[18:21] *** dukeleto left
[18:21] *** dukeleto joined
[18:22] * colomon has been working on http://71.10.146.50:3001/report # now with sorting and much better individual project reports

[18:22] <colomon> geekosaur: technically speaking I've been perl5ing.

[18:22] <PerlJam> How do people get nominated for the White Camel?   jnthn and pmichaud deserve nominations.

[18:23] *** SamuraiJack joined
[18:24] <PerlJam> (And really, TimToady deserves some kind of perseverence award or something too  :-)

[18:24] <dalek> ecosystem: 93b0b25 | colomon++ | META.list:

[18:24] <dalek> ecosystem: Transfer RFC back to ihrd

[18:24] <dalek> ecosystem: 

[18:24] <dalek> ecosystem: Module is fixed now.

[18:24] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/93b0b251c8

[18:25] <colomon> Should have said URI instead of RFC.

[18:29] <sorear> HIII

[18:29] * sorear bangs pans

[18:30] <PerlJam> colomon: That sounds like META.list contains the One True Version of modules

[18:31] <colomon> PerlJam: well, it contains the versions that panda looks at.  That's pretty close to the One True Version.

[18:32] *** zby_home left
[18:37] *** bluescreen10 joined
[18:39] * colomon can see someone is checking out Test::Corpus...

[18:39] * flussence waves

[18:39] <colomon> \o

[18:40] *** domidumont left
[18:40] <flussence> aw nuts, my modules are all acting up...

[18:41] <colomon> moritz++ # the core of his code for analyzing the JSON smoke logs is still in this Dancer project

[18:45] <flussence> ok, that was easy enough. Test-Corpus and Text-Tabs-Wrap should be fixed now

[18:45] * flussence &

[18:45] <colomon> \o/

[18:45] <flussence> .oO( well, apart from that one TTW file that never did work properly... )

[18:46] *** dagurval joined
[18:47] <flussence> gah, TTW still needs work. I'll have a look later...

[18:52] *** bluescreen100 joined
[18:54] *** dukeleto is now known as parrot_dukeleto

[18:58] *** dmol joined
[19:06] <[Coke]> in the middle of a star build, will let you know if it resolves any test failures.

[19:06] * colomon is thinking calling panda 175 times in a row might not be the fastest way to render a web page.  :\

[19:06] <[Coke]> colomon: http://71.10.146.50:3001/report isn't responding here.

[19:07] <colomon> [Coke]: may have something to do with the script trying to call panda 175 times in a row...

[19:09] <colomon> hmmmm, may have really broken it.

[19:10] <dalek> perl6-roast-data: 4d6c3d3 | coke++ | / (4 files):

[19:10] <dalek> perl6-roast-data: today (automated commit)

[19:10] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/4d6c3d3d47

[19:12] <dalek> perl6-roast-data: 7a366a2 | coke++ | perl6_pass_rates:

[19:12] <dalek> perl6-roast-data: fix yesterday's rakudo summary.

[19:12] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/7a366a2276

[19:12] <colomon> [Coke]: seem to have it working again.

[19:12] <dalek> roast: b40d7fe | dagurval++ | S32-io/io-handle.t:

[19:12] <dalek> roast: Added tests for IO flushing when going out of scope

[19:12] <dalek> roast: review: https://github.com/perl6/roast/commit/b40d7fe033

[19:15] <FROGGS> [Coke] / arnsholt: what I said earlier about commenting out two lines in src/core/terms.pm: this fixes both S02/types.t and zavolaj O.o

[19:15] *** SmokeMachine left
[19:15] <FROGGS> so I just need to get that right, and I think it is about build order

[19:16] <[Coke]> ... do any spectests or other roast tests fail if you do that? O_o

[19:16] <FROGGS> I believe so, but didnt tested it

[19:17] *** kaare_ left
[19:17] <FROGGS> tests about $*ARGFILES and $*TMPDIR must fail though, because these aren't defined

[19:17] <[Coke]> colomon: nope, still just loading.

[19:19] <colomon> [Coke]: weird.  I dunno what's going on here, I'm going to take it offline for now...

[19:20] *** SmokeMachine joined
[19:22] <colomon> huh, it's working well enough for me locally.  :\

[19:26] *** parrot_dukeleto is now known as dukeleto

[19:47] *** wooden joined
[19:49] * colomon finally put it in github: https://github.com/colomon/SmokeResults

[20:03] *** REPLeffect left
[20:08] *** REPLeffect joined
[20:08] <flussence> oh, no wonder Text-Tabs-Wrap wasn't fixed by that commit... it'd help if it actually *used* Test-Corpus instead of an internal module that does the same thing.

[20:29] *** snearch joined
[20:31] *** SamuraiJack left
[20:39] *** Chillance_ joined
[20:41] *** berekuk left
[20:41] *** saxx11 left
[20:41] <colomon> flussence: :)

[20:42] *** saxx11 joined
[20:42] *** Chillance left
[20:45] *** berekuk joined
[20:47] *** FROGGS[mobile] left
[20:47] *** FROGGS[mobile] joined
[20:48] *** FROGGS[mobile] left
[20:55] *** japhb_ joined
[20:57] *** dmol left
[21:01] *** [0xF] joined
[21:02] <[0xF]> perl6: sub foo(Int $x is copy) { $x = 5 } foo(1);

[21:02] <camelia> niecza v24-51-g009f999: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Strange text after block (missing comma, semicolon, comment marker?) at /tmp/84TjVIvMIR line 1:␤------> [32msub foo(Int $x is copy) { $x = 5 }[33m⏏[31m foo(1);[0m␤␤Parse failed␤␤»

[21:02] <camelia> ..rakudo 45ae2d: OUTPUT«[31m===[0mSORRY![31m===[0m␤Two terms in a row␤at /tmp/UAuJm9SJJ0:1␤------> [32msub foo(Int $x is copy) { $x = 5 } [33m⏏[31mfoo(1);[0m␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        statement modifier loop␤    …

[21:02] <[0xF]> perl6: sub foo(Int $x is copy) { $x = 5 }; foo(1);

[21:02] <camelia> rakudo 45ae2d: OUTPUT«Cannot modify an immutable value␤  in block  at /tmp/DKANrufkoO:1␤␤»

[21:02] <camelia> ..niecza v24-51-g009f999:  ( no output )

[21:02] <[0xF]> perl6: sub foo($x is copy) { $x = 5 }; foo(1);

[21:02] <camelia> rakudo 45ae2d: OUTPUT«Cannot modify an immutable value␤  in block  at /tmp/MSeAbyoUK5:1␤␤»

[21:02] <camelia> ..niecza v24-51-g009f999:  ( no output )

[21:03] *** bluescreen100 left
[21:03] *** bluescreen10 left
[21:03] *** [0xF] left
[21:05] <labster> r: say $*ARGFILES

[21:05] <camelia> rakudo 45ae2d: OUTPUT«IO::ArgFiles.new(args => [], filename => Any, ins => Any, ins => Any, chomp => Bool::True, path => Any)␤»

[21:06] <FROGGS> hi labster 

[21:06] <labster> hi FROGGS

[21:06] <FROGGS> btw, setting $PROCESS::TMPDIR breaks two tests on feather

[21:06] <FROGGS> and I have no idea why

[21:07] <labster> I don't either.  I saw that, so I'm seeing if using nqp::bindkey instead of direct assignment makes a difference

[21:07] <FROGGS> no, checked that

[21:07] <FROGGS> still crashes

[21:08] <labster> huh... strange.  which tests in particular?

[21:08] <FROGGS> it crashes already when calling IO::Spec.tmpdir()

[21:08] <labster> whoa, okay.

[21:08] *** bluescreen100 joined
[21:08] *** bluescreen10 joined
[21:10] <FROGGS> I'm making another test now that just does: nqp::say( IO.Spec.tmpdir() ) within that terms.pm

[21:10] <FROGGS> I think it will print '/tmp/' when precompiling modules like lib.pm, but will crash then too

[21:12] <labster> maybe it's the use of state variables?  the only other place it's used in the setting is in eval().

[21:13] <FROGGS> hmmm, maybe, yes

[21:13] <labster> $*TMPDIR isn't specced, so you can take it out... but if we have a $*TMPDIR, there's really no need to have state variables in there anyway.

[21:14] *** linguini left
[21:15] <FROGGS> okay, I will test that next (having a my-scoped variable in that class instead of a state variable)

[21:16] <FROGGS> as I said, my earlier run printed '/tmp' and crashed after the test run

[21:17] <labster> actually... it's three classes... why don't I just rewrite it really fast?

[21:17] <FROGGS> I just care about Unix atm

[21:18] <FROGGS> okay, compiling and waiting

[21:26] <labster> me too... it looks like that section could stand to be refactored.

[21:27] <FROGGS> maybe it dies because you're using %*ENV within tmpdir? maybe we should use nqp::at_key

[21:27] <FROGGS> because it looks like the state variable wasn't the problem

[21:28] <FROGGS> now I just return a string to just see that the method's body must be it

[21:28] <labster> sure.  Why is feather different, I wonder?

[21:29] <FROGGS> it is running in a qemu vm, I guess that's why

[21:31] <labster> if it's not that, it could be the my $submodule line (line 16) in Spec.pm

[21:32] <FROGGS> ohh

[21:32] <FROGGS> yeah, maybe...

[21:36] <FROGGS> okay, it works when returning '/tmp' directly

[21:37] <labster> oh good, I didn't want to think about the $submodule case breaking

[21:39] <FROGGS> :o)

[21:42] <labster> can you try my nom branch: https://github.com/labster/rakudo

[21:44] <FROGGS> I believe %*ENV is the problem, because it gets declared later in the setting

[21:45] <FROGGS> will test you fork in a bit, but this will take at least 30mins

[21:45] *** rindolf joined
[21:47] <FROGGS> I'll test now that method with only %*ENV<TMPDIR> commented out, and in parallel I'll clone your fork

[21:52] <labster> eh, more than likely, you're right.  Although it's kind of annoying because %ENV is in scope when it's called.

[21:53] <labster> r: nqp::say(nqp::atkey(nqp::getenvhash(), nqp::unbox_s('TMPDIR')))

[21:53] <camelia> rakudo 45ae2d: OUTPUT«␤»

[21:53] <labster> huh.

[21:53] <FROGGS> nqp: nqp::say(nqp::atkey(nqp::getenvhash(), nqp::unbox_s('TMPDIR')))

[21:53] <camelia> nqp: OUTPUT«Can only use repr_unbox_str on a SixModelObject␤current instr.: '' pc 46 ((file unknown):149089253) (/tmp/gTj7WhgZbF:1)␤»

[21:54] <FROGGS> nqp: nqp::say(nqp::atkey(nqp::getenvhash(), 'TMPDIR'))

[21:54] <camelia> nqp: OUTPUT«␤»

[21:54] <labster> is $TMPDIR not defined on feather?

[21:54] <FROGGS> nqp: nqp::say(nqp::atkey(nqp::getenvhash(), 'TERM'))

[21:54] <camelia> nqp: OUTPUT«screen␤»

[21:54] <labster> that works locally

[21:54] *** spider-mario left
[21:55] *** berekuk left
[21:55] *** berekuk joined
[21:56] <FROGGS> it works atm

[21:57] <FROGGS> I'll replace the commented out $*ENV... by nqp::atkey(nqp::getenvhash(), nqp::unbox_s('TMPDIR'))

[22:01] *** dagurval left
[22:02] *** lustlife left
[22:10] <dalek> rakudo-star-daily: cff7958 | coke++ | log/ (5 files):

[22:10] <dalek> rakudo-star-daily: today (automated commit)

[22:10] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/cff7958e63

[22:11] <[Coke]> ^^ all green!

[22:11] <jnthn> evening, #pelr6

[22:12] <[Coke]> jnthn: HIIIIIOOOOOOO

[22:12] * jnthn has safely made it to Poland, attended the pre-conf beer, etc. :)

[22:12] *** sqirrel left
[22:15] <sorear> YO

[22:16] *** bluescreen10 left
[22:16] *** bluescreen100 left
[22:16] * jnthn hacks slides while waiting for masak to show up

[22:18] <FROGGS> [Coke]: how can it be green already??

[22:21] <timotimo> jnthn: did you idly look at my Rakudo::Debugger pullrequests?

[22:27] <jnthn> timotimo: I didn't actually get to my email to se they exist yet :)

[22:28] *** lizmat joined
[22:29] <jnthn> o/ lizmat 

[22:29] <lizmat> hi jnthn, long time no see  :-)

[22:29] <lizmat> we made it back to the hotel ok  :-)

[22:30] <jnthn> yay :)

[22:30] <jnthn> Glad the taxi driver understood what we wanted. :)

[22:30] * lizmat will look at backlog tomorrow

[22:32] <jnthn> :)

[22:32] <timotimo> jnthn: i'm wondering, would cat-ing a file into perl6-debug and comparing it to "known good" output be an acceptable way to have a test case for Rakudo::Debugger?

[22:33] <dalek> rakudo-debugger: 3aff7eb | (Timo Paulssen)++ | Build.pm:

[22:33] <dalek> rakudo-debugger: make Build.pm correspond with changes in current Panda.

[22:33] <dalek> rakudo-debugger: review: https://github.com/jnthn/rakudo-debugger/commit/3aff7eb14a

[22:33] <dalek> rakudo-debugger: 49eea87 | jonathan++ | Build.pm:

[22:33] <dalek> rakudo-debugger: Merge pull request #9 from timo/master

[22:33] <dalek> rakudo-debugger: 

[22:33] <dalek> rakudo-debugger: Make Build.pm work with current panda.

[22:33] <dalek> rakudo-debugger: review: https://github.com/jnthn/rakudo-debugger/commit/49eea87736

[22:34] <jnthn> timotimo: I'm thinking the other patch helps but only so much

[22:34] <jnthn> Like, it probably doesn't fix variable examination

[22:35] <jnthn> Instead of being removed that line probably wants to be nqp::forceouterctx($pbc, $vm_ctx) or so

[22:36] * lizmat calls it a day after having enough cider

[22:36] <timotimo> indeed, it doesn't work with variable examinanitions

[22:36] <timotimo> i'll try that next.

[22:37] <ajr_> You may remember that I was trying to find a Perl 6 equivalent to $. According to S28, there should be a method $*IN.input_record_number()

[22:37] <ajr_> but there isn't.

[22:38] <ajr_> Looking at IO.pm, I see a variable $!.ins that appears to contain a record count.

[22:38] <timotimo> $!.? that's aggressive on the twigils

[22:39] <ajr_> There's a test in s16-filehandle/io.t that appears to reference that ($in4.ins)

[22:39] <flussence> r: say $*IN.^methods

[22:39] <camelia> rakudo 45ae2d: OUTPUT«open close eof get getc lines read seek tell write opened t print slurp spurt copy chmod Str flush encoding d e f l r s w x z modified accessed changed say <anon> <anon> <anon>␤»

[22:39] <flussence> n: say $*IN.^methods

[22:40] <camelia> niecza v24-51-g009f999: OUTPUT«Unhandled exception: Unable to resolve method methods in type ClassHOW␤  at /tmp/E8GTCwRqXQ line 1 (mainline @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4332 (module-CORE @ 582) ␤  at…

[22:40] <flussence> blargh.

[22:40] <ajr_> I've tried $*IN.ins, but that returns 0 every time. How confused am I?

[22:41] <timotimo> jnthn: that doesn't help much; apparently nqp::forceouterctx just calls .set_outer_ctx and fails to do so just like the code that was there previously

[22:41] <jnthn> timotimo: yes, note I got rid of the atpos

[22:42] <timotimo> oh, right

[22:42] <timotimo> but it still doesn't work :D

[22:42] <timotimo> and yeah, it's true, ForeignCode *nor* Callable have that method. and i don't know what's going on anyway

[22:43] <jnthn> oh, right...

[22:43] <ajr_> Sorry, that variable is $!ins

[22:43] <jnthn> yeah, it needs some more tweaks

[22:44] <jnthn> But I'm writing my talk for tomorrow right now :)

[22:45] <timotimo> so, will my not-quite-actually-a-fix make it in for R*?

[22:45] *** tgt left
[22:47] *** woolfy joined
[22:48] <jnthn> When will R* be?

[22:48] <jnthn> I can probably do the right fix tomorrow afty.

[22:48] <timotimo> probably this weekend

[22:48] *** ajr_ left
[22:52] *** tgt joined
[22:52] *** jercos left
[22:59] *** massimino joined
[23:12] *** tgt left
[23:25] *** rindolf left
[23:41] <masak> oh hai #perl6, from a hotel room in Warsaw

[23:44] <tadzik> hai

[23:45] <tadzik> I somehow got home. I think I'm going to be sick :|

[23:46] <masak> oh noes

[23:46] <masak> too much beer, or just jungle fever?

[23:47] <tadzik> too much rain, to little coats, too long on the bus stop

[23:48] <tadzik> maybe it'll be better tomorrows, but I can already feel my throat hurting

[23:48] <timotimo> that's unlucky timing :(

[23:50] <tadzik> I wanted to go home earlier and get some rest, but it's good that I stayed, there were some monetary fuckups

[23:50] *** SmokeMachine left
[23:50] <sorear> hi masak

[23:51] * sorear wonders if that excludes Austin

[23:55] <tadzik> sleep &

[23:56] <sorear> & well

[23:57] *** fgomez left
[23:58] <masak> S03:2280: "the C<Any> type is not a real instantiable type"

[23:58] <masak> rn: say Any.new

[23:58] <camelia> niecza v24-51-g009f999: OUTPUT«Any.new(...)␤»

[23:58] <camelia> ..rakudo 45ae2d: OUTPUT«Any.new()␤»

[23:58] <masak> is too!

[23:59] <sorear> I would like to make Any not instantiable

[23:59] <masak> I've instantiated it now and then.

[23:59] <masak> it's a nice little nondescript object to instantiate.

[23:59] <sorear> so have I, but never on purpose and it always seems to make things worse

[23:59] <sorear> niecza's compiler contains an augment that prevents Any.new

