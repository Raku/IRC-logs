[00:05] *** japhb_ left
[00:05] <timotimo> r: macro foo() { }; foo;

[00:05] <camelia> rakudo b2072f:  ( no output )

[00:07] <lue> r: macro foo ($flag) { quasi { say 42 } if $flag }; foo(1);

[00:07] <camelia> rakudo b2072f: OUTPUT«42␤»

[00:07] *** Shozan joined
[00:14] *** btyler left
[00:15] *** havenwood left
[00:24] <dalek> niecza: 88ee1d8 | (Solomon Foster)++ | src/niecza:

[00:24] <dalek> niecza: %*CUSTOM_LIB needs to be in @*INC, too.

[00:24] <dalek> niecza: 

[00:24] <dalek> niecza: Not that @*INC actually works in Niecza, but this patch has the same effect.

[00:24] <dalek> niecza: review: https://github.com/sorear/niecza/commit/88ee1d83a1

[00:28] <colomon> afk # heading to figure out how to go to the pub

[00:34] *** fgomez joined
[00:52] *** raiph joined
[00:56] *** cooper joined
[00:56] <dalek> perl6-roast-data: ff5de20 | coke++ | / (4 files):

[00:56] <dalek> perl6-roast-data: today (automated commit)

[00:56] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/ff5de2039e

[00:58] <xilo> r:

[00:59] *** woosley joined
[00:59] *** woosley left
[01:02] *** woosley joined
[01:02] <[Coke]> (has a 1 at the end) - oh, like you need to add defensively to avoid sink context woes? ;)

[01:08] *** adu joined
[01:09] <dalek> rakudo-star-daily: ff4acf2 | coke++ | log/ (5 files):

[01:09] <dalek> rakudo-star-daily: today (automated commit)

[01:09] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/ff4acf2de0

[01:14] *** anuby joined
[01:27] *** chipdude joined
[01:44] *** BenGoldberg joined
[01:48] *** BenGoldberg left
[01:52] *** BenGoldberg joined
[01:57] *** BenGoldberg left
[02:09] *** lustlife joined
[02:09] *** btyler joined
[02:14] *** snearch left
[02:21] *** arlinius joined
[02:29] *** prevost joined
[02:30] <masak> lue: that's a bug.

[02:30] * masak submits rakudobug

[02:31] <masak> or, hm.

[02:31] <masak> I'm not sure.

[02:31] <masak> but it's worth filing anyway :)

[02:36] *** FROGGS joined
[02:40] * sorear has arrived at the doubletree

[02:41] <jnthn> sorear: On IDE, I was using Eclipse. But these days am back to just normal editor. On dumping, there's no current way to dump them aside from those things that have a .dump method already.

[02:41] <jnthn> (Though we could add some REPR-level dumping support quite easily I guess...)

[02:41] <jnthn> (I just never needed it to debug stuff...)

[02:46] <sorear> I see

[02:47] <sorear> lots of room for me to add stuff :)

[02:52] <jnthn> Yes :)

[02:53] *** fgomez left
[02:56] *** Targen joined
[02:56] <masak> r: grammar Brackets::Balanced { token TOP { ^ <balanced>? $ }; token balanced { '[' <balanced>? ']' <balanced>? }; method ACCEPTS($string) { ?self.parse($string) } }; say "[][]" ~~ Brackets::Balanced; say "][" ~~ Brackets::Balanced

[02:56] <camelia> rakudo b2072f: OUTPUT«True␤False␤»

[02:56] * masak cackles

[02:58] <sorear> where are masakjnthn now?

[02:58] <masak> I... almost find myself wishing that was built into grammars.

[02:58] <masak> sorear: doubletree.

[02:58] <masak> room.

[02:59] <sorear> ah.

[02:59] * sorear still in lobby

[03:05] *** fgomez joined
[03:17] *** adu left
[03:18] *** atroxaper joined
[03:28] *** woosley left
[03:37] *** woosley joined
[03:38] *** preflex_ joined
[03:38] *** ChanServ sets mode: +v preflex_

[03:39] *** Jimmy__ joined
[03:40] <Jimmy__> [Coke]: https://github.com/parrot/parrot/commit/1b6fc75eff2ca2f70cd843c360a7986774aed1c6#commitcomment-3337328

[03:40] *** preflex_ is now known as preflex

[03:40] *** Jimmy__ left
[03:58] *** prevost left
[03:59] <dalek> v5: a411981 | (Tobias Leich)++ | Makefile:

[03:59] <dalek> v5: added "make path/to/testfile.t"-option

[03:59] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/a411981382

[03:59] <dalek> v5: 659a3cc | (Tobias Leich)++ | / (2 files):

[03:59] <dalek> v5: remove color codes better

[03:59] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/659a3cc269

[04:17] *** labster joined
[04:19] *** btyler left
[04:26] *** Psyche^ joined
[04:30] *** Psyche^ is now known as Patterner

[04:30] *** REPLeffect joined
[04:31] *** FROGGS left
[04:42] *** sqirrel joined
[04:44] *** labster left
[04:47] <dalek> panda: 815fab5 | dukeleto++ | README.md:

[04:47] <dalek> panda: [doc] Make reference links render more nicely

[04:47] <dalek> panda: review: https://github.com/tadzik/panda/commit/815fab5a2f

[04:49] *** spider-mario joined
[04:50] *** fgomez left
[04:51] <moritz> good morning

[04:51] *** ggoebel joined
[04:52] <masak> moritz: good night ;)

[04:52] <masak> 'night, #perl6

[04:54] <moritz> good knight, masak

[04:59] *** fgomez joined
[04:59] *** zby_home_ joined
[05:04] <colomon> \o

[05:06] <pmichaud> o/

[05:07] *** ggoebel left
[05:08] <colomon> How was Hula Hut?

[05:09] <PerlJam> g'night from the dorms all  :)  See y'all tomorrow!

[05:09] *** spider-mario left
[05:09] <pmichaud> pretty nice

[05:09] <pmichaud> food was quite good, conversations were tasty also

[05:10] <colomon> I had a fine time at the Irish pub, played music for three hours and got to catch up with some old acquaintances. 

[05:10] <pmichaud> niiiiice

[05:12] *** gdey joined
[05:12] <pmichaud> I think I'm off to sleep --- bbl

[05:13] <colomon> ditto

[05:20] *** birdwindupbird joined
[05:22] *** ggoebel joined
[05:25] *** kaleem joined
[05:49] *** gdey left
[05:51] *** dmol joined
[05:55] *** zby_home_ left
[06:06] *** thou left
[06:07] *** lizmat joined
[06:11] *** dmol left
[06:43] *** denisboyun_ joined
[06:50] *** awwaiid left
[07:05] <moritz> .tell masak this one was written for you, I believe: http://www.redblobgames.com/grids/hexagons/

[07:05] <yoleaux> moritz: I'll pass your message to masak.

[07:13] *** rindolf joined
[07:18] *** Guest1337 joined
[07:23] *** salv0 joined
[07:30] *** domidumont joined
[07:50] *** domidumont left
[07:51] *** domidumont joined
[07:52] *** rindolf left
[07:56] *** Guest1337 left
[08:00] *** Guest1337 joined
[08:01] *** rindolf joined
[08:07] *** daxim joined
[08:08] *** awwaiid joined
[08:17] *** Guest1337 left
[08:28] *** mikemol joined
[08:40] *** dakkar joined
[08:42] *** Guest1337 joined
[09:03] <mathw> Good morning #perl6

[09:06] <moritz> \o mathw 

[09:14] <mathw> hi moritz

[09:17] *** araujo joined
[09:17] *** araujo left
[09:17] *** araujo joined
[09:28] *** mrlo joined
[09:30] *** Guest1337 left
[09:53] *** lustlife left
[09:59] *** lustlife joined
[10:07] *** bruges_ joined
[10:15] *** lestrrat joined
[10:17] *** anuby left
[10:26] *** ggoebel left
[10:28] *** fhelmberger joined
[10:41] *** ggoebel joined
[10:52] <atroxaper> Does anybody know where i can read about command line options standard?

[10:53] *** Doom-RiderZ joined
[10:53] <Ulti> atroxaper do you mean command line flags in general what format they should take?

[10:53] <Ulti> like single or double - etc.

[10:54] *** denisboyun_ left
[10:54] <Doom-RiderZ> anyone here , 

[10:54] <atroxaper> Ulti: yes. I'm going to write smart parser.

[10:55] <atroxaper> Doom-RiderZ: o/

[10:55] *** Guest1337 joined
[10:55] <Ulti> atroxaper Getopt is the defacto standard afaik

[10:57] *** Doom-RiderZ left
[10:57] *** Guest1337 left
[10:58] <atroxaper> I thinks yes. I just want to train my perl6 and i'm interested in command line parser.

[10:58] <Ulti> atroxaper: I guess take a look at what MAIN does for you for free in perl6 as a start

[10:58] <Ulti> not sure if the perl6 spec defines binding a hash or an array

[10:59] <Ulti> like getopts long in perl5

[11:00] <atroxaper> I look MAIN function already, yes. It isn't too reach like getopts.

[11:01] <eternaleye> Ulti: P6 allows you to specify via function signatures, and even do multi dispatch.

[11:02] <Ulti> eternaleye: yeah, but does it let you do something like --key=val1 --key=val2 to bind a hash called key in the parameter list of MAIN?

[11:03] <Ulti> well more like --hash=key,val even

[11:03] * Ulti plays to find out

[11:06] *** arlinius left
[11:12] <Ulti> hmm weird I keep getting the usage string telling me it needs an associative value passed in but no idea on the format

[11:14] <atroxaper> Do you read http://perl6maven.com/parsing-command-line-arguments-perl6 ?

[11:15] <Ulti> atroxaper: that doesnt have an example of passing in a hash value?

[11:15] <moritz> looking at src/core/Main.pm, it seems to have no idea how to turn anything into a hash

[11:16] <atroxaper> no...

[11:16] <Ulti> doesn't tell you it can't though just that you haven't passed in an associative value :S

[11:16] <Ulti> ^latest rakudo*

[11:17] *** Targen left
[11:17] <moritz> r: sub MAIN(%h) { }

[11:17] <camelia> rakudo b2072f: OUTPUT«Usage:␤  /tmp/vSLsq1C6Xb <h> ␤»

[11:18] <Ulti> I did :%h so it was a named parameter rather than positional

[11:20] <Ulti> r: sub MAIN(:%h) {}

[11:20] <camelia> rakudo b2072f:  ( no output )

[11:21] <Ulti> I get ./opts.p6 [--hash=<Associative>] for my snipped which is just that main with a say %hash.perl on the inside

[11:22] <moritz> r: sub MAIN(:%h!) {}

[11:22] <camelia> rakudo b2072f: OUTPUT«Usage:␤  /tmp/BHTxGFE3eO -h=<Associative> ␤»

[11:28] <atroxaper> I how we can pass values to that? )

[11:28] <moritz> 13:15 < moritz> looking at src/core/Main.pm, it seems to have no idea how to turn  anything into a hash

[11:28] <moritz> by patching rakudo

[11:28] <Ulti> :)

[11:29] <atroxaper> Oh. I see. Thank! moritz, maybe you know where i can see standard for command line arguments?

[11:30] <moritz> S19 is the spec, but I don't know how detailed it is

[11:30] <Ulti> yeah weird even slurping into a hash doesn't work but does work for a list, guess hashes and lists aren't even vaguely the same in perl6

[11:30] <Ulti> thats in the synopsis for MAIN too

[11:31] <Ulti> moritz it only outlines doing something like MAIN(*%options)

[11:33] <Ulti> this feels like the sort of patch I might actually be able to pull off...

[11:34] <nwc10> "I love it when a patch comes together"?

[11:41] <Ulti> yeah in fact the TODO says everything I tried is needed like giving quoted perl6 literals and comma delimited lists

[11:46] * colomon is trying to figure out why the new modules aren't showing up in the smoke results.  

[11:46] <arnsholt> o/

[11:47] <colomon> well, to be precise, I know why Phaser::ATEXIT didn't show up, and I fixed that.  But I can't figure out why Image::Resize didn't show up.

[11:52] *** arlinius joined
[11:54] *** markstacey joined
[11:54] <moritz> does it appear in the emmentaler json output?

[11:54] *** markstacey is now known as gudahtt

[11:55] <colomon> nope

[11:56] <moritz> maybe the projects.json list wasn't up to date when running emmentaller?

[11:57] <colomon> the smoke script grabs the latest projects.json from feather before it starts

[11:57] <colomon> Image::Resize isn't there.

[11:58] <colomon> http://feather.perl6.nl:3000/projects.json

[11:59] <moritz> 1;0 moritz@feather:~$ sudo netstat -tulpen|grep 3000

[11:59] <moritz> [sudo] password for moritz: 

[11:59] <moritz> tcp        0      0 0.0.0.0:3000            0.0.0.0:*               LISTEN      1002       626677      20722/perl      

[11:59] <moritz> 1;0 moritz@feather:~$ ps aux | grep 20722

[11:59] <moritz> tjs      20722  0.0  0.4  17828  5508 pts/1    S+   Feb07   0:07 perl modules/bin/app.pl

[11:59] <moritz> so, a job for tadzik to figure out

[12:00] <colomon> that means feather is working normally?

[12:00] <colomon> (I mean, for these purposes.)

[12:00] <moritz> I just tracked down the process listening on port 3000 to tjs aka tadzik, nothing more

[12:02] <colomon> moritz: ah!

[12:02] <moritz> it seems the meta list updates once per day

[12:02] <moritz> maybe it just ran when github had a hiccup

[12:02] * moritz runs it again

[12:04] <moritz> .ask tadzik if the code behind feather.perl6.nl:3000 is on github, and if yes, where? (and if not, could you please publish it?)

[12:04] <yoleaux> moritz: I'll pass your message to tadzik.

[12:07] *** toebu joined
[12:11] *** gdey joined
[12:19] *** smace joined
[12:24] *** gdey left
[12:28] *** stevan_ joined
[12:30] *** SmokeMachine joined
[12:39] *** flaviusb joined
[12:41] * jnthn yawns

[12:42] <colomon> \o

[12:43] <moritz> o/

[12:43] * lizmat is eating yellow Rainier cherries

[12:43] <dalek> rakudo/jvm-support: 623eeb3 | jonathan++ | src/Perl6/Metamodel/ (2 files):

[12:43] <dalek> rakudo/jvm-support: Add a couple of missing .^mro methods.

[12:43] <dalek> rakudo/jvm-support: review: https://github.com/rakudo/rakudo/commit/623eeb3434

[12:43] * jnthn is in the hotel room, enjoying the cool and still waking up :)

[12:45] <jnthn> .oO( I love the smell of MOP patches in the morning... )

[12:46] *** ajr joined
[12:46] *** ajr is now known as Guest45478

[12:46] <arnsholt> jnthn: Update on the stuff we talked about yesterday, the storage_spec for the native callsite is flagged as inlineable

[12:46] <arnsholt> $9 = {inlineable = 1, bits = 512, align = 8, boxed_primitive = 0, can_box = 0}

[12:47] *** btyler joined
[12:50] <nwc10> jnthn: hotel aircon better than conference aircon?

[12:51] <lizmat> hotel aircon is louder

[12:51] <arnsholt> That's true

[12:52] *** domidumont left
[12:53] <nwc10> YAPC Noisy Aircon?

[12:56] *** domidumont joined
[12:57] *** lizmat left
[12:59] *** Khisanth joined
[13:01] *** Guest45478 is now known as ajr_

[13:02] <jnthn> arnsholt: Hm, interesting...

[13:02] <colomon> rn: say "t/spec".path.WHAT

[13:02] <jnthn> Heading to venue, bbs

[13:02] <camelia> niecza v24-57-g88ee1d8: OUTPUT«Unhandled exception: Unable to resolve method path in type Str␤  at /tmp/os1Cnh3aZS line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4341 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4342 (module-CORE @ 582) ␤  at /home/p…

[13:02] <camelia> ..rakudo b2072f: OUTPUT«(IO::Path)␤»

[13:02] <colomon> is Str.path really supposed to be there?

[13:03] <colomon> It's not mentioned in S32/Str

[13:03] <moritz> it's probably in IO somewhere

[13:03] *** lizmat joined
[13:03] <moritz> but yes, it's supposed to be there

[13:03] <moritz> and if it's not specced, it needs to be specced

[13:04] *** colomon left
[13:08] *** domidumont1 joined
[13:11] *** Targen joined
[13:12] *** domidumont left
[13:13] *** rindolf left
[13:16] *** lizmat left
[13:21] <pmichaud> good morning, #perl6

[13:22] <pmichaud> I prepared a response to the podcast transcribed at https://gist.github.com/ribasushi/5670006

[13:23] <pmichaud> my draft reply is at https://gist.github.com/pmichaud/339fed007ee7e1239e1a

[13:23] <pmichaud> comments welcomed

[13:24] <daxim> drama!

[13:24] <pmichaud> haven't decided whether to post it yet (e.g. on my blog), but it was a topic yesterday at the hackathon and dinner so I thought I'd at least draft a response and see how it looked.

[13:24] <pmichaud> I'm heading to conference venue... bbiab

[13:25] *** cognominal joined
[13:25] *** domidumont joined
[13:25] *** smace left
[13:25] *** rindolf joined
[13:27] *** denisboyun_ joined
[13:27] *** domidumont1 left
[13:28] *** kaleem left
[13:29] *** smace joined
[13:29] *** konundra joined
[13:34] *** stevan_ left
[13:35] *** prevost joined
[13:37] <sorear> good * #perl6

[13:39] <tadzik> hello #perl6

[13:39] <yoleaux> 12:04Z <moritz> tadzik: if the code behind feather.perl6.nl:3000 is on github, and if yes, where? (and if not, could you please publish it?)

[13:39] <tadzik> yoleaux: no, yes. I shall

[13:39] <tadzik> er

[13:40] <tadzik> moritz: not on github, I will publish it soonish

[13:41] *** gdey joined
[13:41] *** gdey left
[13:45] <sorear> o/ tadzik

[13:45] <tadzik> oh hai

[13:48] *** espadrine joined
[13:50] *** Targen left
[13:52] *** skids joined
[13:54] *** colomon joined
[13:56] <masak> mornin', mornin', mornin', all y'all

[13:56] <yoleaux> 07:05Z <moritz> masak: this one was written for you, I believe: http://www.redblobgames.com/grids/hexagons/

[13:56] <colomon> o/

[13:57] <masak> moritz: indeed; I found it yesterday. fantastic.

[13:57] <masak> moritz: not enough focus on the rhombic board common in Hex, but otherwise really really nice.

[13:57] <masak> moritz: I'm hoping for a future web with slick interactive diagrams like that.

[13:57] *** cognominal left
[13:58] *** cognominal joined
[13:59] *** gdey joined
[14:03] <avuserow> masak, moritz: regarding hexagon grids, I found this recently: http://keekerdc.com/2011/03/hexagon-grids-coordinate-systems-and-distance-calculations/

[14:05] <avuserow> (dunno if that's the sort of thing you're interested in regarding them)

[14:05] <colomon> pmichaud: looks like a good response to me.

[14:11] *** labster joined
[14:18] <dalek> niecza: 7c7c2ff | (Solomon Foster)++ | lib/CORE.setting:

[14:18] <dalek> niecza: Add Str.path.

[14:18] <dalek> niecza: 

[14:18] <dalek> niecza: Doesn't really do the right thing, as it's not an IO::Path, but it works well enough for many purposes.

[14:18] <dalek> niecza: review: https://github.com/sorear/niecza/commit/7c7c2ffa19

[14:18] <dalek> niecza: ae1f8dc | (Solomon Foster)++ | src/niecza:

[14:18] <dalek> niecza: Basic support for PERL6LIB.

[14:18] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ae1f8dc540

[14:19] *** JimmyZ joined
[14:19] <masak> pmichaud++ # "I frankly think it's hugely disrespectful" @ https://gist.github.com/pmichaud/339fed007ee7e1239e1a

[14:19] <masak> pmichaud++ # last paragraph of https://gist.github.com/pmichaud/339fed007ee7e1239e1a

[14:19] <Teratogen> hello

[14:20] <masak> avuserow: looks interesting. thank you.

[14:21] <atroxaper> Does anybody know why example from http://perl6advent.wordpress.com/2009/12/04/day-4-testing/ doesn't work? I got "Calling 'fac' will never work with argument types (str) (lines 16, 16)\n\tExpected: :(Int $n)". But if i make separate module with fac and separate file with tests all tests works well.

[14:21] *** ChanServ sets mode: +o masak

[14:21] *** masak sets mode: -b sivoais!~zaki@unaffiliated/sivoais

[14:22] *** ChanServ sets mode: -o masak

[14:22] *** kshannon joined
[14:22] *** colomon left
[14:23] *** colomon joined
[14:25] <moritz> atroxaper: the problem is that when I wrote that code, we didn't have any detection of argument type mismatches at compile time

[14:25] <moritz> atroxaper: so the last line used to complain at run time

[14:25] <moritz> atroxaper: now it complains at compile time, which makes the whole test file not run

[14:26] *** labster left
[14:26] *** stevan_ joined
[14:26] <moritz> atroxaper: so now you'd have to write  eval_dies_ok q[fac('oh noes i am a string')], 'Can only call it with ints';

[14:27] *** xilo joined
[14:29] <atroxaper> moritz, thaks! It remains to understand why i have to use that brackets xD

[14:30] <moritz> atroxaper: it's just a convenient way to create a string with single quotes inside

[14:30] <atroxaper> Oh... it just string parameter.

[14:30] <moritz> you can write "fac('...')" if you prefer

[14:31] <atroxaper> Yes. I understood already. Thank you.

[14:32] <atroxaper> moritz, but why it was work with separate files?

[14:33] <moritz> atroxaper: it shouldn't. What exactly did you do?

[14:34] <daxim> I'm packaging nqp-2013.05, I get this rpmlint warning:  http://paste.scsys.co.uk/252884

[14:34] <daxim> is it justified or spurious?

[14:35] *** gdey left
[14:36] <atroxaper> one file: " use v6; module Mo; our sub fac(int $n) {[*] 1..$n;} " second file " use v6; use Mo; use Test; plan 1; dies_ok { Mo::fac('oh noes i am a string') }, 'Can only call it with ints'; "

[14:37] <moritz> atroxaper: ah, I guess it doesn't check arguments of functions from namespaces at compile time

[14:38] <atroxaper> moritz, cool sideeffect xD

[14:40] <moritz> atroxaper: we tend to use lexical functions and export/import them in Perl 6

[14:44] <atroxaper> moritz, ok. I'll read about that.

[14:45] *** ajr joined
[14:45] *** ajr is now known as Guest80786

[14:46] *** ajr_ left
[14:46] *** Guest80786 is now known as ajr_

[14:56] *** denisboyun_ left
[14:57] *** colomon left
[15:04] *** domidumont left
[15:10] *** stevan_ left
[15:10] *** birdwindupbird left
[15:23] *** samlh joined
[15:23] <samlh> pmichaud: s/vanguished/vanquished/

[15:24] *** colomon joined
[15:24] <colomon> o\ from the p6 room

[15:27] *** rindolf left
[15:27] *** sivoais joined
[15:28] <geekosaur> anguished vanquishment?

[15:30] *** denisboyun_ joined
[15:31] *** labster joined
[15:31] *** flaviusb left
[15:33] <colomon> labster: does dir return IO::Paths now?

[15:35] *** espadrine left
[15:36] *** labster left
[15:36] *** JimmyZ left
[15:40] <colomon> labster: okay, I looked at the spec.

[15:40] <colomon> this is a complication

[15:40] <pmichaud> daxim: I've not seen that warning before.

[15:40] *** lizmat joined
[15:40] <daxim> what should I do?

[15:44] <pmichaud> daxim: I'm not sure.  I don't know who may have been running rpmlint.

[15:45] *** labster joined
[15:45] *** zby_home joined
[15:45] <pmichaud> looking

[15:46] <daxim> http://en.opensuse.org/openSUSE:Packaging_checks#executable-stack  http://www.gentoo.org/proj/en/hardened/gnu-stack.xml  http://fedoraproject.org/wiki/Packaging_tricks#Executable_stack

[15:46] *** gdey joined
[15:47] *** gdey_ joined
[15:47] *** Targen joined
[15:48] <sqirrel> hey there, someone seen froggs?

[15:49] <moritz> .seen FROGGS

[15:49] <yoleaux> I saw FROGGS 2 Jun 2013 22:44Z in #perl6: <FROGGS> maybe you have to read that backwards

[15:49] <pmichaud> daxim: do any of the other files give that error, or just nqp_dyncall_ops.* ?

[15:49] <colomon> I saw FROGGS in the room about ten minutes ago...

[15:49] <daxim> just that file

[15:49] <colomon> and he's still there.

[15:49] <colomon> labster: starting to steal your code for Niecza now.  :)

[15:50] <pmichaud> that's... a little bizarre

[15:50] <sqirrel> @colomon please tell him to contact me

[15:50] <labster> colomon: cool

[15:51] *** gdey_ left
[15:51] <pmichaud> jnthn: can you think of any reason why nqp_dyncall.ops would want its stack to be marked as executable?

[15:51] <colomon> sqirrel: it's a lecture, and I'm not sure I'm going to be able to get his attention without making a fuss

[15:51] *** gdey left
[15:51] <colomon> sqirrel: I think labster++ may have just done it.

[15:51] <sqirrel> ah no problem it isnt that urgent

[15:53] <labster> I'm sitting next to him and got his attention

[15:55] <sqirrel> its just that he contacts me after the lecture, i just want to ask him something, its no matter of life and death, we are all ok over here :-)

[15:55] <jnthn> pmichaud: Well, I guess dyncall must do fairly dynamic stuff with the C stack if it's FFI stuff

[15:55] <sqirrel> thx labster

[15:55] <jnthn> I'm not sure why it'd actually want to execute code on the stack

[15:55] *** thou joined
[15:55] <pmichaud> I'm wondering why the nqp ops would want it, though.

[15:55] <pmichaud> as opposed to dyncall itself.

[15:55] <arnsholt> Isn't libdyncall statically linked in?

[15:56] <jnthn> pmichaud: Well, dyncall is statically linked into the .ops file

[15:56] <pmichaud> aha

[15:56] <pmichaud> that would possibly explain it

[15:56] <jnthn> uh, the dyncall_ops lib

[15:56] *** konundra left
[15:56] <pmichaud> daxim: I'm guessing "justified" then.

[15:56] <daxim> ok

[15:57] *** FROGGS joined
[15:58] *** JimmyZ joined
[15:58] *** raiph left
[15:59] <FROGGS> hi there

[15:59] *** samlh left
[16:00] *** JimmyZ left
[16:01] <tadzik> hi here :)

[16:01] <pmichaud> any last comments on my blog post draft?  if no, I'll post it here in a bit.

[16:02] *** gdey joined
[16:02] <daxim> yes, s/conquerer/conqueror/

[16:02] <[Coke]> url?

[16:02] <tadzik> https://gist.github.com/pmichaud/339fed007ee7e1239e1a

[16:02] <daxim> [15:23] <pmichaud> my draft reply is at https://gist.github.com/pmichaud/339fed007ee7e1239e1a

[16:03] <pmichaud> japhb's talk is.... terrific.

[16:03] <[Coke]> ah, found it. also tadzik++

[16:03] <[Coke]> also daxim++

[16:04] * skids wonders how Int(-1).msb is specced.

[16:04] <pmichaud> it's quite a good overview of where things stand, and also a good overview of what talks to go see later in the conference to learn more on related topics

[16:05] <pmichaud> it's really... nice that he did that in his talk and that his talk came before others

[16:05] <pmichaud> japhb++

[16:06] <moritz> nr: say (-1).msb

[16:06] <camelia> rakudo b2072f, niecza v24-59-gae1f8dc: OUTPUT«0␤»

[16:07] <skids> nr: say (0).msb

[16:07] <camelia> rakudo b2072f, niecza v24-59-gae1f8dc: OUTPUT«Nil␤»

[16:07] <skids> So 1s complement.

[16:10] *** labster left
[16:11] *** fhelmberger left
[16:11] *** rindolf joined
[16:11] *** smace left
[16:12] <colomon> Serialization Error: could not locate static code ref for closure ''

[16:12] <colomon> build stage failed for GD::Raw: Failed building lib/GD/Raw.pm

[16:12] <colomon> :(

[16:12] <colomon> passes all tests if you run directly instead of building.

[16:13] <jnthn> Hmm.

[16:14] <pmichaud> why "Task::Star"?  Maybe "Bundled::Star"?

[16:14] <[Coke]> Task is a thing.

[16:15] <jnthn> Prolly inspired by Task::Kensho and so forth

[16:15] <tadzik> I was imitating CPAN

[16:15] <tadzik> yeah

[16:15] <[Coke]> e.g. http://search.cpan.org/~coke/Task-Parrot-0.01/lib/Task/Parrot.pm

[16:15] <daxim> http://p3rl.org/Task#DESCRIPTION

[16:16] *** smace joined
[16:17] <tadzik> somebody's building Star it seems, right during the talk. Awesomeness

[16:17] <pmichaud> or maybe "Distribution::Star" ?

[16:17] <dalek> nqp/rak-jvm-support: 0255fc8 | (Pawel Murias)++ | src/QAST/VM.nqp:

[16:17] <dalek> nqp/rak-jvm-support: Dump the contents of QAST::VM nodes when dumping the ast.

[16:17] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/0255fc83f3

[16:17] <dalek> nqp/rak-jvm-support: b0d3b9c | jonathan++ | src/QAST/VM.nqp:

[16:17] <dalek> nqp/rak-jvm-support: Merge branch 'master' into rak-jvm-support

[16:17] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/b0d3b9ce42

[16:18] <pmichaud> I'm fine with Task::... just from a non-p5-module background it doesn't quite read right to me.

[16:18] *** konundra joined
[16:18] <dalek> Heuristic branch merge: pushed 46 commits to rakudo/jvm-support by jnthn

[16:18] <tadzik> Bundle is also a thing (on CPAN), I'm fine with renaming it

[16:18] <PerlJam> Task is the better Bundle

[16:19] <lizmat> r: say rx:i/jrandom/ # shouldn't this say "(Regex)"

[16:19] <camelia> rakudo b2072f: OUTPUT«␤»

[16:20] <[Coke]> r: say rx:i/jrandom/.WHAT

[16:20] <camelia> rakudo b2072f: OUTPUT«(Regex)␤»

[16:20] <tadzik> r: say rx:i/jrandom/.perl

[16:20] <camelia> rakudo b2072f: OUTPUT«regex(Mu : Mu *%_) { ... }␤»

[16:20] <[Coke]> is the .gist of a Regex defined?

[16:21] <[Coke]> r: say rx:i/jrandom/.Str

[16:21] <camelia> rakudo b2072f: OUTPUT«␤»

[16:22] <timotimo> is the execution timing of "where" clauses in different places specced?

[16:22] <timotimo> like, is the optimizer allowed to leave out executions or do them earlier or something?

[16:23] <jnthn> Optimizer is allowed to analyze stuff there.

[16:24] <timotimo> that's nice to know

[16:24] <timotimo> i wonder how complicated it is to do proper inspection of simpler where clauses, like where * < 10 and such (but that seems like something for in two years)

[16:27] <timotimo> and maybe not even helpful most of the time

[16:28] *** ztt_ joined
[16:29] * colomon is brutalizing labster++'s code

[16:32] <jnthn> japhb++ # awesome

[16:32] <tadzik> excellent talk

[16:32] <colomon> japhb++ # well done

[16:32] <FROGGS> japhb++

[16:32] <tadzik> japhb++

[16:32] <avuserow> japhb++ # good talk

[16:32] *** gdey left
[16:33] *** kaare_ joined
[16:34] <jnthn> r: say sub { }

[16:34] <camelia> rakudo b2072f: OUTPUT«sub() { ... }␤»

[16:34] *** labster joined
[16:34] <jnthn> r: say ~ sub { }

[16:34] <camelia> rakudo b2072f: OUTPUT«␤»

[16:35] <timotimo> is there live streaming perchance?

[16:35] <colomon> timotimo: yes

[16:36] <timotimo> aaw, i wish i'd known beforehand

[16:36] <timotimo> what was it about?

[16:37] <timotimo> "Installing and Using Perl 6 Modules‎" this one?

[16:37] <avuserow> timotimo: http://www.yapcna.org/yn2013/talk/4695

[16:37] *** tgt joined
[16:37] <avuserow> timotimo: yes

[16:37] *** dmol joined
[16:37] <timotimo> which stream will give me masak and perl6 oo without o_o and will that be in 15 minutes?

[16:38] <btyler> timotimo: http://new.livestream.com/accounts/4219145/events/2150574/videos/20570839

[16:39] <colomon> timotimo: you might be able to see the back of my head!  (If so, probably creates terrible glare...)

[16:39] *** gdey joined
[16:39] <PerlJam> IS there a list of the live streams?

[16:40] <btyler> PerlJam: http://www.yapcna.org/yn2013/wiki?node=TalkVideos

[16:40] <btyler> cross reference that with the schedule: http://www.yapcna.org/yn2013/schedule for best results

[16:40] <PerlJam> btyler: thanks

[16:40] <btyler> it isn't obvious how to find them, I ended up digging them up on twitter

[16:41] *** labster left
[16:41] <btyler> but I'm glad I did, really enjoying things so far

[16:42] <timotimo> this livestream page has confused me almost endlessly

[16:42] <timotimo> but now i can see the video! that's masak!

[16:43] *** denisboyun_ left
[16:44] <PerlJam> btyler: now I can live stream one room while I'm in another :)

[16:44] *** espadrine joined
[16:44] <timotimo> i'm a bit annoyed that i only get sound in one ear :(

[16:46] <btyler> timotimo: same issue on all the streams, a steam admin mentioned that he/she was looking into it in the main stage chat

[16:46] <timotimo> gaaah why is it buffering every few seconds ;_;

[16:46] <timotimo> my internet connection is super awesome regularly and i can't imagine livestream.com is having trouble serving people

[16:47] *** Chillance joined
[16:47] <timotimo> the DVR functionality doesn't work at all either

[16:48] <timotimo> the usual trick of pausing and resuming twenty/thirty seconds later doesn't help either

[16:49] <PerlJam> timotimo: probably bandwidth problems locally.  (too many people streaming)

[16:50] *** rindolf left
[16:52] *** labster joined
[16:54] *** nebuchadnezzar joined
[16:56] *** espadrine left
[16:59] <dalek> rakudo/jvm-support: 2367dad | jonathan++ | src/vm/parrot/ModuleLoaderVMConfig.nqp:

[16:59] <dalek> rakudo/jvm-support: Fix a merge-o.

[16:59] <dalek> rakudo/jvm-support: review: https://github.com/rakudo/rakudo/commit/2367dadca7

[17:00] *** domidumont joined
[17:01] *** denisboyun_ joined
[17:02] <timotimo> i'll try to watch japhb's talk instead

[17:03] *** spider-mario joined
[17:03] <timotimo> "there was an error", yay

[17:04] <timotimo> and of course there's no download button

[17:05] <tadzik> where do we go eating?

[17:05] *** ajr_ left
[17:05] *** crab2313 joined
[17:06] <timotimo> all i could make out from the talk was that masak wasn't eaten yet. that's good

[17:06] <colomon> niecza> IO::Path.new("Thisismy/filename")

[17:06] <colomon> Path<Thisismy/filename>

[17:06] <FROGGS> cool

[17:06] <labster> sweet

[17:07] *** zby_home left
[17:09] <dalek> Heuristic branch merge: pushed 173 commits to rakudo/nom by jnthn

[17:09] <dalek> Heuristic branch merge: pushed 148 commits to nqp by jnthn

[17:10] <flussence> omgomgomgjvm?

[17:10] <jnthn> JVM work will now proceed in the master branch of NQP and the nom branch of Rakudo

[17:10] <flussence> yaaaaaaay

[17:10] <jnthn> This doesn't mean things are magically complete, just that there's no need for a branch.

[17:10] <colomon> \o/

[17:10] <jnthn> lunch &

[17:11] <flussence> jnthn++ xx 173+148

[17:11] *** colomon left
[17:12] *** lizmat left
[17:13] *** labster left
[17:13] *** dakkar left
[17:14] *** gdey left
[17:15] <[Coke]> jnthn++

[17:19] <timotimo> grr. livestream is keeping me from my streams :(

[17:21] *** FROGGS left
[17:25] *** konundra left
[17:29] <diakopter>   timotimo ?

[17:29] <diakopter> timotimo: ?

[17:30] *** ajr joined
[17:30] *** rindolf joined
[17:31] *** ajr is now known as Guest82679

[17:31] *** atroxaper left
[17:33] <timotimo> diakopter: i get thrown off the stream for 5-15 seconds at a time and when i try to use the "dvr rewind" functionality it just jumps back to live. when i try to watch a previously streamed recording, it gives me a very unhelpful "there was an error" message

[17:33] *** konundra joined
[17:34] *** daxim left
[17:34] *** Guest82679 is now known as ajr_

[17:35] <diakopter> timotimo: people with linux are reporting problems like that; people on mac and windows aren't

[17:36] <diakopter> afaik

[17:36] <timotimo> oh, good. i'll boot my windows then

[17:40] *** btyler left
[17:40] <timotimo> i wonder why it would break, considering it's flash

[17:42] *** tomyan joined
[17:42] <geekosaur> because flash on linux is even suckier than flash in general?

[17:43] <timotimo> it's almost exactly as sucky

[17:43] *** tomyan left
[17:43] <timotimo> doesn't work on windows either fwiw

[17:43] *** ztt_ left
[17:44] *** crab2313 left
[18:01] *** kst joined
[18:01] <dalek> perl6-roast-data: c4aaed8 | coke++ | / (4 files):

[18:01] <dalek> perl6-roast-data: today (automated commit)

[18:01] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/c4aaed8150

[18:06] *** zby_home joined
[18:06] <[Coke]> it is desired that rakudo's ConfigureJVM.pl support --gen-nqp, aye?

[18:07] *** crab2313 joined
[18:08] *** btyler joined
[18:09] *** raiph joined
[18:09] *** tomyan joined
[18:09] * [Coke] opens a ticket for it

[18:10] <raiph> http://www.reddit.com/r/readablecode/comments/1fle60/is_this_regex_code_readable/ # re masak's latest balanced bracket parser

[18:14] <eternaleye> raiph: ...Maybe it didn't get attention because you invite people to post if they *don't* agree, and everyone agreed! :P

[18:15] <eternaleye> (Yes, I know, everybody on reddit agreeing is not a likely explanation for anything)

[18:16] <eternaleye> Anyway, I'd personally have titled it "What do you think about this regex syntax", which makes it look less like a "how did I do" question and more of a "what are your aesthetic opinions about a design"

[18:20] <[Coke]> just got a build failure in nqp master running on java with "make -j3"

[18:21] <[Coke]> finishing with "make" seems to have avoided the issue

[18:22] <[Coke]> Can someone install java 1.7 on feather?

[18:23] <[Coke]> (in anticipation of rakudo-jvm roasting)

[18:23] * [Coke] thinks rakudo-java is slightly better choice there and will use that going forward.

[18:27] *** irdan joined
[18:31] <timotimo> now that i finally was able to see it: thanks masak, liked the talk :)

[18:33] * [Coke] cannot build rakudo-java at the moment:

[18:33] <[Coke]> make

[18:33] <[Coke]> nqp/install/nqp --target=classfile --output=blib/Perl6/Grammar.class --encoding=utf8 \ src/Perl6/Grammar.nqp

[18:33] <[Coke]> ^[[6~java.lang.OutOfMemoryError: Java heap space

[18:33] <timotimo> hehe

[18:33] <[Coke]> <sadface>

[18:33] <timotimo> oh java, you silly thin

[18:33] <timotimo> silly thing*

[18:34] <[Coke]> This is nqp version 2013.05-151-gb0d3b9c built on JVM

[18:40] <timotimo> sadly not able to watch the perl6 modules talk by japhb :(

[18:44] *** sqirrel_ joined
[18:44] *** sqirrel left
[18:50] *** colomon joined
[18:50] *** FROGGS joined
[18:51] *** sqirrel_ left
[18:51] *** sqirrel joined
[18:52] <colomon> o/

[18:52] <dalek> v5: 9353bdf | (Tobias Leich)++ | / (2 files):

[18:52] <dalek> v5: allow infix != without space before and after

[18:52] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/9353bdf50b

[18:52] *** Guest1337 joined
[18:54] *** sqirrel_ joined
[18:55] *** lizmat joined
[18:55] <FROGGS> sqirrel_: \o/

[18:55] <FROGGS> sqirrel_: I made photos of the squirrels here at the campus :o)

[18:56] <sqirrel_> \o

[18:56] <FROGGS> basically I made three photos of one eating squirrel

[18:57] <sqirrel_> Froggs:  cookieman will be over the moon about it

[18:58] *** cognominal left
[18:58] *** cognominal joined
[19:03] *** sqirrel left
[19:03] <jnthn> [Coke]: Yes, --gen-nqp is desirable for ConfigureJVM.pl

[19:04] *** gdey joined
[19:05] <eiro> FROGGS: i read your lines and tried to ldd moarvm and tried 

[19:05] <eiro>  perl -E 'print "$_ " for `ldd ./moarvm` =~ /(\S+) =>/g' 

[19:05] <eiro> linux-gate.so.1 libpthread.so.0 libm.so.6 libc.so.6

[19:05] *** labster joined
[19:05] <eiro> # no apr at all so it *is* statically compiler

[19:05] <eiro> s/r$/d

[19:06] <FROGGS> which does not work on my box for some reason

[19:06] <FROGGS> so, what is your os and arch?

[19:06] <eiro> linux uname -a

[19:06] <eiro> Linux toad 3.5.0-27-generic #46-Ubuntu SMP Mon Mar 25 20:00:05 UTC 2013 i686 i686 i686 GNU/Linux

[19:07] *** gudahtt left
[19:07] <FROGGS> ahh, what I thought, you are on a 32bit platform

[19:07] <eiro> FROGGS: are you sure apr dev files are not installed in your system ? 

[19:08] <FROGGS> apr dev files are installed

[19:08] <eiro> yep but what's the point there ?

[19:08] <jnthn> There's an apr bundled in the Moar repo at the moment also

[19:08] <FROGGS> it can't resolv a single symbol (about uuid_generate or so), when I use the static libapr-1 lib

[19:08] <eiro> jnthn: the one i used. my patch was about making it work

[19:08] *** census joined
[19:09] <jnthn> eiro: Yes, that's how I understand your patch.

[19:09] <FROGGS> the patch you did is a partial revert of mine

[19:10] <eiro> FROGGS: i'm really sorry about it but i just don't know how to do better 

[19:10] <FROGGS> I'm not really happy with it, we should either revert mine in total or find the correct way to support 32 and 64bit archs

[19:10] <FROGGS> eiro: me neither

[19:10] <FROGGS> but maybe I'll know some day next week, when I can access a 32bit machine

[19:11] <FROGGS> so I'd say we dont touch it unless we know better

[19:11] <eiro> ok

[19:13] <pmichaud> 18:06 <[Coke]> it is desired that rakudo's ConfigureJVM.pl support --gen-nqp, aye?

[19:13] <pmichaud> actually, I'm thinking that rakudo's configure should have --gen-nqp=jvm or --with-nqp=... and it decides JVM/Parrot/other based on that. 

[19:14] <pmichaud> (we're not there yet, but that's where I'll be aiming to go)

[19:14] <jnthn> pmichaud: That'd be nice

[19:14] <pmichaud> but in essence, Rakudo figures out how to configure itself based on the nqp (options) that you supply

[19:14] *** woolfy joined
[19:21] <PerlJam> masak++ live demo!  :-)

[19:22] <timotimo> I'm missing more stuff on stream :(

[19:24] *** domidumont left
[19:29] * colomon was wondering why masak was messing around with indices.  ;)

[19:30] <census> yay!  masak++

[19:30] <btyler> masak's stream audio just cut out entirely. can someone present maybe poke an admin-type?

[19:31] <btyler> and back

[19:31] <census> btyler: are you watching masak from your computer live?

[19:31] <btyler> yes

[19:31] <census> may i ask how?

[19:31] <btyler> http://new.livestream.com/accounts/4219145/events/2150574

[19:31] <timotimo> it works on android

[19:32] <btyler> census: combine http://www.yapcna.org/yn2013/schedule with http://www.yapcna.org/yn2013/wiki?node=TalkVideos to see everything happening :)

[19:32] <timotimo> fsvo works

[19:32] <census> is this masak discussing the dot product?

[19:32] <colomon> yes

[19:32] <jnthn> yes

[19:33] <dalek> niecza: b4da574 | (Solomon Foster)++ | t/spectest.data:

[19:33] <dalek> niecza: Apparently this file is gone.

[19:33] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b4da57469e

[19:36] <anocelot> btyler: Is the audio back in now?  (I'm sorta working on it kinda.)

[19:36] <dalek> niecza: 94cad70 | (Solomon Foster)++ | t/spectest.data:

[19:36] <dalek> niecza: As is this one.

[19:36] <dalek> niecza: review: https://github.com/sorear/niecza/commit/94cad7082a

[19:38] <btyler> anocelot: yep, it popped back about 70 seconds after I first mentioned it. still only on the left channel, but that's no biggie

[19:39] <anocelot> btyler: OK.  I think we may only have a mono feed from the board, so I'm unsure how that was going out in stereo before.  XD

[19:40] <rjbs> What was that chaacter after Carl's "say"?

[19:40] <btyler> anocelot: oh, the left-channel-only thing has been very consistent :) thanks for your work, I'm loving being able to stream these talks

[19:40] <rjbs> Looked like "say ~.value.reverse.first"

[19:40] <jnthn> ~ would be stringify

[19:40] <PerlJam> rjbs: aye

[19:41] <anocelot> btyler: Your're welcome.  Thank diakopter thought, he's been running non-stop on this stuff; I've only been working on it for the day.

[19:41] <colomon> you can use ~ with implicit $_ like that?

[19:41] <rjbs> jnthn: That's what I thought, but then what was the value for?

[19:41] *** stevan_ joined
[19:42] <rjbs> I wonder I misread the slide.  I'd have expected:  say ~ .reverse.first.value

[19:42] <anocelot> rjbs: Can you rewind the stream?

[19:42] <rjbs> anocelot: I'll just ask masak after it's over :)

[19:43] *** tomyan left
[19:43] <anocelot> rjbs: That's probably an effective alternative.

[19:45] <census> masak++ !!

[19:46] <PerlJam> japhb++ I didn't know the pod comment showed up in the usage like that 

[19:47] <PerlJam> masak++ indeed.  He's an excellent presenter IMHO

[19:47] <colomon> masak++

[19:48] <jnthn> masak++

[19:48] *** tomyan joined
[19:50] *** Guest1337 left
[19:52] *** Guest1337 joined
[19:52] <dalek> roast: a0cc4c2 | (Elizabeth Mattijsen)++ | S16-filehandles/io.t:

[19:52] <dalek> roast: Unfudge io test that succeeds now

[19:52] <dalek> roast: review: https://github.com/perl6/roast/commit/a0cc4c23c9

[19:53] *** stevan_ left
[19:53] <census> yes masak is great teacher

[19:53] <dalek> roast: d3f8d74 | (Solomon Foster)++ | S32-io/io-path.t:

[19:53] <dalek> roast: Change rakudo todos to niecza todos.

[19:53] <dalek> roast: 

[19:53] <dalek> roast: Because Rakudo can run them now, and Niecza is getting IO::Path but cannot run them yet.

[19:53] <dalek> roast: review: https://github.com/perl6/roast/commit/d3f8d7400a

[19:54] *** FROGGS left
[19:54] <colomon> On S32-io/io-path.t: does anyone understand #?rakudo 3 skip 'need to test OS submodules instead' 

[19:54] <masak> thanks all y'all. it was nice to be up there. :)

[19:54] <colomon> It seems like either the tests are wrong or Rakudo should have a different skip message.

[19:54] <colomon> labster?

[19:55] *** konundra left
[19:56] *** FROGGS joined
[19:57] <masak> rjbs: no, the .value there means "get the list of days-in-month, throw away the month"

[19:57] <timotimo> anyone know how to play this http://api.new.livestream.com/broadcasts/20570878.smil on linux? no luck with totem, mplayer or vlc :(

[19:57] <masak> colomon: the ~ isn't topicalizing on $_, the .value is.

[19:58] *** stevan_ joined
[19:58] *** pochi joined
[20:00] *** crab2313 left
[20:00] <timotimo> ah, apparently just concat the http_base with the src thing

[20:00] <colomon> masak: yes, I understood it must work that way.  I'm just mildly shocked it does

[20:01] <masak> hehe :)

[20:01] <masak> it's consistent ;)

[20:01] <labster> yeah, io-path.t tests are somewhat wrong.

[20:02] <labster> sorry, I was trying to get a job :)

[20:02] *** raiph left
[20:03] *** raiph joined
[20:03] *** denisboyun_ left
[20:03] <colomon> labster: no worries! 

[20:05] <rjbs> masak: Okay, so it was ~( .value...), rather than (~.value)...

[20:05] <rjbs> masak: Thanks

[20:06] *** donaldh joined
[20:07] <masak> r:say ~.value.reverse.first: *.day-of-week == 5 for classify *.month, Date.new("2013-01-01") .. Date.new("2013-12-31")

[20:08] <masak> rjbs: yes, method calls always bind tighter than prefix ops. it's somtimes surprising, but essentially it follows people's intuitions *most* of the time.

[20:08] <rjbs> masak: I think all my brain wanted was a space between ~ and . for that to have been unsurprising.  Hard to say, of course. :)

[20:08] <masak> rjbs: specifically, if you read the index in -a.i as a method call, you'd expect it to happen tighter than the -

[20:09] <rjbs> nod

[20:09] <masak> rjbs: I dunno, I tend to squeeze prefixes up against their terms, just like you have to with postfixes.

[20:10] <masak> maybe I'm just concerned they'll come off looking like infixes otherwise.

[20:10] <colomon> +1

[20:11] <colomon> r: say ~ .value.reverse.first: *.day-of-week == 5 for classify *.month, Date.new("2013-01-01") .. Date.new("2013-12-31")

[20:11] <camelia> rakudo b2072f: OUTPUT«2013-01-25␤2013-02-22␤2013-03-29␤2013-04-26␤2013-05-31␤2013-06-28␤2013-07-26␤2013-08-30␤2013-09-27␤2013-10-25␤2013-11-29␤2013-12-27␤»

[20:11] <colomon> guess it does work, though

[20:12] <masak> oh, not saying it doesn't. it should always work.

[20:12] <masak> with prefixes, you have the choice to append whitespace.

[20:12] *** census left
[20:12] <colomon> but you shouldn't.  ;)

[20:12] <masak> it's not part of my recommended style, no :)

[20:13] <[Coke]> there are -talks- on moarvm?

[20:13] <colomon> [Coke]: right now

[20:13] <masak> [Coke]: yep, ongoing. :)

[20:13] <masak> [Coke]: wish you were here... :/

[20:13] <masak> with postfixes, you don't. you have to squeeze it up against the term, or use unspace (which people who hate not being able to use whitespace also tend to hate).

[20:13] <nwc10> [Coke]: the talk description didn't say MoarVM before Saturday.

[20:13] <colomon> ... we're just two lost souls, in a fishbowl ...

[20:14] <[Coke]> arglebargle.

[20:14] <[Coke]> that's just dirty pool. :(

[20:15] <[Coke]> In retrospect, a little more warning on that might have been a good thing.

[20:16] <masak> you don't seem to fully understand the concept of "sekkrit project"...

[20:16] <masak> and as far as I understand, people hinted very strongly that you should come. :)

[20:16] <[Coke]> I do, actually.

[20:17] *** prammer joined
[20:17] *** [Coke] left
[20:18] *** konundra joined
[20:20] <anocelot> At least the current talk should be available on the stream.

[20:20] <anocelot> (MoarVM)

[20:20] * timotimo watches moarvm on a windows computer now

[20:21] <anocelot> \o/

[20:21] <tadzik> I think all talks are recorded and will be available later

[20:21] <sorear> o/

[20:22] <timotimo> the audio is quite bad, i wish speakers would repeat what audience members say

[20:22] <timotimo> (but i know i miss that every once in a while)

[20:22] <timotimo> (but during my lightning talk there was someone who held up a blinking laptop screen with the words "repeat questions" up whenever i missed them)

[20:23] <timotimo> could someone from the audience stenotype that? :(

[20:23] <anocelot> How's that?

[20:23] <timotimo> OH YEAH

[20:23] <timotimo> excellent, thank you

[20:23] <anocelot> ;)

[20:23] <timotimo> wow, the volume difference between jnthn holds the mic up to his mouth and when he doesn't is humongous

[20:24] <anocelot> The qustion was, "How commited are you to not having incremental garbage collection?" (more or less)

[20:24] <timotimo> thanks

[20:24] <masak> no, that was exactly the question :)

[20:24] <anocelot> (real time incrementatal gcc is the off-mic note)

[20:25] <tadzik> one that guarantees allocation/collection time to be lower than X

[20:25] <masak> anocelot: have we met in meatspace? if not, I'd like to shake your hand.

[20:25] <anocelot> masak: I'm sitting next to TimToady in meatspace.

[20:26] <masak> I see you waving ;)

[20:26] <anocelot> o.o/

[20:26] <colomon> anocelot: was that you waving?  I've got obstructed view here.

[20:26] <colomon> \o

[20:26] <anocelot> yes.  ^.^

[20:27] *** jasper43 joined
[20:28] <timotimo> not sure if it was said/written-on-slides/asked, does moarvm already have some kind of jit?

[20:28] <masak> timotimo: no.

[20:28] <masak> timotimo: (not to my knowledge)

[20:28] <anocelot> (various "done by christmas" references.)

[20:28] <jasper43> hey guys ... is there a release day for Perl 6 yet?

[20:28] <timotimo> not saying i'm going to do it, but a moarvm clone atop pypy's translation/jit/gc framework should be called MoarMoar

[20:29] <masak> timotimo: but there's thought about adding a JIT.

[20:29] <masak> jasper43: hi!

[20:29] <jasper43> hi

[20:29] <anocelot> Moar^2

[20:29] <pmichaud> jasper43: our latest release was 2013-05-31

[20:29] <timotimo> maybe EvenMoarVM

[20:29] <jasper43> oh wow that was recent

[20:29] <pmichaud> http://rakudo.org/2013/05/31/rakudo-star-2013-05-released/

[20:29] *** zby_home left
[20:29] <jasper43> will I have any issues installing perl6 alongside perl in Ubuntu?  everything is kept separate I assume?  modules and all?

[20:29] <masak> jasper43: and it was compiler release #63.

[20:30] <masak> jasper43: yes, everything's separate.

[20:30] <jasper43> nice

[20:30] <masak> jasper43: you invoke Perl 6 with 'perl6' for now.

[20:30] <jasper43> perfect!

[20:30] <masak> \:D/

[20:30] <jasper43> you guys rock .. keep fighting the good fight

[20:30] <masak> jasper43: I cannot guarantee that the Ubuntu Rakudo Star is very recent.

[20:31] <timotimo> it probably is woefully out of date

[20:31] <masak> jasper43: you might be better off grabbing the latest Star from the post pmichaud++ linked.

[20:31] <pmichaud> http://pmthium.com/2013/06/a-perl-6-developers-reply-to-a-russian-perl-podcast/

[20:31] <jasper43> ok

[20:31] <jasper43> I'll do that

[20:31] <masak> pmichaud++

[20:31] <timotimo> "pmthium", that's a cute name :)

[20:31] <pmichaud> it's my element.  :)

[20:31] <tadzik> hehehe

[20:31] *** stevan_ left
[20:32] *** jasper43 left
[20:32] <timotimo> it's all about the pmthiums, baby o/~

[20:32] <PerlJam> I think ubuntu has rakduo 2012-07

[20:32] <masak> "gee, pmichaud is really in his element when he's blogging..." :)

[20:32] <anocelot> XD

[20:32] <PerlJam> er, sorry 2011-07

[20:32] <masak> PerlJam: that's ancient.

[20:32] <PerlJam> yep

[20:32] <masak> that's, like, more than two Christmases ago.

[20:32] <tadzik> it's like running 5.8. Oh, wait

[20:32] <masak> haha

[20:33] <PerlJam> Version: 0.1~2011.07-1build1

[20:33] <anocelot> (Various bickering off-camera.  Not too pertinant to the discussion.)

[20:34] <timotimo> thank you. i was wondering, because it's quite hard to make out what's going on

[20:34] <nwc10> http://packages.ubuntu.com/raring/rakudo -- Package: rakudo (2012.10-1build1)

[20:34] <tadzik> "will XS work in moar"

[20:34] <PerlJam> nwc10: ah, maybe I've got an old ubuntu repository

[20:34] *** snearch joined
[20:34] <timotimo> if you embed libperl, it should work, no?

[20:34] <tadzik> that was the answer ;)

[20:35] <timotimo> right

[20:35] <tadzik> (I dind't understand that last one, and I sit 5 meters from Riba)

[20:36] <arnsholt> The last question was what happens if, on the Perl 5 side, a Perl 6 object is passed to a C function (XSUB)

[20:36] <timotimo> ah

[20:36] <TimToady> "proxies work" was the answer

[20:36] <timotimo> twice as fast!

[20:36] *** sqirrel_ left
[20:37] <timotimo> what is lots and lots of dictionaries? libicu?

[20:37] <tadzik> (what's twice as fast?)

[20:38] <nwc10> whereas for debian: http://packages.debian.org/wheezy/rakudo -- Package: rakudo (0.1~2012.01-1) 

[20:39] <colomon> jnthn taking the stage (not sure if the camera will be capturing that?)

[20:39] <timotimo> i like seeing jnthn present, he seems so happy

[20:39] <timotimo> the camera does capture it, the left end is the left end of the projection surface, the right end is a bit right of the speaker's desk

[20:40] <timotimo> that's every opcode from moarvm we're seeing?

[20:40] <gfldex> could you drop me a link to the stream?

[20:40] <sorear> timotimo: lots of dictionaries = NieczaUCD.cs

[20:40] <tadzik> http://www.yapcna.org/yn2013/wiki?node=TalkVideos

[20:40] <gfldex> tyvm

[20:40] <sorear> timotimo: yes

[20:41] <colomon> timotimo: it doesn't fit all on one screen, but yes.

[20:41] <timotimo> livestream.com, search "yapc stream 3"

[20:42] <timotimo> sound trouble suddenly

[20:42] *** zby_home_ joined
[20:42] <timotimo> mostly a low hummmmmmm, but slightly hearable presenters

[20:42] *** konundra left
[20:42] <anocelot> Always?

[20:43] <timotimo> no, just started a minute ago, it's slowly improved again

[20:44] <anocelot> I fiddled with a cable, so let me know if it totally drops or whatever.  XD

[20:44] <FROGGS> >.<

[20:44] <FROGGS> *g*

[20:45] <timotimo> there's trouble again; whenever the speaker's audio level reaches a certain threshold, a whole bunch of hum/bzzt/whatever mixes in

[20:45] <timotimo> and jnthn triggers it every few words :(

[20:45] <timotimo> interestingly the hum is in the second audio channel, too

[20:45] <colomon> I think it's clipping in the PA system

[20:45] <anocelot> Ah.  That sounds like a peaking issue, prolly.

[20:46] <timotimo> can be, yes

[20:46] <anocelot> Maybe he should clip the mic to his shirt.

[20:46] <timotimo> that might rub on his beard the whole time i fear

[20:46] <masak> :D

[20:46] <tadzik> :D:D:

[20:46] <anocelot> Hmm.  That's a fair point.

[20:46] <PerlJam> clip it to the lanyard

[20:47] <FROGGS> who is lanyard? :P

[20:47] <masak> not sure that would work well...

[20:47] <masak> FROGGS: http://www.thefreedictionary.com/lanyard

[20:47] <FROGGS> *cough* joke *cough*

[20:47] <masak> (irony-free answer, sorry) :)

[20:47] <timotimo> masak: from experience, lanyard-clipped mics will rub against shirts when the speaker moves around or moves their arms too wildly

[20:48] <masak> right.

[20:48] <timotimo> FROGGS: 'you have a sarcasm sign?!'

[20:48] <anocelot> Have to clip it to BOTH sides at once.

[20:48] <FROGGS> ohh, forgot it at home, sorry

[20:48] <masak> "sarcasm? that's original!"

[20:48] <timotimo> completely unreadable color between the yellow

[20:48] <masak> timotimo: here, too ;)

[20:48] <timotimo> is that a dump of a serialised object or something?

[20:49] <masak> timotimo: it's the Unicode stuff, I think.

[20:49] <colomon> timotimo: I can read it, but it appears to be completely uninformative

[20:49] <timotimo> ah

[20:49] <colomon> It's the (numeric) comments you cannot read

[20:49] <masak> diakopter slurped all the Unicode data and turned it into C source.

[20:49] <colomon> like /*24*/ etc

[20:49] <masak> you're watching the output of his (Perl 5) script.

[20:49] <timotimo> uh huh

[20:50] *** tomyan left
[20:51] <timotimo> To compile on the MoarVM backend, QAST::VM must have an alternative 'moar' or 'moarop' - this is the kind of error i get from using unimplemented features when trying to nqp-cc-moar some code?

[20:52] <timotimo> (could be the pir:: ops that were still in there m) )

[20:53] *** colomon left
[20:55] *** kaare_ left
[20:56] <timotimo> so apparently the tracebacks give no line numbers from the crosscompiler :(

[20:56] *** Guest133_ joined
[20:57] <timotimo> he's talking about what i did! \o/

[20:57] <tadzik> yep :)

[20:57] <tadzik> timotimo++

[20:57] * timotimo so proud <3

[20:57] *** gdey left
[20:58] <timotimo> a future of a perl! :D

[20:59] <PerlJam> timotimo: It's a Perl of a future!  ;)

[20:59] *** Guest1337 left
[20:59] * timotimo put off his headphones

[20:59] <sorear> :D

[21:00] *** lizmat left
[21:01] * FROGGS puts off his earmuffs, it is hot outside >.<

[21:04] *** konundra joined
[21:04] *** woolfy left
[21:05] *** FROGGS left
[21:09] *** labster left
[21:10] *** estrabd joined
[21:11] *** skids left
[21:11] *** colomon joined
[21:12] <timotimo> now i feel that i have to one-up myself :P

[21:13] *** lizmat joined
[21:15] *** lizmat left
[21:16] *** FROGGS joined
[21:18] *** lizmat joined
[21:18] *** ajr_ left
[21:19] *** stevan_ joined
[21:19] *** stevan_ left
[21:23] *** gdey joined
[21:25] *** stevan_ joined
[21:26] <timotimo> what stream do i have to open to get larry wall?

[21:26] <timotimo> ah, number one

[21:26] <anocelot> Is the stream working?

[21:27] *** lizmat left
[21:27] <gfldex> yes

[21:27] <gfldex> they are on a break

[21:29] *** stevan_ left
[21:30] *** Guest133_ left
[21:31] <dalek> niecza: 95dde43 | (Solomon Foster)++ | / (3 files):

[21:31] <dalek> niecza: Borrow chopped up versions of labster++'s IO::FileTestable and IO::Path.

[21:31] <dalek> niecza: review: https://github.com/sorear/niecza/commit/95dde43c73

[21:32] *** Guest1337 joined
[21:37] <timotimo> "holier than thou" m)

[21:39] <timotimo> kind of scary :|

[21:41] *** rindolf left
[21:41] *** spider-mario left
[21:47] *** Guest1337 left
[21:48] *** gdey left
[21:49] *** [Coke] joined
[21:49] <FROGGS> ya

[21:53] *** zby_home_ left
[21:58] *** BenGoldberg joined
[22:00] *** colomon left
[22:02] *** xilo left
[22:03] *** lustlife left
[22:04] *** colomon joined
[22:04] *** FROGGS left
[22:05] *** tomyan joined
[22:06] *** lizmat joined
[22:10] *** FROGGS[mobile] joined
[22:10] <colomon> labster, etc: should the spec specify that the $test arg for dir tests the path strings rather than the IO::Path objects?

[22:17] *** Chillance left
[22:17] *** smace left
[22:18] *** AndChat|356841 joined
[22:18] *** FROGGS[mobile] left
[22:19] *** btyler left
[22:19] *** lizmat left
[22:21] *** Guest1337 joined
[22:21] *** xilo joined
[22:22] <colomon> dir.grep('t') is (essentially) in S32-io/dir.t.  Given that dir returns IO::Paths, should that still work?

[22:23] <dalek> rakudo-star-daily: b2e36f4 | coke++ | log/ (5 files):

[22:23] <dalek> rakudo-star-daily: today (automated commit)

[22:23] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/b2e36f48df

[22:24] *** lizmat joined
[22:24] <flussence> colomon++ # Text-Tabs-Wrap in niecza is now passing the same tests as rakudo

[22:26] <colomon> flussence: what was the difference?

[22:26] *** dmol left
[22:26] <flussence> half the tests used IO::Path to load files :)

[22:27] <colomon> :)

[22:27] <colomon> labster++

[22:28] *** lizmat left
[22:28] <colomon> It's not a very good IO::Path yet (I chopped a bunch of labster's stuff) but it seems to get some stuff done.

[22:29] *** btyler joined
[22:31] <[Coke]> colomon: how long until you start on nqp-mono? )

[22:31] <[Coke]> ;)

[22:31] <colomon> [Coke]: that's way beyond my pay grade.

[22:34] *** btyler_ joined
[22:34] *** btyler left
[22:35] <colomon> [Coke]: I'd love to see it done, but I think it probably makes sense to get JVM and MoarVM locked down first.

[22:36] *** guardian joined
[22:37] <donaldh> ETOOMANYVMS

[22:38] *** guardian left
[22:39] *** tomyan left
[22:41] *** jeffreykegler joined
[22:43] *** guardian joined
[22:51] *** tgt left
[22:53] <timotimo> so that's leto!

[22:54] *** btyler_ left
[22:55] *** donaldh left
[22:57] *** jeffreykegler left
[22:59] *** btyler joined
[23:03] *** skids joined
[23:05] *** BenGoldberg left
[23:08] <timotimo> WHY IS HE SCREAMING

[23:08] <timotimo> WHY ARE YOU SCREAMING

[23:08] *** colomon left
[23:08] *** preflex left
[23:08] *** arcterus joined
[23:10] *** btyler left
[23:11] <AndChat|356841> mst is just awesome

[23:12] <timotimo> that was mst?

[23:12] *** AndChat|356841 is now known as FROGGS_

[23:12] <FROGGS_> it was

[23:12] <FROGGS_> that is sawerx

[23:13] *** preflex joined
[23:13] *** ChanServ sets mode: +v preflex

[23:14] <timotimo> it'll be confusing to hear the same thing again 7 hours later

[23:15] <timotimo> wow, he has some beef :)

[23:17] *** raiph left
[23:18] *** arcterus left
[23:18] *** ggoebel left
[23:18] *** FROGGS_ left
[23:19] *** FROGGS[mobile] joined
[23:19] <timotimo> oh, now a "is perl6 perl" talk

[23:19] <timotimo> oh, changes

[23:21] * lue thought Perl 6 was Perl by definition...

[23:22] <Teratogen> Perl is a family of languages

[23:23] <timotimo> yeah, but apparently some people need to be reminded of that?

[23:23] *** FROGGS[mobile] left
[23:25] <timotimo> can one of you briefly explain to me what TIE does, preferably in perl6 terms?

[23:25] <timotimo> i think it's used to make regular datastructures in perl5 behave differently?

[23:27] <flussence> it's more or less like doing «augment %whatever { method postcircumfix:<{ }> {...}; ... }»

[23:27] <timotimo> only for { }?

[23:28] <flussence> well, works for nearly any lvalue-ish stuff

[23:28] <timotimo> would the same thing be doable with %whatever but role { method postcircumfix:<{ }> (...) { ... }; ... }?

[23:29] <flussence> oh wait, better explanation: it's more like «is repr»

[23:29] <timotimo> ah

[23:29] <flussence> (but yeah, roles are close enough)

[23:30] *** ggoebel joined
[23:31] <timotimo> what makes up a repr? implementations of at_key/at_pos/...?

[23:31] <dalek> roast: 05d756b | (Solomon Foster)++ | S32-io/ (2 files):

[23:31] <dalek> roast: Updates and fudges.

[23:31] <dalek> roast: review: https://github.com/perl6/roast/commit/05d756bfa8

[23:32] <dalek> niecza: 1bed6b7 | (Solomon Foster)++ | lib/CORE.setting:

[23:32] <dalek> niecza: Make dir return IO::Path objects.

[23:32] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1bed6b7a8a

[23:32] <dalek> niecza: 6e28e36 | (Solomon Foster)++ | / (2 files):

[23:32] <dalek> niecza: Make dir return IO::Path objects.

[23:32] <dalek> niecza: review: https://github.com/sorear/niecza/commit/6e28e36485

[23:32] *** colomon joined
[23:33] <colomon> o/

[23:34] <sorear> o/

[23:37] *** preflex left
[23:37] *** Guest1337 left
[23:38] <sorear> need alternate BOF planning solutions

[23:38] <sorear> it's loud enough down in the meeting halls that I was starting to ... fray

[23:38] *** preflex joined
[23:38] *** ChanServ sets mode: +v preflex

[23:38] <colomon> sorear: understood, it's still pretty bad up here.

[23:39] *** FROGGS[mobile] joined
[23:42] <eternaleye> timotimo: That reminds me, I need to toss the manga downloader I made up on github soon (I implemented it as a hierarchy of tied hashes, site -> manga name -> chapter -> page image URL)

[23:42] <flussence> rn: sub a is pure {rand}; sub b {rand}; say [==] a xx 10; say [==] b xx 10;

[23:42] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Undeclared routine:␤    xx used at line 1␤␤»

[23:42] <camelia> ..niecza v24-62-g95dde43: OUTPUT«===SORRY!===␤␤Undeclared routine:␤     'xx' used at line 1,1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 36) ␤  at /hom…

[23:42] <flussence> rn: sub a is pure {rand}; sub b {rand}; say [==] a() xx 10; say [==] b() xx 10;

[23:42] <camelia> rakudo b2072f, niecza v24-62-g95dde43: OUTPUT«True␤False␤»

[23:43] *** AndChat|356841 joined
[23:43] <sorear> FROGGS[mobile]: fans of quiet BOF? :)

[23:43] <eternaleye> flussence: ...now that is cool.

[23:43] <timotimo> huh, when did that happen

[23:43] *** AndChat|356841 left
[23:44] *** AndChat|356841 joined
[23:44] *** AndChat|356841 is now known as FROGGS_

[23:44] <timotimo> rn: sub a is pure { (state $)++ }; say (a() for ^10);

[23:44] <FROGGS_> damn wifi

[23:44] <camelia> rakudo b2072f, niecza v24-62-g95dde43: OUTPUT«0 0 0 0 0 0 0 0 0 0␤»

[23:44] <flussence> timotimo: it's not in the specs (yet) from what I can tell, but «is pure» means "fold this like a constant"

[23:44] <timotimo> rn: sub a { (state $)++ }; say (a() for ^10);

[23:44] <camelia> rakudo b2072f, niecza v24-62-g95dde43: OUTPUT«0 1 2 3 4 5 6 7 8 9␤»

[23:45] <FROGGS_> sorear: have to finish my slides

[23:45] <flussence> p5eval: poke

[23:45] <colomon> quiet dinner BOF?

[23:45] <p5eval> flussence: poke

[23:45] <FROGGS_> cant concentrate when there are so many ppl around

[23:45] *** FROGGS[mobile] left
[23:46] <flussence> p5eval: use v5.12; use Memoize; sub a { (state $foo)++ }; memoize(&a); say a() for 1..10; ''

[23:46] <p5eval> flussence: ERROR: Can't locate Memoize.pm in @INC (you may need to install the Memoize module) (@INC contains: /lib) at (eval 7) line 1.BEGIN failed--compilation aborted at (eval 7) line 1.

[23:46] <flussence> aww

[23:46] <sorear> flussence: it's not in the synopses, but it's tangentially mentioned in STD

[23:47] <sorear> flussence: btw, are you here?

[23:47] <colomon> flussence: you know there's a p6 "use cached" implementation somewhere in the Advent calendars....

[23:47] *** LordV joined
[23:47] <flussence> sorear: nah, I'm just being more active than usual :)

[23:47] <colomon> rn: my $p = "test".path; say (* eq "t")($p)

[23:47] <camelia> rakudo b2072f: OUTPUT«False␤»

[23:47] <camelia> ..niecza v24-62-g95dde43: OUTPUT«Unhandled exception: Cannot unbox a String from an object of repr P6opaque␤  at /tmp/qyzXcUHzqe line 0 (ANON @ 1) ␤  at /tmp/qyzXcUHzqe line 1 (mainline @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4500 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE…

[23:49] <timotimo> rn: multi sub a($foo where * < 5) { (state $)++ }; multi sub a($foo where * >= 5) { (state $)++ }; say ($_.&a for ^10);

[23:49] <camelia> rakudo b2072f: OUTPUT«0 1 2 3 4 0 1 2 3 4␤»

[23:49] <camelia> ..niecza v24-62-g95dde43: OUTPUT«Potential difficulties:␤  $foo is declared but not used at /tmp/6X6agfEkEJ line 1:␤------> multi sub a(⏏$foo where * < 5) { (state $)++ }; multi␤␤0 1 2 3 4 0 1 2 3 4␤»

[23:49] *** FROGGS joined
[23:49] *** FROGGS_ left
[23:49] <timotimo> rn: proto a ($foo) is pure; multi sub a($foo where * < 5) { (state $)++ }; multi sub a($foo where * >= 5) { (state $)++ }; say ($_.&a for ^10);

[23:49] <camelia> niecza v24-62-g95dde43: OUTPUT«===SORRY!===␤␤Malformed block at /tmp/QWGdg82naw line 1:␤------> proto a ($foo) is pure⏏; multi sub a($foo where * < 5) { (state␤␤Parse failed␤␤»

[23:49] <camelia> ..rakudo b2072f: OUTPUT«===SORRY!===␤Missing block␤at /tmp/192FRchS1m:1␤------> proto a ($foo) is pure⏏; multi sub a($foo where * < 5) { (state␤    expecting any of:␤        statement list␤        prefix or term␤        prefix or meta-prefix␤        ne…

[23:49] *** FROGGS[mobile] joined
[23:49] <timotimo> rn: proto a is pure ($foo); multi sub a($foo where * < 5) { (state $)++ }; multi sub a($foo where * >= 5) { (state $)++ }; say ($_.&a for ^10);

[23:49] *** FROGGS[mobile] left
[23:50] <camelia> niecza v24-62-g95dde43: OUTPUT«===SORRY!===␤␤Malformed block at /tmp/dy6zKHpBuW line 1:␤------> proto a is pure ($foo)⏏; multi sub a($foo where * < 5) { (state␤␤Parse failed␤␤»

[23:50] <camelia> ..rakudo b2072f: OUTPUT«===SORRY!===␤Missing block␤at /tmp/ZKuEzqbhqp:1␤------> proto a is pure ⏏($foo); multi sub a($foo where * < 5) { ␤    expecting any of:␤        statement list␤        prefix or term␤        prefix or meta-prefix␤        new name…

[23:50] <timotimo> rn: multi sub($foo where * < 5) is pure { (state $)++ }; multi sub a($foo where * >= 5) is pure { (state $)++ }; say ($_.&a for ^10);

[23:50] <camelia> rakudo b2072f: OUTPUT«Cannot call 'a'; none of these signatures match:␤:($foo)␤  in sub a at /tmp/xdW4R_QTXH:1␤  in block  at /tmp/xdW4R_QTXH:1␤␤»

[23:50] <camelia> ..niecza v24-62-g95dde43: OUTPUT«Potential difficulties:␤  $foo is declared but not used at /tmp/MnJX0iJR61 line 1:␤------> multi sub(⏏$foo where * < 5) is pure { (state $)++ ␤  &sub is declared but not used at /tmp/MnJX0iJR61 line 1:␤------> multi sub⏏($…

[23:50] <timotimo> rn: multi sub($foo where * < 5) is pure { (state $)++ }; multi sub a($foo where * >= 5) is pure { (state $)++ }; say (a($_) for ^10);

[23:50] <camelia> niecza v24-62-g95dde43: OUTPUT«Potential difficulties:␤  $foo is declared but not used at /tmp/IJwYrMQTAW line 1:␤------> multi sub(⏏$foo where * < 5) is pure { (state $)++ ␤  &sub is declared but not used at /tmp/IJwYrMQTAW line 1:␤------> multi sub⏏($…

[23:50] <camelia> ..rakudo b2072f: OUTPUT«Cannot call 'a'; none of these signatures match:␤:($foo)␤  in sub a at /tmp/tdAztTnGPr:1␤  in block  at /tmp/tdAztTnGPr:1␤␤»

[23:50] <timotimo> i don't know what i'm doing

[23:53] <FROGGS> rn: multi sub($foo where * < 5) is pure { (state $)++ }; multi sub a($foo where * >= 5) is pure { (state $)++ }; say (a($_) for 5..10);

[23:53] <camelia> rakudo b2072f: OUTPUT«0 1 2 3 4 5␤»

[23:53] <camelia> ..niecza v24-62-g95dde43: OUTPUT«Potential difficulties:␤  $foo is declared but not used at /tmp/RtNBWQZVbk line 1:␤------> multi sub(⏏$foo where * < 5) is pure { (state $)++ ␤  &sub is declared but not used at /tmp/RtNBWQZVbk line 1:␤------> multi sub⏏($…

[23:54] <flussence> rn: proto a($) {*}; sub a($ where * < 5) is pure { (state $)++ }; sub a($ where * >= 5) is pure { (state $)++ }; say a($_) for ^10;

[23:54] <camelia> niecza v24-62-g95dde43: OUTPUT«===SORRY!===␤␤Illegal redeclaration of routine 'a' (see line 1) at /tmp/KRRNNfMyiK line 1:␤------> proto a($) {*}; sub a⏏($ where * < 5) is pure { (state $)++ };␤␤Illegal redeclaration of routine 'a' (see line 1) at /tm…

[23:54] <camelia> ..rakudo b2072f: OUTPUT«===SORRY!===␤Redeclaration of routine a␤at /tmp/os7DiHBXA6:1␤------> a($ where * < 5) is pure { (state $)++ }⏏; sub a($ where * >= 5) is pure { (state␤    expecting any of:␤        postfix␤        statement end␤        statement…

[23:54] <eternaleye> timotimo: 'is pure' means that it has no effects on state - it uses the inputs to create the output, nothing more. No mutation of inputs, etc.

[23:54] <timotimo> eternaleye: i know that part :)

[23:54] <timotimo> i was trying to find out if it handles multis properly

[23:54] <eternaleye> timotimo: Ah

[23:55] <timotimo> i also remember now that "is pure" went into the code (because i saw the constant folding code in the optimizer), but i didn't realise until now that it can be used in user code (although i did notice it in the setting)

[23:56] <flussence> rn: proto a($) is pure {*}; multi sub a($ where * < 5) { (state $)++ }; multi sub a($ where * >= 5) { (state $)++ }; say a($_) for ^10

[23:56] <camelia> rakudo b2072f, niecza v24-62-g95dde43: OUTPUT«0␤1␤2␤3␤4␤0␤1␤2␤3␤4␤»

[23:56] <timotimo> oooh, the {*} was missing!

[23:57] <timotimo> rn: proto a($) is pure {*}; multi sub a($ where * < 5) is pure { (state $)++ }; multi sub a($ where * >= 5) is pure { (state $)++ }; say a($_) for ^10

[23:57] <camelia> rakudo b2072f, niecza v24-62-g95dde43: OUTPUT«0␤1␤2␤3␤4␤0␤1␤2␤3␤4␤»

[23:57] <timotimo> that's kind of sad, but expectable.

[23:57] <flussence> (am I misreading the spec? S06:77 says those "multi" words shouldn't be needed there.)

[23:57] <colomon> r: ~dir()[0]

[23:57] <camelia> rakudo b2072f:  ( no output )

[23:57] <colomon> r: say ~dir()[0]

[23:57] <camelia> rakudo b2072f: OUTPUT«star␤»

[23:58] <timotimo> i think if there's a proto, you don't need to write "multi" any more

[23:58] <colomon> r: say dir()[0].perl

[23:58] <camelia> rakudo b2072f: OUTPUT«IO::Path.new(basename => "star", directory => ".", volume => "")␤»

[23:58] <eternaleye> r: proto a( $b ) is pure { ... }; multi a( $b where * < 5 ) { (state $c)++ }; multi a( $b where * >= 5 ) { (state $c)++ }; a( $_ ).say for 5..10;

[23:58] <camelia> rakudo b2072f: OUTPUT«Stub code executed␤  in method gist at src/gen/CORE.setting:10161␤  in method gist at src/gen/CORE.setting:893␤  in sub say at src/gen/CORE.setting:11047␤  in method say at src/gen/CORE.setting:890␤  in method say at src/gen/CORE.setting:889␤  in block  at /tmp/2QJ…

[23:59] <eternaleye> r: proto a( $b ) is pure { ... }; multi a( $b where * < 5 ) is pure { (state $c)++ }; multi a( $b where * >= 5 ) is pure { (state $c)++ }; a( $_ ).say for 5..10;

[23:59] <camelia> rakudo b2072f: OUTPUT«Stub code executed␤  in method gist at src/gen/CORE.setting:10161␤  in method gist at src/gen/CORE.setting:893␤  in sub say at src/gen/CORE.setting:11047␤  in method say at src/gen/CORE.setting:890␤  in method say at src/gen/CORE.setting:889␤  in block  at /tmp/DXt…

[23:59] <eternaleye> r: proto a( $b ) is pure { ... }; multi a( $b where * < 5 ) is pure { (state $c)++ }; multi a( $b where * >= 5 ) is pure { $b }; a( $_ ).say for 5..10;

[23:59] <camelia> rakudo b2072f: OUTPUT«Stub code executed␤  in method gist at src/gen/CORE.setting:10161␤  in method gist at src/gen/CORE.setting:893␤  in sub say at src/gen/CORE.setting:11047␤  in method say at src/gen/CORE.setting:890␤  in method say at src/gen/CORE.setting:889␤  in block  at /tmp/_Gk…

[23:59] <eternaleye> iiinteresting.

[23:59] <eternaleye> r: proto a( $b ) { ... }; multi a( $b where * < 5 ) is pure { (state $c)++ }; multi a( $b where * >= 5 ) is pure { $b }; a( $_ ).say for 5..10;

[23:59] <camelia> rakudo b2072f: OUTPUT«Stub code executed␤  in method gist at src/gen/CORE.setting:10161␤  in method gist at src/gen/CORE.setting:893␤  in sub say at src/gen/CORE.setting:11047␤  in method say at src/gen/CORE.setting:890␤  in method say at src/gen/CORE.setting:889␤  in block  at /tmp/u5B…

