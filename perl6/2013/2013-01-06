[00:03] *** cognominal left
[00:06] <timotimo> d'oh. i forgot the most important part, almost.

[00:10] <dalek> roast: dba0788 | (Solomon Foster)++ | S03-operators/bit.t:

[00:10] <dalek> roast: Bitwise complement on bigint.

[00:10] <dalek> roast: review: https://github.com/perl6/roast/commit/dba0788096

[00:14] *** cognominal joined
[00:19] *** gfldex left
[00:20] *** gfldex joined
[00:21] *** cognominal_ joined
[00:22] *** cognominal left
[00:26] *** bitonic left
[00:31] *** cognominal_ left
[00:36] <felher> good night, #perl6 :)

[00:38] *** spider-mario left
[00:40] *** cognominal_ joined
[00:51] *** PacoAir left
[00:57] *** haxmeister joined
[01:03] *** cognominal joined
[01:04] *** cognominal_ left
[01:07] *** MikeFair left
[01:07] *** hypolin joined
[01:13] *** Ulti left
[01:16] *** haxmeister left
[01:18] *** dayangkun_ is now known as dayangkun

[01:22] *** anuby_ left
[01:26] *** cognominal left
[01:27] *** anuby joined
[01:31] <dalek> niecza: 89e47b6 | (Solomon Foster)++ | lib/Builtins.cs:

[01:31] <dalek> niecza: Make prefix:<+^> support BigIntegers.

[01:31] <dalek> niecza: review: https://github.com/sorear/niecza/commit/89e47b6109

[01:45] *** xinming joined
[02:04] *** cognominal joined
[02:09] *** dayangkun_ joined
[02:12] *** dayangkun left
[02:24] *** Guest58404 left
[02:27] *** FROGGS_ joined
[02:30] *** quester left
[02:30] *** FROGGS left
[02:33] <timotimo> http://youtu.be/3wbVH8AhVbk  -  just going to leave this screencast here for feedback. i might just release this version. i'm more or less satisfied with it.

[02:33] <timotimo> (although i will normalize the sound and reupload it probably)

[02:37] <dalek> nqp: 5f89700 | rurban++ | .gitignore:

[02:37] <dalek> nqp: add MANIFEST.generated to .gitignore

[02:37] <dalek> nqp: 

[02:37] <dalek> nqp: This is generated by parrot > 4.11

[02:37] <dalek> nqp: review: https://github.com/perl6/nqp/commit/5f89700d9c

[02:50] <flussence> r: eval("class foo {} class bar")

[02:50] <p6eval> rakudo a93058: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Unable to parse class definition‚ê§at eval_0:1‚ê§------> [32mclass foo  [33m‚èè[31mclass bar[0m‚ê§    expecting any of:‚ê§        statement list‚ê§        prefix or term‚ê§        prefix or meta-prefix‚ê§        generic role‚ê§¬ª

[02:50] <flussence> r: eval("class foo {} \x[2028] class bar {}")

[02:50] <p6eval> rakudo a93058: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Unable to parse class definition‚ê§at eval_0:1‚ê§------> [32mclass foo  ‚Ä® [33m‚èè[31mclass bar [0m‚ê§    expecting any of:‚ê§        statement list‚ê§        prefix or term‚ê§        prefix or meta-prefix‚ê§        generic role‚ê§¬ª‚Ä¶

[02:50] <timotimo> r: eval("class foo {}‚ê§class bar {}");

[02:50] <p6eval> rakudo a93058: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Unable to parse class definition‚ê§at eval_0:2‚ê§------> [32m<BOL>[33m‚èè[31mclass bar [0m‚ê§    expecting any of:‚ê§        statement list‚ê§        prefix or term‚ê§        prefix or meta-prefix‚ê§        generic role‚ê§¬ª

[02:50] <flussence> .u 2028

[02:50] <phenny> U+2028 LINE SEPARATOR (‚Ä®)

[02:50] <timotimo> oh my.

[02:52] <flussence> r: eval("class foo {...}‚ê§class bar {...}");

[02:52] <p6eval> rakudo a93058: OUTPUT¬´Stub code executed‚ê§current instr.: 'throw' pc 328671 (src/gen/CORE.setting.pir:146858) (src/gen/CORE.setting:9197)‚ê§called from Sub 'sink' pc 358070 (src/gen/CORE.setting.pir:158744) (src/gen/CORE.setting:10354)‚ê§called from Sub 'MAIN' pc 464 (src/gen/perl6.pir:170) ‚Ä¶

[02:52] <flussence> ok, that's better

[02:52] <flussence> r: eval("class foo {...}\x[2028]class bar {...}");

[02:52] <p6eval> rakudo a93058: OUTPUT¬´Stub code executed‚ê§current instr.: 'throw' pc 328671 (src/gen/CORE.setting.pir:146858) (src/gen/CORE.setting:9197)‚ê§called from Sub 'sink' pc 358070 (src/gen/CORE.setting.pir:158744) (src/gen/CORE.setting:10354)‚ê§called from Sub 'MAIN' pc 464 (src/gen/perl6.pir:170) ‚Ä¶

[02:53] <flussence> std: eval("class foo {...}\x[2028]class bar {...}");

[02:53] <p6eval> std a8bc48f: OUTPUT¬´ok 00:00 42m‚ê§¬ª

[02:53] <flussence> n: eval("class foo {...}\x[2028]class bar {...}");

[02:53] <p6eval> niecza v24-16-g89e47b6: OUTPUT¬´Unhandled exception: >>>Stub code executed‚ê§  at /tmp/E7ygJvFSU8 line 1 (mainline @ 5) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4218 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4219 (module-CORE @ 580) ‚ê§  at /home/p6eval/niecza/lib/COR‚Ä¶

[02:57] *** cognominal left
[03:04] *** cognominal joined
[03:11] <timotimo> http://www.youtube.com/watch?v=10p_2yHk5BA - this is the louder version of the screencast. the old one is deleted. would appreciate feedback (other than 'there's a typo in the commit message') :)

[03:12] * diakopter listens/watches

[03:13] * diakopter has huge trouble understanding "heavily" accented English

[03:13] * diakopter is quite deficient in that regard

[03:13] <timotimo> is that heavily accented? :(

[03:14] <diakopter> I don't know; like I said, my perception is very different from most's

[03:15] <diakopter> heh devbeast

[03:15] <timotimo> :)

[03:17] <Juerd> The recording is awful; an accent (German, I think) is clearly present but it'd be easier to understand if the recording were better.

[03:18] <diakopter> the keyboard is loud

[03:18] * diakopter is done whining

[03:18] <timotimo> maybe i should re-record the voiceover, then? try a different microphone at least

[03:19] <Juerd> timotimo: That could certainly help

[03:19] <timotimo> https://twitter.com/loltimo/status/287660427343704064/photo/1 - did quite a bit of blanket-hanging so that the recording would be better

[03:19] <timotimo> but i suppose using the noise-removal filter made it quite a bit worse

[03:19] <Juerd> If that lojban lightning talk is yours, then at least for me, your accent is no problem at all :)

[03:19] <Juerd> diakopter: Can you understand http://www.youtube.com/watch?v=QdlGxgKt7nc ?

[03:19] <diakopter> what does fat-letters() do with non-ascii text

[03:20] <timotimo> yes, it is

[03:20] <timotimo> diakopter: what .trans does with non-supplied stuff. leave it untouched

[03:20] <Juerd> I HATE the "next slide" nonsense in ccc lightning talks!

[03:21] <timotimo> Juerd: i had my smartphone with me and could have used the "pew! pew!" app to get the next slide

[03:21] <Juerd> Also, the LTs are scheduled way too early, when I'm usually still in bed during a ccc congress :P

[03:21] <diakopter> Juerd: yes, more easily

[03:21] <Juerd> timotimo: They should simply use a remote control.

[03:21] <timotimo> yeah, well ...

[03:22] <timotimo> i would *love* to learn how to get my accent neutralised

[03:22] <Juerd> timotimo: Intonation is a big part.

[03:22] <timotimo> fwiw, the guess "german" was correct

[03:23] <timotimo> meaning what part of the word is stressed or the thing chinese has?

[03:23] <timotimo> has as a central feature of the language*

[03:23] <Juerd> Having visited 21c3 .. 29c3, recognising german accents is no challenge anymore :)

[03:23] <timotimo> :D

[03:23] <diakopter> you can listen to UK English and imitate it, then the same words in American English and imitate it, then pick one. :)

[03:24] <timotimo> i'd more likely imitate both at once and create some really uncanny combination

[03:24] <Juerd> timotimo: That's what I do :)

[03:24] <timotimo> anyway, it's already been bedtime for a few hours now. good night!

[03:24] <diakopter> well, the consistency is part of not having an accent

[03:25] <diakopter> o/

[03:25] <Juerd> timotimo: At 0:11 of the LT, you pronounce "conlang" with "lang" in a higher pitch than "con", which sounds unnatural to me. This pattern is present in almost everything you say, and something that's typical of many, but certainly not all, german accents.

[03:27] <timotimo> that's a good hint, thanks!

[03:27] <Juerd> timotimo: And in "computer", in English usually the "o" sounds more like a german "a", not an "o". See also "control" which has a first, then o.

[03:27] <Juerd> These two things are just some examples. Listen to your own lightning talk and try to find samples of the same words elsewhere.

[03:27] <diakopter> computer vowels: but cute bird

[03:28] <Juerd> But only do so if you want to. Your English is fine imho.

[03:28] <Juerd> At the german conferences, much of the denglish I hear is much, much worse :)

[03:29] * Juerd has no idea whether he has a strong accent himself.

[03:29] * diakopter must reemphasize: my accent listening is atrocious

[03:29] * Juerd hates listening to his own voice.

[03:29] <Juerd> diakopter: Does unaccented English even exist? :)

[03:29] <timotimo> i'd love to be the proud owner of a barely noticable german accent

[03:31] <Juerd> As long as you don't say things like "it gives", I guess most people won't even recognise it.

[03:31] *** tokuhiro_ left
[03:32] <timotimo> oh, you think?

[03:32] <Juerd> No, still afloat ;)

[03:33] *** kst joined
[03:33] <Juerd> (Just teasing; your th is good enough :))

[03:33] <skids_> Juerd: A particular American English accent is preferred by television producers.  It's prevalent around where I live (Western MA) and also some areas of CA.

[03:34] <timotimo> yeah, th is kind of the killer

[03:34] <timotimo> it may not be exclusive to the german accent, but almost every non-proficient german english-speaker does it and it drives me crazy

[03:35] <Juerd> timotimo: There was a tv commercial in .nl, featuring a bad german accent: <people on a boat> "We are sinking!" ... <germans> "What are you thinking ABOUT?"

[03:35] <timotimo> oh, yes, that audiobite is also part of a song i'm quite fond of

[03:35] <timotimo> maybe i'll spend a couple bucks on a proper microphone. the ps3 eye cam mics aren't that hot, are they? same goes for my ~7 euro clip-on microphone i bet.

[03:35] <Juerd> So, whenever I run rsync, I keep thinking "What am I syncing ABOUT?!"

[03:36] <Juerd> Which makes no sense.

[03:36] <Juerd> And drives me mad.

[03:36] <Juerd> I'm off to bed now. 4:36 here.

[03:38] *** pmurias left
[03:40] *** cognominal left
[03:46] *** cognominal joined
[03:52] *** cognominal left
[03:57] *** orafu left
[03:59] *** orafu joined
[04:02] *** MikeFair_ joined
[04:45] *** dayangkun_ left
[05:34] *** dayangkun joined
[05:35] *** telex left
[05:36] *** telex joined
[05:50] *** quester joined
[05:58] *** dayangkun left
[06:03] *** JJ_Brain joined
[06:03] *** dayangkun joined
[06:10] *** JJ_Brain left
[06:21] *** slayer101_ joined
[06:22] *** slayer101_ left
[06:38] *** anuby_ joined
[06:40] *** anuby left
[06:41] *** anuby joined
[06:43] *** anuby_ left
[06:51] *** anuby_ joined
[06:54] *** anuby left
[07:04] *** jokar joined
[07:07] *** jokar left
[07:07] *** jokar joined
[07:14] <snarkyboojum> hi guys, what do we have for creating modules a la Dist::Zilla or Module::Starter?

[07:27] *** JJ_Brain joined
[07:32] <snarkyboojum> e.g. is panda going to be extended to create modules as well props?

[07:32] <snarkyboojum> praps*

[07:42] *** kaare_ joined
[08:02] *** GlitchMr joined
[08:03] *** jokar left
[08:03] *** JJ_Brain left
[08:34] *** SamuraiJack joined
[08:43] *** bitonic joined
[08:46] <moritz> \o

[08:55] *** anuby joined
[08:57] *** anuby_ left
[09:04] *** quester left
[09:08] *** MayDaniel joined
[09:16] *** dayangkun left
[09:16] *** quester joined
[09:19] *** MACH8ZN joined
[09:22] *** gaussblurinc joined
[09:36] *** arkydo joined
[09:42] *** Psyche^ joined
[09:46] *** Patterner left
[09:46] *** Psyche^ is now known as Patterner

[09:52] <FROGGS_> phenny: tell flussence that he might try: r: eval("class foo \{...\}\x[2028]class bar \{...\}"); # you need to escape { }

[09:52] <phenny> FROGGS_: I'll pass that on when flussence is around.

[09:52] *** FROGGS_ is now known as FROGGS

[09:53] <FROGGS> morning moritz 

[09:58] <FROGGS> timotimo: I really like it, but you need a better keyboard ;o)

[09:58] *** popl joined
[09:59] <FROGGS> timotimo: what do your neighbours say when you type? # the colors and sound is pretty good, my kid is talking to me in a loop, so will check your talk later

[10:00] <popl> o_O

[10:04] *** hypolin left
[10:06] *** anuby left
[10:08] *** PacoAir joined
[10:32] *** quester left
[10:33] *** wk joined
[10:33] *** wk is now known as Guest72847

[10:38] *** FROGGS_ joined
[10:39] *** dayangkun joined
[10:39] *** FROGGS_ is now known as FROGGS[mobile]

[10:42] <FROGGS[mobile]> whats up popl?

[10:45] *** JJ_Brain joined
[10:47] <popl> FROGGS[mobile]: just hanging out over in #perl

[10:47] *** JJ_Brain left
[11:07] <masak> g'day, #perl6

[11:08] <tadzik> HELLO!

[11:16] <FROGGS[mobile]> hi masak, tadzik

[11:18] <tadzik> HOP in epub format for free!11111

[11:19] <popl> nothing is free, tadzik 

[11:19] <tadzik> no, some things are free

[11:19] <popl> TANSTAAFL

[11:19] <tadzik> a smile is free, for example

[11:20] <popl> Are you calling Robert Heinlein a liar?

[11:20] <popl> ;P

[11:20] <tadzik> . o O ( that'd be free speech ) ;)

[11:20] <masak> tadzik: you *assume* a smile is free...

[11:20] * masak smiles, menacingly

[11:21] <masak> timotimo: nice video.

[11:22] *** popl left
[11:22] <tadzik> video?

[11:22] <masak> timotimo: I have no problem with the accent or the keyboard smatter. I was slightly disappointed that you didn't actually send the pull request at the end. also, two or three avoidable typos/mistakes pulled down the quality slightly.

[11:22] <masak> tadzik: http://www.youtube.com/watch?v=10p_2yHk5BA

[11:23] <tadzik> Pandas! \o/

[11:23] <tadzik> will have to watch that

[11:24] <masak> Juerd: http://www.youtube.com/watch?v=yR0lWICH3rY :)

[11:25] <tadzik> :D:D:D

[11:30] <masak> oh, I didn't know Potion was an influence for CoffeeScript.

[11:40] <masak> I was actually in hoodwink.d for a short while.

[11:40] <masak> the most fun thing I experienced was going to the Wikipedia article for it. it didn't exist.

[11:41] <masak> but at the bottom of the non-existent article were hoodwink.d comments, with people laughing and making jokes :D

[11:41] <masak> that kinda summarizes the whole thing, methinks.

[11:44] <masak> hm, I notice I'm commenting without context. sorry about that. _why's site is back up, in a very weird way: http://news.ycombinator.com/item?id=5015087

[11:47] *** MikeFair_ left
[11:57] *** xenoterracide left
[12:00] *** xenoterracide joined
[12:03] <moritz> is _why's disappearance some deep, shared trauma of the ruby community?

[12:05] <arnsholt> To some extent, I think it might be

[12:05] <arnsholt> I read an article about it a while back

[12:19] <masak> was that the article where they tracked _why down and revealed his identity once and for all, to the tunes of him saying that he just wants to be left alone?

[12:27] *** gaussblurinc left
[12:28] <masak> it left me wondering what went through the journalist's mind at the time.

[12:33] <arnsholt> Yeah, that bit was a bit weird I guess

[12:35] <masak> it was a fine, well-researched article, appropriate as a tribute to _why, oddly ending with "so, I tracked him down".

[12:43] <arnsholt> Actually talking to him was a good ending I think, but dropping all the info on him as well might be a bit unnecessary

[12:44] <arnsholt> Although it was more a confirmation than news to those who had looked into it before it seems

[12:47] <masak> aye.

[12:49] *** Guest72847 left
[12:50] *** cognominal joined
[12:58] *** tokuhiro_ joined
[13:02] *** colomon left
[13:03] <moritz> still, not quite the right spirit to divulge the details, IMHO

[13:04] *** FROGGS[mobile] left
[13:04] *** spider-mario joined
[13:13] <moritz> http://en.wikipedia.org/wiki/Math_Wars # wow, I had no idea this had been such a big topic

[13:13] *** wk joined
[13:14] *** wk is now known as Guest70211

[13:21] *** Guest70211 left
[13:24] <masak> unrelated to the "new math" that Tom Lehrer is singing about, I assume.

[13:24] <masak> this seems to have been later than that.

[13:24] <felher> timotimo++ # nice video :)

[13:24] *** tokuhiro_ left
[13:35] *** arkydo left
[13:36] *** cognominal_ joined
[13:36] <snarkyboojum> the subject matter of the 'Maths Wars' debate reminds me of a beautiful essay I read some time ago - http://www.maa.org/devlin/lockhartslament.pdf

[13:36] *** cognominal left
[13:39] <masak> now why does that sound familiar? oh yes: http://www.scottaaronson.com/blog/?p=410

[13:40] *** pmurias joined
[13:55] *** MayDaniel left
[13:56] <timotimo> hum

[13:56] <timotimo> now what am i supposed to think/do. re-record the audio, re-do the video and audio? :|

[13:57] *** daniel-s left
[13:59] *** cognominal_ left
[14:10] <timotimo> FROGGS: also, my keyboard is *excellent*, thank you very much :P

[14:16] <masak> I don't believe that's what he was asking.

[14:16] <masak> he was asking what the neighbors think when you type :)

[14:17] <masak> (I am the proud owner of a model M keyboard, by the way. I'm glad I held onto it. it truly is a joy to type on.)

[14:17] <timotimo> this is a Das Keyboard, so it's similar enough

[14:17] <FROGGS> timotimo: :o)

[14:17] <timotimo> i'm not sure my neighbours actually hear it

[14:17] <FROGGS> wow

[14:17] <FROGGS> (Das Keyboard)++

[14:17] <timotimo> but for the next time i record a screencast, i'll retrieve that external thinkpad usb keyboard i've deposited at a friend's

[14:18] <FROGGS> 1800 euros, right?

[14:18] <timotimo> er, no?!

[14:18] <timotimo> that would be the optimus maximus

[14:18] <FROGGS> ahh, k

[14:18] <timotimo> i'm not that crazy :)

[14:18] <timotimo> although i'm currently considering spending a hundred euros on a microphone and related, necessary doodads

[14:20] <moritz> masak: the math wars started indeed with the "new math" thing

[14:20] <moritz> though "new math" became old pretty quickly, and the "reformed math" was basically a reaction to the new math

[14:21] *** nyuszika7h left
[14:21] <timotimo> i should only spend money on recording equipment if my voice is pleasant enough so that i could consider making lots of screencasts and stuff. would that be the case?

[14:22] <FROGGS> timotimo: I think so, yes

[14:22] *** cognominal joined
[14:23] <masak> moritz: if I would guess, the fundamental problem is that kids typically hate math and don't see the point of it. Russia and much of Asia seem to be exceptions for some reason, but it holds true for Europe and the US.

[14:25] <masak> as for me, I'm not sure if I enjoyed math because I saw the point of it early, or vice versa. early memories seem to point to the enjoyment being there first :)

[14:25] <moritz> same here

[14:26] *** nyuszika7h joined
[14:26] <masak> after learning how to do addition on paper, I liked to sit down with a sheet of graph paper, write "1" in the top right corner, then "2" below it, and keep doubling as I ran out of paper.

[14:26] <masak> s/ as / until /

[14:27] <masak> I don't know what I found so fascinating about it. but it did give me an early familiarity with the powers of two.

[14:28] <masak> I also observed -- long before I learned anything about logarithms -- that sometimes it would take 3 lines until one got a new digit, sometimes it would take 4. but always 3 *or* 4.

[14:28] <timotimo> mathematical "doodle games" like that and the ones vi hart is popularising should be a great way to make math fun for kids, although most of the doodle games vi does are rather for advanced students

[14:29] <masak> r: say log(10)/log(2)

[14:29] <p6eval> rakudo a93058: OUTPUT¬´3.32192809488736‚ê§¬ª

[14:29] <masak> I also liked to think about the cycles that always happened in the far-right column.

[14:30] <masak> r: say 1, { ($_ * 2) % 10 } ... *

[14:30] <p6eval> rakudo a93058: OUTPUT¬´1 2 4 8 ...‚ê§¬ª

[14:30] <masak> heh.

[14:30] <masak> r: say (1, { ($_ * 2) % 10 } ... *)[^20]

[14:30] <p6eval> rakudo a93058: OUTPUT¬´1 2 4 8 6 2 4 8 6 2 4 8 6 2 4 8 6 2 4 8‚ê§¬ª

[14:30] <masak> r: say (3, { ($_ * 2) % 10 } ... *)[^20]

[14:30] <p6eval> rakudo a93058: OUTPUT¬´3 6 2 4 8 6 2 4 8 6 2 4 8 6 2 4 8 6 2 4‚ê§¬ª

[14:30] <masak> you can start at any digit (except 5 or 0) and you will get this cycle.

[14:31] <masak> I found that intriguing.

[14:32] <masak> oh, and I soon learned that I could do the addition left-to-right, if only I kept on the lookout for carries.

[14:40] <timotimo> masak: do you think you had a predisposition for finding those patterns interesting? or could any kid have been fascinated in a similar way?

[14:41] *** Chillance left
[14:41] <masak> I have no insights into nature-vs-nurture, unfortunately. I think it's a complex interplay of predisposition and environment.

[14:44] <moritz> decimal fractions also have interesting properties regarding the length of the cycle

[14:44] <moritz> in particular, the cycle can't ever be longer than the denominator

[14:44] <moritz> because there can only by remainders that are smaller than the denominator

[14:45] <masak> for example, 2**10 == 1048576. if I do the doubling without carries, it comes out as 2086042, and I can do that left-to-right. but then I know the '8604' digits all require a carry, becoming '9715'. so the final result is '2097152'. but I can do it all left-to-right.

[14:45] <masak> (with some lookahead)

[14:46] * masak tries to capture this in an algorithm

[14:55] <masak> here: https://gist.github.com/4467722 :)

[14:56] <masak> I wrote it first as an algorithm that pops the last element of the array, adds one and puts it back.

[14:56] <masak> then I refactored it into an algorithm that uses $last :)

[14:56] <masak> interesting exercise.

[14:57] <masak> speaking of which: people, send in your p6cc solutions! I'm getting some, but not enough. :) don't wait until the very last moment.

[14:57] <moritz> I'd send in more solutions if I had more :-)

[15:04] <moritz> r: https://gist.github.com/4467722

[15:04] <p6eval> rakudo a93058: OUTPUT¬´ok 1 - ‚ê§ok 2 - ‚ê§ok 3 - ‚ê§¬ª

[15:06] <masak> I realize I should have had one more test case: is double(7), 14;

[15:06] <masak> anyway, the code would pass that one, too.

[15:07] <masak> thanks to the post-increment on line 10 turning an Any value into 0 before incrementing.

[15:10] *** sftp left
[15:12] *** sftp joined
[15:31] <timotimo> r: class A { has $.attr is rw; }; class B { has A $!foo handles <attr>; }; my $inst = B.new(); $inst.attr = "hello world"; say $inst.attr;

[15:31] <p6eval> rakudo a93058: OUTPUT¬´Cannot look up attributes in a type object‚ê§  in method attr at src/gen/CORE.setting:1791‚ê§  in method attr at src/gen/CORE.setting:267‚ê§  in block  at /tmp/td7yoZUU_q:1‚ê§‚ê§¬ª

[15:31] <timotimo> oh, right

[15:32] <timotimo> r: class A { has $.attr is rw; }; class B { has A $!foo handles <attr>; method new() { $!foo = A.new; }; }; my $inst = B.new(); $inst.attr = "hello world"; say $inst.attr;

[15:32] <p6eval> rakudo a93058: OUTPUT¬´Cannot look up attributes in a type object‚ê§  in method new at /tmp/MoVaNwVRXJ:1‚ê§  in block  at /tmp/MoVaNwVRXJ:1‚ê§‚ê§¬ª

[15:32] <timotimo> er, huh?

[15:32] <timotimo> std: class A { has $.attr is rw; }; class B { has A $!foo handles <attr>; method new() { $!foo = A.new; }; }; my $inst = B.new(); $inst.attr = "hello world"; say $inst.attr;

[15:32] <p6eval> std a8bc48f: OUTPUT¬´ok 00:00 46m‚ê§¬ª

[15:33] <timotimo> oh, did i forget to bless in new()?

[15:33] <timotimo> std: class A { has $.attr is rw; }; class B { has A $!foo handles <attr>; submethod BUILD() { $!foo = A.new; }; }; my $inst = B.new(); $inst.attr = "hello world"; say $inst.attr;

[15:33] <p6eval> std a8bc48f: OUTPUT¬´ok 00:00 46m‚ê§¬ª

[15:33] <timotimo> r: class A { has $.attr is rw; }; class B { has A $!foo handles <attr>; submethod BUILD() { $!foo = A.new; }; }; my $inst = B.new(); $inst.attr = "hello world"; say $inst.attr;

[15:33] <p6eval> rakudo a93058: OUTPUT¬´hello world‚ê§¬ª

[15:33] <timotimo> yay

[15:33] <timotimo> that's pretty cool

[15:38] *** cognominal left
[15:43] *** spider-mario left
[16:00] *** arkydo joined
[16:07] *** SamuraiJack_ joined
[16:08] *** SamuraiJack left
[16:09] <moritz> r: my &a := * % 10;

[16:09] <p6eval> rakudo a93058:  ( no output )

[16:17] <masak> r: my &a := * / 10; say a a a 42_000

[16:17] <p6eval> rakudo a93058: OUTPUT¬´42‚ê§¬ª

[16:18] <masak> r: my &a := 'a' ~ *; say a a a a a a 'rgh!'

[16:18] <p6eval> rakudo a93058: OUTPUT¬´aaaaaargh!‚ê§¬ª

[16:18] *** pmurias left
[16:18] <moritz> r: say map * % 10, '7654'.comb Z+ '8230'.comb

[16:18] <p6eval> rakudo a93058: OUTPUT¬´Cannot call 'map'; none of these signatures match:‚ê§:(&code, *@values)‚ê§‚ê§  in block  at /tmp/QYwXgmvjB7:1‚ê§‚ê§¬ª

[16:18] <moritz> what's wrong here?

[16:18] <masak> precedence.

[16:18] <moritz> oh

[16:18] <moritz> r: say map * % 10, ('7654'.comb Z+ '8230'.comb)

[16:18] <p6eval> rakudo a93058: OUTPUT¬´5 8 8 4‚ê§¬ª

[16:18] <masak> just so.

[16:19] <moritz> masak++

[16:20] <masak> in an arm-wrestling match between a listop and a zip operator, the zip operator wins (binds the loosest). this is often surprising.

[16:20] <masak> hm, no. it's not the listop so much as the list `* % 10, '7654'.comb`

[16:23] <timotimo> ooh, so *that* is how that works!

[16:23] <masak> yeah.

[16:24] <masak> it's one of those "can't win" precedences. even the same user will expect both variants at different times.

[16:24] <masak> this feels perfectly natural, for example:

[16:24] <masak> rn: .say for 1, 2, 3, 4 Z+ 50, 60, 70, 80

[16:24] <p6eval> rakudo a93058, niecza v24-16-g89e47b6: OUTPUT¬´51‚ê§62‚ê§73‚ê§84‚ê§¬ª

[16:24] <masak> we *don't* expect just 4 and 50 to be added there, and the other six elements to be silently thrown out.

[16:25] <masak> well, the same argument causes '* % 10' to be gobbled up by Z+ above.

[16:26] <timotimo> yes, indeed.

[16:27] <timotimo> can i do debug-prints from inside the nqp source of rakudo in any sensible way?

[16:28] *** yakshavr left
[16:28] <timotimo> (in Actions.pm for instance)

[16:29] <masak> nqp: say("lol I am a debug statement!")

[16:29] <p6eval> nqp: OUTPUT¬´lol I am a debug statement!‚ê§¬ª

[16:29] *** yakshavr joined
[16:31] <timotimo> oh? that's surprisingly easy

[16:31] <timotimo> nqp: say "lol, do i need parens?";

[16:31] <p6eval> nqp: OUTPUT¬´Confused at line 2, near "say \"lol, "‚ê§current instr.: 'panic' pc 13231 (src/stage2/gen/NQPHLL.pir:4687) (src/stage2/gen/NQPHLL.pm:328)‚ê§¬ª

[16:31] <timotimo> fair enough

[16:32] <timotimo> nqp: my $a := 10; say($a.WHAT);

[16:32] <p6eval> nqp: OUTPUT¬´Can only use get_what on a SixModelObject‚ê§current instr.: '' pc 53 ((file unknown):43) (/tmp/IblgbcqxXn:1)‚ê§¬ª

[16:32] <timotimo> if i'm not sure what type something is, how would i get it print'd?

[16:32] <timotimo> nqp: my $a := 10; say($a.perl);

[16:32] <p6eval> nqp: OUTPUT¬´Method 'perl' not found for invocant of class 'Integer'‚ê§current instr.: '' pc 59 ((file unknown):43) (/tmp/4E4LK31kZO:1)‚ê§¬ª

[16:32] <timotimo> nqp: my $a := 10; say($a.gist);

[16:32] <p6eval> nqp: OUTPUT¬´Method 'gist' not found for invocant of class 'Integer'‚ê§current instr.: '' pc 59 ((file unknown):43) (/tmp/17VBXiznOo:1)‚ê§¬ª

[16:33] <timotimo> hah, that should do it :P

[16:41] *** Moukeddar joined
[16:42] *** Moukeddar left
[16:43] *** Moukeddar joined
[16:43] *** Moukeddar left
[16:45] <masak> Mouk...edd...! \o/...

[17:04] *** ismail_ joined
[17:14] *** ismail_ left
[17:21] *** MayDaniel joined
[17:42] *** wk joined
[17:43] *** wk is now known as Guest78034

[17:44] *** darkwolf joined
[17:45] <darkwolf> hi #perl6

[17:45] <darkwolf> r: my int $a

[17:45] <p6eval> rakudo a93058:  ( no output )

[17:46] <darkwolf> r: my int $a =5; say $a

[17:46] <p6eval> rakudo a93058: OUTPUT¬´5‚ê§¬ª

[17:46] <darkwolf> works

[17:47] <diakopter> :)

[17:47] <masak> hi, darkwolf.

[17:47] <darkwolf> it seems this bug is only in archlinux/rakudo version

[17:47] <darkwolf> hi masak 

[17:48] <masak> darkwolf: "this bug"? could you nopaste what you get?

[17:48] <masak> including 'perl6 -v' output.

[17:48] <darkwolf> ok I'll try

[17:48] <moritz> darkwolf: are you using the interactive shell?

[17:49] <darkwolf> yes

[17:49] <moritz> that's know not to like native types

[17:49] <darkwolf> it was in repl

[17:49] *** am0c left
[17:49] <moritz> right, that's a known bug

[17:49] <masak> oh, the REPLs the differing factor.

[17:49] <darkwolf> so it was known bug then

[17:49] <masak> REPL's*

[17:49] <darkwolf> like unicode :(

[17:50] <timotimo> trying to understand the require ::($foo) thing again, kind of not really getting it so far :|

[17:50] <darkwolf> thanks, masak

[17:50] <masak> darkwolf: Unicode -- that could be your terminal, though.

[17:51] <darkwolf> last time I cheked repl printed giberish when I tried to print unicode

[17:51] <darkwolf> Is that fixed

[17:52] <timotimo> hm, token longname has a {} inside. what does that do? it's an empty closure/block/code?

[17:52] <darkwolf> –≤–æ—Ä–∫—Å

[17:52] <darkwolf> ops

[17:52] <darkwolf> works

[17:52] <darkwolf> wrong keymap

[17:52] <darkwolf> :)

[17:53] <moritz> timotimo: I have a partial patch locally

[17:53] <moritz> timotimo: spectesting that now

[17:53] <timotimo> oh. well, of course you could do it, too ..

[17:53] <moritz> timotimo: the {} is an empty block that limits LTM

[17:53] <timotimo> limit in what way?

[17:53] <moritz> timotimo: I wanted to leave it to you, but it didn't let me rest :-)

[17:54] <moritz> limit what the "longest" in "longest token" refers to

[17:54] <timotimo> mhm

[17:54] <timotimo> as long as you are willing to answer my questions about your patch, it's okay

[17:54] <tadzik> hrm, timotimo 

[17:54] <tadzik> in your video, 0:15-0:20 or so, why is the scrollbar not moving? :)

[17:54] <timotimo> tadzik: i have no idea tbh

[17:55] <tadzik> . o O ( Lies! )

[17:57] <timotimo> moritz: can i have a look at the patch even if it's not 100% spectested yet?

[18:00] <masak> darkwolf: "–≤–æ—Ä–∫—Å" -- wrong keymap, and even then a typo. it's "works", not "vorks" :P

[18:00] <tadzik> the video convinces me again that no one has ever written META.info from scratch :P

[18:00] <timotimo> :D

[18:01] <darkwolf> in Bulgarian phonetic keymap "–≤" is on "w"

[18:01] <darkwolf> :)

[18:01] <masak> oh!

[18:01] <masak> TIL

[18:01] <darkwolf> that's why

[18:01] <masak> tadzik: it's META.info copies all the way down! :)

[18:01] <masak> darkwolf: what's on "v"?

[18:01] <darkwolf> –∂

[18:02] <masak> no –∂ay!

[18:02] <masak> that's just... –∂eird.

[18:02] <darkwolf> I know

[18:02] <masak> clearly –∂ should be on the "zh" key :P

[18:03] <darkwolf> It must be near "any" key

[18:03] <darkwolf> ;)

[18:03] * tadzik wonders if Module::Starter is still useful

[18:04] <timotimo> the only thing it should do is grab a random META.info from github :P

[18:06] *** grondilu joined
[18:07] <grondilu> rn: say [R**] 2 .. 4

[18:07] <phenny> grondilu: 03 Jan 21:50Z <masak> tell grondilu that I think http://rosettacode.org/mw/index.php?title=Average_loop_length&diff=149562&oldid=149561 made a mathematical-looking expression much less easy to understand :/

[18:07] <p6eval> rakudo a93058, niecza v24-16-g89e47b6: OUTPUT¬´4096‚ê§¬ª

[18:07] <phenny> grondilu: 03 Jan 21:53Z <masak> tell grondilu also, I can't reproduce the bug you seem to be compensating for in http://rosettacode.org/mw/index.php?title=Average_loop_length&diff=149566&oldid=149562 -- old rakudo?

[18:11] <tadzik> timotimo: awesome screencast!

[18:11] <timotimo> you think? thanks!

[18:11] <timotimo> i got quite diverse opinions ;)

[18:11] <tadzik> yeah, I liked it a lot

[18:12] <tadzik> I'm amazed every time panda works for someone :P

[18:12] <timotimo> \o/

[18:12] <tadzik> are you planning to do more of those?

[18:14] <grondilu> rn: for ^2 { FIRST { .say for <foo bar> }; .say }

[18:14] <p6eval> niecza v24-16-g89e47b6: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Action method statement_prefix:FIRST not yet implemented at /tmp/1abxGTuWcL line 1:‚ê§------> [32mfor ^2 { FIRST { .say for <foo bar> }[33m‚èè[31m; .say }[0m‚ê§‚ê§Unhandled exception: Unable to resolve method statement_level in ‚Ä¶

[18:14] <p6eval> ..rakudo a93058: OUTPUT¬´0‚ê§1‚ê§¬ª

[18:14] * masak submits rakudobug

[18:15] <masak> grondilu++

[18:15] *** groky left
[18:15] <masak> I'm running 2012.11-95-g8a1836b locally, and it works there.

[18:15] <masak> so it's a relatively new regression.

[18:16] * masak was the one with the old rakudo, it turns out :)

[18:16] <grondilu> :)

[18:16] <timotimo> tadzik: yes, i'd love to. i just ordered a less crappy microphone

[18:16] *** groky joined
[18:18] *** arkydo is now known as putau

[18:18] * flussence < /dev/backlog

[18:18] <phenny> flussence: 09:52Z <FROGGS_> tell flussence that he might try: r: eval("class foo \{...\}\x[2028]class bar \{...\}"); # you need to escape { }

[18:18] <flussence> hm

[18:19] <flussence> rn: eval("class foo \{...\} \x[2028] class bar \{...\}");

[18:19] <p6eval> niecza v24-16-g89e47b6: OUTPUT¬´Unhandled exception: Package was stubbed but not defined‚ê§  at /home/p6eval/niecza/boot/lib/CORE.setting line 1443 (die @ 5) ‚ê§  at /home/p6eval/niecza/src/STD.pm6 line 5633 (STD.sorry @ 7) ‚ê§  at /home/p6eval/niecza/src/STD.pm6 line 5416 (STD.explain_mystery‚Ä¶

[18:19] <p6eval> ..rakudo a93058: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Two terms in a row‚ê§at eval_0:1‚ê§------> [32mclass foo {...} ‚Ä® [33m‚èè[31mclass bar {...}[0m‚ê§    expecting any of:‚ê§        argument list‚ê§        postfix‚ê§        infix or meta-infix‚ê§        infix stopper‚ê§        statement end‚ê§        s‚Ä¶

[18:20] <timotimo> tadzik: feel free to suggest topics ;)

[18:20] <flussence> rn: eval("class foo \{ has $.a; \} \x[2028] class bar \{ has $.b; \}");

[18:20] <p6eval> rakudo a93058: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Variable $.a used where no 'self' is available‚ê§at /tmp/t1IvKYRqSo:1‚ê§------> [32meval("class foo \{ has $.a[33m‚èè[31m; \} \x[2028] class bar \{ has $.b; \}")[0m‚ê§    expecting any of:‚ê§        argument list‚ê§        prefix or term‚ê§    ‚Ä¶

[18:20] <p6eval> ..niecza v24-16-g89e47b6: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Variable $.a used where no 'self' is available at /tmp/22UqaL08sB line 1:‚ê§------> [32meval("class foo \{ has [33m‚èè[31m$.a; \} \x[2028] class bar \{ has $.b; \[0m‚ê§‚ê§Variable $.b used where no 'self' is available at /tmp/22‚Ä¶

[18:20] <flussence> rn: eval("class foo \{ has $a; \} \x[2028] class bar \{ has $b; \}");

[18:20] <p6eval> niecza v24-16-g89e47b6: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Variable $a is not predeclared at /tmp/wGNo2HxtTy line 1:‚ê§------> [32meval("class foo \{ has [33m‚èè[31m$a; \} \x[2028] class bar \{ has $b; \}"[0m‚ê§‚ê§Variable $b is not predeclared at /tmp/wGNo2HxtTy line 1:‚ê§------> [32m\{‚Ä¶

[18:20] <p6eval> ..rakudo a93058: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Variable $a is not declared‚ê§at /tmp/PuFV0Sc6AD:1‚ê§------> [32meval("class foo \{ has $a[33m‚èè[31m; \} \x[2028] class bar \{ has $b; \}");[0m‚ê§    expecting any of:‚ê§        postfix‚ê§¬ª

[18:20] <flussence> argh

[18:20] <tadzik> timotimo: ha, I was curious if you have any ideas :)

[18:20] <masak> r: for ^2 { FIRST { say "hah!" }; .say }

[18:20] <p6eval> rakudo a93058: OUTPUT¬´hah!‚ê§0‚ê§1‚ê§¬ª

[18:21] <timotimo> "how to implement simple things into rakudo" :P

[18:21] <masak> r: for ^2 { FIRST { .say for 4 }; .say }

[18:21] <p6eval> rakudo a93058: OUTPUT¬´0‚ê§1‚ê§¬ª

[18:21] <masak> r: for ^2 { LAST { .say for 4 }; .say }

[18:21] <p6eval> rakudo a93058: OUTPUT¬´0‚ê§1‚ê§¬ª

[18:21] <masak> r: for ^2 { LAST { say "hah!" }; .say }

[18:21] <p6eval> rakudo a93058: OUTPUT¬´0‚ê§1‚ê§hah!‚ê§¬ª

[18:21] <masak> r: for ^2 { ENTER { .say for 4 }; .say }

[18:21] <p6eval> rakudo a93058: OUTPUT¬´0‚ê§1‚ê§¬ª

[18:22] <masak> r: for ^2 { LEAVE { .say for 4 }; .say }

[18:22] <p6eval> rakudo a93058: OUTPUT¬´0‚ê§1‚ê§¬ª

[18:22] <flussence> std: class foo { has $!a } #ok, let me start from the basics...

[18:22] <p6eval> std a8bc48f: OUTPUT¬´ok 00:00 43m‚ê§¬ª

[18:22] <flussence> rn: eval("class foo \{ has \$!a; \} \x[2028] class bar \{ has \$!b; \}");

[18:22] <p6eval> rakudo a93058: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Two terms in a row‚ê§at eval_0:1‚ê§------> [32mclass foo { has $!a; } ‚Ä® [33m‚èè[31mclass bar { has $!b; }[0m‚ê§    expecting any of:‚ê§        scoped declarator‚ê§        constraint‚ê§        postfix‚ê§        infix or meta-infix‚ê§        infix st‚Ä¶

[18:22] <p6eval> ..niecza v24-16-g89e47b6:  ( no output )

[18:22] <flussence> there we go

[18:22] <flussence> unicode newlines: should they be allowed as source code newlines or not?

[18:23] <masak> r: for ^2 { FIRST { say "oh!" for 4 }; .say }

[18:23] <p6eval> rakudo a93058: OUTPUT¬´0‚ê§1‚ê§¬ª

[18:23] <flussence> (also, what's the q adverb for interpolating \x but nothing else?)

[18:25] <flussence> r: say q:b/ $a $b {foo} \x[2028] /

[18:25] <p6eval> rakudo a93058: OUTPUT¬´ $a $b {foo} ‚Ä® ‚ê§¬ª

[18:30] <dalek> rakudo/nom: 60c572c | moritz++ | src/Perl6/ (2 files):

[18:30] <dalek> rakudo/nom: crude implementation of "require ::($modulename) <importlist>

[18:30] <dalek> rakudo/nom: 

[18:30] <dalek> rakudo/nom: only works for a single chunk, e.g. "require Test::($name) <&symbols>" does not work

[18:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/60c572c3f5

[18:39] *** snearch joined
[18:51] <FROGGS> rn: eval('class foo {...}; class bar {...}');

[18:51] <p6eval> rakudo a93058: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§The following packages were stubbed but not defined:‚ê§    foo‚ê§    bar‚ê§at eval_0:1‚ê§------> [32mclass foo {...}; class bar {...}[33m‚èè[31m<EOL>[0m‚ê§    expecting any of:‚ê§        argument list‚ê§        postfix‚ê§        infix or meta-infix‚Ä¶

[18:51] <p6eval> ..niecza v24-16-g89e47b6: OUTPUT¬´Unhandled exception: Package was stubbed but not defined‚ê§  at /home/p6eval/niecza/boot/lib/CORE.setting line 1443 (die @ 5) ‚ê§  at /home/p6eval/niecza/src/STD.pm6 line 5633 (STD.sorry @ 7) ‚ê§  at /home/p6eval/niecza/src/STD.pm6 line 5416 (STD.explain_mystery‚Ä¶

[18:51] <FROGGS> flussence: why not with semicolon and single quotes?

[18:51] *** ismail_ joined
[18:52] <flussence> I was testing how it handled the line break in the middle.

[18:52] <FROGGS> ahh, k

[18:54] <grondilu>  /away

[18:59] <darkwolf> panda is not working for me :(

[18:59] *** mtk left
[19:03] <masak> darkwolf: any chance you can paste the output at https://gist.github.com/ ? makes it easier to diagnose.

[19:07] <darkwolf> http://paste.perldancer.org/32DjAXhHmrawh

[19:07] <darkwolf> is that ok

[19:08] <darkwolf> ?

[19:08] <FROGGS> darkwolf: what command did you invoke?

[19:08] <FROGGS> your paste is a bit short

[19:08] <moritz> and did you install panda yourself? or did you the panda that came with a rakudo Star installation?

[19:09] <moritz> and what version of rakudo are you using?

[19:09] <darkwolf> panda install NativeCall

[19:09] <darkwolf> I built it myself

[19:09] <darkwolf> from the github repository

[19:10] <darkwolf> as a common user

[19:10] <moritz> what, rakudo? or panda?

[19:11] <darkwolf> rakudo

[19:11] <darkwolf> oops

[19:11] <darkwolf> panda

[19:11] <moritz> so, what's your rakudo version?

[19:11] <darkwolf> rakudo is from archlinux/rakudo repository

[19:11] <moritz> and whats its version?

[19:11] <darkwolf> 2012.12

[19:11] <moritz> that should be new enough

[19:12] <darkwolf> on parrot 4.11.0

[19:12] <moritz> and then in panda, you ran   perl6 bootstrap.pl ?

[19:12] <darkwolf> yes

[19:13] <moritz> hrmpf

[19:13] <moritz> and what does   which panda   say?

[19:13] <flussence> FWIW this looks like exactly the same problem I've been having (someone mentioned it was a precomp bug)

[19:14] <japhb> I get that one on a semi-regular basis as well.  The number changes, BTW.

[19:14] <japhb> And I suspect pre-comp as well, but I've not proven it.

[19:14] <darkwolf> prove tests fail after instalation too

[19:15] <moritz> well, that error is basically always related to precomp

[19:15] <moritz> if you get, please try to run it with the env variable RAKUDO_MODULE_DEBUG=1  set

[19:15] <japhb> My script to build a new rakudo and reinstall panda modules is starting to have several "salt the earth" steps ...

[19:16] <moritz> well, you should remove the old %*CUSTOM_LIB<site> dir

[19:16] *** snearch left
[19:16] <japhb> moritz, IIRC that wasn't enough.  I also had to 

[19:17] <japhb> git clean -dXf in panda's checkout or somesuch

[19:17] * japhb goes and looks on the computer with the latest variant

[19:17] <flussence> I've gotten panda to run by blowing away all its installed *.pir files, but that doesn't solve trying to install other packages using it

[19:19] <japhb> Oh, there was also the problem at one point that I suspected was the result of bash caching the location of the panda bin when I built a new rakudo that used a new parrot that had a new lib path

[19:20] * japhb has found this whole process losing -Ofun in the iteration

[19:21] *** GlitchMr left
[19:21] *** GlitchMr joined
[19:26] <darkwolf> http://paste.perldancer.org/afOH4TcII9qq

[19:27] <darkwolf> this is debug output

[19:27] <darkwolf> from panda when it fails

[19:29] <masak> ooh, RAKUDO_MODULE_DEBUG=1

[19:29] <darkwolf> yes

[19:31] <masak> added by moritz++ on 2012-06-05. and I didn't learn about it until today...

[19:33] <flussence> env vars like that should be listed in the manpage, or *somewhere* people might look for them

[19:36] *** GlitchMr left
[19:36] *** GlitchMr joined
[19:39] *** nebuchadnezzar joined
[19:40] <darkwolf> flussence++

[19:42] <darkwolf> that might help much

[19:42] * masak submits rakudobug

[19:50] *** SamuraiJack_ left
[19:55] *** thou joined
[20:00] *** GlitchMr left
[20:09] <flussence> this might help: http://bpaste.net/show/68597/

[20:10] <moritz> flussence++

[20:11] <flussence> (there's also one in Test.pm, but I don't think that counts)

[20:12] <FROGGS> r: my @a = <a b c>; say @a.grep('b')[0] = ''; say @a

[20:12] <p6eval> rakudo 60c572: OUTPUT¬´‚ê§a  c‚ê§¬ª

[20:12] <FROGGS> how do I delete an element that was found by grep?

[20:12] <moritz> FROGGS: you don't

[20:12] <FROGGS> meh

[20:12] * FROGGS is sad

[20:12] <moritz> FROGGS: you say @a.=grep($inverted_condition)

[20:13] <FROGGS> ahh

[20:13] <masak> FROGGS: if you plan to do this a lot, maybe define a &discard subroutine in your program.

[20:13] <FROGGS> r: my @a = <a b c>; @a.=grep(/<-[b]>/); say @a

[20:13] <p6eval> rakudo 60c572: OUTPUT¬´a c‚ê§¬ª

[20:14] <FROGGS> no, only once

[20:14] <dalek> rakudo/nom: e67fa90 | moritz++ | docs/running.pod:

[20:14] <dalek> rakudo/nom: document environment variables

[20:14] <dalek> rakudo/nom: 

[20:14] <dalek> rakudo/nom: patch by flussence++

[20:14] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e67fa9085a

[20:14] <FROGGS> moritz: thanks!

[20:14] <moritz> r: my @a = <a b c>; @a.=grep(* ne 'b'); say @

[20:14] <p6eval> rakudo 60c572: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Non-declarative sigil is missing its name‚ê§at /tmp/KLcH5YJQdC:1‚ê§------> [32m @a = <a b c>; @a.=grep(* ne 'b'); say @[33m‚èè[31m<EOL>[0m‚ê§    expecting any of:‚ê§        argument list‚ê§        prefix or term‚ê§        prefix or meta-prefix‚ê§‚Ä¶

[20:14] <moritz> r: my @a = <a b c>; @a.=grep(* ne 'b'); say @a

[20:14] <p6eval> rakudo 60c572: OUTPUT¬´a c‚ê§¬ª

[20:14] <masak> r: my @a = <a b c>; @a.=grep(none /<[b]>/); say @a

[20:14] <p6eval> rakudo 60c572: OUTPUT¬´a c‚ê§¬ª

[20:15] <moritz> r: my @a = <a b c>; @a.=grep(none 'b'); say @a

[20:15] <p6eval> rakudo 60c572: OUTPUT¬´a c‚ê§¬ª

[20:15] * masak and moritz are so full of good ideas :P

[20:15] <FROGGS> ohh, I like that one

[20:15] *** GlitchMr joined
[20:15] <FROGGS> (the last one)

[20:15] <flussence> rn: my @a = <a b c>; @a.splice: @a.pairs.first(*.value eq 'b').key, 1; say @a

[20:15] <p6eval> rakudo 60c572, niecza v24-16-g89e47b6: OUTPUT¬´a c‚ê§¬ª

[20:15] <FROGGS> n: my @a = <a b c>; @a.=grep(none 'b'); say @a

[20:15] *** GlitchMr left
[20:15] <p6eval> niecza v24-16-g89e47b6: OUTPUT¬´a c‚ê§¬ª

[20:16] <flussence> that's the "modify in place" version

[20:16] <FROGGS> cool

[20:20] *** pmurias joined
[20:24] <dalek> rakudo-js: b8af9a6 | (Pawe≈Ç Murias)++ | src/QAST/Compiler/JavaScript.nqp:

[20:24] <dalek> rakudo-js: remove a dead method

[20:24] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/b8af9a675c

[20:24] <dalek> rakudo-js: 3368ffa | (Pawe≈Ç Murias)++ | bin/compile-setting.nqp:

[20:24] <dalek> rakudo-js: remove debugging statement

[20:24] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/3368ffa191

[20:24] <dalek> rakudo-js: 5c3ec6a | (Pawe≈Ç Murias)++ | / (5 files):

[20:24] <dalek> rakudo-js: serialize method caches, more test pass

[20:24] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/5c3ec6af92

[20:33] <moritz> r: say do for 1 { FIRST 42 }

[20:33] <p6eval> rakudo 60c572: OUTPUT¬´‚ê§¬ª

[20:33] <moritz> r: say CHECK 42

[20:33] <p6eval> rakudo 60c572: OUTPUT¬´42‚ê§¬ª

[20:33] <moritz> r: say FIRST 42

[20:33] <p6eval> rakudo 60c572: OUTPUT¬´Nil‚ê§¬ª

[20:33] <moritz> r: say LEAVE 42

[20:33] <p6eval> rakudo 60c572:  ( no output )

[20:35] <masak> 'say FIRST 42' would be Nil.

[20:36] <masak> but I would expect 'say LEAVE 42' to be something similar.

[20:36] <masak> r: say LEAVE 42; say "alive"

[20:36] <p6eval> rakudo 60c572:  ( no output )

[20:36] <masak> there's something rotten in the state of phasers.

[20:38] *** GlitchMr joined
[20:38] <FROGGS> yay, my grammar works somehow \o/

[20:38] <sorear> what did you expect?  we haven't even had a #phasers for months.

[20:39] <masak> sorear: that is a sad state of affairs, too.

[20:40] <masak> I, for one, would welcome the return of our #phasers overlords^Wweekly meetings.

[20:50] *** putau left
[20:50] *** lichtkind joined
[20:50] <darkwolf> bye

[20:51] *** darkwolf left
[20:52] <lichtkind> jnthn: are you activly working on the vvm port?

[20:52] <lichtkind> i mean jvm

[20:52] <masak> lichtkind: he is. but he's not back until late tonight or tomorrow.

[20:53] <lichtkind> thanks

[20:53] <lichtkind> masak: any prognosis about that?

[20:54] <masak> lichtkind: it's all on github, so you can inspect the progress yourself.

[20:54] <masak> last I heard though, it's doing large parts of QAST now, but not yet nqp.

[20:54] <moritz> my prognosis is: fun

[20:55] <lichtkind> i currently do i just mean if there are any releasaedates

[20:55] *** GlitchMr left
[20:55] <nwc10> Christmas!

[20:55] <masak> lichtkind: Christmas! \o/

[20:55] <masak> heh, great minds.

[20:55] <moritz> masak: fwiw https://rt.perl.org/rt3/Ticket/Display.html?id=116314 is about the phasers not being put in sink context properly

[20:55] <masak> oh!

[20:56] <masak> moritz: show me your reasons for believing this.

[20:56] <masak> (...and I'll add them to the ticket)

[20:56] <moritz> masak: for loops are lazy, and only run in eager or sink context

[20:57] <masak> ohrghgh!

[20:57] <moritz> masak: so if normal statements are run, but for loops aren't, sink context is missing

[20:57] * masak adds this to the ticket

[20:58] <masak> "Perl 6: we eliminated contexts, because they were too confusing" *rimshot*

[20:59] <diakopter> <.<.

[21:00] <moritz> nobody says we eliminated contexts in Perl 6

[21:00] <moritz> we just changed the way they propagate

[21:00] <masak> my point still stands.

[21:00] <masak> er, my ironic point.

[21:01] <moritz> well yes, buggy context implementation is confusing. I don't challenge that point at all

[21:01] *** sizz joined
[21:01] <moritz> just like buggy lexicals are confusing

[21:01] <moritz> etc.

[21:02] *** [particle]1 left
[21:02] <masak> oh, buggy lexicals! yeah, this is nothing compared to that.

[21:02] *** [particle] joined
[21:02] <masak> thanks for the reminder :)

[21:04] <masak> we still have an outstanding lexical bug, by the way.

[21:05] <masak> r: sub foo ($a, $f) { if $f { foo('z', 0) }; given $a {say $a; say $_} }; foo('x', 1)

[21:05] <p6eval> rakudo 60c572: OUTPUT¬´z‚ê§z‚ê§z‚ê§x‚ê§¬ª

[21:05] *** hash_table joined
[21:06] <moritz> I know, I recently stumbled over it in RT

[21:06] <moritz> n: sub foo ($a, $f) { if $f { foo('z', 0) }; given $a {say $a; say $_} }; foo('x', 1)

[21:06] <p6eval> niecza v24-16-g89e47b6: OUTPUT¬´z‚ê§z‚ê§x‚ê§x‚ê§¬ª

[21:14] *** hash_table left
[21:17] <diakopter> p: sub foo ($a, $f) { if $f { foo('z', 0) }; given $a {say $a; say $_} }; foo('x', 1)

[21:17] <p6eval> pugs: OUTPUT¬´z‚ê§z‚ê§x‚ê§x‚ê§¬ª

[21:18] <moritz> niecza++

[21:18] <moritz> pugs++

[21:19] *** kaare_ left
[21:21] *** hash_table joined
[21:21] <diakopter> rnp: sub foo ($a, $f) { if $f { foo('z', 0) }; { my $a = $OUTER::a; given $a {say $a; say $_} } }; foo('x', 1)

[21:21] <p6eval> niecza v24-16-g89e47b6: OUTPUT¬´Potential difficulties:‚ê§  $a is declared but not used at /tmp/UGzgEhPWIA line 1:‚ê§------> [32msub foo ([33m‚èè[31m$a, $f) { if $f { foo('z', 0) }; { my $a[0m‚ê§‚ê§z‚ê§z‚ê§x‚ê§x‚ê§¬ª

[21:21] <p6eval> ..rakudo e67fa9: OUTPUT¬´z‚ê§z‚ê§z‚ê§z‚ê§¬ª

[21:21] <p6eval> ..pugs: OUTPUT¬´*** Undeclared variable: ("$OUTER::a",MkPad (padToList [("$_",PELexical {pe_type = (mkType "Scalar"), pe_proto = <Scalar:0xf6e4fc89>, pe_flags = MkEntryFlags {ef_isContext = True}, pe_store = <ref:0xf6dbadc5>}),("@_",PELexical {pe_type = (mkType "Array"), pe_proto = <Array:‚Ä¶

[21:21] <diakopter> rakudo ... um?

[21:23] *** sizz left
[21:23] <diakopter> masak: see that? rakudo gets it wronger

[21:23] <masak> hm.

[21:24] <masak> I wouldn't be surprised if that was all part of the same problem.

[21:27] *** stevan_ left
[21:28] <diakopter> r: sub foo (\foo, $f) { if $f { foo('z', 0) }; { my \foo = \OUTER::foo; given foo {say foo; say $_} } }; foo('x', 1)

[21:28] <p6eval> rakudo e67fa9: OUTPUT¬´z‚ê§z‚ê§z‚ê§z‚ê§¬ª

[21:28] <diakopter> teehee

[21:34] *** stevan_ joined
[21:36] *** stevan_ left
[21:38] *** sizz joined
[21:40] *** hash_table left
[21:54] *** colomon joined
[21:59] *** thou left
[22:00] *** fgomez left
[22:13] *** fgomez joined
[22:40] <masak> 'night, #perl6

[22:41] <tadzik> good night

[22:46] *** stevan_ joined
[22:51] *** stevan_ left
[23:17] *** Guest78034 left
[23:17] <lichtkind> o/ good night @ all

[23:18] *** lichtkind left
[23:31] *** stevan_ joined
[23:35] *** stevan_ left
[23:43] *** stevan_ joined
[23:44] *** stevan_ left
[23:53] *** ismail_ left
[23:58] *** pmurias left
[23:59] *** ismail_ joined
