[00:03] <timotimo_> http://71.10.146.50:3001/project/Bailador - in these pages, the date column is titled "module". who should i highlight about this? (or maybe even: where's the repo on github?)

[00:03] <colomon> that would be me.

[00:04] <timotimo_> you are spartacus?

[00:04] <colomon> timotimo_: no, I am colomon

[00:04] <timotimo_> oh

[00:04] <colomon> you're looking at output from https://github.com/colomon/SmokeResults

[00:04] <colomon> running on the Linux box in my basement

[00:05] <timotimo_> that's why it reacts kind of slowly!

[00:05] <timotimo_> at first i thought it was built in perl6, but then i saw it's dancer

[00:05] <colomon> using a debug Dancer install, too.

[00:05] <colomon> It's actually a pretty fast Linux box, but it's using the Dancer development server rather than a real web server

[00:06] <timotimo_> probably got a slow-ish internet connection

[00:09] *** benabik left
[00:14] *** snearch joined
[00:19] *** rurban joined
[00:23] *** ggoebel joined
[00:29] *** btyler left
[00:39] *** tomyan left
[00:46] *** benabik joined
[00:47] *** telex left
[00:51] *** snearch left
[00:52] *** census joined
[00:54] *** telex joined
[01:14] *** anuby joined
[01:19] <census> hi!

[01:21] *** havenwood joined
[01:26] *** Teratogen left
[01:31] *** census left
[01:32] *** btyler joined
[01:36] *** prevost left
[01:37] <dalek> nqp: 6c24e71 | coke++ | tools/lib/NQP/Configure.pm:

[01:37] <dalek> nqp: Quote args passed to parrot's Configure.

[01:37] <dalek> nqp: review: https://github.com/perl6/nqp/commit/6c24e71c86

[01:37] <dalek> nqp: 1ff01d2 | coke++ | tools/lib/NQP/Configure.pm:

[01:37] <dalek> nqp: Allow spaces in --prefix path

[01:37] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1ff01d256a

[01:39] <[Coke]> whoever does the next star release - please upgrade to the latest parrot and nqp to get some build fixes for spaces.

[01:40] <[Coke]> (spaces in build & install paths)

[01:44] *** JimmyZ joined
[01:48] * [Coke] needs RT help.

[01:49] <geekosaur> what kind of help?

[01:50] <[Coke]> I want to search for all perl6 tickets that do not contain the tag "testneeded"

[01:51] <[Coke]> I can only search for tickets that contain the tag. Trying to reverse the sense of the search just shows all the tickets.

[01:52] <geekosaur> urgh. I don't have sufficient access to rt.perl.org to do normal searches, as far as I can tell, so I can't see how tags are defined to see how to specify a not properly :/

[01:52] <[Coke]> Do you have an rt.perl.org login?

[01:55] <geekosaur> no

[01:55] <geekosaur> that's why I don;t have access, random schlubs don't get to use their search form as far as I can tell

[02:01] <[Coke]> rt--

[02:09] *** lustlife` joined
[02:10] <[Coke]> .ask masak if he can provide an RT search that shows tickets that are NOT marked testneeded.

[02:10] <yoleaux> [Coke]: I'll pass your message to masak.

[02:10] *** lustlife joined
[02:14] *** yoleaux left
[02:14] *** SamuraiJack joined
[02:18] *** yoleaux joined
[02:18] *** ChanServ sets mode: +v yoleaux

[02:28] <dalek> roast: 14f35c6 | (Solomon Foster)++ | S02-types/bag.t:

[02:28] <dalek> roast: Fix bag.t test to use .Bag instead of .bag.

[02:28] <dalek> roast: review: https://github.com/perl6/roast/commit/14f35c61aa

[02:28] <dalek> niecza: b15a162 | (Solomon Foster)++ | lib/CORE.setting:

[02:28] <dalek> niecza: Kill non-standard .set and .bag methods, update Bag.new-from-pairs so that it doesn't issue warnings.

[02:28] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b15a1625d9

[02:31] <[Coke]> r: my $x = :(Int); $x.^methods>>.say

[02:32] <camelia> rakudo b2072f: OUTPUT«perl␤returns␤count␤<anon>␤<anon>␤ACCEPTS␤params␤arity␤<anon>␤<anon>␤»

[02:35] <dalek> roast: c399710 | (Solomon Foster)++ | S02-types/ (2 files):

[02:35] <dalek> roast: Translate the last batch of .Bag tests to .KeyBag tests.

[02:35] <dalek> roast: review: https://github.com/perl6/roast/commit/c39971075c

[02:40] <dalek> roast: b320135 | (Solomon Foster)++ | S02-types/keyset.t:

[02:40] <dalek> roast: Translate the last batch of .Set tests to .KeySet tests.

[02:40] <dalek> roast: review: https://github.com/perl6/roast/commit/b320135ec1

[02:41] <dalek> niecza: 6314dd4 | (Solomon Foster)++ | lib/CORE.setting:

[02:41] <dalek> niecza: Update KeyBag.new-from-pairs so that it doesn't issue warnings.

[02:41] <dalek> niecza: review: https://github.com/sorear/niecza/commit/6314dd4b23

[02:55] *** wamiks joined
[02:58] *** thou joined
[03:00] *** stevan_ joined
[03:06] *** preflex_ joined
[03:06] *** ChanServ sets mode: +v preflex_

[03:07] *** preflex left
[03:07] *** preflex_ is now known as preflex

[03:09] <sorear> o/ #perl6

[03:11] <[Coke]> ~~

[03:11] *** raiph joined
[03:11] *** cognominal left
[03:31] *** labster joined
[03:33] <labster> hiya, #perl6

[03:34] <labster> I am alive and back from YAPC:NA

[03:34] <diakopter> hi :)

[03:36] <[Coke]> nr: say first * > 5, 1..3

[03:36] <camelia> niecza v24-70-g6314dd4: OUTPUT«Nil␤»

[03:36] <camelia> ..rakudo b2072f: OUTPUT«No values matched␤  in method gist at src/gen/CORE.setting:10161␤  in method gist at src/gen/CORE.setting:893␤  in sub say at src/gen/CORE.setting:11047␤  in block  at /tmp/nJ5_Ga8uxI:1␤␤»

[03:48] <sorear> Hi labster

[03:48] <sorear> So am I :D

[03:49] <diakopter> :D

[03:49] <labster> good to hear

[03:50] <diakopter> you scal folks

[03:50] *** havenwood left
[03:51] <labster> Scala folks?

[03:51] <sorear> socal, presumably

[03:52] <labster> maybe he was typing with a lisp

[03:58] <sorear> or he acidentally left out a letter

[03:58] <labster> my puns are failing tonight

[04:01] <sorear> trip went well?

[04:02] *** atroxaper joined
[04:03] <labster> plane started 1 hour late, landed 1.5 hours late. :(

[04:03] <labster> both of my 787 Dreamliner flights had technical problems that delayed the flight.

[04:03] * sorear mixes words from adjacent lines D:

[04:03] <sorear> "plane crashed 1 hour late!"

[04:07] *** rurban left
[04:14] *** sazzq joined
[04:15] *** rurban joined
[04:16] <benabik> 787?  Technical problems?  Shocking...

[04:19] *** btyler left
[04:26] *** Psyche^ joined
[04:27] *** btyler joined
[04:29] *** mrallen1 joined
[04:30] *** Patterner left
[04:30] *** Psyche^ is now known as Patterner

[04:33] *** aindilis joined
[04:42] *** mrallen1 left
[04:46] *** rurban left
[04:52] *** hlin_ joined
[04:56] *** atroxaper left
[04:59] *** kaare_ joined
[05:06] *** sazzq left
[05:17] <diakopter> heh, lisp

[05:22] *** cognominal joined
[05:25] *** SamuraiJack left
[05:29] *** xenoterracide left
[05:46] *** rurban joined
[05:50] *** rurban left
[05:57] *** btyler left
[06:07] <moritz> \o

[06:07] <diakopter> o/

[06:12] <sorear> o!

[06:12] <nwc10> !o

[06:16] *** estrabd left
[06:17] *** FROGGS[mobile] joined
[06:17] <FROGGS[mobile]> I feel homeish

[06:17] *** cognominal left
[06:18] <moritz> welcome backish :-)

[06:18] <FROGGS[mobile]> :o)

[06:18] <sorear> o/ whereever you are, FROGGS[mobile]

[06:19] <FROGGS[mobile]> in a train in berlin

[06:19] <FROGGS[mobile]> moritz: you have still dry feet?

[06:19] <FROGGS[mobile]> hi sorear

[06:21] <moritz> FROGGS[mobile]: yes, I'm blessedly high up here, compared to any water around me

[06:22] <FROGGS[mobile]> good to know

[06:22] <FROGGS[mobile]> quiet some ppl that I know got evacuated

[06:25] <sorear> is moritz in a plane?

[06:25] <moritz> no

[06:25] <sorear> oh, he wasn't travelling from yapc

[06:25] <sorear> floods?

[06:26] <sorear> http://www.abc.net.au/news/2013-06-08/germany2c-hungary-battls-europes-worst-flood-in-a-decade/4742236 ?

[06:27] <moritz> aye

[06:27] <moritz> http://p4.focus.de/img/gen/E/7/HBE7VHnS_Pxgen_cr_800x450,1600x902+0+0.jpg # 100km from my home

[06:29] <FROGGS[mobile]> and I guess the flood is away already?

[06:30] <sorear> eesh, that does not look fun

[06:30] <sorear> is 100km the closest it is to you?

[06:30] <moritz> sorear: no, just where the worst of it is

[06:30] * jnthn made it home safely

[06:30] <yoleaux> 8 Jun 2013 23:16Z <sorear> jnthn: Would significant changes to ResumeState.java be acceptable?  It *looks* currently unused...

[06:31] <FROGGS[mobile]> jnthn: \o/

[06:31] <sorear> jnthn! \o/

[06:31] <jnthn> sorear: Current ResumeState.java was my first guess at how it may need to look; change it as you need.

[06:31] <jnthn> sorear: It's certainly not in use yet.

[06:31] <sorear> jnthn: k

[06:32] <sorear> glad to hear you're home safe

[06:32] <sorear> I am too :D

[06:32] <FROGGS[mobile]> obviously *g*

[06:32] <jnthn> yay :)

[06:32] <jnthn> It was an uneventful journey.

[06:33] <jnthn> Just long.

[06:33] <jnthn> (5-6 hour layover at Dulles)

[06:33] <sorear> FROGGS[mobile]: not so obviously.  my layover in phoenix had excellent wifi and (unlike austin) doesn't block outbound ssh

[06:33] <FROGGS[mobile]> I was sitting between two fat ppl -.-

[06:33] <jnthn> FROGGS[mobile]: ugh

[06:34] <sorear> I could be overnighting there with a cancelled flgiht

[06:34] <moritz> jnthn: it has 'dull' in the name :-)

[06:34] <FROGGS[mobile]> so I had their ellbows in my ribs for 8h+

[06:34] <jnthn> moritz: Yeah...well, it did at least have free wifi...that mostly worked, if you sat in the right places

[06:35] <moritz> FROGGS[mobile]: so that's a good motivation to get a window seat next time, then you'll have at most one ellbow in your ribs

[06:35] <FROGGS[mobile]> right

[06:36] * jnthn always tries to get those

[06:36] * sorear muses about teratomas

[06:39] <FROGGS[mobile]> I guess sitting near the vails has advantages too (getting the laptop)

[06:41] * sorear reads more on method handles

[06:42] <jnthn> OK, my current uptime is somewhere around 22 hours, given I can't sleep on planes...

[06:42] <jnthn> So I'm gonna go take a short nap :)

[06:42] *** tomyan joined
[06:43] <moritz> jnthn: good reboot :-)

[06:43] <sorear> .oO( my uptime is more like 22 or 14 years, since I only sleep-mode at night, not complete shutdown )

[06:45] <diakopter> seems a problem

[06:45] *** Guest1337 left
[06:46] *** rurban joined
[06:52] *** rurban left
[06:52] *** JimmyZ left
[06:55] * sorear attempts to press Scala into service as a Java REPL, despite knowing zero scala

[06:56] <labster> good luck sorear

[07:07] *** rindolf joined
[07:08] *** JimmyZ joined
[07:10] *** konundra left
[07:18] *** JimmyZ left
[07:20] *** tomyan_ joined
[07:22] *** tomyan left
[07:25] *** JimmyZ joined
[07:28] *** Blahhh joined
[07:30] *** stevan__ joined
[07:31] *** JimmyZ left
[07:33] *** LordVorp joined
[07:35] *** awwaiid_ joined
[07:35] *** Tene_ joined
[07:35] *** Tene_ left
[07:35] *** Tene_ joined
[07:35] *** zakalwe_ joined
[07:35] *** cxreg2 joined
[07:35] *** xinming joined
[07:35] *** pjcj joined
[07:36] *** __sri joined
[07:38] *** _sri left
[07:38] *** awwaiid left
[07:38] *** Tene left
[07:38] *** stevan_ left
[07:38] *** xinming_ left
[07:38] *** zakalwe left
[07:38] *** s1n left
[07:38] *** LV left
[07:38] *** cxreg left
[07:38] *** pjcj_ left
[07:38] *** ivan``_ left
[07:38] *** ivan`` joined
[07:46] <labster> r: sub foo { X::IO::Dir.new(path=>'a', os-error=>'b').fail }; my @a = foo(); 1;

[07:46] <camelia> rakudo b2072f:  ( no output )

[07:46] <labster> r: sub foo { X::IO::Dir.new(path=>'a', os-error=>'b').fail }; my @a := foo(); 1;

[07:46] <camelia> rakudo b2072f: OUTPUT«Failed to get the directory contents of 'a': b␤  in method sink at src/gen/CORE.setting:10169␤  in method BUILDALL at src/gen/CORE.setting:801␤  in method bless at src/gen/CORE.setting:743␤  in method new at src/gen/CORE.setting:728␤  in method new at src/gen/CORE.…

[07:46] <labster> should binding cause the failure to get thrown?

[07:47] <FROGGS[mobile]> binding is lazy

[07:47] <FROGGS[mobile]> try to say @a

[07:47] <FROGGS[mobile]> ohh

[07:47] <FROGGS[mobile]> err

[07:47] <FROGGS[mobile]> nvm

[07:48] *** s1n joined
[07:49] *** rurban joined
[07:51] *** dmol joined
[07:51] <sorear> invocation of method handles is... a lot more complicated than I though

[07:52] <FROGGS[mobile]> :/

[07:54] *** JimmyZ joined
[07:56] *** rurban left
[07:56] *** tomyan_ left
[08:00] *** lustlife` left
[08:00] *** atroxaper joined
[08:07] *** Tene_ is now known as Tene

[08:11] *** kingbeast joined
[08:11] *** kingbeast left
[08:12] *** kingbeast joined
[08:17] *** risou is now known as risou_awy

[08:21] *** tomyan joined
[08:27] *** flaviusb joined
[08:31] *** flaviusb left
[08:46] *** thou left
[08:47] *** flaviusb joined
[08:51] *** flaviusb left
[08:54] *** rurban joined
[08:55] *** Blahhh left
[08:58] *** rurban left
[09:05] *** raiph left
[09:06] *** flaviusb joined
[09:10] *** FROGGS[mobile] left
[09:10] *** flaviusb left
[09:23] *** PacoAir joined
[09:26] *** flaviusb joined
[09:44] *** cognominal joined
[09:51] <sorear> jnthn: around?

[09:52] <nwc10> is this where we have a sweepstake on how much nap jnthn needs after 22 hours of uptime?

[09:53] <sorear> maybe

[09:53] <nwc10> 3 so far, base on his last comment in #moarvm

[09:54] <sorear> "nap" in sorearish implies <= 2h

[09:55] *** rurban joined
[09:57] *** spider-mario joined
[10:00] *** rurban left
[10:02] *** hlin_ left
[10:04] *** hypolin left
[10:05] <nwc10> anyway, I'm going to guess 3 more hours :-)

[10:05] <nwc10> and likely be completely wrong

[10:12] *** woosley left
[10:12] *** anuby left
[10:30] <sorear> .ask jnthn Have you an opinion on S04's concept of a lexotic gather/take?

[10:30] <yoleaux> sorear: I'll pass your message to jnthn.

[10:30] <sorear> sleep&

[10:31] *** census joined
[10:36] *** census left
[10:51] *** moukeddar joined
[10:57] *** rurban joined
[10:59] <tadzik> labster | both of my 787 Dreamliner flights had technical problems that delayed the flight.

[10:59] <tadzik> heh, that souns familiar :D

[11:01] <tadzik> mine's doors broke just before takeoff

[11:02] <tadzik> delayed by around 30 minutes. The difficulty was visible through the window, but the announcement said that it's delayed because it arrived late. Yeah.

[11:05] *** rurban left
[11:07] <jnthn> Hm. The nap left me feeling like I need more sleep rather than refreshed. :/

[11:07] <yoleaux> 10:30Z <sorear> jnthn: Have you an opinion on S04's concept of a lexotic gather/take?

[11:07] <colomon> sounds like most of the p6ers have made it home safely by now!

[11:07] <jnthn> (Which of course, I should not do, otherwise I won't sleep at all tonight...)

[11:09] <jnthn> .tell sorear lexotic gather/take will need to be supported at some point, though Rakudo doesn't do that yet today so if we don't have it from the start it's not a regression compared to Rakudo on Parrot.

[11:09] <yoleaux> jnthn: I'll pass your message to sorear.

[11:16] <tadzik> r: sub foo { die "no"; LEAVE { say "leaving" } }; foo

[11:16] <camelia> rakudo b2072f: OUTPUT«no␤  in sub foo at /tmp/Y1eClAKYJX:1␤  in block  at /tmp/Y1eClAKYJX:1␤␤»

[11:24] *** tgt joined
[11:31] *** kaare_ left
[11:31] *** kaare__ joined
[11:35] *** kaare__ left
[11:42] <tadzik> oh

[11:42] <tadzik> LEAVE {...}       at every block exit time (even stack unwinds from exceptions)

[11:42] <tadzik> so, LEAVE is wrong here?

[11:43] <tadzik> r: sub foo { LEAVE { say "leaving" }; die "NO" }; foo

[11:43] <camelia> rakudo b2072f: OUTPUT«NO␤  in sub foo at /tmp/pS_UKiac76:1␤  in block  at /tmp/pS_UKiac76:1␤␤»

[11:45] <tadzik> it causes Panda::Common::indir() to be broken

[11:45] <tadzik> I think

[11:47] <jnthn> tadzik: I think the issue is that the global exception handler doesn't cause the LEAVEs to be triggered, somehow...

[11:48] <tadzik> apparently we don't have a spectest for that

[11:50] <jnthn> No; think there's an RT, though.

[12:02] *** rurban joined
[12:04] <tadzik> I don't see one

[12:04] <tadzik> I'll report it, and come up with a spectest

[12:06] *** rurban left
[12:15] *** tgt left
[12:16] *** tomyan left
[12:24] <Ulti> jnthn: get a jawbone up so that you can take power naps https://jawbone.com/up#features

[12:26] *** flaviusb left
[12:36] *** birdwindupbird joined
[12:46] <jnthn> std: 'abc' ~~ /a $<a>=[\w+]/; say :$<a>

[12:46] <camelia> std 6348f35: OUTPUT«ok 00:00 45m␤»

[12:52] <dalek> specs: de6df31 | (Elizabeth Mattijsen)++ | S02-bits.pod:

[12:52] <dalek> specs: Minor reorganisation in order of :delete combinations + some :exists combinations

[12:52] <dalek> specs: review: https://github.com/perl6/specs/commit/de6df315d8

[13:02] *** rurban joined
[13:07] *** rurban left
[13:09] *** wamiks left
[13:10] *** kaare__ joined
[13:19] <dalek> rakudo/nom: d25808b | jnthn++ | src/Perl6/ (2 files):

[13:19] <dalek> rakudo/nom: Implement :$<foo> colonpair syntax.

[13:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d25808bd09

[13:29] <dalek> rakudo/nom: f415ec0 | (Elizabeth Mattijsen)++ | src/core/Any.pm:

[13:29] <dalek> rakudo/nom: :exists? :k doesn't make sense, remove it.

[13:29] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f415ec0a35

[13:29] <dalek> rakudo/nom: e20d626 | (Elizabeth Mattijsen)++ | src/core/Any.pm:

[13:29] <dalek> rakudo/nom: Normalize candidate order for better readability

[13:29] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e20d62620f

[13:30] * jnthn found 3 RTs to tag testneeded as well as tagging a 4th testneeded by doing :$<foo> :)

[13:31] *** rindolf left
[13:36] <dalek> roast: e48b1c5 | jnthn++ | S04-statements/terminator.t:

[13:36] <dalek> roast: Correct quoting of { } in a test.

[13:36] <dalek> roast: 

[13:36] <dalek> roast: Since { } in a string is a closure, it caused the eval to get invalid

[13:36] <dalek> roast: code, causing the test to fail in Rakudo even though it should pass.

[13:36] <dalek> roast: review: https://github.com/perl6/roast/commit/e48b1c5c40

[13:37] *** vm joined
[13:38] <jnthn> std: my &foo; sub foo { };

[13:38] <camelia> std 6348f35: OUTPUT«===SORRY!===␤Illegal redeclaration of routine 'foo' (see line 1) at /tmp/BnQEHRaeMW line 1:␤------> my &foo; sub foo⏏ { };␤Check failed␤FAILED 00:00 45m␤»

[13:38] <jnthn> r: my &foo; sub foo { };

[13:38] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Redeclaration of routine foo␤at /tmp/5Az3XW4y9z:1␤------> my &foo; sub foo { }⏏;␤    expecting any of:␤        statement list␤        horizontal whitespace␤»

[13:41] *** moukeddar left
[13:45] *** vm left
[13:46] <dalek> roast: ef55c9b | jnthn++ | S32-exceptions/misc.t:

[13:46] <dalek> roast: Unskip a now-passing test.

[13:46] <dalek> roast: review: https://github.com/perl6/roast/commit/ef55c9b66a

[13:47] <dalek> rakudo/nom: 7567877 | jnthn++ | src/Perl6/Actions.nqp:

[13:47] <dalek> rakudo/nom: Fix LTA error on 'my &foo; multi foo() { }'.

[13:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/75678776e7

[13:47] *** konundra joined
[13:53] *** woolfy left
[13:54] *** lizmat left
[13:55] *** prevost joined
[13:59] *** lizmat joined
[14:00] *** woolfy joined
[14:03] *** rurban joined
[14:07] *** rurban left
[14:08] *** rurban joined
[14:13] *** rindolf joined
[14:16] <masak> oh hai, #perl6

[14:16] <yoleaux> 02:10Z <[Coke]> masak: if he can provide an RT search that shows tickets that are NOT marked testneeded.

[14:17] <masak> [Coke]: "Edit search" > "Tag" > "isn't" > "testneeded" > "Add and search".

[14:18] <dalek> emmentaler: 9f7ecd1 | tadzik++ | smoker:

[14:18] <dalek> emmentaler: Panda is now fixed. Adjust

[14:18] <dalek> emmentaler: review: https://github.com/tadzik/emmentaler/commit/9f7ecd1f3b

[14:19] <dalek> panda: be1030f | tadzik++ | lib/Panda (5 files):

[14:19] <dalek> panda: Don't leak out non-Panda exceptions.

[14:19] <dalek> panda: 

[14:19] <dalek> panda: This fixes emmentaler. It's also a part of my experiment to use Failures

[14:19] <dalek> panda: where I usually used Exceptions. Please bare with me.

[14:19] <dalek> panda: review: https://github.com/tadzik/panda/commit/be1030f622

[14:19] <tadzik> colomon: there, I got this

[14:19] <masak> tadzik: "bare with me" means "get nekkid with me". did you mean "bear with me"? :P

[14:20] <tadzik> oh man

[14:20] <jnthn> :D

[14:20] <colomon> tadzik++

[14:20] <dalek> panda: 4dc0da5 | tadzik++ | lib/Panda (5 files):

[14:20] <dalek> panda: Don't leak out non-Panda exceptions.

[14:20] <dalek> panda: 

[14:20] <dalek> panda: This fixes emmentaler. It's also a part of my experiment to use Failures

[14:20] <dalek> panda: where I usually used Exceptions. Please bear with me.

[14:20] <dalek> panda: review: https://github.com/tadzik/panda/commit/4dc0da5821

[14:20] <colomon> tadzik: no one would ever use "bare with me" with that meaning, though.  :)

[14:20] <tadzik> there, no one noticed :D

[14:20] <colomon> tadzik: I'll give it a test in a few minutes.

[14:20] <masak> retconned!

[14:21] <tadzik> I may have broken your git history, if you're very fast ;)

[14:21] <moritz> the logs will know.

[14:21] <jnthn> It'll go down in history

[14:21] *** spider-mario left
[14:21] <tadzik> the logs always remember. Like eleghants

[14:21] * masak .oO( no-one is that fast. taking off your shirt takes at least a few seconds )

[14:21] <jnthn> The day tadzik said "bare with me"

[14:21] <nwc10> masak: where is "Tag" ?

[14:21] * nwc10 is trying to follow those instructions

[14:21] <masak> nwc10: it's hard to describe the exact position. some ways down, near the bottom.

[14:22] * moritz wonders why tadzik wants a bear with him

[14:22] <masak> moritz: exit left, chased by a bare. ;)

[14:22] <nwc10> masak: I don't see it at all on https://rt.perl.org/rt3/Search/Build.html (for me, logged in) and it's not in the page source

[14:23] <masak> nwc10: I see it.

[14:23] <masak> we must have different views of that form.

[14:23] <masak> it's the third one from the bottom in the "Add Criteria" pane.

[14:23] <nwc10> I only have time worked, time estimated, time left

[14:23] <masak> maybe the controls depend on how much admin you have?

[14:24] <nwc10> maybe.

[14:24] <masak> anyway, if people don't have the full toolset, that's another way I can understand that they don't get along with RT...

[14:24] <nwc10> if so, that might explain why [Coke] can't manage to do it

[14:24] <masak> (though it also doesn't make me more sympathetic or prone to defent RT)

[14:24] <masak> defend*

[14:25] *** woolfy left
[14:27] <masak> rn: class A { has $.name = (state $ = "a")++ }; say A.new.name for ^3

[14:27] <camelia> rakudo b2072f, niecza v24-70-g6314dd4: OUTPUT«a␤b␤c␤»

[14:27] <masak> I like that solution? does anyone know a better one?

[14:27] *** census joined
[14:27] <masak> s/\?/./

[14:30] * jnthn can't think of one right away

[14:30] <nwc10> masak: if you build the search for "not tagged testneeded" does it end up with a URL that anyone else can use?

[14:31] <timotimo_> hello everyone. what's new? :)

[14:31] <masak> timotimo_! \o/

[14:31] *** ajr joined
[14:31] <lizmat> masak: fwiw, that seems to need some syntactic sugar, like "has state $.name = 'a'" or "state has $.name = 'a'"

[14:31] <masak> nwc10: let's test. hold on.

[14:31] <nwc10> timotimo_: what's new since when?

[14:31] *** ajr is now known as Guest87187

[14:32] <jnthn> timotimo_: 5-6 extra RTs are now "testneeded" ;)

[14:32] *** Guest87187 is now known as ajr_

[14:32] <masak> lizmat: both "has" and "state" are declarators, so that feels strange to me. a bit like if you'd write "my our".

[14:33] <timotimo_> nwc10: about the last 24 hours

[14:33] <nwc10> is this like christmas tree IP packets? :-)

[14:33] <moritz> lizmat: if you want a state 'has', you should really use a class variable

[14:33] <nwc10> timotimo_: sorear fixed all the remaining test failures for NQP-JVM. Is that more or less than 24 hours ago?

[14:33] <timotimo_> i think i've heard that, but it may have been newer

[14:33] <masak> nwc10: https://rt.perl.org/rt3/Search/Results.html?Rows=50&Format='%20%20%20%3Cb%3E%3Ca%20href%3D%22%2Frt3%2FTicket%2FDisplay.html%3Fid%3D__id__%22%3E__id__%3C%2Fa%3E%3C%2Fb%3E%2FTITLE%3A%23'%2C%0A'%3Cb%3E%3Ca%20href%3D%22%2Frt3%2FTicket%2FDisplay.html%3Fid%3D__id__%22%3E__Subject__%3C%2Fa%3E%3C%2Fb%3E%2FTITLE%3ASubject'%2C%0A'__Status__'%2C%0A'__QueueName__'%2C%0A'__OwnerName__'%2C%0A'__Priority__'%2C%0A'__NEWLINE__'%2C%0A''%2C%0A'%3Csmall%3E__Requestors__%3C

[14:33] <lizmat> then why does masak want to do it like that?

[14:34] <jnthn> masak: I think pmichaud++ fixed the issue in https://rt.perl.org/rt3/Ticket/Display.html?id=88128 - I'm guessing it's a dupe ticket. Something to look at and maybe an easy close if you have a moment. :)

[14:34] <masak> moritz: please show what you mean.

[14:34] <masak> jnthn: ok.

[14:34] <TimToady> we are trying very hard not to take a nap here in Manchester...well, really Sale

[14:34] * masak is on a train, and so has plenty of moments :)

[14:34] <jnthn> .oO( is everything cheap in the Sale? :) )

[14:34] <nwc10> masak: I can't use that, but I'm not sure if it's getting chewed in the paste. What happens with a link shortener?

[14:34] <TimToady> part of that was taking a walk in Worthington Park :)

[14:34] <jnthn> :D

[14:35] <masak> jnthn: I was going with "you are the Sale of the Earth" :P

[14:35] <lizmat> we are about to close the suitcases and be on our way to Houston, then Amsterdam

[14:35] <masak> TimToady: walking in Worthington Park made you almost fall asleep? :P

[14:35] <TimToady> afterwards it did :)

[14:36] <nwc10> masak: actually, I think that it got truncated. Last bit I see is %3Csmall%3E__Requestors__%3C

[14:36] <TimToady> but I think we got a suffient amount of sunshine to persuade our circadia that they were rythmic

[14:36] <TimToady> *cient

[14:37] <TimToady> *rhyth

[14:37] <hoelzro> jnthn: ah, there you are! would you be adverse to reverting the commit 721f127a83bdfef9f9f2e6dd46a7850899cb2858 in nqp?

[14:37] <masak> nwc10: ok, making tinyurl

[14:38] <jnthn> hoelzro: I can't Just Revert It, otherwise we break the nqp-jvm build.

[14:38] <hoelzro> I see

[14:38] <hoelzro> is there a way we can restores its functionality for just Parrot, then?

[14:38] <jnthn> (due to the pir::)

[14:38] <jnthn> Yeah, wrap the thing in a #?if parrot ... #?endif I guess.

[14:38] <hoelzro> ok, cool

[14:39] <jnthn> Hm, duck mapping went away, right? So https://rt.perl.org/rt3/Ticket/Display.html?id=102276 can be rejected?

[14:39] <masak> nwc10: http://tinyurl.com/notestneeded

[14:40] <nwc10> masak: I have a page titled "Found 665 tickets"

[14:40] <masak> that's the one.

[14:40] <nwc10> oh, *interesting*, if I got to edit search I now have "Tag", "Platform" and "Patch Status" as dropdowns

[14:40] <TimToady> hyper doesn't need duckmapping, but there's still a .duckmap method specced

[14:41] <nwc10> and if I go "new search" they disappear.

[14:41] <masak> nwc10: might be you were running RT in logged-out view.

[14:41] <nwc10> nope, I'm logged in

[14:41] <masak> or something.

[14:42] <nwc10> .tell [Coke] Try this: < masak> nwc10: http://tinyurl.com/notestneeded

[14:42] <yoleaux> nwc10: I'll pass your message to [Coke].

[14:43] <masak> moritz: what's a Perl 6 "class variable", and how would I use it to do what I wanted (increment letter with each new instance, provide accessor)?

[14:43] <nwc10> and I think [Coke] needs to ask perlbug-admin at perl.org what's with the funkiness

[14:44] *** census left
[14:45] <moritz> r: class A { our $.c = 0; method new(|) { ++$.c; self.bless(*) } };A.new for ^5; say A.c

[14:45] <camelia> rakudo b2072f: OUTPUT«5␤»

[14:46] <moritz> masak: ^^

[14:46] <moritz> I should have said ↑↑ :-)

[14:46] <masak> moritz: that would not give each instance a unique $.c

[14:47] <dalek> rakudo/nom: 6b1a671 | jnthn++ | src/Perl6/Grammar.nqp:

[14:47] <dalek> rakudo/nom: Start checking reduce for fiddliness.

[14:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6b1a6710e6

[14:47] <masak> we seem to be speaking at cross-usecases.

[14:48] <lizmat> good * #perl6, we're on our way now!

[14:48] *** lizmat left
[14:49] <masak> moritz: anyway, I had to abandon the refactor that included the 'has = state' thing, because it turned out that I wanted the count to be scoped not globally, but to another bigger thing which I have not reified into a class. (it's just a lexical scope right now.)

[14:49] <masak> (bigger thing than the class I was writing, not bigger than global scope) :)

[14:50] *** FROGGS[mobile] joined
[14:53] <masak> jnthn: merged #117831 into #88128. (pmichaud's fix of infix:<**> capturing separators)

[14:53] *** pecastro joined
[14:54] <jnthn> hm, and that ticket claims to have tests...

[14:54] <jnthn> ...but it's still not closed.

[14:54] <masak> maybe the merge reopened it? :/

[14:55] <masak> yes, looks like. resolving ticket.

[14:55] <jnthn> masak++

[14:56] <masak> I think I assumed that RT would prefer the latest state-change. but it might be it's conservative in some way and preserves the most unresolved state, or something.

[15:00] <dalek> rakudo/nom: b2e8375 | jnthn++ | src/Perl6/ (2 files):

[15:00] <dalek> rakudo/nom: Eliminate a now-unrequired hack.

[15:00] <dalek> rakudo/nom: 

[15:00] <dalek> rakudo/nom: This as a side-effect fixes RT#111734.

[15:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b2e8375d7c

[15:00] <hoelzro> yay! NQP pull request: https://github.com/perl6/nqp/pull/102

[15:03] <dalek> nqp: 831cb3a | (Rob Hoelz)++ | src/NQP/World.nqp:

[15:03] <dalek> nqp: Restore dynext option processing for Parrot

[15:03] <dalek> nqp: review: https://github.com/perl6/nqp/commit/831cb3acfb

[15:03] <dalek> nqp: 2e79dae | jonathan++ | src/NQP/World.nqp:

[15:03] <dalek> nqp: Merge pull request #102 from hoelzro/master

[15:03] <dalek> nqp: 

[15:03] <dalek> nqp: Restore --dynext processing for Parrot

[15:03] <dalek> nqp: review: https://github.com/perl6/nqp/commit/2e79dae13e

[15:03] <hoelzro> \o/

[15:04] <hoelzro> thanks jnthn 

[15:04] <masak> r: constant FOO = q:to /EOF/;␤    OH HAI␤    EOF␤␤say FOO

[15:04] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Premature heredoc consumption␤»

[15:04] <masak> what in the world does "Premature heredoc consumption" mean? :(

[15:05] <masak> is it unreasonable to want to put a heredoc string in a constant? I don't think so.

[15:07] <colomon> std: constant FOO = q:to /EOF/;␤    OH HAI␤    EOF␤␤say FOO

[15:07] <camelia> std 6348f35: OUTPUT«===SORRY!===␤(Possible runaway string from line 2)␤Couldn't find delimiter for heredoc␤ at /tmp/oNSPLuODMp line 5 (EOF):␤------> say FOO⏏<EOL>␤Parse failed␤FAILED 00:00 42m␤»

[15:08] <jnthn> masak: It means that constants are evaluated immediately

[15:08] <jnthn> masak: It's the BEGIN block / heredoc thing in disguise.

[15:08] <masak> jnthn: I fail to understand. I know that constants evaluate immediately. but my heredocs are constant; they aren't qq strings, they're q strings.

[15:09] <jnthn> masak: The problem being that expression after the = up to the ; is evaluated right away at statement end

[15:09] <jnthn> masak: The heredoc itself hasn't been parsed at that point.

[15:09] <masak> ah.

[15:10] <jnthn> r: BEGIN say q:to /EOF/;␤    OH HAI␤    EOF␤␤say FOO

[15:10] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Premature heredoc consumption␤»

[15:10] <masak> I understand now.

[15:10] <jnthn> Same as there.

[15:10] <masak> still dissatisfied with that semantics.

[15:10] <jnthn> Well, not sure what we can do about it.

[15:10] <jnthn> Given

[15:10] <masak> feels like Perl 6 isn't doing enough for me :)

[15:10] <masak> we know that there is *going* to be a string there, in a very short while.

[15:10] <jnthn> r: (BEGIN say q:to /EOF/; say 42)␤    OH HAI␤    EOF␤␤say FOO

[15:10] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Premature heredoc consumption␤»

[15:11] <jnthn> There the BEGIN isn't even a top-level statement.

[15:11] <jnthn> Well, feel free to play with it to see if you can work out a sane way to make it work

[15:11] * jnthn isn't sure how

[15:11] <masak> oki. gotcha.

[15:11] <jnthn> I mean, I'd be happy enough with it working. I just don't see how to get there.

[15:12] <masak> yeah, I'm not saying it's an easy problem to solve. I'm saying it feels like it could work.

[15:12] * masak submits rakudobug

[15:12] <dalek> roast: 1415743 | jnthn++ | S12-introspection/methods.t:

[15:12] <dalek> roast: Extra .^methods tests.

[15:12] <dalek> roast: review: https://github.com/perl6/roast/commit/1415743987

[15:16] *** kaare__ left
[15:16] <dalek> roast: b4d71e8 | jnthn++ | S12-introspection/methods.t:

[15:16] <dalek> roast: Test for RT #108968.

[15:16] <dalek> roast: review: https://github.com/perl6/roast/commit/b4d71e8059

[15:19] <jnthn> r: try { CATCH { ~$! }; die }

[15:19] <camelia> rakudo b2072f: OUTPUT«Nominal type check failed for parameter ''; expected Any but got Mu instead␤  in block  at /tmp/D4IDicmIrw:1␤  in block  at /tmp/D4IDicmIrw:1␤␤»

[15:21] *** raiph joined
[15:24] *** kaare_ joined
[15:29] <jnthn> masak: That constants one is a dupe, it seems...

[15:29] <jnthn> masak: with https://rt.perl.org/rt3/Ticket/Display.html?id=117853

[15:32] <masak> ok, merging. jnthn++

[15:32] *** prevost left
[15:33] *** thou joined
[15:40] <dalek> rakudo/nom: 3f49bbd | coke++ | src/core/Any.pm:

[15:40] <dalek> rakudo/nom: first should return Nil on not found.

[15:40] <dalek> rakudo/nom: 

[15:40] <dalek> rakudo/nom: RT #118141

[15:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3f49bbd446

[15:42] <jnthn> shop; bbiab

[15:43] <dalek> rakudo/nom: ff94231 | jnthn++ | src/Perl6/Metamodel/MultipleInheritance.nqp:

[15:43] <dalek> rakudo/nom: Fix self-inheritance detection.

[15:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ff94231b16

[15:44] *** prevost joined
[15:45] <[Coke]> masak: that doesn't work.

[15:45] <yoleaux> 14:42Z <nwc10> [Coke]: Try this: < masak> nwc10: http://tinyurl.com/notestneeded

[15:45] <nwc10> *think* of the devil. (ish)

[15:47] <[Coke]> masak: if you pick that via the build a search screen, you get about 660-665 tickets - that list includes, e.g. 73104, which is marked testneeded.

[15:47] <nwc10> [Coke]: oh, interesting. I can't even *build* that query via the search screen

[15:48] *** rurban left
[15:48] <[Coke]>  Queue = 'perl6' AND  (  Status = 'new' OR Status = 'open' ) AND 'CF.{Tag}' != 'testneeded'

[15:49] <[Coke]> doesn't work with != - doesn't work with "not like"

[15:49] <moritz> note that you have to be logged in for most RT search features (you probably are; justin case)

[15:50] *** AndChat|356841 joined
[15:51] <[Coke]> ... Ah. I thought this complaint of mine sounded familiar. I already opened this ticket with robert in 2011.

[15:53] <[Coke]>  Queue = 'perl6' AND  (  Status = 'open' OR Status = 'new' OR Status = 'stalled' ) AND 'CF.perl6.{Tag}' NOT LIKE 'testneeded'

[15:53] <[Coke]> Note the ".perl6."

[15:53] *** FROGGS[mobile] left
[15:53] <[Coke]> which never ever ever would show up via the interface. you have to know to add it by hand when editing the query in advanced mode.

[15:54] <[Coke]> I must have updated my "notdone" query at some point in the past 2 years forgetting this. :(

[16:02] *** rurban joined
[16:04] *** AndChat|356841 left
[16:04] *** tomyan joined
[16:04] *** FROGGS[mobile] joined
[16:04] *** rurban left
[16:04] *** FROGGS[mobile] left
[16:05] *** FROGGS[mobile] joined
[16:05] *** rurban joined
[16:07] *** JimmyZ left
[16:13] <[Coke]> is it ok if NaN.Rat returns itself? (rather than something that is actually a Rat?)

[16:15] <colomon> I'd say yes (at least for now).  Is that Num's NaN you're talking about?

[16:16] * colomon is still tempted to think that NaN should be a type of its own.

[16:18] <[Coke]> Yah. I'll just get this test passing for now.

[16:19] *** FROGGS[mobile] left
[16:19] <dalek> rakudo/nom: 5075c3b | thundergnat++ | tools/build/gen-version.pl:

[16:19] <dalek> rakudo/nom: Change quoting to capture the version correctly under Windows.

[16:19] <dalek> rakudo/nom: 

[16:19] <dalek> rakudo/nom: Windows Command.exe does not understand single quoted parameters so perl6 -v returned no version number.

[16:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5075c3b5aa

[16:19] <dalek> rakudo/nom: 58f5ae6 | moritz++ | tools/build/gen-version.pl:

[16:19] <dalek> rakudo/nom: Merge pull request #162 from thundergnat/patch-1

[16:19] <dalek> rakudo/nom: 

[16:19] <dalek> rakudo/nom: Change quoting to capture the version correctly under Windows.

[16:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/58f5ae68d3

[16:20] <moritz> we could encode NaN rats as 0/0, Inf as 1/0 and -Inf as -1/0

[16:27] <colomon> moritz: true.  but we don't have Int NaN or Inf either, do we?

[16:29] <dalek> rakudo/nom: a503510 | coke++ | src/core/Num.pm:

[16:29] <dalek> rakudo/nom: NaN.Rat -> NaN

[16:29] <dalek> rakudo/nom: 

[16:29] <dalek> rakudo/nom: RT #77820

[16:29] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a503510b1e

[16:29] *** rurban left
[16:30] <dalek> roast: 97d8539 | coke++ | S32-num/rat.t:

[16:30] <dalek> roast: rakudo unfudge

[16:30] <dalek> roast: review: https://github.com/perl6/roast/commit/97d8539be9

[16:35] <flussence> r: my \FOO = q:to /EOF/;␤    OH HAI␤    EOF␤␤say FOO; FOO ~= '...';

[16:35] <camelia> rakudo b2072f: OUTPUT«OH HAI␤␤Cannot modify an immutable value␤  in block  at src/gen/CORE.setting:13979␤  in block  at /tmp/VHU39ugLa9:5␤␤»

[16:35] <flussence> masak: is that close enough for you? :)

[16:38] <[Coke]> Ugh. the search is still returning *some* tickets that are marked testneeded.

[16:38] <[Coke]> e.g. 76400

[16:39] <[Coke]> (*#&$#$>

[16:45] *** PacoAir left
[16:46] <[Coke]> opening new ticket with rt admins. 

[16:46] <[Coke]> masak - things like this make it very frustrating to use RT.

[16:49] <moritz> does anybody know a non-annoying bug tracker? :-)

[16:49] *** dmol left
[16:50] <nwc10> they are *all* made of software, aren't they? This isn't a good start.

[16:50] <colomon> most of the bug trackers I know track both annoying and non-annoying bugs.

[16:51] <moritz> hardware bug trackers...

[16:51] <moritz> at $work we have a highly patched and customized OTRS installation, which is somewhat usable

[16:51] <moritz> (after 5 years of patching, that is...)

[16:52] <nwc10> but so forked, that it's un-upgradeable?

[16:53] <moritz> the 3.0 to 3.1 upgrade was several man weeks worth of work

[16:53] <moritz> 3.1 to 3.2 was less painful

[16:53] <moritz> and now upstream changed to git (used to be cvs)

[16:54] <moritz> so we'll likely upgrade more often and in smaller steps, keeping them less painful

[16:54] <moritz> and maybe push some contributions upstream

[16:56] *** konundra left
[16:57] *** rurban joined
[17:02] *** birdwindupbird left
[17:04] <[Coke]> r: 5.

[17:04] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Confused␤at /tmp/ogJuVhXpa8:1␤------> 5.⏏<EOL>␤    expecting any of:␤        dotty method or postfix␤»

[17:11] *** tgt joined
[17:15] <diakopter> r: 5.␤

[17:15] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Decimal point must be followed by digit␤at /tmp/zVobw9UfLN:1␤------> 5.⏏<EOL>␤Decimal point must be followed by digit␤at /tmp/zVobw9UfLN:1␤------> 5.⏏<EOL>␤Unsupported use of . to concatenate stri…

[17:16] <diakopter> [Coke]: the difference in the repl is just the newline

[17:19] * nwc10 wonders where mberends is

[17:20] <tadzik> he's not often here these days

[17:21] *** ajr_ left
[17:21] *** rurban left
[17:21] <timotimo_> i'm thinking about subtitling my perl6 talk in english for y'all (and te rest of the interwebs)

[17:22] <nwc10> I wonder if he even knows about MoarVM yet

[17:22] <nwc10> or the state of the JVM work

[17:23] <timotimo_> what's the occasion to wonder about him?

[17:23] *** rurban joined
[17:23] <nwc10> nothing particularly special *today*

[17:24] <[Coke]> diakopter: seems like we shouldn't act differently if the program has a trailing newline.

[17:24] *** raiph left
[17:25] *** atroxaper left
[17:28] *** rurban left
[17:28] *** tgt left
[17:45] *** spider-mario joined
[17:48] <[Coke]> https://rt.perl.org/rt3/Ticket/Display.html?id=105004 - i disagree that saying nothing else derives from it means that nothing else CAN derive from it.

[17:48] <[Coke]> r: class A is Whatever { ... }

[17:49] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤The following packages were stubbed but not defined:␤    A␤at /tmp/ZH75OXcek5:1␤------> class A is Whatever { ... }⏏<EOL>␤    expecting any of:␤        argument list␤        postfix␤        statement end␤        sta…

[17:49] <[Coke]> r: class A is Whatever {  }

[17:49] <camelia> rakudo b2072f:  ( no output )

[17:50] *** SHODAN left
[17:51] *** tgt joined
[17:52] *** SHODAN joined
[17:53] *** tgt left
[17:55] *** census joined
[18:00] <jnthn> [Coke]: agree

[18:09] <colomon> tadzik: ping?

[18:09] <tadzik> colomon: pong?

[18:09] <colomon> tadzik: is there some standard way to update a panda install?

[18:09] <tadzik> hmm

[18:09] <colomon> I'm trying to do it and not succeeding at all.

[18:09] <tadzik> other than rebootstrap.pl?

[18:09] <tadzik> panda install panda should work too

[18:10] <colomon> pandabrew/bin/pandabrew panda install panda===SORRY!===

[18:10] <colomon> Missing or wrong version of dependency 'lib/Shell/Command.pm'

[18:10] <tadzik> bah

[18:10] <tadzik> rebootstrap is the way to go, then

[18:10] <colomon> that's after I did pandabrew rebootstrap

[18:10] <tadzik> oh

[18:10] <tadzik> well, crap

[18:10] <tadzik> maybe pandabrew is broken too :/

[18:10] <colomon> which seemed to work but didn't leave me with an update-to-date panda

[18:10] <tadzik> I broke all the things, apparently

[18:12] <colomon> trying a fresh init of pandabrew

[18:13] <colomon> ==> Bootstrapping Panda

[18:13] <colomon> ===SORRY!===

[18:13] <colomon> Missing or wrong version of dependency 'lib/Shell/Command.pm'

[18:13] <timotimo_> delete all blib folders? :S

[18:14] <colomon> down below the rakudo directory, or somewhere else?

[18:14] <timotimo_> good question

[18:14] <sorear> good * #perl6

[18:14] <yoleaux> 11:09Z <jnthn> sorear: lexotic gather/take will need to be supported at some point, though Rakudo doesn't do that yet today so if we don't have it from the start it's not a regression compared to Rakudo on Parrot.

[18:15] <labster> good morning, sorear, *

[18:16] <tadzik> colomon: it may be that I broke it :(

[18:16] <tadzik> don't have time to look at it right now

[18:20] <colomon> tadzik: I warn you that I may fix it.  ;)

[18:23] *** rurban joined
[18:25] *** rurban1 joined
[18:28] *** rurban left
[18:29] * colomon is finding this bug VERY frustrating

[18:29] *** raiph joined
[18:36] *** kingbeast left
[18:41] <masak> [Coke]: agreed. what you're experiencing with RT is inexcusably bad, and I have no interest in defending it.

[18:53] *** census left
[18:53] *** benabik left
[18:54] *** benabik joined
[18:59] * TimToady has no interest in staying away any longer...

[18:59] <TimToady> *awake, grr

[18:59] *** PacoAir joined
[18:59] <timotimo_> stay away from sleep? :)

[19:05] *** Guest1337 joined
[19:08] *** dmol joined
[19:12] *** tomyan left
[19:15] <masak> I found http://okmij.org/ftp/ML/generalization.html very interesting, and others here might too. it draws parallels between HM type checking and GC dependency tracking.

[19:17] <timotimo_> what's HM mean?

[19:18] *** skids left
[19:20] <masak> timotimo_: https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner

[19:20] *** skids joined
[19:24] *** tomyan joined
[19:25] <sorear> okmij! \o/

[19:25] <sorear> hi masak

[19:26] *** rindolf left
[19:27] <masak> hejhej, sorear ;)

[19:27] *** rindolf joined
[19:33] <sorear> oh, it's not just hehe?

[19:33] * sorear is not super up to speed on swedish phonology

[19:39] *** Guest1337 left
[19:39] * sorear starts putting togeter a gist of design decisions for jnthn

[19:46] *** census joined
[19:47] *** kaare_ left
[19:47] *** tomyan left
[19:48] <masak> sorear: all Swedish vowels are monophthongs.

[19:49] <jnthn> .oO( even in Skane? )

[19:49] <masak> hm, no :)

[19:49] <jnthn> ;-)

[19:50] <masak> ...but I was talking about *Swedish*... :P

[19:50] *** raiph left
[19:51] *** raiph joined
[19:51] <sorear> jnthn: about how much time do I have to finish this and get you to read it while you're still awake?

[19:52] <jnthn> sorear: tbh, if it needs me to think, it'd be better for me to look at it when I wake up tomorrow

[19:52] <jnthn> sorear: I'm physically awake at the moment but have the concentration of a goldfish... :)

[19:55] <sorear> tehee

[19:57] * arnsholt was lucky and got some melatonin on the flight back

[19:57] <arnsholt> I'm a bit weird today, but not as bad as I feared, by any means

[19:57] <sorear> jnthn: ok, well, let me just ask the one thing that I'm sort of blocking on: I want to expose saved states to NQP/QAST as a SixModelObject, ideally directly invocable but I'll settle for needing a nqp::cont_invoke op.  what should I use as a model for this?  do I need to do anything with HLLConfig/KnowHOWBootstrapper?

[19:58] <sorear> arnsholt: \o/ safe and sound at home in/near Oslo?

[19:59] <jnthn> sorear: KnowHOWMethods is probably more useful

[19:59] <arnsholt> Yeah, arrived yesterday morning (or afternoon, US time)

[20:00] <colomon> o/

[20:00] <jnthn> sorear: Shows how to get a CodeRef that points to something of your choice.

[20:00] <arnsholt> The flight wasn't too boring either, since I slept almost the entire time =D

[20:00] <arnsholt> \o colomon

[20:02] <jnthn> sorear: Currently, all invokable things are either a CodeRef directly, or something with an InvocationSpec in the STable that knows how to produce one.

[20:03] <jnthn> (Which may be by looking up an attribute, or saying "oh, call this thing instead")

[20:05] *** mrallen1 joined
[20:05] <sorear> so where would I create the STable for the saved states?

[20:06] <jnthn> Create...what? :)

[20:06] <jnthn> STables are always created as part of creating a new type, never "directly"

[20:06] <jnthn> nqp::newtype is the op typically used to do that.

[20:06] <jnthn> I'm not sure I follow what you're trying to do, though.

[20:07] <jnthn> Oh, you want a different type that captures the saved states?

[20:10] <jnthn> If so, and you want whatever types in there, it may be easiest to create a different REPR, and go with an nqp::continvoke op that knows what to do with it.

[20:10] <sorear> if the saved states are to be exposed to NQP, presumably they need STables, ya?

[20:10] *** tomyan joined
[20:10] <jnthn> Well, they need to be in some kind of SixModelObject

[20:11] <jnthn> And that has to have a type, and s-tables are per type.

[20:11] <sorear> I don't really care much what they look like as long as they can be stored and passed around by NQP code

[20:11] <jnthn> OK

[20:11] <colomon> .ask tadzik I deleted rakudo and reinstalled it from scratch, and now panda is happily working again.

[20:11] <yoleaux> colomon: I'll pass your message to tadzik.

[20:11] <jnthn> Then create a REPR that looks as you wish, then see where BOOTCode is created and create a BOOTCont the same way.

[20:11] <sorear> so presumably I need one STable for all my saved state objects

[20:11] <sorear> OK

[20:12] <jnthn> (The BOOTCode setup is the step that creates the STable)

[20:19] *** PacoAir left
[20:22] *** pecastro left
[20:23] *** census left
[20:30] <tadzik> yoleaux: pass me my message

[20:30] <yoleaux> 20:11Z <colomon> tadzik: I deleted rakudo and reinstalled it from scratch, and now panda is happily working again.

[20:30] <tadzik> colomon: well, good to hear :)

[20:30] <colomon> tadzik: you've still got a sort of bug in there:  just got No such method 'stage' for invocant of type 'X::IO::Unlink'

[20:30] <colomon> during the smoke test

[20:30] <tadzik> fffuu

[20:31] <tadzik> colomon: what module does that?

[20:31] <colomon> Yarn

[20:31] <tadzik> or, near what module does that happen?

[20:31] <tadzik> hmm

[20:31] <tadzik> I did a full smoke before I commited my changes

[20:32] <sorear> tadzik! o/

[20:32] <colomon> tadzik: related issue: you changed my smoker patch so that it once again does not catch exceptions other than X::Panda.  Only now that's implicit instead of explicit.

[20:34] <tadzik> sorear: hey :)

[20:34] <tadzik> colomon: I wanted it to be implicit

[20:34] <tadzik> or, well, no

[20:34] <tadzik> I wanted it to crash smoker

[20:34] <tadzik> so that we may notice if anything else is broken

[20:35] <colomon> tadzik: ah.  well, this certainly does that.

[20:35] <tadzik> yep :)

[20:35] <tadzik> I need to attend to some $university stuff, I'll look at it tomorrow maybe

[20:36] <sorear> nqp: (-> $x { say($x+1) })(2)

[20:36] <camelia> nqp: OUTPUT«3␤»

[20:36] <sorear> nqp-jvm: (-> $x { say($x+1) })(2)

[20:36] <camelia> nqp-jvm: OUTPUT«3␤»

[20:45] <lue> Is there any particular reason why I can't do augment class A { supersede method B { } } ? (this would be to, say, modify the messages from Perl 6's X:: classes)

[20:46] <timotimo_> are you going to work on X::Offensive? :D

[20:46] <timotimo_> fwiw, i think you can does a role onto the class, can't you?

[20:46] <masak> lue: just 'method B' should work fine, if you ask me.

[20:47] <masak> no 'supersede' necessary.

[20:47] <lue> r: use MONKEY_TYPING; class A { method B { say "hi" } }; A.new.B; { augment class A { method B { say "O" } }; A.new.B; }

[20:47] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Package 'A' already has a method 'B' (did you mean to declare a multi-method?)␤at /tmp/sjoBWUoKn5:1␤------> ␤»

[20:47] <timotimo_> r: role offend { sub message { "you are stupid if you think that's going to work" } }; X::Redeclaration does offend; eval q{my &a; multi a { };};

[20:47] <camelia> rakudo b2072f: OUTPUT«Cannot use 'does' operator with a type object.␤  in sub infix:<does> at src/gen/CORE.setting:13624␤  in sub infix:<does> at src/gen/CORE.setting:13606␤  in block  at /tmp/Qtrw3PI93X:1␤␤»

[20:47] <timotimo_> ah, so that doesn't work.

[20:48] <labster> timotimo_'s classes don't follow the CoC.

[20:48] <timotimo_> r: use MONKEY_TYPING; role offend { sub message { "you are stupid if you think that's going to work" } }; augment class X::Redeclaration { does offend }; eval q{my &a; multi a { };};

[20:48] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Undeclared routine:␤    does used at line 1␤␤»

[20:48] <timotimo_> isn't there a way to put roles into the class body?

[20:48] <timotimo_> r: use MONKEY_TYPING; role offend { sub message { "you are stupid if you think that's going to work" } }; augment class X::Redeclaration does offend { }; eval q{my &a; multi a { };};

[20:48] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Method 'is_dispatcher' not found for invocant of class 'Any'␤»

[20:49] <masak> lue: that may or may not be correct behavior. I'm not sure.

[20:49] <timotimo_> oh, whoops. i recongize wree that comes from. jnthn just improved LTA for self-deriving classes or something and added that check

[20:50] * lue frequently finds wanting much better supersede and augment keywords

[20:50] <lue> *finds himself

[20:51] <lue> .oO(This makes it really hard to create things like X::Condescending and X::NothingsWrongWhyDoYouAsk)

[20:53] <labster> I never saw a real answer to my question last night:  should the error get thrown here?

[20:53] <labster> r: sub foo { X::IO::Dir.new(path=>'a', os-error=>'b').fail }; my @a := foo(); 1;

[20:53] <camelia> rakudo b2072f: OUTPUT«Failed to get the directory contents of 'a': b␤  in method sink at src/gen/CORE.setting:10169␤  in method BUILDALL at src/gen/CORE.setting:801␤  in method bless at src/gen/CORE.setting:743␤  in method new at src/gen/CORE.setting:728␤  in method new at src/gen/CORE.…

[20:53] <timotimo_> there's a bug about that feature

[20:53] <timotimo_> pm also highlighted that in his parallelism talk

[20:57] *** twigel left
[21:00] *** mrallen1 left
[21:00] <masak> hm, it'd be good if $str.subst in void context warned... :)

[21:01] <timotimo_> as in: "subst is not mutative"?

[21:03] <colomon> perhaps it was called for it's side effects. 

[21:03] * colomon should be careful with sarcasm...

[21:05] <labster> r: sub foo { X::IO::Dir.new(path=>'a', os-error=>'b').fail }; my $a := foo(); 1;

[21:05] <camelia> rakudo b2072f:  ( no output )

[21:06] *** lue left
[21:07] <labster> okay, I'm calling the array binding thing a rakudobug

[21:08] *** lue joined
[21:10] *** Guest1337 joined
[21:10] <timotimo_> r: say "foo 'bar'" ~~ s/"'"/"\'"/

[21:10] <camelia> rakudo b2072f: OUTPUT«Cannot modify an immutable value␤  in sub infix:<=> at src/gen/CORE.setting:13602␤  in block  at /tmp/sD0100r5kH:1␤␤»

[21:10] <timotimo_> er ...

[21:10] <timotimo_> r: given "foo 'bar'" { say s/"'"/"\'"/ }

[21:10] <camelia> rakudo b2072f: OUTPUT«Cannot modify an immutable value␤  in sub infix:<=> at src/gen/CORE.setting:13602␤  in block  at /tmp/h64heunBN2:1␤␤»

[21:11] <timotimo_> someone's missing an "is copy" or something?

[21:11] <jnthn> No; use .subst for this case

[21:12] *** rurban1 left
[21:12] * timotimo_ does it with trans instead

[21:12] <timotimo_> hm, that's not right

[21:17] <jnthn> sleep &

[21:18] *** lizmat joined
[21:21] <lizmat> *sigh* we missed our plane, so we will have to enjoy Texas for one more day

[21:21] <tadzik> aw

[21:21] <lizmat> torrential rains caused the highway to flood, so it took us 1 hour for the last 3 miles to the airport

[21:21] <lizmat> enough to miss our window with about 5 minutes  :-(

[21:22] <labster> the last mile is always the slowest

[21:22] <lizmat> so I guess I'll be hacking some more today

[21:22] <labster> lizmat++

[21:22] <tadzik> the rain flooded subawy here in warsaw today

[21:22] <tadzik> tnij.org/vzmu

[21:22] <tadzik> err, http://tnij.org/vzmu clickable

[21:23] <lizmat> get an early sleep so that we're better on track when we get back in NL]

[21:24] <lizmat> at the deepest point, there was about 35 cm of water on the highway…  our Dodge could take that, but slowly  :-)

[21:25] <lizmat> anyways, first some dinner&

[21:26] *** spider-mario left
[21:28] <masak> oh noes not water in the subway :(

[21:28] <timotimo_> is there a module that properly does shell-quoting? >_<

[21:29] <timotimo_> because i totally escaped ' inside '' quotes as \' and when it didn't work i tried to escape ( and ) with \es ...

[21:29] <sorear> proper shell quoting...for which shell? :/

[21:30] <timotimo_> well, if you use the "shell" command, you get /bin/sh, no? how many systems have /bin/sh as csh or zsh or fish?

[21:31] <sorear> my /bin/sh is bash

[21:31] <sorear> also doesn't it use $SHELL ?

[21:31] <timotimo_> don't think so

[21:31] <timotimo_> sh: nosuchcommand: command not found

[21:31] <timotimo_> my $SHELL is /bin/zsh, though

[21:32] <sorear> tadzik: did you take that picture?

[21:32] <geekosaur> I can't imagine \e ever being right for shell quoting

[21:33] <tadzik> sorear: nope

[21:33] <tadzik> sorear: for what is worth, I can only assume it's authentic, and taken today

[21:34] <tadzik> but it seems to come from tvn, which is a news network

[21:39] *** woolfy joined
[21:48] *** raiph left
[21:51] <labster> I just read S22.  There's .JIB files and CPAN6? o.O

[21:53] <tadzik> ...yeah..

[21:53] <flussence> that file is mostly conjecture and it hasn't been touched for 2.5 years

[21:53] <eternaleye> Sadly, nobody seems to have taken a liking to the cut of .JIB :P

[21:54] *** dmol left
[21:54] <flussence> and there is a CPAN6, but I've never seen any activity from it in all the time I've been here

[21:54] <lue> also, the CPAN6.org site is very old. "CPAN6 is not even usable on the moment (as is Perl6)" indeed.

[21:55] <labster> more like 4 years ago

[21:56] <lue> .oO(Panda + modules.perl6.org is a better CPAN6 than CPAN6)

[21:59] <labster> http://www.theregister.co.uk/2013/06/08/facebook_cloud_versus_cloud/  Finally, my meteorology experience is useful in cloud computing.

[22:00] <masak> :)

[22:03] *** lustlife left
[22:06] <sorear> at what point do we send a mail to MARKOV and politely ask him to remove the site? :/

[22:08] *** tgt joined
[22:08] <masak> won't be long now, I think.

[22:09] <masak> at least remove the formulation that Perl 6 isn't usable at the moment.

[22:12] *** rurban joined
[22:25] *** census joined
[22:25] *** raiph joined
[22:27] <Tene> timotimo_: \ is not a significant character inside '' quotes.  The ONLY meaningful character inside '' quotes is ' which means "end quote".  You escape ' as '\''

[22:29] <timotimo_> no

[22:29] <timotimo_> you escape ' as ''

[22:29] <Tene> No, that just parses as two adjacent quoted strings.

[22:29] <lue> S02:4519 : "Only range operations will be compromised by an unknown foreign collation order, such as a system that sorts "delta" after "gamma"." But... isn't delta after gamma in the Greek alphabet?

[22:30] <Tene> Try it and see.

[22:31] <timotimo_> oh, it must be zsh-specific.

[22:32] <timotimo_> but!

[22:32] <Tene> Yes, that's not sh quoting.

[22:32] <timotimo_> echo 'foo\'bar' will end the line and give me a prompt for another line, so that didn't work

[22:32] <timotimo_> (in sh)

[22:32] <timotimo_> and echo 'foo\'bar'' will give me foo\bar

[22:33] <lue> Am I right in thinking that should be "'delta' before 'gamma'" instead?

[22:33] <Tene> Yes, because as I said, \ is NOT an escape character in '' quotes.  There are no escape chars in '' quotes.  That is three tokens, 'foo\'  bar  '

[22:33] <Tene> In '' quotes, all characters are literal except for ' which only means "end quote" and nothing else.

[22:33] <colomon> https://en.wikipedia.org/wiki/Greek_alphabet -- looks like it to me, lue

[22:34] <timotimo_> oh yikes

[22:34] <Tene> OH, you read my initial example as the entire quote, not as just the escape

[22:35] <timotimo_> yes, i did. fail me :)

[22:35] <Tene> For example "don't" would be 'don'\''t'

[22:35] <timotimo_> good example.

[22:35] <Tene> That makes way more sense now.  Sorry about that

[22:35] *** rurban left
[22:36] *** tomyan left
[22:39] <masak> that 'delta' comes after 'gamma' feels perfectly natural to me. probably because I ingested a chunk of Russian at an early impressionable age :)

[22:39] * masak .oO( a be ve ge de... )

[22:40] <dalek> specs: d259755 | lue++ | S02-bits.pod:

[22:40] <dalek> specs: [S02] Correct minor thinko.

[22:40] <dalek> specs: 

[22:40] <dalek> specs: Delta does, in fact, come after gamma normally, not vice versa.

[22:40] <dalek> specs: review: https://github.com/perl6/specs/commit/d259755849

[22:41] <lue> Me too, because I for some reason have memorized the first four letters of the greek alphabet: alpha beta gamma delta

[22:41] <geekosaur> ...epsilon zeta eta...

[22:43] <masak> it does match the collation order of the Cyrillic script quite closely.

[22:43] <Juerd> ...theta iota kappa lambda...

[22:44] <Juerd> masak: Same for the latin script.

[22:44] <masak> troo.

[22:44] <masak> except for that "g d" thing.

[22:44] <Juerd> ABDEIKLMNOPRSTU

[22:45] <Juerd> phi => v could work too.

[22:45] <masak> hey, where did G go?

[22:45] <lue> Also, does anyone around know about the (perlcabal.org|feather.perl6.nl)/syn spec generator? I don't think it's working (S02/Literals/Interpolation Rules/Twigils still contains a duplicate of the first Twigils section (whereas in the spec Twigils #2 it's appropriately whittled down)

[22:45] <Juerd> masak: Not listed because it's not in the same relative position in both alphabets :)

[22:46] <masak> ah :)

[22:46] <sorear> timotimo_: as far as I'm concerned, if you ever want to programmatically shell-quote something, you're doing it wrong.

[22:46] *** rindolf left
[22:47] <timotimo_> i could have ported ruby-parrot (what was that called again?) to use 6model, so it could be used with rakudo again ...

[22:48] <Tene> Cardinal

[22:48] <timotimo_> that one

[22:48] <Tene> I started on that once; I wonder if the branch is still there.

[22:49] <timotimo_> is that like 1 year or maybe 2 years?

[22:49] *** tgt left
[22:49] <Tene> I don't understand the question.

[22:50] <timotimo_> ago*

[22:50] <Tene> No idea.

[22:55] <Tene> timotimo_: You can find it on maybe this issue, or one linked from it: https://github.com/cardinal/cardinal/issues/41

[22:56] <sorear> heya Tene

[22:56] <Tene> sup sorear

[22:56] <sorear> I got JNQP passing all tests!  so excited.

[22:56] <Tene> :D

[22:56] <sorear> currently working on delimited continuations for NQP

[22:57] <sorear> *JNQP

[22:57] <sorear> will use that to implement GatherIter later

[22:57] <masak> \o/

[22:57] *** tomyan joined
[22:57] <Tene> Hmm.  I wonder if there's anything in the rakudo repo still written by me.

[22:59] *** dalek left
[22:59] *** census left
[22:59] <sorear> BinGOs++

[22:59] *** tomyan left
[23:00] *** dalek joined
[23:00] *** ChanServ sets mode: +v dalek

[23:00] *** census joined
[23:02] <diakopter> BinGOs++

[23:02] <masak> Tene: it seems that most of your code was PIR, which has been mostly reworked into NQP code.

[23:02] <diakopter> sorear: have you tried using clang on macosx to build moarvm?

[23:03] *** tomyan joined
[23:03] *** Kelder left
[23:03] <diakopter> I'm curious how quickly it compiles it compared to gcc

[23:04] <diakopter> sorear: are you using stack saving for the continuations?

[23:05] <sorear> diakopter: i've not tried to build moarvm

[23:06] <sorear> however, my cc is clang, so when I do ... :)

[23:06] *** tomyan left
[23:07] *** yoleaux left
[23:09] <sorear> diakopter: (stack saving) "it's complicated"

[23:12] <diakopter> well it's just I was discussing it with jnthn Friday night and that's how he wanted it to be done in jnqp

[23:12] <diakopter> sorear: ^

[23:13] <sorear> diakopter: I'm following jnthn's plan fairly closely; we discussed that on sunday, I think

[23:13] *** yoleaux joined
[23:13] *** ChanServ sets mode: +v yoleaux

[23:16] <diakopter> sorear: today?

[23:17] <sorear> diakopter: hackathon day 2 of 4; a week ago

[23:20] *** Ayiko joined
[23:20] <diakopter> sorear: by "it's complicated" do you mean you don't want to talk about it?

[23:20] <diakopter> .. because it didn't answer my question, and I still wanted to know the answer

[23:22] <sorear> diakopter: I thought "I'm following jnthn's plan fairly closely" would be a good enough answer

[23:22] <sorear> it's hard to explain, and if jnthn already explained it directly to you, I don't want to duplicate that

[23:25] *** Blahhh joined
[23:26] *** Blahhh left
[23:27] *** Blahhh joined
[23:27] *** Blahhh left
[23:28] <dalek> rakudo/nom: d4e9ae8 | (Elizabeth Mattijsen)++ | src/core/Any.pm:

[23:28] <dalek> rakudo/nom: Make {}:kv {}:p {}:k {}:v behave according to spec

[23:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d4e9ae8961

[23:28] *** Blahhh joined
[23:28] *** Blahhh left
[23:30] *** raiph left
[23:30] <lizmat> masak, sorear: I'll contact markov when I'm back in NL

[23:32] *** wbill joined
[23:32] *** wbill left
[23:32] <lue> for the record, my only concern with CPAN6 is the "Perl 6 is not useable" remark. Everything else is fine by me.

[23:32] <masak> +1

[23:33] <masak> lizmat++

[23:34] *** rurban joined
[23:34] *** wbill joined
[23:34] *** wbill left
[23:35] *** wbill joined
[23:36] *** wbill left
[23:37] *** wbill joined
[23:37] *** wbill left
[23:38] *** wbill joined
[23:38] *** rurban left
[23:38] *** rurban joined
[23:39] *** pecastro joined
[23:41] <dalek> roast: 2f1a6eb | (Elizabeth Mattijsen)++ | S32-hash/exists-adverb.t:

[23:41] <dalek> roast: Unfudge {}:exists tests that now work

[23:41] <dalek> roast: review: https://github.com/perl6/roast/commit/2f1a6eb71f

[23:51] *** Chillance left
[23:52] <colomon> .say tadzik I hacked around the error so I could get the rest of the smoke test run in.  There is something interesting going on here... Several tests are reaching the "tests failing" stage even though their prereqs are failing *their* tests.  DateTime::Utils is an example.

[23:53] <colomon> .say tadzik When I try to install using panda they detect the problem and fail in the prereq stage as expected.

[23:54] <colomon> .ask   tadzik I hacked around the error so I could get the rest of the smoke test run in.  There is something interesting going on here... Several tests are reaching the "tests failing" stage even though their prereqs are failing *their* tests.  DateTime::Utils is an example.

[23:54] <yoleaux> colomon: I'll pass your message to tadzik.

[23:54] <colomon> .ask member:tadzik When I try to install using panda they detect the problem and fail in the prereq stage as expected.

[23:54] <yoleaux> colomon: What kind of a name is "member:tadzik"?!

[23:54] <colomon> .ask tadzik When I try to install using panda they detect the problem and fail in the prereq stage as expected.

[23:54] <yoleaux> colomon: I'll pass your message to tadzik.

[23:56] <lizmat> colomon: fwiw, I think yoleaux only keeps one message per user to a another user

[23:56] <lizmat> .ask colomon: one

[23:56] <yoleaux> lizmat: What kind of a name is "colomon:"?!

[23:57] <lizmat> .ask colomon one

[23:57] <yoleaux> lizmat: I'll pass your message to colomon.

[23:57] <lizmat> .ask colomon two

[23:57] <yoleaux> lizmat: I'll pass your message to colomon.

[23:57] <colomon> o/

[23:57] <yoleaux> 23:57Z <lizmat> colomon: one

[23:57] <yoleaux> 23:57Z <lizmat> colomon: two

[23:57] <lizmat> I guess I was wrong

[23:57] <lizmat> :-)

[23:57] <colomon> lizmat++ # science

