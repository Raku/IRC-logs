[00:01] *** gdey joined
[00:02] *** thou left
[00:02] *** thou_ joined
[00:03] *** FROGGS left
[00:03] *** bonsaikitten is now known as DrEeevil

[00:11] *** Gruber joined
[00:11] <Teratogen> r: 1 while fork

[00:11] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Undeclared routine:␤    fork used at line 1␤␤»

[00:11] <Teratogen> drat

[00:13] *** kbenson1 joined
[00:13] *** kbenson left
[00:16] *** colomon joined
[00:19] <Teratogen> how do I write a fork bomb in perl 6?

[00:19] *** jeffreykegler joined
[00:25] *** ajr_ left
[00:26] <timotimo> very carefully

[00:29] <Teratogen> you can't do 1 while fork in perl 6?

[00:29] <Teratogen> what kind of language is this!?

[00:29] <timotimo> ;)

[00:30] <timotimo> you can Inline::C fork();

[00:30] <timotimo> or NativeCall fork

[00:30] <timotimo> parrot may explode

[00:32] *** btyler left
[00:34] <Teratogen> I thought fork would stil be a builtin function

[00:34] <Teratogen> does perl 6 HAVE builtin functions?

[00:34] <Teratogen> built in

[00:35] <Teratogen> excuse me

[00:35] <timotimo> r: say "hello"; # do you consider this "built in"?

[00:35] <camelia> rakudo b2072f: OUTPUT«hello␤»

[00:35] <Teratogen> r: say('heya');

[00:35] <camelia> rakudo b2072f: OUTPUT«heya␤»

[00:35] <Teratogen> I guess

[00:35] <timotimo> *technically* it's in the setting, which is written in perl6 itself, so you *might* consider it not built in

[00:35] <timotimo> r: nqp::say("testing")

[00:35] <camelia> rakudo b2072f: OUTPUT«testing␤»

[00:35] <timotimo> this, however, is totally built in

[00:36] <Teratogen> r: say sin(.6);

[00:36] <camelia> rakudo b2072f: OUTPUT«0.564642473395035␤»

[00:36] <Teratogen> thank god, it works!

[00:36] *** raiph left
[00:37] *** raiph joined
[00:38] *** jeffreykegler left
[00:39] <Teratogen> r: say atan2(1,2);

[00:39] <camelia> rakudo b2072f: OUTPUT«0.463647609000806␤»

[00:40] <Teratogen> r: say ln(e);

[00:40] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Undeclared routine:␤    ln used at line 1. Did you mean '&lc'?␤␤»

[00:40] <Teratogen> r: say log(e);

[00:40] <camelia> rakudo b2072f: OUTPUT«1␤»

[00:40] <Teratogen> r: say e;

[00:40] <camelia> rakudo b2072f: OUTPUT«2.71828182845905␤»

[00:40] <Teratogen> cool

[00:41] <Teratogen> r: say 1+3i

[00:41] <camelia> rakudo b2072f: OUTPUT«1+3i␤»

[00:42] <Teratogen> very very nice

[00:43] <Teratogen> r: say pi;

[00:43] <camelia> rakudo b2072f: OUTPUT«3.14159265358979␤»

[00:43] <Teratogen> r: say phi;

[00:43] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Undeclared routine:␤    phi used at line 1␤␤»

[00:43] <Teratogen> hmmm

[00:44] <timotimo> i'm going to bed

[00:44] <Teratogen> does the golden ratio have a constant?

[00:44] <timotimo> have fun with p6 :)

[00:44] <Teratogen> sure thanks

[00:52] *** benabik joined
[00:54] <RedditAnalytics> r: say pi**e

[00:54] <camelia> rakudo b2072f: OUTPUT«22.4591577183611␤»

[00:55] *** sqirrel joined
[00:55] *** tgt left
[00:57] *** tgt joined
[00:59] *** sqirrel left
[01:02] <[Coke]> r: say 1, e, pi...*

[01:02] <camelia> rakudo b2072f: OUTPUT«Unable to deduce sequence␤  in method sink at src/gen/CORE.setting:10169␤  in block  at src/gen/CORE.setting:13701␤  in any coro at src/gen/CORE.setting:6040␤  in method reify at src/gen/CORE.setting:6022␤  in method reify at src/gen/CORE.setting:5761␤  in method r…

[01:02] *** anuby joined
[01:04] <Teratogen> r: say e**(pi*i)

[01:04] <camelia> rakudo b2072f: OUTPUT«-1+1.22460635382238e-16i␤»

[01:04] <Teratogen> WHAT!

[01:04] <Teratogen> shouldn't that be -1 exactly?

[01:05] <geekosaur> not even p6 can fix floating point

[01:10] *** tgt left
[01:39] *** colomon left
[01:42] <sorear> good * #perl6

[01:42] *** colomon joined
[01:44] <sorear> o/

[01:44] <colomon> \o

[01:52] *** colomon left
[01:53] *** colomon joined
[01:56] *** colomon left
[01:56] *** grondilu left
[02:00] *** skids left
[02:08] *** colomon joined
[02:11] *** btyler joined
[02:20] *** lustlife joined
[02:23] *** lizmat joined
[02:31] <colomon> \o

[02:31] <colomon> \o\o\o\o

[02:31] <lizmat> o/

[02:31] <sorear> /o/o/o

[02:33] *** _jaldhar joined
[02:33] *** colomon left
[02:35] *** skids joined
[02:50] *** _jaldhar left
[02:53] *** _jaldhar joined
[03:08] *** konundra left
[03:17] *** logie joined
[03:18] *** preflex left
[03:19] *** preflex_ joined
[03:19] *** ChanServ sets mode: +v preflex_

[03:19] *** preflex_ is now known as preflex

[03:25] *** labster joined
[03:30] <sorear> o/ labster

[03:31] <labster> \o sorear

[03:31] <labster> just made it back to the dorms

[03:32] *** lustlife left
[03:35] *** konundra joined
[03:37] *** logie left
[03:38] <labster> aww, no one fixed nqp yet

[03:39] <labster> I guess it's still a busy night out there, but I came back. I feel like quiet right now.  Probably going to write a blog.

[03:39] <lizmat> everybody is still in the restaurant, afaik

[03:39] <labster> I guess I have to give a talk next year to get in with the cool kids.

[03:41] <sorear> labster: nqp is broken?

[03:42] <labster> yep.  doesn't compile on my machine; complains about lack of ICU

[03:44] *** FROGGS joined
[03:44] <FROGGS> [Coke]: you could try --ll-exception

[03:46] <eternaleye> Teratogen: You know, every time you confuse camelia, I half expect someone to jump in with "What are you doing to my baby?!" :P

[03:46] <labster> well, it's correct in that I don't have ICU installed, but it's not a requirement.

[03:46] <eternaleye> Teratogen: (Warning: my puns may be considered a sanity hazard)

[03:48] *** adu joined
[03:49] *** odoacre_ joined
[03:50] *** atroxaper joined
[03:53] <lizmat> labster: that would only mean a few more ICU tests skipped

[03:54] <labster> not running tests though; nqp fails on turning src/stage2/gen/NQPP5QRegex.nqp to pir

[03:55] <labster> so compile fails

[03:55] *** Chillance left
[04:17] *** lizmat left
[04:26] *** Psyche^ joined
[04:28] <masak> FROGGS: if you're interested: http://strangelyconsistent.org/blog/the-thing-with-nim

[04:29] *** Patterner left
[04:29] *** Psyche^ is now known as Patterner

[04:30] * FROGGS reads it

[04:30] *** btyler left
[04:30] <FROGGS> "removing a positive number of stones" :P

[04:31] <masak> that's funny? :)

[04:31] <labster> masak should have tried removing a negative amount of stones with people who didn't know the rules yet

[04:32] <lue> "Oh dear, it seems I might have no way to win the game normally. I think I'll take a few negative stones to prevent that."

[04:32] <TimToady> note also the possibility of contributing to http://rosettacode.org/wiki/Game_of_Nim, though that's a draft task that should probably have the "golf" part of the task description excised.

[04:33] <FROGGS> masak: it is of course accurate, but it is funny to me

[04:34] <lue> I agree with the talk page for that RC task. Also, "as short as possible" is very subjective, at least to me.

[04:34] <masak> FROGGS: I see :) I might be more of a mathematician than I realize.

[04:34] <TimToady> I note that the racket example doesn't try to golf

[04:35] <FROGGS> I guess I'm going to bed now, otherwise I accidentially hit some keys with my forehead

[04:35] <TimToady> o/

[04:35] <FROGGS> :o)

[04:35] <TimToady> it was nice to meet you, btw

[04:35] <FROGGS> gnight

[04:35] <FROGGS> thanks sir

[04:35] <FROGGS> only can say they same..

[04:35] <FROGGS> TimToady: are you still around the next days?

[04:36] <lue> .oO(Try describing it as "adding a negative number of stones" to throw people off! Fun for the family!)

[04:36] <TimToady> leaving Saturday

[04:36] <FROGGS> me too

[04:36] <lue> ♞, FROGGS o/

[04:36] *** dylanwh joined
[04:36] <sorear> ditto

[04:36] <sorear> welcome dylanwh :)

[04:36] <FROGGS> I think I'll enjoy the hackathon

[04:36] <FROGGS> cool!

[04:36] <labster> hackathon++

[04:36] <FROGGS> gnight anyway

[04:36] *** FROGGS left
[04:37] *** xinming joined
[04:39] <dylanwh> sorear: hi

[04:39] <masak> 'night, FROGGS

[04:41] <jnthn> sorear: I'm here on IRC for a moment if you have nqp-jvm questions

[04:43] <sorear> jnthn: yay.  trying to figure out the relationship beteen QAST::CompilerJAST and QAST::Var and where variable refs are compiled

[04:43] <jnthn> QAST::Var is just an AST node

[04:43] <sorear> I've golfed package variables out of 24-modules.t; it's doing weird stuff with shadowing

[04:43] <jnthn> QAST::CompilerJAST is what translates it to something. Of note, the method compile_var.

[04:44] <sorear> module foo { sub bar() { ... } } # in ..., $?PACKAGE gets compiled as $?OUTER::OUTER::PACKAGE and winds up referring to GLOBALish

[04:45] <sorear> d'oh.  was seeing QAST::CompilerJAST as a Node subclass somehow... *blind*

[04:45] <jnthn> No, it's not

[04:45] <masak> it is suggestively named... :)

[04:46] <jnthn> ;)

[04:46] <jnthn> You expect me to be *consistent*? :P

[04:47] <lue> .oO(There was that vtablee...)

[04:48] *** woolfy joined
[04:48] <jnthn> o/ woolfy :)

[04:49] *** colomon joined
[04:50] <sorear> o/ colomon

[04:50] *** lustlife1 joined
[04:50] * TimToady is always consistent, except when he's not

[04:50] <colomon> \o

[04:50] *** woolfy left
[04:51] <colomon> sorear: I figure if I can sort out the smoker bug in the next five minutes, I still have time to save tonight's smoke run.  :)

[04:51] <PerlJam> TimToady: that's how you avoid the hobgoblins of foolish consistency!

[04:52] *** sqirrel joined
[04:54] <masak> as a proponent of the strangely consistent, I take exception to this making light of the foolishly consistent... :P

[04:55] *** mucker left
[04:57] *** zby_home joined
[04:59] <lue> .oO(The Inconsistently Consistent would like to have a word with you on the strangely but not the foolishly!)

[04:59] *** birdwindupbird joined
[05:02] <masak> lue: I schedule meetings constantly with the Inconsistently Consistent, but they never show up.

[05:04] * colomon gives up and goes to bed.

[05:04] <lue> that's very consistent. Which is inconsistent for the Inconsistently Consistent. Which is (consistent&!consistent) with their mission statement. I am shocked and undisturbed by their behavior.

[05:04] <lue> ♞, colomon o/

[05:05] *** birdwindupbird left
[05:11] <masak> ok, this day is now sufficiently awesome. I'm going to cap the number of impressions by going to bed. 'night, #perl6

[05:11] <lue> impressions? ♞ anyways, masak o/

[05:12] <sorear> o/ masak indeed

[05:14] *** sqirrel left
[05:19] <jnthn> 'night, #perl6

[05:20] <lue> ♞, jnthn o/

[05:25] *** adu left
[05:35] *** raiph left
[05:39] *** saxx11 joined
[05:40] *** birdwindupbird joined
[05:41] *** raiph joined
[05:42] *** Jun` joined
[05:42] *** Jun` left
[05:42] *** Jun` joined
[05:44] *** daniel-s joined
[05:45] *** Jun` left
[05:48] <sorear> nqp: my %h; %h<a>=1; %h<b>=2; say(%h)

[05:48] <camelia> nqp: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near "1; %h<b>=2"␤current instr.: 'panic' pc 14721 (src/stage2/gen/NQPHLL.pir:5232) (src/stage2/gen/NQPHLL.nqp:279)␤»

[05:48] <sorear> nqp: my %h; %h<a>:=1; %h<b>:=2; say(%h)

[05:48] <camelia> nqp: OUTPUT«Hash[0x8ecf2f4]␤»

[05:48] <sorear> nqp: my %h; %h<a>:=1; %h<b>:=2; for %h -> $a { say($a) }

[05:48] <camelia> nqp: OUTPUT«a␤b␤»

[05:50] *** tomyan joined
[05:56] *** Jun` joined
[05:58] *** Jun` left
[05:58] *** lustlife joined
[06:10] *** dmol left
[06:11] *** sqirrel joined
[06:22] *** zby_home left
[06:23] *** saxx11 left
[06:28] *** tomyan left
[06:28] *** sqirrel left
[06:29] <sorear> .ask jnthn dylanwh is kind of putting me on the spot here with a question whose answer is intuitively obvious but not easy to express ;) ;)  Why exactly cannot NativeCall functionality be used in CORE.setting?  (beyond the obvious "it's a module")

[06:29] <yoleaux> sorear: I'll pass your message to jnthn.

[06:30] *** crab2313 joined
[06:40] *** SamuraiJack joined
[07:02] *** kaleem joined
[07:03] *** domidumont joined
[07:07] *** arlinius left
[07:12] *** flaviusb joined
[07:17] *** flaviusb left
[07:28] *** fhelmberger joined
[07:32] *** flaviusb joined
[07:36] *** domidumont left
[07:37] *** domidumont joined
[07:37] *** flaviusb left
[07:38] *** crab2313 is now known as jinkela

[07:39] *** jinkela is now known as SanDiego

[07:41] *** SanDiego is now known as crab2313

[07:44] *** labster left
[07:44] *** flaviusb joined
[07:44] <flaviusb> r: say 1,1,2,3,5...*

[07:44] <camelia> rakudo b2072f: OUTPUT«Unable to deduce sequence␤  in method sink at src/gen/CORE.setting:10169␤  in block  at src/gen/CORE.setting:13701␤  in any coro at src/gen/CORE.setting:6040␤  in method reify at src/gen/CORE.setting:6022␤  in method reify at src/gen/CORE.setting:5761␤  in method r…

[07:48] *** flaviusb left
[08:02] *** flaviusb joined
[08:04] *** [particle] left
[08:07] *** flaviusb left
[08:07] *** arlinius joined
[08:21] *** flaviusb joined
[08:26] *** flaviusb left
[08:32] <tadzik> colomon: oh, so much backlog :)

[08:32] <yoleaux> 5 Jun 2013 19:53Z <colomon> tadzik: Line 45 of smoker (emmentaler) is $panda.ecosystem.project-get-state($x) ne 'absent' -- surely that should be eq instead of ne?  Otherwise we only test modules which are not in the ecoysystem.

[08:32] <yoleaux> 5 Jun 2013 19:54Z <colomon> tadzik: Also, something else seems to be borked in panda, because $panda.ecosystem.project-get-state($x) is returning "installed" for a module which panda does not report as installed.

[08:32] <yoleaux> 5 Jun 2013 20:05Z <colomon> tadzik: or it's possible that I do have it installed, and reporting it not installed from the panda list command was the error?  I am confused.

[08:33] <tadzik> %log{$p} = gen-result($! // 'chocolate cake'); # look at gen-result, you'll understand :)

[08:34] *** [particle] joined
[08:34] <tadzik> colomon: no, ne 'absent' is alright, if it's already installed we generate a positive result

[08:35] <tadzik> colomon: it's fine that smoker thinks something installed and panda doesn't. Things installed with smoker are removed afterwards

[08:36] <moritz> http://pragprog.com/magazines/2013-06/programming-elixir # another interesting language

[08:38] *** wtw joined
[08:41] *** flaviusb joined
[08:45] *** flaviusb left
[08:45] *** cosimo joined
[08:47] *** dakkar joined
[08:51] <mathw> Too many interesting languages!

[08:52] * mathw has been looking at Go a bit

[08:52] *** crab2313 left
[08:53] *** raiph left
[08:54] <mathw> That page doesn't make me interested in Elixir though

[08:54] *** crab2313 joined
[08:58] *** snearch joined
[09:00] *** flaviusb joined
[09:02] <mathw> what makes me interested is the metaprogramming stuff and protocols

[09:02] <mathw> unfortunately I find ruby-like syntax something of a turn-off

[09:05] *** flaviusb left
[09:20] *** flaviusb joined
[09:23] *** crab2313 left
[09:25] *** flaviusb left
[09:25] *** crab2313 joined
[09:28] *** raiph joined
[09:31] *** FieldsaBB left
[09:32] *** araujo left
[09:35] *** crab2313 left
[09:39] *** flaviusb joined
[09:44] *** nyuszika7h left
[09:44] *** flaviusb left
[09:45] *** nyuszika7h joined
[09:52] *** araujo joined
[09:52] *** araujo left
[09:52] *** araujo joined
[10:04] *** rindolf joined
[10:04] *** Guest1337 joined
[10:05] *** anuby left
[10:19] *** raiph left
[10:24] *** snearch left
[10:30] *** xinming left
[10:32] *** xinming joined
[10:35] <timotimo> good *

[10:36] <timotimo> r: role Bob { method foo {...} }; class Bleh does Bob { method foo { say "yup" } }; my Bob %h; %h<a> = Bleh.new; say %h<a>;

[10:36] <camelia> rakudo b2072f: OUTPUT«Bleh.new()␤»

[10:36] <timotimo> r: role Bob { method foo {...} }; class Bleh does Bob { method foo { say "yup" } }; my Bob %h; %h<a> = Bleh.new; say %h<b>;

[10:36] <camelia> rakudo b2072f: OUTPUT«Method 'foo' must be implemented by Bob because it is required by a role␤  in any  at src/gen/Metamodel.nqp:2207␤  in any compose_method_table at src/gen/Metamodel.nqp:2198␤  in any apply at src/gen/Metamodel.nqp:2216␤  in any  at src/gen/Metamodel.nqp:2356␤  in an…

[10:36] <timotimo> :\

[10:37] <timotimo> i think the java people know about this problem, too

[10:48] *** xinming left
[10:54] *** Boohbah left
[10:57] *** atroxaper left
[10:58] *** benabik left
[11:00] *** crab2313 joined
[11:08] *** cognominal left
[11:27] *** gdey left
[11:28] *** crab2313 left
[11:32] *** xinming joined
[11:33] *** gdey joined
[11:33] <timotimo> oh, no talks to watch today

[11:36] *** gudahtt joined
[11:41] <nwc10> maybe there will be a webcam streaming the hackathon

[11:42] <timotimo> not as interesting if nobody is there to talk about what's going on ;)

[11:42] <timotimo> and i could potentially get that on irc

[11:42] <timotimo> (if only through commit notifications)

[11:42] <nwc10> depends if they are talking around a whiteboard

[11:43] <timotimo> ah

[11:47] *** arlinius left
[11:48] *** Pleiades` left
[11:48] *** lue left
[11:48] *** kshannon left
[11:49] *** lue joined
[11:49] *** kshannon joined
[11:49] *** Pleiades` joined
[11:56] *** skids left
[12:03] *** atroxaper joined
[12:05] *** cibs left
[12:09] * colomon wishes jnthn were not currently in his timezone

[12:12] *** cibs joined
[12:17] <atroxaper> What do you think about Intellij Idea plugin for Perl6, #perl6? I think it may attract a lot of interest Perl6.

[12:18] <timotimo> what would it offer beyond perhaps syntax highlighting and proper automatic indentation?

[12:18] <timotimo> jump to definition seems doable

[12:19] *** arlinius joined
[12:19] <colomon> has anyone managed to build the Rakudo debugger recently?

[12:21] <atroxaper> timotimo: Of course jump to definition is supported. http://confluence.jetbrains.com/display/IntelliJIDEA/Custom+Language+Support

[12:21] <timotimo> colomon: i've failed multiple times on my laptop :(

[12:22] <timotimo> error:imcc:loadlib directive could not find library `perl6_group'

[12:23] <timotimo> atroxaper: well, first you'll have to develop it, no? ;)

[12:23] <atroxaper> timotimo: :)

[12:23] <timotimo> as far as i can tell, intellij idea is pretty darn good

[12:23] <atroxaper> yes, it's pretty good.

[12:24] *** konundra left
[12:25] <atroxaper> timotimo: i frozen at the start - grammar definition xD

[12:28] <atroxaper> I just don't know what use for perl scripting in windows...

[12:31] <Ulti> Padre?

[12:31] <colomon> tadzik: I can definitely tell you that smoker hasn't run correctly for me in days...

[12:32] <atroxaper> Ulti: is it really useful?

[12:32] <Ulti> what do you mean by useful?

[12:33] <Ulti> I find text editors useful enough

[12:34] <Ulti> Perl5 suffers from not having function signatures so its not like autocomplete or something is any good, which is why a Perl6 IDE could be really awesome there is more information to scam from the language

[12:34] <Ulti> padre has all the docs integrated which is useful

[12:35] <atroxaper> :) Ok. I'll try Padre.

[12:37] <Ulti> I think it does moose class completion stuff but that might be my imagination.... my vim setup does that anyway :3

[12:37] *** guru joined
[12:37] <Ulti> not that I use it because I write disgusting perl5 for doing research quickly

[12:38] *** guru is now known as Guest2778

[12:38] *** Guest2778 is now known as ajr_

[12:38] <[Coke]> .tell frogs ll exception gives me 💈  ./perl6 --ll-exception -e 'use v6;'

[12:38] <yoleaux> [Coke]: I'll pass your message to frogs.

[12:39] *** konundra joined
[12:40] <[Coke]> ugh.

[12:40] <[Coke]> .tell FROGGS ll-exception gives me : https://gist.github.com/coke/5721191

[12:40] <yoleaux> [Coke]: I'll pass your message to FROGGS.

[12:53] *** gdey left
[12:55] *** Guest1337 left
[13:01] *** mucker joined
[13:03] <colomon> tadzik: think I've got the problem.  failure is return X::AdHoc, not X::Panda

[13:10] *** rhr joined
[13:10] *** ggoebel left
[13:10] *** konundra left
[13:10] *** vaelxon left
[13:10] *** bloonix left
[13:10] *** ironcame1 left
[13:10] *** rhr_ left
[13:10] *** Guest61852 left
[13:10] *** bakedb left
[13:10] *** rom1504 left
[13:10] *** konundra joined
[13:11] *** ironcamel joined
[13:11] *** tomaw_ joined
[13:11] *** rom1504 joined
[13:11] *** ingy joined
[13:11] *** Guest61852 joined
[13:12] *** Guest61852 is now known as felher

[13:12] *** tomaw left
[13:12] *** nyuszika7h left
[13:12] *** gudaht joined
[13:12] *** x2 joined
[13:13] *** nyuszika7h joined
[13:13] <colomon> tadzik: somewhere along the line you lost the X::Panda.new from Builder.pm and Tester.pm -- but all the code that calls them still expects it to be there.

[13:14] *** tomaw_ is now known as tomaw

[13:14] *** gudahtt left
[13:15] *** sivoais_ joined
[13:15] *** kshannon_ joined
[13:16] *** dagurval joined
[13:18] *** bloonix joined
[13:18] *** sorear left
[13:18] *** kshannon left
[13:18] *** GlitchMr left
[13:18] *** bakedb joined
[13:18] *** sorear_ joined
[13:19] *** sivoais left
[13:20] *** p5eval_ left
[13:20] *** p5eval joined
[13:20] *** szbalint_ left
[13:20] *** szbalint joined
[13:25] *** sftp left
[13:25] *** GlitchMr joined
[13:26] <masak> morning, #perl6

[13:26] <masak> about to head for $airport

[13:26] <timotimo> hey masak

[13:26] *** sftp joined
[13:26] <timotimo> no hackathoning for you today?

[13:26] <masak> unfortunately not.

[13:27] <timotimo> well, have a good flight! :)

[13:27] <colomon> masak: safe home!

[13:27] *** JimmyZ joined
[13:28] <JimmyZ> Good evening, #perl6

[13:32] <masak> timotimo, colomon: thank you.

[13:34] <diakopter> masak: want a ride to the airport?

[13:34] <masak> diakopter: ooh!

[13:34] <diakopter> k i'll be right there

[13:34] <masak> diakopter: meant to hail a cab, but ride is better :>

[13:35] <masak> diakopter++

[13:35] <masak> $weekend is likely to be full of AFK, so I don't think I'll resurface much until Monday. we'll see.

[13:36] *** adu joined
[13:37] <masak> I've had a completely wonderful YAPC::NA. I'm really happy I could come here.

[13:37] <hoelzro> masak: how was the Perl 6 content received?

[13:38] <hoelzro> pmichaud's talk last year is what piqued my interest, so I'm curious =)

[13:38] <masak> hoelzro: well, the new kid on the block this year was MoarVM, no doubt.

[13:38] <masak> I heard it being whispered about in the hallway track.

[13:38] <hoelzro> it's promising

[13:38] <hoelzro> I was excited to read about it!

[13:39] <masak> jnthn++ gave two nice talks about Perl 6; one brain-twister, one about his cool debugger.

[13:39] <hoelzro> I'm hoping to look at it more in depth

[13:39] <masak> pmichaud++ gave a talk about what needs to be done with parallelism. more "what don't we know" than "what do we know". still very interesting.

[13:39] <masak> japhb++ gave two nice talks: one about module loading, and one about performance.

[13:40] <masak> FROGGS++ gave a cool talk about his v5 stuffs.

[13:40] *** chayin left
[13:40] *** chayin joined
[13:40] <moritz> are the talks online somewhere?

[13:40] *** gdey joined
[13:40] <timotimo> any information on what kinds of things are being done to perl6 and the perl6 ecosystem in the hackathons?

[13:40] <hoelzro> are the talks online this year?

[13:41] <masak> it was definitely the most Perl 6 conf I've been to.

[13:41] *** araujo left
[13:41] <hoelzro> moritz: took the words right from my mouth =)

[13:41] <masak> I don't know anything about talks online.

[13:41] <masak> you people seem to know more about streaming and urls to that than I do.

[13:41] <moritz> masak: how did the non-6ers react to so much 6?

[13:41] <masak> I'm just physically present :P

[13:41] *** araujo joined
[13:42] <masak> moritz: well, those who were interested showed up for those talks.

[13:42] <masak> that's all, I think :)

[13:42] <masak> there were 80 speakers and 90 talks.

[13:43] <masak> we figured out that between jnthn, japhb and me, we represented half of that >1 multiplicity :)

[13:43] <masak> oh, more nice speakers: lizmat++ gave a lightning talk about "is Perl 6 'Perl'?"

[13:44] <diakopter> masak: I'm downstairs

[13:44] <masak> and TimToady gave a touching keynote and also a lightning-talk "poem", a modern adaptation of Corinthians.

[13:45] <masak> diakopter: I'll be down right away.

[13:45] <masak> &

[13:45] <moritz> have a safe flight.

[13:46] *** skids joined
[13:47] <timotimo> i'm having trouble compiling older versions of rakudo: "operation setcontspec requires 3 operands, but got 4"

[13:47] <timotimo> maybe --gen-nqp didn't get a sufficiently old version?

[13:48] <moritz> gen-nqp doesn't compile an old nqp for you if a newer is available

[13:52] *** woolfy joined
[13:52] *** labster joined
[13:52] * timotimo tried an older parrot, too

[13:53] *** yeltzooo left
[13:53] <timotimo> tries* actually

[13:53] *** yeltzooo joined
[13:54] <[Coke]> timotimo: when I am doing things that are version specific, I typically do a complete wipe of nqp and parrot subdirs (which git clean -xdf does not do for you, it lies), and get whatever dep versions rakudo wants.

[13:54] *** btyler joined
[13:56] <timotimo> it may be my fault to try parrot on master branch and nqp on master branch, too

[14:01] <jnthn> morning, #perl6

[14:01] <yoleaux> 06:29Z <sorear> jnthn: dylanwh is kind of putting me on the spot here with a question whose answer is intuitively obvious but not easy to express ;) ;)  Why exactly cannot NativeCall functionality be used in CORE.setting?  (beyond the obvious "it's a module")

[14:02] *** gdey left
[14:03] *** FROGGS joined
[14:03] <jnthn> .tell sorear well, given it actually boils down to nqp:: ops and all NativeCall does is provide nice sugar, you could do native calls in CORE.setting through those already. But I'm pretty sure I don't want us to be doing that...

[14:03] <yoleaux> jnthn: I'll pass your message to sorear.

[14:05] *** atroxaper left
[14:06] *** diederich joined
[14:06] *** labster left
[14:06] *** alester left
[14:07] <FROGGS> morning

[14:07] <yoleaux> 12:40Z <[Coke]> FROGGS: ll-exception gives me : https://gist.github.com/coke/5721191

[14:07] <timotimo> how do i get out of "could not find perl6::BOOTSTRAP" again?

[14:07] <timotimo> make install repeatedly until it works? ;)

[14:07] <timotimo> oh, interesting

[14:08] <timotimo> make install will install BOOTSTRAP into parrot/.../languase/nqp/lib/Perl6

[14:08] <timotimo> and when trying to build rakudo::debugger it will look in parrot/.../languages/perl6/site/lib

[14:09] * jnthn wonders why the trouble building rakudo-debugger

[14:09] <jnthn> Given I was hacking on it and demoing it yesterday...

[14:09] <jnthn> And it build without trouble

[14:09] *** census joined
[14:09] <moritz> jnthn: because your (OS, Moon Phase, Panda Version, Rakudo Version) tuple was slightly different :-)

[14:10] <pmichaud> good morning, #perl6

[14:10] <dalek> rakudo-debugger: bd3e80d | jonathan++ | bin/perl6-debug.nqp:

[14:10] <dalek> rakudo-debugger: Ensure updated $/ in grammar debugging.

[14:10] <dalek> rakudo-debugger: review: https://github.com/jnthn/rakudo-debugger/commit/bd3e80d27b

[14:10] <dalek> rakudo-debugger: 66f7e15 | jonathan++ | lib/Debugger/UI/CommandLine.pm:

[14:10] <dalek> rakudo-debugger: Make $<foo> and $0 dump nicer.

[14:10] <dalek> rakudo-debugger: review: https://github.com/jnthn/rakudo-debugger/commit/66f7e15ee8

[14:10] <dalek> rakudo-debugger: 342266a | jonathan++ | lib/Debugger/UI/CommandLine.pm:

[14:10] <dalek> rakudo-debugger: Un-bit-rot tracepoint show.

[14:10] <dalek> rakudo-debugger: review: https://github.com/jnthn/rakudo-debugger/commit/342266a59c

[14:10] <dalek> rakudo-debugger: 3176315 | jonathan++ | / (2 files):

[14:10] <dalek> rakudo-debugger: Add breakpoint setting in code with "#?BREAK".

[14:10] <dalek> rakudo-debugger: review: https://github.com/jnthn/rakudo-debugger/commit/3176315022

[14:10] <timotimo> moon phase version :)

[14:11] <FROGGS> .tell [Coke] I can imagine that this fails: https://github.com/rakudo/rakudo/blob/jvm-support/src/Perl6/Actions.nqp#L4924

[14:11] <yoleaux> FROGGS: I'll pass your message to [Coke].

[14:11] <jnthn> o/ pmichaud 

[14:11] <FROGGS> \o pmichaud 

[14:12] <timotimo> i just successfully installed it

[14:12] <timotimo> all it took was to completely wipe my panda clean

[14:12] <FROGGS> .tell [Coke] maybe you add a debug line right after that to check if $v has something in it

[14:12] <yoleaux> FROGGS: I'll pass your message to [Coke].

[14:13] <jnthn> use v6 fails ultimately 'cus it hits Str.match 

[14:13] <jnthn> Which in turn does gather/take

[14:13] *** census left
[14:14] <FROGGS> ahh

[14:14] <FROGGS> (I'm totally new to the JVM stuff)

[14:14] <jnthn> ;)

[14:15] <FROGGS> the bad thing is, I missed the breakfast time slot :/

[14:15] <FROGGS> you are already in the LBJ/TCC?

[14:16] *** colomon left
[14:16] <timotimo> time for a swapfile...

[14:16] <jnthn> FROGGS: No, not yet

[14:16] <FROGGS> k, I hoe I get some coffee there

[14:17] <FROGGS> timotimo: yeah, I guess cleaning up pandas is some sort of challenge, given that it does quiet some magic

[14:18] <timotimo> :)

[14:19] *** sorear_ left
[14:19] <jnthn> r: 'abc' ~~ /b/; eval 'say $/'

[14:19] <camelia> rakudo b2072f: OUTPUT«(Any)␤»

[14:19] <jnthn> Got a fix for ^ locally

[14:20] <timotimo> oh! will that also make it work in the repl?

[14:20] <FROGGS> to quote TimToady: "locally++"

[14:20] <jnthn> timotimo: checking

[14:20] <timotimo> hm, not sure if i'm referring to the error correctly

[14:20] <jnthn> timotimo: yes

[14:20] <timotimo> there's things like writing a try block and not having $! in the next line; does that work?

[14:20] *** shinobicl joined
[14:21] *** sorear joined
[14:22] <jnthn> > try die "bratwurst"

[14:22] <jnthn> Nil

[14:22] <jnthn> > say $!

[14:22] <jnthn> bratwurst

[14:22] <jnthn> \o/

[14:22] <jnthn> It also fixes looking at $! and $/ in the debugger :)

[14:22] <FROGGS> I feel offended

[14:23] <jnthn> .oO( One patch to fix them all )

[14:23] <FROGGS> hehe

[14:23] <timotimo> cool!

[14:23] <jnthn> FROGGS: Saussage is offensive? :)

[14:23] <timotimo> i'd love to know what exact combination of nqp/parrot you're running, jnthn? master nqp and 5_2_0 parrot?

[14:24] <jnthn> timotimo: exactly that.

[14:24] <FROGGS> jnthn: no, the fact that it must die

[14:24] <[Coke]> if we don't have java on feather, we'll also never get evalbot doing it. bother.

[14:24] <yoleaux> 14:11Z <FROGGS> [Coke]: I can imagine that this fails: https://github.com/rakudo/rakudo/blob/jvm-support/src/Perl6/Actions.nqp#L4924

[14:24] <yoleaux> 14:12Z <FROGGS> [Coke]: maybe you add a debug line right after that to check if $v has something in it

[14:24] <jnthn> FROGGS: ah, I guess "die" is the wrong article ;)

[14:24] <FROGGS> ahh

[14:25] <FROGGS> no, "die" would be right

[14:25] <jnthn> :)

[14:25] <FROGGS> just a matter of pronunciation

[14:25] *** lizmat joined
[14:26] <[Coke]> jnthn: where is the definition of 'use' in rakudo-java?

[14:26] *** atroxaper joined
[14:26] <FROGGS> [Coke]: <jnthn> use v6 fails ultimately 'cus it hits Str.match 

[14:26] <FROGGS> <jnthn> Which in turn does gather/take

[14:26] <[Coke]> (if no use's work right now, let's hack it so we can at least run the tests until we get to the tests on use)

[14:26] <[Coke]> FROGGS: yes, danke.

[14:27] *** btyler left
[14:27] <jnthn> [Coke]: Same place as it is in Rakudo Parrot: in statement_control:sym<use> in grammar, or the related method in actions.

[14:27] <FROGGS> [Coke]: https://github.com/rakudo/rakudo/blob/jvm-support/src/Perl6/Grammar.nqp#L1151

[14:28] <jnthn> [Coke]: For most things, assuming "it's shared between backends" will be a good assumption, since 90% or so of the code is :)

[14:28] <FROGGS> [Coke]: maybe you can try changing "| <version" to "| 'v6'"

[14:29] <jnthn> Please #?if !jvm ...original thing... #?endif #?if jvm ...cheat... #?endif

[14:29] <jnthn> So we don't regress on it on Rakudo Parrot.

[14:30] <jnthn> oh, I wonder if those files go through the preprocessor...may have to look at that.

[14:31] <FROGGS> what are "those files", the stuff in src/ ?

[14:32] <[Coke]> jnthn: #?nIFty

[14:32] <[Coke]> jnthn: ok. any particular keyword you want in there to indicate that it's a bletcherous hack?

[14:32] *** benabik joined
[14:32] *** gdey joined
[14:32] <FROGGS> would be cool if that works out

[14:32] <FROGGS> XXX

[14:33] <FROGGS> at least I have seen this at some places

[14:34] <diakopter> jnthn: ping

[14:35] <diakopter> jnthn: want a ride to the hackathon? it's invisible pouring outside, if you know what I mean

[14:35] <diakopter> FROGGS: u want a ride too?

[14:36] *** colomon joined
[14:36] *** ajr_ left
[14:36] <colomon> o/ from the hackathon

[14:36] <TimToady> is there coffee there?

[14:36] <timotimo> hey colomon. are you perl6-hackathoning? :)

[14:36] <diakopter> well, of the silty dirt water kind

[14:37] <lizmat> morning #perl6

[14:37] <colomon> timotimo: absolutely!

[14:37] *** guru joined
[14:37] <TimToady> diakopter: as long as it has caffeine in it

[14:37] *** guru is now known as Guest95867

[14:37] *** Guest95867 is now known as ajr_

[14:37] <lizmat> van leaving from doubletree for lot40 around 9:50

[14:37] <jnthn> diakopter: pmichaud++ already offered me a ride, and I think I only need one ;-)

[14:37] <diakopter> seems so

[14:37] <timotimo> make: *** [NQPP5QRegex.pbc] Segmentation fault

[14:38] <timotimo> aaw not again :(

[14:38] <diakopter> TimToady: if you don't make Liz's 9:50 trip, I can head back there too

[14:38] <TimToady> lemme see if I can rouse my progeny...

[14:38] <lizmat> maybe rm-rf install dir

[14:38] <FROGGS> diakopter: no, I can walk these 3 minutes :o)

[14:38] <FROGGS> but thanks

[14:39] <lizmat> TimToady: we'll wait for you if you want the ride

[14:39] <TimToady> he wants to stay here, but I can get there

[14:39] <TimToady> I mean, I'd likea ride

[14:39] <FROGGS> TimToady: I'll chec the coffee-state and report back (cause I really need one too)

[14:40] <TimToady> I made some Wolfgang Puck on spec here

[14:40] <FROGGS> the hackathon is still at the LBJ loppy?

[14:40] <diakopter> no

[14:40] <diakopter> tcc 2.122

[14:40] <FROGGS> lobby*

[14:40] <diakopter> and it's not as cool as it could be. calling the building.

[14:40] <FROGGS> diakopter: thanks

[14:40] <atroxaper> Does anybody know is there Perl6 BNF grammar?

[14:43] *** salv0 left
[14:43] <diakopter> atroxaper: afaik, the Perl 6 grammar has too many left & right recursions to be expressed as such

[14:44] <pmichaud> my vehicle can probably depart around 10:05

[14:44] <arnsholt> The Perl 6 grammar isn't expressed as a BNF grammar, but there is a grammar

[14:44] <TimToady> actually, Lewis wants to come now

[14:45] <diakopter> the Dr Pepper doesn't arrive until 10:30

[14:45] <pmichaud> after jnthn++, I have two seats left

[14:45] <TimToady> now that he is awake :)

[14:46] <atroxaper> arnsholt: i heard that about P5. Are you sure about P6?

[14:46] <pmichaud> or put another way, I'll be ready to depart in about 15-20 mins

[14:46] <atroxaper> TimToady: is Perl6 expressed as a BNF ? :)

[14:47] <pmichaud> Perl6 is expressed as a koan.

[14:47] <jnthn> atroxaper: Perl 6 is expressed as https://github.com/perl6/std/blob/master/STD.pm6

[14:47] *** FROGGS left
[14:47] <benabik> Perl 6 is expressed as Perl 6

[14:47] <atroxaper> What is koan?

[14:48] <diakopter> masak: you're a koan

[14:48] <PerlJam> atroxaper: why, perchance, do you want a BNF grammar for Perl 6?

[14:48] <atroxaper> jnthn: yes, i khow. 

[14:48] <pmichaud> http://en.wikipedia.org/wiki/K%C5%8Dan

[14:49] <TimToady> coming down (after I pack my computer :)

[14:49] <pmichaud> TimToady: you have a ride already?

[14:49] <atroxaper> PerlJam, i have a stupid idea to write Perl6 plugin for Intellij Idea. I have to have bnf grammar definition for that...

[14:50] *** lizmat left
[14:50] <diakopter> I need a photo of the Yapcna hackathon room - the Perl 6 folks are all on one side, and the Perl 5 folks on the other, separated by a deep chasm

[14:50] <pmichaud> FROGGS++ can be in the middle :)

[14:50] <pmichaud> and the chasm isn't really that deep anymore

[14:50] <atroxaper> pmichaud, nice )

[14:51] <PerlJam> atroxaper: maybe you can get by with a partial grammar?

[14:51] <diakopter> what is this, good cop bad cop? ;)

[14:51] *** woolfy left
[14:52] *** kaare__ joined
[14:52] <atroxaper> PerlJam: what do you mean? I think it's not too easy to describe Perl6 in partial bnf for my now.

[14:53] <jnthn> pmichaud: Will meet you down in the lobby at around 10:05

[14:53] <colomon> atroxaper: well, for sure it's not easy to describe Perl6's grammar completely in BNF...

[14:53] <pmichaud> jnthn: meet in lobby 10:05-ish?

[14:53] <colomon> jnthn: https://gist.github.com/colomon/5722100 # debugger build failure on Linux

[14:54] <jnthn> pmichaud: yes :)

[14:54] *** labster joined
[14:54] <pmichaud> see you there

[14:54] <jnthn> colomon: It picks up whatever nqp is in the path...maybe it's picking the wrong one...

[14:55] <colomon> perl 6: Now with exploding objects.  # re arnsholt++'s current debugging run

[14:56] <colomon> It's getting /home/colomon/tools/rakudo/install/bin/nqp

[14:56] <colomon> which *sounds* rightish...

[14:57] *** spider-mario joined
[14:57] *** gdey left
[14:57] <colomon> jnthn: unless there are two different nqps in the rakudo source tree?

[14:58] <timotimo> i think this time i'll get a working rakudo and rakudo-debugger

[14:58] <jnthn> Hm, not sure why it's getting it wrong then..

[14:58] *** FROGGS joined
[14:58] <jnthn> hackathon &

[14:58] *** btyler joined
[14:59] <FROGGS> \o/

[14:59] <FROGGS> coffee and snacks are here

[15:00] *** cognominal joined
[15:02] *** kaleem left
[15:03] <PerlJam> But no Dr Pepper :(

[15:04] <FROGGS> true :o(

[15:05] <PerlJam> untrue now!

[15:05] <FROGGS> PerlJam: can you turn around?

[15:06] <diakopter> and an introduction occurs

[15:11] <colomon> \o/

[15:13] *** zby_home joined
[15:13] <RedditAnalytics> are you guys in the same room on laptops?

[15:13] *** btyler left
[15:13] *** kaleem joined
[15:13] <colomon> RedditAnalytics: yes

[15:14] <PerlJam> Was that an unintentional pun?

[15:14] <RedditAnalytics> you know technology has really done a lot for us.  50 years ago you would have had to walk over to the other side of the room to chat with your friend.

[15:14] <colomon> RedditAnalytics: lizmat, FROGGS, diakopter, arnsholt, labster, PerlJam, and TimToady just showed up.

[15:15] *** berekuk_ left
[15:15] <colomon> RedditAnalytics: we're talking outloud, too.  may make the channel traffic kind of confusing today.

[15:16] *** lizmat joined
[15:16] <colomon> RedditAnalytics: and pmichaud and jnthn just walked in the door.

[15:17] <colomon> jnthn: get_iter() not implemented in class 'Stash' is a bad thing, right?

[15:17] <colomon> Now that I've finally got module testing reporting something again, there are 25 more failures today than there were Saturday.

[15:18] *** cognominal left
[15:18] <FROGGS> what I dont like finding weird stuff in rakudo when trying to make things in v5 work, that just causes delay... (just mumbling)

[15:19] *** cognominal joined
[15:19] *** quietfanatic joined
[15:21] *** kaleem left
[15:22] *** kaleem joined
[15:22] <FROGGS> TimToady: is this supposed to work? require Test; import Test;

[15:22] *** Ulti left
[15:23] <FROGGS> or only: require Test :ALL

[15:24] <FROGGS> I mean, "require Test; import Test;" can work basically, like this too: require Test:file("lib/Hurz.pm"); import Test;

[15:25] <moritz> FROGGS: import is run at compile time

[15:25] <moritz> how would it know what to import?

[15:26] <colomon> # b2072f578c04bbf7ac4d4b684ffdff42a2b2a29a

[15:26] * [Coke] woudl pay to have a few tuits shipped to albany, btw.

[15:26] <[Coke]> (the new ones with rakudo/moar)

[15:26] <FROGGS> moritz: well, it knows the module name at least, and then could import symbols, which then can be accessed like ::('cmp_ok')

[15:27] <pmichaud> [Coke]: I'll ship you some

[15:27] <pmichaud> how many would you like?

[15:27] <[Coke]> eh. not a lot of sixers out this way. I could hand them out if we ever had another Albany.pm meeting... no more than a dozen, surely.

[15:27] <pmichaud> dozen each?

[15:28] <colomon> [Coke]: there are plenty here... ;)

[15:28] <[Coke]> that would err on the side of damnthat'salot.

[15:28] <pmichaud> six each?

[15:28] *** JimmyZ left
[15:28] <[Coke]> ... but in that case, sure! :)

[15:28] <pmichaud> okay, dozen each :)

[15:28] <pmichaud> or if that's too much, ten of each

[15:28] <pmichaud> just the rakudo and moarvm ones?

[15:28] <[Coke]> that works - you send 'em, I promise to have at least a beer meeting to distribute them.

[15:29] <[Coke]> those were the only ones I saw!

[15:29] <PerlJam> [Coke]++

[15:29] <PerlJam> [Coke]: there are 7 tuit types (so far)

[15:29] <[Coke]> O_o? . o O (I have only a single one from years ago with no type)

[15:29] <[Coke]> I will happily take a batch and redstribute them over beer as long as I get a rakudo one. :)

[15:30] <pmichaud> "Rakudo" "MoarVM" "2013" "CPAN" "P5&P6" "Community" 

[15:30] <FROGGS> there is YAPC, rakudo, MoarVM, 2013, errhhhmmmm

[15:30] <FROGGS> right

[15:30] <pmichaud> and "YAPC"

[15:30] <timotimo> error:imcc:loadlib directive could not find library `perl6_group'

[15:30] <timotimo> ;_;

[15:30] * FROGGS hugs timotimo 

[15:31] <timotimo> but why was i able to do it on my vm? :/

[15:31] <FROGGS> moritz: maybe it can delay the importing till runtime if the module was require'd and not use'd

[15:32] <FROGGS> gah, I'm not sure

[15:33] <timotimo> oh, i forgot to --gen-parrot=something

[15:33] <timotimo> another hour of compilation >_<

[15:33] <FROGGS> O.o

[15:34] <FROGGS> we need to use Moar cores

[15:34] <timotimo> well, probably not an hour, but this is a laptop

[15:35] *** gdey joined
[15:37] *** stevan_ joined
[15:38] *** raiph joined
[15:41] <jnthn> arnsholt: heh, Moar's P6opaque had the bug too.

[15:41] <lizmat> r: module Foo { module Bar { say $?PACKAGE } }  # shouldn't this need to say (Foo::Bar) ???

[15:41] <camelia> rakudo b2072f: OUTPUT«(Bar)␤»

[15:41] <lizmat> n: module Foo { module Bar { say $?PACKAGE } }  # shouldn't this need to say (Foo::Bar) ???

[15:41] <camelia> niecza v24-66-gaee6525: OUTPUT«Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Niecza.StashCursor.Core (System.String key, Boolean final, Niecza.StashCursor& sc, Niecza.Variable& v, Niecza.Variable bind_to) [0x00000] in <file…

[15:42] <FROGGS> r: module Foo { module Bar { say $?PACKAGE } }; say Foo:: # I think so

[15:42] <arnsholt> jnthn: Good thing we found it then!

[15:42] <camelia> rakudo b2072f: OUTPUT«(Bar)␤("Bar" => Bar).hash␤»

[15:42] * arnsholt is recompiling stuff to test

[15:42] <FROGGS> r: module Foo { module Bar { say $?PACKAGE } }; say Foo::Bar # I think so

[15:42] <camelia> rakudo b2072f: OUTPUT«(Bar)␤(Bar)␤»

[15:42] <FROGGS> hmmm

[15:42] <jnthn> colomon: Yes, get_iter() error is a bad thing. Got a golf I can look at?

[15:43] <colomon> jnthn: pondering that question right now

[15:43] <colomon> jnthn: so, not yet.  :)

[15:44] <jnthn> arnsholt++ # found it

[15:44] <jnthn> colomon: OK. I suspect I can nail it fairly swiftly once it's golfed

[15:45] <dalek> rakudo/nom: c38c659 | jonathan++ | src/Perl6/ (2 files):

[15:45] <dalek> rakudo/nom: Fix $/ and $! visibility in eval/REPL.

[15:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c38c659528

[15:46] * lizmat wonders whether jnthn has a jonathan clone

[15:46] <pmichaud> [Coke]: https://picasaweb.google.com/100583333501980276903/YapcNa2013   # tuits I've set aside for you

[15:46] *** btyler joined
[15:47] <labster> o/ masak

[15:47] <colomon> arnsholt++

[15:47] <RedditAnalytics> the worst kind of bugs are the ones that don't blow up your program

[15:47] <[Coke]> pmichaud++

[15:47] <FROGGS> arnsholt++ # The Bug got eliminated (no bug left)

[15:47] <pmichaud> there's 10x of "Rakudo" and "MoarVM", and 1x of the rest

[15:47] <RedditAnalytics> I'm going to start keeping a journal of the most interesting bugs i create

[15:48] *** domidumont left
[15:49] <benabik> I didn't have enough tuits to work on Perl stuff this year, so I didn't go to YAPC, so I don't get tuits?  That doesn't seem right.  ;-D

[15:49] *** kaleem left
[15:51] <lizmat> benabik: visiting any other Perl event this year?

[15:51] <benabik> Maybe I should drive across the state and steal some of [Coke]'s.

[15:51] *** stevan_ left
[15:51] <[Coke]> benabik: just show up at an Albany.pm meeting!

[15:51] <PerlJam> benabik: I bet if you ask woolfy she'll send you a bunch.

[15:51] <[Coke]> ... last one, the guy who suggested a bar was the only one to show up. whoops.

[15:53] <pmichaud> I'll be glad to be a U.S. distributor for tuits for a while.

[15:53] *** jeffreykegler joined
[15:53] <pmichaud> I'm going to be doing a lot of shipping-type-things over the next few months anyway

[15:53] <arnsholt> timotimo: Did you get your NQP segfault fixed?

[15:53] <pmichaud> it's no problem to add an extra parcel or or two

[15:53] <lizmat> TimToady: do you have an opinion on "module Foo { module Bar { say $?PACKAGE } }  # shouldn't this need to say (Foo::Bar) ???"

[15:53] <pmichaud> s/or or/or/

[15:54] <TimToady> lizmat: I'd think so

[15:54] <timotimo> arnsholt: it seems so

[15:54] * lizmat submits rakudobug

[15:54] <jnthn> Wait, stringifying a type object gives the short nam,e no?

[15:55] <lizmat> ah, how to get the long name then?

[15:55] <arnsholt> timotimo: Excellent. I got something that looked similar, so good that cleaning out and recompiling fixed it

[15:55] <jnthn> .WHO iirc, though not sure that does the Right thing yet.

[15:55] <pmichaud> $?PACKAGE.WHO stringifies to long name

[15:56] <jnthn> Right

[15:56] <jnthn> well, *should* :)

[15:56] <lizmat> rn: module Foo { module Bar { say $?PACKAGE.WHO } }

[15:56] <camelia> niecza v24-66-gaee6525: OUTPUT«Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Niecza.StashCursor.Core (System.String key, Boolean final, Niecza.StashCursor& sc, Niecza.Variable& v, Niecza.Variable bind_to) [0x00000] in <file…

[15:56] <camelia> ..rakudo b2072f: OUTPUT«().hash␤»

[15:56] * lizmat adapts rakudobug before sending off

[15:57] <timotimo> i think i would do good to toss out my Coord2d class and use complex numbers instead?

[15:57] <timotimo> they might be faster to create

[15:58] <arnsholt> Could be

[15:58] *** konundra left
[15:58] <arnsholt> And complex numbers for plane geometry is a fairly normal thing to do

[16:00] <colomon> timotimo: probably would be faster, I believe complex numbers are optimized a bit in Rakudo.

[16:01] <timotimo> indeed. then i'll just turn my methods into subs

[16:01] <timotimo> is there a cool mathematical construct that would give me the lowest real and lowest imaginary part for a set of numbers, or perhaps just two numbers?

[16:01] *** gdey left
[16:02] <timotimo> and for the highest? i'd like to get the bounding box of all my coordinates

[16:02] <dalek> nqp: 61d80b9 | (Arne Skjærholt)++ | src/vm/parrot/6model/reprs/P6opaque.c:

[16:02] <dalek> nqp: Fix GC mark offset calculation.

[16:02] <dalek> nqp: 

[16:02] <dalek> nqp: Got the wrong answer in cases where complex inlines that are not box targets

[16:02] <dalek> nqp: were made.

[16:02] <dalek> nqp: review: https://github.com/perl6/nqp/commit/61d80b9485

[16:02] <labster> yay, nqp is fixed.  Or rather, I rebuilt all the way down to parrot and  it works now.

[16:03] <labster> I'm guessing one of the libraries changed and parrot got confused.

[16:03] <colomon> labster: it was the grand merge

[16:05] <colomon> jnthn: your requested ll-exception: https://gist.github.com/colomon/5722694

[16:10] <sorear> good * #perl6

[16:10] <yoleaux> 14:03Z <jnthn> sorear: well, given it actually boils down to nqp:: ops and all NativeCall does is provide nice sugar, you could do native calls in CORE.setting through those already. But I'm pretty sure I don't want us to be doing that...

[16:10] *** konundra joined
[16:13] <colomon> \o

[16:13] *** gdey joined
[16:14] <timotimo> arnsholt: does that fix nativecall?

[16:14] *** domidumont joined
[16:15] <arnsholt> Depends on what you mean by fix NativeCall =)

[16:15] <timotimo> gggaaaaah

[16:15] <timotimo> still unable to build Rakudo::Debugger

[16:15] <arnsholt> But it fixes the segfault bug reported with callbacks

[16:15] <timotimo> i am going insane

[16:15] <colomon> timotimo: pretty sure Rakudo::Debugger is just broken at the moment.  except it works for jnthn++

[16:16] <timotimo> and except i just built it successfully on my other machine

[16:17] <colomon> what's the difference between the machines?

[16:17] *** ajr_ left
[16:18] <benabik> colomon: The debugger works on one and not the other, obviously.

[16:18] <sorear> o/ colomon

[16:20] <timotimo> one's a mint VM, the other is a debian sid laptop

[16:21] <colomon> timotimo: 32-bit versus 64-bit?  maybe?

[16:21] <colomon> extra nqp causing trouble?

[16:22] *** colomon left
[16:23] <timotimo> no, both 64

[16:25] *** salv0 joined
[16:27] <sorear> nqp: say([])

[16:27] <camelia> nqp: OUTPUT«0␤»

[16:27] <sorear> nqp-jvm: say([])

[16:27] <camelia> nqp-jvm: OUTPUT«Cannot stringify this␤  in <anon>␤  in print␤  in say␤  in <anon>␤  in <anon>␤  in eval␤  in evalfiles␤  in command_eval␤  in command_line␤  in MAIN␤  in <anon>␤  in <anon>»

[16:28] <sorear> jnthn: I have a want for a general way in nqp-jvm to get a string (probably just class+hashcode) for a general object

[16:30] *** colomon joined
[16:31] *** stevan_ joined
[16:32] <[Coke]> ... if we have nqp-jvm, where is that java on feather?

[16:32] <sorear> o/ stevan_

[16:32] <sorear> [Coke]: feather3?

[16:35] <stevan_> o/ sorear

[16:35] *** stevan_ left
[16:35] <TimToady> nr: package Foo { our proto foo($x) {*}; multi foo($x) { $x.say } }; Foo::foo(42);

[16:35] <camelia> niecza v24-66-gaee6525: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/wPPV6nG8_u line 1:␤------> package Foo { our proto foo(⏏$x) {*}; multi foo($x) { $x.say } }; Foo␤  &foo is declared but not used at /tmp/wPPV6nG8_u line 1:␤------> packag…

[16:35] <camelia> ..rakudo b2072f: OUTPUT«42␤»

[16:36] *** fhelmberger left
[16:36] <TimToady> nr: package Foo { our proto foo(|) {*}; multi foo($x) { $x.say } }; Foo::foo(42);

[16:36] <camelia> niecza v24-66-gaee6525: OUTPUT«Potential difficulties:␤  &foo is declared but not used at /tmp/avzSn2CBoe line 1:␤------> package Foo { our proto foo⏏(|) {*}; multi foo($x) { $x.say } }; Foo␤␤Unhandled exception: System.NullReferenceException: Object reference not set…

[16:36] <camelia> ..rakudo b2072f: OUTPUT«42␤»

[16:36] <TimToady> I guess that shouldn't complain about 'our' declarations like that

[16:37] <TimToady> but anyway, we can use our to put something proto-ish as a feed target into a package, and use the proto's multis to process events sent to that feed target

[16:37] *** gdey left
[16:38] <sorear> I HAVE FOUND IT

[16:38] <arnsholt> Is it a pot of gold?

[16:38] <RedditAnalytics> lol

[16:38] <sorear> arnsholt: no, it's a bug I've been chasing since Sunday

[16:39] <arnsholt> Goody!

[16:39] <RedditAnalytics> that's a fast bug

[16:39] <TimToady> if it's a butterfly, you have to be nice to it

[16:40] * sorear should've taken druthb's offer last night, this is a perfect opportunity for dancing...

[16:41] <labster> lol, I blogged: http://blog.brentlaabs.com/2013/06/thanking-perl-community-for-awesome-yapc.html

[16:41] <labster> and another checkbox down in my bingo card :)

[16:41] *** konundra left
[16:42] <sorear> labster: I don't see you in the room. :(

[16:42] <nwc10> *does* Rakudo-JVM use more memory than Rakudo on Parrot?

[16:42] *** colomon left
[16:42] <nwc10> has anyone measured them?

[16:43] * labster waves

[16:43] *** colomon joined
[16:43] <TimToady> he's kitty-corner from me

[16:43] <flussence> 152MB for java, 67MB for parrot just at the repl

[16:43] <flussence> but the java one does have -Xms100m

[16:43] <colomon> sorear: he's sitting across from my and TimToady 

[16:45] <colomon> *me

[16:46] <RedditAnalytics> is there a live webfeed for these presentations?

[16:46] <nwc10> arguably the peak is more interesting - I guess compiling the setting is the RAM stress-test

[16:48] <flussence> (oddly enough, changing that to -Xms16m *increases* the startup RAM usage...)

[16:48] <flussence> and 64m takes it down to 149MB. Maybe it's memory fragmentation or something.

[16:51] *** dakkar left
[16:53] <sorear> RedditAnalytics: no

[16:53] <sorear> RedditAnalytics: the free talks were all livestreamed, but that's over

[16:54] <sorear> RedditAnalytics: now it's just paid training sessions and hackathons

[16:54] <sorear> I don't think the hackathon is being livestreamed.  it wouldn't be very interesting anyway

[16:54] <nwc10> you could take a silly picture every hour and upload it

[16:55] <nwc10> but I suspect that that would get boring after the second. Or maybe even before the first

[16:55] *** SamuraiJack left
[16:55] *** nyuszika7h left
[16:55] <sorear> just a bunch of people sitting at laptops and saying "rutabaga rutabaga rutabaga"

[16:56] *** sqirrel joined
[16:56] <sorear> o/ sqirrel 

[16:56] *** groky left
[16:56] *** nyuszika7h joined
[16:57] <sqirrel> o/ sorear

[16:57] <sqirrel> hi all

[16:57] <colomon> rn: say "ß".uc

[16:57] <camelia> rakudo b2072f, niecza v24-66-gaee6525: OUTPUT«ß␤»

[16:58] *** rafl left
[16:58] *** avar left
[16:58] *** Gothmog_ left
[16:58] <sorear> .u ß

[16:58] <yoleaux> U+00DF LATIN SMALL LETTER SHARP S [Ll] (ß)

[16:58] *** DrEeevil left
[16:58] *** bonsaikitten joined
[16:59] <colomon> on second thought, I think was just reading that traditionally it was uppercased as SS, and there is a new uppercase form for it, but also that some German rules specified using it in words that were otherwise uppercase.

[17:00] *** rafl joined
[17:00] <colomon> rn: say "ǉ".uc

[17:00] <camelia> rakudo b2072f, niecza v24-66-gaee6525: OUTPUT«Ǉ␤»

[17:00] *** bonsaikitten left
[17:01] <sorear> traditionally uppercased to SS, there is an uppercase form for it, which is pretty much never user

[17:01] <sorear> s/user/used/

[17:01] <sorear> rafl!! o/

[17:01] *** bonsaikitten joined
[17:02] *** Gothmog_ joined
[17:02] *** nyuszika7h left
[17:02] *** jfried joined
[17:04] *** kaleem joined
[17:05] *** nyuszika7h joined
[17:06] *** birdwindupbird left
[17:06] *** groky joined
[17:06] <colomon> rn: say "ljenčariti".tc

[17:07] <camelia> rakudo b2072f: OUTPUT«No such method 'tc' for invocant of type 'Str'␤  in block  at /tmp/V4DTR25DbN:1␤␤»

[17:07] <camelia> ..niecza v24-66-gaee6525: OUTPUT«Ljenčariti␤»

[17:07] <colomon> n: say 'ǉenčariti'.tclc

[17:07] <camelia> niecza v24-66-gaee6525: OUTPUT«ǈenčariti␤»

[17:08] <colomon> n: say 'ǉenčariti'.tcuc

[17:08] <camelia> niecza v24-66-gaee6525: OUTPUT«ǈENČARITI␤»

[17:08] *** avar joined
[17:08] *** avar left
[17:08] *** avar joined
[17:09] *** kevi joined
[17:09] *** dmol joined
[17:11] <colomon> TimToady: https://gist.github.com/patch/5717017

[17:14] *** Ultali joined
[17:14] *** Ultali is now known as Ulti

[17:15] *** japhb_ joined
[17:16] <pmichaud> r: my sub &*USAGE() { say "HELLO"; };  &*USAGE();

[17:16] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Missing block␤at /tmp/foA7qngGHV:1␤------> my sub ⏏&*USAGE() { say "HELLO"; };  &*USAGE();␤    expecting any of:␤        scoped declarator␤        new name to be defined␤»

[17:16] <pmichaud> std: my sub &*USAGE() { say "HELLO"; };  &*USAGE();

[17:16] <camelia> std ea24a29: OUTPUT«ok 00:00 47m␤»

[17:17] <pmichaud> std: my sub &USAGE() { say "HELLO"; };  &USAGE();

[17:17] <camelia> std ea24a29: OUTPUT«ok 00:00 47m␤»

[17:17] <pmichaud> r: my sub &USAGE() { say "HELLO"; };  &USAGE();

[17:17] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Missing block␤at /tmp/VVQKeIVCMR:1␤------> my sub ⏏&USAGE() { say "HELLO"; };  &USAGE();␤    expecting any of:␤        scoped declarator␤        new name to be defined␤»

[17:17] <sorear> implemented a patch for bug o' doom; testing now

[17:18] <pmichaud> r: my &*USAGE = sub { say "Hello"; };  &*USAGE();

[17:18] <camelia> rakudo b2072f: OUTPUT«Hello␤»

[17:18] *** btyler left
[17:19] <lizmat> labster++

[17:19] <pmichaud> r: my &*USAGE = sub CORE_USAGE { say "Hello"; };  

[17:19] <camelia> rakudo b2072f:  ( no output )

[17:20] <pmichaud> CORE::USAGE

[17:20] <sorear> t/nqp/24-module.t ............... ok

[17:20] <labster> what did I do now?

[17:20] <sorear> labster: blogd

[17:21] <labster> oh, right.  I also make origami butterflies, if anyone wants one.

[17:21] <colomon> perl6 origami butterflies?

[17:22] <dalek> specs: d1f9930 | larry++ | S32-setting-library/Str.pod:

[17:22] <dalek> specs: remove tcuc until someone demonstrates a use case

[17:22] <dalek> specs: review: https://github.com/perl6/specs/commit/d1f9930373

[17:22] <japhb_> Butterflies!  I'm all in favor.

[17:22] <colomon> TimToady++

[17:23] <dalek> roast: 29a2813 | (Solomon Foster)++ | S32-str/tclc.t:

[17:23] <dalek> roast: Update the tests for tclc a tad.

[17:23] <dalek> roast: review: https://github.com/perl6/roast/commit/29a2813542

[17:23] *** guru joined
[17:23] *** guru is now known as Guest90360

[17:24] *** Guest90360 is now known as ajr_

[17:24] <dalek> niecza: b8f846e | (Solomon Foster)++ | lib/CORE.setting:

[17:24] <dalek> niecza: Remove tcuc, fix warning.

[17:24] <dalek> niecza: 

[17:24] <dalek> niecza: tcuc has been removed from the spec, so we remove it here as well.

[17:24] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b8f846e59b

[17:26] *** stevan_ joined
[17:27] <colomon> rn: say "hello".fc

[17:27] <camelia> rakudo b2072f: OUTPUT«No such method 'fc' for invocant of type 'Str'␤  in block  at /tmp/AHgBI6UW1N:1␤␤»

[17:27] <camelia> ..niecza v24-66-gaee6525: OUTPUT«Unhandled exception: Unable to resolve method fc in type Str␤  at /tmp/ONXIVHs0iA line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4502 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4503 (module-CORE @ 586) ␤  at /home/p6e…

[17:28] <colomon> rn: say "hello world".worldcase

[17:28] <camelia> niecza v24-66-gaee6525: OUTPUT«Unhandled exception: Unable to resolve method worldcase in type Str␤  at /tmp/GPdmX6lOqQ line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4502 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4503 (module-CORE @ 586) ␤  at /h…

[17:28] <camelia> ..rakudo b2072f: OUTPUT«No such method 'worldcase' for invocant of type 'Str'␤  in block  at /tmp/k7rAcWrBOK:1␤␤»

[17:28] <colomon> rn: say "hello world".wordcase

[17:28] <camelia> rakudo b2072f, niecza v24-66-gaee6525: OUTPUT«Hello World␤»

[17:29] <timotimo> worldcase :)

[17:30] *** quietfanatic left
[17:30] <colomon> n: say 'a' ∈ <a b c d> # should this work?

[17:30] <camelia> niecza v24-66-gaee6525: OUTPUT«True␤»

[17:34] <TimToady> I don't see a problem with it offhand

[17:34] <TimToady> it doesn't seem to be a blockers to sets of sets

[17:34] <TimToady> *er

[17:35] *** kevi left
[17:36] <colomon> (talking here, but for future reference) My question was basically whether it should do 

[17:37] <colomon> 'a' ∈ set <a b c d>

[17:37] <colomon> or 'a' ∈ <a b c d>.set

[17:37] <sorear> jnthn: TEST_JOBS for nqp.  Resonable?

[17:39] <colomon> (since those two things are different now)

[17:39] <TimToady> n: say set <a b c d>

[17:39] <camelia> niecza v24-66-gaee6525: OUTPUT«set(a, b, c, d)␤»

[17:39] <TimToady> n: say <a b c d>.set

[17:39] <camelia> niecza v24-66-gaee6525: OUTPUT«set(a, b, c, d)␤»

[17:39] <TimToady> are those really different?

[17:39] <sorear> jnthn: The hell?

[17:39] <sorear> jnthn: it's not t/nqp/60-bigint.t that's broken.

[17:39] *** _sri joined
[17:40] <sorear> it's all the tests, 2% of the time

[17:40] <jnthn> What?!

[17:40] <colomon> TimToady: there's not different in current source.  I have a branch where they are different.  

[17:41] <colomon> TimToady: as I understand it, set <a b c d> should be Set.new(<a b c d>) should be a Set containing one element which is <a b c d>

[17:42] <TimToady> <a b c d>.Set should be a single element

[17:42] <TimToady> or am I misremembering

[17:42] <colomon> TimToady: I don't believe that's spec'd at all.

[17:43] <colomon> unless you're thinking of that as distinct from [a, b, c, d].Set

[17:44] <jnthn> sorear: What's the failure mode, ooc?

[17:44] <sorear> jnthn: I get different failures every time I run make test

[17:45] <jnthn> sorear: If you run the same thing over and over it fails?

[17:45] <jnthn> (eventually)

[17:45] *** zakalwe joined
[17:45] <sorear> jnthn: I think so?  I haven't gotten a random failure outside 'prove'

[17:46] <jnthn> sorear: Maybe prove -v will give some info on exactly what the failure looks like...

[17:47] <jnthn> At least we know your fix isn't to blame :)

[17:47] <sorear> jnthn: yeah, just ran make test-loud | tee

[17:48] * jnthn presumes the sporadic failures happen even without the patch

[17:48] <sorear> I haven't tested that.  I suppose I ought to

[17:49] * jnthn has never seen these sporadic failures, fwiw

[17:49] *** Chillance joined
[17:49] * sorear is running two attempts simultaneously to keep two cores busy

[17:49] <dalek> rakudo/nom: 57e740a | jonathan++ | src/Perl6/ModuleLoader.nqp:

[17:49] <dalek> rakudo/nom: Fix a module loader regression.

[17:49] <dalek> rakudo/nom: 

[17:49] <dalek> rakudo/nom: Merge fail when bringing in the jvm-support branch.

[17:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/57e740afaa

[17:50] <timotimo> jnthn: cool, that should fix PSGI

[17:50] <jnthn> Hope so

[17:50] <jnthn> colomon: 57e740a should hopefully fix the issue you reported

[17:50] <colomon> jnthn++

[17:51] *** zakalwe left
[17:52] *** zakalwe joined
[17:55] <colomon> rn: say set [1, 2, 3]

[17:55] <camelia> rakudo b2072f, niecza v24-66-gaee6525: OUTPUT«set(1, 2, 3)␤»

[17:56] <colomon> rn: say set { a=>1, b=>2 }

[17:56] <camelia> rakudo b2072f, niecza v24-66-gaee6525: OUTPUT«set(a, b)␤»

[17:56] <tadzik> colomon: oh. THat's bad

[17:56] <tadzik> colomon: I'll take a looks

[17:57] <colomon> tadzik: very, very bad.  :)

[17:57] <colomon> tadzik: but it's a simple-ish fix, I think.

[17:57] <TimToady> yes, that's not right

[17:57] <colomon> TimToady: right.

[17:57] <colomon> should be a set with two pairs

[17:57] *** jeffreykegler left
[17:57] <TimToady> simplify the constructor to not try to outsmart the slurpy

[17:58] <colomon> TimToady: should be set(a=>1, b=>2), right?

[17:58] <TimToady> uh, {} doesn't flatten, just as [] doesn't, so set({..})

[17:58] <tadzik> oh, pull request already :) colomon++

[17:58] <TimToady> a set with a single elem, which is a hash

[17:58] <colomon> tadzik: that only fixing smoker, it doesn't fix the underlying panda issue

[17:59] <TimToady> if the sig for set uses ** instead of *, it needs to change to *

[17:59] <dalek> emmentaler: 46eada4 | (Solomon Foster)++ | smoker:

[17:59] <dalek> emmentaler: Every exception is a failure, not just the carefully constructed Panda exceptions.

[17:59] <dalek> emmentaler: review: https://github.com/tadzik/emmentaler/commit/46eada41c2

[17:59] <dalek> emmentaler: fa1f1e4 | tadzik++ | smoker:

[17:59] <dalek> emmentaler: Merge pull request #1 from colomon/master

[17:59] <dalek> emmentaler: 

[17:59] <dalek> emmentaler: Do no allow any exceptions to slip by smoke test

[17:59] <dalek> emmentaler: review: https://github.com/tadzik/emmentaler/commit/fa1f1e4560

[17:59] <[Coke]> sorear: if it's on feather3 (not feather), then I suppose we could end up with an r-j: eval at some point. hokay.

[17:59] <colomon> tadzik: basically, I changed smoker to signal failure no matter what exception it gets

[17:59] <tadzik> colomon: yeah, that makes sense

[17:59] <sorear> ok, *that* test-loud run finished with no spurious errors

[17:59] <colomon> TimToady: right now it takes apart the hashes internally

[18:00] <pmichaud> anyone interested in lunch?

[18:00] <jnthn> pmichaud: yes

[18:00] * [Coke] rolls his eyes at people complaining about a sponsor on the mailing list. perhaps we need a rate for attendees that allows them to avoid seeing any advertisements anywhere.

[18:00] <colomon> should Set.new([1, 2, 3]) also be set(1, 2, 3)

[18:00] <colomon> ?

[18:01] <colomon> TimToady: ^

[18:01] <pmichaud> yes, I was thinking something similar.  But I didn't want to stir the pot further anyway.

[18:01] <TimToady> no

[18:01] <TimToady> set is just short for Set.new

[18:01] <[Coke]> ... and then duke goes over the top. *sigh*

[18:01] <TimToady> both should make set( [1,2,3] ) with one elem

[18:01] *** PacoAir left
[18:02] <jnthn> pmichaud: Any thoughts on what/where?

[18:02] <sorear> pmichaud: I would not mind lunch

[18:02] <pmichaud> jnthn: I'm open for pretty much anything.  Don't know what's nearby.

[18:02] <jnthn> heh, me eihter ;)

[18:02] * TimToady would mind !lunch

[18:02] <RedditAnalytics> I've made some changes and released my first alpha to prod -> http://www.redditanalytics.com/search/  it's running more Perl6 now

[18:03] <sorear> oo

[18:03] <sorear> t/nqp/60-bigint.t ...............

[18:03] <sorear> Dubious, test returned 1 (wstat 256, 0x100)

[18:03] <sorear> No subtests run

[18:03] *** PacoAir joined
[18:04] <jnthn> Hm, so it doesn't even get to running

[18:04] <TimToady> but !lunch is what happens by default :)

[18:04] <colomon> TimToady: so far so good?  https://gist.github.com/colomon/5723570

[18:04] * colomon wonders if any place delivers pizza to this building

[18:05] * TimToady implies pizza is !lunch

[18:05] <sorear> Hehe

[18:05] <sorear> :D

[18:05] <TimToady> yes, so far so good

[18:06] <pmichaud> lunch eateries listed at http://www.yapcna.org/yn2013/wiki?node=LunchEateries

[18:06] *** sivoais_ left
[18:07] *** sivoais joined
[18:07] <colomon> TimToady: two more: https://gist.github.com/colomon/5723570

[18:08] <colomon> and more now

[18:10] <TimToady> my %h = { a=>1, b=>2 }; is non-sensical

[18:10] *** domidumont left
[18:10] <colomon> rn: my %h = a=>1, b=>2; say %h

[18:10] <camelia> niecza v24-67-gb8f846e: OUTPUT«{"a" => 1, "b" => 2}␤»

[18:10] <camelia> ..rakudo b2072f: OUTPUT«("a" => 1, "b" => 2).hash␤»

[18:10] <colomon> TimToady: fixed

[18:11] *** atroxaper left
[18:11] <TimToady> set %h    ==>  set(a, b) is wrong, set %h.keys    ==>  set(a, b)

[18:12] <TimToady> rn: my %h = a=>1, b=>2; print %h, "\n"

[18:12] <camelia> rakudo b2072f, niecza v24-67-gb8f846e: OUTPUT«a 1b      2␤»

[18:12] <dalek> specs: 2f8ec12 | labster++ | S32-setting-library/Str.pod:

[18:12] <dalek> specs: add IO and path methods to S32::Str

[18:12] <dalek> specs: review: https://github.com/perl6/specs/commit/2f8ec122eb

[18:13] <colomon> TimToady: changed it: https://gist.github.com/colomon/5723570

[18:14] *** kaleem left
[18:14] *** konundra joined
[18:14] *** PacoAir left
[18:15] *** thou_ left
[18:15] *** thou joined
[18:16] <jnthn> sorear: d'oh...I may have found it

[18:18] *** FROGGS left
[18:20] *** PacoAir joined
[18:21] <colomon> pmichaud, jnthn: I don't care where we go.

[18:22] <pmichaud> I think we've settled on Ethiopian again

[18:22] <jnthn> yays :)

[18:22] <pmichaud> (walking distance, fast service, reasonable noms)

[18:23] <dalek> nqp: 6293f05 | sorear++ | src/NQP/ (2 files):

[18:23] <dalek> nqp: Move $?PACKAGE and $?CLASS to the beginning of packages so that they are found correctly on JVM.  Fixes t/nqp/24-module.t

[18:23] <dalek> nqp: review: https://github.com/perl6/nqp/commit/6293f051f3

[18:26] *** lizmat left
[18:30] <FOAD> Fried grasshoppers?

[18:32] *** japhb_ left
[18:32] *** domidumont joined
[18:43] *** Kelder joined
[18:43] *** Ayiko left
[18:49] *** stevan_ left
[18:57] <dalek> v5: 2b372cc | (Tobias Leich)++ | / (5 files):

[18:57] <dalek> v5: Perl5::World is a class now rather a role

[18:57] <dalek> v5: 

[18:57] <dalek> v5: So Perl5::World doesnt get mixed in $*W, which wasnt working right in evals.

[18:57] <dalek> v5: Also added `import`-noop-token. I am not sure how to do require/import yet.

[18:57] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/2b372cca1f

[18:57] *** FROGGS joined
[18:57] <FROGGS> I start to hate wifi

[19:08] *** kaare_ joined
[19:09] *** bluescreen10 joined
[19:12] *** kaare__ left
[19:16] <moritz> nqp-jvm segfaults while compiling src/stage1/gen/QAST.nqp :(

[19:17] *** grondilu joined
[19:17] <benabik> JVM segfault?  Nice.

[19:18] <FROGGS> has somebody recognized a slowdown when using nqp to compile stuff?

[19:19] *** btyler joined
[19:21] *** domidumont left
[19:22] *** pecastro left
[19:27] *** DreamingInCode joined
[19:27] *** pecastro joined
[19:30] *** DreamingInCode is now known as abnorman

[19:31] *** xerox_ left
[19:31] <moritz> (that's openjdk, iirc

[19:32] <moritz> yes, it is

[19:35] <labster> lunch crowd is back

[19:35] *** twigel joined
[19:36] <labster> FROGGS: you're only now starting to hate the wifi here?

[19:37] *** lizmat joined
[19:38] *** japhb_ joined
[19:39] <FROGGS> well, the first days I only had the re-enter the coupon once a day, now I have to do this every our or so, and need turn off/on my wifi

[19:39] <FROGGS> brb

[19:39] *** FROGGS left
[19:40] *** FROGGS joined
[19:41] *** rindolf left
[19:41] *** rindolf joined
[19:41] <sorear> moritz: jnthn, yesterday: "You need 1.7.x.  If it segfaults it means you need a newer patchlevel - we hit a bug in invokedynamic."

[19:41] <sorear> s/yesterday/yesterhackathon/

[19:43] <moritz> and now my firefox segfaulted too.

[19:44] <FROGGS> I get a segfault when building nqp/master/HEAD

[19:44] <FROGGS> parrot 5.2.0-devel is right?

[19:44] <sorear> JOY

[19:45] <jnthn> FROGGS: yes. Does it explode at the P5Regex stage at the end? If so, it's typically 'cus it finds a wrong installed ModuleLoader.pbc

[19:45] <sorear> .oO( no, we're using the JVM now )

[19:45] <sorear> Util++ # random acts of kindness

[19:46] <dalek> nqp: 255a8bd | jonathan++ | src/vm/jvm/ (2 files):

[19:46] <dalek> nqp: Fix intermitent startup failure.

[19:46] <dalek> nqp: 

[19:46] <dalek> nqp: Boiled down to an accidental reliance on the order reflection gave

[19:46] <dalek> nqp: back an array of methods.

[19:46] <dalek> nqp: review: https://github.com/perl6/nqp/commit/255a8bd141

[19:46] <jnthn> sorear: Hopefully 255a8b helps 

[19:46] <sorear> jnthn: danke, testing

[19:47] <FROGGS> 	    src/stage1/gen/module_loader.pir

[19:47] <FROGGS> make: *** [src/stage1/nqpmo.pbc]

[19:47] <FROGGS> jnthn: so yes, module_loader stuff

[19:48] <jnthn> FROGGS: um, no, that's not the failure I meant

[19:49] <FROGGS> :/

[19:49] * moritz installs an openjdk-7 from debian testing

[19:50] *** bluescreen100 joined
[19:50] <colomon> rn: say bag a=>1, b=>2;

[19:50] <camelia> niecza v24-67-gb8f846e: OUTPUT«Unhandled exception: Excess arguments to bag, unused named a, b␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (bag @ 1) ␤  at /tmp/o4Bcv12WmD line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4499 (ANON @ 3) ␤  at /home/p6eval/niecza…

[19:50] <camelia> ..rakudo b2072f: OUTPUT«2 unexpected named parameters passed (a, b)␤  in sub bag at src/gen/CORE.setting:13393␤  in block  at /tmp/cMRYHyXvNR:1␤␤»

[19:50] <colomon> rn: say bag (a=>1, b=>2);

[19:50] <camelia> rakudo b2072f, niecza v24-67-gb8f846e: OUTPUT«bag("a" => 1, "b" => 2)␤»

[19:51] <colomon> TimToady: again... https://gist.github.com/colomon/5723570

[19:51] <colomon> TimToady: except .Set instead of .set

[19:52] <colomon> (now corrected)

[19:53] <dalek> v5: 8847b02 | (Tobias Leich)++ | rakudo.patch:

[19:53] <dalek> v5: fudge patch for current rakudo

[19:53] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/8847b02403

[19:53] <dalek> specs: e85286e | pmichaud++ | S17-concurrency.pod:

[19:53] <dalek> specs: [S17]: Add references to hyperops, feeds, and junctions.

[19:53] <dalek> specs: review: https://github.com/perl6/specs/commit/e85286eed7

[19:53] *** bluescreen10 left
[19:59] *** gudaht left
[20:01] <moritz> labster++ # http://blog.brentlaabs.com/2013/06/thanking-perl-community-for-awesome-yapc.html

[20:02] *** raiph left
[20:02] <labster> Yeah, I wish you had been here, moritz

[20:03] *** btyler left
[20:03] *** btyler joined
[20:05] <labster> r: X::NYI.new.say

[20:05] <camelia> rakudo b2072f: OUTPUT«use of uninitialized value of type Any in string context  in block  at /tmp/xggYlAOqio:1␤␤ not yet implemented. Sorry. ␤␤Error while creating backtrace: No such method 'backtrace' for invocant of type 'Any'␤  in method new at src/gen/CORE.setting:8731␤  in method n…

[20:06] *** kaare_ left
[20:06] <TimToady> .oO(A singleton object is only half as good as a doubleton object.)

[20:06] <labster> .oO (When are we going to implement uninitialized in string context )

[20:08] *** logie joined
[20:08] <moritz> labster: I'm hopeful to make YAPC::EU

[20:08] <moritz> at least

[20:09] *** btyler_ joined
[20:09] <labster> I'm not hopeful for myself, but I hope you have a good time

[20:09] <moritz> it's been way too long (Oslo Hackathon last year) since I last met some of #perl6 crowd in meat space

[20:10] <moritz> anyway, time for sleeping here

[20:10] <jnthn> 'night, moritz 

[20:10] *** btyler left
[20:10] <colomon> \o

[20:10] <japhb_> o/ moritz 

[20:11] <sorear> o/

[20:13] *** btyler_ left
[20:13] *** btyler joined
[20:21] *** quietfanatic joined
[20:24] *** snearch joined
[20:24] <colomon> TimToady: I've added some more: https://gist.github.com/colomon/5723570

[20:25] <colomon> TimToady: any thoughts on what bag %h should do?

[20:26] <labster> r: any and all

[20:26] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Undeclared routine:␤    and used at line 1. Did you mean '&rand', '&end', '&any'?␤␤»

[20:27] <labster> 'and' not declared?  that's a new one.

[20:32] <[Coke]> r: any() and all()

[20:32] <camelia> rakudo b2072f:  ( no output )

[20:33] *** stevan_ joined
[20:39] *** tomyan joined
[20:40] *** snearch left
[20:41] <FROGGS> jnthn: I'm bisecting my build problem right now

[20:41] <jnthn> ok

[20:41] <FROGGS> must be somewhere within the last two weeks or so

[20:42] *** sqirrel left
[20:45] *** s1n1 left
[20:45] <lizmat> r: class A is Hash {}; my $a=A.new; say $a.WHAT # shouldn't this have to say "(A)"

[20:45] <camelia> rakudo b2072f: OUTPUT«(Hash)␤»

[20:46] <jnthn> lizmat: Yes but we already know Hash.new is busted

[20:46] <colomon> TimToady: tried to get some of it down... https://gist.github.com/colomon/5723570

[20:46] <lizmat> jnthn: so what would be a quick fix / workaround ?

[20:47] <lizmat> not something with BUILD I presume, buut rather with bless ?

[20:47] <jnthn> Right

[20:47] <jnthn> r: class A is Hash { method new() { self.bless(*) } }; my $a=A.new; say $a.WHAT

[20:47] <camelia> rakudo b2072f: OUTPUT«(A)␤»

[20:48] *** tomyan left
[20:48] <lizmat> jnthn++!

[20:49] <colomon> rn: say bag a=>1, b=>30

[20:49] <camelia> rakudo b2072f: OUTPUT«2 unexpected named parameters passed (a, b)␤  in sub bag at src/gen/CORE.setting:13393␤  in block  at /tmp/H9rEnf9ju6:1␤␤»

[20:49] <camelia> ..niecza v24-67-gb8f846e: OUTPUT«Unhandled exception: Excess arguments to bag, unused named a, b␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (bag @ 1) ␤  at /tmp/Ja41vqNiBa line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4499 (ANON @ 3) ␤  at /home/p6eval/niecza…

[20:52] <sorear> jnthn: hey.  deletepos is indeed implemented only in src/vm/parrot; it is used only in nqp's own test suite, not used by rakudo at all

[20:52] <jnthn> sorear: oh, hm

[20:53] <sorear> could kill it I guess

[20:53] <jnthn> I think Pm may know something of the history of this

[20:53] <FROGGS> a history lesson \o/

[20:53] <jnthn> Let's ask when he returns from $errand 

[20:53] <sorear> ok

[20:55] <sorear> seems the 59-nqpop fails are exclusively due to missing deletepos

[20:57] *** zby_home left
[20:57] <tadzik> heh, I discovered that too when I was implementing deletepos for nqp/jvm :)

[20:58] *** _ilbot joined
[20:58] <sorear> tadzik: there is no nqp::deletepos for jvm in my branch

[20:58] <sorear> have yu pushed?

[20:58] <sorear> don't want to dup here

[20:58] <tadzik> sorear: I've probably opened a pull request

[20:58] <jnthn> hm, does that mean there's a tadzik patch somewhere?

[20:58] <tadzik> https://github.com/jnthn/nqp-jvm-prep/pull/14 :)

[20:58] *** tgt joined
[20:58] <FROGGS> jnthn: this one has borken it: [609c1f707cf1ef0bb708eedc8f735d255a3ef06e] Fix uninitialized memory access

[20:59] <tadzik> old times

[20:59] <tadzik> I don't think it's worth being there, if we got away without it for so long

[21:00] *** s1n joined
[21:02] *** _ilbot left
[21:04] *** japhb_ left
[21:05] <jnthn> FROGGS: Huh...that was just making sure some memory was zeroed

[21:06] <FROGGS> jnthn: maybe is a bit over-reacting

[21:06] <FROGGS> it* is

[21:07] <FROGGS> you can have my laptop when you want and have time for it

[21:07] <FROGGS> right now I checked out one commit before that and can work now...

[21:07] <jnthn> Hmm

[21:08] <jnthn> That's really odd

[21:08] <jnthn> Do you have a backtrace

[21:08] <jnthn> ?

[21:08] <FROGGS> no

[21:08] <FROGGS> it is some sort of coredump

[21:08] <FROGGS> dunno the error message in english

[21:09] <pmichaud> back again

[21:09] *** konundra left
[21:12] *** skids left
[21:18] <dalek> v5: e09ea83 | (Tobias Leich)++ | Makefile:

[21:18] <dalek> v5: pull in rakudos makefile changes

[21:18] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/e09ea839ba

[21:20] *** grondilu left
[21:21] <sorear> jnthn: remove nqp::deletepos from src/vm/parrot for consistency?

[21:21] <jnthn> If it's unused, +1

[21:21] *** adu left
[21:21] <jnthn> uh, which you told me it was earlier :)

[21:21] <tadzik> I think we verifed that 4 months ago :P

[21:22] *** konundra joined
[21:25] <sorear> should I try to build nqp-parrot to see if I botched the removal?

[21:26] <colomon> TimToady: should "a".Set be the same as set "a"  ?

[21:27] <pmichaud> should be the same as Set.new("a")

[21:27] <dalek> nqp: f40d6de | sorear++ | / (3 files):

[21:27] <dalek> nqp: Remove nqp::deletepos

[21:27] <dalek> nqp: 

[21:27] <dalek> nqp: Per conversation at hackathon, we've decided that nqp::deletepos is not needed

[21:27] <dalek> nqp: as an op.  It has insufficient value-add compared to nqp::bindpos(nqp::null()).

[21:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/f40d6de606

[21:27] <colomon> pmichaud: which is set "a".   :)

[21:27] <pmichaud> colomon: okay... it just depends on which you feel is more fundamental. :)

[21:27] *** spider-mario left
[21:28] <pmichaud> we're having trouble with hashes at the moment because Hash.new() is defined as  "hash ..."   instead of vice-versa.

[21:28] <colomon> pmichaud: or how lazy the person typing is.

[21:28] <colomon> pmichaud: ah, ick.

[21:28] <pmichaud> in general we consider the method forms to be fundamental and the sub forms to be built in terms of methods

[21:29] *** mucker left
[21:29] <tadzik> hm, I thought deletepos also shifted the elements. Whatever, it's history now :)

[21:29] <pmichaud> it can shorten the array, yes.  but it doesn't shift.

[21:30] <pmichaud> wait, let me rephrase :-)

[21:30] <tadzik> shift as in "bit shift :)"

[21:30] <pmichaud> Parrot's deletepos may have shifted elements.  

[21:30] <tadzik> it did

[21:30] <tadzik> it was a loop assigning [i] = [i+1]

[21:30] <pmichaud> if so, then that's something that can be correct for Parrot, but it's not useful to NQP or Rakudo.

[21:30] <tadzik> or rather: it is

[21:31] <tadzik> that's probably the reason why it was unused

[21:31] <pmichaud> so NQP doesn't need an equivalent deletepos

[21:31] *** rindolf left
[21:31] <sorear> not sufficiently useful to optimize the n=1 case of splice eh

[21:31] <pmichaud> not only that, but splice is likely more efficient :)(

[21:31] <pmichaud> :)

[21:32] <sorear> :)

[21:32] * sorear now building for parrot

[21:33] <sorear> what

[21:34] <sorear> make: *** [src/stage1/nqpmo.pbc] Segmentation fault: 11

[21:35] <jnthn> wtf

[21:35] <flussence> ...have you tried taking your RAM out and blowing on it?

[21:36] <colomon> rn: say "a" !~ Pair

[21:36] <camelia> niecza v24-67-gb8f846e: OUTPUT«===SORRY!===␤␤Unsupported use of !~ to do negated pattern matching; in Perl 6 please use !~~ at /tmp/XPKcrpzLtr line 1:␤------> say "a" !~ ⏏Pair␤␤Parse failed␤␤»

[21:36] <camelia> ..rakudo b2072f: OUTPUT«===SORRY!===␤Unsupported use of !~ to do negated pattern matching; in Perl 6 please use !~~␤at /tmp/9qU_jMRs9G:1␤------> say "a" !~ ⏏Pair␤»

[21:36] <sorear> flussence: it's a macbook air, the RAM is soldered in place

[21:36] <colomon> ah

[21:36] * colomon missed that error message in his backlog

[21:37] *** dmol left
[21:38] <dalek> nqp: 84d8240 | jonathan++ | examples/load_bytecode.nqp:

[21:38] <dalek> nqp: Toss useless example.

[21:38] <dalek> nqp: review: https://github.com/perl6/nqp/commit/84d8240c09

[21:43] *** lizmat_ joined
[21:44] <dalek> perl6-bench: 008f005 | (Geoffrey Broadwell)++ | / (2 files):

[21:44] <dalek> perl6-bench: Add --verbose flag to timeall that prints extra info about current testing state

[21:44] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/008f005218

[21:44] <dalek> perl6-bench: 1e65b59 | (Geoffrey Broadwell)++ | timeall:

[21:44] <dalek> perl6-bench: Catch requests to time compiler variants that don't have an entry in the compilers list

[21:44] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/1e65b595ab

[21:44] <dalek> perl6-bench: 9874602 | (Geoffrey Broadwell)++ | timeall:

[21:44] <dalek> perl6-bench: Fix a braino the swapped substitutions in two places; add support for magic DATA directory; show when a text is being skipped

[21:44] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/9874602020

[21:44] <dalek> perl6-bench: dc4cf46 | (Geoffrey Broadwell)++ | data/ (3 files):

[21:44] <dalek> perl6-bench: Add data/ directory with a README, the Panda projects.json file, and an American English word list

[21:44] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/dc4cf4622d

[21:44] <dalek> perl6-bench: 564d244 | (Geoffrey Broadwell)++ | timeall:

[21:44] <dalek> perl6-bench: Add more verbosity to verbose timeall output

[21:44] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/564d244e90

[21:45] *** japhb_ joined
[21:46] <diakopter> arnsholt: where u?

[21:46] *** lizmat left
[21:48] <lizmat_> r: my %h=a=>1,b=>2; say %h; say %h<a b>:p:!delete; say %h # ARGH, this works, the pb is in the test suite

[21:48] <yoleaux> 28 May 2013 16:27Z <jnthn> lizmat_: I wonder if the Mu \key shouldn't be TKey \key

[21:48] <camelia> rakudo b2072f: OUTPUT«("a" => 1, "b" => 2).hash␤"a" => 1 "b" => 2␤("a" => 1, "b" => 2).hash␤»

[21:48] *** lizmat_ is now known as lizmat

[21:49] <colomon> sorear: how did you do gather/take in Niecza?  (general approach all that I'm curious about at the moment.)

[21:50] *** tgt left
[21:53] <colomon> TimToady: what stupid thing am I doing here? https://gist.github.com/colomon/5725313

[21:54] <colomon> TimToady: or at least, what stupid thing is making it not parse with an obscure message.

[21:54] <sorear> colomon: by writing a stackless VM and switching the soft stacks

[21:54] <colomon> sorear: thanks

[21:55] <sorear> look at Kernel.Take and Kernel.CoTake, it's relatively straightforward

[21:55] <colomon> sorear++

[21:55] <sorear> much more straightforward than the approach jnthn++ invented for nqp-jvm

[21:55] <tadzik> sorear: did you manage to fix the segfault?

[21:56] <tadzik> I get it here too

[21:56] <sorear> but has the disadvantage of slowing down all code and significantly complicating coding

[21:56] <tadzik> my ram isn't soldered, but I very much doubt it's ram's fault

[21:56] <sorear> tediating, really.  writing CPS code is not hard, just seriously annoying

[21:57] <sorear> tadzik: no idea, but it crashes in the same way with a completely clean segfault so I'm sure it's not a hardware fault

[21:57] <sorear> a hardware fault would appear nondeterministic, because even if that physical byte is deterministically broken, the virtual memory mapping is random

[21:58] <tadzik> completely clean segfault :)

[21:58] <tadzik> yeah, cleaning doesn't help me either

[22:01] <tadzik> well, I'll have to stick to rakudo/jvm then :)

[22:02] *** lustlife1 left
[22:04] *** lustlife left
[22:08] <dalek> nqp: ede50c1 | jonathan++ | src/vm/parrot/6model/reprs/P6opaque.c:

[22:08] <dalek> nqp: Fix a thinko.

[22:08] <dalek> nqp: review: https://github.com/perl6/nqp/commit/ede50c1f7a

[22:08] <dalek> roast: b38771a | (Elizabeth Mattijsen)++ | S32-hash/delete-adverb.t:

[22:08] <dalek> roast: It was the test for :p:!delete that was wrong.  Duh

[22:08] <dalek> roast: review: https://github.com/perl6/roast/commit/b38771af0c

[22:10] *** bluescreen100 left
[22:10] <arnsholt> Derp. Sorry 'bout that >.<

[22:12] *** stevan_ left
[22:12] <FROGGS> nqp HEAD builds \o/

[22:15] <dalek> nqp: cd4197e | pmichaud++ | t/parrot/05-vtable.t:

[22:15] <dalek> nqp: Update plan for parrot/05-vtable.t .

[22:15] <dalek> nqp: review: https://github.com/perl6/nqp/commit/cd4197e819

[22:17] <dalek> rakudo/nom: f737ff7 | labster++ | src/core/IO.pm:

[22:17] <dalek> rakudo/nom: move copy from IO::Handle to IO::Path, deprecate IO::Handle version

[22:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f737ff7bb0

[22:18] <sorear> how crazy would it be to add a mode to nqp which runs all the tests in the same JVM?

[22:18] <colomon> TimToady, pmichaud: Do these look okay? https://gist.github.com/colomon/5725455

[22:18] <[Coke]> I would be concerned about globals.

[22:19] <[Coke]> (how do you know that you have a clean state after a test completes, e.g.)

[22:23] <dalek> roast: 060d569 | (Solomon Foster)++ | S02-types/set.t:

[22:23] <dalek> roast: Some basic .Set tests.

[22:23] <dalek> roast: review: https://github.com/perl6/roast/commit/060d5695fa

[22:24] <sorear> now beating on t/qast/01-qast.t

[22:24] <colomon> [Coke]: if that was directed at me, how could I test for unclean state and globals?

[22:25] <dalek> perl6-bench: 5bb409d | (Geoffrey Broadwell)++ | microbenchmarks.pl:

[22:25] <dalek> perl6-bench: Convert some exit() calls to nqp::exit() for nqp microbenchmarks; remove nqp-moarvm skip for several microbenchmarks

[22:25] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/5bb409d39b

[22:27] <pmichaud> colomon: checking the roast commit

[22:31] <pmichaud> colomon: roast commit looks okay.  I probably wouldn't have used showset(), but rather tested each element individually.  :-)  

[22:31] <colomon> pmichaud: that would make set.t very long...  :)

[22:32] <colomon> pmichaud: plus the count of elements?

[22:32] <colomon> (I mean, also testing the count.)

[22:33] <pmichaud> is [ a=>3, b=>0, 'c', 'a' ].Set<a b c>, "True False True";

[22:33] <pmichaud> is [ a=>3, b=>0, 'c', 'a' ].Set.<a b c>, "True False True";

[22:33] <pmichaud> (if that works at all... reading spec)

[22:35] *** benabik left
[22:36] <colomon> pmichaud: that does not test to make sure there are not other things in the set... but it's an interesting approach.

[22:36] <pmichaud> is [ a=>3, b=>0, 'c', 'a'].Set.count, 2

[22:36] *** sunnavy left
[22:36] *** hypolin left
[22:36] *** Util left
[22:36] *** ruoso left
[22:36] *** scottp left
[22:36] *** awwaiid left
[22:36] *** masak left
[22:36] *** Nom- left
[22:36] *** aghbas_ left
[22:36] *** snarkyboojum_ left
[22:36] *** estrabd_ left
[22:36] *** LordV left
[22:36] *** cooper left
[22:36] *** arlinius left
[22:36] <pmichaud> er, .elems

[22:37] *** PacoAir left
[22:38] *** LordV joined
[22:38] *** Util joined
[22:38] *** ruoso joined
[22:39] *** masak joined
[22:39] *** awwaiid joined
[22:45] *** colomon left
[22:45] <dalek> roast: b0f6ccb | (Solomon Foster)++ | S02-types/ (2 files):

[22:45] <dalek> roast: Some basic .KeySet and .Bag tests.

[22:45] <dalek> roast: review: https://github.com/perl6/roast/commit/b0f6ccbc0a

[22:45] *** japhb_ left
[22:48] *** arlinius joined
[22:48] *** sunnavy joined
[22:48] *** hypolin joined
[22:48] *** scottp joined
[22:48] *** Nom- joined
[22:48] *** snarkyboojum_ joined
[22:48] *** aghbas_ joined
[22:48] *** estrabd_ joined
[22:48] *** cooper joined
[22:50] *** btyler left
[22:52] *** labster left
[22:53] *** FROGGS left
[22:54] *** tomyan joined
[22:55] *** lizmat left
[22:57] *** btyler joined
[22:58] *** tgt joined
[22:58] *** pecastro left
[23:01] *** sunnavy left
[23:01] *** hypolin left
[23:01] *** scottp left
[23:01] *** Nom- left
[23:01] *** aghbas_ left
[23:01] *** snarkyboojum_ left
[23:01] *** estrabd_ left
[23:01] *** cooper left
[23:01] *** arlinius left
[23:04] *** arlinius joined
[23:04] *** sunnavy joined
[23:04] *** hypolin joined
[23:04] *** scottp joined
[23:04] *** Nom- joined
[23:04] *** snarkyboojum_ joined
[23:04] *** aghbas_ joined
[23:04] *** estrabd_ joined
[23:04] *** cooper joined
[23:09] *** raiph joined
[23:20] *** estrabd joined
[23:22] *** estrabd_ left
[23:30] *** konundra left
[23:33] <cognominal> I am watching TimToady's talk and apparently there is a COMPOSE phaser. What gives?

[23:37] <cognominal> "there is only one way to do objects until you know better"  :)

[23:39] <cognominal> il parle des CoCs :)

[23:40] <lue> S02:4347 should surely say "=begin END" and "=END" instead of "=begin finish" and "=finish", no?

[23:41] *** ajr_ left
[23:41] *** tgt left
[23:41] <cognominal> oops wrong channel again for the last two posts :(

[23:42] *** tomyan left
[23:43] <lue> aw, it's actually the other way around. Apparently someone did s/=END/=finish/ at some point.

[23:43] <dalek> perl6-roast-data: 7d7b8ee | coke++ | / (4 files):

[23:43] <dalek> perl6-roast-data: today (automated commit)

[23:43] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/7d7b8ee660

[23:43] * lue prefers =END because it's shorter and the all-caps makes it feel more special, which its behavior is.

[23:43] <dalek> rakudo-star-daily: 8bd5a01 | coke++ | log/ (5 files):

[23:43] <dalek> rakudo-star-daily: today (automated commit)

[23:43] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/8bd5a013d9

[23:46] *** btyler left
[23:46] *** konundra joined
[23:47] <[Coke]> r: COMPOSE *

[23:47] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Undeclared name:␤    COMPOSE used at line 1␤␤»

[23:48] <dalek> specs: 26bc31d | lue++ | S02-bits.pod:

[23:48] <dalek> specs: [S02] Updated table in "Double-underscore forms".

[23:48] <dalek> specs: 

[23:48] <dalek> specs: =END is actually =finish now and =DATA is actually =data (this update

[23:48] <dalek> specs: was already in the following paragraphs, but the table was neglected,

[23:48] <dalek> specs: which this fixes).

[23:48] <dalek> specs: review: https://github.com/perl6/specs/commit/26bc31dc04

[23:48] <lue> std: COMPOSE *

[23:48] <camelia> std ea24a29: OUTPUT«ok 00:00 42m␤»

[23:53] <timotimo> btw: random cool thing i found:

[23:53] <timotimo> r: class Player { has $.color = <red green blue yellow pink potato>[(state $i)++]; }; say Player.new xx 6;

[23:53] <camelia> rakudo b2072f: OUTPUT«Player.new(color => "red") Player.new(color => "green") Player.new(color => "blue") Player.new(color => "yellow") Player.new(color => "pink") Player.new(color => "potato")␤»

[23:54] <timotimo> r: sub test($foo = <red green blue yellow pink potato>[(state $i)++]) { say $foo }; say test xx 3; say test("bar"); say test("baz"); say test("quux"); say test xx 2;

[23:54] <camelia> rakudo b2072f: OUTPUT«===SORRY!===␤Undeclared routine:␤    xx used at line 1␤␤»

[23:54] <timotimo> r: sub test($foo = <red green blue yellow pink potato>[(state $i)++]) { say $foo }; say test() xx 3; say test("bar"); say test("baz"); say test("quux"); say test() xx 2;

[23:54] <camelia> rakudo b2072f: OUTPUT«red␤green␤blue␤True True True␤bar␤True␤baz␤True␤quux␤True␤yellow␤pink␤True True␤»

[23:55] <timotimo> er, huh?

[23:55] <timotimo> oh, of course

