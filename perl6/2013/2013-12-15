[00:04] *** xinming left
[00:05] *** xinming joined
[00:09] *** BenGoldberg joined
[00:10] <BenGoldberg> r: my @a := 1, { ($^a+1) / $^a } ... *; .say for @a[92]

[00:10] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«1.618033988749894848205␤»

[00:10] <BenGoldberg> r: my @a := 1, { ($^a+1) / $^a } ... *; .say for @a[93]

[00:10] <camelia> rakudo-jvm 106959: OUTPUT«1.618033988749895␤»

[00:10] <camelia> ..rakudo-parrot 106959: OUTPUT«1.6180339887499␤»

[00:11] *** gtxcomm joined
[00:15] <webchat_masak> my post: https://gist.github.com/masak/7966845

[00:15] <webchat_masak> (advent post)

[00:15] <webchat_masak> again, as stated, I will publish it tomorrow. submitting it for review now, and going to bed.

[00:15] <webchat_masak> 'night, #perl6

[00:15] *** pmurias left
[00:23] <raydiak> http://www.cl.cam.ac.uk/teaching/1999/AGraphHCI/SMAG/footnode.html#foot238

[00:23] <raydiak> ^ anyone feel like factoring that for me real quick? :)

[00:25] *** rurban1 left
[00:25] *** webchat_masak left
[00:28] <lue> raydiak: perhaps, but I either have to discover how tell Maxima to interpret implied multiplication or insert the * symbols. :)

[00:29] <jnthn> raydiak: heh, I think I mighta taken that course...or maybe only the second year one by the same lecturer... :)

[00:29] <jnthn> Sadly, I think I forgot it all...

[00:29] <colomon> lue: sounds like you might need… a grammar!

[00:33] <BenGoldberg> r: sub infix:<oof> ($a, $b) { $b, $a }; say [oof] 1..9; # good

[00:33] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«9 8 7 6 5 4 3 2 1␤»

[00:33] <BenGoldberg> r: sub infix:<oof> (*@a) { @a.reverse }; say [oof] 1..9 # confused

[00:33] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«9 7 5 3 1 2 4 6 8␤»

[00:35] <BenGoldberg> Why does the .reverse version produce that odd order?

[00:35] <BenGoldberg> (Or, alternativly, if that's *

[00:35] <BenGoldberg> if that's right, then why does the $b, $a produces such a normal looking order?)

[00:36] <jnthn> r: sub infix:<oof> (*@a) is assoc('list') { @a.reverse }; say [oof] 1..9

[00:36] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«9 8 7 6 5 4 3 2 1␤»

[00:36] <lue> r: sub infix:<oof> (*@a) { @a.reverse }; say 1 oof 2 oof 3 oof 4 oof 5 oof 6 oof 7 oof 8 oof 9;

[00:36] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«9 7 5 3 1 2 4 6 8␤»

[00:37] *** tmetro left
[00:37] <colomon> jnthn++

[00:37] <lue> heh, it's fun trying to visualize what happens there, without list assoc :)

[00:37] <colomon> r: sub infix:<oof> (*@a) { say :@a.perl; @a.reverse }; say [oof] 1..9 # confused

[00:37] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«"a" => [1, 2]␤"a" => [2, 1, 3]␤"a" => [3, 1, 2, 4]␤"a" => [4, 2, 1, 3, 5]␤"a" => [5, 3, 1, 2, 4, 6]␤"a" => [6, 4, 2, 1, 3, 5, 7]␤"a" => [7, 5, 3, 1, 2, 4, 6, 8]␤"a" => [8, 6, 4, 2, 1, 3, 5, 7, 9]␤9 7 5 3 1 2 4 6 8␤»

[00:38] <BenGoldberg> Ahh, I see! :)

[00:39] <BenGoldberg> r: sub infix:<oof> (*@a) is assoc('list') { say :@a.perl @a.reverse }; say [oof] 1..9

[00:39] <camelia> rakudo-jvm 106959: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/2eidhXO_FS␤Two terms in a row␤at /tmp/2eidhXO_FS:1␤------> [32m> (*@a) is assoc('list') { say :@a.perl [33m⏏[31m@a.reverse }; say [oof] 1..9[0m␤    expecting any of:␤        method ar…»

[00:39] <camelia> ..rakudo-parrot 106959: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/zpumwE9aGC␤Two terms in a row␤at /tmp/zpumwE9aGC:1␤------> [32m> (*@a) is assoc('list') { say :@a.perl [33m⏏[31m@a.reverse }; say [oof] 1..9[0m␤    expecting any of:␤        method…»

[00:39] <colomon> BenGoldberg: if it's list assoc, the entire list passed to [oof] is sent all at once

[00:40] <colomon> (and only once)

[00:40] <BenGoldberg> Got it.  Is , (comma) list assoc?

[00:41] <BenGoldberg>  r: sub infix:<oof> (*@a) is assoc('list') { say :@a; @a.reverse }; say [oof] 1..9

[00:41] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«␤9 8 7 6 5 4 3 2 1␤»

[00:41] <BenGoldberg>  r: sub infix:<oof> (*@a) is assoc('list') { say :@a.perl; @a.reverse }; say [oof] 1..9

[00:41] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«"a" => [1, 2, 3, 4, 5, 6, 7, 8, 9]␤9 8 7 6 5 4 3 2 1␤»

[00:41] <colomon> forgot the .perl

[00:41] <raydiak> jnthn: you have a leg up on me, then...I didn't graduate high school :)

[00:42] <colomon> BenGoldberg: I dunno about comma operator.  I think of it as list assoc, but the spec doesn't seem to mention it.  (Compare http://perlcabal.org/syn/S03.html#Comma_operator_precedence to http://perlcabal.org/syn/S03.html#List_infix_precedence )

[00:43] <colomon> actually, looking again, I don't think the comma operator can be.

[00:46] <lue> preflex: tell tadzik I'm having trouble with panda:  https://gist.github.com/lue/01c2f45754f97f98460a  I don't know why this is :(

[00:46] <preflex>  Consider it noted.

[00:52] <lue> preflex: tell masak I left some comments on your advent gist.

[00:52] <preflex>  Consider it noted.

[00:52] <lue> masak++ for the post :)

[01:04] *** jeff_s1 left
[01:05] *** jeff_s1 joined
[01:09] <jnthn> sleep &

[01:27] <dwarring> r: grammar G {rule TOP {<ident> {say $<ident>}}}; G.parse("hi")

[01:27] <camelia> rakudo-parrot 106959: OUTPUT«｢hi｣␤␤»

[01:27] <camelia> ..rakudo-jvm 106959: OUTPUT«(Any)␤»

[01:30] <dwarring> r: grammar G {rule TOP {<ident> {say $/}}}; G.parse("hi")

[01:30] <camelia> rakudo-jvm 106959: OUTPUT«Nil␤»

[01:30] <camelia> ..rakudo-parrot 106959: OUTPUT«｢hi｣␤ ident => ｢hi｣␤␤»

[01:31] <dwarring> r: grammar G {rule TOP {(<ident>) {say $0}}}; G.parse("hi")

[01:31] <camelia> rakudo-parrot 106959: OUTPUT«｢hi｣␤ ident => ｢hi｣␤␤»

[01:31] <camelia> ..rakudo-jvm 106959: OUTPUT«(Any)␤»

[01:33] <dwarring> is rakudo-parrot 'right' here? 

[01:33] *** Rotwang left
[01:34] <dwarring> (in the above three examples)

[01:42] <[Coke]> woolfy: I think lizmat picked that topic, actually. Just along for the ride, me.

[01:43] <dalek> perl6-roast-data: 919435a | coke++ | / (6 files):

[01:43] <dalek> perl6-roast-data: today (automated commit)

[01:43] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/919435a687

[01:48] <dalek> perl6-roast-data: d0b5ef6 | coke++ | bin/rakudo.moar.sh:

[01:48] <dalek> perl6-roast-data: get ./perl6 so we can run tests

[01:48] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/d0b5ef62d2

[02:03] *** tgt left
[02:03] *** beastd left
[02:28] *** raiph joined
[02:33] *** diakopter joined
[02:41] *** ssutch joined
[02:44] *** diakopter left
[02:47] * dwarring has looked at roast - thinks it may need some test cases for the above

[02:50] *** diakopter joined
[02:58] *** ssutch left
[03:01] *** xenoterracide left
[03:07] *** _ilbot left
[03:08] *** _ilbot joined
[03:24] *** ssutch joined
[03:28] *** xinming_ joined
[03:29] *** daxim joined
[03:29] *** xinming left
[03:31] *** gdey joined
[03:39] <BenGoldberg> r: sub infix:<L> (*@a) is assoc('list') { @a }; say [L] 1..10

[03:39] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«1 2 3 4 5 6 7 8 9 10␤»

[03:39] <BenGoldberg> r: sub infix:<L> (*@a) is assoc('list') { @a }; say [RL] 1..10

[03:39] <camelia> rakudo-parrot 106959: OUTPUT«Too many positional parameters passed; got 10 but expected 2␤  in block  at gen/parrot/CORE.setting:16523␤  in sub  at gen/parrot/CORE.setting:16630␤  in block  at /tmp/dv2sL_OiUl:1␤  in any  at /tmp/dv2sL_OiUl:1␤  in any  at gen/parrot/stage2/…»

[03:39] <camelia> ..rakudo-jvm 106959: OUTPUT«Too many positional parameters passed; got 10 but expected 2␤  in block  at /tmp/War5E7NecT:1␤  in any eval at gen/jvm/stage2/NQPHLL.nqp:1086␤  in any evalfiles at gen/jvm/stage2/NQPHLL.nqp:1292␤  in any command_eval at gen/jvm/stage2/NQPHLL.nqp:119…»

[03:40] <BenGoldberg> Apparently you can't do [R<foo>] where <foo> is assoc('list')...

[03:46] *** ssutch left
[03:47] *** ssutch joined
[03:48] *** ssutch left
[03:51] *** hummeleB1 left
[03:51] *** gfldex left
[03:54] *** gfldex joined
[03:55] *** rurban1 joined
[03:55] *** jeff_s1 left
[03:56] *** cognominal left
[03:56] *** jeff_s1 joined
[03:56] *** cognominal joined
[04:00] *** atroxaper joined
[04:06] *** preflex_ joined
[04:06] *** ChanServ sets mode: +v preflex_

[04:06] *** preflex left
[04:06] *** preflex_ is now known as preflex

[04:17] *** gdey left
[04:32] <lue> r: sub infix:<☃> (*@a) is assoc('list') { @a }; say [R☃] 1..10

[04:32] <camelia> rakudo-jvm 106959: OUTPUT«Too many positional parameters passed; got 10 but expected 2␤  in block  at /tmp/Q_e_9gLmzV:1␤  in any eval at gen/jvm/stage2/NQPHLL.nqp:1086␤  in any evalfiles at gen/jvm/stage2/NQPHLL.nqp:1292␤  in any command_eval at gen/jvm/stage2/NQPHLL.nqp:119…»

[04:32] <camelia> ..rakudo-parrot 106959: OUTPUT«Too many positional parameters passed; got 10 but expected 2␤  in block  at gen/parrot/CORE.setting:16523␤  in sub  at gen/parrot/CORE.setting:16630␤  in block  at /tmp/wuSLkaZwul:1␤  in any  at /tmp/wuSLkaZwul:1␤  in any  at gen/parrot/stage2/…»

[04:34] *** atroxaper left
[04:35] *** atroxaper joined
[04:50] *** thou joined
[04:59] *** Mouq left
[05:21] *** MikeFair__ left
[05:21] *** MikeFair joined
[05:23] *** wooden left
[05:25] *** raiph left
[05:27] *** JimmyZ joined
[05:28] *** MikeFair left
[05:29] *** wooden joined
[05:31] *** MikeFair joined
[05:35] *** BenGoldberg left
[05:46] *** fridim_ left
[06:09] *** Mouq joined
[06:12] *** kivutar left
[06:13] *** Mouq left
[06:26] *** atroxaper left
[06:30] *** rurban1 left
[06:36] <moritz> timotimo: https://gist.github.com/moritz/2375e30d8c3bf35bcf04

[06:48] *** ponbiki left
[06:56] *** SevenWolf joined
[07:03] *** laidback_01 left
[07:03] *** laidback_01 joined
[07:31] *** rurban1 joined
[07:35] *** rurban1 left
[07:36] *** atroxaper joined
[07:52] *** kaare_ joined
[07:58] *** Mouq joined
[08:00] *** darutoko joined
[08:02] *** Mouq left
[08:07] *** atroxaper left
[08:11] <woolfy> Coke: could well be that lizmat picket the topic.  You wrote the thing.  Nice work.  Useful.  Thanks!

[08:14] *** nnunley_ left
[08:15] *** ssutch joined
[08:19] *** ssutch left
[08:20] *** SamuraiJack_ joined
[08:32] <dwarring> .tell pmurias just your your question about PDF::Grammar. In it's present form its a a grab-bag of parsing rules for different PDF elements. Doesn't handle compression, which happens with most real world PDFs

[08:33] <dalek> roast: 31bff3d | (David Warring [email@hidden.address] | S05-grammar/action-stubs.t:

[08:33] <dalek> roast: test for availability of $/ etc within tokens (fudged on jvm)

[08:33] <dalek> roast: review: https://github.com/perl6/roast/commit/31bff3d16c

[08:34] <dwarring> ^ thats for the stuff I was trying out earlier

[08:35] <dwarring> r: grammar G {rule TOP {<ident> {say $<ident>}}}; G.parse("hi")

[08:35] <camelia> rakudo-parrot 106959: OUTPUT«｢hi｣␤␤»

[08:35] <camelia> ..rakudo-jvm 106959: OUTPUT«(Any)␤»

[08:35] <dwarring> I've looked the the spec again and thinking that it's a nyi in jvm

[08:36] <FROGGS> yeah, that needs fixing

[08:45] <woolfy> masak++  for nice advent post...  I've sent you a couple of comments, I found some typos

[08:54] <masak> woolfy: nice, thank you.

[08:54] <preflex>  masak: you have 1 new message. '/msg preflex messages' to read it.

[08:54] <masak> preflex: messages

[08:54] <preflex>  lue said 8 hours, 2 minutes and 6 seconds ago: I left some comments on your advent gist.

[08:54] <masak> \o/

[08:56] <diakopter> masak: wb :)

[08:56] <masak> lue: all fixed; thank you.

[08:56] <masak> raiph: all fixed; thank you.

[08:58] <woolfy> masak++

[08:58] <masak> woolfy: all fixed; thank you.

[08:59] <masak> need to breakfast over here -- after that I'll do the conversion into Wordpress, and publish le post.

[09:01] *** xinming joined
[09:04] *** xinming_ left
[09:13] *** SamuraiJack_ left
[09:16] * dwarring looks at the advent brainstorming list "perl resources". there's a lot of good stuff out there that help me get going: specs, roast, perl6-examples, irc (live and logs), rossetta code, rakudo source (mostly written in Perl 6), doc.perl6.org, perl6 modules. and of-course the advent calendar

[09:21] *** xinming left
[09:22] <diakopter> is there a comprehensive list of all Perl 6 blog posts?  with ones that are bitrotteng/out-of-date clearly marked? that would be very helpful to someone trying to learn from blog posts

[09:23] *** xinming joined
[09:24] <dwarring> good question. didn't mention http://6guts.wordpress.com/ for a start

[09:29] * dwarring also uses reddit some times

[09:34] *** xinming left
[09:35] *** xinming joined
[09:46] *** Mouq joined
[09:50] *** Mouq left
[09:54] *** denis_boyun joined
[10:06] *** SevenWolf left
[10:12] *** atroxaper joined
[10:16] *** atroxaper left
[10:18] *** Rotwang joined
[10:37] *** denis_boyun left
[10:39] *** integral left
[10:43] *** denis_boyun joined
[10:46] <masak> ok, back.

[10:46] <masak> conversion to Wordpress begins.

[10:46] <diakopter> masak: howdy :)

[10:49] *** thou left
[10:50] *** denis_boyun left
[10:50] <masak> diakopter: ahoj. :)

[10:51] *** spider-mario joined
[10:53] <masak> (I categorized days 10, 11, 12, and 14 as "2013" on Wordpress)

[10:57] <masak> post is live: http://perl6advent.wordpress.com/2013/12/15/day-15-numbers-and-ways-of-writing-them/

[10:57] <masak> sorry about the delay :)

[10:57] <masak> for future reference, here is how you can easily convert from (Github gist) Markdown into (Wordpress <p>-less) HTML:

[10:58] <masak> $ pandoc -f markdown -t html foo.md > foo.html

[10:58] <masak> $ perl6 -p -e 's/^\<p\>//; s[\<\/p\>] = "\n"; s[\<pre\>\<code\>] = "<pre>"; s[\<\/code\>\<\/pre\>] = "</pre>\n"' foo.html > foo.wordpress

[11:00] <masak> lue++ # 'adverbly' post

[11:01] <masak> I'm reading the part about adverbs and precedence, and I'm thinking that adverbs are probably just complicated enough for the average programmer not to grok them. :)

[11:01] <masak> a bit like variant sigils in Perl 5.

[11:02] *** integral joined
[11:08] <jnthn> Thankfully, the only place the average programmer is likely to actually run into them is on a subscript, which I guess can be explained in a grokkable way.

[11:21] <moritz> masak++ # advent post

[11:22] *** denisboyun joined
[11:25] *** daniel-s_ joined
[11:29] *** denisboyun left
[12:01] *** sqirrel joined
[12:27] *** xinming left
[12:28] *** rindolf joined
[12:28] *** xinming joined
[12:31] <masak> jnthn: that's a good point.

[12:31] <masak> jnthn: fwiw, I believe they're actually fairly sane -- unless you think about the implementation too much ;)

[12:50] <jnthn> Do Not Mention The Adverbs Implementation :P

[13:04] <FROGGS> :P, indeed :o)

[13:04] <FROGGS> :o() even

[13:09] *** xenoterracide joined
[13:17] *** gfldex left
[13:21] *** xenoterracide left
[13:21] *** xenoterracide joined
[13:24] <moritz> :P⊆ :NP

[13:27] *** tgt joined
[13:30] *** rindolf left
[13:49] *** daniel-s_ left
[13:53] *** sqirrel left
[14:01] *** Maddingu1 is now known as Maddingue

[14:06] *** timotimo left
[14:15] *** spider-mario left
[14:25] *** pecastro left
[14:25] *** zakharyas joined
[14:28] * masak waves from a train o/

[14:30] *** pecastro joined
[14:31] <nwc10> going anywhere interesting?

[14:33] <masak> I'm going up to .se's city #2 to teach.

[14:34] <nwc10> it is left as an excercise to the reader, as to whether this is exciting? :-)

[14:35] *** rindolf joined
[14:38] <jnthn> Is rain exciting? :)

[14:48] <tadzik> lucky it's not city #17 ;)

[14:48] <preflex>  tadzik: you have 1 new message. '/msg preflex messages' to read it.

[14:48] <tadzik> what did I do :o

[14:48] *** beastd joined
[14:49] <tadzik> oh, lue, I don't know why it is either :(

[14:49] <tadzik> it happenened some time after shell/run started returning objects instead of numbers, now sometimes the process succeeds but rakudo gets a false value

[14:50] <tadzik> I tried debugging it, no luck

[14:51] <masak> nwc10: teaching is always a little exciting. but frankly I'm more excited by the prospect of doing my last five days of $work for the year, and going back home to @family.

[14:56] <rjbs> Hm.  It's good train-riding weather here.

[14:56] <rjbs> Sadly, America. So no trains.

[14:58] *** census joined
[14:58] <census> hi masak!  hi labster!  hi FROGGS!  long time no speak

[15:05] <masak> census! \o/

[15:05] <masak> rjbs: waitwait, the US has no trains?

[15:05] <masak> rjbs: I'm sure I saw one in Back to the Future III.

[15:06] <census> the US has trains masak unless i'm jumpng into the converstaion at a bad point

[15:07] <masak> census: I like your sense of humility, and bravery in jumping into a discussion ;)

[15:08] <masak> census: and no, it isn't a bad point.

[15:08] <census> thanks masak :)

[15:08] <masak> (and yes, I know you have trains) :P

[15:08] <census> masak i figured you did :)

[15:08] <masak> :D

[15:09] <masak> census: how're you doing? made any population-wide statistical analyses lately?

[15:09] <census> i'm about to!

[15:09] <census> i'm lke moments away from it

[15:09] <census> thanks for askign!

[15:09] <census> i was workign on one project and it is goign horribly

[15:09] <census> so i've tabled it for the moment and am doing another one

[15:09] *** xenoterracide left
[15:09] <census> all the same data set

[15:10] <masak> nice. I think.

[15:10] <census> this other one is working out much better so i am hoping to just finish it up quickly

[15:10] <census> and then i'll just go back to the other one and finish it even though my results on it were not making sense

[15:11] <masak> general notice: please everyone who wants to help, join #help-census. it's a joy, but I can't do it all alone :)

[15:11] *** jferrero joined
[15:13] <census> hahahaha

[15:13] <census> yes census is a handful

[15:13] <masak> it's a labor of love :)

[15:17] *** atroxaper joined
[15:17] <raydiak> g'morning #perl6

[15:18] <masak> raydiak! \o/

[15:19] <raydiak> masak: either it's not 7 AM in your timezone, or you drink way too much coffee :)

[15:20] *** rurban1 joined
[15:22] <masak> raydiak: definitely the former.

[15:22] <masak> raydiak: I'm one of 'em Ur-opeans.

[15:25] <TimToady> masak: you have a comment

[15:25] <FROGGS> hi census 

[15:26] <census> long time no speak FROGGS!Q

[15:27] <FROGGS> :o)

[15:27] <raydiak> masak: Ah, that explains it. Local time for me is behind nearly the entire rest of the world. Which country?

[15:28] *** jferrero left
[15:28] <masak> TimToady: looking

[15:28] *** jferrero joined
[15:28] <masak> raydiak: .se

[15:28] <masak> raydiak: IKEA, herring, Pirate Bay

[15:29] <jnthn> ABBA :P

[15:30] *** rurban1 left
[15:31] <raydiak> masak: What is it like in Sweden?

[15:32] <masak> raydiak: generally? very nice and quiet and civilized. right now? dark and wet and spells of saffron.

[15:32] <masak> smells*

[15:34] <census> codl

[15:34] <census> i imagine it is cold

[15:35] <raydiak> masak: sounds like what I've heard elsewhere...I ought to visit some day; I'd love to experience that

[15:37] <raydiak> masak: as for where I am, the nature is beautiful, but major cities where I've lived are not peaceful, and "civilized" is stretching it, IMHO :)

[15:37] <masak> TimToady: http://perl6advent.wordpress.com/2013/12/15/day-15-numbers-and-ways-of-writing-them/#comment-3482

[15:38] *** jferrero left
[15:38] <masak> census: it's cold if you're used to Saudi Arabia. not so cold if you're used to England.

[15:38] * [Coke] looks up from shoveling snow. What?

[15:38] <masak> raydiak: if you're ever in the region, stop by and we'll have a beverage of your choice.

[15:39] *** jferrero joined
[15:40] <jnthn> [Coke]: All our snow melted already :(

[15:41] *** census left
[15:41] <raydiak> masak: That's very kind, thanks for the offer! I'll take you up on it if I ever manage to escape the US

[15:42] *** jferrero left
[15:43] *** timotimo joined
[15:43] <raydiak> heh, google says it's 5 F degrees warmer in stockholm than here atm

[15:44] <timotimo> moritz: i'm not sure if these failures from regex_optimizer are all legit :\

[15:44] <timotimo> but i'll look into it, thanks!

[15:45] *** sqirrel joined
[15:45] <FROGGS> p: multi P5Numeric(''  \SELF) is export { '' }; say P5Numeric("") # I love that mmd! it makes it easy to implement absurdity :o)

[15:45] <camelia> rakudo-parrot 106959: OUTPUT«␤»

[15:46] <FROGGS> TimToady++ and jnthn++ and (whoever who is involved)++ 

[15:48] *** jferrero joined
[15:52] *** jferrero left
[15:53] *** jferrero joined
[15:53] <timotimo> moritz: in fact, the roll.t test succeeds locally; must be a bad assumption, since it's about random seeds giving different values: ok 40 - different results due to random random-number seed

[15:54] *** jferrero left
[15:54] <timotimo> oh, of course!

[15:54] <timotimo> my local regex_optimizer was recently rebased, the remote one wasn't

[15:54] *** ajr joined
[15:55] *** ajr is now known as Guest72225

[15:55] *** Guest72225 is now known as ajr_

[15:55] <jnthn> train &

[15:57] * masak .oO( because we work with training )

[15:58] <FROGGS> >.<

[15:58] *** Psyche^_ joined
[16:02] *** Psyche^ left
[16:03] <timotimo> moritz: all the failures that are extra in your gist are non-failures locally for me, but i can't tell if there are no new failures on jvm when rebasing regex_optimizer. i'll push the new version of that branch; can you re-run the tests?

[16:04] *** jeff_s1 left
[16:05] *** Rotwang left
[16:05] *** jeff_s1 joined
[16:06] <masak> timotimo: usually when I rebase locally, I don't push to the same branch remotely, as that would require a push --force.

[16:06] <masak> timotimo: (don't know if I got your use case exactly, but sounds like that one.)

[16:07] <timotimo> right. i'll push to r-regex-optimizer :)

[16:07] <masak> timotimo: so I tend to rename it both locally and remotely from e.g. macros to macros2

[16:07] <masak> that works too.

[16:07] <timotimo> there we go

[16:07] <dalek> rakudo/r-regex_optimizer: a1f1ec5 | (Timo Paulssen)++ | src/Perl6/Optimizer.nqp:

[16:07] <dalek> rakudo/r-regex_optimizer: run the QRegex optimizer from rakudo's optimizer.

[16:07] <dalek> rakudo/r-regex_optimizer: review: https://github.com/rakudo/rakudo/commit/a1f1ec5490

[16:08] <timotimo> even rebased it further into new nom

[16:15] *** raiph joined
[16:26] <woolfy> Ooh, nice, I know about the use of i in Perl 6, did not realise that Perl 6 therefore has a Complex variable type

[16:26] <woolfy> ( http://perl6advent.wordpress.com/2013/12/15/day-15-numbers-and-ways-of-writing-them/#comment-3482 )

[16:26] <timotimo> well, it kind of has to, in order to represent it properly :)

[16:27] <woolfy> So Inf is a constant in Perl 6.  But Googol isnt?  

[16:27] *** SamuraiJack_ joined
[16:27] <woolfy> (I saw in masak's advent blog define $googol but you could make Googol a constant just like Inf.  Would be cool too.

[16:27] <woolfy> )

[16:29] <woolfy> Oh, lizmat just tells me you had a discussion about that recently and that I should read the backlog...  sorry for re-opening fresh wounds...  :-)

[16:29] <timotimo> yeah, you could

[16:29] <timotimo> r: constant googol := eval '1' ~ '0' x 100; say googol;

[16:29] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000␤»

[16:29] <woolfy> timotimo++

[16:29] *** sqirrel left
[16:35] <raydiak> you could spell it as "1e100", too

[16:35] *** dwarring left
[16:37] *** SamuraiJack_ left
[16:37] <timotimo> that wouldn't be an integer then

[16:37] <timotimo> or would it?

[16:37] <timotimo> r: say (1e100).WHAT

[16:37] <raydiak> ah, didn't think of that

[16:37] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«(Num)␤»

[16:37] <timotimo> r: constant googol := eval '1' ~ '0' x 100; say googol.WHAT;

[16:38] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«(Int)␤»

[16:38] <raydiak> r: constant googol := 1e100.Int; say googol.WHAT;

[16:38] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«(Int)␤»

[16:40] *** xinming left
[16:46] <raydiak> r: say (1.Int / 2.Int)

[16:46] <camelia> rakudo-parrot 106959, rakudo-jvm 106959: OUTPUT«0.5␤»

[16:48] <raydiak> should numeric constants perhaps automatically be integers if they don't have a fractional part?

[16:49] *** tgt left
[16:52] *** tgt joined
[16:52] *** hummeleB1 joined
[16:52] *** atroxaper left
[16:55] *** Piers_ joined
[17:00] *** Rotwang joined
[17:00] *** Mouq joined
[17:09] *** zakharyas left
[17:15] *** sqirrel joined
[17:15] *** BenGoldberg joined
[17:18] <moritz> no: We have very clear rules of which literals produce what types

[17:19] <moritz> and since for example Num and Int arithmetic produce different results, it must be possible to write an integral Num

[17:19] <timotimo> right

[17:19] <timotimo> moritz: ack/nak on running the jvm spectests on r-regex_optimizer?

[17:20] <moritz> timotimo: I'll start another spectest run

[17:20] <timotimo> thank you! :)

[17:26] <BenGoldberg> Speaking of regex optimization ... will there be something like perl5's 'study' operator, or is that for the distanct future?

[17:26] <timotimo> please explain what that does to me? i never did any perl5

[17:28] <BenGoldberg> It did some analysis of a string, so that future regex matches on that string ran faster.

[17:28] <timotimo> ah, ok

[17:28] <timotimo> sounds like a fun project

[17:28] <timotimo> but probably for much later :)

[17:31] <BenGoldberg> distant future, then :)

[17:32] <timotimo> well, it really depends; rakudo development has a few people who are not focusing their efforts optimally (me, for example)

[17:32] <timotimo> optimally, we would always be doing the most pressing bottleneck and the most interesting feature, but I tend to go around looking for fun optimizations to do and lacking features that bother me directly

[17:34] <moritz> timotimo: now I get "nqp-j is too old"

[17:34] <timotimo> er, whoops. i think you should be able to just rebase the nqp branch on current master

[17:34] <moritz> I can also locally merge the nqp branch into master

[17:34] <timotimo> sure

[17:36] * moritz does, and recompiles NQP

[17:36] <moritz> timotimo: should I do the same for the rakudo branch?

[17:37] <timotimo> i'm trying it with a rebase, too

[17:37] <timotimo> the rakudo branch is already rebased on newest nom, but you should just be able to merge nom into the old version of that branch

[17:37] <timotimo> it's just a two-line change or something

[17:37] *** BenGoldberg left
[17:40] <TimToady> masak: you have another comment :)

[17:41] *** BenGoldberg joined
[17:41] <masak> TimToady: replying to it now :)

[17:42] *** sqirrel left
[17:42] * TimToady remembers a former girlfriend almost taking his head off after he used the term "shanghai

[17:43] <TimToady> so he doesn't use the verb form of that anymore...

[17:44] <masak> strange.

[17:44] <masak> TimToady: http://perl6advent.wordpress.com/2013/12/15/day-15-numbers-and-ways-of-writing-them/#comment-3484

[17:44] <TimToady> well, she was half Chinese :)

[17:44] <moritz> masak++

[17:45] <masak> by the way, "hurt the feelings of the Chinese people" is inherently amusing to me. but don't tell the Chinese people that.

[17:46] <masak> see also http://languagelog.ldc.upenn.edu/nll/?p=3425

[17:49] *** colomon left
[17:49] *** colomon joined
[17:50] *** rindolf left
[17:53] *** Mouq left
[17:54] <TimToady> "This facility contains chemicals known to the State of California to cause cancer."

[17:54] *** Mouq joined
[17:55] *** ajr_ left
[17:56] *** ajr joined
[17:56] *** ajr is now known as Guest55758

[17:59] *** Guest55758 is now known as ajr_

[18:03] *** colomon left
[18:04] *** sqirrel joined
[18:04] *** colomon joined
[18:08] *** Piers_ left
[18:12] *** thou joined
[18:16] <ajr_> Everything known to the State of California causes cancer.

[18:23] *** ajr_ left
[18:26] *** sqirrel left
[18:34] *** kaare_ left
[18:34] *** kaare__ joined
[18:39] *** darutoko left
[18:39] *** fridim_ joined
[18:54] <moritz> timotimo: https://gist.github.com/moritz/2375e30d8c3bf35bcf04#file-r-regex_optimizer-log looks pretty good

[18:56] <timotimo> i'm glad. do you think i should merge?

[18:59] *** dwarring joined
[19:00] *** colomon left
[19:02] *** daxim left
[19:04] *** slavik1 joined
[19:04] <timotimo> should probably rather merge now and see if there's fallout than merge the day before the release again :)

[19:09] <moritz> timotimo: +1

[19:11] *** colomon joined
[19:13] <dalek> nqp: e178ee3 | (Timo Paulssen)++ | src/vm/ (2 files):

[19:13] <dalek> nqp: teach parrot and jvm about zerowidth literals

[19:13] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e178ee3104

[19:13] <dalek> nqp: 681a9b8 | (Timo Paulssen)++ | src/QRegex/P6Regex/Actions.nqp:

[19:13] <dalek> nqp: first draft of a before-assertion simplifier.

[19:13] *** dalek left
[19:14] *** dalek joined
[19:14] *** ChanServ sets mode: +v dalek

[19:14] *** nnunley joined
[19:15] <dalek> rakudo/nom: a1f1ec5 | (Timo Paulssen)++ | src/Perl6/Optimizer.nqp:

[19:15] <dalek> rakudo/nom: run the QRegex optimizer from rakudo's optimizer.

[19:15] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a1f1ec5490

[19:15] <dalek> rakudo/nom: e542a0c | (Timo Paulssen)++ | tools/build/NQP_REVISION:

[19:15] <dalek> rakudo/nom: bump NQP revision to get the regex optimizer.

[19:15] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e542a0c52c

[19:16] *** daxim joined
[19:20] <Mouq> timotimo++

[19:28] <timotimo> :)

[19:29] *** WABQYYH joined
[19:30] *** colomon left
[19:38] *** daxim left
[19:50] *** johnmilton joined
[19:51] *** denis_boyun joined
[19:53] *** BenGoldberg left
[19:53] <masak> nwc10++ # doing cool stuff with the moar GC

[19:57] *** colomon joined
[19:57] *** denis_boyun_ joined
[19:57] *** ajr joined
[19:57] *** ajr is now known as Guest11405

[19:58] *** denis_boyun left
[19:58] *** Guest11405 is now known as ajr_

[20:05] *** rindolf joined
[20:07] *** Mouq left
[20:08] *** denis_boyun joined
[20:09] <jnthn> Yay, there's now a way to get to Gothenburg that doesn't suck.

[20:09] *** denis_boyun_ left
[20:10] <moritz> Helicopter? :-)

[20:10] <FROGGS> ó.ò

[20:11] <jnthn> No, a new train service that's got comfortable seats, wifi, coffee and does the journey in half an hour less time.

[20:13] *** Mouq joined
[20:15] *** thou left
[20:18] <masak> I can attest to its non-suckiness.

[20:20] *** jeff_s1 left
[20:21] *** jeff_s1 joined
[20:24] *** denis_boyun_ joined
[20:25] *** zakharyas joined
[20:25] *** denis_boyun left
[20:26] *** rindolf left
[20:26] *** rindolf joined
[20:29] <lue> hello world o/

[20:29] <lue> tadzik: really? If shell/run is the issue, perhaps I have a solution... /me tries something

[20:31] <lue> (unfortunately it requires being platform specific, so I'm testing the version that'll work for me :P)

[20:34] *** Mouq left
[20:35] <masak> lue++ # S15 work

[20:36] <lue> masak: still quite a bit to do, but I feel like Pod6-ifying our specs at the moment :)

[20:36] *** rindolf left
[20:37] <lue> perl6++  making ?qx'echo $?' do the right thing.

[20:37] <lue> eh... wait. nevermind :P

[20:37] <FROGGS> hehe

[20:39] <lue> tadzik: my idea is that maybe, just maybe, using qqx// will fix the issue.

[20:39] * moritz runs  ./perl6-m -e 'say "Hello World"'  for the first time

[20:39] <lue> The "fails when works fine" thing for shell/run may seem random, but its occurrences are... strangely consistent.

[20:40] <lue> moritz: \o/ now I want to try compiling perl6-m :)

[20:40] <masak> me too!

[20:40] <moritz> compiling Test.pm6 still fails, but who needs tests anyway? :-)

[20:42] <moritz> Unhandled exception: Cannot invoke this object (REPR: Uninstantiable, cs = 0)

[20:42] <moritz> why does that remind me of "I will not buy this record, it is scratched"? :-)

[20:47] <FROGGS> moritz++

[20:47] <lue> gaah, using qqx seemed to have made it worse! :(

[20:49] <moritz> with qqx it'll try to interpolate the $? or some parts of it in perl code

[20:49] <lue> moritz: I'm retrying with "&& echo \$?" after the build command, see how it goes.

[21:00] *** colomon left
[21:00] *** denis_boyun_ left
[21:02] <lue> uhh... "Error executing process: Cannot allocate memory"

[21:03] <lue> tadzik: ^^^ this comes from replacing the shell command with  ?qqx"perl6 --target=pir --output=blib/lib/Panda/Project.pir lib/Panda/Project.pm && echo \$?"

[21:04] <tadzik> :o

[21:04] <tadzik> did our memory usage strangely grow recently?

[21:05] <lue> tadzik: I will say that the => fetching panda step takes much longer than the other => fetching stages, from what I've perceived.

[21:07] <tadzik> 'cos panda is much bigger :P

[21:07] *** jeff_s2 joined
[21:08] *** jeff_s1 left
[21:08] <lue> tadzik: apparently, replacing that line in my modifications to the qqx// thing I just pasted turned all my previous "False" results with "Error executing process: Cannot allocate memory". Which might be helpful.

[21:09] <lue> (somehow, rakudo(-parrot?) is having issues with allocating memory.)

[21:09] *** denis_boyun joined
[21:10] <lue> (the backtrace only mentions bin/panda (which catches the error) and rakudo's source files, btw.)

[21:11] <jnthn> lue: Easiest thing is to grep for that message

[21:11] <lue> jnthn: hey, I just typed ack -u in the panda repo :)

[21:12] <lue> O.O    $ ack -u 'Cannot allocate' ../rakudo

[21:12] <lue> $

[21:12] <jnthn> ack -u too :P

[21:12] <jnthn> Try in nqp

[21:13] <jnthn> Also for "Error executing"

[21:14] <lue> Um... 'Cannot allocate' isn't in panda/ or rakudo/ or nqp/ or parrot/ . Lemme try searching other parts of the error.

[21:14] *** denis_boyun left
[21:14] * lue would use -i to find more results, except he doesn't think error message should be transforming their casings :)

[21:15] <lue> $ ack -u 'Error executing' ../parrot

[21:15] <lue> ../parrot/src/platform/generic/exec.c

[21:15] <lue> 289:        "Error executing process: %s", strerror(errno));

[21:16] <lue> I wonder if shell/run is experiencing the same issue, or if this is a result of using qqx// ...

[21:16] <FROGGS> lue: shell/run is implemented in nqp in contrast to qx/qqx

[21:17] <lue> FROGGS: unless you're saying qx is implemented in parrot, they could still share the same cause.

[21:18] <FROGGS> lue: see rakudo/src/core/control.pm and look for QX

[21:19] *** colomon joined
[21:24] *** denis_boyun joined
[21:24] * lue still thinks there could be a parrot underpinning to this mess.

[21:25] <timotimo> underpinning for the fjords?

[21:29] <timotimo> i think i'll write a short bit on the regex optimizer branch into the changelog

[21:32] <dalek> rakudo/nom: 67fcb5f | (Timo Paulssen)++ | docs/ChangeLog:

[21:32] <dalek> rakudo/nom: put regex optimizer changes in the changelog

[21:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/67fcb5f64e

[21:34] *** denis_boyun_ joined
[21:34] *** denis_boyun left
[21:35] <lue> I really, really can't wait for perl6-m to get in working order. I'm getting tired of parrot.

[21:35] *** daxim joined
[21:36] <dalek> rakudo/moar-support: 524d2f5 | jonathan++ | src/Perl6/Actions.nqp:

[21:36] <dalek> rakudo/moar-support: Scatter declaration_static for Moar's sake.

[21:36] <dalek> rakudo/moar-support: 

[21:36] <dalek> rakudo/moar-support: It already uses the closure model that we need to move to on the JVM

[21:36] <dalek> rakudo/moar-support: in the future.

[21:36] <dalek> rakudo/moar-support: review: https://github.com/rakudo/rakudo/commit/524d2f5079

[21:37] *** kaare__ left
[21:39] *** zakharyas left
[21:41] *** cognominal left
[21:41] *** ponbiki joined
[21:42] *** cognominal joined
[21:43] * dwarring has added actions counter-example to advent draft - https://gist.github.com/dwarring/7848868

[21:44] * dwarring modest addition

[21:49] <raydiak> r: say ( Int(1)/Int(2) === 1/2 )

[21:49] <camelia> rakudo-parrot e542a0, rakudo-jvm e542a0: OUTPUT«True␤»

[21:49] <raydiak> when does Int math produce different results than Num math?

[21:49] *** m_m joined
[21:50] <lue> r: say 1/3; say 1e0/3e0;

[21:50] <camelia> rakudo-jvm e542a0: OUTPUT«0.333333␤0.3333333333333333␤»

[21:50] <camelia> ..rakudo-parrot e542a0: OUTPUT«0.333333␤0.333333333333333␤»

[21:50] <raydiak> r: say(1/3).WHAT; say (1e0/3e0).WHAT;

[21:50] <camelia> rakudo-parrot e542a0, rakudo-jvm e542a0: OUTPUT«0.333333␤(Num)␤»

[21:51] <raydiak> r: say (1/3).WHAT; say (1e0/3e0).WHAT;

[21:51] <camelia> rakudo-parrot e542a0, rakudo-jvm e542a0: OUTPUT«(Rat)␤(Num)␤»

[21:51] <lue> r: say 1/3; say 1 div 3

[21:51] <camelia> rakudo-parrot e542a0, rakudo-jvm e542a0: OUTPUT«0.333333␤0␤»

[21:51] <dalek> rakudo/moar-support: 864bec6 | jonathan++ | src/vm/moar/ops/perl6_ops.c:

[21:51] <dalek> rakudo/moar-support: Fix p6captureouters to do the right thing.

[21:51] <dalek> rakudo/moar-support: 

[21:51] <dalek> rakudo/moar-support: Fixes loads of the "Cannot invoke..." errors.

[21:51] <dalek> rakudo/moar-support: review: https://github.com/rakudo/rakudo/commit/864bec634a

[21:52] <raydiak> r: say 1.WHAT

[21:52] <camelia> rakudo-parrot e542a0, rakudo-jvm e542a0: OUTPUT«(Int)␤»

[21:53] <raydiak> ah...so it's the e that makes an int not an Int any more

[21:53] <raydiak> r: say 1e0.WHAT

[21:53] <camelia> rakudo-parrot e542a0, rakudo-jvm e542a0: OUTPUT«(Num)␤»

[21:54] <masak> no, the scientific-notation 'e' makes a Num.

[21:56] *** ajr_ left
[21:58] <raydiak> that's what I meant...an integer will produce an Int, unless you add the 'e' part...which IRL would still produce something considered an integer, but in perl 6 does not...correct?

[21:59] <raydiak> (unless the part before or after the e was fractional, of course...then it wouldn't be an integer in either case)

[22:01] <lue> also unless it's part of a Rat literal.

[22:02] <masak> raydiak: no, the 'e' produces a Num, not an int.

[22:03] <lue> masak: raydiak is switching freely between Perl 6's idea of integers an Mathematics' idea of integers.

[22:03] *** colomon left
[22:04] <raydiak> ah, right...I should clarify: I often learn something new by mentally building a logical mapping between the new thing and something I already know

[22:04] <masak> well, there are lots of ways a scientific-notation number could lead to Not An int.

[22:04] <masak> p: say 5e-2

[22:04] <camelia> rakudo-parrot e542a0: OUTPUT«0.05␤»

[22:05] <masak> p: say 3.14e0

[22:05] <camelia> rakudo-parrot e542a0: OUTPUT«3.14␤»

[22:05] <lue> raydiak: just remember that in Perl 6, how you write the number is more important than what the number is :) .

[22:05] *** colomon joined
[22:06] <masak> well, certainly that's true from a type perspective.

[22:06] <masak> this, for example, works in Math, but not in Perl 6:

[22:06] <masak> p: my Num $n = 4

[22:06] <camelia> rakudo-parrot e542a0: OUTPUT«Type check failed in assignment to '$n'; expected 'Num' but got 'Int'␤  in block  at /tmp/eNA2MqxXAQ:1␤  in any  at /tmp/eNA2MqxXAQ:1␤  in any  at gen/parrot/stage2/NQPHLL.nqp:1146␤  in any eval at gen/parrot/stage2/NQPHLL.nqp:1133␤  in any eva…»

[22:07] <masak> 'night, #perl6

[22:07] <raydiak> lue++: that's exactly what I was forgetting to focus on

[22:07] <raydiak> \o g'night masak++ thanks for explaining

[22:07] <lue> masak: I call won't-do-type-casting shenanigans on that one; Int ⊂ Num.

[22:07] <lue> ♞ masak o/

[22:08] *** dmol left
[22:09] *** denis_boyun_ left
[22:09] *** Mouq joined
[22:10] *** dmol joined
[22:11] *** dmol left
[22:16] *** raiph left
[22:19] <lue> :(    make: *** [CORE.setting.moarvm] Segmentation fault

[22:26] *** jeff_s1 joined
[22:28] *** jeff_s2 left
[22:31] *** Mouq left
[22:32] *** Mouq joined
[22:37] *** colomon left
[22:55] *** jeff_s1 left
[22:56] *** jeff_s1 joined
[22:57] *** colomon joined
[22:58] <FROGGS> I am out of ideas atm... http://perl6advent.wordpress.com/?p=2101&preview=true

[22:59] <FROGGS> suggestions how to extend it a very appreciated

[23:01] <FROGGS> I feel a bit sick atm but I'd be happy to add a more paragraphs tomorrow morning (in about 9 hours)

[23:01] *** raiph joined
[23:03] *** johnmilton left
[23:06] <dalek> nqp: 565cce8 | (Tobias Leich)++ | src/QRegex/P5Regex/Grammar.nqp:

[23:06] <dalek> nqp: implement m:P5/\Q\E/

[23:06] <dalek> nqp: review: https://github.com/perl6/nqp/commit/565cce8092

[23:10] <dalek> rakudo/nom: dc5a1ff | (Tobias Leich)++ | / (3 files):

[23:10] <dalek> rakudo/nom: implement m:/\Q\E/

[23:10] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dc5a1ff741

[23:11] <FROGGS> ohh, adverb gone missing :/

[23:15] *** djanatyn left
[23:15] *** dwarring left
[23:16] *** Tene left
[23:19] <FROGGS> humm

[23:19] <FROGGS> 	    --output=gen/moar/stage2/NQPHLL.moarvm gen/moar/stage2/NQPHLL.nqp

[23:19] <FROGGS> Cannot find method 'optimize'

[23:21] <FROGGS> 	    --module-path=gen/parrot/stage2 --setting-path=gen/parrot/stage2 gen/parrot/stage2/NQPHLL.nqp

[23:21] <FROGGS> Method 'optimize' not found for invocant of class 'NQPMu'

[23:21] <FROGGS> :o(

[23:21] <FROGGS> timotimo: do you have uncommitted changes?

[23:22] *** cognominal left
[23:40] *** raiph left
[23:42] *** vtayur joined
[23:42] *** vtayur left
[23:46] *** pecastro left
[23:47] <woolfy> FROGGS: I think it is quite a nice blog.  Some typos (march -> March, rakudo -> Rakudo) and some sentences that need a second look from you.

[23:47] *** meralt joined
[23:47] *** pecastro joined
[23:47] *** meralt left
[23:48] <woolfy> FROGGS: and you switch from using the word 'slangs' to the word 'grammar', and after 'A slang was born' the word 'slang' is no longer used. Did you intend to write about slang or about grammar?

[23:49] <woolfy> FROGGS:  just re-read your blog tomorrow morning.  You will find the words you need, I am sure.

[23:56] *** beastd left
[23:57] *** sqirrel joined
