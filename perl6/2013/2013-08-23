[00:11] *** araujo left
[00:11] *** araujo joined
[00:14] <dalek> roast: ffb801f | (David Warring)++ | S29-conversions/ord_and_chr.t:

[00:14] <dalek> roast: chr() on invalid code-points

[00:14] <dalek> roast: review: https://github.com/perl6/roast/commit/ffb801f26c

[00:18] <TimToady> .tell jnthn also, if implicit method new is a no-op wrapper around .bless, we can probably just poke the .bless routine in under the name of .new to call it directly

[00:18] <yoleaux> TimToady: I'll pass your message to jnthn.

[00:23] *** zwut00 left
[00:33] *** BenGoldberg joined
[00:47] *** Bzek joined
[00:50] *** Bzek left
[01:23] *** bluescreen10 joined
[01:26] *** FROGGS_ joined
[01:31] *** FROGGS left
[02:06] *** xinming left
[02:10] *** xinming joined
[02:24] *** jaldhar left
[02:24] *** jaldhar joined
[02:35] *** Targen left
[03:05] *** xenoterracide_ is now known as xenoterracide

[03:11] *** jeff_s2 joined
[03:12] *** jeff_s1 left
[03:21] *** preflex_ joined
[03:21] *** ChanServ sets mode: +v preflex_

[03:22] *** preflex left
[03:22] *** preflex_ is now known as preflex

[03:33] *** abnorman joined
[03:51] *** BenGoldberg left
[03:53] *** thou joined
[04:16] *** aindilis joined
[04:24] *** thou left
[04:24] *** grondilu joined
[04:33] *** thou joined
[04:37] *** yoleaux left
[04:42] *** cbk joined
[05:02] *** hummeleBop joined
[05:04] *** SamuraiJack joined
[05:05] <dalek> rakudo/nom: 7cb364b | (Geoffrey Broadwell)++ | tools/build/NQP_REVISION:

[05:05] <dalek> rakudo/nom: Bump NQP_REVISION so that Rakudo will get the fix for ConfigureJVM.pl in latest NQP

[05:05] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7cb364bc3a

[05:28] *** ksh joined
[05:33] <dalek> star: dddc8a5 | moritz++ | modules/rakudo-debugger:

[05:33] <dalek> star: updated rakudo-debugger submodule

[05:33] <dalek> star: review: https://github.com/rakudo/star/commit/dddc8a54a6

[05:51] *** ggoebel2 joined
[05:52] *** ggoebel left
[06:02] *** denis_boyun joined
[06:18] *** denis_boyun left
[06:18] *** denisboyun joined
[06:33] *** yoleaux joined
[06:33] *** ChanServ sets mode: +v yoleaux

[06:40] *** xenoterracide left
[06:40] *** xenoterracide_ joined
[06:42] *** Mouq left
[06:51] *** kaleem joined
[06:54] *** zakharyas joined
[06:59] <[Coke]> (OS X failures) - just updated this list: https://gist.github.com/coke/5428159 - it's been failing that way for months and months.

[06:59] <[Coke]> (rakudo.parrot)

[07:01] *** thou left
[07:04] *** ksh left
[07:07] *** ksh joined
[07:17] *** sidus joined
[07:18] <lizmat> good *, #perl6!

[07:18] <bbkr> speaking of OS X - Rakudo Star tools/star/Makefile doesn't work due to lack of "tar --xform". should it be reported as an issue or we assume tarball can be only created under Linux?

[07:18] <bbkr> good morning :)

[07:18] <lizmat> [Coke]: all but the last indicate an improperly installed icu library

[07:19] <lizmat> oddly enough, after a rebuild of parrot yesterday, all of those disappeared for me

[07:19] <lizmat> (must have installed icu properly in the meantime)

[07:19] <dalek> rakudo-star-daily: 7fbccfd | coke++ | log/ (5 files):

[07:19] <dalek> rakudo-star-daily: today (automated commit)

[07:19] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/7fbccfdf43

[07:19] <lizmat> the last one is from missing libreadline-dev library

[07:19] <lizmat> still seeing that as well

[07:20] <lizmat> breakfast&

[07:23] <[Coke]> (things to help rakudo star release - fix https://github.com/rakudo/star/issues/27

[07:25] <[Coke]> lizmat: macports, icu-49.1.2

[07:25] <[Coke]> readline-dev is optional, shouldn't be running the tests if we don't have it.

[07:25] <[Coke]> (well, optional for parrot)

[07:26] <[Coke]> bbkr: I think everyone who does the build so far has access to linux, so not a showstopper.

[07:33] <bbkr> [Coke]: Not a showstopper but I've reported it anyway as low priority issue to be taken care of during future refactoring of build process - https://github.com/rakudo/star/issues/28

[07:34] <[Coke]> hokay

[07:35] <dalek> perl6-roast-data: 3e42306 | coke++ | / (5 files):

[07:35] <dalek> perl6-roast-data: today (automated commit)

[07:35] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/3e42306dad

[07:36] <[Coke]> another regression on rakudo.jvm

[07:37] <[Coke]> +S32-io/io-path-win.rakudo.jvm aborted 19 test(s)

[07:37] <[Coke]> +S32-io/io-spec-win.t aborted 33 test(s)

[07:37] <[Coke]> +integration/advent2009-day02.rakudo.jvm aborted 3 test(s)

[07:37] <[Coke]> +S02-names-vars/fmt.t aborted 14 test(s)

[07:38] <[Coke]> note that S02-magicals/env.rakudo.jvm 14 - ENV members persist to child processes is still failing - i thought we merged a fix for that.

[07:38] <nwc10> bbkr: I see that I have a /usr/bin/gnutar on OS X. So in theory OS X is OK. But likely most of the BSDs are not, let alone other sane Unix platforms.

[07:39] <nwc10> mmm, but my gnutar on OS X seems to be too old to have --xform

[07:39] <bbkr> mine is "bsdtar 2.8.3 - libarchive 2.8.3"

[07:39] <nwc10> oh, quirky. The *man page* doesn't have it

[07:39] <nwc10> tar is bsdtar. gnutar is a GNU tar

[07:40] <moritz> tarpit tar!

[07:41] <nwc10> nope. info gnutar is also out of date

[07:41] <nwc10> anyway, not sure what the right trade off is. --xform is useful

[07:48] <[Coke]> eh. we have a very small audience for cutting * releases.

[07:48] <[Coke]> (and there's always feather)

[07:49] * [Coke] tries updating ICU.

[07:54] <tadzik> lizmat: just to make double-sure: 14-15 september, frankfurt am mein?

[07:58] <tadzik> well, tickets bought :)

[07:58] *** crab2313 joined
[07:59] *** pernatiy left
[08:01] *** atroxaper joined
[08:02] *** pernatiy joined
[08:12] <timotimo> tadzik: that's correct indeed

[08:17] <dalek> Perlito: 48b3691 | (Flavio S. Glock)++ | / (3 files):

[08:17] <dalek> Perlito: Perlito5 - js - tweak the javascript pretty-printer

[08:17] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/48b3691c15

[08:22] *** fhelmberger joined
[08:22] *** Rotwang joined
[08:23] <jnthn> morning, #perl6

[08:23] <yoleaux> 00:18Z <TimToady> jnthn: also, if implicit method new is a no-op wrapper around .bless, we can probably just poke the .bless routine in under the name of .new to call it directly

[08:23] <jnthn> Epic cheating :P

[08:28] <tadzik> so, my AFTERPARTY method may not be that useless after all? ;)

[08:37] *** kaleem left
[08:40] <lizmat> tadzik: am Main, ja!

[08:41] *** jeff_s2 left
[08:41] <timotimo> no star release in a long time. i feel like i should punch some modules in the bugs!

[08:44] *** dmol joined
[08:44] *** atroxaper left
[08:44] <jnthn> .oO( Which Frankfurt? The main one! )

[08:46] *** bluescreen10 left
[08:48] *** Rotwang left
[08:48] <lizmat> .oO( Mainhattan )

[08:51] <nwc10> I can't hugely make this work: Hahn == Hahn 'aint hanywhere near

[08:52] *** stevan_ joined
[08:53] <jnthn> no...no, you can't :P

[08:54] <nwc10> and I'm utterly failing on Frankfurt am Elbe puns

[08:54] <nwc10> give up and write code?

[08:55] *** pecastro joined
[08:58] *** berekuk joined
[08:59] <jnthn> It code be a good idea 

[09:02] *** dmol left
[09:04] *** daxim joined
[09:05] <lizmat> jnthn: is https://gist.github.com/lizmat/6177720 still an accurate description of the RaNIW ?

[09:07] <jnthn> lizmat: There's the occasional bit of re-ordering within the modules that I've discovered while working on it, but the topic list still matches up, yeah.

[09:07] <jnthn> So, "close enough" :)

[09:07] *** donaldh joined
[09:08] <lizmat> ok, so I'll put this in perl6-compiler, see if we can attract more participants (currently 6 confirmed + you)

[09:09] <lizmat> which then should hit planetsix

[09:10] <lizmat> hmm.. maybe need to blog about it as well  :-)

[09:15] *** stevan_ left
[09:17] <nwc10> bloggage is awesome.

[09:17] <nwc10> mention (in passing, eg 1 sentance or less) the JVM-ness and the concurrency stuff?

[09:17] *** dayangkun joined
[09:18] *** dayangkun left
[09:24] <donaldh> morning o/

[09:24] *** abnorman left
[09:24] *** abnorman joined
[09:34] *** jeff_s1 joined
[09:35] *** rindolf joined
[09:35] <dalek> specs: 93dd4af | (Donald Hunter)++ | S29-functions.pod:

[09:35] <dalek> specs: Insert line to fix 'run =item shell' on http://perlcabal.org/syn/S29.html

[09:35] <dalek> specs: review: https://github.com/perl6/specs/commit/93dd4afd0f

[09:38] <donaldh> hmm, cwd doesn't seem to be specced anywhere

[09:38] *** jeff_s1 left
[09:46] *** rindolf left
[09:46] *** rindolf joined
[09:50] *** rindolf left
[09:50] *** rindolf joined
[09:52] *** rindolf left
[09:53] *** rindolf joined
[09:53] <donaldh> How do I create a PROCESS::chdir ?

[09:54] <donaldh> I thought it would just be: module PROCESS { multi sub chdir($path) { … }  }

[09:54] <jnthn> PROCESS::<&chdir> = anon sub chdir($dir) { ... }

[09:54] <donaldh> ah

[09:55] <donaldh> And I can do that in IO.pm, i.e. right in the middle of CORE.setting ?

[09:55] <jnthn> Or if you need multis then put it in an anonymous block and then poke it in

[09:55] <jnthn> {

[09:55] <jnthn>     proto sub chdir($) {*}

[09:55] <jnthn>     ...multi candidates...

[09:55] <jnthn>     PROCESS::<&chdir> := &chdir;

[09:55] <jnthn> }

[09:55] <jnthn> Or so

[09:55] *** jeff_s1 joined
[09:55] <donaldh> thx

[09:55] <jnthn> The block stopping it leaking into user-visible space.

[09:59] *** hypolin joined
[10:03] *** abnorman left
[10:03] *** dmol joined
[10:03] *** abnorman joined
[10:06] <lizmat> http://blogs.perl.org/users/liz/2013/08/rakudo-and-nqp-internals-workshop-1415-sep.html

[10:08] <FROGGS_> awesome!

[10:08] *** FROGGS_ is now known as FROGGS

[10:09] <jnthn> lizmat++

[10:09] <daxim> will the materials be published?

[10:10] <lizmat> the materials are supposed to be open source

[10:10] <daxim> excellent

[10:10] <lizmat> but, at the discretion of jnthn and Edument

[10:10] <lizmat> they're free to give the workshop again

[10:10] <daxim> are edument aware this is niche knowledge?

[10:11] <lizmat> I'm pretty sure they are

[10:11] <jnthn> yes :)

[10:12] <jnthn> It is very nice to be doing Perl 6 things as part of my $dayjob :)

[10:12] <lizmat> OTOH, that means it's the ultimate growth market  :-)

[10:13] *** rindolf left
[10:14] *** rindolf joined
[10:14] <FROGGS> when looking at this it seems like nqp::sprintf doesn't break anything! https://github.com/coke/rakudo-star-daily/commit/7fbccfdf4325b78f40280ad18641140506f6a0a2#diff-2

[10:14] <FROGGS> what a relief

[10:21] * lizmat wonders how to get my blog post on planetsix ?

[10:25] <tadzik> contact planetsix admins, I don't remember who that is :)

[10:25] <tadzik> [Coke], maybe?

[10:40] *** fhelmberger_ joined
[10:41] * hoelzro 's interest is piqued by this workshop

[10:42] <tadzik> komm, komm

[10:44] *** fhelmberger left
[10:44] *** sqirrel joined
[10:45] <hoelzro> my girlfriend will kill me if I leave her alone for weekends so close together =)

[10:45] <hoelzro> will there be screencasts?

[10:46] * donaldh would love to go, but cannot unfortunately.

[10:47] <jnthn> hoelzro: No screencast, I'm afraid.

[10:47] <hoelzro> curses

[10:48] <jnthn> If it works out well, maybe another one will happen in the future...

[10:48] <lizmat> when it works out well  :-)

[10:49] <lizmat> wrt to screencast: not very interesting seeing up to 12 core developers to be sweating doing jnthn's exercises :-)

[10:50] <tadzik> it'll be like a realistic hacker movie

[10:50] <tadzik> "they're just sitting there... for 12 hours straight!"

[10:51] <lizmat> I'm not sure it will really be up to snuf

[10:51] <hoelzro> hahhaha

[10:51] <hoelzro> I'm looking into hotels now

[10:51] <hoelzro> just in case ;)

[10:51] <moritz> I'm sure there'll be lunch in between :-)

[10:51] <lizmat> hoelzro: rooms have been booked already

[10:51] <lizmat> don't worry about hotels, just worry about getting there

[10:51] <hoelzro> how much for the rooms, though?

[10:52] <lizmat> rooms are on the house, as is the workshop

[10:52] *** sqirrel left
[10:52] <hoelzro> seriously?

[10:52] <hoelzro> so I just need to get there?

[10:53] <lizmat> yup

[10:53] <hoelzro> hmm

[10:53] <hoelzro> this might be an easier sell than I think...

[10:53] <lizmat> I didn't want to put that in the announcement

[10:53] <hoelzro> ;)

[10:53] <tadzik> don't save on your knowledge, especially when it's free :)

[10:54] <hoelzro> I have to sell it to my girlfriend is all

[10:54] *** pernatiy left
[10:56] <moritz> hoelzro: where do you live?

[10:56] <hoelzro> Amsterdam

[10:57] <moritz> there round-trip flights for ~100EUR

[10:57] <hoelzro> I know

[10:57] <hoelzro> it's cheap

[10:57] <hoelzro> soooo cheap

[10:57] <hoelzro> but I'm going to Bonn tonight

[10:58] <hoelzro> and my girlfriend is not happy about being alone for the weekend =/

[10:58] <moritz> froscon?

[10:58] <hoelzro> mhmm

[10:58] <lizmat> moritz: FrosCon is this weekend

[10:58] <donaldh> hah, my naive attempt to use IO::Spec.rel2abs in the IO file ops was bound to fail

[10:59] <hoelzro> so I have to convince her that leaving her alone again is a good idea =P

[10:59] <donaldh> "Dynamic variable $*CWD not found" while loading the setting

[10:59] <lizmat> well, maybe a partner programme should be set up

[11:00] <hoelzro> that's an idea

[11:01] <hoelzro> "A reasonable knowledge of the Perl 6 language" # what qualifies as "reasonable"?

[11:01] <lizmat> woolfy will be in Frankfurt as well, but probably not at the workshop all the time

[11:02] <jnthn> hoelzro: As in, have written some Perl 6 before, can read the common stuff without difficulty, etc.

[11:02] <lizmat> looking at the program of the workshop, is it *all* klingon to you, or does at least 40% of it mean something to you

[11:02] <hoelzro> ok

[11:03] <hoelzro> I wrote an XMPP bot last year

[11:03] <jnthn> hoelzro: We'll be seeing a lot of NQP code, which is a Perl 6 subset.

[11:03] <hoelzro> and a few small programs

[11:03] <hoelzro> I've dealt with NQP a bit

[11:03] <hoelzro> not much, though

[11:03] <lizmat> I think you qualify  :-)

[11:03] *** crab2313 left
[11:03] <jnthn> I'd say so.

[11:03] <hoelzro> my limits are at introspection and the crazy Z <<+>> stuff

[11:03] <hoelzro> ok, cool =)

[11:04] <lizmat> those limits will be stretched  :-)

[11:04] <hoelzro> yay

[11:04] <FROGGS> lizmat: why does klingon implies that one can't understand it?

[11:05] <jnthn> If you think you're reading klingon when it's actually English, you don't understand it :P

[11:06] <FROGGS> lizmat: you can have on of my copies of klingon<->deutsch :o)

[11:07] <lizmat> I was going for "chinese" originally, but figured the chance of chinese reading people looking, was too large

[11:08] *** jeff_s1 left
[11:10] *** jeff_s1 joined
[11:13] *** hypolin left
[11:29] *** dagerik joined
[11:29] <dagerik> use v6;my @f=1,1,{$^a+$^b}...*;say @f[42]~".html";

[11:29] <dagerik> what does this do?

[11:31] <moritz> r: use v6;my @f=1,1,{$^a+$^b}...*;say @f[42]~".html"

[11:31] <camelia> rakudo 7cb364: OUTPUT«433494437.html␤»

[11:31] <moritz> dagerik: produces the string "433494437.html" :-)

[11:31] <moritz> dagerik: where 433494437 is the 42s fibonacci number

[11:31] <tadzik> 43rd, is 0 is the 1st one

[11:31] <tadzik> I never know :)

[11:32] <moritz> ... given the appropriate definition of fibonacci numbers that make my statement true :-)

[11:32] <moritz> *makes

[11:34] <tadzik> yep :)

[11:35] *** abnorman left
[11:35] *** abnorman joined
[11:42] *** average joined
[11:43] *** rindolf left
[11:46] *** dagerik left
[11:46] *** pernatiy joined
[11:52] <lizmat> jnthn: looking at handling the my %h{Str} of Int case

[11:52] <lizmat> I think I can fix the problem, but with a leak

[11:53] <arnsholt> The entry for Perl 5 on http://ian.hixie.ch/programming/ under the Paradigm heading: "Yes" =D

[11:53] <lizmat> container_type_info creates the improper (Any,Str) type

[11:53] *** denisboyun left
[11:53] <tadzik> :D

[11:54] <lizmat> I can probably tiwddle the container description afterwards, with the proper (Int,Str) tyoe

[11:54] <lizmat> but the (Any,Str) type would still be created

[11:55] <lizmat> so I'm looking at moving create_container_descriptor / install lexical container until after the trait handling

[11:57] <lizmat> with the $var.compose method doing all the work, and the trait-mods just setting up stuff to be done later

[11:57] <lizmat> does that make sense ?

[11:58] <FROGGS> r: test

[11:58] <camelia> rakudo 7cb364: OUTPUT«===SORRY!=== Error while compiling /tmp/pDWpO_9KYu␤Undeclared routine:␤    test used at line 1␤␤»

[11:58] <jnthn> lizmat: Yeah, I think so

[11:59] <lizmat> ok, then I'll try to do that

[11:59] <jnthn> lizmat: You may want to use container_type_info partially before the trait mod to have some early bits to populate Variable with.

[11:59] <lizmat> but it's container_type_info setting up the wrong type object

[11:59] <lizmat> using the $shape

[12:00] <lizmat> anyways, need to pack now for FrosCON

[12:01] <lizmat> no more hacking for me today, probably

[12:03] <dalek> roast: 2647c16 | (Tobias Leich)++ | S32-str/sprintf.t:

[12:03] <dalek> roast: add sprintf tests from RT tickets

[12:03] <dalek> roast: review: https://github.com/perl6/roast/commit/2647c16652

[12:06] *** anon3242 joined
[12:12] *** jnap joined
[12:13] *** abnorman left
[12:13] *** abnorman joined
[12:14] *** kaleem joined
[12:18] *** locsmif left
[12:18] *** _jaldhar joined
[12:18] *** jaldhar left
[12:19] *** denisboyun joined
[12:29] <moritz> ok, I need help with git submodules

[12:30] <moritz> I've added modules/PSGI to star

[12:30] <moritz> but now that directory is empty

[12:30] <moritz> what do I need to do to fill it?

[12:30] *** skids left
[12:31] <donaldh> maybe git pull --recurse-submodules, or somesuch

[12:31] <lee_> git submodule update iirc

[12:31] *** colomon_ left
[12:31] <donaldh> what lee_ said

[12:32] <moritz> lee_: that says fatal: reference is not a tree: 240f8d025a72dfd9695290dde45981f238287d79

[12:32] <moritz> Unable to checkout '240f8d025a72dfd9695290dde45981f238287d79' in submodule path 'modules/uri'

[12:32] <moritz> how do I recover from that?

[12:32] <hoelzro> sweet, the lady approves

[12:32] * moritz feels very n00bish

[12:32] <tadzik> hoelzro: \o/

[12:32] <lee_> moritz: hmm, maybe you need to edit .gitmodules ? i haven't seen that one before

[12:32] <hoelzro> how do I register?

[12:32] <tadzik> poke lizmat 

[12:33] <hoelzro> lizmat: poke

[12:33] <donaldh> moritz: http://stackoverflow.com/questions/14768509/unable-to-checkout-git-submodule-path

[12:34] <timotimo> .gitmodules doesn't specify what tree is supposed to be checked out, but maybe the 240f... is missing because the sub-repository wasn't pulled from correctly?

[12:35] <moritz> can I tell it to simply use 'master' in modules/uri?

[12:37] <moritz> or phrased differently, can I make it not try to checkout 240f8d?

[12:38] <dalek> star: e2359a1 | moritz++ | modules/uri:

[12:38] <dalek> star: track modules/uri master

[12:38] <dalek> star: review: https://github.com/rakudo/star/commit/e2359a173e

[12:39] <moritz> ah, I do a 'git checkout master' in that directory, and then 'git add' it from the parent repo

[12:39] <jnthn> I think there' a git submodule foreach than can be useful for automating synchronizing all to latest master, if that's something we want to do...

[12:39] <donaldh> moritz++ n00b--

[12:40] <jnthn> *that

[12:40] <donaldh> hmm, the return type for chdir is not specced and cwd is not specced at all.

[12:41] <timotimo> i used to git submodule foreach 'git fetch && gitk --all' and then i could use the gitk gui to reset the local master branch to any commit i wanted

[12:41] <donaldh> should the return type be Str, or IO::Path ?

[12:41] <dalek> star: 54b9d4c | moritz++ | / (2 files):

[12:41] <dalek> star: update modules/PSGI

[12:41] <dalek> star: review: https://github.com/rakudo/star/commit/54b9d4c374

[12:41] <moritz> donaldh: IO::Path

[12:41] <moritz> ok, my modules/PSGI is still empty

[12:41] <moritz> wtf?

[12:42] <donaldh> moritz: thx - I achieved that by 'accident' ;-)

[12:43] <moritz> ok, re-cloning from scratch helped

[12:43] * moritz feels like a 1st day git user again

[12:43] <donaldh> is cwd not specced because it is not wanted, or because of a spec omission 

[12:44] <moritz> r: say cwd

[12:44] <camelia> rakudo 7cb364: OUTPUT«/home/p6eval␤»

[12:45] <moritz> donaldh: it feels a wee bit redundant do have both $*CWD and cwd

[12:45] <moritz> donaldh: I personally would prefer chdir/cwd over $*CWD, but that's just opinion

[12:45] <donaldh> well, $*CWD is the state for chdir emulation

[12:47] * donaldh will add cwd to the spec for now

[12:48] <FROGGS> jnthn: I'm going to outline what I think how slang could be made pluggable this weekend, would be cool if you have time to review it next week or so

[12:49] <moritz> donaldh++

[12:49] <jnthn> FROGGS: OK. I've gotta go to Oslo for the first chunk of next week to teach, but may still find time on evenings...

[12:50] <FROGGS> jnthn: no hurry :o), I just wanted to tell what I am up to

[12:50] *** ajr joined
[12:51] *** ajr is now known as Guest14547

[12:54] *** Guest14547 is now known as ajr_

[12:54] <daxim> what's RTTI?  http://ian.hixie.ch/programming/

[12:54] <tadzik> Run Time Type Introspection, I think

[12:54] <daxim> ahh :|

[12:54] <FROGGS> Run-time type information?

[12:55] <FROGGS> according to google's #1

[12:56] *** benabik left
[12:56] *** anon3242 left
[12:58] <moritz> next problem with star: PSGI depends on HTTP::Status, but PSGI is compiled first

[12:59] <jnthn> moritz++ # workin gon tstar

[13:00] <jnthn> uh, working on star

[13:02] <timotimo> moritz the rakudo tzar?

[13:02] <lizmat> hoelzro: I consider myself poked and on the list for RaNIW

[13:02] <lizmat> well, you of course  :-)

[13:02] <FROGGS> that even might be valid klingon: workin gon tstar

[13:02] <FROGGS> you just have to shout it

[13:03] <FROGGS> do we have something in the Perl 6 world that is a collection of classes?

[13:03] <timotimo> everything shouted is either valid klingon or valid german

[13:04] <FROGGS> RATZNFATZ!

[13:04] <FROGGS> yeah :/

[13:04] <hoelzro> \o/

[13:04] <hoelzro> just need to book my flight then

[13:05] <timotimo> you can tile the whole plane (actually i guess multidimensional space?) of things humans can express while shouting with german and klingon words. only grammar leaves some holes

[13:05] <FROGGS> \o/, our pyg-Man is coming too!

[13:06] *** dalek left
[13:07] *** dalek joined
[13:07] *** ChanServ sets mode: +v dalek

[13:08] *** fridim__ joined
[13:10] <hoelzro> timotimo: I will not tile the plane!

[13:10] <hoelzro> they'll kick me off!

[13:10] <lizmat> you know, there's an app for that

[13:11] <lizmat> http://www.thetileapp.com   ;-)

[13:14] *** fhelmberger_ left
[13:14] *** denisboyun left
[13:24] <timotimo> lizmat: "has anybody seen my plane? it's yea tall."

[13:27] <cognominal> that's nice, I will buy in when it's 2$ a tile.

[13:28] *** bluescreen10 joined
[13:28] <dagurval> that tile product is the exact same idea that the winners of Startup Weekend Trondheim has over a year ago

[13:29] <dagurval> too bad for them that they didn't market it quicker :)

[13:31] <cognominal> My regular phone only use is to find my iPhone, next I will use my IPhone to find my (tiled) keys set. How recursive these searchs can be?

[13:32] <lizmat> fetching the van &

[13:33] <cognominal> I am using public transportation. :)

[13:34] <cognominal> … socialist europa

[13:35] *** jnap left
[13:37] *** gshank joined
[13:41] *** dmol left
[13:44] *** jnap joined
[13:44] *** pernatiy_ joined
[13:44] <Juerd> lizmat: Wow, that tile thing seems like an incredibly stupid thing, environmentally.

[13:45] <Juerd> lizmat: A non-replacable battery that lasts only a year..

[13:45] <Juerd> Throwaway electronics :(

[13:46] <sjn> jnthn: ping

[13:47] <sjn> jnthn: how long are you staying in Oslo?

[13:47] *** bluescreen10 left
[13:47] <jnthn> sjn: Arrive Sun, leave Wed midday

[13:47] *** pernatiy left
[13:48] <jnthn> sjn: Tuesday is the good night for me to go out for beer. Sun and Mon I'll have teaching to get up for the next day. :)

[13:49] *** lowpro30 joined
[13:49] <nwc10> so, Monday in oslo for breakfast and coffee? :-)

[13:52] <sjn> jnthn: right

[13:53] <sjn> tuesday is good \o/

[13:55] *** fhelmberger joined
[13:58] *** thou joined
[14:01] *** skids joined
[14:02] <FROGGS> jnthn: first draft, note that the S02 pod is taken unmodified from specs: https://gist.github.com/FROGGS/fbb4455f544a35cf265d

[14:02] <FROGGS> jnthn: the cool thing is that it is just a about a few lines, nothing special to invent for it...

[14:03] <FROGGS> TimToady: would be awesome if you take a glimpse at https://gist.github.com/FROGGS/fbb4455f544a35cf265d

[14:05] *** dmol joined
[14:05] *** fhelmberger left
[14:07] *** lowpro30_ joined
[14:08] *** lowpro30 left
[14:08] *** dmol left
[14:09] *** dmol joined
[14:10] *** xinming left
[14:11] *** lowpro30_ left
[14:11] *** xinming joined
[14:13] <moritz> today I learned about http://en.wikipedia.org/wiki/Auto-antonym

[14:14] *** lowpro30 joined
[14:15] <timotimo> FROGGS: that new method is pseudocode, no?

[14:18] *** PacoAir joined
[14:19] *** pmurias joined
[14:19] <pmurias> nqp::shell() is not implemented on parrot?

[14:21] <pmurias> is there a way to express it using pir ops?

[14:22] *** lowpro30 left
[14:23] <dalek> star: afc39e0 | moritz++ | modules/MODULES.txt:

[14:23] <dalek> star: build HTTP::Status before PSGI

[14:23] <dalek> star: review: https://github.com/rakudo/star/commit/afc39e051e

[14:23] <dalek> star: 69626a8 | moritz++ | tools/build/Makefile.in:

[14:23] <dalek> star: Rakudo::Debugger does not need perl6_group

[14:23] <dalek> star: review: https://github.com/rakudo/star/commit/69626a8810

[14:24] *** kaleem left
[14:25] *** sidus left
[14:26] <moritz> ok, star build is finally cleans

[14:26] <moritz> *clean

[14:26] * moritz doesn't even want to look at the tests...

[14:26] <moritz> zavolaj!

[14:27] <timotimo> oh zavolaj :(

[14:28] <pmurias> donaldh: ping

[14:28] <donaldh> pmurias: hi

[14:28] <moritz> panda!

[14:28] <moritz> t/01-file-find.t ...... Failed 1/10 subtests 

[14:28] <moritz> erm, File::Tools

[14:29] <timotimo> yeah, is that the continue-after-exception test?

[14:29] <moritz> dunno, I just see the passing test scroll by

[14:29] * moritz considers TODOing the zavolaj tests

[14:29] <timotimo> ah, right.

[14:29] <moritz> DBIish seems to work with it

[14:29] <moritz> Testing modules/jsonrpc...

[14:29] <moritz> t/client.t .. Failed 1/39 subtests 

[14:30] <jnthn> If DBIish works, zavolaj can only be so busted...

[14:30] <moritz> oh, and LWP::Simple fails most of its tests too :(

[14:30] *** SamuraiJack left
[14:32] <donaldh> what is the status of the nio File ops on JVM ?

[14:33] <donaldh> work in progress?

[14:34] <jnthn> Yeah

[14:35] <jnthn> async slurp and async lines work so far

[14:36] *** benabik joined
[14:37] *** denis_boyun joined
[14:38] <dalek> star: 7b365da | moritz++ | modules/perl6-lwp-simple:

[14:38] <dalek> star: Use a fixed LWP::Simple

[14:38] <dalek> star: review: https://github.com/rakudo/star/commit/7b365da7dd

[14:38] <moritz> anybody wnat to look into that jsonrpc failure?

[14:38] <pmurias> donaldh: I'm planning to port nqp::shell to parrot

[14:39] <donaldh> pmurias++

[14:39] *** Psyche^_ joined
[14:39] <donaldh> jnthn: looks like FileHandle.write is needed too

[14:40] <pmurias> is it possible to easily express the one argument version in terms of the 3 argument one

[14:40] <jnthn> donaldh: Oh, wait, you mean for binary I/O

[14:40] <jnthn> donaldh: That is todo :)

[14:40] <jnthn> donaldh: In the synchronous case also :)

[14:40] <donaldh> k

[14:40] *** rindolf joined
[14:40] <donaldh> pmurias: The one argument version is going away...

[14:41] <tadzik> moritz, moritz 

[14:41] <donaldh> pmurias: now that rakudo uses the three argument version

[14:41] <tadzik> File::Tools needs to be replaced with File::Find and Shell::Command

[14:41] <pmurias> and how is nqp code using the 1 argument version supposed to be translated?

[14:41] <tadzik> I think there's even a starticket for that

[14:42] <tadzik> also, open($a, "p") is necessary for IO::Socket::INET tests

[14:42] <donaldh> jnthn: I tried to do spurt('hello.t', 'use v6; say "hello";') and got IO::Handle.write NYI on this backend

[14:43] *** Psyche^ left
[14:43] <donaldh> jnthn: so, yeah, I'll try and fill the gaps.

[14:43] <jnthn> donaldh++

[14:43] <tadzik> don't we have binary file IO on nqp level?

[14:43] <tadzik> we have binary sockets IO, should be easy enough to port it

[14:43] <donaldh> tadzik: not for JVM.

[14:43] <jnthn> tadzik: We don't on JVM yet, no

[14:43] <donaldh> looks pretty trivial though

[14:43] <tadzik> also, I consider merging the existing sockets code after all

[14:43] <pmurias> is there a way to get the cwd on nqp-jvm?

[14:44] <tadzik> it's not finished, but it's Something [tm]

[14:44] <pmurias> so that nqp::shell('echo hi',nqp::cwd(),nqp::getenvhash()) can work?

[14:44] <tadzik> and thus better than nothing

[14:44] <donaldh> pmurias: nqp::cwd does that

[14:47] <donaldh> pmurias: that works for me

[14:47] <pmurias> I got confused by the definition not including a thread context

[14:48] <donaldh> pmurias: https://github.com/perl6/nqp/commit/4a311ef1aa97743df83a9ee5df7147490773499b

[14:50] <dalek> star: 0ce8b0d | moritz++ | / (5 files):

[14:50] <dalek> star: replace File::Tools with File::Find and Shell::Command

[14:50] <dalek> star: review: https://github.com/rakudo/star/commit/0ce8b0dead

[14:51] <moritz> http://stackoverflow.com/questions/1260748/how-do-i-remove-a-git-submodule#1260982 oh how I love submodules

[14:51] <pmurias> donaldh: how do we get things like the exit code from nqp::shell?

[14:52] *** ajr_ left
[14:53] <donaldh> nqp::shell returns the process exit value 

[14:53] <donaldh> on JVM anyway

[14:53] *** ajr joined
[14:53] <donaldh> or 255 if it fails to get as far as executing a shell at all

[14:53] <FROGGS> timotimo: it is a proposal, yes

[14:54] *** ajr is now known as Guest8695

[14:54] <pmurias> donaldh: ok

[14:54] <FROGGS> pmurias: grep for spawn

[14:55] *** Guest8695 is now known as ajr_

[14:55] <donaldh> On JVM it's handled by the Process class. We do Process.waitFor(); retval = Process.exitValue();

[14:56] *** bluescreen10 joined
[14:57] <donaldh> pmurias: https://github.com/rakudo/rakudo/blob/nom/src/core/control.pm#L202

[14:59] <FROGGS> jnthn: so my plan is to fix :from<NQP>, and then to provide a sample pure Perl 6 slang, using my proposed Slang class

[15:04] *** _jaldhar left
[15:04] <dalek> rakudo/nom: e9e99b3 | (Geoffrey Broadwell)++ | tools/build/Makefile-JVM.in:

[15:04] <dalek> rakudo/nom: Support rakudo-jvm builds on smaller systems

[15:04] <dalek> rakudo/nom: 

[15:04] <dalek> rakudo/nom: Tune JVM memory options to allow successful compile on a

[15:04] <dalek> rakudo/nom: 32-bit/2GB RAM system, while still remaining <2% slower to

[15:04] <dalek> rakudo/nom: compile the setting on a larger 64-bit system than the current

[15:04] <dalek> rakudo/nom: settings.

[15:04] <dalek> rakudo/nom: 

[15:04] <dalek> rakudo/nom: Max heap size was tested every 100m; -Xmx1100m was minimal for

[15:04] <dalek> rakudo/nom: compiles on 32-bit, and -Xmx1300m was minimal on 64-bit, but

[15:04] <dalek> rakudo/nom: noticeably slower than current settings.  -Xmx1600m seemed to

[15:04] <dalek> rakudo/nom: be the sweet spot for minimal slowdown on 64-bit while still

[15:04] <dalek> rakudo/nom: being buildable on a 32-bit/2GB RAM system.

[15:04] <dalek> rakudo/nom: 

[15:04] <dalek> rakudo/nom: Also explicitly set stack size, as the automatic tuning seemed

[15:04] <dalek> rakudo/nom: to work fine on the larger 64-bit system, but set a too-small

[15:04] <dalek> rakudo/nom: stack on the smaller system, causing the build to fail.

[15:04] <dalek> rakudo/nom: -Xss1m seems to work well on both.

[15:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e9e99b39d3

[15:06] <pmurias> hmm, how should we test nqp::shell()?

[15:07] <benabik> Carefully.

[15:07] <FROGGS> dunno, is `dir` cross platform enough?

[15:08] <geekosaur> nope

[15:08] <pmurias> would special casing windows-- be enough?

[15:09] <nwc10> is `echo` cross platform enough?

[15:10] <FROGGS> I'd say we use `echo` as long we dont have a reason to do something else

[15:14] *** colomon joined
[15:17] <pmurias> is it possible to run nqp-jvm without perl5?

[15:17] <tadzik> run, yes

[15:17] <tadzik> build, no

[15:19] *** crab2313 joined
[15:20] <pmurias> http://pastie.org/8262991 - would something like that be portable?

[15:26] <FROGGS> I think it works on the platforms I know

[15:26] <nwc10> pmurias: I think so. You might want to make your regex a bit more robust. I think that /^Hello$/ should be safe

[15:26] <donaldh> pmurias: would or should ? 

[15:27] <nwc10> um, not portable to VMS. But nothing you have is yet. Cross that bridge when you come to it

[15:27] <nwc10> as I have a window open on a VMS machine I tested

[15:27] <donaldh> :)

[15:29] *** zakharyas left
[15:29] *** lowpro30 joined
[15:33] *** benabik left
[15:33] *** lowpro30 left
[15:48] *** dmol left
[15:49] <tadzik> hahaha

[15:49] <tadzik> "A QA engineer walks into a bar. Runs into a bar. Crawls into a bar. Dances into a bar. Tiptoes into a bar. Rams into a bar. Jumps into a bar"

[15:50] <jnthn> Doesn't that make the barman testy? :P

[15:50] <skids> Considering the number of drinks he is about to order, no.

[15:51] <TimToady> A QA engineer crawls out of a bar...

[15:52] *** bbkr_ joined
[15:53] *** woolfy left
[15:54] <lizmat> on our way to FrosCON

[15:54] <lizmat> &

[15:54] *** lizmat left
[15:55] *** benabik joined
[15:55] * bbkr_ is checking jsonrpc bug right now

[15:58] *** benabik_ joined
[15:59] *** benabik left
[15:59] *** benabik_ is now known as benabik

[16:03] *** daxim left
[16:04] <donaldh> Feedback welcome: is this moving in a sane direction for chdir emulation https://github.com/donaldh/rakudo/commit/8d95784fb2580067bf8d7e4db97c2ac88440a9db

[16:04] <bbkr_> by the way - I confirm that LWP::Simple now works

[16:07] *** btyler joined
[16:09] *** xinming left
[16:10] *** xinming joined
[16:11] <pmurias> is there a portable way to call pwd? (so I can test the directory parameter)?

[16:11] <pmurias> and something that would use an env variable?

[16:15] <JimmyZ> nqp::cwd

[16:16] <pmurias> JimmyZ: from a shell command

[16:19] <pmurias> do I need to worry about portability to something other than windows/unix variants?

[16:19] <huf> pwd is a shell builtin usually. what do you want to get out of it?

[16:19] <diakopter> pmurias: DOS?

[16:20] <huf> i dont think pwd is for anything but interactive use though...

[16:20] <bbkr_> r: my $x = Nil; $x.WHAT.say # what is going on here?

[16:20] <camelia> rakudo e9e99b: OUTPUT«(Any)␤»

[16:20] <donaldh> pmurias: perl ?

[16:23] *** cbk left
[16:23] <TimToady> bbkr_: you're setting $x back to its defualt of Any by assigning Nil to it

[16:24] <TimToady> Nil means "there's a missing value here"

[16:25] <TimToady> but a typed variable can't hold that; at its most undefined, it can hold only an undefined type object like Any or Int

[16:26] <donaldh> pmurias: the rakudo ENV tests use is_run which is defined in t/spec/packages/Test/Util.pm

[16:26] <bbkr_> TimToady: thanks for explanation. this new (or newly implemented) feature breaks JSON::RPC in Rakudo star. now I know how to fix it :)

[16:26] <TimToady> r: my Complex $c = 1+2i; say $c; $c = Nil; say $c;

[16:26] <camelia> rakudo e9e99b: OUTPUT«1+2i␤(Complex)␤»

[16:27] <bbkr_> r: my Nil $x = Nil; $x = Nil; $x.WHAT.say

[16:27] <camelia> rakudo e9e99b: OUTPUT«Nil␤»

[16:27] <TimToady> r: my Mu $x = Nil; say $x

[16:27] <camelia> rakudo e9e99b: OUTPUT«(Mu)␤»

[16:28] <TimToady> my $x := Nil; say $x

[16:28] <TimToady> r: my $x := Nil; say $x

[16:28] <camelia> rakudo e9e99b: OUTPUT«Nil␤»

[16:28] <TimToady> that works

[16:38] *** fridim__ left
[16:39] <FROGGS> r: say Nil

[16:39] <camelia> rakudo e9e99b: OUTPUT«Nil␤»

[16:39] <FROGGS> why is it missing the () ?

[16:39] <FROGGS> n: say Nil

[16:39] <camelia> niecza v24-88-g1f87209: OUTPUT«Nil␤»

[16:40] <geekosaur> it's a value, not a type object?

[16:42] <flussence> Stage parse      : 2151.679   # maybe I should'a invested in a new laptop...

[16:42] *** panchiniak joined
[16:44] *** djrb joined
[16:47] *** djrb left
[16:47] <tadzik> wow

[16:49] <bbkr_> jsonrpc fixed for Star release

[16:50] <TimToady> geekosaur: yes, it's a value, though Nil.WHAT probably returns Nil :)

[16:51] <TimToady> r: say Nil.WHAT

[16:51] <camelia> rakudo e9e99b: OUTPUT«Nil␤»

[16:51] *** bbkr_ left
[16:51] <geekosaur> yeh, I was wondering how the value vs. type went

[16:51] <TimToady> well, type objects are values too, so Nil is also a missing type object :)

[16:54] *** ajr joined
[16:54] *** ajr_ left
[16:54] *** ajr is now known as Guest19022

[16:54] *** Guest19022 is now known as ajr_

[16:58] *** average left
[16:59] *** panchiniak left
[17:02] *** spider-mario joined
[17:02] *** ajr_ left
[17:06] *** Mouq joined
[17:20] *** betterworld joined
[17:20] <masak> o/

[17:21] <pmurias> \o

[17:21] *** Targen joined
[17:24] *** Mouq left
[17:24] *** Mouq joined
[17:25] *** jeff_s1 left
[17:26] <sjohnson> （　｀ー´）

[17:26] * masak survived the Python teaching :)

[17:26] <masak> sjohnson: hey -- nice to see you around.

[17:26] <sjohnson> you too.

[17:26] <sjohnson> admittedly way behind in perl6 news unfortunately :/

[17:27] <flussence> stuff happened!

[17:28] <masak> sometimes more than once!

[17:28] * flussence is only slightly more up to date on things

[17:28] <masak> being up to date is overrated.

[17:29] *** BenGoldberg joined
[17:29] <flussence> well at least I've got an up to date `perl6` today, I've been neglecting that for a while...

[17:31] * masak .oO( in Soviet Russia, an up-to-date `perl6` neglects YOU )

[17:32] <flussence> I attempted the JVM thing, but that only reminded me my laptop's still running java 6...

[17:32] *** pernatiy_ left
[17:32] <flussence> (and I see a java *8* in these package repos now!)

[17:33] *** jeff_s1 joined
[17:35] *** kaare_ joined
[17:40] *** dmol joined
[17:40] *** btyler left
[17:41] *** denis_boyun left
[17:41] *** jnap left
[17:44] *** crab2313 left
[17:44] <BenGoldberg> rn: for (gather { take 1; take 2; say 3 }) { .say; last }

[17:44] <camelia> niecza v24-88-g1f87209: OUTPUT«1␤»

[17:44] <camelia> ..rakudo e9e99b: OUTPUT«3␤1␤»

[17:44] <BenGoldberg> Good afternoon

[17:45] <masak> BenGoldberg: o.O

[17:45] <masak> where's... where's that 3 coming from?

[17:46] <BenGoldberg> The say 3

[17:46] <masak> right.

[17:46] <masak> ...oh :(

[17:47] <masak> I bet it's that bloddy buffering thing again.

[17:47] <BenGoldberg> r: gather {...}.infinite

[17:47] <camelia> rakudo e9e99b:  ( no output )

[17:47] <BenGoldberg> r: gather {...}.infinite.say

[17:47] <camelia> rakudo e9e99b: OUTPUT«Nil␤»

[17:48] *** btyler joined
[17:48] <BenGoldberg> I'm pretty sure it's because for() on rakudo reifys lists for which .infinite is not True

[17:48] *** jnap joined
[17:49] <BenGoldberg> And of course, Nil is not true

[17:54] <BenGoldberg> That bug is what led me to discovering the gather {...} but role {...} bug... since I wanted to try:

[17:55] <BenGoldberg> rn: for (gather { take 1; take 2; say 3 } but role { method infinite {True} } ) { .say; last }

[17:55] <camelia> rakudo e9e99b: OUTPUT«This type does not support elems␤  in method REIFY at src/gen/CORE.setting:7531␤  in method reify at src/gen/CORE.setting:6757␤  in method reify at src/gen/CORE.setting:6744␤  in method reify at src/gen/CORE.setting:6849␤  in method reify at src/gen/CORE.setting:67…

[17:55] <camelia> ..niecza v24-88-g1f87209: OUTPUT«3␤1 2␤»

[17:56] * BenGoldberg blinks

[17:57] <BenGoldberg> Is that a niecza bug?

[17:58] *** rindolf left
[17:58] <BenGoldberg> n: for (gather { take 1; take 2; say 3 }) { .say; last }

[17:58] <camelia> niecza v24-88-g1f87209: OUTPUT«1␤»

[17:58] <BenGoldberg> n: for (gather { take 1; take 2; say 3 } but role { method foo {True} }) { .say; last }

[17:58] <camelia> niecza v24-88-g1f87209: OUTPUT«3␤1 2␤»

[18:00] <pmurias> is changing nqp::getenvhash() supposed to change the env variables?

[18:00] <jnthn> no

[18:01] <pmurias> it does on parrot

[18:03] <donaldh> pmurias: env is immutable on JVM

[18:05] <jnthn> pmurias: OK, can it be *relied on* to do it? No

[18:06] <pmurias> jnthn: on parrot it can be *relied on*

[18:07] <jnthn> pmurias: You asked about the nqp:: op.

[18:07] <jnthn> Which I take to mean "in general" :)

[18:08] <dalek> star: 6d48160 | moritz++ | modules/jsonrpc:

[18:08] <dalek> star: update to newer jsonrpc

[18:08] <dalek> star: review: https://github.com/rakudo/star/commit/6d48160002

[18:08] <pmurias> jnthn: I was asking on the "specced" behavior, not the de facto one ;)

[18:09] *** grondilu left
[18:09] <diakopter> de jure

[18:09] <diakopter> du jour

[18:10] *** SamuraiJack joined
[18:11] <jnthn> That's just bribing me to write a spec doc for nqp:: ops :P

[18:11] <jnthn> (yes, I know it needs doing :))

[18:12] <donaldh> o O ( and more tests for nqp, not just test-by-rakudo )

[18:12] <pmurias> jnthn: bribing being "If you spec it I'll implement it correctly" ;)

[18:12] <jnthn> ;)

[18:12] * donaldh realises thoughts like that are tantamount to volunteering

[18:12] <jnthn> donaldh: Agree; pmurias++ has been adding more of late :)

[18:13] *** lizmat joined
[18:13] * lizmat arrived at Siegburg

[18:14] *** awwaiid joined
[18:15] *** btyler left
[18:15] *** vk joined
[18:16] <pmurias> jnthn: is it possible to implement nqp ops as chunks of nqp code?

[18:18] <jnthn> pmurias: See nqp::sprintf

[18:18] <pmurias> which vm?

[18:19] <pmurias> so I should hand compile my code to QAST?

[18:19] *** btyler joined
[18:20] * pmurias figured out

[18:20] <jnthn> pmurias: I think all VMs now...but certainly JVM

[18:20] <jnthn> No, I'm sure sprintf was done in nqp

[18:20] *** woolfy joined
[18:23] <pmurias> I could do that or figure how to create and traverse a nqp hash in parrot C code

[18:24] <jnthn> I'd do that :)

[18:24] *** jnap left
[18:24] <jnthn> (as in, not write more C code)

[18:24] <lizmat> NMCC  !

[18:25] <diakopter> 17:54 < dalek> MoarVM: review: https://github.com/MoarVM/MoarVM/commit/59a7bb838d

[18:25] <diakopter> 17:57 < not_gerd> so, on to the next controversial subject: header re-organization

[18:25] <diakopter> 17:57 < yoleaux> 15:47Z <JimmyZ> not_gerd: please change the defaults to linenoise unless --use-readline ;)

[18:25] <diakopter> 17:57 < yoleaux> 15:54Z <JimmyZ> not_gerd: please see backlog

[18:25] <diakopter> 17:58 < not_gerd> [x] done

[18:25] <diakopter> 17:58 < not_gerd> I'm thinking something along these lines:

[18:25] <diakopter>                   https://gist.github.com/gerdr/990ebfa6ef040b31b5bb

[18:25] <diakopter> 18:01 < jnthn> BenGoldberg: Probably when NQP runs nicely on it :)

[18:25] <diakopter> 18:02 < BenGoldberg> So, not until it self-hosts?

[18:25] <diakopter> 18:02 < BenGoldberg> Err, self-hosts NQP?

[18:25] <diakopter> 18:03 < diakopter> not_gerd: something will generate the public header file?

[18:25] <diakopter> 18:04 < not_gerd> diakopter: could be done, sure

[18:25] <diakopter> 18:05 < diakopter> just need to detect that marker and backslash-line-endings

[18:25] <diakopter> 18:05 < diakopter> (and follow includes, I guess)

[18:25] <diakopter> 18:05 < jnthn> BenGoldberg: Right

[18:25] <diakopter> 18:06 < jnthn> BenGoldberg: Well, self hosts NQP better than crashing before it even reaches the parser :)

[18:25] <diakopter> 18:06 < jnthn> Which is the current state of the self-host :)

[18:25] <diakopter> aw f

[18:26] <jnthn> fail

[18:26] *** jnap joined
[18:27] <diakopter> well, at least it wasn't something personal

[18:27] <lizmat> NMWW !

[18:27] <jnthn> yes, I wonder who he was pasting that to :P

[18:28] <diakopter> no one

[18:28] <diakopter> accidental selection (putty copy)

[18:29] <diakopter> accidental right-click (putty paste, due to new computer and touchpad I'm not used to)

[18:29] <diakopter> <-fail

[18:29] *** spider-mario left
[18:35] <dalek> nqp: 001cf1d | (Pawel Murias)++ | t/nqp/59-nqpop.t:

[18:35] <dalek> nqp: Test that nqp::istrue works on the result of nqp::null().

[18:35] <dalek> nqp: review: https://github.com/perl6/nqp/commit/001cf1d431

[18:35] <dalek> nqp: 606da15 | (Pawel Murias)++ | / (3 files):

[18:35] <dalek> nqp: Partially implement nqp::shell() on parrot (ignores it's third argument).

[18:35] <dalek> nqp: review: https://github.com/perl6/nqp/commit/606da155ea

[18:36] <masak> diakopter: irssi has this nice "are you sure?" feature for big pastes.

[18:36] <diakopter> masak: yes. I have it enabled.

[18:36] <diakopter> sometimes it doesn't work

[18:36] *** ajr joined
[18:37] *** ajr is now known as Guest84619

[18:37] *** Guest84619 is now known as ajr_

[18:42] *** benabik left
[18:42] *** hummeleBop left
[18:42] <thou> diakopter: congratulations on the new computer! :-)

[18:43] <diakopter> thou: heh.

[18:43] * masak .oO( best of luck with the copy/pasting in the future! ) :P

[18:44] <diakopter> easy fix (change putty to not paste on right-click)

[18:47] *** denisboyun_ joined
[18:49] *** sidus joined
[18:50] <masak> FROGGS++ # closing a bunch of sprintf tikkits

[18:50] *** woolfy left
[18:50] <FROGGS> was a pleasure :o)

[18:51] <lizmat> dinner&

[18:51] *** lizmat left
[18:53] *** donaldh left
[18:57] *** donaldh joined
[19:03] <donaldh> jnthn: are nqp test files just added with the next sequential number?

[19:04] <FROGGS> donaldh: yes

[19:08] *** Teratogen joined
[19:09] *** Rotwang joined
[19:14] *** awwaiid left
[19:19] *** bluescreen100 joined
[19:20] *** awwaiid joined
[19:21] *** kaare_ left
[19:22] *** bluescreen10 left
[19:27] <jnthn> donaldh: yeah

[19:27] <jnthn> donaldh: Unless you spot a gap, in which case fill it... :)

[19:34] *** pernatiy joined
[19:37] *** abnorman left
[19:42] <Mouq> r: my $foo="+";&infix:($foo)(3,4).say

[19:42] <camelia> rakudo e9e99b: OUTPUT«===SORRY!=== Error while compiling /tmp/hMrxNDLskK␤You can't adverb that␤at /tmp/hMrxNDLskK:1␤------> my $foo="+";&infix:($foo)⏏(3,4).say␤»

[19:42] <Mouq> r: my $foo="+";&(infix:($foo))(3,4).say

[19:42] <camelia> rakudo e9e99b: OUTPUT«===SORRY!===␤No such method 'has_compile_time_value' for invocant of type 'NQPMu'␤»

[19:44] <flussence> (interesting thing I've noticed about that irssi paste detecting mechanism is that it seems to be entirely timer-based; I've had it questioning my actions just from typing fast over a slow ssh)

[19:47] <FROGGS> r: BEGIN my $foo="+";&(infix:($foo))(3,4).say

[19:47] <camelia> rakudo e9e99b: OUTPUT«===SORRY!===␤No such method 'has_compile_time_value' for invocant of type 'NQPMu'␤»

[19:49] <Mouq> I think the &() should call it anyway. But it's bug ##68024

[19:49] <Mouq> s/#//

[19:50] *** Mouq left
[19:52] <BenGoldberg> r: my $foo = "+"; say &(infix::($foo))(3,4);

[19:52] <camelia> rakudo e9e99b: OUTPUT«===SORRY!=== Error while compiling /tmp/IbW58yTNBL␤Combination of indirect name lookup and call not (yet?) allowed␤at /tmp/IbW58yTNBL:1␤------> my $foo = "+"; say &(infix::($foo)⏏)(3,4);␤    expecting any of:␤        argument li…

[19:52] <BenGoldberg> Which is less incorrect, infix:($foo) or infix::($foo)?

[19:53] <moritz> r: say &::("infix:<+>").(3, 4)

[19:53] <camelia> rakudo e9e99b: OUTPUT«7␤»

[19:54] <BenGoldberg> Aah

[19:57] *** abnorman joined
[19:58] *** denisboyun_ left
[19:58] <moritz> ok, R* is down to the one test failure in zavolaj

[19:59] <jnthn> \o/

[19:59] <moritz> I'm going to fudge that one, and release.

[19:59] <nwc10> \o/

[19:59] <jnthn> Looks like we'll make an R* this month then

[19:59] <jnthn> moritz++

[19:59] <nwc10> doesn't R* usually happen a week after R?

[19:59] <moritz> (unless somebody promises to fix the zavolaj failure in less than a week, then I'm going to wait for it)

[19:59] <jnthn> moritz: Please (if there ain't one already) make a ticket for the failure

[19:59] <moritz> nwc10: R* usually happens, if at all, between R* release and end of month

[19:59] <nwc10> ah OK

[20:00] <moritz> jnthn: https://github.com/jnthn/zavolaj/issues/28 exists

[20:00] <moritz> [Coke]++

[20:02] <slava> arnsholt: jnthn: I hope I am not being an annoyance, but I am running into some trouble with NativeCall. I started a project on github(https://github.com/theslava/git) to implement a perl6 interface to libgit2. I am completely lost as to how to represent a pointer to a pointer to a struct (passed in as an argument to git_repository_open).

[20:03] <jnthn> slava: The typical trick for that is to use a one-element array

[20:03] <jnthn> (CArray)

[20:03] <moritz> CArray[CArray[YourStruct]]

[20:03] <slava> jnthn: that's what I did ... but the other thing is that I could not find anywhere where they define the actual struct ...

[20:03] <jnthn> I suspect just one level, given YourStruct is alredy a reference time...

[20:03] <jnthn> slava: Are you just meant to treat it as an opaque pointer rather than looking into it?

[20:04] <jnthn> slava: If so, use the OpaquePointer type

[20:07] <slava> jnthn: I think so

[20:08] <slava> https://github.com/libgit2/libgit2/blob/HEAD/include/git2/types.h#L105-105

[20:09] <dalek> zavolaj: 61224fa | moritz++ | t/02-simple-args.t:

[20:09] <dalek> zavolaj: skip failing test to make R* releasable

[20:09] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/61224fa76c

[20:09] <slava> that's there the git_repository is typedefed, I tried recursively searching for all structs and couldn't find anything ...

[20:09] <slava> so repr('OpaquePointer') and then just CArray[OpaquePointer] ?

[20:10] <dalek> star: 876236e | moritz++ | modules/zavolaj:

[20:10] <dalek> star: use updated zavolaj with failing test skipped

[20:10] <dalek> star: review: https://github.com/rakudo/star/commit/876236ed02

[20:12] <moritz> slava: just use OpaquePointer as a type constraint in the function signature

[20:13] *** denisboyun joined
[20:13] <moritz> slava: if you look at https://github.com/perl6/DBIish/blob/master/lib/DBDish/Pg.pm6 for example, it uses OpaquePointers for all the structs that libpq uses

[20:14] <moritz> slava: and it never unpacks them, just passes them to other native functions

[20:17] <dalek> star: 7fbe884 | moritz++ | README:

[20:17] <dalek> star: bump version in README

[20:17] <dalek> star: review: https://github.com/rakudo/star/commit/7fbe884e79

[20:17] <moritz> jnthn: can you please add a .gitignore with perl6-debug* to rakudo::debugger?

[20:17] <moritz> jnthn: (or give me a commit bit, and I'll do it)

[20:18] <jnthn> sorry, was away for a moment

[20:18] <moritz> jnthn: thing is, 'git diff' in star is non-empty if there are untracked (and unignored) files in a submodule, which is kinda annoying

[20:18] <jnthn> moritz: you got a commit bit

[20:18] <moritz> jnthn: thanks

[20:18] <slava> the fact that there is a variable name doesn't matter?

[20:19] <moritz> slava: no, it doesn't

[20:19] <jnthn> slava: OpaquePointer is kinda like a void*

[20:19] <slava> I see, it also appears that git_repository it has to be allocated by the user

[20:19] <moritz> that is annoying.

[20:23] <moritz> r: 'a' ~~ /(b)?/; say $0.perl

[20:23] <camelia> rakudo e9e99b: OUTPUT«Any␤»

[20:29] <dalek> rakudo-debugger: af2f675 | moritz++ | .gitignore:

[20:29] <dalek> rakudo-debugger: ignore generated files

[20:29] <dalek> rakudo-debugger: review: https://github.com/jnthn/rakudo-debugger/commit/af2f6756f0

[20:31] <colomon> Is rakuod-debugger working?

[20:31] <dalek> star: dcfcdaf | moritz++ | docs/announce/2013.08.md:

[20:31] <dalek> star: add announcement for 2013.08 release

[20:31] <dalek> star: review: https://github.com/rakudo/star/commit/dcfcdafd8b

[20:31] <colomon> rakudo

[20:32] <moritz> colomon: jnthn unbusted it yesterday night, iirc

[20:32] <colomon> \o/

[20:35] <moritz> http://moritz.faui2k3.org/tmp/rakudo-star-2013.08-RC0.tar.gz

[20:35] *** lizmat joined
[20:37] <masak> r: sub op($op) { &::("infix:<$op>") }; say op('+')(3, 4)

[20:37] <camelia> rakudo e9e99b: OUTPUT«7␤»

[20:37] <masak> \o/

[20:37] <dalek> rakudo-star-daily: 01b8bea | coke++ | log/ (5 files):

[20:37] <dalek> rakudo-star-daily: today (automated commit)

[20:37] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/01b8beab45

[20:37] <moritz> please test and proof-read the release announcements

[20:37] <moritz> s/s$//

[20:38] <masak> waitwait, is that a star I see shining?

[20:38] <masak> moritz++

[20:38] <tadzik> Rising!

[20:38] <moritz> RCRising

[20:38] <timotimo> coooooke!

[20:38] <timotimo> you upset the configure script! :)

[20:40] <moritz> on http://perl6.org/compilers/features Rakudo still has a +- on "Buf, buf and utf8"

[20:40] <moritz> do you think the support for Buf, Blob and utf8 is good enough now to give it a straight + ?

[20:40] <timotimo> moritz: it says "Unary hyper ops currently descend into nested arrays and hashes. This will change to make them equivalent to a one-level map", but that's not accurate

[20:40] <timotimo> actually, a "is nodal" trait will be applied to some methods and operators

[20:41] <jnthn> moritz: The main missing thing is that Buf isn't mutable yet.

[20:41] <moritz> timotimo: can you please fix it in the announcement? :-)

[20:41] <moritz> jnthn: I thought that's what Blob is for?

[20:41] <timotimo> uh, i don't think i have access, but i can write a patch for you, or would you accept a replacement paragraph?

[20:41] <jnthn> moritz: Blob is the immutable one

[20:41] <moritz> oh

[20:42] <moritz> timotimo: I think I can give you commit access to star

[20:42] <slava> also, is that auth() and ver() part of the standard and work? or is it still a wishlist type of item?

[20:42] <timotimo> cool, thanks :)

[20:43] <jnthn> whoa. Something is very hosed here. "git diff" doesn't work  :/

[20:43] <masak> o.O

[20:44] *** Rotwang left
[20:45] <tadzik> you run it, but it makes no difference

[20:45] <tadzik> bad one, I know

[20:46] <moritz> so what? I'm inDIFFerent :-)

[20:47] * masak .oO( making puns on this one proved to be difficult )

[20:47] *** vk left
[20:48] <[Coke]> (nqp:shell) is jvm only - there is already a shell in rakudo. could be refactored so the difference is hidden in nqp,aye.

[20:49] <jnthn> Gah. Reboot... :/

[20:52] *** woolfy joined
[20:53] <moritz> gah. Now I get t/02-simple-args.t   (Wstat: 0 Tests: 11 Failed: 0) Parse errors: Tests out of sequence.  Found (10) but expected (7)

[20:53] <jnthn> Well. That didn't help... :S

[20:55] *** lizmat left
[20:55] *** lizmat joined
[20:56] <FROGGS> O.o

[20:56] <jnthn> and it's only for one repo that things don't work!

[20:57] <FROGGS> well, clone afresh, and copy the files (except .git) over

[20:57] <jnthn> aye

[20:57] <jnthn> Oddly, I could commit...just not diff :S

[20:59] <jnthn> wtf, it only happens when I have the submodule...

[21:01] * moritz would gladly abandon submodules immediately

[21:01] <jnthn> heh

[21:01] <jnthn> A git version update seems to have fixed it

[21:01] <jnthn> but still...wtf

[21:01] <moritz> git subtree is an interesting approach for something like R*

[21:02] <moritz> you just put the module in a subfolder under normal version control, and then do a subtree merge whenever you update a modulel

[21:02] <jnthn> subtree may work out better for R*

[21:03] <masak> +1

[21:04] *** skids left
[21:04] <PerlJam> +1 to getting rid of submodules :)  Dunno if subtree merge will end up being better though

[21:05] <timotimo> hm. i'm trying to come up with a description of nodality shorter than 4 lines :|

[21:06] <moritz> timotimo: "the extend to which hyper operator recurse will be determined by properties of the methods involved"

[21:06] <timotimo> i'd like to include the name "nodal" in it

[21:06] <moritz> ... will be limited by nodal methods"

[21:07] <timotimo> do you want to do the release now or tomorrow?

[21:07] <moritz> plus maybe a pointer to the specs

[21:07] <[Coke]> the rakudo-star build is busted.

[21:07] <moritz> timotimo: not today

[21:07] <moritz> [Coke]: how so?

[21:07] <timotimo> ok good

[21:07] <timotimo> i'll go grab some food :)

[21:07] <[Coke]> https://github.com/coke/rakudo-star-daily/blob/master/log/configure.log

[21:08] <[Coke]> looks like it happened in the last 24 hours.

[21:09] <moritz> huh. That check is in there since 2012-08-28

[21:09] <moritz> and can be circumvented by callling Configure.pl --force

[21:10] <pmurias> jnthn: should the qast_* tests from nqp-jvm be moved in into the standard nqp test suit?

[21:10] <[Coke]> I've been doing builds with a fresh build every day for a month, first time this has happened. 

[21:12] <jnthn> pmurias: Given they shell out, I'm not sure...

[21:13] <jnthn> pmurias: The point of them has been to exercise cross-compilers in development...

[21:13] <jnthn> pmurias: Before they can actually handle having the code generator attached to the NQP frontend 

[21:13] <masak> 'najt, #perl6

[21:18] <pmurias> jnthn: hmm, it could be possible to port them over to avoid shelling out when bootstraped

[21:18] *** btyler left
[21:19] <pmurias> so we don't pay the price of starting the JVM over and over

[21:20] <FROGGS> jnthn: if nqp::getattr fails, because the requested attr doesnt exist, is there an op to check for existence?

[21:20] <jnthn> FROGGS: no, you should know :)

[21:20] <moritz> you can always introspect

[21:20] <jnthn> FROGGS: I mean, you can always ask the MOP for a list of attributes

[21:20] <FROGGS> moritz: in nqp?

[21:21] <moritz> NQP has a MOP too

[21:21] <moritz> nqp: say(NQPMu.^methods)

[21:21] <camelia> nqp: OUTPUT«Confused at line 2, near "say(NQPMu."␤current instr.: 'panic' pc 14738 (src/stage2/gen/NQPHLL.pir:5238) (src/stage2/gen/NQPHLL.nqp:279)␤»

[21:21] <pmurias> jnthn: instead of QAST::Op.new(:op('say'),...) we would have an output(...), which could be turned into a say or something else for running in process

[21:21] <jnthn> pmurias: Sure, if we want them in the NQP test suite that makes sense.

[21:21] <moritz> nqp: say(NQPMu.HOW.methods(NQPMu))

[21:21] <camelia> nqp: OUTPUT«10␤»

[21:21] <FROGGS> cool

[21:21] <jnthn> pmurias: They just were never written with the intent of becoming that, is all.

[21:21] <moritz> nqp: say(nqp::join(' ', NQPMu.HOW.methods(NQPMu)))

[21:21] <camelia> nqp: OUTPUT«get_string() not implemented in class 'NQPRoutine'␤current instr.: '' pc 61 ((file unknown):43) (/tmp/_BWRDBv4B1:1)␤»

[21:22] <jnthn> pmurias: So they expect to have a main method run, etc.

[21:22] <FROGGS> nqp: say(nqp::isstr($_) ?? $_ !! '') for NQPMu.HOW.methods(NQPMu)

[21:22] <camelia> nqp: OUTPUT«␤␤␤␤␤␤␤␤␤␤»

[21:22] <jnthn> pmurias: With the right munging they can end up in the NQP test suite though.

[21:23] <jnthn> FROGGS: It's a list of method objects, not names.

[21:23] <FROGGS> yeah, I recognized that :o)

[21:23] *** woolfy left
[21:23] <moritz> nqp: say(nqp::join(' ', map { $_.name }, NQPMu.HOW.methods(NQPMu)))

[21:23] <camelia> nqp: OUTPUT«Confused at line 2, near "say(nqp::j"␤current instr.: 'panic' pc 14738 (src/stage2/gen/NQPHLL.pir:5238) (src/stage2/gen/NQPHLL.nqp:279)␤»

[21:23] <FROGGS> nqp: say($_.name) for NQPMu.HOW.methods(NQPMu)

[21:23] <camelia> nqp: OUTPUT«CREATE␤bless␤BUILDALL␤new␤Str␤Numeric␤Int␤defined␤ACCEPTS␤isa␤»

[21:23] <moritz> nqp: say(nqp::join(' ', map({ $_.name }, NQPMu.HOW.methods(NQPMu))))

[21:23] <camelia> nqp: OUTPUT«Could not find sub &map␤current instr.: '' pc 81 ((file unknown):48) (/tmp/eZo0OqZSlV:1)␤»

[21:24] <FROGGS> nqp: say($_.name) for NQPMu.HOW.attributes(NQPMu)

[21:24] <camelia> nqp:  ( no output )

[21:24] <FROGGS> nqp: say($_) for NQPMu.HOW.attributes(NQPMu)

[21:24] <camelia> nqp:  ( no output )

[21:24] <FROGGS> ahh

[21:25] <FROGGS> nqp: grammar G { }; say($_) for G.HOW.attributes(G)

[21:25] <camelia> nqp: OUTPUT«get_string() not implemented in class 'NQPAttribute'␤current instr.: '' pc 768 (src/stage2/gen/NQPCORE.setting.pir:355) (src/stage2/NQPCORE.setting:665)␤»

[21:25] <FROGGS> nqp: grammar G { }; say($_.name) for G.HOW.attributes(G)

[21:25] <camelia> nqp: OUTPUT«$!shared␤$!from␤$!pos␤$!match␤$!name␤$!bstack␤$!cstack␤$!regexsub␤$!restart␤»

[21:25] <FROGGS> \o/

[21:25] <FROGGS> r: grammar G { }; say($_.name) for G.HOW.attributes(G)

[21:25] <camelia> rakudo e9e99b: OUTPUT«$!ast␤$!shared␤$!from␤$!pos␤$!match␤$!name␤$!bstack␤$!cstack␤$!regexsub␤$!restart␤»

[21:26] <moritz> https://gist.github.com/moritz/6324200 can anybody tell me what I'm doing wrong here?

[21:27] <donaldh> hmm, the problem with writing tests is that you find bugs.

[21:27] <FROGGS> moritz: the last one has no number, is that the problem?

[21:27] <donaldh> r: my Mu $fh := nqp::open('CREDITS', 'r'); say nqp::readlinefh($fh); say nqp::tellfh($fh);

[21:27] <camelia> rakudo e9e99b: OUTPUT«Unable to open filehandle from path 'CREDITS': No such file or directory(2)␤  in block  at /tmp/mLqmroe5qJ:1␤␤»

[21:28] <donaldh> that's not the bug :)

[21:31] *** bruges joined
[21:32] <moritz> FROGGS: maybe, but the error message says "Found (10) but expected (7)" which doesn't make any sense to me

[21:32] <FROGGS> moritz: I don't understand it either

[21:34] *** pmurias left
[21:35] <moritz> the error doesn't go away when I add the number to the last test

[21:35] <FROGGS> the strip tests from the end until it goes away

[21:35] <moritz> oh funny

[21:36] <moritz> when I run prove with --verbose, the skipped test is indeed printed after no. 6

[21:36] <moritz> seems like a buffering/flushing issue :/

[21:37] <donaldh> 'night #perl6 o/

[21:37] <FROGGS> newline missing?

[21:38] <moritz> only happens when writing into the pipe that prove opens

[21:38] <moritz> oh, the tests have some fflush calls, but not everywhere it seems

[21:39] *** donaldh left
[21:41] *** btyler joined
[21:41] <dalek> zavolaj: d2392e1 | moritz++ | t/02-simple-args.c:

[21:41] <dalek> zavolaj: guard tests against suffering from buffering

[21:41] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/d2392e14b1

[21:42] <dalek> star: 8e50fcd | moritz++ | modules/zavolaj:

[21:42] <dalek> star: use newer zavolaj

[21:42] <dalek> star: 

[21:42] <dalek> star: should fix out-of-order tests

[21:42] <dalek> star: review: https://github.com/rakudo/star/commit/8e50fcd314

[21:42] <moritz> I'll do another RC tomorrow

[21:44] <lizmat> moritz++

[21:47] <moritz> and bbkr++ for promtly fixing jsonrpc tests

[21:47] <moritz> and jnthn++ for fixing Rakudo::Debugger

[21:47] <moritz> it's not a one-man show here :-)

[21:48] <diakopter> or woman!

[21:50] * moritz certainly isn't a one-woman show :-)

[21:59] *** panchiniak joined
[22:00] *** denisboyun left
[22:02] *** abnorman left
[22:06] *** ajr_ left
[22:06] <lizmat> I would hope not  :-)

[22:06] *** kbaker left
[22:06] <lizmat> I just pulled and spectested: one failure:

[22:06] <lizmat> t/spec/S32-str/sprintf.rakudo.parrot (Wstat: 0 Tests: 135 Failed: 1)

[22:06] <lizmat>   Failed test:  132

[22:07] <lizmat> not ok 132 - RT #116280# TODO sprintf printf numbers before NaN

[22:07] <lizmat> this is on parakudo

[22:07] <FROGGS> it is a todo O.o

[22:09] *** fhelmberger joined
[22:09] *** btyler left
[22:11] <lizmat> not ok 132 - RT #116280# TODO sprintf printf numbers before NaN

[22:11] <lizmat> #      got: '9223372036854775808.00NaN'

[22:11] <lizmat> # expected: '         NaN'

[22:11] *** fhelmberger left
[22:11] *** bluescreen100 left
[22:11] <lizmat> I have no idea why this TODO test is not being ignored

[22:11] <diakopter> twoo many # ?

[22:12] <lizmat> yup

[22:13] <FROGGS> lizmat: if you are going to fix it, an you fix the typo too?, it should be: sprintf prints numbers before NaN

[22:13] <FROGGS> can*

[22:13] <diakopter> printf in early english

[22:13] <diakopter> erm.

[22:13] <dalek> roast: 6998cb4 | (Elizabeth Mattijsen)++ | S32-str/sprintf.t:

[22:13] <dalek> roast: Remove confusion in fudger, so that TODO test is really a TODO

[22:13] <dalek> roast: review: https://github.com/perl6/roast/commit/6998cb4799

[22:13] <diakopter> 1700s english

[22:13] <lizmat> oops, saw that too late

[22:14] <FROGGS> lizmat: thanks anyway :o)

[22:15] <dalek> roast: f9ed594 | (Elizabeth Mattijsen)++ | S32-str/sprintf.t:

[22:15] <dalek> roast: Fix typo, as per FROGGS++

[22:15] <dalek> roast: review: https://github.com/perl6/roast/commit/f9ed594eb0

[22:15] <FROGGS> lizmat++

[22:22] *** xenoterracide_ is now known as xenoterracide

[22:24] *** xenoterracide left
[22:24] *** xenoterracide joined
[22:25] *** btyler joined
[22:32] *** sivoais joined
[22:34] *** panchiniak left
[22:34] *** denisboyun joined
[22:35] *** btyler left
[22:36] *** btyler joined
[22:38] *** grondilu joined
[22:44] <flussence> r: say [R<] 4,3,2,1

[22:44] <camelia> rakudo e9e99b: OUTPUT«Not enough positional parameters passed; got 0 but expected 2␤  in block  at src/gen/CORE.setting:15456␤  in sub  at src/gen/CORE.setting:15584␤  in block  at /tmp/ZJAWpJErOm:1␤␤»

[22:44] <flussence> blah.

[22:44] <TimToady> looks like a bug to me

[22:45] <TimToady> r: say [>] 4,3,2,1

[22:45] <camelia> rakudo e9e99b: OUTPUT«True␤»

[22:45] <TimToady> True, it's a bug

[22:46] <TimToady> n: say [R<] 4,3,2,1

[22:46] <camelia> niecza v24-88-g1f87209: OUTPUT«True␤»

[22:46] <TimToady> niecza++

[22:46] <TimToady> in general, niecza still seems to handle composition of metaops a bit better than rakudo

[22:47] <diakopter> what happens if you give that an inf list

[22:47] <TimToady> it takes a long time

[22:47] *** abnorman joined
[22:47] <diakopter> the reversed one I mean

[22:47] <TimToady> it doesn't reverse the list

[22:48] <diakopter> ...

[22:48] <TimToady> it still does it left to right

[22:48] <TimToady> which is why I asked which "reverse" you was referrin' to

[22:48] <diakopter> oh. I meant the [R thingamagic

[22:49] <TimToady> yes, and I thought of at least 3 ways you might have meant that

[22:49] * jnthn is too tired to look into it righ tnow

[22:49] <jnthn> Time for some rest...'night o/

[22:49] <FROGGS> gnight jnthn 

[22:50] <TimToady> [<] -> any( [>], [R<], reverse [<] )

[22:50] <TimToady> o/

[22:50] <diakopter> we need irc clients that channel-hop like securer radios channel-hop

[22:50] <TimToady> er, [<] reverse

[22:50] <diakopter> l

[22:53] <diakopter> n: say [>] 1,2...* # y u no fastfail

[22:53] <camelia> niecza v24-88-g1f87209: OUTPUT«(timeout)»

[22:53] *** btyler left
[22:53] <diakopter> r: say [>] 1,2...* # y u no fastfail

[22:53] <camelia> rakudo e9e99b: OUTPUT«False␤»

[22:54] <diakopter> r++

[22:54] <TimToady> that's a nieczabug from being a bit too pure about its HOP :)

[22:55] <TimToady> why it can do [R<] though, since it's just composing higher-order functions

[22:55] <TimToady> but it doesn't know to propagate short-circuitness

[22:56] <TimToady> nr: say [&&] 0, 1 xx *

[22:56] <camelia> rakudo e9e99b: OUTPUT«(timeout)»

[22:56] <camelia> ..niecza v24-88-g1f87209: OUTPUT«===SORRY!===␤␤This macro cannot be used as a function at /tmp/Spk4OstQsX line 1 (EOF):␤------> say [&&] 0, 1 xx *⏏<EOL>␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @…

[22:56] <TimToady> and rakudo doesn't always do it either :)

[22:57] <TimToady> we will probably need to work out the details of that someday...

[23:05] <grondilu> r: say reduce {$^a && $^b}, 0, 1 ** *

[23:05] <camelia> rakudo e9e99b: OUTPUT«0␤»

[23:16] <TimToady> maybe we need to do it with a Y combinator...

[23:21] <lizmat> r: use MONKEY_TYPING; augment class Any { method nth ($n=1) { my $seen=0; self.grep({ ++$seen %% $n }) } }; (1..100).nth(10).say

[23:21] <camelia> rakudo e9e99b: OUTPUT«No such method 'nth' for invocant of type 'Range'␤  in block  at /tmp/4PlkF0OUW0:1␤␤»

[23:22] <lizmat> would expect this to work, apparently stuff in augmented classes does not inherit yet

[23:22] <lizmat> fwiw, why don't we have a method nth() like that in Any ?

[23:23] <lizmat> feels like a nice fit with the :nth modifier

[23:24] *** btyler joined
[23:25] <diakopter> just override postcircumfix [] :}

[23:26] <TimToady> why not just use postcircumfix []?

[23:26] <lizmat> this is returning *every* nth element from the list

[23:27] <lizmat> how would that work with postcircumfix ?  (/me is about to learn)

[23:27] <diakopter> oh

[23:27] <diakopter> heh

[23:27] <TimToady> we both misunderstood, which shows how clear "nth" is :)

[23:28] <lizmat> it was inspired by :nth

[23:28] <lizmat> and I didn't think that one up  :-)

[23:28] <TimToady> :nth doesn't do that

[23:29] <TimToady> say "thequickbrownfoxjumpsoverthelazydog" ~~ m:5th/./

[23:29] * lizmat reads up on nth again

[23:29] <TimToady> nr: say "thequickbrownfoxjumpsoverthelazydog" ~~ m:5th/./

[23:29] <camelia> rakudo e9e99b, niecza v24-88-g1f87209: OUTPUT«｢u｣␤␤»

[23:30] <lizmat> I guess my sub should be called "everynth" then

[23:31] <diakopter> nr: say "thequickbrownfoxjumpsoverthelazydog" ~~ m:999999999999999999999999999999999999999999999999999999th/<:LETTER>/

[23:31] <camelia> rakudo e9e99b, niecza v24-88-g1f87209: OUTPUT«False␤»

[23:31] <lizmat> :-)

[23:32] <lizmat> ok, I've learnt something again :-)

[23:32] <grondilu>  use MONKEY_TYPING; augment class Any { method nth ($n=1) { my $seen=0; 

[23:32] <lizmat> I'll sleep on it

[23:32] <grondilu> oop

[23:32] <lizmat> gnight, #perl6, sleep&

[23:33] <TimToady> ('aa'...'zz').pairs.map({ .value if .key %% 5 })[^10].say

[23:33] *** _jaldhar joined
[23:33] <TimToady> r: ('aa'...'zz').pairs.map({ .value if .key %% 5 })[^10].say

[23:33] <camelia> rakudo e9e99b: OUTPUT«aa af ak ap au az be bj bo bt␤»

[23:34] <grondilu> r: ('aa'...'zz').grep({ ++(state $) %% 5 })[^10].say

[23:34] <camelia> rakudo e9e99b: OUTPUT«===SORRY!=== Error while compiling /tmp/B6pQTU0gFF␤Unsupported use of $) variable; in Perl 6 please use $*EGID␤at /tmp/B6pQTU0gFF:1␤------> ('aa'...'zz').grep({ ++(state $)⏏ %% 5 })[^10].say␤»

[23:35] <grondilu> r: ('aa'...'zz').grep({ ++(state $ ) %% 5 })[^10].say

[23:35] <camelia> rakudo e9e99b: OUTPUT«ae aj ao at ay bd bi bn bs bx␤»

[23:35] <grondilu> r: ('aa'...'zz').grep({ (state $ )++ %% 5 })[^10].say

[23:35] *** btyler left
[23:35] <camelia> rakudo e9e99b: OUTPUT«aa af ak ap au az be bj bo bt␤»

[23:36] <TimToady> r: ('aa'...'zz').pairs.map(-> $,$,$,$,$x { $x })[^10].say

[23:36] <camelia> rakudo e9e99b: OUTPUT«4 => "ae" 9 => "aj" 14 => "ao" 19 => "at" 24 => "ay" 29 => "bd" 34 => "bi" 39 => "bn" 44 => "bs" 49 => "bx"␤»

[23:36] <TimToady> r: ('aa'...'zz').map(-> $,$,$,$,$x { $x })[^10].say

[23:36] <camelia> rakudo e9e99b: OUTPUT«ae aj ao at ay bd bi bn bs bx␤»

[23:36] <TimToady> r: ('aa'...'zzzzz').map(-> $,$,$,$,$x { $x })[^10].say

[23:36] <camelia> rakudo e9e99b: OUTPUT«ae aj ao at ay bd bi bn bs bx␤»

[23:37] * grondilu would have expected ('aa'...'zz').map(-> $,$,$,$,$x { $x })[^10].say to work :/

[23:37] <grondilu> oh

[23:37] <diakopter> r: 'alive'.say; my \googolplex = 10**10**100; say(googolplex.WHAT);

[23:37] <camelia> rakudo e9e99b: OUTPUT«alive␤(Num)␤»

[23:37] <grondilu> ohr: ('aa'...'zz').map(-> $x,$,$,$,$ { $x })[^10].say

[23:37] <grondilu> r: ('aa'...'zz').map(-> $x,$,$,$,$ { $x })[^10].say

[23:37] <camelia> rakudo e9e99b: OUTPUT«aa af ak ap au az be bj bo bt␤»

[23:43] <TimToady> r: ('aa'..'zzzzz' Zxx 0,0,0,0,1 xx *)[^10].say

[23:43] <camelia> rakudo e9e99b: OUTPUT«ae af ag ah ai aj ak al am an␤»

[23:44] *** mtk left
[23:46] <TimToady> r: ('aa'..'zzzzz' Zxx (0,0,0,0,1) xx *)[^10].say

[23:46] <camelia> rakudo e9e99b: OUTPUT«ae aj ao at ay bd bi bn bs bx␤»

[23:47] <TimToady> r: (0,0,0,0,1 XRxx 'aa'..'zzzzz')[^10].say

[23:47] <camelia> rakudo e9e99b: OUTPUT«(timeout)»

[23:47] <TimToady> n: (0,0,0,0,1 XRxx 'aa'..'zzzzz')[^10].say

[23:47] <camelia> niecza v24-88-g1f87209: OUTPUT«         ␤»

[23:47] *** lue joined
[23:48] *** mtk joined
[23:48] <TimToady> n: (0,0,0,0,1 ZRxx 'aa'..'zzzzz')[^10].say

[23:48] <camelia> niecza v24-88-g1f87209: OUTPUT«    ae (Any) (Any) (Any) (Any) (Any)␤»

[23:49] <TimToady> say what?

[23:49] <TimToady> oh, ^10

[23:49] <TimToady> r: (0,0,0,0,1 ZRxx 'aa'..'zzzzz')[^10].say

[23:49] <camelia> rakudo e9e99b: OUTPUT«ae␤»

[23:49] <TimToady> niecza doesn't do ranges off the end of subscripts yet

[23:50] * TimToady is guessing

[23:50] <TimToady> r: (0,0,0,0,1 XRxx 'aa'..'zz')[^10].say

[23:50] <camelia> rakudo e9e99b: OUTPUT«aa ab ac ad ae af ag ah ai aj␤»

[23:50] <TimToady> r: (0,0,0,0,1 XRxx ('aa'...'zz'))[^10].say

[23:51] <camelia> rakudo e9e99b: OUTPUT«aa ab ac ad ae af ag ah ai aj␤»

[23:51] *** _jaldhar left
[23:51] *** _jaldhar joined
[23:51] <TimToady> r: say 0 Rxx "aa'

[23:51] <camelia> rakudo e9e99b: OUTPUT«===SORRY!=== Error while compiling /tmp/qJ_tnXh_6L␤Unable to parse expression in double quotes; couldn't find final '"'␤at /tmp/qJ_tnXh_6L:1␤------> say 0 Rxx "aa'⏏<EOL>␤    expecting any of:␤        postfix␤        infix stoppe…

[23:51] <TimToady> r: say 0 Rxx "aa"

[23:51] <camelia> rakudo e9e99b: OUTPUT«␤»

[23:52] <TimToady> r: say 0 XRxx "aa"

[23:52] <camelia> rakudo e9e99b: OUTPUT«␤»

[23:52] <TimToady> r: say 0 XRxx "aa".."zz"

[23:52] <camelia> rakudo e9e99b: OUTPUT«␤»

[23:52] <TimToady> r: say 1 XRxx "aa".."zz"

[23:52] <camelia> rakudo e9e99b: OUTPUT«aa ab ac ad ae af ag ah ai aj ak al am an ao ap aq ar as at au av aw ax ay az ba bb bc bd be bf bg bh bi bj bk bl bm bn bo bp bq br bs bt bu bv bw bx by bz ca cb cc cd ce cf cg ch ci cj ck cl cm cn co cp cq cr cs ct cu cv cw cx cy cz da db dc dd de df dg dh di dj d…

[23:52] <TimToady> r: say 0,1 XRxx "aa".."zz"

[23:52] <camelia> rakudo e9e99b: OUTPUT«aa ab ac ad ae af ag ah ai aj ak al am an ao ap aq ar as at au av aw ax ay az ba bb bc bd be bf bg bh bi bj bk bl bm bn bo bp bq br bs bt bu bv bw bx by bz ca cb cc cd ce cf cg ch ci cj ck cl cm cn co cp cq cr cs ct cu cv cw cx cy cz da db dc dd de df dg dh di dj d…

[23:53] <TimToady> r: say "aa".."zz" Xxx 0,1

[23:53] <camelia> rakudo e9e99b: OUTPUT«aa ab ac ad ae af ag ah ai aj ak al am an ao ap aq ar as at au av aw ax ay az ba bb bc bd be bf bg bh bi bj bk bl bm bn bo bp bq br bs bt bu bv bw bx by bz ca cb cc cd ce cf cg ch ci cj ck cl cm cn co cp cq cr cs ct cu cv cw cx cy cz da db dc dd de df dg dh di dj d…

[23:53] <TimToady> r: say ("aa"..."zz") Xxx 0,1

[23:53] <camelia> rakudo e9e99b: OUTPUT«aa ab ac ad ae af ag ah ai aj ak al am an ao ap aq ar as at au av aw ax ay az ba bb bc bd be bf bg bh bi bj bk bl bm bn bo bp bq br bs bt bu bv bw bx by bz ca cb cc cd ce cf cg ch ci cj ck cl cm cn co cp cq cr cs ct cu cv cw cx cy cz da db dc dd de df dg dh di dj d…

[23:53] <TimToady> something is wacky there...

[23:54] <TimToady> r: say 1..10 X* 0,1

[23:54] <camelia> rakudo e9e99b: OUTPUT«0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10␤»

[23:54] <TimToady> oh, right

[23:55] <TimToady> nevermind, braino

[23:56] <grondilu> r: say 1..10 Z* ((0,1) xx *)

[23:56] <camelia> rakudo e9e99b: OUTPUT«0 2 0 4 0 6 0 8 0 10␤»

[23:56] <TimToady> yes, that works better :)

[23:56] <grondilu> r: say ("aa"..."zz") Zxx ((0,1) xx *)

[23:56] *** _jaldhar left
[23:56] <camelia> rakudo e9e99b: OUTPUT«ab ad af ah aj al an ap ar at av ax az bb bd bf bh bj bl bn bp br bt bv bx bz cb cd cf ch cj cl cn cp cr ct cv cx cz db dd df dh dj dl dn dp dr dt dv dx dz eb ed ef eh ej el en ep er et ev ex ez fb fd ff fh fj fl fn fp fr ft fv fx fz gb gd gf gh gj gl gn gp gr gt g…

[23:57] <TimToady> r: say 'aa'..'zz' Zxx (0,1) xx *

[23:57] <camelia> rakudo e9e99b: OUTPUT«ab ad af ah aj al an ap ar at av ax az bb bd bf bh bj bl bn bp br bt bv bx bz cb cd cf ch cj cl cn cp cr ct cv cx cz db dd df dh dj dl dn dp dr dt dv dx dz eb ed ef eh ej el en ep er et ev ex ez fb fd ff fh fj fl fn fp fr ft fv fx fz gb gd gf gh gj gl gn gp gr gt g…

[23:57] <TimToady> don't need all those parens

[23:58] <grondilu> indeed

[23:58] <TimToady> r: say 'aa'..'zz' Zxx <0 1> xx *

[23:58] <camelia> rakudo e9e99b: OUTPUT«ab ad af ah aj al an ap ar at av ax az bb bd bf bh bj bl bn bp br bt bv bx bz cb cd cf ch cj cl cn cp cr ct cv cx cz db dd df dh dj dl dn dp dr dt dv dx dz eb ed ef eh ej el en ep er et ev ex ez fb fd ff fh fj fl fn fp fr ft fv fx fz gb gd gf gh gj gl gn gp gr gt g…

[23:59] <TimToady> don't need any of 'em :)

[23:59] <TimToady> however, I'll bet it's numifying every single time

[23:59] <TimToady> (this is a spot that p5's allomorphic caching beats p6)

