[00:10] *** jac50 left
[00:15] *** raiph left
[00:24] *** bbkr__ joined
[00:30] *** dmol left
[00:31] *** DarthGandalf left
[00:31] *** wtw_ left
[00:31] *** ggoebel left
[00:31] *** _ilbot left
[00:31] *** yves_ left
[00:31] *** betterwo1ld left
[00:31] *** xenoterracide left
[00:31] *** jfried left
[00:31] *** avar left
[00:31] *** rom1504 left
[00:31] *** yoleaux left
[00:31] *** timotimo left
[00:31] *** dpk left
[00:31] *** mls left
[00:31] *** xinming left
[00:31] *** skids left
[00:31] *** takesako___ left
[00:31] *** moritz left
[00:31] *** xorp left
[00:31] *** lue left
[00:31] *** BinGOs left
[00:31] *** Exodist left
[00:31] *** jtpalmer left
[00:31] *** ruoso left
[00:31] *** kshannon left
[00:31] *** diakopter left
[00:31] *** Patterner left
[00:31] *** yx left
[00:31] *** jnthn left
[00:31] *** jlaire left
[00:31] *** awwaiid left
[00:31] *** bbkr_ left
[00:31] *** Rix left
[00:31] *** cooper left
[00:31] *** Timbus left
[00:31] *** jrockway left
[00:31] *** pmichaud left
[00:31] *** sorear left
[00:31] *** Tene left
[00:31] *** sjohnson left
[00:31] *** swarley left
[00:31] *** atrodo left
[00:31] *** nebuchadnezzar left
[00:31] *** _sri left
[00:31] *** mathw left
[00:31] *** lorn left
[00:31] *** flussence left
[00:31] *** mj41 left
[00:31] *** breinbaas left
[00:31] *** rjbs left
[00:31] *** broquaint left
[00:31] *** hoelzro left
[00:31] *** bakedb_ left
[00:31] *** Psyche^ is now known as Patterner

[00:32] *** nyuszika7h left
[00:32] *** awwaiid joined
[00:33] *** diakopter joined
[00:33] *** Timbus joined
[00:33] *** nebuchadnezzar joined
[00:34] *** daniel-s_ left
[00:34] *** sizz joined
[00:35] <FROGGS> std: use v5; TODO: { say 1 };

[00:35] <p6eval> std 86b102f: OUTPUT«ok 00:01 52m␤»

[00:40] <FROGGS> well, would be nice if it more DWIM, since we don't have to do exactly the same as the P5 module

[00:40] <FROGGS> *if it is

[01:05] *** cognominal joined
[01:10] *** cognominal left
[01:15] *** japhb_ left
[01:27] *** raiph joined
[01:27] *** Tene_ left
[01:27] *** Tene_ joined
[01:28] *** arcterus_ joined
[01:29] *** Tene_ is now known as Tene

[01:34] *** arcterus_ left
[01:36] *** frdmn joined
[01:37] *** Rix_ left
[01:37] *** Rix_ joined
[01:38] *** Rix_ is now known as Rix

[01:38] *** fgomez joined
[01:39] *** tgt left
[01:39] *** frdmn left
[01:39] *** frdmn joined
[01:39] *** cognominal joined
[01:39] *** arcterus left
[01:40] *** xantamoc joined
[01:40] *** fgomez left
[01:41] *** census left
[01:42] *** cognominal__ joined
[01:42] *** cognominal left
[01:43] *** FROGGS_ joined
[01:44] *** FROGGS left
[01:48] *** xantamoc left
[02:01] *** japhb_ joined
[02:03] *** WABD1LB joined
[02:03] *** daniel-s_ joined
[02:03] *** swarley-freenode joined
[02:03] *** lorn_ joined
[02:03] *** jnthn_ joined
[02:03] *** cooper_ joined
[02:03] *** xinming joined
[02:03] *** flussence joined
[02:03] *** DarthGandalf joined
[02:03] *** skids joined
[02:03] *** yx joined
[02:03] *** jlaire joined
[02:03] *** ggoebel joined
[02:03] *** _ilbot joined
[02:03] *** wtw_ joined
[02:03] *** yves_ joined
[02:03] *** betterwo1ld joined
[02:03] *** takesako___ joined
[02:03] *** jrockway joined
[02:03] *** pmichaud joined
[02:03] *** sorear joined
[02:03] *** moritz joined
[02:03] *** xorp joined
[02:03] *** mj41 joined
[02:03] *** atrodo joined
[02:03] *** lue joined
[02:03] *** BinGOs joined
[02:03] *** Exodist joined
[02:03] *** jtpalmer joined
[02:03] *** jfried joined
[02:03] *** avar joined
[02:03] *** breinbaas joined
[02:03] *** rjbs joined
[02:03] *** rom1504 joined
[02:03] *** _sri joined
[02:03] *** yoleaux joined
[02:03] *** timotimo joined
[02:03] *** dpk joined
[02:03] *** ruoso joined
[02:03] *** broquaint joined
[02:03] *** hoelzro joined
[02:03] *** bakedb_ joined
[02:03] *** kshannon joined
[02:03] *** mls joined
[02:03] *** [particle] joined
[02:03] *** chee joined
[02:03] *** szbalint joined
[02:03] *** ivan`` joined
[02:03] *** [Coke] joined
[02:03] *** felipe joined
[02:03] *** japhb joined
[02:03] *** rhr_ joined
[02:03] *** Juerd joined
[02:03] *** kcwu joined
[02:03] *** tomaw joined
[02:03] *** cotto joined
[02:03] *** scottp joined
[02:03] *** raiph left
[02:05] *** japhb left
[02:06] *** raiph joined
[02:07] *** PacoAir left
[02:10] *** nyuszika7h_ joined
[02:12] *** daniel-s_ left
[02:13] *** lichtkind_ joined
[02:15] *** jaldhar joined
[02:15] *** lichtkind left
[02:16] *** cognominal__ left
[02:16] *** cognominal__ joined
[02:17] *** colomon joined
[02:18] *** daniel-s_ joined
[02:38] *** leprevost joined
[02:47] *** sizz left
[02:50] *** leprevost left
[02:50] *** sizz joined
[02:52] *** orafu left
[02:52] *** orafu joined
[02:55] *** preflex left
[02:56] *** preflex_ joined
[02:57] *** preflex_ is now known as preflex

[03:07] *** snuffles_ left
[03:20] *** sizz left
[03:23] *** sizz joined
[03:30] *** fgomez joined
[03:34] <dalek> specs: 6d47309 | lue++ | S02-bits.pod:

[03:34] <dalek> specs: [S02] Minor typo fix

[03:34] <dalek> specs: review: https://github.com/perl6/specs/commit/6d47309e58

[03:36] *** Chillance left
[03:41] *** awwaiid left
[03:44] *** anant joined
[03:46] *** asogani joined
[03:49] *** cognominal__ left
[03:59] *** cognominal__ joined
[04:10] *** fgomez left
[04:10] *** fgomez joined
[04:17] *** anant left
[04:17] *** asogani left
[04:23] *** woosley joined
[04:30] *** cognominal__ left
[04:31] *** awwaiid joined
[05:10] *** rindolf joined
[05:10] *** kaare_ joined
[05:13] *** woosley left
[05:13] *** woosley joined
[05:17] *** woosley left
[05:17] *** drbean left
[05:18] *** drbean joined
[05:23] *** SamuraiJack joined
[05:31] *** dmol joined
[05:35] *** smalls joined
[05:37] *** smalls left
[05:47] *** kaare_ left
[05:59] *** drbean left
[06:04] *** drbean joined
[06:14] *** drbean left
[06:15] *** drbean joined
[06:20] *** drbean left
[06:21] *** drbean joined
[06:22] *** drbean left
[06:22] *** drbean joined
[06:26] *** swarley-freenode is now known as swarley

[06:34] *** atta_ left
[06:35] *** atta_ joined
[06:43] *** anant joined
[06:44] *** asogani joined
[06:49] *** atroxaper joined
[06:50] *** drbean left
[06:51] *** drbean joined
[06:58] *** Tene left
[06:58] *** djanatyn left
[06:59] *** domidumont joined
[07:00] *** atroxaper left
[07:01] *** atroxaper joined
[07:07] *** SamuraiJack left
[07:07] *** rindolf left
[07:08] *** rindolf joined
[07:14] *** domidumont left
[07:14] *** domidumont joined
[07:16] *** myk267 joined
[07:22] *** rindolf left
[07:23] *** drbean left
[07:26] <moritz> labster: I think the right solution is to stat everything, but also provide some low-level API that just does readdir, without stat

[07:28] *** rindolf joined
[07:35] *** lizmat joined
[07:40] <labster> moritz: sounds reasonable

[07:41] *** hrbkid joined
[07:41] <moritz> and good morning everybody :-)

[07:43] *** FROGGS_ is now known as FROGGS

[07:43] <FROGGS> morning

[07:44] *** rindolf left
[07:44] *** anant left
[07:44] *** rindolf joined
[07:45] *** asogani left
[07:45] <labster> morning *technically AM here*

[07:46] <FROGGS> std: SKIP: { say 1 }

[07:46] <p6eval> std 86b102f: OUTPUT«ok 00:00 42m␤»

[07:46] <FROGGS> we can haz labels?

[07:47] <lizmat> NYI afaik, and good morning!

[07:48] <FROGGS> that doesn't matter (for me right now)

[07:48] <labster> rn: label: say "alive"

[07:48] <p6eval> rakudo 23847e: OUTPUT«[31m===[0mSORRY![31m===[0m␤Two terms in a row␤at /tmp/Py0vgajrP_:1␤------> [32mlabel[33m⏏[31m: say "alive"[0m␤    expecting any of:␤        argument list␤        postfix␤        infix stopper␤        infix or meta-infix␤        statement end␤        stateme…

[07:48] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«alive␤»

[07:50] <labster> Maybe even "readdir" for the bare list of file names.  That's not yet taken.

[07:54] *** hrbkid left
[07:55] *** hrbkid joined
[07:55] <FROGGS> lizmat: my problem is that when I 'use v5', tokens which are up the tree to statement_control:use can't be changed

[07:56] <FROGGS> like in v5, there is already an additional token label, which is used in token statement, but it ignores it and uses token statement from Perl6 instead

[07:57] <FROGGS> it is using the actions from v5 though

[07:57] <lizmat> FROGGS: I'm not quite sure I follow you

[07:57] <lizmat> but I'm about to be offline for the rest of today

[07:57] <FROGGS> k, np

[07:57] <lizmat> so, later!

[07:57] *** lizmat left
[08:00] *** rindolf left
[08:00] *** atroxaper left
[08:00] *** rindolf joined
[08:01] *** hrbkid left
[08:03] *** FROGGS left
[08:19] <dalek> perl6-examples: fcc2adb | grondilu++ | rosalind/dbpr-grondilu.pl:

[08:19] <dalek> perl6-examples: Create dbpr-grondilu.pl

[08:19] <dalek> perl6-examples: 

[08:19] <dalek> perl6-examples: (rosalind)  DBPR

[08:19] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/fcc2adb585

[08:28] *** anant joined
[08:29] *** arcterus joined
[08:30] *** asogani joined
[08:34] *** jnthn_ is now known as jnthn

[08:46] *** nyuszika7h_ is now known as nyuszika7h

[08:47] *** jac50 joined
[08:48] *** arcterus left
[08:54] <diakopter> .

[08:55] <moritz> :

[08:56] <jnthn> ∴

[09:02] <labster> ⠛

[09:10] *** FROGGS joined
[09:12] *** synopsebot joined
[09:12] <tadzik> so, yesterday lizmat mentioned S02:3920...

[09:12] <synopsebot> Link: http://perlcabal.org/syn/S02.html#line_3920

[09:12] <tadzik> purrfect

[09:12] <tadzik> and it's on Perl 6 :)

[09:17] *** woosley joined
[09:23] *** James_ joined
[09:23] *** James_ is now known as Guest90983

[09:24] <labster> $*OS isn't in S28, but $*KERNEL doesn't work.  change specs?

[09:25] <nwc10> jnthn: the usual amount of working on "my" machine.

[09:26] <jnthn> nwc10: Thanks. Now I'm back from vacation and teaching, it'll soon be goalpost moving time again :)

[09:27] *** jac50 left
[09:28] <tadzik> Timbus, y u make all Net::IRC::Bot methods private :|

[09:28] <masak> tadzik: where's the source to synopsebot? :)

[09:29] <masak> (forenoon, #perl6)

[09:29] <tadzik> masak: https://gist.github.com/tadzik/5325542 here :)

[09:29] <tadzik> I may submit it as a Net::IRC::Bot plugin

[09:30] *** dmol left
[09:30] <masak> tadzik++

[09:31] *** jrockway left
[09:35] <nwc10> jnthn: cool

[09:36] *** synopsebot left
[09:36] *** myk267 left
[09:37] *** FROGGS left
[09:41] *** synopsebot joined
[09:41] <tadzik> now running on MuEvent, and seems to work :)

[09:44] <jnthn> tadzik++

[09:44] <Timbus> i did what now

[09:45] <Timbus> i go to extreme effort to not expend any effort.

[09:46] *** synopsebot left
[09:47] <tadzik> Timbus: thing is, it's quite difficult to extend ::Bot

[09:47] <Timbus> i have tried to make it so you don't :v

[09:47] <tadzik> I wrote https://gist.github.com/tadzik/5325584

[09:47] <Timbus> ahh to alter the runloop

[09:47] <tadzik> but I needed to make .connect, .disconnect, .conn and .dispatch public in the original code to make it work

[09:49] <Timbus> that makes sense. I wasnt really thinking of modifying the bots loop. I was just going to tie in muevent when parrots IO uh.. worked

[09:49] *** atroxaper joined
[09:49] <Timbus> as in i was going to make it a permanent dependency

[09:49] *** FROGGS joined
[09:50] <FROGGS> jnthn: you may need to help me doing the Peril6 <-> Peril5 context switching right...

[09:50] <FROGGS> jnthn: changes to token statement of P5Grammar have no effect. it is using Perl6:Grammar+P5Actions for token which got hit before 'use v5'

[09:50] <FROGGS> S28:$*OS

[09:50] <FROGGS> S28:1

[09:50] <tadzik> oh, I brought it down, sorry ;)

[09:50] <FROGGS> awww

[09:51] <FROGGS> tadzik: can it search for a keyword?

[09:51] <tadzik> nope

[09:51] *** synopsebot joined
[09:51] <tadzik> it's this simple: https://gist.github.com/tadzik/5325542

[09:51] <tadzik> S28:1

[09:51] <synopsebot> Link: http://perlcabal.org/syn/S28.html#line_1

[09:51] <FROGGS> but you could implement that :o)

[09:51] <FROGGS> *cough*

[09:51] <tadzik> it's just so I don't have to go to irclogs every time someone mentions something

[09:52] <FROGGS> right

[09:52] <tadzik> I'll try to set it up on feather later today

[09:52] <labster> S0:0

[09:52] <synopsebot> Link: http://perlcabal.org/syn/S0.html#line_0

[09:52] <FROGGS> and my problem is that I usually have no idea where to search

[09:52] <FROGGS> S-1:1e4

[09:52] <FROGGS> S1:1e4

[09:52] <synopsebot> Link: http://perlcabal.org/syn/S1.html#line_1

[09:53] <labster> it matches \d, so S150000:123456 works

[09:53] <synopsebot> Link: http://perlcabal.org/syn/S150000.html#line_123456

[09:55] <labster> good night, all

[09:55] <FROGGS> wow, that bot feature is pretty compact

[09:55] <masak> 'night, labster 

[09:55] <FROGGS> gnight labster 

[09:55] *** labster left
[09:58] <Timbus> most irc bot features are very compact. most of the effort I ever put into irc bots was in the filtering and dispatch of events, and perl 6 basically does all of that for you

[10:09] *** xorp left
[10:16] *** xorp joined
[10:23] *** James_ joined
[10:24] *** James_ is now known as Guest48425

[10:28] *** Guest90983 left
[10:29] *** Guest48425 is now known as jac50

[10:42] *** mtk left
[10:47] *** mtk joined
[10:54] *** mtk left
[10:57] * masak dives back into t2 reviewing

[10:57] *** mtk joined
[11:04] <masak> 32 signups for p6cc2012. a question:

[11:04] <masak> if we leave aside how to increase the number of solutions sent in, how would I go about increasing the number of *signups* for p6cc2013?

[11:05] *** PacoAir joined
[11:05] <masak> taking into account that I essentially have from now until December to do it.

[11:06] <jnthn> masak: Given how long review takes, isn't increasing the number of reviewers maybe more hot-path? :)

[11:07] *** bbkr joined
[11:08] <bbkr> hi. is anyone working on SMTP protocol in P6? I'm considering it as a next module to code.

[11:09] <moritz> bbkr: not that I'm aware of

[11:09] <moritz> jnthn, masak: we could crowdsource the reviews

[11:09] <masak> jnthn: yes, sure. the length of the review process is annoying, but it's not a *problem* per se as long as it takes less than a year. and that wasn't my question at all. ;)

[11:09] <bbkr> nice

[11:10] <masak> if I crowdsource the reviews, I'd still like to do it within a closed invite-only community.

[11:10] <masak> I don't know why, I just consider that part of the fun of the contest :)

[11:11] <masak> maybe because I consider crowdsourced things as having much lower quality standards. there's no single person to take responsibility for quality and coherence.

[11:11] <masak> cf. Using Perl 6 book.

[11:11] <moritz> masak: well, you could still curate the suggested reviews into a cohesive whole

[11:12] <masak> yes. :)

[11:12] <masak> I can see a workable mechanism in there, for sure.

[11:12] <moritz> maybe "accept patches" would be a better term than "crowdsource"

[11:12] <masak> oh, I practically do that already.

[11:12] <masak> after the release of a review, that is.

[11:12] *** tgt joined
[11:13] <masak> usually, only the contestants bother enough to send patches. :)

[11:13] <masak> which also tells you something.

[11:14] <moritz> well, accepting patches afterwards doesn't help decreae the review times :-)

[11:15] <moritz> anyway, back to the original question: increasing the number of signups

[11:15] <moritz> I have a few ideas:

[11:15] <moritz> 1) offer one or two quite tasks that aren't algorithmically challenging

[11:16] <masak> ah. contest too hard? :)

[11:16] <masak> I got that a bit this year.

[11:16] <masak> surprised me.

[11:16] <moritz> 2) make it very, very clear that submissions for only a subset of the problems are totally acceptable

[11:16] <masak> aye.

[11:16] <masak> that's a good idea.

[11:16] <masak> emphasize the -Ofun bit of it.

[11:16] <moritz> well, if I'd operated under the premise "either I solve them all, or don't participate", I wouldn't have participated

[11:16] <moritz> right

[11:17] <moritz> I don't complain about too hard; if I had had more time, they would have been all doable

[11:17] <moritz> but I can totally see how it might deter others

[11:18] <masak> it's funny the way I pick tasks -- I basically mull over them for *months*, and somehow I end up with five for which I feel that "yes, that's a p6cc task".

[11:18] <masak> not always perfect. for example t5 this year was kind of a weak one.

[11:18] <moritz> which one was t5?

[11:19] <moritz> ah, bin packing

[11:19] <masak> distribute weights in bags.

[11:19] <masak> but I absolutely *love* t1, t2, t4 and the solutions I got for them. :)

[11:20] <moritz> I found t3 to be fun too

[11:20] <masak> yes. small and fun, indeed.

[11:20] <masak> likewise, t2 (sums of cubes), t4 (hex slide), and t5 (planar trees) last year were lots of fun.

[11:21] <masak> they somehow straddle the puzzle worlds and the slightly mathematical/algorithmic.

[11:22] <masak> in the 2010 edition, p4 (pick pairs of stones) was like that. oh, how I enjoyed that. :D

[11:23] *** James_ joined
[11:23] * moritz feels that 80% of his twitter activity is retweeting stuff from masak++ and Su-Shee++

[11:24] <moritz> which is kinda silly, because everybody who follows me should just follow them too

[11:24] *** James_ is now known as Guest33348

[11:27] *** jac50 left
[11:28] <masak> not silly. at any given moment, I bet there are lots who should but don't.

[11:29] <masak> you're thinking about it like a static thing, when it's really a dynamic thing. :)

[11:29] *** dmol joined
[11:32] <masak> hm. emphasizing that submissions for only a subset are acceptable is good. in some sense it's hard though to broadcast both that message and "this is a contest! may the best one win!"

[11:34] <moritz> maybe have two prices; one "jury price" for the "best" contestant, and one random-ish price for everybody has submitted at least one accepted solution

[11:35] <masak> hm.

[11:36] <masak> or for some other kind of best effort than just submitting all five excellently.

[11:38] <moritz> right

[11:42] <masak> [Coke]++ # putting Lingua::EN::Syllable on modules.perl6.org

[11:51] <masak> [Coke]: heh, I was gonna point out a bug in the module but your already fixed it in https://github.com/coke/p6-lingua-en-syllable/commit/daef6462b9981f9a17b5bb85e83f445d23b17ef3 :)

[12:15] <GlitchMr> Is it even possible to determine number of syllables in English?

[12:16] <arnsholt> Not in the most general case, I suspect

[12:17] <arnsholt> You can probably make a pretty good job of it (especially if you manually segment a lot of words and train a statistical model), but some words are just gonna be weird

[12:17] <GlitchMr> I know that in Russian, you can +m:g:i/<[АЕЁИОУЭЮЯ]>/

[12:17] <GlitchMr> But English is strange with its all special cases

[12:18] <arnsholt> masak, moritz: Another option might be a grand prize as before for the best overall, and five smaller ones for excellence in each subtask

[12:18] <arnsholt> GlitchMr: Russian doesn't have any diphtongs?

[12:19] <masak> arnsholt: yes, I can see that working. then people would be motivated to excel on a single task.

[12:19] *** woosley left
[12:20] <masak> GlitchMr: "Is it even possible"? yes. the problem takes an input and gives an output.

[12:20] <masak> there are no side effects :)

[12:20] <masak> it's eminently computable in, I strongly suspect, linear time on the length of the string.

[12:20] <GlitchMr> In t2, I did +m:i/<[aeiouy]>+/, but it's very likely it's simply wrong

[12:20] <GlitchMr> But mostly appears to work

[12:21] <GlitchMr> +m:i:g*

[12:21] <masak> it's such a simplistic solution that I'd be tempted to call it "wrong", yes.

[12:21] <masak> "feel" has 1 syllable, not 2.

[12:21] <GlitchMr> masak, have you noticed + here?

[12:21] <arnsholt> But "liar" has two =)

[12:21] <GlitchMr> lolyeah

[12:22] <masak> "beautiful" has 3 syllables, not 5.

[12:22] <arnsholt> And "file" has one

[12:22] <GlitchMr> "beautiful" is correctly checked by +m:i:g/<[aeiouy]>+/

[12:22] <GlitchMr> The + sign is important

[12:22] <masak> ah, yes.

[12:22] <masak> but "file" isn't.

[12:23] <GlitchMr> English is so annoying

[12:23] <arnsholt> English syllabification has two important points: 1) Is a vowel cluster a diphtong or two syllables? and 2) Is a vowel at the end silent or not?

[12:23] <masak> GlitchMr: though I concede that it's interesting that you as a Slavic-speaker chose to completely ignore the subtleties of English syllable-counting, just because it simple doesn't come up in Russian.

[12:23] *** James_ joined
[12:24] <masak> I'll probably work that into the review and the blog post somehow.

[12:24] <arnsholt> And a couple of other annoyances as well. Is y a vowel or a consonant? Sometimes unstressed vowels can be droppen

[12:24] <arnsholt> s/droppen/dropped/

[12:24] *** James_ is now known as Guest47344

[12:24] <masak> I was trying to come up with an example of 'y' being a consonant in a word where that matters for syllable counting.

[12:27] *** Guest33348 left
[12:28] <Juerd> It's not even clear if it's a consonant or a vowel in words like ahoy.

[12:29] <masak> right. or 'yes'.

[12:29] <GlitchMr> http://stackoverflow.com/questions/405161/detecting-syllables-in-a-word

[12:29] <GlitchMr> That sounds interesting

[12:29] <arnsholt> Consonant in both yes and ahoy, I'd say

[12:29] <masak> but in all the cases I can think of, the consonant-y 'y' stands next to a vowel. :)

[12:30] <masak> and so it might as well be counted as a vowel cluster.

[12:30] <arnsholt> Yeah, it's probably consonant next to a vowel but vowel between consonants

[12:30] <arnsholt> GlitchMr: Oh, yes. The top answer there is a good one

[12:30] <arnsholt> The TeX algorithm is very good

[12:31] * moritz avoided automatic syllable counting alltogether in his t2 solution

[12:31] <masak> GlitchMr: next time, consider being interested in the interesting problem during the contest :P

[12:32] <masak> I'm going on a Copenhagen excursion. will be back tonight and re-dive into t2.

[12:32] <moritz> masak: did you mean me?

[12:32] <arnsholt> OTOH, I think that algorithm optimises for not making false positives, so if you need -all- the syllable breaks it might not be the best option

[12:32] <masak> moritz: no, <GlitchMr> That sounds interesting

[12:32] <moritz> ok

[12:32] <masak> &

[12:33] <moritz> have the appropriate amount of Copenhagen!

[12:35] <GlitchMr> But when Russian is rather simple, the Polish isn't so simple (when letter "u" is involved)...

[12:37] <GlitchMr> Or rather, "au"/"eu"

[12:38] *** PacoAir left
[12:40] *** PacoAir joined
[12:45] <tadzik> ą and ę? :)

[12:46] <GlitchMr> No, I mean "nauka", but "laur".

[12:46] <GlitchMr> In "laur", "u" is spelled like "ł".

[12:47] <GlitchMr> Perhaps I simply don't understand the rule, but whatever.

[12:48] <tadzik> true

[12:54] <GlitchMr> But English is more complex than that

[12:55] *** snuffles joined
[13:03] *** synopsebot left
[13:08] *** dmol left
[13:23] *** SamuraiJack joined
[13:23] *** James_ joined
[13:24] *** James_ is now known as Guest89158

[13:26] *** asogani left
[13:27] *** anant left
[13:27] *** Guest47344 left
[13:34] *** spider-mario joined
[13:34] *** crab2313 joined
[13:37] *** gcole_ joined
[13:37] *** gcole left
[13:41] *** tgt left
[13:46] *** dmol joined
[13:48] *** cognominal joined
[14:10] *** tgt joined
[14:21] *** dmol left
[14:21] *** Guest89158 is now known as jac50

[14:21] <dalek> rakudo/nom: e489afc | tadzik++ | tools/build/NQP_REVISION:

[14:21] <dalek> rakudo/nom: Bump NQP_REVISION for bumped PARROT_REVISION

[14:21] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e489afc720

[14:22] <dalek> nqp: 716b35d | tadzik++ | tools/build/PARROT_REVISION:

[14:22] <dalek> nqp: Bump PARROT_REVISION for Socket fixes

[14:22] <dalek> nqp: review: https://github.com/perl6/nqp/commit/716b35de61

[14:22] <tadzik> my first commits since I-don't-remember :)

[14:23] *** tgt left
[14:23] *** Psyche^ joined
[14:24] *** James_ joined
[14:24] *** James_ is now known as Guest51127

[14:26] *** Patterner left
[14:26] *** Psyche^ is now known as Patterner

[14:27] <FROGGS> r: my $I-don't-remember = True

[14:27] <p6eval> rakudo 23847e:  ( no output )

[14:28] *** jac50 left
[14:28] *** Guest51127 is now known as jac50

[14:42] *** ilbot6 joined
[14:43] *** arlinius left
[14:45] *** BigBear joined
[14:46] *** xenoterracide_ is now known as xenoterracide

[14:46] *** xenoterracide left
[14:46] *** rindolf left
[14:49] <BigBear> Hi I am relatively new to perl and would like to write a little filter that takes a "csv" file and pretty prints it into a continuous stream of the format "$column_name:\n$column_value\n". Trying to read the very long "csv" line in excel is jsut to painful . 

[14:50] <BigBear> how do is etup the right hashes to achieve this using Text::CSV ?

[14:52] <moritz> BigBear: I guess you want to do it with Perl 5, not Perl 6. If that's true, you are sadly off-topic here

[14:52] <moritz> BigBear: try #perlhelp instead

[14:55] *** frdmn left
[14:56] *** tgt joined
[15:02] <BigBear> moritz: thanks. what was I thinking, sorry.

[15:02] <FROGGS> .ask jnthn: am I allowed to push that commit? https://gist.github.com/FROGGS/5fe2eb96e2515bf02a14

[15:02] <yoleaux> FROGGS: I'll pass your message to jnthn:.

[15:08] *** tgt left
[15:13] *** kaare_ joined
[15:17] *** Chillance joined
[15:17] <moritz> BigBear: no worries, happens to all of us at least once :-)

[15:20] *** tgt joined
[15:22] *** cognominal left
[15:24] *** James_ joined
[15:24] *** James_ is now known as Guest15110

[15:27] *** cognominal joined
[15:28] *** jac50 left
[15:29] *** tgt left
[15:49] *** frdmn joined
[15:59] *** crab2313 left
[16:05] *** cognominal left
[16:11] *** cognominal joined
[16:12] <arnsholt> "Mainly listed here to shut up the pitiful screams of the pod coverage tests. They keep me awake at night." Who said documentation can't be fun? =D

[16:16] *** census joined
[16:17] *** PacoAir left
[16:19] *** PacoAir joined
[16:22] *** berekuk joined
[16:24] *** James_ joined
[16:24] *** James_ is now known as Guest67239

[16:28] *** Guest15110 left
[16:32] <timotimo> oh, socket fixes eh? i like hearing that :)

[16:34] <japhb_> arnsholt, masak, moritz: I strongly agree with arnsholt's suggestion at http://irclog.perlgeek.de/perl6/2013-04-06#i_6672450 ... when reading the earlier part of the discussion, I was going to suggest that very thing.  I didn't sign up this year (or in the past) because I knew there was no chance I'd have time to do anything half-decent on all tasks, thus no chance to win, thus ... meh.  But a per-task prize would give someone like me a c

[16:34] <japhb_> hance to go "I'll put all of my limited tuits into a task or two, and try to do well that way."

[16:38] <japhb_> The one thing to note about that plan is that you may find a strong differential between the number of people submitting solutions to the easier tasks versus the hard ones ... but the solution to that is to *point it out* in the sign-up promo, along with the point that contestants may want to put more energy into a single hard task (where there will presumably be fewer rivals) than just doing all the easier ones (where there will be much 

[16:38] <japhb_> competition).

[16:38] <japhb_> A little brain hacking on your part, in other words. :-)

[16:42] *** stevan_ left
[16:42] *** stevan_ joined
[16:53] *** gcole_ left
[16:55] *** diakopter left
[16:56] *** pjcj left
[16:57] *** cognominal left
[17:00] *** pjcj joined
[17:01] *** gcole joined
[17:05] *** cognominal joined
[17:12] *** cognominal left
[17:22] *** cognominal joined
[17:24] *** James_ joined
[17:24] *** James_ is now known as Guest97956

[17:28] *** Guest67239 left
[17:28] <atroxaper> Is there war for make GUI in present implementation of Perl6?

[17:28] *** cognominal left
[17:35] <tadzik> there're Gtk programs written to run on niecza

[17:36] * tadzik opens https://github.com/sorear/niecza and frowns at github

[17:36] <tadzik> anyway, there's examples/ in that repo, and gtk programs inside

[17:38] <atroxaper> Thank you!

[17:38] <atroxaper> And i have one more strange question.

[17:39] <atroxaper> Why Rakudo based on Pattor 4.10 so far?

[17:41] *** FROGGS left
[17:43] *** atroxaper left
[17:43] *** atroxaper joined
[17:45] <dalek> v5: 4bcecb6 | (Tobias Leich)++ | lib/Perl6/P5Grammar.pm:

[17:45] <dalek> v5: disable Perl6s foreach token

[17:45] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/4bcecb6629

[17:45] <dalek> v5: 2ff3d0d | (Tobias Leich)++ | lib/Perl6/P5 (2 files):

[17:45] <dalek> v5: enable parsing of our-vars as loop variable

[17:45] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/2ff3d0dcdc

[17:45] <dalek> v5: b50d721 | (Tobias Leich)++ | / (6 files):

[17:45] <dalek> v5: renamed v5.pm to Perl5.pm and added V5DEBUG env var

[17:45] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/b50d721d54

[17:55] <japhb_> atroxaper, there were bugs in later Parrot releases for a while, but I believe NQP (and thus Rakudo) just bumped to a newer Parrot this morning.

[17:58] *** japhb_ is now known as japhb

[18:01] <dalek> v5: 79d389c | (Tobias Leich)++ | / (2 files):

[18:01] <dalek> v5: update "make test"-command and mention it in README

[18:01] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/79d389c920

[18:03] *** FROGGS joined
[18:05] <atroxaper> japhb_: oh. I see. Thanks! And how do you think, when will be official release of Perl? In which year? :)

[18:05] <atroxaper> I mean Perl6.

[18:06] <FROGGS> atroxaper: there are official releases already

[18:07] <atroxaper> Really?

[18:07] <FROGGS> every month

[18:08] <FROGGS> I guess what you really want is that rakudo gets called "Rakudo Perl 6.0.0"

[18:09] <atroxaper> May be)

[18:11] <atroxaper> Any way, I want to say Big big Thanks you guys! For your great work! Really)

[18:11] <dalek> v5: c08ebe5 | (Tobias Leich)++ | Makefile:

[18:11] <dalek> v5: increase verbosity-level for single test file runs

[18:11] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/c08ebe525d

[18:11] <FROGGS> Perl 6 is pretty awesome, yes

[18:11] <FROGGS> :o)

[18:14] <atroxaper> I started learn perl6 recently and i pretty like it! And Perl5 too as well.

[18:15] <atroxaper> Have a nice weekend!

[18:15] <FROGGS> you too

[18:23] *** atroxaper left
[18:24] *** James_ joined
[18:24] *** rindolf joined
[18:24] *** James_ is now known as Guest85463

[18:25] *** domidumont left
[18:26] *** arlinius joined
[18:28] *** frdmn left
[18:28] *** Guest97956 left
[18:29] *** gcole left
[18:29] *** gcole joined
[18:31] *** anant joined
[18:32] *** asogani joined
[18:32] *** Guest85463 is now known as jac50

[18:37] *** pmurias joined
[18:38] <pmurias> FROGGS: what's the problem with switching to perl6 using 'use v5'?

[18:38] *** cognominal joined
[18:39] <pmurias> FROGGS: I have seen the irc log, but I don't understand what you mean.

[18:40] <timotimo> anyone got an idea when nqp will get OS thread support?

[18:41] <tadzik> well, uh. I'm afraid "never"

[18:41] <tadzik> I'd love to be wrong

[18:44] <timotimo> i have no clue what's even involved

[18:54] *** asogani left
[18:54] *** anant left
[18:58] <nwc10> timotimo: It might be "never" on *OS* thread support, but I believe there's a fair chance of experiments soon on the JVM with threads. (As it's a mature thread implementation, so it's a racing certainty that bugs will be NQP's fault, not the VM's fault)

[18:58] *** berekuk left
[19:00] *** SamuraiJack_ joined
[19:00] *** SamuraiJack left
[19:04] <japhb> Auuuuggggghhh!  Adding debug prints to Panda::Builder.build() made it so Rakudo::Debugger installs just fine.

[19:05] * japhb is wearing his stabby face.

[19:05] <japhb> #$!^@#&()) Heisenbugs

[19:05] *** anant joined
[19:07] *** asogani joined
[19:23] *** anant left
[19:23] *** asogani left
[19:24] *** James_ joined
[19:25] *** James_ is now known as Guest83339

[19:28] *** jac50 left
[19:36] *** diakopter joined
[19:37] *** ChanServ sets mode: +o diakopter

[19:37] *** diakopter changes topic to: »ö« Welcome to Perl 6! | http://perl6.org/ | evalbot usage: 'perl6: say 3;' or rakudo:,  niecza:, std:, or /msg p6eval perl6: ... | irclog: http://irc.perl6.org/ | UTF-8 is our friend!

[19:37] *** diakopter sets mode: -o diakopter

[19:38] *** cognominal left
[19:45] *** rindolf left
[19:53] <lue> hello world o/

[19:54] *** labster joined
[19:57] *** cognominal joined
[20:01] *** SamuraiJack__ joined
[20:04] *** SamuraiJack_ left
[20:04] *** berekuk joined
[20:06] *** berekuk left
[20:07] *** SamuraiJack__ left
[20:10] <labster> good *, everyone

[20:10] *** kaare_ left
[20:17] *** cognominal left
[20:22] *** cognominal joined
[20:24] *** James_ joined
[20:25] *** James_ is now known as Guest4241

[20:25] *** census left
[20:28] *** Guest83339 left
[20:29] *** cognominal left
[20:29] <japhb> diakopter, what did you change about the topic, OOC?

[20:29] <lue> I think he remove the YAPC::NA talks bit at the very end. (May be wrong though)

[20:29] <lue> s/remove/removed/

[20:29] <diakopter> yes

[20:29] <japhb> Ah, OK

[20:32] *** Guest4241 is now known as jac50

[20:34] *** cognominal joined
[20:43] <tadzik> timotimo: nqp is not taught to be using Proxies when doing lexical lookups, or something

[20:44] <tadzik> which is what Parrot threads require to not screw up other threads' memory

[20:47] <timotimo> that doesn't sound terribly bad

[20:47] <timotimo> hm, wouldn't that cause immense slowdowns on all assignments on single-threaded nqp programs?

[20:47] <tadzik> apparently no

[20:47] <tadzik> nine++'s experiments showed no noticable slowdowns

[20:47] <tadzik> iirc

[20:49] *** cognominal left
[20:51] <tadzik> that was pir though

[20:53] *** dmol joined
[20:53] <japhb> OK, finally have a smoking gun -- when I'm in ~/git/rakudo/ and I run `panda install Rakudo::Debugger`, it fails.  When I'm in ~/git/panda/ and run the same command, it works.

[20:55] <tadzik> gah

[20:56] <tadzik> wtf

[20:56] <tadzik> what's the error message, missing Something.pm?

[20:56] *** cognominal joined
[20:59] <moritz> I've had the same thing too, months ago. Runing panda inside panda's source tree is unreliable

[21:00] <japhb> moritz, I'm having the opposite problem.  It's running it *outside* panda's source tree that is failing for me.  :-/

[21:01] <japhb> tadzik, give me a sec, I'll paste it when I get it again.

[21:02] *** japhb_ joined
[21:02] <japhb_> tadzik:

[21:02] <japhb_> ==> Fetching Rakudo::Debugger

[21:02] <japhb_> ==> Building Rakudo::Debugger

[21:02] <japhb_> resolve stage failed for Rakudo::Debugger: Could not find Perl6::BOOTSTRAP in any of: /home/geoff/git/rakudo/install/lib/parrot/5.2.0-devel/languages/perl6/site/lib, /home/geoff/git/rakudo/install/lib/parrot/5.2.0-devel/languages/perl6/vendor/lib, /home/geoff/git/rakudo/install/lib/parrot/5.2.0-devel/languages/perl6/lib, /home/geoff/.perl6/2013.03-49-g23847e9/lib, .

[21:03] * japhb_ is now instrumenting R::D's Build.pm to try to nail down exactly when that happens.

[21:04] <japhb_> Oh that's odd.  It loads the Build.pm, but doesn't call the Build.build() method.

[21:04] <japhb_> (when outside the panda source dir, I mean)

[21:04] <tadzik> uhh

[21:04] <tadzik> this is quite fragile, yes :/

[21:05] <tadzik> but I don't see why it'd fail that miserably

[21:06] *** dmol left
[21:07] *** pmurias left
[21:07] *** _jaldhar joined
[21:07] <lue> .oO(Did you update rakudo and not panda recently?)

[21:08] <japhb> OK, interesting. It will show output from a 'BEGIN say "..."' at both the top and the bottom of the Build.pm, but it fails before outputting anything from a 'say "..."' at the top of the mainline code.  In other words, it makes it through the compile, but doesn't make it to runtime.

[21:08] <japhb> WTH?!

[21:08] *** jaldhar left
[21:09] *** jac50 left
[21:09] <lue> r: my $::{'!@#$#@'}; # from S02

[21:09] <p6eval> rakudo e489af: OUTPUT«===SORRY!===␤ResizablePMCArray: index out of bounds!␤»

[21:10] <japhb> .ask jnthn Can you weigh in on the discussion starting at http://irclog.perlgeek.de/perl6/2013-04-06#i_6673025 ?  Pretty please with cherries on top?  :-)

[21:10] <yoleaux> japhb: I'll pass your message to jnthn.

[21:11] *** cognominal left
[21:11] *** cognominal joined
[21:11] *** dmol joined
[21:13] *** dmol left
[21:15] <japhb> lue, I update rakudo and panda at the same time most days -- I have a script that goes through all my public git checkouts and pulls everywhere, and then I have a script that saves the panda state, flattens and rebuilds rakudo, and then rebootstraps panda from the saved state.

[21:15] <lue> OK. I asked because the Perl6::BOOTSTRAP error felt like an outdated panda thing to me.

[21:16] *** berekuk joined
[21:18] *** berekuk left
[21:20] <japhb> lue, I'm more than open to ideas of possible causes at this point.  This bug is driving me nuts, and even though I have a workaround now, it's JUST WRONG AND MUST DIE BY FIRE.  *ahem*.  :-)

[21:20] *** cognominal left
[21:23] *** kshannon left
[21:23] *** kshannon joined
[21:24] <gtodd> do people love readline  or just put up with it ? :-)

[21:24] *** atta_ left
[21:25] <japhb> gtodd, way better than nothing ...?

[21:25] <lue> Are you sure your switch is set to the MORE MAGIC pos^U maybe your $PATH isn't updated or you haven't actually put compiled panda in ~/.perl6 (somehow)

[21:25] *** cognominal joined
[21:26] <japhb> I get annoyed when I finish building parrot, nqp, rakudo, panda, and all the modules on a new box, only to realize I forgot to start by installing libreadline-dev, and have to start all over again.  :-/

[21:27] <japhb> What would $PATH have to do with it, if panda is running from either location?

[21:28] <lue> maybe you're still running an older panda that's somehow able to use the newer compiled modules when in-tree ?

[21:28] * japhb grabs a pair of dikes and summarily removes the MORE MAGIC switch

[21:29] <japhb> ...

[21:29] <japhb> Um, hmmm.

[21:29] * japhb looks for panda in all the places

[21:30] *** dmol joined
[21:31] <lue> (`which panda` might be helpful if you haven't used it already)

[21:32] <japhb> lue: there are no pandas in odd places.  `which panda` is only unusual in that part of the path is a symlink.

[21:32] *** dmol left
[21:32] * japhb tries changing $PATH to not contain any paths with symlinks.

[21:34] <lue> .oO(I have my $PATH set to a symlinked ~/.perl6/bin (because changing a symlink feels less wrong to me than changing $PATH))

[21:34] *** dmol joined
[21:35] <japhb> lue: sadly, no change in behavior with using only absolute paths in $PATH

[21:36] <lue> I was thinking which panda would tell you if you were still symlinked to an old version in ~/.perl6 (unless you delete the old directory after update)

[21:37] *** dmol left
[21:38] <japhb> lue, no, ~/.perl6 only contains my stuff.  panda is installed into .../rakudo/install/lib/parrot/5.2.0-devel/languages/perl6/site{,/bin}/panda

[21:39] *** dmol joined
[21:39] * lue doesn't install stuff there, if that wasn't obvious already :)

[21:42] *** dmol left
[21:42] *** tgt joined
[21:45] *** dmol joined
[21:45] <japhb> CWD at BEGIN time in R::D's Build.pm is the same either way, so that's not different either.

[21:47] *** dmol left
[21:49] <japhb> lue, out of curiosity, have you tried recreating this problem?  (cd into your panda tree, run `panda install Rakudo::Debugger`, note success, cd into your rakudo tree, try running the R::D install again)?

[21:50] <lue> I don't have recent rakudo or panda (to top it all off I think I still have my forked panda installed), so I'm not sure my recreation would be very useful.

[21:51] * lue will still try in a moment though

[21:52] <japhb> If you manage to recreate it anyway, that's a useful data point.  ;-)

[21:55] <lue> in-tree: first line of output for the build step is ""load_bytecode" couldn't find file 'Perl6/Grammar.pbc'" but it's still going

[21:57] <timotimo> tadzik: these proxies, are they already available in nqp code or would one have to write PIR or a wrapper around them or something?

[21:57] <lue> I think I may have updated rakudo sometime ago and have neglected to update panda with it :/

[21:57] *** dmol joined
[21:58] <japhb> oops

[21:58] <japhb> Time to pull and reboostrap panda then.

[21:58] *** japhb_ left
[21:59] *** bruges_ joined
[22:00] <lue> .oO(or just reinstall my fork :P)

[22:00] *** bruges left
[22:00] * japhb now has a good idea under what circumstances his laptop is locking up, too -- appears to be when the screen tries to blank.  So screensaver death or video driver screen disable crash, most likely.  Sheesh.

[22:01] <japhb> lue, either way.  :-)

[22:02] <tadzik> timotimo: there may be something available in one of rurban++'s nqp branches

[22:04] <timotimo> :\

[22:04] <timotimo> starting to think i'm not the right person to do this

[22:04] *** dmol left
[22:06] *** spider-mario left
[22:12] <tadzik> not with that attitude :P

[22:13] *** BigBear left
[22:13] <tadzik> I have a feeling that everyone's waiting for JVM to Magically Fix This :)

[22:13] <timotimo> oracle better step up!

[22:13] <gtodd> japhb: yeah I know .. it's just that I used to have bad dreams about readline :) ...

[22:14] <lue> I'm still getting that first error. I'm not sure what's happening.

[22:16] <lue> timotimo: or icedtea, in my case :)

[22:30] *** raven joined
[22:30] *** raven left
[22:31] *** raven joined
[22:32] *** raven left
[22:33] *** ravenclaw joined
[22:36] <ravenclaw> regex question: I'm using rakudo and oddly enough .*? and (.*?) are not matching.  .*? is matching properly, but (.*?) is not.  Any particular reason why?

[22:37] <flussence> is that the entire regex? looks like it should work to me

[22:38] <ravenclaw> the full regex code is: <keyword>\:\(.*?\)\:.*?$

[22:40] <ravenclaw> That code is supposed to process something like, "keyword:arg1:arg2" without quotes.  I'm trying to tokenize the args and the colons, but it isn't matching properly.

[22:41] *** cognominal left
[22:41] *** cognominal__ joined
[22:42] *** dmol joined
[22:43] *** ravenclaw left
[22:44] <flussence> well, those backslashed chars are literal...

[22:45] <flussence> /<keyword> [':' .*?]*/ is probably closer to what you meant

[22:47] *** dmol left
[22:48] <flussence> r: our token word {\w+}; 'word:arg1:arg2' ~~ / ^ <keyword=.word> [ ':' <arg=.word> ]* $ /

[22:48] <p6eval> rakudo e489af:  ( no output )

[22:48] <flussence> r: our token word {\w+}; ('word:arg1:arg2' ~~ / ^ <keyword=.word> [ ':' <arg=.word> ]* $ /).gist.say

[22:48] <p6eval> rakudo e489af: OUTPUT«｢word:arg1:arg2｣␤ keyword => ｢word｣␤ arg => ｢arg1｣␤ arg => ｢arg2｣␤␤»

[22:49] <masak> sounds to me like ravenclaw might have trouble understanding just how little a (non-backtracked) frugal quantifier will match. that's just a guess, though, until seeing the actual code.

[22:50] <timotimo> masak: can you elaborate? would he be better off using <-[:]>+ instead?

[22:50] *** cognominal__ left
[22:51] <timotimo> you're saying the .*? will match one character, then no : will be found and it will backtrack and one at a time it'll add characters until there's a : after it?

[22:52] <masak> japhb: thanks for your p6cc feedback in the backlog. I read it and will keep it in mind for p6cc2013.

[22:52] <masak> timotimo: by default, .*? matches zero characters.

[22:52] <timotimo> oh, of course.

[22:52] <masak> timotimo: the shortest way to match "zero or more" is to match zero. :)

[22:53] <timotimo> i guess i was thinking of +

[22:54] <masak> as TimToady_++ points out in A05, + is kind of unnecessary :)

[22:54] <masak> (but it's still very common because it's a useful non-primitive primitive)

[22:54] <masak> it's unnecessary because, for any atom 'a', 'a+' equals 'aa*'

[22:56] <timotimo> and everything where 'a' in reality is a 50 characters big definition of some structure?

[22:56] <lue> .oO(But it is necessary! Why would you even type the same atom twice in a row when you don't have to?)

[22:56] <timotimo> "factor it out into a token or something"?

[22:56] <lue> s/even/ever/

[22:57] <masak> lue: you should take a look at the definition of "necessary" ;)

[22:58] <timotimo> to be honest, i am fond of +; i feel like i use it often enough to warrant not using ** 1.. instead

[22:58] <lue> .oO(necessary, adj: a feature that appeases a programmer's laziness or impatience (or hubris, rarely))

[22:59] <jnthn> .oO( oddly, removing + didn't lead to kleener code... )

[22:59] <yoleaux> 21:10Z <japhb> jnthn: Can you weigh in on the discussion starting at http://irclog.perlgeek.de/perl6/2013-04-06#i_6673025 ?  Pretty please with cherries on top?  :-)

[22:59] <flussence> a shorthand for "previous regex atom" might be nice to have, actually... though I can't think of any practical use for it other than making this hypothetical /aa*/ shorter

[22:59] <masak> timotimo: yes, that's the point. it's a "useful non-necessity".

[22:59] *** cognominal joined
[22:59] <timotimo> ah, okay

[23:00] <jnthn> japhb: While I know about Rakudo::Debugger itself, tadzik++ did the Panda build bits for it.

[23:00] <masak> timotimo: you might want to read the exact wording in A05, but the gist was something like "theoreticians care about orthogonality. practicioners care about ease of use and getting the job done."

[23:00] <timotimo> indeed, i've seen that

[23:01] <jnthn> japhb: I just had a Makefile that hoped the right things were in the path and didn't know much about installation :)

[23:01] *** dmol joined
[23:08] *** cognominal left
[23:09] <timotimo> what's the most sensible way to figure out what width the console has in perl6? i'd like to give perl6-debug knowledge of when to abbreviate a line

[23:10] *** berekuk joined
[23:11] *** gcole left
[23:12] *** gcole joined
[23:13] *** dmol left
[23:13] <jnthn> timotimo: Not sure there's a portable way

[23:14] <timotimo> OK

[23:16] * timotimo started golfing the code that causes perl6-debug to make the code fail

[23:16] *** cognominal joined
[23:18] *** Util left
[23:19] *** Util joined
[23:21] <jnthn> timotimo: Yeah, perl6-debug really shouldn't change semantics...

[23:23] <timotimo> oh, that's interesting too: + Uncaught Exception

[23:23] <timotimo> | No such method 'name' for invocant of type 'Backtrace::Frame'

[23:26] *** dmol joined
[23:26] <timotimo> i've got a short one for you

[23:27] <timotimo> http://paste.ee/p/CTTKm - there you go. outputs ok 1 - on perl6, outputs a warning about Any used in numeric context, not ok 1 - on perl6-debug

[23:28] <jnthn> timotimo: Please can you file that as a GitHub issue, so I don't lose/forget it?

[23:28] *** dmol left
[23:28] <timotimo> sure

[23:28] <timotimo> i'll gist it. but i think i can make it even more simple yet

[23:29] <timotimo> indeed. just a tiny bit less complex.

[23:30] *** dmol joined
[23:30] <timotimo> oh, i don't have to gist it, i can just put it into the issue directly

[23:32] <japhb> timotimo, Are you skilled with Perl 5?  If so, you could probably look at the Perl 5 modules that detect terminal size, such as Term::Size and Term::ReadKey

[23:33] *** dmol1 joined
[23:33] *** dmol left
[23:33] *** cognominal__ joined
[23:34] *** cognominal left
[23:36] <timotimo> japhb: i have no clue of perl5

[23:38] <labster> I kind of wish I there was a Str.empty method so I didn't have to write " eq '' ".  Even though it's the same number of characters

[23:39] *** cognominal__ left
[23:39] <labster> Maybe I should use ! "str".chars ?

[23:39] *** cognominal__ joined
[23:40] <timotimo> hm, so $str isn't good?

[23:40] <timotimo> r: say so "", so "0", so "False", so "  ";

[23:40] <p6eval> rakudo e489af: OUTPUT«FalseFalseTrueTrue␤»

[23:40] <timotimo> hm, okay.

[23:40] <masak> r: my $s = ""; unless $s { say "it's empty" }

[23:40] <p6eval> rakudo e489af: OUTPUT«it's empty␤»

[23:40] <masak> labster: ^

[23:40] <timotimo> r: my $s = "0"; unless $s { say "it's empty" }

[23:40] <p6eval> rakudo e489af: OUTPUT«it's empty␤»

[23:40] <japhb> timotimo, Perl 5 is just like Perl 6 -- only less butterfly and more velociraptor.  ;-)

[23:40] <timotimo> masak: ^

[23:41] <masak> r: my $s = "0"; unless $s.chars { say "it's empty" }

[23:41] <labster> r: say (0, -0, "0", "-0")».so

[23:41] <p6eval> rakudo e489af:  ( no output )

[23:41] <p6eval> rakudo e489af: OUTPUT«False False False True␤»

[23:42] <labster> japhb++

[23:42] <timotimo> masak: that seems better.

[23:48] *** cognominal__ left
[23:54] <japhb> jnthn, where would I look for the code that keeps Rakudo::Debugger from single-stepping into subs/methods defined in the setting?  Because I want to disable that.  ;-)

[23:54] *** cognominal__ joined
[23:55] <jnthn> japhb: There is no code to do that; the debugger works by instrumenting code with hooks as it compiles it, and the setting is already compiled.

[23:55] <japhb> Oh.

[23:55] <japhb> Dang.

[23:57] *** cognominal__ left
