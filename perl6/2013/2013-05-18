[00:10] *** Chillance left
[00:21] *** prevost_ joined
[00:21] *** prevost_ left
[00:22] *** jaldhar joined
[00:25] *** ajr_ left
[00:40] *** sdo left
[00:56] * [Coke] writes a code formatting checker in coldfusion, and looks forward to the day when he can do this sort of stuff with a perl6 grammar running on the jvm in eclipse.

[00:58] <timotimo> oh my, i didn't even think about interop with IDEs and such for when rakudo is on the jvm

[01:01] *** FROGGS left
[01:09] <[Coke]> Dude, I'm going to write eclipse plugins in perl6 so I can write coldfusion.

[01:09] <[Coke]> (though Ideally I will start writing my webapps in perl6)

[01:09] <timotimo> i think that's quite a ways off, though :(

[01:10] <diakopter> "The document is a draft."

[01:10] <yoleaux> 00:53Z <dpk> diakopter: ok, after some consideration, i've decided that, while the feature may well be useful, it doesn't fit well with yoleaux's general purpose and this particular task is best left to another bot, imo. thanks for the suggestion though!

[01:10] *** tgt left
[01:11] <timotimo> what feature was that?

[01:11] <diakopter> "adrift"?

[01:11] <diakopter> no clue

[01:11] <diakopter> "ajar"?

[01:11] <timotimo> a message from years ago?

[01:11] <diakopter> "The document is ajar"

[01:15] *** FROGGS joined
[01:15] <dpk> heh, "no clue"

[01:16] <dpk> diakopter, this one https://github.com/dpk/yoleaux/issues/8

[01:19] <timotimo> mhm

[01:20] <diakopter> typical pie-in-the-sky pipedreaming

[01:21] <diakopter> er, pipe-in-the-sky piedreaming

[01:21] <timotimo> rn: my KeyBag $a .= new; $a<Foo> = True; $a<Bar> = True; say $a<Foo>:exists; say $a<Barf>:exists;

[01:21] <camelia> rakudo 9c5650, niecza v24-51-g009f999: OUTPUT«True␤False␤»

[01:22] <timotimo> oh, yikes.

[01:23] <diakopter> ?

[01:24] <timotimo> rn: sub ret-mult() { my KeyBag $foo .= new; $foo<A> = True; return [(1, 2, 3, 4), $foo] }; my (@p, $f) = ret-mult(); say @p.perl; say $f.perl;

[01:24] <camelia> rakudo 9c5650: OUTPUT«Array.new([1, 2, 3, 4, KeyBag.new(("A" => Bool::True).hash)])␤Nil␤»

[01:24] <camelia> ..niecza v24-51-g009f999: OUTPUT«[[1, 2, 3, 4, KeyBag.new({"A" => Bool::True}.hash)]].list␤Any␤»

[01:24] <timotimo> that didn't work the way i intended it to :)

[01:24] <timotimo> rn: sub ret-mult() { my KeyBag $foo .= new; $foo<A> = True; return [(1, 2, 3, 4); $foo] }; my (@p, $f) = ret-mult(); say @p.perl; say $f.perl;

[01:24] <camelia> rakudo 9c5650: OUTPUT«Array.new([KeyBag.new(("A" => Bool::True).hash)])␤Nil␤»

[01:24] <camelia> ..niecza v24-51-g009f999: OUTPUT«[[KeyBag.new({"A" => Bool::True}.hash)]].list␤Any␤»

[01:25] <timotimo> rn: sub ret-mult() { my KeyBag $foo .= new; $foo<A> = True; return [(1, 2, 3, 4); $foo].lol }; my (@p, $f) = ret-mult(); say @p.perl; say $f.perl;

[01:25] <camelia> rakudo 9c5650: OUTPUT«Array.new(KeyBag.new(("A" => Bool::True).hash))␤Nil␤»

[01:25] <camelia> ..niecza v24-51-g009f999: OUTPUT«Unhandled exception: Unable to resolve method lol in type Array␤  at /tmp/6ZW9z8r0qj line 1 (ret-mult @ 7) ␤  at /tmp/6ZW9z8r0qj line 1 (mainline @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.settin…

[01:25] <timotimo> rn: sub ret-mult() { my KeyBag $foo .= new; $foo<A> = True; return [(1, 2, 3, 4), $foo].lol }; my (@p, $f) = ret-mult(); say @p.perl; say $f.perl;

[01:25] <camelia> rakudo 9c5650: OUTPUT«Array.new(1, 2, 3, 4, KeyBag.new(("A" => Bool::True).hash))␤Nil␤»

[01:25] <camelia> ..niecza v24-51-g009f999: OUTPUT«Unhandled exception: Unable to resolve method lol in type Array␤  at /tmp/HCD4eOuQT8 line 1 (ret-mult @ 7) ␤  at /tmp/HCD4eOuQT8 line 1 (mainline @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.settin…

[01:25] <timotimo> rn: sub ret-mult() { my KeyBag $foo .= new; $foo<A> = True; return ((1, 2, 3, 4), $foo).lol }; my (@p, $f) = ret-mult(); say @p.perl; say $f.perl;

[01:25] <camelia> rakudo 9c5650: OUTPUT«Array.new($(1, 2, 3, 4), KeyBag.new(("A" => Bool::True).hash))␤Nil␤»

[01:25] <camelia> ..niecza v24-51-g009f999: OUTPUT«Unhandled exception: Unable to resolve method lol in type Parcel␤  at /tmp/E_GHtaRweH line 1 (ret-mult @ 7) ␤  at /tmp/E_GHtaRweH line 1 (mainline @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setti…

[01:25] <timotimo> how do i multiple return?

[01:26] <diakopter> rw params?

[01:26] <diakopter> <-- very clueless today

[01:27] <timotimo> nah, i don't like rw params terribly much

[01:31] *** census left
[01:32] <timotimo> std: class A { method &.( $capture ) {...} }

[01:32] <camelia> std 9906f18: OUTPUT«Potential difficulties:␤  $capture is declared but not used at /tmp/RIS_hNcjc1 line 1:␤------> [32mclass A { method &.( [33m⏏[31m$capture ) {...} }[0m␤ok 00:00 44m␤»

[01:32] <timotimo> std: class A { method @.[ **@slice ] {...} }

[01:32] <camelia> std 9906f18: OUTPUT«Potential difficulties:␤  @slice is declared but not used at /tmp/cSRZz7PdNq line 1:␤------> [32mclass A { method @.[ **[33m⏏[31m@slice ] {...} }[0m␤ok 00:00 44m␤»

[01:32] <timotimo> wow, that's crazy concise.

[01:32] <timotimo> or ... weird

[01:32] <timotimo> dunno.

[01:34] *** japhb_ left
[01:38] *** PacoAir left
[01:45] <timotimo> (the secret to properly returning the two things was to use a $ sigil on the left side, fwiw.)

[01:47] <timotimo> clever niecza :D  -  Useless redeclaration of variable $_ (see  line 0)

[01:47] <timotimo> std: ␤␤␤␤␤␤ my $_ = 5; say $_;

[01:47] <camelia> std 9906f18: OUTPUT«Potential difficulties:␤  Useless redeclaration of variable $_ (see line 1) at /tmp/BRkCxpUrgQ line 1:␤------> [32mmy $_[33m⏏[31m = 5; say $_;[0m␤ok 00:00 42m␤»

[01:58] *** FROGGS_ joined
[01:59] *** kbenson left
[02:01] *** FROGGS left
[02:02] <timotimo> so, basically my (@foo, $bar) = some-function(); never makes sense, is that right?

[02:07] *** woosley1 joined
[02:27] <gtodd> yoleaux: .u ᑲᐦᑲᑭᐤ

[02:30] <gtodd> .u ᑲ

[02:30] <yoleaux> U+1472 CANADIAN SYLLABICS KA [Lo] (ᑲ)

[02:30] <gtodd> .u ᐦ

[02:30] <yoleaux> U+1426 CANADIAN SYLLABICS FINAL DOUBLE SHORT VERTICAL STROKES [Lo] (ᐦ)

[02:30] <timotimo> rn: my ($a, $b) = "A", "B"; for ^5 { ($a, $b) = [($a, $b), ($b, $a)].pick; say "$a, $b"; }

[02:30] <camelia> niecza v24-51-g009f999: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/lib/CORE.setting line 1355 (warn @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 266 (Mu.Str @ 15) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /tmp/9J4Z8DAefK line 1 (mainline @ …

[02:30] <camelia> ..rakudo 9c5650: OUTPUT«A, ␤, ␤, ␤, ␤, ␤»

[02:31] <gtodd> .u ᑲ ᑭ ᐤ

[02:31] <yoleaux> U+0020 SPACE [Zs] ( )

[02:31] <yoleaux> U+1424 CANADIAN SYLLABICS FINAL RING [Lo] (ᐤ)

[02:31] <yoleaux> U+146D CANADIAN SYLLABICS KI [Lo] (ᑭ)

[02:31] <timotimo> rn: my ($a, $b) = "A", "B"; for ^5 { ($a, $b) = (($a, $b), ($b, $a)).lol.pick; say "$a, $b"; }

[02:31] <camelia> niecza v24-51-g009f999: OUTPUT«Unhandled exception: Unable to resolve method lol in type Parcel␤  at /tmp/DOi_VcjvIx line 1 (mainline @ 9) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4332 (module-CORE @ 582) ␤  at /home…

[02:31] <camelia> ..rakudo 9c5650: OUTPUT«maximum recursion depth exceeded␤current instr.: 'print_exception' pc 102411 (src/gen/CORE.setting.pir:46279) (src/gen/CORE.setting:8905)␤called from Sub 'defined' pc 161856 (src/gen/CORE.setting.pir:70487) (src/gen/CORE.setting:720)␤called from Sub 'infinite' pc 2…

[02:31] <timotimo> r: say (1, 2, 3).^methods

[02:31] <camelia> rakudo 9c5650: OUTPUT«Parcel Capture elems item flat list lol at_pos postcircumfix:<[ ]> STORE FLATTENABLE_LIST FLATTENABLE_HASH fmt of Bool Numeric Str ACCEPTS gist perl DUMP␤»

[02:31] <gtodd> oops

[02:32] <gtodd> msg yoleaux

[02:32] <timotimo> (1, 2, 3, (1, 2, 3)).lol.perl.say

[02:32] <timotimo> r: (1, 2, 3, (1, 2, 3)).lol.perl.say

[02:32] <camelia> rakudo 9c5650: OUTPUT«LoL.new(1, 2, 3, $(1, 2, 3))␤»

[02:32] <timotimo> i don't get it.

[02:32] <timotimo> rn: (1, 2, 3, (1, 2, 3)).lol.perl.say

[02:32] <camelia> niecza v24-51-g009f999: OUTPUT«Unhandled exception: Unable to resolve method lol in type Parcel␤  at /tmp/NZfNWFofC1 line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4332 (module-CORE @ 582) ␤  at /home…

[02:32] <camelia> ..rakudo 9c5650: OUTPUT«LoL.new(1, 2, 3, $(1, 2, 3))␤»

[02:32] <timotimo> that would be it.

[02:33] <timotimo> n: (1, 2, 3, (1, 2, 3)).LoL.perl.say

[02:33] <camelia> niecza v24-51-g009f999: OUTPUT«Unhandled exception: Unable to resolve method LoL in type Parcel␤  at /tmp/gK9EE9aHO9 line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4332 (module-CORE @ 582) ␤  at /home…

[02:33] <timotimo> n: (1, 2, 3, (1, 2, 3)).tree.perl.say

[02:33] <camelia> niecza v24-51-g009f999: OUTPUT«Unhandled exception: Unable to resolve method tree in type Parcel␤  at /tmp/qcz6z8oejQ line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4331 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4332 (module-CORE @ 582) ␤  at /hom…

[02:33] <timotimo> huh.

[02:33] *** rking1 left
[02:36] *** prevost_ joined
[02:37] *** prevost_ left
[02:38] *** labster left
[02:38] *** labster joined
[02:38] *** prevost left
[02:56] *** prevost joined
[02:57] *** cognominal left
[02:57] *** cognominal joined
[03:04] *** preflex_ joined
[03:05] *** preflex left
[03:05] *** preflex_ is now known as preflex

[03:05] *** labster left
[03:05] *** labster joined
[03:08] <timotimo> http://rosettacode.org/wiki/Brownian_tree#Perl_6 - finally submitted.

[03:10] <timotimo> oh, perl 6 has already reached rank 9, behind Go by 7 entries

[03:12] <Timbus> say "time elapsed: ", (now - BEGIN { now })

[03:12] <Timbus> woah

[03:12] <Timbus> woah

[03:13] <timotimo> i thought the same thing when i saw that for the first time :D

[03:13] <timotimo> (got it from the advent calendar i believe)

[03:15] *** hlin_ left
[03:19] <timotimo> i could even have written BEGIN now instead

[03:21] *** hlin_ joined
[03:22] <TimToady> timotimo++

[03:23] <TimToady> however, we're actually in 7th place, ahead of Ruby

[03:23] <TimToady> by 9, and behind D by 7

[03:24] *** gdey left
[03:25] <TimToady> note that the page in question is more than a month out of date

[03:25] <timotimo> neato :)

[03:25] <timotimo> isn't there a report that gets updated often/automatically?

[03:25] <TimToady> if you actually run the Perl 6 entry, you'll get the current standings

[03:26] <TimToady> yes, there's a link to a more recent page produced by REXX

[03:27] <timotimo> oh, neat :)

[03:27] <timotimo> i was looking at that REXX output actually. or did i mislook?

[03:27] <TimToady> well, that's two weeks old already

[03:28] <timotimo> hm, shelling out to wget :\

[03:28] <TimToady> feel free to fix :)

[03:28] <timotimo> hm, what options are there?

[03:28] <TimToady> though I run it under niecza...

[03:29] <timotimo> HTTP::Easy perhaps?

[03:30] <timotimo> perl6 popularity.p6  59.64s user 0.46s system 83% cpu 1:12.39 total - oh my.

[03:34] <lue> .oO[ now - BEGIN now is one of those neat tricks that make you smile every time :) ]

[03:41] <TimToady> INIT now would make more sense, unless you really want to measure the time between compilation and running

[03:43] <timotimo> not sure which i want. for one, the complete run time is interesting for the problem, for the other, it might be more interesting to measure how long it takes once it's compiled.

[03:43] <timotimo> do modules have ENTER and LEAVE, or do only routines have that?

[03:44] <timotimo> r: ENTER say "foo"; LEAVE say "bar"; { ENTER say "in braces"; LEAVE say "out of braces" }; say "end of mainline";

[03:44] <camelia> rakudo 9c5650: OUTPUT«foo␤bar␤»

[03:44] <timotimo> r: ENTER say "foo"; LEAVE say "bar"; { ENTER say "in braces"; LEAVE say "out of braces" }(); say "end of mainline";

[03:44] <camelia> rakudo 9c5650: OUTPUT«foo␤bar␤»

[03:44] <timotimo> oh?

[03:45] <TimToady> looks like a bug to me

[03:45] <lue> r: ENTER say "foo"; LEAVE say "bar"; { ENTER say "in braces"; say "something in between"; LEAVE say "out of braces" }; say "end of mainline";

[03:45] <camelia> rakudo 9c5650: OUTPUT«foo␤bar␤»

[03:47] <timotimo> r: say "a"; { say "b" }; say "c";

[03:47] <camelia> rakudo 9c5650: OUTPUT«a␤b␤c␤»

[03:49] <lue> r: ENTER print "in"; LEAVE say "out"; print " and ";

[03:49] <camelia> rakudo 9c5650: OUTPUT«inout␤»

[03:49] <lue> r: LEAVE say "out"; print " and "; ENTER say "in"

[03:49] <camelia> rakudo 9c5650: OUTPUT«in␤out␤»

[03:51] *** dmol joined
[03:54] <timotimo> r: say q{ "foo }" bar };

[03:54] <camelia> rakudo 9c5650: OUTPUT«[31m===[0mSORRY![31m===[0m␤Two terms in a row␤at /tmp/3XeruwNTX9:1␤------> [32msay q{ "foo }[33m⏏[31m" bar };[0m␤    expecting any of:␤        postfix␤        infix stopper␤        infix or meta-infix␤        statement end␤        statement modifier␤       …

[03:55] <timotimo> thought so.

[03:56] <timotimo> anyway, it's way past bedtime for me once again

[03:56] <timotimo> good * #perl6

[03:56] <TimToady> dream of brownian motion :)

[03:57] * timotimo wobbles towards the bed

[04:17] *** raiph left
[04:25] *** Psyche^ joined
[04:28] *** rindolf joined
[04:28] *** Patterner left
[04:28] *** Psyche^ is now known as Patterner

[04:30] *** saxx left
[04:30] *** rking1 joined
[05:09] *** SamuraiJack joined
[05:33] *** rindolf left
[05:34] *** rindolf joined
[05:37] *** prevost left
[05:42] *** woosley1 left
[05:45] *** rindolf left
[05:45] *** stevan__ left
[05:46] *** gdey joined
[05:46] *** SamuraiJack left
[05:51] *** domidumont joined
[05:59] *** domidumont left
[06:00] *** domidumont joined
[06:02] *** rindolf joined
[06:14] *** dmol left
[06:15] *** kaare_ joined
[06:18] *** rindolf left
[06:18] *** rindolf joined
[06:23] *** adu joined
[06:26] *** lukas_ joined
[06:26] *** rindolf left
[06:27] *** lukas_ is now known as Guest51977

[06:27] *** rindolf joined
[06:33] *** Guest51977 left
[06:39] *** rindolf left
[06:39] *** rindolf joined
[06:45] *** kaare_ left
[06:50] *** gdey left
[06:55] *** rindolf left
[06:55] *** rindolf joined
[06:58] *** rindolf left
[06:58] *** rindolf joined
[07:03] *** gdey joined
[07:12] *** xinming left
[07:15] *** rindolf left
[07:15] *** xinming joined
[07:15] *** rindolf joined
[07:32] *** gdey left
[07:39] *** gdey joined
[08:03] *** sqirrel joined
[08:04] *** FROGGS_ is now known as FROGGS

[08:12] *** domidumont left
[08:19] *** labster left
[08:19] *** labster joined
[09:19] *** adu left
[09:23] <dalek> v5: b5ea707 | (Tobias Leich)++ | lib/Perl5.nqp:

[09:23] <dalek> v5: use Perl5::RegexGrammar/Actions

[09:23] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/b5ea707929

[09:23] <dalek> v5: 74866d9 | (Tobias Leich)++ | lib/Perl5/ (2 files):

[09:23] <dalek> v5: rename regex grammar/actions, and setup grep/map/sort grammar

[09:23] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/74866d95f8

[09:23] <dalek> v5: 97e0316 | (Tobias Leich)++ | / (3 files):

[09:23] <dalek> v5: support map, grep and sort

[09:23] <dalek> v5: 

[09:23] <dalek> v5: Supported is:

[09:23] <dalek> v5:   map BLOCK LIST, grep BLOCK LIST and sort BLOCK, LIST

[09:23] <dalek> v5:   sort LIST

[09:23] <dalek> v5: but not yet:

[09:23] <dalek> v5:   map EXPR, LIST, grep EXPR, LIST and sort SUBNAME LIST

[09:27] <GlitchMr> http://thedailywtf.com/Articles/Right_In_Front_of_You.aspx

[09:27] <GlitchMr> if $typec != 20&13&5&4 {}

[09:32] <lizmat> FROGGS++

[09:34] <FROGGS> :o)

[09:42] *** cognominal left
[09:42] *** cognominal joined
[09:54] *** domidumont joined
[10:07] <lizmat> hmmm… my fix for exists on typed hashes breaks a lot of other things (wizard's apprentice syndrome)

[10:09] <lizmat> moritz's proposed fix "multi method exists($?CLASS:D: Mu $key) { nextwith($key.WHICH) }", fails with https://gist.github.com/lizmat/5603951

[10:18] <jnthn> Should be ::?CLASS:D

[10:18] <jnthn> multi method exists(::?CLASS:D: Mu $key) { nextwith($key.WHICH) } or so.

[10:18] <dalek> panda: 02765c9 | Dagur++ | bootstrap.pl:

[10:18] <dalek> panda: call rm_rf only if directory doesn't exist

[10:18] <dalek> panda: review: https://github.com/tadzik/panda/commit/02765c9329

[10:18] <dalek> panda: 048dc67 | tadzik++ | bootstrap.pl:

[10:18] <dalek> panda: Merge pull request #45 from dagurval/patch-1

[10:18] <dalek> panda: 

[10:18] <dalek> panda: call rm_rf only if directory doesn't exist

[10:18] <dalek> panda: review: https://github.com/tadzik/panda/commit/048dc67db0

[10:20] <lizmat> jnthn: trying that now

[10:22] <masak> good postnoon, #perl6

[10:22] * masak gradually comes to life

[10:24] * lizmat greats the live part of masak

[10:24] <lizmat> *greets

[10:25] * lizmat is not quite alive either

[10:26] <lizmat> t/spec/S09-hashes/objecthash.rakudo (Wstat: 0 Tests: 31 Failed: 2)

[10:26] <lizmat>   Failed tests:  1, 5

[10:26] <lizmat>   TODO passed:   21

[10:27] <lizmat> seems this fixes one outstanding todo, but breaks something else, investigating

[10:28] <dalek> v5: eb379b1 | (Tobias Leich)++ | lib/Perl5/Grammar.nqp:

[10:28] <dalek> v5: make <=> and cmp work

[10:28] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/eb379b1d09

[10:29] <lizmat> r: class A {}; my $a=A.new; my %h{Any}; %h{$a}=1; say %h{$a}

[10:29] <camelia> rakudo 9c5650: OUTPUT«1␤»

[10:29] <lizmat> this fails now, returns with (Any)

[10:29] <FROGGS> tadzik: that commit title is a bit confusing :P

[10:31] <FROGGS> lizmat: maybe it does %h{$a}=1 too early?

[10:31] <lizmat> too early?  I think the order is ok

[10:31] <FROGGS> your local changes are in the setting or in the ast? setting I suppose

[10:32] <lizmat> src/core/Hash.pm

[10:32] <lizmat> which winds up in setting, yet

[10:32] <FROGGS> lizmat: maybe it assing Any after doing = 1

[10:32] <lizmat> *yes

[10:32] *** PacoAir joined
[10:32] <FROGGS> can you paste the diff?

[10:32] <FROGGS> assigns*

[10:33] <lizmat> my %h{Any} is for *creating* the typed hash

[10:33] <FROGGS> hmmm

[10:36] <lizmat> this is the diff "+        multi method exists(::?CLASS:D: Mu $key) { nextwith($key.WHICH) }" (in src/core/Hash)

[10:39] <jnthn> lizmat: at_key uses self.exists

[10:39] <jnthn> lizmat: However, it also passes $key.WHICH to it

[10:39] <lizmat> aha, so that is a double fix

[10:40] <lizmat> making and checking

[10:41] <lizmat> o.O { should have thought of that myself }

[10:42] <lizmat> btw: should that be a multi method or just a method?  seems to be only one candidate...

[10:47] <lizmat> jnthn: alas, no change

[10:48] <lizmat> jnthn: the calls to nqp::findmethod should still use $key_which, right?

[10:49] *** sqirrel left
[10:50] <jnthn> Thing so

[10:50] <jnthn> Hm, it's rather inefficient that we produce key.WHICH multiple times, and worse stringify it multiple times, in all of this.

[10:50] <jnthn> And the nextwith is kinda icky too

[10:51] <lizmat> well, I'll be glad to look at optimizing this when it works  :-)

[10:51] <lizmat> fwiw, it looks like it is storing it ok: $ mp6 -e 'class A {}; my $a=A.new; my %h{Any}; %h{$a}=1; say %h{$a}; say %h'

[10:51] <lizmat> (Any)

[10:51] <lizmat> (A.new() => 1).hash

[10:52] <jnthn> It'd be much faster if it was more like multi method exists(::?CLASS:D: Mu \key) { nqp::defined($!keys) ?? nqp::p6bool(nqp::existskey($!keys, key.WHICH)) !! False }

[10:52] <lizmat> trying that now

[10:55] <lizmat> why the multi?

[10:55] <lizmat> there's only one "exists" in that class, isn't there ?

[10:55] <jnthn> 'cus the code you gave me and told me didn't work had multi on it :P

[10:55] <lizmat> aha, ok: it compiles anyway

[10:56] <jnthn> Well, the thing is partly about whether you want folks in subclasses to be able to write multis.

[10:56] <lizmat> well, then we need that in more places, like Hash.new  :-)

[10:56] <jnthn> So the multi or not decision in a class is actually making an API decision, really.

[10:57] <lizmat> and a performance reason, I would guess, as multi's a more expensive?

[10:57] <lizmat> *are

[10:59] <jnthn> They are, though I think we can expect our compiler/optimization technology to evolve over time in that regard.

[10:59] <jnthn> It's already not automatically true for multi subs.

[11:00] <lizmat> alas: https://gist.github.com/lizmat/5604056

[11:00] <jnthn> *sigh*

[11:01] <jnthn> May need an nqp::unbox_s placed at some point. I forget how ObjAt actually works.

[11:02] <lizmat> +              ?? nqp::p6bool(nqp::existskey($!keys, nqp::unbox_s(key.WHICH)))   ??

[11:02] <jnthn> Yeah

[11:02] <lizmat> making and testing

[11:06] <lizmat> so basically the difference between a normal hash and a typed hash, is that the key is really the key.WHICH ?

[11:08] <lizmat> jnthn: same failures / same todo passed   :-(

[11:08] <jnthn> lizmat: Yes, but are you still calling .exists the same way in .at_key?

[11:10] <lizmat> the diff: https://gist.github.com/lizmat/5604078

[11:10] <lizmat> grrr… \key instead of key?

[11:11] <lizmat> making and testing

[11:11] <jnthn> self.exists(\key) wnats to be self.exists(key)

[11:11] <jnthn> But I am just wondering a little what EnumMap.at_key calls

[11:14] <jnthn> bah

[11:14] <jnthn> EnumMap.at_key calls nqp::existskey too

[11:14] <jnthn> uh, sorry

[11:14] <jnthn> calls .exists

[11:14] <lizmat> make: *** [CORE.setting.pbc] Segmentation fault: 11   *sigh*

[11:15] <jnthn> Congrats

[11:15] <lizmat> trying again once to make sure it wasn't a cosmic ray

[11:15] <jnthn> Anyway, EnumMap.at_key is calling .exists

[11:15] <jnthn> So it won't work out.

[11:16] <jnthn> We should probably change that.

[11:16] <lizmat> ah, so that's another double .WHICH applied, is what you mean

[11:18] <jnthn> Yeah

[11:18] <jnthn> Well, we can always do https://gist.github.com/jnthn/5604090 I guess

[11:18] *** Chillance joined
[11:18] <jnthn> Which should also be faster

[11:19] <lizmat> existskye ?  existskey you mean?

[11:20] <jnthn> sure, I'm not testing any of this :P

[11:20] <jnthn> Just hinting in a hopefully helpful direction :)

[11:20] <lizmat> hehe… I am  

[11:21] * jnthn is working on $other-task in parallel :)

[11:21] * lizmat appreciates any spare cycles she can get from jnthn

[11:26] <dalek> rakudo/jvm-support: a754582 | jonathan++ | src/vm/jvm/runtime/org/perl6/rakudo/Binder.java:

[11:26] <dalek> rakudo/jvm-support: Fix 'is rw'/'is parcel' binding.

[11:26] <dalek> rakudo/jvm-support: review: https://github.com/rakudo/rakudo/commit/a7545825de

[11:27] <lizmat> this seems to fix all test errors *and* fixes one todo

[11:27] <lizmat> jnthn: success!

[11:27] <jnthn> \o/

[11:27] <jnthn> lizmat++

[11:28] <lizmat> will create a pull request after a spectest run

[11:31] <masak> lizmat: I may have said this already, but it bears repeating: it's great to have you on the channel, doing stuff. I feel invigorated just seeing things happening, and I invariably like investigating/filing the issues you dig up.

[11:32] <lizmat> masak: fwiw, I feel invigorated myself as well, so that's a win-win !

[11:34] <masak> \o/

[11:35] <masak> your descent into the fray of the action reminds me of me back in 2008, when I filed dozens of rakudobugs each week.

[11:35] <masak> but you're attacking Perl 6 on the spec level, whereas I was doing it on the Rakudo level. brings different issues to the forefront.

[11:35] <lizmat> yes, I remember that, from a distance unfortunately  :-(

[11:35] <lizmat> hehe…  yes,

[11:36] <lizmat> so yesterday I said:   Why don't we have a prefix ~~ ?

[11:36] <lizmat> r: say ~~"a"

[11:36] <camelia> rakudo 9c5650: OUTPUT«a␤»

[11:36] <lizmat> r: say ~~1

[11:37] <camelia> rakudo 9c5650: OUTPUT«1␤»

[11:37] <lizmat> just stringifies it twice now, afaics

[11:37] <jnthn> I think STD warns on it also

[11:37] <lizmat> std: say ~~1

[11:37] <camelia> std 9906f18: OUTPUT«[31m===[0mSORRY![31m===[0m␤Expecting a term, but found either infix ~~ or redundant prefix ~␤  (to suppress this message, please use space between ~ ~) at /tmp/sNGqFXDkW6 line 1:␤------> [32msay ~~[33m⏏[31m1[0m␤Parse failed␤FAILED 00:00 41m␤»

[11:38] <lizmat> ah, that would have been useful

[11:38] <lizmat> my expectation was that it was the same as "$_ ~~ "a""

[11:39] <masak> hm!

[11:39] <lizmat> anyway, the warning would have been fine also…  :-)

[11:39] <masak> yes, I can see the usefulness of that.

[11:40] <masak> it's sort of an in-between form between the full infix:<~~> and a 'when' statement.

[11:40] <lizmat> I wanted to use it inside a grep

[11:42] <jnthn> Note that you can write .ACCEPTS(1) already

[11:42] <jnthn> grep already smart-matches though :)

[11:42] <lizmat> basically: $hash{ grep{ $_ ~~ $something }, $hash.keys }:p

[11:42] <lizmat> yes, but not the right way for me…  as I need the pairs

[11:42] <jnthn> Just write $hash{grep $something, $hash.keys}:P

[11:43] <jnthn> Or $hash.grep(*.key ~~ $something)

[11:43] <lizmat> ah, cool!

[11:44] * lizmat learned something again

[11:44] <jnthn> These things happen ;)

[11:44] <lizmat> a lot lately  :-)

[11:45] <lizmat> next problem (only a display issue, but a pain with debugging)

[11:45] <lizmat> r: my @a=([Any]); say @a

[11:45] <camelia> rakudo 9c5650: OUTPUT«use of uninitialized value of type Any in string context  in block  at /tmp/m_YpjrDiIm:1␤␤␤»

[11:46] <lizmat> I think that's the .gist

[11:47] <lizmat> if that's intentional, then that's ok...

[11:47] <jnthn> My immediate reaction is that it feels LTA.

[11:48] *** spider-mario joined
[11:48] <masak> r: my @a = [Any]; say @a; my @b = Any; say @b

[11:48] <camelia> rakudo 9c5650: OUTPUT«use of uninitialized value of type Any in string context  in block  at /tmp/0nUKvAytj1:1␤␤␤use of uninitialized value of type Any in string context  in block  at /tmp/0nUKvAytj1:1␤␤␤»

[11:49] <jnthn> I guess the question is if .gist on an array should recursively apply gist to the elements.

[11:49] <jnthn> I don't *immediately* see why not.

[11:49] <masak> right.

[11:51] <lizmat> ok, I'll see if I can fix that…  :-)

[11:51] <jnthn> Warning: arrays are much scarier than hashes ;-)

[11:52] <lizmat> hehe…  I don't scare that easy  :-)

[11:52] * masak .oO( laziness: the latent horror )

[11:52] <jnthn> ;)

[11:52] <lizmat> anyway, I now have a working model for module lookups with longname/from/auth & version

[11:53] <masak> \o/

[11:53] <jnthn> ooh!

[11:54] <lizmat> which should also support ranges and wildcards on auth and all of that

[11:55] <lizmat> on that thought and the sun starting to shine here, I'm going to do some cycling, so away for a few hours

[11:55] <jnthn> enjoy :)

[11:57] * masak heads to le grocery store

[11:58] * jnthn realizes it's trátttid

[11:58] <jnthn> eh, worreva

[12:05] *** SamuraiJack joined
[12:09] *** lukas_ joined
[12:09] *** lukas_ is now known as Guest41938

[12:31] <tadzik> FROGGS: hehe, indeed :)

[12:43] *** rindolf left
[12:43] *** rindolf joined
[12:54] *** tgt joined
[12:58] *** prevost joined
[13:03] *** stevan_ joined
[13:03] *** stevan_ left
[13:03] *** stevan_ joined
[13:22] *** colomon left
[13:27] <FROGGS> O.o

[13:27] <FROGGS> ahh, yes

[13:38] *** woosley1 joined
[13:40] <masak> lizmat: over here in southern Sweden, the sun has started to shine days ago... and it just won't stop :/

[13:41] <masak> (except at night. I meant in the daytime.)

[13:41] <FROGGS> it's raining here since yesterday :/

[13:41] <FROGGS> well, the sun is shining in the night too to be honest

[13:41] <masak> srsly, it's too hot now. and it's only mid-May.

[13:41] <FROGGS> Texas, we are coming \o/

[13:42] * masak kicks global warming on the shins

[13:43] <moritz> http://www.nntp.perl.org/group/perl.perl5.porters/2013/05/msg201940.html perl 5.18.0 released

[13:43] <yoleaux> 17 May 2013 22:26Z <lizmat> moritz: your solution worked, and indeed :delete has a similar issue

[13:44] <moritz> \o/

[13:45] <FROGGS> moritz: hehe, you can see my name in your post :P

[13:46] <FROGGS> hmmm, I know about 20% of the ppl

[13:47] <FROGGS> moritz: what was your contribution?

[13:52] *** Su-Shee joined
[13:52] <Su-Shee> hey folks. :)

[13:52] <jnthn> grrr...so darn hot.

[13:53] <masak> Su-Shee++! \o/

[13:59] <FROGGS> o/

[14:00] <masak> Su-Shee: thanks for writing that manifesto. it made me stop and reflect.

[14:01] <Su-Shee> masak: cost me three new grey hairs ;)

[14:03] <masak> I can imagine.

[14:04] <masak> I'm not even close to feeling like I understand gender issues, but I agree with Randall Munroe: it's hugely complicated.

[14:04] <Su-Shee> lots of exhausting discussions afterwards. with guys telling me I'm wrong. ;)

[14:04] <Su-Shee> masak: then our message didn't come across properly. :) we basically said "it's not complicated" :)

[14:05] <masak> I think it is, and always will be.

[14:05] <masak> I thought your message was more like "the current 'solution' isn't a solution".

[14:06] <masak> gender issues are complicated in the sense that they are life-complete.

[14:06] <masak> Su-Shee: do you get the impression that there is (roughly) a US-Europe split in attitudes on CoCs?

[14:07] <Su-Shee> masak: there's a lot of unsaid facepalm on our (perl women's) part.

[14:07] <Su-Shee> masak: A LOT

[14:07] <masak> ok :/

[14:07] <Su-Shee> masak: the entire discussion, the wording, the policy is totally alien to me

[14:08] <Su-Shee> masak: and what I get from eastern europe and russia: they're even more baffled. 

[14:09] <masak> Su-Shee: your attitude reminds me of my mom's. she's a successful businesswoman, and she can completely balk at the mere idea of some "women's conventions" or "women's networds". she says "I'm an entrepreneur. quit defining me as an entrepreneur-with-boobs-fancy-that."

[14:10] <masak> networks*

[14:11] <Su-Shee> masak: I absolutely support (and worked a lot) supporting things like "girl's day" and teaching underpriveliged girls and support them and give them any help... but we're talking about grown up, usally educated women here. I think I can reasonably expect a little more hands-on and reflection about own anxieties...

[14:12] <masak> yes, exactly.

[14:13] *** p5eval left
[14:13] <Su-Shee> masak: one argument goes "it's not for women like you"

[14:14] <Su-Shee> "like me" meaning something along the lines "of your temper" "your age" "you're already in the community".

[14:19] <diakopter> if you've ever seen Portlandia's satirical portrayal of the two women bookstore owners/operators, you'll have a glimpse of the hilarious/stereotypical perception of such perspectives... from Portland (in particular)

[14:22] <diakopter> it's also biting commentary; by absurd caricature, the logic of particularly myopic arguments is exposed bare for all it's worth

[14:23] <diakopter> (being an effective offshoot of Saturday Night Live, it's actually particularly balanced critique/comedy of quite a few different conflicting perspectives, like SNL itself)

[14:24] <Su-Shee> diakopter: I spent nearly three years living hardcore feminism "women only" style and did feminism and women's studies as one of my main subject in university.. I left when a certain absurdity started in the german discussion..

[14:24] <diakopter> ... the only perspective it explicitly mocks without being somewhat sympathetic is the perspective that it's not okay to laugh at such things

[14:24] <Su-Shee> diakopter: and I _mean_ hardcore feminism. the ultra leftist kind of. ;)

[14:25] <diakopter> sounds like you imply the kind that Americans combine with the name of german WWI/WWII national socialist party :?

[14:26] <diakopter> (in the *highest* ultimately pejorative sense)

[14:26] <Su-Shee> diakopter: haha. no, that luckily died with the end of the war. also, it's not considered "feminism" :)

[14:27] <Su-Shee> diakopter: I can take - and love - political jokes. :)

[14:27] <diakopter> :)

[14:27] <Su-Shee> diakopter: also, not the era was a different kind of radical feminism, it was more pointed to women themselves. 

[14:27] <Su-Shee> s/not/no/

[14:29] <diakopter> I just meant the almost cruelly negative twisting of the name feminism used to imply modern-day feminists are akin to members of said party

[14:29] <Su-Shee> I realized :)

[14:29] <Su-Shee> diakopter: it's a common expression here, actually. 

[14:30] <diakopter> s/almost//

[14:30] <diakopter> though really it's a pun

[14:31] <Su-Shee> diakopter: anyways. the signing perl women are very angry.

[14:31] <Su-Shee> diakopter: what I wrote is the harmless, toned down version.

[14:32] <diakopter> I was flabbergasted when I saw 1 thumbs-down on my comment on the 2nd post (on which they linked your writings) - which was just:  "(and there were several other women who signed it) (fyi)"

[14:32] <diakopter> because it wasn't directly stated, I was just clarifying...

[14:33] <diakopter> a completely factual comment, with no subjectivism or opinion.

[14:33] <diakopter> and yet it got a thumbs-down.

[14:33] <diakopter> *shakes head*

[14:35] <Su-Shee> diakopter: what leaves me completely baffled is basically that a group of women knowing "the scene" for many years and knowing others, too say "calm down, it's way less worse than you think it is" and that gets completely ignored by guys then telling us "but you're wrong" - "wtf?"

[14:35] <diakopter> well, as far as this year's yapc goes in particular, we have access to particularly direct law enforcement action if it comes to that

[14:36] <diakopter> crossing the line from free speech to slander and obscenity/abuse happens all too quickly

[14:36] <Su-Shee> diakopter: next I hear "it's not for you." (for whom is it then?) and even if it isn't for me anymore because "I made it" - why doesn't anybody even ASK us what we AFTER we made the experiences is required to make communities more welcome...

[14:41] <diakopter> Su-Shee: what is especially ironic is that feminists should feel very happy Austin is the chosen locale, since Austin has a very distinctive/rare lack of discrimination against women, in the area of allowing lack of shirts in public... and yet the sort of women who generally take advantage of the lack of city ordinance against female toplessness are definitely not the sort of women whose opinions they care about

[14:42] <Su-Shee> diakopter: haha, really? are we really talking austin, texas? :)

[14:42] <diakopter> yes.

[14:45] <Su-Shee> diakopter: I hear you poor organizing bloke sit right in the middle between all chairs of it.. very heroic. :)

[14:49] *** berekuk joined
[14:51] <timotimo> where do i look to find that online discussion? i thought perlmonks, but the feed on the front page is apparently not "a raging torrent of all posts ever"

[14:51] <diakopter> noooo you don't want to know

[14:51] <diakopter> seriously though, don't mention links here please

[14:52] <diakopter> I'll reply in privmsg

[14:52] <timotimo> ... all right

[14:52] <timotimo> is it that bad, yes?

[14:53] <masak> sorear: I can almost but not quite make out the ideas in http://www.math.uconn.edu/~kconrad/blurbs/galoistheory/tracenorm.pdf -- which makes it interesting to me. thank you.

[14:54] <diakopter> it's just that I think it crosses the line into off-topic. I mean, currently it's a meta-discussion, but linking the actual rage-smears can lead to violent/harmful/painful engagement of enemies

[14:55] <diakopter> [when people decide to get directly involved who weren't previously.. and there are much more appropriate locales for such things]

[14:56] <moritz> timotimo: it's really not worth reading, unless you want to headdesk several times

[14:56] <timotimo> er, okay. i'll gladly listen to multiple people wiser than me.

[14:57] <timotimo> (i was certainly not going to get involved. i know how ugly these discussions get and i know how little i know about feminism and discrimination and such to have a sensible opinion)

[14:57] *** woosley1 left
[14:57] <Su-Shee> facepalming and hair-pulling helps too...

[14:58] *** p5eval joined
[14:58] <diakopter> Su-Shee: well, I'm certainly not objective about it. I've made errors in communication, but thankfully I'm also the one who found the solution to the problem [that I also created].

[15:00] *** census joined
[15:00] <diakopter> [speaking of the practical logistics decision of dinner venue selection that sparked the irc exchanges]

[15:00] <Su-Shee> I feel the need to faceplam some more. ;))

[15:01] <census> hi su-shee!

[15:03] *** ajr joined
[15:03] *** ajr is now known as Guest20809

[15:06] <diakopter> Su-Shee: I think my big mistake was forgetting that I spent 22 years not far from Austin and so was familiar with its nature.. and assumed that the conference as a whole was therefore okay with [at least being near] Sixth Street's debauchery, since that's where several events were [anticipated to be] planned... but it turns out many people were unfamiliar with the nature of Sixth Street and Austin as a whole

[15:07] <Su-Shee> diakopter: you're hopefully not beating yourself up, are you?

[15:07] <diakopter> no no

[15:07] <Su-Shee> good.

[15:08] <census> diakopter: is that where south by southwest is?

[15:08] <diakopter> yes

[15:08] <census> it does not seem that crazy there but maybe i was not at the right part of the street when i visited ?

[15:08] <diakopter> and it's fine. it's far more tame than having tons of gigantic tech conferences in Las Vegas

[15:09] <census> conferences should be in vegas

[15:09] <Su-Shee> I'd draw a line before bunnies unless hugh hefner actually pays the entire perl conference. ;) 

[15:10] <dalek> nqp/rak-jvm-support: 99dbf54 | jnthn++ | src/vm/jvm/ (2 files):

[15:10] <dalek> nqp/rak-jvm-support: Start preparing to kill off getCodeRefs().

[15:10] <dalek> nqp/rak-jvm-support: 

[15:10] <dalek> nqp/rak-jvm-support: Will attempt to use annotations to convey this information instead.

[15:10] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/99dbf54128

[15:10] <dalek> nqp/rak-jvm-support: 43cd500 | jnthn++ | src/vm/jvm/QAST/Compiler.nqp:

[15:10] <dalek> nqp/rak-jvm-support: Start attaching into to go in annotations.

[15:10] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/43cd500b93

[15:10] <dalek> nqp/rak-jvm-support: 66f45f7 | jnthn++ | src/vm/jvm/runtime/org/perl6/nqp/ (2 files):

[15:10] <dalek> nqp/rak-jvm-support: Add and start writing out code ref annotation.

[15:10] <dalek> nqp/rak-jvm-support: 

[15:10] <dalek> nqp/rak-jvm-support: Not yet being used for anything.

[15:10] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/66f45f7766

[15:10] <diakopter> "it's" above refers to census' reference to SxSW

[15:12] *** dmol joined
[15:12] <diakopter> in fact, in the highly "conservative" crowds in which I was raised, Austin was derided/mocked as that bastion of liberals/feminists

[15:13] <diakopter> (not with huge gravity, just with lighthearted ribbing and scoffing)

[15:14] <diakopter> Su-Shee: I doubt TPF would accept such a donation. ;)

[15:15] <Su-Shee> diakopter: I'd take it. Without even thinking a second :) I wouldn't wear bunny ears though. ;)

[15:16] <census> well austin is "keep austin weird" right?

[15:17] <diakopter> yeah, but trying to be interestingly different is a very common sentiment lots of places

[15:19] <masak> Austin was marked on a North Korea map of nuclear missile targets in some photos released from NK. The Daily Show's John Stewart jokingly asked whether NK was deliberately trying to win the rest of Texas over.

[15:19] <diakopter> hee hee

[15:21] <diakopter> I mean, yes, of course it's completely unfair that the 6th street debauchery gets lumped with the intellectual tendencies of the university..

[15:21] <census> how do they get lumped?

[15:22] <diakopter> just the nature of generalizations and labels to assume consistency and ignore diversity and conflict

[15:23] <diakopter> (and to assume causality of proximity)

[15:23] <diakopter> s/of/from/

[15:24] <masak> "Some members of a group say/do X, while some other members say/do not-X. Hypocrites!"

[15:24] <diakopter> exactly :D

[15:25] <Su-Shee> we should all get back to bickering of perl 5 versus perl 6 again. much more relaxing ;)

[15:25] <census> oh.  are you at the university?

[15:25] <census> su-shee: that is my favorite topic!!

[15:25] <masak> census: mine, too! :)

[15:25] <census> more like #perl versus #perl6

[15:25] <census> #perl6 rules!

[15:25] <masak> but I don't see so much "versus", to be honest.

[15:25] <census> masakism rules!

[15:25] <census> oh no it is versus

[15:25] <diakopter> census: heh no, I went to that university's self-assumed "rival" - the other ginormous land-grant university system in Texas

[15:25] <census> #perl6 is the best!

[15:25] <masak> it's "Perl 5 *and* Perl 6". together, they rock.

[15:26] <census> texas a&m?

[15:26] <census> no #perl is mean :(

[15:26] <diakopter> yah

[15:26] <census> but su-shee is cool

[15:26] <diakopter> census: you're mean for overgeneralizing #perl :)

[15:26] <census> oh i am

[15:27] <census> i love to stereotype and generalize

[15:27] <census> i'm not politically correct

[15:28] * masak hates all those bloody over-generalizers who just bunch lots of disparate people together into one homogenous group :P

[15:28] <Su-Shee> I'd like to be as individual and unique as all the other unique individuals.

[15:30] <masak> "We are all individuals!" -- "I'm not."

[15:31] <census> that is my job to lump people together!

[15:32] <diakopter> "you are not a beautiful and unique snowflake, you are the same decaying organic matter as everyone else, and we are all part of the same compost pile."  -Fight Club

[15:32] <masak> haha

[15:32] <census> i look at the data and make a generalization

[15:32] <census> and say on average this is what the data says about the people

[15:32] <masak> census: that made my day ;)

[15:32] <census> so lots of lumping

[15:32] <diakopter> *cackle*

[15:32] <census> but su-shee is cool even though su-shee visits #perl

[15:33] <masak> yeah, what's up with that?

[15:33] <masak> doesn't fit the whole over-generalization theory.

[15:34] <census> well there is politeness too i guess.  

[15:34] <census> there are few people in #perl that are ok.

[15:34] <census> su-shee is one of them

[15:34] <census> but otherwise #perl should be banned from irc

[15:34] <diakopter> *sigh*.. 

[15:34] <census> the whole channel

[15:35] <dalek> nqp/rak-jvm-support: 996eca2 | jnthn++ | src/vm/jvm/ (5 files):

[15:35] <dalek> nqp/rak-jvm-support: Start transition to new CodeRef handling.

[15:35] <dalek> nqp/rak-jvm-support: 

[15:35] <dalek> nqp/rak-jvm-support: This doesn't rip out any of the "old way", just starts using the new

[15:35] <dalek> nqp/rak-jvm-support: annotation for code ref static info instead.

[15:35] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/996eca28ff

[15:35] <dalek> nqp/rak-jvm-support: 594995c | jnthn++ | src/vm/jvm/QAST/Compiler.nqp:

[15:35] <dalek> nqp/rak-jvm-support: Eliminate code-gen for huge code refs array.

[15:35] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/594995c150

[15:35] <dalek> nqp/rak-jvm-support: e831031 | jnthn++ | src/vm/jvm/stage0/ (10 files):

[15:35] <dalek> nqp/rak-jvm-support: Update bootstrap.

[15:35] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/e8310315cb

[15:35] <census> and #perl people should have to join #perl6 and help develop #perl6

[15:35] <tadzik> I don't get such an impression from #perl

[15:35] <tadzik> but I'm also not someone who'd ever ban any channel :)

[15:35] <diakopter> dear posterity: must we announce a disclaimer on everything said here that's controversial, in case you were to assume that just because someone doesn't object/correct, everyone agrees with what was said?

[15:36] <census> who is posterity?

[15:36] * masak waves enthusiastically to posterity

[15:36] <tadzik> if people silently disagree, it's their fault

[15:36] <masak> posterity: you're so cool! you rock! sorry about that peak oil thing.

[15:36] <census> what's peak oil?

[15:36] <diakopter> dear god

[15:36] <masak> census: something off topic. don't worry, it's all past us now.

[15:37] <census> hahah

[15:37] <census> diakopter; can i ask you a question about texas?

[15:37] <diakopter> not if it's like the last few questions

[15:37] <census> no i don't think so

[15:37] <census> do you know the term texie?  if so, is it still offensive today?

[15:37] <diakopter> be sure

[15:38] <diakopter> I frankly have never heard that before. If you're not just making it up, I'm sure plenty of other people have though.

[15:39] <census> no i'm not making it up.  people from oklahoma were once regularly called okie, from texas texie, and from arkansas arkie.  and it was highly offensive apparently

[15:40] * masak find a definition of "texie" on Urban Dictionary, and immediately regrets doing so

[15:40] <masak> finds*

[15:40] <Su-Shee> oh yes. I read that in school. in grapes of wrath from the forties. 

[15:40] <Su-Shee> masak: yeah looking things up on the internet is a dangerous thing.. :)

[15:40] <census> i yes su-shee :) 

[15:41] <census> i was just wondering if that term survived past the 1940s

[15:41] <census> because at the time it was so highly offensive

[15:41] <jnthn> Ah, darn it. nqp/master has a busted JVM build, and the working one is in rak-jvm-support, which I can't really merge...

[15:41] <jnthn> ...without merging the Rakudo jvm-support branch too, at least.

[15:41] <timotimo> r: my Mu @stuff = [ [151], [*, *], [40, *, *] ]; @stuff.perl.say;

[15:41] <camelia> rakudo 9c5650: OUTPUT«Array+{TypedArray}.new([[151], [*, *], [40, *, *]])␤»

[15:41] <census> su-shee: did you like the book?

[15:41] <jnthn> Which I wasn't gonna do.

[15:41] <timotimo> oh neat :)

[15:42] <jnthn> Ahead of this month's release...

[15:42] <diakopter> census: why would you ask such a thing if you thought there was a chance it was a highly offensive ethnic slur?  don't do anything like that again please

[15:42] * timotimo is idly considering trying to write an elegant solution to http://rosettacode.org/wiki/Pascal%27s_triangle/Puzzle

[15:43] <diakopter> jnthn: make a new master-ish branch?

[15:43] <tadzik> how stupid is that

[15:43] <census> well i am just wondering scienfitically speaking.  i've read some books in which people discuss it scientifically.  

[15:43] <jnthn> Oh phew, a resposne without me having to rephrase the thing controversially so it gets discussed here :P

[15:43] <masak> timotimo: ooh, that's a neat puzzle.

[15:44] <jnthn> diakopter: Not sure quite how that helps me...

[15:44] <timotimo> i'm not sure how general the solution should become

[15:44] <masak> timotimo: what are the parameters, though? the filled-in numbers, of course. the number of rows? the number of variables?

[15:44] <diakopter> jnthn: oh, I was thinking rollback a ways

[15:44] <masak> timotimo: yes, my thought exactly.

[15:44] <jnthn> diakopter: Oh, revert what busted it. Hm, good point.

[15:44] <jnthn> Just need to be careful with merging :)

[15:45] <dalek> nqp/rak-jvm-support: d048df5 | jnthn++ | src/vm/jvm/ (3 files):

[15:45] <dalek> nqp/rak-jvm-support: Toss more dead code.

[15:45] <dalek> nqp/rak-jvm-support: review: https://github.com/perl6/nqp/commit/d048df5f5f

[15:45] <diakopter> jnthn: heh

[15:46] <timotimo> masak: for instance the prolog version pretty much uses the description of the problem as its "input", which is so often the case with prolog, and could be variable in almost all aspects (does that even make sense?)

[15:46] <FROGGS> omfg, I had a weird issue right now, first I import a sub called eq_array, which wasnt found at runtime. then I discovered that every sub that has a 'q' in it couldnt be used...

[15:46] <timotimo> but other solutions apparently solve exactly this puzzle, with no variability for shuffling missing numbers around etc

[15:47] <FROGGS> this is the bad line: https://github.com/rakudo-p5/v5/blob/master/lib/Perl5/Grammar.nqp#L3733

[15:47] <jnthn> FROGGS: *lol*

[15:47] <jnthn> FROGGS: Yes, that'd do it.

[15:48] <FROGGS> first I was think that 'eq' followd by the underscore might be the issue... 

[15:49] <tadzik> haha

[15:49] <FROGGS> (like the rakudo sub not-whatever {} bug)

[15:49] <timotimo> there's a lengthy discussion on the 100 Doors task discussion page about wether or not more "optimized" solutions are to be posted to RC at all

[15:50] <masak> FROGGS++ # hah!

[15:50] <timotimo> http://rosettacode.org/wiki/Talk:100_doors#Optimized_Examples - it was also linked from the Pascal's Triangle / Puzzle Discussion page

[15:50] *** crazedpsyc is now known as testone

[15:50] *** testone is now known as crazedpsyc

[15:51] <timotimo> FROGGS: i don't really understand why that assertion would reject blahqblah? there's a ^ and a $ there quite clearly ... oh! OH! :D

[15:51] <FROGGS> *g*

[15:51] <FROGGS> yeah

[15:52] <timotimo> isn't there a flag for the match operator that puts ^ and $ around the match implicitly?

[15:53] <FROGGS> no idea

[15:54] <timotimo> masak: for example, the BBC basic version has the input as comments and then a matrix + vector form of the whole equation system

[15:54] <timotimo> (as the thing the code operates on)

[16:06] *** kaare_ joined
[16:12] <dalek> rakudo/jvm-support: 7d2e5b4 | jnthn++ | src/Perl6/World.nqp:

[16:12] <dalek> rakudo/jvm-support: Remove a fragile ordering dependency.

[16:12] <dalek> rakudo/jvm-support: review: https://github.com/rakudo/rakudo/commit/7d2e5b4d7d

[16:14] *** berekuk left
[16:17] *** berekuk joined
[16:26] *** dmol left
[16:26] *** dmol joined
[16:28] <timotimo> http://rosettacode.org/wiki/Permutations#Perl_6 - could i basically-copy-paste this permutation implementation and use it to supply List.permutations in rakudo?

[16:28] <timotimo> also, it seems like there are no tests for permutations in the spectest suite yet.

[16:30] <timotimo> i can't really tell why the second piece of code is better than the first one. because it doesn't use recursion?

[16:37] <timotimo> (also, the list has to be sorted first for that to work)

[16:39] <timotimo> it also seems to break if two entries are equal. maybe it would be wise to just generate a list of index permutations and apply those to the list "on the way out"

[16:44] <arnsholt> timotimo: Testing a randomisation function is a bit tricky

[16:44] <yoleaux> 17 May 2013 01:38Z <[Coke]> arnsholt: can you get zavolaj passing its tests so we can cut a star a release? I see you've got some other commits in htere.

[16:45] <arnsholt> [Coke]: Ah, that. The fail is a segfault in the callback test file, right? (08-callbacks.t IIRC)

[16:45] <arnsholt> timotimo: One way to do it would be to shuffle a three-element array, say 100 times, and make sure the distribution is uniform(ish)

[16:48] *** colomon joined
[16:48] <colomon> o/

[16:49] <arnsholt> IIRC Knuth's TAoCP has a bit on this particular topic. If you give me a prod on Tuesday I can find it, if you don't have a copy easily available

[16:49] <sorear> o/ colomon

[16:49] <arnsholt> \o

[16:49] <colomon> sorear!

[16:52] <timotimo> arnsholt: but permutations doesn't need to be random

[16:53] *** SamuraiJack left
[16:53] <timotimo> and the specs doesn't speak about the randomness at all, so i'd just go with non-random

[16:53] <timotimo> but the tests could still work, you just have to check for existence of all permutations, rather than compare against some permutation list or something

[16:54] *** Su-Shee_ joined
[16:54] <arnsholt> timotimo: Oh, I misunderstood. I talked before reading the RC page =)

[16:55] <arnsholt> I thought it was "generate -a- permutation", not "generate all permutations"

[16:55] *** gdey left
[16:55] <timotimo> hehe.

[16:56] *** kaare__ joined
[16:58] *** Su-Shee left
[17:00] *** kaare_ left
[17:16] <arnsholt> What timezone is [Coke] in, again?

[17:20] *** census left
[17:22] <FROGGS> arnsholt: whois says netherlands but I believe he is from 'murica

[17:22] <arnsholt> 'k

[17:23] <arnsholt> 'cuz the failing test in Zavolaj is both really old and really gnarly, and I'm not sure how to fix it =(

[17:23] <FROGGS> arnsholt: he lives in NY

[17:23] <FROGGS> hmmm

[17:24] <FROGGS> well, then at least fudge the test?

[17:24] <FROGGS> are modules depending on that broken thing you know of?

[17:24] <arnsholt> It's not a test that fails, either =)

[17:25] <arnsholt> Something goes wrong with the Parrot internals, so it can happen at the end of the test file or in the middle of it, depending on when stuff gets GCed

[17:25] <FROGGS> uhh

[17:26] <arnsholt> As I said, really gnarly

[17:31] *** adu joined
[17:34] *** btyler joined
[17:35] <timotimo> arnsholt: fix the failure by removing the test :D

[17:35] <timotimo> oh, that was already said

[17:36] <arnsholt> Yeah, if it was a single test I'd TODO it

[17:36] <timotimo> mhm

[17:36] <timotimo> the whole file then! :))

[17:37] <arnsholt> =D

[17:38] <arnsholt> But the missus is going away to watch Eurovision with some friends soon, so I'll give it another whack tonight

[17:39] <arnsholt> I might actually have an idea what is wrong

[17:43] <FROGGS> you maybe explain the problem then, sometimes that helps getting on the right track

[17:43] <arnsholt> Parrot segfaults on GC after a callback (from C into Perl code) has been invoked

[17:44] <arnsholt> I think my callback handling is broken, and has to invoke an inferior runloop when handling the callback

[17:44] <colomon> FROGGS: +1 # I think half the time I figure out my problem before I can finish typing it out to explain....

[17:45] <FROGGS> colomon: right, same for me

[17:45] <FROGGS> because you focus to narrow when not explaining it to an outstander

[17:45] <arnsholt> Of course, fixing that involves NQP code, which means the fix won't propagate into Star until after the next compiler release

[17:45] <arnsholt> Yeah, explaining is definitely a good idea =)

[17:46] <FROGGS> well, but if this has to be done, then there might be no other way

[17:46] <arnsholt> Oh, definitely

[17:46] <arnsholt> Pretty much any Zavolaj bug is actually an NQP bug =)

[17:46] <FROGGS> ohh wait, when is the may release planned? I remember that this is actually my task O.O

[17:47] <FROGGS> compiler release that is

[17:47] <FROGGS> ahh:   2013-05-23   Rakudo #64 "Austin"             FROGGS

[17:47] <dalek> perl6-bench: 9de6718 | (Geoffrey Broadwell)++ | analyze:

[17:47] <dalek> perl6-bench: Add header line to plot output

[17:47] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/9de671883b

[17:47] <dalek> perl6-bench: d56f568 | (Geoffrey Broadwell)++ | analyze:

[17:47] <dalek> perl6-bench: Format plot highlighter hover text a bit better

[17:47] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/d56f56879b

[17:47] <dalek> perl6-bench: 9d362e1 | (Geoffrey Broadwell)++ | analyze:

[17:47] <dalek> perl6-bench: Show unscaled tests as bar charts, not series plots

[17:47] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/9d362e14d3

[17:48] <dalek> perl6-bench: 35dbf43 | (Geoffrey Broadwell)++ | jqplot/plugins/jqplot. (2 files):

[17:48] <dalek> perl6-bench: Add minimized jqPlot plugins needed to support bar charts

[17:48] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/35dbf43d82

[17:48] <arnsholt> Oh, compiler release is still a few days out. Then I might make it

[17:48] *** Su-Shee_ is now known as Su-Shee

[17:54] <adu> hi all

[17:55] <[Coke]> f

[17:55] <timotimo> japhb: is there a page on the 'net showing some benchmark results from your project?

[17:56] <adu> why is it called Zovalaj and not NativeCall?

[17:57] <Su-Shee> because it's difficult to type and has a nice ring to it. 

[17:57] <arnsholt> Because reasons, sort of

[17:57] <arnsholt> Alternatively, hysterical raisins =)

[17:58] <adu> lol

[17:58] <japhb> timotimo, there are some old gists, but nothing recent.

[17:59] <japhb> I'm working on adding nqp-jvm support to perl6-bench, and then I'll post something more recent if I find a good place for it.

[17:59] <timotimo> cool :)

[18:01] *** japhb_ joined
[18:01] *** arlinius left
[18:05] <japhb_> Is there a known fix for this error?  java.lang.RuntimeException: java.lang.RuntimeException: Method code too large!

[18:05] <japhb_> (When building nqp-jvm)

[18:05] <nwc10> which branch(es) are you using?

[18:06] <nwc10> in that I had seen that, but pretty sure that it was on an older revision and jnthn knew how to fix it

[18:06] <nwc10> and did so

[18:06] *** dmol left
[18:06] *** dmol joined
[18:06] <japhb_> nwc10, I'm on master, fully up to date

[18:07] <japhb_> Did the fix go into rak-jvm-support?

[18:07] <nwc10> not jvm-support

[18:07] <nwc10> I've been building jvm-support and rak-jvm-support

[18:07] <nwc10> I don't think that master works yet

[18:08] <nwc10> in particular, IIRC, NQP's master has a commit merged (by accident) which breaks stuff, but the related commit that fixes it is not merged

[18:08] <nwc10> so I think "stick to jvm-support and rak-jvm-support until told otherwise"

[18:08] <jnthn> Yes, that.

[18:09] <nwc10> also, the most current JVM (1.)7 you can update to on your platform

[18:09] <jnthn> After the next Rakudo release we can merge both of those branches.

[18:09] <nwc10> as the JVM has bugs.

[18:09] <japhb_> OK

[18:09] <japhb_> Which is more appropriate for benchmarking nqp-jvm itself right now, jvm-support or rak-jvm-support?

[18:09] <jnthn> Meaning it'll be the June Rakudo that is the first compiler release with some amount (to be determined ;) of JVM support.

[18:10] <arnsholt> jnthn: [Coke]++ reminded me of the callback problem, which I've thought a bit about lately

[18:11] <arnsholt> Could it be that I need to start an inferior runloop when the C code calls back into Parrot-land?

[18:11] <jnthn> arnsholt: You almost certainly are doing so.

[18:11] <jnthn> arnsholt: How do you invoke Parrot-land?

[18:11] <nwc10> japhb_: "both" - in that only NQP has the branch "rak-jvm-support" and only Rakudo has the branch "jvm-support"

[18:12] <jnthn> rak-jvm-support is a branch needed for building an NQP that works with Rakudo's jvm-support branch.

[18:12] <arnsholt> jnthn: Erm, I sneak away a reference to interp and use that to invoke the Parrot API when the callback is invoked

[18:12] <arnsholt> Which I realised is probably breaking the rules

[18:13] <timotimo> solution found then?

[18:13] <japhb_> nwc10, NQP has branches with both names

[18:13] <jnthn> I think the jvm-support NQP branch is legacy...is it still existing on the remote?

[18:14] * jnthn don't have it locally...

[18:14] <japhb_> hmmm, I see it in my clone, but I haven't recently looked into how git cleans those when the remote branch disappears

[18:14] <jnthn> japhb_: Seems not, so maybe you have it 'cus you checked it out earlier?

[18:14] <jnthn> japhb_: Short answer: it doesn't :)

[18:15] <japhb_> Well there you go

[18:15] <japhb_> So I guess nqp/rak-jvm-support is the one I'll need to use until it gets merged back to nqp/master

[18:16] <jnthn> (Long answer: the set of branches you have locally and that the remote has are independent of each other. When you checkout a remote branch for the first time what it really does is git branch -b branchname origin/branchname for you, or something close to that, but also setting the upstream along the way.)

[18:17] <jnthn> (Thus you can have different local names for remote branches should you wish to.)

[18:17] <japhb_> jnthn, oh, yes I knew that, I meant the trimming of refs/remotes/*

[18:17] <jnthn> Oh, git remote prune origin

[18:17] <japhb_> ah

[18:17] <jnthn> iirc

[18:18] <japhb_> nice!  A dozen origin refs go bye-bye

[18:18] <japhb_> thanks, jnthn 

[18:20] * colomon needs to figure out how to push branches for the set spec changes to roast....

[18:21] <arnsholt> jnthn: What's the appropriate way to start an inferior run-loop, BTW?

[18:31] *** arlinius joined
[18:32] <jnthn> arnsholt: Parrot_pcc_invoke_from_sig_object for example

[18:33] *** Su-Shee left
[18:36] <arnsholt> Right, that's what I'm doing, so not that after all =/

[18:36] *** Su-Shee joined
[18:36] <japhb_> Gah.  nqp/rak-jvm-support builds and installs, but: $ ./nqp -e 'say("hello")'

[18:36] <japhb_> Unhandled exception: Wrong number of arguments passed; expected 1..1, but got 3

[18:36] <japhb_>   in multi_declarator

[18:37] *** dmol left
[18:38] <japhb_> Any ideas?

[18:39] *** adu left
[18:39] *** adu_ joined
[18:42] <timotimo> for the longest time i thought inferior run lop referred to worse than optimal performance

[18:43] <lizmat> fix for exists on typed hashes: https://github.com/rakudo/rakudo/pull/142

[18:46] <jnthn> japhb_: Where are you doing the ./nqp ?

[18:46] <jnthn> japhb_: The error is not familiar, however.

[18:48] <arnsholt> jnthn: So the saving and passing around of the interp pointer I do is likely to be kosher? It feels a bit icky, TBH, but it doesn't look like there's a way to independently get an interp pointer

[18:53] <jnthn> arnsholt: That bit should be OK

[18:55] <lizmat> slightly faster module loading (temporary fix): https://github.com/rakudo/rakudo/pull/143

[18:55] * lizmat is off for some mindless ESC watching

[18:58] <FROGGS> arnsholt: when receiving a callback from a c-lib in perl5 land you have the pointer of the main interpreter too, but most times you clone the interpreter and work with the clone

[19:00] <tadzik> lizmat++

[19:00] <tadzik> faster module loading is a Big Deal

[19:00] <tadzik> real-world applications are going to notice this much more than spectests, I'm sure

[19:04] <nwc10> a reasonably recent git can do git fetch --prune

[19:04] <nwc10> git fetch --prune --all # gets the lot

[19:06] <arnsholt> jnthn: Dang. I really thought that was it =)

[19:08] <nwc10> [nicholas@dromedary-001 nqp]$ strace -f perl  -le 'print "Hi"' 2>&1 >/dev/null | wc

[19:08] <nwc10>     173    1156   10662

[19:08] <nwc10> [nicholas@dromedary-001 nqp]$ strace -f ./nqp  -e 'say("Hi")' 2>&1 >/dev/null | wc

[19:08] <nwc10>    7072   55030  538918

[19:08] <nwc10> and, unsurprisingly, one of these is slower

[19:09] <nwc10> nqp on parrot is a lot more respectable:

[19:09] <nwc10>     625    4192   46437

[19:09] <Su-Shee> at least one of us doing something useful... 

[19:10] *** dmol joined
[19:18] *** ifim joined
[19:26] <timotimo> masak: your gift has reached me :)

[19:28] <GlitchMr> std: my $empty-set = set; # well, it was before

[19:28] <camelia> std 9906f18: OUTPUT«[31m===[0mSORRY![31m===[0m␤The 'set' listop may not be called without arguments (please use () or whitespace to clarify) at /tmp/fI1Ys1TvFA line 1:␤------> [32mmy $empty-set = set[33m⏏[31m; # well, it was before[0m␤Check failed␤FAILED 00:00 42m␤»

[19:30] *** tgt left
[19:30] <jnthn> nwc10: What to the three numbers mean?

[19:30] <jnthn> *do

[19:31] <nwc10> lines, "words", bytes

[19:31] <nwc10> so lines is really the only one that matters - number of system calls.

[19:31] <jnthn> oh, duh, I missed the wc

[19:31] <nwc10> java -version isn't much worse than perl -v

[19:31] <timotimo> lizmat: could it be that your :delete changes got mixed into the faster module load pull request?

[19:32] <moritz> looks like it

[19:33] *** domidumont left
[19:35] <japhb_> jnthn, I get that same error in all three cases: CWD is nqp/ and using ./nqp ; CWD is nqp/ and using install/nqp ; CWD is nqp/install/ and using ./nqp

[19:35] <japhb_> Oh now that's interesting.

[19:36] <japhb_> It's not *exactly* the same error.  The nqp in install/nqp/ has 'expected 0..0' instead of 'expected 1..1'

[19:37] <nwc10> Things work for me with this Java:

[19:37] <nwc10> java version "1.7.0_21"

[19:37] <nwc10> OpenJDK Runtime Environment (IcedTea 2.3.9) (7u21-2.3.9-1ubuntu1)

[19:37] <nwc10> OpenJDK 64-Bit Server VM (build 23.7-b01, mixed mode)

[19:37] <nwc10> and this Java:

[19:37] <nwc10> java version "1.7.0_19"

[19:37] <nwc10> OpenJDK Runtime Environment (rhel-2.3.9.1.el6_4-x86_64)

[19:37] <nwc10> OpenJDK 64-Bit Server VM (build 23.7-b01, mixed mode)

[19:38] <nwc10> (and the Java on the Raspberry Pi, but that's powered off and doesn't do wake on lan)

[19:38] <jnthn> japhb_: That's...really odd. I'm struggling to guess.

[19:38] <japhb_> I

[19:39] <jnthn> japhb_: does -v work?

[19:39] <japhb_> I've got this java:

[19:39] <japhb_> java version "1.7.0_21"

[19:39] <japhb_> OpenJDK Runtime Environment (IcedTea 2.3.9) (7u21-2.3.9-0ubuntu0.12.10.1)

[19:39] <japhb_> OpenJDK Client VM (build 23.7-b01, mixed mode, sharing)

[19:39] <japhb_> jnthn, no.  :-(

[19:39] <jnthn> japhb_: Same error?

[19:40] <japhb_> jnthn, close

[19:40] <japhb_> $ ./nqp -v

[19:40] <japhb_> Unhandled exception: Wrong number of arguments passed; expected 1..1, but got 2

[19:40] <japhb_>   in multi_declarator:sym<multi>

[19:40] <jnthn> Can you gist me the full trace?

[19:41] <japhb_> That's literally all of it.

[19:41] <jnthn> I want to know how on earth we end up in multi_declarator:sym<multi>!

[19:41] <jnthn> oh...wtf...

[19:41] <jnthn> You have latest from Git?

[19:41] * japhb_ tries a git clean -dXf and ConfigureJVM again

[19:41] <japhb_> yep, I did, will pull again just in case

[19:41] <jnthn> Very weird.

[19:42] <jnthn> I mean, it looks like it invokes completely the wrong thing at startup

[19:42] *** tgt joined
[19:43] <japhb_> Oh that's interesting.  There's a couple files that 'make clean' did not remove, but 'git clean -dXf' did: Makefile, config.status, and src/gen/nqp-config.nqp -- that last one is very fishy to me.

[19:43] <jnthn> config.status I can see not going away

[19:43] <jnthn> The others, less so...

[19:43] <jnthn> make realclean should kill the Makefile

[19:44] <japhb_> There's no realclean in the Makefile generated by ConfigureJVM.pl .

[19:45] <jnthn> Oh.

[19:45] <jnthn> Well, that's an easy fix... :)

[19:45] <japhb_> :-)

[19:45] <jnthn> The other thing, though, is weird.

[19:45] <japhb_> nqp-config.nqp, you mean?

[19:45] <jnthn> No, the error you're getting.

[19:45] <japhb_> ah

[19:49] <japhb_> Dang it, same error again

[19:50] <japhb_> ok, I'm at the tip of rak-jvm-support.  Is that where you are too, nwc10?

[19:51] * timotimo tries to build a newer jvmkudo

[19:52] <japhb_> Just in case it helps, here are the slightly different errors for nqp/install/nqp:

[19:52] <japhb_> $ install/nqp -v

[19:52] <japhb_> Unhandled exception: Wrong number of arguments passed; expected 1..1, but got 2

[19:52] <japhb_>   in onlystar

[19:53] <japhb_> $ cd install; ./nqp -v

[19:53] <japhb_> Unhandled exception: Wrong number of arguments passed; expected 0..0, but got 2

[19:53] <japhb_>   in 

[19:53] <japhb_> In all three cases, those are the complete errors

[19:54] <jnthn> japhb_: Have you done successful builds in the past?

[19:54] <japhb_> yes, but last time I tried was weeks ago.

[19:54] <jnthn> Try 9756183, which is before today's changes

[19:55] <japhb_> got it

[19:56] <japhb_> Building it now

[19:58] <japhb_> Woah, the build segfaulted

[20:00] <japhb_> jnthn, error gist at https://gist.github.com/japhb/179e0e5382b2fe03b28e

[20:00] <timotimo> ./nqp -e 'say("hello")'; - works for me. but when i write that in the nqp repl i get a NPE and lots of more error

[20:00] <japhb_> .oO( 32-bit fail? )

[20:01] <jnthn> japhb_: whoa

[20:01] <jnthn> japhb_: Scary thing is, we have no unmanaged extensions of any kind...it's all JVM bytecode and Java code...

[20:02] <jnthn> So that's a kosher JVM bug. :/

[20:02] * jnthn wonders if 32-bit is anything to do with it, but it seems unlikely

[20:02] <japhb_> Nice.  It figures, given my previous experience with Java, that I would manage to trigger a JVM bug.  *rolls eyes*

[20:02] <arnsholt> jnthn: How's life in Malmö today, BTW =)

[20:03] <jnthn> arnsholt: Well, ask masak...I'm 15km north in Lund ;)

[20:03] <jnthn> And safe from all the happenings in the big city :P

[20:03] <japhb_> Anyone else have 32-bit x86 (especially linux) who can attempt to recreate the failure?

[20:03] <arnsholt> Sounds like an excellent plan today!

[20:04] <arnsholt> (That last at jnthn, obv)

[20:05] * japhb_ goes to make a sandwich and hope someone volunteers.  ;-)

[20:05] <timotimo> volunteers to eat it?

[20:06] <japhb> :-P

[20:06] <timotimo> is the jakudo executable supposed to be able to say "oh"?

[20:08] <nwc10> jnthn: straw poll (1 run) but numbers consistent with donaldh's suggestion - bigger JVM heap makes parsing faster

[20:08] <nwc10> [and actually finish :-)]

[20:09] <nwc10> actually, that suggests that pruning memory use (if possible) would be a speedup in itself

[20:09] <dalek> v5: 2644cc5 | (Tobias Leich)++ | lib/Perl5/Grammar.nqp:

[20:09] <dalek> v5: fixed pattern of impossible sub names

[20:09] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/2644cc5fd3

[20:09] <dalek> v5: d411631 | (Tobias Leich)++ | STATUS.md:

[20:09] <dalek> v5: fudged path to test.pl

[20:09] <dalek> v5: 

[20:09] <dalek> v5: With this commit we pass more than one percent of the test suite.

[20:09] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/d411631593

[20:10] <nwc10> assuming that progress is going to be S-shaped, 1% is actually quite impressive

[20:11] <timotimo> huh, 1% of what?

[20:13] <nwc10> 20:09 < dalek> v5: With this commit we pass more than one percent of the test  suite.

[20:14] <arnsholt> Ther Perl 5 test suite, I imagine

[20:16] *** kaare__ left
[20:17] <timotimo> ooooh :)

[20:17] *** rindolf left
[20:17] <FROGGS> right

[20:20] *** stevan_ left
[20:25] *** stevan_ joined
[20:25] <timotimo> FROGGS: cool stuff :)

[20:25] <FROGGS> ya, goes well atm

[20:26] <timotimo> when do you expect the first major roadblock?

[20:28] <Ulti> FROGGS is there a specific commit of v5 to use with the latest R*?

[20:28] <Ulti> or do I need to be building the latest Rakudo

[20:29] *** census joined
[20:32] <FROGGS> Ulti: best is latest rakudo, and then read the README

[20:32] <Ulti> yeah just noticed even filenames have changed from the version I have

[20:35] <Su-Shee> japhb_> Anyone else have 32-bit x86 (especially linux) who can attempt to recreate the failure?

[20:35] <Su-Shee> japhb_: I have

[20:35] <japhb_> Su-Shee, great, can you give it a try?

[20:35] <Su-Shee> japhb_: if you tell me what I have to get and do, sure.

[20:36] <Su-Shee> that's my java: java version "1.6.0_27"

[20:36] <Su-Shee> good enough?

[20:36] <japhb_> Su-Shee, I think 1.7 is required now

[20:37] <Su-Shee> oh.

[20:37] <japhb_> because of features nqp-jvm users

[20:37] <japhb_> :-(

[20:37] <japhb_> (to the 'oh.')

[20:37] <Su-Shee> what else do I need?

[20:37] <japhb_> That's all I know of.

[20:38] <Su-Shee> japhb_: no, I mean what of rakudo/jakudo do I have to get?

[20:41] <Su-Shee> in 12 seconds I have java  1.7 ;)

[20:42] *** Guest20809 left
[20:44] *** yoleaux left
[20:48] *** kivutar joined
[20:48] <Su-Shee> java version "1.7.0_21"

[20:51] *** yoleaux joined
[20:51] <japhb_> excellent

[20:52] <Su-Shee> I blindly guessed that I need nqp and configurejvm.pl

[20:52] <japhb_> Su-Shee, no rakudo ... just nqp.  Either the rak-jvm-support branch, or commit 9756183

[20:52] <Su-Shee> already building ;)

[20:53] <japhb_> master would build for me, but not run.

[20:53] *** yoleaux left
[20:53] *** arlinius left
[20:53] *** yoleaux joined
[20:53] <Su-Shee> uhm. ;)

[20:53] <Su-Shee> java.lang.RuntimeException: java.lang.RuntimeException: Method code too large!

[20:54] <Su-Shee>  in <anon>make: *** [src/stage1/QAST.class] Error 1

[20:54] <japhb_> Sorry, no, I meant, master wouldn't build (failed with an NQP error -- that same one you saw),

[20:54] <japhb_> rak-jvm-support would build but not run,

[20:54] <Su-Shee> ok, let's see.

[20:54] <Su-Shee> japhb_: where's rak-jvm-support?

[20:54] <japhb_> and commit 9756183 segfaults during build

[20:54] <japhb_> It's just an NQP branch

[20:55] <Su-Shee> trying the commit 9756183

[20:55] <japhb_> 'make clean; git clean -dXf; git checkout rak-jvm-support; perl ConfigureJVM.pl; make && make install'

[20:55] <japhb_> nod

[20:56] <Su-Shee> (building..)

[20:56] <Su-Shee> how do I run it?

[20:57] <jnthn> ./nqp -e "say('it lives!')" or so

[20:57] *** cognominal left
[20:57] <Su-Shee> ok. still building :)

[20:57] *** cognominal joined
[21:00] <Su-Shee> commit built, runs, lives.

[21:00] <Su-Shee> shall I try rak-jvm-support next?

[21:01] <Su-Shee> (already doing it..)

[21:02] <japhb_> WTH

[21:02] <Su-Shee> well.. everything generally builds and runs here ;)

[21:02] <japhb_> Which linux are you running?

[21:02] <Su-Shee> also, I got the oracle java.

[21:03] <Su-Shee> slackware

[21:03] <japhb_> Oh, hmm

[21:03] <japhb_> what's your 'java -version'?

[21:03] <FROGGS> <Su-Shee> java version "1.7.0_21"

[21:03] <Su-Shee> java version "1.7.0_21"

[21:03] <Su-Shee> Java(TM) SE Runtime Environment (build 1.7.0_21-b11)

[21:03] <Su-Shee> Java HotSpot(TM) Server VM (build 23.21-b01, mixed mode)

[21:03] <japhb_> FROGGS, I was looking for the full output

[21:03] <Su-Shee> ^^^^

[21:03] <japhb_> Mmm-hmmm

[21:03] <japhb_> 32-bit IcedTea bug?

[21:04] <Su-Shee> it's not build by hand though, it's oracle's whatever binary jdk package (not jre) and then just repackaged for slackware

[21:04] <Su-Shee> japhb_: what's that?

[21:05] <Su-Shee> rak-jvm-support built, too, runs, lives.

[21:05] <japhb_> Su-Shee, it's this: $ java -version

[21:05] <japhb_> java version "1.7.0_21"

[21:05] <japhb_> OpenJDK Runtime Environment (IcedTea 2.3.9) (7u21-2.3.9-0ubuntu0.12.10.1)

[21:05] <japhb_> OpenJDK Client VM (build 23.7-b01, mixed mode, sharing)

[21:05] <Su-Shee> japhb_: ok, whatever that is.. I have "plain" java. 

[21:05] * jnthn also

[21:05] <japhb_> .oO( No foam! )

[21:06] <Su-Shee> mind that this was actually 32bit now.

[21:06] *** berekuk left
[21:07] <Su-Shee> master directly fails during build, though.

[21:07] <Su-Shee> can I build anything else? :)

[21:07] <japhb_> OK, so the master thing we believe to just be a broken commit that will be fixed when rak-jvm-support is merged back.

[21:08] <japhb_> And it's looking suspiciously like OpenJDK/IcedTea may be at fault for me.

[21:08] <Su-Shee> japhb_: just get the "orginal" package?

[21:08] <japhb_> Does anyone have 64-bit OpenJDK/IcedTea to rule that out?

[21:08] *** prevost left
[21:09] <japhb_> Su-Shee, Well ... there are two goals here: 1) get me working (for which your suggestion is probably most expedient), and 2) know WTH is wrong, so that when other people inevitably trip over the same problem, we can help them right off.

[21:09] <nwc10> things work for me on this x86_64 Ubuntu system:

[21:09] <nwc10> java version "1.7.0_21"

[21:09] <nwc10> OpenJDK Runtime Environment (IcedTea 2.3.9) (7u21-2.3.9-1ubuntu1)

[21:09] <nwc10> OpenJDK 64-Bit Server VM (build 23.7-b01, mixed mode)

[21:09] <Su-Shee> japhb_: "it's you" :)

[21:09] <japhb_> OK, nwc10 narrows it down.

[21:09] <dalek> v5: 50e2cf5 | (Tobias Leich)++ | t/test.pl:

[21:09] <dalek> v5: fix signature of is()

[21:09] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/50e2cf5f5c

[21:09] <dalek> v5: 8039b3e | (Tobias Leich)++ | / (2 files):

[21:09] <dalek> v5: make undef assign/return Nil instead of Mu

[21:09] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/8039b3e223

[21:10] <japhb_> Either A) it's me, or B) it's 32-bit OpenJDK.

[21:10] <japhb_> (Since I'm running Mint, which is Ubuntu+tweaks)

[21:11] <Su-Shee> I'd say, it's your specialty linux then, I couldn't be plainer and nwc10 is a common ubuntu...

[21:12] <japhb_> Su-Shee, the Mint tweaks are almost entirely graphical-desktop-related.

[21:12] <Su-Shee> "almost entirely" ;)

[21:13] <Ulti> FROGGS against the latest Rakudo when I do make install inside v5 I get: "Error while compiling block : Error while compiling op bind: Error while compiling op numify: Error while compiling op atkey: Error while compiling op getenvhash: No registered operation handler for 'getenvhash'"

[21:13] <Su-Shee> if I remember correctly it's "just the completely other gnome" ;)

[21:13] <japhb_> (Sure, and stripping out Canonical-ad-ware)

[21:13] <Su-Shee> japhb_: well you're right, I don't really see how this affects the jdk.

[21:13] <Su-Shee> japhb_: on the other hand, if they really built theirs and packaged..

[21:13] <Su-Shee> japhb_: which I just specifically didn't

[21:15] <Su-Shee> japhb_: you can ask me any time to re-build something though to check.. I'm now up2date and just have to run it.

[21:15] <FROGGS> Ulti: what do you mean by latest rakudo? I'm talking about nqp/master HEAD and rakudo/nom HEAD

[21:15] <japhb_> Su-Shee, OK, thanks

[21:15] <FROGGS> Ulti: getenvhash is there since a few weeks

[21:18] <Ulti> just cloned https://github.com/rakudo/rakudo.git the last commit was from you a day ago :S so I guess not that bleeding edge

[21:18] *** nebuchadnezzar left
[21:19] *** nyuszika7h left
[21:20] *** kivutar left
[21:20] <FROGGS> Ulti: that is bleeding edge, yes

[21:21] <Ulti> FROGGS: I bet its just me having some other perl6 in my path still one second, sorry

[21:21] *** nyuszika7h joined
[21:22] <FROGGS> Ulti: yeah, that must be it

[21:22] <Ulti> need a perl6brew ;]

[21:23] *** arlinius joined
[21:23] <FROGGS> yeah :o)

[21:23] <Ulti> yeah sorry FROGGS that was the problem ;__;

[21:23] <FROGGS> np

[21:24] *** donaldh joined
[21:26] <tadzik> Ulti: did you try pandabrew? :)

[21:26] *** DarthGandalf left
[21:26] *** adu_ left
[21:26] <Su-Shee> tadzik: you made a pandabrew?

[21:26] *** adu joined
[21:26] <Su-Shee> (also brewing pandas is pretty disgusting man.. :)

[21:29] *** DarthGandalf joined
[21:29] <Ulti> tadzik: I didn't even know it existed

[21:29] <jnthn> Oh, I thought it was a tasty brew, made by a panda... :)

[21:29] <Ulti> I'll check it out

[21:29] <tadzik> yeah, I didn't advertise it much though :)

[21:29] <tadzik> https://github.com/tadzik/pandabrew

[21:29] <tadzik> it's imperfect, of course

[21:30] <tadzik> and I'm afraid you need to install panda first :P

[21:30] <Ulti> http://robsbeerquest.blogspot.co.uk/p/panda-frog.html  pandafrogbrew

[21:30] <tadzik> I'll hopefully get some tuits to fix it soon

[21:40] <Ulti> tadzik just reading this olde thread involving jordynclee, linked from your blog... is it wrong that I'm laughing? lol

[21:45] <tadzik> Ulti: jordynclee? Was that the "geeks can't dress" thing?

[21:45] <Ulti> lol yeah

[21:45] <tadzik> heh. It was a funny incident, yeah

[21:46] <Ulti> I'd be fairly annoyed if that happened to me too though

[21:46] <tadzik> I was too

[21:46] <tadzik> it's one of those things at which you laugh after a year

[21:46] <tadzik> (was it a year ago?)

[21:46] <Ulti> yeah

[21:47] <Ulti> I'm more laughing at how she utterly didn't know who she was messing with, she probably just googled "geek" or something in an image search

[21:47] <Ulti> and obviously the most famous popup first ;P

[21:50] <FROGGS> Ulti: linky?

[21:50] <masak> Ulti: she was spectacularly tactless in her message, if you ask me. tried to combine "you geeks have an awful dress sense" with "hey, I do geek stuff too. I speak geek. I even watch [something irrelevant] sometimes"

[21:50] <tadzik> "she utterly didn't know who she was messing with" -- that makes me feel like a Higher Order Gangsta ;)

[21:51] <masak> Ulti: if you are targeting a demographic, it's a bad idea to start by pissing off same demographic, and appearing like a total poser.

[21:53] <tadzik> FROGGS: http://ttjjss.wordpress.com/2012/08/09/looks-like-i-pissed-off-the-internet/

[21:54] *** saxx11 joined
[21:55] <masak> saxx11: aloha.

[21:55] <Ulti> masak: agreed

[21:56] <Ulti> I think she is p. young though especially as her Twitter feed suggests she wants to be a law student.. so you probably just made some 17 yol female blogger cry on the other side of the world :D

[21:57] <flussence> haha, seems like that site's been taken down entirely

[21:57] <Ulti> yeah

[21:57] <Ulti> I havent seen how awful the blog post is.. maybe waybackwhen has it

[21:57] *** dmol left
[21:58] <flussence> IIRC, bad enough that that response was pretty restrained

[21:58] <Ulti> http://web.archive.org/web/20120811002700/http://140stitches.com/2012/8/2/nerds-its-time-to-up-your-fashion-game   LOL

[21:58] <Ulti> you can't delete the internet (or your past)

[21:59] <FROGGS> but where is that image??

[21:59] <FROGGS> :P

[22:00] <Ulti> well its a conference pic so I'm sure we can piece that together

[22:01] <timotimo> oooh, that one

[22:01] <timotimo> i remember that

[22:01] <FROGGS> from yapc::eu? last year?

[22:01] <tadzik> FROGGS: the image mysteriously disappeared after my blog post :)

[22:01] <FROGGS> *g*

[22:02] <tadzik> FROGGS: http://4.bp.blogspot.com/-0svqBX518-4/T5QaWftYr1I/AAAAAAAAAd8/mRlYKBZlkfc/s320/IMG_3935.jpg that's the one

[22:02] <tadzik> http://4.bp.blogspot.com/-0svqBX518-4/T5QaWftYr1I/AAAAAAAAAd8/mRlYKBZlkfc/s1600/IMG_3935.jpg bigger

[22:02] <FROGGS> tadzik: you're the one with the onion?

[22:02] <tadzik> I think me and moritz++ were visible on her crop

[22:02] <tadzik> FROGGS: that's right

[22:03] <timotimo> oh, that was a lady?

[22:03] <masak> I must say all of you in that picture look very appropriately dressed for a hackathon.

[22:03] <tadzik> I still don't see her point. I was handsome as a devil himself

[22:03] <FROGGS> where's the problem? I've expected at least a shirt like TimeToady++ wears

[22:03] <masak> tadzik: agreed. :)

[22:03] <tadzik> hehe

[22:03] <FROGGS> (not that I won't wear such a shirt if I had one)

[22:03] <tadzik> FROGGS: cargo pants and a hackathon t-shirt

[22:04] <tadzik> bad dresscode, yo

[22:04] <FROGGS> well, causal

[22:04] <tadzik> the only non-perl t-shirts I own are google t-shirts ;P

[22:04] <tadzik> well, almost

[22:05] <timotimo> wow, that's dedication

[22:05] <FROGGS> hehe

[22:06] <tadzik> I wish they gave socks and underpants too, would make life so much easier

[22:06] *** aindilis joined
[22:06] *** nebuchadnezzar joined
[22:06] <Ulti> my next tshirt is going to have this on http://www.iscb.org/images/stories/ismb2010/vrs/11897.jpg I figure about 1 in 10 thousand people it will be a conversation starter

[22:06] *** _ReD_ joined
[22:07] *** _ReD_ left
[22:07] <FROGGS> Ulti: not for me :/

[22:08] <FROGGS> I'd probably say 'ohh nice' and 'really?'

[22:08] <tadzik> +1, or rather -1 ;)

[22:08] <FROGGS> :o)

[22:08] <labster> "nice kanji you got there Ulti"

[22:08] <masak> "would be a shame if something were to... happen to it"

[22:09] <masak> :P

[22:09] <labster> masak++ lol

[22:09] <Ulti> they're not kanji though, but yeah I guess there will be the confusion convo starter :)

[22:09] <tadzik> I imagine that says "Talk Kanji to me"

[22:10] <masak> Ulti: what are they? I recognize many of the top ones, but the bottom ones are either fake or very, very rare.

[22:10] <Ulti> they're a calligraphy representation of the 20 common proteogenic amino acids

[22:11] <masak> ooh!

[22:11] <masak> that's *awesome*.

[22:11] <masak> WANT

[22:11] <Ulti> I want to make a font that has them, its a scientist that came up with them

[22:11] <masak> oh wow oh wow oh wow

[22:11] <tadzik> :D

[22:11] <Ulti> the S shapes are the amino acids with sulphur in the + are positively charged... they are genuinely great characters to use for humans to understand

[22:13] <labster> neat!

[22:16] *** berekuk joined
[22:18] <labster> I bought a new laptop, so I could actually have something to hack on at the YAPCNA hackathon -- and FROGGS++ helped me get linux running on it.

[22:20] <tadzik> nice :)

[22:20] <tadzik> I have a shiny new one too. The old one is on a well-deserved retirement

[22:21] <FROGGS> labster: tell me if I'm wrong, but didn't you said on friday that you considered buying one?

[22:21] <FROGGS> quick decision maker, ehh?

[22:21] <FROGGS> labster: what is it?

[22:23] <labster> I've been thinking about it for a week.  I saw an advert for a Dell Inspiron 13Z for only 300 USD, with a Ivy Bridge Core i3.  The price seemed about right for my poorness, so I bought it.

[22:24] *** donaldh left
[22:26] <FROGGS> sounds cool

[22:27] <labster> Intel says the CPU should cost 225 USD on its own for us consumers, so it seemed like a fairly good deal.

[22:27] <tadzik> indeed

[22:28] <diakopter> yapc austin registrations http://i.imgur.com/NTvWQGl.png

[22:29] <tadzik> oh, I have to pay

[22:29] <FROGGS> did that a few days back

[22:30] <lue> "The currently compiling Perl parser" (S02:3105) == "the Perl parser currently being used for what's compiling" || "The Perl parser currently being compiled" ?

[22:31] <masak> lue: True

[22:31] <diakopter> the former

[22:31] <masak> lue: (also, numification warnings/errors) :P

[22:31] * lue should've used a junction :P

[22:31] <masak> rn: say "A" == "B" || "C"

[22:31] <camelia> rakudo 9c5650: OUTPUT«Cannot convert string to number: base-10 number must begin with valid digits or '.' in '⏏A' (indicated by ⏏)␤  in method Numeric at src/gen/CORE.setting:10020␤  in sub infix:<==> at src/gen/CORE.setting:3008␤  in sub infix:<==> at src/gen/CORE.setting:3006␤  in sub…

[22:31] <camelia> ..niecza v24-51-g009f999: OUTPUT«Unhandled exception: Cannot parse number: A␤  at /home/p6eval/niecza/lib/CORE.setting line 1502 (die @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3652 (ANON @ 10) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3654 (NumSyntax.str2num @ 5) ␤  at /h…

[22:32] <masak> p5eval: 1

[22:32] <p5eval> masak: 1

[22:32] <masak> p5eval: "A" == "B" || "C"

[22:32] <p5eval> masak: 1

[22:32] <masak> p5eval: use warnings; "A" == "B" || "C"

[22:32] <p5eval> masak: Argument "B" isn't numeric in numeric eq (==) at (eval 7) line 1.Argument "A" isn't numeric in numeric eq (==) at (eval 7) line 1.1

[22:32] <lue> I thought it was the former, but I wasn't sure

[22:33] *** berekuk left
[22:33] <masak> yes, it's the whole thing with "knowing what language you're currently parsing".

[22:33] *** charsbar_______1 left
[22:34] <lue> Also, it's either the example at S02:3073 or me & rakudo that doesn't understand how BEGIN works

[22:34] <masak> and language pragmas being tied to lexical scopes in the parsed text (and dynamic variables in the parser).

[22:35] <lue> r: BEGIN { COMPILING::<$?FOO> = 42; }; say COMPILING::<$?FOO>; BEGIN { COMPILING::<$?FOO> = 45 }; # the example would say the output is 42

[22:35] *** spider-mario left
[22:35] <camelia> rakudo 9c5650: OUTPUT«45␤»

[22:35] *** charsbar_______1 joined
[22:35] <FROGGS> hmmm, I thought it will run all BEGIN blocks in ordner, then the rest of the code

[22:36] <lue> just like I and rakudo think :)

[22:36] <FROGGS> yeah

[22:36] <FROGGS> maybe there is something special about COMPILING::

[22:37] <lue> So unless the example is right and we're all wrong, can I fix the example so it works like intended? (specifically, put each say and its preceding BEGIN in a separate closure)

[22:38] <FROGGS> I'm not sure that I am the right guy to give you a +1

[22:39] <lue> My question was to #perl6 in general :) [I will fix it soon, unless someone can tell me why it *should* work. COMPILING shouldn't affect how BEGIN blocks work, unless I've completely misunderstood BEGIN]

[22:40] <FROGGS> k

[22:51] *** btyler left
[22:53] <masak> nice introduction to row types. http://www.cs.cmu.edu/~neelk/rows.pdf -- might interest some people in here.

[22:53] <masak> 'night, #perl6

[22:53] <lue> g'♞ masak o/

[22:54] <dalek> specs: 81cf4c7 | lue++ | S02-bits.pod:

[22:54] <dalek> specs: [S02] Fix COMPILING pseudopackage example.

[22:54] <dalek> specs: 

[22:54] <dalek> specs: The example seemed to show a misunderstanding of BEGIN blocks, at least

[22:54] <dalek> specs: by our undestanding :) . Fixed so that the BEGIN blocks work like they

[22:54] <dalek> specs: were intended, by moving each in a separate closure.

[22:54] <dalek> specs: review: https://github.com/perl6/specs/commit/81cf4c7327

[23:00] <lue> masak: "a: int|r" strikes me initially as looking a lot like S02/Polymorphic Types (Conjectural)

[23:01] <lue> [although I'd have to give this presentation a better look later, with an OCaml reference by my side :) ]

[23:09] *** berekuk joined
[23:11] *** berekuk left
[23:14] *** adu left
[23:19] *** PacoAir left
[23:20] *** berekuk joined
[23:27] *** PacoAir joined
[23:32] *** berekuk left
[23:35] *** berekuk joined
[23:46] *** berekuk left
[23:50] *** berekuk joined
