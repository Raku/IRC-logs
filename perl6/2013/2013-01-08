[00:03] *** aindilis left
[00:21] *** PZt left
[00:26] *** am0c joined
[00:27] *** aloha joined
[00:31] *** amkrankruleuen left
[00:33] *** amkrankruleuen joined
[00:33] *** amkrankruleuen left
[00:33] *** amkrankruleuen joined
[00:41] *** xinming left
[00:43] *** xinming joined
[00:46] *** dayangkun left
[00:53] *** bitonic left
[00:56] <grondilu> Compiling lib/Panda/Ecosystem.pm

[00:56] <grondilu> ===SORRY!===

[00:56] <grondilu> When pre-compiling a module, its dependencies must be pre-compiled first.

[00:56] <grondilu> Please pre-compile /usr/local/src/rakudo/install/lib/parrot/4.10.0-devel/languages/perl6/site/lib/JSON/Tiny/Actions.pm

[00:56] <grondilu> I'll do it but I thought it was worth mentionning

[00:58] *** dayangkun joined
[00:59] <grondilu> I suspect this was the module that prevented reboostrat to work earlier

[01:03] *** PZt joined
[01:05] * grondilu failed installing panda:

[01:05] <grondilu> => Testing panda

[01:05] <grondilu> t/panda/builder.t .... ok   

[01:05] <grondilu> t/panda/common.t ..... ok   

[01:05] <grondilu> t/panda/ecosystem.t .. ok     

[01:05] <grondilu> t/panda/fetcher.t .... ok   

[01:05] <grondilu> t/panda/installer.t .. Failed 1/8 subtests 

[01:06] <grondilu> t/panda/installer.t (Wstat: 0 Tests: 8 Failed: 1) Failed test:  3

[01:06] <grondilu> Files=7, Tests=49, 38 wallclock secs ( 0.17 usr  0.03 sys + 33.40 cusr  1.72 csys = 35.32 CPU)

[01:06] <grondilu> Result: FAIL

[01:08] *** anuby joined
[01:09] <flussence> test #3 is file_exists_ok "$destdir/lib/foo.pir", 'pir installed';

[01:09] *** hypolin joined
[01:09] <flussence> which means precompilation is failing

[01:12] *** bacek joined
[01:19] * grondilu wipes out the panda directory and tries to reinstall from scratch

[01:23] *** alec left
[01:32] *** crazed- joined
[01:32] *** crazedpsyc left
[01:33] *** crazed- is now known as crazedpsyc

[01:42] * grondilu failed again and gives up.

[01:43] *** japhb_ left
[02:02] *** thou left
[02:09] *** Guest86237 left
[02:21] *** whiteknight left
[02:22] *** FROGGS_ joined
[02:26] *** FROGGS left
[02:44] *** jokar left
[02:45] *** grondilu left
[02:47] *** am0c left
[02:55] *** alc joined
[02:55] *** jokar joined
[03:36] *** thou joined
[03:37] *** zpps joined
[03:37] *** dayangkun left
[03:37] *** dayangkun_ joined
[03:38] *** zpps left
[03:46] *** dayangkun_ is now known as dayangkun

[03:47] *** cognominal joined
[03:48] *** cognominal left
[03:48] *** cognominal joined
[03:51] *** orafu left
[03:51] *** OuLouFu joined
[03:51] *** OuLouFu is now known as orafu

[03:59] *** alec__ joined
[04:13] *** MikeFair_ joined
[04:16] *** erkan left
[04:27] *** _jaldhar_ joined
[04:27] *** aindilis joined
[04:29] * skids_ has a laugh at munificent/vigil

[04:38] *** erkan joined
[04:41] *** _jaldhar_ left
[04:43] *** _jaldhar_ joined
[05:22] *** daniel-s joined
[05:23] *** daniel-s left
[05:24] *** telex left
[05:25] *** telex joined
[05:26] *** cognominal left
[05:27] *** cognominal joined
[05:29] *** telex left
[05:30] *** daniel-s joined
[05:38] *** telex joined
[05:39] *** bluescreen100 left
[05:46] *** jokar left
[05:47] *** jokar joined
[05:50] *** tokuhiro_ joined
[05:50] *** cognominal left
[05:56] *** tokuhiro_ left
[05:57] *** raiph left
[06:00] *** kaleem joined
[06:06] *** immortal joined
[06:06] *** atrodo_ joined
[06:06] *** aindilis` joined
[06:09] *** amkrankr1leuen joined
[06:13] *** crazed- joined
[06:14] *** slayer101_ joined
[06:14] *** kaleem left
[06:14] *** erkan left
[06:14] *** aindilis left
[06:14] *** dayangkun left
[06:14] *** FROGGS_ left
[06:14] *** crazedpsyc left
[06:14] *** bacek left
[06:14] *** hypolin left
[06:14] *** anuby left
[06:14] *** amkrankruleuen left
[06:14] *** skids_ left
[06:14] *** BooK left
[06:14] *** atrodo left
[06:14] *** crazed- is now known as crazedpsyc

[06:17] *** FROGGS_ joined
[06:17] *** dayangkun joined
[06:18] *** bacek joined
[06:18] *** BooK joined
[06:18] *** kaleem joined
[06:20] *** hypolin joined
[06:20] *** skids_ joined
[06:20] *** hypolin left
[06:20] *** hypolin joined
[06:26] *** slayer101_ left
[06:27] *** slayer101_ joined
[06:29] *** wk joined
[06:29] *** wk is now known as Guest56207

[06:34] *** hypolin left
[06:34] *** skids_ left
[06:34] *** skids_ joined
[06:34] *** hypolin joined
[06:37] *** werwerwer left
[06:47] *** immortal left
[06:47] *** erkan joined
[06:47] *** erkan left
[06:47] *** erkan joined
[07:16] *** Guest56207 left
[07:25] *** FROGGS_ left
[07:27] *** alec__ left
[07:28] *** alec joined
[07:32] *** _jaldhar_ left
[07:36] *** rhr joined
[07:47] *** anuby joined
[07:54] *** kst` joined
[07:58] *** kst left
[07:59] *** SamuraiJack joined
[08:08] *** anuby left
[08:28] *** FROGGS joined
[08:35] *** Ultali joined
[08:47] *** kaleem left
[09:01] *** bitonic joined
[09:02] *** kaleem joined
[09:07] <FROGGS> morning

[09:13] <tadzik> hello #perl6

[09:14] <FROGGS> hi tadzik 

[09:15] *** alec left
[09:22] <jnthn> morning o/

[09:26] * nwc10 wonders what wonders jnthn has in store for us today

[09:26] *** alec joined
[09:26] <nwc10> is it heresy to use a Makefile for compiling Java? :-)

[09:27] <nwc10> (I'm reading the code but it isn't something I can add to)

[09:29] <tadzik> nwc10: if it is, them I'm quilty too ;)

[09:29] <tadzik> I refused to ever learned eclipse and every Java project I wrote was in vim and built with Makefiles

[09:30] <tadzik> bah, I can't english

[09:33] <jnthn> nwc10: I suspect we'll end up with a Makefile fwiw :)

[09:34] <jnthn> (And if you were asking for permission to create one, go for it. :))

[09:35] <arnsholt> tadzik: Ant isn't too terrible actually, even though it's XML

[09:35] *** kresike joined
[09:35] <kresike> hello all you happy perl6 people

[09:35] <timotimo> maybe a makefile-to-ant compiler could be written in perl6.

[09:40] <tadzik> real-world observations seem to indicate that writing build systems makes you hair go curly

[09:42] <timotimo> i'd like my hair to no longer be flat :| i can't wear it short comfortably

[09:42] *** Patterner left
[09:42] *** Psyche^ joined
[09:42] *** Psyche^ is now known as Patterner

[09:42] *** ponbiki joined
[09:44] <tadzik> but you can tie it when it's long

[09:45] <tadzik> it's a terrible mess if they're not straight

[09:45] <timotimo> oh, that's true.

[09:45] * moritz has some experience with that :-)

[09:46] *** dakkar joined
[09:49] *** alec left
[09:49] *** alec joined
[09:53] *** daniel-s_ joined
[09:54] *** daniel-s__ joined
[09:57] *** daniel-s left
[09:59] *** daniel-s_ left
[09:59] *** thou_ joined
[10:00] *** thou left
[10:04] *** hypolin left
[10:06] *** SmokeMachine joined
[10:07] *** slayer101_ left
[10:35] *** dayangkun_ joined
[10:39] *** dayangkun left
[10:45] <FROGGS> haha

[10:47] <ph1ur3> sup

[10:52] <FROGGS> $work :/

[10:53] <tadzik> nonono. It's spelled "hooray, $work!"

[10:53] <FROGGS> tadzik: no, it's not ;o)

[10:54] * tadzik fights with Perl 5

[10:55] <arnsholt> I just fixed a bit of Perl code I wrote. It used a 5.14 feature, but the people who were going to use the had perl < 5.14. Oops =)

[10:55] <arnsholt> Easily fixed though

[10:55] <tadzik> #moose helped me fix http://scsys.co.uk:8002/222434 but no one know why it works that way :P

[10:58] *** thou_ left
[11:06] *** PZt left
[11:18] *** marloshouse left
[11:19] *** marloshouse joined
[11:22] *** alc left
[11:28] *** ph1ur3 left
[11:44] *** daniel-s__ is now known as daniel-s

[11:46] *** bitonic left
[11:48] *** bitonic joined
[11:54] *** _jaldhar_ joined
[11:55] *** pmurias joined
[11:56] *** erkan left
[11:59] <pmurias> jnthn: how should I put __6MODEL_CORE__? there seems to be 2 objects there but I find references to a STable at index 2

[12:00] <pmurias> jnthn: maybe that should be described in the serialization format docs?

[12:12] <jnthn> pmurias: Did you miss https://github.com/perl6/nqp/blob/master/src/6model/knowhow_bootstrapper.c#L331 maybe?

[12:12] <jnthn> pmurias: Yes, would probably be good to document that. Please create an nqp ticket for it.

[12:21] *** brrt joined
[12:28] *** telex left
[12:29] *** ServerSage joined
[12:35] *** erkan joined
[12:35] *** erkan left
[12:35] *** erkan joined
[12:43] *** skids_ left
[12:57] *** brrt left
[12:58] *** brrt joined
[13:04] *** pmurias left
[13:23] <tadzik> look what I found in my feather $HOME :) https://gist.github.com/4483793

[13:24] <tadzik> I have to get back to that idea

[13:24] *** kaleem left
[13:25] <tadzik> then emmentaler could easily say if (and why not) all the Star modules are functional

[13:25] * [Coke] yawns

[13:38] <timotimo> emmentaler runs all the tests from the ecosystem regularly?

[13:40] <tadzik> er, it's supposed to :P

[13:40] *** bitonic left
[13:40] <timotimo> what stops you from deploying it? would be good to have that data visible on modules.perl6.org, no?

[13:40] <tadzik> there seems to be a misunderstanding between cron and sergot++ :)

[13:41] <tadzik> http://feather.perl6.nl/~sergot/modules/ says (last update 2012-12-13T05:40:02-0100).

[13:41] <tadzik> the coloured circles on the right show the smoketest status

[13:43] <timotimo> i think it would be nice to get the output from panda there, too. but what do i know? :P

[13:44] <tadzik> well volunteered! :)

[13:44] <timotimo> er, let me see what i can do

[13:44] <tadzik> it's all on https://github.com/sergot/modules.perl6.org, I think

[13:45] <tadzik> it doesn't get the full output, but it gets an X::Panda object for the failed builds

[13:45] <tadzik> I started working on TAP harness some time ago, to make more info available, but I'm not full of tuits recently to deploy it

[13:45] *** bitonic joined
[13:46] <timotimo> %log{$p} = gen-result($! // 'chocolate cake');  -  chocolate cake? :)

[13:46] <tadzik> er, I wrote that? :D

[13:47] <tadzik> . o O ( why am I surprised )

[13:48] <tadzik> yeah, I see it :)

[13:48] <tadzik> yeah, it's a "not an X::Panda value" :)

[13:54] *** bitonic left
[13:56] *** mberends joined
[13:56] *** dayangkun_ is now known as dayangkun

[13:57] *** dayangkun left
[13:57] *** mberends left
[13:57] *** dayangkun joined
[14:01] *** wk joined
[14:02] *** wk is now known as Guest70750

[14:10] *** bitonic joined
[14:14] *** kaleem joined
[14:27] *** PacoAir joined
[14:30] *** telex joined
[14:41] *** skids joined
[15:05] *** mtk joined
[15:06] *** cognominal joined
[15:07] *** stopbit joined
[15:09] *** PacoAir left
[15:10] *** PacoAir joined
[15:13] *** colomon left
[15:26] *** kaleem left
[15:27] *** kaleem joined
[15:27] *** kaleem left
[15:37] *** colomon joined
[15:42] *** PacoAir left
[15:44] *** dayangkun left
[15:51] *** amkrankr1leuen is now known as amkrankruleuen

[15:51] *** amkrankruleuen left
[15:51] *** amkrankruleuen joined
[15:58] *** kresike left
[16:00] *** bluescreen10 joined
[16:01] *** dayangkun joined
[16:03] *** kst` is now known as kst

[16:12] <dalek> rakudo-js: 4cf209c | (Paweł Murias)++ | / (8 files):

[16:12] <dalek> rakudo-js: split the setting into parts stored in src/core

[16:12] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/4cf209c686

[16:12] <dalek> rakudo-js: 1d1e0a7 | (Paweł Murias)++ | / (3 files):

[16:12] <dalek> rakudo-js: Pass test 53.

[16:12] <dalek> rakudo-js: Setup an initial sc, fix method_cache deserialisation.

[16:12] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/1d1e0a7620

[16:14] *** kresike joined
[16:16] *** kresike left
[16:26] *** brrt left
[16:34] <jnthn> pmurias++

[16:35] *** kaare_ joined
[16:38] *** sqirrel joined
[16:52] *** Chillance joined
[16:55] *** FROGGS left
[16:59] *** FROGGS_ joined
[17:00] *** FROGGS_ left
[17:00] *** FROGGS[mobile] joined
[17:05] *** MayDaniel joined
[17:12] *** yakshavr left
[17:19] *** cognominal left
[17:25] *** cognominal joined
[17:29] *** jaldhar joined
[17:30] *** _jaldhar_ left
[17:32] <timotimo> i recall having asked this before, but how do i get the stdout of a shell command? (and can i also get the return code, as well?)

[17:35] <FROGGS[mobile]> I believe there is a module for that

[17:35] <FROGGS[mobile]> look modules.perl6.org and search for shell

[17:36] <FROGGS[mobile]> *at*

[17:36] <colomon> that's builtin to p6

[17:36] <colomon> rn: say qx/ls/

[17:36] <p6eval> rakudo ffde43: OUTPUT«qx, qqx is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting:2␤  in sub QX at src/RESTRICTED.setting:9␤  in block  at /tmp/9svWPqefEV:1␤␤»

[17:36] <p6eval> ..niecza v24-16-g89e47b6: OUTPUT«Unhandled exception: rungather may not be used in safe mode␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (rungather @ 0) ␤  at /tmp/6WBdgcQQxx line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4218 (ANON @ 3) ␤  at /home/p6eval/niec…

[17:36] <colomon> niecza> say qx/ls/

[17:36] <colomon> 4th.pl

[17:37] <colomon> Bag.pl

[17:37] <colomon> etc

[17:37] <colomon> same works in rakudo

[17:37] <FROGGS[mobile]> colomon: what about stderr,l and returncode?

[17:37] <timotimo> huh. i did q:x{echo "foo bar"} and the result was just 0

[17:38] <timotimo> oh, haha, i re-used $foo and put my in front, that can't work of course

[17:38] <colomon> FROGGS[mobile]: it's not supposed to capture stderr, but I believe it does in rakudo at least.

[17:38] <FROGGS[mobile]> colomon wrote qx, not q:x... is that a difference?

[17:39] <timotimo> doesn't seem so?

[17:39] *** _jaldhar joined
[17:40] *** jaldhar left
[17:40] <timotimo> i'd like to teach sergots modules.perl6.org website to display the output of the test or build process when a module didn't make it through installation and testing

[17:41] <timotimo> but i'd need to either parse "prove"s output to see if the result was success or failure or find a way to both capture stdout and get the return value.

[17:41] *** FROGGS joined
[17:42] <FROGGS> thats better than phone

[17:42] <timotimo> but then who was phone?

[17:42] <FROGGS> ?

[17:42] <FROGGS> I mean typing on the pc is better than on my android phone

[17:43] *** FROGGS[mobile] left
[17:43] <timotimo> ;)

[17:44] <timotimo> it was an obscure meme reference

[17:44] <FROGGS> well, post the image link next time ;o)

[17:46] <jnthn> qx and q:x are the same, fwiw

[17:46] <jnthn> q followed by any quote modifier is the same as q :the_mod

[17:46] <jnthn> Thus qw and q:w are the same too, etc.

[17:47] <FROGGS> ahh, Shell::Command is not what we need here: https://github.com/tadzik/perl6-File-Tools/blob/master/lib/Shell/Command.pm

[17:47] <FROGGS> jnthn: cool, thanks

[17:48] <FROGGS> IMO it makes sense that qx{} returns a parcel that contains STDOUT, STDERR, and the retcode, and stringifies to STDOUT only

[17:48] <FROGGS> but I guess thats not the way it is specced :/

[17:48] *** cognominal left
[17:49] *** spider-mario joined
[17:49] <timotimo> is that how it happens or is that how you'd like it the most?

[17:49] <FROGGS> thats how I would like it

[17:50] <FROGGS> since I need perl 5's Capture::Tiny and friends

[17:50] <timotimo> sounds sensible, albeit a little bit non-obvious

[17:51] <jnthn> Or we could return an object ;)

[17:51] <FROGGS> that follows the rule "keep simple things simple"... I like that rule...

[17:51] <FROGGS> or that

[17:51] <FROGGS> lunch &

[17:52] <timotimo> so, there's not really a way to do it thus far, except for adding > /tmp/foobar.txt into the shell command and reading that?

[18:01] *** PacoAir joined
[18:03] *** dakkar left
[18:09] *** Guest70750 left
[18:23] *** PacoAir left
[18:26] <FROGGS> 1>STDOUT.txt 2>STDERR.txt

[18:26] <FROGGS> timotimo: but I have no idea how to get the return code

[18:29] <colomon> use shell instead of qx

[18:30] <colomon> rn: my $result = shell "ls 1>STDOUT.txt 2>STDERR.txt"

[18:30] <p6eval> rakudo ffde43: OUTPUT«shell is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting:2␤  in sub shell at src/RESTRICTED.setting:7␤  in block  at /tmp/bae9brDMqh:1␤␤»

[18:30] <p6eval> ..niecza v24-16-g89e47b6: OUTPUT«Potential difficulties:␤  $result is declared but not used at /tmp/hACx1Eqska line 1:␤------> my ⏏$result = shell "ls 1>STDOUT.txt 2>STDER␤␤Unhandled exception: shell may not be used in safe mode␤  at /home/p6eval/niecza/lib/CORE.setting…

[18:35] * colomon does not know if shell fully works under both niecza and rakudo, but it does appear to at least shell out the command on both systems.

[18:36] <masak> evening, #perl6

[18:36] <diakopter> o/

[18:37] <flussence> huh, panda's working normally today...

[18:44] *** PacoAir joined
[18:45] *** PZt joined
[18:53] <dalek> nqp: 6a9828f | rurban++ | tools/build/Makefile.in:

[18:53] <dalek> nqp: [GH #71] Add -L. -X. to parrot for newer parrots.

[18:53] <dalek> nqp: 

[18:53] <dalek> nqp: See https://github.com/parrot/parrot/issues/368

[18:53] <dalek> nqp: review: https://github.com/perl6/nqp/commit/6a9828fbd1

[18:53] <dalek> nqp: c52df3f | rurban++ | tools/build/Makefile.in:

[18:53] <dalek> nqp: Merge branch 'dot-libpath-gh71'

[18:53] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c52df3fcba

[19:02] <FROGGS> ya, shell gives you the return code

[19:06] <FROGGS> in which synopsis do I have to look for qx{} ?

[19:07] <FROGGS> I find it hard find the right one

[19:11] <FROGGS> found http://feather.perl6.nl/syn/S02.html#Adverbs_on_quotes

[19:11] <FROGGS> q:x         q :exec           Execute as command and return results

[19:12] <FROGGS> they dont say how it should be returned

[19:12] * FROGGS .oO( MUHAAHAAHAA )

[19:13] <flussence> ...that's a good point. It could be binary.

[19:13] <FROGGS> r: class A { method Str { "Uhh" } }; my $a = A.new; say $a; say ~$a;

[19:13] <p6eval> rakudo ffde43: OUTPUT«A.new()␤Uhh␤»

[19:14] <FROGGS> r: class A { method Str { "Uhh" } }; my $a = A.new; say "$a"; say ~$a;

[19:14] <p6eval> rakudo ffde43: OUTPUT«Uhh␤Uhh␤»

[19:15] <FROGGS> but it would break existing code if it would return an object

[19:25] *** ismail_ joined
[19:46] *** SamuraiJack left
[19:49] *** Pleiades` left
[19:54] *** spider-mario left
[19:55] *** Pleiades` joined
[19:55] *** spider-mario joined
[20:00] *** spider-mario left
[20:03] *** SmokeMachine left
[20:15] *** wk joined
[20:15] *** wk is now known as Guest21322

[20:18] *** colomon left
[20:19] *** cognominal joined
[20:20] *** _jaldhar left
[20:22] *** _jaldhar joined
[20:28] *** avar joined
[20:28] *** avar left
[20:28] *** avar joined
[20:29] *** bitonic left
[20:30] *** colomon joined
[20:41] *** bitonic joined
[20:44] *** ismail_ left
[20:51] *** Chillance left
[21:09] <masak> 'night, #perl6

[21:11] <dalek> roast: 51d98f3 | moritz++ | S06-multi/proto.t:

[21:11] <dalek> roast: RT #116164: proto signature was not checked on dispatch

[21:11] <dalek> roast: review: https://github.com/perl6/roast/commit/51d98f3bb8

[21:12] <moritz> lives_ok { $*PROGRAM_NAME = "coldfusion" }, '$*PROGRAM_NAME is assignable';

[21:13] <moritz> I can kinda guess who wrote that test :-)

[21:16] <diakopter> who?

[21:16] <moritz> [Coke]++

[21:18] <dalek> roast: e140846 | moritz++ | S02-magicals/progname.t:

[21:18] <dalek> roast: RT #116164: $*PROGRAM_NAME reported wrong argument

[21:18] <dalek> roast: review: https://github.com/perl6/roast/commit/e1408465d9

[21:18] <dalek> nqp-jvm-prep: 20ed33c | jnthn++ | / (7 files):

[21:18] <dalek> nqp-jvm-prep: Provide some HLL config infrastructure.

[21:18] <dalek> nqp-jvm-prep: 

[21:18] <dalek> nqp-jvm-prep: This will allow creating correct box types and slurpy array/hash types

[21:18] <dalek> nqp-jvm-prep: in NQP, but using the BOOT types in NQP's MOP until the others are

[21:18] <dalek> nqp-jvm-prep: made available.

[21:18] <dalek> nqp-jvm-prep: review: https://github.com/jnthn/nqp-jvm-prep/commit/20ed33c40c

[21:18] <dalek> nqp-jvm-prep: a760822 | jnthn++ | t/qast_arguments.t:

[21:18] <dalek> nqp-jvm-prep: Test for slurpy positional arguments.

[21:18] <dalek> nqp-jvm-prep: review: https://github.com/jnthn/nqp-jvm-prep/commit/a760822aad

[21:18] <dalek> nqp-jvm-prep: c56fc92 | jnthn++ | lib/QAST/JASTCompiler.nqp:

[21:18] <dalek> nqp-jvm-prep: Code-gen for slurpy params.

[21:18] <dalek> nqp-jvm-prep: review: https://github.com/jnthn/nqp-jvm-prep/commit/c56fc9254f

[21:18] <dalek> nqp-jvm-prep: 7566191 | jnthn++ | src/org/perl6/nqp/runtime/GlobalContext.java:

[21:18] <dalek> nqp-jvm-prep: Fix a GlobalContext build-up bug.

[21:18] <dalek> nqp-jvm-prep: review: https://github.com/jnthn/nqp-jvm-prep/commit/756619148e

[21:18] <dalek> nqp-jvm-prep: 97b6a66 | jnthn++ | src/org/perl6/nqp/runtime/Ops.java:

[21:18] <dalek> nqp-jvm-prep: Implement posslurpy op.

[21:18] <dalek> nqp-jvm-prep: 

[21:18] <dalek> nqp-jvm-prep: Positional slurpy params now work.

[21:18] <dalek> nqp-jvm-prep: review: https://github.com/jnthn/nqp-jvm-prep/commit/97b6a665ac

[21:20] <moritz> r: say <<<\>'n'>>.perl

[21:20] <p6eval> rakudo ffde43: OUTPUT«("<>", "n")␤»

[21:21] * diakopter remembers doing that one

[21:21] <moritz> why is that two tokens?

[21:21] * moritz expected one

[21:21] *** kaare_ left
[21:21] <jnthn> Shell words treats quotes specially

[21:21] <diakopter> I don't remember which way the bug expects it to be :)

[21:21] <diakopter> er, test

[21:21] <moritz> jnthn: ah, that explains it

[21:22] <jnthn> So you can do like

[21:22] <jnthn> r: << 'foo bar' baz >>.perl.say

[21:22] <p6eval> rakudo ffde43: OUTPUT«("foo bar", "baz")␤»

[21:22] <moritz> r: << 'foo bar'baz >>.perl.say

[21:22] <p6eval> rakudo ffde43: OUTPUT«("foo bar", "baz")␤»

[21:23] <jnthn> r: << 'foo bar''baz' >>.perl.say

[21:23] <p6eval> rakudo ffde43: OUTPUT«("foo bar", "baz")␤»

[21:23] <jnthn> It's behaving the way I expect, but my expectations may be off... :)

[21:24] <dalek> roast: aa20719 | moritz++ | S02-literals/quoting.t:

[21:24] <dalek> roast: RT #115272: texas quote edge case

[21:24] <dalek> roast: review: https://github.com/perl6/roast/commit/aa20719dfc

[21:24] <moritz> I'm testing it as-is

[21:24] <moritz> if somebody expects differently, ey can open a new bug report :-)

[21:24] <diakopter> I remember rakudo did it differently from niecza

[21:24] <jnthn> It's hard to tell either way from STD, I'm not aware of the spec saying anything about this case, and I'm pretty sure Niecza doesn't handle the << ... >> form yet really.

[21:26] <moritz> r: BEGIN { try 0 }; say "alive"

[21:26] <p6eval> rakudo ffde43: OUTPUT«(timeout)»

[21:26] <jnthn> That's...weird.

[21:26] <jnthn> r: try 0

[21:26] <p6eval> rakudo ffde43:  ( no output )

[21:26] <moritz> r: BEGIN { CATCH { } }; say "alive"

[21:26] <p6eval> rakudo ffde43: OUTPUT«alive␤»

[21:26] <moritz> even weirder :-)

[21:27] <jnthn> r: eval 'try 0'

[21:27] <p6eval> rakudo ffde43:  ( no output )

[21:27] <moritz> that's https://rt.perl.org/rt3/Ticket/Display.html?id=115502 fwiw

[21:27] <jnthn> r: BEGIN try 0

[21:27] <moritz> no luck with -ll-exception, fwiw

[21:27] <p6eval> rakudo ffde43: OUTPUT«(timeout)»

[21:27] * jnthn wonders where on earth it hangs...

[21:28] <jnthn> r: BEGIN { say 1; try 0; say 2; }; say "alive"

[21:28] <p6eval> rakudo ffde43: OUTPUT«(timeout)1␤»

[21:28] <moritz> so it hangs at run time

[21:28] <jnthn> r: BEGIN { say 1; try say 1.5; say 2; }; say "alive"

[21:29] <p6eval> rakudo ffde43: OUTPUT«(timeout)1␤1.5␤»

[21:29] <moritz> r: BEGIN { if 0 { try 1 }; say 'alive' }

[21:29] <p6eval> rakudo ffde43: OUTPUT«alive␤»

[21:29] <diakopter> r: eval BEGIN { say 1; eval 'try 0'; say 2; }; say "alive"

[21:29] <p6eval> rakudo ffde43: OUTPUT«1␤2␤Cannot call 'eval'; none of these signatures match:␤:(Str $code, :lang(:$lang) = { ... }, PseudoStash :context(:$context))␤␤  in block  at /tmp/qPdC5Olm6z:1␤␤»

[21:29] <diakopter> r: BEGIN { say 1; eval 'try 0'; say 2; }; say "alive"

[21:29] <p6eval> rakudo ffde43: OUTPUT«1␤2␤alive␤»

[21:29] <jnthn> Very weird

[21:30] <moritz> r: BEGIN { try die 42; say "alive" }

[21:30] <p6eval> rakudo ffde43: OUTPUT«(timeout)»

[21:30] <tadzik> r: BEGIN { say 1; CATCH {} }; say 2

[21:30] <p6eval> rakudo ffde43: OUTPUT«1␤2␤»

[21:30] <diakopter> r: BEGIN { say 1; eval 'die'; say 2; }; say "alive"

[21:30] <p6eval> rakudo ffde43: OUTPUT«1␤===SORRY!===␤␤»

[21:31] <diakopter> haha

[21:31] <colomon> how do I say "not at the beginning of a line" in a regex?

[21:31] <diakopter> .

[21:31] <moritz> colomon: <!before ^>

[21:32] <moritz> erm

[21:32] <jnthn> ^^

[21:32] <jnthn> ?

[21:32] <moritz> <!before ^^>

[21:32] <colomon> this is on the output of lines, so ^ and ^^ should be the same, right?

[21:32] <colomon> moritz++ jnthn++

[21:33] <moritz> if the string is one line, then it's the same

[21:33] <colomon> right

[21:34] * colomon is trying to write a script to translate a STEP file into an HTML file for ease of browsing.

[21:41] *** FROGGS left
[21:42] <diakopter> r: BEGIN { say 1; eval 'die'; say 2; CATCH { say 3 } }; say "alive"

[21:42] <p6eval> rakudo ffde43: OUTPUT«1␤===SORRY!===␤Cannot assign to a non-container␤»

[21:43] <diakopter> <.<.

[21:43] <diakopter> r: BEGIN { say 1; eval 'die'; say 2 }; say "alive"

[21:43] <p6eval> rakudo ffde43: OUTPUT«1␤===SORRY!===␤␤»

[21:44] <colomon> moritz, jnthn: so if I wanted to specify "is not followed by an equals sign" that would be something like <!after "=">?

[21:44] *** nyuszika7h left
[21:45] <flussence> I think I've found another precomp bug, but golfing it down is really hard so I'll just throw this out there while I figure that out...

[21:45] <flussence> so here's a Buf: https://github.com/tadzik/Bailador/blob/master/t/05-post-content.t#L11

[21:45] <flussence> when there's pir files involved, at some point that Buf forgets it has a .decode method and I end up with a runtime error.

[21:46] *** nyuszika7h joined
[21:47] <tadzik> oh

[21:48] <tadzik> that's too bad

[21:50] <colomon> actually it's <!before "="> there too, correct? # off in his own world...

[21:51] <jnthn> colomon: If it should not be the next thing, then !before, yes

[21:51] <dalek> nqp-jvm-prep: 75246ba | jnthn++ | src/org/perl6/nqp/runtime/ (2 files):

[21:51] <dalek> nqp-jvm-prep: Refactor named param ops in prep for slurpy.

[21:51] <dalek> nqp-jvm-prep: review: https://github.com/jnthn/nqp-jvm-prep/commit/75246bab0f

[21:51] <dalek> nqp-jvm-prep: 84b1d69 | jnthn++ | t/qast_arguments.t:

[21:51] <dalek> nqp-jvm-prep: Add a test for slurpy named params.

[21:51] <dalek> nqp-jvm-prep: review: https://github.com/jnthn/nqp-jvm-prep/commit/84b1d69638

[21:51] <dalek> nqp-jvm-prep: 331bb37 | jnthn++ | src/org/perl6/nqp/runtime/Ops.java:

[21:51] <dalek> nqp-jvm-prep: Implement slurpy named params.

[21:51] <dalek> nqp-jvm-prep: review: https://github.com/jnthn/nqp-jvm-prep/commit/331bb37b3b

[21:51] <colomon> jnthn: danke

[21:57] *** stevan_ left
[21:58] *** stevan_ joined
[22:00] *** skids left
[22:06] *** kivutar joined
[22:06] <flussence> wait, I think I screwed up and this error's somewhere else entirely...

[22:07] <flussence> request.env seems to be undefined here using precomp - https://github.com/tadzik/Bailador/blob/master/t/05-post-content.t#L7

[22:07] *** sqirrel left
[22:11] *** spider-mario joined
[22:12] *** Guest21322 left
[22:13] <tadzik> hmmm

[22:13] <tadzik> I've no idea

[22:15] *** colomon left
[22:19] *** cognominal left
[22:30] *** colomon joined
[22:34] *** cognominal joined
[22:44] *** MayDaniel left
[22:51] *** bluescreen10 left
[22:53] *** bluescreen10 joined
[22:57] <dalek> nqp: cd827db | jnthn++ | src/QAST/Operations.nqp:

[22:57] <dalek> nqp: Add nqp:: mappings for some 6model operations.

[22:57] <dalek> nqp: review: https://github.com/perl6/nqp/commit/cd827db609

[22:57] <dalek> nqp: 591e59b | jnthn++ | src/stage0/ (9 files):

[22:57] <dalek> nqp: Update bootstrap to get new nqp:: ops.

[22:57] <dalek> nqp: review: https://github.com/perl6/nqp/commit/591e59b027

[22:57] <dalek> nqp: 808a0d9 | jnthn++ | src/ (3 files):

[22:57] <dalek> nqp: Some more pir:: => nqp:: in the MOP.

[22:57] <dalek> nqp: review: https://github.com/perl6/nqp/commit/808a0d91d0

[22:58] *** whiteknight joined
[23:04] *** spider-mario left
[23:05] *** PacoAir left
[23:08] *** Bucciarati left
[23:09] *** stopbit left
[23:09] *** avar left
[23:11] *** bluescreen10 left
[23:12] *** avar joined
[23:12] *** avar left
[23:12] *** avar joined
[23:12] *** avar left
[23:13] *** avar joined
[23:13] *** avar left
[23:13] *** avar joined
[23:13] <jnthn> 'night, #perl6

[23:13] <diakopter> o/

[23:19] *** Bucciarati joined
[23:29] *** Targen joined
[23:32] *** mtk left
[23:37] *** Targen left
[23:41] *** [particle] left
[23:47] *** kivutar left
