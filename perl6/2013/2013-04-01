[00:06] <BenGoldberg> p6: say True.cos

[00:06] <p6eval> rakudo ba5e04: OUTPUT«0.54030230586814␤»

[00:06] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«0.54030230586813977␤»

[00:07] <diakopter> p6: say False.cotan

[00:07] <p6eval> rakudo ba5e04: OUTPUT«Divide by zero␤  in method cotan at src/gen/CORE.setting:3564␤  in method cotan at src/gen/CORE.setting:2997␤  in method cotan at src/gen/CORE.setting:2255␤  in block  at /tmp/GuNkILSeYI:1␤␤»

[00:07] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«Inf␤»

[00:08] <diakopter> niecza++

[00:08] <diakopter> colomon++

[00:08] <diakopter> (I assume)

[00:10] *** thou_ left
[00:10] *** thou joined
[00:15] <BenGoldberg> Actually, I think that the division by zero might be more correct.  Possibly.

[00:16] <pmichaud> good afternoon, #perl6.  Happy Easter.  :-)

[00:16] <BenGoldberg> p6: say 1/0

[00:16] <p6eval> rakudo ba5e04: OUTPUT«Divide by zero␤  in sub infix:<div> at src/gen/CORE.setting:3235␤  in sub infix:<div> at src/gen/CORE.setting:2886␤  in method floor at src/gen/CORE.setting:8460␤  in method Str at src/gen/CORE.setting:8478␤  in method Str at src/gen/CORE.setting:882␤  in method gi…

[00:16] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«Inf␤»

[00:16] <FROGGS> hi pmichaud 

[00:18] <BenGoldberg> Should division by zero throw an exception, or return infinity?

[00:23] <pmichaud> it actually returns Failure in Rakudo.

[00:24] <pmichaud> I think TimToady++ would ask what do you want to happen if the division by zero occurs in the guided missile controller :)

[00:24] <pmichaud> p6:  say (1/0).WHAT

[00:24] <p6eval> rakudo 2441b0: OUTPUT«(Rat)␤»

[00:24] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«Num()␤»

[00:24] <pmichaud> p6:  say (1/0).Num.WHAT

[00:24] <p6eval> niecza v24-35-g5c06e28: OUTPUT«Num()␤»

[00:24] <p6eval> ..rakudo 2441b0: OUTPUT«(Num)␤»

[00:24] <pmichaud> hmm, interesting.

[00:25] <diakopter> p6:  say (1/0).Num

[00:25] <p6eval> rakudo 2441b0, niecza v24-35-g5c06e28: OUTPUT«Inf␤»

[00:25] <pmichaud> p6: say 1/0e0

[00:25] <p6eval> rakudo 2441b0: OUTPUT«Divide by zero␤  in sub infix:</> at src/gen/CORE.setting:3689␤  in sub infix:</> at src/gen/CORE.setting:2881␤  in sub infix:</> at src/gen/CORE.setting:3069␤  in sub infix:</> at src/gen/CORE.setting:2881␤  in block  at /tmp/sbjVzXktkV:1␤␤»

[00:25] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«Inf␤»

[00:25] <pmichaud> p6: say (1/0e0).gist

[00:25] <p6eval> niecza v24-35-g5c06e28: OUTPUT«Inf␤»

[00:25] <p6eval> ..rakudo 2441b0: OUTPUT«Divide by zero␤  in sub infix:</> at src/gen/CORE.setting:3689␤  in sub infix:</> at src/gen/CORE.setting:2881␤  in sub infix:</> at src/gen/CORE.setting:3069␤  in sub infix:</> at src/gen/CORE.setting:2881␤  in block  at /tmp/TFaEZo4NRO:1␤␤»

[00:25] <diakopter> p6:  say (1 div (my \a=0)).Num

[00:25] <p6eval> niecza v24-35-g5c06e28: OUTPUT«Unhandled exception: System.DivideByZeroException: Division by zero␤  at Builtins.divop (Niecza.Constants c, Int32 opc, Niecza.Variable a1, Niecza.Variable a2) [0x00000] in <filename unknown>:0 ␤  at CORE.6a5f7f48-6eb9-4551-ac86-f520337465e6.C1453infix:<di…

[00:25] <pmichaud> p6: say (1/0e0).WHAT

[00:26] <p6eval> ..rakudo 2441b0: OUTPUT«Divide by zero␤  in sub infix:<div> at src/gen/CORE.setting:3235␤  in sub infix:<div> at src/gen/CORE.setting:2886␤  in block  at /tmp/o0OIx7PxSv:1␤␤»

[00:26] <p6eval> rakudo 2441b0: OUTPUT«Divide by zero␤  in sub infix:</> at src/gen/CORE.setting:3689␤  in sub infix:</> at src/gen/CORE.setting:2881␤  in sub infix:</> at src/gen/CORE.setting:3069␤  in sub infix:</> at src/gen/CORE.setting:2881␤  in block  at /tmp/6bb18Cjqw3:1␤␤»

[00:26] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«Num()␤»

[00:26] <pmichaud> maybe rakudo's failure mode was changed then.

[00:27] <diakopter> p6: say (1e0 div 0e0).WHAT

[00:27] <p6eval> rakudo 2441b0: OUTPUT«Cannot call 'infix:<div>'; none of these signatures match:␤:(Int:D \a, Int:D \b)␤:(int $a, int $b)␤  in sub infix:<div> at src/gen/CORE.setting:2886␤  in block  at /tmp/LPrQ5i43m0:1␤␤»

[00:27] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«Unhandled exception: System.DivideByZeroException: Division by zero␤  at Niecza.BigInteger.DivRem (BigInteger dividend, BigInteger divisor, Niecza.BigInteger& remainder) [0x00000] in <filename unknown>:0 ␤  at Builtins.divop (Niecza.Constants c, Int32 opc,…

[00:28] <diakopter> at some point, I'd expect it to coerce..

[00:28] <diakopter> esp if it recognizes the num is exactly an int

[00:30] *** thou left
[00:30] *** thou joined
[00:35] *** rindolf joined
[00:41] *** colomon joined
[00:51] *** thou_ joined
[00:51] *** thou left
[00:53] *** countley left
[00:54] <adu> arnsholt: did you mention Clang?

[00:55] *** drbean left
[00:56] *** drbean joined
[01:07] *** anuby joined
[01:08] *** arlinius joined
[01:11] *** thou_ left
[01:11] *** thou joined
[01:23] *** tgt left
[01:23] *** Pleiades` left
[01:28] *** Pleiades` joined
[01:28] *** FROGGS_ joined
[01:31] *** thou left
[01:32] *** thou joined
[01:32] *** FROGGS left
[01:37] *** rindolf left
[01:52] *** thou left
[01:52] *** thou joined
[01:53] *** census left
[01:57] *** adu left
[02:02] *** dayangkun left
[02:04] *** preflex left
[02:04] *** preflex_ joined
[02:05] *** preflex_ is now known as preflex

[02:08] *** sevin left
[02:13] *** thou left
[02:13] *** thou_ joined
[02:18] *** colomon_ joined
[02:18] *** colomon left
[02:18] *** colomon_ is now known as colomon

[02:21] *** colomon_ joined
[02:21] *** colomon left
[02:21] *** colomon_ is now known as colomon

[02:21] *** labster left
[02:21] *** Chillance left
[02:21] *** huf left
[02:25] *** apejens_ joined
[02:25] *** renormalist left
[02:25] *** apejens left
[02:28] *** Chillance joined
[02:28] *** anant joined
[02:33] *** bonsaikitten left
[02:33] *** thou_ left
[02:33] *** thou joined
[02:35] *** bonsaikitten joined
[02:37] *** apejens_ is now known as apejens

[02:38] <diakopter> hey guys, check out the silver sponsors on all pages of yapcna.org \o/

[02:38] *** labster joined
[02:38] *** huf joined
[02:39] *** bonsaikitten left
[02:39] *** eviltwin_b joined
[02:40] *** Woodi_ joined
[02:40] *** eviltwin_b is now known as allbery_b

[02:41] *** bonsaikitten joined
[02:43] *** geekosaur left
[02:43] *** allbery_b is now known as geekosaur

[02:44] *** salv0 joined
[02:49] *** Woodi left
[02:49] *** loops left
[02:49] *** salv01 left
[02:54] *** thou_ joined
[02:54] *** thou left
[02:58] *** BenGoldberg left
[02:59] *** orafu left
[02:59] *** orafu joined
[03:02] *** preflex_ joined
[03:03] *** preflex left
[03:03] *** preflex_ is now known as preflex

[03:03] *** adu joined
[03:14] *** thou joined
[03:14] *** thou_ left
[03:19] *** hypolin joined
[03:24] *** Chillance left
[03:34] *** thou_ joined
[03:34] *** thou left
[03:52] *** adu left
[03:53] *** adu joined
[03:53] *** quester joined
[03:55] *** thou joined
[03:55] *** thou_ left
[04:15] *** thou_ joined
[04:15] *** thou left
[04:17] *** kaleem joined
[04:28] *** dmol joined
[04:31] *** leprevost left
[04:35] *** thou_ left
[04:36] *** thou joined
[04:37] *** xinming left
[04:38] *** xinming joined
[04:39] *** toddr__ joined
[04:40] *** loops joined
[04:48] *** toddr__ left
[04:56] *** thou_ joined
[04:56] *** thou left
[05:10] *** colomon_ joined
[05:10] *** colomon left
[05:10] *** colomon_ is now known as colomon

[05:12] *** colomon_ joined
[05:12] *** colomon left
[05:12] *** colomon_ is now known as colomon

[05:12] *** quester left
[05:15] *** dmol left
[05:16] *** thou joined
[05:16] *** thou_ left
[05:17] *** dmol joined
[05:19] *** tokuhirom joined
[05:26] <timotimo> mornin'

[05:26] <diakopter> o/

[05:29] <sorear> o/

[05:31] <diakopter> Camelia is on yapcna.org :) and will be on the t-shirt :D

[05:35] <diakopter> (which will test the monochromatic version of Camelia in extremely low resolution on a t-shirt)

[05:37] *** thou left
[05:37] *** thou_ joined
[05:38] *** dmol left
[05:40] *** SamuraiJack joined
[05:41] <timotimo> diakopter: that's a strange april fool's joke

[05:41] <diakopter> timotimo: but... I was serious.

[05:42] <diakopter> see, fooled you!

[05:43] <diakopter> no really, it'll be on the t-shirt

[05:45] <timotimo> whoa, you got me!

[05:45] <diakopter> again?

[05:46] *** SamuraiJack_ joined
[05:47] *** SamuraiJack left
[05:47] <timotimo> ;)

[05:50] <timotimo> i got up early and then i was tired

[05:50] <timotimo> i'm not sure if i should be surprised or really not

[05:57] *** thou joined
[05:57] *** thou_ left
[05:58] *** census joined
[06:06] *** anant left
[06:17] *** thou_ joined
[06:17] *** thou left
[06:18] *** anant joined
[06:20] *** rindolf joined
[06:23] <diakopter> r: my $s = 2; my $::s = 3; say $s; say $::s

[06:23] <p6eval> rakudo 2441b0: OUTPUT«2␤2␤»

[06:25] <diakopter> rn: my $s = 2; my $::s = 3; say $s; say $::s; $::s = 4; say $s; say $::s; $s = 7; say $s; say $::s; 

[06:25] <p6eval> niecza v24-35-g5c06e28: OUTPUT«Potential difficulties:␤  Useless redeclaration of variable $s (see line 1) at /tmp/Db5b2qTORX line 1:␤------> my $s = 2; my $::s ⏏= 3; say $s; say $::s; $::s = 4; say $s;␤␤3␤3␤4␤4␤7␤7␤»

[06:25] <p6eval> ..rakudo 2441b0: OUTPUT«2␤2␤4␤4␤7␤7␤»

[06:38] *** thou joined
[06:38] *** thou_ left
[06:52] *** kaleem left
[06:58] *** thou_ joined
[06:58] *** thou left
[07:04] *** colomon left
[07:04] *** colomon joined
[07:18] *** kaare__ joined
[07:18] *** kaare__ is now known as kaare_

[07:19] *** thou joined
[07:19] *** thou_ left
[07:39] *** thou_ joined
[07:39] *** thou left
[07:41] *** colomon_ joined
[07:41] *** colomon left
[07:41] *** colomon_ is now known as colomon

[07:49] *** thou joined
[07:49] *** thou_ left
[07:51] *** xinming left
[07:54] *** xinming joined
[07:56] *** p5eval left
[07:57] *** rindolf left
[07:58] *** rindolf joined
[07:58] *** p5eval joined
[08:05] *** p5eval left
[08:08] *** p5eval joined
[08:09] *** thou left
[08:09] *** thou_ joined
[08:13] *** p5eval left
[08:15] *** p5eval joined
[08:15] *** rindolf left
[08:16] *** rindolf joined
[08:18] <anant> Doubt - Looking at "Str.HOW.methods(Str)", why does ".methods()" need an argument? Wouldn't it already know it's managing the "Str" type object?

[08:19] *** drbean left
[08:21] *** drbean joined
[08:22] *** adu left
[08:22] *** p5eval left
[08:24] *** anant left
[08:24] *** p5eval joined
[08:25] *** anant joined
[08:27] *** rindolf left
[08:28] *** rindolf joined
[08:28] *** thou joined
[08:28] *** thou_ left
[08:29] *** p5eval left
[08:31] *** p5eval joined
[08:37] *** rindolf left
[08:46] *** asogani_ joined
[08:46] *** anant left
[08:49] *** thou_ joined
[08:49] *** thou left
[08:54] *** rindolf joined
[08:59] *** FROGGS_ is now known as FROGGS

[09:01] *** thou_ left
[09:01] *** thou joined
[09:05] *** thou left
[09:06] *** thou joined
[09:09] *** thou left
[09:09] *** thou_ joined
[09:11] *** thou_ left
[09:11] *** salv0 left
[09:13] *** salv0 joined
[09:13] *** census left
[09:14] *** salv0 left
[09:15] *** salv0 joined
[09:16] *** bloonix left
[09:37] *** spider-mario joined
[09:37] <lizmat> good * #perl6!

[09:38] <lizmat> reading through S02, I was wondering whether "parens" is a good replacement for "parentheses"

[09:38] <lizmat> yes, it is shorter, but "parens" does not occur in my Webster's dictionary

[09:39] * lizmat wonders whether she should s/parens/parentheses/ in the synopses

[09:40] <masak> lizmat: might be a good idea, yes. perldoc seems to use 'parenthesis'/'parentheses' consistently.

[09:41] <masak> (good * to you too!) :)

[09:41] <tadzik> hello hello

[09:41] * lizmat got talked into giving a presentation at YAPC::NA

[09:42] <lizmat> an updated version of the talk I gave at FOSDEM

[09:45] *** SamuraiJack__ joined
[09:47] *** colomon_ joined
[09:47] *** colomon left
[09:47] *** colomon_ is now known as colomon

[09:49] *** SamuraiJack_ left
[09:55] *** kaleem joined
[09:57] <dalek> roast: 03d527f | (Tobias Leich)++ | S04-declarations/our.t:

[09:57] <dalek> roast: added tests for our-scoped variables

[09:57] <dalek> roast: review: https://github.com/perl6/roast/commit/03d527fad2

[09:57] <FROGGS> can somebody please review this new test file?

[09:58] <FROGGS> if the test is okay I want to push my rakudopatch

[10:05] <masak> FROGGS: re question on L18: yes. that's one of the main points of 'our' vars, IIUC.

[10:05] <masak> FROGGS: re question on L23: yes, that is right.

[10:05] <FROGGS> masak: thanks!

[10:07] <masak> FROGGS: why are you using classes and then calling them 'packages'? :)

[10:08] <masak> I mean, they are. I was just wondering why you weren't using modules and calling them modules.

[10:09] <FROGGS> hmmm, true

[10:09] <FROGGS> will change

[10:14] *** anuby left
[10:15] <FROGGS> masak: I guess I call them package and will actually use packages :o)

[10:18] <dalek> rakudo/nom: ffe441f | (Tobias Leich)++ | / (2 files):

[10:18] <dalek> rakudo/nom: install our-scoped variables in the nextmost package

[10:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ffe441fa9c

[10:19] <dalek> Heuristic branch merge: pushed 40 commits to rakudo/froggs_multibyte by FROGGS

[10:19] <masak> um, was that branch merge intentional?

[10:19] <diakopter> 65 yapc::na talk slots (24 20-min and the rest 50-min), and 97 non-lightning talks submitted so far

[10:19] <diakopter> masak: I'm guessing cross-branch

[10:20] <FROGGS> masak: no, but it doesn't hurt

[10:20] <masak> ok.

[10:20] <masak> just checking.

[10:20] <FROGGS> masak: I could delete that branch anyway

[10:21] <dalek> roast: 75c8a16 | (Tobias Leich)++ | S04-declarations/our.t:

[10:21] <dalek> roast: use packages when we talk about packages

[10:21] <dalek> roast: review: https://github.com/perl6/roast/commit/75c8a16836

[10:22] <masak> FROGGS: test file looks good.

[10:23] <FROGGS> thanks for checking

[10:23] <masak> FROGGS: I didn't really understand what you were testing with the 'eval' one, and what that had to do with 'our' variables.

[10:24] <FROGGS> masak: hmmm, I copied that from my.t, the first $e declaration could be 'our' though

[10:24] <FROGGS> but it is basically the same test as on line 12

[10:26] *** FROGGS_ joined
[10:26] *** FROGGS_ left
[10:29] <dalek> roast: b0e6796 | (Tobias Leich)++ | S04-declarations/our.t:

[10:29] <dalek> roast: remove redundant (and probably misplaced) test

[10:29] <dalek> roast: review: https://github.com/perl6/roast/commit/b0e6796cb7

[10:34] <masak> FROGGS: yeah, but it doesn't have anything to do with 'our' because there's no 'our' declaration inside.

[10:34] <masak> only two 'my' declarations.

[10:35] <FROGGS> masak: right

[10:35] <FROGGS> and if it would be 'our' it would be the same test as above

[10:45] <lizmat> masak: so it's ok if I go ahead with s/parens/parentheses/ in S0[34568] and S11

[10:46] <lizmat> and S12

[10:46] <lizmat> ?

[10:49] <diakopter> TimToady likes parens

[10:49] <diakopter> dunno if enough to want to keep them

[10:50] <dalek> roast: cf7ea4f | (Tobias Leich)++ | S04-declarations/our.t:

[10:50] <dalek> roast: fudged for niecza

[10:50] <dalek> roast: review: https://github.com/perl6/roast/commit/cf7ea4f653

[10:51] <FROGGS> lizmat: maybe it is enough if you do "parens (parentheses)" on the first occourance?

[10:52] <lizmat> maybe then better to start a glossary, with terms such as "parens", "numa", "gcd" in them

[10:52] <lizmat> numa and gcd I had to look up to make sure what they meant

[10:53] <tadzik> numa?

[10:53] <lizmat> see?

[10:53] <tadzik> I see that I haven't really read the specs :P

[10:53] <lizmat> http://en.wikipedia.org/wiki/Non-Uniform_Memory_Access

[10:53] <lizmat> S02, about object identity

[10:53] <tadzik> duckduckgo suggested: "Numa Numa (Internet Meme)"

[10:58] <masak> :P

[10:59] <masak> gcd is pretty well-known in math circles, fwiw.

[11:00] <masak> rn: say 10 gcd 6

[11:00] <p6eval> rakudo 2441b0, niecza v24-35-g5c06e28: OUTPUT«2␤»

[11:00] <masak> rn: say 10 lcm 6

[11:00] <p6eval> rakudo 2441b0, niecza v24-35-g5c06e28: OUTPUT«30␤»

[11:00] <tadzik> masak, masak, did you try pandabrew?

[11:01] <masak> tadzik: I did not. I'm a bit... distracted right now by @friends ;)

[11:01] <masak> will be back to full speed tomorrow afternoon.

[11:02] <tadzik> ha, okay :)

[11:03] <masak> r: my %translations = 'cow' => 'vache', 'window' => 'fenêtre'; say %translations<cow>

[11:03] <p6eval> rakudo 2441b0: OUTPUT«vache␤»

[11:05] *** woolfy joined
[11:12] <FROGGS> r: @friends

[11:12] <p6eval> rakudo 2441b0: OUTPUT«===SORRY!===␤Variable '@friends' is not declared␤at /tmp/4_iAVOWkyM:1␤------> @friends⏏<EOL>␤    expecting any of:␤        postfix␤»

[11:12] *** ilbot6 left
[11:12] <FROGGS> see?

[11:12] <FROGGS> there is no such thing

[11:13] *** asogani_ left
[11:14] * jnthn is safely back from vacation

[11:14] <jnthn> Good afternoon, #perl6

[11:14] <lizmat> welcome back, jnthn!

[11:15] <lizmat> masak: I wanted to be sure gcd in that context wouldn't mean something like "global context destruction"

[11:15] <FROGGS> hi jnthn \o/

[11:17] <masak> jnthn! \o/

[11:17] <dalek> niecza: 65f862c | (Tobias Leich)++ | t/spectest.data:

[11:17] <dalek> niecza: added S04-declarations/our.t

[11:17] <dalek> niecza: review: https://github.com/sorear/niecza/commit/65f862c03e

[11:24] <FROGGS> masak / jnthn / moritz (when awake): do you mind if I change rakudo that it will look up 'use v5' as a module too?

[11:26] <masak> I'm not present enough to be able to answer that.

[11:26] <nwc10> good pm jnthn

[11:27] <jnthn> o/ lizmat, FROGG, masak, nwc10 :)

[11:27] <jnthn> FROGGS: How exactly are you pondering changing it?

[11:27] <jnthn> FROGGS: In the actions?

[11:27] <tadzik> hooray, jnthn!

[11:28] <lizmat> I also wonder: use 5.10 should do the same thing, no?

[11:29] <jnthn> lizmat: I hesitate on that one a bit.

[11:29] *** pmurias joined
[11:29] <jnthn> lizmat: It'd imply a very particular emulation, I guess.

[11:29] *** pmurias_ joined
[11:30] * arnsholt investigates a NativeCall segfault

[11:30] <FROGGS> jnthn: in the grammar... so that 5.-versions are treated as module usage

[11:30] *** pmurias_ left
[11:31] <pmurias> one thing we need to consider is that the spec seems to imply use v5 import the Perl module

[11:31] <lizmat> if the goal is to allow darkpan modules that have "use 5.10" in their code to run transparently on Rakudo, some sort of support for that syntax would be needed, I suppose

[11:31] <FROGGS> only in the token statement_control:sym<use>

[11:34] <pmurias> re supporting use v5.10,v5.12... we definitly want to support that too, as it's also used to request extra perl features (like 'say')

[11:36] <FROGGS> jnthn: I'll gist the patch later

[11:37] <jnthn> FROGGS: ok :)

[11:37] <pmurias> re 'use v5' being treated like 'use Perl:ver<5.*>' S11:497

[11:37] <FROGGS> pmurias: right, all features turned on

[11:37] * jnthn just did a 5 hour timezone shift on top of only 3 hours sleep, and should not be relied on too heavily for sanity today ;)

[11:37] <FROGGS> hehe

[11:38] <FROGGS> jnthn: I slept about 1.5 hours... because hacking till 4 a.m. and can't get to sleep because of thinking about how to implement these and that :P

[11:39] * lizmat remembers being in the flow and is looking forward to being it again soon

[11:39] <lizmat> *in it

[11:39] <pmurias> FROGGS: a basic 'use v5' as module support can be implemented with a one line change

[11:40] <pmurias> http://pastie.org/7267265

[11:40] <jnthn> FROGGS: Yes, I've taken to crashing on the sofa for an hour between leaving the keyboard and trying to sleep, doing something non-programming. Otherwise I would have that kind of problem very regularly.

[11:40] <FROGGS> pmurias: true, even a 'v'? '5' '.'? could (something like that)

[11:41] <FROGGS> pmurias: ohh, that looks nice

[11:42] <FROGGS> bbiab

[11:50] <dalek> specs: 890758f | (Elizabeth Mattijsen)++ | S02-bits.pod:

[11:50] <dalek> specs: Typo fix

[11:50] <dalek> specs: review: https://github.com/perl6/specs/commit/890758f175

[11:57] *** asogani_ joined
[11:58] *** asogani_ is now known as anant

[12:00] <jnthn> anant: (answering earlier question) needs an argument so as to support prototype OO systems, where the meta-data is tied up with the object and the HOW is actually just some singleton thingy

[12:05] <anant> jnthn: So this singleton HOW object (seems to be Perl6::Metamodel::ClassHOW.new()) actually inquires the object passed as an argument for meta-data?

[12:06] <jnthn> anant: No, because ClassHOW implements class-based OO.

[12:06] <jnthn> anant: It's more if you're implementing an object system along the lines of what JavaScript has, for example.

[12:10] <nwc10> jnthn: nqp-jvm prep still "works" on my machine apart from the 2 usual failures on nqptest

[12:10] <arnsholt> jnthn: Have you ever managed to trash the PMC *allocation data* (which is stored just before the PMC in memory, I think) from NQP's C code?

[12:12] <jnthn> arnsholt: Not knowingly... :)

[12:13] * [Coke] finds a coffee.

[12:14] * jnthn is going through mail and sees [Coke]++ has been adding loads of tests and closing RTs :)

[12:17] <[Coke]> All the easy ones, anyways.

[12:17] <[Coke]> I left you all the tricksy bits. :)

[12:22] *** FROGGS left
[12:33] *** stevan_ left
[12:33] *** stevan_ joined
[12:39] *** dayangkun joined
[12:43] *** tgt joined
[12:44] <anant> jnthn: Bit confused. Which module implements prototype OO in p6? say Str.HOW; say Int.HOW; etc all give Perl6::Metamodel::ClassHOW

[12:46] *** Gruber is now known as Grrrr

[12:56] *** census joined
[12:56] <census> Hi!

[12:58] *** bruges_ left
[12:59] *** bruges joined
[13:01] *** SamuraiJack__ left
[13:02] <[Coke]> looks like new tests caused a niecza hang when running the suite yesterday.

[13:02] <[Coke]> I just killed the offending test file.

[13:15] <arnsholt> anant: AFAIK no-one's implemented prototype OO yet, but it can be done

[13:15] *** PacoAir joined
[13:17] <anant> arnsholt: so the .HOW.methods() taking in an argument is more of a future-proofing thing?

[13:18] <colomon> [Coke]: WHAT WAS IT?

[13:18] <colomon> errr, sorry about the caps lock

[13:18] <moritz> anant: no. A metaclass can handle more than one class

[13:19] <moritz> so you need to pass in an extra object to let it know which one you're working on

[13:20] <moritz> I don't know if rakudo uses this mechanism, but I'm pretty sure SMOP did

[13:20] <jnthn> I suspect it'll come in rather useful when we get to HLL interop style things

[13:20] <moritz> (SMOP being a runtime library for MOP stuff written in C, back in the days)

[13:21] <lizmat> Regarding S02L1734-41: square brackets?   I don't see any square brackets there ?

[13:21] <jnthn> e.g. for the JVM port to provide access to Java classes, for example.

[13:22] <moritz> lizmat: the example with square brackets would be   my Hash[Array[Recipe]] %book

[13:22] <lizmat> Parametric types are named using square brackets, so: my Hash of Array of Recipe %book; actually means: my Hash:of(Array:of(Recipe)) %book;

[13:22] <lizmat> is what it says...

[13:23] <lizmat> so an omission in S02?  

[13:23] <moritz> yes

[13:23] *** adu_ joined
[13:24] <moritz> jnthn: at your convenience, please take a look at http://irclog.perlgeek.de/perl6/2013-03-23#i_6622306 I'm kinda stuck with the EXPORT_hash branch

[13:24] <anant> moritz: Do all objects delegate to the same metaclass instance?

[13:24] <moritz> all objects of the same type do, in rakudo

[13:25] *** ilbot6 joined
[13:25] <moritz> so in rakudo it wouldn't be necessary to pass in the extra argument right now

[13:25] <moritz> so in some sense it's both for future-proving and past-proving :-)

[13:26] <moritz> jnthn: (that branch is in the [email@hidden.address] fork)

[13:26] *** xinming left
[13:26] *** xinming joined
[13:27] <anant> as that would explain it needing the object as an argument 

[13:29] <[Coke]> colomon: I didn't write it down, sorry.

[13:29] <dalek> specs: aff4d83 | (Elizabeth Mattijsen)++ | S02-bits.pod:

[13:29] <dalek> specs: Added omitted square brackets example with parametric typing.

[13:29] <dalek> specs: review: https://github.com/perl6/specs/commit/aff4d83b7c

[13:29] <colomon> doh

[13:29] <[Coke]> you'll see it in the failures when I post today, though.

[13:30] <anant> r: say Int.HOW.methods();

[13:30] <p6eval> rakudo ffe441: OUTPUT«too few positional arguments: 1 passed, 2 (or more) expected␤  in any methods at src/gen/Metamodel.pm:419␤  in block  at /tmp/PtCn_a4cc8:1␤␤»

[13:30] <anant> moritz: Rakudo wants that argument ...

[13:30] <moritz> yes

[13:31] <moritz> but at its current state, it could have been written to not need it, afaict

[13:31] <anant> moritz: which is what was confusing me 

[13:36] <moritz> anant: I think one motivation was to allow objects with mixins to retain the original type

[13:36] <jnthn> moritz: Note that you can't QAST::WVal something that doesn't already live in an SC

[13:37] <colomon> [Coke]: maybe our.t?  Lots of changes, and it seems like it's the only one that's changed since the last time I ran make spectest.

[13:38] <jnthn> moritz: Why are you WVal'ing it, ooc?

[13:38] <colomon> jnthn!  \o/

[13:38] <moritz> jnthn: a type object of a lexical class that I try to import

[13:38] <jnthn> moritz: It was actually written as a class? Hmm

[13:38] <moritz> jnthn: it looks like this:   my class A { }; our sub EXPORT(|) { (A => A).hash }

[13:38] <jnthn> moritz: OK, I think I'll have to build the branch. But I'm not sure I have the energy/concentration for it today.

[13:39] <moritz> jnthn: ok, no hurry

[13:39] <jnthn> o/ colomon :)

[13:40] <[Coke]> colomon: weird. the niecza run is done, I don't see anything new in the diff since yesterday. :(

[13:40] <jnthn> moritz: I do find it very odd that the lexical class would not have had its type object put in an SC, though...

[13:40] <colomon> [Coke]: and our.t worked fine when I tried it.  :\

[13:41] <[Coke]> colomon: there are like 35 failures that are ongoing, btw.

[13:41] <[Coke]> our.t seems fine, aye.

[13:42] <[Coke]> wonder if it was something that died after generating the "end of test" output. hurm.

[13:42] *** Chillance joined
[13:42] <colomon> [Coke]: yeah, there's the subst.t thing (which I still think is a spec issue, gonna blog about it at some point) and a bunch of misc. failures caused by TimToady++ reworking the return value of if that's it's not clear to me if they are roast bugs or niecza bugs.

[13:43] <moritz> jnthn: I tried also to $*W.add_object every symbol that we import, but that made setting compilation blow up, so I quickly abandoned that approach

[13:43] <colomon> [Coke]: in other words, I've been trying to fix the obvious things, and putting off dealing with the tricky issues until I had more time.  :)

[13:44] <moritz> jnthn: also it seems that the SC comes from a CompUnit.sc() call. Is it normal to have CompUnits without a SC?

[13:45] *** kaleem left
[13:45] *** cosimo left
[13:50] *** pmurias left
[13:52] *** cosimo joined
[13:57] <PerlJam> Any good perl-related AFJs today?

[13:58] <lizmat> YAPC::Hawaii comes to mind

[14:01] *** bluescreen10 joined
[14:13] *** xilo left
[14:26] *** Patterner left
[14:28] *** Psyche^ joined
[14:28] *** Psyche^ is now known as Patterner

[14:37] *** xilo joined
[14:44] *** spider-mario left
[14:47] <dalek> perl6-roast-data: 9fbc3ca | coke++ | / (4 files):

[14:47] <dalek> perl6-roast-data: today (automated commit)

[14:47] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/9fbc3caf0f

[14:57] <dalek> roast: f637132 | coke++ | S (3 files):

[14:57] <dalek> roast: pugs fudge

[14:57] <dalek> roast: review: https://github.com/perl6/roast/commit/f637132df7

[15:00] <arnsholt> r: (-> { say $^b; say $^a })(1, 2)

[15:00] <p6eval> rakudo ffe441: OUTPUT«===SORRY!===␤Placeholder variable '$^a' cannot override existing signature␤at /tmp/_WDOGpKdaH:1␤------> (-> { say $^b; say $^a }⏏)(1, 2)␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤    …

[15:00] <arnsholt> r: (-> { say $^b; say $^a; })(1, 2)

[15:00] <p6eval> rakudo ffe441: OUTPUT«===SORRY!===␤Placeholder variable '$^a' cannot override existing signature␤at /tmp/KCBhD2pFBZ:1␤------> (-> { say $^b; say $^a; }⏏)(1, 2)␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤   …

[15:02] <moritz> r: try eval '-> { say $^b; say $^a; }'; say $!.perl

[15:02] <tadzik> panda lacks a vision

[15:02] <p6eval> rakudo ffe441: OUTPUT«X::Signature::Placeholder.new(placeholder => "\$^a", filename => "eval_0", line => 1, column => Any, modules => Array.new(), is-compile-time => 1, pre => "-> \{ say \$^b; say \$^a; }", post => "<EOL>", highexpect => Array.new("postfix", "statement end", "statement …

[15:06] <arnsholt> r: (sub { say $^b; say $^a; })(1, 2)

[15:06] <p6eval> rakudo ffe441: OUTPUT«2␤1␤»

[15:08] <moritz> tadzik: how about "be an awesome module installer"?

[15:09] <tadzik> that's a good one

[15:09] <tadzik> Now I need to think of a way to get there

[15:09] <tadzik> step one: stop hating the code

[15:10] <tadzik> I have a couple of ideas, and all of them involve turning stuff upside down and breaking backwards compat.

[15:10] <tadzik> I could set up a compatibility layer, I guess

[15:12] <moritz> or work on a fork

[15:12] *** Gwyxx joined
[15:13] <tadzik> my thoughts keep circling around a git-like thing

[15:13] <moritz> what's the logical successor to panda? babypanda? bear? :-)

[15:13] <moritz> git-like in what way?

[15:13] <tadzik> so we have a set of independent tools, like panda-build, panda-fetch, panda-test. They can be nice developer tools

[15:13] <tadzik> early tests show that panda-build can be even faster than ufo && make

[15:13] <pmichaud> p6:  "panda".succ.say

[15:13] <p6eval> rakudo ffe441, niecza v24-35-g5c06e28: OUTPUT«pandb␤»

[15:14] <tadzik> then we can have a Mother Tool, called just 'panda', which saves the user the effort of typing all those things to install stuff

[15:14] <PerlJam> "pan db"?  it's a bread database ?

[15:14] <PerlJam> :-)

[15:14] <pmichaud> it's part of our bread and butter, yes.

[15:14] <tadzik> haha

[15:14] <[Coke]> AHAHAHAHA.

[15:15] <tadzik> and then one of the points is to keep those small tools simple

[15:15] <tadzik> so no tight-coupling, no more insanity like Panda::Resources etc

[15:16] <[Coke]> So, http://planetsix.perl.org/ is going away. I am trying out http://planeteria.org/perl6 as a replacement. I noticed recent changes were not reflecting on the front page. I email the admin, get back: "Congratulations, your perl6 feed broke the system!"

[15:16] <awwaiid> p6: say sub { $^a / $^b }.(1, 3); say sub { $^b / $^a }.(1, 3)

[15:16] <p6eval> rakudo ffe441: OUTPUT«===SORRY!===␤Two terms in a row␤at /tmp/uSoGNCTyJX:1␤------> say sub { $^a / $^b }⏏.(1, 3); say sub { $^b / $^a }.(1, 3)␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        statement mo…

[15:16] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«0.333333␤3␤»

[15:16] * [Coke] feels bad&happy

[15:17] *** kivutar joined
[15:17] * moritz feels destructive

[15:18] <tadzik> I see things like "1; }" all over my code. I still don't completely get sink context

[15:18] <moritz> [Coke]: do you know know if we'll get redirects to a new site from planetsix?

[15:18] <moritz> tadzik: I'm so >.< close to making for-loops eager again

[15:19] *** FROGGS joined
[15:19] <moritz> it's just silly to try to make a construct lazy that people don't expect to be lazy

[15:19] <tadzik> moritz: so I'm not the only one?

[15:19] <moritz> and then jump through hoops to make it appear to DWYM most of the time

[15:19] <moritz> tadzik: not at all

[15:19] <tadzik> the point of for, imho, is that it doesn't return results. So I expect side-effects to happen _now_

[15:19] <[Coke]> moritz: I don't know if that part of the infrastructure is also going away. Certainly I will blog about it in a feed that appears in sixplanet before it gets shut off.

[15:20] <moritz> [Coke]: which time frame are we talking about?

[15:21] <moritz> if it's two weeks or more, I might be able to set up a new system on planet.perl6.org or so

[15:21] <moritz> and then slowly migrate it to perl 6 :-)

[15:22] *** thou joined
[15:22] <[Coke]> moritz: I don't know. I assume it's related to: http://log.perl.org/2013/03/svnperlorg-shutdown-in-one-month.html

[15:22] *** thou left
[15:22] <pmichaud> one can always write 'sink'; at the end instead of '1'

[15:23] <pmichaud> or even 

[15:23] <pmichaud> sink for @list { ... }

[15:23] <[Coke]> sink--

[15:23] <moritz> sink do for @list { ... }

[15:23] <moritz> pmichaud: but it's still silly

[15:23] <moritz> it violates everybody's expectations except TimToady_'s and mine

[15:23] <moritz> and mine only because I implemented sink context

[15:24] <pmichaud> well, and mine.  :)

[15:24] <pmichaud> although I'm fine with an eager for also.

[15:24] <tadzik> :D

[15:25] *** thou joined
[15:25] <pmichaud> ooc, because my brane isn't all here at the moment, do we have use cases for the lazy 'for' ?

[15:25] <[Coke]> Is there a doc on sink context other than the specific mentions in the spec (e.g. "Because C<gather> evaluates its block or statement in sink context")

[15:25] <PerlJam> pmichaud: when it's acting like map?

[15:26] <pmichaud> PerlJam: I mean, like an example  :-)

[15:26] <pmichaud> I suppose statement modifier for

[15:28] <moritz> http://www.debian.org/ # lolcat debian

[15:29] <tadzik> lol. Cat.

[15:29] * moritz wonders what Cat.lol will return. Probably just a Cat.

[15:30] <[Coke]> r: Cat

[15:30] <p6eval> rakudo ffe441: OUTPUT«===SORRY!===␤Undeclared name:␤    Cat used at line 1. Did you mean 'Rat'?␤␤»

[15:30] <[Coke]> . o O (Eek!)

[15:36] * pmichaud suggests creating a NYI for Cat

[15:36] * [Coke] wonders who zbornheimer is.

[15:37] <PerlJam> .oO( a nyi-cat?  is that like nyancat? )

[15:42] *** dmol1 joined
[15:42] *** kst`` is now known as kst

[15:45] <jnthn> pmichaud: I think list comprehensions are the main use case

[15:46] * jnthn suspects that somewhere on RosettaCode are examples

[15:50] <[Coke]> rakudo: /$'x'/

[15:50] <p6eval> rakudo ffe441: OUTPUT«===SORRY!===␤Non-declarative sigil is missing its name␤at /tmp/IY9DmuO6ZJ:1␤------> /$⏏'x'/␤    expecting any of:␤        statement list␤        prefix or term␤        prefix or meta-prefix␤»

[15:50] *** tgt left
[15:51] <[Coke]> std: /$'x'/

[15:51] <p6eval> std 86b102f: OUTPUT«===SORRY!===␤Unrecognized regex metacharacter $ (must be quoted to match literally) at /tmp/rRTDyXwWaK line 1:␤------> /$⏏'x'/␤Can't call method "from" on unblessed reference at STD.pm line 53909.␤FAILED 00:00 42m␤»

[15:52] *** tgt joined
[16:04] <tadzik> r: sub foo($a = 5) { say $a }; foo(Any) # bug?

[16:04] <p6eval> rakudo ffe441: OUTPUT«(Any)␤»

[16:05] *** xilo left
[16:05] *** xilo joined
[16:07] <PerlJam> r: sub foo($a = 5) { say $a }; foo(Nil);

[16:07] <p6eval> rakudo ffe441: OUTPUT«Nil␤»

[16:08] <PerlJam> I think there's at least one bug here.

[16:08] *** rurban joined
[16:09] <[Coke]> no. no more bugs. stop opening new bugs! ;)

[16:11] *** FROGGS left
[16:19] *** DarthGandalf left
[16:19] *** DarthGandalf joined
[16:20] <[Coke]> r: say 292+335+1-65

[16:20] <p6eval> rakudo ffe441: OUTPUT«563␤»

[16:21] *** telex left
[16:22] *** telex joined
[16:25] *** Gwyxx left
[16:25] *** tgt left
[16:28] *** FROGGS joined
[16:32] *** tgt joined
[16:50] <[Coke]> colomon: no hangs today.

[16:55] <[Coke]> http://planeteria.org/perl6 is now up and running. I haven't decided if this is a permanet replacement for http://planetsix.perl.org/

[16:59] *** thou left
[17:01] <timotimo> i wonder how many people approximately are on perl.perl6.users, but never on the irc

[17:01] *** thou joined
[17:03] <[Coke]> moritz: we can get the old URL redirecting to the new one.

[17:03] *** gcole left
[17:04] *** xilo left
[17:04] *** xilo joined
[17:05] *** xinming left
[17:07] *** xinming joined
[17:07] *** SamuraiJack__ joined
[17:10] <census> anybody have a quick sec.  just have a general web scraping question (not perl5 specific) if that is ok ...

[17:11] <tadzik> if it's not Perl 5 specific maybe it's at least Perl 6 specific?

[17:11] <flussence> ask away, all my answers will be in PHP

[17:11] <census> hahahah

[17:12] <census> i'm trying to extract information off of a table.

[17:12] <census> there's a value in the table that is 0 on the screen.  however when i printed the internal contents of the table.  it shows up as not having any value.  as a result, the ultimate value is that this cell is blank.  i ran the code on this table many times so it is not a spuriously bad web connection 

[17:13] <census> in perl 5 lingo, i tried doing a data dumper.  

[17:13] <census> maybe i'm dumping the wrong thing ... but how can something show up on the screen and not in the raw table.

[17:13] <census> i do not have this problem with any of the other contents of the table ...

[17:13] <census> if it would help and would not be unwelcomed ... i could show brief code and/or the results of the data dumper and/or the raw table ...

[17:14] <census> i meant the table as it appears on the web

[17:16] *** Vasu joined
[17:17] *** gcole joined
[17:21] *** Vasu left
[17:21] *** skids left
[17:22] *** kivutar left
[17:23] <FROGGS> jnthn / pmurias: what about that? https://gist.github.com/FROGGS/5286324

[17:23] <FROGGS> (untested)

[17:25] *** census_ joined
[17:25] <dalek> perl6-roast-data: 1832362 | coke++ | / (4 files):

[17:25] <dalek> perl6-roast-data: today (automated commit)

[17:25] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/1832362364

[17:26] *** census_ left
[17:27] *** census_ joined
[17:27] *** census left
[17:27] *** census_ left
[17:28] *** census joined
[17:28] *** kaleem joined
[17:34] *** kaleem left
[17:36] *** thou left
[17:37] *** thou joined
[17:42] *** spider-mario joined
[17:42] *** rindolf left
[17:56] *** SamuraiJack joined
[17:57] *** SamuraiJack__ left
[17:59] *** rindolf joined
[18:03] <[Coke]> .u ﬁ

[18:03] <yoleaux> U+FB01 LATIN SMALL LIGATURE FI [Ll] (ﬁ)

[18:31] *** SamuraiJack left
[18:33] <colomon> [Coke]: no hangs for me ether

[18:37] *** lichtkind joined
[18:39] <[Coke]> so, all clear.

[18:39] <[Coke]> except for the failures. ;)

[18:53] <[Coke]> rn: use Test; my $answer = 0; my @x = 41, (42 if $answer), 43; my @y = 41, ($answer ?

[18:53] <[Coke]> ? 42 !! ()), 43; my @z = 41, 43; is @y, @z, "sanity check"; is @x, @y, "if expr o

[18:53] <p6eval> niecza v24-35-g5c06e28: OUTPUT«===SORRY!===␤␤Confused at /tmp/KnzlwM0vDE line 1:␤------> 2 if $answer), 43; my @y = 41, ($answer ⏏?␤␤Parse failed␤␤»

[18:53] <p6eval> ..rakudo ffe441: OUTPUT«===SORRY!===␤Two terms in a row␤at /tmp/XHHsmwgeAl:1␤------> 2 if $answer), 43; my @y = 41, ($answer ⏏?␤    expecting any of:␤        postfix␤        infix stopper␤        infix or meta-infix␤        statement end␤        statem…

[18:53] <[Coke]> arg.

[18:53] <[Coke]> n false cond";

[18:54] <[Coke]> rn: use Test; my $answer = 0; my @x = 41, (42 if $answer), 43; my @y = 41, ($answer ?? 42 !! ()), 43; my @z = 41, 43; is @y, @z, "sanity check"; is @x, @y, "if expr on false cond";

[18:54] <p6eval> rakudo ffe441: OUTPUT«ok 1 - sanity check␤ok 2 - if expr on false cond␤»

[18:54] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«ok 1 - sanity check␤not ok 2 - if expr on false cond␤# /tmp/SGb2xxOHJm line 1␤#    Failed test␤#           got: 41  43␤#      expected: 41 43␤»

[18:54] <[Coke]> colomon: there's one.

[18:54] <[Coke]> extra space in the output.

[18:54] <[Coke]> (S04-statement-modifiers/if.t)

[19:07] <lizmat> n: my %bar= <foo baz>; say $%bar

[19:07] <p6eval> niecza v24-35-g5c06e28: OUTPUT«===SORRY!===␤␤Invalid hard reference syntax at /tmp/YV7CJuFPJ3 line 1:␤------> my %bar= <foo baz>; say $⏏%bar␤␤Parse failed␤␤»

[19:07] <lizmat> r: my %bar= <foo baz>; say $%bar

[19:07] <p6eval> rakudo ffe441: OUTPUT«===SORRY!===␤Invalid hard reference syntax␤at /tmp/kHEa5_QypS:1␤------> my %bar= <foo baz>; say $⏏%bar␤    expecting any of:␤        argument list␤        prefix or term␤        prefix or meta-prefix␤»

[19:07] <lizmat> rn: my %bar= <foo baz>; say item %bar

[19:07] <p6eval> niecza v24-35-g5c06e28: OUTPUT«{"foo" => "baz"}␤»

[19:07] <p6eval> ..rakudo ffe441: OUTPUT«("foo" => "baz").hash␤»

[19:08] <lizmat> S02L2108 states: "Array and Hash variables can be evaluated in item context by prefixing

[19:08] <lizmat> them with a single dollar sign:"

[19:09] <lizmat> so what's wrong with:

[19:09] <lizmat> rn: my %bar= <foo baz>; say $%bar

[19:09] <p6eval> rakudo ffe441: OUTPUT«===SORRY!===␤Invalid hard reference syntax␤at /tmp/UPvNmCY1sI:1␤------> my %bar= <foo baz>; say $⏏%bar␤    expecting any of:␤        argument list␤        prefix or term␤        prefix or meta-prefix␤»

[19:09] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«===SORRY!===␤␤Invalid hard reference syntax at /tmp/SRzGpmUcIM line 1:␤------> my %bar= <foo baz>; say $⏏%bar␤␤Parse failed␤␤»

[19:09] <moritz> NYI.

[19:09] <lizmat> ok

[19:09] <moritz> both rakudo and niecza follow an outdated STD.pm6 here

[19:12] <timotimo>  :D

[19:12] <timotimo> er, is there something to be happy about here? if not: mischan :|

[19:12] <lizmat> I see that rakudo and niecza differ on the item output

[19:13] <lizmat> who is righter?

[19:13] <moritz> huh? both say "Invalid hard reference syntax", no?

[19:13] <moritz> oh, different output

[19:13] <lizmat> rn: my %bar= <foo baz>; say item %bar

[19:13] <p6eval> niecza v24-35-g5c06e28: OUTPUT«{"foo" => "baz"}␤»

[19:13] <p6eval> ..rakudo ffe441: OUTPUT«("foo" => "baz").hash␤»

[19:14] <moritz> rakudo's looks wrong to me

[19:14] <moritz> nr: my %bar = <a b c d>; say elems item %bar

[19:14] <p6eval> rakudo ffe441, niecza v24-35-g5c06e28: OUTPUT«2␤»

[19:14] *** am0c joined
[19:14] <moritz> nr: my %bar = <a b c d>; my $c = 0; ++$c for item %bar; say $c

[19:14] <p6eval> rakudo ffe441: OUTPUT«2␤»

[19:14] <p6eval> ..niecza v24-35-g5c06e28: OUTPUT«1␤»

[19:15] <moritz> niecza is right here, and rakudo is wrong

[19:15] * moritz submits rakudobug

[19:15] <lizmat> :-)

[19:15] <lizmat> my first rakudobug by proxy :-)

[19:16] <moritz> lizmat++

[19:21] *** xilo left
[19:21] *** xilo joined
[19:24] *** FROGGS left
[19:26] <moritz> lizmat: your first rakudobug is henceforth known as [perl #117431]

[19:28] <lizmat> rn: say item :mice<blind>

[19:28] <p6eval> niecza v24-35-g5c06e28: OUTPUT«Unhandled exception: No value for parameter '$x' in 'item'␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (item @ 1) ␤  at /tmp/P7iaxwRZ2d line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4299 (ANON @ 3) ␤  at /home/p6eval/niecza/lib…

[19:28] <p6eval> ..rakudo ffe441: OUTPUT«Unexpected named parameter 'mice' passed␤  in sub item at src/gen/CORE.setting:1760␤  in sub item at src/gen/CORE.setting:1760␤  in block  at /tmp/NpUaaEr6YS:1␤␤»

[19:28] <lizmat> rn: say item (:mice<blind>)

[19:28] <p6eval> rakudo ffe441, niecza v24-35-g5c06e28: OUTPUT«"mice" => "blind"␤»

[19:29] <lizmat> rn: say item(:mice<blind>)

[19:29] <p6eval> niecza v24-35-g5c06e28: OUTPUT«Unhandled exception: No value for parameter '$x' in 'item'␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (item @ 1) ␤  at /tmp/TVsQiACylQ line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4299 (ANON @ 3) ␤  at /home/p6eval/niecza/lib…

[19:29] <p6eval> ..rakudo ffe441: OUTPUT«Unexpected named parameter 'mice' passed␤  in sub item at src/gen/CORE.setting:1760␤  in sub item at src/gen/CORE.setting:1760␤  in block  at /tmp/XDrNC8yHTF:1␤␤»

[19:29] <lizmat> rn: say item((:mice<blind>))

[19:29] <p6eval> rakudo ffe441, niecza v24-35-g5c06e28: OUTPUT«"mice" => "blind"␤»

[19:30] <lizmat> rn: say :mice<blind>.perl

[19:30] <p6eval> rakudo ffe441, niecza v24-35-g5c06e28: OUTPUT«"mice" => "blind"␤»

[19:30] <lizmat> rn: say (:mice<blind>).perl

[19:31] <sorear> r: say item

[19:31] <p6eval> rakudo ffe441, niecza v24-35-g5c06e28: OUTPUT«"mice" => "blind"␤»

[19:31] <p6eval> rakudo ffe441: OUTPUT«␤»

[19:31] * lizmat is wondering why the parentheses are needed

[19:31] <moritz> r: my $c = 0; $c++ for {a => 1, b => 2}; say $c

[19:31] <p6eval> rakudo ffe441: OUTPUT«1␤»

[19:32] <moritz> lizmat: so that :mice<blind> isn't a named argument

[19:32] <moritz> lizmat: and the decision if something is a named argument is syntactic; adding parens around it makes it a positional argument

[19:32] <moritz> other ways would be

[19:32] *** kivutar joined
[19:32] <moritz> r: say item "mice" => "blind"; # quotes around the key

[19:32] <p6eval> rakudo ffe441: OUTPUT«"mice" => "blind"␤»

[19:33] <moritz> r: my $pair = :mice<blind>; say item $pair; # pair literal not part of a call

[19:33] <p6eval> rakudo ffe441: OUTPUT«"mice" => "blind"␤»

[19:33] <lizmat> I understand the alternatives

[19:34] <lizmat> yet I somehow expected that :mice<blind> would already be a pair, and therefore a positional

[19:34] <moritz> then you must align your expectations with reality :-)

[19:35] <lizmat> fair enough

[19:35] <moritz> r: sub it($a) { $a }; it((a => 1, b => 2).hash).perl.say

[19:35] <p6eval> rakudo ffe441: OUTPUT«{"a" => 1, "b" => 2}␤»

[19:35] <moritz> r: sub it(*@a) { my $ = @a }; it((a => 1, b => 2).hash).perl.say

[19:35] <p6eval> rakudo ffe441: OUTPUT«["a" => 1, "b" => 2]␤»

[19:37] <colomon> [Coke]: yes, that's the issue with most of the problems.  what I don't know is if it's a bug or not.  like I said, TimToady made the change to niecza that caused that group of failures.  What I don't know is if the problem is he didn't make enough change, or if the problem is that the test hasn't kept up with the latest spec.

[19:43] <moritz> masak: http://haiku.nytimes.com/

[19:45] *** FROGGS joined
[19:46] <moritz> oh, and I want TEE-TWO RE-VIEWs!

[19:51] *** japhb_ joined
[19:53] *** asogani_ joined
[19:53] *** frdmn joined
[19:53] *** anant left
[19:53] *** asogani_ left
[19:54] <frdmn> can someone help me with the Bot::BasicBot module

[19:54] <frdmn> i try to fetch teh mirc color codes out of the said method but instead of something like "\x034red" i get "4red"

[19:55] <[Coke]> colomon: I have no idea, yah.

[19:55] <[Coke]> frdmn: someone ported basicbot to perl 6?

[19:55] <moritz> frdmn: there might be character with code 03 before 4

[19:56] <moritz> frdmn: try outputting .perl of the string, which shows such escape sequences

[19:56] *** kaare_ left
[19:57] <frdmn> phew... actually i am a total perl newbie and have to research about that first where to put it

[19:57] <frdmn> :P

[19:57] *** toddr_ left
[19:57] <frdmn> ha, moritz, i im running your ilbot :P

[19:57] <frdmn> *am

[20:00] *** thou left
[20:00] * diakopter read that as ruining at first

[20:01] <sorear> _ilbot or ilbot6?

[20:01] *** thou joined
[20:04] <frdmn> _ilbot

[20:04] <frdmn> oh

[20:08] <moritz> oh, then you need    use Data::Dumper; $Data::Dumper::Useqq = 1; print Dumper $line;  # in sub dbwrite

[20:09] <moritz> though perl 5 help is actually off-topic here :-)

[20:09] <moritz> frdmn: if you write a patch that filters out IRC colors, please submit it as a pull request to https://github.com/moritz/ilbot/

[20:10] <frdmn> will do :)

[20:12] <moritz> probably $line =~ s/ \x15 | \x03\ d{1,2} (?: ,\d{1,2} )? /gx; # or so

[20:13] <moritz> though maybe they should be logged, and filtered out on display

[20:13] <moritz> there's something to be said for always storing exactly what you receive

[20:16] *** thou left
[20:17] *** thou joined
[20:18] *** dmol1 left
[20:20] <[Coke]> tadzik: ping.

[20:22] <tadzik> [Coke]: pong

[20:22] <[Coke]> did you accidentally file http://ttjjss.wordpress.com/2013/03/27/polish-perl-workshop-status-update/ under "parrot" at one point?

[20:23] <[Coke]> (it is showing up at planetparrot, but is not in the feed planet parrot uses on your site.)

[20:23] <tadzik> no, I did not. But everything I write shows up on planet parrot for some reason

[20:23] <tadzik> for as long as I remember

[20:25] <[Coke]> ok. Danke.

[20:26] <tadzik> bitte

[20:27] <tadzik> \o/ Ich kann spreche Deutch

[20:27] <tadzik> * Deutsch

[20:29] <[Coke]> well, planeteria doesn't seem to suffer from this problem.

[20:29] <tadzik> ossum

[20:29] <[Coke]> (which I thought was a bug. ;)

[20:30] *** spider-mario left
[20:34] <[Coke]> planeteria really doesn't like your ś though. :(

[20:34] <tadzik> /o\

[20:38] *** szabgab joined
[20:41] *** szabgab left
[20:48] *** kivutar left
[20:50] *** szabgab joined
[20:51] * tadzik suddenly wishes LEAVE runs even when an exception is thrown

[20:51] <[Coke]> FINALLY.

[20:51] <szabgab> [Coke] could you please check the list of sources on http://planeteria.org/perl6/ it migh be a bit out of that. In any case please replace the feed from szabgab.com by the feed from http://perl6maven.com/

[20:51] <[Coke]> Is there a way to specify multiple phasers at once?

[20:51] <diakopter> tadzik: maybe a ... SUSPENDONCE phaser?

[20:52] <[Coke]> szabgab: the entries that are in there are from the sixplanet feed. (minus some that appear to have been culled when the admin fixed the feed)

[20:52] <[Coke]> LEAVE|CATCH { always do this.}

[20:52] <tadzik> hmm. This new rewrite of panda just installed Benchmark in 4.55 seconds

[20:53] <diakopter> o-O

[20:53] <[Coke]> szabgab: you had 2 feeds in old planet. you just want maven going forward?

[20:53] <tadzik> but I'm cheating, I gave it the git repo url

[20:53] <szabgab> [Coke] oh and wast that different from http://planetsix.perl-foundation.org/ ?

[20:53] <szabgab> [Coke] yes please

[20:53] <szabgab> the perl 6 maven :)

[20:53] <dalek> v5: 3d2cd1a | (Tobias Leich)++ | META.info:

[20:53] <dalek> v5: make v5 pandaable

[20:53] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/3d2cd1ae12

[20:54] <tadzik> \o/

[20:54] <[Coke]> szabgab: I think perl-foundation is an alias.

[20:54] *** am0c left
[20:54] <tadzik> I'm now going to install v5 with redpanda ;)

[20:54] <szabgab> [Coke] so yes, when I write about Perl 6 it is on the Perl 6 Maven

[20:55] <dalek> ecosystem: 78dc3e1 | (Tobias Leich)++ | META.list:

[20:55] <dalek> ecosystem: added v5 - Perl 5 Slang

[20:55] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/78dc3e1916

[20:55] *** kurahaupo joined
[20:55] <FROGGS> tadzik: you changed panda the last days? how do I set it up on a fresh rakudo?

[20:55] <tadzik> FROGGS: I did not break the original panda, yet

[20:55] *** woolfy left
[20:55] <tadzik> FROGGS: there is pandabrew, which is quite cute

[20:56] <tadzik> and I'm still working on a new version (mostly a rewrite) of panda, but that's not yet ready

[20:56] <FROGGS> so I just clone that repo and I'm done? do I need to copy modules around?

[20:56] <tadzik> pandabrew is ready for testing though. It should improve the panda experience significantly

[20:56] <tadzik> try it: https://github.com/tadzik/pandabrew

[20:57] <tadzik> pandabrew init # brews a new panda

[20:57] * FROGGS is cloning

[20:57] <tadzik> pandabrew env # put that in .bashrc/.zshrc

[20:57] <tadzik> it automatically detects when you've updated rakudo, and offers to rebuild the installed modules

[20:58] <[Coke]> szabgab: updated. will take some time to reflect.

[20:58] <FROGGS> tadzik: you should chmod 0755 it :o)

[20:59] <tadzik> ayes, I should

[20:59] <tadzik> but well, if you install pandabrew with panda it will 0755 it itself :P

[21:00] <tadzik> fixed, thanks

[21:01] <szabgab> [Coke] thanks

[21:03] <FROGGS> tadzik: that `pandabrew env` is not quit right

[21:03] <tadzik> how so?

[21:03] <FROGGS> if I run `panda`, I get 'pandabrew: command not found'

[21:03] <tadzik> uh-oh

[21:03] <tadzik> well, it assumes pandabrew is installed by panda :F

[21:04] <FROGGS> hmmm, chicken&egg problem?

[21:04] *** rindolf left
[21:04] <tadzik> sort of

[21:05] <[Coke]> bootstrap to the rescue! ;)

[21:05] <tadzik> pandabrew improves panda experience, but is not a substitute

[21:05] <tadzik> pandabrew init bootstraps panda, I guess it could also install itself afterwards

[21:06] <tadzik> all this could be improved :\

[21:06] <labster> good day, all you happy perl6 people

[21:07] <FROGGS> hi labster 

[21:07] *** szabgab left
[21:07] <FROGGS> tadzik: looks like v5 doesn't like panda (or panda doesn't like v5)

[21:07] <labster> tadzik: I sent you a pull request for File::HomeDir (which would improve pandabrew)

[21:07] <FROGGS> ===SORRY!===

[21:07] <FROGGS> Could not find NQPP6QRegex in any of: ...

[21:08] <tadzik> labster: looking

[21:08] <tadzik> FROGGS: ahyes

[21:08] <labster> hi FROGGS o/

[21:08] <tadzik> FROGGS: well, NQPP@*$J(@! is not in lib anywhere :(

[21:09] <tadzik> it should probably be installed with Rakudo

[21:09] <tadzik> if the module ecosystem wants to use it

[21:09] <tadzik> labster: looks good, thanks!

[21:10] <[Coke]> is nqpp6qregex from the parrot nqp?

[21:12] <FROGGS> [Coke]: right

[21:12] <[Coke]> URK?

[21:13] <masak> moritz: I'll have some time to look at tee-two re-views tomorrow ;) thanks for your enthusiasm.

[21:13] <[Coke]> I am surprised to find anything in rakudo-land depending on that.

[21:14] <FROGGS> [Coke]: well, v5 is not really in rakudo land

[21:15] <[Coke]> I'm just wondering why use anything from parrot's nqp (which is on the table to get removed from parrot) rather than nqp.

[21:17] <FROGGS> [Coke]: ahh, no

[21:17] <FROGGS> [Coke]: it is nqp@parrot, not parrot-nqp

[21:18] <[Coke]> Carry on, then. ;)

[21:19] *** leprevost joined
[21:22] <FROGGS> *g*

[21:22] *** mikemol left
[21:23] *** mikemol joined
[21:29] <frdmn> if i ord() an character and get "3" as result... what is that?

[21:30] <geekosaur> control-C?

[21:30] <FROGGS> frdmn: it the third character in the ascii table

[21:30] *** skids joined
[21:30] <FROGGS> r: say "A".ord

[21:30] <p6eval> rakudo ffe441: OUTPUT«65␤»

[21:30] <FROGGS> r: say 65.chr

[21:30] <p6eval> rakudo ffe441: OUTPUT«A␤»

[21:30] <frdmn> i mean... i have a regexp like: s/\x02|\x09|\x13|\x0f|\x15|\x1f|\x16|\x12|\x03(?:\d{1,2}(?:,\d{1,2})?)?//

[21:30] <frdmn> i want to include that character in there

[21:31] <FROGGS> s/\x02|\x03|\x09|\x13|\x0f|\x15|\x1f|\x16|\x12|\x03(?:\d{1,2}(?:,\d{1,2})?)?//

[21:31] <frdmn> oh i am stupid

[21:31] <frdmn> i tried \x3

[21:31] <frdmn> thank your FROGGS

[21:32] <geekosaur> \x3 is the same as \x03

[21:32] <frdmn> hmm... it still appears

[21:32] <geekosaur> and that looks like mIRC attributes (colors)

[21:32] <geekosaur> and indeed it is control-C

[21:32] <frdmn> "101 2 3 101 [...]"

[21:33] <frdmn> all the color attributes are working fine... and the bold tag

[21:34] <geekosaur> you already have \x03 in that regex

[21:34] <geekosaur> the original one, that is

[21:34] <frdmn> yeah

[21:34] <frdmn> that is used for colors

[21:34] <frdmn> \x03

[21:34] <geekosaur> yes

[21:35] <geekosaur> so why are you trying to add it again?

[21:35] <sorear> the behavior of \x has changed between 5 and 6.  beware.

[21:35] <frdmn> im using 5

[21:35] <geekosaur> maybe this belongs in #perl then :)

[21:35] <frdmn> probably, sorry :/

[21:35] *** PacoAir left
[21:36] <frdmn> i was just still in here because of the auther of ilbot :P

[21:36] <frdmn> *author

[21:41] <sorear> geekosaur: iirc moritz has told people to come to #perl6 for ilbot help

[21:41] <geekosaur> ah

[21:50] *** adu_ is now known as adu

[22:04] *** xilo left
[22:07] <frdmn> not sure if its a perl5 or 6 relevant problem but, when i call a method of a module (IRC::Utils)) i get an "Use of inherited AUTOLOAD for non-method IrcLogBot::strip_color() is deprecated at ilbot2.pl line 34." error

[22:07] *** thou left
[22:07] <frdmn> and the script exits

[22:07] <frdmn> can someone help me out there?

[22:08] *** thou joined
[22:09] <masak> frdmn: I think you'll have better luck when moritz is awake. right now he's asleep, I think.

[22:09] <masak> frdmn: try in, hm, about eight hours.

[22:10] <frdmn> okay, masak

[22:10] <frdmn> i assume he is a european?

[22:11] <diakopter> or europan

[22:11] <FROGGS> frdmn: you're assuming right

[22:11] <frdmn> i am from germany as well :P

[22:11] <FROGGS> frdmn: me too :o)

[22:11] <frdmn> \o/

[22:11] <FROGGS> beeing in the same timezone is always a plus

[22:12] <diakopter> me too, well, 8 generations ago

[22:12] <FROGGS> hehe

[22:12] <frdmn> FROGGS: indeed

[22:12] <frdmn> :P

[22:12] <FROGGS> diakopter: well, that's true for your neighbours as well :P

[22:12] <FROGGS> well, at least the chance is pretty gohigh

[22:12] <FROGGS> high

[22:21] *** xilo joined
[22:27] <lue> hello world o/

[22:28] <FROGGS> hi lue 

[22:28] * lue could be in the German timezone too. It'd make his day line up with most people's here

[22:29] *** adu left
[22:37] *** bluescreen10 left
[22:38] *** xilo left
[22:39] *** xilo joined
[22:48] *** xilo left
[22:49] *** xilo joined
[22:57] *** thou left
[22:57] *** thou joined
[23:02] <labster> It would be nice if S05 actually defined backslash sequences, rather than depend on P5's spec.

[23:03] <labster> I'm porting something with \l (lc next letter), and that property isn't mentioned at all, as taken out or included.

[23:11] <labster> huh... it's lowercasing something that matches [a-z]?  that's a no-op anyway!

[23:13] *** census left
[23:14] *** aindilis` joined
[23:15] *** frd|afk joined
[23:15] *** leprevost_ joined
[23:15] *** FROGGS left
[23:16] *** prammer__ joined
[23:16] *** pjcj left
[23:17] *** pjcj joined
[23:17] *** BooK_ joined
[23:17] *** BooK left
[23:20] *** odoacre_ joined
[23:21] *** leprevost left
[23:21] *** odoacre left
[23:21] *** ggoebel left
[23:21] *** prammer_ left
[23:21] *** skids left
[23:21] *** aindilis left
[23:21] *** frdmn left
[23:21] *** skids joined
[23:31] *** leprevost_ left
[23:33] *** leprevost_ joined
[23:36] *** anocelot left
[23:37] *** anocelot joined
[23:42] *** skids left
[23:48] *** skids joined
