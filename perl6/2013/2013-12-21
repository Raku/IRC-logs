[00:01] *** Pleiades` left
[00:01] *** filly left
[00:01] *** filly joined
[00:03] *** Pleiades` joined
[00:05] *** bluescreen100 joined
[00:07] <dalek> perl6-roast-data: 9218024 | coke++ | / (4 files):

[00:07] <dalek> perl6-roast-data: today (automated commit)

[00:07] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/9218024d7b

[00:07] *** thou left
[00:07] <[Coke]> rakudo.moar back to compiling, but not finding Test.pm

[00:08] *** bluescreen10 left
[00:11] <japhb_> Dang.  I'd really like to see what numbers it can put up.

[00:12] <japhb_> Oh, and raydiak, no worries about "spouting off" about a cool Perl 6 project.  That's pretty well on topic here.

[00:13] <[Coke]> perl6-m: use Test;

[00:13] <[Coke]> r: use Test;

[00:13] <camelia> rakudo-parrot 2b027b, rakudo-jvm 2b027b: ( no output )

[00:13] <[Coke]> is it too soon to get rakudo-moar in ther?

[00:13] <[Coke]> rakudo-moar: use Test;

[00:15] <[Coke]> looks like ./perl6-m -Ilib finds it (and then dies elsewise), while PERL6LIB=`pwd`/lib ./perl6-m doesn't find it (and then complains it's not in the directory that it's in)

[00:15] <japhb_> I think it's time to add it to the recognized : names, but not to default it into r:

[00:16] <[Coke]> here, this seems to be the ll exception blocking loading Test:

[00:16] <[Coke]> https://gist.github.com/coke/8063652

[00:17] <TimToady> it wants m: because we'll be testing that heavily

[00:17] <[Coke]> (the -I version works with --ll-exception to give this stack trace - if you remove ll-exception, you get the cannot load error again)

[00:17] <diakopter> japhb_: it would be fun to get an order of magnitude of orders of magnitude improvement there

[00:18] *** ajr_ left
[00:18] <TimToady> no, that would be Fun

[00:19] <diakopter> the exact allusion eludes me

[00:20] *** REPLeffect left
[00:20] <TimToady> it's a bit obscure

[00:21] <TimToady> the 32 bit, to be precise

[00:25] *** xenoterracide joined
[00:30] *** xenoterracide left
[00:31] <[Coke]> who moderates the perl6-announce list?

[00:31] <[Coke]> I had a message rejected due to lack of moderation.

[00:32] <[Coke]> I'm sorry, the list moderators for the perl6-announce list

[00:32] <[Coke]> have failed to act on your post. Thus, I'm returning it to you.

[00:36] *** Rotwang left
[00:37] *** gdey left
[00:42] <lue> TimToady: were you perchance referencing DF?

[00:43] <TimToady> no, I was referencing ASCII

[00:43] *** jnap left
[00:45] *** bluescreen100 left
[01:08] *** xenoterracide joined
[01:26] *** Alina-malina left
[01:26] *** Alina-malina joined
[01:35] *** jnap joined
[01:36] *** rurban1 joined
[01:42] *** kivutar left
[01:50] *** finanalyst joined
[01:50] *** [Sno] joined
[01:52] *** gtxcomm left
[01:56] *** colomon left
[02:04] *** tgt left
[02:05] *** gdey joined
[02:16] *** rurban1 left
[02:22] *** rurban1 joined
[02:24] *** colomon joined
[02:28] *** jeffreykegler left
[02:32] <[Coke]> work in progress for day 21: https://gist.github.com/coke/8064687

[02:40] <raiph> [Coke]: s/progamatic/programmatic/

[02:42] <raiph> "You use a preceding colon in the argument declaration" # maybe mention that the two dots in a colon are mnemonic for a key/val pair?

[02:46] <[Coke]> that mnemonic does nothing for me, I'll omit it.

[02:47] *** rurban1 left
[02:48] <[Coke]> seen moritz?

[02:48] <[Coke]> preflex: seen moritz?

[02:48] <preflex>  moritz was last seen on #git 5 hours, 18 minutes and 19 seconds ago, saying: I don't get any messages by chanserv when I join the channel

[02:48] <[Coke]> preflex: ask moritz if he needs someone to do the release for DEC-19

[02:48] <preflex>  Consider it noted.

[02:49] <[Coke]> note: I am not volunteering. :)

[02:49] *** colomon left
[02:51] *** colomon joined
[02:57] <raiph> [Coke]: your article looks good to go to me # [Coke]++

[03:01] <[Coke]> few more sections. (reload, you'll get one more.)

[03:02] * lue would consider doing an R* release again.

[03:07] <lue> [Coke]++ for the post-to-be

[03:09] <lue> [Coke]: One thing I want to mention is perhaps including the *@a and *%b slurpies in your post. If you can't fit them in the post, that's fine. Just thought I'd mention it.

[03:11] <[Coke]> it's already there.... in a secret version, whoops. unifying shortly.

[03:16] <[Coke]> there, slurpies and methods and traits added.

[03:20] <lue> Some things I noticed: "(using the expanded pair syntax again)" --- you say 'again', but "expanded pair syntax" has never been mentioned before. Getting rid of the "again" would fix it, it seems.

[03:21] <lue> "also showing that positionals and named arguments can be combined in the same declaration." Do you mean to be talking about just pointy blocks? (As in, "combined in one pointy block declaration" ?) Otherwise it seems a bit late to point this out.

[03:23] <lue> I would change "It is always the first parameter" in the Methods section to "It must be the first parameter if you define it" or "It is always the first parameter (defaults to 'self' if you don't specify something)", because the way it is now makes it seem like you *have* to declare a name for C<self>.

[03:24] <lue> And finally, super minor nitpick: "(without parenthesis)" under Slurpy should be parentheses.

[03:24] <lue> [Coke]++ again for the post :)

[03:25] <[Coke]> r: say 18/50

[03:25] <camelia> rakudo-parrot 2b027b, rakudo-jvm 2b027b: OUTPUT«0.36␤»

[03:29] <[Coke]> lue: all your notes addressed in some fashion.

[03:30] *** colomon left
[03:30] <[Coke]> oh, I missed something I wanted to add on multis.

[03:31] *** colomon joined
[03:33] <lue> [Coke]: Just looked at them. Looks good :)

[03:35] <[Coke]> is cached still isn't implemented, right?

[03:38] <diakopter> the general case is pretty hard

[03:39] *** gdey left
[03:40] <[Coke]> "it's just memoize"

[03:40] <[Coke]> (which is pretty hard, yes)

[03:41] <[Coke]> ok, updated gist to include one more example at the end of Types.

[03:41] <[Coke]> wonder if we can get mjd to implement is cached.

[03:44] <diakopter> :)

[03:44] <[Coke]> ok, porting to wp...

[03:49] *** BenGoldberg left
[03:50] *** gfldex left
[03:55] <[Coke]> http://perl6advent.wordpress.com/?p=2191&preview=true

[03:58] <[Coke]> what timezone is the wp server in?

[03:58] <[Coke]> (should go live at 0:03 in the morning, whenever that is.)

[03:59] <lue> [Coke]: UTC as far as I'm aware

[04:01] <[Coke]> eh. I can just push it now, I guess.

[04:02] <TimToady> yes, it thinks it was published 4 hours ago :)

[04:02] <[Coke]> pushed.

[04:03] * lue should never be trusted to handle that error case: "Warning: Wordpress has detected Continuity Errors in your blog via Time Travel. Please correct."

[04:05] <lue> [Coke]: just skimmed over your post to see if there were any missing <> things in your code. There weren't, so far as I could tell.

[04:56] *** preflex_ joined
[04:56] *** ChanServ sets mode: +v preflex_

[04:57] *** preflex left
[04:57] *** preflex_ is now known as preflex

[05:03] *** jnap left
[05:04] *** gfldex joined
[05:06] *** SevenWolf joined
[05:08] *** rurban1 joined
[05:09] *** araujo left
[05:29] *** rurban1 left
[05:33] *** jnap joined
[05:35] <[Coke]> lue++

[05:38] *** jnap left
[05:50] *** nebuchadnezzar left
[05:51] *** nebuchadnezzar joined
[05:53] *** nebuchadnezzar left
[05:53] *** nebuchadnezzar joined
[06:09] *** nebuchadnezzar left
[06:09] *** nebuchadnezzar joined
[06:09] *** SamuraiJack joined
[06:10] *** kaare__ joined
[06:10] *** daxim left
[06:12] <moritz> good morning

[06:12] <preflex>  moritz: you have 1 new message. '/msg preflex messages' to read it.

[06:12] <moritz> sorry, I missed the date for the rakudo release

[06:12] <moritz> I'll do some of it now, but I'll have to travel today and tomorrow

[06:12] <moritz> so might be good if somebody else takes over

[06:13] *** daxim joined
[06:14] <raydiak> \o good morning from the currently dark side of the earth

[06:15] *** hummeleB1 left
[06:26] *** finanalyst left
[06:40] <dalek> rakudo/nom: cd2f9c7 | moritz++ | docs/announce/2013.12.md:

[06:40] <dalek> rakudo/nom: release announcement. Please review!

[06:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cd2f9c792d

[06:41] <dalek> rakudo/nom: 63b0d10 | moritz++ | docs/release_guide.pod:

[06:41] <dalek> rakudo/nom: update release_guide with Dec 2013 release

[06:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/63b0d10f27

[06:42] <dalek> nqp: 9fdfe1f | moritz++ | VERSION:

[06:42] <dalek> nqp: bump VERSION to 2013.12

[06:42] <dalek> nqp: review: https://github.com/perl6/nqp/commit/9fdfe1f2a0

[06:43] <lue> moritz: while you're in the release guide, could you fix the mojibake for the last release name? At least, I'm assuming MalmÃ¶ isn't an actual pm group :)

[06:43] <moritz> lue: where do you see the Mojibake?

[06:43] <moritz> lue: so far everything I've seen wrt the release name has been perfectly fine UTF-8

[06:43] <lue> Right at the bottom, release #70

[06:44] <tadzik> "Private attributes from roles are now visible in the classes they apply to" \o/

[06:44] <lue> Oh, might be github borking things.

[06:44] <moritz> oh, missing encoding directive

[06:44] <moritz> lue++

[06:44] <tadzik> also, I think we may want to redefine the scheduled release dates of Rakudo, as Parrot doesn't get releases anymore

[06:44] <dalek> rakudo/nom: 3514394 | moritz++ | docs/release_guide.pod:

[06:44] <dalek> rakudo/nom: the release guide is written in UTF-8

[06:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3514394749

[06:47] <moritz> lue: mojibake on github gone

[06:50] <lue> yeah, noticed :)

[06:53] <tadzik> wow, Jolla's are orderable as of now: http://shop.jolla.com/

[06:53] <TimToady> http://rosettacode.org/wiki/History_variables#Perl_6

[06:53] <TimToady> wanted to use 'handles *' but that didn't work right

[06:54] <TimToady> also wanted to mixin directly to $var.VAR but that doesn't work either, since those fetches and stores seem to be hotpathed

[06:54] <moritz> eeks, t/hll/06-sprintf.t fails two tets on nqp-parrot

[06:56] *** rurban1 joined
[06:57] <dalek> nqp: 9466ff0 | moritz++ | / (2 files):

[06:57] <dalek> nqp: TODO two failing tests, bump VERSION to 2013.12.1

[06:57] <dalek> nqp: review: https://github.com/perl6/nqp/commit/9466ff0d7a

[06:58] *** darutoko joined
[06:58] <dalek> rakudo/nom: cf133aa | moritz++ | tools/build/NQP_REVISION:

[06:58] <dalek> rakudo/nom: [release] bump NQP revision

[06:58] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cf133aa48a

[06:59] <dalek> rakudo/nom: 03a7756 | moritz++ | VERSION:

[06:59] <dalek> rakudo/nom: [release] bump VERSION

[06:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/03a7756178

[07:00] <lue> TimToady: but how do I know the history of the history?

[07:00] *** rurban1 left
[07:03] * moritz builds the release candidate tarball

[07:05] <lue> moritz: based on tadzik's earlier comment, is the announcement mentioning coordination with Parrot releases still necessary? Or can fixing that wait until next release :) ?

[07:05] <moritz> lue: I'm in no position to make any decisions regarding the release schedule

[07:06] <lue> I was just referring to the specific language in the announcement that clarifies we coordinate with Parrot releases, which according to tadzik doesn't happen anymore.

[07:06] <lue> (not to the actual scheduling itself; no problems with that from me for now)

[07:07] <moritz> lue: well, it already says that it's soon after the parrot releas is *scheduled*, not after the actual release

[07:08] <lue> fair enough, for now at least :) .

[07:08] <moritz> otoh it wouldn't hurt to reword

[07:09] <dalek> rakudo/nom: fc97467 | moritz++ | Configure.pl:

[07:09] <dalek> rakudo/nom: [Configure] --gen-parrot implies backend parrot

[07:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fc97467ed5

[07:09] <dalek> rakudo/nom: 79cdc9f | moritz++ | docs/announce/2013.12.md:

[07:09] <dalek> rakudo/nom: [announce] decouple release date wording a bit from parrot, lue++, tadzik++

[07:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/79cdc9fd47

[07:09] <lue> tadzik: Unless you can provide an argument for a better release date, I'd say just backdefining our current choice would be good in the future. (cf. every SI unit except kg)

[07:11] <moritz> IMHO it would be good to have the rakudo compiler release a bit earlier each month

[07:11] <tadzik> I'm satisfied with the current wording :)

[07:11] <moritz> that would give the R* release manager more time to make the release within the same month

[07:11] <lue> .oO("Paradise comes at the Ides of [Month]!" *cackle*)

[07:14] <lue> Speaking of R*, I'm thinking that I'll probably be up for it. So long as it doesn't have to interrupt Christmas afternoon :)

[07:26] *** Rotwang joined
[07:35] *** jnap joined
[07:39] *** jnap left
[07:42] <moritz> oh noes, somehow I have 3 failing test files with p-spectest

[07:43] <moritz> S05-modifier/perl5_{2,3,4} all abort before finishing

[07:43] <moritz> Unrecognized regex metacharacter ! (must be quoted to match literally)

[07:43] <moritz> at eval_0:1

[07:43] <moritz> ------> my $x = anon regex { ^⏏! }

[07:44] <dalek> rakudo/nom: 1049b41 | moritz++ | t/spectest.data:

[07:44] <dalek> rakudo/nom: comment out failing test files

[07:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1049b41c58

[07:48] <moritz> release tagged and uploaded

[07:49] <raydiak> moritz++

[07:49] <Woodi> thanx moritz++

[07:49] <moritz> annoucement sent to p6c

[07:49] <Woodi> and hi today :)

[07:51] <Woodi> hmm, I had idea of R+ distribution few days ago but forget what was rationale for it...

[07:51] <Woodi> probably it was same as R* but for users not devs...

[07:56] <moritz> uhm, R* is meant for users

[08:11] *** SamuraiJack left
[08:24] *** Piers left
[08:24] *** aindilis left
[08:33] *** cognominal left
[08:34] *** cognominal joined
[08:35] *** jnap joined
[08:40] *** jnap left
[08:57] <labster> I don't know, doubling the x operator can be kind of confusing:

[08:57] <labster> p: my \x = 3; my \xx = 5; sub postfix:<x> ($x) { $x~"1" }; sub x ($x) { $x ~ "2" }; say x(x)x x x xx xx

[08:57] <camelia> rakudo-parrot 1049b4: OUTPUT«321321321 321321321 321321321 321321321 321321321␤»

[08:59] <jercos> holy molé batman.

[09:03] *** raiph left
[09:04] *** cibs_ joined
[09:08] *** cibs left
[09:26] *** araujo joined
[09:26] *** kivutar joined
[09:36] *** jnap joined
[09:38] *** spider-mario joined
[09:41] *** jnap left
[09:42] *** kaare__ left
[09:56] *** kaare__ joined
[10:05] <masak> goooood morning, #perl6

[10:12] * masak sits down to write tomorrow's p6advent post

[10:17] *** finanalyst joined
[10:22] *** V_S_C joined
[10:28] *** V_S_C left
[10:30] <masak> [Coke]: doctor(:prop<cricket bat>, :number<5>);

[10:30] <masak> [Coke]: that <cricket bat> is a list of two strings -- maybe not what you intended?

[10:31] <masak> (it comes out right in this case, because a list of strings stringifies to have a space in between. but if :$prop were typed, it wouldn't have worked)

[10:34] *** woolfy left
[10:35] *** woolfy joined
[10:35] *** lizmat_ joined
[10:35] *** lizmat left
[10:37] *** jnap joined
[10:41] *** jnap left
[10:42] *** dmol left
[10:44] *** dmol joined
[10:46] *** cibs joined
[10:49] *** ssutch left
[10:50] *** beastd joined
[10:50] *** cibs_ left
[10:54] *** denis_boyun joined
[10:54] *** cibs left
[10:55] *** SevenWolf left
[10:59] *** cibs joined
[11:03] *** denis_boyun left
[11:03] *** denis_boyun joined
[11:15] *** rindolf joined
[11:18] *** denis_boyun left
[11:37] <lizmat_> [Coke]++ for blog post, which taught me something I didn't know yet!

[11:39] <colomon> moritz++

[11:41] *** denis_boyun joined
[11:42] <lizmat_> r: sub a (:$b) {say $b}; a(:b<foo>)  # this works

[11:42] <camelia> rakudo-parrot 1049b4, rakudo-jvm 1049b4: OUTPUT«foo␤»

[11:43] <lizmat_> r: sub a (:$b($c)) {say $c}; a(:b<foo>)  # this doesn't, but should?

[11:43] <camelia> rakudo-jvm 1049b4: OUTPUT«Flattening named argument must have VMHash REPR␤␤»

[11:43] <camelia> ..rakudo-parrot 1049b4: OUTPUT«Not enough positional parameters passed; got 0 but expected 1 in sub-signature of parameter $b␤  in sub a at /tmp/zCPqh6ECnC:1␤  in block  at /tmp/zCPqh6ECnC:1␤␤»

[11:43] <lizmat_> std: sub a (:$b($c)) {say $c}; a(:b<foo>)  # this doesn't, but should?

[11:43] <camelia> std 3b262af: OUTPUT«ok 00:01 128m␤»

[11:44] <lizmat_> Am I doing something wrong with the expanded pair syntax as described in [Coke]'s blogpost

[11:44] <masak> r: sub a (:b($c)) {say $c}; a(:b<foo>)

[11:44] <camelia> rakudo-parrot 1049b4, rakudo-jvm 1049b4: OUTPUT«foo␤»

[11:44] <masak> I think the :$b($c) form should either Just Work

[11:44] <masak> or have a much better error message.

[11:44] *** Rotwang left
[11:44] <masak> (and S06 will probably know which)

[11:45] * masak submits rakudobug

[11:45] <lizmat_> ah, now I see it  :-), thanks masak++

[11:45] <masak> (also, the fact that Rakudo JVM gives something different is suspect in itself)

[11:45] <lizmat_> indeed

[11:48] <lizmat_> moritz++ for silent rakudo release

[11:48] *** lizmat_ is now known as lizmat

[11:50] <masak> moritz++

[11:51] *** cibs left
[11:51] *** cibs joined
[11:53] *** cibs left
[11:53] <masak> nwc10++ # I love seeing MoarVM discussion on p6c

[11:56] *** cibs joined
[11:57] * lizmat loves seeing Perl6 and its advent calendar being used to spot/fix problems in Marpa

[11:57] <masak> oh, I missed that part.

[11:57] <masak> but yes, that's lovely.

[11:59] <FROGGS> moritz: the failing perl5 tests might be my fault :/

[11:59] <masak> bisect! bisect! bisect!

[11:59] <FROGGS> I will

[12:00] <masak> it's quite fun to teach, actually.

[12:00] <masak> (did it yesterday, and on Wednesday)

[12:01] <masak> TimToady: would still love to see a post from you on 23rd or 24th.

[12:01] <masak> pmichaud: ditto.

[12:02] <masak> (but I understand if you're too busy, and we'll probably be able to cover for you)

[12:02] * lizmat seconds

[12:03] *** denis_boyun left
[12:08] *** kivutar left
[12:16] *** denisboyun joined
[12:17] <masak> started writing a draft for tomorrow's p6advant post: https://gist.github.com/masak/3e1c8697e27672efe7de

[12:18] <masak> I expect it to be about twice as long. but that's a start.

[12:18] <masak> &

[12:24] *** denisboyun left
[12:29] *** PacoAir joined
[12:33] *** tgt joined
[12:38] *** dmol left
[12:38] *** dmol joined
[12:38] *** jnap joined
[12:43] <FROGGS> p: my $x = "b"; say "ab" ~~ m/a<$x>/

[12:43] <camelia> rakudo-parrot 1049b4: OUTPUT«｢ab｣␤␤»

[12:43] <FROGGS> p: my $x = "\n"; say "a\n" ~~ m/a<$x>/

[12:43] <camelia> rakudo-parrot 1049b4: OUTPUT«False␤»

[12:43] *** jnap left
[12:44] <FROGGS> that is the problem... (which my m:P5 patch hits...)

[12:46] <FROGGS> ahh! /o\

[12:47] <FROGGS> that strikes again: rakudo/src/core/Cursor.pm:195:        my $rx := eval("my \$x = anon regex \{ $arg \}");

[12:48] *** denis_boyun joined
[12:49] <FROGGS> well, it is more about the other evals

[12:55] *** denis_boyun left
[12:57] *** denis_boyun joined
[13:06] *** denis_boyun left
[13:13] *** denis_boyun joined
[13:24] *** colomon left
[13:28] *** denis_boyun left
[13:33] *** fhelmberger joined
[13:33] *** colomon joined
[13:37] <colomon> o/ # computer reclaimed from cartoon-watching 5yo

[13:39] *** yeltzooo9 left
[13:39] *** jnap joined
[13:41] *** yeltzooo joined
[13:44] *** jnap left
[13:45] *** gfldex left
[13:51] *** ivanshmakov left
[13:52] *** ivanshmakov joined
[13:53] *** gfldex joined
[14:01] *** Rotwang joined
[14:08] *** cognominal left
[14:08] *** cognominal joined
[14:09] *** fhelmberger_ joined
[14:11] *** jnap joined
[14:12] *** fhelmberger left
[14:13] *** fhelmberger_ left
[14:25] *** mtk left
[14:28] *** mtk joined
[14:43] *** atroxaper joined
[14:46] *** xinming left
[14:49] *** xinming joined
[14:53] *** telex left
[14:54] *** atroxaper left
[14:55] <FROGGS> p: my @a := nqp::split("", "abc") # why is that so?

[14:55] <camelia> rakudo-parrot 1049b4: OUTPUT«Unmarshallable foreign language value passed for parameter '$got'␤  in block  at /tmp/_53Pye4a2I:1␤␤»

[14:55] *** atroxaper joined
[14:56] *** telex joined
[15:10] *** zakharyas joined
[15:15] *** wsri left
[15:15] *** kivutar joined
[15:15] *** wsri joined
[15:19] *** rurban1 joined
[15:31] *** pecastro left
[15:39] *** zaydon joined
[15:43] *** jeffreykegler joined
[15:45] *** raiph joined
[15:47] *** cognominal left
[15:49] *** cognominal joined
[15:53] *** kivutar left
[15:53] *** cooper left
[15:53] <TimToady> I can probably do the 24th, if I can figure out what to write about

[15:54] <TimToady> hopefully my cold will be easing up over the next day or two

[15:55] <TimToady> anyway, ideas welcome

[15:58] *** hummeleB1 joined
[15:58] *** dayangkun left
[15:58] *** Psyche^ joined
[16:02] *** Psyche^_ left
[16:02] <[Coke]> masak: no, I didn't mean that. Fixing.

[16:05] <[Coke]> updated to ("cricket bat")

[16:05] *** Rotwang left
[16:12] <[Coke]> masak++

[16:12] <dalek> rakudo-star-daily: 8bb7e1d | coke++ | log/ (5 files):

[16:12] <dalek> rakudo-star-daily: today (automated commit)

[16:12] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/8bb7e1d40e

[16:13] *** WHAT joined
[16:13] *** WHAT is now known as Guest57937

[16:14] *** Guest57937 left
[16:15] *** lahlha joined
[16:17] <[Coke]> we have a failure in R*: https://github.com/coke/rakudo-star-daily/blob/master/log/test-modules.log - modules/perl6-lwp-simple's t/get-unsized.t  

[16:17] <TimToady> masak: :$b($c) might Just Work, but it will probably Just Work Wrong, unless you meant :$b ($c)

[16:18] *** cognominal left
[16:18] *** cognominal joined
[16:20] *** Rotwang joined
[16:29] <TimToady> (in a sig, that is; in normal code it'd be a pair with a postcircumfix:<( )>)

[16:30] <timotimo> should :$b($c) be forbidden in signatures then and give a helpful error message?

[16:30] <timotimo> std: my int a = 5;

[16:30] <camelia> std 3b262af: OUTPUT«[31m===[0mSORRY![31m===[0m␤Multiple prefix constraints not yet supported at /tmp/SasOKSPDNi line 1:␤------> [32mmy int [33m⏏[31ma = 5;[0m␤Malformed my at /tmp/SasOKSPDNi line 1:␤------> [32mmy int [33m⏏[31ma = 5;[0m␤    expecting any of:…»

[16:30] <timotimo> r: my int a = 5;

[16:30] <camelia> rakudo-jvm 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'int' is not declared. Did you mean 'Int'?␤at /tmp/Qp6I8Df8xh:1␤------> [32mmy int [33m⏏[31ma = 5;[0m␤Malformed my␤at /tmp/Qp6I8Df8xh:1␤------> [32mmy int [33m⏏[31ma = 5;[0m␤    expecting any of:…»

[16:30] <camelia> ..rakudo-parrot 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'int' is not declared. Did you mean 'Int'?␤at /tmp/QyDxdSn37l:1␤------> [32mmy int [33m⏏[31ma = 5;[0m␤Malformed my␤at /tmp/QyDxdSn37l:1␤------> [32mmy int [33m⏏[31ma = 5;[0m␤    expecting any …»

[16:30] <timotimo> r: my Int a = 5;

[16:30] <camelia> rakudo-parrot 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'Int' is not declared. Did you mean 'int'?␤at /tmp/q_Z_OLS6bO:1␤------> [32mmy Int [33m⏏[31ma = 5;[0m␤Malformed my␤at /tmp/q_Z_OLS6bO:1␤------> [32mmy Int [33m⏏[31ma = 5;[0m␤    expecting any …»

[16:30] <camelia> ..rakudo-jvm 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'Int' is not declared. Did you mean 'int'?␤at /tmp/ossbZBExQ_:1␤------> [32mmy Int [33m⏏[31ma = 5;[0m␤Malformed my␤at /tmp/ossbZBExQ_:1␤------> [32mmy Int [33m⏏[31ma = 5;[0m␤    expecting any of:…»

[16:30] <timotimo> interesting, I'll look into that

[16:31] <TimToady> well, and does it make sense to disallow brackets after :$b in normal code?

[16:32] *** SamuraiJack joined
[16:32] <timotimo> didn't think about that yet

[16:33] <timotimo> hm, i don't really know why rakudo falls through to the typo_typename branch of token scoped; it should hit the same NYI as std IMO. i'll investigate further

[16:36] <timotimo> ah, of course!

[16:36] <timotimo> typename requires the type to actually be declared

[16:36] <FROGGS> TimToady: 

[16:36] <FROGGS> err

[16:37] <FROGGS> TimToady: some sort of "why I designed it that way" or so would be awesome

[16:37] <FROGGS> because your perspective is very interesting, and is another than the usually dev has

[16:39] <FROGGS> is different from*

[16:45] *** xenoterracide left
[16:46] *** FROGGS left
[16:46] *** finanalyst left
[16:53] <TimToady> well, that would be a whole book

[16:55] *** fhelmberger joined
[16:58] *** fhelmberger left
[16:59] *** fhelmberger joined
[17:00] *** FROGGS joined
[17:03] *** bluescreen10 joined
[17:03] *** fhelmberger left
[17:10] *** atroxaper left
[17:14] <timotimo> i'm trying to make my Int foo = 5 throw a "malformed variable identifier (did you mean to declare a \sigilless variable instead?)"

[17:14] <timotimo> does that seem sane?

[17:15] <FROGGS> think so

[17:15] <FROGGS> at least in case "Int" is a known type

[17:16] <timotimo> yes

[17:16] <timotimo> i'm matching multiple known typenames, then an ident and then \: ** 0..2 \=

[17:16] <timotimo> multiple == one or more

[17:17] *** xenoterracide joined
[17:18] <dalek> std: 4731beb | larry++ | STD.pm6:

[17:18] <dalek> std: disallow extra brackets on various pair thingies

[17:18] <dalek> std: review: https://github.com/perl6/std/commit/4731beb845

[17:22] *** xenoterracide left
[17:23] <TimToady> maybe s/variable/name/, since sigilless names are not generally variables

[17:24] <TimToady> r: my Int \foo = 42; say foo

[17:24] <camelia> rakudo-parrot 1049b4, rakudo-jvm 1049b4: OUTPUT«42␤»

[17:24] <TimToady> r: my Int \foo = "oops"; say foo

[17:24] <camelia> rakudo-jvm 1049b4: OUTPUT«Type check failed in binding; expected 'Int' but got 'Str'␤␤»

[17:24] <camelia> ..rakudo-parrot 1049b4: OUTPUT«Type check failed in binding; expected 'Int' but got 'Str'␤  in block  at /tmp/6XudZIH_G1:1␤␤»

[17:24] <TimToady> \o/

[17:24] <timotimo> i'll change that

[17:24] <FROGGS> there is progress :o)

[17:24] <timotimo> progress on what?

[17:25] <FROGGS> on everything

[17:25] *** raiph left
[17:25] <timotimo> sounds good

[17:25] <TimToady> .oO(even congress has had progress lately)

[17:25] *** raiph joined
[17:25] <FROGGS> I remember that the last code did something weird a few months back

[17:26] *** SamuraiJack left
[17:26] <TimToady> metoo, which is why I tried it

[17:27] <timotimo> the last code of what? huh?

[17:27] <FROGGS> yeah... rakudo really gets "mature" these days

[17:27] <FROGGS> timotimo: this: my Int \foo = "oops"; say foo

[17:27] <FROGGS> star: my Int \foo = "oops"; say foo

[17:27] <camelia> star 2013-09: OUTPUT«Type check failed in binding; expected 'Int' but got 'Str'␤  in block  at /tmp/9FcvSywF1S:1␤␤»

[17:27] <timotimo> oh!

[17:27] <FROGGS> must be a few months more :o)

[17:28] <TimToady> n: my Int \foo = "oops"; say foo

[17:28] <camelia> niecza v24-108-g17d73e4: OUTPUT«oops␤»

[17:29] <timotimo> a full rebuild of rakudo-jvm and rakudo-parrot in parallel takes quite a while on my laptop :(

[17:29] <TimToady> std: my $b; my $c; :$b($c)

[17:29] <timotimo> oh well. it's not supposed to be a desktop replacement anyway

[17:29] <camelia> std 3b262af: OUTPUT«ok 00:01 124m␤»

[17:29] *** colomon left
[17:30] *** colomon joined
[17:32] <FROGGS> geese, but I am getting better now after ten times: http://www.youtube.com/watch?v=qyMOaROAz9I

[17:40] <FROGGS> p: say "!".ord

[17:40] <camelia> rakudo-parrot 1049b4: OUTPUT«33␤»

[17:41] *** lahlha left
[17:49] <TimToady> std: my $b; my $c; :$b($c)

[17:49] <camelia> std 4731beb: OUTPUT«[31m===[0mSORRY![31m===[0m␤Extra argument not allowed; pair already has variable argument at /tmp/Rxc8orY6Rm line 1:␤------> [32mmy $b; my $c; :$b[33m⏏[31m($c)[0m␤Parse failed␤FAILED 00:01 122m␤»

[17:49] <TimToady> std: -> :$b($c) {}

[17:49] <camelia> std 4731beb: OUTPUT«[31m===[0mSORRY![31m===[0m␤Subsignature not allowed after named parameter; please insert whitespace at /tmp/kzohuS6EdA line 1:␤------> [32m-> :$b[33m⏏[31m($c) {}[0m␤Parse failed␤FAILED 00:01 122m␤»

[17:49] <TimToady> std: -> :$b ($c) {}

[17:49] <camelia> std 4731beb: OUTPUT«Potential difficulties:␤  $c is declared but not used at /tmp/UjyXulYy7p line 1:␤------> [32m-> :$b ([33m⏏[31m$c) {}[0m␤ok 00:01 124m␤»

[17:50] <TimToady> std: -> :$b[$c] {}

[17:50] <camelia> std 4731beb: OUTPUT«[31m===[0mSORRY![31m===[0m␤Subsignature not allowed after named parameter; please insert whitespace at /tmp/KXeT0qqFV_ line 1:␤------> [32m-> :$b[33m⏏[31m[$c] {}[0m␤Parse failed␤FAILED 00:01 122m␤»

[17:50] <TimToady> std: -> :$b<foo> {}

[17:50] <camelia> std 4731beb: OUTPUT«[31m===[0mSORRY![31m===[0m␤Cannot apply this shape at /tmp/IJSBx5uVln line 1:␤------> [32m-> :$b[33m⏏[31m<foo> {}[0m␤Parse failed␤FAILED 00:01 122m␤»

[17:50] <TimToady> std: -> :%b<foo> {}

[17:50] <camelia> std 4731beb: OUTPUT«ok 00:01 124m␤»

[17:50] *** pecastro joined
[18:01] <FROGGS> std: my $c; :$<foo>($c)

[18:01] <camelia> std 4731beb: OUTPUT«[31m===[0mSORRY![31m===[0m␤Extra argument not allowed; pair already has variable argument at /tmp/j70p6Pn7O7 line 1:␤------> [32mmy $c; :$<foo>[33m⏏[31m($c)[0m␤Parse failed␤FAILED 00:01 122m␤»

[18:05] *** cooper joined
[18:05] *** cooper left
[18:05] *** cooper joined
[18:18] *** ssutch joined
[18:26] <FROGGS> p: my $q = "+"; say "aaa" ~~ /a<$q>/ # should this match "aaa"?

[18:26] <camelia> rakudo-parrot 1049b4: OUTPUT«Failed allocation of 2345205760 bytes␤Parrot VM: PANIC: Out of mem!␤C file src/gc/gc_gms.c, line 1974␤Parrot file (not available), line (not available)␤␤We highly suggest you notify the Parrot team if you have not been working on␤Parrot.  Use…»

[18:30] *** jeffreykegler left
[18:32] <[Coke]> lizmat++

[18:35] *** tgt left
[18:36] *** ajr joined
[18:37] *** ajr is now known as Guest10017

[18:37] *** Guest10017 is now known as ajr_

[18:41] *** rurban1 left
[18:45] *** pdurbin joined
[18:46] *** denis_boyun joined
[18:46] *** rurban1 joined
[18:46] *** PacoAir left
[18:47] *** PacoAir joined
[18:54] *** denis_boyun left
[18:58] *** rurban1 left
[19:01] *** dwarring joined
[19:05] *** darutoko left
[19:12] *** smls joined
[19:13] <smls> Hi

[19:16] *** mtk left
[19:17] <FROGGS[mobile]> Hi smls

[19:17] <smls> What's the best way to start playing around with Perl 6?

[19:17] <smls> Raduko Star?

[19:18] <FROGGS[mobile]> yes, that and maybe read the Advent calender posts

[19:27] * [Coke] wonders if anyone has fixed hte jvm eval server leak.

[19:30] <diakopter> no

[19:30] <pdurbin> smls: what operating system are you on?

[19:31] <smls> 64bit Linux

[19:31] <pdurbin> on Fedora you can just yum install it

[19:32] <nwc10> how old is the version that yum installs?

[19:33] *** bartolin joined
[19:34] * pdurbin starts installing it

[19:35] <pdurbin> nwc10: rakudo-star-0.0.2013.09_5.5.0-1.fc19.x86_64

[19:35] <nwc10> not that old

[19:35] <pdurbin> of course, I assume there's a newer version in Fedora 20

[19:35] <FROGGS[mobile]> nice

[19:36] <smls> pdurbin: My distro (Arch Linux) has a raduko-2013.11 package in the inofficial user repository, I'm installing it now

[19:36] <pdurbin> smls: cool

[19:36] <smls> (it compiles from source, so it's taking a while)

[19:38] *** gfldex left
[19:39] *** bartolin left
[19:52] *** bartolin joined
[19:54] *** kurahaupo_mobile joined
[19:58] <lue> hello world o/

[20:05] <colomon> \o

[20:10] <woolfy> TimToady: subject to write advent blog for the 24th about: a state of Perl 6 from your view, most important things that have changed.  Just an idea.

[20:12] <woolfy> TimToady: if you got the energy to write such a book (re:  FROGGS "some sort of "why I designed it that way" or so would be awesome"): such a book would really be awesome and I would buy quite a pile to sell them at Perl-events

[20:22] * rjbs pants, only three more days to make it through!

[20:30] <smls> Is there a way to tell the .perl method to deparse the contents of code references for debugging purpuses?

[20:30] <smls> p: my $code = sub ($x) { $x + 20 }; say $code.perl;

[20:30] <camelia> rakudo-parrot 1049b4: OUTPUT«sub($x) { ... }␤»

[20:30] <timotimo> we don't have that i'm afraid

[20:30] <smls> Perl 5's Data::Dumper supports this

[20:30] <timotimo> what does it look like? does it give you the source code?

[20:30] <timotimo> or does it give you a parse tree or something like that?

[20:31] <timotimo> we have --target=parse to get a parse tree, --target=ast to get an AST and --target=pir to get parrot intermediate representation output

[20:33] <timotimo> ah, i see, Data::Dumper would give you the perl5 source code of the thing you're after

[20:33] <timotimo> on rakudo, you can find any method or sub that doesn't start with nqp:: in gen/p-CORE.setting which is perl6 code

[20:33] <timotimo> (the code in the core setting uses some low-level primitives, those are the ones starting with nqp::)

[20:36] <smls> timotimo: It would output Perl source code as generated by B:Deparse

[20:37] <smls> for example: http://pastebin.com/raw.php?i=iy6MFBqL

[20:38] <timotimo> ah. yes, we don't have something like that

[20:38] <smls> ok

[20:49] *** rurban1 joined
[20:58] <GlitchMr> <smls> pdurbin: My distro (Arch Linux) has a raduko-2013.11 package in the inofficial user repository, I'm installing it now

[20:58] <GlitchMr> You mean AUR?

[20:58] <smls> yes

[20:58] <GlitchMr> Also, I just downloaded Rakudo Perl on Fedora 20. I'm surprised, it's just 6.2MB.

[20:58] *** tgt joined
[21:00] *** thou joined
[21:00] <GlitchMr> (it even includes panda, but it's not in PATH for some reason - under /usr/lib64/parrot/5.5.0/languages/perl6/bin)

[21:01] <timotimo> r: try eval "my Int a = 10"; say $!.WHAT

[21:01] <camelia> rakudo-parrot 1049b4, rakudo-jvm 1049b4: OUTPUT«(X::Comp::Group)␤»

[21:01] <timotimo> r: try eval "my Int a = 10"; say $!

[21:01] <camelia> rakudo-parrot 1049b4, rakudo-jvm 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'Int' is not declared. Did you mean 'int'?␤at eval_0:1␤------> [32mmy Int [33m⏏[31ma = 10[0m␤Malformed my␤at eval_0:1␤------> [32mmy Int [33m⏏[31ma = 10[0m␤    expecting any…»

[21:01] <timotimo> hm.

[21:02] *** kurahaupo_mobile left
[21:02] <timotimo> r: try eval "my Int a = 10"; say $!.sorrows>>.WHAT;

[21:02] <camelia> rakudo-parrot 1049b4, rakudo-jvm 1049b4: OUTPUT«(Array)␤»

[21:02] <timotimo> r: try eval "my Int a = 10"; say $!.sorrows.map: *.WHAT;

[21:02] <camelia> rakudo-jvm 1049b4: OUTPUT«No such method 'count' for invocant of type 'Whatever'␤  in block  at gen/jvm/CORE.setting:7255␤  in block  at gen/jvm/CORE.setting:7167␤  in block  at gen/jvm/CORE.setting:7167␤  in block  at gen/jvm/CORE.setting:7167␤  in block  at gen/jvm/CORE.…»

[21:02] <camelia> ..rakudo-parrot 1049b4: OUTPUT«No such method 'count' for invocant of type 'Whatever'␤  in method reify at gen/parrot/CORE.setting:7266␤  in method reify at gen/parrot/CORE.setting:7183␤  in method reify at gen/parrot/CORE.setting:7183␤  in method reify at gen/parrot/CORE.sett…»

[21:02] <timotimo> wow, whoops

[21:02] <timotimo> r: try eval "my Int a = 10"; say $!.sorrows.map: { .WHAT };

[21:02] <camelia> rakudo-parrot 1049b4, rakudo-jvm 1049b4: OUTPUT«(X::Undeclared)␤»

[21:03] <timotimo> r: try eval "my Int a = 10"; say $!.panic;

[21:03] <camelia> rakudo-parrot 1049b4, rakudo-jvm 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling eval_0␤Malformed my␤at eval_0:1␤------> [32mmy Int [33m⏏[31ma = 10[0m␤    expecting any of:␤        scoped declarator␤»

[21:03] *** kivutar joined
[21:04] <lue> GlitchMr: just so you know, that is expected behavior.

[21:05] <timotimo> what exactly?

[21:05] <timotimo> the panda path?

[21:06] <dalek> rakudo/nom: 57a89f4 | (Timo Paulssen)++ | src/Perl6/Grammar.nqp:

[21:06] <dalek> rakudo/nom: suggest \ for sigilless var declarations

[21:06] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/57a89f4605

[21:07] <timotimo> oh, hm.

[21:07] <timotimo> r: my Int a;

[21:07] <camelia> rakudo-jvm 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'Int' is not declared. Did you mean 'int'?␤at /tmp/UAOQdAw0Cc:1␤------> [32mmy Int [33m⏏[31ma;[0m␤Malformed my␤at /tmp/UAOQdAw0Cc:1␤------> [32mmy Int [33m⏏[31ma;[0m␤    expecting any of:␤     …»

[21:07] <camelia> ..rakudo-parrot 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'Int' is not declared. Did you mean 'int'?␤at /tmp/bbmDyHIvCd:1␤------> [32mmy Int [33m⏏[31ma;[0m␤Malformed my␤at /tmp/bbmDyHIvCd:1␤------> [32mmy Int [33m⏏[31ma;[0m␤    expecting any of:␤  …»

[21:07] <timotimo> right. that needs a fix, too.

[21:08] <lue> timotimo: yes, that is what I meant.

[21:08] <GlitchMr> Huh? But Int does exist.

[21:08] <GlitchMr> Is it because of forgotten sigil?

[21:09] <timotimo> yes.

[21:09] <timotimo> i'm working on it :)

[21:09] <GlitchMr> If I change this to int, it suggests me to use Int. Help, I'm trapped in recursion factory.

[21:09] <timotimo> you'll have a fix on your hands very soon

[21:10] *** thou left
[21:10] <timotimo> need to rebuild some stuff first and then test my fix

[21:12] <timotimo> r: my foobar = 5;

[21:12] <camelia> rakudo-jvm 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'foobar' is not declared␤at /tmp/DvKDIvrObv:1␤------> [32mmy foobar[33m⏏[31m = 5;[0m␤Malformed my␤at /tmp/DvKDIvrObv:1␤------> [32mmy [33m⏏[31mfoobar = 5;[0m␤    expecting any of:␤        scope…»

[21:12] <camelia> ..rakudo-parrot 1049b4: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'foobar' is not declared␤at /tmp/6BjM0tc5mO:1␤------> [32mmy foobar[33m⏏[31m = 5;[0m␤Malformed my␤at /tmp/6BjM0tc5mO:1␤------> [32mmy [33m⏏[31mfoobar = 5;[0m␤    expecting any of:␤        sc…»

[21:12] <timotimo> i could give a better error message there, too.

[21:16] *** bartolin left
[21:18] *** xenoterracide joined
[21:19] <timotimo> wow, just 98 seconds for a stage parse on my desktop. that was one second more recently

[21:19] <GlitchMr> foobar is not a type here.

[21:20] <timotimo> that's right

[21:20] <timotimo> as i said, i want to make it emit a better error.

[21:20] <timotimo> just some final touches on this code and it'll be ready to push

[21:21] <GlitchMr> I would think that user wanted to create a local variable called foobar, not that he forgot to name a variable.

[21:21] <GlitchMr> Unless "foobar" would be name of the type, assume it's a local variable, not a type.

[21:22] <GlitchMr> my Int = 5; # forgot variable name

[21:22] <GlitchMr> my foobar = 5; # forgot a sigil

[21:23] <timotimo> yes, i know all of this!

[21:25] *** rindolf left
[21:28] * timotimo fights surprising NPMCA issues

[21:36] <timotimo> ah, i forgot to force the grammar to generate the $/

[21:40] <masak> 'evenin', #perl6

[21:42] <timotimo> i can still get it to null pmc access in get_string :(

[21:42] <timotimo> hey masak :)

[21:43] <timotimo> are you giving us t4 reviews for christmas? :D

[21:43] *** denisboyun joined
[21:44] <masak> timotimo: that would be quite awesome, wouldn't it?

[21:44] <masak> in the spirit of Perl 6, I'm not going to make any promises :)

[21:44] <timotimo> :)

[21:44] <timotimo> but perl6 does have Promises now!

[21:44] <masak> but it might be good to know that I haven't dropped t4; just haven't had tuits for p6cc at all.

[21:44] <masak> timotimo: Perl 6 makes Promises -- the core devs don't :)

[21:46] <timotimo> :)

[21:46] <masak> TimToady: topic suggestion: "40-Year Desert Journey Best Practices" :D

[21:46] <timotimo> r: my int;

[21:46] <camelia> rakudo-parrot 57a89f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'int' is not declared. Did you mean 'Int'?␤at /tmp/2T4Rv9mMCv:1␤------> [32mmy int[33m⏏[31m;[0m␤Malformed my␤at /tmp/2T4Rv9mMCv:1␤------> [32mmy int[33m⏏[31m;[0m␤    expecting any of:␤      …»

[21:46] <camelia> ..rakudo-jvm 57a89f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Type 'int' is not declared. Did you mean 'Int'?␤at /tmp/f0cA47V4Il:1␤------> [32mmy int[33m⏏[31m;[0m␤Malformed my␤at /tmp/f0cA47V4Il:1␤------> [32mmy int[33m⏏[31m;[0m␤    expecting any of:␤        s…»

[21:47] <timotimo> dang, where does the null pmca come from?

[21:48] <timotimo> oh, does it only happen in the repl?

[21:49] <timotimo> yes, indeed. huh!

[21:49] *** thou joined
[21:51] *** smls left
[21:53] *** ajr_ left
[21:53] *** denisboyun left
[21:54] *** jnap left
[21:58] <timotimo> well, that kind of sucks :(

[21:59] <timotimo> should i say "well, in compiled code and in the tests it works just fine!" or should i go hunt for some regression that only happens in our repl?

[22:03] *** kurahaupo_mobile joined
[22:04] <masak> rn: sub infix_prefix_meta_operator:<!!!>($op) {}; say "alive"

[22:04] *** kaare__ left
[22:04] <camelia> niecza v24-108-g17d73e4: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Cannot extend category:infix_prefix_meta_operator with subs at /tmp/JTWvE0IR5a line 1:␤------> [32msub infix_prefix_meta_operator:<!!!>[33m⏏[31m($op) {}; say "alive"[0m␤␤Potential difficulties:␤  $op i…»

[22:04] <camelia> ..rakudo-parrot 57a89f: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/WbpLnETYOU␤Cannot add tokens of category 'infix_prefix_meta_operator'␤at /tmp/WbpLnETYOU:1␤------> [32msub infix_prefix_meta_operator:<!!!>[33m⏏[31m($op) {}; say "alive"[0m␤    expec…»

[22:04] <camelia> ..rakudo-jvm 57a89f: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/bYcpvoy6ri␤Cannot add tokens of category 'infix_prefix_meta_operator'␤at /tmp/bYcpvoy6ri:1␤------> [32msub infix_prefix_meta_operator:<!!!>[33m⏏[31m($op) {}; say "alive"[0m␤    expectin…»

[22:04] <masak> aww

[22:06] *** denisboyun joined
[22:11] *** gfldex joined
[22:11] *** denisboyun left
[22:13] *** denis_boyun joined
[22:16] *** jeff_s1 joined
[22:18] <masak> tomorrow's advent post: https://gist.github.com/masak/3e1c8697e27672efe7de

[22:18] * masak puts it into wordpress

[22:19] *** denis_boyun__ joined
[22:19] *** denis_boyun left
[22:22] <masak> "Word count: 666" -- oops

[22:22] <masak> I'll take that as a good sign ;)

[22:23] *** xenoterracide left
[22:24] *** denis_boyun__ left
[22:25] *** jnap joined
[22:29] *** jnap left
[22:31] <masak> post scheduled.

[22:31] <masak> 'night, #perl6

[22:35] *** thou left
[22:36] *** denis_boyun joined
[22:39] *** dmol left
[22:40] *** denis_boyun left
[22:44] *** zaydon left
[22:44] <lizmat> masak++

[22:44] <lizmat> and also gnight #perl6!

[22:45] *** bbkr joined
[22:47] <dalek> mu: df82f79 | (Elizabeth Mattijsen)++ | misc/perl6advent-2013/schedule:

[22:47] <dalek> mu: TimToady++

[22:47] <dalek> mu: review: https://github.com/perl6/mu/commit/df82f79f66

[22:51] *** bbkr left
[23:01] *** kurahaupo_mobile left
[23:02] <lue> timotimo: At least way back when, the REPL was frequently an unreliable source of problem-hunting in Perl 6. Don't know how true that still is.

[23:02] *** denis_boyun joined
[23:04] <timotimo> mhm

[23:13] <lue> Wow. Wp's formatting of <pre> blocks (at least in the advent blog's theme) makes the font so small for me, the tildes look like hyphens :/

[23:17] <lue> masak++ for the blog post.

[23:18] *** denis_boyun left
[23:22] *** [Sno] left
[23:22] *** [Sno] joined
[23:24] *** denis_boyun joined
[23:25] *** jnap joined
[23:30] *** jnap left
[23:32] *** gfldex left
[23:33] *** nwc10 left
[23:33] *** gfldex joined
[23:33] *** zakharyas left
[23:36] *** finanalyst joined
[23:39] *** spider-mario left
[23:45] *** nwc10 joined
[23:54] *** denis_boyun_ joined
[23:55] *** denis_boyun left
