[00:03] *** pdurbin joined
[00:09] *** slavik left
[00:12] *** Psyche^ joined
[00:13] *** Psyche^_ left
[00:14] <Mouq> wtf? How do you get the length of Str?

[00:15] <Mouq> kk

[00:16] <Mouq> r: "a‚Üíb".encode("utf8").bytes.say

[00:16] <camelia> rakudo 67c6fd: OUTPUT¬´5‚ê§¬ª

[00:17] <Mouq> Good call, Perl 6. Still wish it was more obvious

[00:18] <geekosaur> length is not as obvious as you think. bytes? codepoints? graphemes?

[00:18] <geekosaur> you must declare which you mean because all attempts at figuring it out met very sad ends in bewildering behavior

[00:19] <Mouq> I know. It would be nice if Perl would tell me as much when I try to do "abcd".length or something

[00:20] *** PacoAir left
[00:20] <Mouq> So the "Oh, duh" moment I just had would be automated :)

[00:20] <geekosaur> mm. that might be fileable as an LTA bug

[00:22] <Mouq> r: "a‚Üíb".codes

[00:22] <camelia> rakudo 67c6fd:  ( no output )

[00:22] <Mouq> r: "a‚Üíb".codes.say # Yay

[00:22] <camelia> rakudo 67c6fd: OUTPUT¬´3‚ê§¬ª

[00:23] *** benabik left
[00:24] <BenGoldberg> r: "a‚Üíb".graphemes.say

[00:24] <camelia> rakudo 67c6fd: OUTPUT¬´No such method 'graphemes' for invocant of type 'Str'‚ê§  in block  at /tmp/BvmkZcdM22:1‚ê§‚ê§¬ª

[00:26] <BenGoldberg> r: my @a = ("foo", "bar"); @a[1] := @a; print @a

[00:26] <camelia> rakudo 67c6fd: OUTPUT¬´(timeout)foofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoof‚Ä¶

[00:26] *** cognominal joined
[00:27] <BenGoldberg> How would one go about counting the number of graphemes in a string?

[00:27] <lee_> r: "a‚Üíb".chars.say

[00:27] <camelia> rakudo 67c6fd: OUTPUT¬´3‚ê§¬ª

[00:28] <lee_> maybe that?

[00:29] <BenGoldberg> How does .codes differ from .chars?

[00:31] *** benabik joined
[00:32] <lee_> they appears to be implemented exactly the same in Cool.pm

[00:37] <Mouq> rnp: 1.say

[00:37] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f, pugs: OUTPUT¬´1‚ê§¬ª

[00:38] <Mouq> rnp: "a" ~~ tr/a/b/

[00:38] <camelia> pugs: OUTPUT¬´*** Can't modify constant item: VStr "a"‚ê§    at /tmp/FbNGtW2VCN line 1, column 1 - line 2, column 1‚ê§¬ª

[00:38] <camelia> ..rakudo 67c6fd: OUTPUT¬´Cannot modify an immutable value‚ê§  in block  at /tmp/5MqozMZ8FM:1‚ê§‚ê§¬ª

[00:38] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Action method quote:tr not yet implemented at /tmp/NkLUtWdi4w line 1 (EOF):‚ê§------> [32m"a" ~~ tr/a/b/[33m‚èè[31m<EOL>[0m‚ê§‚ê§Unhandled exception: Check failed‚ê§‚ê§  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ ‚Ä¶

[00:39] <Mouq> rnp: (my $s = "a") ~~ tr/a/b/

[00:39] <camelia> niecza v24-95-ga6d4c5f: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Action method quote:tr not yet implemented at /tmp/3AyTsSIKuJ line 1 (EOF):‚ê§------> [32m(my $s = "a") ~~ tr/a/b/[33m‚èè[31m<EOL>[0m‚ê§‚ê§Potential difficulties:‚ê§  $s is declared but not used at /tmp/3AyTsSIKuJ line 1:‚ê§------> ‚Ä¶

[00:39] <camelia> ..rakudo 67c6fd, pugs:  ( no output )

[00:40] *** cognominal left
[00:43] *** ssutch joined
[00:52] *** benabik left
[00:56] <Mouq> BenGoldberg: I may have your issue solved, give me some time to test the code

[00:59] *** benabik joined
[01:05] *** slavik joined
[01:11] <dalek> evalbot: d0cc1d3 | Mouq++ | / (2 files):

[01:11] <dalek> evalbot: Formatting of output doesn't belong in executor

[01:11] <dalek> evalbot: 

[01:11] <dalek> evalbot: Moved output formatting from EvalbotExecuter to Evalbot. The strange

[01:11] <dalek> evalbot: placement of formatting in EvalbotExecuter made the code confusing and

[01:11] <dalek> evalbot: caused Issue #2.

[01:11] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/d0cc1d345f

[01:14] <Mouq> If that code didn't break it, it fixed it :p I presume moritz hosts the evalbot and will have to update it manually

[01:23] <BenGoldberg> Mouq++

[01:27] <colomon> t/spec/S32-str/substr-rw.t failing in Rakudo JVM?

[01:38] *** camelia joined
[01:38] <diakopter> r: Mouq

[01:38] <diakopter>  /o\

[01:39] *** ChanServ sets mode: +v camelia

[01:39] <camelia> rakudo 67c6fd: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/THa5MkibxI‚ê§Undeclared name:‚ê§    Mouq used at line 1‚ê§‚ê§¬ª

[01:39] <diakopter> rn: say 1..100

[01:39] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´1..100‚ê§¬ª

[01:39] <diakopter> rn: .say for 1..*

[01:40] <camelia> rakudo 67c6fd: OUTPUT¬´(timeout)1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§11‚ê§12‚ê§13‚ê§14‚ê§15‚ê§16‚ê§17‚ê§18‚ê§19‚ê§20‚ê§21‚ê§22‚ê§23‚ê§24‚ê§25‚ê§26‚ê§27‚ê§28‚ê§29‚ê§30‚ê§31‚ê§32‚ê§33‚ê§34‚ê§35‚ê§36‚ê§37‚ê§38‚ê§39‚ê§40‚ê§41‚ê§42‚ê§43‚ê§44‚ê§45‚ê§46‚ê§47‚ê§48‚ê§49‚ê§50‚ê§51‚ê§52‚ê§53‚ê§54‚ê§55‚ê§56‚ê§57‚ê§58‚ê§59‚ê§60‚ê§61‚ê§62‚ê§63‚ê§64‚ê§65‚ê§66‚ê§67‚ê§68‚ê§69‚ê§70‚ê§71‚ê§72‚ê§73‚ê§74‚ê§75‚ê§76‚ê§77‚ê§78‚ê§79‚ê§80‚ê§81‚ê

[01:40] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT¬´(timeout)1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§11‚ê§12‚ê§13‚ê§14‚ê§15‚ê§16‚ê§17‚ê§18‚ê§19‚ê§20‚ê§21‚ê§22‚ê§23‚ê§24‚ê§25‚ê§26‚ê§27‚ê§28‚ê§29‚ê§30‚ê§31‚ê§32‚ê§33‚ê§34‚ê§35‚ê§36‚ê§37‚ê§38‚ê§39‚ê§40‚ê§41‚ê§42‚ê§43‚ê§44‚ê§45‚ê§46‚ê§47‚ê§48‚ê§49‚ê§50‚ê§51‚ê§52‚ê§53‚ê§54‚ê§55‚ê§56‚ê§57‚ê§58‚ê§59‚ê§60‚ê§61‚ê§62‚ê§63‚ê§64‚ê§65‚ê§66‚ê§67‚ê§68‚ê§69‚ê§70‚ê§71‚ê§72‚ê§73‚ê§74‚ê§75‚ê§76‚ê§77‚ê§78‚ê§79‚

[01:40] <diakopter> Mouq: didn't seem to fix it

[01:44] <BenGoldberg> Just for fun, who can guess what this function is? :)

[01:44] <BenGoldberg> r: sub A($m is copy, $n is copy) { state %c; my $key = $m => $n; while ( $m > 3 ) { return %c{$m => $n} if %c{$m => $n}; $n = $n ?? A($m, $n-1) !! 1; --$m }; %c{$key} = $m == 3 ?? 2**($n+3)-3 !! $m == 2 ?? 2*$n+3 !! $n+$m+1; }; say A(4,2)

[01:44] <camelia> rakudo 67c6fd: OUTPUT¬´200352993040684646497907235156025575044782547556975141926501697371089405955631145308950613088093334810103823434290726318182294938211881266886950636476154702916504187191635158796634721944293092798208430910485599057015931895963952486337236720300291696959215610876‚Ä¶¬ª

[01:55] <BenGoldberg> Ok, so either it's not sufficiently fun, or I've optimized to the point of being unrecognizable :)

[01:55] <BenGoldberg> Here's a slightly less optimized version of the mystery A function:

[01:55] <BenGoldberg>  r: sub A($m is copy, $n is copy) { state %c; my $key = $m => $n; while ( $m > 1 ) { return %c{$m => $n} if %c{$m => $n}; $n = $n ?? A($m, $n-1) !! 1; --$m }; %c{$key} = $n+$m+1; }; say A(3,$_) for 0..12

[01:55] <camelia> rakudo 67c6fd: OUTPUT¬´5‚ê§13‚ê§29‚ê§61‚ê§125‚ê§253‚ê§509‚ê§1021‚ê§2045‚ê§4093‚ê§8189‚ê§16381‚ê§32765‚ê§¬ª

[01:57] *** lichtkind left
[02:00] <BenGoldberg> r: sub A($m is copy, $n is copy) { while ( $m > 0 ) { $n = $n ?? A($m, $n-1) !! 1; --$m }; $n+1; }; say A(3,$_) for 0..12

[02:00] <camelia> rakudo 67c6fd: OUTPUT¬´(timeout)5‚ê§13‚ê§29‚ê§61‚ê§125‚ê§253‚ê§509‚ê§¬ª

[02:03] <BenGoldberg> r: sub A($m, $n) { $m > 0 ?? A( $m-1, $n ?? A($m, $n-1) !! 1 ) !! $n+1; }; say A(3,$_) for 0..12

[02:03] <camelia> rakudo 67c6fd: OUTPUT¬´(timeout)5‚ê§13‚ê§29‚ê§61‚ê§125‚ê§253‚ê§509‚ê§¬ª

[02:03] <diakopter> fizzbuzz?

[02:04] <BenGoldberg> ?

[02:09] *** slavik left
[02:16] *** sizz_ joined
[02:16] *** sizz left
[02:17] *** EvanTeitelman left
[02:17] <ingy> BenGoldberg: http://cpansearch.perl.org/src/INGY/Language-SNUSP-0.0.3/examples/fizzbuzz.snusp :)

[02:17] <ingy> I should port Language::SNUSP to p6

[02:19] <BenGoldberg> No, it's not fizzbuzz... it's the ackermann function :)

[02:22] <Mouq> rn: .say for 1..200

[02:23] <BenGoldberg> r: 'alive'.say

[02:23] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§11‚ê§12‚ê§13‚ê§14‚ê§15‚ê§16‚ê§17‚ê§18‚ê§19‚ê§20‚ê§21‚ê§22‚ê§23‚ê§24‚ê§25‚ê§26‚ê§27‚ê§28‚ê§29‚ê§30‚ê§31‚ê§32‚ê§33‚ê§34‚ê§35‚ê§36‚ê§37‚ê§38‚ê§39‚ê§40‚ê§41‚ê§42‚ê§43‚ê§44‚ê§45‚ê§46‚ê§47‚ê§48‚ê§49‚ê§50‚ê§51‚ê§52‚ê§53‚ê§54‚ê§55‚ê§56‚ê§57‚ê§58‚ê§59‚ê§60‚ê§61‚ê§62‚ê§63‚ê§64‚ê§65‚ê§66‚ê§67‚ê§68‚ê§69‚ê§70‚ê§71‚ê§72‚ê§73‚ê§74‚ê§75‚ê§76‚ê§77‚ê§78‚ê

[02:23] <camelia> rakudo 67c6fd: OUTPUT¬´alive‚ê§¬ª

[02:23] <BenGoldberg> Mouq++

[02:24] <Mouq> Are you guys also getting Unknown Character (diamond question mark) symbols?

[02:24] <flussence> yeah

[02:25] <flussence> r: say '¬ª'.encode

[02:25] <camelia> rakudo 67c6fd: OUTPUT¬´Buf:0x<c2 bb>‚ê§¬ª

[02:25] <BenGoldberg> The << symbol shows up ok

[02:25] <flussence> r: say '‚ê§'.encode

[02:25] <camelia> rakudo 67c6fd: OUTPUT¬´Buf:0x<0a>‚ê§¬ª

[02:25] <Mouq> Yeah, I messed something up with "‚Ä¶"

[02:25] <flussence> .u ‚ê§

[02:25] <yoleaux> U+2424 SYMBOL FOR NEWLINE [So] (‚ê§)

[02:25] <flussence> r: say "\x2424".encode

[02:25] <camelia> rakudo 67c6fd: OUTPUT¬´Buf:0x<e2 90 a4>‚ê§¬ª

[02:25] <flussence> it's cutting that off, that'd be it

[02:26] <flussence> off-by-3, seems like

[02:26] <Mouq> Ohhhh, thank you. Hmm

[02:30] <BenGoldberg> r: say "√¢¬ê".encode

[02:30] <camelia> rakudo 67c6fd: OUTPUT¬´Buf:0x<c3 a2 c2 90>‚ê§¬ª

[02:31] <BenGoldberg> r: say "‚Ä¶".encode

[02:31] <camelia> rakudo 67c6fd: OUTPUT¬´Buf:0x<e2 80 a6>‚ê§¬ª

[02:41] <Mouq> StackOverflow++ http://stackoverflow.com/questions/10953069/

[02:48] <lue> ingy: I've already written a SNUSP in Perl 6. IIRC I just need to touch it up a bit in the usability department...

[02:50] <BenGoldberg> Oh, before I forget...

[02:50] <BenGoldberg> r: say map { $_ % 15 ?? $_ % 3 ?? $_ % 5 ?? $_ !! 'buzz' !! 'fizz' !! 'fizzbuzz' }, 1..100

[02:50] <camelia> rakudo 67c6fd: OUTPUT¬´1 2 fizz 4 buzz fizz 7 8 fizz buzz 11 fizz 13 14 fizzbuzz 16 17 fizz 19 buzz fizz 22 23 fizz buzz 26 fizz 28 29 fizzbuzz 31 32 fizz 34 buzz fizz 37 38 fizz buzz 41 fizz 43 44 fizzbuzz 46 47 fizz 49 buzz fizz 52 53 fizz buzz 56 fizz 58 59 fizzbuzz 61 62 fizz 64 ‚Ä¶¬ª

[02:54] <BenGoldberg> preflex: karma perl

[02:54] <preflex>  perl: 270

[02:54] <BenGoldberg> preflex: karma perl6

[02:54] <preflex>  perl6: 11

[02:54] <dalek> evalbot: 9ca77f7 | Mouq++ | evalbot.pl:

[02:54] <dalek> evalbot: Truncate utf8 compatibly

[02:54] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/9ca77f7d16

[02:54] <camelia> : ( no output )

[02:54] <BenGoldberg> preflex: karma rakudo

[02:54] <preflex>  rakudo: 108

[02:54] <camelia> : ( no output )

[02:55] <BenGoldberg> preflex: karma n

[02:55] <preflex>  n: 158

[02:55] <camelia> : ( no output )

[02:55] <Mouq> To be proper, ikegami++

[02:55] <BenGoldberg> preflex: karma r

[02:55] <preflex>  r: 25

[02:55] <camelia> : ( no output )

[02:56] <BenGoldberg> Next issue.... make evalbot ignore bots :)

[03:02] *** cooper left
[03:04] <Mouq> It already ignores dalek

[03:06] <Mouq> hugme: hug r: 1.say

[03:06] * hugme hugs r:

[03:06] <Mouq> hugme: hug r:1.say

[03:06] * hugme hugs r:1.say

[03:06] <Mouq> Yeah

[03:07] <dalek> evalbot: dbc13cc | Mouq++ | evalbot.pl:

[03:07] <dalek> evalbot: Ignore the preflex and yoleaux bots

[03:07] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/dbc13cccb4

[03:07] * sorear leers at BenGoldberg

[03:09] *** preflex left
[03:10] *** preflex_ joined
[03:10] *** ChanServ sets mode: +v preflex_

[03:10] *** preflex_ is now known as preflex

[03:13] <Mouq> rn: .say for ^200

[03:13] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§11‚ê§12‚ê§13‚ê§14‚ê§15‚ê§16‚ê§17‚ê§18‚ê§19‚ê§20‚ê§21‚ê§22‚ê§23‚ê§24‚ê§25‚ê§26‚ê§27‚ê§28‚ê§29‚ê§30‚ê§31‚ê§32‚ê§33‚ê§34‚ê§35‚ê§36‚ê§37‚ê§38‚ê§39‚ê§40‚ê§41‚ê§42‚ê§43‚ê§44‚ê§45‚ê§46‚ê§47‚ê§48‚ê§49‚ê§50‚ê§51‚ê§52‚ê§53‚ê§54‚ê§55‚ê§56‚ê§57‚ê§58‚ê§59‚ê§60‚ê§61‚ê§62‚ê§63‚ê§64‚ê§65‚ê§66‚ê§67‚ê§68‚ê§69‚ê§70‚ê§71‚ê§72‚ê§73‚ê§74‚ê§75‚ê§76‚ê§77‚ê§

[03:13] <Mouq> ‚Ä¶interesting

[03:14] <geekosaur> sometimes I regret the xchat plugin I did that translates embedded control chars...

[03:15] <Mouq> rn: ^200.say

[03:15] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´200‚ê§¬ª

[03:15] <Mouq> rn: (^200).say

[03:15] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´0..^200‚ê§¬ª

[03:15] <Mouq> rn: (^200).eager.say

[03:15] <camelia> niecza v24-95-ga6d4c5f: OUTPUT¬´Unhandled exception: Unable to resolve method eager in type Range‚ê§  at /tmp/ku1D_1WOdC line 1 (mainline @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4583 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4584 (module-CORE @ 576) ‚ê§  at ‚Ä¶¬ª

[03:15] <camelia> ..rakudo 67c6fd: OUTPUT¬´0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 9‚Ä¶¬ª

[03:16] <Mouq> rn: .say for ^200

[03:16] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§11‚ê§12‚ê§13‚ê§14‚ê§15‚ê§16‚ê§17‚ê§18‚ê§19‚ê§20‚ê§21‚ê§22‚ê§23‚ê§24‚ê§25‚ê§26‚ê§27‚ê§28‚ê§29‚ê§30‚ê§31‚ê§32‚ê§33‚ê§34‚ê§35‚ê§36‚ê§37‚ê§38‚ê§39‚ê§40‚ê§41‚ê§42‚ê§43‚ê§44‚ê§45‚ê§46‚ê§47‚ê§48‚ê§49‚ê§50‚ê§51‚ê§52‚ê§53‚ê§54‚ê§55‚ê§56‚ê§57‚ê§58‚ê§59‚ê§60‚ê§61‚ê§62‚ê§63‚ê§64‚ê§65‚ê§66‚ê§67‚ê§68‚ê§69‚ê§70‚ê§71‚ê§72‚ê§73‚ê§74‚ê§75‚ê§76‚ê§77‚ê§

[03:17] <geekosaur> are you missing a ... or dd my plugin screw up?

[03:17] <Mouq> rn: (0 ¬´+¬´ ^200).say

[03:17] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 8‚Ä¶¬ª

[03:18] <Mouq> I'm mising a "‚Ä¶". Something's going very wrong with the truncation...

[03:19] <BenGoldberg> rn say join ' ', ^200

[03:19] <BenGoldberg> rn: say join ' ', ^200

[03:19] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 8‚Ä¶¬ª

[03:21] <Mouq> rn: say join '‚Üí', ^200

[03:21] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´0‚Üí1‚Üí2‚Üí3‚Üí4‚Üí5‚Üí6‚Üí7‚Üí8‚Üí9‚Üí10‚Üí11‚Üí12‚Üí13‚Üí14‚Üí15‚Üí16‚Üí17‚Üí18‚Üí19‚Üí20‚Üí21‚Üí22‚Üí23‚Üí24‚Üí25‚Üí26‚Üí27‚Üí28‚Üí29‚Üí30‚Üí31‚Üí32‚Üí33‚Üí34‚Üí35‚Üí36‚Üí37‚Üí38‚Üí39‚Üí40‚Üí41‚Üí42‚Üí43‚Üí44‚Üí45‚Üí46‚Üí47‚Üí48‚Üí49‚Üí50‚Üí51‚Üí52‚Üí53‚Üí54‚Üí55‚Üí56‚Üí57‚Üí58‚Üí59‚Üí60‚Üí61‚Üí62‚Üí63‚Üí64‚Üí65‚Üí66‚Üí67‚Üí68‚Üí69‚Üí70‚Üí71‚Üí72‚Üí73‚Üí74‚Üí75‚Üí76‚Üí77‚Üí

[03:21] <Mouq> rn: say join 'Œª', ^200

[03:21] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´0Œª1Œª2Œª3Œª4Œª5Œª6Œª7Œª8Œª9Œª10Œª11Œª12Œª13Œª14Œª15Œª16Œª17Œª18Œª19Œª20Œª21Œª22Œª23Œª24Œª25Œª26Œª27Œª28Œª29Œª30Œª31Œª32Œª33Œª34Œª35Œª36Œª37Œª38Œª39Œª40Œª41Œª42Œª43Œª44Œª45Œª46Œª47Œª48Œª49Œª50Œª51Œª52Œª53Œª54Œª55Œª56Œª57Œª58Œª59Œª60Œª61Œª62Œª63Œª64Œª65Œª66Œª67Œª68Œª69Œª70Œª71Œª72Œª73Œª74Œª75Œª76Œª77Œª78Œª79Œª80Œª81Œª8‚Ä¶¬ª

[03:23] *** btyler left
[03:25] <Mouq> rn: say join '§≠¢', ^200

[03:25] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´0§≠¢1§≠¢2§≠¢3§≠¢4§≠¢5§≠¢6§≠¢7§≠¢8§≠¢9§≠¢10§≠¢11§≠¢12§≠¢13§≠¢14§≠¢15§≠¢16§≠¢17§≠¢18§≠¢19§≠¢20§≠¢21§≠¢22§≠¢23§≠¢24§≠¢25§≠¢26§≠¢27§≠¢28§≠¢29§≠¢30§≠¢31§≠¢32§≠¢33§≠¢34§≠¢35§≠¢36§≠¢37§≠¢38§≠¢39§≠¢40§≠¢41§≠¢42§≠¢43§≠¢44§≠¢45§≠¢46§≠¢47§≠¢48§≠¢49§≠¢50§≠¢51§≠¢52§≠¢53§≠¢54§≠¢55§≠¢56§≠¢57§≠¢58§≠¢59§≠¢60§≠¢61§≠¢62§≠¢63§≠¢64§≠¢

[03:25] <BenGoldberg> Is it my imagination, or is truncation happening based on the number of bytes of the character you're joining on?

[03:25] <Mouq> Well, it's something to do with it. I just want it truncate near a high-byte character

[03:26] <geekosaur> I suspect it's trying to not break in the middle of a multiyte character and getting it wrong when it needs to adjust?

[03:26] <Mouq> rn: say '§≠¢' x 200

[03:26] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢

[03:29] <dalek> evalbot: f6af675 | Mouq++ | evalbot.pl:

[03:29] <dalek> evalbot: Do truncation stupider.

[03:29] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/f6af675f1f

[03:31] <Mouq> Oh, wait‚Ä¶ This might be a fencepost error :/

[03:34] <Mouq> rn: say '§≠¢' x 200

[03:34] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢

[03:43] *** krokite left
[03:43] <Mouq> rn: say '§≠¢' x 200

[03:43] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢§≠¢

[03:47] <Mouq> rn: say 'a' x 200, '§≠¢'

[03:47] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa§≠¢‚ê§¬ª

[03:47] <Mouq> rn: say 'a' x 300, '§≠¢'

[03:47] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa‚Ä¶¬ª

[03:47] <Mouq> rn: say 'a' x 250, '§≠¢'

[03:47] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa‚Ä¶¬ª

[03:47] <Mouq> rn: say 'a' x 220, '§≠¢'

[03:47] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa§≠¢‚ê§¬ª

[03:47] <Mouq> rn: say 'a' x 221, '§≠¢'

[03:47] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa§≠¢‚ê§¬ª

[03:47] <Mouq> rn: say 'a' x 222, '§≠¢'

[03:47] <camelia> rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa§≠¢‚ê§¬ª

[03:47] <Mouq> Sorry, #perl6, I'm kinda spamming you here

[03:48] <geekosaur> I believe evalbot responds to /msg

[03:48] <geekosaur> (to camelia, per the /topic)

[03:49] <Mouq> '< Thank you. I'm sorry

[03:54] <ingy> o_0

[04:25] <Mouq> rnp: "\c[ALPHA]".say

[04:25] <camelia> rakudo 67c6fd: OUTPUT¬´(timeout)¬ª

[04:25] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Unrecognized character name ALPHA at /tmp/aKilrvmqh8 line 1:‚ê§------> [32m"\c[ALPHA[33m‚èè[31m]".say[0m‚ê§‚ê§Unhandled exception: Check failed‚ê§‚ê§  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ‚ê§  at /home/‚Ä¶¬ª

[04:25] <camelia> ..pugs: OUTPUT¬´Unknown charname 'ALPHA' at (eval 2) line 1‚ê§\c[ALPHA]‚ê§¬ª

[04:28] <Mouq> rnp: "\c[SYMBOL FOR NULL]".say

[04:28] <camelia> pugs: OUTPUT¬´\c[SYMBOL FOR NULL]‚ê§¬ª

[04:28] <camelia> ..rakudo 67c6fd, niecza v24-95-ga6d4c5f: OUTPUT¬´‚êÄ‚ê§¬ª

[04:34] *** btyler joined
[04:46] *** SamuraiJack__ joined
[05:04] *** daniel-s_ joined
[05:08] *** daniel-s left
[05:14] *** btyler left
[05:19] *** BenGoldberg left
[05:40] *** FROGGS[mobile] joined
[05:45] *** Mouq left
[05:45] *** SamuraiJack__ left
[05:47] *** SamuraiJack joined
[05:51] <FROGGS> good morning

[05:53] <sorear> o/ FROGGS

[05:54] <FROGGS> hai sorear :o)

[05:55] <FROGGS> sorear: sad that you are not here

[05:55] <sorear> i'm right here, no?

[05:55] <FROGGS> *g*

[05:55] <FROGGS> somehow

[05:56] <sorear> oh, is this that internals workshoppy thing I heard about by emial?

[05:56] <FROGGS> yes

[05:56] <FROGGS> and jnthn++ is the most awesome teacher I've ever had

[05:59] <FROGGS> k, I need to get going... see you

[06:02] *** FROGGS left
[06:17] <ingy> heya sorear 

[06:36] *** xinming left
[06:37] *** xinming joined
[06:39] <sorear> o/

[06:41] *** sqirrel joined
[06:41] <sorear> o/ sqirrel

[06:42] <sqirrel> o/ sorear

[06:45] *** iSlug joined
[06:56] *** iSlug left
[06:56] <timotimo> ohai

[06:57] * [Coke] yawns

[06:57] <dalek> panda: da441fd | tadzik++ | rebootstrap.pl:

[06:57] <dalek> panda: Bla bla bla chocolatecake. It's early

[06:57] <dalek> panda: review: https://github.com/tadzik/panda/commit/da441fddcc

[07:00] <[Coke]> tadzik++

[07:01] * [Coke] switches partcl-nqp to try to build off nqp-jvm instead of nqp-parrot.

[07:01] <tadzik> are you able to run nqp-jvm outside of nqp-jvm directory?

[07:02] *** FROGGS joined
[07:03] <[Coke]> I'm updating gen-nqp to work more like rakudo's, so I'll have an install-jvm dir, and then it won't matter.

[07:03] <tadzik> ossum

[07:03] <[Coke]> ... except I can't git from the back row!

[07:04] <tadzik> not even through https?

[07:04] <[Coke]> .to diakopter - ping us if you need directions.

[07:04] <yoleaux> [Coke]: I'll pass your message to diakopter.

[07:06] <FROGGS> ribasushi: the ast dumper will be invoked when you all `nqp --target=ast -e "say(1)"` for example

[07:07] *** lizmat joined
[07:09] *** woolfy joined
[07:09] <[Coke]> hoelzro: trouble maker! ;)

[07:10] <timotimo> i'm not a fan of american-sized softdrinks, but 0.2l is really not much

[07:10] <ingy> good morning lizmat!

[07:10] <lizmat> morning ingy 

[07:11] <ingy> timotimo: you need 2.0l

[07:11] <[Coke]> US standard is 0.6l

[07:11] <woolfy> Hey, diakopter is still not here (with physical us in √ñkohaus). Anybody saw him?

[07:11] <hoelzro> heh

[07:11] <[Coke]> (for a single serve) though we are seeing smaller and smaller serving sizes in those, too.

[07:14] <woolfy> jnthn started 10 minutes ago with day 2 of the RaNiW course in Frankfurt.

[07:14] <woolfy> 16 people attending

[07:15] <[Coke]> r: say "RaNiW".flip

[07:15] <camelia> rakudo 67c6fd: OUTPUT¬´WiNaR‚ê§¬ª

[07:16] <timotimo> r: say "RaNIW".comb.pick(*).join: ""

[07:16] <camelia> rakudo 67c6fd: OUTPUT¬´RWIaN‚ê§¬ª

[07:16] <timotimo> r: say "RaNIW".comb.pick(*).join: ""

[07:16] <camelia> rakudo 67c6fd: OUTPUT¬´NIaRW‚ê§¬ª

[07:16] <timotimo> r: say "RaNIW".comb.pick(*).join: ""

[07:16] <camelia> rakudo 67c6fd: OUTPUT¬´NaWRI‚ê§¬ª

[07:17] <tadzik> NaRNia

[07:17] <timotimo> RAWRRAWR

[07:28] <timotimo> Error while compiling op if (source text: "@args[1].has_compile_time_value {\n                $hint := pir::repr_hint_for_i_p_p_s(@args[1].comp..."): Error while compiling op bind (source text: ":="): ResizableStringArray: Can't shift from an empty array!

[07:28] <timotimo> hooray! errors in the compiler!

[07:28] *** iSlug joined
[07:28] <tadzik> HyperWhatever, it sounds like a most boring superhero ever

[07:29] <hoelzro> tadzik: you saw that too? =)

[07:29] <tadzik> yep :)

[07:32] <lizmat> .NYI also

[07:32] <lizmat> an unimplemented boring superhero :-)

[07:33] <hoelzro> that's what caught my eye

[07:33] <hoelzro> something to work on =)

[07:36] *** [Sno] joined
[07:38] <woolfy> yeah diakopter is awake

[07:38] <timotimo> http://questhub.io/realm/perl/quest/52356423a7bb212f76000048 <- :)

[07:39] <tadzik> hah!

[07:40] <timotimo> if you're interested, i can "invite"

[07:40] <tadzik> I "Like"d it

[07:40] <timotimo> \o/

[07:41] <hoelzro> ditto

[07:41] <hoelzro> I don't the have NQP-fu to help (yet)

[07:42] <tadzik> you wan't have that excuse after today :>

[07:43] <hoelzro> heh

[07:43] <hoelzro> that's why I say "yet"!

[07:43] <timotimo> the optimizer isn't super hard to use, fortunately

[07:45] <timotimo> oooh, dynamic variables inside tokens are available in action methods, still

[07:45] <timotimo> that's cool

[07:45] <timotimo> "keinen deckel drauf tun"

[07:49] <timotimo> maybe somebody should build a quest for removing .node from QAST::Node and putting it into QAST::Stmt (and removing all related fallout)

[07:50] <moritz> why?

[07:50] <moritz> it helps to have a line number for calls, for example

[07:50] <moritz> and a call is a QAST::Op

[07:50] <timotimo> jnthn hinted it may be sensible; in the jvm backend apparently it's only ever used ni Stmt

[07:50] * hoelzro .oO( QAST::Away? )

[07:51] <timotimo> WILSOOOOOOOOoooooooon~

[07:53] <timotimo> moritz: so having it in the Stmt node around it will not be enough?

[07:53] <timotimo> i suppose that's valuable if you have a top-level call that is split into multiple lines?

[07:53] * [Coke] wonders if he can just lift ConfigureJVM.pl from rakudo for use in partcl

[07:54] <[Coke]> (as long as the copyright stays in place)

[07:54] *** xenoterracide left
[07:54] *** xenoterracide_ joined
[07:55] <moritz> timotimo: correct. If you have foo(\n bar()), the bar() call would show a wrong line number

[07:55] <timotimo> i still need some way to differentiate vars that are from signatures from other vars; at least in nqp, but ideally also in rakudo

[07:55] <timotimo> (this is for the lexical-to-local transformation i would like to make work)

[08:00] <[Coke]> weird. getting http://irclog.perlgeek.de/perl6/2013-05-23 using the jvm nqp for partcl (but it works fine for rakudo-jvm) ... will dig after class.

[08:01] <timotimo> did you mean to link to a specific time in that log? or to something else entirely?

[08:03] <[Coke]> the first line.

[08:03] <[Coke]> same thing that japhb was experiencing at http://irclog.perlgeek.de/perl6/2013-05-23#i_7105647

[08:03] <timotimo> i think install/nqp is deprecated

[08:03] <timotimo> install/bin/nqp is the way to go iirc

[08:05] <[Coke]> timotimo: there is no install/bin/nqp on jvm here.

[08:05] <timotimo> hm, i'll go hunt

[08:06] <[Coke]> er, no install-jvm/bin/nqp

[08:06] * timotimo has to re-make

[08:07] <[Coke]> I am fairly sure that I should throw out the nqp-rx (parrot style) nqp code that was translated to nqp (current) style, and just start from scratch.

[08:07] <timotimo> huh, it actually does say :decl(param)

[08:09] *** iSlug left
[08:09] *** denis_boyun joined
[08:13] <timotimo> oh

[08:13] <timotimo> you have to pass an absolute value to --gen-nqp if you use --gen-nqp

[08:13] <timotimo> that may be your problem, [Coke] 

[08:14] <timotimo> but i think it only makes a difference in the actual source of the nqp file, you should be able to make it look like this: exec java -Xbootclasspath/a:/home/timo/build/jakudo/nqp/install:/home/timo/build/jakudo/nqp/install/nqp-runtime.jar:/home/timo/build/jakudo/nqp/install/asm-4.1.jar:/home/timo/build/jakudo/nqp/install/jline-1.0.jar:/home/timo/build/jakudo/nqp/install/nqp.jar -cp /home/timo/build/jakudo/nqp/install nqp "$@"

[08:15] <dalek> v5: e89c54f | (Tobias Leich)++ | / (2 files):

[08:15] <dalek> v5: move Perl5::Terms loading to v5's grammar, jnthn++

[08:15] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/e89c54f25c

[08:16] <tadzik> what if you don't pass any value to --gen-nqp? Then the default is rong

[08:18] <timotimo> woolfy: is there a way to acquire more coca cola for people who don't like coffee, like me?

[08:19] <woolfy> In your book, go forward 13 pages...  'That's all for today":  "Today we've covered a lot of ground"..."We'll take these on tomorrow."  Next page: "Welcome back"

[08:19] <woolfy> timotimo: I will ask

[08:19] <timotimo> that is 13 A4-pages, right? not 13 slides? >_<

[08:19] <timotimo> thank you very much :)

[08:20] <woolfy> Indeed, physicla pages

[08:20] <timotimo> i'm much less tired than yesterday, but that doesn't mean too much ;)

[08:20] <tadzik> the material is a bit more hardcore, imo

[08:20] <timotimo> currently it's chewy, it'll get much harder soon i fear

[08:20] <timotimo> at least to me, i've had lots of exposure to QAST from my optimizer adventures

[08:21] *** PZt left
[08:21] <woolfy> I;ve seen jnthn talk about QAST before and it puzzled me then and it puzzles me now.

[08:21] <timotimo> the thick green ink for the titles on the slides is rubby

[08:24] <moritz> woolfy: it's one of those things you just have to use for a while to get used to

[08:24] <moritz> woolfy: like monads, I guess (haven't ever gotten used to them)

[08:24] <timotimo> it helps to look at lots of qast dumps from programs

[08:24] <timotimo> monads are just like burritos

[08:26] <moritz> timotimo: and that's the problem. I don't know how to program with burritos :-)

[08:26] *** PZt joined
[08:27] <moritz> .oO( burrito-driven development )

[08:27] <diakopter> moritz: lots of sour cream

[08:27] <yoleaux> 07:04Z <[Coke]> diakopter: - ping us if you need directions.

[08:27] *** SamuraiJack_ joined
[08:29] *** kaare_ joined
[08:30] *** SamuraiJack left
[08:32] <timotimo> colomon: may i suggest an enhancement to the smoker web app?

[08:32] <[Coke]> diakopter: you coming over?

[08:32] <timotimo> it would be neat if the leftmost column would display a number instead of a letter to indicate how many days the status has been the status of the column one to the right

[08:33] <diakopter> brt

[08:33] <[Coke]> diakopter: \o/

[08:33] <timotimo> because with the speed of change in the ecosystem, it seems like 14 days is not that much

[08:34] <diakopter> heh

[08:34] <diakopter> it moves cyclicly

[08:34] *** lizmat left
[08:34] *** woolfy left
[08:34] <[Coke]> java.lang.RuntimeException: java.lang.ClassCastException: org.perl6.nqp.sixmodel.reprs.P6strInstance cannot be cast to org.perl6.nqp.runtime.EvalResult

[08:35] <[Coke]> :(

[08:36] *** woolfy joined
[08:37] *** xenoterracide_ left
[08:40] *** lizmat joined
[08:43] <timotimo> saw that, too ... for some reason :|

[08:43] <timotimo> hold tight, i'll post a keyword token for php

[08:45] <timotimo> http://pastebin.com/dytfHWhg

[08:46] <FROGGS> hmmm, sizeof if missing...

[08:47] <timotimo> oh?

[08:47] <timotimo> i suppose predefined functions are missing >_>

[08:49] <FROGGS> well, it is listed as an alias to count()... but w/e, it doesn't surprise me that there is no complete list of built-ins :o)

[08:50] <timotimo> yes.

[08:50] <timotimo> also, are those things case-insensitive?

[08:53] <[Coke]> (some reason) jnthn pointed out I had an action referring to a sub-rule with a wrong name.

[08:53] <[Coke]> Now I'm getting a NPE trying to run echo(3*2);

[08:53] <[Coke]> ... because I'm an idiot. :)

[08:54] <[Coke]> \o/

[08:54] *** wtw joined
[08:55] <FROGGS> *g*

[08:55] <FROGGS> --ll-exception is your friend

[08:56] <woolfy> diakopter is in the building

[08:56] <woolfy> all welcome diakopter

[08:57] *** wtw left
[08:57] *** wtw joined
[08:58] *** wtw left
[09:00] *** wtw joined
[09:02] <hoelzro> fun with dynamic variables in NQP: https://gist.github.com/hoelzro/6569041

[09:02] <hoelzro> is this a bug? or am I Doing It Wrong?

[09:02] <timotimo> i wonder if trying to split Stmts into individual Stmt nodes during optimization time will have a noticable effect on performance or quality of generated code

[09:03] <FROGGS> hoelzro: if you redeclare it is is a new one

[09:03] <hoelzro> ah

[09:03] <hoelzro> so I should just do $*TOP = 0?

[09:03] <FROGGS> yes, that should do

[09:03] <hoelzro> cool, thanks!

[09:03] <timotimo> yeah, you can do "temporary overrides" with a new my $*foo

[09:04] <timotimo> that's the mechanism that's being used for the current block

[09:04] <FROGGS> hoelzro: sine the new one is installed in the stmts before the actual code of the sub, only the new one is visible inside

[09:04] <diakopter> woohoo hack the planet

[09:04] <FROGGS> since*

[09:04] <hoelzro> FROGGS: ah, that makes sense.

[09:10] *** ssutch left
[09:12] *** spider-mario joined
[09:24] *** woolfy left
[09:24] *** lizmat left
[09:28] *** dmol joined
[09:28] <timotimo> tadzik: NQP/Actions.nqp line 193

[09:28] <FROGGS> tadzik: it is fine in nqp and rakudo

[09:28] <timotimo> already fixed apparently

[09:28] <FROGGS> yeah :o)

[09:29] <tadzik> yeah, noticed that too :)

[09:29] <tadzik> it's also in Perl6/Actions.pm, also $past both places

[09:29] <timotimo> ok

[09:29] <timotimo> maybe jnthn++ was like "$past is stupid, i'll replace it with $ast"

[09:29] <tadzik> :)

[09:29] <diakopter> ()pmohc

[09:29] <tadzik> but not past the for statement

[09:30] <diakopter> er, ()pohc

[09:30] *** lizmat joined
[09:30] <timotimo> i don't understand what that means :(

[09:30] *** denis_boyun left
[09:34] *** Rotwang joined
[09:36] <dalek> rakudo/nom: 2230750 | (Elizabeth Mattijsen)++ | / (4 files):

[09:36] <dalek> rakudo/nom: Step one of converting {} and [] access from method to sub calls

[09:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2230750d8b

[09:36] <timotimo> oh cool!

[09:36] <timotimo> not paying attention, liz? ;)

[09:36] <timotimo> or did you do all this between sleep and breakfast? ;)

[09:38] <diakopter> r: my Int $jnthn but Dog;

[09:38] <camelia> rakudo 67c6fd: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/RMTmGjf60U‚ê§Undeclared name:‚ê§    Dog used at line 1‚ê§‚ê§¬ª

[09:39] <timotimo> so really you should have an Int for the tax number that you mix your dog into?

[09:39] *** woolfy joined
[09:39] <tadzik> std: my Int $diakopter but Cat;

[09:39] <camelia> std 7c17586: OUTPUT¬´ok 00:00 43m‚ê§¬ª

[09:40] <diakopter> O_O

[09:40] <timotimo> mau

[09:40] <lizmat> timotimo: actually last night, just epectested it now

[09:40] <timotimo> not bad

[09:40] <diakopter> my Int $tadzik but Rat;

[09:40] <timotimo> you're not putting it up on questhub? ;)

[09:40] <tadzik> hah

[09:40] <diakopter> r: my Int $tadzik but Rat;

[09:40] <camelia> rakudo 67c6fd: OUTPUT¬´Cannot mix in non-composable type Rat into object of type Int‚ê§  in sub infix:<but> at src/gen/CORE.setting:15490‚ê§  in sub infix:<but> at src/gen/CORE.setting:15466‚ê§  in block  at /tmp/xtbKYsLxsg:1‚ê§‚ê§¬ª

[09:40] <tadzik> at least not a FatRat

[09:40] <diakopter> damn

[09:41] <tadzik> s/damn!/rats!/

[09:41] *** risou_awy is now known as risou

[09:43] <diakopter> why didn't it complain about the 2nd class Dog, but did on the 3rd

[09:43] <timotimo> i guess it error'd out earlier? or something?

[09:43] <tadzik> the 1st dog died

[09:43] <timotimo> :(

[09:43] <diakopter> yeah but its BEGIN-time should've completed

[09:44] <timotimo> too soon

[09:44] * timotimo mourns

[09:44] <tadzik> Perl 6 is a middle-sized dog

[09:44] <diakopter> tadzik: you belong on the back row

[09:45] <tadzik> :(

[09:46] <timotimo> but HOW

[09:46] <tadzik> also, How, pronounced /hau/ is the sound that Dog makes in polish

[09:46] <timotimo> how do you describe cat sounds?

[09:46] <tadzik> miau

[09:46] <timotimo> like in german

[09:46] <timotimo> in php it's ... and in perl6 it's ~~~

[09:47] <diakopter> I thought it was Mu

[09:47] <[Coke]> meow

[09:47] <tadzik> mu is the sound a cow makes

[09:47] <diakopter> sea cows make the whales

[09:48] <[Coke]> C cows?

[09:48] <timotimo> i think i may steal more tuits today

[09:48] <timotimo> i shall spread perl6 joy in karlsruhe :3

[09:49] <timotimo> i hear maybe there'll be a karlsruhe.pm meeting some time soon

[09:50] * diakopter wonders how in the world I was pushing code 6.5 hours ago

[09:50] <tadzik> HOW

[09:50] <timotimo> DiakopterHOW

[09:50] <timotimo> Perl6::Metamodeler::DiakopterHOW

[09:50] <diakopter> OMFG I thought cows lived in stables

[09:51] <timotimo> HOWs live in stables

[09:52] <diakopter> r: knowhow Tadzik is repr('Uninstantiable') { ... }

[09:52] <camelia> rakudo 67c6fd: OUTPUT¬´===SORRY!===‚ê§No such method 'is_composed' for invocant of type 'KnowHOW'‚ê§¬ª

[09:52] <tadzik> I'm no composer

[09:53] <diakopter> r: knowhow foo is repr('') { }; say foo.^methods

[09:53] <camelia> rakudo 67c6fd: OUTPUT¬´No such method 'dispatch:<.^>' for invocant of type 'foo'‚ê§  in block  at /tmp/r6F7DnTZ2r:1‚ê§‚ê§¬ª

[09:54] <tadzik> meth_type("not even once")

[09:54] <diakopter> r: knowhow foo {}; print foo

[09:54] <camelia> rakudo 67c6fd: OUTPUT¬´Nominal type check failed for parameter '$got'; expected Any but got foo instead‚ê§  in method REIFY at src/gen/CORE.setting:7823‚ê§  in method reify at src/gen/CORE.setting:6754‚ê§  in method gimme at src/gen/CORE.setting:7164‚ê§  in method print at src/gen/CORE.setti‚Ä¶¬ª

[09:55] <diakopter> expected Any but got foo instead

[09:55] <timotimo> this is way too simple, jnthn must be hiding most of the secrets from us!

[09:55] <timotimo> giiiive ussssssssss the secretsssssssss~

[09:56] *** PacoAir joined
[09:56] <timotimo> we should greet Greta with Greeter

[09:57] <tadzik> there should be find_find_method_method which finds find_method methods

[09:57] <timotimo> it's just the find_method method on the ClassHOW, because you build your ClassHOW out of that ... or possibly KnowhowHOW

[09:58] <diakopter> tadzik: moarvm has that

[09:58] <tadzik> moar find_methodz

[09:59] <diakopter> someone should make a moarvm git branch that injects the word MOAR_ in every function and variable name in 1 or 2 places

[09:59] <timotimo> how do you propose we call that branch?

[09:59] <timotimo> moarvm_moar_moar?

[10:00] <tadzik> http://www.reactionimage.org/img/gallery/5816489306.jpg

[10:00] <diakopter> rotfl literally

[10:00] <tadzik> lies, you still sit

[10:00] <timotimo> nope

[10:00] *** daniel-s_ left
[10:00] <diakopter> I finished rolling

[10:01] <timotimo> i didn't hear anything

[10:01] <diakopter> it's a frictionless surface

[10:01] <timotimo> yeah, but were you laughing silently?

[10:01] <tadzik> is this how you roll?

[10:02] <FROGGS> not very impressive O.o

[10:02] <diakopter> i'm enjoying my L of Coke

[10:02] <diakopter> actually jnthn lied

[10:03] <diakopter> moarvm's qast compiler DOES inject coercions for all those ops he said it didn't...

[10:03] <diakopter> I, um, just copied parrot's behavior for that

[10:03] <tadzik> boo

[10:03] <timotimo> heh, great

[10:03] <FROGGS> hehe

[10:03] <diakopter> he must not've read that part

[10:03] <lizmat> little white lies, though

[10:03] <hoelzro> you don't need the know-how to write a KnowHOW?

[10:03] <FROGGS> lets copy parrot \o/

[10:03] <timotimo> at least you'll also benefit from the optimisation in nqp that turns _n into _i if applicable

[10:04] <FROGGS> \o/ copy all teh code \o/

[10:04] <diakopter> however, I didn't look at parrot's qast compiler to do it; I did it Journey's way

[10:04] <timotimo> go on a train going anywhere?

[10:04] <timotimo> get on a train going anywhere*

[10:04] <diakopter> no, go your own way

[10:04] <[Coke]> Enjoying my what now?

[10:04] <diakopter> liter

[10:04] <timotimo> EnjoyCokeHOW

[10:04] <[Coke]> oh, whew.

[10:05] <[Coke]> Responsibly.

[10:05] <diakopter> *litter

[10:05] <diakopter> at least I didn't say line

[10:05] <diakopter> that was earlier this morningj

[10:06] <timotimo> that's why you were late to the workshop

[10:06] *** denis_boyun joined
[10:06] <diakopter> yes, HOW as a kowt

[10:06] <timotimo> that stretches it a bit too thin

[10:08] <diakopter> I wonder at what point backlogging this channel will crowd out 100% of TimToady's time

[10:08] <diakopter> mberends: stay awake

[10:09] <[Coke]> did he say where we can find a list of what reprs are available and why we'd pick different ones?

[10:09] <timotimo> timtoady will want to evolve to get a very quick heuristic to differentiate into different types:

[10:09] <timotimo> 1) humour

[10:09] <timotimo> 2) not worth reading

[10:09] <diakopter> [Coke]: each has its own file in reprs/

[10:09] <diakopter> each has a comment or two explaining it

[10:10] <diakopter> each's .h file shows what fields its body has

[10:10] <diakopter> so you can see what's stored in each

[10:10] <timotimo> diakopter seems to know everything already!

[10:10] <diakopter> well hey I did write the entire QAST compiler in moar..

[10:10] <diakopter> .. more than half of the reprs

[10:11] <diakopter> everything having to do with strings & encodings

[10:11] <diakopter> .. everything having to do with IO until JimmyZ ripped it out and replaced it.. 

[10:11] <diakopter> .. the bytecode validator, until not_not_gerd replaced it entirely

[10:12] <[Coke]> I'm sensing a pattern.

[10:12] <dalek> v5: 27b050e | (Tobias Leich)++ | / (4 files):

[10:12] <dalek> v5: fix newly introduced slowdown by adding method .slang

[10:12] <dalek> v5: 

[10:12] <dalek> v5: This is the entry-point when switching to our slang. When we switch back to Perl6

[10:12] <dalek> v5: we still jump directly in statementlist sine Perl6 does not do anything special.

[10:12] <dalek> v5: TimToady: Suggestions about a better method name are welcome :o)

[10:12] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/27b050ef74

[10:12] <diakopter> [Coke]: :D

[10:12] <tadzik> PAY ATTENTION FROGGS 

[10:12] <FROGGS> gah

[10:12] <diakopter> hugme: remove FROGGS from perl6

[10:13] <tadzik> no code, no lol

[10:13] <FROGGS> >.<

[10:14] <diakopter> [Coke]: yes, there's a couple other things folks have replaced..

[10:14] <diakopter> but no one will ever replace my unicode character database compiler

[10:14] <diakopter> it's 1000 lines of TI-Basic in Perl 5 syntax

[10:15] <diakopter> moarvm\tools\ucd2c.pl or something

[10:15] <timotimo> m)

[10:15] <FROGGS> it has a \t in its name?

[10:15] <diakopter> *kick*

[10:15] <timotimo> that's pretty terrible

[10:15] <timotimo> ooooh, diakopter long legs

[10:15] <FROGGS> yeah, \terrible

[10:16] <diakopter> .oO( how do you autocomplete something with tabs? )

[10:16] <timotimo> what do you mean by        errible?

[10:16] <tadzik> what we're now doing is what the Squaak tutorial in parrot wanted to be when it grew up

[10:17] <diakopter> true.

[10:17] <timotimo> so .... it grew up and then wanted to be this?

[10:18] <diakopter> [Coke]: we should port your tcl frontend to moarvm tomorrow

[10:18] <diakopter> well.. er, update its nqp to te newness new stuff

[10:18] <diakopter> the new qast

[10:19] <[Coke]> I'm still trying to switch it to jvm.

[10:19] <woolfy> new coffee, hot water for tea, cocacola, orange juice

[10:19] <[Coke]> For now, I can copy p6 and have a ConfigureJVM, ConfigureMoar..

[10:21] <FROGGS> ahh, I already see the upcoming tickets... "nqp doesnt build for JVM and rakudo bakend even when I specified it should configure more"

[10:21] <FROGGS> backend*

[10:21] <diakopter> actually not_not_not_not_gerd & I plan to finish up MoarVM tomorrow

[10:21] <timotimo> %)

[10:22] <FROGGS> ++diakopter, ++not_gerd !!!

[10:22] <FROGGS> ossum!

[10:22] <timotimo> "finish up moarvm" o_O

[10:22] <timotimo> that's pretty cool

[10:22] <FROGGS> I'm sitting in the train like 4 hours... I'll pop in when I can

[10:22] <timotimo> so, NFG and nqp self-hosting and threading stuff?

[10:23] <[Coke]> diakopter++ not_gerd++ !

[10:23] <diakopter> well self-hosting doesn't depend on nfg or thradeing

[10:23] *** spider-mario left
[10:23] <timotimo> that's true, but "finish up" does, at least to me :P

[10:23] <diakopter> oh heh, yeah, joking.

[10:23] <FROGGS> selfhosting++

[10:23] <FROGGS> that will introduce many LHFs I can work on

[10:24] *** woolfy left
[10:24] <timotimo> so, how much are you actually going to finish? making nqp self-host and pass all (relevant) tests?

[10:24] <FROGGS> the relevant ones, yes

[10:24] *** lizmat left
[10:24] <timotimo> this month's release will have moarvm for the first time? :)

[10:24] <FROGGS> jnthn said yesterday that t/nqp/24 is not even needed to run rakudo

[10:25] <diakopter> timotimo: c'mon don't push for commitments or expectactions; we're expectation-less around here, remember?

[10:25] <timotimo> also, it seems like we'll make it to a jvm rakudostar :D

[10:25] <diakopter> *expectations

[10:25] <timotimo> okay, i take back my expectations and requests for commitment

[10:26] <FROGGS> timotimo: maybe the nqp compiler release will contain it, but I won't announce that till it is stable and useful enough

[10:26] <timotimo> fair enough.

[10:30] *** lizmat joined
[10:31] <[Coke]> hurm. jnthn's solution to excercise five doesn't let me echo $variables.

[10:31] <[Coke]> (rakudo-jvm)

[10:31] <[Coke]> er, nqp-jvm, whoops.

[10:32] <timotimo> yeah, NPE, right?

[10:33] <timotimo> don't even get a stack trace :(

[10:38] *** woolfy joined
[10:40] * hoelzro just got say('Hello!') working on Lua o/

[10:41] <timotimo> oh, that was quick

[10:41] <timotimo> when did you start?

[10:41] <hoelzro> last night

[10:41] <hoelzro> it's *extremely* simple at the moment

[10:41] <hoelzro> but it's a start =)

[10:41] <timotimo> i suspected as much :)

[10:42] <timotimo> so you're actually turning qast into lua code (bytecode?)?

[10:42] <hoelzro> mhmm

[10:42] <timotimo> all you can do so far is SVal and Op(:op('call'))? ;)

[10:42] <hoelzro> I'm sticking with Lua source, because the bytecode isn't compatible across versions

[10:43] <hoelzro> pretty much =)

[10:43] <timotimo> that's sensible

[10:43] <hoelzro> and this way, it should work on LuaJIT =)

[10:43] <timotimo> fastest hello world program so far? ;)

[10:44] <hoelzro> hmm

[10:44] <hoelzro> it's probably pretty snappy

[10:44] <hoelzro> but I have no setting

[10:44] <hoelzro> the "setting" is "say = print"

[10:44] <timotimo> :D

[10:45] *** spider-mario joined
[10:51] *** Bzek joined
[10:51] *** zakharyas joined
[10:56] *** zakharyas left
[10:59] <woolfy> (everybody is working real hard and quiet on exercise 7)

[11:01] <tadzik> hoelzro: did you see the old lua compiler for parrot?

[11:01] <hoelzro> tadzik: I haven't looked at it, no

[11:09] *** spider-mario left
[11:27] *** dakkar joined
[11:41] *** EvanTeitelman joined
[11:42] *** lizmat left
[11:46] *** nebuchadnezzar left
[11:47] *** woolfy left
[11:50] *** FROGGS[mobile] left
[11:52] *** nebuchadnezzar joined
[11:52] *** nebuchadnezzar left
[11:53] *** nebuchadnezzar joined
[11:57] *** woolfy joined
[11:58] *** lizmat joined
[12:06] *** denis_boyun left
[12:14] *** sqirrel left
[12:16] <woolfy> nice, nobody is writing about the secret thing

[12:17] <timotimo> too excited to see jnthns secret stash instead

[12:17] <woolfy> shhhht!

[12:19] <diakopter> hoelzro: ping

[12:19] <FROGGS> well, we just need to make sure TimToady doesn't read about that here^^

[12:19] <hoelzro> diakopter: pong

[12:20] <diakopter> you know I wrote an nqp-lua two years ago..

[12:20] <hoelzro> oh, really? =/

[12:20] <hoelzro> I wasn't aware of that

[12:20] <diakopter> did everything but the regex compiler

[12:20] <diakopter> (passed the whole nqp test suite except the regex ones)

[12:20] <hoelzro> nice.

[12:20] <FROGGS> where is it?

[12:20] <hoelzro> but bummer for me =/

[12:21] <diakopter> I kept running into lua limitations

[12:21] <hoelzro> for example?

[12:21] <diakopter> like number of locals, depth of nested blocks

[12:21] <hoelzro> ah

[12:21] <diakopter> number of "upvalues"

[12:21] <hoelzro> I figured that the local/upvalue count would be a limit

[12:21] <hoelzro> I had an idea on how to fix that, but it's hacky

[12:22] <diakopter> yeah me too

[12:22] <diakopter> FROGGS: nt sure

[12:22] <timotimo> there's so many hash tables, yet recently i read that hash tables are super not-cool for language implementation

[12:22] <diakopter> not sure

[12:22] <diakopter> I might've buhleted it

[12:23] <hoelzro> timotimo: that "Why Python is Slow" talk?

[12:23] <timotimo> it was about ruby

[12:23] <timotimo> the pypy people actually have darn clever shit that makes __slots__ completely obsolete

[12:23] <hoelzro> hmm

[12:23] <diakopter> hoelzro: it was an almost entirely direct transliteration/port of the 6model runtime jnthn wrote in C#

[12:23] <diakopter> timotimo: we have that

[12:23] <timotimo> all of their classes are actually super-tightly packed

[12:23] <diakopter> we have that

[12:24] <timotimo> i'm not sure if it does something similar for method lookup

[12:24] <diakopter> we have that for the usual case..

[12:24] <timotimo> p6opaque lays out attributes like a struct, yeah, we know that :)

[12:24] <tadzik> ...the secret thing?

[12:24] <timotimo> but what about methods?

[12:25] <diakopter> hash lookups don't really ever need to be done unless the key being passed in is from an expression or variable.. anything that would do a hash lookup from a constant/known key at compile-time can be optimized away

[12:25] <timotimo> oh

[12:25] <timotimo> well, that's nice :)

[12:25] <timotimo> (but the hash still has to be stored and likely wastes a lot of space)

[12:25] <timotimo> (when compared to a tree of some kind, for instance)

[12:25] <diakopter> not a ton

[12:26] <diakopter> well most hashes are a tree of sorts

[12:26] <timotimo> it really depends on how much empty buckets you instantiate

[12:26] <timotimo> many*

[12:26] <diakopter> some hashes don't use buckets

[12:26] <timotimo> OK

[12:26] <diakopter> (as arrays, anyway)

[12:27] <timotimo> for some reason i associate "hashmap" with "an array plus a hashing function and either linear search or linking"

[12:27] <diakopter> (the one moarvm has, uthash, uses linked lists for both layers/dimensions

[12:27] <diakopter> yes

[12:27] <tadzik> )

[12:27] <diakopter> ()

[12:27] <timotimo> thank you tadzik

[12:27] <tadzik> there was a disturbance in the force

[12:27] <diakopter> ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((

[12:28] <timotimo> nooooooooooooooooooo

[12:30] <timotimo> could the type check cache be binary searched through somehow? ordered by some internal ID that each class could get?

[12:30] <tadzik> or a hash :)

[12:30] * sjn wonders if #perl6 is turning into a lisp channel :-P

[12:31] <diakopter> timotimo: yep, or a hash

[12:31] <diakopter> .... or prime numbers and prime factorization.

[12:31] <timotimo> what's the "NO LOL" equivalent of lisp?

[12:31] <timotimo> "NO :)"?

[12:31] <tadzik> '\o with a taste of your LISP I'm on a ride '\b

[12:31] <timotimo> perhaps "NO '("

[12:31] * sjn was mostly thinking about the ((((((((('s :)

[12:31] <diakopter> prime numbers would be awesome

[12:31] <timotimo> diakopter: ooooh

[12:32] <diakopter> Mu gets 2

[12:32] <timotimo> and then multiply them onto each other

[12:32] <diakopter> Any gets 3

[12:32] <tadzik> wow :)

[12:32] <timotimo> i was thinking there could be just a bitfield, but theoretically there could be more than 64 classes

[12:32] <timotimo> (who would ever need more than 63 classes!?!)

[12:32] <tadzik> you may get so many classes that primes will go into bigints

[12:32] <diakopter> what's the value of the first 64 prime nubmers multiplied

[12:33] <timotimo> that's easy enough to do:

[12:33] <moritz> diakopter: an even number :-)

[12:33] * diakopter waits for the linear search

[12:33] <timotimo> r: [*] ((2..Inf).map( *.is-prime )[^64])

[12:33] <camelia> : ( no output )

[12:33] <timotimo> r: say [*] ((2..Inf).map( *.is-prime )[^64])

[12:33] <camelia> rakudo 223075: OUTPUT¬´0‚ê§¬ª

[12:33] <diakopter> hee hee

[12:33] <timotimo> i think i may have done it wrong

[12:34] <timotimo> r: say [*] ((2..Inf).grep( *.is-prime )[^64])

[12:34] <timotimo> %)

[12:34] <diakopter> stop mkaing me laugh

[12:34] <camelia> rakudo 223075: OUTPUT¬´195133959955058134502488637025552252876537200920889365778484014616008832503770745901542489344429915739687480227261852231729170‚ê§¬ª

[12:34] <tadzik> yep. Big.

[12:34] <moritz> yes, grep helps.

[12:34] <timotimo> kinda

[12:34] <timotimo> just a little

[12:34] <diakopter> darn.

[12:34] <moritz> r: say log([*] ((2..Inf).grep( *.is-prime )[^64])) / log(2)

[12:34] <camelia> rakudo 223075: OUTPUT¬´416.205476738791‚ê§¬ª

[12:34] <moritz> less than 512 bits

[12:35] <timotimo> 512 bits may very well be smaller than a little hash of type objects

[12:35] <moritz> r: ([*] ((2..Inf).grep( *.is-prime )).fmt('%b').chars

[12:35] <camelia> rakudo 223075: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/NJdTP8yqts‚ê§Unable to parse expression in parenthesized expression; couldn't find final ')'‚ê§at /tmp/NJdTP8yqts:1‚ê§------> [32mInf).grep( *.is-prime )).fmt('%b').chars[33m‚èè[31m<EOL>[0m‚ê§    expecting any‚Ä¶¬ª

[12:35] <diakopter> haha

[12:35] <moritz> r: ([*] (2..Inf).grep( *.is-prime )).fmt('%b').chars

[12:35] <camelia> rakudo 223075: OUTPUT¬´(timeout)¬ª

[12:35] <moritz> :/

[12:35] <timotimo> yikes

[12:36] <timotimo> you forgot to limit

[12:36] <moritz> aye :-)

[12:36] <moritz> r: say ([*] ((2..Inf).grep( *.is-prime )[^64])).base(2).chars

[12:36] <camelia> rakudo 223075: OUTPUT¬´417‚ê§¬ª

[12:36] <timotimo> er, what's the benefit of prime numbers and multiplication over bits and adding?

[12:36] <diakopter> none...

[12:37] <moritz> timotimo: I think this was just an academic exercise

[12:37] <timotimo> it happened only in our heads? :(

[12:37] <diakopter> or de-academicizing

[12:38] <moritz> aca-de-mize

[12:38] <timotimo> .o(push the button!)

[12:41] <timotimo> i warned you about stables, bro. i told you Dog.

[12:41] <dalek> nqp: 0c7c701 | (Rob Hoelz)++ | docs/nqp-opcode.txt:

[12:41] <dalek> nqp: Fix NQP op documentation for nqp::exist*

[12:41] <dalek> nqp: 

[12:41] <dalek> nqp: It's existskey, not existkey

[12:41] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0c7c701892

[12:41] <dalek> nqp: 54e960d | jimmy++ | docs/nqp-opcode.txt:

[12:41] <dalek> nqp: Merge pull request #124 from hoelzro/master

[12:41] <dalek> nqp: 

[12:41] <dalek> nqp: Fix NQP op documentation for nqp::exist*

[12:41] <dalek> nqp: review: https://github.com/perl6/nqp/commit/54e960d5b9

[12:42] <diakopter> hoelzro: you don't have an nqp commit bit?

[12:42] <hoelzro> huh, I forgot I did =/

[12:43] *** dakkar left
[12:43] <timotimo> with all this knowledge we can re-invent nqp completely and re-do rakudo in about a month!

[12:44] <diakopter> *wham* *wham* *wham*

[12:44] <diakopter> (sound of rolling)

[12:44] <timotimo> wake me up before you code-code~

[12:44] <timotimo> i don't associate "*wham* *wham*" with rolling at all

[12:45] <timotimo> just like "*pom*" for pondering was completely new to me recently

[12:45] *** denis_boyun joined
[12:46] <woolfy> timotimo: thanks for volunteering that re-doing!!! :-)

[12:48] <timotimo> i'll do the 100 hours of work per week thing you recommended!

[12:51] <timotimo> is rw for native types would allow my int $fo = 10; $fo++; right?

[12:51] <diakopter> yes

[12:54] <timotimo> that's quite a papercut, imo

[12:54] <timotimo> (not volunteering to implement it right away ;) )

[12:55] <timotimo> i'm beginning to wonder if it was a bad idea to show interest in the optimizer :P

[12:56] <timotimo> i'm kinda sad that optimisations in flow-analysis etc can't really easily be done at the QAST level, so it has to be done at a backend-specific level

[12:56] <timotimo> or at least that's my understanding, i'd happily be proven wrong

[12:58] *** pupoque joined
[13:00] *** rafl joined
[13:01] <[Coke]> java.lang.RuntimeException: No REPR HashAttrStore

[13:04] *** pmurias joined
[13:05] <hoelzro> diakopter: if you find your nqp-lua impl, could you let me know? I'd like to take a look at it

[13:05] <pmurias> timotimo: why can'f flow analysis be done on the QAST level?

[13:05] <timotimo> it can, just not as naturally as with a bytecode-like format

[13:05] <timotimo> at least that's my understanding so far

[13:08] <pmurias> we could turn while/if using QAST into goto/conditional jump using QAST as preprocessing step before the flow analysis

[13:08] <timotimo> qast has that? o_O

[13:09] * [Coke] spends this exercize time grabbing a fresh copy of nqp to build a parrot based version.

[13:11] <pmurias> timotimo: has what?

[13:13] <pmurias> hmm, QAST doesn't seem to have goto

[13:15] <timotimo> that's what i though

[13:15] <timotimo> we have a musician in the first row :3

[13:16] <timotimo> SQUERL

[13:18] <lizmat> QAST::Op(call &postcircumfix:<[ ]>) [0]

[13:18] <lizmat> QAST::Op(call &postcircumfix:<{ }>) <a>

[13:18] <lizmat> :-)

[13:19] <lizmat> one step closer to making [] and {} being multi sub rather than multi method calls

[13:19] * JimmyZ wonders the reason 

[13:22] <woolfy> timotimo: I did recommend working less than 100 hours per week, and if you still do more than 100 hours per week, I did recommend not doing it for years in a row without holiday

[13:22] <woolfy> but I understand that my words have to be twisted!

[13:25] <timotimo> JimmyZ: we can compile-time-dispatch subs, but not method calls

[13:25] <timotimo> (and inline)

[13:27] <lizmat> indeed

[13:27] <lizmat> remarkably few test failures so far

[13:27] <JimmyZ> I saw Optimizer ROADMAP in rakudo/docs

[13:27] <JimmyZ> 2 ***   inlining calls to methods

[13:27] <JimmyZ> 3 ***   guard lifting for method call inlining

[13:28] <timotimo> inlining calls to methods requires some guessing + fallback magic

[13:29] <timotimo> so inline a call, but guard against a wrong guess and doing a full lookup in case of wrongness

[13:33] <pmurias> timotimo: it's possible to turn goto/conditional jump back into loops: https://github.com/kripken/emscripten/tree/master/src/relooper

[13:37] <pmurias> timotimo: IMHO flow analysis is definitely something that needs to be done on the shared across backends level

[13:41] <timotimo> when will the hotel tomorrow throw us out?

[13:41] <timotimo> oh, relooper

[13:41] <timotimo> i heard good things about it

[13:42] <timotimo> or maybe that's something else?

[13:42] <lizmat> timotimo: I asked for late checkout (which is 13:00): please check with the desk if you want to be sure

[13:42] <timotimo> 13:00 is nice

[13:42] <lizmat> (for everybody afaik)

[13:43] <timotimo> will we be thrown out of the common area, too?

[13:43] <timotimo> will there be after-hotel-hackathon-stuff? or will we just disperse right after?

[13:43] <tadzik> I leave FRA at about 13:40

[13:43] <timotimo> aaw :(

[13:47] <tadzik> so I disperse right after waking up, mostly :)

[13:48] <pmurias> timotimo: relooper is used by emscripten

[13:50] <felher> Any idea as to why this doesnt work: 

[13:50] <felher>  my Array of Str sub s() { my Str @array = < 1 2 3 4 >; }; s;

[13:50] <felher> r: my Array of Str sub s() { my Str @array = < 1 2 3 4 >; }; s;

[13:50] <camelia> rakudo 223075: OUTPUT¬´Type check failed for return value; expected 'Array[Str]' but got 'Array[Str]'‚ê§  in sub s at /tmp/WoG2qQWeCf:1‚ê§  in block  at /tmp/WoG2qQWeCf:1‚ê§‚ê§¬ª

[13:50] <woolfy> lizmat and I don't have pressing matters back home, so we don't have to leave early.  But we have mberends with us and maybe he needs to be early.

[13:51] <lizmat> timotimo, tadzik : discuss this further over dinner tonight

[13:51] <[Coke]> diakopter & I are heading out to the airport together for 5pmish flights, but haven't decided when we're leaving yet.

[13:52] <felher> Does a little bit like that old windows error messages: "An error occured: you have 8 MB ram, but you need at least 1 MB"

[13:52] <felher> *Does read

[13:54] <timotimo> "Can only use nqp_code_ref_to_sc to add a Sub" wat

[13:56] <lizmat> decont?

[13:56] <lizmat> missing decont?

[13:56] <timotimo> i don't think i have made any change that would cause any error that's anything like that :(

[13:59] *** ajr joined
[14:00] *** ajr is now known as Guest44526

[14:00] *** Guest44526 is now known as ajr_

[14:04] <hoelzro> does return exit a sub early in NQP? a simple test implies that it doesn't =/

[14:04] <timotimo> make doesn't exit a sub, but i think return ought to

[14:04] <timotimo> can you paste the test here?

[14:04] <hoelzro> sure

[14:04] <hoelzro> incoming

[14:04] <timotimo> nqp: sub a() { say "before"; return 1; say "after" }; say(a);

[14:04] <camelia> nqp: OUTPUT¬´Unable to parse expression in blockoid; couldn't find final '}' at line 2, near "say \"befor"‚ê§current instr.: 'panic' pc 14693 (src/stage2/gen/NQPHLL.pir:5223) (src/stage2/gen/NQPHLL.nqp:279)‚ê§¬ª

[14:04] <hoelzro> https://gist.github.com/hoelzro/6571032

[14:05] <timotimo> nqp: sub a() { say("before"); return 1; say("after") }; say(a);

[14:05] <camelia> nqp: OUTPUT¬´‚ê§¬ª

[14:05] <timotimo> nqp: sub a() { say("before"); return 1; say("after") }; say(a());

[14:05] <camelia> nqp: OUTPUT¬´before‚ê§1‚ê§¬ª

[14:05] <timotimo> nqp: sub a() { say("before"); return; say("after") }; say(a());

[14:05] <camelia> nqp: OUTPUT¬´before‚ê§after‚ê§1‚ê§¬ª

[14:05] <timotimo> interesting!

[14:05] <hoelzro> ah

[14:05] <hoelzro> very

[14:06] <hoelzro> so 'return;' doesn't work

[14:06] <hoelzro> but 'return $value;' does

[14:09] <[Coke]> that seems.. sub optimal

[14:10] <hoelzro> indeed

[14:13] <GlitchMr> nqp, where return in noop, unless called with a value.

[14:13] <GlitchMr> (but seriously, I think it's a strange bug)

[14:13] <GlitchMr> nqp: sub a() { say("before"); {return;}; say("after") }; say(a());

[14:13] <camelia> nqp: OUTPUT¬´before‚ê§after‚ê§1‚ê§¬ª

[14:14] <GlitchMr> nqp: sub a() { say("before"); return; say("after"); return 42; say("after after") }; say(a());

[14:14] <camelia> nqp: OUTPUT¬´before‚ê§after‚ê§42‚ê§¬ª

[14:15] <hoelzro> the QAST for that code is interesting

[14:15] <woolfy> some sort of music from the back

[14:15] <hoelzro> it looks like it doesn't parse as an actual return

[14:15] <hoelzro> oh

[14:15] <timotimo> unless it appears because of the new repr_hint_for, which i'm not sure gets used anywhere at all

[14:15] <hoelzro> it inteprets it as a var, I think

[14:16] <timotimo> hey GlitchMr :)

[14:16] *** avar left
[14:16] <hoelzro> nqp: sub a() { rob; say('hi'); }; a()

[14:16] <camelia> nqp: OUTPUT¬´hi‚ê§¬ª

[14:16] <hoelzro> mwahaha

[14:17] *** avar joined
[14:17] *** avar left
[14:17] *** avar joined
[14:17] <hoelzro> ah

[14:17] <lizmat> nqp: rob

[14:17] <camelia> : ( no output )

[14:17] <hoelzro> return is a prefix rule

[14:17] <timotimo> ah so if you don't have a value, it doesn't get parsed

[14:17] <timotimo> interesting!

[14:17] <timotimo> and of course the bare "return" is just NQPMu

[14:17] <timotimo> (almost everything seems to come down to this ...)

[14:18] <hoelzro> I'm going to see if I can fix it

[14:18] <hoelzro> make myself useful =)

[14:18] <timotimo> yays

[14:18] <timotimo> i think a big loud error would be fine

[14:18] <timotimo> or, of course, return NQPMu :P

[14:18] <hoelzro> yeah

[14:19] <[Coke]> nqp: foo; bar; baz; say('frob');

[14:19] <camelia> nqp: OUTPUT¬´frob‚ê§¬ª

[14:20] *** btyler joined
[14:21] <timotimo> is there some variant of "lalaland" that we can use to describe CORE.setting making things wonky?

[14:21] <timotimo> coocooland, perhaps

[14:22] <hoelzro> neuland?

[14:22] <timotimo> hahahahaha, you're an ass :D

[14:22] *** benabik left
[14:22] <hoelzro> you assked for it.

[14:22] <timotimo> i did. you deserve a cookie

[14:24] <[Coke]> butt I thought he was an ass?

[14:25] *** btyler left
[14:28] <hoelzro> sweet, fixed the return thing

[14:28] <hoelzro> just going to make sure Rakudo still builds before pushing up

[14:30] *** benabik joined
[14:30] <[Coke]> hoelzro++

[14:33] <timotimo> i don't know why i'm getting the silly sc thing

[14:36] <timotimo> turns out "invar INT" for an op doesn't make sense; that's probably what got me b0rked?

[14:36] <timotimo> (waiting half an hour for the compile now >_>)

[14:36] <timotimo> (i miss my desktop)

[14:39] <timotimo> jnthn just unveiled his new secret project perl76

[14:39] *** spider-mario joined
[14:40] <JimmyZ> 76?

[14:40] <timotimo> yeah

[14:40] <timotimo> from the far future

[14:40] <pmurias> what's that?

[14:40] <timotimo> we have no ideas

[14:41] <timotimo> jnthn just let it slip that it exists

[14:42] <timotimo> Perl6 + Perl5 + Moose = Perl76 :)

[14:42] <FROGGS> wow, Perl6 + Moose

[14:43] <FROGGS> can't wait :P

[14:43] <FROGGS> damn, I'm sleepy

[14:43] <JimmyZ> Isn't Is Moose part of Perl6?

[14:44] <JimmyZ> or rakudo + rakudo-v5 + moarp5?

[14:45] <FROGGS> JimmyZ: we are not that serious atm :o)

[14:49] <timotimo> i got an nqp to compile

[14:49] <timotimo> now i've made bootstrap-files and enabled the compile-time hint-precompilation

[14:54] <hoelzro> hmm

[14:54] <timotimo> if i manage to get this build going, can anybody benchmark my new nqp? i suppose compiling the rakudo setting with an "improved" nqp would be enough to see if it makes a difference in performance

[14:54] <hoelzro> I don't think I'll be able to fix this return thing without breaking a bunch of other stuff

[14:55] <tadzik> timotimo: sure

[14:55] <timotimo> (my computer either takes 10 minutes or overheats at a random point in the middle and gives crazy noisy results)

[14:55] <timotimo> ossum :)

[14:55] <timotimo> let me build a commit and make it available

[14:55] <timotimo> actually, have a diff instead

[14:56] <tadzik> I'll time a regular build first

[14:56] <timotimo> nc 192.168.0.79 1234 > nqp_hint_precomp.patch

[14:56] <timotimo> i may have to turn off my firewall first?

[14:56] <tadzik> I think so, I got an empty file

[14:57] <timotimo> try again?

[14:58] <tadzik> nope

[14:58] <timotimo> aaw man :(

[14:58] <timotimo> the connection didn't even go through

[14:58] <timotimo> what does it output?

[14:58] <[Coke]> gist, mebbe?

[14:58] <tadzik> nothing

[14:58] <timotimo> you are on the same network as me?

[14:58] <tadzik> 192.168.0.96 is me

[14:58] <timotimo> yeah, i'll gist it. i'm just sad i have to rely on a centralised service fro this :(

[14:58] <tadzik> put it up again, I'll go for nc -vv

[14:58] <timotimo> actually. hold on.

[14:58] <timotimo> it is still up

[14:59] <tadzik> nc: connect to 192.168.0.79 port 1234 (tcp) failed: No route to host

[14:59] <timotimo> no route o_O

[14:59] <tadzik> what sorcery is this

[14:59] <hoelzro> do they mess with stuff on *this* network, too?

[14:59] <hoelzro> timotimo: upload it to the proxy machine?

[14:59] <timotimo> i scp'd it up to the server on the whiteboard

[14:59] <hoelzro> then tadzik can scp it down

[14:59] <timotimo> :)

[14:59] <hoelzro> perfect =)

[14:59] <tadzik> heh

[15:00] <timotimo> hoelzro: they probably isolate all nodes on the network from each other

[15:00] <timotimo> i guess they heard there will be hackers comming

[15:00] <hoelzro> I think so

[15:00] <hoelzro> bastards

[15:00] <tadzik> timotimo: where did you put it?

[15:00] <timotimo> ~/

[15:00] <timotimo> oh

[15:00] <timotimo> duh

[15:00] <tadzik> there's only 'report' there

[15:00] <timotimo> forgot the : at the end

[15:00] <tadzik> classic

[15:01] <hoelzro> no wonder it was so fast!

[15:01] <timotimo> why doesn't it do anything at all? o_O

[15:02] <tadzik> just put gzipped base64 on irc :)

[15:02] <timotimo> because it's -P in scp and -p in ssh >_>

[15:02] <tadzik> oh I hate this

[15:02] <timotimo> my nqp built to completion <3

[15:02] <timotimo> ef08484d985b10e56ca333acee9c937e3c099f9d <- i based my commit on this commit

[15:02] <timotimo> my non-commit, actually

[15:03] <tadzik> oh well, I'm on NQP_REVISION

[15:03] <tadzik> let's see if it applies

[15:03] <timotimo> it gives new bootstrap files

[15:03] <timotimo> but it shouldn't be a problem

[15:05] <timotimo> i can type ¬¢ by compose, |, c

[15:06] <JimmyZ> by NFG?

[15:06] <JimmyZ> :P

[15:07] <timotimo> i don't know what you mean :|

[15:08] <JimmyZ> you didn't see MoarVM ppt? o_O

[15:08] <timotimo> i know what NFG is, i do not know why you bring it up right now

[15:08] <JimmyZ> kidding

[15:09] <timotimo> oke :)

[15:11] *** zakharyas joined
[15:11] *** kaare__ joined
[15:12] *** krokite joined
[15:12] *** krokite left
[15:12] *** krokite joined
[15:12] *** kaare_ left
[15:15] <timotimo> OMG

[15:16] <woolfy> icecreams 4 types

[15:16] <woolfy> 16 icecreams in total

[15:17] <tadzik> ooooo

[15:17] <woolfy> horn with strawberry ; horn with nuts ; chocolate on a stick ; chocolate (with nuts) on a stick ; (4 of each)

[15:21] <[Coke]> before I came here, I pronounced QAST as KWAST. CAST sounds odd to me.

[15:21] *** btyler joined
[15:21] <tadzik> timotimo: without: 332.56s user 3.76s system 99% cpu 5:39.14 total

[15:21] <tadzik> with: 323.97s user 3.75s system 99% cpu 5:30.53 total

[15:22] <tadzik> that's nqp without --optimize, fwiw

[15:22] <timotimo> nqp doesn't take optimize yet, sorry

[15:22] <timotimo> so yay, it's a tiny bit faster!

[15:22] <tadzik> oh, parrot does

[15:22] <tadzik> so no difference, yay

[15:22] <timotimo> .... huh?

[15:22] <tadzik> I mean, I didn't do it wrong :)

[15:22] <hoelzro> I thought it was qast with a uvuluar stop

[15:23] <hoelzro> er, uvular

[15:23] <tadzik> it is a bit faster, yes :)

[15:23] <timotimo> just a tiny bit, though :(

[15:23] <diakopter>  hoelzro heh lua

[15:23] <timotimo> i was hoping for at least 50% change

[15:23] <timotimo> or maybe 99.999%, but that's just unlikely

[15:23] <[Coke]> Q'ast?

[15:23] <[Coke]> Qapla'

[15:24] <timotimo> :)

[15:24] <hoelzro> heh

[15:24] <pmurias> timotimo: 50% for which optimalization?

[15:25] <timotimo> precalculating the HINT stuff for private attribute access

[15:26] <timotimo> now i don't know what the negate thing is for, why does it say ' in there?

[15:26] <timotimo> on the slide

[15:27] <timotimo> and i don't dare ask because i kind of didn't pay attention for the duration of that slide >_<

[15:27] <diakopter> if someone wants a really mind-bending challange, try to figure out why the quant() thing in NFA.pm needs all the extra edges it has in addition to the minimum you might expect... AND ALSO TO FIGURE OUT HOW IT EVEN WORK THE WAY IT IS

[15:27] <pmurias> timotimo: I wouldn't expect much speed up on parrot for minor things

[15:27] <timotimo> ;_;

[15:28] <diakopter> warning: it's diakopter code

[15:28] <pmurias> ;_; ?

[15:28] <timotimo> tadzik: can you try compiling nqp without actually overwriting the bootstrap files? i don't know if i need to check that in, but my build time is terrible

[15:28] <timotimo> pmurias: crying emoticon

[15:28] *** kivutar joined
[15:29] <timotimo> won't the icecream get damaged by lying in this not-too-cold room?

[15:29] <diakopter> yeah it all melted

[15:29] <diakopter> so I ate it all

[15:29] <timotimo> nooooooooo :(

[15:29] <lizmat> very likelty

[15:29] <[Coke]> .U+1F63F

[15:29] *** iSlug joined
[15:29] <timotimo> is that one of the cat faces?

[15:29] <diakopter> .u 1f63f

[15:29] <yoleaux> U+1F63F CRYING CAT FACE [So] (üòø)

[15:29] <tadzik> timotimo: how do I do that?

[15:29] <[Coke]> aw, not in this font.

[15:30] <diakopter> .u FATFACE

[15:30] <yoleaux> No characters found

[15:30] <diakopter> .u OBAMAFACE

[15:30] <yoleaux> No characters found

[15:30] <pmurias> timotimo: the whole parrot machinery is slowing things down, if we turned a hash lookup into a super fast jitted memory offset lookup the speedup should be noticable, but if we have a super slow do-a-ton-of-parroty-things on top of not so much

[15:30] <timotimo> tadzik: either unapply the patch, open the patch in a text editor, kill all the lines that belong to these files, or just use git to reset these files selectively

[15:30] <timotimo> :(

[15:32] <tadzik> timotimo: two files remained with changes, rebuilding

[15:32] <diakopter> woolfy: can I take an ice cream

[15:32] <timotimo> perfect

[15:33] <woolfy> diakopter & everybody : please take an icecream

[15:33] <timotimo> cue loud noises

[15:33] <[Coke]> someone throw me one!

[15:34] <krunen> mmmmmmmmmmmm....

[15:34] <timotimo> mmmmmmmm....

[15:35] <lizmat> nomnom

[15:36] <woolfy> i take the last one (my second one) -> double nom

[15:37] <timotimo> i'll probably have to build extra code to handle nqp::getattr(...) and nqp::setattr(...)

[15:38] <[Coke]> woolfy++ lizmat++

[15:39] <pmurias> timotimo: a good plan for optimalizations would be to talk with jnthn what info he could make best use of while emitting code in the JVM backend

[15:40] <tadzik> timotimo: 

[15:40] <tadzik> it's the same time

[15:40] <timotimo> the jvm backend is already fast-ish; i'd like the parrot backend to be usable as well

[15:40] <timotimo> tadzik: oh, i was mostly interested in: can nqp actually build?

[15:40] <timotimo> but thanks, that's excellent :)

[15:40] <tadzik> oh, sure

[15:40] *** btyler left
[15:40] <timotimo> it's like 4%!

[15:40] <tadzik> yep

[15:40] <timotimo> maybe another 4% if nqp::getattr and friends learn to create HINT, too

[15:40] <tadzik> r: 9/332

[15:40] <camelia> : ( no output )

[15:41] <tadzik> r: say 9/332.Num

[15:41] <camelia> rakudo 223075: OUTPUT¬´0.0271084337349398‚ê§¬ª

[15:41] <timotimo> (don't calculate it! ;_;)

[15:41] <tadzik> ...sorry

[15:41] <tadzik> but I approximated :)

[15:45] <pmurias> timotimo: you want make siginifcant progress on the parrot backend without changing parrot itself

[15:46] <GlitchMr> rn: use Cat if False

[15:46] <tadzik> woolfy: http://cache.gawkerassets.com/assets/images/17/2010/12/500x_10-yahoo-answers.jpg

[15:46] <camelia> niecza v24-95-ga6d4c5f: OUTPUT¬´Unhandled exception: System.Exception: Unable to locate module Cat in /home/p6eval/niecza/lib /home/p6eval/niecza /home/p6eval/.config/niecza‚ê§  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ‚ê§  at /home/p6eval/niecza/src/NieczaPathSea‚Ä¶¬ª

[15:46] <camelia> ..rakudo 223075: OUTPUT¬´===SORRY!===‚ê§Could not find Cat in any of: /home/p6eval/nom-inst/lib/parrot/5.5.0-devel/languages/perl6/site/lib, /home/p6eval/nom-inst/lib/parrot/5.5.0-devel/languages/perl6/vendor/lib, /home/p6eval/nom-inst/lib/parrot/5.5.0-devel/languages/perl6/lib, /home/p6‚Ä¶¬ª

[15:46] <GlitchMr> I cannot have conditional "use"?

[15:47] <woolfy> tadzik: there is no hope for the human race....

[15:47] <[Coke]> rn: if 0 { use Barf }

[15:47] <camelia> rakudo 223075: OUTPUT¬´===SORRY!===‚ê§Could not find Barf in any of: /home/p6eval/nom-inst/lib/parrot/5.5.0-devel/languages/perl6/site/lib, /home/p6eval/nom-inst/lib/parrot/5.5.0-devel/languages/perl6/vendor/lib, /home/p6eval/nom-inst/lib/parrot/5.5.0-devel/languages/perl6/lib, /home/p‚Ä¶¬ª

[15:47] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT¬´Unhandled exception: System.Exception: Unable to locate module Barf in /home/p6eval/niecza/lib /home/p6eval/niecza /home/p6eval/.config/niecza‚ê§  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ‚ê§  at /home/p6eval/niecza/src/NieczaPathSe‚Ä¶¬ª

[15:47] <tadzik> woolfy: there's also a nice flash-y video made, with cavemen having exactly this conversation

[15:47] <[Coke]> similar to p5, no.

[15:48] <tadzik> it's really accurate

[15:48] <woolfy> tadzik: I repeat my statement (...)

[15:48] <tadzik> :)

[15:48] <hoelzro> tadzik: you don't mean http://www.explosm.net/comics/3297/, do you?

[15:48] <tadzik> hoelzro: close ;)

[15:49] *** iSlug left
[15:49] <GlitchMr> r: use if $ENV{DEV}, "warnings"

[15:49] <camelia> rakudo 223075: OUTPUT¬´===SORRY!===‚ê§Could not find sub &DEV‚ê§¬ª

[15:50] <GlitchMr> r: use if %*ENV<DEV>, "warnings"

[15:50] <camelia> rakudo 223075: OUTPUT¬´===SORRY!===‚ê§Could not find if in any of: /home/p6eval/nom-inst/lib/parrot/5.5.0-devel/languages/perl6/site/lib, /home/p6eval/nom-inst/lib/parrot/5.5.0-devel/languages/perl6/vendor/lib, /home/p6eval/nom-inst/lib/parrot/5.5.0-devel/languages/perl6/lib, /home/p6e‚Ä¶¬ª

[15:50] <diakopter> OBAMAFACE

[15:51] *** iSlug joined
[15:51] <tadzik> diakopter: http://ragefac.es/not-bad-obama ?

[15:51] <huf> ~/obamaface.../~ sung to the tune of "all by myself"

[15:52] <moritz>   

[15:52] <[Coke]> hugme: hug moritz 

[15:52] * hugme hugs moritz

[15:53] * moritz hugs [Coke]

[15:56] <hoelzro> huh

[15:56] <hoelzro> apparently I *don't* have a commit bit for nqp?

[15:56] * [Coke] wonders why this install of nqp can only be run from inside the install dir. wtf.

[15:57] <tadzik> [Coke]: yep. Sucks. Or try passing the absolute path to something's Configure.pl

[15:57] <[Coke]> tadzik: already using an absolute path, methinks.

[15:58] *** ajr_ left
[15:58] <[Coke]> config.status contains: /Users/willcoleda/perl5/perlbrew/perls/perl-5.16.0_THREAD/bin/perl Configure.pl "--prefix=/Users/willcoleda/sandbox/partcl-nqp/install-jvm" $*

[15:59] *** ajr joined
[15:59] *** ajr is now known as Guest3123

[15:59] <tadzik> fair enough

[16:01] <[Coke]> arglebargle. I have an install-jvm/nqp and an install-jvm/bin/nqp

[16:01] <[Coke]> one works. :)

[16:01] <woolfy> My first impression of this course: it needs to be done in 3 days.

[16:01] <hoelzro> woolfy: definitely

[16:01] <moritz> not a week? :-)

[16:01] <tadzik> it'd be safer for the brains :)

[16:02] <woolfy> And 17 people is not a bad number.  I feel jnthn gave enough attention to anybody in need / want of attention.

[16:03] <timotimo> looking forward to all the commits :D

[16:03] <timotimo> pmurias: you have a kind of defeatist attitude towards parrot :(

[16:03] <woolfy> moritz: no, not a week, jnthn even had time to do a lot of examples in a terminal and we did a lot of exercises where he went into the room to stand by people doing the examples...

[16:03] *** Guest3123 is now known as ajr_

[16:04] <dalek> nqp: 7e2aa75 | moritz++ | Configure.pl:

[16:04] <dalek> nqp: [Configure.pl] turn prefix into an absolute path

[16:04] <dalek> nqp: review: https://github.com/perl6/nqp/commit/7e2aa754ed

[16:04] <timotimo> jnthn seems to want to do more whiteboard use next time around

[16:05] <woolfy> he has 2 flipovers at his disposal!

[16:05] <timotimo> :D

[16:06] <timotimo> "what do you want to do?" "what, besides rip off two flipover charts at the same time?"

[16:06] <woolfy> "three flipovers!"

[16:09] <[Coke]> hurm. no not/bnot ops in nqp?

[16:09] <timotimo> what's that? binary negation?

[16:10] <timotimo> i think i've seen many ?? !! in there

[16:11] *** EvanTeitelman left
[16:11] *** ajr_ left
[16:12] *** ajr_ joined
[16:12] *** benabik left
[16:13] *** Bzek left
[16:14] <moritz> [Coke]: there are bitneg_i and bitneg_I nqp:: ops

[16:14] <timotimo> oh, bitwise negation, yes

[16:14] *** xenoterracide_ joined
[16:14] <moritz> and nqp::not_i

[16:14] <timotimo> and nqp::no_u

[16:15] <[Coke]> moritz: ah, those are not in the docs. danke. I'll add them

[16:15] <[Coke]> what about getting the handles for stdout, err, in?

[16:17] <[Coke]> also, the thing that used to be parrot config - is there an nqp equiv?

[16:19] <timotimo> pmurias: i'm convinced nqp, as well as parrot, does too much too often

[16:20] <timotimo> right now i may be working on parrot-specific code, but soon enough i'll return to the optimizers and hopefully improve codegen across all backends that way

[16:20] <[Coke]> timotimo++

[16:21] *** xenoterracide_ left
[16:21] <dalek> nqp: db32fa1 | coke++ | docs/nqp-opcode.txt:

[16:21] <dalek> nqp: add refs to more ops

[16:21] <dalek> nqp: 

[16:21] <dalek> nqp: moritz++

[16:21] <dalek> nqp: review: https://github.com/perl6/nqp/commit/db32fa1015

[16:21] *** xenoterracide joined
[16:21] *** kivutar left
[16:21] <krunen> Diod alcoholaidd yw cwrw. Grawnfwyd wedi ei eplesu ydyw. Cynhyrchir cwrw trwy ei fragu (e.e. mewn bragdy).

[16:21] *** ajr_ left
[16:22] <timotimo> the what now? :|

[16:22] <timotimo> er, the .WHAT.HOW?

[16:22] <krunen> http://cy.wikipedia.org/wiki/Cwrw

[16:22] *** btyler joined
[16:23] <timotimo> is that so :)

[16:23] <colomon> "Drink is alcoholic beer . Cereal is fermented it is. Beer is produced by brew (eg in a brewery )." according to google translate.

[16:23] <diakopter> Chrome crashed when it tried to translate that page

[16:24] <timotimo> mhhh fermented cereal

[16:24] *** kivutar joined
[16:24] <timotimo> ah, since we have an appointment at the restaurant at 7, this seems to be working out almost perfectly fo rtime

[16:25] <timotimo> (but we did skip the boring parts of the jvm and did not do the 9th exercise, which would be exploring NFAs and such)

[16:25] *** ajr_ joined
[16:25] <colomon> I am vain, I will drink,

[16:25] <colomon> I g'wilydd see my country,

[16:25] <colomon> I spend like crazy man;

[16:25] <colomon> Fi get drunk, disgusting medicine.

[16:25] <colomon> This google translation is AWESOME.

[16:25] <timotimo> hahaha

[16:27] <timotimo> # TODO mkdir jit

[16:28] <[Coke]> didn't jnthn++ say there was an nqp slurp?

[16:29] * FROGGS @attendees>>.slurp( [#]P )

[16:29] <hoelzro> nqp::slurp, right?

[16:29] <hoelzro> or maybe it's just the builtin

[16:29] <hoelzro> the built works, I think

[16:29] <[Coke]> ah, not an op.

[16:29] <timotimo> there are slurpy parameters ;)

[16:29] <FROGGS> [Coke]: there is an nqp::readallfh op

[16:30] <FROGGS> nqp: nqp::readallfh()

[16:30] <camelia> nqp: OUTPUT¬´Error while compiling block : Error while compiling op readallfh (source text: "nqp::readallfh()"): The 'readallfh' op expects one operand‚ê§current instr.: '' pc 52004 (src/stage2/QAST.pir:18966) (src/stage2/QAST.nqp:3186)‚ê§¬ª

[16:30] <FROGGS> right

[16:30] <timotimo> it'll probably take a filehandle

[16:30] <timotimo> :P

[16:30] <FROGGS> don't you say :o)

[16:30] <timotimo> cpt. obvious signing off o>

[16:30] *** Guest5678 joined
[16:30] <Guest5678> hello

[16:31] <FROGGS> o/

[16:31] <timotimo> a guest!

[16:31] * timotimo decks the table

[16:31] <Guest5678> hi

[16:31] <FROGGS> ossum!

[16:31] <Guest5678> no bolivard

[16:31] <Guest5678> 03fg

[16:31] *** Guest5678 left
[16:32] <FROGGS> w/e

[16:32] <timotimo> :\

[16:32] *** Mouq joined
[16:32] <timotimo> mouq mouq :)

[16:33] <hoelzro> if I have a PMC for the WHAT of an object, how can I print its name?

[16:34] <hoelzro> I've been digging forever yielding nothing =/

[16:35] <Mouq> o/

[16:35] <timotimo> lizmat: "ss" is not even a unicode character! :o

[16:35] <[Coke]> FROGGS: say(nqp::slurp($file)); was fine. Danke.

[16:36] <FROGGS> \o/

[16:36] <FROGGS> (I fiddled with the IO ops on MoarVM quite a bit)

[16:37] *** benabik joined
[16:37] <lizmat> group photo

[16:37] *** FROGGS left
[16:38] <timotimo> .o(should have noticed it in the first email tbs)

[16:38] <timotimo> tbh*

[16:38] <timotimo> bbl

[16:39] <colomon> group photo!

[16:40] *** [Sno] left
[16:47] *** lizmat left
[16:51] *** woolfy left
[16:56] <Mouq> r: my $f = "a\tb\tc,d\te\tf"; $f ~~ tr/ \, / \n /; $f.say

[16:56] <camelia> rakudo 223075: OUTPUT¬´a b       cnd     e       f‚ê§¬ª

[16:56] <Mouq> r: my $f = "a\tb\tc,d\te\tf"; $f ~~ tr/ \, / "\n" /; $f.say

[16:56] <camelia> rakudo 223075: OUTPUT¬´a b       c\d     e       f‚ê§¬ª

[16:57] *** tba joined
[17:00] *** isBEKaml joined
[17:03] *** kivutar left
[17:07] *** zakharyas left
[17:09] *** EvanTeitelman joined
[17:09] *** kivutar joined
[17:27] *** btyler left
[17:35] *** risou is now known as risou_awy

[17:35] *** iSlug left
[17:37] *** risou_awy is now known as risou

[17:41] <timotimo> hooray, ssh works in this restaurant

[17:42] <colomon> \o/

[17:43] <moritz> timotimo! colomon! 

[17:44] <moritz> Mouq!

[17:49] <colomon> moritz!

[17:51] <Mouq> moritz: moritz!

[17:51] *** xenoterracide left
[17:52] <Mouq> I considered saying omitomit earlier, but it's not nearly as fun as "quoM quoM in podicem"

[17:52] *** ajr_ left
[17:53] *** kivutar left
[17:53] *** risou is now known as risou_awy

[17:53] *** ajr joined
[17:54] *** ajr is now known as Guest42347

[17:54] *** Guest42347 left
[17:54] <Mouq> Oh, nope, got quom and quod mixed up :/

[17:55] *** ajr_ joined
[17:58] *** ajr_ left
[17:58] <dalek> rakudo-js: 69a7e62 | (Pawel Murias)++ | run_tests:

[17:58] <dalek> rakudo-js: Add to nqp/t/serialization/01-basic.t run_tests.

[17:58] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/69a7e62e7a

[17:58] <dalek> rakudo-js: 2c7325f | (Pawel Murias)++ | runtime/reprs.js:

[17:58] <dalek> rakudo-js: add a compose method to P6int repr

[17:58] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/2c7325f62e

[17:58] <dalek> rakudo-js: cfcbc97 | (Pawel Murias)++ | runtime/bootstrap.js:

[17:58] <dalek> rakudo-js: set the type check cache in KnowHOW

[17:58] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/cfcbc97416

[17:58] <dalek> rakudo-js: f176a5d | (Pawel Murias)++ | run (5 files):

[17:58] <dalek> rakudo-js: Pass nqp/t/serialization/02-types.t.

[17:58] <dalek> rakudo-js: 

[17:58] <dalek> rakudo-js: Implement nqp::scsetcode, nqp::markcodestatic.

[17:58] <dalek> rakudo-js: Do more thing inside P6opaque REPR .compose.

[17:58] <dalek> rakudo-js: Mark the contents of the 6MODEL_CORE sc as coming from that sc.

[17:58] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/f176a5d990

[18:01] *** kivutar joined
[18:03] <timotimo> pmurias++ \o/

[18:04] *** xenoterracide joined
[18:06] *** iSlug joined
[18:08] <pmurias> serialization of closures is still left to do :/

[18:10] <timotimo> seems like you're up to the task, though :)

[18:18] <ingy> mmm serialization :)

[18:27] *** rindolf joined
[18:28] *** kaare__ is now known as kaare_

[18:28] *** pmurias left
[18:36] *** ajr joined
[18:36] *** ajr is now known as Guest6950

[18:36] *** Guest6950 is now known as ajr_

[18:40] *** rindolf left
[18:43] *** pmurias joined
[18:43] *** cogno joined
[18:44] <pmurias> if a nqp script is invoked as 'node foo.js 1 2 3' what should @ARGS contain?

[18:44] <moritz> [1, 2, 3]

[18:44] <moritz> well

[18:45] <moritz> ["1", "2", "3"] to be precise

[18:45] *** btyler joined
[18:45] <moritz> and foo.js should be in $PROGRAM_NAME

[18:45] <moritz> $*PROGRAM_NAME

[18:45] <moritz> r: say $*PROGRAM_NAME

[18:45] <camelia> rakudo 223075: OUTPUT¬´/tmp/TbiNJmtl2M‚ê§¬ª

[18:46] <pmurias> moritz: this isn't the case in nqp-parrot

[18:50] *** sqirrel joined
[18:50] *** cogno left
[18:51] *** btyler left
[18:51] *** zakharyas joined
[18:54] <timotimo> moritz: do you have some experience with pir-level hacking? i'm trying to improve the way the compiler handles ops like bindattr_i and i'm not doing much progress

[18:54] *** mberends_ joined
[18:55] *** mberends_ left
[18:55] <moritz> timotimo: I "speak" some PIR, if that's what you want to know

[18:55] *** FROGGS joined
[18:55] <FROGGS> \o/

[18:55] <timotimo> oh i'm making progress!

[18:55] <timotimo> now the error message is actually understandable

[18:56] <colomon> \o/

[18:56] <colomon> understandable++

[18:58] *** mberends left
[18:58] *** isBEKaml left
[19:03] <hoelzro> wooo! RaNIW party!

[19:04] <sorear> RaNIW?

[19:04] <sorear> oh

[19:04] <sorear> Rak and Nqp Int'l Workshop

[19:04] <sorear> ?

[19:04] <tadzik> yep

[19:06] *** zakharyas left
[19:08] *** kivutar left
[19:09] *** kivutar joined
[19:11] *** pupoque left
[19:12] <nwc10> is anyone still awake enough for a survivors' party?

[19:13] *** mberends joined
[19:13] <timotimo> yeah, it's not that late yet

[19:13] * mberends is surviving :)

[19:14] <FROGGS> yeah, it is just like quarter past o'beer

[19:14] <dalek> rakudo-js: 5a85a38 | (Pawel Murias)++ | src/QAST/Compiler/JavaScript.nqp:

[19:14] <dalek> rakudo-js: Implement @ARGS and sub MAIN(*@ARGS) {...}

[19:14] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/5a85a3885e

[19:14] <timotimo> that's a quarter to rock o clock ;)

[19:15] <timotimo> FROGGS: i need your help! :)

[19:15] <timotimo> No applicable candidates found to dispatch to for 'Int'.

[19:16] <timotimo> current instr.: 'dispatch' pc 6303 (src/stage2/gen/NQPCORE.setting.pir:2876) (src/stage2/NQPCORE.setting:341) <- so probably a result from my probably b0rked bindattr_i :)

[19:19] <sorear> o/ mberends

[19:19] <mberends> yo sorear

[19:20] <timotimo> hey sorear :)

[19:26] *** mberends_ joined
[19:26] *** mberends_ left
[19:26] *** mberends left
[19:27] <moritz> http://www.fudco.com/chip/deconstr.html # 10 years old, but I read it the first time today, and enjoyed it

[19:28] *** kaare__ joined
[19:31] *** kaare_ left
[19:33] <colomon> moritz: 20 years old according to HN...

[19:38] <moritz> yes, I can't subtract

[19:38] <moritz> sorry

[19:39] <moritz> and the HN discussion made me read https://en.wikipedia.org/wiki/Sokal_affair

[19:42] *** [Sno] joined
[19:43] <colomon> I associate Chip Morningstar with Perl, not sure why.

[19:43] <timotimo> gnite

[19:46] <colomon> moritz++ # read this ages ago, but it's a good read and the Internet was otherwise being boring this afternoon

[19:47] *** iSlug left
[19:48] <sorear> colomon: probably because you're mixing him up with Chip Salzenburg, who you almost certainly met in austin and is a fairly active p5per

[19:48] <colomon> sorear: could be, I suppose

[19:51] <arnsholt> I'm not entirely sure postmodernism quite deserves the bad rap it's gotten (especially in technical circles)

[19:51] <arnsholt> PZ Myers had a post on just that recently, actually

[19:52] *** krokite left
[19:55] *** krokite joined
[20:04] *** kaare__ left
[20:05] <arnsholt> (http://freethoughtblogs.com/pharyngula/2013/09/10/can-we-rehabilitate-post-modernism-please/)

[20:07] *** sqirrel left
[20:13] *** cognominal joined
[20:16] <colomon> sorear: actually was thinking of Chip Morningstar, it's just that he was a Commodore 64 guy rather than a Perl guy.   :)

[20:22] <dalek> perl6-roast-data: 7dbc10a | coke++ | p (2 files):

[20:22] <dalek> perl6-roast-data: today (automated commit)

[20:22] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/7dbc10a675

[20:27] *** lizmat joined
[20:29] *** SamuraiJack_ left
[20:31] *** rurban joined
[20:32] <rurban> diakopter: what did you say at your kiev lightning talk about p5 on p6 performance? when will p5 on p6 bypass p5p? I want to add it to wikipedia. 

[20:34] <lizmat> rurban: I think diakopter is getting some shuteye

[20:34] <masak> evening, #perl6

[20:34] <rurban> At the YAPC Europe conference 2013 in Kiev Matthew Wilson announced that within a few years Perl5 on Perl6 will bypass Perl performance...

[20:35] <masak> rurban: I'm semi-sure that lightning talk is now online, if you want to research it yourself.

[20:35] <dalek> rakudo-js: 16a0fe8 | (Pawel Murias)++ | / (4 files):

[20:35] <dalek> rakudo-js: Make nqp-compiler.nqp take the source file as command line argument.

[20:35] <dalek> rakudo-js: 

[20:35] <dalek> rakudo-js: Make nqp-compiler.nqp work with real serialization.

[20:35] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/16a0fe8906

[20:35] <masak> should be able to find it on YouTube.

[20:35] <pmurias> rurban: why do you want to add it to wikipedia?

[20:36] <tadzik> rurban: I it was not quite an announcement, afair

[20:36] <tadzik> it was more like "we can make it happen with your help"

[20:40] <rurban> Because I like the idea and it was a pretty important annoucement :)

[20:40] <rurban> Is it too dangerous?

[20:41] <rurban> So far I just added: In late 2012 and 2013 several projects for alternative implementations of Perl 5 started: Perl5 in [[Perl6]] by the Rakudo Perl team, ''moe'' by Stevan Little and friends, ''p2'' by the Perl11 team under Reini Urban and ''gperl'' by goccy.

[20:42] <rurban> predicted is a better term

[20:44] *** ssutch joined
[20:55] *** ajr_ left
[20:56] *** cognominal left
[21:00] *** lizmat left
[21:11] *** denis_boyun left
[21:11] *** kivutar left
[21:11] <[Coke]> He'll probably be online in the morning, CET.

[21:13] *** btyler joined
[21:19] *** kivutar joined
[21:22] *** kivutar left
[21:22] <rurban> I didn't add it

[21:27] *** kivutar joined
[21:36] <timotimo> you wanna drive home in my bahn? in my bahn?

[21:37] <timotimo> hey masak :)

[21:37] *** Rotwang left
[21:41] *** kivutar left
[21:42] *** FROGGS left
[21:48] <timotimo> https://gist.github.com/timo/67bd469e5a2317046856 <- this is giving me "No applicable candidates found to dispatch to for 'Int'." when compiling even the simplest thin, like a say("hello world"), but also when compiling nqppregex for stage2

[21:48] <timotimo> i would love to wake up to a solution :)

[21:49] <timotimo> i'll try for a bit o fsleep

[21:50] *** kivutar joined
[21:51] *** kivutar left
[21:53] *** cognominal joined
[21:55] *** ssutch left
[21:56] *** PacoAir left
[21:57] *** spider-mario left
[22:00] <dalek> nqp: 289685c | coke++ | docs/nqp-opcode.txt:

[22:00] <dalek> nqp: more ops

[22:00] <dalek> nqp: review: https://github.com/perl6/nqp/commit/289685c143

[22:00] *** cognominal left
[22:01] <Mouq> rn: 'aa' ~~ / 'a'+ {note "‚áí a+"} | 'aa' {note "‚áí aa"} /

[22:01] <camelia> rakudo 223075: OUTPUT¬´‚áí a+‚ê§¬ª

[22:01] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT¬´‚áí aa‚ê§¬ª

[22:01] <Mouq> rn: 'aa' ~~ / 'aa' {note "‚áí aa"} | 'a'+ {note "‚áí a+"} /

[22:01] <camelia> rakudo 223075, niecza v24-95-ga6d4c5f: OUTPUT¬´‚áí aa‚ê§¬ª

[22:01] *** cognominal joined
[22:01] <Mouq> niecza is correct here, right?

[22:03] *** FROGGS joined
[22:03] *** btyler left
[22:04] *** cognominal left
[22:04] *** fhelmberger joined
[22:08] <pmurias> [Coke]: have you seen that there is a new docs/ops.markdown file?

[22:09] *** fhelmberger left
[22:11] *** cognominal joined
[22:13] <[Coke]> pmurias: ah. it was short, I assumed it was the wrong one to add to.

[22:13] <[Coke]> I just wanted to document the existence of these ops I found out about today.

[22:14] *** cognominal left
[22:16] <[Coke]> we can still keep adding more detail descriptions to the new file.

[22:24] *** cognominal joined
[22:27] *** cognominal left
[22:37] <pmurias> [Coke]: the .txt is fild

[22:38] <pmurias> [Coke]: the .txt is filled with a lot of old and incorrect stuff, so I think it's best to put everything in the new one

[22:39] *** krokite left
[22:44] *** kivutar joined
[22:54] *** KiWi__ joined
[22:54] *** KiWi__ left
[23:07] *** krunen left
[23:13] *** ssutch joined
[23:18] <[Coke]> ok. I'd rather not have two going. I'll try to spend some time this week combining the two. (IME it's more missing data in the old one)

[23:18] <[Coke]> first, though, getting partcl back.

[23:21] <[Coke]> nqp-jvm has an eval-client but not a server?

[23:29] *** xenoterracide left
[23:38] *** btyler joined
[23:41] *** xenoterracide joined
[23:43] *** Mouq left
[23:44] *** Mouq joined
[23:44] *** rurban left
[23:50] *** BenGoldberg joined
[23:58] *** BenGoldberg left
