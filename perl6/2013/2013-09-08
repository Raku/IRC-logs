[00:08] *** Rotwang left
[00:12] *** Psyche^ joined
[00:16] *** Psyche^_ left
[00:23] *** panchiniak_ joined
[00:26] *** panchiniak_ left
[00:26] *** panchiniak_ joined
[00:27] *** panchiniak_ left
[00:28] *** panchiniak_ joined
[00:35] *** raiph left
[01:20] *** raiph joined
[01:34] *** FROGGS_ joined
[01:36] *** FROGGS left
[01:54] *** bluescreen10 joined
[01:55] *** bluescreen100 joined
[01:59] *** bluescreen10 left
[01:59] *** panchiniak_ left
[01:59] *** panchiniak_ joined
[02:01] *** panchiniak_ left
[02:01] *** panchiniak_ joined
[02:14] *** PacoAir left
[02:15] *** Vlavv left
[02:27] *** Vlavv joined
[02:46] *** raiph left
[02:59] *** xenoterracide left
[02:59] *** REPLeffect joined
[03:03] *** panchiniak_ left
[03:12] * [Coke] yawns

[03:13] *** xinming left
[03:13] *** xinming joined
[03:20] *** EvanTeitelman left
[03:25] *** preflex_ joined
[03:25] *** ChanServ sets mode: +v preflex_

[03:26] *** preflex left
[03:26] *** preflex_ is now known as preflex

[03:31] *** Mouq left
[03:38] *** thou joined
[03:48] <jercos> rn: "" ~ utf8.new()

[03:48] <camelia> niecza v24-95-ga6d4c5f: OUTPUT«===SORRY!===␤␤Undeclared routine:␤     'utf8' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 36) ␤  at /hom…

[03:48] <camelia> ..rakudo 22622a: OUTPUT«maximum recursion depth exceeded␤current instr.: 'print_exception' pc 111715 (src/gen/CORE.setting.pir:48493) (src/gen/CORE.setting:10298)␤called from Sub 'Stringy' pc 264749 (src/gen/CORE.setting.pir:113521) (src/gen/CORE.setting:5149)␤called from Sub 'Stringy' pc…

[03:48] <jercos> yeah excuse mw aht, rakudo?

[03:48] <sorear> don't think anyone implements utf8 yet

[03:49] *** thou left
[03:49] <jercos> rakudo does a decent job from what I've poked around with in rakudo star 08

[03:49] <jercos> r: utf8.new(0x61, 0xcc, 0x80).decode.perl.say

[03:49] <camelia> rakudo 22622a: OUTPUT«"a􏿽xCC􏿽x80"␤»

[03:49] * jercos shrugs

[03:50] <jercos> it's just a Buf with some magic added, but it seems to translate forwards and backwards. It just seems odd to me that the result of concatenating a string and a Buf (on a second look, it does that with any buf)

[03:50] <jercos> is a recursion depth excession

[03:51] <[Coke]> smells like a multi dispatch problem.

[03:51] <jercos> rn: "" ~ "".encode

[03:51] <camelia> niecza v24-95-ga6d4c5f: OUTPUT«Unhandled exception: No value for parameter '$enc' in 'Str.encode'␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (Str.encode @ 1) ␤  at /tmp/ZEaYDlNSFc line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4583 (ANON @ 3) ␤  at /home/p6e…

[03:51] <camelia> ..rakudo 22622a: OUTPUT«maximum recursion depth exceeded␤current instr.: 'print_exception' pc 111715 (src/gen/CORE.setting.pir:48493) (src/gen/CORE.setting:10298)␤called from Sub 'Stringy' pc 264749 (src/gen/CORE.setting.pir:113521) (src/gen/CORE.setting:5149)␤called from Sub 'Stringy' pc…

[03:51] <jercos> seems probable.

[03:52] <jercos> sigh.

[03:52] <jercos> n: "" ~ Buf.new()

[03:52] <camelia> niecza v24-95-ga6d4c5f:  ( no output )

[03:53] * jercos shrugs

[03:53] <jercos> I just wanted to confirm that it was in fact, a rakudo problem, and not a rakudo star problem, or a perl6 problem. Not that it's even a real problem, since that's not a valid operation.

[03:54] <dalek> roast: 148f92c | coke++ | S (19 files):

[03:54] <dalek> roast: rakudo.jvm fudge

[03:54] <dalek> roast: review: https://github.com/perl6/roast/commit/148f92cf75

[03:55] <[Coke]> that fudge cleans up all the aborts, I think. Probably still some tests that need todo'ing

[03:55] <[Coke]> (test suite very slow on my machine atm.)

[04:01] *** raiph joined
[04:28] *** xenoterracide joined
[04:46] *** xenoterracide left
[04:50] *** kaare_ joined
[04:58] *** xenoterracide joined
[05:20] <dalek> roast: edae796 | coke++ | S0 (3 files):

[05:20] <dalek> roast: rakudo.jvm fudges

[05:20] <dalek> roast: review: https://github.com/perl6/roast/commit/edae796994

[05:24] *** araujo left
[05:35] <BenGoldberg> rn: say +((),)

[05:35] <camelia> niecza v24-95-ga6d4c5f: OUTPUT«1␤»

[05:35] <camelia> ..rakudo 22622a: OUTPUT«0␤»

[05:39] <BenGoldberg> rn: (^Inf but Baggy)[0]

[05:39] <camelia> rakudo 22622a: OUTPUT«Can not bind attribute '%!elems' declared in class 'KeyBag' with this object␤  in submethod BUILD at src/gen/CORE.setting:14703␤  in method BUILD_LEAST_DERIVED at src/gen/CORE.setting:915␤  in sub infix:<but> at src/gen/CORE.setting:15453␤  in sub infix:<but> at sr…

[05:39] <camelia> ..niecza v24-95-ga6d4c5f:  ( no output )

[05:45] *** fridim_ left
[05:52] *** SamuraiJack joined
[05:53] *** BenGoldberg left
[06:05] *** xenoterracide left
[06:06] *** xenoterracide joined
[06:11] *** agre joined
[06:17] <moritz> \o

[06:22] <diakopter> o/

[06:28] <sjohnson> I want Perl 6 NOW!

[06:28] <sjohnson> hmm, i screwed it up.

[06:28] <sjohnson> hugme: I want Perl 6 NOW!

[06:28] * hugme hugs sjohnson

[06:28] <sjohnson> :3

[06:28] <sorear> o/

[06:32] <moritz> hello sorear, sjohnson, *

[06:32] <sjohnson> howdy

[06:35] *** skids left
[07:02] *** FROGGS_ is now known as FROGGS

[07:06] *** raiph left
[07:19] <sjohnson> moritz: how are you liking hugme these days?

[07:19] <sjohnson> strange question, I know.. but I have found it to be a reliable source for a working example of POE's IRC bot stuff.

[07:19] <sjohnson> thus, I'm a fan.

[07:26] *** araujo joined
[07:26] *** araujo left
[07:26] *** araujo joined
[07:26] <moritz> sjohnson: it's just there, and an ordinary piece of software. Nothing to poor my heart's blood into

[07:27] <sjohnson> pour*

[07:27] <sjohnson> ... so modest...

[07:27] <sjohnson> hugme: hug moritz 

[07:27] * hugme hugs moritz and blushes

[07:28] <sjohnson> well, let me just say, I appreciate it, even though you probably still think it's strange of me to think of it in that way.

[07:28] <sjohnson> i ended up copying it a few years ago and made all sorts of other silly features.. fortune cookie messages, googling for weather and temperature, etc

[07:28] <sjohnson> even a lgmtfy.com link maker

[07:28] <sjohnson> was a lot of fun

[07:29] * moritz doesn't know if the original purpose of hugme currently works

[07:29] <sjohnson> "There is no greater example... than a working example." -- sjohnson on hugme, Sept 8th, 2013

[07:29] <sjohnson> oh, to add people to github?

[07:30] <moritz> aye

[07:31] <moritz> hugme: add darguval to perl6

[07:31] <hugme> moritz: You need to register with freenode first

[07:31] <sorear> moritz: fairly certain it doesn't work for perl6

[07:31] <sorear> ISTR that it stopped working after perl6 was switched to an organization

[07:31] <sorear> but it might still work for user accounts

[07:32] <FROGGS> hugme: add moritz to rakudo-p5

[07:32] <hugme> FROGGS: You need to register with freenode first

[07:32] <moritz> sorear: I think I tried to fix that some time ago

[07:32] <FROGGS> gah

[07:32] <moritz> seems to be a problem earlier in the process

[07:32] <sorear> hugme: add moritz to rakudo-p5

[07:32] <hugme> sorear: You need to register with freenode first

[07:33] <sorear> but I AM registered

[07:33] <FROGGS> good moring btw :o)

[07:33] <FROGGS> me too

[07:33] * moritz too

[07:33] * sorear is also connected over SSL

[07:33] <FROGGS> but hugme must be an admin for that org/repo, no?

[07:33] * sorear is not authenticated with a pubkey, though

[07:33] <moritz> FROGGS: aye

[07:34] <sjohnson> i should have kept my mouth shut eh

[07:35] <FROGGS> *g*

[07:35] *** hugme joined
[07:35] <moritz> hugme: add FROGGS to perl6

[07:35] *** ChanServ sets mode: +v hugme

[07:35] * hugme hugs FROGGS. Welcome to the perl6 github organization

[07:35] <FROGGS> no, that is not how #perl6 works :o)

[07:35] <sjohnson> hmm, i wonder what i need to get in on this...

[07:35] <FROGGS> O.o

[07:35] <moritz> wtf

[07:35] <moritz> I've added a debugging statement, restarted it, and now it works?

[07:35] <sjohnson> ... uh oh's.

[07:36] <sjohnson> now I really shouldn't have brought it up :)

[07:36] <sjohnson> moritz won't be able to sleep tonight.

[07:36] <moritz> hugme: add sjohnson to perl6

[07:36] * hugme hugs sjohnson. Welcome to the perl6 github organization

[07:36] <sjohnson> :3

[07:36] <sorear> hugme: add sorear to perl6

[07:36] <hugme> sorear: sorry, you don't have permissions to change 'perl6'

[07:37] <sjohnson> heh

[07:37] <sjohnson> nice try!

[07:37] <moritz> but it doesn't seem to have worked :/

[07:37] <diakopter> hugme: add diakpter to perl6

[07:37] * hugme hugs diakpter. Welcome to the perl6 github organization

[07:37] <sjohnson> wut.

[07:37] <sjohnson> hugme: add TimToady to perl6

[07:37] <hugme> sjohnson: sorry, you don't have permissions to change 'perl6'

[07:37] <sjohnson> bleh.  some people are just born with it I guess..

[07:37] <sorear> there isn't even a user named diakpter

[07:38] <sjohnson> whoa, good eye.

[07:38] <diakopter> hugme: add hugme to perl6

[07:38] <sjohnson> didn't notice that.

[07:38] * hugme hugs hugme. Welcome to the perl6 github organization

[07:38] <FROGGS> hehe

[07:38] * sorear is one of the people with full admin access to the perl6 organization on github

[07:38] <moritz> sorear: but hugme doesn't know that :-)

[07:38] <diakopter> yeah but I think it has its own.. yeah

[07:39] <moritz> hugme: add sorear to json

[07:39] <hugme> moritz: ERROR: Can't add sorear to json:  Gone

[07:39] <diakopter> hugme: help

[07:39] <hugme> diakopter: (add $who to $project | list projects | show $project | hug $nickname | tweet $twittername $message )

[07:39] <diakopter> hugme: list projects

[07:39] <hugme> diakopter: I know about Math-Model, Math-RungeKutta, MiniDBI, bench-scripts, book, gge, hugme, ilbot, java2perl6, json, modules.perl6.org, november, nqp-rx, nqpbook, perl6, perl6-examples, perl6-wtop, proto, pugs, rakudo, star, svg-matchdumper, svg-plot, tardis, try.rakudo.org, tufte, ufo, web, yapsi

[07:39] <sjohnson> .. starting to think hugme may not be all it's cracked up to be...   ;)

[07:39] <sorear> hugme: hug sjohnson 

[07:39] * hugme hugs sjohnson and blushes

[07:40] <sjohnson> nice, got a blush too.

[07:40] <moritz> just a wee bit of bitrot

[07:40] <sjohnson> must be this new cologne.

[07:40] <moritz> and maybe a github API change or two

[07:40] <diakopter> hugme: add RoseTyler to tardis

[07:40] <diakopter> ...

[07:40] <hugme> diakopter: sorry, you don't have permissions to change 'tardis'

[07:40] <sjohnson> i think you just put it in an infinite loop

[07:40] <sjohnson> aww.

[07:40] <diakopter> hugme: add perl6 to perl6

[07:40] * hugme hugs perl6. Welcome to the perl6 github organization

[07:41] <diakopter> hugme: add github to perl6

[07:41] * hugme hugs github. Welcome to the perl6 github organization

[07:41] <sjohnson> heh

[07:41] <sjohnson> hugme: add perl5 to perl6

[07:41] <hugme> sjohnson: sorry, you don't have permissions to change 'perl6'

[07:41] *** xenoterracide left
[07:42] *** xenoterracide joined
[07:43] <diakopter> hugme: remove hugme from perl6

[07:45] <sjohnson> hugme (~moritz@193.200.132.142) has quit (Quit: connection reset by peer)

[07:45] *** atrodo joined
[07:46] *** hugme left
[07:46] <diakopter> O_O

[07:46] *** hugme joined
[07:46] *** ChanServ sets mode: +v hugme

[07:46] <moritz> hugme: add diakopter to perl6

[07:46] <hugme> moritz: Feature disabled due to bitrot

[07:46] <diakopter> haha

[07:46] <sjohnson> nice one

[07:46] <sjohnson> moritz++

[07:47] <diakopter> hugme: add bitrot to bitrot

[07:47] <hugme> diakopter: Feature disabled due to bitrot

[07:49] *** eternaleye left
[07:50] <FROGGS> this is weird: I am running the v5 spectests using one core, and when it does tests about sprintf for example, it takes over a minute in another shell to execute `df -H`

[07:50] *** atrodo left
[07:50] <FROGGS> if I would have a running VM (win xp/7), it would either rash the vm or abort the tests...

[07:51] <moritz> wtf.

[07:51] <FROGGS> what could that be? a gazillion opened filehandles? finished threads left in mem?

[07:52] <FROGGS> same goes for rakudo's spectests, the main-args test does not succeed when I have a windows vm running

[07:52] <FROGGS> this didnt happened a few months back

[07:53] <FROGGS> this is crap because I need my windows vm's

[07:53] *** eternaleye joined
[07:54] <moritz> you test the open filehandles hypothesis with lsof

[07:55] <diakopter> heh. the price range slider for the hotel search on united airlines site: From $0 to $2147483647

[07:56] <FROGGS> hehe

[07:56] *** atrodo joined
[08:00] *** Bzek left
[08:04] <sjohnson> moritz: i was wondering if you *might* know a simple question to the POE IRC thing.. unfortunately I believe BinGOs is asleep.

[08:06] *** dayangkun_ joined
[08:07] <sjohnson> moritz: the question is, I can't seem to figure out how to actually get the topic.  the topic() method claims to do it, but i can only get it to set the topic, not return it.

[08:07] <sjohnson> if you have no clue, that's cool.

[08:08] <sjohnson> i'm thinking maybe it's storing the topic in some other POE-like variable that I have no idea to get at.

[08:08] <sjohnson> how* to

[08:09] *** risou_awy is now known as risou

[08:10] *** dayangkun left
[08:14] *** domidumont joined
[08:15] <sjohnson> moritz: ah, i sort of figured it out. it's actually just printing it to the console.  need to figure out how to slurp that info.

[08:18] *** domidumont left
[08:19] *** domidumont joined
[08:29] <dalek> v5: dec1297 | (Tobias Leich)++ | STATUS.md:

[08:29] <dalek> v5: nqp/rakudo update

[08:29] <dalek> v5: review: https://github.com/rakudo-p5/v5/commit/dec12974ab

[08:34] *** jercos joined
[08:34] *** genehack joined
[08:39] *** denis_boyun joined
[08:39] <moritz> sjohnson: topic is an event that you receive when you join a channel, or when somebody changes the topic

[08:39] <moritz> sjohnson: so you have to simply store the value when you receive the event

[08:40] <sjohnson> that's actually irc_topic you're thinking of

[08:40] <sjohnson> it turns out this topic() thing was working the whole time, only that anything you do on this thing spits out the output to the console / terminal

[08:40] <sjohnson> ie, if i /whois someone, it prints it out on the console.  i have no idea how to actually use it in Perl though.. ie, suck it into $whois_info, which I would consider the most basic thing

[08:41] <sjohnson> i'm sure it's possible, but unfortunately what I consider the most "basic of uses" is not covered in laymen's terms in the CPAN documentation

[08:41] *** kivutar joined
[08:42] <sjohnson> unfortunately this is sort of "the story of sjohnson's life" kind of things.

[08:42] <sjohnson> sort of need POE::Component::IRC for dummies, or Coles / Cliff's notes

[08:43] <sjohnson> moritz: (now you can see why I appreciated your working example for what hugme already does as far as printing things to the channel)

[08:44] * sjohnson casts the summon spell upon BinGOs

[08:44] <sjohnson> i'm at the "begging & pleading" stage right about now.

[08:47] *** pernatiy joined
[08:48] *** domidumont left
[08:48] *** dayangkun_ left
[08:50] *** bropl joined
[08:51] <bropl> hi everyone

[08:54] <sjohnson> moritz: i figured it out.  it returns this data back to events based on irc_* names.  so you need to have a POE package or whatever it's called to register it.  this is getting a bit complex  :/

[08:55] <bropl> is there someone expert with panda?

[08:55] <sjohnson> now I have to figure out how to get the data from irc_whois or whatever back to the function that wanted the data in the first place.  this sounds very complicated.

[08:55] <sjohnson> starting to wonder if I should have went with BasicBot

[08:57] <bropl> r: say $*EXECUTABLE_NAME

[08:57] <camelia> rakudo 22622a: OUTPUT«./nom-inst/bin/perl6␤»

[08:57] <moritz> bropl: tadzik knows panda pretty well, and I know a thing or two about it

[08:57] <bropl> oh tnaks

[08:57] <bropl> thanks

[08:58] <bropl> i wanted to say that latest rakudo doesn't seem to let panda work

[08:58] <bropl> i get a problem at line 57 of lib/Panda/Common.pm

[08:58] <bropl> call to bless

[08:59] <bropl> i changed it from self.bless(*, ...) to self.bless(self, ...)

[08:59] <bropl> i dont know if thta's correct

[08:59] <bropl> *that's

[08:59] <moritz> it's correct

[08:59] <bropl> oh ok

[08:59] <moritz> but fwiw the stuff about bless is only a warning

[09:00] <bropl> still, with bootstrap, it fails to build

[09:00] <bropl> File::Find is ok

[09:01] <bropl> but doesnt work for Shell/Command.pm and JSON/Tiny/Actions.pm

[09:01] <bropl> what's strange is that it fails calling perl6 to compile them to pir

[09:01] <bropl> but if i call manually, it works

[09:12] *** xinming left
[09:15] *** xinming joined
[09:21] *** dmol joined
[09:28] *** bluescreen100 left
[09:29] <moritz> so what's the error message?

[09:32] *** Rotwang joined
[09:34] <bropl> build stage failed for JSON::Tiny: Failed building lib/JSON/Tiny/Actions.pm

[09:36] *** Rotwang left
[09:37] *** Rotwang joined
[09:50] *** sjohnson joined
[09:51] *** sjohnson left
[09:54] *** sjohnson joined
[09:55] *** sjohnson left
[09:55] *** agre left
[09:57] *** pupoque joined
[09:57] *** spider-mario joined
[09:58] *** sjohnson joined
[09:58] *** spider-mario left
[10:00] *** risou is now known as risou_awy

[10:00] *** spider-mario joined
[10:03] *** denis_boyun left
[10:14] *** btyler left
[10:16] *** xenoterracide left
[10:19] *** Bzek joined
[10:24] *** xenoterracide joined
[10:26] *** bropl left
[10:30] <moritz> fwiw I can bootstrap panda with newest rakudo just fine

[10:59] *** spider-mario left
[11:16] *** PacoAir joined
[11:39] <dalek> rakudo/nom: f01be2c | (Elizabeth Mattijsen)++ | src/core/Baggy.pm:

[11:39] <dalek> rakudo/nom: Remove superfluous BUILD method (it can't live here currently anyway)

[11:39] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f01be2cfef

[11:45] <lizmat> Spotted by BenGoldberg++

[11:46] <jnthn> lizmat: Did the segfault you ran into get worked around by now?

[11:46] <lizmat> yes

[11:47] <lizmat> it's all dandy now

[11:47] <lizmat> only problem is really that you cannot have a BUILD in a role

[11:47] <lizmat> probably because it doesn't know where the attributes live yet

[11:47] <lizmat> sort of chicken/egg problem  :-)

[11:49] <jnthn> Huh?

[11:49] <jnthn> Odd...

[11:49] <jnthn> Will try and get around to fixing the role attr thing we discussed the other day soonish.

[11:50] <jnthn> Got another busy week with teaching, though :)

[11:50] <lizmat> think about it: an attribute in a role won't really exist until it has been composed, no?

[11:50] <lizmat> as the attribute is part of the class composed into, no?

[11:51] * lizmat hopes jnthn will have time to prepare for the RaNIW  :-)

[11:53] <jnthn> The RaNIW material is almost done. :)

[11:53] <jnthn> Yes, it'd be part of the class it's composed in to, but that doesn't stop it being visible and something you can talk about inside the role...

[11:55] <lizmat> r: role A { has %!elems; method BUILD (:%!elems) {} }

[11:55] <camelia> rakudo 22622a:  ( no output )

[11:55] <lizmat> r: role A { has %!elems; method BUILD (:%!elems) {} }; class B does A {}; B.new

[11:55] <camelia> rakudo 22622a: OUTPUT«Can not get attribute '%!elems' declared in class 'A' with this object␤  in method BUILD at /tmp/QwVR0Yn4A6:1␤  in method BUILDALL at src/gen/CORE.setting:854␤  in method bless at src/gen/CORE.setting:837␤  in method new at src/gen/CORE.setting:822␤  in method new …

[11:56] *** SamuraiJack_ joined
[12:00] *** SamuraiJack left
[12:00] <jnthn> Bug.

[12:05] *** domidumont joined
[12:06] *** n0den1te joined
[12:08] <lizmat> afk&

[12:14] *** benabik left
[12:15] *** benabik joined
[12:20] *** denis_boyun joined
[12:24] *** spider-mario joined
[12:30] *** benabik left
[12:34] <GlitchMr> java.lang.OutOfMemoryError: Java heap space

[12:34] <GlitchMr> Rakudo JVM is fun!

[12:35] <GlitchMr> (let me guess, I have to close X session for compiling Rakudo)

[12:36] <GlitchMr>              total       used       free     shared    buffers     cached

[12:36] <GlitchMr> Mem:          5905       3325       2579          0        176       1671

[12:36] <GlitchMr> -/+ buffers/cache:       1477       4428

[12:36] <GlitchMr> Swap:            0          0          0

[12:36] <GlitchMr> Except that doesn't makes sense, as at this point it says "out of memory".

[12:37] <GlitchMr> I've 2.5GB of memory free, but it still complains.

[12:37] *** benabik joined
[12:37] <GlitchMr>     src/Perl6/Grammar.nqp

[12:37] <GlitchMr> java.lang.OutOfMemoryError: Java heap space

[12:37] <GlitchMr> oh, right, paste fail

[12:37] <GlitchMr> /home/glitchmr/perl6/bin/nqp --target=jar --output=blib/Perl6/Grammar.jar --encoding=utf8 \

[12:37] <GlitchMr>     src/Perl6/Grammar.nqp

[12:37] <GlitchMr> java.lang.OutOfMemoryError: Java heap space

[12:37] <GlitchMr> Anyway, I have no idea why it complains.

[12:38] <GlitchMr> oh, I fail at reading readme

[12:39] <GlitchMr> But if nqp needs more memory, why it's installed with just 512MB of memory, with no possibility of allocating more.

[12:41] <timotimo> GlitchMr: because the heap space is limited

[12:41] <timotimo> you have to push it up with a commandline flag

[12:42] <GlitchMr> But why nqp doesn't use more space by default.

[12:42] <GlitchMr> (I have to modify it manually)

[12:43] <GlitchMr> Also, wow, I was considering restoring swap space that I never used before.

[12:47] *** poor_soul joined
[12:47] <poor_soul> hi all

[12:48] <dalek> rakudo/attr-param-role-fix: cdc323d | jnthn++ | src/Perl6/ (2 files):

[12:48] <dalek> rakudo/attr-param-role-fix: Fix $!foo params inside roles.

[12:48] <dalek> rakudo/attr-param-role-fix: review: https://github.com/rakudo/rakudo/commit/cdc323de72

[12:49] <jnthn> .tell lizmat The attr-param-role-fix branch should fix the bug; it needs spectesting and a spectest adding to cover it, but I don't have time right now as I gotta go to GBG...if you've time, feel free to look at it :)

[12:49] <yoleaux> jnthn: I'll pass your message to lizmat.

[12:49] <jnthn> back this evening &

[12:51] <poor_soul> i would like to know if there is a table of the return values of the perl6 binary, man rakudo doesn't list any...

[12:54] <moritz> poor_soul: I haven't found a table either, but it seems to be 1 for uncaught errors, and otherwise the value passed to exit() if any, fallback 0

[12:54] <poor_soul> oh

[12:54] <poor_soul> ok

[12:54] <poor_soul> i was asking because i get a 255

[12:57] <moritz> what did you do to get that?

[12:59] <moritz> poor_soul: are you running rakudo on the JVM?

[12:59] <poor_soul> no, on parrot

[12:59] <poor_soul> i was trying to compile a file to pir

[13:00] <moritz> so you got a non-zero exit status, but no error message?

[13:00] <timotimo> that's kind of LTA

[13:00] <poor_soul> what does LTA mean?

[13:01] <timotimo> less than awesome

[13:01] <poor_soul> :)

[13:01] <timotimo> allegedly, return code 255 is the result of giving an invalid exit code to exit()

[13:03] <poor_soul> from rakudo? AFAICT the file shouldn't give problems

[13:03] <moritz> poor_soul: so you can run it fine when you don't compile to pir?

[13:04] <FROGGS> can we see a paste so that we what you are exactly doing?

[13:05] * FROGGS .oO( the german first-level squad is complete now )

[13:05] <poor_soul> it's a module, and returns 0 when invoked with perl6

[13:06] <FROGGS> I don't remember open precompilation issues...

[13:06] <moritz> there are some

[13:07] <poor_soul> it's the JSON::Tiny module

[13:07] <poor_soul> perl6 --target=pir --output=blib/lib/JSON/Tiny/Actions.pir lib/JSON/Tiny/Actions.pm

[13:08] <poor_soul> gives me 255

[13:08] <dalek> rakudo/nom: cdc323d | jnthn++ | src/Perl6/ (2 files):

[13:08] <dalek> rakudo/nom: Fix $!foo params inside roles.

[13:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cdc323de72

[13:08] <moritz> lizmat, jnthn: the attr-param-role-fix branch spectested fine here, and fixed what it should fix, so I merged it.

[13:09] *** TimK1 joined
[13:10] *** Mouq joined
[13:13] *** EvanTeitelman joined
[13:14] <TimK1> r: sub f (Num $n) {$n}; say f(3);

[13:14] <camelia> rakudo f01be2: OUTPUT«===SORRY!===␤CHECK FAILED:␤Calling 'f' will never work with argument types (int) (lines 1, 1)␤    Expected: :(Num $n)␤»

[13:14] <TimK1> Did I miss something?

[13:15] <moritz> probably :-)

[13:15] <moritz> http://doc.perl6.org/type/Num

[13:15] <moritz> long story short: if you want a type constraint that accepts numbers in general, use Numeric or Real

[13:16] <moritz> (depends on whether you want to deal with Complex or not)

[13:18] <dalek> roast: 9a4c899 | moritz++ | S14-roles/attributes.t:

[13:18] <dalek> roast: add a test for attribute in BUILD signature in roles

[13:18] <dalek> roast: 

[13:18] <dalek> roast: also fudge a test that prevents rakudo from running the file

[13:18] <dalek> roast: review: https://github.com/perl6/roast/commit/9a4c899ebb

[13:19] <dalek> rakudo/nom: f45940a | moritz++ | t/spectest.data:

[13:19] <dalek> rakudo/nom: run S14-roles/attributes.t

[13:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f45940a98a

[13:21] <TimK1> Oh. So Int ~~ Numeric but Int !~~ Num. (Wow. That's not confusing...)

[13:21] <FROGGS> poor_soul: that works on my box with JSON::Tiny HEAD and rakudo HEAD

[13:22] *** xenoterracide left
[13:22] <moritz> TimK1: just think Float instead of Num, and it stops being confusing

[13:22] <FROGGS> poor_soul: its state is 0 and the .pir file gets created

[13:22] <FROGGS> you need to create the dir blib/lib/JSON/Tiny/ though

[13:23] <poor_soul> well, i get the pir file as well, but i don't know if i can trust it given the return value of 255

[13:24] <poor_soul> and i tried --output=file_in_same_dir

[13:24] <poor_soul> but it doesnt change anything

[13:25] *** bakedb joined
[13:25] <GlitchMr> std: use blah

[13:25] <camelia> std 7c17586: OUTPUT«===SORRY!===␤Cannot locate module blah at /tmp/1E4Eqq2_cm line 1 (EOF):␤------> use blah⏏<EOL>␤Check failed␤FAILED 00:00 41m␤»

[13:26] *** Pleiades` left
[13:26] <poor_soul> ill try to update rakudo and JSON::Tiny

[13:27] *** go|dfish left
[13:27] *** kaare_ left
[13:27] <FROGGS> crc32 blib/lib/JSON/Tiny/Actions.pir 

[13:27] <FROGGS> 35c91c5d

[13:28] <FROGGS> -rw-r--r-- 1 froggs froggs 77175 Sep  8 15:19 Actions.pir

[13:28] *** go|dfish joined
[13:30] <FROGGS> poor_soul: what rakudo version do you had ooc?

[13:30] *** Pleiades` joined
[13:31] <poor_soul> 2013.08-102-g22622a9 built on parrot 5.6.0 revision 0

[13:33] *** domidumont left
[13:36] <FROGGS> This is perl6 version 2013.08-99-ga13cec9 built on parrot 5.7.0 revision RELEASE_5_7_0-1-gc823d3e

[13:38] *** EvanTeitelman left
[13:38] *** EvanTeitelman joined
[13:38] <poor_soul> should i update parrot?

[13:38] *** ajr joined
[13:38] <FROGGS> poor_soul: no

[13:38] <moritz> I don't think that should matter much

[13:39] *** ajr is now known as Guest76965

[13:39] <moritz> poor_soul: one thing you could do is try to nuke the install dir(s) and make sure you don't have an old parrot, nqp or rakudo in $PATH

[13:40] *** EvanTeitelman left
[13:40] *** Guest76965 is now known as ajr_

[13:40] *** EvanTeitelman joined
[13:42] *** agre joined
[13:44] <flussence> JSON::Tiny is currently broken on rakudo fyi

[13:45] <poor_soul> im sure of this, i have only parrot 5.6.0, nqp 2013.08-80-g8ed7dad and that rakudo 2013.08-102-g22622a9

[13:45] <poor_soul> oh god seriously ?

[13:45] <timotimo> what why :(

[13:45] <flussence> oh wait, ignore that, those changes aren't pushed yet

[13:45] <flussence> I was thinking of the utf16 patches, the old version should still work

[13:45] <timotimo> is it really correct to turn bless(*, ...) into bless(self, ...)?

[13:45] <timotimo> i thought it was changed to remove all positionals?

[13:46] <timotimo> also self.bless(self ...) seems redundant

[13:46] <moritz> timotimo: it's just self.bless(...)

[13:57] *** dmol left
[14:02] * [Coke] yawns

[14:04] *** zakharyas joined
[14:05] *** raiph joined
[14:11] *** EvanTeitelman left
[14:19] <poor_soul> well, i don't know what to try anymore. i don't have anymore time for today, i'll try to debug deeper tomorrow.

[14:19] <poor_soul> thanks to you all

[14:19] *** poor_soul left
[14:24] *** dmol joined
[14:24] *** n0den1te left
[14:26] *** denis_boyun left
[14:28] *** SamuraiJack_ left
[14:29] *** SamuraiJack joined
[14:29] *** EvanTeitelman joined
[14:33] *** SamuraiJack_ joined
[14:33] *** SamuraiJack left
[14:36] *** BenGoldberg joined
[14:42] *** n0den1te joined
[14:42] *** n0den1te left
[14:42] *** n0den1te joined
[14:47] *** pmurias joined
[14:59] <BenGoldberg> Good morning

[15:00] <FROGGS> hi

[15:00] <BenGoldberg> rn: say Inf but Baggy

[15:00] <camelia> rakudo f45940: OUTPUT«Ambiguous call to 'gist'; these signatures all match:␤:(Numeric:D : Mu *%_)␤:(Baggy:D : Mu *%_)␤  in method gist at src/gen/CORE.setting:990␤  in sub say at src/gen/CORE.setting:12465␤  in block  at /tmp/BHBxZBwn67:1␤␤»

[15:00] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT«Inf␤»

[15:02] <flussence> prn: say utf16.new(0xD835, 0xDCB7).decode().ord # just curious how far each gets before dying

[15:02] <camelia> rakudo f45940: OUTPUT«VMArray: index out of bounds␤  in method decode at src/gen/CORE.setting:4903␤  in block  at /tmp/SqYGYJKyCY:1␤␤»

[15:02] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT«===SORRY!===␤␤Undeclared routine:␤     'utf16' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 36) ␤  at /ho…

[15:02] <camelia> ..pugs: OUTPUT«*** No such subroutine: "&utf16"␤    at /tmp/2ev6gZotka line 1, column 5 - line 2, column 1␤»

[15:03] *** risou_awy is now known as risou

[15:08] <[Coke]> hopefully, today's run for rakudo.jvm will test clean - but it's all fudging, no actual rakudo.jvm improvements.

[15:09] <pmurias> FROGGS: hi

[15:09] <yoleaux> 7 Sep 2013 23:04Z <jnthn> pmurias: MARKER and MARKED log a position under a key, then allow it to be checked against the current position later. If you can compile the methods, they should Just Work (that is, in JVM and MoarVM ports, I didn't have to treat them specially)

[15:10] <FROGGS> o/

[15:14] <pmurias> jnthn: they seems to work, a bug in my implementation of runNFA was making be inspect/question everything

[15:14] <FROGGS> gah, I should write a script that reloads the 6guts page and send me an SMS on update

[15:15] <pmurias> 6guts page?

[15:15] <FROGGS> jnthn's blog

[15:15] <dalek> roast: 9f96263 | coke++ | / (16 files):

[15:15] <dalek> roast: rakudo.jvm fudge

[15:15] <dalek> roast: review: https://github.com/perl6/roast/commit/9f962639fa

[15:17] <[Coke]> https://gist.github.com/coke/5879701 is updated, has all the current rakudo.jvm fudges in roast.

[15:17] <dalek> rakudo-js: 358a649 | (Pawel Murias)++ | src/QAST/Compiler/JavaScript.nqp:

[15:17] <dalek> rakudo-js: Make rxsubtype pass call !cursor_pass with correct name so action methods work.

[15:17] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/358a649330

[15:19] <FROGGS> uhh, someone should fix .VAR

[15:19] <[Coke]> FROGGS: my hope with the all the fudging was that obvious things like that would pop out, yes.

[15:30] <masak> oh hai, #perl6! from a train! :)

[15:31] <n0den1te> masak: train networks have massively improved in terms of reliability, I see. :)

[15:31] <n0den1te> oh... 

[15:31] *** n0den1te is now known as isBEKaml

[15:31] <isBEKaml> and hi! :)

[15:31] <geekosaur> they're being trained well?

[15:32] <masak> isBEKaml: hi! I don't know about that. it's still very slow.

[15:32] <masak> drops packages like crazy.

[15:33] <isBEKaml> masak: well, I have seen you drop in here sometimes from trains/tunnels. :D

[15:34] <FROGGS> masak: one could think you are a conductor

[15:35] <isBEKaml> masak: if they drop too many packages, it's obvious - they vanish into the ether. :P

[15:38] *** rindolf joined
[15:38] <masak> FROGGS: we live in a time where it somehow makes sense to ship my brain to various places to teach in person. I'd be lying if I said I wasn't flattered. :)

[15:39] <isBEKaml> o.O(Hey you - here, SHIPHISBRAIN!)

[15:39] <FROGGS> hehe

[15:40] <FROGGS> that make me think of the glasses with heads from futurama :o)

[15:42] <jercos> I'm reminded more of the hitchiker's guide movie.

[15:43] <jercos> "Rubbish! We don't want to be happy, we want to be famous! Take his brain!"

[15:43] <FROGGS> :P

[15:43] <timotimo> :D

[15:45] <masak> I don't expect it to last forever. teleconferencing will keep improving, and the costs of physically transporting a person will keep rising. eventually the board will change from under me. but it's nice while it lasts.

[15:46] <masak> I do believe I am bringing joy and knowledge into people's lives, in a way that makes everyone win. :)

[15:47] <FROGGS> masak: at work we are doing video conferences instead of travelling, to decrease travel costs

[15:47] <FROGGS> and it works pretty well

[15:47] *** SamuraiJack__ joined
[15:47] <FROGGS> it is just a matter how big the screen is, and how good the mics are

[15:48] <FROGGS> and yeah, I guess you spread both joy and knowledge :o)

[15:48] *** benabik left
[15:49] *** benabik joined
[15:50] *** SamuraiJack_ left
[15:55] <masak> FROGGS: speaking purely as a teacher, I'd take the same-room experience over teleconferencing with a good mic and a good screen, any day.

[15:56] <isBEKaml> masak: I can understand that - I'd prefer to gauge students' understanding from their body language in physical space than virtual space. :)

[16:01] <masak> yes -- that kind of communication goes both ways, even.

[16:01] <masak> remote teaching always has that kind of feeling of "how are the contestants contestants in booth B doing?"

[16:05] <masak> s/(\w+) \1/$1/ 

[16:05] *** Mouq left
[16:05] *** zakharyas left
[16:11] *** Bzek left
[16:13] *** Mouq joined
[16:13] <Mouq> np: 1()

[16:14] <Mouq> n: 1()

[16:14] <camelia> niecza v24-95-ga6d4c5f: OUTPUT«Unhandled exception: Unable to resolve method postcircumfix:<( )> in type Int␤  at /tmp/KpV1JuNGIX line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4583 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4584 (module-CORE @ 576…

[16:14] <Mouq> p: 1()

[16:14] <camelia> pugs: OUTPUT«*** Cannot cast from VInt 1 to VCode (VCode)␤    at /tmp/3lEaGrTHov line 1, column 1 - line 2, column 1␤»

[16:18] *** isBEKaml left
[16:30] *** kaare_ joined
[16:44] <jnthn> evening, #perl6

[16:45] <masak> jnthn! \o/

[16:46] <moritz> \o jnthn, masak 

[16:46] <moritz> jnthn: I've merged your branch and added a test

[16:47] <jnthn> moritz++

[16:47] <jnthn> Figured if I pushed what I had, somebody would pick it up :)

[16:50] <diakopter> hint hint

[16:51] *** Mouq left
[16:58] *** fridim_ joined
[17:10] *** rindolf left
[17:10] *** rindolf joined
[17:11] *** domidumont joined
[17:12] *** ajr_ left
[17:14] *** risou is now known as risou_awy

[17:15] *** Mouq joined
[17:15] *** risou_awy is now known as risou

[17:15] *** jeff_s1 left
[17:20] <dalek> rakudo/nom: 57caee6 | (Elizabeth Mattijsen)++ | src/core/ (4 files):

[17:20] <dalek> rakudo/nom: Put BUILD in Baggy/Setty role, so we can further simplify KeyBag/KeySet

[17:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/57caee64c2

[17:23] *** pupoque1 joined
[17:24] *** jferrero joined
[17:26] *** pupoque left
[17:28] <lizmat> jnthn++ for fixing that bug

[17:28] <yoleaux> 12:49Z <jnthn> lizmat: The attr-param-role-fix branch should fix the bug; it needs spectesting and a spectest adding to cover it, but I don't have time right now as I gotta go to GBG...if you've time, feel free to look at it :)

[17:30] *** risou is now known as risou_awy

[17:32] *** skids joined
[17:37] *** agre left
[17:38] *** fridim_ left
[17:55] *** MAALDQA joined
[17:57] *** btyler joined
[17:58] <lizmat> jnthn: related to the previous bug I mentioned:

[17:58] <lizmat> r: role A { has $!a }; class B does A { method a { $!a } }

[17:58] <camelia> rakudo f45940: OUTPUT«===SORRY!=== Error while compiling /tmp/cjN8AJ0S2D␤Attribute $!a not declared in class B␤at /tmp/cjN8AJ0S2D:1␤------> s $!a }; class B does A { method a { $!a⏏ } }␤»

[17:59] <lizmat> n: role A { has $!a }; class B does A { method a { $!a } }

[17:59] <camelia> niecza v24-95-ga6d4c5f:  ( no output )

[17:59] <lizmat> std: role A { has $!a }; class B does A { method a { $!a } }

[17:59] <camelia> std 7c17586: OUTPUT«ok 00:00 43m␤»

[18:00] <jnthn> lizmat: Not related. :)

[18:00] <masak> my first impulse was to say that Rakudo is correct there.

[18:00] <lizmat> feels related  :-)

[18:00] <jnthn> lizmat: About the only thing they have in common is they both involve roles. :)

[18:00] <masak> but it's interesting to see STD and Niecza approve it.

[18:00] <jnthn> STD doesn't check attributes at all.

[18:00] <jnthn> TimToady said the other day that attributes in roles behave as if they were declared in the class, though.

[18:00] <lizmat> well, the "does" composes the attribute into the class, so why wouldn't it be able to access it ?

[18:01] <jnthn> lizmat: You can argue that the attribute should be private to the role too :)

[18:01] <lizmat> indeed, and my example shows they aren't crrently

[18:01] <lizmat> S14:101

[18:01] <synopsebot> Link: http://perlcabal.org/syn/S14.html#line_101

[18:01] <jnthn> Right, now it's clarified what we want, I can work on making it that way.

[18:02] <jnthn> It's a quite different set of changes to the fix I just did, though. :)

[18:02] <lizmat> indeed, you set of changes did not give me enough inspiration / confidence to attack myself  :-)

[18:04] <jnthn> It's probably too cruel to set "fix it" as an exercise for Frankfurt... :)

[18:04] <jnthn> Though we will cover the needed stuff... :)

[18:05] <FROGGS> only five nights before some of us meet :o)

[18:06] <lizmat> yes, working on getting the final things together

[18:06] <BenGoldberg> rn: say (^Inf) but Baggy

[18:06] <camelia> rakudo f45940: OUTPUT«Range+{Baggy}.new()␤»

[18:06] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT«0..^Inf␤»

[18:06] <BenGoldberg> rn: say ((^Inf) but Baggy)[0]

[18:06] <camelia> rakudo f45940: OUTPUT«No such method 'BUILD' for invocant of type 'Range+{Baggy}'␤  in method reify at src/gen/CORE.setting:6664␤  in method reify at src/gen/CORE.setting:6788␤  in method gimme at src/gen/CORE.setting:7221␤  in method exists at src/gen/CORE.setting:7209␤  in method at_p…

[18:06] <camelia> ..niecza v24-95-ga6d4c5f: OUTPUT«0␤»

[18:07] <lizmat> BenGoldberg: what are you expecting from ^Inf but Baggy ?

[18:07] <BenGoldberg> Nothing, really

[18:07] <lizmat> feels a bit like: doctor, it hurts when I do this

[18:07] <BenGoldberg> :

[18:07] <lizmat> ok  -)

[18:07] <BenGoldberg> )

[18:08] <BenGoldberg> rpn: say +((),)

[18:08] <camelia> niecza v24-95-ga6d4c5f: OUTPUT«1␤»

[18:08] <camelia> ..rakudo f45940, pugs: OUTPUT«0␤»

[18:09] <lizmat> rn: say ((),).WHAT

[18:09] <camelia> rakudo f45940, niecza v24-95-ga6d4c5f: OUTPUT«(Parcel)␤»

[18:13] *** TimK1 left
[18:14] *** TimK1 joined
[18:24] *** rindolf left
[18:25] *** rindolf joined
[18:25] *** raiph left
[18:26] <dalek> rakudo/nom: 338cccc | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[18:26] <dalek> rakudo/nom: Fix TODO tests by removing code, the best type of development!

[18:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/338cccc639

[18:34] *** TimK1 left
[18:36] *** EvanTeitelman left
[18:39] *** pupoque1 is now known as pupoque

[18:47] <dalek> roast: 8164572 | (Elizabeth Mattijsen)++ | S02-types/ (2 files):

[18:47] <dalek> roast: Four more tests unfudged by reduction

[18:47] <dalek> roast: review: https://github.com/perl6/roast/commit/8164572aab

[18:49] *** EvanTeitelman joined
[18:50] *** agre joined
[18:54] *** rindolf left
[19:02] <dalek> rakudo/nom: 0bacf6b | (Elizabeth Mattijsen)++ | src/core/Setty.pm:

[19:02] <dalek> rakudo/nom: Signature change in Setty.Str, without it it doesn't get selected on Setty

[19:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0bacf6ba25

[19:02] *** zakharyas joined
[19:02] <colomon> lizmat: Test Driven Deletion, eh?

[19:02] <lizmat> hehe, yup

[19:03] <dalek> roast: 3a7360b | (Elizabeth Mattijsen)++ | S02-types/ (2 files):

[19:03] <dalek> roast: Fixed Setty.Str, so can unfudge these now

[19:03] <dalek> roast: review: https://github.com/perl6/roast/commit/3a7360b7c3

[19:05] * lizmat is lazy: #77760

[19:05] * synopsebot Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=77760

[19:05] *** konundra joined
[19:09] <tadzik> heh, synopsebot win

[19:09] *** pdurbin joined
[19:11] <lizmat> r: .say for set(<a b c>).pairs # this feels wrong

[19:11] <camelia> rakudo 57caee: OUTPUT«0 => "a"␤1 => "b"␤2 => "c"␤»

[19:11] *** pupoque left
[19:11] <moritz> lizmat: it's the same as set(<a b c>).list.pairs

[19:11] <lizmat> ah, but is it supposed to be ?

[19:11] <moritz> which is a reasonable result, if there's no better interpretation

[19:12] <moritz> lizmat: the keys are the indexes into the list

[19:12] <lizmat> well, the other interpretation is that sets are a hash with only Bool as values

[19:12] <moritz> that would also work

[19:12] <lizmat> so one would expect a=>True, b=>True, c=>True

[19:12] *** pupoque joined
[19:13] <lizmat> ah, I see I forgot to add "pairs" to Setty

[19:16] * moritz wonders if there's a Getty as a companion to Setty

[19:16] <lizmat> please don't mention the unmentionable  :-)

[19:20] *** zakharyas left
[19:21] *** domidumont left
[19:21] *** pupoque left
[19:21] <dalek> roast: 2085077 | (Dagur Valberg Johannsson)++ | S02-types/int-uint.t:

[19:21] <dalek> roast: + does not work anymore, use regex instead

[19:21] <dalek> roast: review: https://github.com/perl6/roast/commit/2085077f8a

[19:21] <dalek> roast: fe60380 | (Dagur Valberg Johannsson)++ | S02-types/int-uint.t:

[19:21] <dalek> roast: added test for increment and decrement operators

[19:21] <dalek> roast: review: https://github.com/perl6/roast/commit/fe603805dd

[19:21] *** pupoque joined
[19:23] *** pupoque left
[19:24] <dalek> rakudo/nom: 0c87927 | (Elizabeth Mattijsen)++ | src/core/Setty.pm:

[19:24] <dalek> rakudo/nom: Add missing method "pairs" to Setty, oddly no tests pass so seems untested

[19:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0c87927893

[19:26] *** ajr joined
[19:27] *** ajr is now known as Guest38937

[19:31] *** denis_boyun joined
[19:31] *** Guest38937 is now known as ajr_

[19:36] <dalek> perl6-roast-data: d9424ac | coke++ | / (5 files):

[19:36] <dalek> perl6-roast-data: today (automated commit)

[19:36] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/d9424ac5a1

[19:37] <[Coke]> rakudo.jvm back up to 99.13% with the fudging.

[19:40] <lizmat> [Coke]: cool!

[19:40] <lizmat> r: set(<a>).grep({ say $_ })  # should this say "a" ?

[19:40] <camelia> rakudo 0bacf6: OUTPUT«set(a)␤»

[19:41] <lizmat> r: set(<a>).list.grep({ say $_ })  # or is this the correct way?

[19:41] <camelia> rakudo 0bacf6: OUTPUT«a␤»

[19:41] * lizmat is lazy #107022

[19:41] * synopsebot Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=107022

[19:50] *** kaare_ left
[19:52] *** silug joined
[19:55] <[Coke]> synopsebot, you have too many /s

[19:55] <lizmat> r: (bag { a => 10 }.hash).say  # only 1 element, seems correct, yet there is a spectest to the contrary

[19:56] <camelia> rakudo 0bacf6: OUTPUT«bag(("a" => 10).hash)␤»

[19:57] <dalek> roast: 6d7b8ae | (Elizabeth Mattijsen)++ | S02-types/ (2 files):

[19:57] <dalek> roast: Set/Bag test tweaks

[19:57] <dalek> roast: review: https://github.com/perl6/roast/commit/6d7b8ae87b

[19:57] *** konundra left
[20:04] <[Coke]> colomon, sorear: 2 new failures in niecza today

[20:04] <lizmat> probably my work  :-(

[20:04] <arnsholt> Wow. The Java native call code is looking to be soooo much more concise than the Parrot version

[20:04] <FROGGS> arnsholt++ # that sounds sweet :o)

[20:04] <arnsholt> Mostly due to JNA doing pretty much all the heavy lifting \o/

[20:05] <lizmat> fg

[20:05] <lizmat> oops, ww

[20:05] <arnsholt> fg: current: no such job

[20:05] <FROGGS> arnsholt: how is the moarvm native call stuff coming along? :P

[20:05] <arnsholt> Not my department! =D

[20:05] <arnsholt> I think gerdr has started looking into that

[20:06] <FROGGS> (when you are at it I'll bug you about the java script backend, and when you are doing that we just make a new backend up)

[20:06] * jnthn back

[20:06] <arnsholt> As it happens, writing up a test file for the native call stuff worked beautifully for focussing my efforts

[20:12] *** noxgirl joined
[20:13] <jnthn> arnsholt++ # native call work on JVM

[20:13] <jnthn> :)

[20:15] *** pupoque joined
[20:15] <dalek> nqp/nativecall-jvm: 11b3ebe | (Arne Skjærholt)++ | 3rdparty/jna/ (3 files):

[20:15] <dalek> nqp/nativecall-jvm: Add JNA 3rd party library.

[20:15] <dalek> nqp/nativecall-jvm: review: https://github.com/perl6/nqp/commit/11b3ebe0e5

[20:15] <dalek> nqp/nativecall-jvm: cc25bbc | (Arne Skjærholt)++ | src/vm/jvm/ (2 files):

[20:15] <dalek> nqp/nativecall-jvm: Stub native call ops.

[20:15] <dalek> nqp/nativecall-jvm: review: https://github.com/perl6/nqp/commit/cc25bbc39d

[20:15] <dalek> nqp/nativecall-jvm: 0d2e7b8 | (Arne Skjærholt)++ | src/vm/jvm/runtime/org/perl6/nqp/ (6 files):

[20:15] <dalek> nqp/nativecall-jvm: Stub the NativeCall and CPointer REPRs.

[20:15] <dalek> nqp/nativecall-jvm: review: https://github.com/perl6/nqp/commit/0d2e7b877f

[20:15] <dalek> nqp/nativecall-jvm: 279c94a | (Arne Skjærholt)++ | src/vm/jvm/ (2 files):

[20:15] <dalek> nqp/nativecall-jvm: Set correct argument signatures for native call ops.

[20:15] <dalek> nqp/nativecall-jvm: review: https://github.com/perl6/nqp/commit/279c94aec8

[20:15] <dalek> nqp/nativecall-jvm: 7e305ec | (Arne Skjærholt)++ | / (3 files):

[20:15] <dalek> nqp/nativecall-jvm: Add JNA to build and runtime JARs.

[20:15] <dalek> nqp/nativecall-jvm: review: https://github.com/perl6/nqp/commit/7e305ecacf

[20:15] <dalek> nqp/nativecall-jvm: 0e2ce95 | (Arne Skjærholt)++ | src/vm/jvm/runtime/org/perl6/nqp/ (2 files):

[20:15] <dalek> nqp/nativecall-jvm: First implementation of nqp::buildnativecall.

[20:15] <dalek> nqp/nativecall-jvm: review: https://github.com/perl6/nqp/commit/0e2ce95175

[20:16] *** SamuraiJack__ left
[20:16] <arnsholt> Current state of it all, for your entertainment

[20:17] *** xenoterracide joined
[20:19] *** konundra joined
[20:22] <masak> decision plan that formed today: I'm going to finish up p6cc2012 as soon as possible. and then I'm going to focus on Rakudo macros, and then on Perl 6 Nomic.

[20:22] <masak> that's bound to keep me occupied until New Year, at least.

[20:22] <arnsholt> Sounds like a decent chunk of work, yeah

[20:22] <masak> as part of that, I think I will publish a blog post named "Things I want to be able to do with Perl 6 macros".

[20:22] <jnthn> masak: Is that a decisoin or a plan to decide? :)

[20:22] <lizmat> p6cc2012?

[20:22] <arnsholt> Both macros and nomic are ambitious projects

[20:23] <masak> lizmat: https://github.com/masak/p6cc2012#readme

[20:23] <masak> lizmat: http://strangelyconsistent.org/blog/the-2012-perl-6-coding-contest

[20:24] <jnthn> .oO( but if you've nomic, how will we hear you? )

[20:24] <masak> arnsholt: well, I'm pretty far along with both, but it's a kind of 80%-80% thing, too.

[20:27] <tadzik> masak: hehe, which new year? :>

[20:28] <lue> hello world o/

[20:28] <lue> .oO(Perl 6 Nomic?)

[20:32] <masak> lue: oh, you've missed the plans for Perl 6 Nomic?

[20:33] <masak> lue: I already have the rules laid out somewhere, written in real Perl 6 code but without the event framework to support them.

[20:33] <lue> I googled it and apparently I clicked on a gist about it before. It's a vote-on-decisions thing, right?

[20:33] <masak> yep.

[20:33] <lue> (your gist btw. It's full of code.)

[20:33] <masak> :)

[20:34] <masak> the game is all about voting on ways to change the game. so the thing you're playing changes as you go.

[20:34] <masak> it was invented by a guy called Peter Suber, who is very into this self-modifying aspect of legal systems, an decided to codify it into a game.

[20:35] <lue> Are your plans for it to be an IRC bot game or a web game at a place like perl6.org/nomic ?

[20:36] <masak> a web game, but I don't plan to keep it anywhere nearly as official as on the perl6.org domain.

[20:36] <masak> it'll be a private little party among people crazy enough to participate.

[20:37] <jnthn> the-rules-converge-to-being-stragelyconsistent.org :P

[20:37] <diakopter> .oO( sounds like #perl6 )

[20:37] <jnthn> er, . somewhere :)

[20:38] <masak> diakopter: yes, I think there's great overlap there :)

[20:38] <masak> we're big on bootstrapping, too.

[20:38] <lue> jnthn: that's a waste of money. the-rules-converge-to-being.strangelyconsistent.org

[20:39] <lue> (assuming masak need not pay more for subdomains)

[20:39] <jnthn> lue: Yes, that's what I was aiming for :)

[20:40] <lue> .oO(of course, I would turn /all/ the - into ., because IIRC that's perfectly alright)

[20:41] <lue> .oO(and then put a secret easter egg at the.rules.diverge.to.being. ...)

[20:42] <moritz> r: role A { has $!a }; role B { has $!a }; class C does A does B { }

[20:42] <camelia> rakudo 0c8792: OUTPUT«===SORRY!===␤Attribute '$!a' conflicts in role composition␤»

[20:42] <lizmat> sometimes I wonder how difficult it would be to create a read-only "view" of one object in another class

[20:42] <lizmat> e.g. a Bag view of a Set

[20:42] <moritz> so attributes aren't role-private, but also not available in the class -- worst of both worlds :(

[20:42] <lizmat> so that you wouldn't have to copy a lot of things when doing smart matches

[20:42] <Mouq> r: \π = 5; say 2*π

[20:42] <camelia> rakudo 0c8792: OUTPUT«===SORRY!=== Error while compiling /tmp/oVs57nfEEm␤Preceding context expects a term, but found infix = instead␤at /tmp/oVs57nfEEm:1␤------> \π =⏏ 5; say 2*π␤»

[20:43] <FROGGS> r: my \π = 5; say 2*π

[20:43] <camelia> rakudo 0c8792: OUTPUT«10␤»

[20:43] <lizmat> moritz: jnthn is aware of the problem  :-)

[20:44] <moritz> right; would be surprising if not

[20:44] *** sftp left
[20:47] <jnthn> moritz: Worst of both worlds, but meant we could pick the better world later and not break anything :)

[20:47] <jnthn> It's pretty high on my todo list to fix this.

[20:49] <moritz> \o/

[20:49] *** EvanTeitelman left
[20:52] <pmurias> masak: in Perl 6 Nomic the rules will be written in Perl 6?

[20:53] <sorear> perl 6 nomic? o_O

[20:53] *** sftp joined
[20:53] <lue> pmurias: I don't know, my vote's leaning towards ELisp... :)

[20:54] <moritz> well, a *Perl 6* nomic sure would have the rules written in *Perl 6*, no? :-)

[20:55] *** ajr_ left
[20:56] <sorear> would a perl 6 nomic allow you to vote on syntax changes?

[21:00] <lizmat> hmmm…  [Coke]'s fudges on S06-advanced/callframe.t create an interesting problem

[21:00] <moritz> lemme guess -- it added a line

[21:00] <lizmat> yup

[21:00] <moritz> and then the line for callframe().line is wrong

[21:01] <moritz> which is why I added lots of empty lines when writing that test

[21:01] <lizmat> yes, but if I just change it, it will fail again if he removes the fudge

[21:01] <moritz> so that when you add a fudge, you can remove an empty linie

[21:01] <moritz> *line

[21:01] <moritz> now that's what comments are for :-)

[21:01] * lizmat reads them again

[21:01] <moritz>  this test file contains tests for line numbers, among other things

[21:01] <moritz> # so it's extremely important not to randomly insert or delete lines.

[21:02] <lizmat> thought I missed something like "so that when you add a fudge, you can remove an empty linie" in the comments

[21:02] <moritz> feel free to add that... without adding an extra line :-)

[21:02] * moritz -> sleep

[21:03] <lizmat> gnight moritz 

[21:05] *** EvanTeitelman joined
[21:08] <dalek> rakudo/nom: 1040c9c | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[21:08] <dalek> rakudo/nom: Fix more tests by removing code

[21:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1040c9c533

[21:08] <dalek> roast: 66ea61e | (Elizabeth Mattijsen)++ | S06-advanced/callframe.t:

[21:08] <dalek> roast: Chicken out on more elaborate changes

[21:08] <dalek> roast: review: https://github.com/perl6/roast/commit/66ea61e3ee

[21:08] <dalek> roast: 198a351 | (Elizabeth Mattijsen)++ | S0 (3 files):

[21:08] <dalek> roast: More test unfudges by reduction

[21:08] <dalek> roast: review: https://github.com/perl6/roast/commit/198a351e7d

[21:17] * lizmat is tired and calls it a day

[21:17] <lizmat> gnight #perl6!

[21:18] <sorear> night lizmat

[21:23] <masak> 'night, lizmat

[21:25] <pmurias> sorear: re vote on syntax changes? isn't the whole point of a Perl 6 nomic to change the rules of the Nomic grammar? ;)

[21:29] *** Bzek joined
[21:36] *** nebuchadnezzar left
[21:37] <masak> not sure there's a grammar involved.

[21:37] <masak> there's source code, yes. but in its current form, it simply describes a bunch of observers on a POE-like event system.

[21:38] *** dmol left
[21:39] <lue> .oO(If I had participated in p6cc2012, I know for sure I would've spent an inordinate amount of time after solving t4 on a script to create a .blend file animating the world for you.)

[21:41] <masak> :)

[21:41] <masak> well, the only thing the task asks for is the steady state.

[21:42] <pmurias> masak: so the emphasis will be on actually playing Nomic or writing crafty Perl 6 code?

[21:43] <masak> pmurias: depends on what kind of player you are. but in some sense, the Perl 6 is the means and Nomic is the end.

[21:44] <[Coke]> lizmat: sorry - my bad, I was in superfudge mode.

[21:47] *** Rotwang left
[21:48] <lue> masak: I kinda hope you make a tradition out of t4 being some sort of generally interesting problem. "Strategies for a stone-pair game?" "Rain in a cube world?" "Hexslide‽"

[21:50] <pmurias> masak: have you played offline Nomic much? is the game actually fun?

[21:51] *** abnorman left
[21:52] *** abnorman joined
[21:54] *** spider-mario left
[21:54] <masak> lue: oh, you noticed. :)

[21:54] <masak> pmurias: yes, I have, quite a bit. it has its charm. definitely depends on the people, though.

[21:55] <masak> pmurias: it's kind of hard to play because it's so free-form.

[21:56] <jnthn> 'night #perl6

[21:57] <lue> .oO(Especially the kind of t4 problem that vexes you for years now and causes you to do things like write up LaTeX-paper-appropriate blog posts about figuring out the number of solvable configurations at this moment.)

[21:57] <lue> ♞ jnthn o/

[21:57] *** agre left
[22:00] *** arlinius left
[22:02] *** [Coke]_ joined
[22:02] *** masak_ joined
[22:02] *** nine joined
[22:03] *** denis_boyun left
[22:05] *** yeltzooo6 joined
[22:06] *** Some-body_ joined
[22:06] *** xorpp joined
[22:07] *** daniel-s_ left
[22:07] *** cibs left
[22:07] *** EvanTeitelman left
[22:07] *** FROGGS left
[22:07] *** avuserow left
[22:07] *** ivan`` left
[22:07] *** moritz left
[22:07] *** c1sung left
[22:07] *** go|dfish left
[22:07] *** sjohnson left
[22:07] *** xinming left
[22:07] *** REPLeffect left
[22:07] *** Vlavv left
[22:07] *** slavik left
[22:07] *** bruges left
[22:07] *** GlitchMr left
[22:07] *** TimToady left
[22:07] *** odoacre left
[22:07] *** alexghacker left
[22:07] *** takesako left
[22:07] *** benabik left
[22:07] *** bakedb left
[22:07] *** PacoAir left
[22:07] *** kivutar left
[22:07] *** jercos left
[22:07] *** pecastro left
[22:07] *** mtk left
[22:07] *** salv0 left
[22:07] *** PZt left
[22:07] *** Celelibi left
[22:07] *** sunnavy left
[22:07] *** tokuhirom joined
[22:07] *** Some-body_ is now known as DarthGandalf

[22:10] *** daniel-s_ joined
[22:11] *** sitaktif joined
[22:12] *** cibs joined
[22:18] *** sunnavy joined
[22:18] *** BooK joined
[22:18] *** groky joined
[22:18] *** crazedpsyc joined
[22:18] *** ivan`` joined
[22:18] *** krunen_ joined
[22:18] *** EvanTeitelman joined
[22:18] *** FROGGS joined
[22:18] *** avuserow joined
[22:18] *** p5eval joined
[22:18] *** jnthn joined
[22:18] *** moritz joined
[22:18] *** c1sung joined
[22:19] *** benabik joined
[22:19] *** bakedb joined
[22:19] *** kivutar joined
[22:19] *** jercos joined
[22:19] *** pecastro joined
[22:19] *** mtk joined
[22:19] *** salv0 joined
[22:19] *** PZt joined
[22:19] *** Celelibi joined
[22:19] *** felher joined
[22:19] *** Yappo__________ joined
[22:19] *** pjcj joined
[22:19] *** avar joined
[22:19] *** Hor|zon joined
[22:19] *** jtpalmer joined
[22:19] *** mls joined
[22:19] *** _ilbot joined
[22:19] *** go|dfish joined
[22:19] *** sjohnson joined
[22:19] *** xinming joined
[22:19] *** REPLeffect joined
[22:19] *** Vlavv joined
[22:19] *** slavik joined
[22:19] *** bruges joined
[22:19] *** GlitchMr joined
[22:19] *** TimToady joined
[22:19] *** odoacre joined
[22:19] *** awwaiid joined
[22:19] *** BabsSeed joined
[22:19] *** takesako joined
[22:19] *** alexghacker joined
[22:19] *** ribasushi joined
[22:19] *** sergot joined
[22:19] *** nwc10 joined
[22:19] *** lestrrat joined
[22:19] *** rom1504 joined
[22:19] *** go|dfish left
[22:20] *** go|dfish joined
[22:21] *** masak_ is now known as masak

[22:22] *** nebuchadnezzar joined
[22:29] *** nebuchadnezzar left
[22:36] *** BenGoldberg left
[22:39] *** FROGGS left
[22:44] *** fridim_ joined
[22:53] *** Gothmog_ joined
[22:56] *** abnorman left
[22:57] *** abnorman joined
[23:08] *** arlinius joined
[23:20] *** pmurias left
[23:27] *** pupoque left
[23:29] *** raiph joined
[23:44] *** BenGoldberg joined
[23:54] *** pernatiy left
