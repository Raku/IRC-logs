[00:01] *** frdmn joined
[00:06] *** berekuk left
[00:10] *** berekuk joined
[00:11] *** raiph left
[00:12] *** berekuk left
[00:17] <TimToady> n: 1 for $*VM

[00:17] <camelia> niecza v24-88-g1f87209: OUTPUT«Potential difficulties:␤  'for $*VM' will never flatten a $ variable;␤   to force list interpolation, please use either 'for @$*VM' or 'for $*VM[]';␤    if you just want item topicalization, use 'given $*VM' instead at /tmp/KfYfzhH5ZL line 1:␤------> 1 for…

[00:19] *** raiph joined
[00:25] *** raiph left
[00:31] *** dayangkun left
[00:32] *** dayangkun joined
[00:51] *** dayangkun left
[01:03] *** huf joined
[01:20] *** btyler joined
[01:34] <colomon> hmmm

[01:42] *** FROGGS_ joined
[01:44] *** Khisanth left
[01:46] *** FROGGS left
[01:48] *** skids joined
[01:50] <colomon> BreakDancer module depends on Shell::Command, which is not in the ecosystem?

[01:56] *** benabik joined
[01:57] <timotimo> it's in "File::Utils" or what's it called

[01:58] <timotimo> curiously, you should have that when you've installed panda. did you skip that?

[02:01] *** Ben_Goldberg joined
[02:02] *** BenGoldberg left
[02:03] <labster> Dear tadzik, can you please split up File::Tools to people stop getting confused?  Thanks, labster <3

[02:04] <colomon> timotimo: BreakDancer specifies Shell::Command as a prereq.  Panda will not install it for that reason.

[02:09] <timotimo> oh, whoops

[02:09] <timotimo> how did that ever work ;)

[02:10] <colomon> it never has

[02:10] <colomon> BreakDancer was only added to the repo in the last two weeks

[02:23] *** patspam left
[02:23] *** patspam joined
[02:33] *** benabik left
[02:39] *** benabik joined
[03:18] *** BenGoldberg joined
[03:19] *** Ben_Goldberg left
[03:23] *** jaldhar joined
[03:24] <sorear> good * #perl6

[03:40] *** jaldhar left
[03:40] <benabik> https://github.com/mame/quine-relay  The most complex quine I've seen.  Does use P5, but seems easily extendable to use P6 too.

[03:42] *** jaldhar joined
[03:45] *** colomon left
[03:47] <lue> benabik: I suggest placing the P6 spoke between LLVM asm and Java or C and C++ (or some other odd location) :P

[03:47] <benabik> lue: Bah.  It's in alphabetical order now, why mess with that?

[03:48] <lue> oh, is that what was going on there? I suggest messing with it because P5->P6 is *so* cliché :)

[03:51] <benabik> Although I would say that the one thing that seems to be missing from the auto-generation is converting the SVG to the text template for the quine.  :-D

[03:59] *** btyler left
[04:01] *** abnorman left
[04:04] <lue> the only problem with it is the sheer number of compilers I need that I'll never use again :) .

[04:12] *** BenGoldberg left
[04:17] *** raiph joined
[04:17] *** ggoebel2 joined
[04:19] *** ggoebel left
[04:21] *** fridim_ joined
[04:29] *** Psyche^ joined
[04:32] *** Psyche^_ left
[04:46] *** crab2313 joined
[04:48] *** birdwindupbird joined
[05:00] *** lue left
[05:01] *** kaleem joined
[05:30] *** kaleem left
[05:44] *** s1n left
[05:44] *** abnorman joined
[05:52] *** cognominal left
[05:59] *** raiph left
[06:03] *** PacoAir joined
[06:04] *** raiph joined
[06:05] *** SamuraiJack_ joined
[06:08] <JimmyZ> gOOd afternOOn, #perl6

[06:08] *** PacoAir left
[06:15] *** konundra left
[06:21] <sorear> o/, JimmyZ

[06:21] <sorear> Or shOuld that be O/?

[06:28] <labster> don't get a big head, sorear

[06:32] <JimmyZ> :D

[06:36] *** FROGGS_ left
[06:37] *** cibs joined
[06:39] <benabik> labster++

[06:43] *** Exodist joined
[06:48] *** FROGGS_ joined
[06:51] *** FROGGS_ is now known as FROGGS

[06:53] *** cognominal joined
[06:55] *** kaleem joined
[07:00] *** brrt joined
[07:03] <TimToady> \OO/  <-- 双大头

[07:05] <sorear> .tr 双大头

[07:05] <yoleaux> Double stud (zh-CN → en)

[07:05] <TimToady> or 'double big head' :)

[07:06] <sorear> fun with translators

[07:09] *** domidumont joined
[07:12] <rom1504> .tr manger

[07:12] <yoleaux> eat (fr → en)

[07:12] <rom1504> fun

[07:13] <rom1504> is it using google translator ?

[07:14] <rom1504> .tr 今天是星期二

[07:14] <yoleaux> Today is Tuesday (zh-CN → en)

[07:14] <rom1504> yoleaux: help

[07:15] <rom1504> !help

[07:15] <rom1504> .help

[07:15] <yoleaux> rom1504: I'm yoleaux. Type .commands to see what I can do, or see http://dpk.io/yoleaux for a quick guide.

[07:15] <sorear> rom1504: almost certainly

[07:15] <benabik> .commands tr

[07:15] <yoleaux> There's no category called tr.

[07:15] <benabik> .help tr

[07:15] <yoleaux> Translate some text between languages

[07:16] <sorear> .tr :no :sv postoppkrav

[07:16] <yoleaux> TORSK (no → sv)

[07:16] <benabik> Unhelpfully unspecific.

[07:19] <TimToady> .tr :ja :de はい、今日は火曜日です。

[07:19] <yoleaux> Ja, das ist heute Mittwoch. (ja → de)

[07:19] <TimToady> er...that's wrong

[07:20] <TimToady> .tr :ja :de はい、今日は水曜日です。

[07:20] <yoleaux> Ja, das ist Heute Mittwoch . (ja → de)

[07:20] <sorear> waa

[07:20] <benabik> Machine translation getting something wrong?  Heaven forbid.

[07:20] <rom1504> .commands

[07:20] <yoleaux> Commands are divided into categories: general, services, admin, api, demos. Use .commands <category> to get a list of the commands in each.

[07:20] <rom1504> .commands general

[07:20] <yoleaux> Commands in general: ask, at, botsnack, buck, bytes, choose, in, msg, on, pick, ping, seen, supercombiner, t, tell, to, tz. Use .help to get information about them.

[07:21] <sorear> benabik: usually it's not quite so brazen as translating Tuesday into Wednesday

[07:21] <rom1504> .commands services

[07:21] <yoleaux> Commands in services: acronym, add-command, beats, bible, btc, command-help, del-command, dety, distance, flip, geo, imdb, lastfm, leo, mc, meow, moon, ngrams, nokiageo, o, oed, oed-new, py3, rb, republical, rot13, sailingby, scm, shipping, suggest, swhack, tex, thesaurus, tw, twho, twit, twitter, twop, ud, unixtime, weather, yi. Use .help to get information about them.

[07:21] <benabik> sorear: But only usually.

[07:21] <rom1504> .commands api

[07:21] <yoleaux> Commands in api: c, chars, d, decode, ety, follows, g, gc, gcs, head, i-love-the-w3c, ietf, img, mangle, news, npl, py, rfc, title, tr, u, val, w, wa, wik. Use .help to get information about them.

[07:21] <rom1504> .help tr

[07:21] <yoleaux> Translate some text between languages

[07:21] <benabik> rom1504: yoleaux will respond to privmsgs.

[07:21] <rom1504> yeah I'm done anyway

[07:21] <TimToady> rom1504: you could do this in a private chat

[07:22] <rom1504> the help is kinda unhelpful

[07:22] <sorear> (see postoppkrav/TORSK)

[07:22] <TimToady> oh, benabik++ already said that

[07:22] *** Khisanth joined
[07:22] <TimToady> .tr :ja :en はい、今日は火曜日です。

[07:22] <yoleaux> Yes, Today is Tuesday. (ja → en)

[07:23] <TimToady> .tr :en :de Yes, today is Tuesday.

[07:23] <yoleaux> Ja, heute ist Mittwoch. (en → de)

[07:23] <TimToady> ooh

[07:23] <TimToady> well, a third of the time it's right...

[07:24] <sorear> .tr :de :en Mittwoch

[07:24] <yoleaux> Wednesday (de → en)

[07:24] <tadzik> labster: yes, I should. I even put it on TODO somewhere, and was thinking about it last weekend. But then, suddenly, "bah, everyone got used to it anyway". Not good enough reason, I agree :)

[07:24] <TimToady> well, a third of my Tuesday it'll be right...

[07:24] <sorear> notsomuch for .uk tuesdays...

[07:24] <sorear> or .za

[07:24] <tadzik> .tr :en de Yes, this is Sparta.

[07:24] <yoleaux> de Yes, this is Sparta. (en → en)

[07:24] <tadzik> .tr :en :de Yes, this is Sparta.

[07:24] <yoleaux> Ja, das ist Sparta . (en → de)

[07:25] <rom1504> .tr :en :zh tuesday

[07:25] <yoleaux> 星期二 (en → zh)

[07:25] <rom1504> .tr :en :fr tuesday

[07:25] <yoleaux> mardi (en → fr)

[07:28] <TimToady> .tr :fr :de C'est mardi gras.

[07:28] <yoleaux> Es ist Karneval . (fr → de)

[07:28] <TimToady> .tr :fr :de C'est mardi.

[07:28] <yoleaux> Es ist Dienstag . (fr → de)

[07:29] <sorear> .tr :en :de Tuesday

[07:29] <yoleaux> dienstag (en → de)

[07:29] <sorear> .tr :en :de wednesday

[07:29] <yoleaux> Mittwoch (en → de)

[07:29] <sorear> .tr :en :de Wednesday

[07:29] <yoleaux> Mittwoch (en → de)

[07:29] *** domidumont left
[07:29] <benabik> .tr :fr :en gras

[07:29] <yoleaux> fat (fr → en)

[07:29] <benabik> .tr :de KArneval

[07:29] <yoleaux> Carnival (de → en)

[07:30] *** domidumont joined
[07:30] <TimToady> .tr :en :fr We're going to the Mardi Gras festival!

[07:30] <yoleaux> Nous allons le festival de Mardi Gras ! (en → fr)

[07:31] <TimToady> .tr :en :fr We're going to the Fat Tuesday festival!

[07:31] <yoleaux> Nous allons à la fête mardi gras! (en → fr)

[07:31] <FROGGS> O.o

[07:32] <TimToady> .tr :en :fr We're going to the Ash Wednesday service!

[07:32] <yoleaux> Nous allons le service de mercredi de cendre ! (en → fr)

[07:34] <TimToady> .tr :p5 :p6 for (@ARGV) { say }

[07:34] <yoleaux> for (@ARGV) { say } (en → p6)

[07:34] <TimToady> aww

[07:34] <moritz> :/

[07:34] * benabik should get an internship at Google to add that feature.  ;-)

[07:35] <moritz> s/internship/full-time employment/

[07:35] <TimToady> 4/5-time employment :)

[07:36] <TimToady> s['4/5'] = '⅘'

[07:37] * benabik doubts he can finish a degree on 20% time.

[07:37] <TimToady> ooh, how does ↉ get so lucky?  nobody else gets a 0 numerator

[07:38] <benabik> Although it would be easier to raise a kid with 4/5s of Google pay instead of 5/5s of a stipend.

[07:38] <moritz> benabik: I'm sure it would

[07:38] <TimToady> I guess I'm on ↉ time at the moment...

[07:50] <moritz> my terminal simply doesn't display that character

[07:50] <moritz> and neither a replacement character

[07:50] <moritz> good that the browser displays it

[07:51] <tadzik> Google Pay, sounds like a better version of Google Play

[07:51] <tadzik> or worse, depending on who's paying ;)

[07:53] <benabik> Given their current income, it seems they get paid a bit more than they pay.

[07:56] *** abnorman left
[08:01] *** fhelmberger joined
[08:01] * TimToady --> zzz while it's still Monday in Hilo HI

[08:15] *** [particle]1 joined
[08:16] *** [particle] left
[08:22] *** eiro left
[08:22] *** eiro joined
[08:22] *** domidumont left
[08:32] *** sorear joined
[08:37] *** Americangaygoats joined
[08:37] <Americangaygoats> Bitch american gays visit here http://www.ndtv.com/article/world/three-christian-women-allegedly-paraded-naked-in-pakistan-court-orders-probe-391647 you will be fucked naked am an indian we will join pakistan will fuck you down stop spying  planet

[08:37] *** Americangaygoats left
[08:37] <bonsaikitten> ... wat

[08:37] *** raiph left
[08:38] <benabik> Why do people bomb *IRC* with this stuff?  Do people who care about that really show up here?

[08:39] <moritz> benabik: it shows up in the logs :(

[08:39] <bonsaikitten> I guess it's like peeing on other people's doors

[08:40] <benabik> moritz: I'm sorry.

[08:40] *** dakkar joined
[08:41] <moritz> benabik: the links from the spammers, not your statements :-)

[08:41] <moritz> [X] removed

[08:41] <benabik> moritz: :-P

[08:41] <benabik> :-)

[08:42] <nwc10> minitrue++

[08:42] <benabik> .k minitrue

[08:44] <benabik> karma minitrue

[08:44] <benabik> Do we not have a karmabot?

[08:46] <moritz> no

[08:46] *** berekuk joined
[08:46] *** domidumont joined
[08:47] <benabik> sadface  u.u

[08:47] *** berekuk left
[08:49] *** berekuk joined
[08:50] *** crab2313 left
[09:12] *** iSlug joined
[09:25] <jnthn> morning, #perl6

[09:25] <mathw> morning jnthn

[09:26] <JimmyZ> morning, jnthn

[09:26] <FROGGS> hi jnthn, hi mathw 

[09:27] <mathw> lo

[09:27] <mathw> someone asked me today how many programming languages I've ever written anything in at all

[09:27] <mathw> I'm up to 36 :/

[09:27] <jnthn> wow :)

[09:27] <mathw> well largely because there was no requirement laid on whether it had to be something useful or complete

[09:27] <mathw> he said "a line of code"

[09:28] <mathw> oooh

[09:28] <mathw> 37!

[09:28] *** raiph joined
[09:28] <mathw> how could I forget M5?

[09:28] <mathw> oh yes, that's because I was trying to forget about it. Sigh.

[09:28] <FROGGS> I hate M$ so much! I had to register for a evaluation license, and I had to answer in which programming languages I am interested in. they didnt list Perl but they list XML >.<

[09:29] <mathw> I'm going to assume the marketing department came up with that one

[09:29] <mathw> lots of people seem to think HTML and XML are programming languages

[09:30] <FROGGS> yeah :/

[09:30] <mathw> although I remember when I first discovered HTML it wasn't a programming language, it was pure magic. I can put these things in a text file and it'll render big text and colours and things! WOW!

[09:30] <FROGGS> hehe

[09:31] <mathw> I always thought Mosaic must be an amazing bit of software, took me years to get to the point where I could conceive of being able to write such a thing myself. Admittedly I was about 8 at the time.

[09:31] <FROGGS> I did some AmigaGuide before so I was kinda used to it :o)

[09:33] *** Util left
[09:33] *** Util joined
[09:34] <FROGGS> .tr :de :en Vielen Dank für die Registrierung Visual C++ 2010 Express. Bitte kopieren Sie und fügen Sie die-Taste unter in das Registrierungsfenster:

[09:34] <yoleaux> Thank you for registering Visual C + + 2010 Express . Please copy and paste the key into the registration window below : (de → en)

[09:34] <FROGGS> ahh, now it makes sense *g*

[09:35] <mathw> the translation's even right

[09:35] <jnthn> Yes, but was the input? ;-)

[09:35] <FROGGS> the german text says: Please copy the button underneath into the registration window

[09:41] *** Stygia joined
[09:49] *** broquaint joined
[09:55] *** segomos joined
[09:56] *** ugexe joined
[10:01] *** brrt left
[10:03] *** colomon joined
[10:05] *** daxim joined
[10:06] *** Stygia left
[10:10] *** genehack joined
[10:16] *** mtk left
[10:21] <jnthn> Hm, seems I'm going to Oslo late August.

[10:21] * jnthn wonders if he'll get chance to see any Oslo.pm :)

[10:21] *** mtk joined
[10:22] <arnsholt> Oh, cool. Beers must be had

[10:22] <tadzik> in my experience, Oslo.pm is good at organising meetings just for a reason of an outsider being in Oslo :)

[10:22] <tadzik> which is awesome

[10:24] <mathw> that is awesome

[10:24] <jnthn> Well, I'm teaching on 26/27.

[10:25] <arnsholt> So plenty of beers monday evening, then? O=)

[10:25] <jnthn> Well, I'd rather not do plenty of bears when teaching

[10:25] <jnthn> uh, beers

[10:25] <diakopter>  /o\

[10:25] <arnsholt> Just kidding. More seriously, have you been to Schou's?

[10:25] <jnthn> I guess bears are a possibility further north in Norway :P

[10:26] <apejens> polar bears at least :P

[10:26] <jnthn> arnsholt: Not sure I have...

[10:26] <jnthn> Well, I could easily go home on the 28th, and meet up on the evening of the 27th.

[10:26] <jnthn> Then I only have to worry about waking up for my flight :)

[10:27] <arnsholt> Sounds good

[10:27] * jnthn figures he can't quite be bothered to do the train...

[10:27] <arnsholt> Schou's is a neat microbrewery, in a cellar in an old brewery complex even

[10:28] <jnthn> Yeah, trouble is I've been to various places in Oslo but forget their names ;)

[10:28] <arnsholt> Yeah, that's pretty easy

[10:29] *** domidumont left
[10:29] <tadzik> ooh, that sounds familiar

[10:30] <jnthn> tadzik: Yes, it does, though maybe there are more than one place with that description ;)

[10:30] <tadzik> heh

[10:30] <tadzik> indeed

[10:30] *** domidumont joined
[10:33] *** sqirrel joined
[10:34] *** colomon left
[10:36] <jnthn> OK, sent booking request so I get to be in Oslo on 27th evening. \o/

[10:38] <arnsholt> Spiffy!

[10:38] <arnsholt> I think there's only one microbrewery like that, actually =)

[10:39] <jnthn> ah, then I may well have been there, and it was an experience that should be repeated ;)

[10:41] <arnsholt> They make nice beers, so if you hadn't been it was time to rectify that. But repeat visits are always good too

[10:47] <jnthn> :)

[10:50] <jnthn> shopping, bbiab

[10:50] *** Ayiko left
[10:51] *** Ayiko joined
[10:52] *** Grrrr left
[10:52] *** Grrrr joined
[10:54] *** _ilbot left
[10:55] *** dalek left
[10:56] *** dalek joined
[10:56] *** ChanServ sets mode: +v dalek

[10:57] *** brrt joined
[10:59] *** _ilbot joined
[11:07] *** kubrat joined
[11:09] *** kubrat left
[11:11] <sjn> jnthn: cool!

[11:11] <sjn> beers must be had indeed.

[11:11] <sjn> there are even a couple more brewpubs in Oslo since the last time you were in town :)

[11:34] <jnthn> \o/

[11:37] *** colomon joined
[11:56] *** colomon_ joined
[11:57] *** birdwindupbird left
[11:57] *** colomon left
[11:57] *** colomon_ is now known as colomon

[11:57] *** birdwindupbird joined
[11:58] *** domidumont left
[12:00] *** skids left
[12:04] *** rindolf joined
[12:05] *** colomon left
[12:07] *** berekuk left
[12:10] *** telex left
[12:11] *** domidumont joined
[12:12] *** colomon joined
[12:12] *** telex joined
[12:14] *** domidumont left
[12:15] *** domidumont joined
[12:26] *** ztt joined
[12:26] *** sqirrel left
[12:28] *** konundra joined
[12:35] *** berekuk joined
[12:35] *** sqirrel joined
[12:41] *** domidumont1 joined
[12:43] *** domidumont left
[12:50] *** fridim_ left
[12:52] *** PacoAir joined
[12:52] *** colomon left
[12:57] * [Coke] yawns.

[12:57] *** ztt left
[13:05] *** ajr joined
[13:06] *** ajr is now known as Guest61885

[13:06] *** colomon joined
[13:06] *** Guest61885 is now known as ajr_

[13:11] <FROGGS> somebody seen that? Error: configure generated lib\Parrot\Pmc2c\PCCMETHOD_BITS.pm missing in MANIFEST.generated.

[13:11] <FROGGS> but MANIFEST.generated has line: lib/Parrot/Pmc2c/PCCMETHOD_BITS.pm               [devel]lib

[13:11] <FROGGS> and the file is there too

[13:12] <FROGGS> will debug now the tools/dev/install_files.pl script

[13:17] *** konundra left
[13:21] <timotimo> r: &textfrom := &substr.assuming :str($text):len(Inf);

[13:21] <camelia> rakudo 4ad1b8: OUTPUT«===SORRY!===␤Variable '$text' is not declared␤at /tmp/1NDcW_gKsP:1␤------> &textfrom := &substr.assuming :str($text⏏):len(Inf);␤    expecting any of:␤        postfix␤»

[13:21] <timotimo> r: my $text = "hello. how are you?"; &textfrom := &substr.assuming :str($text):len(Inf); say textfrom(5);

[13:21] <camelia> rakudo 4ad1b8: OUTPUT«===SORRY!===␤Cannot use bind operator with this left-hand side␤at /tmp/D0d3xBFhj_:1␤------> := &substr.assuming :str($text):len(Inf)⏏; say textfrom(5);␤    expecting any of:␤        postfix␤        statement end␤        statemen…

[13:21] <timotimo> r: my $text = "hello. how are you?"; my &textfrom := &substr.assuming :str($text):len(Inf); say textfrom(5);

[13:21] <camelia> rakudo 4ad1b8: OUTPUT«Not enough positional parameters passed; got 1 but expected between 2 and 3␤  in sub substr at src/gen/CORE.setting:2846␤  in sub CURRIED at src/gen/CORE.setting:2363␤  in block  at /tmp/buLzhIBOcf:1␤␤»

[13:22] * timotimo doesn't like non-copypastable examples in the synopses

[13:23] <timotimo> that synatx is new to me, though. having adverbial pairs chained like that for a function/method call

[13:23] <timotimo> r: say :foo(1):bar(2):quux(3)

[13:23] <camelia> rakudo 4ad1b8: OUTPUT«␤»

[13:23] <timotimo> r: say "hi", :foo(1):bar(2):quux(3)

[13:23] <camelia> rakudo 4ad1b8: OUTPUT«hi␤»

[13:23] <timotimo> mhm.

[13:23] <timotimo> r: say (:foo(1):bar(2):quux(3))

[13:23] <camelia> rakudo 4ad1b8: OUTPUT«"foo" => 1␤»

[13:24] <timotimo> oh?

[13:24] <moritz> r: say (:foo(1):bar(2):quux(3)).perl

[13:24] <camelia> rakudo 4ad1b8: OUTPUT«"foo" => 1␤»

[13:25] <moritz> it seems to parse the rest as operator adverbs, which are then ignored. Or something.

[13:25] <timotimo> could be

[13:25] <timotimo> time for someone to do masaks job :P

[13:29] <colomon> n: say (:foo(1):bar(2):quux(3)).perl

[13:29] <camelia> niecza v24-88-g1f87209: OUTPUT«===SORRY!===␤␤Multi colonpair syntax not yet understood at /tmp/PCgBDvzg81 line 1:␤------> say (:foo(1):bar(2):quux(3)⏏).perl␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 …

[13:32] *** skids joined
[13:32] *** bluescreen10 joined
[13:34] <FROGGS> r: my $text = "abc"; my &textfrom := &substr.assuming :str($text):len(Inf); # timotimo

[13:34] <camelia> rakudo 4ad1b8:  ( no output )

[13:35] *** konundra joined
[13:36] <timotimo> aaw, assuming won't take * arguments yet? :(

[13:38] *** pmurias joined
[13:39] <timotimo> r: sub line-equation($m, $x, $c) { $m * $x + $c }; my &shallow := &line-equation.assuming(0.5, *, -1); say shallow(1);

[13:39] <camelia> rakudo 4ad1b8: OUTPUT«Too many positional parameters passed; got 4 but expected 3␤  in sub line-equation at /tmp/D8HlrXM7Xv:1␤  in sub CURRIED at src/gen/CORE.setting:2363␤  in block  at /tmp/D8HlrXM7Xv:1␤␤»

[13:39] <timotimo> r: sub line-equation($m, $x, $c) { $m * $x + $c }; my &shallow := &line-equation.assuming(0.5, *, -1); say shallow();

[13:39] <camelia> rakudo 4ad1b8: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \v: Mu *%_)␤  in method Numeric at src/gen/CORE.setting:887␤  in sub infix:<*> at src/gen/CORE.setting:3286␤  in sub infix:<*> at src/gen/CORE.setting:3284␤  in sub line-equation at /tmp/ZJGOHePCtB:1␤  i…

[13:39] <timotimo> :(

[13:41] *** REPLeffect left
[13:45] <timotimo> does temporary wrapping work yet?

[13:45] <timotimo> r: { temp &say.wrap({ say "wrapped!"; callsame }); say "test 1"; } say "test 2!";

[13:45] <camelia> rakudo 4ad1b8: OUTPUT«===SORRY!===␤Two terms in a row␤at /tmp/tJCsHeic4N:1␤------> wrapped!"; callsame }); say "test 1"; } ⏏say "test 2!";␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        statement modifi…

[13:45] <timotimo> r: { temp &say.wrap({ say "wrapped!"; callsame }); say "test 1" }; say "test 2!"

[13:45] <camelia> rakudo 4ad1b8: OUTPUT«Can only use 'temp' on a container␤  in sub prefix:<temp> at src/gen/CORE.setting:14246␤  in block  at /tmp/PrSlOfkI5Z:1␤␤»

[13:45] <timotimo> ah, NYI special-case

[13:46] <timotimo> interesting decision.

[13:53] <timotimo> huh, shouldn't unspace work here?

[13:54] <timotimo> r: sub line-equation(:$m, :$x, :$c) { $m * $x + $c }; my &steep   := &line-equation.assuming(m => 2,  c => -4); say steep\ (x => 1), steep\ (x => 2);

[13:54] <camelia> rakudo 4ad1b8: OUTPUT«use of uninitialized value of type Any in numeric context  in sub line-equation at /tmp/7er_GxZVHT:1␤␤No such method 'postcircumfix:<( )>' for invocant of type 'Int'␤  in block  at /tmp/7er_GxZVHT:1␤␤»

[13:54] <timotimo> r: sub line-equation(:$m, :$x, :$c) { $m * $x + $c }; my &steep   := &line-equation.assuming(m => 2,  c => -4); say steep(x => 1), steep(x => 2);

[13:54] <camelia> rakudo 4ad1b8: OUTPUT«-20␤»

[13:54] <timotimo> sadface

[13:57] <colomon> why the sad face?

[13:57] <colomon> -2 and 0 are the correct answers

[13:59] *** sqirrel left
[14:00] <PerlJam> because his homework is wrong!  ;)

[14:00] <timotimo> the sad face comes from "use of uninitialized value of type Any in numeric context" with the same code except an unspace before the invocation

[14:03] <timotimo> so, what cool "higher order function" stuff does perl6 offer besides "assuming", "autocurrying" and "wrapping"? (i'm not counting blocks, anonymous subs/methods here, because they are the most basic higher order function thing you can find)

[14:03] <timotimo> maybe i should say something about &?ROUTINE and &?BLOCK, those are pretty nifty.

[14:05] *** kaleem left
[14:05] <timotimo> aaw, come on! &?BLOCK is NYI? :(

[14:08] *** btyler joined
[14:13] <timotimo> i wonder what the simplest and best-looking way is to put a "only take the first 10 elements from the rest of the feed pipeline"

[14:14] <timotimo> r: (1...100) ==> -> *@_ { @_[^10] } ==> map(* ** 2) ==> my @result; say @result[^5];

[14:14] <camelia> rakudo 4ad1b8: OUTPUT«===SORRY!===␤Sorry, do not know how to handle this case of a feed operator yet.␤at /tmp/nwWZ47Eu68:1␤------> @_[^10] } ==> map(* ** 2) ==> my @result⏏; say @result[^5];␤    expecting any of:␤        scoped declarator␤        con…

[14:14] <timotimo> ... oh?

[14:14] <timotimo> r: (1...100) ==> (-> *@_ { @_[^10] }) ==> map(* ** 2) ==> my @result; say @result[^5];

[14:14] <camelia> rakudo 4ad1b8: OUTPUT«===SORRY!===␤Sorry, do not know how to handle this case of a feed operator yet.␤at /tmp/txhXMihMZe:1␤------> _[^10] }) ==> map(* ** 2) ==> my @result⏏; say @result[^5];␤    expecting any of:␤        scoped declarator␤        con…

[14:15] <timotimo> r: sub filter-n($n, *@vals) { return @vals[^$n] }; (1...100) ==> filter(10) ==> my @res; say @res;

[14:15] <camelia> rakudo 4ad1b8: OUTPUT«===SORRY!===␤Undeclared routine:␤    filter used at line 1. Did you mean '&filter-n'?␤␤»

[14:16] <timotimo> r: sub filter-n($n, *@vals) { return @vals[^$n] }; (1...100) ==> filter-n(10) ==> my @res; say @res;

[14:16] <camelia> rakudo 4ad1b8: OUTPUT«1 2 3 4 5 6 7 8 9 10␤»

[14:16] <timotimo> that's pretty simple

[14:25] <colomon> r: (1...100) ==> .[^10]  ==> map(* ** 2) ==> my @result; say 

[14:25] <camelia> rakudo 4ad1b8: OUTPUT«===SORRY!===␤Sorry, do not know how to handle this case of a feed operator yet.␤at /tmp/NBvy4UiJRO:1␤------> > .[^10]  ==> map(* ** 2) ==> my @result⏏; say␤    expecting any of:␤        scoped declarator␤        constraint␤     …

[14:30] <PerlJam> colomon: I always expect feed ops to do something like that too.

[14:31] <colomon> PerlJam: yeah, I'm very nearly completely ignorant about feed operators, and it seemed reasonable...

[14:31] *** domidumont joined
[14:31] <PerlJam> I also find myself expecting an implicit map too

[14:33] <colomon> do we have a "jvm wish list" for the release this week?

[14:34] *** domidumont1 left
[14:34] <colomon> not that I really have any time to work on it, mind you

[14:37] * colomon just told his wife "agh, having to switch back to programming in C++ is painful after working in Perl 6."

[14:37] <[Coke]> There's still plenty left to do. Buf & encode are some big ones.

[14:39] <jnthn> Also LEAVE.

[14:39] <colomon> [Coke]: yes, I know there's plenty to do. 

[14:39] <jnthn> Whihc is why temp/let/KEEP/UNDO don't yet work.

[14:39] <tadzik> colomon: yes yes

[14:40] <colomon> yes yes what?

[14:40] <tadzik> running 'perl6' script from outside the jvm directory

[14:40] <tadzik> it's arguably a big thing

[14:40] <jnthn> Yes, "make install"...

[14:41] <jnthn> I can give some tuits to Rakudo JVM tomorrow. Anybody got a feeling on what's highest priority?

[14:41] <colomon> so make install, LEAVE, Buf

[14:41] <jnthn> I can spend some time on it this evenign too...just probably more time tomorrow :)

[14:41] <[Coke]> colomon: Was just trying to enumerate some of them.

[14:41] <colomon> (Not answering jnthn++'s question there, just summing up)

[14:42] <[Coke]> q:x, a chdir bug, I might be able to do those.

[14:42] <jnthn> Sockets ;)

[14:42] <nwc10> jnthn: did you fix slurp? :-)

[14:42] <colomon> Buf seems like it ought to be pretty doable, too

[14:42] <jnthn> nwc10: Yes!

[14:43] <jnthn> nwc10: The :bin case aside, which needs Buf.

[14:43] <colomon> LEAVE sounds like magic work.

[14:43] <nwc10> yay!

[14:43] <jnthn> Buf really needs a do-over... :/

[14:43] <nwc10> not as yay :-/

[14:43] <colomon> in general, or in jvm?

[14:43] <jnthn> In general.

[14:43] * jnthn should probably try to figure that out...

[14:44] <jnthn> LEAVE is a little magical.

[14:44] <jnthn> Think I need 3-6 hours to do that.

[14:45] <jnthn> Buf needs design work also, so probably I need a while longer working that out...

[14:46] <jnthn> q:x, chdir and sockets certainly don't need me to do 'em :)

[14:47] <[Coke]> I haven't updated the gist in a while, will update it tonight.

[14:48] <colomon> jnthn: have you taken a look at S06-advanced/wrap.t ?  it seems to be dying because callsame is called -- if I switch line 100 to callwith, it survives that and dies later on.

[14:48] <jnthn> colomon: oh, hmm...

[14:49] <jnthn> colomon: I'm aware of it, didn't look in detail yet. That's an interesting hint...

[14:49] <jnthn> [Coke]: I think a lot of small S06 failures should be done in today's run.

[14:49] *** rindolf left
[14:53] *** colomon left
[14:54] * timotimo at least got a few new tasks to make rakudo even better!

[14:57] *** ajr_ left
[15:03] *** konundra left
[15:06] *** kaare_ joined
[15:08] *** donaldh joined
[15:11] *** birdwindupbird left
[15:23] *** ajr joined
[15:23] *** ajr is now known as Guest7429

[15:24] *** Guest7429 is now known as ajr_

[15:28] <[Coke]> jnthn++

[15:31] *** brrt left
[15:31] *** berekuk left
[15:33] *** iSlug left
[15:38] *** pmurias left
[15:39] *** konundra joined
[15:45] *** prevost joined
[15:45] *** fhelmberger left
[15:50] *** FROGGS left
[15:54] *** kaleem joined
[15:58] *** ecocode joined
[16:02] <dalek> Heuristic branch merge: pushed 19 commits to rakudo-star-daily by coke

[16:03] <[Coke]> ... is the clock on feather wrong?

[16:03] <[Coke]> or was there a recent TZ change there?

[16:04] <[Coke]> nevermind, there it goes.

[16:05] *** daxim left
[16:05] * [Coke] kicks off today's run for jvm stuff as well.

[16:05] <[Coke]> jnthn++

[16:06] *** berekuk joined
[16:06] *** domidumont left
[16:08] *** shinee joined
[16:09] *** shinee is now known as shinee_

[16:09] *** bluescreen10 left
[16:09] *** bluescreen10 joined
[16:13] *** FROGGS joined
[16:17] *** orafu joined
[16:19] *** domidumont joined
[16:25] *** kaleem left
[16:36] * jnthn wondres if Rakudo JVM should get a column in features.

[16:36] <yoleaux> 15:14Z <diakopter> jnthn: see http://www.aqute.biz/Bnd/Bnd for ease of automating jar bundling/creation (it's apache licensed). Also clsd (class dumper) from the same toolkit.

[16:36] <jnthn> (to be clear, I'm talking about http://perl6.org/compilers/features )

[16:38] *** rindolf joined
[16:40] <[Coke]> jnthn: Yes,  I think so.

[16:43] * PerlJam thirds the notion

[16:47] <jnthn> The S32-hash/delete-adverb.t failures look a bit like the test is depending on hash ordering, if somebody wants a possible LHF to look into.

[16:48] <jnthn> S32-hash/perl.t appears the same :)

[16:49] <[Coke]> Aye.

[16:50] <[Coke]> mentioned one of those before, the RT one one of them is "make sure there isn't an extra trailing newline"

[16:51] * jnthn wonders if the TODO passes he sees in a couple of the integration tests are bogus or not

[16:55] <[Coke]> jnthn: I do want to be careful that we don't end up with a bunch of rakudo.jvm "nigh" todos, like we have with the nom regressions (which is also linkable back to me.)

[16:56] <[Coke]> r: say 25794 / 26183 # today's rakudo.jvm against yesterday's rakudo.parrot

[16:56] <camelia> rakudo 4ad1b8: OUTPUT«0.985143␤»

[16:56] <[Coke]> 90 more passes today.

[16:57] <jnthn> yay

[16:57] *** sqirrel joined
[16:57] <jnthn> 98.5%! :)

[16:57] <[Coke]> r: say 26183*.99 - 25794

[16:57] <camelia> rakudo 4ad1b8: OUTPUT«127.17␤»

[16:57] <[Coke]> our target is > 100%, though, given the sprintf improvements.

[16:58] <jnthn> ooh :)

[16:58] <jnthn> Yeah. Let's see if we can't get 128 tests before the release :)

[16:58] <jnthn> shopping, dinner, etc.

[16:58] <jnthn> bbl

[16:58] *** raiph left
[16:58] <[Coke]> jnthn++ sorear++ colomon++

[16:59] <[Coke]> lunch, $dayjob, etc. bbl. ;)

[17:00] *** dakkar left
[17:01] *** fgomez joined
[17:07] *** smash__ left
[17:07] *** smash_ joined
[17:07] *** Exodist left
[17:07] *** kst left
[17:07] *** mikemol_ left
[17:07] *** Celelibi left
[17:07] *** dylanwh left
[17:08] *** geekosaur joined
[17:08] *** spider-mario joined
[17:09] *** BooK joined
[17:10] *** Exodist joined
[17:10] *** kst joined
[17:10] *** mikemol_ joined
[17:10] *** Celelibi joined
[17:10] *** dylanwh joined
[17:10] *** atrodo joined
[17:10] *** flussence joined
[17:10] *** jercos joined
[17:10] *** diakopter joined
[17:10] *** cotto joined
[17:10] *** risou_awy joined
[17:10] *** zamolxes joined
[17:11] *** berekuk left
[17:11] *** raiph joined
[17:15] *** benabik left
[17:17] <notjack> Is there tutorial material on Grammars?

[17:17] <notjack> I want to play with them, but reference material won't help much, 'cause I'm mostly ignorant of lexers and parsers

[17:19] *** Rotwang joined
[17:20] *** benabik joined
[17:23] *** btyler_ joined
[17:23] *** cognominal_ joined
[17:23] *** Kelder joined
[17:24] *** Gruber joined
[17:24] *** domidumont left
[17:25] *** ecocode left
[17:26] <diakopter> notjack: there are a few blog posts during the various years' Advent series

[17:26] <diakopter> on grammars and such

[17:27] <notjack> thanks diakopter 

[17:27] *** Psyche^_ joined
[17:28] *** perigrin_ joined
[17:28] <notjack> I think this is going to be one of those bang-head-against-wall-and-see-which-breaks-first things

[17:28] <notjack> or, as I call them, BHAWASWBFTs

[17:28] *** Ulti_ joined
[17:29] <TimToady> just keep spitting on the wall, and eventually it will dissolve

[17:30] <diakopter> .. or at least be pushed out of the galaxy

[17:30] *** abnorman joined
[17:30] *** raiph left
[17:30] <notjack> I don't know, my saliva isn't very corrosive.  Or, at least, my mouth hasn't dissolved yet.

[17:31] *** sftp_ joined
[17:32] *** Nom- joined
[17:33] *** mst___ joined
[17:33] <diakopter> notjack: there's also a couple (mostly youtube?) videos on them of talks at conferences

[17:33] *** rindolf left
[17:33] <diakopter> .seen masak

[17:33] <yoleaux> I saw masak 12 Jul 2013 14:18Z in #perl6: <masak> &

[17:33] <diakopter> donde esta el masak

[17:34] *** donaldh left
[17:34] *** btyler left
[17:34] *** Grrrr left
[17:34] *** Ayiko left
[17:34] *** cognominal left
[17:34] *** Psyche^ left
[17:34] *** mst left
[17:34] *** Yappo__________ left
[17:35] <jnthn> El masak esta des vacaciones :P

[17:37] *** sqirrel left
[17:39] *** donaldh joined
[17:40] *** colomon joined
[17:41] *** rindolf joined
[17:41] <dalek> perl6-roast-data: 6625a6a | coke++ | / (5 files):

[17:41] <dalek> perl6-roast-data: today (automated commit)

[17:41] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/6625a6aae2

[17:42] *** Nom- left
[17:42] <[Coke]> no change in rakudo.parrot since yesterday, so 98.51% it is.

[17:43] *** Nom- joined
[17:43] *** Yappo__________ joined
[17:47] <colomon> [Coke]: did you look at S32-hash/delete-adverb.t ?

[17:48] * colomon 's $work is bring frustrating, tempting to play hooky and try to reach 99%

[17:48] <notjack> diakopter: thanks, I found a couple

[17:48] <notjack> diakopter: problem is I'm learning both p6 and parsing as a general topic

[17:48] <notjack> I'm trying to create a mini interpreter

[17:50] <diakopter> :)

[17:50] <jnthn> notjack: If it helps, the Rakudo debugger can single-step through grammars, which may help you understand how they execute.

[17:50] <diakopter> Interpreter pattern is common

[17:50] <notjack> jnthn: that'll be useful

[17:50] <notjack> at the moment, I'm just trying to get the lezer right

[17:50] <notjack> lexer*

[17:51] *** btyler_ left
[17:54] *** btyler joined
[17:55] *** sftp_ is now known as sftp

[18:02] <[Coke]> colomon: nope.

[18:02] <[Coke]> jnthn: there are a few "this will never work" dispatch errors that I assume you are the man for.

[18:04] *** kaare__ joined
[18:07] <[Coke]> jnthn, colomon : https://gist.github.com/coke/5879701 is updated

[18:12] <colomon> [Coke]++ # though I've been keeping up-to-date test summary results locally.   ;)

[18:12] *** kaare_ left
[18:23] *** berekuk joined
[18:23] <[Coke]> gist updated with some context for the skips/todos.

[18:23] *** sqirrel joined
[18:23] <notjack> I ran my program through the debugger, but it didn't remove the bugs.

[18:23] <diakopter> hee.

[18:23] <[Coke]> notjack++

[18:23] <colomon> notjack: did you use DDT?

[18:23] <notjack> no, dbg

[18:23] <notjack> maybe that's the issue

[18:24] <notjack> btw, this thing where I can say regex foo { stuff } is awesome 

[18:24] <colomon> mostly joking

[18:24] <notjack> colomon: me too, where mostly ~~ poorly

[18:27] <[Coke]> Is masak our primary native german speaker?

[18:28] <TimToady> you mean moritz?

[18:28] <[Coke]> .u ß

[18:28] <yoleaux> U+00DF LATIN SMALL LETTER SHARP S [Ll] (ß)

[18:28] <[Coke]> .u ẞ 

[18:28] <yoleaux> U+1E9E LATIN CAPITAL LETTER SHARP S [Lu] (ẞ)

[18:29] <benabik> Sharp S?  It looks fairly rounded to me.

[18:29] <[Coke]> inowrite?

[18:31] <[Coke]> regarding ß.tclc being "Ss" in the spec, my intel so far indicates it should be maybe ẞ or more likely SS. Or, even more likely, "why are you doing that."

[18:31] * [Coke] wonders if nwc10 has any feedback from p5 land for us on that.

[18:31] <[Coke]> npr: "ßa".tclc.say

[18:31] <camelia> pugs: OUTPUT«*** No such method in class Str: "&tclc"␤    at /tmp/HVtN6ajEoH line 1, column 1 - line 2, column 1␤»

[18:31] <camelia> ..rakudo 4ad1b8: OUTPUT«ßa␤»

[18:31] <camelia> ..niecza v24-88-g1f87209: OUTPUT«Ssa␤»

[18:32] <[Coke]> npr: "ßß".tclc.say

[18:32] <camelia> niecza v24-88-g1f87209: OUTPUT«Ssß␤»

[18:32] <camelia> ..pugs: OUTPUT«*** No such method in class Str: "&tclc"␤    at /tmp/I_4eT9o25Y line 1, column 1 - line 2, column 1␤»

[18:32] <camelia> ..rakudo 4ad1b8: OUTPUT«ßß␤»

[18:32] *** SamuraiJack__ joined
[18:32] <[Coke]> weird. I thought rakudo.parrot was passing that test.

[18:32] *** PacoAir left
[18:32] <[Coke]> wonder if camelia has a different version of ICU

[18:32] *** PacoAir joined
[18:34] *** SamuraiJack_ left
[18:35] *** Nom- left
[18:36] *** Nom- joined
[18:37] *** SamuraiJack joined
[18:37] *** SamuraiJack__ left
[18:41] *** preflex left
[18:41] *** preflex_ joined
[18:41] *** ChanServ sets mode: +v preflex_

[18:41] *** preflex_ is now known as preflex

[18:47] <[Coke]> diakopter: https://gist.github.com/coke/6011457 is the latest runtime error I'm seeing from Pugs on host06. this looks like something we might be able to fix.

[18:49] <[Coke]> .to diakopter https://gist.github.com/coke/6011457 is the latest runtime error I'm seeing from Pugs on host06. this looks like something we might be able to fix.

[18:49] <yoleaux> [Coke]: I'll pass your message to diakopter.

[18:49] <diakopter> [Coke]: I think just

[18:49] <yoleaux> 18:49Z <[Coke]> diakopter: https://gist.github.com/coke/6011457 is the latest runtime error I'm seeing from Pugs on host06. this looks like something we might be able to fix.

[18:49] <diakopter> export LC_CTYPE=en_US.UTF-8

[18:49] <diakopter> export LC_ALL=en_US.UTF-8

[18:52] <diakopter> [Coke]: I suppose it's possible it's getting the latin 1 from your terminal

[18:53] *** btyler left
[18:56] <TimToady> the problem with the name jakudo is that jaku means "weak" in Japanese...

[18:57] <jnthn> [Coke]: Regarding: 

[18:57] <jnthn> integration/error-reporting.t

[18:57] <jnthn> 121:#?rakudo.jvm skip 'No such attribute "$!do" for this object'

[18:57] <jnthn> I think that one way already be fixed now.

[18:57] <benabik> Weak Art?

[18:57] <jnthn> What does "nigh" stand for? :)

[19:01] <TimToady> benabik: unfortunately, doesn't have any of the positive connotations of "gentle art", /juudou/

[19:02] <benabik> TimToady: Was thinking more along the lines of "my five year old could do it" than "tossing people effortlessly".

[19:03] <TimToady> they would think of that as being strong, not as being weak

[19:03] *** iSlug joined
[19:03] *** shinee_ left
[19:03] <[Coke]> jnthn: nigh just means "soon"

[19:04] <jnthn> ah :)

[19:04] <[Coke]> but more dramatically. ;)

[19:04] <diakopter> well, "near"

[19:04] <jnthn> Yeah, was thinking "not implemented...g??? h???" :P

[19:04] <TimToady> don't use anglicisms on poor jnthn :)

[19:04] <jnthn> :P

[19:04] <moritz> :-)

[19:06] <[Coke]> he's sort of anglic!

[19:06] <[Coke]> little obtuse, even!

[19:06] <nwc10> (roughly) Yorkshire is to England as Texas to the USA

[19:06] <[Coke]> ... almost on my way to a fixed width hiaku there, ah well

[19:06] <[Coke]> diakopter: if I define those in my .bashrc and re-login, I get pretty much the same error.

[19:07] <PerlJam> Yorkshire is like a whole other country?

[19:07] <[Coke]> LC_ALL= <run the tests> still complains about LC_ALL, which is weird.

[19:08] <benabik> The rest of the country wishes it would just up and leave already?  ;-)

[19:08] <moritz> [Coke]: how does it complain?

[19:10] <[Coke]> moritz: https://gist.github.com/coke/6011457

[19:10] <[Coke]> nwc10: oooh! this is a pudding metaphor, innit?

[19:11] <moritz> LANGUAGE = "en_US:en"

[19:11] <moritz> is that the right format?

[19:11] <nwc10> [Coke]: I didn't think it was. If it is, it's a better joke than I I was thinking of

[19:11] <nwc10> it's just that Yorkshire sort of lets the English in, if it has to

[19:12] <benabik> Texas pudding?

[19:12] *** gonz_ joined
[19:12] <moritz> [Coke]: on debian I'd tell you to run dpkg --reconfigure tzdata, but I fear that won't help you much

[19:13] <moritz> [Coke]: try LC_ALL=en_US.UTF-8 LANGUAGE=C perl -e 1

[19:13] <jnthn> Yorkshire pudding is world famous, no? :)

[19:14] <[Coke]> moritz: gist updated

[19:14] <moritz> ugh

[19:14] <moritz> that really looks like missing locales, not just wrongly set env variables

[19:15] * jnthn fixes Rakudo JVM to correctly distinguish runtime errors from compile time ones

[19:16] <[Coke]> ah. locale -a is helpful.

[19:17] *** ajr_ left
[19:19] *** abnorman left
[19:19] *** rindolf left
[19:19] *** ajr joined
[19:19] <[Coke]> ... points at LC_ALL=en_US.utf8 ... but that doesn't work either. still getting errors on LANGUAGE et al, even if I udnef them.

[19:20] *** ajr is now known as Guest42320

[19:20] *** Guest42320 is now known as ajr_

[19:21] *** abnorman joined
[19:21] <diakopter> [Coke]: 

[19:21] <diakopter> hSetEncoding handle utf8

[19:22] <diakopter> er.

[19:22] <diakopter> er, nm

[19:22] <diakopter> <- apparently dense as neutron star

[19:24] <[Coke]> jnthn: rakudo.jvm build broken here.

[19:24] <jnthn> [Coke]: huh, I didn't even commit anything yet :p

[19:24] <[Coke]> jnthn: https://gist.github.com/coke/6011803

[19:25] <jnthn> git diff

[19:25] <jnthn> grr

[19:25] <[Coke]> nope, I'm clean. ;

[19:25] <[Coke]> (this is not on the daily build box)

[19:25] <jnthn> [Coke]: That looks like building a Rakudo JVM with a too old NQP JVM

[19:26] <dalek> rakudo/nom: d57a8e3 | jnthn++ | src/core/Exception.pm:

[19:26] <dalek> rakudo/nom: Tweak is_runtime to work on JVM also.

[19:26] <dalek> rakudo/nom: 

[19:26] <dalek> rakudo/nom: Previous approach relied on Parrot namespaces, of all things.

[19:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d57a8e3988

[19:26] <jnthn> (Checked that the above also works on Parrot.)

[19:26] <[Coke]> jnthn: I just updated nqp and built it. hurm.

[19:26] <[Coke]> my nqp is at 754bc44

[19:27] <jnthn> [Coke]: And you configure'd with correct --prefix, and did make install?

[19:27] <[Coke]> ARGLEBARGLE.

[19:27] <[Coke]> all but that last one. :)

[19:28] <[Coke]> jnthn++

[19:29] <Util> #ps in 2 minutes

[19:32] *** kaare__ left
[19:34] *** raiph joined
[19:40] *** gonz_ left
[19:42] <FROGGS> nqp: my %conf := pir::getinterp__P()[pir::const::IGLOBALS_CONFIG_HASH]; say(%conf<platform>);

[19:42] <camelia> nqp: OUTPUT«linux␤»

[19:47] *** rafl left
[19:47] *** raiph left
[19:48] *** rafl joined
[19:48] *** [particle]1 is now known as [particle]

[19:52] *** abnorman left
[19:59] <FROGGS> nqp-jvm: my %conf := nqp::jvmgetproperties(); say(%conf<os.name>);

[19:59] <camelia> nqp-jvm: OUTPUT«No registered operation handler for 'jvmgetproperties'␤  in compile_op␤  in as_jast␤  in as_jast␤  in as_jast_clear_bindval␤  in <anon>␤  in <anon>␤  in compile_var␤  in as_jast␤  in as_jast␤  in <anon>␤  in <anon>␤  in compile_op␤  in as_jast␤  in as_jast␤  in <anon>␤  …

[19:59] <FROGGS> hmmm, is nqp-jvm here not up-to-date?

[19:59] * jnthn suspects nqp-jvm is fairly out of date...

[19:59] <FROGGS> k

[19:59] <FROGGS> :o)

[20:00] <jnthn> Would love a rakudo-jvm target :)

[20:00] <FROGGS> jnthn: if you have time, can you run these two above on your win x64?

[20:00] <FROGGS> me too

[20:00] <jnthn> FROGGS: Windows 7

[20:01] <FROGGS> that would be awesome

[20:01] <FROGGS> I think lc($OS) ~~ /^win/ should be alright

[20:02] <FROGGS> ahh, wait

[20:02] <FROGGS> that already was the output, ehh?

[20:02] <FROGGS> for parrot too?

[20:04] <jnthn> $*OS on Parrot is MSWin32

[20:04] <FROGGS> k, thank you

[20:05] *** sqirrel left
[20:13] *** domidumont joined
[20:15] <colomon> jnthn++'s last patch actually lost me 14 tests that were previously passing.  :\

[20:15] <jnthn> Oh?

[20:16] <colomon> results8:"total",     25242,   278,   663,  2099, 28179, 26256

[20:16] <colomon> results9:"total",     25228, (etc)

[20:17] <[Coke]> there's a good reason for proper fudging at this stage, I guess.

[20:17] <[Coke]> s/proper//

[20:17] <colomon> jnthn: trying to sort now

[20:18] *** lue joined
[20:19] <colomon> S06-other/main-usage.rakudo.jvm aborted 22 test(s) (previous S06-other/main-usage.rakudo.jvm aborted 1 test(s))

[20:19] <timotimo> did someone make rakudo.jvm run from outside the build directory yet?

[20:19] <colomon> some other (smaller) new aborts as well

[20:19] <timotimo> because i have a java professional sitting next to me

[20:22] <[Coke]> timotimo: not that I know.

[20:23] <FROGGS> me neither... I have not seen related commits

[20:25] *** segomos left
[20:25] *** segomos joined
[20:26] <timotimo> good

[20:26] <timotimo> he's currently distracted by minecraft ;)

[20:26] *** prammer joined
[20:29] *** grondilu joined
[20:29] <jnthn> In NQP I see this at present:

[20:30] <jnthn> t/jvm/06-sprintf.t Failed tests:  31, 239

[20:30] <jnthn> Is that Windows specific, or anyone else have it?

[20:31] *** konundra left
[20:32] *** domidumont left
[20:33] *** SamuraiJack left
[20:35] <timotimo> just to be sure, foo\ (1, 2, 3); should be the same as foo(1, 2, 3), yes?

[20:35] <FROGGS> jnthn: same here using linux

[20:38] <colomon> those fails are par for the course for now.  unless there's a way to todo them?

[20:39] <colomon> sprintf definitely still needs more attention, but it's not getting it from me for a few days due to $work backlog after vacation++

[20:39] <timotimo> who knows off hand where foo(1, 2, 3) gets parsed in the grammar? is that term:sym<name>?

[20:39] <FROGGS> I'd guess it is term:sym<identifier>

[20:40] <jnthn> term:sym<ident> iirc

[20:40] <jnthn> uh, yeah, identifier

[20:40] <timotimo> ah, thanks!

[20:41] <timotimo> <?[(]> is short syntax for lookahead assertion?

[20:41] <FROGGS> it is the same like <?before '('>

[20:41] <timotimo> thanks :)

[20:42] <jnthn> timotimo: Note STD has  <?before [<unsp>|'(']? > <![:]> that looks like it handles this.

[20:43] <timotimo> oh? i was going to put <.unsp> before that assertion

[20:43] <timotimo> because the unspace actually has to be matched, rather than just putting an assertion that it's there

[20:43] <timotimo> or am i mistaken?

[20:44] <jnthn> timotimo: The args call will happily eat unspace

[20:44] <jnthn> At least, in STD it will

[20:44] <jnthn> I'd rather we follow the STD way rather than approximate it :)

[20:45] <timotimo> ah, sure.

[20:45] <timotimo> i'll have to patch args in that case.

[20:45] <timotimo> and remove the <.unsp> before <args> to replace them with assertions in other places

[20:47] <jnthn> +1

[20:52] <timotimo> i'm not quite sure why std implements the unspace in args as | :dba('argument list') '(' ~ ')' <semiarglist>  | :dba('argument list') <.unsp> '(' ~ ')' <semiarglist>

[20:52] <timotimo> rather than just having <.unsp>? in there

[20:53] <jnthn> Maybe LTM.

[20:54] <timotimo> should i reproduce that in rakudo then?

[20:54] <FROGGS> stay as close to std as you can

[20:55] <jnthn> yes

[20:55] <timotimo> will do.

[20:56] *** segomos left
[20:56] *** segomos joined
[20:57] *** segomos left
[20:57] *** segomos joined
[21:01] *** colomon left
[21:01] *** skids left
[21:05] *** bluescreen10 left
[21:08] * timotimo runs a full spectest with the changes

[21:17] *** abnorman joined
[21:17] <timotimo> all spectests succeed, including the test of my own design :)

[21:20] <timotimo> the test will cause an abort of the whole file, so i should wait for the fix to be merged before uploading it to roast, yes?

[21:23] <jnthn> aye

[21:24] <timotimo> https://github.com/rakudo/rakudo/pull/179 - this is the PR

[21:26] <dalek> rakudo/nom: 6b355be | (Timo Paulssen)++ | src/Perl6/Grammar.nqp:

[21:26] <dalek> rakudo/nom: allow unspace before args (e.g. in say\ ("foo"))

[21:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6b355be1a0

[21:26] <dalek> rakudo/nom: 60cb3e3 | jonathan++ | src/Perl6/Grammar.nqp:

[21:26] <dalek> rakudo/nom: Merge pull request #179 from timo/unspace_before_args

[21:26] <dalek> rakudo/nom: 

[21:26] <dalek> rakudo/nom: allow unspace before args (e.g. in say\ ("foo"))

[21:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/60cb3e3124

[21:26] <timotimo> Action::block_closure seems to be the place to put $*W.install_lexical_symbol($block, '&?BLOCK', $code);, no?

[21:26] <jnthn> Doesn't sound quite right to me.

[21:26] <timotimo> OK

[21:27] <jnthn> I think last time I tried to do it with install_lexical_symbol, something didn't go too well...

[21:27] <timotimo> ah. in that case i shall just let it be for now

[21:27] <jnthn> Oh...yeah. You got the wrong closure.

[21:27] <timotimo> ah, that's unhelpful

[21:27] <timotimo> okay, i shall see what the other perceived LHF was that i ran into earlier today

[21:29] <timotimo> hum, that may already be all of it :|

[21:29] <jnthn> I guess we need to notice $?BLOCK specially and turn it into something like nqp::getcodeobj(nqp::curcode()) or so

[21:30] <timotimo> std: temp &say.wrap({ print "wrapped"; callsame });

[21:30] <camelia> std c2215f0: OUTPUT«ok 00:00 47m␤»

[21:30] <timotimo> i'll put in parsing + NYI error for that

[21:31] <jnthn> I think we already parse it

[21:31] <jnthn> yay, I have S04-phasers/keep-undo.bat passing on JVM

[21:32] <timotimo> \o/

[21:32] <timotimo> it's a .bat?

[21:32] <timotimo> r: temp &say.wrap({ print "wrapped"; callsame });

[21:32] <camelia> rakudo d57a8e:  ( no output )

[21:32] <timotimo> oh!

[21:32] <timotimo> r: { temp &say.wrap({ print "wrapped"; callsame }); say "what!" } say "who?"

[21:32] <camelia> rakudo d57a8e: OUTPUT«===SORRY!===␤Two terms in a row␤at /tmp/obs9Pj3g9z:1␤------> t "wrapped"; callsame }); say "what!" } ⏏say "who?"␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        statement modifier l…

[21:32] <timotimo> r: { temp &say.wrap({ print "wrapped"; callsame }); say "what!" }; say "who?"

[21:32] <camelia> rakudo d57a8e: OUTPUT«Can only use 'temp' on a container␤  in sub prefix:<temp> at src/gen/CORE.setting:14240␤  in block  at /tmp/p63LrvYk_1:1␤␤»

[21:33] <timotimo> right, okay. nothing to be done for me right now.

[21:33] <jnthn> uh, I meant .t :)

[21:33] <jnthn> temp.t does now pass on JVM also :)

[21:33] <jnthn> As far as it does on Parrot, anyways.

[21:34] <jnthn> let.t and enter-leave.t somehow explode with unwind exceptions. Hm.

[21:39] <dalek> nqp: e47d0bf | jnthn++ | src/ (10 files):

[21:39] <dalek> nqp: Infrastructure to support LEAVE and friends.

[21:39] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e47d0bfee2

[21:42] *** iSlug left
[21:42] *** iSlug joined
[21:46] * timotimo is trying to look into making $/ have the right value in the second argument to subt

[21:46] * timotimo is not sure how to make that work properly, alas

[21:46] <timotimo> since i don't have access to the lexical scope of the thing that gets passed, and AFAICT $/ isn't dynamic ...

[21:46] <timotimo> or maybe it's kind of sort of dynamic

[21:48] <timotimo> kind of hard to grep grammar and actions for $/ :)

[21:48] *** ajr_ left
[21:48] <timotimo> in a very simple example, it's indeed just a lexical, hum.

[21:49] *** PacoAir left
[21:50] <timotimo> but $/ is declared as a "contvar", maybe that helps me

[21:51] <timotimo> unsurprisingly, that whole ordeal wasn't easy so far and doesn't seem to be easily solvable right now either :|

[21:52] <jnthn> I think that issue has been around for a little while...

[21:55] <timotimo> a long while, in fact ;)

[21:55] <timotimo> i thought it was just that nobody looked at it, but of course that's illusory ;)

[21:55] <jnthn> No, there may even be a spec ticket on it.

[21:55] <timotimo> std: "foo" ~~ /<[a..c]-[a..c]>/

[21:56] <camelia> std c2215f0: OUTPUT«ok 00:00 44m␤»

[21:56] <timotimo> should that throw "null regex not allowed"?

[21:56] <timotimo> or is it enough to throw for '['\s*']'?

[21:57] <jnthn> I think th enull regex thing is quite syntactic.

[21:57] <jnthn> Again, see STD ;-)

[21:57] <dalek> nqp: 04a1331 | jnthn++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/CallFrame.java:

[21:57] <dalek> nqp: Preserve unwinder in exit handlers.

[21:57] <dalek> nqp: review: https://github.com/perl6/nqp/commit/04a1331c4e

[21:57] <timotimo> right.

[21:57] *** notjack left
[22:03] *** spider-mario left
[22:14] *** grondilu left
[22:14] *** PacoAir joined
[22:14] <timotimo> std: "foo" ~~ /<-[]>/

[22:14] <camelia> std c2215f0: OUTPUT«ok 00:00 44m␤»

[22:15] <FROGGS> rn: "foo" ~~ /<-[]>/

[22:15] <camelia> niecza v24-88-g1f87209:  ( no output )

[22:15] <camelia> ..rakudo 60cb3e: OUTPUT«===SORRY!===␤Error while compiling block  (source text: "\"foo\" ~~ /<-[]>/"): Error while compiling op call: Error while compiling block : Error while compiling block  (source text: "/<-[]>/"): StopIteration␤»

[22:15] <timotimo> oh wow

[22:15] <FROGGS> -.-

[22:15] <jnthn> wow 

[22:15] <timotimo> i wonder where that happens

[22:15] <FROGGS> no cookie for all of them

[22:16] <timotimo> but since i'm poking around in that part of code anyway, i'll look see what i can do9~.

[22:17] <jnthn> I'm betting it's in the char class code gen.

[22:17] <jnthn> It probably assumes that there is at least one thing in there.

[22:18] <dalek> rakudo/nom: 45fb1ba | jnthn++ | / (3 files):

[22:18] <dalek> rakudo/nom: LEAVE/KEEP/UNDO support for on JVM.

[22:18] <dalek> rakudo/nom: 

[22:18] <dalek> rakudo/nom: Passes almost all of the tests for these features that Parrot does.

[22:18] <dalek> rakudo/nom: This also makes let/temp work and their tests pass on JVM.

[22:18] * timotimo searches

[22:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/45fb1bad71

[22:18] <timotimo> \o/ jnthn++

[22:18] <jnthn> Probably i the NQP repo, in src/QRegex/P6Regex/Actions.nqp, cclass_elem or thereabouts.

[22:18] <timotimo> hey look, that's where i'm looking! ;)

[22:19] <timotimo> for $<charspec> { ... } would that blow up if there's nothing in there?

[22:20] <jnthn> No...

[22:20] <[Coke]> jnthn: ++

[22:20] <[Coke]> er, jnthn++

[22:20] <jnthn> I can't reproduce that main-usage regression somebody mentioned earlier, fwiw. It passes in my latest run, it seems.

[22:22] <[Coke]> might have been a symptom of other stuff.

[22:22] <[Coke]> I'm kicking off a new run right now.

[22:30] <timotimo> the stuff exits the action for assertion:sym<[>

[22:33] *** PacoAir left
[22:35] <timotimo> yeah, i'm guessing a Regex(:rxtype<conj>, :subtype<zerowidth>) with no children at all is just not sensible

[22:35] <timotimo> but i don't know what to properly replace it with

[22:37] <FROGGS> die "Empty regex not allowed" ?

[22:37] <timotimo> no, that's wrong

[22:37] <timotimo> <-[]> is allowed

[22:37] <FROGGS> why?

[22:37] <timotimo> std: "foo" ~~ <-[]>

[22:38] <timotimo> come on, std, back me up on this one

[22:38] <FROGGS> :o)

[22:38] <FROGGS> I know that it says "ok", but I'm not sure it is meant to

[22:38] <timotimo> well, . is always an apt replacement for <-[]>

[22:39] <FROGGS> n: say "abc" ~~ /<-[]>/

[22:39] * lue imagines module X::Snarky would warn with "WARNING: Useless use of empty regex. I bet that was worth the keystrokes."

[22:40] *** integral_ joined
[22:40] *** integral_ left
[22:40] *** integral_ joined
[22:40] <FROGGS> timotimo: think of <-[@arr]> where @arr is empty by accident, I dont think that somebody wants that

[22:41] <FROGGS> TimToady: opinion?

[22:41] <timotimo> oh? it should explode in that case? i don't think so.

[22:41] <timotimo> i think it should allow empty @arr

[22:41] <timotimo> in that case

[22:42] *** jtpalmer left
[22:42] *** anocelot_ left
[22:42] *** Exodist left
[22:42] *** kst left
[22:42] *** mikemol_ left
[22:42] *** Celelibi left
[22:42] *** dylanwh left
[22:42] *** atrodo left
[22:42] *** flussence left
[22:42] *** jercos left
[22:42] *** diakopter left
[22:42] *** cotto left
[22:42] *** risou_awy left
[22:42] *** zamolxes left
[22:42] *** perigrin_ left
[22:42] *** cognominal_ left
[22:42] *** benabik left
[22:42] *** Util left
[22:42] *** Khisanth left
[22:42] *** sergot left
[22:42] *** hugme left
[22:42] *** camelia left
[22:42] *** mls left
[22:42] *** Nom- left
[22:42] *** berekuk left
[22:42] *** Kelder left
[22:42] *** orafu left
[22:42] *** prevost left
[22:42] *** telex left
[22:42] *** huf left
[22:42] *** SmokeMac_ left
[22:42] *** bonsaikitten left
[22:42] *** robinsmidsrod left
[22:42] *** prammer left
[22:42] *** _ilbot left
[22:42] *** genehack left
[22:42] *** Bucciarati left
[22:42] *** awwaiid_ left
[22:42] *** cibs left
[22:43] <dalek> perl6-examples: b803f40 | grondilu++ | rosalind/lcs.c~:

[22:43] <dalek> perl6-examples: Delete lcs.c~

[22:43] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/b803f401a9

[22:43] <FROGGS> gnight net splitters

[22:43] <FROGGS> std: "abc" ~~ /[]/

[22:44] <lue> I imagine <-[]> is useful over . in cases where you want to emphasize that you don't want nothing (as opposed to the alternate perspective of "I want something")

[22:44] *** prammer joined
[22:44] *** Nom- joined
[22:44] *** berekuk joined
[22:44] *** perigrin_ joined
[22:44] *** Kelder joined
[22:44] *** cognominal_ joined
[22:44] *** benabik joined
[22:44] *** zamolxes joined
[22:44] *** risou_awy joined
[22:44] *** cotto joined
[22:44] *** diakopter joined
[22:44] *** jercos joined
[22:44] *** flussence joined
[22:44] *** atrodo joined
[22:44] *** dylanwh joined
[22:44] *** Celelibi joined
[22:44] *** mikemol_ joined
[22:44] *** kst joined
[22:44] *** Exodist joined
[22:44] *** orafu joined
[22:44] *** prevost joined
[22:44] *** telex joined
[22:44] *** _ilbot joined
[22:44] *** genehack joined
[22:44] *** Util joined
[22:44] *** Khisanth joined
[22:44] *** cibs joined
[22:44] *** huf joined
[22:44] *** SmokeMac_ joined
[22:44] *** sergot joined
[22:44] *** hugme joined
[22:44] *** camelia joined
[22:44] *** mls joined
[22:44] *** bonsaikitten joined
[22:44] *** robinsmidsrod joined
[22:44] *** GlitchMr joined
[22:44] *** pjcj_ joined
[22:44] *** Bucciarati joined
[22:44] *** awwaiid_ joined
[22:44] *** apejens joined
[22:44] *** lee_ joined
[22:44] *** nwc10 joined
[22:44] *** charsbar_______2 joined
[22:44] *** zakalwe joined
[22:44] *** LordV joined
[22:44] *** moritz joined
[22:44] *** pratchett.freenode.net sets mode: +vv hugme camelia

[22:44] *** gabriel joined
[22:44] *** tokuhirom_ joined
[22:44] *** jfried joined
[22:44] *** yeltzooo joined
[22:44] *** cxreg joined
[22:44] *** `patch` joined
[22:44] *** larks joined
[22:45] *** jtpalmer joined
[22:45] *** anocelot_ joined
[22:45] *** rhr_ joined
[22:46] <lue> std: "abc" ~~ /[]/

[22:46] <camelia> std c2215f0: OUTPUT«===SORRY!===␤Null pattern not allowed at /tmp/cUsH8X2xTi line 1:␤------> "abc" ~~ /[⏏]/␤    expecting any of:␤ prefix or term␤ regex atom␤Parse failed␤FAILED 00:00 43m␤»

[22:46] <lue> std: "abc" ~~ /<-[]>/

[22:46] <camelia> std c2215f0: OUTPUT«ok 00:00 44m␤»

[22:48] *** Nom-_ joined
[22:48] *** telex left
[22:48] *** Nom- left
[22:49] *** telex joined
[22:50] *** daniel-s joined
[22:51] *** prevost left
[22:52] *** sivoais left
[22:52] *** Rotwang left
[22:52] *** sivoais joined
[22:57] *** cbk joined
[23:00] *** orafu left
[23:02] *** orafu joined
[23:11] *** fridim_ joined
[23:12] <jnthn> 'night, #perl6

[23:14] <[Coke]> ~~

[23:15] *** benabik left
[23:21] *** soc joined
[23:24] <soc> timotimo: ok, so perl6 is currently using https://github.com/jline/jline

[23:25] <soc> you might want to upgrade to https://github.com/jline/jline2 sooner or later

[23:25] <soc> when that happens, keep "expandEvents" in mind

[23:25] <soc> see https://github.com/scala/scala/pull/2740

[23:27] <[Coke]> rakudo.jvm is passing 2 fewer tests than it was early today. :|

[23:28] *** iSlug left
[23:30] *** grondilu joined
[23:30] <grondilu> rn: say map { .substr(0, *-2) => .substr(1) }, <foo bar>;

[23:30] <camelia> rakudo 45fb1b: OUTPUT«No such method 'substr' for invocant of type 'Any'␤  in block  at /tmp/MJSYJUq9Eq:1␤␤»

[23:30] <camelia> ..niecza v24-88-g1f87209: OUTPUT«Unhandled exception: Unable to resolve method substr in type Any␤  at /tmp/6lF8I8pOZF line 1 (ANON @ 4) ␤  at /tmp/6lF8I8pOZF line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4579 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting l…

[23:31] <grondilu> why don't this work?

[23:31] <grondilu> rn: say map { .substr(1) }, <foo bar>;

[23:31] <camelia> rakudo 45fb1b, niecza v24-88-g1f87209: OUTPUT«oo ar␤»

[23:31] <grondilu> rn: say map {; .substr(0, *-2) => .substr(1) }, <foo bar>;

[23:31] <camelia> rakudo 45fb1b, niecza v24-88-g1f87209: OUTPUT«"f" => "oo" "b" => "ar"␤»

[23:31] <grondilu> oh I see

[23:32] <grondilu> it was parsed as a hash, not a block

[23:32] *** bkbk joined
[23:37] *** benabik joined
[23:39] <timotimo> jnthn: a friend told me, that invokedynamic is severely broken performancewise and that until java 8 hits or the changes made in java 8 are backported to java 7 we would likely be better off using reflection instead

[23:43] *** grondilu left
[23:45] <soc> at least I recommend benchmarking :-)

[23:46] <soc> "How do reflect-based lambdas compare with MethodHandles? To recap,  support for MethodHandles was removed (for now) from the new backend  because performance was disappointing. As of JDK 7, both reflection and  method-handles result in similarly small JARs, but reflection-based  lambdas (currently) outerperform their MethodHandle-based counterparts.  And there's also Android, right?"

[23:46] <soc> https://groups.google.com/d/topic/scala-internals/-re8L41S37g/discussion

[23:47] *** soc left
[23:48] * timotimo is quite close to making perl6 on jvm run from outside the install directory :)

[23:51] <timotimo> ah, great. there's a --setting-path, but apparently only for nqp's compiler? or something?

[23:54] <timotimo> siiiiigh, even more "could not found"'s

[23:54] <timotimo> find*

[23:56] *** cognominal_ left
[23:57] <timotimo> i get past a lot of stuff, but then Perl6::BOOTSTRAP cannot be found :(

[23:57] <timotimo> it should have put th jvmclasspaths there, but it only looks in . and blib/

[23:58] <timotimo> aaah, # XXX TODO ;)

