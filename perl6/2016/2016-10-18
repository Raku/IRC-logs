[00:04] *** Derperperd joined
[00:13] <AlexDaniel> is aaronsherman here?

[00:17] *** pierre_ joined
[00:21] <AlexDaniel> ah nvm, just realized that I actually have a reddit account…

[00:24] *** lizmat left
[00:25] *** Actualeyes joined
[00:41] <seatek> where can i submit grammatical corrections to the docs.perl6.org stuff? should I just point them out here? just ran across one.

[00:47] *** aborazmeh joined
[00:47] *** aborazmeh left
[00:47] *** aborazmeh joined
[00:52] <MasterDuke> seatek: a PR here would be much appreciated: https://github.com/perl6/doc

[00:53] *** rurban left
[00:56] *** yqt left
[00:57] *** BenGoldberg joined
[00:57] <seatek> MasterDuke, done -- 186 open on that page.. didn't search for it to see if it already was reported.

[00:58] *** Jesmaybe joined
[01:00] <MasterDuke> looks like you're in the perl6 team, you can probably directly edit the file from github

[01:01] <seatek> MasterDuke, ok I'll try

[01:03] <dalek> doc: fe5f6d7 | adaptiveoptics++ | doc/Language/typesystem.pod6:

[01:03] <dalek> doc: Update typesystem.pod6 in Class section for minor grammar fix

[01:03] <dalek> doc: review: https://github.com/perl6/doc/commit/fe5f6d7120

[01:03] *** Jesmaybe left
[01:05] <seatek> MasterDuke, well, it worked. 

[01:06] <MasterDuke> great, glad to see people contributing

[01:06] <seatek> MasterDuke, I suppose I'm expected to resolve my own bug now... ;)

[01:06] *** Jesmaybe joined
[01:07] <seatek> MasterDuke, do you guys like those tracked in the bug system, or just making the changes in version control ok?

[01:08] <MasterDuke> something small like that is fine to just change

[01:08] <seatek> k

[01:09] *** grondilu left
[01:12] *** Jesmaybe left
[01:12] *** Jesmaybe joined
[01:20] *** Jesmaybe left
[01:20] *** Jesmaybe joined
[01:28] <AlexDaniel> seatek++

[01:31] <dalek> doc: f78c962 | adaptiveoptics++ | doc/Language/typesystem.pod6:

[01:31] <dalek> doc: Update typesystem.pod6, clarifying comma and clarifiying negation added

[01:31] <dalek> doc: review: https://github.com/perl6/doc/commit/f78c9628f7

[01:31] *** Jesmaybe left
[01:31] *** Jesmaybe joined
[01:36] *** pierre_ left
[01:38] *** pierre_ joined
[01:42] *** w4and0er96 joined
[01:42] *** Jesmaybe left
[01:43] <dalek> doc/spellcheck: 9398f28 | coke++ | doc/Language/traps.pod6:

[01:43] <dalek> doc/spellcheck: fix typos

[01:43] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/9398f28fff

[01:43] <dalek> doc/spellcheck: d2574de | (Zoffix Znet)++ | doc/Type/Numeric.pod6:

[01:43] <dalek> doc/spellcheck: Clarify special cases in Numeric.log

[01:43] *** dalek left
[01:44] *** Jesmaybe joined
[01:47] <seatek> does anyone know of any good documention on the syntax for dispatching on attribute handles?

[01:48] *** dalek joined
[01:48] *** ChanServ sets mode: +v dalek

[01:56] *** amalia_ left
[01:57] *** cibs left
[01:58] *** cibs joined
[02:00] *** amalia_ joined
[02:01] *** flexibea` joined
[02:02] *** noganex joined
[02:04] *** flexibeast left
[02:04] *** cdg joined
[02:05] *** noganex_ left
[02:06] *** cdg left
[02:06] *** cdg joined
[02:08] *** olinkl joined
[02:17] *** Jesmaybe left
[02:18] *** Jesmaybe joined
[02:23] *** pierre_ left
[02:31] *** pierre_ joined
[02:35] *** pierre_ left
[02:51] <[Coke]> https://github.com/perl6/doc/blob/master/doc/Language/classtut.pod6#L627 - what's the N<> here?

[02:51] *** Jesmaybe left
[02:52] *** Jesmaybe joined
[02:52] <[Coke]> Looks like we could remove the N<> and move that whole sentence to ethe end of the P.

[02:56] <[Coke]> m: say nextcallee.perl;

[02:56] <camelia> rakudo-moar 906719: OUTPUT«nextsame is not in the dynamic scope of a dispatcher␤  in block <unit> at <tmp> line 1␤␤»

[02:56] *** cdg left
[02:58] *** Jesmaybe left
[02:58] *** Jesmaybe joined
[03:00] *** noganex_ joined
[03:02] *** noganex left
[03:03] *** pierre_ joined
[03:15] *** khw left
[03:15] *** pierre_ left
[03:17] *** skids left
[03:22] *** pierre_ joined
[03:23] *** Jesmaybe left
[03:25] <seatek> m: say '12ab' ~~ m/<[a .. f 0 .. 9]> ** 4/ ?? 'good' !! 'bad';

[03:25] <camelia> rakudo-moar 906719: OUTPUT«good␤»

[03:26] <seatek> say '12a' ~~ m/<[a .. f 0 .. 9]> ** 4/ ?? 'good' !! 'bad';

[03:26] <seatek> m: say '12a' ~~ m/<[a .. f 0 .. 9]> ** 4/ ?? 'good' !! 'bad';

[03:26] <camelia> rakudo-moar 906719: OUTPUT«bad␤»

[03:26] <seatek> m: say '12abc' ~~ m/<[a .. f 0 .. 9]> ** 4/ ?? 'good' !! 'bad';

[03:26] <camelia> rakudo-moar 906719: OUTPUT«good␤»

[03:27] *** pierre_ left
[03:27] <seatek> it's not wanting exactly 4 of that list... less than 4 is bad. more than 4 is ok. I understand why....

[03:27] <seatek> but is there way to enforce exactly 4 of the list, like you could use {4} in perl5 ?

[03:31] <seatek> now i can't remember if perl5 actually did enforce exactly 4 in a list

[03:31] <MasterDuke> you need to wrap it in ^ $

[03:33] <seatek> MasterDuke, oh man. duh. yeah. thanks :)

[03:34] <MasterDuke> m: say '12a' ~~ m/<xdigit> ** 4/

[03:34] <camelia> rakudo-moar 906719: OUTPUT«False␤»

[03:34] <MasterDuke> m: say '12ab' ~~ m/<xdigit> ** 4/

[03:34] <camelia> rakudo-moar 906719: OUTPUT«｢12ab｣␤ xdigit => ｢1｣␤ xdigit => ｢2｣␤ xdigit => ｢a｣␤ xdigit => ｢b｣␤»

[03:34] <MasterDuke> <xdigit> is a builtin character class for <[a .. f 0 .. 9]>

[03:35] <seatek> oo that's handy

[03:35] <dalek> doc/spellcheck: 6f85528 | coke++ | xt/ (3 files):

[03:35] <dalek> doc/spellcheck: don't hide words file

[03:35] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/6f85528298

[03:35] <dalek> doc/spellcheck: 5111425 | coke++ | / (5 files):

[03:35] <dalek> doc/spellcheck: Use 2 dict files -

[03:35] <dalek> doc/spellcheck: 

[03:35] <dalek> doc/spellcheck: one for words, jargon, programs, methods, classes, etc.

[03:35] <dalek> doc/spellcheck: one for code that looks like words

[03:35] <dalek> doc/spellcheck: 

[03:35] <dalek> doc/spellcheck: track more words

[03:35] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/51114250aa

[03:35] <seatek> that' can't be subset typed though can it?

[03:38] <MasterDuke> not sure what you mean?

[03:39] *** aborazmeh left
[03:40] <seatek> it's not a "type" that can have subsets created of that type...

[03:40] <dalek> doc: 34ca6b4 | coke++ | doc/Language/ (2 files):

[03:40] <dalek> doc: fix typo

[03:40] <dalek> doc: review: https://github.com/perl6/doc/commit/34ca6b4c1b

[03:40] <dalek> doc: 0fce86b | coke++ | doc/Language/ (4 files):

[03:40] <dalek> doc: alternate forms.

[03:40] <dalek> doc: review: https://github.com/perl6/doc/commit/0fce86bca7

[03:40] <seatek> m: subset hexword of xdigit where *.chars == 40;

[03:40] <camelia> rakudo-moar 906719: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Invalid typename 'xdigit'␤at <tmp>:1␤------> 3subset hexword of xdigit7⏏5 where *.chars == 40;␤»

[03:40] <dalek> doc/spellcheck: 34ca6b4 | coke++ | doc/Language/ (2 files):

[03:40] <dalek> doc/spellcheck: fix typo

[03:40] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/34ca6b4c1b

[03:40] <dalek> doc/spellcheck: 0fce86b | coke++ | doc/Language/ (4 files):

[03:40] <dalek> doc/spellcheck: alternate forms.

[03:40] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/0fce86bca7

[03:40] <dalek> doc/spellcheck: ebefa37 | coke++ | doc/Language/ (6 files):

[03:40] <dalek> doc/spellcheck: Merge branch 'master' into spellcheck

[03:40] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/ebefa376b0

[03:41] <seatek> m: subset hexword of xdigit where *.chars == 4;

[03:41] <camelia> rakudo-moar 906719: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Invalid typename 'xdigit'␤at <tmp>:1␤------> 3subset hexword of xdigit7⏏5 where *.chars == 4;␤»

[03:42] <MasterDuke> m: subset Hex of Str where /^ <xdigit>..5 $/; my Hex $a = "ab3"; say $a

[03:42] <camelia> rakudo-moar 906719: OUTPUT«Type check failed in assignment to $a; expected Hex but got Str ("ab3")␤  in block <unit> at <tmp> line 1␤␤»

[03:42] <seatek> ok so yeah -- it stays in regexes then :)

[03:43] <seatek> much clearer

[03:44] <seatek> weird i seem to remember that from ages ago.. a long list of those in regexes

[03:44] <seatek> i'm having flashbacks

[03:46] <MasterDuke> typo in my example though, should have been <xdigit>**5

[03:46] <seatek> yeah 

[03:47] <seatek> MasterDuke++ thanks

[03:48] <MasterDuke> np. btw, i'm outa here now, but if you've got a min or two could you create a docs issue that the builtin char classes aren't documented?

[03:49] <geekosaur> I think you can add one, but yes, needs docs

[03:49] <geekosaur> regexes are a built-in grammar which can have terms and such added to it

[03:49] <seatek> MasterDuke, sure thing

[03:54] <[Coke]> yay, down to 85 files with spelling issues.

[04:02] <geekosaur> oj, the implementation isn't composable :/

[04:15] *** brillenfux joined
[04:16] *** wamba joined
[04:19] <AlexDaniel> m: my regex xdigzit5 { [ <xdigit> | ‘z’ ]**5 }; say ‘12z3b’ ~~ /^ <xdigzit5> $/

[04:19] <camelia> rakudo-moar 906719: OUTPUT«｢12z3b｣␤ xdigzit5 => ｢12z3b｣␤  xdigit => ｢1｣␤  xdigit => ｢2｣␤  xdigit => ｢3｣␤  xdigit => ｢b｣␤»

[04:19] <AlexDaniel> seatek: ↑ ?

[04:19] <geekosaur> thought they wanted a subset

[04:20] <geekosaur> although actually that should be doable to

[04:20] <AlexDaniel> sure

[04:20] <geekosaur> [ <xdigit> - whatever [

[04:20] <geekosaur> er

[04:20] <geekosaur> ]

[04:20] <AlexDaniel> ummm don't think this is going to work

[04:21] <AlexDaniel> <[\w] - [\d]> works, but <xdigit> probably won't

[04:21] <ShimmerFairy> geekosaur: you mean like <+xdigit + [z]> ?

[04:21] <geekosaur> hm. speculations said it should; I don't know if the impl does it though

[04:22] <AlexDaniel> ShimmerFairy is right, it does work

[04:22] <ShimmerFairy> m: say "CEF" ~~ /<+alpha - [Ff]>+/

[04:22] <camelia> rakudo-moar 906719: OUTPUT«｢CE｣␤»

[04:22] <AlexDaniel> yea

[04:22] <AlexDaniel> cool

[04:23] *** BenGoldberg left
[04:25] <AlexDaniel> anyway, just wanted to say that you can create your own regexes/rules/tokens if you need that kind of stuff. And these basically give you infinite freedom, so you can have subsets or whatever else you wish

[04:33] *** AlexDaniel left
[04:38] *** Cabanossi left
[04:40] *** dj_goku joined
[04:40] *** dj_goku left
[04:40] *** dj_goku joined
[04:41] *** Cabanossi joined
[04:45] *** dataf4l joined
[04:45] <dataf4l> hey guys

[04:45] <dataf4l> I just posted my first perl6 bug

[04:45] <dataf4l> https://rt.perl.org/Public/Bug/Display.html?id=129909

[04:46] <dataf4l> I wonder if I’ll ever be able to actually compile perl6 programs to binary executables or at least jar files so my clients can run them without hassle.

[04:56] <seatek> ooo, yeah, very cool Shimmer, Alex & geek

[04:56] *** Derperperd left
[04:57] <seatek> yeah my thing was wanting a custom "variable type" of Sessid where it's a 40-character long hex thang.... settled on: subset Sessid of Str where m/^<xdigit> ** 40$/;

[04:59] <seatek> the xdigit replaced my <[a..f 0..9]>

[05:00] *** rurban joined
[05:00] *** rurban left
[05:03] <seatek> say '123abcg' ~~ /<xdigit + [g]>+/

[05:04] <seatek> m:say '123abcg' ~~ /<xdigit + [g]>+/

[05:04] <seatek> m: say '123abcg' ~~ /<xdigit + [g]>+/

[05:04] <camelia> rakudo-moar 906719: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Quantifier quantifies nothing␤at <tmp>:1␤------> 3say '123abcg' ~~ /<xdigit +7⏏5 [g]>+/␤»

[05:04] <seatek> m: say '123abcg' ~~ /<+xdigit + [g]>+/

[05:04] <camelia> rakudo-moar 906719: OUTPUT«｢123abcg｣␤»

[05:04] <seatek> that is interesting -- needs the + up front...

[05:04] <seatek> m: say '123abch' ~~ /<+xdigit + [g]>+/

[05:04] <camelia> rakudo-moar 906719: OUTPUT«｢123abc｣␤»

[05:05] <seatek> very cool you can modify those inline

[05:05] <seatek> m: say '123abch' ~~ /<0 .. 9 a .. f + [g]>+/

[05:05] <camelia> rakudo-moar 906719: OUTPUT«5===SORRY!5===␤Unrecognized regex metacharacter < (must be quoted to match literally)␤at <tmp>:1␤------> 3say '123abch' ~~ /<7⏏050 .. 9 a .. f + [g]>+/␤Regex not terminated.␤at <tmp>:1␤------> 3say '123abch' ~~ /<7⏏050 .. 9 a .. …»

[05:06] <seatek> m: say '123abch' ~~ /<[0 .. 9 a .. f] + [g]>+/

[05:06] <camelia> rakudo-moar 906719: OUTPUT«｢123abc｣␤»

[05:06] <seatek> m: say '123abch' ~~ /<+[0 .. 9 a .. f] + [g]>+/

[05:06] <camelia> rakudo-moar 906719: OUTPUT«｢123abc｣␤»

[05:06] <seatek> hmm

[05:15] *** mohae_ left
[05:16] *** mohae joined
[05:17] *** flexibea` left
[05:19] *** seatek left
[05:22] *** Cabanossi left
[05:24] *** Cabanossi joined
[05:36] *** dataf4l left
[05:38] *** Actualeyes left
[05:38] *** pierre_ joined
[05:38] *** Actualeyes joined
[05:43] *** pierre_ left
[05:47] *** msanderson joined
[05:50] *** wamba left
[05:51] *** domidumont joined
[05:52] *** msanderson left
[05:53] *** circ-user-8mgj7 joined
[05:53] *** aborazmeh joined
[05:53] *** aborazmeh left
[05:53] *** aborazmeh joined
[05:55] *** domidumont left
[05:56] *** domidumont joined
[05:57] *** RabidGravy joined
[05:58] <circ-user-8mgj7> NICK msanderson

[05:58] <circ-user-8mgj7> about

[05:58] <circ-user-8mgj7> ABOUT

[05:59] <circ-user-8mgj7> sigh

[06:01] *** circ-user-8mgj7 is now known as msanderson

[06:05] *** pierre_ joined
[06:15] *** salva joined
[06:15] *** salva left
[06:17] *** msanderson left
[06:21] *** grondilu joined
[06:23] *** neuraload joined
[06:27] *** wamba joined
[06:28] *** darutoko joined
[06:28] *** firstdayonthejob joined
[06:37] *** FROGGS joined
[06:37] *** firstdayonthejob left
[06:39] *** abraxxa joined
[06:45] *** wamba left
[06:46] *** Xliff joined
[06:47] *** kjs_ joined
[06:50] *** bjz joined
[06:53] *** wamba joined
[06:56] *** bjz left
[06:57] *** aborazmeh left
[07:00] *** rindolf joined
[07:02] *** ufobat joined
[07:02] *** bjz joined
[07:03] *** bjz left
[07:03] <andrzejku> hello

[07:03] <andrzejku> good morning

[07:03] <FROGGS> morning andrzejku 

[07:03] *** rurban joined
[07:07] *** kjs_ left
[07:10] *** pierre_ left
[07:15] *** domidumont left
[07:16] *** domidumont joined
[07:17] *** jcallen_ joined
[07:18] *** Timbus_ left
[07:18] *** Timbus joined
[07:19] *** pierre_ joined
[07:19] *** bjz joined
[07:20] *** Actualeyes left
[07:20] *** Actualeyes joined
[07:23] *** bjz left
[07:23] *** pierre_ left
[07:25] *** zakharyas joined
[07:25] *** pdcawley joined
[07:26] *** bjz joined
[07:26] *** CIAvash joined
[07:26] *** flexibeast joined
[07:30] *** canopus left
[07:31] *** lizmat joined
[07:35] *** nadim joined
[07:38] *** kjs_ joined
[07:38] *** canopus joined
[07:43] *** wamba left
[07:43] *** dakkar joined
[07:45] *** kjs_ left
[07:46] *** wamba joined
[07:50] *** pierre_ joined
[07:52] *** user9 joined
[07:53] *** yqt joined
[07:54] *** jargan is now known as jast

[08:01] *** jonas3 joined
[08:02] <El_Che> morning

[08:04] <andrzejku> El_Che: communist?

[08:04] *** rindolf left
[08:07] *** espadrine joined
[08:07] *** wamba left
[08:08] *** bjz left
[08:09] *** dakkar left
[08:11] *** dakkar joined
[08:12] *** vendethiel- left
[08:12] *** vendethiel joined
[08:16] *** zakharyas left
[08:18] *** abraxxa left
[08:21] *** abraxxa joined
[08:30] *** abraxxa left
[08:30] *** abraxxa joined
[08:36] *** ufobat left
[08:36] *** lizmat left
[08:37] *** lizmat joined
[08:47] *** espadrine left
[08:58] * lizmat clickbaits https://p6weekly.wordpress.com/2016/10/17/2016-42-release-time/

[09:03] *** xinming_ joined
[09:04] *** ufobat joined
[09:05] <El_Che> lizmat: could interest some people on the weekly: https://github.com/nxadm/rakudo-pkg/releases/tag/2016.10 (deb and rpms for 2016.10)

[09:06] <lizmat> El_Che: thanks, will do so next week  :-)

[09:07] *** xinming left
[09:08] *** pierre_ left
[09:10] *** pierre_ joined
[09:23] *** geekosaur left
[09:23] *** bjz joined
[09:24] *** bjz left
[09:25] *** geekosaur joined
[09:25] *** rudolfochrist joined
[09:27] *** kjs_ joined
[09:33] *** kjs_ left
[09:33] *** pdcawley left
[09:39] *** labster left
[09:49] *** rudolfochrist left
[09:51] *** skids joined
[10:06] *** kjs_ joined
[10:09] *** pierre_ left
[10:13] *** skids left
[10:14] *** pierre_ joined
[10:16] *** rindolf joined
[10:19] *** pierre_ left
[10:22] *** pdcawley joined
[10:22] *** bjz joined
[10:24] *** rurban1 joined
[10:26] *** dalek left
[10:27] *** pdcawley left
[10:27] *** mindos left
[10:27] *** jnap_ left
[10:27] *** TEttinger left
[10:27] *** rurban left
[10:28] *** dalek joined
[10:28] *** ChanServ sets mode: +v dalek

[10:28] *** notbenh_ joined
[10:28] *** mindos joined
[10:28] *** jnap_ joined
[10:31] *** pdcawley joined
[10:34] *** zakharyas joined
[10:38] *** kjs_ left
[10:40] <moritz> El_Che: fwiw I'm still planning to create a Debian repo hosted somewhere on *.perl6.org; I've tried the simplest thing that could possibly work on the past weekend, but it didn't work :/

[10:40] *** Gauurof joined
[10:41] *** Gauurof left
[10:44] *** kjs_ joined
[10:47] *** bjz left
[10:52] *** grondilu left
[10:54] *** pdcawley_ joined
[10:55] *** ocbtec joined
[10:55] *** pdcawley left
[10:57] *** pierre_ joined
[10:57] *** pierre_ left
[10:58] *** rurban joined
[10:58] *** rurban left
[11:01] *** rurban1 left
[11:01] *** bjz joined
[11:03] *** pmurias joined
[11:03] <pmurias> hi

[11:04] <moritz> \o pmurias 

[11:06] <masak> oh hai pmurias 

[11:11] *** sftp left
[11:12] *** pierre_ joined
[11:12] <masak> today's word: "gnaborretni"

[11:12] <masak> (something people apparently sometimes call the inverted interrobang)

[11:16] *** sftp joined
[11:17] *** araujo joined
[11:17] *** araujo left
[11:17] *** araujo joined
[11:21] *** kjs_ left
[11:22] *** araujo left
[11:25] <El_Che> moritz: what do you mean? a fully integrated debian/ubuntu pkg? My approach for the monthly rakudo releases differs by having no dependencies and installing everything in /opt/rakudo. The idea is not to have a conflct with a future debian/ubuntu/centos package

[11:26] *** pierre_ left
[11:26] *** pierre_ joined
[11:27] <moritz> El_Che: the charm would be to only have to configure the repo once, and then being able to upgrade (or install new versions) with apt

[11:29] <El_Che> I think the packages are repo friendly -> they have a version and revision number

[11:41] *** pdcawley_ left
[11:41] *** pierre_ left
[11:47] *** pierre_ joined
[11:51] <moritz> yes

[11:52] <moritz> I just need to do a bit of scripting to teach aptly to have several published repos, not just one

[11:57] *** lizmat_ joined
[11:57] *** lizmat left
[12:00] *** CIAvash left
[12:03] *** bjz_ joined
[12:03] *** bjz left
[12:14] *** rindolf left
[12:17] *** vendethiel left
[12:18] *** vendethiel joined
[12:36] *** itaipu joined
[12:36] *** Actualeyes left
[12:38] *** kjs_ joined
[12:46] *** sufrostico joined
[12:46] *** Derperperd joined
[12:50] *** kjs_ left
[12:50] *** Actualeyes joined
[12:57] *** raiph joined
[12:58] <Woodi_> hi #perl6 :)

[12:58] <iBakeCake> \o

[12:59] <Woodi_> after git was invented it's possible, that someday we would like to have "versions" being like switching branches. hmm, or maybe just drop thet fs thing asap ? ;)

[13:00] <raiph> hi all

[13:00] *** kjs_ joined
[13:00] <iBakeCake> hi

[13:00] <Woodi_> yo raiph :)

[13:01] *** kjs_ left
[13:02] <[Coke]> m: StructObj.new

[13:02] <camelia> rakudo-moar 20d37a: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    StructObj used at line 1␤␤»

[13:02] <raiph> iBakeCake: clicking "Run this code" buttons on http://perl6.party/post/IRC-Client-Perl-6-Multi-Server-IRC-Module yields "Could not find IRC::Client"

[13:04] <iBakeCake> raiph: yeah, the widgets only run anything glot.io can run. In the alternate universe with non-lazy Zoffix unrunnable code samples have the feature disabled :)

[13:04] <dalek> doc: 420e381 | coke++ | doc/Language/nativecall.pod6:

[13:04] <dalek> doc: use full word

[13:04] <dalek> doc: review: https://github.com/perl6/doc/commit/420e3816f7

[13:07] *** seatek joined
[13:09] <pmurias> Woodi_: just using the HEAD of a git repo is not a replacement for having versions despite what a lot of people want to do

[13:12] *** Derperperd left
[13:29] *** cognominal joined
[13:40] <Woodi_> pmurias: of course that that is just idea. actually for versions like this you need git repo for every file or some set of related files. so fs working like git with set of heads :)

[13:46] *** aborazmeh joined
[13:46] *** aborazmeh left
[13:46] *** aborazmeh joined
[13:47] <Woodi_> ...per user :) there was some plans for fs as db but probably still too futuristic :)

[13:47] <iBakeCake> What's "fs"? File system?

[13:50] *** raiph left
[13:50] *** raiph joined
[13:50] <Woodi_> yes

[13:51] <[Coke]> m: '{'.uniname.say # docs refer to these as curleys, curlys, curlies, braces... 

[13:51] <camelia> rakudo-moar 20d37a: OUTPUT«LEFT CURLY BRACKET␤»

[13:51] <iBakeCake> curleys and curlys look like incorrect spelling of curlies :)

[13:52] <[Coke]> I agree. I'd be happy to use 'curly brackets' everywhere we have the other version.

[13:53] *** skids joined
[13:53] <iBakeCake> sounds good to me

[13:53] *** grondilu joined
[13:53] <seatek> i think they can't really be called curly unless they loop around themselves. they're curvy brackets. :)

[13:53] <gfldex> [Coke]++ # for many words

[13:54] <jnthn> .oO( moustache brackets )

[13:54] <seatek> that works!

[13:54] <dalek> doc/spellcheck: 420e381 | coke++ | doc/Language/nativecall.pod6:

[13:54] <dalek> doc/spellcheck: use full word

[13:54] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/420e3816f7

[13:54] <dalek> doc/spellcheck: fb7ddd2 | coke++ | doc/Language/nativecall.pod6:

[13:54] <dalek> doc/spellcheck: Merge branch 'master' into spellcheck

[13:54] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/fb7ddd22f7

[13:54] <dalek> doc/spellcheck: c61c7d1 | coke++ | xt/ (2 files):

[13:54] <dalek> doc/spellcheck: more words

[13:54] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/c61c7d193c

[13:55] <dalek> doc: cbaed78 | coke++ | doc/Language/rb-nutshell.pod6:

[13:55] <dalek> doc: curley -> curly

[13:55] <dalek> doc: review: https://github.com/perl6/doc/commit/cbaed78495

[13:56] <[Coke]> (curly)? brace appears many times, that's some editing to update that.

[13:56] <[Coke]> I at least killed the 'e'

[13:56] <El_Che> I like the sound of curley

[13:56] <El_Che> sound french

[13:56] <El_Che> s

[13:56] *** wamba joined
[13:58] *** rudolfochrist joined
[13:59] <dalek> doc: df250da | coke++ | doc/Type/Parameter.pod6:

[13:59] <dalek> doc: fix typo

[13:59] <dalek> doc: review: https://github.com/perl6/doc/commit/df250daf97

[14:00] <seatek> I love how integrated types are into the DBIish stuff. You can have variable defined as a DateTime type, and it JUST WORKS for timestamp column types. :)

[14:00] *** khw joined
[14:01] <iBakeCake> Isn't that simply 'cause it stringifies to a timestamp?

[14:01] <iBakeCake> m: DateTime.now.Str.say

[14:01] <camelia> rakudo-moar 20d37a: OUTPUT«2016-10-18T16:01:31.664285+02:00␤»

[14:02] *** cp_ joined
[14:02] <seatek> Could be... but it's not something I'm used to. I'm used to having all kinds of hassle with timestamps

[14:02] <seatek> usually you have to treat them as strings, and insert them in

[14:02] *** brillenfux left
[14:03] <seatek> but it's all transparent now ;)

[14:05] *** aborazmeh left
[14:05] *** kjs_ joined
[14:07] *** zakharyas left
[14:07] *** zakharyas joined
[14:11] <seatek> wow -- it even works backward -- when you load the colum from the database into a variable of a type DateTime, it auto-creates a DateTime object for you based on the string in the database. very Cadillac. :)

[14:11] *** zakharyas left
[14:11] *** dataf4l joined
[14:11] <Woodi_> taking lots of fuel ;)

[14:12] <seatek> hehe :)

[14:13] *** raiph left
[14:13] *** raiph joined
[14:13] <iBakeCake> sub is-approx-rel (|c) { is-approx :rel-tol(1e-15), |c }

[14:13] <iBakeCake> Is that how to curry in Perl 6 or is there some better way?

[14:14] *** kurahaupo__ joined
[14:15] <raiph> m: (&say.assuming: 'foo')() # iBakeCake

[14:15] <camelia> rakudo-moar 20d37a: OUTPUT«foo␤»

[14:16] <iBakeCake> awesome. raiph++

[14:17] *** kjs_ left
[14:17] *** kjs_ joined
[14:18] *** pierre_ left
[14:21] *** raiph left
[14:21] *** raiph joined
[14:24] *** kjs_ left
[14:29] *** wamba left
[14:36] *** bjz_ left
[14:36] *** cdg joined
[14:40] *** jonas3 left
[14:46] *** abraxxa left
[14:48] *** rindolf joined
[14:51] *** raiph left
[14:51] *** raiph joined
[14:53] *** rudolfochrist left
[14:53] *** neuraload left
[14:55] *** timeless joined
[14:56] *** raiph left
[14:56] *** raiph joined
[14:58] *** w4and0er96 left
[15:02] *** giftnuss_ left
[15:02] *** domidumont left
[15:04] *** vendethiel left
[15:04] *** vendethiel joined
[15:06] *** zakharyas joined
[15:07] *** w4and0er96 joined
[15:09] *** giftnuss_ joined
[15:09] *** Spot__ joined
[15:14] *** Lucas_One left
[15:17] *** Spot__ left
[15:19] *** clkao joined
[15:19] *** Spot__ joined
[15:20] *** pdcawley joined
[15:23] *** zakharyas left
[15:24] *** khisanth__ joined
[15:26] *** pdcawley left
[15:28] *** khisanth_ left
[15:29] *** TEttinger joined
[15:31] *** eliasr joined
[15:32] *** Lucas_One joined
[15:33] *** fumlead joined
[15:33] <[Coke]> can we pick a standard tempfile name in doc/Language/exceptions.pod6 that might pass a spell checker?

[15:34] <iBakeCake> Yes!

[15:35] <iBakeCake> s|/tmp/0IeSX_XSWO|my-script.p6|

[15:44] <[Coke]> roger.

[15:45] *** dataf4l left
[15:45] *** Derperperd joined
[15:46] <dalek> doc: 6a285c2 | coke++ | doc/Language/glossary.pod6:

[15:46] <dalek> doc: fix typo

[15:46] <dalek> doc: review: https://github.com/perl6/doc/commit/6a285c2853

[15:46] <dalek> doc: d7ecb33 | coke++ | doc/Language/exceptions.pod6:

[15:46] <dalek> doc: use readable file names

[15:46] <dalek> doc: review: https://github.com/perl6/doc/commit/d7ecb33e24

[15:46] <dalek> doc/spellcheck: cbaed78 | coke++ | doc/Language/rb-nutshell.pod6:

[15:46] <dalek> doc/spellcheck: curley -> curly

[15:46] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/cbaed78495

[15:46] <dalek> doc/spellcheck: df250da | coke++ | doc/Type/Parameter.pod6:

[15:46] <dalek> doc/spellcheck: fix typo

[15:46] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/df250daf97

[15:46] <dalek> doc/spellcheck: 6a285c2 | coke++ | doc/Language/glossary.pod6:

[15:46] <dalek> doc/spellcheck: fix typo

[15:46] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/6a285c2853

[15:46] <dalek> doc/spellcheck: e8a3012 | coke++ | doc/ (3 files):

[15:46] <dalek> doc/spellcheck: Merge branch 'master' into spellcheck

[15:46] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/e8a3012e6c

[15:46] <dalek> doc/spellcheck: d7ecb33 | coke++ | doc/Language/exceptions.pod6:

[15:46] <dalek> doc/spellcheck: use readable file names

[15:46] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/d7ecb33e24

[15:46] <dalek> doc/spellcheck: 882da05 | coke++ | doc/Language/exceptions.pod6:

[15:46] <dalek> doc/spellcheck: Merge branch 'master' into spellcheck

[15:46] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/882da05a1a

[16:03] *** pmurias left
[16:07] *** dataf4l joined
[16:17] *** harmil_wk left
[16:30] *** cdg_ joined
[16:33] *** cdg left
[16:39] *** sufrostico left
[16:40] *** matiaslina joined
[16:47] *** dakkar left
[16:50] *** sufrostico joined
[16:55] *** kent\n left
[16:55] *** kent\n joined
[16:56] *** kent\n left
[16:59] *** kent\n joined
[17:05] *** rindolf left
[17:13] *** rindolf joined
[17:14] *** Actualeyes left
[17:17] <El_Che> moritz: the repo idea would be a good thing. In my opinion standalone rakudo packages (maybe including zef/panda, now a install script) cover a different base than rakudo star (get a full distribution, but you have to compile it) and real OS packages (best QA and integration, but old).

[17:18] *** pdcawley joined
[17:18] <El_Che> moritz: I think specifically of my use case: docker, and applications with limited local dependencies

[17:27] *** cp_ left
[17:27] *** pdcawley left
[17:30] *** hobbs joined
[17:30] *** hobbs left
[17:30] *** hobbs joined
[17:32] *** pdcawley joined
[17:33] *** pdcawley left
[17:33] *** Cabanossi left
[17:33] *** Bucciarati left
[17:33] *** gypsydav15 joined
[17:33] *** rjbs- joined
[17:33] *** hoelzro_ joined
[17:33] *** nemo joined
[17:33] *** Ulti_ joined
[17:33] *** Cabanossi joined
[17:33] *** damnlie joined
[17:33] *** baest joined
[17:33] *** jsimonet joined
[17:33] *** Kaffe joined
[17:33] *** facetious joined
[17:33] *** Jonis joined
[17:33] *** robins joined
[17:33] *** ponbiki joined
[17:33] *** pdcawley joined
[17:33] *** Bucciarati joined
[17:33] *** BooK joined
[17:33] *** ugexe joined
[17:33] *** stmuk joined
[17:34] *** perigrin joined
[17:34] *** domm1 joined
[17:34] *** moritz joined
[17:34] *** hahainternet joined
[17:34] *** go|dfish joined
[17:34] *** nemo is now known as Guest32147

[17:34] *** Peter_R joined
[17:34] *** ponbiki is now known as Guest4979

[17:34] *** spider-mario joined
[17:34] *** luis joined
[17:35] *** emdashcomma joined
[17:36] *** protium joined
[17:36] *** ssm_ joined
[17:36] <skids> .oO(everyone must've had to leave until the firemarshal was gone.)

[17:36] *** girafe joined
[17:37] *** Hotkeys joined
[17:37] *** darutoko left
[17:37] *** chansen_ joined
[17:38] *** domidumont joined
[17:38] *** wamba joined
[17:39] *** zakharyas joined
[17:39] *** Guest4979 is now known as ponpon

[17:39] *** zostay joined
[17:41] *** inokenty left
[17:41] *** ggherdov joined
[17:41] *** mithaldu_ joined
[17:42] *** kipd joined
[17:42] *** peteretep joined
[17:43] *** SmokeMachine____ joined
[17:43] *** Guest32147 is now known as nemo

[17:46] *** tbrowder joined
[17:50] *** pdcawley left
[17:51] *** pecastro joined
[17:53] *** chienjo joined
[17:54] *** chienjo left
[18:00] *** JimmyZ joined
[18:20] *** dataf4l left
[18:21] *** labster joined
[18:21] *** sufrostico left
[18:24] *** itaipu left
[18:25] *** AlexDaniel joined
[18:40] *** itaipu joined
[18:44] *** breinbaas joined
[18:44] <dalek> doc: 31fa161 | (Zoffix Znet)++ | doc/Language/testing.pod6:

[18:44] <dalek> doc: Correct is-approx behaviour with no tolerances

[18:44] <dalek> doc: 

[18:44] <dalek> doc: The function has been made[^1] to DWIM when no explicit tolerances are provided

[18:44] <dalek> doc: instead of assuming a default absolute tolerance of 1e-5, which proved nearly useless

[18:44] <dalek> doc: in real-world use cases.

[18:44] <dalek> doc: 

[18:44] <dalek> doc: [1] https://github.com/rakudo/rakudo/commit/82432a4581d06213990e97a8e8a094444d9991d5

[18:44] <dalek> doc: review: https://github.com/perl6/doc/commit/31fa16175d

[18:47] *** itaipu left
[18:50] *** fumlead left
[18:54] *** itaipu joined
[18:55] *** inokenty joined
[18:55] *** fumlead joined
[18:57] <dalek> doc: 6a93543 | (Zoffix Znet)++ | doc/Language/testing.pod6:

[18:57] <dalek> doc: Mention DWIMMY is-approx uses *absolute* $expected

[18:57] <dalek> doc: 

[18:57] <dalek> doc: ... to figure out what sort of tolerance to use

[18:57] <dalek> doc: review: https://github.com/perl6/doc/commit/6a935432b4

[19:02] <samcv> is there a way to make perl6 let me redefine variables with 'my'? I know that shouldn't be done, i'm just trying to run a bunch of example code and want to check it to make sure nothing else is wrong with it

[19:03] <iBakeCake> samcv: well, it does let you. It simply issues a warning

[19:03] <iBakeCake> samcv: I think if you add CONTROL { when CX::Warn {.resume} }; somewhere at the top of the program it'll do the trick to silence them

[19:04] <iBakeCake> m: CONTROL { when CX::Warn {.resume} }; my $foo = 42; my $foo = 88; say $foo

[19:04] <camelia> rakudo-moar 82432a: OUTPUT«Potential difficulties:␤    Redeclaration of symbol '$foo'␤    at <tmp>:1␤    ------> 3:Warn {.resume} }; my $foo = 42; my $foo7⏏5 = 88; say $foo␤88␤»

[19:04] <iBakeCake> m: CONTROL { default {.^name;} }; my $foo = 42; my $foo = 88; say $foo

[19:04] <camelia> rakudo-moar 82432a: OUTPUT«Potential difficulties:␤    Redeclaration of symbol '$foo'␤    at <tmp>:1␤    ------> 3fault {.^name;} }; my $foo = 42; my $foo7⏏5 = 88; say $foo␤88␤»

[19:04] <iBakeCake> ... or not :/

[19:04] *** sufrostico joined
[19:04] <samcv> yeah that didn't fix it. i get a ton of warnings and it doesn't run

[19:05] <samcv> i'm working to get the learnxinyminutes for perl6 much clearer and make sure 100% of the code is actually valid and has the correct response

[19:05] <iBakeCake> m: class Foo {}; class Foo {}; say 42

[19:05] <camelia> rakudo-moar 82432a: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Redeclaration of symbol 'Foo'␤at <tmp>:1␤------> 3class Foo {}; class Foo7⏏5 {}; say 42␤    expecting any of:␤        generic role␤»

[19:05] <samcv> would be nice to run the whole thing at once, though at least the sections i've worked on i've checked sections of code.

[19:05] <iBakeCake> Yeah, it doesn't let you redefine just any old thing

[19:06] <iBakeCake> Split on lines that start with # and stick stuff into separate files :)

[19:06] <iBakeCake> (or just .EVAL

[19:06] <iBakeCake> )

[19:09] <iBakeCake> m: my $code = Q:to/E/;␤class Foo {};␤# tis just a class␤#hehe␤class Foo {}␤say "hi"␤E␤$code.split(/(^^'#'\N+\n)+/)».EVAL

[19:09] <camelia> rakudo-moar 82432a: OUTPUT«===SORRY!===␤Could not locate compile-time value for symbol Foo␤»

[19:09] <iBakeCake> heee :}

[19:12] <samcv> well # don't always seperate things. i could just seperate it at the spots it redefines things there's like 7 of them or rename the variables. i think it'd be nice to make it able to run

[19:13] <samcv> because the site lets you download a .pl file that has all the code in it

[19:13] <samcv> so not repeating variable names may be the way to go

[19:13] <iBakeCake> +1

[19:13] *** itaipu left
[19:14] <samcv> i think i've fixed the multiple places where pseudocode was used as an example and replaced that with a working example. but i'm sure i'll find more when i fix the variable redefinition

[19:16] <gfldex> samcv: you may want to peek into the following tool that we use to extract examples from the docs. It doesn't use EVAL to make compile time errors explode early. https://github.com/perl6/doc/blob/master/util/extract-examples.p6

[19:17] <samcv> oh nice. great

[19:20] <fumlead> Hi #perl6, could you please help me with:

[19:20] <fumlead> method calc-op:sym<add> ($/) { make [+] $<num>; }

[19:20] <fumlead> What is the [+] ?

[19:20] <fumlead> Is it circumfix operator?

[19:21] <gfldex> m: say [+] 1,2,3; # reduction + operator AKA sum

[19:21] <camelia> rakudo-moar 82432a: OUTPUT«6␤»

[19:21] *** domidumont left
[19:22] <[Coke]> fumlead: https://docs.perl6.org/language/operators#Reduction_Operators

[19:23] <fumlead> [Coke]: thanks, exactly what I want

[19:24] <fumlead> Searching in docs lead me to the array constructor

[19:26] <[Coke]> someone should open a ticket in perl6/docs to make [] point to that.

[19:27] <gfldex> i will fix it right away

[19:27] <iBakeCake> gfldex++

[19:27] *** pyrimidi_ joined
[19:29] <dalek> doc: 6eddfd2 | gfldex++ | doc/Language/operators.pod6:

[19:29] <dalek> doc: index reduction meta operators

[19:29] <dalek> doc: review: https://github.com/perl6/doc/commit/6eddfd203b

[19:31] *** canopus left
[19:32] *** acrussell joined
[19:33] <dalek> doc: 47bbf0a | gfldex++ | doc/Language/operators.pod6:

[19:33] <dalek> doc: index cross meta operator

[19:33] <dalek> doc: review: https://github.com/perl6/doc/commit/47bbf0ac4d

[19:33] <dalek> doc: c58aa6f | gfldex++ | doc/Language/operators.pod6:

[19:33] <dalek> doc: index zip meta operator

[19:33] <dalek> doc: review: https://github.com/perl6/doc/commit/c58aa6f1e3

[19:35] *** pyrimidine joined
[19:35] *** skids left
[19:37] *** pyrimidi_ left
[19:37] *** zakharyas left
[19:43] *** canopus joined
[19:48] *** bjz joined
[19:55] <rindolf> Hi all! Is there any work being done on optimising the performance of sprintf in latest rakudo perl6? Can I help?

[19:56] *** dataf4l joined
[19:58] <timotimo> i don't think anybody has been working on that recently

[19:58] <[Coke]> no one is actively working on sprintf, nope.

[19:58] <timotimo> you can, of course, work on it if you like

[20:02] <[Coke]> let us know if you need pointers on where to dig in.

[20:11] *** Derperperd left
[20:15] *** itaipu joined
[20:21] <samcv> is it correct to say a variable declared with my $var is globally scoped in perl6? idk what do you call the part of the code not in MAIN and just by itself. like how it's scoped

[20:22] <mst> it's still lexically scoped, just to the file

[20:22] <samcv> yeah.

[20:22] <mst> I often refer to that, in perl5, semi-innacurately, as "file scoped"

[20:22] <mst> since it's not accessible from outside the file so it's arguably not global qua global

[20:23] <samcv> yeah. i think that's good i'll call it $file_scoped. that makes it very clear the scope of it

[20:27] *** Ven_ joined
[20:32] *** cooper_ joined
[20:34] *** acrussell left
[20:34] *** cooper_ left
[20:35] *** acrussell joined
[20:42] *** ufobat left
[20:43] *** cooper_ joined
[20:45] *** bjz left
[20:48] *** cpage_ left
[20:50] *** pecastro left
[20:56] *** bjz joined
[20:57] *** matiaslina left
[21:04] *** Ven_ left
[21:05] *** itaipu left
[21:07] *** Lucas_One left
[21:07] *** bjz left
[21:08] *** labster left
[21:10] *** labster joined
[21:14] *** dalek left
[21:15] *** mindos left
[21:15] *** mindos joined
[21:16] *** firstdayonthejob joined
[21:16] *** bjz joined
[21:17] *** Matias[m] left
[21:17] *** M-Illandan left
[21:17] *** enick_966 left
[21:17] *** ilmari[m] left
[21:17] *** tadzik left
[21:17] *** Matthew[m] left
[21:17] *** solarbunny left
[21:19] *** enick_966 joined
[21:19] *** dalek joined
[21:19] *** ChanServ sets mode: +v dalek

[21:20] *** ilmari[m] joined
[21:20] *** Matias[m] joined
[21:20] *** tadzik joined
[21:20] *** cibs left
[21:21] *** cibs joined
[21:22] *** M-Illandan joined
[21:22] *** Matthew[m] joined
[21:23] *** acrussell left
[21:25] *** solarbunny joined
[21:26] *** Lucas_One joined
[21:30] *** cpage_ joined
[21:37] *** bjz left
[21:42] *** fumlead left
[21:45] *** espadrine joined
[21:46] *** yqt left
[21:48] *** sufrostico left
[21:49] *** lostinfog joined
[22:04] *** RabidGravy left
[22:04] *** wamba left
[22:16] <rindolf> [Coke]: hi! Sorry for the late response, and I could use some pointers.

[22:17] <samcv> i think i'm correct about this, but in perl6 hashes are stored similarly to arrays unlike perl 5

[22:17] <samcv> and hashes in perl6 retain their order but perl5 does not. i think in perl 5 it's literally a 'hashtable' in the computer science definition making lookup very fast and deduplicating.

[22:18] <samcv> ok perl6 seems to remove duplicates too, but are the other things i said correct or are they not completely correct?

[22:20] <geekosaur> I think perl6 hashes do not retain order, but the default presentation sorts the keys?

[22:20] <geekosaur> (for some reason)

[22:22] <samcv> ah, so they are not stored the same as arrays right

[22:22] <samcv> that's what i would expect. learnxinyminutes says  ‘Hashes are actually arrays of Pairs’ but i don't think that's correct

[22:23] <samcv> want to double check before i change it :)

[22:23] * geekosaur does not recall actual implementation, sadly

[22:23] <samcv> i know they can be used ‘as’ arrays more easily than perl5 but i *think* they are converted by perl 6

[22:24] <geekosaur> might be more a question for #perl6-dev

[22:24] <samcv> i will try to dig a little more

[22:24] <samcv> i'll ask in there

[22:25] *** FROGGS left
[22:26] <cognominal> m: $_ = 'abcd';  my ($b, $d) = @( m/a(b)c(d)/ ); say $b; say $d

[22:26] <camelia> rakudo-moar eb6907: OUTPUT«｢b｣␤｢d｣␤»

[22:26] <cognominal> m: $_ = 'abcd';  my ($b, $d) = m/a(b)c(d)/; say $b; say $d

[22:26] <camelia> rakudo-moar eb6907: OUTPUT«｢abcd｣␤ 0 => ｢b｣␤ 1 => ｢d｣␤(Any)␤»

[22:26] *** cibs left
[22:27] <cognominal> I thought the @() would be unecessary

[22:27] *** cibs joined
[22:28] <geekosaur> perl5 does that, but perl 6 needs to be more careful or it gets some other use cases wrong

[22:29] <geekosaur> more specifically, m// returns an item ($/), not a list/array-type thing

[22:29] *** BenGoldberg joined
[22:31] *** sufrostico joined
[22:31] <cognominal> geekosaur, I thought the my ($b, $d) would set an array context

[22:32] <cognominal> geekosaur, what use cases ?

[22:32] <geekosaur> any time you have a thing that is an object that presents different scalar vs. array results (as $/ does), you need to provide some way to get either one

[22:33] <cognominal> but again, the my ( ) should set an array context. Or is this Perl 5 thinking ?

[22:33] <geekosaur> if you treat $/ as a single thing, you get the matched string and a list of Pair for captures. if you treat as an array then you just get the captures.

[22:33] <geekosaur> that's p5

[22:33] <geekosaur> p6 doesn't have contexts in that sense

[22:34] <cognominal> I have not done Perl 6 in months, that's my perl 5 background taking over :(

[22:35] <geekosaur> so, a problem with the p5 behavior is that the context at the callsite has action-at-a-distance on the function (cf. wantarray)

[22:35] *** lostinfog left
[22:36] <geekosaur> whereas you'd kinda like functions to be consistent. so p6 does not magically propagate context, you need to tell it what you want (in this case with @()). (but then you end up with things like the single arg rule to produce behavior that people expect that context did in p5...)

[22:44] <timotimo> rindolf: well, first of all you really need to have a benchmark so that you can measure not only improvements that you make, but also to find out what exactly is slow

[22:45] <rindolf> timotimo: OK, sorry, but I need to go to sleep.

[22:45] <rindolf> timotimo: good night.

[22:46] *** itaipu joined
[22:46] *** rindolf left
[22:56] *** aries_liuxueyang joined
[22:58] *** firstdayonthejob left
[23:01] *** pecastro joined
[23:09] *** cdg_ left
[23:10] *** pdcawley joined
[23:10] *** kurahaupo__ left
[23:22] *** espadrine left
[23:29] *** ocbtec left
[23:30] *** girafe left
[23:33] *** skids joined
[23:41] *** pdcawley left
[23:44] *** xinming_ left
[23:58] *** pierre_ joined
[23:58] *** pierre_ left
