[00:04] *** perlawhirl joined
[00:08] *** anomie__ left
[00:14] *** mr-foobar left
[00:24] *** anomie__ joined
[00:27] <anomie__> Do you think an array of Ints and ranges of Ints is the ideal way to represent all emoji characters?

[00:28] <Zoffix> For what purpose?

[00:28] <anomie__> I'm just trying to create a script to print all emoji characters, as odd as that sounds.

[00:29] <Zoffix> ¬Ø\_(„ÉÑ)_/¬Ø

[00:30] <anomie__> Is it possible to type and array with ints an ranges inside?

[00:30] <Zoffix>  How are you determining what's an emoji and what isn't?

[00:30] <anomie__> Wikipedia.

[00:30] <anomie__> https://en.wikipedia.org/wiki/Miscellaneous_Symbols_and_Pictographs

[00:30] <Zoffix> There's a Range type, FWIW

[00:30] <anomie__> The block contains 635 emoji: U+1F300‚ÄìU+1F321, U+1F324‚ÄìU+1F393, U+1F396‚ÄìU+1F397‚Ä¶

[00:31] <anomie__> Right, but would I have to type each member, since not all members are ranges?

[00:31] <Zoffix> You'

[00:31] * Zoffix curses at the keyboard

[00:32] <Zoffix> You'd have to specify all the ranges, sure, as for having to type them... why not use a better data source and parse it?

[00:32] <Zoffix> Like this stuff: http://www.unicode.org/Public/emoji/2.0//emoji-data.txt

[00:32] <Zoffix> There are a couple more files (linked at the top here) http://unicode.org/reports/tr51/#emoji_data

[00:32] *** huggable left
[00:32] <Zoffix> .oO( # and * are Emoji?... )

[00:33] <anomie__> Hmm‚Ä¶ then I have to write a parser.

[00:33] <anomie__> I guess‚Ä¶ I dunno, seems odd.

[00:33] <anomie__> I'd skip #,*, and 0-9

[00:34] <Zoffix> perl -nE 'say $1 if !/^#/ and /^(\S+)/' data-file.txt

[00:34] <Zoffix> that's your "parser" really

[00:34] <Zoffix> Just add 0x at the start of each line and comma at the end and you got all your emojis

[00:34] <anomie__> Haha, okay, but what kind data structure would you parse it into?

[00:35] <Zoffix> An array of Ints and Ranges

[00:35] <anomie__> All right, how do I create that?

[00:35] <Zoffix> m: 0x23CF.WHAT.say

[00:35] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´(Int)‚ê§¬ª

[00:35] <anomie__> Sorry, I started today.

[00:35] <Zoffix> Actually, no ranges, just Int

[00:35] <anomie__> You'd evaluate the ranges and put that in the source?

[00:36] <Zoffix> m: my @a = 0x002A, 0x0030..0x0039, 0x23CF; say @a

[00:36] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´[42 48..57 9167]‚ê§¬ª

[00:36] <Zoffix> m: my @a = 0x002A, |0x0030..0x0039, 0x23CF; say @a

[00:36] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´[42 1..57 9167]‚ê§¬ª

[00:36] <Zoffix> m: my @a = 0x002A, |(0x0030..0x0039), 0x23CF; say @a

[00:36] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´[42 48 49 50 51 52 53 54 55 56 57 9167]‚ê§¬ª

[00:36] <Zoffix> There. Just use the range operator

[00:36] <Zoffix> m: my @a = flat 0x002A, 0x0030..0x0039, 0x23CF; say @a

[00:36] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´[42 48 49 50 51 52 53 54 55 56 57 9167]‚ê§¬ª

[00:36] <Zoffix> even easier

[00:36] <anomie__> Ah, neat.

[00:37] <Zoffix> perl -nE 'print "0x$1, " if !/^#/ and /^(\S+)/' data-file.txt

[00:38] *** pierrot left
[00:39] <Zoffix> And I'd use a set too

[00:39] *** pierre joined
[00:39] <anomie__> Eh?

[00:40] <Zoffix> m: my $emoji = set flat 0x002A, 0x0030..0x0039, 0x23CF; say ^0xFFFFF .grep: * ‚àà $emoji

[00:40] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´(42 48 49 50 51 52 53 54 55 56 57 9167)‚ê§¬ª

[00:40] <anomie__> Wait, but I can't just store all of those in one array, it's not that simple. Some of them are modifies.

[00:40] <Zoffix> Ah, right.

[00:40] <Zoffix> Store them as characters then. An element is an emoji?

[00:40] <Zoffix> ¬Ø\_(„ÉÑ)_/¬Ø

[00:41] <anomie__> Haha, unicode is complicated.

[00:41] <Zoffix> m: "\c[1F468]\c[200D]\c[1F468]\c[200D]\c[1F467]\c[200D]\c[1F466".chars.say

[00:41] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´5===SORRY!5=== Error while compiling /tmp/weDT3FqdDB‚ê§Unrecognized \c character‚ê§at /tmp/weDT3FqdDB:1‚ê§------> 3"\c[7‚èè051F468]\c[200D]\c[1F468]\c[200D]\c[1F467]‚ê§    expecting any of:‚ê§        double quotes‚ê§        term‚ê§¬ª

[00:42] <Zoffix> m: "\x[1F468]\x[200D]\x[1F468]\x[200D]\x[1F467]\x[200D]\x[1F466]".chars.say

[00:42] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´4‚ê§¬ª

[00:42] <Zoffix> m: "\x[1F468]\x[200D]\x[1F468]\x[200D]\x[1F467]\x[200D]\x[1F466]".say

[00:42] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´üë®‚Äçüë®‚Äçüëß‚Äçüë¶‚ê§¬ª

[00:42] <anomie__> Ah, are you trying to make one of those "family" emoji?

[00:44] <Zoffix> Yeah, I was kinda expecting the above to give me 1 for .chars

[00:45] <anomie__> Anyways, this is why I think it's a good exercise to print all possible emoji characters, and no more than that. For example, emoji flags are made with a special range of characters that represent the alphabelt. The way to make a flag emoji is to combine letters from that special alphabet into the county's ISO code.

[00:45] <timotimo> not until that unicode version is finished

[00:45] <timotimo> will it be supported in moarvm, i mean

[00:45] <timotimo> until then, ZWJ will not join emoji together

[00:45] <anomie__> Eh? Will that be Unicode 9.0?

[00:45] <timotimo> i think

[00:47] <Zoffix> Ah, I was just going by this file that has no mention that it's a working draft http://www.unicode.org/Public/emoji/2.0//emoji-zwj-sequences.txt

[00:47] <timotimo> our last unicode update was to Unicode 8.0 on Tue Jun 23 14:51:26 2015 +0200

[00:47] <timotimo> moarvm commit 7575ca4bdfbdeeede400e93b11b2f0e693a5b321

[00:47] <Zoffix> A butterfly should be going in in the next update. We should snag the gold sponsorship :P

[00:48] <anomie__> And Zoffix, that earlier perl parser doesn't work because it creates ranges like 0x1F37E..1F393.

[00:48] <timotimo> for that money, jnthn could spend a lot of time improving stuff ...

[00:48] <Zoffix> Yeah, but that's not marketing :)

[00:49] <Zoffix> anomie__, search replace the two dots to ..0x

[00:50] <anomie__> Ah, right.

[00:53] <timotimo> *shrugs*, i don't claim i know a thing about marketing

[00:53] <timotimo> maybe a gold sponsorship gives us enough eyes on perl6 to generate sufficient interest in it to speed up the process of acquiring money or workforce, and that gets the investmest back more than once over

[00:54] <timotimo> i somehow doubt it, though

[00:54] <anomie__> Derp, I think the repl truncates.

[00:56] <anomie__> Nope, nevermind, just accidental newlines on my part.

[00:57] <Zoffix> If that's all you do, of course it'll be useless. It's all about branding and putting our name next to Adobe and IBM at a price tag not everyone can afford gives the impression of power. 

[00:57] <Zoffix> Then spread around blog posts frequently... people will start to think everyone uses it.

[00:58] <Zoffix> Like how all the movies around when iPhone came out had people using iPhones :P

[00:59] <Zoffix> Or how Howard in the Big Bang Theory wears the alien pin which is supposedly a great secret and has nothing to do with alienware sponsoring the show's laptops :P

[01:01] <anomie__> So, is there a trick to pasting multiple lines into the repl?

[01:01] *** Grrrr left
[01:02] *** Grrrr joined
[01:02] <Zoffix> Yes, just use an editor :P

[01:02] * Zoffix will never understand the repl crowd

[01:06] *** pierre left
[01:07] <anomie__> Hmm‚Ä¶ http://www.unicode.org/Public/emoji/2.0//emoji-data.txt doesn't have everything listed in http://www.unicode.org/emoji/charts/full-emoji-list.html. :/

[01:07] <anomie__> I think I might just make different arrays for different blocks of emoji and work my way up.

[01:08] <Zoffix>  That's not the only file

[01:08] <Zoffix> [20:32:33] <Zoffix> There are a couple more files (linked at the top here) http://unicode.org/reports/tr51/#emoji_data

[01:09] <anomie__> Damn‚Ä¶

[01:09] <anomie__> I might have to make a module for this.

[01:10] <Zoffix> Maybe check some prior art first? http://unicode.party/ is on github, maybe it has some sort of emoji file https://github.com/TruthfulTechnology/unicode.party

[01:10] <anomie__> Yeah.

[01:11] *** TEttinger joined
[01:12] <anomie__> But you know, it was supposed to be a programming exercise, but then it got more complicated.

[01:13] <Zoffix> https://xkcd.com/1319/

[01:14] <anomie__> Haha, yeah‚Ä¶ I think I'll stop now, but that means I gotta find something else to do.

[01:18] <Zoffix> Here are a few suggestions üòú https://github.com/perl6/perl6-most-wanted/blob/master/most-wanted/modules.md

[01:18] <anomie__> Eh? Any low-hanging fruit for someone that discovered perl6 yesterday?

[01:19] <anomie__> I guess there might be.

[01:19] <timotimo> yeah, it's all over the place with regards to difficulty

[01:20] <anomie__> Uh, the gpg module would just be calling GPG directly right? I think I could do that.

[01:21] *** pierre joined
[01:21] <timotimo> there's no libpgp/libgpg or anything?

[01:21] <anomie__> Is there a libgpg? I guess linking with that would be better.

[01:22] <anomie__> My apt-cache just shows libgpg-error and and libgpgme.

[01:22] * timotimo has no clue

[01:23] <anomie__> "GPGME is a wrapper library which provides a C API to access some of the GnuPG functions, such as encrypt, decrypt, sign, verify, ..." I guess this is it.

[01:24] <anomie__> So I guess I'll read some docs and may be have an alpha-quality module tomorrow.

[01:24] <timotimo> cool

[01:24] <Zoffix> Sweet. There's NativeCall in Perl 6 that let's you use C libs directly: http://docs.perl6.org/language/nativecall

[01:25] <anomie__> Awesome.

[01:25] <Zoffix> And this, though it's rather uber-intro and nearly useless: http://perl6.party/post/Perl-6-NativeCall--Look-Ma-Im-A-C-Programmer

[01:26] <anomie__> lol, that title.

[01:28] <anomie__> Hmm, where do I tell it which library a function is from?

[01:28] <geekosaur> is native('library name here')

[01:29] <anomie__> Ah, okay. 

[01:31] <timotimo> i seem to recall someone started building a pluggable logging module, but it's not listed in the modules.md in the most-wanted under "pluggable logging"

[01:32] <anomie__> So, would printf be sub c_printf (Str $input) returns Str is native {printf $input}?

[01:33] <timotimo> not quite

[01:33] <anomie__> Actually, what do you put in native() if you're just using stdlib, not that there's likely to be a reason to.

[01:33] *** molaf left
[01:33] <timotimo> at some point it was just "Str"

[01:34] <anomie__> Great, gnupg.org is down.

[01:35] <timotimo> ugh :(

[01:35] <timotimo> though it should be fully functional in the wayback machine of the internet archive, or even the google cache

[01:35] <anomie__> Hmm‚Ä¶ I see no section 5 manpages for gpg.

[01:35] <anomie__> Yeah.

[01:36] <anomie__> I'm sorry, not section 5, it's be in section 3 I think.

[01:37] <timotimo> other things about your c_printf one: the sub body ought to be empty, and the signature ought to match up with the definition in the header

[01:37] <anomie__> Eh? All right.

[01:38] <timotimo> and if the name of the sub doesn't match the name you're trying to reach (c_printf vs printf), you have to tell it what name to look for with "is symbol"

[01:38] <anomie__> Wait, do I also need to define the symbol then? If I don't, is it assumed to be the name of the subroutine?

[01:38] <timotimo> correct

[01:38] <anomie__> All right.

[01:39] <anomie__> So I guess I just need to look at the header files.

[01:39] <timotimo> yup. if you just want the header files translated, gptrixie will give you a nice head-start

[01:39] <anomie__> Or maybe I could cheat and write a script to parse them.

[01:39] <anomie__> Ah, nice.

[01:39] <anomie__> Of course that exists.

[01:39] <timotimo> yup

[01:43] *** cognominal left
[01:43] <anomie__> So, should I just need to use --functions for something not too complicated like this?

[01:44] *** ilbot3 left
[01:45] *** molaf joined
[01:45] *** kid51 left
[01:47] *** ilbot3 joined
[01:49] *** MadcapJake_afk is now known as MadcapJake

[01:49] *** pierre left
[01:53] <timotimo> just try everything and see what works best, what you'll end up needing, etc

[01:53] <timotimo> i didn't look at gpgme at all yet, but i expect you'll be wanting some enums

[01:55] *** pierre joined
[01:56] *** yqt left
[02:00] *** pierre left
[02:07] *** wamba joined
[02:08] *** pierre joined
[02:16] *** finanalyst joined
[02:45] *** noganex joined
[02:48] *** noganex_ left
[03:05] <raydiak> m: (my @)[;]

[03:05] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´Non-QAST node visited BOOTInt‚ê§Weird node visited: BOOTInt‚ê§Weird node in analyze: BOOTInt‚ê§===SORRY!===‚ê§Unknown QAST node type BOOTInt‚ê§¬ª

[03:05] <raydiak> m: my @[;]

[03:05] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´(signal XFSZ)Non-QAST node visited BOOTInt‚ê§Weird node visited: BOOTInt‚ê§Resultchild 0 can't returns! BOOTInt‚ê§- QAST::Op(callmethod new) ‚ê§  - QAST::WVal(Array) ‚ê§  - QAST::Stmts+{QAST::SpecialArg}(:named<shape>)  ;‚ê§    - 0‚ê§‚ê§Non-QAST node visit‚Ä¶¬ª

[03:06] <Zoffix> I think there's a ticket for that.

[03:07] <raydiak> oh good because I wasn't quite sure how to describe that in english :)

[03:07] *** anomie__ left
[03:07] <diakopter> hehe that's a nice one

[03:11] *** rodarmor left
[03:11] *** |meta left
[03:15] *** khw joined
[03:21] *** pierre left
[03:22] *** aries_liuxueyang left
[03:23] *** mr-foobar joined
[03:23] *** anomie__ joined
[03:24] *** aries_liuxueyang joined
[03:29] *** pierre joined
[03:34] *** pierre left
[03:40] *** finanalyst left
[03:45] *** pierre joined
[03:58] *** adu left
[04:01] *** wamba left
[04:10] *** eiro left
[04:19] *** TakinOver left
[04:20] *** anomie__ left
[04:23] *** eiro joined
[04:28] *** khw left
[04:29] *** pierre left
[04:30] *** Cabanossi left
[04:32] *** huggable joined
[04:33] *** Cabanossi joined
[04:34] *** pierre joined
[04:39] *** pierre left
[04:46] *** perlawhirl left
[04:46] *** perlawhirl joined
[04:47] *** TakinOver joined
[04:50] *** finanalyst joined
[05:00] *** TakinOver left
[05:03] *** TakinOver joined
[05:08] *** TakinOver left
[05:10] *** TakinOver joined
[05:20] *** TakinOver left
[05:23] *** TakinOver joined
[05:30] *** Akagi201 joined
[05:35] *** TakinOver left
[05:35] *** pierre joined
[05:35] *** domidumont joined
[05:37] *** yhn joined
[05:38] *** TakinOver joined
[05:40] *** domidumont left
[05:40] *** domidumont joined
[05:41] *** pierre left
[05:48] *** TakinOver_ joined
[05:48] *** TakinOver left
[05:51] *** rurban joined
[05:55] *** obfusk_ left
[05:58] *** kmongo joined
[05:58] *** domidumont left
[05:59] <kmongo> is it normal to have "Annotation segment overflows end of stream" when using prove?

[05:59] <kmongo> I am seeing this when installing alacryd on arch provided aur package.

[06:01] *** TakinOver_ left
[06:04] *** TakinOver joined
[06:05] *** pierre joined
[06:05] *** ssotka joined
[06:12] *** salv0 left
[06:15] *** domidumont joined
[06:22] *** yhn left
[06:33] *** grassass joined
[06:44] *** kmongo left
[06:48] *** grassass left
[06:51] *** domidumont left
[06:52] *** wamba joined
[06:52] *** yhn joined
[06:52] *** domidumont joined
[06:55] *** RabidGravy joined
[06:57] *** TakinOver left
[06:58] *** nadim joined
[06:58] *** luiz_lha joined
[06:58] *** luiz_lha is now known as Guest24414

[07:00] *** Guest24414 left
[07:00] *** luiz_lha_ joined
[07:01] *** TakinOver joined
[07:05] *** Akagi201_ joined
[07:05] *** Akagi201 left
[07:06] *** TakinOver left
[07:08] *** TakinOver joined
[07:08] *** _mg_ joined
[07:09] <moritz> \o

[07:10] *** yhn left
[07:10] *** [Sno] left
[07:14] *** hcit joined
[07:15] *** TakinOver left
[07:16] *** darutoko joined
[07:24] *** TakinOver joined
[07:27] *** luiz_lha_ left
[07:28] *** ssotka left
[07:28] <RabidGravy> erp

[07:29] *** TakinOver left
[07:31] *** TakinOver joined
[07:31] *** luiz_lha_ joined
[07:33] *** perlawhirl left
[07:33] *** bjz joined
[07:35] *** luiz_lha_ is now known as luiz_lha

[07:36] *** TakinOver left
[07:37] *** rindolf joined
[07:37] *** bjz left
[07:38] *** TEttinger left
[07:39] *** obfusk joined
[07:40] *** brrt joined
[07:43] *** mr-foobar left
[07:48] *** g4 joined
[07:48] *** devtom30 joined
[07:48] *** xinming left
[07:49] *** ufobat joined
[07:49] *** nightfrog left
[07:49] *** xinming joined
[07:49] *** nightfrog joined
[07:49] *** skids left
[07:50] *** TakinOver joined
[07:51] *** abraxxa joined
[07:51] *** zhmylove left
[07:52] *** zhmylove joined
[07:59] *** llfourn left
[07:59] *** Possum left
[08:00] *** llfourn joined
[08:00] *** Possum joined
[08:00] *** firstdayonthejob joined
[08:00] <moritz> beep

[08:03] <teatime> meep meep

[08:04] *** [Sno] joined
[08:04] *** pierre left
[08:04] <brrt> good * moritz

[08:05] <ufobat> morning :)

[08:07] *** ocbtec joined
[08:10] *** pierre joined
[08:14] *** pierre left
[08:20] *** bjz joined
[08:30] <RabidGravy> .tell azawawi just for you I renamed s/LICENSE/LICENCE/g in 53 modules ;-)

[08:30] <yoleaux> RabidGravy: I'll pass your message to azawawi.

[08:32] *** huggable left
[08:33] *** pierre__ joined
[08:40] <RabidGravy> what larks

[08:41] <moritz> huh, we now do british english?

[08:42] <RabidGravy> well *I* do yes

[08:43] <RabidGravy> I think how things are spelled in my modules is entirely down to me isn't it?

[08:45] <moritz> sure

[08:45] <moritz> I'm just surprised you're doing such a mass rename

[08:49] <RabidGravy> well in about three quarters of the modules I had Licence and LICENCE in the README (as I had typed it with the correct spelling) so either the LICENSE file needed to be renamed or the spelling made incorrect

[08:50] <RabidGravy> and frankly it was a ten line shell script to fix them all in bulk

[08:58] *** zakharyas joined
[08:59] *** BenGoldberg left
[09:00] <moritz> alright

[09:03] *** finanalyst left
[09:05] *** finanalyst joined
[09:09] *** brrt left
[09:09] *** devtom30 left
[09:10] *** brrt joined
[09:24] *** devtom30 joined
[09:52] *** jjido joined
[10:16] *** labster left
[10:20] *** bjz_ joined
[10:21] *** bjz left
[10:32] *** azawawi joined
[10:32] *** jjido left
[10:32] <azawawi> .

[10:32] <yoleaux> 08:30Z <RabidGravy> azawawi: just for you I renamed s/LICENSE/LICENCE/g in 53 modules ;-)

[10:33] <azawawi> RabidGravy: grats :)

[10:34] *** _mg_ left
[10:35] <RabidGravy> :)

[10:35] <azawawi> where do I find RAKUDO_ debug environment vars (e.g. RAKUDO_MODULE_DEBUG) ?

[10:36] *** zakharyas left
[10:37] <azawawi> RabidGravy: we still have a big performance problem when chunking a file with multiple classes into one class per file

[10:37] <RabidGravy> I'd just grep the source for a known one and then start from the resulting files :)

[10:37] <Zoffix> I coudl've swore someone was keeping a list on docs.perl6.org

[10:38] *** finanalyst left
[10:38] <RabidGravy> it's entirely possible

[10:38] *** wamba left
[10:39] <Zoffix> nothing's there.... I might've been looking on a proposal to add stuff in a gist :/

[10:41] <dalek> doc: 5a27d4b | (Zoffix Znet)++ | doc/Language/modules-extra.pod:

[10:41] <dalek> doc: Add Test::When to the list

[10:41] <dalek> doc: review: https://github.com/perl6/doc/commit/5a27d4b665

[10:42] <azawawi> RAKUDO_MODULE_DEBUG was introduced in 2012.06 (https://perlgeek.de/blog-en/perl-6/2012-news-in-rakudo-2012-06-release.html)

[10:42] <dalek> doc: c7294bb | (Zoffix Znet)++ | doc/Language/modules-extra.pod:

[10:42] <dalek> doc: HTTPS is what the cool kids use

[10:42] <dalek> doc: review: https://github.com/perl6/doc/commit/c7294bb934

[10:43] <azawawi> got it ... https://github.com/rakudo/rakudo/blob/nom/docs/running.pod :)

[10:43] *** _mg_ joined
[10:45] *** pierre__ left
[10:46] *** kaare_ joined
[10:46] *** iH2O joined
[10:47] <RabidGravy> I started looking at doing pod6 -> troff this morning, realised I had almost completely put troff out of my mind since I last had to deal with it around the turn of the century and abandoned the idea

[10:48] <Zoffix> k, it was tbrowder in a yet unmerged branch: https://github.com/perl6/doc/compare/master...tbrowder:perl6-docs

[10:50] <Zoffix> .ask tbrowder any word on merging this? I recall you received positive feedback on adding a new tab: https://github.com/perl6/doc/compare/master...tbrowder:perl6-docs

[10:50] <yoleaux> Zoffix: I'll pass your message to tbrowder.

[10:54] *** kid51 joined
[11:01] *** g4 left
[11:06] *** jjido joined
[11:07] *** aries_liuxueyang left
[11:14] *** devtom30 left
[11:15] *** aries_liuxueyang joined
[11:15] *** iH2O left
[11:15] <Zoffix> heh... and this marks my point of stopping reading reddit comments on my posts https://www.reddit.com/r/programming/comments/4llkov/perl_6_handson_workshop_weatherapp_part_3_writing/d3ou9t9

[11:15] <Zoffix> Or even this. I don't know how pathetic you have to be to even bother writing that https://www.reddit.com/r/programming/comments/4llkov/perl_6_handson_workshop_weatherapp_part_3_writing/d3omkbc

[11:19] <RabidGravy> Personally I have an even better solution: ignore reddit entirely

[11:21] <Zoffix> You mean not even post links to posts?

[11:21] <Zoffix> Then I'm entirely posting to the Perl 6 bubble and the same handful of people :)

[11:22] <brrt> and, this would be bad how?

[11:22] <brrt> hmm

[11:22] <brrt> cause you're writing them to get attention, of course

[11:23] <RabidGravy> well reddit is only a slightly larger handful of the same geeks, trolls and weirdos that used to inhabit slashdot back in the day

[11:23] <brrt> unlike slashdot, mainstream media knows about it

[11:24] *** kid511 joined
[11:25] <RabidGravy> well at the time of the heyday of slashdot the mainstream media hardly knew what the internet was

[11:25] *** kid51 left
[11:25] *** devtom30 joined
[11:26] <profan> "it's a series of tubes"

[11:26] *** rurban1 joined
[11:27] *** finanalyst joined
[11:29] <jnthn> .oO( "it's a series of trolls" )

[11:29] *** ZoffixMobile joined
[11:30] *** rurban left
[11:31] <brrt> that is definitely true

[11:33] <ZoffixMobile> brrrt, on of the benefits of being autistic is you don't care about attention or what others think of you. I write for the entirely selfish purpose of thoroughly learning the topic and I spread my posts wide because I'm not delusional enough to think that harping on to the same group of people about the same stuff they already know will make Perl 6 anything but a neat language you can't easily get paid for writing.

[11:33] <ZoffixMobile> *one of the benefits...

[11:33] <brrt> one of the drawbacks is caring about your own spelling mistakes :-P

[11:34] <ZoffixMobile> :p

[11:34] <brrt> fwiw, i enjoy the posts

[11:34] <brrt> although i guess you just said you didn't care :-)

[11:35] <ZoffixMobile> RabidGravy, I also post to hackernews, but I rarely gwt any more than 2 upvotes there :)

[11:35] <ZoffixMobile> Well, other than the few items that made the front page.

[11:36] <ZoffixMobile> and I'm unsure what other non-perl-specific venues are out there.

[11:36] *** kid511 left
[11:37] *** kid51 joined
[11:38] *** pierre__ joined
[11:43] *** rurban1 left
[11:49] *** zakharyas joined
[11:50] <RabidGravy> I ought to write about stuff more, it's just that motivation and ideas never happen at the same time

[11:51] *** xdbr joined
[11:52] <RabidGravy> on the other hand I also ought to finish the now seven modules that I have sitting around here

[11:54] <ZoffixMobile> :o

[11:55] *** jjido left
[11:57] <RabidGravy> two of which are largely complete apart from the documentation and other procrastination

[11:58] *** dbr joined
[12:01] *** xdbr left
[12:02] *** dbr left
[12:04] *** dbr joined
[12:07] *** Ven joined
[12:07] *** Ven left
[12:08] *** dbr left
[12:10] *** ZoffixMobile left
[12:14] *** dbr joined
[12:16] *** |meta joined
[12:16] *** aries_liuxueyang left
[12:18] *** aries_liuxueyang joined
[12:27] *** pierre__ left
[12:32] *** azawawi left
[12:32] *** huggable joined
[12:33] *** pierre__ joined
[12:33] *** dbr left
[12:39] *** dbr joined
[12:39] <brrt> i ought to write more about the JIT progress, but i'd rather make actual progress, which is slow enough as it is

[12:39] *** zakharyas left
[12:44] *** dbr1 joined
[12:44] *** rurban joined
[12:44] *** rurban left
[12:45] <nine> brrt++ # making progress

[12:45] <yoleaux> 28 May 2016 10:00Z <llfourn> nine: hoelzro++ has been able to trigger the precomp bug on the first run through with the right dependency tree (in case you missed it) RT #128268

[12:45] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128268

[12:46] *** dbr left
[12:46] <nine> llfourn: thanks! From a first glance it matches my findings from #128156

[12:46] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128156

[12:49] <llfourn> nine: yeah I suppose that the two dependency branches ending in same node create a race condition where the last one to load it tries load it in the same Instant as the first one precompiled it

[12:51] <nine> llfourn: I hope that tonight I get pmurias++' suggestion of using checksums instead of time stamps up and running. That should neatly solve those issues.

[12:52] *** samb1 left
[12:53] *** sufrostico joined
[12:53] *** dbr2 joined
[12:54] <llfourn> hmmm interesting idea. Store the checksum in the file name?

[12:55] *** jjido joined
[12:55] *** dbr1 left
[12:59] *** cognominal joined
[13:01] * llfourn goes to watch GoT

[13:03] *** samb1 joined
[13:11] *** dbr2 left
[13:11] *** xdbr joined
[13:12] *** jjido left
[13:16] *** Akagi201_ left
[13:23] *** sufrostico left
[13:26] *** rindolf left
[13:27] *** MasterDuke joined
[13:31] *** rindolf joined
[13:31] *** _mg__ joined
[13:31] *** _mg_ left
[13:31] *** _mg__ is now known as _mg_

[13:32] <xdbr> hey there -- i would like to build a regex dynamically from a string, including captures, but the parens match literally instead of being interpreted as meta-characters. is this expected behavior?

[13:32] <RabidGravy> yes

[13:32] *** rurban1 joined
[13:33] <xdbr> okay... how can i "promote" the parens to be meta-characters?

[13:33] <jnthn> /$some-string/ will always literally match the string. /<$some-string>/ will treat it as regex syntax and compile it

[13:33] <xdbr> ah dang!

[13:33] <jnthn> But note that to caputre you'll likely need something like /<somename=$some-string>/ or so

[13:34] <xdbr> jnthn: i'm trying that

[13:35] <xdbr> hmm

[13:35] <xdbr> p6: my $rx=rx"(some) foo"; say "some foo" ~~ /<some=$rx>/

[13:35] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´Nil‚ê§¬ª

[13:36] <jnthn> p6: my $rx=rx"(some) ' ' foo"; say "some foo" ~~ /<some=$rx>/

[13:36] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´ÔΩ¢some fooÔΩ£‚ê§ some => ÔΩ¢some fooÔΩ£‚ê§  0 => ÔΩ¢someÔΩ£‚ê§¬ª

[13:36] <xdbr> aah much better

[13:36] <jnthn> whitespace is syntax 

[13:36] <xdbr> thanks jnthn, I still need to get used to p6 regexes more

[13:36] <xdbr> it should have been obvious, but well...

[13:37] <jnthn> Aside from the various syntax changes, the two key things to know are 1) regexes are a real, compiled, sub-language rather than just special strings, and 2) any kind of nested matches form a tree

[13:38] * jnthn bbi15 :)

[13:38] <xdbr> right

[13:46] <xdbr> right

[13:53] *** AlexDaniel joined
[13:56] <AlexDaniel> raydiak: #127473

[13:56] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=127473

[13:56] <AlexDaniel> m: (;) # golfed down

[13:56] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´(signal XFSZ)Non-QAST node visited BOOTInt‚ê§Weird node visited: BOOTInt‚ê§Resultchild 0 can't returns! BOOTInt‚ê§- QAST::Stmts :BY<comp_unit ua u> :context<sink> (;) # golfed down‚ê§  - QAST::Stmt :BY<comp_unit ua u u> :context<sink> :final (;) # golfed d‚Ä¶¬ª

[13:59] <AlexDaniel> raydiak: do you think that this title describes the problem? :)

[14:00] *** itaipu joined
[14:06] <MasterDuke> i've been looking at RT #128210, but there's not much documentation on the ‚âÖ operator

[14:06] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128210

[14:06] <MasterDuke> if i change its precedence in Grammar.nqp to '%structural' from '%chaining', then 'my $x = 0; say $x ‚âÖ 0 :tolerance(1e-3)' works

[14:06] <MasterDuke> not surprisingly then, 'say so 1 ‚âÖ 1 ‚âÖ 1' breaks with the LTA error message "Only identical operators may be list associative; since '=~=' and '=~=' differ, they are non-associative and you need to clarify with parentheses"

[14:07] <MasterDuke> i can't seem to find any other infix chaining operators that take adverbs as examples

[14:09] *** ggoebel114 left
[14:15] *** mohae joined
[14:18] <AlexDaniel> MasterDuke: https://perl6advent.wordpress.com/2013/12/10/day-10-adverbly-adverby-adverbs/

[14:19] <AlexDaniel> MasterDuke: ‚ÄúAdverbs on Operators‚Äù

[14:19] <AlexDaniel> MasterDuke: maybe that will help

[14:20] <tadzik> o/ #perl6

[14:20] <MasterDuke> AlexDaniel: ha, i have that open in another tab. but it seems to be more describing how things should be (or were then). the example '1 / 3 :round' currently fails with "Unexpected named paramter 'round' passed"

[14:21] <AlexDaniel> MasterDuke: yeah

[14:21] <AlexDaniel> MasterDuke: ‚âÖ was added right before Christmas, if I'm not mistaken

[14:21] <AlexDaniel> so I don't think that you will find it in the docs

[14:22] <AlexDaniel> I mean, in specs

[14:23] <MasterDuke> it's not in the specs at all, p6docs just has it in its list of texas operators

[14:25] *** sufrostico joined
[14:25] *** Akagi201 joined
[14:26] *** rurban1 left
[14:27] <MasterDuke> if i figure out chaining and adverbs in general i would think that operator in particular wouldn't be to hard to fix

[14:29] *** pierre__ left
[14:29] <AlexDaniel> MasterDuke: when :tolerance was added?

[14:29] <MasterDuke> i was also looking at the EXPR method in Actions.nqp, which i can hack at to get the example in the RT to work, but many other things break

[14:30] <AlexDaniel> MasterDuke: e.g. here is when ‚âÖ was introduced: https://github.com/rakudo/rakudo/commit/d831a4871029b7de5899506d15fb5c9ae358f4af

[14:31] <MasterDuke> looks like it was 'e3c591a1 (TimToady            2015-11-28 20:10:43 -0800 254)'

[14:31] <MasterDuke> according to git blame

[14:33] <AlexDaniel> it feels weird that it was added but not tested ¬Ø\_(„ÉÑ)_/¬Ø

[14:34] *** rindolf left
[14:35] <AlexDaniel> MasterDuke: yea, no tests for the adverb :(

[14:41] *** AlexDaniel left
[14:47] *** nadim left
[14:47] *** ocbtec left
[14:48] *** ocbtec joined
[14:51] *** Khisanth left
[14:55] *** ocbtec left
[14:58] *** brrt left
[15:02] *** devtom30 left
[15:05] *** Khisanth joined
[15:09] *** zakharyas joined
[15:15] *** cosarara left
[15:16] <nine> -win 45

[15:16] *** cosarara joined
[15:17] *** neuron joined
[15:18] *** domidumont left
[15:18] *** abraxxa left
[15:20] *** TEttinger joined
[15:21] *** neuron left
[15:24] <literal> https://doc.perl6.org/type/Bag <-- there's a code example using .kxxv() but that method is not documented

[15:27] *** khw joined
[15:28] *** maybekoo2 joined
[15:34] *** jj joined
[15:35] *** jj is now known as Guest40390

[15:36] *** Guest40390 left
[15:36] *** wamba joined
[15:37] *** kid51 left
[15:41] *** sufrostico left
[15:42] <mst> Zoffix: lesson learned: when showing test code, show both success and failure outputs since most people aren't familiar with just how much information you get

[15:46] *** rurban joined
[15:47] *** sufrostico joined
[15:51] *** _mg_ left
[15:57] *** kmongo joined
[15:57] *** kmongo left
[15:58] *** cgfbee left
[15:58] *** zakharyas left
[15:59] *** ufobat left
[16:00] *** ZoffixW joined
[16:01] <ZoffixW> mst, to be fair, that'll be in Part 4. If you run the tests at this point you'll just get an error that Weather::Service is not found.

[16:02] <mst> ZoffixW: sure. but still, some sort of tiny example would've cleared up a subthread's worth of confusion

[16:02] <mst> I'm not saying your plan didn't make sense. I'm saying apparently it failed to account for humans.

[16:02] <ZoffixW> I wonder if other professions have similar arguments about their tools and materials.... "I've never used that lumber, but just by looking at it I know it abjectly sucks"

[16:02] <ZoffixW> mst, sure, I can acknowledge that :)

[16:03] <ugexe> the majority of the US car industry is like that

[16:03] <ZoffixW> :o

[16:03] <mst> ZoffixW: writing tutorials/docs is at least in part a journey of "wait, they assumed WHAT?!"

[16:06] <ZoffixW> I'm not doing any more of these "workshops." Gonna stick to smaller things I can shove into a single article.

[16:07] <ugexe> i dunno, that guy just seemed like he wanted to disagree with everything from the star

[16:07] <ugexe> start

[16:07] <mst> there was more than one confused person in the same thread

[16:07] <mst> once is accident, twice is coincidence, three times maybe the common factor is you

[16:08] *** rindolf joined
[16:08] <ZoffixW> I guess my assumption was TAP was a widely used thing and not a Perl thing

[16:09] <ugexe> on reddit i'd be willing to accept net confusion over gross

[16:13] <ugexe> "Its not just C. I fully expect at some point, companies will cry out for maintainers in numerous "dead" languages that still pay the bills somewhere. So don't forget your Perl!"

[16:14] <ugexe> i mean thats one of the 'confused' people's comments. something tells me his confusion might be a bit... unconventional 

[16:19] *** kurahaupo joined
[16:19] *** kurahaupo left
[16:19] *** jjpereira joined
[16:21] *** jjpereira left
[16:29] *** TakinOver left
[16:32] *** [Sno] left
[16:32] *** TakinOver joined
[16:32] *** huggable left
[16:35] *** cgfbee joined
[16:36] *** itaipu left
[16:36] *** cfloare joined
[16:36] *** [Sno] joined
[16:37] *** skids joined
[16:40] <ugexe> panda fails trying to install modules that are already installed unless panda itself installed it?

[16:41] *** itaipu joined
[16:42] *** [Sno] left
[16:45] *** grondilu left
[16:45] *** grondilu joined
[16:46] *** Akagi201 left
[16:47] *** TakinOver left
[16:48] *** cfloare left
[16:49] *** cgfbee left
[16:50] *** ocbtec joined
[16:50] *** TakinOver joined
[16:53] *** ZoffixW left
[16:57] *** iH2O joined
[16:59] *** TakinOver left
[17:01] *** iH2O left
[17:03] *** rurban left
[17:05] *** khw left
[17:06] *** ZoffixW joined
[17:06] <ZoffixW> Does anyone have any ideas for https://rt.perl.org/Ticket/Display.html?id=128283 ? It's *almost* working :/

[17:07] <ZoffixW> jnthn, you were named in it as a call frame expert. If you have time, take a look :)

[17:07] *** sufrostico left
[17:09] <dogbert17> evening #perl6

[17:09] *** finanalyst left
[17:09] <ZoffixW> \o

[17:10] <dogbert17> another day another documentation gist, this time for method 'print-nl' in IO::Handle  -  https://gist.github.com/dogbert17/ca88f9827116cbc8db3b5c92096123c4

[17:10] *** rurban1 joined
[17:10] <dogbert17> looking for feedback :)

[17:12] <ZoffixW> m: say $=:: # infiniloop :P

[17:12] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´(timeout)¬ª

[17:13] <gfldex> well golfed :)

[17:13] *** itaipu left
[17:14] <ZoffixW> dogbert17, just push it to master :)

[17:15] <dogbert17> ZoffixW: thx, it will be done :)

[17:15] *** rightfold joined
[17:15] <rightfold> time to write some Perl 6 code again

[17:16] <ZoffixW> \o/

[17:16] <timotimo> cool :)

[17:16] <ZoffixW> rightfold, what prompted it? 

[17:16] *** TakinOver joined
[17:16] *** cgfbee joined
[17:16] *** rurban1 left
[17:17] *** cfloare joined
[17:17] *** rurban joined
[17:18] *** rurban left
[17:18] *** aries_liuxueyang left
[17:18] <rightfold> I'm writing a code optimization library in Rust and I need something that generates input for it, for which I need a parser, which is the easiest to do in Perl 6

[17:19] <ZoffixW> cool

[17:19] <rightfold> input language is the simply typed lambda calculus

[17:19] *** sufrostico joined
[17:20] *** aries_liuxueyang joined
[17:20] *** spider-mario joined
[17:22] <timotimo> dogbert17: it'd probably be good to mention the attribute that stores the nl-out

[17:22] <timotimo> m: say $*OUT.nl-out.perl

[17:22] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´"\n"‚ê§¬ª

[17:23] <timotimo> m: $*OUT.nl-out = " END OF LINE"; say "HELLO"; say "HOW ARE YOU"

[17:23] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´HELLO END OF LINEHOW ARE YOU END OF LINE¬ª

[17:23] *** rurban1 joined
[17:25] *** TakinOver left
[17:25] *** [Sno] joined
[17:26] *** rurban1 left
[17:26] <dalek> doc: 318a5d8 | (Jan-Olof Hendig)++ | doc/Type/IO/Handle.pod:

[17:26] <dalek> doc: Added docs to method print-nl in class IO::Handle

[17:26] <dalek> doc: review: https://github.com/perl6/doc/commit/318a5d8023

[17:27] <geekosaur> shoulda been " STOP "

[17:27] <timotimo> what do i know :)

[17:27] <geekosaur> old time telegraph operator :p

[17:27] <dogbert17> timotimo: oops missed your msg, will fix it later :)

[17:28] <RabidGravy> do people use Telex any more?

[17:28] <timotimo> OK :)

[17:29] <geekosaur> last I saw of it was in the 80s sometime. MCI Mail supported various older protocols

[17:30] <geekosaur> (funny, sending a bug report via telex got a response when phone had been completely ineffective...)

[17:30] <ZoffixW> :o 80s!

[17:30] <ZoffixW> I wasn't even born yet!

[17:35] *** TakinOver joined
[17:37] <RabidGravy> yeah I worked somewhere in the 80s that had one

[17:39] *** labster joined
[17:39] *** domidumont joined
[17:40] *** itaipu joined
[17:40] *** TakinOver left
[17:41] <RabidGravy> mind at that time I was working in film post production and the new fangled digital video edit suites used to store the edit sessions on 8" floppies

[17:42] <ZoffixW> .oO( 8"?? )

[17:42] <RabidGravy> (that is of course the automation data rather than the actual video, that was still on tapes)

[17:44] <ZoffixW> Is there a way to recurse through callers comehow?

[17:44] <ZoffixW> m: my $caller = CALLER::; say $caller; say $caller::CALLER::;

[17:44] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´PseudoStash.new(())‚ê§(Any)‚ê§¬ª

[17:45] *** itaipu left
[17:47] *** [Sno] left
[17:47] <ugexe> m: sub foo { say OUTERS:: }; sub bar2 { foo() }; sub bar { bar2() }; bar(); # it looks to be buried in here, so probably someway

[17:47] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´PseudoStash.new(("!UNIT_MARKER" => !UNIT_MARKER,"\$!" => Nil,"\$/" => Nil,"\$=finish" => Mu,"\$=pod" => [],"\$?PACKAGE" => GLOBAL,"\$_" => Any,"\$¬¢" => Nil,"\&bar" => sub bar () { #`(Sub|67396616) ... },"\&bar2" => sub bar2 () { #`(Sub|67402848) ... },"\&‚Ä¶¬ª

[17:49] *** sufrostico left
[17:49] <timotimo> there's CALLERS

[17:49] <timotimo> maybe you're more interested in CLIENT, perhaps?

[17:50] *** sufrostico joined
[17:50] <ZoffixW> Are those documented anywhere?

[17:50] <ZoffixW> I'm trying to locate a place where a custom op is defined so I could call it.

[17:50] <ZoffixW> m: {{ say CALLERS:: }}

[17:50] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´PseudoStash.new(("\$*DISPATCHER" => Mu,"\$_" => Any))‚ê§¬ª

[17:51] <ZoffixW> m: {{ say OUTERS:: }}

[17:51] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´PseudoStash.new(("\$*DISPATCHER" => Mu,"\$_" => Any))‚ê§¬ª

[17:51] <ZoffixW> m: {{ say CORE::CLIENT:: }}

[17:51] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´Cannot call infix:<===>(Mu, Mu); none of these signatures match:‚ê§    ($?)‚ê§    (\a, \b)‚ê§    (Int:D \a, Int:D \b)‚ê§    (int $a, int $b)‚ê§    (Num:D \a, Num:D \b)‚ê§    (Num $ where { ... }, Num $ where { ... })‚ê§    (num $a, num $b --> Bool)‚ê§    (‚Ä¶¬ª

[17:51] <llfourn> locate a place where a custom op is defined that isn't in scope?

[17:52] <ugexe> m: sub foo { say CALLERS:: }; sub bar2 { foo() }; sub bar { bar2() }; bar()

[17:52] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´Cannot find method 'WHICH': no method cache and no .^find_method‚ê§  in sub foo at /tmp/uOPzGjuBMI line 1‚ê§  in sub bar2 at /tmp/uOPzGjuBMI line 1‚ê§  in sub bar at /tmp/uOPzGjuBMI line 1‚ê§  in block <unit> at /tmp/uOPzGjuBMI line 1‚ê§‚ê§¬ª

[17:52] <ZoffixW> llfourn, right

[17:52] <llfourn> CALLER::LEXICAL:: #maybe

[17:52] <timotimo> yous hould perhaps be able to get it via callframe

[17:54] *** jjido joined
[17:54] <ZoffixW> Is it possible for me to get access to hack? This script is still not generating what it's supposed to: https://github.com/perl6/mu/blob/master/util/update-design.perl6.org.sh

[17:54] <timotimo> why don't you already have access to hack? :)

[17:54] <ZoffixW> Never asked

[17:55] <timotimo> desired username?

[17:55] <ZoffixW> zoffix

[17:57] <ugexe> m: sub foo { say callframe($_).code.name for 0..*; }; sub bar2 { foo() }; sub bar { bar2() }; bar(); # on the callframe note

[17:57] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´‚ê§sink-all‚ê§sink‚ê§foo‚ê§bar2‚ê§bar‚ê§<unit>‚ê§Method 'name' not found for invocant of class 'Mu'‚ê§  in sub foo at /tmp/Ou4d1lIj8a line 1‚ê§  in sub bar2 at /tmp/Ou4d1lIj8a line 1‚ê§  in sub bar at /tmp/Ou4d1lIj8a line 1‚ê§  in block <unit> at /tmp/Ou4d‚Ä¶¬ª

[17:59] <ZoffixW> m: sub foo { say callframe($_).code.name for 0..*; }; sub bar2 { foo() }; sub bar {  }; bar2();

[17:59] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´‚ê§sink-all‚ê§sink‚ê§foo‚ê§bar2‚ê§<unit>‚ê§Method 'name' not found for invocant of class 'Mu'‚ê§  in sub foo at /tmp/Gr2hkMuRkP line 1‚ê§  in sub bar2 at /tmp/Gr2hkMuRkP line 1‚ê§  in block <unit> at /tmp/Gr2hkMuRkP line 1‚ê§‚ê§¬ª

[18:00] <ZoffixW> I probably should give up with this. Over my head :/

[18:04] <ZoffixW> zoffix is not in the sudoers file.  This incident will be reported.

[18:04] * ZoffixW runs

[18:04] <ZoffixW> You won't catch me, copper! :P

[18:04] <ugexe> a paddy wagon is on its way to your location

[18:05] *** TakinOver joined
[18:10] <dogbert17> timotimo: would it be correct to call the attribute $.nl-out ?

[18:10] *** TakinOver left
[18:11] *** nadim joined
[18:13] <rightfold> yay my parser already works

[18:14] <ZoffixW> \o/

[18:15] <ZoffixW> dogbert17, call it where? That syntax works only inside a class. It's basically an `is rw` method:  $my-handle.nl-out = "whatever";

[18:15] <ZoffixW> https://github.com/rakudo/rakudo/blob/nom/src/core/IO/Handle.pm#L10

[18:15] *** ufobat joined
[18:16] <ZoffixW> .seen Skarsnik

[18:16] <yoleaux> I saw Skarsnik 16 Apr 2016 17:14Z in #perl6: <Skarsnik> Hello

[18:16] <ZoffixW> I wonder where Skarsnik is at. 

[18:16] <timotimo> dogbert17: i suppose so, but i don't know how the rest of the docs do it

[18:17] <dogbert17> timotimo: hmm tricky :)

[18:17] <timotimo> heh :)

[18:18] <dogbert17> I'll go with $.nl-out and if someone thinks it's wrong we'll change it

[18:19] <dogbert17> gonna throw in docs for method 'say' as well just for good measure

[18:21] <dogbert17> ZoffixW: the word call shouldn't be taken literally, I simply wanted to know what syntax to use when mentioning an attribut in the docs

[18:21] *** TakinOver joined
[18:22] <dalek> mu: 1b627bd | (Zoffix Znet)++ | util/update-design.perl6.org.sh:

[18:22] <dalek> mu: Add "outdated/historical" message to individual spec pages too

[18:22] <dalek> mu: review: https://github.com/perl6/mu/commit/1b627bdefd

[18:23] *** FROGGS joined
[18:25] <dalek> specs: fd990bf | (Zoffix Znet)++ | html/perl-with-historical-message.css:

[18:25] <dalek> specs: Use less of an eye-bleed color and better positioning for historical message

[18:25] <dalek> specs: 

[18:25] <dalek> specs: MadcapJake++

[18:25] <dalek> specs: review: https://github.com/perl6/specs/commit/fd990bf57d

[18:27] *** ufobat left
[18:31] *** llfourn left
[18:36] *** jjido left
[18:37] *** TakinOver left
[18:37] <jdv79> Scala - features + simple = Haskell

[18:37] <jdv79> does that make sense?

[18:37] <jdv79> i don't know either well enough to even guess but its an amusing assertion

[18:39] <ZoffixW> So Scala is a more complex version of Haskell because it has more features? :/

[18:39] *** TakinOver joined
[18:39] <dalek> doc: 258f903 | (Jan-Olof Hendig)++ | doc/Type/IO/Handle.pod:

[18:39] <dalek> doc: Added docs for method say and added some missing text to print-nl. timotimo++

[18:39] <dalek> doc: review: https://github.com/perl6/doc/commit/258f90316b

[18:40] <jdv79> its in the post about this lda2vec thing

[18:42] <dalek> perl6.org: 81ba8cf | (Zoffix Znet)++ | source/downloads/index.html:

[18:42] <dalek> perl6.org: Remove extraneous leading whitespace within <pre>

[18:42] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/81ba8cfce0

[18:44] *** TakinOver left
[18:45] <ZoffixW> m: {*.say}(5)

[18:45] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´5===SORRY!5=== Error while compiling /tmp/abFUosgZZE‚ê§Malformed double closure; WhateverCode is already a closure without curlies, so either remove the curlies or use valid parameter syntax instead of *‚ê§at /tmp/abFUosgZZE:1‚ê§------> 3{*.say}7‚èè‚Ä¶¬ª

[18:45] <ZoffixW> m: {{{*.say}}}(5)

[18:45] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´5===SORRY!5=== Error while compiling /tmp/ebhGusryVn‚ê§Malformed double closure; WhateverCode is already a closure without curlies, so either remove the curlies or use valid parameter syntax instead of *‚ê§at /tmp/ebhGusryVn:1‚ê§------> 3{{{*.say}7‚Ä¶¬ª

[18:45] <ZoffixW> m: {return *.say}(5)

[18:45] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´Attempt to return outside of any Routine‚ê§  in block <unit> at /tmp/0E7plrghJy line 1‚ê§‚ê§¬ª

[18:46] <jdv79> m: {return .say}(5)

[18:46] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´5‚ê§Attempt to return outside of any Routine‚ê§  in block <unit> at /tmp/s55zBz_47I line 1‚ê§‚ê§¬ª

[18:47] <jdv79> m: -> {return .say}(5)

[18:47] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´Too many positionals passed; expected 0 arguments but got 1‚ê§  in block <unit> at /tmp/X3Uzo97RI_ line 1‚ê§‚ê§¬ª

[18:47] *** Actualeyes left
[18:49] <ZoffixW> m: sub {*.say}()(5)

[18:49] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´5‚ê§¬ª

[18:53] *** jjpereira joined
[18:53] *** TakinOver joined
[18:54] *** hankache joined
[18:54] *** jjpereira is now known as keyboard

[18:56] *** keyboard is now known as ahRef

[18:57] *** Praise joined
[18:57] *** TakinOver left
[19:00] <timotimo> Scala - features = Haskell - simple

[19:00] <timotimo> that's ridiculous

[19:00] <timotimo> alternatively,

[19:00] <timotimo> scala + simple = haskell + features

[19:00] <timotimo> that's just strange

[19:00] <ZoffixW> haha

[19:01] <timotimo> scala = haskell - simple + features?

[19:01] <timotimo> so you make haskell more complex, but add more features, and you get scala?

[19:01] <timotimo> it seems like this algebra isn't well-defined

[19:05] <geekosaur> they haven't seen ghc type level programming, have they? :p

[19:11] *** |meta left
[19:11] <mst> scala always seemed like "what if we did with ML what larry did with unix shell scripting? we shall need a giant bag, and a shaking machine"

[19:11] *** rindolf left
[19:11] *** Akagi201 joined
[19:11] *** Akagi201 left
[19:12] *** nadim left
[19:13] <ZoffixW> lmao

[19:14] *** ahRef left
[19:16] *** [Sno] joined
[19:22] *** TakinOver joined
[19:27] * lizmat starts on this weeks Perl 6 Weekly

[19:27] <ZoffixW> \o/

[19:28] *** TakinOver left
[19:31] *** domidumont left
[19:31] *** darutoko left
[19:36] *** jjido joined
[19:36] <timotimo> dinner time \o/

[19:38] *** sufrostico left
[19:40] *** sufrostico joined
[19:42] *** woolfy joined
[19:43] *** woolfy left
[19:43] *** ZoffixW left
[19:47] *** pmurias joined
[19:48] <pmurias> timotimo: haskell has loads of features if you turn the compiler extensions on

[19:52] *** TakinOver joined
[19:56] *** cpage_ joined
[19:57] *** TakinOver left
[20:00] *** TakinOver joined
[20:05] <timotimo> no, you mean ghc has loads of features :P

[20:05] *** sufrostico left
[20:05] *** zakharyas joined
[20:06] *** Zero_Dogg joined
[20:07] <Zero_Dogg> Hi. Doesn't run() provide an exception when a process errors out? I'm trying to catch it, but even within a try block that has a CATCH, it still makes my program abort with "The spawned process exited unsuccessfully"

[20:07] *** FROGGS left
[20:09] *** sufrostico joined
[20:10] *** TakinOver left
[20:10] <geekosaur> it does, but you need to intercept the result of run, otherwise it only gets examined (and the exception thrown) outside of the block. (delayed exceptions / Failures are funny that way)

[20:10] *** yqt joined
[20:11] <geekosaur> hm, not a Failure directly

[20:11] <geekosaur> pyanfar Z$ p6 'my $z = run "ls .xzy"; $z.say;'

[20:11] <geekosaur> Proc.new(in => IO::Pipe, out => IO::Pipe, err => IO::Pipe, exitcode => -1, pid => Any, signal => 254)

[20:13] <Zero_Dogg> I need to wait for it though, and run() is synchronous when executed that way. Can't quite see how to do that otherwise, though I could be reading the docs wrong

[20:14] *** kaare_ left
[20:14] <geekosaur> I think you need Proc::Async then?

[20:16] <geekosaur> also it seems synchronous to me anyway (and I would expect that; it's like system() in C or perl5)

[20:16] *** TakinOver joined
[20:16] *** sufrostico left
[20:17] <Zero_Dogg> it is? I thought it might not be since the docs for Proc has a "piping" example, which I would have thought meant it was async

[20:17] <Zero_Dogg> but if it's synchronous anyway, I can just retrieve the result

[20:17] <geekosaur> oh, it's async if you specify that you want handles from it

[20:18] *** AlexDaniel joined
[20:18] <geekosaur> and it should remain async in that case if you capture the result

[20:18] *** sufrostico joined
[20:18] <Zero_Dogg> so only if I capture then? As I'm redirecting one process' STDOUT to /dev/null in one call, and that seems to stay synchronous

[20:20] *** hankache left
[20:21] <geekosaur> (adverbs :in :out :err)

[20:21] <geekosaur> I would expect that to be sync, yes

[20:21] <geekosaur> run produces a Proc not a Proc::Async

[20:22] *** BenGoldberg joined
[20:23] *** zakharyas left
[20:23] *** cpage_ left
[20:23] <Zero_Dogg> thanks!

[20:24] *** itaipu joined
[20:24] <pmurias> timotimo: yes, isn't ghc the de facto implementation of haskell nowdays?

[20:24] *** TakinOver left
[20:25] <pmurias> timotimo: like Perl 6 has centered around rakudo nowdays

[20:27] *** TakinOver joined
[20:32] *** huggable joined
[20:32] *** rurban joined
[20:34] *** rightfold left
[20:34] *** sufrostico left
[20:35] *** sufrostico joined
[20:37] *** TakinOver left
[20:39] *** rurban left
[20:40] *** itaipu left
[20:42] *** labster left
[20:42] *** labster joined
[20:42] *** itaipu joined
[20:43] *** TakinOver joined
[20:43] *** skink joined
[20:44] <timotimo> i thought there's two

[20:45] *** jjido left
[20:45] <geekosaur> at various times there were also: hugs (stopped being maintained in the early 2000s), jhc (stopped being maintained around 2011), uhc (still actively maintained but only for teaching use at Utrecht)

[20:45] <timotimo> oh

[20:46] <geekosaur> and nhc98 which also apparently died in the early 2000s

[20:47] *** buharin joined
[20:47] *** BenGoldberg left
[20:47] *** revdiablo joined
[20:47] <geekosaur> yhc was around for a while but never widely used

[20:49] *** BenGoldberg joined
[20:49] <dalek> doc: 9f39706 | (Jan-Olof Hendig)++ | doc/Type/Rat.pod:

[20:49] <dalek> doc: Added docs for method perl in class Rat

[20:49] <dalek> doc: review: https://github.com/perl6/doc/commit/9f39706293

[20:49] <mst> Zoffix: hah! reply on reddit saying "oh, duh"

[20:49] <mst> Zoffix: mst wins.

[20:51] <Zoffix> mst++

[20:51] *** itaipu left
[20:51] *** TakinOver left
[20:52] *** cpage_ joined
[20:52] *** itaipu joined
[20:53] *** mr-foobar joined
[20:58] *** i42 joined
[20:58] *** TakinOver joined
[21:05] *** TakinOver left
[21:07] <lizmat> another P6W hits the Net: https://p6weekly.wordpress.com/2016/05/30/2016-22-conference-season-taking-off/

[21:09] *** TakinOver joined
[21:12] <tadzik> \o/

[21:12] <tadzik> lizmat++

[21:13] <Zoffix> lizmat, is it too late to make a quick modification? The Toronto Damian Talks: (*) We have to submit a guest list, so I think just showing up is bad. The attendees need to RSVP on the MeetUp.com or ping Dave https://twitter.com/meraxes  (*) Also, even though the talk is free, there's a GoFundMe page to try to offset Damian's expenses, since he's paying out of his pocket: https://www.gofundme.com/damian_conway

[21:13] <Zoffix> That sounds like mouthful... maybe just remove the "And for the two presentations in Toronto, you just have to show up!" sentence :)

[21:13] <Zoffix> Just a suggestion...

[21:14] <dogbert17> m: my $match = "abc" ~~ rx/ ^ab /; say $match.True # this should work according to https://doc.perl6.org/type/Regex

[21:14] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´Method 'True' not found for invocant of class 'Match'‚ê§  in block <unit> at /tmp/JjEn3MSHKY line 1‚ê§‚ê§¬ª

[21:14] <dogbert17> has this ever worked or is it some kind of typo

[21:14] <skink> RabidGravy, Any chance you'd have any need for an automatic declipper?

[21:15] <Zoffix> should be .Bool

[21:15] <Zoffix> or ?$match

[21:15] <dogbert17> m: my $match = "abc" ~~ rx/ ^ab /; say $match.Bool 

[21:15] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´True‚ê§¬ª

[21:16] <Zoffix> m: my $match = "abc" ~~ rx/ ^ab /; say ?$match

[21:16] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´True‚ê§¬ª

[21:16] <dogbert17> Zoffix++

[21:16] <AlexDaniel> dogbert17++ for spotting yet another error in the docs

[21:17] <dogbert17> one down :)

[21:18] <Zoffix> lizmat++ good weekly

[21:20] <dalek> doc: ec2f4b5 | (Jan-Olof Hendig)++ | doc/Type/Regex.pod:

[21:20] <dalek> doc: Fixed broken link and error in code example. ZoffixW++

[21:20] <dalek> doc: review: https://github.com/perl6/doc/commit/ec2f4b54cd

[21:25] *** ocbtec left
[21:28] *** wamba left
[21:36] *** itaipu left
[21:46] *** cpage_ left
[21:47] *** TakinOver left
[21:56] *** buharin left
[22:03] *** LLamaRider joined
[22:04] <Zoffix> nine++ great talk ( https://www.youtube.com/watch?v=CEs1g94qNso&feature=youtu.be )

[22:13] *** nadim joined
[22:13] <AlexDaniel> .

[22:14] <Zoffix> :

[22:14] *** TakinOver joined
[22:19] <Zoffix> You can use DBIx::Class from P6 :o :o :O

[22:20] <AlexDaniel> Zoffix: ‚´∂

[22:20] <Zoffix> .u ‚´∂

[22:20] <yoleaux> U+2AF6 TRIPLE COLON OPERATOR [Sm] (‚´∂)

[22:20] *** TakinOver left
[22:20] <AlexDaniel> ‚´∑ what the

[22:20] <AlexDaniel> m: ‚Äò‚´∑‚Äô.uniname.say

[22:20] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´TRIPLE NESTED LESS-THAN‚ê§¬ª

[22:21] <Zoffix> AlexDaniel, ·ç®

[22:21] <AlexDaniel> .u ‚ãò ·ç®

[22:21] <yoleaux> U+0020 SPACE [Zs] ( )

[22:21] <yoleaux> U+1368 ETHIOPIC PARAGRAPH SEPARATOR [Po] (·ç®)

[22:21] <yoleaux> U+22D8 VERY MUCH LESS-THAN [Sm] (‚ãò)

[22:21] *** LLamaRider left
[22:22] <Zoffix> m: (‚Åé * ‚Åé)(1, 2)

[22:22] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´5===SORRY!5=== Error while compiling /tmp/BLusC8Nw7i‚ê§Bogus statement‚ê§at /tmp/BLusC8Nw7i:1‚ê§------> 3(7‚èè5‚Åé * ‚Åé)(1, 2)‚ê§    expecting any of:‚ê§        prefix‚ê§        term‚ê§¬ª

[22:22] <Zoffix> heh.. :) whatever star :)

[22:23] <lizmat> Zoffix: added "(well, after RVSPing yourself)"

[22:23] <Zoffix> lizmat++ thanks

[22:24] <lizmat> yw !

[22:25] * lizmat goes really to bed

[22:25] <lizmat> so good night, #perl6 !

[22:25] <AlexDaniel> Zoffix: and ‚Åë can be used for hyperwhatever

[22:26] <AlexDaniel> Zoffix: that's actually a good one

[22:26] <AlexDaniel> ‚äõ * ‚äõ is not too bad too

[22:26] <AlexDaniel> ‚àó * ‚àó hmmm

[22:27] *** cpage_ joined
[22:28] *** lolo78 joined
[22:28] *** lolo78 left
[22:31] *** RabidGravy left
[22:32] <TEttinger> .u TRIPLE

[22:32] <yoleaux> U+061E ARABIC TRIPLE DOT PUNCTUATION MARK [Po] (ÿû)

[22:32] <yoleaux> U+1CDB VEDIC TONE TRIPLE SVARITA [Mn] (‚óå·≥õ)

[22:32] <yoleaux> U+2034 TRIPLE PRIME [Po] (‚Ä¥)

[22:32] <TEttinger> .u TRIPLE NESTED

[22:32] <yoleaux> U+2AF7 TRIPLE NESTED LESS-THAN [Sm] (‚´∑)

[22:32] <yoleaux> U+2AF8 TRIPLE NESTED GREATER-THAN [Sm] (‚´∏)

[22:32] <TEttinger> huh

[22:32] <TEttinger> m: (1 ‚´∑ 2).say

[22:32] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´5===SORRY!5=== Error while compiling /tmp/eyiQOpjwBv‚ê§Confused‚ê§at /tmp/eyiQOpjwBv:1‚ê§------> 3(17‚èè5 ‚´∑ 2).say‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§        statement modifier‚ê§        stat‚Ä¶¬ª

[22:33] <skink> AlexDaniel, Yeah give people more cause to complain about non-alphanum syntax :)

[22:34] <TEttinger> .u dingbat

[22:34] <yoleaux> U+2776 DINGBAT NEGATIVE CIRCLED DIGIT ONE [No] (‚ù∂)

[22:34] <yoleaux> U+2777 DINGBAT NEGATIVE CIRCLED DIGIT TWO [No] (‚ù∑)

[22:34] <yoleaux> U+2778 DINGBAT NEGATIVE CIRCLED DIGIT THREE [No] (‚ù∏)

[22:34] <TEttinger> .u dingbat star

[22:34] <AlexDaniel> skink: sorry but‚Ä¶ any operator is non-alphanum

[22:34] <yoleaux> No characters found

[22:35] <TEttinger> .u shaded

[22:35] <yoleaux> U+27A9 RIGHT-SHADED WHITE RIGHTWARDS ARROW [So] (‚û©)

[22:35] <yoleaux> U+27AA LEFT-SHADED WHITE RIGHTWARDS ARROW [So] (‚û™)

[22:35] <TEttinger> aw yiss

[22:35] <AlexDaniel> skink: and I'm not sure if ‚Äúnon-alphanum‚Äù includes for example unicode digits or not

[22:36] <TEttinger> .u Heavy Twelve Pointed Pinwheel Star

[22:36] <yoleaux> No characters found

[22:37] <TEttinger> .uname üüî

[22:37] <TEttinger> hm, how would I even enter unicode char 1F7D4 ?

[22:38] *** TakinOver joined
[22:38] <timotimo> should be just \x1f7d4?

[22:39] <timotimo> worst case, you can {chr(0x1f7d4)}

[22:39] <TEttinger> .u \x1F7D4

[22:39] <yoleaux> U+0031 DIGIT ONE [Nd] (1)

[22:39] <yoleaux> U+0034 DIGIT FOUR [Nd] (4)

[22:39] <yoleaux> U+0037 DIGIT SEVEN [Nd] (7)

[22:39] <TEttinger> not for .u hm...

[22:39] <Zoffix> Haha, hilarious moment: https://youtu.be/CEs1g94qNso?t=30m6s

[22:39] <TEttinger> .uname \x1F7D4

[22:39] <geekosaur> .u U+1F7D4

[22:39] <yoleaux> No characters found

[22:40] * geekosaur doesn't recall

[22:40] <TEttinger> http://unicode-table.com/en/1F7D4/

[22:40] <timotimo> heh.

[22:41] <Zoffix> Enter where? I can just type CTRL+SHIFT+U, 1F7D4, space

[22:41] <Zoffix> m: "\x[1F7D4]".uninames.say

[22:41] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´(HEAVY TWELVE POINTED PINWHEEL STAR)‚ê§¬ª

[22:41] <timotimo> o, sorry, i thought you meant in a perl6 string

[22:42] <TEttinger> .u HEAVY TWELVE POINTED PINWHEEL STAR

[22:42] <yoleaux> No characters found

[22:42] <Zoffix> m: say 42 + ‚ù∂ + ‚ù∑ / ‚ù∏

[22:42] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´43.666667‚ê§¬ª

[22:42] <TEttinger> ah, so .u is a bit behind

[22:42] *** xinming left
[22:43] <Zoffix> .u üüî

[22:43] <yoleaux> No characters found

[22:43] <Zoffix> :S

[22:43] *** xinming joined
[22:44] *** TakinOver left
[22:44] *** firstdayonthejob left
[22:44] <AlexDaniel> yea, just use camelia instead

[22:48] *** TakinOver joined
[22:48] *** kid51 joined
[22:52] <Zoffix> m: say ‚ù∫ √ó ‚ùπ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ùª ‚âÖ œÑ

[22:52] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´False‚ê§¬ª

[22:52] <Zoffix> m: say ‚ù∫ √ó ‚ùπ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ùª

[22:52] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´6.166667‚ê§¬ª

[22:52] <Zoffix> Damn, what's the default precision on ‚âÖ?

[22:53] <Zoffix> Or tolerance I should say

[22:53] *** kurahaupo joined
[22:53] *** kurahaupo left
[22:53] *** TakinOver left
[22:53] <Zoffix> m: say $*TOLERANCE

[22:53] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´1e-15‚ê§¬ª

[22:53] <Zoffix> pfft... too low

[22:54] <jdv79> what's more generally useful?  0.01?

[22:54] <jdv79> or maybe less general but mor useful...

[22:55] <Zoffix> m: say ‚ù∫ √ó ‚ùπ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ùª ‚âÖ œÑ :tolerance<.1>

[22:55] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´5===SORRY!5=== Error while compiling /tmp/PIyynuWKAv‚ê§You can't adverb &infix:<‚âÖ>‚ê§at /tmp/PIyynuWKAv:1‚ê§------> 3‚ùπ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ùª ‚âÖ œÑ :tolerance<.1>7‚èè5<EOL>‚ê§¬ª

[22:55] <Zoffix> m: say &[‚âÖ](‚ù∫ √ó ‚ùπ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ù∏ ‚àí ‚ù∂ √∑ ‚ùª,  œÑ, :tolerance<.1>)

[22:55] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´True‚ê§¬ª

[22:55] <Zoffix> camelia, I can if I want to! You're not the boss of me!

[22:55] <jdv79> why can't it adverb?

[22:55] *** kurahaupo joined
[22:55] <Zoffix> jdv79, no idea. I have zero knowledge of the domain where using ‚âÖ is common...

[22:56] <AlexDaniel> Zoffix: I think that the point is to make num comparisons work, not to compare weird numbers

[22:56] <jdv79> but the issue is just an infix op accepting an adverb

[22:56] <Zoffix> AlexDaniel, I see

[22:56] <AlexDaniel> jdv79: #128210

[22:56] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128210

[22:57] *** TakinOver joined
[22:57] <Zoffix> m: say ‚ù∫ √ó ‚ùπ √∑ ‚ù∏ .Rat.nude

[22:57] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´10‚ê§¬ª

[22:58] <Zoffix> How come it's 10?

[22:59] <AlexDaniel> m: say 5 * 4 / (3.Rat.nude)

[22:59] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´10‚ê§¬ª

[23:00] <AlexDaniel> m: +3.Rat.nude

[23:00] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´WARNINGS for /tmp/7ekugV9bbx:‚ê§Useless use of "+" in expression "+3.Rat.nude" in sink context (line 1)‚ê§¬ª

[23:00] <Zoffix> m: say 3.Rat.nude

[23:00] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´(3 1)‚ê§¬ª

[23:00] <AlexDaniel> m: say +3.Rat.nude

[23:00] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´2‚ê§¬ª

[23:00] <Zoffix> :S

[23:00] <Zoffix> Ok... why is it 2? :S

[23:00] <AlexDaniel> two elements

[23:00] <Zoffix> Ah

[23:00] <Zoffix> AlexDaniel++

[23:00] *** stevieb9 joined
[23:00] <jdv79> oh that's lame

[23:00] <AlexDaniel> Zoffix: you know it yourself, don't you? ;)

[23:00] <stevieb9> So, I'm trying to capture Windows newlines and convert them to hex (\r\n to 0d0a). In perl5: perl -ne '/([\r\n]{1,2})/;print(unpack("H*",$1))' file. However, I can't get the same effect in P6. Could someone have a look and see how many things I"m doing wrong? https://gist.github.com/stevieb9/9d0c50c118a14b28de2b0ae6ca0b051f

[23:01] <Zoffix> AlexDaniel, I realized it was two elements a few microseconds before you said it.

[23:02] <Zoffix> stevieb9, what's the output?

[23:02] <Zoffix> Won't you be getting jus t"

[23:02] <Zoffix> Won't you be getting just "\n"s without the "\r"s

[23:02] *** TakinOver left
[23:04] <Zoffix> stevieb9, .lines removes the newlines

[23:04] <Zoffix> "...decomposes it into lines (with the newline characters stripped), ...": http://docs.perl6.org/routine/lines

[23:04] <AlexDaniel> I'm also afraid that it will change \r\n to \n automatically

[23:05] <AlexDaniel> perhaps all you have to do is slurp it and write it back

[23:05] <stevieb9> sorry... output is '0a\

[23:05] <stevieb9> '0a'

[23:05] <timotimo> well, \r\n is already a grapheme that'll likely just get transformed to \n anyway

[23:05] <timotimo> (thank unicode for that)

[23:06] <Zoffix> Read it in :bin mode? ¬Ø\_(„ÉÑ)_/¬Ø

[23:06] <stevieb9> tried that

[23:06] <Zoffix> Were you still using lines?

[23:06] <stevieb9> I didn't know that about lines() stripping newlines. I'll start there and play around

[23:07] <stevieb9> ...yes, I was still using lines

[23:07] <timotimo> you can set your file handle to :!chomp and then use .get repeatedly

[23:07] <timotimo> that ought to leave the newlines in

[23:07] <stevieb9> I thought I'd jump into p6 by converting my p5 File::Edit::Portable module over. I'll try with !chomp and .get instead of lines. Thanks!

[23:08] <Zoffix> m: say ‚ù∫‚Åª‚Å¥ √ó ‚ùπ¬≥ √∑ ‚ù∏ ‚àí ‚ù∂  ‚àí œÑ √ó œÄ

[23:08] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´-20.7050754688454‚ê§¬ª

[23:10] <Zoffix> m: say ‚ù∫‚Åª‚Å¥ √ó ‚ùπ¬≥ √∑ ‚ù∏ ‚àí ‚ù∂  ‚àí œÑ √ó œÄ √∑ ‚Öí

[23:10] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´-198.357954688454‚ê§¬ª

[23:10] <Zoffix> I'm really bummed we don't have a fancy pants unicode plus

[23:11] <Zoffix> Feels so... incomplete.

[23:17] *** TakinOver joined
[23:17] *** |meta joined
[23:25] *** TakinOver left
[23:28] <AlexDaniel> Zoffix: the whole unicode feels incomplete

[23:29] <Zoffix> .u poo

[23:29] <yoleaux> U+1434 CANADIAN SYLLABICS POO [Lo] (·ê¥)

[23:29] <yoleaux> U+1435 CANADIAN SYLLABICS Y-CREE POO [Lo] (·êµ)

[23:29] <yoleaux> U+A576 VAI SYLLABLE POO [Lo] (Íï∂)

[23:29] <Zoffix> .u poo with eyes

[23:29] <yoleaux> No characters found

[23:30] <Zoffix> m: say ^0xFFFFF .grep: { .uninames ~~ /i: poo/ }

[23:30] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´Cannot call uninames(Int); none of these signatures match:‚ê§    (Str:D $str)‚ê§  in block <unit> at /tmp/RNTbv2FPKh line 1‚ê§‚ê§¬ª

[23:30] <Zoffix> orly

[23:30] <Zoffix> m: say ^0xFFFFF .grep: { .chr.uninames ~~ /i: poo/ }

[23:30] *** spider-mario left
[23:30] <Zoffix> m: 5.uniname.say

[23:30] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´(timeout)¬ª

[23:30] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´ENQUIRY‚ê§¬ª

[23:30] <Zoffix> m: 5.uninames.say

[23:30] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´Cannot call uninames(Int); none of these signatures match:‚ê§    (Str:D $str)‚ê§  in block <unit> at /tmp/ksOOJ5cUit line 1‚ê§‚ê§¬ª

[23:30] <Zoffix> m: say ^0x3FFFF .grep: { .chr.uniname ~~ /i: poo/ }

[23:30] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´()‚ê§¬ª

[23:31] <Zoffix> .u üí©

[23:31] <yoleaux> U+1F4A9 PILE OF POO [So] (üí©)

[23:31] <Zoffix> Seems complete to me :P

[23:31] <AlexDaniel> m: say join ‚Äò‚Äô, (0..0x1FFFF ==> grep { .uniname ~~ /POO/ }  ==> map {.chr})

[23:31] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´·ê¥·êµ‚É¨‚É≠‚Éê‚Éë‚Üº‚ÜΩ‚Üæ‚Üø‚áÄ‚áÅ‚áÇ‚áÉ‚áã‚áå‚•ä‚•ã‚•å‚•ç‚•é‚•è‚•ê‚•ë‚•í‚•ì‚•î‚•ï‚•ñ‚•ó‚•ò‚•ô‚•ö‚•õ‚•ú‚•ù‚•û‚•ü‚•†‚•°‚•¢‚•£‚•§‚••‚•¶‚•ß‚•®‚•©‚•™‚•´‚•¨‚•≠‚•Æ‚•Ø‚ºîÍï∂Íï∫ñßÇû¢ëû¢§üê©üí©‚ê§¬ª

[23:32] <AlexDaniel> üê©üí© lol

[23:32] <AlexDaniel> m: .say for ‚Äòüê©üí©‚Äô.uninames

[23:32] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´POODLE‚ê§PILE OF POO‚ê§¬ª

[23:34] <AlexDaniel> Zoffix: there's no puddle of piss character, so that's still incomplete

[23:34] <Zoffix> HEH

[23:35] <Zoffix> And we clearly need a ZWS for üê© joined with üí©  :)

[23:36] <AlexDaniel> m: ‚Äòüîè‚Äô.uniname.say

[23:36] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´LOCK WITH INK PEN‚ê§¬ª

[23:38] <skink> What would that symbol even be used for?

[23:38] <skink> Message crypto?

[23:38] <Zoffix> Write protected?

[23:39] <AlexDaniel> key signing?

[23:41] *** TakinOver joined
[23:43] <skink> Key signing makes sense... I guess

[23:45] <Zoffix> .u KEY WITH INK PEN

[23:45] <yoleaux> No characters found

[23:46] *** TakinOver left
[23:47] *** cpage_ left
[23:47] <AlexDaniel> m: ‚Äòüòù‚Äô.uniname.say

[23:47] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´FACE WITH STUCK-OUT TONGUE AND TIGHTLY-CLOSED EYES‚ê§¬ª

[23:49] *** nchambers^ joined
[23:51] *** TakinOver joined
[23:54] *** Akagi201 joined
[23:55] *** nchambers^ is now known as nchambers

[23:56] *** nchambers is now known as nchambers_

[23:56] *** nchambers_ is now known as nchambers

[23:57] *** cpage_ joined
[23:57] *** TakinOver left
[23:58] *** cpage_ left
[23:58] <AlexDaniel> m: .say for (0..0x1FFFF).sort(*.uniname.chars R<=> *.uniname.chars)[^5]¬ª.uniname

[23:58] <camelia> rakudo-moar 4a7eaa: OUTPUT¬´ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA ISOLATED FORM‚ê§ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA INITIAL FORM‚ê§ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA FINAL FORM‚ê§CL‚Ä¶¬ª

