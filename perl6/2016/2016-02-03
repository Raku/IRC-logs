[00:00] <AlexDaniel> gfldex: Inf, but in this case the list is not infinite

[00:00] *** vendethiel left
[00:00] <gfldex> it's not a list, it's a Range

[00:01] <AlexDaniel> right, it's an Array

[00:01] <AlexDaniel> m: my @a = <a b c d>; say WHAT @a

[00:01] <camelia> rakudo-moar a5fe34: OUTPUT«(Array)␤»

[00:01] <gfldex> that's not what I mean

[00:02] <tony-o_> the range you're using to select elems with is an Inf range

[00:02] <gfldex> the array subscript [0..^*] will produce some Iterator that will iterate between 0 and Inf-1

[00:02] <gfldex> the Iterator only looks at the lower and upper bound that is Range

[00:02] <AlexDaniel> m: say 0..^∞

[00:02] <camelia> rakudo-moar a5fe34: OUTPUT«0..^Inf␤»

[00:02] <AlexDaniel> m: say 0..∞

[00:02] <camelia> rakudo-moar a5fe34: OUTPUT«0..Inf␤»

[00:03] *** dfcarpenterak joined
[00:04] <AlexDaniel> gfldex: so you are saying that the index of last element is still < Inf-1 so that's why it is included?

[00:04] <gfldex> yes

[00:04] <[Coke]> perlpilot: S17-supply/syntax.t has been problematic since pre-xmas.

[00:04] <AlexDaniel> kinda makes sense, but it doesn't dwim. If I wrote ^ there then perhaps I did that on purpose

[00:06] <Hotkeys> what does the 'global' command for rakudobrew do

[00:06] <AlexDaniel> gfldex: but I'm not going to insist that it should work :)

[00:07] <AlexDaniel> well, it does work. I mean that I'm not going to insist that it should work the way I want it to work :D

[00:08] <AlexDaniel> ooooooooooooooooooh

[00:08] <AlexDaniel> I think that I found something…

[00:08] <Hotkeys> Doesn't 0..^Inf essentially == 0..Inf

[00:08] <Hotkeys> it does in my head

[00:09] <AlexDaniel> m: my @a = ‘a’..‘e’; say [@a[[0..$_],[$_^..*]] for ^(@a - 1)]

[00:09] <camelia> rakudo-moar a5fe34: OUTPUT«[((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e))]␤»

[00:09] <AlexDaniel> this is significantly shorter

[00:09] <ely-se> Hotkeys: yes they should represent the same range

[00:10] <AlexDaniel> m: my @a = ‘a’..‘e’; say (@a[(0..$_),($_^..*)] for ^(@a - 1))

[00:10] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[00:11] *** obarb is now known as brabo

[00:12] *** choroba left
[00:13] <perlawhirl> m: my @name = 'obarb'.comb; ~@name.rotate.join 

[00:13] <camelia> rakudo-moar a5fe34: OUTPUT«WARNINGS for /tmp/vpFb6C651P:␤Useless use of "~" in expression "~@name.rotate.join" in sink context (line 1)␤»

[00:13] *** gist_nb joined
[00:13] <perlawhirl> m: my @name = 'obarb'.comb; say @name.rotate.join 

[00:13] <camelia> rakudo-moar a5fe34: OUTPUT«barbo␤»

[00:13] <gfldex> where in the docs do we doc List/Array subscripts?

[00:13] <perlawhirl> almost :D

[00:13] <AlexDaniel> m: my @a = ‘a’..‘e’; say [@a[^$_,$_..*] for 1..^@a]

[00:14] <camelia> rakudo-moar a5fe34: OUTPUT«[((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e))]␤»

[00:14] <perlawhirl> gfldex: http://doc.perl6.org/language/list

[00:14] <AlexDaniel> avuserow: ↑ this is probably the shortest one

[00:16] <AlexDaniel> m: my @a = ‘a’..‘e’; say (@a[^$_,$_..*] for 1..^@a)

[00:16] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[00:16] *** patrickz left
[00:16] <gfldex> perlawhirl: that's where we _should_ doc Array slices :->

[00:17] <gfldex> i will close those gaps tomorrow

[00:18] <AlexDaniel> m: ‘obarb’.flip.say

[00:18] <camelia> rakudo-moar a5fe34: OUTPUT«brabo␤»

[00:19] <brabo> AlexDaniel: hm?

[00:19] <AlexDaniel> nvm :)

[00:20] <brabo> tsk tsk

[00:20] <brabo> waking up random people at this time of day :p

[00:20] <sortiz> m: say Inf - 1 == Inf, Inf + 1 == Inf # By definition

[00:20] <camelia> rakudo-moar a5fe34: OUTPUT«TrueTrue␤»

[00:21] <brabo> lizmat: ping! how was fosdem?

[00:22] <brabo> also hm, did i hear something about perl 6 release a while ago?

[00:22] <brabo> can it truly be? :)

[00:22] *** firstdayonthejob left
[00:23] *** SCHAAP137 left
[00:23] <Hotkeys> it's up to spec as of 2015.12

[00:23] <Hotkeys> unless you mean the 2016.01 release

[00:23] <brabo> AlexDaniel: j/k btw, it is actually nice someone reminded me i was here ;)

[00:23] <brabo> Hotkeys: ye it will be the release i heard about

[00:24] <brabo> something about larry's bday or so?

[00:24] <brabo> i guess congrats are in order.. if i understood it correctly it has been a long time coming :)

[00:27] <[Coke]> brabo: _the_ release was on hristmas day.

[00:28] <brabo> aha okay

[00:28] <brabo> ye

[00:29] <brabo> those weeks were a bit dazed and confused at my end ^^

[00:31] <Hotkeys> m: say ('a'..'f').rotor(2=>-1)

[00:31] <camelia> rakudo-moar a5fe34: OUTPUT«((a b) (b c) (c d) (d e) (e f))␤»

[00:31] *** spider-mario left
[00:31] <Hotkeys> this is fun

[00:31] <Hotkeys> m: say ('a'..'f').rotor(3=>-2)

[00:31] <camelia> rakudo-moar a5fe34: OUTPUT«((a b c) (b c d) (c d e) (d e f))␤»

[00:32] <AlexDaniel> ooh, maybe it could be solved with rotor

[00:32] <Hotkeys> that's what I was trying to do

[00:32] <Hotkeys> I think it'd be longer than your solution up there

[00:33] <AlexDaniel> m: my @a = ‘a’..‘e’; say (@a.rotor($_, Inf, :partial) for 1..^+@a)

[00:33] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[00:34] <AlexDaniel> m: my @a = ‘a’..‘e’; say (@a[^$_,$_..*] for 1..^@a)

[00:34] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[00:34] <Hotkeys> well you're much smarter than I

[00:34] <AlexDaniel> Hotkeys: it's not too bad

[00:34] <AlexDaniel> let's see if we can golf it down…

[00:35] <AlexDaniel> avuserow: ↑

[00:35] <AlexDaniel> Hotkeys: oh, maybe it could be done with rotor but without for loop…

[00:36] <Hotkeys> does this count as golfing

[00:36] <AlexDaniel> yes

[00:36] <Hotkeys> m: my @a = ‘a’..‘e’; say (@a.rotor($_, ∞, :partial) for 1..^+@a)

[00:36] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[00:36] <Hotkeys> :p

[00:36] <AlexDaniel> yes :)

[00:36] *** Guest7721 left
[00:38] <Hotkeys> just barely shorter

[00:38] <Hotkeys> m: my @a = ‘a’..‘e’; (1..^+@a).map({@a.rotor($_, ∞, :partial)})

[00:38] <camelia> rakudo-moar a5fe34: ( no output )

[00:38] <Hotkeys> oh

[00:38] <Hotkeys> forgot the say

[00:38] <Hotkeys> stupid repl

[00:38] <Hotkeys> m: my @a = ‘a’..‘e’; (1..^+@a).map({@a.rotor($_, ∞, :partial)}).say

[00:38] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[00:38] <AlexDaniel> it's not shorter this way? :)

[00:38] <Hotkeys> not with say

[00:38] <Hotkeys> couple characters longer

[00:39] <Hotkeys> I guess if we're golfing we can remove spaces though

[00:39] <Hotkeys> m: my @a=‘a’..‘e’;(1..^+@a).map({@a.rotor($_,∞,:partial)}).say

[00:39] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[00:39] <AlexDaniel> I'm confident that you can just make it with rotor alone

[00:39] <AlexDaniel> one second

[00:39] <Hotkeys> maybe

[00:40] *** lostinfog left
[00:41] <AlexDaniel> Hotkeys: I'll show you what I mean

[00:41] <AlexDaniel> m: my @a = ‘a’..‘e’; say @a.rotor(1, 4 => -5, 2, 3 => -5, 3, 2)

[00:41] <camelia> rakudo-moar a5fe34: OUTPUT«((a) (b c d e) (a b) (c d e) (a b c) (d e))␤»

[00:41] <AlexDaniel> now all you have to do is just generate these params

[00:42] <Hotkeys> oh

[00:42] <Hotkeys> I was thinking you wanted them grouped together like you had

[00:42] <AlexDaniel> Hotkeys: yes but that can be done later, I think…

[00:42] <revhippie> like a sequence of splices

[00:42] <Hotkeys> sure

[00:43] <AlexDaniel> Hotkeys: with another rotor!

[00:43] *** lichtkind left
[00:43] <AlexDaniel> m: my @a = ‘a’..‘e’; say @a.rotor(1, 4 => -5, 2, 3 => -5, 3, 2).rotor(2)

[00:43] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)))␤»

[00:44] *** vendethiel joined
[00:46] <AlexDaniel> how do I pass an array as arguments?

[00:47] *** wamba left
[00:48] <Hotkeys> how do you mean?

[00:48] <AlexDaniel> rotor(@args)

[00:49] <AlexDaniel> ?

[00:49] <Hotkeys> you slap a | on it

[00:49] <Hotkeys> iirc

[00:50] <Hotkeys> rotor(|@args)

[00:50] <AlexDaniel> right

[00:51] *** ely-se left
[00:52] <AlexDaniel> m: my @a = ‘a’..‘e’; say @a.rotor(flat ($_, 5-$_ => -5 for 1..^5)).rotor: 2

[00:52] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)) ((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)) ((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)) ((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e))…»

[00:52] <AlexDaniel> m: my @a = ‘a’..‘e’; say @a.rotor(flat ($_, @a-$_ => -@a for 1..^+@a)).rotor: 2

[00:52] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)) ((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)) ((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)) ((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e))…»

[00:52] <AlexDaniel> how do I limit it?

[00:53] <AlexDaniel> OK

[00:53] <AlexDaniel> m: my @a = ‘a’..‘e’; say @a.rotor(|($_, @a-$_ => -@a for 1..^+@a), ∞).rotor: 2

[00:53] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[00:53] <AlexDaniel> there we go!

[00:54] <AlexDaniel> avuserow: ↑

[00:55] <AlexDaniel> Hotkeys: you can actually omit + in ^+@a

[00:55] <Hotkeys> ah

[00:56] <AlexDaniel> m: my @a = ‘a’..‘e’; say (@a.rotor($_, ∞, :partial) for 1..^@a)

[00:56] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[00:57] *** tmtowtdi left
[00:57] <AlexDaniel> Hotkeys: now the question is how to get rid of ｢for｣ and do the same thing with Z

[01:03] <AlexDaniel> m: my @a = ‘a’..‘e’; say @a.rotor(|(1..^@a Z ((+@a-1 … 1) Z=> (-@a, -@a … *))), ∞).rotor: 2

[01:03] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[01:03] <AlexDaniel> Hotkeys: easy!

[01:03] <AlexDaniel> well, I'm sure that there is an easier way…

[01:03] <AlexDaniel> like, one of the hundred of other suggested alternatives :)

[01:05] *** vendethiel left
[01:05] <AlexDaniel> Hotkeys: thanks for mentioning rotor, I didn't even think about it

[01:10] <AlexDaniel> Hotkeys: we can also do it without :partial

[01:10] <AlexDaniel> m: my @a = ‘a’..‘e’; say (@a.rotor: $_, @a-$_ for 1..^@a).rotor: 2

[01:10] <camelia> rakudo-moar a5fe34: OUTPUT«((((a) (b c d e)) ((a b) (c d e))) (((a b c) (d e)) ((a b c d) (e))))␤»

[01:10] <AlexDaniel> Hotkeys: saves a character or two

[01:11] <AlexDaniel> anyway, enough of this golfing spam :)

[01:11] <Hotkeys> lol

[01:14] <Hotkeys> shortened it a bit a think

[01:14] <Hotkeys> the non-for one

[01:14] <Hotkeys> m: my @a = ‘a’..‘e’; say @a.rotor(|(1..^@a Z (@a-1...0) »=>» -@a), ∞).rotor: 2

[01:14] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[01:15] <Hotkeys> AlexDaniel: 

[01:15] <AlexDaniel> oh, how interesting

[01:15] <Hotkeys> m: my @a = ‘a’..‘e’; say @a.rotor(|(1..^@a Z (@a-1…0) »=>» -@a), ∞).rotor: 2

[01:15] <camelia> rakudo-moar a5fe34: OUTPUT«(((a) (b c d e)) ((a b) (c d e)) ((a b c) (d e)) ((a b c d) (e)))␤»

[01:15] <Hotkeys> there got that sequence char in there

[01:15] <AlexDaniel> not too bad

[01:16] <AlexDaniel> okay I think that I have to make a gist with all the solutions

[01:16] <Hotkeys> lol

[01:16] <Hotkeys> what is this for anyway

[01:16] <AlexDaniel> Hotkeys: someone asked a question

[01:16] <Hotkeys> ah

[01:16] <AlexDaniel> and we answered it… a couple of times :)

[01:16] <Hotkeys> I must've missed it

[01:19] <perlawhirl> haha, yes... i assume whatever reason avuserow needed it for has passed.

[01:19] <perlawhirl> but it's a fun problem to try to solve many ways with perl6

[01:20] <AlexDaniel> yeah, I enjoyed that

[01:25] *** dfcarpenterak left
[01:25] *** addison_ left
[01:26] *** sevvie joined
[01:27] *** vendethiel joined
[01:35] *** yeahnoob joined
[01:38] *** sno left
[01:40] *** ELBeavers left
[01:50] *** vendethiel left
[01:54] *** flo__ left
[01:55] <Hotkeys> I do stackexchange codegolf

[01:55] <Hotkeys> sometimes

[01:55] <Hotkeys> with perl 6

[01:55] <Hotkeys> I meant to say that all in one line whoops

[02:01] *** leont left
[02:14] *** cuonglm joined
[02:14] <cuonglm> Anyone has faced problem with building rakudo from latest master

[02:15] <cuonglm> I got "Stage mast       : No registered operation handler for 'stat_time'"

[02:18] <japhb> cuonglm: master?  not nom?

[02:19] <japhb> Or are you talking about MoarVM's branch?

[02:20] <japhb> (Normally you let Rakudo's configure choose the proper commit to build NQP, which then chooses the proper MoarVM commit.)

[02:20] <cuonglm> japhb: it's master

[02:20] <cuonglm> I simply cd to rakudo source

[02:21] <cuonglm> git pull

[02:21] <cuonglm> perl Configure.pl --gen-moar --gen-nqp --backends=moar --prefix=/usr/local/stow/perl6

[02:21] <cuonglm> make

[02:21] <cuonglm> then it failed in mast stage

[02:23] <cuonglm> You can see full error here http://paste.debian.net/378252/

[02:23] <japhb> cuonglm: What does `git describe --all` output?

[02:25] <cuonglm> Opps, it output "heads/nom"

[02:26] <japhb> That's actually a good thing.  I was worried you'd at some point in the past manually put yourself on master.  :-)

[02:26] <japhb> I remember something about stat_time being undone on the Moar side, but I thought that had been fixed.  Don't remember the details,

[02:26] <japhb> but you could check the MoarVM commit log for the last couple weeks

[02:26] * japhb must run

[02:27] *** yurivish joined
[02:28] *** molaf__ left
[02:29] <skids> counglm: try removing moar and nqp binaries from the install path maybe?

[02:31] *** kid51 left
[02:32] <cuonglm> skids: I'm trying, it seems to work

[02:33] <cuonglm> it gets latest moar and nqp then building them again

[02:33] *** labster left
[02:34] *** labster joined
[02:38] *** sevvie left
[02:39] <cuonglm> Thanks all, work perfect now

[02:40] <skids> np enjoy :-)

[02:49] *** cpage_ left
[02:53] *** cuonglm left
[02:53] *** johan_ joined
[02:54] *** johan left
[02:54] *** gist_nb left
[02:54] *** cpage_ joined
[02:57] *** maybekoo left
[03:00] *** johan_ left
[03:02] *** soundobstacle left
[03:05] *** vendethiel joined
[03:05] *** johan_ joined
[03:08] *** Actualeyes left
[03:11] *** yqt left
[03:11] *** jojotus left
[03:12] <AlexDaniel> ok, there we go: https://gist.github.com/AlexDaniel/1e2d1c50963d37c5d43a

[03:12] <AlexDaniel> Hotkeys: ↑

[03:12] *** jojotus joined
[03:12] <AlexDaniel> I've attempted to make them all as short as possible, but there are probably some ways to golfify some of those

[03:13] <AlexDaniel> and yeah, I did not remove the spaces around operators. I think that it's more fair this way

[03:13] <AlexDaniel> (i.e. you're not going to use obfuscated code)

[03:16] *** alpha123 left
[03:20] *** sno joined
[03:26] *** vendethiel left
[03:30] *** alpha123 joined
[03:32] *** noganex_ joined
[03:35] *** noganex left
[03:37] *** Snowdog joined
[03:38] <Snowdog> Is anyone here?

[03:38] <colomon> yes?

[03:38] <Snowdog> I noticed that today, a new version of Perl6 came out.

[03:38] <colomon> right

[03:38] <colomon> usually monthly release

[03:39] <colomon> …. errr, though it’s not the usual date for it, now that I think about it.

[03:39] * colomon has been a bit out of the loop

[03:39] <Snowdog> However, when I build it with Rakudobrew, it sets it up as a separate installation from the 2015-12 version, and now all my libraries have to be reinstalled.

[03:39] <Snowdog> That's not really a viable option. Is there any way I can report this?

[03:40] <colomon> Snowdog: https://github.com/tadzik/rakudobrew/issues

[03:40] <Snowdog> An upgrade shouldn't require a new installation.

[03:40] <Snowdog> Thanks.

[03:41] <colomon> I’m not quite sure what you did?  what command did you use to build it?

[03:41] <Snowdog> I think everyone is still in testing mode, but if the software is going to be used, then it has to be trusted.

[03:41] <Snowdog> I can build the new installation in2 ways:

[03:41] <jdv79> isn't that how perlbrew works?  perl and libs are seperated on perl ver?

[03:41] <Snowdog> 1) rakudobrew build moar or rakudobrew build moar 2016.01.1

[03:42] <revhippie> i think that's kind of the point, yeah

[03:42] <Snowdog> As instructed on the perl6 page: www.perl6.org

[03:42] <colomon> if you built rakudobrew build moar before and rakudobrew build moar again today, the libraries should get reinstalled automatically.

[03:42] <jdv79> its not an "upgrade".  its a new install.

[03:42] <Snowdog> Unfortunately, no.

[03:42] <Snowdog> Right, it's a new install.

[03:43] <Snowdog> Will 2015-12 ever be upgraded?

[03:43] <Snowdog> My only point is that it can't be used in a production environment if I have to reinstall and test all the libraries each time it upgrades.

[03:44] <Snowdog> That's all. I'll report it.

[03:44] <jdv79> that's how perlbrew and rakudobrew work though.

[03:44] <colomon> it would be handy to have a way of bundling the standardl libraries you install.  I’m not sure that should be rakudobrew’s responsbility.

[03:44] <Snowdog> Really? Each new build requires a total reconfiguration?

[03:44] <colomon> Snowdog: each new installation does

[03:45] <jdv79> perhaps in the future it'll be made more smooth

[03:45] <colomon> the whole point is to let you easily switch between different installs of rakudo.

[03:45] <Snowdog> OK, thanks. That's just frustrating. I know it's a new language, but I thought it was ready for release.

[03:45] <jdv79> that sort of stuff is very immature at the moment.  it can only get better over time.

[03:45] <geekosaur> while there has been an official release, things are still changing fairly rapidly

[03:46] <geekosaur> especially in the area of packaging/distribution

[03:46] <Snowdog> I think it's a cool language. I'm looking forward to using it.

[03:46] <jdv79> :(  its "ready";  not battle tested.  sorry.

[03:46] <colomon> but I wouldn’t expect rakudobrew to change in the way Snowdog wants?  isn’t the current behavior a feature, not a bug?

[03:48] <colomon> maybe there should be a “release” tag (or something like that) for rakudobrew which treats the latest releases over time as a single install?

[03:48] <jdv79> perhaps a feature could be added to "mirror/port/re-install" one perl6's libs to another but its working as expected right now afaik

[03:48] <Snowdog> Aye!

[03:49] *** xtreak joined
[03:49] *** azawawi joined
[03:50] <xtreak> Hi I am a perl newbie. I was learning grammars. They seem very powerful. I was trying to use it to parse my toy language.

[03:51] <AlexDaniel> xtreak: welcome!

[03:51] <xtreak> How can I use it throw errors when there is an unescaped quote in the string like 'hello' i am good'

[03:52] <xtreak> Is it possible or am I doing it wrong. Sorry if its too naive.

[03:54] <jdv79> no idea.  maybe look at the Perl6 grammar itself or wait til someone who knows wakes up to see your question and if nobody answers in a few hours ask again.

[03:55] <xtreak> Thanks thats a gud idea. Is the perl6 parser written in Perl6 or Perl5? I don't have much experience on C.

[03:57] *** ZoffixWin joined
[03:57] *** ZoffixWin left
[03:57] *** ZoffixWin joined
[03:57] <skids> xtreak: The parser is in Perl 6

[03:57] <ZoffixWin> .tell [Coke] The announcement is great news, but it really should include a download link :/ RE: http://blogs.perl.org/users/coke/2016/02/rakudo-perl-6-compiler---2016011-released.html

[03:57] <yoleaux> ZoffixWin: I'll pass your message to [Coke].

[03:58] <ZoffixWin> Or how to get it...

[03:59] <jdv79> xtreak: iirc the parser is probably src/Perl6/Grammar.nqp

[03:59] <jdv79> also see Actions.nqp

[04:00] <jdv79> nqp is just a Perl6 subset (Not Quite Perl)

[04:00] <xtreak> Sure thanks. I hope it does have instructions to compile it again so that I can change and see the effects.

[04:00] <ZoffixWin> At the risk of sounding like a grumpy old man.. I have no clue at all how to get the freshly released Rakudo. I see no tag in the repo and http://rakudo.org/ only has leads to 2015.11 R*

[04:01] <jdv79> xtreak: docs aren't great yet.  best to try something and just ask in here when it doesn't work out.

[04:01] <ZoffixWin> And I hang out here and use Perl 6 and have contributed to the Ecosystem... What would a new person make out of this?

[04:02] <jdv79> ZoffixWin: still keepin it real.  nice.

[04:02] <jdv79> perhaps a pr person wouldn't be a bad idea.  what does the tpf do again?

[04:02] <jdv79> :)

[04:08] <perlawhirl> AlexDaniel: just saw you gist... nice work

[04:08] <AlexDaniel> :)

[04:10] <Hotkeys> ++

[04:11] <AlexDaniel> actually, I really liked the last one

[04:11] <AlexDaniel> I haven't seen [\+] thing earlier

[04:11] <Hotkeys> ZoffixWin: https://github.com/rakudo/rakudo/releases

[04:11] <Hotkeys> they're there

[04:11] <AlexDaniel> how is it called? What does it do exactly?

[04:13] <xtreak> I think [\+] prints the intermediate results in the reduction process

[04:13] <Hotkeys> m: [\+] 1..10

[04:13] <camelia> rakudo-moar a5fe34: ( no output )

[04:13] <Hotkeys> m: say [\+] 1..10

[04:13] <camelia> rakudo-moar a5fe34: OUTPUT«(1 3 6 10 15 21 28 36 45 55)␤»

[04:13] <Hotkeys> seems like you're right xtreak 

[04:14] <Hotkeys> or rather not print but

[04:14] <Hotkeys> creates a list of all the intermediary results

[04:14] <xtreak> Yes :)

[04:15] <xtreak> I think most of the reduction operators can be made like this by having a \ prefixed to them

[04:15] <Hotkeys> "By default reduction meta operators are eager. To lazily generate values, prefix the operator with a \. If the non-meta part contains a \ already, quote it with [] (e.g. [\[\x]])."

[04:16] <Hotkeys> m: my $lazy := [\+] 1..*; say $lazy[^10]

[04:16] <camelia> rakudo-moar a5fe34: OUTPUT«(1 3 6 10 15 21 28 36 45 55)␤»

[04:16] <Hotkeys> m: my $lazy := [\+] 1..*; say $lazy[^20]

[04:16] <camelia> rakudo-moar a5fe34: OUTPUT«(1 3 6 10 15 21 28 36 45 55 66 78 91 105 120 136 153 171 190 210)␤»

[04:16] <Hotkeys> pretty neat

[04:17] <xtreak> http://friedo.com/blog/2016/01/exploring-perl-6-meta-operators

[04:18] <xtreak> p6: my $lazy := [\[\+]] 1..*; say $lazy[^20]

[04:18] <camelia> rakudo-moar a5fe34: OUTPUT«5===SORRY!5=== Error while compiling /tmp/tmpfile␤Two terms in a row␤at /tmp/tmpfile:1␤------> 3my $lazy := [\[\+]]7⏏5 1..*; say $lazy[^20]␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statemen…»

[04:19] <xtreak> Any example of how to use the operations that already contain a / at the beginning?

[04:20] <xtreak> Sorry \

[04:20] *** samb1 left
[04:21] <ZoffixWin> Hotkeys, thanks. Do I still get to grumble about the release process or did I use up all of my allocated points for today?

[04:22] <ZoffixWin> jdv79, not sure whether that was sarcasm, but being more organized about the release process and at least faking excitement about new releases would help Perl 6's adoption greatly IMO.

[04:25] <jdv79> no sarcasm here.  couldn't the tpf or someone else do that for us?

[04:26] <ZoffixWin> Do we have anyone from TPF in the channel? If not, I think they're too far away to do this job efficiently.

[04:26] <AlexDaniel> .tell avuserow https://gist.github.com/AlexDaniel/1e2d1c50963d37c5d43a

[04:26] <yoleaux> AlexDaniel: I'll pass your message to avuserow.

[04:26] <jdv79> idk

[04:27] *** nchambers is now known as ncampers

[04:27] <ZoffixWin> TBH, I'm more picturing a documented release process that will include all the stuff that needs to be done: include download links, post on blogs.perl.org, Twitter, Facebook, Reddit, HackerNews, other popular sites. Include a detailed-enough changelog to make it easier for a handful of bloggers to do a quick write up and spread the news.

[04:28] <jdv79> we don't have that?  what do they do now for a release?

[04:28] * ZoffixWin is unsure.

[04:29] <jdv79> i know there's a script or scripts somwehere that are followed

[04:29] <jdv79> at least one of moritz or [Coke] or FROGGS[mobile] knows about that

[04:30] <ZoffixWin> My feedback is only that this looks more like something I'd email my boss when he asked me what I've been doing for the last month: http://blogs.perl.org/users/coke/2016/02/rakudo-perl-6-compiler---2016011-released.html

[04:30] <ZoffixWin> Anyway. Night all :)

[04:31] *** AlexDaniel left
[04:31] <jdv79> peace

[04:32] *** samb1 joined
[04:32] <jdv79> neat that [Coke] mentioned the nyc meeting

[04:33] <revhippie> it just occurred to me that in that gist from earlier ( https://gist.github.com/AlexDaniel/1e2d1c50963d37c5d43a ) that 'for' in several of them is part of the expression within the 'say'

[04:38] *** vendethiel joined
[04:41] *** MadcapJake joined
[04:41] <MadcapJake> Great news everyone! https://github.com/github/linguist/pull/2832

[04:44] *** xtreak left
[04:44] <skids> Oh yay!

[04:46] *** xtreak joined
[04:48] *** ncampers is now known as nchambers

[04:48] *** nchambers is now known as dtscode

[04:52] *** vendethiel left
[04:54] *** vendethiel joined
[04:54] *** Actualeyes joined
[04:56] *** skids left
[04:58] *** revhippie left
[05:00] *** vendethiel left
[05:02] *** dtscode left
[05:02] *** dtscode joined
[05:03] *** dtscode left
[05:03] *** dtscode joined
[05:09] *** DarthGandalf left
[05:09] <timotimo> MadcapJake: while great in theory, now the real work begins. waiting for the PR to get merged. likely takes about 1-2 years

[05:09] *** xinming_ left
[05:11] *** DarthGandalf joined
[05:11] <MadcapJake> hahaha

[05:13] <timotimo> seriously, though

[05:13] <MadcapJake> timotimo: http://issuestats.com/github/github/linguist

[05:13] <timotimo> the last time we tried to get better perl6 highlighting ...

[05:13] <MadcapJake> oh in language-perl ?

[05:14] <timotimo> i don't think so

[05:14] <MadcapJake> Yeah when I started language-perl6fe, I knew there was one in language-perl, but I didn't want to be hindered by waiting for PRs to merge xD

[05:14] <timotimo> https://github.com/github/linguist/pull/900

[05:15] <MadcapJake> woah

[05:15] <timotimo> https://github.com/github/linguist/pull/750 - not as bad

[05:16] <timotimo> so yeah. we've been burned in the past

[05:17] <timotimo> i have no intent on saying "i'm sure they'll merge it today!" for the rest of my life. OP will surely deliver, and all that.

[05:17] <MadcapJake> wow, well the nice part of the PR I ref'd, it's just highlighting, only adds a submodule and a few reference changes to the selectors that I use

[05:17] <timotimo> "only adds a submodule" sounds pretty fucking bad :)

[05:17] <MadcapJake> lol

[05:17] *** khw left
[05:18] <MadcapJake> well that appears to be there modus operandi for language support

[05:18] <timotimo> what, wait for a few years to see if it's worth it to click the "merge PR" button?

[05:19] <MadcapJake> no submodules :P

[05:19] <MadcapJake> https://github.com/github/linguist/tree/master/vendor/grammars

[05:20] <MadcapJake> speaking of...

[05:21] *** laz78 joined
[05:21] *** BenGoldberg left
[05:22] *** azawawi left
[05:22] <MadcapJake> had to make sure they merge the latest 1.5.0 highlighter (which I pushed after he made his PR). Oh lovely submodules!

[05:24] *** xtreak left
[05:24] <MadcapJake> timotimo: just figured out that Slack snippets uses CodeMirror for highlighting, gonna take a crack at writing a Perl 6 "mode"

[05:24] <timotimo> i saw that, yeah :)

[05:25] <timotimo> we don't have a codemirror mode yet?

[05:25] <MadcapJake> not in the main project, i believe

[05:26] <MadcapJake> looks like azawawi has one

[05:26] <timotimo> nice

[05:26] <MadcapJake> oops, dead link

[05:26] <timotimo> uh oh :(

[05:27] <MadcapJake> found it!

[05:28] *** xtreak joined
[05:28] <MadcapJake> https://github.com/azawawi/farabi6/blob/1d017f1ff4b7c3b2f7ef1b5ff90b7ab197a6f773/lib/Farabi6/files/assets/perl6-mode.js

[05:28] <timotimo> oh, of course! farabi!

[05:28] <MadcapJake> oops, why does github sometimes bring you to a commit instead of master?

[05:28] <timotimo> good question

[05:29] <MadcapJake> only happens if you click a filename in search

[05:29] <timotimo> ah, that could be

[05:35] <MadcapJake> is there an estabalished mime type for perl6? «text/x-perl6» ?

[05:37] *** johan joined
[05:38] *** johan_ left
[05:38] <MadcapJake> i'm just gonna assume that's it, only other possibility i could see is «text/x-perl-6»

[05:38] *** Cabanossi left
[05:40] *** Cabanossi joined
[05:42] <timotimo> i'd be for "this is perl6 program code"

[05:42] <timotimo> actually, make that a space between perl and 6, and make it a " "

[05:43] *** dtscode is now known as 64MAAYGZ0

[05:43] <MadcapJake> mime types can have spaces?

[05:44] *** 64MAAYGZ0 is now known as mniip

[05:44] <timotimo> no

[05:45] * timotimo bbl

[05:45] *** mniip left
[05:46] *** johan left
[05:46] *** nchambers joined
[05:49] <MadcapJake> timotimo: haha it was just merged, it will go live later this week https://github.com/github/linguist/pull/2832

[05:51] *** johan joined
[05:55] *** jferrero joined
[05:58] *** nchambers is now known as I

[05:58] *** I is now known as Guest72381

[05:59] *** _Gustaf_ joined
[05:59] *** Guest72381 is now known as nchambers

[06:02] *** xtreak left
[06:08] <sammers> p6: use JSON::Tiny; my %h = a => '1', c => '3', b => '2'; to-json(%h).say; to-json(%h.sort).say;

[06:08] <camelia> rakudo-moar a5fe34: OUTPUT«===SORRY!===␤Could not find JSON::Tiny in:␤    /home/camelia/.perl6/2015.12-232-ga5fe347␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-1/share/perl6␤    C…»

[06:08] <sammers> hmm

[06:08] <sammers> having an issue with this. after I sort a hash JSON::* is nesting the sorted hash inside a new [];

[06:09] <sammers> like this, pre-sort: { "a" : "1", "c" : "3", "b" : "2" }

[06:09] <sammers> after sort: [ { "a" : "1" }, { "b" : "2" }, { "c" : "3" } ]

[06:10] <sammers> it is also grouping each pair into its own object

[06:12] *** nightfrog left
[06:12] <sammers> p6: my %h = a => '1', c => '3', b => '2'; %h.say; %h.sort.say;

[06:12] <camelia> rakudo-moar a5fe34: OUTPUT«a => 1, b => 2, c => 3␤(a => 1 b => 2 c => 3)␤»

[06:12] *** rodarmor left
[06:12] <sammers> hmm

[06:16] <_Gustaf_> o/

[06:16] <sammers> p6: my %h = a => '1', c => '3', b => '2'; %h.say; %h.sort.hash.say;

[06:16] <camelia> rakudo-moar a5fe34: OUTPUT«a => 1, b => 2, c => 3␤a => 1, b => 2, c => 3␤»

[06:19] *** rodarmor joined
[06:28] *** cpage_ left
[06:29] *** sjoshi joined
[06:36] *** psy_ left
[06:38] *** sno left
[06:44] *** geraud left
[06:47] *** Sgeo left
[06:47] *** nightfrog joined
[06:54] *** CurtisOvidPoe_ joined
[06:57] *** vendethiel joined
[07:00] *** domidumont joined
[07:03] *** xinming joined
[07:03] *** Sgeo joined
[07:04] *** alpha123 left
[07:05] *** domidumont left
[07:05] *** domidumont joined
[07:11] *** psy_ joined
[07:14] *** perlawhirl left
[07:15] *** zakharyas joined
[07:16] *** CurtisOvidPoe_ left
[07:17] *** CIAvash joined
[07:19] *** FROGGS[mobile]2 joined
[07:20] *** vendethiel left
[07:20] *** flaviusb left
[07:23] *** FROGGS[mobile] left
[07:23] <stmuk_> hmmm I think we should stop promoting rakudobrew as a way of n00bz getting rakudo once R* is out 

[07:25] *** vendethiel joined
[07:30] *** nakiro joined
[07:40] *** flaviusb joined
[07:41] *** jake__ joined
[07:42] *** darutoko joined
[07:45] *** firstdayonthejob joined
[07:45] *** jake__ left
[07:46] *** vendethiel left
[07:53] *** vendethiel joined
[07:56] *** FROGGS joined
[07:57] *** Actualeyes left
[08:00] *** virtualsue joined
[08:00] *** sno joined
[08:01] *** [Tux] left
[08:02] *** [Tux] joined
[08:09] <timotimo> maybe

[08:09] <timotimo> especially since we practically dragged it kicking and screaming into the spotlight to begin with :)

[08:10] *** Ven joined
[08:11] *** fireartist joined
[08:12] *** digidog joined
[08:17] <stmuk_> true

[08:19] *** zakharyas1 joined
[08:19] *** zakharyas left
[08:22] <timotimo> we probably ought to update perl6.org's top-of-the-page thingie with the latest release, too

[08:25] <stmuk_> I wondered about that but it might be less confusing for outsiders to just put the R* accouncement there

[08:26] <stmuk_> only R* announcements went on http://rakudo.org/

[08:26] <stmuk_> its all very confusing

[08:27] <moritz> right, let's wait for R*

[08:27] <moritz> or, don't wait, advance it

[08:27] <moritz> everybody can help! Write a release announcement!

[08:27] <stmuk_> I even wonder if one of either rakudo or star releases should go now we are in release phase .. monthly seems more dev than stable

[08:28] <moritz> the star releases weren't meant to be monthly anyway

[08:29] *** sjoshi left
[08:30] *** sjoshi joined
[08:30] <stmuk_> perl5 itself has yearly stable releases

[08:31] <moritz> I don't think we're that mature yet

[08:31] <stmuk_> I can start on star's ://rakudo.org/

[08:31] <stmuk_> [08:26] < stmuk_> its all very confusing

[08:31] <stmuk_> oops

[08:31] *** FROGGS left
[08:31] <stmuk_> sure maybe 3 monthly releases of something at this stage

[08:32] <stmuk_> I mean to type I can start on R*'s docs/announce/2016.01.md shortly if it helps

[08:33] <timotimo> that sounds fantastic, actually

[08:34] <timotimo> man, the track records for "lying in bed, suddenly an optimization opportunity pops into my head" is really bad by now ... just measured how many slots in NFA's state arrays end up "wasted" after the NFA optimizer is done with it, and it's basically nothing

[08:35] <timotimo> (because our VMArrays don't shrink their storage when they get smaller)

[08:35] *** [Tux] left
[08:36] *** [Tux] joined
[08:36] *** xpen joined
[08:37] *** vendethiel left
[08:39] *** firstdayonthejob left
[08:39] *** [Tux] left
[08:39] *** [Tux] joined
[08:44] *** xpen left
[08:45] *** Actualeyes joined
[08:50] *** rindolf joined
[08:51] *** Kogurr left
[08:56] *** wamba joined
[08:57] *** abraxxa joined
[08:59] *** CurtisOvidPoe_ joined
[09:02] *** laz78 left
[09:06] *** jonathan_ joined
[09:07] *** jonathan_ is now known as RabidGravy

[09:07] *** labster left
[09:10] *** CurtisOvidPoe_ left
[09:10] *** dakkar_ joined
[09:12] *** labster joined
[09:12] <RabidGravy> boom

[09:15] *** Averna joined
[09:15] *** abraxxa left
[09:15] <RabidGravy> ls

[09:17] <moritz> no such file or directory

[09:22] *** rvchangue left
[09:24] *** rvchangue joined
[09:27] <sjn> no: command not found

[09:27] <DrForr> Just a note - I got an idea on the way home from Brussels last night about how to properly do Haskell Lenses in Perl 6.

[09:30] *** mm_ joined
[09:30] <[Tux]> test            22.819

[09:30] <[Tux]> test-t          12.251

[09:30] <[Tux]> csv-parser      51.941

[09:30] *** labster left
[09:32] *** labster joined
[09:33] *** labster left
[09:33] *** mm_ left
[09:34] *** abraxxa joined
[09:36] <RabidGravy> DrForr, I may have to re-read that later, it didn't make sense to me prior to coffee

[09:38] <DrForr> Well, it's something like action-at-a-distance which means some people won't like it, and that's fine. The writeup isn't all that great and was done just before I ran out the door, which may explain partially why it was so hard to read.

[09:38] *** brrt joined
[09:38] *** bioexpress joined
[09:40] *** leont joined
[09:41] <bioexpress> p6: my Int $c = 2 == 2; say $c.WHAT;

[09:41] <camelia> rakudo-moar a5fe34: OUTPUT«(Bool)␤»

[09:41] <rindolf> So I have not received a message from [email@hidden.address] since 2014 and now emailing [email@hidden.address] did not give me a reply.

[09:41] <bioexpress> 'p6: my Int $c = 2 == 2; say $c.WHAT;'

[09:42] <moritz> p6: my Int $c = 2 == 2; say $c.WHAT

[09:42] <camelia> rakudo-moar a5fe34: OUTPUT«(Bool)␤»

[09:42] <bioexpress> Why do I not get an error-message with this code?

[09:43] <moritz> m: say Bool ~~ Int

[09:43] <camelia> rakudo-moar a5fe34: OUTPUT«True␤»

[09:43] <moritz> that's why

[09:43] <bioexpress> Thx!

[09:46] *** yeahnoob left
[09:53] *** ely-se joined
[09:55] *** ab6tract joined
[09:55] <ab6tract> .seen hoelzro

[09:55] <yoleaux> I saw hoelzro 1 Feb 2016 16:24Z in #perl6: <hoelzro> Skarsnik: it's definitely weird; I wouldn't be against a warning

[09:55] *** virtualsue left
[09:58] <brrt> fwiw, my 2c about the perl6-slack-channel thing

[09:58] <RabidGravy> ab6tract, did you see https://github.com/jonathanstowe/Tinky/blob/master/examples/encode-files ?  You inspired me :)

[09:59] <RabidGravy> this is almost the use case I had for Tinky in the first place

[09:59] <brrt> folks are obviously perfectly free to make a slack channel for perl6 :-)

[09:59] <RabidGravy> (or one of them)

[09:59] <brrt> however, i can see it become problematic when e.g. the slack channel becomes the primary channel for newcomers, and none of the core / ecosystem developers of perl6 are there

[10:00] <brrt> that would be irresponsible to those newcomers

[10:00] <RabidGravy> well considering there are 344 people on the channel atm it's still quite manageable

[10:01] <brrt> the slack channel?

[10:01] <RabidGravy> this

[10:01] <brrt> right :-)

[10:02] <DrForr> I assume you're not referring to the SubGenius definition, though the app may have been inspired by "Bob"?

[10:03] <DrForr> (I.E. no idea what the app/website is, and am curious.)

[10:04] <ab6tract> RabidGravy: nice! 

[10:04] <ab6tract> i'll give it a try later, maybe it will actually work on OS X this time :)

[10:05] <ab6tract> Slack-- -- -- --

[10:05] <ab6tract> the job is transitioning to that crap, terrible

[10:05] <RabidGravy> I can't make any guarantees about that but I was throwing whole directories of wav files at it at once and it was happy with that

[10:05] *** Zero_Dogg left
[10:05] <moritz> at $work, we're evaluating hipchat right now, because Slack isn't available on premise (iirc)

[10:06] *** Zero_Dogg joined
[10:06] *** Zero_Dogg left
[10:06] *** Zero_Dogg joined
[10:06] <DrForr> Ah, so it's another IRC wannabee.

[10:06] *** bioexpress left
[10:07] *** zakharyas1 left
[10:08] <moritz> we're using Jabber right now

[10:08] <ab6tract> moritz: ooc, what are the operational issues with jabber?

[10:08] <brrt> DrForr: yes, slack is irc for non-nerds

[10:09] <timotimo> brrt: i hang out on the slack channel, fwiw

[10:09] <moritz> ab6tract: I'm not really sure. But history on the server doesn't seem to work too well

[10:09] <brrt> that's something :-)

[10:09] <timotimo> i am something! :)

[10:09] *** vendethiel joined
[10:09] <brrt> your hanging-out is something

[10:09] *** zengargoyle joined
[10:09] <brrt> jabber == xmpp right?

[10:10] <timotimo> yes

[10:10] <ab6tract> moritz: ah, i see. but with slack, there's a company that gets to keep those logs instead

[10:10] <ab6tract> seems like a terrible tradeoff.

[10:10] <ab6tract> not speaking to the decisions of your company, just venting about the situation at mine :)

[10:11] *** cognominal joined
[10:11] <moritz> ab6tract: we're evaluating hipchat (on premise), not slack

[10:11] * zengargoyle really wishes xmpp wasn't so complicated and had taken off better

[10:12] <ab6tract> oh right, sorry for projecting :)

[10:12] <ab6tract> zengargoyle: at one point it had the largest market share of chat by far. Google Chat and Facebook were both using it

[10:13] <ab6tract> i can't say much to the complexity, but it seems more likely to me that it died because it wasn't as easy to build a silo around, which is the future that the big players all want for the web

[10:13] <zengargoyle> i was an early fan, setup an ejabberd server for work that has been rock solid for many years now.

[10:13] <RabidGravy> I think they both still do, massively extended of course

[10:14] <zengargoyle> but lack of easy clients was a bit of a pain.

[10:14] <moritz> somehow $work seems to be unable to operate a Jabber server reliably

[10:14] <ab6tract> zengargoyle: yeah, the whole libpurple stack feels quite crufty

[10:15] <moritz> despite having several good Linux folks

[10:15] *** Ven left
[10:15] <moritz> there's hardly a week without a full disconnect, and pidgin doens't seem to be able to auto-reconnect after that happens

[10:20] <DrForr> Booking relies on Jabber, we rely on Skype here.

[10:20] *** espadrine left
[10:20] <brrt> that sucks

[10:20] <brrt> (unreliable connections)

[10:21] <RabidGravy> I worked at a very large financial institution where all the developers used IRC

[10:23] *** TEttinger left
[10:24] <timotimo> libpurple is a really great Remote Procedure Call solution

[10:25] <timotimo> though maybe that's not as true nowadays any more

[10:27] * flussence is mostly happy running Prosody as an XMPP server; the majority of others I've tried are awful enterprise code

[10:29] <nine> moritz: do you know which jabber server you use?

[10:29] <DrForr> Ah, yet another social media stream to feed.

[10:30] <flussence> (I say “mostly”, because its SSL module has too many layers and they're all hardcoded to use openssl)

[10:30] *** vendethiel left
[10:30] <leont> Openssl is awful, but sadly so are the alternatives

[10:31] <flussence> yep, though I do find gnutls's command line tools a hell of a lot more readable

[10:32] <leont> From what I head, the API is full with fuck-ups (e.g. pointer to buffer arguments without an explicit length)

[10:35] <DrForr> Huh. Their website only lets me create a new "team" or find one that I've already joined even though I've never used Slack before.

[10:36] <brrt> DrForr: slack is not for folks like us

[10:36] <brrt> whereby 'us' is defined as 'people who can manage irc'

[10:36] <DrForr> Seemed to be another Campfire startup thing.

[10:36] <brrt> :-)

[10:36] <brrt> it is

[10:37] <brrt> the difference is that campfire didn't have $x billion UNICORN tagged to it, and slack does

[10:37] <brrt> also, 'going to kill e-mail'

[10:37] <brrt> nothing will kill e-mail folks

[10:37] *** vendethiel joined
[10:37] <DrForr> I was just trying to figure out how to find the Perl 6 community over there, and ... failed.

[10:37] <timotimo> DrForr: you'll go via our "invitation page"

[10:38] <timotimo> http://perl6.bestforever.com/

[10:38] <DrForr> Ah. 

[10:38] <timotimo> it's Quite Different from IRC, yeah

[10:40] *** leont left
[10:40] <DrForr> First time a site's told me my usual password is 'weak'. Huh.

[10:40] *** ely-se left
[10:47] *** araujo joined
[10:47] *** araujo left
[10:47] *** araujo joined
[10:48] *** araujo left
[10:48] *** araujo joined
[10:49] *** kurahaupo joined
[10:49] *** Actualeyes left
[10:49] *** kanishka joined
[10:49] <DrForr> Right, snoozefest over there at the moment apparently.

[10:49] <ab6tract> RabidGravy: Tinky looks quite interesting. Thank you for the concrete example!

[10:50] *** araujo left
[10:50] *** araujo joined
[10:51] <timotimo> are you keeping up with camelia? 'cause camelia is keeping up with you!

[10:52] *** araujo left
[10:53] *** araujo joined
[10:53] <DrForr> Those who do not know of IRC are doomed to reinvent it poorly.

[10:54] *** espadrine joined
[10:54] *** araujo left
[10:55] *** araujo joined
[10:55] <DrForr> Aah, figured it out. Mumble.

[10:55] <timotimo> mumble is a good thing

[10:56] <timotimo> wait what, you're usung "your usual password" on multiple sites? :)

[10:56] <DrForr> Usual throwaway.

[10:57] *** araujo left
[10:57] *** araujo joined
[10:59] *** araujo left
[10:59] *** araujo joined
[10:59] *** araujo left
[10:59] *** araujo joined
[11:01] *** araujo left
[11:02] *** brrt left
[11:02] *** araujo joined
[11:03] *** araujo left
[11:04] *** araujo joined
[11:04] *** araujo left
[11:04] *** araujo joined
[11:05] *** domidumont left
[11:05] *** araujo left
[11:07] <dalek> star: b59cefe | (Steve Mynott)++ | docs/announce/2016.01.md:

[11:07] <dalek> star: import of Rakudo Star 2016.01 announce

[11:07] <dalek> star: review: https://github.com/rakudo/star/commit/b59cefe3bc

[11:07] <dalek> star: e4666ae | (Steve Mynott)++ | README:

[11:07] <dalek> star: doc that JVM doesn't actually work in main README

[11:07] <dalek> star: review: https://github.com/rakudo/star/commit/e4666ae8e1

[11:07] <stmuk_> moritz: that ^^^

[11:08] *** araujo joined
[11:09] *** araujo left
[11:09] *** araujo joined
[11:10] *** domidumont joined
[11:11] *** kurahaupo left
[11:11] *** araujo left
[11:12] *** araujo joined
[11:13] *** kurahaupo joined
[11:13] *** Ven joined
[11:14] *** Actualeyes joined
[11:14] <stmuk_> oops a broken link

[11:15] <timotimo> do all "Perl 6" have the proper evil unicode " " in between? :)

[11:16] <stmuk_> https://github.com/rakudo/rakudo/blob/nom/docs/announce/2016.01.md as listed doesn't actually exist yet .. it may exist in the future depending on merges to nom

[11:16] <stmuk_> timotimo: patches welcome :)

[11:16] <timotimo> i don't have anything nice to make the distinction visible :|

[11:16] <timotimo> for the purpose of editing

[11:18] *** ab6tract left
[11:19] *** kurahaupo left
[11:20] <dalek> star: c7323cd | (Steve Mynott)++ | docs/announce/2016.01.md:

[11:20] <dalek> star: fix link to exist now rather than maybe in the future

[11:20] <dalek> star: review: https://github.com/rakudo/star/commit/c7323cd519

[11:20] *** vendethiel left
[11:23] <dalek> star: 78b4670 | (Steve Mynott)++ | docs/announce/2016.01.md:

[11:23] <dalek> star: more than one perl tutorial included now

[11:23] <dalek> star: review: https://github.com/rakudo/star/commit/78b46702a6

[11:24] *** ely-se joined
[11:26] *** vendethiel joined
[11:32] <moritz> stmuk_: thanks

[11:47] *** vendethiel left
[11:54] *** FROGGS joined
[11:56] *** maybekoo joined
[11:57] *** sortiz left
[12:00] *** brrt joined
[12:25] *** Ven left
[12:25] *** vendethiel joined
[12:30] *** fireartist left
[12:31] *** SunilJoshi joined
[12:32] <dalek> star: 153abec | (Steve Mynott)++ | README:

[12:32] <dalek> star: bump some more years

[12:32] <dalek> star: review: https://github.com/rakudo/star/commit/153abecb2a

[12:33] *** digidog_ joined
[12:34] *** sjoshi left
[12:34] *** digidog left
[12:34] *** mkz left
[12:34] *** mkz_ joined
[12:34] <dalek> star: 3db4a0d | (Steve Mynott)++ | README:

[12:34] <dalek> star: Change 'is primary author' to 'was originally primary author'

[12:34] <dalek> star: review: https://github.com/rakudo/star/commit/3db4a0d191

[12:38] *** Ven joined
[12:39] *** kid51 joined
[12:42] *** Averna left
[12:42] <cognominal> m: my %a = 'a'..'f'; %a = Nil; # "Assigning to any entire composite container empties the container" says S02

[12:42] <camelia> rakudo-moar a5fe34: OUTPUT«Odd number of elements found where hash initializer expected␤  in block <unit> at /tmp/Er2OxDzvSb line 1␤␤»

[12:42] *** BenGoldberg joined
[12:43] <cognominal> is this a fossil or is this an unimplemented feature? I suppose it would have the merit to avoid to create an empty hash just to assign it.

[12:45] *** ab6tract joined
[12:45] <ab6tract> cognominal: the error is in your first hash assignment

[12:45] <gfldex> cognominal: i doubt that would be a merrit. Depending on how the memory layout of a hash is structured it can be way faster to free the whole thing and create a new empty hash.

[12:45] <ab6tract> m: my %h = 'a'..'f' Z=> True; say %h; %h = Nil; say %h

[12:45] <camelia> rakudo-moar a5fe34: OUTPUT«a => True␤Odd number of elements found where hash initializer expected␤  in block <unit> at /tmp/LsKKFVbRR1 line 1␤␤»

[12:46] <ab6tract> hmm, or not :)

[12:46] *** vendethiel left
[12:46] <jnthn> m: my %h = 'a'..'f' Z=> True; say %h; %h = Empty; say %h

[12:46] <camelia> rakudo-moar a5fe34: OUTPUT«a => True␤␤»

[12:47] <jnthn> Nil stopped meaning empty list a good while ago :)

[12:47] <cognominal> so, that's a fossil

[12:47] <jnthn> Yeah; should say Empty, though some may prefer %h = ()

[12:49] <cognominal> may be someone competent should go over that section :  http://design.perl6.org/S02.html#Nil

[12:50] *** vendethiel joined
[12:52] *** kid51 left
[12:53] *** maybekoo left
[12:54] <cognominal> or should that be a  s:g/Nil/Empty/ ?

[12:54] *** wamba left
[12:55] <dalek> ecosystem: da072fa | RabidGravy++ | META.list:

[12:55] <dalek> ecosystem: Rename META.info for IO::Path::Mode

[12:55] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/da072fa8c7

[13:01] <RabidGravy> there, IO::Path::Mode now stringifies the mode to something like what ls -l does

[13:02] <moritz> RabidGravy++

[13:04] <RabidGravy> still not entirely sure about the "sticky bit" but hey how often do you see that in the wild

[13:06] <dalek> star: cfe8e3b | (Steve Mynott)++ | README:

[13:06] <dalek> star: more pointers to docs in README

[13:06] <dalek> star: review: https://github.com/rakudo/star/commit/cfe8e3baf2

[13:06] *** lokien_ joined
[13:08] <dalek> star: c4259ad | (Steve Mynott)++ | README:

[13:08] <dalek> star: fit better in 80 cols

[13:08] <dalek> star: review: https://github.com/rakudo/star/commit/c4259ad1fc

[13:08] <RabidGravy> !fmt

[13:08] <dalek> doc: e9483ab | (Wenzel P. P. Peppmeyer)++ | doc/Language/list.pod:

[13:08] <dalek> doc: doc Range as List/Array slice

[13:08] <dalek> doc: review: https://github.com/perl6/doc/commit/e9483ab5d3

[13:09] *** wamba joined
[13:11] <hoelzro> o/ #perl6

[13:12] *** Snowdog left
[13:14] <gfldex> m: Empty.WHAT.say;

[13:14] <camelia> rakudo-moar a5fe34: OUTPUT«(Slip)␤»

[13:14] <gfldex> m: ().WHAT.say;

[13:14] <camelia> rakudo-moar a5fe34: OUTPUT«(List)␤»

[13:15] <gfldex> jnthn: ^^^

[13:15] *** vendethiel left
[13:16] <dalek> star: 85c1046 | (Steve Mynott)++ | tools/build/Makefile.in:

[13:16] <dalek> star: bump STAR_VERSION

[13:16] <dalek> star: review: https://github.com/rakudo/star/commit/85c1046f21

[13:16] <dalek> star: 8d3596c | (Steve Mynott)++ | tools/build/Makefile.in:

[13:16] <dalek> star: bump a (c) year

[13:16] <dalek> star: review: https://github.com/rakudo/star/commit/8d3596ca72

[13:19] *** kaare__ joined
[13:19] *** digidog_ left
[13:26] <dalek> star: edd8f41 | (Steve Mynott)++ | / (2 files):

[13:26] <dalek> star: update versions in Makefile

[13:26] <dalek> star: review: https://github.com/rakudo/star/commit/edd8f415f9

[13:29] <dalek> star: ba92e0b | (Steve Mynott)++ | LICENSE:

[13:29] <dalek> star: yet another year bump

[13:29] <dalek> star: review: https://github.com/rakudo/star/commit/ba92e0b4ad

[13:33] *** AlexDaniel joined
[13:35] <jnthn> gfldex: Yes? :)

[13:35] *** skingsbu joined
[13:35] <jnthn> I didn't say Empty and () are the same thing, just that %h = Empty and %h = () have the same effect. :)

[13:35] <BenGoldberg> m: (|()).WHAT.say;

[13:35] <camelia> rakudo-moar a5fe34: OUTPUT«(Slip)␤»

[13:35] <gfldex> Empty is not the empty list and I don't really understand what that means.

[13:36] <BenGoldberg> m: ((|()) == Empty).say;

[13:36] <camelia> rakudo-moar a5fe34: OUTPUT«True␤»

[13:36] <llfourn_> m: say Slip ~~ List

[13:36] <camelia> rakudo-moar a5fe34: OUTPUT«True␤»

[13:36] <gfldex> since the docs dont talk about Empty I feel the urge to improve my understanding.

[13:36] <jnthn> Well, its main use is to let list comprehensions work out

[13:36] <moritz> gfldex: Empty is just an empty Slip

[13:36] <moritz> gfldex: and it's a constant, not a type

[13:37] <jnthn> m: say ($_ * 2 if $_ > 3 for 1..10)

[13:37] <camelia> rakudo-moar a5fe34: OUTPUT«(8 10 12 14 16 18 20)␤»

[13:37] <jnthn> If the `if` there didn't result in Empty, then we'd end up with lots of () in the result

[13:37] <jnthn> Uh, that wasn't quite so well put

[13:37] <jnthn> If the `if` there didn't resulted in (), then we'd end up with lots of () in the result.

[13:37] <jnthn> crap!

[13:38] <jnthn> What was in my salad... :)

[13:38] <jnthn> Take 3:

[13:38] <BenGoldberg> Too many negatives.

[13:38] <zengargoyle> lol

[13:38] <DrForr> Those weren't bac-o-bits :)

[13:38] <jnthn> If the `if` evaluated to () when the condition was False, then the result would be (() () () 8 10 ...)

[13:39] <jnthn> Because we don't magically make an empty List disappear

[13:39] <jnthn> An empty Slip, on the other hand, will vanish

[13:39] <jnthn> Empty is just a nice name for the empty slip

[13:40] <DrForr> Cr*p, now I have 'Little Black Dress' by Tim Curry in my head.

[13:40] <jnthn> :D

[13:43] <gfldex> i can't wait for a german Perl 6 book. see: http://www.amazon.de/s/ref=nb_sb_noss?__mk_de_DE=%C3%85M%C3%85%C5%BD%C3%95%C3%91&url=search-alias%3Daps&field-keywords=slip

[13:44] <DrForr> https://www.youtube.com/watch?v=Kq3EU-jEwrg # Woops, Richard O'Brien.

[13:44] <moritz> gfldex' link might be NSFW for some values of W

[13:45] <DrForr> ^^ might be slightly beyond the pale as well, but I don't think *too* far.

[13:51] *** FROGGS left
[13:51] <hoelzro> ab6tract: hey, I saw you were looking for me before; what's up?

[13:54] <dalek> rakudo-star-daily: 114da64 | coke++ | log/ (2 files):

[13:54] <dalek> rakudo-star-daily: today (automated commit)

[13:54] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/114da64d3b

[13:54] <dalek> rakudo-star-daily: ac9e07d | coke++ | log/ (8 files):

[13:54] <dalek> rakudo-star-daily: today (automated commit)

[13:54] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/ac9e07d53b

[13:54] <dalek> rakudo-star-daily: 09082ec | coke++ | log/ (9 files):

[13:54] <dalek> rakudo-star-daily: today (automated commit)

[13:54] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/09082ec738

[13:54] <RabidGravy> can anyone think of a better way of doing this:

[13:54] <dalek> perl6-roast-data: 968222c | coke++ | / (6 files):

[13:54] <dalek> perl6-roast-data: today (automated commit)

[13:54] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/968222c090

[13:54] <dalek> perl6-roast-data: 1d2b867 | coke++ | / (6 files):

[13:54] <dalek> perl6-roast-data: today (automated commit)

[13:54] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/1d2b867dfd

[13:54] <RabidGravy> m: class NoType {}; sub foo(Mu:U :$foo = NoType) { if $foo ~~ NoType { say "no foo" } else { say $foo }}; foo(); foo(foo => Int)

[13:54] <camelia> rakudo-moar a5fe34: OUTPUT«no foo␤(Int)␤»

[13:54] *** vendethiel joined
[14:02] <perlpilot> RabidGravy: nope.

[14:04] <ab6tract> hoelzro: oh, just checking to see if you had a chance to test my proc async bug on freebsd

[14:04] <hoelzro> ab6tract: I did, but I wasn't able to reproduce the issue =/

[14:05] *** muraiki joined
[14:07] <ab6tract> hoelzro: :( :( :(

[14:08] <ab6tract> i usually love the experience of running OS X. but it's the odd duck in perl6 development

[14:08] <jnthn> RabidGravy: Not other than taking the capture (|c) and looking at that

[14:09] <RabidGravy> yeah, that's what I thought and ^ seems reasonably succinct

[14:09] *** kanishka left
[14:10] <jnthn> Yeah.

[14:10] <jnthn> We do a similar trick in the QAST::Nodes fwiw :)

[14:10] <RabidGravy> (somewhat of a hack to work round no private multis)

[14:10] <[Coke]> .

[14:10] <yoleaux> 03:57Z <ZoffixWin> [Coke]: The announcement is great news, but it really should include a download link :/ RE: http://blogs.perl.org/users/coke/2016/02/rakudo-perl-6-compiler---2016011-released.html

[14:11] <[Coke]> ZoffixWin: added a link to the page to the tarballs.

[14:11] <ab6tract> what's the blocker on private multis, ooc?

[14:11] <[Coke]> Hotkeys: don't ever use *release* from github. ew.

[14:11] *** cdg joined
[14:11] <[Coke]> ZoffixWin: you have many people who volunteer for the TPF in this group. what's up?

[14:12] *** mr-foobar joined
[14:12] <[Coke]> ZoffixWin: (documented release process) ... see docs/release*

[14:13] <jnthn> ab6tract: Mostly just implementing them, though it'd need some MOP refactoring to do it cleanly (without code dupe)

[14:13] <jnthn> ab6tract: I don't think there's any deep reason we can't have them.

[14:16] <ab6tract> jnthn: ah, that's reassuring!

[14:16] <ab6tract> it felt like one of those things that should be possible

[14:17] <stmuk_> moritz: I've just diff'd the result of the current star build and your RC0 of yesterday and can see no interesting differences

[14:17] *** vendethiel left
[14:19] <moritz> stmuk_: should only be changes in README and then announcement etc.

[14:19] <stmuk_> moritz: yes and your perl6intro.pdf was out of date and the year changes I did this morning

[14:21] <stmuk_> nothing code related

[14:23] *** vendethiel joined
[14:23] <hoelzro> ab6tract: it would be nice if a macless person like me could just spin up an OS X VM to test things on it =/

[14:24] <stmuk_> hoelzro: I think that maybe possible .. not sure how legal or easy it is though

[14:25] <llfourn_> can travis do osx?

[14:25] <hoelzro> stmuk_: yeah, I don't think it's legal; it also would rely on me having an OS X disk

[14:25] <geekosaur> sometimes

[14:26] <stmuk_> https://docs.travis-ci.com/user/osx-ci-environment/

[14:26] <llfourn_> if you google 'OSX vps' you will find a few things

[14:27] <stmuk_> I'm a little sceptical it works without problems .. linux even seems a tad flaky on travis

[14:27] <llfourn_> stmuk_: cool.

[14:27] <geekosaur> never mind that. OS X is always flaky in a VM

[14:28] <ab6tract> hoelzro: agreed. i wish they would just sell licenses to the damn thing

[14:28] *** pmurias joined
[14:29] <ab6tract> but then again, the apple hardware ecosystem is nice and tidy, which would go straight out the window

[14:29] <geekosaur> apple is a hardware company

[14:30] <stmuk_> I could probably issue a OS X shell but not at the moment since the desktop is in another city and I would have to play SSH port forwarding tricks

[14:30] *** ZoffixW joined
[14:32] <ZoffixW> Here's a trick: "{" -> TAB -> '[Coke]'  guess how it works :)

[14:32] <pmurias> are there Perl 6/NQP versions for the Programming Language Shootout/Computer Language Benchmark?

[14:32] <stmuk_> pmurias: I hope not :)

[14:32] <ZoffixW> [Coke], well, the part of the release process I was grumbling about last night doesn't seem to be included in docs/release and I don't know if it should be the job of the release manager or someone who picks up the metaphorical torch.

[14:33] *** ab6tract left
[14:33] <ugexe> travis works on osx

[14:34] <ugexe> https://github.com/ugexe/zef/blob/master/.travis.yml#L6

[14:35] <ugexe> also if you want an osx vm there is macincloud.com 

[14:35] <ugexe> i use them as well. its just ok

[14:36] <pmurias> stmuk_: why?

[14:37] <pmurias> stmuk_: I found some in the perl6/perl6-examples repo

[14:37] <stmuk_> pmurias: I was partly joking

[14:38] <ZoffixW> [Coke], step 16 (in https://github.com/rakudo/rakudo/blob/nom/docs/release_guide.pod) says Compiler releases are not to be announced to avoid confusion. Step 17 says to update wikipedia. And what I see—and I'm not criticizing anyone, but just making an observation—the compiler release was actually announced on blogs.perl.org, but without a download link. When asked in-channel, the link to GitHub release was given, but then I see commentary in the

[14:38] <ZoffixW>  backlog that it's not the right link. Wikipedia has been updated, but with the wrong year, so now it says release was "11 months ago". The guide also doesn't include any channels where developers would hear about the release (HN, Reddit, Facebook, Twitter, other social networks and blogs). And speaking of blogs, there should be some content for 3rd party bloggers to blog about. Sure, it was just a bug fix release, but what bugs? I'm having trouble f

[14:38] <ZoffixW> inding the Changelog. Were there any critical/security bugs fixed or were they all minor and I don't need to upgrade if I don't feel like it? Many people were complaining about NativeCall lib version warning and now it's gone, that'd be a nice mention.

[14:38] <ZoffixW> Oops.. Sorry, didn't realize I typed that much.

[14:39] *** skingsbu left
[14:39] <gfldex> ZoffixW: don't worry, we love your typing

[14:39] <ZoffixW> I guess my main point is the release process should include steps to propagate the announcements to people outside of Perl community, in hopes of getting them interested in Perl 6.

[14:40] <stmuk_> ZoffixW: I think focusing on a few R* releases a year is the way to go

[14:41] <[Coke]> ZoffixW: I personally wrote a blog post, mainly to mention the NY.pm event.

[14:41] <[Coke]> in channel. You got the best answer the person awake had.

[14:42] <[Coke]> the guide was written pre-christmas. some updates have to be made. suggest them.

[14:42] * colomon is not sure how to comment on https://github.com/tadzik/rakudobrew/issues/81 without sounding like he’s totally dismissing the idea.

[14:42] <stmuk_> ugexe: are the os x results available on https://travis-ci.org/ugexe/zef ? I am failing to find them

[14:42] <[Coke]> the release announcement said what was in it.

[14:42] <[Coke]> it's in docs/announce/2016.01.md

[14:42] * ZoffixW wasn't aware of docs/announce stuff

[14:42] <[Coke]> and this is all for the compiler, not R*.

[14:42] <ugexe> stmuk_: its the 2nd build job

[14:43] <[Coke]> changelog is also in docs.

[14:43] <[Coke]> ZoffixW: also, join the perl6-users mailing list.

[14:43] <stmuk_> colomon: outsiders should be using R* not rakudobrew

[14:43] <MadcapJake> colomon: seemed an alright point until the last line...

[14:43] <stmuk_> ugexe: ty

[14:44] <[Coke]> I'm sure we can start to add more notifications about the compiler release to other media; the original plan was to avoid confusing people, because we used to get, every. time. "but where's the bundled version?"

[14:44] <colomon> stmuk_: outsiders use the p5 equivalent perlbrew all the time.

[14:44] <ZoffixW> I don't see 2016.* in https://github.com/rakudo/rakudo/tree/nom/docs/announce

[14:44] <colomon> MadcapJake: keeping one set of libraries for all your rakudobrew builds defeats one of the major purposes of rakudobrew.

[14:44] <ZoffixW> Ah, ok, it's in the release branch/commit/tag: https://github.com/rakudo/rakudo/tree/f033f2bd3a5e57d7e14f03f34c83782cf04aae1a/docs/announce

[14:45] <stmuk_> colomon: I think rakudobrew was intended as a quick hack for development which it does very well its not a release maintaining tool

[14:45] <MadcapJake> colomon: but at least his point makes sense, it would be *nice* to have libraries separate from versioned releases,

[14:45] *** vendethiel left
[14:46] *** skids joined
[14:46] <colomon> MadcapJake: only if you envision all releases as being able to use the exact same version of a library.

[14:46] <ugexe> but you'd only be able to keep the source

[14:46] <ZoffixW> [Coke], fair enough, since it's compiler release and not R* a lot of my critique is unwarranted.

[14:47] <MadcapJake> colomon: what if each module was stored with subdirs pertaining to each release?

[14:47] <pmurias> colomon: re issue 81, points 1,2,3 are things that can be fixed while still recompiling all the libraries

[14:48] <ugexe> sounds like what an external CompUnitRepository would do

[14:48] <colomon> MadcapJake: how is that better than storing the module with each release?

[14:48] <[Coke]> ZoffixW: we're waiting a merge back. 

[14:48] <stmuk_> anyway I'm hoping R* 2016.01 is now quite close to being released

[14:48] <[Coke]> sorry, "merge"

[14:49] <MadcapJake> no need to reinstall, just a "rakudobrew update modules" command and it would copy prev release version over to new one and run tests again

[14:49] <[Coke]> (since it's probably going to be a bunch of evil cherry picks.)

[14:49] <ugexe> but then rakudobrew is package manager

[14:50] <MadcapJake> ugexe: right, i agree, i'm just playing devil's advocate, the point is, it could be handled differently wherein modules are external

[14:50] <ugexe> ::FileSystem are external

[14:51] <ugexe> otherwise you need an external compunitrepository so that it can do things like install the tests

[14:51] <stmuk_> I think rakudobrew needs a maintainer anyway

[14:51] *** Ben_Goldberg joined
[14:51] <ugexe> CompUnitRepository::RakudobrewLib or something

[14:52] *** Ben_Goldberg left
[14:53] <skids> Other than the panda building, I could see all the rakudobrew functionality being moved into the rakudo build system, personally.  (Not that I'm volunteering :-)

[14:53] <tadzik> colomon: how about "you're right, rakudobrew is not meant for production environment"? :)

[14:54] *** BenGoldberg left
[14:54] *** Ben_Goldberg joined
[14:54] <[Coke]> note that a lot of the discussion about rakudobrew might be good in -toolchain

[14:55] *** SunilJoshi left
[14:55] <perlpilot> tadzik: "But I thought Rakudo was production ready?!?"  :)

[14:55] *** AlexDaniel left
[14:56] <[Coke]> Point people at the part of the christmas announcement where we said bear with us. :P

[14:59] <[Coke]> "There is still plenty of work ahead for us to improve speed, portability, and stability. Do not expect the level of perfection that you see in established products. This is essentially a .0 release of a compiler. We do not claim an absence of bugs or instabilities. We do not claim the documentation is complete. We do not claim portability to many architectures. We do not claim that all downstream software w

[14:59] <[Coke]> ill work correctly. Think of it as a first kernel release, and now we get to build and port various distributions based around that kernel.

[14:59] <[Coke]> "

[14:59] <[Coke]> TimToady++

[15:00] *** Hor|zon joined
[15:05] <nine> What is supposedly the issue with sharing a module installation between multiple rakudo versions?

[15:06] <nine> colomon: ^^

[15:07] <ugexe> installing/running the tests so you know it actually works on a rakudo version you didn't install it with is one thing

[15:07] *** _Gustaf_ left
[15:08] <nine> If a user wants to do that she is free to do so. But that doesn't necessitate forcing all users to do that.

[15:08] *** sammers left
[15:08] <ugexe> right, an external compunitrepository

[15:12] *** vendethiel joined
[15:12] <colomon> I know I have had times where I kept an old rakudobrew build around so I could use it with modules that didn’t work with current rakudo.

[15:13] <colomon> I guess I’m not arguing you shouldn’t be able to do that if you’d like.  But it seems like it would be a weird default for rakudobrew

[15:14] <colomon> (I mean, all builds sharing one install of libraries is a weird default.)

[15:14] <nine> 1. we now promise backwards compatibility. 2. if you need an older version, you'll be able to install just that

[15:16] <nine> 3. installing a new version of a module does _not_ mean uninstalling the old version. Both will still be available!

[15:17] *** ely-se left
[15:17] <ugexe> theoretically it could get messy during build phases if any part of it is tied to the perl6 version

[15:17] <jnthn> Also maybe worth mentioning that precomps of a module do not conflict between different compiler versions.

[15:17] <RabidGravy> which latter does of course mean that you have to specify an version in the use if you require a specific version or later

[15:18] <jnthn> (That is, you can move between compiler versions sharing the same installed set of modules without problems.)

[15:18] <RabidGravy> which I don't have a problem with but it does catch me out

[15:18] <jnthn> (Which wasn't true a copule of months back.)

[15:19] *** Ven left
[15:19] <nine> The only reason rakudobrew installed modules per rakudo version is that perlbrew does it that way. The only reason perlbrew does it is because in Perl 5 modules may contain a C part (called XS) that's linked against the installed perl version and does only work with that.

[15:21] <ugexe> i thought it was because thats just default behavior for installing a module, and local::lib is available if you want it in some other path

[15:23] *** Ven joined
[15:24] <mspo> use lib "foo" seems so much easier than local::lib

[15:25] *** brrt left
[15:25] *** Ven left
[15:26] <RabidGravy> views or attachments next, that is the question

[15:26] *** kurahaupo joined
[15:26] *** kurahaupo left
[15:27] <RabidGravy> as a matter of interest does anyone use CouchDB in their work?  I'm making this thing for my own purposes but I'd be interested to hear what other people use it for

[15:28] *** ZoffixW left
[15:29] *** Ven joined
[15:29] <mspo> RabidGravy: I do

[15:30] <mspo> RabidGravy: we use it for a better memcache, and for straight up document caching mostly

[15:30] <mspo> RabidGravy: very little usage of views

[15:30] <RabidGravy> cool, do you use attachments?

[15:30] <mspo> never heard of them :)

[15:31] <mspo> RabidGravy: it's just an optional caching layer (for almost everything)

[15:31] <mspo> oh except one place where we use it as a regualr k:v database

[15:31] <mspo> but I think that is still just storing jobvite data

[15:31] <RabidGravy> right, well you could use Sofa now then :)

[15:32] <mspo> probably

[15:32] <RabidGravy> https://github.com/jonathanstowe/Sofa

[15:33] <RabidGravy> It's not so much "simple" now

[15:34] *** vendethiel left
[15:39] *** AlexDaniel joined
[15:43] *** ely-se joined
[15:44] *** perl6newbee joined
[15:44] <RabidGravy> but the "better memcache" thing never occurred to me

[15:47] <mspo> well you can open memcache buckets on couchbase and just use memcache

[15:47] <mspo> it was originally born from memcachedb

[15:50] *** Relsak joined
[15:52] <mspo> RabidGravy: I also have a group using cassandra as a cache layer; it is a terrible choice

[15:52] <mspo> it collects tombstones like crazy and uses tons of disk to keep itself clean

[15:52] <mspo> why they didn't use redis is beyond me

[15:52] *** vendethiel joined
[15:56] *** Ven left
[15:56] *** AlexDaniel left
[16:02] *** nakiro left
[16:06] *** Actualeyes left
[16:09] *** ely-se left
[16:11] <pmurias> looking at some programming language shooutout benchmarks results from 2009 Perl 6 performance has improved a *lot*

[16:12] *** khw joined
[16:13] <moritz> pmurias: there's a mandelbrot fractal generator that I blogged about in 2009(?), whose runtime then was several minutes, and is now at the low seconds

[16:14] <moritz> and even lower if one uses one or two "int" annotations

[16:14] *** AndChat380436 joined
[16:14] <moritz> (and the code runs unmodified since then :-)

[16:14] <AndChat380436> p6:say 1;

[16:14] *** vendethiel left
[16:16] *** vendethiel joined
[16:20] <RabidGravy> mspo++ # reminding me that Cache::Memcached hadn't been tested since Christmas

[16:20] <RabidGravy> fixed again!

[16:20] <mspo> nice

[16:20] <mspo> RabidGravy: woring on BSON and mongodb next?

[16:22] *** AndChat380436 left
[16:22] <RabidGravy> I think the MongoDB module works

[16:22] <mspo> cassandra, then?

[16:23] *** AndChat380436 joined
[16:24] *** Actualeyes joined
[16:29] *** Skarsnik joined
[16:30] <dalek> rakudo/nom: 3053598 | lizmat++ | src/core/Hash.pm:

[16:30] <dalek> rakudo/nom: Make basic hash access 25% faster

[16:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3053598466

[16:31] <DrForr> Well cr*p, Perl 6 qq{} interpolation is not polite to C code. Which comes as no surprise, but still...

[16:31] <DrForr> Specifically 'c_cell->type = ZERO;' # The -> I can't seem to escape without resorting to heroic methods.

[16:32] *** ZoffixW joined
[16:33] <Juerd> m: say "foo->bar"

[16:33] <camelia> rakudo-moar a5fe34: OUTPUT«foo->bar␤»

[16:33] <jnthn> lizmat: You might be able to get it even faster

[16:33] <ZoffixW> m: say qq{c_cell->type = ZERO;}

[16:33] <camelia> rakudo-moar a5fe34: OUTPUT«c_cell->type = ZERO;␤»

[16:33] <Juerd> DrForr: I don't understand.

[16:33] <ZoffixW> DrForr, what do you mean?

[16:33] <lizmat> jnthn: i have no doubt, but don't see right now

[16:33] <DrForr> This is in a qq:to/FOO/ heredoc.

[16:33] <Juerd> Still

[16:33] <skids> So, should I leave PR#685 targettied at nom, or is there a new set of branches now?  (It has a minor, untested-in-roast behavioral change that is most likely not being relied on by anyone, in addition to plain old bugfixes)

[16:33] <jnthn> lizmat: The trick is that nqp::atpos returns null if the key does not exist

[16:33] <Juerd> DrForr: Is it a hash key that starts with a < somewhere earlier?

[16:33] <ZoffixW> DrForr, but -> is not special :/

[16:34] <lizmat> jnthn: atpos?   you mean atkey?  and: also on JVM?

[16:34] <DrForr> No, as I said it's C code, but embedded in a here-doc.

[16:34] <jnthn> lizmat: well, atpos does too, but I meant atkey

[16:34] <jnthn> lizmat: Yes, on JVM...this is relied on quite a bit by NQP code-gen.

[16:34] <Juerd> DrForr: Do you have a full example that you can share on pastebin or a gist?

[16:34] <ZoffixW> m: https://gist.github.com/zoffixznet/dfe07b2e4531c7012ba6

[16:34] <camelia> rakudo-moar a5fe34: OUTPUT«c_cell->type = ZERO;␤␤»

[16:34] <lizmat> ok, I'll try

[16:34] <DrForr> Which is inside {}, which means the code is interpreted as a Perl 6 block.

[16:34] <DrForr> <facepalm/>

[16:34] <ZoffixW> Ah :D

[16:34] <jnthn> lizmat: Anyway, there's also an nqp::ifnull op that returns the first thing if it's not null, otherwise evaluates the second thing.

[16:35] <lizmat> jnthn: yes, I'm aware  :-)

[16:35] <jnthn> lizmat: so nqp::ifnull(nqp::atkey($storage, $key), nqp::p6bindattrinvres(...)) :)

[16:35] <jnthn> Cool :)

[16:35] <DrForr> Escaping {} does *not* make me a happy camper...

[16:36] <ZoffixW> DrForr, there's a qq flag that removes the {} interpolation

[16:36] * ZoffixW digs through the design specs

[16:36] * DrForr looks as well.

[16:36] <jnthn> qq:!c

[16:36] <DrForr> Thanks.

[16:37] <ZoffixW> m: my $x = 'meow'; say qq:!c/foo { ey } bar $x/

[16:37] <camelia> rakudo-moar a5fe34: OUTPUT«foo { ey } bar meow␤»

[16:37] <jnthn> Also, lizmat++ for the 25% already :)

[16:37] <ZoffixW> neat

[16:37] <jnthn> Hash access is, like, common :)

[16:37] *** vendethiel left
[16:39] *** vendethiel joined
[16:39] *** lokien_ left
[16:40] <RabidGravy> the quoting doc doesn't mention any adverbs whatsoever BTW

[16:40] <ZoffixW> Well volunteered! :}

[16:40] <Juerd> The quoting doc is a mess imho

[16:40] <DrForr> With that all I have to do is escape '&', something of a win.

[16:41] <jnthn> DrForr: :!f iirc :)

[16:41] *** skids left
[16:41] <Juerd> I don't have any specific idea how to restructure it, but this is one of those pages where a good structure and good layout can make things much clearer

[16:41] <lizmat> didn't I write an advent post in 2014 about the various flags in quoting ?

[16:41] <Juerd> DrForr: Instead of disabling interpolation things, you can also start witha blank slate and enable only what you need.

[16:42] <Juerd> lizmat: Sure, but that doesn't make great reference documentation either

[16:42] <lizmat> true

[16:42] <Juerd> That's more tutorial-like

[16:42] <DrForr> What I actually need is a proper template library, but since I'm loathe to try to port TT I'm making do ATM.

[16:43] <DrForr> Well, I'm not loathe to port, I'm more of the opinion that we can build better.

[16:43] * ZoffixW is porting Mojo::Template

[16:43] <RabidGravy> Template6 could do with some love

[16:44] <[Tux]> https://gist.github.com/Tux/22218a1481bf80dd4240

[16:44] <ZoffixW> Might be done by the end of the weekend, though I might end up spending the entirety of it looking for new apartments.

[16:44] <RabidGravy> I abandoned trying to use it for JSON::Infer

[16:45] <lizmat> [Tux]: so about 8% of total time for compiling

[16:46] <[Tux]> yes

[16:48] *** cfloare joined
[16:49] <dalek> rakudo/nom: 556b829 | lizmat++ | src/core/Hash.pm:

[16:49] <dalek> rakudo/nom: Make simple hash access another 8% faster, jnthn++

[16:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/556b82990d

[16:49] *** cfloare_ left
[16:50] * [Tux] goes for a new make …

[16:50] <ZoffixW> w00t lizmat++

[16:54] *** skids joined
[16:55] *** kaare__ is now known as kaare_

[16:58] <[Tux]> no noticable change for my code

[16:59] <lizmat> [Tux]: didn't expect that, really

[16:59] <[Tux]> no harm in trying :)

[16:59] <lizmat> I mean, it's a total of about 30% of something very little already

[16:59] <tony-o_> RabidGravy: interesting idea, why did you abandon it?

[17:00] <RabidGravy> which?

[17:00] <tony-o_> JSON::Infer

[17:00] <lizmat> jnthn: does it make currently sense to add --> Nil to methods that are not supposed to return a value ?

[17:01] <lizmat> e.g. Block.fire_phasers ?

[17:01] <RabidGravy> Oh no, that works fine, I abandoned trying to use Template6 to generate the code

[17:01] <jnthn> lizmat: It's a good idea for avoiding accidental value leakage, yes

[17:01] <RabidGravy> I'll probably revisit it at some point if some nicer templating thingy comes along

[17:02] <[Tux]> but CSV::Parser is (just) under 50 again

[17:02] <[Tux]> 49.7

[17:02] <tony-o_> RabidGravy: anything in particular you look for in a templating system?  i wrote protone and walked myself into a corner with it.  it's one of those projects i'm going to revisit during one of these plane rides

[17:02] *** vendethiel left
[17:04] <RabidGravy> I think it was the recursively calling object method s in the template that broke Template6 for me

[17:05] <RabidGravy> i.e. passing one object to the template and then getting lists of the same type of object in the template (nested classes in the JSON::Infer case)

[17:06] *** domidumont left
[17:06] *** vendethiel joined
[17:09] <tony-o_> ah, protone can do recursion in the template

[17:11] *** Kogurr joined
[17:12] *** wamba left
[17:15] <RabidGravy> I'll give the tires a good kick at some point :)

[17:15] *** lokien_ joined
[17:15] <dalek> rakudo/nom: 172a92b | lizmat++ | src/core/Block.pm:

[17:15] <dalek> rakudo/nom: Mark methods as not returning anything

[17:15] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/172a92bf33

[17:16] <tony-o_> RabidGravy: good, i've fixed a few issues with it and had some good feedback/enhancement requests that i just saw yesterday (sorry raiph)

[17:18] *** maybekoo5 joined
[17:21] <ZoffixW> What's a "document nation" that we're working on? :S https://twitter.com/notcalledjack/status/694928475917008896

[17:22] <ZoffixW> oh.. "documentation" + auto correct? 

[17:22] *** musiKk joined
[17:22] * ZoffixW never understood why people use that thing

[17:25] <ZoffixW> DrForr, BTW, I'm a bit confused by your making a bunch of people admins this morning. What do you mean by "admin authorization of posts"? Can't any member of the group post? 

[17:25] <ZoffixW> (that was in reference to our Facebook group)

[17:27] *** vendethiel left
[17:37] <RabidGravy> I think it means that "report to admin" goes to more than one person

[17:37] <RabidGravy> or maybe it's moderated now

[17:38] <RabidGravy> someone post something so we can see what happens

[17:38] <ZoffixW> :D

[17:38] *** SCHAAP137 joined
[17:39] *** vendethiel joined
[17:39] <timotimo> oh god, what have i done

[17:39] <timotimo> (on the perl6-user-experience wiki)

[17:41] * ZoffixW gives timotimo an invitation to the club

[17:41] <ZoffixW> Had the same experience with #5 :)

[17:42] *** musiKk left
[17:48] *** dakkar_ left
[17:48] <MadcapJake> I'm gonna try my hand at writing that bug reporter tool.  

[17:50] <ZoffixW> MadcapJake++

[17:50] <MadcapJake> it'll be a form ala StackOverflow, enter the title and it'll show related tickets

[17:51] <MadcapJake> perl6 server will scrape rt.perl.org and send json data back to client, client will send completed form back to server and email it to [email@hidden.address]
[17:52] *** sevvie joined
[17:53] *** ZoffixW left
[17:55] <RabidGravy> cool

[17:56] <MadcapJake> I could even integrate other fields, like compiler version, language version, etc.

[17:56] <hoelzro> MadcapJake: have you seen the RT command line client?

[17:56] <hoelzro> you might want to use that instead of scraping

[17:56] <MadcapJake> no i haven't that would certainly make this easier

[17:56] <timotimo> hey hoelzro :)

[17:56] <hoelzro> howdy timo!

[17:57] <timotimo> there was a release; you're the "owner" of the rakudo docker, aren't you? or is that only for rakudo star?

[17:57] <MadcapJake> hoelzro: how do i install the RT cli? (no perl5 experience)

[17:58] <hoelzro> timotimo: yeah, just for star

[17:58] <timotimo> OK

[17:58] <timotimo> so that'll happen soon enough, too. but not right now :)

[17:58] <hoelzro> MadcapJake: which OS are you on?

[17:58] <MadcapJake> ubuntu

[17:58] <hoelzro> timotimo: don't worry, I'll take care of it when it happens =)

[17:59] <hoelzro> MadcapJake: ok, so I recommend you install cpanminus and local::lib; they're both probably in APT

[17:59] <timotimo> yay

[17:59] <Skarsnik> MadcapJake, you can inspire of the debianbug repport tools maybe

[17:59] <hoelzro> after you have cpanm, you can install the RT client locally via cpanm -l rt-lib RT::Client::CLI

[17:59] <MadcapJake> Skarsnik: got a link?

[18:00] *** vendethiel left
[18:00] <Skarsnik> https://wiki.debian.org/reportbug

[18:00] <RabidGravy> Ooh 🎹

[18:01] <Skarsnik> It's really nice by offering to search for similar bug and stuff

[18:01] <timotimo> *sigh* our in-lining fu is rather weak sometimes

[18:01] <MadcapJake> Skarsnik: I'm not seeing it, just see details of a cli

[18:01] <sevvie> good localtime all.

[18:02] <Skarsnik> it's a cli

[18:02] <hoelzro> being able to search for similar bugs would be a godsend

[18:02] <MadcapJake> Skarsnik: ahh xD I'm making a web reporting tool for the "pointy clicky" fans ;)

[18:02] <hoelzro> I mean, you can in RT already, but I think that you could easily miss some duplicates that exist already

[18:02] <MadcapJake> but perhaps I could extrapolate some of this out into a perl6-only cli

[18:02] <Skarsnik> I used debian reportbug tool 1-2 time it was really nice

[18:03] *** leont joined
[18:03] *** vendethiel joined
[18:04] *** CIAvash left
[18:04] *** ely-se joined
[18:06] *** yurivish left
[18:08] *** domidumont joined
[18:09] *** [Sno] joined
[18:10] *** pmurias left
[18:10] *** sno left
[18:15] <DrForr> ZoffixWin: Around?

[18:16] *** sjoshi joined
[18:17] *** sjoshi left
[18:22] <DrForr> ZoffixWin: My logic is as follows: We're large enough that spammers are doing MitM attacks on us now. All the group regulars are (or should be) admins, and able to post by themselves without causing inconvenience. Non-regulars that actually have Perl 6 content (unlikely, but possible) have to wait a bit. Spammers can be blocked, deleted from the group and anyone they "invite" can burn in hell.

[18:23] <MadcapJake> BTW all: my perl6fe grammar is coming to github soon! https://github.com/github/linguist/commit/697b3351e6472354b40ddc1dacb5d628ef23a6f7

[18:23] *** Zero_Dogg left
[18:23] <MadcapJake> sevvie++

[18:24] *** Zero_Dogg joined
[18:26] *** patrickz joined
[18:30] <DrForr> .tell ZoffixWin My logic is as follows: We're large enough that spammers are doing MitM attacks on us now. All the group regulars are (or should be) admins, and able to post by themselves without causing inconvenience. Non-regulars that actually have Perl 6 content (unlikely, but possible) have to wait a bit. Spammers can be blocked, deleted from the group and anyone they "invite" can burn in hell.

[18:30] <yoleaux> DrForr: I'll pass your message to ZoffixWin.

[18:33] *** Actualeyes left
[18:34] *** FROGGS joined
[18:36] <FROGGS> o/

[18:39] <AndChat380436> >say 1;

[18:40] <AndChat380436> >p6:say 1;

[18:41] <DrForr> o/

[18:42] *** perl6newbee left
[18:42] <DrForr> m: say 1;

[18:42] <camelia> rakudo-moar 172a92: OUTPUT«1␤»

[18:43] <AndChat380436> Thx!

[18:43] <AndChat380436> m: say 2;

[18:43] <camelia> rakudo-moar 172a92: OUTPUT«2␤»

[18:43] <DrForr> np.

[18:43] <AndChat380436> cool

[18:45] *** ely-se left
[18:48] *** vendethiel left
[18:51] <jdv79> has anyone tried to install the entire eco's worth?

[18:52] <jdv79> i wasn't that far into it and i hit a lock.  i'm guessing it might be the CUR lock.

[18:52] <jdv79> is that still an open issue?

[18:53] *** vendethiel joined
[18:56] *** Ben_Goldberg left
[18:56] *** firstdayonthejob joined
[19:05] *** awwaiid left
[19:05] *** awwaiid joined
[19:06] *** ely-se joined
[19:10] *** leont left
[19:13] <timotimo> why would the cur lock prevent you from installing stuff? isn't it only there to prevent concurrent access to the database?

[19:15] *** vendethiel left
[19:17] <jdv79> not sure.  maybe related to this:  https://irclog.perlgeek.de/perl6-toolchain/2016-01-30#i_11964808

[19:17] <jdv79> i need to repro it again to check

[19:19] *** lokien_ left
[19:21] <timotimo> well, you can at least set that environment variable that makes module loading and precomp extra verbose

[19:21] <FROGGS> stmuk_: ping

[19:22] <stmuk_> pong

[19:22] *** vendethiel joined
[19:22] <FROGGS> stmuk_: you did a lot of preparations for star, right?

[19:23] <stmuk_> yes 

[19:23] <FROGGS> stmuk_: thank you :o)

[19:23] <FROGGS> stmuk_: what's left to do?

[19:23] <stmuk_> AFAIK nothing

[19:23] <FROGGS> stmuk_: awesome

[19:24] <FROGGS> then I'll cut the release now

[19:24] <stmuk_> :D

[19:25] <RabidGravy> then at some point I may get a fedora upgrade :)

[19:26] <stmuk_> actually I haven't tagged

[19:26] *** laz78 joined
[19:27] <FROGGS> stmuk_: sure, that's fine

[19:27] *** cdg left
[19:27] <stmuk_> moritz did the submodules stages and I should have done up to step 11

[19:27] *** addison_ joined
[19:28] *** molaf joined
[19:28] <jdv79> /home/jdv/cpan-api/.panda-work/1450665684_1/lib/.precomp/.lock seem to be what caused the blockage

[19:28] <jdv79> hmm

[19:28] <FROGGS> stmuk_: that's nice, because that gives me extra time to fix something with the msi on windows

[19:28] *** musiKk joined
[19:29] <FROGGS> jdv79: and it is not just a module or test that infiniloops?

[19:30] *** dha joined
[19:30] <awwaiid> Is there a way for concurrent threads to increment a shared counter safely? In clojure I'd do (swap! counter inc), which does software-transactional-memory stuff to try to increment the counter, and if another thread messed with the counter at the same time to to retry so no increments are lost

[19:30] <jdv79> working on that

[19:31] <stmuk_> RabidGravy: surely a fedora upgrade would be debian :P

[19:31] <jdv79> but.  now an infiloop causes a repo lock - that's different if that's the case

[19:32] <jdv79> this whole repo lock shenanigans thing is concerning

[19:33] <jnthn> awwaiid: Do you want a counter, or do you just want a sequence of values that are thread-safe to obtain?

[19:34] <jnthn> awwaiid: See https://github.com/jnthn/p6-concurrent-iterator if so

[19:37] <awwaiid> thanks jnthn, will check it out. I was also just perusing https://6guts.wordpress.com/2014/04/17/racing-to-writeness-to-wrongness-leads/ . 

[19:39] *** musiKk left
[19:41] *** leont joined
[19:41] *** spider-mario joined
[19:41] <dalek> doc: fcfa134 | (Daniel Perrett)++ | doc/Language/operators.pod:

[19:41] <dalek> doc: Provide a simpler example for reversed operators

[19:41] <dalek> doc: 

[19:41] <dalek> doc: Reversed operators are taught before operator reduction, so give an example that does not depend on operator reduction

[19:41] <dalek> doc: review: https://github.com/perl6/doc/commit/fcfa134091

[19:41] <dalek> doc: 7f4a641 | (Zoffix Znet)++ | doc/Language/operators.pod:

[19:41] <dalek> doc: Merge pull request #377 from pdl/pr-r-operator-example

[19:41] <dalek> doc: 

[19:41] <dalek> doc: Provide a simpler example for reversed operators

[19:41] <dalek> doc: review: https://github.com/perl6/doc/commit/7f4a641bd1

[19:43] <vendethiel> jnthn: we don't have atomics in p6, do we?

[19:43] <dalek> doc: 0f8387b | (Daniel Perrett)++ | doc/Language/setbagmix.pod:

[19:43] <dalek> doc: Added index terms for doc/Langualge/setbagmix.pod

[19:43] <dalek> doc: review: https://github.com/perl6/doc/commit/0f8387b49d

[19:43] <dalek> doc: 4caa0dc | (Daniel Perrett)++ | doc/Language/operators.pod:

[19:43] <dalek> doc: Trim trailing spaces in operators.pod

[19:43] <dalek> doc: review: https://github.com/perl6/doc/commit/4caa0dcfcc

[19:43] <dalek> doc: 5952ee5 | (Daniel Perrett)++ | doc/Language/operators.pod:

[19:43] <dalek> doc: Add index entries for postfix and prefix call

[19:43] <dalek> doc: review: https://github.com/perl6/doc/commit/5952ee517e

[19:43] <dalek> doc: bdf35b1 | (Zoffix Znet)++ | doc/Language/ (2 files):

[19:43] <dalek> doc: Merge pull request #378 from pdl/pr-index-more-operators

[19:43] <dalek> doc: 

[19:44] <dalek> doc: Index more operators

[19:44] <dalek> doc: review: https://github.com/perl6/doc/commit/bdf35b1592

[19:46] *** FROGGS[mobile]2 left
[19:51] *** Relsak left
[19:54] *** telex left
[19:56] *** telex joined
[19:57] *** cpage_ joined
[20:00] *** ely-se left
[20:01] *** donaldh joined
[20:02] <hoelzro> I'm wondering, with the advent of #perl6-{toolchain,release}, if this channel should become #perl6-dev and #perl6 should be a "welcome to the language" channel

[20:03] <dalek> nqp: bc5b1df | donaldh++ | / (3 files):

[20:03] <dalek> nqp: Add lstat, stat_time and lstat_time on JVM

[20:03] <dalek> nqp: review: https://github.com/perl6/nqp/commit/bc5b1df2de

[20:04] <dha> This assumes we wish to welcome people. :-)

[20:05] *** Amendil left
[20:05] *** ribasushi left
[20:07] *** ribasushi joined
[20:08] *** dolmen joined
[20:14] *** donaldh left
[20:14] <El_Che> hoelzro: an other level of indirection kind of thing? :)

[20:15] <hoelzro> dha: =)

[20:15] <skids> Personally I think isolating developers from users is a foot on a slippery slope.

[20:15] <hoelzro> El_Che: I'm just thinking about how I've seen people talk about how #perl6 itself has become difficult to backlog, but the newer, topic-focused channels are easier to backlog

[20:16] <leont> Backlog is the main reason for those channels IME

[20:16] <hoelzro> skids: I'm not saying that everyone working on Rakudo should just stay in #perl6-dev; they would (hopefully!) still stick around to help people

[20:16] <leont> Things tend to get lost otherwise

[20:16] <skids> What's missing is backog summaries.

[20:16] <skids> hoelzro: nice in theory but I've seen that end badly.

[20:16] <El_Che> a mix channel will help adoption, imho

[20:16] <El_Che> mixed

[20:17] <El_Che> it's also easier to help people to get involved

[20:17] <hoelzro> skids: alright, just a thought

[20:19] <MadcapJake> any input on what should be required fields for submitting bugs?

[20:20] *** domidumont left
[20:20] <perigrin> subject, description, cc#, expiration date, CVV2 ... 

[20:20] <timotimo> skids: are they really missing, though? at least last time i looked someone was still using the summary feature on the irclog

[20:20] <dha> perigrin++

[20:21] <geekosaur> *eyeroll*

[20:21] <MadcapJake> expiration date?

[20:21] <geekosaur> credit card info

[20:21] <timotimo> shipping address

[20:21] <perigrin> MadcapJake: so you can tell if the card number is still valid.

[20:21] <MadcapJake> lol

[20:21] *** darutoko left
[20:21] <perigrin> timotimo: billing address ... it's software ... adn honestly stripe doesn't require it 

[20:21] <timotimo> hm. fair enough.

[20:21] <hoelzro> timotimo: irclog.perlgeek.de? it has a summarization feature?

[20:21] <timotimo> yes, it does

[20:21] <hoelzro> huh, TIL

[20:22] <timotimo> every line has a "to be included in the summary view" field in the database, and you can edit that in summary-edit mode

[20:22] <MadcapJake> but would something like language version or compiler version make sense on a bug report? could just be optional but having a field there would means some might use it

[20:22] <timotimo> https://video.fosdem.org/2016/h2214/  -  IIUC, this room was the perl devroom, and no videos have been uploaded there yet

[20:23] <El_Che> timotimo: no, but they will be

[20:23] <timotimo> hopefully they'll arrive this side of christmas this time

[20:23] <timotimo> er

[20:23] <El_Che> timotimo: there is raw video in a private url, and tom's backup video

[20:23] <El_Che> we're golden

[20:23] <timotimo> that sounds good!

[20:24] <El_Che> yeah, last time is was pretty terrible

[20:24] <MadcapJake> ok well i'll add it (lang/comp fields) and if anyone decides they don't like it, we can strip it out later

[20:25] <dha> So... documentation question. Is there a document that covers the syntax of function signatures in detail? Last I looked, there wasn't, but that may have changed.

[20:26] <timotimo> http://doc.perl6.org/language/functions#Signatures - this really doesn't cover much

[20:26] *** yurivish joined
[20:27] <skids> http://docs.perl6.org/type/Signature

[20:28] <dha> Right. When I was working on the - now abandoned - usage statements, I often hit things in function signatures that were not at all obvious. I've been thinking for some time that there should be a document explaining the ins and outs of signatures for people who are not already Perl 6 aficionados.

[20:28] *** laz78 left
[20:29] *** wamba joined
[20:30] <dha> Because, silly me, I think we might want *new* people to use Perl 6. :-)

[20:31] <dha> Arguably, a document on how to use the documentation would probably not be amiss.

[20:31] <perlpilot> A good book or three would be nice too.  :)

[20:32] *** bjz joined
[20:32] *** bjz left
[20:32] *** bjz joined
[20:32] <skids> well, if type/Signature is not specific enough, then there is always the synopsis.

[20:33] <dha> I should probably look at type/Signature more closely.

[20:33] <dha> perlpilot -  Yeah. I think now that Perl 6 actually exists, that will start happening.

[20:33] <timotimo> that page is surprisingly good

[20:33] *** franciskittu joined
[20:34] *** franciskittu left
[20:34] <skids> But I think when you get down to it most Signature questions are a "What is This Character doing Here?" question so if anyone wants to enhance the glossary with the old material from WITCH they are very welcome to.

[20:34] <MadcapJake> yeah the type/Signature page info is great (I often feel a lot of it should be in the main function page)

[20:35] *** franciskittu joined
[20:35] <RabidGravy> yeah, the type/Signature is pretty damn thorough and linked from the functions

[20:36] <dha> Actually, what I'm probably thinking is missing is a "this character means *this*" sort of thing. I. e. something more geared to helping people read signatures, rather than helping people write signatures.

[20:36] <dalek> star: de789fb | FROGGS++ | modules/ (4 files):

[20:36] <dalek> star: update modules

[20:36] <dalek> star: review: https://github.com/rakudo/star/commit/de789fb026

[20:38] <skids> .oO(automated svg "sentence diagram" based on parser rule names... hmm)

[20:39] *** nowan left
[20:39] *** mr-foobar left
[20:40] <dha> For instance, it isn't immediately obvious what ":D" means in  "returns Date:D" 

[20:41] <dha> It's findable in Type/Signatures, but it doesn't jump out at you.

[20:41] <perlpilot> clearly it means we're returning a really happy Date instead of a sad one.

[20:42] <skids> Right but if you were able to look up ":" and get something like this: http://www.perlfoundation.org/perl6/index.cgi?witch_colon (except up to date enough to know about :D) it would be nice

[20:42] <dha> perlpilot++

[20:43] *** cpage_ left
[20:43] <dha> yeah, but I bet trying to look up something as common as ":" would be... difficult.

[20:43] <skids> dha: see the URL?

[20:43] <dalek> star: f4948b4 | FROGGS++ | docs/announce/2016.01.md:

[20:43] <dalek> star: refrase support of S09 and S11

[20:43] <dalek> star: review: https://github.com/rakudo/star/commit/f4948b448e

[20:43] <dha> yes.

[20:44] <perlpilot> one that occasionally gets me is that I'll sometimes accidentally omit the space in   sub foo (@a ($alpha, $beta, *@)) { }

[20:44] *** cpage_ joined
[20:44] <perlpilot> though lately I've taken to always writing it with a colon  @a:($alpha,$beta, *@)

[20:44] <skids> It could probably use a "When used in a SIgnature" section, granted.

[20:44] *** espadrine left
[20:45] <dha> I also see that that url is at perlfoundation.org, and does not result from a search for ":" at doc.perl6.org. So... not an obvious place to look.

[20:46] <dha> And, as noted, use in a signature would be needed...

[20:46] *** laz78 joined
[20:47] <dha> Anyway, I'm going home before the weather gets any worse. later, all.

[20:47] *** dha left
[20:48] <skids> Right and it is woefully out of date.  What I'm saying is that material neds to be moved to http://docs.perl6.org/language/glossary or somesuch so the searchbox can be told "single non-alhanum character?  look it up in the glossary"

[20:48] *** cdg joined
[20:49] *** dolmen left
[20:51] *** neilb joined
[20:51] <DrForr> How would one catch die()?

[20:52] <skids> m: { die(foo); CATCH { default { } } }

[20:52] <camelia> rakudo-moar 172a92: OUTPUT«5===SORRY!5=== Error while compiling /tmp/8wTaFPLxtr␤Undeclared routine:␤    foo used at line 1␤␤»

[20:52] <DrForr> %*SIG<die> or has that moed?

[20:52] <flussence> m: die "foo"; CATCH { default { say "bar" } }; say "baz";

[20:52] <camelia> rakudo-moar 172a92: OUTPUT«bar␤»

[20:52] <DrForr> Ah, thanks.

[20:52] <geekosaur> I would hope the SIG hack is dead

[20:52] <flussence> not quite what I expected...

[20:53] <Juerd> flussence: Did you expect die not to die because of the CATCH?

[20:53] <flussence> m: { die "foo"; CATCH { default { say "bar" } } }; say "baz";

[20:53] <camelia> rakudo-moar 172a92: OUTPUT«bar␤baz␤»

[20:53] <flussence> ah, scope.

[20:53] <Juerd> Yes. die still dies :)

[20:54] <geekosaur> die aborts the block it's in, which block had the say baz

[20:54] <Juerd> m: say 11; { CATCH { say 42 }; die 23; } say 22;

[20:54] <camelia> rakudo-moar 172a92: OUTPUT«5===SORRY!5=== Error while compiling /tmp/FQqzv1S_dk␤Strange text after block (missing semicolon or comma?)␤at /tmp/FQqzv1S_dk:1␤------> 3say 11; { CATCH { say 42 }; die 23; }7⏏5 say 22;␤    expecting any of:␤        infix␤        inf…»

[20:54] <Juerd> m: say 11; { CATCH { say 42 }; die 23; }; say 22;

[20:54] <camelia> rakudo-moar 172a92: OUTPUT«11␤42␤23␤  in block <unit> at /tmp/lYQXcTXTQZ line 1␤␤»

[20:54] *** [Sno] left
[20:55] <jnthn> vendethiel: No atomic ops yet, no. Perhaps for 6.d. :)

[20:55] *** nowan joined
[20:56] <vendethiel> okay :)

[20:57] <DrForr> Yep, that works, thanks. Dying in the middle of a NativeCall callback corrupts the stack.

[20:57] <DrForr> Not surprising, but I'd prefer to catch it in code rather than get surprised.

[20:59] *** dolmen joined
[21:01] <DrForr> Well, unwinds not corrupts, but it's still annoying.

[21:02] <geekosaur> arguably any such unwind needs to stop at the border

[21:02] *** donaldh joined
[21:02] <geekosaur> could cause nasty bugs on the foreign side otherwise

[21:02] <DrForr> I'd think so too.

[21:06] <RabidGravy> flussence, if you want what you expected then: 

[21:06] <RabidGravy> m:  die "foo"; CATCH { default { say "bar"; .resume; } }; say "baz"

[21:06] <camelia> rakudo-moar 172a92: OUTPUT«bar␤baz␤»

[21:07] <flussence> aha, thanks

[21:07] <flussence> (knew there was something, just couldn't remember what)

[21:08] *** rindolf left
[21:09] <donaldh> Ugh, Configure.pl says nqp-j is too old. It really isn't

[21:12] <donaldh> Why is (0, 1) the result of parsing 2016.01-1-gbc5b1df

[21:13] <DrForr> The 'c' maybe? (complex number)

[21:14] <donaldh> Ah, parse_revision in tools/lib/NQP/Configure.pm was rewritten in the last commit.

[21:15] *** musiKk joined
[21:15] *** sortiz joined
[21:15] <donaldh> that's very broken

[21:16] *** Ben_Goldberg joined
[21:18] <sortiz> \o #perl6

[21:20] <DrForr> CATCH{} doesn't appear in the Search box. (I'm aware it's a phaser, just pointing out the omission.)

[21:20] *** buharin joined
[21:20] <buharin> hello

[21:20] <buharin> I have no idea how to implement this https://wiki.libsdl.org/SDL_RWops

[21:21] <buharin> that should be simple methods in class

[21:21] <buharin> method size(SDL_RWops)

[21:22] *** espadrine joined
[21:23] <timotimo> nah, you have to have a CStruct and assign function pointers

[21:23] *** Psyche^_ joined
[21:23] <DrForr> buharin: size() is a callback.

[21:24] <timotimo> i don't think we have something to directly turn a piece of code into a function pointer, though? but perhaps it's enough to put a &foo in there

[21:24] <tony-o_> m: https://gist.github.com/tony-o/ef83abc5027251126804

[21:24] <camelia> rakudo-moar 172a92: OUTPUT«5===SORRY!5=== Error while compiling /tmp/DfUtL532th␤Unable to parse expression in argument list; couldn't find final ')' ␤at /tmp/DfUtL532th:1␤------> 3ub r(Mu7⏏5 $r?) { }; ␤    expecting any of:␤        infix␤        infix stopper␤»

[21:24] <tony-o_> m: https://gist.github.com/tony-o/ef83abc5027251126804

[21:24] <buharin> timotimo, yeah I used Cstruct class

[21:24] <timotimo> if you just put the code in as methods, it won't end up as fields

[21:25] <camelia> rakudo-moar 172a92: OUTPUT«(timeout)»

[21:25] <buharin> but what I should put in class

[21:25] <buharin> mmm

[21:25] <buharin> true

[21:26] <buharin> timotino how to create callback then?

[21:27] <RabidGravy> I think you are totally in uncharted territory here

[21:27] <timotimo> m: use NativeCall; class Test is repr('CStruct') { has &.callback }

[21:27] *** Psyche^ left
[21:27] <camelia> rakudo-moar 172a92: OUTPUT«5===SORRY!5=== Error while compiling /tmp/6KOC0DbiFP␤CStruct representation only handles int, num, CArray, CPointer, CStruct, CPPStruct and CUnion␤at /tmp/6KOC0DbiFP:1␤»

[21:27] <buharin> oh lol

[21:28] <buharin> xD

[21:28] <buharin> it looks like perl callback

[21:28] <timotimo> it has to

[21:28] <buharin> but what about argument informations

[21:28] <timotimo> hm, how does nativecast look

[21:29] <timotimo> probably "has &.callback:(int32 $foo, int32 $bar)" or something

[21:30] <donaldh> PR to unbust nqp version check during Configure : https://github.com/rakudo/rakudo/pull/703

[21:31] <timotimo> m: use NativeCall; nativecast(Pointer, -> int32 $a { say "test" }).perl.say

[21:31] <camelia> rakudo-moar 172a92: OUTPUT«Native call expected return type with CPointer, CStruct, CArray, or VMArray representation, but got a P6opaque␤  in sub nativecast at /home/camelia/rakudo-m-inst-1/share/perl6/sources/075EFE4B4CDAAF73190194EA876F81A1F128D1A2 line 367␤  in block <unit> …»

[21:31] <timotimo> nope.

[21:31] <timotimo> m: use NativeCall; nativecast(Pointer, -> int32 $a, --> int32 { say "test" }).perl.say

[21:31] <camelia> rakudo-moar 172a92: OUTPUT«Native call expected return type with CPointer, CStruct, CArray, or VMArray representation, but got a P6opaque␤  in sub nativecast at /home/camelia/rakudo-m-inst-1/share/perl6/sources/075EFE4B4CDAAF73190194EA876F81A1F128D1A2 line 367␤  in block <unit> …»

[21:31] <timotimo> m: use NativeCall; nativecast(Pointer, -> int32 $a --> int32 { say "test" }).perl.say

[21:31] <camelia> rakudo-moar 172a92: OUTPUT«Native call expected return type with CPointer, CStruct, CArray, or VMArray representation, but got a P6opaque␤  in sub nativecast at /home/camelia/rakudo-m-inst-1/share/perl6/sources/075EFE4B4CDAAF73190194EA876F81A1F128D1A2 line 367␤  in block <unit> …»

[21:31] <timotimo> ...

[21:33] <perlpilot> https://perl6advent.wordpress.com/2015/12/21/day-21-nativecall-backs-and-beyond-c/

[21:33] <perlpilot> might help

[21:33] *** TEttinger joined
[21:34] <timotimo> perlpilot: the thing is, that only works when passed to a function as an argument

[21:36] <RabidGravy> howzabout declaring it as a Pointer, dereference to a &thingy, apply the Native role to the result etc

[21:37] <buharin> timotimo it looks like callbacks cant be part of CStruct

[21:38] *** AlexDaniel joined
[21:38] <buharin> CStruct representation only handles int, num, CArray, CPointer, CStruct, CPPStruct and CUnion

[21:38] <FROGGS> buharin: that's true

[21:38] <timotimo> yeah, but you need a way to turn the callback into a Pointer

[21:38] <FROGGS> buharin: we do not (yet) support function pointers there

[21:38] <buharin> FROGGS, wtf?

[21:39] *** wamba left
[21:39] <RabidGravy> you could hack round it with a tiny C function

[21:40] <buharin> RabidGravy, what do you mean by tiny C function?

[21:41] *** Kogurr left
[21:41] <Skarsnik> code a small C wrapper

[21:41] <timotimo> void *transform(void *input) { return input }

[21:42] <Skarsnik> You can always hold the functor on a Pointer

[21:42] <RabidGravy> yeah, basically just tat

[21:42] <buharin> oh you mean write C functions which will invoke callbacks

[21:43] <RabidGravy> yeah, the struct member is just a pointer to function

[21:43] <sortiz> Nop, functions to turns callbacks into CPointer, for storage in p6 land.

[21:44] <buharin> I will rather wait till perl6 will be complete than change library implementation :P

[21:44] <RabidGravy> "complete" ?

[21:45] <DrForr> At that you'll be waiting a long time...

[21:45] <buharin> xD

[21:46] <DrForr> You might want to look at https://github.com/drforr/perl6-Inline-Scheme-Guile

[21:47] *** ELBeavers joined
[21:47] *** kaare_ left
[21:47] <RabidGravy> It's entirely possible that most of the code to do this is actually there, it's just not exposed in NativeCall, as, I'm guessing here, the nqp::nativecall somewhere under the hood gets a pointer to a function which it gets from the dynamic loader

[21:48] <RabidGravy> and then executes it with the (marshalled) arguments

[21:48] <AlexDaniel> skids: I'm not sure what precedence problem you are talking about here: https://rt.perl.org/Public/Bug/Display.html?id=127424

[21:48] <AlexDaniel> skids: did you miss the whitespace?

[21:48] <AlexDaniel> m: say ^11 .rotor: 1.5

[21:48] <camelia> rakudo-moar 172a92: OUTPUT«This type cannot unbox to a native integer␤  in block <unit> at /tmp/ZlISoGB0MY line 1␤␤»

[21:48] <AlexDaniel> m: say ^11.rotor: 1.5

[21:48] <camelia> rakudo-moar 172a92: OUTPUT«Potential difficulties:␤    Precedence of ^ is looser than method call; please parenthesize␤    at /tmp/eV2ZW0dqqR:1␤    ------> 3say ^117⏏5.rotor: 1.5␤^0␤»

[21:48] <Skarsnik> RabidGravy, probably, I should have a look one day. Not sure where is that, NQP or Moar x)

[21:48] <AlexDaniel> skids: ↑

[21:49] <buharin> mmm

[21:50] <skids> AlexDaniel: indeed, missed the whitespace.

[21:51] <sortiz> RabidGravy, I suppose that, see https://github.com/rakudo/rakudo/blob/nom/lib/NativeCall.pm6#L45, NCI uses the 'callaback' type for the marshalling.

[21:51] * skids reminds himself never to use that infix dot for readability reasons.

[21:53] *** musiKk left
[21:54] <AlexDaniel> skids: you can use more spaces to make it more readable

[21:54] <buharin> guile next open source language ;d

[21:54] <skids> AlexDaniel: I'll stick with parens.

[21:55] *** gcole joined
[21:58] *** geraud joined
[22:02] *** skids left
[22:03] <DrForr> buharin: Heh.

[22:03] *** vendethiel left
[22:04] <ZoffixWin> So how is the https://perl6.slack.com/ experiment going?

[22:04] <yoleaux> 18:30Z <DrForr> ZoffixWin: My logic is as follows: We're large enough that spammers are doing MitM attacks on us now. All the group regulars are (or should be) admins, and able to post by themselves without causing inconvenience. Non-regulars that actually have Perl 6 content (unlikely, but possible) have to wait a bit. Spammers can be blocked, deleted from the group and anyone they "invite" can burn in hell.

[22:05] * ZoffixWin noticed an email from slack, saying I was mentioned

[22:05] <MadcapJake> ZoffixWin: yeah I mentioned you

[22:05] *** vendethiel joined
[22:06] <ZoffixWin> It was my lead in to this item I saw the other day: https://news.ycombinator.com/item?id=10486541

[22:06] <ZoffixWin> Apparently Slack itself said they don't have FOSS communities in mind and their architecture is not suited for such uses :/

[22:06] <DrForr> That was pretty obvious when trying to sign up :/

[22:07] <ZoffixWin> :D

[22:07] *** muraiki left
[22:07] <stmuk_> slack-- # hipster IRC

[22:09] <MadcapJake> ZoffixWin: as I've said before, I don't disagree.  The point *isn't* to make the slack the only community of Perl 6. It's *only* meant to promote Perl 6 in the Slack-user community, which is much larger than the IRC-stalwarts would like to admit.

[22:09] <MadcapJake> much much larger

[22:09] <ZoffixWin> MadcapJake, cool cool

[22:10] <ZoffixWin> yeah, the more communication channels we have the better

[22:10] *** maybekoo5 left
[22:10] <AlexDaniel> MadcapJake: “any input on what should be required fields for submitting bugs?” – no fields should be required :)

[22:11] <AlexDaniel> MadcapJake: if the user wants to submit a bug report like this, then fine… But it should be possible to edit the title

[22:12] <MadcapJake> ZoffixWin: that's what I'm thinking, any time you want to do outreach, you have to go where the people are.  Would you try to start a Esperanto speakers group in a city but only if members communicated by letter or in person? No, you're group won't survive or grow because people are interested in newer (less-free,less-principled) communication forms

[22:12] <RabidGravy> I'd never heard of slack until it was mentioned here

[22:12] <AlexDaniel> MadcapJake: in other words: accept any data, we'll figure it out later

[22:12] <MadcapJake> AlexDaniel: totally agree, I'm just thinking that maybe I could "mold" the resultant email in a more usable way

[22:12] <jast> the first rule of marketing: connect to your target audience rather than the biggest group of people you can find

[22:12] <ZoffixWin> jast++

[22:13] <stmuk_> its like a less good IRC in a webpage where you have to register for each channel everytime

[22:13] <MadcapJake> jast: i don't see how that relates, what's the Perl 6 target audience if not other programmers?

[22:13] <jast> well, not *all* programmers are the target audience

[22:13] <MadcapJake> jast: that i fully disagree with

[22:13] <jast> I know a lot of programmers who find the ideas of Perl 6 completely off-putting

[22:14] <jast> and it's their good right to prefer a different style of language

[22:14] <MadcapJake> jast: doesn't mean that we shouldn't target all programmers just because a few find it "off-putting"

[22:14] <ZoffixWin> MadcapJake, well, to give an example. Would you expend effort trying to convince a group of die-hard Pythonistas to use Perl 6 instead?

[22:14] <MadcapJake> yes

[22:14] <jast> if you can somehow manage to "segment the market" to reach only those people who are likely to enjoy Perl 6, that would be lots more efficient

[22:14] <ZoffixWin> MadcapJake, but that means you have fewer resources to target other segments.

[22:14] <MadcapJake> jast: haha right, that's exactly it, you can't do that

[22:15] <MadcapJake> ZoffixWin: not if you just target *all* programmers

[22:15] <jast> well I'm not so quick with blanket statements of impossibility

[22:15] <ZoffixWin> MadcapJake, that's akin to trying to sell an energy drink to "*all* people"

[22:15] <ZoffixWin> It's too utopian a goal to achieve realistically.

[22:15] <MadcapJake> but they do target all people! they just use their messaging style and presentation to filter

[22:16] <jast> not really

[22:16] <jast> ads for energy drinks are way more likely to run during sports events than, say, soap operas

[22:16] <ZoffixWin> Or be posted in retirement homes

[22:16] <MadcapJake> lol, ok fair enough

[22:16] <ZoffixWin> :)

[22:16] * MadcapJake imagines an energy drink ad at a retirement home

[22:17] <stmuk_> is this someone here? :)

[22:17] <MadcapJake> "do you want to *blast* through another round of jazzercise! do you want to slaughter your opponents in bingo? then drink Monster!"

[22:17] <jast> that might actually be doable

[22:17] * perlpilot notices mention of perl6.slack.com ...

[22:17] <perlpilot> when did that happen?

[22:17] <stmuk_> http://perl.postbit.com/upload/109/perl-6-logo.png

[22:17] <ZoffixWin> "Kids never visit? Nurses are mean? Sick of this miserable life? Chug MONSTER DRINK and have a heart attack!"

[22:17] <stmuk_> :D

[22:17] <MadcapJake> ZoffixWin: LOL

[22:18] <perlpilot> stmuk_: that is an angry butterfly

[22:18] <DrForr> o/ Rockin in the rest home in 2030 o/

[22:18] <stmuk_> perlpilot: it's scary

[22:18] <ZoffixWin> stmuk_++ Not a fan of that font, but the graphic is awesome :)

[22:18] <jast> my first thought was "angry", too

[22:19] *** [Sno] joined
[22:19] <ZoffixWin> my first thought was "is that an owl" :)

[22:19] <stmuk_> its not mine! I just found it

[22:19] <stmuk_> http://perl.postbit.com/ is good

[22:20] <perlpilot> so, who is using perl6.slack.com?  who set it up?

[22:20] *** perlawhirl joined
[22:20] <perlpilot> (or is it not setup and merely a dream for now?)

[22:21] <ZoffixWin> perlpilot, It is setup, I believe MadcapJake set it up. And based on the log in it, several people are using it :)

[22:21] *** saaki_ is now known as saaki

[22:21] <perlpilot> okay, how do I use it? :-)

[22:21] <jast> I prefer my chat without a DOM and JS engine

[22:22] *** leont left
[22:22] <jast> I think you just open it in your browser and click 'join' or something

[22:22] *** franciskittu left
[22:22] <MadcapJake> perlpilot: perl6.bestforever.com to signup

[22:22] <jast> oh. cheaty.

[22:22] <MadcapJake> jast: you can use scudcloud, it's a really nice slack client (still has dom and js but at least it's not in a browser)

[22:23] <jast> or I can just use IRC ;P

[22:23] <jdv79> what is slack for?  just as an irc alternative?

[22:23] <jast> yeah

[22:23] <jast> plus snippet/file sharing, I believe

[22:23] <perlpilot> jdv79: it's a browser-based IRC-like thingy

[22:23] <jast> and it keeps (limited, unless you pay $$$) logfiles

[22:23] <perlpilot> yep

[22:24] <MadcapJake> jdv79: it allows teams, code comments, nice interface, and more

[22:24] <jdv79> ok

[22:24] <DrForr> Basecamp-a-like if you've used that.

[22:24] <RabidGravy> or even google wave

[22:24] <perlpilot> heh

[22:24] <jast> google what? ;)

[22:24] <perlpilot> What's google wave?  ;)

[22:25] <MadcapJake> s/What's/What was/

[22:25] <perlpilot> don't speak of imaginary things

[22:25] <RabidGravy> was a thing that nobody knew what it was for

[22:25] <MadcapJake> lol

[22:25] <MadcapJake> i think people wanted it after they'd already discontinued it

[22:25] <jast> is wave some kind of buzz?

[22:25] <RabidGravy> they open sourced most of the code

[22:25] <mspo> some kind of messaging platform

[22:26] <jast> (never even noticed buzz getting killed...)

[22:26] <MadcapJake> one of those cultural things where people like it more after it's gone

[22:26] *** franciskittu joined
[22:26] *** nebuchadnezzar left
[22:26] *** nebuchadnezzar joined
[22:26] <jast> d'aww, orkut was killed, too

[22:27] <mspo> wave is a lesson in platform sharecropping/relying on google

[22:31] <perlpilot> I dunno we used wave for collaborative event planning  ("Hey, let's go to the movies on Saturday!  You in?"

[22:31] <perlpilot> )

[22:32] *** vendethiel left
[22:32] <MadcapJake> For anyone interested in the wider "Slacksteria": https://medium.com/@angiecois/an-incomplete-list-of-communities-on-slack-1b1b6f157bda#.ndz11blxt

[22:32] <perlpilot> wave was neat, but it wasn't neat enough to build something on top of 

[22:33] <perlpilot> MadcapJake: that looks like a slack-ad to me  :)

[22:33] <jdv79> i didn't know we weren't happy with irc.  i am.

[22:34] <MadcapJake> perlpilot: definitely not, they really aren't sure on how much they want slack used for communities rather than teams

[22:34] <MadcapJake> jdv79: again, this is not about replacement.

[22:34] <buharin> hey what does it mean

[22:34] <perlpilot> indeed.

[22:34] <buharin> adptme

[22:34] <buharin> adopt

[22:34] <buharin> adoptme

[22:34] <jdv79> but if something happens over there it doesn't here so its about fragmentation

[22:34] <perlpilot> buharin: where did you see that in a Perl 6 context?

[22:35] <buharin> http://blogs.perl.org/users/zoffix_znet/2016/01/modules-for-adoption-bit-rot-thursday.html

[22:35] <MadcapJake> jdv79: so communities can't have several communication channels? Everything must happen on IRC?

[22:35] <buharin> I want to help with some easy module for adopt :D

[22:35] <buharin> but completely don't know how to move on

[22:35] <perlpilot> buharin: for Perl 5 modules, that's usually the signal that the maintainer has given up on maintaining their module and they want someone else to take it over.  I'm guessing it's being used similarly for P6

[22:36] <geekosaur> jdv79, we've discussed gatewaying slack<->irc

[22:36] <perlpilot> ah, Zoffix++

[22:36] <geekosaur> probably in a separate channel on irc that people can join or not as they wish

[22:36] <DrForr> buharin: I think the community is a bit young for adopting modules, maybe it'd be better to look at the 'most wanted'?

[22:37] <buharin> ohh

[22:37] <jdv79> having multiple places for the same purpose, or similar, just makes it harder to keep up with it all.

[22:37] <buharin> so some guy left their code

[22:37] <perlpilot> jdv79: just accept the fact that you won't keep up "with it all" from the outset  :)

[22:37] <buharin> and will not rewrite it to perl6

[22:37] <geekosaur> (slack supports several kinds of gateways. what it doesn't support is "I don't want to deal with 15 different comm programs")

[22:37] <ZoffixWin> buharin, to clarify, there are two different languages Perl 5 and Perl 6. Perl 5 has ADOPTME PAUSE user that is usually used for when a PAUSE author has passed away.

[22:38] <dalek> doc: 2e6962b | (Wenzel P. P. Peppmeyer)++ | doc/ (2 files):

[22:38] <dalek> doc: doc Empty

[22:38] <dalek> doc: review: https://github.com/perl6/doc/commit/2e6962bd89

[22:38] <ZoffixWin> buharin, why "some guy"? Maybe it's a girl :) 

[22:38] <geekosaur> and if you want to "keep up with it all", how do you deal with stackoverflow+reddit+...?

[22:38] <ZoffixWin> Or a hyper intelligent AI

[22:38] <jdv79> yeah its fine.  just my 2 cents.

[22:38] * perlpilot &

[22:38] *** donaldh left
[22:39] <geekosaur> the world's already too big to keep up with everything related to some topic, unless that topic is already effectively dead (and sometimes not even then)

[22:39] <MadcapJake> geekosaur++

[22:39] <buharin> typical question how can I help perl?:D

[22:39] <DrForr> buharin: Writing docs would be a *real* help.

[22:40] <jdv79> also, irc is public and logged and googleable.  ok, i'm done now.

[22:40] <ZoffixWin> buharin, easiest way? Blog about it and talk about it on Social Media, blogs, Web, and in person

[22:40] <buharin> ZoffixWin, you mean learn by myself and learn the others

[22:40] <gfldex> buharin: don't be shy with hugs and kisses

[22:40] <MadcapJake> buharin: https://github.com/perl6/doc/blob/master/WANTED

[22:41] <MadcapJake> not sure if that's udpated though :P

[22:41] <ZoffixWin> buharin, a good way to learn is to teach :) You learn a new cool thing, write a blog post explaining it

[22:41] <MadcapJake> where is that most-wanted module list?

[22:41] <ZoffixWin> buharin, we also have the Most Wanted modules list: https://github.com/perl6/perl6-most-wanted/blob/master/most-wanted/modules.md

[22:41] <MadcapJake> haha, that was fast!

[22:42] <ZoffixWin> I'm a mind reader :P

[22:42] <ZoffixWin> buharin, as well as an Issue with a consideration for cleaning up the Most Wanted modules list :P https://github.com/perl6/ecosystem/issues/136

[22:43] <ZoffixWin> buharin, this is of course for the Perl 6 programming language. You may also be interested in Perl 5 language whose modules "some guy" offered for adoption in the blog post you mentioned. The channel for that programming language is #perl

[22:43] <RabidGravy> Are we considering that anything that is actually on the modules list need not be in the most wanted list anymore?

[22:44] <RabidGravy> if so I'll cut out the ones that I have actually released at some point

[22:44] <buharin> ZoffixWin, nooo

[22:44] <buharin> Perl5 is obsolete

[22:44] <ZoffixWin> buharin, :S

[22:44] <jdv79> the r* list is also kinda outdated

[22:44] <ZoffixWin> buharin, what made you think so? The latest release was 50 *days* ago

[22:45] <ZoffixWin> RabidGravy, that was my proposal, yes. Is there a point in keeping that sort of thing on Most Wanted, considering it already exists and thus no longer "wanted"? :)

[22:45] <RabidGravy> I'll have a look but leave the ones that I haven't released yet

[22:45] <ZoffixWin> buharin, that's comparable to saying C is obsolete in ##c++ channel.

[22:46] *** buharin left
[22:46] <jast> what just happened there

[22:46] <ZoffixWin> I guess I convinced them :P

[22:47] <DrForr> Must not have baited his hook well enough.

[22:47] <ZoffixWin> I doubt there was a hook, considering the conversation started with them linking to my blog post offering module adoption :P

[22:48] <dalek> perl6-most-wanted: b8cd9f5 | RabidGravy++ | most-wanted/modules.md:

[22:48] <dalek> perl6-most-wanted: Remove released modules

[22:48] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/b8cd9f5e82

[22:48] <RabidGravy> two really are WIP still

[22:49] <DrForr> I'm willing to accept 'confused' as well, but I'm counting it as "weak troll"/I can't believe I wasted my time typing this sentence.

[22:49] <dalek> rakudo-star-daily: 2690fda | coke++ | log/ (8 files):

[22:49] <dalek> rakudo-star-daily: today (automated commit)

[22:49] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/2690fda042

[22:49] *** AndChat380436 left
[22:49] <ZoffixWin> I'm betting on "confused" :)

[22:50] <ZoffixWin> Was R* released today? 

[22:50] * ZoffixWin just stumbled upon the release date on https://en.wikipedia.org/wiki/Perl_6

[22:51] * geekosaur got the email about half an hour ago

[22:51] *** buharin joined
[22:52] <[Coke]> (documentation on the signature) that was my point originally - perl6 already embeds a LOT of information in the signature. if we can make those more obvious, we don't have to maintain separate usage.

[22:52] <[Coke]> (synopses) Don't trust those as canon at this point. they are speculative in many cases compared to the spec itself.

[22:52] <dalek> star: ec0dea1 | FROGGS++ | tools/build/star-product.wxs:

[22:52] <dalek> star: choose to set PATH in wizard on windows

[22:52] <dalek> star: review: https://github.com/rakudo/star/commit/ec0dea1e4d

[22:53] *** franciskittu left
[22:53] <[Coke]> dha: do not look things up on perlfoundation.org.

[22:53] <buharin> hey is it like you write a module which is most wanted

[22:53] <buharin> then you write on irc that you have done it

[22:53] <buharin> and some guy annonce

[22:53] <buharin> it

[22:54] <jdv79> something like that

[22:54] <jdv79> add it to the eco

[22:54] <DrForr> buharin: When you're done there are instructions on the front page of modules.perl6.org on what to do.

[22:55] <buharin> oh ok I see

[22:55] <buharin> ;D

[22:55] <DrForr> Talking about it on IRC doesn't hurt, but also doesn't get it added to the list :)

[22:55] * ZoffixWin collects the bet 

[22:55] <[Coke]> jdv79: there is already no way to keep up with it all

[22:56] <jdv79> i know.  that was only a partial argument.  i don't care enough to get into it full on.

[22:56] <RabidGravy> right, toodles people

[22:56] <jdv79> nite

[22:56] <[Coke]> I for one will very likely never sign on to slack, but go for it if someone wants to be there. I probably don't want a bridge if it's going to be noisy.

[22:57] <[Coke]> I'll keep up with the FB Perl 6 group.

[23:00] <sevvie> [Coke]: curiously, why are you so resistant to signing onto slack?

[23:00] *** RabidGravy left
[23:01] *** yqt joined
[23:01] *** buharin left
[23:05] <hoelzro> ab5tract: booking is starting to use slack now?

[23:05] <AlexDaniel> lol, why not make a Skype groupchat? :D

[23:06] <perlawhirl> i'm hanging out for some perl fosdem'16 videos. still nothing uploaded from h2214 :(

[23:07] *** cdg left
[23:09] <hoelzro> The "Download Slack" page has a "Linux (Beta)", which has a dropdown with two distros ='(

[23:10] <sevvie> I only ask because Slack benefits as a "install it on your mobile and get messages and notifications directly from the community" kinda thing.

[23:10] <sevvie> </elevatorpitch>

[23:10] *** ZoffixWin left
[23:10] <hoelzro> sevvie: I think most people here are probably of the "slack doesn't offer anything IRC doesn't mindset", but that doesn't mean we shouldn't have a Slack team for Perl 6

[23:11] <AlexDaniel> wow, 38 MB download

[23:11] <hoelzro> then again, I don't mean to speak for everyone

[23:11] <hoelzro> it would be wise to have a channel topic in Slack that says "if you don't get an answer here, try IRC"

[23:11] *** khw left
[23:13] <AlexDaniel> where are the sources for GNU/Linux slack client?

[23:13] <hoelzro> haha

[23:13] <hoelzro> at work, I've been using irssi + slack.pl; works pretty well

[23:14] <hoelzro> sevvie: I just saw you filed an issue against linguist for perl6; I'm sorry =(

[23:14] <hoelzro> oh wow, they got back to you within a day

[23:14] <hoelzro> that's atypical

[23:15] *** ramon joined
[23:15] *** ramon is now known as Guest65773

[23:15] <MadcapJake> hoelzro: yeah it's already merged, and the dev said he'd push to github later this week!

[23:15] <hoelzro> nice!

[23:15] <hoelzro> sevvie++ MadcapJake++

[23:15] <hoelzro> it took *forever* for them to move on requests I made

[23:16] <hoelzro> maybe it was how I asked =/

[23:16] <MadcapJake> hoelzro: yeah timotimo showed me a few of the PRs that took around a year to get merged xO

[23:17] *** vendethiel joined
[23:17] <MadcapJake> perhaps there was a change of the guard or maybe the dev has more time now to deal with linguist.  I think the most likely answer is that this was an easy fix as it didn't require any change to the heuristics

[23:18] *** laz78 left
[23:18] <Skarsnik> AlexDaniel, I only use the webclient :(

[23:19] *** azawawi joined
[23:19] *** FROGGS left
[23:19] <azawawi> hi

[23:19] <azawawi> https://github.com/azawawi/atom-perl6-editor-tools  # POD Preview in Atom :)

[23:20] <Skarsnik> nice

[23:20] <azawawi> and a couple of snippets for fun :)

[23:21] <azawawi> script<tab> => perl6 script

[23:21] <hoelzro> well, I'm just glad that they merged it quickly =)

[23:24] <Skarsnik> I give an internet cookie if someone make Pg Array in DBIish work correctly (basicly returning correctly Array in a hash)

[23:26] <AlexDaniel> Skarsnik: but the linux client is free software, right? I just cannot find the sources

[23:26] <Skarsnik> No idea

[23:27] *** skids joined
[23:27] <hoelzro> AlexDaniel: for slack?

[23:27] <MadcapJake> AlexDaniel: https://github.com/raelgc/scudcloud

[23:27] <AlexDaniel> MadcapJake: that's not the official one

[23:28] <hoelzro> the official one is not OSS, afaik

[23:28] <Skarsnik> just write a slack module already

[23:28] <MadcapJake> AlexDaniel: oh, didn't realize there was an official one :P, scudcloud is great though btw

[23:28] <MadcapJake> There's also https://github.com/plaidchat/plaidchat

[23:29] <Hotkeys> Is there a way to add a method to an imported class from within another program

[23:29] <Hotkeys> without just editing the class source

[23:29] <AlexDaniel> hoelzro: Interesting. Why did they bother making a closed-source one?

[23:29] <AlexDaniel> what's the point?

[23:30] <hoelzro> AlexDaniel: I don't know; I don't really *get* slack

[23:30] <hoelzro> both the company and the software

[23:30] <hoelzro> but a lot of people seem to like it

[23:30] <hoelzro> so I guess it's just not *for* me

[23:30] <Skarsnik> It's really nice

[23:31] <hoelzro> it's nice, but I don't see the advantage (for me personally)

[23:31] <Skarsnik> You understimed how annoying it can be to have something like IRC that don't render stuff the same accross client and does not offer link preview

[23:31] <hoelzro> I understand that a lot of people like gifs to be rendered inline in their chat client; I personally don't

[23:32] <Skarsnik> and the webclient part is good because most company block IRC

[23:32] <hoelzro> I understand that IRC is a technical challenge for some people

[23:33] <AlexDaniel> so, you can't just join a group and someone has to invite you? You have to register by using your email in order to get in? They provide a proprietary linux client while there are some free ones? The whole thing is stored on their servers (and we also don't have the sources of that)? Hmmmm…

[23:33] <AlexDaniel> okay, nvm, I'll just move on…

[23:35] <hoelzro> AlexDaniel: yes; if anything, I favor IRC over slack because IRC gives the community a higher degree of control

[23:35] <hoelzro> but my mentality is "use what you like"

[23:36] <AlexDaniel> hoelzro: interestingly there are ‘erc-image-mode’ and ‘erc-youtube-mode’ things that will render images inline in emacs (well if you're using ERC). These are turned out by default in spacemacs but it drives me crazy :)

[23:36] <AlexDaniel> and I guess that some other IRC clients may do that as well

[23:36] <AlexDaniel> turned on*

[23:36] <hoelzro> that's the thing; IRC the protocol doesn't provide a lot of the features slack does; it's up to the clients to do it

[23:37] <AlexDaniel> hoelzro: which is great

[23:37] <hoelzro> agreed

[23:37] <Skarsnik> nop

[23:38] <Skarsnik> it's not great

[23:38] <Skarsnik> just take a simple example: colors

[23:38] <Skarsnik> it does not work exactly the same on every client

[23:39] *** vendethiel left
[23:39] <AlexDaniel> great! I don't think that everyone likes colors. And that's why it was possible (still is?) to disable colors on some channels

[23:40] <hoelzro> Skarsnik: I'm not arguing that slack isn't good; I'm just stating that I prefer IRC, and agreeing with AlexDaniel that having protocol-client separation for features is a good thing™

[23:40] <Skarsnik> Yes, but IRC is a bad example

[23:40] <hoelzro> I don't think enforcing colors is great either; I have a colorblind friend who gets driven *nuts* by popular colorschemes

[23:40] <hoelzro> (granted, I have a feeling slack provides themes that are colorblind-friendly)

[23:41] <Skarsnik> I use IRC, Discord, Slack

[23:41] <Skarsnik> When I talk with no developper people I prefer Discord/Slack over IRC

[23:41] <Skarsnik> because image/link preview is fun :)

[23:42] <hoelzro> anyway, I don't want to get into an IRC vs Slack discussion; I'm in favor of having both.  If you want to keep talking about it, I'm happy to move this conversation elsewhere =)

[23:42] <azawawi> MadcapJake: do not use farabi6

[23:43] <azawawi> MadcapJake: do not use farabi6's codemirror mode... https://github.com/azawawi/farabi6/issues/46 . It is not finished nor started :(

[23:43] <hoelzro> s/don't want to(.*);/don't want to$1 here;/

[23:45] *** addison_ left
[23:45] <azawawi> MadcapJake: but you're welcome to use https://github.com/azawawi/farabi6/blob/master/lib/Farabi6/files/assets/perl6-mode.js#L219 :)

[23:45] *** virtualsue joined
[23:46] <Skarsnik> what is really sad, it's that slack should have be something xmpp (the jabber underlaying stuff) should have beeing a lonkg time ago

[23:46] <Skarsnik> because I am pretty sure it use web socket :)

[23:47] *** vendethiel joined
[23:47] <azawawi> Skarsnik: alright 2 Downloads already https://atom.io/packages/atom-perl6-editor-tools :)

[23:47] <Skarsnik> I should try atom :)

[23:48] <Skarsnik> I am using kate with an old p6 hightlighting x)

[23:48] <Skarsnik> good night #perl6

[23:49] *** Skarsnik left
[23:49] <azawawi> MadcapJake: if you cant beat them (atom), join them :)

[23:50] *** spider-mario left
[23:55] *** espadrine left
[23:56] *** wamba joined
[23:58] *** SCHAAP137 left
