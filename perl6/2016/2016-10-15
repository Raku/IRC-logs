[00:06] *** bjz left
[00:24] *** _slade_ joined
[00:34] *** geraud joined
[00:41] *** Guest59726 left
[00:44] *** labster left
[00:45] *** aborazmeh joined
[00:45] *** aborazmeh left
[00:45] *** aborazmeh joined
[00:52] *** pierrot joined
[00:52] *** pierrot is now known as Guest46700

[00:56] *** bjz joined
[01:00] *** flaviusb left
[01:00] *** Herby__ joined
[01:00] <Herby__> o/

[01:04] *** cyphase left
[01:10] *** cyphase joined
[01:11] <tbrowder> question: I'm trying to install rakudo star on a VM with 512 Mb mem and it looks like that's too little. What is the min required?  Is there any way to install on the VM I have?  Thanks.

[01:12] <tbrowder> I guess I could copy from another, identical host (except for the mem size)...

[01:19] *** Guest46700 left
[01:20] *** pierrot_ joined
[01:26] *** labster joined
[01:28] *** smls left
[01:35] *** telex left
[01:36] *** telex joined
[01:40] *** Actualeyes left
[01:47] *** labster left
[01:54] *** eliasr left
[01:56] *** labster joined
[01:59] *** Actualeyes joined
[02:05] *** noganex_ joined
[02:08] *** noganex left
[02:11] *** bjz left
[02:14] *** labster left
[02:15] *** rgrinberg left
[02:19] *** BenGoldberg left
[02:22] *** yqt left
[02:26] *** cpage_ left
[02:26] *** cpage_ joined
[02:31] *** cpage_ left
[02:33] *** bjz joined
[02:34] *** kurahaupo joined
[02:38] *** rgrinberg joined
[02:45] *** skids left
[02:49] *** Herby__ left
[02:57] *** Jesmaybe joined
[03:02] *** kurahaupo left
[03:07] *** labster joined
[03:08] *** Derperperd left
[03:16] *** TEttinger joined
[03:21] *** Dunearhp left
[03:25] *** aborazmeh left
[03:28] *** sufrostico joined
[03:36] *** sufrostico left
[03:43] *** rgrinberg left
[03:43] <japhb> .ask ab5tract_ I've got a pile of changes I'd like to make to Terminal::Print (some cleanup, some speedup, some API extensions, etc.).  How granular would you like PRs?  Or would you rather I just maintained my own fork?

[03:43] <yoleaux> japhb: I'll pass your message to ab5tract_.

[03:47] *** sufrostico joined
[03:47] *** sufrostico left
[03:54] *** flexibeast joined
[03:59] *** ggoebel left
[04:03] *** bjz left
[04:04] *** bjz joined
[04:14] *** khw left
[04:16] *** djbkd joined
[04:18] *** ggoebel joined
[04:29] *** Ven_ joined
[04:35] *** _slade_ left
[04:37] *** rgrinberg joined
[04:40] *** Cabanossi left
[04:43] *** cyphase left
[04:44] *** Cabanossi joined
[04:48] *** cyphase joined
[04:52] *** Jesmaybe left
[05:00] *** rgrinberg left
[05:10] *** pierre_ joined
[05:12] *** flexibeast left
[05:17] *** pierre_ left
[05:20] *** Brock left
[05:22] *** awwaiid joined
[05:25] *** samcv is now known as samcv_

[05:26] *** samcv_ is now known as samcv

[05:35] *** djbkd left
[05:36] *** djbkd joined
[05:42] *** kaare_ joined
[05:53] *** labster left
[05:54] *** PerlJam joined
[06:03] *** pierre_ joined
[06:17] *** Sgeo__ left
[06:18] *** domidumont joined
[06:20] *** Sgeo joined
[06:21] *** geekosaur left
[06:23] *** cpage_ joined
[06:23] *** domidumont left
[06:23] *** geekosaur joined
[06:23] *** domidumont joined
[06:24] *** djbkd left
[06:27] *** u-ou joined
[06:27] *** u-ou is now known as Guest29357

[06:27] *** Guest29357 left
[06:29] *** firstdayonthejob joined
[06:35] *** flexibeast joined
[06:37] <p3rln00b> tbrowder

[06:37] <p3rln00b> tbrowder, you need about 2GB of ram+swap, so one solution for you is to get more swap

[06:44] *** Zoffix joined
[06:44] <Zoffix>  

[06:44] <yoleaux> 9 Oct 2016 22:39Z <tbrowder> Zoffix: there is a PR in ecosystem for an installation template for review

[06:49] *** ShimmerFairy left
[06:58] *** RabidGravy joined
[06:59] *** pierre_ left
[07:05] *** seatek left
[07:05] *** domidumont left
[07:06] *** Louis_ joined
[07:10] *** wamba joined
[07:10] *** pierre_ joined
[07:14] <Zoffix> :/ getting Inline::Perl5 installation failure with panda.... Or rather, it says "LibraryMake:ver<1.0.0>:auth<github:retupmoca>:api<> already installed"

[07:14] <Zoffix> Can't believe this bug is still present.

[07:15] <Zoffix> (that it aborts the install if a prereq is already installed)

[07:22] *** Zoffix left
[07:24] *** vendethiel- joined
[07:25] *** vendethiel left
[07:25] *** girafe left
[07:27] <p3rln00b> Oh. I think I just forgot to build rakudo in a checkout, so it was installing into my system perl6.

[07:27] *** CIAvash joined
[07:36] *** sjoshi joined
[07:42] <RabidGravy> boom

[07:45] *** nadim joined
[07:46] <RabidGravy> is there any conceivable way of expressing something like:

[07:46] <RabidGravy> m: sub foo() returns Positional[Str] { <a b c d> }; say foo()

[07:46] <camelia> rakudo-moar 2c681c: OUTPUT«Type check failed for return value; expected Positional[Str] but got List ($("a", "b", "c", "d"))␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[07:50] <RabidGravy> that is without using a subset that has a custom validator

[07:50] *** wamba left
[07:50] *** wamba joined
[07:51] <p3rln00b> That is, without the way that would make it actually work? :)

[07:51] *** labster joined
[07:52] <p3rln00b> m: sub foo() returns Positional[Str] { my @ of Str = <a b c d> }; say foo()

[07:52] <camelia> rakudo-moar 873e60: OUTPUT«[a b c d]␤»

[07:52] <RabidGravy> it has to be available for the purpose

[07:52] <p3rln00b> Of course, that makes the return type check kinda pointless :)

[07:52] <RabidGravy> for the purpose of introspection

[07:53] *** FROGGS joined
[07:55] *** buggable left
[07:56] *** firstdayonthejob left
[07:56] *** u-ou joined
[07:58] <RabidGravy> my actual reason for wanting to do this is that I am looking at a web service thing which can 'fess up its own description

[07:59] * psch doesn't get the question

[08:00] <psch> is this just the "types are nominal and parameterized Positionals are annoying" thing..?

[08:03] <RabidGravy> no

[08:05] *** wamba left
[08:06] <RabidGravy> it's "is there a way to indicate that a routiine will return a positional of some known types which is available by introspection"

[08:06] <psch> m: sub f(--> Positional[Str]) { }; say &f.returns

[08:06] <camelia> rakudo-moar 873e60: OUTPUT«(Positional[Str])␤»

[08:06] <psch> m: sub f() returns Positional[Str] { }; say &f.returns

[08:06] <camelia> rakudo-moar 873e60: OUTPUT«(Positional[Str])␤»

[08:06] *** sjoshi left
[08:07] <RabidGravy> that is so in the above I could do

[08:07] *** sjoshi joined
[08:08] <RabidGravy> yes, but, and crucially, that makes specific demands on what is actually done inside the routine

[08:08] <japhb> .tell ab5tract_ I've sent you a PR with my first 11 commits (they're all very small, just minor cleanups/tuneups/fixes).  After that I'm probably going to have to expand the API for further improvements.

[08:08] <yoleaux> japhb: I'll pass your message to ab5tract_.

[08:09] <RabidGravy> I'm tending to think that a special trait might be required

[08:11] *** Actualeyes left
[08:11] *** pierrot_ left
[08:13] *** darutoko joined
[08:14] *** Actualeyes joined
[08:17] <psch> RabidGravy: yeah, that's what i'd do too

[08:18] <psch> RabidGravy: unfortunately i'm bad at traits and it doesn't work :S

[08:18] <psch> m: multi trait_mod:<is> (Routine $r, :$returning-unchecked) { $r does role { method returns-unchecked { $returning-unchecked } }; sub f() is returning-unchecked(Positional[Str]) { }; say &f.returns-unchecked

[08:18] <camelia> rakudo-moar 873e60: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Can't use unknown trait 'is returning-unchecked' in a sub declaration.␤at <tmp>:1␤    expecting any of:␤        rw raw hidden-from-backtrace hidden-from-USAGE␤        pure default DEPRECATED inlinabl…»

[08:18] * psch shrugs

[08:20] <RabidGravy> missing right } in the outside of the sub

[08:20] <RabidGravy> but yeah something like that

[08:24] *** baest_ joined
[08:24] *** Ulti left
[08:25] *** huf left
[08:25] *** sunnavy_ left
[08:25] *** shmibs left
[08:25] *** eyck_ left
[08:25] *** chee left
[08:25] *** sjoshi left
[08:25] *** jnthn left
[08:25] *** nightfrog left
[08:26] *** vike1 left
[08:26] *** ChoHag_ left
[08:26] *** mspo left
[08:26] *** rjbs- left
[08:26] *** spider-mario left
[08:26] *** baest left
[08:26] *** tailgate left
[08:28] *** g4 left
[08:28] *** bartolin left
[08:28] *** japhb left
[08:29] *** Woodi left
[08:33] *** labster left
[08:33] *** geekosaur left
[08:33] *** isacloud left
[08:33] *** chris2 left
[08:33] *** riatre left
[08:33] *** timeless left
[08:33] *** BuildTheRobots left
[08:33] *** ribasushi_ left
[08:33] *** kentnl left
[08:33] *** mrsolo_ left
[08:33] *** xinming left
[08:33] *** Khisanth left
[08:33] *** user9 left
[08:33] *** zacts left
[08:33] *** Juerd left
[08:33] *** PotatoGim left
[08:33] *** Spot__ left
[08:33] *** parisba left
[08:33] *** ccakes left
[08:33] *** Guest18866 left
[08:33] *** Matthew[m] left
[08:33] *** Matias[m] left
[08:33] *** dylanwh_ left
[08:33] *** amalia_ left
[08:33] *** Celelibi left
[08:33] *** edenc left
[08:33] *** dataangel left
[08:33] *** stigo left
[08:33] *** ilmari left
[08:33] *** hanekomu left
[08:33] *** silug__ left
[08:33] *** lco left
[08:33] *** kst left
[08:33] *** jcallen left
[08:33] *** gensym left
[08:33] *** kmwallio left
[08:33] *** TheDir_ left
[08:33] *** arnsholt left
[08:33] *** apejens left
[08:33] *** ambs left
[08:33] *** daxim_ left
[08:33] *** gabiruh left
[08:33] *** felher left
[08:33] *** Upasaka left
[08:33] *** sjohnsen left
[08:33] *** integral left
[08:33] *** RabidGravy left
[08:33] *** KotH left
[08:33] *** esh_ left
[08:33] *** setty2 left
[08:33] *** smash left
[08:33] *** sergot left
[08:33] *** cooper_ left
[08:33] *** pecastro left
[08:33] *** erdic left
[08:33] *** nebuchadnezzar left
[08:33] *** andrewalker_ left
[08:33] *** jargan left
[08:33] *** Timbus_ left
[08:33] *** sjn left
[08:33] *** decent_ left
[08:33] *** raydiak left
[08:33] *** sammers left
[08:33] *** alnewkir1 left
[08:33] *** f3ew left
[08:33] *** freeze left
[08:33] *** ingy left
[08:33] *** dsp_ left
[08:33] *** wtw left
[08:33] *** yoleaux left
[08:33] *** bioduds left
[08:33] *** gregf_ left
[08:33] *** MasterDuke left
[08:33] *** harmil_wk left
[08:33] *** TeamBlast left
[08:33] *** darutoko left
[08:33] *** noganex_ left
[08:33] *** telex left
[08:33] *** Shozan left
[08:33] *** obfusk_ left
[08:33] *** [Coke] left
[08:33] *** tomaw left
[08:33] *** jercos left
[08:33] *** jervo left
[08:33] *** DarthGandalf left
[08:33] *** hobbs left
[08:33] *** clkao left
[08:33] *** notbenh_ left
[08:33] *** p3rln00b left
[08:33] *** mindos left
[08:33] *** jnap_ left
[08:33] *** committable6 left
[08:33] *** solarbunny left
[08:33] *** PerlJam left
[08:33] *** awwaiid left
[08:33] *** Cabanossi left
[08:33] *** luis left
[08:33] *** stmuk left
[08:33] *** peteretep left
[08:33] *** SmokeMachine____ left
[08:33] *** JimmyZ left
[08:33] *** ponbiki left
[08:33] *** Kaffe left
[08:33] *** moritz left
[08:33] *** mephinet left
[08:33] *** ggherdov left
[08:33] *** emdashcomma left
[08:33] *** kipd left
[08:33] *** b2gills left
[08:33] *** perigrin left
[08:33] *** protium left
[08:33] *** BooK left
[08:33] *** hahainternet left
[08:33] *** gypsydave5 left
[08:33] *** chansen_ left
[08:33] *** ssm_ left
[08:33] *** jsimonet left
[08:33] *** domm1 left
[08:33] *** nemo left
[08:33] *** tbrowder left
[08:33] *** zostay left
[08:33] *** ugexe left
[08:33] *** Peter_R left
[08:33] *** damnlie_ left
[08:33] *** mithaldu_ left
[08:33] *** hoelzro left
[08:33] *** robinsmidsrod left
[08:33] *** go|dfish left
[08:33] *** Hotkeys left
[08:33] *** Util left
[08:33] *** matt| left
[08:33] *** geraud left
[08:33] *** cibs left
[08:33] *** FROGGS left
[08:33] *** pierre_ left
[08:33] *** Louis_ left
[08:33] *** TEttinger left
[08:33] *** literal left
[08:33] *** woodruff- left
[08:33] *** ranguard_ left
[08:33] *** w4and0er96 left
[08:33] *** olinkl left
[08:33] *** dg left
[08:33] *** psch left
[08:33] *** mr-foobar left
[08:33] *** samcv left
[08:33] *** rpeter left
[08:33] *** remmie left
[08:33] *** stevieb left
[08:33] *** atacama_ left
[08:33] *** vytas left
[08:33] *** abruanese left
[08:33] *** mls left
[08:33] *** tony-o left
[08:33] *** CIAvash left
[08:33] *** u-ou left
[08:33] *** cpage_ left
[08:33] *** Sgeo left
[08:33] *** cyphase left
[08:33] *** bjz left
[08:33] *** canopus left
[08:33] *** Undercover left
[08:33] *** NeuralAnomaly left
[08:33] *** huggable left
[08:33] *** bisectable6 left
[08:33] *** dalek left
[08:33] *** ilmari[m] left
[08:33] *** roguelazer left
[08:33] *** ilbelkyr left
[08:33] *** b^_^d left
[08:33] *** xfix_ left
[08:33] *** BinGOs left
[08:33] *** bhm_ left
[08:33] *** mohae left
[08:33] *** AlexDaniel left
[08:33] *** tadzik left
[08:33] *** ilbot3 left
[08:33] *** rmusial left
[08:33] *** SourceBaby left
[08:33] *** sivoais left
[08:33] *** cgfbee left
[08:33] *** timotimo left
[08:33] *** M-Illandan left
[08:33] *** Actualeyes left
[08:33] *** flexibeast left
[08:33] *** Ven_ left
[08:33] *** ggoebel left
[08:33] *** avar left
[08:33] *** nowan left
[08:33] *** notbenh left
[08:33] *** Xliff left
[08:33] *** mattp_ left
[08:33] *** dogbert17 left
[08:33] *** Guest7479 left
[08:33] *** m0ltar left
[08:33] *** perlpilot left
[08:33] *** dj_goku_ left
[08:33] *** lucs left
[08:52] *** andrzejku joined
[08:52] *** Ven_ joined
[08:52] *** spider-mario joined
[08:52] *** g4 joined
[08:52] *** Guest37076 joined
[08:52] *** sjoshi joined
[08:52] *** vike joined
[08:52] *** rindolf joined
[08:52] *** nightfrog joined
[08:52] *** shmibs_ joined
[08:52] *** _chee joined
[08:52] *** Woodi_ joined
[08:52] *** facetious joined
[08:52] *** ChoHag joined
[08:52] *** rjbs joined
[08:52] *** mspo_ joined
[08:52] *** bartolin_ joined
[08:52] *** jnthn_ joined
[08:52] *** orevdiabl joined
[08:52] *** eyck joined
[08:52] *** Ulti_ joined
[08:52] *** japhb joined
[08:52] *** sunnavy joined
[08:52] *** huf_ joined
[08:52] *** Actualeyes joined
[08:52] *** darutoko joined
[08:52] *** u-ou joined
[08:52] *** FROGGS joined
[08:52] *** labster joined
[08:52] *** CIAvash joined
[08:52] *** Louis_ joined
[08:52] *** RabidGravy joined
[08:52] *** flexibeast joined
[08:52] *** geekosaur joined
[08:52] *** cpage_ joined
[08:52] *** Sgeo joined
[08:52] *** PerlJam joined
[08:52] *** awwaiid joined
[08:52] *** cyphase joined
[08:52] *** Cabanossi joined
[08:52] *** ggoebel joined
[08:52] *** bjz joined
[08:52] *** TEttinger joined
[08:52] *** noganex_ joined
[08:52] *** telex joined
[08:52] *** geraud joined
[08:52] *** avar joined
[08:52] *** literal joined
[08:52] *** luis joined
[08:52] *** canopus joined
[08:52] *** stmuk joined
[08:52] *** Undercover joined
[08:52] *** NeuralAnomaly joined
[08:52] *** huggable joined
[08:52] *** bisectable6 joined
[08:52] *** dalek joined
[08:52] *** isacloud joined
[08:52] *** chris2 joined
[08:52] *** bioduds joined
[08:52] *** peteretep joined
[08:52] *** riatre joined
[08:52] *** woodruff- joined
[08:52] *** SmokeMachine____ joined
[08:52] *** timeless joined
[08:52] *** JimmyZ joined
[08:52] *** BuildTheRobots joined
[08:52] *** ilmari[m] joined
[08:52] *** ribasushi_ joined
[08:52] *** kentnl joined
[08:52] *** roguelazer joined
[08:52] *** Shozan joined
[08:52] *** ponbiki joined
[08:52] *** ilbelkyr joined
[08:52] *** nowan joined
[08:52] *** b^_^d joined
[08:52] *** xfix_ joined
[08:52] *** bhm_ joined
[08:52] *** BinGOs joined
[08:52] *** KotH joined
[08:52] *** ranguard_ joined
[08:52] *** esh_ joined
[08:52] *** mohae joined
[08:52] *** notbenh joined
[08:52] *** w4and0er96 joined
[08:52] *** DarthGandalf joined
[08:52] *** olinkl joined
[08:52] *** mrsolo_ joined
[08:52] *** AlexDaniel joined
[08:52] *** obfusk_ joined
[08:52] *** setty2 joined
[08:52] *** xinming joined
[08:52] *** dg joined
[08:52] *** smash joined
[08:52] *** Khisanth joined
[08:52] *** weber.freenode.net sets mode: +v dalek

[08:52] *** tadzik joined
[08:52] *** Xliff joined
[08:52] *** gregf_ joined
[08:52] *** Kaffe joined
[08:52] *** user9 joined
[08:52] *** zacts joined
[08:52] *** ilbot3 joined
[08:52] *** MasterDuke joined
[08:52] *** moritz joined
[08:52] *** [Coke] joined
[08:52] *** psch joined
[08:52] *** sergot joined
[08:52] *** mattp_ joined
[08:52] *** cooper_ joined
[08:52] *** mephinet joined
[08:52] *** pecastro joined
[08:52] *** erdic joined
[08:52] *** Juerd joined
[08:52] *** dogbert17 joined
[08:52] *** rmusial joined
[08:52] *** SourceBaby joined
[08:52] *** mr-foobar joined
[08:52] *** ggherdov joined
[08:52] *** sivoais joined
[08:52] *** emdashcomma joined
[08:52] *** Guest7479 joined
[08:52] *** samcv joined
[08:52] *** m0ltar joined
[08:52] *** integral joined
[08:52] *** sjohnsen joined
[08:52] *** Upasaka joined
[08:52] *** felher joined
[08:52] *** daxim_ joined
[08:52] *** gabiruh joined
[08:52] *** ambs joined
[08:52] *** apejens joined
[08:52] *** arnsholt joined
[08:52] *** TheDir_ joined
[08:52] *** kmwallio joined
[08:52] *** gensym joined
[08:52] *** jcallen joined
[08:52] *** kst joined
[08:52] *** silug__ joined
[08:52] *** hanekomu joined
[08:52] *** lco joined
[08:52] *** ilmari joined
[08:52] *** stigo joined
[08:52] *** dataangel joined
[08:52] *** edenc joined
[08:52] *** Celelibi joined
[08:52] *** amalia_ joined
[08:52] *** dylanwh_ joined
[08:52] *** Matias[m] joined
[08:52] *** Matthew[m] joined
[08:52] *** Guest18866 joined
[08:52] *** ccakes joined
[08:52] *** parisba joined
[08:52] *** Spot__ joined
[08:52] *** PotatoGim joined
[08:52] *** yoleaux joined
[08:52] *** wtw joined
[08:52] *** dsp_ joined
[08:52] *** ingy joined
[08:52] *** freeze joined
[08:52] *** f3ew joined
[08:52] *** alnewkir1 joined
[08:52] *** sammers joined
[08:52] *** raydiak joined
[08:52] *** mniip joined
[08:52] *** decent_ joined
[08:52] *** sjn joined
[08:52] *** Timbus_ joined
[08:52] *** jargan joined
[08:52] *** andrewalker_ joined
[08:52] *** nebuchadnezzar joined
[08:52] *** harmil_wk joined
[08:52] *** TeamBlast joined
[08:52] *** jervo joined
[08:52] *** jercos joined
[08:52] *** tomaw joined
[08:52] *** solarbunny joined
[08:52] *** committable6 joined
[08:52] *** jnap_ joined
[08:52] *** mindos joined
[08:52] *** p3rln00b joined
[08:52] *** notbenh_ joined
[08:52] *** clkao joined
[08:52] *** hobbs joined
[08:52] *** Util joined
[08:52] *** Hotkeys joined
[08:52] *** go|dfish joined
[08:52] *** robinsmidsrod joined
[08:52] *** hoelzro joined
[08:52] *** mithaldu_ joined
[08:52] *** weber.freenode.net sets mode: +v yoleaux

[08:52] *** damnlie_ joined
[08:52] *** Peter_R joined
[08:52] *** ugexe joined
[08:52] *** zostay joined
[08:52] *** tbrowder joined
[08:52] *** nemo joined
[08:52] *** domm1 joined
[08:52] *** jsimonet joined
[08:52] *** ssm_ joined
[08:52] *** chansen_ joined
[08:52] *** gypsydave5 joined
[08:52] *** hahainternet joined
[08:52] *** BooK joined
[08:52] *** protium joined
[08:52] *** perigrin joined
[08:52] *** b2gills joined
[08:52] *** kipd joined
[08:52] *** matt| joined
[08:52] *** cibs joined
[08:52] *** perlpilot joined
[08:52] *** rpeter joined
[08:52] *** cgfbee joined
[08:52] *** timotimo joined
[08:52] *** M-Illandan joined
[08:52] *** dj_goku_ joined
[08:52] *** remmie joined
[08:52] *** stevieb joined
[08:52] *** atacama_ joined
[08:52] *** lucs joined
[08:52] *** vytas joined
[08:52] *** skaji_ joined
[08:52] *** El_Che joined
[08:52] *** dustinm`_ joined
[08:52] *** imcsk8 joined
[08:52] *** breinbaas joined
[08:52] *** salparadise joined
[08:52] *** mls joined
[08:52] *** tony-o joined
[08:52] *** abruanese joined
[08:52] *** Exodist joined
[08:52] *** charsbar______ joined
[08:52] *** LegalResale joined
[08:52] *** lizmat joined
[08:52] *** Alikzus joined
[08:52] *** cxreg joined
[08:52] *** ens joined
[08:52] *** kshannon joined
[08:52] *** zoosha joined
[08:52] *** jferrero joined
[08:52] *** maddingue joined
[08:52] *** diegok joined
[08:52] *** sQuEE joined
[08:52] *** zhmylove joined
[08:52] *** atta joined
[08:52] *** konobi joined
[08:52] *** ft joined
[08:52] *** broquaint joined
[08:52] *** frew joined
[08:52] *** yeltzooo joined
[08:52] *** richi235 joined
[08:52] *** simcop2387 joined
[08:52] *** xxpor joined
[08:52] *** masak joined
[08:52] *** saki_ joined
[08:52] *** llfourn joined
[08:52] *** xdbr joined
[08:52] *** petercommand joined
[08:52] *** albongo joined
[08:52] *** aindilis joined
[08:52] *** krakan joined
[08:52] *** musca joined
[08:52] *** rodarmor joined
[08:52] *** shadowpaste joined
[08:52] *** jonadab joined
[08:52] *** DrForr joined
[08:52] *** risou___ joined
[08:52] *** rblackwe joined
[08:52] *** vcv joined
[08:52] *** k-man joined
[08:52] *** avalenn joined
[08:52] *** [ptc] joined
[08:52] *** mtj_ joined
[08:52] *** ruoso_ joined
[08:52] *** larion_ joined
[08:52] *** Unavowed joined
[08:52] *** a3r0 joined
[08:52] *** bitmap joined
[08:52] *** eythian joined
[08:52] *** profan joined
[08:52] *** Praise joined
[08:52] *** pyrimidine joined
[08:52] *** markk_ joined
[08:52] *** garu_ joined
[08:52] *** rmmm joined
[08:52] *** nine joined
[08:52] *** pochi_ joined
[08:52] *** cosimo joined
[08:52] *** pnu_ joined
[08:52] *** ab5tract_ joined
[08:52] *** stux|RC-only joined
[08:52] *** Grrrr joined
[08:52] *** pmichaud joined
[08:53] *** sjoshi left
[08:53] *** sjoshi joined
[08:55] *** wamba joined
[08:56] *** Ven_ left
[08:56] *** aries_liuxueyang joined
[08:56] *** wamba left
[08:57] *** wamba joined
[09:00] *** Ven_ joined
[09:04] *** sjoshi left
[09:04] <AlexDaniel> By the way, if anybody feels lonely this weekend, here is what you can help with: https://github.com/perl6/whateverable/issues (several LHFs there)

[09:08] <RabidGravy> We're going to the seaside in a bit, so you're alright :)

[09:11] <AlexDaniel> RabidGravy: isn't it a bit cold? Where's that? :)

[09:18] *** harrison_ joined
[09:18] *** harrison_ is now known as hchienjo

[09:18] *** Derperperd joined
[09:23] <RabidGravy> Whitstable, it'll be nice for a stroll and a few beers :)

[09:25] <andrzejku> hello my friends :)

[09:26] <hchienjo> Hello everyone. I wanted to take on some of the issues over here https://github.com/perl6/roast/issues that are labelled Hacktoberfest, specifically this one https://github.com/perl6/roast/issues/166. Wanted to confirm that the tests should go in this folder ./S17-procasync

[09:45] *** ilogger2 joined
[09:45] *** ChanServ sets mode: +v ilogger2

[09:45] *** avuserow joined
[09:45] *** melezhik joined
[09:46] *** akiym_ joined
[09:46] *** ocbtec joined
[09:48] *** inokenty joined
[09:55] *** camelia joined
[09:56] *** ChanServ sets mode: +v camelia

[10:14] <tbrowder> .tell p3rln00b Thanks.

[10:15] <yoleaux> tbrowder: I'll pass your message to p3rln00b.

[10:16] *** itaipu joined
[10:19] *** BenGoldberg joined
[10:20] <tbrowder> I've simplified testing for my own code by using "done-testing" instead of the painful plan statement. Is there any downside to that? Zoffix notes that roast uses plan for all tests but is that a hard requirement?

[10:22] <moritz> tbrowder: we've had cases in the past where tests were accidentally skipped

[10:22] <moritz> tbrowder: due to wrong fudging, bugs in the tests, bugs in the compiler

[10:22] <moritz> tbrowder: so for roast, it makes sense to use explicit plans

[10:22] *** Herby__ joined
[10:22] <Herby__> \o

[10:23] <moritz> tbrowder: for other test suites, it's a tradeoff between safety and convenience that you have to decide yourself

[10:23] *** TimToady joined
[10:23] <moritz> \o Herby__ 

[10:28] *** domidumont joined
[10:36] <hchienjo> moritz: Is there a straight forward documentation on how to run the roast tests? 

[10:38] <tbrowder> thanks, moritz

[10:40] *** canopus joined
[10:41] <moritz> hchienjo: the typical setup is to have a git clone of rakudo, and then you run perl Configure.pl --gen-moar && make spectest

[10:41] <p3rln00b> hchienjo: and you can run individual files with make t/spec/some-file.t

[10:41] <yoleaux> 10:15Z <tbrowder> p3rln00b: Thanks.

[10:41] <moritz> hchienjo: "make spectest" builds rakudo, but also clones roast into t/spec/, and runs the tests

[10:42] <p3rln00b> m: sub do-stuff {@}; use Test; ok .is-prime for do-stuff; done-testing

[10:42] <camelia> rakudo-moar 8ad885: OUTPUT«1..0␤»

[10:42] <p3rln00b> tbrowder: ^ that's one of the examples where a naive done-testing fails. do-stuff() returned nothing and tested nothing, even though it should've returned results to test. But test suite doesn't know how many tests we were meant to run, so it passes

[10:42] <moritz> it seems that p3rln00b isn't such a noob after all :-)

[10:44] *** itaipu left
[10:44] <hchienjo> moritz: What if I want to run tests on some of the changes I have made on my fork of roast?

[10:45] <p3rln00b> hchienjo: clone it to t/spec

[10:45] <p3rln00b> (in rakudo's checkout)

[10:45] <hchienjo> p3rln00b: I am assuming that is run on a rakudo folder cloned from github?

[10:46] <p3rln00b> Yeah

[10:46] <p3rln00b> make spectest would've cloned perl6/roast into it. You can just toss it and clone your fork into it

[10:51] *** domidumont left
[10:55] *** Herby__ left
[11:06] <moritz> hchienjo: or if you have already cloned your repo somewhere else, a symlink will do too

[11:06] *** itaipu joined
[11:08] *** aries_liuxueyang joined
[11:08] *** hchienjo joined
[11:09] *** Bucciarati joined
[11:28] *** pierre_ joined
[11:33] *** bpmedley joined
[11:45] *** Ven_ joined
[11:46] *** pierre_ left
[11:46] *** ufobat joined
[11:52] *** ufobat left
[11:54] *** ufobat joined
[11:56] *** itaipu left
[11:57] *** Ven_ left
[11:59] *** Ven_ joined
[12:03] *** ufobat left
[12:06] *** ufobat joined
[12:10] <hchienjo> :moritz :p3rlnoob thanks.

[12:11] *** geekosaur joined
[12:11] <hchienjo> moritz: What about when testing for Proc.signal, shouldn't we use Proc.async instead?

[12:12] <timotimo> why? .signal should just be set after the process has ended, right?

[12:14] *** kurahaupo joined
[12:15] *** cdg joined
[12:18] *** evalable6 joined
[12:19] *** evalable6 left
[12:20] <AlexDaniel> xD one of the bots ran away from the test environment

[12:27] *** ufobat left
[12:28] *** hchienjo left
[12:39] *** ufobat joined
[12:41] <dalek> doc: 14567d4 | (Tom Browder)++ | doc/Language/testing.pod6:

[12:41] <dalek> doc: add caution about done-testing

[12:41] <dalek> doc: review: https://github.com/perl6/doc/commit/14567d4ef9

[12:51] *** geekosaur left
[12:53] *** geekosaur joined
[13:00] <AlexDaniel> tbrowder: what does this mean? https://github.com/perl6/doc/commit/14567d4ef9

[13:11] *** andrzejku joined
[13:12] *** hchienjo joined
[13:25] *** evalable6 joined
[13:26] *** evalable6 left
[13:40] <tbrowder> AlexDaniel: Perhaps the wording could be improved, but that is how I interpreted moritz's answer to my query about why roast tests used plan and not done-testing.

[13:41] <AlexDaniel> tbrowder: well, not removed then, but changed to ｢plan｣ ?

[13:42] <AlexDaniel> and as always, it does not hurt to explain why

[13:42] <tbrowder> I'm sure it could be better worded.

[13:43] *** cdg left
[13:43] <tbrowder> "and as always, it does not hurt to explain why": in the note or the comment?

[13:43] <AlexDaniel> tbrowder: in the note (so that doc users can see it)

[13:45] *** skids joined
[13:54] *** rgrinberg joined
[13:56] <dalek> doc: 0dbc749 | (Tom Browder)++ | doc/Language/testing.pod6:

[13:56] <dalek> doc: expand the note per AlexDaniel's comments

[13:56] <dalek> doc: review: https://github.com/perl6/doc/commit/0dbc74975e

[14:01] *** khw joined
[14:02] <AlexDaniel> that's better, I think. Could be improved further though. For example, I find the mention of roast a bit irrelevant to the docs. Instead, it can provide concrete examples when ｢done-testing｣ does not work as expected.

[14:02] *** rgrinberg left
[14:03] *** pierre_ joined
[14:07] *** hchienjo left
[14:09] *** rgrinberg joined
[14:10] <tbrowder> ok, how about p3rln00b's example above?

[14:12] *** bazzaar joined
[14:13] *** espadrine joined
[14:16] *** pierre_ left
[14:17] *** kaare__ joined
[14:18] *** kate__ joined
[14:19] *** kate__ left
[14:19] <dalek> Inline-Perl5: f392591 | niner++ | / (4 files):

[14:19] <dalek> Inline-Perl5: Replace use of Perl5Parent for v6::inline by Perl5Extension

[14:19] <dalek> Inline-Perl5: 

[14:19] <dalek> Inline-Perl5: This first part adds the v6::code package for using a different way of

[14:19] <dalek> Inline-Perl5: extending a Perl 5 package with Perl 6 code. Instead of abusing inheritance,

[14:19] <dalek> Inline-Perl5: we create Perl 5 wrappers for Perl 6 methods and subs.

[14:19] <dalek> Inline-Perl5: 

[14:19] <dalek> Inline-Perl5: On the Perl 6 side, Perl 6 extended objects are indistinguishable from plain

[14:19] <dalek> Inline-Perl5: Perl 5 objects. On the Perl 5 side, the only way to notice anything out of

[14:19] *** committable6 left
[14:19] <dalek> Inline-Perl5: the norm is by looking for the attached magic.

[14:19] <dalek> Inline-Perl5: 

[14:19] <dalek> Inline-Perl5: Fixes memory leaks caused by the Perl 5/6 halves of extended objects to

[14:19] <dalek> Inline-Perl5: point to their other half, keeping both alive. Now the Perl 5 object is the

[14:19] <dalek> Inline-Perl5: authoritative source.

[14:19] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/f392591b05

[14:19] <dalek> Inline-Perl5: bd8fc7c | niner++ | / (2 files):

[14:19] <dalek> Inline-Perl5: Move the new Perl5Extension code into v6::inline

[14:19] <dalek> Inline-Perl5: 

[14:19] <dalek> Inline-Perl5: Get rid of the v6::code package and just replace v6::inline with it.

[14:19] <dalek> Inline-Perl5: 

[14:19] <dalek> Inline-Perl5: The user visible change is that we no longer need the "constructors"

[14:19] <dalek> Inline-Perl5: import argument. We override GLOBAL::CORE::bless instead to intercept object

[14:19] <dalek> Inline-Perl5: creation.

[14:20] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/bd8fc7cbf8

[14:23] <masak> nince++

[14:23] <masak> er, nine++, lag--

[14:23] <masak> somebody named "nince" somewhere now goes "yay -- free karma!"

[14:23] <tbrowder> AlexDaniel: working on a change now...

[14:23] <AlexDaniel> tbrowder++

[14:24] <dalek> Inline-Perl5: 196f427 | niner++ | / (3 files):

[14:24] <dalek> Inline-Perl5: Support attributes on routines added to Perl 5 packages via v6::inline

[14:24] <dalek> Inline-Perl5: 

[14:24] <dalek> Inline-Perl5: This adds the Perl5Attributes role which can be added to routines to

[14:24] <dalek> Inline-Perl5: record the Perl 5 attributes that should be set on the wrapper.

[14:24] <dalek> Inline-Perl5: 

[14:24] <dalek> Inline-Perl5: Can be used for emulating subroutine attributes via traits:

[14:24] <dalek> Inline-Perl5: 

[14:24] <dalek> Inline-Perl5: multi trait_mod:<is>(Routine $declarand, :$ActionClass!) {

[14:24] <dalek> Inline-Perl5:     unless $declarand.does(Inline::Perl5::Perl5Attributes) {

[14:24] <dalek> Inline-Perl5:         $declarand does Inline::Perl5::Perl5Attributes[$declarand];

[14:24] <dalek> Inline-Perl5:     }

[14:24] <dalek> Inline-Perl5:     $declarand.attributes.push("ActionClass('$ActionClass')");

[14:24] <dalek> Inline-Perl5: }

[14:24] <dalek> Inline-Perl5: 

[14:24] <dalek> Inline-Perl5: method end($c) is ActionClass["RenderView"] { }

[14:24] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/196f427b93

[14:24] <AlexDaniel> ah by the way

[14:24] <AlexDaniel> m: use Test;

[14:24] <camelia> rakudo-moar 666128: ( no output )

[14:25] <AlexDaniel> m: use Test; done-testing

[14:25] <camelia> rakudo-moar 666128: OUTPUT«1..0␤»

[14:25] <nine> These 3 changes ^^^ turn extending Catalyst applications with Perl 6 from possible to down right simple! :)

[14:25] <vendethiel> nine++

[14:25] <bazzaar> o/ perl6

[14:25] <vendethiel> \o

[14:25] <masak> nine: I curse you with blogging about this :D

[14:25] <AlexDaniel> 1..0?

[14:25] <dalek> Inline-Perl5: 8e6dff1 | niner++ | META.info:

[14:25] <dalek> Inline-Perl5: Version 0.18

[14:25] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/8e6dff1f5a

[14:25] <bazzaar> m: my @a=<1 2 3>; my @b=<a b c>; my @c=<0 0>; for @a Z @b Z @c -> [$a, $b, $c] { say ($a, $b, $c).join(",") }

[14:25] <camelia> rakudo-moar 666128: OUTPUT«1,a,0␤2,b,0␤»

[14:25] <AlexDaniel> bisectable6: use Test; done-testing

[14:25] <bisectable6> AlexDaniel, On both starting points (old=2015.12 new=666128f) the exit code is 0 and the output is identical as well

[14:25] <bisectable6> AlexDaniel, Output on both points: 1..0

[14:26] <masak> with actual code examples

[14:27] <nine> https://github.com/niner/XStats is my canonical Catalyst with Perl 6 example and it just lost almost all its Perl 6 support code as it's no longer necessary

[14:28] <bazzaar> does anyone know a simpler way to avoid losing data in one of the input arrays, due to Z stopping when one of the input arrays is exhausted 

[14:28] <timotimo> nine: awesome

[14:28] <bazzaar> I didn't explain that very well , sorry

[14:29] *** hchienjo joined
[14:29] <timotimo> depends on what you want to have happen when one of the arrays runs out

[14:29] <timotimo> like, <<Operator>> will extend the shorter of the two by repeating it

[14:29] <timotimo> that may not be what you want, however

[14:29] <AlexDaniel> bazzaar: roundrobin ?

[14:30] *** Jesmaybe joined
[14:30] <AlexDaniel> m: say zip <a b c>, <1 2 3 4>

[14:30] <camelia> rakudo-moar 666128: OUTPUT«((a 1) (b 2) (c 3))␤»

[14:30] <AlexDaniel> m: say roundrobin <a b c>, <1 2 3 4>

[14:30] <camelia> rakudo-moar 666128: OUTPUT«((a 1) (b 2) (c 3) (4))␤»

[14:30] <bazzaar> timotimo: just padding out the missing elements would be fine

[14:31] <timotimo> AlexDaniel: but you can't tell which one ran out that way

[14:31] <timotimo> not without asking the arrays for their length, anyway

[14:31] <timotimo> which would cause buffering if you have Seqs, i'd think

[14:32] *** Jesmaybe left
[14:32] <Juerd> What's the usecase, anyway, where you have several lists of elements that apparently are related enough that those with the same index should be handled together, but that do not have the same length?

[14:32] <bazzaar> AlexDaniel: I think roundrobin is what I'm looking for, didn't know it existed

[14:33] <dalek> doc: f940ea8 | (Tom Browder)++ | doc/Language/testing.pod6:

[14:33] <dalek> doc: add an example per p3rln00b and AlexDaniel

[14:33] <dalek> doc: review: https://github.com/perl6/doc/commit/f940ea824c

[14:33] <AlexDaniel> Juerd: dunno, but roundrobin behavior is very required in golfing :)

[14:34] <AlexDaniel> too bad it takes a thousand of bytes to type it

[14:34] <AlexDaniel> to use it, rather

[14:34] <bazzaar> Juerd: I'm parsing a horribly formatted text file, and recombining the data, but it is only 95% successful, so there would be a post processing step

[14:34] *** Jesmaybe joined
[14:36] <bazzaar> so the different input arrays to roundrobin are not always the same length 

[14:39] *** hchienjo left
[14:40] *** itaipu joined
[14:42] *** committable6 joined
[14:43] <bazzaar> AlexDaniel: timotimo, and Juerd, many thanks for your help :)

[14:44] *** Jesmaybe left
[14:47] *** rgrinberg left
[14:49] *** Jesmaybe joined
[14:50] *** rindolf joined
[14:51] *** hchienjo joined
[14:52] <dalek> doc: 43b6b02 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/testing.pod6:

[14:52] <dalek> doc: Typo

[14:52] <dalek> doc: review: https://github.com/perl6/doc/commit/43b6b0202f

[14:53] <AlexDaniel> tbrowder: I like it

[14:54] <tbrowder> Thanks to you and p3rln00b for good critiques!

[15:01] *** Jesmaybe left
[15:01] *** Jesmaybe joined
[15:03] *** bazzaar left
[15:04] *** BenGoldberg left
[15:08] *** ssqq joined
[15:09] *** MilkmanDan joined
[15:13] *** Jesmaybe left
[15:13] *** itaipu left
[15:14] *** Jesmaybe joined
[15:15] *** BenGoldberg joined
[15:16] *** pierre_ joined
[15:18] *** Jesmaybe left
[15:21] *** zakharyas joined
[15:22] *** pierre_ left
[15:22] *** hchienjo left
[15:22] *** rgrinberg joined
[15:25] *** ufobat left
[15:27] *** rgrinberg left
[15:44] *** domidumont joined
[15:45] *** hchienjo joined
[15:51] *** espadrine left
[15:56] *** hchienjo left
[15:57] *** ssqq left
[15:57] *** chienjo joined
[15:58] *** chienjo is now known as hchienjo

[16:02] <AlexDaniel> how do I .keep a promise if I'm not sure if it was kept or not?

[16:02] <AlexDaniel> should I just wrap it in try {} ?

[16:04] <p3rln00b> m: given Promise.new { .keep; .keep unless $_ }

[16:04] <camelia> rakudo-moar 666128: ( no output )

[16:04] <AlexDaniel> p3rln00b: what if it was kept right after unless ?

[16:06] <p3rln00b> Fair 'nuf

[16:06] <AlexDaniel> m: given Promise.new { .keep; try { .keep } }

[16:06] <camelia> rakudo-moar 666128: ( no output )

[16:06] <AlexDaniel> that's what I'm thinking about

[16:13] <AlexDaniel> actually, nevermind

[16:15] *** Jesmaybe joined
[16:20] *** Jesmaybe left
[16:22] *** seatek joined
[16:29] *** dylanwh_ joined
[16:29] *** TEttinger joined
[16:30] *** skids left
[16:30] *** edenc joined
[16:39] *** hchienjo left
[16:41] *** araujo_ joined
[16:45] *** cdg joined
[16:47] *** domidumont left
[16:48] *** mst_ joined
[16:48] *** mst_ is now known as mst

[16:57] *** zakharyas left
[17:05] *** lucasb_ joined
[17:06] *** cdg left
[17:09] <BenGoldberg> m: given Promise.new { .keep xx 2 }

[17:09] <camelia> rakudo-moar 666128: OUTPUT«Access denied to keep/break this Promise; already vowed␤  in block  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:15] <moritz> t/spec$ git grep 'my int \@'|wc -l

[17:15] <moritz> 28

[17:16] <moritz> t/spec$ git grep 'my str \@'|wc -l

[17:16] <moritz> 0

[17:16] <moritz> that's, like, totally a big hole in our test suite, right? :-)

[17:23] <p3rln00b> moritz: you clearly haven't seen the coverage results, if you think THAT is a big hole :) Exhibit A: http://perl6.wtf/src_core_Num.pm.coverage.html#L462

[17:23] <p3rln00b> (hint: red means uncovered)

[17:30] <AlexDaniel> p3rln00b: shhh. gfldex may see it and start wiping it all out from the docs

[17:31] <AlexDaniel> that being said, we don't have nativenum doc-ed, so…

[17:32] <p3rln00b> Well, wasn't the rule if it ain't in roast, it's not specced? I recall even some harsher terms being thrown around like "core devs and not doc team get to decide what is and isn't Perl 6". So I don't blame gfldex 

[17:33] <p3rln00b> Though, hopefully, all of accidentally uncovered stuff should be covered in about a month

[17:36] <gfldex> some days ago i tried to install all modules from the ecosystem. About halve of them wont install because of failing tests. I'm quite sure most of those used to run just fine.

[17:36] <p3rln00b> :(

[17:36] <gfldex> So the harm is already done. Go and add whatever you want. :)

[17:36] <AlexDaniel> p3rln00b: that absolutely right. But sometimes it's kinda obvious that something is a roast issue

[17:40] <AlexDaniel> (that is, the behavior is obvious and everybody is already using it, it's just that there's no test for it for some reason)

[17:40] *** khw left
[17:42] *** nadim joined
[17:47] *** zakharyas joined
[17:55] * p3rln00b finds that a poor argument :}

[17:55] <p3rln00b> m: my Num $i; my num $j; dd [ $i++, $j++ ]; # Not really obvious

[17:55] <camelia> rakudo-moar 666128: OUTPUT«[0e0, NaN]␤»

[17:57] <AlexDaniel> p3rln00b: we don't have to document edge cases if there are no tests then? ¯\_(ツ)_/¯

[17:58] <p3rln00b> m: Mix.new-from-pairs(1 => .9999).Bag.values.say # non-obvious, non-edge case

[17:58] <camelia> rakudo-moar 666128: OUTPUT«()␤»

[17:59] <p3rln00b> AlexDaniel: I'd go more for "we should have tests for any edge cases, and if there are no tests, they should be added" :)

[18:00] <AlexDaniel> p3rln00b: yes, that's the point

[18:04] *** Derperperd joined
[18:21] *** ocbtec left
[18:24] *** rindolf left
[18:31] *** rindolf joined
[18:35] *** BenGoldberg left
[18:36] <AlexDaniel> what would be the shortest NativeCall thing that segfaults?

[18:37] <timotimo> m: use NativeCall; sub printf(int) is native(Str) {*}; printf(0);

[18:37] <camelia> rakudo-moar 1acf5b: OUTPUT«Potential difficulties:␤    In 'printf' routine declaration - Not an accepted NativeCall type for parameter [1]  : int␤     --> For Numerical type, use the appropriate int32/int64/num64...␤    at <tmp>:1␤    ------> 3Call; sub printf(int) is nativ…»

[18:37] <timotimo> m: use NativeCall; sub printf(int32) is native(Str) {*}; printf(0);

[18:37] <camelia> rakudo-moar 1acf5b: ( no output )

[18:37] <timotimo> m: use NativeCall; sub printf(int64) is native(Str) {*}; printf(0);

[18:37] <camelia> rakudo-moar 1acf5b: ( no output )

[18:37] <timotimo> apparently it accepts a null string?

[18:38] <arnsholt> Maybe strdup(NULL)?

[18:38] <timotimo> m: use NativeCall; sub strdup(int64) is native(Str) {*}; strdup(0);

[18:38] <camelia> rakudo-moar 1acf5b: OUTPUT«(signal SEGV)»

[18:38] <timotimo> good call

[18:38] <AlexDaniel> alright

[18:38] <AlexDaniel> thank you! Needed that for a test… ;)

[18:39] <timotimo> m: use NativeCall; sub strdup(int64) is native(Str) {*}; strdup(0); signal(SIGSEGV).tap({ say "whoopsie!" })

[18:39] <camelia> rakudo-moar 1acf5b: OUTPUT«(signal SEGV)»

[18:39] <timotimo> :P

[18:39] <p3rln00b> m: class { has %.foo = foo => 42; method bar ($e where %!foo{ $e.lc }:exists) { say "got it" } }.new.bar: 'foo'

[18:39] <camelia> rakudo-moar 1acf5b: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Invalid typename 'exists' in parameter declaration.␤at <tmp>:1␤------> 3thod bar ($e where %!foo{ $e.lc }:exists7⏏5) { say "got it" } }.new.bar: 'foo'␤»

[18:40] <p3rln00b> m: class { has %.foo = foo => 42; method bar ($e where { %!foo{ $e.lc }:exists } ) { say "got it" } }.new.bar: 'foo'

[18:40] <camelia> rakudo-moar 1acf5b: OUTPUT«got it␤»

[18:41] <dalek> ecosystem: 6b648ad | (Sterling Hanenkamp)++ | META.list:

[18:41] <dalek> ecosystem: Adding CompUnit::DynamicLib to the ecosystem

[18:41] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/6b648ad9e7

[18:44] *** nadim left
[18:45] <p3rln00b> https://github.com/zostay/p6-CompUnit-DynamicLib

[18:47] *** girafe joined
[19:02] *** cdg joined
[19:13] *** Derperperd left
[19:14] <dalek> Inline-Perl5: f3a06bf | niner++ | lib/Inline/Perl5.pm6:

[19:14] <dalek> Inline-Perl5: No need for Perl5Attributes to be parametric

[19:14] <dalek> Inline-Perl5: 

[19:14] <dalek> Inline-Perl5: Version 0.19

[19:14] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/f3a06bf815

[19:18] *** Jesmaybe joined
[19:20] *** Jesmaybe left
[19:20] *** Jesmaybe joined
[19:21] *** bazzaar joined
[19:21] <bazzaar> o/ perl6

[19:21] *** DANtheBEASTman joined
[19:22] <bazzaar> m: my @a = 1; my @b = 1..2; my @c = 1..3; for roundrobin(@a, @b, @c) -> $x { $x.say }

[19:22] <camelia> rakudo-moar 1acf5b: OUTPUT«(1 1 1)␤(2 2)␤(3)␤»

[19:25] <bazzaar> Hi, earlier today I was pointed to usage of the roundrobin sub, to solve my issue. That was great. I'm just pointing out that the docs give an example with flat in it which I think is clouded by that.

[19:25] <bazzaar> m: my @a = 1; my @b = 1..2; my @c = 1..3; for flat roundrobin(@a, @b, @c) -> $x { $x.say }

[19:25] <camelia> rakudo-moar 1acf5b: OUTPUT«1␤1␤1␤2␤2␤3␤»

[19:26] <moritz> bazzaar: feel free to submit a patch that adds a better example

[19:26] <moritz> bazzaar: or if you tell me your github username, I can give you direct push access

[19:28] <moritz> docmax: if it was tracked before, and deleted upstream, git will also delete it locally after a git pull

[19:28] <bazzaar> moritz: your first post, and I'm thinking, now how do I do that, ... your second post, I'm thinking wow that's terrifying 

[19:28] <moritz> sorry, wrong channel

[19:28] <moritz> bazzaar: why terrifying? if you do something wrong, a simple 'git revert' will undo it

[19:34] *** Jesmaybe left
[19:34] *** cdg left
[19:36] *** labster joined
[19:38] <bazzaar> moritz: my github username is bazzaar, I will have a go

[19:39] <moritz> bazzaar: invitation sent. Have the appropriate amount of fun!

[19:39] <moritz> (and don't hesitate to ask for feedback here)

[19:40] <bazzaar> moritz: thankyou

[19:40] *** Ven_ left
[19:41] *** Derperperd joined
[19:59] *** rindolf left
[19:59] *** Sgeo joined
[20:05] *** lucasb_ left
[20:05] *** bazzaar left
[20:06] *** bjz joined
[20:11] *** bjz_ joined
[20:11] *** bjz left
[20:22] *** shin_ joined
[20:27] <dalek> doc/spellcheck: ad907e8 | coke++ | doc/Language/subscripts.pod6:

[20:27] <dalek> doc/spellcheck: other instances used the US version

[20:27] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/ad907e8512

[20:27] <dalek> doc/spellcheck: 378ce60 | (Tom Browder)++ | doc/Language/testing.pod6:

[20:27] <dalek> doc/spellcheck: add caution about done-testing

[20:27] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/378ce60ccc

[20:27] <dalek> doc/spellcheck: fa5a640 | (Tom Browder)++ | doc/Language/testing.pod6:

[20:27] <dalek> doc/spellcheck: expand the note per AlexDaniel's comments

[20:27] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/fa5a640ad5

[20:27] <dalek> doc/spellcheck: 3014124 | (Tom Browder)++ | doc/Language/testing.pod6:

[20:27] <dalek> doc/spellcheck: add an example per p3rln00b and AlexDaniel

[20:27] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/301412450f

[20:27] <dalek> doc/spellcheck: 20d109d | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/testing.pod6:

[20:27] <dalek> doc/spellcheck: Typo

[20:27] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/20d109db0f

[20:27] <dalek> doc/spellcheck: 8596adb | coke++ | doc/Language/testing.pod6:

[20:27] <dalek> doc/spellcheck: remove trailing ws

[20:27] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/8596adba7c

[20:28] *** zakharyas1 joined
[20:28] <AlexDaniel> [Coke]: this didn't look like a merge

[20:31] *** andrzejku left
[20:34] *** Jesmaybe joined
[20:38] *** Jesmaybe left
[20:42] *** zakharyas1 left
[20:46] *** zakharyas left
[21:00] *** wamba joined
[21:03] *** flexibea` joined
[21:08] *** labster left
[21:08] *** labster joined
[21:11] *** cdg joined
[21:13] *** cdg left
[21:14] *** cdg joined
[21:24] *** girafe left
[21:28] *** firstdayonthejob joined
[21:31] *** Derperperd left
[21:33] *** wamba left
[21:41] *** Ven_ joined
[21:43] *** Ven_ left
[21:43] *** Ven__ joined
[21:46] *** yqt joined
[21:48] *** bjz_ left
[22:06] *** BenGoldberg joined
[22:15] <BenGoldberg> m: dd Mix.new-from-pairs( 1 => .9999 );

[22:15] <camelia> rakudo-moar 1acf5b: OUTPUT«(1=>0.9999).Mix␤»

[22:16] <BenGoldberg> m: dd Mix.new-from-pairs( 1 => .9999 ).Bag;

[22:16] <camelia> rakudo-moar 1acf5b: OUTPUT«().Bag␤»

[22:17] <BenGoldberg> m: dd Mix.new-from-pairs( 1 => pi ).Bag;

[22:17] <camelia> rakudo-moar 1acf5b: OUTPUT«(1=>3).Bag␤»

[22:18] <BenGoldberg> s: Mix, 'Bag', ();

[22:18] <SourceBaby> BenGoldberg, Ehhh... I'm too scared to run that code.

[22:18] <BenGoldberg> s: Mix, 'Bag', ()

[22:18] <BenGoldberg> s: Mix.new-from-pairs( 1 => pi ), 'Bag';

[22:20] <p3rln00b> You broke my robot!

[22:21] <p3rln00b> But the code's here: https://github.com/rakudo/rakudo/blob/nom/src/core/Mix.pm#L37

[22:21] <p3rln00b> s: &say

[22:27] <p3rln00b> Seems hack is churning on something. Undercover is still connected, but I can't ssh (just hangs )

[22:30] <timotimo> uh oh, again?

[22:30] <p3rln00b> Does that happen often?

[22:30] <p3rln00b> I wonder if my bots are leaking :/

[22:30] <timotimo> i'll look into it in a bit, gotta do some stuff first

[22:31] <timotimo> usually hack b0rks because of one of the virtual disk is dying

[22:31] <timotimo> it just suddenly stops doing anything, so we just reboot the vm and everything's fine

[22:32] *** itaipu joined
[22:33] *** firstdayonthejob left
[22:35] *** dalek joined
[22:35] *** ChanServ sets mode: +v dalek

[22:35] *** synopsebot6 joined
[22:35] <timotimo> hack is back

[22:35] <p3rln00b> timotimo++

[22:35] <timotimo> we should tell all those people to get an account on irc.p6c.org

[22:35] <timotimo> those that just flew from the 'net

[22:35] *** Jesmaybe_ joined
[22:36] *** canopus left
[22:37] *** Undercover joined
[22:37] *** SourceBaby joined
[22:40] *** Ven__ left
[22:41] *** Jesmaybe_ left
[22:42] *** canopus joined
[22:47] *** NeuralAnomaly joined
[22:49] *** bjz joined
[23:00] <dalek> whateverable: 43a553a | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/ (3 files):

[23:00] <dalek> whateverable: Move some logic into Testable.pm6

[23:00] <dalek> whateverable: 

[23:00] <dalek> whateverable: It's not pretty, but it works fine for tests. But let's have this

[23:00] <dalek> whateverable: ugliness only once.

[23:00] *** dalek left
[23:00] <AlexDaniel> mmm… yeah

[23:00] *** dalek joined
[23:00] *** ChanServ sets mode: +v dalek

[23:03] *** itaipu left
[23:05] *** rgrinberg joined
[23:08] <dalek> whateverable: 69ff223 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/lib/Testable.pm6:

[23:08] <dalek> whateverable: Oops. This is what I actually meant in 43a553a596

[23:08] <dalek> whateverable: 

[23:08] <dalek> whateverable: Also, give it a bit more time to settle down.

[23:08] <dalek> whateverable: review: https://github.com/perl6/whateverable/commit/69ff223ad5

[23:11] *** evalable6 joined
[23:11] <AlexDaniel> m: say 42

[23:11] <camelia> rakudo-moar 1acf5b: OUTPUT«42␤»

[23:11] <evalable6> AlexDaniel, rakudo-moar 666128f: OUTPUT«42»

[23:11] <AlexDaniel> wrong…

[23:11] *** evalable6 left
[23:13] <geekosaur> evilable? :p

[23:19] *** evalable6test joined
[23:19] <AlexDaniel> m: say 42

[23:19] <camelia> rakudo-moar 1acf5b: OUTPUT«42␤»

[23:20] *** lucasb_ joined
[23:21] <AlexDaniel> oh well, it's ‘+camelia’ :)

[23:21] *** evalable6test left
[23:22] <p3rln00b> What does it do?

[23:23] <AlexDaniel> p3rln00b: evalable you mean?

[23:23] <AlexDaniel> p3rln00b: by the way, NAMES returns a list of nicknames in a slightly interesting way…

[23:24] <p3rln00b> Well, it includes op/voice markers

[23:24] <AlexDaniel> yea

[23:24] <p3rln00b> And yeah, I meant what does evalable do

[23:26] <AlexDaniel> p3rln00b: basically, it is camelia on drugs

[23:26] <AlexDaniel> so not that interesting

[23:27] <AlexDaniel> if during netsplit you end up on the same side with evalable but not camelia, it will answer m: commands

[23:27] <AlexDaniel> (or if camelia is k-lined again)

[23:28] <p3rln00b> ah

[23:29] <AlexDaniel> otherwise it is identical, I think. It does allow you to set custom stdin, it will accept any raw link but not normal github links, it will gist long output, etc.

[23:29] <samcv> hey p3rln00b i have the code working with no errors now, but it doesn't seem to call irc-privmsg-channel at all http://vpaste.net/ptraK

[23:30] <samcv> it does start the script though i have confirmed that

[23:30] <samcv> but i added a say in there to print out whenever something was said in the channel, but it doesn't print out anything at all

[23:31] *** cdg left
[23:33] *** cdg joined
[23:36] *** evalable6 joined
[23:36] *** evalable6 left
[23:37] *** evalable6 joined
[23:37] *** evalable6 left
[23:37] *** cdg left
[23:38] *** Jesmaybe_ joined
[23:40] *** evalable6 joined
[23:40] <AlexDaniel> m: say 42

[23:40] <camelia> rakudo-moar eb3123: OUTPUT«42␤»

[23:40] <AlexDaniel> ok

[23:40] <AlexDaniel> evilable: say 666

[23:40] <evalable6> AlexDaniel, rakudo-moar 666128f: OUTPUT«666»

[23:40] <AlexDaniel> geekosaur: ↑ ;)

[23:42] <lucasb_> it's name is evalable6, but you have to address it as evilable?

[23:42] <p3rln00b> And 666... is a real commit? :O)

[23:42] <geekosaur> they edit correct their names

[23:42] <lucasb_> evalable6: say 42

[23:42] <evalable6> lucasb_, rakudo-moar 666128f: OUTPUT«42»

[23:42] <lucasb_> hmm

[23:43] *** bjz left
[23:43] *** Jesmaybe_ left
[23:43] <p3rln00b> samcv: .write actually takes a Blob, not a Str, so you need to encode it.

[23:43] <AlexDaniel> p3rln00b: surprisingly… it is :)

[23:43] <p3rln00b> m: dd "Meow meow".encode

[23:43] <camelia> rakudo-moar eb3123: OUTPUT«utf8.new(77,101,111,119,32,109,101,111,119)␤»

[23:43] <p3rln00b> m: dd "Meow meow".encode.^name

[23:43] <camelia> rakudo-moar eb3123: OUTPUT«"utf8"␤»

[23:43] <p3rln00b> bah

[23:43] <samcv> p3rln00b, shouldn't it at least print something out though?

[23:43] <p3rln00b> Well, tis a blob

[23:44] <p3rln00b> samcv: it does for me: https://gist.github.com/zoffixznet/ac6892eeea76124a8fd29b35bf624e93

[23:44] <samcv> so it's getting called but i can't set the $body = $e.text and stuff like that?

[23:45] <samcv> hmm weird. ok. thank you. weird

[23:45] <AlexDaniel> ebalable: .say for ^100

[23:45] <evalable6> AlexDaniel, rakudo-moar eb3123e: OUTPUT«0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤12␤13␤14␤15␤16␤17␤18␤19␤20␤21␤22␤23␤24␤25␤26␤27␤28␤29␤30␤31␤32␤33␤34…»

[23:45] <evalable6> AlexDaniel, Full output: https://gist.github.com/b980e3d318d23ecff14e0072f0f06c13

[23:45] <p3rln00b> samcv: maybe your stuff is too old? (Perl 6 or IRC::Client)

[23:46] <p3rln00b> evilable: $*EXECUTABLE.IO.slurp.say

[23:46] <evalable6> p3rln00b, rakudo-moar eb3123e: OUTPUT«#!/bin/sh␤exec /tmp/whateverable/rakudo-moar/eb3123e5e60fa1635ed1ee121cec1290c290044a/bin/moar…»

[23:46] <samcv> well i have 2016.09 rakudo let me see if i need to update the client

[23:46] <evalable6> p3rln00b, Full output: https://gist.github.com/c37a242b7a9b560afb9ff3cf4c3b2af2

[23:46] <p3rln00b> samcv: 2016.10 is the latest :)

[23:47] <p3rln00b> (since about 10 minutes ago)

[23:47] <samcv> hahahha

[23:47] <samcv> great :)

[23:47] <shin_> hi all... how can i do a sub such as 

[23:47] <shin_> m: sub test1(*@v) { dd @v; }; my $a = 1; test1($a,2,3,5);

[23:47] <camelia> rakudo-moar eb3123: OUTPUT«[1, 2, 3, 5]␤»

[23:48] <shin_> but showing that the first parameter was a variable called $a and the other were constants?

[23:48] <lucasb_> maybe when macros arrive in P6

[23:50] <p3rln00b> m: sub test1(*@v is rw) { dd .VAR.name for @v; }; my $a = 1; test1($a,2,3,5);

[23:50] <camelia> rakudo-moar eb3123: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Can only use 'is rw' on a scalar ('$' sigil) parameter␤at <tmp>:1␤»

[23:50] <p3rln00b> shin_: it might not even be available, since you're slurping

[23:50] *** cdg joined
[23:50] <p3rln00b> m: sub test1() { dd .VAR.name for @_; }; my $a = 1; test1($a,2,3,5);

[23:50] <camelia> rakudo-moar eb3123: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Placeholder variable '@_' cannot override existing signature␤at <tmp>:1␤------> 3sub7⏏5 test1() { dd .VAR.name for @_; }; my $a␤»

[23:50] <lucasb_> m: sub f(\x, \y) { say x.VAR.WHAT, y.VAR.WHAT }; my $x = 10; f($x, 20)

[23:51] * p3rln00b shrugs

[23:51] <camelia> rakudo-moar eb3123: OUTPUT«(Scalar)(Int)␤»

[23:51] <p3rln00b> m: sub f(\x, \y) { say x.VAR.name, y.VAR.name }; my $x = 10; f($x, 20)

[23:51] <camelia> rakudo-moar b744de: OUTPUT«No such method 'name' for invocant of type 'Int'␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[23:51] *** kurahaupo left
[23:51] <p3rln00b> m: sub f(\x, \y) { say x.VAR.name, y.VAR.?name // 'nada' }; my $x = 10; f($x, 20)

[23:51] <camelia> rakudo-moar b744de: OUTPUT«$xnada␤»

[23:52] <timotimo> m: sub test1(*@v is raw) { say @v[0].VAR.perl; say @v[1].VAR.perl }; my $var = 999; test1($var, 1, 2, 3)

[23:52] <camelia> rakudo-moar b744de: OUTPUT«Int.new␤1␤»

[23:53] <AlexDaniel> m: sub test1(*@v is raw) { try { dd .VAR.name } for @v }; my $a = 1; my $b = 25; test1($a,2,3,$b)

[23:53] <camelia> rakudo-moar b744de: OUTPUT«"\$a"␤"\$b"␤»

[23:53] <AlexDaniel> ahhhh

[23:53] <AlexDaniel> timotimo: :E

[23:53] <timotimo> :)

[23:53] <timotimo> my output wasn't as good as yours, though

[23:53] <AlexDaniel> but yeah! Surprisingly, you can do it!

[23:53] <AlexDaniel> who would've thought!

[23:53] *** shin_ left
[23:53] *** shin_ joined
[23:54] <shin_> I know i can use this already: m: my $a = 1; my $b = "hello!", my $c = { $_ x  2}; dd($a, $b, $c); 

[23:54] <p3rln00b> :)

[23:54] <shin_> m: my $a = 1; my $b = "hello!", my $c = { $_ x  2}; dd($a, $b, $c); 

[23:54] <camelia> rakudo-moar b744de: OUTPUT«Int $a = 1␤Str $b = "hello!"␤Block $c = -> ;; $_? is raw { #`(Block|82687016) ... }␤»

[23:54] <AlexDaniel> shin_: https://irclog.perlgeek.de/perl6/2016-10-15#i_13410414 ?

[23:54] * p3rln00b &

[23:55] <shin_> Hehe, great :)

[23:55] <shin_> Thanks AlexDaniel 

[23:55] *** cdg left
[23:56] <AlexDaniel> m: sub foo(*@v is raw) { say .VAR.?name // $_ for @v }; my $a = 1; my $b = 25; foo($a,2,3,$b)

[23:56] <camelia> rakudo-moar b744de: OUTPUT«$a␤2␤3␤$b␤»

[23:57] <AlexDaniel> another cool thing in Perl 6 is Proxy

[23:57] <AlexDaniel> which is not related to this, but it is just as cool as ｢is raw｣

