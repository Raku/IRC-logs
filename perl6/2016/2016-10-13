[00:06] *** skids joined
[00:07] *** cibs left
[00:09] *** cibs joined
[00:14] *** perlawhirl left
[00:21] *** labster left
[00:21] *** b2gills left
[00:33] *** pierre_ joined
[00:34] *** b2gills joined
[00:42] *** Derperperd joined
[00:47] *** jercos joined
[00:48] *** bisectable6 joined
[00:56] *** Actualeyes left
[01:02] *** timotimo joined
[01:02] <timotimo> moritz: seems like the server i was ircing from until now has gone belly-up. i think i might want to move over to irc.p6c.org, but i don't think i have an account there; could you make one for me with the same authorized_keys as on hack?

[01:03] *** ccakes joined
[01:05] <timotimo> also, i wonder why the weechat version on hack is 1.0.1 when there's already one with a much higher version number available

[01:06] <timotimo> there have been 7 releases since 1.0.1, the latest of which was on the 2nd of october: version 1.6

[01:06] *** yqt left
[01:07] *** seatek left
[01:09] <timotimo> - remove "freenode" server from default config   -  :\

[01:10] *** Herby__ left
[01:11] *** nadim left
[01:12] <timotimo> seems like the server's back

[01:12] *** timotimo is now known as timo_hack

[01:12] *** kentnl is now known as kent\n

[01:13] *** timotimo joined
[01:16] *** zakharyas joined
[01:16] <MasterDuke> timotimo: would you know anything about this nqp-j error: "Flattening named argument must have VMHash REPR"?

[01:17] *** Herby__ joined
[01:17] *** ccakes left
[01:18] <timotimo> hm, are you calling |%foo with something that's actually NQPMu?

[01:19] <MasterDuke> it's happening somewhere in tools/build/install-core-dist.pl, during make install

[01:19] <timotimo> hm, so it's actually perl6-j?

[01:19] <timotimo> it could help if you'd output the actual REPR that you get for this error message

[01:19] <MasterDuke> yeah, but the error is in nqp/src/vm/jvm/runtime/org/perl6/nqp/runtime/CallSiteDescriptor.java

[01:20] <MasterDuke> i added a .getClass().getName(), it was '__P6opaque__74'

[01:20] <timotimo> is that how we get the debugname of things on the jvm?

[01:20] <MasterDuke> no idea

[01:20] <timotimo> i'd have expected something more helpful there

[01:20] *** ccakes joined
[01:21] <timotimo> that script i was running in the background is now at 167 megabytes (35 minutes of cpu time on the main thread)

[01:21] <Herby__> if i'm on Windows, and wanting to do some basic HTML parsing, is there a recommended module?

[01:21] <Herby__> or am I destined to use regex?

[01:22] <Herby__> i browsed through the module library but didnt see anything that stood out

[01:22] <timotimo> there's modules for you

[01:22] <timotimo> i think HTML::Parser::XML isn't bad. Gumbo isn't bad either.

[01:23] <Herby__> my eyes passed right over HTML::Parser::XML, let me give it a whirl

[01:27] *** cooper_ left
[01:27] *** pierre_ left
[01:28] *** cooper_ joined
[01:28] *** cooper_ left
[01:28] *** cooper_ joined
[01:28] *** pierre_ joined
[01:31] *** ggoebel joined
[01:44] *** Actualeyes joined
[01:44] <Herby__> couple of basic basic questions incoming...

[01:45] <Herby__> following the last example here (https://github.com/tony-o/perl6-html-parser-xml), I now have an xmldoc

[01:45] *** ilbot3 left
[01:45] <Herby__> how do I print that out in a coherent manner so I can see what my data looks like?

[01:45] <Herby__> https://github.com/supernovus/exemel/#xmldocument-xmlnode

[01:47] *** ilbot3 joined
[01:52] *** zacts left
[01:56] *** timo_hack left
[01:59] *** seatek joined
[02:47] *** noganex joined
[02:49] *** noganex_ left
[02:53] *** maybekoo2 left
[02:53] *** wamba joined
[02:56] *** pierre_ left
[03:03] *** pierre_ joined
[03:08] *** pierre_ left
[03:10] *** skids left
[03:12] *** Actualeyes left
[03:14] *** rgrinberg left
[03:16] *** pierre_ joined
[03:23] *** khw left
[03:36] *** geraud left
[03:39] *** geraud joined
[03:43] *** canopus left
[03:47] *** BenGoldberg left
[03:48] *** canopus joined
[04:03] *** wamba left
[04:03] *** cyphase_eviltwin left
[04:08] *** cyphase joined
[04:13] *** _slade_ left
[04:19] *** seatek left
[04:26] *** _slade_ joined
[04:44] *** pierre_ left
[04:45] *** Cabanossi left
[04:45] *** AlexDaniel left
[04:46] *** pierre_ joined
[04:46] *** Herby__ left
[04:46] *** Cabanossi joined
[04:47] *** pierre_ left
[04:55] *** pierre_ joined
[04:59] *** pierre_ left
[05:04] *** cgfbee left
[05:04] *** cgfbee joined
[05:08] *** cgfbee left
[05:09] *** cgfbee joined
[05:14] *** Actualeyes joined
[05:15] *** Possum left
[05:16] *** dwarring left
[05:34] *** dataf4l joined
[05:34] <dataf4l> hey guys

[05:34] <dataf4l> I just have a quick question

[05:35] *** domidumont joined
[05:35] <dataf4l> I generated a moar file using perl6 —target=mbc —output=mine.mbc mine.p6

[05:35] <dataf4l> after generating the file, I’d like to run the mbc file wihout the p6 file

[05:35] <dataf4l> you know, for science

[05:35] <dataf4l> I have no idea on how to do that, and I feel the docs aren’t clear.

[05:35] <timotimo> at the moment, you have to pretend it's a module and run an empty script

[05:35] <dataf4l> any pointers?

[05:36] <timotimo> perl6 -Mmine -e ''

[05:36] <dataf4l> so run an empty p6 file and use the -m option?

[05:36] <dataf4l> let me try

[05:36] <timotimo> at least it was like that the last time i looked ... last year maybe?

[05:37] <dataf4l> Felipes-MacBook-Pro:backend2 a$ perl -Mguess.mbc -e ""

[05:37] <dataf4l> syntax error at -e line 0, near "use guess."

[05:38] <dataf4l> my codeI’m afraid your suggestion was not effective, but in any case I’d like to give you thanks, I feel you tried to help, and I value that a lot.

[05:38] <timotimo> no, not "guess.mbc"

[05:39] *** domidumont left
[05:39] <dataf4l> perl6 --target=mbc --output=guess.mbc guess.p6

[05:39] <dataf4l> what is the correct extension for mbc target?

[05:39] <timotimo> -M is equivalent to a use statement; you don't put filename extensios into use statements

[05:39] <dataf4l> so a pm then?

[05:40] *** domidumont joined
[05:40] <timotimo> well, then it'll use a precompilation repository for you

[05:41] <timotimo> oh, and also the extension it'll look for is .moar, not .mbc

[05:41] <dataf4l> what the expletiv is a precompilation repository! if you pardon my ignorance

[05:41] <dataf4l> ok I’ll try moar

[05:42] <timotimo> actually, i can't get it to load the .moar file locally

[05:42] <timotimo> if you -Ilib for example, rakudo-moar will create a .precomp folder in lib/ and .moar files go there

[05:43] <dataf4l> -llib at the compilation step?

[05:44] <dataf4l> I’m trying this:

[05:44] <dataf4l> perl6 -I.  -Mguess -e ""

[05:44] <dataf4l> ===SORRY!===

[05:44] <dataf4l> Could not find guess at line 1 in:

[05:44] <dataf4l>     /Users/a/Desktop/ab/htdocs/gis/backend2

[05:44] <dataf4l>     /Users/a/.perl6

[05:44] <dataf4l>     /usr/local/Cellar/rakudo-star/2016.07/share/perl6/site

[05:44] <dataf4l>     /usr/local/Cellar/rakudo-star/2016.07/share/perl6/vendor

[05:44] <dataf4l>     /usr/local/Cellar/rakudo-star/2016.07/share/perl6

[05:44] <dataf4l>     CompUnit::Repository::AbsolutePath<140231686028672>

[05:44] <dataf4l>     CompUnit::Repository::NQP<140231681566512>

[05:44] <dataf4l>     CompUnit::Repository::Perl5<140231681566552>

[05:44] <dataf4l> Felipes-MacBook-Pro:backend2 a$ ls

[05:45] *** dataf4l left
[05:45] <timotimo> yeah, it'll want a guess.pm6 or guess.pm

[05:45] <timotimo> whoops, now he's gone

[05:47] *** dataf4l joined
[05:56] *** pierre_ joined
[05:57] <timotimo> hey dataf4l 

[05:57] <dataf4l> hi

[05:57] <timotimo> it'll want to find a guess.pm6 if you -Mguess

[05:57] <dataf4l> ok

[05:57] <dataf4l> I have a .moar file

[05:57] <dataf4l> no idea on how to load that one

[05:57] <timotimo> well, in theory moar eats moar files

[05:58] <timotimo> so just "moar guess.moar"

[05:58] <timotimo> but i don't think it'll actually do what you want

[05:58] *** MasterDuke left
[05:58] <dataf4l> Felipes-MacBook-Pro:backend2 a$ moar guess.moarvm

[05:58] <dataf4l> Unhandled exception: While looking for 'ModuleLoader.moarvm': no such file or directory

[05:58] <dataf4l>    at <unknown>:1  (guess.moarvm:<dependencies+deserialize>)

[05:58] <dataf4l> no workie

[05:58] <dataf4l> Oh well, it can wait a day

[06:00] *** telex left
[06:00] *** Actualeyes left
[06:00] *** domidumont left
[06:01] *** pierre_ left
[06:01] *** dataf4l left
[06:02] *** telex joined
[06:02] *** Actualeyes joined
[06:03] *** ponbiki joined
[06:03] *** ponbiki is now known as Guest89610

[06:04] *** FROGGS joined
[06:05] *** dataf4l joined
[06:05] *** neuraload joined
[06:06] *** mohae_ left
[06:09] *** FROGGS left
[06:09] *** dataf4l left
[06:09] <moritz> timotimo: ssh [email@hidden.address] # enjoy!

[06:12] *** abraxxa joined
[06:15] *** baest joined
[06:18] *** domidumont joined
[06:19] *** zacts joined
[06:20] *** pierre_ joined
[06:24] *** domidumont left
[06:24] *** domidumont joined
[06:27] *** firstdayonthejob joined
[06:32] *** [particle]1 joined
[06:32] *** darutoko joined
[06:32] *** [particle] left
[06:34] *** Guest89610 left
[06:37] *** firstdayonthejob left
[06:37] *** nebuchadnezzar joined
[06:38] *** Possum joined
[06:40] *** wamba joined
[06:40] *** girafe joined
[06:41] *** ponbiki_ joined
[06:44] *** Derperperd left
[06:46] *** MARTIMM joined
[07:02] *** ilbot3 left
[07:02] *** ilbot3 joined
[07:03] *** wamba left
[07:05] *** wamba joined
[07:13] *** KotH left
[07:16] *** brillenfux joined
[07:20] *** KotH joined
[07:25] *** neuraload left
[07:31] *** RabidGravy joined
[07:31] *** neuraload joined
[07:37] *** CIAvash joined
[07:37] *** CIAvash left
[07:51] *** erez joined
[07:53] *** bjz joined
[08:07] *** dakkar joined
[08:14] *** flexibeast joined
[08:15] *** bjz left
[08:19] *** girafe left
[08:19] <DrForr> Mornin'.

[08:20] *** domidumont left
[08:21] *** domidumont joined
[08:28] *** Actualeyes left
[08:30] *** pdcawley left
[08:31] *** bjz joined
[08:36] *** _slade_ left
[08:37] *** rpeter joined
[08:44] *** titsuki left
[08:45] *** pierre_ left
[08:45] *** wamba left
[08:47] *** pierre_ joined
[08:55] *** nadim joined
[08:58] *** gregf_ joined
[09:01] *** nadim left
[09:01] *** nadim joined
[09:05] *** erez left
[09:13] *** ponbiki_ left
[09:17] *** TeamBlast left
[09:17] *** hobbs left
[09:17] *** clkao left
[09:17] *** SmokeMachine____ left
[09:17] *** olinkl left
[09:17] *** notbenh_ left
[09:17] *** mephinet left
[09:17] *** p3rln00b left
[09:17] *** mindos left
[09:17] *** jnap_ left
[09:17] *** DrParis left
[09:17] *** committable6 left
[09:17] *** solarbunny left
[09:17] *** darutoko left
[09:17] *** jercos left
[09:17] *** jervo left
[09:17] *** gregf_ left
[09:17] *** harmil_wk left
[09:17] *** domidumont left
[09:17] *** matt| left
[09:17] *** bjz left
[09:17] *** nebuchadnezzar left
[09:17] *** Cabanossi left
[09:17] *** andrewalker_ left
[09:17] *** jargan left
[09:17] *** Xliff_ left
[09:17] *** TEttinger left
[09:17] *** cognominal left
[09:17] *** Sgeo__ left
[09:17] *** andrzejku_ left
[09:17] *** Timbus_ left
[09:17] *** sjn left
[09:17] *** decent_ left
[09:17] *** mniip left
[09:17] *** raydiak left
[09:17] *** neuraload left
[09:17] *** canopus left
[09:17] *** ccakes left
[09:18] *** Guest18866 left
[09:18] *** Matthew[m] left
[09:18] *** Matias[m] left
[09:18] *** SourceBaby_ left
[09:18] *** huggable_ left
[09:18] *** dalek left
[09:18] *** dylanwh_ left
[09:18] *** amalia_ left
[09:18] *** Celelibi left
[09:18] *** edenc left
[09:18] *** dataangel left
[09:18] *** timeless left
[09:18] *** peteretep left
[09:18] *** stigo left
[09:18] *** ilmari left
[09:18] *** stmuk_ left
[09:18] *** hanekomu left
[09:18] *** silug__ left
[09:18] *** lco left
[09:18] *** kst left
[09:18] *** psch left
[09:18] *** kenh83 left
[09:18] *** jcallen left
[09:18] *** mattp_ left
[09:19] *** KotH left
[09:19] *** ilbot3 left
[09:19] *** cyphase left
[09:19] *** ilmari[m] left
[09:19] *** JimmyZ left
[09:19] *** kent\n left
[09:19] *** BinGOs left
[09:19] *** khisanth_ left
[09:19] *** xfix left
[09:19] *** w4and0er96 left
[09:19] *** awwaiid left
[09:19] *** Spot__ left
[09:19] *** huf_ left
[09:19] *** xiaomiao left
[09:19] *** smash left
[09:19] *** geekosaur left
[09:19] *** akiym left
[09:19] *** nadim left
[09:19] *** brillenfux left
[09:19] *** MARTIMM left
[09:19] *** noganex left
[09:19] *** b2gills left
[09:20] *** geraud left
[09:20] *** cibs left
[09:20] *** perlpilot_ left
[09:20] *** perlpilot_ joined
[09:20] *** geraud joined
[09:20] *** cibs joined
[09:20] *** m0ltar left
[09:20] *** samcv left
[09:20] *** dalek joined
[09:20] *** cpage_ left
[09:20] *** pierrot left
[09:21] *** emdashcomma left
[09:22] *** erdic left
[09:22] *** MilkmanDan left
[09:23] *** MilkmanDan joined
[09:24] *** pierre_ left
[09:33] *** SmokeMachine____ joined
[09:41] *** wamba joined
[10:00] *** pierre joined
[10:02] *** bjz joined
[10:03] *** labster joined
[10:06] *** domidumont joined
[10:06] *** matt| joined
[10:07] *** tomaw joined
[10:07] *** pierrot joined
[10:07] *** cpage_ joined
[10:07] *** darutoko joined
[10:07] *** jercos joined
[10:07] *** jervo joined
[10:09] *** BuildTheRobots joined
[10:09] *** Actualeyes joined
[10:09] *** nadim joined
[10:09] *** brillenfux joined
[10:09] *** MARTIMM joined
[10:09] *** noganex joined
[10:09] *** b2gills joined
[10:09] *** perigrin joined
[10:09] *** protium joined
[10:09] *** BooK joined
[10:09] *** hahainternet joined
[10:09] *** literal joined
[10:09] *** gypsydave5 joined
[10:09] *** chansen_ joined
[10:09] *** ssm_ joined
[10:09] *** jsimonet joined
[10:09] *** domm1 joined
[10:09] *** nemo joined
[10:09] *** tbrowder joined
[10:09] *** zostay joined
[10:09] *** chris2 joined
[10:09] *** ugexe joined
[10:09] *** Peter_R joined
[10:09] *** damnlie_ joined
[10:09] *** mithaldu_ joined
[10:09] *** hoelzro joined
[10:09] *** robinsmidsrod joined
[10:09] *** go|dfish joined
[10:09] *** Hotkeys joined
[10:09] *** Util joined
[10:10] *** TeamBlast joined
[10:12] *** ggherdov joined
[10:12] *** peteretep joined
[10:12] *** olinkl joined
[10:12] *** erdic joined
[10:12] *** ponbiki joined
[10:12] *** KotH joined
[10:12] *** ilbot3 joined
[10:12] *** cyphase joined
[10:12] *** ilmari[m] joined
[10:12] *** JimmyZ joined
[10:12] *** kent\n joined
[10:12] *** BinGOs joined
[10:12] *** khisanth_ joined
[10:12] *** xfix joined
[10:12] *** w4and0er96 joined
[10:12] *** awwaiid joined
[10:12] *** huf_ joined
[10:12] *** xiaomiao joined
[10:12] *** smash joined
[10:12] *** akiym joined
[10:12] *** yossarian joined
[10:12] *** SHODAN joined
[10:12] *** dg joined
[10:12] *** d^_^b joined
[10:12] *** vike joined
[10:12] *** mrsolo joined
[10:12] *** kipd joined
[10:12] *** notbenh joined
[10:12] *** bhm joined
[10:12] *** DarthGandalf joined
[10:12] *** adrusi joined
[10:12] *** roguelazer joined
[10:12] *** esh joined
[10:12] *** jdv79 joined
[10:12] *** ranguard_ joined
[10:13] *** pierre is now known as 64MAAE53O

[10:13] *** hobbs joined
[10:14] *** clkao joined
[10:14] *** notbenh_ joined
[10:14] *** mephinet joined
[10:14] *** p3rln00b joined
[10:14] *** mindos joined
[10:14] *** jnap_ joined
[10:14] *** committable6 joined
[10:14] *** solarbunny joined
[10:14] *** hobbs left
[10:14] *** clkao left
[10:14] *** notbenh_ left
[10:14] *** mephinet left
[10:14] *** p3rln00b left
[10:14] *** mindos left
[10:14] *** jnap_ left
[10:14] *** committable6 left
[10:14] *** solarbunny left
[10:14] *** ggherdov left
[10:14] *** peteretep left
[10:14] *** olinkl left
[10:14] *** erdic left
[10:14] *** ponbiki left
[10:14] *** KotH left
[10:14] *** ilbot3 left
[10:14] *** cyphase left
[10:15] *** ilmari[m] left
[10:15] *** JimmyZ left
[10:15] *** kent\n left
[10:15] *** BinGOs left
[10:15] *** khisanth_ left
[10:15] *** xfix left
[10:15] *** w4and0er96 left
[10:15] *** awwaiid left
[10:15] *** huf_ left
[10:15] *** xiaomiao left
[10:15] *** smash left
[10:15] *** akiym left
[10:15] *** yossarian left
[10:15] *** SHODAN left
[10:15] *** dg left
[10:15] *** d^_^b left
[10:15] *** vike left
[10:15] *** mrsolo left
[10:15] *** kipd left
[10:15] *** notbenh left
[10:15] *** bhm left
[10:15] *** DarthGandalf left
[10:15] *** adrusi left
[10:15] *** roguelazer left
[10:15] *** esh left
[10:15] *** jdv79 left
[10:15] *** ranguard_ left
[10:15] *** TeamBlast left
[10:15] *** BuildTheRobots left
[10:15] *** Actualeyes left
[10:15] *** nadim left
[10:15] *** brillenfux left
[10:15] *** MARTIMM left
[10:15] *** noganex left
[10:15] *** b2gills left
[10:15] *** perigrin left
[10:15] *** protium left
[10:15] *** BooK left
[10:15] *** hahainternet left
[10:15] *** gypsydave5 left
[10:15] *** literal left
[10:15] *** chansen_ left
[10:15] *** ssm_ left
[10:15] *** jsimonet left
[10:15] *** domm1 left
[10:15] *** nemo left
[10:15] *** tbrowder left
[10:15] *** zostay left
[10:15] *** ugexe left
[10:15] *** chris2 left
[10:15] *** Peter_R left
[10:15] *** damnlie_ left
[10:15] *** mithaldu_ left
[10:16] *** hoelzro left
[10:16] *** robinsmidsrod left
[10:16] *** go|dfish left
[10:16] *** Hotkeys left
[10:16] *** Util left
[10:16] *** tomaw left
[10:16] *** cpage_ left
[10:16] *** pierrot left
[10:16] *** darutoko left
[10:16] *** jercos left
[10:16] *** jervo left
[10:16] *** domidumont left
[10:16] *** matt| left
[10:16] <RabidGravy> Boom!

[10:16] <lizmat> .oO( so much for dropping a pin :-)

[10:16] <RabidGravy> why has github no longer got Artist licence as an option in the project templates?

[10:16] <DrForr> lizmat: It was previously residing in a grenade.

[10:16] <lizmat> :-)

[10:16] <DrForr> As we used to say in roleplaying sessions, "Once you pull the pin, Mr. Hand Grenade is no longer your friend."

[10:17] *** ggherdov joined
[10:25] *** zakharyas left
[10:27] *** domidumont joined
[10:27] *** matt| joined
[10:28] *** kipd joined
[10:28] *** Actualeyes joined
[10:28] *** nadim joined
[10:28] *** brillenfux joined
[10:28] *** MARTIMM joined
[10:28] *** noganex joined
[10:28] *** b2gills joined
[10:28] *** perigrin joined
[10:28] *** protium joined
[10:28] *** BooK joined
[10:28] *** hahainternet joined
[10:28] *** literal joined
[10:28] *** gypsydave5 joined
[10:28] *** chansen_ joined
[10:28] *** ssm_ joined
[10:28] *** jsimonet joined
[10:28] *** domm1 joined
[10:28] *** nemo joined
[10:28] *** tbrowder joined
[10:28] *** zostay joined
[10:28] *** chris2 joined
[10:28] *** ugexe joined
[10:28] *** Peter_R joined
[10:28] *** damnlie_ joined
[10:28] *** mithaldu_ joined
[10:28] *** hoelzro joined
[10:28] *** robinsmidsrod joined
[10:28] *** go|dfish joined
[10:28] *** Hotkeys joined
[10:28] *** Util joined
[10:30] *** xiaomiao joined
[10:30] *** hobbs joined
[10:30] *** clkao joined
[10:30] *** notbenh_ joined
[10:30] *** mephinet joined
[10:30] *** p3rln00b joined
[10:30] *** mindos joined
[10:30] *** jnap_ joined
[10:30] *** committable6 joined
[10:30] *** solarbunny joined
[10:31] *** camelia joined
[10:31] *** tomaw joined
[10:31] *** pierrot joined
[10:31] *** cpage_ joined
[10:31] *** darutoko joined
[10:31] *** jercos joined
[10:31] *** jervo joined
[10:32] *** TeamBlast joined
[10:32] *** xiaomiao left
[10:33] *** harmil_wk joined
[10:33] *** bioduds joined
[10:34] *** olinkl joined
[10:34] *** BuildTheRobots joined
[10:34] *** peteretep joined
[10:34] *** erdic joined
[10:34] *** ponbiki joined
[10:34] *** KotH joined
[10:34] *** ilbot3 joined
[10:34] *** cyphase joined
[10:34] *** ilmari[m] joined
[10:34] *** JimmyZ joined
[10:34] *** kent\n joined
[10:34] *** BinGOs joined
[10:34] *** khisanth_ joined
[10:34] *** xfix joined
[10:34] *** w4and0er96 joined
[10:34] *** awwaiid joined
[10:34] *** huf_ joined
[10:34] *** smash joined
[10:34] *** akiym joined
[10:34] *** yossarian joined
[10:34] *** SHODAN joined
[10:34] *** dg joined
[10:34] *** d^_^b joined
[10:34] *** vike joined
[10:34] *** mrsolo joined
[10:34] *** notbenh joined
[10:34] *** bhm joined
[10:34] *** DarthGandalf joined
[10:34] *** adrusi joined
[10:34] *** roguelazer joined
[10:34] *** esh joined
[10:34] *** jdv79 joined
[10:34] *** ranguard joined
[10:35] *** ggherdov left
[10:36] *** m0ltar joined
[10:36] *** nebuchadnezzar joined
[10:36] *** andrewalker_ joined
[10:36] *** jargan joined
[10:36] *** Xliff_ joined
[10:36] *** TEttinger joined
[10:36] *** cognominal joined
[10:36] *** Sgeo__ joined
[10:36] *** andrzejku_ joined
[10:36] *** Timbus_ joined
[10:36] *** sjn joined
[10:36] *** decent_ joined
[10:36] *** F1AAC5YX joined
[10:36] *** raydiak joined
[10:36] *** sammers joined
[10:36] *** ilbelkyr joined
[10:36] *** alnewkir1 joined
[10:36] *** f3ew joined
[10:36] *** sivoais joined
[10:36] *** freeze joined
[10:36] *** ingy joined
[10:36] *** dsp_ joined
[10:36] *** wtw joined
[10:36] *** yoleaux joined
[10:36] *** weber.freenode.net sets mode: +v yoleaux

[10:38] *** user9 joined
[10:38] *** PotatoGim joined
[10:38] *** Spot__ joined
[10:38] *** geekosaur joined
[10:38] *** DrParis joined
[10:38] *** psch joined
[10:38] *** neuraload joined
[10:38] *** canopus joined
[10:38] *** ccakes joined
[10:38] *** Guest18866 joined
[10:38] *** Matthew[m] joined
[10:38] *** Matias[m] joined
[10:38] *** SourceBaby_ joined
[10:38] *** huggable_ joined
[10:38] *** dylanwh_ joined
[10:38] *** amalia_ joined
[10:38] *** Celelibi joined
[10:38] *** edenc joined
[10:38] *** dataangel joined
[10:38] *** timeless joined
[10:38] *** stigo joined
[10:38] *** ilmari joined
[10:38] *** stmuk_ joined
[10:38] *** lco joined
[10:38] *** hanekomu joined
[10:38] *** silug__ joined
[10:38] *** kst joined
[10:38] *** jcallen joined
[10:38] *** mattp_ joined
[10:38] *** gensym joined
[10:38] *** kmwallio joined
[10:38] *** TheDir_ joined
[10:38] *** Kaffe_ joined
[10:38] *** ITAAAY8T joined
[10:38] *** [Coke] joined
[10:38] *** sergot joined
[10:38] *** arnsholt joined
[10:38] *** apejens joined
[10:38] *** ambs joined
[10:38] *** moritz joined
[10:38] *** gabiruh joined
[10:38] *** daxim_ joined
[10:38] *** felher joined
[10:38] *** Upasaka joined
[10:38] *** sjohnsen joined
[10:38] *** integral joined
[10:38] *** weber.freenode.net sets mode: +v 7ITAAAY8T

[10:40] *** m0ltar left
[10:40] *** ilbelkyr left
[10:40] *** BuildTheRobots left
[10:40] *** cyphase left
[10:40] *** m0ltar joined
[10:40] <RabidGravy> THEY'RE TALKING DOWN THE GLOBAL ECONOMY!

[10:40] <RabidGravy> ;-)

[10:41] *** TEttinger left
[10:42] <DrForr> In a netsplit, noone can hear you /say.

[10:42] *** peteretep left
[10:42] *** erdic left
[10:42] *** erdic joined
[10:42] *** timeless left
[10:42] *** pierrot is now known as Guest16699

[10:42] *** ponbiki is now known as Guest11718

[10:42] *** DrParis is now known as Guest48505

[10:42] *** ChanServ sets mode: +v dalek

[10:42] *** labster left
[10:42] *** labster joined
[10:42] *** samcv joined
[10:42] *** cyphase joined
[10:42] *** Guest7479 joined
[10:42] *** Cabanossi joined
[10:42] *** emdashcomma joined
[10:42] *** sivoais left
[10:42] *** Brad_ joined
[10:42] *** SmokeMachine____ left
[10:42] *** SmokeMachine____ joined
[10:42] *** kipd left
[10:42] *** kipd joined
[10:42] *** sivoais joined
[10:42] *** ilbelkyr joined
[10:42] *** Guest16699 left
[10:42] *** Guest16699 joined
[10:42] *** olinkl left
[10:42] *** olinkl joined
[10:42] *** Guest7479 left
[10:42] *** Guest7479 joined
[10:42] *** Brad_ left
[10:42] *** Brad_ joined
[10:42] *** Brad_ left
[10:42] *** peteretep joined
[10:42] *** Actualeyes left
[10:43] *** rindolf joined
[10:44] *** wamba left
[10:45] *** timeless joined
[10:47] *** BuildTheRobots joined
[10:48] *** ggherdov joined
[10:53] *** xiaomiao joined
[11:02] <samcv> hopefully people survived Frexit ;)

[11:05] *** labster left
[11:06] <masak> what, even Freenode has left the EU? :P

[11:08] *** ocbtec joined
[11:15] *** ggherdov left
[11:16] *** ggherdov joined
[11:16] *** ggherdov left
[11:17] *** ggherdov joined
[11:20] *** 64MAAE53O left
[11:35] *** mr-foobar left
[11:37] *** mr-foobar joined
[11:45] *** AlexDaniel joined
[11:56] *** erdic left
[11:56] *** ShimmerFairy joined
[11:57] *** erdic joined
[12:01] *** rudolfochrist joined
[12:13] *** SourceBaby_ left
[12:13] *** SourceBaby joined
[12:13] *** Undercover joined
[12:14] *** huggable_ left
[12:17] *** NeuralAnomaly joined
[12:18] *** huggable joined
[12:18] *** buggable joined
[12:20] *** grondilu joined
[12:20] <grondilu> hello, in the polynomial a0 + a1*x + ... an*x^n, how do you call the coefficient an?

[12:21] <grondilu> oh sorry, wrong chan

[12:21] <moritz> redundant :-)

[12:24] *** g4 joined
[12:25] <p3rln00b> grondilu: leading?

[12:26] *** pierre_ joined
[12:32] <p3rln00b> It's kinda weird that the only way we have to contruct a proper Mix is using a postfix coersion method call.

[12:32] <p3rln00b> m: my $m = (butter => 0.22, sugar => 0.1, flour => 0.275, sugar => 0.02).Mix; dd $m

[12:32] <camelia> rakudo-moar a8221e: OUTPUT«Mix $m = ("flour"=>0.275,"butter"=>0.22,"sugar"=>0.12).Mix␤»

[12:35] <p3rln00b> m: my $m = Mix.new-from-pairs: 'butter' => 0.22, 'sugar' => 0.1, 'sugar' => 0.02; dd $m

[12:35] <camelia> rakudo-moar a8221e: OUTPUT«Mix $m = ("butter"=>0.22,"sugar"=>0.12).Mix␤»

[12:35] <p3rln00b> Never mind :}

[12:38] *** canopus left
[12:38] * masak .oO( how to quickly disprove your own language complaint ) :P

[12:38] *** pmurias joined
[12:39] *** nicq20 joined
[12:40] *** grondilu left
[12:40] <dalek> doc: d7257a0 | (Zoffix Znet)++ | doc/Type/Baggy.pod6:

[12:40] <dalek> doc: Document Baggy.new-from-pairs

[12:40] <dalek> doc: review: https://github.com/perl6/doc/commit/d7257a0d59

[12:43] *** canopus joined
[12:47] <nicq20> \help

[12:47] <nicq20> oops. Wrong slash

[12:51] <p3rln00b> ∖help

[12:51] <p3rln00b> m: say <a b c> ∖ <b x y>

[12:51] <camelia> rakudo-moar a8221e: OUTPUT«set(a, c)␤»

[12:51] <p3rln00b> hehe

[12:52] <p3rln00b> m: say <a b c> \ <b x y>

[12:52] <camelia> rakudo-moar a8221e: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of y///; in Perl 6 please use tr///␤at <tmp>:1␤------> 3say <a b c> \ <b x y7⏏5>␤»

[12:53] <nicq20> p3rln00b: Wait, how does that work?

[12:53] <p3rln00b> nicq20: magic :)

[12:54] <p3rln00b> nicq20: Also, fancy pants Unicode set operators :)

[12:54] <p3rln00b> https://docs.perl6.org/routine/%E2%88%96

[12:55] <nicq20> p3rln00b: Oh! So that only *looks* like a regular backslash.

[12:55] <p3rln00b> yeah.

[12:55] <p3rln00b> m: '∖\'.uninames.say

[12:55] <camelia> rakudo-moar a8221e: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in single quotes; couldn't find final "'" ␤at <tmp>:1␤------> 3'∖\'.uninames.say7⏏5<EOL>␤    expecting any of:␤        single quotes␤        term␤»

[12:55] <p3rln00b> m: '\∖'.uninames.say

[12:55] <camelia> rakudo-moar a8221e: OUTPUT«(REVERSE SOLIDUS SET MINUS)␤»

[12:57] <p3rln00b> m: role Foo { has $!x; }; role Bar does Foo { method foo { $!x } };

[12:57] <camelia> rakudo-moar a8221e: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Attribute $!x not declared in role Bar␤at <tmp>:1␤------> 3role Bar does Foo { method foo { $!x } }7⏏5;␤    expecting any of:␤        horizontal whitespace␤        postfix␤        statement…»

[12:57] <p3rln00b> m: role Foo { has $!x; }; class Bar does Foo { method foo { $!x } };

[12:57] <camelia> rakudo-moar a8221e: ( no output )

[12:58] <p3rln00b> Bug?

[12:58] <p3rln00b> m: role Foo { has $!x; }; role Bar does Foo { method foo { $!x } }; class Meow does Bar {}

[12:58] <camelia> rakudo-moar a8221e: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Attribute $!x not declared in role Bar␤at <tmp>:1␤------> 3role Bar does Foo { method foo { $!x } }7⏏5; class Meow does Bar {}␤    expecting any of:␤        horizontal whitespace␤        post…»

[12:58] <p3rln00b> kinda annoying

[13:00] <p3rln00b> I guess it's some composing thing that's causing this and it ain't a bug :}

[13:04] <jnthn> "It's complicated"

[13:04] <p3rln00b> :D

[13:04] <jnthn> So roles are generic and parametric

[13:05] *** cdg joined
[13:05] <jnthn> And thus a "does Foo" is not in general resolvable until we are actually finally composing into the target class

[13:05] <jnthn> The solution we take for classes is to put of attribute decl checks until after roles are composed

[13:05] <jnthn> So we know what we've got and what, if anything, is missing

[13:06] *** domidumont left
[13:06] <jnthn> *put off

[13:06] <jnthn> That's rather harder for roles themselves though

[13:06] <p3rln00b> I see.

[13:07] *** eliasr joined
[13:07] *** rgrinberg joined
[13:09] <DrForr> Well, there's some activity here now; I'll toss this out to the channel.

[13:09] <DrForr> I got an email last night from brian d foy asking me if I'd like to co-author Learning Perl 6.

[13:10] *** iH2O joined
[13:10] <p3rln00b> Does brian d foy even use Perl 6? Never seen him here

[13:11] <iH2O> he should, using it is adopting it

[13:11] <DrForr> He's getting more interested in it, certainly. Plus you don't have to be on this channel in order to use perl6 :)

[13:11] * p3rln00b still remembers being chasticed by bdfoy over a module name

[13:12] <iH2O> not sure, esp if u a beginner

[13:12] <jnthn> Not everyone does IRC :)

[13:12] <iH2O> they do facebook?

[13:12] <iH2O> reddit?

[13:13] <DrForr> Uh, he wrote "Learning Perl" :) I don't think he needs help with presence :)

[13:13] *** skids joined
[13:15] <iH2O> this room is a must to produce intricate regex expressions

[13:15] <iH2O> on one line

[13:15] <p3rln00b> Well, I guess that was one of my points. Is he writing Learning Perl 6 because he likes the language and knows a lot about it or just because he wrote Learning Perl and knows people will buy Learning Perl 6 just 'cause it got his name on it :)

[13:16] <DrForr> It can't be both?

[13:17] <iH2O> theres a shortage of good up-to-date perl6 book anyway

[13:17] <iH2O> *books

[13:17] <iH2O> im not sure theres any

[13:17] <DrForr> Shortage as in "there are none." (not counting Laurent's work, as it's still being reviewed.)

[13:17] <iH2O> :(

[13:17] <p3rln00b> DrForr: So was there more to bdfoy asked you to write a book? Or is that the entire news item? :)

[13:18] <DrForr> No, asked if I'd like to join him. That's ... pretty much it. Sorry you're underwhelmed.

[13:18] <moritz> and Laurent's book is Learning to think likea programmer, using Perl 6 to teach that

[13:18] <moritz> it's not about teaching Perl 6

[13:18] <moritz> so for an experienced programmer, it's probably a bit long-winded

[13:19] <p3rln00b> DrForr: heh. Well, it's just I already found that out yesterday, so yeah... underwheliming :)

[13:19] <p3rln00b> DrForr: did you tell him you'd love to join him?

[13:19] <DrForr> Yes, I do know I've mentioned it elsewhere.

[13:19] <DrForr> Well, of course. Why wouldn't I?

[13:19] <p3rln00b> :)

[13:20] <moritz> \o/

[13:20] <moritz> the more books, the merrier

[13:20] <iH2O> theres none for now

[13:21] <DrForr> We talked about this in person a few months back when he was in Cluj.

[13:24] <p3rln00b> DrForr: when will the book be finished?

[13:24] <p3rln00b> I recall Damian also promising a book "in a year" when he was in Toronto a few months ago

[13:25] <DrForr> No idea; he's the one working on financing. All I really know is he's interested in doing the book and is setting up a Kickstarter project and looking at funding.

[13:26] <p3rln00b> cool

[13:29] <perlpilot_> DrForr: nice!  Would merlyn be coauthor too or just you and bdf?

[13:30] <DrForr> I don't know whom else he's talked to, but either way I'm happy to share credits.

[13:30] *** perlpilot_ is now known as perlpilot

[13:31] <DrForr> Basically he's wanting to kick around some ideas, so I'm going to take some time this weekend to brainstorm some notions and send them his way.

[13:32] <dalek> doc: 2c0a31b | coke++ | doc/Language/5to6-perlop.pod6:

[13:32] <dalek> doc: fix typo

[13:32] <dalek> doc: review: https://github.com/perl6/doc/commit/2c0a31b588

[13:36] <dalek> doc: 025a6cd | coke++ | doc/Language/5to6-perlop.pod6:

[13:36] <dalek> doc: prefer starting point

[13:36] <dalek> doc: review: https://github.com/perl6/doc/commit/025a6cd496

[13:36] *** zakharyas joined
[13:37] *** cooper_ left
[13:38] *** cooper_ joined
[13:38] *** dalek left
[13:39] *** ocbtec left
[13:40] *** dalek joined
[13:40] *** ChanServ sets mode: +v dalek

[13:43] *** nicq20 left
[13:49] <dalek> doc: c33a4cc | coke++ | doc/ (5 files):

[13:50] <dalek> doc: fix typos

[13:50] <dalek> doc: review: https://github.com/perl6/doc/commit/c33a4cc4ac

[13:52] <dalek> doc: 4a84f3a | coke++ | doc/Type/IO/Notification.pod6:

[13:52] <dalek> doc: fix typo

[13:52] <dalek> doc: review: https://github.com/perl6/doc/commit/4a84f3a354

[13:52] <dalek> doc/spellcheck: d7257a0 | (Zoffix Znet)++ | doc/Type/Baggy.pod6:

[13:52] <dalek> doc/spellcheck: Document Baggy.new-from-pairs

[13:52] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/d7257a0d59

[13:52] <dalek> doc/spellcheck: ff4f4b8 | coke++ | doc/Type/Baggy.pod6:

[13:52] <dalek> doc/spellcheck: Merge branch 'master' into spellcheck

[13:52] *** dalek left
[13:52] *** sufrostico joined
[13:53] *** dalek joined
[13:53] *** ChanServ sets mode: +v dalek

[13:53] <[Coke]> ooh, did I kill dalek? oops

[13:53] *** bjz left
[13:54] <p3rln00b> Murderer!

[13:54] <[Coke]> so, still only able to run 250 of the 290 files, but only 133 of those are failing spelling checks now. (up from all of them.)

[13:54] <[Coke]> er, down

[14:03] *** brillenfux left
[14:06] *** domidumont joined
[14:16] *** zakharyas left
[14:18] *** iH2O left
[14:20] <samcv> hi p3rln00b i am getting Cannot look up attributes in a type object  in method irc-privmsg-channel at ./perlbot.pl6 line 47

[14:21] <samcv> here's a copy of the code http://vpaste.net/ZrXff

[14:21] *** ptolemarch joined
[14:23] *** baest left
[14:23] <p3rln00b> Well, I see one mistake already: https://gist.github.com/zoffixznet/818582205af68dea8900ce0209633d65#file-p6-p6-L15

[14:23] <p3rln00b> You're calling .channels on Proc::Async object. My version last night had channels in a variable

[14:25] <dalek> doc: 50e1f10 | coke++ | doc/Type/Signature.pod6:

[14:25] <dalek> doc: improve readability of diag output in example

[14:25] <dalek> doc: review: https://github.com/perl6/doc/commit/50e1f104a7

[14:25] <dalek> doc: 0bd5849 | coke++ | doc/ (7 files):

[14:25] <dalek> doc: fix typos

[14:25] <dalek> doc: review: https://github.com/perl6/doc/commit/0bd58495a7

[14:25] <samcv> oh crap

[14:25] <samcv> ha

[14:26] <p3rln00b> samcv: as for your error, you need to instantiate the plugin, so change :plugins(said2) to :plugins(said2.new)

[14:26] <dalek> doc/spellcheck: f2752d4 | coke++ | xt/.aspell.pws:

[14:26] <dalek> doc/spellcheck: more words

[14:26] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/f2752d45ce

[14:26] <dalek> doc/spellcheck: 50e1f10 | coke++ | doc/Type/Signature.pod6:

[14:26] <dalek> doc/spellcheck: improve readability of diag output in example

[14:26] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/50e1f104a7

[14:26] <dalek> doc/spellcheck: 0bd5849 | coke++ | doc/ (7 files):

[14:26] <dalek> doc/spellcheck: fix typos

[14:26] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/0bd58495a7

[14:26] <samcv> can i call it on $irc?

[14:26] <dalek> doc/spellcheck: a0c737b | coke++ | doc/ (8 files):

[14:26] <dalek> doc/spellcheck: Merge branch 'master' into spellcheck

[14:26] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/a0c737ba5f

[14:26] <samcv> hm

[14:26] <samcv> ok. how do i dump all methods of an object?

[14:26] <p3rln00b> m: say 42.^methods».name.say

[14:26] <camelia> rakudo-moar 2d5a2c: OUTPUT«(Int Num Rat FatRat abs Bridge chr sqrt base polymod expmod is-prime floor ceiling round lsb msb narrow Range sign sin tan cotan acosech conj atan2 cosec pred asec acotan cosh acos acosec sech unpolar log10 atanh log exp acosh truncate sinh tanh acotanh Re…»

[14:26] <samcv> nice

[14:27] <p3rln00b> samcv: using $.irc ... um... it's a bit more involved, since the client is multi-server. You need to know what server to ask for channels for.

[14:27] * p3rln00b glances at the docs

[14:27] <samcv> yeah

[14:28] *** rudolfochrist left
[14:28] <p3rln00b> samcv: you can just use the variable and tell the client to join channels in that variable and loop over that same variable: https://gist.github.com/zoffixznet/213f910e23e8f6a3bacbf066398f4d20#file-p6-p6-L6

[14:28] *** baest joined
[14:28] <samcv> ah ok i thought about doing that

[14:29] <p3rln00b> samcv: this is a "proper" way to loop over all connected servers and channels: https://github.com/zoffixznet/perl6-IRC-Client/blob/master/examples/07-multi-server-message-forwarder.p6#L7-L15

[14:29] <p3rln00b> There's a blog post for that module FWIW: http://perl6.party/post/IRC-Client-Perl-6-Multi-Server-IRC-Module

[14:30] <samcv> yeah it's a good post

[14:30] <samcv> oh did not see that part

[14:30] <p3rln00b> The guy who wrote it is a genius.

[14:30] <samcv> , we loop over all of the connected channels and use $.irc.send method to send a message to that particular channel and server, unless the server and channel are the same as where the message originated.

[14:30] <p3rln00b> I want him to have my babies :}

[14:31] <samcv> it's a lot better than perl5's BasicBot :P

[14:31] <samcv> i hate that thing

[14:31] <samcv> i mean it's not 'that' bad. but

[14:31] <samcv> it's nowhere as good as IRC::Client

[14:31] <p3rln00b> samcv: ah, right. That's just for the forwarder. For yours, you'd just get rid of this line to send to *all* channels: https://github.com/zoffixznet/perl6-IRC-Client/blob/master/examples/07-multi-server-message-forwarder.p6#L9

[14:32] *** user9 left
[14:34] *** ocbtec joined
[14:34] *** user9 joined
[14:35] *** user9 left
[14:35] *** user9 joined
[14:38] *** domidumont1 joined
[14:38] *** domidumont left
[14:44] <dalek> doc: d5f5ce7 | (Zoffix Znet)++ | doc/Type/Mix.pod6:

[14:44] <dalek> doc: Document Mix.Bag/.BagHash

[14:44] <dalek> doc: review: https://github.com/perl6/doc/commit/d5f5ce7ce8

[14:45] <dalek> doc: c24aeb5 | (Zoffix Znet)++ | doc/Type/MixHash.pod6:

[14:45] <dalek> doc: Document MixHash.Bag/.BagHash

[14:45] <dalek> doc: review: https://github.com/perl6/doc/commit/c24aeb5d27

[14:47] *** iH2O joined
[14:51] *** Actualeyes joined
[14:52] *** sufrostico left
[14:54] *** nicq20 joined
[14:59] *** abraxxa left
[15:00] *** neuraload left
[15:07] *** Derperperd joined
[15:07] *** khw joined
[15:12] *** MARTIMM left
[15:14] <samcv> i want a perl6 book :( i wish there was one

[15:14] <samcv> someday

[15:15] <p3rln00b> Why do people want books so badly? :)

[15:15] <iH2O> the official documentation is deficient

[15:15] <samcv> because i wanna read

[15:15] <p3rln00b> deficient! Bah

[15:15] *** Guest11718 is now known as ponbiki

[15:15] <iH2O> for beginners, or intermediate users its deficient

[15:15] <samcv> documentation is documentation :)

[15:15] <mst> p3rln00b: because you didn't figure out how to script conversion of docs.perl6.org to an ebook instead

[15:15] <samcv> yeah what iH2O 

[15:15] <samcv> if you already know perl6 you can see the docs and say, yes that is true and correctly documented

[15:16] <iH2O> i agree 100%

[15:16] <samcv> otherwise you're like but. what does that mean for me as a programmer :)

[15:16] <p3rln00b> mst: actually we have. gfldex++ made it generate one giant HTML file that can be converted to an ebook :P

[15:16] <mst> p3rln00b: WHY IS THERE NOT A LINK TO THAT ON THE FRONT PAGE

[15:16] <p3rln00b> mst: dunno. I personally found it a bit unmanagable.

[15:16] *** domidumont1 left
[15:17] <p3rln00b> It's like 500 pages long

[15:17] <samcv> link to it anyway :P

[15:17] <samcv> will be good to ctrl + f it

[15:17] <mst> that would've been fine. I read through all the individual pages, one at a time, in pubs

[15:17] <mst> some of them had medicore wifi

[15:17] <samcv> googling perl6 "$!" turns up nothing because google ignores it :) found what it is, for attributes on the perl6 sigil page

[15:17] <mst> so I'd have to stand up, walk to the other side of the room where the signal was better, load the next three pages, then go back to my beer

[15:17] <samcv> but doesn't talk all that much about it

[15:18] <mst> an ebook would have removed this impediment to my alcohol consumption

[15:18] <p3rln00b> I think this is it: 

[15:18] <p3rln00b> https://docs.perl6.org/perl6.xhtml

[15:18] <DrForr> duckduckgo is better about the "special" variables.

[15:18] <samcv> nice 

[15:18] <samcv> sometimes *_* sometimes not

[15:18] <mst> p3rln00b: yeah, I meant an ebook conversion of it

[15:18] <mst> chrome would've lost my place I'm sure

[15:18] <samcv> i will sell you that printed out for 50 dollars

[15:19] <p3rln00b> there's probably html2epub somewhere

[15:19] <samcv> it would look bad tho

[15:19] <p3rln00b> If not, print as HTML and I know calibri can convert to epub from pdf

[15:19] <p3rln00b> *print as PDF

[15:19] <samcv> wew

[15:19] <samcv> duckduckgo $! perl6 and

[15:19] <samcv> https://stockflare.com/stocks/$perl6 get this page

[15:20] <samcv> for stocks of perl6

[15:20] <p3rln00b> Considering duckduckgo has special bells and whistles for Perl 5 and Python docs, I'm sure they would be open to add same feature for Perl 6 :)

[15:20] <mst> p3rln00b: waah. the point I'm making is a conversion on the front page would be nice.

[15:21] <p3rln00b> mst: wasn't it you who were telling tbrowder awhile back that when someone says "would be nice" it means they want someone else to do it? :P

[15:21] *** dataf4l joined
[15:21] <p3rln00b> You got a commit bit, don't you? :)

[15:21] <mst> p3rln00b: I believe I was talking about "should"

[15:21] <p3rln00b> Ah, right. 

[15:22] <mst> I use "would be nice" specifically to avoid that effect

[15:22] *** iH2O left
[15:22] <p3rln00b> samcv: as for the book. I know currently of two that are in production, with a third one that was kinda-sorta "promised" to be done "in a year" a few month ago.

[15:22] <mst> cuz what I'm saying is "I haven't written a patch that, but currently you're being so dismissive of the idea I don't see why I'd bother"

[15:22] <Xliff_> zoffix: Nice blog post on IRC::Client

[15:23] <samcv> p3rln00b, please send me the proof copies :P

[15:23] <mst> also, honestly, also "I'm lazy, riba's insane, and I need to cpan my ::EU stuff more than I need to fix this"

[15:23] *** FROGGS joined
[15:23] <p3rln00b> samcv: as for the docs. You would be in the best position to improve them. Those who know Perl 6 well can fill in the missing pieces and it's hard to know which stuff is missing.

[15:24] <p3rln00b> mst: I didn't mean to be dismissive. 

[15:24] <samcv> i am glad to help howerever i can

[15:24] <p3rln00b> samcv: what's the email address? I can sub you to a mailing list that should be put up soon. For the other book, ask DrForr 

[15:24] <samcv> ok

[15:24] <samcv> sent pm

[15:24] <p3rln00b> got it.

[15:25] <FROGGS> o/

[15:25] *** mohae joined
[15:25] <DrForr> For the other book I don't know much more than bdf right now.

[15:25] <samcv> oh btw p3rln00b the sigil page should have a link to https://docs.perl6.org/language/objects.html#Attributes

[15:25] <samcv> when it talks about the $! sigil

[15:25] <mst> samcv: https://github.com/perl6/doc/issues/

[15:25] <mst> samcv: please throw problems you spot into there

[15:25] <samcv> oo ok. just open an issue?

[15:25] <samcv> ok :)

[15:26] <samcv> that makes me happy

[15:26] <p3rln00b> samcv: better yet, submit a PR

[15:26] <mst> samcv: yeah. I opened them at quite a rate as I was working through the docs and people were happy about that

[15:26] <mst> but I was usually going "I don't know what the right thing is, but I think this is wrong"

[15:29] *** lostinfog joined
[15:31] <samcv> who was usually right?

[15:32] <mst> I'm sorry?

[15:32] <mst> there were quite a few people who figured out the various fixes and tweaks and etc. for those

[15:33] <p3rln00b> Oh crap.

[15:33] * p3rln00b just did a "It's a small fix. Push it to production because testing is a pain"

[15:34] <p3rln00b> And now I broke something :P Lesson: Always test on dev server first

[15:35] *** user9 left
[15:39] <mst> p3rln00b: the only time it's valid not to is if production is already down

[15:40] *** domidumont joined
[15:40] <nicq20> Anyone happen to know where in the Rakudo repo the 'once' block is defined? I was trying to find it using CoreHackers::Sourcery, but was having troubel.

[15:40] <nicq20> *trouble

[15:41] <p3rln00b> nicq20: Grammar/Actions likely

[15:41] <p3rln00b> It's a statement modifier, not a Callable, so sourcery won't find it

[15:41] <[Coke]> src/Perl6/Grammar.nqp

[15:41] <[Coke]> 1659:    token statement_prefix:sym<once>    { <sym><.kok> <blorst> }

[15:42] <samcv> p3rln00b, unit tests :)

[15:42] <p3rln00b> nicq20: here are some places to check out: http://fpaste.scsys.co.uk/535960

[15:43] <p3rln00b> samcv: mabby... it's a JS front end running on uber hackish system though. 

[15:43] <samcv> i make sure i don't break things with my bot by having a ton of unit tests, at least with the script that processes all the text to channel

[15:43] <nicq20> p3rln00b: Thank you! This seems to be it: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Actions.nqp#L2034

[15:43] <samcv> before i push it to the server

[15:44] <samcv> atm it opens the script every time somebody says something, but i have a version that reads stdin and responds to it. eventually hope to replace it with

[15:45] <[Coke]> *tap tap* is this thing on ?

[15:46] <p3rln00b> Afirmative.

[15:46] <samcv> oh p3rln00b http://vpaste.net/QMJSj i am geting Variable $!proc used where no 'self' is available line 25

[15:47] <p3rln00b> samcv: I already told you the answer for it.

[15:47] <samcv> oh

[15:47] <samcv> my bad

[15:47] <samcv> let me scroll up

[15:47] <samcv> $!proc

[15:48] <p3rln00b> samcv: 14:26 p3rln00b samcv: as for your error, you need to instantiate the plugin, so change :plugins(said2) to :plugins(said2.new)

[15:48] <p3rln00b> You haven't done that, so that's why you may be experiencing the error.

[15:48] <samcv> oh i did that

[15:48] <samcv> it gives the error

[15:48] <samcv> sorry i tried switching it back :P and that was in the version i copied

[15:49] <samcv> here is it repasted http://vpaste.net/uLn4n

[15:49] <p3rln00b> samcv: and dunno why you're dumping methods like that. They're all documented: https://github.com/zoffixznet/perl6-IRC-Client/blob/master/docs/03-method-reference.md#client-object-ircclient

[15:49] <samcv> well it didn't work anyway :)

[15:50] <samcv> was more for my education to see what it'd spit out

[15:50] *** rgrinberg left
[15:50] <p3rln00b> I see nothing but a brace on line 25... What's the real error message?

[15:51] <samcv> Variable $!proc used where no 'self' is available did i miss a brace?

[15:52] <p3rln00b> What's the full error message

[15:52] <samcv> that is the full one. but i have an extra brace you are right

[15:52] *** dataf4l left
[15:52] <p3rln00b> That can't be the full one

[15:52] <p3rln00b> m: $!proc

[15:52] <camelia> rakudo-moar bf7945: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Variable $!proc used where no 'self' is available␤at <tmp>:1␤------> 3$!proc7⏏5<EOL>␤»

[15:53] <samcv> ==SORRY!=== Error while compiling /home/samantha/proj/perlbot/./perlbot.pl6 Variable $!proc used where no 'self' is available at /home/samantha/proj/perlbot/./perlbot.pl6:25------>             $!proc⏏ = $_;

[15:53] *** dataf4l joined
[15:53] <samcv> that is the full message

[15:54] <p3rln00b> That paste looks really messed up. Are you using tabs for indentation? :)

[15:54] <moritz> seems like you use $!proc outside of a method

[15:54] <p3rln00b> One too many braces.

[15:54] <samcv> ok i fixed the problem by fixing the braces. yes i am

[15:54] <samcv> there were two actually

[15:55] <moritz> which happens if you close too many parenthesis before using it, for example

[15:55] <samcv> no my braces were just all messed up in reality p3rln00b 

[15:55] <p3rln00b> Ah yeah

[15:55] <moritz> fix that first

[15:55] <moritz> no wonder you're losing overview

[15:55] <p3rln00b> samcv: really? Weird. When I paste from that pastebin to Atom, it shows all the braces aligned just fine.

[15:55] <p3rln00b> Well, other than the two extra ones :)

[15:55] <samcv> well they are aligned 'fine'

[15:55] <samcv> but not correctly

[15:55] <samcv> so maybe it did mess it up

[15:56] <samcv> yeah i copied in stuff without tabs in it

[15:56] <geekosaur> atom likely treatng hard tabs as 4 spaces, pastebin as the usual-for-unixes 8

[15:56] <samcv> yeah that messes things up

[15:56] <samcv> well the browser does that geekosaur 

[15:56] <samcv> it just has the literal tab character on the page

[15:56] <moritz> method irc-connected ends before the "await .start" line

[15:56] <moritz> which is likely not what you want

[15:56] *** pierre_ left
[15:56] <moritz> so, too many closing curlies

[15:57] <samcv> usually it converts them when i paste things it but i guess it didn't work this time. yeah moritz it was not good

[15:57] <geekosaur> yes. technically it's the browser rendering. you still won't find anything to tell every browser everywhere to render them as 4 spaces; they always use 8

[15:57] <samcv> yeah

[15:57] <geekosaur> (and if there were one it'd be different for every freaking browser /o\ )

[16:00] *** AlexDaniel left
[16:01] <p3rln00b> Clearly the correct answer is to use spaces for indent :P

[16:02] <samcv> in python 3 i hear you can't even use tabs for indent

[16:03] <samcv> idk i use tabs for indenting code blocks and spaces for aligning things to the current block

[16:03] <samcv> say what you will!

[16:03] <samcv> maybe i'm totally insane :)

[16:04] <mst> samcv: tabs for indentation and spaces for aligment is actually the objectively superior system in theorty

[16:04] <samcv> yeah

[16:04] <mst> however, in practice it seems to involve dipping your genitals into a bag of rusty razor blades

[16:05] <samcv> hahah

[16:05] *** dataf4l left
[16:07] <pmurias> having tools to take care of indenting code seems more important then the exact details of the way used

[16:09] *** g4 left
[16:09] <mst> my main reason for using spaces is that I hate every re-indenter I've ever worked with

[16:10] <mst> so I'd rather do everything the hard way, because at least then it does what I expect

[16:11] *** dataf4l joined
[16:19] *** rgrinberg joined
[16:24] *** wamba joined
[16:26] <jonadab> Tabs for indentation work in word processing, when you want to indent by some number of inches while using a proportional font.  Though even there, setting paragraph indent is usually better.

[16:27] <jonadab> Tabs in source code are evil and must be destroyed.

[16:27] <p3rln00b> :D

[16:32] <mspo> mm tabs

[16:32] *** mxco86 joined
[16:32] <mspo> I think .eu prefers tabs but .us tends to prefer spaces

[16:33] <mspo> .uk indents in something called "whitz" ;)

[16:36] <jonadab> Tabs don't work for indenting source because A) nobody can agree how wide they are and B) no matter what width you say they are, it's wrong for a lot of use cases and C) the correct level of indentation relative to the line above will not always be a multiple of any number higher than 1 in the first place.

[16:37] <p3rln00b> fight fight!

[16:37] <jonadab> You can make it work for stuff like indenting the body of a loop, but it falls over very badly when you have things like conditions wrapping onto more than one line.

[16:41] *** dakkar left
[16:41] <p3rln00b> Well, for all of those points there's an equal number of counterpoints :)

[16:41] <p3rln00b> The Tabs vs. Spaces is the biggest bikeshed of the galaxy.

[16:43] *** dataf4l left
[16:45] <timotimo> um, indent with tabs, align with spaces. problem solved.

[16:46] <[Coke]> timotimo: um, indent with spaces, align with spaces. problem solved.

[16:46] <[Coke]> m: "\t" and die;

[16:46] <camelia> rakudo-moar bf7945: OUTPUT«Died␤  in block <unit> at <tmp> line 1␤␤»

[16:47] *** rmusial left
[16:48] *** Gothmog_ joined
[16:48] *** rmusial joined
[16:50] *** wamba left
[16:50] *** dataf4l joined
[16:51] <p3rln00b> ident with by pressing tab that your editor converts to spaces, align with spaces, problem solved.

[16:51] *** dataf4l left
[16:53] <timotimo> perfect

[16:53] <timotimo> well, if the tabs would remain in the source file, you'd have a proper encoding of your intent in the file

[16:54] <geekosaur> but that's exactly the problem. tabs are not semantic markup

[16:54] <p3rln00b> My intent is to indent, not to insert tabs

[16:54] <geekosaur> people want them to be, but they aren't

[16:54] *** nicq20 left
[16:55] *** dataf4l joined
[16:55] <geekosaur> nor can you somehow combine them with spaces so you get both the semantic markup and the physical representation that compilers and editors insist on using

[16:58] *** ribasushi joined
[17:04] *** iH2O joined
[17:05] <mspo> use  

[17:08] <mspo> m: say uniname(" ")

[17:08] <camelia> rakudo-moar bf7945: OUTPUT«HAIR SPACE␤»

[17:08] <p3rln00b> m: say "42"

[17:08] <camelia> rakudo-moar bf7945: OUTPUT«42␤»

[17:08] <p3rln00b> :o

[17:08] <p3rln00b> m: say uniname(" ")

[17:08] <camelia> rakudo-moar bf7945: OUTPUT«HAIR SPACE␤»

[17:08] <p3rln00b> wow. It actually works as a delimiter :)

[17:09] <mspo> m: say Ⅳ + ⅷ

[17:09] <camelia> rakudo-moar bf7945: OUTPUT«12␤»

[17:09] <p3rln00b> That doesn't impress me anymore :)

[17:10] <p3rln00b> m: "say\x[180E]42".EVAL

[17:10] <camelia> rakudo-moar bf7945: OUTPUT«5===SORRY!5===␤Argument to "say" seems to be malformed␤at /home/camelia/EVAL_0:1␤------> 3say7⏏5᠎42␤Bogus postfix␤at /home/camelia/EVAL_0:1␤------> 3say7⏏5᠎42␤    expecting any of:␤        infix␤        infix stopper…»

[17:10] <p3rln00b> m: "say\x[2008]42".EVAL

[17:10] <camelia> rakudo-moar bf7945: OUTPUT«42␤»

[17:11] *** firstdayonthejob joined
[17:11] <p3rln00b> m: dd "\x[180E]\x[2008]".comb».uniprop

[17:11] <camelia> rakudo-moar bf7945: OUTPUT«("Cf", "Zs")␤»

[17:12] <p3rln00b> m: (^0xFFFFF).grep(*.uniprop eq 'Zs').say

[17:12] <p3rln00b> m: (^0xFFFFF).grep(*.uniprop eq 'Zs')»base(16).say

[17:12] <p3rln00b> m: (^0xFFFFF).grep(*.uniprop eq 'Zs')».base(16).say

[17:12] <p3rln00b> Work, robot!

[17:13] * p3rln00b cracks the eWhip

[17:13] <camelia> rakudo-moar bf7945: OUTPUT«(32 160 5760 8192 8193 8194 8195 8196 8197 8198 8199 8200 8201 8202 8239 8287 12288)␤»

[17:13] <camelia> rakudo-moar bf7945: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Missing dot on method call␤at <tmp>:1␤------> 3(^0xFFFFF).grep(*.uniprop eq 'Zs')»7⏏5base(16).say␤    expecting any of:␤        postfix␤»

[17:13] <camelia> rakudo-moar bf7945: OUTPUT«(20 A0 1680 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 200A 202F 205F 3000)␤»

[17:15] <p3rln00b> m: say join " ", <this is hilarious because it works>

[17:15] <camelia> rakudo-moar bf7945: OUTPUT«this is hilarious because it works␤»

[17:17] <p3rln00b> say 'Perl' , 6 , 'Rocks' , 'Your'   , 'Socks';

[17:17] <p3rln00b> m: say 'Perl' , 6 , 'Rocks' , 'Your'   , 'Socks';

[17:17] <camelia> rakudo-moar bf7945: OUTPUT«Perl6RocksYourSocks␤»

[17:17] <p3rln00b> say 'Perl' , 6 , 'Rocks' , 'Your'   , 'Socks'    .List;

[17:17] <p3rln00b> m: say 'Perl' , 6 , 'Rocks' , 'Your'   , 'Socks'    .List;

[17:17] <camelia> rakudo-moar bf7945: OUTPUT«Perl6RocksYour(Socks)␤»

[17:18] *** rgrinberg left
[17:18] <p3rln00b> m: say     ('Perl' , 6 , 'Rocks' , 'Your'   , 'Socks')       .List;

[17:18] <camelia> rakudo-moar bf7945: OUTPUT«(Perl 6 Rocks Your Socks)␤»

[17:18] <p3rln00b> That's it. I found my perfect indentation character :D

[17:19] <lucs> In Perl 6's relatively recent past, did ｢$x = @foo｣ work like Perl 5's? (that is, because of scalar context, assign the number of elements of @foo to $x)

[17:19] *** _slade_ joined
[17:20] <p3rln00b> commitable: 2015.07 my @foo = <a b c>; my $x = @foo; dd $x

[17:20] <committable6> p3rln00b, ¦«2015.07»: $x = ["a", "b", "c"]

[17:20] <p3rln00b> commitable: 2014.05 my @foo = <a b c>; my $x = @foo; dd $x

[17:20] <committable6> p3rln00b, ¦«2014.05»: ===SORRY!=== Error while compiling /tmp/pCKVOTFDn6␤Undeclared routine:␤    dd used at line 1␤ «exit code = 1»

[17:20] <timotimo> lucs: never

[17:20] <p3rln00b> commitable: 2014.05 my @foo = <a b c>; my $x = @foo; say $x

[17:20] <committable6> p3rln00b, ¦«2014.05»: a b c

[17:21] *** dataf4l left
[17:22] <timotimo> lucs: at least not at any point in the last 3 or 4 years

[17:22] <lucs> timotimo: Weird. https://github.com/colomon/perl6-Testing/blob/master/lib/Testing.pm, line 73, expects this Perl5ish behaviour (and of course breaks).

[17:22] <geekosaur> pugs: my @foo = <a b c>; my $x = @foo; say $x

[17:22] <camelia> pugs: OUTPUT«sh: /home/camelia/.cabal/bin/pugs: No such file or directory␤»

[17:22] <geekosaur> bah

[17:23] *** dataf4l joined
[17:23] <timotimo> lucs: it could expect the splice method to convert its second argument to Int

[17:23] <timotimo> though i think the actual problem with this is that classes don't actually close over lexicals

[17:23] <timotimo> if i'm not mistaken?

[17:23] <p3rln00b> They do

[17:24] <timotimo> OK

[17:24] <lucs> Well, splice complains, and the code's intention seems to be to assign the number of elements.

[17:24] <timotimo> m: my @test = 1, 2, 3; say @test.splice(0, "123")

[17:24] <camelia> rakudo-moar bf7945: OUTPUT«Cannot resolve caller splice(Array: Int, Str); none of these signatures match:␤    (Array:D \SELF: *%_)␤    (Array:D $: Whatever, *%_)␤    (Array:D $: Callable:D $offset, *%_)␤    (Array:D $: Int:D $offset, *%_)␤    (Array:D $: Whatever, Whatever…»

[17:24] <p3rln00b> Buggable does it: https://github.com/zoffixznet/perl6-buggable/blob/master/lib/Buggable/Plugin/TravisWatcher.pm6#L24

[17:24] <timotimo> bisectable: my @test = 1, 2, 3; say @test.splice(0, "123")

[17:24] <bisectable6> timotimo, Bisecting by exit code (old=2015.12 new=bf7945e). Old exit code: 0

[17:24] <geekosaur> considered using ... that

[17:24] <timotimo> :)

[17:24] <geekosaur> possibly splice's signature changed

[17:24] <timotimo> that's my thought

[17:24] <geekosaur> and some kind of autocoerce was happening

[17:25] <timotimo> yeah, like Int() in the signature instead of Int

[17:25] <p3rln00b> Current candidates can only be Int:D|Whatever|Callable

[17:25] <bisectable6> timotimo, bisect log: https://gist.github.com/3b7a683d584da7966272e32ea0a15007

[17:25] <bisectable6> timotimo, (2016-10-01) https://github.com/rakudo/rakudo/commit/28bf87439e4c836e3a72af672baa7e61fd0eac14

[17:25] <lucs> Still, I wonder why Testing's code doesn't just say what it means :(

[17:26] <lucs> ... $limit = @lines.elems

[17:26] <geekosaur> quick port from p5 that happened to work because of an inaccurate signature?

[17:26] <geekosaur> oh

[17:26] <p3rln00b> lucs: the $limit = * works too and shortrter

[17:27] *** dataf4l left
[17:31] <p3rln00b> m: 55296.uniname.say

[17:31] <camelia> rakudo-moar bf7945: OUTPUT«<Non Private Use High Surrogate>␤»

[17:31] <p3rln00b> m: 55296.chr.say

[17:31] <camelia> rakudo-moar bf7945: OUTPUT«Error encoding UTF-8 string: could not encode codepoint 55296␤  in block <unit> at <tmp> line 1␤␤»

[17:35] *** dogbert17 joined
[17:38] *** rgrinberg joined
[17:40] *** domidumont1 joined
[17:40] *** domidumont left
[17:40] *** Guest16699 is now known as pierrot

[17:41] *** pierrot left
[17:41] *** pierrot joined
[17:41] *** pierrot left
[17:41] *** pierrot joined
[17:54] <timotimo> yeah, can't encode a high surrogate with out a low surrogate ... or something?

[17:55] <p3rln00b> ah

[17:57] * timotimo not sure how surrogates work exactly

[18:07] *** iH2O left
[18:14] <TimToady> .oO(poorly)

[18:16] * p3rln00b hopes TimToady will know the answer to the AT-KEY mystery.

[18:16] <p3rln00b> As in, why SELF.defined is significant here: https://github.com/rakudo/rakudo/blob/bf7945e/src/core/Any.pm#L364

[18:17] <p3rln00b> If I remove it, autovivification tests start to fail.

[18:17] <p3rln00b> *even if I move it to be called on a previous line* they start to fail :S

[18:18] *** cygx joined
[18:18] <cygx> o/

[18:18] <timotimo> p3rln00b: the whence is executed when you assign to the thing

[18:18] <p3rln00b> Oh damn

[18:18] <p3rln00b> Mystery solved

[18:18] <p3rln00b> That's a good half hour wasted :D

[18:18] <timotimo> i wish i had looked at the code earlier :(

[18:19] <p3rln00b> I guess I should read the code around the thing I'm changing ^_^

[18:20] <timotimo> could help sometime

[18:20] <timotimo> sometimes*

[18:23] <cygx> timotimo: re surrogates, the Unicode codepoint range is 0x0..0xD7FF u 0xE000..0x10FFFF

[18:23] <cygx> the whole in the middle is reserved for UTF-16 surrogates

[18:23] <timotimo> m: say 0xe000 - 0xd7ff

[18:23] <camelia> rakudo-moar bf7945: OUTPUT«2049␤»

[18:23] <cygx> however, UTF-8 can encode 0x0..0x1FFFFF without problem (and even more than that if you do not restrict yourself to 4 bytes)

[18:24] <cygx> but encoded surrogates in UTF-8 are techinically Forbidden

[18:24] <cygx> *hole

[18:24] *** cyphase left
[18:25] *** Actualeyes left
[18:26] <jonadab> You have to assume broken software is going at some point to send your software invalid data.

[18:26] <jonadab> You want to be able to detect that situation, but you don't want it to cause explosions.

[18:26] <timotimo> right

[18:27] <p3rln00b> m: 55296.chr.say; CATCH { default { .^name.say } }; "No explosion".say

[18:27] <camelia> rakudo-moar bf7945: OUTPUT«X::AdHoc␤»

[18:27] <timotimo> we have upcoming changes to how stuff reacts to encoding issues

[18:27] <p3rln00b> m: {55296.chr.say; CATCH { default { .^name.say } }}; "No explosion".say

[18:27] <camelia> rakudo-moar bf7945: OUTPUT«X::AdHoc␤No explosion␤»

[18:28] *** cdg left
[18:29] *** cyphase joined
[18:32] *** adu joined
[18:33] *** canopus left
[18:35] <harmil_wk> Using the parameter-type-conversion syntax (A(B) $c) with MAIN seems to not work. Is this how I should have expected it to work? https://gist.github.com/ajs/80ceb7fe672cfe2fd35ecf40ecf93e69

[18:36] *** nowan_ joined
[18:36] <p3rln00b> harmil_wk: what does "not work" mean?

[18:36] *** canopus joined
[18:36] <geekosaur> I think that's known and expected because anything handed to MAIN is intrinsically string-y

[18:37] <timotimo> right, you get IntStr and such there

[18:37] <harmil_wk> p3rln00b: It fails to convert from Str, and just gives usage

[18:37] *** cyphase left
[18:38] <timotimo> those will already match Int and Str

[18:38] <timotimo> well, did you give Str a .Filename method?

[18:39] *** nowan left
[18:39] <harmil_wk> geekosaur: But Foo(Str) :$foo should take a Str and ugprade it shouldn't it?

[18:39] <geekosaur> as timotimo said, only if there is a coercer already

[18:39] <p3rln00b> m: class Filename {}; sub (Filename() :$foo) {dd $foo}()

[18:39] <camelia> rakudo-moar bf7945: OUTPUT«No such method 'Filename' for invocant of type 'Any'␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:39] <geekosaur> you can't tell it "coerce these" unless it knows how to coerce, which means a .Filename method in Str

[18:39] <p3rln00b> harmil_wk: ^ that's your problem. I guess sub MAIN just doesn't actually throw that error and instead prints usage

[18:40] <geekosaur> yes, I think it catches exceptions and prints usage instead

[18:40] <timotimo> yeah

[18:40] <geekosaur> not MAIN itself but the harness that invokes it

[18:40] <harmil_wk> alal:

[18:40] <harmil_wk> m: sub f(IO(Str) $file) { say $file.basename }; f("/tmp")

[18:40] <camelia> rakudo-moar bf7945: OUTPUT«tmp␤»

[18:40] <p3rln00b> harmil_wk: that's because Str has IO method

[18:40] <p3rln00b> s: "/tmp", 'IO'

[18:40] <SourceBaby> p3rln00b, Sauce is at https://github.com/rakudo/rakudo/blob/bf7945e/src/core/Cool.pm#L221

[18:40] <harmil_wk> Is it? That's not what that syntax is supposed to be

[18:41] <geekosaur> [13 18:39:45] <geekosaur> you can't tell it "coerce these" unless it knows how to coerce, which means a .Filename method in Str

[18:41] <p3rln00b> harmil_wk: syntax for what?

[18:42] <harmil_wk> Hold up... I'm confused. So, if I want to have a type that can be coerced to from Str, I have to monkey-patch Str to know about it? Isn't that backwards?

[18:43] <timotimo> it's sub-optimal, but all solutions to this particular problem are

[18:43] <geekosaur> what timotimo just said

[18:43] <p3rln00b> harmil_wk: but how else would a type know how to coerce to your custom type?

[18:43] <timotimo> subs are lexical, for example, so the knowledge of how to coerce would be limited to where you're calling from

[18:44] * timotimo AFK

[18:44] <harmil_wk> p3rln00b: I don't think that's what anyone should want. What we should want is to have my custom type know how to coerce FROM a given type. That's what I assumed the A(B) $c signature syntax was doing...

[18:45] <harmil_wk> If my custom type can be coerced to from Int, Str, Complex and IO, I don't think that it makes sense to go modifying all of those, does it?

[18:45] *** rindolf left
[18:45] *** wamba joined
[18:46] <p3rln00b> harmil_wk: Feels dirty. You're not coercing anthing "from". You're proposing a mechanism that would set attributes or create a new object when a particular routine is called.

[18:47] <harmil_wk> Well, coercing is, of course, creating a new object. It's not polymorphism.

[18:47] <p3rln00b> Which I'm pretty can be done with a subset anyway

[18:47] <harmil_wk> how?

[18:47] <lucs> Looking at some old code that has ｢sub foo(:d(:$default) as Str = "", …)｣, which complains of ｢Malformed parameter at ⋯ ------> :d(:$default)⏏ as Str = ""｣ when compiled today.

[18:47] <dalek> doc: 6bfa9b4 | coke++ | doc/ (9 files):

[18:47] <dalek> doc: fix typos, grammar, and prefer writable

[18:47] <dalek> doc: review: https://github.com/perl6/doc/commit/6bfa9b4f0b

[18:47] <lucs> How should that be written now?

[18:48] <dalek> doc/spellcheck: d5f5ce7 | (Zoffix Znet)++ | doc/Type/Mix.pod6:

[18:48] <dalek> doc/spellcheck: Document Mix.Bag/.BagHash

[18:48] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/d5f5ce7ce8

[18:48] <dalek> doc/spellcheck: c24aeb5 | (Zoffix Znet)++ | doc/Type/MixHash.pod6:

[18:48] <dalek> doc/spellcheck: Document MixHash.Bag/.BagHash

[18:48] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/c24aeb5d27

[18:48] <dalek> doc/spellcheck: 3acd7bc | coke++ | doc/Type/Mix (2 files):

[18:48] <dalek> doc/spellcheck: Merge branch 'master' into spellcheck

[18:48] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/3acd7bcf8f

[18:48] <dalek> doc/spellcheck: 9b5ad6b | coke++ | xt/.aspell.pws:

[18:48] <dalek> doc/spellcheck: more words

[18:48] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/9b5ad6bbf6

[18:48] <dalek> doc/spellcheck: 6bfa9b4 | coke++ | doc/ (9 files):

[18:48] <dalek> doc/spellcheck: fix typos, grammar, and prefer writable

[18:48] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/6bfa9b4f0b

[18:48] <dalek> doc/spellcheck: 74eb7bf | coke++ | doc/ (9 files):

[18:48] <dalek> doc/spellcheck: Merge branch 'master' into spellcheck

[18:48] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/74eb7bfd35

[18:48] <p3rln00b> lucs: maybe foo(Str :d(:$default) = "")

[18:48] <lucs> p3rln00b: I'll try that, thanks.

[18:48] <p3rln00b> No idea what as Str is

[18:49] <mspo> m: say Str.what

[18:49] <camelia> rakudo-moar bf7945: OUTPUT«No such method 'what' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[18:49] <mspo> oh well

[18:49] <geekosaur> m: say Str.WHAT

[18:49] <camelia> rakudo-moar bf7945: OUTPUT«(Str)␤»

[18:52] <p3rln00b> harmil_wk: or maybe not. If there is, you'd need an is rw anyway, so it won't work with MAIN anyway

[18:52] *** rindolf joined
[18:53] <timotimo> "as Str" is an arcane coercion syntax

[18:53] <perlpilot> timotimo++ you beat me by mere seconds

[18:53] <timotimo> so what you really wanted there was Str() :d($default) = "")  (and i tthink you have to drop the : before $default)

[18:53] <p3rln00b> m: class Foo { has $.x }; sub foo ($x is rw where { $x = Foo.new: :$x } ) { dd $x }($ = 42)

[18:53] <camelia> rakudo-moar bf7945: OUTPUT«Foo $ = Foo.new(x => 42)␤»

[18:53] <p3rln00b> harmil_wk: ^ (but as I've said, requires is rw

[18:53] <p3rln00b> )

[18:53] <harmil_wk> why not is copy?

[18:54] <lucs> Just removing the ｢as Str｣ appears to have fixed it.

[18:54] <p3rln00b> harmil_wk: ah, right, is copy works too

[18:57] *** bstamour joined
[18:59] *** cyphase joined
[19:01] <harmil_wk> So, using the "is copy where" syntax works, but has a drawback. It doesn't allow me to use the typename in MAIN's automatic USAGE generation (so I get "--foo=<Any>" in the usage)

[19:01] <harmil_wk> Here's the two ways that work: https://gist.github.com/ajs/079f1f9c7d0cf51e6c8cd9ed745beb30

[19:01] *** adu left
[19:04] <p3rln00b> m: BEGIN @*ARGS = '--foo=42'; class Filename { has $.v; method FromStr ($v) { self.new: :$v } }; multi MAIN (Str :$foo) { samewith :foo(Filename.FromStr: $foo) }; multi MAIN (Filename :$foo) { dd "Got $foo.v()" }

[19:04] <camelia> rakudo-moar bf7945: OUTPUT«"Got 42"␤»

[19:04] <p3rln00b> m: BEGIN @*ARGS = '--fdsdssoo=42'; class Filename { has $.v; method FromStr ($v) { self.new: :$v } }; multi MAIN (Str :$foo) { samewith :foo(Filename.FromStr: $foo) }; multi MAIN (Filename :$foo) { dd "Got $foo.v()" }

[19:04] <camelia> rakudo-moar bf7945: OUTPUT«Usage:␤  <tmp> [--foo=<Str>] ␤  <tmp> [--foo=<Filename>] ␤»

[19:05] *** domidumont1 left
[19:06] <harmil_wk> p3rln00b: That's ... interesting

[19:06] <harmil_wk> Looks like it iterates over the instances of MAIN?

[19:07] <p3rln00b> m: https://gist.github.com/zoffixznet/3605a2f8e953dfe6cc37da8768276071

[19:07] <camelia> rakudo-moar bf7945: OUTPUT«Usage:␤  <tmp> [--foo=<Filename>] ␤  ␤    --foo=<Filename>    A filename argument.␤»

[19:07] <p3rln00b> harmil_wk: ^

[19:07] <p3rln00b> harmil_wk: it's just using multi dispatch. The usage is LTA though, as it lists both multies

[19:08] <p3rln00b> Oh wait. The last example probably doesn't work

[19:08] <p3rln00b> Weird

[19:09] <p3rln00b> I wonder why

[19:09] *** cyphase left
[19:09] <p3rln00b> m: class Filename is Str {}; sub foo (Filename $x) { dd $x }("foo")

[19:09] <camelia> rakudo-moar bf7945: OUTPUT«Type check failed in binding to $x; expected Filename but got Str ("foo")␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[19:09] <p3rln00b> but... Filename is Str :|

[19:10] <p3rln00b> Oh. I got it the wrong way around. A Str will take a Filename, but not the other way

[19:10] <harmil_wk> p3rln00b: thanks

[19:11] <harmil_wk> Oh, so not so much.... anyway, have other $work to focus on, was just curious since this is a fairly standard usage pattern in Python's argparse, and I've gotten used to it.

[19:12] <p3rln00b> Well, Perl 6 is very maleable. There's probably a way to do your CoerceFrom thing with a user-space module

[19:12] <p3rln00b> m: BEGIN @*ARGS = '--fdsdssoo=42'; sub MAIN (IO(Str) :$foo) { dd $foo }

[19:12] <camelia> rakudo-moar bf7945: OUTPUT«Use of uninitialized value of type Str in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in sub MAIN at <tmp> line 1␤Must specify something as a path: did you mean '.' for the current dire…»

[19:13] <p3rln00b> intrestring

[19:13] <p3rln00b> m: BEGIN @*ARGS = '--foo=42'; sub MAIN (IO(Str) :$foo) { dd $foo }

[19:13] <camelia> rakudo-moar bf7945: OUTPUT«IntStr.new(42, "42").IO(:SPEC(IO::Spec::Unix),:CWD("/home/camelia"))␤»

[19:13] <p3rln00b> m: Str.IO

[19:13] <camelia> rakudo-moar bf7945: OUTPUT«Use of uninitialized value of type Str in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤Must specify something as a path: did you mean '.' for the current …»

[19:13] <p3rln00b> I see

[19:14] *** cyphase joined
[19:14] <lucs> How does this syntax work?:  some_sub ｢arg1｣, …, -> Str $i { ｢code block｣ };

[19:15] <p3rln00b> lucs: … is a sequence operator and you give it some args and you call some_sub on the generated sequence

[19:15] <p3rln00b> erm, except for that extra comma. But it might be a relic from the past (today it warns I think)

[19:16] <lucs> Oh, that … should have been ｢…｣, it was just a placeholder for other args.

[19:16] <lucs> So maybe instead:

[19:16] *** darutoko left
[19:16] <p3rln00b> lucs: heh, so what's the actual code instead of something you invented? You *are* asking to interpret what the syntax means

[19:17] <lucs> How does this syntax work?:  some_sub ｢arg1｣, ｢arg2｣, ｢arg3｣ -> Str $i { ｢code block｣ };

[19:17] <p3rln00b> -> Str $i {...} is just a code block that takes one Str argument

[19:17] <p3rln00b> hmm

[19:17] <p3rln00b> With a for loop, that'd feed the args to the block. Not sure what arbitrary sub does

[19:18] <geekosaur> by itself it's just another way to write an anonymous sub

[19:18] <FROGGS> m: sub foo { say @_».map(*.^name) }; foo 1, 2, 3, -> { }

[19:18] <camelia> rakudo-moar bf7945: OUTPUT«((Int) (Int) (Int) (Block))␤»

[19:18] <lucs> Oh, wait, I missed a comma:

[19:18] <p3rln00b> FROGGS: but there's no comma

[19:18] <lucs> How does this syntax work?:  some_sub ｢arg1｣, ｢arg2｣, ｢arg3｣, -> Str $i { ｢code block｣ };

[19:18] <p3rln00b> *sigh*

[19:18] <p3rln00b> lucs: like I explained earlier then. You call the sub with 4 args, last one of which is a code block

[19:18] <FROGGS> lucs: so you pass a callback to that sub

[19:18] <lucs> Ah, I see.

[19:18] <lucs> Thanks.

[19:19] <geekosaur> m: (-> Str $i { $i.say })("hi")

[19:19] <camelia> rakudo-moar bf7945: OUTPUT«hi␤»

[19:19] <p3rln00b> m: sub foo (*@) {}; foo 1, 2, 3 -> Str $i {}

[19:19] <camelia> rakudo-moar bf7945: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> 3sub foo (*@) {}; foo 1, 2, 37⏏5 -> Str $i {}␤    expecting any of:␤        infix…»

[19:19] *** bioduds_ joined
[19:19] <bioduds_> hi, friends.

[19:20] <bioduds_> Anyone interested in mining bitcoins using Perl6???

[19:20] *** sjoshi joined
[19:21] <arnsholt> Note that there's a difference between -> {} and sub {} in how return works

[19:22] <cygx> m: sub coerce(Any:U \Type, \obj) { my $m; $m = obj.can(Type.^name).first(*.cando(\(obj))); return $m(obj) if $m; $m = Type.can("new").first(*.cando(\(Type, obj))); return $m(Type, obj) if $m; obj }; class Foo { method new(Int) { self.bless } }; sub foo($x is copy where { $x = coerce Foo, $x }) { say $x }; foo 42

[19:22] <camelia> rakudo-moar bf7945: OUTPUT«Foo.new␤»

[19:22] *** Guest48505 is now known as parisba

[19:23] <arnsholt> m: sub foo($x) { $x(); return 42 }; say foo(-> { return 1 })

[19:23] <camelia> rakudo-moar bf7945: OUTPUT«Attempt to return outside of any Routine␤  in block <unit> at <tmp> line 1␤␤»

[19:23] <bioduds_> I'm asking because of what Damian Conway raises in prospect of cryptography breaking capabilities with Perl6 on this talk here https://www.youtube.com/watch?v=Nq2HkAYbG5o

[19:23] *** cyphase left
[19:23] <bioduds_> made me wonder...

[19:24] <bstamour> you would still need a quantum computer to break the crypto in a reasonable amount of time

[19:24] <bstamour> maybe we can start porting perl 6 to the d-wave?

[19:24] <p3rln00b> bioduds_: you weren't paying attention to that talk. At one point he does say there's no hardware currently in existence for his quantum stuff code to actually do it

[19:25] <p3rln00b> (or at least did in person; I attented the "longer version" of that talk; didn't watch the vid :P)

[19:25] *** sjoshi left
[19:26] <bioduds_> p3rln00b : oh, okeydokey. thanks a lot :)

[19:26] <bioduds_> what is d-wave?

[19:26] <p3rln00b> bioduds_: and aren't bitcoins minded with purpose-made hardware these days anyway? And isn't bitcoin dead 'cause they reached the limit or whatever the hell happened last year there? :)

[19:27] <p3rln00b> bioduds_: https://en.wikipedia.org/wiki/D-Wave_Systems

[19:27] <moritz> bitcoins are mined with ASICs, yes

[19:27] <bioduds_> blockchain is real, I guess even though I don't really know the status of bitcoins in that matter

[19:27] <p3rln00b> "128-qubit superconducting adiabatic quantum optimization processor"... oh, that sounds so sexy

[19:27] <moritz> there are other coins with algorithms designed to not be easily approachable with specialized hardware

[19:27] *** labster joined
[19:28] *** cyphase joined
[19:28] <moritz> p3rln00b: to me, "adiabatic" means "boring" :-)

[19:28] <bstamour> p3rln00b: I don't even know what half those words mean, but I want one :-)

[19:28] <bioduds_> adiabatic is a gaseous transformation if I recall correctly from physics classes

[19:28] * p3rln00b doesn't know what adiabatic is so it sounds exciting :D

[19:29] <bioduds_> that happens very fast 

[19:29] <bioduds_> for instance, spraying out some substance makes the can become cool

[19:30] <bioduds_> due to adiabatic transformation, again, if I correctly recall it

[19:30] <moritz> it just means that no heat exchange happens at the system border

[19:30] *** rgrinberg left
[19:30] <bstamour> They forgot to mention "mutilating your privacy" on their Applications page

[19:32] *** wamba left
[19:33] *** TEttinger joined
[19:33] <bioduds_> p3rln00b : please clarify me on that 'whatever happened', I didn't follow this 

[19:34] <geekosaur> there is an upper limit to the number of transactions representable on the blockchain

[19:34] <geekosaur> although I didn't think they had hit it yet, not that I pay that close attention

[19:34] *** bstamour left
[19:35] <bioduds_> so basically what you're saying is that a blockchain is limited to a number of transactions?

[19:35] <p3rln00b> bioduds_: I don't remember. One of the founders or someone "up there" with the bitcoin wrote a blog post that they reached the limit or something. All I recall is a giant blog post with a ton of charts and everyone on the net saying it's the end of bitcoin

[19:36] *** cyphase left
[19:36] <bioduds_> therefore, making it impractical?

[19:38] *** pecastro left
[19:38] *** bstamour joined
[19:39] <mst> no

[19:40] <mst> bioduds_: if you google 'bitcoin block size problem' you will find out all about it

[19:40] <bioduds_> doing right now :) 

[19:43] *** cyphase joined
[19:46] *** rgrinberg joined
[19:47] *** itaipu joined
[19:48] <bioduds_> seems like mining is dead for mere mortals

[19:48] *** zzzzzzzzz joined
[19:55] *** pecastro joined
[19:59] *** stevieb9 joined
[20:02] *** PerlFireCAt joined
[20:02] *** Derperperd left
[20:04] <samcv> nice i'm on freen

[20:04] <samcv> oops sorry wrong room

[20:04] <samcv> ugh goddam popups

[20:04] <bioduds_> and looks like the network is "irrecuperably" jammed

[20:05] <bioduds_> thanks for the insight, gentlemen :)

[20:07] <stmuk_> damm! missed a talk this evening by Sophie Wilson (ARM designer) due to dental issue

[20:07] <stmuk_> I bet it was good

[20:10] <stmuk_> probably similar to https://www.youtube.com/watch?v=b5j_Y-ML3dg

[20:17] *** cygx left
[20:21] *** FROGGS left
[20:26] *** cdg joined
[20:35] *** dataf4l joined
[20:35] *** bjz joined
[20:39] *** Lucas_One left
[20:45] *** bstamour left
[20:53] *** canopus left
[20:56] *** skids left
[20:57] *** canopus joined
[21:01] *** cdg_ joined
[21:04] *** Technaton joined
[21:05] *** cdg left
[21:06] *** cdg_ left
[21:08] *** rindolf left
[21:12] *** lostinfog left
[21:12] *** firstdayonthejob left
[21:13] *** firstdayonthejob joined
[21:15] *** rindolf joined
[21:17] *** cdg joined
[21:31] <timotimo> nothing better than watching a movie over SMB with a network cable that's missing its clip

[21:31] <timotimo> when the laptop lies on the floor and the cat keeps walking against the cable

[21:34] <Technaton> Just walking against, or playing with it? :)

[21:34] *** bjz left
[21:35] *** AlexDaniel joined
[21:38] *** girafe joined
[21:44] *** yqt joined
[21:44] *** stevieb9 left
[21:48] *** perlawhirl joined
[21:48] <AlexDaniel> gfldex: hmmm… what about changing all of your answers to community wiki? (re: SO and its crap)

[21:49] <perlawhirl> hi AlexDaniel 

[21:49] <AlexDaniel> not sure if it is possible, but sounds like an interesting idea

[21:49] <AlexDaniel> perlawhirl: hi

[21:49] <perlawhirl> i'm not sure why that happens https://irclog.perlgeek.de/perl6/2016-10-10#i_13374587

[21:50] <perlawhirl> but i suspect... the & forces function calling semantics

[21:50] <perlawhirl> the .elems method parameter is an InterationBuffer... whatever that is ??

[21:50] <perlawhirl> and the elems() function just takes a normal value

[21:51] <perlawhirl> but i suspect before *.elems ever receives the arguments, it's being pushed though the function calling semantics of &()

[21:51] <perlawhirl> so you end up with something akin to

[21:51] <perlawhirl> m: say (<30 50 60>, <3 4 5 6>)».&elems

[21:51] <camelia> rakudo-moar 7f16cb: OUTPUT«((1 1 1) (1 1 1 1))␤»

[21:52] <AlexDaniel> m: say (<30 50 60>, <3 4 5 6>)».elems

[21:52] <camelia> rakudo-moar 7f16cb: OUTPUT«(3 4)␤»

[21:52] *** cpage_ left
[21:53] <perlawhirl> one of the core dev's could probably answer, but i suspect IterationBuffer is some special type that buffers the values until the iteration ends, which allows ».elems to work

[21:53] <perlawhirl> I could be wrong about all this... I'm just guessing

[21:53] <perlawhirl> again, tho... ».&(*.elems) is an x/y problem

[21:54] <AlexDaniel> well, the biggest question right now is how do we document this

[21:54] <AlexDaniel> for example, I created this issue: https://github.com/perl6/doc/issues/960

[21:54] <AlexDaniel> but we can also improve this: https://docs.perl6.org/language/operators#index-entry-postfix_%C2%BB.

[21:59] *** RabidGravy left
[22:01] <perlawhirl> i agree the docs for » are lacking. i think part of that improvemnt is documenting the purpose of constructs like '@args».&()' really do. 

[22:01] <perlawhirl> my gut says that '».&()' syntax is geared towards mapping a function (ie, in subroutine context) for _each_ of a list of args

[22:01] <perlawhirl> '».method' may behave differently because mainly because those methods behave differently from their function equivalents

[22:03] <perlawhirl> take 'join' for instance... the method has a default $separator, the function does not

[22:03] <perlawhirl> m: say <a b c>».join

[22:03] <camelia> rakudo-moar 7f16cb: OUTPUT«(a b c)␤»

[22:03] <perlawhirl> m: say <a b c>».&join

[22:03] <camelia> rakudo-moar 7f16cb: OUTPUT«(  )␤»

[22:04] <perlawhirl> the point is... not all functions act like there method brethren

[22:08] *** Juerd_ joined
[22:08] *** canopus left
[22:09] *** Juerd_ is now known as Juerd

[22:11] *** perlawhirl left
[22:11] *** perlawhirl joined
[22:12] *** itaipu left
[22:14] *** itaipu joined
[22:16] *** perlawhirl left
[22:16] *** perlawhirl joined
[22:19] *** cdg left
[22:19] *** canopus joined
[22:22] *** perlawhirl left
[22:22] *** perlawhirl joined
[22:25] *** canopus left
[22:31] *** dataf4l left
[22:32] *** cpage_ joined
[22:33] <timotimo> perlawhirl: the reason why it's different is because *.elems doesn't keep the "is nodal" from its thingie

[22:33] *** girafe left
[22:34] <timotimo> perlawhirl: with join, you're actually passing one letter as the separator in turn. but the list you're joining is empty, so you end up with three empty strings as the result

[22:35] *** erdic left
[22:42] *** ocbtec left
[22:43] *** erdic joined
[22:44] <perlawhirl> timotimo: yes, i figured out the join thing the other day, was just using it to illustrate the difference

[22:46] <timotimo> ah

[22:50] *** zzzzzzzzz left
[22:50] <perlawhirl> timotimo: so what does "is nodal" mean/do?

[22:53] <timotimo> exactly the difference between giving you 1 1 1, 1 1 and 3, 2

[22:53] <perlawhirl> so in context... '< a b c >' is a "node" ?

[22:55] <timotimo> yeah

[22:55] *** pmurias left
[22:56] <geekosaur> more or less, "nodal" indicates whether something should descend into structures or not

[22:57] *** PerlFireCAt left
[23:04] *** pecastro left
[23:04] <perlawhirl> can functions do "is nodal", or only methods ?

[23:04] *** pecastro joined
[23:08] *** firstdayonthejob left
[23:13] *** mephinet left
[23:15] <AlexDaniel> m: sub foo is nodal {}; foo

[23:15] <camelia> rakudo-moar 7f16cb: ( no output )

[23:16] <AlexDaniel> huggable: dunno

[23:16] <huggable> AlexDaniel, ¯\_(ツ)_/¯

[23:16] *** itaipu left
[23:20] <perlawhirl> AlexDaniel: in your case, my original comment stands. &() is a function, albeit an anonymous one

[23:20] <perlawhirl> by the time that function recieves the arguments, it's not "nodal"

[23:20] <perlawhirl> m: sub count { @_.elems }; say (<a b c>, <x y>).&count; say (<a b c>, <x y>)».&count

[23:20] <camelia> rakudo-moar 7f16cb: OUTPUT«5␤((1 1 1) (1 1))␤»

[23:21] <perlawhirl> ».&(*.elems) is the same as that last example ^^^

[23:23] *** Herby__ joined
[23:23] <Herby__> o/

[23:27] <timotimo> o/

[23:37] *** rindolf left
[23:38] *** perlawhirl left
[23:42] *** perlawhirl joined
[23:46] *** skids joined
[23:48] *** BenGoldberg joined
[23:56] *** mephinet joined
[23:56] *** perlawhirl left
[23:57] *** perlawhirl joined
