[00:02] <gfldex> m: my %h = :foo; sub bar (%h2 is readonly) { say %h; %h2 := {}; say %h }; bar %h; say %h

[00:02] <camelia> rakudo-moar 5a4963: OUTPUT¬´{foo => True}‚ê§{foo => True}‚ê§{foo => True}‚ê§¬ª

[00:06] *** addison joined
[00:08] *** kurahaupo left
[00:08] <gfldex> m: class A { method WHAT { Any } }; say A.new.WHAT

[00:08] <camelia> rakudo-moar 5a4963: OUTPUT¬´(A)‚ê§¬ª

[00:09] <gfldex> i somehow feel that should warn

[00:09] <gfldex> m: class A { method VAR { Any } }; say A.new.VAR

[00:09] <camelia> rakudo-moar 5a4963: OUTPUT¬´A.new‚ê§¬ª

[00:10] *** kurahaupo joined
[00:11] *** kurahaupo left
[00:11] *** kyclark joined
[00:12] *** tlvb| left
[00:13] *** kurahaupo joined
[00:15] <[Coke]> .scroll end

[00:15] *** kyclark left
[00:16] <dalek> doc: da20477 | (Wenzel P. P. Peppmeyer)++ | doc/Language/typesystem.pod:

[00:16] <dalek> doc: doc reserved method names

[00:16] <dalek> doc: review: https://github.com/perl6/doc/commit/da20477d38

[00:20] <ZoffixLappy> m: class A { method WHO { "foo" };method WHY { "foo" }; method WHICH { "foo" }; }; say .WHO, .WHY, .WHICH given A.new

[00:20] <camelia> rakudo-moar 5a4963: OUTPUT¬´Afoofoo‚ê§¬ª

[00:21] *** abruanese joined
[00:22] *** bjz left
[00:27] *** labster joined
[00:34] *** TakinOver joined
[00:35] *** cdg left
[00:49] <ZoffixLappy> huggable, Mu name :is: "M"ost "u"ndefined. Or philosophical: "The nothing from which everything proceeds"

[00:49] <huggable> ZoffixLappy, Added Mu name as "M"ost "u"ndefined. Or philosophical: "The nothing from which everything proceeds"

[00:58] <ZoffixLappy> www.bit.do/Perl6SOG <-- Damian's code examples from today's talk

[01:01] *** ZoffixLappy left
[01:08] *** Actualeyes joined
[01:17] *** kalkin- left
[01:17] *** kalkin-_ joined
[01:18] *** kurahaupo left
[01:23] *** yqt left
[01:30] *** rgrinberg joined
[01:43] <tbrowder> please considee PR https://github.com/perl6/roast/pull/131

[01:43] *** addison left
[01:45] *** ilbot3 left
[01:47] *** ilbot3 joined
[01:48] *** bjz joined
[01:53] <timotimo> tbrowder: i think you added a test without adding 1 to the plan in line 3

[01:54] *** jjido left
[01:57] <tbrowder> you are correct

[01:59] <timotimo> i made that very mistake extremely often during my first months helping out

[01:59] <tbrowder> fixed

[01:59] <tbrowder> thanks

[02:04] * Xliff just realizes it's foolish for him to complain about rakudo being slow because he's running it in a 32bit VM

[02:04] <Xliff> *headdesk*

[02:08] <timotimo> the jit can only help so much, though ...

[02:08] *** Actualeyes left
[02:10] <Xliff> Yeah. I think the project I'm working on would benefit from the extra 2 cores, 64bit and hyperthreading which the VM doesn't have access to.

[02:11] *** noganex_ joined
[02:13] <timotimo> 'k

[02:13] * timotimo goes to bed

[02:14] *** noganex left
[02:17] <Xliff> night tt

[02:17] *** MilkmanDan[Han] is now known as MilkmanDan

[02:23] *** bhm joined
[02:25] *** kid51 left
[02:26] *** freezerburnV left
[02:28] *** ssotka left
[02:31] *** bjz left
[02:37] *** aindilis joined
[03:14] *** bjz joined
[03:25] *** itaipu joined
[03:36] *** ssotka joined
[03:37] *** labster left
[03:39] *** huggable left
[03:40] *** huggable joined
[03:52] *** itaipu left
[04:03] *** sortiz left
[04:08] *** Actualeyes joined
[04:15] *** fhorck joined
[04:17] <fhorck> question: i need some help with this script, it takes 1 CPU up to 99% and within a few minutes of running it is using 5GB of RAM. i suspect my infinite loop at the bottom is the culprit, but i can't figure out another idiom to keep execution within the react/whenever block: https://gist.github.com/anonymous/272ddad93e05d970b42935b0ea777bd5

[04:19] <fhorck> this is my 1st "real" perl6 script i've written (for work), so i still have a lot of new idioms to learn (or unlearn from perl5), but so far i am loving perl6

[04:22] <ShimmerFairy> fhorck: not that I know a single thing of concurrency in P6, but I'd be surprised if their wasn't some sort of method that would make waiting on something take just one line of code. (e.g. $thing.wait() or $thing.yield() or ...)

[04:22] <ShimmerFairy> *there

[04:24] <fhorck> i did scoure all of the perl6 roast S17-supply/*.t files for examples of how to use react/whenever with Proc::Async, but i didn't find any pattern or idiom like what i'm doing

[04:30] <jdv79> does it work though?

[04:30] *** khw left
[04:31] <jdv79> also whatsup with the weird color method names?

[04:32] *** labster joined
[04:34] <ShimmerFairy> jdv79: I guess github's highlighter highlights the methods that are typenames and also 'new' for whatever reason.

[04:34] <fhorck> it does work, i just can't keep it running in the background for very long. and i augmented Str to add ANSI colors :P

[04:35] <ShimmerFairy> oh, that kind of color :P

[04:35] <ShimmerFairy> fhorck: hopefully you'll provide that augment as a module ;)

[04:36] <fhorck> i should, Term::ANSIColor doesn't support 256 colors

[04:37] <ShimmerFairy> fhorck: What if you wrote it as a  while $loop-promise.status !~~ Planned { }  ?    What if you use a less intelligent matcher like !=== ? (or whichever is appropriate for enums)

[04:41] *** labster left
[04:53] *** brrt joined
[04:55] *** kentnl joined
[04:59] *** Cabanossi left
[05:01] *** Cabanossi joined
[05:23] *** skids left
[05:23] *** rgrinberg left
[05:23] *** bjz left
[05:29] <dj_goku> so I wanted to write a really small NativeCall for getifaddrs() but not sure if I am going down the right path: https://gist.github.com/djgoku/2d12766f993ca8c1018ef5a01b8eb405

[05:31] *** nemo joined
[05:31] *** nemo is now known as Guest66635

[05:32] *** bjz joined
[05:37] *** labster joined
[05:55] <brrt> not sure dj_goku.. it seems you're defining a recursive structure, which ought to be impossible

[05:57] *** raiph joined
[06:06] *** ambs joined
[06:08] *** brrt left
[06:08] *** CIAvash joined
[06:09] *** jjido joined
[06:12] *** jjido left
[06:17] *** bjz left
[06:22] *** ssotka left
[06:30] *** bjz joined
[06:33] *** firstdayonthejob joined
[06:39] *** mr-foobar left
[06:40] *** firstdayonthejob left
[06:45] <Roamer`> dj_goku, I haven't actually tried the code yet, but IMHO the first member of the structure (ifa_next) ought to be some kind of native pointer to the next one, shouldn't it?

[06:45] <Roamer`> but I'll try now...

[06:48] <TEttinger> .u horns

[06:48] <yoleaux> U+1F608 SMILING FACE WITH HORNS [So] (üòà)

[06:48] <TEttinger> .u sign of the horns

[06:48] <yoleaux> No characters found

[06:48] <TEttinger> .u sign

[06:48] <yoleaux> U+0023 NUMBER SIGN [Po] (#)

[06:48] <yoleaux> U+0024 DOLLAR SIGN [Sc] ($)

[06:48] <yoleaux> U+0025 PERCENT SIGN [Po] (%)

[06:48] <TEttinger> hm

[06:48] <TEttinger> .u horn

[06:48] <yoleaux> U+01A0 LATIN CAPITAL LETTER O WITH HORN [Lu] (∆†)

[06:48] <yoleaux> U+01A1 LATIN SMALL LETTER O WITH HORN [Ll] (∆°)

[06:48] <yoleaux> U+01AF LATIN CAPITAL LETTER U WITH HORN [Lu] (∆Ø)

[06:48] <TEttinger> hm

[06:50] <TEttinger> m: say "\c[SIGN OF THE HORNS]"

[06:50] <camelia> rakudo-moar 5a4963: OUTPUT¬´ü§ò‚ê§¬ª

[06:50] <TEttinger> odd

[06:50] <TEttinger> m: say "\C[SIGN OF THE HORNS]"

[06:50] <camelia> rakudo-moar 5a4963: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unrecognized backslash sequence: '\C'‚ê§at <tmp>:1‚ê§------> 3say "\7‚èè5C[SIGN OF THE HORNS]"‚ê§    expecting any of:‚ê§        argument list‚ê§        double quotes‚ê§        term‚ê§¬ª

[06:50] <TEttinger> m: say "\c[SIGN OF THE HORNS]\c[SIGN OF THE HORNS]"

[06:50] <camelia> rakudo-moar 5a4963: OUTPUT¬´ü§òü§ò‚ê§¬ª

[06:51] <TEttinger> that isn't showing up for me, odd

[06:51] <TEttinger> I get a ?

[06:51] <TEttinger> it showed up at some point,and the cat faces and smiling with horns showed up

[06:51] <TEttinger> m: say "\c[SMILING FACE WITH HORNS]"

[06:51] <camelia> rakudo-moar 5a4963: OUTPUT¬´üòà‚ê§¬ª

[06:57] *** bjz left
[06:57] *** sno left
[06:58] *** _mg_ joined
[07:13] *** wamba joined
[07:25] *** NEveDko__ left
[07:38] *** zakharyas joined
[07:39] *** huggable left
[07:40] *** darutoko joined
[07:40] *** huggable joined
[07:40] *** cpage_ joined
[07:47] *** tlvb| joined
[07:49] *** telex left
[07:50] *** fhorck left
[07:50] *** telex joined
[07:52] *** rindolf joined
[07:57] *** sno joined
[08:00] *** g4 joined
[08:00] *** g4 left
[08:00] *** g4 joined
[08:05] *** dakkar joined
[08:07] *** abraxxa joined
[08:13] *** abraxxa left
[08:13] *** abraxxa joined
[08:20] *** zakharyas left
[08:24] *** cpage_ left
[08:25] *** bjz joined
[08:42] *** iH2O joined
[08:46] *** RabidGravy joined
[08:49] *** aindilis left
[08:51] *** bjz left
[09:02] *** labster left
[09:03] <moritz> likely character missing from font(s)

[09:12] *** iH2O left
[09:21] *** cpage_ joined
[09:29] *** araujo joined
[09:29] *** araujo left
[09:29] *** araujo joined
[09:30] *** grondilu joined
[09:30] *** araujo left
[09:30] *** araujo joined
[09:32] *** Roamer` left
[09:32] *** araujo left
[09:33] *** araujo joined
[09:37] *** rindolf left
[09:38] *** bjz joined
[09:38] *** Actualeyes left
[09:39] *** donaldh joined
[09:41] *** vytas joined
[09:53] *** donaldh left
[09:54] *** zakharyas joined
[09:58] <Ulti> Just built Rakudo and now get "Couldn't load Rakudo REPL.pm: MVMContext representation does not support elems"

[09:59] *** mr-foobar joined
[09:59] <psch> bisectable: use REPL;

[09:59] <grondilu> got the same error, but the REPL carries on

[09:59] <psch> ...is that not enough for bisectable? :|

[09:59] <psch> huggable: bisectable

[09:59] <huggable> psch, nothing found

[10:00] <grondilu> oh wait: "Falling back to nqp REPL."

[10:00] <psch> /o\

[10:00] <psch> bisectable: use REPL; say 1

[10:00] <psch> oh duh

[10:00] <psch> bisect: use REPL; say 1

[10:00] <bisectable> psch: no build for such ‚Äúbad‚Äù revision. Right now the build process is in action, please try again later or specify some older ‚Äúbad‚Äù commit (e.g. bad=HEAD~40)

[10:01] <psch> bisect: bad=HEAD~1 use REPL; say 1

[10:01] <bisectable> psch: no build for such ‚Äúbad‚Äù revision. Right now the build process is in action, please try again later or specify some older ‚Äúbad‚Äù commit (e.g. bad=HEAD~40)

[10:01] * psch just waits until it's finished building

[10:06] *** iH2O joined
[10:13] *** CIAvash left
[10:14] *** iH2O left
[10:16] *** kurahaupo joined
[10:20] *** jonas2 joined
[10:22] <psch> bisect: use REPL; say 1

[10:22] <bisectable> psch: exit code is 1 on both starting points, bisecting by using the output

[10:22] <bisectable> psch: (2015-12-25) https://github.com/rakudo/rakudo/commit/07fecb5

[10:22] <psch> well, that's probably wrong :S

[10:25] *** TEttinger left
[10:34] *** donaldh joined
[10:39] *** wamba left
[10:44] *** kurahaupo left
[10:44] *** kurahaupo joined
[10:45] *** iH2O joined
[10:46] *** kurahaupo left
[10:46] *** abruanese left
[10:55] <donaldh> Hi, is "build from source" still the best advice for Linux distros?

[10:55] * donaldh is wanting to provide instructions to script users

[10:56] <moritz> donaldh: yes

[10:56] *** TakinOver left
[10:56] *** gensym left
[10:57] <donaldh> It looks like debian has a rakudo package

[10:57] <iH2O> has fedora a rakudo package? i just downloaded the latest version 3 days ago

[10:58] <iH2O> i havent checked yet

[10:59] <iH2O> oops the new mageia 6 version is available for download right today 29 June

[10:59] <iH2O> gotta to check

[11:02] <iH2O> conspiracy theory: i note that rakudo doesnt yet have the famous "goto", nor basic macros nor stream matching, so maybe the perl6 establishment wants perl6 to remain "cult" for a while longer

[11:02] <iH2O> just sayin...

[11:02] *** gensym joined
[11:03] <iH2O> though its rather conspicuous...

[11:03] <jast> ./wi iH2O

[11:03] <jast> whoops

[11:03] <jast> no idea what happened there

[11:03] <DrForr_> It may have, but the last time I heard of anyone using rakudo star from a repository, it was so far out-of-date it couldn't handle "hello world".

[11:03] <jast> repositories tend to be quite far behind in most distros, yeah

[11:03] <jast> except the ones that like the bleeding edge

[11:04] <iH2O> u just outconspired me jast

[11:05] <DrForr_> iH2O: Rakudo is missing features, yes, but macro syntax is still very much up in the air, and if you want to help out deciding what it could be, by all means join in and help. There's no "conspiracy", just work that hasn't been done yet.

[11:05] <jast> I did? neat

[11:05] <iH2O> :-P

[11:05] <psch> goto is definitely ticketed on RT

[11:06] <psch> well, i'm like 85% certain

[11:06] <iH2O> we gotta to rehabilitate goto

[11:06] <psch> patches welcome vOv

[11:06] <masak> DrForr_: "couldn't handle 'hello world'" sounds... implausible. that must've worked even in old prototypes of Perl 6 from 2003 that went nowhere.

[11:06] <iH2O> gotta get goto

[11:06] <DrForr_> No reason to invent Internet Conspiracies when a simple missing implementation is the case.

[11:07] <DrForr_> masak: Well, to be fair I think it was something to do with classes, but really about that level of triviality.

[11:07] <iH2O> anything worth mentioning needs its conspiracy theories these days, doc

[11:08] <DrForr_> No.

[11:08] <iH2O> O_O

[11:08] <nine> .oO(no need to find a simple reason, when a conspiracy theory does the job)

[11:08] <iH2O> well said, why dont you post more often nine?

[11:10] <iH2O> perl6 gotta to have its own culture, mysticism (which it already has), and ... conspiracy theories

[11:10] <psch> what's our mysticism?

[11:10] <jast> you wouldn't believe what Camelia gets up to when nobody is looking

[11:10] <jast> world domination and all that

[11:11] <iH2O> with names around like apocalypse its rather obvious psych :)

[11:11] <iH2O> :) :)

[11:11] <Zoffix> Well, we have 666 modules in the ecosystem and 1 user away from having 666 subscribers on Reddit... COINCIDENSE? I think not.

[11:11] <Zoffix> :)

[11:11] <psch> oh, okay iH20

[11:11] <jast> subscribed on reddit

[11:11] <Zoffix> And our ecosystem is powered by Mojolicious..... guess what it's latest version is.... 6.66!

[11:13] <DrForr_> A conspiracy theory does nothing but give people an excuse to let {nobody|somebody else} do the work.

[11:13] <psch> oooh, i need a conspiracy theory about why jvm module precomp doesn't work!

[11:14] <Zoffix> Oh, wait, someone added 667th module‚ÄîShell::Capture‚Äî*phew* crisis averted.

[11:14] <iH2O> folks, stop outconspiracizing me 

[11:16] <nine> Zoffix: you do know that 667 is the actual evil number? Popularization of 666 is only a conspiracy trying to distract from 667...

[11:16] *** Guest66635 is now known as nemo

[11:16] <psch> off-by-ones everywhere /o\

[11:17] <Zoffix> heh

[11:17] <DrForr_> It *is* the Beast's next-door neighbor.

[11:17] <iH2O> nine: 1st time i hear that

[11:17] <DrForr_> And it's actually 616 if you read the original text, 666 was a corrupted translation.

[11:24] <gregf_> *time to switch to catalyst*

[11:24] *** rindolf joined
[11:29] *** aries_liuxueyang joined
[11:34] <Ulti> donaldh: debian has a reasonably recent package if you are on unstable or testing or whichever gets fairly bleed packages

[11:35] <Ulti> Docker is not the worst idea if you are on a suitably futuristic Linux

[11:37] <tbrowder> can someone give a short example of using the ast method on a match object?

[11:38] <DrForr_> $x.parse("text").ast

[11:38] <psch> m: grammar G { token TOP { \d+ } }; class A { method TOP($/) { make $/ * 10 } }; say G.parse("1", :actions(A.new)).ast

[11:38] <camelia> rakudo-moar 8ab6db: OUTPUT¬´10‚ê§¬ª

[11:39] *** huggable left
[11:40] *** huggable joined
[11:40] <tbrowder> thank you DrForr and psch

[11:41] <DrForr_> I'd forgotten the :actions(...);... :(

[11:41] <psch> m: grammar G { token TOP { $<nums>=\d+ { make $<nums> * 10 } } }; G.parse("1").ast.say

[11:41] <camelia> rakudo-moar 8ab6db: OUTPUT¬´10‚ê§¬ª

[11:41] <psch> well, you don't *need* them

[11:42] <psch> m: grammar G { token TOP { $<nums>=\d+ { make $<nums> * 10 } } }; G.parse("1").say

[11:42] <camelia> rakudo-moar 8ab6db: OUTPUT¬´ÔΩ¢1ÔΩ£‚ê§ nums => ÔΩ¢1ÔΩ£‚ê§¬ª

[11:42] <donaldh> Ulti: thanks, though I'm not sure that the docker image is useful for anything other than the REPL or building a derived docker image that packages up a script.

[11:44] *** kid51 joined
[11:45] <Ulti> well you can just execute scripts so I dont see why not

[12:01] *** Roamer` joined
[12:08] *** iH2O left
[12:16] *** dalek left
[12:17] *** dalek joined
[12:17] *** ChanServ sets mode: +v dalek

[12:18] <dalek> doc: 3029914 | (Zoffix Znet)++ | / (2 files):

[12:18] <dalek> doc: ::AssetPack is needed only when processing SASS

[12:18] <dalek> doc: review: https://github.com/perl6/doc/commit/3029914184

[12:27] <donaldh> Ulti: to run a script outside the container requires something like: docker run -ti -v `pwd`:`pwd` -w `pwd` rakudo-star perl6 ...

[12:31] *** kid51 left
[12:36] *** Sgeo_ left
[12:50] *** mcmillhj joined
[12:56] *** rgrinberg joined
[12:57] *** wamba joined
[12:59] <dalek> doc: d290581 | (Zoffix Znet)++ | / (4 files):

[12:59] <dalek> doc: Improve footer styles

[12:59] <dalek> doc: 

[12:59] <dalek> doc: Don't attempt to use fixed height footer, since content height

[12:59] <dalek> doc: can vary greatly, depending on the device. There's a way to

[12:59] <dalek> doc: muck around with table-* display properties for the entire page

[12:59] <dalek> doc: and sticky the variable-height footer to the bottom, but instead

[12:59] <dalek> doc: I chose to unsticky it.

[12:59] <dalek> doc: 

[12:59] <dalek> doc: Related to #645

[12:59] <dalek> doc: review: https://github.com/perl6/doc/commit/d290581bab

[13:02] <dalek> doc: 21e3150 | (Wenzel P. P. Peppmeyer)++ | doc/Type/Range.pod:

[13:02] <dalek> doc: improve examples

[13:02] <dalek> doc: review: https://github.com/perl6/doc/commit/21e3150d0f

[13:02] <dalek> doc: 71b32c5 | (Wenzel P. P. Peppmeyer)++ | / (4 files):

[13:02] <dalek> doc: Merge branch 'master' of https://github.com/perl6/doc

[13:02] <dalek> doc: review: https://github.com/perl6/doc/commit/71b32c570b

[13:03] <Roamer`> OK, I seem to be missing something here, but how do I do a stat() on a file in Perl 6?  I can get the mode things from IO.d, IO.f, etc, but how do I get the owner and group?

[13:04] <gfldex> m: class A { method WHAT { "ain't gonna happen" } }; say A.new."WHAT"()

[13:04] <camelia> rakudo-moar 90d407: OUTPUT¬´ain't gonna happen‚ê§¬ª

[13:07] <jkramer> Is there any preference whether to use .pm6 or .pm for P6 modules?

[13:07] <dj_goku> Roamer`: that is one of my questions too. so maybe `has Pointer[int] $.ifa_next? my other question is how do I declare the sub for getifaddrs() is native?

[13:08] <BrokenRobot> jkramer: both will work, but .pm6 is preferred

[13:08] <BrokenRobot> jkramer: it makesit easier for tools to know it's Perl 6 and not Perl 5 and module loader will also try .pm6 first so you'll save a few microseconds of runtime :)

[13:09] *** travis-ci joined
[13:09] <travis-ci> Doc build failed. Wenzel P. P. Peppmeyer 'Merge branch 'master' of https://github.com/perl6/doc'

[13:09] <travis-ci> https://travis-ci.org/perl6/doc/builds/141072504 https://github.com/perl6/doc/compare/d290581bab8f...71b32c570bb9

[13:09] *** travis-ci left
[13:09] <jkramer> BrokenRobot: Good, also my preferred version. I was just about to push my first module to github and looked at other ones, and .pm seems to be more popular

[13:10] <BrokenRobot> So is Windows and pop music :) Doesn't mean it's good

[13:10] <dalek> doc: c4dbd5d | (Wenzel P. P. Peppmeyer)++ | doc/Language/typesystem.pod:

[13:10] <dalek> doc: add .WHO, .HOW and a way to work around reserved method names

[13:10] <dalek> doc: review: https://github.com/perl6/doc/commit/c4dbd5daab

[13:12] <BrokenRobot> m: class A { method WHO { "blah" }; method HOW {"meow"} }; say .WHO, .HOW given A.new

[13:12] <camelia> rakudo-moar 90d407: OUTPUT¬´APerl6::Metamodel::ClassHOW.new‚ê§¬ª

[13:12] <yanmc> is there another mechanism for including code from other files than the module system?

[13:13] <BrokenRobot> yanmc: EVAL-FILE may be

[13:16] <dalek> doc: b6eed52 | (Zoffix Znet)++ | / (2 files):

[13:16] <dalek> doc: Prevent secondary nav overflow on mobiles

[13:16] <dalek> doc: 

[13:16] <dalek> doc: Related to #645

[13:16] <dalek> doc: review: https://github.com/perl6/doc/commit/b6eed525d4

[13:19] *** skids joined
[13:19] *** travis-ci joined
[13:19] <travis-ci> Doc build failed. Wenzel P. P. Peppmeyer 'add .WHO, .HOW and a way to work around reserved method names'

[13:19] <travis-ci> https://travis-ci.org/perl6/doc/builds/141074696 https://github.com/perl6/doc/compare/71b32c570bb9...c4dbd5daab23

[13:19] *** travis-ci left
[13:23] *** travis-ci joined
[13:23] <travis-ci> Doc build failed. Zoffix Znet 'Prevent secondary nav overflow on mobiles

[13:23] <travis-ci> https://travis-ci.org/perl6/doc/builds/141075736 https://github.com/perl6/doc/compare/c4dbd5daab23...b6eed525d454

[13:23] *** travis-ci left
[13:26] *** mr-foobar left
[13:26] <dalek> doc: 6a8604e | (Zoffix Znet)++ | / (2 files):

[13:26] <dalek> doc: Improve navigation styles on mobile

[13:26] <dalek> doc: 

[13:26] <dalek> doc: Use more basic styling, since we don't know on how many lines the

[13:26] <dalek> doc: device renders the nav on.

[13:26] <dalek> doc: 

[13:26] <dalek> doc: Related to #645

[13:26] <dalek> doc: review: https://github.com/perl6/doc/commit/6a8604ea12

[13:30] *** mr-foobar joined
[13:30] <dalek> doc: d1a4741 | (Zoffix Znet)++ | doc/Type/Range.pod:

[13:30] <dalek> doc: Fix failing build

[13:30] <dalek> doc: review: https://github.com/perl6/doc/commit/d1a4741e42

[13:32] *** aries_liuxueyang left
[13:32] *** Actualeyes joined
[13:32] *** travis-ci joined
[13:33] <travis-ci> Doc build failed. Zoffix Znet 'Improve navigation styles on mobile

[13:33] <travis-ci> https://travis-ci.org/perl6/doc/builds/141078164 https://github.com/perl6/doc/compare/b6eed525d454...6a8604ea126c

[13:33] *** travis-ci left
[13:33] *** kid51 joined
[13:35] *** cognominal left
[13:38] <dalek> doc: 625fdb7 | (Wenzel P. P. Peppmeyer)++ | doc/Language/list.pod:

[13:38] <dalek> doc: doc shaped Arrays

[13:38] <dalek> doc: review: https://github.com/perl6/doc/commit/625fdb7258

[13:39] *** kurahaupo joined
[13:43] *** travis-ci joined
[13:43] <travis-ci> Doc build passed. Zoffix Znet 'Fix failing build'

[13:43] <travis-ci> https://travis-ci.org/perl6/doc/builds/141079184 https://github.com/perl6/doc/compare/6a8604ea126c...d1a4741e4212

[13:43] *** travis-ci left
[13:50] *** kid51 left
[13:51] *** travis-ci joined
[13:51] <travis-ci> Doc build passed. Wenzel P. P. Peppmeyer 'doc shaped Arrays'

[13:51] <travis-ci> https://travis-ci.org/perl6/doc/builds/141081192 https://github.com/perl6/doc/compare/d1a4741e4212...625fdb72588e

[13:51] *** travis-ci left
[13:53] *** brrt joined
[13:54] *** donaldh left
[13:56] <jkramer> How can I make parameter switches or whatever they're called like :skip-empty in split? I guess it's some kind of Bool $:skip-empty, but without explicitly passing :skip-empty(True)?

[13:57] <moritz> jkramer: they are called "named paramters"

[13:57] <moritz> jkramer: sub foo(:$skip-empty = False) { ... } # for example

[13:57] <moritz> the defualt value is optional

[13:58] <jkramer> Yeah, that part I know. I mean how can I make it so I can call my sub just with foo(:skip-empty) instead of foo(:skip-empty(True))?

[13:58] <psch> m: sub f(:$skip-empty) { if $skip-empty { say "skipping empty" } else { say "no skip" } }; f :skip-empty

[13:58] <camelia> rakudo-moar 90d407: OUTPUT¬´skipping empty‚ê§¬ª

[13:59] *** donaldh joined
[13:59] <skids> m: say (:skip-empty).perl

[13:59] <camelia> rakudo-moar 90d407: OUTPUT¬´:skip-empty‚ê§¬ª

[13:59] <skids> m: say (:skip-empty).kv.perl

[13:59] <camelia> rakudo-moar 90d407: OUTPUT¬´("skip-empty", Bool::True)‚ê§¬ª

[14:00] <timotimo> :skip-empty is already syntax for :skip-empty(True)

[14:00] <jkramer> Ha ok, seems easy enough. So it's automatically a Bool and True if it's given and False/default value if not?

[14:00] <timotimo> and :!skip-empty is syntax for False

[14:00] <timotimo> not False, undefined

[14:00] <jkramer> Ok

[14:00] <jkramer> Thanks!

[14:00] *** canopus joined
[14:00] <timotimo> well, that is the default value

[14:00] <skids> Unless the default is given as False

[14:00] <timotimo> by default

[14:01] <psch> m: say (:!foo).kv.perl

[14:01] <camelia> rakudo-moar 90d407: OUTPUT¬´("foo", Bool::False)‚ê§¬ª

[14:01] <psch> m: sub f(:$a) { say $a.perl }; f :!a

[14:01] <camelia> rakudo-moar 90d407: OUTPUT¬´Bool::False‚ê§¬ª

[14:01] <skids> m: sub f(:$a) { say $a.perl }; f 

[14:01] <camelia> rakudo-moar 90d407: OUTPUT¬´Any‚ê§¬ª

[14:03] *** zakharyas left
[14:03] *** zakharyas joined
[14:03] * skids thinks that part of the design worked out particularly nicely.

[14:04] <psch> m: sub f(:$!) { }; say f 

[14:04] <camelia> rakudo-moar 90d407: OUTPUT¬´Nil‚ê§¬ª

[14:04] <psch> i still like that, the required anonymous named that doesn't have to be passed /o\

[14:07] *** zakharyas left
[14:09] <yanmc> echo '.precomp' >>.gitignore

[14:09] *** kerframil joined
[14:14] *** sammers joined
[14:15] *** kid51 joined
[14:16] <dalek> doc: a493a4b | (Wenzel P. P. Peppmeyer)++ | doc/Language/typesystem.pod:

[14:16] <dalek> doc: add reserved method names to index

[14:16] <dalek> doc: review: https://github.com/perl6/doc/commit/a493a4b65f

[14:17] *** gabiruh joined
[14:20] <yanmc> using : instead of ;

[14:21] <yanmc> compiler is "Confused", not that useful, shouldn't it `expect' something?

[14:21] <yanmc> m: use v6.c:

[14:21] <camelia> rakudo-moar 90d407: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3use v6.c7‚èè5:‚ê§¬ª

[14:23] <jkramer> Hooray, my first module: https://github.com/jkramer/p6-Text-Wrap

[14:23] <jkramer> And it's actually one from the wanted list

[14:23] <jkramer> How do I get it listed on modules.perl6.org?

[14:24] <jkramer> Ah nvm, it says it right there on the page :)

[14:24] <dj_goku> any NativeCall users in here? trying to make calls to getifaddrs() but not sure where I am going wrong: https://gist.github.com/djgoku/2d12766f993ca8c1018ef5a01b8eb405

[14:29] <awwaiid> dj_goku: what result do you get?

[14:29] *** ptolemarch joined
[14:32] <awwaiid> dj_goku: for ifa_name you should be able to use Str instead of CArray

[14:33] <wamba> m: say 1 [&( * + * -1 )] 2 [&( * + * -1 )] 3

[14:33] <camelia> rakudo-moar 90d407: OUTPUT¬´4‚ê§¬ª

[14:33] <awwaiid> and for for ifa_next seems like it should be Ifaddrs or maybe Pointer[Ifaddrs]

[14:34] <wamba> m: say [&( * + * -1 )] 1, 2, 3

[14:34] <camelia> rakudo-moar 90d407: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3say [&( * + * -1 )]7‚èè5 1, 2, 3‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement m‚Ä¶¬ª

[14:36] <awwaiid> wamba: it thinks its an array. I don't know what the first one is though :)

[14:36] <psch> well, the reduce form of an infix is usually [&...]

[14:37] <gfldex> m: say (&( * + * -1 ))(1, 2)

[14:37] <camelia> rakudo-moar 90d407: OUTPUT¬´2‚ê§¬ª

[14:37] <psch> no, without the & actually

[14:37] <awwaiid> m: [&(* + *)].perl.say

[14:37] <camelia> rakudo-moar 90d407: OUTPUT¬´[{ ... }]‚ê§¬ª

[14:37] <wamba> m: say 1 [&( * + * -1 )] 2 [&( * + * -1 )] 3

[14:37] <camelia> rakudo-moar 90d407: OUTPUT¬´4‚ê§¬ª

[14:37] <psch> m: say 1 + 2; say [+] 1, 2

[14:37] <camelia> rakudo-moar 90d407: OUTPUT¬´3‚ê§3‚ê§¬ª

[14:38] <psch> but the infixified form of a prefix doesn't play along there i think

[14:38] <dalek> ecosystem: 59ad094 | (Jonas Kramer)++ | META.list:

[14:38] <dalek> ecosystem: Add Text::Wrap to ecosystem

[14:38] <dalek> ecosystem: 

[14:38] <dalek> ecosystem: See https://github.com/jkramer/p6-Text-Wrap

[14:38] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/59ad094d60

[14:38] <dalek> ecosystem: 5ebff7a | Altai-man++ | META.list:

[14:38] <dalek> ecosystem: Merge pull request #222 from jkramer/patch-1

[14:38] <psch> s/prefix/sub call/

[14:38] <dalek> ecosystem: 

[14:38] <dalek> ecosystem: Add Text::Wrap to ecosystem

[14:38] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/5ebff7ab4f

[14:38] <wamba> i can use [&( * + * -1 )] as infix, and try use it in reduce operator

[14:38] <psch> m: say &infix:<+>(1, 2); say 1 [&infix:<+>] 2

[14:38] <camelia> rakudo-moar 90d407: OUTPUT¬´3‚ê§3‚ê§¬ª

[14:38] *** brrt left
[14:38] <psch> m: say [[&infix:<+>]] 1, 2

[14:38] <camelia> rakudo-moar 90d407: OUTPUT¬´3‚ê§¬ª

[14:38] <jkramer> \o/

[14:38] <psch> ah, so it's more about the weird kind of infix you're building there i suppose

[14:39] <gfldex> that wont work because meta operators are build at compile time when first used. They require a proper operator inside the meta operator.

[14:39] <psch> m: my &foo = sub { $^a + $^b }; say [[&foo]] 1, 2

[14:39] <camelia> rakudo-moar 90d407: OUTPUT¬´3‚ê§¬ª

[14:39] <wamba> m: say [[&( * + * -1 )]] 1, 2, 3

[14:39] <camelia> rakudo-moar 90d407: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3say [[&( * + * -1 )]]7‚èè5 1, 2, 3‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement‚Ä¶¬ª

[14:39] <dalek> perl6-most-wanted: ff0a15e | (Jonas Kramer)++ | most-wanted/modules.md:

[14:39] <dalek> perl6-most-wanted: Added link to WIP Text::Wrap.

[14:39] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/ff0a15e933

[14:39] <dalek> perl6-most-wanted: ebf9bfe | Altai-man++ | most-wanted/modules.md:

[14:39] <dalek> perl6-most-wanted: Merge pull request #33 from jkramer/patch-1

[14:39] <dalek> perl6-most-wanted: 

[14:39] <dalek> perl6-most-wanted: Added link to WIP Text::Wrap.

[14:39] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/ebf9bfea1b

[14:41] <dalek> doc: 2a000d2 | (Zoffix Znet)++ | assets/sass/style.scss:

[14:41] <dalek> doc: Remove dead CSS

[14:41] <dalek> doc: review: https://github.com/perl6/doc/commit/2a000d2ad6

[14:41] <dalek> doc: 4932a10 | (Zoffix Znet)++ | / (6 files):

[14:41] <dalek> doc: Make Tables of Contents Hide-able

[14:41] <dalek> doc: 

[14:41] <dalek> doc: Closes #217

[14:41] <dalek> doc: review: https://github.com/perl6/doc/commit/4932a106ac

[14:41] <psch> m: my &foo; if rand < .5 { &foo = sub { $^a + $^b } } else { &foo = sub { $^a - $^b } }; say [[&foo]] 1, 2, 3

[14:41] <camelia> rakudo-moar 90d407: OUTPUT¬´-4‚ê§¬ª

[14:41] <psch> wamba: i'd probably declare the expr you want to reduce with in a Callable variable

[14:41] <psch> wamba: that'd probably also help readability in the long term :)

[14:42] *** kurahaupo left
[14:42] *** kurahaupo joined
[14:42] <gfldex> m: my sub infix:<foofix>{ $^a + $^b -1 }; say [foofix] 1, 2, 3

[14:43] <camelia> rakudo-moar 90d407: OUTPUT¬´4‚ê§¬ª

[14:43] <wamba> yes, of course but for one-liners, i would prefer using anonymous operator with reduce meta-operator

[14:44] <gfldex> are there anonymous operators in Perl 6?

[14:44] <wamba> gfldex: this works

[14:44] <wamba> m: say 1 [&( * + * -1 )] 2 [&( * + * -1 )] 3

[14:44] <camelia> rakudo-moar 90d407: OUTPUT¬´4‚ê§¬ª

[14:45] <gfldex> m: dd [&( * + * -1 )]

[14:45] <camelia> rakudo-moar 90d407: OUTPUT¬´[{ ... }]‚ê§¬ª

[14:46] <gfldex> that's just an Array with a block inside

[14:46] <psch> no it's not, it's the infix form of an anonymous block

[14:46] <gfldex> m: constant a := [&( * + * -1 )]; a.WHAT.say;

[14:46] <camelia> rakudo-moar 90d407: OUTPUT¬´(Array)‚ê§¬ª

[14:46] <psch> m: dd [&say]

[14:46] <camelia> rakudo-moar 90d407: OUTPUT¬´[sub say (| is raw) { #`(Sub|48548600) ... }]‚ê§¬ª

[14:46] <psch> yeah, that doesn't tell you that it's parsed differently as an infix

[14:47] <psch> m: 1 [&say] 2

[14:47] <camelia> rakudo-moar 90d407: OUTPUT¬´12‚ê§¬ª

[14:47] *** kid51 left
[14:47] <psch> s/block/Callable/ # i guess

[14:49] <psch> https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Grammar.nqp#L3817

[14:49] <psch> m: say '(' ~~ /<alpha>/

[14:49] <camelia> rakudo-moar 90d407: OUTPUT¬´Nil‚ê§¬ª

[14:50] <gfldex> there are spec tests for &sub-name but not for other callables

[14:50] <psch> ah, nvm, the <variable> is the spot that breaks the WhateverCode i guess

[14:50] <psch> we could use them for the infix form at least i think

[14:51] <psch> not sure if the reduce form of the anon Callable infix form should be a thing, though

[14:51] <dj_goku> awwaiid: I updated the gist with the results at the bottom

[14:51] *** TEttinger joined
[14:51] <psch> Perl6::Grammar seems to explicitely not look for that, but that might not mean much

[14:51] <psch> oh, though...

[14:52] <dj_goku> awwaiid: I really don't even know if my sub call to getifaddrs() is correct.

[14:52] <psch> m: say {[[&:a]] 1, 2, 3}(a => &(* + * - 1))

[14:52] <camelia> rakudo-moar 90d407: OUTPUT¬´4‚ê§¬ª

[14:52] <psch> m: say {[[&^a]] 1, 2, 3}(&(* + * - 1))

[14:52] <camelia> rakudo-moar 90d407: OUTPUT¬´4‚ê§¬ª

[14:52] <psch> wamba: ^^^ that's your workaround i guess

[14:52] <TimToady> that &() is kinda redundant

[14:53] <psch> huh, yeah, it probably is

[14:53] <awwaiid> dj_goku: interesting. looks ok, and doesn't crash at least. But I guess you're expecting ifa_name to get populated but the (Str) output indicate it is null

[14:55] *** wingfold joined
[14:55] <wamba> psch: thank you, 

[14:56] *** kurahaupo left
[14:57] <dj_goku> awwaiid: I have c code that works by using getifaddrs(). I thought this would be a simple thing to get my feet wet with NativeCall.

[14:57] *** raiph left
[14:57] *** gcole_ joined
[14:58] *** kurahaupo joined
[14:58] *** wingfold left
[15:00] *** wamba left
[15:02] <dalek> ecosystem: cba68b7 | Altai-man++ | META.list:

[15:02] <dalek> ecosystem: Add Text::Tabs to ecosystem.

[15:02] <dalek> ecosystem: See https://github.com/Altai-man/perl6-Text-Tabs

[15:02] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/cba68b71a5

[15:05] <dalek> perl6-most-wanted: 900bfe6 | Altai-man++ | most-wanted/modules.md:

[15:05] <dalek> perl6-most-wanted: Split Text::Wrap and Text::Tabs modules, add Text::Tabs implementation into the list.

[15:05] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/900bfe69f4

[15:08] <gregf_> m: say [&(* + *).^name, ->$x,$y { $x + $y }.^name].join("-")

[15:08] <camelia> rakudo-moar 90d407: OUTPUT¬´WhateverCode-Block‚ê§¬ª

[15:10] *** zakharyas joined
[15:13] *** donaldh left
[15:14] *** pmurias joined
[15:16] *** donaldh joined
[15:19] <awwaiid> dj_goku: and similar C code you'd see the ifa_name set to something, ya?

[15:19] *** ssotka joined
[15:19] <awwaiid> hmm

[15:20] <awwaiid> dj_goku: I wonder if it needs to be sub getifaddrs(Ifaddrs $arg is rw) is native('info') { * }

[15:20] <awwaiid> the 'is rw' will turn it into a pointer

[15:26] <dj_goku> awwaiid: I updated the gist, it now has c code at the very bottom.

[15:26] <dj_goku> awwaiid: tried with is 'rw' didn't seem to make a difference

[15:27] *** kurahaupo left
[15:27] <dj_goku> but yes ifa_name is set to something

[15:28] <awwaiid> dj_goku: hm. so 'say $ifaddrs.ifa_name' still prints out (Str), eh? . Well I think the 'is rw' is probably better, but I don't know what to do next

[15:30] <awwaiid> dj_goku: I see you have "has Pointer[void]$.ifa_next;" -- does "has Pointer[Ifaddrs] $.ifa_next" or "has Ifaddrs $.ifa_next is rw" help maybe?

[15:31] *** canopus left
[15:31] *** canopus joined
[15:32] <dj_goku> oh oh oh 

[15:32] <dj_goku> has Ifaddrs $.ifa_next fixed it, but I swear I had that last night

[15:32] <awwaiid> dj_goku: or maybe no Pointer / is rw at all, it might do it automatically

[15:33] <dalek> perl6-most-wanted: 198137a | (Zoffix Znet)++ | most-wanted/modules.md:

[15:33] <dalek> perl6-most-wanted: Remove WIPs that are already in the ecosystem

[15:33] <dalek> perl6-most-wanted: 

[15:33] <dalek> perl6-most-wanted: Closes https://github.com/perl6/ecosystem/issues/136

[15:33] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/198137a7df

[15:33] <awwaiid> so it works now? maybe last night you were missing the 'is rw' on the sub getifaddrs

[15:34] <BrokenRobot> Please don't add/keep WIPs in Most Wanted after they're listed in the ecosystem. When that happens they're already findable by any potential authors, so there's no need to bloat the Most Wanted list with them.

[15:34] <TimToady> m: (once say 42) for 1..10  # wonder if we've seen this bug before...

[15:34] <camelia> rakudo-moar 90d407: ( no output )

[15:36] <dalek> perl6-most-wanted: 14289ea | (Zoffix Znet)++ | most-wanted/modules.md:

[15:36] <dalek> perl6-most-wanted: Document the purpose of WIP tags

[15:36] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/14289eace9

[15:36] *** zakharyas left
[15:37] *** g4 left
[15:39] *** huggable left
[15:40] *** huggable joined
[15:41] <grondilu> oh I see nice colors in my Configure.pl output.  Not sure if this is new or due to my new system

[15:42] * grondilu recently installed a new Debian-test VM

[15:43] *** notbenh_ joined
[15:46] *** kmwallio joined
[15:46] *** bdmatatu joined
[15:48] <d^_^b> awwaiid: this is dj_goku too. i dont know ill have to double check tonight. a data structure came back then my home net ssh dropped

[15:51] <tbrowder> please consider PR https://github.com/perl6/roast/pull/132

[15:56] <BrokenRobot> tbrowder: skip needs the number of tests to skip (defaults to 1). And you need to update the plan too. Also, on line 153, the table was changed to r0c0 r0c1, but the test still tests for the old values (also the r0c0 doesn't have a hyphen the bug is about; not sure if that's on purpose)

[15:57] <BrokenRobot> Oh, Never mind the last comment. i get it now :)

[15:57] <daxim> what's the equivalent of `cpanm --look Foo; perl Makefile.PL; make test` with panda?  I just want to run the tests without installing

[15:58] <psch> daxim: panda look; prove -e 'perl6 -I lib' t/* # or thereabouts

[15:58] <psch> i'm not 100% sure prove takes -e for that

[15:58] *** abraxxa left
[15:59] <psch> well, and it also doesn't guarantee that you run any install-ish code there, but i think you usually don't need to, and if you do the modules README probably has something to say about that..?

[15:59] <BrokenRobot> tbrowder: so line 189 should be skip 'desc', 10; and plan should be changed to... um... plan 50;

[15:59] <daxim> thank you

[16:00] <awwaiid> d^_^b: cool :)

[16:00] <BrokenRobot> zef look Foo

[16:01] <BrokenRobot> .oO( trying to IRC over a ssh connection over a reaaaaly laggy network is a nightmare :( )

[16:01] <ilmari> BrokenRobot: try mosh

[16:03] <tbrowder> BrokenRobot: check it now

[16:03] <BrokenRobot> ilmari: neat thanks.

[16:03] <dj_goku> awwaiid: so I can get all the interfaces! need to build out a socketaddr struct

[16:04] <awwaiid> dj_goku: awesome!

[16:05] *** khw joined
[16:06] <BrokenRobot> tbrowder: I'm not sure if GitHub is glitching, but I'm not seeing the change to skip() (needs 10 added to skip 10 tests) and plan changed (I believe the new plan is 50 tests, not 40)

[16:07] *** pmurias left
[16:10] <BrokenRobot> tbrowder: oh, sorry plan 51; and the skip on line 158 needs a count now too, it should be 3

[16:10] <BrokenRobot> With 100% course average for Calculus and Vectors, I sure suck at doing basic math :P

[16:10] <tbrowder> okay, check it now

[16:12] *** molaf joined
[16:13] <BrokenRobot> tbrowder++ merged. Thanks.

[16:13] <tbrowder> yr welcome!!

[16:15] <tbrowder> notice my first use of a hyper operator for the last table test (Texas style), p6 is great!

[16:18] *** zakharyas joined
[16:24] *** yqt joined
[16:24] *** rkr joined
[16:25] <dalek> doc: 9256c86 | (Wenzel P. P. Peppmeyer)++ | doc/Language/operators.pod:

[16:25] <dalek> doc: doc [&sub-name] form for meta ops

[16:25] <dalek> doc: review: https://github.com/perl6/doc/commit/9256c864f6

[16:29] <BrokenRobot> m: [&say] ^3

[16:29] <camelia> rakudo-moar 90d407: OUTPUT¬´WARNINGS for <tmp>:‚ê§Useless use of "^" in expression "[&say] ^3" in sink context (line 1)‚ê§¬ª

[16:29] <BrokenRobot> m: sub plus { $^a + $^b }; say [&plus] 1, 2, 3;

[16:29] <camelia> rakudo-moar 90d407: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3sub plus { $^a + $^b }; say [&plus]7‚èè5 1, 2, 3;‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§  ‚Ä¶¬ª

[16:29] <psch> BrokenRobot: one more [] for the reduce form

[16:30] <BrokenRobot> aH, NEEAT

[16:30] <psch> m: [[&say]] ^3

[16:30] <camelia> rakudo-moar 90d407: OUTPUT¬´01‚ê§True2‚ê§¬ª

[16:30] <psch> perfectly reasonable results too :)

[16:32] *** addison joined
[16:35] <dalek> doc: 12b7637 | (Wenzel P. P. Peppmeyer)++ | doc/Language/operators.pod:

[16:35] <dalek> doc: reduction meta ops need another [] layer for sub refs

[16:35] <dalek> doc: review: https://github.com/perl6/doc/commit/12b76378c1

[16:38] *** vendethiel- joined
[16:39] *** vendethiel left
[16:40] *** dakkar left
[16:42] *** wingfold joined
[16:47] *** zakharyas left
[16:48] *** vendethiel- left
[16:55] <gregf_> m: sub plus { $^a + $^b }; say [[&plus]] 1, 2, 3

[16:55] <camelia> rakudo-moar 90d407: OUTPUT¬´6‚ê§¬ª

[16:55] *** ChoHag joined
[16:57] *** rkr left
[17:03] *** donaldh left
[17:03] *** addison left
[17:07] *** ChoHag left
[17:09] <dalek> doc: d7fe27a | (Wenzel P. P. Peppmeyer)++ | doc/Language/functions.pod:

[17:09] <dalek> doc: doc infix form for subs

[17:09] <dalek> doc: review: https://github.com/perl6/doc/commit/d7fe27af5a

[17:12] *** kyclark joined
[17:13] <kyclark> Are there docs on POD in Perl 6?  I assume there are differences from Perl 5.

[17:17] *** firstdayonthejob joined
[17:18] <zostay> kyclark: that would be an excellent document for someone to write ;)

[17:18] <zostay> afaik, this is the most authoritative there is: https://design.perl6.org/S26.html

[17:18] <moritz> https://raw.githubusercontent.com/perl6/specs/master/S26-documentation.pod is the design document for Perl 6 Pod

[17:18] <moritz> its HTML rendering seems to be broken at the moment :(

[17:18] <zostay> irony

[17:20] *** sno left
[17:24] *** cognominal joined
[17:24] <dj_goku> awwaiid: trying to figure out a few perl 6 bits though. I'll likely share my knowledge!

[17:25] <awwaiid> dj_goku++ # sharesies

[17:28] *** Bosak joined
[17:30] *** Bosak left
[17:33] *** cognominal left
[17:34] *** cognominal joined
[17:40] *** araujo_ joined
[17:43] *** araujo left
[17:44] <nine> ugexe: ping

[17:46] *** yqt left
[17:54] *** _dolmen_ joined
[17:58] *** girafe joined
[18:02] *** domidumont joined
[18:03] *** _dolmen_ left
[18:07] *** sno joined
[18:08] *** ChoHag joined
[18:09] *** Actualeyes left
[18:10] *** kyclark left
[18:22] *** spider-mario joined
[18:25] *** sufrostico left
[18:28] *** kyclark joined
[18:33] <dalek> doc: 36e4471 | (Zoffix Znet)++ | / (3 files):

[18:33] <dalek> doc: Improve typography

[18:33] <dalek> doc: review: https://github.com/perl6/doc/commit/36e44716cd

[18:34] *** brrt joined
[18:36] <kyclark> How can I use IO::Spec::catdir?  Calling "catdir" or "IO::spec::catdir" gets me "Could not find symbol '&catdir'"

[18:36] *** yqt joined
[18:37] <nine> kyclark: $*SPEC.catdir

[18:37] <dalek> doc: 5a57aee | (Zoffix Znet)++ | / (2 files):

[18:37] <dalek> doc: Improve footer styles

[18:37] <dalek> doc: review: https://github.com/perl6/doc/commit/5a57aeed5b

[18:39] *** labster joined
[18:39] <ugexe> nine: here

[18:40] <ugexe> also forgot to commit this: https://github.com/rakudo/rakudo/compare/nom...ugexe:patch-7

[18:40] *** kerframil left
[18:43] <hoelzro> jjjjjjj

[18:43] <hoelzro> sorry

[18:43] <nine> ugexe: Ah, I wanted to ask you about https://github.com/rakudo/rakudo/commit/179eca8701c4606621b2954039ed7ed8c34a9877

[18:43] <hoelzro> my SSH session keeps locking up!

[18:45] <timotimo> you know about return 

[18:45] <timotimo> er

[18:45] <timotimo> and then ~. ?

[18:46] <ugexe> nine: it appears to make sense, but I can't test yet

[18:46] <kyclark> Thanks, nine.  How could I find out more about that?  I.e., how would one know to use $*SPEC?

[18:47] *** sufrostico joined
[18:47] *** addison joined
[18:48] *** fhorck joined
[18:50] <timotimo> it's hard to tell people about return + ~. when that's how you kill your ssh session locally :D

[18:51] <moritz> Zoffix: fwiw your last commit in the perl6/mu repo broke the rendering of pod6 design docs

[18:51] <moritz> Zoffix: it does "pod2html @*ARGS.shift", but pod2html doesn't expect a file name

[18:52] <moritz> I'd have to look it up, but I suspect it wants an actualy POD tree

[18:52] <BrokenRobot> kyclark: it'll contain the OS-specific IO::Spec:: opbject

[18:52] <BrokenRobot> m: $*SPEC.^name.say

[18:52] <camelia> rakudo-moar f43e3e: OUTPUT¬´IO::Spec::Unix‚ê§¬ª

[18:52] * BrokenRobot looks at what the latest commit to mu was...

[18:53] <nine> BrokenRobot: I understood kyclark's question to be more about documentation

[18:53] <kyclark> Right, just wondering where to find my tools that I use all the time.

[18:53] <nine> kyclark: sorry, I'm not much of a Perl 6 user. Others are for sure more familiar with our docs

[18:53] <hoelzro> timotimo: yeah, that's what I did

[18:53] *** sufrostico left
[18:54] <nine> ugexe: so what's the missing patch for?

[18:54] <BrokenRobot> kyclark: sorry, I meant you can look up the appropriate type in the docs: https://docs.perl6.org/type/IO::Spec::Unix or maybe https://docs.perl6.org/type/IO::Spec

[18:55] *** sufrostico joined
[18:55] <kyclark> Ah!  I see "On object of this type is available via the variable $*SPEC if the perl is running on a Unix-like platform."

[18:55] <ugexe> nine: for when you do `perl6 -e '$*REPO.whatever-cur.install(Distribution::Path($*CWD))` and the project in $*CWD doesn't have a bin or resources directory

[18:56] *** wamba joined
[18:57] <kyclark> I'm loving load of Perl 6, but that seems like an odd design decision.  It's odd that I can't "use IO::Spec 'catdir'" or something like that.  Seems like voodoo to use this $*SPEC object/class/whatever.

[18:57] <dalek> mu: 21d6bd7 | (Zoffix Znet)++ | util/update-design.perl6.org.sh:

[18:57] <dalek> mu: Fix incorrect pod2html call

[18:57] <dalek> mu: 

[18:57] <dalek> mu: The function expects POD not a filename.

[18:57] <dalek> mu: review: https://github.com/perl6/mu/commit/21d6bd79a6

[18:57] <BrokenRobot> moritz: that should fix it.

[18:57] <BrokenRobot> kyclark: you're not the only one :)

[18:58] <BrokenRobot> (who thinks that way)

[18:58] <moritz> BrokenRobot: I don't think so

[18:58] <moritz> BrokenRobot: now you give pod2html a string, but it still expects a Pod *tree*

[18:59] *** brrt left
[18:59] <BrokenRobot> Oh, sorry. I should've looked at what it generated in the browser: http://temp.perl6.party/test.html

[19:00] <BrokenRobot> And I did think there were an awful many HTML escapes :P

[19:00] <nine> ugexe: can you please submit a pull request? I'll hit merge as soon as I see it

[19:00] <BrokenRobot> m: sub catdir { $*SPEC.catdir: @_ }; say catdir <foo bar ber>

[19:00] <camelia> rakudo-moar f43e3e: OUTPUT¬´foo/bar/ber‚ê§¬ª

[19:01] <dalek> mu: 9c9b68b | moritz++ | util/update-design.perl6.org.sh:

[19:01] <dalek> mu: Extract POD tree; unbreaks S26 build.

[19:01] <dalek> mu: review: https://github.com/perl6/mu/commit/9c9b68b5ba

[19:01] <ugexe> oh i thought i sent one, must be in the wrong branch

[19:01] <moritz> BrokenRobot: I've pushed an incredibly hacky workaround

[19:01] <BrokenRobot> kyclark: ^ that's not too off from use blah blah :) And I wouldn't be surprised if there's a module exporting that already in the ecosystem

[19:01] <moritz> htmlify.p6 in the doc repo has a slightly less ugly way to get the POD tree

[19:02] <ugexe> nine: https://github.com/rakudo/rakudo/pull/806

[19:02] *** cosimo left
[19:02] *** samb1 left
[19:02] *** KotH left
[19:02] <nine> ugexe: thanks, merged

[19:04] *** konobi joined
[19:04] *** lnx joined
[19:04] <BrokenRobot> Cool. It works I guess. I think a proper fix would be to make Pod::To::HTML take a CSS file in a better way

[19:04] <ugexe> nine: cool, thanks for getting all those other details taken care of

[19:04] *** cosimo joined
[19:04] *** KotH joined
[19:04] *** konobi is now known as Guest71116

[19:05] <nine> ugexe: you're welcome :)

[19:07] <moritz> http://design.perl6.org/S26.html is back to live

[19:07] <moritz> and the cool thing is that the complete build only took 13s

[19:08] <moritz> it used to be that parsing S26.pod alone took at least a minute, probably several minutes

[19:08] *** skids left
[19:08] <BrokenRobot> Too bad the historical messages thing is not there

[19:08] <BrokenRobot> Which was the point of that mu stuff

[19:09] <BrokenRobot> Is it using an older Pod::To::HTML version? The one before the :css-file-blah option was added?

[19:10] <BrokenRobot> Hm,mm

[19:10] <moritz> no

[19:10] <moritz> I think I forgot parens around the EVAL

[19:10] <BrokenRobot> I was just thinking that.

[19:11] <BrokenRobot> m: sub foo ($, :$css ){ say $css }; foo EVAL "42", :css

[19:11] <camelia> rakudo-moar f49a50: OUTPUT¬´(Any)‚ê§¬ª

[19:11] <nemo> say. what's the state of CPAN in perl6? are you guys converting? is it semi-automated?

[19:11] <dalek> mu: bafe575 | moritz++ | util/update-design.perl6.org.sh:

[19:11] <dalek> mu: re-include historical message in S26 HTML output

[19:11] <dalek> mu: review: https://github.com/perl6/mu/commit/bafe575799

[19:12] <BrokenRobot> nemo: AFAIK there currently no available volunteers to do the work.

[19:12] <moritz> nemo: we use the original cpan through Inline::Perl5

[19:12] <nemo> gosh that sounds familiar

[19:12] <nemo> oh. huh. 'k

[19:12] <BrokenRobot> Oh

[19:12] <BrokenRobot> nemo: nemo lagh

[19:13] <nemo> he's kidding?

[19:13] <nemo> seemed plausible. embed perl5 interpreter, shuttle data

[19:13] <BrokenRobot> nemo: I thought you were asking about our CPAN6 module infrastructure that'll replace the current github system

[19:14] <nemo> BrokenRobot: nope. just that major perl5 strength is CPAN has almost anything I could need whenever I need it

[19:14] <BrokenRobot> nemo: no, I got lag and wasn't sure what data I was sending sorry.. He's not kidding most of CPAN is usable with Inline::Perl5. We don't need to embed an interpreter, as we can use the Perl 5 C lib via native call

[19:14] <nemo> ah..

[19:14] <BrokenRobot> I'm actually in the middle of an article showing my use of Mojolicious web framework via Inline::Perl5 for an app

[19:15] *** samb1 joined
[19:16] <BrokenRobot> It's pretty exciting to write get '/' => *.stash: foo => 'bar'; to create a mojolcious route, since it's so much simpler code than the original :D

[19:21] *** domidumont left
[19:21] *** cognominal left
[19:22] *** skids joined
[19:23] *** rindolf left
[19:23] <moritz> some of the Mojolicious APIs could really benefit from proper named arguments

[19:23] <moritz> (that are distinct from positional arguments at the Perl level)

[19:24] *** kyclark left
[19:27] *** rindolf joined
[19:27] <DrForr_> https://gist.github.com/drforr/bd929fea53ed63b6feeb56c690314f11 - Fragment of a class I'm working on. I assume there's a more portable way to get the parse tree, but I don't see it.

[19:28] <DrForr_> (well, match before AST, because I"m worried that may strip vital information.)

[19:28] *** darutoko left
[19:29] <DrForr_> I.E. I can't very well go reformatting code post-optimization...

[19:39] *** huggable left
[19:40] *** huggable joined
[19:42] *** raiph joined
[19:43] *** vendethiel joined
[19:44] *** jack_rabbit left
[19:58] *** bazzaar joined
[19:58] <bazzaar> \o

[20:00] <DrForr_> o_m/

[20:00] <bazzaar> m: class A { method invocant { say "{ self }" } }; my $a = A.new; $a.invocant;

[20:00] <camelia> rakudo-moar f49a50: OUTPUT¬´A<78625248>‚ê§¬ª

[20:01] <bazzaar> m: class A { method invocant { say "{ self }" } }; A.invocant;

[20:01] <camelia> rakudo-moar f49a50: OUTPUT¬´Use of uninitialized value of type A in string context‚ê§Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method invocant at <tmp> line 1‚ê§‚ê§¬ª

[20:02] *** fhorck left
[20:02] <bazzaar> Does this illustrate the difference between calling a method on the object versus calling a method on the class?

[20:02] <skids> DrForr_: supposedly there is %*LANG

[20:03] <hoelzro> bazzaar: which difference would that be?

[20:03] *** ZoffixMobile joined
[20:04] *** fhorck joined
[20:04] <bazzaar> hoelzro: in that self is undefined when the method is called on the class

[20:04] <ZoffixMobile> bazzaar: yeah, self in the class call is the type object

[20:04] <DrForr_> skids: There is, I use that in Slang::Roman but I'm not sure that got me where I needed to be, though I'll look again.

[20:05] <hoelzro> well, self points to the class, which is undefined

[20:05] <ZoffixMobile> bazzaar, it

[20:05] <skids> Weirdly, I have used it successfully in slangs as well, but...

[20:05] <hoelzro> in both situations, self refers to the thing on the LHS of the '.' operator

[20:05] <ZoffixMobile> bazzaar, you can use :D and :U type simleys on the invocant in method signature to differentiate the calls

[20:05] <skids> m: %*LANG.perl.say

[20:05] <camelia> rakudo-moar f49a50: OUTPUT¬´Failure.new(exception => X::Dynamic::NotFound.new(name => "\%*LANG"), backtrace => Backtrace.new)‚ê§¬ª

[20:06] <DrForr_> I think the issue was the type it gave me,but I know more of what I'm looking for now.

[20:08] <DrForr_> m:nqp::bindkey(%*LANG,'MAIN',Any);

[20:08] *** ZoffixMobile left
[20:08] <DrForr_> m: nqp::bindkey(%*LANG,'MAIN',Any);

[20:08] <camelia> rakudo-moar f49a50: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Could not find nqp::bindkey, did you forget 'use nqp;' ?‚ê§at <tmp>:1‚ê§------> 3nqp::bindkey(%*LANG,'MAIN',Any)7‚èè5;‚ê§¬ª

[20:09] <DrForr_> m: use nqp; nqp::bindkey(%*LANG,'MAIN',Any);

[20:09] <camelia> rakudo-moar f49a50: OUTPUT¬´This type (Failure) does not support associative operations‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:09] <bazzaar> hoelzro: thanks

[20:09] <BooK> so in this code (which I didn't write alone), https://github.com/book/p6-Git-Version/blob/master/lib/Git/Version.pm I have both a unit module Git::Version, and below a class Git::Version

[20:09] <skids> Yeah I don't know why my slang module is even working now.

[20:09] <bazzaar> Zoffix: thanks, I will investigate the smileys

[20:10] *** kyclark joined
[20:10] <BooK> what's the  difference? a module is a namespace ? for functions?

[20:10] <BooK> there's also a Git::Version.Version::new()  call at the end of the code, which puzzles me a little

[20:11] <BooK> I assume it means, call the Version::new code but create a Git::Version object (which is a subclass)

[20:12] <DrForr_> Oh, right, to do what I wanted I'd have to wrap the grammar's methods but that option would only work for a subclass and the grammar was finalized in NQP or something like that...

[20:19] *** pmurias joined
[20:19] <pmurias> BrokenRobot: Inline::Perl5 *embeds* the Perl 5 interpreter

[20:21] <pmurias> nemo: embedding the Perl 5 interpreter is the only way to use CPAN in Perl 6

[20:21] *** bazzaar left
[20:22] *** kyclark left
[20:22] <pmurias> nemo: there was a project to implement Perl 5 on top of MoarVM (and other VMs Perl 6 runs on), but in addition to Perl 5 being fairly tricky to implement loads of CPAN uses XS

[20:23] <dogbert17> .seen sexy-coder-girl

[20:23] <yoleaux> I saw sexy-coder-girl 16 Jun 2016 00:29Z in #perl6: <sexy-coder-girl> :)

[20:23] <timotimo> yeah, we can fake up Perl 5 well enough, albeit with a lot of work

[20:23] <timotimo> but XS ... no way

[20:23] <dalek> ecosystem/bbkr-tinyid: 351c46a | (Pawel Pabian)++ | META.list:

[20:23] <dalek> ecosystem/bbkr-tinyid: Added TinyID: Shorten and obfuscate IDs

[20:23] <dalek> ecosystem/bbkr-tinyid: review: https://github.com/perl6/ecosystem/commit/351c46ae5a

[20:24] *** kyclark joined
[20:24] <timotimo> bbkr: i'd be quite happy if the commit message contained a github link directly for your module

[20:25] <timotimo> that's how i used to build the "new modules this week" section in my p6weekly

[20:25] <timotimo> though lizmat has done the last umpteen thousand of those

[20:25] <bbkr> sure, i'll change it

[20:25] <timotimo> thanks \o/

[20:26] <dogbert17> there's a bit of a problem with docs.perl6.org atm

[20:27] <dogbert17> go to e.g. https://docs.perl6.org/type/Mu and click on the method 'isa', are you taken to the doc for that routine?

[20:28] <dogbert17> for me the link changes from showing the name of the method to '[hide]'

[20:29] <Xliff> \o

[20:29] <dogbert17> o/ Xliff

[20:29] <Xliff> Can submethod DESTROY be specified by a role?

[20:30] *** bdmatatu left
[20:30] *** ZoffixMobile joined
[20:30] <dalek> ecosystem/bbkr-tinyid: 0424898 | (Pawel Pabian)++ | META.list:

[20:30] <dalek> ecosystem/bbkr-tinyid: Added TinyID: Shorten and obfuscate IDs

[20:30] <dalek> ecosystem/bbkr-tinyid: 

[20:30] <dalek> ecosystem/bbkr-tinyid: See https://github.com/bbkr/TinyID

[20:30] <dalek> ecosystem/bbkr-tinyid: review: https://github.com/perl6/ecosystem/commit/0424898b7e

[20:30] <bbkr> changed

[20:30] *** ptolemarch left
[20:30] <ZoffixMobile> dogbert17, I'll fix it when I get home

[20:31] <ZoffixMobile> dogbert17, what browser are you using?

[20:31] <dogbert17> ZoffixMobile: no problem :)  FF

[20:31] *** kaare_ left
[20:32] <dogbert17> ZoffixMobile: tried it with IE 11 as well, same result

[20:32] <ZoffixMobile> k, I know they issue

[20:33] *** kyclark left
[20:34] <dalek> doc: 5f1061c | (Zoffix Znet)++ | html/js/main.js:

[20:34] <dalek> doc: Fix TOC toggle

[20:34] <dalek> doc: review: https://github.com/perl6/doc/commit/5f1061c076

[20:34] <ZoffixMobile> That fixes it (prolly)

[20:34] <dogbert17> ZoffixMobile: are you home now :-)

[20:35] <ZoffixMobile> No, at the bus stop :)

[20:35] <dogbert17> I like the collapsible TOC, it's nifty

[20:38] *** jjido joined
[20:40] *** Bodger1234 joined
[20:42] *** kyclark joined
[20:47] *** girafe left
[20:50] *** Ven_ joined
[20:56] <dalek> doc: 081c910 | (Jan-Olof Hendig)++ | doc/Type/Thread.pod:

[20:56] <dalek> doc: Added docs for Thread.Str

[20:56] <dalek> doc: review: https://github.com/perl6/doc/commit/081c91017c

[21:00] *** kyclark left
[21:01] *** mcmillhj left
[21:03] *** ZoffixMobile left
[21:06] *** jjido left
[21:06] *** kyclark joined
[21:08] *** sufrostico left
[21:08] *** skids left
[21:11] *** _dolmen_ joined
[21:13] *** jjido joined
[21:15] *** sufrostico joined
[21:16] <dalek> perl6-most-wanted: 91ce80f | (David Warring)++ | most-wanted/modules.md:

[21:16] <dalek> perl6-most-wanted: OpenSSL AES no longer WIP

[21:16] <dalek> perl6-most-wanted: 

[21:16] <dalek> perl6-most-wanted:  AES 256/192/128 are now all supported

[21:16] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/91ce80fb5a

[21:18] <dalek> perl6-most-wanted: 4f1e099 | (David Warring)++ | most-wanted/modules.md:

[21:18] <dalek> perl6-most-wanted: Erm delete OpenSSL / AES - it's done

[21:18] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/4f1e099a2e

[21:18] *** firstdayonthejob left
[21:19] *** kyclark left
[21:21] *** firstdayonthejob joined
[21:24] *** kyclark joined
[21:24] *** fhorck left
[21:33] *** sufrostico left
[21:33] *** _mg__ joined
[21:34] *** _mg_ left
[21:34] *** _mg__ is now known as _mg_

[21:34] *** sufrostico joined
[21:49] *** khw left
[21:49] <dalek> ecosystem: 0424898 | (Pawel Pabian)++ | META.list:

[21:49] <dalek> ecosystem: Added TinyID: Shorten and obfuscate IDs

[21:49] <dalek> ecosystem: 

[21:49] <dalek> ecosystem: See https://github.com/bbkr/TinyID

[21:49] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/0424898b7e

[21:49] <dalek> ecosystem: 343a21b | RabidGravy++ | META.list:

[21:49] <dalek> ecosystem: Merge pull request #224 from perl6/bbkr-tinyid

[21:49] <dalek> ecosystem: 

[21:49] <dalek> ecosystem: Added TinyID: Shorten and obfuscate IDs

[21:49] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/343a21b425

[21:49] *** setty2 joined
[21:50] *** jjido left
[21:56] *** RabidGravy left
[21:59] *** jjido joined
[22:05] *** Sgeo_ joined
[22:05] *** kid51 joined
[22:08] *** Ven_ left
[22:10] *** spider-mario left
[22:15] *** grondilu left
[22:16] *** vendethiel left
[22:18] *** rindolf left
[22:21] *** jjido left
[22:24] *** skids joined
[22:29] *** jjido joined
[22:32] *** rgrinberg left
[22:33] *** setty2 left
[22:36] *** pierrot left
[22:37] *** pierrot joined
[22:39] *** jjido left
[22:40] *** cdg joined
[22:43] *** TakinOver joined
[22:45] *** _dolmen_ left
[22:47] *** firstdayonthejob left
[22:48] *** jjido joined
[22:54] *** kurahaupo joined
[23:07] *** addison left
[23:08] *** jjido left
[23:10] <dalek> doc: be425a9 | coke++ | CONTRIBUTING.md:

[23:10] <dalek> doc: Fix #651

[23:10] <dalek> doc: 

[23:10] <dalek> doc: Add some descriptions for labels

[23:10] <dalek> doc: review: https://github.com/perl6/doc/commit/be425a99d1

[23:11] *** jjido joined
[23:11] *** kerframil joined
[23:12] *** jjido left
[23:13] *** addison joined
[23:13] *** jjido joined
[23:14] *** pmurias left
[23:19] *** kyclark left
[23:21] *** Zoffix left
[23:25] *** kyclark joined
[23:27] *** jrandm left
[23:29] *** jrandm joined
[23:31] *** kyclark left
[23:32] *** jjido left
[23:33] *** jjido joined
[23:35] <Xliff> m: my $a = Nil; say $a.defined;

[23:35] <camelia> rakudo-moar 750c4e: OUTPUT¬´False‚ê§¬ª

[23:39] *** huggable left
[23:40] *** huggable joined
[23:41] *** grassass left
[23:45] *** jjido left
[23:46] *** wamba left
[23:52] *** remmie left
[23:53] *** jjido joined
[23:54] *** remmie joined
[23:54] *** grassass joined
[23:57] <gfldex> m: my %h = a => 1; dd %h; %h = Nil;

[23:57] <camelia> rakudo-moar 75b37e: OUTPUT¬´Hash %h = {:a(1)}‚ê§Odd number of elements found where hash initializer expected‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[23:57] *** rgrinberg joined
[23:58] *** Zoffix joined
[23:58] <gfldex> m: my %h = a => 1; dd %h; my Hash $h = { a => 2 }; dd $h; $h = Nil; dd $h;

[23:58] <camelia> rakudo-moar 75b37e: OUTPUT¬´Hash %h = {:a(1)}‚ê§Hash $h = ${:a(2)}‚ê§Hash $h = Hash‚ê§¬ª

