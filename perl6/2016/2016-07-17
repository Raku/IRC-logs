[00:11] *** RabidGravy left
[00:17] *** _28_ria left
[00:42] *** zacts left
[00:47] *** aindilis left
[00:48] *** aindilis joined
[00:52] *** edehont left
[01:03] <dalek> doc: 4897e96 | (Wenzel P. P. Peppmeyer)++ | doc/Language/functions.pod6:

[01:03] <dalek> doc: show my &somefix:<foo> = form

[01:03] <dalek> doc: review: https://github.com/perl6/doc/commit/4897e96810

[01:06] <dalek> bisectbot/graphs_for_benchable: 669e5c7 | (Daniel Green)++ | / (2 files):

[01:06] <dalek> bisectbot/graphs_for_benchable: Initial attempt at adding graphing to benchable

[01:06] <dalek> bisectbot/graphs_for_benchable: 

[01:06] <dalek> bisectbot/graphs_for_benchable: This works, but requires cloning the gist onto the filesystem and doing git add, git commit, git push

[01:06] <dalek> bisectbot/graphs_for_benchable: review: https://github.com/perl6/bisectbot/commit/669e5c79d5

[01:12] *** woolfy left
[01:12] *** woolfy joined
[01:15] *** kid51 joined
[01:18] *** dwarring left
[01:31] *** huggable left
[01:31] *** huggable joined
[01:31] *** FROGGS_ joined
[01:33] *** molaf left
[01:35] *** FROGGS left
[01:46] *** molaf joined
[01:53] *** kalkin- joined
[01:57] *** kalkin-_ left
[02:08] *** kid51 left
[02:13] *** cooper joined
[02:13] *** canopus left
[02:20] *** canopus joined
[02:31] *** mohae left
[02:43] *** noganex joined
[02:46] *** noganex_ left
[03:02] <dalek> bisectbot: 6fd5760 | (Daniel Green)++ | / (2 files):

[03:02] <dalek> bisectbot: Initial attempt at adding graphing to benchable

[03:02] <dalek> bisectbot: review: https://github.com/perl6/bisectbot/commit/6fd5760965

[03:10] *** setty1 joined
[03:39] *** mohae joined
[03:44] *** TreyHarr1 left
[03:45] <dalek> bisectbot: 498c685 | (Daniel Green)++ | benchable.pl:

[03:45] <dalek> bisectbot: No need for a unique filename when uploading a graph

[03:45] <dalek> bisectbot: review: https://github.com/perl6/bisectbot/commit/498c685ee5

[03:50] *** adu joined
[03:55] *** djbkd joined
[04:01] *** skids joined
[04:03] *** rgrinberg joined
[04:08] *** khw left
[04:12] *** vimal2012 joined
[04:13] <vimal2012> I got the error "Cannot modify an immutable Str", when I ran this file https://paste.debian.net/plain/782191  How to correct this error?

[04:14] *** MasterDuke left
[04:15] <AlexDaniel> m: my $string = "The \n quick \n brown \n fox \n jumps \n over \n the \n lazy \n dog \n"; for $string.lines { say S/ \s // }

[04:15] <camelia> rakudo-moar 7976fe: OUTPUT«The␤quick ␤brown ␤fox ␤jumps ␤over ␤the ␤lazy ␤dog ␤»

[04:15] <AlexDaniel> that's one way

[04:15] <vimal2012> Upper case S?

[04:17] <AlexDaniel> yea. “The lower-case version (s///) substitutes in-place, while the upper-case version (S///) leaves the original alone and returns the resultant string.” (https://docs.perl6.org/language/operators#index-entry-S%2F%2F%2F)

[04:17] <Frameless> vimal2012: http://perl6.party/post/Perl-6-S---Substitution-Operator

[04:17] <Frameless> m: .say for "The \n quick \n brown \n fox \n jumps \n over \n the \n lazy \n dog \n".words

[04:17] <camelia> rakudo-moar 7976fe: OUTPUT«The␤quick␤brown␤fox␤jumps␤over␤the␤lazy␤dog␤»

[04:18] <AlexDaniel> yea, it depends on what you actually want

[04:18] <Frameless> m: .say for "The \n quick \n brown \n fox \n jumps \n over \n the \n lazy \n dog \n".lines».trim

[04:18] <camelia> rakudo-moar 7976fe: OUTPUT«The␤quick␤brown␤fox␤jumps␤over␤the␤lazy␤dog␤»

[04:31] *** vimal2012 left
[04:35] *** Cabanossi left
[04:39] *** Cabanossi joined
[04:40] *** Tonik joined
[04:57] *** kaare_ joined
[05:02] *** holyghost joined
[05:11] *** adu left
[05:17] *** rgrinberg left
[05:19] *** BenGoldberg left
[05:23] *** rgrinberg joined
[05:27] *** holyghost left
[05:31] *** huggable left
[05:31] *** huggable joined
[05:39] *** AlexDaniel left
[05:57] *** stmuk_ joined
[05:57] *** setty1 left
[05:58] *** skids left
[05:59] *** rgrinberg left
[05:59] *** stmuk left
[06:18] *** holyghost joined
[06:35] *** blah joined
[06:35] *** blah left
[06:41] *** Tonik left
[06:43] *** stmuk joined
[06:46] *** stmuk_ left
[06:47] *** CIAvash joined
[06:48] *** holyghost left
[06:50] *** holyghost joined
[07:13] *** CIAvash left
[07:16] *** darutoko joined
[07:24] *** labster left
[07:29] *** aries_liuxueyang left
[07:30] *** marcel_ joined
[07:30] *** aries_liuxueyang joined
[07:33] *** canopus left
[07:34] *** canopus joined
[07:35] *** wamba joined
[07:37] *** firstdayonthejob joined
[07:38] *** setty2 joined
[07:38] * TimToady drove from Köln to Milano yesterday, today we drive to Rome for the Curry On conference that starts tomorrow

[07:39] *** djbkd left
[07:41] <FROGGS_> TimToady: happy driving :o)

[07:44] *** setty2 left
[07:45] *** djbkd joined
[07:52] * ShimmerFairy suddenly wishes $*PROGRAM-NAME were really $*PROGRAM_NAME again, grumble grumble...

[07:52] *** tomboy64 left
[07:54] <FROGGS_> aye

[07:55] *** CIAvash joined
[07:55] <ShimmerFairy> since my US keyboard has _ as the shifted version of -, as I've mentioned before (also, it looks better) :P

[07:56] *** djbkd left
[07:57] *** djbkd joined
[07:58] *** labster joined
[07:59] *** AlexDaniel joined
[08:00] *** tomboy64 joined
[08:02] *** domidumont joined
[08:06] *** domidumont left
[08:07] *** domidumont joined
[08:10] *** pmqs_ joined
[08:10] <FROGGS_> ShimmerFairy: that's what I said when the kebab-all-the-things patch landed

[08:11] <FROGGS_> we should kebab methods names and variables only if the are lowercase

[08:11] <ShimmerFairy> It's what I've said since I found out about it :) . I had to look in the documentation because I couldn't figure it out with $*EXECUTABLE_NAME, $?EXECUTABLE_NAME, $*PROGRAM_NAME, etc.

[08:12] <nine> If that's the worst flaw in Perl 6's design, I can live with it.

[08:12] <FROGGS_> the reason for kebab after all was to save that keystroke (shift) for typing lowercase names

[08:13] <FROGGS_> so introducing a keystroke for constants and other stuff is against that principle

[08:13] <moritz> also I hope we'll eventually have IDEs that can autocomplete such names

[08:13] <ShimmerFairy> I think a good compromise solution would be to have both variants, for people who like kebab-case, and for the normal people :)

[08:13] <FROGGS_> ahh, no

[08:13] <FROGGS_> :o)

[08:13] <ShimmerFairy> moritz: I don't use autocompletion in my programming anyway, so that's not a solution.

[08:17] <ShimmerFairy> FROGGS_: solution #2: switch to common-lisp style case-insensitive names, with _ being the "capital letter" of - .  :P

[08:18] <moritz> ah well, you'll just have to remember then :-)

[08:18] *** djbkd left
[08:20] <ShimmerFairy> moritz: I think my problem ultimately comes down to the fact that, to me, YELLING-KEBAB is both ugly and unintuitive.

[08:31] <stmuk> shouldn't kebab case be localised to gyro (.de) and kebob (.ca) at least? :)

[08:37] *** domidumont left
[08:37] <AlexDaniel> I think that it's weird to adapt a language to some random keyboard layout

[08:37] <AlexDaniel> isn't it supposed to be other way round?… In a perfect world, at least

[08:38] <AlexDaniel> anyway, you can always change your keyboard layout, if that bothers you a lot

[08:38] <AlexDaniel> and while you are at it, throw in some unicode characters

[08:47] *** jcallen_ joined
[08:50] *** huf joined
[08:51] *** Walex joined
[08:58] *** AlexDaniel left
[09:02] <marcel_> m: Buf.new(10 +& 0xFF)

[09:02] <camelia> rakudo-moar 7976fe: ( no output )

[09:02] <marcel_> m: say Buf.new(10 +& 0xFF)

[09:02] <camelia> rakudo-moar 7976fe: OUTPUT«Buf:0x<0a>␤»

[09:02] *** kanishka joined
[09:03] <marcel_> m: my int $i = 10; say Buf.new($i +& 0xFF)

[09:03] <camelia> rakudo-moar 7976fe: OUTPUT«Type check failed in initializing element #0 to Buf; expected uint8 but got Int (10)␤  in any  at gen/moar/m-Metamodel.nqp line 1736␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in any  at gen/moar/m-Metamodel.nqp line 3055␤  in any…»

[09:03] *** girafe joined
[09:04] <marcel_> m: my int $i = 10; ($i +& 0xFF).WHAT.say

[09:04] <camelia> rakudo-moar 7976fe: OUTPUT«(Int)␤»

[09:04] <marcel_> so whats the problem, anyone?

[09:05] <masak> m: say Int ~~ uint8

[09:05] <camelia> rakudo-moar 7976fe: OUTPUT«Cannot unbox a type object␤  in block <unit> at <tmp> line 1␤␤»

[09:06] <marcel_> It is introduced in the latest few rakudo versions, before it was ok

[09:20] <nine> bisectable: my int $i = 10; say Buf.new($i +& 0xFF)

[09:20] <bisectable> nine: No build for 'bad' revision

[09:21] <nine> bisectable: help

[09:21] <bisectable> nine: Like this: bisectable: good=2015.12 bad=HEAD exit 1 if (^∞).grep({ last })[5] // 0 == 4 # RT128181

[09:21] <nine> bisectable: good=2015.12 bad=HEAD my int $i = 10; say Buf.new($i +& 0xFF)

[09:21] <bisectable> nine: No build for 'bad' revision

[09:21] <nine> bisectable: good=2015.12 bad=b06a99ebdd79393ce109cc214a6019ada5a0218a my int $i = 10; say Buf.new($i +& 0xFF)

[09:21] <bisectable> nine: bisect log: https://gist.github.com/58e1921c8d812add972e9cd8fe30663b

[09:21] <bisectable> nine: (2016-07-11) https://github.com/rakudo/rakudo/commit/de5d9e7

[09:22] <nine> lizmat: ^^^

[09:28] *** iH2O joined
[09:28] <iH2O> hi folks

[09:28] *** kaare_ left
[09:28] <holyghost> Hello

[09:29] *** b2gills left
[09:31] <iH2O> hello holly

[09:31] *** huggable left
[09:31] *** huggable joined
[09:35] *** Actualeyes joined
[09:37] *** djbkd joined
[09:44] <holyghost> I am going to install strawberry perl one o these days, on a core duo 2

[09:44] <holyghost> I'd really like something as activestate or strawberry for perl6

[09:45] <holyghost> It's just a no-jit rakudo now

[09:45] <holyghost> 2016.01 or something

[09:46] <holyghost> I am more of an end-user as I don't fully grok the source code of perl6, it's difficult enough for some people, except maybe C++ folks

[09:46] <stmuk> there is a 64 bit jited 2016.04 msi

[09:47] <holyghost> I see

[09:47] <holyghost> right I forgot about that

[09:47] <holyghost> I only have mac mini as a iX processor system

[09:48] <holyghost> an i5

[09:48] <iH2O> srry to hear that

[09:48] <holyghost> It's loaded with mac os x el capitan

[09:48] <stmuk> the 64 bit 2016.07 dmg then

[09:48] <holyghost> sure I am going to send in a program to nintendo, a metroid game then I'll have some money

[09:49] <holyghost> maybe I'll buy an amiga x1000 or x5000

[09:49] <holyghost> an amigo os 4.1 PPC machine

[09:49] <holyghost> s/amigo/amiga

[09:49] <holyghost> They went more or less the apple way with their processors

[09:50] <stmuk> an i5 is 64 bit

[09:50] <holyghost> I know

[09:51] <stmuk> I don't understand your problem then

[09:51] <holyghost> well strawberry and activestate is win32

[09:51] <holyghost> e.g. they have COM bindings

[09:51] <stmuk> you are using Windows?

[09:52] <stmuk> which OS?

[09:52] <holyghost> the interface of an instance in an array

[09:52] <holyghost> 7

[09:52] <stmuk> on what processor

[09:52] <holyghost> core duo 2

[09:52] <stmuk> well that runs Win 7 64 bit OK then 

[09:52] <holyghost> I forgot if you can load a 64bit on an amd64 arch

[09:53] <holyghost> I though not

[09:53] <stmuk> is whether your OS is 32 bit or 64 bit

[09:53] <holyghost> s/though/thought

[09:53] <holyghost> It's 32 bit

[09:54] <stmuk> I think you can still download the 64 bit for free until the end of the month

[09:54] <stmuk> for Win 10 I mean

[09:54] <holyghost> ok good point

[09:55] <stmuk> you could also probably build 32 bit rakudo OK with the gcc in strawberry perl

[09:56] <stmuk> but there would be no jit and some of the NativeCall modules might not work

[09:56] <holyghost> To download win 10, do I just click the microsoft.com link in google ?

[09:58] <stmuk> I forget but there was a link on the MS site for the ISO

[09:58] * holyghost start a download

[10:02] *** djbkd left
[10:03] *** iH2O left
[10:04] <holyghost> ok I hope that works out

[10:04] <holyghost> thanks

[10:04] *** RabidGravy joined
[10:05] <stmuk> np

[10:07] *** jeek joined
[10:16] <holyghost> If you install win 7 from a 6 year old DVD-R, it installs 32 bit right ?

[10:16] <holyghost> I don't know much of windows, there's no 'uname -a' for example

[10:17] <timotimo> you should be able to right-click on "my computer" on the desktop to figur eout if it's 32bit or 64bit

[10:17] <holyghost> ok

[10:18] <El_Che> if I remember correctly, there where 64-bit win7 iso's also 6 year ago

[10:19] *** domidumont joined
[10:19] <timotimo> who is hack user emeric?

[10:19] <El_Che> on my laptop (I am a Linux user) I have a w32 virtual box vm, and a 64 win7 parition for games (I boot that once a year for steam sales :) )

[10:19] <timotimo> they have a screen -r irc that's consuming a crapton of cpu time

[10:20] <timotimo> one is already up to 106 hours, the other is at 107 hours

[10:20] <timotimo> i'm pretty sure it isn't supposed to be like that?

[10:20] <psch> the 50% cpu for each is the more interesting bit i think

[10:21] <psch> well, unless the 106h is cpu time too, maybe?

[10:22] <timotimo> i was just wondering what might be causing the noticable amount of cpu usage on collect

[10:22] <timotimo> for one week, the usage has been pretty much constant

[10:23] <timotimo> one part is of course your development, but i don't think you're developing for actually 24 hours a day without pause :)

[10:23] <timotimo> i kind of wish i could ask collectd for graphs 2x as wide for the same amount of time

[10:23] <timotimo> i mean collectd-web

[10:23] <psch> nah, i kinda like sleep occasionally :)

[10:23] <timotimo> grafana is so much nicer user-interface wise, i think

[10:24] <timotimo> w says emeric has been idle for 7 days now

[10:24] *** holyghost left
[10:25] <timotimo> i can just kill the weechat process and see who leaves %)

[10:25] * timotimo read too many BOFH stories

[10:25] <jeek> /kill 'em all, root'll sort 'em out

[10:26] <timotimo> %)

[10:28] *** domidumont left
[10:29] *** holyghost joined
[10:30] <nine> timotimo: you can actually. Open the image and add &width=2000 to the URL

[10:31] <timotimo> well, it'd be nice if the web interface'd allow me to do something like that for all graphs, and keep that setting

[10:32] *** labster left
[10:32] <nine> There's also a GraphWidth setting in the config file

[10:32] <timotimo> oh? neat.

[10:33] <timotimo> but that's not per-user, right?

[10:33] <nine> no, it isn't

[10:33] <timotimo> i don't want to make it unusable for the other users

[10:42] <holyghost> Is there going to be 32 bit support for perl6 in the future ?

[10:42] <timotimo> uh oh, what's it now. ssh hack.p6c.org is taking a long time

[10:42] <timotimo> it hasn't crashed again, has it? >:(

[10:43] <psch> uptime is <2

[10:43] <psch> well, load :)

[10:43] <timotimo> nope, it's fine

[10:44] <timotimo> it just took a long time for some random reason

[10:46] <timotimo> stracing the screen session emeric has tells me there's something rather wrong going on

[10:46] <timotimo> it seems to be stuck in a while loop trying to attach or something

[10:47] <timotimo> i killed that one that was spinning its wheels, that seems to have helped

[10:51] *** domidumont joined
[10:58] *** Ven joined
[11:01] *** rindolf joined
[11:09] *** kid51 joined
[11:18] *** domidumont left
[11:20] *** kaare_ joined
[11:21] <nine> holyghost: rakudo should already run on 32 bit systems?

[11:21] <lizmat> nine: looks like:

[11:21] <lizmat> #                nqp::setelems(to, $j + $elems);  # presize for efficiency

[11:21] <lizmat> fixes the problem ??!!

[11:22] <lizmat> oops, no, my bad

[11:23] *** rgrinberg joined
[11:26] *** marcel_ left
[11:31] *** rgrinberg left
[11:42] *** iH2O joined
[11:44] <holyghost> nine : no-jit and 2016.01

[11:44] <holyghost> nine : I'll try the strawberry perl to install a later version tomorrow

[11:46] <holyghost> I just got back from the pub

[11:46] <holyghost> I drank a good coffee

[11:51] *** domidumont joined
[11:57] *** silug left
[12:12] *** silug joined
[12:13] *** iH2O left
[12:29] *** BenGoldberg joined
[12:31] *** Ben_Goldberg joined
[12:34] *** BenGoldberg left
[12:55] *** kid51 left
[12:55] *** _28_ria joined
[13:10] *** Actualeyes left
[13:26] *** bob777 left
[13:27] *** Actualeyes joined
[13:27] *** bob777 joined
[13:31] *** huggable left
[13:31] *** huggable joined
[13:37] *** Zoffix joined
[13:38] <Zoffix> holyghost, Strawberry Perl is a sister language, not Perl 6. You should build Rakudo from sauce. Latest version is only a day old: http://rakudo.org/downloads/rakudo/

[13:38] <Zoffix> Though I don't think there's JIT on 32-bit versions

[13:39] <stmuk> you could also probably build 32 bit rakudo OK with the gcc in strawberry perl

[13:40] <holyghost> ok

[13:41] <holyghost> I'll give it a go tomorrow

[13:41] <holyghost> I'm taking the day off

[13:41] <holyghost> I never used strawberry perl, I only know some activestate

[13:42] <mst> they're both perl5

[13:42] <holyghost> The shell is not a problem though

[13:42] <mst> strawberry's the (more recent) community one, activestate is a commercial one

[13:42] <mst> they're the same language. perl6 is not.

[13:42] <holyghost> ah I didn't know that

[13:42] <holyghost> that I know

[13:43] *** TreyHarr1 joined
[13:43] <holyghost> I need the perl5 for building perl6 I thought

[13:44] <holyghost> I won't meddle in perl5 anymore though, the language is really the swiss army knife but maybe the OOP is lacking, though I try to use new languages except for C/C++

[13:44] <stmuk> you can build rakudo with strawberry perl and git on windows

[13:44] <Zoffix> holyghost, yeah, and strawberry also has C compiler and make tool that you'll need. So do install it. I was just clarifying that you won't get Perl 6 by just installing Strawberry alone

[13:44] <holyghost> ok I see

[13:44] <mst> holyghost: perl5's OOP is better than python or ruby or javascript

[13:44] <Zoffix> holyghost, have you experimented with Moose in Perl 5? That's the Perl 5's OO

[13:44] <stmuk> and windows git

[13:45] <mst> holyghost: that's a lot of why I use it so much

[13:45] <mst> holyghost: ruby is much prettier but ruby's OO is epically terrible in comparison

[13:45] *** xebra joined
[13:45] *** xebra left
[13:46] <holyghost> I am not too good at it, but roles are actor-language things ?

[13:47] <holyghost> It's not the C++11 or something but we need to define a whole OOP system in scheme macros for school

[13:47] <mst> holyghost: perl5 and perl6 are the only languages with a decent 'has' and support for roles (traits)

[13:47] <holyghost> s/need/needed

[13:47] <mst> though traits come from smalltalk land

[13:47] <mst> 'has' and before/after/around are more CLOSish

[13:47] <holyghost> I am on the basic level of such things

[13:47] <timotimo> role isn't actor-related

[13:48] <mst> no, but actors and traits came from, I think, similar groups of researches

[13:48] <mst> because smalltalk ;)

[13:48] <holyghost> st, I wrote a CGI script in GNU st once

[13:48] <timotimo> probably, yeah

[13:48] <timotimo> GNUstep?

[13:48] <holyghost> GNU smalltalk

[13:49] <timotimo> ah

[13:49] <holyghost> it has a command line #!

[13:49] <holyghost> hasbang

[13:49] <holyghost> hashbang I mean

[13:50] <holyghost> Then I learned some squeak, pharo and seaside smalltalk

[13:51] <holyghost> It was based on the book ST-80 by adele

[13:51] <holyghost> goldberg

[13:52] <mst> ok, so, if you learn traits from smalltalk

[13:52] <mst> those apply to perl6 and to M* OO in perl5

[13:52] <holyghost> I misparsed Moose

[13:53] <holyghost> I thought it was the MUD perl5 system

[13:53] <holyghost> MOO, it is called I think

[13:54] <holyghost> perl5 OO was full of references and such in a program I wrote

[13:55] <holyghost> In the days of perlyroids

[13:55] <holyghost> about 13 years ago

[13:56] <holyghost> perlyroids was a perl GUI/adobe module  based (only for IE) game written in perl5, you could run it in your browser such as hotjava in those days

[13:56] <holyghost> It's long gone though

[13:57] <holyghost> I had a friend back at worldforge.org, bryce who was a perl wizard, he brought me to perl5

[13:58] <holyghost> I adapted OO of perl5 then

[13:58] <holyghost> It was too difficult for me to fully understand

[13:58] <holyghost> @ISA for example has arcane features for example

[13:58] <holyghost> like the rest of perl5 :-)

[13:59] <holyghost> Anyway, I hope I can compile the thing tomorrow

[13:59] <holyghost> I am working on a game for perl6, I'll post it to perlmonks.org

[14:00] <holyghost> SDL2::Raw based

[14:00] <holyghost> I only need to make an xpm parser to not swap buffers

[14:00] <holyghost> e.g. png buffer to SDL2 texture

[14:01] <holyghost> SDL2 is slow in windows though, the linux version is faster, I want to make it portable

[14:01] <holyghost> SDL2::Raw I mean

[14:01] <timotimo> why is the linux version faster?

[14:01] <timotimo> that makes no sense to me

[14:01] <holyghost> I have no idea

[14:02] <mst> holyghost: ah, you got taught the obsolete 2000-era perl5 OO

[14:02] <mst> holyghost: http://p3rl.org/Moose is what you'd use these days

[14:03] <mst> holyghost: example: http://git.shadowcat.co.uk/gitweb/gitweb.cgi?p=scpubgit/DX.git;a=blob;f=lib/DX/Hypothesis.pm;h=0131688d78a4718bd5edf70e9de869dc402c49be;hb=HEAD

[14:04] <Juerd> Honestly, I don't even consider Moose because my code needs to run fast.

[14:04] <holyghost> Moose looks good, it's like our OOP scheme classes

[14:05] <stmuk> I've used SDL2::Raw on Mac and Linux and noticed no difference in speed

[14:05] <nine> Juerd: but Moose is reasonably fast? It just comes with a huge startup penalty.

[14:05] <Juerd> nine: Compared to Perl 6 it's fast :P

[14:07] *** Zoffix left
[14:08] <holyghost> Is the syntax of the perl6 OO system finished or may it be extended without meta-thingy ?

[14:08] <mst> Juerd: I'm sorry? please explain how Moose is slower than the equivalent raw perl5 OO

[14:08] <holyghost> metasyntactic evauluation I mean

[14:08] <mst> holyghost: roughly, Moose was a port to perl5 of the original perl6 metamodel, and the current perl6 metamodel is a port back to perl6 of Moose ;)

[14:09] <holyghost> *lol*

[14:09] <mst> note that Moose does have significant startup overhead, which is why for fast starting scripts I wrote Moo

[14:09] *** spider-mario joined
[14:09] *** canopus left
[14:09] <Juerd> mst: It was when I benchmarked it (2 years ago), mostly when it came to accessors.

[14:10] <Juerd> If you say I did something wrong because it's easily as fast as classical Perl 5 OO, I'll take your word for it.

[14:10] <mst> Juerd: the accessors are normally as fast as they would be if hand-written

[14:10] <nine> Juerd: with or without __PACKAGE__->meta->make_immutable?

[14:11] <mst> now, admittedly, perl5 sub call overhead means that's not *amazingly* fast anyway

[14:11] <mst> nine: irrelevant

[14:11] <Juerd> nine: Without

[14:11] <mst> oh, Moose without ->make_immutable is "please make my program really slow"

[14:11] <mst> however the accessors are the one thing I *wouldn't* expect to be affected by that

[14:11] <mst> but if you didn't even get as far as ->make_immutable, you definitely didn't learn enough Moose to produce valid benchmarks, I'm afraid

[14:12] <timotimo> if you have to reach a double-underscored allcaps thing in order to make your program behave sensibly, that sounds bad :P

[14:12] <mst> timotimo: __PACKAGE__ is standard perl5 thing, blame larry for the name :P

[14:12] *** canopus joined
[14:13] <Juerd> mst: If that's an important thing, I'm confused that it didn't make it to perldoc Moose :)

[14:13] <nine> Juerd: it's in Moose::Manual and explained in Moose::Manual::BestPractices

[14:14] <Juerd> timotimo: https://metacpan.org/pod/CLASS :)

[14:14] <mst> Juerd: perldoc Moose has a 'new to Moose' section which says you must start with Moose::Manual

[14:14] <mst> Juerd: which shows it in the examples

[14:15] <Juerd> I see

[14:15] <mst> Juerd: but, yeah, a Moose accessor will be basically the same speed as a hand written one, and if it isn't, either you did something silly that pessimised it, or there's a bug

[14:15] <mst> either way, you should've come to #moose on irc.perl.org and asked

[14:15] <mst> rather than just spreading FUD about perl :(

[14:15] <timotimo> pff, having to put a million use statements at the beginning of every class :P

[14:15] <mst> timotimo: http://p3rl.org/Import::Into solves that

[14:15] <nine> timotimo: I think that's why Perl 6 was started ;)

[14:15] <Juerd> mst: I've been on IRC too long to *ever* join a channel just to complain about something.

[14:16] <mst> Juerd: so instead you've spent two years telling people to avoid one of the best parts of perl5 because it's 'slow'. I don't consider that a net improvement :P

[14:16] <Juerd> mst: Hold your assumptions please. I believe this is the first time I ever said anything about this outside the project group.

[14:17] <Juerd> I'm not really involved in Perl that much anymore. Haven't been to a YAPC or national workshop in years, etc.

[14:17] <Juerd> So no, I have not been spreading FUD. If I had, you'd have noticed that :)

[14:17] <timotimo> mst: pff, having a million modules to do exactly what you need!

[14:19] <Juerd> mst: About irc.perl.org: my IRC box is ipv6 only.

[14:19] <mst> Juerd: I'd still rather have fixed your mistake two years ago

[14:19] <mst> ah, hrm, I'm not sure which of the nodes currently do ipv6

[14:19] <Juerd> I used to be on irc.perl.org. Out of a dozen networks it's the only one I had to ditch when I moved my client to an ipv6 only box... :)

[14:20] <mst> it was more of them, but then the upstream v6 transport for some of them started being flaky

[14:20] <Juerd> Although I used to be in #amsterdam.pm only 

[14:20] <mst> and thereby were causing more harm than good

[14:21] <mst> Juerd: well, if you ever write perl5 again, come onto #perl on this network and we can help you do OO competently :)

[14:21] <timotimo> oh no, not the mst-ruled channel with all of mst's goons!

[14:21] <Juerd> mst: I'm perfectly fine with my competence regarding classic Perl OO.

[14:21] <timotimo> on an mst-controlled network!

[14:21] <mst> Juerd: yeah, but that's way too much typing and opportunity to typo things :)

[14:21] <Juerd> Too much typing? Nah.

[14:22] <mst> I mean, the first thing that comes to my mind is - if you didn't like 'has', why are you even in here? surely you'd be happier in #banging-rocks-together ? :D

[14:22] <Juerd> I like "has $.foo is rw;"

[14:22] <mst> seriously, I spent like four years with no Moose to figure out what the feature set for Moo needed to be and it was horrible

[14:22] <mst> I don't wanna go back there ever again

[14:22] <Juerd> I dislike "has 'foo' => ( is => 'rw' );"  (if I recall the Moose syntax correctly)

[14:22] <mst> hence why Moo fatpacks so I don't even have to treat it as a dep

[14:23] <mst> has foo => (is => 'rw'); # is how I'd spell it, but yes

[14:23] <Juerd> I'd actually spell that "has qw(foo is rw);"

[14:24] <mst> personally, I mostly use http://shadow.cat/blog/matt-s-trout/do-you-copy/

[14:24] <nine> That's actually only 2 characters more than Perl 6

[14:26] <Juerd> In any event I don't think I'll ever write the "modern" Perl 5, if that means Moose, unless I happen to get involved in a project that already does.

[14:26] <spider-mario> weird,

[14:26] <spider-mario> running make install after building rakudo, I get:

[14:26] <spider-mario> Could not find CompUnit::Repository::Staging

[14:26] <Juerd> I'd rather wait for Perl 6 to become production ready

[14:26] <spider-mario> is that a known issue?

[14:26] <nine> spider-mario: it isn't

[14:27] <nine> spider-mario: what rakudo version?

[14:27] <spider-mario> 2016.07

[14:27] <spider-mario> 2016.06 was fine

[14:27] <spider-mario> I can try and bisect the issue

[14:27] *** setty1 joined
[14:27] <mst> Juerd: that's fair enough. I've been addicted to it for years now so

[14:27] <timotimo> spider-mario: you probably need to run configure.pl again

[14:27] <nine> spider-mario: do you have a lib/CompUnit::Repository::Staging?

[14:28] <spider-mario> timotimo: I did, it’s a fresh build

[14:28] <mst> Juerd: oh, minor note, Moo uses Class::XSAccessor if installed where possible

[14:28] <mst> Juerd: so "has foo => (is => 'rw');" gets you an XS accessor and is actually rather more performant than writing your own

[14:28] <spider-mario> nine: there is one in the source directory, but it seems to look for it in /usr/share/perl6

[14:28] <Juerd> Oh, that's another thing. I write perl5 for tiny perls where even 'strict.pm' is not shipped by default.

[14:28] <mst> aha

[14:29] <Juerd> So I have to at least keep up with raw perl skills :D

[14:29] <nine> spider-mario: can you tell me more about how exactly you install rakudo?

[14:29] <Juerd> (Note that this is why in Net::MQTT::Simple, use strict is commented out!)

[14:29] <spider-mario> I am actually packaging it

[14:29] <spider-mario> the build script runs Configure.pl --prefix=/usr --backends=moar

[14:29] <spider-mario> then make,

[14:29] <Juerd> mst: Haven't tried Moo at all yet.

[14:29] <spider-mario> and finally make install DESTDIR=(some packaging directory)

[14:29] <mst> Juerd: lots of my code is designed to run given only a full basic perl5 install and a single script, hence Moo and App::FatPacker

[14:30] <mst> but I don't generally have to go smaller than that

[14:30] <mst> Moo is basically the Moose surface syntax with no metaprotocol

[14:30] <Juerd> Sounds perfectly usable

[14:30] <mst> but it fakes having been a Moose class all along if you point Moose at it

[14:30] <dalek> doc: d9a902c | Altai-man++ | doc/Language/operators.pod6:

[14:30] <dalek> doc: Make hyper operators searchable

[14:30] <dalek> doc: review: https://github.com/perl6/doc/commit/d9a902c8e5

[14:30] <mst> which means you can port thing Moose -> Moo and things subclassing it using Moose don't even notice

[14:30] <mst> I was kinda proud of making that work ;)

[14:31] *** pmurias joined
[14:32] *** kurahaupo joined
[14:32] *** kurahaupo left
[14:35] *** kurahaupo joined
[14:36] *** kurahaupo left
[14:37] <spider-mario> okay, bisect in progress

[14:37] <nine> spider-mario: no need to

[14:38] <spider-mario> ah

[14:38] <mst> Juerd: anyway, sorry for my slightly exothermic response, but I've been hearing 'moose is slow' for a lot of years and it's almost always (1) startup time (2) forgot make_immutable (3) did something that would've been slow if you'd done it by hand but hadn't thought about it

[14:38] <mst> Juerd: and there was lots of actual FUD for quite a while, so it makes me twitch

[14:39] <nine> spider-mario: trying to reproduce it here as I actually thought I had fixed this

[14:40] *** khw joined
[14:41] <nine> spider-mario: ok, I see it here

[14:41] <spider-mario> cool

[14:49] *** kurahaupo joined
[14:55] *** kurahaupo left
[14:55] <nine> This is most frustrating :( I've already had a fix for the Staging issue. But when I cleaned up my changes and put them into distinct commits it looked like I don't actually need this particular change, so I removed it.

[14:55] <nine> I've got no idea why it did not explode in my tests as I did exactly the same as the failing test now.

[14:57] *** kurahaupo joined
[14:58] *** pmurias_ joined
[15:00] <nine> spider-mario: please try again with this patch: https://github.com/rakudo/rakudo/commit/d1604b5c8e78c73b2fbf6490f51a33232ee64341

[15:01] *** pmurias left
[15:03] <spider-mario> the patch applies cleanly but it still doesn’t seem to work

[15:04] <spider-mario> wait

[15:04] <spider-mario> not sure I applied it correctly

[15:04] <spider-mario> let me try again

[15:04] <spider-mario> (sorry)

[15:05] * holyghost is going to prepare himself a noodles-provencale (own mix)

[15:07] <spider-mario> cool, it worked

[15:07] <spider-mario> thanks, nine :)

[15:17] *** kurahaupo left
[15:21] *** Xliff left
[15:30] *** vimal2012 joined
[15:32] *** vimal2012 left
[15:53] <ugexe> m: sub foo($message, Str :@bar) { say $message }; foo("xxx") # what is the rational for performing a type check on an optional parameter that was not passed?

[15:53] <camelia> rakudo-moar d1604b: OUTPUT«Type check failed in binding @bar; expected Positional[Str] but got Array ($[])␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:56] <gfldex> m: sub foo($message, Str @bar?) { say $message }; foo("xxx")

[15:56] <camelia> rakudo-moar d1604b: OUTPUT«Type check failed in binding @bar; expected Positional[Str] but got Array ($[])␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:57] <gfldex> ugexe: that's a bug

[15:57] *** Tonik joined
[15:57] <ugexe> m: my Array[Empty] @a;

[15:57] <camelia> rakudo-moar d1604b: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤An exception occurred while parameterizing Array␤at <tmp>:1␤Exception details:␤  5===SORRY!5=== Error while compiling ␤  Parameter 't' requires a type object of type Slip, but an object instance …»

[15:58] <ugexe> or just `say Array[Empty]`

[15:59] <ugexe> gfldex: do you know if its a known bug?

[15:59] *** marcel_ joined
[16:02] *** Xliff joined
[16:02] <moritz> Empty is an instance, not a type

[16:03] <moritz> so the error message is correct, IMHO

[16:03] <moritz> m: say Empty.^name

[16:03] <camelia> rakudo-moar d1604b: OUTPUT«Slip␤»

[16:06] <gfldex> ugexe: i would have to query RT

[16:11] *** j joined
[16:11] *** j is now known as Guest24412

[16:12] *** holyghost left
[16:13] *** TreyHarr1 left
[16:14] *** bob777 left
[16:20] *** holyghost joined
[16:22] *** holyghost left
[16:22] *** adu joined
[16:23] *** holyghost joined
[16:24] *** jack_rabbit left
[16:25] *** Ven left
[16:26] *** canopus left
[16:27] *** canopus joined
[16:30] *** Ven joined
[16:31] *** RabidGravy left
[16:35] *** TreyHarr1 joined
[16:38] *** rindolf left
[16:38] *** dvinciguerra_ joined
[16:40] *** Ven left
[16:44] *** rindolf joined
[16:46] <gfldex> löliblöggedagain https://gfldex.wordpress.com/2016/07/17/disecting-subsets/

[16:46] *** RabidGravy joined
[16:50] *** pmurias_ left
[16:50] *** Ven joined
[16:56] *** Ven left
[17:02] <stmuk> http://pl6anet.org/drop/rakudo-star-2016.07-RC0.tar.gz

[17:05] *** omegaz left
[17:10] *** Ven joined
[17:11] *** Ven left
[17:13] *** captian-adequate joined
[17:15] *** iH2O joined
[17:17] *** pmqs_ left
[17:25] *** canopus left
[17:27] <ugexe> hmm why doesnt bisectable work with private messages?

[17:28] *** RabidGravy left
[17:28] <ugexe> bisect: https://gist.github.com/ugexe/7ce08d3ad4cfd36f275c437ba9713471

[17:28] <bisectable> ugexe: It looks like a URL, but mime type is 'text/html; charset=utf-8' while I was expecting 'text/plain; charset=utf-8'. I can only understand raw links, sorry.

[17:29] <ugexe> bisect: https://gist.githubusercontent.com/ugexe/7ce08d3ad4cfd36f275c437ba9713471/raw/e1deedcbc120a53757d8dd78602bb8bf51b21c3b/gistfile1.txt

[17:29] <bisectable> ugexe: Successfully fetched the code from the provided URL.

[17:29] <bisectable> ugexe: bisect log: https://gist.github.com/e0a28162b19f601616aa8776f24dd027

[17:29] <bisectable> ugexe: (2016-07-04) https://github.com/rakudo/rakudo/commit/5581b24

[17:29] *** pmqs_ joined
[17:29] *** canopus joined
[17:30] *** Ven joined
[17:30] *** iH2O left
[17:31] *** huggable left
[17:32] *** colomon joined
[17:38] *** kid51 joined
[17:43] *** colomon_ joined
[17:44] *** colomon left
[17:44] *** colomon_ is now known as colomon

[17:44] *** skids joined
[17:47] *** holyghost left
[17:49] <Ben_Goldberg> m: :{ 0 => 42, "0" => 43 }{0}.say;

[17:49] <camelia> rakudo-moar 68b66c: OUTPUT«42␤»

[17:49] <Ben_Goldberg> m: :{ 0 => 42, "0" => 43 }{"0"}.say;

[17:49] <camelia> rakudo-moar 68b66c: OUTPUT«43␤»

[17:49] <Ben_Goldberg> m: :{ 0 => 42, "0" => 43 }{0, "0"}.say;

[17:49] <camelia> rakudo-moar 68b66c: OUTPUT«(42 43)␤»

[17:50] <Ben_Goldberg> m: { 0 => 42, "0" => 43 }{0, "0"}.say;

[17:50] <camelia> rakudo-moar 68b66c: OUTPUT«(43 43)␤»

[17:51] <Ben_Goldberg> m: for { 1 => 42, 2 => 43 } -> $_ { .say }

[17:51] <camelia> rakudo-moar 68b66c: OUTPUT«1 => 42␤2 => 43␤»

[17:51] <gfldex> m: :{ 0 => 42, "0" => 43 }.^name.say

[17:51] *** colomon left
[17:51] <camelia> rakudo-moar 68b66c: OUTPUT«Hash[Mu,Any]␤»

[17:51] <gfldex> m: { 0 => 42, "0" => 43 }.^name.say

[17:51] <camelia> rakudo-moar 68b66c: OUTPUT«Hash␤»

[17:55] <gfldex> what exactly is :{} ?

[17:56] <FROGGS_> an object hash

[17:56] <FROGGS_> where the keys can be other things than only Str's

[17:57] <gfldex> ENOINDEX

[17:59] <dalek> doc: eea8b55 | (Wenzel P. P. Peppmeyer)++ | doc/Type/Hash.pod6:

[17:59] <dalek> doc: index object hash and :{}

[17:59] <dalek> doc: review: https://github.com/perl6/doc/commit/eea8b55d46

[18:01] <Ben_Goldberg> m: for { 1 => 42, 2 => 43 } -> [.key, .value] { .say }

[18:01] <camelia> rakudo-moar 68b66c: OUTPUT«5===SORRY!5===␤Expression needs parens to avoid gobbling block␤at <tmp>:1␤------> 3for { 1 => 42, 2 => 43 }7⏏5 -> [.key, .value] { .say }␤Missing block (apparently claimed by expression)␤at <tmp>:1␤------> 3for { 1 => 42, 2 => 43 } …»

[18:03] *** kanishka left
[18:06] *** domidumont left
[18:07] <parabolize> gfldex: its documented 2 headings above that as well: https://docs.perl6.org/type/Hash#Non-string_keys

[18:08] <gfldex> parabolize: we don't deal well with duplicated index entries. So it's better to index at where it is explained in detail.

[18:08] <gfldex> or better html does not deal well with duplicated anchors

[18:09] <gfldex> a proper typesetting system would check if the anchors are on the same physical page and only generate one index entry

[18:14] <Ben_Goldberg> m: my %h = 1 => 42, 2 => 43; for %h -> [.key, .value] { .say }

[18:14] <camelia> rakudo-moar 68b66c: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3my %h = 1 => 42, 2 => 43; for %h -> [7⏏5.key, .value] { .say }␤    expecting any of:␤        formal parameter␤»

[18:15] <Ben_Goldberg> m: my %h = 1 => 42, 2 => 43; for %h { .say }

[18:15] <camelia> rakudo-moar 68b66c: OUTPUT«1 => 42␤2 => 43␤»

[18:19] <Ben_Goldberg> m: my %h = 1 => 42, 2 => 43; for %h -> (:key($foo), :value($bar)) { say "$foo ⇒ $bar" }

[18:19] <camelia> rakudo-moar 68b66c: OUTPUT«1 ⇒ 42␤2 ⇒ 43␤»

[18:20] <gfldex> m: my %h = 1 => 42, 2 => 43; for %h.kv -> $foo, $bar { say "$foo ⇒ $bar" }

[18:20] <camelia> rakudo-moar 68b66c: OUTPUT«1 ⇒ 42␤2 ⇒ 43␤»

[18:21] <gfldex> hash deconstruction is very useful in routine calls tho

[18:23] <Ben_Goldberg> AFAICS, Destructuring parameters are solely and exclusively documented in https://docs.perl6.org/type/Signature#Destructuring_Parameters ... there ought to be more links to this and examples of it.

[18:24] <gfldex> there are plenty of links to /type/Signature but I do agree that many readers wont follow them.

[18:26] <gfldex> $ grep '/type/Signature' html/links.txt | uniq | wc -l

[18:26] <gfldex> 39

[18:26] <Ben_Goldberg> I think at least the doc for class Hash, in the part "Looping over hash keys and values" should show an example which uses destructuring instead of .kv .

[18:26] *** Ven left
[18:26] *** b2gills joined
[18:26] <gfldex> but then, the docs are not the to be written book called "Learning to program in Perl 6"

[18:28] <Ben_Goldberg> Are you somehow worried that Perl 6 will be called "the language with too much documentation" ? :)

[18:29] <gfldex> i am worried about the maintainability of the docs. Every time something is changed or added (every Christmas I hope) we have to check the docs. Also somebody has to read all that stuff. If you render all .pods into one big html-file it's close to 500 pages A4 already.

[18:29] *** Ven joined
[18:30] *** pmqs_ left
[18:32] <gfldex> $ cat `find doc/ -iname '*.pod6'` | wc -l

[18:32] <gfldex> 45597

[18:34] <Ben_Goldberg> On doc.perl6.org, I notice that each class's documentation has one or more sections, "routines supplied by class X" where X is a superclass... if you removed these sections, you could make the html versions much much smaller.

[18:34] <Ben_Goldberg> Especially when there's so much redundancy.

[18:36] <Ben_Goldberg> I think we should separate out those parts into some small common files, which in turn get pulled into the html *on demand*, in the user's browser.

[18:36] <dalek> doc: a1ff75d | (Wenzel P. P. Peppmeyer)++ | doc/Type/Hash.pod6:

[18:36] <dalek> doc: link from Hash to destructuring in Signature

[18:36] <dalek> doc: review: https://github.com/perl6/doc/commit/a1ff75d8ba

[18:36] <gfldex> the one page version does not contain any auto generated html

[18:40] <gfldex> btw. if we rendered it to LaTeX it would be much more then 500 pages because sections are not allowed to begin on a left page. That and a few more rules lead to planty of blank or halve empty pages.

[18:44] *** ugexe left
[18:45] *** domidumont joined
[18:45] *** ugexe joined
[18:47] *** freezerburnv joined
[18:47] <freezerburnv> Is it possible to define a custom ACCEPTS method on a class?

[18:47] <gfldex> freezerburnv: yes

[18:47] <psch> m: class A { method ACCEPTS { say "sure" } }; say "foo" ~~ A; say 5 ~~ A

[18:47] <camelia> rakudo-moar 68b66c: OUTPUT«Too many positionals passed; expected 1 argument but got 2␤  in method ACCEPTS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:47] <psch> aw

[18:48] <psch> but you of course need a param 

[18:48] <psch> m: class A { method ACCEPTS($) { say "sure" } }; say "foo" ~~ A; say 5 ~~ A

[18:48] <camelia> rakudo-moar 68b66c: OUTPUT«sure␤True␤sure␤True␤»

[18:48] <freezerburnv> gfldex, Alright. Well I'm running into an interesting case where I theoretically should have a working ACCEPTS method, and it's returning False, but what the code that uses it is getting is True

[18:48] <freezerburnv> I can put up a gist

[18:50] <psch> (gisting long non-working code)++

[18:51] <timotimo> can you make sure it's running the ACCEPTS method you're expecting it to?

[18:51] <gfldex> also: https://packages.debian.org/search?searchon=contents&keywords=gist-paste&mode=path&suite=stable&arch=any

[18:51] *** domidumont left
[18:52] <freezerburnv> https://gist.github.com/anonymous/e6859b1ff63fcdda0853098ff5b9571a

[18:52] <freezerburnv> timotimo, It is, I have output in the ACCEPTS method

[18:52] <psch> m: https://gist.github.com/anonymous/e6859b1ff63fcdda0853098ff5b9571a

[18:52] <camelia> rakudo-moar 68b66c: OUTPUT«True␤True␤»

[18:52] <freezerburnv> At least in my code, in the gist I don't

[18:52] <psch> freezerburnv: looks like the gist works on camelia?  you're expecting True, right?

[18:53] <freezerburnv> psch, THe first should be true, the second should be False

[18:53] <freezerburnv> bar != foo in the second one

[18:53] <psch> oh, i didn't look at the gist yet, sorry

[18:53] <timotimo> m: say "foo" ~~ "bar"

[18:53] <camelia> rakudo-moar 68b66c: OUTPUT«False␤»

[18:53] <timotimo> oh

[18:53] <timotimo> hehe

[18:53] <psch> m: sub f { return False and die }; f

[18:53] <camelia> rakudo-moar 68b66c: ( no output )

[18:53] <timotimo> the and is looser than return

[18:53] <psch> timotimo++ :)

[18:54] <timotimo> so you've got "(return Blah) and $foo ~~ $bar"

[18:54] <freezerburnv> timotimo, -_- OH

[18:54] <freezerburnv> That was not something I was expecting

[18:54] *** tomaw left
[18:54] *** Actualeyes left
[18:54] *** Ben_Goldberg left
[18:54] *** silug left
[18:54] *** Walex left
[18:54] *** CIAvash left
[18:54] *** sno left
[18:54] *** esh left
[18:54] *** xinming_ left
[18:54] *** pyrimidine left
[18:54] *** Util left
[18:54] *** jercos left
[18:54] *** autarch left
[18:54] *** DrForr left
[18:54] *** ranguard left
[18:54] *** konobi left
[18:54] *** notbenh left
[18:54] *** Ulti left
[18:54] *** nebuchadnezzar left
[18:54] *** Ven left
[18:54] *** khw left
[18:54] *** firstdayonthejob left
[18:54] *** mtj_ left
[18:54] *** committable left
[18:54] *** dj_goku left
[18:54] *** hoelzro left
[18:54] *** TeamBlast left
[18:54] *** chris2 left
[18:54] *** b^_^d left
[18:54] *** Amnez777 left
[18:54] *** mst left
[18:54] *** flaviusb left
[18:54] *** Roamer` left
[18:54] *** lnrdo left
[18:54] *** keix left
[18:54] *** freeze left
[18:54] *** vike left
[18:54] *** dg left
[18:54] *** mindos left
[18:54] *** danaj left
[18:54] *** zhmylove left
[18:54] *** remmie left
[18:54] *** integral_ left
[18:54] *** tbrowder left
[18:54] *** rmmm left
[18:54] *** timeless left
[18:54] *** rodarmor left
[18:54] *** riatre left
[18:54] *** zostay left
[18:54] *** rblackwe left
[18:54] *** m0ltar left
[18:54] *** sunnavy left
[18:54] *** moritz left
[18:54] *** mithaldu_ left
[18:54] *** SHODAN left
[18:54] *** xfix left
[18:54] *** xdbr left
[18:54] *** SmokeMachine____ left
[18:54] *** sQuEE left
[18:54] *** Guest24412 left
[18:54] *** jkramer left
[18:54] *** avenj left
[18:54] *** tomboy64 left
[18:54] *** cpage_ left
[18:54] *** tadzik left
[18:54] *** user9 left
[18:54] *** sftp left
[18:54] *** bpmedley left
[18:54] *** kalkin- left
[18:54] *** maddingue left
[18:54] *** bisectable left
[18:54] *** ilbot3 left
[18:54] *** cognominal left
[18:54] *** ShimmerFairy left
[18:54] *** xiaomiao left
[18:54] *** profan left
[18:54] *** buharin left
[18:54] *** skids left
[18:55] *** jcallen_ left
[18:55] *** darutoko left
[18:55] *** mr-foobar left
[18:55] *** jsimonet left
[18:55] *** Khisanth left
[18:55] *** retupmoca left
[18:55] *** dalek left
[18:55] *** obfusk left
[18:55] *** roguelazer left
[18:55] *** domm left
[18:55] *** gtodd left
[18:55] *** alnewkirk left
[18:55] *** ugexe left
[18:55] *** b2gills left
[18:55] *** kaare_ left
[18:55] *** jeek left
[18:55] *** MadcapJake left
[18:55] *** Senji left
[18:55] *** benchable left
[18:55] *** Sgeo left
[18:55] *** ssm left
[18:55] *** ambs left
[18:55] *** mls left
[18:55] *** japanoise left
[18:55] *** broquaint left
[18:55] *** geekosaur left
[18:55] *** hobbs left
[18:55] *** solarbunny left
[18:55] *** freezerburnv left
[18:55] *** Tonik left
[18:55] *** huf left
[18:55] *** ggoebel left
[18:55] *** M-matthew left
[18:55] *** xdg left
[18:55] *** robm left
[18:55] *** Woodi left
[18:55] *** El_Che left
[18:55] *** sivoais left
[18:55] *** pierrot left
[18:55] *** nine left
[18:55] *** edenc left
[18:55] *** tony-o left
[18:55] *** khagan left
[18:55] *** perigrin left
[18:55] *** xxpor left
[18:55] *** skaji left
[18:55] *** luis left
[18:55] *** TreyHarr1 left
[18:55] *** _28_ria left
[18:55] *** wamba left
[18:55] *** cooper left
[18:55] *** aindilis left
[18:55] *** cyphase left
[18:55] *** camelia left
[18:55] *** telex left
[18:55] *** infina left
[18:55] *** Praise left
[18:55] *** Celelibi left
[18:55] *** MilkmanDan left
[18:55] *** inokenty left
[18:55] *** pochi left
[18:55] *** kent\n left
[18:55] *** captian-adequate left
[18:55] *** adu left
[18:55] *** Xliff left
[18:55] *** stmuk left
[18:55] *** woolfy left
[18:55] *** sjn left
[18:55] *** ribasushi left
[18:55] *** Frameless left
[18:55] *** gnull left
[18:55] *** john51 left
[18:55] *** dogbert17 left
[18:55] *** matt_ left
[18:55] *** amoe_ left
[18:55] *** Hotkeys left
[18:55] *** kid51 left
[18:55] *** setty1 left
[18:55] *** girafe left
[18:55] *** noganex left
[18:55] *** molaf left
[18:55] *** TEttinger left
[18:55] *** samb1 left
[18:55] *** a3r0 left
[18:55] *** masak left
[18:55] *** pmichaud left
[18:55] *** TimToady left
[18:55] *** petercommand left
[18:55] *** daxim left
[18:55] *** PerlJam left
[18:55] *** clkao left
[18:55] *** mephinet- left
[18:55] *** cibs left
[18:55] *** rindolf left
[18:55] *** dvinciguerra_ left
[18:55] *** marcel_ left
[18:55] *** aries_liuxueyang left
[18:55] *** Cabanossi left
[18:55] *** FROGGS_ left
[18:55] *** susmus left
[18:55] *** gcole left
[18:55] *** Sigyn left
[18:55] *** nightfrog left
[18:55] *** leedo left
[18:55] *** awwaiid left
[18:55] *** [ptc] left
[18:56] *** rafl left
[18:56] *** skarn left
[18:56] *** hahainternet left
[18:56] *** cxreg left
[18:58] *** mohae left
[19:14] *** ilogger2 joined
[19:14] *** ChanServ sets mode: +v ilogger2

[19:14] *** shadowpaste joined
[19:14] *** M-Illandan joined
[19:15] *** kst joined
[19:18] *** trnh joined
[19:19] *** jack_rabbit joined
[19:21] *** travis-ci joined
[19:21] <travis-ci> Doc build passed. Wenzel P. P. Peppmeyer 'doc trappy and/or etc'

[19:21] <travis-ci> https://travis-ci.org/perl6/doc/builds/145391691 https://github.com/perl6/doc/compare/a1ff75d8ba51...234014ff8bbd

[19:21] *** travis-ci left
[19:21] *** cognominal joined
[19:24] *** jack_rabbit left
[19:25] *** TreyHarr1 joined
[19:34] *** _ramix_ joined
[19:35] *** _ramix_ left
[19:38] <dalek> doc: a98df89 | (Wenzel P. P. Peppmeyer)++ | doc/Language/operators.pod6:

[19:38] <dalek> doc: link from loose operators to traps

[19:38] <dalek> doc: review: https://github.com/perl6/doc/commit/a98df89c61

[19:53] *** dwarring joined
[19:54] *** jack_rabbit joined
[19:57] *** AlexDaniel joined
[20:06] *** espadrine joined
[20:16] <Ben_Goldberg> m: say( "a" ~| "c" );

[20:16] <camelia> rakudo-moar 68b66c: OUTPUT«c␤»

[20:16] <Ben_Goldberg> m: say( "a" ~| "b" );

[20:16] <camelia> rakudo-moar 68b66c: OUTPUT«c␤»

[20:16] <TEttinger> m: say("aaa" ~| "bcd");

[20:16] <camelia> rakudo-moar 68b66c: OUTPUT«cce␤»

[20:17] <Ben_Goldberg> Why doesn't https://docs.perl6.org/language/traps#Junctions mention ~|, ~&, ~^ ?

[20:21] <Frameless> Ben_Goldberg: because I didn't think of it. PR's are very welcome :)

[20:22] <Frameless> Ben_Goldberg: actually, the real reason seems to be that they aren't in Operators doc either https://docs.perl6.org/language/operators

[20:23] *** espadrine left
[20:25] <ugexe> tbrowder: are you aware `npq` is a typo?

[20:25] *** trnh left
[20:29] *** Ven joined
[20:29] <tbrowder>  Yes, and that's my complaint.  It's a dyslexic thing (reversing a pair of characters) that gets worse as I age, but I expect the error to be caught during build time, not run time.  It makes my development efforts much slower than it should be!

[20:31] <tbrowder> The bug report is probably not very clear--I'll add some words. Thanks for pointing that out, ugexe.

[20:34] <TEttinger> tbrowder: just curious, but have you ever tried the slightly-tweaked fonts that avoid symmetry in similar letters and change certain letter shapes?

[20:34] <moritz> tbrowder: if you use a somewhat intelligent editor, you can configure it to hilight `npq` as a typo

[20:34] <TEttinger> I've seen them mentioned in regards to user style sheets

[20:35] <moritz> tbrowder: namespace lookups are runtime by definition; you're allowed to create them in an EVAL and reference them where a compiler has know chance of knowing that you'll later create them dynamically

[20:35] <moritz> that makes typo detection at compile time basically impossible

[20:36] <moritz> and since regular, non-namspaced function lookups are compile time, its kinda important to keep this escape valve to allow some dynamic features

[20:36] * moritz should read the bug report before assuming too much

[20:37] <moritz> which issue is that? I can't find it in the backlog

[20:37] <moritz> (at least not in the last few pages of backlog)

[20:42] <lizmat> m: foo::bar  # note this is also runtime

[20:42] <camelia> rakudo-moar 68b66c: OUTPUT«Could not find symbol '&bar'␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[20:43] <timotimo> right

[20:44] <lizmat> although one could argue it *could* be made a compile time error ?

[20:44] <tbrowder> The "npq" as alphabetical order has strong mental attachments and is hard to overcome, but I guess I'll learn to deal with it. Thanks all.  I'll close the issue.

[20:44] *** jack_rabbit left
[20:45] <tbrowder> moritz: I'm using emacs, know how I can flag the typo?

[20:45] <moritz> tbrowder: dunno, I'm not an emacs user

[20:45] *** akiym joined
[20:46] <moritz> lizmat: I don't think it can be a compile time rror

[20:46] <geekosaur> https://www.emacswiki.org/emacs/AutoCorrection

[20:46] <moritz> m: use MONKEY-SEE-NO-EVAL; EVAL q[ module Foo { our bar() { say 24 }}]; Foo::bar()

[20:46] <camelia> rakudo-moar 68b66c: OUTPUT«5===SORRY!5===␤Type 'bar' is not declared␤at /home/camelia/EVAL_0:1␤------> 3 module Foo { our bar7⏏5() { say 24 }}␤Malformed our␤at /home/camelia/EVAL_0:1␤------> 3 module Foo { our7⏏5 bar() { say 24 }}␤␤»

[20:46] <geekosaur> you can define "npq" as an abbrev that gets corrected to "nqp", or configure flyspell to highlight it as an error

[20:47] <moritz> m: use MONKEY-SEE-NO-EVAL; EVAL q[ module Foo { our sub bar() { say 24 }}]; Foo::bar()

[20:47] <camelia> rakudo-moar 68b66c: OUTPUT«24␤»

[20:47] <moritz> this is a perfectly legal Perl 6 program, and a reason you can't compile-time catch missing namespace lookups at compile time

[20:50] <tbrowder>  Issue is closed.

[20:50] <lizmat> moritz++

[20:52] *** kurahaupo joined
[21:05] * TimToady waves from Roma

[21:14] *** labster joined
[21:15] *** Ven left
[21:17] *** pmqs joined
[21:19] *** RabidGravy joined
[21:30] *** zacts joined
[21:40] *** pmqs left
[21:40] *** freezerburnv joined
[21:46] *** Xliff joined
[21:47] *** nebuchadnezzar joined
[21:48] *** yqt joined
[21:52] *** pmqs joined
[21:54] *** TreyHarr1 left
[21:56] *** TreyHarr1 joined
[21:59] *** neuron joined
[22:00] <neuron> Hi

[22:00] *** freezerburnv left
[22:00] <neuron> I have my class Object is repr<CPPStruct> { ... }

[22:01] <neuron> $a = Object.new(...);

[22:01] <neuron> now is there a way to have a method of the Object class to be called if I try to convert it to bool?

[22:01] <neuron> For example in say "yes" if $a;

[22:02] <timotimo> sure, just give it the Bool method and don't mark it "native"

[22:02] <timotimo> at least i think that's how

[22:02] <neuron> Ah, _that_ simple?

[22:03] *** pmqs left
[22:03] <timotimo> i think the cppstruct doesn't make a difference here

[22:03] <timotimo> but *shrug* i never tried to use it yet :S

[22:06] *** kurahaupo left
[22:07] <neuron> Many thans timotimo!

[22:08] *** colomon joined
[22:08] <timotimo> m: use NativeCall; my class Foo is repr<CPPStruct> { method Bool { say "Aye" } }; say so Foo.new

[22:08] <camelia> rakudo-moar 242baf: OUTPUT«Aye␤True␤»

[22:09] *** RabidGravy left
[22:18] *** pmqs joined
[22:18] <neuron> So, how does p6 know that Bool method is for converting to Bool? Is it becase of the upper case letter in front of method name?

[22:20] <gfldex> neuron: gen/moar/m-CORE.setting:9718:multi sub prefix:<so>(Mu \a) { a.Bool }

[22:20] <timotimo> it's a convention that's upheld in different parts of the compiler and its core library

[22:20] <timotimo> when you have a coercive type, for example, it'll call the method of that name

[22:22] <konobi> ha! just had a thought about using terralang along with lua-Coat (ie: moose) and IOC to make a configurable NQP backend

[22:22] <yoleaux> 16 Jul 2016 11:42Z <pmurias> konobi: using v8-profiler and loading the profiles in chrome turned out the thing I needed for profiling

[22:22] <konobi> ah, cool

[22:23] <konobi> yoleaux: tell pmurias were you able to get the flamegraph representations?

[22:23] <neuron> gfldex, timotimo: Ah, I see. Nice convention. Than you

[22:24] <konobi> bah, can't remember the syntax for leaving notes

[22:24] <gfldex> .tell konobi that's how it's done

[22:24] <yoleaux> gfldex: I'll pass your message to konobi.

[22:25] <konobi> .tell pmurias were you able to get the flamegraph representations from the chrome devtools?

[22:25] <yoleaux> 22:24Z <gfldex> konobi: that's how it's done

[22:25] <yoleaux> konobi: I'll pass your message to pmurias.

[22:27] *** TreyHarr1 left
[22:32] <dalek> doc: e8d31be | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/5to6-perlfunc.pod6:

[22:32] <dalek> doc: ｢state｣ is documented

[22:32] <dalek> doc: review: https://github.com/perl6/doc/commit/e8d31be1f3

[22:34] *** girafe2 joined
[22:34] *** dvinciguerra_ joined
[22:58] *** BenGoldberg joined
[23:09] *** yqt left
[23:15] *** TreyHarr1 joined
[23:18] *** girafe2 left
[23:24] *** stevieb joined
[23:24] <stevieb> any chance someone could take a look at http://perlmonks.org/?node_id=1167927 and see if they can help?

[23:29] *** TreyHarr1 left
[23:32] *** Praise joined
[23:35] *** ovibos joined
[23:36] *** Madcap^Jake^ joined
[23:36] *** Madcap^Jake^ is now known as MadcapJake

[23:40] *** TreyHarr1 joined
[23:41] *** Xliff_ joined
[23:43] <ugexe> m: my @a = 1,2,3,4; say <<a b {"b".succ} @a>> # Why isn't @a interpolated?

[23:43] <camelia> rakudo-moar 242baf: OUTPUT«(a b c @a)␤»

[23:43] *** Xliff left
[23:44] <ugexe> sure {@a} but its not required for $var

[23:49] *** john51 joined
[23:52] <timotimo> maybe because you should [] it?

[23:53] <gfldex> m: my @a = 1,2,3,4; say "1@a2"

[23:53] <camelia> rakudo-moar 242baf: OUTPUT«1@a2␤»

[23:53] <gfldex> m: my @a = 1,2,3,4; say "1@a[]2"

[23:53] <camelia> rakudo-moar 242baf: OUTPUT«11 2 3 42␤»

[23:53] <gfldex> ugexe: <> and «» behave in the same way as '' and ""

[23:55] <gfldex> ugexe: see http://design.perl6.org/S02.html#Relationship_between_%3C%3E_and_%C2%AB%C2%BB

[23:55] <ugexe> ah. ive always made a habit of using {...} for all interpolation inside "" so I didnt realize 

[23:56] <gfldex> and asking for the zen-slice on @-interolations is because of [email@hidden.address] to be much more common then actual @a interpolation

[23:56] *** Actualeyes joined
[23:58] <ugexe> i think i've known and forgot about this more than once

