[00:00] <timotimo> m: sub dies() { die "dead meat" }; dies orelse say "oh no! $_"

[00:00] <camelia> rakudo-moar 74d0e3: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    orelse used at line 1␤␤»

[00:00] <timotimo> m: sub dies() { die "dead meat" }; dies() orelse say "oh no! $_"

[00:00] <camelia> rakudo-moar 74d0e3: OUTPUT«dead meat␤  in sub dies at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[00:00] <geekosaur> or smartmatch against Failure, or several other ways

[00:00] <timotimo> m: sub dies() { die "dead meat" }; (try dies()) orelse say "oh no! $_"

[00:00] <camelia> rakudo-moar 74d0e3: OUTPUT«Use of Nil in string context␤  in block  at <tmp> line 1␤oh no! ␤»

[00:00] <timotimo> :\

[00:00] <timotimo> m: sub dies() { die "dead meat" }; (try dies()) orelse say "oh no! $!"

[00:00] <camelia> rakudo-moar 74d0e3: OUTPUT«oh no! dead meat␤»

[00:00] <timotimo> there we go, that could be right

[00:01] <samcv> cool

[00:02] <timotimo> i don't work with this style of writing error handling often

[00:02] <timotimo> m: sub dies() { die "dead meat" }; (try dies()) or say "oh no! $!"

[00:02] <camelia> rakudo-moar 74d0e3: OUTPUT«oh no! dead meat␤»

[00:02] <timotimo> ok, with or it also works

[00:03] <samcv> hmm. not sure why False or die $! doesn't work. is that a bug?

[00:03] <samcv> is that what it's supposed to do

[00:04] *** canopus left
[00:04] *** bjz joined
[00:04] <samcv> or seemed to work for Juerd using an older rakudo

[00:05] <timotimo> there is no $! for False or die $!

[00:05] *** cpage_ joined
[00:05] <samcv> well. true. but

[00:05] <timotimo> i mean, what is it supposed to be set to?

[00:05] <samcv> for open or whatever

[00:05] <timotimo> and what's supposed to set it?

[00:05] <timotimo> well, if open dies (instead of failing), it'll go through exception stuff like stack unwind and such

[00:05] <samcv> well disregard what i said about False, but with open 'foo' or die $!, it worked for Juerd but not on my rakudo

[00:05] <timotimo> so it interacts with try/catch, not with and/or

[00:05] <samcv> but orelse works

[00:06] <timotimo> juerd's rakudo is really old o_O

[00:06] <timotimo> also ... using the REPL is a bad idea

[00:06] <Juerd> If it's a bad idea, why is it the default thing that opens?

[00:07] <samcv> well open 'foo' orelse die "$!"; doesn't work on my rakudo eeither :\

[00:07] <samcv> timotimo, i haven't been using REPL, just runing the file normally

[00:08] *** pierre_ joined
[00:10] <timotimo> Juerd: because it's not as bad as i make it out to be

[00:10] <timotimo> when it works, it works

[00:10] <timotimo> however, it has many cases in which it causes very strange behavior that you won't be able to reproduce when you run code from a file

[00:10] <samcv> ^

[00:11] <timotimo> it's bedtime for me now

[00:11] <timotimo> adios! :)

[00:11] <samcv> bye :)

[00:12] *** canopus joined
[00:14] <samcv> well  sub dies() { die "dead meat" }; (try dies()) or say "oh no! $!"

[00:14] <samcv> that works too

[00:14] *** eliasr left
[00:15] <samcv> i kinda think it should work. because open 'foo'; say $!; works fine

[00:15] <samcv> but i'm not an expert

[00:15] *** dataf4l joined
[00:20] *** dataf4l left
[00:22] <[Coke]> I disagree that using the REPL is a bad idea. 

[00:24] *** AlexDaniel left
[00:26] <dalek> doc: 12d4ef5 | coke++ | doc/Language/nativecall.pod6:

[00:26] <dalek> doc: #828 - remove reference to zavolaj

[00:26] <dalek> doc: review: https://github.com/perl6/doc/commit/12d4ef523c

[00:26] *** pdcawley joined
[00:27] *** pdcawley left
[00:28] *** pdcawley joined
[00:33] *** Derperperd joined
[00:41] <dalek> doc: 03ed944 | (Tom Browder)++ | doc/Language/tables.pod6:

[00:41] <dalek> doc: remove restriction 5

[00:41] <dalek> doc: 

[00:41] <dalek> doc: users **may** be warned, though

[00:41] <dalek> doc: review: https://github.com/perl6/doc/commit/03ed944604

[00:45] <dalek> doc: 9bb8ed9 | (Tom Browder)++ | doc/Language/tables.pod6:

[00:45] <dalek> doc: remove a no-longer-valid bad example

[00:45] <dalek> doc: review: https://github.com/perl6/doc/commit/9bb8ed93ca

[00:52] <dalek> doc: bd8f673 | (Tom Browder)++ | doc/Language/tables.pod6:

[00:52] <dalek> doc: correct results due to lifting of restriction 5

[00:52] <dalek> doc: review: https://github.com/perl6/doc/commit/bd8f6739ab

[00:53] <iBakeCake> tbrowder++ thanks.

[00:55] <tbrowder> iBakeCake: you're welcome, I bow to more perceptive minds

[00:55] <iBakeCake> I think the future will be the real test :)

[00:56] <tbrowder> I hope the results are good for mankind.

[01:01] *** dataangel joined
[01:22] *** geekosaur left
[01:23] *** geekosaur joined
[01:33] *** pierre_ left
[01:34] *** Actualeyes joined
[01:36] *** sufrostico left
[01:42] *** pierre_ joined
[01:46] *** pierre_ left
[02:02] *** Jesmaybe joined
[02:17] *** bjz left
[02:32] *** Jesmaybe left
[02:32] *** cgfbee left
[02:33] *** cgfbee joined
[02:38] *** pierre_ joined
[02:39] *** bjz joined
[02:47] *** Herby__ joined
[02:47] <Herby__> o/

[02:48] *** skids left
[02:48] *** Jesmaybe joined
[02:52] *** bjz left
[02:55] *** wamba joined
[02:57] *** noganex_ joined
[03:00] *** noganex left
[03:00] *** cpage_ left
[03:01] *** cpage_ joined
[03:01] *** cpage_ left
[03:03] *** Actualeyes left
[03:04] *** b7j0c joined
[03:04] <b7j0c> p6: say 3;

[03:04] <camelia> rakudo-moar 74d0e3: OUTPUT«3␤»

[03:05] <b7j0c> p6: my uint8 $i = 255;

[03:05] <camelia> rakudo-moar 74d0e3: ( no output )

[03:05] <b7j0c> p6: my uint8 $i = 254;

[03:05] <camelia> rakudo-moar 74d0e3: ( no output )

[03:05] <b7j0c> p6: my uint8 $i = 255;

[03:05] <camelia> rakudo-moar 74d0e3: ( no output )

[03:05] <b7j0c> p6: my uint8 $i = 255; say $i; $i++; say $i;

[03:05] <camelia> rakudo-moar 74d0e3: OUTPUT«255␤256␤»

[03:05] <b7j0c> p6: my uint8 $i = 255; say $i; $i++; $i++; say $i;

[03:05] <camelia> rakudo-moar 74d0e3: OUTPUT«255␤257␤»

[03:06] <b7j0c> p6: my uint8 $i = 255; say $i; say ++$i;

[03:06] <camelia> rakudo-moar 74d0e3: OUTPUT«255␤0␤»

[03:10] *** bjz joined
[03:12] *** Jesmaybe left
[03:12] *** Jesmaybe joined
[03:18] <dalek> doc: 31cf6cb | (Francis Grizzly Smit)++ | doc/Type/Pair.pod6:

[03:18] <dalek> doc: fixed Pair method fmt it was missing the format sting in the signature

[03:18] <dalek> doc: review: https://github.com/perl6/doc/commit/31cf6cb17e

[03:18] *** pdcawley left
[03:28] *** Jesmaybe left
[03:29] *** Jesmaybe joined
[03:33] *** pierre_ left
[03:33] *** Jesmaybe left
[03:35] *** Herby__ left
[03:40] *** cognominal left
[03:42] *** pierre_ joined
[03:42] *** cognominal joined
[03:46] *** pierre_ left
[03:54] *** skids joined
[03:56] *** pierre_ joined
[03:59] *** wamba left
[04:03] *** khw left
[04:09] *** dataf4l joined
[04:13] *** b7j0c left
[04:33] *** skids left
[04:35] *** Cabanossi left
[04:38] *** Cabanossi joined
[04:51] *** brillenfux joined
[04:53] *** pierre_ left
[04:54] *** cpage_ joined
[05:00] *** pierre_ joined
[05:05] *** pierre_ left
[05:09] *** MasterDuke left
[05:21] *** wamba joined
[05:22] *** dataf4l left
[05:24] *** dataf4l joined
[05:24] *** dataf4l left
[05:40] *** Actualeyes joined
[05:42] *** wamba left
[05:51] *** RabidGravy joined
[05:57] *** pierre_ joined
[06:02] *** pierre_ left
[06:04] *** neuraload joined
[06:12] *** pierre_ joined
[06:18] *** bjz left
[06:26] *** FROGGS joined
[06:33] *** domidumont joined
[06:37] *** RabidGravy left
[06:41] *** CIAvash joined
[06:47] *** geekosaur left
[06:47] *** geekosaur joined
[06:50] *** ctp joined
[06:55] *** wamba joined
[07:01] *** seatek left
[07:01] *** nadim joined
[07:02] *** imcsk8_PTO joined
[07:04] *** cschwenz joined
[07:06] *** canopus left
[07:06] *** abraxxa joined
[07:07] *** canopus joined
[07:19] *** grondilu joined
[07:20] *** girafe joined
[07:20] <grondilu> m: say Inf == Inf

[07:21] <camelia> rakudo-moar 74d0e3: OUTPUT«True␤»

[07:21] * grondilu thought that was supposed to return False

[07:23] *** pierre_ left
[07:25] *** bjz joined
[07:25] *** ctp left
[07:28] * grondilu may have confused it with NaN though

[07:28] <grondilu> m: say NaN == NaN

[07:28] <camelia> rakudo-moar 74d0e3: OUTPUT«False␤»

[07:28] *** mohae_ joined
[07:30] <daxim_> andrewalker_, thp wants to see your qt5 bindings

[07:30] *** mohae left
[07:31] <masak> grondilu: yes, there's only one Inf. it's supposed to be equal to itself.

[07:31] *** pierre_ joined
[07:32] <masak> well, there's -Inf too, I guess. but it's pretty far from Inf, and so there's no risk of confusion.

[07:35] <moritz> unless you're making a sphere out of the complex plane :-)

[07:35] *** pierre_ left
[07:39] * FROGGS .oO( will it still fly? )

[07:41] *** xiaoyafeng joined
[07:44] *** xiaoyafeng left
[07:44] *** pochi joined
[07:45] *** ufobat joined
[07:48] *** dakkar joined
[07:51] <[ptc]> FROGGS, timotimo: about the coverity scan stuff for MoarVM: could you guys create a generic link to MoarVM on Coverity please?  I think if one is admin of the MoarVM group on GitHub it should work.

[07:52] <[ptc]> I don't think it's a good idea to use my account directly for the Coverity scan stuff.

[07:52] <[ptc]> Also, with the generic account (or an account directly linked to the MoarVM/MoarVM repo), then it's possible to get pushes to be automatically checked, which isn't possible with my account

[07:54] <FROGGS> ohh niec

[07:54] <FROGGS> nice*

[08:00] *** rindolf joined
[08:08] *** zakharyas joined
[08:12] *** pierre_ joined
[08:14] *** andrzejku joined
[08:15] *** Ulti_ is now known as Ulti

[08:16] *** ctp joined
[08:19] *** CIAvash left
[08:20] <andrzejku> hello :)

[08:22] *** cpage_ left
[08:23] *** g4 joined
[08:33] <moritz> hi ho

[08:34] <El_Che> who are you calling a ho'?

[08:35] *** Actualeyes left
[08:38] *** Elan0a joined
[08:38] <moritz> a hollistic person?

[08:42] *** cpage_ joined
[08:44] *** quester joined
[08:52] *** wamba left
[08:54] *** quester left
[08:54] <DrForr> Morning... just barely.

[08:58] *** wamba joined
[09:01] *** geekosaur left
[09:03] *** geekosaur joined
[09:29] *** Elan0a left
[09:30] *** pdcawley joined
[09:32] *** woolfy left
[09:32] *** woolfy joined
[09:36] *** woolfy left
[09:37] *** woolfy joined
[09:39] *** woolfy left
[09:40] *** FROGGS left
[09:57] *** akiym_ is now known as akiym

[10:00] *** cibs left
[10:01] *** cibs joined
[10:05] *** wamba left
[10:08] *** wamba joined
[10:16] *** labster left
[10:20] *** harrison_ joined
[10:23] *** ctp left
[10:25] *** rudolfochrist joined
[10:25] *** harrison_ left
[10:29] *** LegalResale joined
[10:33] *** TEttinger left
[10:36] *** andrewalker_ is now known as andrewalker

[10:36] *** Derperperd left
[10:37] <andrewalker> daxim_: Ohh... Cool :D I'll push them somewhere and ping him.

[10:42] *** brrt left
[10:46] *** nowan left
[10:47] *** harrison_ joined
[10:47] *** harrison_ is now known as hchienjo

[10:48] *** nowan joined
[10:56] *** smls joined
[10:56] <smls> m:  my $a:b = 42;  say $a:b;

[10:56] <camelia> rakudo-moar 74d0e3: OUTPUT«42␤»

[10:57] <smls> ^^ is thta supposed to be allowed?

[10:57] <lizmat> smls: I think so, as I remember patches for that being added

[10:59] <smls> m: my $a:</i> = 42;  say $a:</i>;

[10:59] <camelia> rakudo-moar 74d0e3: OUTPUT«42␤»

[10:59] <smls> ^^ This too?

[10:59] <smls> Certainly a WAT in string interpolation.

[11:02] *** Lucas_One left
[11:03] *** pierre_ left
[11:03] <timotimo> those are allowed, yes

[11:03] <timotimo> m: my $foo:<hey> = 10; say $foo:<hey>

[11:03] <camelia> rakudo-moar 74d0e3: OUTPUT«10␤»

[11:04] <timotimo> compare:

[11:04] <timotimo> m: say &infix:<+>

[11:04] <camelia> rakudo-moar 74d0e3: OUTPUT«sub infix:<+> (Mu $?, Mu $?) { #`(Sub+{<anon|70919312>}+{Precedence}|39580704) ... }␤»

[11:04] *** Lucas_One joined
[11:05] *** rudolfochrist left
[11:05] <smls> But 'infix' is a known category

[11:06] <smls> what's the point of allowing this format with arbitraty prefixes?

[11:08] <jnthn> In action methods for protoregex candidates, the prefixes defined by the user

[11:08] <jnthn> *are defined

[11:09] <jnthn> token whatever-i-want:<foo> { <sym> } etc

[11:09] <jnthn> For the tokens themselves too

[11:11] <timotimo> m: my $foobar:<with spaces allowed, too?>;

[11:11] <camelia> rakudo-moar 74d0e3: ( no output )

[11:11] <timotimo> m: my $foobar:<with spaces allowed, too?> say $foobar;

[11:11] <camelia> rakudo-moar 74d0e3: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my $foobar:<with spaces allowed, too?>7⏏5 say $foobar;␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        state…»

[11:11] <timotimo> m: my $foobar:<with spaces allowed, too?>; say $foobar;

[11:11] <camelia> rakudo-moar 74d0e3: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Variable '$foobar' is not declared␤at <tmp>:1␤------> 3foobar:<with spaces allowed, too?>; say 7⏏5$foobar;␤»

[11:11] <timotimo> right, requires it every time

[11:11] <timotimo> m: my $foobar:<with spaces allowed, too?>; say $foobar:<with spaces allowed, too?>;

[11:11] <camelia> rakudo-moar 74d0e3: OUTPUT«(Any)␤»

[11:11] <smls> jnthn: That's still all & stuff though. Why would you need to name a $ variable like that?

[11:12] <timotimo> why would we forbid $ variables but not method names and sub names?

[11:12] <smls> because things like string interpolation

[11:13] <smls> where strict parsing allows different syntaxes to step on each other's toes as little as possible

[11:14] <smls> "<i>$foo:</i>"  # my use-case

[11:14] <timotimo> html tags in an interpolated string is already a well-known trap; i'd personally recommend anyone who uses string interpolation for html like that to put braces around their variables from the get-go

[11:14] <timotimo> since $foo</i> is already a trap

[11:14] <smls> true

[11:15] <smls> kinda devalues sigils though, if you have to interpolate with {} all the time anyway.

[11:19] *** ocbtec joined
[11:22] <dalek> doc: 251e333 | (Tom Browder)++ | doc/Language/tables.pod6:

[11:22] <dalek> doc: remove text no longer valid

[11:22] <dalek> doc: 

[11:22] <dalek> doc: remove reference to an exception for uneven columns per row ( no longer true with removal of former restriction five)

[11:22] <dalek> doc: review: https://github.com/perl6/doc/commit/251e333791

[11:22] <smls> Maybe the strictness should be applied on the string interpolation side. I.e. instead of allowing interpolation with

[11:22] <smls>   < $ @ % & > <ident> <postcircumfix>?

[11:22] <smls> only allow:

[11:22] <smls>   '$' <simple-ident>

[11:22] <smls>   '@' <simple-ident> <bracket-postcircumfix>

[11:22] <smls>   '%' <simple-ident> <brace-postcircumfix>

[11:22] <smls>   '&' <simple-ident> <paren-postcircumfix>

[11:23] <timotimo> that should definitely be doable with a slang

[11:25] *** hchienjo left
[11:31] *** bjz_ joined
[11:31] *** bjz left
[11:34] *** ufobat left
[11:47] *** woolfy joined
[11:58] *** smls left
[11:58] *** smls joined
[12:05] *** canopus left
[12:05] *** ggoebel left
[12:08] <iBakeCake> Mixing markup with code is the real trap :}

[12:11] *** canopus joined
[12:11] *** itaipu joined
[12:12] *** dakkar left
[12:13] *** AlexDaniel joined
[12:17] *** dakkar joined
[12:18] *** ggoebel joined
[12:18] *** pierre_ joined
[12:47] *** itaipu left
[12:53] *** bjz joined
[12:55] *** bjz_ left
[13:04] *** itaipu joined
[13:08] *** cdg joined
[13:11] <dalek> doc: 4fd5eb7 | coke++ | CONTRIBUTING.md:

[13:11] <dalek> doc: match number

[13:11] <dalek> doc: review: https://github.com/perl6/doc/commit/4fd5eb7aaa

[13:11] <dalek> doc: 8899ab3 | coke++ | CONTRIBUTING.md:

[13:11] <dalek> doc: add a note about make test/make xtest

[13:11] <dalek> doc: review: https://github.com/perl6/doc/commit/8899ab3c4c

[13:11] <dalek> doc: fa27d10 | coke++ | xt/aspell.t:

[13:11] <dalek> doc: spellcheck all pod6 files and md files

[13:11] <dalek> doc: review: https://github.com/perl6/doc/commit/fa27d10529

[13:11] <dalek> doc: cab6b77 | coke++ | / (4 files):

[13:11] <dalek> doc: pass spellcheck on all MD files

[13:11] <dalek> doc: 

[13:11] <dalek> doc: - fix typos

[13:11] <dalek> doc: - learn words/code

[13:11] <dalek> doc: - avoid some made up words

[13:11] <dalek> doc: review: https://github.com/perl6/doc/commit/cab6b77703

[13:15] *** bjz left
[13:17] *** skids joined
[13:17] <[Coke]> doc - predefined-search-items should probably be moved into 'templates'

[13:29] *** FROGGS joined
[13:30] <FROGGS> o/

[13:30] <iBakeCake> \o\

[13:31] <[Coke]> iBakeCake: latest message on perl6-users about log(23,0) seems to be something in your current wheelhouse

[13:32] <iBakeCake> [Coke]: what is it?

[13:32] <iBakeCake> Isn't log base 0 undefined

[13:32] <moritz> log to base 0?

[13:32] <[Coke]> http://www.nntp.perl.org/group/perl.perl6.users/2016/10/msg3027.html

[13:33] <moritz> m: say log(23, 0)

[13:33] <camelia> rakudo-moar 71a01e: OUTPUT«-0␤»

[13:33] <moritz> that's the complaint

[13:34] <iBakeCake> m: say log( my num $ = 23, my num $ = 0)

[13:34] <camelia> rakudo-moar 71a01e: OUTPUT«This type cannot unbox to a native number: P6opaque, Int␤  in block <unit> at <tmp> line 1␤␤»

[13:34] <iBakeCake> m: say log( my num $ = 23e0, my num $ = 0e0)

[13:34] <camelia> rakudo-moar 71a01e: OUTPUT«-0␤»

[13:34] <iBakeCake> Well, I recently checked the log() stuff for nums...

[13:34] * iBakeCake looks

[13:34] <iBakeCake> Ah, ok, now I remember

[13:35] <iBakeCake> m: say log(23)/−∞

[13:35] <camelia> rakudo-moar 71a01e: OUTPUT«-0␤»

[13:37] <lizmat> commute to NR.pm meeting&

[13:37] <iBakeCake> ln(0) by 2008 IEEE 754 is −∞; and log₀(23) = ln(23)/ln(0) = ln(23)/−∞ = -0

[13:37] *** lizmat left
[13:37] <iBakeCake> So it's not so much an artefact of the log() but rather how we divide by infinity

[13:40] <[Coke]> btw, my pod issue with E<> before is that it doesn't support html entities (and that's what the pod docs had used) - however, it does support unicode names and codepoints... so I'm not going to open a ticket on that, I'm fine with E<171> and E<LEFT DOUBLE ANGLE BRACKET>

[13:41] <iBakeCake> IEEE section 6.1 tells about division by −∞ would give the limit, with the sign of ∞, so -0 is right. and section 7.3 says that ln(0) is −∞

[13:41] <iBakeCake> If anyone wanted to respond to that person... I don't have a perl6-users subscriptions

[13:44] *** itaipu left
[13:44] *** itaipu joined
[13:49] *** yqt joined
[13:49] *** pierre_ left
[13:52] *** Xliff left
[14:07] *** dakkar left
[14:07] *** dakkar joined
[14:09] *** dj_goku left
[14:10] <dalek> doc: 015c9b9 | (Zoffix Znet)++ | doc/Type/Mix.pod6:

[14:10] <dalek> doc: Indicate Mix -> Bag(Hash) coersion loses negative weights

[14:10] <dalek> doc: review: https://github.com/perl6/doc/commit/015c9b985e

[14:11] <dalek> doc: 459310f | (Zoffix Znet)++ | doc/Type/MixHash.pod6:

[14:11] <dalek> doc: Indicate MixHash -> Bag(Hash) coersion loses negative weights

[14:11] <dalek> doc: review: https://github.com/perl6/doc/commit/459310fc99

[14:12] *** Actualeyes joined
[14:12] <iBakeCake> m: my BagHash $b; $b{42}++; dd $b

[14:12] <camelia> rakudo-moar 79bb86: OUTPUT«BagHash $b = (42=>1).BagHash␤»

[14:12] <iBakeCake> skids: ^ fixed

[14:12] *** brillenfux left
[14:12] <skids> iBakeCake++

[14:22] *** cgfbee left
[14:30] *** cgfbee joined
[14:32] *** itaipu_ joined
[14:34] *** zacts left
[14:34] *** gggggggggggggggg joined
[14:34] *** facetious is now known as tailgate

[14:34] *** g4 left
[14:35] *** itaipu left
[14:35] <tailgate> Can I write to std out from a DOC INIT block? Like DOC INIT { say 'hello'; } tp check if it's running?

[14:35] *** gggggggggggggggg left
[14:35] *** zacts joined
[14:36] <jnthn> Sure

[14:36] <jnthn> $ perl6-m --doc -e 'DOC INIT say 42'

[14:36] <jnthn> 42

[14:39] *** khw joined
[14:39] <tailgate> Ah, it only runs if it's in doc mode

[14:40] *** wamba left
[14:46] <crucialrhyme> i have a super easy question. what is the idiomatic way to iterate over the characters in a Str?

[14:48] <jnthn> Provided you really mean characters (as in graphemes), for $str.comb { }

[14:49] <jnthn> (If you mean the Unicode codepoints, then for $str.ords { })

[14:49] <crucialrhyme> it's good to know both

[14:50] <crucialrhyme> i hope i get some really gnarly unicode text just so i can revel in not having to worry about it

[14:53] *** kurahaupo__ joined
[15:01] *** cdg left
[15:01] *** snowman__ left
[15:06] *** snowman_ joined
[15:17] *** acrussell joined
[15:19] <dalek> doc: 6e97839 | (José Albert Cruz Almaguer)++ | doc/Language/subscripts.pod6:

[15:19] <dalek> doc: Sigil typo in MixHash example

[15:19] <dalek> doc: review: https://github.com/perl6/doc/commit/6e97839f3b

[15:19] <dalek> doc: ad392db | (Zoffix Znet)++ | doc/Language/subscripts.pod6:

[15:19] <dalek> doc: Merge pull request #974 from polyglot-plt/master

[15:19] <dalek> doc: 

[15:19] <dalek> doc: Sigil typo in MixHash example

[15:19] <dalek> doc: review: https://github.com/perl6/doc/commit/ad392db81d

[15:20] *** Actualeyes left
[15:29] *** wtw left
[15:30] <El_Che> yeah

[15:30] <El_Che> for people wanting to speak at fosdem: our dev room will have 80 places (problably full most of the day) and it's in the K block (same one as the booth)

[15:35] *** wtw joined
[15:37] *** Derperperd joined
[15:37] *** khisanth__ is now known as Khisanth

[15:41] *** jsimonet left
[15:42] *** jsimonet joined
[15:44] *** neuraload left
[15:44] *** eliasr joined
[15:45] *** seatek joined
[15:47] *** Actualeyes joined
[15:48] *** FROGGS left
[15:50] *** titsuki joined
[15:52] <dalek> doc: e3c7aa3 | (Armand Halbert)++ | / (3 files):

[15:52] <dalek> doc: Added external link SVG image.

[15:52] <dalek> doc: review: https://github.com/perl6/doc/commit/e3c7aa37c6

[15:52] <dalek> doc: 9cb2744 | (Zoffix Znet)++ | / (3 files):

[15:52] <dalek> doc: Merge pull request #877 from ahalbert/SVG

[15:52] <dalek> doc: 

[15:52] <dalek> doc: Added external link SVG image.

[15:52] <dalek> doc: review: https://github.com/perl6/doc/commit/9cb27446d7

[15:54] *** domidumont left
[15:56] *** cschwenz left
[15:57] *** abraxxa left
[15:58] *** firc28744f90 joined
[16:00] *** firc28744f90 left
[16:01] *** firc28744f90 joined
[16:02] *** seatek left
[16:02] <titsuki> Hi #perl6

[16:02] <titsuki> I'm facing the circular module loading issue while creating a MeCab (famous Japanese morphological analyzer) bindings.

[16:02] <titsuki> Does anyone know how to declare stub CStruct classes ?

[16:02] <titsuki> gist: https://gist.github.com/titsuki/664c94a99154d8008cfa537d08538171

[16:03] *** firc28744f90 left
[16:06] *** firc28744f90 joined
[16:06] *** firc28744f90 left
[16:08] <timotimo> should work just like you did it

[16:08] <timotimo> just drop the "is repr" for the second time

[16:09] <titsuki> timotimo: Thx! I'll try it !

[16:09] <timotimo> good luck!

[16:15] *** lizmat joined
[16:19] *** dwarring left
[16:20] *** domidumont joined
[16:24] *** domidumont left
[16:25] *** domidumont joined
[16:26] *** dakkar left
[16:27] *** KevinYang joined
[16:28] *** Derperperd left
[16:28] <[Coke]> TimToady++ emailing

[16:29] *** cdg joined
[16:35] <briandfoy>  Does anyone have ideas about how to fix a subset type failure from throwing X::AdHoc? I asked about it on Stackoverflow http://stackoverflow.com/q/40097868/2766176 but it's also on RT from last year: https://rt.perl.org/Ticket/Display.html?id=126763

[16:35] *** Derperperd joined
[16:36] *** KevinYang left
[16:36] *** firc28744f90 joined
[16:36] <[Coke]> briandfoy: hio. Not sure if you got an alert, but combined your recent RT about prefix= with an older one.

[16:37] *** Derperperd left
[16:37] *** firc28744f90 left
[16:38] <iBakeCake> m: subset Z where 2; sub (Z)(42)

[16:38] <camelia> rakudo-moar b1f77c: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3subset Z where 2; sub (Z)7⏏5(42)␤    expecting any of:␤        new name to be defined␤»

[16:38] <iBakeCake> m: subset Z where 2; sub (Z){}(42)

[16:38] <camelia> rakudo-moar b1f77c: OUTPUT«Constraint type check failed for parameter '<anon>'␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:39] *** KevinYang joined
[16:39] *** KevinYang left
[16:39] <iBakeCake> m: sub (Str){}(42)

[16:39] <camelia> rakudo-moar b1f77c: OUTPUT«Type check failed in binding to <anon>; expected Str but got Int (42)␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:40] <[Coke]> briandfoy: I would definitely agree adhoc isn't right. (in general, adhoc is "we hadn't gotten around to putting a typed exception here.")

[16:41] *** KevinYang joined
[16:41] <iBakeCake> briandfoy: well, it's thrown here, FWIW: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Metamodel/BOOTSTRAP.nqp#L502

[16:42] <iBakeCake> Actually that's where the message gets created

[16:42] <briandfoy> There's an X::TypeCheck::Parameter in Exception, or is that for something else (like an error specifying a signature)

[16:42] <briandfoy> I saw the message in bootstrap, but it looks like all the other origins of exceptions. Higher up it looks like those get translated into something else.

[16:43] <briandfoy> ObCodeIsNotDocumentation :)

[16:44] <briandfoy> This matters for the parts of Learning Perl 6 that will talk about subsets and signatures. People really want these cool type features!

[16:45] <[Coke]> might be a good idea to keep a list of RTs that fixing would help with the book.

[16:45] * iBakeCake suspects that'd be a large list :)

[16:45] <briandfoy> I will do that. Or, maybe I can have RT permissions to add a tag?

[16:46] <[Coke]> a fake subject tag like [BOOK] ?

[16:46] <briandfoy> I'm happy to be a person who goes through RT and acknowledges, closes, or whatever

[16:46] <[Coke]> sure, give me 5s.

[16:47] <briandfoy> I wasn't thinking a subject line tag. Doesn't RT have other features for that?

[16:47] <perigrin> it has straight out tags if I recall.

[16:48] <briandfoy> maybe something in "depended on by"

[16:48] <[Coke]> added.

[16:48] <perigrin> been a while since I was the RT monkey.

[16:48] <iBakeCake> m: subset Z where { $_ ~~ 2 or X::TypeCheck.new(:operation<assigning-stuff>, :got($_), :expected(Z)).throw }; sub (Z){}(42)

[16:48] <camelia> rakudo-moar b1f77c: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Illegally post-declared type:␤    Z used at line 1␤␤»

[16:48] <[Coke]> it doesn't have freeform tags.

[16:48] <iBakeCake> m: subset Z where { $_ ~~ 2 or X::TypeCheck.new(:operation<assigning-stuff>, :got($_), :expected("Z")).throw }; sub (Z){}(42)

[16:48] <camelia> rakudo-moar b1f77c: OUTPUT«Type check failed in assigning-stuff; expected Str but got Int (42)␤  in block <unit> at <tmp> line 1␤␤»

[16:48] <[Coke]> (our queue, anyway)

[16:48] <mst> [Coke]: well, yeah, what you'd do, normally, is create a ticket to use as a tag

[16:48] <mst> then use the ticket relationships

[16:48] <[Coke]> you can have a ticket that has child tickets, that works.

[16:48] <iBakeCake> briandfoy: ^ awkward workaround. There's also Subset::Helper that does custome messages

[16:48] <mst> very common approach

[16:48] *** KevinYang left
[16:49] <[Coke]> right, what mst said.

[16:49] <[Coke]> my only issue with that is that your ticket count is never accurate, but since we're over 1400, I guess that doesn't matter. :)

[16:50] <[Coke]> mst - any progress on getting your build fixes pushed upstream? we have tickets at each level complaining about spaces in paths, which i thought your presentation said you solved.

[16:50] *** dataf4l joined
[16:51] <iBakeCake> briandfoy: when do you think the book will be ready, BTW?

[16:53] <mst> [Coke]: no, my presentation said I broke it worse

[16:53] <briandfoy> The book will be ready by Christmas.

[16:53] <[Coke]> mst: oh, whoops. Ok. then I will start digging back into at least making sure that spaces don't kill anything. Thanks.

[16:53] <briandfoy> But O'Reilly wants it before OSCON.

[16:53] <[Coke]> briandfoy: we're not falling for THAT old trick.

[16:54] <iBakeCake> briandfoy: which Christmas? :D

[16:54] <mst> [Coke]: prompting your hilarious response of "surprise! you're wrong! it was already broken" or so

[16:54] <briandfoy> For what it's worth, I'm not going to stop to fix bugs and whatnot. If there's a wart, I'll just note that in the text and move on.

[16:54] <iBakeCake> Sounds reasonable.

[16:55] <iBakeCake> Though we'd much prefer if you'd stop and fix :D

[16:56] <mst> "As of [release], there's currently [bug], requiring [workaround]" seems completely sane, especially if [bug] contains an RT number so it's easy for readers to look up if they still need to care

[16:56] <[Coke]> mst: ah, yes. My memory, as always, not entirely helpful.

[16:57] <mst> but having attempted to write a book and been fairly terrible at it, I'm pretty sure "whatever brian decides" is more likely to be the right answer than my thoughts

[16:57] <[Coke]> someone with a recent star install care to test this: https://rt.perl.org/Ticket/Display.html?id=122839

[16:58] *** itaipu_ left
[17:00] <briandfoy> Heh, I was trying to get the recent star installed, but filed a bug on that too. That's still on my to do list for today.

[17:01] <mst> [Coke]: oh, yeah, also, bear in mind star's build system is a fork of the rakudo one with ... about half of the patches since merged down, probably

[17:01] <mst> I suspect the 'correct' solution will turn out to be 'fix rakudo, nqp, moarvm, then burn the star build system down and redo it'

[17:03] <timotimo> what mst says.

[17:03] <iBakeCake> \o/

[17:05] *** seatek joined
[17:06] <iBakeCake> briandfoy: FWIW, we also have #perl6-dev 

[17:09] *** andrzejku_ joined
[17:16] *** zakharyas left
[17:16] *** wisti joined
[17:26] *** labster joined
[17:29] <[Coke]> mst: the plan was to fix them from the ground up; moarvm, then nqp, then rakudo

[17:29] <[Coke]> (and then maybe R*)

[17:30] <mst> right

[17:31] *** grondilu left
[17:31] <mst> the recent dramastorm around DBIC has rather left me having trouble focusing on technical stuff

[17:31] <mst> I am feeling increasingly guilty about not having got back to this stuff for you

[17:31] <mst> but sadly guilt doesn't actually make it easier to focus while in the middle of complicated political bollocks

[17:31] *** grondilu joined
[17:32] *** Ven_ joined
[17:35] *** itaipu joined
[17:37] <El_Che> mst: I have the impression the issue has been resolved, no?

[17:38] <iBakeCake> Has it? Damn! So goes my popcorn sales business idea...

[17:38] <mst> El_Che: mostly. I fully expect there to be one last loud blip before we're done

[17:39] *** lichtkind joined
[17:39] <El_Che> iBakeCake: well, there could be some plot changes. mst having a long lost twin and the like

[17:40] <iBakeCake> :)

[17:41] *** Ven__ joined
[17:42] *** Ven_ left
[17:43] *** wamba joined
[17:44] <El_Che> mst: probably. But it won't probably change the direction of the discussion. Hopefully, things will be handled without too much personal damage to the people involved. Although, not likely

[17:44] *** sufrostico joined
[17:45] <mst> El_Che: my rational mind concurs entirely. my adrenal system, less so.

[17:46] <nine> Is there a writeup of the DBIC thing somehwere?

[17:48] * nine would love to see lwn.net coverage of Perl issues

[17:48] <mst> what would be the point? I'd rather we got the governance issues resolved and move on, he'd likely attack any attempt at writing it up as partisan, and attracting more drama to the situation would benefit nobody

[17:48] <mst> I mean, I avoided explicitly naming the conflict in question specifically because of that

[17:50] <nine> mst: yeah, I guess you're right. Since I've opted out of getting involved in any way so far and rather focused on coding, I should really swallow my curiosity and stick to that decision.

[17:54] <El_Che> mst: the "upside", although not for you, is that the personal damage seem to be limited to 2 participants

[17:54] <mst> that was basically the idea

[17:54] <El_Che> so it's nog a full on flameware, luckily for the project

[17:55] *** labster left
[17:56] *** Ven_ joined
[17:56] *** Ven__ left
[17:58] <andrzejku_> hey

[17:59] <El_Che> nine: Most of the discussion was pretty much non sensical imho. I don't think LWN readers would care about that

[18:03] *** FROGGS joined
[18:05] <iBakeCake> andrzejku_: hey

[18:07] *** dj_goku joined
[18:21] *** pdcawley left
[18:22] *** pdcawley joined
[18:23] *** pdcawley left
[18:23] *** itaipu left
[18:24] *** pdcawley joined
[18:24] *** wisti left
[18:24] <[Coke]> doc folks: why do we have predefined-search-terms? Why is it not inlined in template/search_template.js ?

[18:24] *** pdcawley left
[18:24] *** itaipu joined
[18:31] *** khw left
[18:32] <FROGGS> o/

[18:32] <iBakeCake> \o

[18:32] <[Coke]> also doc: perl6 htmlify.p6  --parallel=3 # eventually dies with fork: Resource temporarily unavailable

[18:33] *** andrewalker left
[18:34] <moritz> uhm, I don't understand the --parallel implementation

[18:35] <moritz> I would have expected it to create a ThreadPoolScheduler with this as the max thread count

[18:35] <[Coke]> I was merely hoping it would make things go faster. :)

[18:40] *** cdg left
[18:41] *** acrussell left
[18:42] *** acrussell joined
[18:43] *** briandfoy left
[18:51] *** pmurias joined
[18:51] *** khw joined
[18:54] <AlexDaniel> [Coke]: why not?

[18:55] <[Coke]> because it's an extra file, causes extra work to happen during the build, and the file is in the top level when it shouldn't be. Why not split search.js out into 30 different files?

[18:56] <dalek> doc/remove-predefined: 42c2cd7 | coke++ | / (3 files):

[18:56] <dalek> doc/remove-predefined: inline predefined-search-items

[18:56] <dalek> doc/remove-predefined: review: https://github.com/perl6/doc/commit/42c2cd782a

[18:57] <AlexDaniel> I kinda liked the way these terms were separate from the actual js stuff, but whatever.

[18:57] *** labster joined
[18:58] * [Coke] puts out https://github.com/perl6/doc/pull/980 instead of just merging it.

[18:59] <gfldex> it was a kludge before the inlining and it still is a kludge

[18:59] <gfldex> it would have made the link rewrite stuff really hard to read so I just dropped those 3 items in there

[19:00] *** domidumont left
[19:00] <[Coke]> if we decide to keep it, we should move it into template/thing.js instead of a top level file.

[19:00] <AlexDaniel> yea, sure

[19:01] *** sufrostico left
[19:08] *** wamba left
[19:09] *** finanalyst joined
[19:09] *** finanalyst left
[19:11] *** Lucas_One left
[19:12] *** ocbtec left
[19:13] *** labster left
[19:17] *** travis-ci joined
[19:17] <travis-ci> Doc build passed. Will "Coke" Coleda 'inline predefined-search-items'

[19:17] <travis-ci> https://travis-ci.org/perl6/doc/builds/169322248 https://github.com/perl6/doc/commit/42c2cd782ad3

[19:17] *** travis-ci left
[19:20] *** labster joined
[19:22] *** wamba joined
[19:29] *** Lucas_One joined
[19:39] *** itaipu left
[19:41] *** dataf4l left
[19:45] *** rindolf left
[19:47] *** rindolf joined
[19:53] *** kaare__ left
[19:56] *** telex left
[19:58] *** telex joined
[19:59] *** cdg joined
[19:59] *** zakharyas joined
[19:59] *** itaipu joined
[20:01] *** bjz joined
[20:09] *** espadrine joined
[20:15] *** MasterDuke joined
[20:16] *** lizmat left
[20:17] <moritz> fwiw there's a python library that aspires to provide MAIN-like functionality: http://begins.readthedocs.io/en/latest/guide.html

[20:22] <El_Che> moritz: I am a fan of docopt. Started in the python world, although I use it in Go

[20:22] *** zakharyas left
[20:23] <El_Che> moritz: http://docopt.org/

[20:25] <moritz> El_Che: the idea of generating code (even if it's just a signature) from docs somehow scares me

[20:26] <El_Che> moritz: it works very well, though

[20:26] <El_Che> Go has the same time limited getopt builtin. Very un-UNIX like.

[20:27] <El_Che> and docopt fixes that and you don't have to keep code and doc in synx

[20:28] <El_Che> generating doc from code would be nicer, though

[20:44] *** dataf4l joined
[20:50] <moritz> PSA: I'll reboot the *.p6c.org machines soonish, because of CVE-2016-5195

[20:50] <seatek> I really love how perl's generating usage messages from MAIN signatures now

[20:50] <seatek> that combined with being able to attach #|{  } comments to methods has made things so much easier for documenting as I got

[20:51] <seatek> go

[20:51] * moritz just hopes all the servers come up again after the reboot

[20:52] *** TEttinger joined
[20:52] <timotimo> uh oh

[20:53] *** Util left
[20:53] *** JimmyZ left
[20:53] *** SourceBaby left
[20:53] *** Undercover left
[20:53] *** sergot left
[20:53] *** dalek left
[20:53] *** synopsebot6 left
[20:53] <seatek> chaos

[20:55] *** dalek joined
[20:55] *** ChanServ sets mode: +v dalek

[20:55] *** synopsebot6 joined
[20:57] <perlpilot> too many secrets

[20:57] *** bjz left
[20:57] *** Ven_ left
[20:58] *** Ven_ joined
[20:59] <moritz> reboot status: www and irc didn't come up automatically after the host reboot

[20:59] <moritz> I've changed the KVM config to do that next time

[21:00] <moritz> and now I have to reboot my IRC machine (and the IRC logger) as well :(

[21:00] <moritz> bbl&

[21:00] *** moritz left
[21:00] *** ilbot3 left
[21:02] *** skids left
[21:04] *** moritz joined
[21:06] *** Ven_ left
[21:06] *** firstdayonthejob joined
[21:09] *** ilbot3 joined
[21:14] *** ptolemarch left
[21:14] *** canopus left
[21:16] *** [Coke] joined
[21:19] *** andrzejku_ left
[21:19] <MasterDuke> moritz, [Coke]: i tried to make the --parallel option to htmlify.p6 relatively straightforward, what do you find confusing?

[21:21] *** wamba left
[21:23] <[Coke]> MasterDuke: well, if I run it with --parallel, it fork bombs.

[21:23] *** canopus joined
[21:23] <[Coke]> er, --parallel=3

[21:24] <MasterDuke> yeah, i get lots of crashes any time i try to use start() 

[21:24] <MasterDuke> though i found that running --parallel=10 a couple times until it didn't crash was still faster than running serially

[21:25] <MasterDuke> actually, i think that fork error is new, i used to just get segfaults

[21:26] *** espadrine left
[21:26] *** seatek left
[21:27] *** seatek joined
[21:30] <[Coke]> Laters.

[21:30] *** smls left
[21:33] *** acrussell left
[21:43] *** lizmat joined
[21:56] *** pecastro left
[22:03] *** dataf4l left
[22:13] <timotimo> https://twitter.com/ckolderup/status/789002880246177792  -  let's not F things up this badly please :) :)

[22:19] *** stmuk_ joined
[22:21] *** stmuk left
[22:24] *** pecastro joined
[22:27] *** firstdayonthejob left
[22:35] *** FROGGS left
[22:36] *** firstdayonthejob joined
[22:36] *** regreg joined
[22:37] *** yqt left
[22:44] *** pmurias left
[22:48] <regreg> how do i print the version of the perl interpreter from within perl6?

[22:48] *** yqt joined
[22:50] <timotimo> m: say $*PERL.version; say $*VM.version

[22:50] <camelia> rakudo-moar b1f77c: OUTPUT«v6.c␤v2016.10.15.g.715.e.39.a␤»

[22:59] *** firstdayonthejob left
[22:59] <dalek> perl6-most-wanted: e7a4871 | (David Warring)++ | most-wanted/modules.md:

[22:59] <dalek> perl6-most-wanted: Want modules Pod::Checker and Test::Pod

[22:59] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/e7a48715df

[23:00] *** Util joined
[23:02] <samcv> is there a module i can use to download a page over http/https and then be able to process headers and only download more if the page is text? and then stop the request once i get the information i need out of the body of the html page?

[23:03] <samcv> not downloading the whole thing

[23:13] <gfldex> samcv: you could subclass HTTP::Client https://github.com/supernovus/perl6-http-client

[23:14] <samcv> how do i stop it once i have the data i need?

[23:15] <samcv> i need to request the page and read the header, and if it's not a text document not to download further. atm i'm using curl's command line program with -i, and then just terminating it if the header shows doc isn't text

[23:16] <samcv> -i will get the whole page but just put the headers first. so is easy to do it in one go, but it would be nicer to do it some other way

[23:18] *** girafe left
[23:19] *** dataf4l joined
[23:21] *** rindolf left
[23:22] *** Derperperd joined
[23:26] *** sufrostico joined
[23:28] *** rindolf joined
[23:33] *** vytas joined
[23:33] <timotimo> well, HTTP defines a HEAD (or HEADER?) command that'll tell the server not to transfer the actual document

[23:34] <geekosaur> HEAD

[23:37] *** kurahaupo__ left
[23:45] *** yqt left
[23:46] *** rindolf left
[23:53] *** cdg left
[23:54] *** eliasr left
