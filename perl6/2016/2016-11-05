[00:00] *** telex left
[00:00] *** Actualeyes joined
[00:02] *** telex joined
[00:03] *** pierre_ joined
[00:05] *** nadim_ left
[00:05] *** pierre_ left
[00:11] *** girafe2 left
[00:12] *** perlawhirl left
[00:13] <timotimo> masak: i just pushed a branch that adds POSTBUILD

[00:14] <mst> tadzik: you still awake?

[00:14] <timotimo> i haven't tested how it behaves with regards to subclasses/superclasses

[00:15] <mst> tadzik: ^^ timotimo made us a branch to play with

[00:16] <timotimo> it took literally two lines of code to get you what you want

[00:16] <timotimo> plus whatever is necessary to make it behave right in every corner case you can come up with

[00:22] <AlexDaniel> oh, somebody finally implemented POSTBUILD?

[00:22] <mst> apparently

[00:23] <mst> AlexDaniel: ohai, did you get a ticket number yet?

[00:23] <AlexDaniel> mst: no response yet

[00:23] <mst> can you forward me the original email?

[00:23] <AlexDaniel> sure

[00:25] <AlexDaniel> ‚Ä¶ what's your email? :)

[00:25] <mst> [email@hidden.address]
[00:26] <AlexDaniel> done

[00:26] * AlexDaniel hides

[00:27] <mst> note that if your email wasn't "please can we have the button back" but instead cranky

[00:27] <mst> I'll be expecting you to provide a written apology before I can get anything fixed

[00:27] <[Coke]> is this on top of the email I sent?

[00:28] <[Coke]> I can forward you that one as well, mst.

[00:28] <mst> please, assuming this is about the 'create ticket' button being disabled and the possibility of whitelisting some users

[00:29] <AlexDaniel> mst: I think my email is alright, but I'm still expecting you to scold me

[00:30] <mst> I suspect the person I'm going to have to nudge is somebody who's, well, more attuned to #perl6 levels of niceness than my normal attempts at nice

[00:30] <mst> basically "if you were less nice than masak, you've probably made it worse" applies :P

[00:32] * AlexDaniel is still unsure what could possibly be wrong with ‚ÄúGET MY BUTTON BACK, NOW!‚Äù in terms of neceness

[00:32] <mst> er, because the button was disabled due to a massive spam blast

[00:32] <mst> again, you can't just have the button back

[00:32] <AlexDaniel> i*

[00:33] <mst> unless you're volunteering to go through every newly filed ticket for perl5 -and- perl6 and triage for spam

[00:33] *** bjz joined
[00:33] <mst> what -may- be possible is getting the button back for whitelisted users, which is what I told you to ask for, nicely

[00:33] <AlexDaniel> ‚Ä¶ that's what I've been doing for quite some time‚Ä¶

[00:33] <AlexDaniel> not perl5 tickets though

[00:34] <mst> yeah, and that's what got screwed

[00:43] *** bjz left
[00:43] *** cyphase left
[00:48] *** cyphase joined
[01:05] *** bjz joined
[01:24] *** TakinOver joined
[01:28] *** lichtkind left
[01:31] *** bjz left
[01:32] *** jameslenz left
[01:34] *** wamba left
[01:35] *** ufobat left
[01:35] *** TakinOver left
[01:35] *** tushar joined
[01:36] <BenGoldberg> m: { my $foo = 1; sub OUTER::bar { say ++$foo }; bar for ^3;

[01:36] <camelia> rakudo-moar 9f9452: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Cannot use pseudo package OUTER in sub declaration‚ê§at <tmp>:1‚ê§------> 3{ my $foo = 1; sub OUTER::bar7‚èè5 { say ++$foo }; bar for ^3;‚ê§¬ª

[01:37] *** kurahaupo left
[01:37] <BenGoldberg> m: { my $foo = 1; OUTER<&bar> = { say ++$foo } }; bar for ^3;

[01:37] <camelia> rakudo-moar 9f9452: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    bar used at line 1. Did you mean 'VAR', 'bag'?‚ê§‚ê§¬ª

[01:38] <BenGoldberg> m: sub bar; { my $foo = 1; OUTER<&bar> = { say ++$foo } }; bar for ^3;

[01:38] <camelia> rakudo-moar 9f9452: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§A unit-scoped sub definition is not allowed except on a MAIN sub;‚ê§Please use the block form.‚ê§at <tmp>:1‚ê§------> 3sub bar;7‚èè5 { my $foo = 1; OUTER<&bar> = { say ++$f‚ê§¬ª

[01:38] *** kurahaupo__ joined
[01:38] <BenGoldberg> m: sub bar {...}; { my $foo = 1; &bar = { say ++$foo } }; bar for ^3;

[01:38] <camelia> rakudo-moar 9f9452: OUTPUT¬´Cannot modify an immutable Sub‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:38] <BenGoldberg> m: sub bar {...}; { my $foo = 1; &bar := { say ++$foo } }; bar for ^3;

[01:38] <camelia> rakudo-moar 9f9452: OUTPUT¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Cannot use bind operator with this left-hand side‚ê§at <tmp>:1‚ê§------> 3; { my $foo = 1; &bar := { say ++$foo } 7‚èè5}; bar for ^3;‚ê§¬ª

[01:38] *** kurahaupo__ is now known as kurahaupo

[01:41] *** pierre_ joined
[01:42] *** TakinOver joined
[01:47] *** TakinOver left
[01:48] *** kurahaupo left
[01:49] *** TakinOver joined
[01:59] *** seatek joined
[01:59] *** bjz joined
[02:04] *** grondilu left
[02:09] *** ggoebel left
[02:09] *** skids joined
[02:13] <samcv> how do i upgrade all packages with never versions using panda?

[02:14] <seatek> last i looked panda couldn't do that - you just install one again that you want to update.

[02:15] <samcv> yeah that's what i thought :

[02:15] <samcv> :

[02:15] <samcv> :\

[02:17] <AlexDaniel> :ùÄ®

[02:17] <mst> samcv: so generate a list of all packages installed, and re-run an install for them

[02:17] <samcv> yeah that's what i was about to do

[02:17] <mst> that's basically the easy way to upgrade a local::lib in perl5

[02:17] <mst> not sure how that's :/ really

[02:18] <samcv> well if i rerun install it'll install it again even if it's not a newer version right?

[02:18] <mst> why?

[02:18] <samcv> well there's a --force option so maybe it only reinstalls if it's changed. i will see

[02:18] <mst> exactly

[02:18] <mst> try and avoid imagining extra problems that don't exist - programming is hard enough when you only have to deal with the real ones.

[02:19] <seatek> i need all my cpu cycles to search for aliens with seti

[02:19] <mst> you need all your brain cycles to deal with real problems

[02:19] <mst> rather than extra ones you made up :P

[02:19] <seatek> :)

[02:19] <mst> certainly I do, at least

[02:19] <mst> maybe you have more than me

[02:19] <samcv> i am all for that

[02:19] <seatek> i loose them all over the place

[02:19] <AlexDaniel> well no, of course it is a problem that should be solved

[02:19] <seatek> or lose. not sure which

[02:22] *** ggoebel joined
[02:24] <samcv> probably 'lose' :P

[02:25] <samcv> unless your problems are loose

[02:25] <mst> AlexDaniel: the fact panda doesn't reinstall things that are already up to date is a problem how?

[02:25] <samcv> that's not a problem mst 

[02:25] <mst> samcv: he just said it's a problem that should be solved

[02:25] <mst> I'm asking him why

[02:26] <gfldex> i know that zef doesn't look for version numbers. Does panda?

[02:26] <samcv> well my issue was that it downloads and runs tests on thinks that are already at the same version

[02:26] <samcv> and then when trying to install it, it 'throws'

[02:26] <mst> samcv: it does?

[02:26] <mst> ooooh, wat

[02:26] <samcv> so guessing it doesn't actually install it since it's the same

[02:26] <mst> huh, that's ... yeah

[02:26] <seatek> a WASTE OF CPU CYCLES!

[02:26] <samcv> yes

[02:26] <AlexDaniel> samcv: by the way, zef has ‚Äúupgrade‚Äù command. It is marked as ‚Äúbeta‚Äù, so not sure if it works well enough

[02:27] * mst goes back to hating everything until he gets round to writing his own

[02:27] <seatek> hehe

[02:28] <seatek> i was wondering if there was a standard place/requirement for version numbers in the packages

[02:28] <samcv> zef should be able to manage packages as panda does right? or does panda rely on its own database?

[02:29] <samcv> of files/packages installed

[02:31] <samcv> ah no it doesn't seem to. seems to be totally seperate

[02:35] *** Rawriful left
[02:39] *** jameslenz joined
[02:43] *** jameslenz left
[03:03] *** tushar left
[03:08] *** bjz_ joined
[03:08] *** bjz left
[03:09] *** aborazmeh joined
[03:09] *** aborazmeh left
[03:09] *** aborazmeh joined
[03:16] *** jameslenz joined
[03:21] *** TakinOver left
[03:23] *** AlexDaniel left
[03:31] *** skids left
[03:50] *** MasterDuke_ left
[03:54] *** noganex_ joined
[03:57] *** noganex left
[04:10] *** BenGoldberg left
[04:25] <ugexe> zef will see any modules installed regardless of the installer. panda will see any modules installed by panda

[04:29] <ugexe> gfldex: zef does check for version numbers on dependencies, just not on explicit requests

[04:31] <ugexe> i dont even remember why it doesnt do it for explicit requests anymore - I think it had to do with :version<*>

[04:32] <ugexe> https://github.com/ugexe/zef/blob/master/lib/Zef/Client.pm6#L109-L111

[04:36] *** perlawhirl joined
[04:37] *** pierre_ left
[04:39] *** pierre_ joined
[04:43] *** pierre_ left
[04:44] *** perlawhirl left
[04:44] *** Qingyun039 joined
[04:52] <ugexe> `zef upgrade` should work for the most part too (see: https://gist.github.com/ugexe/78ac39353d70372741d97e955efb69af)

[04:52] *** rindolf joined
[04:56] *** labster left
[04:56] <ugexe> yeah a request for `My::Module` will be turned into `My::Module:ver<*>`, and if there is already a version * installed that doesn't mean its the same version as what will end up being installed

[04:57] *** Qingyun039 left
[04:59] <ugexe> if zef finds a :ver<*> of something that is already installed as :ver<*> it can't just skip it. its up to the user to use --force to acknowledge this situation

[05:00] <ugexe> otherwise rakudo could not throw an exception for :ver<*> thats already installed

[05:01] <ugexe> (the exceptions mentioned earlier are thrown by rakudo, not panda)

[05:02] <ugexe> anyways zef should already handle all of this - it just requires the right command

[05:04] *** kurahaupo joined
[05:33] *** Cabanossi left
[05:33] *** Cabanossi joined
[05:33] *** djbkd joined
[05:52] *** rindolf left
[06:07] *** perlawhirl joined
[06:09] *** aborazmeh left
[06:25] *** perlawhirl left
[06:34] *** canopus left
[06:40] *** canopus joined
[06:42] *** CIAvash joined
[06:59] *** pierre_ joined
[07:09] *** djbkd left
[07:10] *** seatek left
[07:17] *** djbkd joined
[07:23] *** djbkd left
[07:24] *** wamba joined
[07:24] *** djbkd joined
[07:26] *** darutoko joined
[07:29] *** labster joined
[07:29] *** djbkd left
[07:32] *** kurahaupo__ joined
[07:32] *** kurahaupo__ left
[07:33] *** kurahaupo__ joined
[07:36] <tbrowder> hi #perl6

[07:37] <tbrowder> i'm having fits with Array and Lists and need help

[07:42] <tbrowder> what i want is to use, say "@arr", as an arg in a multi sub. in one it should be used in the sub as a copy. in the other sub is should be used effectively as rw, i.e., mutable.  in all cases, the elems are simple strings, nothing fancy.  i've tried explicitly typing as an Array, a List, and no typing.

[07:44] *** ufobat joined
[07:44] <tbrowder> question: is there a simple way to distinguish between the two uses in the sub signatures?

[07:45] <moritz> sub f(@a) { } # rw

[07:45] <moritz> sub g(@a is copy) { } # copy

[07:47] <tbrowder>  moritz: ok, i've tried that at one point but got into trouble when i started using the types.  i'll go back to the lab. thanks.

[07:54] *** RabidGravy joined
[07:58] <tbrowder> i think the trouble is in how i generate @arr. i do it programmatically with push, and when used as an arg i get error: replace this Array is copy logic

[07:59] <tbrowder> so how can i generate the @arr the simple

[08:00] *** Tonik joined
[08:01] <tbrowder> *simplest way? coercion? if so, in caller land (would rather not if possible)?

[08:01] <moritz> m: sub f(@a is copy) { @a[0] = 42 }; my @b = 1..3; f(@b); dd @b

[08:01] <camelia> rakudo-moar 9f9452: OUTPUT¬´Array @b = [1, 2, 3]‚ê§¬ª

[08:01] <moritz> tbrowder: sorry, I can't comment on code I don't know

[08:02] *** domidumont joined
[08:04] <tbrowder> i understand, but it looks like you start with an explicit assignment to the first element. i'll try that and come back with a simple gist next time if that doesn't work. thank you, moritz!

[08:05] <moritz> m: sub f(@a is copy) { @a.push: 42 }; my @b = 1..3; f(@b); dd @b

[08:05] <camelia> rakudo-moar 9f9452: OUTPUT¬´Array @b = [1, 2, 3]‚ê§¬ª

[08:06] *** domidumont left
[08:06] *** domidumont joined
[08:47] <stmuk> https://www.youtube.com/watch?v=wSk1HHHXWis

[08:47] <stmuk> errr si

[08:47] *** firstdayonthejob joined
[08:48] *** nadim_ joined
[08:51] <stmuk> Tal vez unos seis

[08:57] *** kurahaupo__ left
[08:58] *** kurahaupo left
[09:20] *** FROGGS joined
[09:34] *** ocbtec joined
[09:35] *** MARTIMM joined
[09:38] <FROGGS> o/

[09:42] *** TEttinger left
[09:52] *** espadrine joined
[10:00] *** pierre_ left
[10:01] *** xinming left
[10:02] *** pierre_ joined
[10:02] *** pierre_ left
[10:02] *** pierre_ joined
[10:02] *** pierre_ left
[10:10] *** ufobat left
[10:15] *** rindolf joined
[10:22] *** maybekoo2 joined
[10:48] *** nadim_ left
[10:51] *** labster left
[10:56] *** MasterDuke joined
[11:00] *** xinming joined
[11:03] *** pierre_ joined
[11:08] *** pierre_ left
[11:17] *** pecastro joined
[11:17] *** domidumont left
[11:18] *** domidumont joined
[11:32] *** kurahaupo__ joined
[11:33] *** kurahaupo__ is now known as kurahaupo

[12:01] *** Rawriful joined
[12:07] *** cdg joined
[12:17] *** firstdayonthejob left
[12:18] *** bjz_ left
[12:21] *** bjz joined
[12:32] *** AlexDaniel joined
[12:38] <tbrowder>  moritz: still getting weird results--working on smallest example to show problem (probably not fully understanding diff between Array and List, especially in Signature).

[12:41] *** cog_ joined
[12:42] *** cognominal left
[12:47] *** maybekoo2 left
[12:55] *** pierre_ joined
[13:02] <tbrowder> moritz: light bulb goes on: by declaring all arrays involved as Str all problems went away!!! thanks for hints. [SOLVED]

[13:09] *** Tonik left
[13:11] *** finanalyst joined
[13:11] *** finanalyst left
[13:35] *** rgrinberg joined
[13:40] *** rgrinberg left
[13:42] *** brillenfux joined
[13:44] *** kurahaupo__ joined
[13:47] *** kurahaupo left
[13:47] *** kurahaupo__ is now known as kurahaupo

[13:49] *** brillenfux left
[13:50] *** brillenfux joined
[13:58] *** cdg_ joined
[13:58] *** tushar joined
[14:00] *** cdg left
[14:02] *** wamba left
[14:16] *** Herby joined
[14:16] <Herby> o/

[14:16] <yoleaux> 18 Feb 2016 06:56Z <AlexDaniel> Herby: I cannot find any meaningful way to get diagonals‚Ä¶

[14:17] <AlexDaniel> 18 Feb?‚Ä¶

[14:17] <AlexDaniel> nice

[14:17] <Herby> I think its because I've been having to use a variation of Herby__

[14:17] <Herby> but thanks for the diligence, yoleaux 

[14:17] <Herby> :)

[14:21] *** BenGoldberg joined
[14:25] *** dataangel left
[14:37] *** Tonik joined
[14:39] *** CIAvash left
[14:46] *** espadrine left
[14:47] *** skids joined
[14:54] *** bjz left
[14:54] *** bjz joined
[15:13] *** bjz left
[15:17] *** bjz joined
[15:21] *** Roamer` left
[15:23] *** Rotwang joined
[15:25] <Rotwang> Hi, I wonder what's the relationship of nqp to say rakudo. As I understand it right now rakudo has moarvm specific code that implements perl6.

[15:25] <Rotwang> but where does nqp comes into play?

[15:25] <Rotwang> s/comes/come

[15:26] <FROGGS> nqp is a sort of glue language

[15:27] <FROGGS> it is more easily portable to other virtual machines as rakudo

[15:27] <FROGGS> so you port nqp first, and then use nqp (which is a compiler toolkit after all) to build rakudo

[15:28] <Rotwang> so if I wanted to add a new backend, I'd port nqp to it first

[15:30] <timotimo> hm. no comments yet about POSTBUILD

[15:36] *** wamba joined
[15:38] *** tushar left
[15:39] <DrForr> NQP is "Not Quite Perl (6)".

[15:43] <timotimo> Rotwang: in theory, rakudo could be fully bootstrapped and we could cut out NQP completely. that's a pretty daunting task, though, and it'd likely lead to the compiler becoming drastically slower

[15:46] *** espadrine joined
[15:49] *** bjz left
[16:11] *** grondilu joined
[16:21] *** richi235 left
[16:22] <AlexDaniel> timotimo: where are you expecting these comments to appear?

[16:23] *** richi235 joined
[16:23] *** cdg_ left
[16:24] *** cdg joined
[16:25] *** pierre_ left
[16:28] <timotimo> irc would be good enough

[16:28] *** pmurias joined
[16:29] <pmurias> Rotwang: both nqp and rakudo compile down to QAST so if you port nqp first you then can reuse code when porting rakudo

[16:33] *** domidumont left
[16:34] <Rotwang> pmurias: qast is moar specific representation?

[16:35] <moritz> no, QAST is backend independent

[16:35] <moritz> the next stge in the pipeline, MAST, is MoarVM specific

[16:35] <moritz> *stage

[16:36] <timotimo> right. we also have PAST for parrot and JAST for the jvm

[16:36] <timotimo> and i suppose JSAST?

[16:38] <Rotwang> timotimo pmurias moritz: thanks for answers!

[16:39] <TimToady> I would call it TWEAK, not POSTBUILD

[16:39] *** firstdayonthejob joined
[16:39] *** tushar joined
[16:40] *** cdg_ joined
[16:40] <TimToady> since tweaking is what you're doing; you aren't "postbuilding"

[16:40] <timotimo> a comment! hooray!

[16:40] <timotimo> well, renaming it will be the easiest thing ever

[16:40] <timotimo> did you see, the commit is only like 3 lines

[16:41] <timotimo> i hadn't realized that two people have been wishing for this for like years

[16:41] * TimToady hasn't backlogged -dev yet...

[16:41] <timotimo> nothing about that branch in -dev, though

[16:42] <TimToady> the checking message?

[16:42] <timotimo> ah, the check-in message

[16:42] <TimToady> *in

[16:42] <timotimo> yes, of course

[16:42] <timotimo> https://github.com/rakudo/rakudo/commit/fdc90a2e76 - just a single commit

[16:42] *** cdg left
[16:43] <TimToady> I presume it respects submethod correctly?

[16:44] <TimToady> since tweaks are still infrastructural for the exact class

[16:44] <timotimo> it's the exact same logic for BUILD, actually

[16:44] <TimToady> and we wouldn't want to call the same tweak multiple times during constuction

[16:44] <TimToady> okay, good

[16:44] <timotimo> if you don't define it as a submethod, you're going to get the same weirdness as with BUILD

[16:47] <PerlJam> What's the use-case for POSTBUILD/TWEAK ?

[16:48] <TimToady> always running the attribute defaults first

[16:48] <timotimo> well, not just "first"

[16:48] <timotimo> having a BUILD will disable a bunch of features

[16:49] <timotimo> so if you just want a single thing to happen after BUILD runs, you'll have to re-type all the attribute names in the BUILD signature

[16:49] <timotimo> else, you'll lose all the data

[16:49] <PerlJam> hmm.

[16:50] <PerlJam> yeah, that's been wanted for a long while.  timotimo++

[16:50] <TimToady> BUILD gives you complete control of everything, except we do not yet have a verb that says "evaluate the attribute defaults right now"

[16:51] <TimToady> (which would essentially turn the rest of the BUILD into tweaks)

[16:51] <timotimo> BUILDBUTWITHOUTTHEHASSLE

[16:51] <moritz> also, BUILD prevents the default binding of named args to .new() to attributes

[16:51] <timotimo> that's what i meant :)

[16:51] <moritz> which is kinda annoying, where "kinda" means "really" :-)

[16:52] <timotimo> well, i'm glad people are saying positive things now :)

[16:52] *** wamba left
[16:53] *** wamba joined
[16:54] <DrForr> Well, the elections are almost over :)

[16:55] <TimToady> you'd think we were electing the new world dictator or somethin'

[16:55] <PerlJam> both POSTBUILD and TWEAK strike me as sub-optimal names.   But I don't have anything better.   It kinda fits the space of what I would have called "init", but having an INIT method might just be a tad confusing  ;)

[16:55] <PerlJam> s/method/submethod/

[16:55] <TimToady> that's why we called it BUILD instead

[16:56] <TimToady> and "init" is also ambiguous as to whether it's pre- or post- default

[16:56] <AlexDaniel> POSTBUILD is a bit too long

[16:57] <TimToady> whereas "tweak" has heavy connotations of "most of the heavy work is done already"

[16:57] <TimToady> TIDYUP is a bit unweildy

[16:58] <TimToady> *wield

[16:58] <moritz> POSTINIT

[16:58] <AlexDaniel> /o\

[16:58] <TimToady> no nouns

[16:59] <moritz> NONOUNS

[16:59] <AlexDaniel> \o/

[16:59] <moritz> ok, now I'm just tolling

[16:59] <moritz> *trolling

[16:59] <PerlJam> THINGTHATHAPPENSPRIORTOOBJECTUSE

[17:00] *** tushar left
[17:00] *** perlawhirl joined
[17:00] <PerlJam> maybe PREPARE

[17:02] *** seatek joined
[17:04] <PerlJam> or STAGE  (you build a house, then you stage it for viewing :)

[17:04] <moritz> but it sound like PREPARE comes before BUILD

[17:04] *** tushar joined
[17:05] <timotimo> this discussion is why it was never implemented, afaik

[17:05] <AlexDaniel> if that is a problem, just called it TWEAK

[17:05] <PerlJam> timotimo: I always thought that it was because we were trying to make BUILD do double duty

[17:05] <AlexDaniel> (because rule #1)

[17:07] <TimToady> well, but I agree with mst that BUILD { ...; dodefaultsnow; ... } is probably about one word too many

[17:08] <TimToady> I just think that POPULATE and BUILD really mean the same thing, and it would be better to give a more descriptive name to the other thing

[17:08] <PerlJam> SET  SETUP

[17:09] <TimToady> slightly too overloaded, I suspect

[17:09] <TimToady> and too much like nouns...

[17:10] <PerlJam> CONFIG

[17:10] <TimToady> (not that "tweak" can't also nounify, but it feels more verby to me)

[17:10] <TimToady> that bikeshed is puke colored

[17:10] <timotimo> so i rename it TWEAK and we cool?

[17:11] <TimToady> dunno, we might be any or mu instead

[17:12] <timotimo> we could name the submethod MOO

[17:12] <PerlJam> heh

[17:12] <timotimo> that's totally a verb

[17:13] <moritz> ADJUST is less noun-y than TWEAK, right?

[17:13] <PerlJam> TIDY

[17:14] <TimToady> adjust is what accountants do

[17:14] <moritz> that suggests all the changes in there are cosmetically

[17:14] <PerlJam> ADAPT

[17:14] <TimToady> tidy is fundamentally an adjective that can be verbed, but usually only with "up"

[17:14] <TimToady> "adapt" means it wasn't intended in the first place

[17:14] <AlexDaniel> TUNE?

[17:15] <lucs> HONE?

[17:15] <PerlJam> (clearly I'm exploring all of the bad ideas so that we know that TWEAK was right all along )

[17:15] <PerlJam> lucs: we like our objects sharps?

[17:15] <PerlJam> er, sharp

[17:16] *** cdg joined
[17:16] <PerlJam> CONS, CTOR  ;-)

[17:17] * TimToady does not dignify that with a response...

[17:17] <timotimo> how about RIGHT

[17:17] <timotimo> that's totally a verb!

[17:18] <TimToady> so's TWERK but we're not using that one

[17:18] *** user9 left
[17:19] <timotimo> does this actually come with a language version change requirement?

[17:19] <seatek> is this for a method to FIDDLE with attributes *after* they are auto-constructed with the normal BUILD process?

[17:19] *** cdg_ left
[17:20] <timotimo> yeah, but you can do more than just FIDDLE, you can totally MESSWITH all the attributes

[17:20] <dalek> doc: 027db9e | gfldex++ | doc/Type/IO/ (2 files):

[17:20] <dalek> doc: doc file test methods e,d,f,s,l,r,w,x,rw,rwx,z for IO::Path and

[17:20] <dalek> doc: IO::Handle

[17:20] <dalek> doc: review: https://github.com/perl6/doc/commit/027db9ef50

[17:20] <TimToady> timotimo: I don't think so, since we feebly reserve ALLCAPS methods

[17:20] <timotimo> well, but you probably want the script to complain early if your TWERK submethod won't even be run

[17:21] <PerlJam> ANOINT  :)

[17:21] <timotimo> rathen than just not behaving right

[17:22] <PerlJam> (I was going to suggest ALTER, but that made me think of ALTAR, so ...)

[17:22] <timotimo> SACRIFICE

[17:23] <TimToady> very few verbs for change imply that the old form was almost-very-nearly-but-not-quite perfect

[17:23] <TimToady> that's why we have the word "tweak"

[17:24] <seatek> TWEAK made me think of the right thing

[17:24] <PerlJam> timotimo: so ... call it TWEAK and we're good  :)

[17:25] <TimToady> yeah, just tweak your patch :P

[17:25] <PerlJam> timotimo++ and TimToady++ for enduring the bikeshed

[17:25] <TimToady> it was an almost very nearly but not quite perfect bikeshed

[17:26] *** maybekoo2 joined
[17:27] *** domidumont joined
[17:27] *** domidumont left
[17:28] *** domidumont joined
[17:28] <timotimo> done

[17:30] <moritz> timotimo++

[17:35] *** tushar left
[17:36] <skids> .oO(finesse)

[17:41] <timotimo> now we just need someone to write a few tests, including how it behaves with subclasses/superclasses :)

[17:43] <pmurias> mst: any progress on packaging up rakudo for cpan?

[17:47] *** cdg_ joined
[17:49] *** cdg left
[17:51] <timotimo> anything preventing us from just merging that branch already?

[17:53] *** domidumont left
[17:59] <AlexDaniel> we will know once it is merged :)

[18:00] <timotimo> pff :)

[18:09] *** domidumont joined
[18:17] <pmurias> timotimo: we don't have JSAST

[18:18] <pmurias> timotimo: well, there are Chunks which are (js code + source map info + some type info)

[18:19] <timotimo> ok

[18:37] *** canopus left
[18:37] <dalek> doc: cd799dc | coke++ | doc/Type/IO/ (2 files):

[18:37] <dalek> doc: fix spelling

[18:37] <dalek> doc: review: https://github.com/perl6/doc/commit/cd799dc8e9

[18:37] <dalek> doc: 5983d92 | coke++ | doc/Type/IO/ (2 files):

[18:37] <dalek> doc: use preferred spelling

[18:37] <dalek> doc: review: https://github.com/perl6/doc/commit/5983d923dc

[18:40] *** raiph joined
[18:41] *** girafe joined
[18:43] *** canopus joined
[18:43] <RabidGravy> I can't believe people are using Adobe Flash for critical things in 2016

[18:44] <AlexDaniel> RabidGravy: critical things like?

[18:45] <RabidGravy> Mrs Gravy has a new job at a well known retail chemists and they do their entire "onboarding" process in a bunch of flash forms

[18:45] <RabidGravy> we can't find a browser in which some of them work

[18:47] *** obfusk_ joined
[18:47] *** obfusk left
[18:47] <RabidGravy> I mean I was arguing with web developers fifteen years ago that is was a bad thing to use for user interfaces

[18:48] <AlexDaniel> oh, but it's probably just some old stuff. For some reason I expected something like ‚ÄúIn 2016, team X had a long discussion on what they should use. After comparing all alternatives, they decided to use Flash‚Äù :)

[18:49] *** brillenfux left
[18:49] <RabidGravy> oh it's definitely some old stuff, it's served from some "Java Server Pages" and everything :-O

[18:55] *** cdg_ left
[18:55] *** cdg joined
[18:59] *** bjz joined
[18:59] <pmurias> RabidGravy: Flash was one of the despicable things I was writing in 2015 at my previous job :/

[19:00] <pmurias> s/Flash/ActionScript/

[19:00] *** cdg left
[19:01] *** perlawhi1l joined
[19:05] *** perlawhirl left
[19:08] *** rindolf left
[19:09] *** perlawhirl joined
[19:12] *** zakharyas joined
[19:12] *** perlawhi1l left
[19:13] *** labster joined
[19:14] *** rindolf joined
[19:17] *** darutoko left
[19:20] *** zakharyas left
[19:21] *** pecastro left
[19:35] <RabidGravy> pmurias, I think I have avoided it completely all these years

[19:36] *** firstdayonthejob left
[19:42] *** labster left
[19:42] <pmurias> RabidGravy: lucky you

[19:47] *** TEttinger joined
[19:49] *** firstdayonthejob joined
[19:51] <pmurias> RabidGravy: it's been re-focused as an animation tool nowdays which seem much more fun then doing uis in it

[19:54] *** MARTIMM left
[20:07] *** ufobat joined
[20:07] <AlexDaniel> can it output svg files?

[20:11] *** tushar joined
[20:13] <pmurias> AlexDaniel: I haven't used flash for anything beyond creating crappy uis

[20:15] *** bjz left
[20:21] *** domidumont left
[20:21] *** perlawhirl left
[20:21] *** perlawhirl joined
[20:21] *** labster joined
[20:45] *** ajr_ joined
[20:47] <ajr_> I've just download 2016.10 to a Raspberry Pi 3, and the process appears to be stalled. It's spent 15 minutes at what I suspect is creating moar.

[20:47] <ajr_> The machine appears to be completely locked. If I have to kill it, is there a restart point?

[20:48] *** cyphase left
[20:48] <timotimo> what did you use to build it? just Configure.pl --gen-moar or something?

[20:51] <ajr_> perl Configure.pl --gen-moar --gen-nqp --backend=moar

[20:51] <gfldex> ajr_: expect it to take 2 hours to build. There is no JIT for arm yet

[20:51] <timotimo> OK. the individual phases all look different from each other

[20:51] <timotimo> if it's just a bunch of rather short lines with paths, that's moar being built

[20:52] <timotimo> if it's a bunch of lines that span multiple lines on screen, it's either nqp or rakudo. if any of it contains the word "stage" (stage0, stage1, stage2), it's nqp. otherwise it's rakudo

[20:52] <timotimo> building rakudo yourself can take a whole lot of ram

[20:52] <ajr_> Specifically, Stage start :   0.000

[20:52] <timotimo> make sure you have sufficient swap space set up

[20:52] <timotimo> that's rakudo doing its most resource-intensive piece of work

[20:53] *** cyphase joined
[20:53] <ajr_> followed by Stage parse:  - that's where it seems to be halted

[20:53] <AlexDaniel> ajr_: why not install it from a .deb package?

[20:53] <timotimo> yes

[20:54] <timotimo> that part takes really long

[20:54] <FROGGS> ajr_: stage parse can take hours on a raspy

[20:55] <ajr_> I have a script set up to download and generate rakudo. 

[20:55] <FROGGS> s/raspy/raspi/

[20:55] <ajr_> I have to go now, but thanks.

[20:55] <timotimo> good luck!

[20:55] <AlexDaniel> patience is a virtue!

[20:59] *** ajr_ left
[21:03] *** wamba left
[21:08] *** FROGGS left
[21:26] *** bjz joined
[21:33] *** pmurias left
[21:58] <samcv> m: use MONKEY-SEE-NO-EVAL; my ($varone, $vartwo) = 20 xx 2; for  'one', 'two' { my $code = '$var' ~ $_; say EVAL $code; }

[21:58] <camelia> rakudo-moar c963ef: OUTPUT¬´20‚ê§20‚ê§¬ª

[21:58] <samcv> is there a way i can do this without EVAL? access variable names like this?

[21:59] <samcv> need to iterate over values which have coorasponding constants, and there's a bunch of them, there may be a better way to do this than eval

[22:01] *** cdg joined
[22:01] <MasterDuke> m: my $a = 2; say $::("a")

[22:01] <camelia> rakudo-moar c963ef: OUTPUT¬´2‚ê§¬ª

[22:02] <awwaiid> still ... any time I see someone wanting to loop over variables I suspect a hash or something else should be used

[22:02] <timotimo> you can also bind variables so you can read-write-access variables

[22:03] <timotimo> m: my ($varone, $vartwo) = 20 xx 2; my @things; @things[0] := $varone; @things[1] := $vartwo; ++<<@things; say $varone; say $vartwo

[22:03] <camelia> rakudo-moar c963ef: OUTPUT¬´21‚ê§21‚ê§¬ª

[22:03] *** cdg_ joined
[22:04] *** jeek left
[22:05] *** jeek joined
[22:06] *** cdg__ joined
[22:07] *** cdg left
[22:07] *** cdg__ left
[22:07] *** cdg joined
[22:08] *** cdg_ left
[22:18] *** rindolf left
[22:18] *** RabidGravy left
[22:22] *** jast left
[22:22] *** jast joined
[22:23] *** maybekoo2 left
[22:30] <seatek> OK. Wow. How have I lived without roles with parameters before?

[22:32] <seatek> I always though, neat! But.. using them... it can save so much, what was before, semi-redundant clutter

[22:38] *** cdg_ joined
[22:38] *** cdg_ left
[22:39] *** cdg_ joined
[22:39] *** cdg left
[22:43] <Herby> \o

[22:49] *** AlexDaniel left
[22:51] *** kurahaupo left
[23:08] *** stmuk_ joined
[23:10] *** stmuk left
[23:15] *** cdg_ left
[23:17] *** Tonik left
[23:23] *** bjz left
[23:30] *** tushar left
[23:31] *** kst left
[23:32] *** kst joined
[23:48] *** firstdayonthejob left
