[00:10] *** RabidGravy left
[00:11] *** freezerburnv left
[00:19] *** Upasaka_ joined
[00:21] *** cyphase left
[00:25] *** kid51 joined
[00:25] *** cyphase joined
[00:29] *** zacts joined
[00:30] *** sufrostico left
[00:36] *** sufrostico joined
[00:41] *** M-matthew is now known as Matthew[m]

[00:41] *** TreyHarr1 left
[00:46] *** rgrinberg joined
[00:53] *** zacts left
[00:55] *** TreyHarr1 joined
[01:07] *** cyphase left
[01:11] *** BenGoldberg joined
[01:12] *** pecastro left
[01:12] *** cyphase joined
[01:15] *** zacts joined
[01:16] *** Ben_Goldberg joined
[01:16] *** BenGoldberg left
[01:18] *** colomon left
[01:29] *** TreyHarr1 left
[01:33] *** TreyHarr1 joined
[01:38] *** cdg left
[01:38] *** cdg joined
[01:41] *** Actualeyes joined
[01:42] *** colomon joined
[01:44] *** cdg left
[01:45] <Xliff> "CStruct can't perform boxed bind on flattened attributes yet" what does this error mean?

[01:46] *** ilbot3 left
[01:47] *** pecastro joined
[01:48] *** ilbot3 joined
[01:49] *** kst` left
[01:51] *** kst joined
[01:51] *** kalkin- left
[01:51] *** kalkin-_ joined
[01:56] *** Zoffix joined
[01:57] *** TreyHarr1 left
[02:17] *** dylanwh_ left
[02:21] <geekosaur> sounds like you mi have a struct (instead of a struct pointer) inside another struct, and it can't deal with that just as it can't pass or return structs by value?

[02:21] <geekosaur> cursory reading of the code is compatible with this idea, at least

[02:21] <geekosaur> er, "you might have"

[02:22] *** Actualeyes left
[02:22] *** TreyHarr1 joined
[02:28] *** wamba left
[02:31] *** sufrostico left
[02:31] *** dylanwh_ joined
[02:32] *** Khisanth joined
[02:36] *** Actualeyes joined
[02:40] *** noganex joined
[02:43] *** molaf joined
[02:44] *** noganex_ left
[02:50] *** leo_ joined
[02:51] *** TreyHarr1 left
[02:52] <leo_> Hi everyone

[02:52] *** leo_ left
[02:53] *** leo__ joined
[02:56] *** araujo__ joined
[02:57] <AlexDaniel> leo__: hello

[02:57] <leo__> just want to notify whoever is in charge of rakudo.org that the Google results snippet reads "a Perl 6 compiler for the Parrot Virtual Machine" 

[02:58] *** zacts left
[02:58] <leo__> Looks like they have to update the site <meta> tags

[02:58] *** leo_ joined
[02:59] *** leo_ left
[02:59] *** araujo_ left
[03:01] <TEttinger> thanks, leo__, that's good to know

[03:02] *** leo__ left
[03:04] *** TreyHarr1 joined
[03:04] *** qt joined
[03:04] *** aries_liuxueyang joined
[03:04] *** avalokite joined
[03:06] *** rgrinberg left
[03:09] *** kid51 left
[03:18] *** Ben_Goldberg left
[03:19] *** dj_goku joined
[03:21] *** zacts joined
[03:38] *** zacts left
[03:43] *** holyghost left
[03:44] *** holyghost joined
[03:44] *** holyghost_ joined
[03:44] *** holyghost_ left
[03:44] *** TreyHarr1 left
[03:45] *** cpage_ left
[03:47] *** labster left
[03:49] *** Actualeyes left
[03:52] *** qt_ joined
[03:54] *** zacts joined
[03:55] *** khw left
[03:56] *** qt left
[03:57] *** jack_rabbit joined
[04:01] <dalek> bisectbot: 03a195a | MasterDuke17++ | benchable.pl:

[04:01] <dalek> bisectbot: Compute some additional statistics about the runs

[04:01] <dalek> bisectbot: review: https://github.com/perl6/bisectbot/commit/03a195ad4d

[04:03] *** Actualeyes joined
[04:07] *** holyghost left
[04:08] *** holyghost joined
[04:12] *** TreyHarr1 joined
[04:12] <holyghost> Some moron actually stacksmashed azure xchat here

[04:13] * holyghost colects the LARTs

[04:13] <holyghost> well, back to ircii then ...

[04:18] *** cpage_ joined
[04:19] *** TreyHarr1 left
[04:23] *** zakharyas joined
[04:23] *** TEttinger left
[04:24] *** araujo__ left
[04:25] *** skids left
[04:32] *** qt_ left
[04:35] *** AlexDaniel left
[04:35] <masak> I think pmichaud++ is the holder of rakudo.org

[04:36] *** TreyHarr1 joined
[04:44] *** aries_liuxueyang left
[04:48] *** aries_liuxueyang joined
[04:50] *** TreyHarr1 left
[04:56] *** Cabanossi left
[04:59] *** Cabanossi joined
[05:15] *** TreyHarr1 joined
[05:18] *** CIAvash joined
[05:21] *** holyghost left
[05:21] *** holyghost joined
[05:21] *** holyghost left
[05:26] *** TreyHarr1 left
[05:31] *** xinming left
[05:31] *** xinming joined
[05:37] *** holyghost joined
[05:49] *** sno left
[05:50] *** TreyHarr1 joined
[05:54] *** jack_rabbit left
[06:00] *** holyghost left
[06:10] *** TEttinger joined
[06:12] *** domidumont joined
[06:14] *** jack_rabbit joined
[06:16] *** TreyHarr1 left
[06:16] *** bob777 left
[06:16] *** domidumont left
[06:17] *** domidumont joined
[06:21] <masak> if I'm using `done-testing` instead of `plan` and want to skip a whole .t file with a given reason, how do I do that?

[06:22] *** domidumont left
[06:22] <masak> (`prove` says "skipped: (no reason given)" on a test file that does `done-testing` with 0 tests, and I thought I might be able to provide it a reason somehow)

[06:24] *** woodruffw joined
[06:24] *** woodruffw left
[06:24] *** firstdayonthejob joined
[06:25] *** woodruffw joined
[06:26] *** jack_rabbit left
[06:28] *** cpage_ left
[06:35] *** abraxxa joined
[06:36] *** labster joined
[06:39] <masak> uh, ok -- partial answer to my own question: if I do `skip("some_reason", 1); done-testing;` when aborting early from the test file, `prove` just marks the file as `..... ok` as usual. it doesn't propagate the reason

[06:39] *** pmqs left
[06:39] *** pmqs_ joined
[06:39] <masak> maybe that's the best I can hope for in this case :)

[06:39] <masak> I did try to locate where in App::Prove the "no reason given" logic hapens, but I didn't find it

[06:40] *** firstdayonthejob left
[06:40] *** TreyHarr1 joined
[06:41] *** bob777 joined
[06:49] *** domidumont joined
[06:52] *** darutoko joined
[06:52] *** sno joined
[07:03] *** TreyHarr1 left
[07:09] *** cpage_ joined
[07:15] *** jack_rabbit joined
[07:20] *** jack_rabbit left
[07:30] *** TEttinger left
[07:32] *** jonas2 joined
[07:35] *** cyphase left
[07:36] * lizmat clickbaits https://p6weekly.wordpress.com/2016/07/18/2016-29-the-zoffix-has-landed/

[07:39] *** cyphase joined
[07:45] <moritz> Zoffix++

[07:51] *** MARTIMM joined
[08:14] *** wamba joined
[08:19] *** RabidGravy joined
[08:44] *** abraxxa1 joined
[08:44] *** abraxxa left
[08:45] *** rindolf joined
[08:52] *** wamba left
[08:53] *** abraxxa1 left
[08:53] *** MARTIMM left
[08:53] *** abraxxa joined
[09:10] *** iH2O joined
[09:15] *** wamba joined
[09:22] *** silug joined
[09:44] *** rindolf left
[09:46] *** MARTIMM joined
[09:59] *** CIAvash left
[10:11] *** cog_ joined
[10:13] *** cognominal left
[10:13] *** wamba left
[10:16] *** cgfbee joined
[10:17] *** MARTIMM left
[10:18] <iH2O> great room z...

[10:21] <DrForr> It's work hours in Europe. Go figure.

[10:26] <El_Che> Perl6::Tidy, do I hear a P6 Best Practices book coming? :)

[10:27] <DrForr> BAHAHAHhahaahahaaahhaaa *THUNK* +++ATH0

[10:28] <El_Che> DrForr: keep at it and you'll have to change your nick to DrGrammars

[10:29] <DrForr> Someone's gotta.

[10:49] *** pmurias joined
[10:54] *** zakharyas left
[10:56] *** pmurias_ joined
[10:59] *** pmurias left
[11:07] *** pmurias joined
[11:10] *** pmurias_ left
[11:12] <pmurias> I'm looking into the nqp issue #85 ( https://github.com/perl6/nqp/issues/87 ), we don't have Inf and -Inf in nqp bigint do we?

[11:12] <yoleaux> 18 Jul 2016 21:48Z <konobi> pmurias: awesome... nice work. I have an NQP conjecture I'd like to run past you

[11:14] *** iH2O left
[11:14] *** canopus left
[11:21] *** dainis joined
[11:21] *** canopus joined
[11:26] *** labster left
[11:28] *** canopus left
[11:31] *** kid51 joined
[11:43] *** canopus joined
[11:44] *** MARTIMM joined
[11:57] *** CIAvash joined
[12:09] <[Coke]> (rakudo.org) I can't see a file that contains that string, so I assume it's buried in WP somewhere.

[12:13] *** brrt joined
[12:13] *** rgrinberg joined
[12:14] *** dainis left
[12:21] *** rgrinberg left
[12:21] *** rgrinberg joined
[12:22] *** El_Che joined
[12:29] *** cosimo joined
[12:31] *** domm joined
[12:32] *** kurahaupo joined
[12:38] *** mcmillhj joined
[12:41] <Frameless> masak: it's `say "Bail out! Your reason";` Which is conspicuously missing as a feature in our Test.pm6 :/

[12:41] *** sufrostico joined
[12:41] <Frameless> Oh, well, it'll consider it a failure tho

[12:42] <Frameless> Oh

[12:42] * Frameless peeks at guts of Test::When

[12:44] <Frameless> { say "1..0 # SKIPPING reason"; exit; } is the non-failure bailout

[12:44] *** colomon left
[12:52] *** wamba joined
[12:57] <Frameless> skip-rest()

[12:57] *** rindolf joined
[13:05] *** Psy-Q joined
[13:06] *** colomon joined
[13:08] *** wamba left
[13:08] <Juerd> skip-rest sounds like you're not getting any sleep :)

[13:10] *** dainis joined
[13:11] *** MARTIMM left
[13:11] *** rindolf left
[13:15] *** dainis left
[13:19] <dalek> doc: 4772e6b | (Zoffix Znet)++ | doc/Language/testing.pod6:

[13:19] <dalek> doc: Document (Str, Code) and (Pair) subtest's multis

[13:19] <dalek> doc: review: https://github.com/perl6/doc/commit/4772e6b3f6

[13:20] <dalek> doc: 3ab9d10 | (Zoffix Znet)++ | doc/Language/testing.pod6:

[13:20] <dalek> doc: Remove spurios character from last commit

[13:20] <dalek> doc: review: https://github.com/perl6/doc/commit/3ab9d10aec

[13:21] <Frameless> Is using two spaces after a period a rule in some country? I'm seeing it more often than I'd expect if someone was merely typoing.

[13:22] *** jonas2 left
[13:23] *** dvinciguerra_ joined
[13:24] <gregf_> like so: Perl6 ftw!.  next. #should be a typo imo

[13:24] *** wamba joined
[13:24] <dalek> doc: ff37694 | (Zoffix Znet)++ | doc/Language/testing.pod6:

[13:24] <dalek> doc: Clarify that subtest() counts as one test

[13:24] <dalek> doc: review: https://github.com/perl6/doc/commit/ff37694f38

[13:25] <gregf_> Frameless: also, assuming you're Zoffix, are grammars used for nlp/lsi related code?

[13:25] <gregf_> s/code/stuff/

[13:25] <Frameless> gregf_: no idea what "nlp/lsi" is :)

[13:25] <gregf_> er, Natural language processing, latent semantic indexeing :)

[13:26] <gregf_> gensym/nltk - python/java

[13:26] <Frameless> That really didn't help :)

[13:26] <Frameless> Maybe you're confusing me with someone else?

[13:27] <gregf_> er, well , i thought you were zoffix *i may be wrong , but i may be right as well*

[13:27] <gregf_> lol

[13:27] <Frameless> gregf_: Zoffix doesn't know anything about that either :P

[13:27] <gregf_> oh - since i saw this: https://github.com/zoffixznet/perl6-RT-REST-Client/blob/master/lib/RT/REST/Client.pm6

[13:28] *** Possum joined
[13:29] *** AlexDaniel joined
[13:29] <Frameless> Yeah, I wrote that but I've no idea what you're asking, sorry :)

[13:29] <moritz> I'm also confused about the relation between NLP and a bug tracker REST API

[13:31] <gregf_> heh

[13:31] <Frameless> The grammar in that module just gets a REST response with a bunch of tickets and parses out their IDs, tags (stuff in [brackets]) and subject lines.

[13:32] <gregf_> long story made short - parsing text. theres the new one by google i think - spacey/parsey or somesuch

[13:33] <gregf_> yes, my bad. the grammar was what i meant :!

[13:33] <moritz> I don't know much about NLP, but I don't think Perl 6 grammars are a good way to tackle it

[13:34] *** brrt left
[13:34] <gregf_> atleast i got something right haha..  Zoffix == frameless ;)

[13:34] <gregf_> moritz: sure, just curious :) *nothing to lose*

[13:36] <gregf_> sorry for the noise tho'

[13:42] <[Coke]> (2 spaces after period) in the US at least, it was the proper way to type things out on a literal typewriter.

[13:42] <Frameless> Ah

[13:42] <[Coke]> some people still do it in source a lot, even though most renderings will collapse whitespace.

[13:42] <Psy-Q> installing perl6-panda on debian and doing "panda" yields "Could not find Shell::Command at line 2 in:" (etc.). how can i find out what's wrong? should we even be using debian packages of perl6? (it's on testing)

[13:43] <moritz> Psy-Q: sounds like the package is a bit broken. In that case I'd submit a bug report, and use a source build of rakudo

[13:43] <RabidGravy> yeah,  I do find it amusing with the web-age "typographers" railing against the two spaces thing, when they've probably never used a typewriter

[13:43] <RabidGravy> it's amazingly difficult to get out of the habit.

[13:44] <Psy-Q> moritz: alright, i'll try!

[13:45] *** skids joined
[13:47] <Frameless> I never realized using a typewriter was a prerequisite for being good a typography :)

[13:47] <Frameless> From what I'm reading, the two-space thing was basically because typewriters used a monospace font.

[13:48] <gfldex> Psy-Q: http://pl6anet.org/drop/rakudo-star-2016.07-RC1.tar.gz

[13:48] <moritz> wouldn't it be a nice idea to try to make a mechanical typewriter with a variable-width font?

[13:48] <Psy-Q> gfldex: oh, fankew, i just started reading the intro and grabbed rakudobrew, but maybe that's better then :)

[13:48] <Frameless> FWIW, perl6-panda is just the panda, so I assume Psy-Q already has Rakudo installed

[13:48] <gfldex> btw. I did install RC1 on a clean debian stable and it worked fine

[13:48] <[Coke]> moritz: O_o;

[13:49] <Psy-Q> yeah, i had perl6 from the debian rakudo package. but i'm happy to grab everything fresh, no problem

[13:49] <gfldex> any .exe for star-2016.07 yet?

[13:49] <Frameless> I like rakudobrew.

[13:49] <Frameless> tadzik++

[13:50] *** rindolf joined
[13:52] <Psy-Q> ooooo, panda and rakudo just worked with rakudobrew

[13:52] <Psy-Q> happiness ensued

[13:53] <[Coke]> gfldex: nope. I have a windows laptop, I can give it a shot if there are directions (found some in star...)

[13:53] <Frameless> :)

[13:53] <Psy-Q> this is a lot less painfull than building rubies with rbenv \o/

[13:53] <Psy-Q> *painful

[13:53] <[Coke]> ... and it requires installing a ton of stuff I don't have. Will take a look this evening.

[13:54] <Frameless> Psy-Q: FWIW, if you issues with panda in the future, you can give `zef` a try. It's an alternative package manager. rakudobrew build-zef will install it.

[13:54] <Frameless> Psy-Q: yeah, it's pretty sweet. You can also install multiple perl6 versions with it too

[13:54] <Psy-Q> Frameless: i'll make a note of zef then

[13:54] <Psy-Q> but baby steps. my last perl was in 1997 or so

[13:54] <Frameless> :o

[13:55] <Frameless> Psy-Q: then it's worth nothing that we have two sister Perls now: Perl 5 and Perl 6. Both are actively developed :)

[13:55] <Psy-Q> i've seen larry talk at FOSDEM two years ago :D

[13:56] <Psy-Q> but i had 2 years latency to actually get into it now :)

[13:56] <Psy-Q> Frameless: much interested in perl 6 (less so 5) since it seems to combine a few of my favorite things, and it seems to be more enjoyable to use than many

[13:58] *** ufobat joined
[14:00] <gregf_> Perl6 looks good to go into production. now for a rewrite of twitter in Perl6! *hides*

[14:01] <DrForr> Join the crowd.

[14:01] *** itaipu joined
[14:01] <mst> Psy-Q: if you do have reason to use perl5, remember Moo/Moose provide a similarish set of OO, within the limitations of the older language

[14:03] <Psy-Q> mst: i think i heard that Catalyst uses Moose and i might be interested in that. but i'll fool around with perl6 web stuff too :D

[14:03] <mst> Psy-Q: oh, absolutely, this is an 'and', not an 'or' :D

[14:03] <Psy-Q> wheee!

[14:03] <mst> but basically the inheritance goes 'old perl6 metamodel' -> Moose -> 'current perl6 metamodel'

[14:04] <mst> which much theft of ideas back and forth, because that's how open source is supposed to work

[14:04] <gfldex> Psy-Q: reading about the traps early may be helpful https://docs.perl6.org/language/traps

[14:04] <Psy-Q> i might end up very blasphemous and not go much OO at all

[14:04] <mst> that's fine, both languages are totally designed for you to do that too

[14:04] <Psy-Q> i was learning some clojure so i might be interested in doing something FP'ish on perl 6

[14:04] <mst> my perl5 code tends to be very functional

[14:04] <mst> see http://shadow.cat/blog/matt-s-trout/do-you-copy/

[14:04] <mst> the pattern is totally applicable to perl6 as well

[14:04] <Psy-Q> gfldex: oh, thanks!

[14:05] <sammers> m: 'some text [[ iminside ]] [[ metoo ]] some more text [[ alsoinside ]]'.match: / '[[ ' \s*? (\w+) \s*? ' ]]'  /, :g

[14:05] <camelia> rakudo-moar 649ff4: ( no output )

[14:05] *** Emeric joined
[14:05] *** rmmm joined
[14:06] <sammers> hmm

[14:06] <Frameless> you need a `say`

[14:06] <sammers> ah, thanks

[14:06] <sammers> m: say 'some text [[ iminside ]] [[ metoo ]] some more text [[ alsoinside ]]'.match: / '[[ ' \s*? (\w+) \s*? ' ]]'  /, :g

[14:06] <camelia> rakudo-moar 649ff4: OUTPUT«(｢[[ iminside ]]｣␤ 0 => ｢iminside｣ ｢[[ metoo ]]｣␤ 0 => ｢metoo｣ ｢[[ alsoinside ]]｣␤ 0 => ｢alsoinside｣)␤»

[14:07] *** Emeric is now known as Begi

[14:08] *** ptolemarch joined
[14:08] <Psy-Q> the issue i had with the panda debian package for testing is already reported: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=818926

[14:08] <sammers> can someone help me understand the match output? is there a way to return a list / array of only the matched captures?

[14:08] <Psy-Q> so yay debian

[14:09] <Frameless> m: say 'some text [[ iminside ]] [[ metoo ]] some more text [[ alsoinside ]]'.comb: / '[[' ~ ']]' [\s+ <(\w+)> \s+]/

[14:09] <camelia> rakudo-moar 649ff4: OUTPUT«(iminside metoo alsoinside)␤»

[14:09] <Frameless> sammers: that's one way.

[14:09] *** AlexDaniel left
[14:10] <sammers> Frameless, thanks

[14:11] *** dainis joined
[14:11] <Frameless> m: say 'some text [[ iminside ]] [[ metoo ]] some more text [[ alsoinside ]]'.match(/ '[[ ' \s*? (\w+) \s*? ' ]]'  /, :g)».[0]».Str

[14:11] <camelia> rakudo-moar 649ff4: OUTPUT«(iminside metoo alsoinside)␤»

[14:11] <Frameless> Another one.

[14:12] <Frameless> Note that [0] is the same `0 =>` you saw in your original output. The capture

[14:12] <Frameless> The ».Str bit just converts match objects for the captures to Str

[14:12] <gregf_> Perl5 would be lesser code.but that Perl6 code is more readable

[14:12] <sammers> Frameless, thanks I have been using something similar to your second example

[14:12] *** kurahaupo left
[14:13] <sammers> but I like the .comb solution

[14:13] <sammers> thanks

[14:13] <jast> gregf_: golfing is always an option :)

[14:13] <gregf_> join " ---- ", "some text [[ iminside ]] [[ metoo ]] some more text [[ alsoinside ]]" =~ /(\[\[[^\]]+\]\])/g; #*there*

[14:13] <Frameless> Yeah, this is an area where Perl 5 way is way more concise. http://perl6.party/post/Perl-6-S---Substitution-Operator

[14:14] <psch> m: m:P5/(\[\[[^\]]+\]\])/g

[14:14] <camelia> rakudo-moar 649ff4: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of /g; in Perl 6 please use :g␤at <tmp>:1␤------> 3m:P5/(\[\[[^\]]+\]\])/g7⏏5<EOL>␤»

[14:14] <psch> m: m:g:P5/(\[\[[^\]]+\]\])/

[14:14] <camelia> rakudo-moar 649ff4: OUTPUT«Method 'match' not found for invocant of class 'Any'␤  in block <unit> at <tmp> line 1␤␤»

[14:14] <Frameless> gregf_: and you have an error there. It captures the brackets too :P 

[14:14] <psch> if you really want that...

[14:15] <Frameless> s/error/not what the P6 version does/;

[14:15] <psch> m: /\[\[(<-[\]>+)\]\]/ # and the similarly dense Perl6 version

[14:15] <camelia> rakudo-moar 649ff4: OUTPUT«5===SORRY!5===␤Unrecognized regex metacharacter < (must be quoted to match literally)␤at <tmp>:1␤------> 3/\[\[(<-[\]>+)\]\7⏏5]/ # and the similarly dense Perl6 versi␤Unrecognized regex metacharacter - (must be quoted to match literally)…»

[14:15] *** dainis left
[14:15] <psch> oh, apparently not

[14:16] <gregf_> then just shift the '('\'s 

[14:16] <psch> ...what is it complaining about there?

[14:16] <Frameless> psch: missing ] in char class

[14:16] <psch> oh

[14:17] <psch> m: /\[\[(<-[\\]>+)\]\]/  # yeah, escape the escape first

[14:17] <camelia> rakudo-moar 649ff4: ( no output )

[14:18] <psch> sure, it's a few more characters, but you're throwing readability out already anyway :)

[14:19] *** kid51 left
[14:19] <moritz> '[[' is just as many characters as \[\[, but much more readable

[14:19] <moritz> IMHO

[14:20] <moritz> /'[[' (<-[\\]>+) ']]'/

[14:20] <moritz> 16:20 -!- Irssi: Unknown command: '[['

[14:20] <moritz> guess what happened :-)

[14:25] *** pmurias_ joined
[14:27] <jast> /[[ <- now with more output and less error!

[14:28] *** pmurias left
[14:31] *** ribasushi left
[14:31] *** TreyHarr1 joined
[14:34] *** pmurias_ is now known as pmurias

[14:35] *** TreyHarr1 left
[14:40] *** brrt joined
[14:41] <brrt> parsey mcparseface

[14:41] <brrt> oh, that is an old discussion

[14:41] *** ribasushi joined
[14:45] <gregf_> https://gist.github.com/anonymous/c34268fec37aa438536ff374e6217375 <= le

[14:46] <gregf_> oops :/ sorry

[14:49] *** holyghost joined
[14:49] *** nisar joined
[14:50] *** sammers joined
[14:52] *** brrt left
[14:53] *** nisar left
[14:53] *** wamba left
[14:58] *** Sigyn joined
[15:00] *** _28_ria left
[15:03] *** _28_ria joined
[15:09] <gfldex> m: for '.' { .Str.say when .IO.d; .IO.dir()>>.&?BLOCK when .IO.d }

[15:09] <camelia> rakudo-moar 649ff4: OUTPUT«(timeout).␤.cpanm␤.cpanm/work␤.cpanm/work/1449498348.15219␤.cpanm/latest-build␤.local␤.local/share␤.local/share/NieczaModuleCache␤.local/share/systemd␤.npm␤.npm/charenc␤.npm/charenc/0.0.1␤.npm/charenc/0.0.1/package␤.npm/crypt␤.n…»

[15:09] <gfldex> m: for '.' { .Str.say when !.IO.d; .IO.dir()>>.&?BLOCK when .IO.d }

[15:09] <camelia> rakudo-moar 649ff4: OUTPUT«(timeout).cpanm/work/1449498348.15219/build.log␤.cpanm/latest-build/build.log␤.cpanm/build.log␤.local/share/NieczaModuleCache/Test.Util.dll␤.local/share/NieczaModuleCache/Test.Util.ser␤.local/share/systemd/user␤.npm/charenc/0.0.1/package/packag…»

[15:10] <gfldex> m: { .Str.say when !.IO.d; .IO.dir()>>.&?BLOCK when .IO.d }('.')

[15:10] *** Tonik joined
[15:11] <camelia> rakudo-moar 6ef9e0: OUTPUT«(timeout).cpanm/work/1449498348.15219/build.log␤.cpanm/latest-build/build.log␤.cpanm/build.log␤.local/share/NieczaModuleCache/Test.Util.dll␤.local/share/NieczaModuleCache/Test.Util.ser␤.local/share/systemd/user␤.npm/charenc/0.0.1/package/packag…»

[15:11] <gfldex> any ideas how to golf that further?

[15:11] *** dainis joined
[15:16] *** dainis left
[15:22] <ufobat> heya :D

[15:23] <gfldex> m: say "ohai ufobat!";

[15:23] <camelia> rakudo-moar 6ef9e0: OUTPUT«ohai ufobat!␤»

[15:24] <Frameless> m: { .d && .dir>>.&?BLOCK || .say given .IO }(".")

[15:24] <camelia> rakudo-moar 6ef9e0: OUTPUT«(timeout)".cpanm/work/1449498348.15219/build.log".IO␤".cpanm/latest-build/build.log".IO␤".cpanm/build.log".IO␤".local/share/NieczaModuleCache/Test.Util.dll".IO␤".local/share/NieczaModuleCache/Test.Util.ser".IO␤".local/share/systemd/user".IO␤".n…»

[15:25] <Frameless> m: { .d && .dir».&?BLOCK || .put given .IO }(".")

[15:26] <camelia> rakudo-moar 6ef9e0: OUTPUT«(timeout).cpanm/work/1449498348.15219/build.log␤.cpanm/latest-build/build.log␤.cpanm/build.log␤.local/share/NieczaModuleCache/Test.Util.dll␤.local/share/NieczaModuleCache/Test.Util.ser␤.local/share/systemd/user␤.npm/charenc/0.0.1/package/packag…»

[15:26] *** captain-adequate joined
[15:27] <gfldex> m: { .d && .dir».&?BLOCK || .put }(".".IO)

[15:27] <camelia> rakudo-moar 6ef9e0: OUTPUT«(timeout).cpanm/work/1449498348.15219/build.log␤.cpanm/latest-build/build.log␤.cpanm/build.log␤.local/share/NieczaModuleCache/Test.Util.dll␤.local/share/NieczaModuleCache/Test.Util.ser␤.local/share/systemd/user␤.npm/charenc/0.0.1/package/packag…»

[15:27] <gfldex> :D

[15:27] <Frameless> :)

[15:27] <gfldex> take that python!

[15:28] *** sufrostico left
[15:29] *** colomon left
[15:30] *** sufrostico joined
[15:35] *** sufrosti1o joined
[15:35] *** sufrostico left
[15:36] *** cdg joined
[15:36] <stmuk> http://pl6anet.org/drop/rakudo-star-2016.07-x86_64%20(JIT)-RC1.msi

[15:37] <jdv79> Zoffix: congrats on doing the ridiculous paperwork to become a rakudo committer

[15:37] <dalek> perl6.org: caf2973 | (Zoffix Znet)++ | source/compilers/index.html:

[15:37] <dalek> perl6.org: List Wikipedia entry instead of now-defunct pugscode.com

[15:37] <dalek> perl6.org: 

[15:37] <dalek> perl6.org: Closes #53

[15:37] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/caf297300c

[15:38] <Frameless> jdv79: thanks :)

[15:38] <jdv79> do you have something like mulitiple personality disorder?

[15:39] <jdv79> i never know who you are at any given time

[15:39] <jdv79> multiple name more like

[15:39] *** sufrosti1o left
[15:40] <Frameless> Ehehe

[15:41] *** sufrostico joined
[15:44] <Frameless> (and no, I don't have such disorders :P)

[15:45] <tadzik> computer, messages?

[15:46] <jdv79> cause self diagnosis is super reliable:)

[15:46] <Frameless> I'm sorry, I can't do that

[15:46] <Frameless> Hal... ?... Damn. Forgot the reference and screwed up the joke :P

[15:47] *** wamba joined
[15:48] *** avenj joined
[15:48] *** avenj left
[15:48] *** avenj joined
[15:49] <Frameless> jdv79: considering the diagnosis itself is controversial and I have none of the symptoms, self-diagnosis is quite reliable :P

[15:50] <jdv79> ok Hal

[15:51] <Frameless> And now you made me think I should pick a new nick :P

[15:51] <gfldex> stmuk: i installed the .msi and git on win10 and panda doesn't work at all

[15:52] <stmuk> you have to be in a directory with write priv to run panda

[15:52] <gfldex> stmuk: "no such file or directory\nin sub run-and-gather-output"...

[15:52] *** sufrostico left
[15:52] <stmuk> can you paste the command and output on a gist?

[15:55] *** gfldex-win joined
[15:55] <gfldex-win> stmuk: https://gist.github.com/anonymous/100564508d67576ff91ddb5a461a24f7

[15:55] <gfldex> stmuk: i'm pretty such C:\Users\dex is writable

[15:56] <stmuk> thanks .. I'll fire up my VM and try to reproduce

[15:57] <stmuk> there have been windows panda issues before ... you might have more success with zef

[15:58] *** itaipu left
[16:00] *** zostay joined
[16:04] *** sufrostico joined
[16:04] <stmuk> do you have prove from a perl 5 windows install (like strawberry perl) in the path?

[16:05] <timotimo> https://twitter.com/michielsikma/status/755423584475025408  -  we need a slang for this ASAP

[16:07] <gfldex> stmuk: i do not, will try that in a bit

[16:08] <R[DaneelOlivaw]> m: sub circumfix:<✌ ✌> { $^a }; say ✌'meow'✌

[16:08] <camelia> rakudo-moar 6ef9e0: OUTPUT«meow␤»

[16:08] <stmuk> panda should probably give an explicit error if it can't find prove and git

[16:09] <stmuk> what was the status of leont's prove6 I wonder?

[16:10] *** domidumont left
[16:10] <stmuk> gfldex: panda --notests Foo::Bar should work although JSON::Fast is already installed by R* anyway

[16:16] <R[DaneelOlivaw]> m: say q✌meow✌

[16:16] <camelia> rakudo-moar 6ef9e0: OUTPUT«meow␤»

[16:18] <R[DaneelOlivaw]> Damn, I need to learn slangs

[16:23] *** holyghost left
[16:24] <R[DaneelOlivaw]> m: use nqp; nqp::bindkey(%*LANG, "MAIN", %*LANG<MAIN>.HOW.mixin(%*LANG<MAIN>, role {token quote:sym<apos> { "✌" ~ "✌" <nibble(self.quote_lang(%*LANG<Quote>, "✌", "✌", ["q"]))>}})); 

[16:24] <camelia> rakudo-moar 6ef9e0: OUTPUT«This type (Failure) does not support associative operations␤  in block <unit> at <tmp> line 1␤␤»

[16:24] * R[DaneelOlivaw] cues in the "I don't know what I'm doing" meme

[16:25] <gregf_> m: sub prefix:<✌> { return "!" ~ $^a; }; sub postfix:<✌> { return $^a ~ "!"; }; say ✌ "meow" ~ "meow"✌

[16:25] <camelia> rakudo-moar 6ef9e0: OUTPUT«!meowmeow!␤»

[16:25] <R[DaneelOlivaw]> That's not really it, since you have to quote using other quotes

[16:26] <gfldex> lolibloggedalittle https://gfldex.wordpress.com/2016/07/19/its-blocks-all-the-way-down/

[16:27] *** zacts left
[16:28] *** jast joined
[16:32] <dalek> doc: a6a31bb | (Wenzel P. P. Peppmeyer)++ | doc/Language/variables.pod6:

[16:32] <dalek> doc: add example for compile time variables

[16:32] <dalek> doc: review: https://github.com/perl6/doc/commit/a6a31bbee6

[16:32] <hoelzro> gfldex: wow, neat trick!

[16:32] *** domidumont joined
[16:33] <hoelzro> I didn't think about ever using &?BLOCK to refer to the block for a loop, but I guess other languages have poorly informed my thinking in that area =)

[16:36] <R[DaneelOlivaw]> m: https://gist.github.com/zoffixznet/b0c00840ea52a15fdbefda892fc2b1ee

[16:36] <camelia> rakudo-moar 6ef9e0: OUTPUT«===SORRY!===␤Cannot iterate object with P6opaque representation (Array)␤»

[16:36] <R[DaneelOlivaw]> :( no idea what that means... 

[16:37] <psch> it means [] makes a Perl 6 Array but it wants a BOOTArray

[16:37] <psch> m: use nqp; say (nqp::list).^name

[16:37] <camelia> rakudo-moar 6ef9e0: OUTPUT«BOOTArray␤»

[16:38] <psch> m: https://gist.github.com/peschwa/41db187968dba5841e6ba7c9acf06bac # see, it changes the error \o/

[16:38] <camelia> rakudo-moar 6ef9e0: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3https:7⏏5//gist.github.com/peschwa/41db187968dba5␤    expecting any of:␤        colon pair␤»

[16:38] <psch> oh hm

[16:39] <psch> m: https://gist.github.com/peschwa/41db187968dba5841e6ba7c9acf06bac 

[16:39] <camelia> rakudo-moar 6ef9e0: OUTPUT«===SORRY!===␤No such method 'CALL-ME' for invocant of type 'Str'␤»

[16:41] *** FROGGS joined
[16:42] <R[DaneelOlivaw]> Ah. Thanks.

[16:47] *** dainis joined
[16:48] *** TreyHarr1 joined
[16:50] *** sufrostico left
[16:51] <psch> m: use nqp; say nqp::isinvokable("meow") # uhh?

[16:51] <camelia> rakudo-moar 6ef9e0: OUTPUT«1␤»

[16:51] <R[DaneelOlivaw]> m: "meow"()

[16:51] <camelia> rakudo-moar 6ef9e0: OUTPUT«No such method 'CALL-ME' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[16:52] <psch> nqp-m: say(nqp::isinvokable("meow"))

[16:52] <camelia> nqp-moarvm: OUTPUT«0␤»

[16:52] <psch> j: https://gist.github.com/peschwa/41db187968dba5841e6ba7c9acf06bac

[16:52] <camelia> rakudo-jvm cd19db: OUTPUT«===SORRY!===␤No such method 'CALL-ME' for invocant of type 'Str'␤»

[16:52] <psch> curious

[16:54] *** zacts joined
[16:55] *** sufrostico joined
[16:56] <R[DaneelOlivaw]> j: say(nqp::isinvokable("meow"))

[16:56] <camelia> rakudo-jvm cd19db: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Could not find nqp::isinvokable, did you forget 'use nqp;' ?␤at <tmp>:1␤------> 3say(nqp::isinvokable("meow")7⏏5)␤»

[16:56] <R[DaneelOlivaw]> j: use nqp; say(nqp::isinvokable("meow"))

[16:56] <camelia> rakudo-jvm cd19db: OUTPUT«1␤»

[16:58] *** gfldex-win left
[16:58] *** TreyHarr1 left
[17:00] *** dainis left
[17:03] *** obfusk joined
[17:08] <psch> m: use nqp; use QRegex:from<NQP>; "foo" ~~ / { nqp::bindattr(nqp::getattr(nqp::decont($/.CURSOR), Cursor, '$!shared'), ParseShared, '$!orig', nqp::unbox_s("bar")) } ("foo") /; say $/ # /o\

[17:08] <camelia> rakudo-moar 6ef9e0: OUTPUT«｢bar｣␤ 0 => ｢bar｣␤»

[17:08] <psch> that's kind of related to the slang stuff, but not really :P

[17:08] <psch> as in, i'm thinking that having a Str in $/.CURSOR.orig - instead of a BOOTStr - is what's making QRegex weird

[17:08] <psch> but while that above works, what i'm trying with the slang doesn't

[17:09] <psch> also, consider that it still doesn't *really* work either, what's happening up there :P

[17:09] <psch> ...never mind that it's weird and spooky

[17:09] <R[DaneelOlivaw]> :)

[17:10] *** araujo joined
[17:10] *** firstdayonthejob joined
[17:11] *** sufrostico left
[17:14] *** sufrostico joined
[17:18] *** girafe joined
[17:18] *** iH2O joined
[17:19] *** iH2O left
[17:21] *** pmurias_ joined
[17:21] *** CIAvash left
[17:22] *** zacts left
[17:22] *** zacts_pi joined
[17:23] * [Coke] thinks we're seeing an awful lot of nqp stuff in #perl6 (as opposed to #perl6-dev).

[17:23] <[Coke]> (like, more than any is an awful lot. :)

[17:24] <psch> idk, in a discussion about slangs its appropriate

[17:24] <psch> i'd say at least

[17:25] <psch> since we don't have any guaranteed-nqp-free way for implementing them

[17:25] *** pmurias left
[17:26] *** zacts_raincity joined
[17:27] *** avalokite left
[17:27] *** zacts_pi left
[17:29] *** sno left
[17:29] *** zacts_raincity left
[17:30] *** zacts_pi joined
[17:35] <mst> Zoffix: I HATE YOU SO MUCH

[17:37] *** zacts_pi left
[17:38] <R[DaneelOlivaw]> mst: why?

[17:38] <R[DaneelOlivaw]> XD

[17:38] <mst> R[DaneelOlivaw]: *($%&$*(%$&(%$*( RT::Client::REST £()$&%*($

[17:39] <R[DaneelOlivaw]> mst: huh? Why?

[17:39] <mst> if you recall, I'm trying to do stuff with it

[17:39] <mst> and you were trying to do stuff with it

[17:39] <mst> so I'm trying to figure out how to produce something generalish

[17:39] * R[DaneelOlivaw] doesn't recall you doing stuff with it.

[17:39] <R[DaneelOlivaw]> Oooohhh

[17:40] <R[DaneelOlivaw]> Right, well, I wrote a basic Perl 6 version of it.

[17:40] <mst> because I figure I may's well try and produce something that we can share

[17:40] <mst> but obviously that means not just implementing what I need

[17:40] <mst> and clearly that's All Your Fault

[17:40] <R[DaneelOlivaw]> :)

[17:40] *** zypper joined
[17:41] *** TreyHarr1 joined
[17:41] <zypper> `Set' does `Associative', right? If so, why can't I do `my %foo = set;' (with a %-sigil).

[17:42] *** shakattack joined
[17:42] <psch> m: my %foo is Set; say %foo.WHAT

[17:42] <camelia> rakudo-moar 6ef9e0: OUTPUT«(Set)␤»

[17:42] <psch> note though that Sets are immutable

[17:42] <psch> alternatively you can bind

[17:42] <psch> m: my %foo := set(1,2); say %foo.WHAT # 

[17:42] <camelia> rakudo-moar 6ef9e0: OUTPUT«(Set)␤»

[17:43] <psch> the latter gives you the initialization, while the former tries to assign after initializing %foo, which doesn't work

[17:43] <psch> m: my %foo is Set = set(1,2); 

[17:43] <camelia> rakudo-moar 6ef9e0: OUTPUT«Cannot modify an immutable Set␤  in block <unit> at <tmp> line 1␤␤»

[17:46] *** shakattack left
[17:46] *** vendethiel joined
[17:54] *** cyphase left
[17:55] *** colomon joined
[17:55] *** domidumont left
[17:58] *** cyphase joined
[18:03] *** acrussell joined
[18:11] <dalek> modules.perl6.org: 469195d | (Zoffix Znet)++ | Build.PL:

[18:11] <dalek> modules.perl6.org: List Data::UUID in prereqs

[18:11] <dalek> modules.perl6.org: 

[18:11] <dalek> modules.perl6.org: It's listed as prereq by Data::GUID, but for some reason did not get installed on a clean system, even though Data::GUID did install fine.

[18:11] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/469195d768

[18:13] *** TreyHarr1 left
[18:13] <dalek> modules.perl6.org: 88742d4 | (Zoffix Znet)++ | Build.PL:

[18:13] <dalek> modules.perl6.org: Add Time::Moment to prereqs

[18:13] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/88742d4359

[18:15] *** kid51 joined
[18:16] *** andrzejku joined
[18:18] <dalek> modules.perl6.org: f6f8f50 | (Zoffix Znet)++ | Build.PL:

[18:18] <dalek> modules.perl6.org: Add Imager::File::PNG to prereqs

[18:18] <dalek> modules.perl6.org: 

[18:18] <dalek> modules.perl6.org: It may have been a prereq on ::AssetPack at some point, but is no longer

[18:18] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/f6f8f5095c

[18:24] *** TreyHarr1 joined
[18:30] *** zacts joined
[18:32] *** CIAvash joined
[18:35] *** setty1 joined
[18:42] *** dainis joined
[18:44] *** eam joined
[18:46] <dalek> doc: b0666ad | (Jan-Olof Hendig)++ | doc/Type/Str.pod6:

[18:46] <dalek> doc: Change docs for samemark so it complies with RT #128662

[18:46] <dalek> doc: review: https://github.com/perl6/doc/commit/b0666add53

[18:46] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128662

[18:47] *** kyclark joined
[18:49] *** labster joined
[18:49] <kyclark> I'm working on a longest common substring problem. As I move from shorter to longer, I would like to use the previously found shorter strings to filter the longer matches, so I'm thinking about having an Array of Regexes.  Can/should I do this?

[18:50] *** spider-mario joined
[18:51] <moritz> an array of regexes sounds suspiciously like you'll be re-doing all the matches

[18:51] *** sufrostico left
[18:52] <moritz> from a performance perspective you might want a more dynamic programming-like approach where you only need to check the new characters to go to longer strings, or something like that

[18:52] <moritz> but tbh, I'm not so deep in the topic to know for sure

[18:54] <kyclark> Is it possible to do something like 'foo' ~~ /@re/?

[18:55] <kyclark> Also, I can't figure out how to even create an array

[18:55] <moritz> my @array;

[18:55] <kyclark> m: <foo bar baz>.map: -> $s { rx/$s/ }

[18:55] <camelia> rakudo-moar 6ef9e0: ( no output )

[18:55] <moritz> now you have an array

[18:55] <perigrin> sure but then that's *your* array ... how do you create one for kyclark 

[18:55] <moritz> perigrin: :-)

[18:56] <R[DaneelOlivaw]> kyclark: yes, you can use @re

[18:56] <moritz> m: my @a = <foo bar baz>; say 'bartender' ~~ /|@a/

[18:56] <camelia> rakudo-moar 6ef9e0: OUTPUT«｢bar｣␤»

[18:56] <R[DaneelOlivaw]> moritz: what's |?

[18:56] *** cyphase left
[18:56] <moritz> m: my @a = <foo bar baz>; say 'bartender' ~~ /@a/

[18:56] <camelia> rakudo-moar 6ef9e0: OUTPUT«｢bar｣␤»

[18:56] <kyclark> Oh!  It's easier than I thought.

[18:57] <moritz> R[DaneelOlivaw]: just a more explicit way to write @a

[18:57] <R[DaneelOlivaw]> Ah

[18:57] <moritz> R[DaneelOlivaw]: you can also say ||@a to use || instead of | between the array elements

[18:57] <R[DaneelOlivaw]> Sweet

[18:57] <moritz> so first-one-matches instead of longest match

[18:57] *** dainis left
[18:58] *** rgrinberg left
[19:00] *** AlexDaniel joined
[19:01] *** cyphase joined
[19:03] *** Tonik left
[19:04] <R[DaneelOlivaw]> m: my @a = <bar bart b.*>; say 'bartender' ~~ /<@a>/

[19:04] <camelia> rakudo-moar 6ef9e0: OUTPUT«｢bartender｣␤»

[19:05] <R[DaneelOlivaw]> kyclark: ^ since you mentioned array of *regexes*. By default, the contents are treated as regular strings.

[19:06] *** addison joined
[19:11] *** FROGGS left
[19:13] *** FROGGS joined
[19:14] *** ptolemarch left
[19:19] <dalek> doc/ipc: 4943e66 | (Sterling Hanenkamp)++ | doc/Language/ipc.pod:

[19:19] <dalek> doc/ipc: A basic start to documenting IPC

[19:19] <dalek> doc/ipc: review: https://github.com/perl6/doc/commit/4943e66142

[19:22] *** darutoko left
[19:24] <R[DaneelOlivaw]> zostay: FWIW, :out, :err and ilk are called "named arguments". 

[19:26] <zostay> right, but as boolean bits i also think of them as flags ;-p

[19:26] <zostay> but i suppose they can be set to other things other than boolean

[19:26] *** travis-ci joined
[19:26] <travis-ci> Doc build failed. Sterling Hanenkamp 'A basic start to documenting IPC'

[19:26] <travis-ci> https://travis-ci.org/perl6/doc/builds/145913829 https://github.com/perl6/doc/commit/4943e661420e

[19:26] *** travis-ci left
[19:27] <gfldex> please run make test before you push to the docs

[19:27] *** sno joined
[19:27] <R[DaneelOlivaw]> zostay: yeah, I guess it makes sense with the bools. 

[19:28] <zostay> gfldex++ i was just thinking i forgot to do something

[19:28] *** sufrostico joined
[19:28] *** zacts left
[19:28] <R[DaneelOlivaw]> One example I'd love to see (if it exists) is how to give run() STDIN via a string.

[19:28] <R[DaneelOlivaw]> Like if I want to just send "foobar" to its STDIN.

[19:29] <zostay> i can add that

[19:29] <R[DaneelOlivaw]> \o/

[19:29] <zostay> i wrote this on the plane either to or from orlando last month and hadn't gotten around to posting the PR

[19:30] <dalek> doc: e73b15e | (Wenzel P. P. Peppmeyer)++ | Makefile:

[19:30] <dalek> doc: add make push

[19:30] <dalek> doc: review: https://github.com/perl6/doc/commit/e73b15eb09

[19:30] <zostay> that's been the story of my life for the past 2 months, 10 different projects started, none of them finished

[19:31] <R[DaneelOlivaw]> That's been the story of my life for... life :D

[19:32] <zostay> yeah, but it's been worse lately, i blame yard work

[19:35] <zostay> btw, gfldex, thx for all the effort on making the docs better, locally hostable, etc. the perl6 doc tree is a real joy to work with

[19:35] <gfldex> zostay: it's not done yet, we still got MAIN.html and main.html

[19:36] <gfldex> but I want the single page version done first, so we ship something that works for windows for sure and is more or less printable

[19:37] <dalek> doc/ipc: a1af06a | (Sterling Hanenkamp)++ | doc/Language/ipc.pod (2 files):

[19:37] <dalek> doc/ipc: Use ipc.pod6 rather than ipc.pod, oops

[19:37] <dalek> doc/ipc: review: https://github.com/perl6/doc/commit/a1af06a357

[19:48] <dalek> doc/ipc: 13545b3 | (Sterling Hanenkamp)++ | doc/Language/ipc.pod6:

[19:48] <dalek> doc/ipc: Fix missing =end pod tag

[19:48] <dalek> doc/ipc: review: https://github.com/perl6/doc/commit/13545b367f

[19:48] *** travis-ci joined
[19:48] <travis-ci> Doc build failed. Sterling Hanenkamp 'Use ipc.pod6 rather than ipc.pod, oops'

[19:48] <travis-ci> https://travis-ci.org/perl6/doc/builds/145917754 https://github.com/perl6/doc/compare/4943e661420e...a1af06a3579c

[19:48] *** travis-ci left
[19:48] <zostay> ran make test, but not make this time...

[19:49] <perlpilot> zostay: https://pbs.twimg.com/media/B3T-9npCIAAWY7y.jpg

[19:50] <zostay> perlpilot++

[19:50] <moritz> I know this feeling very well

[19:55] *** FROGGS left
[19:57] *** kurahaupo joined
[19:57] *** ufobat left
[19:58] *** cyphase left
[19:59] <dalek> doc/ipc: 4d0b548 | (Sterling Hanenkamp)++ | doc/Language/ipc.pod6:

[19:59] <dalek> doc/ipc: Empty regex does not work, use ' ' instead

[19:59] <dalek> doc/ipc: 

[19:59] <dalek> doc/ipc: Also fix "Supplys" typo. (HT: @AlexDaniel)

[19:59] <dalek> doc/ipc: review: https://github.com/perl6/doc/commit/4d0b54877e

[20:02] *** ab6tract joined
[20:03] *** dogbert17 joined
[20:03] *** cyphase joined
[20:04] <dogbert17> o/ #perl6

[20:04] <ab6tract> hey dogbert17 

[20:04] <AlexDaniel> zostay: by the way, have you seen this page? https://docs.perl6.org/type/Proc

[20:04] <dogbert17> hi ab6tract

[20:05] <AlexDaniel> zostay: I mean, it does have something in common with your new IPC page

[20:05] <AlexDaniel> zostay: makes me think that maybe Proc shouldn't be as detailed, and it should redirect to IPC page instead… or maybe not? I don't know

[20:05] <dogbert17> I have another doc gist that could do with a once over, this time for List.Capture. https://gist.github.com/dogbert17/dddb8b7d8db541ca5c1e9998146ff960

[20:06] <ab6tract> today a colleague asked me "does Perl 6 have decorators?" while i know we have .wrap with .callsame and friends, i couldn't help but dig into implementing something which more resembles python's  approach: https://gist.github.com/ab5tract/bcadbefe8b7caa4b0fb749f821f7790a

[20:06] <hoelzro> ab6tract: I would say traits are somewhat like decorators

[20:06] <ab6tract> not an especially close resemblance, mind you

[20:06] <hoelzro> but better ;)

[20:07] *** TEttinger joined
[20:07] <ab6tract> hoelzro: interesting point. i still haven't written a trait, so have yet to form much of an opinion.

[20:07] * perlpilot would agree with hoelzro 

[20:07] <ab6tract> the gist above was fun to hack together though :)

[20:08] <hoelzro> well, -Ofun is important =)

[20:09] <perlpilot> dogbert17++ looks fine to me.

[20:09] <zostay> m: sub foo($x) { $x + 1 }; sub bar($x) { $x.say }; my &baz = &bar o &foo; baz(41);

[20:09] <camelia> rakudo-moar 6ef9e0: OUTPUT«42␤»

[20:09] <zostay> there's also that

[20:10] *** Actualeyes left
[20:10] <dogbert17> perlpilot: many thx

[20:10] <gfldex> dogbert17: i would add that Captures can be matched agaist Signatures and add an example

[20:12] <ab6tract> zostay++ 

[20:13] <dogbert17> gfldex: I'll give it a shot :)

[20:13] <gfldex> m: my $list = (7, 5, a => 2, b => 17); say so $list.Capture ~~ :($,$,:$a,:$b);

[20:13] <camelia> rakudo-moar 6ef9e0: OUTPUT«True␤»

[20:14] <gfldex> m: my %h = a => 1, b => 2; dd %h.Capture;

[20:14] <camelia> rakudo-moar 6ef9e0: OUTPUT«\(:a(1), :b(2))␤»

[20:15] <dogbert17> gfldex++, can I steal your example?

[20:15] <gfldex> m: my %h = a => 1, b => 2; say so %h ~~ :($a, $b);

[20:15] <camelia> rakudo-moar 6ef9e0: OUTPUT«False␤»

[20:15] *** andrzejku left
[20:15] <gfldex> m: my %h = a => 1, b => 2; say so %h ~~ :(:$a, :$b);

[20:15] <camelia> rakudo-moar 6ef9e0: OUTPUT«True␤»

[20:16] <gfldex> dogbert17: that may be better, because testing if a given Hash conforms to a certain structure is NYI in Perl 6, so you have to do it by hand

[20:16] <gfldex> doesn't fit to well to List.Capture tho

[20:17] <dogbert17> gfldex: should I go for your first example then?

[20:17] <gfldex> yes

[20:17] <dogbert17> gfldex: will be done, many thanks

[20:17] <gfldex> m: my $list = (7, 5, a => 2, b => 17); say so $list.Capture ~~ :($ where * == 7,$,:$a,:$b);

[20:17] <camelia> rakudo-moar 6ef9e0: OUTPUT«True␤»

[20:17] <gfldex> m: my $list = (8, 5, a => 2, b => 17); say so $list.Capture ~~ :($ where * == 7,$,:$a,:$b);

[20:17] <camelia> rakudo-moar 6ef9e0: OUTPUT«False␤»

[20:17] <ab6tract> dogbert17: it's a small point which you already implicitly describe, but you might also clarify that non-Pairs will always be positional args and will appear in order but "out of index" so to speak

[20:17] <ab6tract> m: dd (<a b>, c => 'd', <e>, f => 'g', <h i>, j => 'k').Capture

[20:17] <camelia> rakudo-moar 6ef9e0: OUTPUT«\(("a", "b"), "e", ("h", "i"), :c("d"), :f("g"), :j("k"))␤»

[20:18] *** travis-ci joined
[20:18] <travis-ci> Doc build passed. Sterling Hanenkamp 'Empty regex does not work, use ' ' instead

[20:18] <travis-ci> https://travis-ci.org/perl6/doc/builds/145922278 https://github.com/perl6/doc/compare/13545b367fc0...4d0b54877ef2

[20:18] *** travis-ci left
[20:18] <gfldex> dogbert17: have a where clause in the capture pls

[20:18] <dogbert17> oO, feedback is coming thick and fast. I'll try to get all suggestions in the final text

[20:20] <dogbert17> gfldex: why the where clause? 

[20:21] <gfldex> dogbert17: because that's where the power is that goes beyond what could be easily done with a set of ifs and &&

[20:22] <gfldex> also a where clause can only happen in a signature or subset, so a new gamer can see where to play the ball in the long run

[20:23] <kyclark> Question re: http://pastie.org/10912271

[20:24] <dogbert17> gfldex: thanks for the explanation

[20:24] *** Actualeyes joined
[20:24] <kyclark> This is my first attempt to use Promises.  My search for a longest substring can work independently over the various string lengths, so I thought I might try to parallelize this.  It's only going up to 20 instead of the full length because it's running wicked slow and I wanted to see if it would indeed process things not in order.  It does, but am I doing something wrong to make it so slow?

[20:25] <gfldex> dogbert17: when you describe a feature of a thing in Perl 6 that is represented by a class (so pretty much anything) you don't want to side track to much in the text. The example however can show such a side track without forcing the reader to pay attention.

[20:28] <gfldex> kyclark: you create tons of one shot data structures that force deep copies of other one shot data structures (AFAICS)

[20:29] <perlpilot> kyclark: You could try to use the profiler to see where the bottlenecks are

[20:29] <gfldex> kyclark: also what you are doing there must be memory bound on data that doesn't fit into the 1st level cache

[20:30] <gfldex> kyclark: if you put the whole thing on github we can go and play with it

[20:34] *** rindolf left
[20:38] <kyclark> I'm working through Rosalind.info problems, so the code is in the "lcsm" dir https://github.com/kyclark/rosalind.info

[20:38] <kyclark> http://rosalind.info/problems/lcsm/ is the problem

[20:39] <perlpilot> kyclark: Are you blogging your experience for others?

[20:39] *** Ven joined
[20:39] <kyclark> Not yet.  I'll be teaching a course in metagenomics this fall to a mix of undergrads and grads.

[20:39] <kyclark> Last year we used the Programming For Biology Perl5 material

[20:40] <kyclark> I'd like to move to Perl6, and I'm exploring problem sets I could use.

[20:40] <perlpilot> kyclark: what school?

[20:40] <kyclark> If it makes sense to do this, everything will be in Github (lectures, problems, solutions, etc.)

[20:40] <kyclark> University of Arizona (Tucson)

[20:41] <kyclark> I came up under Lincoln Stein at CSHL many long years ago and had the fortune to help TA his PFB course several times.

[20:41] <perlpilot> neat

[20:42] <gfldex> kyclark: you may have missed the lib directory

[20:42] <kyclark> The goal is to get biologists to learn to code.

[20:42] <kyclark> Indeed, I did.  Please pull.

[20:42] <kyclark> That was also my first P6 module, so comments welcome!

[20:51] *** zypper left
[20:53] *** acrussell left
[20:54] <dalek> doc: 4943e66 | (Sterling Hanenkamp)++ | doc/Language/ipc.pod:

[20:54] <dalek> doc: A basic start to documenting IPC

[20:54] <dalek> doc: review: https://github.com/perl6/doc/commit/4943e66142

[20:54] <dalek> doc: a1af06a | (Sterling Hanenkamp)++ | doc/Language/ipc.pod (2 files):

[20:54] <dalek> doc: Use ipc.pod6 rather than ipc.pod, oops

[20:54] <dalek> doc: review: https://github.com/perl6/doc/commit/a1af06a357

[20:54] <dalek> doc: 13545b3 | (Sterling Hanenkamp)++ | doc/Language/ipc.pod6:

[20:54] <dalek> doc: Fix missing =end pod tag

[20:54] <dalek> doc: review: https://github.com/perl6/doc/commit/13545b367f

[20:54] <dalek> doc: 4d0b548 | (Sterling Hanenkamp)++ | doc/Language/ipc.pod6:

[20:54] <dalek> doc: Empty regex does not work, use ' ' instead

[20:54] <dalek> doc: 

[20:54] <dalek> doc: Also fix "Supplys" typo. (HT: @AlexDaniel)

[20:54] <dalek> doc: review: https://github.com/perl6/doc/commit/4d0b54877e

[20:54] <dalek> doc: bb57c6d | RabidGravy++ | doc/Language/ipc.pod6:

[20:54] <dalek> doc: Merge pull request #723 from perl6/ipc

[20:54] <dalek> doc: 

[20:54] <dalek> doc: A basic start to documenting IPC

[20:54] <dalek> doc: review: https://github.com/perl6/doc/commit/bb57c6d007

[20:56] <dalek> doc: 59cb8ea | (Jan-Olof Hendig)++ | doc/Type/List.pod6:

[20:56] <dalek> doc: Added docs for List.Capture. gfldex++, perlpilot++, ab6tract++

[20:56] <dalek> doc: review: https://github.com/perl6/doc/commit/59cb8eac67

[20:57] *** CIAvash left
[20:58] *** girafe left
[21:03] <ab6tract> kyclark: this feels like something best suited to pipelining. i'm curious to see if i can work out how to use channels with a react block here

[21:04] *** mcmillhj left
[21:04] *** sufrostico left
[21:05] *** girafe joined
[21:07] *** skids left
[21:08] *** kid51 left
[21:11] <gfldex> kyclark: you got a PR

[21:12] <gfldex> kyclark: you are starting way more promises then there are threads to handle them, as a result your CPU is busy shifting stacks around

[21:14] <gfldex> kyclark: s/threads/cores/

[21:15] <gfldex> kyclark: if you allow one of the promises to finish quickly by limiting the number of threads to 2 or so, you will learn that a Seq is not a List :)

[21:15] <dalek> doc: 15547ba | (Jan-Olof Hendig)++ | doc/Type/List.pod6:

[21:15] <dalek> doc: Fix typo in link

[21:15] <dalek> doc: review: https://github.com/perl6/doc/commit/15547ba57d

[21:17] <kyclark> FWIW, I was tempted to try this by Ben Tyler's YAPC talk

[21:17] <kyclark> https://github.com/kanatohodets/perl6-and-the-zen-of-erlang/blob/master/examples/perl6/sleepy-promises.p6

[21:17] *** labster left
[21:17] *** labster joined
[21:18] <gfldex> kyclark: if you want to quickly test if your program runs fine without promises add: sub _await(@l){ do for @l -> &e { e() } }; sub _start(&c) { &c }$

[21:19] <gfldex> and then change start to _start and await to a

[21:19] <gfldex> to _await

[21:20] <hoelzro> a little OT, but this is pretty cool: https://divan.github.io/posts/go_concurrency_visualize/

[21:22] *** Ven left
[21:22] <kyclark> gfldex: I had it working in a straight-up for loop, and then I threw in the promises.  When things went much slower, I figured I didn't know what I was doing.

[21:22] <hoelzro> ah, requires a patched Go runtime

[21:22] <hoelzro> I beat we could do it as a library =)

[21:22] <Zoffix> Yeah, very neat.

[21:23] *** acrussell joined
[21:23] *** dvinciguerra_ left
[21:24] *** Zoffix left
[21:25] *** Actualeyes left
[21:25] *** araujo left
[21:27] <gfldex> kyclark: my bad, the or was correct

[21:27] <kyclark> NP. I'll revert

[21:27] <kyclark> Actually, it doesn't make sense in the context of promises.

[21:27] <kyclark> If one is going from 2..$max, then just stop when you don't find a match.

[21:28] <kyclark> Max for this problem set is 1000, which is high, but it almost makes more sense to start at max and stop when you hit the first common substring.

[21:30] <kyclark> gfldex: Thanks for the Makefile showing how to profile!

[21:31] *** araujo joined
[21:33] <gfldex> m: put do await start { last };

[21:33] <camelia> rakudo-moar 6ef9e0: OUTPUT«===SORRY!===␤last without loop construct␤»

[21:33] <gfldex> kyclark: ^^^

[21:33] <gfldex> how do I do last in a start block?

[21:33] <gfldex> m: put do await start sub { return };

[21:33] <camelia> rakudo-moar 6ef9e0: OUTPUT«Sub object coerced to string (please use .gist or .perl to do that)  in block <unit> at <tmp> line 1␤␤»

[21:34] <gfldex> m: do await start sub { return };

[21:34] <camelia> rakudo-moar 6ef9e0: ( no output )

[21:35] <timotimo> yes, in order to return out of something, it has to be a sub

[21:35] <gfldex> that doesn't work either, what is no wonder

[21:35] <timotimo> because "return" goes through regular blocks

[21:35] <timotimo> if you want to use the start "syntax", you'll have to use bare blocks, iirc

[21:35] <jnthn> do await start sub { return }() # just invoke the sub with some dog balls ont he end

[21:36] <jnthn> *on the

[21:36] <timotimo> ah, or that

[21:36] <timotimo> that's a good trick, but it's ugly that we have to do it

[21:36] <kyclark> Like "truck nuts"?

[21:36] *** addison left
[21:37] <jnthn> Well, better is just to factor out the stuff you want to do into a subroutine and start the-sub() or so :)

[21:37] <timotimo> that's probably better

[21:39] *** Actualeyes joined
[21:39] *** pmqs_ left
[21:40] *** pmqs_ joined
[21:53] *** addison joined
[21:55] <kyclark> Is there anyway to have ADT (algebraic datatypes) e.g., Direction = Up | Down (the way that Bool = True | False)?

[21:55] <AlexDaniel> kyclark: use enum?

[21:56] <AlexDaniel> Bool is an Enum too

[21:56] <timotimo> kyclark: try the ADT module

[21:58] <AlexDaniel> oh, did I misread it completely

[21:58] * AlexDaniel hides

[21:59] <lizmat> m: enum Direction (<Up Down>); dd Up, Down, +Up, +Down   # kyclark: so that's not what you mean ?

[21:59] <camelia> rakudo-moar 8cfd34: OUTPUT«Direction::Up␤Direction::Down␤0␤1␤»

[22:00] <timotimo> ADT also has the possibility to hang data off of the bits

[22:01] <timotimo> you may know Maybe a = Just a | Nothing, it's a rather famous one

[22:01] <kyclark> Enum seems to work well enough.  I can say "binary_search (Int $n, Direction $dir)"

[22:01] <gfldex> kyclark: the speedup from threading is actually quite nice, given the problem

[22:01] <AlexDaniel> zostay: while you are here, what about https://github.com/perl6/doc/pull/547 ?

[22:01] <perigrin> enum Konami (<Up Down Left Right B A>) ... 

[22:02] *** [particle] left
[22:02] *** cyphase left
[22:03] *** wamba left
[22:05] <ab6tract> kyclark: what is the output you expect from the test.fa file?

[22:06] *** Zoffix joined
[22:07] *** cyphase joined
[22:08] <Zoffix> Is it not possible to catch Proc::Asyn-run program exiting unsuccessfully? https://gist.github.com/zoffixznet/e3a8b404163d63fcc7a89dd2f8e54f39

[22:11] *** [particle] joined
[22:13] <Zoffix> (╯°□°）╯︵ ┻━┻

[22:14] *** ab6tract left
[22:15] *** [particle] left
[22:19] *** acrussell left
[22:20] *** skids joined
[22:24] *** ab6tract joined
[22:24] *** [particle] joined
[22:25] *** vendethiel left
[22:27] *** TreyHarr1 left
[22:29] <dalek> doc: 937be87 | (Wenzel P. P. Peppmeyer)++ | doc/HomePage.pod6:

[22:29] <dalek> doc: if it's Html we need to quote a few things

[22:29] <dalek> doc: review: https://github.com/perl6/doc/commit/937be8711c

[22:30] <AlexDaniel> zostay: “such as performing introspection it” – I'm not sure if that is significantly better :D

[22:32] <zostay> *facepalm* that's what I get for trying to edit it real quick before dinner

[22:33] *** TreyHarr1 joined
[22:34] *** [particle] left
[22:35] *** setty1 left
[22:41] *** [particle] joined
[22:43] *** addison left
[22:45] *** [particle] left
[22:47] *** firstdayonthejob left
[22:50] *** ab6tract left
[22:54] *** adu joined
[22:55] *** spider-mario left
[22:55] <dalek> doc: 5c26823 | Altai-man++ | doc/Language/ (2 files):

[22:55] <dalek> doc: Add IPC and MOP to index

[22:55] <dalek> doc: review: https://github.com/perl6/doc/commit/5c26823705

[22:57] *** Xliff_ joined
[23:01] *** Xliff left
[23:01] *** pmurias_ left
[23:01] *** cpage_ left
[23:06] *** kyclark left
[23:14] *** addison joined
[23:17] <Zoffix> Was shell() returning some sort of weird shifted value at some point?

[23:17] <Zoffix> For exit status I mean.

[23:18] <Zoffix> I see utility sub in roast shifting with +< 8 :/

[23:18] *** stmuk_ joined
[23:19] <Zoffix> And tests doing the same shift :/

[23:19] <Zoffix> Seems wasted effort

[23:28] *** cpage_ joined
[23:36] *** aries_liuxueyang left
[23:36] *** Xliff_ left
[23:43] *** canopus left
[23:46] <dalek> doc: 2761ecd | (Sterling Hanenkamp)++ | doc/Language/functions.pod6:

[23:46] <dalek> doc: adding docs and an example for nextcallee

[23:46] <dalek> doc: review: https://github.com/perl6/doc/commit/2761ecd8a1

[23:46] <dalek> doc: 6530643 | (Sterling Hanenkamp)++ | doc/Language/functions.pod6:

[23:46] <dalek> doc: Fix typo with extra "the"

[23:46] <dalek> doc: 

[23:46] <dalek> doc: (HT: @tommystanton)

[23:46] <dalek> doc: review: https://github.com/perl6/doc/commit/653064309c

[23:46] <dalek> doc: 5dc3a7d | RabidGravy++ | doc/Language/functions.pod6:

[23:46] <dalek> doc: Merge pull request #547 from zostay/nextcallee

[23:46] <dalek> doc: 

[23:46] <dalek> doc: adding docs and an example for nextcallee

[23:46] <dalek> doc: review: https://github.com/perl6/doc/commit/5dc3a7de00

[23:52] *** canopus joined
[23:59] <dalek> doc: bde27dc | (Zoffix Znet)++ | doc/Language/testing.pod6:

[23:59] <dalek> doc: Document bail-out()

[23:59] <dalek> doc: 

[23:59] <dalek> doc: Feature added to Rakudo in https://github.com/rakudo/rakudo/commit/58dc8c6185

[23:59] <dalek> doc: review: https://github.com/perl6/doc/commit/bde27dc377

