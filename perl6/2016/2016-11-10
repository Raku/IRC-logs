[00:00] <timotimo> if you don't close-stdin before await $promise, it'll block forever, definitely

[00:00] <samcv> yes i know that

[00:00] <samcv> that's just for this test script :)

[00:01] <timotimo> ok

[00:01] *** pyrimidine joined
[00:01] <samcv> autoflush isn't on docs.perl6.org where can i read about it

[00:01] <timotimo> it's not a perl6 thing

[00:01] <timotimo> it's a perl5 thing

[00:01] <timotimo> you can strace the whole thing to see if things actually get written from the child process

[00:01] <samcv> ah. :P

[00:02] <samcv> well. things do get written. in other thing i'm using proc async for, after like minutes it will get the message

[00:02] <timotimo> so it's going through a buffer?

[00:02] <timotimo> pipes for inter-process communication are generally buffered

[00:02] <samcv> is it a pipe if it launches the perl process itself?

[00:03] <samcv> it's not right?

[00:07] <timotimo> what else would it be?

[00:10] <samcv> oh you don't mean a shell pipe. just perl 6 doing it.

[00:11] <samcv> if i do this http://vpaste.net/n0suV with asynctest.pl being this http://vpaste.net/u36I2

[00:12] <samcv> if i do it 1000 times it will start getting after a few hundred times. timotimo is there a way to get around my issue?

[00:13] <timotimo> sorry, i didn't pay attention

[00:14] <timotimo> well, perl6 will immediately give you bytes when they arrive

[00:15] <timotimo> did you try autoflush? or maybe there's something like an unbuffered mode for stdio?

[00:17] <timotimo> i'll be driving car in a few minutes from now, after that i'll probably be able to try your code

[00:17] <samcv> ah that seemed to help timotimo. i guess it's behaving differently when run on the command line versus launched by perl 6

[00:17] *** troys_ is now known as troys

[00:18] <samcv> this i think is what the problem must have been :) let me try it out in the actual thing i'm working on

[00:18] <timotimo> well, i expect stdout provided to the program by your shell to be somewhat unbuffered

[00:18] <timotimo> not sure how that's controllable

[00:18] <timotimo> oh, the difference si between pipe and tty

[00:20] <timotimo> anyway, BBL

[00:20] *** pyrimidine left
[00:20] *** seatek joined
[00:20] <samcv> yes it works :)

[00:21] *** pyrimidine joined
[00:21] <samcv> i did $|=1 in perl 5 and it works great

[00:22] *** cpage_ joined
[00:23] *** pierre_ joined
[00:33] *** canopus left
[00:38] *** Rawriful left
[00:39] *** canopus joined
[00:40] *** atweiden joined
[00:41] *** Rawriful joined
[00:46] *** cdg left
[00:49] *** troys is now known as troys_

[00:54] <tony-o> did something happen with use *:auth ?

[01:01] *** aborazmeh joined
[01:01] *** aborazmeh left
[01:01] *** aborazmeh joined
[01:09] *** BenGoldberg joined
[01:09] *** pyrimidine left
[01:10] *** pyrimidi_ joined
[01:14] *** Rawriful left
[01:15] *** rindolf left
[01:15] *** rurban left
[01:20] *** bjz joined
[01:34] *** bjz left
[01:36] *** pierre_ left
[01:37] *** pierre_ joined
[01:41] *** pierre_ left
[01:41] *** Rawriful joined
[01:43] *** labster left
[02:02] *** pierre_ joined
[02:04] *** cibs left
[02:05] *** cibs joined
[02:09] *** pyrimidi_ left
[02:15] *** troys_ is now known as troys

[02:16] *** ocbtec left
[02:18] *** pyrimidine joined
[02:25] *** pyrimidine left
[02:26] *** abraxxa left
[02:26] *** eyck left
[02:27] *** abraxxa joined
[02:27] *** eyck joined
[02:28] *** itcharlie1 joined
[02:30] *** esh joined
[02:34] *** itcharlie1 left
[02:35] *** Rawriful left
[02:37] *** Rawriful joined
[02:38] *** pyrimidine joined
[02:42] *** pyrimidine left
[02:46] *** ilbot3 left
[02:47] *** ilbot3 joined
[02:48] *** xtt joined
[02:48] *** pyrimidine joined
[02:53] *** pyrimidine left
[02:54] *** troys is now known as troys_

[03:06] *** TEttinger left
[03:06] *** pierre_ left
[03:06] *** pyrimidine joined
[03:12] *** pierre_ joined
[03:12] *** labster joined
[03:12] *** Rawriful left
[03:13] *** pyrimidine left
[03:14] *** pyrimidine joined
[03:16] *** pierre_ left
[03:22] *** pyrimidine left
[03:22] *** Lucas_One joined
[03:23] *** pierre_ joined
[03:31] *** pyrimidine joined
[03:34] *** Lucas_One left
[03:41] *** Lucas_One joined
[03:41] *** pyrimidine left
[03:45] *** pyrimidine joined
[03:47] *** noganex_ joined
[03:48] *** Success joined
[03:48] <Success> hai guiysz

[03:50] *** noganex left
[03:51] *** skids left
[03:52] *** skids joined
[03:53] <gfldex> m: say 'ohai Success!';

[03:53] <camelia> rakudo-moar f5bf6c: OUTPUT«ohai Success!␤»

[03:54] <Success> so are there any proof of concept language spoofing (etc. custom operators & functions) making perl6 look like other languages?

[03:55] <gfldex> Success: see http://modules.perl6.org/#q=slang

[03:56] <gfldex> also https://mouq.github.io/slangs.html

[03:57] <Success> i find that sql one hallarious

[03:59] *** pierre_ left
[04:00] <gfldex> it's a proof of concept. A proper slang would support $foo and { 5 + 5 } style interpolation

[04:01] *** pyrimidine left
[04:02] *** pyrimidine joined
[04:03] <Success> thats still really entertaining haha thnx m8

[04:04] *** geekosaur left
[04:06] *** raiph joined
[04:07] *** pierre_ joined
[04:07] *** geekosaur joined
[04:11] *** pierre_ left
[04:16] <raiph> Success: https://www.youtube.com/watch?v=Nq2HkAYbG5o&feature=youtu.be&t=25m37s

[04:20] *** seatek left
[04:24] *** seatek joined
[04:25] <Success> btw im not actually very uh

[04:25] <Success> yeah no perl6 spins my head right around and that video did not help

[04:25] <Success> it simultanious does nothing, everything and anything all at once and its so like wot

[04:25] <seatek> is someone mucking about with search on modules.perl6.org right now? can't seem to search 

[04:25] <Success> its like quantum mechanics as a programming language

[04:26] <seatek> hmm now it's working

[04:27] <gfldex> seatek: works for me. You may want to ctrl-[reload]

[04:29] <seatek> gfldex: yeah maybe it was my browser. typed in http and it seems to match everything

[04:34] *** Actualeyes left
[04:43] *** Actualeyes joined
[04:49] <raiph> .msg camelia m: say: # Success

[04:49] <yoleaux> raiph: Sorry, this command is admin-only.

[04:52] *** mayathecat joined
[04:52] <raiph> Success: I gotta go. Hope the video wasn't *too* bad. :) Goodnight #perl6

[04:52] *** raiph left
[04:58] *** xtt left
[04:59] *** mayathecat left
[05:06] *** Actualeyes left
[05:13] *** TEttinger joined
[05:26] *** Cabanossi left
[05:27] *** Actualeyes joined
[05:28] *** pyrimidine left
[05:29] *** Cabanossi joined
[05:41] <Success> when i said it was bad i meant i love it lol

[05:44] *** pyrimidine joined
[05:47] *** Lucas_One left
[05:49] *** Lucas_One joined
[05:49] *** Actualeyes left
[05:50] *** atweiden left
[05:52] *** pyrimidine left
[05:53] *** pierre_ joined
[05:54] *** pyrimidine joined
[05:57] *** pierre_ left
[06:00] *** pyrimidine left
[06:00] *** rurban joined
[06:00] *** rurban left
[06:00] *** wamba joined
[06:03] *** aborazmeh left
[06:04] *** pyrimidine joined
[06:06] *** pierre_ joined
[06:09] *** pyrimidine left
[06:10] *** troys_ is now known as troys

[06:10] *** BenGoldberg left
[06:14] *** pyrimidine joined
[06:16] *** wisti left
[06:18] *** CIAvash joined
[06:18] *** troys left
[06:20] *** pyrimidine left
[06:24] *** AlexDaniel joined
[06:24] *** pyrimidine joined
[06:27] *** darutoko joined
[06:29] *** pyrimidine left
[06:29] *** Actualeyes joined
[06:34] *** pyrimidine joined
[06:38] *** cyphase left
[06:39] *** pyrimidine left
[06:40] *** pyrimidine joined
[06:43] *** cyphase joined
[06:43] *** bjz joined
[06:44] *** Actualeyes left
[06:46] *** bjz left
[06:48] *** bjz joined
[06:48] *** pyrimidine left
[06:50] *** RabidGravy joined
[06:50] *** pyrimidine joined
[06:53] *** bjz left
[06:59] *** domidumont joined
[07:00] *** pyrimidine left
[07:04] *** Actualeyes joined
[07:05] *** skids left
[07:06] *** bjz joined
[07:07] <AlexDaniel> committable6, HEAD await IO::Socket::Async.connect("260​0:3c03::f03c:91ff:fe91:d028", 80).then: -> $p { if $p.status { given $p.result { .print: "GET / HTTP/1.0\n\n"; react { whenever .Supply { .say } } } } }

[07:07] <committable6> AlexDaniel, ¦«HEAD»: Failed to resolve host name␤  in block <unit> at /tmp/Hw_y7drOtI line 1␤ «exit code = 1»

[07:07] <AlexDaniel> viki: I have no idea why it didn't work previously

[07:08] *** Success left
[07:17] *** Xliff left
[07:18] *** Xliff joined
[07:18] *** Actualeyes left
[07:19] *** wamba left
[07:19] *** skids joined
[07:23] *** firstdayonthejob joined
[07:28] *** skids left
[07:28] *** firstdayonthejob left
[07:29] *** cgfbee left
[07:34] *** neuraload joined
[07:35] *** cgfbee joined
[07:43] *** Actualeyes joined
[07:48] *** rurban joined
[07:53] *** eiro left
[07:54] <moritz> \o

[07:55] * moritz just found out that python's built in regex engine can't much Unicode properties :(

[07:55] <moritz> *match

[07:56] *** pyrimidine joined
[07:58] <arnsholt> Aww. Sad panda

[07:58] *** wamba joined
[07:58] *** ufobat joined
[07:59] <moritz> sad snake :-)

[08:00] <arnsholt> =D

[08:01] *** pyrimidine left
[08:02] <TEttinger> moritz: python 2 or 3?

[08:03] <TEttinger> that's surprising for 3

[08:04] *** pyrimidine joined
[08:07] <moritz> TEttinger: 3

[08:07] <moritz> well, both, I thikn

[08:07] <TEttinger> yeah, 2 barely had any unicode work done in it IIRC

[08:08] <TEttinger> it is pretty bad that 3 is missing that

[08:10] *** silug left
[08:12] *** pyrimidine left
[08:12] <geekosaur> you;d think they would have used pcre with unicode support enabled

[08:14] *** cpage_ left
[08:14] <geekosaur> although maybe they do and it's a packager error; I seem to recall debian had a few issues along those lines (and are adamant about not using bundled versions of anything they already package, so python wouldn't be allowed to be packaged with its own unicode-enabled pcre but would have to use the existing package whether it's unicode or not)

[08:15] *** mohae left
[08:15] <geekosaur> (this being one of those areas where, while I am sympathetic to their intent, they're really shooting themselves in the foot by being hardline about it. MATE had the same issue, since upgraded/rebranded versions of gnome2 libs that debian already packaged)

[08:18] *** pyrimidine joined
[08:21] *** Actualeyes left
[08:22] *** pyrimidine left
[08:24] *** Actualeyes joined
[08:24] *** b2gills left
[08:25] *** zakharyas joined
[08:25] *** pyrimidine joined
[08:26] *** silug joined
[08:27] *** AlexDaniel left
[08:28] *** wamba left
[08:29] *** canopus left
[08:30] *** wamba joined
[08:30] *** pyrimidine left
[08:31] *** b2gills joined
[08:34] *** jonas1 joined
[08:34] *** pyrimidine joined
[08:35] *** AlexDaniel joined
[08:37] *** canopus joined
[08:38] *** pyrimidine left
[08:44] *** labster left
[08:44] *** cosimo joined
[08:46] *** bjz_ joined
[08:48] *** bjz left
[08:49] *** labster joined
[08:52] *** cpage_ joined
[08:54] *** pyrimidine joined
[08:55] *** CIAvash left
[08:55] *** cibs left
[08:55] *** Actualeyes left
[08:56] *** pierre_ left
[08:56] *** AlexDaniel left
[08:57] *** cibs joined
[09:00] *** pyrimidine left
[09:04] *** pierre_ joined
[09:06] *** pierre_ left
[09:06] *** pierre_ joined
[09:09] *** pyrimidine joined
[09:14] *** wisti joined
[09:15] *** rindolf joined
[09:19] *** Actualeyes joined
[09:20] *** Actualeyes left
[09:21] *** pyrimidine left
[09:21] *** gregf_ joined
[09:24] *** M-Illandan left
[09:25] *** Matias[m] left
[09:25] *** Guest99321 left
[09:25] *** ilmari[m] left
[09:25] *** tadzik left
[09:25] *** Matthew[m] left
[09:32] *** pierre_ left
[09:34] *** pyrimidine joined
[09:35] *** ufobat left
[09:38] *** ufobat joined
[09:39] *** pyrimidine left
[09:39] *** pierre_ joined
[09:41] *** pyrimidine joined
[09:43] *** pierre_ left
[09:45] *** pyrimidine left
[09:48] *** pierre_ joined
[09:49] *** kurahaupo__ joined
[09:50] *** pyrimidine joined
[09:53] *** pierre_ left
[09:53] *** Util left
[09:53] *** Util joined
[09:54] *** ufobat left
[09:54] *** ufobat joined
[09:57] *** araujo joined
[09:58] *** araujo left
[10:02] *** MARTIMM joined
[10:02] *** pmurias left
[10:02] *** vendethiel- joined
[10:03] *** maybekoo2 joined
[10:04] *** vendethiel left
[10:05] *** pyrimidine left
[10:05] *** pyrimidi_ joined
[10:05] *** pierre_ joined
[10:10] *** pyrimidi_ left
[10:14] *** pyrimidine joined
[10:16] *** seatek left
[10:22] *** wisti left
[10:22] *** ilmari[m] joined
[10:27] *** pyrimidine left
[10:27] *** pyrimidi_ joined
[10:29] *** tadzik joined
[10:29] *** M-Illandan joined
[10:29] *** Guest11976 joined
[10:29] *** Matthew[m] joined
[10:29] *** Matias[m] joined
[10:30] *** wamba left
[10:33] *** wamba joined
[10:36] *** pierre_ left
[10:38] *** Rawriful joined
[10:39] *** pyrimidi_ left
[10:40] *** Rawriful left
[10:41] *** MARTIMM left
[10:42] <timotimo> python has its completely own regex engine, doesn't it?

[10:43] *** labster left
[10:46] <masak> timotimo: in Lib/re.py, there's a comment at the top saying "Secret Labs' Regular Expression Engine"

[10:47] <timotimo> right. perfect :)

[10:47] <masak> looks like 2k LoC in total

[10:50] *** pyrimidine joined
[10:58] *** salva0 left
[11:00] *** salva0 joined
[11:05] *** Rawriful joined
[11:13] *** Rawriful left
[11:15] *** qub joined
[11:16] *** Rawriful joined
[11:18] *** ocbtec joined
[11:32] *** pyrimidine left
[11:33] *** ggoebel left
[11:41] *** pierre_ joined
[11:42] *** brrt` joined
[11:44] *** brrt left
[11:51] *** brrt` is now known as brrt

[12:08] *** ggoebel joined
[12:10] *** Rawriful left
[12:11] *** pmurias joined
[12:12] *** rurban left
[12:14] *** maybekoo2 left
[12:15] *** pierre__ joined
[12:15] *** cpage joined
[12:17] *** pierre_ left
[12:26] *** user9 left
[12:29] *** user9 joined
[12:35] *** pyrimidine joined
[12:38] *** cosimo_ joined
[12:39] *** cosimo left
[12:41] *** pyrimidine left
[12:44] *** pyrimidine joined
[12:48] *** pyrimidine left
[12:51] *** cosimo_ left
[12:54] *** pyrimidine joined
[12:57] *** cosimo joined
[12:59] *** pyrimidine left
[13:03] *** pierre__ left
[13:03] *** pyrimidine joined
[13:04] *** Rawriful joined
[13:08] *** pyrimidine left
[13:09] *** Rawriful left
[13:13] *** pyrimidine joined
[13:13] *** Rawriful joined
[13:13] *** pierre_ joined
[13:15] *** rurban joined
[13:15] *** japhb joined
[13:18] *** pierre_ left
[13:18] *** Unavowed joined
[13:18] *** pyrimidine left
[13:18] *** pierre_ joined
[13:21] *** pyrimidine joined
[13:23] *** pierre_ left
[13:25] *** pyrimidine left
[13:26] *** itaipu joined
[13:26] *** amalia_ left
[13:27] *** amalia_ joined
[13:29] *** bjz_ left
[13:33] *** Success joined
[13:33] *** Success left
[13:33] *** pyrimidine joined
[13:36] *** ajr_ joined
[13:38] *** pyrimidine left
[13:39] *** itaipu left
[13:40] *** Rawriful left
[13:40] *** rurban left
[13:42] *** wamba left
[13:43] *** pyrimidine joined
[13:46] *** itaipu joined
[13:47] *** Rawriful joined
[13:47] *** wamba joined
[13:49] *** AlexDaniel joined
[13:49] *** rurban joined
[13:49] *** Rawriful left
[13:50] *** pyrimidine left
[13:52] *** itaipu left
[13:53] *** pyrimidine joined
[13:55] *** Rawriful joined
[13:57] *** pyrimidine left
[14:00] <dalek> doc: 4199726 | (Zoffix Znet)++ | doc/Type/Iterator.pod6:

[14:00] <dalek> doc: Document Iterator.skip-one

[14:00] <synopsebot6> Link: http://doc.perl6.org/type/Iterator

[14:00] <dalek> doc: review: https://github.com/perl6/doc/commit/41997266b1

[14:00] *** Actualeyes joined
[14:02] *** dalek left
[14:02] *** dalek joined
[14:02] *** ChanServ sets mode: +v dalek

[14:03] *** Rawriful left
[14:04] *** domidumont left
[14:04] *** Rawriful joined
[14:06] *** itaipu joined
[14:07] *** sufrostico joined
[14:11] *** cdg joined
[14:16] *** user9 left
[14:25] <dalek> doc: 5b45f44 | (Zoffix Znet)++ | doc/Type/Iterator.pod6:

[14:25] <dalek> doc: Document Iterator.skip-at-least

[14:25] <synopsebot6> Link: http://doc.perl6.org/type/Iterator

[14:25] <dalek> doc: review: https://github.com/perl6/doc/commit/5b45f44e28

[14:29] <dalek> doc: f504791 | (Zoffix Znet)++ | doc/Type/Iterator.pod6:

[14:29] <dalek> doc: Fix typo

[14:29] <synopsebot6> Link: http://doc.perl6.org/type/Iterator

[14:29] <dalek> doc: review: https://github.com/perl6/doc/commit/f504791a35

[14:29] *** itaipu left
[14:32] <dalek> doc: a7a0a91 | (Zoffix Znet)++ | doc/Type/Iterator.pod6:

[14:32] <dalek> doc: Document Iterator.skip-at-least-pull-one

[14:32] <synopsebot6> Link: http://doc.perl6.org/type/Iterator

[14:32] <dalek> doc: review: https://github.com/perl6/doc/commit/a7a0a9106c

[14:35] *** ajr_ left
[14:45] *** pyrimidine joined
[14:49] *** pyrimidine left
[14:52] *** pyrimidine joined
[14:56] *** qub left
[15:02] *** itaipu joined
[15:05] *** ocbtec left
[15:05] *** nadim joined
[15:07] *** neuraload left
[15:08] *** pyrimidine left
[15:08] *** pyrimidine joined
[15:08] *** neuraload joined
[15:10] *** ocbtec joined
[15:11] *** itaipu left
[15:15] *** Xliff left
[15:24] *** mayathecat joined
[15:26] *** domidumont joined
[15:30] *** mayathecat left
[15:32] *** domidumont left
[15:32] *** user9 joined
[15:35] *** skids joined
[15:48] *** jonas1 left
[15:50] *** domidumont joined
[15:53] *** neuraload left
[15:57] *** maybekoo2 joined
[16:03] *** cdg left
[16:04] *** domidumont left
[16:09] *** skids left
[16:09] *** rindolf left
[16:10] *** ChoHag left
[16:10] *** rindolf joined
[16:12] *** rindolf left
[16:14] *** rindolf joined
[16:17] *** mohae joined
[16:18] *** lichtkind joined
[16:18] *** rurban left
[16:20] *** rurban joined
[16:20] *** rurban left
[16:23] *** n0xff left
[16:26] *** rurban joined
[16:29] *** wamba left
[16:34] <brrt> know what I heard? that folks not following perl6 actively are still having it pop up on the radar

[16:37] <timotimo> that's good!

[16:37] <viki> What sort of radar?

[16:37] *** harmil_wk left
[16:38] <viki> As in... "I saw 'Why Perl 6 hasn't taken off?' on HN the other day" .. or as in... "I'm contemplating on writing some P6 code"

[16:38] <timotimo> yeah, that HN exposure was a thing

[16:39] <Juerd> Calling something "a thing" has trickled into Dutch as well and I still don't know what it means... :)

[16:39] <viki> Juerd: "it happened"

[16:39] <Juerd> (Of course, we use the diminutive, "een dingetje", or "a little thing", because, well, we do that.)

[16:40] <viki> or "it exists"

[16:40] *** FROGGS joined
[16:40] <gfldex> or "a topic"

[16:40] <Juerd> That's all?

[16:40] <Juerd> Wow.

[16:40] <timotimo> it's like pointing at a thing but not really giving it a value

[16:40] <viki> Lol, yeah

[16:41] <Juerd> So calling things "a thing" is a thing, I guess?

[16:41] <timotimo> yes

[16:41] <viki> Juerd: did you know Crocoduck is a thing? 

[16:41] <viki> It is: https://en.wikipedia.org/wiki/Crocoduck#Fossils

[16:41] <viki> :)

[16:41] <Juerd> I did not

[16:42] <timotimo> <3

[16:42] <timotimo> that is absolutely amazing

[16:45] *** nicq20 joined
[16:45] <nicq20> Huh. IO::Socket::Async.connect will fail after 937 calls to it.

[16:46] <timotimo> that sounds like a spesh issue

[16:46] <timotimo> can you try setting MVM_SPESH_DISABLE=something in your environment and re-run your code?

[16:46] <timotimo> also, exact version information would be highly appreciated, perhaps with a golfed piece of example code

[16:48] <nicq20> p6: my $v; for ^950 { IO::Socket::Async.connect("google.com",80); ++$v }; say $v; IO::Socket::Async.connect("google.com",80);

[16:48] <camelia> rakudo-moar 01856d: OUTPUT«950␤»

[16:48] <Juerd> Heh, anti DoS feature ;)

[16:48] <nicq20> Hmm... Possibly I need to update my Perl6.

[16:49] <Juerd> IIRC the bot doesn't do connections

[16:49] <moritz> right, camelia has some IO restrictions

[16:49] <nicq20> Oh, I see.

[16:49] <timotimo> it's also a good idea to actually close the sockets you open

[16:49] <timotimo> unless you wer eplanning to keep them around

[16:50] * timotimo BBL

[16:50] <nicq20> timotimo: Oh, gee whiz! That's what I forgot!

[16:50] <Juerd> But keeping them open is vital to slow-loris-like approaches

[16:50] <viki> IRC bot does do connections.

[16:51] *** mr-foobar left
[16:52] <viki> committable6, HEAD await IO::Socket::Async.connect("irc.freenode.net", 6667).then: -> $p { if $p.status { given $p.result { .print: "NICK Perl6Robot\nUSER z z z z\nJOIN #perl6\nPRIVMSG #perl6 :OHAI!\n"; react { whenever .Supply { .say } } } } }

[16:52] <viki> oops

[16:52] *** Perl6Robot joined
[16:52] <Perl6Robot> OHAI!

[16:52] <viki> wrong wrobot :P 

[16:52] *** Perl6Robot left
[16:52] *** committable6 left
[16:52] *** wamba joined
[16:52] <viki> >_<

[16:52] <Juerd> Hahaha

[16:52] <viki> I used the UP key to get my previous code lol

[16:53] <viki> m: await IO::Socket::Async.connect("irc.freenode.net", 6667).then: -> $p { if $p.status { given $p.result { .print: "NICK Perl6Robot\nUSER z z z z\nJOIN #perl6\nPRIVMSG #perl6 :OHAI!\n"; react { whenever .Supply { .say } } } } }

[16:53] *** Perl6Robot joined
[16:53] <Perl6Robot> OHAI!

[16:53] <Juerd> Now... who will write the first irc/perl6 quine? :D

[16:53] *** Perl6Robot left
[16:53] <camelia> rakudo-moar 01856d: OUTPUT«(timeout):karatkievich.freenode.net NOTICE * :*** Looking up your hostname...

[16:53] <moritz> urks

[16:54] <viki> I wonder why committable quit

[16:54] <moritz> so, maybe camelia should execute its stuff in a docker container with disabled network, or something

[16:55] <viki> Yeah, maybe.

[16:55] <viki> It's kinda the least abusive method of abuse she currently offers.

[16:55] <viki> You could get yourself logged in into the box she's on, for example.

[16:55] <moritz> I know

[16:56] *** abraxxa left
[16:56] * moritz does't want to turn p6 infrastructure into a spammer's playground

[16:57] *** mr-foobar joined
[16:58] <AlexDaniel> Unhandled exception in code scheduled on thread 14

[16:58] <AlexDaniel> Unhandled exception in code scheduled on thread 6

[16:58] <AlexDaniel> viki: ↑

[16:58] <brrt> on the radar as in 'hey, i noticed people talking about perl6 in a normal way'

[16:58] <viki> AlexDaniel: :(

[16:59] <viki> brrt: that's great!

[16:59] *** committable6 joined
[16:59] *** ChanServ sets mode: +v committable6

[16:59] <AlexDaniel> commit: HEAD await IO::Socket::Async.connect("irc.freenode.net", 6667).then: -> $p { if $p.status { given $p.result { .print: "NICK Perl6Robot\nUSER z z z z\nJOIN #perl6\nPRIVMSG #perl6 :OHAI!\n"; react { whenever .Supply { .say } } } } }

[16:59] *** rindolf left
[17:00] *** pyrimidine left
[17:00] *** Perl6Robot joined
[17:00] <Perl6Robot> OHAI!

[17:00] *** Perl6Robot left
[17:00] *** committable6 left
[17:00] *** pyrimidine joined
[17:00] <AlexDaniel> interesting

[17:03] *** committable6 joined
[17:03] *** ChanServ sets mode: +v committable6

[17:03] *** rindolf joined
[17:06] *** pyrimidine left
[17:06] <AlexDaniel> viki: it could be a bug in rakudo, not sure right now. I have created a ticket for that so that it doesn't slip through the cracks: https://github.com/perl6/whateverable/issues/57

[17:06] *** pyrimidine joined
[17:06] <viki> Cool. Thanks.

[17:09] *** ChoHag joined
[17:14] *** cdg joined
[17:16] *** labster joined
[17:20] *** wisti joined
[17:26] *** dataf3l joined
[17:26] <dataf3l> hey guys

[17:26] <viki> \o

[17:26] <FROGGS> hi dataf3l 

[17:26] <dataf3l> the newbie here again, with a question

[17:26] <viki> Sweet.

[17:26] <AlexDaniel> 🙋

[17:27] <dataf3l> I’m using HTTP::Server::Tiny to receive requests from people on the internet

[17:27] <AlexDaniel> okay

[17:27] <dataf3l> I have doubts about how to parse HTTP Requests into a thing that looks like $_POST in php

[17:27] <timotimo> what do you mean by "doubts"?

[17:27] <dataf3l> what I have now is an HTTP Request QUERY_STRING

[17:28] *** rurban left
[17:28] <dataf3l> but my attempts of finding a library that converts QUUERY_STRING into an object have been unsuccessful.

[17:30] <dataf3l> I THINK back in the perl days this may have been a part of a cgi module

[17:30] <timotimo> ah, it seems like H::S::Tiny actually expects you to either not need that, or do it with another module

[17:31] <dataf3l> pretty  much

[17:31] <dataf3l> but it’s the only one i’ve found so far that handles many requests at once

[17:31] <timotimo> https://github.com/tokuhirom/p6-Crust/blob/master/lib/Crust/Request.pm6#L53

[17:31] <timotimo> steal this :)

[17:32] <dataf3l> simple doesn’t and neither does async

[17:32] <timotimo> maybe you actually want to use straight up Crust

[17:32] *** girafe joined
[17:33] <dataf3l> but does Crust handle multiple concurrent requests ?

[17:33] <timotimo> i haven't tried it yet

[17:33] <FROGGS> Bailador does it here: https://github.com/ufobat/Bailador/blob/master/lib/Bailador/Request.pm#L72

[17:33] <dataf3l> Bailador didn’t work for my machine, for some reason

[17:34] <dataf3l> Thank you timotimo, I really appreciate your help and time :)

[17:34] <FROGGS> yeah, was just thinking that you could steal this method

[17:34] <dataf3l> also thanks to FROGGS, you guys are amazong

[17:34] <dataf3l> amazing*

[17:34] <FROGGS> :o)

[17:35] <dataf3l> does crust handle uploads?

[17:36] <timotimo> i saw an "upload" file in there

[17:36] <timotimo> so ... probably?

[17:38] *** nicq20 left
[17:39] *** dataf3l left
[17:39] *** dataf3l_ joined
[17:43] *** mephinet left
[17:43] *** TEttinger left
[17:43] *** mephinet joined
[17:56] *** skids joined
[17:56] *** japhb left
[17:58] *** TEttinger joined
[17:58] *** japhb joined
[17:59] *** Actualeyes left
[18:02] *** japhb left
[18:06] *** TEttinger left
[18:07] <dataf3l_> ok, I downloaded perl6

[18:08] <dataf3l_> I mean, Crust

[18:08] <dataf3l_> sorry

[18:08] <dataf3l_> also, I installed the software, but it didn’t pass the tests, so I just did —notests (bold, I know), then I proceeded to copy and paste the example

[18:08] <dataf3l_> I’m not sure, but I think a PSGI Server in addition to Crust?

[18:09] <timotimo> could be, what does "crustup" do?

[18:10] <timotimo> it can apparently use HTTP::Server::Simple for example

[18:12] *** itaipu joined
[18:12] *** TEttinger joined
[18:13] <timotimo> and HTTP::Easy, and FastCGI

[18:13] <timotimo> apparently

[18:15] *** ufobat left
[18:22] *** ufobat joined
[18:23] <viki> Bah. DoS vuln in OpenSSL http://thehackernews.com/2016/11/openssl-patch-update.html

[18:23] * viki foresees intertubes to be clogged for the next couple of weeks

[18:24] *** itaipu left
[18:25] <timotimo> "a bug in the handling of the ASN.1 CHOICE type" ASN.1 was a *gigantic* mistake

[18:27] *** japhb joined
[18:27] *** dataf3l_ left
[18:29] <geekosaur> sadly, the main alternative is xml. you sure you want to go *there*?

[18:29] <timotimo> hm.

[18:29] *** itaipu joined
[18:31] <geekosaur> or possibly json, although it's not quite as flexible. nobody argues that asn.1 is horrid. but it 's less horrid than the alternatives if you need a flexible and extensible mechanism for arbitrary data that isn't tied to a particular language's behavior (e.g. json), which is why it hangs on

[18:31] <geekosaur> er, that it isn't horrid

[18:32] *** dataf3l_ joined
[18:32] *** ocbtec left
[18:36] *** TEttinger left
[18:39] *** TEttinger joined
[18:42] *** ft_delta joined
[18:43] *** TEttinger left
[18:43] *** zakharyas left
[18:44] *** itaipu left
[18:54] <moritz> what about protobuf, for example?

[18:54] * moritz has no experience with it, so has to ask

[18:54] <geekosaur> I also have no experience

[18:56] *** TEttinger joined
[18:56] *** wamba left
[19:04] *** wamba joined
[19:05] *** Khisanth left
[19:08] <moritz> btw there's an AmA going on with the let's encrypt team: https://www.reddit.com/r/IAmA/comments/5c9ku9/lets_encrypt_team_a_nonprofit_working_to_secure/

[19:09] *** espadrine joined
[19:12] <viki> Wonder where we offer that feature in the docs... "This breaks my heart, since I was planning on delivering a compiled binary" RT#129909

[19:12] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=129909

[19:12] <viki> to my clients, I was planning on this since I saw the feature in the docs.

[19:15] <moritz> dunno; just ask 'em?

[19:16] <viki> dataf3l_: I assume that's you in the ticket ^ ? Where did you see that feature advertised in the docs.

[19:16] <viki> dataf3l_: also, I'm unaware of any plans to implement it this year

[19:18] *** Khisanth joined
[19:18] * geekosaur was wondering that as well

[19:19] <FROGGS> hmmm, you actually can run a .moarvm, no? (if they have moarvm, that is)

[19:19] <FROGGS> well, they need rakudo too of course

[19:20] <dataf3l_> hi guys

[19:20] <dataf3l_> it’s me again.

[19:20] <perlpilot> Maybe he saw that in the old FAQ?

[19:20] <dataf3l_> I’m reading about exceptions

[19:20] <dataf3l_> https://docs.perl6.org/language/exceptions#try_blocks

[19:20] <moritz> FROGGS: but there's no mechanism to compile scripts down to .moarvm files, no?

[19:20] <dataf3l_> the code excerpt is this:

[19:20] <dataf3l_>  CATCH {

[19:20] <dataf3l_>         when X::AdHoc { .Str.say; .resume }

[19:20] <dataf3l_>     }

[19:21] <dataf3l_> I think .STr.say is a method name

[19:21] <viki> Yup

[19:21] <dataf3l_> which is implicitely being run on “something”

[19:21] <perlpilot> dataf3l_: two method names in fact

[19:21] <dataf3l_> I want to know the name of said variable

[19:21] <viki> dataf3l_: topic

[19:21] <dataf3l_> so I can do $name.Str.say

[19:21] <viki> dataf3l_: $_.Str.say

[19:21] <dataf3l_> because I like variable names

[19:21] <dataf3l_> ok

[19:21] <dataf3l_> how can I access the topic?

[19:21] <perlpilot> dataf3l_: it's in $_

[19:22] <moritz> dataf3l_: please update the docs if you think they could be clearer

[19:27] <dataf3l_> I think I want to update HTTP::Server::Tiny ’s main example, since any bad code inside the START block will fail silently and not return a 500 error at all

[19:27] <dataf3l_> also, there is a bug in the documentation

[19:27] <dataf3l_> printing the file name and the line name together like that, just prints a very large number

[19:27] <dataf3l_> like, line 5 file 6 will print “exname 56 throw”

[19:28] <dataf3l_> so maybe add a space or something?

[19:28] <FROGGS> moritz: you can do that: perl6 --target=mbc --output=test.moarvm  -e 'say 42'

[19:29] <FROGGS> moritz: thing is, since we have auto-recompilation the module loader checks for a checks for a .pm file first, and gives up even when there is a test.pm.moarvm

[19:29] *** darutoko left
[19:31] <dataf3l_> viki, yes it was me

[19:31] <dataf3l_> that sucks

[19:31] <dataf3l_> oh well...

[19:32] <dataf3l_> I’ll write an obfuscator I guess

[19:32] <viki> dataf3l_: have you considered a legal approach instead?

[19:33] <moritz> FROGGS: well, for me it dies trying to load ModuleLoader.moarvm

[19:33] <moritz> (which I try to run the .moarvm file)

[19:33] <FROGGS> ~/dev$ perl6 --target=mbc --output=test.moarvm  -e 'say 42'

[19:33] <FROGGS> ~/dev$ perl6 -e 'CompUnit::Loader.load-precompilation-file("test.moarvm".IO)'

[19:33] <FROGGS> 42

[19:35] <FROGGS> thing is... such a .moarvm file is *not* portable

[19:36] <moritz> it can't be, because rakudo itself isn't relocatable

[19:36] <FROGGS> it is not just about locations, but also about the references to other compilation units like the setting

[19:37] <FROGGS> every build is unique

[19:37] <FROGGS> such a .moarvm would be portable if everybody would install the debian rakudo package with the same version

[19:37] <dataf3l_> I understand..

[19:37] <FROGGS> but as soon one upgrades, the .moarvm is invalid

[19:38] <dataf3l_> so if I copy the source code to a machine, compile, and then delete the source code, then it would be isntalled, correct?

[19:38] <dataf3l_> but then, the whole environment would be permanently fixed, I guess

[19:38] <moritz> if you're talking about the source code of rakudo, then yes

[19:38] *** cdg left
[19:38] <dataf3l_> I’m goint to try the 42 example

[19:38] <dataf3l_> awesome!

[19:38] <dataf3l_> :)

[19:38] <FROGGS> yes, the perl 6 installation cannot be changed afterwards, or the .moarvm file is useless

[19:38] *** ft_delta left
[19:39] <viki> What about precompiled modules?

[19:39] <FROGGS> viki: that's what we have here

[19:39] <viki> Ah, ok

[19:40] <FROGGS> just recompiling rakudo without changing any line in the setting makes every dependant .moarvm file outdated

[19:40] <dataf3l_> tthose 2 lines FROGGS just posted should be like, published somewhere, like an article or something

[19:40] <moritz> dataf3l_: then do it

[19:41] <FROGGS> I just think that these two lines give false hopes :S

[19:41] <moritz> dataf3l_: stop talking about what things should be done, and simply do them. Far more effective.

[19:41] <dataf3l_> very well

[19:41] <dataf3l_> I’ll write the article

[19:42] <FROGGS> a mangler or obfuscator would be interesting too I guess

[19:42] <FROGGS> sad that I lack knowledge in that area

[19:43] *** domidumont joined
[19:43] *** ChoHag left
[19:44] <dataf3l_> I can’t help but wonder 2 things.

[19:44] <dataf3l_> 1.

[19:44] <dataf3l_> if helping a language be compiled would drive up adoption, given a compiled sourcecode means everyone hides their secrets

[19:44] <dataf3l_> hiding the tool itself

[19:44] <dataf3l_> as oposed to, for instance, PHP, which didn’t/doesn’t have a decent compiler, which influences people’s decision to build OPEN SOURCE stuff

[19:45] <dataf3l_> since it’s hard to hide the sources

[19:45] <dataf3l_> OR

[19:45] <dataf3l_> if on the other side, building a compiler would drive UP adotion, since people can use it and sell things an make money and stuff

[19:45] <dataf3l_> I just don’t know what the best way is, I guess...

[19:45] <RabidGravy> why would you want to hide the source?

[19:46] <El_Che> most of what is compiled can be easily decompiled

[19:46] <dataf3l_> I own a software company, and due to the capitalist socety I live inside of, I must protect future revenue by implementing vendor-lockin

[19:46] <viki> dataf3l_: you can still sell your Perl code. The way it's done is you make your client sign a legal document preventing them from modifying and distributing your code.

[19:46] <dataf3l_> but they get the code anyway

[19:46] *** itaipu joined
[19:46] <viki> dataf3l_: I mean, hiding the source doesn't "hide your secrets" you can still disassemble the entire program and read what it does. 

[19:46] <dataf3l_> I know vendor lockin sucks, but I can’t really make choices about it

[19:47] <RabidGravy> maybe I'll just "hide" all the free software that other people use

[19:47] <dataf3l_> but how could the average layman disassemble the moarvm file?

[19:47] <El_Che> I pay for a "closed" source perl product

[19:47] *** bjz joined
[19:47] <El_Che> I can adapt the source if I need it

[19:47] <El_Che> but I can not release it

[19:47] <El_Che> fair enough

[19:47] <moritz> dataf3l_: do laymen can do anything interesting with the source code?

[19:47] <dataf3l_> I don’t think so, to be honest

[19:48] <dataf3l_> too niche to be interesting

[19:48] <dataf3l_> I’m trying to get my client to let me release all my work

[19:48] <dataf3l_> If i’m succesful, I’ll just open source the whole thing

[19:48] <dataf3l_> that is my goal

[19:48] <moritz> anyway, I agree that being able to ship Perl 6 code as an executable would be beneficial

[19:48] <moritz> but that doesn't make it happen

[19:48] <El_Che> that's one of Go's adavantages

[19:48] <moritz> somebody has to put in the work to make it so

[19:49] <dataf3l_> maybe what I should do is just get my employer to support the technology it uses, by supporting the perl foundation

[19:49] <FROGGS> I've got old branches that do that btw

[19:50] <dataf3l_> how can I help you merge said old branches into the master?

[19:50] <FROGGS> heh, first they need to actually work :o)

[19:52] <dataf3l_> I think the fair thing to do, would be to open source the whole thing, so it prints out like a book

[19:52] <dataf3l_> something like Knuth’s literate programming

[19:52] <dataf3l_> a nice latex intertwined with perl6 sourcecode document, ready for print

[19:52] <dataf3l_> which actually prints

[19:53] <timotimo> can make a slang that helps parse the latex chunks in between code

[19:53] <timotimo> i.e. not make the parser crash when it sees latex

[19:54] * moritz finds latex markup too verbose for documents that contain much code

[19:55] *** mrsolo left
[19:57] *** pyrimidine left
[19:57] *** pyrimidine joined
[19:58] *** ufobat left
[19:58] *** mrsolo joined
[20:01] <dataf3l_> wait

[20:01] <dataf3l_> I just realised my comment on the documentation has a bug was completely misguided.

[20:01] <dataf3l_> the docs are OK

[20:06] *** bjz left
[20:14] <pmurias> dataf3l_: is hidding the source a big concern for most closed source programs?

[20:16] *** Tonik joined
[20:26] *** pyrimidine left
[20:26] *** pyrimidi_ joined
[20:30] *** kurahaupo_ joined
[20:31] *** canopus left
[20:31] *** kurahaupo__ left
[20:35] *** domidumont left
[20:35] *** zakharyas joined
[20:37] *** domidumont joined
[20:38] *** pyrimidi_ left
[20:38] *** domidumont left
[20:40] *** canopus joined
[20:40] <viki> I really like Rust's RFC process: https://github.com/rust-lang/rfcs/#what-the-process-is

[20:41] <viki> Compared to ours: where people just open tickets with "would be nice" (or at best, adding an [RFC] tag)

[20:41] *** seatek joined
[20:41] <viki> We probably aren't big enough to do their process verbatim, but it's nice to peak at greener grass.

[20:42] <viki> (specifically, I like the part of the process that ensures RFCs don't collect dust in the corner, forgotten and unloved)

[20:43] <viki> buggable: rfc

[20:43] <viki> buggable: tag rfc

[20:43] <buggable> viki, There are 60 tickets tagged with RFC; See http://perl6.fail/t/RFC for details

[20:53] *** pyrimidine joined
[20:56] *** itaipu left
[20:58] *** pyrimidine left
[21:03] *** pyrimidine joined
[21:08] *** pyrimidine left
[21:13] *** pyrimidine joined
[21:18] *** cdg joined
[21:26] *** FROGGS left
[21:28] *** wisti left
[21:33] *** pyrimidine left
[21:34] *** pyrimidine joined
[21:38] *** pyrimidine left
[21:38] *** pyrimidi_ joined
[21:40] *** mohae_ joined
[21:42] *** vendethiel joined
[21:42] *** vendethiel- left
[21:43] *** mohae left
[21:48] *** aindilis left
[21:48] *** pyrimidi_ left
[21:49] *** pyrimidine joined
[21:53] *** skids left
[21:56] *** pyrimidine left
[22:01] *** majorius joined
[22:02] *** pyrimidine joined
[22:02] *** bjz joined
[22:05] *** zakharyas left
[22:09] *** BigBear joined
[22:10] *** RabidGravy left
[22:16] *** bjz left
[22:17] *** aindilis joined
[22:18] *** dataf3l_ left
[22:19] *** firstdayonthejob joined
[22:28] *** kyclark_ joined
[22:28] *** Tonik left
[22:28] <kyclark_> So I wrote a script to detect cheaters: https://github.com/kyclark/metagenomics-book/blob/master/perl6/count/kmer-counter.pl6

[22:29] <kyclark_> I had some students copy each other, change one variable name, and turn in another student’s work

[22:29] *** pyrimidine left
[22:29] *** pyrimidine joined
[22:29] <kyclark_> We do lots of kmer stuff in our lab, so I decided to do a pair-wise kmer analysis of all the scripts on the last assignment to see if I could detect the cheaters.

[22:30] <kyclark_> It works, but it does identify one person as unlikely close even though it wasn’t.  Anyway, I want to blog about this, and want some feedback first.

[22:30] <kyclark_> Any suggestions?

[22:35] *** troys joined
[22:36] <avuserow> kyclark_, interesting. it looks like you are comparing all "words", correct? that's the opposite of how one of my college groups did it. they had a program that calculated similarity at more of an AST level

[22:36] <avuserow> so it seems like your program is more sensitive to variables being named similar or being renamed after copying

[22:36] <avuserow> but it is much shorter implementation-wise

[22:36] <kyclark_> Yes, it would be.  

[22:36] *** wamba left
[22:40] <avuserow> I can't think of a way to improve it without adding some language-specific smarts

[22:40] *** thundergnat joined
[22:41] <kyclark_> I’ll throw it up and wait to get shredded on Reddit

[22:42] <thundergnat> kyclark_: Were you looking for a way to capture keystrokes the other day?

[22:42] <kyclark_> Yes (without having to hit Enter)

[22:42] <thundergnat> Try Term::termios

[22:42] <avuserow> if you had a relatively small amount of languages you could potentially find good preprocessors for them

[22:42] *** rindolf left
[22:42] <thundergnat> Take a look at https://github.com/thundergnat/2048 for pointers.

[22:49] *** kurahaupo_ left
[23:01] <avuserow> kyclark++ # blogging

[23:02] *** wamba joined
[23:05] *** chris2 left
[23:07] *** pyrimidine left
[23:08] *** pyrimidine joined
[23:08] *** wamba left
[23:09] *** wamba joined
[23:12] *** lichtkind left
[23:12] *** skids joined
[23:14] *** pyrimidine left
[23:15] *** BigBear left
[23:16] *** troys is now known as troys_

[23:20] <kyclark_> Thanks!

[23:23] *** kyclark_ left
[23:25] *** maybekoo2 left
[23:28] *** majorius left
[23:35] *** pmurias left
[23:38] *** firstdayonthejob left
[23:43] *** Xliff joined
[23:43] <Xliff> Hey, #perl6!

[23:44] <Xliff> Is there an obvious reason why a method in my Grammar actions class gives a "too few positionals passed" error? All method signatures are ($/)

[23:47] *** wisti joined
[23:51] *** espadrine left
[23:56] *** cpage_ left
[23:56] *** itaipu joined
[23:57] *** pierre_ joined
