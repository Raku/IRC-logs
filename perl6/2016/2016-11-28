[00:02] *** espadrine left
[00:04] *** canopus left
[00:12] *** canopus joined
[00:26] *** cibs left
[00:26] <mj41> moritz:  https://perlgeek.de/blog-en/perl-6/2016-book-runing-rakudo.html ++ ... My Docker image is not official. You should recommend https://hub.docker.com/_/rakudo-star/

[00:28] *** cibs joined
[00:34] *** lukaramu left
[00:37] *** mj41 left
[00:37] *** mr_ron left
[00:41] <seatek> timotimo: checked and the adverb stacking actually is mentioned already

[00:46] *** pierre_ joined
[00:49] *** pierre_ left
[00:50] *** pierre_ joined
[00:54] *** pierre_ left
[00:55] *** pierre_ joined
[00:55] *** pierre_ left
[01:07] *** ZzZombo_ left
[01:19] *** BenGoldberg joined
[01:28] *** kyclark_ joined
[01:28] *** aborazmeh joined
[01:28] *** aborazmeh left
[01:28] *** aborazmeh joined
[01:37] *** samcv joined
[01:42] *** Tonik left
[01:55] *** pierre_ joined
[01:57] *** kyclark_ left
[01:57] *** cdg joined
[02:00] *** pierre_ left
[02:10] *** xinming left
[02:11] *** chinarulezzz left
[02:11] *** xinming joined
[02:13] *** kyclark_ joined
[02:17] *** pierre_ joined
[02:20] *** cdg left
[02:22] *** kalkin- left
[02:22] *** kalkin-_ joined
[02:22] *** kyclark_ left
[02:32] *** ZzZombo joined
[02:32] *** ZzZombo is now known as Guest36651

[02:32] *** Guest36651 left
[02:32] *** Guest36651 joined
[02:32] *** Guest36651 is now known as ZzZombo

[02:37] *** zakharyas joined
[02:40] *** pierre_ left
[02:45] *** ilbot3 left
[02:47] *** ilbot3 joined
[02:53] *** kyclark_ joined
[03:24] *** UgJkA left
[03:24] *** noganex joined
[03:26] *** ugjka joined
[03:27] *** noganex_ left
[03:30] <[Coke]> day 1 article is up and ready to go for 12/1.

[03:31] *** ponbiki joined
[03:31] <[Coke]> right now it says the url will be /11/28, but I am hoping that will be correct when the publish happens.

[03:32] *** cognominal joined
[03:39] <dalek> mu: ed0d227 | (Will Coleda)++ | misc/perl6advent-2016/schedule:

[03:39] <dalek> mu: Note that this one is ready to go.

[03:39] <dalek> mu: review: https://github.com/perl6/mu/commit/ed0d227fd4

[03:46] <AlexDaniel> the list is kinda… empty

[03:46] <AlexDaniel> I wish I had more time :-/

[03:49] *** kyclark_ left
[03:56] *** rpburkholder left
[03:58] *** cibs left
[03:59] *** cibs joined
[04:32] *** kurahaupo joined
[04:51] *** cdg joined
[04:52] *** cdg left
[05:00] *** kurahaupo left
[05:01] *** kurahaupo joined
[05:03] *** khw left
[05:06] *** Cabanossi left
[05:07] *** Cabanossi joined
[05:07] *** kurahaupo left
[05:17] *** pierre_ joined
[05:41] *** xinming left
[05:51] *** skids left
[06:01] *** daph left
[06:04] *** aborazmeh left
[06:08] *** pierre_ left
[06:25] *** AlexDaniel left
[06:27] *** _28_ria left
[06:30] *** _28_ria joined
[06:39] *** domidumont joined
[06:41] *** xfix left
[06:45] *** bjz joined
[06:46] *** domidumont left
[06:46] *** domidumont joined
[06:50] *** xinming joined
[06:51] *** RabidGravy joined
[06:52] *** rpburkholder joined
[06:57] *** domidumont left
[07:02] *** bjz left
[07:02] *** eisen74 left
[07:07] *** pierre_ joined
[07:07] *** xinming left
[07:08] *** xinming joined
[07:14] *** pierre_ left
[07:15] *** bjz joined
[07:19] *** xinming left
[07:24] *** domidumont joined
[07:26] *** xfix joined
[07:28] *** xinming joined
[07:33] *** wamba joined
[07:43] *** Actualeyes left
[07:51] *** CIAvash joined
[07:56] *** brillenfux joined
[08:00] *** _28_ria left
[08:00] *** firstdayonthejob joined
[08:01] *** _28_ria joined
[08:03] *** ugjka left
[08:08] *** abraxxa joined
[08:13] <moritz> mj41++

[08:13] *** BenGoldberg left
[08:13] <timotimo> i'm not sure what to write about :S

[08:18] <gfldex> i may have an adventpost unless it's to short. Is a short post better then none?

[08:19] <timotimo> yes, a lot

[08:22] *** CIAvash left
[08:24] *** setty1 left
[08:24] * gfldex disengages the breaks

[08:24] <timotimo> brakes? :)

[08:25] <timotimo> don't forget people in here are willing to provide assistance

[08:25] <gfldex> those too

[08:25] <gfldex> i may need some input of jnthn, if he happens to be available

[08:25] <moritz> timotimo: do a git log in all the repos you contributed to, find a commit that looks interesting, and talk a bit about it :-)

[08:26] <gfldex> moritz: that's what I did :)

[08:26] <ZzZombo> would it possible to provide a descriptive message when a parameter constraint fails?

[08:26] <ZzZombo> be*

[08:27] <psch> m: sub f($ where { $_ eq "foo" or die "can only do things with 'foo'!"}) { }; f "bar"

[08:27] <camelia> rakudo-moar 054aca: OUTPUT«can only do things with 'foo'!␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[08:29] <moritz> m: sub f($ where { $_ eq "foo" or fail "can only do things with 'foo'!"}) { }; f "bar"

[08:29] <camelia> rakudo-moar 054aca: OUTPUT«can only do things with 'foo'!␤  in any  at /home/camelia/rakudo-m-inst-2/share/perl6/runtime/CORE.setting.moarvm line 1␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[08:30] <psch> i think there's a branch somewhere that stashes post constraints for more detail error messages too

[08:31] <seatek> You cannot create an instance of this type -- that error message should be changed to "class not found" ;)

[08:31] <seatek> well, assuming... etc., etc., ;)

[08:31] *** mj41 joined
[08:32] *** CIAvash joined
[08:34] <moritz> seatek: "not found" error messages are bad

[08:34] <moritz> seatek: why was it not found? did the runtime not try hard enough?

[08:35] <moritz> if it wasn't found because it doesn't exist, just say so

[08:36] *** cibs left
[08:36] <seatek> yeah i had spelled the class definition with an extra 't'... and took forever trying to figure out what it meany by that error message

[08:37] <seatek> meant

[08:37] <seatek> like a meany

[08:37] <seatek> a simple not found, or not defined, or doesn't exist or anything like that would have been a great clue

[08:37] <psch> m: class Aa { }; A.new

[08:37] <camelia> rakudo-moar 054aca: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    A used at line 1␤»

[08:38] <seatek> but it led me to thinking about types

[08:38] *** cibs joined
[08:38] <seatek> and then whether classes inheriting from classes that use roles could cause a problem...

[08:38] <seatek> etc., etc

[08:39] <seatek> undeclared name would be awesome :)

[08:40] <psch> seatek: well, your error message apparently comes from something with a Lexotic REPR vOV

[08:40] <psch> s/V/v/

[08:40] <seatek> it was called from a test

[08:40] <seatek> so completely different scope

[08:41] <seatek> and the use name This::thing was the "file" that contained further definitions of This::thing::like:this

[08:41] <gfldex> m: multi sub trait_mod:<is>(Label $l, :$foo){}; FOO is foo: for 1,2,3 { next FOO }

[08:41] <camelia> rakudo-moar 054aca: ( no output )

[08:48] <seatek> what's nice is that when i spell it right it works

[08:50] <timotimo> does it actually run, gfldex? o_O

[08:52] <gfldex> m: multi sub trait_mod:<is>(Label $l, :$foo){ say 'it does run or does it?' }; FOO is foo: for 1,2,3 { next FOO }

[08:52] <camelia> rakudo-moar 054aca: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> 3un or does it?' }; FOO is foo: for 1,2,37⏏5 { next FOO }␤    expecting any of:␤   …»

[08:54] <gfldex> m: multi sub trait_mod:<is>(Label $l, :$foo){}; FOO is foo: for 1,2,3 { next FOO }

[08:54] <camelia> rakudo-moar 054aca: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> 3abel $l, :$foo){}; FOO is foo: for 1,2,37⏏5 { next FOO }␤    expecting any of:␤   …»

[08:54] <gfldex> looks like it just stopped working o.0

[08:54] <DrForr> Oh dear god, someone is actually *using* Slang::Roman.

[08:56] <timotimo> :D :D

[08:56] <timotimo> maybe Slang::Roman is a good topic for an advent post?

[08:56] <DrForr> Well, at least submitted an issue.

[08:56] *** rpburkholder left
[08:57] <DrForr> And yes, I do want to do something, haven't gotten inspiration yet.

[08:57] <arnsholt> Haha. Took me a second to realize that 0r was not standard Perl 6 notation

[08:57] <arnsholt> Too much SmallTalk recently =D

[08:58] <timotimo> what does smalltalk do with 0r?

[08:58] <arnsholt> Not 0r actually

[08:59] <arnsholt> But <base>r<digit> is how you write arbitrary-base numbers

[08:59] <arnsholt> So 16rDEADBEEF for hexadecimal for example

[09:00] <gfldex> m: multi sub trait_mod:<is>(Label $l, :$foo){ say 'cally cally' }; FOO: for 1,2,3 { next FOO }; BEGIN &trait_mod:<is>(FOO, :foo);

[09:00] <camelia> rakudo-moar 054aca: OUTPUT«cally cally␤»

[09:00] <gfldex> timotimo: ^^^

[09:01] <timotimo> pff :)

[09:02] <gfldex> m: multi sub trait_mod:<is>(Label $l, :$foo){ say 'cally cally' }; FOO: for 1,2,3 { say 'but is it called in the right order?'; next FOO }; BEGIN &trait_mod:<is>(FOO, :foo);

[09:02] <camelia> rakudo-moar 054aca: OUTPUT«cally cally␤but is it called in the right order?␤but is it called in the right order?␤but is it called in the right order?␤»

[09:02] <gfldex> it is \o/

[09:04] <Xliff> Is it better to use // in this situation: my $a = $this-might-not-be-defined // $default-val.

[09:05] <Xliff> Or should I be using ||

[09:05] <psch> m: say 0 // 1

[09:05] <camelia> rakudo-moar 054aca: OUTPUT«0␤»

[09:05] <psch> m: say 0 || 1

[09:05] <camelia> rakudo-moar 054aca: OUTPUT«1␤»

[09:05] <psch> m: say Int // 1

[09:05] <camelia> rakudo-moar 054aca: OUTPUT«1␤»

[09:05] <Xliff> Yes. I am doing an if-not-defined-then....

[09:05] <timotimo> for defined you need //

[09:05] <timotimo> that's the defining characteristic :)

[09:05] <psch> Xliff: infix:<//> is "$LHS.defined ?? $LHS !! $RHS"

[09:06] <psch> Xliff: infix:<||> is "so $LHS ?? $LHS !! $RHS"

[09:06] <Xliff> Then I am using it correctly.

[09:06] <Xliff> Rather, I am doing what I thought I was supposed to be doing.

[09:06] <psch> ...except i think so has lower precedence than ternary..?

[09:06] <Xliff> And I do not have to rewrite a lot of code.

[09:06] <psch> m: say so 0 ?? 0 !! 1

[09:06] <camelia> rakudo-moar 054aca: OUTPUT«True␤»

[09:06] <psch> yeah, looks like

[09:07] <Xliff> Why the use of so?

[09:07] <timotimo> to check precedence, i think?

[09:07] <Xliff> (so $LHS) ?? $LHS !! $RHS

[09:07] <psch> Xliff: just for being explicit, you're right it's not needed (and actually wrong because precedence)

[09:07] <Xliff> ok

[09:07] <Xliff> So I can go back into lurk mode.

[09:07] * Xliff lurks.

[09:07] *** dakkar joined
[09:10] <dalek> mu: 5f1feb2 | gfldex++ | misc/perl6advent-2016/schedule:

[09:10] <dalek> mu: Update schedule

[09:10] <dalek> mu: review: https://github.com/perl6/mu/commit/5f1feb23a2

[09:22] *** giraffe left
[09:25] *** rindolf joined
[09:26] *** zakharyas left
[09:27] *** zakharyas joined
[09:29] *** bjz_ joined
[09:31] *** giraffe joined
[09:31] *** bjz left
[09:31] *** zakharyas left
[09:33] *** jonas2 joined
[09:34] <dalek> doc: ecc15e2 | gfldex++ | doc/Language/glossary.pod6:

[09:34] <synopsebot6> Link: http://doc.perl6.org/language/glossary

[09:34] <dalek> doc: since we link to Multi-Dispatch, we might actually put a text there

[09:34] <dalek> doc: review: https://github.com/perl6/doc/commit/ecc15e2983

[09:41] *** pierre_ joined
[09:42] *** travis-ci joined
[09:42] <travis-ci> Doc build errored. Wenzel P. P. Peppmeyer 'since we link to Multi-Dispatch, we might actually put a text there'

[09:42] <travis-ci> https://travis-ci.org/perl6/doc/builds/179377409 https://github.com/perl6/doc/compare/3904632bffc3...ecc15e2983a4

[09:42] *** travis-ci left
[09:49] *** andrzeju joined
[09:49] *** brillenfux left
[09:50] *** andrzeju is now known as andrzejku

[09:52] *** pierre_ left
[09:52] *** pierre_ joined
[09:56] *** gregf_ left
[09:59] *** girafe left
[10:02] *** Actualeyes joined
[10:06] *** pierre_ left
[10:08] <seatek> omg, omg, omg - TWEAK really does exist now! um.. i mean... yeah, nice evening we're having...

[10:08] <timotimo> yeah, it does

[10:08] <timotimo> i'm glad you noticed :)

[10:09] <seatek> it's like early christmas!

[10:09] <timotimo> i'm glad i could be santa for someone

[10:09] <seatek> oh you did it! thanks timotimo++ :)

[10:09] <timotimo> :3

[10:10] <seatek> i'm not going to go back and undo my crazy BUILD gyrations from before, but from this point on... so much nicer

[10:10] *** nowan_ left
[10:10] <timotimo> cool

[10:10] * seatek was secretly holding out for TWERK

[10:12] <timotimo> the mechanism that makes TWERK work is accessible from perl6 code, and overridable from a method you put into your own things

[10:12] <timotimo> so you can have TWERK

[10:12] <seatek> hehe :)

[10:13] <timotimo> really, you can make anything happen if you want

[10:13] <timotimo> randomize the order of initialization, for example

[10:13] <timotimo> run a piece of code after every step of the buildplan, why not

[10:14] <seatek> i would. but i've been having to deal with those Crust guys, and they're more anal retentive than a 50's propaganda housewife with cleaning chemicals and gloves

[10:14] <timotimo> um, wat?

[10:15] <seatek> absolute properness, cleanliness and conformity

[10:15] <seatek> that's my motto now

[10:15] <seatek> i'm gonna buy a uniform

[10:15] *** CIAvash left
[10:16] *** pierre_ joined
[10:16] *** pierre_ left
[10:16] <timotimo> it looks like crust hasn't been committed to for almost a year

[10:16] *** pierre_ joined
[10:16] <timotimo> so what keeps you from just forking and doing what you need?

[10:16] <seatek> yes i'm tempted to fork it away

[10:16] <timotimo> i thought these words you used were a bit excessively harsh

[10:17] <timotimo> but what do i know :)

[10:17] <seatek> i have a couple stupid severs that leave the environment with 2 environment variables in it HTTP_CONTENT_TYPE is one of them

[10:17] <seatek> it must not be there

[10:17] <seatek> it's called CONTENT_TYPE!!!!

[10:18] <seatek> if HTTP_CONTENT_TYPE is there as well, Crust kills itself

[10:18] <seatek> i just wanted to be able to turn off that check

[10:18] *** nowan joined
[10:18] <timotimo> having a clean environment is pretty important, have you not seen the recent thing where you could tell most servers on the 'net to use your privately supplied proxy server for all their own http requests?

[10:18] <seatek> cuz the CGI spec says nothing about it nto being there... but no, they conform to PSGI whose document says that it must not be there. it doesn't say you have to die though

[10:19] <seatek> yes! but it's not even enabled (that check) unless you use their Lint filter -- if you enable that, which they suggest

[10:19] <Xliff> Just FORK IT, man!

[10:19] <Xliff> FORK IT!!!

[10:19] *** brillenfux joined
[10:20] * Xliff throws up his hands in mock frustration.

[10:20] <seatek> well, i submitted another pull request to the SCGI crust handler middlewear guy, to check for and delete those environment variables if they exist

[10:20] <seatek> but i hate that, becuase you're going through the environment YET AGAIN in the whole twisty, turny Crusty process

[10:21] <seatek> anyway, if i were to name something TWERK and those guys saw it, they'd have a anuryism. o

[10:22] <seatek> suppose you're a parent

[10:22] <seatek> you have a baby

[10:22] <seatek> and you don't want that baby to see something weird and crazy out there, cuz you think it might be dangerous

[10:22] <seatek> and some people from the world come knocking on your door.

[10:23] <seatek> what do you do? send them away?

[10:23] <seatek> no, you shoot your baby so it won't see anything weird

[10:23] <seatek> how does that make sense?

[10:23] <psch> ...what

[10:23] <seatek> they would not be good parents

[10:23] <Xliff> Oh, that is some really twisted logic there.

[10:23] <seatek> ;) i'm good at that :)

[10:23] <Xliff> I've noticed.

[10:23] <Xliff> 8-)

[10:25] <seatek> if the crust handler scgi guy doesn't take the pull request to delete those 2 stupid environment variables if they exist, i'll just copy the crust lint middleware and pull out the murderous fascism from it

[10:26] <Xliff> FORK IT!!!!!

[10:26] <Xliff> Fork the code fascists!!!

[10:26] <seatek> Crust::Middleware::Lint::Dangerous

[10:26] <Xliff> Fork 'em!

[10:27] <seatek> Crust::Middleware::Lint::Egalitarian

[10:27] <masak> TIL Perl 5 allows printing to a string by calling `open()` on a reference to the string. (since 5.8.0)

[10:28] <seatek> that's bizarre. i've been writing so many tests lately that it sounds interesting too

[10:31] <seatek> did you know they used to use the moon as a communications satellite?

[10:32] <timotimo> bounce things off of it?

[10:32] <seatek> yup

[10:32] *** ufobat joined
[10:32] <timotimo> makes some sense, the moon is visible from a broad chunk of the earth at the same time

[10:33] <seatek> i've been reading this book on the formation of Iridium that satellite company

[10:33] *** pierre_ left
[10:33] <DrForr> And creator of Iridium flares :)

[10:33] <seatek> i never understood why they were called that either :)

[10:34] <seatek> they chose the name Iridium because it was the atomic number of the number of satellites they needed

[10:34] * Xliff screams in frustration as he realizes he needs to refactor a bunch of code he just finished writing.

[10:35] * seatek has a brief twinge of empathy for Xliff, then has more pie

[10:35] <Xliff> Hope your pie-hole doesn't choke on that pie! 

[10:35] <moritz> Xliff: better refactor it now, when you're still familiar with it, than in half a year

[10:35] <Xliff> moritz: Yes. However refactoring is best done after sleep.

[10:36] <Xliff> Which I am lacking.

[10:36] <seatek> you'll forget everything by morning

[10:36] <Xliff> Insomnia is a pain in the ass.

[10:36] * Xliff glares at seatek.

[10:36] <Xliff> I'll have you know I make copious comments. I'll be fine. :P

[10:37] *** darutoko joined
[10:37] <seatek> i started using a blue filter thingy for nighttime work, and i get tired quicker now

[10:38] <Xliff> blue. filter. hunh?

[10:38] <timotimo> throws out blueish colors

[10:38] <timotimo> think of it as going into submarine mode

[10:38] <Xliff> Filter on what?

[10:38] <timotimo> displays

[10:38] <Xliff> Oh.

[10:38] <timotimo> you may know it as f.lux or redshift

[10:38] <seatek> yeah it makes it all subdued

[10:38] <timotimo> yesterday i learned from a friend that you can turn the color temperature even lower than the default

[10:39] <Xliff> https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=4&cad=rja&uact=8&ved=0ahUKEwirytuZocvQAhXCNSYKHVlLAbwQFggzMAM&url=https%3A%2F%2Fwww.redshift3d.com%2F&usg=AFQjCNEtUIqSGRxyltiGVZDPYITJl7PZ2Q&sig2=e_zYeBZZgaQxl47fM9ofVA

[10:39] <Xliff> ???

[10:39] <Xliff> Oh dammit, google.

[10:39] <timotimo> i have it set to 2500 during the night now, and it's really, really, really red

[10:39] *** labster left
[10:39] <Xliff> https://www.redshift3d.com/ ???

[10:39] <timotimo> no

[10:39] <seatek> have you tried turning it off timotimo ? i do that sometimes and it's like burning my eyes

[10:39] <timotimo> http://jonls.dk/redshift/

[10:39] <timotimo> yes

[10:39] <Xliff> Which is better?

[10:40] <seatek> non-burt eyes

[10:40] <Xliff> Correction... which one are you using?

[10:40] <timotimo> they are not comparable, Xliff 

[10:40] <seatek> what OS? i'm using ubuntu on on it....

[10:40] <seatek> redshift

[10:41] <seatek> on windows i use f.whatever that was

[10:41] <seatek> f.lux?

[10:41] <seatek> yes f.lux

[10:42] <seatek> i like redshift better though

[10:42] <seatek> oo thanks for that link timotimo i'm gonna play with the config file

[10:43] <timotimo> i'm sad that i can't set brightness above 1.0 :P

[10:43] * Xliff hacks registry.

[10:44] <seatek> i never tried reshift on windows

[10:44] <seatek> it's experimental...

[10:45] <moritz> fwiw on android I use twilight

[10:46] <seatek> that might not be a bad idea either!

[10:46] <moritz> though in the morning I sometimes have to switch it off because it causes some jumps in display brightness

[10:49] <Xliff> What is a good blue-shifted temp for redshift?

[10:51] <seatek> mine's at 3500 right now and it's nice and dreamy

[10:51] * nine just avoids looking at a screen before going to bed...

[10:51] <seatek> i lack that kind of willpower

[10:52] <Xliff> Wow!

[10:52] <nine> Proper sleep does improve willpower btw ;)

[10:52] <Xliff> That is easier on the eyes.

[10:52] <Xliff> Now I'm getting all.s..zzzzzzzzzzzz

[10:53] <tadzik> I'm at 5500

[10:53] <seatek> nine - is your scope-tightening stuff, with the need to put more use's in, going to effect compile times at all? or is the compiler going to be smart enough about them?

[10:53] <seatek> Xliff: nice isn't it! :)

[10:53] * Xliff is sleeping. Do not disturb!

[10:54] *** Xliff is now known as Xliff_ZZZzzzz

[10:54] *** rindolf left
[10:55] <ZzZombo> m: class A{has $!a;method m{$!a}};say A.new.m

[10:55] <camelia> rakudo-moar 054aca: OUTPUT«(Any)␤»

[10:55] *** RabidGravy left
[10:57] <seatek> i'm starting to get paranoid about compile times now, with the size of the thing i'm working on, and have resorted to developing by just using tests.. but that' even getting long now... so i've resorted to simulating the use of some classes when testing even...

[10:58] <seatek> i mean, if it comes to the point where i actually have to think about what i'm typing before i type it!...

[10:59] <seatek> i kinda like compiling though. it's got a certain... zen about it

[10:59] *** rindolf joined
[10:59] <ZzZombo> uh, how do I check a value is specifically not Any?

[10:59] <seatek> .defined

[10:59] <ZzZombo> no

[10:59] <ZzZombo> only Any, not Nil or anything else

[11:00] <DrForr> $a !~~ Any # ?

[11:00] <psch> m: say 1 ~~ Any

[11:00] <camelia> rakudo-moar 054aca: OUTPUT«True␤»

[11:00] <DrForr> True, Any is the root of too many things.

[11:00] <seatek> i think that if anything is something it's not Any

[11:01] *** brillenfux left
[11:01] <psch> if you're sure you never get Any.new you can do !=:= Any

[11:01] <psch> m: say Any =:= Any; say 1 =:= Any; say Nil =:= Any

[11:01] <camelia> rakudo-moar 054aca: OUTPUT«True␤False␤False␤»

[11:01] <jnthn> $value !=== Any

[11:01] <psch> m: say Any.new === Any

[11:01] <camelia> rakudo-moar 054aca: OUTPUT«False␤»

[11:02] <seatek> it's like the infinities again, only crazier

[11:02] <ZzZombo> eh, that works! Thanks.

[11:02] *** ufobat left
[11:02] <seatek> how do you set a variable to Any?

[11:03] <ZzZombo> my $a=Any?

[11:03] <seatek> m: my $i = 1; $i = Any;

[11:03] <camelia> rakudo-moar 054aca: ( no output )

[11:03] <lizmat> my $a

[11:03] <ZzZombo> or leave it andefined

[11:03] <ZzZombo> undefined*

[11:03] <lizmat> m: dd my $a

[11:03] <camelia> rakudo-moar 054aca: OUTPUT«Any $a = Any␤»

[11:03] <gfldex> m: my Any $a; # if you want to be explicit

[11:03] <camelia> rakudo-moar 054aca: ( no output )

[11:08] <nine> seatek: I don't think it will effect compile times. Using an already loaded module doesn't cost much.

[11:08] <seatek> nine: nice :) thank you :)

[11:09] <seatek> m: my $i = 3; say $i.WHAT

[11:09] <camelia> rakudo-moar 054aca: OUTPUT«(Int)␤»

[11:09] <seatek> m: my $i = 3; say $i.WHAT; $i = Any; say $i.WHAT

[11:09] <camelia> rakudo-moar 054aca: OUTPUT«(Int)␤(Any)␤»

[11:09] <seatek> m: my $i = 3; say $i.WHAT; $i = Any; say $i.WHAT; my Int $c = 2; $c = Any;

[11:09] <camelia> rakudo-moar 054aca: OUTPUT«(Int)␤(Any)␤Type check failed in assignment to $c; expected Int but got Any (Any)␤  in block <unit> at <tmp> line 1␤␤»

[11:09] <seatek> that's how i get confused about Any's

[11:10] <psch> why?

[11:10] <psch> Any is the default type constraint

[11:10] <psch> m: sub f($) { }; say &f.signature.params[0].type

[11:10] <camelia> rakudo-moar 054aca: OUTPUT«(Any)␤»

[11:10] <seatek> but $i is an Int

[11:10] <seatek> can ints be set to Any?

[11:10] <psch> yeah, but liskov only works downwards not upwards

[11:10] <gfldex> m: say Any.WHO, Any.new.WHO

[11:10] <camelia> rakudo-moar 054aca: OUTPUT«AnyAny␤»

[11:11] <psch> seatek: you assign an Int to a variable that is constrained to Any

[11:11] <psch> m: say Int.^mro

[11:11] <camelia> rakudo-moar 054aca: OUTPUT«((Int) (Cool) (Any) (Mu))␤»

[11:11] <psch> seatek: Int isa Any

[11:11] <gfldex> ZzZombo: you have to check .WHO

[11:11] <psch> seatek: but you can't assign an Any to a variable constrained to Int

[11:11] <seatek> ah.. .ok got it

[11:11] <seatek> yeah that makes perfect sense now

[11:11] <ZzZombo> why?

[11:12] <gfldex> because a test against .WHO does not care about inheritance

[11:12] <seatek> that's actually kinda neat more than confusing now :)

[11:13] <ZzZombo> like this:

[11:13] <ZzZombo> if $value.WHO!===Any.WHO

[11:13] <ZzZombo> ?

[11:14] <gfldex> yes

[11:15] *** pierre_ joined
[11:16] <gfldex> m: sub Any(){Int}; dd Any, Any()

[11:16] <camelia> rakudo-moar 054aca: OUTPUT«Any␤Any(Any)␤»

[11:16] <gfldex> m: sub Any(){'oi‽'}; dd Any, Any()

[11:16] <camelia> rakudo-moar 054aca: OUTPUT«Any␤Any(Any)␤»

[11:17] <psch> m: dd Any(StR)

[11:17] <camelia> rakudo-moar 054aca: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    StR used at line 1. Did you mean 'str', 'Str'?␤␤»

[11:17] <psch> m: dd Any(Str)

[11:17] <camelia> rakudo-moar 054aca: OUTPUT«Any(Str)␤»

[11:17] <psch> can't overwrite coercers, they're hiding deep in the guts

[11:17] <jnthn> It's a parse-time distinction.

[11:17] <gfldex> it should complain when I try to define that sub

[11:17] <jnthn> Why?

[11:18] <psch> m: sub Any() { say "not really Any" }; say &Any()

[11:18] <camelia> rakudo-moar 054aca: OUTPUT«not really Any␤True␤»

[11:18] *** wamba left
[11:18] <gfldex> because I'm stupid and Rakudo is not

[11:18] <gfldex> anyway that's a ENODOC that I shall act upon

[11:20] *** chinarulezzz joined
[11:24] <dalek> doc: 53ef347 | gfldex++ | doc/Type/Sub.pod6:

[11:24] <synopsebot6> Link: http://doc.perl6.org/type/Sub

[11:24] <dalek> doc: show how to call subs that (don't) overload coercers

[11:24] <dalek> doc: review: https://github.com/perl6/doc/commit/53ef347a75

[11:32] *** travis-ci joined
[11:32] <travis-ci> Doc build errored. Wenzel P. P. Peppmeyer 'show how to call subs that (don't) overload coercers'

[11:32] <travis-ci> https://travis-ci.org/perl6/doc/builds/179404506 https://github.com/perl6/doc/compare/ecc15e2983a4...53ef347a7508

[11:32] *** travis-ci left
[11:33] <seatek> traavisssss....

[11:33] <jnthn> TIL you can use $!foo in a signature anywhere inside a method, not just in the method signature itself

[11:34] <jnthn> For example

[11:34] <jnthn> method foo($bar) {

[11:34] <dalek> doc: 8087f17 | gfldex++ | doc/Language/typesystem.pod6:

[11:34] <synopsebot6> Link: http://doc.perl6.org/language/typesystem

[11:34] <dalek> doc: we can use the MOP to add coercers

[11:34] <dalek> doc: review: https://github.com/perl6/doc/commit/8087f1782f

[11:34] <jnthn>     with resolve($bar) -> $!bar { }

[11:34] <psch> ah, the 'just' works as an 'only' there

[11:35] <psch> cause i had some trouble parsing that

[11:35] <jnthn> Hm :)

[11:35] <jnthn> Yes, "not only in the method sig" is also a valid way to put it :)

[11:35] <jnthn> It saved me a $!bar = $_; inside of the block, anyway

[11:35] <psch> neat

[11:36] <jnthn> Funny thing being, I never deliberately made that work. :)

[11:36] <jnthn> It just naturally falls out of how attributive parameters are implemented.

[11:37] <jnthn> Only just now was writing something and was like "hmm, I wonder if I could just..." :)

[11:37] <psch> r: class A { has $.foo; method bar($baz) { with $baz -> $!foo { } } }; A.new.bar("quux").foo # aw :|

[11:37] <camelia> rakudo-moar 054aca: ( no output )

[11:37] <camelia> ..rakudo-jvm 76b061: OUTPUT«Unable to bind attributive parameter '$!foo' - could not find self␤  in method bar at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[11:37] <jnthn> Aww

[11:37] <jnthn> Wonder why.

[11:38] <psch> probably because my impl of attributive binding isn't quite up to snuff :S

[11:38] <jnthn> Maybe it's not looking in outer scopes for the self...

[11:38] <jnthn> (Which this relies upon)

[11:38] <psch> seems like this warrants a test, too

[11:38] <psch> anyway, lunch time for me :)

[11:39] <jnthn> ooh, lunch ain't a bad idea

[11:39] <masak> psch: you want me to rakudobug that_

[11:39] <masak> ?

[11:39] <viki> masak: I was waiting for you to appear :) I have a Q

[11:40] <masak> go ahead

[11:40] <viki> masak: what's your opinion on printf having another candidate: (IO::Handle $fh, Cool $format, *@args)... that's adding to the current (Cool $format, *@args)... I recall you were against such variable args

[11:41] <viki> Currently there's no functional way to printf to a filehandle and Perl 5 does use the same scheme I'm proposing.

[11:42] <viki> (by functional I mean programming style; there is an OO way)

[11:42] <jnthn> m: print $*OUT, 'hi'

[11:42] <camelia> rakudo-moar 054aca: OUTPUT«This type cannot unbox to a native string: P6opaque, IO::Special␤  in block <unit> at <tmp> line 1␤␤»

[11:42] <jnthn> Note it'd be incosistent with other I/O functions

[11:42] <jnthn> I'd say it should just me a method printf

[11:42] <jnthn> m: print $*OUT: 'hi'

[11:42] <camelia> rakudo-moar 054aca: OUTPUT«hi»

[11:42] <viki> OK

[11:42] <jnthn> m: printf $*OUT: 'hi'

[11:42] <camelia> rakudo-moar 054aca: OUTPUT«Use of uninitialized value of type List in numeric context␤␤Use of uninitialized value of type List in numeric context␤␤hi»

[11:43] <jnthn> ...

[11:43] <jnthn> And you can always do that, but what are the warnings about?

[11:43] <jnthn> m: $*OUT.printf('hi')

[11:43] <camelia> rakudo-moar 054aca: OUTPUT«Use of uninitialized value of type List in numeric context␤␤Use of uninitialized value of type List in numeric context␤␤hi»

[11:43] <viki> unsure. I only added that last night

[11:43] <jnthn> m: $*OUT.printf("hi %d", 42)

[11:43] <camelia> rakudo-moar 054aca: OUTPUT«hi 42»

[11:44] <viki> m: printf 'meow'

[11:44] <camelia> rakudo-moar 054aca: OUTPUT«meow»

[11:44] <viki> weird. I'll take a look into that today

[11:44] <viki> s: $*OUT, 'printf', \('x')

[11:44] <SourceBaby> viki, Sauce is at https://github.com/rakudo/rakudo/blob/7c1f5e1/src/core/IO/Handle.pm#L656

[11:46] <jnthn> really lunch &

[11:47] <viki> m: use nqp; sub foo (*@args) {  nqp::sprintf('x', nqp::clone(nqp::getattr(@args, List, '$!reified'))) }; foo

[11:47] <camelia> rakudo-moar 054aca: OUTPUT«Use of uninitialized value of type List in numeric context␤␤Use of uninitialized value of type List in numeric context␤␤»

[11:47] <viki> m: use nqp; sub foo (*@args) {  nqp::sprintf('x', nqp::clone(nqp::getattr(@args, List, '$!reified'))) }; foo []

[11:47] <camelia> rakudo-moar 054aca: ( no output )

[11:49] <viki> m: use nqp; sub foo (*@args) {  nqp::sprintf('x', nqp::clone(nqp::getattr(@args||[], List, '$!reified'))) }; foo

[11:49] <camelia> rakudo-moar 054aca: ( no output )

[11:51] *** grondilu joined
[11:52] <viki> m: sprintf 'x'

[11:52] <camelia> rakudo-moar 054aca: OUTPUT«Use of uninitialized value of type List in numeric context␤␤Use of uninitialized value of type List in numeric context␤␤»

[11:52] <viki> hehehe :)

[11:56] *** travis-ci joined
[11:56] <travis-ci> Doc build passed. Wenzel P. P. Peppmeyer 'we can use the MOP to add coercers'

[11:56] <travis-ci> https://travis-ci.org/perl6/doc/builds/179406783 https://github.com/perl6/doc/compare/53ef347a7508...8087f1782f97

[11:56] *** travis-ci left
[11:58] <ZzZombo> There is way to look what package something comes from, isn't there?

[12:00] <viki> .WHO 

[12:00] <viki> m: package Meows; { sub foos is export {} }; import Meows; say &foos.WHO

[12:00] <camelia> rakudo-moar 054aca: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤This appears to be Perl 5 code. If you intended it to be Perl 6 code, please use a Perl 6 style declaration like "unit package Foo;" or "unit module Foo;", or use the block form instead of the semicolon form…»

[12:01] <viki> m: package Meows { sub foos is export {} }; import Meows; say &foos.WHO

[12:01] <camelia> rakudo-moar 054aca: OUTPUT«Sub␤»

[12:01] <viki> heh

[12:02] <viki> m: package Meows { class foos {} }; import Meows; say Meows::foos.WHO

[12:02] <camelia> rakudo-moar 054aca: OUTPUT«Meows::foos␤»

[12:02] <viki> m: package Meows { class foos {} }; import Meows; say Meows.WHO

[12:02] <camelia> rakudo-moar 054aca: OUTPUT«Meows␤»

[12:03] * viki cues in "I've no idea what I'm doing" meme

[12:04] *** canopus left
[12:07] <ZzZombo> Attribute::Handling is a builtin type, not an external module

[12:07] <ZzZombo> wut

[12:09] <ZzZombo> m: dd Attribute::Handling

[12:09] <camelia> rakudo-moar 054aca: OUTPUT«Could not find symbol '&Handling'␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[12:10] <ZzZombo> m: use Attribute::Handling

[12:10] <camelia> rakudo-moar 054aca: OUTPUT«===SORRY!===␤Could not find Attribute::Handling at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    Com…»

[12:10] <ZzZombo> W. T. F.

[12:11] <moritz> who says that Attribute::Handling is a built-in type?

[12:11] <ZzZombo> perl6

[12:12] *** wamba joined
[12:12] <ZzZombo> dayum

[12:12] <ZzZombo> changed 'use' to 'import' and it worked.

[12:12] <ZzZombo> WTF!!!

[12:13] *** canopus joined
[12:14] *** gregf_ joined
[12:14] *** CIAvash joined
[12:17] <viki> ZzZombo, a bug

[12:18] <ZzZombo> Dear God...

[12:19] <viki> There is no god

[12:19] <viki> Does Attribute::Lazy suffer the same issue?

[12:19] <ZzZombo> ah, you were supposed to answer with "There is more"

[12:19] <ZzZombo> :(

[12:20] <ZzZombo> Could not find Attribute::Lazy

[12:20] <ZzZombo> I mean

[12:20] <ZzZombo> "Could not find Attribute::Lazy"

[12:20] <viki> I recall there being a bug with stuff that has core namespace in it, like IO::Whatever, so maybe this is the same

[12:21] <viki> *shrug*

[12:21] <viki> m: use Attribute::Handling

[12:21] <camelia> rakudo-moar 054aca: OUTPUT«===SORRY!===␤Could not find Attribute::Handling at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    Com…»

[12:21] <viki> :/

[12:21] <viki> Looks fine on camelia

[12:21] <ZzZombo> That package is defined in the main Perl6 file.

[12:22] <ZzZombo> That I use'd in the same file.

[12:22] <psch> m: package Attribute::Foo { }; use Attribute::Foo

[12:22] <camelia> rakudo-moar 054aca: OUTPUT«===SORRY!===␤Attribute::Foo is a builtin type, not an external module␤»

[12:22] <viki> m: package Meows {}; use Meows

[12:22] <camelia> rakudo-moar 054aca: OUTPUT«===SORRY!===␤Could not find Meows at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::Reposit…»

[12:22] <viki> aha

[12:23] <viki> ZzZombo, would you report that bug?

[12:23] <ZzZombo> how?

[12:23] <viki> huggable, rakudobug

[12:23] <huggable> viki, [email@hidden.address] or use perl6 query on http://rt.perl.org ; see https://github.com/rakudo/rakudo/#reporting-bugs

[12:23] <viki> email to ^ that address

[12:23] <ZzZombo> ye

[12:23] <viki> Thanks

[12:24] <ZzZombo> BTW, why you can't do

[12:24] <ZzZombo> sub x(Type self: |blah)

[12:24] <ZzZombo> as opposed to

[12:24] <ZzZombo> sub x(Type $self: |blah)

[12:24] <ZzZombo> ?

[12:25] <psch> m: sub x(Int $self: ) { }

[12:25] <camelia> rakudo-moar 054aca: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Can only use the : invocant marker in the signature for a method␤at <tmp>:1␤------> 3sub x(Int $self: 7⏏5) { }␤»

[12:25] <psch> you can't do either?

[12:25] <psch> m: sub x(Int self: ) { }

[12:25] <camelia> rakudo-moar 054aca: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Malformed parameter␤at <tmp>:1␤------> 3sub x(Int7⏏5 self: ) { }␤    expecting any of:␤        constraint␤        formal parameter␤»

[12:25] <ZzZombo> eh, I meant method, sorry

[12:25] <psch> 'self' is a special name that automatically exists lexically inside method bodies

[12:26] <psch> m: class A { method f(A:D: ) { say self.perl } }; A.new.f

[12:26] <camelia> rakudo-moar 054aca: OUTPUT«A.new␤»

[12:26] <psch> hence you don't even need a name for the invocant

[12:26] <ZzZombo> well, I thought for the same of explictioness, you should be able to do that.

[12:27] <psch> well, you'd have to do it the normal way for sigilless parameters

[12:27] <psch> m: class A { method f(A:D \self: ) { say self.perl } }; A.new.f 

[12:27] <camelia> rakudo-moar 054aca: OUTPUT«===SORRY!===␤Lexical 'self' already declared␤»

[12:27] <viki> m: method (Int $self:) {}

[12:27] <camelia> rakudo-moar 054aca: ( no output )

[12:28] <psch> but it's already there, sooo

[12:28] <viki> works fine?

[12:28] <viki> m: class { method (Int $self:) {} }.new

[12:28] <camelia> rakudo-moar 054aca: ( no output )

[12:28] <psch> i suppose the \self case might be reasonable to make work, but it feels a bit weird honestly

[12:29] <CIAvash> .tw CIAvash

[12:29] <yoleaux> Added Perl 6 to alternativeTo #Perl6 https://alternativeto.net/software/perl-6/ (@CIAvash)

[12:30] *** lucasb_ joined
[12:31] <masak> viki: backlogging. I agree with jnthn; it should be a method.

[12:32] <masak> viki: I don't remember being against such an extra candidate -- but consider me against it now :>

[12:32] <viki> masak, it was when we were bikesheding comb 1, '...' 

[12:34] <viki> and you said something along the lines that variadics before normal params were a code smell

[12:35] <ZzZombo> Dammit

[12:35] <viki> .tw Zoffix

[12:35] <yoleaux> Rakudo Star #Perl 6 Distro version 2016.11 is out 🎊🍻🎈🍕😀 http://rakudo.org/2016/11/27/announce-rakudo-star-release-2016-11/ #Programming #Perl (@zoffix)

[12:35] <viki> neat

[12:35] <ZzZombo> I forgot to fill in the topic of the letter

[12:35] <lucasb_> what is .tw?

[12:35] <ZzZombo> will it get through?

[12:35] <viki> twitter

[12:36] <lucasb_> ahh, interesting

[12:36] <viki> ZzZombo, should, yeah

[12:36] <lucasb_> last tweet...

[12:36] <ZzZombo> sweet

[12:36] <lucasb_> will TimToady be doing a blog post this year?

[12:37] <lucasb_> viki: I see you alreadry grabbed the 24th day. maybe he posts something on the 25th

[12:37] <ZzZombo> <psch> i suppose the \self case might be reasonable to make work, but it feels a bit weird honestly

[12:37] <ZzZombo> Almost everywhere I can see Perl allows to express yourself explicitly, however weird it may be.

[12:38] <psch> ZzZombo: patches welcome :) it's probably somewhere around https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Metamodel/BOOTSTRAP.nqp#L471

[12:38] <viki> ZzZombo, it works tho, see my examples above

[12:38] <psch> viki: it's explicitly about explicitly introducing a sigilless self in the method lexpad

[12:39] <psch> viki: ZzZombo's point, that 

[12:39] <viki> ah

[12:40] <psch> m: method (\self:) { } # as this forbids currently

[12:40] <camelia> rakudo-moar 054aca: OUTPUT«===SORRY!===␤Lexical 'self' already declared␤»

[12:40] <viki> hard to read code on this tiny thing :) http://imgur.com/D3TqoqI

[12:41] <psch> ...that's really just your own fault :P

[12:41] <viki> :)

[12:41] <psch> ZzZombo: it might well be that you just gotta add a check in the if near the linked line that checks if there already is a lexical 'self'

[12:43] <viki> w00t! I found a secret way to create RT tickets without using email :)

[12:44] <viki> ( mobile )

[12:45] *** wamba left
[12:45] <viki> ZzZombo, so you're from Russia?

[12:46] <ZzZombo> Yes, why?

[12:46] <viki> What city?

[12:46] <ZzZombo> psch: maybe later, when I finish with this thing.

[12:46] <ZzZombo> Ulan-Ude.

[12:47] <viki> Ah. I lived in Novosibirsk for 15 years

[12:47] <ZzZombo> Wow, how's that been?

[12:47] <viki> It was ok

[12:49] * jnthn visited Ulan Ude years ago

[12:49] <jnthn> It's hard the unsee that huge Lenin head on the square :P

[12:49] *** user9 left
[12:51] <ZzZombo> :)

[12:51] * ZzZombo throws a snowball at viki and jnthn

[12:51] <ZzZombo> From Russia with love :)

[12:51] <jnthn> :)

[12:52] <jnthn> Yay, some snow. I'm still waiting to get that here this winter... :)

[12:54] <dalek> perl6.org: 7cbce3d | (Steve Mynott)++ | source/ (2 files):

[12:54] <dalek> perl6.org: refs to Rakudo Star 2016.11

[12:54] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/7cbce3deb0

[12:55] *** pmurias joined
[12:56] *** grondilu left
[12:57] *** chinarulezzz left
[12:58] *** eliasr joined
[12:58] *** user9 joined
[13:01] *** pierre_ left
[13:02] *** dmaestro left
[13:04] <ZzZombo> m: put Bool::True

[13:04] <camelia> rakudo-moar 054aca: OUTPUT«True␤»

[13:05] *** TEttinger left
[13:05] *** brillenfux joined
[13:06] <viki> m: put Bool::True.perl

[13:06] <camelia> rakudo-moar 054aca: OUTPUT«Bool::True␤»

[13:09] *** pierre_ joined
[13:09] <ZzZombo> m: my %x;%x<a>=Nil;%x<a>.get_value();

[13:09] <camelia> rakudo-moar 054aca: OUTPUT«No such method 'get_value' for invocant of type 'Any'␤  in block <unit> at <tmp> line 1␤␤»

[13:10] <ZzZombo> why "Any"? It's Nil.

[13:10] <ZzZombo> It got me confused.

[13:10] <psch> m: my $x = Nil; say $x

[13:10] <camelia> rakudo-moar 054aca: OUTPUT«(Any)␤»

[13:10] <psch> Nil is literally no value, which means assigning Nil to something is resetting it to the default

[13:10] *** AlexDaniel joined
[13:10] <psch> m: my $x is default(42) = 10; say $x; $x = Nil; say $x

[13:10] <camelia> rakudo-moar 054aca: OUTPUT«10␤42␤»

[13:10] <ZzZombo> ugh

[13:11] <psch> ZzZombo: you seem to be X/Y-ing :)

[13:11] <psch> ZzZombo: or, well, maybe exploring semantics vOv

[13:12] <jnthn> Nil means you don't have to worry what type something was declared with in order to clear it

[13:15] <ZzZombo> But then how do I know for sure for example, .first() just didn't found anything instead of finding a value that happened to be Any. I always thought of Nil like 'there is nothing to return, but everything is totally okay',

[13:15] <ZzZombo> find*

[13:15] <dalek> doc: 29fd20f | gfldex++ | doc/Language/functions.pod6:

[13:15] <synopsebot6> Link: http://doc.perl6.org/language/functions

[13:15] <dalek> doc: link to Method and Sub

[13:15] <dalek> doc: review: https://github.com/perl6/doc/commit/29fd20f23d

[13:15] <dalek> doc: 35b4489 | gfldex++ | doc/Language/functions.pod6:

[13:15] <dalek> doc: methods can exist independently of objects

[13:15] <dalek> doc: review: https://github.com/perl6/doc/commit/35b44892f8

[13:15] <synopsebot6> Link: http://doc.perl6.org/language/functions

[13:18] <psch> m: say <a b c>.first: { $_ eq .uc }

[13:18] <camelia> rakudo-moar 054aca: OUTPUT«Nil␤»

[13:18] <psch> m: say [Int, Str, Any].first: { $_ === Any }

[13:18] <camelia> rakudo-moar 054aca: OUTPUT«(Any)␤»

[13:18] * psch doesn't understand the question

[13:19] <ZzZombo> I dunno, it's what I got.

[13:19] <jnthn> I think the question is "if I assign it into a variable, the Nil vanishes, so what do I do?"

[13:19] <viki> If you store the result in a variable you won't be able to tell the difference

[13:19] <jnthn> m: my $a = [Int, Str, Any].first: { $_ === Any }; say $a

[13:19] <camelia> rakudo-moar 054aca: OUTPUT«(Any)␤»

[13:19] <psch> oh, right, on assignment it gets weird

[13:19] <jnthn> m: my $a = [Int, Str].first: { $_ === Any }; say $a

[13:19] <camelia> rakudo-moar 054aca: OUTPUT«(Any)␤»

[13:20] <jnthn> Like that for example

[13:20] <jnthn> m: my $a := [Int, Str].first: { $_ === Any }; say $a

[13:20] <camelia> rakudo-moar 054aca: OUTPUT«Nil␤»

[13:20] <jnthn> m: my $a := [Int, Str, Any].first: { $_ === Any }; say $a

[13:20] <camelia> rakudo-moar 054aca: OUTPUT«(Any)␤»

[13:20] <jnthn> But the behavior is a property of assignment, so just don't assign. :)

[13:20] <psch> clearly we need a with-derivate that distinguishes only on === Nil

[13:20] <psch> (we don't actually need that i think)

[13:20] <jnthn> Not really.

[13:20] <jnthn> How often are you actually working with type objects?

[13:21] <psch> well, they usually come as SixModelObject when i'm working with them :)

[13:21] <jnthn> Note that if you were doing .first({ $_ === Nil }) you're back to square one again :)

[13:22] <gfldex> m: my @a = <a b c>.first: { $_ eq .uc }; say @a ~~ (), @a ~~ Empty;

[13:22] <camelia> rakudo-moar 054aca: OUTPUT«FalseFalse␤»

[13:23] <gfldex> i would have goess that Empty smart matches against an empty Array

[13:23] <viki> Well, it's a Slip

[13:24] <viki> s: Slip, 'ACCEPTS', \([])

[13:24] <SourceBaby> viki, Sauce is at https://github.com/rakudo/rakudo/blob/843a6be/src/core/Any.pm#L19

[13:24] <viki> s: Slip.new, 'ACCEPTS', \([])

[13:24] <SourceBaby> viki, Sauce is at https://github.com/rakudo/rakudo/blob/843a6be/src/core/List.pm#L760

[13:24] <viki> :o

[13:24] <viki> m: say Slip.^mro

[13:24] <camelia> rakudo-moar 054aca: OUTPUT«((Slip) (List) (Cool) (Any) (Mu))␤»

[13:24] <gfldex> i would also expect the empty list to match against an empty Array

[13:25] <viki> s: &infix:<~~>, \([], Empty)

[13:25] <SourceBaby> viki, Sauce is at https://github.com/rakudo/rakudo/blob/843a6be/src/core/Mu.pm#L818

[13:25] <gfldex> m: say List.new ~~ (), List.new ~~ Empty;

[13:25] <camelia> rakudo-moar 054aca: OUTPUT«TrueTrue␤»

[13:25] <viki> I'm guessing this is the same issue as with andthen + orelse

[13:26] <viki> The Empty vanishes when passed to infix:<~~>

[13:26] * viki has no idea

[13:26] <gfldex> can it be special cased?

[13:27] *** aborazmeh joined
[13:27] *** aborazmeh left
[13:27] *** aborazmeh joined
[13:27] <viki> The output from SourceBaby would suggest it doesn't vanish

[13:27] <gfldex> m: my @a; say @a.list ~~ (), @a.list ~~ Empty;

[13:27] <camelia> rakudo-moar 054aca: OUTPUT«TrueTrue␤»

[13:28] <viki> m: say [] ~~ Empty;

[13:28] <camelia> rakudo-moar 054aca: OUTPUT«True␤»

[13:28] <viki> m: my @a = <a b c>.first: { $_ eq .uc }; dd @a

[13:28] <camelia> rakudo-moar 054aca: OUTPUT«Array @a = [Any]␤»

[13:28] <viki> Well, there's your problem

[13:28] <viki> :D

[13:29] <gfldex> m: my @a := <a b c>.first: { $_ eq .uc }; dd @a

[13:29] <camelia> rakudo-moar 054aca: OUTPUT«Type check failed in binding; expected Positional but got Nil (Nil)␤  in block <unit> at <tmp> line 1␤␤»

[13:29] *** cpage left
[13:29] <ZzZombo> why do you use arrays for stroing .first() results?

[13:29] <ZzZombo> storing*

[13:30] <gfldex> because Array is to go-to-class for things that have more then one value

[13:30] <viki> Can you get more than one value with .first?

[13:30] <gfldex> if it's a LoL i might

[13:31] <viki> But it'd still be 1 value

[13:31] <viki> m: my @a = [<a b c>, <f g e>].first: { $_ eqv <a b c> }; dd @a

[13:31] <camelia> rakudo-moar 054aca: OUTPUT«Array @a = [("a", "b", "c"),]␤»

[13:31] <timotimo> yeah, you'll need to grep + [^2] or something

[13:31] <gfldex> in that case i'm just confused

[13:32] <gfldex> still I will rakudobug @a ~~ () to get a fix or a docable answer

[13:33] <gfldex> no, i wont :)

[13:33] <gfldex> m: say Array.new ~~ (), Array.new ~~ Empty;

[13:33] <camelia> rakudo-moar 054aca: ( no output )

[13:33] <viki> erm why is that no output?

[13:33] <gfldex> that just worked in a /query to camelia

[13:33] <viki>  m: say Array.new ~~ (), Array.new ~~ Empty; 

[13:33] <camelia> rakudo-moar 054aca: OUTPUT«TrueTrue␤»

[13:34] * viki chalks it up to camelia bug

[13:34] <gfldex> m: say Seq.new ~~ (), Seq.new ~~ Empty;

[13:34] <camelia> rakudo-moar 054aca: OUTPUT«Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[13:34] <gfldex> m: my @a; say @a.Seq ~~ (), @a.Seq ~~ Empty;

[13:34] <camelia> rakudo-moar 054aca: OUTPUT«TrueTrue␤»

[13:35] <ZzZombo> Alright, I hope you will catch that pesky bug, if it's not a phantom. Gotta catch some sleep instead.

[13:35] <gfldex> i somehow like @a ~~ () better then @a.elems == 0

[13:36] <viki> m: package Attribute::Foo { }; use Attribute::Foo 

[13:36] <camelia> rakudo-moar 054aca: ( no output )

[13:36] <viki> m: package IO::Foo { }; use IO::Foo

[13:36] <camelia> rakudo-moar 054aca: ( no output )

[13:36] <viki> m: package IO::Foo { }; use IO::Foo

[13:36] <camelia> rakudo-moar 054aca: OUTPUT«===SORRY!===␤»

[13:37] <gfldex> m: my @a; say so @a.Seq ~~ ()|Empty;

[13:37] <camelia> rakudo-moar 054aca: ( no output )

[13:37] <gfldex> m: my @a; say so @a.Seq ~~ () | Empty;

[13:37] <camelia> rakudo-moar 054aca: ( no output )

[13:37] *** camelia left
[13:37] *** camelia joined
[13:37] <gfldex> i broke camelia :(

[13:38] <viki> I restarted her

[13:39] *** ChanServ sets mode: +v camelia

[13:39] <lucasb_> m: package IO::Foo { }; use IO::Foo

[13:39] <camelia> rakudo-moar 054aca: OUTPUT«===SORRY!===␤IO::Foo is a builtin type, not an external module␤»

[13:39] *** pierre_ left
[13:40] <viki> ah crap. it was just a camelia bug :(

[13:40] <lucasb_> how come this snippet changed from previous evaluation?

[13:40] * viki already commented on RT ticket

[13:40] *** pierre_ joined
[13:40] <viki> lucasb_: camelia was sick.

[13:40] <lucasb_> ah

[13:43] <lucasb_> the ticket about get and prompt in REPL...

[13:44] <lucasb_> if you call get/prompt, then it'll wait for you to type something and press enter, even in the REPL

[13:44] <viki> That's a dupe, there's already a ticket from 2016.04 or something

[13:44] <lucasb_> or maybe it's something broken on the windows system of the user

[13:44] <lucasb_> viki: what? is it a valid issue?

[13:45] <lucasb_> I thougth it was just a misunderstanding

[13:45] <lucasb_> or mis-expectation

[13:45] <viki> lucasb_: yeah, it just hangs

[13:45] <viki> I just tried in 2016.04, and I'm guessing that's still present in 2016.11

[13:46] <viki> I pressed Enter, CTRL+D, CTRL+C nothing does anything

[13:46] <viki> but it works fine outside the REPL

[13:46] <dalek> doc: 2cf9b86 | gfldex++ | doc/Type/List.pod6:

[13:46] <synopsebot6> Link: http://doc.perl6.org/type/List

[13:46] <dalek> doc: we should list () as a way to create List, also show ~~ against ()

[13:46] <dalek> doc: review: https://github.com/perl6/doc/commit/2cf9b86697

[13:46] <lucasb_> well, in my environment it's different

[13:47] <viki> This is on Win7 Professional

[13:47] <lucasb_> ah, right. sorry

[13:48] * viki prefers just evaulaing @a in bool context instead of either @a ~~ () or @a.elems == 0 :)

[13:48] <DrForr> Win7 "professional"... Heh.

[13:48] *** pierre_ left
[13:49] *** seatek left
[13:49] <viki> In fact,  @a.Bool can be faster than @a.elems, 'cause .elems reifies everything, but .Bool just 1 item

[13:49] <viki> DrForr: ? what

[13:49] <gfldex> does ~~ () call .Bool ?

[13:50] <viki> s: &infix:<~~>, \([], ())

[13:50] <SourceBaby> viki, Sauce is at https://github.com/rakudo/rakudo/blob/843a6be/src/core/Mu.pm#L818

[13:50] <viki> s: &infix:<~~>, \([], (),)

[13:50] <SourceBaby> viki, Sauce is at https://github.com/rakudo/rakudo/blob/843a6be/src/core/Mu.pm#L818

[13:50] <viki> :(

[13:51] <lucasb_> how do I use SourceBaby? I want to search for the List.ACCEPTS method

[13:51] <viki> s: (), 'ACCEPTS', \([])

[13:51] <SourceBaby> viki, Sauce is at https://github.com/rakudo/rakudo/blob/843a6be/src/core/List.pm#L760

[13:51] <viki> SourceBaby: help

[13:51] <SourceBaby> viki, Use s: trigger with args to give to sourcery sub. e.g. s: Int, 'base'. See http://modules.perl6.org/dist/CoreHackers::Sourcery

[13:51] <lucasb_> viki: thanks

[13:53] <viki> hm, I thought smartmatch against a List just matched by elements

[13:53] <viki> by number of elements that is

[13:54] <viki> m: say so (42, 42) ~~ (Match.new)

[13:54] <camelia> rakudo-moar 054aca: OUTPUT«True␤»

[13:55] <viki> m: say (42, 42, 42) ~~ (Match.new, Match.new)

[13:55] <camelia> rakudo-moar 054aca: OUTPUT«False␤»

[13:56] <viki> m: say (42) ~~ (Match.new, Match.new)

[13:56] <camelia> rakudo-moar 054aca: OUTPUT«(｢｣ ｢｣)␤»

[13:56] <viki> m: say (42,) ~~ (Match.new, Match.new)

[13:56] <camelia> rakudo-moar 054aca: OUTPUT«False␤»

[13:56] <viki> AH

[13:56] <viki> m: say so (42, 42) ~~ (Match.new,)

[13:56] <camelia> rakudo-moar 054aca: OUTPUT«False␤»

[13:57] <psch> m: say "foo" ~~ m:g/(.)/ 

[13:57] <camelia> rakudo-moar 054aca: OUTPUT«(｢f｣␤ 0 => ｢f｣ ｢o｣␤ 0 => ｢o｣ ｢o｣␤ 0 => ｢o｣)␤»

[13:57] <viki> Ah

[13:57] <psch> ^^^ that is also List on the RHS

[13:57] <viki> m: say Match.^mro

[13:57] <camelia> rakudo-moar 054aca: OUTPUT«((Match) (Capture) (Cool) (Any) (Mu))␤»

[13:57] <psch> m: say ("foo" ~~ m:g/(.)/).WHAT

[13:57] <camelia> rakudo-moar 054aca: OUTPUT«(List)␤»

[13:57] <viki> m: say "foo" ~~ m:g/(.)/; say $/.^mro

[13:57] <camelia> rakudo-moar 054aca: OUTPUT«(｢f｣␤ 0 => ｢f｣ ｢o｣␤ 0 => ｢o｣ ｢o｣␤ 0 => ｢o｣)␤((List) (Cool) (Any) (Mu))␤»

[13:58] <viki> It also has some sort of magic for HyperWhatevers: https://github.com/rakudo/rakudo/blob/843a6be/src/core/List.pm#L773-L788

[14:00] *** wamba joined
[14:00] <viki> Here's the other prompt-hangs-on-windws ticket https://rt.perl.org/Ticket/Display.html?id=128822#ticket-history

[14:04] *** aborazmeh left
[14:05] *** bjz_ left
[14:09] <viki> gfldex: no, it doesn't. The, .elems gets called on () right away, and .elems gets called on the LHS array here, when `<` is called: https://github.com/rakudo/rakudo/blob/843a6be/src/core/List.pm#L772

[14:09] <viki> `<` -> .Real -> .Numeric -> .elems

[14:11] <viki> m: my $seq = (1 ... 1e100); say so $seq

[14:11] <camelia> rakudo-moar 054aca: OUTPUT«True␤»

[14:12] <viki> m: my $seq = (1 ... 1e100); say $seq ~~ ()

[14:12] <camelia> rakudo-moar 054aca: OUTPUT«(timeout)»

[14:12] *** kyclark_ joined
[14:12] <viki> m: my $seq = (1 ... 1e100); say $seq.elems == 0

[14:12] <viki> :)

[14:12] <camelia> rakudo-moar 054aca: OUTPUT«(timeout)»

[14:13] *** kyclark_ left
[14:13] <gfldex> this may provide lizmat with the reason to special case

[14:16] *** Khisanth left
[14:21] <viki> s/The, .elems gets called on () right away//; # that only happens when LHS is not an Iterable

[14:21] <viki> # but that's not the part that makes the above timeout

[14:23] *** kyclark_ joined
[14:23] *** tyil left
[14:24] *** kyclark_ left
[14:27] *** kyclark_ joined
[14:27] *** cdg joined
[14:29] *** Khisanth joined
[14:30] *** cdg left
[14:31] *** cdg joined
[14:32] <moritz> star-m: use JSON::Tiny; say to-json(42);

[14:32] <camelia> star-m 2016.10: OUTPUT«42␤»

[14:33] *** jfuller joined
[14:35] *** jfuller_ joined
[14:35] *** jfuller left
[14:36] *** kyclark left
[14:36] *** kyclark_ is now known as kyclark

[14:36] *** jfuller_ left
[14:37] <viki> star-m: use JSON::Fast; say to-json 42

[14:37] <camelia> star-m 2016.10: OUTPUT«42␤»

[14:37] <viki> star-m: use JSON::Fast; say from-json '42'

[14:37] <camelia> star-m 2016.10: OUTPUT«a JSON string ought to be a list or an object␤  in sub from-json at /home/camelia/star-2016.10/share/perl6/site/sources/11ED005DCC03AA42CAA87A439556DB9B6B2C9E59 (JSON::Fast) line 305␤  in block <unit> at <tmp> line 1␤␤»

[14:37] <viki> ehehe

[14:38] <viki> I love that it generates what it thinks is invalid JSON :)

[14:40] <timotimo> oh, right, it ought to allow just literals, right?

[14:40] *** wamba left
[14:40] <timotimo> i forgot what json now actually is and what it isn't

[14:40] <viki> timotimo: yeah: https://github.com/timo/json_fast/issues/9

[14:45] <timotimo> why didn't i fix that yet?

[14:46] *** kyclark left
[14:49] *** espadrine_ joined
[14:51] *** nicq20 joined
[14:51] <nicq20> Hello o/

[14:51] <viki> \o

[14:59] *** cdg_ joined
[14:59] <timotimo> done, btw

[14:59] <dalek> doc: b800bd2 | (Zoffix Znet)++ | README.md:

[14:59] <dalek> doc: Trigger doc rebuild

[14:59] <dalek> doc: review: https://github.com/perl6/doc/commit/b800bd2348

[15:00] <viki> gfldex: should rebuild now. I recall someone updated perl6 on hack, but they never ran `rakudobrew rehash` to update the shims for executables, so the doc build was failing, because pod2bigpage wasn't found

[15:00] *** pmurias left
[15:01] *** cdg left
[15:05] <dalek> doc: 3c2d876 | coke++ | doc/Type/List.pod6:

[15:05] <synopsebot6> Link: http://doc.perl6.org/type/List

[15:05] <dalek> doc: fix typos

[15:05] <dalek> doc: review: https://github.com/perl6/doc/commit/3c2d876c2c

[15:05] <dalek> doc: 8f6f8d0 | coke++ | xt/code.pws:

[15:05] <dalek> doc: learn new code

[15:05] <dalek> doc: review: https://github.com/perl6/doc/commit/8f6f8d036a

[15:06] *** brillenfux left
[15:07] *** jonas2 left
[15:08] <[Coke]> viki: if there are more instructions to upgrading rakudobrew, please add them to "https://github.com/perl6/infrastructure-doc/blob/master/hosts/hack.p6c.org.pod#updating-rakudobrew" (I'm the one that just updated it, based on those directions)

[15:09] <[Coke]> apologies for any disruption.

[15:11] * viki adds `rakudobrew rehash` to ./upgrade-rakudobrew script

[15:11] <[Coke]> viki++

[15:12] <[Coke]> given that the directions blow away .rakudobrew ... what does the rehash do on a fresh install?

[15:12] <viki> You need to run it after installing any module that installs binaries

[15:12] <[Coke]> ew. Ok.

[15:13] <viki> :)

[15:13] *** lucasb_ left
[15:14] <DrForr> Aren't we pushing people that aren't core devs away from rakudobrew?

[15:14] <viki> Yes.

[15:14] <DrForr> (not saying that you aren't, just curious.)

[15:14] <[Coke]> mst was, I think. I am a core dev, so it's hard to argue. :)

[15:14] <[Coke]> (coreish?)

[15:15] <[Coke]> Down to 13 gaps in the calendar. first gap is 8 days out.

[15:15] *** pmurias joined
[15:16] <viki> Is #1 spot now chizzeled in stone?

[15:16] * viki was hoping for some sort of State of The Butterfly recap for the year

[15:16] <viki> huggable: advent

[15:16] <huggable> viki, https://github.com/perl6/mu/blob/master/misc/perl6advent-2016/schedule

[15:17] *** espadrine_ left
[15:19] <viki> nice to have bdfoy pitching in a post... 

[15:19] <viki> maybe worth mentioning to him that MAIN args get the same treatment as <...> he opened a ticket about a few days ago...

[15:20] <[Coke]> viki: it's set to be published on Dec 1st; there's a paragraph or so about how it's been year, isn't that grand?

[15:21] <dalek> mu: 3b2bf4e | moritz++ | misc/perl6advent-2016/schedule:

[15:21] <dalek> mu: [p6advent]: Move my slot further to the front, talk about other Perl 6 books too

[15:21] <dalek> mu: review: https://github.com/perl6/mu/commit/3b2bf4ed67

[15:22] <dalek> mu: eee14b7 | jnthn++ | misc/perl6advent-2016/schedule:

[15:22] <dalek> mu: Update schedule

[15:22] <dalek> mu: review: https://github.com/perl6/mu/commit/eee14b7d02

[15:22] <viki> [Coke]: sounds good

[15:22] * jnthn finally thought up a topic in the shower this morning, then forgot to add it to the schedule :)

[15:23] <[Coke]> Down to 12 gaps in the calendar. First gap is 9 days out.

[15:23] <[Coke]> viki: I'm still happy to switch if someone wants, though.

[15:23] <[Coke]> just need to change the schedule and make a slight update to the first paragraph.

[15:24] <[Coke]> note: since day 1 is already up there in preview form, please feel free to read it and give feedback.

[15:25] <[Coke]> ah, I did'nt actually hit schedule, only set the time.

[15:25] <[Coke]> I hit schedule.

[15:26] <[Coke]> and now the date in the URL looks right.

[15:27] <[Coke]> when you schedule wordpress, does it make the article available at the published URL immediately, but not link to it anywhere but the admin screen?

[15:27] <[Coke]> 'cause I have a URL to share if someone wants to read it.

[15:28] *** tyil joined
[15:28] <moritz>  [Coke]: it's only available to logged-in folks in that blog

[15:28] <moritz> with sufficient access (editor or administrator, iirc)

[15:28] <[Coke]> so I can share it here without concern?

[15:28] <moritz> yes

[15:28] <viki> [Coke]: well, I'd love to do a recap of the year. I imagine there are some folks who weren't impressed with our "first production release" and maybe they decided to wait a bit.

[15:29] <viki> [Coke]: but if it's already set to publish... *shrug* don't wanna be a bother :)

[15:29] <[Coke]> viki: sure. This was intended to be one that could go anywhere, but I went first to fill the scary gap on the 1st.

[15:29] <[Coke]> https://perl6advent.wordpress.com/2016/12/01/consuming-github-webhooks

[15:29] *** khw joined
[15:30] <mspo> a little early?

[15:30] <[Coke]> mspo: read the last 5 minutes.

[15:30] <mspo> got it

[15:30] <mspo> that url doesn't work for me, fwiw ;)

[15:31] <mspo> so I think you have to login

[15:31] <mspo> also, dogfood a blog

[15:31] <[Coke]> mspo (doesn't work) excellent. :)

[15:32] <moritz> [Coke]: "whipuptitude" might need an explanation (or a link) for the not so hardcore perl folks :-)

[15:34] <moritz> viki: it twould be nice if you could increase the text contrast a bit on the advent blog

[15:34] <viki> agreed... though that would require raking for a new theme ('cause we can't make just small adjustments)

[15:35] <moritz> :(

[15:35] <viki> I'll do it tonight, when I'm at a location with faster Internet

[15:35] <moritz> thanks, ++viki

[15:40] *** kyclark joined
[15:42] *** mad__ joined
[15:42] *** mohae_ joined
[15:45] *** mohae left
[15:45] *** cooper_ left
[15:47] *** wamba joined
[15:48] *** espadrine_ joined
[15:50] <timotimo> jnthn: i was in the shower today, too, but i didn't come up with a topic :(  something must be broken in mine that works in yours

[15:51] <jnthn> Maybe you have to sleep badly first also :P

[15:51] <timotimo> i got that box ticked

[15:51] <AlexDaniel> timotimo: how long have you been in the shower?

[15:52] <timotimo> i find it surprising that people do their/they're but never yours/your's

[15:52] <timotimo> AlexDaniel: hm, like 20 minutes?

[15:52] *** mohae joined
[15:54] *** CIAvash left
[15:54] <AlexDaniel> timotimo: perhaps try more? You know, it takes some time for water to wear away rock

[15:55] *** mohae_ left
[15:56] <timotimo> i'm a bonehead, not a rockhead

[15:56] *** kyclark left
[15:56] *** skids joined
[15:59] *** CIAvash joined
[16:01] *** nowan left
[16:01] *** andrzejku left
[16:01] *** xinming left
[16:01] *** ZzZombo left
[16:01] *** solarbunny left
[16:01] *** b2gills left
[16:01] *** kaare_ left
[16:01] *** beatdown left
[16:01] *** dalek left
[16:01] *** synopsebot6 left
[16:01] *** emdashcomma left
[16:01] *** amalia_ left
[16:01] *** effbiai left
[16:01] *** jferrero left
[16:01] *** Undercover left
[16:01] *** SourceBaby left
[16:01] *** ugexe left
[16:01] *** buggable left
[16:01] *** Juerd left
[16:01] *** parisba left
[16:01] *** hobbs left
[16:01] *** bhm left
[16:01] *** ggherdov left
[16:01] *** Kaffe left
[16:01] *** apejens joined
[16:01] *** hobbs joined
[16:01] *** hobbs left
[16:01] *** hobbs joined
[16:01] *** bhm joined
[16:01] *** effbiai joined
[16:01] *** effbiai left
[16:01] *** effbiai joined
[16:02] *** nowan joined
[16:02] *** hahainternet joined
[16:02] *** andrzejku joined
[16:02] *** emdashcomma joined
[16:02] *** kaare_ joined
[16:02] *** ZzZombo joined
[16:02] *** amalia_ joined
[16:02] *** jferrero joined
[16:02] <viki> weeee

[16:02] *** Juerd joined
[16:02] *** beatdown joined
[16:02] *** xinming joined
[16:02] *** buggable joined
[16:02] *** ugexe joined
[16:02] *** ZzZombo is now known as Guest76904

[16:03] *** b2gills joined
[16:03] <[Coke]> moritz: got a good link for whipuptitude?

[16:04] *** parisba joined
[16:04] <rindolf> [Coke]: there's http://perl.org.il/presentations/larry-wall-present-continuous-future-perfect/transcript.html

[16:05] <rindolf> [Coke]: also http://www.shlomifish.org/lecture/Perl/Newbies/vhll-slides.pdf

[16:06] *** ggherdov joined
[16:06] <[Coke]> Both of those (like most of the others) have a bunch of other stuff. I'll just put it inline. :)

[16:06] *** Kaffe joined
[16:07] *** eisen74 joined
[16:07] <rindolf> [Coke]: and http://www.perl.com/pub/2007/12/06/soto-11.html

[16:07] *** xinming left
[16:09] *** mj41 left
[16:13] *** mj41 joined
[16:17] *** dalek joined
[16:17] *** ChanServ sets mode: +v dalek

[16:17] *** Undercover joined
[16:17] *** ChanServ sets mode: +v Undercover

[16:17] *** SourceBaby joined
[16:18] *** xinming joined
[16:19] *** eisen74 left
[16:20] *** Actualeyes left
[16:21] *** bazzaar joined
[16:21] <bazzaar> o/ perl6

[16:21] <nicq20> \o

[16:21] <viki> \o\

[16:21] *** solarbunny joined
[16:23] <dalek> doc: 2fb08fe | coke++ | doc/Language/quoting.pod6:

[16:23] <dalek> doc: Probably meant Pi here?

[16:23] <dalek> doc: 

[16:23] <dalek> doc: briandfoy++

[16:23] <dalek> doc: review: https://github.com/perl6/doc/commit/2fb08fe3fa

[16:24] <viki> aye

[16:27] <bazzaar> I'm having a problem installing rakudo-star-2016.11 on linux, panda install fails with File::Find error "Required named parameter 'name' not passed"

[16:27] <viki> :o

[16:29] <viki> m: dd q:w { [ ] { } }

[16:29] <camelia> rakudo-moar 054aca: OUTPUT«("[", "]", "\{}")␤»

[16:29] <bazzaar> anyone else reported that? maybe it's me being stupid

[16:29] <viki> bazzaar: first time I hear it, but it got released just yesterday...

[16:30] <viki> m: dd q:w / [ ] { } /

[16:30] <camelia> rakudo-moar 054aca: OUTPUT«("[", "]", "\{", "}")␤»

[16:30] <viki> I don't get what that { } variant is doing...

[16:31] <viki> m: dd q:w [ [ ] { } ]

[16:31] <camelia> rakudo-moar 054aca: OUTPUT«("[]", "\{", "}")␤»

[16:31] <viki> m: dd q:w [ [    ] { } ]

[16:31] <camelia> rakudo-moar 054aca: OUTPUT«("[]", "\{", "}")␤»

[16:31] <viki> m: dd q:w [ [  lulzwat  ] { } ]

[16:31] <camelia> rakudo-moar 054aca: OUTPUT«("[lulzwat]", "\{", "}")␤»

[16:33] <nicq20> viki: Kind of odd it does not grab the '[]' chars the same way.

[16:33] *** kyclark joined
[16:36] <dalek> doc: 37849ba | (Douglas L. Schrag)++ | doc/Language/quoting.pod6:

[16:36] <dalek> doc: Fix example that mixed up q:w and Q:w

[16:36] <dalek> doc: 

[16:36] <dalek> doc: The original example had very strange behavior; not sure how to

[16:36] <dalek> doc: document this:

[16:36] <dalek> doc: 

[16:36] <dalek> doc:     Q:w { [ ] \{ \} } eqv ('[', ']', '{', '}') # False

[16:36] <dalek> doc: 

[16:36] <dalek> doc:     > Q:w { [ ] \{ \} }.perl

[16:36] <dalek> doc:     ("[", "]", "\\\{\\}")

[16:36] <dalek> doc: review: https://github.com/perl6/doc/commit/37849bad8b

[16:36] <dalek> doc: eed4ffb | (Zoffix Znet)++ | doc/Language/quoting.pod6:

[16:36] <dalek> doc: Merge pull request #1022 from dmaestro/quoting_qw_fix_example

[16:36] <dalek> doc: 

[16:36] <dalek> doc: Fix example that mixed up q:w and Q:w

[16:36] <dalek> doc: review: https://github.com/perl6/doc/commit/eed4ffb448

[16:38] <viki> Feels like a bug

[16:41] <viki> m: q:w “ 12 “ lulzwat ” 42 ”

[16:41] <camelia> rakudo-moar 054aca: ( no output )

[16:42] <viki> m: dd q:w “ 12 “ lulzwat ” 42 ”

[16:42] <camelia> rakudo-moar 054aca: OUTPUT«("12", "“lulzwat”", "42")␤»

[16:42] <viki> m: dd q:w “ 12 “ lulz   wat ” 42 ”

[16:42] <camelia> rakudo-moar 054aca: OUTPUT«("12", "“lulz", "wat”", "42")␤»

[16:48] <viki> Rakudobugged: https://rt.perl.org/Ticket/Display.html?id=130205

[16:49] <viki> BTW, the One Weird Trick to report tickets without having to email. is to append `m/` to the homepage URL to get mobile interface: https://rt.perl.org/m/

[16:50] <viki> It's pretty amusing it also lets you create a ticket in Spam queue :D

[16:51] <tony-o> is there any need in the ecosystem for something like npmjs with private (a la company private) repositories?

[16:51] *** domidumont left
[16:51] * viki has no idea what nqpjs is ...

[16:52] <viki> ... or npmjs

[16:53] <tony-o> npmjs provides a service where you company can keep modules private to your company (or an arbitrary group) and makes them installable via npm.  so it'd be equivalent to zef being able to search a 'private' ecosystem that only your company or friends or whoever has access to

[16:54] <viki> so like stratopan.com 

[16:54] <tony-o> looks like that, yea

[16:55] <viki> Yeah, it's handy.

[16:55] <viki> (that was the answer to original Q) :)

[16:55] <tony-o> is stratopan being maintained?

[16:56] <tony-o> half of the links don't work

[16:57] <dalek> doc: 2e980b2 | gfldex++ | doc/ (2 files):

[16:57] <dalek> doc: move index entry for empty list to List

[16:57] <dalek> doc: review: https://github.com/perl6/doc/commit/2e980b2a75

[16:57] <dalek> doc: ced7c9f | gfldex++ | doc/Language/operators.pod6:

[16:57] <dalek> doc: link to empty list

[16:57] <dalek> doc: review: https://github.com/perl6/doc/commit/ced7c9f1e6

[16:57] <viki> no idea

[16:58] <viki> But I remember it from years ago and I see it's still in "Beta"

[16:58] <tony-o> the original intent of modules.zef.pm was to go in that direction.  right now it's just a landing space for searching modules and browsing the code

[16:59] <tony-o> all of the login and management functions are turned off

[16:59] <viki> Heh. For a site purported to be for private repos, they sure aren't shy about disclosing all of their users :) https://stratopan.com/explore/users

[16:59] <tony-o> yea i was just looking at that, weird

[17:00] <[Coke]> gah. didn't I just fix both emtpy and absense !?

[17:00] <viki> hehe

[17:02] <dalek> doc: 56fc629 | coke++ | doc/Type/List.pod6:

[17:02] <dalek> doc: fix typos

[17:02] <dalek> doc: review: https://github.com/perl6/doc/commit/56fc6293d7

[17:02] <[Coke]> must have missed some instances, ah well.

[17:03] *** CIAvash left
[17:04] <gfldex> [Coke]: it's nice to know that at least one person is reading the gibberish i prodoce :)

[17:04] <gfldex> typing around a big got cup of tea does not improve spelling

[17:11] <[Coke]> gfldex: reading is too strong a term :)

[17:12] *** kurahaupo joined
[17:14] <[Coke]> (that is, I'm just making the tests pass)

[17:15] *** lolo78 joined
[17:17] *** kurahaupo left
[17:17] *** kurahaupo joined
[17:21] *** kyclark left
[17:21] *** eisen74 joined
[17:23] *** alimon1 joined
[17:26] <pmurias> viki: nqpjs is the the nqp-compiling-code-to-js

[17:26] *** kurahaupo__ joined
[17:28] <viki> pmurias: nah, I mistyped npm-js

[17:28] *** dakkar left
[17:29] <pmurias> tony-o: I can assume the demand for having a 'private' ecosystem will increase with more people having a lot of 'private' modules

[17:33] *** cibs left
[17:35] *** cibs joined
[17:36] *** chris2 left
[17:37] *** bazzaar left
[17:44] *** bazzaar joined
[17:48] <bazzaar> regarding earlier post, on problem installing Rakudo Star 2016.11 (specifically installing panda) on linux, pls see : https://gist.github.com/bazzaar/bb3eed14f700da73f1616c88535f68ae

[17:50] *** chris2 joined
[17:52] <timotimo> bazzaar: that seems like the invocation of the written-in-perl6 prove command is wrong, or something like that

[17:52] <timotimo> um, actually

[17:52] <timotimo> it's apparently using last month's prove6 binary for your this month's rakudo star

[17:54] <bazzaar> timotimo: I didn't nuke my previous perl6 R* install, prior to trying the latest R*

[17:56] *** eisen74 left
[17:59] *** andrzejku_ joined
[18:03] *** nicq20 left
[18:04] *** mj41 left
[18:06] *** labster joined
[18:09] *** labster left
[18:09] *** labster joined
[18:09] <tony-o> pmurias: that's kind of what i figured, i know some folks are doing day to day stuff in p6 and was mostly curious if anyone was starting to develop things internally that might call for private ecos

[18:10] <[Coke]> we have github enterprise here; I'd probably tie into that before a local private cpan.

[18:17] *** committable6 left
[18:18] <bazzaar> timotimo: thanks for your help, the install now works after I moved the previous perl6 to a backwater. :)

[18:19] *** setty1 joined
[18:21] <tony-o> [Coke]: using github enterprise would be fine for the backend - i see the way that tying in is through a list of p6 modules available in that github/org and being searchable/installable via zef or panda or whatever

[18:24] *** eliasr left
[18:25] <AlexDaniel> huggable: advent

[18:25] <huggable> AlexDaniel, https://github.com/perl6/mu/blob/master/misc/perl6advent-2016/schedule

[18:26] <AlexDaniel> hmmmm

[18:28] <viki> You look like you would like to write an Advent article!

[18:31] *** wamba left
[18:32] <AlexDaniel> are there any special dates?

[18:32] <viki> What sort of special?

[18:32] <AlexDaniel> or anyone can write about anything on any day?

[18:32] <viki> Anything on any day

[18:32] <AlexDaniel> okay, hmmm

[18:33] <viki> AlexDaniel: oh, and I murdered committable...

[18:34] <AlexDaniel> yea it's time to put them in a loop. They are now known to be consistently unstable

[18:34] <AlexDaniel> “Unhandled exception in code scheduled on thread 6” and stuff

[18:35] *** committable6 joined
[18:35] *** ChanServ sets mode: +v committable6

[18:37] *** bazzaar left
[18:40] *** domidumont joined
[18:47] <dalek> mu: d233c03 | (Aleks-Daniel Jakimenko-Aleksejev)++ | misc/perl6advent-2016/schedule:

[18:47] <dalek> mu: 23rd

[18:47] <dalek> mu: 

[18:47] <dalek> mu: Conveniently before “Perl 6 Core Hacking”

[18:47] <dalek> mu: review: https://github.com/perl6/mu/commit/d233c033a0

[18:52] <viki> Haha. That's a pretty depressing title :)

[18:53] <viki> Perfection can only be persued, never attained, eh? :)

[18:53] <viki> pursued too

[18:53] <jeek> Perused?

[18:56] *** thowe joined
[18:56] *** ZzZombo joined
[18:57] *** ZzZombo is now known as Guest96738

[18:57] *** Guest76904 left
[18:58] <AlexDaniel> it will be a post about interesting gems from the ticket history and about bug reporting in general

[18:58] <viki> sweet

[18:58] <AlexDaniel> viki: so I'm hoping that it will end up being very positive :)

[18:59] <viki> AlexDaniel: did you see I found a way to create a new ticket without an email?

[18:59] <AlexDaniel> viki: oh, no

[18:59] <AlexDaniel> how? Using some direct link?

[18:59] <viki> https://rt.perl.org/m/

[19:00] <viki> Using mobile version of the site

[19:00] <AlexDaniel> oooooooooooooooooooooooooooooooooooooh

[19:00] <AlexDaniel> did not know it existed

[19:00] <viki> I assuem the person who disabled the 'Create Ticket' button didn't either :)

[19:01] <AlexDaniel> good. Very good

[19:01] <[Coke]> I would assume that now tha tyou've posted it here, it'll get spam killed in the next 3 months.

[19:01] <DrForr> Web dev Barbie says responsive design is *hard*!

[19:02] <AlexDaniel> hmm does not seem to support html

[19:02] <viki> :(

[19:02] *** girafe joined
[19:02] <AlexDaniel> but that's still better than nothing, I guess?

[19:02] <AlexDaniel> viki: thank you very much!

[19:05] *** kyclark joined
[19:12] *** kyclark left
[19:14] <timotimo> bumped JSON::Fast and even uploaded a tag

[19:14] *** domidumont left
[19:16] <AlexDaniel> timotimo: hey, any progress on MoarVM panic thingy?

[19:17] *** cdg_ left
[19:17] *** cdg joined
[19:18] <timotimo> no, sorry :(

[19:19] *** darutoko left
[19:20] <AlexDaniel> timotimo: is there any way we can create a meaningful ticket out of this problem?

[19:22] *** cdg left
[19:22] <timotimo> i'm not sure, it's very far from golfed, sadly

[19:23] <AlexDaniel> timotimo: is there anything in particular you are stuck on, or is it just lack of time?

[19:25] *** geekosaur left
[19:26] *** RabidGravy joined
[19:27] *** geekosaur joined
[19:28] <AlexDaniel> I really want to make this thing move forward

[19:34] <timotimo> sorry, it's just lack of time and energy

[19:34] <[Coke]> Is there a ticket?

[19:35] <AlexDaniel> [Coke]: no. Wanna try to golf it?

[19:43] *** labster left
[19:50] *** eisen74 joined
[19:50] *** domidumont joined
[19:50] *** mj41 joined
[19:52] <[Coke]> Don't NEED a golfed version for a ticket.

[19:52] <[Coke]> need a ticket to fix it, though.

[19:52] <[Coke]> I can try to do a golf off a ticketed version.

[19:53] *** ugjka joined
[19:55] * viki wonders what this ugjka is...

[19:56] *** kyclark joined
[19:56] <viki> Has been lurking in #zofbot for a few days and I've been getting weird /msg from random people asking how I am

[19:57] <viki> Do I sound paranoid yet? :)

[19:58] <AlexDaniel> viki: https://github.com/ugjka ?

[19:58] *** kyclark left
[19:58] <AlexDaniel> some irc-related projects

[19:59] <viki> Yeah and no perl related projects :D

[19:59] <viki> oh

[19:59] <viki> https://github.com/zoffixznet/perl6-IRC-Client-Plugin-HNY/issues/1

[19:59] <viki> heh

[19:59] <viki> I *am* paranoid

[19:59] * viki clears kickban from #zofbot

[20:05] *** Tonik joined
[20:05] *** kyclark joined
[20:06] *** lukaramu joined
[20:07] <jnthn> AlexDaniel: Is the panic in question the "zeroed target" one?

[20:08] <AlexDaniel> jnthn: yes

[20:09] <jnthn> OK...got a console tab with a GDB session where I managed to catch an example of that a few steps further back from where it actually blows up. Didn't get to the bottom of it.

[20:10] <jnthn> I've got a private project that produces it about 1 in 10 times, but it shows up quickly if it's going to show up at all.

[20:10] <jnthn> Unfortunately the error really just means "memory got corrupted and we've caught it in a slightly better way than SEGVing"

[20:11] <jnthn> So hard to know if there's one root cause or multiple

[20:11] <jnthn> Will continue hunting it later this week, anyways.

[20:11] *** labster joined
[20:11] <AlexDaniel> hmmm I should try something

[20:12] <jnthn> (Most likely Wednesday)

[20:12] <AlexDaniel> unicodable6: { say ‘hello’; False }

[20:13] <unicodable6> AlexDaniel, Oops, something went wrong!

[20:13] <AlexDaniel> unicodable6: { say ‘hello’; False }

[20:13] *** unicodable6 left
[20:13] <diakopter> lol

[20:13] <dogbert17> jnthn timotimo: is ther a switch to force a GC as often as possible?

[20:14] *** unicodable6 joined
[20:14] <AlexDaniel> unicodable6: { say ‘hello’; False }

[20:14] <dogbert17> AlexDaniel: and viki managed to kill commitable

[20:15] <dogbert17> with this: committable6: 2015.07 say 1.0000001 ** (10 ** 8)

[20:15] *** unicodable6 left
[20:15] <dogbert17> hmm, did I do that ?

[20:15] <jnthn> dogbert17: You can tweak the GC thresholds in a header file

[20:15] <AlexDaniel> no

[20:16] *** unicodable6 joined
[20:16] <AlexDaniel> unicodable6: { say ‘hello’; False }

[20:16] <unicodable6> AlexDaniel, Oops, something went wrong!

[20:16] <AlexDaniel> unicodable6: { say ‘hello’; False }

[20:16] <unicodable6> AlexDaniel, Oops, something went wrong!

[20:16] *** unicodable6 left
[20:16] <dogbert17> jnthn: you know which one?

[20:16] <jnthn> collect.h iirc

[20:16] <jnthn> If not, allocation.h

[20:16] <AlexDaniel> ok, I thought I had an idea of what could be causing it in particular…

[20:16] <dogbert17> jnthn thx

[20:17] *** unicodable6 joined
[20:17] <AlexDaniel> but no, I guess that's not it

[20:17] <dogbert17> timotimo and I have been looking at a MoarVM panic a few days ago

[20:17] <AlexDaniel> committable6: 2015.07 say 1.0000001 ** (10 ** 8)

[20:17] *** committable6 left
[20:18] *** domidumont left
[20:18] <AlexDaniel> Unhandled exception in code scheduled on thread 15 bla-bla

[20:18] *** committable6 joined
[20:18] *** ChanServ sets mode: +v committable6

[20:18] <AlexDaniel> let's try again

[20:18] <AlexDaniel> committable6: 2015.07 say 1.0000001 ** (10 ** 8)

[20:18] <diakopter> dogbert17: lol, a collectable6 could run a rakudo with those thresholds at minimum

[20:18] *** committable6 left
[20:19] <viki> !!!

[20:19] <dogbert17> diakopter: collectable6, how many bots do we have :)

[20:20] <[Coke]> why are people putting [BUG] on their subject in bug reports? (didn't I remove the hint we had that suggested it?)

[20:20] <viki> .oO( we had a hint? )

[20:21] <pmurias> tony-o: isn't the big part of having a private custom cpan pinning down a set of working versions?

[20:21] <viki> I put it in when I'm reasonably sure something is an actual bug

[20:21] *** lolo78 left
[20:22] *** committable6 joined
[20:22] *** ChanServ sets mode: +v committable6

[20:22] *** wamba joined
[20:22] <[Coke]> viki: there were docs in the rakudo repo, yes.

[20:23] *** lolo78 joined
[20:24] <viki> And vis-avis RT#130207, we *do* have /latest

[20:24] <viki> All 4 icons link to latest*whatever http://rakudo.org/how-to-get-rakudo/

[20:25] <[Coke]> sure, but that's not what he's asking for.

[20:25] <viki> It is, in a way.

[20:25] <[Coke]> (which is, I think, a latest in the downloads directory.)

[20:26] <viki> You can automate anything you want with the current latest links, they're just done with .htaccess rather than with a symlink

[20:27] <viki> Like http://rakudo.org/downloads/star/rakudo-star-latest.tar.gz is a working link

[20:27] <viki> hm, he wants a rakudo one

[20:27] * viki tries something

[20:29] *** lolo78_ joined
[20:30] *** TEttinger joined
[20:30] *** lolo78 left
[20:30] *** lolo78_ is now known as lolo78

[20:31] <viki> Hm. If I add a symlink, it does show up in the folder, http://rakudo.org/downloads/rakudo/rakudo-latest.tar.gz, but when you click it, the file name that's downloaded is named just that, but I want it to be named with the version.

[20:32] * lizmat vaguely remembers there was a HTTP header for that

[20:32] <lizmat> Content-Name ?

[20:32] <viki> Yeah, there is Content-Disposition IIRC

[20:33] <viki> Oh, wait, yeah, disposition affects whether it's displayed inline.

[20:33] <jonadab> Yes, that works for MIME attachments as well.

[20:33] <[Coke]> <cfheader name="Content-Disposition" value='attachment;filename="#Replace(file_name,",","")#"'>

[20:33] <[Coke]> (there's some coldfusion for you that works. :)

[20:34] <viki> While, we're at it, maybe it's worth changing the look of downloads pages? 

[20:35] <viki> maybe not :D

[20:36] * viki `Take`s that ticket.

[20:36] <viki> Will think about it on the way home.

[20:40] *** Vynce joined
[20:42] *** mattp_ joined
[20:42] *** mattp__ left
[20:44] <viki> a symlink so something shows up in the directory itself, but use the current mod_rewrite solution to review it to proper name.... and a script to automate updating this stuff 

[20:44] <viki> s/review/rewrite/;

[20:50] <viki> a perl script with a fake extention that dynamically looks up what's the latest version and serves it (no need for any updating scripts)

[20:51] <viki> ???

[20:51] <viki> Profit!

[20:51] * viki relocates

[20:51] <AlexDaniel> huggable: test

[20:51] <huggable> AlexDaniel, Test failed

[20:51] <AlexDaniel> huh

[20:51] <AlexDaniel> ok

[20:51] <AlexDaniel> huggable: foo

[20:51] <huggable> AlexDaniel, nothing found

[20:52] <AlexDaniel> huggable: foo :is: bar 

[20:52] <huggable> AlexDaniel, Added foo as bar 

[20:52] <AlexDaniel> huggable: foo

[20:52] <huggable> AlexDaniel, bar 

[20:52] <AlexDaniel> great

[20:53] <AlexDaniel> are there any other public logs of this channel besides irclog.perlgeek.de ?

[20:54] <lizmat> AlexDaniel: not that I know of

[20:54] * lizmat starts working on the P6W

[20:54] <AlexDaniel> huggable: new ticket :is: https://rt.perl.org/m/ticket/create?Queue=16 

[20:54] <huggable> AlexDaniel, Added new ticket as https://rt.perl.org/m/ticket/create?Queue=16 

[20:55] <[Coke]> AlexDaniel: I would probably not advertise that link.

[20:55] *** bjz_ joined
[20:55] <AlexDaniel> [Coke]: why not?

[20:56] <[Coke]> let me rephrase that. I would recommend not advertising that link.

[20:56] <[Coke]> because the rt admin team deliberately removed the one they knew about.

[20:56] <AlexDaniel> and?

[20:57] <[Coke]> Seems like the friendly thing for us to do would be to let them know they missed one, instead of going behind their back, as it were.

[20:57] <AlexDaniel> they had a spam issue. If there is no spam issue with m/ link, there is no problem

[20:57] <timotimo> dogbert17: you can also nqp::force_gc()

[20:57] <AlexDaniel> if there is a problem, then they will probably figure it out themselves

[20:58] <lizmat> AlexDaniel: you probably just created the spam issue, long term  :-(

[20:58] <[Coke]> also, the lines with the inverted A's are not being logged on irclog.perlgeek.de... bug or feature?

[20:58] <AlexDaniel> lizmat: this link does not appear in clog

[20:58] <dogbert17> timitimo: thx

[20:58] <dogbert17> s/timitimo/timotimo/

[20:58] <AlexDaniel> and if anybody decides to share that link again, ask huggable instead of pasting it

[20:59] <[Coke]> AlexDaniel: everyone involved in rt.perl.org is a volunteer. we should be working with them, not against them.

[20:59] <[Coke]> I'm going to mention the link to the admins, in case they are not aware.

[21:00] <AlexDaniel> /o\

[21:00] <AlexDaniel> I mean, feel free to mention it, sure. But why are you pretending that there is an issue with that link when there is actually none at the moment

[21:02] *** seatek joined
[21:02] <AlexDaniel> one good thing we can do is ask moritz to delete the mentions of /m/ link

[21:02] <viki> AlexDaniel, nice going, lol :)

[21:03] <viki> I should've kept that link my private secret :)

[21:03] <AlexDaniel> XD

[21:03] <mst> AlexDaniel: ... *dude*

[21:03] <AlexDaniel> what?

[21:03] <mst> publishing a URL that will help spammers circumvent a security measure is *not* constructive

[21:04] <viki> [Coke], ask them what sort of help is needed to restore the create ticket button. I can write code

[21:04] <AlexDaniel> spammers can just spam the email address

[21:04] <AlexDaniel> which is what they do constantly

[21:05] <mst> yeah, which has a filtering system at the *email* level

[21:05] <AlexDaniel> so what is the actual problem with the button? Where are the details?

[21:05] <[Coke]> mst was, as I recall, working on a potential solution with the admins. doing an end run around them doesn't make us look good.

[21:05] <AlexDaniel> don't you have to create an account to use that button?

[21:06] <[Coke]> AlexDaniel: the original button was abused to create a spam storm on teh p5 queue, and was disabled.

[21:06] <mst> AlexDaniel emailed them. I've completely failed to chase it up yet. but I do have a plan when I remember.

[21:06] <mst> AlexDaniel: the problem is that the anti-spam measures are implemented in the mail submission system. which create ticket doesn't go via. hence 'circumvent'.

[21:08] *** obfusk_ left
[21:08] <AlexDaniel> and there are no anti-spam measures for creating an account?

[21:09] <timotimo> dogbert17: i think the bug you recently posted about the wrong kind of free was the thing we (you? someone?) just fixed

[21:09] <AlexDaniel> was it a manual attack or we just got unlucky?

[21:10] <viki> Clearly someone from this channel needs to join the RT admin group :)

[21:10] * geekosaur saw that but also saw it had been in holding for 6 hours before being remailed so figured it got addressed before anyone else saw it

[21:10] <mst> I don't know exactly what happened

[21:11] <mst> if you could remind me to follow it up (harass, even, I'm ok with this when I'm failing to get to something) instead of making it into a bigger trainwreck maybe we'd find out :)

[21:11] <AlexDaniel> .in 2d harass mst

[21:11] <yoleaux> AlexDaniel: I'll remind you on 30 Nov 2016 21:11Z

[21:11] <dogbert17> timotimo: yes, I actually managed to run 'make spectest' with FSA_SIZE_DEBUG = 1 having applied the fix

[21:11] * thowe waves to mst

[21:11] <AlexDaniel> .in 4d harass mst

[21:11] <yoleaux> AlexDaniel: I'll remind you on 2 Dec 2016 21:11Z

[21:12] <AlexDaniel> .in 6d harass mst

[21:12] <yoleaux> AlexDaniel: I'll remind you on 4 Dec 2016 21:12Z

[21:12] <AlexDaniel> .in 8d harass mst

[21:12] <yoleaux> AlexDaniel: I'll remind you on 6 Dec 2016 21:12Z

[21:12] <viki> :/

[21:12] <mst> that's totally reasonable.

[21:12] <viki> \o/

[21:12] <mst> notice he's set the bot to spam -him- so if I get to it sooner he gets spammed and not me

[21:13] <viki> :D

[21:13] <AlexDaniel> that's ok

[21:13] <mst> AlexDaniel++ # most people don't take me seriously when I say I'm ok with being harassed when I keep forgetting something like this. your response was actually less hassle for me.

[21:19] *** mj41 left
[21:23] *** Vynce left
[21:28] *** kyclark left
[21:28] *** FROGGS joined
[21:34] *** bjz_ left
[21:42] *** cdg joined
[21:50] *** labster left
[21:54] *** labster joined
[22:00] *** RabidGravy left
[22:01] <seatek> weird - i've got an error message: method 'blah' must be implemented by My::Role because it is required by a role. But My::Role is the role defining that abstract requirement (and itself does no other role nor inherits)

[22:01] <[Coke]> seatek: code?

[22:04] <seatek> i don't think it will be of much use -- it's a role that wasn't changed that just started showing that error after i've been modifying in class in the same file (which does that role)

[22:05] <viki> You're punning the role?

[22:06] <viki> m: role Foo { method meows { … } }.new

[22:06] <camelia> rakudo-moar 054aca: OUTPUT«Method 'meows' must be implemented by Foo because it is required by a role␤  in any compose_method_table at gen/moar/Metamodel.nqp line 2824␤  in any apply at gen/moar/Metamodel.nqp line 2834␤  in any compose at gen/moar/Metamodel.nqp line 3006␤  i…»

[22:06] *** pecastro left
[22:06] <seatek> the role defined 4 normal attributes, and defined 4 abstract method requirements

[22:06] <seatek> but it's saying that it must implement those method requirements now itself

[22:06] <viki> I don't believe you

[22:06] <viki>  Prove it :)

[22:06] <seatek> hehee :)

[22:07] <seatek> that will not be easy - i'll try to think of a way

[22:08] <[Coke]> ... you could show the code. :)

[22:09] *** bjz joined
[22:09] *** FROGGS left
[22:10] <seatek> https://gist.github.com/adaptiveoptics/6c58095c5dd99d725487989c282f9214

[22:11] <seatek> Error while compiling

[22:11] <seatek> Method 'connect' must be implemented by HG::Antenna because it is required by a role

[22:11] <seatek> and the line is that role def line

[22:12] *** skids left
[22:13] <AlexDaniel> e: https://gist.githubusercontent.com/adaptiveoptics/6c58095c5dd99d725487989c282f9214/raw/daf11ee844a4e6acc3fa11f13818c2f0c71ed405/role%2520problem

[22:13] <AlexDaniel> eval: https://gist.githubusercontent.com/adaptiveoptics/6c58095c5dd99d725487989c282f9214/raw/daf11ee844a4e6acc3fa11f13818c2f0c71ed405/role%2520problem

[22:13] <evalable6> AlexDaniel, Successfully fetched the code from the provided URL.

[22:13] <evalable6> AlexDaniel, rakudo-moar 4dffef7: OUTPUT«(exit code 1) ===SORRY!===␤Type 'HG::Antenna::Receiver' is not declared␤at /tmp/iaOC2LObeb:3␤-…»

[22:13] <evalable6> AlexDaniel, Full output: https://gist.github.com/a5438c84dcb1016c739754f7c5e43df6

[22:13] <AlexDaniel> ah, right

[22:14] *** andrzejku_ left
[22:14] * AlexDaniel cannot read even a single line before actually running the code

[22:16] <AlexDaniel> eval: https://gist.githubusercontent.com/AlexDaniel/55b9ae792767585c838418d201f3aa27/raw/5f4f531777489440979ce860435976bd66084e6d/gistfile1.txt

[22:16] <evalable6> AlexDaniel, Successfully fetched the code from the provided URL.

[22:16] <evalable6> AlexDaniel, rakudo-moar 4dffef7: OUTPUT«»

[22:17] <AlexDaniel> seatek: so what is required to reproduce it?

[22:17] <perlpilot> seatek: smells like an accidental pun to me.

[22:17] *** rindolf left
[22:17] <seatek> what is a pun?

[22:17] <viki> seatek: a role used as a class

[22:17] <seatek> ah .. yeah, none of that :)

[22:17] <viki> (which is legal and is called punning)

[22:18] <seatek> just classes that does that role ;)

[22:18] <perlpilot> seatek: show *all* the code :-)

[22:18] <seatek> it's about 4,000 lines now

[22:19] <AlexDaniel> that's better than 15 lines that don't reproduce the issue

[22:19] *** pierre_ joined
[22:20] <viki> seatek: maybe you wrote `is` instead of `does` at some place

[22:20] *** kyclark joined
[22:20] <viki> m: role Foo { method connect { ... } }; class Bar is Foo {}

[22:20] <perlpilot> yeah, that's easy enough to do

[22:20] <camelia> rakudo-moar 054aca: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Method 'connect' must be implemented by Foo because it is required by a role␤at <tmp>:1␤»

[22:20] <seatek> i'll try to determine what's causing it and will let you know. it's just been a couple method additions in classes in that file that do that role

[22:20] <seatek> i'll double check

[22:21] *** pecastro joined
[22:21] <viki> m: role Foo { COMPOSE { BEGIN say callframe(0).file }; method connect { ... } }; class Bar is Foo {}

[22:21] <camelia> rakudo-moar 054aca: OUTPUT«<tmp>␤5===SORRY!5=== Error while compiling <tmp>␤Method 'connect' must be implemented by Foo because it is required by a role␤at <tmp>:1␤»

[22:21] <viki> Maybe see if that ^ incantation gives you the file with the issue? (maybe it won't)

[22:21] *** bjz left
[22:21] <viki> there's also .line method that gives the line number

[22:22] <viki> (that probably gives some bogus file tho :P)

[22:24] <seatek> yeah no mistaken is instead of does -- though one class IS a class of another class that DOES... ;) thought that might be it, commented it out, but it wasn't

[22:24] <seatek> sometimes i really hate oop

[22:24] <perlpilot> seatek: I bet if you show the actual code someone here could find the problem

[22:25] *** pierre_ left
[22:25] *** zilti left
[22:27] <AlexDaniel> for sure

[22:28] <seatek> figured it out. sortof

[22:28] <seatek> it's those damn multi-line comments that i love

[22:28] <seatek> they screw up sometimes

[22:29] <viki> Oh, and I thought of my plan for the RT#130207 while on the bus: add a script that generates those download pages which will be just a purtier version of the current page and the top it'll list the "latest" links in more obvious way. So we get prettier pages and no need to update any links after release

[22:29] <AlexDaniel> seatek: are you sure that there is nothing we can do in this case?

[22:29] <AlexDaniel> seatek: e.g. perhaps some kind of a warning could be issued or something?

[22:29] <seatek> multiline comments were somehow "hiding" an error about a stupid variable not having a my declared on it

[22:29] <viki> seatek: get an editor that supports commenting. Select &_Ctrl+D in atom does all the commenting for me

[22:29] <seatek> totally unrelated to the role

[22:29] <viki> (I forget what the default shortcut is tho)

[22:30] <seatek> no, the syntax was right -- i checked and double checked

[22:30] <viki> Ah

[22:30] <seatek> and teh syntax highlighting shows me too

[22:30] <TimToady> .oO(We must...be...protocoligorically correct.)

[22:33] <seatek> i'm going to "undo" back to the comments being there so i can try to find anything tha tmight stand out

[22:35] <seatek> nothing wrong with the commenting. checked and checked.  all bounded by #|{ }

[22:37] <lizmat> and another Perl6 Weekly hits the net: https://p6weekly.wordpress.com/2016/11/28/2016-48-kickstarting-along/

[22:37] <seatek> here is the comment that causes the problem. if i remove it, then i'm not told i must implement connect() in that role: https://gist.github.com/adaptiveoptics/6c58095c5dd99d725487989c282f9214

[22:38] <seatek> crazy!

[22:38] <seatek> but i've seen other weirdness with multiline comments

[22:43] <seatek> you can verify this even by using just that code in the file (if you remove the class types so that it doesn't error)

[22:43] <seatek> i just tried it

[22:43] <seatek> it's some kind of magic combination that results in lies and death

[22:44] <TimToady> does it still error if you change #|{} to #'{} ?

[22:44] <TimToady> er, #`{}

[22:44] <TimToady> if not, it's somethign to do with attaching semantic comments

[22:45] *** alimon1 left
[22:45] <TimToady> maybe the semantic comment attacher is accidentally punning?

[22:45] *** alimon1 joined
[22:46] <seatek> with that i get "unable to parse role definition

[22:46] <seatek> expecting any of generic role

[22:47] <seatek> oh wait

[22:47] <seatek> no that works! :)

[22:47] *** Actualeyes joined
[22:47] <TimToady> are you wanting semantic comments, or just using #|{} by accident?

[22:47] *** alimon1 left
[22:48] <seatek> using #`{ } makes it work

[22:48] <seatek> i like using #|{} because it creates docs

[22:48] <TimToady> right, and it probably should work, but maybe it's not generic-proof yet

[22:49] <seatek> if #`{} is safer, i'll take that over auto-generated docs any day

[22:49] *** erblite joined
[22:50] *** _28_ria left
[22:51] *** chinarulezzz joined
[22:51] *** _28_ria joined
[22:53] *** firstdayonthejob left
[22:53] <TimToady> m: #|{ a Fooish thingy }; role Fooish { method fooey {...} }

[22:53] <camelia> rakudo-moar 054aca: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Method 'fooey' must be implemented by Fooish because it is required by a role␤at <tmp>:1␤»

[22:53] <TimToady> m: #`{ a Fooish thingy }; role Fooish { method fooey {...} }

[22:53] <camelia> rakudo-moar 054aca: ( no output )

[22:53] <TimToady> yeah, it's role punning somehow by accident, seems

[22:53] <viki> "o

[22:53] <viki> :o

[22:54] <seatek> i step on all the landmines always

[22:57] <seatek> i love that people were thinking punning from the get-go. they were right, but it just wasn't me doing it

[22:57] <seatek> well, not directly

[22:58] *** vendethiel left
[22:58] <seatek> is punning a real thing? or is it like golfing? well, i guess golfing is a real thing now... ? 

[22:58] <viki> lizmat++ good weekly

[22:59] <viki> Yes, it's a real thing.

[22:59] *** trnh joined
[22:59] *** trnh left
[22:59] *** trnh joined
[22:59] <lizmat> m: role A {}; dd A.new   # punning

[22:59] <camelia> rakudo-moar 054aca: OUTPUT«A.new␤»

[23:00] <TimToady> m: role Fooish { method fooey {...} }.WHY.say

[23:00] <camelia> rakudo-moar 054aca: OUTPUT«Method 'fooey' must be implemented by Fooish because it is required by a role␤  in any compose_method_table at gen/moar/Metamodel.nqp line 2824␤  in any apply at gen/moar/Metamodel.nqp line 2834␤  in any compose at gen/moar/Metamodel.nqp line 3006␤…»

[23:00] <viki> ohhh

[23:00] <seatek> k :)

[23:00] <viki> ohhhh

[23:00] <TimToady> m: role Fooish #={a Fooish thingy}␤  { method fooey {...} }

[23:01] <camelia> rakudo-moar 054aca: ( no output )

[23:01] <viki> I even have a good guess of what's 'causing it

[23:01] <viki> I merged a commit that made the pod parser care about .WHY

[23:01] <viki> recently

[23:01] <viki> bisect: role Fooish { method fooey {...} }.WHY.say 

[23:01] <bisectable6> viki, Bisecting by output (old=2015.12 new=5163e8a) because on both starting points the exit code is 1

[23:01] <bisectable6> viki, bisect log: https://gist.github.com/88d4ed08a3a0085a6c70c096a3ab46de

[23:01] <bisectable6> viki, (2016-03-02) https://github.com/rakudo/rakudo/commit/fdd37a9e0bef16eb3e4bb24ddd59247e379b5038

[23:01] <viki> oh, I guess it ain't it :)

[23:02] <TimToady> bisect: #|{ a Fooish thingy }; role Fooish { method fooey {...} }

[23:02] <bisectable6> TimToady, On both starting points (old=2015.12 new=5163e8a) the exit code is 1 and the output is identical as well

[23:02] <bisectable6> TimToady, Output on both points: ===SORRY!=== Error while compiling /tmp/ZxO1QFG55c␤Method 'fooey' must be implemented by Fooish because it is required by a role␤at /tmp/ZxO1QFG55c:1

[23:04] *** trnh left
[23:05] *** trnh joined
[23:05] *** trnh left
[23:05] *** trnh joined
[23:07] *** lolo78 left
[23:12] *** erblite left
[23:12] <viki> seatek: don't forget to report that bug, please :)

[23:13] *** lolo78 joined
[23:14] <seatek> that's via email to something, yeah? i've never created a bug here. the whole thought of it make me feel guilty.

[23:14] <viki> yeah, just email to [email@hidden.address] don't worry about feeling guilty... Tell 'em I sent you ;)

[23:14] <viki> And you can include the link to the chat: https://irclog.perlgeek.de/perl6/2016-11-28#i_13644451

[23:15] <seatek> k

[23:16] *** labster left
[23:19] *** lolo78_ joined
[23:19] *** lolo78 left
[23:19] *** eisen74 left
[23:19] *** lolo78_ is now known as lolo78

[23:20] <seatek> viki: done

[23:20] <viki> seatek++ thanks a lot

[23:20] <TimToady> seatek++

[23:32] <jeek> (SETEC Astronomy)++

[23:33] *** pmurias left
[23:37] *** labster joined
[23:52] *** lolo78 left
[23:57] <mspo> does moar/rakudo compile everything to NQP as a first step?

[23:58] <TimToady> no, there is no intermediate language, just trees

[23:59] <seatek> what's really surprised me as i've been going along is just how handy multi methods can be. they've saved me a lot of time, not having to re-write stuff, and helps keep the code tidy. never thought i'd have a use for them.

[23:59] *** lukaramu left
