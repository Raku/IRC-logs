[00:00] <timeless> are they important enough to be in the glossary, or totally hidden?

[00:00] <timeless> (iffy)

[00:00] *** cpage_ left
[00:01] *** cpage_ joined
[00:01] *** cpage_ left
[00:04] <AlexDaniel> m: my $x, my $y Z:= 1,2; say $x; say $y

[00:04] <camelia> rakudo-moar 60731a: OUTPUT«5===SORRY!5=== Error while compiling /tmp/lk3qhBBjGq␤Cannot zip with := because list assignment operators are too fiddly␤at /tmp/lk3qhBBjGq:1␤------> 3my $x, my $y Z:=7⏏5 1,2; say $x; say $y␤»

[00:04] <AlexDaniel> timeless: ↑ these are sometimes present in the error messages

[00:04] <AlexDaniel> timeless: so yes, are important enough

[00:05] *** araujo left
[00:05] *** xinming left
[00:06] <[Coke]> .

[00:06] <AlexDaniel> ,

[00:08] *** BenGoldberg joined
[00:08] *** araujo joined
[00:10] *** araujo left
[00:11] *** araujo joined
[00:18] <timeless> AlexDaniel: ok, i've sent a pr for glossary bits

[00:18] <timeless> no guarantees, i may have messed everything up, but... it's probably an improvement

[00:24] <AlexDaniel> timeless: in your opinion, what's the current state of S99?

[00:24] *** cpage_ joined
[00:25] <AlexDaniel> timeless: should we just redirect everything to http://doc.perl6.org/language/glossary ?

[00:25] <timeless> i think once my bits are merged you can

[00:26] <timeless> you probably want to run one more set of eyes side-by-side before you do

[00:26] <timeless> but i think i got all the things that were meaningfully different

[00:34] <dalek> doc: 38982ff | (Josh Soref)++ | doc/Language/glossary.pod:

[00:34] <dalek> doc: add NYI to glossary

[00:34] <dalek> doc: review: https://github.com/perl6/doc/commit/38982ff4d2

[00:34] <dalek> doc: de48add | (Josh Soref)++ | doc/Language/glossary.pod:

[00:34] <dalek> doc: define Enum in glossary

[00:34] <dalek> doc: review: https://github.com/perl6/doc/commit/de48add2ad

[00:34] <dalek> doc: add6048 | (Josh Soref)++ | doc/Language/glossary.pod:

[00:34] *** dalek left
[00:34] <AlexDaniel> timeless: ta-daaa!

[00:34] *** dalek joined
[00:34] *** ChanServ sets mode: +v dalek

[00:35] <AlexDaniel> timeless: I've also just opened this: https://github.com/perl6/doc/issues/570

[00:37] *** rurban1 left
[00:39] <AlexDaniel> timeless: also this https://github.com/perl6/doc/issues/571

[00:40] <timeless> erm, yeah

[01:06] *** kalkin- joined
[01:10] *** kalkin-_ left
[01:17] <dj_goku> timeless: are you working on the whole bunch of broken links issue number 561 https://github.com/perl6/doc/issues/561 ?

[01:20] <timeless> dj_goku: not instantly

[01:20] <timeless> if you want to do something, you can, i might in a bit

[01:20] <timeless> first i need to fix something elsewhere

[01:21] <dj_goku> ahh cool.

[01:24] *** Actualeyes joined
[01:36] *** AlexDaniel left
[01:43] *** kid51 left
[01:48] *** FROGGS_ joined
[01:51] *** FROGGS left
[01:58] *** araujo_ joined
[01:59] *** araujo left
[02:00] *** araujo_ left
[02:00] *** araujo_ joined
[02:02] *** araujo_ left
[02:08] *** araujo_ joined
[02:13] *** araujo_ left
[02:15] *** araujo joined
[02:22] *** mr-foobar left
[02:23] *** mr-foobar joined
[02:30] *** cdg joined
[02:35] *** noganex_ joined
[02:38] *** noganex left
[02:48] * timeless tries to remember how to use some perl tools

[02:50] *** araujo left
[02:50] *** yqt left
[02:50] *** araujo joined
[02:52] <timeless> can cpan get stuck in a loop?

[02:54] *** huggable left
[02:54] *** huggable joined
[02:59] *** grondilu left
[03:08] <BenGoldberg> It has recursion detection, so no.

[03:08] <yoleaux> 7 Jun 2016 18:18 EDT <hoelzro> BenGoldberg: that's not a bad idea, but if .resume worked on that exception (which I don't know if it does), it would probably just resume parsing the current chunk of code

[03:08] <yoleaux> 7 Jun 2016 18:18 EDT <hoelzro> BenGoldberg: sadly, the exception handling for that probably isn't smart enough (yet) to ask the caller to feed the parser more input

[03:10] <BenGoldberg> timeless, But, wouldn't that question be better on #perl? :)

[03:10] <timeless> BenGoldberg: i'm only using perl because i'm trying to help perl6 :)

[03:11] * BenGoldberg wonders if perl 5 is a dependency for perl 6.

[03:15] <parabolize> rakudobrew is perl5

[03:15] <parabolize> strange perl5 at that

[03:20] <timeless> dj_goku: anyway, i'm now running linkchecker

[03:26] *** araujo left
[03:26] *** araujo joined
[03:27] *** mohae left
[03:32] *** araujo left
[03:35] *** araujo joined
[03:36] <BenGoldberg> m: (loop { True }).perl.say

[03:36] <camelia> rakudo-moar 60731a: OUTPUT«(timeout)»

[03:36] <BenGoldberg> m: (loop { True }).WHAT.say

[03:36] <camelia> rakudo-moar 60731a: OUTPUT«(Seq)␤»

[03:40] *** mohae joined
[03:41] <dj_goku> timeless: cool, does that crawl all the html making sure it works?

[03:41] <timeless> seems to, slowly.

[03:42] <timeless> https://www.irccloud.com/pastebin/bj4O0gdP/

[03:43] <timeless> https://www.irccloud.com/pastebin/f03rwveG/

[03:50] <dj_goku> cool

[03:52] <timeless> dj_goku: so, here's a good one

[03:52] <timeless> doc/Language/operators.pod

[03:52] <timeless> L<#prefix ...> etc. stub operators.

[03:52] <timeless> =head2 infix C«...»

[03:52] <timeless> =head2 listop C«...»

[03:52] <timeless> there's no prefix thing...

[03:54] * timeless doesn't know what's correct

[03:56] *** inokenty left
[04:01] <TimToady> building rakudo has Perl 5 dependencies

[04:01] <TimToady> running it does not, unless you need Inline::Perl5

[04:02] *** cdg left
[04:02] *** _4d47 left
[04:03] <dj_goku> timeless: there needs to be two links

[04:03] <dj_goku> timeless: I was looking at the one specifically too.

[04:05] <dj_goku> timeless: you see prefix/postfix for --? it links to a landing page: http://doc.perl6.org/routine/--

[04:05] <dj_goku> it looks like a few of those just need those landing pages.

[04:08] <timeless> https://www.irccloud.com/pastebin/NfFlVyUz/

[04:09] <timeless> https://www.irccloud.com/pastebin/YxLpqlqk/

[04:10] <timeless> i'm not actually sure how to read this report...

[04:11] <timeless> ok, i think this is how to read it https://www.irccloud.com/pastebin/BpNWeEi4/

[04:15] <timeless> oh, wow

[04:15] *** cpage_ left
[04:16] <timeless> here's my pod checker https://www.irccloud.com/pastebin/FhpPEmTp/

[04:17] *** cpage_ joined
[04:17] <timeless> hrm, no, my thing is broken

[04:17] <timeless> ok, this is better https://www.irccloud.com/pastebin/3MG7OrQ0/

[04:18] <timeless> ok, that looks correct

[04:18] <timeless> doc/doc/Type/CurrentThreadScheduler.pod is really missing `method cue`

[04:18] *** Cabanossi left
[04:20] <timeless> so, what's the correct form?

[04:20] <timeless> that L<Scheduler#method cue> blocks until the code has finished executing.

[04:20] <timeless> that L<../Scheduler#method cue> blocks until the code has finished executing.

[04:20] *** xinming joined
[04:20] *** mr-foobar left
[04:21] *** Cabanossi joined
[04:26] *** skids left
[04:35] <timeless> dj_goku: so, what's the operator precedence for `prefix ...` ?

[04:41] *** inokenty joined
[04:43] <dj_goku> timeless: does that matter? with the docs?

[04:43] <timeless> if i understand this thing, it influences where in the file i put it

[04:44] <dj_goku> I haven't looked to far, I am just trying to get up to speed to try and help. :D

[04:44] <timeless> that'd help me

[04:44] <timeless> i can send a pr for some other bits

[04:45] <dj_goku> plus I am trying to figure out weechat so. :)

[04:47] *** d^_^b joined
[04:49] *** dj_goku is now known as dj_goku_

[04:52] *** sammers_ joined
[04:55] *** sammers left
[05:03] *** khw left
[05:07] *** gnull left
[05:08] *** sno left
[05:24] *** parisba left
[05:25] *** Actualeyes left
[05:26] *** pnu_ joined
[05:26] *** jnap_ joined
[05:29] *** SmokeMachine____ joined
[05:29] *** M-matthew left
[05:31] *** Spot__ joined
[05:31] *** avenj joined
[05:31] *** Lucas_One_ joined
[05:32] *** olinkl joined
[05:33] *** kipd joined
[05:34] *** BuildTheRobots joined
[05:34] *** M-matthew joined
[05:35] *** ggherdov joined
[05:36] *** notbenh_ joined
[05:36] *** chansen_ joined
[05:36] *** rurban joined
[05:37] *** parisba joined
[05:37] *** ssotka left
[05:43] *** Actualeyes joined
[05:45] *** ufobat joined
[05:50] *** FROGGS_ left
[05:51] *** rindolf joined
[05:55] <ufobat> morning :D

[05:56] *** cpage_ left
[05:57] *** cpage_ joined
[05:58] *** mohae left
[06:01] *** ssotka joined
[06:02] *** firstdayonthejob joined
[06:07] *** notbenh_ left
[06:08] *** parisba left
[06:08] *** parisba joined
[06:08] *** notbenh_ joined
[06:15] *** sno joined
[06:17] *** BenGoldberg left
[06:25] *** firstdayonthejob left
[06:29] *** rurban_ joined
[06:34] <masak> morning!

[06:36] *** araujo_ joined
[06:39] <moritz> \o!

[06:40] *** araujo left
[06:41] <timeless> masak: i sent some pr's...

[06:44] <timeless> do any of the bots here let me ask for perldoc?

[06:48] <timeless> m: use Pod::Perldoc; @ARGV="pod"; Pod::Perldoc->run()

[06:48] <camelia> rakudo-moar 60731a: OUTPUT«===SORRY!===␤Could not find Pod::Perldoc at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::…»

[06:48] <timeless> :-(

[06:52] <timeless> http://doc.perl6.org/type/Pod::Item

[06:52] <timeless> Pod::Item inherits from class Pod::Block, which provides the following methods:

[06:53] <timeless> mst: could you change the pod generator to not escape `:`s in links?

[06:53] <timeless>  Pod::Block links to http://doc.perl6.org/type/Pod%3A%3ABlock

[06:53] <timeless> which is ugly, and unnecessary

[06:54] <timeless> (well, as long as the beginning is properly written)

[06:54] *** huggable left
[06:54] *** huggable joined
[06:56] <moritz> timeless: you can change it yourself

[06:56] <timeless> htmlify.p6?

[06:56] <moritz> yes

[06:56] <moritz> though it's quite dangerous to change the escaping

[06:57] *** rurban left
[06:57] <moritz> you should run a link checker before and afterwards to make sure you didn't accidentally break anything

[06:57] *** rurban joined
[06:57] * timeless would have to get a perl6 engine

[06:57] * timeless doesn't have any

[06:57] <timeless> can i ask cpan(perl5) for perl6? :)

[06:58] <moritz> use https://github.com/tadzik/rakudobrew

[06:58] <moritz> you can ask a lot :-)

[06:59] *** Xliff left
[07:01] *** Actualeyes left
[07:01] *** rurban left
[07:01] *** rurban joined
[07:02] <timeless> wow, no obvious spelling errors there :o

[07:03] *** zakharyas joined
[07:04] *** darutoko joined
[07:05] *** rurban1 joined
[07:05] *** rurban left
[07:06] <timeless> m: use URI::Escape; uri_escape("Pod::Block")

[07:06] <camelia> rakudo-moar 60731a: OUTPUT«===SORRY!===␤Could not find URI::Escape at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::R…»

[07:07] * timeless frowns

[07:07] <moritz> star-m: use URI::Escape; say uri_escape("Pod::Block")

[07:07] <camelia> star-m 2016.01: OUTPUT«Pod%3A%3ABlock␤»

[07:07] <timeless> what's the `star` thing do?

[07:07] <moritz> huh, I guess a more up-to-date star wouldn't hurt

[07:07] <timeless> star-m: use URI::Escape; uri_escape("Pod::Block")

[07:07] <camelia> star-m 2016.01: ( no output )

[07:07] <moritz> timeless: Rakudo Star is a distribution containing the Rakudo compiler, some modules, some docs

[07:07] <moritz> and panda

[07:08] *** _mg_ joined
[07:08] <timeless> star-m: use URI::Escape; sub href_escape($ref) {return uri_escape($ref).subst('%3A%3A', '::', :g);} say href_escape("Pod::Block")

[07:08] <camelia> star-m 2016.01: OUTPUT«5===SORRY!5=== Error while compiling /tmp/xk8VTaJjjP␤Strange text after block (missing semicolon or comma?)␤at /tmp/xk8VTaJjjP:1␤------> 3escape($ref).subst('%3A%3A', '::', :g);}7⏏5 say href_escape("Pod::Block")␤    expecting any of:␤      …»

[07:08] <timeless> star-m: use URI::Escape; sub href_escape($ref) {return uri_escape($ref).subst('%3A%3A', '::', :g);}; say href_escape("Pod::Block")

[07:08] <camelia> star-m 2016.01: OUTPUT«Pod::Block␤»

[07:12] <timeless> moritz: https://github.com/perl6/doc/pull/573 wanna try it?

[07:13] *** ssotka left
[07:13] *** rurban joined
[07:13] * timeless wonders if this output from rakudobrew is ok https://www.irccloud.com/pastebin/ja99RQ5f/

[07:14] *** rurban1 left
[07:16] <moritz> timeless: no, I don't wanna try it. I want you to try it.

[07:16] * timeless is trying to get rakudobrew to brew...

[07:17] <timeless> is the idea of rakudobrew that it should get everything it needs, or does it expect a fully working everything?

[07:18] <moritz> timeless: what's your perl 5 version?

[07:18] <timeless> This is perl 5, version 18, subversion 4 (v5.18.4) built for ppc64le-linux-thread-multi

[07:18] <moritz> timeless: then your perl 5 installation is broken

[07:19] <moritz> timeless: Perl::OSType is a core module starting from perl v5.13.9, so it should be available

[07:19] <moritz> are you using some Redhat (or derivative) that ships a Perl without its core modules?

[07:19] <timeless> Description:    Fedora release 21 (Twenty One)

[07:19] <timeless> and `using` is correct, it's not my box

[07:20] <timeless> Linux gcc2-power8.osuosl.org 3.17.4-301.fc21.ppc64le #1 SMP Mon Dec 1 07:51:01 UTC 2014 ppc64le ppc64le ppc64le GNU/Linux

[07:20] * moritz sighs

[07:20] <moritz> Redhat, breaking perl since at least 2003

[07:20] * timeless was using redhat in '98

[07:21] <timeless> although, tbh, i don't recall that being something that was broken

[07:21] * timeless had more problems w/ nic drivers

[07:23] *** Actualeyes joined
[07:26] * timeless gets a perl6

[07:29] * timeless fails to get a panda https://www.irccloud.com/pastebin/iDwElRS4/

[07:36] <timeless> so, i /think/ that's panda trying to use /usr/bin/prove (perl5)

[07:39] *** wamba joined
[07:47] *** araujo__ joined
[07:49] *** araujo__ left
[07:50] *** araujo__ joined
[07:51] *** Actualeyes left
[07:51] *** araujo__ left
[07:51] *** araujo_ left
[07:52] *** RabidGravy joined
[07:52] *** araujo__ joined
[07:55] *** rurban left
[07:55] *** rurban joined
[07:59] *** rurban1 joined
[08:03] *** rurban left
[08:04] *** dakkar joined
[08:05] *** Zero_Dogg left
[08:05] *** Zero_Dogg joined
[08:05] *** Zero_Dogg left
[08:05] *** Zero_Dogg joined
[08:10] *** Actualeyes joined
[08:13] *** bjz_ joined
[08:15] *** bjz left
[08:33] <Hotkeys> why doesn't p6 play nice with unicode anymore on windows

[08:33] <Hotkeys> in the repl anyway

[08:34] *** grassass joined
[08:39] *** g4 joined
[08:55] *** ocbtec joined
[08:55] *** ocbtec left
[08:57] *** araujo__ left
[09:02] <masak> Hotkeys: could you be more specific?

[09:03] *** araujo joined
[09:03] *** araujo left
[09:09] <masak> in Perl 6, what's an idiomatic way to ask for all the declared classes/roles provided by a `use`d module?

[09:11] <moritz> you mean besides looking at the docs? :-)

[09:11] <masak> yes, I mean in code

[09:11] <masak> my question is triggered by this comment: https://github.com/masak/007/commit/31b531946cc513476cbb9c8d966a08be35c6767c#commitcomment-17801202

[09:11] <masak> in fact, "by a `use`d module" is not essential

[09:12] <moritz> by the time you use'd a module, it's GLOBAL:: is already merged, I don't know if it's still available somehow

[09:12] *** rurban1 left
[09:12] <masak> main thing is to have some way from within the code itself to (say) find all the roles and classes with a name like Q::*

[09:12] *** rurban joined
[09:13] <moritz> m: say X::.keys

[09:13] <camelia> rakudo-moar d292d7: OUTPUT«(Method NoSuchSymbol NotEnoughDimensions OS InvalidType Pairup NYI PseudoPackage EXPORTHOW IO Set Package Declaration Inheritance Redeclaration StubCode UnitScope PoisonedAlias Placeholder IllegalOnFixedDimensionArray Temporal Proc InvalidTypeSmiley Numeri…»

[09:13] <masak> hmm :)

[09:13] * masak tries this

[09:13] <moritz> note that it only gives you one level at first

[09:13] <masak> nodnod

[09:13] <moritz> m: say X::Proc::.keys

[09:13] <camelia> rakudo-moar d292d7: OUTPUT«(Async Unsuccessful)␤»

[09:13] <masak> so I need to tree-walk, no biggie

[09:14] <masak> yay, that works

[09:14] <moritz> .oO( let's do the tree-walk again)

[09:15] *** grassass left
[09:16] *** wamba left
[09:17] *** wamba joined
[09:18] *** ocbtec joined
[09:26] *** mr-foobar joined
[09:27] *** rurban1 joined
[09:28] *** rurban left
[09:29] <Hotkeys> masak I'm in bed now, but basically it deletes Unicode chars or turns them into "?" (not a weird representation, a literal "?")

[09:30] *** raiph left
[09:30] *** sherwool left
[09:31] *** cpage_ left
[09:31] *** rurban joined
[09:31] <Hotkeys> This is with powershell

[09:31] <Hotkeys> But powershell parses the chars fine outside the p6 repl

[09:31] *** rurban1 left
[09:34] <nine> masak: note that this only works if the module is nice and sticks to it's namespace. It also doesn't include modules use'd by the module which may or may not be an advantage for you.

[09:37] <masak> all that works to my advantage

[09:38] <masak> the test and the module are all in the same code base

[09:38] <masak> but yeah, good points

[09:40] <nine> masak: a more complete solution would be $*REPO.need(CompUnit::DependencySpecification.new(:short-name('Q'))).handle.globalish-package.WHO.keys

[09:40] <nine> m: $*REPO.need(CompUnit::DependencySpecification.new(:short-name("Test"))).handle.globalish-package.WHO.keys.say

[09:40] <camelia> rakudo-moar d292d7: OUTPUT«(Test)␤»

[09:40] <masak> nine: I don't quite grok that, but looks neat

[09:42] <nine> masak: "use Test;" is pretty much BEGIN GLOBAL.WHO.merge-symbols($*REPO.need(CompUnit::DependencySpecification.new(:short-name("Test"))).handle.globalish-package.WHO);

[09:43] *** araujo joined
[09:44] *** labster left
[09:44] *** labster1 joined
[09:54] <moritz> plus a bit of importing

[10:03] <gregf_> https://gist.github.com/anonymous/af60e979bfa4df3a33b1ed99e84f6b68 # coded something in perl6 ;)

[10:10] *** rurban left
[10:10] *** rurban joined
[10:15] *** donaldh joined
[10:17] *** TEttinger left
[10:21] *** rurban_ left
[10:27] *** TEttinger joined
[10:29] *** rurban left
[10:29] *** cpage_ joined
[10:29] *** rurban joined
[10:32] *** rurban1 joined
[10:34] *** rurban left
[10:36] *** rurban joined
[10:37] *** Xliff joined
[10:38] *** huggable left
[10:38] *** rurban1 left
[10:38] *** labster1 left
[10:41] *** retupmoca left
[10:42] *** bjz joined
[10:43] *** retupmoca joined
[10:43] *** bjz_ left
[10:49] *** iH2O joined
[10:53] *** TEttinger left
[10:56] *** kid51 joined
[10:59] *** yqt joined
[10:59] *** colomon joined
[11:06] *** aries_liuxueyang joined
[11:06] *** sexy-coder-girl joined
[11:09] <literal> so, it looks like <.ws> can't capture anything, correct? I have <comment> in there that I would like captured in between tokens, how would I do that?

[11:09] <moritz> literal: call <ws>

[11:09] *** rindolf left
[11:10] <moritz> the . in <.ws> instructs it not to capture

[11:10] <literal> I see

[11:10] <literal> works now, thanks

[11:10] <moritz> literal: the other option is bypass the traditional capturing mechanism, and track some comments through a different mechnaism

[11:11] <moritz> token comment { # \N* $$ { self.record_comment($/) } }

[11:11] *** zxd joined
[11:13] *** iH2O left
[11:14] *** rindolf joined
[11:16] *** gnull joined
[11:31] *** mr-foobar left
[11:31] *** mr-foobar joined
[11:35] *** rurban_ joined
[11:36] *** kalkin- left
[11:38] *** mr-foobar left
[11:40] *** mr-foobar joined
[11:44] *** kid51 left
[11:47] *** SHODAN joined
[11:49] *** jack_rabbit left
[11:55] *** rurban left
[12:00] *** SHODAN left
[12:07] *** kalkin- joined
[12:10] <mst> timeless: on RHish OSen, you need perl-core to have a complete perl5 install. they did a split like debian did, except being RH, did it the opposite way around to the way debian does it

[12:10] *** SHODAN joined
[12:10] <mst> timeless: so on RH 'perl' doesn't have half the core modules and you need 'perl-core', on debian 'perl-core' is the stripped down version and 'perl' is an actual perl

[12:10] <mst> timeless: distros \o/

[12:10] <mst> moritz: ^^ eventually you get used to explaining this to people

[12:11] <tadzik> ...'perl-core' is the *super*set of 'perl'

[12:12] <tadzik> do I read that right?

[12:12] <tadzik> #damnitredhat

[12:14] *** donaldh left
[12:15] <masak> tadzik: it's the kind of core that's bigger than the thing it's contained in

[12:15] <masak> hashtag #tardis

[12:17] <moritz> sounds like an IoS device

[12:17] <moritz> where IoS stands for Inversion of Space :-)

[12:18] <tadzik> mst: I recall you putting Rakudo::Star on CPAN, do I remember it wrong or is there some reason why it's not there anymore?

[12:21] *** rurban joined
[12:22] *** yqt left
[12:26] <mst> tadzik: it isn't there anymore because I did it as a proof of concept, and then it turned out because I had pumpking bits in pause and had forgotten to no_index the rakudo sources the release was causing confusion

[12:26] <tadzik> ah, fairy nuff

[12:27] <mst> tadzik: and the *idea* was it would always get updated when star was released, but nobody doing star release management ever tried or ever remembered to remind me

[12:27] <mst> when I realised this had happened four releases in a row and nobody'd noticed, I sort of assumed people didn't care much

[12:27] <mst> also that was parrot era

[12:27] *** SHODAN left
[12:27] <mst> I should get around to reinstating it now

[12:27] <tadzik> it was? Damn, time flies

[12:27] <mst> since I can go onto #perl6-release and bully people until they get used to reminding me or something

[12:30] <tadzik> we could put that step in the release instructions

[12:30] <mst> and eventually I can probably integrate it into the release process

[12:30] <tadzik> "update wikipedia, poke mst to update Rakudo::Star"

[12:31] <masak> was gonna say

[12:31] <masak> step in the release process or it didn't happen

[12:31] <masak> mst: how do you prefer to be contacted on such a thing?

[12:31] <mst> and nobody added one last time, and it didn't

[12:32] <mst> masak: once I've got the thing re-done (remember I need to do a new set of hackery for Moar) I suspect 'kick mst repeatedly on #perl6-release' will work fine

[12:32] <masak> mst: what if you're not online on IRC during the release process -- does the process block at the last step until you can be contacted?

[12:32] <masak> I mean, Wikipedia tends to be there fairly regularly. less reliably so with human meat sacks like us

[12:34] <mst> I would suggest that it doesn't, because I only intend to do it manually a few times anyway, and then I write a script that does it and give the release managers co-maint on the cpan5 namespace

[12:45] *** rurban left
[12:46] <masak> ok, so async poking of mst

[12:46] *** rurban joined
[12:47] *** wamba left
[12:47] <mst> but lemme make it work at all again first ;)

[12:47] *** donaldh joined
[12:49] <tadzik> hmm

[12:50] <tadzik> m: sub MAIN($arg?) { say "OK" }

[12:50] <camelia> rakudo-moar 2095ed: OUTPUT«OK␤»

[12:50] <tadzik> m: sub MAIN($arg? is rw) { say "OK" }

[12:50] <camelia> rakudo-moar 2095ed: OUTPUT«5===SORRY!5=== Error while compiling /tmp/bT55Ys0oFo␤Cannot use 'is rw' on an optional parameter␤at /tmp/bT55Ys0oFo:1␤»

[12:50] <tadzik> *grumble*

[12:50] <masak> I vaguely recall hearing a rationale for that

[12:50] <masak> don't remember if I still grumbled afterwards, though

[12:51] <tadzik> my point being: https://gist.github.com/tadzik/a63294b0cf753af8faf348e812ffe6e3

[12:51] <masak> basically `is rw` means "I should be able to mutate this container"

[12:51] <masak> whereas `?` means "there might not be a thing there at all"

[12:51] <tadzik> I guess that makes it an LTA error message at least

[12:52] * jnthn tries to work out how main could get something that matches `rw`

[12:52] *** yqt joined
[12:53] <tadzik> not that I know exactly what I expected... :)

[12:53] <jnthn> :-)

[12:53] <jnthn> `is copy` makes sense, just means you'd like an assignable $arg

[12:54] <tadzik> right, this is what I was after

[12:54] <tadzik> I mistakenly put 'is rw' in there, and suddenly my invocation failed, I didn't expect 'is rw' to be something that may decide whether the dispatch is valid or ont

[12:55] <jnthn> Your invocation didn't fail, the script didn't even compile?

[12:55] *** sufrostico joined
[12:56] <jnthn> Or did you not have it as optional?

[12:57] <jnthn> Ah yeah, your original in the gist didn't have the ?

[12:57] <jnthn> But yeah, you can dispatch on rw-ness

[12:57] <jnthn> m: multi m($a is rw) { say 'container' }; multi m($a) { say 'value' }; my $x = 42; m($x); m(5)

[12:57] <camelia> rakudo-moar 2095ed: OUTPUT«container␤value␤»

[12:58] *** g4 left
[13:02] *** MilkmanDan joined
[13:02] *** user9 left
[13:04] <stmuk_> is GH slow or is it me?

[13:06] *** domidumont joined
[13:06] <lizmat> status.github.com seems to indicate response times going up

[13:06] *** rurban1 joined
[13:08] *** aries_liuxueyang left
[13:09] *** kaare_ joined
[13:10] *** rurban left
[13:10] *** aries_liuxueyang joined
[13:13] *** rurban joined
[13:17] *** rurban1 left
[13:34] <timeless> mst: so... pretend i'm not root (because i'm not)

[13:34] <timeless> what magic do i need tot get the equivalent of perl-core?

[13:34] <timeless> i probably can just ask cpan to give me a perl5....

[13:34] <mst> timeless: http://p3rl.org/Perl::Build into ~ then

[13:35] *** colomon left
[13:35] <mst> timeless: cpan probably doesn't work properly if you've only got half a perl

[13:35] *** colomon joined
[13:35] <timeless> mst: basically ignore the fact that i have something vaguely resembling perl?

[13:35] <timeless> once i fixed my env so that it found lib::local, cpan worked well enough for me to install and run the w3 link checker

[13:35] <mst> heh, you mean local::lib

[13:36] <timeless> sure.. whatever

[13:36] <mst> hey, I wrote that module, I'm allowed to care about getting the name right :P

[13:36] <timeless> i probably did it between 1 and 4am today

[13:36] <timeless> and i had a few hours sleep before

[13:36] <timeless> ok, well, thanks, it worked -- once i added the env

[13:36] <mst> well, basically, either you can mess around trying to backfill your way to a full perl install

[13:36] <mst> or you can outsource building yourself a standard one to Perl::Build

[13:37] <timeless> (that part was annoying, it could have warned me that i'd needed to add stuff to my env for it to be useful)

[13:37] <mst> I'm a perl5 toolchain hacker and I wouldn't bother trying option one

[13:37] <timeless> i've built perl5 before, (not recently)

[13:37] <timeless> and i've recently built both py2 and py3

[13:37] <mst> and Perl::Build is a cpan module that provides a perl-build script that automates the process

[13:37] <timeless> i think i want `plenv` first

[13:38] <mst> plenv is some shell stuff wrapped around Perl::Build

[13:38] <mst> you can if you want, I don't bother

[13:38] <timeless> oh

[13:38] <timeless> so it isn't like virtualenv?

[13:38] * timeless asks cpan to install Perl::Build

[13:38] <mst> local::lib is more like virtualenv

[13:38] <timeless> :o

[13:38] <mst> or perlbrew + perlbrew's local::lib support

[13:39] <timeless> btw, this is pretty nuts

[13:39] <mst> honestly, I just perl-build into ~/local/

[13:39] <mst> stick a local::lib on top

[13:39] <mst> and move on

[13:39] <timeless> i shouldn't have to use cpan to install perl::build to build perl5 to build perl6 {stuff}

[13:39] <mst> also, http://p3rl.org/local::lib does tell you that you need the env vars, but if memory serves RH comes with a customised initial CPAN config that uses local::lib but doesn't tell you

[13:39] <timeless> although, if it means i don't have to read makefiles, i suppose i should be thankful

[13:40] <stmuk_> you should be able to build perl6 with any recent distro's system perl

[13:40] <timeless> stmuk_: it so didn't work

[13:40] <mst> stmuk_: it's an RHish system with half a perl install and he doesn't have root

[13:40] <mst> so he can't install the other half via rpms

[13:40] <timeless> i could technically unpack them and futz around w/ their locations

[13:40] * timeless has done that in another life too

[13:40] <mst> you could. but just making perl-build do it seems like less hassle

[13:40] <timeless> but at some point my hair will go grey

[13:40] <stmuk_> you will need perl 5.10 or better

[13:41] <timeless> This is perl 5, version 18, subversion 4 (v5.18.4) built for ppc64le-linux-thread-multi

[13:41] <timeless> Linux gcc2-power8.osuosl.org 3.17.4-301.fc21.ppc64le #1 SMP Mon Dec 1 07:51:01 UTC 2014 ppc64le ppc64le ppc64le GNU/Linux

[13:41] <timeless> Description:    Fedora release 21 (Twenty One)

[13:41] <timeless> stmuk_: i trust mst 

[13:41] <timeless> (and the fact that it didn't work...)

[13:41] <stmuk_> I don't

[13:42] <stmuk_> what error did you see?

[13:42] <timeless> stmuk_: set up an fc21 vm and create a non root user :)

[13:42] <timeless> https://www.irccloud.com/pastebin/iDwElRS4/

[13:42] <timeless> is what i got when i tried to build panda

[13:43] <stmuk_> panda doesn't need perl5

[13:43] <mst> wait, that's a perl6 error, I thought you said it was missing a perl5 module

[13:43] <timeless> i got a different error when i tried to build moar which i was able to resolve once i had added + configured local::lib + used cpan to get one more thing

[13:43] <mst> timeless: that's not the error I thought you had, please switching to listening to stmuk_ for a bit

[13:43] <mst> since that's a perl6 error and I'm better at perl5 errors, sorry

[13:43] <mst> stmuk_: doh

[13:43] <timeless> mst: here was the failure for moar: https://www.irccloud.com/pastebin/ja99RQ5f/

[13:44] *** skids joined
[13:44] <timeless> mst: the perl6 error is coming from `prove` which is a perl5 script...

[13:44] <mst> timeless: yeah, but prove is just running a test file

[13:44] <mst> prove can run perl6 tests as well as perl5

[13:44] <mst> (actually, I have a project where some of the tests are Tcl scripts)

[13:44] * timeless shrugs

[13:45] <mst> if you have local::lib going then yeah throwing Perl::OSType into there should be fine

[13:45] <timeless> ok stmuk_ the panda error is for you

[13:45] <timeless> mst: yeah, Perl::OSType was all i needed once local::lib was happy

[13:45] <mst> timeless: sorry for the confusion, the 'RH half-a-perl' thing is so common I pattern matched

[13:45] <timeless> otoh, the moar error at least gave me a hint about how to fix

[13:45] <timeless> the panda error is basically useless

[13:45] <timeless> it doesn't suggest how to get debugging

[13:46] <stmuk_> timeless: I don't think you are following the instructions of putting rakudobrew in the path you are calling it relative

[13:46] <stmuk_> neither are you using .rakudobrew

[13:46] *** rurban1 joined
[13:46] <stmuk_> I think if you follow the instructions exactly it should work .. I just build on a PI3 and I'm sure Fedora works

[13:47] <stmuk_> s/build/built

[13:47] <timeless> still fails :)

[13:47] <stmuk_> start again and follow the exact instructions

[13:47] <timeless> hrm

[13:47] * timeless kicks ln -s

[13:48] <stmuk_> is this on PPC?

[13:48] <timeless> yes

[13:48] <stmuk_> ah .. does anyone know if that actually works? JIT of course won't work

[13:49] *** cpage left
[13:49] *** rurban left
[13:49] <timeless> there's now a ~/.rakudobrew https://www.irccloud.com/pastebin/3GvsIhoi/

[13:49] *** cpage joined
[13:50] <timeless> (it's a symlink, but i'd hope that doesn't trip anything up)

[13:50] <stmuk_> I would still follow the instructions to set the PATH

[13:50] <timeless> I set that path...

[13:50] *** cpage_ left
[13:51] <stmuk_> you didn't export it

[13:51] *** cpage_ joined
[13:51] <timeless> PATH is already exported

[13:51] <timeless> if it wasn't, rakudobrew wouldn't have been found...

[13:52] <timeless> i know it's possible to have a system w/o PATH exported, but it's pretty rare for someone who's actually using a system to manage that

[13:55] <timeless> fwiw, the README.md instructions for rakudobrew are disappointing

[13:55] <timeless> this doesn't mention removing stuff from your .profile https://www.irccloud.com/pastebin/HXqY3J07/

[13:56] <stmuk_> its intended for developers on perl6 itself 

[13:56] <timeless> that's nice

[13:56] *** wamba joined
[13:56] <stmuk_> you might be better off with rakudo star if you are less familar with UNIX

[13:56] <timeless> url?

[13:56] <stmuk_> http://www.perl6.org/downloads/

[13:57] *** bjz_ joined
[13:57] <timeless> mst: let's temporarily assume that perl5 isn't well configured, what version should i tell perl-build to get for me?

[13:57] <stmuk_> you might also be better trying on intel before PPC if you haven't built before

[13:58] <stmuk_> although it would be interesting to hear of PPC builds

[13:58] *** bjz left
[13:58] <mst> timeless: 99% sure that isn't the problem now

[13:58] <timeless> i'm using this box because of the boxes in the gcc farm, it's one of the beefier ones

[13:59] <timeless> cpuinfo|tail https://www.irccloud.com/pastebin/rMUV0ciK/

[13:59] <timeless> stmuk_: could you temporarily assume that i can run and understand basic unix commands and help me troubleshoot the .t failure for panda?

[14:00] <stmuk_> timeless: Sorry I have to leave shortly to do other things

[14:00] <timeless> is there a way to get rakudobrew to ask prove/friends for debugging/verbose output?

[14:00] <timeless> (should I try zef?)

[14:02] *** Sgeo_ left
[14:02] *** cdg joined
[14:02] <timeless> Done, built zef for moar-nom

[14:02] *** rurban1 left
[14:04] <timeless> ok, zef worked

[14:04] * timeless can finally run `make html` in perl6/doc

[14:06] <timeless> mst: is there a simple `perl web server`? :)

[14:07] <timeless> something i can use to host the perl6doc repo on localhost:someport ?

[14:10] *** iH2O joined
[14:10] <perlpilot> timeless: HTTP::Server::Simple::Static is fairly simple.  Mojo can be used to serve static files.  

[14:11] <perlpilot> etc.

[14:11] <timeless> perlpilot: i just want to serve the entire perl6 generated doc tree so i can run a link checker

[14:11] <timeless> i'd rather avoid fighting apache

[14:11] *** tharkun left
[14:11] <iH2O> who wants to fight the apaches?

[14:12] <timeless> yeah, HTTP::Server::Simple::Static looks like it'll do what i need

[14:12] <timeless> although i'll have to figure out how to tell it  my port

[14:12] <timeless> yay! the docs built

[14:13] *** tharkun joined
[14:16] *** iH2O left
[14:19] *** ptolemarch joined
[14:21] *** SHODAN joined
[14:23] <timeless> of course for `Static` to work, i'd have to teach it about `index.html`

[14:23] * timeless looks at mojo

[14:24] <perlpilot> timeless: if you've got Mojolicious and Mojolicious::Plugin::Directory installed, you can use perl -Mojo -E 'a->plugin("Directory", root => "/path/to/files") ->start' daemon --listen http://*:<port>

[14:24] * timeless asks cpan for those two things

[14:25] <timeless> it's really `-Mojo`?

[14:25] <perlpilot> yep

[14:25] <timeless> (that means the library is ojo, right?)

[14:26] <perlpilot> It's a cute thing that comes with Mojo

[14:26] <perlpilot> yes.

[14:26] *** cpage__ joined
[14:26] <mst> perlpilot: that was the one I was thinking of and couldn't remember

[14:26] <perlpilot> Though, it's still not going to do anything special for a file named index.html.  It's just another file to present.

[14:27] *** cpage_ left
[14:27] *** cpage__ is now known as cpage_

[14:27] <timeless> perlpilot: i just need something smart enough to treat `*/` => `*/index.html`

[14:27] <timeless> and again, a goal being to avoid talking to apache (or tomcat, or...)

[14:28] <perlpilot> mst: aye, it's in the docs for Mojolicious::Plugin::Directory

[14:28] * perlpilot meeting &

[14:29] <timeless> so... `::` seems to be working...

[14:30] * timeless is tempted to try to improve the w3 link checker

[14:30] *** molaf joined
[14:31] <timeless> this is odd https://www.irccloud.com/pastebin/ikZRdzaq/

[14:32] <tony-o> timeless: might check out xenu's link sleuth

[14:32] <tony-o> http://home.snafu.de/tilman/xenulink.html

[14:33] <timeless> System requirements: Microsoft Windows 95/98/ME/NT/2000/XP/Vista/7/8/10, WININET.DLL required (included with Internet Explorer).

[14:33] <timeless> this is on a firewalled linux-ppc machine...

[14:33] <perigrin> What about 3.12?

[14:33] <timeless> No, it won't work on Windows 3.11, not even with Win32s.

[14:33] <tony-o> i think he addresses that

[14:34] <perigrin> I'm running DOS 6.5 though ... 

[14:34] <timeless> No, I won't make a Java, MacOS, Linux, Knoppix, Ubuntu, Beos, Palm, C64, SAP, AmigaOS, Blackberry, Symbian, iPhone or Android version. Don't even ask!

[14:34] <tony-o> i have os2

[14:34] <tony-o> runs fine for me

[14:34] <timeless> he managed to misspell BeOS and BlackBerry :-(

[14:34] <timeless> ok, so, apparently i could run it w/ wien

[14:34] <timeless> wine

[14:34] <tony-o> is RIM still around?

[14:34] <timeless> of course, i don't think this system has x11

[14:34] <timeless> my former employer? yes

[14:34] <timeless> they're still laying people off

[14:35] <timeless> they changed their name to BlackBerry a few years ago

[14:36] *** pmurias joined
[14:36] <tony-o> that seems like a poor decision, BB already lost the race by then

[14:37] <timeless> it wasn't their poorest decision

[14:38] <timeless> `hiring` Alicia Keys w/o a very strongly designed contract was near the top of the list of poor decisions (imo)

[14:38] <tony-o> did leont leave the perl6 community?

[14:39] <timeless> (a brand embassador w/o a very strict penalty for being caught using [tweeting from]  a competitive product)

[14:40] <dogbert17> o/ #perl6

[14:40] <timotimo> .seen leont

[14:40] <yoleaux> I saw leont 24 Apr 2016 14:45Z in #perl6: * leont has lived with --std=c++11 for a while now, and wouldn't ever want to look back

[14:40] <timotimo> leont often stays away from the irc for a few months at a time, as he's got plenty other stuff to worry about (that's my guess anyway)

[14:41] <dogbert17> have just stumbled upon a regression, one of my projext euler scripts suddenly segfaults

[14:41] <timotimo> uh oh

[14:41] <timotimo> segfaults are good, though. usually comparatively easy to debug

[14:41] <timotimo> can you get a backtrace with perl6-gdb-m?

[14:41] <timotimo> does it have any threading in it?

[14:42] <dogbert17> timotimo: https://gist.github.com/dogbert17/d7822b6db5daa88a372c835727bf0729

[14:43] <timotimo> OK, and just for completeness sake, can you add perl6 --version to it?

[14:44] <dogbert17> gimme a sec :)

[14:45] <dogbert17> timotimo: done gist updated

[14:47] <perlpilot> does bisectbot handle gists?

[14:47] <timotimo> the perl6 stuff on my desktop is a bit out of date, so i'll build newest first

[14:48] <perlpilot> Also, does bisectbot handle long-running programs gracefully?

[14:48] <tadzik> so, the general pattern for "I need time more precisely than time()" is "use nqp; nqp::time_n()"? I don't see Time::HiRes or anything in the ecosystem

[14:48] *** rindolf left
[14:49] <jnthn> m: say now

[14:49] <camelia> rakudo-moar 2095ed: OUTPUT«Instant:1465483787.822199␤»

[14:51] <tadzik> ...oh

[14:51] <timotimo> oh hey tadzik :)

[14:51] <tadzik> oh hey timo :)

[14:52] <tadzik> for some reason I thought 'now' gives integer values

[14:52] *** rindolf joined
[14:52] <tadzik> 9¯\_(ツ)_/¯

[14:54] * dogbert17 perl6-valgrind-m is slooooow

[14:54] *** huggable joined
[14:55] <tony-o> timeless: thanks -

[14:55] <nemo> dogbert17: s/perl6-//;s/-m//

[14:55] <timotimo> oh yes, it is

[14:55] <tony-o> tadzik: i wasn't able to get that working when i made `bench` - i'd be interested to know if it works now.  it was specifically erroring out on win

[14:55] <dogbert17> perhaps I should have run perl6-gdb-m instead

[14:56] <nemo> dogbert17: I've run valgrind so many times on hedgewars matches at like a few fps to catch our fails.  I'd usually launch it then check back half an hour later ☺

[14:56] <timotimo> i'm reproducing the crash and it's interesting

[14:56] <dogbert17> nemo: interesting

[14:56] <dogbert17> timotimo: cool

[14:56] * timeless so doesn't understand the magic of doc.perl6.org

[14:57] <tadzik> tony-o: hm, no idea, I don't have windows around to try it on

[14:57] <tadzik> seems to work fine on linux though

[14:58] <tony-o> err oh, my problem was getting sys/cpu/real or whatever

[14:58] <tony-o> i'll try it on win

[14:59] <tadzik> ah

[14:59] <dogbert17> timotimo: I know for a fact that it, at least, worked on This is Rakudo version 2016.03-40-g81558b8 built on MoarVM version 2016.03-46-g50c7f6a

[14:59] <timotimo> the problem appears when we're On-Stack-Replacing (or at least trying to) the count-only method of some class

[14:59] *** _mg_ left
[15:00] <[Coke]> timeless: I'm catching up. but perl6doc has "make run"

[15:00] <timotimo> since it's about spesh and optimization and such, it can be very finnicky

[15:00] <tony-o> i wrote bench in 2014 so things have had a bit of time to develop since then :)

[15:00] <timeless> [Coke]: oh boy, that sounds like what i want (doh) -- thanks

[15:01] <[Coke]> that requires your p5 to have Mojolicious::Lite

[15:01] <dogbert17> timotimo: I eun these programs from time to time in order to track the improvements made by jnthn, lizmat et al

[15:01] <timeless> [Coke]: well, hrm,...

[15:01] <timeless> run https://www.irccloud.com/pastebin/iU4NIUly/

[15:01] <dogbert17> s/eun/run/

[15:01] <timotimo> that's good :)

[15:02] <timeless> no output from curl?? https://www.irccloud.com/pastebin/MlXpjVM7/

[15:02] <[Coke]> we'd all be happy if it used the perl6 mini server, but it wasn't crucial for testing to self host there.

[15:02] <timeless> [Coke]: i'm kinda expecting output from curl...

[15:02] <dogbert17> timotimo: on a positive note, this latest run was by far the quickes :)

[15:02] <timotimo> the quickest to crash :D

[15:02] <[Coke]> timeless: does it show in chrome or other gui browser?

[15:02] * colomon built a small p6 Inline::Python script yesterday, because that seemed easier than learning enough Python to set up a command line interface for what he wanted to do.

[15:03] <timotimo> i like using "curl -v" to figure out what's going on with http requests

[15:03] <timeless> [Coke]: the machine isn't very reachable

[15:03] <timotimo> it shows you outgoing and incoming headers, too

[15:03] <timeless> -v https://www.irccloud.com/pastebin/CjqVf7rh/

[15:03] <dogbert17> when I ran it in March it took 5m50s on my systen

[15:03] <timeless> i'm trying to decide who to blame here

[15:03] <timeless> the server clearly says it's serving a 302

[15:03] <timotimo> huh, so it's really just giving you an empty document for index.html

[15:03] <timeless> oh

[15:03] * timeless wonders if it needs to follow redirects?

[15:04] <timeless> ok, w/ curl -L things work better

[15:04] <timotimo> ooooh

[15:05] <dogbert17> that sounds ominous :)

[15:05] <tony-o> [Coke]: i've been playing with HTTP::Easy for perl6 - it looks pretty easy, as the name suggests

[15:06] <[Coke]> tony-o: nice. 

[15:06] <tony-o> if it's just serving static docs, it looks like it could handle that

[15:06] <timeless> um

[15:06] <timeless> [Thu Jun  9 15:05:38 2016] [debug] GET "/robots.txt.html.html.html.html.html.html.html"

[15:06] <timeless> perhaps that isn't the best outcome from a web server?

[15:06] <timeless> "If i don't have an X, I should suggest an X.html, w/o first checking to see if it exists!"

[15:07] <[Coke]> not just static docs.

[15:10] *** khw joined
[15:11] *** ssotka joined
[15:13] <tadzik> uh-oh

[15:13] <tadzik> any idea if Inline::Perl5 is thread-safe? :S

[15:14] <timotimo> only in the same way perl5 itself is thread-safe :P

[15:14] <timeless> [Coke]: would you take this? https://www.irccloud.com/pastebin/WHgOl1g4/

[15:14] <timeless> that should make my robots problem go away...

[15:14] <timotimo> i think you can have a single Inline::Perl5 thingie per thread, but it's essentially the same as having multiple processes

[15:14] <timotimo> i.e. you have to rely on perl6 to marshal the objects between the interpreters

[15:15] <tadzik> I'm getting happy segfaults

[15:15] <timeless> hrm, it doesn't

[15:15] *** mohae joined
[15:16] <tadzik> "Internal error: Unwound entire stack and missed handler" well that's new :o

[15:16] <timotimo> nah, it's very old

[15:16] <timotimo> that's when you throw an exception inside a nativecall callback and it reaches the C code

[15:16] <tadzik> hm

[15:17] <timeless> [Coke]: ok, this works https://www.irccloud.com/pastebin/ac3E1Adg/

[15:17] <timotimo> if you can't get it to not show up by placing CATCH everywhere, it can be the signature bind for the callback itself doesn't work

[15:18] <arnsholt> Oh, that one, yeah. *sadface*

[15:18] *** maybekoo2 joined
[15:18] <timotimo> i think we should be able to register a handler for that case in the HLL that prints out the exception with a little hint about callbacks

[15:18] <timotimo> because we should be able to figure out if we're in a sub-interpreter situation

[15:19] *** _mg_ joined
[15:20] <timeless> watch "grep -B3 'To do' ../checklink.report3.txt |egrep -v 'github|Code:|Lines?:|^--|robots exclusion'"

[15:20] <tadzik> timotimo: apparently it also means "don't 'return' in a start { } block

[15:20] <tadzik> ":)

[15:20] <timotimo> oh

[15:20] <timotimo> that should give a different error

[15:20] <[Coke]> timeless: I'd look at a PR with that. Can't say right now, though.

[15:20] <timotimo> but returning is about to become a whole bunch better :)

[15:21] <timeless> [Coke]: ok, i'll send one in a bit

[15:21] <timotimo> but yeah, a start block doesn't give you a sub, so you'll be returning from the routine that has the start block in it

[15:21] <tadzik> right

[15:21] <timotimo> you can start anon sub() { }, i believe

[15:21] <timotimo> m: await start sub foo() { say "hi" };

[15:21] <camelia> rakudo-moar 2095ed: ( no output )

[15:21] <timotimo> huh.

[15:21] <timotimo> m: start sub foo() { say "hi" }; sleep 1

[15:22] <camelia> rakudo-moar 2095ed: ( no output )

[15:22] <timotimo> heh.

[15:22] <timotimo> that just makes the sub be the return value of the promise

[15:22] <tadzik> anyway, https://gist.github.com/tadzik/add0e94079da1b1645bb8fa78151f25d segfaults my code, basically

[15:22] <timotimo> yeah, that's very expected

[15:23] <timotimo> you need to create an Inline::Perl5 per thread

[15:23] <timotimo> that also means you can't use :from<Perl5>, as you have to address each of the I::P5 objects one-by-one

[15:23] <tadzik> oh bummer

[15:24] <timeless> [Coke]: 

[15:24] <timeless> Language/setbagmix.pod:=head3 infix (.)

[15:24] <timeless> Language/setbagmix.pod:Equivalent to L«(.)», at codepoint U+228D (MULTISET MULTIPLICATION).

[15:24] <timotimo> why? it's easy to do and it'll work for your case

[15:24] <timeless> are those two supposed to be related?

[15:24] * timeless thinks so

[15:24] <timotimo> yeah, they should

[15:25] <timeless> timotimo: do i change it to  L«infix (.)» or L«(.)|infix (.)»

[15:25] <tadzik> timotimo: yeah, it's doable. My actual code is more complex than this golfed loop though :)

[15:25] <timeless> or something else

[15:25] <timotimo> i'd say have it show (.) but link to infix (.)

[15:25] <timotimo> tadzik: of course

[15:26] *** grondilu joined
[15:26] <tadzik> I have aplenty of worker objects that just use WWW::Mechanize like it's the most ordinary thing ever

[15:26] <tadzik> so I just need to de-sugarize them 

[15:26] <timeless> timotimo: ok, do you know offhand if i need a `#` here?

[15:26] <tadzik> no tragedy :)

[15:26] <timotimo> i do not :(

[15:26] * timeless so doesn't understand the pod link syntax

[15:26] <timotimo> i don't even know if you need to spell out the file name, too

[15:26] <timeless> ok, i'll try and see what the build system says

[15:27] *** rurban_ left
[15:31] <timeless> [Coke]/timotimo: any idea why some links are to `.html` and some aren't? https://www.irccloud.com/pastebin/qNOuWx2S/

[15:31] *** _mg_ left
[15:32] <timeless> Language/objects.pod:$*IN.L<nl-in> = "\r\n";

[15:32] <timeless> timotimo: i presume that should be C<...>?

[15:32] <dogbert17> timotimo: valgrind came through but I suspect that you already have all relevant info: https://gist.github.com/dogbert17/bedd7295290dd9490a521970aad85e64

[15:32] <stmuk_> timeless: maybe mentioned in scrolback already but there are redirects done at the apache level

[15:33] <timotimo> it could be a link to the nl-in method

[15:33] *** domidumont left
[15:33] <timeless> timotimo: what's that?

[15:34] <timotimo> well, it's an attribute

[15:34] <timotimo> or rather, the method is the accessor for that

[15:40] <timeless> hrm, ok, i clearly asked an ambiguous question

[15:40] <timeless> "as far as a user is concerned, where would they meaningfully find an explanation of that in doc.perl6.org ?"

[15:41] <timotimo> probably on the IO::Handle class page

[15:43] <timeless> fwiw, L«(.)|infix (.)» seemed to do the right thing.

[15:43] <timotimo> cool!

[15:43] *** azawawi joined
[15:43] <azawawi> .

[15:44] <timeless> IO::Handle is pretty empty :(

[15:44] <azawawi> Xliff: ping

[15:45] <stmuk_> which repo has the apache redirects for doc.perl6.org? anyone remember?

[15:45] <timotimo> hmmm

[15:45] <azawawi> Xliff: re How much of GTK is covered in GTK::Simple? ... No idea but we're getting there (full list: https://developer.gnome.org/gtk3/stable/ch03.html)

[15:45] <moritz> stmuk_: iirc there's just a .htacess file somewhere

[15:46] <moritz> hm, doesn't seem to be in the repo :(

[15:47] <moritz> root@www:/var/www/doc.perl6.org# cat .htaccess

[15:47] <moritz> Redirect 301 /language/5to6 http://doc.perl6.org/language/5to6-nutshell

[15:47] <timeless> is that the entire file?

[15:47] <moritz> yessir

[15:47] <stmuk_> ah I was probably thinking of the main site

[15:48] <timeless> well, um... is it reasonable to ask for it to be added to the doc repo?

[15:48] <moritz> timeless: it totally is

[15:48] <stmuk_> www.perl6.org has more redirects I think?

[15:48] <timeless> at the very least `make run` should be aware of the lines there

[15:48] <dalek> doc/parallel-htmlify-2: 2dd16d1 | moritz++ | html/.htaccess:

[15:48] <dalek> doc/parallel-htmlify-2: Add .htaccess file for the website

[15:48] <dalek> doc/parallel-htmlify-2: review: https://github.com/perl6/doc/commit/2dd16d196b

[15:49] <moritz> stmuk_: there is irc.perl6.org for eamplw which redirects to http://irclog.perlgeek.de/perl6/today

[15:49] <moritz> should become https, btw :-)

[15:49] <parabolize> timeless: `p6doc -f nl-in` didn't find anything for me `grep -d recures 'method nl-in' ~/.rakudobrew/' had 4 hits 

[15:50] *** kurahaupo joined
[15:50] <timeless> fwiw, here's how I'm watching the link checker https://www.irccloud.com/pastebin/ag9sbL2t/checklink-watcher.sh

[15:50] <stmuk_> BTW I used a custom google search box on pl6net.org which gets hits for "nl-in"

[15:50] <timeless> parabolize: ok,... what should i do w/ that?

[15:50] <stmuk_> it indexes most of the obvious sites

[15:51] <timeless> www.pl6net.org’s server DNS address could not be found.

[15:51] *** domidumont joined
[15:51] <stmuk_> its pl6anet.org

[15:51] <stmuk_> typo

[15:51] <timotimo> for some reason i really like that spelling

[15:51] <timotimo> even though it's so strange

[15:52] <timeless> stmuk_: so, i'm still leaning on changing it to C<...>

[15:52] <timeless> none of the pl6anet.org things stand out to me (non-expert hat) as obvious methods

[15:53] <timeless> parabolize: `recures`?

[15:53] <timeless> recurse?

[15:53] <parabolize> yeah, sorry

[15:54] <parabolize> I think its only method definition is in ~/.rakudobrew/moar-nom/src/core/IO/Handle.pm

[15:55] <Xliff> azawawi, neat! Thanks for the info!

[15:55] <timeless> hrm,

[15:55] <azawawi> Xliff: np

[15:56] <timeless> ok,.... so... i guess technically $*IN.nl-in *is* talking about IO::Handle.nl-in

[15:56] <timeless> but even so, i don't think that's what the user is looking for when reading the text that offended the link checker

[15:56] <timeless> so... i'm now 80% confident in changing L<...> to C<...>

[15:57] <parabolize> you talking about the example in https://doc.perl6.org/language/objects#Using_Objects?

[15:57] <stmuk_> m: say IO::Handle.^methods

[15:57] <camelia> rakudo-moar 2095ed: OUTPUT«(FALLBACK gist new)␤»

[15:58] * parabolize was indeed confused by it

[15:58] <stmuk_> uh

[15:59] <dogbert17> m: say IO::Handle.^methods(:local)

[15:59] <camelia> rakudo-moar 2095ed: OUTPUT«()␤»

[15:59] <[Coke]> moritz: html/.htaccess already existed.

[15:59] <dogbert17> hmm

[15:59] <timotimo> i think IO::Handle may just be a role or superclass

[15:59] <timotimo> not sure

[15:59] <timeless> parabolize: yes

[16:00] *** rurban joined
[16:00] <moritz> [Coke]: oh, I was on the wrong branch

[16:00] <stmuk_> say IO::Handle.^methods gives me results in my REPL

[16:00] <timeless> (sorry, i had to look it up)

[16:00] <stmuk_> not from the bot

[16:00] <moritz> dogbert17: IO:: classes are stubbed out in the restricted setting

[16:00] <stmuk_> s: say IO::Handle.^methods

[16:00] <stmuk_> star: say IO::Handle.^methods

[16:00] <camelia> star-m 2016.01: OUTPUT«(FALLBACK gist new)␤»

[16:00] <moritz> m: CORE::<IO::Handle>.^methods(:local)

[16:00] <camelia> rakudo-moar 2095ed: ( no output )

[16:00] <dogbert17> moritz: that explains it :)

[16:00] <moritz> m: say CORE::<IO::Handle>.^methods(:local)

[16:00] <camelia> rakudo-moar 2095ed: OUTPUT«(new Numeric Str sink AT-POS AT-KEY BIND-POS BIND-KEY ASSIGN-POS ASSIGN-KEY STORE push append unshift prepend FALLBACK ords chrs iterator gist)␤»

[16:00] <moritz> ... though as a security measure not very effective :/

[16:01] <dogbert17> :)

[16:01] <stmuk_> ah

[16:01] <dogbert17> cheating - (open nl-in close eof get getc comb words lines read readchars Supply seek tell write opened t lock unlock print put print-nl slurp-rest chmod IO path flush encoding DESTROY e d f s l r w x modified accessed changed watch native-descriptor umask split say Str gist perl chomp nl-out)

[16:02] <timeless> parabolize: so change L<...> to C<...> there?

[16:02] <timeless> presumably one could filter the list for /nl/

[16:03] <parabolize> I don't know. I haven't learned PODs yet.

[16:03] <stmuk_> m: say IO::Handle.^mro

[16:03] <camelia> rakudo-moar 2095ed: OUTPUT«IO::Handle is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting line 1␤  in method gist at src/RESTRICTED.setting line 33␤  in block <unit> at /tmp/Th9UeNOT2c line 1␤␤»

[16:03] <timotimo> hah, oh crap

[16:04] <timotimo> forgot about the restricted setting stuff

[16:04] <stmuk_> maybe .^methods should also report an explicit error under RESTRICTED

[16:04] <timotimo> yeah, we could have a RestrictedHOW for that :P

[16:04] <timotimo> actually, we can define a method ^methods

[16:07] <timeless> is NaN a type?

[16:08] <timotimo> it's an instance of Num, i believe

[16:08] <timotimo> m: say NaN.DEFINITE

[16:08] <camelia> rakudo-moar 2095ed: OUTPUT«True␤»

[16:08] <timotimo> m: say NaN.defined

[16:08] <camelia> rakudo-moar 2095ed: OUTPUT«True␤»

[16:09] <timotimo> oh, it's even defined

[16:09] <stmuk_> not a number *is* a number!

[16:09] <timeless> these things think it's a type https://www.irccloud.com/pastebin/oF5csPz6/

[16:09] * azawawi is currently thinking of https://en.wikipedia.org/wiki/Naan  # 45 min left till breaking fast :)

[16:09] <timeless> azawawi: sounds good

[16:09] <timeless> sunset?

[16:10] <timotimo> wellllll, that's just the file name/path, so ... dunno!

[16:11] <timeless> well, you have Type/{Complex,Hash,Int,Numeric,Str}

[16:11] <timeless> sounds like NaN could live in Numeric.pod?

[16:11] <timeless> hrm, no :/

[16:12] <timotimo> maybe because NaN behaves so strangely compared to actual numbers?

[16:14] <timeless> I just need a place to put it to make the link checker (and human readers) vaguely happy

[16:14] <timeless> if someone gets religious they can move it later

[16:14] <timeless> i'm leaning toward Numeric

[16:14] *** rurban_ joined
[16:15] <timeless> actually

[16:15] * timotimo AFK

[16:15] <timeless> where does NaN fit on the pretty graph in https://docs.perl6.org/type/Numeric ?

[16:15] <azawawi> any plans for a Perl 6 book?

[16:15] <azawawi> printed that is

[16:15] <[Coke]> azawawi: yes.

[16:16] <[Coke]> I believe work is in progress, no estimated completion date at the moment.

[16:16] <azawawi> any samples? links?

[16:16] <timeless> m: NaN.unival

[16:16] <camelia> rakudo-moar 2095ed: OUTPUT«Cannot call unival(Num); none of these signatures match:␤    (Str:D $str)␤    (Int:D $code)␤  in block <unit> at /tmp/YKEgASt2WO line 1␤␤»

[16:16] <timeless> ok, so NaN is not a Num? :)

[16:17] <[Coke]> azawawi: nope

[16:17] <stmuk_> m: NaN.WHAT

[16:17] <camelia> rakudo-moar 2095ed: ( no output )

[16:17] <[Coke]> it's not an open source book.

[16:17] <azawawi> [Coke]: cool thx... who's working on it?

[16:17] <[Coke]> And my info on it is months old, I'm afraid

[16:18] <timeless> m: 5.WHAT

[16:18] <camelia> rakudo-moar 2095ed: ( no output )

[16:18] <[Coke]> I'm sure they'll speak up if they want that info out there. :)

[16:18] <stmuk_> I think the obvious author popped in a few weeks ago and mentioned it was at least started

[16:18] * timeless is totally lost

[16:18] <stmuk_> but didn't give details

[16:19] <azawawi> [Coke]: yup

[16:19] <timeless> so.... what is NaN? :-/

[16:19] <perlpilot> Not a Number

[16:19] <perlpilot> as usual

[16:19] <stmuk_> (Num)

[16:19] <stmuk_> is a number and not one

[16:20] <timeless> stmuk_: so, dump NaN in Num.pod?

[16:20] <perlpilot> stmuk_: It's a "number" that represents notness. :)

[16:20] <timeless> but, if NaN is a Num, then why did NaN.unival fail?

[16:20] <stmuk_> timeless: I don't know .. TBH it probably doesn't need documentation since it's well known outside the Perl 6 community anyway

[16:21] <timeless> stmuk_: `%` is known outside the C community, but it definitely needs documentation for C ...

[16:21] <timeless> (what is -3 % -2  [C] ?)

[16:21] <perlpilot> timeless: depends on the implementation of C  ;)

[16:21] <timeless> perlpilot is correct.

[16:22] <timeless> (another fun one: `what is/are the allowed prototype[s] for ``main``? [C]`

[16:23] <perlpilot> timeless: you really could go on all day with this stuff for C.  But, please don't :)

[16:24] <timeless> fair enough. but i hope the point is understood, just because a concept exists elsewhere doesn't mean you shouldn't define it for your language

[16:24] <timeless> especially when it's flaky

[16:24] <timeless> and `%`, `NaN` and `main()` all count as flaky

[16:24] * timeless dumps it into Num.pod

[16:25] <timeless> odd

[16:25] <timeless> ok, i don't get it

[16:25] <perlpilot> The only problem with % is that people conflate "modulus" and "remainder" (and unfortunately some of those people are compiler writers)

[16:26] * timeless chuckles

[16:26] <timeless> yep

[16:26] *** rurban1 joined
[16:28] *** rurban left
[16:30] *** tharkun left
[16:30] *** tharkun joined
[16:31] *** azawawi left
[16:34] <TimToady> timeless: you seem to have a strange idea of what .unival is supposed to do

[16:34] <timeless> TimToady: i have absolutely no idea what it should do :)

[16:35] <TimToady> m: say "⅓".unival

[16:35] <camelia> rakudo-moar 2095ed: OUTPUT«0.333333␤»

[16:35] <timeless> but the error says cannot call unival(Num) which to me implies that unival(Num) exists

[16:35] <timeless> it might be the case that it means "unival() does not accept Num"

[16:35] <TimToady> no, it implies that it *doesn't* exist

[16:36] <timeless> ok. well... that's my problem, the error confused me

[16:36] <TimToady> m: say unival(now)

[16:36] <camelia> rakudo-moar 2095ed: OUTPUT«Cannot call unival(Instant); none of these signatures match:␤    (Str:D $str)␤    (Int:D $code)␤  in block <unit> at /tmp/ULJQ74FbVM line 1␤␤»

[16:36] <timeless> I was hoping to use the call to determine the type of NaN, and apparently it would have worked if i understood the error :/

[16:37] <TimToady> m: say NaN.WHAT

[16:37] <camelia> rakudo-moar 2095ed: OUTPUT«(Num)␤»

[16:37] *** pmurias left
[16:38] <TimToady> okay, I think I see what was confusing

[16:38] *** rurban joined
[16:38] <TimToady> when it says "Cannot call unival(Num)" it's trying to indicate generically what the types of the call were, not that unival(Num) actually exists

[16:38] *** setty1 joined
[16:39] <timeless> i think replacing `call` with something else might help, maybe

[16:39] <timeless> tentatively `apply`

[16:39] *** yqt left
[16:39] <timeless> (acknowledging that `apply` may be overused/otherwise defined)

[16:39] <timeless> possibly `resolve`

[16:40] <TimToady> 'do anything with' :)

[16:40] *** rurban1 left
[16:40] <timeless> sure?

[16:40] <TimToady> 'figure out' :)

[16:40] <timotimo> "frumble"

[16:41] <timeless> anyway, if you're taking this UX as input to considering changing the Output, I appreciate it :)

[16:41] * timeless goes back to not understanding POD

[16:41] <TimToady> :D

[16:42] <timeless> All I want to do is add `NaN` to Num.pod, now that I've established that's where it belongs

[16:42] <timeless> but...

[16:42] <timeless> this did not work at all https://www.irccloud.com/pastebin/GTxrv0ub/

[16:43] <timeless> now, NaN is an Instance of Num, and not a subclass, right?

[16:43] <timeless> m: say NaN.new

[16:43] <camelia> rakudo-moar 2095ed: OUTPUT«0␤»

[16:43] <timeless> m: say NaN === NaN

[16:43] <camelia> rakudo-moar 2095ed: OUTPUT«True␤»

[16:43] <timeless> m: say NaN === NaN.new

[16:43] <camelia> rakudo-moar 2095ed: OUTPUT«False␤»

[16:44] <TimToady> yes, it's just a special value

[16:44] *** mr-foobar left
[16:45] <TimToady> NaN.new is the same as 42e0.new

[16:45] <TimToady> new generally ignores the actual value and just uses the type

[16:46] <timeless> ok, I think:

[16:46] <timeless> =head1 Constants

[16:46] <timeless> =head2 X<C<NaN>|Nan>

[16:46] <timeless> C<NaN> is a C<Num>.

[16:47] <timeless> maybe?

[16:49] *** sno left
[16:50] *** dakkar left
[16:50] *** donaldh left
[16:51] <TimToady> maybe something like NaN is a special Num value that normally results from supplying nonsensical inputs to afloating-point operation.

[16:53] <timeless> the fancy search box on http://doc.perl6.org/ doesn't work well for no-results when your screen is narrow (half width)

[16:53] <timeless> can't see search box https://usercontent.irccloud-cdn.com/file/aB3Lq76u/

[16:54] <parabolize> well, its there but to the right for some reason

[16:55] <timeless>  it's behind the red box

[16:55] <timeless> (below)

[16:55] *** abraxxa left
[16:55] <timeless> (z-order)

[16:56] * timeless frowns

[16:58] <parabolize> firefox isn't doing that to me but the error message is bound to the green div.menu thing

[16:58] * timeless is using Chrome

[16:58] <timeless> did you narrow your window to approximate my window's width?

[16:59] <timeless> ok, so, i don't understand how Type/Num.pod works

[16:59] <parabolize> so if you make it ridiculously small firefox will cover the search bar

[16:59] <parabolize> it works fine at the width you had it

[17:00] *** rurban left
[17:00] <parabolize> but if a phone did what firefox did I wouldn't be happy

[17:00] * timeless launches ff for android

[17:01] <timeless> it does

[17:01] <timeless> want a picture?

[17:02] * timeless waits for irccloud to load in chrome for android

[17:02] * timeless should just use imgur.com ...

[17:03] <parabolize> firefox fo android isn't really firefox

[17:03] <parabolize> *for

[17:03] <timeless> m.imgur.com/RX49zLj

[17:05] <timeless> ok... so, back to `Num.pod`

[17:06] <timeless> 3 lines above `Type graph`are contributed by the file itself

[17:06] <timeless> everything else seems to be magically inserted

[17:07] *** yqt joined
[17:07] <timotimo> .u square

[17:07] <yoleaux> U+005B LEFT SQUARE BRACKET [Ps] ([)

[17:07] <yoleaux> U+005D RIGHT SQUARE BRACKET [Pe] (])

[17:07] <yoleaux> U+033B COMBINING SQUARE BELOW [Mn] (◌̻)

[17:07] <timotimo> :\

[17:11] *** kurahaupo left
[17:13] <timeless> could i claim` enum NaN is Num` ?

[17:14] <timeless> ignoring that fact that it isn't actually an enum, would that get me close enough to being in the type-graph that something useful would happen?

[17:18] *** chris2 joined
[17:19] *** _mg_ joined
[17:19] <Xliff> FROGGS: Ping

[17:19] <timeless> parabolize: https://github.com/perl6/doc/issues/574

[17:20] <TimToady> timeless++ for suggesting https://github.com/rakudo/rakudo/commit/b6902e5192

[17:20] <timeless> parabolize: and fwiw, the next version of firefox for desktop will finally have e11s which will make them much closer

[17:20] <timeless> TimToady++ for writing a patch!

[17:21] <TimToady> funny thing is, I tried it with just "resolve" and it failed the spec tests, which require the word "call" to be in there somewhere :)

[17:21] <timeless> really, much appreciated. that's what i love about collaborative systems

[17:21] <timeless> lol

[17:22] <TimToady> so really a bit of an overspecific roast buglet

[17:22] <TimToady> but I worked around it

[17:22] *** cdg left
[17:23] *** cdg joined
[17:24] <timeless> so... I can't figure out how to get Num.pod to list my own content

[17:24] <timeless> the best I can do is get NaN to appear in the graph as a child of Num

[17:24] <timeless> and then just write a NaN.pod

[17:24] * TimToady has not played with that at all

[17:24] <timeless> I'm going to go w/ that approach, and if someone objects, they can rewrite it

[17:28] <Xliff> Can you create multi methods that respect the aka trait?

[17:30] <Xliff> m: class A { multi method unreal_name($a, $b) is aka<better_name> { self.unreal_name($a => $b); } multi method unreal_name(Pair $kv) is aka<better_name> { dd $kv } }; A.new.better_name(1, 2); 

[17:30] <camelia> rakudo-moar 2095ed: OUTPUT«5===SORRY!5=== Error while compiling /tmp/5XogxaaAmH␤Can't use unknown trait 'is aka' in a method declaration.␤at /tmp/5XogxaaAmH:1␤    expecting any of:␤        rw raw hidden-from-backtrace hidden-from-USAGE␤        pure default DEPRECATED i…»

[17:33] *** beatdown joined
[17:33] *** ribasushi joined
[17:34] *** patrickz joined
[17:34] <timeless> m: NaN.roots

[17:34] <camelia> rakudo-moar b6902e: OUTPUT«Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at /tmp/ZqQLmad5Gd line 1␤␤»

[17:34] <timeless> m: NaN.roots(1)

[17:34] <camelia> rakudo-moar b6902e: ( no output )

[17:35] <muraiki> what's the perl6 version of perl5 @INC?

[17:35] <timeless> m: NaN.rindex("This is NaN or something")

[17:35] <camelia> rakudo-moar b6902e: ( no output )

[17:35] <timeless> m: NaN.rindex("This is NaN or something", 0)

[17:35] <camelia> rakudo-moar b6902e: ( no output )

[17:35] <muraiki> I couldn't find info on it in 5to6-nutshell

[17:36] <muraiki> it only listed the "use inc" pragma

[17:36] * timeless saw something which hinted at not needing to do it

[17:36] * timeless didn't ask "why"

[17:37] <timeless> NaN.abs

[17:37] <timeless> m: NaN.abs

[17:37] <camelia> rakudo-moar b6902e: ( no output )

[17:37] <timeless> m: (-2).abs

[17:37] <camelia> rakudo-moar b6902e: ( no output )

[17:37] <timeless> m: say NaN.abs

[17:37] <camelia> rakudo-moar b6902e: OUTPUT«NaN␤»

[17:37] <timeless> m: say NaN.rindex("This is NaN or something", 0)

[17:37] <camelia> rakudo-moar b6902e: OUTPUT«Nil␤»

[17:38] <timeless> m: say NaN.roots(1)

[17:38] <camelia> rakudo-moar b6902e: OUTPUT«NaN+0i␤»

[17:38] *** raiph joined
[17:38] <timeless> m: say NaN.conj

[17:38] <camelia> rakudo-moar b6902e: OUTPUT«NaN␤»

[17:39] *** cdg left
[17:40] <timeless> m: say NaN.sign

[17:40] <camelia> rakudo-moar b6902e: OUTPUT«NaN␤»

[17:40] <timeless> ok, i like that... since NUMERIC.sign says the possible values are 1, -1, and 0 ...

[17:44] *** Actualeyes left
[17:44] <timeless> m: say 'a'.unival

[17:44] <camelia> rakudo-moar b6902e: OUTPUT«NaN␤»

[17:52] <timeless> is there a replacement for http://www.perlito.org/perlito/perlito5to6.html

[17:52] *** cdg joined
[17:53] <timeless> http://fglock.github.io/Perlito/perlito/perlito5.html i guess

[17:57] * Woodi was just hit by enlightenment - OSes are just compilers! ;)

[17:57] <Woodi> "The first step is to build a new and host-independent toolchain (compiler, assembler, linker, libraries, and a few useful utilities)..."   http://www.linuxfromscratch.org/lfs/view/development/chapter05/introduction.html

[17:58] <dalek> doc: df64b5c | (Zoffix Znet)++ | html/css/style.css:

[17:58] <dalek> doc: Do not cover search field with "no results" on narrow screens

[17:58] <dalek> doc: 

[17:58] <dalek> doc: Closes #574

[17:58] <dalek> doc: review: https://github.com/perl6/doc/commit/df64b5c7a0

[18:02] *** timeless left
[18:02] <[Coke]> IWBNI there was an indicator on the docs.perl6.org site about which commit it was built from.

[18:02] <[Coke]> so I might know when, for example, df64b5c was running live.

[18:03] *** ribasushi left
[18:04] *** timeless joined
[18:04] *** muraiki left
[18:05] *** ribasushi joined
[18:06] *** sno joined
[18:06] *** Score_Under left
[18:07] *** Score_Under joined
[18:12] *** labster joined
[18:14] *** yqt left
[18:18] *** zakharyas left
[18:24] *** _mg__ joined
[18:24] <llfourn> is Hash.keys determinisitic in rakudo/moar?

[18:25] <moritz> m: my %h = ('a' ... 'z') X=> 1; say %h.keys

[18:25] <camelia> rakudo-moar b6902e: OUTPUT«(x p k h g z a y v s q e d m f c w o n u t b j i r l)␤»

[18:25] <moritz> m: my %h = ('a' ... 'z') X=> 1; say %h.keys

[18:25] <camelia> rakudo-moar b6902e: OUTPUT«(x p k h g z a y v s q e d m f c w o n u t b j i r l)␤»

[18:25] <moritz> m: my %h = ('a' ... 'z') X=> 1; say %h.keys

[18:25] <camelia> rakudo-moar b6902e: OUTPUT«(x p k h g z a y v s q e d m f c w o n u t b j i r l)␤»

[18:25] <moritz> seems so, but you can't rely on that

[18:25] *** buharin joined
[18:26] *** _mg_ left
[18:26] *** _mg__ is now known as _mg_

[18:26] <llfourn> hmmm yeah, my program has recently started to fail non-deterministically

[18:26] * timeless heads out

[18:27] *** Zero_Dogg left
[18:27] <[Coke]> you using any async/concurrent code?

[18:27] <llfourn> nope

[18:28] *** Zero_Dogg joined
[18:28] <jdv79> i had a program stall for 7m the other day but i'm not sure it had anything to do with rakudo

[18:28] <jdv79> it uses IO::Socket::Async

[18:30] <llfourn> I don't have any IO Asyn or not :S

[18:31] <llfourn> well I have O

[18:31] *** mr-foobar joined
[18:31] <llfourn> and I can see the difference in the O before it fails. Things happen in a different order.

[18:32] <llfourn> but looking closer the order isn't even dervived from a hash.

[18:34] <llfourn> ahhh yes it is

[18:34] <llfourn> but it's not Hash.keys it's Hash.values which *isn't* non-deterministic

[18:35] *** nowan left
[18:35] <llfourn> m: my %h = "a".."z" Z=> (^100).pick xx *; say %h.values

[18:35] <camelia> rakudo-moar b6902e: OUTPUT«(83 19 30 52 62 1 90 97 74 82 4 62 16 11 53 57 5 80 40 71 67 56 48 19 90 66)␤»

[18:35] <llfourn> m: my %h = "a".."z" Z=> (^100).pick xx *; say %h.values

[18:35] <camelia> rakudo-moar b6902e: OUTPUT«(4 22 33 31 42 89 36 31 48 27 47 75 90 94 28 64 76 4 3 79 31 43 1 53 50 33)␤»

[18:35] <llfourn> which *isn't* deterministic rather

[18:37] *** nowan joined
[18:39] <llfourn> oh wait I'm an idiot... pick is introducing the randomness

[18:39] <llfourn> m: my %h = "a".."z" Z=> (^100); say %h.values

[18:39] <camelia> rakudo-moar b6902e: OUTPUT«(23 15 10 7 6 25 0 24 21 18 16 4 3 12 5 2 22 14 13 20 19 1 9 8 17 11)␤»

[18:39] <llfourn> m: my %h = "a".."z" Z=> (^100); say %h.values

[18:39] <camelia> rakudo-moar b6902e: OUTPUT«(23 15 10 7 6 25 0 24 21 18 16 4 3 12 5 2 22 14 13 20 19 1 9 8 17 11)␤»

[18:39] * llfourn needs to take a break

[18:41] <dalek> doc: 147a284 | moritz++ | / (2 files):

[18:41] <dalek> doc: htmlify: include commit hash in the footer.

[18:41] <dalek> doc: review: https://github.com/perl6/doc/commit/147a284c54

[18:41] <moritz> [Coke]: ^^ there ya go

[18:42] *** girafe joined
[18:44] *** cdg left
[18:45] <perlpilot> moritz++  (I was just about to do that :)

[18:45] *** cdg joined
[18:48] <moritz> perlpilot: I was faster :-)

[18:48] *** ribasushi left
[18:50] *** k-man left
[18:52] *** k-man joined
[18:53] *** ribasushi joined
[18:53] *** hcit joined
[18:54] *** huggable left
[18:54] *** huggable joined
[18:57] *** ZoffixW joined
[18:57] <ZoffixW> Does docs.perl6.org actually run on a Mojolicious app? Wasn't there some sort of mowyw thing happening? https://github.com/perl6/doc#building-the-html-documentation

[19:00] *** ptolemarch left
[19:03] <ZoffixW> I guess a better question is what's the purpose of this file: https://github.com/perl6/doc/blob/master/app.pl

[19:04] <ZoffixW> It can be replaced in entirety with a couple of Apache redirects, but if it is in fact in use, I think we have larger possibilities. Like fixing this bug (spurious 404s): https://github.com/perl6/doc/issues/155

[19:07] <dalek> doc: 569472f | (Zoffix Znet)++ | README.md:

[19:07] <dalek> doc: Linkify usefull things

[19:07] <dalek> doc: review: https://github.com/perl6/doc/commit/569472fad2

[19:07] <dalek> doc: d92e30d | (Zoffix Znet)++ | README.md:

[19:07] <dalek> doc: Add missing space

[19:07] <dalek> doc: review: https://github.com/perl6/doc/commit/d92e30d4b3

[19:08] <[Coke]> ZoffixW: it's for running the app locally

[19:08] <ZoffixW> Ah. Thanks.

[19:11] *** ocbtec left
[19:11] *** yqt joined
[19:11] *** ocbtec joined
[19:13] <dalek> doc: cc8577b | (Zoffix Znet)++ | README.md:

[19:13] <dalek> doc: Fix incorrect markdown link syntax

[19:13] <dalek> doc: review: https://github.com/perl6/doc/commit/cc8577b5a7

[19:13] <dalek> doc: 3dccf05 | (Josh Soref)++ | doc/ (6 files):

[19:13] <dalek> doc: clean up various doc links

[19:13] <dalek> doc: review: https://github.com/perl6/doc/commit/3dccf056da

[19:13] <dalek> doc: f993419 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/ (6 files):

[19:13] <dalek> doc: Merge pull request #572 from jsoref/docs

[19:13] <dalek> doc: 

[19:13] <dalek> doc: clean up various doc links

[19:13] <moritz> ZoffixW: mowyw is used for www.perl6.org

[19:13] <dalek> doc: review: https://github.com/perl6/doc/commit/f99341943c

[19:13] *** ptolemarch joined
[19:13] <ZoffixW> Ah, thanks. I thought I was going insane for a second :)

[19:14] <moritz> we all do, no worries :-)

[19:15] <dalek> doc: 7f15517 | (Zoffix Znet)++ | README.md:

[19:15] <dalek> doc: Fix broken link

[19:15] <dalek> doc: review: https://github.com/perl6/doc/commit/7f15517d25

[19:15] *** jjido joined
[19:16] *** FROGGS joined
[19:17] *** kaare_ left
[19:18] *** properly joined
[19:18] *** itaipu joined
[19:20] <FROGGS> o7

[19:20] <ZoffixW> \o

[19:22] *** properly left
[19:22] *** AlexDaniel joined
[19:22] <AlexDaniel> timeless: hi

[19:23] <AlexDaniel> timeless: I have merged/closed some of your pull request

[19:23] *** spider-mario joined
[19:23] <AlexDaniel> somebody had to do it anyway :)

[19:23] <AlexDaniel> huggable: dunno

[19:23] <huggable> AlexDaniel, ¯\_(ツ)_/¯

[19:23] <AlexDaniel> timeless: if I did something wrong please bite me

[19:23] <AlexDaniel> requests*

[19:23] *** perlpilot left
[19:25] *** ZoffixW left
[19:27] *** perlpilot joined
[19:30] *** darutoko left
[19:34] *** cdg left
[19:36] *** cognominal joined
[19:40] *** rurban joined
[19:42] <dogbert17> AlexDaniel: can your bisectbot do anything woth this gist? https://gist.github.com/dogbert17​/d7822b6db5daa88a372c835727bf0729

[19:44] <AlexDaniel> dogbert17: hmm…

[19:44] <dogbert17> AlexDaniel: I'm 100% certain that it worked with - 2016.03-40-g81558b8 built on MoarVM version 2016.03-46-g50c7f6a

[19:47] <AlexDaniel> dogbert17: well, first of all I'm trying to replicate that here

[19:47] <AlexDaniel> dogbert17: no luck so far

[19:48] <dogbert17> AlexDaniel: timotimo succeeded

[19:48] <AlexDaniel> oh really

[19:48] <AlexDaniel> is there any way to speed it up?

[19:49] <AlexDaniel> e.g. start from some high number, not 1

[19:49] <dogbert17> AlexDaniel: on my machine it crashed after 55 sec, perhaps it is possible to gold it down a bit

[19:50] <AlexDaniel> dogbert17: and if it doesn't crash, then what happens?

[19:50] <dogbert17> s/gold/golf

[19:50] <AlexDaniel> dogbert17: there's no time limit on bisectbot, so…

[19:51] <dogbert17> AlexDaniel: the program is my attempt to solve https://projecteuler.net/problem=12

[19:52] *** jjido left
[19:53] <AlexDaniel> dogbert17: finished here just fine on 2016.05

[19:53] <timotimo> i succeeded what?

[19:55] <dogbert17> timotimo: you reproduced the SEGV

[19:56] <AlexDaniel> bisect: my $numFactors = 500;my$sum=0;for (1...*) -> $term {$sum+=$term;my$factors=(1..floor(sqrt($sum))).grep(-> $x { $sum % $x == 0} ).elems * 2;$factors-- if floor(sqrt($sum)) == sqrt($sum);if $factors > $numFactors {say "$sum";last;}}

[19:56] <AlexDaniel> that's not going to work :)

[19:56] <AlexDaniel> my bet is that it is going to ping out

[19:56] *** jjido joined
[19:58] <dogbert17> AlexDaniel: trying to make it crash faster

[19:58] <AlexDaniel> dogbert17: if you find no way to make it crash faster then I'll just bisect it manually with existing builds and that will be it

[19:59] *** bisectable left
[19:59] <AlexDaniel> yeah, that was expected

[19:59] *** _mg_ left
[20:00] <timotimo> oh, yeah, sorry, i didn't follow it up muhc more yet

[20:00] *** cdg joined
[20:00] <dogbert17> timotimo: np, was just asking AlexDaniel if the bisectbot could provide more info

[20:00] *** bisectable joined
[20:00] <AlexDaniel> bisectable: poor creature

[20:01] *** zakharyas joined
[20:01] *** ocbtec left
[20:01] <dogbert17> AlexDaniel: interesting that it didn't crash for you

[20:02] <timotimo> as said, it's optimization and OSR related

[20:02] <timotimo> that makes it finnicky

[20:02] *** mohae left
[20:03] <dogbert17> timotimo: perhaps it's a recent change

[20:04] *** mohae joined
[20:05] *** ufobat left
[20:05] *** _mg_ joined
[20:06] <AlexDaniel> people have no problems with womble huh :)

[20:06] <AlexDaniel> no issue then

[20:08] <AlexDaniel> dogbert17: bisectable runs on another machine, but I cannot reproduce it there too

[20:08] <AlexDaniel> dogbert17: 6bb23a5 is fine

[20:09] *** mohae left
[20:09] <dogbert17> AlexDaniel: how old is that?

[20:09] <AlexDaniel> dogbert17: pretty old, 7 days ago

[20:10] <dogbert17> I can now get it to crash in 31 secs instead of 55

[20:10] <dogbert17> I'm running on an old Core I5 660

[20:11] <AlexDaniel> dogbert17: that's an improvement for sure. But you'll probably have to bisect it yourself, hmm

[20:19] <AlexDaniel> dogbert17: oh, ok, I have something

[20:19] <dogbert17> AlexDaniel: what do you have?

[20:19] <AlexDaniel> dogbert17: a segmentation fault!

[20:19] <dogbert17> yay

[20:20] *** zxd left
[20:20] <AlexDaniel> dogbert17: either it flaps or it was actually “added” in the last 7 days

[20:21] *** _mg_ left
[20:21] *** zakharyas left
[20:22] <dogbert17> AlexDaniel: very interesting

[20:23] <timotimo> the crash is call stack or invocation related

[20:23] <timotimo> jnthn just recently changed stuff about that

[20:29] <dogbert17> ok, I have it down to 3.5 sec now

[20:29] *** Praise- joined
[20:29] *** Praise- left
[20:29] *** Praise- joined
[20:29] <AlexDaniel> dogbert17: oh really? Just slam it into bisectbot

[20:30] <dogbert17> AlexDaniel: is it bisectbot: program

[20:30] <AlexDaniel> dogbert17: bisect: code

[20:31] <dogbert17> bisect: my $sum = 10082800;for (4601...4900) -> $term {   $sum += $term;   my $sq = floor(sqrt($sum));   my $factors = (1..$sq).grep(-> $x { $sum % $x == 0} ).elems * 2; }

[20:32] <bisectable> dogbert17: on both starting points the exit code is 0 and the output is identical as well

[20:32] *** mohae joined
[20:32] *** domidumont left
[20:32] <dogbert17> will this work?

[20:36] <AlexDaniel> dogbert17: well, my manual git bisect pointed me to this https://github.com/rakudo/rakudo/commit/65e1b54c9d751b5d85ce650369391a80baf8113a

[20:36] <AlexDaniel> but uh…

[20:36] <lizmat> I broke stuff ?

[20:36] <AlexDaniel> lizmat: wait, too early

[20:37] <lizmat> well, looking at who has done commits in the past days, there's a good chance it's my fault  :-)

[20:37] <AlexDaniel> bisect: good=6bb23a my $sum = 10082800;for (4601...4900) -> $term {   $sum += $term;   my $sq = floor(sqrt($sum));   my $factors = (1..$sq).grep(-> $x { $sum % $x == 0} ).elems * 2; }

[20:37] <dogbert17> m: my $sum = 10082800;for (4601...4900) -> $term {   $sum += $term;   my $sq = floor(sqrt($sum));   my $factors = (1..$sq).grep(-> $x { $sum % $x == 0} ).elems * 2; }

[20:37] <bisectable> AlexDaniel: on both starting points the exit code is 0 and the output is identical as well

[20:37] <camelia> rakudo-moar b6902e: OUTPUT«(signal SEGV)»

[20:38] <AlexDaniel> star: my $sum = 10082800;for (4601...4900) -> $term {   $sum += $term;   my $sq = floor(sqrt($sum));   my $factors = (1..$sq).grep(-> $x { $sum % $x == 0} ).elems * 2; }

[20:38] <camelia> star-m 2016.01: ( no output )

[20:38] <dogbert17> star is old

[20:38] <AlexDaniel> bisect: good=6bb23a my $sum = 10082800;for (4601...4900) -> $term {   $sum += $term;   my $sq = floor(sqrt($sum));   my $factors = (1..$sq).grep(-> $x { $sum % $x == 0} ).elems * 2; }; say ‘hi’

[20:38] *** sherwool joined
[20:38] <bisectable> AlexDaniel: exit code is 0 on both starting points, bisecting by using the output

[20:38] <bisectable> AlexDaniel: (2016-06-09) https://github.com/rakudo/rakudo/commit/65e1b54

[20:38] <AlexDaniel> lizmat: ↑

[20:39] <dogbert17> oops, you got something?

[20:39] <AlexDaniel> lizmat: I think that… yeah…

[20:39] <AlexDaniel> dogbert17: same commit that I've found manually

[20:39] <dogbert17> AlexDaniel: cool

[20:39] <AlexDaniel> bisect: my $sum = 10082800;for (4601...4900) -> $term {   $sum += $term;   my $sq = floor(sqrt($sum));   my $factors = (1..$sq).grep(-> $x { $sum % $x == 0} ).elems * 2; }; say ‘hi’

[20:39] <lizmat> dogbert17 AlexDaniel and what did I break exactly ?

[20:40] <bisectable> AlexDaniel: exit code is 0 on both starting points, bisecting by using the output

[20:40] <bisectable> AlexDaniel: (2016-06-09) https://github.com/rakudo/rakudo/commit/65e1b54

[20:40] <lizmat> because the spectests have been clean all the time for all the commits I've done

[20:40] <AlexDaniel> lizmat: the code above

[20:40] <AlexDaniel> lizmat: try to run it, it segfaults

[20:40] <AlexDaniel> lizmat: I'm not saying that it's your fault, but it happened after your commit :)

[20:41] <lizmat> segfault confirmed here

[20:41] <AlexDaniel> lizmat: it is also confirmed by timotimo, camelia and bisectbot

[20:43] <AlexDaniel> yep, does not segfault on 42f07cd, segfaults on 65e1b54

[20:43] <timotimo> well, as i said, it's about optimization. in this case, the dynamic optimization we have in moar

[20:43] <lizmat> I wonder whether the use of Nil in a nqp::until could be the trigger

[20:44] <lizmat> oops, looking at wrong method  :-)

[20:44] <timotimo> there's a loop in some iterator method somewhere that gets on-stack-replaced and when looking at the method it's in finds out it doesn't have a callsite, i.e. a null pointer at that place

[20:44] <timotimo> and that shouldn't ever have a null pointer there, jnthn pointed out to me

[20:44] <lizmat> ok, if I change the int $i in count-only to an Int, it doesn't segfault

[20:45] * AlexDaniel is more worried about the fact that segfaults are not catched by bisectbot unless you have some output…

[20:46] <dogbert17> AlexDaniel: this 'good' command, does it enable you to start from a known good commit thereby speeding up the bisect prpcess?

[20:46] <AlexDaniel> dogbert17: yes. It defaults to 2015.12

[20:46] <AlexDaniel> dogbert17: bad defaults to HEAD

[20:47] <AlexDaniel> bisect: good=HEAD~150 my $sum = 10082800;for (4601...4900) -> $term {   $sum += $term;   my $sq = floor(sqrt($sum));   my $factors = (1..$sq).grep(-> $x { $sum % $x == 0} ).elems * 2; }; say ‘hi’

[20:47] *** jjido left
[20:47] <lizmat> timotimo: should I revert the change in count-only, or keep it ?

[20:47] <bisectable> AlexDaniel: exit code is 0 on both starting points, bisecting by using the output

[20:47] <bisectable> AlexDaniel: (2016-06-09) https://github.com/rakudo/rakudo/commit/65e1b54

[20:47] <timotimo> oof

[20:48] <timotimo> but yeah, count-only is the method in which it b0rks

[20:48] <timotimo> there's an underlying problem that wants to be fixed at the moar level

[20:49] <AlexDaniel> can somebody submit a bug report about this?

[20:49] <dogbert17> AlexDaniel: i believe that perlpilot wondered if the bisectbot can handle gists

[20:49] <timotimo> yeah

[20:49] <timotimo> well, someone did ask that

[20:49] <AlexDaniel> well, then it's probably better to integrate it into camelia

[20:50] <AlexDaniel> because we are starting to see some duplicated functionality :)

[20:50] *** cognominal left
[20:50] <AlexDaniel> people voted against that very early, claiming that these bots should probably be separate

[20:50] <AlexDaniel> but if you want gists now… then I don't know :)

[20:51] <dogbert17> AlexDaniel++ for bisectbot

[20:52] *** rurban1 joined
[20:52] *** buharin left
[20:53] *** regreg joined
[20:53] <regreg> is there an imap library for perl6?

[20:54] <lizmat> regreg: no idea, check modules.perl6.org  :-)

[20:54] <[Coke]> https://github.com/retupmoca/P6-Net-IMAP

[20:54] <[Coke]> ... which you can find by doing what lizmat said.

[20:54] <regreg> modules.perl6.org?

[20:54] <regreg> okkkk

[20:54] <AlexDaniel> yes, modules.perl6.org :)

[20:54] *** rurban left
[20:54] <regreg> P6-Net-IMAP

[20:54] <regreg> bingo!

[20:55] <lizmat> timotimo dogbert17 regarding the segfault, it looks like replacing the nqp::eqaddr() back with infix:<=:=> makes the segfault go away

[20:55] <regreg> basically i need to download about 115k email headers and delete the emails from the server

[20:55] <regreg> (a datamining project)

[20:56] *** jjido joined
[20:56] *** skids left
[20:56] <dogbert17> lizmat++

[20:57] *** Praise- left
[20:58] *** Praise joined
[20:58] <lizmat> do we have a ticket number for the segfault ?

[20:59] <dogbert17> lizmat: not from me I'm afraid all my attempts (2) to report something to RT has been dismal failures, don't know why though

[21:00] <lizmat> have you tried sending an email to [email@hidden.address] ?

[21:01] <dogbert17> lizmat: that is exactly what I have done

[21:01] <lizmat> hmmmm...

[21:01] <lizmat> lemme try then

[21:01] <regreg> how do i use a library from github?

[21:01] <dogbert17> lizmat: thank you

[21:01] <regreg> i download and unpack it into a directory, then?

[21:02] <regreg> sorry i'm a noob

[21:02] <dogbert17> regreg: do you have a program called panda installed on your machine?

[21:03] <sufrostico> regreg: https://github.com/tadzik/panda/

[21:03] <regreg> dogbert17,  a sec i'll do an apt-file search panda

[21:03] <AlexDaniel> no panda in debian yet, as far as I remember

[21:03] <regreg> ouch

[21:04] <AlexDaniel> regreg: by the way, what version of perl6 are you using?

[21:04] <regreg> This is perl6 version 2015.11 built on MoarVM version 2015.11

[21:04] <regreg> should i download a fresh copy instead?

[21:04] <AlexDaniel> regreg: yea

[21:04] <lizmat> regreg: that would be advisable

[21:05] <regreg> ok

[21:05] <dogbert17> regreg: http://perl6.org/downloads/

[21:05] <AlexDaniel> regreg: sometimes we have people here trying to use 2014.07 or something… that's completely wrong :)

[21:05] <AlexDaniel> regreg: 2015.11 is not too bad but it's still pre-v6.c

[21:05] <regreg> should i first remove the rakudo package from debian?

[21:05] <AlexDaniel> yea

[21:06] <AlexDaniel> regreg: by the way, 2016.04 is in debian testing

[21:06] <lizmat> https://rt.perl.org/Ticket/Display.html?id=128357   # we haz a number

[21:06] <AlexDaniel> lizmat++

[21:06] <regreg> this one: http://rakudo.org/downloads/star/rakudo-star-2016.04.tar.gz?

[21:06] <dogbert17> lizmat++

[21:07] <dogbert17> regreg: should work quite nicely I think

[21:08] * regreg compiling

[21:09] <AlexDaniel> regreg: another option is to use rakudobrew

[21:12] * regreg running tests

[21:12] <AlexDaniel> .tell perlpilot right now it does not handle gists and the way it handles long-running programs is non-ideal. But you can send your stuff to me and I'll run it in the terminal

[21:12] <yoleaux> AlexDaniel: I'll pass your message to perlpilot.

[21:13] <lizmat> AlexDaniel timotimo dogbert17 https://github.com/rakudo/rakudo/commit/41736009bf fixes the segfault (for now)

[21:14] <dogbert17> lizmat++ again :)

[21:15] <lizmat> yw  :-)   I hope someone will be able to trace the underlying issue that causes the segfault

[21:15] <lizmat> dogbert17: but you should be able to continue now

[21:15] <dogbert17> lizmat: more project Euler then :)

[21:15] <lizmat> :-)

[21:16] <dogbert17> I have solved a bunch of them and I sometimes rerun them in order to see performance improvements

[21:17] <AlexDaniel> dogbert17: er, do you realize that this commit was made just 13 hours ago?

[21:18] <AlexDaniel> like… how often do you rerun them? :)

[21:18] <dogbert17> AlexDaniel: actually I'm ill atm, fighting an ear infection and I had nothing better to do :)

[21:19] <AlexDaniel> dogbert17: I'm ill too :(

[21:20] <dogbert17> In fact I'll rerun the previously segfaulting code, in march it took 5m50s on my machine, it should be a bit faster now

[21:20] * lizmat hopes so

[21:20] <dogbert17> lets see

[21:21] *** itaipu left
[21:21] *** firstdayonthejob joined
[21:21] *** itaipu joined
[21:21] *** rurban1 left
[21:23] *** rindolf left
[21:23] *** FROGGS left
[21:25] <dogbert17> m: my $sum = 10082800;for (4601...4900) -> $term {   $sum += $term;   my $sq = floor(sqrt($sum));   my $factors = (1..$sq).grep(-> $x { $sum % $x == 0} ).elems * 2; }

[21:25] <camelia> rakudo-moar 8cfa6c: OUTPUT«(signal SEGV)»

[21:25] <dogbert17> so when will camelia be updated?

[21:25] <lizmat> no idea

[21:25] <lizmat> moritz might know

[21:26] <AlexDaniel> dogbert17: patience, my friend, patience

[21:26] <dogbert17> I made a rakudobrew bild moar and got This is Rakudo version 2016.05-81-g8cfa6c7 built on MoarVM version 2016.05-17-g6075599, hmm

[21:27] * dogbert17 tries again

[21:27] <AlexDaniel> dogbert17: yea, you need g4173600, not g8cfa6c7

[21:27] <dogbert17> must have been too quick

[21:29] <regreg> AlexDaniel, testing while doing make install is normal? it takes forever to install, much longer than compilation time

[21:33] *** rurban joined
[21:33] <AlexDaniel> regreg: ¯\_(ツ)_/¯

[21:33] <AlexDaniel> regreg: I've never noticed

[21:35] *** cpage_ left
[21:40] <dogbert17> lizmat: everything works and execution time is down to 4m14s from 5m50s in March

[21:40] <regreg> Rakudo Star has been built and installed successfully.

[21:40] <regreg> AlexDaniel,  finally :)

[21:41] <lizmat> m: say 254 / 350

[21:41] <camelia> rakudo-moar 8887a7: OUTPUT«0.725714␤»

[21:41] <lizmat> not bad  :-)

[21:41] <dogbert17> indeed :-)

[21:42] <dogbert17> regreg: now you should have the mosule installer panda

[21:42] <dogbert17> s/mosule/module/

[21:42] <regreg> dogbert17, how do i test if i have it enabled?

[21:42] <regreg> there is no panda binary in rakudo/bin

[21:43] <dogbert17> regreg: what happens if you type panda on the commandline?

[21:43] <regreg> command not found

[21:43] <dogbert17> that's strange

[21:44] <regreg> perl6 works ok

[21:46] <regreg> ah

[21:46] <regreg> i've found panda

[21:46] <dogbert17> regreg: cool

[21:46] <regreg> it's in share/site/bin

[21:46] <regreg> more exacly ~/opt/rakudo-star-2016.04/share/perl6/site/bin

[21:47] <dogbert17> regreg: panda install <the-module-you-want>

[21:47] <regreg> ok, doing it..

[21:47] *** AlexDaniel left
[21:48] <regreg> *resolve stage failed for P6-Net-IMAP: Project P6-Net-IMAP not found in the ecosystem. Maybe try "panda update" first?)

[21:48] <regreg> not found

[21:49] <regreg> panda install Net::IMAP, this one should probably work

[21:49] <dogbert17> regreg: probably :)

[21:49] <regreg> because it's Net::IMAP not  P6-Net-IMAP

[21:50] <dogbert17> I think you can write panda list to see all modules

[21:50] <regreg> great

[21:50] <lizmat> good night, #perl6!

[21:50] <regreg> good night lizmat

[21:50] <dogbert17> good night lizmat

[21:52] *** jjido left
[21:52] <regreg> http://pastebin.com/Khw9xVVV

[21:52] *** ptolemarch left
[21:52] <regreg> i get a failed test

[21:53] <regreg> ==> Testing Email::MIME

[21:53] <regreg> ===SORRY!===

[21:53] *** rurban1 joined
[21:53] <regreg> dogbert17, could you please if you are kind to check out that error message in above pastecode?

[21:54] *** rurban left
[21:55] *** setty1 left
[21:58] <dogbert17> regreg: hmm, seems to work for me, full disk?

[21:58] <regreg> 28% in /

[21:58] <regreg>  28% /home

[21:59] <dogbert17> regreg: I was wrong it failed for me as well :(

[22:00] <regreg> actually there seems to be some progress if i run the command panda install again

[22:02] <dogbert17> regreg: sounds strange but promising

[22:03] *** TEttinger joined
[22:03] *** rurban joined
[22:04] *** rurban1 left
[22:04] <regreg> i think that the dependecies have been installed, currently testing  ==> Testing Net::IMAP

[22:04] *** cpage_ joined
[22:04] <regreg> failed

[22:05] <regreg> http://pastebin.com/bTb9Ws9T

[22:06] <regreg> here's the error

[22:06] <regreg> is there any way i can mess with the code before compiling and installing it? i might be able to correct minor bugs

[22:06] <regreg> (assuming they are not too perl6 specific since i'm a perl noob)

[22:06] <regreg> ?

[22:07] *** rurban left
[22:07] *** rurban joined
[22:08] <dogbert17> regreg: try   panda --notests install  Net::IMAP   

[22:08] <regreg> sounds risky :) trying it..

[22:09] <regreg> Successfully installed Net::IMAP

[22:09] <dogbert17> regreg: risky indeed :)

[22:10] <regreg> does default ubuntu emacs distribution have support for perl6?

[22:11] <regreg> or what is the recommended editor under xfce?

[22:14] <dogbert17> atom is what I use atm 

[22:15] <dogbert17> I believe that there is support for vim as well

[22:16] <regreg> i don't like vim :)

[22:16] *** rurban left
[22:16] <dogbert17> :)

[22:16] *** rurban joined
[22:16] *** Sgeo_ joined
[22:19] *** patrickz left
[22:19] *** girafe left
[22:20] *** wamba left
[22:30] *** spider-mario left
[22:35] *** bjz_ left
[22:39] *** rurban_ left
[22:44] *** itaipu left
[22:54] *** huggable left
[22:54] *** huggable joined
[22:55] *** araujo left
[22:58] *** araujo joined
[23:00] *** bjz joined
[23:01] *** araujo left
[23:02] *** araujo joined
[23:03] *** jack_rabbit joined
[23:07] *** firstdayonthejob left
[23:14] *** bjz left
[23:14] *** RabidGravy left
[23:15] *** raiph left
[23:16] *** raiph joined
[23:16] *** kid51 joined
[23:18] *** kurahaupo joined
[23:18] <sufrostico> Vim Rocks!!!

[23:31] * grondilu suddenly wonders if some people have Vim tattoos.  Googles it.

[23:32] <geekosaur> this strikes me as something best not searched for :p

[23:32] <timotimo> i can do the vim gang sign

[23:32] <geekosaur> (rule 34 in 3, 2, ...)

[23:32] <timotimo> bedtime!

[23:33] <grondilu> well, apparently there's none.

[23:33] <timotimo> start one, then :)

[23:34] <grondilu> neh, I'm really not into tattoos but I've read a bit about this hobby lately on reddit.

[23:37] *** cdg left
[23:37] <grondilu> not related at all : I've mentioned it the other day, but here I'll go again : how could I have the product of three objects been implemented by a procedure?  like $a*$b*$c would call my-product($a, $b, $c) instead of my-product($a, my-product($b, $c))?

[23:37] <timotimo> you'd have to set the operator be list assoc

[23:37] <grondilu> hum... tell me more.

[23:37] <timotimo> not sure if/how you can do that in your code

[23:38] <timotimo> i think you can only have one kind of assoc per operator, so with * you're potentially out of luck already

[23:38] * timotimo goes to bed actually

[23:39] <grondilu> m: sub infix:<é>(*@a) { [+] @a }; say 5 é 4 é 2

[23:39] <camelia> rakudo-moar 87e91c: OUTPUT«11␤»

[23:40] <grondilu> m: multi infix:<*>($a, $b, $c) { Inf }; say 5 * 2 * 3

[23:40] <camelia> rakudo-moar 87e91c: OUTPUT«30␤»

[23:42] *** labster left
[23:51] <arnsholt> grondilu: You'll probably have to define your own operator and make it list associative

[23:52] <arnsholt> infix:<*> is declared as left associative, so you're out of luck there

[23:52] <arnsholt> It *might* be possible to hack the assoc of the existing operator, but that smells like a bad idea

[23:56] *** BenGoldberg joined
