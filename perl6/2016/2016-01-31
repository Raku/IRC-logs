[00:10] *** pmurias left
[00:23] *** ely-se left
[00:28] <BenGoldberg> m: my $foo = 42; say ++$foo xx 3;

[00:28] <camelia> rakudo-moar 2e1782: OUTPUT«(43 44 45)␤»

[00:28] <BenGoldberg> m: my $foo = 42; say $foo++ xx 3;

[00:28] <camelia> rakudo-moar 2e1782: OUTPUT«(42 43 44)␤»

[00:29] *** woolfy left
[00:30] <AlexDaniel> BenGoldberg: didn't expect it to work

[00:31] <timotimo> https://stackoverflow.com/questions/35027544/why-are-inline-if-statements-an-average-of-at-least-one-third-slower-than-other/35108936#35108936

[00:32] <AlexDaniel> :)

[00:35] <skids> Maybe that answer could be committed to perl6/user-experience.

[00:40] <timotimo> oh, damn, maybe i've made a "little" mistake

[00:41] <timotimo> i might have left in the "$word.ends-with('rl') && ..."

[00:41] <timotimo> which dramatically speeds up things, too

[00:42] <skids> m: my $f = "."; say do { $f ~= "." } X~ 1,2,3; my $foo = 42; say do { $foo++ } X~ 1,2,3

[00:42] <camelia> rakudo-moar 2e1782: OUTPUT«(..1 ..2 ..3)␤(421 422 423)␤»

[00:42] <skids> Good.

[00:43] * skids wonders why xx does that.

[00:44] <skids> m: my $f = "."; say do { $f ~= "." } xx 3

[00:44] <camelia> rakudo-moar 2e1782: OUTPUT«(.... .... ....)␤»

[00:44] <timotimo> it creates a list of $f three times

[00:44] <skids> m: my $foo = 42; say do { $foo++ } xx 3

[00:44] <camelia> rakudo-moar 2e1782: OUTPUT«(42 43 44)␤»

[00:44] <timotimo> m: my $f = "."; say do { ($f ~= ".")<> } xx 3

[00:44] <camelia> rakudo-moar 2e1782: OUTPUT«(.. ... ....)␤»

[00:44] <timotimo> postfix <> deconts for you

[00:45] <timotimo> yeah, my answer on SO was wrong, it's not 10x

[00:56] *** jack_rabbit left
[01:02] <timotimo> composed a new answer

[01:03] <timotimo> i hope it isn't just too rambly

[01:12] *** jack_rabbit joined
[01:19] *** raiph joined
[01:20] *** leont left
[01:23] *** revhippie left
[01:30] *** pecastro left
[01:34] *** mcmillhj left
[01:37] *** revhippie joined
[01:42] <MadcapJake> what does the associative indexing error mean?

[01:42] *** xpen joined
[01:46] <AlexDaniel> MadcapJake: which one exactly?

[01:46] <MadcapJake> "Type Str does not support associative indexing."

[01:46] *** xpen left
[01:46] <gfldex> m: qq { $foo<html-tag> }

[01:46] <camelia> rakudo-moar 2e1782: OUTPUT«5===SORRY!5=== Error while compiling /tmp/fHvxTH46LC␤Variable '$foo' is not declared␤at /tmp/fHvxTH46LC:1␤------> 3qq { 7⏏5$foo<html-tag> }␤»

[01:47] <gfldex> m: my $foo; qq { $foo<html-tag> }

[01:47] <camelia> rakudo-moar 2e1782: OUTPUT«WARNINGS for /tmp/GbkLA0Kq5z:␤Useless use of " $foo<html-tag> " in expression " $foo<html-tag> " in sink context (line 1)␤Use of uninitialized value $v of type Any in string context␤Any of .^name, .perl, .gist, or .say can stringify undefined things,…»

[01:47] <gfldex> m: my $foo; dd qq { $foo<html-tag> }

[01:47] <camelia> rakudo-moar 2e1782: OUTPUT«Use of uninitialized value $v of type Any in string context␤Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at /tmp/fgluhjeP_Z line 1␤"  "␤»

[01:47] <gfldex> m: my $foo = "abc"; dd qq { $foo<html-tag> }

[01:47] <camelia> rakudo-moar 2e1782: OUTPUT«Type Str does not support associative indexing.␤  in block <unit> at /tmp/5DsSOz4SMF line 1␤␤Actually thrown at:␤  in block <unit> at /tmp/5DsSOz4SMF line 1␤␤»

[01:47] *** mattp_ left
[01:47] <gfldex> MadcapJake: this one? ^^^

[01:48] <MadcapJake> yeah but what's dd? I'm not using that

[01:48] <gfldex> doesn't matter, you got a quote problem

[01:48] <gfldex> m: my $foo = "abc"; dd Q:c { {$foo}<html-tag> }

[01:48] <camelia> rakudo-moar 2e1782: OUTPUT«" \{\$foo}<html-tag> "␤»

[01:48] <gfldex> if found that works best when dealing with xml/html

[01:49] *** lokien_ left
[01:49] <MadcapJake> return Template::Mustache.render(slurp('./views/result.hbs'), { :$community, :message("Success! You were already invited.<br>Visit the <a href=\"https://$slack-url\">$community</a> Slack.") }, |%templates);

[01:50] <MadcapJake> THat's the line causing the error

[01:50] <gfldex> $community</a> <-- culprit

[01:50] <MadcapJake> ahhhhh

[01:51] <MadcapJake> i get it now, it thinks that's a <> postcircumfix

[01:51] <gfldex> indeed

[01:51] <MadcapJake> gfldex: thanks!

[01:54] <MadcapJake> this is almost done!

[01:54] *** yqt left
[01:54] <MadcapJake> moritz: any chance I could host this on hack.p6c.org?  It's an invite site for Perl6 slack (written in Perl 6)

[01:59] *** Fleurety joined
[02:01] <AlexDaniel> interestingly I don't see any way to disable “$var<foo>” behavior

[02:01] <AlexDaniel> m: my $x = ‘test’; say Q:s‘$x<b>’ # still we have a problem

[02:01] <camelia> rakudo-moar 2e1782: OUTPUT«Type Str does not support associative indexing.␤  in block <unit> at /tmp/EZdXuHFoO9 line 1␤␤Actually thrown at:␤  in block <unit> at /tmp/EZdXuHFoO9 line 1␤␤»

[02:01] <AlexDaniel> so I guess you have to use {}

[02:02] <gfldex> AlexDaniel: there is a RT for that. I can find it if you need that.

[02:02] <AlexDaniel> gfldex: out of curiosity – maybe. But other than that I don't really need it :)

[02:03] <AlexDaniel> m: my $x = ‘test’; say “{$x}<b>” # after all, this is not too bad

[02:03] <camelia> rakudo-moar 2e1782: OUTPUT«test<b>␤»

[02:04] <gfldex> AlexDaniel: https://rt.perl.org/Public/Bug/Display.html?id=127226

[02:05] <AlexDaniel> ah that one. But it's a little bit different

[02:05] <AlexDaniel> or so it seems

[02:07] *** jeek left
[02:07] *** mattp_ joined
[02:12] <dalek> doc: 4b19544 | LLFourn++ | doc/Type/Signature.pod:

[02:12] <dalek> doc: s/won't-work/wont-work/

[02:12] <dalek> doc: 

[02:12] <dalek> doc: and a typo

[02:12] <dalek> doc: review: https://github.com/perl6/doc/commit/4b1954455c

[02:13] <MadcapJake> how do you access environment variables again? I can't seem to recall or find it

[02:14] *** josgraha_ left
[02:15] *** lonewolf28 left
[02:15] <AlexDaniel> MadcapJake: %*ENV<foo> ?

[02:15] <MadcapJake> yeah, thanks

[02:16] <MadcapJake> suprised that's not in the language/variables doc page

[02:17] <AlexDaniel> you can kinda guess it :)

[02:17] <revhippie> m: sub won't-work { say "but does" }; won't-work();

[02:17] <camelia> rakudo-moar 2e1782: OUTPUT«but does␤»

[02:17] <llfourn> REALLY?

[02:17] <yoleaux> 30 Jan 2016 08:51Z <nine> llfourn: thanks for working on the require/import stuff :)

[02:17] <AlexDaniel> it has to be a hash, * is there because it's kinda global, and ENV is kinda obvious :)

[02:18] <revhippie> llfourn: ' has the same rules as - in identifiers

[02:18] <llfourn> revhippie: right! well I guess I will fix that...

[02:19] <llfourn> I actually did try that but it didn't work for me hrmph

[02:19] <MadcapJake> AlexDaniel: yeah i couldn't remember if ENV was a subhash of some other dynamic (especially because it wasn't listed)

[02:19] <llfourn> thanks!

[02:19] *** jme_ joined
[02:20] <MadcapJake> just moving the token to an ENV var so I can post this to github, then I'll start by at least hosting in on heroku, anyone done a heroku with perl 6 before?

[02:21] *** mattp_ left
[02:21] <revhippie> llfourn: you're welcome!

[02:22] <AlexDaniel> m: my \ꞌ'ꞌ'ꞌ = 42; say ꞌ'ꞌ'ꞌ

[02:22] <camelia> rakudo-moar 2e1782: OUTPUT«42␤»

[02:22] <dalek> doc: 67a4e12 | LLFourn++ | doc/Type/Signature.pod:

[02:22] <dalek> doc: s/wont-work/won't-work/

[02:22] <dalek> doc: 

[02:22] <dalek> doc: I had no idea that that worked. Excuse me.

[02:22] <dalek> doc: review: https://github.com/perl6/doc/commit/67a4e1235f

[02:26] *** p_p_r joined
[02:27] <dalek> doc: 1f83b6c | raiph++ | doc/Language/variables.pod:

[02:27] <dalek> doc: Add %*ENV

[02:27] <dalek> doc: review: https://github.com/perl6/doc/commit/1f83b6c608

[02:28] <AlexDaniel> MadcapJake: interestingly ENV appears in so many places

[02:28] <AlexDaniel> e.g. http://doc.perl6.org/language/5to6-perlvar

[02:28] <AlexDaniel> oh wow, raiph++

[02:28] <MadcapJake> oh, i've never even looked at the 5to6 stuff (never programmed in Perl 5)

[02:28] <MadcapJake> raiph++

[02:28] <AlexDaniel> MadcapJake: okay, what about this? http://doc.perl6.org/type/Hash

[02:28] <AlexDaniel> :)

[02:29] <AlexDaniel> .u ꞌ

[02:29] <yoleaux> U+A78C LATIN SMALL LETTER SALTILLO [Ll] (ꞌ)

[02:29] <Juerd> One of these days I'm going to suggest an overhaul to the way those documents are formatted. But first I need to think of how. :)

[02:29] <Juerd> I'm really annoyed by the insanely long pages.

[02:30] <MadcapJake> nice! That reminds me, I wish there was a link at the top of each type to the general type section,  it's annoying to have to scroll through the list of methods or click the first entry and scroll back up. is this possible to add?

[02:30] <Juerd> But at the same time, I like scrolling much better than hidden stuff or lazy loading.

[02:30] <MadcapJake> Juerd: is that what you were talking about? ^

[02:30] <Juerd> So it just has to take up less vertical space. Somehow.

[02:30] <AlexDaniel> I don't mind these long pages. Long pages means I can ctrl+f without any problem

[02:31] <Juerd> MadcapJake: My keyboard has a dedicated [Home] button

[02:31] <dalek> doc: 22ea0e0 | (Wenzel P. P. Peppmeyer)++ | doc/Language/faq.pod:

[02:31] <dalek> doc: faq string interpolation and html

[02:31] <dalek> doc: review: https://github.com/perl6/doc/commit/22ea0e0e29

[02:31] <Juerd> MadcapJake: I never find it problematic to scroll back to the top of any page.

[02:31] <MadcapJake> no i don't mean the top of the page

[02:31] <AlexDaniel> gfldex++

[02:31] <Juerd> What do you mean then?

[02:31] <MadcapJake> each type has a general section (like the one where you showed me has the env stuff in it)

[02:31] <MadcapJake> but there is no way to move right to it

[02:31] <Juerd> That wasn't me. I showed nothing to anyone :)

[02:31] *** abaugher left
[02:32] * AlexDaniel hides

[02:32] <Juerd> Oh, that section

[02:32] <MadcapJake> AlexDaniel did I meant :P

[02:32] <Juerd> Yes, that should go before the TOC

[02:32] <Juerd> Or maybe the TOC should just be next to the content instead of above it

[02:32] <Juerd> I dunno

[02:32] <MadcapJake> either that or have a link to it so that you can just get right to it.  currently the only routes are either scrolling through the TOC or clicking the first entry and scrolling back to the general section

[02:33] *** abaugher joined
[02:33] <MadcapJake> often the general section has some of the most useful info (to me) and it's the most difficult to reach!

[02:33] <AlexDaniel> or maybe the first entry in TOC should be “Description” or something

[02:33] <AlexDaniel> so that you can click on it and go to that section immediately

[02:33] <MadcapJake> AlexDaniel: yeah that's what I was thinkingt

[02:34] <MadcapJake> Though personally, if it was possible to move the TOC to the side (for large screen widths) that would be ideal

[02:34] <Juerd> http://juerd.nl/i/c09fb3f5ef6f536e2f7bfdd8151db36d.png

[02:34] <Juerd> It's a start.

[02:34] <MadcapJake> Juerd: it's gorgeous!

[02:35] <Juerd> Anyhow, maybe I'll look into it a bit more later

[02:35] <Juerd> Or by all means take this idea and make it beautiful while I'm asleep

[02:35] <Juerd> But for now, good night #perl6!

[02:35] <MadcapJake> Juerd: I'll see what I can do, what exactly did you do? just a css float:left?

[02:35] <llfourn> o/

[02:35] <ugexe> it should have a large hover over begging me to enter my email

[02:35] <Juerd> MadcapJake: Yes. Which means it'll start ugly from where the TOC ends.

[02:35] <Juerd> s/start/start to get/

[02:36] *** jme_ left
[02:36] <MadcapJake> Juerd: gotcha

[02:36] <Juerd> Anyhow, good night :)

[02:36] <Juerd> z &

[02:36] <MadcapJake> nighty night!

[02:36] <AlexDaniel> and you also had to make the font smaller :/

[02:36] *** jme_ joined
[02:40] <MadcapJake> here's a thought: http://postimg.org/image/wndyk9bch/

[02:41] <Juerd> Okay, a few things then before I really go to bed

[02:42] <Juerd> AlexDaniel: Only because I couldn't figure out how to add some css to <li>, to reduce the huge indents

[02:42] <Juerd> MadcapJake: IMHO the text is already too wide for comfortable reading and the extra column helps reduce that issue as well.

[02:42] <AlexDaniel> Juerd: I don't see much available space there :)

[02:42] <Juerd> MadcapJake: And I don't think the out-of-bounds layout would fly on portrait oriented devices

[02:43] <Juerd> So, afk! &

[02:43] <MadcapJake> no you'd have to set it as @media: screen (or however that's written, not a css wizard xD )

[02:44] * MadcapJake is gonna make a perl6-buildpack for heroku now

[02:50] *** TimToady left
[02:52] *** TimToady joined
[02:55] *** p_p_r left
[02:56] *** p_p_r joined
[02:59] <jme_> did anyone know why Pod::Coverage keeps failing testing with `panda install Linenoise` ?

[03:00] *** jme_ left
[03:01] *** jme_ joined
[03:06] <llfourn> jme_: I just ran panda --force install Linenoise and it worked

[03:09] <jme_> llfourn: sweet!

[03:17] *** jeek joined
[03:18] *** Herby_ joined
[03:18] <Herby_> Evening, everyone!

[03:18] <Herby_> \o

[03:18] <skids> o/

[03:18] <AlexDaniel> * o/

[03:21] *** orbus left
[03:21] <revhippie> i don't see those operators in the docs

[03:24] *** jme_ left
[03:35] *** noganex joined
[03:38] <AlexDaniel> revhippie: at least * is spec-ed: https://design.perl6.org/S99.html#good_*

[03:38] *** noganex_ left
[03:39] *** raiph left
[03:39] *** kid51_ joined
[03:39] <revhippie> AlexDaniel: ha!

[03:41] *** kid51 left
[03:42] *** kid51_ is now known as kid51

[03:53] <MadcapJake> What are some common perl6 web deployment patterns? app.pl6 in the main source dir? a RUN script in the main source dir? a bin/file referenced in META6.json? Are these considered standard and are there others?

[03:54] <AlexDaniel> MadcapJake: I don't think that there are any common patterns yet

[03:55] <MadcapJake> bummer xD

[03:57] <llfourn> MadcapJake: when you figure them out let us know :)

[03:57] <MadcapJake> I really miss «"main": "lib/main"» and «"scripts": {"start": "node app.js"}» from nodejs land

[03:58] <llfourn> I never used it. What does it do?

[03:59] <llfourn> lets you do 'node start' or something without referring to the actual script?

[03:59] <MadcapJake> a lot of node frameworks hook into the main value as a way to find the entry point in an application.  and the scripts hash was a list of shortcuts to scripts that you could run from the command line and start is a builtin one with special support

[04:00] <MadcapJake> lets you do «npm run build; npm run test; npm start» to build, test and run

[04:01] <llfourn> yeah sounds handy to me

[04:01] <MadcapJake> also npm scripts had their own private environment that included everything in node_modules, so you didn't every have to fudge with your PATH

[04:01] <llfourn> why would a node framework want to know the entrypoint out of interest?

[04:02] <llfourn> (I get why npm and other cli tools would)

[04:02] *** SCHAAP137 left
[04:03] <MadcapJake> if you import a module, main was considered the primary entry point for including that module, so anything you want publicly available to users must be accessible from there

[04:03] <llfourn> perhaps we can build it into panda or some other cli tool. panda start etc which looks in META6.json.

[04:04] <MadcapJake> llfourn: I'd definitely be interested in that

[04:04] *** kid51 left
[04:04] <llfourn> I'd certainly prefer it to makefiles

[04:05] <Herby_> isn't there some big perl 6 talks going on this weekend?

[04:05] <Herby_> or a perl 6 meetup of some sort?

[04:05] <llfourn> as I understand it FOSDEM is happening?

[04:06] <Herby_> hopefully some (most) of their talks find their way to youtube.  Some of the topics look pretty interesting: https://fosdem.org/2016/schedule/track/perl/

[04:07] <MadcapJake> I hope so too

[04:11] <AlexDaniel> there are also “official” recordings: https://video.fosdem.org/2015/

[04:11] <AlexDaniel> in 2015 though half of them were lost

[04:13] *** mr-foobar left
[04:13] <Herby_> sweet, i'll take a look

[04:14] <AlexDaniel> half? No. Most of them were lost

[04:14] <MadcapJake> how did that happen?

[04:14] <revhippie> the bbc threw 'em all in a dumpster like they did with early doctor who :(

[04:14] <MadcapJake> lol

[04:18] *** Fleurety left
[04:31] *** dolmen joined
[04:34] *** espadrine left
[04:36] <ugexe> those are hooks, and i've been bugging about them for awhile myself

[04:39] <ugexe> nothing is stopping you from putting scripts in your resources and accessing them via %?RESOURCE though

[04:41] <MadcapJake> ugexe: can you elaborate on that resources pattern?

[04:42] <llfourn> m: say %?RESOURCE

[04:42] <camelia> rakudo-moar 2e1782: OUTPUT«5===SORRY!5=== Error while compiling /tmp/BloATlHoEF␤Variable '%?RESOURCE' is not declared␤at /tmp/BloATlHoEF:1␤------> 3say 7⏏5%?RESOURCE␤»

[04:46] <ugexe> instead of "start" : "node app.js" or whatever, it could be like 'EVALFILE(%?RESOURCE<app.pl6>)'

[04:48] <MadcapJake> but where would that line go?

[04:48] <ugexe> whats it for? starting a server for tests?

[04:48] <MadcapJake> npm places the scripts in package.json which is equivalent to META6.json and then they are accessible from the cli

[04:49] <MadcapJake> scripts are for anything, building, running tests, deploying, they are just mini bash scripts (in npm/node land)

[04:49] <MadcapJake> however they contain a separate node-specific environment

[04:49] <ugexe> right. in s22 those are called hooks

[04:50] <MadcapJake> hooks in s22 is like one sentence xD

[04:50] <ugexe> there is not much on them, but their intentions would appear the same :)

[04:50] <ugexe> stand alone scripts to be ru during various phases of the install process

[04:51] <ugexe> usually they have access to some sort of ENV var to keep track of where in the life cycle they are at

[04:51] <ugexe> and act accordingly

[04:51] <MadcapJake> yeah that sounds "pretty" close, npm provides a bunch of special hooks for preinstall, postinstall, prerelease,postrelease, and a few more i cant remember

[04:51] <MadcapJake> but it also allows you to write your own for doing other things with your workflow

[04:52] *** revhippie left
[04:52] *** kaare_ joined
[04:52] <MadcapJake> and you just do «npm run test» or «npm run version-bump» or «npm run upgrade-deps»

[04:53] <ugexe> yeah. zef used to provide many of those. i would definately like to see something happen with them though

[04:53] <MadcapJake> (and actually «npm run test» is equiv to «npm test» as it is a special script hook which gets run on install, release, etc

[04:54] <MadcapJake> and also neat, they're composable, so write a few that have the bits and pieces of a build process and then compose into your main build script.

[04:54] <ugexe> but, look under s22 under %?RESOURCE

[04:55] <ugexe> "libraries" : { "libblah" : "build-time" }

[04:55] *** Actualeyes joined
[04:55] <ugexe> if the s22 spec was used then that would work nicely with those little commands... s/build-time/whatever cmd/

[04:57] <MadcapJake> yeah that'd be neat, it seems that the perlish tradition is to use a Configure.pl file and make for a lot of this stuff, is that accurate?

[04:57] <ugexe> it wouldnt have to be a library... maybe like "hooks" : { "preinstall-script.pl6" : preinstall }

[04:57] <MadcapJake> yeah that'd be more up my alley :)

[05:00] <MadcapJake> honestly since pl6 is powerful enough to forego the need for bash scripts, and thus they can be lengthier, i'd say providing a series of hardcoded hooks would be all that is needed: pre-install, post-install, pre-run, run, post-run, server, watch, pre-build, build, post-build, pre-test, test, post-test

[05:01] <MadcapJake> but then you'd need to provide a cli interface, some way to do «panda server» or «perl6 test» or «perl6 build», etc.

[05:01] <ugexe> that works too, but the thing is those are only used by the installer

[05:02] <MadcapJake> well that's my point, it would need to be more available to the user as a means to improving workflow

[05:02] <ugexe> so the actual names may not be specced, and leaf nodes are meant to be arbitrary data for package managers

[05:06] <MadcapJake> here's a good rundown of npm scripts http://blog.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/

[05:06] <MadcapJake> i think honestly part of why they're useful is how npm/node handles dependencies and running js files

[05:08] <MadcapJake> i really liked prepublish but does that really fit with perl6? well there is no equivalent to npm site yet, and packages in perl6 aren't available inside "perl6_modules" in your source dir, they're precompiled inside a hashed folder hidden away from the user.

[05:10] <MadcapJake> preinstall/postinstall are neat, but node devs rely on those because there really isn't any true install process (npm just dumps a tagged git repo into either your source's node_modules or a global node_modules

[05:10] <ugexe> zef used to work like this before the CU refactor (everyone kept using Build.pm) with hard coded script names that were run automatically

[05:10] *** AlexDaniel left
[05:11] <MadcapJake> well that sounds cool! has anyone made a friendly api to all the CU stuff yet?

[05:11] <ugexe> but you could do like you say and do like, cut a release version to github and auto increment your version

[05:11] <ugexe> ive been proposing overhauling Distribution to serve just that very purpose

[05:13] <ugexe> the s22 Distribution interfaces are what i would like (and spec'd %?RESOURCE) as they solve all of these problems

[05:13] <MadcapJake> yeah that'd be really killer, an easy «zef publish minor» would be amazing.

[05:15] <ugexe> in any case, i think Distribution will be updated soon to do some/all of this stuff

[05:16] <MadcapJake> great, i'm looking forward to it!  I think that's the biggest sore spot right now and also it has the most potential to strengthen the ecosystem.

[05:16] <ugexe> you can mention any ideas/thoughts here if you want them to be recorded: https://github.com/perl6/toolchain-bikeshed

[05:41] *** Cabanossi left
[05:43] *** Cabanossi joined
[05:56] *** Kogurr left
[06:06] *** khw left
[06:08] <Herby_> when using "given...when" control, can you use <, as in less than?

[06:08] *** ZoffixWin joined
[06:08] <Herby_> ZoffixWin!

[06:08] <Herby_> \o

[06:09] <ZoffixWin> hi

[06:09] <Herby_> m: my $var = 42; given $var { when < 50 { say "its less than 50"; } }

[06:09] <camelia> rakudo-moar 2e1782: OUTPUT«5===SORRY!5=== Error while compiling /tmp/TctdY34s2e␤Unable to parse expression in quote words; couldn't find final '>'␤        ␤at /tmp/TctdY34s2e:1␤------> 3 when < 50 { say "its less than 50"; } }7⏏5<EOL>␤    expecting any of:␤    …»

[06:10] <Herby_> m: my $var = 42; given $var { when Int { say "its less than 50"; } }

[06:10] <camelia> rakudo-moar 2e1782: OUTPUT«its less than 50␤»

[06:10] <llfourn> Herby_: nah it's an infix

[06:10] <MadcapJake> first attempt at a heroku buildpack *crosses fingers*

[06:10] <Herby_> m: my $var = 42; given $var { when $var < 50 { say "its less than 50"; } }

[06:10] <camelia> rakudo-moar 2e1782: OUTPUT«its less than 50␤»

[06:10] <Herby_> llfourn, thanks

[06:10] <MadcapJake> so far so good, it's installing nqp xD

[06:10] <ZoffixWin> m: say split(';', "a;b;c", 2, :all).perl

[06:10] <camelia> rakudo-moar 2e1782: OUTPUT«("a", "b;c").Seq␤»

[06:11] <ZoffixWin> ^ that's not what the docs say the output should be :/

[06:11] <ZoffixWin> ("a", ";", "b;c").list

[06:11] <ZoffixWin> Missing ";"

[06:11] <llfourn> m: .say for &split.candidates

[06:11] <camelia> rakudo-moar 2e1782: OUTPUT«sub split ($pat, Cool $target, |c is raw) { #`(Sub|73808080) ... }␤»

[06:12] <llfourn> so it should only split 2?

[06:12] <ZoffixWin> it does split 2, but the delimiter is missing

[06:12] <ZoffixWin> Which sucks, because it breaks this Perl 5 code I'm trying to port :/

[06:12] <llfourn>  m: say split(';', "a;b;c", 1, :all).perl

[06:12] <camelia> rakudo-moar 2e1782: OUTPUT«("a;b;c",)␤»

[06:13] <llfourn> isn't that splitting 0?

[06:13] <ZoffixWin> The "1" is the "LIMIT"

[06:13] <MadcapJake> it leaves anything in the $limit's last element as a the rest of the text

[06:13] <llfourn> oh.

[06:14] <llfourn> so it's :all that isn't working when you put a limit?

[06:15] <ZoffixWin> Limit is irrelevant

[06:16] <MadcapJake> yeah all is definitely not working there, limit is strange though as you'd think 2 would mean you'd get two split out elements, right? or is that just me? xD

[06:17] <llfourn> MadcapJake: not just you :\

[06:18] <MadcapJake> yeah, the way it's phrased it sounds like limit would mean "the limit of the number of split out elements" not "the limit of elems of the returned seq"

[06:18] *** adu joined
[06:18] <ZoffixWin> wtf is a "split out element"?

[06:18] <llfourn> something that was matched as a delim

[06:19] <MadcapJake> lol as in, split is splitting into elems, so if you specify a limit of 2, it means two elems should be "split away" from the core string

[06:19] *** Fleurety joined
[06:19] <llfourn> so limit => 1, would match and split on one ';'

[06:19] <adu> llfourn: are you talking about math?

[06:19] <llfourn> adu: no :)

[06:19] <ZoffixWin> No, that's not at all what it means. You're splitting ON delimiters and you're asking for at most LIMIT elements.

[06:20] <llfourn> ZoffixWin: it seems not :)

[06:20] <ZoffixWin> llfourn, seems not what?

[06:21] <llfourn> ZoffixWin: it seems that "that's not at all what it means" as you said

[06:21] <adu> limit(f(x), x=1) # SageMath

[06:21] <adu> Limit[F[x], x -> 1] # Mathematica

[06:21] <adu> what's the Perl6 version?

[06:21] <ZoffixWin> adu, we're not talking about those limits

[06:22] <ZoffixWin> I'm not seeing :all being used in Str.pm at all

[06:23] <llfourn> maybe it's NYI?

[06:24] <llfourn> m: .say for &split.candidates # it's only accepted to the sub because of the capture

[06:24] <camelia> rakudo-moar 2e1782: OUTPUT«sub split ($pat, Cool $target, |c is raw) { #`(Sub|65256368) ... }␤»

[06:24] <ZoffixWin> m: .say for "foo".split.candidates

[06:24] <camelia> rakudo-moar 2e1782: OUTPUT«Cannot call split(Str: ); none of these signatures match:␤    (Cool $: Regex:D $pat, $limit = { ... };; :$all, *%_)␤    (Cool $: Cool:D $pat, $limit = { ... };; :$all, *%_)␤    (Str:D $: Regex:D $pat, $parts = { ... };; :$v is copy, :$k, :$kv, :$p, :…»

[06:25] <ZoffixWin> m: .say for "foo".split(/./, :all).candidates

[06:25] <camelia> rakudo-moar 2e1782: OUTPUT«Method 'candidates' not found for invocant of class 'List'␤  in block <unit> at /tmp/GAbT5t1biH line 1␤␤»

[06:25] <llfourn> ZoffixWin: .can?

[06:25] <ZoffixWin> m: .say for "foo".can('split').candidates

[06:25] <camelia> rakudo-moar 2e1782: OUTPUT«Method 'candidates' not found for invocant of class 'List'␤  in block <unit> at /tmp/rx1imuglT9 line 1␤␤»

[06:25] <ZoffixWin> m: .say for "foo".can('split')[0].candidates

[06:25] <camelia> rakudo-moar 2e1782: OUTPUT«split␤split␤split␤split␤split␤split␤»

[06:25] <ZoffixWin> heh

[06:25] <llfourn> .can already gives you candidates

[06:26] <llfourn> m: .say for "foo".can('split')

[06:26] <camelia> rakudo-moar 2e1782: OUTPUT«split␤split␤split␤»

[06:26] <llfourn> m: .gist.say for "foo".can('split')

[06:26] <camelia> rakudo-moar 2e1782: OUTPUT«split␤split␤split␤»

[06:26] <llfourn> m: .perl.say for "foo".can('split')

[06:26] <camelia> rakudo-moar 2e1782: OUTPUT«method split (Mu $: | is raw) { #`(Method|71404376) ... }␤method split (Mu $: | is raw) { #`(Method|71406352) ... }␤method split (Mu $: | is raw) { #`(Method|71406504) ... }␤»

[06:26] <ZoffixWin> Well, search in Rakudo source shows only Str implements it and it doesn't use :all

[06:26] <llfourn> where did you find a mention of :all?

[06:27] <ZoffixWin> <ZoffixWin> ^ that's not what the docs say the output should be :/

[06:27] <ZoffixWin> http://docs.perl6.org/routine/split

[06:28] <llfourn> sounds like it was removed

[06:28] <ZoffixWin> m: say 'Life, the Universe, and Everything'.WHY

[06:28] <camelia> rakudo-moar 2e1782: OUTPUT«42␤»

[06:28] <MadcapJake> lol

[06:28] <ugexe> i know its purpose was being debated and changed before xmas

[06:29] <ZoffixWin> Ugh, ugexe, you're right: https://github.com/rakudo/rakudo/commit/dee63c3de536ada407e4e541c5e2fad60e3c4cc9

[06:29] * MadcapJake may have a working heroku-based bailador-built website *crosses fingers and toes*

[06:29] <llfourn> I think it chaged to :v

[06:30] <llfourn> oh too late :o

[06:30] <ZoffixWin> m: say split ';', "a;b;c", :v

[06:30] <camelia> rakudo-moar 2e1782: OUTPUT«(a ; b ; c)␤»

[06:30] <MadcapJake> which looks like pacman eating "all" the delimiters

[06:30] <ZoffixWin> m: say split ';', "a;b;c"

[06:30] <camelia> rakudo-moar 2e1782: OUTPUT«(a b c)␤»

[06:30] <ZoffixWin> m: say split /',' (';')/, "a,;b,;c", :v

[06:30] <camelia> rakudo-moar 2e1782: OUTPUT«(a ｢,;｣␤ 0 => ｢;｣ b ｢,;｣␤ 0 => ｢;｣ c)␤»

[06:31] <MadcapJake> heroku free tier is a lot faster at building rakudo than my rig :(

[06:31] <ZoffixWin> Still not like Perl 5 :/

[06:31] <llfourn> to me it makes sense to formalize what is and isn't accepted in &split

[06:32] *** Herby_ left
[06:34] *** dolmen left
[06:34] *** xinming_ is now known as xinming

[06:35] <ZoffixWin> m: my $i = 2; my @foo = ^10; say @foo[* - $i];

[06:35] <camelia> rakudo-moar 2e1782: OUTPUT«8␤»

[06:35] <ZoffixWin> m: my $i = -2; my @foo = ^10; say @foo[* - $i];

[06:35] <camelia> rakudo-moar 2e1782: OUTPUT«(Any)␤»

[06:35] <ZoffixWin> :/ any way to have an $i that could be either positive or negative?

[06:35] <ZoffixWin> Man translating Perl 5 into Perl 6 is annoying as hell :|

[06:37] *** M-Illandan joined
[06:37] <M-Illandan> Oh huh... I can't build rakudo on git HEAD over some unrecognised version specifier. Has anyone else seen this before?

[06:37] <M-Illandan> Unrecognized revision specifier '2016.01-RC1'

[06:38] <ugexe> heh

[06:38] <skids> m: my $i = -2; my @foo = ^10; say @foo[$i % *];

[06:38] <camelia> rakudo-moar 2e1782: OUTPUT«8␤»

[06:39] <skids> m: my $i = 2; my @foo = ^10; say @foo[$i % *];

[06:39] <camelia> rakudo-moar 2e1782: OUTPUT«2␤»

[06:39] <ZoffixWin> huh

[06:39] <skids> As long as you do not mind

[06:39] <skids> m: my $i = -12; my @foo = ^10; say @foo[$i % *];

[06:39] <camelia> rakudo-moar 2e1782: OUTPUT«8␤»

[06:39] <llfourn> that is clever

[06:40] <ZoffixWin> Yeah, skids++

[06:40] *** dixvagon joined
[06:40] <ugexe> M-Illandan: https://github.com/rakudo/rakudo/pull/699

[06:41] *** mattp_ joined
[06:43] *** isBEKaml joined
[06:50] *** CIAvash joined
[06:54] *** cdg left
[06:56] <MadcapJake> i've no idea if i'm doing heroku's buildpacks right :P https://github.com/MadcapJake/herokudo/blob/master/bin/compile

[06:57] <MadcapJake> i'm making one last effort with a `.profile.d/perl6.sh` file, then if that doesn't work, it's time for bed!

[07:00] *** BenGoldberg left
[07:01] *** ZoffixWin left
[07:19] *** dixvagon left
[07:20] *** go|dfish left
[07:25] *** lizmat left
[07:28] *** ELBeavers left
[07:29] *** ELBeavers joined
[07:30] <M-Illandan> ugexe (IRC): thanks

[07:30] *** cibs left
[07:32] *** cibs joined
[07:33] *** go|dfish joined
[07:35] *** Actualeyes left
[07:48] *** skids left
[07:55] *** lizmat joined
[07:59] * lizmat waves from the Perl DevRoom at FOSDEM

[08:04] *** adu left
[08:05] <moritz> m: 'abc'.split(/b/, :k)

[08:05] <camelia> rakudo-moar 2e1782: ( no output )

[08:05] <moritz> m: say 'abc'.split(/b/, :k)

[08:05] <camelia> rakudo-moar 2e1782: OUTPUT«(a 0 c)␤»

[08:05] * moritz waves back to lizmat and the devroom

[08:06] <moritz> m: say 'abc'.split(/b/)

[08:06] <camelia> rakudo-moar 2e1782: OUTPUT«(a c)␤»

[08:06] <moritz> m: say 'abc'.split(/b/, :v)

[08:06] <camelia> rakudo-moar 2e1782: OUTPUT«(a ｢b｣ c)␤»

[08:06] <moritz> m: say 'abc'.split(/b/, :kv)

[08:06] <camelia> rakudo-moar 2e1782: OUTPUT«(a 0 ｢b｣ c)␤»

[08:06] <moritz> m: say 'abc'.split(/b/, :p)

[08:06] <camelia> rakudo-moar 2e1782: OUTPUT«(a 0 => ｢b｣ c)␤»

[08:08] <lizmat> moritz: you have a question about those ?

[08:08] <moritz> m: say 'abc'.split(/b/, :p, :k)

[08:08] <camelia> rakudo-moar 2e1782: OUTPUT«Unsupported combination of adverbs (k p) passed to split on Str␤  in block <unit> at /tmp/Ezx2_U4qct line 1␤␤»

[08:08] <moritz> lizmat: no; just getting a feel for what they do

[08:08] *** go|dfish left
[08:08] <lizmat> okidoki

[08:10] <moritz> m: say 'abc'.split(/b/, :kv).elems

[08:10] <camelia> rakudo-moar 2e1782: OUTPUT«4␤»

[08:15] *** darutoko joined
[08:21] *** go|dfish joined
[08:25] *** rindolf joined
[08:25] <lizmat> m: m: say 'abc'.split("b", :kv)   # faster

[08:25] <camelia> rakudo-moar 2e1782: OUTPUT«(a 0 b c)␤»

[08:33] *** hankache joined
[08:34] <hankache> .seen FROGGS

[08:34] <yoleaux> I saw FROGGS 29 Jan 2016 18:28Z in #perl6: <FROGGS> [Tux]: META6.json though

[08:36] <hankache> anyone using perl6 on windows ?

[08:36] <lizmat> jnthn is, afaik

[08:36] <hankache> hiya lizmat

[08:37] <lizmat> hankache o/

[08:37] <hankache> i installed the RC1 MSI for windows to test it

[08:38] <hankache> panda is not working correctly. I wanted to make sure that it is not an issue on my machine before reporting it to FROGGS

[08:39] <lizmat> hankache : sorry, can't check that myself

[08:40] <hankache> anytime i try to install a module if always fails at the test stage with the same error messages

[08:41] <hankache> no such file in sub run-and-gather-output

[08:42] <lizmat> that doesn't ring a bell with me...  but that doesn't mean much  :-)

[08:44] <hankache> no worries

[08:45] *** hankache left
[08:50] *** domidumont joined
[08:55] *** domidumont left
[08:56] *** domidumont joined
[09:02] *** jeek left
[09:09] * nine waves from 2 rwos behind lizmat

[09:10] <El_Che_> :)

[09:10] <El_Che_> you just came in before I closed the room

[09:10] *** El_Che_ is now known as El_Che

[09:11] <nine> And now I know your nickname on IRC :)

[09:13] <El_Che> hehe

[09:13] <El_Che> I tend to use a different nick on each platform

[09:13] <El_Che> :)

[09:16] <El_Che> nine: I leart yeasterday the pronunciation of your name/nick. I prnounced as a number in my head

[09:21] *** eseyman joined
[09:25] *** lnrdo_ joined
[09:37] <nine> El_Che: most people do. That's why I used to go by "niner" in English speaking circles.

[09:39] *** jeek joined
[09:43] *** lnrdo_ left
[09:44] *** lnrdo_ joined
[09:51] <nine> .tell hankache panda requires a "prove.bat" command to be available for testing. This is a Perl 5 script and I guess strawberry perl is the easiest way to get it.

[09:51] <yoleaux> nine: I'll pass your message to hankache.

[09:56] <dalek> doc: 72520a8 | moritz++ | doc/Type/Cool.pod:

[09:56] <dalek> doc: split(:all) is gone, replaced by :v. Closes #375

[09:56] <dalek> doc: review: https://github.com/perl6/doc/commit/72520a8673

[09:59] *** musiKk joined
[09:59] *** kjs_ joined
[10:07] *** musiKk left
[10:08] *** SCHAAP137 joined
[10:11] *** kanishka joined
[10:14] <[Tux]> $ panda install CSV::Parser

[10:14] <[Tux]> ==> Fetching CSV::Parser

[10:14] <[Tux]> Must specify something as a path: did you mean '.' for the current directory?

[10:14] <[Tux]>   in method update-from-meta-file at /pro/3gl/CPAN/rakudobrew/moar-nom/install/share/perl6/site/sources/690D6834E4624C39C1A50928F4F02428C9A781E4 line 23

[10:14] <[Tux]> test            22.837

[10:14] <[Tux]> test-t          12.294

[10:22] *** lnrdo_ left
[10:29] <lizmat> m: subset Foo where *.chars < 7; use MONKEY-TYPING;  augment class Str { method Foo() { self.chars < 8 ?? self !! self.substr(0,7) } }; sub aa(Foo(Str) $a ) { dd $a }; aa "abcdefghijklmnopqrstuvwxyz"'   # example of a coercing subset Foo

[10:29] <camelia> rakudo-moar 2e1782: OUTPUT«5===SORRY!5=== Error while compiling /tmp/LAp5DyBTOU␤Two terms in a row␤at /tmp/LAp5DyBTOU:1␤------> 3dd $a }; aa "abcdefghijklmnopqrstuvwxyz"7⏏5'   # example of a coercing subset Foo␤    expecting any of:␤        infix␤        infix …»

[10:30] <lizmat> m: subset Foo where *.chars < 7; use MONKEY-TYPING;  augment class Str { method Foo() { self.chars < 8 ?? self !! self.substr(0,7) } }; sub aa(Foo(Str) $a ) { dd $a }; aa "abcdefghijklmnopqrstuvwxyz"   # example of a coercing subset Foo

[10:30] <camelia> rakudo-moar 2e1782: OUTPUT«"abcdefg"␤»

[10:32] <lizmat> m: my $max = 42; subset Foo where * < $max;  my Foo $a = 17; dd $a; $max = 3; my Foo $b = 17; dd $b   # example of a subtype depending on a variable value

[10:32] <camelia> rakudo-moar 2e1782: OUTPUT«Int $a = 17␤Type check failed in assignment to $b; expected Foo but got Int␤  in block <unit> at /tmp/ccy5JME9WD line 1␤␤»

[10:32] <lizmat> (answers to questions that came up during Ovid's talk

[10:32] <lizmat> )

[10:33] <El_Che> eiro's quesiton

[10:33] *** ChoHag left
[10:33] <lizmat> the latterm yes

[10:33] <lizmat> *latter,

[10:37] <CIAvash> .tell Herby_ Is this what you want? my $var = 42; given $var { when * < 50 { say "it's less than 50" } }

[10:37] <CIAvash>  

[10:37] <yoleaux> CIAvash: I'll pass your message to Herby_.

[10:45] *** kjs_ left
[10:53] *** dolmen joined
[10:53] *** leont joined
[10:54] *** flussence left
[10:55] *** flussence joined
[10:59] *** lizmat left
[10:59] *** ChoHag joined
[11:00] *** spider-mario joined
[11:02] *** leont left
[11:07] *** ely-se joined
[11:10] *** RabidGravy joined
[11:13] *** kjs_ joined
[11:16] <ely-se> hey the FOSDEM streams actually work this year :D

[11:17] <ely-se> not on the website though, but in VLC

[11:21] *** TEttinger left
[11:31] <llfourn> ely-se: do you get audio>

[11:32] <ely-se> yes but only if I stream with VLC

[11:32] *** musiKk joined
[11:32] <ely-se> not on the website

[11:33] <llfourn> I don't seem to get audio in the perl room

[11:33] *** Zero_Dogg left
[11:33] *** dolmen left
[11:33] <llfourn> (throuhg vlc)

[11:33] *** Zero_Dogg joined
[11:33] *** Zero_Dogg left
[11:33] *** Zero_Dogg joined
[11:34] *** lizmat joined
[11:36] * llfourn watches Crust guy fiddle with mic in hopeful anticipation

[11:39] *** brrt joined
[11:39] <brrt> \o #perl6

[11:39] <brrt> anybody at FOSDEM today

[11:39] <brrt> that I haven't seen yet?

[11:39] <llfourn> brrt: are you there?

[11:40] <ely-se> llfourn: maybe it's broken for Perl :P

[11:40] <ely-se> I'm watching Go talks

[11:40] <brrt> yeah, i'm in Jansson currently

[11:41] <brrt> ely-se: wasn't the current go talk cancelled?

[11:41] <llfourn> ely-se: yep, he's started talking and it aint workin

[11:41] <ely-se> brrt: yeah but someone else jumped in

[11:41] <brrt> cool, what about

[11:41] <ely-se> JSON encoding and code generation

[11:42] <llfourn> hmm Go doesn't work for me either

[11:43] <brrt> hmmm

[11:43] <brrt> Jansson is a talk from facebook? not my cup of tea

[11:46] <llfourn> ah the audio on the .flv works

[11:47] <llfourn> even in the Perl room!

[11:48] *** brrt left
[11:53] *** kjs_ left
[11:54] *** lnrdo_ joined
[11:59] <llfourn> I think the Crust guy just said he used EVAL 'use lib ...' to get around no use lib in modules :S

[11:59] <lizmat> llfourn: yeah, and needing to use use MONKEY-SEE-NO-EVAL

[11:59] <lizmat> on top of that

[11:59] <llfourn> that's a little scary!

[12:00] <llfourn> lizmat: I didn't catch why it needs EVAL if you wanna ask that from me :D

[12:00] <llfourn> lizmat: i mean use lib

[12:01] <llfourn> lizmat: thanks!

[12:01] <RabidGravy> I was looking at Crust last night for various reasons

[12:03] *** ely-se left
[12:11] *** araujo_ joined
[12:12] *** araujo_ left
[12:13] *** araujo_ joined
[12:35] *** dg left
[12:35] *** go|dfish left
[12:35] *** p_p_r left
[12:35] *** TimToady left
[12:35] *** abaugher left
[12:35] *** sftp left
[12:35] *** pRiVi left
[12:35] *** Guest95622 left
[12:35] *** cfedde left
[12:35] *** ilbot3 left
[12:35] *** ashleydev left
[12:35] *** ab5tract left
[12:35] *** au left
[12:35] *** garu_ left
[12:35] *** awwaiid left
[12:35] *** esh left
[12:35] *** silug left
[12:35] *** shadowpaste left
[12:35] *** bakedb left
[12:35] *** DrForr left
[12:35] *** autogen_ left
[12:35] *** isBEKaml left
[12:35] *** Cabanossi left
[12:35] *** alnewkirk left
[12:35] *** anshin left
[12:35] *** [particle] left
[12:35] *** olinkl left
[12:35] *** cognominal left
[12:35] *** vendethiel left
[12:35] *** drforr1 left
[12:35] *** robinsmidsrod left
[12:35] *** DrParis__ left
[12:35] *** kshannon left
[12:35] *** mithaldu_ left
[12:35] *** vike left
[12:35] *** diegok left
[12:35] *** grondilu left
[12:35] *** Grauwolf left
[12:35] *** Kcop left
[12:35] *** haircode left
[12:35] *** noganex left
[12:35] *** El_Che left
[12:35] *** eyck left
[12:35] *** gregf_ left
[12:35] *** ruoso left
[12:35] *** aigan_ left
[12:35] *** drrho left
[12:35] *** zhmylove left
[12:35] *** Peter_R left
[12:35] *** felher left
[12:35] *** emdashcomma left
[12:35] *** aindilis left
[12:35] *** sjohnsen left
[12:35] *** xiaomiao left
[12:35] *** SHODAN left
[12:35] *** lestrrat left
[12:35] *** lnrdo_ left
[12:35] *** kanishka left
[12:35] *** jeek left
[12:35] *** mattp_ left
[12:35] *** jack_rabbit left
[12:35] *** telex left
[12:35] *** advwp left
[12:35] *** autarch left
[12:35] *** Psyche^_ left
[12:35] *** ggoebel15 left
[12:35] *** stmuk left
[12:35] *** ambs left
[12:35] *** boegel left
[12:35] *** jevin left
[12:35] *** dalek left
[12:35] *** frew left
[12:35] *** ugexe left
[12:35] *** avuserow left
[12:35] *** pierrot left
[12:35] *** konobi left
[12:35] *** mephinet left
[12:35] *** mst left
[12:35] *** mre left
[12:35] *** bapa left
[12:35] *** rvchangue left
[12:35] *** sm0x left
[12:35] *** tony-o_ left
[12:35] *** petercommand left
[12:35] *** mkz_ left
[12:35] *** nemo left
[12:35] *** raydiak left
[12:35] *** ingy left
[12:35] *** yeltzooo9 left
[12:35] *** jferrero_ left
[12:35] *** squain_ left
[12:35] *** andrewalker left
[12:35] *** hobbs left
[12:35] *** jnap left
[12:35] *** FatalNIX left
[12:35] *** mspo left
[12:35] *** pnu left
[12:35] *** Spot__ left
[12:35] *** Humbedooh left
[12:35] *** krunen left
[12:35] *** solarbunny left
[12:35] *** domidumont left
[12:35] *** burnersk left
[12:35] *** nebuchadnezzar left
[12:35] *** matt_ left
[12:35] *** eiro left
[12:35] *** jantore left
[12:35] *** wtw left
[12:35] *** sjohnson left
[12:35] *** crux left
[12:35] *** dpk left
[12:35] *** avar left
[12:35] *** literal left
[12:35] *** jervo left
[12:35] *** rarara left
[12:35] *** babaj left
[12:35] *** kaare_ left
[12:35] *** lizmat left
[12:35] *** musiKk left
[12:35] *** ChoHag left
[12:35] *** M-Illandan left
[12:35] *** geekosaur left
[12:35] *** cpage_ left
[12:35] *** firstdayonthejob left
[12:35] *** bpmedley left
[12:35] *** gtodd left
[12:35] *** sammers left
[12:35] *** lsm-desktop left
[12:35] *** [Tux] left
[12:35] *** keix left
[12:35] *** xnrand left
[12:35] *** richi235 left
[12:35] *** Juerd left
[12:35] *** rodarmor left
[12:35] *** MadcapJake left
[12:35] *** domm__ left
[12:35] *** breinbaas left
[12:35] *** retupmoca left
[12:35] *** tinita left
[12:35] *** jdv79 left
[12:35] *** mindos left
[12:35] *** stux|RC-only left
[12:35] *** ranguard left
[12:35] *** DarthGandalf left
[12:35] *** riatre left
[12:35] *** cpage left
[12:35] *** lucs left
[12:35] *** jsimonet left
[12:35] *** integral left
[12:35] *** jnthn left
[12:35] *** lnx left
[12:35] *** sivoais left
[12:35] *** Hotkeys left
[12:35] *** arnsholt left
[12:35] *** dindinx left
[12:35] *** japhb left
[12:35] *** SCHAAP137 left
[12:35] *** ELBeavers left
[12:35] *** xinming left
[12:35] *** yurivish_ left
[12:35] *** nine left
[12:35] *** cxreg left
[12:35] *** salv0 left
[12:35] *** Upasaka left
[12:35] *** mprelude left
[12:35] *** sno left
[12:35] *** cosarara left
[12:35] *** Amnez777- left
[12:35] *** tadzik left
[12:35] *** luiz_lha left
[12:35] *** risou left
[12:35] *** shmibs left
[12:35] *** M-matthew left
[12:35] *** rudi_s left
[12:35] *** notbenh left
[12:35] *** Util left
[12:35] *** rdleon left
[12:35] *** agentzh left
[12:35] *** ponbiki left
[12:35] *** saaki left
[12:35] *** yoleaux left
[12:35] *** cibs left
[12:35] *** Zero_Dogg left
[12:35] *** RabidGravy left
[12:35] *** darutoko left
[12:35] *** Fleurety left
[12:35] *** johan left
[12:35] *** daxim left
[12:35] *** pyrimidi_ left
[12:35] *** mohae left
[12:35] *** apathor left
[12:35] *** nightfrog left
[12:35] *** Sgeo left
[12:35] *** araujo left
[12:35] *** salva left
[12:35] *** ribasushi left
[12:35] *** keusej left
[12:35] *** woodruffw left
[12:35] *** charsbar__ left
[12:35] *** |Tux| left
[12:35] *** Celelibi left
[12:35] *** eternaleye left
[12:35] *** perlpilo1 left
[12:35] *** cfloare_ left
[12:35] *** leedo left
[12:35] *** adrusi left
[12:35] *** krakan left
[12:35] *** xxpor left
[12:35] *** maddingue left
[12:35] *** profan left
[12:35] *** polyfloyd left
[12:35] *** f3ew left
[12:35] *** Gothmog_ left
[12:35] *** gypsydave5 left
[12:35] *** flussence left
[12:35] *** rindolf left
[12:35] *** Lucas_One_ left
[12:35] *** jast left
[12:35] *** Bucciarati left
[12:35] *** nchambers left
[12:35] *** timotimo left
[12:35] *** gfldex left
[12:35] *** DrPete left
[12:35] *** [ptc] left
[12:35] *** samb1 left
[12:35] *** zacts left
[12:35] *** BooK left
[12:35] *** vytas left
[12:35] *** JimmyZ left
[12:35] *** moritz left
[12:35] *** khisanth_ left
[12:35] *** dylanwh left
[12:35] *** rafl left
[12:35] *** decent_ left
[12:35] *** atta_ left
[12:35] *** bartolin left
[12:35] *** erdic left
[12:35] *** luis left
[12:35] *** ggherdov_ left
[12:35] *** corbyhaas_ left
[12:35] *** kipd left
[12:35] *** avalenn left
[12:35] *** PotatoGim left
[12:35] *** jcallen left
[12:35] *** rhr_ left
[12:35] *** b^_^d left
[12:35] *** xdg left
[12:35] *** ilbelkyr left
[12:35] *** hacst left
[12:35] *** dsp- left
[12:35] *** sunnavy left
[12:35] *** rjbs left
[12:35] *** huf left
[12:35] *** TeamBlast left
[12:35] *** freeze left
[12:35] *** sjn left
[12:35] *** BinGOs left
[12:35] *** gabiruh left
[12:35] *** araujo_ left
[12:35] *** kent\n left
[12:35] *** nowan left
[12:35] *** caasih left
[12:35] *** sQuEE` left
[12:35] *** eseyman left
[12:35] *** jojotus left
[12:35] *** jameslenz left
[12:35] *** avenj left
[12:35] *** roguelazer left
[12:35] *** tth left
[12:35] *** flaviusb left
[12:35] *** zostay left
[12:35] *** colomon left
[12:35] *** gensym left
[12:35] *** pochi left
[12:35] *** bitmap left
[12:35] *** Timbus left
[12:35] *** huggable left
[12:35] *** Rotwang left
[12:35] *** mtj_ left
[12:35] *** moznion left
[12:35] *** cosimo_ left
[12:35] *** Ulti left
[12:35] *** bhm_ left
[12:35] *** Mouq left
[12:35] *** musca left
[12:35] *** dustinm` left
[12:35] *** mrsolo left
[12:35] *** SmokeMachine___ left
[12:35] *** chansen_ left
[12:35] *** clkao left
[12:35] *** BuildTheRobots left
[12:35] *** hoelzro left
[12:35] *** edenc left
[12:35] *** Grrrr left
[12:35] *** skarn left
[12:35] *** ilmari left
[12:35] *** Jonis left
[12:35] *** perigrin left
[12:35] *** simcop2387 left
[12:35] *** kst left
[12:35] *** broquaint left
[12:35] *** camelia left
[12:35] *** Amnez777 joined
[12:35] *** Woodi left
[12:35] *** Amnez777 left
[12:35] *** Exodist left
[12:35] *** brabo left
[12:35] *** [Coke] left
[12:35] *** pi4 left
[12:35] *** llfourn left
[12:35] *** xenu left
[12:35] *** hahainternet left
[12:35] *** a3r0 left
[12:35] *** gypsydave5 joined
[12:35] *** Gothmog_ joined
[12:35] *** f3ew joined
[12:35] *** profan joined
[12:35] *** maddingue joined
[12:35] *** polyfloyd joined
[12:35] *** krakan joined
[12:35] *** adrusi joined
[12:35] *** leedo joined
[12:35] *** cfloare_ joined
[12:35] *** perlpilo1 joined
[12:35] *** Celelibi joined
[12:35] *** eternaleye joined
[12:35] *** |Tux| joined
[12:35] *** charsbar__ joined
[12:35] *** woodruffw joined
[12:35] *** keusej joined
[12:35] *** salva joined
[12:35] *** xxpor joined
[12:35] *** Sgeo joined
[12:35] *** nightfrog joined
[12:35] *** apathor joined
[12:35] *** mohae joined
[12:35] *** pyrimidi_ joined
[12:35] *** daxim joined
[12:35] *** johan joined
[12:35] *** Fleurety joined
[12:35] *** darutoko joined
[12:35] *** Zero_Dogg joined
[12:35] *** RabidGravy joined
[12:35] *** broquaint joined
[12:35] *** kst joined
[12:35] *** simcop2387 joined
[12:35] *** perigrin joined
[12:35] *** Jonis joined
[12:35] *** ilmari joined
[12:35] *** skarn joined
[12:35] *** Grrrr joined
[12:35] *** hoelzro joined
[12:35] *** BuildTheRobots joined
[12:35] *** clkao joined
[12:35] *** chansen_ joined
[12:35] *** SmokeMachine___ joined
[12:35] *** mrsolo joined
[12:35] *** dustinm` joined
[12:35] *** musca joined
[12:35] *** Mouq joined
[12:35] *** bhm_ joined
[12:35] *** Ulti joined
[12:35] *** cosimo_ joined
[12:35] *** moznion joined
[12:35] *** mtj_ joined
[12:35] *** Rotwang joined
[12:35] *** huggable joined
[12:35] *** Timbus joined
[12:35] *** bitmap joined
[12:35] *** pochi joined
[12:35] *** gensym joined
[12:35] *** colomon joined
[12:35] *** zostay joined
[12:35] *** flaviusb joined
[12:35] *** edenc joined
[12:35] *** tth joined
[12:35] *** roguelazer joined
[12:35] *** avenj joined
[12:35] *** jameslenz joined
[12:35] *** jojotus joined
[12:35] *** sQuEE` joined
[12:35] *** caasih joined
[12:35] *** nowan joined
[12:35] *** kent\n joined
[12:35] *** eseyman joined
[12:35] *** araujo_ joined
[12:35] *** autogen_ joined
[12:35] *** DrForr joined
[12:35] *** bakedb joined
[12:35] *** shadowpaste joined
[12:35] *** silug joined
[12:35] *** esh joined
[12:35] *** awwaiid joined
[12:35] *** garu_ joined
[12:35] *** au joined
[12:35] *** ab5tract joined
[12:35] *** ashleydev joined
[12:35] *** ilbot3 joined
[12:35] *** cfedde joined
[12:35] *** Guest95622 joined
[12:35] *** pRiVi joined
[12:35] *** sftp joined
[12:35] *** abaugher joined
[12:35] *** TimToady joined
[12:35] *** p_p_r joined
[12:35] *** go|dfish joined
[12:35] *** ribasushi joined
[12:35] *** xnrand joined
[12:35] *** diakopter joined
[12:35] *** yoleaux joined
[12:35] *** Guest92014 joined
[12:35] *** lnrdo_ joined
[12:35] *** lizmat joined
[12:35] *** musiKk joined
[12:35] *** ChoHag joined
[12:35] *** kanishka joined
[12:35] *** jeek joined
[12:35] *** domidumont joined
[12:35] *** isBEKaml joined
[12:35] *** mattp_ joined
[12:35] *** M-Illandan joined
[12:35] *** Cabanossi joined
[12:35] *** noganex joined
[12:35] *** jack_rabbit joined
[12:35] *** [particle] joined
[12:35] *** olinkl joined
[12:35] *** geekosaur joined
[12:35] *** cognominal joined
[12:35] *** vendethiel joined
[12:35] *** cpage_ joined
[12:35] *** drforr1 joined
[12:35] *** firstdayonthejob joined
[12:35] *** telex joined
[12:35] *** alnewkirk joined
[12:35] *** bpmedley joined
[12:35] *** gtodd joined
[12:35] *** advwp joined
[12:35] *** anshin joined
[12:35] *** autarch joined
[12:35] *** robinsmidsrod joined
[12:35] *** DrParis__ joined
[12:35] *** Psyche^_ joined
[12:35] *** El_Che joined
[12:35] *** eyck joined
[12:35] *** ggoebel15 joined
[12:35] *** stmuk joined
[12:35] *** ambs joined
[12:35] *** rarara joined
[12:35] *** boegel joined
[12:35] *** sammers joined
[12:35] *** jevin joined
[12:35] *** kshannon joined
[12:35] *** mithaldu_ joined
[12:35] *** vike joined
[12:35] *** hitchcock.freenode.net sets mode: +v yoleaux

[12:35] *** gregf_ joined
[12:35] *** babaj joined
[12:35] *** ruoso joined
[12:35] *** dalek joined
[12:35] *** lsm-desktop joined
[12:35] *** diegok joined
[12:35] *** [Tux] joined
[12:35] *** grondilu joined
[12:35] *** keix joined
[12:35] *** frew joined
[12:35] *** Grauwolf joined
[12:35] *** ugexe joined
[12:35] *** avuserow joined
[12:35] *** pierrot joined
[12:35] *** aigan_ joined
[12:35] *** jantore joined
[12:35] *** drrho joined
[12:35] *** zhmylove joined
[12:35] *** konobi joined
[12:35] *** Peter_R joined
[12:35] *** Kcop joined
[12:35] *** felher joined
[12:35] *** richi235 joined
[12:35] *** emdashcomma joined
[12:35] *** aindilis joined
[12:35] *** mephinet joined
[12:35] *** wtw joined
[12:35] *** Juerd joined
[12:35] *** mst joined
[12:35] *** mre joined
[12:35] *** rodarmor joined
[12:35] *** MadcapJake joined
[12:35] *** haircode joined
[12:35] *** burnersk joined
[12:35] *** bapa joined
[12:35] *** rvchangue joined
[12:35] *** sjohnsen joined
[12:35] *** sm0x joined
[12:35] *** xiaomiao joined
[12:35] *** tony-o_ joined
[12:35] *** petercommand joined
[12:35] *** SHODAN joined
[12:35] *** mkz_ joined
[12:35] *** domm__ joined
[12:35] *** nemo joined
[12:35] *** breinbaas joined
[12:35] *** lestrrat joined
[12:35] *** hitchcock.freenode.net sets mode: +v dalek

[12:35] *** raydiak joined
[12:35] *** retupmoca joined
[12:35] *** ingy joined
[12:35] *** yeltzooo9 joined
[12:35] *** sjohnson joined
[12:35] *** jferrero_ joined
[12:35] *** tinita joined
[12:35] *** squain_ joined
[12:35] *** jdv79 joined
[12:35] *** andrewalker joined
[12:35] *** crux joined
[12:35] *** hobbs joined
[12:35] *** jnap joined
[12:35] *** mindos joined
[12:35] *** dpk joined
[12:35] *** stux|RC-only joined
[12:35] *** FatalNIX joined
[12:35] *** solarbunny joined
[12:35] *** krunen joined
[12:35] *** Humbedooh joined
[12:35] *** Spot__ joined
[12:35] *** pnu joined
[12:35] *** mspo joined
[12:35] *** eiro joined
[12:35] *** matt_ joined
[12:35] *** nebuchadnezzar joined
[12:35] *** literal joined
[12:35] *** avar joined
[12:35] *** jervo joined
[12:35] *** ranguard joined
[12:35] *** DarthGandalf joined
[12:35] *** riatre joined
[12:35] *** cpage joined
[12:35] *** lucs joined
[12:35] *** jsimonet joined
[12:35] *** integral joined
[12:35] *** jnthn joined
[12:35] *** lnx joined
[12:35] *** dindinx joined
[12:35] *** sivoais joined
[12:35] *** Hotkeys joined
[12:35] *** arnsholt joined
[12:35] *** japhb joined
[12:35] *** Praise left
[12:35] *** kaare__ joined
[12:35] *** keix left
[12:35] *** flussence joined
[12:35] *** rindolf joined
[12:35] *** Lucas_One_ joined
[12:35] *** jast joined
[12:35] *** Bucciarati joined
[12:35] *** timotimo joined
[12:35] *** gfldex joined
[12:35] *** DrPete joined
[12:35] *** [ptc] joined
[12:35] *** samb1 joined
[12:35] *** BooK joined
[12:35] *** vytas joined
[12:35] *** JimmyZ joined
[12:35] *** moritz joined
[12:35] *** khisanth_ joined
[12:35] *** dylanwh joined
[12:35] *** rafl joined
[12:35] *** decent_ joined
[12:35] *** atta_ joined
[12:35] *** bartolin joined
[12:35] *** erdic joined
[12:35] *** luis joined
[12:35] *** corbyhaas_ joined
[12:35] *** kipd joined
[12:35] *** xdg joined
[12:35] *** avalenn joined
[12:35] *** PotatoGim joined
[12:35] *** jcallen joined
[12:35] *** rhr_ joined
[12:35] *** b^_^d joined
[12:35] *** ilbelkyr joined
[12:35] *** hacst joined
[12:35] *** dsp- joined
[12:35] *** gabiruh joined
[12:35] *** sunnavy joined
[12:35] *** rjbs joined
[12:35] *** huf joined
[12:35] *** TeamBlast joined
[12:35] *** freeze joined
[12:35] *** sjn joined
[12:35] *** BinGOs joined
[12:35] *** dgl joined
[12:35] *** ELBeavers joined
[12:35] *** xinming joined
[12:35] *** yurivish_ joined
[12:35] *** nine joined
[12:35] *** cxreg joined
[12:35] *** salv0 joined
[12:35] *** Upasaka joined
[12:35] *** mprelude joined
[12:35] *** sno joined
[12:35] *** cosarara joined
[12:35] *** tadzik joined
[12:35] *** luiz_lha joined
[12:35] *** risou joined
[12:35] *** shmibs joined
[12:35] *** M-matthew joined
[12:35] *** rudi_s joined
[12:35] *** notbenh joined
[12:35] *** Util joined
[12:35] *** rdleon joined
[12:35] *** agentzh joined
[12:35] *** ponbiki joined
[12:35] *** saaki joined
[12:35] *** MilkmanDan joined
[12:35] *** ilbelkyr left
[12:35] *** ggherdov_ joined
[12:35] *** nchambers joined
[12:35] *** ilbelkyr joined
[12:35] *** obarb joined
[12:35] *** [Coke]_ joined
[12:35] *** llfourn_ joined
[12:35] *** xenu_ joined
[12:35] *** Amnez777 joined
[12:35] *** exodist_ joined
[12:35] *** Amnez777 left
[12:35] *** hahainte1net joined
[12:35] *** Woodi_ joined
[12:35] *** a3r0_ joined
[12:35] *** cibs joined
[12:35] *** yoleaux left
[12:35] *** diakopter left
[12:35] *** M-Illandan left
[12:35] *** Amnez777 joined
[12:35] *** yoleaux joined
[12:35] *** diakopter joined
[12:35] *** hitchcock.freenode.net sets mode: +v yoleaux

[12:35] *** M-matthew left
[12:35] *** BenGoldberg joined
[12:35] *** Praise- joined
[12:35] *** M-Illandan joined
[12:35] *** kjs_ joined
[12:35] *** camelia joined
[12:35] *** isBEKaml left
[12:35] *** apejens_ left
[12:36] *** apejens joined
[12:36] <nine> I just submitted a pull request for Crust to get rid of the EVAL "use lib

[12:36] *** ChanServ sets mode: +v camelia

[12:36] *** eternaleye left
[12:36] <RabidGravy> nine++

[12:37] <nine> lizmat: Getopt::Tiny actually breaks on the removal of IO::ArgFiles. It's amazing how fast stuff gets used in the ecosystem.

[12:37] *** Skarsnik joined
[12:38] <Skarsnik> hello

[12:38] * masak .oO( if I had known my stuff'd get *used*, I'd've never put it in the ecosystem )

[12:38] *** M-Illandan left
[12:39] <lizmat> but I reverted the IO::CatHandle stuff, didn't, I ?

[12:39] *** ely-se joined
[12:41] <nine> lizmat: yes, you did :) Just wanted to point out that our speculations about noone using IO::ArgFiles directly were wrong. Someone already found a use case... So no matter how hidden some API is, someone will use it. Soon.

[12:42] <El_Che> I have met stuff on the ecosystem that doesn't work with christmas rakudobrewed rakudo. Eg.: https://github.com/retupmoca/P6-Net-SMTP

[12:42] *** Guest95622 left
[12:42] <El_Che> although the travis test pass, it does not work when you use it

[12:42] *** M-matthew joined
[12:43] *** bowtie joined
[12:43] <El_Che> 6.c/d stuff will be part of the metacpan-like thing?

[12:43] *** M-Illandan joined
[12:43] *** bowtie is now known as Guest80033

[12:43] <RabidGravy> that'll be bad tests then

[12:43] <lizmat> El_Che: don't think so

[12:44] <llfourn_> nine: how does that method work with precomp?

[12:44] <llfourn_> will things in Crust require'd afterwards still be preocmped?

[12:44] <nine> No, they won't. And I'd love to discuss this with Crust people.

[12:45] <llfourn_> nine: kk I thought so thanks!

[12:45] <llfourn_> nine: I would love to hear your solution

[12:45] <nine> If I can find one :)

[12:46] <llfourn_> I was thinking you would just have to figure out all the things that need to be in inc and then spawn a new perl6 -I whatever

[12:46] * jnthn only half paid attention to recent backlog, but didn't spot an explanation of the problem they were solving? :)

[12:46] <yoleaux> 29 Jan 2016 19:45Z <RabidGravy> jnthn: next time you're looking at asynchronous stuff you may want to cast an eye over https://rt.perl.org/Ticket/Display.html?id=127428 almost certainly unintended

[12:46] <yoleaux> 30 Jan 2016 14:37Z <orbus> jnthn: okay - so if I create a Supply off a channel, and then I have two taps on that Supply, they'll compete over the values from the Channel?  That seems to be how it behaves now.  If so, I want to get that in the docs.  I'll either open a ticket or do a pr

[12:47] <llfourn_> jnthn: I think they are reading in a conf file or something at runtime which could include libs they need to add and things they need to load (or something similar)

[12:47] <lizmat> jnthn: the problem is that in Plack / Crust, you have a config file that determines at runtime which modules should be loaded

[12:48] *** llfourn_ is now known as llfourn

[12:48] <lizmat> e.g. "enable "ContentLength"

[12:48] <lizmat> would load a ContentLength module, for adding Content-Length HTTP output header

[12:49] *** lnrdo_ left
[12:49] <nine> And the "config" file is really just a Perl 6 script

[12:50] *** SCHAAP137 joined
[12:50] <lizmat> well, yeah, the "enable" is just an exported sub

[12:50] <llfourn> mm I think they need to introduce a web app compile stage prior to re-running with a static @INC once all the paths are known

[12:51] <lizmat> .oO( pre-compile the app file ? )

[12:51] <llfourn> why not :)?

[12:52] <RabidGravy> well if the model was slightly different, e.g. the app was a class that did a certain role then yeah

[12:54] <nine> Well we are post-christmas, so we may as well try to figure out how to have precomp _and_ runtime repository chain changes.

[12:54] <nine> Because it's really the same problem as the inability to use the precomp files generated at install time.

[12:54] <lizmat> indeed

[12:55] <llfourn> that would be lovely if it could be done!

[12:55] <nine> That a Perl 6 PLACK may use more Perl 6 features for a nicer API is a separate issue :)

[12:57] <RabidGravy> so, loading a module at runtime by name rather than path, is it possible right now?

[12:58] *** M-matthew left
[12:58] <nine> sure

[12:58] <RabidGravy> (without using EVAL)

[12:58] <nine> That's what require is for

[12:58] <llfourn> m: require Test;

[12:58] <camelia> rakudo-moar 2e1782: ( no output )

[12:58] <nine> Crust even does this correctly

[12:58] <RabidGravy> no

[12:58] <RabidGravy> m: require "Test"

[12:58] <camelia> rakudo-moar 2e1782: OUTPUT«Could not find Test in:␤    /home/camelia/.perl6/2015.12-230-g2e17820␤    /home/camelia/rakudo-m-inst-1/share/perl6/site␤    /home/camelia/rakudo-m-inst-1/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-1/share/perl6␤    CompUnit::Repository::…»

[12:58] <RabidGravy> hence without EVAL

[12:58] <llfourn> m: require ::("Test")

[12:58] <camelia> rakudo-moar 2e1782: ( no output )

[12:59] <nine> m: my $module = "Test"; require ::($module);

[12:59] <camelia> rakudo-moar 2e1782: ( no output )

[12:59] <llfourn> m: require ::("Test") <&ok>; ok 1;

[12:59] <camelia> rakudo-moar 2e1782: OUTPUT«WARNINGS for /tmp/k6OKRJ6FZw:␤Useless use of constant string "Test" in sink context (lines 1, 1)␤ok 1 - ␤»

[12:59] <llfourn> and that annoying warning will be gone once my PR is merged :D

[13:00] <nine> llfourn: which PR is that?

[13:00] *** M-Illandan left
[13:00] <llfourn> nine: https://github.com/rakudo/rakudo/pull/694

[13:00] <llfourn> the one you thanked me for using .tell earler :)

[13:01] *** M-matthew joined
[13:01] <RabidGravy> okay, what made me think that didn't work :-\

[13:01] <nine> Ah, yes :) Hopefully I'll find enough sleep in the days after FOSDEM to properly think it through

[13:01] <RabidGravy> everyone++

[13:01] <llfourn> nine: thanks! take your time :)

[13:01] *** M-eternaleye joined
[13:01] <nine> RabidGravy: while loading a module at runtime is easy, accessing the symbols in that module is hard, because they will not be there at compile time.

[13:02] <El_Che> I have 2 days of conference after fosdem: there is a configuration management camp in Ghent mon and tue

[13:02] <lizmat> that's a real long weekend for you

[13:03] <El_Che> someone has to hassle all the ruby and python people there :)

[13:03] <lizmat> :-)

[13:03] *** M-Illandan joined
[13:04] <RabidGravy> nine, for my use-case right now, I don't need the symbols just the type and the methods thereof

[13:04] *** kid51 joined
[13:05] <llfourn> RabidGravy: if you put it in brackets require should return whatever package has the same name as the target module

[13:05] <llfourn> m: say (require Test);

[13:05] <camelia> rakudo-moar 2e1782: OUTPUT«(Test)␤»

[13:05] <RabidGravy> which saves the additional type lookup

[13:05] <llfourn> yup

[13:07] <llfourn> another tip with require is that it runs every time you hit it (unlike need and use)

[13:07] <llfourn> so if you only want it to run the first time

[13:07] <llfourn> m: for ^1000 { state $ = (require Test) }

[13:07] <camelia> rakudo-moar 2e1782: ( no output )

[13:08] <RabidGravy> coolio, my actual use is rather niche,  I have a bunch of methods that differ only by two pieces of information: a class and a "path" where the information for that class can be found

[13:08] <gfldex> m: for ^1000 { once (require Test) }

[13:08] <camelia> rakudo-moar 2e1782: ( no output )

[13:08] <jnthn> nine: One thought I had: the "only use the precomp store at the head of the chain" thing can be relaxed a little to "use the precomp store first encountered in the chain once skipping past things that have no modules"

[13:09] <jnthn> nine: That'd mean that if a user-level repo has no installed modules, then we can use the system-wide installed precomps

[13:09] <llfourn> gfldex: Thanks. That's my new feature of the day :)

[13:09] <RabidGravy> so I figured a class trait that stashes the "path" and then a method trait that specifies the class by name, then the method is just load the class, get the "path" and so forth

[13:10] <RabidGravy> so all the otherwise duplicated method bodies go away

[13:10] <llfourn> where doe sit stash the path?

[13:10] <llfourn> HOW?

[13:10] <llfourn> does it*

[13:11] <RabidGravy> yeah

[13:11] <llfourn> RabidGravy: I did something which sounds similar to what you are saying https://github.com/LLFourn/p6-OO-Schema

[13:11] <llfourn> (probably with different purposes)

[13:12] <llfourn> in that you have like 'class lite' which has the same inheritence as the class but isn't loaded, but you can load it with a method

[13:12] *** M-eternaleye left
[13:13] <nine> jnthn: oh yes, I've had that idea at some point. As long as we handle the case correctly when the process is actually going to install modules into the head repo.

[13:14] <RabidGravy> llfourn, yeah, that's similar, what it's actually for is a CouchDB thing where you have _stats, _config and so forth all represented by a separate class

[13:14] <nine> Unfortunately I think we'll need a little API change to make that possible

[13:15] <llfourn> RabidGravy: ah I think I get you :)

[13:17] *** M-matthew left
[13:18] *** CIAvash left
[13:20] *** M-eternaleye joined
[13:20] *** M-matthew joined
[13:20] <dalek> ecosystem: 847f673 | (Sylvain Colinet)++ | META.list:

[13:20] <dalek> ecosystem: Rename GPTrixie meta file

[13:20] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/847f6734cf

[13:23] <El_Che> brrt in the second row?

[13:25] <lizmat> denk dat ie buiten is

[13:25] <lizmat> sorry, "think he's outside"

[13:26] <El_Che> have you seen him at fosdem?

[13:26] <El_Che> I don't know his face

[13:26] <El_Che> I found his linkedin pic, but it's 2d :)

[13:27] <lizmat> he wears glasses now

[13:27] <El_Che> ok, looking for a white guy with glasses in fosdem

[13:28] <El_Che> that can't be difficult :)

[13:28] <nine> El_Che: he's kinda young, too ;)

[13:28] <Skarsnik> are fosdem talk streamed?

[13:28] <nine> yes

[13:29] <El_Che> this one seem to work fine

[13:29] <El_Che> I heard on #perl

[13:30] *** M-eternaleye left
[13:32] *** ely-se left
[13:34] *** M-matthew left
[13:34] *** M-eternaleye joined
[13:35] *** Actualeyes joined
[13:35] *** rindolf left
[13:37] *** M-matthew joined
[13:37] <Skarsnik> hm, it does not work for me :(

[13:38] <llfourn> Skarsnik: which bit?

[13:38] <Skarsnik> fosdem stream x)

[13:38] <llfourn> http://stream-a.fosdem.org:8080/fosdem+h2214cam.flv # open with vlc

[13:39] <nine> Actually...we could even take it a step further. We may note be able to serialize the whole DependencySpecification right now and therefore we cannot run the dependency resolution without actually loading a module's source code.

[13:39] <nine> However we can serialize the short name. And if none of the repositories ahead in the chain contains a module with the same short name, we can be sure that it will not contain a module matching a DependencySpecification at all.

[13:39] <Skarsnik> thx llfourn !

[13:39] <eiro> hello everyone. i just connected. thanks for the example lizmat! awesome 

[13:40] <eiro> (as always in perl6) 

[13:40] <nine> Therefore it can also not contain a newer version of said dependency and we're free to load the precompiled one from a repo down the chain.

[13:41] <Skarsnik> damn the camera that does not show the board x)

[13:41] <llfourn> mmm there is another stream for that

[13:41] <llfourn> you will have to figure out how to open 2 vlcs

[13:42] <nine> mplayer or ffplay?

[13:43] <Skarsnik> I can open how many vlc I want x)

[13:43] <Skarsnik> Just need to figure the url x)

[13:44] <llfourn> http://stream-a.fosdem.org:8080/fosdem+h2214slides.flv

[13:44] <Skarsnik> Ok thx :)

[13:45] <llfourn> /Applications/VLC.app/Contents/MacOS/VLC # to open a second vlc on mac

[13:46] *** M-eternaleye left
[13:47] <RabidGravy> works with mplayer too if you're of that persuasion

[13:51] *** dolmen joined
[13:55] *** M-matthew left
[13:55] *** Amnez777 left
[13:55] *** Amnez777 joined
[13:56] *** M-Illandan left
[13:57] <llfourn> nice talk that was brrt on #perl6?

[13:57] <lizmat> yup

[13:59] *** AlexDaniel joined
[14:01] *** hankache joined
[14:03] *** brrt joined
[14:09] <lizmat> brrt++   # nice presentation!

[14:09] <brrt> thanks :-)

[14:10] *** ely-se joined
[14:10] *** brrt left
[14:10] *** raiph joined
[14:11] *** hahainte1net is now known as hahainternet

[14:14] *** lnrdo_ joined
[14:15] *** espadrine_ joined
[14:16] *** xenu_ is now known as xenu

[14:18] <hankache> computer, messages

[14:18] <yoleaux> 09:51Z <nine> hankache: panda requires a "prove.bat" command to be available for testing. This is a Perl 5 script and I guess strawberry perl is the easiest way to get it.

[14:19] <hankache> .tell nine thanks dear

[14:19] <yoleaux> hankache: I'll pass your message to nine.

[14:21] <hankache> .tell nine but this means that in order for it to work every person on Windows needs Perl 5 installed. While this is no problem on *nix, i find it counter intuitive to tell people to install Perl 5 in order for it to work. 

[14:21] <yoleaux> hankache: I'll pass your message to nine.

[14:24] <nine> hankache: we know, a fix is in the works by leont++

[14:24] <yoleaux> 14:19Z <hankache> nine: thanks dear

[14:24] <yoleaux> 14:21Z <hankache> nine: but this means that in order for it to work every person on Windows needs Perl 5 installed. While this is no problem on *nix, i find it counter intuitive to tell people to install Perl 5 in order for it to work.

[14:26] *** pi4 joined
[14:26] <AlexDaniel> separate streams for presentation and video! Great!

[14:29] *** mscha joined
[14:31] <hankache> nine: thanks 

[14:32] *** lichtkind joined
[14:36] *** cdg joined
[14:38] *** M-eternaleye joined
[14:40] *** musiKk left
[14:40] *** firstdayonthejob left
[14:42] *** firstdayonthejob joined
[14:44] *** kjs_ left
[14:49] <dalek> doc: 531bfd9 | (Zoffix Znet)++ | doc/Type/Cool.pod:

[14:49] <dalek> doc: Document :skip-empty in .split

[14:49] <dalek> doc: review: https://github.com/perl6/doc/commit/531bfd9501

[14:50] <dalek> doc: 47c01e8 | (Zoffix Znet)++ | doc/Type/Cool.pod:

[14:50] <dalek> doc: Remove accidentally added garbage

[14:50] <dalek> doc: review: https://github.com/perl6/doc/commit/47c01e8308

[14:50] *** muraiki joined
[14:50] <ely-se> what does "dalek" mean?

[14:51] <AlexDaniel> m: my $x = 1; sub foo($bar = $x++) { say $bar }; foo; foo; foo

[14:51] <camelia> rakudo-moar 2e1782: OUTPUT«1␤2␤3␤»

[14:51] <masak> ely-se: it's just a bot that watches some of our repos.

[14:51] <ely-se> yes, I know, but where does the name come from?

[14:51] <masak> Dr Who, I guess

[14:51] <masak> https://en.wikipedia.org/wiki/Dalek

[14:51] <ely-se> oh wait it's those robots from Dr Who isn't it

[14:51] <lizmat> exterminate!

[14:51] <ely-se> right :)

[14:52] <masak> EX TER MIN ATE

[14:52] <masak> some people will most likely enjoy https://www.youtube.com/watch?v=KB7HF82y9CI

[14:53] <RabidGravy> and we all go and hide behind the sofa when they appear

[14:58] *** dustinm` left
[14:58] <nine> lizmat: :)

[15:02] *** lizmat left
[15:04] <llfourn> oh lizmat is up next

[15:04] *** brrt joined
[15:04] <ely-se> what happened to the Perl 6 to JS compiler?

[15:04] <llfourn> ely-se: still a work in progress

[15:04] <nine> it's in thecworks

[15:05] <moritz> writing a compiler backend is slow work, especially if done by one person on the side

[15:05] *** dustinm` joined
[15:05] <brrt> go lizmat:-)

[15:06] <RabidGravy> I'm ruined for POSIX regexes

[15:06] <brrt> try emacs regexes

[15:06] <brrt> :-P

[15:06] * brrt is shutting up again due to presentation-starting

[15:07] <ely-se> llfourn: oh ok :)

[15:07] <dalek> ecosystem: 505ed52 | (Zoffix Znet)++ | META.list:

[15:07] <dalek> ecosystem: Text::CSV META.info -> META6.json

[15:07] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/505ed52ed4

[15:07] *** brrt left
[15:08] <moritz> vim regexes are also "fun"

[15:08] <moritz> they come in at least three different flavours

[15:12] *** leont joined
[15:16] <RabidGravy> first thing I had forgotten was that back references start at \1 and \0 was the whole match

[15:17] <RabidGravy> ( was doing for file in t/*; do NEW=`echo $file | sed -e 's/\([0-9]\)-/\10-/'`; echo "$file -> $NEW"; git mv $file $NEW; done )

[15:17] *** lnrdo_ left
[15:18] *** muraiki left
[15:22] *** lnrdo_ joined
[15:26] *** khw joined
[15:26] *** dixvagon joined
[15:31] *** a3r0_ left
[15:35] *** kurahaupo joined
[15:37] <AlexDaniel> mic! Miiic! :/

[15:38] <Skarsnik> yes what happened to the mic :(

[15:38] *** leont left
[15:40] *** zakharyas joined
[15:46] *** perl6newbee joined
[15:49] *** rindolf joined
[15:51] *** CurtisOvidPoe joined
[15:52] <CurtisOvidPoe> p6: await(^20).map: { start { sleep.rand; .print } }

[15:52] <camelia> rakudo-moar 2e1782: OUTPUT«Must specify a Promise or Channel to await on (got a Int)␤  in block <unit> at /tmp/tmpfile line 1␤␤»

[15:52] <CurtisOvidPoe> What have I missed?

[16:01] <El_Che> await expects a promise

[16:01] *** ZoffixWin joined
[16:01] *** ZoffixWin left
[16:01] *** ZoffixWin joined
[16:01] <hankache> m:  ^20.map: { await start { sleep.rand; .print } }

[16:01] <ZoffixWin> Any way to make a sub operate on $_?

[16:01] <ZoffixWin> m: sub foo {say $_::OUTER}; given "foobar" { foo }

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«(timeout)Potential difficulties:␤    Precedence of ^ is looser than method call; please parenthesize␤    at /tmp/n8etCWQCP6:1␤    ------> 3^207⏏5.map: { await start { sleep.rand; .print␤WARNINGS for /tmp/n8etCWQCP6:␤Useless use of "^" in ex…»

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«(Any)␤»

[16:01] <hankache> m:  (^20).map: { await start { sleep.rand; .print } }

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«(timeout)»

[16:01] <hankache> m:  ^3.map: { await start { sleep.rand; .print } }

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«(timeout)Potential difficulties:␤    Precedence of ^ is looser than method call; please parenthesize␤    at /tmp/lYHt2e7FkV:1␤    ------> 3^37⏏5.map: { await start { sleep.rand; .print␤WARNINGS for /tmp/lYHt2e7FkV:␤Useless use of "^" in exp…»

[16:01] <hankache> m:  (^3).map: { await start { sleep.rand; .print } }

[16:01] <ZoffixWin> What are you doing?

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«(timeout)»

[16:01] <llfourn> what is sleep.rand

[16:01] <hankache> see CurtisOvidPoe ^^

[16:01] <perl6newbee> hi all

[16:01] <hankache> i am trying to make his example work

[16:01] <llfourn> m: say sleep.rand.^name

[16:01] <ZoffixWin> hankache, sleep.rand sleeps forever and even if it returned it'd call .rand on Nil

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«(timeout)»

[16:01] <llfourn> m: say sleep.^name;

[16:01] <llfourn> ah sleep just sleeps forever

[16:01] <hankache> m:  (^3).map: { await start { sleep(3); .print } }

[16:01] *** CurtisOvidPoe left
[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«(timeout)»

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«012»

[16:01] *** CurtisOvidPoe joined
[16:01] <ZoffixWin> p6: await ( ^20 .map: { start { sleep.rand; .print } } )

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«Memory allocation failed; could not allocate 14064 bytes␤»

[16:01] <llfourn> m:  ^20.map: { await start { sleep rand; .print } }

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«Potential difficulties:␤    Precedence of ^ is looser than method call; please parenthesize␤    at /tmp/DKAcTWX3SI:1␤    ------> 3^207⏏5.map: { await start { sleep rand; .print␤WARNINGS for /tmp/DKAcTWX3SI:␤Useless use of "^" in expression …»

[16:01] <ZoffixWin> CurtisOvidPoe, perhaps you were looking for that ^?

[16:01] <hankache> m:  (^20).map: { await start { sleep(1); .print } }

[16:01] <llfourn> m:  (^20).map: { await start { sleep rand; .print } }

[16:01] <CurtisOvidPoe> p6: await (^20).map: { start { sleep rand; .print } }

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«012345678910Memory allocation failed; could not allocate 14000 bytes␤»

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«012345678910Memory allocation failed; could not allocate 14256 bytes␤»

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«Memory allocation failed; could not allocate 14312 bytes␤»

[16:01] <llfourn> lol

[16:01] <hankache> m:  (^5).map: { await start { sleep(1); .print } }

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«01234»

[16:01] <hankache> CurtisOvidPoe (^5).map: { await start { sleep(1); .print } }

[16:01] <llfourn> m:  await (^20).map: { start { sleep rand; .print } }

[16:01] <camelia> rakudo-moar 2e1782: OUTPUT«Memory allocation failed; could not allocate 14312 bytes␤»

[16:01] <ZoffixWin> hankache, that'll await each promise before proceeding to the next one

[16:01] <ZoffixWin> May as well not use any Promises at all

[16:02] <llfourn> m:  await (^10).map: { start { sleep rand; .print } }

[16:02] <camelia> rakudo-moar 2e1782: OUTPUT«2704165839»

[16:02] * hankache gives up

[16:02] <llfourn> m:  await (^15).map: { start { sleep rand; .print } }

[16:02] <camelia> rakudo-moar 2e1782: OUTPUT«Memory allocation failed; could not allocate 14312 bytes␤»

[16:02] <ZoffixWin> m: (^5).map: { await start { sleep(1) } }; say now - INIT now

[16:02] <camelia> rakudo-moar 2e1782: OUTPUT«5.0069193␤»

[16:02] <ZoffixWin> m: await (^5).map: { start { sleep(1) } }; say now - INIT now

[16:02] <camelia> rakudo-moar 2e1782: OUTPUT«1.0054976␤»

[16:02] <ZoffixWin> Pretty cool that 5 1-second sleeps on a 4-core box still complete in 1s :)

[16:02] <llfourn> so camelia's memory limit is just super low?

[16:02] <ZoffixWin> Yeah

[16:02] <hankache> m: await (^5).map: { start { sleep(1); .print } }

[16:02] <camelia> rakudo-moar 2e1782: OUTPUT«01234»

[16:03] <hankache> so this is the correct one ^^

[16:03] <hankache> hi perl6newbee

[16:03] <ZoffixWin> m: use NativeCall; sub system is native {}; say system 'ulimit'

[16:03] <llfourn> well the rand one is coolor imo but yes

[16:03] <camelia> rakudo-moar 2e1782: OUTPUT«5===SORRY!5=== Error while compiling /tmp/Dakw169KOt␤Calling system(Str) will never work with declared signature ()␤at /tmp/Dakw169KOt:1␤------> 3ativeCall; sub system is native {}; say 7⏏5system 'ulimit'␤»

[16:03] <ZoffixWin> m: use NativeCall; sub system(Str) is native {}; say system 'ulimit'

[16:03] <camelia> rakudo-moar 2e1782: OUTPUT«30720␤(Mu)␤»

[16:04] <ZoffixWin> hankache, yup

[16:04] <ZoffixWin> So... any idea for my thing? I want a sub that operates on $_

[16:04] <ZoffixWin> m: sub foo {say OUTER::CALLER::{$_} }; given "foobar" { foo }

[16:04] <camelia> rakudo-moar 2e1782: OUTPUT«Use of uninitialized value $_ of type Any in string context␤Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub foo at /tmp/QqsFXw2QCD line 1␤Nil␤»

[16:04] *** cdg left
[16:05] *** CurtisOvidPoe left
[16:05] <llfourn> ZoffixWin: why are you using OUTER::CALLER and not just CALLER?

[16:05] *** spider-mario left
[16:05] <hankache> no idea

[16:05] <llfourn> m: sub foo {say CALLER::{$_} }; given "foobar" { foo }

[16:05] <camelia> rakudo-moar 2e1782: OUTPUT«Use of uninitialized value $_ of type Any in string context␤Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub foo at /tmp/aK7OioMIIC line 1␤Nil␤»

[16:05] <ZoffixWin> llfourn, saw it in rakudo source. Neither works though

[16:05] <llfourn> m: sub foo {say CALLERS::{$_} }; given "foobar" { foo }

[16:05] <camelia> rakudo-moar 2e1782: OUTPUT«Use of uninitialized value $_ of type Any in string context␤Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub foo at /tmp/boeWVwDcMT line 1␤Nil␤»

[16:05] <llfourn> m: sub foo {say CALLERS::<$_> }; given "foobar" { foo }

[16:05] <camelia> rakudo-moar 2e1782: OUTPUT«foobar␤»

[16:06] <llfourn> m: sub foo {say CALLER::<$_> }; given "foobar" { foo }

[16:06] <camelia> rakudo-moar 2e1782: OUTPUT«foobar␤»

[16:06] <llfourn> amidoinrite?

[16:06] <ZoffixWin> Thanks

[16:06] <llfourn> nw :D

[16:11] *** hankache left
[16:11] *** kmel joined
[16:13] <ZoffixWin> hm

[16:13] <ZoffixWin> m: sub foo {say CALLER::<$_> }; foo for @*ARGV

[16:13] <camelia> rakudo-moar 2e1782: OUTPUT«(HANDLED) Dynamic variable @*ARGV not found␤  in block <unit> at /tmp/MQy6LQDHLH line 1␤␤»

[16:13] <ZoffixWin> llfourn, ^ any idea for how to take care of that stuff?

[16:14] <moritz> use @*ARGS instead?

[16:14] <ZoffixWin> moritz, that's not the issue, the sub cases the failure to be handled.

[16:14] <ZoffixWin> s/cases/causes/;

[16:14] <moritz> oh

[16:15] <llfourn> I don't even get it what's happening?

[16:15] *** mcmillhj joined
[16:15] <ZoffixWin> m: sub foo { CALLER::<$_> }; foo for @*ARGV; say "Weee";

[16:15] <camelia> rakudo-moar 2e1782: OUTPUT«Weee␤»

[16:15] <ZoffixWin> Here it's clearer.

[16:15] <llfourn> oh

[16:15] <ZoffixWin> m: sub foo { CALLER::<$_> }; foo for @*ARGVZOMFGGG; say "Weee";

[16:15] <camelia> rakudo-moar 2e1782: OUTPUT«Weee␤»

[16:15] <moritz> ZoffixWin: possibly something in sub DYNAMIC

[16:15] *** mcmillhj left
[16:15] <llfourn> m: .say for @*NOTEXIST;

[16:15] <camelia> rakudo-moar 2e1782: OUTPUT«Dynamic variable @*NOTEXIST not found␤  in block <unit> at /tmp/CAGi6hGXzn line 1␤␤Actually thrown at:␤  in block <unit> at /tmp/CAGi6hGXzn line 1␤␤»

[16:16] <llfourn> m: say "wut" for @*NOTEXIST;

[16:16] <camelia> rakudo-moar 2e1782: OUTPUT«wut␤»

[16:16] <llfourn> m: say .^name for @*NOTEXIST;

[16:16] <camelia> rakudo-moar 2e1782: OUTPUT«Failure␤»

[16:16] <llfourn> I see.

[16:16] <ZoffixWin> m: say "wut" for @*NOTEXIST; say "Weee"

[16:16] *** lnrdo_ left
[16:16] <camelia> rakudo-moar 2e1782: OUTPUT«wut␤Weee␤»

[16:17] <ZoffixWin> Methinks this is a bug. 

[16:17] <llfourn> it's definetly bugish

[16:17] *** lnrdo_ joined
[16:17] <llfourn> imo a non-existent @* should just be empty

[16:17] *** mr-foobar joined
[16:19] *** musiKk joined
[16:19] <llfourn> m: my @*a := 3; say @*a.WHAT # there is also this I noticed the other day

[16:19] <camelia> rakudo-moar 2e1782: OUTPUT«(Int)␤»

[16:20] *** kmel left
[16:20] *** ely-se left
[16:21] *** SCHAAP137 left
[16:21] *** lnrdo_ left
[16:23] <ZoffixWin> m: say (0 .. 0xFFFF)».chr.join

[16:23] <camelia> rakudo-moar 2e1782: OUTPUT«Error encoding UTF-8 string: could not encode codepoint 55296␤  in block <unit> at /tmp/oNTIkNNjyj line 1␤␤»

[16:23] <ZoffixWin> :/

[16:24] *** yqt joined
[16:25] <ZoffixWin> m: say sprintf '%x', 55296

[16:25] <camelia> rakudo-moar 2e1782: OUTPUT«d800␤»

[16:25] <ZoffixWin> .u 0xd800

[16:25] <yoleaux> No characters found

[16:26] *** mscha left
[16:27] <geekosaur> hm. isn't that range reserved for surrogate pairs?

[16:27] <geekosaur> unicode makes no promise that all codepoints are valid

[16:28] *** skids joined
[16:28] <ZoffixWin> k

[16:30] <geekosaur> perl 6 shouldn't need surrogate pairs, and encountering a codepoint int hat range means something was incorrectly decoded at some point, so an exception is appropriate

[16:31] <geekosaur> (they're a hack for utf16 to handle non-BMP codepoints)

[16:32] *** SCHAAP137 joined
[16:36] *** zakharyas left
[16:44] *** musiKk left
[16:44] <AlexDaniel> m: $_ = 25; sub foo($x is rw) { $x++ }; foo($_); say $_

[16:44] <camelia> rakudo-moar 2e1782: OUTPUT«26␤»

[16:45] <AlexDaniel> ZoffixWin: ↑ ??

[16:45] <ZoffixWin> Hm?

[16:46] <AlexDaniel> “So... any idea for my thing? I want a sub that operates on $_”

[16:47] <AlexDaniel> ah

[16:47] <AlexDaniel> ZoffixWin: you just don't want to pass it explicitly?

[16:47] <ZoffixWin> Right

[16:47] <ZoffixWin> CALLERS::<$_> works

[16:47] <AlexDaniel> indeed

[16:50] * geekosaur is not sure that implicit stuff like that is a great idea, tbh

[16:50] <vendethiel> ^

[16:50] <vendethiel> please don't..

[16:50] * ZoffixWin is replicating a Perl 5 sub

[16:50] <geekosaur> perl 5 did it a lot... but it's also part of why people decry spooky-action-at-a-distance in p5

[16:50] <vendethiel> "let's try making different mistakes"

[16:51] <geekosaur> making different mistakes can lead to you learning better ways to do things. making the same mistake over and over usually doesn't >.>

[16:52] <ZoffixWin> Making different mistakes will make my port of Perl 5 code behave differently.

[16:52] *** ZoffixWin left
[16:58] *** ely-se joined
[17:08] *** Guest92014 left
[17:10] *** musiKk joined
[17:10] *** zacts joined
[17:18] *** pdl joined
[17:19] *** hankache joined
[17:21] *** ZoffixWin joined
[17:21] <ZoffixWin> Is this a bug?

[17:21] <ZoffixWin> m: say so '÷' ~~ /<[  \x[f7]  ]>/

[17:21] <camelia> rakudo-moar 2e1782: OUTPUT«True␤»

[17:21] <ZoffixWin> m: say so '÷' ~~ /<[  \x[f7]  \x[34f]  ]>/

[17:21] <camelia> rakudo-moar 2e1782: OUTPUT«False␤»

[17:21] <ZoffixWin> :/

[17:22] <ZoffixWin> .u U+034F

[17:22] <yoleaux> U+034F COMBINING GRAPHEME JOINER [Mn] (◌͏)

[17:22] <ZoffixWin> Is the char class actually combining things :/

[17:23] <geekosaur> ?

[17:24] <ZoffixWin> ??

[17:24] <geekosaur> I don;t quite understand what you're asking about

[17:24] <ZoffixWin> Why is the match failing if I add another char into my character class

[17:24] <ZoffixWin> I want to match a char that is either ÷ or ◌, but the character class fails.

[17:25] *** nebuchadnezzar left
[17:25] <ZoffixWin> And fails only when the 34f follows the f7

[17:25] <ZoffixWin> m: say so '÷' ~~ /<[  \x[34f] \x[f7]  ]>/

[17:25] <camelia> rakudo-moar 2e1782: OUTPUT«True␤»

[17:25] <ZoffixWin> m: say so '÷' ~~ /<[  \x[f7]  \x[34f] ]>/

[17:25] <camelia> rakudo-moar 2e1782: OUTPUT«False␤»

[17:26] <ZoffixWin> This works, but is 3 times slower :/

[17:26] <ZoffixWin> m: say so  '÷' ~~ /[  \x[f7] | \x[34f]  ]/

[17:26] <camelia> rakudo-moar 2e1782: OUTPUT«True␤»

[17:26] <hankache> if i have a string of 1000 characters, how can i split it into multiple lines? having each line hold 10 characters?

[17:26] <ZoffixWin> hankache, .comb(10)

[17:26] <geekosaur> oh, I see

[17:26] <ZoffixWin> hankache, .comb(10).join: "\n" I suppose

[17:26] *** isBEKaml joined
[17:27] <hankache> thanks ZoffixWin will try it now

[17:27] <geekosaur> that said, iirc u+034f is weird and I would not be surprised if it acts up

[17:27] <ZoffixWin> Yeah, it's a "joiner", so I'm guessing it joins up with the division

[17:27] <ZoffixWin> m: say "\x[f7]\x[34f]"

[17:27] <camelia> rakudo-moar 2e1782: OUTPUT«÷͏␤»

[17:27] <ZoffixWin> :/

[17:27] *** musiKk left
[17:28] <geekosaur> it's not really a joiner

[17:29] <geekosaur> that's the weird

[17:29] <geekosaur> it's more a separator, in fact (it prevents a combining character from combining)

[17:29] <ZoffixWin> ah

[17:29] <pdl> m: say so "÷\x[34f]" ~~ /<[  \x[f7]  \x[34f] ]>/

[17:29] <camelia> rakudo-moar 2e1782: OUTPUT«True␤»

[17:29] <geekosaur> so it's special cased, and I suspect it's the special case that's biting

[17:30] <pdl> m: say so "÷\x[34f]" ~~ /^<[  \x[f7]  \x[34f] ]>$/

[17:30] <camelia> rakudo-moar 2e1782: OUTPUT«True␤»

[17:30] <geekosaur> also possibly some places that incorrectly treat it as a combining char still need to be fixed...

[17:38] *** araujo_ left
[17:38] *** araujo_ joined
[17:39] <ZoffixWin> :S "chars requires a concrete string, but got null"

[17:39] <ZoffixWin> Not even using .chars

[17:43] *** yqt left
[17:49] *** Guest80033 left
[17:50] *** molaf joined
[17:52] *** eyck left
[17:53] *** eyck joined
[17:55] <ZoffixWin> Planned time: 20 minutes; Spent time so far: 2 hours

[17:55] <ZoffixWin> Programming is hard :(

[17:55] <diakopter> Planning is hard!

[18:01] <ZoffixWin> .u U+2adc

[18:01] <yoleaux> U+2ADC FORKING [Sm] (􏿽xE2􏿽xAB􏿽x9C)

[18:01] <ZoffixWin> :o

[18:02] <geekosaur> what's that saying about the first half of a project takes 90% of the time and the second half takes the other 90%? >.>

[18:03] <ZoffixWin> heh

[18:04] *** sevvie joined
[18:07] <MadcapJake> ok so i totally don't understand how to do heroku buildpacks, so. much. bash.

[18:08] <MadcapJake> i tried to make a rakudo buildpack, but failed

[18:09] <MadcapJake> unfortunately any time rakudo moves locations, hard coded paths to moar fail

[18:10] <MadcapJake> actually, now that i think about it more, i'm guessing i'd have to build nqp and moar separately

[18:10] *** dolmen left
[18:12] *** eyck left
[18:12] *** eyck joined
[18:17] <dalek> ecosystem: f0e307a | (Zoffix Znet)++ | META.list:

[18:17] <dalek> ecosystem: Add String::Quotemeta to ecosystem

[18:17] <dalek> ecosystem: 

[18:17] <dalek> ecosystem: Implementation of Perl 5's quotemeta subroutine: https://github.com/zoffixznet/perl6-String-Quotemeta

[18:17] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/f0e307a295

[18:17] *** mr-foobar left
[18:24] *** nebuchadnezzar joined
[18:29] *** Actualeyes left
[18:36] *** mr-foobar joined
[18:37] *** eyck left
[18:37] *** Gido_back joined
[18:38] *** Gido_back left
[18:43] *** p_p_r left
[18:46] *** p_p_r joined
[18:49] *** dixvagon left
[18:52] *** mr-foobar left
[18:54] *** eyck joined
[18:55] *** mr-foobar joined
[18:56] *** rindolf left
[18:56] *** ely-se left
[18:57] *** ely-se joined
[18:59] *** rindolf joined
[19:07] *** espadrine_ left
[19:09] *** johan left
[19:11] <ely-se> m: class C { has Str $.x; }; C.new(x => 'a').say; C.new(x => Nil).say;

[19:11] <camelia> rakudo-moar 2e1782: OUTPUT«C.new(x => "a")␤C.new(x => Str)␤»

[19:13] <ely-se> m: class C { has Str:D $.x; }; C.new(x => 'a').say; C.new(x => Nil).say;

[19:13] <camelia> rakudo-moar 2e1782: OUTPUT«5===SORRY!5=== Error while compiling /tmp/Lt8_YiBrLq␤Variable definition of type Str:D requires an initializer␤at /tmp/Lt8_YiBrLq:1␤------> 3class C { has Str:D $.x7⏏5; }; C.new(x => 'a').say; C.new(x => Nil␤    expecting any of:␤      …»

[19:13] <ely-se> :(

[19:14] *** johan joined
[19:17] *** b2gills left
[19:20] *** perl6newbee left
[19:23] <dalek> rakudo-star-daily: 9024448 | coke++ | log/ (10 files):

[19:23] <dalek> rakudo-star-daily: today (automated commit)

[19:23] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/9024448362

[19:23] <dalek> rakudo-star-daily: 293f395 | coke++ | log/ (8 files):

[19:23] <dalek> rakudo-star-daily: today (automated commit)

[19:23] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/293f395f3e

[19:23] <dalek> rakudo-star-daily: 5fcc6f3 | coke++ | log/ (2 files):

[19:23] <dalek> rakudo-star-daily: today (automated commit)

[19:23] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/5fcc6f352b

[19:23] <dalek> perl6-roast-data: cfc31df | coke++ | / (6 files):

[19:23] <dalek> perl6-roast-data: today (automated commit)

[19:23] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/cfc31dfb4a

[19:26] *** kjs_ joined
[19:27] *** musiKk joined
[19:30] *** b2gills joined
[19:33] *** ely-se left
[19:36] *** b2gills left
[19:39] *** ely-se joined
[19:40] *** yurivish joined
[19:45] <hankache> class A {}; class B is A {}; class C is A {}; is there a way using the MOP to do something like: say A.children ? and the return value would be B,C

[19:45] <hankache> ?

[19:45] *** yqt joined
[19:45] <ugexe> a blog post about implementing s22's Distribution interface: http://ugexe.com/perl6-distribution-thoughts-and-proposals/

[19:47] *** damnlie joined
[19:47] <hankache> ugexe++

[19:47] *** darutoko left
[19:49] *** b2gills joined
[19:51] *** orbus joined
[19:57] *** kjs_ left
[19:57] <musiKk> Is it possible to add '.' to the module search path by default?

[19:58] <ugexe> add it to PERL6LIB env var maybe

[19:59] <MadcapJake> moarvm's make doesn't respect the «--silent» flag

[20:00] <hankache> m: class D { }; class C1 is D { }; class C2 is D { }; say C2.^parents

[20:00] <camelia> rakudo-moar 2e1782: OUTPUT«((D))␤»

[20:01] <hankache> i need something like this: D.^children

[20:01] <hankache> any ideas?

[20:01] <musiKk> ugexe: Thanks!

[20:11] *** kjs_ joined
[20:15] <MadcapJake> when creating a 2015.12 build of perl6 and panda, should i use panda's 2015.12 tag tar.gz or just «git clone --recursive» as the readme states?

[20:16] <timotimo> o/

[20:16] <timotimo> any reason to backlog today?

[20:16] <hankache> hola timo

[20:18] <ZoffixWin> timotimo, yes, someone came up with cure for cancer

[20:19] <ZoffixWin> hankache, no, there isn't a ^children. You may find some of this useful, but it won't work for anonymous classes and stuff like that: https://github.com/zoffixznet/perl6-Evil/blob/master/lib/Evil.pm6

[20:19] *** domidumont left
[20:20] <hankache> ZoffixWin I'll take a look at i. Thanks

[20:22] *** chienjo joined
[20:24] <chienjo> p6: say |('A'..'Z')

[20:24] <camelia> rakudo-moar 2e1782: OUTPUT«ABCDEFGHIJKLMNOPQRSTUVWXYZ␤»

[20:28] *** spider-mario joined
[20:29] *** rindolf left
[20:31] <chienjo> p6: my @lower  = 'a'..'z'; say @lower.comb

[20:31] <camelia> rakudo-moar 2e1782: OUTPUT«(a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x   y   z)␤»

[20:31] <chienjo> p6: my @lower  = 'a'..'z'; say @lower.pick(*)

[20:31] <camelia> rakudo-moar 2e1782: OUTPUT«(i c z q r o u l h f m t p y a d e w s n j x v k g b)␤»

[20:31] <chienjo> p6: my @lower  = 'a'..'z'; say @lower.pick(^5)

[20:32] <camelia> rakudo-moar 2e1782: OUTPUT«(g j b y o)␤»

[20:32] <chienjo> p6: my @lower  = 'a'..'z'; say @lower.pick(5)

[20:32] <camelia> rakudo-moar 2e1782: OUTPUT«(u g c w n)␤»

[20:33] *** Praise- is now known as Praise

[20:35] *** kaare__ left
[20:36] <chienjo> p6: my @lower  = 'a'..'z'; say @lower.combinations(4)

[20:36] <camelia> rakudo-moar 2e1782: OUTPUT«((a b c d) (a b c e) (a b c f) (a b c g) (a b c h) (a b c i) (a b c j) (a b c k) (a b c l) (a b c m) (a b c n) (a b c o) (a b c p) (a b c q) (a b c r) (a b c s) (a b c t) (a b c u) (a b c v) (a b c w) (a b c x) (a b c y) (a b c z) (a b d e) (a b d f) (a b …»

[20:37] *** lokien_ joined
[20:38] <chienjo> p6: my @lower  = 'a'..'z'; say @lower.combinations(4).elems

[20:38] <camelia> rakudo-moar 2e1782: OUTPUT«14950␤»

[20:38] *** pmurias joined
[20:39] <pmurias> ely-se: re Perl 6 -> JavaScript compiler, it's still at the NQP stage

[20:41] <timotimo> the fosdem totally took me by surprise

[20:41] *** renatolrr joined
[20:41] <MadcapJake> timotimo: how so?

[20:42] *** renatolrr left
[20:42] *** chienjo left
[20:42] <vendethiel> by surprise

[20:42] <Juerd> How was fosdem? 

[20:43] <Juerd> I had to miss it

[20:43] <Juerd> Spent most of my days in bed.

[20:44] *** chienjo joined
[20:45] <MadcapJake> vendethiel: -_-

[20:45] <vendethiel> I hope more videos will be available this year

[20:46] <MadcapJake> I spent the weekend battling heroku (and losing)

[20:47] <moritz> MadcapJake: try hosting it on hack.p6c.org?

[20:47] <MadcapJake> gladly!

[20:47] <MadcapJake> i asked earlier but never received a reply

[20:48] *** yurivish left
[20:48] <timotimo> MadcapJake: it just happened without me realizing it'd happen at that time

[20:48] <MadcapJake> ahh i see

[20:49] <moritz> MadcapJake: what username do you want?

[20:50] *** renatolrr joined
[20:50] <moritz> MadcapJake: oh wait, are you jrusso on there?

[20:50] <MadcapJake> yeah

[20:50] <moritz> MadcapJake: so, what do you need?

[20:50] *** chienjo left
[20:51] <MadcapJake> well i created a free domain «perl6.bestforever.com» so i'll need to direct that to a web server, i already have the website built: https://github.com/MadcapJake/perl6-slack-inviter

[20:53] <moritz> MadcapJake: can you control the DNS entries of perl6.bestforever.com?

[20:53] <MadcapJake> yeah

[20:55] <moritz> MadcapJake: I'd propose we do the following: you start a web server listening on localhost on a free port, I add a virtualhost for that domain, and set up a reverse proxy that connects to your port; then you point the DNS to hack's public IP (213.95.82.54)

[20:55] <moritz> MadcapJake: and when that works for a while, you write a systemd service file that keeps the Perl 6 process running

[20:56] *** wamba joined
[21:05] *** BenGoldberg left
[21:07] <MadcapJake> ok, i may have forgotten my password :P

[21:07] <moritz> MadcapJake: should I reset it?

[21:09] <MadcapJake> yeah, is the network unreachable because i tried too many times xD

[21:11] *** lichtkind_ joined
[21:12] <hankache> what is the difference between module and package ?

[21:12] <RabidGravy> I'm confusled

[21:12] *** lichtkind left
[21:13] <moritz> hankache: a package can do less stuff basically

[21:13] <RabidGravy> m: package F {};  package F{}

[21:13] <camelia> rakudo-moar 2e1782: ( no output )

[21:13] <RabidGravy> m: module F {};  module F{}

[21:13] <camelia> rakudo-moar 2e1782: OUTPUT«5===SORRY!5=== Error while compiling /tmp/IQ4ed0IYTm␤Redeclaration of symbol F␤at /tmp/IQ4ed0IYTm:1␤------> 3module F {};  module F7⏏5{}␤    expecting any of:␤        generic role␤»

[21:13] <moritz> m: package A { ... }; class A { }

[21:13] <camelia> rakudo-moar 2e1782: OUTPUT«5===SORRY!5=== Error while compiling /tmp/N8unmOv6pH␤The following packages were stubbed but not defined:␤    A␤at /tmp/N8unmOv6pH:1␤------> 3package A { ... }; class A { }7⏏5<EOL>␤    expecting any of:␤        postfix␤        state…»

[21:13] <RabidGravy> m: module F {};  module F {}

[21:13] <camelia> rakudo-moar 2e1782: OUTPUT«5===SORRY!5=== Error while compiling /tmp/A9WefOgXd2␤Redeclaration of symbol F␤at /tmp/A9WefOgXd2:1␤------> 3module F {};  module F7⏏5 {}␤    expecting any of:␤        generic role␤»

[21:14] <Skarsnik> lol

[21:14] <Skarsnik> that really a weird error

[21:14] <RabidGravy> but yeah the most user visible difference is that you can have the same package more than one, not so with a module

[21:15] <Skarsnik> Package was not to have one module on multiple files?

[21:15] <Skarsnik> or to have like Java package

[21:16] <hankache> aha

[21:16] <hankache> thanks

[21:16] <Skarsnik> I like java package stuff, because you can say "This class is public for the package" and you can access the class freely in your package without exposing it to the outside world that use your package

[21:16] <RabidGravy> well, it's what you get if have A::B::C if you don't specify otherwise

[21:17] <RabidGravy> m: module A::B { class C { } }; say A.HOW; say A::B.HOW;  say A::B::C.HOW;

[21:17] <camelia> rakudo-moar 2e1782: OUTPUT«Perl6::Metamodel::PackageHOW.new␤Perl6::Metamodel::ModuleHOW.new␤Perl6::Metamodel::ClassHOW.new␤»

[21:18] *** musiKk left
[21:20] <AlexDaniel> m: say [~] (0..0x1FFFF ==> grep { .uniprop ~~ m/‘Me’/ })».chr

[21:21] <camelia> rakudo-moar 2e1782: OUTPUT«҈҉᪾⃝⃞⃟⃠⃢⃣⃤꙰꙱꙲␤»

[21:22] *** geraud joined
[21:24] *** labster joined
[21:26] *** pecastro joined
[21:26] <masak> Skarsnik: I think I like lexical scoping for the reason you give. you declare a variable in a scope, and you can access it in exactly that scope. doesn't even need a special mechanism or keyword.

[21:28] *** pdl left
[21:28] <AlexDaniel> m: say [~] (0..0x1FFFF ==> grep { .uniname ~~ m/‘FACE’/ })».chr

[21:28] <camelia> rakudo-moar 2e1782: OUTPUT«፦∯☹☺☻⚀⚁⚂⚃⚄⚅⾯〠龜𝤔𝤕𝨇𝨈𝨉🌚🌛🌜🌝🌞🌬🐭🐮🐯🐰🐱🐲🐴🐵🐶🐷🐸🐹🐺🐻🐼💆🕐🕑🕒🕓🕔🕕🕖🕗🕘🕙🕚🕛🕜🕝🕞🕟🕠🕡🕢🕣🕤🕥🕦🕧😀😁…»

[21:28] *** Guest9988 joined
[21:28] <ZoffixWin> .u 🐹

[21:28] <yoleaux> U+1F439 HAMSTER FACE [So] (🐹)

[21:31] <ZoffixWin> m: say [~] (0..0x1FFFF ==> grep { .uniname ~~ m/‘DONG’/ })».chr

[21:32] <camelia> rakudo-moar 2e1782: OUTPUT«༙᭡₫␤»

[21:32] <ZoffixWin> :}

[21:34] *** domidumont joined
[21:35] <masak> .u ᭡

[21:35] <yoleaux> U+1B61 BALINESE MUSICAL SYMBOL DONG [So] (᭡)

[21:35] *** BenGoldberg joined
[21:37] *** Guest9988 left
[21:38] *** bowtie_ joined
[21:38] *** hankache left
[21:46] <moritz> \o/ http://perl6.bestforever.com/ runs now

[21:46] <moritz> hosted on hack, powered by Perl 6 (and Bailador and Apache and Linux and ... )

[21:47] <MadcapJake> moritz++

[21:47] *** kjs_ left
[21:47] *** mr-foobar left
[21:48] <RabidGravy> cool

[21:48] * MadcapJake waits in Perl 6 slack for anyone to actually join :P

[21:48] <MadcapJake> moritz: would it be alright to post to reddit?

[21:49] <moritz> MadcapJake: sure

[21:49] <pmurias> what's the advantage of slack over irc?

[21:49] <moritz> the chances of it attrackting much traffic isn't big anyway :-)

[21:49] <MadcapJake> well, that's a big topic xD

[21:49] <MadcapJake> moritz: yeah agreed :)

[21:49] <moritz> anyway, time for sleep here

[21:49] *** domidumont left
[21:50] <MadcapJake> pmurias: lots of zealous opinions on slack vs irc, my whole purpose behind setting this up is *just* about adoption (especially amongst the young hip crowd)

[21:52] * MadcapJake loves that he found a fun domain at freedns.afraid.org

[21:53] *** renatolrr left
[21:54] *** ZoffixWin left
[21:57] <pmurias> nqp-js beats nqp-m on the most silly benchmark ever (http://paste.debian.net/377859)

[21:58] *** CurtisOvidPoe joined
[22:00] <pmurias> 1.29s vs 5.38s (and for perl5 without type annotation 14s) ;)

[22:00] <nine> So we should clearly abandon MoarVM

[22:01] <pmurias> duh, looping and multiplication over doubles is the only thing that counts

[22:01] <pmurias> ;)

[22:03] <RabidGravy> well yeah

[22:09] <geekosaur> reminds me of ghc's llvm backend sucks for everything except floating point ops, where it's way better than ncg >.>

[22:11] *** dolmen joined
[22:13] <MadcapJake> ofc i'm getting downvotes from all the irc fans :( oh well

[22:14] <jast> repeat after me: reddit isn't for unpopular opinions

[22:14] <MadcapJake> lol

[22:15] *** kjs_ joined
[22:15] * geekosaur will note that he doesn't mind Slack as an addiitonal "channel" --- just don't expect him to switch to it

[22:16] <MadcapJake> geekosaur: I completely understand that, and that's exactly what this is, an adoption channel, just as the perl6 chanel in irc.perl is funofficial, same goes for this

[22:17] <AlexDaniel> “Success! Check [email@hidden.address] for an invite from Slack.” ok… no sorry

[22:19] <AlexDaniel> MadcapJake: perhaps we should let the young crowd try irc :)

[22:20] *** molaf left
[22:21] <geekosaur> the young crowd seems to think irc is passe and needs to be replaced with something more inscrutable >.>

[22:22] * skids wonders why all the fads never seem to include ditchin centralized services run by unaccountable providers.

[22:22] <MadcapJake> AlexDaniel: What's the issue with the wording there? Do you not like checking your email?

[22:22] <AlexDaniel> MadcapJake: that's not my email. I just want to get in

[22:23] <MadcapJake> Oh you do need an email :P

[22:24] <AlexDaniel> MadcapJake: anyway, is it planned to have a bot here that will be showing what this young crowd is saying there?

[22:24] <MadcapJake> The young crowd will always do whatever it wants, it pays little attention to principles.  It's more important to meet them where they stand than to just expect them to come to you.  Again, this is an adoption channel

[22:24] <MadcapJake> AlexDaniel: I can actually do a full irc bridge that just mirrors all the chatter here there.

[22:24] <MadcapJake> and vice versa

[22:25] *** kjs_ left
[22:25] <AlexDaniel> perhaps it is a meaningful thing to do? Otherwise I don't see how this could possibly be helpful

[22:25] <MadcapJake> I really want to see if I can get a perl6 bot like camelia too

[22:25] *** captain-adequate joined
[22:26] <AlexDaniel> e.g. young guy joins that shiny thing, no one is there, young guy quits

[22:26] <MadcapJake> AlexDaniel: I'm not so sure actually, it's okay for people to meet and discuss things in seperate places than the official channel btw

[22:26] <MadcapJake> AlexDaniel: yes it does need to be used for it to be usable

[22:26] <AlexDaniel> yeah except that lots of smart folks who are present here will not be using this shiny thing

[22:26] <jast> there's lots of features IRC could stand to gain... there was an unnatural level of attention on the IRCv3 post a day or so ago

[22:26] <geekosaur> there could be a #perl6-slack linked and those who want to can join it?

[22:26] <MadcapJake> I placed a memo at the top of the general channel discussing what the official channel is and that this is *not* official by any means

[22:27] <jast> so I do understand why stuff like slack gets the attention it's getting

[22:27] <MadcapJake> geekosaur: yeah I like that idea

[22:27] <geekosaur> jast, there are lots of things tat IRC could stand to have --- but it looks to me like slack's architecture is a disaster

[22:27] <geekosaur> hipchat's somewhat better

[22:27] <jast> IRC's architecture is a disaster, too... but everyone who came up with something better never got anywhere worth mentioning

[22:27] *** Skarsnik left
[22:27] <MadcapJake> Again, adoption is less about architecture and principles and more about what is currently popular.

[22:28] <geekosaur> (but only somewhat. let's not replace irc with something merely *differently* sucky)

[22:28] <geekosaur> (I mean, if we'd followed that with perl 6, it'd be python or something >.> )

[22:28] <jast> both slack and IRC have a single point of failure issue

[22:30] <jast> (I'm guessing about slack... it's pretty difficult to do resilient and fault-tolerant chat, though, so I'm optimistic about my guess)

[22:31] <MadcapJake> hope to see some of you on slack anyways! I'm off to dinner.

[22:31] <AlexDaniel> yeah, adoption is about marketing

[22:32] <AlexDaniel> too bad it doesn't work on conscious crowd…

[22:32] *** yurivish joined
[22:32] <jast> marketing can work on anyone, you just need to understand your "target"

[22:32] <MadcapJake> hehe yep, it's more about the glitz and I think the language itself has tons of that, so just connecting with them will help!

[22:33] <AlexDaniel> jast: actually, you're probably right. Gitter is doing great just by focusing on developers

[22:33] <jast> for example, Camelia is an ingenious targeting device

[22:34] * MadcapJake is off to dinner

[22:34] <jast> gitter could not send me a billion e-mails by default, that'd be great

[22:34] <AlexDaniel> jast: just leave it. That's what I did. For exactly the same reason

[22:35] <jast> and do blocking work in their javascript, misinterpret my click to create a chatroom for an org with many people in it, send them all e-mail, and send a pull request to the project :}

[22:35] *** labster left
[22:36] <jast> AlexDaniel: you're right... there isn't even an option to configure notifications, so you've successfully convinced me

[22:38] <geekosaur> tbh my main issue with slack isn't actually with slack. it's with the realization a couple years ago when I was being pushed to be on 15 different message services each with its own client, and several of them didn't like the idea of anyone using anything but their designated client

[22:39] <geekosaur> and, well, no. I dont care how special your messaging is, I;m not dealing with 15 clients.

[22:39] *** lokien_ left
[22:39] <jast> yeah, one client for all IM-type messaging seems reasonable

[22:40] <geekosaur> (skype was actually the straw that broke this camel's back)

[22:40] <jast> I don't know any client that does both group chat/IRC and IM properly

[22:40] <jast> so even with services that make that possible I'm still forced to use multiple clients

[22:41] <geekosaur> sure. Im willing to do one of each of those, having also noticed that there doesn't seem to be a good way to unify what turn out to be different messaging models

[22:41] *** kurahaupo_ joined
[22:41] <dalek> rakudo/nom: 8c406bf | (Andy Weidenbaum)++ | tools/lib/NQP/Configure.pm:

[22:41] <dalek> rakudo/nom: fix parse_revision subroutine regex

[22:41] <dalek> rakudo/nom: 

[22:41] <dalek> rakudo/nom: - compare release candidate versions, e.g. 2016.01-RC1

[22:41] <dalek> rakudo/nom: - use extended p5 regex for readability

[22:41] <dalek> rakudo/nom: - quiet warnings when regex captures undefined

[22:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8c406bf674

[22:41] <dalek> rakudo/nom: a5fe347 | niner++ | tools/lib/NQP/Configure.pm:

[22:41] <dalek> rakudo/nom: Merge pull request #700 from atweiden/tools-parse-revision

[22:42] <dalek> rakudo/nom: 

[22:42] <dalek> rakudo/nom: fix parse_revision subroutine regex

[22:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a5fe3475c0

[22:42] <jast> it doesn't feel like it *has* to be impossible... but yeah, same thing for me

[22:42] *** wamba left
[22:42] <AlexDaniel> jast: pidgin?

[22:42] <jast> then again, after all these years there still isn't any decent mail client ;)

[22:42] <geekosaur> but only *one*. when I found myself trying to fit a separate skype in around the hexchat and the pidgin/adium, after finding that skype integration had been broken and wasn't really fixable, I drew the line

[22:43] <jast> AlexDaniel: for a frame of reference... I use irssi for IRC

[22:43] *** kurahaupo left
[22:43] <jast> not because I prefer console over widget toolkits, but because that level of customizable and advanced features doesn't seem to exist in any other shape

[22:43] <geekosaur> zephyr actually made that clear, there were clients that acted like IM and clients that acted like IRC and the latter worked far better for the way I was using it

[22:45] <AlexDaniel> well, there is Tox that is quite promising… it's just that it will take another 5 years for it to get ready for normal use.

[22:47] <AlexDaniel> it has different clients, it's foss, it has reasonably good groupchats (the ones that are not merged yet)…

[22:48] <jast> your description fits XMPP, too

[22:48] <AlexDaniel> it's also distributed. If slack or anything else were promising these things in the future, then yeah, that'd be great. Otherwise not so much, I'll wait for better things to come.

[22:52] <jast> quite a few years ago I spent a lot of time designing an alternative protocol. well, it turned out design doesn't magically turn into implementation...

[22:56] *** RabidGravy left
[22:59] <geekosaur> and sometimes what looks like a good design doesn't work quite as well in implementation (hello XMPP...)

[23:02] *** salv0 left
[23:02] *** lizmat joined
[23:03] *** kurahaupo_ left
[23:04] *** kurahaupo joined
[23:04] *** kurahaupo left
[23:05] *** CurtisOvidPoe left
[23:10] *** BenGoldberg left
[23:12] <nine> geekosaur: I'd argue that XMPP is not exactly an example for a good design (streaming XML!?)

[23:12] *** yurivish left
[23:15] *** TEttinger joined
[23:20] *** caasih left
[23:20] *** Spot__ left
[23:20] *** chansen_ left
[23:20] *** clkao left
[23:20] *** SmokeMachine___ left
[23:20] *** BuildTheRobots left
[23:20] *** mrsolo left
[23:21] *** chansen_ joined
[23:22] *** BuildTheRobots joined
[23:22] *** SmokeMachine___ joined
[23:23] *** caasih joined
[23:23] *** bapa left
[23:23] *** pmurias left
[23:24] *** bapa joined
[23:25] *** clkao joined
[23:25] *** bitmap left
[23:25] *** mattp_ left
[23:25] *** raydiak left
[23:26] *** mattp_ joined
[23:26] *** krakan left
[23:26] *** Timbus left
[23:26] *** apejens left
[23:26] *** M-eternaleye left
[23:26] *** mrsolo joined
[23:27] *** obarb left
[23:27] *** eseyman left
[23:27] *** tth left
[23:27] *** ingy left
[23:28] *** firstdayonthejob left
[23:28] *** eseyman joined
[23:28] *** tth joined
[23:28] *** Spot__ joined
[23:29] *** firstdayonthejob joined
[23:31] *** dolmen left
[23:31] *** bitmap joined
[23:31] *** leont joined
[23:31] *** Timbus joined
[23:33] *** M-eternaleye joined
[23:34] *** brabo joined
[23:35] *** apejens joined
[23:37] *** sevvie left
[23:39] *** raydiak joined
[23:39] <avar> Are there some less trivial examples of concurrency in perl6?

[23:40] <avar> I went to lizmat++'s talk at FOSDEM today and while it's completely fair to show easier concurrency examples in a "what's new in p6" talk I'm looking for something that shows how the hairy edge cases are covered.

[23:40] *** ZoffixWin joined
[23:40] <avar> Been to a few demos of p6 concurrency, and it's mostly easy stuff without side-effects

[23:40] <ZoffixWin> What sort of hairy edge, side-effects stuff are you looking for?

[23:41] <avar> Looking for e.g. something that sends off 100 concurrent DB requests, the db connection for each thing can die at any time and will need to be restarted, the whole thing needs a global timeout and stopping/killing/ignoring offending threads

[23:42] *** raiph left
[23:42] <avar> Or e.g. how is something where you have an underlying object (e.g. a network connection) managed with either mutexes or spawning lots of clones..

[23:43] *** ingy joined
[23:44] <skids> The concurrency stuff was more or less a beta API right up until close to the 6.c release so not many people went that far out on a limb yet I think.

[23:44] *** labster joined
[23:45] <skids> (There were some late changes ("serial supplies") before 6.c, and there are still some issues to work out, mostly documetation, but some behavioral)

[23:47] *** krakan joined
[23:48] <leont> My TAP harness is a non-trivial example, but currently it's also exposing bugs :-/

[23:48] <masak> 'night, #perl6

[23:51] <ZoffixWin> night

[23:54] <skids> I would say odds are that at this point, you are unlikely to rely on a major feature and get the rug pulled completely out from underneath you, but relying on undocumented behavior is still a bit iffy which is why doc fixes are needed.

[23:57] *** firstdayonthejob left
