[00:00] *** cdg left
[00:04] *** DANtheBEASTman joined
[00:07] *** ocbtec left
[00:08] *** nadim left
[00:09] *** bjz joined
[00:11] *** labster left
[00:12] *** labster joined
[00:21] *** Guest53586 left
[00:22] *** xiaomiao joined
[00:26] *** Jesmaybe_ joined
[00:30] *** rmmm left
[00:31] *** sufrostico left
[00:35] *** sufrostico joined
[00:47] *** yqt joined
[00:56] *** aborazmeh joined
[00:56] *** aborazmeh left
[00:56] *** aborazmeh joined
[01:05] *** Jesmaybe_ left
[01:08] *** pierre_ left
[01:14] *** itcharlie1 joined
[01:29] *** Jesmaybe_ joined
[01:35] *** sufrostico left
[01:39] <tailgate> m: https://gist.github.com/ahalbert/42668ccb13502912e47913969cffc88f

[01:39] <camelia> rakudo-moar 8d357a: ( no output )

[01:41] <tailgate> The problem I'm having is that when the multi method visit($node), there are items in $node.content, but nothing gets output

[01:45] *** labster left
[01:46] *** ilbot3 left
[01:47] *** Jesmaybe_ left
[01:48] *** ilbot3 joined
[01:49] *** geekosaur left
[01:50] *** labster joined
[01:51] *** geekosaur joined
[01:57] *** Jesmaybe_ joined
[02:06] *** zacts left
[02:12] <iBakeCake> tailgate: so nothing hits that multi then?

[02:12] <iBakeCake> tailgate: what are you expecting it to receive? I see you already got one for Str and for Pod stuff

[02:13] <tailgate> no, if you print $node it'll run it

[02:13] <tailgate> m: https://gist.github.com/ahalbert/42668ccb13502912e47913969cffc88f

[02:13] <camelia> rakudo-moar 8d357a: OUTPUT«Pod::Block::Para␤  The use of ␤  Pod::FormattingCode{:type("A")}␤    PME␤   is subject to the terms and conditions laid out by ␤  Pod::FormattingCode{:type("A")}␤    VENDOR␤  , as specified at ␤  Pod::FormattingCode{:type("A")}␤    TERMS_…»

[02:14] <tailgate> it's only in $node.contents.map that nothing happens

[02:14] <iBakeCake> tailgate: what output are you expecting?

[02:14] <tailgate> it'll say each item in $node.contents

[02:14] <iBakeCake> tailgate: what version of perl you got? There was a laziness bug with .mapo

[02:15] <iBakeCake> semi-recently

[02:15] <tailgate> This is Rakudo version 2016.07.1 built on MoarVM version 2016.07

[02:15] <iBakeCake> tailgate: I get this output when I run it: https://gist.github.com/zoffixznet/b51b42071b578d4186344df8809ec14a

[02:15] <tailgate> implementing Perl 6.c.

[02:15] <tailgate> Oh, it's not being run in doc mode

[02:16] <tailgate> m: https://gist.github.com/ahalbert/42668ccb13502912e47913969cffc88f

[02:16] <camelia> rakudo-moar 8d357a: OUTPUT«[The use of  Pod::FormattingCode{:type("A")}␤  PME␤  is subject to the terms and conditions laid out by  Pod::FormattingCode{:type("A")}␤  VENDOR␤ , as specified at  Pod::FormattingCode{:type("A")}␤  TERMS_URL␤ .]␤»

[02:16] *** Jesmaybe_ left
[02:17] <tailgate> so, it's clear there's an array there

[02:17] <iBakeCake> OK

[02:17] <iBakeCake> tailgate: just use a proper for loop or put eager before the map

[02:18] <iBakeCake> m: https://gist.github.com/zoffixznet/88638493240c95c7105ccbf33dd050c8

[02:18] <camelia> rakudo-moar 8d357a: OUTPUT«The use of ␤Pod::FormattingCode{:type("A")}␤  PME␤␤ is subject to the terms and conditions laid out by ␤Pod::FormattingCode{:type("A")}␤  VENDOR␤␤, as specified at ␤Pod::FormattingCode{:type("A")}␤  TERMS_URL␤␤.␤»

[02:18] *** labster left
[02:19] <iBakeCake> m: https://gist.github.com/zoffixznet/bd00805108b16c344779d834e355004a

[02:19] <camelia> rakudo-moar 8d357a: OUTPUT«The use of ␤Pod::FormattingCode{:type("A")}␤  PME␤␤ is subject to the terms and conditions laid out by ␤Pod::FormattingCode{:type("A")}␤  VENDOR␤␤, as specified at ␤Pod::FormattingCode{:type("A")}␤  TERMS_URL␤␤.␤»

[02:19] <iBakeCake> tailgate: map returns a lazy list and I'm guessing whatever receives the return value of visit doesn't make it eager

[02:19] * iBakeCake returns to murdering Terrans

[02:19] <iBakeCake> For the swarm!

[02:19] <iBakeCake> :}

[02:20] <tailgate> iBakeCake: what would be the best workaround then?

[02:20] <iBakeCake> tailgate: I'd use a for loop

[02:20] <tailgate> =)

[02:20] <tailgate> thanks

[02:21] <iBakeCake> tailgate: map is to translate a list of values into a different list, so it's weird to use it just for side effects (even though internally for {} loops get converted into maps)

[02:22] *** Actualeyes joined
[02:33] *** lichtkind_ left
[02:35] *** BinGOs left
[02:35] *** Matias[m] left
[02:35] *** bisectable6 left
[02:35] *** KevinYang joined
[02:35] *** jsimonet left
[02:35] *** Matias[m] joined
[02:35] *** jsimonet joined
[02:35] *** evalable6 left
[02:36] *** evalable6 joined
[02:36] *** committable6 left
[02:36] *** BinGOs joined
[02:36] *** committable6 joined
[02:36] *** ChanServ sets mode: +v committable6

[02:37] *** KevinYang left
[02:37] *** bisectable6 joined
[02:37] *** ChanServ sets mode: +v bisectable6

[02:47] *** labster joined
[02:53] *** bjz left
[02:54] *** noganex_ joined
[02:57] *** noganex left
[02:59] *** aborazmeh left
[03:20] *** bjz joined
[03:41] *** Actualeyes left
[03:47] *** zacts joined
[03:57] *** Actualeyes joined
[03:58] *** Actualeyes left
[03:59] *** labster left
[04:05] *** labster joined
[04:18] *** AlexDaniel left
[04:18] *** khw left
[04:21] *** skids left
[04:32] *** Cabanossi left
[04:36] *** Cabanossi joined
[04:50] *** itcharlie1 left
[04:58] *** djbkd joined
[05:28] *** bjz left
[05:29] *** bjz joined
[05:57] *** Indecipherable joined
[06:15] *** BenGoldberg left
[06:35] *** wamba joined
[06:52] *** seatek left
[06:58] *** zrr joined
[07:00] *** yqt left
[07:05] *** kurahaupo joined
[07:08] *** djbkd left
[07:16] *** yqt joined
[07:28] *** nadim joined
[07:29] *** kurahaupo left
[07:37] *** bjz_ joined
[07:38] *** bjz left
[07:47] *** Guest57568 left
[07:48] *** u-ou joined
[07:49] *** CIAvash joined
[07:54] *** cognominal left
[07:55] *** pierre__ joined
[07:56] *** pierre__ left
[07:56] *** pierre__ joined
[07:57] *** Indecipherable left
[07:59] *** Indecipherable joined
[08:00] *** Indecipherable left
[08:00] *** Indecipherable joined
[08:06] *** geekosaur left
[08:07] *** geekosaur joined
[08:15] *** firstdayonthejob joined
[08:16] *** darutoko joined
[08:27] *** pecastro left
[08:28] *** pecastro joined
[08:28] *** rindolf joined
[08:30] *** mr-foobar left
[08:49] *** pecastro left
[08:50] *** pecastro joined
[08:51] *** isBEKaml joined
[08:52] *** mr-foobar joined
[08:59] *** labster left
[09:00] *** Unavowed left
[09:02] *** pierre__ left
[09:03] *** TEttinger left
[09:05] *** Actualeyes joined
[09:16] *** isBEKaml left
[09:16] *** pierre__ joined
[09:17] *** snowman_ left
[09:20] *** pierre__ left
[09:21] *** woolfy left
[09:21] *** canopus left
[09:24] <nadim> good morning P6

[09:24] <yoleaux> 12 Oct 2016 07:00Z <nine> nadim: no progress in the last couple of weeks. Have been side tracked by work on Inline::Perl5

[09:25] *** bjz_ left
[09:25] *** bjz joined
[09:27] *** canopus joined
[09:33] *** firstdayonthejob left
[09:37] *** firstdayonthejob joined
[09:37] *** AlexDaniel joined
[09:41] *** nadim left
[09:49] *** nadim joined
[10:00] *** firstdayonthejob left
[10:01] *** Ven joined
[10:03] *** Ven left
[10:13] *** pdcawley joined
[10:13] *** pdcawley left
[10:17] *** pierre__ joined
[10:22] *** pierre__ left
[10:24] *** yqt left
[10:37] *** pdcawley joined
[10:37] *** setty1 left
[10:38] *** setty1 joined
[10:38] *** pdcawley left
[10:47] *** pdcawley joined
[10:47] *** u-ou is now known as no-n

[10:47] *** no-n is now known as u-ou

[10:53] *** evalable6 left
[10:53] *** committable6 left
[10:53] *** bisectable6 left
[10:54] *** yqt joined
[10:56] *** bisectable6 joined
[10:56] *** ChanServ sets mode: +v bisectable6

[10:56] *** committable6 joined
[10:56] *** ChanServ sets mode: +v committable6

[10:56] *** benchable6 joined
[10:56] *** evalable6 joined
[10:57] *** bjz_ joined
[10:58] *** bjz left
[11:03] *** snowman_ joined
[11:04] *** espadrine joined
[11:17] *** pdcawley left
[11:28] *** CIAvash left
[11:31] <tbrowder> hi, nadim

[11:37] *** psch joined
[11:40] *** Indecipherable left
[11:40] *** pierre__ joined
[11:44] *** aborazmeh joined
[11:44] *** aborazmeh left
[11:44] *** aborazmeh joined
[11:55] *** wamba left
[11:56] <masak> hi, #perl6

[11:57] <moritz> \o

[11:57] *** KevinYang joined
[11:57] *** rudi_s left
[12:00] *** KevinYang left
[12:01] *** KevinYang joined
[12:02] *** KevinYang left
[12:03] *** KevinYang joined
[12:04] *** KevinYang left
[12:06] *** KevinYang joined
[12:07] *** KevinYang left
[12:11] *** KevinYang joined
[12:12] *** Actualeyes left
[12:12] <[ptc]> o/

[12:12] *** KevinYang left
[12:12] *** KevinYang joined
[12:15] *** KevinYang left
[12:15] <hahainternet> it was mentioned yesterday that when testing a bool via given/when, you can use :so and :not, but are these adverbs? if so, what are they being passed to? smartmatch? also is there a nice way to find this out via the repl? i've not played much with introspection / dispatch etc

[12:15] *** KevinYang joined
[12:16] <moritz> hahainternet: yes, they are adverbs, and simply create a pair

[12:16] <moritz> m: dd (:so)

[12:16] <camelia> rakudo-moar e0619f: OUTPUT«:so␤»

[12:16] <moritz> m: say (:so).^name

[12:16] <camelia> rakudo-moar e0619f: OUTPUT«Pair␤»

[12:16] *** RabidGravy joined
[12:16] <moritz> hahainternet: and given/when smartmaches

[12:17] <RabidGravy> boom!

[12:17] <moritz> hahainternet: so now you can look into the smartmatch table, and see what smart-matching agains a Pair does

[12:17] <hahainternet> aah ok, that makes sense

[12:17] <RabidGravy> ptc++ # nice one on the PRs for the travis configurations :)

[12:17] <moritz> (hint: it's pretty crazy or ingenious, depending on how you see it)

[12:17] *** Actualeyes joined
[12:18] <hahainternet> moritz: is there a nice table somewhere, or you mean in the source?

[12:18] <moritz> hahainternet: S03 has a table; maybe doc.perl6.org too

[12:19] <moritz> https://design.perl6.org/S03.html#Smart_matching

[12:19] *** KevinYang left
[12:19] <hahainternet> yeah i'm there, so in this case it'd be testing the attribute, that makes sense

[12:20] <moritz> actually it just calls the method of the same name

[12:20] <moritz> (because attributes are exposed through methods)

[12:24] *** BenGoldberg joined
[12:28] *** cdg joined
[12:31] *** Ven joined
[12:43] *** Ven left
[12:43] *** Ven joined
[12:48] <sammers_> hello perl6

[12:50] <moritz> hi sammers_ 

[12:51] <sammers_> hi moritz

[12:52] <moritz> oh no, not another kernel security update in Debian... :(

[12:54] *** eliasr joined
[13:01] <sammers_> is there a way to capture or group with subst and use the match in as part of the replacement?

[13:02] <sammers_> something like this: say '11 : 11 : 11 ; 11'.subst(/ \s? (<[:;]>) \s? /, $0, :g);

[13:03] *** kurahaupo__ joined
[13:03] <sammers_> where I want to replace the match, including the spaces, with the character (either ; or :) that matched.

[13:03] *** kurahaupo__ left
[13:04] *** kurahaupo__ joined
[13:04] *** kurahaupo__ left
[13:04] *** bjz_ left
[13:05] <iBakeCake> m: '11 : 11 : 11 ; 11'.subst(/ \s? (<[:;]>) \s? /,  -> { $0 }, :g).say

[13:05] <camelia> rakudo-moar e0619f: OUTPUT«11:11:11;11␤»

[13:06] *** pecastro left
[13:06] <sammers_> ah

[13:06] <sammers_> that is great

[13:07] <sammers_> I will bake you a cake

[13:07] *** bjz joined
[13:12] *** pecastro joined
[13:19] *** aborazmeh left
[13:26] *** cpage_ joined
[13:31] *** obfusk left
[13:32] *** obfusk joined
[13:42] *** skids joined
[13:44] *** colomon joined
[13:44] <colomon> o/

[13:45] <colomon> Where does panda install bin scripts these days?  I don’t seem to be getting them in .rakudobrew/bin any more.

[13:46] <timotimo> you need to "rakudobrew rehash" to get them

[13:46] <timotimo> the stuff in rakudobrew/bin is just scripts that rakudobrew keeps updated to point at the right rakudo installation when you switch over, but rakudobrew doesn't get told by panda when there's new stuff

[13:47] <colomon> timotimo++

[13:50] <colomon> simple thing, but having .rakudobrew/bin not working has been a thorn in my side for months.  :)

[13:51] *** pdcawley joined
[13:52] <timotimo> the readme of rakudobrew doesn't point that out :\

[13:52] <colomon> wouldn’t have helped, as I’m not in the habit of reading readmes for tools I have been using successfully for years.  :)

[13:52] <moritz> I'll submit a pull request anyway

[13:53] <colomon> moritz++

[13:57] <moritz> https://github.com/tadzik/rakudobrew/pull/105

[13:57] <moritz> my 4th PR this month, so I should get another Hacktoberfest t-shirt this year :-)

[13:58] <moritz> it's been surprisingly difficult, because I have direct push access to most repos I contribute to

[13:58] *** Ven left
[13:58] <moritz> oh wait, forgot one I did for $work, so likely at 5 now

[13:58] *** Ven joined
[14:02] <timotimo> tbrowder: the readme for perl6 read/write tests doesn't mention you have to manually create the large files before you run the tests :(

[14:03] <mst> moritz: do within-repo PRs for code review?

[14:04] <moritz> mst: I would if I wanted the code review; I won't open PRs just to get my count up

[14:04] <moritz> (not saying I generally don't want code review, just not particularly for the changes I did this month)

[14:05] *** KevinYang joined
[14:06] <mst> moritz: I often do informal reviews via IRC, so it occurred to me maybe you had the same; ah well

[14:09] <moritz> mst: I do; mostly I ask for them if I feel uncertain about some decisions in the patch

[14:10] <mst> moritz: just thinking during this period moving said informal reviews to PRs might work

[14:10] <mst> never mind

[14:11] * moritz never minds

[14:11] <mst> sometimes I feel like we end up actually agreeing but with slightly different phrasing and both being too polite to break the impasse

[14:11] <mst> (you because you're naturally polite, me because I turn my emulation layer on in here, obv. ;)

[14:13] <moritz> mst: I think we often agree in spirit, but come to different conclusions

[14:14] <colomon> woah, Math::Polynomial has some severe bitrot

[14:14] * colomon rolls up sleeves to fix

[14:15] *** Ven left
[14:15] *** Ven_ joined
[14:16] <colomon> … or I was just testing .bak files fixed in a previous iteration.  

[14:21] *** KevinYang left
[14:22] *** Ven_ left
[14:23] *** kurahaupo__ joined
[14:23] <colomon> how do I convert a Num to a num64?  my old code was num.new($a.Num) — it seems like that’s working, but it also seems less than fully correct?

[14:25] <moritz> m: say my num64 $ = 42e0

[14:25] <camelia> rakudo-moar e0619f: OUTPUT«42␤»

[14:27] <colomon> moritz: you reckon that’s it?  so my calls should be something like erfc(my num64 $ = $a.Num) ?

[14:31] <moritz> colomon: how is erfc declared?

[14:31] *** Ven joined
[14:33] *** Ven left
[14:33] <colomon> moritz: erfc(num64) returns num64 is native(Str)

[14:33] *** abraxxa joined
[14:34] *** pierre__ left
[14:34] *** pierre__ joined
[14:35] <timotimo> wow, writing an ascii-only string that contains a newline repeatedly to a file is slower when it's :enc<ascii> than when it's the default encoding (utf8)

[14:35] <timotimo> or maybe it's inside noise

[14:36] <timotimo> tbrowder: i'm getting create-large-file.p6 for a 2 G file to run in 1:05 instead of 1:29 when i encode the $str into a buf only once, then .write-ing it instead of .print-ing the string

[14:38] * colomon afc # helping H with homework

[14:39] *** pierre__ left
[14:40] <timotimo> tbrowder: if $mul %% 100 { $str = $str x 100 } gets me down to 6.46user 1.03system 0:07.50elapsed 99%CPU with strings

[14:41] *** wamba joined
[14:41] <timotimo> my system is having a bit of trouble writing the file faster; it makes my twitch stream i'm watching on the side hang, and it ends up only taking 5% cpu time

[14:43] <timotimo> 0.57user 4.35system 0:29.12elapsed 16%CPU

[14:44] <moritz> colomon: then I don't think you need an explicit conversion, do you?

[14:44] <moritz> colomon: I mean just calling it with $foo.Num should be enough

[14:45] <timotimo> tbrowder: what do you think about these optimizations? should they go in, or are they "cheating"? :)

[15:00] *** cdg left
[15:08] *** KevinYang joined
[15:08] *** nadim_ joined
[15:09] *** KevinYang left
[15:21] *** firstdayonthejob joined
[15:29] *** Guest93869 left
[15:29] *** Ven joined
[15:32] *** pdcawley left
[15:40] *** seatek joined
[15:42] *** Guest93869 joined
[15:57] *** Jesmaybe_ joined
[15:58] *** skids left
[16:03] *** Jesmaybe_ left
[16:12] *** mst left
[16:12] *** mst joined
[16:18] *** colomon_ joined
[16:20] *** colomon left
[16:20] *** colomon_ is now known as colomon

[16:21] *** Ven left
[16:26] <timotimo> wow, holy hell, somehow the "run-rw-tests.p6" script is able to absolutely trash my vim when scrolling through it

[16:34] <timotimo> actually, maybe things are just totally kaput in general?

[16:46] *** andrzejku joined
[16:48] <andrzejku> hello perl6 :)

[16:50] *** Jesmaybe_ joined
[16:53] *** Actualeyes left
[17:00] <RabidGravy> erp

[17:01] <RabidGravy> I'm thinking that "--install-suggests" when installing liquidsoap in travis would be a mistake, it seems to bring on the entire kitchen department

[17:01] <stmuk_> if anyone comes into the channel with odd os x build problems .. they have to type "clang" and agree to Apple's crap after an update

[17:09] <AlexDaniel> huh

[17:11] *** bbkr joined
[17:12] *** bbkr left
[17:14] *** bbkr joined
[17:14] *** Jesmaybe_ left
[17:15] *** Jesmaybe_ joined
[17:15] *** abraxxa left
[17:18] <bbkr> hi. can time() and nqp::time_n() be overwritten globally?

[17:20] <[ptc]> RabidGravy: how did you configure liquidsoap locally?  On my box it seems to need some script under /etc/liquidsoap in order to run, and I'm not familiar with it enough to know what to do here

[17:21] <bbkr> i'm looking for P6 equivalent for "*CORE::GLOBAL::time = sub { ... }" in P5

[17:21] *** labster joined
[17:23] <RabidGravy> [ptc], that's odd, if it's started as a daemon I think it does want some script, but the tests for Audio::Liquidsoap actually start it itself with some configuration that allows it to interact

[17:23] *** esh left
[17:24] <timotimo> bbkr: overriding nqp::time_n will require a change to the QAST compiler that's in use. but it is possible. time() is much easier to override

[17:24] <timotimo> m: sub term:<time>() { say "hello, this is my own time!"; nqp::time_n % 60 }; say time

[17:24] <camelia> rakudo-moar c94259: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Could not find nqp::time_n, did you forget 'use nqp;' ?␤at <tmp>:1␤------> 3lo, this is my own time!"; nqp::time_n %7⏏5 60 }; say time␤    expecting any of:␤        infix␤        infix stoppe…»

[17:25] <timotimo> m: use nqp; sub term:<time>() { say "hello, this is my own time!"; nqp::time_n % 60 }; say time

[17:25] <camelia> rakudo-moar c94259: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3lo, this is my own time!"; nqp::time_n %7⏏5 60 }; say time␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        stateme…»

[17:25] <timotimo> m: use nqp; sub term:<time>() { say "hello, this is my own time!"; nqp::time_n() % 60 }; say time

[17:25] <camelia> rakudo-moar c94259: OUTPUT«hello, this is my own time!␤14.1249108314514␤»

[17:25] <timotimo> bbkr: ^ you need to override term:<time>, because time is a term, not a sub 

[17:25] <timotimo> (that's why you can have time % 10, instead of being forced to write time() % 10)

[17:26] <bbkr> timotimo: awesome, thanks. I didn't know the difference between term and sub earlier in this case, that's why all my attempts failed :)

[17:26] <timotimo> :)

[17:26] <[ptc]> RabidGravy: hrm, ok, maybe I need to turn off the script I set up.  I'm getting connection errors.  Probably only PEBKAC...

[17:27] <RabidGravy> [ptc], but it seems that the debian one may be different, I'm going to have to make a VM to test this I think

[17:28] <RabidGravy> I also am using a bang up to the minute liquidsoap that I installed with opam (fedora doesn't even have it as a package)

[17:29] <[ptc]> I've upped the sleep period for the script to wait for the server to settle. Still doesn

[17:29] <[ptc]> 't want to connect

[17:30] <RabidGravy> yeah, let me get a VM with whatever it is OS that the travis uses

[17:30] <[ptc]> I'm using 1.1.1-7+b1 from Debian-Jessie

[17:30] <[ptc]> ok

[17:32] <bbkr> timotimo: how can I make this custom time visible by other modules? this change seems to be lexically scoped. I've tried wrapping it in BEGIN phaser before loading module but this doesn't work.

[17:34] <RabidGravy> is export

[17:34] <timotimo> yeah, like you would make any sub visible

[17:34] <timotimo> it's just a sub with a funny name, just like operators for example

[17:34] *** flexibeast left
[17:37] *** labster left
[17:38] <bbkr> perl6 -I . -e 'sub term:<time> () is export {666}; time.say; use A; A.new.foo.say'   # this does not work either. A is 

[17:38] <bbkr> class that has foo method that just returns time

[17:38] <timotimo> yeah, exact same thing as with other subs

[17:38] <timotimo> you can wrap the general sub term:<time> if you want

[17:38] <timotimo> GTGBBL

[17:44] *** esh joined
[17:46] <RabidGravy> I don't suppose anyone has a Docker image based on ubuntu precise with latest rakudo already?

[17:48] *** esh left
[17:49] <RabidGravy> good lord, I think this ones even older

[17:49] <RabidGravy> root@3f7e4a767778:/# liquidsoap --version

[17:49] <RabidGravy> Liquidsoap 1.0.0

[17:50] <RabidGravy> but yes that is the one it gets

[17:50] *** espadrine left
[17:55] *** Jesmaybe_ left
[17:55] *** Jesmaybe_ joined
[17:56] <[ptc]> oh dear, that is pretty old

[17:58] <RabidGravy> also docker is being an arse I may have to go full VM on this one

[17:59] <[ptc]> and it turns out that the Ubuntu on Travis doesn't have silan, even though Debian-Jessie does.  *sigh*

[17:59] <[ptc]> oh well, I'll try building it from source

[17:59] <RabidGravy> I was wondering about an Alien::Silan for that, it doesn't seem widely packaged

[17:59] <RabidGravy> I think I built it from source here

[18:00] *** Jesmaybe_ left
[18:02] <RabidGravy> basically a module that has a Build.pm which builds silan into its resources (as PREFIX) if it isn't already installed then has a method that returns the path to the binary

[18:02] <[ptc]> RabidGravy: it's interesting; you seem to be dominating of the Audio:: namespace ;-)

[18:02] * timotimo back much later

[18:03] <[ptc]> *most of

[18:04] <RabidGravy> I guess no-one else is quite so crack-addled or optimistic as I am :)

[18:05] *** Jesmaybe_ joined
[18:06] *** leego joined
[18:08] *** esh joined
[18:08] <[ptc]> :-)

[18:14] *** Jesmaybe_ left
[18:15] *** MorayJ joined
[18:16] * [ptc] is amazed at how many tunnels there are between Nuremberg and Hannover...

[18:17] *** rindolf left
[18:19] *** Jesmaybe_ joined
[18:22] *** rindolf joined
[18:28] *** rindolf left
[18:32] <RabidGravy> pfui, even xenial only has 1.1.1

[18:32] <RabidGravy> let's try with that one and work backwards

[18:34] *** rindolf joined
[18:42] *** djbkd joined
[18:49] *** yqt left
[19:01] *** labster joined
[19:02] *** Jesmaybe_ left
[19:07] <RabidGravy> is a job on travis-ci basically run as 'root' ?

[19:09] <RabidGravy> which may explain the Audio::Liquidsoap tests not working, it doesn't like running as root at all

[19:09] <RabidGravy> which is good, but not convenient in this case

[19:16] <moritz> [ptc]: going to Nuremberg? wann come visit? :-)

[19:18] *** Jesmaybe_ joined
[19:18] *** MorayJ left
[19:18] <AlexDaniel> m: sub foo(‘blah’) { say 42 }; foo(‘blah’)

[19:18] <camelia> rakudo-moar c94259: OUTPUT«42␤»

[19:19] *** labster left
[19:19] <AlexDaniel> m: sub foo(‘blee’ | ‘blah’) { say 42 }; foo(‘blah’)

[19:19] <camelia> rakudo-moar c94259: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Malformed parameter␤at <tmp>:1␤------> 3sub foo(‘blee’ |7⏏5 ‘blah’) { say 42 }; foo(‘blah’)␤    expecting any of:␤        constraint␤»

[19:19] <AlexDaniel> why not?

[19:23] <AlexDaniel> m: sub foo($ where ‘blee’ | ‘blah’) { say 42 }; foo(‘blah’)

[19:23] <camelia> rakudo-moar c94259: OUTPUT«42␤»

[19:29] *** TEttinger joined
[19:34] *** darutoko left
[19:35] *** Jesmaybe_ left
[19:45] *** BenGoldberg left
[19:49] <sjn> m: sub foo('blah' | 'blee') { say 42 }; foo(‘blah’)

[19:49] <camelia> rakudo-moar c94259: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Malformed parameter␤at <tmp>:1␤------> 3sub foo('blah' |7⏏5 'blee') { say 42 }; foo(‘blah’)␤    expecting any of:␤        constraint␤»

[19:49] *** labster joined
[19:50] <sjn> hm. I get a different result with 2016.10-32-g8d357af

[19:52] <sjn> m: say $*PERL.compiler

[19:52] <camelia> rakudo-moar c94259: OUTPUT«rakudo (2016.10.35.gc.942593)␤»

[19:52] * sjn recompiles

[19:53] <AlexDaniel> committable6: 8d357af sub foo('blah' | 'blee') { say 42 }; foo(‘blah’)

[19:53] <committable6> AlexDaniel, ¦«8d357af»: ===SORRY!=== Error while compiling /tmp/LfULA1ffFK␤Malformed parameter␤at /tmp/LfULA1ffFK:1␤------> sub foo('blah' |<HERE> 'blee') { say 42 }; foo(‘blah’)␤    expecting any of:␤        constraint «exit code = 1»

[19:53] <AlexDaniel> sjn: nope

[19:56] <AlexDaniel> m: say &infix:<!=>

[19:56] <camelia> rakudo-moar c94259: OUTPUT«sub infix:<!=> (Mu $?, Mu $?) { #`(Sub+{<anon|67373360>}+{Precedence}|35767856) ... }␤»

[19:56] <AlexDaniel> is there any way to get != out of it as a Str?

[19:57] <AlexDaniel> m: say &infix:<!=>.name

[19:57] <camelia> rakudo-moar c94259: OUTPUT«infix:<!=>␤»

[19:59] <mst> m: say &infix:<!=>.Str

[19:59] <camelia> rakudo-moar c94259: OUTPUT«Sub+{<anon|67373360>}+{Precedence} object coerced to string (please use .gist or .perl to do that)␤  in block <unit> at <tmp> line 1␤infix:<!=>␤»

[19:59] <mst> m: say &infix:<!=>.perl

[19:59] <camelia> rakudo-moar c94259: OUTPUT«sub infix:<!=> (Mu $?, Mu $?) { #`(Sub+{<anon|67373360>}+{Precedence}|48100848) ... }␤»

[19:59] <mst> m: say &infix:<!=>.gist

[19:59] <camelia> rakudo-moar c94259: OUTPUT«sub infix:<!=> (Mu $?, Mu $?) { #`(Sub+{<anon|67373360>}+{Precedence}|57185776) ... }␤»

[19:59] <mst> bah

[20:00] <geekosaur> you get the name as a function; "operator" is essentially a concept within the parser

[20:01] <geekosaur> so you would need to deconstruct the function name to get an operator name

[20:15] <[ptc]> moritz: went to Nuremberg, and came back on the same day; my wife was at a course there and I met her there and we came back together tonight

[20:16] <[ptc]> moritz: had wondered if you were wandering around the central part of the city today :-)

[20:18] *** labster left
[20:24] *** eliasr left
[20:28] *** wamba left
[20:32] *** setty1 left
[20:34] *** setty1 joined
[20:34] *** setty1 left
[20:37] <moritz> [ptc]: I ould have, had I know it in advance :-)

[20:37] <moritz> *could

[20:42] *** bbkr left
[20:42] *** sjoshi joined
[20:55] <RabidGravy> [ptc], well I have it at least not-failing on Travis https://travis-ci.org/jonathanstowe/Audio-Liquidsoap/builds/169802261

[21:00] *** nadim_ left
[21:08] *** andrzejku left
[21:09] <RabidGravy> I suspect that the failure to start the server is down to some version thing

[21:21] *** canopus left
[21:30] *** canopus joined
[21:34] <[ptc]> RabidGravy: strange that the server started for the first set of tests, but not for the second set

[21:35] *** sjoshi left
[21:35] <[ptc]> all I could get it to do was to say that it couldn't start the server...

[21:36] <RabidGravy> yeah it's odd as it isn't making any output on STDERR either

[21:37] *** lco left
[21:41] *** lco joined
[21:42] <[ptc]> I guess it's hard to get a VM to behave like a real computer, including audio stuff

[21:48] <RabidGravy> the script in the second test doesn't do anything that would require audio hardware, it even uses the dummy output

[21:48] <[ptc]> I'm trying to work out how to get Audio::Silan to test on Travis.  It needs access to various devices that don't exist, which make for interesting testing

[21:49] <[ptc]> *which makes

[21:49] *** optikalmouse joined
[21:50] <RabidGravy> silan shouldn't need any devices, it just reads from files

[21:50] <RabidGravy> that's quite odd if it does that

[21:51] <[ptc]> sorry, got myself confused.  I meant Audio::PortMIDI

[21:51] *** optikalmouse left
[21:52] <RabidGravy> yeah that's a tricky one

[21:52] <[ptc]> that module generates so much output that Travis won't save it all in the web-viewable logs; one has to download it to see it all

[21:54] <[ptc]> RabidGravy: see e.g. https://travis-ci.org/paultcochrane/Audio-PortMIDI/builds/169783495

[21:54] *** cyphase left
[21:58] <RabidGravy> I'd be inclined to skip thw synopsis test if there aren't any devices

[21:59] *** cyphase joined
[22:03] <[ptc]> yeah, that might be an idea.  Hate skipping tests though...

[22:03] *** Guest7479 left
[22:03] <[ptc]> RabidGravy: catch ya tomorrow.  Thanks for the fast turnaround on my PRs!

[22:03] *** perlpilot_ joined
[22:03] *** setty1 joined
[22:04] <RabidGravy> it would be possible to add a dummy default sequencer device but pfui

[22:04] *** rindolf left
[22:04] *** perlpilot left
[22:04] *** dalek left
[22:04] *** cyphase left
[22:04] *** dalek joined
[22:04] *** ChanServ sets mode: +v dalek

[22:05] *** cyphase joined
[22:05] *** Celelibi left
[22:06] *** Celelibi joined
[22:09] <RabidGravy> frankly I think that skip would be entirely reasonable, I'm inclined to do it anyway :)

[22:09] *** uncle_ joined
[22:09] *** cyphase left
[22:10] *** cyphase joined
[22:13] *** Guest46738 joined
[22:17] *** nadim left
[22:21] *** uncle_ left
[22:31] *** RabidGravy left
[22:31] *** dalek left
[22:32] *** dalek joined
[22:32] *** ChanServ sets mode: +v dalek

[22:35] *** firstdayonthejob left
[22:41] *** vendethiel joined
[22:45] *** kurahaupo__ left
[22:46] *** pecastro left
[22:46] *** pecastro joined
[22:59] *** khw joined
[23:10] *** pecastro left
[23:12] *** BenGoldberg joined
[23:13] *** dogbert17 joined
[23:28] *** _slade_ joined
[23:38] *** pecastro joined
