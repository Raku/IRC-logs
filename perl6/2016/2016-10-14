[00:07] <dalek> doc: 4d09760 | (Zoffix Znet)++ | doc/Type/Mix.pod6:

[00:07] <dalek> doc: Correct that Mix.Bag/BagHash .Ints not .rounds

[00:07] <dalek> doc: 

[00:07] <dalek> doc: Per today's changes[^1], the coercion now .Ints the weights instead of .round'ing

[00:07] <dalek> doc: 

[00:07] <dalek> doc: [1] https://github.com/rakudo/rakudo/commit/a09c8dc99e

[00:07] <dalek> doc: review: https://github.com/perl6/doc/commit/4d09760853

[00:12] <p3rln00b> And my internet went out before I could fix MixHash too :(

[00:12] * p3rln00b sacrifices a goat to computer gods

[00:13] <dalek> doc: fe570ad | (Zoffix Znet)++ | doc/Type/MixHash.pod6:

[00:13] <dalek> doc: Correct that MixHash.Bag/BagHash .Ints not .rounds

[00:13] <dalek> doc: 

[00:13] <dalek> doc: Per today's changes[^1], the coercion now .Ints the weights instead of .round'ing

[00:13] <dalek> doc: 

[00:13] <dalek> doc: [1] https://github.com/rakudo/rakudo/commit/a09c8dc99e

[00:13] <dalek> doc: review: https://github.com/perl6/doc/commit/fe570ad6e8

[00:13] <p3rln00b> haw...

[00:16] <llfourn> it seems that "require" doesn't work if it's in an exported sub

[00:16] <llfourn> require Foo; => "no such symbol 'Foo'"

[00:18] <llfourn> ah it only fails if there isn't a symbol 'Foo' defined in Foo.pm6

[00:19] *** Derperperd joined
[00:23] <llfourn> I think require should return a handled failure. Just because you require something doesn't mean you expect there to be symbol defined in required compunit.

[00:24] *** yqt left
[00:32] *** labster left
[00:32] *** cooper_ left
[00:33] *** cooper_ joined
[00:35] *** zacts left
[00:35] *** mattp_ left
[00:36] *** mattp_ joined
[00:36] *** psch left
[00:36] *** [Coke] left
[00:36] *** sergot left
[00:36] *** moritz left
[00:37] *** sergot joined
[00:37] *** psch joined
[00:37] *** [Coke] joined
[00:37] *** moritz joined
[00:44] *** eliasr left
[00:58] *** Technaton left
[00:59] *** bioduds left
[01:03] <Herby__> question: if i have a multiline file, is there a slick way to split the file into a mutlidimension array?

[01:03] <Herby__> [['this','is','line','one'], ['this,'is','line','two']]

[01:04] <[Coke]> m: slurp.say

[01:04] <camelia> rakudo-moar a09c8d: OUTPUT«Céad slán ag sléibhte maorga Chontae Dhún na nGall␤Agus dhá chéad slán ag an Eireagal ard ina stua os cionn caor is coll;␤Nuair a ghluais mise thart le Loch Dhún Lúich’ go ciúin sa ghleann ina luí␤I mo dhiaidh bhí gleanntáin ghlas’ G…»

[01:05] *** pierre_ joined
[01:06] <[Coke]> m: say slurp.lines>>.words

[01:06] <camelia> rakudo-moar a09c8d: OUTPUT«((Céad slán ag sléibhte maorga Chontae Dhún na nGall) (Agus dhá chéad slán ag an Eireagal ard ina stua os cionn caor is coll;) (Nuair a ghluais mise thart le Loch Dhún Lúich’ go ciúin sa ghleann ina luí) (I mo dhiaidh bhí gleanntáin ghlas’…»

[01:06] <[Coke]> am: say slurp.lines>>.words.perl

[01:06] <[Coke]> m: say slurp.lines>>.words.perl

[01:06] <camelia> rakudo-moar a09c8d: OUTPUT«(("Céad", "slán", "ag", "sléibhte", "maorga", "Chontae", "Dhún", "na", "nGall").Seq, ("Agus", "dhá", "chéad", "slán", "ag", "an", "Eireagal", "ard", "ina", "stua", "os", "cionn", "caor", "is", "coll;").Seq, ("Nuair", "a", "ghluais", "mise", "thart",…»

[01:06] <[Coke]> there you go

[01:07] <Herby__> sweet. thanks!

[01:08] *** cdg joined
[01:09] <AlexDaniel> m: say lines».words.perl

[01:09] <camelia> rakudo-moar a09c8d: OUTPUT«(("Céad", "slán", "ag", "sléibhte", "maorga", "Chontae", "Dhún", "na", "nGall").Seq, ("Agus", "dhá", "chéad", "slán", "ag", "an", "Eireagal", "ard", "ina", "stua", "os", "cionn", "caor", "is", "coll;").Seq, ("Nuair", "a", "ghluais", "mise", "thart",…»

[01:12] *** cdg left
[01:12] <AlexDaniel> Herby__: perhaps try https://github.com/tony-o/perl6-csv-parser or https://github.com/Tux/CSV ?

[01:12] *** cdg joined
[01:13] <AlexDaniel> Herby__: not sure if that is your case, but it sounds like you actually have a csv file… ;)

[01:13] <Herby__> I do :)

[01:13] <Herby__> I tried CSV::Parser and my script was pretty slow. although its likely due to the algorithm i was using

[01:13] *** Jesmaybe joined
[01:15] <dylanwh_> Feicim focail Ghaeilge... Tá mé iontas.

[01:16] <perlawhirl> yeah, CSV parsing tends to be a little slow. one of my scripts i use to search for an entry does a `if $line.contains($query)` before doing a `$csv.parse($line)` which helps speed things up

[01:17] <perlawhirl> CSV parsing is one of those things that's hard to do yourself. if you're absolutely positive all your cells are single-word entries with no commas, you could just do `$line.split(',')`

[01:19] *** MasterDuke joined
[01:20] <Herby__> luckily my file fits that criteria so thats how i ended up handling it. then i started wandering how to split a file into mutli-d array

[01:25] <perlawhirl> another option i've been known to employ is open your CSV in Excel, go into `Control Panel > Regional & Language > Additional settings`, change `List separator` to something other than ","... something you know isn't in your file... even a weird char like "§", then save your "CSV" file in Excel

[01:25] <perlawhirl> now you have a §-separated file :D

[01:25] <perlawhirl> don't forget to change the regional settings back as soon as you're done

[01:26] <perlawhirl> then you can more confidently do $line.split('§')

[01:35] *** cognominal left
[01:39] <Herby__> nice idea, never thought about that

[01:46] *** ilbot3 left
[01:47] *** ilbot3 joined
[01:47] *** zacts joined
[01:52] <BenGoldberg> Or you could install a C library for parsing csv, like libcsv, then use NativeCall.

[01:56] <BenGoldberg> Another option would be 'use Text::CSV_XS:from<Perl5>;'

[02:01] *** labster joined
[02:06] *** Derperperd left
[02:12] *** cdg left
[02:15] *** Actualeyes joined
[02:17] *** Jesmaybe left
[02:38] *** aborazmeh joined
[02:38] *** aborazmeh left
[02:38] *** aborazmeh joined
[02:45] *** noganex_ joined
[02:45] *** rgrinberg left
[02:48] *** noganex left
[02:57] *** geraud left
[03:02] *** geraud joined
[03:03] *** khw left
[03:24] *** Jesmaybe joined
[03:25] *** canopus joined
[03:25] *** geraud left
[03:26] <Herby__> anyone heard any news on the Perl 6 book that is in the works?

[03:26] *** Actualeyes left
[03:27] *** geraud joined
[03:35] <TEttinger> are the features of perl 6 stable enough for there to be a physical book?

[03:35] <TEttinger> it seems like stuff is still changing week-to-week

[03:41] *** Actualeyes joined
[03:43] *** pierre_ left
[03:46] <geekosaur> the features are stable. bugs are being fixed, but still have to pass the spec tests

[03:49] <geekosaur> and yes, the vast majority of changes are bugfixes

[03:49] *** pierre_ joined
[03:50] <geekosaur> rarely you will see something added to 6.c-errata (bugs in the spec, more or less), even more rarely added to 6.d (the next release-to-be)

[03:50] <Herby__> speaking of bugs... my simple script failing is bugging me: http://pastebin.com/b1kDhuaf

[03:50] <Herby__> i'm trying to download an image. i'm sure its something simple

[03:51] <Herby__> but that fails with "Cannot resolve caller spurt(IO::Path: HTTP::Response, Str, :b); none of these signatures match:"

[03:52] <Herby__> any ideas?

[03:53] *** Jesmaybe left
[03:53] *** pierre_ left
[03:56] *** skids left
[03:58] <perlawhirl> $img is still a HTTP::Response object, and spurt is expecting Blob or Cool

[03:59] <Herby__> just saw my mistake :)

[03:59] <Herby__> spurt "testfile.png", $img.content   does the trick

[04:00] <Herby__> if I wanted to download all of the xkcd comics, would this be a good scenario to try to do in parallel?

[04:01] <Herby__> i've never really messed with parallel/concurrent scripts

[04:01] <Herby__> i realize thats a pretty generic question

[04:03] <perlawhirl> Theoretically... yes. In practice, don't hammer Randall's server with too many requests :D

[04:04] <Herby__> yeah, i wouldnt go crazy and hammer the server non-stop.

[04:04] <Herby__> been trying to think of a simple project to learn a little about concurrency and parallelism

[04:05] <perlawhirl> also... just back to your script, the `:b` in `$user-agent.get(%content<img>)` is not neccessary

[04:07] <Herby__> just changed it, thanks

[04:14] *** pierre_ joined
[04:14] *** rindolf joined
[04:40] *** sjoshi joined
[04:42] *** Cabanossi left
[04:44] *** sjoshi left
[04:44] *** sjoshi joined
[04:45] *** Cabanossi joined
[04:49] *** khisanth_ is now known as Khisanth

[04:55] *** wamba joined
[04:56] <perlawhirl> Herby__: one more thing

[04:56] * perlawhirl is at work and getting distracted

[04:56] <Herby__> do tell

[04:57] <perlawhirl> you passed :b to spurt, but the actualy option is :bin. now in this case, it worked, because the multi that is invoked when you call spurt with a Blob enforces the :bin option... but just FYI

[04:58] <Herby__> hmm k

[04:58] <Herby__> i need do some more reading on Blob, Any, Cool, Mu etc...

[04:58] <perlawhirl> if you don't pass the right named argument it could cause headache's in the future... methods will generally ignore unknown named parameters

[04:58] <Herby__> cant say I have a great grasp on that stuff

[05:01] <perlawhirl> well this is more a question of multiple-dispatch. given a particular function or method, different code may run depending on what args you provide

[05:02] <perlawhirl> when you call the Function `spurt()`, it takes your args and passes them to the Method `.spurt()`

[05:03] <perlawhirl> there are 2 `.spurt` methods, and they will ignore any unknown named parameter, like `:bin` or `:Herby`. one of those methods gets run when you passed binaray data (aka, a Blob), and a different `.spurt` method gets called for something... non-Blobby :)

[05:04] *** pierre_ left
[05:05] <Herby__> that makes sense

[05:05] <perlawhirl> The Blobby spurt automatically turns on the `:bin` option for you... so it worked. Perl strives to DWIM (Do What I Mean)

[05:05] <Herby__> does it do the same thing for :a, :append?

[05:06] <perlawhirl> no

[05:06] <perlawhirl> the only reason it turned on `bin` is because that makes sense when passing binary data (Blob) to the method

[05:07] <perlawhirl> it will just ignore ':a' because it doesn't have a named parameter called `:a`

[05:08] <perlawhirl> ie, it will silently clobber your file... hence why i'm telling you all this

[05:08] <perlawhirl> you need to be sure that you read the docs and pass the appropriate options

[05:09] *** Derperperd joined
[05:11] <perlawhirl> named parameters are not like command line args... close enough is not good enough :D

[05:12] *** Jesmaybe joined
[05:13] *** pierre_ joined
[05:16] *** aborazmeh left
[05:17] *** pierre_ left
[05:18] *** Jesmaybe left
[05:20] *** BenGoldberg left
[05:25] *** domidumont joined
[05:30] *** domidumont left
[05:31] *** domidumont joined
[05:31] <AlexDaniel> m: say ‘hello world’ ~~ m:g/$<abc>=\w/

[05:31] <camelia> rakudo-moar a09c8d: OUTPUT«(｢h｣␤ abc => ｢h｣ ｢e｣␤ abc => ｢e｣ ｢l｣␤ abc => ｢l｣ ｢l｣␤ abc => ｢l｣ ｢o｣␤ abc => ｢o｣ ｢w｣␤ abc => ｢w｣ ｢o｣␤ abc => ｢o｣ ｢r｣␤ abc => ｢r｣ ｢l｣␤ abc => ｢l｣ ｢d｣␤ abc => ｢…»

[05:32] * AlexDaniel scratches his head

[05:32] *** domidumont left
[05:33] <AlexDaniel> m: say ‘hello world’ ~~ m:g/(\w)/

[05:33] <camelia> rakudo-moar a09c8d: OUTPUT«(｢h｣␤ 0 => ｢h｣ ｢e｣␤ 0 => ｢e｣ ｢l｣␤ 0 => ｢l｣ ｢l｣␤ 0 => ｢l｣ ｢o｣␤ 0 => ｢o｣ ｢w｣␤ 0 => ｢w｣ ｢o｣␤ 0 => ｢o｣ ｢r｣␤ 0 => ｢r｣ ｢l｣␤ 0 => ｢l｣ ｢d｣␤ 0 => ｢d｣)␤»

[05:35] <AlexDaniel> I should be getting more sleep o_o

[05:36] <AlexDaniel> there is probably some good explanation, but the way I see it is… it's just crazy…

[05:36] <AlexDaniel> bombittable6: releases say ‘hello world’ ~~ m:g/(\w)/

[05:36] <committable6> AlexDaniel, ¦«2015.10,2015.11,2015.12,2016.02,2016.03,2016.04,2016.05,2016.06,2016.07.1,2016.08.1,HEAD»: (｢h｣␤ 0 => ｢h｣ ｢e｣␤ 0 => ｢e｣ ｢l｣␤ 0 => ｢l｣ ｢l｣␤ 0 => ｢l｣ ｢o｣␤ 0 => ｢o｣ ｢w｣␤ 0 => ｢w｣ ｢o｣␤ 0 => ｢o｣ ｢r｣␤ 0 => ｢r｣ ｢l｣␤ 0 => ｢l｣ ｢d｣␤ 0 => ｢d｣)

[05:37] <geekosaur> did you mean \w+?

[05:37] <AlexDaniel> no

[05:37] *** sjoshi left
[05:38] <AlexDaniel> in fact, looks like it works fine. It's just that gist that I'm trying to make sense of

[05:39] *** perlawhirl left
[05:39] <AlexDaniel> bombittable6: releases put ‘hello world’ ~~ m:g/(\w)/

[05:40] <committable6> AlexDaniel, ¦«2015.10»: ===SORRY!=== Error while compiling /tmp/Rnk6t7SOHK␤Undeclared routine:␤    put used at line 1␤ «exit code = 1»␤¦«2015.11,2015.12,2016.02,2016.03,2016.04,2016.05,2016.06,2016.07.1,2016.08.1,HEAD»: h e l l o w o r l d

[05:40] <AlexDaniel> oops

[05:40] <AlexDaniel> but yeah

[05:41] <ShimmerFairy> AlexDaniel: I think the gist is hurt by the fact that camelia can't output newlines where they should be, along with the fact that a space-separated list for a list of Match objects isn't the best idea.

[05:41] <geekosaur> seems like it, yeh

[05:41] <AlexDaniel> committable6: HEAD say ‘hello world’ ~~ m:g/(\w)/; .say for ^1000

[05:41] <committable6> AlexDaniel, https://gist.github.com/2d537f325d03368ef2d9417473820e7c

[05:41] * geekosaur needs a reindenter for dd output, the dd version of that is incomprehensible as is

[05:42] <AlexDaniel> ShimmerFairy: here is the output with newlines

[05:42] *** labster left
[05:42] <AlexDaniel> ShimmerFairy: and it's not any better. What is “0 => ｢h｣ ｢e｣” ?

[05:43] <ShimmerFairy> AlexDaniel: yeah, that's an issue I've run into before with printing stuff involving Match objects; the gist of the list is doing space-separated values, but the Match objects have inherently multi-line gists

[05:43] <AlexDaniel> ahhhhhhhhhhhhh

[05:43] <AlexDaniel> committable6: HEAD .say for ‘hello world’ ~~ m:g/(\w)/; .say for ^1000

[05:43] <committable6> AlexDaniel, https://gist.github.com/e8ce78af3f8921343b32a6a15d728be3

[05:44] <AlexDaniel> aaaaaaaaaaaaahhhhhhhhh.

[05:44] <AlexDaniel> ShimmerFairy: thank you very much

[05:44] <ShimmerFairy> np, it's definitely confusing when you're not aware of the issue :)

[05:44] <geekosaur> right, that was why I was trying to clean the dd output

[05:45] <ShimmerFairy> (and Match.gist can't return a string with a "\n" at the end because then that could mess up who-knows-what expecting not-\n-terminated gists, e.g. say $thing.gist)

[05:45] <ShimmerFairy> I think the issue here is ultimately "we need a smarter gist perhaps" :P

[05:46] <geekosaur> or at least Match needs a smarter .gist

[05:48] <ShimmerFairy> I recall some parts of the spec speculating on various named options to .gist for controlling various ways the string is returned. I wonder if that idea would be useful for cases like "list .gist works best with elements' .gist following a certain pattern".

[05:49] *** _slade_ left
[05:49] *** wamba left
[05:50] *** domidumont joined
[05:51] *** Herby__ left
[05:56] *** domidumont left
[05:57] *** domidumont joined
[06:06] *** rindolf left
[06:08] *** bjz joined
[06:09] *** AlexDaniel left
[06:09] *** bjz left
[06:10] *** bjz joined
[06:14] *** pierre_ joined
[06:18] *** pierre_ left
[06:19] *** neuraload joined
[06:23] *** bjz left
[06:26] *** wamba joined
[06:29] *** firstdayonthejob joined
[06:36] *** pierre_ joined
[06:36] *** bjz joined
[06:44] *** wamba left
[06:45] *** firstdayonthejob left
[06:51] *** wamba joined
[06:59] *** sufrostico joined
[07:14] *** labster joined
[07:16] *** Jesmaybe joined
[07:21] *** Jesmaybe left
[07:31] *** ufobat joined
[07:32] *** user9 joined
[07:38] <ufobat> i've got a new computer and .. i am doing rakudobrew build zef for the first time.. and it fails :(

[07:42] *** wamba left
[07:42] *** sufrosti1o joined
[07:43] <ufobat> hm maybe i should take the 2016.09 instead of moar-nom

[07:43] <El_Che> ufobat: what OS?

[07:43] <ufobat> linux ubuntu 16.06

[07:44] <ufobat> https://gist.github.com/ufobat/225f6f2af63c33f76a7064558159ff7f

[07:44] <El_Che> https://github.com/nxadm/rakudo-pkg/releases

[07:44] <El_Che> for in the mean time :)

[07:45] <ufobat> yeah.. why not :-)

[07:46] *** xinming left
[07:47] *** wamba joined
[07:48] <ufobat> okay i am taking the deb package now.. 2016.09 also segfaults :/ 

[07:52] <ufobat> and it works

[07:52] <ufobat> nope it segfaults too :/ it just takes longer

[07:52] <ufobat> *sigh

[07:54] *** Derperperd left
[07:54] <ufobat> any advice?

[07:56] *** g4 joined
[07:56] *** g4 left
[07:56] *** g4 joined
[07:56] *** sufrostico left
[07:57] *** sufrosti1o left
[08:00] *** bjz left
[08:01] *** AlexDaniel joined
[08:09] *** wamba left
[08:11] *** RabidGravy joined
[08:13] *** ufobat_ joined
[08:17] *** ufobat left
[08:22] <RabidGravy> booM!

[08:22] <DrForr> !Moob

[08:25] <El_Che> ufobat_: segfaults? do you mean rakudo or when installing zef?

[08:25] *** AlexDaniel left
[08:26] <ufobat_> perl6 segfaults when i want to install zef

[08:27] *** wamba joined
[08:30] <RabidGravy> eugh

[08:31] <RabidGravy> running it with perl6-gdb-m might help find where it is doing that

[08:32] <RabidGravy> but it shouldn't segfault with no native call involved

[08:32] <DrForr> Today's jam: https://www.youtube.com/watch?v=CuVd9oK16V0

[08:32] <El_Che> ufobat_: installing

[08:34] <ufobat_> i have no c/debugging skills, does this help: https://gist.github.com/ufobat/73a23653a6f301acf35a91b1304b74f6

[08:34] <stmuk_> ufobat_: see https://github.com/MoarVM/MoarVM/issues/410 and related tickets

[08:35] <stmuk_> turning off HLE on linux may help

[08:38] <stmuk_> https://github.com/tadzik/panda/issues/324#issuecomment-250345236

[08:41] <ufobat_> stmuk_, i am not sure .. do i need a glibc without HLE or can i just compile a perl6 without HLE?

[08:44] <stmuk_> I think you need a glibc w/o it but I tried that myself

[08:45] <stmuk_> not sure if there is one in any distro repos either

[08:47] <stmuk_> rakudo 2016-06 may still work too )see https://github.com/MoarVM/MoarVM/issues/410#issuecomment-249211127

[08:50] <ufobat_> that is probably the most easy way for me to get a perl6, i will try

[08:52] *** ale1ster joined
[08:52] *** Kaffe_ left
[08:53] <stmuk_> actually if you could check 06 works and 07 doesn't it would help in confirming a possible connection between the BSD and Linux/HLE issue

[08:55] *** AlexDaniel joined
[08:58] <ufobat_> stmuk_, i will build a 2016.07 and 2016.06 and check if there are differences

[09:00] <El_Che> ugexe: ping me if around. The build-panda scripts runs fine: https://github.com/nxadm/rakudo-pkg/blob/master/docker/install_panda_as_user.sh . The build zef script (https://github.com/nxadm/rakudo-pkg/blob/master/docker/install_zef_as_user.sh) fails: https://gist.github.com/nxadm/6350f63e5bc99b3e86a17bc03bfaf43b . It tries to write to /opt/rakudo/share/perl6/site instead of ~/.perl6 (I even added a 

[09:00] <El_Che> Iinst#$HOME/.perl6 to be sure)

[09:07] <RabidGravy> I'm having a hubristic moment - looking at http://ladonize.org/index.php/Main_About and thinking "how difficult could that be"

[09:08] *** bjz joined
[09:08] *** geekosaur left
[09:09] *** geekosaur joined
[09:11] *** ale1ster left
[09:11] *** Kaffe joined
[09:18] *** Jesmaybe joined
[09:20] *** AlexDaniel left
[09:22] *** Jesmaybe left
[09:31] <El_Che> RabidGravy: yes, you can

[09:31] <El_Che> :)

[09:33] *** pierre_ left
[09:37] <RabidGravy> :)

[09:40] *** ocbtec joined
[09:45] *** pierre_ joined
[09:54] <RabidGravy> but I don't like the way it multiplexes the different web service protocols

[09:55] *** gregf_ joined
[09:57] *** darutoko joined
[10:01] <RabidGravy> yeah, it should be able to use the Content-Type to distinguish between XML and JSON for example and then examine the content to refine the selection of protocol

[10:01] <RabidGravy> *not* use different paths for each one

[10:02] <jnthn> Indeed, using differnet paths for different representations of the same resource should be laid to REST... :P

[10:05] <RabidGravy> I did an interview yesterday and had a strange moment when I realised they didn't quite "get" REST and had to explain like I might a junior

[10:05] *** orangeblock joined
[10:06] <jnthn> 'tis rather common

[10:07] <orangeblock> why is [1e30, -1e30, 1, 3].sum == 4, but [1e30, 1, 3, -1e30].sum == 0?

[10:07] <psch> m: say [1e30, -1e30, 1, 3].sum == 4; say [1e30, 1, 3, -1e30].sum == 0

[10:07] <camelia> rakudo-moar a09c8d: OUTPUT«True␤True␤»

[10:07] <jnthn> Floating point

[10:08] <jnthn> e implies Num

[10:08] <orangeblock> but they are the same numbers

[10:08] <orangeblock> just in different order

[10:08] <psch> not in ieee 754

[10:08] <psch> the order of operations matters

[10:08] <jnthn> Yes, but floating point arithmetic doesn't commute

[10:09] <jnthn> Thus why things like 2.5 default to Rat, not Num, in Perl 6.

[10:09] <orangeblock> oh i see

[10:09] <orangeblock> so what would I have to do to make the right example print 4?

[10:10] <psch> m: say [10 ** 30, 1, 3, -(10**30)].sum

[10:10] <camelia> rakudo-moar a09c8d: OUTPUT«4␤»

[10:10] * psch . o O ( floating point lives near its work place, so it doesn't commute )

[10:11] <RabidGravy> anyhoo, just off out to the supermarket, play nicely

[10:11] <orangeblock> I get it now thanks a ton!

[10:13] *** andrzejku joined
[10:14] *** andrzejku_ left
[10:15] *** pierrot left
[10:15] *** pierrot joined
[10:15] *** pierrot is now known as Guest59726

[10:18] *** pierre_ left
[10:18] *** Jesmaybe joined
[10:19] <timotimo>  could this god damned HLE segfault bug please go die in a fire?

[10:23] *** Jesmaybe left
[10:29] *** canopus left
[10:36] *** canopus joined
[10:37] <ufobat_> stmuk_, with 2016.07 it doesn't work but with 2016.06 it does not segfault anymore, hope that helps

[10:39] <timotimo> ufobat_: does your system have a /lib64/noelision folder perhaps?

[10:40] *** pecastro_ joined
[10:41] <ufobat_> timotimo, nope

[10:41] <timotimo> the debian bug that tracks the HLE problem claims things have been fixed on the first of january this year

[10:42] *** TEttinger left
[10:42] <timotimo> so why hasn't this trickled down into ubuntu?

[10:47] *** bjz_ joined
[10:47] *** bioduds_ left
[10:48] <timotimo> seems like on ubuntu a patch was suggested but rejected upstream and then no patch has been put in for ubuntu itself

[10:48] *** bjz left
[10:55] *** rindolf joined
[10:56] *** labster left
[10:59] <timotimo> should rakudo officially recommend against using ubuntu on newer intel cpus?

[11:00] <timotimo> the distro wars live again!

[11:00] <DrForr> Because of the sky...er, neural network instructions?

[11:00] <timotimo> skylake, not skynet :)

[11:00] *** itaipu joined
[11:01] <moritz> timotimo: you could add a note to the README, but usually nobody reads the README

[11:01] <timotimo> we can after-the-fact point at the README when someone comes in with that crash

[11:01] <timotimo> it'd be nicer if we could point out something an ubuntu user could just run to get rid of the bug

[11:01] <timotimo> like, there must be a hundred different PPAs that give you glibc with hardware lock elision disabled

[11:02] * DrForr silently corrupts the FPU division tables while he's there.

[11:03] <timotimo> DrForr: at least in that situation everybody will have seen that before ;)

[11:03] <timotimo> though many new programmers may not have seen the FPU div bug in the wild in their lifetime

[11:03] <DrForr> We are Pentium of Borg. Division is futile. You will be approximated.

[11:04] <El_Che> Rakudo could supply its own libc

[11:04] <El_Che> :)

[11:04] <El_Che> en emacs and systemd

[11:16] *** iH2O joined
[11:25] <timotimo> rakudobrew could output a warning about newer intel cpus and ubuntu before building zef, or if building zef failed

[11:27] *** itaipu left
[11:31] <stmuk_> ufobat_: thanks

[11:31] <stmuk_> timotimo: I don't think its just the processor bug, the same (or similar) bug exists on all BSD systems 

[11:32] <stmuk_> timotimo: maybe the HLE is triggering something else

[11:33] *** itaipu joined
[11:36] *** wamba left
[11:41] *** itaipu left
[11:42] *** itaipu joined
[11:50] *** itaipu left
[11:54] *** iH2O left
[11:54] *** itaipu joined
[11:54] *** rindolf left
[11:56] *** rindolf joined
[12:02] <stmuk_> is the string "HLE" present in /proc/cpuinfo on these systems?

[12:05] <ufobat_> on mine, yeah

[12:05] <ufobat_> > cat /proc/cpuinfo| grep -i hle

[12:05] <ufobat_> flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch ep

[12:05] <ufobat_> b intel_pt tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp

[12:07] <stmuk_> ah good

[12:09] *** Xliff__ joined
[12:13] *** Xliff_ left
[12:15] *** perlawhirl joined
[12:17] *** wamba joined
[12:20] *** Jesmaybe joined
[12:24] *** Jesmaybe left
[12:27] *** huggable left
[12:27] *** pecastro_ left
[12:27] *** buggable left
[12:28] *** NeuralAnomaly left
[12:28] *** tadzik left
[12:33] *** tadzik joined
[12:38] <El_Che> https://github.com/nxadm/rakudo-pkg/releases/tag/Ubuntu16.10Support

[12:41] <stmuk_> its the release this w/e isn't it?

[12:43] <El_Che> it was release yesterday/today depending on your location

[12:48] *** rgrinberg joined
[12:50] *** wamba left
[12:58] *** cdg joined
[12:59] <[Coke]> pretty sure the rakudo compiler release is this weekend, yes

[12:59] <p3rln00b> Yes

[13:00] *** _slade_ joined
[13:00] *** NeuralAnomaly joined
[13:00] <p3rln00b> NeuralAnomaly: status

[13:00] <NeuralAnomaly> p3rln00b, [✘] Next release is today. Since last release, there are 48 new still-open tickets (6 unreviewed and 0 blockers) and 37 unreviewed commits. See http://perl6.fail/release/stats for details

[13:00] *** buggable joined
[13:00] <p3rln00b> Well... the bot is off by +/- 24 hours :)

[13:01] *** huggable joined
[13:03] <dalek> ecosystem: 0034e08 | (Brian Duggan)++ | META.list:

[13:03] <dalek> ecosystem: add Log::Async

[13:03] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/0034e08d7d

[13:03] <dalek> ecosystem: 793b7a8 | (Zoffix Znet)++ | META.list:

[13:03] <dalek> ecosystem: Merge pull request #263 from bduggan/p6-log-async

[13:03] <dalek> ecosystem: 

[13:03] <dalek> ecosystem: add Log::Async

[13:03] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/793b7a8a81

[13:05] *** ufobat___ joined
[13:09] *** ufobat_ left
[13:16] <RabidGravy> woo!

[13:17] *** kurahaupo__ joined
[13:20] *** ufobat_ joined
[13:20] *** ufobat___ left
[13:20] *** itaipu left
[13:21] *** skids joined
[13:21] *** Jesmaybe joined
[13:25] *** Jesmaybe left
[13:25] *** Khisanth left
[13:32] *** itaipu joined
[13:34] <RabidGravy> So it appears I have a new contract starting on Tuesday

[13:34] <RabidGravy> what larks

[13:35] <DrForr> That would be with a certain company at Westfield?

[13:37] <Xliff__> Guys, any word on what is causing this problem?

[13:37] <Xliff__> https://gist.github.com/Xliff/0f537c12b415fa0800a55f9484a25b1a

[13:37] <Xliff__> I've been fighting this one for months.

[13:37] *** Xliff__ is now known as Xliff

[13:39] *** Khisanth joined
[13:39] <RabidGravy> DrForr, indeed

[13:39] <ugexe>  El_Che: you still have to tell zef where to install to; `perl6 -Iinst#$HOME/.perl6 zef ...` is only telling perl6 where to look for libraries and tells zef nothing

[13:40] <ugexe> `zef --install-to=inst#$HOME/.perl6 install ...` for example

[13:43] <ugexe> you can also edit DefaultCUR in the config to set the default value for --install-to, along with having per-user configs from attempting to load from ~./zef/config.json (if it exists - its not created by default)

[13:43] <El_Che> thx, I'll fix it right away

[13:44] <ugexe> also for `inst#$HOME/.perl6` you can just use `home`, i.e `zef --install-to=home install ...`

[13:44] *** ocbtec left
[13:45] <ugexe> which means you can edit 'DefaultCUR' to `home` before installing zef and then all users can use the default config

[13:53] *** dg left
[13:53] *** smash left
[13:54] <El_Che> ugexe: it works. Recreating the dockerfiles in order to create new packages. Thx!

[13:54] *** smash joined
[13:55] *** dg joined
[13:56] <dalek> doc: 965ab76 | gfldex++ | doc/Language/typesystem.pod6:

[13:56] <dalek> doc: show mixins on class and relationship to container type

[13:56] <dalek> doc: review: https://github.com/perl6/doc/commit/965ab7638f

[13:58] <gfldex> nice illustration of mixins: https://i.chzbgr.com/full/3461021696/h5F7479EB/

[14:00] *** orangeblock left
[14:00] <ugexe> clearly thats inheritance: table inherits from outboard motor

[14:18] *** cdg_ joined
[14:20] *** cdg left
[14:20] *** bjz_ left
[14:25] *** khw joined
[14:29] <[Coke]> doc's bin/p6doc is slow. :|

[14:30] *** perlawhirl left
[14:33] *** stevieb9 joined
[14:37] *** eliasr joined
[14:38] *** nicq20 joined
[14:40] <nicq20> Hello!

[14:40] <nicq20> o/

[14:40] <gfldex> [Coke]: do you care to profile?

[14:46] *** andrzejku left
[14:48] *** noganex joined
[14:48] *** xinming joined
[14:51] *** noganex_ left
[14:53] *** neuraload left
[14:54] *** FROGGS joined
[14:56] *** ufobat_ left
[14:57] *** wamba joined
[15:11] <dalek> doc/spellcheck: 4d09760 | (Zoffix Znet)++ | doc/Type/Mix.pod6:

[15:11] <dalek> doc/spellcheck: Correct that Mix.Bag/BagHash .Ints not .rounds

[15:11] <dalek> doc/spellcheck: 

[15:11] <dalek> doc/spellcheck: Per today's changes[^1], the coercion now .Ints the weights instead of .round'ing

[15:11] <dalek> doc/spellcheck: 

[15:11] *** dalek left
[15:12] <p3rln00b> killer! :)

[15:12] *** dalek joined
[15:12] *** ChanServ sets mode: +v dalek

[15:13] <[Coke]> gfldex: not a yak I can shave at the moment.

[15:14] * [Coke] updates the perl6/doc spellchecker to spell check rendered text, not raw pod6

[15:14] <[Coke]> muuuch nicer.

[15:14] <[Coke]> (but slower)

[15:17] *** rgrinberg left
[15:20] <dalek> doc: 45544de | coke++ | doc/Language/regexes.pod6:

[15:20] <dalek> doc: fix typo

[15:20] <dalek> doc: review: https://github.com/perl6/doc/commit/45544deff5

[15:20] <FROGGS> o/

[15:20] <moritz> \o

[15:22] *** Jesmaybe joined
[15:22] <[Coke]> anyone want to help with spellchecking the docs?

[15:23] <[Coke]> down to 714 questionable words from aspell.

[15:27] *** Jesmaybe left
[15:28] *** rgrinberg joined
[15:35] *** seatek joined
[15:37] *** nicq20 left
[15:41] *** itaipu left
[15:46] *** mohae_ joined
[15:48] <[ptc]> cool!  There's a perl6/doc spellchecker!

[15:48] *** mohae left
[15:50] *** bstamour joined
[15:50] <[Coke]> in a branch, hopefully will be able to put it into master's xtest this weekend.

[15:50] <[Coke]> er, pending a moarvm bug fix.

[15:51] *** _slade_ left
[15:57] *** domidumont left
[16:02] *** MilkmanDan left
[16:02] *** MilkmanDan joined
[16:11] <dalek> doc: df49af3 | gfldex++ | doc/Language/typesystem.pod6:

[16:11] <dalek> doc: comment output

[16:11] <dalek> doc: review: https://github.com/perl6/doc/commit/df49af3690

[16:13] *** kaare_ left
[16:14] *** seatek left
[16:22] *** domidumont joined
[16:24] *** itaipu joined
[16:28] *** setty2 joined
[16:28] *** bstamour left
[16:29] *** seatek joined
[16:45] *** _slade_ joined
[16:47] *** cyphase left
[16:55] *** yqt joined
[17:11] *** firstdayonthejob joined
[17:12] *** hankache joined
[17:13] <hankache> m: say "Hello #perl6"

[17:13] <camelia> rakudo-moar 8268ff: OUTPUT«Hello #perl6␤»

[17:14] *** wamba left
[17:16] <p3rln00b> m: 'へっぉ、 はんかちぇ'.say

[17:16] <camelia> rakudo-moar 8268ff: OUTPUT«へっぉ、 はんかちぇ␤»

[17:24] *** Jesmaybe joined
[17:27] <harmil_wk> p3rln00b: shouldn't that "n/l" be in Katakana? ;-)

[17:27] * p3rln00b shrugs

[17:28] *** Jesmaybe left
[17:29] *** lostinfog joined
[17:33] *** obfusk_ joined
[17:40] *** cyphase joined
[17:40] *** andrzejku joined
[17:47] *** girafe joined
[18:00] *** cyphase left
[18:02] *** itaipu left
[18:02] *** kaare_ joined
[18:04] *** LLamaRider joined
[18:04] *** rgrinberg left
[18:04] *** cyphase joined
[18:08] *** _slade_ left
[18:11] *** cyphase left
[18:15] *** cyphase joined
[18:16] *** cdg_ left
[18:24] <TimToady> p3rln00b: that looks like "hetsuo" to me, not "hello"

[18:25] *** cyphase left
[18:27] *** [particle]1 left
[18:27] <p3rln00b> aww

[18:27] <p3rln00b> Google Translate isn't good :)

[18:29] *** AlexDaniel joined
[18:31] <TimToady> and if "hankache" is meant to correspond to the Japanese for "handkerchief", they should've translated it to ハンカチ  :)

[18:32] <hankache> hein?

[18:32] <hankache> oh

[18:33] <TimToady> "hankachi" in Japanese

[18:34] * TimToady assumes the resemblance is likely accidental...

[18:34] <hankache> :)

[18:36] <El_Che> ugexe: Fixed the zef installer in the rakudo packages: https://github.com/nxadm/rakudo-pkg/releases/tag/FixZefUserInstall

[18:36] *** Derperperd joined
[18:36] *** lucasb_ joined
[18:40] *** labster joined
[18:43] *** mrsolo_ joined
[18:44] *** olinkl_ joined
[18:44] *** Some-body_ joined
[18:44] *** w4and0er96_ joined
[18:45] *** _notbenh joined
[18:45] *** mohae joined
[18:45] *** esh_ joined
[18:45] *** ranguard_ joined
[18:45] *** Brock joined
[18:45] *** KotH_ joined
[18:46] *** BinGOs_ joined
[18:46] *** bhm_ joined
[18:46] *** xfix_ joined
[18:46] *** b^_^d joined
[18:46] *** huf__ joined
[18:46] *** nowan joined
[18:46] <Dunearhp> I've been having trouble with 'HLE/RTM' associated segfaults and best I can tell, my processor shouldn't have the the HLE bug. 

[18:46] *** jdv79_ joined
[18:46] *** ilbelkyr_ joined
[18:46] *** ponbiki_ joined
[18:47] <Dunearhp> Found https://github.com/andikleen/tsx-tools.git

[18:47] *** Shozan joined
[18:47] *** roguelazer_ joined
[18:47] *** kentnl joined
[18:47] *** BinGOs left
[18:48] *** BinGOs_ is now known as BinGOs

[18:48] <Dunearhp> there is a ignore-xend.so LD_PRELOAD library in there that stops the segfaults when I try to compile panda

[18:48] <dalek> specs: 5627bda | (Zoffix Znet)++ | v6d.pod:

[18:48] <dalek> specs: Remove Signature/Attribute Defaults Based on Definedness

[18:48] <dalek> specs: 

[18:48] <dalek> specs: Per discussion with pmchaud, this feature can be added to current rakudo, without needing a 6.d (as it doesn't interfere with anything), and should first be implemented as a user-space module for experimentation.

[18:48] <dalek> specs: review: https://github.com/perl6/specs/commit/5627bda79b

[18:48] *** adrusi_ joined
[18:48] *** BinGOs left
[18:48] *** BinGOs joined
[18:49] *** FROGGS_ joined
[18:49] *** akiym_ joined
[18:49] <Dunearhp> it  suggests that the segfaults occur when an already unlocked mutex is unlocked

[18:50] *** BrassLantern joined
[18:50] *** BrassLantern left
[18:50] *** BrassLantern joined
[18:50] *** eviltwin_b joined
[18:51] *** BrassLantern left
[18:51] *** BrassLantern joined
[18:51] *** BrassLantern left
[18:51] *** BrassLantern joined
[18:51] *** seatek left
[18:51] *** mohae_ left
[18:51] *** FROGGS left
[18:51] *** darutoko left
[18:51] *** geekosaur left
[18:51] *** nowan_ left
[18:51] *** ribasushi left
[18:51] *** mxco86 left
[18:51] *** timeless left
[18:51] *** ilbelkyr left
[18:51] *** olinkl left
[18:51] *** ponbiki left
[18:51] *** KotH left
[18:51] *** ilmari[m] left
[18:51] *** JimmyZ left
[18:51] *** kent\n left
[18:51] *** xfix left
[18:51] *** w4and0er96 left
[18:51] *** awwaiid left
[18:51] *** huf_ left
[18:51] *** akiym left
[18:51] *** yossarian left
[18:51] *** SHODAN left
[18:51] *** d^_^b left
[18:51] *** vike left
[18:51] *** mrsolo left
[18:51] *** notbenh left
[18:51] *** bhm left
[18:51] *** DarthGandalf left
[18:51] *** adrusi left
[18:51] *** roguelazer left
[18:51] *** esh left
[18:51] *** jdv79 left
[18:51] *** ranguard left
[18:51] *** Some-body_ is now known as DarthGandalf

[18:51] *** roguelazer_ is now known as roguelazer

[18:51] <p3rln00b> wweeeeeeeeeeeeeee

[18:51] *** _notbenh is now known as notbenh

[18:51] *** eviltwin_b is now known as geekosaur

[18:51] *** vike1 joined
[18:52] *** woodruffw joined
[18:52] <harmil_wk> TimToady: some of the Katakana loanwords are based on Japanese pronunciations of foreign words, not just on the original loanword. The classic example is depato (デパート) which means "department store"

[18:52] *** woodruffw left
[18:52] *** woodruffw joined
[18:52] *** woodruffw left
[18:53] *** olinkl_ is now known as olinkl

[18:53] *** woodruffw joined
[18:53] *** ribasushi_ joined
[18:53] *** woodruffw left
[18:53] *** itaipu joined
[18:53] *** w4and0er96_ is now known as w4and0er96

[18:53] *** woodruffw joined
[18:53] *** woodruffw left
[18:54] *** woodruffw joined
[18:54] *** woodruffw left
[18:54] *** BuildTheRobots left
[18:54] *** woodruffw joined
[18:54] *** woodruffw left
[18:54] *** rgrinberg joined
[18:55] *** woodruffw joined
[18:55] *** woodruffw left
[18:55] *** huf__ is now known as huf

[18:55] *** woodruffw joined
[18:55] *** woodruffw left
[18:55] *** woodruffw joined
[18:55] *** woodruffw left
[18:56] *** ilmari[m] joined
[18:56] *** woodruffw joined
[18:56] *** woodruffw left
[18:56] *** woodruffw joined
[18:56] *** woodruffw left
[18:56] <p3rln00b> jesus

[18:56] *** BuildTheRobots joined
[18:57] *** woodruffw joined
[18:57] *** woodruffw left
[18:57] *** woodruffw joined
[18:57] *** woodruffw left
[18:58] *** woodruffw joined
[18:58] *** woodruffw left
[18:58] *** JimmyZ joined
[18:58] *** woodruffw joined
[18:58] *** woodruffw left
[18:59] <hankache> que pasa?

[18:59] *** SmokeMachine____ left
[18:59] *** woodruffw joined
[18:59] *** woodruffw left
[18:59] *** bioduds joined
[18:59] <p3rln00b> The woodruffw person join-quitting

[18:59] *** p3rln00b is now known as woddruffw

[18:59] <woddruffw> haw

[18:59] <woddruffw> ... break the cycle.

[18:59] *** woodruffw joined
[18:59] *** woodruffw left
[19:00] <psch> except oo vs od

[19:00] <timotimo> not if you typo it :)

[19:00] <woddruffw> Oh, ... I need to spell it right

[19:00] *** TEttinger joined
[19:00] *** woodruffw joined
[19:00] *** woodruffw left
[19:00] *** woddruffw is now known as woodruffw

[19:00] * psch waits with baited breath for woodruffw_

[19:00] *** yossarian joined
[19:00] *** yossarian left
[19:00] <woodruffw> lol

[19:00] *** timeless joined
[19:01] <psch> huh

[19:01] *** woodruffw is now known as p3rln00b

[19:01] *** woodruffw joined
[19:01] *** woodruffw left
[19:01] *** SmokeMachine____ joined
[19:01] *** woodruffw joined
[19:01] *** woodruffw left
[19:02] *** p3rln00b is now known as woodruffw

[19:02] *** yossarian joined
[19:02] *** yossarian left
[19:02] *** ZoffixW joined
[19:02] *** ZoffixW is now known as yossarian

[19:02] <psch> ...that's just silly

[19:02] *** domidumont left
[19:02] <woodruffw> Watch me. It'll work :)

[19:03] <FROGGS_> looks good so far

[19:03] *** woodruff- joined
[19:03] <woodruffw> :D

[19:03] <psch> :P

[19:03] <FROGGS_> but no excess flood

[19:03] <hankache> hah

[19:03] <woodruffw> Yeah, I guess I fixed it.

[19:04] <psch> there's probably some intricacy in IRC i don't know about that makes this a solution

[19:04] *** woodruffw is now known as p3rln00b

[19:04] *** yossarian left
[19:04] *** riatre joined
[19:04] *** LLamaRider left
[19:04] <FROGGS_> zoffn00b++

[19:04] <p3rln00b> :)

[19:05] * FROGGS_ does not know how to l33t

[19:06] <psch> ...i am by now getting somewhat curious what exactly the bits of the IRC protocol that made this a fix are

[19:06] <harmil_wk> FROGGS_: It's just a jump to the left...

[19:07] <p3rln00b> psch: my wild guess is that the client was trying to send a crapton of something on reconnect, but because 2 nicks were taken, by the time it got to the 3rd nick, whatever it was flooding with on connect got ignored by the server because the user did not yet have a nick.

[19:08] <psch> p3rln00b: oh, so the backbuffer for commands that get send before nick negotiation is finished ran over or something like that?

[19:08] *** chris2 left
[19:08] *** peteretep left
[19:08] <p3rln00b> possibly. I've no idea why it was flooding in the first place :) 

[19:08] <psch> ("ran over" as in "server said: okay that's enough we didn't even agree who you are"

[19:08] <psch> )

[19:09] *** peteretep joined
[19:09] <psch> ...i don't think i should try and reproduce that on freenode

[19:09] <p3rln00b> :}

[19:09] *** bioduds left
[19:10] *** bioduds joined
[19:10] *** hankache left
[19:11] *** chris2 joined
[19:13] * geekosaur thinks this sounds like the vnc bug

[19:13] <geekosaur> er znc not vnc

[19:13] *** kaare_ left
[19:14] <geekosaur> which I think is actually a connected client and znc both doing the same channel queries, and the fact that both are doing it can lead to that kind of mismatching

[19:22] *** seatek joined
[19:25] *** Jesmaybe joined
[19:28] *** dalek left
[19:29] *** itaipu left
[19:29] *** Undercover left
[19:29] *** isacloud joined
[19:29] *** huggable left
[19:29] *** buggable left
[19:29] *** bisectable6 left
[19:30] *** Jesmaybe left
[19:30] *** dalek joined
[19:30] *** ChanServ sets mode: +v dalek

[19:30] *** bisectable6 joined
[19:34] *** FROGGS_ left
[19:35] *** skids left
[19:37] *** lucasb_ left
[19:42] *** buggable joined
[19:42] *** NeuralAnomaly left
[19:42] *** huggable joined
[19:42] *** NeuralAnomaly joined
[19:43] *** _slade_ joined
[19:44] *** Undercover joined
[19:56] *** vendethiel joined
[20:04] <dalek> doc/spellcheck: 45544de | coke++ | doc/Language/regexes.pod6:

[20:04] <dalek> doc/spellcheck: fix typo

[20:04] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/45544deff5

[20:04] <dalek> doc/spellcheck: df49af3 | gfldex++ | doc/Language/typesystem.pod6:

[20:04] <dalek> doc/spellcheck: comment output

[20:04] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/df49af3690

[20:04] <dalek> doc/spellcheck: 3cbf2ad | coke++ | doc/Language/ (2 files):

[20:04] <dalek> doc/spellcheck: Merge branch 'master' into spellcheck

[20:04] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/3cbf2ad0a0

[20:04] *** djbkd left
[20:19] *** cpage_ left
[20:20] *** ponbiki_ is now known as ponbiki

[20:20] *** Derperperd left
[20:20] <dalek> doc/spellcheck: de4deb2 | coke++ | xt/.aspell.pws:

[20:20] <dalek> doc/spellcheck: more words

[20:20] <dalek> doc/spellcheck: review: https://github.com/perl6/doc/commit/de4deb2d2a

[20:21] *** smls joined
[20:21] <dalek> doc: 3974b1c | coke++ | doc/Language/subscripts.pod6:

[20:21] <dalek> doc: other instances used the US version

[20:21] <dalek> doc: review: https://github.com/perl6/doc/commit/3974b1cbfb

[20:23] *** Derperperd joined
[20:25] *** Derperperd left
[20:27] *** travis-ci joined
[20:27] <travis-ci> Doc build errored. Will "Coke" Coleda 'more words'

[20:27] <travis-ci> https://travis-ci.org/perl6/doc/builds/167747432 https://github.com/perl6/doc/compare/3cbf2ad0a0c5...de4deb2d2a45

[20:27] *** travis-ci left
[20:29] *** stmuk joined
[20:30] *** stmuk_ left
[20:31] *** andrzejku left
[20:38] *** sjoshi joined
[20:42] *** ilbelkyr_ is now known as ilbelkyr

[20:44] *** BrassLantern left
[20:46] *** cpage_ joined
[20:46] *** itaipu joined
[20:51] *** Dunearhp joined
[20:54] *** bjz joined
[20:55] *** kurahaupo_ joined
[20:55] <smls> Is `$proc.in.write` supposed to block when given a large Blob to write?

[20:57] <geekosaur> it will block if the process is not reading, yes. pipes have finite buffer space

[20:57] *** kurahaupo__ left
[20:57] <smls> ok

[20:57] <smls> problem is, that my own script is doing the reading

[20:57] <geekosaur> whether this block is happening at OS level or if libuv is supposed to be using non-blocking operations and return a "would block, try again" and some higher level is blocking based on that, I cannot say

[20:58] <smls> and that code is never reached because the write blocks

[20:59] <smls> I based my code on the example on the `Proc` p6doc page,  which does `.in.say`, then closes `.in`, then `.in.close`, then `.out.slurp-rest`.

[20:59] <smls> But that only works if input sent in the first step is small enough.

[20:59] <smls> s/then closes `.in`,//

[21:01] <geekosaur> correct

[21:01] <geekosaur> this is the open3 problem, sounds like

[21:01] *** Dunearhp left
[21:01] <geekosaur> and has the same kind of solutions (usually, multiple threads)

[21:03] <smls> Hm. Wrapping the `.in.write` and `.in.close` in a `start { }` (and awaiting the promise after the `.out.slurp-rest`), hangs indefinitely on the `.in.close`.

[21:05] <smls> while using a CPU core at 100%, no less.

[21:06] <smls> demo script: https://gist.github.com/smls/75518c746ca65b3287482c491971eac0

[21:08] <smls> To be expected, or bug?

[21:08] *** Dunearhp joined
[21:09] *** _slade_ left
[21:09] <timotimo> moar sometimes gets confused, i think

[21:10] <timotimo> or maybe it's libuv

[21:12] *** _slade_ joined
[21:17] <smls> ok, will RT just to be sure

[21:18] <smls> But for now, what is a working way to pipe a large Buf through an external command from Perl 6?

[21:23] *** _slade_ left
[21:23] *** kurahaupo_ left
[21:24] *** kurahaupo__ joined
[21:24] *** kurahaupo__ is now known as kurahaupo

[21:26] *** _slade_ joined
[21:30] <RabidGravy> shouldn't that give an eroor as other handles across threads do?

[21:32] *** guest1111 joined
[21:33] *** guest1111 left
[21:34] <RabidGravy> Proc::Async would seem to be the puppy though

[21:43] *** bjz_ joined
[21:45] *** bjz left
[21:46] *** wamba joined
[21:55] *** ptolemarch left
[21:56] *** KotH_ is now known as KotH

[21:56] *** Derperperd joined
[21:57] *** nadim left
[21:57] *** sjoshi left
[22:00] *** itaipu left
[22:05] *** _slade_ left
[22:05] *** lostinfog left
[22:21] *** TEttinger left
[22:25] <gfldex> smls: you get the same behaviour with https://rt.perl.org/Public/Bug/Display.html?id=129787

[22:25] *** skids joined
[22:27] *** Jesmaybe joined
[22:30] *** canopus left
[22:31] *** cyphase joined
[22:32] *** Jesmaybe left
[22:39] *** flexibeast left
[22:39] *** canopus joined
[22:40] *** firstdayonthejob left
[22:46] *** wamba left
[22:47] *** bjz_ left
[22:50] *** rindolf left
[22:50] *** firstdayonthejob joined
[22:53] *** RabidGravy left
[22:56] *** firstdayonthejob left
[23:14] *** kurahaupo left
[23:15] *** luis joined
[23:18] *** geekosaur left
[23:19] *** geekosaur joined
[23:27] *** stevieb9 left
[23:33] *** literal left
[23:34] *** literal joined
[23:35] *** avar joined
[23:36] *** geraud left
[23:55] *** bjz joined
[23:58] *** BenGoldberg joined
