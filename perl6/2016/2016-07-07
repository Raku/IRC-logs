[00:06] *** japhb joined
[00:16] *** BenGoldberg joined
[00:22] *** AlexDaniel left
[00:43] *** labster left
[00:44] *** labster joined
[01:06] *** z3ndrag0n left
[01:08] *** kalkin- joined
[01:09] *** z3ndrag0n joined
[01:09] *** Actualeyes joined
[01:12] *** kalkin-_ left
[01:14] *** AndyBotwin left
[01:26] *** Roamer` left
[01:26] *** wisti left
[01:27] *** ssotka left
[01:28] *** cdg_ joined
[01:29] *** tbrowder left
[01:31] *** cdg left
[01:41] *** sortiz joined
[01:41] <sortiz> \o #perl6

[01:41] <Zoffix> \o

[01:45] *** ilbot3 left
[01:47] <Zoffix> Damn... I either have throat cancer or I've never noticed a botched tonsil removal job for 23 years :/

[01:47] *** nchambers left
[01:47] <Zoffix> If I'll stop showing up, you know why ^_^

[01:47] *** ilbot3 joined
[01:49] *** cdg_ left
[01:50] <gfldex> m: Int.^method_table<abs>:delete; Int.^compose; say (-5).abs

[01:50] <camelia> rakudo-moar 55c359: OUTPUT«Memory allocation failed; could not allocate 79872 bytes␤»

[01:50] <gfldex> Zoffix: ^^^

[01:50] *** grondilu left
[01:52] <Zoffix> gfldex, doesn't seem to be working? :)

[01:53] <gfldex> please don't pull the rug out from under objects

[01:55] <Xliff> m: use NativeCall; class A is repr('CStruct') { has uint8 $.a; has uint8 $.b; has uint32 $.c; has uint32 $.d; has uint32 $.e; }; say nativesizeof(A)

[01:55] <camelia> rakudo-moar 55c359: OUTPUT«16␤»

[01:56] <Xliff> ^^ Expecting 14. 

[01:56] <Xliff> m: say 1 + 1 + 4 * 3

[01:56] <camelia> rakudo-moar 55c359: OUTPUT«14␤»

[01:57] <geekosaur> nope

[01:57] <sortiz> Xliff, All C structs use some padding.

[01:57] <Zoffix> Doesn't it need to pad?

[01:57] <geekosaur> C compilers force alignment

[01:57] <Xliff> Ooooo

[01:57] <Xliff> Well that sucks.

[01:57] <geekosaur> a and b will be contiguous but c will be aligned

[01:58] <geekosaur> to the next 4-byte boundary, hence 2 slack bytes

[01:58] <Xliff> That explains some things.

[01:58] <Xliff> I'm trying to read from a data file. I don't want alignment. That throws stuff off.

[01:58] <geekosaur> (on x86/x86_64 at least; actual alignment depends on platform ABI)

[01:58] <gfldex> m: use NativeCall; class A is repr('CStruct') { has uint32 $.a; has uint32 $.b; has uint32 $.c; has uint8 $.d; has uint8 $.e; }; say nativesizeof(A)

[01:58] <camelia> rakudo-moar 55c359: OUTPUT«16␤»

[01:58] <geekosaur> unpack should be in the ecosystem

[01:59] <Xliff> So I can't avoid pack/unpack in this case?

[01:59] <sortiz> Nope

[01:59] <Xliff> kk

[01:59] <Xliff> So is there any way to compute the size of a class/record WITHOUT the alignment issues?

[02:00] <Xliff> Or do I need *gasp* naked values! 

[02:02] *** noganex_ joined
[02:03] *** kurahaupo left
[02:04] *** rgrinberg joined
[02:05] *** noganex left
[02:06] *** maybekoo2 left
[02:09] <Zoffix> Can someone with access to OSX try out the hanging examples in this ticket? I can't reproduce it on neither Windows nor Linux. Wondering if we can close that ticket: https://rt.perl.org/Ticket/Display.html?id=126390

[02:28] *** vendethiel joined
[02:35] *** vendethiel left
[02:35] *** pat_js left
[02:36] *** addison left
[02:41] <dj_goku> Xliff: so I am getting a segfault with the changes to inet_ntop, turning on debugging in moar so it'll be a few before I know more.

[02:43] <sortiz> dj_goku, what is your problem with inet_ntop?

[02:44] <Xliff> dj_goku, If you missed nine's correction, here it is: sub inet_ntop(int32, Pointer, Str, uint32) returns Str is native { * }

[02:44] <Xliff> And make the corresponding change to the other sub.

[02:46] *** espadrine left
[02:51] <dj_goku> Xliff: still same seq fault

[02:51] <sortiz> m: use NativeCall; sub inet_ntop(int32,Buf,utf8,uint32 --> Str) is native {*}; my $a = utf8.allocate(16); say inet_ntop(2,Buf.new(200,33,54,1), $a, 16);

[02:51] <camelia> rakudo-moar 55c359: OUTPUT«200.33.54.1␤»

[02:52] *** AndyBotwin joined
[02:52] <dj_goku> sortiz: lol

[02:52] <dj_goku> sortiz: I have spent a few hours last night trying to figure this all out. Just for fun.

[02:52] <dj_goku> lol

[02:52] <dj_goku> balh

[02:53] *** ssotka joined
[02:56] <sortiz> dj_goku, the important detail is that the 'dst' argument should be a pre-allocated buffer.

[02:56] *** wamba left
[02:58] <sortiz> m: use NativeCall; sub inet_ntop(int32,Buf,utf8,uint32 --> Str) is native {*}; my $a = utf8.allocate(16); inet_ntop(2,Buf.new(127,0,0,1), $a, $a.elems); $a.decode.say; # Other way

[02:58] <camelia> rakudo-moar 55c359: OUTPUT«127.0.0.1␀␀␀␀␀␀␀␤»

[02:59] <dj_goku> m: use NativeCall; sub inet_pton(int32, Str, Buf is rw) returns int32 is natvie {*}; my $a = Buf; inet_pton(2, '127.0.0.1', $a); say $a.WHAT;

[02:59] <camelia> rakudo-moar 55c359: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Can't use unknown trait 'is natvie' in a sub+{callable[int32]} declaration.␤at <tmp>:1␤    expecting any of:␤        rw raw hidden-from-backtrace hidden-from-USAGE␤        pure default DEPRECATED inl…»

[02:59] <dj_goku> m: use NativeCall; sub inet_pton(int32, Str, Buf is rw) returns int32 is natvie {*}; my $a = Buf; inet_pton(2, '127.0.0.1', $a); say $a.WHAT;

[02:59] <camelia> rakudo-moar 55c359: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Can't use unknown trait 'is natvie' in a sub+{callable[int32]} declaration.␤at <tmp>:1␤    expecting any of:␤        rw raw hidden-from-backtrace hidden-from-USAGE␤        pure default DEPRECATED inl…»

[02:59] <dj_goku> m: use NativeCall; sub inet_pton(int32, Str, Buf is rw) returns int32 is native {*}; my $a = Buf; inet_pton(2, '127.0.0.1', $a); say $a.WHAT;

[02:59] <camelia> rakudo-moar 55c359: OUTPUT«(signal SEGV)»

[02:59] <dj_goku> m: use NativeCall; sub inet_pton(int32, Str, Buf is rw) returns int32 is native {*}; my $a = Buf.new; inet_pton(2, '127.0.0.1', $a); say $a.WHAT;

[02:59] <camelia> rakudo-moar 55c359: OUTPUT«(signal SEGV)»

[03:00] *** huggable left
[03:00] *** huggable joined
[03:00] <dj_goku> m: use NativeCall; sub inet_pton(int32, Str, Buf is rw) returns int32 is native {*}; my $a = Buf.new; inet_pton(2, '127.0.0.1', $a);

[03:00] <camelia> rakudo-moar 55c359: OUTPUT«(signal SEGV)»

[03:00] *** noganex joined
[03:01] <sortiz>  m: use NativeCall; sub inet_pton(int32, Str, Buf is rw) returns int32 is native {*}; my $a = Buf.allocate(4); inet_pton(2, '127.0.0.1', $a); say $a

[03:01] <camelia> rakudo-moar 55c359: OUTPUT«Buf:0x<7f 00 00 01>␤»

[03:04] *** noganex_ left
[03:05] <dj_goku> ahh

[03:06] <sortiz> m: use NativeCall; sub inet_pton(int32, Str, Buf --> int32) is native {*}; my $a = Buf.allocate(4); inet_pton(2, '127.0.0.1', $a); say $a; # In fact no 'is rw' required.

[03:06] <camelia> rakudo-moar 55c359: OUTPUT«Buf:0x<7f 00 00 01>␤»

[03:06] <Xliff> sortiz++ # Knowledge!

[03:10] *** kid51 left
[03:11] <dj_goku> m: use NativeCall; sub inet_pton(int32, Str, Buf is rw) returns int32 is native { * }; sub inet_ntop(int32, Buf, utf8, uint32 --> Str) is native { * }; my $s_addr = Buf.allocate(4); inet_pton(2, '127.0.0.1', $s_addr); my $ip = utf8.allocate(16); say inet_ntop(2, $s_addr, $ip, 16); # to put it all together.

[03:11] <camelia> rakudo-moar 55c359: OUTPUT«127.0.0.1␤»

[03:12] <dj_goku> sortiz: wow, so thanks. now I have to go figure out why that all worked and why. :D

[03:14] <sortiz> The important detail with those calls is that all buffers need to be properly allocated. And you can consider .allocate of Blob/Buf as Perl6's malloc. 

[03:15] <dj_goku> ok. I haven't messed with C in ages and have forgotten all that knowledge.

[03:22] *** Actualeyes left
[03:32] <MasterDuke> .tell timotimo another minor update to add the line number in the source file as a column, https://github.com/MoarVM/MoarVM/pull/382

[03:32] <yoleaux> MasterDuke: I'll pass your message to timotimo.

[03:45] *** skids left
[03:49] *** dj_goku left
[03:49] *** molaf joined
[03:50] *** canopus left
[03:50] *** canopus joined
[03:57] *** dj_goku joined
[04:17] *** rgrinberg left
[04:17] *** cbk left
[04:28] *** khw left
[04:34] *** Senji joined
[04:46] *** Actualeyes joined
[04:48] *** Cabanossi left
[04:50] *** jack_rabbit joined
[04:51] *** Cabanossi joined
[04:56] *** Sgeo left
[04:57] *** Sgeo joined
[04:59] *** Upasaka left
[05:00] *** Sgeo left
[05:00] *** Sgeo joined
[05:11] *** Sgeo left
[05:11] *** zacts joined
[05:11] *** Sgeo joined
[05:14] *** BenGoldberg left
[05:18] *** Sgeo left
[05:20] *** CIAvash joined
[05:24] *** vendethiel joined
[05:36] *** Zoffix left
[05:54] *** M-matthew left
[05:56] *** kerframil left
[05:57] *** zacts left
[05:57] *** Sgeo joined
[06:00] *** vendethiel left
[06:00] *** z3ndrag0n left
[06:01] *** M-matthew joined
[06:01] *** z3ndrag0n joined
[06:12] *** sortiz left
[06:15] *** jack_rabbit left
[06:17] *** ssotka left
[06:22] *** nemo left
[06:23] *** nemo joined
[06:23] *** nemo is now known as Guest94483

[06:31] *** firstdayonthejob joined
[06:33] *** jack_rabbit joined
[06:38] <Xliff> Does anyone know the best way to take data from unpack and properly convert it to a float?

[06:39] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(<00 01 00 01>));

[06:39] <camelia> rakudo-moar 55c359: OUTPUT«2.35106044812595e-38␤»

[06:39] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(<01 01 00 0>));

[06:39] <camelia> rakudo-moar 55c359: OUTPUT«3.60133705331478e-43␤»

[06:40] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(<00 01 00 00>));

[06:40] <camelia> rakudo-moar 55c359: OUTPUT«3.58732406867153e-43␤»

[06:40] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(<00 00 01 00>));

[06:40] <camelia> rakudo-moar 55c359: OUTPUT«9.18354961579912e-41␤»

[06:42] *** firstdayonthejob left
[06:43] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(<80 3f 00 00>));

[06:43] <camelia> rakudo-moar 55c359: OUTPUT«Type check failed in initializing element #1 to Buf; expected uint8 but got Str ("3f")␤  in any  at gen/moar/m-Metamodel.nqp line 1736␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in any  at gen/moar/m-Metamodel.nqp line 3055␤  in a…»

[06:44] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new([80, 3f, 00, 00]>));

[06:44] <camelia> rakudo-moar 55c359: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3ll; say nativecast(num32, Buf.new([80, 37⏏5f, 00, 00]>));␤    expecting any of:␤        whitespace␤»

[06:44] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(80, 3f, 00, 00));

[06:44] <camelia> rakudo-moar 55c359: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' ␤at <tmp>:1␤------> 3all; say nativecast(num32, Buf.new(80, 37⏏5f, 00, 00));␤    expecting any of:␤        whitespace␤»

[06:47] *** domidumont joined
[06:49] <raydiak> m: use NativeCall; say nativecast num32, Buf.new: 0x80, 0x3f, 0x00, 0x00

[06:49] <camelia> rakudo-moar 55c359: OUTPUT«2.27795078360642e-41␤»

[06:51] <Xliff> D'oh

[06:51] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(0x3f, 0x80, 00, 00));

[06:51] <camelia> rakudo-moar 55c359: OUTPUT«Potential difficulties:␤    Leading 0 does not indicate octal in Perl 6.␤    Please use 0o0 if you mean that.␤    at <tmp>:1␤    ------> 3nativecast(num32, Buf.new(0x3f, 0x80, 007⏏5, 00));␤    Leading 0 does not indicate octal in Perl 6.␤…»

[06:51] *** domidumont left
[06:52] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(0x3f, 0x80, 0x00, 0x00));

[06:52] <camelia> rakudo-moar 55c359: OUTPUT«4.60060298822481e-41␤»

[06:52] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(0x80, 0x3f, 0x00, 0x00));

[06:52] <camelia> rakudo-moar 55c359: OUTPUT«2.27795078360642e-41␤»

[06:52] *** domidumont joined
[06:52] <Xliff> m: use NativeCall; say nativecast(num32, Buf.new(0x00, 0x00, 0x80, 0x3f));

[06:52] <camelia> rakudo-moar 55c359: OUTPUT«1␤»

[06:53] <Xliff> radiak++ 

[06:53] <raydiak> :)

[07:00] *** huggable left
[07:06] *** cpage_ left
[07:09] *** Amnez777 left
[07:11] *** Amnez777 joined
[07:13] *** darutoko joined
[07:22] *** zakharyas joined
[07:28] <timotimo> MasterDuke: is it correct to remove the ; before the function? because in the line before that there's still a ! for some reason ...

[07:28] <yoleaux> 03:32Z <MasterDuke> timotimo: another minor update to add the line number in the source file as a column, https://github.com/MoarVM/MoarVM/pull/382

[07:28] *** aries_liuxueyang left
[07:30] *** aries_liuxueyang joined
[07:33] *** RabidGravy joined
[07:33] *** sno left
[07:33] *** abraxxa joined
[07:39] *** bjz joined
[07:42] *** AlexDaniel joined
[07:43] *** bjz left
[07:56] *** AlexDaniel left
[08:02] *** jonas1 joined
[08:06] *** maybekoo2 joined
[08:08] <buharin> hello :)

[08:13] *** dakkar joined
[08:14] <DrForr> Mornin'.

[08:18] <hahainternet> hola

[08:19] *** Actualeyes left
[08:22] *** Roamer` joined
[08:30] <RabidGravy> BOOM!

[08:32] *** jack_rabbit left
[08:33] <Xliff> Here comes the Boom! 

[08:33] <Xliff> Ready or not, here comes the boys from the South 

[08:33] <Xliff> Boom!

[08:33] <Xliff> Here comes the Boom! 

[08:33] <Xliff> How you like me now? 

[08:33] <Xliff> (love that song...)

[08:34] <Xliff> nighty, #perl6!

[08:34] *** Xliff is now known as Xliff_zzzz

[08:43] *** sno joined
[08:53] *** jgrabber joined
[08:58] <jgrabber> Hello, how do I create a subset of an Type that only accepts Object instances, so neither Type Objects nor .undefined Objects?

[08:58] <jgrabber> "subset Defined of Real where *.defined" does not seem to work

[09:00] <RabidGravy> In what way doesn't iit seem to work?  

[09:00] <RabidGravy> m: subset Defined of Real where *.defined; my Defined $a = Int

[09:00] <camelia> rakudo-moar 2ff5ad: OUTPUT«Type check failed in assignment to $a; expected Defined but got Int (Int)␤  in block <unit> at <tmp> line 1␤␤»

[09:00] <RabidGravy> is what I would expect

[09:00] <psch> m: subset RealReal of Real:D where * > 1.0; # is what i'd do vOv

[09:00] <camelia> rakudo-moar 2ff5ad: ( no output )

[09:01] <psch> i mean, like, if you want a subset of Real that only limits to .defined, just use Real:D in the first place

[09:01] <psch> but if you want to constrain that further, subset of *:D

[09:01] <psch> ...not literally *, though :)

[09:02] <psch> m: subset RealReal of Real:D where * > 1.0; sub f(RealReal $) { }; f Real

[09:02] <camelia> rakudo-moar 2ff5ad: OUTPUT«Constraint type check failed for parameter '<anon>'␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[09:02] <RabidGravy> Oooh when did type smileys work there?

[09:02] <psch> not sure, i dimly recall a change about the resulting type about 3 or so weeks ago..?

[09:03] <psch> that is, the type that results from smilying a type

[09:03] <RabidGravy> the advantage of the subset however is that it doesn't  require an initialiser

[09:03] <gregf_> m:  my Real $val = -0.1;

[09:03] <camelia> rakudo-moar 2ff5ad: ( no output )

[09:04] <jgrabber> I see, Real:D is the better option. I did not think of it

[09:05] <jgrabber> m: subset Defined of Real where *.defined; my Defined $a = Real

[09:05] <camelia> rakudo-moar 2ff5ad: ( no output )

[09:06] <jgrabber> why does this work though?

[09:07] <timotimo> Real is a role, maybe roles are defined?

[09:08] <timotimo> m: say Real.defined

[09:08] <camelia> rakudo-moar 2ff5ad: OUTPUT«False␤»

[09:08] <timotimo> no, they're not :\

[09:08] *** wamba joined
[09:08] <psch> m: subset DInt of Int where *.defined; my DInt $a = Int

[09:08] <camelia> rakudo-moar 2ff5ad: OUTPUT«Type check failed in assignment to $a; expected DInt but got Int (Int)␤  in block <unit> at <tmp> line 1␤␤»

[09:08] <psch> it is something about roles apparently

[09:08] <psch> m: subset DInt of Int where *.defined; my DInt $a = 1

[09:08] <camelia> rakudo-moar 2ff5ad: ( no output )

[09:10] <RabidGravy> confirmed

[09:10] <RabidGravy> m: subset DD of Stringy where *.defined; my DD $a = Stringy

[09:10] <camelia> rakudo-moar 2ff5ad: ( no output )

[09:11] <RabidGravy> BUG? FEATURE? PLACE YOUR BETS NOW!

[09:11] <timotimo> i'd say bug.

[09:11] <jgrabber> From a noob's perspectives, this seems pretty counter-intuitive since Real.defined is False

[09:12] <timotimo> yes

[09:12] <timotimo> m: my Real:D $foo = Num

[09:12] <camelia> rakudo-moar 2ff5ad: OUTPUT«Type check failed in assignment to $foo; expected Real:D but got Num (Num)␤  in block <unit> at <tmp> line 1␤␤»

[09:12] <timotimo> m: my Real:D $foo = 1

[09:12] <camelia> rakudo-moar 2ff5ad: ( no output )

[09:12] <timotimo> you can use that for the time being, it seems like

[09:12] <timotimo> it's also going to be 1000x more performant

[09:13] <jgrabber> I see, thanks!

[09:14] <gregf_> sorry for interrupting. was wondering if there was documentation these: :D :D:, :U etc

[09:14] <timotimo> those are the type smileys

[09:14] <gregf_> heh

[09:16] <gregf_> so are there ones like :p :P :o :O ?

[09:16] <timotimo> not yet

[09:16] <timotimo> but there's :_

[09:17] <timotimo> (not implemented, iirc)

[09:17] <psch> m: my Int:_ $x;

[09:17] <camelia> rakudo-moar 2ff5ad: ( no output )

[09:17] <RabidGravy> where :O auto-initialises with some unexpected value and :P with just the one you didn't want

[09:17] * psch ponders slanging that

[09:19] <jgrabber> Ok, ':D' is in the FAQ and few other places, could've checked that one. I did not see any documentation that tells you not to subset via *defined for roles - although ':D' seems way more suitable

[09:22] <gregf_> timotimo++ :)

[09:22] <gregf_> m: :_.^name

[09:22] <camelia> rakudo-moar 2ff5ad: ( no output )

[09:23] <gregf_> m: say [:_, :D, :D:, :U].map(*.^name)

[09:23] <camelia> rakudo-moar 2ff5ad: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3say [:_, :D, :D:7⏏5, :U].map(*.^name)␤    expecting any of:␤        colon pair␤»

[09:24] <hahainternet> all i have to say to ^^ is :O

[09:24] <hahainternet> ;)

[09:24] <timotimo> what is :D: supposed to do there?

[09:24] <psch> m: say [:_, :D, :D, :U].map(*.^name)

[09:24] <camelia> rakudo-moar 2ff5ad: OUTPUT«(Pair Pair Pair Pair)␤»

[09:26] <gregf_> dunno, i think i've seen :D: as well in some docs

[09:26] <psch> the second : is the invocant marker

[09:27] <timotimo> except that's only syntax inside type definitions

[09:27] <timotimo> and such

[09:27] <psch> m: my method foo(Int:D: ) { "foo" }; say foo 2

[09:27] <camelia> rakudo-moar 2ff5ad: OUTPUT«foo␤»

[09:27] <psch> right

[09:27] <psch> it's not valid anywhere else

[09:27] <gregf_> ah - ok

[09:29] <gregf_> RabidGravy++ 

[09:29] <gregf_> psch++

[09:30] *** labster left
[09:34] <hahainternet> oh so that reminds me

[09:34] <hahainternet> Inline::Go would be fun

[09:34] <hahainternet> i was reading about Inline::Perl5 again

[09:35] <hahainternet> the problem is, you can't embed perl6 in another binary yet can you, i guess i need to figure out how perl6 in perl5 gets communicated with

[09:36] <hahainternet> anyway i already implemented a semi equivalent in TCL so could be a fun project

[09:36] <timotimo> um, we load perl as a shared library

[09:36] <timotimo> so it is "in another binary"

[09:36] <timotimo> we just have a tiny helper .c file, i believe

[09:36] <hahainternet> timotimo: no i mean the opposite way around, when using perl6 from perl5

[09:36] <timotimo> ah

[09:36] <jnthn> hahainternet: I think Inline::Perl6 does that

[09:36] <jnthn> So may be worth looking at for hints

[09:36] <hahainternet> jnthn: precisely

[09:37] <hahainternet> but Go has runtime reflection, and a sufficient enough type system to permit this

[09:37] <timotimo> yeah, inline::perl6 starts a perl6 with inline::perl5 and wraps it all backwards

[09:37] <hahainternet> and i have working code that instantiates custom types at runtime and dispatches to them with reflection

[09:37] <hahainternet> aah ok

[09:37] <hahainternet> i'll just leave that out for now then, until perl6 can be linked in as a .so or what have you it's just too much effort imho

[09:37] *** wamba left
[09:37] <hahainternet> morning all btw

[09:43] *** wamba joined
[09:47] *** tbrowder joined
[09:49] <jnthn> hahainternet: I doubt you'll ever link perl6 in as a .so, unless we come up with a way to fat-pack bytecode into a .so too, and then I suspect distros will find a way to hate that. :P

[09:49] <hahainternet> jnthn: being unable to link to perl6 like you can to perl5 would be a little bit of a smell, but you know FAR more about the internals of compiler implementation than i ever will

[09:49] <hahainternet> so please don't take that as criticism :)

[09:50] <timotimo> we'll want to be able to fatpack bytecode into an executable anyway

[09:51] <jnthn> hahainternet: Well, we certainly need an embedding story, but it becomes a little more interesting to figure out given the Perl 6 compiler isn't written in C (or something else that compiles into a .so) but rather Perl 6 (which compiles to bytecode). As opposed to Perl 5 which is written in C, so it's relatively easy to see how to provide a .so to link against.

[09:52] <hahainternet> jnthn: i would love to say something interesting and erudite here, but i'm afraid i have nothing

[09:52] <hahainternet> i doubt i can help, but if i can, i'd love to

[09:52] <timotimo> when will we AOT compile bytecode? :P

[09:52] <jnthn> Maybe it'd end up being a library that links in MoarVM and provides a nice C-level API for loading/invoking the Perl 6 compiler.

[09:53] <hahainternet> doing the perl6 -> Go portions should be somewhat straightforward at least

[09:53] <hahainternet> Go's reflection makes that part not too bad

[09:53] <hahainternet> anyway i'm not ognna be starting that anytime soon, just hit me in the head last night as i tried to sleep

[09:53] <timotimo> ouch

[09:56] *** jgrabber left
[10:01] *** CIAvash left
[10:10] *** wamba left
[10:12] *** rindolf joined
[10:13] *** wamba joined
[10:17] *** TEttinger left
[10:22] *** wamba left
[10:23] <nine> Sooo...which hotel in Cluj will feature the most Perl 6 devs?

[10:23] *** wamba joined
[10:23] <DrForr> That's an excellent question.

[10:25] <DrForr> According to the wiki, Capitolina City Chic Hotel is currently in the lead for the total number of days followed by (and now I'm going to have that damn song stuck in my head) Hotel Transilvania.

[10:26] <nine> Sample size is just very, very small though :)

[10:28] <hahainternet> small sample sizes are fine

[10:28] <hahainternet> just give your confidence interval :)

[10:30] *** Zoffix joined
[10:35] *** RabidGravy left
[10:35] <DrForr> I would guess either Capitolina or Hotel Capitol, if I were looking at the map. Plenty of Pensiunes in the area, but those aren't going to appeal to a YAPC crowd, I think.

[10:36] *** z3ndrag0n left
[10:36] <DrForr> (pensiunea being the rough equivalent of a B&B)

[10:37] *** iH2O joined
[10:37] <DrForr> Nice thing is it's all in walking distance for me :)

[10:38] *** z3ndrag0n joined
[10:38] <iH2O> u live in Manhattan i gather

[10:39] <DrForr> No, but I do use that metric :)

[10:57] *** colomon joined
[11:00] *** huggable joined
[11:02] *** pmurias joined
[11:12] *** sftf left
[11:17] *** maybekoo2 left
[11:18] *** rindolf left
[11:22] *** bjz joined
[11:32] *** rindolf joined
[11:48] *** bjz left
[11:48] *** sergot joined
[11:52] <buharin> my friend?

[11:53] *** kaare_ joined
[11:55] *** grondilu joined
[11:56] <DrForr> I'm sure they're around.

[11:56] *** iH2O left
[11:58] *** skids joined
[12:00] *** skids left
[12:02] *** ggoebel116 joined
[12:04] *** pmurias left
[12:07] *** kid51 joined
[12:11] <BrokenRobot> m: try { EVAL "say 09"; CATCH { default { .^name.say }}}

[12:11] <camelia> rakudo-moar d1ebac: OUTPUT«Potential difficulties:␤    Leading 0 is not allowed. For octals, use '0o' prefix, but note that 9 is not a valid octal number␤    at /home/camelia/EVAL_0:1␤    ------> 3say 097⏏5<EOL>␤9␤»

[12:12] <BrokenRobot> Is this not catchable or am I doing it wrong?

[12:12] *** bjz joined
[12:13] <gfldex> it is a compile time exception but inside an eval. I vote for bug.

[12:13] <jnthn> Note it's only a warning

[12:13] <BrokenRobot> Oh

[12:13] <BrokenRobot> m: my $x = 09; say ++$x

[12:13] <camelia> rakudo-moar d1ebac: OUTPUT«Potential difficulties:␤    Leading 0 is not allowed. For octals, use '0o' prefix, but note that 9 is not a valid octal number␤    at <tmp>:1␤    ------> 3my $x = 097⏏5; say ++$x␤10␤»

[12:14] <jnthn> Not sure if it's actually thrown as a control exception though.

[12:14] <jnthn> Perhaps it should be if not

[12:14] <jnthn> m: try { EVAL "say 09"; CONTROL { default { .^name.say }}}

[12:14] <camelia> rakudo-moar d1ebac: OUTPUT«Potential difficulties:␤    Leading 0 is not allowed. For octals, use '0o' prefix, but note that 9 is not a valid octal number␤    at /home/camelia/EVAL_0:1␤    ------> 3say 097⏏5<EOL>␤9␤»

[12:14] <gfldex> m: try { my $a = '0' ~ (0..9).pick; EVAL "say $a"; CATCH { default { .^name.say }}}

[12:14] <camelia> rakudo-moar d1ebac: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤EVAL is a very dangerous function!!! (use MONKEY-SEE-NO-EVAL to override,␤but only if you're VERY sure your data contains no injection attacks)␤at <tmp>:1␤------> 3my $a = '0' ~ (0..9).pick; EVAL "say…»

[12:14] <jnthn> Yeah, seems not

[12:14] <BrokenRobot> It's a X::Worry::P5::LeadingZero is X::Worry::P5

[12:15] <BrokenRobot> Um... it there a way to capture warnings? :)

[12:15] <jnthn> Those thrown by warn, yes...with a CONTROL block and match on CX::Warn.

[12:15] <jnthn> But for the "potential difficulties" spat out by the compiler, I'm not so sure.

[12:15] <gfldex> m: try { quietly EVAL "say $a"; CATCH { default { .^name.say }}}

[12:15] <camelia> rakudo-moar d1ebac: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Variable '$a' is not declared␤at <tmp>:1␤------> 3try { quietly EVAL "say 7⏏5$a"; CATCH { default { .^name.say }}}␤»

[12:16] <gfldex> m: try { EVAL "quietly say $a"; CATCH { default { .^name.say }}}

[12:16] <camelia> rakudo-moar d1ebac: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Variable '$a' is not declared␤at <tmp>:1␤------> 3try { EVAL "quietly say 7⏏5$a"; CATCH { default { .^name.say }}}␤»

[12:16] <BrokenRobot> k, I'll use is_run from roast for it.

[12:21] <BrokenRobot> hmhmhmh this kinda sucks. I didn't realize it was just a warning so this warning is LTA:

[12:21] <BrokenRobot> m: say 09

[12:21] <camelia> rakudo-moar d1ebac: OUTPUT«Potential difficulties:␤    Leading 0 is not allowed. For octals, use '0o' prefix, but note that 9 is not a valid octal number␤    at <tmp>:1␤    ------> 3say 097⏏5<EOL>␤9␤»

[12:21] <BrokenRobot> Since leading 0 is allowed

[12:21] <BrokenRobot> m: quietly say 09

[12:21] <camelia> rakudo-moar d1ebac: OUTPUT«Potential difficulties:␤    Leading 0 is not allowed. For octals, use '0o' prefix, but note that 9 is not a valid octal number␤    at <tmp>:1␤    ------> 3quietly say 097⏏5<EOL>␤9␤»

[12:21] <BrokenRobot> m: say quietly 09

[12:21] <camelia> rakudo-moar d1ebac: OUTPUT«Potential difficulties:␤    Leading 0 is not allowed. For octals, use '0o' prefix, but note that 9 is not a valid octal number␤    at <tmp>:1␤    ------> 3say quietly 097⏏5<EOL>␤9␤»

[12:22] * BrokenRobot shrugs

[12:23] <gfldex> m: say &quietly.WHAT

[12:23] <camelia> rakudo-moar d1ebac: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    quietly used at line 1␤␤»

[12:23] <gfldex> no wonder it doesn't work!

[12:24] <BrokenRobot> It does work

[12:24] <BrokenRobot> m: say Nil + Nil

[12:24] <camelia> rakudo-moar d1ebac: OUTPUT«Use of Nil in numeric context  in block <unit> at <tmp> line 1␤Use of Nil in numeric context  in block <unit> at <tmp> line 1␤0␤»

[12:24] <BrokenRobot> m: quietly say Nil + Nil

[12:24] <camelia> rakudo-moar d1ebac: OUTPUT«0␤»

[12:25] <gfldex> you may have missed a joke there

[12:25] * BrokenRobot doesn't see a joke

[12:26] *** flaviusb left
[12:30] *** ggoebel116 left
[12:36] *** obfusk joined
[12:39] *** Guest94483 is now known as nemo

[12:43] *** rgrinberg joined
[12:44] *** harmil left
[12:49] *** RabidGravy joined
[12:50] *** AlexDaniel joined
[12:53] <tbrowder> gfldex: I will file with RT the pod issues you mentioned yesterday if you have no objections.  You can add or subtract after you see them.  

[12:53] <gfldex> tbrowder: thanks a lot

[12:53] <tbrowder> you're welcome!

[12:54] *** AlexDaniel left
[12:54] *** AlexDaniel joined
[12:56] <[Coke]> tbrowder: do you find you get better help on questions on email vs. irc?

[12:56] <dalek> doc: 1267395 | (Wenzel P. P. Peppmeyer)++ | html/js/main.js:

[12:56] <dalek> doc: #__debug__ will display the viewport size in the bottom left corner

[12:56] <dalek> doc: review: https://github.com/perl6/doc/commit/1267395713

[12:56] <dalek> doc: d0f5aaf | (Wenzel P. P. Peppmeyer)++ | doc/Type/Capture.pod6:

[12:56] <dalek> doc: Merge branch 'master' of https://github.com/perl6/doc

[12:56] <dalek> doc: review: https://github.com/perl6/doc/commit/d0f5aaf5ed

[13:00] <tbrowder> [Coke]:  I do in some cases, especially non-time-sensitive or transient ones. I have asked some things here (of specific folks in some cases) that don't get answered and I'm reluctant to ping again. Whereas, with e-mail, I have a better record of queries and I feel they will usually be answered at some point.

[13:01] <dalek> doc: e742369 | (Wenzel P. P. Peppmeyer)++ | CONTRIBUTING.md:

[13:01] <dalek> doc: tell contributors about new #__debug__ feature

[13:01] <dalek> doc: review: https://github.com/perl6/doc/commit/e742369390

[13:02] <tbrowder> [Coke]: BTW, I have successfully gotten RT to recognize 'tbrowder' (thanks to help from RT support), but the issue you assigned to me doesn't show up on my top ten list.

[13:03] <tbrowder> [Coke]: Can you fix that or do I need to make another RT support request?

[13:04] <[Coke]> tbrowder: as I said before, I can't help you with that.

[13:05] <dalek> doc: a8ebdc2 | (Wenzel P. P. Peppmeyer)++ | html/js/main.js:

[13:05] <dalek> doc: external links may throw an exception, catch those

[13:05] <dalek> doc: review: https://github.com/perl6/doc/commit/a8ebdc2ec4

[13:05] <[Coke]> when you go to the ticket, do you see it assigned to you there?

[13:05] *** travis-ci joined
[13:05] <travis-ci> Doc build failed. Wenzel P. P. Peppmeyer 'Merge branch 'master' of https://github.com/perl6/doc'

[13:05] <travis-ci> https://travis-ci.org/perl6/doc/builds/143038280 https://github.com/perl6/doc/compare/3e694bf07676...d0f5aaf5ed80

[13:05] *** travis-ci left
[13:05] *** ggoebel116 joined
[13:05] *** ggoebel116 left
[13:05] <[Coke]> gah, empty catch block!

[13:07] <dalek> doc: 675d073 | (Zoffix Znet)++ | html/js/main.js:

[13:07] <dalek> doc: Remove trailing whitespace

[13:07] <dalek> doc: review: https://github.com/perl6/doc/commit/675d073dfd

[13:08] *** bjz_ joined
[13:09] *** bjz left
[13:09] <tbrowder> [Coke]: Sorry, I missed the first response (that's another reason I like e-mail for those kinds of things).  I asked RT support.

[13:09] *** travis-ci joined
[13:09] <travis-ci> Doc build failed. Wenzel P. P. Peppmeyer 'tell contributors about new #__debug__ feature'

[13:09] <travis-ci> https://travis-ci.org/perl6/doc/builds/143039824 https://github.com/perl6/doc/compare/d0f5aaf5ed80...e742369390b4

[13:09] *** travis-ci left
[13:10] <tbrowder> [Coke]: I do see it assigned to me on the ticket.

[13:11] *** iH2O joined
[13:13] <dalek> doc: 907e647 | (Wenzel P. P. Peppmeyer)++ | html/js/main.js:

[13:13] <dalek> doc: fix trailing WS

[13:13] <dalek> doc: review: https://github.com/perl6/doc/commit/907e6473d4

[13:13] <dalek> doc: ad9e1be | (Wenzel P. P. Peppmeyer)++ | /:

[13:13] <dalek> doc: Merge branch 'master' of https://github.com/perl6/doc

[13:13] <dalek> doc: review: https://github.com/perl6/doc/commit/ad9e1be7a5

[13:13] <dalek> doc: c891da2 | (Wenzel P. P. Peppmeyer)++ | html/js/main.js:

[13:13] <dalek> doc: Revert "fix trailing WS"

[13:13] *** T-Bone joined
[13:13] <dalek> doc: 

[13:13] <dalek> doc: This reverts commit 907e6473d4f915ef94c4f48290d37dc211c0f732.

[13:13] <dalek> doc: review: https://github.com/perl6/doc/commit/c891da2384

[13:13] <dalek> doc: f12e45a | (Wenzel P. P. Peppmeyer)++ | html/js/main.js:

[13:13] <dalek> doc: explain empty catch block

[13:13] <dalek> doc: review: https://github.com/perl6/doc/commit/f12e45a961

[13:13] *** travis-ci joined
[13:13] <travis-ci> Doc build failed. Wenzel P. P. Peppmeyer 'external links may throw an exception, catch those'

[13:13] <travis-ci> https://travis-ci.org/perl6/doc/builds/143040928 https://github.com/perl6/doc/compare/e742369390b4...a8ebdc2ec4ee

[13:13] *** travis-ci left
[13:16] *** eone joined
[13:19] <AlexDaniel> Zoffix: not sure if there's any need to interrupt someone's workflow, people can solve such things themselves (as the git log shows)

[13:21] <gfldex> AlexDaniel: thanks for complaining for me :)

[13:21] <gfldex> i should outsource all my complaining. Would save tons of time. :D

[13:22] <AlexDaniel> gfldex: by the way, this revert was unnecessary, as now the problem is there again

[13:24] *** T-Bone left
[13:24] *** eone left
[13:27] <gfldex> t/trailing_whitespace.t works locally for me and I can't push changes. travis might be confused

[13:27] *** travis-ci joined
[13:27] <travis-ci> Doc build passed. Zoffix Znet 'Remove trailing whitespace'

[13:27] <travis-ci> https://travis-ci.org/perl6/doc/builds/143041596 https://github.com/perl6/doc/compare/a8ebdc2ec4ee...675d073dfd44

[13:27] *** travis-ci left
[13:28] * gfldex goes to study git hooks

[13:28] *** skids joined
[13:30] <BrokenRobot> [Coke]: on this ticket you commented that it can be closed with tests because the current behaviour matches the one requested, but it doesn't. The ticket said REPL must print "^D" when it's pressed before exiting, but we don't do that. Should I write the tests for current behaviour or do we need to add the ^D? https://rt.perl.org/Ticket/Display.html?id=70297#txn-1399431

[13:31] <BrokenRobot> And I don't get a newline either on bleed rakudo on Debian (via ssh)

[13:32] <[Coke]> tbrowder: are you sure the expansion icon next to the list is open?

[13:33] <[Coke]> BrokenRobot: I think it's answering the spirit of the request. also, see Faye's update on jul 18, 2015.

[13:33] <[Coke]> masak's around somewhere, he can say if he's happy.

[13:34] <[Coke]> tbrowder: looks like the icon has to be pointing up for the box to be open.

[13:34] <BrokenRobot> k, I'll leave this one alone for now.

[13:37] <grondilu> what's the P5 equivalent of the rw trait for sub parameters?

[13:38] <[Coke]> it's not "is rw" ?

[13:38] <BrokenRobot> grondilu: $_[0] = 42

[13:38] <[Coke]> er, I read that backwards

[13:38] <BrokenRobot> As in, @_ is alias

[13:38] <AlexDaniel> gfldex: I'm not sure what git magic you have done locally, but main.js line 93 is still there

[13:39] <AlexDaniel> gfldex: you can't push because there's nothing to push or because git complains about something?

[13:40] *** RabidGravy left
[13:40] <grondilu> that works indeed

[13:43] <dalek> doc: d4097fe | (Wenzel P. P. Peppmeyer)++ | html/css/style.css:

[13:43] <dalek> doc: CSS changes depeding on https://github.com/perl6/Pod-To-HTML/commit/2a7449325b3098bda2f31065dbea0ec87b589b26

[13:43] <dalek> doc: 

[13:43] <dalek> doc: this will fix

[13:43] <dalek> doc:     - fixes duplicate anchors from X<> around/inside a =head

[13:43] <dalek> doc:     - fixes missing links on toc entries for =head4 and higher

[13:43] <dalek> doc: 

[13:43] <dalek> doc: The layout has changed and may trigger a popular vote.

[13:43] <dalek> doc: review: https://github.com/perl6/doc/commit/d4097fe3a7

[13:43] <dalek> doc: a8199d5 | (Wenzel P. P. Peppmeyer)++ | html/js/main.js:

[13:43] <dalek> doc: fix trailing WS

[13:43] <dalek> doc: review: https://github.com/perl6/doc/commit/a8199d5cc7

[13:44] <gfldex> AlexDaniel: there was confusion on my side, should be fixed with the push I just did

[13:44] <AlexDaniel> gfldex: by the way, what editor do you use?

[13:44] <gfldex> AlexDaniel: about magic: "The pre-push hook runs during git push, after the remote refs have been updated but before any objects have been transferred. It receives the name and location of the remote as parameters, and a list of to-be-updated refs through stdin. You can use it to validate a set of ref updates before a push occurs (a non-zero exit code will abort the push)."

[13:44] <gfldex> vim

[13:46] <gfldex> AlexDaniel: and failed tests produce a non-zero exit code :)

[13:47] *** ptolemarch joined
[13:50] <AlexDaniel> gfldex: is it possible to set up client-side hooks automatically for everyone who clones the repo?

[13:50] <gfldex> AlexDaniel: i don't thinks so. .git is in .gitignore :)

[13:50] <AlexDaniel> gfldex: last time I asked the same question about git filters I was told no, because that's pretty much remote code execution…

[13:51] <AlexDaniel> gfldex: and we can't have server-side hooks on github, so…

[13:51] *** xinming_ left
[13:51] <gfldex> however, one could write a t/is-there-a-git-hook.t

[13:51] <AlexDaniel> this implies that contributors run tests :D

[13:52] <gfldex> we do have travis to catch the lazy (like me)

[13:52] *** xinming joined
[13:52] <AlexDaniel> gfldex: anyway, surely we can have instructions on how to setup a hook in the README

[13:54] <gfldex> AlexDaniel: nonono you got that wrong. README is the file folk read _after_ they caused problems. :)

[13:55] *** dj_goku left
[13:55] *** iH2O left
[13:55] <DrForr> No, they post to stackoverflow and do something else.

[13:57] <AlexDaniel> m: min(+'a', +'a').say

[13:57] <camelia> rakudo-moar d1ebac: OUTPUT«Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5a' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[13:57] <AlexDaniel> bisect: min(+'a', +'a').say

[13:57] <bisectable> AlexDaniel: on both starting points the exit code is 1 and the output is identical as well

[13:58] <AlexDaniel> bisect: good=2015.10 min(+'a', +'a').say

[13:58] <bisectable> AlexDaniel: exit code is 1 on both starting points, bisecting by using the output

[13:58] <bisectable> AlexDaniel: (2015-12-05) https://github.com/rakudo/rakudo/commit/3cb6ae9

[13:58] *** RabidGravy joined
[13:58] *** Actualeyes joined
[13:59] <AlexDaniel> bisect: good=2015.10 try { min(+‘a’, +‘a’).say; CATCH { exit 1 } }

[13:59] <bisectable> AlexDaniel: on both starting points the exit code is 1 and the output is identical as well

[14:03] *** harmil joined
[14:04] <gfldex> the ToC changes are now on the docs.perl6.org, if you got odd colours please shift-click the reload button

[14:05] *** travis-ci joined
[14:05] <travis-ci> Doc build passed. Wenzel P. P. Peppmeyer 'fix trailing WS'

[14:05] <travis-ci> https://travis-ci.org/perl6/doc/builds/143051072 https://github.com/perl6/doc/compare/f12e45a961db...a8199d5cc7bb

[14:05] *** travis-ci left
[14:08] <BrokenRobot> gfldex: did you say you'll fix JS later or was the show/hide toc feature removed? ( https://github.com/perl6/doc/issues/217 )

[14:09] *** harmil left
[14:12] <BrokenRobot> The table stuff is a definite -1 from me. Not only semantically (as discussed last night), but visually too. Can't see what roles/classes the thing inherits from and the bumble-bee row coloring is distracting.

[14:13] <dalek> doc: 02696a6 | (Wenzel P. P. Peppmeyer)++ | html/css/style.css:

[14:13] <dalek> doc: hide heading numbers in ToC. They are not displayed in the main text

[14:13] <dalek> doc: anyways and thus provide little meaning to the reader

[14:13] <dalek> doc: review: https://github.com/perl6/doc/commit/02696a6a89

[14:13] <dalek> doc: f8d1d0b | (Wenzel P. P. Peppmeyer)++ | html/css/style.css:

[14:13] <dalek> doc: indent heading > 1 in ToC

[14:13] <dalek> doc: review: https://github.com/perl6/doc/commit/f8d1d0b484

[14:13] <gfldex> BrokenRobot: i will fix that now

[14:13] <BrokenRobot> gfldex++

[14:14] <gfldex> and i will display the heading numbering in #__debug__ so to make it easy to spot heading blurps

[14:26] <AlexDaniel> gfldex: again, why does it have to be a table?

[14:27] *** rgrinberg left
[14:27] <gfldex> AlexDaniel: it does not have to be a table. If you don't like it, feel free to change it. Disabeling a column is quite easy though because ... it's a column.

[14:29] <BrokenRobot> gfldex: but which column do we need to disable?

[14:29] <BrokenRobot> gfldex: e.g. this <ol> looks exactly like the <table> I see on docs site right now: https://jsfiddle.net/usgsstyf/

[14:30] <gfldex> please stop

[14:30] *** ggoebel116 joined
[14:31] <BrokenRobot> gfldex: I was just trying to understand what problem you were attempting to solve. There's no point in saying "feel free to cahnge it" if I don't know why you changed it.

[14:31] <mst> gfldex: people are asking questions because they don't understand yet, not to criticise you

[14:31] <BrokenRobot> Exactly.

[14:32] <gfldex> table#TOC td.toc-number { display: none; }

[14:34] <BrokenRobot> The ol { list-style: none; } does the same thing. It can also do more, like change to roman numerals or use bullets instead of numbered things.

[14:34] <sammers> m: my %dog = name => 'Elly', bark => -> $name { "$name says woof" }; say %dog<bark>(%dog<name>);

[14:34] <camelia> rakudo-moar d1ebac: OUTPUT«Elly says woof␤»

[14:36] <BrokenRobot> m: my %dog = name => 'Elly', bark => *.fmt: "%s says woof"; say %dog<bark>(%dog<name>);

[14:36] <camelia> rakudo-moar d1ebac: OUTPUT«Elly says woof␤»

[14:36] <BrokenRobot> \o/

[14:36] <sammers> is there a way to reference a hash value from itself? like in that code object example.

[14:37] <vytas> how can one access http://rakudo.org/rt/easy mentioned in http://rakudo.org/tickets/ ?

[14:37] <sammers> like to reference name inside the code object without passing it to the sub

[14:37] <BrokenRobot> sammers: is the value a sub? You can probably use &?ROUTINE

[14:37] <vytas> agh it actually has button to proceed

[14:37] <AlexDaniel> gfldex: I'm sorry, I'm just trying to understand your thought process - if it doesn't have to be a table, please take my question to mean “why did you decided to make it a table?” - I'm just trying to get my head around what's going on

[14:38] *** sufrostico joined
[14:38] <gfldex> BrokenRobot: the whole idea of proper heading numbering is to show the same numbers in the ToC then on he headings in the main body (we don't do that yet). To do so we have to do the rendering of numbers by hand. The benefit of auto numbering of <ol> is fairly slim in this case.

[14:39] <BrokenRobot> We can easily add that to main body with the `counter` CSS property

[14:39] <gfldex> further adding a 3rd column to a <ol> is possible, but i can think of better ways to spend my time

[14:40] <gfldex> as I wrote 2 times already, if you don't like it, change it

[14:40] <BrokenRobot> vytas: yeah, it's a bit bugged at the moment.

[14:41] <mst> gfldex: people were trying to understand why you liked it, not try to change it - please stop being defensive, nobody was attacking you :(

[14:42] *** masak joined
[14:42] <BrokenRobot> gfldex: my changing it would be simply reverting your work. I don't know what you're attempting to do with your work. And when I asked, you're throwing a tantrum making me feel like an asshole.

[14:42] <masak> hiya, #perl6

[14:42] *** buharin left
[14:42] <mst> BrokenRobot: dude, please chill, there's no need to escalate the misunderstanding

[14:43] <dalek> doc: 14271c9 | (Wenzel P. P. Peppmeyer)++ | html/ (2 files):

[14:43] <dalek> doc: fix ToC toggle buttom

[14:43] <dalek> doc: review: https://github.com/perl6/doc/commit/14271c9551

[14:44] <gfldex> BrokenRobot: please read the commit msg on https://github.com/perl6/Pod-To-HTML/commit/2a7449325b3098bda2f31065dbea0ec87b589b26

[14:45] *** user9 left
[14:49] <sammers> m: my %dog = name => 'Elly', bark => { "%dog<name> says woof" }; say %dog<bark>();

[14:49] <camelia> rakudo-moar d1ebac: OUTPUT«Elly says woof␤»

[14:50] <BrokenRobot> body { counter-reset: h1 } h1 { counter-reset: h2 } h2 { counter-reset: h3 } h1:before { counter-increment: h1; content: counter(h1) ". " } h2:before {counter-increment: h2; content: counter(h1) "." counter(h2) ". "} 

[14:50] <BrokenRobot> But whatever... I'm not looking to make another enemy in #perl6, so I'll just move on

[14:51] <perlpilot> "another enemy"?!?

[14:51] <gregf_> sammers: (my %dog = name => "Elly", bark => -> $name { "$name says woof" })<bark>.("Elly"); # because there can be only one 'name'?

[14:51] <sammers> BrokenRobot, I guess we can just self-reference inside the hash code object.

[14:52] <BrokenRobot> gfldex: and sorry for the "reverting your work" comment, I meant that I did not understand any of the changed, not that I was threatening to undo anything.

[14:52] <sammers> gregf_ this seems to work: my %dog = name => 'Elly', bark => { "%dog<name> says woof" }; say %dog<bark>();

[14:52] <gfldex> "my changing it would be simply reverting your work" he threatened to destroy my work _in_ public. I tried to move the discussion out of the public eye, what he ignored. If you ask me, he is correct with the assumtion that he makes himself enemies.

[14:52] <mst> gfldex: nobody was threatening to destroy your work

[14:53] <mst> gfldex: please stop, step back, and assume good faith

[14:53] <gregf_> cmon guys its not about indiviuals.. *points to Perl6*

[14:53] <gfldex> what exactly does that phrase mean then?

[14:53] <mst> gfldex: that was in response to your defensive "if you don't like it, change it", when he was trying to understand what you did

[14:53] <mst> his point was that, not understanding, the only change he could make would be to revert it, and since obviously that would be silly, he wanted to try and understand what you did

[14:54] <mst> gfldex: notice that's EXACTLY what he said - he didn't understand, and was trying to

[14:54] <mst> I'm not sure how you jumped from "you're telling me to change it but I don't understand enough to change it except by reversion, so I'd like to understand" to that being a threat

[14:55] <gfldex> i understand what it was in respose to, but there is a big difference between to change the html-elements in use and to "imply revert your work"

[14:55] <gfldex> i am pissed and i have very good reason to do so

[14:55] <mst> the point was completely clear to me, I'm not sure why you read a threat into it rather than helping him to understand :(

[14:56] <mst> no, your getting pissy is what derailed this, when other people wanted to understand your work better :(

[14:56] <RabidGravy> gah, ponies needed

[14:56] <gfldex> mst: fine you try hard to understand him. Would you be so kind the spend the same energy in understanding me?

[14:56] <mst> gfldex: I am doing so. that's why I asked him to calm down above as well.

[14:56] <mst> nobody was attacking you. nobody was threatening your work.

[14:56] <mst> two people cared about your work enough to try and understand it better

[14:56] <mst> that's a compliment in open source, usually

[14:57] * perlpilot hugs gfldex and BrokenRobot

[14:57] <parabolize> sammers: you've got state and functionality with that dog object. Wouldn't it be easier to use a class?

[14:57] <mst> I don't know which projects you've been on when people would actually just delete somebody else's work without understanding it, but in my experience, this is not such a project

[14:57] *** dogbert17 joined
[14:58] <sammers> parabolize, just experimenting with code objects.

[14:58] <mst> gfldex: if you step back, assume good faith, and re-read people's words with the assumption they just wanted to understand your work, I hope their words will be clearer to you

[14:59] <mst> I think the issue here is that nobody else realised you'd take "the only change I could make right not would be to revert" as a threat rather than a statement of not understanding yet

[14:59] <sammers> parabolize, what other containers can we use to pass around code objects?

[14:59] *** mohae_ joined
[14:59] <dogbert17> o/ #perl6

[14:59] <perlpilot> sammers: What containers do you think won't hold code objects?  :)

[15:00] <perlpilot> dogbert17: greetings!

[15:00] *** huggable left
[15:00] <dogbert17> hi perlpilot

[15:00] <mst> gfldex: does the misunderstanding make a little more sense, given that context?

[15:00] <dogbert17> it's time for todays stupid question

[15:00] <perlpilot> dogbert17: 42  (the stupid answer)

[15:00] <parabolize> gregf_: the smileys are documented in Signatures: https://docs.perl6.org/type/Signature#Constraining_Defined_and_Undefined_Values and tested in roast/S{12-attributes,06-parameters,04-declarations}/smiley.t

[15:01] <dogbert17> in src/core/Capture.pm there are several methods, e.g. 'kv' and 'values' which I cant se if I do 'say Capture.^methods(:local)'. Why?

[15:01] <dogbert17> m: say Capture.^methods(:local)

[15:01] <camelia> rakudo-moar d1ebac: OUTPUT«(new from-args BUILD hash list elems Capture FLATTENABLE_LIST FLATTENABLE_HASH WHICH Method+{<anon|59337488>}.new Method+{<anon|59337488>}.new Method+{<anon|59337488>}.new Str gist perl Bool Numeric Method+{<anon|59337488>}.new Method+{<anon|59337488>}.new…»

[15:01] *** mohae left
[15:02] <gfldex> BrokenRobot: my appology, my private message was eaten by my inability to type

[15:02] <sammers> perlpilot, so I am pretty new to p6

[15:02] <BrokenRobot> gfldex: I did receive your request to apologize and I apologized above

[15:03] <perlpilot> m: Capture.^methods.map(*.name).say;    # What do you mean, you can't see them?  ;)

[15:03] <camelia> rakudo-moar d1ebac: OUTPUT«(new from-args BUILD hash list elems Capture FLATTENABLE_LIST FLATTENABLE_HASH WHICH AT-KEY AT-POS EXISTS-KEY Str gist perl Bool Numeric keys kv values pairs antipairs)␤»

[15:04] <dogbert17> now I see them :) 

[15:04] <perlpilot> dogbert17: Oops, I forgot the :local, but it does the same.    I think it's that methods don't always stringify to their names well (or at all)

[15:05] <perlpilot> dogbert17: especially multimethods

[15:05] <dogbert17> perlpilot: so chances are that the methods I'm looking for are one of the Method+{<anon|59337488>}.new?

[15:05] <perlpilot> dogbert17: yep

[15:06] <perlpilot> dogbert17: caveat lector though, that's just my guess right now.

[15:06] <dogbert17> perlpilot: aha, so I should use your variant instead: Capture.^methods.map(*.name).say

[15:07] <perlpilot> dogbert17: If you're interested in their names, you should ask them for their name, yes.  :)

[15:07] *** ssotka joined
[15:07] <dogbert17> perlpilot: will do, thx for explaining

[15:11] *** rgrinberg joined
[15:12] <perlpilot> dogbert17: btw, .^methods gives you back objects.  You can call .^methods on those objects to see what else you can do besides "name"  (though, again, some of them will be anonymous methods or something without a name)

[15:14] <BrokenRobot> ^methodsception

[15:14] <Xliff_zzzz> Whoop!

[15:14] <Xliff_zzzz> \0/

[15:14] *** Xliff_zzzz is now known as Xliff

[15:15] *** kurahaupo joined
[15:15] <Xliff> I have Perl6 module to read Winamp Media Library files.

[15:15] <Xliff> I need to write simple test cases and off to the ecosystem it will go.

[15:15] *** harmil joined
[15:15] <Xliff> Prolly this weekend.

[15:16] <Xliff> And now.... MOAR SLEEP!

[15:16] *** Xliff is now known as Xliff_zzz

[15:16] <gregf_> parabolize: cheers

[15:18] *** khw joined
[15:18] <dalek> doc: c999f29 | (Jan-Olof Hendig)++ | doc/Type/Capture.pod6:

[15:18] <dalek> doc: Added docs for Capture.Capture

[15:18] <dalek> doc: review: https://github.com/perl6/doc/commit/c999f2917a

[15:33] *** yaboo joined
[15:34] <yaboo> is there microsoft sql server DB access for perl6 yet?

[15:34] <yaboo> is there microsoft sql server DB access for perl6 yet?

[15:34] <dogbert17> Ok, so I have concocted some docs for Capture.keys. Does it look ok to you? https://gist.github.com/dogbert17/3f7c351762eefea9b97eb4746ffe4603

[15:35] <[Coke]> yaboo: it'd probably be here if so: https://github.com/perl6/DBIish - and I don't see it yet.

[15:35] <[Coke]> DBIsh readme has mojibake in it.

[15:35] <[Coke]> (near very bottom)

[15:36] <yaboo> I saw DBIish... and didn't see SQL server as an option. I'm not familiar with mojibake.

[15:36] <perlpilot> dogbert17: the all-caps CAPTURE looks like it might be meta-syntax, but it's not clear  (i.e.,  someone might think that CAPTURE is a Perl 6 thing and try  CAPTURE.keys literally)

[15:37] <dogbert17> perlpilot: I could remove that

[15:37] <dogbert17> perhaps it should be removed from the entire document...

[15:38] <[Coke]> perlpilot: that's an issue with USAGE everywhere.

[15:38] <[Coke]> Not worth bugging this commit over.

[15:38] <[Coke]> USAGE syntax is meant to be intuitive, but isn't documented.

[15:40] <dalek> DBIish: 77ad8b2 | (Zoffix Znet)++ | README.pod:

[15:40] <dalek> DBIish: Fix mojibake

[15:40] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/77ad8b223c

[15:40] <dalek> DBIish: 010b74a | (Zoffix Znet)++ | README.pod:

[15:40] <dalek> DBIish: Merge pull request #70 from zoffixznet/master

[15:40] <dalek> DBIish: 

[15:40] <perlpilot> Aye.

[15:40] <gfldex> dogbert17: maybe use «$capture.keys» to indicate this is the variable part?

[15:40] <dalek> DBIish: Fix mojibake

[15:40] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/010b74ae28

[15:40] <BrokenRobot> Weird. The online editor had 'Commit' button greyed out when I tried to edit the original

[15:40] <dogbert17> gfldex: in the usage part or the example?

[15:41] *** yaboo left
[15:41] <gfldex> dogbert17: i would do it in the Usage part too, for anyone who made it that far it should be cleare what a scalar container is for

[15:43] <gfldex> dogbert17: in examples i like to use variable names to indicate the type that is stored in them. The examples tend to be fairly abstract and the variable name isn't reused elsewhere anyways.

[15:44] <dogbert17> gfldex: could you reload the page, I've made some updates

[15:44] <[Coke]> btw, I have been using text-based chat since 1985 or so, and still find it very easy to assume someone's intent. I try to follow mst's advice, and assume the best.

[15:44] *** iH2O joined
[15:44] <[Coke]> (assume incorrectly, I meant to say! stupid text-based chat.)

[15:44] * [Coke] heads out to lunch.

[15:44] <gfldex> dogbert17: i would write it the same way

[15:45] <dogbert17> gfldex: then I'll commit it this way :)

[15:45] <gfldex> dogbert17: also, if I need a speaking name I stick the type in the declaration. e.g. my Int $left; my Int $right;

[15:46] <dogbert17> gfldex: do you think I should write 'my Capture $capture ...'?

[15:48] <gfldex> dogbert17: that would be redundant. Every time you have redundant info in a doc, the reader might spend time to figure out what that redundancy is for. If there is a good reason for that redundancy, it needs explaining words. So a lack of need of those words is a good indicator.

[15:49] <dogbert17> gfldex: point taken

[15:51] <dalek> doc: 83209fc | (Jan-Olof Hendig)++ | doc/Type/Capture.pod6:

[15:51] <dalek> doc: Added docs for Capture.keys. gfldex++ perlpilot++

[15:51] <dalek> doc: review: https://github.com/perl6/doc/commit/83209fcbd6

[15:52] *** canopus left
[15:52] *** dj_goku joined
[15:57] *** dj_goku left
[15:58] *** canopus joined
[15:59] *** Guest_84845 joined
[15:59] <Guest_84845> Allah is doing

[16:00] <Guest_84845> sun is not doing allah is doing

[16:00] <Guest_84845> moon is not doing Allah is doing

[16:00] <Guest_84845> stars are not doing Allah is doing

[16:00] <tadzik> I haven't see that spam in a while

[16:00] <BrokenRobot> Who is he doing?

[16:00] <Guest_84845> planets are not doing Allah is doing

[16:00] <Guest_84845> galaxies are not doing Allah is doing

[16:01] <BrokenRobot> Oh, this is exciting.

[16:01] <tadzik> Guest_84845: what about universes?

[16:01] <BrokenRobot> That's it? I was hoping we'd get to at least the multiverse!

[16:02] <tadzik> BrokenRobot: yeah, that's anticlimatic :(

[16:02] * BrokenRobot nods

[16:02] <mst> ooooh, an allahbot

[16:02] <Guest_84845> oceans are not doing Allah is doing

[16:02] *** cdg joined
[16:02] <mst> if nobody minds, I'm curious to see if the full lifecycle's the same as the other one I've seen

[16:03] <tadzik> oh, we downgraded to earth stuff again

[16:03] <BrokenRobot> :)

[16:03] <Guest_84845> mountains are not doing Allah is doing

[16:03] <Guest_84845> trees are not doing Allah is doing

[16:03] <mst> parents next, I think

[16:03] <Guest_84845> mom is not doing Allah is doing

[16:03] <BrokenRobot> lol

[16:04] <Guest_84845> dad is not doing Allah is doing

[16:04] <mst> now, capitalism time

[16:04] <Guest_84845> boss is not doing Allah is doing

[16:04] <tadzik> that's cheating

[16:04] <BrokenRobot> ...capitalism? :D

[16:04] <mst> watch the next few :D

[16:04] <tadzik> I'm no geologist, but afaik mountains aren't doing anything at all

[16:04] <Guest_84845> job is not doing Allah is doing

[16:04] <tadzik> so allah just gets to fill his cv with no-work?

[16:04] <tadzik> blasphemy

[16:05] <Guest_84845> dollar is not doing Allah is doing

[16:05] <Guest_84845> degree is not doing Allah is doing

[16:05] <Guest_84845> medicine is not doing Allah is doing

[16:05] <tadzik> phah, that reminds me of Tim Minchin

[16:06] <Guest_84845> customers are not doing Allah is doing

[16:06] <Guest_84845> you can not get a job without the permission of allah

[16:06] <mst> and now, a brief segue into asking god nicely to be allowed to do things

[16:06] <iH2O> troll bot alert!

[16:06] <mst> iH2O: what do you mean 'alert', it's not like we didn't notice

[16:06] <Guest_84845> you can not get married without the permission of allah

[16:06] <gregf_> o_O

[16:07] <gregf_> Guest_84845: now please automate this in Perl6

[16:07] <Guest_84845> nobody can get angry at you without the permission of allah

[16:07] <tadzik> troll bot? So apparently we can't cross a bridge without the permission of allah either

[16:07] <Guest_84845> light is not doing Allah is doing

[16:07] <Guest_84845> fan is not doing Allah is doing

[16:07] *** ChanServ sets mode: +o jnthn

[16:08] <BrokenRobot> Huh, why does he give permission to get angry? Damn, and all this time he seemed like a nice guy. Doing things for everyone else.

[16:08] <mst> jnthn: hang on

[16:08] *** Guest_84845 was kicked by jnthn (ALLAH IS DOING NOTHING, BOW TO THE ALMIGHTY JNTHN))
[16:08] <gregf_> he? bots are gender neutral :|

[16:08] <mst> ...

[16:08] <jnthn> mst: oh, oops

[16:08] <mst> 17:02 < mst> if nobody minds, I'm curious to see if the full lifecycle's the  same as the other one I've seen

[16:08] <tadzik> how can you tell who they identify as

[16:08] <tadzik> don't be insensitive

[16:08] <mst> jnthn: YOU HAVE RUINED MY ANTHROPOLOGY STUDY

[16:09] <BrokenRobot> :D

[16:09] <jnthn> Aww :P

[16:09] <mst> now somebody's going to have to listen to all of that again

[16:09] <jnthn> heh

[16:09] *** ChanServ sets mode: -o jnthn

[16:09] <mst> goddamnit, I've been waiting weeks for that opportunity, and I asked the channel nicely, and nobody objected

[16:10] <gregf_> sure, run this *runs* loop { <sun moon stars planets galaxies oceans mountains trees mom dad boss job dollar degree medicine>.map: ->$who { say "$who is not doing God is doing"; sleep 1; } }

[16:10] <masak> Guest_84845 is not doing, at least not in #perl6

[16:10] <mst> but, no, you can't be bothered to actuallt read the scrollback before breaking out the hobnail boots

[16:10] <jnthn> mst: I didn't actually read, I just saw the darn thing and was like "argh" :P

[16:10] * mst SULKS

[16:10] <tadzik> masak: #rekt :P

[16:10] <dalek> doc: d190696 | (Jan-Olof Hendig)++ | doc/Type/Capture.pod6:

[16:10] <dalek> doc: Added docs for Capture.values

[16:10] <dalek> doc: review: https://github.com/perl6/doc/commit/d190696a06

[16:10] * masak pats mst, *pat pat*

[16:10] <mst> jnthn: yeah. that's not how you +o :P

[16:11] <masak> jnthn: I think this might be the first documented case of #perl6 over-kicking :P

[16:11] <jnthn> Tough.

[16:11] <mst> I should not be lecturing *other* people on showing restraint as an op, FFS

[16:11] <mst> masak: I always expected that to be me :D

[16:11] <masak> mst: guess you'll just have to write your own Allah bot :P :P :P

[16:12] <dalek> doc: f49b9fb | (Wenzel P. P. Peppmeyer)++ | / (2 files):

[16:12] <dalek> doc: teach #__debug__ to show heading numbers

[16:12] <dalek> doc: review: https://github.com/perl6/doc/commit/f49b9fb1df

[16:12] <mst> I don't want my own, I want to find out if the lifecycle's standard

[16:12] <mst> it was so far, but the last one I saw disconnected and reconnected part way through

[16:12] <mst> and I was wondering if that was structural or just a bug

[16:12] *** iH2O left
[16:12] <masak> disconnected part way through is not doing, Allah is doing

[16:13] <mst> LOL

[16:15] <masak> you can not get disconnected without the permission of Allah

[16:16] <gfldex> masak: do you indicate that telcos are not the work of the devil?

[16:18] <masak> who is this Allah anyway? I mean I've heard the name before, but is he like a celebrity or something?

[16:19] <gfldex> sorry can't help you, never met that fellow myself

[16:19] *** freezerburnv joined
[16:20] <BrokenRobot> He's the guy who flew to heaven on a flying horse. It was in all the newspapers.

[16:22] *** FROGGS joined
[16:25] * masak thought that was Elton John

[16:26] <masak> also, if your horse can fly, flying to heaven is not such a big achievement

[16:33] *** sufrostico left
[16:34] *** sufrostico joined
[16:35] <ugexe> there is already an "Air Horse ONE"

[16:35] <timotimo> m: say '^'.ord.base(16)

[16:35] <camelia> rakudo-moar d1ebac: OUTPUT«5E␤»

[16:36] <tbrowder> gfldex: see RT bugs #128569 and #128570

[16:36] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128569

[16:36] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128570

[16:37] <tbrowder> [Coke] I tried to take ownership of those bugs but am not allowed.

[16:37] *** Possum left
[16:38] * gfldex .oO( I totally owned that bug! )

[16:41] *** cognominal joined
[16:43] *** Guest_84845 joined
[16:43] *** Guest_84845 left
[16:50] *** neilhwatson joined
[16:52] *** setty1 joined
[16:53] <tbrowder> gfldex: do you have an account on RT?

[16:54] <tbrowder> gfldex: if you do, then take ownership if you wish,

[16:55] *** sno left
[16:57] *** abraxxa left
[16:59] *** Possum joined
[17:02] *** addison joined
[17:03] *** dakkar left
[17:05] <dalek> doc: 747c2a9 | (Zoffix Znet)++ | assets/sass/style.scss:

[17:05] <dalek> doc: Add warning about html/css/style.css being a generated file

[17:05] <dalek> doc: 

[17:05] <dalek> doc: Closes #662

[17:05] <dalek> doc: review: https://github.com/perl6/doc/commit/747c2a9530

[17:05] <dalek> doc: 71fa4e6 | (Zoffix Znet)++ | / (2 files):

[17:05] <dalek> doc: Move style changed introduced into auto-generated style.css to style.scss

[17:05] <dalek> doc: 

[17:05] <dalek> doc: This moves work added in commits

[17:05] <dalek> doc: https://github.com/perl6/doc/commit/d4097fe3a79001335cbc7b289bf576e737e23f93

[17:05] <dalek> doc: https://github.com/perl6/doc/commit/02696a6a89a72ecd4cb95bf8a9077727796e31cd

[17:05] <dalek> doc: https://github.com/perl6/doc/commit/f8d1d0b4844e3556a18ce0bbcbe147998d5638f0

[17:05] <dalek> doc: https://github.com/perl6/doc/commit/14271c9551538a2bdbc3b56007ef147d50a6fa3f

[17:05] <dalek> doc: review: https://github.com/perl6/doc/commit/71fa4e6982

[17:08] <dalek> doc: a8a84db | (Zoffix Znet)++ | / (2 files):

[17:08] <dalek> doc: Improve auto-generation warning

[17:08] <dalek> doc: 

[17:08] <dalek> doc: Make it clear that it's html/css/style.css that is auto-generated,

[17:08] <dalek> doc: as the message has to appear in assets/sass/style.scss too

[17:08] <dalek> doc: and using "THIS FILE" is confusing.

[17:08] <dalek> doc: review: https://github.com/perl6/doc/commit/a8a84db643

[17:13] <gfldex> BrokenRobot: `make css` or `make assets` would be nice to have.

[17:13] * BrokenRobot nods

[17:13] <BrokenRobot> I'm completely unfamiliar with Makefiles tho

[17:14] <BrokenRobot> The dev app generates them automatically, if you have the extra modules installed.

[17:18] *** addison left
[17:20] *** freezerburnv left
[17:23] *** firstdayonthejob joined
[17:24] <[Coke]> jnthn++ #kicking that bot

[17:25] <[Coke]> tbrowder: what does it say in the upper left hand side for you? For me I get "Logged in as coke"

[17:26] <[Coke]> What's the reason not to just regen the files every build?

[17:27] <BrokenRobot> [Coke]: the doc CSS? Because many contributors are contributing docs, not styles, and the extra prereqs for style generations can be avoided by including the generated styles. I know dogbert17 was having issues installing one of sass generating prereqs on debian

[17:28] <[Coke]> ok. I tend to prefer not to have generated stuff checked in, but probably won't be able to help with a debian problem, so I'll try to let it go. :)

[17:30] <BrokenRobot> Oh, it was Ubuntu not Debian: https://rt.cpan.org/Public/Bug/Display.html?id=115287

[17:30] <tbrowder> [Coke]: It shows my email, not my user name. I've tried to change all the settings I can find, and I login with my username (not email), but nothing so far has worked.

[17:32] *** user9 joined
[17:36] *** neilhwatson left
[17:37] *** buharin joined
[17:43] *** rgrinberg left
[17:44] *** maybekoo2 joined
[17:51] *** zakharyas left
[17:52] *** dj_goku joined
[17:52] *** dj_goku left
[17:52] *** dj_goku joined
[17:58] *** dj_goku left
[18:02] *** sufrostico left
[18:04] *** sufrostico joined
[18:13] *** sufrostico left
[18:14] *** cdg left
[18:18] *** rgrinberg joined
[18:26] *** spider-mario joined
[18:28] *** girafe joined
[18:30] <gfldex> BrokenRobot: i do have problems on debian as well, META::Cpan debian package is to old

[18:32] <BrokenRobot> I'm unsure which module requires that.

[18:32] <gfldex> quite a few

[18:32] <BrokenRobot> The alternative to CSS::Sass is having ruby-sass (at least in Debian) available

[18:32] <gfldex> and a test in Mojolicious::Plugin::AssetPack hangs (investigating right now)

[18:33] <BrokenRobot> And AssetPack uses it if CSS::Sass is not installed

[18:34] *** labster joined
[18:36] <BrokenRobot> Doesn't hang for me on Jessie. 

[18:37] <BrokenRobot> And ::AssetPack is not needed; one can execute sass -w assets/sass/style.scss:html/css/style.css  

[18:37] <BrokenRobot> And that'll watch the sass file for changes and process it. 

[18:44] *** zakharyas joined
[18:44] *** sortiz joined
[18:44] <sortiz> \o #perl6

[18:46] <dalek> doc: 31b2b2e | (Zoffix Znet)++ | .gitignore:

[18:46] <dalek> doc: Ignore extraneous files generated by `sass` command

[18:46] <dalek> doc: review: https://github.com/perl6/doc/commit/31b2b2ea13

[18:47] <dalek> doc: f6d3a24 | (Zoffix Znet)++ | CONTRIBUTING.md:

[18:47] <dalek> doc: Document alternative SASS processing method

[18:47] <dalek> doc: 

[18:47] <dalek> doc: Using `sass` command

[18:47] <dalek> doc: review: https://github.com/perl6/doc/commit/f6d3a2448e

[18:49] <AlexDaniel> yaaaay!

[18:49] <AlexDaniel> BrokenRobot++

[18:50] <AlexDaniel> BrokenRobot: hmm, it looks like the output is a little bit different

[18:52] <AlexDaniel> BrokenRobot: https://gist.github.com/AlexDaniel/99fd82366a23de14eb335a955bca3b9a

[18:58] *** Actualeyes left
[19:00] *** huggable joined
[19:08] *** darutoko left
[19:14] *** buharin left
[19:18] *** lostinfog joined
[19:19] *** jonas1 left
[19:22] *** sno joined
[19:24] *** telex left
[19:26] *** telex joined
[19:32] *** domidumont left
[19:33] <BrokenRobot> Any idea why this is giving me "Undeclared routine: is_run_repl"? https://gist.github.com/zoffixznet/672e8bb4de280e012765a3875786ca02

[19:34] <timotimo> BrokenRobot: that lib path is probably wrong?

[19:35] <timotimo> isn't that already inside t/ somewhere?

[19:35] *** neilhwatson joined
[19:36] <BrokenRobot> timotimo: the bath is right when `make spectest`. In this case I'm including teh correct path with -I, and it can find the module, since the error is about the sub name and not missing modulke

[19:36] <BrokenRobot> *path :)

[19:36] <timotimo> hum.

[19:36] <timotimo> fair enough?

[19:36] *** addison joined
[19:36] <BrokenRobot> I'm just not following why the is export isn't taking

[19:37] <timotimo> right

[19:37] <timotimo> dunno :(

[19:37] <BrokenRobot> ( full file https://github.com/perl6/roast/blob/master/packages/Test/Util.pm )

[19:41] <BrokenRobot> m: sub put { say "meow" }; ::CORE('&put')(42)

[19:41] <camelia> rakudo-moar d1ebac: OUTPUT«Cannot invoke this object (REPR: Uninstantiable; CORE)␤  in block <unit> at <tmp> line 1␤␤»

[19:42] <BrokenRobot> What was the way to do this? I want to call the core 'put' sub

[19:42] <BrokenRobot> m: sub put { say "meow" }; &CORE::put(42)

[19:42] <camelia> rakudo-moar d1ebac: OUTPUT«42␤»

[19:42] * moritz not fast enough

[19:45] <timotimo> yeah, you were calling CORE instead :)

[19:46] <BrokenRobot> Oh, damn

[19:46] <BrokenRobot> timotimo++ the <t/spec/packages> was actually the issue :) along with a separate roast checkout I had it in my rakudo repo in t/spec with the OLD version of Test::Util and it was using that

[19:47] <timotimo> yay

[19:48] <BrokenRobot> Which reminds me of something I promised to fix before Christmas and didn't

[19:48] <BrokenRobot> m: use lib <foo bar>; say $*REPO; say $*REPO.next-repo

[19:48] <camelia> rakudo-moar d1ebac: OUTPUT«file#/home/camelia/bar␤file#/home/camelia/foo␤»

[19:48] <BrokenRobot> The <foo> should be first one looked in since it's the first one the programmer provided

[19:48] <BrokenRobot> Too late now I guess?

[19:48] *** profan joined
[19:48] * BrokenRobot & # relocating

[19:53] *** dj_goku joined
[19:53] *** dj_goku left
[19:53] *** dj_goku joined
[19:59] *** dj_goku left
[20:04] *** lue joined
[20:06] *** ShimmerFairy left
[20:13] *** kaare_ left
[20:23] *** TEttinger joined
[20:24] *** wamba left
[20:25] *** lue is now known as ShimmerFairy

[20:28] *** labster left
[20:29] *** domidumont joined
[20:30] *** rgrinberg left
[20:31] *** dwarring joined
[20:37] *** Technaton joined
[20:41] *** neilhwatson left
[20:41] *** labster joined
[20:42] <dalek> doc: 2d46e62 | (Jan-Olof Hendig)++ | doc/Type/Capture.pod6:

[20:42] <dalek> doc: Added docs for Capture.kv

[20:42] <dalek> doc: review: https://github.com/perl6/doc/commit/2d46e62106

[20:45] <Xliff_zzz> m: use DateTime::Format

[20:45] <camelia> rakudo-moar d1ebac: OUTPUT«===SORRY!===␤Could not find DateTime::Format at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUn…»

[20:46] <moritz> star-m: use DateTime::Format

[20:46] <camelia> star-m 2016.04: OUTPUT«===SORRY!===␤Could not find DateTime::Format at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/star-2016.04/share/perl6/site␤    /home/camelia/star-2016.04/share/perl6/vendor␤    /home/camelia/star-2016.04/share/perl6␤    CompUnit::Repositor…»

[20:46] <moritz> m: DateTime::Format

[20:46] <camelia> rakudo-moar d1ebac: OUTPUT«Could not find symbol '&Format'␤  in block <unit> at <tmp> line 1␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[20:46] <Xliff_zzz> *sob*

[20:50] <grondilu> star-m: use DateTime

[20:50] <camelia> star-m 2016.04: OUTPUT«===SORRY!===␤DateTime is a builtin type. You can use it without loading a module.␤»

[20:51] <grondilu> lol

[20:51] <grondilu> that sounded a bit condescending :)

[20:51] <lizmat> grondilu: do you have a suggestion for better phrasing ?

[20:52] <grondilu> Well, for a start, no error message should ever use the second person.

[20:52] *** dj_goku joined
[20:52] *** itaipu joined
[20:53] <grondilu> DateTime is a builtin type, not an external module.

[20:53] <grondilu> ^quote this

[20:53] *** itaipu left
[20:54] *** fhorck joined
[20:54] *** FROGGS left
[20:54] <grondilu> though now that I think about it, there is the "did you mean xxxx?" after a suspected typo.  And that is fine.

[20:54] *** wamba joined
[20:55] *** yqt joined
[21:00] *** bjz_ left
[21:03] *** ShimmerFairy left
[21:03] *** ShimmerFairy joined
[21:04] *** skids left
[21:04] *** skids joined
[21:05] *** rgrinberg joined
[21:06] <moritz> I don't find it condescending, actually

[21:06] *** zakharyas left
[21:06] <moritz> but then I'm not an Englishman :-)

[21:07] <dalek> doc: 231c503 | (Wenzel P. P. Peppmeyer)++ | / (2 files):

[21:07] <dalek> doc: lighten background greyness for <pre> to increase contrast

[21:07] <dalek> doc: review: https://github.com/perl6/doc/commit/231c503bca

[21:07] <dalek> doc: c070180 | (Wenzel P. P. Peppmeyer)++ | / (3 files):

[21:07] <dalek> doc: darken comments in <pre> for more contrast

[21:07] <dalek> doc: review: https://github.com/perl6/doc/commit/c070180813

[21:07] <dalek> doc: b14a620 | (Wenzel P. P. Peppmeyer)++ | / (2 files):

[21:07] <dalek> doc: Copy CSS around cause a casualty. The hide button is now where it

[21:07] <dalek> doc: belongs to.

[21:07] <dalek> doc: review: https://github.com/perl6/doc/commit/b14a620adb

[21:07] *** domidumont left
[21:08] *** ShimmerFairy left
[21:09] *** skids left
[21:09] *** ShimmerFairy joined
[21:10] *** as left
[21:22] *** jjido joined
[21:23] *** setty1 left
[21:23] *** _dolmen_ joined
[21:26] *** TimToady left
[21:28] *** TimToady joined
[21:38] <lizmat> https://github.com/rakudo/rakudo/commit/29a1107390   # grondilu++

[21:40] *** jjido left
[21:40] <timotimo> that makes sense

[21:41] *** wamba left
[21:43] *** lostinfog left
[22:01] *** rindolf left
[22:07] *** RabidGravy left
[22:11] *** rindolf joined
[22:17] <AlexDaniel> hm, since when do we have two camelias on the home page

[22:19] <timotimo> i only see one

[22:25] <dalek> doc: 274a88b | thundergnat++ | doc/Language/operators.pod6:

[22:25] <dalek> doc:  gcd should be divisor not denominator

[22:25] <dalek> doc: 

[22:25] <dalek> doc: 3 justifications:

[22:25] <dalek> doc: 1) It coerces each argument to Int. Ints always have a "denominator" of 1 but may have larger common divisors.

[22:25] <dalek> doc: 2) The announcement  from when it was added says it is greatest common divisor. https://github.com/rakudo/rakudo/blob/8cbb1efd1d84fd57298e0e0813b64d8dd37140ba/docs/announce/2011.05#L21

[22:25] <dalek> doc: 3) The actual code that implements the op says it is greatest common divisor. https://github.com/perl6/nqp/blob/27e99d4a587103b1cb23c0b0715eda5827a94ea5/3rdparty/libtommath/bn_mp_gcd.c#L18

[22:25] <dalek> doc: review: https://github.com/perl6/doc/commit/274a88b2a3

[22:32] *** jack_rabbit joined
[22:41] *** spider-mario left
[22:43] *** cognominal left
[22:49] *** firstdayonthejob left
[22:57] <AlexDaniel> timotimo: I mean here: https://docs.perl6.org/

[22:58] <timotimo> ah

[22:58] <timotimo> that doesn't seem so bad?

[22:59] <AlexDaniel> timotimo: if that was shadow, than it should be slightly below it… :D

[22:59] *** _dolmen_ left
[22:59] <AlexDaniel> it's not too bad, it's just that we didn't have it before

[23:00] *** huggable left
[23:00] <gfldex> it is, as soon as you hide the ToC. Then a fading Camelia starts to compete with text about the readers mind.

[23:00] <timotimo> huh?

[23:00] *** grondilu left
[23:00] *** zacts joined
[23:01] <timotimo> oh, indeed

[23:01] <gfldex> depends a bit on the page ofc. Some pages don't have text span that far.

[23:02] <gfldex> given that the ToC will wander to the left on screens with many pixels, shady camelia may have to go

[23:02] <AlexDaniel> yeah, it is a little bit weird

[23:02] <gfldex> timotimo: do you have the powers to update Pod::To::HTML on docs.perl6.org ?

[23:03] <timotimo> oof. i may have that

[23:04] *** john51 left
[23:04] *** john51 joined
[23:04] <gfldex> timotimo: please do so. I don't want to bug the same person twice every day.

[23:05] <timotimo> let me first get a bite of something edible

[23:05] <gfldex> please keep up your strength

[23:06] <timotimo> my body is very insistent on me eating all the damn time

[23:07] *** zacts left
[23:12] *** avenj left
[23:14] *** rindolf left
[23:16] *** AlexDaniel left
[23:17] <gfldex> i wonder if there should be links to presentation videos on perl6.org

[23:17] *** zacts joined
[23:17] *** xinming left
[23:19] *** xinming joined
[23:20] <MasterDuke> gfldex: https://perl6.org/documentation/, under "Miscellaneous sources"

[23:21] *** avenj joined
[23:21] <MasterDuke> but i think it would be good to call them out a bit more

[23:21] <gfldex> it's just so much stuff on that site.

[23:21] <MasterDuke> maybe their own section instead of just falling under misc sources?

[23:22] <gfldex> i looked for them under Community

[23:22] <gfldex> there is a Screencast section

[23:31] *** john51_ joined
[23:33] *** john51 left
[23:36] *** BenGoldberg joined
[23:44] *** AlexDaniel joined
[23:47] *** maybekoo2 left
[23:47] *** yqt left
[23:58] <timotimo> sorry, gfldex, i'll have to delay this until after i had sleep

[23:59] <timotimo> feel free to remind me again tomorrow

[23:59] <Zoffix> timotimo, is sudo needed to do it?

