[00:01] *** lizmat left
[00:02] *** lizmat joined
[00:05] *** AlexDaniel left
[00:09] *** abruanese joined
[00:17] *** Herby_ joined
[00:17] <Herby_> Evening, everyone!

[00:20] <Herby_> o/

[00:21] <timotimo> hey herby

[00:22] <Herby_> How goes it?

[00:23] <timotimo> enh, could be better. how about you?

[00:24] <Herby_> I can't complain

[00:28] <timotimo> i'm watching my friend play Atelier Sophie, it's kind of soothing

[00:31] *** yqt left
[00:32] *** kurahaupo left
[00:36] <Herby_> can't say I've heard of that one, looks like a PS4 game?

[00:37] <Herby_> I'm getting annoyed at 7zip... keeps giving me a CRC error

[00:37] <Herby_> looks like i'll be going back to WinRAR

[00:37] <timotimo> yeah, it's the latest etnry in a long series which started on the PS2 (or maybe on the ps1 in japan only)

[00:37] <timotimo> well, that means the file you've got is b0rked, wouldn't it?

[00:38] <Herby_> that's what google is telling me but WinRAR handles it just fine

[00:38] <timotimo> oh, but atelier sophie is also out on the ps3 still, and i think also on the ps vita

[00:38] <Herby_> just uninstalled 7zip and reinstalled winrar, works fine

[00:38] <Herby_> who knows

[00:38] <timotimo> that sounds very strange, indeed

[00:39] <geekosaur> I have heard that elsewhere as well

[00:39] <geekosaur> dunno if this is an actual problem with 7zip but it sounds suspicious

[00:39] <timotimo> well, could be a bug in 7zip's crc implementation, but how hard is it to screw up CRC?

[00:39] <timotimo> CRC itself is super simple

[00:40] <Herby_> yeah. I was wanting to give 7zip a shot since WinRAR doesn't like being called from a perl6 script

[00:40] <timotimo> (on top of that, it's extremely vulnerable against attackers)

[00:40] *** raoulvdberge left
[00:42] <timotimo> i just checked, the first atelier game was out on the PS1, but also on dreamcast and ported to windows at some point, too

[00:44] <Herby_> Zoffix: When is WeatherApp part 3 coming?

[00:47] <Herby_> timotimo: you got any perl 6 projects you're working on?

[00:49] <[Coke]> .

[00:52] *** mohae left
[00:54] *** mohae joined
[00:56] <timotimo> nah :\

[00:56] <Zoffix> Herby_, it already came out: http://perl6.party/post/Perl-6-Hands-On-Workshop--Weatherapp--Part-3

[00:57] <Zoffix> Herby_, and parts 4 and 5... um, some time after next weekend, likely.

[00:57] <Herby_> doh, i can't count. meant part 4

[00:57] <Zoffix> I took a break last week and next week I'm learning how to release Rakudo. And any free time left over I'm spending on Assasins Creed 2 :")

[00:59] <Zoffix> and IRC::Client, I guess. Got tired of writing.

[00:59] <timotimo> ugh. i need something simple to contribute to moar, nqp or rakudo before the release, otherwise i think i have nothing in for this month's release :(

[01:02] *** rurban joined
[01:02] *** rurban left
[01:03] *** kalkin- left
[01:03] *** kalkin-_ joined
[01:23] *** TEttinger joined
[01:29] *** Yeeb joined
[01:34] <BenGoldberg> Say Zoffix, is there an IRC::Client plugin to count karma?

[01:42] *** abruanese left
[01:45] *** ilbot3 left
[01:47] *** ilbot3 joined
[02:02] *** maybekoo2 left
[02:17] <Zoffix> Karma is just a fairy tale invention :) Get on with the times.

[02:18] <Zoffix> And if you were planning on writing your own, you may wanna wait a couple of weeks, until new version of IRC::Client ships

[02:21] *** vibha joined
[02:22] *** huggable left
[02:22] *** huggable joined
[02:23] *** bjz left
[02:32] *** noganex joined
[02:35] *** kid51 left
[02:35] *** noganex_ left
[02:48] *** wbill joined
[02:55] *** mohae_ joined
[02:59] *** mohae left
[03:03] *** bjz joined
[03:08] *** skids joined
[03:09] *** khw left
[03:22] <Hotkeys> What's up perlers

[03:23] *** wbill left
[03:32] *** wbill joined
[03:36] *** ggoebel116 joined
[03:41] *** zacts left
[03:47] <Zoffix> Midnight :) That's what :)

[03:47] <Zoffix> \o

[03:48] <Herby_> \o/

[03:49] *** wbill left
[03:55] *** zacts joined
[03:59] *** wbill joined
[04:03] <teatime> trying to cobble together a USB<->3.3vTTL converter because I can't find one

[04:04] <teatime> failing, mostly

[04:04] *** xtreak left
[04:05] *** rurban joined
[04:05] *** rurban left
[04:06] <skids> I usually use old IDE cables for such things.  Just plug the components in and twist the bus wires together as needed.  Then cover in glue after it works.

[04:07] <teatime> lack of wire is not my issue

[04:07] <skids> I just cannot stand soldering.

[04:07] <teatime> I do a lot of soldering.  a good iron makes a huge difference.

[04:08] <teatime> I currently use a Hakko FX-888D

[04:08] <teatime> also, a flux pen.

[04:15] *** Cabanossi left
[04:17] *** Cabanossi joined
[04:17] *** wbill left
[04:21] *** Herby_ left
[04:29] *** Zero_Dogg left
[04:30] *** Zero_Dogg joined
[04:30] *** Zero_Dogg left
[04:30] *** Zero_Dogg joined
[04:48] *** kurahaupo joined
[04:49] *** ssotka joined
[04:54] *** mohae_ left
[04:54] *** mohae joined
[05:12] *** kurahaupo left
[05:22] *** wamba joined
[06:00] *** CIAvash joined
[06:07] *** rurban joined
[06:07] *** rurban left
[06:08] * teatime just sent an email to the local national park service volunteer coordinator, offering my body and soul for the summer and fall.

[06:13] *** rindolf joined
[06:22] *** huggable left
[06:22] *** huggable joined
[06:43] *** jack_rabbit joined
[06:44] *** skids left
[06:54] *** rurban joined
[06:59] *** rurban_ joined
[07:00] *** darutoko joined
[07:01] *** firstdayonthejob joined
[07:15] *** jack_rabbit left
[07:44] *** domidumont joined
[07:45] *** ssotka left
[07:48] *** domidumont left
[07:48] *** domidumont joined
[08:03] *** rindolf left
[08:09] *** jjido joined
[08:12] *** rindolf joined
[08:23] *** rurban1 joined
[08:24] *** rurban left
[08:28] *** maybekoo2 joined
[08:36] *** araujo__ joined
[08:40] *** araujo_ left
[08:41] *** RabidGravy joined
[08:43] *** domidumont left
[08:54] <llfourn> teatime: have you played firewatch?

[08:58] <teatime> negative.

[09:09] *** rurban1 left
[09:09] *** rurban joined
[09:13] *** cognominal joined
[09:18] *** Actualeyes joined
[09:18] *** Emeric joined
[09:19] *** Emeric left
[09:19] *** Emeric joined
[09:24] *** spider-mario joined
[09:36] *** jjido left
[09:58] *** AlexDaniel joined
[10:00] <RabidGravy> are there any database engines that use or allow mult-character quoting characters for identifiers?

[10:01] <RabidGravy> e.g. something like "select * from <<Some Funky Table Name>>"

[10:08] *** ChoHag joined
[10:09] <AlexDaniel> RabidGravy: just out of curiosity, why?

[10:11] <RabidGravy> pertains to how generalised I make the quoting mechanism in the "thing for generating SQL that is loosely inspired by SQL::Abstract"

[10:11] <AlexDaniel> ahh

[10:13] *** Yeeb left
[10:14] *** FROGGS joined
[10:14] <FROGGS> o/

[10:16] <RabidGravy> harr

[10:17] *** cognominal left
[10:22] *** huggable left
[10:22] *** huggable joined
[10:25] *** mr-foobar joined
[10:25] *** TEttinger left
[10:27] *** CIAvash left
[10:34] *** labster left
[10:34] <FROGGS> nine: do you have any idea about RT #128332/#128156? I want to look into it this evening

[10:34] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128332

[10:34] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=128156

[10:39] <nine> FROGGS: I have a golfed test case (posted it onto 128156) but no idea yet. I have a hard time finding time and energy to concentrate on these issues lately :/

[10:39] *** domidumont joined
[10:39] *** BenGoldberg left
[10:42] *** CIAvash joined
[10:45] <FROGGS> nine: k

[11:04] *** mr-foobar left
[11:05] *** mr-foobar joined
[11:14] *** cognominal joined
[11:30] *** kid51 joined
[11:31] *** mohae_ joined
[11:34] *** mohae left
[11:36] *** _mg_ joined
[11:37] *** tbrowder joined
[11:40] <tbrowder> hi p6 folks

[11:40] <tbrowder> Zoffix: nice job with is-approx!

[11:45] *** rurban left
[11:49] *** cognominal left
[11:53] *** rurban joined
[11:59] *** iH2O joined
[12:04] *** tbrowder left
[12:07] *** nebuchadnezzar left
[12:09] *** cognominal joined
[12:20] *** mr-foobar left
[12:22] <AlexDaniel> can somebody make http://irc.perl6.org/ redirect non-permanent?

[12:23] <moritz> why?

[12:23] <moritz> (and yes, I can)

[12:24] <AlexDaniel> moritz: because this redirect is not permanent

[12:24] <moritz> no?

[12:24] <AlexDaniel> are you saying that this link will ALWAYS redirect http://irclog.perlgeek.de/perl6/2016-06-12 ?

[12:24] <moritz> it redirects permanently https://irclog.perlgeek.de/perl6/today

[12:25] <moritz> which then does a non-permenant redirect to the current day

[12:25] <AlexDaniel> ahhhhhhh

[12:25] <AlexDaniel> didn't notice it

[12:25] <AlexDaniel> sorry

[12:25] <moritz> no problem

[12:27] *** maybekoo2 left
[12:30] *** iH2O left
[12:30] *** rurban1 joined
[12:31] *** rurban left
[12:36] <dalek> doc: 01b0e82 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/ (3 files):

[12:36] <dalek> doc: More link fixes

[12:36] <dalek> doc: review: https://github.com/perl6/doc/commit/01b0e8260c

[12:36] <dalek> doc: d0f46cc | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/ (6 files):

[12:36] <dalek> doc: Less permanent redirections (mostly http → https)

[12:36] <dalek> doc: review: https://github.com/perl6/doc/commit/d0f46cc7d7

[12:36] <dalek> doc: 1582aee | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/unicode_entry.pod:

[12:36] <dalek> doc: Newlines in links do not work very well

[12:36] <dalek> doc: 

[12:36] <dalek> doc: I think that it is a bug that has to be fixed, but right now

[12:36] <dalek> doc: we can just fix the links.

[12:36] <dalek> doc: review: https://github.com/perl6/doc/commit/1582aeec66

[12:39] *** rurban joined
[12:40] *** rurban1 left
[12:40] *** kalkin-_ left
[12:41] *** rurban1 joined
[12:42] *** kalkin- joined
[12:43] *** rurban left
[12:44] *** domidumont left
[12:45] *** rkr joined
[12:48] *** _mg_ left
[12:48] *** jjido joined
[12:51] *** araujo_ joined
[12:52] *** araujo_ left
[12:53] *** jjido left
[12:53] *** araujo_ joined
[12:54] *** araujo__ left
[12:55] *** araujo_ left
[12:55] *** araujo_ joined
[12:57] *** rkr left
[12:57] *** araujo_ left
[12:58] *** araujo_ joined
[12:59] *** tbrowder joined
[13:02] <AlexDaniel> moritz: actually, thinking about it again. Does it mean that links to irc.perl6.org have to be changed to perlgeek.de?

[13:03] *** tbrowder left
[13:03] <moritz> AlexDaniel: there is no must or "have to"

[13:04] <moritz> just because some tool tells you to reduce redirects doesn't mean you have to.

[13:04] <lizmat> I think irc.perl6.org is a nice name to keep in docs

[13:04] <AlexDaniel> it's not the tool, it's your redirect code

[13:04] <lizmat> afk&

[13:04] <moritz> it's a level of indirection that we can chose to keep

[13:05] <AlexDaniel> yes, and I like it. Let's keep it

[13:05] <AlexDaniel> but 301 is probably not the best choice then

[13:07] *** rurban1 left
[13:11] <moritz> why not?

[13:12] <masak> m: class A { has $.foo }; class B is A { has $.foo }; say B.new(:foo("OH HAI"))

[13:12] <camelia> rakudo-moar 4179bd: OUTPUT«B.new(foo => "OH HAI", foo => "OH HAI")␤»

[13:12] <masak> was there a way in Perl 6 to set those two $!foo attributes to different things in .new ?

[13:12] <moritz> yes, and iirc we lost it while switching to the nom branch

[13:13] <masak> a-ha

[13:13] <moritz> B.new(:foo('Oh B'), :A{:foo('Oh A')})

[13:13] <moritz> or something like that

[13:13] *** abruanese joined
[13:13] <masak> not that I mind it much; I've never felt the need for such a feature, really

[13:14] *** rurban joined
[13:15] *** KillBill joined
[13:15] <moritz> oh, without the leading color

[13:15] <moritz> my $pet = Dog.new( :name<Fido>, Animal{ :blood<warm>, :legs(4) } )

[13:16] <moritz> from S12

[13:16] <moritz> S12:867

[13:16] <synopsebot6> Link: http://design.perl6.org/S12.html#line_867

[13:19] *** awwaiid left
[13:21] <dalek> doc: bed1b4d | (Zoffix Znet)++ | doc/Language/testing.pod:

[13:21] <dalek> doc: Make variable names consistent

[13:21] <dalek> doc: review: https://github.com/perl6/doc/commit/bed1b4da96

[13:23] <dalek> doc: ca0c9a9 | (Zoffix Znet)++ | doc/Language/testing.pod:

[13:23] <dalek> doc: Attempt to fix formula rendering

[13:23] <dalek> doc: 

[13:23] <dalek> doc: Used U+2063 at the start of each line

[13:23] <dalek> doc: review: https://github.com/perl6/doc/commit/ca0c9a9abe

[13:25] *** nebuchadnezzar joined
[13:27] <dalek> doc: fe38f82 | (Zoffix Znet)++ | doc/Language/testing.pod:

[13:27] <dalek> doc: use =begin =end pod blocks instead of invisible unicode

[13:27] <dalek> doc: review: https://github.com/perl6/doc/commit/fe38f829d4

[13:28] *** KillBill left
[13:31] <AlexDaniel> moritz: because it is semantically different. If you want to keep this URL because *maybe* we will change it later, then it does not sound like 301

[13:32] <AlexDaniel> it's not “moved” and not “permanently” :)

[13:33] <Zoffix> It really just affects browser/proxy caches

[13:35] <Zoffix> A 301 will be cached and new attempt to fetch irc.perl6.org will fetch from the geek url right away, while a 302 will try the irc.perl6.org again

[13:35] <moritz> which is why it's a 301 right now

[13:35] <moritz> so that the performance penalty of the redirect is payed only once

[13:36] <moritz> but I do see the point that "moved" doesn't quite match the semantics

[13:36] <Zoffix> Too bad there isn't a "moved for a long time" code :P

[13:37] <Zoffix> .oO( https://xkcd.com/927/ )

[13:37] *** Zoffix left
[13:37] <moritz> anyway, changed to 302 for now

[13:38] <mst> moritz: this seems like a micro-optimisation to me and I'd be more comfortable with 302, I think

[13:38] <mst> heh

[13:38] <mst> moritz++ # JFDIing while I'm still trying to express my opinion

[13:38] *** xdbr joined
[13:39] <RabidGravy> is there any term-llike thingy that will be expanded on the lhs of a pair so e.g

[13:39] <RabidGravy> m: say (pi => "PIE").perl

[13:39] <camelia> rakudo-moar 4179bd: OUTPUT«:pi("PIE")␤»

[13:40] <RabidGravy> expands pi rather than treating it as something to straight stringified

[13:41] <lizmat> m: say Pair.new(pi,"PIE")

[13:41] <camelia> rakudo-moar 4179bd: OUTPUT«3.14159265358979 => PIE␤»

[13:41] <AlexDaniel> m: say (+(pi) => "PIE").perl

[13:41] <camelia> rakudo-moar 4179bd: OUTPUT«3.14159265358979e0 => "PIE"␤»

[13:41] <psch> m: say {pi}() => 2

[13:41] <camelia> rakudo-moar 4179bd: OUTPUT«3.14159265358979 => 2␤»

[13:41] <AlexDaniel> ah

[13:41] <AlexDaniel> m: say ((pi) => "PIE").perl

[13:41] <camelia> rakudo-moar 4179bd: OUTPUT«3.14159265358979e0 => "PIE"␤»

[13:42] <psch> yeah, parens are probably the most comprehensible solution

[13:42] <lizmat> yeah, agree

[13:42] <AlexDaniel> actually I'd prefer Pair.new :)

[13:42] <mst> I prefer the parens version, but I wonder if that's a perl5 aesthetic

[13:43] <mst> m: say (pi ,=> "PIE").perl

[13:43] <camelia> rakudo-moar 4179bd: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix > instead␤at <tmp>:1␤------> 3say (pi ,=>7⏏5 "PIE").perl␤»

[13:43] <RabidGravy> AlexDaniel, you appear to like typing more than is natural

[13:43] <mst> damnit

[13:43] <mst> so, how would I add a ,=> operator? :LD

[13:43] <psch> mst: what does that do?  infix:['=>'] without LHS auto-quoting?

[13:43] <mst> psch: that's what it does in perl5, yes

[13:44] <AlexDaniel> RabidGravy: actually I'm just worried about people reading that piece of code. I think that the first reaction to these parens will be “wtf?”

[13:44] <psch> m: sub infix:[',=>'] { $^a => $^b }; say pi ,=> 'PIE'

[13:44] <camelia> rakudo-moar 4179bd: OUTPUT«3.14159265358979 => PIE␤»

[13:44] <psch> mst: easy as... well

[13:44] <mst> <3

[13:45] <mst> I am going to make so many people cry,

[13:46] <RabidGravy> you already do sweetie

[13:47] * psch is reminded of the 'goes towards' C operator

[13:48] <psch> y'know, as in 'x --> 0'

[13:52] <mst> heh

[13:54] *** rurban1 joined
[13:54] *** kaare_ joined
[13:55] *** rurban left
[13:55] *** Zoffix joined
[13:55] <Zoffix> m: sub infix:«,=>» { Pair.new: $^a, $^b }; say (pi ,=> "PIE").perl

[13:55] <camelia> rakudo-moar 4179bd: OUTPUT«3.14159265358979e0 => "PIE"␤»

[13:55] <Zoffix> Oh, I didn't read far enough :P

[13:56] <RabidGravy> I think I'm going to stick with perverting prefix:<->(Pair)

[13:56] <mst> hm?

[13:57] <Zoffix> So it's -pi => "PIE"

[13:57] <psch> oh god

[13:57] <mst> m: say (-pi => "PIE").perl

[13:57] <camelia> rakudo-moar 4179bd: OUTPUT«Cannot resolve caller Numeric(Pair: ); none of these signatures match:␤    (Mu:U \v: *%_)␤  in block <unit> at <tmp> line 1␤␤»

[13:57] <RabidGravy> well for the "thing for generating SQL somewhat like SQL::Abstract", the -op => "thing" is quite natural

[13:57] <Zoffix> m: say ( ~pi => "PIE" ).perl

[13:57] <camelia> rakudo-moar 4179bd: OUTPUT«"pi\tPIE"␤»

[13:58] <Zoffix> \t? :S

[13:58] <Zoffix> Ah. k

[13:58] <psch> m: sub prefix:<-> is looser(&infix:['=>']) { ::($^a.key) => $a.value }; say -pi => "PIE"

[13:58] <camelia> rakudo-moar 4179bd: OUTPUT«3.14159265358979 => PIE␤»

[13:58] <RabidGravy> I was just exploring other ways of signalling the key is an operator

[13:59] * mst sighs

[13:59] <psch> hm, probably wants '(::($^a.key) // $a.key)' on the LHS inside instead

[13:59] <mst> I spend several years working on how to fix how terrible SQL::Abtract is, and then perl6 not only releases before me, but gets impatient and ports the unfixed version

[13:59] <RabidGravy> I wasn't particularly interested in pies or anothing

[13:59] <psch> oh maybe actually '(try $^a.key) // $a.key' maybe

[13:59] <psch> ...maybe

[14:00] <RabidGravy> who ported the unfixed version ?

[14:00] <mst> RabidGravy: I'm implying that 'somewhat like SQL::Abstract' will likely result in 'has a bunch of the same problems as'

[14:02] <RabidGravy> well, please feel free to make one you think works right

[14:03] <RabidGravy> unfortunately I've hit a briick wall of yaks with Perl 6

[14:05] <RabidGravy> so I either make something that does somewhat like I need or I'm forced to not use Perl 6

[14:05] <mst> I'm not even honestly that fond of the syntax anymore

[14:05] <mst> personally I'd probably try and steal a subset of LINQ instead

[14:06] <mst> with a more lisp-y underpinning

[14:06] <mst> (SQL::Abstract's DWIM syntax is a nightmare to do transforms on)

[14:06] <moritz> I'd recommend stealing from sqlalchemy

[14:06] <mst> sqlalchemy has some nice ideas, but a stunningly ugly interface

[14:07] <mst> still worth a look but *cringe*

[14:07] <mst> ruby's Sequel is also notable

[14:07] <mst> (I actually really like sqlalchemy as a piece of technology, I just don't appreciate the aesthetics ;)

[14:08] <moritz> mst: are you aware of the two separate interfaces that sqlalchemy offers?

[14:09] *** Ven_ joined
[14:09] *** Khisanth left
[14:09] <moritz> 'cause the declarative one doesn't offend my sense of aesthetics at all

[14:09] <mst> moritz: my memory of studying it is sufficiently vague that that's too vague a question for me to answer

[14:10] <mst> since you can't magically make me less senile, could you link both? :)

[14:10] <RabidGravy> I agree with all of the above, Perl 5 or 6 syntax doesn't map very well to transormation to SQL

[14:14] <RabidGravy> but yeah, it's probably easier if I stop writing software altogether

[14:15] <moritz> mst: that's the declarative API: http://docs.sqlalchemy.org/en/latest/orm/extensions/declarative/basic_use.html

[14:15] <moritz> trying to remember what the other API is called

[14:15] *** tbrowder joined
[14:15] <moritz> ah, classical

[14:15] <moritz> http://docs.sqlalchemy.org/en/latest/orm/mapping_styles.html

[14:18] <RabidGravy> that all seems rather monolithic to me

[14:19] *** tbrowder left
[14:20] <moritz> it nicely decomposes into separate modules in which you define classes for your tables

[14:21] <RabidGravy> yeah, I can see that - fairly standard tbh, but it does everything

[14:21] <RabidGravy> that's what I mean by monolithic

[14:22] *** huggable left
[14:22] *** huggable joined
[14:22] <mst> moritz: I think my aggravation was rather that the operator syntax can get weird for complex where clauses, rather than with the table setup stuff

[14:23] <mst> then again, so does everybody else's operator syntax

[14:25] <mst> x.in_(y) # brrr

[14:26] <moritz> yes, that one is ugly

[14:26] <moritz> because "in" is a reserved word in python

[14:27] *** rurban1 left
[14:27] <moritz> a perl 6 fork would make that one less ugly :-)

[14:27] <mst> it's the mixture of overloads and object syntax that bugs me

[14:27] <mst> I think

[14:27] <mst> I'd rather have all object syntax, or all overloads+functions

[14:27] <mst> (sorry, been a while since I looked, trying to reconstruct what bugged me)

[14:28] *** Khisanth joined
[14:28] <RabidGravy> I'm veering toward overloads and functions which return objects, which also simplifies the iternal design somewhat

[14:29] <mst> that's where I was going for "how would I produce a better SQLA surface syntax"

[14:29] <mst> WHERE { $_->foo > 3 } etc.

[14:30] <mst> RabidGravy: basically, trying to jam it all into data structures with overloaded meanings like SQLA does makes me cry in various ways, even though it is really powerful

[14:30] <mst> if you continue to veer in that direction, I retract my comments about "stealing our mistakes" because it sounds like you aren't stealing that bit ;)

[14:34] *** khw joined
[14:37] <RabidGravy> of course the advantage of a data structure approach is that it makes it easier for higher level thingies to generate them, I think there's a sweet spot where internally it's all objects which can be composed by higher level software and functions that sugar the construction of the objects

[14:37] <RabidGravy> for people who actually type the expressions

[14:39] <mst> right, this is where I wanted a lispish thing under the hood

[14:39] <mst> so $_->foo > 3 becomes [ -op, '>', [ -ident => 'foo' ], [ -value => 3 ] ]

[14:39] <mst> roughly

[14:40] <mst> (note I've been shaving a different yak for a while so again assume fuzzy memory on top of whatever other mistakes I've made)

[14:49] <RabidGravy> and given all the above you can also support something that is somewhat similar to the existing SQLA expression syntax due to the loveliness of multi dispatch :)

[14:49] <mst> yep

[14:51] *** wamba left
[14:51] *** araujo_ left
[14:52] *** araujo joined
[14:52] *** araujo left
[14:54] *** rurban joined
[14:55] *** araujo_ joined
[14:56] *** araujo_ left
[14:56] *** wamba joined
[14:58] *** rurban_ left
[15:02] *** buharin joined
[15:10] <RabidGravy> anyway as it stands I've got something that handles a sqla-like syntax almost completely with multiple dispatch *and* passes the tests, weeks away from even a preliminary release though

[15:12] <dalek> doc: d073000 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/ (3 files):

[15:12] <dalek> doc: More link fixes

[15:12] <dalek> doc: review: https://github.com/perl6/doc/commit/d07300025b

[15:12] *** ribasushi left
[15:15] *** vibha left
[15:17] *** jack_rabbit joined
[15:21] *** ribasushi joined
[15:27] *** zacts left
[15:28] *** Ven_ left
[15:28] *** molaf joined
[15:30] *** kid511 joined
[15:31] *** kid51 left
[15:31] <dogbert17> m: say Bool.^mro # does this mean that 'Bool is Int'  ?

[15:31] <camelia> rakudo-moar 51e1a2: OUTPUT«((Bool) (Int) (Cool) (Any) (Mu))␤»

[15:31] <timotimo> yes, Bool is Int

[15:31] <timotimo> as are all enums that are not typed a different way

[15:32] <dogbert17> timotimo: cool, I'm asking because in type-graph.txt it's written that 'Bool is Cool'

[15:32] *** Ven_ joined
[15:33] <dogbert17> timotimo: and reason 2 is that I want to put the enum Order in that file

[15:33] <timotimo> ah, that ought to be fixed

[15:34] <dogbert17> I guess I should write   'class Order is Int' 

[15:35] <dogbert17> and fix Bool so that it is no longer Cool :)

[15:35] <dalek> perl6-most-wanted: 707cdc7 | Altai-man++ | most-wanted/modules.md:

[15:35] <dalek> perl6-most-wanted: Add Netrc library

[15:35] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/707cdc7d8f

[15:35] <dalek> perl6-most-wanted: 43e8a04 | lizmat++ | most-wanted/modules.md:

[15:35] <dalek> perl6-most-wanted: Merge pull request #32 from Altai-man/master

[15:35] <dalek> perl6-most-wanted: 

[15:35] <dalek> perl6-most-wanted: Add Netrc library

[15:35] <dalek> perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/43e8a044db

[15:35] <timotimo> oh, what is Netrc?

[15:36] <mst> timotimo: .netrc file that can contain information for user+pass and similar for e.g. ftp/http things

[15:37] <timotimo> ah, ok

[15:40] *** zacts joined
[15:41] <dogbert17> is class Order a Basic,Composite or Domain-Specific class?

[15:41] <psch> m: say Order.HOW.WHAT

[15:41] <camelia> rakudo-moar 51e1a2: OUTPUT«(EnumHOW)␤»

[15:42] <psch> Order is an enum 

[15:42] *** jack_rabbit left
[15:42] <dogbert17> psch: yes, but where does it fit within the doc categories (I was probably not very clear when posting the question :)

[15:43] <FROGGS> I dont understand the content of .rev-deps

[15:43] <psch> oh, yeah, those categories

[15:43] <dogbert17> psch: suggestions welcome :)

[15:44] <psch> dogbert17: i'd say Domain-specific.  it's definitely not Composite, and while i think it could be Basic, it's not something that always applies

[15:45] <dogbert17> psch: thx, I'll put it in Domain-specific and then we'll se what happens

[15:45] <dogbert17> s/se/see/

[15:47] *** espadrine joined
[15:49] <dalek> doc: e9e8951 | (Jan-Olof Hendig)++ | type-graph.txt:

[15:49] <dalek> doc: Bool is Int and Order is also Int. Timotimo++, psch++

[15:49] <dalek> doc: review: https://github.com/perl6/doc/commit/e9e89515d1

[15:49] <psch> m: say Less.^mro

[15:49] <camelia> rakudo-moar 51e1a2: OUTPUT«((Order) (Int) (Cool) (Any) (Mu))␤»

[15:51] *** domidumont joined
[15:52] <b2gills> dogbert17:  an Order is returned from &infix:<cmp> &infix:«<=>» and &infix:<leg>

[15:53] <b2gills> m: say 1 <=> 2; say 1 <=> 1; say 2 <=> 1

[15:53] <camelia> rakudo-moar 758413: OUTPUT«Less␤Same␤More␤»

[15:57] <dogbert17> b2gills: thx. I'm beginning to suspect that I shouldn't have written 'enum Order is Int' but instead 'class Order is Int'

[15:57] <AlexDaniel> why Order is Enum but Bool is Int?

[15:58] *** zacts left
[15:58] <psch> m: say Bool.HOW.WHAT

[15:58] <camelia> rakudo-moar 758413: OUTPUT«(EnumHOW)␤»

[15:58] <psch> m: say True.HOW.WHAT

[15:58] <camelia> rakudo-moar 758413: OUTPUT«(EnumHOW)␤»

[15:58] <psch> m: say True.^mro

[15:58] <camelia> rakudo-moar 758413: OUTPUT«((Bool) (Int) (Cool) (Any) (Mu))␤»

[15:58] <AlexDaniel> m: say Order.HOW.WHAT

[15:58] <camelia> rakudo-moar 758413: OUTPUT«(EnumHOW)␤»

[15:59] <AlexDaniel> oops

[15:59] <AlexDaniel> I meant another thing

[15:59] <AlexDaniel> why Order is “enum” but Bool is “class”?

[15:59] <dogbert17> in the type-graph.txt file we find e.g.  'enum Signal  is Int'  but I can't find that on doc.perl6.org

[16:00] <dogbert17> AlexDaniel: I'm beginning to suspect a visibilty problem

[16:00] *** zakharyas joined
[16:00] <dogbert17> say Signal.^mro

[16:00] *** CIAvash left
[16:01] <FROGGS> nine: I believe I fixed the issue we talked about earlier

[16:01] <dogbert17> m: say Signal.^mro

[16:01] <camelia> rakudo-moar 758413: OUTPUT«((Signal) (Int) (Cool) (Any) (Mu))␤»

[16:01] <nine> FROGGS: oh, how?

[16:01] <FROGGS> nine: the content of .rev-deps was plain wrong me thinks

[16:02] <FROGGS> nine: https://gist.github.com/FROGGS/5f71459f95e2daf1f0886365ea7733fe

[16:02] <dogbert17> AlexDaniel: scratch my last comments, they where nonsense. Anyway Order is now in the type-graph.

[16:03] <FROGGS> nine: a FOO.rev-deps contained several FOOs, and BAR.rev-deps only ever contained BAR

[16:03] *** CIAvash joined
[16:03] <psch> FROGGS: btw, #perl6-dev exists.  thought i mention it since i don't see you there

[16:03] <FROGGS> psch: ohh, I'm in #p6dev

[16:04] <psch> FROGGS: ah.  mst wanted to set up a redirect iirc, but apparently that didn't happen

[16:04] <psch> FROGGS: something about toplevel channels on freenode having to be easily associated with the project they belong to i think cause the move

[16:04] *** espadrine left
[16:04] <dogbert17> AlexDaniel: unless moritz has any objections I believe that 'class Bool is ...' should be changed to 'enum Bool is ...'

[16:04] <FROGGS> psch: I see, np :o)

[16:07] *** rurban1 joined
[16:08] <nine> FROGGS: looking at https://github.com/rakudo/rakudo/commit/002871 I dare say you are right! Seems like I wrongly changed that from $id to $dependency.id when replacing $dependency-id with $dependency.id

[16:09] <FROGGS> nine: :o)

[16:09] <FROGGS> nine: spectesting now

[16:09] *** rurban left
[16:09] <geekosaur> dogbert17, I think you're seeing a historical wart? (or possibly not so historical)

[16:09] <psch> Bool used to not be an enum, yeah

[16:10] <geekosaur> Bool was, and possibly still is, handled specially because the setting needed it before the Enum machinery existed

[16:10] *** zacts joined
[16:10] <geekosaur> (or before it was set up to work properly)

[16:10] <geekosaur> bootstrapping issue, so Bool was actually a bootstrapping class

[16:10] <psch> it is generated as an enum during BOOTSTRAP nowadays

[16:10] <nine> FROGGS: panda's bootstrap is a good canary for these kinds of bugs. It's what kept me from merging the rt128156_fix_precomp_deps_validation branch

[16:13] <timotimo> geekosaur: i think dogbert17 is just talking about a file inside the docs repo, not the core setting

[16:14] <geekosaur> yes, my point is that the existing doc is referencing the old setup

[16:14] <geekosaur> and it was important because people trying totreat Bool as an Enum were getting weird errors

[16:14] <nine> FROGGS: everything looking very well so far :)

[16:14] <geekosaur> so the doc referenced what was then the true situation

[16:15] <FROGGS> nine: yes, will also test panda

[16:16] *** rurban joined
[16:18] <Util> m: my $beer = 5; say "foo" if $beer != 1; say $beer;

[16:18] <camelia> rakudo-moar 758413: OUTPUT«foo␤5␤»

[16:18] <Util> m: my $beer = 5; say "foo" if $beer !=1; say $beer;

[16:18] <camelia> rakudo-moar 758413: OUTPUT«1␤»

[16:18] <psch> m: say 1 !=1

[16:18] <camelia> rakudo-moar 758413: OUTPUT«Cannot modify an immutable Int␤  in block <unit> at <tmp> line 1␤␤»

[16:18] <Util> In that second case, omitting the whitespace after the `!=` causes wrong output,

[16:18] <psch> Util: long-ticket, and hard to fix

[16:18] <Util> and unexpected assignment!

[16:18] *** rurban1 left
[16:18] *** rurban left
[16:19] <Util> psch: Thanks! Can you point me to the ticket?

[16:19] <psch> #121108

[16:19] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=121108

[16:19] <Util> psch: Excellent! Much thanks!

[16:19] <psch> Util: you're welcome :)

[16:24] *** setty1 joined
[16:26] *** rindolf left
[16:27] *** cognominal left
[16:46] *** Ven_ left
[16:49] <dalek> ecosystem: c14df30 | Altai-man++ | META.list:

[16:49] <dalek> ecosystem: Add Config::Netrc

[16:49] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/c14df300b8

[16:49] <dalek> ecosystem: 5fe9e25 | (Zoffix Znet)++ | META.list:

[16:49] <dalek> ecosystem: Merge pull request #218 from Altai-man/master

[16:49] <dalek> ecosystem: 

[16:49] <dalek> ecosystem: Add Config::Netrc

[16:49] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/5fe9e2539a

[16:50] <Zoffix> πhttps://github.com/Altai-man/perl6-Config-Netrc

[16:52] *** rindolf joined
[16:57] *** kurahaupo joined
[16:58] *** CQ joined
[17:03] *** kurahaupo left
[17:18] <dogbert17> geekosaur: so you're ok with me making the change then?

[17:18] <geekosaur> yes

[17:18] <geekosaur> you're correcting a historical fossil

[17:18] <geekosaur> which hopefully is no longer relevant

[17:18] <geekosaur> (but was when that was originally written)

[17:19] <dogbert17> geekosaur: many thanks, change coming up :) 

[17:19] * dogbert17 is a bit split between docs and football

[17:20] * geekosaur too :p

[17:21] <dalek> doc: 49fc1c4 | (Jan-Olof Hendig)++ | type-graph.txt:

[17:21] <dalek> doc: Change Bool from class to enum. geekosaur++

[17:21] <dalek> doc: review: https://github.com/perl6/doc/commit/49fc1c4c47

[17:24] *** synopsebot6 left
[17:24] *** rurban joined
[17:24] *** synopsebot6 joined
[17:27] <Zoffix> Football?

[17:27] <Zoffix> Did you see that ludicrous display last night?

[17:28] *** travis-ci joined
[17:28] <travis-ci> Doc build failed. Jan-Olof Hendig 'Change Bool from class to enum. geekosaur++'

[17:28] <travis-ci> https://travis-ci.org/perl6/doc/builds/137088856 https://github.com/perl6/doc/compare/e9e89515d16e...49fc1c4c4714

[17:28] *** travis-ci left
[17:29] *** wamba left
[17:29] <geekosaur> which ludicrous display? there were several :p

[17:30] <geekosaur> including one that most of the folks in here probably slept through

[17:30] <Zoffix> https://www.youtube.com/watch?v=6yN2H3--1aw

[17:31] * geekosaur considers whether he wants to load that over the work hotspot (trying to avoid e.g. video) or wait for phone to be not streaming something else

[17:32] <geekosaur> (local notwork is doing a good simulation of a boat anchor)

[17:33] <Zoffix> It's from the "I.T. Crowd" episode. Where there's a "bluffball" website that gives you football phrases to use in normal conversations :P

[17:33] <grondilu> oh boy I miss that excellent show

[17:34] <mst> Too reliant on cringe based humour for my tastes

[17:38] *** wamba joined
[17:39] *** wamba left
[17:40] *** wamba joined
[17:41] *** mr-foobar joined
[17:42] *** rurban left
[17:44] <geekosaur> agree with mst re cringe-based humor

[17:47] *** rurban joined
[17:49] *** wamba left
[17:52] *** cognominal joined
[17:58] <stmuk_> I like the sportsing cartoon

[17:59] *** kalkin- left
[18:12] *** Actualeyes left
[18:12] *** zakharyas left
[18:17] *** awwaiid joined
[18:17] *** labster joined
[18:17] *** nightfrog joined
[18:20] *** KillBill joined
[18:21] *** rurban left
[18:22] *** tbrowder joined
[18:22] *** huggable left
[18:22] *** huggable joined
[18:26] *** tbrowder left
[18:27] *** rurban joined
[18:31] <dogbert17> interesting htmlify.p6 has suddenly stopped working

[18:34] *** buharin left
[18:34] <dogbert17> Processing Language Pod files ...:     39: doc/Language/5to6-nutshell.pod           => language/5to6-nutshell:  Method 'unit' not found for invocant of class 'List'

[18:35] <dogbert17> in sub extract-pod at htmlify.p6 line 174

[18:36] <FROGGS> is that a typo for uniq?

[18:37] *** KillBill left
[18:38] <FROGGS> nah, probably not

[18:38] <dogbert17> FROGGS: don't thinks so, copied from cmdline output

[18:38] <dogbert17> FROGGS: the word unit is in the pod file though

[18:39] <FROGGS> ahh

[18:39] <FROGGS> I guess .load returns a list now instead a single item

[18:40] <dogbert17> FROGGS: does it mean we have to make a change in htmlify.p6 then?

[18:40] <FROGGS> probably... let me check

[18:41] <dogbert17> I had moar-2016.02 lying around, it works fine there FWIW

[18:43] <FROGGS> no, it is not supposed to return a list

[18:44] *** buharin joined
[18:45] <dogbert17> fails on 8430f07 but worked yesterday at least

[18:46] <timotimo> can we turn that into a one-liner to be run on the bisectbot? :)

[18:46] <FROGGS> already trying

[18:47] <FROGGS> ahh

[18:47] <FROGGS> nine's patch does that

[18:47] <Zoffix> There's a commit from 2 hours ago that returns a List: https://github.com/rakudo/rakudo/blob/nom/src/core/CompUnit/PrecompilationRepository.pm#L156

[18:49] <FROGGS> are we allowed to alter .load just like that?

[18:51] <Zoffix> ¯\_(ツ)_/¯

[18:52] *** yqt joined
[18:55] <dogbert17> timotimo: time for you to grab a beer and start singing on the streets :)

[18:55] *** edehont joined
[18:55] *** CIAvash left
[19:02] <timotimo> no.

[19:03] <timotimo> i will have nothing to do with this football thing that drags people into stadiums and near stadiums to get beaten up by insane people

[19:07] *** ssotka joined
[19:11] <Zoffix> Sounds like a problem that can be resolved with more guns!

[19:13] *** edehont left
[19:15] *** rurban left
[19:17] * moritz barely manages to suppress a snarky comment

[19:19] <moritz> this is a reminder that if you notice folks who submit multiple PRs to perl6/* repos, tell me or FROGGS++ or so their github usernames so that we can hand out commit bits

[19:24] *** TEttinger joined
[19:26] *** darutoko left
[19:28] *** zakharyas joined
[19:29] *** domidumont left
[19:34] <dalek> doc: 6e0a5b8 | moritz++ | htmlify.p6:

[19:34] <dalek> doc: Hopefully fix htmlify on newest rakudo

[19:34] <dalek> doc: 

[19:34] <dalek> doc: since [0]-indexing is a noop on type Any, it should work with the old rakudo too

[19:34] <dalek> doc: review: https://github.com/perl6/doc/commit/6e0a5b83fc

[19:36] *** [particle]1 joined
[19:36] *** [particle] left
[19:37] *** girafe joined
[19:39] <timotimo> dogbert17: it seems like there's a female commentator (is that the word?) on TV and men on social networks are in an uproar

[19:39] *** zakharyas left
[19:40] <timotimo> really ... fuck widely televised, commercialised, and institutionalized footbal

[19:40] <timotimo> football

[19:40] <timotimo> soccer

[19:40] <timotimo> whatever

[19:41] <moritz> considering that the German *female* football team has been much more successful than the male team during the last two decades or so, ... well ...

[19:41] *** zakharyas joined
[19:42] <moritz> like, they won the last *six* european championships in a row

[19:42] <timotimo> no, female football isn't a "real game". clearly it's easy to win at that if you put only a tiny bit of effort into it, because all the other women are clearly just doing it for shits and giggles

[19:42] <dogbert17> timotimo: I thought that most big games played by Germany was commentated by one, very popular, guy

[19:44] <moritz> star-m: say 'version?'

[19:44] <camelia> star-m 2016.04: OUTPUT«version?␤»

[19:45] <dalek> Inline-Perl5: d854a83 | lizmat++ | lib/Inline/Perl5.pm6:

[19:45] <dalek> Inline-Perl5: Mu.BUILDALL doesn't take positionals anymore

[19:45] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/d854a8384c

[19:45] <nemo> timotimo: I was listening to a commenter on NPR proferring the theory that the dismal lack of interest in women's team sports by both women and men is kinda due to team sport being a sort of sublimation/proxy for tribal warfare

[19:46] <nemo> timotimo: so yeah, I can totally believe if the germans fielded a professional team and no one else was investing in it they could sweep

[19:46] <nemo> hell US women's team did a lot better than men's

[19:46] <timotimo> i was just bullshitting

[19:47] <timotimo> i have no idea how much effort other countries are putting into women's football

[19:47] <lizmat> .tell nine please doublecheck d854a83 , it allows Inline::Perl5 to test again ok

[19:47] <yoleaux> lizmat: I'll pass your message to nine.

[19:47] <timotimo> even worse, i bet there's still countries where having a women's football team would be forbidden

[19:47] <timotimo> anyway, dinner is served!

[19:47] <moritz> we should forbid men's football teams in Germany, just to compensate :-)

[19:48] <timotimo> +1

[19:48] *** travis-ci joined
[19:48] <lizmat> .oO( let's hear it for the Frauschaft! )

[19:48] <travis-ci> Doc build passed. Moritz Lenz 'Hopefully fix htmlify on newest rakudo

[19:48] <travis-ci> https://travis-ci.org/perl6/doc/builds/137105690 https://github.com/perl6/doc/compare/49fc1c4c4714...6e0a5b83fc49

[19:48] *** travis-ci left
[19:48] <nemo> moritz: as a non-german I support that proposal

[19:48] <nemo> moritz: just to cut down on competition

[19:48] <timotimo> you know, when i was a kid, i asked a classmate who was very into football "what german team will represent germany in this WM?"

[19:48] <timotimo> he found the notion ridiculous and mocked me for not knowing there's actually a dedicated team to play in the world championship that never gets replaced

[19:49] <nemo> moritz: although, none of the countries I have citizenship in have a chance in hell anyway

[19:49] <timotimo> BBL

[19:50] <moritz> nemo: I'm curious, how many citizenships do you have?

[19:50] <nemo> moritz: well. 2½

[19:50] <moritz> nemo: how's that? :-)

[19:50] <nemo> moritz: I keep deferring US, although I could have gotten it like a decade ago

[19:51] <nemo> moritz: US citizenship has a lot of disadvantages

[19:51] <nemo> I've been sticking w/ greencard

[19:51] <moritz> nemo: having to pay taxes in the US even if living abroad?

[19:51] <nemo> moritz: that part was annoying, but it got even worse lately

[19:51] <moritz> my brother-in-law had 3 citizenships, though I think by know it's back to two

[19:51] <nemo> moritz: before you'd fill out a form and pretty much be done, 'cause most people didn't hit the threshold

[19:52] <nemo> moritz: nowdays, you have to actually hire someone. has gotten more complicated

[19:52] <moritz> wow

[19:52] <nemo> also their bank reporting rules have made it almost impossible for ordinary expats living abroad to have a bank account

[19:52] <nemo> unless you have a huge amount of money to put in it

[19:52] <moritz> I'v seen Ovid rant on twitter about some of this stuff

[19:52] <nemo> moritz: so, yeah, rather than having to renounce it, I just avoided getting it

[19:53] <nemo> moritz: I can't vote here, but my impact on political system is about same as any american's 

[19:53] <nemo> ☺

[19:54] <autarch> I don't suppose anyone has a highlight.js plugin for p6?

[19:55] <nemo> moritz: my kids have 3 tho

[19:57] <Zoffix> autarch, MadcapJake might

[19:57] <autarch> MadcapJake: do you? do you? that'd be so handy

[19:57] <moritz> nemo: nice

[19:57] <MadcapJake> i started one but I got discouraged when I found out heredocs were impossible

[19:58] <Zoffix> .u ☺

[19:58] <yoleaux> U+263A WHITE SMILING FACE [So] (☺)

[19:58] <Zoffix> :/ why is it so small :/ (or is it just my font)

[19:59] <nemo> Zoffix: ☺ is not an emoji

[19:59] <nemo> Zoffix: was supported long before concept of emoji appeared

[19:59] <nemo> so some fonts treat it differently (mine doesn't)

[20:00] <Zoffix> http://i.imgur.com/eK0UdEa.png

[20:00] <nemo> Zoffix: I'm currently using Droid Sans Mono in my terminal window 'cause I liked its overall rendering of stuff like this

[20:00] <AlexDaniel> .oO( tiny white smiling face )

[20:00] <nemo> Zoffix: also when it is missing a glyph, it seems to have nicer fallbacks

[20:00] <nemo> probably going to Droid Sans Fallback is my bet

[20:01] <nemo> Zoffix: my experiment in irssi multiline math rendering ☺  http://m8y.org/tmp/testcase353.xhtml

[20:03] <nemo> Zoffix: on the plus side, since ☺ is not an emoji, it is likely to render even on crappy platforms that are unfamiliar w/ the astral planes

[20:03] *** rindolf left
[20:10] <gnull> hi everyone

[20:11] <gnull> I have a grammar with `proto token mytoken {*}; token mytoken:sym<a> {}; token mytoken:sym<b> {};`

[20:12] <gnull> And now I can refer to any of mytoken's in other regexes of that grammar

[20:12] <gnull> But how do I refer to exactly mytoken:sym<a> ?

[20:14] <gnull> I want something like `token another { <mytoken:sym<a>> }` that would match :sym<a>, but not sym<b>

[20:14] *** TimToady left
[20:16] *** TimToady joined
[20:17] *** rurban joined
[20:18] *** kaare_ left
[20:20] *** pdcawley joined
[20:21] <b2gills> m: #`(testing) grammar Test { proto token mytoken {*}; token mytoken:sym<a> {<sym>}; token mytoken:sym<b> {<sym>}; token TOP {<mytoken:sym<b>>}}; say Test.parse('a')

[20:21] <camelia> rakudo-moar 8430f0: OUTPUT«｢a｣␤ mytoken => ｢a｣␤  sym => ｢a｣␤»

[20:21] *** pdcawley left
[20:24] *** grondilu left
[20:27] <b2gills> gnull: I think the reason it doesn't work is that tokens are basically just methods, and that isn't how method dispatch works. If you RT it someone might end up implementing it.

[20:28] *** wamba joined
[20:33] *** FROGGS left
[20:35] *** jjido joined
[20:40] <gnull> b2gills: Thank you

[20:41] *** geraud joined
[20:45] *** cognominal left
[20:51] *** buharin left
[20:51] <moritz> gnull: the solution is to make mytoken:sym<a> call another named token, and use that instead of mytoken:sym<a> when you want to invoke it directly

[20:53] *** vendethiel left
[20:56] *** rurban1 joined
[20:56] *** rurban1 left
[20:58] *** rurban left
[20:58] <nine> dogbert17: FWIW I don't consider PrecompilationRepository's interface to be frozen. It's not spectested at all. That said, I of course try not to make everyone's life harder :) So if you have a testcase for me, I'll try to keep that running.

[20:58] <yoleaux> 19:47Z <lizmat> nine: please doublecheck d854a83 , it allows Inline::Perl5 to test again ok

[20:58] *** xfix joined
[20:59] <nine> dogbert17: also if you have a replacement for the return of two values there, I'd be happy. I really don't like how that code turned out.

[21:00] *** mr-foobar left
[21:00] *** mr-foobar joined
[21:02] <moritz> $obj does role { method CHECKSUM { $checksum } };

[21:02] <moritz> but that's also ugly

[21:03] <nine> Moving the checksum into CompUnit::Handle also doesn't really make me happy

[21:05] *** dwarring joined
[21:09] *** Sgeo joined
[21:10] *** Sgeo_ left
[21:15] *** zakharyas left
[21:16] *** jjido left
[21:19] *** matiaslina joined
[21:35] *** pochi joined
[21:46] *** matiaslina left
[21:58] *** matiaslina joined
[22:02] *** Emeric left
[22:13] *** telex left
[22:14] *** telex joined
[22:22] *** huggable left
[22:22] *** huggable joined
[22:34] *** baest left
[22:37] *** vibha joined
[22:38] *** baest joined
[22:39] *** wamba left
[22:39] *** spider-mario left
[22:46] *** djbkd joined
[22:46] *** silug left
[22:46] *** firstdayonthejob left
[22:49] *** jack_rabbit joined
[22:55] <gnull> m: my $a = map {say 'hooah'}, ^3; my $b = $a xx Inf; $b[^6]

[22:55] <camelia> rakudo-moar 5d4949: ( no output )

[22:56] <gnull> m: my $a = map {say 'hooah'}, ^3; my $b = $a xx Inf; say $b[^6]

[22:56] <camelia> rakudo-moar 5d4949: OUTPUT«hooah␤hooah␤hooah␤((True True True) (True True True) (True True True) (True True True) (True True True) (True True True))␤»

[23:01] *** RabidGravy left
[23:02] *** silug joined
[23:03] <dogbert17> nine: I haven't made any comments wrt PrecompilationRepository's interface, that's way above my paygrade :) 

[23:07] <b2gills> m: my $a = map {'hooah'}, ^3; my $b = $a xx Inf; say $b[^6]

[23:07] <camelia> rakudo-moar 5d4949: OUTPUT«((hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah))␤»

[23:08] <AlexDaniel> b2gills: yeah?

[23:09] <AlexDaniel> m: my $a = map {'hooah'}, ^3; my $b = $a xx ∞; say $b[^6]

[23:09] <camelia> rakudo-moar 5d4949: OUTPUT«((hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah))␤»

[23:09] <AlexDaniel> m: my $a = map {'hooah'}, ^3; my $b = $a xx *; say $b[^6]

[23:09] <camelia> rakudo-moar 5d4949: OUTPUT«((hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah) (hooah hooah hooah))␤»

[23:12] <AlexDaniel> m: say ‘hello’ x * # :)

[23:12] <camelia> rakudo-moar 5d4949: OUTPUT«{ ... }␤»

[23:13] *** dct joined
[23:15] *** dct left
[23:15] *** trnh joined
[23:22] <gnull> I want to make an infinite list of a given Seq repeated infinite number of times

[23:26] <gnull> But looks like Seq in list context evaluates to a list contaning that Seq

[23:27] <gnull> m: (map {$_}, ^3) xx 3

[23:27] <camelia> rakudo-moar 5d4949: ( no output )

[23:27] <gnull> m: say (map {$_}, ^3) xx 3

[23:27] <camelia> rakudo-moar 5d4949: OUTPUT«((0 1 2) (0 1 2) (0 1 2))␤»

[23:27] <timotimo> yeah, you'd need to flat that

[23:27] <timotimo> or slip the thing before th exx

[23:27] <gnull> m: say (map {$_}, ^3).Slip xx 3

[23:27] <camelia> rakudo-moar 5d4949: OUTPUT«(0 1 2 0 1 2 0 1 2)␤»

[23:27] <timotimo> yup

[23:31] <AlexDaniel> ah, huh, didn't notice the question :)

[23:32] * AlexDaniel runs away

[23:32] *** AlexDaniel left
[23:32] <timotimo> i didn't see the question either

[23:33] <parabolize> Zoffix: in http://perl6.party/post/Python-is-The-New-Write-Only-Linenoise-Language you could use print(*itertools.chain(*zip(u, l)), sep='') 

[23:41] <Zoffix> ¯\_(ツ)_/¯

[23:41] <Zoffix> That article is ancient. I don't even remember much about it.

[23:41] <Zoffix> And there are some more comments on BPO version: http://blogs.perl.org/users/zoffix_znet/2016/01/python-is-the-new-write-only-linenoise-language.html

[23:42] <parabolize> depending on how long the iterables are it may be much faster than using the str.__add__ `i + j` will use. A second ''.join in the for loop would also be faster. `print(''.join(''.join((i, j)) for i, j in zip(u, l)))`

[23:44] *** trnh left
[23:50] *** dwarring left
[23:55] <Zoffix> I just went with accepted SO answers.

[23:58] *** kurahaupo joined
