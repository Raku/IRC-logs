[00:00] *** cyphase joined
[00:01] *** itaipu joined
[00:02] <psch> m: my @a[1;1]; my @b := @a; say @b.shape

[00:02] <camelia> rakudo-moar 4abc28: OUTPUT«(1 1)␤»

[00:02] <psch> m: my @a[1;1]; sub f(@a is raw) { say @a.shape }; f @a

[00:02] <camelia> rakudo-moar 4abc28: OUTPUT«(1 1)␤»

[00:02] <psch> m: my @a[1;1]; sub f(@a) { say @a.shape }; f @a

[00:02] <camelia> rakudo-moar 4abc28: OUTPUT«(1 1)␤»

[00:03] <psch> m: my @a[1;1]; sub f(@a where .shape eqv (1,1)) { say @a.shape }; f @a

[00:03] <camelia> rakudo-moar 4abc28: OUTPUT«(1 1)␤»

[00:03] <gfldex> if it's Array of Array would it not be all(@a) ~~ Positional?

[00:03] <psch> well, if it was Array of Array :(Array @a) would match

[00:03] <psch> but i guess it's probably not nominally Array of Array, just practically

[00:04] <psch> but yes, if all elements are Arrays it should be &all

[00:05] <seatek> I *love* that you can assign default values to a method's signature variables, from the class attributes. So handy.

[00:07] *** tushar left
[00:09] <seatek> weird about this though: Class.new(myVar => 'thisVal').iNeedThatVal -- method iNeedThatVal would not have the value in the class yet though. All the little things to learn.

[00:09] *** imcsk8 left
[00:10] <psch> m: class A { has $.myVar; method iNeedThatVal { $.myVar } }; say A.new(myVar => 'thisVal').iNeedThatVal

[00:10] <camelia> rakudo-moar 4abc28: OUTPUT«thisVal␤»

[00:10] <psch> seatek: uh..? :)

[00:10] *** cyphase left
[00:11] <psch> oh, probably about the parameter thing too?

[00:11] <seatek> psch: maybe i'm crazy!

[00:11] <seatek> let me try again in a minute

[00:11] <psch> m: class A { has $.myVar; method iNeedThatVal($myVar = $.myVar) { $myVar } }; say A.new(myVar => 'thisVal').iNeedThatVal

[00:11] <camelia> rakudo-moar 4abc28: OUTPUT«thisVal␤»

[00:11] <psch> nope, also works vOv

[00:14] <seatek> well, it must have just started working then... ;) ;)  (oops :) )

[00:14] <psch> probably TimToady++ again with his time machine :)

[00:14] <seatek> yeah it does work. i must have been doing something else wrong at the time

[00:14] <seatek> hehe

[00:15] *** cyphase joined
[00:18] *** tushar joined
[00:23] <seatek> I had to coerce a unix time into an integer for DateTime.new to accept it without an error.

[00:23] *** cyphase left
[00:23] <seatek> the timestamp value came out of a split

[00:24] <seatek> but there was no explicit typing going on 

[00:27] <psch> m: use NativeCall; my $a = cglobal('c', 'time', int32); say $a # booo

[00:27] <camelia> rakudo-moar 4abc28: OUTPUT«Cannot locate native library 'libc.so': /usr/lib64/libc.so: invalid ELF header␤  in block  at /home/camelia/rakudo-m-inst-1/share/perl6/sources/24DD121B5B4774C04A7084827BFAD92199756E03 (NativeCall) line 422␤  in block <unit> at <tmp> line 1␤␤»

[00:27] <psch> probably some guesswork going wrong there

[00:27] <psch> i mean, i know we default to libc for native subs that we don't give a libname for

[00:28] <seatek> m: my $ts = "1475362095"; say DateTime.new($ts)

[00:28] <camelia> rakudo-moar 4abc28: OUTPUT«Invalid DateTime string '1475362095'; use an ISO 8601 timestamp (yyyy-mm-ddThh:mm:ssZ or yyyy-mm-ddThh:mm:ss+01:00) instead␤  in block <unit> at <tmp> line 1␤␤»

[00:28] <psch> might be neat if we had something similar for cglobals, if that's possible

[00:28] *** cyphase joined
[00:28] <seatek> m: my $ts = "1475362095"; say DateTime.new($ts.Int)

[00:28] <camelia> rakudo-moar 4abc28: OUTPUT«2016-10-01T22:48:15Z␤»

[00:28] <seatek> m: my $ts = 1475362095; say DateTime.new($ts)

[00:28] <camelia> rakudo-moar 4abc28: OUTPUT«2016-10-01T22:48:15Z␤»

[00:29] <psch> m: say DateTime.can('new').candidates>>.signature

[00:29] <camelia> rakudo-moar 4abc28: OUTPUT«No such method 'candidates' for invocant of type 'List'␤  in block <unit> at <tmp> line 1␤␤»

[00:29] <psch> m: say DateTime.can('new')>>.signature

[00:29] <camelia> rakudo-moar 4abc28: OUTPUT«((DateTime $: | is raw) (Mu $: | is raw))␤»

[00:29] <psch> m: say DateTime.can('new')[0].candidates>>.signature

[00:29] <camelia> rakudo-moar 4abc28: OUTPUT«((DateTime $: \y, \mo, \d, \h, \mi, \s, :$timezone = 0, :&formatter, *%_) (DateTime $: :$year!, :$month = 1, :$day = 1, :$hour = 0, :$minute = 0, :$second = 0, :$timezone = 0, :&formatter, *%_) (DateTime $: Date:D :$date!, *%_) (DateTime $: Instant:D $i, :…»

[00:29] <psch> feh

[00:29] <psch> ETOOMANYCANDS

[00:33] <timotimo> it's too candid

[00:34] *** rgrinberg joined
[00:36] *** cyphase left
[00:37] <grondilu> (candid and candidate probably have a common ethymology.  Never thought of that)

[00:37] *** Zoffix joined
[00:38] <psch> anyway, yeah, probably could solve that problem with a Int(Cool) coercer on the appropiate params

[00:38] <Zoffix> Happy Hacktoberfest! It's an event where you can get a l33t shirt by sending 4 PRs to any repos on GitHub (see https://hacktoberfest.digitalocean.com/ ). We have many Perl 6 organization issues ready for Hacktober Hacking! Get fame and profit by helping us out: https://github.com/issues?utf8=%E2%9C%93&q=is%3Aopen+is%3Aissue+user%3Aperl6+label%3AHacktoberfest

[00:38] <psch> wooo

[00:39] <tushar> I am trying to remove elements from an array by preserving the indexes. Meaning if I delete first element, rest of the elements hold their original position. I wrote a function for it and you can find it here http://pastebin.com/Rfc32sh5 . I am just curious, is there any better way of doing this because Perl 6 is very rich in features and shortcuts.

[00:39] <psch> m: my @a = 1,2,3,4; @a:delete(2); say @a.perl

[00:39] <camelia> rakudo-moar 4abc28: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Variable '@a:delete<2>' is not declared␤at <tmp>:1␤------> 3my @a = 1,2,3,4; 7⏏5@a:delete(2); say @a.perl␤»

[00:39] <psch> erg

[00:39] <psch> m: my @a = 1,2,3,4; @a[2]:delete; say @a.perl

[00:39] <camelia> rakudo-moar 4abc28: OUTPUT«[1, 2, Any, 4]␤»

[00:39] <psch> tushar: ^^^ that maybe?

[00:41] <tushar> hmm..

[00:41] *** cyphase joined
[00:42] <Zoffix> m: my @a = 1,2,3,4; my @indx = 1, 3; @a[@indx]:delete; say @a.perl

[00:42] <camelia> rakudo-moar 4abc28: OUTPUT«[1, Any, 3]␤»

[00:42] *** Zoffix left
[00:46] <tushar> psch and Zoffix thanks. But I do not want Any object in the output.

[00:46] <psch> tushar: what do you want instead?

[00:47] <tushar> for your example code, I want 1,2,4;

[00:47] <psch> tushar: oh, so you *don't* want the gap

[00:47] <psch> tushar: that's not "hold their original position"

[00:48] <psch> tushar: if i have @a = 1,2,3; and i remove the 1, then either 2,3 move up or you get a hole at the start

[00:48] *** buggable left
[00:48] <tushar> yes. That's why I wrought a solution. Did you check that? My solution might be lengthy.

[00:48] *** buggable joined
[00:49] <psch> i don't get the solution

[00:49] <tushar> For the same reason, I can not use splice either. 

[00:49] <tushar> I provided a pastebin link

[00:49] <tushar> here it is again http://pastebin.com/Rfc32sh5

[00:49] <psch> yes, i don't understand it :P

[00:49] <psch> not your fault, probably

[00:51] *** cyphase left
[00:53] <psch> m: my @a = [[1,2,3],[4,5,6]]; @a[0] = @a[0].splice(1); say @a.perl

[00:53] <camelia> rakudo-moar 4abc28: OUTPUT«[[2, 3], [4, 5, 6]]␤»

[00:53] <psch> why does something like that not work?

[00:54] <geekosaur> what might have helped is some examples of using it, both inputs and outputs

[00:54] <psch> geekosaur++

[00:54] * psch probably needs to get to bed anyway o/

[00:55] *** cyphase joined
[00:57] <tushar> I can provide explanation. My function accepts two array -- one array holds the data which can be an array or array of arrays and another array holds the indexes. I convert the data array into hash key and value. I am using hash keys as indexes and removing them. Then I am looping through remaining  hash keys and pushing their values to a new array. Replace old array with new array and return it. 

[01:01] *** canopus left
[01:03] *** cyphase left
[01:04] <tushar> geekosaur: pastebin already has an example.

[01:04] <tushar> do you prefer more?

[01:05] <timotimo> i wonder if you can just @incoming_array[@my_list_of_key-lists]:kv:delete

[01:05] *** itaipu left
[01:06] *** itaipu joined
[01:07] *** cyphase joined
[01:08] <tushar> m: my @a = [[1..4],[5..8],[9..12],[13..17]]; @a[0,2]:kv:delete; @a.say;

[01:08] <camelia> rakudo-moar 4abc28: OUTPUT«[(Any) [5 6 7 8] (Any) [13 14 15 16 17]]␤»

[01:08] *** canopus joined
[01:08] <timotimo> don't forget to say the result of @a[0,2]:...

[01:08] <tushar> timotimo: it keep the gaps. I don't want them.

[01:09] <tushar> timotimo: yes. it returns key and corresponding values.

[01:09] <timotimo> then i'd go ahead and grep for defined stuff later

[01:09] <tushar> m: my @a = [[1..4],[5..8],[9..12],[13..17]]; @a[0,2]:kv:delete.say; @a.say;

[01:09] <camelia> rakudo-moar 4abc28: OUTPUT«(0 [1 2 3 4] 2 [9 10 11 12])␤[(Any) [5 6 7 8] (Any) [13 14 15 16 17]]␤»

[01:11] *** a3r0 left
[01:12] *** a3r0 joined
[01:12] <tushar> m: my @a = [[1..4],[5..8],[9..12],[13..17]]; @a[0,2]:kv:delete; for @a -> $ele { if $ele.defined { $ele.say }};

[01:12] <camelia> rakudo-moar 4abc28: OUTPUT«[5 6 7 8]␤[13 14 15 16 17]␤»

[01:12] <tushar> timotimo: ^^^ like this

[01:13] <timotimo> m: my @a = [[1..4],[5..8],[9..12],[13..17]]; @a[0,2]:kv:delete; .say for @a.grep(*.so)

[01:13] <camelia> rakudo-moar 4abc28: OUTPUT«[5 6 7 8]␤[13 14 15 16 17]␤»

[01:14] <tushar> timotimo++

[01:15] <tushar> timotimo: can you provide explanation about ".say for @a.grep(*.so)"? 

[01:16] <timotimo> .say is syntactic sugar for "$_.say", a for loop at the end of the statement will just put stuff into $_ for you

[01:16] <timotimo> and grep(*.so) will only give you things that return True when you call .so on them

[01:16] <timotimo> and .so is the boolean coercer (opposite of "not")

[01:17] <tushar> timotimo++

[01:17] <tushar> timotimo: thanks for your explanation.

[01:17] <timotimo> no problem at all

[01:17] <timotimo> i'll be going to bed real soon now

[01:17] <tushar> so I am the last luckiest one. :D

[01:18] <timotimo> there's enough of me to go around usually ;)

[01:18] <tushar> haha

[01:27] <tbrowder>  is there a way to get a

[01:28] <tbrowder> an unreleased module into travis somehow via the .travis.yaml file?

[01:30] <tbrowder> i'm testing a new module that requires another of my modules that is not yet in the ecosystem

[01:30] <timotimo> just put "panda install ." into the travis.yml

[01:31] <timotimo> it doesn't have to be in the ecosystem to be installed that way

[01:32] <tbrowder> ok, i assume i can do "panda install <local path to repo> then? thanks, timotimo

[01:33] <timotimo> that's right

[01:34] *** itaipu left
[01:35] *** itaipu joined
[01:46] *** ilbot3 left
[01:48] *** ilbot3 joined
[01:50] <tushar> timotimo: as you are still around. I can little more of your help. I am trying to capture the deleted elements into another array. When I used your solution "@a[0,2]:kv:delete", it returns a list with key and values where keys are the indexes and values are the values that removed. I only want values and not indexes. How can i achieve that?

[01:50] <tbrowder> hm, not working...what is CWD on travis?

[01:50] <tushar> m: my @a = [[1..4],[5..8],[9..12],[13..17]]; @a[0,2]:kv:delete.say;

[01:50] <camelia> rakudo-moar 4abc28: OUTPUT«(0 [1 2 3 4] 2 [9 10 11 12])␤»

[01:50] <tushar> I want only [[1..4], [9..12]].

[01:51] <tbrowder> going to read info on travis again...

[02:03] *** noganex joined
[02:06] *** noganex_ left
[02:07] <hackedNODE> tushar: why'd ya have :kv on it then? :)

[02:07] <geekosaur> because timotimo had it

[02:07] <hackedNODE> tsk tsk

[02:08] <geekosaur> (we were all still trying to figure out what tushar wanted...)

[02:08] *** skids joined
[02:10] <hackedNODE> tbrowder: have you seen https://docs.travis-ci.com/user/languages/perl6 ?

[02:10] <hackedNODE> tbrowder: simple version that'll do it's thing. No ecosystem inclusion needed: https://github.com/zoffixznet/perl6-IRC-Client/blob/master/.travis.yml

[02:21] <tbrowder>  that seems to imply my deps are inside my repo being tested, no.

[02:21] <tbrowder> no?

[02:21] <tbrowder> in that case i'll have to move some stuff around

[02:24] <tbrowder>  i'll experiment some more tomorrow--nite all

[02:25] <hackedNODE> tbrowder: are you deps in the ecosystem? Then it's fine. panda will find them

[02:25] *** itaipu left
[02:26] <gfldex> please keep in mind that changes to modules are delayed by up to 40min in the ecosystem

[02:27] *** itaipu joined
[02:30] *** cyphase left
[02:34] *** cyphase joined
[02:40] *** rgrinberg left
[02:55] *** pierre_ joined
[02:59] *** noganex_ joined
[02:59] *** pierre_ left
[03:02] *** noganex left
[03:07] *** TakinOver left
[03:10] *** tushar left
[03:13] *** lostinfog joined
[03:14] *** lostinfog left
[03:27] *** itaipu left
[03:28] <dalek> perl6.org: 651ab0c | (Jota Sprout)++ | source/documentation/index.html:

[03:28] <dalek> perl6.org: Created new section for screencasts

[03:28] <dalek> perl6.org: 

[03:28] <dalek> perl6.org: Added YouTube lists and moved current screencasts link.

[03:28] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/651ab0cb66

[03:28] <dalek> perl6.org: 45cd8db | (Zoffix Znet)++ | source/documentation/index.html:

[03:28] <dalek> perl6.org: Merge pull request #58 from jotasprout/master

[03:28] <dalek> perl6.org: 

[03:28] <dalek> perl6.org: Created new section for screencasts

[03:28] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/45cd8dba61

[03:29] <dalek> perl6.org: d373b31 | (Zoffix Znet)++ | source/documentation/index.html:

[03:29] <dalek> perl6.org: Fix typo

[03:29] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/d373b312e5

[03:44] *** grondilu left
[03:58] *** kent\n left
[04:10] *** kent\n joined
[04:13] *** bjz_ joined
[04:13] *** bjz_ left
[04:15] *** bjz left
[04:16] *** bjz_ joined
[04:16] *** bjz_ left
[04:17] *** bjz joined
[04:18] *** bjz left
[04:20] *** bjz joined
[04:27] *** rgrinberg joined
[04:41] *** khw left
[04:57] *** Cabanossi left
[05:00] *** Cabanossi joined
[05:28] *** kaare_ joined
[05:37] *** mohae joined
[05:38] *** mempko joined
[05:39] *** araujo left
[05:39] *** araujo joined
[05:41] *** mohae_ left
[05:42] *** araujo left
[05:42] *** araujo joined
[05:44] *** araujo left
[05:45] *** araujo joined
[05:53] *** BenGoldberg left
[06:09] *** seatek left
[06:16] *** cyphase left
[06:18] *** andrzejku joined
[06:21] *** cyphase joined
[06:36] *** bjz left
[06:37] *** pierre_ joined
[06:39] *** bjz joined
[06:49] *** rgrinberg left
[06:55] *** bjz left
[06:56] *** bjz joined
[06:56] *** domidumont joined
[06:57] *** AlexDaniel left
[07:00] *** domidumont left
[07:00] *** skids left
[07:01] *** xinming_ joined
[07:01] *** domidumont joined
[07:04] *** xinming left
[07:05] *** domidumont left
[07:07] *** pierre_ left
[07:07] *** wamba joined
[07:30] *** labster joined
[07:41] *** MARTIMM joined
[07:45] <andrzejku> hey, need help with 9 english senteces to fix them

[07:45] <andrzejku> ;P

[07:47] *** bjz left
[07:50] *** bjz joined
[07:50] *** setty1 joined
[07:52] *** bjz left
[07:53] *** bjz joined
[07:54] *** kaare_ left
[07:55] *** kaare_ joined
[07:55] *** rindolf joined
[08:05] *** pyrimidine left
[08:08] *** pierre_ joined
[08:11] *** nadim_ joined
[08:12] *** pierre_ left
[08:20] <moritz> andrzejku: I'm not a native speaker, but I can try

[08:21] <andrzejku> moritz, already fixed in perl chat but thanks :P

[08:30] *** mempko left
[08:42] *** pierre_ joined
[08:50] *** FROGGS joined
[08:52] *** pyrimidine joined
[08:54] <FROGGS> o/

[08:54] *** eliasr joined
[08:58] <moritz> \o

[08:58] <raydiak> o/

[09:01] *** pierre_ left
[09:06] *** pierre_ joined
[09:15] *** kurahaupo joined
[09:22] *** pierre_ left
[09:33] *** ggoebel left
[09:40] *** pierre_ joined
[09:43] *** pmurias_ joined
[09:43] *** pmurias_ left
[09:43] *** pmurias joined
[09:43] <pmurias> hi, rakudo doesn't support the -i flag?

[09:43] <yoleaux> 1 Oct 2016 17:18Z <grondilu> pmurias: you're right, passing text between stages is not the way to go.

[09:46] *** ggoebel joined
[09:54] <tbrowder> .tell hackedNODE: no they're not, but i'm going to try to fake it with some sym linking

[09:54] <yoleaux> tbrowder: What kind of a name is "hackedNODE:"?!

[09:55] <tbrowder> .tell hackedNODE no they're not but i'm trying to fake it with some sym linking

[09:55] <yoleaux> tbrowder: I'll pass your message to hackedNODE.

[09:56] *** bjz left
[09:57] *** bjz joined
[09:59] *** bjz left
[10:00] *** domidumont joined
[10:00] *** bjz joined
[10:02] *** bjz left
[10:03] *** bjz joined
[10:04] *** bjz left
[10:06] *** bjz joined
[10:07] *** bjz_ joined
[10:08] *** bjz left
[10:10] *** zakharyas joined
[10:11] *** labster left
[10:12] <tbrowder> not that sym linking doesn't work in git, had to cp -r from the other repo lib dir and temp add it to the repo i'm trying to test with an out-of-the ecosystem module; maybe a travis yml before_install cmd can do the trick? will check later if this works

[10:21] *** bjz_ left
[10:22] *** bjz joined
[10:22] *** bjz left
[10:23] *** bjz joined
[10:23] *** bjz left
[10:24] *** bjz joined
[10:27] *** bjz left
[10:30] *** bjz joined
[10:30] *** bjz left
[10:30] *** dayangkun joined
[10:36] *** bjz joined
[10:41] *** bjz left
[10:44] *** pyrimidi_ joined
[10:46] *** bjz joined
[10:47] *** pyrimidine left
[10:49] *** bjz left
[10:50] *** bjz_ joined
[10:51] *** itaipu joined
[10:52] <tbrowder> hm, travis build is stuck, cannot cancel, back to drawing board...

[10:53] <tbrowder> has anyone used travis cache successfully.

[10:54] *** bjz_ left
[10:54] *** dayangkun left
[10:55] *** bjz joined
[10:56] <tbrowder>  has anyone used cache successfully with a travis build? did it speed up the build?

[11:04] *** domidumont left
[11:12] *** Actualeyes left
[11:12] *** darutoko joined
[11:13] *** Actualeyes joined
[11:17] *** zakharyas left
[11:17] *** zakharyas joined
[11:21] *** zakharyas left
[11:40] *** kaare_ left
[11:40] *** TEttinger left
[11:42] *** grondilu joined
[11:42] <grondilu> hello #perl6

[11:42] <FROGGS> hi grondilu 

[11:43] <tbrowder>   no one on #perl6-toolchain now, can anyone here talk about travis and p6 tool chain?

[11:43] <tbrowder> hi grondilu

[11:47] <tbrowder> for instance, using travis on github what is $HOME to travis for a github repo?

[11:50] <tbrowder> if so, then any scripting, etc., used in the yml file must be relative to that, but maybe github locations need to be by html link?

[11:52] *** kaare_ joined
[11:57] *** perlawhirl joined
[12:06] <dalek> doc: c04988c | titsuki++ | doc/Language/typesystem.pod6:

[12:06] <dalek> doc: Add indexes for both :ver and :auth

[12:06] <dalek> doc: review: https://github.com/perl6/doc/commit/c04988c4f5

[12:06] <dalek> doc: da5ad5b | titsuki++ | doc/Language/typesystem.pod6:

[12:06] <dalek> doc: Merge pull request #932 from titsuki/add-ver-n-auth-index

[12:06] <dalek> doc: 

[12:06] <dalek> doc: Add indexes for both :ver and :auth

[12:06] <dalek> doc: review: https://github.com/perl6/doc/commit/da5ad5b5ae

[12:08] *** kaare_ left
[12:29] *** itaipu left
[12:30] *** itaipu joined
[12:31] <perlawhirl> .tell tushar like this? https://gist.github.com/0racle/abbc0d2f7c7e8110abbd987aacc7a5f8

[12:31] <yoleaux> perlawhirl: I'll pass your message to tushar.

[12:39] *** MARTIMM left
[12:49] *** itaipu left
[12:55] *** spebern joined
[13:00] *** canopus left
[13:02] <spebern> does anyone have any idea on the issue why panda's bootstrap.pl exits withot installing panda?

[13:03] *** zakharyas joined
[13:03] <spebern> I'm on arch, default login shell is zsh and I am using perlbrew for perl5

[13:07] <spebern> I have tried rakudobrew and rakudo-star-2016.07

[13:08] *** canopus joined
[13:09] *** pmurias left
[13:16] *** pmurias joined
[13:17] *** pierre_ left
[13:20] <SmokeMachine____> FROGGS: I didn't understand the problem you was trying to solve, but some one sad that a solver could help. So, do you think that this (https://github.com/FCO/ProblemSolver) could help?

[13:21] *** kaare_ joined
[13:24] <timotimo> spebern: does it give any output that looks like errors? did you add the path it mentions at the end to your PATH?

[13:25] *** kaare__ joined
[13:25] <grondilu> in src/Perl6/Grammar.nqp line 2750 I see the rule param_sep beginning with an empty string C<''>.  Is that a hack or something?

[13:26] *** kaare_ left
[13:26] *** spebern left
[13:26] <grondilu> what I mean is does an empty string have any effect in a regex?

[13:27] <timotimo> "rule" is for - among other things - sigspace

[13:27] <timotimo> so i expect it's there to allow sigspace at the beginning

[13:29] <grondilu> as with :s ?

[13:29] <timotimo> yes

[13:35] <andrzejku> hi :)

[13:40] <stmuk_> timotimo: I think spebern is suffering the dreaded *BSD crash on linux

[13:41] <timotimo> damn it :(

[13:49] *** lucasb_ joined
[13:49] <stmuk_> it may affect linux more on newer processors due to an Intel processor bug but I've seen something v similar on lower spec processors

[13:50] <timotimo> that's the microcode problem with lock elision?

[13:51] <stmuk_> yes

[13:51] * timotimo foams a little at the mouth

[13:52] <stmuk_> but a N2840 probably doesnt have HLE

[13:59] *** cibs left
[14:01] *** cibs joined
[14:01] *** telex left
[14:02] *** telex joined
[14:04] *** rosso joined
[14:04] <dalek> doc: be918cf | titsuki++ | doc/Language/typesystem.pod6:

[14:04] <dalek> doc: Fix a typo

[14:04] <dalek> doc: review: https://github.com/perl6/doc/commit/be918cfa75

[14:04] <dalek> doc: 3a88e95 | titsuki++ | doc/Language/typesystem.pod6:

[14:04] <dalek> doc: Merge pull request #933 from titsuki/fix-grammar-typo

[14:04] <dalek> doc: 

[14:04] <dalek> doc: Fix a typo

[14:04] <dalek> doc: review: https://github.com/perl6/doc/commit/3a88e953df

[14:04] <rosso> Hi there

[14:04] <timotimo> greetings rosso 

[14:05] *** rosso is now known as Guest82778

[14:06] *** AlexDaniel joined
[14:06] <Guest82778> which perl6 or perl 5 ?

[14:06] <moritz> Guest82778: for what?

[14:07] *** domidumont joined
[14:08] <Guest82778> which perl5 or perl 6 for you 

[14:09] <Guest82778> hey

[14:10] <Guest82778> can you hear me ?

[14:10] <andrzejku> hello my friends :)

[14:10] <perlawhirl> we can. The answer for me is... whichever is more suitable for the task. the answer for you might be different.

[14:13] <mst> both

[14:13] <moritz> most likely both, yes

[14:15] <Guest82778> you are bitch

[14:15] <perlawhirl> lovely

[14:15] <Guest82778> I Question not answer

[14:16] <Guest82778> fucking bobs

[14:16] <Guest82778> bye

[14:16] *** Guest82778 left
[14:16] *** zakharyas left
[14:17] *** khw joined
[14:17] <mst> wtf

[14:18] *** pierre_ joined
[14:21] *** bioduds joined
[14:23] *** pierre_ left
[14:24] <pmurias> do we have a replacement for -i in rakudo or should I work on implementing it?

[14:24] <moritz> pmurias: I don#t think we have anything set

[14:24] *** domidumont left
[14:24] <moritz> *yet

[14:25] *** domidumont joined
[14:31] *** bjz left
[14:32] *** bjz joined
[14:43] *** domidumont left
[14:52] *** spebern joined
[15:00] *** rgrinberg joined
[15:01] <lucasb_> just a small nit: see this line here: https://github.com/rakudo/rakudo/blob/nom/src/core/Exception.pm#L954

[15:01] <lucasb_> my $m = "Redeclaration of $.what '$.symbol$.postfix'";

[15:05] <lucasb_> maybe the intention was to write '$.symbol'$.postfix ?

[15:06] <lucasb_> see these errors:

[15:06] <lucasb_> m: -> $x { $^x }

[15:06] <camelia> rakudo-moar 4abc28: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Redeclaration of symbol '$^x as a placeholder parameter'␤at <tmp>:1␤------> 3-> $x { $^x7⏏5 }␤»

[15:06] <lucasb_> m: sub f(--> Str) returns Int {}

[15:06] <camelia> rakudo-moar 4abc28: OUTPUT«5===SORRY!5=== Error while compiling <tmp>␤Redeclaration of return type for 'f (previous return type was Str)'␤at <tmp>:1␤»

[15:06] <AlexDaniel> pmurias, moritz: #124259

[15:06] <synopsebot6> Link:  https://rt.perl.org/rt3//Public/Bug/Display.html?id=124259

[15:07] <lucasb_> I would prefer that the single quotes was only surrounding the symbol, not the explanation

[15:07] *** zacts joined
[15:09] *** rindolf left
[15:11] <moritz> lucasb_: open a pull request

[15:12] <lucasb_> about this -i flag, is the variable $*INPLACE or $*INPLACE-EDIT specced?

[15:12] *** MARTIMM joined
[15:12] <moritz> $ git grep INPLACE

[15:12] <moritz> S28-special-names.pod: $^I $INPLACE_EDIT   $*INPLACE_EDIT ...or some such

[15:14] <lucasb_> moritz: oh, right. so this feature was already considered... just NYI. thanks

[15:15] *** rindolf joined
[15:19] * Juerd uses -i with perl5 a lot

[15:19] <Juerd> $^I too

[15:21] <MARTIMM> hi, I was wondering if the module info using 'use' would be visible in the module 'use'd

[15:27] <gfldex> MARTIMM: it can be if you provide your own EXPORT see https://docs.perl6.org/language/modules#index-entry-sub_EXPORT

[15:28] <MARTIMM> gfldex: thanks, I will look into it

[15:40] *** BenGoldberg joined
[15:41] *** cyphase left
[15:44] *** domidumont joined
[15:45] *** cyphase joined
[15:46] *** domidumont left
[15:47] *** domidumont joined
[15:57] *** spebern left
[16:01] <FROGGS> SmokeMachine____: I guess this could be a performance problem... I need to do this in Javascript when object are drawn to the calendar, and when stuff gets moved around

[16:12] *** Ven_ joined
[16:16] *** kaare__ is now known as kaare_

[16:23] *** aindilis joined
[16:28] *** spebern joined
[16:32] <pmurias> FROGGS: in your calendar problem the start time and and time of the spans are set and just need to assign each timespan a row? 

[16:35] *** labster joined
[16:36] *** skids joined
[16:36] <FROGGS> pmurias: aye

[16:36] <FROGGS> that's why I think I can just loop over the rows several times and I'm done

[16:40] *** perlawhirl left
[16:42] *** BenGoldberg left
[16:44] <pmurias> FROGGS: would sorting the rows on starting time and then inserting them in the row with the biggest ending time they fit it work (and adding a new one if they don't)?

[16:45] <pmurias> * they don't fit anywhere

[16:46] <FROGGS> yes, that sounds like what I am up to

[16:47] *** MilkmanDan left
[16:48] *** Lucas_One joined
[16:48] *** wamba left
[16:48] *** MilkmanDan joined
[16:51] *** spebern left
[16:52] *** khw left
[16:56] *** Ven_ left
[16:58] *** labster left
[17:08] *** khw joined
[17:11] *** wamba joined
[17:12] <hackedNODE> lucasb_: just checking, will you be submitting a PR for that exception message?

[17:12] <yoleaux> 09:55Z <tbrowder> hackedNODE: no they're not but i'm trying to fake it with some sym linking

[17:13] <lucasb_> hackedNODE: can you do it? :)

[17:13] <hackedNODE> lucasb_: OK

[17:13] <tbrowder> hackedNODE: disregard the tell msg, I'm working on modified .travis.yml now to do what I need

[17:14] <lucasb_> when client code instantiates an X::Redeclaration exception, they have to pass the parameter with an leading space 'postfix => " some problem"'

[17:14] <lucasb_> it would be interesting to pass without space and handle this inside the message method of the X::Redeclaration class

[17:14] <hackedNODE> sure

[17:15] <lucasb_> idk, something like: $.postfix.defined ?? " $.postfix" !! ''

[17:15] <hackedNODE> ~ (" $.postfix" if $.postfix})

[17:16] <hackedNODE> s/}//

[17:16] <lucasb_> hackedNODE: yes, works too :)

[17:22] *** isBEKaml joined
[17:31] *** isBEKaml left
[17:37] <timotimo> hackedNODE: i just posted a summary of the profile of loading the gigantic repository and my conclusion to the perl6-compiler list

[17:38] *** nadim_ left
[17:41] <hackedNODE> cool

[17:42] <timotimo> in short: canonpath is destroying our performance

[17:43] <timotimo> slurping and concating is most probably only a percent or three of total run time

[17:43] <mst> which people had already noticed as a bizarre pessimisation IIRC

[17:43] <timotimo> the what now?

[17:43] <hackedNODE> slurping and concating also has implication for memory use

[17:43] <mst> the canonpath()ing lots in various IO handling

[17:43] <timotimo> yes, true

[17:44] <timotimo> i already gave it a nice little optimization path, but that's mostly for very simple paths

[17:44] <hackedNODE> I could have a zillion files in my ~/ and if I include it in lib bad things will happen

[17:44] <hackedNODE> So IMO, we shouldn't be slurping random files at all, but I don't know anything about CUR to offer any solutions

[17:45] <timotimo> did you see how many entries we have to canonpath?

[17:45] <timotimo> that's a little bit bizarre

[17:46] <timotimo> there's only 4633 files under my mu

[17:46] <timotimo> but it's entered 25500 times

[17:48] <timotimo> hm, well, i guess since we recurse in dir i'd have to factor that in

[17:49] <hackedNODE> m: say 25500 / 4633

[17:49] <camelia> rakudo-moar 28c23a: OUTPUT«5.503993␤»

[17:50] <timotimo> 4 is about the average depth directory-wise

[17:51] *** wamba left
[17:52] <timotimo> huh

[17:52] <timotimo> did someone revert my canonpath optimizations?

[17:53] <hackedNODE> s: "x".IO, 'canonpath'

[17:53] <SourceBaby> hackedNODE, Something's wrong: ␤ERR: Type check failed in binding to &code; expected Callable but got Nil (Nil)␤  in sub do-sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 42␤  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 33␤  in block <unit> at -e line 6␤␤

[17:53] <hackedNODE> s: $*SPEC, 'canonpath'

[17:53] <SourceBaby> hackedNODE, Sauce is at https://github.com/rakudo/rakudo/blob/28c23a7/src/core/IO/Spec/Unix.pm#L3

[17:53] <hackedNODE> timotimo: they seem to be still there.

[17:54] <timotimo> oh lord

[17:54] <timotimo> my local rakudo is 4 weeks old

[17:54] <hackedNODE> :}

[17:54] <timotimo> i'll need to do the profile over ...

[17:56] <lucasb_> when a sub has return type constraints, like sub f(--> Foo) or sub f() returns Foo

[17:56] <lucasb_> what values/types can bypass this constraint? only Nil and Failure?

[17:56] <hackedNODE> Yeah

[17:56] <timotimo> those two or anything derived from them

[17:56] <lucasb_> is that intended behaviour, right?

[17:56] <hackedNODE> Yes

[17:57] <timotimo> yup

[17:57] <lucasb_> ok, thanks

[17:57] *** setty1 left
[17:59] *** optikalmouse joined
[17:59] <optikalmouse> raiph, I saw your comments on my article, the perl6 json one. thx for the corrections :D

[18:02] *** cyphase left
[18:05] *** rgrinberg left
[18:11] <timotimo> hackedNODE: followed it up with some new insights

[18:11] <timotimo> hopefully that helps someone find the problem

[18:12] <timotimo> a LHF would be for someone to port https://github.com/rakudo/rakudo/commit/6e2a5595bd595aecd1e0a6684897015e502ecbdd and the three commits before it to the Windows Spec

[18:21] *** MasterDukeLaptop joined
[18:26] *** wamba joined
[18:30] *** dataangel left
[18:36] <nine> I'm moving my root file system to a new disk while playing Diablo II. Linux is just awesome.

[18:37] <FROGGS> heh

[18:39] *** itaipu joined
[18:41] *** sjoshi joined
[18:41] *** sjoshi left
[18:46] *** MARTIMM left
[18:47] *** girafe joined
[18:50] *** Actualeyes left
[18:52] *** cyphase_eviltwin joined
[18:59] *** Woodi_ left
[19:00] *** nyarmith joined
[19:01] <moritz> nine: recently I was burning a CD (old-fasioned, I know) while running an "apt-get dist-upgrade". I know that on Windows, I had to care to not do anything potential harmful while doing that

[19:02] <moritz> because something might interrupt the process, and the CD would be lost

[19:02] <moritz> (ftr I'm burning a CD because my $work workstation can't boot from USB sticks, even though the bios thinks it can)

[19:03] <bioduds> I'm thinking ELIZA-like program would work very nicely using Grammars, what do you guys think?

[19:05] *** Sqirrel joined
[19:10] <awwaiid> bioduds: like grammar to extract out keywords?

[19:11] <bioduds> yes

[19:11] <bioduds> and process "quantum" style

[19:11] <bioduds> so to speak

[19:11] <awwaiid> I think ELIZA chops into words as it's only parsing

[19:12] <bioduds> correct

[19:13] <bioduds> perhaps there Markov Chains associated with Grammar Styles might be applicable

[19:13] <awwaiid> that is possibly overkill for grammar then, though maybe you could encode some stemming? hmm

[19:13] <moritz> yes, you'd use a p6 grammar to tokenize, not to parse

[19:14] *** MasterDukeLaptop left
[19:14] <bioduds> yes

[19:14] <arnsholt> ELIZA only searches for key terms, IIRC

[19:14] <bioduds> but then, associate with classes and roles to sort of create personas

[19:15] <arnsholt> Regex-based, I think

[19:15] <awwaiid> ah. you're likely going well beyond ELIZA at that point

[19:15] <bioduds> have different "ELIZA"s so to speak

[19:15] <bioduds> yes

[19:17] <bioduds> also metaprogram its core in order to have ELIZA "learn" and "forget" things. Or rather yet, dinamically build it's core withing certain rules

[19:17] <awwaiid> I guess looking at the __DATA__ in http://cpansearch.perl.org/src/NEILB/Chatbot-Eliza-1.06/lib/Chatbot/Eliza.pm I start to imagine what you mean -- use grammars to encode these rules?

[19:18] <bioduds> I'm guessing doing that in c would be a nightmare and in Perl6 would be much closer to something achievable

[19:18] *** optikalmouse left
[19:19] <bioduds> awwaiid : exaclty

[19:19] *** darutoko left
[19:20] *** rindolf left
[19:21] <bioduds> once these rules are encoded into grammars, it becomes much easier to play around with them

[19:22] <bioduds> have, say, slightly different sets, introduce perhaps a genetic algorithm to come out with better improved ones

[19:22] <bioduds> the idea is exciting, right?

[19:24] <tailgate> I'm a little terrified you're going to come up with some therapist that mind-controls its patients

[19:24] <psch> weee machine overlords \o/

[19:25] <bioduds> lol

[19:25] *** rindolf joined
[19:27] <nyarmith> lol, If it's mutual it's ok right?

[19:27] <nyarmith> both parties consent to the mind control

[19:29] *** itaipu left
[19:30] <bioduds> whereas both minds are in actual change

[19:30] <bioduds> influenced by one another

[19:33] <DrForr> Hey, have we put up your install script somewhere? (just curious, thinking about it)

[19:34] <bioduds> yes

[19:34] <DrForr> Cool!

[19:34] <bioduds> it stands in the git repo waiting to be used in https://install.perl6.org 

[19:34] <bioduds> https://raw.githubusercontent.com/bioduds/perl6-oneliner/master/install.sh

[19:35] <bioduds> this can be directly called already

[19:35] <bioduds> but now someone with access to the perl6.org servers and https must carry out

[19:35] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2016/10/02/things-i-found-out-while-finding/

[19:35] <bioduds> :)

[19:35] <DrForr> Cool.

[19:37] *** domidumont left
[19:37] *** pmurias left
[19:41] *** nyarmith left
[19:45] *** Amendil joined
[19:50] *** itaipu joined
[19:52] *** benjikun joined
[19:53] <benjikun> I'm running perl6 w/ bailador & http::server::simple; how do I make sure that the web server continues running even if it encounters errors?

[19:53] <tbrowder> hackedNODE: and timotimo: I have a solution to the uninstalled dep problem for Perl 6 modules on gitbub/travis; see gist https://gist.github.com/tbrowder/a8e416a349d278a8800abf606d6ceb7b

[19:54] *** dataangel joined
[19:54] <benjikun> preferably without external scripts

[19:55] <nine> Amazing what difference an upgrade of one's SSD can make. From "I cannot use my computer while our CMS' tests are running due to 20 second hangs and stopping mouse cursor" with the Crucial M4 128GB to "I don't notice anything besides the fan spooling up" with the Intel SSD 750 400GB PCIe

[19:56] <timotimo> tbrowder: you don't have to cd into the folder

[19:56] <timotimo> before you "panda install .", you just have to "panda install thefolder/"

[19:57] <tbrowder> okay, i thought i tried that and it didn't work...i'll mod and try again...

[19:57] <gfldex> benjikun: looking at it (need to read quite a bit code)

[19:58] *** nadim_ joined
[19:59] *** gregf_ left
[20:01] *** Amendil left
[20:01] <timotimo> maybe you didn't make it look like a path enough

[20:01] <timotimo> try ./foobarblahblubb

[20:03] <gfldex> benjikun: Bailador got a CATCH that should get everything (in /lib/Bailador/App.pm:method dispatch). As I see it, it should not stop on errors in your app, as long as they are no compile time errors. If it causes you problems, you need to file a github-issue on https://github.com/ufobat/Bailador/issues

[20:04] *** Lucas_One left
[20:05] <benjikun> Use of uninitialized value of type Any in numeric context

[20:05] <benjikun>   in block  at /root/.rakudobrew/moar-nom/install/share/perl6/site/sources/100A1B43D02574570A9FA5

[20:05] <benjikun> 343A0679EF35FBD229 (HTTP::Easy) line 101

[20:05] <benjikun> that is the error that is causing the application to quit

[20:05] *** cyphase_eviltwin is now known as cyphase

[20:06] *** cyphase left
[20:06] <timotimo> that's not an error, that's just a warning

[20:06] *** cyphase joined
[20:07] <benjikun> it quits whenever that happens though

[20:07] <benjikun> I've found another instance of stuff happening that causes it to quit

[20:08] <timotimo> right, it could get confused by the value being used being actually 0 instead of something

[20:08] <benjikun> https://thepb.in/p/y8h6GmPAprPHO

[20:09] <benjikun> How would I keep the application running even when this happens, or even avoid it completely?

[20:09] *** robertle left
[20:10] <tbrowder> timotimo: you're correct, at least one slasg is required; travis buld error msg:

[20:10] <tbrowder> https://www.irccloud.com/pastebin/BPtnd6Vx/

[20:11] <timotimo> that's helpful and nice :)

[20:11] <timotimo> BBIAB

[20:12] <gfldex> benjikun: that's a bug in HTTP::Easy https://github.com/supernovus/perl6-http-easy/blob/master/lib/HTTP/Easy.pm6#L101

[20:12] <benjikun> what do I do

[20:14] <gfldex> benjikun: file an issue at https://github.com/supernovus/perl6-http-easy/issues

[20:16] <gfldex> benjikun: you could also fork HTTP::Easy and change „my $msg-body-pos;“ to „my $msg-body-pos = 0;“ (HTTP/Easy.pm6:58) and see if that helps

[20:21] *** Ven_ joined
[20:25] <lucasb_> bioduds: I took a look at your install script. I guess you are brazillian, right? Cool, me too :)

[20:25] <bioduds> opa, sim sim

[20:25] <bioduds> BH e vc?

[20:26] <lucasb_> interior de SP

[20:26] <bioduds> já começou a brincar de Perl6?

[20:26] <gfldex> so you are the 2 guys from brazil who read my blog? :->

[20:26] <lucasb_> yes, playing with P6 on and off for a few months

[20:27] <lucasb_> gfldex: I opened in a tab here but didn't read yet :)

[20:27] <bioduds> gfldex : by exclusion, yes lol

[20:28] <gfldex> 2 out of 206,440,850. I'm getting there. :D

[20:29] <hackedNODE> harmil_wk: unfortunately, we can't fix it as there are multiple tests in 6.c that expect it to throw a NoMulti exception rather than a better Assignment::RO RE: https://irclog.perlgeek.de/perl6/2016-09-29#i_13310847

[20:30] <bioduds> :D very nice blog man! you sent me another link I guess earlier

[20:30] <gfldex> i try to blog once a week

[20:30] <bioduds> lucasb_ : have you actually tried the script? works ok for you?

[20:31] <bioduds> i really wish I could keep up with a blog but I'm so lazy

[20:31] <lucasb_> bioduds: no, I didn't try. It installs rakudo star, right? I usually use the monthly releases or build from the repo.

[20:33] <bioduds> yes, it does, correct :)

[20:38] *** Ven_ left
[20:38] *** Ven_ joined
[20:42] *** FROGGS left
[20:43] <gfldex> m: say X::IO::DoesNotExist.new(path=>'foo', trying=>'bar') ~~ X::IO

[20:43] <camelia> rakudo-moar 3a6cd8: OUTPUT«True␤»

[20:44] *** kaare_ left
[20:44] <gfldex> m: say X::AdHoc.new(payload=>'foo') ~~ X::IO

[20:44] <camelia> rakudo-moar 3a6cd8: OUTPUT«False␤»

[20:44] <gfldex> m: X::IO.^name.say

[20:44] <camelia> rakudo-moar 3a6cd8: OUTPUT«X::IO␤»

[20:45] <gfldex> m: X::IO.HOW.say

[20:45] <camelia> rakudo-moar 3a6cd8: OUTPUT«Perl6::Metamodel::ParametricRoleGroupHOW.new␤»

[20:45] <hackedNODE> m: X::IO.^mro.say;  X::AdHoc.^mro.say

[20:45] <camelia> rakudo-moar 3a6cd8: OUTPUT«No such method 'mro' for invocant of type 'Perl6::Metamodel::ParametricRoleGroupHOW'␤  in block <unit> at <tmp> line 1␤␤»

[20:45] <hackedNODE> m: X::IO.^pun.^mro.say;  X::AdHoc.^pun.^mro.say

[20:45] <camelia> rakudo-moar 3a6cd8: OUTPUT«((IO) (Exception) (Any) (Mu))␤No such method 'pun' for invocant of type 'Perl6::Metamodel::ClassHOW'␤  in block <unit> at <tmp> line 1␤␤»

[20:45] <hackedNODE> m: X::IO.^pun.^mro.say;  X::AdHoc.^mro.say

[20:45] <camelia> rakudo-moar 3a6cd8: OUTPUT«((IO) (Exception) (Any) (Mu))␤((AdHoc) (Exception) (Any) (Mu))␤»

[20:46] <gfldex> m: class X::IO::Foo is Exception { method message {} }; say X::IO::Foo ~~ X::IO;

[20:46] <camelia> rakudo-moar 3a6cd8: OUTPUT«False␤»

[20:46] <gfldex> m: class X::IO::Foo is Exception { method message {} }; say X::IO::Foo.new ~~ X::IO;

[20:46] <camelia> rakudo-moar 3a6cd8: OUTPUT«False␤»

[20:47] <hackedNODE> m: class X::IO::Foo does X::IO { method message {} }; say X::IO::Foo.new ~~ X::IO;

[20:47] <camelia> rakudo-moar 3a6cd8: OUTPUT«True␤»

[20:47] <gfldex> ENODOC

[20:51] *** skids left
[20:51] <dalek> doc: fa9885a | gfldex++ | doc/Language/exceptions.pod6:

[20:51] <dalek> doc: explain why smartmatching against exception categories work

[20:51] <dalek> doc: review: https://github.com/perl6/doc/commit/fa9885a261

[20:54] *** eliasr left
[20:56] <tbrowder> timotimo: for my two modules at least, there  is a difference in travis behavior between these two lines:

[20:56] <tbrowder> https://www.irccloud.com/pastebin/3oMnYJeV/

[21:00] <tbrowder> the first works and the second doesn't; the error msg on the second is during the test of the primary module being tested and the log says the just-installed dependency can't be found, so i'm assuming the resulting environment is different somehow. any ideas? i can try to specify PERL6LIB i guess after i find out where the two different locations are (or

[21:00] <tbrowder> find i made a false report!!)

[21:00] *** rindolf left
[21:04] *** skids joined
[21:05] <dalek> Inline-Perl5: b69fda4 | niner++ | / (4 files):

[21:05] <dalek> Inline-Perl5: Avoid slurpies for less overhead when calling P5 methods

[21:05] <dalek> Inline-Perl5: 

[21:05] <dalek> Inline-Perl5: By passing on the Capture instead of packing and unpacking slurpies,

[21:05] <dalek> Inline-Perl5: we can win another 5 % in csv-ip5xs.

[21:05] <dalek> Inline-Perl5: Previously an Empty returned by a P5 function without return values was

[21:05] <dalek> Inline-Perl5: filtered by the interpolation of the slurpies. Now we have to explicitly

[21:05] <dalek> Inline-Perl5: return a Nil instead (which is more correct anyway), turn it into a NULL

[21:05] <dalek> Inline-Perl5: and filter that in C code.

[21:05] <dalek> Inline-Perl5: 

[21:05] <dalek> Inline-Perl5: Version 0.17

[21:05] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/b69fda4ba8

[21:07] *** TEttinger joined
[21:09] *** bjz left
[21:13] *** andrzejku left
[21:20] *** Ven_ left
[21:23] *** mcmillhj joined
[21:27] *** BenGoldberg joined
[21:35] *** nowan left
[21:37] *** nowan joined
[21:38] *** labster joined
[21:40] *** lucasb_ left
[21:48] *** labster left
[21:48] *** shinobicl joined
[21:49] <shinobicl> hi all... how can i override the [] operator?

[21:51] <psch> m: class A { method AT-POS($) { "this and others" } }; say A.new[1]

[21:51] <camelia> rakudo-moar 3a6cd8: OUTPUT«this and others␤»

[21:51] *** nyarmith joined
[21:51] <psch> shinobicl: https://docs.perl6.org/language/subscripts#Methods_to_implement_for_positional_subscripting for the full list

[21:51] <shinobicl> thanks! :)

[21:51] <gfldex> lizmat: per6-docs-september-2016.txt https://gist.github.com/d20fb824a09abf7bdd57e62c8ea0e3f3

[21:53] *** dataangel left
[21:54] <gfldex> m: class A { has $.foo = <a b c> }; multi sub postcircumfix:<[ ]>(A:D \SELF, \index){ SELF.foo[index] }; A.new[1].say

[21:54] <camelia> rakudo-moar 3a6cd8: OUTPUT«b␤»

[21:55] *** labster joined
[21:55] <shinobicl> but what if i want to overload it for having to indices : $a[$row, $col]? That would be AT-KEY instead of AT-POS? Is there a way to use AT-POS with a pair of numbers?

[21:55] <gfldex> shinobicl: ^^^ you can define your own [] if you like

[21:55] <shinobicl> having two* indices

[21:56] *** mcmillhj left
[21:56] <psch> m: class A { method AT-POS($) { "this and others" } }; say A.new[1,2,3]

[21:56] <camelia> rakudo-moar 3a6cd8: OUTPUT«(this and others this and others this and others)␤»

[21:57] <gfldex> shinobicl: there is a postcircumfix:<[ ]> with Iterable as index type

[21:58] <psch> anyway, g'night o/

[21:58] *** dataangel joined
[21:58] *** mcmillhj joined
[21:59] <gfldex> shinobicl: but it likely doesn't do what you want it to do. It calles .map on the index. You may have to define your own operator.

[21:59] *** sQuEE joined
[21:59] *** labster left
[22:00] <shinobicl>  m: class C { method AT-POS(Int $r, Int $c) { "$r and $c" } }; my $Obj = C.new; say $Obj.[1,3]

[22:01] <camelia> rakudo-moar 3a6cd8: OUTPUT«Too few positionals passed; expected 3 arguments but got 2␤  in method AT-POS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:01] <shinobicl> oops i added an extra point, but it returns the same.

[22:03] <gfldex> shinobicl: that's the candidate it's calling: https://github.com/rakudo/rakudo/blob/nom/src/core/array_slice.pm#L204

[22:03] *** mcmillhj left
[22:04] *** nyarmith left
[22:06] <shinobicl> basically i want to implement an excel-like table with coordinates as ['A' ,3]... i have the inner structure done but i want to call them like that, even as [AB45] later, but the problem is with the former.

[22:06] <gfldex> m: class A { has $.foo = <a b c> }; multi sub postcircumfix:<[ ]>(A:D \SELF, \index){ dd index }; A.new['A', 1]

[22:06] <camelia> rakudo-moar 3a6cd8: OUTPUT«("A", 1)␤»

[22:06] <gfldex> as long as you define your own class, you are good

[22:07] <gfldex> with buildin type as SELF, you may face problems

[22:08] *** dataangel left
[22:08] <shinobicl> I've been far awy from perl6 too long i think, never seen this \SELF before

[22:08] <shinobicl> i guess is time to read the documentation again

[22:09] <gfldex> shinobicl: https://docs.perl6.org/language/variables#Sigilless_variables

[22:11] *** seatek joined
[22:11] *** rgrinberg joined
[22:13] *** mcmillhj joined
[22:17] *** dataangel joined
[22:18] *** mcmillhj left
[22:18] *** rgrinberg left
[22:20] *** rgrinberg joined
[22:23] *** BenGoldberg left
[22:26] *** dataangel left
[22:31] *** mcmillhj joined
[22:35] *** itaipu left
[22:36] *** mcmillhj left
[22:37] *** itaipu joined
[22:43] *** mcmillhj joined
[22:48] *** mcmillhj left
[22:50] *** dataangel joined
[22:58] <tbrowder> timotino:  after adding some extra scripts for debugging the build, i have decided to add some more scripts to more tightly control the build. one problem is the chicken and egg situation where we need panda (or zef) installed before they can be used for installation.  i want to use zef so that is part of the direction i'm heading without using panda (after

[22:58] <tbrowder> i get the rest working). 

[22:59] <timotimo> in the future, we'll be able to use raccoon

[23:00] <timotimo> otherwise you can also just -Iothermodule/lib

[23:00] <timotimo> if it doesn't have a Build.pm or something

[23:00] *** BenGoldberg joined
[23:11] *** itaipu left
[23:13] *** girafe left
[23:17] *** mcmillhj joined
[23:18] <tbrowder>  google doesn't help much, link, please?

[23:18] *** BenGoldberg left
[23:19] <tbrowder> hm, i forgot to search github...

[23:20] <tbrowder> 240+ hits...

[23:21] *** mcmillhj left
[23:22] <timotimo> racoon is a tiny installer that's supposed to come with rakudo or something like that?

[23:22] <timotimo> i'm not sure myself

[23:22] <timotimo> i haven't tried it out yet

[23:22] <timotimo> i think it's being developed from the install-core-modules.pm6 or something?

[23:25] * timotimo heads towards bed

[23:26] <benjikun> night night timotimo, sleep well

[23:28] <timotimo> night :)

[23:30] *** skids left
[23:43] *** skids joined
[23:51] *** mcmillhj joined
[23:53] *** labster joined
[23:56] *** BenGoldberg joined
[23:56] *** mcmillhj left
[23:56] *** Actualeyes joined
