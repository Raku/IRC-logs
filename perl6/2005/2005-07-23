[00:04] <Excalibor> okay, time for bed... good night!

[00:13] <Khisanth> hmm .. only works with ascii strings and integers?

[00:14] <Darren_Duncan> If anyone wants to see it, the second main draft of my Lightning Talk for OSCON 2005 is posted

[00:14] <Darren_Duncan> http://darrenduncan.net/OSCON/OSCON2005LightningTalk.txt

[00:14] <Darren_Duncan> any feedback welcome

[00:14] <Darren_Duncan> will find out Sunday whether the title/abstract has gotten it approved or not

[00:15] <rafl> Are there recordings of the Apocalypse Now talk autrijus did at YAPC?

[00:15] <Darren_Duncan> before anyone asks, the module in question has no tutorial yet

[00:15] <Darren_Duncan> but I plan to make one in time for the talk

[00:15] <Darren_Duncan> or at least a decent SYNOPSIS

[00:18] <Darren_Duncan> the page http://hew.ca/cgi-bin/page.pl?Day=Day%202&person_name= should link to autrijus talk videos, but none are uploaded yet

[01:29] <Khisanth> hrm .. in pugs doesn't behave the same as .. in p5

[03:46] <svnbot6> r5775, Stevan++ | org.perl6.metamodel = (Java version)

[03:46] <svnbot6> r5775, Stevan++ | * added Method class

[03:46] <svnbot6> r5775, Stevan++ |    - added tests for method class

[03:46] <svnbot6> r5775, Stevan++ | * added Method support for MetaClass

[03:46] <svnbot6> r5775, Stevan++ |    - added tests for this as well

[05:46] <svnbot6> r5776, Stevan++ | Perl6.MetaModel (JS version)

[05:46] <svnbot6> r5776, Stevan++ | * added Perl6.Instance class to represent instances in the model

[05:46] <svnbot6> r5776, Stevan++ |     - added tests for these

[05:46] <svnbot6> r5776, Stevan++ | * added require() function to the MetaModel to help loading module

[05:46] <svnbot6> r5776, Stevan++ |     - updated tests to use this

[07:03] <Aankhen``> Could someone add Makefile.old and config.yml to the svn:ignore for the root directory?  I'd do it myself, but I am having some trouble...

[07:05] <Aankhen``> I'm adding tmp-Prelude.pm to the list of clean files in Makefile.PL; hope it doesn't break anything. :-)

[07:12] <svnbot6> r5777, Aankhen++ | * Makefile.PL: added tmp-Prelude.pm to list of clean targets.

[07:17] <gaal> morning. Aankhen``, still need the svn stuff?

[07:17] <Aankh|Clone> Yep.

[07:17] <gaal> BTW what do the `s in your name mean?

[07:17] <Aankh|Clone> Morning to you too. :-)

[07:17] <Aankh|Clone> They're just ornamental.

[07:19] <szabgab> hi gaal

[07:19] <szabgab> how are you today ?

[07:19] <gaal> hey gabor, sup?

[07:19] <gaal> just woke up :)

[07:20] <szabgab> I have see Dragonball GT....

[07:20] <szabgab> s/see/seen/

[07:20] <gaal> what's that?

[07:21] <szabgab> one of the favorite movies of my son....

[07:22] <gaal> is it any good? :)

[07:22] <szabgab> are you alone ? how was yesterday 

[07:22] <szabgab> ?

[07:23] <gaal> yesterday was just me and shlomi. we had a yummy pizza but i have lots of mozarella left over :/

[07:24] <szabgab> what about nothingmuch, isn't he comming over  ?

[07:25] <gaal> no, he's kinda under the water

[07:26] <szabgab> what do you think, what should I do to try to make embedded perl5 work on my computer ? Should I compile a separate p5 just and try to use that ?

[07:27] <gaal> oh, not necessarily

[07:27] <gaal> but look carefully at the build messages: was there an error in the beginning?

[07:27] <gaal> when you 'perl Makefile.PL', it probes for the perl5 embedding option

[07:27] <svnbot6> r5778, gaal++ | add three files to svn:ignore list in root dir

[07:57] <szabgab> I tried to build with p5 again and then run this ./pugs -e 'eval q(print 23), :lang<perl5>' but it still does not print anything

[09:49] *** Maddingue__ is now known as Maddingue

[10:06] <szabgab> gaal are you there /

[10:12] <^conner>  pugs -e 'say "foo";'

[10:12] <^conner> pugs: internal error: scavenge_one: strange object 68

[10:12] <^conner> hehe

[10:12] <svnbot6> r5779, iblech++ | * Usual svn properties, including svn:ignore for perl5/PIL2JS.

[10:12] <svnbot6> r5779, iblech++ | * unEVALed t/builtins/control_flow/die.t.

[10:13] <^conner> someone give me a pugs example that works

[10:15] <iblech> ^conner: That works here fine :) GHC seems to have a bug

[10:15] <iblech> Did you precompile Test.pm?

[10:42] <svnbot6> r5780, iblech++ | PIL2JS: PIL::Parser -- Speed up parsing by a factor of 30 (!!) and fixed

[10:42] <svnbot6> r5780, iblech++ | parsing of the doublequoted string "\\".

[10:58] <^conner> iblech, I didn't

[10:59] <iblech> ^conner: Hm... FYI, compiling and using Pugs with GHC 6.4 on x86 Gentoo Linux works fine

[11:00] <jdv79> iblech, that has nothing to do with runtime, right?

[11:00] <^conner> iblech, I'm using GHC 6.4 as well... on amd64 thou

[11:01] <iblech> jdv79: Well, apparently GHC produces b0rked code on ^conner's box, as "scavenge_one: strange object 68" is not an error message of Pugs

[11:02] <iblech> ^conner: Ah! See "CAVEATS FOR x86_64 MACHINES" in INSTALL

[11:02] <^conner> in the GHC docs?

[11:03] <iblech> No, in the Pugs SVN repository

[11:03] <gaal> szabgab: try adding the parrot executable in your PATH

[11:03] <gaal> if that helped, parrot isn't being embedded, but does work in standalone mode

[11:03] <^conner> x86_64-unknown-linux

[11:03] <^conner>     GHC currently works unregisterised. A registerised port is in progress.

[11:04] <gaal> double-check that parrot *was* detected in your config

[11:07] <^conner> $ pugs +RTS -A200M -RTS -e 'say "boo"'

[11:07] <^conner> boo

[11:07] <^conner> silly garbage collections union

[11:08] <^conner> i wonder if the GHC guys are appreciating all this attention ;)

[11:10] <szabgab> p6 question: how do I read from STDIN ?

[11:11] <iblech> szabgab: my $line = =$*IN

[11:11] <iblech> (= is the iteration operator, and $*IN (or $IN) is STDIN)

[11:11] <iblech> food &

[11:12] <szabgab> thnx

[11:24] <szabgab> gaal: when I run perl Makefile.PL; make I see both -DPUGS_HAVE_PARROT and -DPUGS_HAVE_PERL5 so at least the Makefile thinks everything is ok, but then I don't see any sign of actually embedding them

[11:24] <svnbot6> r5781, iblech++ | PIL2JS:

[11:24] <svnbot6> r5781, iblech++ |   * [...] now really constructs a reference, making push @a, [1,2,3] work

[11:24] <svnbot6> r5781, iblech++ |     correctly.

[11:24] <svnbot6> r5781, iblech++ |   * Arrays stringify correctly now.

[11:24] <svnbot6> r5781, iblech++ |   * New: References, with correct stringification.

[11:24] <svnbot6> r5781, iblech++ |   * next(), last(), redo() outside a loop gives a visible error message now.

[11:26] <gaal> gabor: and the path?

[11:28] <szabgab> gaal: do you mean if it include parrot already ? then no

[11:29] <gaal> add it now and try

[11:29] <gaal> you don't need to rebuild pugs.

[11:29] <szabgab> I am in the middle of rebuilding it, so after that...

[11:30] <szabgab> ok, actually it finished building 

[11:31] <szabgab> @%@#@%# and it was not needed

[11:31] <szabgab> ./pugs -e 'eval q(print $]), :lang<perl5>'

[11:32] <szabgab> the above does not print anything BUT

[11:32] <szabgab> ./pugs -e 'eval q(print "$]\n"), :lang<perl5>'

[11:32] <szabgab> prints

[11:32] <szabgab> 5.008005

[11:32] <gaal> interesting, p5's stdout is not flushed when pugs exits

[11:33] <szabgab> it seems all the time it was there just because of the lack of newline we did not see the output

[11:33] <gaal> well, it's a good catch.

[11:33] <gaal> unfortunately i don't have a setup to try fixing this

[11:33] <szabgab> 6 hours wasted or what ? :-(

[11:33] <szabgab> but at least it works now :-)

[11:33] <gaal> yup!

[11:34] <szabgab> now back to the regular p6 coding, the first baby steps

[11:35] <szabgab> I think I should also get my hand on the python2parrot compiler and show that on AP4 (if they let me show anything)

[11:39] <gaal> nobody ever calls perl_free, but i'm not surethat's the cause of the problem. perl_destruct is called, after all.

[11:40] <gaal> gabor: what happens when you do this? ./pugs -e 'eval q(print $]), :lang<perl5>; say "now in p6"'

[11:41] <gaal> wanna try something out?

[11:41] <gaal> please vi src/Pugs/Embed/Perl5.hs

[11:41] <gaal> line 196

[11:41] <gaal> "perl_destruct my_perl"

[11:41] <gaal> please add after that

[11:41] <gaal> perl_free my_perl

[11:42] <gaal> same indentation

[11:42] <gaal> use 4 spaces, not a tab

[11:42] <gaal> then rebuild and try your original eval w/o the newline.

[11:42] <gaal> there is a chance that freeing the interpreter might trigger a fh flush.

[11:43] <gaal> hint: to speed up compilation, use 'make unoptimized'

[11:43] <gaal> (but this results in a slower pugs)

[11:44] <szabgab> wai, i am writing this e-mail, trying to put together the list of BigP: so far I have this: Perl5, Perl6, Parrot, Python, Pugs, PHP, Ruby, Tcl

[11:44] <gaal> take your time

[11:44] <gaal> i'll go eat something.

[11:45] <szabgab> btvon

[11:47] <QtPlatypus> (How come Ruby and Tcl are classed as "P", they start with with non P's)

[11:53] <szabgab> hmm, now that you mention :-)

[11:53] <szabgab> and I skipped Ponie...

[11:58] <szabgab> gaal: the above one liner did not help (still cannot see the results of p5), I am compiling pugs now

[12:07] <szabgab> gaal: I tried that change in src/Pugs/Embed/Perl5.hs but it did not help either

[12:21] <gaal> i don't know if that's a bug in pugs or in perl5 :)

[12:22] <szabgab> wow, Perl6 is great, it can even divide by 0 without a problem ! It gave me "Inf" in my pro

[12:22] <szabgab> ..gram

[12:22] <gaal> ....which is a bug, of course.

[12:23] <gaal> should have ben NaN.

[12:23] <szabgab> it does not do it always though

[12:23] <szabgab> so what should I do with this now ?

[12:24] <szabgab> btw in all the other cases I got some exception on 1/0

[12:24] <gaal> whittle down to a test case, add to t/operators/arith.t .

[12:25] <gaal> actually

[12:25] <gaal> it shouldn't be NaN

[12:25] <gaal> it should be a catchable exception.

[12:25] <gaal> see the bottom three tests there

[12:26] <gaal> what was the expression you used

[12:26] <gaal> ?

[12:28] <szabgab> gaal: the BOF was accepted, the lighning talk not yet, but I think it is in friendly hands

[12:29] <szabgab> I was writing a calculator: given $op { when "/" {say $a / $b}} 

[12:30] <szabgab> so now I need to write some text for the BOF and then find some people who are interested to spend their 4th of August showing Pugs to many potential hackers

[12:31] <szabgab> you know I am just thinking aloud :-)

[12:35] <szabgab> ok  should  1/ "0" be really Inf  ?

[12:37] <szabgab> is there a document about HACKING ? (e.g. that explains how to run tests individually ?)

[12:41] <gaal> sorry, i'm only here intermittently.

[12:41] <gaal> see pugs.kwiki.org

[12:42] <gaal> you can use prove to run one test

[12:42] <gaal> export HARNESS_PERL=./pugs

[12:42] <gaal> export PERL6LIB=blib6/lib

[12:42] <szabgab> ./pugs -Iblib6/lib t/operators/arith.t worked as well

[12:42] <gaal> and then prove -v t/someitnhg

[12:42] <gaal> yeah

[12:42] <Aankhen``> ?eval my @foo = <a b c d>; "@foo @foo[]"

[12:42] <evalbot6> '@foo a b c d' 

[12:42] <gaal> 1/0 should be an exception

[12:42] <gaal> that you can CATCH.

[12:43] <gaal> bbiab &

[12:43] <szabgab> ok, but this 0 was a string "0" probably that's the case

[12:43] * Aankhen`` BBL

[12:43] <szabgab> ? 1/ "0"

[12:43] <szabgab> ?eval 1 / "0"

[12:43] <evalbot6> Inf 

[12:45] <szabgab> ?eval 1 / ("0" + 0)

[12:45] <evalbot6> Inf 

[13:47] <QtPlatypus> ?eval 0/0

[13:47] <evalbot6> Error: Illegal division by zero 

[13:48] <QtPlatypus> ?eval -1/0

[13:48] <evalbot6> Error: Illegal division by zero 

[13:48] <QtPlatypus> ?eval 1/0

[13:48] <evalbot6> Error: Illegal division by zero 

[13:49] <QtPlatypus> ?eval 1/"0"

[13:49] <evalbot6> Inf 

[13:50] <QtPlatypus> ?eval "0"/"0"

[13:50] <evalbot6> NaN 

[15:20] <Khisanth> ?eval my @foo = 1..4; @foo.length

[15:20] <evalbot6> Error: No compatible subroutine found: "&length" 

[15:20] <svnbot6> r5782, iblech++ | PIL2JS:

[15:20] <svnbot6> r5782, iblech++ |   * Rewrote Hash code, hash references work now correctly (my $hash = {...}).

[15:20] <svnbot6> r5782, iblech++ |   * my %hash1 = %hash2 now copies the elements, one can use my %hash1 := %hash2

[15:20] <svnbot6> r5782, iblech++ |     if the elems should not be copied.

[15:20] <svnbot6> r5782, iblech++ |   * It's now possible to call methods on native JS objects even if their

[15:20] <svnbot6> r5782, iblech++ |     the nativenessness of the objects couldn't be detected at compile-time.

[15:20] <svnbot6> r5782, iblech++ |   * $*ERR.say(...) works now, needed for Test.pm to print the summary at the

[15:20] <Khisanth> ?eval my @foo = 1..4; @foo.elems

[15:20] <svnbot6> r5782, iblech++ |     end of tests.

[15:20] <evalbot6> 4 

[15:20] <svnbot6> r5782, iblech++ |   * END {...} blocks work now.

[15:20] <svnbot6> r5782, iblech++ |   * &prefix:<\> (reference taking operator) works correctly now.

[15:20] <svnbot6> r5782, iblech++ |   * Fixed &shift and &pop to work correctly with array references.

[15:32] <svnbot6> r5783, iblech++ | PIL2JS: PIL2JS.js -- Flattening of hashes works now (&prefix:<*>, e.g. foo(*%hash)).

[15:42] *** Aankh|Clone is now known as Aankhen``

[15:55] *** osfa is now known as osfameron

[16:04] <svnbot6> r5784, iblech++ | PIL2JS:

[16:04] <svnbot6> r5784, iblech++ |   * Added &exists and &delete (capable of working on arrays and hashes).

[16:04] <svnbot6> r5784, iblech++ |   * Stringification of the result of calling &delete does not work yet -- I'll

[16:04] <svnbot6> r5784, iblech++ |     track this bug down tomorrow.

[16:08] <iblech> FYI, http://m19s28.vlinux.de/iblech/stuff/not_perm/pil2js-demo/t/ (updated) -- Our testsuite compiled to JS

[16:09] <iblech> Have to go now &

[16:19] <masak> ?eval class Test { has @.b is rw } my $t = Test.new(:b(1,2,3)); shift $t.b

[16:19] <evalbot6> Error: Can't modify constant item: VUndef 

[16:19] <masak> this should work, shouldn't it?

[16:20] <Khisanth> probably, I have been having some problems modifying array elements

[16:56] <masak> Khisanth, do you know if there is a test committed on this?

[17:10] <masak> yes; there appears to exist such a test, in t/pugsbugs/attribute_list.t

[17:53] <svnbot6> r5785, Stevan++ | Perl6.MetaModel - (JS version)

[17:53] <svnbot6> r5785, Stevan++ | * Perl6.Object created and tested

[17:53] <svnbot6> r5785, Stevan++ |    - objects initialize properly with attributes

[17:53] <svnbot6> r5785, Stevan++ |    - attribute accessors/mutators work correctly

[17:53] <svnbot6> r5785, Stevan++ | The basic metamodel is now working :)

[17:53] <svnbot6> r5785, Stevan++ | still TODO:

[17:53] <svnbot6> r5785, Stevan++ |    - class attributes

[17:53] <svnbot6> r5785, Stevan++ |    - Role support

[17:53] <svnbot6> r5785, Stevan++ |    - next METHOD support

[18:17] *** Aankh|Clone is now known as Aankhen``

[20:41] <Aankh|Clone> G'night.

