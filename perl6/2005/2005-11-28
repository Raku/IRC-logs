[01:55] <autrijus> # http://use.perl.org/~autrijus/journal/27759

[01:57] <wolverian> hello, autrijus :)

[01:57] <autrijus> greetings :)

[01:58] <wolverian> yow, that's not much money. sorry to hear that.

[02:02] <autrijus> it's okay... I'm not selling organs yet

[02:03] <autrijus> it should pass soonish in early december.

[02:03] <wolverian> that's good to hear. 

[02:05] <autrijus> on the plus side, this forced me to really write legible analysis/design/requirement/planning documents, which might come in more handy than visio diagrams for pugs :)

[02:06] <autrijus> mm, 10am already. gotta get to $job. bbl

[02:07] <autrijus> take care... I'll survive this :) &

[02:10] <malverian> autrijus: Woo..

[02:13] <malverian> autrijus: Is there any way to use pp on a Linux host to cross-compile to win32?

[02:14] <autrijus> malverian: if you use no XS modules, pp --par would work. if you do use XS modules, then probably not

[02:14] <autrijus> (as it would require a win32 @INC tree somewhere and probing for it)

[02:14] <autrijus> it's possible to hack this support into PAR in the same way perl2exe does... want a commit bit?

[02:15] <malverian> autrijus: Getting the win32 tree is no problem (I've copied it from an activeperl install), just was curious if pp can be told to look for the win32 libs and to output a win32 compressed exe

[02:16] <autrijus> basically, if your win32 tree contains bin/par.exe, and you can somehow trick /usr/local/bin/par into believing it's par.exe, then it'd just work

[02:16] <autrijus> (it requires installing PAR on the win32 tree first)

[02:16] <malverian> autrijus: Gotcha..

[02:16] <malverian> autrijus: I do have that as well.

[02:16] <autrijus> but the $Config{so} would be wrong so .dll probing may be a problem

[02:17] <autrijus> i.e. it'd be trying to include .so not .dll files

[02:17] <obra> We really need the next rev of PAR-related tools

[02:17] <autrijus> so you need to use the target's %Config as well

[02:17] <autrijus> that's all

[02:17] <autrijus> obra: like, a portable bytecode? ;)

[02:17] <obra> heh

[02:17] <obra> no.

[02:17] <autrijus> (which would Just Fix everything)

[02:17] <obra> I'm still good with p5 ;)

[02:18] <malverian> autrijus: If I made a patch that would allow a runtime option to use onfig from a specific host, would you make use of it?

[02:18] <malverian> Eg.. --config-host=win32 or some such.. (I've not looked at the internals of par/pp so I don't know what names/flags would be relevant, but if I take the time to do so, I'll send you a patch.

[02:19] <autrijus> no, I won't make use of patches

[02:19] <malverian> I just wanted to be sure there wasn't already a hidden feature that did this before I put time into it.

[02:19] <autrijus> a commit bit is on your way

[02:19] <autrijus> svn repo is http://svn.openfoundry.org/par/trunk

[02:19] <autrijus> just commit ahead :)

[02:20] <autrijus> consult [email@hidden.address] for design discussions if you need, but otherwise just commit

[02:20] <wolverian> sigh. university is hampering my sleep schedule. why should I sleep at nights? these are the best hours.

[02:20] * malverian nods.

[02:20] <autrijus> malverian at gentoo org?

[02:21] <malverian> That's me, but I prefer: perl at rabidgeek com

[02:22] <autrijus> ok, drop the first committer bit invitation mailthen and answer then second

[02:22] <malverian> I'll see if I can get something working tonight before the woman finishes her drawing assignment.

[02:23] <autrijus> you are a metacommitter; so if you feel like to enlist others, invite them as admins too at http://rt.openfoundry.org/Foundry/Project/Admin/Members/?Queue=28

[02:23] <autrijus> good luck... I really need to run to work.

[02:24] <autrijus> &

[02:25] <malverian> Thanks autrijus, have a good one.

[02:38] *** scw_ is now known as scw

[02:46] <malverian> This is going to be difficult.. oy.

[04:10] <ex-chip> hi all.

[04:10] *** ex-chip is now known as chip

[04:10] <chip> (ping anybody who knows about Pugs Parrot targeting)

[04:28] <d3mi4n> jh

[04:31] <Khisanth> hmm this parrot build looks a bit strange

[04:32] <Khisanth> in fact it looks like it's trying to fork an infinite number of procs :)

[04:32] <chip> well, that would be strange ... for most programs

[04:36] <Khisanth> this was just from trying to do a "make clean" :/

[04:42] <Khisanth> ah had to rerun Configure.pl

[05:48] <autrijus> chip: I have ~5 minutes if that helps :)

[05:49] *** _brentp is now known as brentp

[05:50] <obra> autrijus: don't forget: parrot sketch in 12 hours

[05:56] <autrijus> obra: roger

[06:12] <obra> :)

[06:18] <nothingmuch> autrijus: ping

[06:24] <autrijus> nothingmuch: pong

[06:24] <nothingmuch> unwelcome forward to reality, or something... weird journalling

[06:24] <nothingmuch> but seriously

[06:24] <nothingmuch> Term::VT102::Boundless

[06:24] <nothingmuch> it's on the CPAN and HTML::FromANSI should use it

[06:24] <nothingmuch> want to give me comaint?

[06:25] <autrijus> giving

[06:25] <nothingmuch> yummy fufu

[06:25] <nothingmuch> anyway, i must be off to work

[06:25] <nothingmuch> feel better, autrijus-san

[06:25] <autrijus> danke

[06:25] * autrijus is @ work and is about to go out as well

[06:26] <gaal> autrijus: hi, missing context for your troubles but hope things get better :-)

[06:26] <autrijus> it will :)

[06:26] <autrijus> nothingmuch: comaintainership is yours. enjoy!

[06:26] * autrijus waves &

[06:26] <nothingmuch> ciao!

[06:26] <nothingmuch> gaal: journal

[06:27] <gaal> yours? i saw that entry the other day...?

[06:27] <nothingmuch> no

[06:27] <nothingmuch> autrijus's

[06:30] <nothingmuch> why is CPAN so slow

[06:30] <gaal> see /msg

[06:30] <Khisanth> there were a bunch of comments yesterday about PAUSE being paused :)

[06:31] <nothingmuch> aye

[06:31] <nothingmuch> since yesterday i've uploaded 6 new modules

[06:31] <nothingmuch> so i'm very upset about this =)

[06:33] <obra> heh

[06:33] <obra> what's your favorite?

[06:33] <nothingmuch> fav?

[06:33] <obra> of the new modules

[06:34] <nothingmuch> oh

[06:34] <nothingmuch> possibly Catalyst::Plugin::Session::PerUser for it's DWIM goodness or Catalyst::Plugin::Authorization::ACL because it's hella-cool

[06:36] <obra> I'll have to have a look

[06:36] <obra> and next month, I'll have to sell you on something better than Catalyst ;)

[06:44] <obra> What are you using for cat sessions?

[06:47] <nothingmuch> Catalyst::Plugin::Session

[06:47] <nothingmuch> (which I also wrote ;-)

[06:47] <nothingmuch> gotta go to work

[06:49] <obra> ok

[06:49] <obra> It'd be cool to have a good base session handler that's not tied to one framework

[09:39] <r0nny> yo

[09:40] <r0nny> is therre a way, to find the name of the actual script with full path ?

[09:41] <azuroth> what's the runtime twigil? @?

[09:43] <wolverian> ? I think

[09:43] <azuroth> S05 thinks that's "compiler hint". hmm

[09:44] <azuroth> oh well. r0nny: I'd expect it might be in $+OS or $?OS or something?

[09:44] <wolverian> S02 you mean?

[09:45] <azuroth> heyy, good catch

[09:45] <azuroth> don't know why I thought this page I had open was 5, not 2...

[09:45] <wolverian> maybe you had it open backwards 

[09:45] <azuroth> hehehe

[09:47] <azuroth> $?OS - os compiled under $*OS - os running under. cool

[09:47] <wolverian> hum. then it's * 

[09:47] <r0nny> bur whgat about the script name ??

[09:48] <azuroth> I can only imagine it's in one of the fancy * global vars

[09:48] <gaal> ?eval $*PROGRAM_NAME

[09:49] <gaal> yoohoo? evalbot?

[09:50] <gaal> anyway, r0nny, if you want to peek these things are mostly defined in Pugs.Run

[09:50] <r0nny> DARN

[09:51] <r0nny> $?FILE is allways the actual file

[09:51] <wolverian> shouldn't that be the file it was originally compiled to? ;)

[09:51] <r0nny> and it hasnt got the fill path

[09:52] <r0nny> full

[10:08] <r0nny> what is the difference betwen a module, and a class - after reading some stiff i got problems understanding

[10:10] <r0nny> anyone ??

[10:12] <wolverian> module is not OO. ;)

[10:13] <r0nny> hmm

[10:13] <r0nny> hmm

[10:13] <r0nny> File::Fils locks as if it was oo

[10:15] <r0nny> btw - would it mind if i define classes like class FOO:BAR::BAZ; ??

[10:16] <r0nny> S12 tells something about - but im not sure what it means

[12:59] <nothingmuch> autrijus: ping

[13:56] <gaal> ?eval "it's alive!"

[13:56] *** Aankh|Clone is now known as Aankhen``

[13:57] <gaal> who runs evalbot?

[13:57] <Aankhen``> iblech?

[14:18] <rafl> gaal: lpalmer, afaik.

[16:49] <gaal> are junction eigenstates specified in p6?

[16:50] <robkinyon> i remember reading something about them in the appropriate apocalypse/synopsis

[16:50] <robkinyon> but, i don't think it's being implemented as Q::SP is in P5

[16:51] <gaal> L<S02/Junctive Operators> doesn't mention them.

[18:49] <chip> autrijus: I was given to understand that all gcc platforms implement exceptions with a static table, but perhaps it's only the ELF/DWARF targets

[18:50] <chip> the idea is to register try{} areas and corresponding catch labels with a static table, since the try areas are actually known at compile time in their entirety

[20:20] <svnbot6> r8012 | fglock++ | * /docs/notes/laziness.txt - "List" vs "Tuple"; 

[20:20] <svnbot6> r8012 | fglock++ |   reorganization of sections.

[20:20] <svnbot6> r8013 | kane++ |  * update section on dependency engine, add explenations

[20:20] <svnbot6> r8013 | kane++ |  * add section on repo_* scripts and pretty printers

[20:20] <svnbot6> r8014 | kane++ | * new update date -- major change

[20:31] <fglock> why are the commits being resubmitted sometimes? (I didn't send r8012)

[20:32] <obra> maybe an smerge?

[20:35] <fglock> hi obra

[20:36] <obra> hey flavio

[20:37] <dduncan> fglock, ...

[20:37] <dduncan> that same problem has happened to me, twice so far

[20:37] <dduncan> seems svk related ... it never happened with plain svn

[20:38] <dduncan> and it happened when using 'svk push'

[20:38] <integral> .oO( svn doesn't have smerge )

[20:38] <dduncan> I assume yours cited some files with a flag 'g'?

[20:39] <fglock> dduncan: I'm using svn, and sometimes TortoiseSVN, but not svk

[20:40] <DesreveR> yo

[20:41] <dduncan> I used plain svn in the past, and moved to plain svk a month ago

[20:42] <fglock> did anyone read laziness.txt? there are some concepts I'm not sure about

[20:43] <dduncan> fglock, unless you never committed those changes at all, this actually isn't a duplicate

[20:43] <dduncan> svnbot6 is just late in reporting them ... I downloaded those updates an hour ago

[20:43] <dduncan> according to my log, they only appeared once

[20:43] <dduncan> 8012 thru 8014

[20:43] <fglock> dduncan: the latest commit was >24h

[20:43] <dduncan> so svnbot was late

[20:44] <dduncan> unless you can cite 2 commit numbers with the same change, there was no duplicate ...

[20:44] <dduncan> by contrast, the 2 times I said it happened to me, there were 2 commit numbers for each

[20:45] <fglock> dduncan: found it - there is the same message in the IRC log yesterday, about 10:00

[20:46] <geoffb> Doesn't svnbot have a habit of reporting "recent" commits when it reconnects?

[20:48] <dduncan> yes, svnbot reported it twice, but note that the commit number is the same, 8012, so the commit only occurred once

[20:48] <dduncan> that's the important part

[21:07] <integral> the revision number is unique in the repository fglock.  If there's only one number, it only happened once.   Stuff that happens on IRC has little relevance to what's really happening :)

[21:09] <fglock> I've missed the discussion that added 'tuple' to the language - I'd like to know what was the reason, and find out if my definition makes sense

[21:34] *** Lopo_ is now known as Lopo

[23:41] <nothingmuch> spam spam spam http://use.perl.org/~nothingmuch/journal/27778 spam spam

[23:42] <Limbic_Region_> I bet theorbtwo will be interested in that spam

[23:42] <Limbic_Region_> he entered the same contest but didn't fare as well

[23:42] <nothingmuch> he can actually be found lurking on #mightyv on irc.perl.org ;-)

[23:43] <Limbic_Region_> heh

[23:43] <Limbic_Region_> as soon as I pointed out that entry he thought they might win

[23:44] <nothingmuch> well, nighty night

[23:45] <nothingmuch> time to go zzzzzz

