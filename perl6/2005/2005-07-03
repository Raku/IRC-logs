[00:00] <geoffb> Once again, I have been led astray by contextual confusion.  ;-)

[00:00] <Darren_Duncan> people seem to say God's name between every other word when they're excited about something ... it has entered common usage ... but it isn't "right"

[00:00] <Darren_Duncan> which has the strange result of people that don't even believe God exists still saying the name in every sentence, like "oh god oh god oh god ..."

[00:00] <luqui> geoffb, I kind of understand what you mean

[00:01] <luqui> in particular, I think Perl 6 makes it too easy to create confusing interfaces without noticing

[00:01] <geoffb> Darren_Duncan, heh

[00:01] <geoffb> luqui, nodnod

[00:02] <Darren_Duncan> as far as my own work goes in using Perl 6 short term ...

[00:03] <Darren_Duncan> while I greatly appreciate all of its new features, I still prefer that any reasonable assumptions I make in perl 5 will still hold true in perl 6

[00:04] <Darren_Duncan> for example, that when you have a reference to something, simply assigning it to a variable, or passing it as a function arg, or returning it from a function, will return a copy of that reference, and not unwrap it or wrap it or anything like that

[00:04] <Darren_Duncan> that's how both Perl 5 and various other languages like Java do it, and that's the default behaviour I want in Perl 6

[00:04] <geoffb> Yes, that's the kind of stuff I was referring to, Darren_Duncan 

[00:04] <Darren_Duncan> having easy support for references is essential for making any complicated program

[00:05] <luqui> there is no autoenreferencing

[00:05] <luqui> er, autoderef

[00:05] <luqui> whoops

[00:05] <luqui> references will stay reference

[00:05] <luqui> s

[00:05] <Darren_Duncan> I'm debating whether I should say the last few things on p6l, or whether they already make the same assumptions

[00:07] <geoffb> luqui, what is supposed to happen when you feed a reference to one type of container to a sub expecting a different type of container (but for which there is a defined DWIM conversion)?

[00:07] <geoffb> Is it a type failure or an auto-conversion?

[00:08] <luqui> as in:  sub foo (@a) { }  my $x = [1,2,3];  foo($x)  ?

[00:08] <geoffb> I was thinking something closer to sub foo (%a) 

[00:08] <Darren_Duncan> my opinion is that the type signiture of the function argument should specify what happens

[00:08] <geoffb> (and $x having even element count, of course)

[00:09] <luqui> that would be an error

[00:10] <Darren_Duncan> alternately, I would say that no conversion or only very simple conversions should happen by default ... it should be very predictable, and the syntax simplest for the common case

[00:10] <Darren_Duncan> essentially, more verbose syntax means change more, less verbose means change less or not at all

[00:11] <geoffb> So if I wanted to force the conversion, what should I do (at the caller location)?  Do I have to manually build a hashref before the call to foo?

[00:11] <Darren_Duncan> maybe ... but doing so is easy

[00:12] <Darren_Duncan> I still think that having zero conversion is the best option if nothing in the code explicitly says to do differently

[00:12] <Darren_Duncan> and if there is a type mismatch ... its an error

[00:12] <geoffb> No argument there, I just want to know what the current rules are.  :-)

[00:12] <luqui> geoffb, I think you do

[00:12] <luqui> foo hash @$x

[00:13] <Darren_Duncan> why would anyone do that?

[00:13] <luqui> if @$x is an alternating k/v list

[00:13] <luqui> or a list of pairs

[00:13] <geoffb> Darren_Duncan, what luqui said.

[00:13] <geoffb> Impedence matching of APIs, fer instance

[00:14] <Darren_Duncan> it will take more thought on my part ... but sometimes I think some of this autoconversion stuff is meant to make certain simple programs shorter, but everything else, including large programs, more difficult

[00:15] <Darren_Duncan> or alternately, a feature that's good for a marketing talk but poor in actual work

[00:15] <geoffb> My general preference is proper huffman-coding of a basic semantic that does exactly what you say.

[00:16] <geoffb> The more I say, the more it helps the optimizer and compile-time checks, but it should not change the meaning of the program to be more precise.

[00:16] <Darren_Duncan> I like the new Perl 6 feature that lists will not flatten unless you preceed with '*' or suffix with '[]'

[00:16] <geoffb> I very commonly build medium sized programs by starting with a one-liner, and slowly adding to it.  I want that method of working not to suck.

[00:17] <geoffb> Darren_Duncan, agreed.

[00:17] <luqui> Darren_Duncan, but, they do flatten if they are in a flattening context

[00:18] <luqui> but that arguably happens on the callee side

[00:18] <Darren_Duncan> fyi, the kind of programs I work with routinely use multi-dimensional (as in, structure of structure...) data structures, where all but the root structure is always references anyway, and so I often like to make the root a reference too, keeping everything consistent, and using those everywhere

[00:18] <geoffb> luqui, that would *have* to semantically happen on the callee side, I would think.

[00:19] <geoffb> Darren_Duncan, ditto.

[00:23] <meppl> why is there a problem with implementing eval correctly?

[00:24] <luqui> where?

[00:24] <luqui> you mean on parrot?

[00:24] <meppl> i dont know ;)

[00:24] <luqui> well, give me more info about your question then. what made you think it?

[00:24] <meppl> it does not work

[00:25] <luqui> example code?

[00:25] <meppl> # pugs hangman.p6

[00:25] <meppl> pugs: user error (*** No compatible subroutine found: "&eval"

[00:25] <meppl>     at ../../ext/File-Spec/lib/File/Spec.pm line 15, column 5-36)

[00:25] <luqui> oh, that's interesting

[00:26] <luqui> you don't have BYPASS_PRELUDE set do you?

[00:26] <luqui> rather, PUGS_BYPASS_PRELUDE

[00:27] <meppl> so, since today it does not work

[00:27] <meppl> emh, i dont know ;)

[00:27] <luqui> once my pugs finishes compiling, I'll look at the svn logs

[00:28] <luqui> see if there's anything conspicuous

[00:30] <meppl> <clkao> Failed 167/350 test scripts, 52.29% okay. 1704/6131 subtests failed, 72.21% okay.

[00:30] <meppl> <clkao> lots of failures

[00:30] <meppl> <dudley> It looks like &eval is broken

[00:30] <meppl> <geoffb> That's one way to get faster.  ;-)

[00:30] <luqui> hmm

[00:31] <dudley> I get the same error for "&open" and "&Pugs::Internals::check_for_io_leak", too.

[00:31] <luqui> hmm, perhaps the prelude was disabled

[00:31] <luqui> both eval and open are defined in prelude

[00:32] <dudley> I'm assuming this has something to do with the precompiled Prelude...

[00:34] <dudley> Is there a way to disable it, and use the old one instead?

[00:35] <luqui> precompiled prelude is news to me

[00:38] <dudley> It was committed early this morning, I think.

[03:27] <svnbot6> r5151, Stevan++ | Perl6-MetaModel : adding SubMethod class; changed the MetaModel to use SubMethod for any BUILD methods; creating a new instance will pass all %params from new_instance into the BUILD methods (we need a BUILDALL method really); thats about all for now, time for some sleeping :)

[03:46] <svnbot6> r5152, putter++ | Improved MatchX description.

[03:46] <tainted-> where can i find a tutorial on installing CPAN modules?

[03:47] <wolverian> tainted-: perldoc CPAN. you probably want #perl, not #perl6, for such questions.

[03:47] <Khisanth> perlbot: life with cpan > tainted-

[03:48] <wolverian> perlbot: life with cpan > wolverian

[03:52] <svnbot6> r5153, Stevan++ | Perl6-MetaModel : added several items to the TODO list after skiming over Syn/Apoc 12 again; I think I might need to take some of these to p6l; anyone with time and knowledge is encouraged to review and respond, thanks

[04:06] <svnbot6> r5154, putter++ | Added ^,^^,$,$$,literal,<before>, and <after> to rx_grammar.pl

[04:37] *** theorbtw1 is now known as theorbtwo

[05:08] <gaal> morning!

[05:11] <theorbtwo> G'morning, gaal.

[05:15] <pasteling> "gaal" at 192.115.25.249 pasted "Prelude status" (11 lines, 528B) at http://sial.org/pbot/11497

[05:15] <gaal> Prelude is broken: http://sial.org/pbot/11497 | 6.2.7 released! | http://pugscode.org/ <Overview Journal Logs> | http://pugs.kwiki.org | paste: http://sial.org/pbot/perl6 | Chip needs help!!! http://www.geeksunite.net 

[05:15] <spinclad> layla tova, gaal

[05:15] <geoffb> morning, gaal

[05:15] <gaal> grrrrrrrrrr

[05:15] <gaal> boker tov

[05:16] <gaal> why doesn't /topic work?

[05:16] * geoffb FINALLY finishes article draft

[05:16] <geoffb> man that was like bleading through my forehead

[05:16] <geoffb> bleeding even

[05:17] <gaal> geoffb, what's it on?

[05:17] <gaal> TO2: hi! how was TO? (heh.)

[05:17] <geoffb> OpenGL and SDL_Perl -- fourth in a series on perl.com.

[05:17] <geoffb> Of course, I still have to do an editing pass tomorrow, then forward to chromatic to get his edits . . . .

[05:18] <geoffb> But the hard part is now done, so I feel MUCH better.

[05:18] <gaal> editing becomes much eaiser when you manage to divorce it from the writing phase

[05:18] *** theorbtwo changes topic to: Prelude is broken: http://sial.org/pbot/11497 | 6.2.7 released! | http://pugscode.org/ <Overview Journal Logs> | http://pugs.kwiki.org | paste: http://sial.org/pbot/perl6 | Chip needs help!!! http://www.geeksunite.net

[05:18] <geoffb> nodnod

[05:18] <gaal> thank you, theorbtwo.

[05:19] <gaal> write - edit - write - edit - write - edit - get fed up and edit no more :)

[05:19] <geoffb> Once I've handed it off to chromatic, I'll get back to trying to get it to work in Perl 6.  ;-)

[05:19] <geoffb> NODNOD

[05:20] <geoffb> (Last time I tried, pugs' Perl 5 integration fu was not yet strung enough.)

[05:21] <theorbtwo> Wow.  Chip looks pretty fucked.

[05:21] <geoffb> And chromatic has also since sent me a Parrot patch to get Parrot SDL to handle OpenGL as well, so that might be worth trying also.

[05:24] <geoffb> Well, I think I'm going to call it a night, and enjoy my wife's just-baked banana bread.

[05:24] <geoffb> :-)

[05:24] <gaal> cool stuff :)

[05:24] <geoffb> g'night, all

[05:24] <gaal> bye, geoff

[05:28] <cwest> http://www.openjsan.org/doc/CWEST/JSAN/0.01/lib/JSAN.html -- o/` rollin rollin rollin o/`

[05:29] <gaal> if that's what i think it is, wow!

[05:29] <gaal> s/peaking/peeking/

[05:30] <cwest> I think it could be. :-)

[05:33] * gaal gets ready for $work

[05:33] <theorbtwo> Looks like it is.

[05:34] * cwest & # ready for bed (next week brings more jsan)

[05:44] <Odin-LAP> Hmm. JSAN ... an interesting idea.

[05:45] <Odin-LAP> Next step, Ecma-262 implementation for Parrot? :p

[05:46] <theorbtwo> Makes sense to me.

[05:47] <theorbtwo> ...not that I'm about to start working on it.

[05:48] * Odin-LAP wants one, but isn't really familiar enough with either Parrot or JavaScript to do it. :p

[06:08] <ingy> hola

[06:10] <theorbtwo> Hola, ingy.

[06:10] <ingy> hi theorbtwo 

[06:11] <theorbtwo> All home and decompressed yet?

[06:22] *** shachaf_ is now known as Shachaf

[06:45] <ta[i]nted> can anyone help me with a general perl question?

[06:46] <Khisanth> that would be more for #perl than  #perl6 unless you are asking about Perl 6 :)

[06:47] <ta[i]nted> i can't seem to speak in #perl

[06:49] * Khisanth checks logs

[06:49] <ta[i]nted> i just need to connect to a ms sql database instead of mysql

[06:54] <Khisanth> a non specific +q directed specifically at you ...

[07:22] <gaal|work> rehi

[10:04] <QtPlatypus> Why can't I create and call a sub called pack?

[10:04] <gaal|work> worksfom

[10:04] <gaal|work> e

[10:05] <gaal|work> ./pugs -e 'sub pack {say "hoo"}pack()'    => "hoo"

[10:06] <QtPlatypus> Ok.

[10:08] <gaal|work> i think autrijus' plane just landed.

[10:11] <QtPlatypus> Ok I see the problem.  If you "use" a file with the same name as the sub it doesn't quite work. 

[10:12] <gaal|work> does the fully qualified name work? pack::pack()

[10:12] <gaal|work> autrijus fixed something to do with this then had to revert the fix

[10:13] <gaal|work> brb, time for the weekly reboot :)

[10:43] <svnbot6> r5155, qtplatypus++ | A start on Perl6 rules to parse Perl6.  The rules to match littral

[10:43] <svnbot6> r5155, qtplatypus++ | numbers in code are here.

[10:45] <nothingmuch> morning

[10:45] * nothingmuch 's flight didn't go so well after all

[10:45] <nothingmuch> air canda also overbooked

[10:45] <nothingmuch> so now I am back with malev airlines

[10:45] <nothingmuch> in budapest

[10:45] <nothingmuch> 24 hours late, and not much more

[10:45] <nothingmuch> the good news is that Test::TAP::HTMLMatrix is now mostly javascript free

[10:45] <nothingmuch> except for the + and - buttons

[10:46] <nothingmuch> and it supports stevan's display mode

[10:46] <nothingmuch> darcs pull to satisfy your test graphing desires.

[10:54] <Boogie> nothingmuch: still in Budapest, or at home? :)

[10:54] <svnbot6> r5156, qtplatypus++ | Updating the valid number recipie to make use of the "sel f hosting" 

[10:54] <svnbot6> r5156, qtplatypus++ | rules in modules/Grammer/Perl6.pm

[10:55] <nothingmuch> Boogie: i'll be in budapest for another 11 hours.

[10:55] <nothingmuch> anybody want to donate some basic pod_coverage pleasing docs for Test::TAP::HTMLMatrix?

[10:55] <Boogie> Then welcome to Hungary. But I think you're not happy with it. :)

[10:55] <nothingmuch> you'll get about 1/10th authorship byh being added to an already long list

[10:55] <nothingmuch> Boogie: well, i'm torn

[10:55] <nothingmuch> i'm happy to be out of toronto (finally!)

[10:56] <nothingmuch> but not happy to not be home yet

[10:56] <nothingmuch> i don't really have a chance to see hungary itself, just the airport, and airports always suck

[10:56] <Boogie> :(

[10:56] <nothingmuch> it is note worthy that the cattle prodding in budapest is by far the most pleasant i have ever experienced

[10:57] <nothingmuch> i think in recent years US is the most annoying, and frankfurt is the most unpleasant.

[10:58] <QtPlatypus> ?eval sub foo { my class bar { } } bar.new()

[10:58] <evalbot6> *** No compatible subroutine found: "&eval"     at -e line 8, column 5-72 

[10:58] <nothingmuch> Boogie: so what am I missing in hungary?

[10:58] <QtPlatypus> Oh evalbots still deadd.

[11:00] <Boogie> nothingmuch: well, it depends on what you're interested in. :) We have the Danube, and the Castle on the Buda side of it, the Parliament, Hero's Square. Nice, hundred+ years old buildings, etc. 

[11:01] <Boogie> We have good wines, too.

[11:01] * nothingmuch sighs longingly for scenic views and good food

[11:01] <nothingmuch> the airport has sbarro

[11:02] <nothingmuch> to make sbarro take

[11:02] <nothingmuch> a. italian food

[11:02] <nothingmuch> b. oil

[11:02] <nothingmuch> c. more oil

[11:02] <nothingmuch> and combine

[11:02] <Boogie> Bah. :( I don't like airport food. It's very expensive, and usually just junk food.

[11:02] <nothingmuch> right

[11:02] <nothingmuch> that's why I'm having beer for lunch

[11:04] <Boogie> Anyway, how did you get net connection? Finally they setup wifi there?

[11:04] <nothingmuch> yup

[11:04] <nothingmuch> there's t-mobile which want money

[11:04] <nothingmuch> and pannongsm which have better reception, and are free

[11:04] <QtPlatypus> Damn can't seem to create lexically scoped classes.  (Reads A12 to see if there is supposed to be a way to do this)

[11:05] <nothingmuch> QtPlatypus: in the hackathon larry explicitly said there should be, if my memory serves me well

[11:05] <nothingmuch> then again, it could be the sleep deprevation

[11:05] * QtPlatypus finds it.

[11:05] <QtPlatypus> our class name {...}

[11:06] <QtPlatypus> I was expecting it to by my class name

[11:06] <nothingmuch> uh, that should be 'my'

[11:06] * Boogie going to have lunch

[11:07] <nothingmuch> bon apetite

[11:07] <Boogie> thx

[11:31] * masak is reading the harrorth tutorial

[11:31] <masak> nothingmuch++ # for the harrorth tutorial

[11:34] <masak> nothingmuch: how well has writing the tutorial helped you learn haskell?

[11:36] <nothingmuch> masak: i progressed a bit during the hackathon, but other ventures have been more demanding

[11:37] <nothingmuch> i'll get back to it soon

[11:37] <nothingmuch> the next step is taking a forth machine, written almost completely in forth

[11:37] <nothingmuch> and support it in haskell

[11:37] <nothingmuch> thus forcing haskell into an either lower level scenario, and learning more

[11:37] <nothingmuch> anyway, i need to find a power outlet

[11:37] <nothingmuch> bbiab

[11:38] <masak> nothingmuch: i'm looking to learn haskell in order to be able to contribute more to pugs code

[11:38] <masak> and trying to find the shortest path between where i am and haskell knowledge

[11:43] <nothingmuch> outlet found

[11:45] <masak> wb

[11:45] <masak> nothingmuch: i think your approach (implementing something) is a sound way to learn a language

[11:46] <masak> thing is, i don't know enough about haskell to know what is a good problem to attack

[11:48] <nothingmuch> masak: it's been working well so far

[11:48] <nothingmuch> for me

[11:48] <nothingmuch> haskell has been too pure and theoretical

[11:48] <nothingmuch> i could go through the tutorials

[11:49] <nothingmuch> get all the excercises right

[11:49] <nothingmuch> and in the end i still won't feel like i've learned anything

[11:51] <pdcawley_> There's definitely something about having a 'real' project for getting your learning onto a higher level isn't there?

[11:51] <pdcawley_> s/'//g

[11:53] <masak> pdcawley_: yes. question is, what?

[11:53] <masak> i want something which is small enough to manage

[11:53] <masak> but not trivial

[11:53] <masak> is it a good idea to write games in haskell?

[11:54] <masak> nothing fancy, just tic-tac-toe or something...

[11:54] <pdcawley_> Sudoku solver?

[11:55] * masak googles for sudoku

[11:56] <masak> pdcawley_: good idea

[12:00] <gaal|work> hey, nm, welcome halfway home!

[12:28] <nothingmuch> hola gaal|work 

[12:44] <masak> i have concluded that the difference between haskell and other difficult subjects is that in haskell, i can't tell the difference between understanding and not understanding something

[12:45] <lumi> I often find myself in an understanding superposition

[12:47] <masak> lumi: i think that's where i am too now

[12:47] <masak> between understanding and not understanding

[12:47] <masak> i don't dare collapse the wavefunction, though

[12:52] <masak> from nothingmuch's tutorial: "It's all really some seemingly pointless ping pong." i like that, it describes what's going on in my head when i read 06.kwid

[12:56] <nothingmuch> how far along are you?

[12:56] <masak> nothingmuch: i just read this "(Reader r) >>= f = Reader $ \e -> (runReader (f (r e))) e"

[12:57] <masak> i'm getting scared :)

[12:57] <nothingmuch> ah

[12:57] <nothingmuch> that is good stuff.

[12:57] <masak> is haskell defined by humans?

[12:57] <nothingmuch> it's important to keep in mind that the first >>= in a reader action is the one that returns the function

[12:57] <nothingmuch> the rest is chained

[12:57] <nothingmuch> yes, crazy ones

[12:57] <masak> :)

[12:58] <masak> i'll keep that in mind when reading

[13:12] <nothingmuch> seen chromatic

[13:12] <jabbot> nothingmuch: chromatic was seen 3 days 7 hours 5 minutes 44 seconds ago

[13:12] <nothingmuch> eep

[13:13] <pdcawley_> So, what does that do/define?

[13:16] <masak> fwiw, i can see that autrijus' patch simplifies things

[13:18] <meppl> when is somebody there who can/wants repair the broken &eval and &open? :/

[13:19] <gaal|work> meppl: see topic

[13:20] <gaal|work> you can work around that by putting 'use Prelude' at the top of your code

[13:20] <gaal|work> you'll need Prelude.pm in your @*INC (not there by default)

[13:20] <gaal|work> the real fix would involve -CPugs

[13:20] <gaal|work> hope that helps :)

[13:21] <masak> seen autrijus

[13:21] <jabbot> masak: autrijus was seen 1 days 3 hours 28 minutes 4 seconds ago

[13:21] <meppl> oh i surveyed it

[13:22] <meppl> gaal, thx

[13:22] <gaal|work> np

[13:26] * nothingmuch needs volunteers

[13:30] <scook0> nothingmuch: volunteers for what?

[13:31] <nothingmuch> better docs for Test::TAP::HTMLMatroix

[13:33] <nothingmuch> new UNIVERSAL::isa on cpan, chromatic++

[13:33] <Khisanth> nothingmuch: anyway to keep the [+/-] aligned with the t/test.t ?

[13:33] <nothingmuch> uh, yes

[13:33] <nothingmuch> make a rowspan for t/test.t and so forth

[13:33] <nothingmuch> but i was avoiding that intentionally

[13:33] <Khisanth> the moving thing was a bit confusing :)

[13:33] <nothingmuch> since in the white space (notice there is an empty cell) a distinguishing mark for the result should be displayed

[13:33] <nothingmuch> like 'Windows', 'Linux', etc

[13:34] <nothingmuch> or version numbers, to display the progress of a project over time

[13:34] * nothingmuch wonders if it's the first or second time he's uploaded a module from budapest airport

[13:44] <nothingmuch> http://search.cpan.org/~drolsky/

[13:45] <nothingmuch> (drolsky|autarch)++

[13:45] <nothingmuch> wonderful modules

[14:26] <nothingmuch> hola lucs 

[14:30] <lucs> Hey hey nothingmuch.

[14:30] <lucs> I saw you popped in to magnet#perl earlier, and that reminded me about this channel :)

[14:33] <nothingmuch> magnet?

[14:33] <nothingmuch> irc.perl.org?

[14:33] <lucs> Yes.

[14:34] <nothingmuch> ah

[14:34] * nothingmuch was searching for chromatic

[14:35] <lucs> I built a recent perl6 on Friday. The last one I had built was dated from the end of March.

[14:35] <lucs> There was an amazong amount of work done!

[14:35] <lucs> amazing too!

[14:35] <nothingmuch> yup =)

[14:36] * nothingmuch had a friend who used to say o-mazing

[14:36] <nothingmuch> woot! battery is charged, minicpan is synced, svk pull has finished

[14:37] <nothingmuch> i'm off, i need to move out of this chair

[14:37] <clkao> :)

[14:38] <nothingmuch> search.cpan is updating very quickly nowadays.

[15:57] <Aankhen``> ?eval $?PUGS_VERSION

[15:57] <evalbot6> *** No compatible subroutine found: "&eval"     at -e line 8, column 5-34 

[15:57] <Aankhen``> O_O

[15:57] <Aankhen``> ? $?PUGS_VERSION

[15:58] <Aankhen``> OK, OK, I give up.

[15:58] <Aankhen``> Hi.

[16:02] <Aankhen``> Hiya iblech. :-D

[16:02] <iblech> Aankhen``! Welcome back! :)

[16:02] <Aankhen``> Thanks!

[16:02] <Aankhen``> [21:27:38] <Aankhen``> ?eval $?PUGS_VERSION

[16:02] <Aankhen``> [21:27:39] <evalbot6> *** No compatible subroutine found: "&eval"     at -e line 8, column 5-34

[16:02] <Aankhen``> What did I miss? :-)

[16:03] <iblech> eval() doesn't work ATM, because the Prelude doesn't work ATM, because we're trying to precompile it, but pugscc doesn't work 100% correctly

[16:03] <Aankhen``> Ah.

[16:03] <Aankhen``> Oh well.

[16:04] <Aankhen``> Er, wait.

[16:04] <iblech> Anyway, we're on r5156 currently

[16:04] <Aankhen``> Does that mean the interactive shell is broken?

[16:04] <Aankhen``> Hmm... just 400 commits? :-P

[16:05] <nothingmuch> hola iblech 

[16:05] <stevan> hey nothingmuch 

[16:05] <iblech> No, the interactive shell works, as it doesn't use eval(), but the internal Haskell equivalent

[16:05] <nothingmuch> hey stevan 

[16:05] <Aankhen``> Hiya nothingmuch.

[16:05] <stevan> hey iblech, we missed you at the hackathon

[16:05] <Aankhen``> iblech >> Ah, okay.

[16:05] <nothingmuch> did you see your summary view?

[16:05] <Aankhen``> I shall wait for Pugs to compile in that case.

[16:05] <nothingmuch> Aankhen``: hi ho!

[16:05] <Aankhen``> nothingmuch >> Diggity, too! What's shakin'?

[16:05] <nothingmuch> Aankhen``: budapest airport is expensive

[16:06] <Aankhen``> Awww.

[16:06] <nothingmuch> $10 for 2 bottles of water, 1 bottle of ice tea

[16:06] <Aankhen``> That sucks.

[16:06] <nothingmuch> i was going to kick the lady in the face, but then I realized I don't have the strength

[16:06] <Aankhen``> Tsk, tsk.

[16:06] <nothingmuch> (mental, physical, psychological)

[16:07] <Aankhen``> I had an epiphany while away.

[16:07] <Aankhen``> I now understand binary (though slowly). :-D

[16:07] <Aankhen``> Man, there's so much stuff I want to try out and port and work on and blah blah...

[16:07] <nothingmuch> binary? as in 010101?

[16:07] <svnbot6> r5157, iblech++ | Usual svn props and EOLs at EOFs added to modules/, lib/, t/, ext/, docs/, and src/.

[16:07] <Aankhen``> 01 0101, yeh.

[16:07] <svnbot6> r5158, iblech++ | * Made "pugs -MFoo file.p6" work (previously, file.p6 wasn't executed).

[16:07] <svnbot6> r5158, iblech++ | * Added a test for this to t/pugsrun/10-dash-uppercase-m.t.

[16:07] <nothingmuch> ah, that's easy

[16:08] * Aankhen`` shrugs.

[16:08] <nothingmuch> all you need is practice

[16:08] <Aankhen``> I had trouble getting my head around it.

[16:08] <nothingmuch> that's the hard part nowadays

[16:08] <nothingmuch> fun practice:

[16:08] <nothingmuch> my $x = 10;

[16:08] <nothingmuch> my $y = 20;

[16:08] <nothingmuch> $x = $x ^ $y;

[16:08] <nothingmuch> $y = $x ^ $y;

[16:08] <nothingmuch> $x = $x ^ $y;

[16:08] <nothingmuch> $x == ?

[16:08] <nothingmuch> $y == ?

[16:09] <Aankhen``> Later, perhaps I'll try that out...

[16:09] <Aankhen``> Right now, I need to catch up on things.

[16:09] <nothingmuch> have fun!

[16:09] <Aankhen``> Heh, thanks.

[16:09] <Aankhen``> BTW, does three-way binding exist?

[16:09] <nothingmuch> three way binding?

[16:10] <Aankhen``> my $foo = "foo"; my $bar = "bar"; my $baz = "baz"; $foo := $bar; $bar := $baz;

[16:10] <nothingmuch> hmm

[16:10] <nothingmuch> i doubt that means what yuou'd expect

[16:10] <Aankhen``> I wrote out a bunch of different cases.

[16:10] <Aankhen``> I was just wondering.

[16:10] <nothingmuch> := is runtime assignment of containers

[16:10] <nothingmuch> $foo = 10;

[16:10] <nothingmuch> the process is:

[16:10] <nothingmuch> resolfe the name '$foo'

[16:11] <nothingmuch> find it's container

[16:11] <nothingmuch> call the 'scalar_store' method on it, with the argument that is the RHS

[16:11] <nothingmuch> := otoh:

[16:11] <nothingmuch> $foo := $bar;

[16:11] <nothingmuch> resolve '$foo'

[16:11] <nothingmuch> resolve '$bar'

[16:11] <nothingmuch> point the name '$foo' to the container resolved from '$bar'

[16:14] <Aankhen``> Right...

[16:14] <nothingmuch> so if you say '$foo := $bar; $bar := $baz;

[16:14] <nothingmuch> then $foo is a name for the container containing "bar"

[16:15] <nothingmuch> and both $bar and $baz are names for the container containing "baz"

[16:15] <Aankhen``> Ah.

[16:23] <nothingmuch> my butt hurts

[16:23] * nothingmuch considers finding a chair

[16:28] <theorbtwo> Mine hurt for /days/ after going canooing, nm.

[16:28] <theorbtwo> (It was fun anyway.)

[16:49] <nothingmuch> theorbtwo: bah, you need to go out more

[16:56] <cwest> nothingmuch: How'd the js hacks turn out?

[16:56] <nothingmuch> http://nothingmuch.woobling.org/example.html

[16:56] <nothingmuch> pretty good

[16:57] <nothingmuch> js minimized

[16:57] <nothingmuch> the initial view is css

[16:57] <cwest> cool

[17:22] <Aankhen``> Whoa...

[17:22] <Aankhen``> `pugs -CPIR -e 1` sure creates a lot of code.

[17:32] <svnbot6> r5159, Stevan++ | Tree : starting porting the Tree::Visitor modules for sri; they are currently untested (I am building a new pugs right now); I will try to get them tested and running in the near future

[18:07] <gaal> rehi

[18:09] <gaal> nothingmuch, in-transit-p?

[18:09] <nothingmuch> gaal - i can't find calling card info in hungary

[18:09] <nothingmuch> i need you to call my dad, and make sure he makes the taxi come to the airport

[18:09] <nothingmuch> 3:45

[18:09] <nothingmuch> july 4

[18:09] <obra> nothingmuch: I thought you had a direct flight?

[18:09] <nothingmuch> malev flight 214

[18:10] <nothingmuch> obra: overbooked again

[18:10] <nothingmuch> =(

[18:10] <gaal> sure, number?

[18:10] <nothingmuch> 08-651-2264

[18:10] <gaal> k, his name?

[18:10] <nothingmuch> gaal++

[18:10] <obra> nothingmuch: ! did they give you something else special?

[18:10] <nothingmuch> Menachem

[18:10] <nothingmuch> obra: a voucher for flights in air canada

[18:10] <obra> Heh.

[18:10] <nothingmuch> good for a whole year (wow)

[18:10] <gaal> 3:45 morning here, yes? yaani halayla?

[18:10] <gaal> ani mekave?

[18:10] <nothingmuch> yes

[18:11] <nothingmuch> i hope so too =)

[18:11] <nothingmuch> wow, you're such a lifesaver!

[18:11] <gaal> calling

[18:11] <nothingmuch> mui mui grazie

[18:11] <gaal> however, the machine answered

[18:12] <nothingmuch> eek

[18:12] <gaal> shall i call again later or leave a message?

[18:12] <nothingmuch> alternatives: 08-6461549 (office),. 050-5-693-141

[18:12] <gaal> lama ata lo lokeach monit mehasade? yesh kaele, ata yodea

[18:12] <nothingmuch> 08-651-3522 (neighbors)

[18:12] <nothingmuch> yes, i know, but this is cheaper for me, by like a whole lot

[18:12] <gaal> k

[18:12] <nothingmuch> worst case scenario i will take such a taxi

[18:13] <nothingmuch> hola stevan_ 

[18:14] <gaal> nobody's answering in any of the numbers :) i'll keep trying.

[18:14] <nothingmuch> ook!

[18:14] <nothingmuch> 08-651-0360 (more neighbors, fallback option)

[18:15] <nothingmuch> 050-420-1025 (sister)

[18:15] <nothingmuch> 0577-560-126 (very good friend, reliable, knows my family)

[18:16] <nothingmuch> oh, incidentially i have the driver's number: 052-2-715-310

[18:16] <svnbot6> r5160, stevan++ | Perl6::MetaModel - adding a basic MethodTable class, future plans are to refactor all the method stuff in MetaClass to use this instead;

[18:16] <nothingmuch> his name is david

[18:16] <nothingmuch> but to avoid too much confusion, better proxy it

[18:17] <gaal> he replied to your email

[18:17] <nothingmuch> sillyness, i checked 2 mins ago

[18:18] <gaal> please wait for the driver at stiematzki

[18:18] <nothingmuch> okay

[18:18] <gaal> say hi

[18:18] <nothingmuch> gaal++

[18:19] <gaal> david says you may need to wait for him up to 15 minutes in the shop

[18:19] <gaal> and your dad will probably be up when you get home.

[18:19] <nothingmuch> okies

[18:19] <obra> irc++ 

[18:19] <obra> gaal++

[18:19] <nothingmuch> yeah, yet another 40 hours w/o sleep... =/

[18:19] <gaal> wow, nm, your family is now reachable in perpetuity

[18:19] <gaal> so are your neighbors

[18:19] <gaal> and your friends

[18:19] <nothingmuch> oh my

[18:19] <gaal> and your driver

[18:20] <obra> nothingmuch: decided what conferences you're going to use the vouchers for?

[18:20] <nothingmuch> their privacy

[18:20] <nothingmuch> violate

[18:20] <nothingmuch> d

[18:20] <nothingmuch> obra: oscon, ofcourse

[18:20] <obra> nothingmuch: ooh

[18:20] <obra> excellent. I'll see you next month :)

[18:20] <nothingmuch> since i'm so filthy rich i can afford a ticket after the voucher deducts like, 30%

[18:20] <gaal> and think about the people in stiematzky! they're innocent!

[18:20] <gaal> your dad says you should sue the company for the fare

[18:21] <nothingmuch> i should

[18:21] <nothingmuch> i'll talk to him when i get there

[18:21] <nothingmuch> i want at least a day's pay in compensation

[18:21] <nothingmuch> because that is what I lost

[18:21] <gaal> whoa, they'll go bankrupt :)

[18:21] <nothingmuch> yeah, i'm a hotshot exec

[18:22] <nothingmuch> didn't you know i make $200 an hour?

[18:22] <gaal> re: the html thingie - i hope in "hidden" mode the summary line actually contains red if one of the subtest instances is red

[18:22] <gaal> btw, i once implemented something like this widget in gtk

[18:22] <gaal> in c

[18:22] <nothingmuch> gaal: the right side summary should be orange

[18:22] <nothingmuch> it isn't yet, but that's a minor issue

[18:23] <nothingmuch> furthermore, it's automatically expanded if there's any diff

[18:23] <gaal> two days after i finished it someone committed such a widget to the main tree

[18:23] <nothingmuch> so if one is all OK

[18:23] <nothingmuch> and one is partially OK, both are displayed

[18:23] <nothingmuch> what's the widget called?

[18:23] <gaal> then it should be all hidden. od courtse

[18:23] <gaal> GTkDisclosure i think

[18:23] <gaal> s/T/t/

[18:24] <nothingmuch> oh, for the +/- thing

[18:24] <gaal> including a summary line and stuff, yea

[18:24] <gaal> h

[18:24] <gaal> so, is autrijus zonked out in taipei?

[18:24] <nothingmuch> i think that he should have landed by now

[18:24] <nothingmuch> eep, i need electricity

[18:24] <nothingmuch> bbiab

[18:25] <gaal> yes, i'd think some hours ago

[18:25] <obra> gaal: I'm hoping he sleeps for 48 hours

[18:25] <nothingmuch> gaal++ # thanks so much once more

[18:25] <gaal> i'm hoping he fixes pugscc in one of his sweet sweet dreams

[18:25] <gaal> and that his fingers twitch 'ci'.

[18:25] <gaal> nm: de nada

[18:29] <gaal> ooh! iblech++ # r5158

[18:39] <cognominal_> when you delete directories in a svk checkout path, what is the manip to restore them?

[18:40] <gaal> don't you just pull again? (not an svk user)

[18:41] <cognominal_> nope, without the .svn dirs, he is lost?

[18:47] <Aankhen``> See y'all in the morning

[18:47] <Aankhen``> .

[18:47] <Aankhen``> G'night.

[18:51] <nothingmuch> there is a bunch of finish kids, with some parents

[18:51] <nothingmuch> one is playing violin

[18:51] <nothingmuch> and the rest are dancing

[18:51] <nothingmuch> and everyone is clapping every time they finnish (no pun intended)

[18:51] * nothingmuch is amused and cheered up

[18:51] <gaal> finnish eh? http://sify.com/news/fullstory.php?id=13887427

[18:52] <nothingmuch> oh my! my weight in beer! i'll carry a woman for that

[18:52] <nothingmuch> beer is too expensive

[18:53] <nothingmuch> unless you go to YAPC::EU::2005, in braga, where the beer is 70 c

[18:54] <gaal> i think it's the woman's weight in beer

[18:55] <cognominal_> for YAPC in Paris, the main complaint was the price of beers in basseries and pubs

[18:55] <gaal> where was it, cognominal?

[18:55] <nothingmuch> gaal: yes, you're right

[18:55] <nothingmuch> paris silly

[18:55] <gaal> duh

[18:55] <gaal> which quarter?

[18:56] <gaal> because food is generally cheaper in paris than in tel-aviv, or used to be when i was there

[18:56] <cognominal_> that was pretty central

[18:57] <gaal> unless of course you buy orange juice in tuileries

[18:57] <cognominal_> CNAM, the school that hosted us. is near Republique

[18:57] <gaal> is that in 11eme?

[18:57] <cognominal_> Paris is a massive tourist rip-off

[18:58] <gaal> maybe 12th?

[18:58] <cognominal_> I try to figure out..

[18:58] <gaal> if it were a little north from there it'd probably have been cheaper :)

[18:59] <cognominal_> you know pretty well Paris...

[18:59] <cognominal_> CNAM is 3ieme arrondissement

[18:59] <gaal> not well enough :) i was visiting family there

[19:00] <cognominal_> next French Perl Workshop will probably at Cite' des sciences

[19:00] <cognominal_> that is north of Paris

[19:01] <cognominal_> like we did in 2004. http://conferences.mongueurs.net/2004/whatisit.html

[19:01] <skugg> cognominal_: in case you didn't solve your problem: svk revert -R <dir>

[19:02] <cognominal_> I did it the violent way... rm -rf ~/.svk  and starting over...

[19:03] <cognominal_> gaal: this year was nice, it was at Marseille: http://conferences.mongueurs.net/fpw2005/

[19:03] <gaal> sounds great, if only i knew french :)

[19:03] <gaal> nothingmuch: back-p?

[19:03] <cognominal_> if you know enough curses, you are set up

[19:04] <gaal> heh, i'm sure i can learn some in time for the next workshop :)

[19:04] <cognominal_> gaal: but you are welcome at #perlfr on irc.perl.org

[19:04] <gaal> i thought you'd say, though, that i just need to submit an $A++

[19:04] <cognominal_> #perlfr at freenode is not interestsing

[19:05] <cognominal_> you are welcome too, I maintain that page with BooK

[19:05] <cognominal_> and I am the guy who scores the nost $A++

[19:05] <gaal> you guys are deliciously insane :)

[19:05] <clkao> skugg! i thought you hate irc channels!

[19:06] <cognominal_> unlike BooK, I don't do pink unless obliged

[19:06] <skugg> clkao: meh. i do. 

[19:06] <skugg> clkao: sometimes I endure

[19:06] <skugg> :)

[19:07] <gaal> $::(<A>)++; # lame, but p6 :)

[19:09] <cognominal_> gaal,what is your real name? I am on irssi and I am lost

[19:10] <nothingmuch> ucfirst()

[19:10] <gaal> $::(􏿽xABA􏿽xBB)++; same thing with "French" quotes, in honor of your language

[19:10] <gaal> Gaal Yahas

[19:12] <gaal> hey, i think i might have discovered a bug with this a-plus!

[19:12] <gaal> my $a; $::("a")++ should find a package-scoped $a, not a lexical :)

[19:12] <gaal> obfuscation is so important to the development of a language.

[19:15] <cognominal_> I learn a lot about Perl5 doing $A++

[19:17] <gaal> the one called "here-in" is very nice

[19:17] <gaal> so are many others :)

[19:18] <cognominal_> hum, cut and paste does not work, I need to figure out out to do french quotes in emacs

[19:18] <cognominal_> J'y pense et puis j'oublie :(

[19:18] <gaal> docs/quickref/unicode

[19:19] <gaal> are you cog on perlmonks?

[19:20] <cognominal_> nope, i am stefp...

[19:20] <gaal> darn, i have to go now for a bit. see y'all later :)

[19:21] <cognominal_> but, I am not much active there anymore

[19:21] <cognominal_> gaal: your code calls &A, 

[19:21] <gaal> you need to say 'my $A' first

[19:21] <gaal> and then it works, erroneously

[19:22] <gaal> or say 'our $A', and then it should work correctly

[19:22] <gaal> when we have a non-strict mode, it should work too :)

[19:22] <gaal> but that mode isn't specced

[19:23] <cognominal_> :)

[19:23] <gaal> i gotta go :)   /me waves &

[19:23] <cognominal_> wihtout French quotes, it works...

[19:23] <cognominal_> I will post that one.

[19:55] <gaal> cogniminal: the French-quotes one works for me

[20:31] <pelagic> Hello World!

[22:23] <geoffb> OK, completely off topic, but what the hell . . .

[22:24] <svnbot6> r5161, autrijus++ | * Rename YAPC.spork and merge it back to Apocalypse_Now

[22:24] <svnbot6> r5162, autrijus++ | * partially cleanup ChangeLog

[22:24] <svnbot6> r5163, autrijus++ | * recursive_polymorphism_and_type_inference: fix Haskell

[22:24] <svnbot6> r5163, autrijus++ |   syntax and the corresponding Perl6 syntax

[22:24] <svnbot6> r5164, autrijus++ | * File::Spec - now that module system is there, we can't

[22:24] <svnbot6> r5164, autrijus++ |   simply `require` File::Spec::(Unix|Win32) anymore; they

[22:24] <svnbot6> r5164, autrijus++ |   have to be exported to File::Spec's caller.

[22:24] <svnbot6> r5165, autrijus++ | * repair `use_ok` to import to `caller().package`.

[22:24] <geoffb> Is the proper phrase "in #perl6" or "on #perl6"?

[22:24] * geoffb editing his article . . . 

[22:24] <obra> Usually, on

[22:24] <geoffb> Looks like I kicked svnbot6.  :-)

[22:25] <geoffb> thanks obra 

[22:25] <meppl> in ;)

[22:25] <meppl> in #perl6

[22:25] <geoffb> oh dear

[22:26] <geoffb> Something tells me that whichever one I choose, it will get changed by the editor

[22:26] <obra> geoffb: give a full sentence?

[22:26] <geoffb> Well, here's the last part:

[22:26] <geoffb> "or ping me on |#sdlperl| on |irc.freenode.net| ."

[22:27] <meppl> just think about what a channel is - a pipe or something

[22:27] <meppl> so, were on the end of the pipe ;)

[22:28] <geoffb> But then when you are working on a system, you are "ssh'ed in", but "working on"

[22:28] <meppl> hm

[22:29] <meppl> "in the chatroom" and "on the channel"

[22:29] <geoffb> hmmm, I'd buy that.

[22:29] <meppl> but i always say "im in #perl6" or so on - who cares

[22:29] <geoffb> nodnod

[22:30] <geoffb> It's just the kind of thing that bugs you when you're proofreading, you know?  :-)

[22:31] <osfameron> I'd say on #perl6

[22:32] <obra> meppl: are you a native speaker?

[22:32] <meppl> no, im german

[22:32] <obra> *nod*

[22:32] <meppl> my english isnt very good ;)

[22:32] <obra> English prepositions get really weird. I can't blame you

[22:33] <geoffb> obra, oh yeah, I second that.

[22:33] <geoffb> I used to think I had a pretty good handle on English.  Then I discovered it's basically a mess (and not entirely in the good way)

[22:33] * skugg would probably use 'on irc' but 'in #foo'

[22:34] <skugg> but then I'm not a native either. although, I think that's often an advantage; we've had to actually _learn_ the grammar...

[22:34] <geoffb> I'm almost thinking that it reads best as "in #foo on net.work", just for flow reasons.  Since there's debate about the first preposition, flow might win

[22:34] <svnbot6> r5166, autrijus++ | * Emit.PIR and AST.Scope: Do not derive the slow and bloaty

[22:34] <svnbot6> r5166, autrijus++ |   `Read` typeclass anymire

[22:34] <svnbot6> r5167, autrijus++ | * AST.Internals, CodeGen.PIR - deal with the fallout of

[22:34] <svnbot6> r5167, autrijus++ |   not deriving from `Read`. also introduce `newHash` for incHV.

[22:34] <geoffb> Clearly autrijus is rested.

[22:44] <svnbot6> r5168, autrijus++ | * qualified names now dealt with consistently; new and

[22:44] <svnbot6> r5168, autrijus++ |   improved API moved to Pugs.Eval.Var:

[22:44] <svnbot6> r5168, autrijus++ |      isQualified, packageOf, qualify, toPackage, toQualified,

[22:44] <svnbot6> r5169, autrijus++ | * `our` variables in packages now generate qualified symbols. 

[22:44] <svnbot6> r5170, autrijus++ | * `eval` now pushes one caller frame, just as Perl5's eval does.

[22:44] <svnbot6> r5171, autrijus++ | * new trait, `is builtin`, for Prelude.pm which installs the symbol

[22:44] <svnbot6> r5171, autrijus++ |   into the global namespace.

[22:44] <svnbot6> r5172, autrijus++ | * `caller` now counts the topmost "main" as one frame,

[22:44] <svnbot6> r5172, autrijus++ |   just as Perl5's does.

[22:44] <svnbot6> r5172, autrijus++ | * @?INIT and @?CHECK are now renamed back to @* space.

[22:44] <svnbot6> r5173, autrijus++ | * first step toward transparent container: `ref` now

[22:44] <svnbot6> r5173, autrijus++ |   reports the underlying value.

[22:44] <svnbot6> r5174, autrijus++ | * adjust various tests to reality.  Chief among them is

[22:44] <svnbot6> r5174, autrijus++ |   that latin1 >> and << should not be expected to work.

[22:46] <clkao> massive autrijus attach

[22:46] <skugg> i hope he's doing a push, and not comitting at that rate...

[22:46] <skugg> :)

[22:49] <geoffb> Actually, I hope he *is* committing at that rate . . . it would mean he is well rested and back in turbo mode

[22:49] <geoffb> Ah, misread the timestamps.

[22:50] <geoffb> Yeah, 7 commits in 17 seconds would be a tad fast even for him.  :-)

[22:50] <Juerd> latin1 >> and << not to be made working?

[22:50] <Juerd> Holy crap. I had more expected the unicode thingies to be delayed.

[22:51] * Juerd can't change all terminals to utf8 just yet.

[22:51] <Juerd> Ah well... Let's hope the texas1 work :)

[22:51] <Juerd> (Which so far they have)

[22:51] <SamB> Juerd: you have secured a supplier for magical UTF-8 pixie dust to change hard terminals over?

[22:51] <Juerd> SamB: No

[22:52] <SamB> than why say "just yet"?

[22:52] <Juerd> SamB: I'd be satisfied already if ssh + screen would give me utf8.

[22:52] <Juerd> I have no hard terminals

[22:52] <SamB> oh

[22:52] * SamB neither

[22:54] <obra> Juerd: screen -U doesn't love you?

[22:55] <Juerd> obra: No

[22:55] <Juerd> obra: Not enough, that is. It works without ssh.

[22:55] <Juerd> obra: And without screen

[22:55] <Juerd> And without both ssh and screen

[22:55] <Juerd> But not with the combination of ssh and screen

[22:55] <obra> huh. 

[22:55] <Juerd> Funny

[22:55] <Juerd> That is *exactly* what I keep thinking.

[23:04] <skugg> Juerd: http://jerakeen.org/blog/2005/06/23/screen-irssi-utf8 -- does that work for you?

[23:06] <clkao> you shou8ld ♨ if it works

[23:06] <Juerd> That's what I did when I tried

[23:06] <clkao> you should see ♨

[23:06] <Juerd> Oh, I know how to test it.

[23:06] <Juerd> I'm not unfamiliar with utf8 itself

[23:08] <mugwump> clkao.♨

[23:09] <osfameron> is that a steaming pie?

[23:09] <mugwump> it's the hot springs operator

[23:10] <skugg> clkao: hm... I can see those... i just can't type them :(

[23:10] <skugg> (or, any non-ascii chars)

[23:10] <osfameron> UNICODE OPERATORS MUST DIE!

[23:11] <clkao> skugg: you need my friend's uniqe input mehtod

[23:12] <skugg> clkao: yes, that too. but I can't even type non-ascii characters that I have on my keyboard into it

[23:12] <skugg> s/it/a terminal/

[23:14] <clkao> skugg: go to bed, you have a nasty bug to solve tomorrow

[23:16] <mugwump> screen really thwarts all attempts to use Unicode without its approval

[23:19] <skugg> clkao: heh. night then.

[23:44] <Darren_Duncan> I like Unicode operators and they should stay

[23:44] <Darren_Duncan> oh, and Parrot 0.2.2 is up, so that prerequisite for Pugs is out of the way

[23:46] <obra>   chip++ # monthly releases

