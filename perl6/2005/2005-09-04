[00:08] <elmex_> this is no gain

[00:08] <elmex_> over vain

[00:08] <elmex_> (away)

[00:41] <elmex_> GNAA

[01:04] <elmex_> ???

[01:28] <elmex_> obvious

[01:28] <elmex_> the dead seed is in the grain of the void

[03:07] <svnbot6> r6676 | fglock++ | PIL-Run 

[03:07] <svnbot6> r6676 | fglock++ |   - fixed dir-name-with-spaces in Windows (crude_repl.pl)

[03:07] <svnbot6> r6676 | fglock++ |   - added support for 'Inf' value; fixed '1..Inf' and '1...'

[03:07] <svnbot6> r6676 | fglock++ | new subs: .isa(), .does(), .splice(), .hex()

[03:07] <svnbot6> r6676 | fglock++ |   - 'a'..'z'; but string-decrement doesn't work yet

[03:07] <svnbot6> r6676 | fglock++ |   - basic .warn()

[03:07] <svnbot6> r6676 | fglock++ | perl5/Array 

[03:08] <svnbot6> r6676 | fglock++ |   - fixed Pair stringification in (1,2,3).pairs

[03:08] <svnbot6> r6676 | fglock++ | perl5/Code 

[03:08] <svnbot6> r6676 | fglock++ |   - fixed Code-do() return context (bug found by putter++)

[03:44] <svnbot6> r6677 | fglock++ | * PIL-Run - @a = (1..Inf) xx Inf creates an Array (Inf x Inf)

[03:44] <svnbot6> r6677 | fglock++ |   - (1..Inf) x 10 is a string

[03:44] <svnbot6> r6677 | fglock++ |   - @a[1][2] works; @a[1;2] doesn't compile

[04:38] <svnbot6> r6678 | fglock++ | * PIL-Run - pair(), list(), abs()

[05:08] <svnbot6> r6679 | Darren_Duncan++ | /ext/Locale-KeyedText : rearranged the POD sections in KeyedText.pm so they are all below the code, and moved copyright to the end ... all in sync with Perl 5 version changes

[05:26] <svnbot6> r6680 | luqui++ | Fixed the Net::IRC ~~ problem.  It was rather subtle and it represents a problem more general than

[05:26] <svnbot6> r6680 | luqui++ | this specific case.  Analysis:

[05:26] <svnbot6> r6680 | luqui++ |     1) Apparently "is primitive" operators don't get their own lexical pad

[05:26] <svnbot6> r6680 | luqui++ |     2) "when" is written in terms of &infix:<~~>, not &*infix:<~~>

[05:26] <svnbot6> r6680 | luqui++ |     3) That means that "when" uses whatever &infix:<~~> was in innermost scope in the caller

[05:26] <svnbot6> r6680 | luqui++ |     4) Somehow there was an &infix:<~~> defined in Net::IRC (but I don't know how)

[05:26] <svnbot6> r6680 | luqui++ | I solved the problem by fixing #2.  In general, operators that are defined in terms of other

[05:26] <svnbot6> r6680 | luqui++ | operators *must* fully qualify the name of the operator they are using.  Also, "is primitive"

[05:27] <svnbot6> r6680 | luqui++ | subs should fully qualify all operators they use.

[05:32] <svnbot6> r6681 | autrijus++ | * correct fglock's email adddress: s/Egmail.com/gmail.com/

[07:28] <xinming> good job everybody, This ticket is in my bag now, Will move to BeiJing next day 08:00AM GMT+8 :-)

[07:29] <xinming> bbl

[07:31] <luqui> ?eval 42

[07:31] <evalbot_6681> 42 

[07:31] <luqui> WOOHOO

[07:31] <luqui> finally

[07:33] <svnbot6> r6682 | luqui++ | Created a warning that warns when you try to export an operator.  The problem

[07:33] <svnbot6> r6682 | luqui++ | came up with Set that exported &infix:<->, thus *overriding* the default

[07:33] <svnbot6> r6682 | luqui++ | numeric minus, and causing wacky infinite loops all over the place!

[07:39] <svnbot6> r6683 | luqui++ | Fixed set to do what the warning tells it to: instead of exporting operators,

[07:39] <svnbot6> r6683 | luqui++ | it multifies the global ones.

[08:16] <luqui> ?eval sub apply(&infix:<+>, $a, $b) { $a + $b }   apply(&infix:<*>, 3, 3)

[08:16] <evalbot_6683> 9 

[08:16] <luqui> coool

[08:22] <xinming> ?eval sub foo(&infix:<haha>, $a, $b) { $a haha $b }; foo(&infix:<**>, 3, 3);

[08:22] <evalbot_6683> Error:  unexpected "h" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or "}" 

[08:23] <xinming> hmm, It's said, we can define the operator ourown... hmm, So, will this example be "true" in real perl 6?

[08:24] <xinming> ?eval sub foo(multi infix:<haha>, $a, $b) { $a haha $b }; foo(&infix:<**>, 3, 3);

[08:24] <evalbot_6683> Error:  unexpected "i" expecting "?", "*", "+", "++" or parameter name 

[08:25] <luqui> xinming, the former of those should work

[08:26] <xinming> luqui: thanks.

[10:32] *** Aankh|Clone is now known as Aankhen``

[10:35] <rafl> geoffb: Hm. I think I agree.

[10:54] <geoffb> rafl: :-)

[10:55] <geoffb> luqui++ # Nice fundamentals work

[10:56] <luqui> geoffb, hmm?

[10:56] <geoffb> luqui, the last several operator commits

[10:56] <luqui> oh, thank you

[10:57] <geoffb> you're welcome  :-)

[11:31] <geoffb> mmmm, pasta . . . 

[11:31] <nothing_pasta> i'm getting hangs on ext/MIME-Base64/t/Base64.t

[11:31] * geoffb is getting hungry

[11:31] <nothing_pasta> and ext/Net-IRC/t/basic.t

[11:31] <nothing_pasta> pugs has 100% cpu

[11:32] <nothing_pasta> geoffb: how's your forth progressing?

[11:33] <geoffb> Actually, woke up about an hour and a half ago having figured out what to do next.

[11:33] <geoffb> So right now, hacking away.  :-)

[11:33] <nothing_pasta> so what is it that you are  doing next?

[11:34] <geoffb> BTW, is there some (perl 5) module that will allow you to iterate over an array two elements at a time, like Perl 6 'for @foo -> $x, $y'?

[11:35] <geoffb> Words are no longer defined as the values of the dictionary hash; the dictionary rather contains pointers to data cells containing the definitions, like a real Forth would.

[11:35] <geoffb> This then allows me to implement JZ and JMP, and therefore control flow ops

[11:35] <Aankhen``> I wish Pugs would build for me. :-(

[11:35] * Aankhen`` whines.

[11:35] <luqui> Aankhen``, what is your arch?

[11:35] <Aankhen``> Win32.

[11:35] <luqui> mm

[11:35] <geoffb> Aankhen``, I feel the plight of your people, my brother.

[11:36] <luqui> Aankhen``, do you use feather?

[11:36] <Aankhen``> luqui: No.

[11:36] <luqui> any reason?

[11:36] <Aankhen``> Yes, parting with my name.

[11:36] <luqui> ?

[11:37] <nothing_pasta> geoffb: what is your threading model?

[11:37] <Aankhen``> I have to send an e-mail to Juerd with my real name. :-)

[11:38] <luqui> does your name have some kind of quantum non-copying property?

[11:38] <Aankhen``> Nah, I just don't like to give it out

[11:38] <Aankhen``> .

[11:39] <luqui> well... umm...

[11:39] <geoffb> nothing_pasta, the current plan is that @DATA doesn't just contain Perl integers, it can also contain coderefs.  So any coderef found while executing is native code (duh), and anything else is a word to call.

[11:39] <luqui> you have a trade-off :-)

[11:39] <nothing_pasta> ah

[11:39] * nothing_pasta hashes the codref primitives into integers

[11:40] <nothing_pasta> everything is a primitive

[11:40] <geoffb> nothing_pasta, :-)

[11:40] <nothing_pasta> bsr, <address> making a clal

[11:40] <nothing_pasta> call

[11:40] <nothing_pasta> some things are arguments to primitives, like where to jump

[11:40] <geoffb> Well, I'm taking it one step at a time, starting from simplest possible idea first.

[11:41] <geoffb> nothing_pasta, nodnod, that's one of the things that popped into my head this morning.

[11:42] <geoffb> JMP and JZ are actually coderefs followed by a jump target cell, and the coderef does effectively IP = $DATA[IP + 1] if jump is taken

[11:42] <geoffb> obvious, I know, but I'm new to this part of the compiler writer's biz.  :-)

[11:43] <nothing_pasta> btw, all you *really* need is jnz

[11:43] <nothing_pasta> : JMP R@ CELL + @ IP ! ;

[11:43] <nothing_pasta> where IP is the instruction

[11:44] <nothing_pasta> instruction pointer

[11:44] <Aankhen``> You people scare me.

[11:44] <geoffb> Aankhen``, <voice character="dope-peddler">Try it, you'll LIKE it ...</voice>

[11:44] <nothing_pasta> the CELL + is whether BSR set the address before or after the jump

[11:45] <geoffb> Are 'CELL +' and 'CELL+' the same?

[11:45] <Aankhen``> <voice character="whiny-little-girl">MOMMY, MOMMY, THAT MAN IS ACTING WEIRD!</voice>

[11:45] <nothing_pasta> geoffb: i guess so... those words are "faster"

[11:46] <nothing_pasta> 1+ is one assembler instruction, 1 pushes 1, + sums to TOS

[11:46] <nothing_pasta> well, 1+ is really load to reg, inc reg, smash stack head

[11:46] <geoffb> nodnod, I just wanted to make sure I wasn't confused.

[11:46] * geoffb gets very little sleep these days, and feels like he's thinking upstream all the time

[11:46] <nothing_pasta> now, here is, IMHO, where the user shouldn't optimize

[11:47] <geoffb> Aankhen``, heh

[11:47] <nothing_pasta> because : FOO + ; : BAR 1 FOO ; should compile down to the same thing : BAR 1+ ; would

[11:47] <geoffb> nodnod

[11:47] * nothing_pasta continues the <voice character="somewhat-out-of-context-person">

[11:48] <geoffb> heh

[11:48] <nothing_pasta> anyway, i'm getting hungry too

[11:48] <geoffb> brb, stomach now growling with all these pasta references, must go grab food from kitchen

[11:48] * nothing_pasta spent all morning watching TV, trying not to move

[11:48] <geoffb> heh, jinx

[11:48] <nothing_pasta> skin--;

[11:48] <geoffb> ?

[11:50] * nothing_pasta has atopic dermatitis

[11:50] <nothing_pasta> basically, the immune system is reacting as if i'm allergic to something, but to nothing at all

[11:51] <nothing_pasta> so the skin in my elbows, throat and face is painful

[11:51] <nothing_pasta> normally it isn't as bad, it's just kind of dry

[11:51] <nothing_pasta> but now it's a really bad eczema

[11:51] <geoffb> um, should you have been doing all that construction stuff given that condition?

[11:52] <geoffb> Forget that, I'm sounding like a mother

[11:52] <geoffb> Once you become a parent, it's hard to stop.  :-)

[11:52] <nothing_pasta> well, it started yesterday, and went away early morning

[11:52] <nothing_pasta> and then it started again this night

[11:52] <geoffb> yucko

[11:52] <nothing_pasta> i suspect it was the paint

[11:53] <nothing_pasta> but it's probably more due to the stress of a screwed up house for 3 weeks

[11:53] <nothing_pasta> and the cement dust, which is an irritant

[11:53] <nothing_pasta> irritants leads to scratching, scratching leads to more irritation, etc etc

[11:54] <geoffb> nodnod

[11:54] <nothing_pasta> anyway, i'm on this: http://en.wikipedia.org/wiki/Antihistamine

[11:55] * geoffb finally gets around to joining #forth . . . .

[11:56] <geoffb> Any particular antihistimine?

[11:56] <geoffb> God, wikipedia is just amazing

[11:57] <geoffb> I can only assume that several existing info repositories decided to dump content into wikipedia at some point, because in some fields it's just insanely detailed.

[11:57] <geoffb> Math, for instance

[11:58] <geoffb> I'm guessing by all the linkage on this page, medicine as well.

[12:14] <luqui> geoffb, also keep in mind that math is very easy to (poorly) write about once you know it

[12:15] <luqui> and there are a lot of math geeks

[12:15] <luqui> where wikipedia suffers is in pedagogy.  many of the articles are only approachable by people who already know what the article is saying.

[12:15] <geoffb> fair enough.  My advanced math skills are far too weak to tell if the wikipedia articles are incorrect . . . .

[12:16] <luqui> no, they're probably right

[12:16] <geoffb> Hmmm.  You may be right there.

[12:16] <luqui> a concept of difficulty n has a bunch of links to other concepts of difficulty n or > n

[12:17] * luqui should really really really go to sleep now

[12:17] * luqui is very tired

[12:17] <geoffb> yes, I have found that . . . but I could often get enough context from wikipedia articles to understand what someone was refering to elsewhere

[12:17] <geoffb> sleep, luqui . . . enjoy

[12:17] * luqui Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz &

[12:43] *** integral1 is now known as integral

[13:44] <svnbot6> r6684 | rafl++ | * Removed =pod tag. It prevented a proper NAME tag in the generated manpage

[13:44] <svnbot6> r6684 | rafl++ |   which is important for mandb/apropos/whatis/etc.

[13:44] <svnbot6> r6685 | rafl++ | * Added proper copyright statement as requisited by LICENSE.txt.

[13:56] <svnbot6> r6686 | rafl++ | Debian Package:

[13:56] <svnbot6> r6686 | rafl++ | * Added license of examples/hop6 to debian/copyright.

[13:56] <svnbot6> r6686 | rafl++ | * Install some more manpages into the pugs package.

[13:56] <svnbot6> r6686 | rafl++ | * Added ability to build optimized or unoptimized base on DEB_BUILD_OPTIONS.

[13:56] <svnbot6> r6686 | rafl++ | * Fixed syntax error when running tests.

[13:56] <svnbot6> r6686 | rafl++ | * Run smome-all by default when running tests.

[13:56] <svnbot6> r6686 | rafl++ | * Added ability to change the tests being run with the TESTS environment

[13:56] <svnbot6> r6686 | rafl++ |   variable.

[13:56] <svnbot6> r6686 | rafl++ | * Added ability to send the generated smoke htmls to the smokeserv. This can be

[13:56] <svnbot6> r6686 | rafl++ |   disabled by setting DONT_SEND_SMOKE to something true.

[13:56] <svnbot6> r6686 | rafl++ | * Install lintian overrides for pugs-modules to prevent "unusual interpreter"

[13:56] <svnbot6> r6686 | rafl++ |   warnings.

[13:56] <svnbot6> r6686 | rafl++ | * Don't generate a pugs.1 manpage. Link to pugs::run instead.

[13:56] <svnbot6> r6686 | rafl++ | * Remove extra license file for hop6.

[13:56] <svnbot6> r6686 | rafl++ | * Remove empty files in the pugs-doc package.

[13:56] <svnbot6> r6687 | rafl++ | * Fixed shell glob for smoke html files.

[14:08] <svnbot6> r6688 | rafl++ | * Move Inline::Pugs manpage from pugs to pugs-modules.

[14:32] <svnbot6> r6689 | iblech++ | * Usual svn props.

[14:32] <svnbot6> r6689 | iblech++ | * debian/pugs.links: Fixed typo:

[14:32] <svnbot6> r6689 | iblech++ |   Commit message of r6686 said "Link to pugs::run instead.",

[14:32] <svnbot6> r6689 | iblech++ |   but pugs.links pointed to pugs::hack, rafl++ please double check my fix :)

[16:42] <putter> rafl: smoke, rather than smoke-all, should be the default.  at the moment smoke is pugs (and smoke-pugs is missing), but that will likely change with time.  smoke-all is for development.  It is both dangerous (smoke-perl5 nonterminates, smoke-js exhausts swap), and discouraging (will happily spend a machine-stressing hour generating a useless smoke because some environment variable was wrong).

[16:43] <putter> oh, and smoke-all may require odd extras (eg, spidermonkey, SBCL, etc).

[16:47] <rafl> putter: OK, I'll change that as soon as I get back to my development box again.

[16:58] <putter> sounds good.  :)

[16:59] <putter> Do the debian mirrors maintain any kind of stats on how often something is downloaded?  (random curiousity)

[17:02] <pjcj> http://popcon.debian.org/

[17:07] <putter> pjcj: interesting.  thanks.

[17:08] <putter> Just now created a smoke-pugs target.  I've some hesitancy about the name, but eh.

[17:08] <svnbot6> r6690 | putter++ | Makefile.PL: Created new smoke-pugs target, which existing smoke target now calls.  rafl++

[17:17] <rafl> putter: No.

[17:17] <rafl> But there's the popularity-contest.

[17:18] <rafl> putter: Usually the targets are called smoke-${backend}. So what about smoke-haskell?

[17:23] <putter> ratf: sounds plausible.

[17:25] * putter begins to think about how we will deal with multiple front-ends, and backend variants (eg, js linked with p5 vs not), and decides to invite others to do so instead...

[17:35] <putter>  frontends**<1..2> -> pil**<1..3> -> optimizer**<0..?> -> backend**<4..?>

[17:36] <putter> err, pil**<3..?>

[17:44] <integral> is the build (Pugs.Internals) meant to be broken at the moment?

[17:45] <putter> it seems unlikely... I just built r6690 a moment ago with...

[17:45] <integral> ok, it's my broken environment then :)

[17:46] <putter> with no problem.

[17:46] <putter> ;)

[18:20] <svnbot6> r6691 | Stevan++ | Perl6::MetaModel2.0 - adding some prototypes to the chaos.pl functions

[18:26] <putter> hmm... "" =~ /(?:(a?)){3}/  matches, $1 is defined, but $2 isnt.  I can understand that behavior with + or *, but with {3}...?!?

[18:28] <Juerd> There is no second set of parent.

[18:28] <Juerd> parens even

[18:28] <Juerd> So there is also no $2

[18:29] <Juerd> /(foo(bar))(baz)(?:quux(xyzzy))/

[18:29] <Juerd>  ^$1  ^$2   ^$3         ^$4

[18:29] <Juerd> well, almost :)

[18:29] <Juerd> /(foo(bar))(baz)(?:quux(xyzzy))/

[18:29] <Juerd>  ^$1 ^$2   ^$3         ^$4

[18:30] <Juerd> It's about the left parens

[18:30] <Juerd> Repetition has no relevance

[18:32] <putter> right.  thank you Juerd.  p5+p6 brain stirfry.

[18:38] <putter> Juerd++  # thanks.

[18:40] <Juerd> yay, ego boost :)

[18:45] <putter> :)

[19:21] <svnbot6> r6692 | Stevan++ | Perl6::MetaModel 2.0 -

[19:21] <svnbot6> r6692 | Stevan++ | * new, bless and CREATE are no longer Object class methods

[19:21] <svnbot6> r6692 | Stevan++ |   instead they are now Class instance methods

[19:21] <svnbot6> r6692 | Stevan++ |     - cleaned up some tests and code to reflect this

[19:21] <svnbot6> r6692 | Stevan++ | * pneuma.pl now calls $::Class->new() to create $::Object

[19:21] <svnbot6> r6692 | Stevan++ |   instead of the ::create_class function from gnosis.pl

[19:21] <svnbot6> r6692 | Stevan++ | * it is now possible to subclass $::Class because of all this

[19:21] <svnbot6> r6692 | Stevan++ |     - see new test t/09_subclassing_Class.t for example

[19:32] <putter> could someone summarize the transformation rule which simplifies  /.X(.+)+X/  so it can run against bbbbXcXaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa?

[19:38] <svnbot6> r6693 | iblech++ | * Usual svn props.

[19:38] <svnbot6> r6693 | iblech++ | * PIL2JS:

[19:38] <svnbot6> r6693 | iblech++ |   * PIL2JS.js: Beginning of real multi handling,

[19:38] <svnbot6> r6693 | iblech++ |     might need changes to -CPIL.

[19:38] <svnbot6> r6693 | iblech++ |   * PIL, PIL::Assign, PIL::Subs, PIL::PStmts: no warnings "recursion"

[19:38] <svnbot6> r6693 | iblech++ |   * PIL::PApp: Rewrote $possibly_ccify_many as a real sub using no closures and

[19:38] <svnbot6> r6693 | iblech++ |     pass-by-ref.

[19:38] <svnbot6> r6693 | iblech++ |   * runjs.pl, pil2js.pl: Tweaked resource limits a bit.

[19:55] <svnbot6> r6694 | iblech++ | PIL2JS: Work towards a working "class A { method b {...} }".

[19:55] <svnbot6> r6694 | iblech++ | * PIL: Emit class declarations as given by...

[19:55] <svnbot6> r6694 | iblech++ | * P5 Prelude::JS: ...the P5Macro &Class::_create.

[20:01] <Aankhen``> G'night.

[20:03] <renormalist> hi all

[20:05] <renormalist> I started an emacs perl6 mode for Emacs by deriving it from cperl-mode and adapting new Perl6 syntax so that indenting and highlighting works again. I would like to contribute that into Pugs. Whom do I ask for interest? 

[20:06] <coral> this is a good place to ask that question

[20:19] <svnbot6> r6695 | rafl++ | * smoke instead of smoke-all when building the Debian package.

[20:19] <svnbot6> r6695 | rafl++ | * pugs suggests pugs-doc.

[20:19] <svnbot6> r6695 | rafl++ | * Clean smoke html files properly.

[20:21] * putter looks forward to having an emacs mode adapted for p6... (currently using perl-mode)

[20:22] <putter> renormalist: do you have commit permission already?

[20:23] <renormalist> not yet

[20:24] <putter> If not, it's as simple as saying "I'd like to commit permission to contribute X!".  Though some times of day, like perhaps now, there may not be anyone with committer creation permission awake.

[20:24] * putter waves wand of committer creator invocation...

[20:25] * putter waits hopefully...

[20:25] <renormalist> Ok, I would like to contribute that, and therefore would be thankful to commit permission

[20:29] <putter> hmm.  21-03 GMT tends to be a bit quiet.

[20:30] <renormalist> just in case I get permission, how does it then work? I currently have svn checked out, but quite anonymously. Do I get a login/password and re-checkout or svn switch with login/pw?

[20:31] <renormalist> (I know svn, just not the Pugs access policy)

[20:33] <putter> "permission" in a technical sense.  pugs has a very "here, have a commit bit, please" policy.  someone asks you for your email, tickles openfoundry, which emails you a "invite", ... and I fuzzily recall it was simple from there.

[20:34] <renormalist> ok

[20:35] <renormalist> Tonight there seems no one awake, right? Di I ask here again later (tomorrow) or should I email someone?

[20:36] <renormalist> s/Di/Do/

[20:37] <putter> tommorow, at a different time of day, might be your best bet.  actually, if you /msg me your email, I'll pass it on if I'm around and I see a  renormalist: give me your email address

[20:38] <putter> normally the turnaround is just a few minutes, but, well, not at the moment.

[20:38] <putter> :/

[20:38] <renormalist> np :)

[20:39] <putter> :) 

[20:41] <renormalist> i cant /msg here (have to read faq ...)

[20:42] <renormalist> putter: I read your testing but cannot write

[20:44] * putter goes to see who is on the committer-committer list...

[20:50] <renormalist> putter: I sent you my email address

[20:50] <putter> autrijus: gaal: iblech: nothingmuch: Stevan: theorbtwo:  I invoke thee.  renormalist needs a commit bit.

[20:50] <putter> (sometimes mentioning the name rings a little irc browser bell in some distant part of the planet)

[20:51] <putter> ok, I'll pass it on.

[20:51] <putter> sorry for the hassle.

[20:52] * putter imagines a vcs which, like a subscriber-mostly mailinglist, allows "commits pending review".

[20:54] <renormalist> np, thanks, I will wait and ask again tomorrow if nothing happens

[20:55] <putter> prolog regex engine up to 64% of perl5.9's re_tests

[20:55] <putter> renormalist: sounds like a plan.

[21:01] <coral> passes? fails?

[21:01] <coral> oh, in progress. neat. is it doing well?

[21:04] <Juerd> Could someone please send me a virus by email? I'm getting a lot of viruses and want to see the log in realtime.

[21:04] <Juerd> (For a known virus)

[21:06] <Juerd> Nevermind

[21:11] <putter> coral: 960 tests, 616 pass, the rest fail but for one skipped non-termination (previously mentioned).

[21:12] <putter> re_tests isnt the entire perl5 re test suite, and there is no p6 yet, but it seems hopeful.

[21:44] <rafl> Do you guys use vim and utf8? I got problems to get it working with an utf8-enabled xterm. gvim works fine, though.

[21:47] <Juerd> Make sure first that screen isn't the problem.

[21:47] <Juerd> Or ssh

[22:05] <rafl> Juerd: It's on a local terminal without screen.

[22:06] <wolverian> rafl, what kind of problems?

[22:06] <Juerd> rafl: That certainly helps

[22:06] <Juerd> rafl: locale?

[22:16] <godsmacker> Juerd: It's on a local terminal without screen.

[22:18] <godsmacker> Pulling 6695 revisions from svn sucks, btw.

[22:34] <QMario> Hello everyone!!! :)

[22:34] <QMario> Is anyone here?

[22:35] <QMario> Wow! This channel is quiet.

[22:50] <QMario> Why do people use such profane language?

[22:50] <lscd> such as?

[22:59] <QMario> Iscd, such as "F", "S", "B", "D", "Gd", and "A".

[22:59] <QMario> Hello Amnesiac! :)

[22:59] <Amnesiac> greetings

[23:00] <lscd> QMario: hm.. emotional impact? lack of vocabulary? sometimes substitutes really lose something

[23:00] <luqui> QMario, well, it's a generational distinguisher

[23:01] <luqui> you don't see too many people over twenty-five (who aren't criminals) using excessive profane language... well, I don't, at least

[23:01] <luqui> QMario, do you consider Perl 6 to be a swear word?

[23:01] <QMario> Luqui, no.

[23:02] <luqui> :-)

[23:02] <QMario> It is 2 words, but not swear words.

[23:02] <QMario> Iscd, do you use them?

[23:03] <QMario> Iscd and Luqui. Ask about me in #Perl. 

[23:03] <QMario> Have you heard about me there? :-/

[23:03] <lscd> swear words? yes, i admit i've fallen into that habbit

[23:03] <lscd> though i am < 25, and very rarely use them online

[23:03] <QMario> Iscd, can you break out?

[23:03] <lscd> yep

[23:03] <QMario> Why don't you then, if you know they are wrong to use.

[23:03] <lscd> i'd debate that they're 'wrong' to use

[23:04] <lscd> obviously, there are social contexts where they're unacceptable

[23:04] <QMario> Anyway, what did the people say about me in #Perl? 

[23:04] <QMario> Iscd, which cases?

[23:05] <lscd> hm? which cases are they acceptable in?

[23:05] <QMario> Yes.

[23:06] <lscd> some forms of poetry/music; saying, for instance, 'posterier' instead of a* ruins some rhymes, and carries very different connotations

[23:07] <lscd> aside from that, different social contexts have somewhat different rules

[23:07] <lscd> i find that, speaking in the native language of this area, a lot of people (including well-educated ones > 25) swear a _lot_

[23:07] <QMario> lscd, they could use synonyms of 'posterier' instead of "A".

[23:07] <QMario> "A" is reserved for "fool" and "donkey". Is it not?

[23:08] <lscd> QMario: the point is, different words occupy different linguistic positions; there are whole sets of connotations associated with every synonym

[23:08] <lscd> it is not, indeed

[23:08] <lscd> there are also swear words, in some languages, which really don't have good replacements

[23:08] <lscd> english is fairly swear-poor

[23:09] <QMario> Grrr.

[23:09] <lscd> although you'd be hard-pressed to find another word as versatile as the f-word; there are some things floating online talking about its use as a noun, verb, etc, etc

[23:09] <QMario> Noun?

[23:10] <QMario> Who made up that word anyway?

[23:10] <lscd> yes, noun

[23:10] <lscd> it comes from old french, i believe

[23:10] <QMario> It should have been used to point to good things instead of bad things.

[23:10] <lscd> would you have no words for bad things?

[23:10] <lscd> and one could argue that some uses of it are positive, i suppose

[23:10] <QMario> Yes. In a perfect world, there are no bad things.

[23:11] <lscd> disagreed

[23:11] <QMario> Iscd, who could argue that?

[23:11] <lscd> that said, i think we could agree our world isn't perfect

[23:11] <QMario> Iscd, yes.

[23:11] <lscd> QMario: unless all things were exactly the same, some would be worse than others, no?

[23:11] <lscd> .... therefore, in comparison, they would be 'bad'

[23:11] <QMario> Heaven is perfect though.

[23:11] <lscd> i don't believe in heaven

[23:11] <QMario> So is God. 

[23:11] <lscd> nor do i believe that any models of it i've heard of are anywhere near perfect

[23:12] <lscd> i don't believe in that either

[23:12] <QMario> Do you think that murderers should get away with their deeds?

[23:12] <QMario> Are you a "murderer"?

[23:12] <lscd> not afaik

[23:12] <lscd> i'm actually vegan

[23:12] <QMario> What does "afaik" mean?

[23:12] <lscd> and i try to minimise killing even of, say, bugs

[23:13] <lscd> 'as far as i know'

[23:13] <lscd> and no, but the definition of 'murderer' gets very vague very fast, though there are cases pretty much everyone can agree on

[23:13] <QMario> lscd, are you a rationalist?

[23:13] <lscd> what's a rationalist?

[23:14] <QMario> It is a person that tries to make bad things seem "good".

[23:14] <QMario> And vice versa.

[23:14] <lscd> by that definition, no, other than possibly for the sake of debate

[23:15] <lscd> i do believe in questioning assumptions

[23:15] <QMario> Such as saying that gossip is information that that person needs to know.

[23:15] <QMario> lscd, do you believe in Hell?

[23:15] <lscd> perhaps in some cases it would be, though i'm no fan of gossip

[23:15] <lscd> nope

[23:16] <lscd> i don't accept any concept of an afterlife, rebirth, etc

[23:16] <QMario> Do you think that murderers should get away with their deeds?

[23:16] <QMario> lscd, so you think after you die, it is the "end"?

[23:16] <lscd> QMario: i think that that is a more complicated question than a straightforward 'no' acknowledges; are soldiers in wars murderers? resistance fighters? what about assisted suicide?

[23:16] <lscd> QMario: essentially

[23:17] <QMario> lscd, murder is killing a person made in God's image, except if God tells you to kill that person.

[23:17] <QMario> Killing humans.

[23:17] <lscd> QMario: i don't believe that a god exists

[23:17] <lscd> hence, I don't believe that he/she/it/they can tell you to kill anyone

[23:18] <QMario> lscd, then why don't you kill your country's president/prime minister?

[23:18] <lscd> QMario: i'm anti-violence

[23:18] <QMario> Do you feel bad after doing something wrong?

[23:19] <lscd> generally, though obviously, that depends on things like my perception of wrong

[23:19] <lscd> QMario: re: murder - it's a term which is used in very different ways by different people; in the strictest definitions, i do agree that it's wrong

[23:19] <QMario> Do you think that each person should define what is right or wrong in their own eyes?

[23:20] <lscd> yes, and i think that it's a moral duty of anyone who decides to seriously explore the concepts of right and wrong to do so

[23:20] <lscd> there is a fair amount of overlap between people honestly looking, i believe

[23:21] <QMario> lscd, that makes no sense then.

[23:21] <QMario> There has to be a "right" and a "wrong" or this world will be in chaos.

[23:21] <lscd> QMario: well, this world already is in chaos ;)

[23:21] <lscd> aside from that: i'm not rejecting that

[23:21] <lscd> we said -in their eyes-, not 'absolutely'

[23:21] <lscd> obviously, people can be wrong

[23:22] <lscd> i don't think we can know with 100% certainty what's right and wrong in all situations; i think we can have pretty good ideas, based on honest thought, dialog, history, etc

[23:23] <lscd> this world is often fuzzier and greyer than some absolute belief systems like to abstract it to

[23:48] <QMario> What does Hyper Transport mean?

[23:48] <buu> hahahhaha

[23:48] <buu> qmario is trolling p6 now

[23:48] <QMario> Buu, you are here?

[23:48] <QMario> Why?

[23:49] <buu> I am everywhere.

[23:50] <buu> I am omniscient and omnipotent.

[23:50] <QMario> It says you are currently on #Perl6, but not on #Perl. You make no sense.

[23:51] <QMario> What does the term "trolling" mean?

[23:52] <lscd> QMario: generally, acting provocatively, and possibly causing disturbances to others

[23:52] <lscd> for instance, if i started saying "perl sucks" here, that would count as trolling

[23:52] <lscd> especially if i didn't try to justify it

[23:53] <lscd> there are subvarieties of trolling, such as crapflooding; see wikipedia if you want details

[23:55] <lscd> EvanCarroll Elly: The perl guide sucks then, like libertarians <-- that would be an example of  trolling

[23:58] <buu> lscd: Bah, crapflooding isn't trolling.

[23:58] <lscd> buu: it's not one of the higher forms of trolling, sure

