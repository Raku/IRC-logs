[05:04] <gaal> morning!

[05:10] <dduncan> evening!

[05:10] <dduncan> however, I can't stay and chat, since sleep beckens

[05:11] <dduncan> s/c//

[05:11] <dduncan> adieu!

[09:32] <gaal> autrijus, how's your passport situation?

[09:32] <gaal> hey szabgab :)

[09:32] <szabgab> autrijus, while answering gaal, I would like to ask you if you have time after OSCON EU to come to visit the Hungarian Perl Workshop ?

[09:32] <szabgab> hi gaal

[09:33] <new-b> hello

[09:34] <gaal> hi b

[09:35] <new-b> hi gaal :)

[10:43] <nothingmuch> morning

[10:49] <gaal> hey nm

[10:49] <gaal> nice module

[10:51] <nothingmuch> hi ho

[10:51] <nothingmuch> grazie

[10:51] * nothingmuch really wants to finish the type inferrencer for Blondie, but is at work =(

[10:51] <nothingmuch> all day i've been chasing silliness

[10:52] <gaal> maybe you need to write a silliness chaser to do that for you

[10:52] <nothingmuch> MSDEV took another 20 minutes out of my life because it failed to write a file but was displaying it as if it was written

[10:52] <gaal> see if you can throw a type inferencer into that

[10:52] <nothingmuch> our unit testing library got the TODO feature since someone finally asked for it

[10:52] <nothingmuch> and some script broke because of a very stupid versioning scheme

[10:53] <nothingmuch> how do you type infer silliness?

[10:53] <nothingmuch> i think silliness is a bottom type

[10:53] <gaal> yeah, and stupidity is a pervasive type

[10:53] <nothingmuch> pugs is costing me lots of money =(

[10:53] * nothingmuch spent $170 on books so far

[10:54] <nothingmuch> $1000 or so on a flight

[10:54] <nothingmuch> $3500 on a new laptop

[10:56] <gaal> add psychiatric expenses

[10:57] <nothingmuch> oh my

[10:57] <gaal> however, it'll get you a free ticket to yapc

[10:57] <nothingmuch> really?

[10:58] <gaal> because you'll have oodles of things you can talk about

[10:58] <nothingmuch> oh, i see

[10:58] * nothingmuch always paid when he was a speaker

[10:58] <nothingmuch> what will i talk about?

[10:58] <gaal> whatever you like, of course

[10:58] * nothingmuch will think

[10:59] <gaal> pitching MMD the way you think of it, for example

[10:59] <szabgab> hi nothingmuch !

[10:59] <nothingmuch> heh

[10:59] <nothingmuch> hi szabgab 

[11:14] <nothingmuch> szabgab: so, do you have any suggestions for what I could talk about?

[11:14] <nothingmuch> silly idea: Perl 6 is Here Today! Tomorrow Next Week!

[11:15] <nothingmuch> essentially - far fetched ideas for perl 6's future

[11:15] <nothingmuch> especially WRT implementation - all the crap I write p6l about

[11:31] <gaal> yeah, for you the hard part doesn't seem to be thinking of "all the crap"

[11:31] <gaal> it's explaining it :)

[11:41] <szabgab> nothingmuch that should be in a few month from now, not today

[11:41] <nothingmuch> i'll find a topic

[12:24] <gaal> fe

[12:47] <rafl_> Hello.

[12:47] <rafl_> On 64 bit archs I get the following messages when compiling:

[12:47] <rafl_> Triggering rebuild... done.

[12:47] <rafl_> Generating precompiled Prelude... pugs: internal error: scavenge_one: strange o bject 68

[12:48] <rafl_> Is this a pugs or a ghc bug?

[12:57] <gaal> ghc

[12:57] <gaal> what ghc are you using?

[12:57] <gaal> do you get it in the same place every time?

[12:57] <gaal> how much ram do you have?

[12:59] <rafl_> gaal: ghc 6.4-4.1 on Debian.

[12:59] <rafl_> gaal: I don't know how the buildd's hardware looks like.

[13:00] <rafl_> s/how/what/

[13:00] <gaal> hmm, it happens when your pugs is eating lots of ram. i wonder if we can influence its runtime allocation.

[13:00] <gaal> s/your/their/

[13:02] <rafl_> So who needs to fix that? ghc I guess.

[13:04] <gaal> there may be a way for us to set that. i don't have time to look into in now though

[13:04] <gaal> oh, RTS is available on the command line...

[13:04] <gaal> can you ask them to do something like

[13:04] <gaal> 1. build a pugs with no precomp prelude (vi config.yml and s/true/false)

[13:06] <gaal> 2. try to comp a prelude like this: ./pugs +RTS -M350m -RTS -CPugs src/perl6/Prelude.pm > /dev/null

[13:06] <gaal> if this helps, we can fix this

[13:07] <gaal> see http://haskell.org/ghc/docs/latest/html/users_guide/runtime-control.html

[13:15] * rafl_ tries

[13:24] * luqui just learned Curry

[13:24] <luqui> it makes me want to decouple parsing strategy from patterns in perl 6

[13:24] <luqui> but without a drastic reformulation of "let", I don't think it's possible

[13:25] <luqui> so, it's time to work on a drastic reformulation of "let" (just kidding ;-)

[13:47] <gaal> rafl_, ping

[13:48] <rafl_> gaal: pong

[13:48] <gaal> try also talking to putter, a random google shows he'd submitted a bug report to ghc about this.

[13:48] *** rafl_ is now known as rafl

[13:49] <rafl> OK, thanks.

[14:08] <rafl> WTF is perl5/Perl6-MetaModel2.0/docs/p6_role_model.graffle ?

[14:45] <gaal> rafl: I think it's a data file for pretty diagrams.

[15:26] <nothingmuch> woo!!

[15:26] <nothingmuch> App(Sym('&print'), Sym('$*OUT'), Val(42)) --> App(Val(Prim), Val(*STDOUT), Val(42))

[15:26] <nothingmuch> then gets type annotated

[15:27] <nothingmuch> App(Val(Prim::(GV -> PV -> IV)), Val(*STDOUT::GV), Val(42::IV)))::IV

[15:27] <nothingmuch> since there is a conflict, the Val(42) is coerced from IV to PV

[15:28] <nothingmuch> (the runtime provides this - in the perl runtime it's jsut sub { "$_[0]" }

[15:28] <nothingmuch> so the tree is trasformed to

[15:28] <nothingmuch> App(Val(Prim), Val(*STDOUT), App(Val(Prim), Val(42))

[15:29] <nothingmuch> well, actually to the &cast builtin, so App(Val(Prim), Val(42), Val(PV), Val(IV))

[15:30] <nothingmuch> someone say yay or something

[15:56] <GeJ> "yay".say

[16:02] * nothingmuch works on inter sub propagation of values

[16:02] <nothingmuch> err, types

[16:17] <svnbot6> r7036 | stevan++ | Perl6::MetaModel 2.0 -

[16:17] <svnbot6> r7036 | stevan++ | * sketched out role(Role) in psyche

[16:17] <svnbot6> r7036 | stevan++ | * Role now calls resolve() on it's won in MiniMetaMode_w_Roles

[16:17] <svnbot6> r7036 | stevan++ | * added test to show that the model can host inside-out objects 

[16:17] <svnbot6> r7036 | stevan++ | * other misc. minor tweaks

[16:18] <nothingmuch> huzzah!!!!! '&say' now enforces the PV type on Val(42) when it's IV

[16:19] <pasteling> "nothingmuch" at 82.81.247.180 pasted "typechecked App(Sym('&say'), Val(42))" (184 lines, 13K) at http://sial.org/pbot/13188

[16:22] * nothingmuch wonders wheather to clean out all that useful debugging or not ;-)

[16:50] <gaal> maybe commented-out trace prints need to be tagged by feature, so that they can be nuked quickly later?

[17:12] <nothingmuch> that's a nice idea

[17:12] <nothingmuch> but if you're going that far, just Log::Log4perl

[17:59] <nothingmuch> "http://nothingmuch.woobling.org/blondie_type_annotation." ~ any(<<png pdf>>)

[18:05] * nothingmuch ponders whether to do type inferrencing of generics, or to compile to a static language first

[18:11] <svnbot6> r7037 | nothingmuch++ | Type inferrencing Blondie:

[18:11] <svnbot6> r7037 | nothingmuch++ | * Blondie::TypeSafe does type inferrencing (no generics yet)

[18:11] <svnbot6> r7037 | nothingmuch++ | * example.pl simplified to demo it

[18:11] <svnbot6> r7037 | nothingmuch++ | * lots and lots of debugging info

[18:11] <svnbot6> r7038 | nothingmuch++ | explanation

[18:17] <svnbot6> r7039 | nothingmuch++ | Fix up edge colors for fully annotated AST

[18:31] <ods15> wow, sounds like larry wall and pugs guy are visiting in israel

[18:31] <ods15> unless i misunderstood this mail

[18:33] <Khisanth> autrijus and larry are visiting isreal?

[18:33] <nothingmuch> yep

[18:34] <Khisanth> ods15: nope! you didn't misunderstand! :P

[18:34] <ods15> heh

[18:35] <nothingmuch> btw, pugs guy has a name, y'know

[18:35] <nothingmuch> it's our very own autrijus

[18:35] <ods15> its hard to type

[18:35] <nothingmuch> you can use tab completion

[18:35] <ods15> i refrain from typing any weird names because i will probably mispell them

[18:35] <ods15> well i didnt know he was here

[18:35] <Khisanth> a<tab> :)

[18:35] <ods15> Amnesiac: 

[18:36] <nothingmuch> for a long time jp-autark called himself 'autark-jp' so we would always call autrijus autark

[18:36] <nothingmuch> au<tab>

[18:36] <Khisanth> not here :P

[18:36] <nothingmuch> autrijus: he isn't... he is in taiwan, leaving for estonia

[18:36] <Amnesiac> ods15, yes?

[18:36] <ods15> ... nm

[18:36] <nothingmuch> but YAPC::Israel is in feb

[18:36] <nothingmuch> Amnesiac: ods15 was learning about his tab completion feature ;-)

[18:36] <ods15> ugh i hate ::

[18:36] <Amnesiac> ah

[18:36] <Amnesiac> :/

[18:37] <Khisanth> hmm last msg field is broken

[18:37] <nothingmuch> ods15: bummer

[18:38] <ods15> ?

[18:42] <nothingmuch> WRT ::

[18:43] <ods15> whats wrt

[18:43] <nothingmuch> with respect to

[18:57] <wolverian> can object attributes have where { } clauses?

[18:57] <nothingmuch> like has $.x where { } ?

[18:57] <wolverian> can variables in general have where clauses? (basically, shortcut to STORE => { ... })

[18:57] <wolverian> nothingmuch, right

[18:57] <nothingmuch> i don't see a reason why not

[18:57] <nothingmuch> as for variables:

[18:57] <nothingmuch> my Any where { } $x; # subtyyped

[18:57] <nothingmuch> i would guess

[18:57] <wolverian> right.

[18:57] <wolverian> ?eval class Foo { has $.x where { 0 < $ 

[18:57] <evalbot_7039> Error:  unexpected "w" expecting trait, "handles", ";" or "}" 

[18:57] <wolverian> er

[18:58] <wolverian> ?eval class Foo { has $.x where { 0 < $^x < 40 } }

[18:58] <evalbot_7039> Error:  unexpected "w" expecting trait, "handles", ";" or "}" 

[18:58] <wolverian> oh well. :)

[18:58] <nothingmuch> ?eval class Foo { has Any where { 0 < $^x < 40 } $.x }

[18:58] <evalbot_7039> Error:  unexpected "w" expecting variable name 

[18:58] <nothingmuch> =)

[18:58] <wolverian> nothingmuch, if an object attribute has a 'where' clause, is the clause checked on each assignment?

[18:59] <rafl> gaal: Thanks.

[18:59] <wolverian> I mean, does it apply to private assignments too, or only ones via the public accessor?

[18:59] <nothingmuch> i would guess so

[18:59] <nothingmuch> (always)

[18:59] <wolverian> right, if the feature is general to all variables

[18:59] <nothingmuch> if you want it just public, make an acessor on your own:

[19:00] <wolverian> could you check this on p6l, or is there a reference I could read to believe it is so?

[19:00] <nothingmuch> class Foo { has $.x; method x (Any where { ... } $.x) { } }

[19:00] <nothingmuch> this automatically sets $.x, as documented in s06 or s12

[19:00] <wolverian> I have to go shower now and I won't be back today

[19:00] <wolverian> :)

[19:00] <wolverian> thanks

[19:00] <nothingmuch> uh, i'm not sure how to ask

[19:00] <wolverian> I'm interested in the general property

[19:00] <nothingmuch> if sxx doesn't help, you mail p6l

[19:00] <wolverian> nothingmuch, right, but is this documented in Sxx? if so, do you have to have the Any there

[19:01] <wolverian> ?

[19:01] <wolverian> nothingmuch, because that's pretty ugly

[19:01] <nothingmuch> well, I guess you could omit Any

[19:01] <nothingmuch> but that's a p6l question

[19:01] <wolverian> (my $foo is Int where { ... }; is naturally not ugly, but not everyone Types their variables)

[19:01] <wolverian> nothingmuch, right. want to ask that? :) shower, bye!

[19:01] <nothingmuch> nope =)

[19:01] <nothingmuch> but i may

[19:27] <nothingmuch> oh my... this is going to be tough

[19:54] * Juerd has suspend to memory and suspend to disk working

[19:54] <Juerd> for the first time in my life :)

[19:54] <Juerd> IBM ThinkPad X41 ++

[19:54] <Juerd> Kubuntu ++

[20:03] <nothingmuch> =)

[20:23] <gaal> ThinkPad++ indeed

[20:24] <gaal> does anyone know how the new company is, whatever they're called?

[20:46] <rafl> Juerd: Yes! Does suspend to ram work for you, btw?

[20:48] <Khisanth> gaal: new company for what?

[20:54] <rafl> Juerd: Oh, you wrote it works. How did you get STR working?

[21:03] <wolverian> nothingmuch, oh, that reminds me (and it's the next day already so I didn't lie ;) - I wanted a way to set attribute accessors in the 'has' statement, like C#

[21:03] <wolverian> nothingmuch, has $.foo get { ... } set { ... }; or so

[21:03] * nothingmuch doesn't know C#

[21:03] <nothingmuch> that sounds cool though

[21:03] <nothingmuch> but perhaps overly sugared

[21:04] <wolverian> perhaps. the point is to attach that to the 'has' statement

[21:04] <wolverian> (for easier refactoring etc)

[21:04] * nothingmuch delays the nested call placeholder synchronicity bug in the inferrencer till tomorrow

[21:04] <nothingmuch> *yawn*

[21:04] <nothingmuch> time to emit some C

[21:05] <Juerd> rafl: What's STR? :)

[21:06] <wolverian> I'll mail this to p6l, if no-one has objections

[21:06] <nothingmuch> wolverian++

[21:06] <Juerd> 23:04 < wolverian> nothingmuch, has $.foo get { ... } set { ... }; or so

[21:06] <Juerd> isn't that just has $foo will FETCH { ... } will STORE { ... }?

[21:07] <Juerd> $.foo even

[21:07] <wolverian> Juerd, oh, that works? :)

[21:07] <wolverian> I obviously skipped some synopses then

[21:07] <wolverian> Juerd++

[21:09] <Juerd> I don't know if it WORKS

[21:09] <Juerd> But IIRC, that's how it's done

[21:10] <Juerd> Is p6l dead, by the way?

[21:10] <Juerd> Last message I received was 3 days ago

[21:12] <wolverian> same here

[21:27] <cognominal> same here

[21:27] <cognominal> and I am worried about Nicholas being Warnocked

[21:32] <obra> hmm?

[21:33] *** khisanth_ is now known as Khisanth

[21:37] * nothingmuch 's brain is tired

[21:38] <nothingmuch> s/tired/liquified/

[21:39] <obra> nick has ways of getting the answes he needs

[21:40] <obra> and if any implementor isn't getting what they beed thry should be mailing me

[21:41] <nothingmuch> obra: i need cookies

[21:41] <nothingmuch> to implement Blondie::Backend::C and Blondie::Backend::PIR

[21:41] <nothingmuch> am i considered an implementor?

[21:41] <nothingmuch> do I need to mail you? or is IRC enough?

[21:41] <obra> email me :)

[21:41] <obra> email is logged and threaded

[21:46] <Juerd> IRC is threaded too. Just not in any usable way :)

[21:46] <nothingmuch> obra: sent

[21:46] <nothingmuch> damn amazon

[21:46] <nothingmuch> they're buttfucking the environment

[21:46] <nothingmuch> they shipped my two books yesterday

[21:46] <nothingmuch> and my CD today

[21:46] <Juerd> Isn't everyone?

[21:47] <nothingmuch> so that the books will "get there sooner"

[21:47] <Juerd> That's for the global economy, it keeps postal people working.

[21:47] <nothingmuch> at least i'll pay less customs

[21:47] <Juerd> Worse: one of my suppliers sends invoices in one envelope per page

[21:48] <Juerd> That means that if you ordered enough from them to get a two-page invoice, you get two separate envelopes.

[21:48] <Juerd> That's not just bad for the environment, it sucks to handle too.

[21:48] <nothingmuch> what do they supply?

[21:48] <Juerd> Computer stuff

[21:49] <Juerd> 15 or so products fit on one page

[21:50] * nothingmuch wonders if C wouldn't have such a bad name if the std c library was designed to be slightly easier to use

[21:50] <nothingmuch> obra: well?

[21:53] <obra> dude i'm  owalking around town o n irc with my phone

[21:53] <Juerd> rafl: Oh! Suspend To Ram!

[21:54] <Juerd> rafl: http://thinkwiki.org/wiki/Problem_with_display_remaining_black_after_resume

[21:54] <Juerd> rafl: And I had to remove cardctl -eject from the preparation script, because that crashes at a distance, when my EDGE card is inserted

[21:56] <nothingmuch> obra: so why did you ask me to mail you?

[21:57] <obra> er. youb said you were blocking on something right?

[21:57] <nothingmuch> i said I wanted cookies

[21:57] <obra> oh. I was asuming pmcs

[21:57] <obra> heh

[21:58] <nothingmuch> oh, no... i don't grok those yet

[21:58] <obra> i'll get in the nex elal flight out of logan

[21:58] <nothingmuch> nono, that'll take too long

[21:58] <nothingmuch> just mail them

[21:59] * nothingmuch calls it a night after having made 0 progress in the last 2 hours

[21:59] <obra> heh

[21:59] <nothingmuch> but all in all twas a productive day

[22:09] <svnbot6> r7040 | nothingmuch++ |  r8165@syeeda:  nothingmuch | 2005-09-19 01:03:46 +0300

[22:09] <svnbot6> r7040 | nothingmuch++ |  Blondie:

[22:09] <svnbot6> r7040 | nothingmuch++ |  * Minor refactoring of prim handling (more to come to :::Builtins)

[22:09] <svnbot6> r7040 | nothingmuch++ |  * Improvements to pretty printer readability

[22:09] <svnbot6> r7040 | nothingmuch++ |  * Better tracing in type engine - still have to fix >1 call level and placeholder synchronicity.

[22:53] <dduncan> nothingmuch, is there a Dagwood module to go with the Blondie one?

