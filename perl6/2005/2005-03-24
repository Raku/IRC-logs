[00:03] <jabbot> pugs - 1071 - Port of Mail::Address 1.66.

[00:23] <jabbot> pugs - 1072 - Ported Mail::Address tests, too.

[00:46] <stevan> iblech++ # this time for Mail::Address

[00:47] <stevan> iblech the mad porter :P

[01:07] <autrijus> theorbtwo: still there? :)

[01:09] *** stef_ is now known as cognominal

[01:38] <theorbtwo> Mm?

[01:39] <theorbtwo> I'm still here, autrijus -- are you?

[01:39] <autrijus> theorbtwo: sure. want to be an admin?

[01:39] * theorbtwo ?

[01:40] <autrijus> someone who hands out committer bits.

[01:40] <theorbtwo> Yeah, I know... but me?

[01:40] <theorbtwo> My patches are all trivial and peripherial.

[01:41] <autrijus> has nothing to do with that... just needs to be 1)around 2)willing  :)

[01:41] <theorbtwo> I'd be honored... um, does the interface require me to know Chinese?

[01:41] <autrijus> nope.

[01:41] <theorbtwo> OK, sounds good to me.

[01:42] <autrijus> ok. the criteria of handing out committer bits is

[01:42] <autrijus> 1) someone who shows willingness and capability at producing patches

[01:42] <autrijus> 2) exhibits no serious antisocial behaviour :)

[01:42] <theorbtwo> Sounds like a plan.

[01:43] <theorbtwo> A very strange one, but it's your project.

[01:43] <autrijus> it seems to be working just fine :)

[01:43] <autrijus> we'll revise if it does not work

[01:43] <autrijus> http://rt.openfoundry.org/Foundry/Project/Admin/Members/?Queue=270

[01:43] <theorbtwo> Indeed it does; I was beginning to wonder about importing bits of it into PM.

[01:43] <nothingmuch> morning

[01:44] <autrijus> is the page that you do invitations etc.

[01:44] <theorbtwo> G'morning, nothingmuch.

[01:44] <autrijus> hey nothingmuch.

[01:44] <nothingmuch> well, actually, middle of thereof

[01:44] <theorbtwo> Isn't it a bit early to be calling it morning?

[01:44] <nothingmuch> 3:45

[01:44] <nothingmuch> woke up from sleep (thirsty)

[01:44] <nothingmuch> and i just thought i'd see if autrijus is alive

[01:44] <autrijus> and instead of fetching a drink you hop on IRC?

[01:44] <nothingmuch> to tell him that I don't think i can do unPair before apply

[01:45] <nothingmuch> laptop is on the way to water =)

[01:45] <autrijus> nothingmuch: after seeing your reasons and larry's post

[01:45] <autrijus> I agree too :)

[01:45] <autrijus> so just make the binding interface monadic then.

[01:45] <autrijus> so much for purity

[01:45] <nothingmuch> but instead i did pugs -I ;-)

[01:45] <nothingmuch> beh, purity is teh suxx0r

[01:45] <autrijus> was that a Corion suggestion?

[01:45] <autrijus> I saw "Corion++"

[01:45] <nothingmuch> basically same thing

[01:45] <nothingmuch> except we didn't get around to it

[01:45] <nothingmuch> and Main.hs was not nice to him

[01:46] <nothingmuch> (or me, but no matter ;-)

[01:46] <autrijus> but it's fixed no?

[01:46] <autrijus> or what did you commit?

[01:46] <nothingmuch> yes, it is

[01:46] <nothingmuch> s/fixed/hacked/

[01:46] <nothingmuch> getLibs simply getArgs again, on it's own

[01:46] <nothingmuch> since by the time libs can be set, args have all been fudged

[01:47] <nothingmuch> to the point where it's not @*ARGS

[01:47] <nothingmuch> s/not/now/

[01:47] <nothingmuch> the problem is that pugs foo -Iblah is passing a param to foo

[01:47] <nothingmuch> but it will still cause blah to be in the include path

[01:48] <nothingmuch> so either getLibs should be pushed upwards

[01:48] <nothingmuch> or we need to find a way to propagate downwards

[01:48] <nothingmuch> which is a bit tricky

[01:48] <nothingmuch> i thought of appending PERL6LIB

[01:48] <nothingmuch> but... eh... that is just too p5 ;-)

[01:48] <nothingmuch> anyway, *yawn*

[01:48] <nothingmuch> work soon

[01:49] <theorbtwo> Why not make a function in Run that adds a library path, and call it on seeing the -I ?

[01:49] <theorbtwo> (And, for that matter, allowing use lib 'foo' or the @*INC handler to call it.)

[01:49] <nothingmuch> theorbtwo: purity and stuff, err, doesn't go well with that ;-)

[01:49] <nothingmuch> and afaict, @*INC is created later

[01:49] <nothingmuch> if we create @*INC earlier, that would work

[01:49] <nothingmuch> but we'd have to break prepareEnv to bits

[01:50] <nothingmuch> or make it do the parameter processing

[01:50] <theorbtwo> Oh, yeah.

[01:50] <nothingmuch> basically, there's parameters for pugs

[01:50] <nothingmuch> and parameters for the program as it is now

[01:50] <nothingmuch> and they're cleanly separated

[01:50] <nothingmuch> except that it hard for params to pugs to have an effect on the program itself ;-)

[01:50] <autrijus> chip: oh. pugs does this ++$named thing in S06.

[01:50] <autrijus> chip: does your Perl6::Sub do it?

[01:51] <autrijus> (+$named is optional; ++$named is required)

[01:51] <nothingmuch> oh, and autrijus: we couldn't grok RRegex very well

[01:51] <nothingmuch> for starters

[01:51] <nothingmuch> things made sense in very tiny bits

[01:51] <nothingmuch> so no :g

[01:52] <nothingmuch> i think we need to abstract away the PCRE int into types

[01:52] <hoowa> hi tang, junctive what's means in chinese?

[01:52] <nothingmuch> and wrap it in an interface that is more p5 compat

[01:52] <nothingmuch> (list context with :g, without, etc, should all be done gracefully, into a [Val])

[01:53] <autrijus> nothingmuch: yes. yes. yes.

[01:53] <nothingmuch> i don't know how to do the iterative yet, except hide it in a lazy list

[01:53] <nothingmuch> (which is actually an elegant solution ;-)

[01:53] <autrijus> that's the way to go.

[01:53] <nothingmuch> so anyway, i'll larryize bindparams tomorrow, i hope

[01:54] <nothingmuch> it's obviously not the way he wants it now

[01:54] <nothingmuch> and i'll see what sense i can make of PCRE, someone (read: stevan) beats me to it ;-)

[01:54] * nothingmuch thinks he's emerging from sleep too far

[01:54] <nothingmuch> *poof*

[01:57] <autrijus> :)

[01:59] <kungfuftr> autrijus: muwump got to tapei yet at all?

[01:59] <autrijus> in a few hrs

[02:13] <jabbot> pugs - 1074 - real Makefile.PL currently breaking main

[02:13] <jabbot> pugs - 1073 - External Language build support

[02:30] <chip> autrijus: Today, at Larry's advice, I'm settling on C<+$named is required>

[02:30] <chip> autrijus: However, I personally think that C<+$named> should be required by default, and C<+?$named> should be optional

[02:58] <chip> anybody remember whether C< sub foo is bar > is synonymous with any value of C< sub foo is bar(ANYTHING) >?

[03:28] <autrijus> chip: sure!

[03:29] <autrijus> chip: how about you convince larry and I'll implement it? :)

[03:29] <autrijus> ingy++

[03:29] <autrijus> # We just ported Inline.pm to Pugs!

[03:33] <jabbot> pugs - 1076 - * backport to 6.2

[03:33] <jabbot> pugs - 1075 - * pugs --extern

[03:35] <stevan> morning autrijus 

[03:38] <stevan> autrijus: I am guessing you are going to be pretty busy with YAPC::Tapaei but if you have a little free time I would really appreciate :g support :)

[03:39] <stevan> It would mean that I could finish File::Spec :)

[03:44] <autrijus> hehe.

[03:44] <autrijus> I thought you'd ask :)

[03:45] <stevan> :)

[03:45] <stevan> I am soooooo close

[03:45] <autrijus> sure sure

[03:45] <stevan> thank you :)

[03:45] <stevan> after this I promise I will learn haskell :)

[03:45] <autrijus> :D

[03:45] <stevan> either that or just bug nothingmuch :P

[03:46] <stevan> I was actually thinking of trying to do the -X operators myself

[03:46] <stevan> i am looking at the System.IO docs, is that the right place to start?

[03:47] <autrijus> sure.

[03:47] <autrijus> or just ask on #haskell :)

[03:49] <stevan> should I just make each on its own 'op1' line? 

[03:49] <autrijus> sure.

[03:49] <stevan> :)

[03:49] <stevan> you may see a Haskell commit from me very soon then 

[03:50] <autrijus> wow.

[03:50] <autrijus> you just wone s///g right?

[03:50] <autrijus> s/wone/want/

[03:50] <autrijus> not m//g

[03:50] <stevan> yeah s is all I really need (at least now)

[03:51] <autrijus> kay.

[03:51] <stevan> I should put -X pretty low down in the precidence list right?

[03:53] <autrijus> I think so.

[03:53] <stevan> k, I am reading http://pugs.kwiki.org/?CreatingANewOp now

[03:53] <autrijus> s:perl5:g/// ok?

[03:54] <stevan> perfect

[04:05] <autrijus> s:perl5:g/// landed.

[04:05] <stevan> excellent

[04:05] <stevan> have a sec for a question about -X?

[04:05] <stevan> I tried this: op1 "-d"    = boolIO doesDirectoryExist

[04:05] <stevan> but it always returns true :)

[04:06] <autrijus> because it only returns false when it's an error

[04:06] <stevan> ah

[04:06] <stevan> ok

[04:06] <stevan> so do I need to make a new boolIO function?

[04:06] <autrijus> sure...

[04:07] <stevan> ok I will figure this out then

[04:07] <stevan> thanks much :)

[04:07] <autrijus> :)

[04:07] <stevan> autrijus++

[04:07] <autrijus> =)

[04:07] <autrijus> I'll brb.

[04:13] <jabbot> pugs - 1077 - * s:perl5:g/// landed

[04:34] <stevan> autrijus: when you get back, I am having issues with -d and -f

[04:35] <stevan> I can get them working, but then when I do !-d it doenst work

[04:35] <stevan> parsefail basically

[04:49] <stevan> nevermind the parse fail stuff,.. I'm an idiot :P

[04:49] <stevan> it parses now, just working on the precedence 

[05:13] <jabbot> pugs - 1078 - * preserve inlined code too

[05:23] <jabbot> pugs - 1080 - Delete unneeded sample files

[05:23] <jabbot> pugs - 1079 - * $?EXECUTABLE_NAME and $PROGRAM_NAME

[05:33] <jabbot> pugs - 1081 - my first Haskell hack of -d and -f, they

[05:34] <stevan> whooo hoooo, r1081, thats my first Haskell hack :P

[05:35] <stevan> however the precedence on !-d is not right (see the tests if anyone wants to fix it)

[05:35] <stevan> t/operators/file_test_ops.t

[05:56] <autrijus> stevan++

[05:56] <stevan> thanks :)

[05:57] <stevan> hey, any tricks for using GHC 6.4 on OS X?

[05:57] <autrijus> hm? just install the .dmg no?

[05:57] <stevan> not wokring

[05:57] <autrijus> how not?

[05:57] <stevan> but I think i didnt remove all the 6.2.2 stuff

[05:57] <autrijus> oh. set path?

[05:57] <stevan> Chasing modules from: src/Main.hs

[05:57] <stevan> Compiling Config           ( src/Config.hs, src/Config.o )

[05:57] <stevan> /tmp/ghc20837.s:1612:Unknown pseudo-op: .subsections_via_symbols

[05:57] <stevan> make: *** [pugs] Error 1

[05:57] <stevan> thats the error it dies on

[05:58] <autrijus> weird. you on 10.3?

[05:58] <stevan> yup

[05:58] <autrijus> have the latest XCode tools?

[05:58] <autrijus> (10.3 ones should work)

[05:58] <stevan> yup

[05:58] <stevan> ok let me see if its something I did 

[05:58] <stevan> I think it is

[05:59] <stevan> (its getting late here)

[05:59] <autrijus> get XCode 1.5

[05:59] <autrijus> it seems that you don't have XCode 1.5.

[05:59] <stevan> nope, I do

[05:59] <autrijus> "Note also that the GHC 6.4 binary distribution requires at least version 1.5 of Apple's "XCode" developer tools to be installed. Otherwise you'll get an error related to ".subsections_via_symbols"."

[05:59] <autrijus> could it be an old assembly in PATH?

[05:59] <stevan> odd

[06:00] <autrijus> s/assembly/assembler/

[06:00] <autrijus> like, GHC 6.2 before GHC 6.4?

[06:00] <autrijus> not sure at all.

[06:00] <autrijus> GHC 6.2 should still be happy with pugs tho

[06:00] <stevan> I am going to try and clean out all of 6.2.2 and try again 

[06:00] <autrijus> k.

[06:00] <gugod> I have no such issue

[06:08] <crysflame> gcc -v returns 3.3?

[06:08] <stevan> no 3.1

[06:09] <crysflame> gcc_select 3.3

[06:09] <crysflame> then it'll work

[06:09] <crysflame> must do this as root

[06:09] <crysflame> so sudo gcc_select 3.3

[06:09] <stevan> invalid argument 3.3 it says

[06:09] <crysflame> uh

[06:09] <crysflame> gcc_select --help

[06:10] <crysflame> i'm 2 miles away from my mac. that utility lets you change to gcc 3.3.

[06:10] <stevan> ok

[06:10] <stevan> cool

[06:10] <crysflame> if you cannot change to gcc 3.3, your xcode installation is severely damaged or misconfigured

[06:10] <stevan> thanks crysflame 

[06:10] <crysflame> ya

[06:10] <crysflame> for what it's worth XCode 1.5 doesn't imply gcc 3.3 as DEFAULT compiler

[06:11] <crysflame> just that it's available. someone should report whatever line you come up with that works back to ghc so they can correct their instructions (well, state them more clearly)

[06:32] <stevan> ok worked now

[06:32] <stevan> I had to reinstall XCode

[06:32] <stevan> i think I had messed it up myself

[06:33] <stevan> I wont bore anyone with the details :P

[06:34] <autrijus> :D

[06:35] <stevan> ok, gotta restart for a system update brb

[06:35] <crysflame> dool

[06:35] <crysflame> 3r,cool

[06:35] <crysflame> ARGH

[07:57] <viirya> autrijus: any suggestion about "return" with no arguments?

[08:04] <elmex> morning

[08:07] <jabbot> pugs - 1082 - fixing grep.t.

[08:13] *** cnhackTNT is now known as cnhackTNT|away

[08:18] <nothingmuch> morning

[10:09] <nothingmuch> morning

[10:09] <nothingmuch> top of thereof, to be exact

[10:13] <lumi> Hi nothing

[10:13] <lumi> Not quite the top

[10:14] <nothingmuch> isn't top of the morning eq noon?

[10:14] <ingy> must...

[10:14] <ingy> hack...

[10:14] <ingy> pugs...

[10:14] <lumi> I don't think so..

[10:15] <lumi> Apparently it's not topological but qualitative

[10:15] <nothingmuch> WOW!

[10:15] <nothingmuch> a google server error!

[10:16] <lumi> Been having a lot of those lately :/

[10:18] <Alias_> Maybe the first generation of hard drives are starting to reach their warranty

[10:18] <Alias_> It's been almost 3 years hasn't it?

[10:18] <nothingmuch> ugg

[10:18] <nothingmuch> rdc box isn't responding

[10:19] <nothingmuch> i hate this stuff

[10:19] <lumi> That shouldn't cause an error with their architecture, afaicc

[10:21] <Alias_> lumi: That sounds right...

[10:33] <nothingmuch> http://www.neurolux.com/thread.cfm?threadid=8781&messages=19

[10:33] <nothingmuch> " The top of the morning is just before noon"

[10:59] <autrijus> greetings /\camels.

[11:00] * Alias_ has decided to implement "The Autrijus Protocol" for the PPI SF repository

[11:00] <Alias_> As many committers as possible and feature requests required to be in the form of unit tests

[11:01] <autrijus> :D

[11:01] <Alias_> http://www.devsource.com/article2/0,1759,1778142,00.asp

[11:01] *** ingy is now known as whiteg2

[11:01] <Alias_> Funny to see Thomas spruiking Rails as much as possible

[11:02] * nothingmuch wonders how HAT could help him with haskell

[11:02] <nothingmuch> should have to time to try it in about a half hour

[11:07] *** whiteg2 is now known as ingy

[11:07] <jabbot> pugs - 1083 - * use ".imc", not ".pir" as the extensio

[11:07] <autrijus> need to run for dinner.

[11:07] <autrijus> :) &

[11:07] <nothingmuch> ciao!

[11:34] <nothingmuch> hola gaal

[11:50] <gaal> hey

[11:50] <gaal> oops, that was kinda slow of me

[11:50] <gaal> nonthingmuch: did you take a look at the yaml harness?

[11:51] <gaal> it's kinda basic and all that but it works; i wanna see if there's still interest in it.

[11:51] <gaal> use it like prove

[11:51] <gaal> only get yaml output

[11:59] * nothingmuch is back

[11:59] <nothingmuch> how about i work on that now

[12:01] <gaal> is stevan awake?

[12:01] <gaal> he mentioned he wasn't sure the diag info was necessary

[12:02] <gaal> which is fine by me, because i don't have it right now

[12:02] <gaal> also:

[12:03] <gaal> could you add perhaps a command to pugs to print build information? so that each yaml upload can self-ident

[12:03] <nothingmuch> i'd like to make it do caller position

[12:03] <nothingmuch> diag does that

[12:03] <nothingmuch> i will make it suck that bit out

[12:03] <gaal> hmmm

[12:03] <nothingmuch> i can do this stuff

[12:03] <gaal> i don't know wyh it doesn't right now

[12:04] <gaal> but i didn't dig into that yet

[12:04] <nothingmuch> i don't mind

[12:04] <gaal> also i'm at woik right now

[12:04] <nothingmuch> i'm babysitting a build/test run

[12:05] <nothingmuch> gaal: then i'll do it

[12:05] <nothingmuch> i think we want to have a percentage measure for each test case

[12:05] <nothingmuch> from caller pos

[12:05] <nothingmuch> green is 100% fail

[12:06] <nothingmuch> red is 100% fail

[12:06] <gaal> i don't understand how you use the "term caller" pos

[12:06] <gaal> er

[12:06] <gaal> term "caller pos"

[12:06] <nothingmuch> $?CALLER::POSITION

[12:06] <nothingmuch> stringifies into "blah blah.t at line blah"

[12:06] <gaal> ah, ah

[12:06] <gaal> k

[12:07] <gaal> "coordinates"

[12:07] <nothingmuch> so anyway, i want to find out where each test case is

[12:07] <nothingmuch> and colorize the test cases

[12:07] <nothingmuch> in the output

[12:07] <nothingmuch> i'll start without the distributed status thing

[12:07] <gaal> k. note though that yaml doesn't stream output (yet).

[12:07] <nothingmuch> just a smoke box

[12:07] <gaal> so this is fine for batch processing

[12:07] <nothingmuch> yah

[12:07] <gaal> but sucks for hte user

[12:07] <nothingmuch> nevermind, it'll all be backgrounded i think

[12:08] <nothingmuch> we will make some sort of smoke kit, maybe

[12:08] <nothingmuch> we could implement pastebot RCP

[12:08] <nothingmuch> nothingmuch pasted test results of rxxx on linux

[12:08] <nothingmuch> etc

[12:08] <gaal> riht now btw i accumulate everything to one big doc. we can turn it into one stream+many docs

[12:08] <gaal> only if they fail :)

[12:09] <nothingmuch> "Details, details", as they say

[12:09] <nothingmuch> they are run once per r, at most

[12:09] <nothingmuch> well, never mind

[12:09] <gaal> well, otherwise you'll have so many test repotys after each commit, you;ll need to add a level of nopaste indirection to get to them :-p

[12:10] <nothingmuch> we'll see what we can do

[12:10] <nothingmuch> i think an http post should be good enough

[12:10] <nothingmuch> i wasn't reallly serious ;-)

[12:10] <gaal> what's your wallclock make + make test? mine is around five minutes on the slow machine, maybe half on the fast one

[12:11] <nothingmuch> i dunno

[12:11] <nothingmuch> on pasta it's ok

[12:11] <nothingmuch> on safta it's fast

[12:11] <nothingmuch> on syeeda it's slow

[12:11] <nothingmuch> and on eris it's pretty good

[12:11] <nothingmuch> syeeda takes about 6-7 mins to compile

[12:11] <nothingmuch> i never make test entirely

[12:11] <nothingmuch> pasta is about 3 mins for a typical incr build + test

[12:11] <gaal> can you host the smoke server?

[12:11] <nothingmuch> sure

[12:11] <nothingmuch> 2 of them

[12:11] <nothingmuch> osx + linux

[12:11] <nothingmuch> the linux being the result display thingy

[12:13] <gaal> so people can watch the commit rss, svn up && make smoke automatically, and the smoke server can nopaste before jabbot picks up :)

[12:13] <gaal> i have some time tonight to work on this, so leave me with something to do :)

[12:14] <nothingmuch> ok

[12:14] <nothingmuch> i'll try ;-)

[12:16] * gaal has been pretty busy with real world stuff lately

[12:17] <jabbot> pugs - 1084 - Begin of a URI 1.35 port.

[12:18] <nothingmuch> what real world stuff?

[12:18] <nothingmuch> (sorry, product crash, test fails... distractions)

[12:18] <gaal> $work :)

[13:07] <jabbot> pugs - 1085 - Port of URI::_generic

[13:08] <stevan> gaal

[13:08] <stevan> morning

[13:08] <stevan> hey nothingmuch

[13:09] <nothingmuch> busy

[13:09] <stevan> GHC 6.4 is sooooo much faster

[13:11] <gaal> oh, hello

[13:12] <stevan> gaal, I wanted to ask you some YAML questions before I did anything

[13:12] <stevan> so if you have a second

[13:12] <gaal> sure

[13:12] <stevan> I had some ideas for the output 

[13:13] <gaal> though isa_ok($gaal, "yaml_expert") fails.

[13:13] <stevan> is there any kind of XSLT like formatter for YAML?

[13:14] <gaal> don't think so - but deserializing into a perl object is real easy

[13:14] <stevan> but is($steve.yaml_knowledge(), 0) passes

[13:14] <stevan> have you ever used or seen the HTML output of Devel::Cover?

[13:15] <gaal> if ram is not a concern, and you don't need any kind of streaming, write perl code to process -- probably easier on your sanity than xslt.

[13:15] <gaal> no, got a url for me to peek at?

[13:15] * stevan likes XSLT 

[13:16] <stevan> http://pjcj.sytes.net/cpancover/

[13:16] <gaal> all rihgt, that's immediately communicative

[13:16] <stevan> exactly

[13:16] <stevan> so you can look and see right away

[13:17] <gaal> yup

[13:17] <gaal> though is # of passing tests as intersting as a continuum as coverage data?

[13:17] <stevan> so you think it best to just load the YAML into perl and go from there?

[13:17] <gaal> basically you want to see if it's ALL PASS, ALL PASS+TODO, or HAS FAILS.

[13:18] <theorbtwo> The problem with creating something like the devel-cover output is that we don't have anything like the devel-cover input.

[13:18] <stevan> I am thinking a bar for each test, which is seperated into the number of tests, red for fail, green for pass

[13:18] <gaal> (note to self: tag output of passing todos)

[13:18] <stevan> theorbtwo: it would be much less than the Devel::COver output

[13:19] <stevan> mostly I wanted to have that color based output

[13:19] <stevan> so its is easily readable

[13:19] <stevan> gaal, yes todos are very important

[13:19] <stevan> theorbtwo: like a 10,000 ft view

[13:20] <gaal> well, we do know if something is todo or not. so we do have interesting input

[13:20] <stevan> it probably will only make sense to see it, so give me a few minutes and I will whip someting up

[13:20] <gaal> (also need the yaml to include plan info)

[13:21] <gaal> theorbtwo: what don't we have, coverage? not objectively, true

[13:21] <gaal> but  i think stevan is aiming just for the status of those tests that are available

[13:22] <stevan> exactly

[13:23] <gaal> if someone wants *coverage* analysis, they can take it offline; this tool is meant to aggregate results across different platforms and build envs, to get immediate feedback of how the latest r affected the tests.

[13:23] * theorbtwo wonders if util/yaml_harness.pl needing an installed pugs is a bug.

[13:24] <gaal> it does?

[13:24] <gaal> it requires yaml, which is sortof a bug :)

[13:24] <theorbtwo> perl util/yaml_harness.pl t/builtins/defined.t

[13:24] <theorbtwo> Can't exec /usr/bin/pugs at t/builtins/defined.t line 1.

[13:25] <gaal> bleh

[13:25] <gaal> yes, that's a bug.

[13:25] <gaal> though

[13:25] <gaal> i *don't* havean installed pugs

[13:25] <gaal> oh oh

[13:25] <theorbtwo> Also, it gives me a bunch of "Setuid script not plain file".

[13:25] <gaal> yu need stuff in your env, one minute

[13:26] <gaal> !?

[13:26] <pjcj> I don't know if it will be helpful or not, but Devel::Cover allows annotation plugins.  If the input/output match is close enough that might save a bit of work.

[13:26] <theorbtwo> Oh, it doesn't like being passed directories.

[13:26] <gaal> to2, do you have the env vars mentioned here set? http://pugs.kwiki.org/?FrequentlyAskedQuestions

[13:26] <gaal> yes, and it doesnt glob eithre.

[13:26] <gaal> which sucks :)

[13:27] <theorbtwo> (All my dirs under /usr/src/ are setuid, so things end up being owned by the src group.)

[13:27] <theorbtwo> Ah, no, that'd explain it.

[13:28] <gaal> i think its command line should mimic prove's, so it shouldn't glob but should recurse

[13:28] <gaal> and have some syntax for skipping rules/disabled etc.

[13:28] <theorbtwo> I suspect we should really roll our own test-runner -- it'd be nice if we had failure reasons as well, for example.

[13:29] <gaal> we do

[13:29] <gaal> pass -v

[13:29] <theorbtwo> Oh.

[13:30] <theorbtwo> Ah, so we do.

[13:30] <gaal> once again mimicing prove

[13:31] <theorbtwo> Hmm, is it just me, or are the various length-like things in t/builtins/strings/length.t not interesting because they don't have any combining chars?

[13:32] <gaal> to2: feel free to add 'em!

[13:32] <gaal> no combining chars in hebrew

[13:32] <gaal> oh wait no that's not true

[13:32] <gaal> how did i forget vocalization marks

[13:33] <theorbtwo> Or as people who speak languages that use them regularly call them, "vowels".

[13:33] <gaal> not exactly:

[13:34] <gaal> the vowel is the phonetic entity

[13:34] <gaal> which, in hebrew, are not represented by letters

[13:34] <gaal> but by optional "decorators" on letters

[13:35] <nothingmuch> well

[13:36] <nothingmuch> are you guys hacking the YAML harness?

[13:36] <gaal> stevan was about to show us something i think.

[13:36] <nothingmuch> ah

[13:36] <nothingmuch> i butchered Test.pm a bit

[13:36] <theorbtwo> I'm hacking something to output a HTML test summary; I think other people are too... I'm just giving suggestions to other people on the harness and tests.

[13:36] <nothingmuch> added an env variable which will cause it to always appenned CALLER::POSITIOn

[13:37] <gaal> nothingmuch applies his famous kung-fu skillz

[13:37] <nothingmuch> i'm going to try to make it colorize the cross index

[13:37] <nothingmuch> someone ruined the aio subsystem

[13:37] <nothingmuch> and, err, nothing is working on sunos and linux

[13:37] <nothingmuch> so.... this afternoon, perhaps, when I get home, i can work on it a bit further

[13:38] <stevan> gaal almost there

[13:40] <nothingmuch> stevan: what are you doing?

[13:40] <gaal> to2, i hope you're using the yaml data, yes?

[13:40] <theorbtwo> Yes.

[13:40] <gaal> the format of which is subject to change...

[13:40] <theorbtwo> Right now, I'm wondering why I'm getting a YAML_PARSE_ERR_NO_FINAL_NEWLINE

[13:41] <nothingmuch> probably because there is NO_FINAL_NEWLINE?

[13:41] <nothingmuch> thus yielding a PARSE_ERR?

[13:41] <gaal> maybe i sohuld tell the yamlobj to close itself?

[13:41] <nothingmuch> in YAML_?

[13:41] <theorbtwo> Looks like there's a final newline to me...

[13:44] <gaal> i don't see a close method. to2, try .=ing "..." (three dots) to the data before parsing it. that's the doument terminator there

[13:46] <stevan> nothingmuch: I am making a example of the UI I am thinking of

[13:47] <theorbtwo> Waiddasec... it's reporting that the stream does not /end/ with newline character... at line 0.

[13:47] <theorbtwo> This thing is completly borked.

[13:47] <jabbot> pugs - 1086 - Ported some subclasses of URI.

[13:47] <gaal> that sounds like a pretty short stream to me :)

[13:48] <gaal> oh

[13:48] <gaal> i have an idea

[13:48] <gaal> try going through a file

[13:48] <gaal> because i saw that something was polluting my stdout probably from a leftover print in Test.pm

[13:48] <gaal> so maybe that screws up the yaml stream

[13:49] <stevan> where is a good place to put up HTML

[13:49] <gaal> yaml_harness -v -o temp.yaml

[13:49] <stevan> pastebot wont work right?

[13:49] <stevan> perlbot nopaste

[13:49] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[13:50] <pasteling> "stevan" at 67.186.136.119 pasted "example output idea" (1 line, 4.7K) at http://sial.org/pbot/8564

[13:50] <stevan> yeah that didnt work,, ignore that

[13:50] <theorbtwo> Your scratchpad on perlmonks.

[13:51] <stevan> theorbtwo: good idea :)

[13:52] <stevan> http://www.perlmonks.org/index.pl?node_id=359670

[13:52] <nothingmuch> stevan: that's a good idea

[13:52] <stevan> really high level you know

[13:52] <nothingmuch> i'd like to make todo not a different color

[13:52] <stevan> nothingmuch: colors are subject to change :)

[13:52] <gaal> stevan, each bar represents one test?

[13:52] <nothingmuch> but rather, yellow for unexpected pass

[13:52] <stevan> gaal: each bar is a file

[13:53] <gaal> each square, sorry

[13:53] <stevan> and each box within the bar is one test

[13:53] <nothingmuch> and a sort of green for expected fail

[13:53] <nothingmuch> i'd like to see that

[13:53] <theorbtwo> That's more or less what I was thinking.

[13:53] <nothingmuch> in the mega cross index thingamabob

[13:53] <nothingmuch> and make each square clickable

[13:53] <stevan> nothingmuch: yes

[13:53] <nothingmuch> to jump to the line where it happens

[13:53] <gaal> clickabel with diag info

[13:53] <stevan> it would be really really really cool if this would integrate with the test catalog as well

[13:53] <theorbtwo> I was thinking use titles on the cells to get mouseover diag info.

[13:53] <gaal> alternatively if the data ain''t huge, tooltip

[13:54] <gaal> jinx

[13:54] <stevan> theorbtwo: thats a cool idea :)

[13:54] <theorbtwo> Also, another column with % pass/fail of the file.

[13:54] <nothingmuch> gaal: the data ain't huge

[13:54] <nothingmuch> it's per test case

[13:54] <gaal> with diag? that's beginning to be big.

[13:54] <stevan> and it can do your taxes, wash your dishes and feed the cat as well

[13:54] <gaal> of course you only have that for failing tests

[13:54] <theorbtwo> And make the colors different -- red=fail, pink=unsuspected success, lt-green=todo fail, green=pass.

[13:55] <gaal> but the html is $average_test_size * 3k, which can get biggish.

[13:55] <stevan> gaal: we could break this up by folder

[13:55] <stevan> each folder gets its own HTML page

[13:55] <nothingmuch> it's probably going to be a) mod_gzippable

[13:55] <nothingmuch> b) generated locally, most of the time

[13:56] <stevan> dammit, client bug reports coming though 

[13:56] <stevan> gotta run and attend to them, be back in a bit

[13:56] <nothingmuch> you should tell them: "well, in theory, if i work on pugs, we can have p6, which is bound to have less bugs"

[13:57] <gaal> more pugs though.

[13:57] <stevan> actually not bugs, but we use the bug tracking system for things like copy changes and data changes

[13:57] <stevan> :P

[13:58] <nothingmuch> ok, so don't work on pugs, see if i care.

[13:58] <nothingmuch> humph!

[13:58] <nothingmuch> >:(

[13:58] <stevan> and since nothingmuch has not finished his top secret DBI port yet ....

[13:58] <gaal> ooh

[13:58] <nothingmuch> bwahahaha

[13:58] <stevan> *cough* slacker *cough*

[13:58] * nothingmuch doesn't do DBI

[13:58] <nothingmuch> i barely do CDBI anymore

[13:58] <nothingmuch> i tend to wrap around *that*

[13:58] <gaal> !bwa

[13:59] * nothingmuch is so cool that way

[13:59] <gaal> !!

[14:00] <gaal> to2, are you getting yaml to parse now?

[14:01] <theorbtwo> Yep.

[14:01] <gaal> was it the file thing?

[14:02] <theorbtwo> I'm an idiot; I was passing a filename where it wanted a string of YAML.

[14:02] * theorbtwo has never used YAML before.

[14:02] <gaal> nothingmuch, you mentioned you were looking into Test.pm, if you see a spare print somewhere ("looks liky oyu failed...."), please kill it

[14:02] <nothingmuch> ok,

[14:03] <theorbtwo> That's on STDERR, not STDOUT, though.

[14:03] <gaal> s/pare/tray/

[14:03] <gaal> oh, it is? then it's less of a problem

[14:27] <nothingmuch> i will not buy this record

[14:27] <jabbot> pugs - 1087 - * Added (some ported to Perl 6) tests.

[14:27] <stevan> nothingmuch: what record?

[14:28] <nothingmuch> it is scratched

[14:28] <nothingmuch> my hovercraft is full of eels

[14:28] <gaal> will you hold it against me if i said you have beautiful tests?

[14:28] * nothingmuch 's bass teach is hungarian

[14:29] <nothingmuch> i would hold them against you, gaal

[14:29] <nothingmuch> (most people miss the double meaning, i am surprised at you, gaal!)

[14:29] <nothingmuch> (you are not most people)

[14:29] * gaal is not most people

[14:30] <gaal> see, me, i'm an *individual*.

[14:30] * theorbtwo , apparently, is most people, as he didn't get it.

[14:31] * stevan didn't either, must be a desert dweller thing

[14:31] <stevan> crazy from the heat and all

[14:31] <nothingmuch> would you hold it against me, as in will you think it's not nice to say you have a beautiful body

[14:31] <nothingmuch> or would you hold the body against me

[14:31] <gaal> ha!

[14:31] <gaal> nothingmuch++; # literary observations regarding monty python skits

[14:32] <nothingmuch> the reason i got it, is that thhe first time i thought 'i am no longer infected' was a bit out of context

[14:33] <nothingmuch> anyway, so as I was saying

[14:33] <nothingmuch> John Cleese has a wonderful hungarian accent

[14:33] <nothingmuch> the nicest bit about Zoltan, my teacher:

[14:33] <nothingmuch> when he is talking about the ring finger

[14:34] <nothingmuch> the ama in hebrew, with the second syllable being the emphasized one

[14:34] <nothingmuch> he always calls it the aaama

[14:36] <stevan> autrijus: if you are around ...

[14:36] <stevan> this pugs -e 'my $path = "/path//to///a//////file"; $path ~~ s:perl5:g{/+}{/}; say $path' 

[14:36] <stevan> does bad things :)

[14:38] * gaal is stealing code from prove for the yaml harness

[14:38] <gaal> never really understood the basic difference between prove and Test::Harness

[14:38] <theorbtwo> Hmmpf, YAML does not appear to be unicode-clean per default.

[14:42] <gaal> ew!

[14:47] <theorbtwo> Checked in testgraph.css and util/testgraph.pl -- run it with a yaml file as only argument, expects it's output file to be in same dir as testgraph.css.

[14:47] <jabbot> pugs - 1088 - testgraph -- initial checkin -- creates 

[14:47] <gaal> to2, i'm ci'ing an updated harness soon

[14:47] <gaal> that does recurse

[14:48] <gaal> it will change the yaml structure a bit

[14:52] * theorbtwo wonders if there's a decent way to get it to run two test scripts at once.

[14:53] <gaal> you mean concurrently?

[14:53] <gaal> because it does do sequential now

[14:53] <theorbtwo> I meant concurrently.

[14:53] <gaal> what's your wallclock for make test?

[14:54] <theorbtwo> I have a HT CPU, I'd rather it use all of it and take half as long.

[14:54] * theorbtwo is impatient.

[14:54] <gaal> sure

[14:54] <nothingmuch> half as long?

[14:54] <gaal> to2, rm -rf t/rules

[14:55] *** metaperl is now known as _metaperl

[14:56] <theorbtwo> Eh, it doesn't actually take as long as I expected.

[14:56] <nothingmuch> make optimized usually pays off if you've got a strong machine

[14:56] <nothingmuch> much of the time is latency starting pugs

[14:56] <nothingmuch> and optimized /really/ helps there

[14:57] <theorbtwo> Hm, it didn't for me last I checked, but we have a lot more tests since then.

[14:57] <gaal> i'll look into concurrent prove later

[14:59] <theorbtwo> Don't worry too much; it's not actually that slow.

[14:59] <nothingmuch> gaal: you are getting into the testing habit, aren't you?

[14:59] <nothingmuch> gaal++

[15:00] <theorbtwo> Hmm, I should ignore the t/rules dir, though; a single test file with lots and lots of tests makes the entire graph warp -- because it tries to be wide enough to fit a single NBSP for each test.

[15:00] <nothingmuch> maybe it should be multiline then

[15:00] <nothingmuch> up to 20 tests per line, then <br>

[15:01] <nothingmuch> making a slightly thicker table row isn't so bad

[15:01] <gaal> maybe split it to several files? how come there are so many tests there anyway? were they carried over from some other distrib?

[15:01] <nothingmuch> or maybe N / x tests perl line

[15:01] <nothingmuch> gaal: p5 rules test

[15:01] * nothingmuch would like to see someone try to graph MPEG::Audio::Frame

[15:01] <theorbtwo> They were taken from the p5 tests automagically.

[15:01] <nothingmuch> ranging from 10-2000 tests per file

[15:02] <gaal> nothingmuch: well, i'm writing a test harness now, but i'm evilly not testing it before writing it.

[15:02] <nothingmuch> heh

[15:02] <nothingmuch> it's supposed to save time

[15:02] <gaal> i know

[15:02] <nothingmuch> you don't /have/ to do it if it doesn't make sense

[15:02] <gaal> i know that, too :)

[15:03] <nothingmuch> =)

[15:03] <gaal> -rw-r--r--  1 roo roo 432678 2005-03-24 17:02 all.yaml

[15:06] <gaal> r1089 - yaml harness improvements

[15:06] <gaal> run it as: util/yaml_harness -v -r t/ -o something.yaml

[15:07] <jabbot> pugs - 1089 - Stole some nice features from prove

[15:45] * nothingmuch is going to buy a costume

[15:46] <nothingmuch> and eat, and what not

[15:46] <nothingmuch> ciao!

[15:46] <theorbtwo> .oO(Costume?)

[15:48] <autrijus> yo.

[15:48] <gaal> it's the local variant of haloween here.

[15:49] <autrijus> stevan: got it.

[15:49] <theorbtwo> Ah.  I suppose Easter isn't a big holiday there...

[15:50] <gaal> well, it happens more or less near passover, which is

[15:50] <nothingmuch> theorbtwo: depends, there's also some christian arabs

[15:50] <gaal> unfortunately

[15:50] <nothingmuch> easter is always fun at grandmas

[15:50] <theorbtwo> True enough.

[15:50] <nothingmuch> except all my memories are from when i was 10 or so

[15:50] <nothingmuch> i doubt i'll enjoy searching for stuff this much anymore

[15:50] <gaal> because you can't get bread in stores during passover.

[15:50] <nothingmuch> anywho, *poof*

[15:51] <theorbtwo> Well, that would make keeping pesa dich (or however you spell it...) easier.

[15:51] <theorbtwo> OTOH, it would make not keeping pesa dich much harder.

[15:52] <gaal> exactly 

[16:00] <stevan> autrijus: thanks 

[16:05] <theorbtwo> OK, testgraph should work with the newer yaml_harness.

[16:05] <hcchien> do we still use grep {...} @foo in perl6?

[16:05] <hcchien> or it's changed to "grep {...}, @foo"

[16:06] <theorbtwo> IIRC: Yes, but the grep EXPR, LIST form no longer exists.

[16:06] <Odin-LAP> Isn't there something about no need for comma after block?

[16:06] <autrijus> find a reference?

[16:07] <autrijus> I think grep {...} @foo should work

[16:07] <autrijus> but I no longer recall the reason.

[16:07] <jabbot> pugs - 1090 - Upgrade testgraph to work with new yaml_

[16:10] <gaal> theorb2, cool.

[16:10] <theorbtwo> pugs -V should probably actually mention the version.

[16:10] <gaal> and the ghc version

[16:11] <gaal> and platform

[16:11] <gaal> i tried talking nothingmuch into adding it but that guy, he only has parties on his mind.

[16:11] <theorbtwo> Well, S06 has some examples of grep CODE LIST, but I don't see anything specific.

[16:15] <hcchien> and something like "grep { $_ % 2 } <== @data;" :)

[16:16] <autrijus> try not to think about it :)

[16:16] <autrijus> tests welcome

[16:16] <theorbtwo> Yeah, has lots of those too, but some of them are just grep { $_ % 2} @ data.

[16:16] <gaal> ==> $pressure <==

[16:17] <stevan> hcchien: I think that grep BLOCK LIST is still supported

[16:18] <stevan> I cannot imagine they would break backwards compatibility that much

[16:18] <theorbtwo> Esp in a way that makes common things harder.

[16:18] <hcchien> stevan: yes, I guess so.

[16:19] <stevan> hcchien: this sounds like a question for perl6lang

[16:20] <gaal> to2 add \n to html plz

[16:20] <hcchien> anyway, let me add it to grep.t

[16:21] <autrijus> hcchien++

[16:21] <autrijus> lets just assume grep BLOCK LIST works.

[16:21] <autrijus> stevan: * s:perl5:g/// now really works.

[16:22] <autrijus> thanks for the report.

[16:26] <stevan> hcchien: actually it used to be there, but it looks like viirya changed it to grep BLOCK, LIST in r1082

[16:26] <stevan> autrijus++

[16:26] <autrijus> so that needs to be undone

[16:26] <autrijus> or rather, additionally.

[16:26] <autrijus> grep block, list also needs to work.

[16:27] <hcchien> stevan: yes, but I think we should test both of them? 

[16:27] <stevan> autrijus: yes

[16:27] <stevan> hcchien: yes I agree

[16:27] <jabbot> pugs - 1091 - * s:perl5:g/// now really works.

[16:28] <stevan> autrijus: have you seen all of iblech's commits?

[16:28] <stevan> he is the mad perl6 porter

[16:28] <autrijus> yeah.

[16:28] <autrijus> I'm, like, wow.

[16:28] <stevan> exactly

[16:28] <autrijus> not sure how to summarize it.

[16:29] <stevan> he's porting like a muthafu*.... shut your mouth (for all the Issac hayes fans out there)

[16:29] <tomyan> i think i can see a bug with s:perl5:g, although not sure where to put test for it

[16:29] <autrijus> tomyan: t/rules/newthing

[16:29] <stevan> tomyan: what is the bug?

[16:29] <autrijus> .t

[16:29] <theorbtwo> I'm just talkin about iblech!

[16:29] <tomyan> compare: ./pugs -e 'my $test = "aad"; $test ~~ s:perl5:g/ad/d/; say $test;'

[16:29] <tomyan> with

[16:30] <tomyan> perl -e 'my $test = "aad"; $test =~ s/ad/d/g; print $test, "\n";'

[16:30] <autrijus> both prints ad.

[16:30] <autrijus> you need the trunk! :)

[16:30] <hcchien> so I pushed. :)

[16:30] <tomyan> sorry

[16:30] <autrijus> no need to be sorry

[16:30] <theorbtwo> gaal, you've got your \ns.

[16:30] <autrijus> I just fixed it 5 mins ago

[16:30] <tomyan> switched to main repository on other machine

[16:30] <tomyan> oops

[16:30] <autrijus> 5 mins ago is like, stone age.

[16:30] <stevan> autrijus: GHC 6.4 is sooooo much nicer :)

[16:30] * theorbtwo wonders if anybody has tested this with non-firefox browsers.

[16:30] <autrijus> stevan: in what regards? :)

[16:30] <autrijus> better error messages?

[16:30] <stevan> fast

[16:31] <autrijus> right!

[16:31] <autrijus> C--++

[16:31] <autrijus> C-- is totally da bomb.

[16:31] <stevan> perlbot karma C

[16:31] <perlbot> Karma for C: 28

[16:31] * theorbtwo wonders who owns perlbot.

[16:32] <stevan> perlbot karma C--

[16:32] <perlbot> C-- doesn't have any karma

[16:32] <stevan> perlbot highest karma

[16:32] <perlbot> The top 5 karma entries: autrijus: 44, nothingmuch: 42, C: 28, ~brad2901: 26, stevan: 25

[16:33] <gaal> theorb2++

[16:34] <autrijus> purr.

[16:34] * autrijus needs to work on slides.

[16:34] <autrijus> which is essentially Pugs Apocryphon 2.

[16:34] <autrijus> "Pugs Hacking 101"

[16:36] <autrijus> stevan: we may very soon require GHC 6.4 for all nontrivial stuff.

[16:36] <autrijus> like inline haskell and TH-based parrot copiler

[16:36] <autrijus> compiler

[16:36] <autrijus> maintaining two different implementations is getting out of control.

[16:37] <autrijus> 6.2 can still build basic pugs evaluator

[16:37] <autrijus> just not the fun things.

[16:37] <stevan>  if 6.4 is stable, then probably best to force the change earlier rather than later 

[16:37] <stevan> less people to complain :)

[16:37] <jabbot> pugs - 1094 -  r4336@hcchien:  hcchien | 2005-03-25 00

[16:37] <jabbot> pugs - 1093 -  r4328@hcchien:  hcchien | 2005-03-25 00

[16:37] <jabbot> pugs - 1092 - testgraph -- more newlines in the HTML (

[16:37] <autrijus> ok :)

[16:38] <autrijus> so you think it may be better to just drop 6.2 support

[16:38] <theorbtwo> I tend to agree.

[16:38] <autrijus> instead of doing it halfway?

[16:38] <stevan> autrijus: yes

[16:38] <autrijus> that's that then.

[16:38] <stevan> because the more cool stuff you put in, the more people will want to try it

[16:38] <autrijus> true.

[16:38] <stevan> the transistion is much less painful now

[16:38] <gaal> ghc 6.4 is alpha?

[16:39] <autrijus> gaal: no it's stable.

[16:39] <autrijus> it's like perl 5.8

[16:39] <pjcj> 6.4 isn't even in debian unstable yet, but it's not hard to build yourself - just takes a while

[16:39] <autrijus> I'll drop 6.2 support before 6.2 then :)

[16:39] <gaal> well, perl6 is like perl6! :-p

[16:39] <autrijus> I need to also work on GHC 6.4 porting for AIX :-/

[16:39] <gaal> so i "me to"

[16:40] <autrijus> the sexy stuff in External.Haskell is so nice.

[16:40] <autrijus> a complete haskell parser, transformer and emitter

[16:40] <stevan> autrijus: maybe by the time pugs is ready for AIX, so will 6.4 

[16:40] <gaal> thouhg: with the speed of things, p6 will be out before ghc6.4 becomes prevalent. :p

[16:40] <autrijus> in 30 or so lines.

[16:40] <autrijus> stevan: sure :)

[16:40] <stevan> gaal: pugs might push the adoption of 6.4 

[16:40] <theorbtwo> Oh: There's 6.4 i386 debs in experimental.

[16:41] <theorbtwo> I suspect it will.

[16:41] <autrijus> s/might/does/ :)

[16:41] <stevan> i mean after all, all the /cooool/ kids use 6.4,... dont you want to be /coooool/

[16:41] <gaal> that's the second language it pushes the development of.

[16:41] <gaal> is the 6.4 build faster, too?

[16:41] <autrijus> yes.

[16:41] <autrijus> much.

[16:41] <stevan> gaal it is for me

[16:41] <stevan> so are the tests

[16:41] * gaal apt-get -t experimentals.

[16:42] <autrijus> and its test message makes sense :)

[16:42] <autrijus> s/test/fail/

[16:42] <autrijus> s/fail/error/

[16:42] <gaal> s///++ :)

[16:42] <autrijus> stevan: ah, right. Data.Map is the reason.

[16:42] <obra> has pugs caused any new haskell features yet?

[16:42] <stevan> autrijus: shouldnt it be s:perl5/test/fail/

[16:43] <theorbtwo> stevan, in this case, the p5 re and p6 rule are the same... I think.

[16:43] <stevan> Data.Map++ then

[16:43] <stevan> theorbtwo: not in pugs :)

[16:43] <autrijus> stevan: and I need to survey the new .*Map stuff

[16:43] <autrijus> that will likely to speed up things another 20% or so

[16:43] <theorbtwo> G'point.

[16:43] <autrijus> and is cumulative with the compiler backend

[16:43] <autrijus> obra: the Unicode stuff, for one

[16:44] <stevan> you know,.. i think I will miss the days of everyone on perlmonks whining about how long perl6 is going to take

[16:44] <autrijus> nothing much else, though.

[16:44] <stevan> damn you autrijus 

[16:44] <autrijus> I think those days are already gone :)

[16:44] <gaal> theorbtwo, what's the package name in experimental?

[16:44] <stevan> autrijus++ # for stopping the whining 

[16:44] <autrijus> #perl6++ :)

[16:45] <theorbtwo> ghc6.  You need to explicitly install ghc6/experimental, though.

[16:45] <stevan> ghc6??

[16:45] <theorbtwo> (Hmmpf, this is removing ghc6-prof and hat for me...)

[16:45] <theorbtwo> Yeah, it only refers to the major version, for some reason.

[16:45] <theorbtwo> That's pretty normal for debian.

[16:45] <gaal> yes i know. just weirdly the error message about the virtual package mentiones something else.

[16:45] <autrijus> I was very delighted reading savige's perlmonk post today

[16:45] <autrijus> brings back the olden memories

[16:46] <theorbtwo> Odd, I didn't get a message about a virtual package.

[16:46] <autrijus> # http://perlmonks.thepen.com/437487.html

[16:46] <gaal> odd, i don't get the 6.4 package :)

[16:47] <gaal> (the virt package error is when you try "ghc"

[16:47] <gaal> )

[16:47] <clkao>  /win25

[16:48] <gaal> savige++; # Lighter Side of Perl Culture series

[16:49] * theorbtwo wonders about the recent rise of the word "scintillating".

[16:50] <autrijus> I don't even know what it is supposed to mean.

[16:50] <gaal> ah, silly me. i had experimental commented out in my sources.list

[16:51] <autrijus> (other than the obvious define: in google)

[16:51] <autrijus> gaal: very prudent of you :)

[16:51] <gaal> :)

[16:52] <theorbtwo> http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=300343 ++

[16:53] <gaal> i notice it depends on perl5

[16:54] <gaal> so does pugs :)

[16:56] <autrijus> it's this roundabout boostrapping thing.

[16:56] <autrijus> (ghc was bootstrapped by perl5 long ago.)

[16:56] <autrijus> the part done in perl5 was named "Evil"

[16:57] <autrijus> and the part bootstrapped with haskell was named "Glorious."

[16:57] <gaal> heh

[16:57] <autrijus> now only the Evil Mangler remains.

[16:57] <autrijus> the other parts are now all Glorious.

[16:57] * shapr grins

[16:57] <gaal> that's what the G in GHC stands for, no? Glorious

[16:57] <Odin-LAP> Glasgow, wasn't it?

[16:57] <shapr> The full name is the Glorious Glasgow Haskell Compiler.

[16:58] <gaal> aaah, right.

[16:58] <theorbtwo> No, that stands for Glasgow... but ghc -V gives Glorious Glasgow Haskell Compiler.

[16:58] <shapr> There were more pieces written in perl before.

[16:58] <shapr> oh, I see autrijus was just saying that, oops.

[17:08] *** Lynx_ is now known as Lynx_awy

[17:09] <gaal> beh, yaml_harness doesn't catch pugs diagnostics from parsefails

[17:09] <gaal> gaal--

[17:10] <theorbtwo> gaal, while you're at it -- put in the time of the test run?

[17:10] <theorbtwo> Er, when it ran, not how long it took.

[17:10] <gaal> good idea. (prolly should use GMT?)

[17:11] <gaal> more metadata == good, if anyone has any ideas

[17:12] <theorbtwo> just give a time().

[17:12] <gaal> righto.

[17:16] <lhooq> and dump %?OS (or whatever the name is)

[17:16] *** lhooq is now known as dada

[17:24] <theorbtwo> Oh: Skip m/[A-Z]/ (or is that m/Disabled/?)

[17:27] <gaal> data: i'd rather that go into pugs -V, which i dump anyway

[17:27] <jabbot> pugs - 1095 - testgraph: Output sane HTML, %success co

[17:30] <gaal> theorbtwo, should i hardcode that in?

[17:30] <gaal> oops, dada :)

[17:35] * theorbtwo boggles -- it actually works on IE, Firefox, and Opera!

[17:36] <Odin-LAP> What does?

[17:36] <theorbtwo> testgraph.html

[17:36] <Odin-LAP> Is such a thing even possible?

[17:37] <theorbtwo> It presently doesn't try anything /that/ complicated, but I thought the title attribute on non-a tags didn't work on IE.

[17:37] <gaal> [off topic] http://www.cs.huji.ac.il/~yweiss/Colorization/ be sure to scroll down

[17:38] <theorbtwo> http://desert-island.dynodns.net/misc/testgraph.html if you want an example without generating your own.

[17:39] <theorbtwo> Ah, yeah, saw that before -- it's pretty nifty.

[17:40] <gaal> apart from the obvious insane compression, there's also the neato recoloration app

[17:40] <gaal> theorbtwo++; # testgraph looks really nice now!

[17:40] <gaal> need to write an aggregator of yaml inputs

[17:42] <gaal> hmph, it's not so trivial to catch deaths.

[17:42] <theorbtwo> Can't you just catch both STDOUT and STDERR?

[17:43] <gaal> it isn't me :)

[17:43] <theorbtwo> Oh.

[17:48] <malaire> does that testgraph-script generate one html-page for each revision?

[17:48] <malaire> Is there any way to quickly see test-result-diffs between revisions?

[17:50] <theorbtwo> No easy way at present.

[17:52] <gaal> hmm, is there a way to get the svn r number?

[17:52] <gaal> (without peeking :)

[17:53] <rgs> not really. try svn info

[17:53] <theorbtwo> src/Version.h

[17:53] <malaire> I was thinking of a format quite similar to what you currently have. Each test-file has single line in html-output with colored blocks, but each block represents that test-files result for e.g. last 20 revisions.

[17:54] <malaire> i.e. one colored block per test-file per revision

[17:57] <jabbot> pugs - 1098 - Added t/examples/golf.t

[17:57] <jabbot> pugs - 1097 - * Ported some other subclasses of URI.

[17:57] <jabbot> pugs - 1096 - Ported Commands::Guarded 0.01 (complete 

[18:00] <theorbtwo> I don't know if a file-level resolution is useful.

[18:01] <malaire> It would of course be better to get some format which shows test-level diffs between revisions...

[18:02] <malaire> e.g. Could the colored block in current version contain more information that just the color. (e.g. add a single 'x' (or something else) for each block which has changed from last rev

[18:03] <malaire> s/block/blocks/ && s/that/than/

[18:03] <theorbtwo> Hmmm... if we keep around enough data, I could make each block show "r..." for the last time it changed -- and possibly put a border on those that changed recently.

[18:04] <malaire> border might be good. It works also for small blocks which are too small to contain any letters..

[18:07] <jabbot> pugs - 1099 - * pugscc --runparrot examples/mandel.p6 

[18:08] <elmex> PUGS

[18:08] <autrijus> mandel runs.

[18:12] <elmex> thats a major feature ;)

[18:13] <autrijus> yes.

[18:13] <mugwump> please, nobody tell /. :)

[18:13] <autrijus> lol.

[18:13] <elmex> not?

[18:13] <autrijus> probably wait till 6.0.13.

[18:13] * mugwump nods

[18:14] <autrijus> # http://autrijus.org/mandel.imc

[18:15] <nothingmuch> evening

[18:15] <theorbtwo> Find yourself a nice costume?

[18:15] <autrijus> nothingmuch: hey. --runparrot mandel.imc  works.

[18:16] * nothingmuch got a pink wand

[18:16] <nothingmuch> with sparkly stuff

[18:16] <nothingmuch> you mean parrot in pugs?

[18:16] <mugwump> pugs spits out imcc and passes it to parrot I think

[18:16] <mugwump> not embedded yet

[18:17] <malaire> it really works :) and it's quite fast...

[18:17] <mugwump> which will be needed for eval $string

[18:27] <jabbot> pugs - 1100 - * simple optimizer, suggested by Coke, t

[18:32] <autrijus> is there a debian package for parrot or something?

[18:32] <autrijus> there's no parrot in fbsd ports :-/

[18:32] <autrijus> cls_bsd_: *hint* *hint*

[18:37] <jabbot> pugs - 1101 - * Coke pointed out we need no intermedia

[18:39] * gaal has been abducted by $work

[18:48] <elmex> woho

[18:53] <elmex> PugS

[18:54] <elmex> ?

[18:54] <elmex> i-blech-bot?

[18:58] <gaal> where's a good place to put a small data file that's useful only for people running smoke tests?

[18:58] <gaal> in the tree that is

[18:58] <gaal> util/?

[18:58] <gaal> docs/?

[18:58] <gaal> top level?

[18:58] <theorbtwo> util/, probably.

[18:58] <autrijus> util/

[18:58] <gaal> k thanks

[18:58] <theorbtwo> I should move the testgraph.css...

[18:59] <ninereasons> are we going to be able to say things like " $i .. -$i " ?

[19:00] <ninereasons> or is it a good thing to have to reverse a range, to count down?

[19:00] <theorbtwo> Well, there's always 10..-10:-1.

[19:01] <malaire> hmm.. will that interfere with proposed radix-syntax  :16<abcd> ?

[19:02] <ninereasons> I get "-1", did I do it wrong?

[19:02] <ninereasons> or is it a TODO?

[19:03] <theorbtwo> This is a good question, mal.

[19:04] <autrijus> eh.

[19:04] <autrijus> 10..-10:by(-1)

[19:04] <autrijus> is the syntax.

[19:04] <autrijus> that's a TODO.

[19:05] <theorbtwo> Ah.

[19:05] <ninereasons> oh.  I like that syntax.

[19:06] <Khisanth> 10..-10:by(1) will emit a warning? :)

[19:06] <autrijus> maybe :)

[19:07] <Khisanth> I don't know ... seems like it would better if the "steps" were an absolute value

[19:15] <ninereasons> bleh.  coworker bumped my power cord

[19:15] <ninereasons> never happened before

[19:16] <Khisanth> badly place power cords?

[19:17] <ninereasons> I didn't think so.  I've changed my mind 

[19:27] <jabbot> pugs - 1102 - Ported most of URI.

[19:27] <iblech> Sorry for iblechbot rejoining that often -- my gateway has extreme power supply problems, reboots every ten minutes or so :/

[19:31] <ninereasons> boy, it takes so long for pugs to be compied with "make optimized"

[19:31] <ninereasons> I suppose it's not really worth it, at this point.

[19:35] <autrijus> iblech: I'm in awe.

[19:36] <autrijus> five modules in a day.

[19:40] <stevan> iblech: me too

[19:40] <stevan> very impressive

[19:43] <nothingmuch> iblech++?

[19:43] <stevan> too late nothingmuch 

[19:43] <nothingmuch> perlbot karma ibelch

[19:43] <perlbot> ibelch doesn't have any karma

[19:43] <nothingmuch> eh

[19:43] <stevan> his gateway sucks

[19:43] <nothingmuch> perlbot karma iblech

[19:43] <stevan> huh

[19:43] <perlbot> Karma for iblech: 4

[19:44] <nothingmuch> see, not enough.

[19:44] <nothingmuch> iblech++

[19:44] <stevan> iblech++

[19:47] <jabbot> pugs - 1103 - * benchmarking time

[19:51] <elmex> i want more carma and women

[19:57] <jabbot> pugs - 1104 - more detailed oo/attributes tests; some 

[20:15] <autrijus> rgs: you'll like this.

[20:15] <autrijus> gugod and ingy ported Kwid to Spork/Kwiki.

[20:15] <autrijus> and they wrote a Spork to S5 generator.

[20:15] <autrijus> so you can just write Kwid

[20:15] <autrijus> and generate S5.

[20:15] <autrijus> nice eh?

[20:15] <autrijus> it's going to power YAPC::Taipei speakers.

[20:16] <autrijus> journal up. zzz &

[20:20] <pjcj> autrijus_journal =~ s/ibelch/iblech/

[20:20] <pjcj> or whatever the P6 syntax is ;-)

[20:20] <theorbtwo> iblech++

[20:22] <rgs> autrijus: ooh nice indeed.

[20:22] <gaal> hi, i updated the yaml harness a bit again

[20:22] <autrijus> fixed.

[20:23] <gaal> 1105 already! wow

[20:27] <jabbot> pugs - 1105 - cleanups; optionally identify tester

[20:34] * Limbic_Region wonders if there is enough p6 support in Pugs to write his Rotational Prime Number finder code

[20:34] <Limbic_Region> p5 regexes are supported right?

[20:35] <pjcj> via pcre

[20:37] <Limbic_Region> right, so /e isn't supported - will need to modify that piece

[20:37] <jabbot> pugs - 1106 - Added Config::Tiny 2.01 (complete with t

[20:37] <gaal> whee!

[20:37] <gaal> i like that module.

[20:39] <Limbic_Region> out of curiosity, will these modules be revisited/refined as Pugs becomes more feature complete?

[20:40] <gaal> depends on the individual authors+porters, presumably

[20:40] <ninereasons> I certainly hope so.  They'll be museum pieces within a year, otherwise, I suspect.

[20:45] <Limbic_Region> I am not afraid of code being untouched that is solid - I just think there might be an awful lot of "work-arounds" ATM as the features aren't available

[20:46] <ninereasons> well, and things aren't settled down, entirely, right?

[20:46] <ninereasons> the differences between "Perl 6 Now" and Pugs are noticeable.

[20:47] <ninereasons> that pace of change will continue, at a slowing rate, won't it?

[20:55] <stevan> Limbic_Region: none of the code in modules/ is expected to work for a while

[20:56] <stevan> The idea of the modules/ directory is to start porting your favorite module to perl 6 and as things get completed they can serve as pseudo-integration tests for Pugs

[20:56] <Corion> A good evening! Mad props to nothingmuch++ who implements stuff I dream up

[20:56] <stevan> if you wanna see hacks and work arounds,.. check etc/FileSpec/ :)

[20:56] <stevan> howdy Corion

[20:57] <Corion> I dreamt up the -p , -n and multiple -e switches, which is what I'll start implementing now (as soon as "svn up" does its deed)

[20:58] <Corion> -e print -e "q(" -e hello -e " " -e world -e ")"' should work IMO

[20:58] <Corion> (and AFAIK it works in Perl5

[20:59] <qmole> wow, so it does

[20:59] <stevan> Corion: but why would you want it too?

[21:00] <Corion> stevan: I find -p and -n very convenient (in P5), and the multiple -e is just a side effect of implementing -n and -p. Also multiple -e switches get me around ugly quoting issues from time to time

[21:00] * stevan does mostly web stuff

[21:00] <Corion> but feel free to discuss this more before I implement it, so I don't waste my time (well, it's not wasted, as I learn Haskell from that)

[21:00] <gaal> multiple -e works in sed too :)

[21:01] <Corion> stevan: Heh - I relatively seldom do web stuff (except for http://zaphod.datenzoo.de )

[21:01] <Corion> ( SubEthaEdit for those who don't have OSX but just a browser)

[21:02] <Corion> For -p and -n, I will need to keep a buffer of the "current script", where -p and -n fill the head and tail of the buffer, while the -e's accumulate the body of the script

[21:03] <Corion> What does the "G" flag of "svn up" mean?

[21:04] <gaal> conflict iirc

[21:04] <Corion> gaal: Ah - that's plausible ... I should delete my hacks to make way for nothingmuch's implementation :)

[21:05] <theorbtwo> svn revert filename

[21:05] <Corion> theorbtwo: Ah - that wipes all local modifications?

[21:06] <stevan> actually G is not conflict

[21:06] <stevan> G is merge

[21:06] <stevan> (i think)

[21:06] <stevan> yeah G is merged

[21:06] <stevan> http://svnbook.red-bean.com/en/1.0/re28.html

[21:06] <Corion> stevan: That would be ugly, because nothingmuch reimplemented what I hacked on, but differently, I think ... Or svn is far more magic than I think :)

[21:07] <stevan> corion, you might want to rm that file and svn up it agin

[21:07] <Corion> stevan: Yep

[21:17] <jabbot> pugs - 1109 - Ported Getopt::Std 1.05 (complete with t

[21:17] <jabbot> pugs - 1108 - Work on build process for inline Haskell

[21:17] <jabbot> pugs - 1107 - add --exclude (-X) so that t/rules/Disab

[21:20] <Corion> Yay. I just fixed 10 "skip" tests on Win32 to "pass", at least for Win2k, but they should pass under Win9x too - should I paste the change onto pastebot for incorporation?

[21:20] <gaal> you don't have commit privs, Corion?

[21:21] <gaal> please do

[21:21] <Corion> gaal: Naah - I was here yesterday evening for one hour - commit privs don't come /that/ quickly (and I don't want them yet either)

[21:21] <gaal> you'd be surprised :)

[21:21] <Corion> Gah - no paste url in the scrollback :)

[21:22] <gaal> perlbot nopaste

[21:22] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[21:22] <theorbtwo> Let me see the patch?

[21:22] <Corion> gaal: Thanks! I have to get accustomed to having an infobot on the channel :) I ran one in a different chanel+life :)

[21:23] <pasteling> "Corion" at 217.86.57.96 pasted "Make t/examples/examples.t Pass instead of Skip on Win32" (46 lines, 964B) at http://sial.org/pbot/8588

[21:23] <gaal> sure

[21:23] <Corion> I pasted the whole new code instead of just a diff

[21:24] <Corion> I also added more noise via some diag() calls, but I think that more noise is good while we still hunt for small stuff like $?OS being "MSWin32" instead of "win32" :)

[21:26] <theorbtwo> Corion, sure you don't want commiter bits?

[21:27] <Corion> theorbtwo: Currently my tree is a mess, but it would be convenient to have them, sure. The thing is, I don't know how long/often I'll commit stuff. On the other side, the Win32 part needs a strong avatar :)

[21:27] <theorbtwo> Yes, it does.

[21:27] <theorbtwo> And avatar is not the correct term.

[21:27] <Corion> theorbtwo: I see it as "with big privileges, there comes big responsibility" - and I don't really want the responsibility :)

[21:27] <jabbot> pugs - 1110 - include svn revision info in report

[21:27] <gaal> Corion++, r1111

[21:28] <theorbtwo> Not really, no.

[21:28] <gaal> snv has the responsibility.

[21:28] <gaal> svn

[21:28] <theorbtwo> Don't write code that rm -rf's anything important, that's about as far as it goes.

[21:29] <theorbtwo> If you write something that's crap, it'll get backed out, everybody's good.

[21:29] <Corion> theorbtwo: According to Wikipedia ( http://en.wikipedia.org/wiki/Avatar ) , Avatar is not too far. But Knight In White Armor is close enough :)

[21:29] <Corion> theorbtwo: Ah, if I were malicious, I'd simply release stuff on CPAN.

[21:29] <Corion> s!close enough!closer!

[21:29] <gaal> champion is a suitable word.

[21:29] <theorbtwo> Champion works well.

[21:30] <Corion> Yeah - Champion would be the term I was looking for :)

[21:30] <Corion> So, I'll commit three new files as failing tests first, that's the general spirit of development, right? Even if I won't be around to fix the failures within the next few days ?

[21:31] <theorbtwo> [email@hidden.address] ?

[21:31] <Corion> ... or should I note in the tests how I envision the implementation ?

[21:31] <theorbtwo> Yes, it is.

[21:31] <Corion> theorbtwo: True

[21:31] <gaal> yes. the failing test is your bug report.

[21:31] <Corion> gaal: It's not a "bug" per se, it's more missing features, like -n and -p

[21:31] <theorbtwo> In that case, they should be todo tests.

[21:31] <gaal> your todo_is is your feature request.

[21:32] <Corion> BTW, has anybody applied my "win32 fix" already ?

[21:32] <gaal> yes,

[21:32] <Corion> Ah - todo_is it shall be then

[21:32] <gaal> r1111

[21:32] <gaal> Corion, when someone says something that ~~ /r\d+/, they usually mean they just committed :)

[21:33] <Corion> gaal: Aaah :) So I should quickly svn up again :)

[21:33] <Corion> gaal: Yeah - I'm still learning the lingo :)

[21:33] <gaal> is the dependency on Spiffy new?

[21:34] <gaal> just noticed my build fails on msys

[21:34] <gaal> which has a cranky ol' 5.6.1

[21:34] <Corion> Ugh ... The build should not depend on Spiffy ... But that's to be expected if we have Ingy on board ...

[21:34] <gaal> i guess.

[21:35] <gaal> at least it doesn't depend on perl6. yet. ;)

[21:36] <Corion> Spiffy doesn't even work on all Perl 5.8 - it wants at least 5.8.4 I think

[21:36] <chip> Why doesn't Spiffy like early 5.8?

[21:37] <jabbot> pugs - 1111 - apply Corion's patch to allow tests on w

[21:37] <Corion> chip: Don't ask me. I only know it doesn't work with 5.8.0

[21:37] <gaal> theorbtwo, there's some new metadata for the htmlizer if you want it.

[21:38] <Corion> BTW, is there an inverse operation to slurp() ? I think it's called spew(), but it doesn't seem to be used/tested/implemented ?

[21:38] <gaal> also something to skip t/rules/Disabled

[21:39] <gaal> `cat $var > $file`

[21:39] <gaal> i've seen that done :((

[21:39] <chip> ha.  spew (FILE|HANDLE), STRING

[21:39] <Corion> gaal: Ha ha ha ...

[21:39] <chip> what a great idea

[21:39] <Corion> chip: Ah, so it should exist ... I'll write a test with it and see how badly it blows up :)

[21:40] * chip still wishes that the chip and chimp operators had been accepted into Scalar::Util

[21:40] <gaal> say, with =<file> syntax, is file the literal file name?

[21:41] <theorbtwo> Wanted an epinonymous operator in the core, chip?

[21:41] <Corion> chip: True :)

[21:41] <gaal> because if the syntax is =<$filename>, i don't understand how that's going to work in the sigil-free dialect

[21:42] <theorbtwo> Oh: Corion, on your first commit, add yourself to AUTHORS please.

[21:42] <Corion> theorbtwo: Ah - good self-maintenance :)

[21:42] <gaal> Corion: you may find t/README useful if you haven't read it yet.

[21:42] <Corion> It's sorted alphabetically by first name?

[21:43] <gaal> no, it we keep randomly shuffling it but it always comes out looking that way.

[21:45] <theorbtwo> Yes.

[21:45] <theorbtwo> To whit, it's sorted unicodeographically, but ignoring all chars that do not match [A-Za-z].

[21:45] <theorbtwo> See utils/fixauthors.pl

[21:47] * Juerd hopes Perl 6 will have a built in way to sort image3 < image20 easily.

[21:48] <Corion> I pretend to understand the Unicode that FireFox renders as ??? in the agreement :)

[21:48] <theorbtwo> Hmm, autrijus said he'd fix that.

[21:48] <theorbtwo> He pointed at an English translation, which I long ago lost, but it's nothing bad.

[21:49] <Juerd> theorbtwo: Yes, but you are a participant in a plain text chat network, and thus not trustworthy :)

[21:50] <Juerd> It's a legal, binding agreement. I always wonder why people accept those things so lightly.

[21:50] <Corion> Juerd: Well, Autrijus will have a hard time to enforce it in Germany :)

[21:50] <theorbtwo> Juerd, there are two reasons: 1) Trust in other people who say that they are OK.

[21:50] <theorbtwo> 2) A blind assumption that they will not come into play.

[21:51] <Juerd> Corion: You'd be surprised.

[21:51] <Juerd> theorbtwo: But how can you know those people can be trusted?

[21:51] <chip> =($file) is great for the zsh command line

[21:51] <Juerd> theorbtwo: You could be some h4x0r who's inserting packets into your irc tcp stream...

[21:52] <Juerd> After having changed the chinese agreement

[21:53] <theorbtwo> That is true.

[21:53] <ninereasons> someone said "carelessness is an autrijus mantra"

[21:53] <Juerd> carelessness is great when hacking

[21:53] <theorbtwo> However, people who have a long relationship with me will notice certian patterns in my typing and modes of speach.

[21:53] <Juerd> Not when virtually signing a legal document.

[21:54] <Corion> Hmmm. svn doesn't give me no love when I try svn commit -m "message" --user corion --password secret

[21:54] <Juerd> theorbtwo: So does the h4x0r who has sniffed your plain text irc connection for the past four months.

[21:54] <theorbtwo> That seems like a lot of effort to go to.

[21:54] <gaal> corion, try w/o a user at all

[21:54] <gaal> press enter at the passwd

[21:54] <gaal> then enter your username and password

[21:54] <Corion> gaal: For commit, not for check out :)

[21:54] <gaal> i know

[21:55] <Juerd> They could easily use a markov chaining algo to verify that what they type agrees to your patterns :)

[21:55] <Juerd> theorbtwo: Certainly.

[21:55] <gaal> it is clever :)

[21:55] <Juerd> theorbtwo: But if we build things on trust, then why the written agreement?

[21:55] <Corion> gaal: Nope, doesn't work.

[21:55] <Juerd> These things are not in synch.

[21:55] <gaal> corion, what shell are you using, mingw?

[21:56] <Corion> gaal: Nope - plain cmd.exe

[21:56] <gaal> and the svn, is it a pure svn client?

[21:56] <Corion> and svn tries to connect to http://svn.openfoundry.org:80

[21:56] <Corion> gaal: Yep - some Win32 svn client

[21:56] <Corion> (and checkout worked well, apparently)

[21:57] <Corion> Anyway - I should hack a bit on making -e print -e 1 work instead of worrying about this :)

[21:57] <gaal> what error message are you getting?

[21:58] <Corion> gaal: Authorization failed

[21:58] <Corion> (resp. the German translation of that)

[21:58] <gaal> try --username instead of --user, though i doubt that's it :)

[21:59] <Corion> gaal: I already tried --username (typo up there)

[21:59] <gaal> beh, i'd try a clean checkout and with no auth at all on the command line

[21:59] <Schwern> $ perl Makefile.PL 

[21:59] <Schwern> Ambiguous use of -XXX resolved as -&XXX() at ../../inc/Module/Install/Pugs.pm line 29.

[21:59] <Schwern> ...

[21:59] <Schwern>   at ../../inc/Module/Install/Pugs.pm line 29

[21:59] <Corion> gaal: Yep

[21:59] <Corion> Schwern: I got the same (and ignored it for the time being)

[22:00] <gaal> Schwern, it depends on Spiffy now, it seems.

[22:00] <Schwern> Corion:  Hard to ignore.  I can't build anything!

[22:00] <Corion> Banish Spiffy :(

[22:00] <Schwern> I have Spiffy

[22:00] <Corion> Schwern: Yeah - I'm running on yesterdays build

[22:01] <Schwern> pugs really shouldn't be using Spiffy

[22:01] <Corion> Schwern++

[22:01] <Schwern> Not until it has some bloody documentation

[22:01] <Schwern> And the line in question is a comment. :)

[22:02] <Corion> Schwern: Spiffy is a source filter, so it's supposed to mess up your script in undecipherable ways

[22:02] <gaal> added in 1108 it seems.

[22:02] <Schwern> $ make test

[22:02] <Schwern> chmod: too few arguments

[22:02] <Schwern> Try `chmod --help' for more information.

[22:02] <Schwern> make: *** [/.exists] Error 1

[22:03] <Schwern> Why are they building pugs with MakeMaker?

[22:03] <theorbtwo> svn ci --username corion filename

[22:04] <Schwern> INST_LIBDIR and INST_ARCHLIBDIR aren't getting set. :(

[22:04] <gaal> Schwern, it's a comment?

[22:04] <Schwern> gaal:  Yes.  The line with XXX in it is a comment.

[22:04] <gaal> not in my tree

[22:04] <Corion> theorbtwo: I don't want to checkin the AUTHORS file, I just want to commit the changes :)

[22:05] <Schwern> #         $mm->{'INST_AUTODIR'} = 'XXX$(INST_LIB)/$(FULLEXT)';

[22:05] <gaal> that's not line 29

[22:05] <gaal> use Spiffy -XXX;

[22:05] <Schwern> But that's the only lien which uses -XXX so I delted the use Spiffy line, too

[22:07] <gaal> "Spiffy can export a few debugging functions [...] XXX dies with the output"

[22:07] <Schwern> *thud*

[22:08] <Schwern> THANKS FOR BREAKING THE BUILD

[22:09] <stevan> somebody wake up ingy

[22:09] <Schwern> Somebody with committ access just remove the code

[22:09] <gaal> no, eeverybody svn up

[22:09] <gaal> r1112

[22:09] <Schwern> Thank you

[22:09] <gaal> my pleasure.

[22:10] <Schwern> Still won't build, but hey

[22:10] <gaal> pesky

[22:10] <gaal> buildingforme

[22:10] <gaal> what are you getting?

[22:10] <theorbtwo> gaal, do you have write permission for /?

[22:10] <theorbtwo> Cannot write /.exists:Permission denied at /usr/share/perl/5.8/ExtUtils/Command.pm line 127.

[22:11] <gaal> what's /?

[22:11] <Schwern> $ make

[22:11] <Schwern> chmod: too few arguments

[22:11] <Schwern> Try `chmod --help' for more information.

[22:11] <Schwern> make: *** [/.exists] Error 1

[22:11] <Schwern> I see exactly where the problem is

[22:11] <Schwern> He's rewriting init_INST

[22:11] <gaal> how come it works for me then?

[22:11] <Schwern> In Module::Install::Pugs::set_makefile_macros()

[22:11] <gaal> ah

[22:11] <gaal> *that* /

[22:11] <Corion> Oh great. And it now fails on Win32 due to badly built path names (forward slashes instead of backslashes :(((( )

[22:11] <gaal> wait wait way

[22:11] <gaal> let's take this one at a time :)

[22:12] <Corion> ... in nmake test. But I'm away hacking on different stuff anyway :)

[22:12] <gaal> i have msys, so very possibly my / is writable.

[22:12] <gaal> forward slashes ought not break on windows!

[22:12] <gaal> since c system calls honor them

[22:12] <gaal> unless there's some stupid string comparison?

[22:13] <gaal> Corion: spaces in pathnames do break the build on win32, at least used to.

[22:13] <Corion> gaal: That's expected, because spaces in pathnames break the build everywhere. But forward slashes as the path separator don't work in the Win32 shell, and that is what I'm seeing here.

[22:14] <Corion> gaal: The Win32 shell (cmd.exe in my case) does care for backslash vs. forward slash, as the forward slash is the switch initiator for cmd.exe

[22:14] <gaal> all right, lets fix that then. do you see where it happens?

[22:14] <Corion> gaal: (and as the Makefile goes through the shell, stuff breaks)

[22:15] <Corion> gaal: I haven't looked into the Makefile

[22:15] <Schwern> The problem is he's not setting INST_LIBDIR 

[22:15] <gaal> is_extension_build i see assumes /

[22:17] <jabbot> pugs - 1112 - unbreak the build

[22:18] <Schwern> Fixed it

[22:18] <gaal> can you ci?

[22:18] <gaal> perlbot nopaste

[22:18] <Schwern> Don't have access.  nopasting

[22:18] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[22:18] <gaal> i'll ci

[22:20] <Schwern> http://sial.org/pbot/8590

[22:22] <theorbtwo> Looks good to me, Schwern.

[22:22] <theorbtwo> Do you want a comitter bit?

[22:22] <theorbtwo> Waitasec, you have one.

[22:22] <theorbtwo> Nevermind.

[22:22] <Schwern> I do?

[22:22] <gaal> checking in

[22:23] <theorbtwo> Um, you're listed in AUTHORS, which I suppose is not actually the same thing.

[22:23] <gaal> r1113, please test (it worked for me before Schwern's fix too)

[22:23] <Schwern> One of these days I have to figure out how to get rxvt to display unicode

[22:24] <pjcj> I think you have to specifically ask not to be a committer, don't you?

[22:24] <Schwern> Well the tests don't work

[22:24] <gaal> at all?

[22:24] <Schwern> pjcj:  Specifically ask *not* to be a committer?

[22:24] <pjcj> seems that way ;-)

[22:24] <gaal> oh crap, they dont' for me either.

[22:24] <Schwern> t/builtins/defined.........................sh: line 1: /Users/schwern/devel/pugs

[22:24] <Schwern> can't run t/builtins/defined.t. No such file or directory

[22:25] <theorbtwo> Works for me now.

[22:25] <Schwern> err, blib/script/pugs is missing

[22:26] * gaal bonks himslef on the head for ci'ing before make test

[22:26] <wolverian> Schwern: you use urxvt. :)

[22:26] <Schwern> gaal:  Well, its "less broken" now

[22:26] <gaal> i used to have this borkage, i think i fixed it by upgrading makemaker.

[22:26] <Schwern> What sort of maniac uses q*foo* quoting in a one-liner?

[22:27] <Schwern> gaal:  I assure you I am using the latest MakeMaker

[22:27] <theorbtwo> Ah, now fails after make clean.

[22:27] <gaal> heh

[22:27] <theorbtwo> Schwern, one who wants to be shell-independent, and thus can't use ' or ".

[22:27] <Schwern> But *?!

[22:27] <jabbot> pugs - 1113 - unbreak the build, mk2

[22:28] <theorbtwo> Yeah, * is kind of strange.

[22:28] <Schwern> * just screams "I'm a shell metacharacter"

[22:29] <Schwern> q{} is safe

[22:30] <gaal> blib or no, why is pugs even installed into script?

[22:30] <Schwern> q[] surprisingly is not

[22:30] <Corion> Weirdly enough, it still creates a forward slashed path to blib/script/pugs.exe on Win32, where it shouldn't.

[22:30] <Schwern> Its what Module::Install::Pugs wants

[22:30] <Schwern> Corion:  That's ok.

[22:30] <Corion> Schwern: Nope, it's not, as the shell sees it :)

[22:31] <Schwern> The shell can handle it

[22:31] <Schwern> As long as its not mixed / and \

[22:31] <gaal> my eyes

[22:31] <Corion> Eh - weird indeed. The shell can maybe handle it, but it is right about blib/script/pugs.exe not being found, as it's not there.

[22:32] <theorbtwo> script at that level should probably be named bin.

[22:32] <Corion> ... because pugs.exe now lives in blib6 :)

[22:32] <theorbtwo> pugs.exe doesn't belong in blib6, IMnsHO.

[22:33] <Schwern> http://nopaste.snit.ch:8001/2168

[22:34] <Schwern> That fixes the q** problem

[22:34] <gaal> Schwern, is it a problem, or a weirdness?

[22:34] <Schwern> It has a high probabability of being a problem

[22:35] <gaal> does it fix anything for you now? i'd rather not commit w/o asking the original author (autrijus? ingy?) it unless it does

[22:35] <Schwern> http://nopaste.snit.ch:8001/2169

[22:35] <Schwern> This gets the tests working.

[22:36] <Schwern> Nothing is broken for me but it'll probably break on non-Unix platforms.

[22:37] <Schwern> Its a MakeMaker and portability issue and a minor edit.

[22:37] <theorbtwo> Hmm, I thought the problem was that it was in blib6 instead of blib?

[22:37] <Schwern> That change appears to have been done by iblech

[22:37] <Schwern> theo:  This is a different issue.

[22:37] <jabbot> pugs - 1114 - ~~50% of MIME::Lite 3.01 port done.

[22:38] <Schwern> theo:  nopaste 2169 solves the blib vs blib6 problem.  2168 is a probable portability issue.

[22:38] <gaal> Schwern, I'm surprised, because q** has been there for a while i think and autrijus used to use activeperl

[22:39] <Schwern> I so want a "show me all the changes to line X in file Y with context" command.

[22:39] <Schwern> gaal:  Yes, it might work out ok but its playing with fire.  q{} is known portable.

[22:39] <gaal> svn blame?

[22:39] <Schwern> svn blame only goes back to the last change

[22:39] <Schwern> Then I hav eto manually work backwards through each change

[22:41] <gaal> wait, how is it a portability issue?

[22:41] <Schwern> Looks like its been there since the file was added.

[22:41] <Schwern> gaal:  * is very likely to be a metacharacter to somebody

[22:41] <Schwern> gaal:  Or some make

[22:41] <gaal> but not to perl, surely?

[22:41] <Schwern> gaal:  Its not Perl code, its make

[22:44] <gaal> well, in that case, better change it in Pugs::MakeMaker too. hold on.

[22:44] <Schwern> Yep

[22:45] <Schwern> Well, the tests work now.

[22:45] <Schwern> 103 failures

[22:45] <gaal> yes, i'll vommit both changes in a minute.

[22:45] <awwaiid> Is anyone working on a port of the CGI module yet?

[22:45] <theorbtwo> 103 sounds about right, Schwern.

[22:45] <pjcj> I hope not ;-)

[22:46] <theorbtwo> Sure you don't want comitter bits?

[22:46] <gaal> oh, can't perl6 abolish the web, while it's at it?

[22:46] <Schwern> theo: Can't hurt

[22:46] <theorbtwo> Email?

[22:46] <Schwern> All this just to try out the manbelbrot optimization

[22:47] <Schwern> [email@hidden.address]
[22:47] <Schwern> Which pugs loses out on but still much, much faster.

[22:47] <jabbot> pugs - 1115 - File::Spec::Unix is DONE and tested; Fil

[22:48] <Schwern> Ugg.  I hope File::Spec does not live on into Perl 6

[22:48] <stevan> Schwern: it does for now

[22:48] <Corion> (it could do with a syntax change :) )

[22:48] <stevan> we will replace it soon though

[22:49] <stevan> Corion: I couldnt agree more

[22:49] <stevan> I just spent the past week porting the internals of it

[22:49] <Juerd> File::Spec is a horrible productivity killer

[22:49] <Juerd> I'd much prefer a generic path notation to be converted to whatever is needed

[22:49] <stevan> BTW that is a working version of File::Spec::Unix,.. not just a port which is waiting for features

[22:49] <theorbtwo> Odd, you already had an of.org account, but were a member of no projects?

[22:50] <theorbtwo> Anyway, you should be able to commit now.

[22:50] *** pjcj changes topic to: 103 subtests fail | pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m

[22:50] <theorbtwo> Thanks for your work on this!

[22:50] <Schwern> Something more like Path-Class

[22:50] <gaal> r1117, Schwern++

[22:50] <Schwern> But a bit more transparent.

[22:51] <stevan> Schwern: once objects are in place, I would like nothing better  :)

[22:51] <Schwern> stevan:  I thought they were.

[22:51] <stevan> nope

[22:51] <stevan> t/oo/* 

[22:51] <stevan> all todo tests

[22:51] <Schwern> theo:  Except I don't know my password

[22:51] <Schwern> stevan:  Ahh

[22:51] <stevan> modules don't even work right yet 

[22:51] <theorbtwo> There's a "forgot my password" thing.

[22:51] <theorbtwo> (We have require, but not use.)

[22:52] <stevan> and subroutine args are still immutable

[22:52] <Schwern> String overloading?

[22:52] <stevan> return values are foobared in many cases as well

[22:52] <gaal> there'd have to be traits for that to be otherwise, no stevan?

[22:52] <stevan> Schwern: nope

[22:52] <stevan> (well in some cases, but not controlable from perl)

[22:53] <stevan> not to brag (becuase it is nothing to brag about), but the ext/FileSpec stuff is state of the art Pugs code 

[22:54] <stevan> it pushes it to its current limits

[22:54] <stevan> and god it is ugly :P

[22:54] <stevan> (and you thought perl5 File::Spec was ugly)

[22:55] <gaal> i like the bit where you do sub cwd returns Str { system("pwd") } :-)

[22:55] <stevan> gaal, ... if you wanna see HACK,.. look at File/Spec.pm

[22:56] <stevan> how I do the cross platform stuff

[22:56] <stevan> it exploits unfinished/broken features

[22:56] <stevan> my goal is to make this work, and to keep it working until I can make something better

[22:56] <gaal> heh, i made a moose smiley not on purpose.

[22:57] <jabbot> pugs - 1117 - Schwern: "q** is probably unsafe. q{} is

[22:57] <jabbot> pugs - 1116 - Ported more of MIME::Lite, but the rest 

[22:58] <Schwern> My work here is done.  If you need me again just admit that you're screwed and die.

[22:58] <theorbtwo> Bedtime for me -- night, guys!

[22:59] <pjcj> Does anyone know of anything like Pretty I can use to dump an entire AST, or how to get Pretty do dump subs and blocks?

[22:59] <stevan> night theorbtwo 

[22:59] <gaal> bedtime is a good idea actually.

[22:59] <gaal> night all&

[22:59] <stevan> nite gaal 

[22:59] <pjcj> Ha - you all leave when I have a question ;-)

[22:59] <stevan> pjcj: I think that the pugcc stuff is built around the idea of dumping ASTs

[23:00] <stevan> look in src/Compile/*

[23:00] <pjcj> Yes, but I don't see subs implemented there.

[23:00] <pjcj> Are they?

[23:00] <stevan> I have no idea

[23:00] <stevan> sorry 

[23:00] <gaal> i thought there was a command line option that did that

[23:00] <gaal> must have been removed at some point

[23:00] <stevan> dump ASTs?

[23:01] <stevan> maybe

[23:01] <stevan> or something in the pugs shell

[23:01] <stevan> . <exp>         = show the syntax tree of an expression

[23:01] <stevan> in the shell

[23:01] <gaal> ahh

[23:02] <stevan> ok dinner time,.. see ya'll later

[23:02] <gaal> yeah bye

[23:02] <pjcj> I don't think that will dump a sub though.

[23:02] <chip> Good news: Perl6::Subs can be CPAN'd.  Bad news: $dayjob doesn't like Same Terms As Perl. They want LGPL.

[23:02] <pjcj> Never mind - I'll try learning some more Haskell ...

[23:02] <chip> Not that it'll affect anybody, LGPL is fine, it's just a pain in the @$$..

[23:04] <pjcj> as is licensing in general

[23:31] <ninereasons> "real    192m6.770s"

[23:33] * theorbtwo returns.

[23:34] <theorbtwo> LGPL is pretty easy in a perl environment.

[23:34] <theorbtwo> Keeps you from freely cut-and-pasting, but you can use with wild abandon, pretty much.

[23:34] <pjcj> Half an hour's sleep should be enough for anyone!

[23:36] <theorbtwo> I didn't go to sleep.  Just bed.

[23:37] <Corion> Hah. I changed the command line option parser around so it now will accept multiple -e switches. Now I "just" have to reintegrate the stuff with Pugs...

[23:38] <Odin-LAP> theorbtwo: Is that intentionally ambiguous? :>

[23:38] <theorbtwo> Yes, it is.

[23:38] <theorbtwo> My sleep cycle is pretty independent of wall clock time.  My girlfriend's is not.

[23:38] * Odin-LAP doesn't ask for clarification, then. ;)

[23:39] <pasteling> "Corion" at 217.86.57.96 pasted "prototype of collecting multiple -e switches" (84 lines, 2.8K) at http://sial.org/pbot/8598

[23:40] <Corion> (but I really think that the command line parser should be a real (Haskell) parser instead of this hackery :) )

[23:41] <Corion> ... unfortunately, all I know is this hackery, and no Haskell parsing techniques, so that's all I'll be able to do :)

[23:46] <theorbtwo> Hm, I don't like how different -e and files seem to be.

[23:46] <theorbtwo> For example, why does -c work on files but not on -es?

[23:48] <Corion> theorbtwo: I don't like that either, but I haven't factored that handling out - it's very ad-hoc at the moment, with the different calls to doRun and doCheck ... The function to call should be another parameter, but I have to find out how to stuff all these parameters into a hash

[23:49] <Corion> ... that gets passed around

[23:49] <Corion> (see my patch on the first approach with an accumulator variable in _run)

[23:49] <Corion> ... and I still can't seem to commit - I must be doing something wrong :)

[23:50] <Corion> anyway - sleepy time now... I have to be fit tomorrow :)

