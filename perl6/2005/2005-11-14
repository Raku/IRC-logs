[00:37] <luqui> for anybody who knows: where is the "\^J" etc syntax documented

[00:38] <luqui> Now that ^ is a sigil, this causes problems with escaping

[00:50] <leo> luqui: sorry for the dumb question: what should "\^J" mean?  

[00:50] <leo> escape-wise

[00:57] <leo> luqui: did you mean "\cJ" perhaps?

[01:07] <luqui> oh, a control character

[01:07] <luqui> currently implemented in pugs

[01:09] <leo> the \^ would be really overkill then, I'd drop that (nothing against TIMTOWTDI, but ...)

[01:10] <luqui> ahh, \c would be a much better choice for that

[01:10] <luqui> I'll look at the docs

[01:10] <leo> well perldoc perlre ;-)

[01:11] <luqui> but is that also in strings?

[01:11] <leo> as a side note - this pod isn't the proper place to explain perl5 string escapes, but it does 

[01:12] <luqui> it appears so

[01:12] <leo> that sayeth the text

[01:12] <leo> and it works iirc

[01:13] <leo> there are about 5 working constructs to escape non-ascii, I never heard of "\^J"

[01:14] <luqui> yeah, I hadn't either

[01:14] <luqui> just changed it to \c

[01:15] <leo> parrot supports:

[01:15] <leo>              \xhh        1..2 hex digits

[01:15] <leo>              \ooo        1..3 oct digits

[01:15] <leo>              \cX         control char X

[01:15] <leo>              \x{h..h}    1..8 hex digits

[01:15] <leo>              \uhhhh      4 hex digits

[01:15] <leo>              \Uhhhhhhhh  8 hex digits

[01:15] <leo>              \a, \b, \t, \n, \v, \f, \r, \e

[01:15] <leo> enuff I think ;-)

[01:16] <luqui> :-)

[01:17] * leo was pondering /N{foo} too, when reading perlre

[01:18] <luqui> is ^A traditional ASCII 0 or 1?

[01:18] <leo> because of cross-compilation - the "parser" or/and the runtime has to support it

[01:19] * luqui doesn't see why...

[01:19] <leo> ^A = 1 ; ^@ = 0

[01:20] <luqui> aa soo

[01:22] <leo> I don't know how fit haskell/pugs is WRT unicode, but parrot supports it (or supports more unicode), *if* the ICU lib is installed

[01:29] <luqui> ?eval "foo".substr:1

[01:29] <evalbot_7950> Error: Unimplemented 3-ary op: substr 

[02:19] <svnbot6> r7951 | luqui++ | Delete Language::AttributeGrammar.  I'll resurrect it at some point.

[02:19] <svnbot6> r7952 | luqui++ | Added mandatoryWhiteSpace combinator (needs cleanup).

[02:19] <svnbot6> r7952 | luqui++ | Changed \^X control char to \cX, as per spec.  Also fixed math so that

[02:19] <svnbot6> r7952 | luqui++ | \cA refers to char 1 rather than 0 (where \c@ refers to 0).

[02:19] <svnbot6> r7952 | luqui++ | Implemented method-call listop form:  $obj.method: arg1, arg2.

[02:19] <svnbot6> r7953 | luqui++ | Added some tests for these changes.  The listop method needs

[02:19] <svnbot6> r7953 | luqui++ | many many more, though.

[02:34] <luqui> ?eval "check it out".substr: 4, 6

[02:34] *** evalbot_7950 is now known as evalbot_7953

[02:34] <evalbot_7953> \"k it o" 

[02:34] <luqui> woot and whatnot

[02:45] <Alias_> autrijus: ping?

[05:21] <dduncan> I have yet to track it down, but there seems to be a problem with pugs smoke that started to manifest after I switched to svk ... the smoke report doesn't mention a pugs revision number in it, while otherwise seeming to generate correctly, and after uploading it to the server, the server ignores it / doesn't display it, perhaps since undef is lower than the last highest versions ...

[05:21] <dduncan> I uploaded two repository / darwin over the last few days, one just now, that don't show up

[05:22] <dduncan> is anyone else successfully uploading smokes and using svk?

[05:25] <gaal> dduncan: please fix in util/yaml_harness.pl around line 196

[05:26] <gaal> also possibly add an early error/warning in smoke-client against reports with missing r numbers

[05:26] <dduncan> will have a look ...

[05:26] <gaal> dduncan++

[05:26] <gaal> $work &

[05:26] <dduncan> may have to wait for tomorrow, as I must sleep

[05:27] <gaal> do you know what the svk command is to get the right upstream r number?

[05:29] <dduncan> no, but the 'make' process is able to get it when building pugs itself I think, so I can try looking there ... I know it involves invoking svk

[05:29] <dduncan> as in, seeing how make does it

[05:29] <gaal> of course :) well, i really have to go now, so good luck

[05:29] <dduncan> right ... I'll try to do this tomorrow ... but doesn't look too complicated

[05:30] <dduncan> if all goes well, should checkin it in about 12 hours from now

[05:30] <gaal> cool.

[06:02] <autrijus> gaal: I'm still stuck at $work, will checkback tonight (in 6hrs), but excellent article :)

[06:02] <svnbot6> r7954 | autrijus++ | * Trivial copyediting over gaal++'s excellent tpr article.

[06:02] <svnbot6> r7954 | autrijus++ | * Update animals.p6 to use more elegant (and less misleading)

[06:02] <svnbot6> r7954 | autrijus++ |   given/when clauses.

[06:02] <Alias_> autrijus: ping

[06:02] <autrijus> Alias_: yes?

[06:02] <autrijus> (yes I had not booked ticket nor applied for visa -- later today)

[06:03] <Alias_> If I were to nudge brisbane.pm about having a meeting, would you be interested in taking a drive up there one evening to talk?

[06:03] <autrijus> of course yes

[06:03] <Alias_> Probably in the trolltech offices there

[06:03] <autrijus> sure. if they all went to osdc I may need to think of something new though

[06:03] <Alias_> I'm note sure how many will be

[06:03] <autrijus> if not, then I'll just repeat my osdc talk, which would be least effort

[06:03] <Alias_> Coverage isn't great

[06:03] <autrijus> try inquire a bit

[06:04] <Alias_> brisbane.pm is one of those sometimes alive, sometimes dead groups :)

[06:04] <autrijus> . o O (Weremongers)

[06:04] <obra>     hi

[06:05] <autrijus> greetings obra-san.

[06:05] <obra> autrijus: how's .tw?

[06:05] <autrijus> busy. too many forgotten previously arranged meetings and deadlines

[06:05] <autrijus> some 1283 unread mails

[06:05] <autrijus> but that's all part of course :)

[06:05] <obra> heh

[06:06] <autrijus> I'm doing fine though and finally beat jetlag, which is a definite improvement

[06:06] <autrijus> can't do much creative things under jetlag

[06:07] <autrijus> (gotta run)

[06:07] <autrijus> bbiab :) &

[06:07] <obra> later

[06:07] <obra> understood

[07:46] <gaal> autrijus: thanks! I'm at $work myself and the article has been pushed to another issue, so there's no rush.

[07:47] <gaal> also, when ({}) Just Works now that ~~ CODE has been implemented, so I don't need direct help with that (though I'm still *very much* interested in more general pointers about tracing Parsec parsers!)

[09:50] <clkao> it seems dduncan and i have exclusive timezone

[10:44] <gaal> "underlapping schedules" is my term for that kind of thing

[13:09] <nothingmuch> who runs the log bot?

[13:13] <Juerd> The logbotmaster!

[15:20] *** stevan__ is now known as stevan

[15:24] <robkinyon> Anyone here understand math at a high level?

[15:24] <robkinyon> blazar just threw me a curveball and I want to discuss w/someone before I reply

[15:25] <robkinyon> particularly in terms of sets, iterators, type inferencing, and the like

[17:12] *** Lopo_ is now known as Lopo

[17:47] <dduncan> I'm back

[17:47] <dduncan> so will now look at that yaml harness thing and hopefully have a fix in an hour

[18:30] <dduncan> seen gaal

[18:30] <jabbot> dduncan: gaal was seen 7 hours 46 minutes 2 seconds ago

[18:37] <gaal> hi dduncan 

[18:37] <dduncan> hello

[18:37] <dduncan> I seem to have tracked the problem and determined a solutin

[18:37] <gaal> great!

[18:38] <dduncan> it appears to be more widespread than I though too

[18:38] <dduncan> ./pugs -v doesn't work either

[18:38] <dduncan> so what I will do is ...

[18:38] <gaal> so PugsConfig.pm is broken too?

[18:38] <gaal> there must be 'svn info's sprinkled around

[18:39] <dduncan> update version_h.pl to work with svk correctly, it doesn't, so pugs own internal version is 0 when under svk

[18:39] <gaal> my Q#1 is whether svk can get the upstream r number w/o talking over the wire

[18:39] <dduncan> and update the harness to use the same pugs_version.h which that makes and that pugs' build uses

[18:39] <gaal> my Q#2 is if it's correct to put in an r number at all if there are loca changes

[18:40] <dduncan> gaal, I've determined that for #1 yes, but you have to invoke it twice

[18:40] <dduncan> at least, for a standard setup of a svk user having a remote mirror and a local copy ...

[18:40] <gaal> yes i don't think we need to worry about pugs forks at this point ;-)

[18:41] <dduncan> the first 'svk info' will give us the local rev #, not the remote one, but also the name of the local mirror

[18:41] <dduncan> using that, we call svk info again with the name of the local mirror, and that gives us the rev of the remote one

[18:41] <gaal> brb, something's up with my cat

[18:42] <dduncan> in any event, I noticed that the test harness is redoing (differently) the work in version_h, rather than reusing its output

[18:44] <gaal> i'm not actually sure which came first :)

[18:45] <gaal> but by all means, unify!

[18:45] <dduncan> the current version_h is naive, assuming a plain 'svk info' on the cwd has the right info, but it doesn't in many cases, so result = 0

[18:45] <dduncan> the test harness ignores svk entirely, with a todo item

[18:46] <dduncan> thanks for pointing me in the right direction, though, as I never used the 'info' command before

[18:46] <dduncan> which the test harness you pointed me to did

[18:47] <gaal> re: which svk to use, that could be controlled by config.yml

[18:47] <dduncan> I notice even the handling of svn is different in the two files ... version_h looks at the .svn files, the harness does a shell call to svn info

[18:47] <gaal> yeah

[18:48] <gaal> peeking at .svn is both better and worse.

[18:49] <dduncan> I should point out that the output of svn/k info contains enough info, or seems to, that we can autodetect the user's setup enough to get version, I think

[18:49] <gaal> in any case: the harness probably shouldn't do this at all, but get the version from pugs (or version_h)

[18:49] <gaal> okay, go for it :)

[18:49] <dduncan> true ... if pugs is fixed to work, the harness can use that

[18:50] <dduncan> so I'll fix this in 2 steps, first just get pugs to contain the version always, and separately the smoke

[18:50] <gaal> sounds good to me

[18:50] <gaal> dduncan++

[18:50] <gaal> bbiab &

[19:26] <theorbtw1> BTW: When you upgrade any of that, check the case where svk is installed but has never been used.

[19:26] *** theorbtw1 is now known as theorbtwo

[19:28] <theorbtwo> I rewrote version_h (IIRC) to fix that case.

[19:29] <r0nny> yo

[19:29] <dduncan> hello

[19:29] <dduncan> well, commit it ... then I won't have to fix it

[19:30] <dduncan> otherwise I'm prepared to, right now

[19:30] <theorbtwo> dduncan: I did -- several months ago.

[19:30] <dduncan> well, the current version has a problem

[19:30] <dduncan> the problems I describe are the current version

[19:30] <dduncan> so unless someone undid your changes ...

[19:31] * dduncan back in 15 mins

[19:42] *** lampus_ is now known as lampus

[20:36] <xinming> anyone here know about haskell?

[20:39] <nothingmuch> xinming: sort of

[20:39] <nothingmuch> but the people on #haskell know much better

[20:39] <nothingmuch> and they're nice

[20:39] <xinming> nothingmuch: hmm, But i am too new, might be bothersome to them. :-/

[20:39] <nothingmuch> nonesense, they're nice

[20:39] <nothingmuch> but i am willing to help first here

[20:40] <nothingmuch> if you feel more comfortable

[20:41] <xinming> hmm, how to make a lambda contain another lambda?

[20:44] <xinming> hmm, well, I don't mean the normal lambda, I mean the lambda contain the pattern match

[20:45] <integral> you use a case-of 

[20:45] <integral> \x -> case x of ...

[20:46] <SamB> newbies not considered harmful

[20:46] <xinming> (\a -> case x of [] -> 0; case x of (x:y) -> x + "outer lambda" )

[20:46] <xinming> oops

[20:47] <SamB> though I guess if we don't understand your questions it won't be very useful for you to come to #haskell...

[20:47] <xinming> SamB: I saw your in haskell, But I wish to ask more complex question there. :-)

[20:48] <xinming> I was attracted by the example Lemmih show me

[20:48] <SamB> usually when your lambdas get that complicated you try to stick the function in a "let" or a "where"

[20:49] <integral> I don't like those since I can't then test the function individually from ghci;  but then it can't close either *sigh*

[20:50] <xinming> SamB: haskell interpreter can't define the function on the fly... that's why I feel lambda more confortable.

[20:50] <SamB> well, if it is self-contained, you could just stick a "let" in front and paste it, then test it

[20:50] <SamB> in GHCi

[20:50] <SamB> not hugs though

[20:52] <SamB> er, well, I guess not unless you use ; and put it all on one line...

[20:53] <xinming> (\a -> case a of [] -> 0; case a of (x:y) -> x + y )[2,3]

[20:53] * SamB usually tries to put functions so complicated he wants to test them interactively at the top level

[20:53] <integral> xinming: I gave you can example in #haskell

[20:53] <xinming> integral: Ok

[20:53] <integral> you mean: (\a -> case a of { [] -> 0; [x,y] -> x + y; _ -> error "oops") [2,3]

[20:56] <pawel> Juerd: Are you there?

[21:38] <pmurias> a bit OT:Are there any plans to extend a haskell compiler to generate pasm/pir/pil/?

[21:41] <SamB> why would you want any of those?

[21:41] <SamB> GHC generates C-- internally

[21:41] <integral> pmurias: you should feel free to grab a copy of something like jhc and hack away :)

[21:41] <SamB> when it isn't compiling to bytecode, that is

[21:43] <pmurias> i suppose it would improve the integration of haskell libs with parrot..

[21:45] <dduncan> okay, first part of fix is committed

[21:46] <pmurias> and make writing hybrid haskell/tcl-or-pir-or-perl6 easier

[21:46] <dduncan> now pugs revision is properly gathered when client is svk

[21:46] <dduncan> so pugs -V actually works

[21:46] <integral> golly, that bit of code is nothing but hassle :)

[21:47] <jdv79> seen stevan 

[21:47] <jabbot> jdv79: stevan was seen 5 days 4 hours 11 minutes 36 seconds ago

[21:48] <svnbot6> r7955 | Darren_Duncan++ |  r832@Darren-Duncans-Computer:  darrenduncan | 2005-11-14 13:44:49 -0800

[21:48] <svnbot6> r7955 | Darren_Duncan++ |  updated util/version_h.pl so that 'make' updates /src/Pugs/pugs_version.h properly when svk is configured with the standard //svk/trunk and //svk/local duality ... it now looks up the version from the trunk referred to by the local, and not just the local

[22:04] <dduncan> the second fix is done, and I'm doing a smoke to test that that works ... will commit in an hour or so

[22:04] <dduncan> yaml_harness now gets its revision from pugs itself, rather than svn

[23:10] <j0sephi> http://picasa.hu ;-) :)

[23:13] <theorbtwo> Nifty.

[23:13] <theorbtwo> (And not always SFW.)

[23:30] <svnbot6> r7956 | Darren_Duncan++ |  r834@Darren-Duncans-Computer:  darrenduncan | 2005-11-14 15:29:29 -0800

[23:30] <svnbot6> r7956 | Darren_Duncan++ |  update util/yaml_harness.pl so get_revision() gets revision from pugs itself rather than from svn ... so it works with svk too

[23:52] <quicksilver> stevan: ping

[23:58] <quicksilver> stevan: when you have a moment come to irc.perl.org#dbix-class, mst + I have some thoughts about class::C3

