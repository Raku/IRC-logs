[00:25] <nothingmuch> ooh, those mushrooms seem to be effective

[00:30] <dudley> There's something I haven't heard in a long, long time... :-)

[00:34] * mugwump issues DROP ACID TAB command to dudley 

[00:38] * dudley becomes engrossed in the backs of his hands and feels a peculiar urge to listen to Pink Floyd...

[01:10] <cdpruden> so, this is neat

[01:10] <pasteling> "cdpruden" at 68.248.3.101 pasted "calling perl5 from perl6, inside-out hash" (21 lines, 417B) at http://sial.org/pbot/11583

[01:11] <cdpruden> unless I'm doing something wrong -- it seems that keys and values are getting switched

[01:16] *** Arathorn is now known as Aragone

[01:30] <cdpruden> crud, never mind -- I see theres already a test for it

[02:15] <autrijus> greetings lambdacamels!

[02:16] * autrijus is at $work and slowly recovering

[02:24] <f0rth_> good morning

[02:24] <autrijus> heya

[02:24] <Amnesiac> 'lo autarch 

[02:24] <Amnesiac> eerr autrijus :P

[03:16] <nothingmuch> blech

[03:16] <svnbot6> r5263, wolverian++ | S12.5: typo and grammar fixes

[03:16] <svnbot6> r5264, wolverian++ | S12.5: Further trivial fixes

[03:16] * nothingmuch is simply unable to fall asleep at normal people time

[03:17] * nothingmuch prepares for a fucked up day at work

[03:23] <nothingmuch> seen luq

[03:23] <jabbot> nothingmuch: I havn't seen luq, nothingmuch

[03:23] <nothingmuch> seen luqui

[03:23] <jabbot> nothingmuch: luqui was seen 3 days 1 hours 6 minutes 26 seconds ago

[03:23] <nothingmuch> blech

[03:24] <Khisanth> i? :)

[03:24] <Khisanth> nothingmuch: tried exercising?

[03:24] <nothingmuch> i do excercise

[03:24] <nothingmuch> i ride my bicycle

[03:25] <nothingmuch> it's not a persistent situation

[03:25] <nothingmuch> it's just this jet lag

[03:25] <nothingmuch> i can't fall asleep till 5 am

[03:26] <nothingmuch> don't IRC as root, alexe 

[04:36] <ImustDIE> does pugs have anything similar to data::dumper?

[04:37] <mugwump> ?eval { 1=>2 }.perl

[04:37] <evalbot6> '{(\'1\' => 2)}' 

[05:06] <nothingmuch> hola cwest 

[05:06] * nothingmuch is too lazy to rewrite his Kicker.xml hack

[05:06] <nothingmuch> but the old disk is at home

[05:06] <nothingmuch> *sob*

[05:06] <nothingmuch> *sniff*

[05:06] * nothingmuch better rewrite it as a CPAN module

[05:29] <svnbot6> r5265, Stevan++ | Perl6::MetaModel - Added docs to all files; added plans to all tests; added some expections for missing of bad arguments; some other general clean-up stuff too;

[05:31] <gaal> morning!

[05:33] <nothingmuch> nirbubg

[05:33] <nothingmuch> morning

[05:33] * nothingmuch is upset

[05:34] <nothingmuch> magic mushrooms did not work as expected

[05:37] <gaal> were they tasty?

[05:38] <nothingmuch> no, they tasted like mushroom soup

[05:38] <gaal> what were they supposed to do? aren't shitake mushrooms just... edible like well mushroom soup?

[05:38] <nothingmuch> they were supposed to make me sleepy

[05:39] <gaal> i'm sure i've eaten them in restaurants with no this-will-make-you-sleepy warnings.

[05:39] <nothingmuch> if you boil them in water

[05:39] <nothingmuch> reduce 2 cups to 1, they are supposed to

[05:39] <nothingmuch> at least so claims a friend

[05:41] <mugwump> sure, infusions and decoctions can have different effects

[05:43] <gaal> yeah! 2 to 1 actually keeps you up for weeks! :-P

[05:43] <nothingmuch> gaal: no, i'm sleepy now

[05:43] <nothingmuch> just like i've been all week

[05:43] <gaal> eep, that sounds like the title of some spam

[05:44] <nothingmuch> i'm fighting it with good old deprevation today

[05:44] <nothingmuch> we'll see how that works

[05:44] <nothingmuch> (usually it doesn't work too well for me).

[05:44] <nothingmuch> it does sound like spam =)

[05:44] <gaal> it usually takes me about a week to get over this kind of jet-lag

[05:45] <gaal> and moving east is always harder for some reason.

[05:45] <nothingmuch> here too

[05:45] <nothingmuch> i can stretch more easily

[05:45] <autrijus> gaal: so PCP is blocking on pugscc producing environment-ignorant code?

[05:45] <nothingmuch> staying up is easier than falling asleep

[05:45] <nothingmuch> hola autrijus

[05:46] <autrijus> greetings yuval, gaal

[05:46] * autrijus is finally feeling a wee bit alive

[05:46] * nothingmuch is not visually accustomed to seeing 'yuval'

[05:46] <gaal> autrijus (hi!!!), if you look at the actual code generated in PreludePC.hs, you'll see that the actual logic is missing

[05:46] <autrijus> right, I see that

[05:46] <gaal> like, function bodies

[05:46] <autrijus> yup.

[05:46] <gaal> i think otherwise it all works.

[05:46] <autrijus> 'kay. you++

[05:47] <autrijus> thanks for keep working on it while I'm semidead :)

[05:47] <svnbot6> r5266, autrijus++ | * Finish the transition from @?CHECK and @?INIT to

[05:47] <svnbot6> r5266, autrijus++ |   @*CHECK and @*INIT.

[05:47] <svnbot6> r5267, autrijus++ | * emulate this perl5 behaviour:

[05:47] <svnbot6> r5267, autrijus++ |     perl -e 'print CGI->VERSION' -MCGI  # works

[05:47] <svnbot6> r5267, autrijus++ |     perl print_cgi_version.pl -MCGI     # fails

[05:47] <svnbot6> r5268, autrijus++ | * fix a bogus test in return.t -- I seriously doubt the sanity

[05:47] <svnbot6> r5268, autrijus++ |   of eval_is()...

[05:47] <svnbot6> r5269, autrijus++ | * two force_todo for later

[05:47] <gaal> LOL

[05:47] <autrijus> oh, hw2005 got rejected. :-/ I'll present Pugs at CUFP (commercial use of functional programming) track in the same ICFP conference

[05:47] <gaal> looks like you're alive now autrijus :)

[05:47] <nothingmuch> rejected? wtf?

[05:47] <gaal> ! :-(

[05:47] <autrijus> nothingmuch: my "presentation" is subpar it seems

[05:47] <autrijus> i.e. too dense, not much background, prose sucks

[05:48] <nothingmuch> silliness

[05:48] <autrijus> nah, the reviews is actually very helpful

[05:48] <nothingmuch> too "practical"?

[05:48] <autrijus> well, SyntaxNinja's cabal submission got two A and a B from reviewers

[05:48] <Amnesiac> hola autrijus 

[05:48] <autrijus> but he's still rejected

[05:48] <autrijus> so, extremely competitive it seems

[05:49] <nothingmuch> oh well

[05:49] <nothingmuch> better luck with CUFP.

[05:49] <autrijus> I got accepted at CUFP already

[05:49] <nothingmuch> huraah!

[05:49] * nothingmuch does the popularity dance

[05:49] <gaal> i like the "commercial" bit in association with Pugs.

[05:50] <autrijus> heh indeed

[05:50] <nothingmuch> it'll probably provide lots of reassurance

[05:51] <autrijus> but yeah, mostly the reviewers think that the paper requires too much knowledge of the audience without enough preps into backgrounds, and hence not academic enough

[05:51] <nothingmuch> don't people go to haskell confs to see what's been done with the language they know, instead of learn about the language?

[05:51] <gaal> oh, speaking of bits, can i have meta-? there were one or two people i could have added lately.

[05:52] <nothingmuch> gaal: i'll add

[05:52] <nothingmuch> (if I can)

[05:52] <gaal> that makes you a metametacommitter, no?

[05:52] <nothingmuch> well, since our metamodel is elegant enough, we don't need meta meta

[05:52] <autrijus> right. all metacommitter can add other metacommiters

[05:53] <autrijus> so it's indeed elegant enough

[05:53] <nothingmuch> autrijus: any other candidates?

[05:53] <autrijus> nothingmuch: not at the moment

[05:53] * autrijus is so glad to be back to life

[05:54] <nothingmuch> no fair =(

[05:54] <nothingmuch> gaal: done

[05:54] <gaal> thank you!

[05:54] <nothingmuch> seen ingy

[05:54] <jabbot> nothingmuch: ingy was seen 13 hours 1 minutes 16 seconds ago

[05:55] <gaal> in a ploy to keep nothingmuch from normal life, /me announces Hackathon::TLV

[05:55] <nothingmuch> lightstep, lumi - invited

[05:56] <gaal> cool. 21-23 July. details to follow.

[05:57] <autrijus> TLV?

[05:57] <gaal> Tel-Aviv

[05:57] <autrijus> ahh

[05:59] <nothingmuch> gaal: on the 21 - ~18:00?

[05:59] <nothingmuch> damn, spotlight rocks my tushy

[06:00] <gaal> i think that's reasonable, yes

[06:01] <autrijus> mm, I wonder what will be Hacked at the Athon

[06:02] <nothingmuch> pizza for one

[06:02] <gaal> i have two things i want to advance, %*SIG and consolidated tests

[06:02] <nothingmuch> consolidated tests - nearly done

[06:02] <nothingmuch> we need docs

[06:02] <gaal> %*SIG i keep not getting to finish :)

[06:03] <nothingmuch> http://nothingmuch.woobling.org/example.html

[06:03] <nothingmuch> i have a very concrete todo list if anyone is volunteering for TTH work

[06:03] <gaal> maybe port the test system to p6 then? :)

[06:03] <Aankhen``> TTH?

[06:03] <nothingmuch> Test::TAP::HTMLMatrix

[06:03] <gaal> test-tap-htmlmatrix

[06:04] <Aankhen``> Ah.

[06:04] <Aankhen``> What sort of work?

[06:05] <nothingmuch> Aankhen``: mixin Test::TAP::Model::Visual to Test::TAP::Model::Consolidated

[06:05] <Aankhen``> Oh, Perl work... nah.

[06:05] <nothingmuch> to avoid diamond inheritance crap, we need some sort of proper scheme

[06:05] <nothingmuch> we need documentation of recent darcs repo changes

[06:05] <Aankhen``> I thought maybe you were talking about HTML/JS/CSS stuff.

[06:05] <gaal> hmm, i need to get a whiteboard for the hackathon.

[06:05] <nothingmuch> oh no, that's finished =)

[06:05] <Aankhen``> Congrats. :-D

[06:05] <nothingmuch> we need a "distinguishing string" sort of concept, for models

[06:05] <nothingmuch> inherited to files

[06:06] <nothingmuch> so that in the consolidated listing the blank space can contain relevant data

[06:06] <nothingmuch> and this should be guessed

[06:06] <nothingmuch> (platform, or other crap, from the extra field)

[06:06] <nothingmuch> lastly we need the 'output_dir' method

[06:06] <nothingmuch> which takes a directory

[06:06] <Aankhen``> Ahh, I've got a lot of Perl stuff on my plate already.

[06:06] <nothingmuch> outputs 3 files - big summary, detail, independant file per model

[06:06] <nothingmuch> err, N files

[06:07] <nothingmuch> and CSS

[06:07] <nothingmuch> trying to guess the link prefix to test files, if there is anything in the dir already

[06:09] <nothingmuch> Aankhen``: take a look at example.html - maybe you have something to add to the JS

[06:09] <nothingmuch> (btw, JS is mostly optional, even in the JS full version)

[06:10] <nothingmuch> (there is also a completely js free version available)

[06:10] <Aankhen``> Ah, good.

[06:11] <gaal> nm, so does the model handle aggregate data? or is there a model for a single smoke submission and a different model for consolidated data?

[06:11] <Aankhen``> You should add a <noscript><p>There is also a <a href="jsfree.html">script-free version available</a>.</p></noscript>

[06:12] <nothingmuch> Aankhen``: no, i don't know the user's URLs

[06:12] <Aankhen``> Hmm, that's not a good choice of words...

[06:12] <Aankhen``> Ah.

[06:23] <gaal> another thing that's definitely worthy of hackage is finally a p6 getopt library

[06:23] <gaal> more or less all of examples/ppt is blocking on that :-)

[06:23] <Aankhen``> Well, iblech ported GetOpts::Std, but I believe he used Perl 6, not Pugs. :-P

[06:24] <gaal> here's a silly idea i had, tell me if i'm insane

[06:24] <Aankhen``> Want me to try hacking it to get it to work?

[06:24] <gaal> since p6 has pretty strong sub signatures, we could horribly exploit them and have the option spec look like a sub signature...

[06:24] <gaal> then eval it :)

[06:25] <gaal> modulo some munging.

[06:25] <Aankhen``> O_O

[06:25] * Aankhen`` votes for "insane">

[06:25] <gaal> i know this is evil :) but it has *some* hack value, no?

[06:25] <Aankhen``> Yes.

[06:25] <gaal> of course not meant for production.

[06:25] <Aankhen``> Suuure. :-P

[06:26] <nothingmuch> back

[06:26] <Aankhen``> How about we leave that for when Perl 6 is implemented fully?

[06:26] <Aankhen``> BRB.

[06:26] <nothingmuch> eh, Aankhen``: you could add a 'noscript' link in the dir outputting method

[06:27] <nothingmuch> gaal: i like it

[06:27] <gaal> my only problem is that when i think about opts, i keep saying "getopt long is all i need... except, well, more speccy control over validation.. and, well, automatic usage... and.. mutexes were a nice idea in getopt::declare.." etc.

[06:27] <Aankhen``> Heh.

[06:27] <nothingmuch> sub flag is aliased 'f' (String $foo) { }; # invoked on --flag bar with "bar"

[06:27] <Aankhen``> Mutexes?

[06:27] <nothingmuch> is that sort of what you meant?

[06:27] <gaal> getopt::std on ther other hand is a little too little for me

[06:28] <gaal> Aankhen``: i mean --pugs can't be used when you say --haskell, for example.

[06:28] <Aankhen``> Ah.

[06:28] <gaal> in getopt::declare, you can actually *say* that in the spec

[06:28] <Aankhen``> Hmm.

[06:29] <gaal> as for leaving this off for later, i think not! not having any wokring getopt is seriously putting of script hackage

[06:29] <Aankhen``> GetOptions(flag => sub (String $foo) { ... })

[06:29] <Aankhen``> How about that?

[06:29] <Aankhen``> "Leaving it off" == Leaving off this particular idea, not GetOpts::*...

[06:29] <Aankhen``> But that's moot anyway. :-P

[06:29] <gaal> ah :)

[06:30] <Aankhen``> What about a hash of subs?

[06:30] <gaal> dispatch table

[06:30] <Aankhen``> Indeed.

[06:30] <gaal> for what, the spec?

[06:30] <gaal> or the implementation?

[06:30] <Aankhen``> Spec.

[06:30] <Aankhen``> GetOptions(flag => sub (String $foo) { ... });

[06:30] <gaal> too much code?

[06:31] <Aankhen``> People don't have to use it...

[06:31] <autrijus> bbiab :)

[06:31] <Aankhen``> See you autrijus.

[06:32] <gaal> nothingmuch, that's the idea, but the argument is not necessarily Str $foo

[06:32] <Aankhen``> They can use GetOpts::Std or ::Long if they feel it's too verbose.

[06:32] <Aankhen``> Er, yeah, Str $foo, not String $foo.

[06:32] * Aankhen`` wonders why he never can get that right.

[06:32] <gaal> too much Java?

[06:32] <Aankhen``> I've never done any. :-)

[06:32] <gaal> c++? :)

[06:33] <Aankhen``> Nope. :-)

[06:33] <gaal> CString *shudder*

[06:33] <Aankhen``> JS, probably.

[06:33] <nothingmuch> i think it stuck because I tend to be verbose about my class names

[06:33] <nothingmuch> and Junction is not Junc

[06:34] <Aankhen``> Well, the dispatch table idea could go in GetOpts::Signature or something similar.

[06:34] <nothingmuch> Aankhen``: any suggestions for TTH?

[06:34] <Aankhen``> nothingmuch >> Not really, it looks fine to me. :-)

[06:36] <Aankhen``> I love the way Indians keep inventing new words.

[06:36] <Aankhen``> After all, who wants to be constrained by the boring "wireless"?  "Wirefree" is where it's at!

[06:36] <nothingmuch> indians?

[06:36] <Aankhen``> The non-American variety. :-)

[06:37] <nothingmuch> ah

[06:37] <gaal> well, they'd rather have you care-free than careless.

[06:37] <Aankhen``> LMAO.

[06:37] <nothingmuch> it's like autrijus's wireless thinkpad notebook

[06:38] <nothingmuch> it's wireless in the same sense that this is: http://images.amazon.com/images/P/B0006MWRNA.01-A3CDPEGSIQM61V._SCMZZZZZZZ_.jpg

[06:38] <Aankhen``> What the heck is that?

[06:38] <gaal> heh.

[06:38] <gaal> a 3.5kg book? :)

[06:38] <Aankhen``> Ah

[06:38] <Aankhen``> .

[06:39] <nothingmuch> obra was at some conf, and managed to get some promo material out of the IBM booth

[06:39] <nothingmuch> they gave away paper notebooks with 'ThinkPad' written on them, and they have no wire spiral

[06:39] <nothingmuch> he gave one to autrijus

[06:39] <nothingmuch> hence autrijus has a 'thinkpad wireless notebook'

[06:39] <Aankhen``> LMAO.

[06:39] <Aankhen``> s/^/ROTF/

[06:40] <gaal> i never got the wireless pc-card nic i got with my laptop to work. i never actually took part in the wireless revolution!

[06:40] <nothingmuch> wifi rocks so much

[06:40] <Aankhen``> Yep.

[06:40] <nothingmuch> when you have places to go that provide it

[06:40] <gaal> also, the laptop does in fact weigh 3.5 kg so i don't like lugging it about anyway

[06:41] <Aankhen``> (rocks for me since my sister leaves the desktop alone now :-P)

[06:41] <nothingmuch> i also like working int he back yard

[06:41] <gaal> back yards++

[06:41] <nothingmuch> it works better with the new laptop, since it appears to have a better antenna

[06:41] <nothingmuch> reception  is consistently better in every way

[06:42] <nothingmuch> ooh, darwinports finished making me an irssi

[06:42] <nothingmuch> switching to a proper version

[06:44] <Aankhen``> stevan++ # Perl6::MetaModel

[06:48] <cwest> jsan has mailing lists http://openjsan.org/community/lists.html

[06:49] <cwest> That is all.

[06:49] * cwest & # sleep

[06:50] <Aankhen``> Eek.

[06:50] <Aankhen``> I just messed up two subscriptions. :-\

[07:00] <Aankhen``> WB.

[07:00] <Aankhen``> Uh oh.

[07:00] <Aankhen``> That doesn't bode well. :-)

[07:01] <nothingmuch> =(

[07:01] <nothingmuch> irssi is misbehaving

[07:01] <Aankhen``> BRB.

[07:03] <Aankhen``> On second thoughts, I'mma go waste some time.

[07:03] <Aankhen``> UT2K4. &

[07:39] *** davidra is now known as jp-autark

[08:17] * nothingmuch needs a new quote to paste on his monitor

[09:05] *** scook0_ is now known as scook0

[09:28] <Aragone> hrm, some fucker's trying to blow up the tube :/

[09:29] *** Aragone is now known as Arathorn

[09:29] <gaal> london tube?

[09:29] <clkao> yes

[09:30] <osfameron> best take it to MAGnet/#london.pm prob'ly

[09:31] * Arathorn shifts appropriately

[10:06] <svnbot6> r5270, autrijus++ | * `[1] <=> [2]` was misparsed as `[1]{'='}[2]`.  Fixed.

[10:06] <svnbot6> r5271, autrijus++ | * repair the (now mostly passing) namespaces.t

[10:14] <nothingmuch> wikipedia is so effective

[10:14] <nothingmuch> http://en.wikipedia.org/wiki/2005_London_transport_explosions

[10:20] <autrijus> cwest++ # adopting the chronicle format

[10:22] <nothingmuch> chronicle?

[10:25] <nothingmuch> autrijus?

[10:25] <autrijus> nothingmuch: http://use.perl.org/~cwest/journal/

[10:26] <nothingmuch> oh, for jsan logging

[10:26] <autrijus> yeah

[10:27] * nothingmuch falls asleep waiting for qt guy to help him out

[10:28] * QtPlatypus blinks.

[10:30] <autrijus> hm, still no kwid2pod in sight?

[10:30] <autrijus> ingy: how's life in perldoc land?

[10:44] <cafe_kioto> hi all

[10:44] <cafe_kioto> i'm a newbie

[10:44] <cafe_kioto> can i get any info about perl6 

[10:45] <QtPlatypus> Sure cafe_kioto what do you wish to know.

[10:48] <cafe_kioto> Parrot

[10:49] <QtPlatypus> What about parrot do you wish to know?

[10:49] <cafe_kioto> the difference with a simple parser and the advantage

[10:49] <autrijus> cafe_kioto: http://www.parrotcode.org/ has some links. irc.perl.org #parrot is the channel. http://feather.perl6.nl/~chip/Chip_APW.pdf has some overview; leo's journal is http://use.perl.org/~leo/journal

[10:49] <cafe_kioto> of vm

[10:50] <cafe_kioto> ths

[10:50] <cafe_kioto> and when it's possible to use official perl6

[10:55] <autrijus> I have no idea :)

[10:55] <autrijus> I wonder if anyone does.

[10:56] <autrijus> I've covered some of these topics in http://pugscode.org/talks/yapc/slide1.html

[10:56] <autrijus> but I need to run for dinner now. bbiab :)

[11:13] <castaway> Thursday. cafe_kioto 

[11:16] <cafe_kioto> castaway humour ?

[11:17] <masak> i read that as "now"

[11:21] <castaway> I didnt say which Thursday

[11:21] <castaway> yes, cafe_kioto 

[11:23] <cafe_kioto> thanks :)

[11:41] <nothingmuch> autrijus: thanks for posting hackathon notes

[11:44] *** Aankh|Clone is now known as Aankhen``

[11:49] <Aankhen``> ?eval module Foo { module Bar { my $baz = "quux"; } }; $Foo::Bar::baz;

[11:49] <evalbot6> \undef 

[11:49] <Aankhen``> o_O

[11:50] <nothingmuch> oh shit

[11:50] <nothingmuch> mmmd blah blah blah 

[11:50] <nothingmuch> "loop that accepts the first alternative."

[11:50] <nothingmuch> that is not very good

[11:50] <nothingmuch> are there any hooks to reorder the MMD list?

[11:51] <nothingmuch> and maybe a way to implement type distance checking by using a catchall in the first slot?

[11:51] <nothingmuch> or at least apply type distance dispatch using the metamodel?

[11:52] <Aankhen``> Where is that?

[11:52] <nothingmuch> autrijus's hackathonn summary

[11:53] <cafe_kioto> hei people can you think about python

[11:53] <nothingmuch> cafe_kioto: . o O ( big snake )

[11:53] <nothingmuch> done!

[11:53] <cafe_kioto> yes done

[11:54] <nothingmuch> seriously though - what did you mean?

[11:54] <cafe_kioto> ok

[11:55] <cafe_kioto> if i want learn one of the two language between perl and python

[11:55] <nothingmuch> python - strict, strictifying, growing smaller

[11:56] <nothingmuch> functional paradgims are bad

[11:56] <nothingmuch> perl - loose

[11:56] <nothingmuch> very loose

[11:56] <nothingmuch> sometimes dangerous

[11:56] <nothingmuch> depending on your experience and self discipline you might get more out of one than the other

[11:56] <nothingmuch> the definate winner for perl is CPAN

[11:56] <nothingmuch> python just doesn't have that

[11:57] <nothingmuch> there are poor imitations that adamk will be happy to tell you about

[11:57] <cafe_kioto> i'm php developer

[11:57] <cafe_kioto> php when work without apache it's no good choice

[11:58] <nothingmuch> php is basically perl

[11:58] <nothingmuch> but you take away:

[11:58] <nothingmuch> cpan

[11:58] <nothingmuch> good paradgims

[11:58] <nothingmuch> flexibility

[11:58] <mugwump> closures

[11:58] <nothingmuch> polymorphism of librariries

[11:58] <mugwump> use strict

[11:58] <nothingmuch> (there is a different function name for every SQL "do" per DB... how yucky is that?)

[11:59] <nothingmuch> you are psychologically bound to a certain structure - template oriented

[11:59] <nothingmuch> did I mention no CPAN?

[11:59] <cafe_kioto> pear Db

[11:59] <cafe_kioto> sorry

[11:59] <nothingmuch> i remember someone mentioning something like 9 sort functions

[12:00] <nothingmuch> where perl gets by with one, which accepts an optional closure

[12:00] <nothingmuch> i think that says a lot

[12:00] <cafe_kioto> i'm interesting to create

[12:01] <cafe_kioto> windowed application

[12:01] <nothingmuch> http://tnx.nl/php

[12:01] <nothingmuch> cafe_kioto: in perl you have Qt, Tk, Gtk

[12:01] <nothingmuch> WxWindows?

[12:01] <kungfuftr> xul

[12:01] <nothingmuch> in python you should have the same offerrings

[12:01] <nothingmuch> Win32::GUI

[12:01] <nothingmuch> CamelBones

[12:01] <kungfuftr> X11::Protocol

[12:03] <cafe_kioto> i think that the language get new live with

[12:03] <cafe_kioto> parrot engine

[12:03] <nothingmuch> that's not ready yet

[12:03] <nothingmuch> don't count on it to make your life easy in the next year or two

[12:04] <cafe_kioto> but you programming with perl for your customer

[12:05] <cafe_kioto> in my country more language like perl, php, python is not knowed

[12:06] <QtPlatypus> cafe_kioto: Where do you live?

[12:06] <cafe_kioto> italy

[12:11] <larsen> me too

[12:11] <cafe_kioto> very nice

[12:15] <larsen> cafe_kioto: are you italian ?

[12:15] <cafe_kioto> yes i'm

[12:16] <larsen> if you want, there are italian perl mongers in #nordest.pm, irc.slashnet.org

[12:18] <cafe_kioto> thanks larsen 

[12:18] <cafe_kioto> for the advice

[12:21] <cafe_kioto> but the official site of perl project is www.perl.com on o'reilly site

[12:24] <cafe_kioto> sorry perl.org

[12:24] <Aankhen``> Anyone got enough knowhow to implemented File::seek?

[12:26] <gaal> i can look into it

[12:27] <gaal> we can only offer basic file io for now though, no posix semantics. is that enough for what you need?

[12:28] <gaal> btw: new smoke coming up at http://perlcabal.org/~gaal/

[12:30] <Limbic_Region> gaal - it looks like autrijus is back in the land of the living so some of the pugsbugs I have been waiting for might be fixed

[12:31] * Limbic_Region was just checking the recent commits and see some things for the spaceship parsing bugs :-D

[12:31] <gaal> :)

[12:39] <gaal> i have to go now for ~2 hrs

[12:40] <gaal> i'm nopasting the prim stuff, feel free to complete it

[12:40] <gaal> (it's pretty trivial, just add an import of hSeek and write up the prelude side)

[12:42] <pasteling> "gaal" at 192.115.25.249 pasted "seek WIP" (21 lines, 635B) at http://sial.org/pbot/11597

[12:42] <gaal> hack away or wait two hours :)

[12:43] * gaal &

[12:43] <Aankhen``> Oops, sorry, I got distracted and didn't reply...

[12:43] * Aankhen`` thinks to himself, "POSIX semantics? Huh?"

[12:45] <Aankhen``> I just need to be able to open a file, seek to a particular position, write to it, close it, et al.

[12:45] <cafe_kioto> thanks to all

[12:45] <cafe_kioto> bye

[12:52] <wolverian> I have to get x working again, console is terrible :)

[13:02] <Nattfodd> tss tss

[13:02] <Nattfodd> as long as you don't want to watch a movie, console is great

[13:03] <wolverian> I can't get utf8 to work quite right - elinks still displays some things wrong. and the font I want to use is too large.

[13:04] <wolverian> also, I don't really want to mess with fb :)

[13:31] <Aankhen``> seen cwest

[13:31] <jabbot> Aankhen``: cwest was seen 6 hours 42 minutes 21 seconds ago

[13:35] <autrijus> gaal: cool work

[13:35] <autrijus> however I'm too sleepy to complete it now

[13:35] <autrijus> but journal up (for a change)

[13:36] * autrijus waves and sinks back to blissful sleep... &

[13:37] <wolverian> cheers :)

[13:37] <autrijus> :)

[13:37] * autrijus ponders what next to do, now the 6-month sabbatical is less than a month away.

[13:37] * autrijus decides to sleep on it

[13:37] <masak> sleep well

[13:38] <autrijus> s/away/left/

[13:52] <svnbot6> r5272, autrijus++ | * correct a test typo: `is (...)` should be `is(...)`

[13:52] <svnbot6> r5273, autrijus++ | * Autovivify variables and globals even as rvalues.

[13:52] <svnbot6> r5274, autrijus++ | * unTODO, cleanup, etc collect tests.

[14:05] <svnbot6> r5275, autrijus++ | * todo+fail erratic destruction tests for release.

[14:07] <Aankhen``> Hiya autrijus. :-)

[14:12] <nothingmuch> hola.

[14:12] <nothingmuch> hola

[14:12] <nothingmuch> baah

[14:14] <nothingmuch> hola theorbtwo 

[14:15] <theorbtwo> Hola, Yuval.

[14:16] <nothingmuch> "Yuval" doesn't pop up a floater =)

[14:16] <nothingmuch> use nothingmuch, it's more reliable

[14:16] <nothingmuch> the moment I get a working irssi i'll have growl set up properly

[14:17] <theorbtwo> Heh.

[14:17] <theorbtwo> In that case, hola, nothingmuch.

[14:17] <nothingmuch> hola!

[14:18] <nothingmuch> irssi is lyingf

[14:18] <nothingmuch> it says "connecting"

[14:18] <nothingmuch> but it makes no such syscall

[14:22] <nothingm1ch> hmm... this is a proper irssi, but not on the box I want it to run on

[14:23] <eric256> i gotta ask, what is an irssi ?

[14:23] <nothingmuch> irc client

[14:23] <nothingmuch> the problem is that I'm not able to get a proper working build.

[14:23] <nothingmuch> either it's too old, or badly packaged, or doesn't actually connect, or it's on a machine I don't want to use it on

[14:23] <wolverian> nothingmuch: get it from svn and build yourself?

[14:24] <nothingmuch> wolverian: it's got many ugly deps

[14:24] <nothingmuch> notably glib

[14:24] <wolverian> it just worked here :)

[14:24] <nothingmuch> which I think is the actual problem with it not working on my darwin

[14:24] <wolverian> oh, darwin

[14:24] <nothingmuch> i ktraced through it

[14:24] <nothingmuch> it forks a child, the child resolves the host

[14:24] <nothingmuch> prints back on the pipe, and exits

[14:24] <nothingmuch> the parent just sits there

[14:24] <nothingmuch> doing nothing

[14:25] <nothingmuch> no wait(), no sigchld handler, no pipe read, no connect

[14:25] <wolverian> weird.

[14:25] <nothingmuch> since supposedly glib is supposed to handle the lower level mishmash, i suspect it's at fault

[14:26] *** nothingm1ch is now known as nothingmuch_past

[14:26] *** nothingmuch_past is now known as nothingmuchpasta

[14:27] *** nothingmuchpasta is now known as nothingmuch_

[14:27] *** nothingmuch_ is now known as nothingmuchpasta

[14:28] <nothingmuch> there, new nicks registered

[14:32] <stevan> morning nothingmuch

[14:35] <gaal> rehi

[14:36] <gaal> nothinmuch is a kind of pasta fresca.

[14:37] <nothingmuch> gaal: pasta is my home box hostname

[14:37] *** nothingmuchpasta is now known as nothing_pasta

[14:37] <stevan> hey gaal 

[14:37] <nothingmuch> i think I prefer this

[14:37] * gaal just came back from late lunch at an Italian with friends

[14:37] <gaal> s/s$//

[14:38] <gaal> heya stevan!

[14:38] * gaal resumes hSEek

[14:38] <nothingmuch> hola stevan 

[14:38] <nothingmuch> i finally got my algorithms book

[14:38] <stevan> nothingmuch: nice :)

[14:38] <nothingmuch> and my m. ward CD

[14:38] <stevan> what was that ... 24-36 weeks for delivery

[14:40] <gaal> what's m.ward?

[14:41] <nothingmuch> stevan: approx

[14:41] <nothingmuch> gaal: i'll rip

[14:43] *** nothing_pasta is now known as addnet

[14:44] *** addnet is now known as help

[14:44] *** help is now known as delnet

[14:45] *** delnet is now known as listnick

[14:46] <nothingmuch> oops, dumb renames

[14:47] * nothingmuch suddenly realizes his mother will be in london tomorrow

[14:47] <nothingmuch> good thing twas not today

[15:26] <nothingmuch> hah, fixed it

[15:26] <nothingmuch> finally

[15:47] <gaal> hmm, i wonder why the seek is failing.

[15:48] <gaal> how do i make System.IO errors raise exceptions?

[16:04] <Limbic_Region> salutations fglock

[16:04] <Limbic_Region> how goes the work on the DateTime project?

[16:06] <fglock> hi - I can't login through svn.

[16:08] <fglock> I registered in http://rt.openfoundry.org - is this the right place?

[16:12] <hcchien> fglock: yes

[16:13] <ingy> hi hcchien 

[16:14] <hcchien> ingy: hola

[16:17] <Limbic_Region> fglock - define can't login?

[16:17] <Limbic_Region> sorry was afk earlier

[16:17] <Limbic_Region> I had an issue of not staying logged in when I was trying to give you the commit bit

[16:17] <Limbic_Region> the problem happened to be with my firewall/FF configuration

[16:18] <fglock> Limbic_Region: it keeps asking me for the pass. I'm trying again with https.

[16:22] <Limbic_Region> but you are able to commit via svn or svk?

[16:22] <svnbot6> r5276, iblech++ | * t/builtins/lists/reduce.t -- Fixed "is(...), ..." to "is((...), ...)".

[16:22] <svnbot6> r5276, iblech++ | * Usual svn props added to new files in lib/Perl6-MetaModel/.

[16:23] <fglock> Limbic_Region: no, I can't commit yet. I'll try again.

[16:23] <Limbic_Region> let me login and see what it says your status is

[16:25] <Limbic_Region> flgock - dunno but your username may be case sensitive

[16:25] <gaal> i'm logged in now, l~r. what's your username, fglock?

[16:25] <Limbic_Region> and by default, svn/svk will attempt to use you username from the environment variable

[16:25] <fglock> "fglock" 

[16:25] <gaal> i can't see "fglock" in the member list.

[16:25] <Limbic_Region> you will need to use a command line option to change that

[16:25] <Limbic_Region> if it isn't the same that is

[16:26] <gaal> can you /msg me your email, i'll re-add you? l~r, i hope that's okay since you're having cookie problems :)

[16:26] <Limbic_Region> gaal - cookie problems are from home

[16:26] <Limbic_Region> I am not having any problems here

[16:26] <Limbic_Region> I am looking now myself

[16:27] <gaal> oh. okay then, go ahead :)

[16:27] <Limbic_Region> fglock - will use same email as before

[16:27] <Limbic_Region> oh - I think it is my fault

[16:28] <Limbic_Region> it should work now btw

[16:28] <Limbic_Region> sending the invite wasn't enough - had to mark you as "member" in step 2

[16:28] <Limbic_Region> that has been done now

[16:28] <Limbic_Region> I see flgock as a member now

[16:28] <fglock> ok - I got the email this time - thanks!

[16:28] <Limbic_Region> Flavio S. Glock

[16:29] * Limbic_Region should have paid more attention but he was fighting with those pesky cookies before

[16:31] <fglock> it worked!

[16:32] <Limbic_Region> well, welcome aboard (again)

[16:33] <svnbot6> r5277, fglock++ | Set::Infinite initial commit - just a skeleton

[16:35] <fglock> datetime-set is almost empty - should i upload anyway?

[16:43] <Limbic_Region> fglock - how else is anyone else going to contribute

[16:51] * Aankhen`` pokes gaal.

[16:51] <svnbot6> r5278, fglock++ | fixed the object variables

[16:51] <svnbot6> r5279, fglock++ | initial commit - just a skeleton

[16:51] <svnbot6> r5280, fglock++ | README fix

[16:51] <gaal> hey :)

[16:51] <Aankhen``> Hiya. :-)

[16:51] <Aankhen``> Any progress on `seek`?

[16:51] <gaal> i have the code, but it fails.

[16:51] <gaal> shall i commit it?

[16:51] <gaal> i haven't figured out how to trace it in the haskell level

[16:51] <Aankhen``> Hmm.

[16:51] <Aankhen``> No, it's okay.  I can wait.

[16:52] <gaal> why wold a seek fail, anyway?

[16:52] <gaal> on a file.

[16:52] <Aankhen``> The file didn't open?

[16:52] <gaal> it did

[16:52] <Aankhen``> Hmm.

[16:52] <Aankhen``> You don't have read permissions? :-P

[16:52] <wolverian> why not commit it and let everyone take a look?

[16:52] <Aankhen``> Maybe you're seeking too far ahead.

[16:53] <Aankhen``> (i.e. the file is too small for the quantity)

[16:53] <gaal> of course i do :) i did my $f = File.open(<AUTHORS>); $f.seek(50, 0); say =$f

[16:53] <Aankhen``> Ah

[16:53] <Aankhen``> .

[16:53] <gaal> nope on all of the above :)

[16:53] <gaal> committing.

[16:54] <gaal> r5281

[16:54] <gaal> have at it :)

[16:59] <svnbot6> r5281, gaal++ | seek builtin. failsforme, silently.

[17:00] <wolverian> wow, saying <AUTHORS> as a way to quote it is so confusing to a perl5 coder :)

[17:00] <Aankhen``> gaal++ # for working on it

[17:00] <Aankhen``> ?eval (<foo>, <bar baz>)

[17:00] <evalbot6> ('foo', 'bar', 'baz') 

[17:00] <Aankhen``> ?eval <foo>

[17:00] <wolverian> it looks like a filehandle read

[17:00] <gaal> heh :) i do it because i switch between shells a lot

[17:00] <evalbot6> 'foo' 

[17:00] <wolverian> gaal: heh.

[17:01] <Aankhen``> ?eval <foo bar>

[17:01] <evalbot6> ('foo', 'bar') 

[17:01] <gaal> including the windows "shell" (my ass) which has horrible quoting problems

[17:01] <wolverian> gaal: nah, it quotes fine, as long as you remember ' is not a quote ;)

[17:01] <Aankhen``> Aye aye!

[17:01] <Aankhen``> wolverian >> And *shudder* double up your double quotes to escape them?

[17:02] <gaal> oh yeah? why does find *require* quotes then?

[17:02] <wolverian> gaal: hm?

[17:02] <gaal> dir | find moose # doesn't work

[17:02] <gaal> dir | find "moose" # does

[17:02] <wolverian> gaal: haha, really? that's pathetic

[17:02] <wolverian> I thought the shell at least did the quoting

[17:02] <wolverian> when it comes to "

[17:02] <wolverian> are you saying it just passes the quotes in to the programs?

[17:03] <gaal> sometimes :)

[17:03] <fglock> I can say Bool.true - but Bool.false does not work?

[17:03] <gaal> i don't know how it works really. w32 is all voodoo

[17:03] <Aankhen``> fglock >> What about Bool::true and Bool::false?

[17:03] <Aankhen``> Er.

[17:03] <gaal> say bool::true and bool::flase

[17:04] <Aankhen``> `bool::true` and `bool::false`.

[17:04] <gaal> lowercase

[17:04] <Aankhen``> ?eval 1 == 1

[17:04] <evalbot6> bool::true 

[17:04] <Aankhen``> ?eval 1 == 0

[17:04] <evalbot6> bool::false 

[17:04] <wolverian> :: is so ugly. :/

[17:04] <fglock> thanks

[17:04] <wolverian> I wish we used # or something to delimit packages 

[17:04] <Aankhen``> wolverian >> Hey! I didn't raise you to talk bad about punctuation!

[17:05] <wolverian> (or just . and put them into the same namespace... although that's severely limiting)

[17:05] <gaal> by the way! i presume it's a known problem that this doesn't worl?

[17:05] <gaal> work?

[17:05] <gaal> ?eval class Foo; our $class_var = 8;

[17:05] <evalbot6> \8 

[17:05] <gaal> huh!?

[17:05] <gaal> it didn't workforme :)

[17:05] <Aankhen``> I like ::, personally.  Atleast, when it's not overused. "Bool::false" is so-so, "bool::False" is strange, but "Bool::False" looks okay. :-)

[17:06] <gaal> ?eval class Foo { our $x = 8; }

[17:06] <evalbot6> Error: Undeclared variable: "$x" 

[17:06] <gaal> heh

[17:06] <clkao> w/in21

[17:06] <wolverian> no, you won't! you're staying here!

[17:06] <gaal> scoped our doesn't work it seems. known problem?

[17:06] <wolverian> gaal: well, scoped our isn't even completely specced yet

[17:06] <wolverian> gaal: in roles anyway

[17:06] <gaal> hmmm

[17:06] <eric256> why would yo uuse our anyway?

[17:07] <gaal> public constant

[17:07] <Aankhen``> eric256 >> Class variables.

[17:07] <gaal> and class variables too :)

[17:07] <Aankhen``> class Foo { our $.bar = 10; }; say $Foo::bar;

[17:07] <Aankhen``> `our $bar`, even.

[17:07] <gaal> File::SEEK_START

[17:07] <Aankhen``> class Foo { our $bar = 10; }; say $Foo::bar;

[17:07] <gaal> $File::SEEK_START that is

[17:07] <wolverian> gaal: what's SEEK_START?

[17:07] <eric256> ahh as opposed to instance variables. makes a certain kind of since (a bunch of little variables all say "hey those are 'our' variables."

[17:08] <Aankhen``> Heh.

[17:08] <Aankhen``> I like the way you think. =)

[17:08] <eric256> s/variables/objects/

[17:08] <wolverian> I mean, it looks like a pretty self-explanatory name, but I don't understand what it would mean as a class variable

[17:08] <gaal> wolverian, $fh.seek(50, SEEK_START)

[17:09] <gaal> $fh.seek(-1024, SEEK_END)

[17:09] <gaal> well, $File::SEEK_END

[17:09] <wolverian> gaal: hmm. that doesn't seem like a very good interface

[17:11] <wolverian> we could generalise the issue with a builtin Delta class 

[17:11] <wolverian> when seek() is given a delta, it uses the current position, otherwise absolute. hmm, there'd need to be some way to get at the end of the file too.

[17:11] <wolverian> oh well. :from<end>? 

[17:11] <gaal> that's an oop version of the p5 interface.

[17:11] <gaal> i'll also add tell.

[17:12] <wolverian> gaal: yeah, and it sucks, I think

[17:12] <wolverian> (no offense - you're probably just porting it, and that's fine)

[17:12] <gaal> i'd be happy to add more interfaces, but you get to petition them on p6-l :-)

[17:12] <wolverian> right, sure.

[17:12] <wolverian> I'll mail about it on p6l if you want?

[17:12] <wolverian> or do you want to? :)

[17:12] <gaal> please do.

[17:12] <wolverian> sure.

[17:13] <gaal> i don't feel strongly about this, and where i don't feel strongly and there is no spec yet i tend to just port.

[17:14] <wolverian> hmm

[17:14] <wolverian> where do SEEK_END and such come from in perl5?

[17:14] <wolverian> POSIX?

[17:14] <wolverian> Fcntl?

[17:14] <wolverian> my perldoc is so slow :)

[17:15] <gaal> Fcntl.

[17:15] <wolverian> thanks

[17:18] <wolverian> gaal: sent mail

[17:19] <gaal> wolverain++

[17:20] <Aankhen``> wolverian++

[17:20] <Aankhen``> (nick completion)++

[17:20] <wolverian> wolverain-- # it's raining wolverines

[17:20] <gaal> that said, i think :from<end> is nice. $fh.end - 10 won't work well i think.

[17:21] <wolverian> performance?

[17:22] <gaal> there are three modes to seek, traditionally. absolute, relative to current, and offset at end. i expect them all to be one syscall.

[17:22] <gaal> (not sure though.)

[17:22] <wolverian> right. I have a hazy concept of such things

[17:23] <wolverian> translate that to real english if you want

[17:23] <wolverian> perl5 is surprisingly high level. :)

[17:23] <gaal> are you on linux?

[17:24] <wolverian> not right now, since I broke my X (I'm running ubuntu breezy, the development branch) so I'm booted to windows currently

[17:24] <wolverian> my server is running linux, though

[17:24] <Aankhen``> Hiya iblech. :-)

[17:24] <wolverian> (the one that irssi runs on :)

[17:25] <gaal> as an illustration look at the manpage for fseek: eg http://www.die.net/doc/linux/man/man3/fseek.3.html

[17:25] <masak> Aankhen``++ # for giving me the idea to try nick completion, this is great :)

[17:25] <gaal> you'll see that perl didn't invent any of these names

[17:25] * Aankhen`` pokes cwest for signs of life.

[17:25] <gaal> even "whence" is from the c interface

[17:25] <wolverian> right.

[17:26] <Aankhen``> masak >> I'm glad /someone/ learned something. ;-)

[17:26] <masak> ;)

[17:26] <wolverian> the point being that C is much lower level than perl - so as long as we can keep the performance up we should fix the interface 

[17:26] <wolverian> because we _can_

[17:27] <gaal> since this is so deep in the tradition, i bet underliying os implementations have a single system call that does any of the three seeks

[17:27] <iblech> Aankhen``: Hi :) Unfortunately I'll be off again soon (school trip to Paris, coming back Sunday night)...

[17:27] <gaal> of course we can fix the interface; but doing this:

[17:27] <Aankhen``> iblech >> Awww. :-(

[17:27] <wolverian> right. then a :from<end start current> mapping to those is probably the best idea 

[17:27] <gaal> $f.seek($fh.end - 50)

[17:27] <iblech> Aankhen``: Yes... :(

[17:28] <Aankhen``> iblech >> How much longer do you have in school/

[17:28] <Aankhen``> ?

[17:28] <wolverian> (although <end start current> aren't very well connected as properties of the file, which is why $fh.end would be better as an abstraction and on the human language level)

[17:28] <gaal> will actually work with "my" interface (i made ?$position = start)

[17:28] <gaal> but is needlessly inefficient.

[17:28] <wolverian> right.

[17:28] <wolverian> I just hate needless globals

[17:29] <wolverian> gaal++ # thanks for coding things! 

[17:29] <gaal> i'm all for abstraction and good interface, but if the system wants to help you work cleanly, why not let it? :)

[17:29] <iblech> Aankhen``: In approx. three weeks, we'll have six weeks vacation :) and then two more years

[17:29] <Aankhen``> iblech >> Gak! Two years?

[17:29] <Aankhen``> How many years of schooling do you have in total?

[17:29] <wolverian> gaal: sure - I'm fine with :from<foo>, which is equivalent to the SEEK_* globals, except with a nicer interface

[17:29] <wolverian> gaal: both should map to the same syscalls

[17:29] <svnbot6> r5282, fglock++ | added a few tests

[17:30] <wolverian> s,should,can,

[17:30] <gaal> yup. i'm happy with that - but i'll let others spec it :-)

[17:30] <wolverian> yeah. :)

[17:30] <wolverian> there might be better ideas, or larry might be harbouring some insane idea again

[17:31] <wolverian> not that those are mutually exclusive...

[17:31] <gaal> also, adding tests is liable to get it coded your way (hint, hint :-))

[17:31] <wolverian> heh. but tests are spec and I'm not larry!

[17:31] <gaal> i love larry's insane idea except for when i'm 80% done implementing something the way i thought it shold be. :-)

[17:31] <gaal> *ideas

[17:31] <wolverian> I think autrijus feels your pain too :)

[17:31] <Aankhen``> LMAO.

[17:32] <iblech> Aankhen``: 13, but with the beginning of the next year, new pupils will only have to go 12 years to school

[17:32] <Aankhen``> Ah.

[17:33] <iblech> Aankhen``: Germany, you know...

[17:33] <Aankhen``> Heh.

[17:33] <Aankhen``> Very thorough.

[17:33] <iblech> Indeed

[17:36] <Aankhen``> How are recursive patterns specified?

[17:37] <Aankhen``> For example, a pattern to match an unescaped backslash, i.e. a backslash not preceded by a backslash not preceded by a backslash...

[17:37] <wolverian> egh, 21mb of sid updates

[17:38] <wolverian> things are slow on a computer with a /tmp of 35 mb and 48 mb RAM :)

[17:40] <Aankhen``> wolverian >> BTW, you were asking about whether modules are global by default, right?

[17:40] <wolverian> Aankhen``: yeah, I think.

[17:40] <Aankhen``> @Larry: > They are "our" by default, not "my".  Just as subs are "our" by

[17:40] <Aankhen``> > default.  And indeed, that is probably what package/module/class

[17:40] <Aankhen``> > names are going to default to as well.

[17:41] <wolverian> ah, right. and what does "our" do exactly in Perl 6?

[17:41] <Aankhen``> Um... package/class/module-level var?

[17:41] <svnbot6> r5283, iblech++ | Usual svn props added to fglock++'s new ext/DateTime-Set and ext/Set-Infinite,

[17:41] <svnbot6> r5283, iblech++ | include the appropriate svn:ignore to hide autogenerated files like Makefile, etc.

[17:41] <Aankhen``> class Foo { our $bar = 10; } say $Foo::bar; # prints "10\n"

[17:42] <Aankhen``> module Foo { our $bar = 10; } say $Foo::bar; # prints "10\n"

[17:42] <wolverian> right. thanks.

[17:43] <Aankhen``> NP. :-)

[17:43] <wolverian> module Foo { module Bar { } } Foo::Bar; # the way to look up Bar now?

[17:43] <Aankhen``> Yes.

[17:43] <wolverian> thanks.

[17:43] <wolverian> hmm

[17:43] <Aankhen``> redo;

[17:43] <wolverian> I can't find seek() in ruby

[17:43] <wolverian> oh, here we are

[17:43] <wolverian> IO instead of File :)

[17:44] <wolverian> ah. it uses IO::SEEK_* globals

[17:44] <wolverian> (well. package globals..)

[17:45] <Aankhen``> Heh.

[17:45] <Aankhen``> BRB.

[17:47] <wolverian> I'm not sure if one needs seek() at all really

[17:47] <wolverian> maybe perl6 can map $fh[$start .. $end] intelligently enough (and lazily enough) to be efficient and easy to ue :)

[17:48] <gaal> you want perl to be an OS? :)

[17:49] <wolverian> hmm. no. I want seek() to be available as well, and the [] to use that to seek to $start automatically 

[17:50] <wolverian> e.g. for =$fh[-10...] -> $line { ... } # iterate efficiently over the last ten lines 

[17:51] <gaal> <3 Tie::File

[17:51] <wolverian> right. I forgot Perl 5 does it already :)

[17:52] <gaal> but that's a nifty module to port!

[17:52] <wolverian> we need the iterators/generators thing first, I think, for it to be usable as above

[17:56] <svnbot6> r5284, iblech++ | * Continued chromatic++'s work of s/Perl6/Perl 6/ in lib/, ext/, and docs/.

[17:56] <svnbot6> r5284, iblech++ | * Fixed alignment in READTHEM.

[18:03] <Aankhen``> ?eval class Foo { method bar (::?CLASS $self: ) { .ref } }; Foo.new.bar

[18:03] <evalbot6> Error:  unexpected ":" expecting formal parameter, end of input or ")" 

[18:03] <svnbot6> r5285, iblech++ | Test fixes:

[18:03] <svnbot6> r5285, iblech++ | * EOLs at EOFs (also in ext/).

[18:03] <svnbot6> r5285, iblech++ | * "#!/usr/bin/pugs" added to test missing that line.

[18:03] <svnbot6> r5285, iblech++ | * eval_is(...) -> is(eval(...)).

[18:03] * Aankhen`` pokes iblech.

[18:04] <Aankhen``> Shouldn't ::?CLASS and ::?ROLE parse?

[18:04] <iblech> Aankhen``: It should, doesn't it?

[18:04] <iblech> ?eval ::?CLASS

[18:04] <evalbot6> \::main 

[18:04] <iblech> ?eval ::?ROLE

[18:04] <evalbot6> \::main 

[18:04] <Aankhen``> Hmm.

[18:05] <Aankhen``> Doesn't appear to parse in signatures.

[18:05] <Aankhen``> ?eval class Foo; method bar (::?CLASS $self: ) { "bar" };

[18:05] <evalbot6> Error:  unexpected ":" expecting formal parameter, end of input or ")" 

[18:05] <iblech> Hm...

[18:06] <wolverian> hmm. does the ::?CLASS there DWYM when the class 'trusts Bar' and you call Bar.new.bar?

[18:06] <Aankhen``> ::?CLASS is the class the method is declared in, AFAIK.

[18:07] <wolverian> then that method is unusable from a trusted class 

[18:07] <Aankhen``> `trusts` only affects access to instance variables

[18:07] <Aankhen``> .

[18:07] <Aankhen``> Yes.

[18:07] <wolverian> hmm, I read autrijus's message differently

[18:07] <Aankhen``> Well, I've been known to be wrong. ;-)

[18:07] <wolverian> upon rereading it seems to only pertain to accessors, yes

[18:08] <wolverian> but who's saying bar isn't an accessor? :)

[18:08] <Aankhen``> I dunno, but I /am/ saying it's not an instance variable. :-P

[18:10] <wolverian> okay, time to install breezy colony 2 over the broken breezy partition and see if it works :)

[18:10] <wolverian> brb

[18:12] <Aankhen``> ?eval gather { for (a => "b", c => "d").kv -> $k, $v is copy { $v .= uc; take $v } }

[18:12] <evalbot6> Error: Insufficient number of required parameters: 0 actual, 1 expected 

[18:12] <Aankhen``> ?eval gather { for (a => "b", c => "d").kv -> $k, $v is copy { $v = $v.uc; take $v } }

[18:12] <evalbot6> Error: Insufficient number of required parameters: 0 actual, 1 expected 

[18:12] <Aankhen``> ?eval gather { my %foo = (a => "b", c => "d"); for %foo.kv -> $k, $v is copy { $v = $v.uc; take $v } }

[18:12] <evalbot6> ('B', 'D') 

[18:14] <Aankhen``> ?eval sub foo () { "I know kung foo" }; &::("foo").()

[18:14] <svnbot6> r5286, fglock++ | more tests

[18:14] <svnbot6> r5287, fglock++ | oops - missed some files

[18:14] <evalbot6> 'I know kung foo' 

[18:15] <Aankhen``> ?eval sub foo () { "I know kung foo" }; my $bar = "o"; &::("f" ~ ($bar x 2)).()

[18:15] <evalbot6> 'I know kung foo' 

[18:16] *** Arathorn is now known as Aragone

[18:16] <iblech> Aankhen``: Fixed the ::?FOO parsing bug, checking in in a moment :)

[18:17] <Aankhen``> Yey!

[18:17] <Aankhen``> iblech++

[18:20] <Aankhen``> Woo.

[18:20] <fglock> I've got a problem in ext/Set-Infinite/t/set-functional-span.t - "use_ok" doesn't actually "use" the module?

[18:20] <fglock> I have to "use" it again

[18:20] <Aankhen``> I'm finding some strange parsing problems. :-D

[18:21] <iblech> fglock: It does. But probably, the subs to be exported are exported into Test.pm's namespace, not into the namespace of your test file

[18:22] <Aankhen``> No, it only `require`s the module.

[18:22] <fglock> it doesn't recognize the class name - I get 'No compatible subroutine found: "&Set::Functional::Span"'

[18:22] <Aankhen``> eval "package $caller; require $module";

[18:22] <Aankhen``> fglock >> Is the test ci'd?

[18:23] <iblech> Aankhen``: Oh, I retract my comment then :)

[18:23] <fglock> yes - it works (with the extra "use")

[18:23] <Aankhen``> OK, I'm going to fiddle around a bit locally.

[18:25] <gaal> if I add a haskellish Prim with a fully qualified name, woudl it be dispatched correctly on objects?

[18:25] <svnbot6> r5288, iblech++ | Pugs.Lexer, Pugs.Parser -- Made ::?CLASS in subroutine signatures parse again,

[18:25] <svnbot6> r5288, iblech++ | thanks to Aankhen++ for noticing.

[18:25] <svnbot6> r5289, iblech++ | * Usual svn props added to fglock++'s new files in ext/Set-Infinite.

[18:25] <svnbot6> r5289, iblech++ | * Documented some more conventions (svn:executable, shebang lines, naming

[18:25] <svnbot6> r5289, iblech++ |   conventions) in pugs::hack.

[18:28] <iblech> Ok, time to go... See you monday! :)

[18:28] <Aankhen``> See you!

[18:28] <gaal> bye iblech! :)

[18:28] <Aankhen``> Have fun!

[18:29] <iblech> Thanks :)

[18:29] <iblech> off &

[18:36] <Aankhen``> Hmmm.

[18:37] <Aankhen``> The relevant line from Test.pm is this: eval "package $caller; require $module";

[18:37] <Aankhen``> I want to replace that with: &::($module).import.goto(...); # it needs to pass the relevant parameters, of course

[18:38] <Aankhen``> But apparently I can only do that by using ::, not ., like so: &::($module)::import.goto(...);

[18:38] <gaal> looks good to me. (don't know about the ::/. stuff though)

[18:39] <Aankhen``> Do you know where Sub::goto (or whatever the full name is) and the like are specced?

[18:39] <gaal> there was precious little speccage of that when i wrote goto.t

[18:39] <Aankhen``> They don't seem to be in S06...

[18:39] <gaal> but that was a while ago

[18:39] <gaal> i just grepped S*

[18:42] <Aankhen``> Is there anything about overriding `import`?

[18:42] <gaal> sorry, dunno.

[18:45] <Aankhen``> &func.goto(@args) 

[18:45] <Aankhen``> (http://groups-beta.google.com/group/perl.perl6.language/browse_thread/thread/cba8748ebd6084c6/ca1b4f443be3915f?q=goto&rnum=2#ca1b4f443be3915f)

[18:58] <svnbot6> r5290, Aankhen++ | * Test.pm: added (currently commented out) alternative implementation of &use_ok.

[19:27] * Limbic_Region yawns and wonders what is new in the exciting world of Pugs

[19:51] <svnbot6> r5291, gaal++ | * WIP: new [internals] builtins: IO::tell, Pugs::Internals::hIsOpen, 

[19:51] <svnbot6> r5291, gaal++ |   Pugs::Internals::hIsClosed, Pugs::Internals::hIsReadable,

[19:51] <svnbot6> r5291, gaal++ |   Pugs::Internals::hIsWritable, Pugs::Internals::hIsSeekable.

[19:51] <svnbot6> r5291, gaal++ | For some reason, most of these lie (eg, hIsReadable retrurns true on :r

[19:51] <svnbot6> r5291, gaal++ | files) so this needs some investigation still.

[19:51] <gaal> err

[19:52] <gaal> the lie is that hIsWritable says true on :r :-)

[20:11] <svnbot6> r5292, fglock++ | cleanup

[20:27] <elmex> what is about the $self->method () syntax, is thre anything decided?

[20:27] <svnbot6> r5293, fglock++ | added DateTime::Span

[20:43] <Aankhen``> G'night.

[20:54] <wolverian> wow, ruby's templating systems all suck, or are too heavy (like rails)

[21:01] <masak> how is rails too heavy? (I haven't used it so, I don't know)

[21:06] * nothingmuch collapses

[21:08] <wolverian> masak: it does too much for this projec

[21:08] <wolverian> t

[21:12] <dudley> Who exactly is @larry?

[21:14] <integral> (TINC)

[21:15] <cwest> someone in .cz

[21:15] <cwest> or someone connecting from there anyway

[21:15] * masak thinks that is a funny answer

[21:17] * dudley doesn't get it

[21:17] <masak> dudley: @larry is the core team designing perl6

[21:17] <masak> larry wall and a few others

[21:18] <dudley> masak: Yeah, I meant for @larry -> {say $_;}

[21:19] <dudley> I've been following along for a while and I just realized that $larry was the only one of @larry that I knew...

[21:19] <svnbot6> r5294, fglock++ | "complement"

[21:34] * dudley gets it now...

[21:43] * masak doesn't

[21:43] <svnbot6> r5295, fglock++ | half-implemented "union"

[21:43] <masak> explain, please

[21:47] <autrijus> rehi.

[21:48] <autrijus> "Introduction to Pugs" and "Perl 6 in the Real World" are both rejected from Euro OSCON :-/

[21:48] <wolverian> :/

[21:48] <PerlJam> autrijus: why?

[21:49] <autrijus> PerlJam: no idea... "topics was too narrow, covered by other presentations, or too vendor specific"

[21:49] <PerlJam> If they already have a full billet, I can understand it.

[21:49] <autarch> what vendor is that?

[21:49] <autrijus> however, my "Introduction to Haskell" and "Perl and Internationalization" got accepted (a while ago)

[21:49] <PerlJam> It was probably the "topic too narrow" part that got them

[21:50] <autrijus> indeed

[21:51] <PerlJam> autrijus: just use pugs in your introduction to haskell ;-)

[21:51] <autrijus> PerlJam: I very much doubt it's as entry level as I billed it :)

[21:51] <autrijus> I'll perhaps use Harrorth instead

[21:52] <autrijus> nothingmuch++ # superb introduction material

[21:52] <masak> nothingmuch++ # agreed

[21:52] <PerlJam> autrijus: well, clearly perl6 is relevant to perl and internationalization.  :-)

[21:54] <autrijus> PerlJam: yeah :)

[22:00] <Limbic_Region> welcome back to the land of the living autrijus

[22:01] <clkao> hello autrijus

[22:01] <clkao> you recovered?

[22:01] <clkao> autrijus: are you also offered 25% discount for euro oscon?

[22:01] <clkao> oh you got something accepted

[22:02] <gaal> i figured out why seek and tell were failing

[22:02] <autrijus> clkao: they don't want svk? :-/

[22:02] <gaal> on windows theyt only work in binary mode

[22:02] <autrijus> Limbic_Region: heya, glad to be back

[22:02] <autrijus> gaal: !

[22:02] <gaal> #haskell++

[22:02] <clkao> autrijus: no.

[22:02] <autrijus> sad.

[22:02] <clkao> autrijus: it's probably too vendor specific

[22:03] <clkao> though i am sure there will be subvesrion tutorial again

[22:03] <gaal> yes. well.

[22:03] <autrijus> clkao: so you won't be @ amsterdam?

[22:03] <clkao> i probably will.

[22:03] <autrijus> or is fotango going to pay your 75%?

[22:03] <autrijus> cool!

[22:03] <Limbic_Region> autrijus - when you are sufficiently rested and want to here the bizzare story of why Prelude.hs failed to compile on my home machine Win32 - let me know

[22:03] <clkao> i guess so. we have conference budgets

[22:03] <Limbic_Region> I also journaled it, but skimmed over the details

[22:03] <clkao> autrijus: how's it going? no new pugs release? you suck

[22:04] <autrijus> clkao: I suck, I was totally dead

[22:04] <autarch> clkao: How long have you been at Fotango?

[22:04] <gaal> autrijus, what's the Right Way to return in a Void Prim? I did `return undef` because `return ()` didn't compile, but that looks wrong.

[22:04] <clkao> autarch: since nov. but physically since apr.

[22:04] <autarch> ah

[22:04] <gaal> wow, what a barrage of questions :)

[22:04] <autrijus> Limbic_Region: I've read your journal; the .dll searchpath problem is annoying

[22:04] <clkao> autrijus: what's blocking? topic?

[22:04] <autrijus> gaal: return;

[22:05] <clkao> autrijus: does svk suck for you lately?

[22:05] <gaal> in haskell

[22:05] <autrijus> gaal: wait, prim? you don't return in prim

[22:05] <autrijus> oh.

[22:05] <autrijus> retEmpty

[22:05] <gaal> thanks!

[22:05] <autrijus> np

[22:05] <autrijus> clkao: yeah, just the topic

[22:05] <Limbic_Region> I would be fine with GHC having a hard coded path to its own perl.exe if it at least spit out useful error messages when it couldn't find it

[22:05] <autrijus> clkao: but I need to work on some p5 (chaldea) now

[22:06] <clkao> autrijus: i am going to release 1.01... so let me know if something sucks

[22:06] <clkao> or you don't use svk anymore?

[22:06] <autrijus> Limbic_Region: indeed. post to GHC's mailing list or sf.net tracking system?

[22:06] <autrijus> clkao: er, I use svk so much that I forgot its existence

[22:06] * Limbic_Region thinks it is kinda silly to force a hardcoded path anyway since there is nothing special about the actual executable

[22:06] <Limbic_Region> I replaced it with a different one and the problem went away

[22:06] <gaal> okay, finally open($file, :layer<:raw>) is useful for something

[22:06] <clkao> autrijus: same as i do, so it gets weird to hack on it

[22:07] <clkao> autarch: how about you?

[22:07] <Limbic_Region> autrijus - does the list allow for non-members to post?  I am not going to subscribe just to say I think it is silly

[22:07] <autrijus> Limbic_Region: I have no idea; probably you can subscribe, post, and unsubscribe; otoh, they do look at their sf.net bugtracking

[22:07] <autrijus> which requires no subscription

[22:07] <autarch> clkao: you mean work?  I'm at Socialtext since September

[22:08] <clkao> autarch: i know, i mean svk :)

[22:08] <autarch> oh, sorry

[22:08] <Limbic_Region> ok - will look into it

[22:08] <autarch> I haven't used it recently

[22:08] <autarch> still needing that emacs mode ;)

[22:08] <clkao> autrijus: what are you hacking on chaldea?

[22:08] <clkao> autarch: i thought there's a emacs mode on the wiki

[22:08] <autarch> it's busted ;)

[22:08] <autarch> and I have no lisp-fu

[22:08] <clkao> i only know it requires development release of emacs

[22:09] <autarch> ah

[22:09] <autarch> I have what's in debian unstable

[22:10] <autrijus> clkao: validation etc

[22:10] <clkao> ah, forward port

[22:11] <svnbot6> r5296, gaal++ | make seek and tell raise exceptions on failure (GHC requires binary mode for

[22:11] <svnbot6> r5296, gaal++ | these operations on win32)

[22:12] <clkao> autrijus: have you listened to gugod's new song?

[22:12] <gaal> Aankhen`` (hoping you backlog): you can now use seek.

[22:13] <gaal> who wants to help me figure out why hIsWritable lies to me in pugs, although a ghci test case shows it works correctly by itself?

[22:14] <gaal> did I define it correctly? 

[22:14] <gaal> # op1 "Pugs::Internals::hIsWritable" = boolIO hIsWritable

[22:14] <autrijus> clkao: eh no. url?

[22:14] <autrijus> gaal: boolIO is a try that returns false on failure

[22:14] <clkao> 03:33 <@gugod>  http://osx.gugod.org/ftp/3AM.mp3 # 剛剛跟 lukhnos 做的新歌

[22:14] <clkao> 03:35 <@gugod> http://osx.gugod.org/index.cgi?gugod #  歌詞

[22:15] <gaal> autrijus: my problem is that i open a file for read only, and isWritable returns true :-)

[22:15] <autrijus> gaal: you want something else entirely :)

[22:15] <gaal> simply liftIO it?

[22:15] <autrijus> op1 "Pugs::Internals::hIsWritable" = do

[22:15] <gaal> ..and VBool the resutl?

[22:15] <autrijus> op1 "Pugs::Internals::hIsWritable" = \x -> do

[22:15] <autrijus>     fh <- fromVal x

[22:16] <autrijus>     fmap VBool (liftIO $ hIsWritable fh)

[22:16] <autrijus> something like that

[22:16] <clkao> still need to use gcc3 on macosx right?

[22:17] <autrijus> clkao: 6.4.1. snapshots are out

[22:17] <gaal> i get to use op1cast for that, no? :-)

[22:17] <autrijus> clkao: which should've fixed it, not sure

[22:17] <autrijus> gaal: whatever works :)

[22:18] <gaal> some lifting is definitely in order! i have five functions that should all be oneliners.

[22:18] <clkao> 狂気である

[22:18] <autrijus> gaal: welcome to the pointless club

[22:19] <Limbic_Region> autrijus - 1234458 is the tracker ID for the GHC bug report FYI

[22:19] <autrijus> er, pointfree club.

[22:19] <autrijus> Limbic_Region: wonderful. thanks

[22:19] <gaal> yeeha!

[22:20] <Limbic_Region> autrijus++ # thanks for fixing the spaceship parsing bugs

[22:20] <autrijus> :)

[22:20] <clkao> ghc-pkg: cannot find package plugins

[22:20] <clkao> because mine is ghc-6.4-pkg

[22:21] * Limbic_Region still has no idea what made him think to try adding back in the perl.exe since he removed it a long time ago

[22:22] <svnbot6> r5297, fglock++ | more "TODO" added

[22:22] <Darren_Duncan> just so you guys know, I have a series (2 parts at least) of large updates to make to my database modules before I think of porting them to perl 6 ... however, I *may* start said port prior to OSCON

[22:23] <Darren_Duncan> also, I'll want to remove all the workarounds in LKT first

[22:23] <Darren_Duncan> my current impression is that the ObjectModel stuff being worked on now is a prerequisite to some native Pugs support for object features, though I could be wrong

[22:24] <Darren_Duncan> I mean, MetaModel

[22:24] <autrijus> that is.

[22:24] <pasteling> "gaal" at 192.115.25.249 pasted "haskell style Q" (10 lines, 327B) at http://sial.org/pbot/11605

[22:24] <Darren_Duncan> for example: will MetaModel be a prerequisite to doing any of these things ...

[22:25] <Darren_Duncan> 1. declaring classes in any order and they can still invoke each other naturally

[22:25] <Darren_Duncan> 2. being able to use can() and functions like that

[22:25] <Darren_Duncan> 3. having private attributes etc

[22:25] <autrijus> 1) needs the PIL evaluator -- i.e. separate the parsing from compiling

[22:25] <autrijus> 2/3 depends on porting the metamodel to haskell

[22:26] <Darren_Duncan> right, so I'll have to wait for those before I can do my SQL::Routine etc port

[22:26] <Darren_Duncan> while Locale-KeyedText could be re-ordered to work around it, that won't work with my other modules

[22:27] <Darren_Duncan> since classes within them each refer to the other

[22:27] <autrijus> you can port ahead :) LKT and T::Builder both drove a lot of pugs OO features

[22:27] <Darren_Duncan> I have considered that

[22:27] <autrijus> so S::R shouldn't be different -- just abandon all workarounds so we can code up to it

[22:28] <Darren_Duncan> so then, I just do what I did with the last SQL::Routine port ... don't expect it to run?

[22:28] <Darren_Duncan> not quite actually

[22:29] <Darren_Duncan> so I won't try to work-around issues when I do those modules ... I'll report bugs and wait for fixes before continuing

[22:29] <autrijus> yup.

[22:29] <autrijus> I think many of the feature you require are already in t/oo/

[22:29] <autrijus> but then maybe some are not. I'd be very grateful if we can improve t/oo/'s coverage further

[22:29] <Darren_Duncan> I consider them to be fairly basic ... mainly just what Perl 5 already supports

[22:30] <Darren_Duncan> right, so that's the plan

[22:30] <autrijus> yup

[22:30] <Darren_Duncan> still, I plan to do said major updates before the port, so I don't have to merge those updates into it later

[22:30] <autrijus> k.

[22:31] <Darren_Duncan> fyi, today I will commit a 'Rosetta' and '...Generic' major update ... they're done except the changelogs and I tend to be detailed in those

[22:31] <Darren_Duncan> after that, all my distro versions in CPAN will work with each other

[22:32] <Darren_Duncan> following that, there's at least 2 large updates across the line ... then the porting begins

[22:32] <autrijus> k.

[22:32] *** Maddingue__ is now known as Maddingue

[22:32] <svnbot6> r5298, clkao++ | Don't force gcc_select while people can just use $ENV{CC}.

[22:33] <obra> nice

[22:39] <Limbic_Region> autrijus - of your hackathon notes - what % is represented by current pugs?

[22:39] <svnbot6> r5299, autrijus++ | * improve the CC env message a little bit.

[22:39] <autrijus> Limbic_Region: what %?

[22:40] <autrijus> you mean pugs's implementation of the notes?

[22:40] <autrijus> I think most of them are covered by new tests

[22:40] <autrijus> not many of them are implemented

[22:42] <Limbic_Region> gotcha

[22:48] <clkao> ghc-6.4: 

[22:48] <clkao> src/syck/syck.o: unknown symbol `_printf$LDBLStub'

[22:48] <clkao> is this caused by gcc4 or ?

[22:52] <gaal> how can i write code that is polymorphic over VBool, VInt, and other types, but which receives one of these types as an argument? sorry if this isn't very clear

[22:52] <gaal> i want to reuse autrijus' code from above, which did

[22:53] <gaal> fmap VBool (liftIO $ hIsWritable fh)

[22:53] <gaal> i want to make both VBool and hIsWritable parametric

[22:54] <gaal> i experimented with one or two things... btu what's the type of VBool when thought of as a function?

[22:54] <gaal> (brb)

[22:59] <autrijus> clkao: yeah, you need clean first

[22:59] <clkao> i did

[22:59] <clkao> maybe ghc doesn't respect CC

[22:59] <autrijus> that's gcc4 

[22:59] <clkao> hate

[23:00] <gaal> golfing haskell is wholly different from golfing perl.

[23:00] <autrijus> gaal: the type of VBool is (Bool -> Val)

[23:00] <autrijus> but your are looking at existentials

[23:00] <autrijus> (forall a. Value a => a -> Val)

[23:00] <autrijus> see vop1x in src/Emit/PIR.hs

[23:01] <gaal> ah, so *thats* how you get the class in there

[23:02] <gaal> I knew i wanted to make VBool more generic but Value didn't work there

[23:02] <autrijus> study vop1*

[23:02] <autrijus> and you'll eventually grok sexy types :)

[23:02] <gaal> oo

[23:03] * gaal studies

[23:04] * autrijus plugs for pugs on lambda the ultimate

[23:04] <gaal> some funky syntax to pick up there. <:=, <--, <==

[23:04] <autrijus> # http://lambda-the-ultimate.org/node/view/827

[23:04] <autrijus> gaal: er, nvm them, they are just userdefined infix

[23:04] <autrijus> you know, like perl6

[23:04] <gaal> uh huh

[23:04] <autrijus> see line 203

[23:05] <gaal> okay, yup

[23:06] <gaal> so there's a fundamental difference beween the commented out sig and the existential version. what is it?

[23:07] <gaal> --vop1x :: (RegClass a, RegClass b) => SubName -> PrimName -> a -> b -> Decl

[23:07] <gaal> or are they equivalent?

[23:08] <gaal> i think the Gentle tutorial doens't cover this. is it not in haskell 98?

[23:10] <wolverian> autrijus: s/it's/its/ # just being pedantic :)

[23:10] <wolverian> autrijus: (re: ltu)

[23:10] <wolverian> oh, that wasn't your article. duh.

[23:10] * wolverian hides under a rock

[23:12] * gaal runs out of wakies

[23:12] <gaal> i'll get these supporting functions in tomorrow - they're not blocking anyone, anyway

[23:12] <gaal> if you see him tell Aankhen`` he has seek now. :)

[23:13] * gaal waves. zzZZ &

[23:14] <autrijus> gaal: they diff. the forall's are in different place.

[23:14] <autrijus> gaal: cool :) next time we're both up I'd gladly show you the wonder of sexy typing

[23:27] <clkao> autrijus: so has svk reached the 'what's the big deal' stage?

[23:27] <autrijus> clkao: I'd say so.

[23:27] <clkao> autrijus: ok, good luck carry on with pugs :)

[23:28] <autrijus> clkao: on the other hand... there's one phase after that stage

[23:28] <autrijus> it's called "world domination" ;)

[23:28] * clkao grins

[23:41] <meppl> :D

