[00:33] <jabbot> pugs - 1751 - --Incorporated Juerd's notes (mostly, st

[00:34] <mdiep> in r1868, I have 10 subtests unexpectedly succeeding

[00:38] <mdiep> is that, uh, expected?

[00:45] <stevan> Ovid: just sent your an email back

[00:46] <stevan> mdiep: r1868?? from which repository, I am only on r1751

[00:47] <mdiep> URL: http://svn.perl.org/perl6/pugs/trunk

[00:47] <mdiep> now r1871

[00:48] <stevan> mdiep: oh,.. well a few tests succeeding is sometimes normal

[00:48] <mdiep> should they get hunted down and get marked so that they're expected to pass?

[00:48] <Ovid_> Thanks for the feedback stevan.  I'll be heading to the theater soon, so I can't really work on it much now anyway :)

[00:49] <stevan> Ovid: I would be happy to help out on it more tomorrow (or whenever the ITypes refactor is done)

[00:49] <stevan> mdiep: I think those may have been fixed already

[00:49] <Ovid_> Thanks.

[00:49] <Ovid_> Any word on when classes are likely to be ready?

[00:50] <stevan> Ovid: after the 6.2.0 release that is the major focus

[00:50] <Ovid_> OK.  (whee!)

[00:50] <stevan> given the current rate of development I would guess we would have primative objects in a week or two

[00:50] <stevan> and full on Perl6 OO maybe in month and a half?

[00:51] <stevan> (although I may be optimistic here)

[00:51] <stevan> mdiep: the tests are all currently broken though (Test.pm is not working) due to a major Type system refactor

[00:51] <Alias_> Maybe just a little :)

[00:51] <stevan> basically Pugs has a broken nose

[00:51] <Ovid_> For the time being, even basic support would be a godsend.  I don't even need inheritance right now.  Just give me some polymorphic lovin' and I'll be quite happy.

[00:51] <stevan> Ovid_: me too :)

[00:52] <stevan> Alias_: the IType refactor is a first step

[00:52] <stevan> and mugwump has been hacking away AFAIK

[00:53] <stevan> Alias_: would you have thought this much as possible in 69 days?

[00:53] <Alias_> How many developers are there now? 50? :)

[00:53] <stevan> Alias_: yeah about that

[00:54] <Alias_> Then why not :)

[00:55] <stevan> Alias_: thats the spirit :P

[01:09] <mugwump> Objects!

[01:33] <jabbot> pugs - 1752 - more tests on ** with special values

[01:52] <mugwump> Has anyone here looked at any of the preliminary objects banter in the pugs tree?

[01:58] *** luors is now known as LCamel

[02:05] *** khisanth_ is now known as Khisanth

[04:27] <mugwump> I'm trying to define a quick hack operator that turns one string into another...

[04:27] <mugwump> I'm getting :     Couldn't match `Val' against `t -> t1'

[04:27] <mugwump> that's with:

[04:27] <mugwump> OpName: VStr "foo" = VStr "bar"

[04:28] <mugwump> s/://

[04:28] <mugwump> I tried:

[04:28] <mugwump> Opname "foo" = "bar"

[04:28] <mugwump> But then I got an error trying to match [Char] to [Val]

[04:52] <autrijus> OpName (VStr "foo") = return (VStr "bar")

[04:52] <autrijus> something like that

[04:53] <autrijus> hmm, shapr did fix Test.pm. woot!

[04:53] <autrijus> rehi lambdacamels, btw. :)

[04:53] <masak> hi :)

[04:53] <mugwump> thx autrijus, but still   Couldn't match `Val' against `m a'

[04:54] <autrijus> is this a op1?

[04:54] * mugwump nods

[04:55] <autrijus> op1 "foo" = \x -> return (VStr (vCast x))

[04:55] <autrijus> op1 "foo" = opName

[04:55] <autrijus> err

[04:55] <autrijus> op1 "foo" = return . opName . vCast

[04:55] <autrijus> opName "foo" = VStr "bar"

[04:56] <autrijus> try that?

[04:56] * mugwump tries

[04:57] * autrijus backlogeth...

[04:58] <autrijus> hmm, s/pleac/cookbook/ makes sense to me

[04:58] <autrijus> but Ovid is not here

[04:58] <autrijus> do you folks think  examples/cookbook/  reads better than examples/pleac/ ?

[04:58] <mugwump> what does pleac mean?

[04:58] <autrijus> "Programming Language Examples Alike Cookbook." 

[04:58] * mugwump was just playin'

[04:58] <q[acme]> given that we're perl, i think it makes sense

[04:59] <autrijus> pleac.sf.net that is

[04:59] <autrijus> ok. well in the spirit of wikidev...I'll just go ahead and rename it.

[04:59] <mugwump> That looks happier, now it appears to be moaning that I'm not providing a "default" case

[05:00] <autrijus> mugwump: right, because pugs is now developed with super fascist -Wall -Werror

[05:00] <mugwump> heh

[05:00] <autrijus> mugwump: so you need to say

[05:00] <autrijus> opName _ = VStr "undef"

[05:00] <autrijus> or

[05:00] <autrijus> opName _ = VUndef

[05:00] <autrijus> or some such

[05:01] <mugwump> cool!  It compiles!

[05:02] <autrijus> it compiles! it must be correct!

[05:02] <mugwump> This proves that "clkao"? == "http://www.flickr.com/photos/obra/7893068/"

[05:03] <autrijus> heh

[05:03] <jabbot> pugs - 1753 - * rename examples/pleac/ to examples/coo

[05:04] <mugwump> hmm, unexpected "\9832" ...

[05:04] * mugwump fiddles some more

[05:04] <autrijus> you can't write nonlatin1 literals in code.

[05:05] <autrijus> have to escape them

[05:05] <autrijus> that's a ghc bug, not a pugs bug

[05:05] <autrijus> (and it's being fixed I think)

[05:10] <mugwump> I notice a yen operator too... so how would you escape that?

[05:11] <autrijus> mugwump: the yen operator is within latin1

[05:12] <autrijus> to get the hotspring operator

[05:12] <autrijus> write

[05:12] <autrijus> "\xE2\x99\xA8"

[05:13] <autrijus> i.e. its octets in utf8

[05:13] <castaway_> inline haskel support diabled .. hmm, I thought I had the hsplugins.. 

[05:13] <jabbot> pugs - 1754 - 

[05:13] <mugwump> ah, cool, thanks... so that ends up as 3 octets in the source, or the literal string you typed?

[05:13] * mugwump tries

[05:14] <autrijus> I think you need that 3 escapted octets.

[05:14] <autrijus> i.e. literal

[05:15] <mugwump> Actually, this doesn't matter for my talk, I'll just get the ascii version working :)

[05:15] <dvergin> FWIW 1754 is some work this evening on docs/S28draft.pod

[05:15] <dvergin> Gotta remember to put in the comment with the commit

[05:16] <autrijus> cool

[05:16] <dvergin> More to come. But it's time for bed now.

[05:16] <autrijus> nite dvergin!

[05:16] <dvergin> 'nite.

[05:17] <autrijus> mugwump: err, wow, you are actually going to commit the hotspring operator?

[05:18] <autrijus> maybe doing it as a howto writeup on pugs.kwiki.org will be more fitting...

[05:18] <autrijus> (but you're certainly free to commit... it's just I think it will get removed before 6.2.0)

[05:19] <mugwump> ah, just flicked back to this after the commit

[05:20] <mugwump> I'll un-do it before Sunday ;)

[05:20] <autrijus> you didn't push, though, so that's fine :D

[05:23] <mugwump> heh, true

[05:24] <mugwump> ok I won't put that in the repos, then.

[05:24] <autrijus> thanks :D

[05:24] <autrijus> mugwump++

[05:24] <mugwump> svk++

[05:24] <autrijus> there are other primitives in S29 awaiting your work... :)

[05:25] <mugwump> alright, off to give a talk to wellington.pm.org

[05:25] <mugwump> later ...

[05:25] <autrijus> see ya

[06:12] <gaal> what's a hotspring operator?

[06:21] <Khisanth> a person that operates a hotsprint? :)

[06:33] <Ovid> Er, who moved examples/pleac to examples/cookbook?  I think it's a good change, but I was rather curious about how this came about.  autrijus asked for it to be in examples/pleac.

[06:34] *** castaway_ is now known as castaway

[06:34] <castaway> it was autrijus iirc, try asking svn blame ,)

[06:35] <Ovid> I tried, but it doesn't work on directories and the files don't show the change :)

[06:35] <Ovid> I'm glad autrijus did it, though.

[06:35] <castaway> 06:58 < autrijus> hmm, s/pleac/cookbook/ makes sense to me

[06:35] <castaway> 06:58 < autrijus> but Ovid is not here

[06:36] <Ovid> Thanks!

[06:36] <castaway> (presumably someone suggested it earlier, he was reading the backlog)

[06:36] <Ovid> I had, actually.

[06:36] <castaway> CAN YOU SEE WHO DID !/%§ ß 8i HAVE NO KNOWLEDGE OF SVN9

[06:37] <castaway> oops!

[06:37] * castaway turns the capslock back off.. sorry

[06:37] <castaway> 1753, that was meant to be ,)

[06:37] <Ovid> Er, how do I see who did a  particular commit by number? (I don't know svn that well)

[06:38] <castaway> me either :)

[06:38] <Ovid> :)

[06:38] * castaway looks in the redbean book

[06:39] <Ovid> Is there a particular file you want to know the change for?  I can do that.

[06:40] <Ovid> svn log filename should do the trick.

[06:40] <castaway> ah

[06:40] <castaway> svn log -r 1753

[06:40] <castaway> that was the pleac->cookbook one

[06:40] <Ovid> pugs $ svn log -r 1753

[06:40] <Ovid> ------------------------------------------------------------------------

[06:40] <Ovid> r1753 | autrijus | 2005-04-10 21:59:53 -0700 (Sun, 10 Apr 2005) | 1 line

[06:40] <Ovid> * rename examples/pleac/ to examples/cookbook/.

[06:40] <Ovid> ------------------------------------------------------------------------

[06:40] <castaway> yup

[06:41] <Ovid> Thanks.  I didn't know you could do a log that way.

[06:41] <castaway> http://svnbook.red-bean.com/en/1.0/ch03s06.html#svn-ch-3-sect-5.1

[06:42] <castaway> now we're all more knowledged..

[06:44] * castaway boggles

[06:44] <nothingmuch> castaway: you know a bit of RPM.... --relocate is like PREFIX for Makefile.PL?

[06:44] <castaway> We have Paris Hilton under contract?

[06:44] <castaway> In theory, nm, yes.. but only with rpms that are built to support it, iirc

[06:45] <nothingmuch> ook, it's not installing even with --force

[06:45] <nothingmuch> i just want the one binary out of the file

[06:45] <nothingmuch> grr....

[06:45] <castaway> aua.. what is it?

[06:46] <nothingmuch> gcc 3.3

[06:46] <nothingmuch> i want to try to make gcov with with gcc 3.2

[06:46] <nothingmuch> and if it doesn't work adhoc, i'll just install a newer gcc along side 3.2

[06:46] <nothingmuch> the 3.2 gcov is completely insane though

[06:46] <castaway> hmm,m my suse 9.1 has gcc 3.3.3 per default, it seems

[06:46] <nothingmuch> rhel as 3 here

[06:47] <nothingmuch> horrible horrible platform

[06:47] * nothingmuch loaths redhat

[06:47] * rgs 2 </aol>

[06:47] <castaway> hmm, could give you an account here, if its just to try something

[06:48] <nothingmuch> no, i need to run gcov

[06:48] <nothingmuch> i have other gccs, they are better

[06:48] <castaway> ah

[06:48] <nothingmuch> we have rhel 4, fc 3, rhel 2, etc

[06:48] <castaway> mm, fun

[06:48] <castaway> oh, wait, you just want a binary?

[06:48] <castaway> which?

[06:48] <nothingmuch> gcov itself =)

[06:49] <nothingmuch> hah, why didn't i think of that

[06:49] <castaway> you could just unpack the rpm.. rpm2cpio or somesuch..

[06:49] <castaway> but I can give you it

[06:49] <nothingmuch> ah, i'll do that

[06:49] <castaway> alien++

[06:49] <nothingmuch> rpm2cpio | cpio <extract> ?

[06:49] <castaway> something like that

[06:49] <castaway> I usually use alien

[06:50] <nothingmuch> cpio -id worked

[06:50] <nothingmuch> thanks

[06:50] <castaway> :)

[06:51] <castaway> mine is on d-i just in case (in /misc)

[06:51] <castaway> tell me when you get a chance to start SEE?

[06:53] <nothingmuch> i'll try now

[06:53] <nothingmuch> i started it again yesterday

[06:53] <nothingmuch> i wonder why it died

[06:54] <nothingmuch> oh

[06:54] <nothingmuch> ping woobling.org

[06:54] <nothingmuch> =(

[06:54] <nothingmuch> damn them to hell, my ISP

[06:54] <nothingmuch> i hate pptp

[06:54] <nothingmuch> and i hate l2tp

[06:54] <nothingmuch> and i hate anything that is so flakey it doesn't stay connected for more than a week

[06:54] <nothingmuch> *sob*

[06:54] * castaway hugs nothingmuch 

[06:55] <nothingmuch> you are very touchy-feely lately... =)

[06:55] <castaway> I always am ,)

[06:55] <nothingmuch> found a long-lost brother or something?

[06:55] <nothingmuch> ah =)

[06:56] <castaway> nah, its just my default mode ,)

[06:56] <nothingmuch> wtf?!

[06:56] <nothingmuch> i think it's a route problem

[06:56] <nothingmuch> traceroute goes 3 hops,

[06:56] <nothingmuch> and then stops

[06:56] <nothingmuch> could you try to traceroute, see where it gives up?

[06:57] <castaway>  8  netvision.ge4-0.3.cr02.nyc01.pccwbtn.net (63.218.9.2)  148.368 ms   167.602 ms   173.179 ms

[06:57] <castaway>  9  * * *

[06:57] <castaway> 10  * * *

[06:57] <castaway> 11  * * *

[06:57] <nothingmuch> arses

[06:57] <nothingmuch> that is before even the backbone

[06:57] <castaway> eep

[06:57] <nothingmuch> from there it has to get to haifa/rehovot

[06:58] <nothingmuch> and from there to my house

[06:58] <nothingmuch> i get something entirely different:

[06:58] <nothingmuch>  3  gi1-0.core1.pt.nv.net.il (212.143.10.1)  10.272 ms !H *  7.246 ms !H

[06:58] <nothingmuch> â¢ [syeeda:~] nothingmuch % 

[06:58] <nothingmuch> that's where it stops

[06:58] <nothingmuch> this router is our upstream one

[06:59] <castaway> hmm, odd

[06:59] <nothingmuch> well, gcov dies with 'abort'

[07:00] * nothingmuch will use a hash table and move all the gcovs before every run

[07:00] <nothingmuch> it's such a stupid tool

[07:00] <castaway> whats it for?

[07:00] <nothingmuch> it talks about ../foo/File.h, for example

[07:00] <nothingmuch> and writes ./File.h.gcov

[07:00] <nothingmuch> Devel::Cover for C/C++

[07:00] <castaway> ah

[07:01] <castaway>  8  netvision.ge4-0.3.cr02.nyc01.pccwbtn.net (63.218.9.2)  224.805 ms   244.667 ms *

[07:01] <castaway>  9  pos9-0.core1.hfa.nv.net.il (212.143.12.21)(H!)  381.808 ms * *

[07:01] <castaway> (and then stopped, that time)

[07:01] * castaway tries to remember what H! is

[07:11] <nothingmuch> damn, now this means I can't run gcov in parallel either

[07:11] * nothingmuch used to run 12 procs at a time to make it mui fast

[07:11] <nothingmuch> *sigh*

[07:12] <castaway> ,)

[07:13] * castaway pulls both corners of nothingmuch's mouth up.. smile!

[07:13] <nothingmuch> bad day

[07:13] <nothingmuch> but thanks, =)

[07:14] <castaway> better

[07:14] <castaway> its only 10:15 ..

[07:14] <nothingmuch> right

[07:15] <castaway> plenty of time to improve ,)

[07:16] <nothingmuch> i'll try ;-)

[07:16] * castaway gets to make excel templates, what fun

[07:16] <nothingmuch> oi oi oi

[07:16] <nothingmuch> i just write tsv's

[07:16] <castaway> luckily I got to automate most of it a while back

[07:34] * nothingmuch wants ternary assignment

[07:34] <nothingmuch> $lvaluse ??= "foo" :: "bar";

[07:35] <nothingmuch> useful for $hash{$key} ??= die "duplicate" :: $value;

[07:35] <castaway> :)

[07:35] <castaway> suggest it

[07:36] <nothingmuch> i wonder if i could just implement it in p6

[07:36] <castaway> probably

[07:36] <nothingmuch> sub &ternafoo<??=::> ($lvalue is rw, $expr, $expr)

[07:37] <nothingmuch> but that won't be short circuiting

[07:37] <castaway> looks like gobbeldygook to me ,)

[07:39] <nothingmuch> i'll mail p6l about thunks as parameters

[07:40] <nothingmuch> damn, can't reach pasta

[07:40] <nothingmuch> no mutt

[07:43] <nothingmuch> fuck fuck fuck!

[07:43] <nothingmuch> i hate gcov

[07:43] <castaway> aww..

[07:43] <nothingmuch> who the hell was stupid enough to think that basenames are a good enough distinction?!

[07:43] <castaway> use something else?

[07:43] <nothingmuch> i have two files in two dirs named common.h

[07:43] <nothingmuch> they can'

[07:43] <nothingmuch> t coexist, as far as it's concerned

[07:43] <nothingmuch> it will just overwrite one with the other

[07:43] <castaway> some idiot, no doubt

[07:43] <nothingmuch> phooey!

[07:44] <nothingmuch> gcov is the only tool

[07:44] <nothingmuch> and it has gotten better

[07:44] <castaway> really?

[07:44] <nothingmuch> but i need gcov for gcc 3.2

[07:44] <nothingmuch> which still sucks

[07:45] <castaway> sounds like you'll need to build some ghastly framework around the calls

[07:45] <nothingmuch> no

[07:45] <nothingmuch> i'll just skip cvg of those files for now

[07:45] <nothingmuch> they are probably unimportant

[07:45] <castaway> (uhoh.. )

[07:46] <nothingmuch> i'll warn about them now

[07:46] <nothingmuch> if it's just common.h in 3 places, i don't care

[07:46] <nothingmuch> they are 40 lines of unexecutable code, prolly

[07:47] <nothingmuch> i could hack gcov itself

[07:47] <nothingmuch> and recompile it

[07:47] <nothingmuch> 2.2

[07:47] <nothingmuch> 3.2, that is

[07:47] <castaway> true

[07:47] <nothingmuch> maybe that's the way to go

[07:47] <nothingmuch> but i don't want these scripts failing if gcov suddenly gets swiped under them

[07:47] <nothingmuch> because someone ran up2date

[07:48] <castaway> any gcov/gcc groups you could whine on?

[07:48] <nothingmuch> i've wined on #c

[07:48] <nothingmuch> but, i dunno... it's a futile war

[07:48] <nothingmuch> gcov was fixed

[07:48] <nothingmuch> it's my problem that i can't upgrade

[07:48] <castaway> oh, I see

[07:48] <castaway> :(

[07:54] <nothingmuch> i love pbcopy and pbpaste

[07:54] <nothingmuch> pbpaste | awk '{print $3}' | xargs -n 1 basename | pbcopy

[07:56] <castaway> wossat?

[07:56] <nothingmuch> take clipboard

[07:56] <nothingmuch> munge it a bit

[07:57] <castaway> oh, copy to clipboard temporarily?

[07:57] <nothingmuch> to make paths in output table a list of basenames

[07:57] <nothingmuch> and then put that back in the clipboard

[07:57] <castaway> sneaky.. would generally just use a variable ,)

[07:57] <nothingmuch> well, this is going between shells

[07:57] <nothingmuch> between machines, actually

[07:58] <nothingmuch> i would too, if it's the same shell

[07:58] <nothingmuch> since it's more recoverable

[07:59] <castaway> ah, useful

[08:00] *** gugod_ is now known as gugod

[08:01] <castaway> allo gugod

[08:02] <gugod> hi

[08:02] <castaway> seen theorbtwo

[08:02] <jabbot> castaway: theorbtwo was seen on Mon Apr 11 03:20:32 2005

[08:03] <castaway> is the jabbot yours?

[08:03] <gugod> castaway: yes

[08:04] <castaway> would you mind adding some timezone info or something similar?

[08:04] <gugod> oh I was going to

[08:04] <castaway> nifty

[08:04] <gugod> but I forgot :p

[08:05] <gugod> I should do it now

[08:05] <castaway> would be much appreciated

[08:07] <castaway> jabbot: time

[08:07] <jabbot> castaway: Please go on.

[08:10] <gugod> jabbot: seen gugod?

[08:10] <jabbot> gugod: gugod was seen on Mon Apr 11 08:09:52 2005 GMT

[08:10] <gugod> there. :p

[08:10] <castaway> lovely :)

[08:10] <castaway> seen theorbtwo

[08:10] <jabbot> castaway: theorbtwo was seen on Sun Apr 10 19:20:32 2005 GMT

[08:10] <castaway> yay :)

[08:11] <gugod> hmm, correct :)

[08:11] <gugod> I should have use gmtime() \

[08:11] <gugod> 

[08:11] <castaway> hmm?

[08:25] <nothingmuch> is there any way to set the pipe size?

[08:25] <nothingmuch> that is, how many unread bytes before a the writer starts blocking?

[08:26] <nothingmuch> ulimit -p can only display, btw, so don't look there

[08:27] * castaway has no idea

[08:37] <nothingmuch> i feel so witty

[08:38] <nothingmuch> cprint("$rel ... $.") unless $i++ % 7

[08:38] <nothingmuch> cprint is just 'print \r, print @_, print lots of spaces'

[08:38] <nothingmuch> i love prime numbers

[09:01] <nothingmuch> lexical scopes + perl -n are scary

[09:02] <nothingmuch> i just had 'my %hash; sub { }'

[09:02] <nothingmuch> where sub plays with hash

[09:02] <nothingmuch> since it's a perl -n script, though, %hash is different for every loop, and sub is a closure

[09:02] <nothingmuch> beh

[09:06] <elmex> ;)

[09:06] <elmex> lol

[09:06] <nothingmuch> i don't know how newbies manage to deal with this stuff

[09:07] <elmex> nothingmuch: they give up

[09:07] <nothingmuch> i didn't

[09:07] <nothingmuch> and i don't remember sufferring too much either

[09:08] <elmex> it's just, that newbies don't know about -n

[09:08] <elmex> just a guess guess

[09:08] <elmex> oops

[09:08] <nothingmuch> that's my theory too

[09:09] <elmex> well, also that newbies ask on #perl or a friend i guess. or they just don't write code thats too complicated

[09:09] <elmex> i guess (programming) newbies also don't know much about closoures

[09:12] * shapr awakens

[09:12] <shapr> I'm desperately curious what the general purpose fix was for vCast

[09:12] <elmex> vCast?

[09:13] <shapr> Yesterday's IType upgrade added fromVal and I think my fix for Test.pm was likely a hack

[09:14] <Alias_> Answer, nobody uses perl's flags :)

[09:14] <elmex> jafa?

[09:15] <elmex> err...java?

[09:15] <nothingmuch> Alias_: i use them all the time =)

[09:15] <nothingmuch> but that wasn't my point

[09:15] <autrijus> \camels -> greeting !

[09:15] <shapr> autrijus: I didn't fix all the vCast stuff, lots of the tests were failing when I fell asleep.

[09:16] <nothingmuch> hola autrijus 

[09:16] <nothingmuch> there's lots of weird behavior like that all about p5

[09:16] <autrijus> shapr: that's fine, I'm up and fixing them now

[09:16] <shapr> yay

[09:18] * nothingmuch recompiles with -fno-inline

[09:18] <nothingmuch> i thought what I did would be enough, but nooooo

[09:32] <theorbtwo> Hm, the CHANGELOG is perhaps a bit overzelous about what I did.

[09:32] <theorbtwo> IE it still doesn't actually work, but AFAICT the problem is in code at a higher level then mine.

[09:33] <theorbtwo> Also, it still needs fixing to work for anything but SHA1 and anywhere but the paths I'm using.

[09:46] <autrijus> right. would you tackle the latter?

[09:46] <autrijus> I'll deal with the former.

[09:46] <theorbtwo> Nod.

[09:47] <theorbtwo> Turns out it's also broken by the ITypes changes, and I'm not clear on why.

[09:47] <autrijus> really. hrm

[09:47] <autrijus> let me install SHA1 and try out

[09:48] <autrijus> a sec though, I'm fixing 

[09:48] <autrijus> () = (1..Inf)

[09:48] <theorbtwo> That may have been a misdiagnosis.

[09:50] * castaway snuggles theorbtwo

[09:52] <castaway> (hmm, where'd he go?)

[10:20] <nothingmuch> gah

[10:21] <nothingmuch> meeting on coding standards in 40 minutes

[10:21] <nothingmuch> and i want food

[10:21] <nothingmuch> conflict

[10:22] <theorbtwo> I suppose you can't eat at the meeting.

[10:22] <nothingmuch> i would like a big fat sandwich

[10:22] <autrijus> yay!

[10:23] <nothingmuch> there's a guy that makes them  by the univ

[10:23] <nothingmuch> dirt cheap

[10:23] <nothingmuch> very good

[10:23] <nothingmuch> anyway, they always end up more like soup, by the time 10 minutes have passed

[10:23] <autrijus> $ ./pugs -e '%ENV.ref.say'

[10:23] <autrijus> Hash::Env

[10:23] <autrijus> I win :D

[10:23] <nothingmuch> because i'm a sucker for the sauces

[10:23] <nothingmuch> autrijus++

[10:23] <nothingmuch> yay!

[10:23] <theorbtwo> Dammit, I want a good sub now.

[10:23] <theorbtwo> Cool!

[10:23] <theorbtwo> Autrijus++

[10:25] <nothingmuch> death to gcov! death to gcc!

[10:26] <nothingmuch> eek!

[10:26] <nothingmuch> if i say no-default-inline i get to keep explicitly inlined functions

[10:26] <nothingmuch> if i say no-inline, they all go away

[10:26] <nothingmuch> if i say keep-inline-functions the used ones stay, but i want the dead code too

[10:26] <nothingmuch> and some used ones are still inlined and thrown away

[10:27] <theorbtwo> -fkeep-inline-functions'

[10:27] * nothingmuch tries -fno-default-inline, but with -Dinline="/* */"

[10:28] <nothingmuch> theorbtwo: i tried that, no go

[10:28] <nothingmuch> i should note:

[10:28] <nothingmuch> with -fno-default-inline it seems behave correctly

[10:28] <nothingmuch> that is, code is generated for the functions

[10:28] <nothingmuch> but it is never executed

[10:29] <theorbtwo> Try declaring "extern inline"?

[10:29] * nothingmuch will lookup exactly what that means

[10:30] * theorbtwo isn't quite sure.

[10:31] <nothingmuch> ah, i see

[10:31] <nothingmuch> it basically is supposed to make inline functions

[10:31] <nothingmuch> but also keep a regular version, for external linkage, right?

[10:31] <nothingmuch> ok, that doesn't help

[10:31] <nothingmuch> i need these functions to be not inlined at all

[10:31] <nothingmuch> like i hoped -g would do

[10:31] <nothingmuch> so that they are actually executed as normal functions

[10:32] <theorbtwo> Oh!

[10:32] * theorbtwo was thinking you wanted something completely different.

[10:32] * nothingmuch is trying to get the most debuggy, simplified code

[10:32] <nothingmuch> that way coverage is accurate

[10:32] <nothingmuch> on a per statement basis

[10:32] <theorbtwo> Ah.

[10:33] <nothingmuch> if optimizations get into the picture, the meaning of the code -> instruction conversion is sometimes vague

[10:33] * theorbtwo nods.

[10:33] <castaway> mm, food, good plan

[10:33] <theorbtwo> Just pass a -O0 (that's oh, zero) option?

[10:34] <nothingmuch> '-g'

[10:34] <nothingmuch> i'm already passing that

[10:34] <autrijus> hm.

[10:34] <autrijus> @_ = (1..Inf); @_[3] = 4;

[10:34] <autrijus> this is surprisingly difficult.

[10:34] <nothingmuch> is it generative?

[10:34] <autrijus> guess I'll need to implement full COW.

[10:34] <nothingmuch> full cow for the element?

[10:35] <autrijus> full cow for elements

[10:35] <nothingmuch> what does it do now?

[10:35] <autrijus> it tries to create a IORef for each rhs

[10:35] <autrijus> and dies

[10:35] * nothingmuch is curious

[10:35] <nothingmuch> each rhs being 1 .. Inf?

[10:35] <autrijus> yeah

[10:36] <nothingmuch> why does that happen?

[10:36] <autrijus> because each array element is potentially a fully tieable scalar.

[10:36] * nothingmuch needs a -fnever-ever-inline-you-stupid-twit option

[10:36] <autrijus> i.e. you can do

[10:36] <autrijus> tie($ENV{USER}, 'Tie::Google')

[10:36] <nothingmuch> right

[10:36] <nothingmuch> but isn't that supposed to be figured out per element

[10:36] <nothingmuch> when the generator returns it?

[10:37] <autrijus> I'm implementing that "supposed to". ;)

[10:37] <nothingmuch> [3] doesn't exist yet, when @_[3] is assigned

[10:37] <autrijus> yup.

[10:37] <nothingmuch> so it's genererated

[10:37] <nothingmuch> to see if it's tied

[10:37] <nothingmuch> and then replaced

[10:37] <nothingmuch> ok

[10:37] <nothingmuch> again /me is just curious as to why that would have happenned

[10:37] * autrijus praises "lazy evaluation by default"

[10:37] <theorbtwo> Can you generate @_[0..2], assign them to where they should be, and leave [4...] as the inf bit?

[10:37] <autrijus> yes.

[10:37] <autrijus> that's the idea

[10:38] <theorbtwo> Ah, OK.

[10:38] <nothingmuch> why do you need 2?

[10:38] <nothingmuch> are the generators always iterative?

[10:38] <theorbtwo> Because then you can have it so the left hand "half" is each-element-is-known, with a generator to the right.

[10:39] <theorbtwo> And not a strange mix of generated and known.

[10:39] <nothingmuch> right, but these are not linked lists

[10:39] <nothingmuch> i don't want to wait forever if i have

[10:39] <nothingmuch> @a = 0 .. Inf

[10:39] <nothingmuch> @a[2**64] = 1;

[10:39] <autrijus> you don't need to wait forever :)

[10:39] <theorbtwo> I think they are linked lists...

[10:39] <nothingmuch> perhaps generators should get something akin to slice notation

[10:40] <nothingmuch> theorbtwo: in haskell ;-)

[10:40] <autrijus> they are linked lists, but slicing will be automagic.

[10:40] <nothingmuch> in parrot/perl6 i hope they will be sparse arrays

[10:40] <autrijus> in parrot it's already sparse arrays

[10:40] <autrijus> and we can do that in haskell too

[10:40] <autrijus> just need to get around to it :)

[10:41] * theorbtwo leaves the heavy lifting to autrijus and nm, tries to figure out how to dump a hi file.

[10:41] <nothingmuch> peh

[10:42] <nothingmuch> huraaah! Mutex.h:109: multiple definition of `std::memchr(void*, int, unsigned int)'

[10:42] <nothingmuch> now i've really messed it up

[10:46] <shapr> wadler mentioned pugs and higher order perl on his blog, spiffy

[10:49] <theorbtwo> Hmmpf.

[10:49] <theorbtwo> ghc -package hi dumphifile.hs && ./a.out

[10:49] <theorbtwo> a.out: magic number mismatch: old/corrupt interface file?

[10:50] <cognominal> is there a file with the siganture of the implemented predefined function?

[10:51] <theorbtwo> Oh.

[10:51] <cognominal> s/siganture/signatures/; s/function/functions/

[10:51] <theorbtwo> cognorminal, ghci, then :t whatever

[10:52] <theorbtwo> Or check the specification: http://haskell.org/onlinereport/

[10:52] <cognominal> heu, are we speaking perl6 here?

[10:53] <theorbtwo> Oh.

[10:53] <theorbtwo> I thought you meant haskell

[10:53] <cognominal> sorry for changing context without saing

[10:54] <theorbtwo> There's a table at the end of src/Prim.hs

[10:54] <shapr> yay - http://wadler.blogspot.com/2005/04/perl-6-in-haskell-pugs.html

[10:59] <autrijus> ok. I triggered this again

[10:59] <autrijus> src/AST.hs:1020:12:

[10:59] <autrijus>     My brain just exploded.

[10:59] <autrijus>     I can't handle pattern bindings for existentially-quantified constructors.

[10:59] <autrijus> I wonder why I tend to write brain-explosion code.

[11:00] <nothingmuch> autrijus: diet coke

[11:00] <autrijus> I'm not on diet coke anymore :p

[11:00] <nothingmuch> that's good news =)

[11:00] <theorbtwo> autrijus: That's an actual compiler error message: "my brain just exploded"?

[11:00] <autrijus> aye it is

[11:02] <autrijus> rumour has it that it was spj's brain that has exploded when he worked on that part in the compiler.

[11:02] <nothingmuch> spj?

[11:02] <autrijus> http://research.microsoft.com/%7Esimonpj/ 

[11:03] <nothingmuch> ah

[11:03] <autrijus> father of GHC and inventor/coinventor of lots of nifty features we use

[11:03] <shapr> and obsessive research paper author

[11:03] <autrijus> that too.

[11:04] <autrijus> sad, because with bindings for ex.q. constructors, we'll have full binding power for GADTs

[11:04] <autrijus> and persumably making Show etc derivable

[11:04] <shapr> you could always ask SPJ

[11:04] <osfameron> "the implementation people seem to do

[11:04] <osfameron> nothing but tweak their VM" # fair ?

[11:05] <nothingmuch> whose brain exploded, btw?

[11:05] <autrijus> nothingmuch: simon pj's

[11:05] <nothingmuch> oh oh oh

[11:05] <nothingmuch> i get it

[11:05] <autrijus> osfameron: well, there's python, not intercal

[11:05] <nothingmuch> that's the compiler output

[11:06] <nothingmuch> i thought it was a comment

[11:06] <autrijus> it's a compiler output :)

[11:08] <castaway> Anyone speak/read italian? /me looks at larsen

[11:08] <osfameron> and me

[11:08] <osfameron> (not as well as larsen, certo)

[11:09] <castaway> trying to decipher: http://cgi.ebay.de/ws/eBayISAPI.dll?ViewItem&category=23398&item=5766940352&rd=1&ssPageName=WD2V

[11:09] <osfameron> In German?

[11:10] <osfameron> Oh, I see, the description is Italian

[11:10] <castaway> does that say it has RoutePlanner, *and* CityMaps on it, for EPOC systems?

[11:10] <castaway> oops, yeah, was earching on .de

[11:11] <osfameron> Looks like there are 2 products?

[11:11] <castaway> there are

[11:12] <castaway> but Ive not seen them on the same CD before, nor v2004, since the last Ive found is 2003

[11:12] <osfameron> You've noted that he's only selling the software, not the GPS.

[11:12] <castaway> yup, I have a GPS :)

[11:13] <castaway> just looking for software upgrades, the barstewards renamed it, changed the company name, and then stopped selling/giving map updates :(

[11:13] <osfameron> Ah

[11:13] <castaway> (mine is StreetPlanner Millenium from 1999 ,)

[11:13] <osfameron> well he talks about both applications (sorry, haven't got the time to read in depth at mo')

[11:14] <castaway> Ok

[11:14] <castaway> and running on EPOC?

[11:14] <castaway> (idiots only do their new stuff on Pocekt PC)

[11:15] <osfameron> All he says about EPOC is that the RoutePlanner version supports additional languages

[11:15] <osfameron> which implies that it does run on Epoc..

[11:15] <castaway> indeed

[11:15] <castaway> ah well, 10 days to go on it

[11:16] <osfameron> He suggests you contact him, telling him your OS

[11:18] <castaway> thanks

[11:21] <autrijus> hm

[11:21] <autrijus> perl -e 'my @a = (1..10000000); @a[0]'

[11:21] <autrijus> this is slow.

[11:21] <autrijus> I wonder why ;)

[11:21] <theorbtwo> Not Lazy enough for your level of Impatience?

[11:22] <autrijus> likely so.

[11:22] <shapr> That's a neat quote

[11:22] <Entwicklung> is perl6 expected to be released this year ?

[11:22] <shapr> gutentag Entwicklung, wie geht es?

[11:23] <Entwicklung> shapr: no im not german, i just like the nick

[11:23] <Entwicklung> :)

[11:23] <theorbtwo> Thanks, shapr.

[11:23] <shapr> That's okay, I'm from Selma, Alabama.

[11:23] <Robin_Kin> why not $a[0]  but @a[0] ?

[11:23] <pjcj> aber hier sprechen wir deutsche

[11:23] <shapr> Entwicklung: jump in and help! Then pugs will be further sooner!

[11:24] <Entwicklung> i know nothing about compilers 

[11:24] <shapr> This is a great opportunity to learn!

[11:24] <theorbtwo> Well, considering how far we are after 2 months, releasing after a year might be possible.

[11:24] <theorbtwo> Ent, neither do I.

[11:24] <Entwicklung> lol, by the time i know enough to contribute, perl6 will be ready

[11:24] <theorbtwo> Writing tests is a good place to start, generally.

[11:24] <shapr> There's a lot that can be done with straight-up perl skills.

[11:25] <Entwicklung> i was under the impression that there were enough of people working on it already

[11:25] *** theorbtwo changes topic to: pugscode.org <<Overview Journal Logs>> | r1734: ITypes *Test.pm currently somewhat broken* | pugs.kwiki.org

[11:25] <Robin_Kin> it's an exciting message

[11:25] *** Aankh|Clone is now known as Aankhen``

[11:26] <theorbtwo> Ent: too many cooks spoiling the soup is because the soup doesn't have a sufficient version control system.

[11:26] <theorbtwo> If you put in too much garlic, we can roll some back.

[11:26] * shapr laughs

[11:26] <Aankhen``> LMAO.

[11:26] * shapr likes spicy food.

[11:26] <theorbtwo> Yeah, well, I'm not sure there is such a thing as too much garlic.

[11:26] <autrijus> Robin_Kin: @a[0] is because my finger is used to that

[11:26] <Aankhen``> Er... I'm sure there is; does that count, theorbtwo?

[11:26] <Entwicklung> hehe

[11:26] <autrijus> same symptom if you use $a[0]

[11:27] <autrijus> Entwicklung: fancy working on the cookbook? :)

[11:27] * Robin_Kin like spicy food to

[11:27] <theorbtwo> OTOH, for(1..1000000) doesn't have that symptom, at least in sufficently new p5s.

[11:27] <Entwicklung> lol

[11:28] <shapr> Ah, the cookbook is under example/cookbook 

[11:28] <autrijus> theorbtwo: right, but that's peephole optimisation

[11:28] <shapr> I might actually learn how to write Perl.

[11:29] <autrijus> $ time ./pugs -e 'my @a = (1..Inf); @a[16384].say'

[11:29] <autrijus> 16385

[11:29] <autrijus> sys     0m0.000s

[11:29] <autrijus> infinite lists, constant time

[11:29] <pjcj> where constant = zero!

[11:29] <autrijus> O(0)!

[11:29] <shapr> Entwicklung: jump on in, the code is warm and inviting!

[11:29] <Aankhen``> O_O

[11:30] * theorbtwo boggles, as autrijus warps the structure of space and time just for the fun of it.

[11:30] <shapr> speaking of quoteworthy...

[11:31] <pjcj> theorbtwo: are you suggesting autrijus has put on weight?

[11:31] * theorbtwo laughs aloud.

[11:31] <autrijus> lol

[11:33] <jabbot> pugs - 1757 - * Lazy IArray structures: "Infinite list

[11:33] <jabbot> pugs - 1756 - * make ref() work on ITypes.

[11:33] <jabbot> pugs - 1755 - * iType interface to let ITypes have dis

[11:49] <Aankhen``> Hrm...

[11:50] <Aankhen``> I just came across this in examples/cookbook/01strings/01-00introduction.p6:

[11:50] <Aankhen``> $string = q'Jon 'Maddog' Orwant';   # literal single quotes

[11:50] <Aankhen``> Does that work?

[11:50] <Aankhen``> How does that work, even?

[11:50] <castaway> use something else as the quote on the outside?

[11:50] <castaway> q(Jon 'Maddog' Orwant); ?

[11:51] <Aankhen``> It's with a bunch of other ways to quote the string.

[11:51] <Aankhen``> http://svn.openfoundry.org/pugs/examples/cookbook/01strings/01-00introduction.p6

[11:51] <Aankhen``> Take a look at the portion under "# Alternative operators can be used in the place of // delimeters"

[11:52] <castaway> ah..

[11:52] <castaway> It doesnt look like it would to me, but what do I know? :)

[11:52] <Aankhen``> I was just wondering whether that was put in accidentally, or it actually works.

[11:53] <Aankhen``> BRB.

[11:53] <theorbtwo> Hm, I'd expect that to be an accident; it works with bracketing chars, but you can't expect a ' to come in matched pairs.

[11:53] <jabbot> pugs - 1758 - Added merlyn Soup with Crackers recipe

[11:53] <osfameron> I didn't know // was the canonical single-quoting delimiter

[11:53] <theorbtwo> (Witness "can't".)

[11:54] <theorbtwo> It's not.  It is, however, the cannonical character to use with anyquotes, no matter what the verb is on them.)

[11:55] * castaway thinks someone cut&pasted all the comments ("literal single quotes")

[11:55] <autrijus> yeah :)

[11:55] <Aankhen``> Ah.

[11:55] <Aankhen``> Anyway.

[11:55] * Aankhen`` BBL.

[11:58] <autrijus> however, hash is strict.

[11:59] <autrijus> i.e. an infinite sized hash does not exist yet

[11:59] <autrijus> I think it's a feature.

[11:59] * castaway looks at some of the holes in the cookbook directory and hmms

[12:02] *** integral is now known as aardvax

[12:02] <theorbtwo> So do I.

[12:03] *** aardvax is now known as integral

[12:03] <theorbtwo> OTOH, you could create an infinite hash well enough if you don't mind creating a new IType.  (In a theoretical future where you can create ITypes.)

[12:03] <jabbot> pugs - 1759 - * unified hash and array fetching.

[12:03] <theorbtwo> Of course, that's syntatic sugar for a function with a single argument... but what isn't?

[12:04] * shapr grins

[12:07] <autrijus> lol :)

[12:08] <autrijus> ok, @a[1..10] = (1..Inf) now works too.

[12:08] * castaway blinks.

[12:08] <theorbtwo> Oh, that could be a nice idiom.

[12:08] <shapr> Is that like "take 10 [1..]" ?

[12:09] <autrijus> it is.

[12:09] <theorbtwo> Equiv to @a[1..10] = [1..10], but without having to specify that 10 twice.

[12:09] <autrijus> and I bet it's implemented like that underneath

[12:09] <autrijus> yup.

[12:09] <autark-jp> what happens with @a[1..10] = reverse (1 .. Inf)? If that is even legal that is.

[12:09] <autrijus> ok... now let me repair quicksort and friends.

[12:10] <kungfuftr> ullo all

[12:10] <autrijus> autark-jp: I imagine it will go on forever.

[12:10] <theorbtwo> Allo, kungfuftr.

[12:10] <autrijus> either that, or incorrectly fill all 10 slots with Infinity.

[12:10] <autrijus> I prefer that first

[12:10] <autark-jp> ie, reverse is non-lazy?

[12:11] <kungfuftr> odd... pugs actually builds for me now

[12:11] <theorbtwo> Why is that odd?

[12:11] <kungfuftr> because i couldn't over the weekend

[12:11] <theorbtwo> For a few hours, hs-plugins was a required dependency; it's now optional.

[12:12] <theorbtwo> (You should get a message at Makefile.PL time if you don't have it.)

[12:12] <kungfuftr> complained about memory exhaustion during linking

[12:12] <theorbtwo> Oh.

[12:12] * theorbtwo has no explanition for that.

[12:12] <shapr> Your memory is tired, it needs a nap.

[12:13] <kungfuftr> boomboom

[12:13] * shapr snickers

[12:13] <shapr> With useful content like that, who needs distractions?

[12:14] <shapr> "shapr, now with 52% more silliness!"

[12:14] * shapr sucks down some anti-silly Ritalin

[12:14] * castaway grins

[12:14] <castaway> silly++

[12:14] <kungfuftr> "shapr, now with missing kneecaps"

[12:14] * shapr laughs

[12:14] <shapr> Silly is great if you don't have a deadline.

[12:15] <castaway> indeed

[12:15] <kungfuftr> (brad pitt)++ # impressive rendition of a northern irish accent

[12:15] <shapr> kungfuftr: I'd have to see a picture of you to know whether I'd fight like a man, or run like a supremely confident man.

[12:15] <theorbtwo> IIRC, 6.2.0's deadline is in about -6 hours.

[12:15] <shapr> w00

[12:15] <kungfuftr> shapr: northern irish... run!

[12:15] <shapr> yipes!

[12:16] <kungfuftr> hehe

[12:16] * theorbtwo tries to remember what he was doing.

[12:16] <shapr> I have a good friend who's from Dublin, run with confidence is the best choice.

[12:19] <kungfuftr> shapr: man with a plan, etc.

[12:20] <castaway> something about frying fish ,)

[12:20] <shapr> Panama!

[12:20] * kungfuftr wonders if you could use a crusoe chip to run parrot on top

[12:20] * castaway grins

[12:21] <cognominal> how one would enumerate the keys of the global hash?

[12:22] <theorbtwo> keys %*ENV

[12:23] <rgs> %*ENV.keys

[12:23] <cognominal> hum, that is the environment

[12:23] <jabbot> pugs - 1760 - Add $*UID, $*EUID, $*GID, and $*EGID.  N

[12:23] <autrijus> say

[12:23] * shapr says

[12:23] <theorbtwo> Yeah, stick whatever name you want in there.

[12:23] <theorbtwo> "\n"

[12:23] <autrijus> { say $_ }.(@a, @b, @c);

[12:24] <cognominal> for example I want to list the name of all the known function

[12:24] <autrijus> this prints the first element of the first nonnull array, right?

[12:24] <theorbtwo> I'm not sure "all the known functions" are in a hash (yet).

[12:24] <cognominal> so I need a way to enumerate the keys of the global hash

[12:24] <cognominal> or that is what I think

[12:25] <kungfuftr> cognominal: you want to walk the symbol table?

[12:25] <autrijus> oh, you want the symbol table?

[12:25] <autrijus> sure, I can add it in ~1min

[12:25] <cognominal> yea

[12:25] <autrijus> just give me the reference :)

[12:25] <autrijus> %:: ?

[12:25] <cognominal> does not work in pugs

[12:25] <autrijus> is that still %:: ?

[12:25] <autrijus> sure, I'm asking in the bible.

[12:26] <theorbtwo> %MY:: -- L<S02/Names /%MY::/>

[12:26] <cognominal> I like intropectable environments 

[12:26] <kungfuftr> "And abraham said, all shall be good if you walk in the way of the symbol table"

[12:26] <theorbtwo> Also, %MyPackage::

[12:26] <theorbtwo> (Just below.)

[12:28] <kungfuftr> oh yay... smoke tests just decided to work again

[12:28] <theorbtwo> I don't see any explicit mention of %*::, but I'm guessing that'd be the really global namespace.

[12:28] <kungfuftr> lots of parse failures

[12:30] <cognominal> "relative" names are conceptually  searched in that order? %MY, %Mypackage, %::

[12:30] <autrijus> that looks sane.

[12:30] <autrijus> please submit tests :)

[12:30] <cognominal> correction:  "relative" names are conceptually  searched in that order? %MY, %Mypackage, %*:: , %::

[12:31] <cognominal> how can I ask for commit privileges?

[12:32] <autrijus> easy; give me your email addr :)

[12:33] <cognominal> [email@hidden.address]
[12:35] <rgs> cognominal, do you read chinese ?

[12:35] <cognominal> not yet

[12:36] <autrijus> cognominal: invitation sent.

[12:36] <autrijus> you will not see chinese :)

[12:36] <rgs> do you know how to say "first born child" in chinese ?

[12:36] <cognominal> thx

[12:36] <rgs> ooh, autrijus, it's translated now :)

[12:36] <autrijus> yeah :)

[12:37] <cognominal> I hope that echo, who handles my mail does not block mails from taiwan

[12:38] * castaway wonders idly if GeoIP gets taiwain & china lumped in together

[12:42] <autrijus> yeah :)

[12:42] <autrijus> oops. :)

[12:43] <castaway> it does?

[12:43] <jabbot> pugs - 1761 - * quicksort (slurp param) fixed

[12:43] <cognominal> autrijus: I don't see anything, can you try to send  the invitation to [email@hidden.address] ?

[12:44] <gaal> does anyone have a pdf or a ps of Two Dozen Short Lessons in Haskell, that interleaves the Q and A pages?

[12:46] <Limbic_Region> chip about?

[12:46] <Limbic_Region> seen chip?

[12:46] <jabbot> Limbic_Region: chip was seen on Fri Apr  8 19:06:05 2005 GMT

[12:46] <theorbtwo> castaway: Nope.

[12:46] <nothingmuch> Limbic_Region: try irc.perl.org?

[12:47] <theorbtwo> 2 days, 15 hours ago.

[12:47] <Limbic_Region> nothingmuch - I will just /msg him

[12:47] <Limbic_Region> his response to a question at the Monastery has be a bit worried

[12:47] <castaway> nope to?

[12:48] <autrijus> cognominal: sent

[12:48] <theorbtwo> no, geoip gets TW for taiwan, not CN.

[12:49] <cognominal> autrijus: thx

[12:49] <castaway> oh, good

[12:50] <castaway> oh, could have checked that myself, so it does

[12:54] <theorbtwo> Autrijus, your last mail to p6c looks like it was written with the full-width latin chars, at least on my thunderbird.

[12:54] <autrijus> it is not. maybe your big5 encoding font is borken.

[12:54] <autrijus> maybe it uses the ugly MingLiU font.

[12:57] <theorbtwo> Quite possible.

[13:03] <jabbot> pugs - 1763 - * s:perl5:g restored; writeMVal excised

[13:03] <jabbot> pugs - 1762 - * condition really works now, with fromV

[13:04] <autrijus> hangman restored.

[13:05] <autrijus> Test.pm fully unbroken.

[13:05] <theorbtwo> Yey!

[13:05] <castaway> yay!

[13:05] <shapr> yay!

[13:05] <autrijus> someone fix topic please 

[13:05] <autrijus> that's as of r1764

[13:05] <autrijus> I'm restoring primitives now.

[13:10] <kungfuftr> is the kwiki down?

[13:10] <autrijus> yeah

[13:10] <kungfuftr> ah... k

[13:13] <jabbot> pugs - 1765 - * revive Compile.Parrot

[13:13] <jabbot> pugs - 1764 - * IHandle and IRule; hangman restored. 

[13:16] <kungfuftr> autrijus: will you be attending YAPC::EU at all?

[13:17] <xern> just added a naive p5 to p6 convertor utilizing regexps only....

[13:17] <xern> it needs much enhancement

[13:17] <autrijus> kungfuftr: not sure, prolly not

[13:17] <autrijus> oh wow!

[13:17] <kungfuftr> xern: PRD goodness?

[13:18] * xern is planning to use PPI later.

[13:18] <xern> kungfuftr: ?

[13:18] <autrijus> may I rename it to p5_to_p6.pl?

[13:18] <autrijus> "p526" reads like "page 526"

[13:18] <castaway> :)

[13:18] <xern> sure.... i was worried about the naming too

[13:19] <autrijus> cool.

[13:19] <autrijus> fantastic work.

[13:19] <autrijus> now, dinner first. :) &

[13:19] <xern> but it's quite silly in some way

[13:19] <xern> i'll improvei t

[13:19] <xern> it

[13:19] <xern> kungfuftr: PRD?

[13:20] <autrijus> rgs mentioned mandrakesoft has a GPL version of OCaml perl5 parser

[13:20] <autrijus> if we can port that to Haskell

[13:20] <autrijus> then maybe src/Parser/Perl5.hs :D

[13:20] <autrijus> but, dinner really. &

[13:21] <kungfuftr> xern: parse recdescent

[13:22] <xern> kungfuftr: i considered it, but i'm wondering if PPI is much better than that.

[13:23] <kungfuftr> xern: not sure, as Alias_ 

[13:23] <kungfuftr> ask*

[13:23] <jabbot> pugs - 1767 - * rename.

[13:23] <jabbot> pugs - 1766 - A super-naive p5-to-p6 convertor

[13:24] <xern> kungfuftr: see here: http://ali.as/CPAN/PPI/index.html   i guess it's better for normal perl5 scripts without Filter::Simple interference.

[13:25] <xern> err... seems like a bad example

[13:25] <kungfuftr> =0)

[13:25] <xern> sorry, wrong url

[13:25] <kungfuftr> i'm sure that it's well doable

[13:25] <xern> ok i see

[13:26] <xern> i'll try to use PPI for p5_to_p6.pl first

[13:26] <xern> perhaps, PRD is good for regexp conversions?

[13:27] * xern is away for a while &

[13:28] <obra> OCaml perl5 parser?

[13:28] * obra blinks

[13:28] <obra> how close is it?

[13:30] <nothingmuch> damnit

[13:30] <theorbtwo> Hmm?

[13:30] <nothingmuch> the tree huggers' website only has info about a campaign they're doing

[13:30] <nothingmuch> no contact info for anything else

[13:31] * castaway hugs a tree.

[13:31] * theorbtwo hugs a tree-hugger.

[13:32] <nothingmuch> castorbway: pasta is back up

[13:32] <lightstep> which org?

[13:33] <nothingmuch> not that it was down... =(

[13:33] <nothingmuch> www.teva.org.il

[13:33] <lightstep> i asked 144 once

[13:33] <nothingmuch> i'm too lazy to get up

[13:33] <cognominal> erl-MDK-Common

[13:33] <cognominal> oops

[13:33] <nothingmuch> but there's d.co.il

[13:33] <nothingmuch> i'm also too lazy to pick up the phone to just call them

[13:33] <lightstep> try clicking ×××¦××¨×ª ×§×©×¨

[13:34] <castaway> yay, so it is!

[13:34] <nothingmuch> lightstep: only for that campaign

[13:34] * castaway hopes it stays up an hour or two til she gets home

[13:34] <nothingmuch> there's the automated answering machine's number at the bottom of the page though

[13:35] <cognominal> autrijus:  it is a perl-checker that parse not too exotic perl5. It is part of perl-MDK-common source rpm package of mandriva

[13:35] <cognominal> madriva being the new mandrakesoft name 

[13:35] * castaway nudges theorbtwo

[13:36] <theorbtwo> Huh?

[13:36] * castaway points to the /msg window

[13:39] *** stevan changes topic to: pugscode.org <<Overview Journal Logs>> | r1764: *Test.pm fully unbroken* (details to follow) | pugs.kwiki.org

[13:39] <obra> Whoa. parrot switched to svn? rockin

[13:43] <theorbtwo> When is the release?

[13:53] <castaway> WIR? :)

[14:00] <mj41> WinXP, nmake failed ... Compiling Compat           ( src/Compat.hs, src/Compat.o )

[14:00] <mj41> src/Compat.hs:86:20: Not in scope: type constructor or class `UserID'

[14:00] <mj41> src/Compat.hs:89:25: Not in scope: type constructor or class `UserID'

[14:00] <mj41> src/Compat.hs:92:21: Not in scope: type constructor or class `GroupID'

[14:00] <mj41> src/Compat.hs:95:26: Not in scope: type constructor or class `GroupID'

[14:03] <jabbot> pugs - 1769 - s:g/%ENV/%*ENV/

[14:03] <jabbot> pugs - 1768 - Added some debugging statements; Tracked

[14:06] <nothingmuch> is there a well accepted heap

[14:06] <nothingmuch> like structure

[14:06] <nothingmuch> that allows you to insert cheaply

[14:07] <nothingmuch> get the top element cheaply

[14:07] <nothingmuch> i know who it is since i have a ref to it

[14:07] <nothingmuch> but also knows dynamic scoring?

[14:07] <kungfuftr> nothingmuch: yes... a compost heap

[14:07] <nothingmuch> that is, i'd like to yank out an arbitrary element

[14:07] <nothingmuch> and then reinsert it

[14:07] <nothingmuch> was that a joke?

[14:08] <kungfuftr> um... yes

[14:08] * kungfuftr hides

[14:08] <nothingmuch> beh

[14:08] <nothingmuch> in a binary heap i could do exactly what I want

[14:08] <nothingmuch> i think

[14:08] <kungfuftr> more context required i thinks

[14:09] <nothingmuch> well, i have a queue

[14:10] <nothingmuch> i'm pushing into it

[14:10] <nothingmuch> and popping out of it

[14:10] <nothingmuch> sorry

[14:10] <nothingmuch> and shifting out of it

[14:10] <nothingmuch> i don't really care what order

[14:10] <nothingmuch> but i can gain a lot if the thing i take out of the queue is good

[14:10] <nothingmuch> because it means i can skip some things in the queue later

[14:10] <nothingmuch> so i need a queue that:

[14:11] <nothingmuch> i can pull out arbitrary things i know of

[14:11] <nothingmuch> that sorts, based on a simple comparison

[14:12] <nothingmuch> and can also be notified when an element needs to be reassessed

[14:13] <jabbot> pugs - 1771 - * change comma to period in japh

[14:13] <jabbot> pugs - 1770 - * "pop" and "shift" restored.

[14:14] <autrijus> hi mj41 

[14:14] <kungfuftr> hhhmmm... no idea off hand

[14:15] <mj41> hi autrijus

[14:15] <nothingmuch> anyway, this is an optimization for later

[14:17] <autrijus> mj41: fixed in trunk r1773

[14:17] <autrijus> please retest

[14:17] <wolverian> er, isn't the "official" JAPH supposed to have a comma?

[14:18] <autrijus> er, is it?

[14:18] <autrijus> wow it is.

[14:18] <wolverian> :)

[14:18] <autrijus> my bad.

[14:18] <mj41> autrijus: seems ok

[14:18] <theorbtwo> s/official/original/ # Who cares?

[14:20] <theorbtwo> Whoever was looking for chip, he's about #parrot now.

[14:20] <autrijus> now working thru failing tets...

[14:20] * castaway points at Limbic_Region 

[14:23] <jabbot> pugs - 1774 - * oops. wolverian points out comma is ri

[14:23] <jabbot> pugs - 1773 - * stub Win32's UID/GID for now

[14:23] <jabbot> pugs - 1772 - * env is no longer readonly

[14:24] <autrijus>     unshift av vals = liftIO $ modifyIORef av (map lazyScalar vals ++)

[14:24] * autrijus praises superconcise coding

[14:26] <theorbtwo> What's that ++ operator doing?

[14:27] <lightstep> concatenating strings

[14:28] <theorbtwo> What strings -- I thought ++ was an infix operator (unless parened).

[14:28] <lightstep> i meant lists

[14:28] <lightstep> but strings are lists of chars

[14:29] <theorbtwo> What lists -- I though ++ was an infix operator (unless parened).

[14:29] <lightstep> yes

[14:29] <lightstep> l1 ++ l2 = concat [l1, l2]

[14:29] <theorbtwo> And map lazyScalar vals ++

[14:30] <lightstep> ?

[14:31] <theorbtwo> unshift av vals = liftIO $ modifyIORef av (map lazyScalar vals ++)

[14:31] <theorbtwo> I don't think I understand that code.

[14:32] <autrijus> ("Hello " ++)

[14:32] <autrijus> is a function that takes a string and returns a string.

[14:32] <lightstep> liftIO $    <-- from here on, i specify an IO action to be exewcuted in Eval

[14:32] <theorbtwo> Oh!

[14:32] <theorbtwo> Thank you, autrijus!

[14:33] <theorbtwo> So that's equiv to...

[14:33] <theorbtwo> Er, nevermind, I'm not quite sure how to say that expanded.

[14:33] <theorbtwo> But it's that pointless... er, point-free style.

[14:34] <theorbtwo> ...and partial application of ++.

[14:35] <scw> hi, `return' in pugs always returns a list which makes examples/games/animal.p6 break :(

[14:36] <autrijus> scw: ok, fixing

[14:39] <scw> and sorry for that I cannot spend much time on pugs these several weeks.  Midterm now..

[14:40] <stevan> are tests still breaking?

[14:41] <autrijus> stevan: many are recovered

[14:41] <stevan> autrijus: ok,.. I am rebuilding now

[14:42] <stevan> autrijus: are you fixing tests or pugs? 

[14:42] <autrijus> pugs

[14:43] <stevan> autrijus: when you are done with Pugs I want to do some more test cleaning

[14:43] <stevan> I found a few duplicated tests, and I think we are ready for a good cleaning

[14:45] <autrijus> cool

[14:45] * castaway hands stevan the broom.

[14:47] <kungfuftr> yay! my wuto-smoker works again

[14:49] <ninereasons> autrijus, hi; thanks for renaming pleac to cookbook.  more immediately recognizable, IMHO

[14:50] <dvergin> so THATS what happened to pleac!!

[14:50] <dvergin> I suggest a bookmark file called examples/pleac for poor fools like me. I was going nuts trying to find it just now

[14:51] <castaway> dvergin: you should read the logs ,)

[14:51] <ninereasons> it's exhausting to read the logs. (but good advice)

[14:51] <obra> dvergin: it was only there for what, a week?

[14:52] <dvergin> Still...

[14:52] <obra> and did it exist in more than one snapshot?

[14:52] <obra> pugs is a pretty fast moving target right now. and leaving around lots of clutter is going to hurt us pretty badly

[14:52] <dvergin> Yes. I try to keep on the logs. But even grepping for pleac was a bit daunting

[14:52] * shapr agrees

[14:52] <castaway> ninereasons: sure, but its easy to grep them for mention of something you cant find :)

[14:52] <dvergin> agreed on the clutter issue

[14:52] <ninereasons> to grep i must know what to grep for

[14:53] <theorbtwo> Sadly, svn log rather sucks.

[14:53] <jabbot> pugs - 1775 - * use modifyIORef to speed up arrays

[14:53] <shapr> darcs.cgi is quite sexy, I could keep up a darcs mirror to show pretty changes.

[14:53] * dvergin mirrors the irc log as raw text. Works nice.

[14:53] <obra> shapr: example URL/

[14:53] <obra> ?

[14:54] <castaway> hmm, svn log worked fine for me this morning :)

[14:54] <shapr> look at scribble - http://www.scannedinavian.org/cgi-bin/darcs.cgi/wikiwiki/?c=browse

[14:54] <shapr> click on patches

[14:54] <dvergin> Aha. We're talking about searching the svn log. That makes more sense.

[14:55] <castaway> indeed

[14:55] <castaway> sorry, didnt mean the irc one

[14:56] <ninereasons> ah.  yes, i was talking about irc re: "exhausting"

[14:56] * dvergin tires of the mechanics sometimes

[14:56] <dvergin> Can't find the svn log. I know I've seen it.

[14:57] <castaway> type "svn log" :)

[14:57] <dvergin> <giggle>

[14:58] <shapr> obra: interesting for interactive visualization of changes?

[14:58] * obra isn't seeing anything that special

[14:58] <shapr> ok

[14:58] <obra> http://rt.openfoundry.org/Foundry/Project/Source/index.html/pugs/log/ may be useful to me

[14:58] * obra may be missing where to look

[15:03] <shapr> obra: the sexy darcs.cgi changes look like this - http://www.scannedinavian.org/cgi-bin/darcs.cgi/hackage/Packages.hs?c=annotate

[15:03] <jabbot> pugs - 1777 - Forget to s/%ENV/%*ENV/ in the test desc

[15:03] <jabbot> pugs - 1776 - Added very preliminary tests for macros.

[15:04] <shapr> And you can click on any line to jump to the patch where it was committed, etc

[15:05] <obra> oh. an annotate mode

[15:06] <ninereasons> that's pretty impressive, shapr 

[15:06] <shapr> I haven't used svn much, is there something equivalent?

[15:06] <integral> svn blame possibly

[15:07] <clkao> the deleted one is the last modification only i presume?

[15:07] <ninereasons> I like how every line is a link - the url is too long to read, is a history of changes retained on each revision, and linked?

[15:08] <shapr> clkao: yes, but you can jump to any patch to see what happened there.

[15:08] <shapr> ninereasons: yes, pretty much.

[15:09] <ninereasons> combined with wiki editing, darcs would make things go very wikiwiki!

[15:10] <shapr> Yeah, I think the rss link is cute too.

[15:13] <shapr> Is util/testgraph.pl expected to generate the linked pages at some point?

[15:13] <theorbtwo> shapr: util/categorize_tests is for that.

[15:13] <jabbot> pugs - 1779 - Added test for paren-less 'defined'.

[15:13] <jabbot> pugs - 1778 - Added some more tests for %*ENV.

[15:23] <shapr> I really like the generated pugs-smoke.html, it is way spiffy.

[15:24] <shapr> I've been wishing for something like pugs-smoke that works for a wiki. I'd like to be able to specify a regex match or something as a 'unit test' and have the cells in a table turn red or green depending on whether it works. Sort of like fit/fitnesse.

[15:25] <shapr> Where do I get Perl6-Bible for catalog_tests?

[15:25] <castaway> htp://search.cpan.org

[15:25] <castaway> oops

[15:25] <castaway> or just use your "cpan" installer

[15:26] <mj41> WinXP, r1773, 587/4256 subtests failed, 86.21% okay

[15:26] <autrijus> hangman now hangs.

[15:26] <autrijus> r1780

[15:26] <ninereasons> in r1775: my @a = 1..2; # *** Error: cannot writeRef at {ref:<Array>}

[15:26] *** theorbtwo changes topic to: pugscode.org <<Overview Journal Logs>> | r1773/winxp: 587/4256 | pugs.kwiki.org

[15:27] * Corion lights another pug. It's so hard to make good smoke from pugs ...

[15:27] <autrijus> 587/4256 failed!?

[15:27] <autrijus> oh my.

[15:28] <theorbtwo> It could be worse.  587/4256 could have *succeeded*.

[15:28] <autrijus> heh.

[15:28] <Corion> Oh. "not a lvalue: Val( VStr "Hello World" )

[15:29] <autrijus> what where eh?

[15:29] <Corion> autrijus: In t/builtins/uc.t and t/builtins/lc.t

[15:29] <shapr> that looks like it needs fromVal

[15:31] * shapr uses cpan for the first time

[15:31] <Corion> The first hit is always free!

[15:32] * shapr tokes on a lambda

[15:33] <Corion> Oy vey - the -I tests fail :)

[15:33] <jabbot> pugs - 1780 - * return() and &?CALLER_CONTINUATION() a

[15:33] <mj41> http://wiki.kn.vutbr.cz/mj/index.cgi?diff_revision=1.16&action=Diff&page_id=Pugs+on+MS+Windows&current_revision=1.17&last_revision=1.17

[15:35] <ninereasons> re: the "cannot writeRef" error (above)?  could that be the result of hs-plugins not being installed on this machine?

[15:35] <theorbtwo> Shouldn't.

[15:35] <theorbtwo> Makefile.PL now detects if hs-plugins is available or not.

[15:36] <theorbtwo> Also, the functionality that hs-plugins allows for is untested.

[15:36] <ninereasons> the build completed. but the completed pugs produces that error in r1775

[15:37] <autrijus> just a sec

[15:37] <Corion> ... maybe it's now time to rip out compatibility functionality out of P5, to make setEnv actually work on Win32 ;)))

[15:38] <autrijus> Corion: look at your ghc's docs/libraries/

[15:38] <autrijus> err doc/html/libraries/

[15:38] <autrijus> you should see System.Win32.*

[15:38] <autrijus> including a System.Win32.DLL that can let you call arbitary win32 api

[15:39] <Corion> autrijus: w00t ! That'll get me started with porting $*PID

[15:41] <dvergin> Is there a searchable archive of perl.perl6.language? Google groups search seems to work but then cannot find the hits it reports.

[15:42] <dvergin> I can't find anywhere to just download the whole mess.

[15:43] <jabbot> pugs - 1781 - Cleanup.

[15:45] <ninereasons> maybe you need to set loose a bot on www.nntp.perl.org, dvergin, to slurp up the perl.perl6.language directory ?

[15:45] <Corion> Or just send Ask an email, maybe :)

[15:45] <ninereasons> maybe :)

[15:46] <dvergin> ninereasons: thought of that. Was looking for something pre-existing

[15:46] <autrijus> %ENV.delete(<USER PATH>)

[15:46] <autrijus> woot, works.

[15:46] <dvergin> Corion: what is "Ask"?

[15:46] <theorbtwo> Ask Bjorn Hansen.

[15:46] <ninereasons> "There will be more nifty features like threading, searching and better navigation later. "

[15:46] <Corion> Ask Bjoern Hansen. That's his name. His first name is "Ask".

[15:47] <ninereasons> "Please send comments to Ask (address at the bottom of the page)"

[15:47] <ninereasons> http://www.nntp.perl.org/group/

[15:47] <theorbtwo> BjÃ¸rn, really.

[15:47] * dvergin goes off to investigate

[15:48] * Corion is too lazy :)

[15:50] <Corion> The RED ! It burns my eyes! http://datenzoo.de/pugs/win2k.html r1780

[15:51] <autrijus> it's actually not too bad :p

[15:52] *** theorbtwo changes topic to: pugscode.org <<Overview Journal Logs>> | r1773/winxp: 587/4256 smoke/win2k (occasional): http://datenzoo.de/pugs/win2k.html | pugs.kwiki.org

[15:53] *** theorbtwo changes topic to: pugscode.org <<Overview Journal Logs>> | r1773/winxp: 587/4256 smoke/win2k (occasional): http://xrl.us/fqum | pugs.kwiki.org

[15:53] <jabbot> pugs - 1782 - * delete() and exists().

[15:56] <autrijus> argh

[15:56] <autrijus> my @array = <a b c d>;

[15:56] <autrijus> is ~@array.delete(2), "c",

[15:56] <autrijus> is ~@array, "a b d",              "deletion of an array element";

[15:56] <autrijus> who wrote this thing? :)

[15:56] * shapr runs svn blame

[15:58] <shapr> jabbot has commit access??

[15:59] <autrijus> what?

[15:59] * shapr is joking

[16:00] <shapr> svn blame actually shows iblech

[16:01] <shapr> Is it good or bad code?

[16:02] <autrijus> it's mistaking an array for a hash :)

[16:02] <shapr> ah

[16:02] <autrijus> deleting things from an array should not shorten it.

[16:04] <shapr> ok, how do I install Perl6-Bible with cpan?

[16:04] <theorbtwo> perl -MCPAN -eshell

[16:04] <theorbtwo> install Perl6-Bible

[16:05] <autrijus> may need root permission

[16:05] <shapr> maybe Perl6::Bible ?

[16:05] <shapr> aha!

[16:06] <theorbtwo> Either -- Perl6-Bible is the distribution, which includes a module named Perl6::Bible

[16:06] <shapr> yay

[16:06] <iblech> autrijus: [S29] Deleted elements at the end of an Array shorten the length of the Array

[16:06] <autrijus> iblech: it's not at the end.

[16:07] <iblech> autrijus: Oh, ok, sorry -- fixing

[16:07] <autrijus> err, no

[16:07] <autrijus> I've fixed locally

[16:07] <autrijus> let me commit first

[16:07] <iblech> ok

[16:08] <iblech> (I unTODOed and unEVALed exists.t and delete.t too, btw -- already checked in)

[16:08] <autrijus> delete.t all passes. please sanity check.

[16:08] <autrijus> also, +%hash is right

[16:08] <autrijus> no need to say .keys

[16:08] <autrijus> I'm working on exists.t now

[16:10] <autrijus> need to make exists() work on infinite lists

[16:10] <autrijus> I mean arrays

[16:11] <gaal> is a release planned today? (hi all)

[16:11] <autrijus> it is.

[16:11] <autrijus> depends on whether I can get the fixes in time.

[16:11] <theorbtwo> Allo, gaal.

[16:12] <gaal> i hope i can be of use, then.

[16:12] <iblech> autrijus: [delete.t] looks sane, and I added a comment explaining the double spaces

[16:12] <autrijus> audit tests :)

[16:12] <ninereasons> having trouble installing hs-plugins on freebsd 

[16:12] <ninereasons> "/src/altdata doesn't exist"

[16:13] <autrijus> try gmake?

[16:13] <autrijus> it works on my fbsd 5.4pre

[16:13] <jabbot> pugs - 1785 - Added a comment explaining the double sp

[16:13] <jabbot> pugs - 1784 - * .delete all works.

[16:13] <jabbot> pugs - 1783 - * UnTODOed and unEVALed the tests for ex

[16:14] <ninereasons> gmake fails.  I'll investigate further; (freebsd 4.11)

[16:15] <ninereasons> ah.  it assumes chroot "/src/altdata" leading slash

[16:15] <theorbtwo> Odd...

[16:23] <jabbot> pugs - 1786 - * exists.t now passes.

[16:32] *** andras_ is now known as andras

[16:32] <kcwu> gugod: how about let jabbot tell 10 more characters of log message?

[16:34] <autrijus> and how about let it not reverse?

[16:38] <cognominal> hum, I don't quite grok svk yet

[16:39] <cognominal>  svk  push -C /home/stef/svk/pugs/  # prints the modified files

[16:39] <cognominal> svk push  /home/stef/svk/pugs #  says "Empty merge"

[16:41] <stevan> autrijus: am I doing something wrong? I am still getting "cannot writeRef Val (VRef <Scalar>)" on all the tests

[16:41] <stevan> (BTW - I am doing 'make optimized')

[16:43] <ninereasons> 'make optimized' maybe that's the issue (same here)

[16:43] * stevan tries plain 'make' 

[16:44] <cognominal> with the -l option it did work!

[16:44] <stevan> -l ?

[16:45] <iblech> FYI, pugs compiled with plain "make" works

[16:45] <ninereasons> thanks iblech. I'll stop wrestling with plugins for the present, then.

[16:46] <stevan> its alive!!!!

[16:46] <theorbtwo> Make optimized causes -dcore-lint to barf, meaning that there are probably bugs lurking there.

[16:46] <iblech> (But a plain make <-> make optimized should make no difference -- Unless GHC has bugs?!)

[16:47] <cognominal> stevan: I had to do a "svk push -l" to get my changes commited

[16:47] <autrijus> hrmph hrmph

[16:47] <autrijus> which means maybe I should try to kill .hs-boot

[16:47] *** _metaperl is now known as metaperl

[16:47] <autrijus> because that seems to be triggering all sorts of ghc bugs

[16:48] <ninereasons> same bug, partially squished, as yesterday's 'cor-lint' bug?

[16:48] <autrijus> oh well. so much for cutting edge treatment of mutual recursive modules

[16:51] <ninereasons> autrijus, will a negative index work no an infinite array, eventually? 

[16:51] <ninereasons> or is that crazy talk?

[16:51] <autrijus> ninereasons: I very much doubt so.

[16:52] <stevan> ninereasons: that *is* crazy talk

[16:52] <ninereasons> :)

[16:52] <iblech> I remember this question on p6l and Larry saying something like "I suppose yes"

[16:52] *** Boogie is now known as boogie

[16:52] <ninereasons> I have to train myself not to think "Inf eq end-unknown"

[16:53] <iblech> i.e. my @array = (1,2, 3..Inf, 10,11); say @array[-1]; # ==> 11

[16:53] <stevan> given enough time and memory,.. anything is possible :)

[16:53] <jabbot> pugs - 1788 - * keys_values.t passes.

[16:53] <jabbot> pugs - 1787 -  r14@stefp:  stef | 2005-04-11 17:46:23 

[16:53] <stevan> autrijus: so the current task is test auditing right?

[16:55] <autrijus> stevan: yes.

[16:56] <clkao> sb goto 00:37

[16:57] * stevan looks for some good test auditing music ....

[16:57] <stevan> t/oo/proxy has some unexpected succeeds :)

[16:58] <iblech> BTW, autrijus, would it be hard to implement next() inside of for loops?

[16:58] <autrijus> iblech: probably not hard.

[16:58] <autrijus> it's just my mind's in IType right now :)

[16:58] <iblech> :) np

[16:58] <autrijus> it's basically just creating a lexical next()

[16:58] <autrijus> that invokes the CC

[16:59] <autrijus> that's code for return() in Monads.hs

[17:02] <theorbtwo> Shouldn't it be more like ret() and less like return()?

[17:02] <autrijus> what is this ret()?

[17:03] <jabbot> pugs - 1789 - unTODOed tests which pass.

[17:05] <cognominal> pugs> print keys %ENV

[17:05] <cognominal> Segmentation fault

[17:05] <theorbtwo> Hmm, can't find it now.

[17:05] <iblech> plain '%*ENV;' segfaults in the interactive pugs here, too

[17:05] <iblech> but it works in "pugs -e '...'" or in test scripts

[17:06] <autrijus> same here.

[17:06] <autrijus> maybe readline? maybe something else?

[17:06] <ninereasons> gah - segfault and now pugs-interactive is hung

[17:07] <iblech> (FYI, r1790 -- unTODOed all tests which pass)

[17:08] <cognominal> iblech: same here

[17:13] <kcwu> same here

[17:13] <jabbot> pugs - 1791 - Ported a Perl 5 solution to QoTW regular

[17:13] <jabbot> pugs - 1790 - unTODOed two other tests which pass.

[17:24] <stevan> ninereasons: do you mind if I remove fail_is() from Test.pm? 

[17:25] <stevan> I think test functions like that are confusing, and ok(not($a == $b)) or something similar is easier to read

[17:26] <stevan> ninereasons: even better,.. I will rename it to isnt() 

[17:26] <ninereasons> certainly

[17:27] <stevan> ninereasons: I just dont like the word fail, becuase it implies the test will fail (like the fail() function does),.. but that is not what you are actually after

[17:27] <ninereasons> i never liked it much, stevan; and used it for lack of imagination :)

[17:28] <ninereasons> "fail if match" is what I wanted

[17:28] <stevan> ninereasons: I changed it to isnt() and adding a unlike(), and I stole them from Test::More so no imagination here :)

[17:29] <autrijus> hew, cleaned up builtins/keys_and_values/

[17:29] <autrijus> test driven++

[17:29] * autrijus looks for a uptodate smoke chart

[17:30] <ninereasons> you guys are awesome fast.  

[17:30] <autrijus> stevan: can you sanitize builtins/io/?

[17:30] <autrijus> if there's no too appalling failures there, I'd like you to unTODO/TODO them before release

[17:30] <autrijus> I don't think 6.2.0 can deal with them

[17:31] * ninereasons retires to the couch

[17:31] <stevan> autrijus: sure

[17:31] <gaal> autrijus, util/run-smoke.pl?

[17:31] <autrijus> oh, there's that?

[17:31] <autrijus> thanks

[17:31] <autrijus> I'm so behind on util/ technologies

[17:31] <castaway> :)

[17:32] <gaal> nothingmuch has somthing he's using, too, in an svn up ; get_a_smoke_test loop.

[17:32] <gaal> but it's proprietary technology and closed source! :)

[17:32] * castaway notes more things unexpectedly suceeding

[17:33] <jabbot> pugs - 1794 - * cleanup redundant eval

[17:33] <jabbot> pugs - 1793 - * pick.t passes.

[17:33] <jabbot> pugs - 1792 - * pairs.t passes.

[17:33] <autrijus> must be doing something right then

[17:34] <castaway> indeed (this is one from 2 hrs ago)

[17:34] <gaal> hmm, i should talk with kff about removign the dep on Shell since it isn't being used consistently there anyway

[17:35] <stevan> autrijus: it seems that isa_ok() is broken

[17:35] <stevan> (it was a hack anyway)

[17:35] <autrijus> broken how?

[17:35] <iblech> stevan and others: Just as a remainder, you don't have to TODO failing tests in the test files, but you can simply edit t/force_todo

[17:35] <castaway> Corion ?

[17:35] <gaal> stevan: can i help with anything?

[17:35] <stevan> iblech: yes, actually can you help getting started on that,. I am not sure I get it

[17:35] <autrijus> right. but don't blindly force_todo

[17:36] <autrijus> first check for sanity :)

[17:36] <iblech> stevan: Of course

[17:36] <castaway> oh, iblech, you speak german too, right?

[17:36] <autrijus> iblech: so, please start from builtins/io/

[17:36] <castaway> Would "telenummer" mean "telefonnummer" to you, or something else?

[17:36] <stevan> autrijus: isa_ok() just checked the ref(), which is returning 'Scalar::Const' at the moment

[17:37] <iblech> castaway: Yes. And yes, it'd mean "telefonnummer" for me

[17:37] <iblech> autrijus: Ok

[17:37] <castaway> ta.. (silly finanzamt)

[17:37] <gaal> i'm getting "Val (VRef <Scalar>)" crashes after each test on msys

[17:38] <gaal> .cannot writeRef

[17:38] <ninereasons> force_todo won't work on fatal parsefails, though, will it ?  or is that just what it's for?

[17:38] <autrijus> stevan: please use index()

[17:38] <stevan> autrijus: index() where?

[17:38] <autrijus> Scalar::Const isa Scalar

[17:38] <ninereasons> gall, don't "make optimized"

[17:38] <autrijus> because index() test holds true

[17:39] <autrijus> hack hack ;)

[17:39] <ninereasons> gaa, don't "make optimized" (sorry)

[17:39] <stevan> autrijus: It returns that for hashes too :)

[17:39] <autrijus> aww.

[17:39] <autrijus> oh well. forget I said that.

[17:39] <stevan> and arrays and everything

[17:39] <autrijus> clearly we need a true "isa" primitive.

[17:39] <stevan> either I can hack it for a bit or just make it TODO all the tests for now

[17:39] <ninereasons> i give up on getting your nick right, gaal :(

[17:39] <autrijus> stevan: I'll hack on a isa. sec

[17:40] <stevan> autrijus: even better :)

[17:40] <gaal> ah, thanks 9r (don't worry about it, i keep mistyping it too)

[17:40] <gaal> (and it's my name, not just my nick :)

[17:41] <ninereasons> even worse for me :(

[17:41] <theorbtwo> BTW, how do you pronounce it?

[17:41] <gaal> hard g, flat ah

[17:42] <shapr> This is niner niner zelda comin atcha

[17:43] <autrijus> oh btw, stevan 

[17:43] <stevan> autrijus: yes...

[17:43] <gaal> brb, tea+snack dinner

[17:43] <ingy> hola

[17:43] <ninereasons> don't stop bouncing, shapr :)

[17:44] <autrijus> nvm

[17:44] <autrijus> I was confused about ref().

[17:44] <stevan> shapr: you got a smokey on yur tail, back atcha!

[17:44] <shapr> yay, citizens band!

[17:45] <ingy> shapr: what's your 10-20 good buddy?

[17:45] <shapr> I used to live in "circle city"

[17:45] <stevan> I just used to watch "Smokey and the Bandit" when I was a kid :)

[17:45] <castaway> oooh.. I love that film (those films)

[17:46] <stevan> classics of american cinema :P

[17:46] <shapr> How the heck do I describe my 10-20? Is there a CB name for Sweden?

[17:47] * castaway advises nothingmuch's SEE to brace for impact ,)

[17:47] <stevan> shapr: "up in the great white north where the girls are pretty, but your freeze your,... over and out"

[17:47] <shapr> haha

[17:49] <gcom> hey all...i wrote an example assuming that $string.chars will return a list in list context, but i can't find anything that verifies this

[17:50] <gcom> seems like a nicer alternative to unpack or split, if it does indeed work

[17:51] <ninereasons> I'm not sure that it should work that way, gcom 

[17:52] <gcom> the only documentation for char seems to be that it is one of the replacements for a length concept

[17:52] <gcom> *chars

[17:52] <autrijus> gcom: it's not specced like that, although I can see it's interesting.

[17:52] <autrijus> gcom: p6l! p6l!

[17:53] <gcom> sorry, wrong forum :)

[17:53] <autrijus> $ ./pugs -MTest -e "isa_ok(%ENV, 'Hash')"

[17:53] <autrijus> ok 1 - The object is-a 'Hash'

[17:53] <autrijus> $ ./pugs -MTest -e "isa_ok(%ENV, 'Scalar')"

[17:53] <autrijus> not ok 1 - The object is-a 'Scalar'

[17:53] <autrijus> #   Failed test (-e at line 3, column 1)

[17:53] <autrijus> #   Expected: Scalar

[17:53] <autrijus> #        Got: Hash::Env

[17:53] <autrijus> yay!

[17:53] <jabbot> pugs - 1797 - TODOed all failing IO tests.

[17:53] <autrijus> honest-to-god .isa

[17:53] <jabbot> pugs - 1796 - * refactor lc/uc etc into op1Str and op1

[17:53] <jabbot> pugs - 1795 - Added comment to t/force_todo.

[17:53] <iblech> I TODOed all failing IO tests (r1797). Because of uncatchable dies in io_in_[while|for]_loops.t I had to manually skip() those tests.

[17:53] <stevan> autrijus++ 

[17:54] <autrijus> landed as r1798

[17:54] <autrijus> enjoy

[17:54] <stevan> iblech: thats good

[17:54] <stevan> autrijus: thanks :)

[17:56] <kungfuftr> ah... home and fed

[17:56] <autrijus> stevan: you may wish to update ChangeLog some :)

[17:56] <stevan> autrijus: I will

[17:56] <autrijus> danke

[17:56] <autrijus> and I think I won't stay up and push 6.2.0 out when I'm dizzy

[17:56] <autrijus> I think do it right after I wake up is better idea

[17:56] <crysflame> oo, 6.2.0

[17:57] <crysflame> :)

[17:57] <autrijus> although I think the codebase is finally in okay shape now

[17:57] <autrijus> I need to fix t/data_types/ now

[18:00] <gaal> t/statements/gather....ok 3/5pugs.exe: Prelude.(!!): negative index

[18:00] <autrijus> yup, saw that

[18:01] <kungfuftr> pid still broken too?

[18:02] <autrijus> worksforme, but I'm not on win32

[18:02] <kungfuftr> i'm on freebsd 4.11

[18:02] <autrijus> weird, worksforme.

[18:02] <autrijus> $ ./pugs -e '$PID.say'

[18:02] <autrijus> 67834

[18:02] <iblech> works for me, too (Linux, GHC 6.4)

[18:03] <stevan> me too

[18:03] <kungfuftr> oh... works now

[18:03] <kungfuftr> must be the churn

[18:03] <jabbot> pugs - 1801 - changed fail_is() usage to isnt()

[18:03] <jabbot> pugs - 1800 - added todo_isnt/unlike(); added tests fo

[18:03] <jabbot> pugs - 1799 - changed fail_is() to isnt() and added un

[18:03] <jabbot> pugs - 1798 - * .isa() primitive.

[18:04] <stevan> ok,.. so how are we doing here,.. what tests should I work on?

[18:04] <ninereasons>  my @a = 'a'..'d';

[18:05] <ninereasons>  @a[1,2] = @a[2,1]

[18:05] <ninereasons>  @a[1..2] = @a[2,1]

[18:05] <gaal> stevan, what's fail_is? (is it obsoleted?)

[18:05] <ninereasons> ('a', 'c', ('b', 'c'), 'd')

[18:05] <ninereasons> ?

[18:06] <ninereasons> fail_is is now "isnt"

[18:07] <gaal> ahh, thanks.

[18:07] <autrijus> ninereasons: fixing that

[18:08] <autrijus> fixed. you have a test for that?

[18:08] <ninereasons> I was trying to think of a sensible to write it

[18:08] <ninereasons> my example is silly

[18:09] <autrijus> sigh, Exp should be GADTs, that way we can avoid that sort of error.

[18:09] <autrijus> but not 6.2.0.

[18:09] <Corion_> castaway: Back

[18:09] <ninereasons> maybe it's something noone would ever do anyway

[18:10] <autrijus> I'm sure someone will.

[18:10] <autrijus> I will ;)

[18:11] <ninereasons> so would I, perhaps, but for exactly opposite reasons that you would

[18:11] <ninereasons> (igorance ! eq foo)

[18:12] <autrijus> anyway, the fix is in.

[18:13] <ninereasons> you rock, autrijus 

[18:14] <autrijus> :)

[18:16] <ninereasons> kungfuftr, have you succeeded in getting hs-plugins to install?

[18:16] <ninereasons> on freebsd 4.11 ?

[18:23] <jabbot> pugs - 1804 - * ninereasons spotted that `@a[1..2]` im

[18:23] <jabbot> pugs - 1803 - TODOed statements/* and rules/rules_refs

[18:23] <jabbot> pugs - 1802 - * fix some golf syntax

[18:23] <ninereasons> hmm.  the tests now completely exhaust my knowledge of perl6 (and some).

[18:24] <ninereasons> back to the docs for me, I think.

[18:26] <autrijus> nice

[18:26] <Corion_> pugs smoke chart at http://datenzoo.de/pugs/win2k.html (of r 1803)

[18:27] *** Corion_ is now known as Corion

[18:27] <autrijus> infinite slices now work again

[18:28] <ninereasons> $infinite_slices++ !

[18:28] *** Corion is now known as Corion_

[18:28] <autrijus> that should make the golfs happy.

[18:31] <gaal> http://forum2.org/gaal/pugs/tests_winxp.html - r1794 - winxp/msys

[18:31] <gaal> had to inline the css though :(

[18:33] <jabbot> pugs - 1808 - * add enterRValue

[18:33] <jabbot> pugs - 1807 - * constant arrays no longer out-of-bound

[18:33] <jabbot> pugs - 1806 - * =<> works again

[18:33] <jabbot> pugs - 1805 - * infinite slices now work.

[18:33] <autrijus> it's interesting comparing 1794 to 1803 :)

[18:35] <gaal> we run on cygwin?

[18:35] <gaal> the tests should s/cygwin/msys/ afaict

[18:37] <stevan> so are we not just TODOing test? (in the force_todo file)

[18:41] <stevan> autrijus: array refs seem to show up as Scalar with .isa(),.. is that correct?

[18:41] <autrijus> no. fixing that

[18:41] <stevan> autrijus: ok

[18:41] <autrijus> as we speak, even

[18:42] <stevan> t/builtins/list/reverse.t has that error a number of times

[18:42] <stevan> (in case your looking for a good test case)

[18:42] <gaal> t/subroutines/subroutine.t infinitlooping again?

[18:43] <gaal> affter test 13: use @_ in sub

[18:43] <jabbot> pugs - 1811 - force-TODO-ind t/builtins/list/sort.t & 

[18:43] <jabbot> pugs - 1810 - * for(){} should not be parsed as hash d

[18:43] <jabbot> pugs - 1809 - forcing TODO on t/builtins/list/join.t

[18:45] <ninereasons> this rate of revision is dizzying. it's like a wikpedia edit war without the acrimony

[18:45] <PerlJam> Is there some reason jabbot reports them in reverse order?

[18:47] <stevan> PerlJam: something to do with the the rotation of the earth and how fast development is

[18:47] <PerlJam> stevan++ heh

[18:47] <stevan> kinda like in the first Superman when Lois' car fell in the earthquake

[18:47] <ninereasons> shouldn't they be in the right order in australia, then?

[18:48] <stevan> ninereasons: (shhh dont spoil the illusion)

[18:48] <ninereasons> stevan, i was hoping an australian would confirm !

[18:49] <autrijus> stevan: that's fixed. I fixed ref.t too

[18:50] <autrijus> as of r1812.

[18:51] <autrijus> pugs> my $a = 123; $a.isa('Int')

[18:51] <autrijus> bool::true

[18:51] <autrijus> pugs> my $a = 123; $a.isa('StrStr')

[18:51] <autrijus> bool::false

[18:51] <autrijus> err, s/StrStr/Str/

[18:51] <autrijus> ok. I need to 1)shower 2)journal 3)sleep. :)

[18:52] <ninereasons> *applause*

[18:52] <autrijus> meanwhile, please keep the tests that are regressions from before-itype time (i.e. those that really shouldn't fail) as fails

[18:52] <autrijus> and force_todo nonregressions

[18:52] <autrijus> and update ChangeLog

[18:52] <autrijus> so I can fix the regressions and push out 6.2.0 when I wake up

[18:53] <autrijus> much thanks =)

[18:53] <stevan> autrijus: will do

[18:53] <autrijus> #perl6++

[18:53] <castaway> nm Corion, already got it, ta

[18:53] <autrijus> thanks folks :D

[18:53] *** Corion_ is now known as Corion

[18:53] <jabbot> pugs - 1812 - * isa_ok works... ref() now works again

[18:53] <castaway> night autrijus!

[18:54] <autrijus> what, 70 commits today.

[18:54] <ninereasons> 103 occupants (counting bots and zombies)  build it and they will come

[18:54] <stevan> autrijus: that depends on when you consider "today" to end :)

[18:56] <elmex> i had a splendid idea.. why not let pugs parse java instead of perl6? ;)

[18:56] <Corion> elmex: Feel free to write a Java parser+interpreter in Perl6 or Haskell

[18:57] <Corion> (plus runtime :) )

[18:57] <Corion> Java itself shouldn't be too hard, at least much easier than Perl

[18:59] <elmex> java sucks (sorry for the harsh word)

[19:00] <Corion> brb (rebooting firefox)

[19:02] <ninereasons> what is that, Corion?  [Firefox 0.10.1/20041001] ?

[19:03] <Corion> ninereasons: Chat!Zilla - JavaScript irc client written in/for FireFox

[19:03] <ninereasons>  [Firefox 1.0.2/20050317]

[19:03] <Corion> ... has nice rendering, works with UTF8, and I could actually modify the UI, if I wanted to

[19:03] <Corion> See http://www.hacksrus.com/~ginda/chatzilla/

[19:04] <ninereasons> mine is Chatzilla 0.9.67 [Firefox 1.0.2/20050317] (not on it now, though)

[19:04] <ninereasons> it was the firefox version # that caught my eye

[19:05] <Corion> ninereasons: Eh - dunno - I didn't play with any of the FF version settings. I think I have 1.0.1 or whatever.

[19:05] <Corion> ... maybe that's a bug or something.

[19:05] <ninereasons> hm

[19:05] <autrijus> hrm. {} is a closure.

[19:05] <Corion> Yah. I'm using Mozilla Firefox 1.0pre

[19:06] <autrijus> I want it to be a hash. I see little use for it as a closure.

[19:06] <Corion> autrijus: I think "{}" is/could be an empty hash, while "{ }" could be a closure.

[19:06] <autrijus> awwww

[19:06] <Corion> Like &noop = { };

[19:06] <Corion> (so there is a use for empty closures)

[19:06] <Corion> welcome to Python land, where Whitespace matters ! :)

[19:07] <Corion> (but the time when whitespace didn't matter in Perl is long gone anyway)

[19:07] <gaal> whitespace already does

[19:07] <Corion> autrijus: Or disambiguate by +{}

[19:07] <gaal> yeah :/

[19:07] <ninereasons> autrijus, should we tell your mommy that you're not in bed? 

[19:07] <Corion> (like map does in P5)

[19:07] <Corion> ninereasons: He's in the shower.

[19:07] <ninereasons> hah, Corion :)

[19:07] <autrijus> yup.

[19:07] <stevan> autrijus: BTW - $handle.isa(Handle) fails but ref($handle) returns 'Handle'

[19:08] <Corion> We-ird. Now, t/data_types/array_ref.t seems to hang and eat 100% CPU

[19:08] <Corion> at r1812

[19:08] <Corion> (win2k)

[19:08] <autrijus> I see. that. skip it for now?

[19:08] <autrijus> mark it as a fail

[19:09] <stevan> (do you mean me or Corion)

[19:09] <stevan> or both

[19:09] <Corion> autrijus: Will do so (marking it as "skip" ? or into the untodo list ?)

[19:09] <Corion> "untodo" won't help much with an endless loop :)

[19:10] <autrijus> skip_fail or something

[19:10] <gaal> the harness should handle that kind of thing, by rights

[19:10] <Corion> autrijus: Will do so, once my make test finishes

[19:10] <gaal> my mind stopped working about thirty minutes ago or i'd do it

[19:10] <autrijus> stevan: fixed

[19:10] <autrijus> * 'Handle' is spelled 'IO' in S06.

[19:10] <Corion> gaal: That requires alarm() or something like that. Which is hard to do.

[19:10] <autrijus> r1813

[19:11] <gaal> Corion, not reallt, becasue the harness is still p5

[19:11] <stevan> svn up; make; :)

[19:11] <Corion> gaal: Still requires alarm()

[19:11] <gaal> so?

[19:12] <Corion> gaal: Win32 native build doesn't have alarm() :)

[19:12] <gaal> ah.

[19:13] <gaal> ultimately the test is run with open |. how does that work in win32?

[19:13] <jabbot> pugs - 1813 - * 'Handle' is spelled 'IO' in S06.

[19:13] <Corion> gaal: Win32 has open2 and open3

[19:14] <gaal> they CreateProcess?

[19:14] <Corion> gaal: Hmmm. alarm() is half-working on Win32 native Perl, BTW

[19:15] <Corion> gaal: Yes - they don't rely on the shell, which doesn't really do |foo, and CreateProcess with the correct handles.

[19:15] <gaal> t/subroutines/subroutine.t still seems to get stuck on msys, perl 1812

[19:16] <gaal> well, threads work ok on win32, don't they? it means branching code and ickiness, but it can be done

[19:16] <Corion> gaal: Sure ;)

[19:16] <Corion> Where/how do I install additional Haskell libs ? I'd like to install the fabled System.Win32.DLL, but everything I find are the "fptools" ...

[19:16] <gaal> quesion is whether we can assume perl itself has threading enabled

[19:17] <gaal> on that platform anyway

[19:17] <Corion> I get three unexpected successes - should I skip those or promote those?

[19:17] <stevan> autrijus: how many hours till you wake up? (So I know when to get the changelog done by)

[19:18] <autrijus> 10 hours

[19:18] <autrijus> or 9

[19:19] <stevan> Corion: where were the successes?

[19:20] <Corion> stevan: Dunno - I think http://datenzoo.de/pugs/win2k.html showed them in undef.t somewhere

[19:21] <stevan> what color are they?

[19:22] <Corion> dark red

[19:22] <Corion> #15 in undef.t for example

[19:22] <stevan> I expect the "non-existent hash subscript" one does work now

[19:22] <stevan> so that can be promoted

[19:23] <stevan> the FIXME parsefail right beloe that (line 63) might work now too

[19:23] <Corion> go go go ! :)

[19:23] <jabbot> pugs - 1816 - Fixed accidential overeager commit

[19:23] <jabbot> pugs - 1815 - skipping 2 tests in array_ref.t for rele

[19:23] <jabbot> pugs - 1814 - Handle is now spelt IO in the tests too;

[19:23] <Corion> I'm making a new smoke chart

[19:23] <gaal> yay - can't wait for when the last block in that file gets to be uncommented :)

[19:24] <Corion> ... and I should get a second checkout for development, so my bogus modified versions don't get committed accidentially :(

[19:24] <stevan> Corion: I am grabbing some lunch while I 'make test'

[19:24] <stevan> gaal: AUTOLOAD,.. YUK!!!! :P

[19:24] <gaal> it's *refined* AUTOLOAD :)

[19:24] <stevan> although this is better than perl5 AUTOLOAD 

[19:25] <stevan> gaal: OT - is what I read in the backlog true,.. your going to jail soon?

[19:25] <gaal> likely, yes.

[19:25] <Corion> Hah. I just had a brilliant idea - I can wipe my whole source tree except the root .svn directory, so I get a clean checkout without having to re-setup the password/login/location

[19:25] <stevan> because your refuse to do the military service in the occupied territories right?

[19:26] <Corion> gaal: That sucks indeed - but last I knew, you didn't even have public/civil service in .il ...

[19:26] <gaal> yes, that's true. but it's not like i'm dead set on jail :) if they offer me another task, i'll take it

[19:26] <autrijus> oh wow. I did it. someone write a test for it?

[19:26] <Corion> gaal: But props to you for not working in the occupied areas!

[19:26] <autrijus> pugs> my $a = { 1 => 2 }; $a.ref

[19:26] <autrijus> Hash

[19:27] <gaal> autrijus, what, autoload? yes, bottom of undef.t, ages ago

[19:27] <stevan> gaal++ # for standing up to The Man!

[19:27] <autrijus> gaal: no, hash composition

[19:27] <autrijus> aka anonhash.

[19:27] <stevan> autrijus: I think we might have a test for that somewhere

[19:27] <stevan> if not we will write it :)

[19:27] <autrijus> good. then watch out for unexpected successes :)

[19:28] <gaal> Corion, there's compulsory military service in Israel, 18-36 months

[19:28] <gaal> (36 for 18-yr-o males)

[19:28] * stevan has to grab lunch for real before this coffee rots a hole in his gut

[19:29] <Corion> gaal: In Germany too (but shorter), but I didn't know that you had an option out of the "military" part of the service.

[19:29] <ninereasons> autrijus, that worked before ITypes  - nice to have it back!

[19:29] <gaal> oh, no, in the normal case you don't.

[19:29] <Corion> All fails will be fixed by modifying the basic force_todo file, right?

[19:29] <autrijus> ninereasons: really? somehow I don't remember that

[19:29] <Corion> gaal: Oh ?

[19:30] <ninereasons> I didn't write a test for it, but you can see it in the irc log from a couple of days ago

[19:30] <autrijus> { 1 => 2 }.{1} # I don't thinks there's code for it

[19:30] <gaal> i'm way after my regular service. like most israelis i get called to do reserve duty every now and then

[19:30] <autrijus> really. interesting

[19:30] * gaal is old

[19:30] <Corion> gaal: Ewww. That's ugly !

[19:31] <gaal> autrijus, is that supposed to eval to 2?

[19:31] <autrijus> yes.

[19:31] <Corion> gaal: "luckily", the only thing They can draft me for is sweeping minefields ...

[19:31] <autrijus> it now does

[19:31] <gaal> they can draft me for sweeping the floor if they want :)

[19:32] <ninereasons> my %hash = map -> @a { @a[0] => @a[1..Inf] } @z; 

[19:32] <gaal> wow, cool

[19:32] <ninereasons> worked (but maybe it shouldn' t have) a few days ago

[19:33] <gaal> ...and when i said "..offer me another task", i meant military duty that does not pertain to the OT

[19:33] <ninereasons> '%hash.perl' in that case was '((\'factor\' => (\'a\', \'b\', \'c\')), (\'timers\' => (1, 2, 3)))' 

[19:33] <ninereasons> from my @z = (['timers',1..3],['factor','a'.. 'c']) ;

[19:34] <jabbot> pugs - 1817 - * anonymous hash literals.

[19:34] <autrijus> ninereasons: that's a different matter

[19:35] <autrijus> {} wasn't acting as anonsub

[19:35] <autrijus> I mean anonhash

[19:35] <autrijus> it's acting as a simple closure 

[19:35] <autrijus> in a pre-IType pugs:

[19:35] <autrijus> pugs> {1 => 2}.{1}

[19:35] <autrijus> (pugs: cannot cast into [VPair]: VSub (Sub {isMulti 

[19:35] <autrijus> that's what would have happened

[19:36] <ninereasons> i'm not sure that what I posted is correct perl6, anyway.

[19:36] <Corion> Ah - BTW - I've long been wanting the "-g" and "-m" options in Perl. "-g" is mostly -e "while ( $_ = =<> ) { say if (" ... -e "); };" and -m is -e "while ( $_ = =<> ) { say (" ... -e "); };". Does anybody use the -m switch at all?

[19:36] <autrijus> I think it is.

[19:36] <Corion> (-g for "grep" and -m for "map", obviously)

[19:37] <Khisanth> g and m would make things very confusing

[19:37] <Corion> and -g '$ARGV:' should become 'say "$ARGV:$_"'

[19:37] <Corion> Khisanth: In what sense confusing?

[19:37] <autrijus> Corion: I have threatened for a couple years now to re-upload pmake to CPAN as "ake.pm".

[19:38] <autrijus> perl -make test

[19:38] <autrijus> perl -make install

[19:38] <Corion> autrijus: :-)) Just like Tye McQueens ouse.pm , which you invoke as "perl -Mouse"

[19:38] <Corion> autrijus: :))

[19:38] <autrijus> but in this case, I use small -m :)

[19:38] <Khisanth> Corion: nvm, misunderstood what you were refering to

[19:38] <Corion> autrijus: I see... You could live with "-Make", but "-make" is nicer... I could settle for -G , but I'd prefer -m for "map"...

[19:39] <autrijus> in any case, that's p6l domain :)

[19:39] <Corion> ... and having (Unicode!) grep and map is nice IMO.

[19:39] <autrijus> (you can of course implement it now if you'd like)

[19:39] <Corion> autrijus: I had originally planned that as an (semi serious) April Fools joke post to p5p :)

[19:39] <Khisanth> autrijus: perl -Make would still work in that case wouldn't it?

[19:39] <gaal> autrijus, it doesn't work for me? ./pugs.exe -e 'say {1,2}.{1}'

[19:39] <gaal> <SubBlock(<anon>)>

[19:39] <gaal> otoh, this does work: ./pugs.exe -e 'say [1,2].[1]'   ==> 2

[19:39] <autrijus> Khisanth: yes, but wouldn't be as nice.

[19:40] <Corion> autrijus: Yeah - I think I'll implement it, and see if it'll be taken out or not. And patch it in again! SVN commit fight! :)

[19:40] <autrijus> gaal: r1817?

[19:40] <autrijus> heh. I'm glad we don't have revert wars

[19:41] <Corion> autrijus: Well - the community is still fresh, and quick yelling on irc is better than prolonged flamewars on p6*

[19:41] <gaal> yes

[19:42] <Corion> ... and people here get into contact easier, and maybe even have met.

[19:42] <Corion> (mostly due to Autrijus World Tour 2004/2005)

[19:42] * shapr buys tickets for the 2006 tour

[19:43] <gaal> Corion: you could write a test that, when it fails, patches the tree and svn ups.

[19:43] <gaal> incidentally {1,2}.{1}.say prints nothing

[19:43] <Corion> gaal: I was considering writing a bot that watches the openfoundry RSS :)

[19:43] * Corion does automation for a living.

[19:43] <gaal> well, prints a newline

[19:44] <Corion> Hmmm. Maybe we should make the setEnv less fatal, so it can be caught with a try{} block (as before). Is it too late to make Pugs / Haskell patches?

[19:45] <autrijus> it is never too late.

[19:45] <autrijus> there is no code freeze in pugs development. :)

[19:45] <elmex> not?

[19:45] <Corion> autrijus: Yeah, but I don't want to make an unclean patch when everybody is in preflight :)

[19:45] <gaal> yay! hanzi finally started appearing in my terminal!

[19:45] <autrijus> Corion: go ahead and commit it in.

[19:45] <elmex> i thought we could freeze now and go on implementing perl6 in perl6 ;) *G*

[19:45] <autrijus> we have a VCS.

[19:45] <Corion> autrijus: :)

[19:46] <autrijus> elmex: we can't. maybe you can. pugs is certainly turing complete ;)

[19:46] <autrijus> so go ahead if you'd like.

[19:46] <elmex> autrijus: ;)

[19:46] <elmex> autrijus: i'm not a compiler specialist

[19:47] <elmex> even thought i wrote a topdown parser generator some weeks ago 

[19:47] <shapr> me neither!

[19:47] <Corion> Oh. And in the future, I'd like an introspective list of compilers, if that's possible/sensible to want, so I can reduce the code in my compiler test :)

[19:47] <elmex> (in perl)

[19:47] <autrijus> journal up. my fingers are tired. I should probably sleep. :)

[19:47] * autrijus waves &

[19:48] <shapr> g'night autrijus

[19:55] * gaal zzz also. bye!

[19:56] <ninereasons> night gaal (<- note the correct spelling)

[19:57] <gaal> thanks, ninereasons :)

[20:24] <mj41> pugs -e "say @ARGS[0]" args_no_argv

[20:24] <mj41> pugs -e "return 1;" 

[20:24] <mj41> cannot return() outside a subroutine 

[20:24] <mj41> Val (VList [VInt 1])

[20:24] <mj41> Is this ok?

[20:26] <ninereasons>  pugs -e "my &a = sub {return 1}; say a" 

[20:27] <mj41> my $conf = require 'conf.p6';

[20:27] <mj41> # conf.p6

[20:27] <mj41> return {

[20:27] <mj41>  path => '.',

[20:27] <mj41> };

[20:28] <mj41> { path => '.', }; # is ok

[20:34] <ninereasons> r1817; oops - build now broken unless hs-plugins are installed

[20:37] <Corion> back from phone :)

[20:37] <ninereasons> does anyone else have freebsd 4.x ?  I've failed to figure out this hs-plugins install problem.

[20:37] <Corion> ninereasons: worksforme

[20:37] <theorbtwo> Hm, and cognominal broke the AUTHORS convention.

[20:37] <Corion> (Win2k, no plugins that I know of)

[20:37] <ninereasons> on freebsd?

[20:38] <Corion> ninereasons: No, no freebsd

[20:38] <ninereasons> oh i see what you mean.

[20:38] <Corion> Don't you know - *BSD is dying

[20:38] <Corion> :)))

[20:38] <ninereasons> I'm covering all my bets, Corion

[20:38] * shapr covers all his bets with one finger.

[20:38] <ninereasons> I'm on Win32, using freebsd over ssh, via linux via cygwin xwindows

[20:38] * stevan wonders if Corion really has three mouths or not

[20:39] <Corion> Bah. I'm ditching the setEnv patches for Win32 and will just disable the test.

[20:39] <Corion> (as it's too late/I'm too tired to figure out how to make the Haskell failWith() in Compat.hs work like die() in Perl)

[20:40] <Corion> stevan: No no - you're thinking of the Beast Of A Thousand Young. I'm more like Cthulhu

[20:40] <ninereasons> r1817 builds for you, Corion; without plugins installed?

[20:41] <Corion> ninereasons: I think I don't have any plugins. I'm using the plain GHC 6.4 Win32 install 

[20:41] <Corion> But I wouldn't know how to check if I have hs-plugins

[20:41] <ninereasons> ?? (maybe BSD really is dying :(

[20:42] <stevan> ninereasons: doubt it is dying (it is the base of Darwin and some ISPs love it)

[20:42] <ninereasons> look for the make option -DPUGS_HAVE_HSPLUGINS=1 

[20:43] <theorbtwo> Corion: ghc-pkg describe plugins.

[20:43] <theorbtwo> Or what ninereasions said.

[20:43] <Corion> "cannot find package plugins"

[20:43] <theorbtwo> In what way is it killing the build?

[20:43] <ninereasons> Chasing modules from: src/Main.hs

[20:43] <ninereasons> Could not find module `Plugins':

[20:43] <jabbot> pugs - 1819 - More sanity in External.Haskell.  Things

[20:43] <jabbot> pugs - 1818 - fixed t/builtins/string/lc.t; and more f

[20:44] <ninereasons> ah ..

[20:44] <ninereasons> interesting.

[20:44] <ninereasons> -DPUGS_HAVE_HSPLUGINS=1  is in the build, without plugins installed

[20:44] * Aankhen`` goes to sleep.

[20:45] <Aankhen``> Nite.

[20:46] <Corion> theorbtwo: You mentioned System.Win32 - how would I install that module/package in Haskell ? (And where should I find it?)

[20:46] <theorbtwo> ninereasons: ghc-pkg describe plugins ?

[20:47] <theorbtwo> Corion: autrijus mentioned that, not me.

[20:47] <ninereasons> ghc-pkg: cannot find package plugins

[20:47] <Corion> theorbtwo: Ah. It's too late and I'm confusing people already :(

[20:47] <ninereasons> I'll manually alter the Makefile, and see if that works

[20:47] <Corion> Good night then ;) My idea of making setEnv work will have to wait... I'll just skip() the %*ENV tests on Win32

[20:48] <stevan> anybody want to take a look at t/builtins/strings/length.t  

[20:48] <stevan> it is only showing 6 test for me

[20:48] <stevan> but there should be 15

[20:49] <stevan> oh wait

[20:49] <stevan> I see it now

[20:49] <Khisanth> the for?

[20:49] <stevan> yeah

[20:49] <stevan> it was assuming the older flattening behavior

[20:50] <stevan> ok much better now :)

[20:50] <theorbtwo> ninereasons: Try ghc-pkg describe plugins && echo "Yes"

[20:50] <ninereasons> ghc-pkg: cannot find package plugins

[20:51] <theorbtwo> Now try ghc-pkg describe base

[20:51] <theorbtwo> Er, && echo "Yes"

[20:51] <ninereasons> name: base

[20:51] <ninereasons> version: 1.0

[20:51] <ninereasons>  .. YES

[20:52] <theorbtwo> Hm.

[20:52] <theorbtwo> No clue, sorry.

[20:52] <ninereasons> it's alright - it was educational :)

[20:52] <shapr> what's the problem?

[20:53] <ninereasons> my build is showing that I have plugins, when I don't

[20:53] <ninereasons> -DPUGS_HAVE_HSPLUGINS=1 

[20:53] <shapr> are you using ghc6.4 ?

[20:53] <ninereasons> ghc-pkg: cannot find package plugins

[20:53] <ninereasons> Glasgow Haskell Compiler, Version 6.4, for Haskell 98, compiled by GHC version 6.4

[20:54] <shapr> what about "ghc-pkg -l|grep plugins" ?

[20:54] <ninereasons> null

[20:54] <ninereasons>  ghc-pkg -l|grep plugins || echo "NOPE"

[20:54] <ninereasons> NOPE

[20:54] <shapr> well, you definitely don't have hs-plugins then.

[20:57] <theorbtwo> shapr: Read inc/Pugs/MakeMaker.pm, have_ghc_package, near the bottom.

[20:57] * kungfuftr still waits for his compiles to finish

[20:59] <ninereasons> if kungfufter's build completes, it's probably not OS relate (freebsd 4.11)

[20:59] <ninereasons> my problems, that is

[21:01] <kungfuftr> ninereasons: ah... my smoke is still working... getting my laptop to a usable state

[21:02] <stevan> kungfuftr: my tests were stalling on the t/examples/golf tests ,.. just FYI

[21:03] <kungfuftr> stevan: http://kungfuftr.com/pugs-smoke.html

[21:04] <stevan> kungfuftr: nevermind then  :)

[21:04] <stevan> wow what happened with the builtins?

[21:05] <kungfuftr> no idea... that only builds every hour

[21:05] <stevan> strange

[21:05] * kungfuftr checks stuff

[21:06] <stevan> theorbtwo: Profit?

[21:06] <theorbtwo> It's a South Park / Slashdot reference.

[21:07] <stevan> theorbtwo: You Bastard!

[21:07] <cognominal> theorbtwo: oops. what should U do to correct my mistake

[21:08] <kungfuftr> stevan: 2 runs seem to have run into each other

[21:08] <stevan> kungfuftr: are you doing 'make clean'?

[21:08] <stevan> that was not working right for a little while

[21:09] <stevan> (leaving Makefile around and such)

[21:09] <cognominal> hum, I guess that must be ASCII only for the rist field

[21:10] <theorbtwo> Right.  And utf8, not latin1, for the last field.

[21:10] <shapr> bonjour Ovid 

[21:10] <stevan> Ovid!!

[21:10] <Ovid> Salut!

[21:10] <stevan> Ovid: the ITypes refactor is (mostly) complete

[21:11] <stevan> so give your HTML::Entities a try

[21:11] <Ovid> So, if Pugs completely borked right now?  I can't even compile.  Something about "Could not find module 'Plugins'"

[21:11] <kungfuftr> stevan: running it manually from scratch now

[21:11] <stevan> Ovid: blame theorbtwo :)

[21:11] <stevan> kungfuftr: excellent

[21:11] <Ovid> OK, I blame him.  Still doesn't get me a compile, though.

[21:12] <stevan> Ovid: those are hs-plugins, they are needed for using Haskell libraries in perl6

[21:12] <stevan> theorbtwo: isnt there a flag Ovid can switch off? 

[21:12] * stevan looks for the hs-plugins URL too

[21:12] <ninereasons> we used to have a check builtinswitched off the flag automatically

[21:13] <ninereasons> it doesn't seem to be working, right now

[21:13] <stevan> Ovid: grab this ftp://ftp.cse.unsw.edu.au/pub/users/dons/hs-plugins/snapshots/

[21:13] <theorbtwo> What's the third char of your name, cognominal?

[21:15] <Ovid> OK, I see the plugins.  What do I do with 'em?

[21:15] <stevan> install 'em

[21:15] <Ovid> ?  All?

[21:16] <stevan> wait lemme look

[21:16] <ninereasons> autoconfig && ./configure && make

[21:16] <cognominal> theorbtwo: e acute

[21:16] <Ovid> ninereasons: was that directed at me or someone else?

[21:16] <stevan> Ovid: grab the latest one

[21:16] <ninereasons> piped to you, Ovid 

[21:16] <ninereasons> it was given to me as instructions

[21:16] <cognominal> ...stéphane

[21:17] <stevan> 2050412 

[21:17] <ninereasons> (but I haven't been able to build plugins on freebsd, so far)

[21:17] <stevan> (damn australians livin in the future)

[21:18] <stevan> Ovid: then follow ninereasons instructions re: autoconfig, etc.

[21:18] <Ovid> ok

[21:18] <stevan> then make sure to 'make install' and then 'make register'

[21:18] <ninereasons> Ovid, then make install and make register

[21:18] <theorbtwo> OK, authors file fixed.

[21:18] <ninereasons> oops

[21:18] <stevan> as for what it is these things are actully doing,.. I will refer you too theorbtwo 

[21:19] <stevan> hey metaperl 

[21:19] * theorbtwo sighs.

[21:19] <theorbtwo> Something you wrote breaks the build, and people are all over you like it's your fault.

[21:19] <Ovid> No.  The instructions say I need to start with ./configure, but there's no such file.

[21:19] <kungfuftr> bah, no building... missing pugins (hehe)

[21:19] <ninereasons> autoconf

[21:19] <stevan> autoconf makes one

[21:20] <ninereasons> are you using linux, Ovid ?

[21:20] <theorbtwo> ./autogen.sh

[21:20] <kungfuftr> huh?

[21:20] <Ovid> Mac OS X

[21:20] <stevan> Ovid: I had the same issue,.. (damn Australian Haskell programmers cant write instructions worth a damn.,.. *grumble* *grumble*)

[21:20] <ninereasons> autogen.sh makes  me smile :)

[21:20] <Ovid> :(

[21:21] <Ovid> Oh well.  I gotta get back to work.  I'll deal with this later.

[21:21] <shapr> autoreconf && ./configure && make

[21:21] <shapr> then as root, make install && make register

[21:22] <Ovid> OK, trying now.

[21:22] * Ovid appreciates the help.

[21:22] <shapr> if it's Haskelly stuff, feel free to poke me

[21:22] <kungfuftr> how comes plugins is not optional?

[21:22] <theorbtwo> shapr: It is.

[21:22] <stevan> shapr++ # the lone voice of sanity ...

[21:22] <theorbtwo> kungfuftr: It's supposed to be.

[21:22] <Ovid> Thanks.  How long have you been doing Haskell?

[21:23] <shapr> as long as the #haskell channel has existed

[21:23] <shapr> Registered: 3 years 49 weeks 6 days (23h 0m 11s) ago

[21:23] <Ovid> Damn!

[21:23] <castaway> It is optional, just the checker seems to not always work.. go fix it ,)

[21:23] <shapr> My fiancee got me two books and I started learning.

[21:23] <kungfuftr> Could not find module `Plugins':

[21:23] <kungfuftr>   use -v to see a list of the files searched for

[21:23] <kungfuftr>   (imported from src/External/Haskell.hs)

[21:23] <kungfuftr> *** Error code 1

[21:23] <jabbot> pugs - 1820 - Fix AUTHORS file.

[21:23] <kungfuftr> (soz)

[21:23] * ninereasons doesn't like the sound of the "Damn!"

[21:24] <Ovid> My only experience with a Haskell programmer was someone who sneered at me because I use Perl.  I should email him a link to pugs!

[21:24] <shapr> I'm self-employed, so I didn't exactly learn quickly, but I did have fun.

[21:24] <castaway> works for me:

[21:24] <castaway> /usr/bin/perl5.8.6 -Iinc Makefile.PL

[21:24] <castaway> *** Inline Haskell support disabled.  If you want dynamic loading

[21:24] <castaway>     of haskell modules, please install the hs-plugins library,

[21:24] <castaway>         ftp://ftp.cse.unsw.edu.au/pub/users/dons/hs-plugins/snapshots/ ,

[21:24] <castaway>     dated 2005-04-10 or later -- remember to "make register" too!

[21:24] <Ovid> Actually, the "damn!" was a good thing.

[21:24] <shapr> Ovid: would that be someone on extremeperl? I surely hope not =)

[21:24] <Ovid> No.  An ex-girlfriend's brother.

[21:24] <kungfuftr> *blink* works now

[21:24] <ninereasons> oh a "Damn" of appreciation

[21:24] <ninereasons> not of frustration :)

[21:24] <kungfuftr> no it don't... bellecks

[21:24] <metaperl> oh Ovid, you know galois.com is in Oregon don't you?

[21:24] <shapr> The more I learn about programming, the more I realize it's all the same, there's no reason to fight.

[21:25] <Ovid> I was referring to Gauloise cigarettes.

[21:25] <metaperl> they are a haskell shop

[21:25] <castaway> plenty of reason, just none of it useful ,)

[21:25] <stevan> shapr: thems fightin words boy!

[21:25] <Ovid> Curious.

[21:25] <shapr> stevan: haha

[21:25] <shapr> it's true though, I've realized there's not a huge difference between monads and OOP

[21:25] <PerlJam> shapr: there are bunches of Perl/PHP/Python/etc. fanatics that need to learn that lesson.

[21:25] <metaperl> i didnt see your coment regarding cigarettes. I was just telling you about a haskell shop in oregon

[21:25] <shapr> Though the difference is enough that I'd rather use monads.

[21:25] <PerlJam> (about no fighting that is)

[21:26] <shapr> Ovid: tried Gitanes?

[21:26] <kungfuftr> theorbtwo: it may be optional, but it may still require it to be there to check stuff... etc.

[21:26] <kungfuftr> =0)

[21:26] <kungfuftr> ah... 2 secs

[21:26] <Ovid> Oh!  I thought you were referring to http://perlmonks.org/?node_id=446761.  It's a post I made today and I referred to Gauloise cigarettes.  Curiously, it's about the disagreements on the extremeperl list.

[21:27] <shapr> oh my

[21:27] <Ovid> shapr:  no, I haven't.  However, I quite smoking about half a year ago.

[21:27] <Ovid> Hey, it looks like Pugs is compiling now :)

[21:27] <Ovid> s/quite/quit/

[21:27] <kungfuftr> nope

[21:27] <shapr> after my private email exchanges with Rob, I have discovered he's defending his position rather than looking for answers.

[21:27] <kungfuftr> =0/

[21:28] <shapr> kungfuftr: you have plugins problems?

[21:28] <kungfuftr> yup

[21:28] <Ovid> You know, I really can't blame Rob.  I've been there (I'm still there at times.  It's tough to let go of pride)

[21:28] * ninereasons is so glad not to be alone in his problems anymore

[21:28] <kungfuftr> freebsd 4.11

[21:28] <shapr> I'm still there at times too, but I have friends who tell me to "get the fuck over it" and I'm smart enough to listen.

[21:28] <ninereasons> same here

[21:29] <Ovid> :)

[21:29] <shapr> kungfuftr: dons developers on bsd, so I'd be surprised if plugins don't work on one of the flavors.

[21:29] <theorbtwo> So: Is the no-plugins case still broken for anybody, or did it mysteriously fix itself?

[21:29] <Ovid> Me, I just learn to have friends who are smarter than I am.  It makes me listed more.

[21:29] <shapr> But also dons should be awake in an hour or so, and you can ask him then.

[21:29] <shapr> Ovid: yeah, that's one thing I like about #haskell

[21:30] <kungfuftr> shapr: i have no plugins... it just won't build, though is supposed to be optional

[21:30] <ninereasons> still broken for me, theorbtwo and for kungfuftr 

[21:30] <ninereasons> Ovid has a problem too, theorbtwo , but know the details

[21:30] <ninereasons> don't know ..

[21:30] <shapr> I don't even try to be prideful on #haskell, there's nothing like getting squished by a 15 year old who knows twice as much as I do about type theory.

[21:30] <Ovid> Mine is fix.

[21:31] <ninereasons> one down, then. theorbtwo 

[21:33] <mj41> use v6;

[21:33] <mj41> my $conf;

[21:33] <mj41> $conf = { 'a' => 1 };

[21:33] <mj41> say $conf.keys.[0];

[21:33] <mj41> my $conf2 = { 'a' => 1 };

[21:33] <mj41> say $conf2.keys.[0];

[21:33] <mj41> # will print 0 a

[21:33] <jabbot> pugs - 1821 - More debugging for plugins problem.

[21:34] <kungfuftr> ninereasons: try uncommenting line 193 of Module::Install::Pugs

[21:34] <theorbtwo> ninereasons, kungfuftr, anybody else, try svn up and re-running.

[21:34] * castaway goes to bed

[21:34] <kungfuftr> pugs is building directly after removing that comment

[21:35] <shapr> The smartest people seem to have very little pride, I guess they realize how much there is left to learn.

[21:35] <theorbtwo> I'd prefer to leave the waitpid call commented out; it reportedly causes infinite runs...

[21:35] <theorbtwo> Ah, damn.

[21:35] <PerlJam> mj41: surely that's an old pugs you've got?

[21:35] <theorbtwo> It reportedly causes infinite runs for some win32s.

[21:35] <mj41> r1819 winXP

[21:36] <stevan> shapr: that may be because prideful smart people tend to say dumb things when their pride gets in the way (hence lowering their status)

[21:36] <shapr> interesting thought

[21:36] <shapr> that would make sense

[21:36] <kungfuftr> theorbtwo: do it based on OS

[21:37] <stevan> shapr: I meet many a really really smart person in my dot.com days who's ego made them seem like a complete idiot

[21:37] <kungfuftr> ninereasons: any luck?

[21:38] <ninereasons> i tried svn up first, kungfuftr - that failed

[21:38] <ninereasons> trying your suggestion

[21:38] * stevan finds un-TODO-ing passing test highly satisfying 

[21:38] <mj41> my $conf;

[21:38] <mj41> $conf = { 'a' => 1 };

[21:38] <mj41> say ~$conf.kv;

[21:38] <mj41> # prints: 0 a 1

[21:38] <theorbtwo> ninereasons: What did it print when it failed?

[21:38] <PerlJam> mj41: Hrm.  

[21:38] <PerlJam> mj41: oh!  *my* pugs is an older one.

[21:39] <ninereasons> do you really mean the line with '1;' on it, kungfuftr ? (no comment there)

[21:39] <PerlJam> anyway, the whole variable initialization thing has been problematic for a while and no one with the right tuits + knowledge has been able to fix it yet.

[21:40] <ninereasons> stille "Could not find module `Plugins':" theorbtwo 

[21:40] <theorbtwo> What?

[21:40] <theorbtwo> What prints when you do a Makefile.PL run?

[21:41] <ninereasons> first line: 'ghc-pkg', 'describe', plugins at inc/Module/Install/Pugs.pm line 176.

[21:41] <kungfuftr> ninereasons: inc/Module/Install/Pugs.pm - 193

[21:41] <theorbtwo> ninereasons: Yes, keep going, please.

[21:41] <kungfuftr> ninereasons: is a call to waitpid

[21:42] <ninereasons> 63638 at inc/Module/Install/Pugs.pm line 178.

[21:42] <ninereasons> 63638 finished: 0x0 at inc/Module/Install/Pugs.pm line 180.

[21:42] <ninereasons> then, writing Makefile for ...

[21:43] <ninereasons> weird, kungfuftr ; my line 193 is simply "1;"

[21:43] <kungfuftr> ninereasons: up to dat copy?

[21:44] <ninereasons> svn stat shows no alterations to working copy

[21:44] <ninereasons> and up to 1821

[21:44] <kungfuftr> ninereasons: look for "#waitpid" 

[21:44] <ninereasons> maybe I out to wipe out the working copy and check out again ?

[21:44] <Ovid> Anyone else experiencing the tests hanging on t/examples/golf.............................ok 1/10?

[21:45] <stevan> Ovid: I had that happen too

[21:45] <ninereasons> found it on line 179, kungfuftr ; it looks like ...

[21:45] <Ovid> Hmm ... I still don't feel comfortable installing this yet :(

[21:45] <ninereasons> yes .. it looks like ...

[21:46] <ninereasons> it's working.  thanks kungfuftr 

[21:46] <kungfuftr> mwuahahah

[21:46] <ninereasons> strange about the line number difference.

[21:47] <kungfuftr> *shrug*

[21:47] <ninereasons> *shrug*

[21:48] <stevan> Ovid: r1822 - I skipped the golf test

[21:49] <Ovid> Thanks.  Trying again.

[21:49] <kungfuftr> theorbtwo: looks like the waitpid needs to be there for bsd

[21:50] <ninereasons> a different problem in Ovid's case though.  I think his problem went away when he got plugins to go in successfully.

[21:51] <ninereasons> (don't know his OS)

[21:51] <Ovid> That's correct.

[21:51] <Ovid> Mac OS X

[21:51] <ninereasons> interesting

[21:51] *** metaperl_ is now known as metaperl

[21:52] <kungfuftr> memory leak in golf?

[21:52] <kungfuftr> t/examples/golf.t

[21:52] <kungfuftr> pugs: out of memory (requested 1048576 bytes)

[21:53] <stevan> kungfuftr: when I interupted it,.. I found the process was still going in the background

[21:53] <stevan> svn up though,.. i skipped it 

[21:54] <kungfuftr> ah... k

[21:56] * theorbtwo tries one more checkin, sighs, declares it bed.

[21:59] <theorbtwo> the the finished: foo line does not give 0x100 if you don't have it, or 0x0 if you do, then something odd is going on.

[21:59] <theorbtwo> s:1st/the/if/

[22:03] <jabbot> pugs - 1823 - One more try.

[22:03] <jabbot> pugs - 1822 - more test cleaning and force-TODO-ing

[22:15] <ninereasons> that is interesting, mj41. " $conf = { 'a' => 1 };  

[22:15] <ninereasons>  $conf[0].kv;

[22:15] <ninereasons> ('a', 1)

[22:15] <ninereasons> $conf.perl;

[22:15] <ninereasons> '((\'a\' => 1))'

[22:16] <ninereasons> $conf.kv

[22:16] <ninereasons> (0, ('a' => 1))

[22:23] <jabbot> pugs - 1824 - More progress filling out S28draft.pod

[22:24] * dvergin__ always loves hearing from jabbot.

[22:24] <Ovid> I still think there are serious problems here.  I am now hanging on "t/subroutines/subroutine....................NOK 13"

[22:27] <Ovid> Don't make me learn Haskell and fix these damned things!

[22:27] <Ovid> (just kidding)

[22:28] * shapr tokes on a lambda

[22:28] <shapr> the first one comes free man

[22:28] <kungfuftr> shapr: that's right... get him hooked!

[22:28] * Ovid muses trading Prolog lessons for Haskell lessons.

[22:29] * shapr grins

[22:29] <shapr> I give Haskell lessons for free.

[22:30] <shapr> Deceptively free... I think open source is resource competitive, and the resources are the minds of the developers.

[22:37] <Juerd> Hey, Ovid!

[22:37] <Juerd> We're online at the same time. That's special.

[22:38] <Ovid> Hi Juerd.

[22:38] <Juerd> Do you grok my explanation of the := swap thing?

[22:39] <Ovid> Yes, but I still think it will confuse programmers.  Several folks here were confused by ($x,$y) := ($y,$x) and there was disagreement over what it meant.

[22:40] <Juerd> (Though it only makes sense in the sane world where references are references, and names, containers and values are separated from eachother, and from where Larry left a month or so ago)

[22:40] <Juerd> Ovid: It's no more confusing than with s/=/:=/

[22:40] <Juerd> Ovid: It does the same thing, but swapping the variable names while keeping the values in place, instead of exactly the other way around: swapping the values while keeping the variables (and their names) in place

[22:41] <Juerd> The larger the value (possibly megabytes in size), the greater the benefit.

[22:42] <Ovid> Well, aliasing and binding is good in the general sense, but trying to swap with aliases suggests to me that variables were incorrectly used (or named) in the first place.

[22:42] <Juerd> swapping with = is like working with cp on the command line

[22:42] <Juerd> := is mv.

[22:42] <Juerd> Ovid: They were either incorrectly used/named or equivalent in meaning in either case

[22:43] <Juerd> The end result, in the language, as seen by the programmer, is exactly the same.

[22:43] <Juerd> This is why this example is generally done with $x and $y, or $foo and $bar and never with meaningful names, because this thing just doesn't happen much in practice.

[22:44] <Ovid> Hopefully this won't cause a problem.  I'll worry later as "idiomatic Perl 6" starts to evolve.

[22:44] <Ovid> :)

[22:44] <Juerd> I think := is a big and important thing.

[22:45] <Juerd> It's a key element to performance - something really missing in Perl 5. It's only available implicitly.

[22:45] <Juerd> Re idioms: many will go away, because all the often used idioms are going to be part of the language itself

[22:46] <Juerd> We lose the ST because sort itself now caches

[22:46] <Juerd> The selectselect idiom is gone because, well, $/ is gone :)

[22:46] <Juerd> (And $\, $|, etc)

[22:46] <Juerd> slurp does away with @ARGV = $fn; <>

[22:47] <Ovid> Oh, don't get me wrong.  I agree that := is really important.  I just am concerned about an odd little corner case with it where reasonable programmers have had different expectations.

[22:47] <Ovid> Unreasonable programmers may be even worse.

[22:47] <Juerd> I think explaining them both is a good way to demonstrate how := differs from =

[22:48] <Juerd> They both swap, only the thing that's swapped is different.

[22:48] <Juerd> I think the swap case can more clearly explain the difference than normal assignment with many print statements to show what's happening.

[22:48] <Juerd> When explained right, at which I certainly failed :)

[22:57] <kungfuftr> Ovid: t/subroutines/subroutine.t is hanging for me too

[23:02] <Ovid> Bummer.

[23:02] <Ovid> Yeah, I've run it twice.  This is probably a similar problem to the examples/japh that stevan skipped.  There's something serious there :(

[23:10] <Juerd>            Note that many drivers have no way of knowing what data sources might be available for it. These drivers return

[23:10] <Juerd>            an empty or incomplete list or may require driver-specific attributes.

[23:10] <Juerd> Sorry, wrong window.

[23:10] <Juerd>            There is also a data_sources() method defined for database handles.

[23:11] * shapr grabs the handle of a nearby database

[23:14] <jabbot> pugs - 1825 - skipping tests in subroutine.t

[23:14] <stevan> Ovid: subroutine hang is fixed

[23:15] <stevan> this was a parsefail which was recently uncommented

[23:15] <kungfuftr> stevan: beat me to it... dammit

[23:15] <Ovid> OK.  Updating now.

[23:15] <stevan> so not something terribly serious I think

[23:15] <stevan> kungfuftr: beware my svn fu !!!!!!

[23:16] * stevan is dreading the Changelog duty given the number of commits today

[23:17] * shapr consiers making stevan's life harder.

[23:18] <stevan> shapr: go ahead, make my day ;| # <<< clint eastwood squint

[23:18] * shapr grins

[23:18] * kungfuftr makes lots of one character changes to files

[23:24] <Juerd> Oh, the changelog loves that.

[23:25] <stevan> hmmm,... bug or correct

[23:25] <stevan> my @array3 = (@array1, @array2); say +@array3 # prints 2

[23:26] <stevan> ./pugs -e 'my @array1; my @array2; my @array3 = (@array1, @array2); say +@array3'

[23:26] <stevan> shouldn't that flatten @array1 and @array2?

[23:33] <Juerd> It should, as the RHS of ARRAY = should be in list context

[23:34] <Juerd> Not list-of-scalar-contexts :)

[23:34] <stevan> Juerd: I assume that this: my @array5 = ( @array2[2, 1, 0], @array1[2, 1, 0] );

[23:34] <stevan> is the same thing then

[23:34] <Juerd> That's only for sub arguments and binding, except when slurpy...

[23:34] <Juerd> Same thing as what?

[23:35] <stevan> it should flatten as well since the slices would return arrays

[23:35] <Juerd> +@array5 should be 6, and not grep defined, @array5

[23:36] <Juerd> Slices return lists

[23:36] <Juerd> Not arrays

[23:36] * Juerd zzz

[23:36] <Juerd> Good night

[23:36] <stevan> thanks Juerd 

[23:53] <jabbot> pugs - 1827 - force-TODO-ing and test cleanup

[23:53] <jabbot> pugs - 1826 - force-TODO-ing and test cleanup

[23:59] <Ovid> Only 190/4236 subtests failed :)

