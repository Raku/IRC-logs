[03:48] *** emmons_ is now known as emmons

[04:31] <svnbot6> r7976 | yiyihu++ | typo in Chinese character.

[07:14] <svnbot6> r7977 | stevan++ | Perl6::ObjectSpace -

[07:14] <svnbot6> r7977 | stevan++ | * create type::equivalence module, and refactored 

[07:14] <svnbot6> r7977 | stevan++ |   type::comparable to use it.

[07:14] <svnbot6> r7977 | stevan++ | * symbol uses type::equivalence

[07:14] <svnbot6> r7977 | stevan++ | * closure::params uses type::equivalence

[07:14] <svnbot6> r7977 | stevan++ |     - added tests for this

[07:14] <svnbot6> r7977 | stevan++ | * closure::signature uses type::equivalence

[07:14] <svnbot6> r7977 | stevan++ |     - added tests for this

[09:07] <nothingmuch> autrijus: ping

[09:30] <autrijus> nothingmuch: pong

[09:31] <nothingmuch> enable comments on your latest journal =)

[09:31] <nothingmuch> and register for osdc.org.il

[09:31] <nothingmuch> i submitted perl 6 compilation, and a catalyst tutorial

[09:43] <autrijus> enable comments? it's already enabled

[09:43] <autrijus> maybe you did not log in use.perl?

[09:45] <autrijus> re osdc, sure, doing it now

[09:45] <nothingmuch> i did

[09:45] <nothingmuch> i don't see anywhere to post

[09:46] <autrijus> http://use.perl.org/comments.pl?sid=29498&threshold=-1&mode=nested&commentsort=0&op=Reply

[09:46] <autrijus> family dinner, bbiab

[09:47] <nothingmuch> oh, wait... brain fart

[09:47] <autrijus> figured :)

[09:51] <nothingmuch> btw, is TheLarry still coming?

[09:54] <nothingmuch> hmm... i wonder if szabgab should announce on http://jolug.org/ too

[10:02] * nothingmuch also submitted darcs intro

[10:03] <nothingmuch> i wonder if I should also do testing tutorial

[10:03] <nothingmuch> naah

[10:44] <r0nny> yo

[10:44] <luqui> whatup

[10:47] <theorbtwo> luqui: use.perl.org/~autrijus/journal/

[11:02] <r0nny> how long till the meta method is supported ?

[11:09] <luqui> r0nny, well, a while

[11:09] <luqui> considering that stevan is still working on what it means

[11:11] <r0nny> hmm

[11:12] <nothingmuch> hola luqui

[11:12] <luqui> buenos dias

[14:29] <svnbot6> r7978 | iblech++ | * Usual svn props.

[14:29] <svnbot6> r7978 | iblech++ | * t/syntax/interpolation/strings.t: \x[42,43,44] and similar forms,

[14:29] <svnbot6> r7978 | iblech++ |   per r6622 of S02 and Larry:

[14:29] <svnbot6> r7978 | iblech++ |   http://www.nntp.perl.org/group/perl.perl6.language/24085

[14:29] <svnbot6> r7978 | iblech++ | * t/packages/use_perl_6.t: "use v6" is short for "use Perl-6",

[14:29] <svnbot6> r7978 | iblech++ |   per r6622 of S11.

[14:29] <svnbot6> r7978 | iblech++ | * New t/operators/subscript_adverbs.t:

[14:29] <svnbot6> r7978 | iblech++ |     @array[13,17]:kv

[14:29] <svnbot6> r7978 | iblech++ |     @array[13,17]:p

[14:29] <svnbot6> r7978 | iblech++ |     etc.  # per r6622 of S02

[14:31] *** lampus_ is now known as lampus

[14:48] <Juerd> nice++  # makes feather not go crazy

[14:48] <Juerd> [feather users]++  # understand this

[14:50] <webmind> heh

[14:51] <webmind> indeed :)

[15:04] <xinming> ?eval class A { method a { "test" }}; A.new.test

[15:04] *** evalbot_7974 is now known as evalbot_7978

[15:04] <evalbot_7978> Error: No compatible subroutine found: "&test" 

[15:04] <xinming> ?eval class A { method a { "test" }}; A.new.a

[15:04] <evalbot_7978> "test" 

[15:05] <xinming> ?eval class A { method a { $?SELF.b } method b { "test" }}; A.new.a

[15:05] <evalbot_7978> "test" 

[15:10] <xinming> anyone here ? It seems that submethod and my method these 2 has the same effect. :-/

[15:18] <xinming> Oh,I'm wrong, private method can't be invoked outside directly.

[17:19] <stevan> autrijus: ping # welcome back

[17:23] <autrijus> stevan: hey

[17:23] * autrijus wonders why stevan always shows up just before bedtime here

[17:27] <autrijus> anyway... I've been chasing the various Syn changes (iblech++ for reflecting them to the tree), as well as your P6::OS work.

[17:27] <autrijus> going to sleep, will be up and about tomorrow night, hailing from another city (Kaohsiung this time), at around 18~20 hours from now

[17:28] <autrijus> see ya :) &

[17:29] <Juerd> autrijus: wb

[17:31] <stevan> night autrijus :)

[17:31] * stevan curses the rotation of the earth ... damn timezones

[17:41] * xinming says "Give me a place to stand on, and I will rotate the earth." :-P

[17:42] <Juerd> Please do not change the axis without permission.

[18:27] <liz6> seen autrijus

[18:27] <jabbot> liz6: autrijus was seen 59 minutes 50 seconds ago

[19:39] <r0nny>  is there a way, to define a method takes only arguments apply to a special role ?

[19:39] <svnbot6> r7979 | iblech++ | * Pugs.Parser: Parse the till operator (and ^till and till^). (till is, per

[19:40] <svnbot6> r7979 | iblech++ |   r6612 of S03, the new flipflop operator.)

[19:40] <svnbot6> r7979 | iblech++ | * New t/operators/till.t: Basic tests for till, ^till, and till^.

[19:40] <svnbot6> r7979 | iblech++ |   Open questions:

[19:40] <svnbot6> r7979 | iblech++ |   * Do subroutines' flipflop operators have a per-invocation-of-the-sub state?

[19:40] <svnbot6> r7979 | iblech++ |   * Does calling via the subroutine form (&infix:<till>(LHS, RHS)) work?

[19:40] <svnbot6> r7979 | iblech++ |     (Problem being the state, which would have to be maintained.)

[19:40] <svnbot6> r7979 | iblech++ |     Does &infix:<till> have a %state hash, with $CALLER::POSITION as keys?

[19:41] <r0nny> hello ?

[19:54] <xinming> r0nny: hmm, Could you please tell me what this is used for?

[19:54] <xinming> r0nny: Just now I was in bath room

[19:56] <r0nny> i defined some roles, and i want pass classes are made from them to some of their methods - how to do this best ?

[19:56] <r0nny> cause it should be limited only to these

[19:58] <rafl> Make all those classes inherit from a given class or implement a given interface or something like that.

[19:58] <r0nny> hmm

[19:59] <r0nny> i think atm applies the folowing to me: "i dont see the woods cause of all the trees"

[20:04] <svnbot6> r7980 | iblech++ | New t/subroutines/multidimensional_arglists.t: Test for the

[20:04] <svnbot6> r7980 | iblech++ | @;multidimension_argument_lists of r6624 of S06.pod.

[20:34] <svnbot6> r7981 | iblech++ | * Pugs.Parser: Parse S06's @;multidimensional_arglist variables.

[20:34] <svnbot6> r7981 | iblech++ | * t/subroutines/multidimensional_arglists.t: Minor fix.

[20:49] <geoffb> iblech++ # yet again, for assiduously converting spec changes to test changes

[21:25] <pmurias> How much mathematical knowledge is required for 'Types and Programming Languages'?

[21:25] <wolverian> hmm, so perl6 doesn't have a 'protected' visibility? 

[21:25] <SamB> pmurias: wouldn't that question be better asked in Haskell? 

[21:25] <SamB> er, #haskell

[21:26] <obra> pmurias: it's my understanding that it start from first principles

[21:31] <pmurias> it has examples in ML,is it required to understand the book?

[21:32] <obra> autrijus claimed that it taught you the ML you needed

[21:34] <gaal> pmurias: I'm finding the OCaml much easier than the math, personally.

[21:42] <pmurias> Does it require knowledge of cathegoric theory?

[21:46] <gaal> not as far as I've gotten in (2/5ths maybe)

[21:47] <gaal> I think there's not a lot of math training needed as a prerequisite, except for the discipline to read slowly and not skip things.

[21:48] <integral> one trick with maths is to make sure you do the exercises so you really do understand stuff before you move on

[21:48] <gaal> you do need basic knowledge of sets; and I can imagine my reaction would be sheer horror if I'd never heard the term "lambda" before...

[21:49] <pmurias> gaal:i seen it in python

[21:49] <integral> a quick browse of SICP (available from mitpress.mit.edu/sicp) would get you up to speed on lambdas via scheme

[21:50] <gaal> knowing some haskell helped too. battling with new syntax AND new math can be hard :)

[21:53] <pmurias> i know a bit haskell,not sure how to use it in something real,I'm comfortable with first-class functions,curring,cloures too...

[21:53] <gaal> i'd say dive in then :-)

[21:54] <gaal> night everyone :)

[21:54] <SamB> pmurias: well, you could always try working on something a bit less intimidating than a programming language implementation

[21:55] <SamB> we have no shortage of projects to hack

[21:57] <pmurias> It's not direcetly conected with by *distant* future plan of a haskell compiler,just want to add some theory to my mostl/entirly pracitcal programming knowledge

[21:58] <SamB> pmurias: you just want theory? bah!

[21:58] <SamB> Haskell is about getting things done!

[21:59] <pmurias> Having learned the theory, of course I would be obliged to try it out :)

[22:00] <SamB> use Haskell and the theory will come natural-like

[22:07] <geoffb> SamB, s/theory/insanity/

[22:07] <SamB> geoffb: whats the difference?

[22:08] <geoffb> One gets you high-paid jobs at universities and think tanks, and the other is theory?

[22:08] <SamB> oh.

[22:08] <SamB> so insanity gets you high-paid jobs at universities and think tanks?

[22:09] <geoffb> Wouldn't you say so?  I mean, ever talked to a prof in person, or read anything published by a think tank?  :-)

[22:10] <SamB> well, yes. not too much, but some!

[22:10] <SamB> talking to profs, I mean.

[22:10] <SamB> they don't seem too crazy.

[22:11] * geoffb is a little wierded out by the concept of sane professors

