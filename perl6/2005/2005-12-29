[06:42] <gaal> <audreyt clkao>.ping

[08:01] <gaal> every once in a while I encounter the word "taguri" in the context of yaml or syck and it keeps taking me the same amount of time to figure out who this Japanese version of some Tagore fellow is.

[09:56] <anatolyv> anyone on who can help with a login problem on openfoundry? :)

[09:57] <gaal> hey anatolyv. everybody's asleep it seems :(

[09:58] * anatolyv nods.

[09:59] <anatolyv> mmm, sleep. can't blame them!

[10:00] <gaal> :)  got any other cool features you want to implement?

[10:01] <anatolyv> not at the moment, probably :) I'd better focus a bit on learning more haskell and reading some code.

[10:01] <gaal> Pugs.Prim is a fair place to start

[10:02] <gaal> some of the things there are relatively pure haskell

[10:04] <anatolyv> relatively, eh?

[10:06] <gaal> :) there's the issue of packing and unpacking pugsy Vals, but other than that some ops are simple.

[10:07] <gaal> btw, there's also a junctive meaning for ^, but I ran your code against t/junction/misc_junctions.t and nothing broke.

[10:29] *** whiteg_ is now known as whiteg

[11:42] <Cryptic_K> gotta go

[11:42] <Cryptic_K> laters.

[12:25] *** anatolyv is now known as anatolyv_

[12:27] *** anatolyv_ is now known as anatolyv

[13:57] <gaal> so, where is everybody today?

[13:58] * anatolyv is right here

[14:13] * nnunley is over there.

[14:13] * Alias_ is EVERYWHERE

[14:14] <gaal> "you said, 'I am as constant as the Northern Star' / I said, 'constantly in the dark, where's that at?'"

[14:35] *** Jooon_ is now known as Jooon

[16:31] *** Aankh|Clone is now known as Aankhen``

[16:44] *** DesreveR is now known as r0nny

[17:18] <azuroth> sha perl six

[17:20] <svnbot6> r8499 | audreyt++ | * backtracking, error-correction-suggesting,

[17:20] <svnbot6> r8499 | audreyt++ |   happier-than-parsec, PGE-match-structure-compatible,

[17:20] <svnbot6> r8499 | audreyt++ |   all-singing all-dancing partial rewrite of PArrow

[17:20] <svnbot6> r8499 | audreyt++ |   and Text.Parser.Rule.

[17:26] <robkinyon> stevan: Yes?

[17:26] *** stevan__ is now known as stevan

[17:27] <stevan> robkinyon: so, p6 "use" 

[17:27] <robkinyon> well, the p6 use semantics

[17:28] <robkinyon> I was actually figuring out how to implement rubygems in Perl

[17:28] <stevan> :)

[17:28] <robkinyon> then, i realized it wasn't a big step to get to p6 use

[17:28] <stevan> a p5 prototype would be a good thing of course

[17:28] <robkinyon> so, everyone understands how we trap the require statement to do arbitrary things (use won't work)

[17:28] <robkinyon> The filesystem part isn't that hard

[17:29] <stevan> there are two things which I htink are important to consider

[17:29] <robkinyon> we just have a DBM::Deep file

[17:29] <robkinyon> that acts as the DB

[17:29] <stevan> the filesystem layout, and the possibility of compiled modules mixed with source modules

[17:29] <robkinyon> my initial plan was to do nothing more than be another site_perl

[17:29] <stevan> yup

[17:29] <stevan> any way we can avoid a DB?

[17:29] <robkinyon> no

[17:30] <stevan> what about some convoluted directory scheme

[17:30] <robkinyon> nonono

[17:30] <robkinyon> "use" still has to work

[17:30] <stevan> well for a prototype it doesnt :)

[17:31] <gaal> context?

[17:31] <stevan> for a "use in the real world" it does

[17:31] <gaal> sounds interesting what you're talking about, guys.

[17:31] <stevan> hey gaal :)

[17:31] <robkinyon> well, i want to release this as an alternative to cpan(plus)

[17:31] <stevan> gaal: we are discussing p6 use sematics being implemented in p5

[17:31] <robkinyon> i'm writing perlgems

[17:31] <robkinyon> if it also implements p6 semantics, that's cool

[17:32] <stevan> robkinyon: I think it might make sense to do a throw-away prototype of the "correct" p6 behavior, then map it to a real-world-usable solution

[17:32] <robkinyon> and, i want it to work with the current CPAN

[17:32] <robkinyon> maybe

[17:32] <robkinyon> i don't have a strategy yet

[17:32] <gaal> robkinyon: you know about kane and rafl's JIB yes?

[17:32] <stevan> I am thinking we could knock out a prototype in a day or two,.. then learn from it

[17:32] <robkinyon> ?

[17:32] <gaal> (I don't know gems, no idea how close that is)

[17:33] <robkinyon> what's JIB?

[17:33] <gaal> robkinyon: afaik it's a packaging+dep+etc system based on the .deb format

[17:33] <stevan> I think it is a package manager, but I havent been following the development much 

[17:34] <robkinyon> oh, o

[17:34] <robkinyon> ok

[17:34] <gaal> robkinyon: misc/sixpan/JIB

[17:34] <robkinyon> rubygems is this - it allows you to install multiple versions of the same distro, then specify which one you want when you load it

[17:34] <robkinyon> it also does deps and all that other good stuff

[17:35] <gaal> rings a bell or two :)

[17:36] <robkinyon> in ruby, you have to use a new keyword called requiregem

[17:36] <robkinyon> but, new keywords in ruby are easy

[17:36] <gaal> they're easy in p6 too :)

[17:36] <chris2> it's not a keyword, just a method

[17:36] <robkinyon> in perl, just put an interceptor in @INC, but you have to use BEGIN { require "...."; } instead of use "..." because use needs a bareword

[17:36] <svnbot6> r8500 | audreyt++ | * Completed multi-positional error reporting.  To wit:

[17:36] <svnbot6> r8500 | audreyt++ |     $ ghc --make -main-is Text.Parser.Rule.main -isrc src/Text/Parser/Rule.hs src/cbits/fpstring.ou

[17:36] <svnbot6> r8500 | audreyt++ |     $ ./a.out '.abc|def' 'xyz'

[17:36] <svnbot6> r8500 | audreyt++ |     Expecting: 'def' at column 1

[17:36] <svnbot6> r8500 | audreyt++ |            or: 'abc' at column 2

[17:37] <gaal> audreyt: ping

[17:37] <robkinyon> chris2: a "keyword" as a perler understands it is a method in kernel or module

[17:37] <audreyt> gaal: hey

[17:37] <chris2> and please dont copy rubygems without talking to packagers first...

[17:37] <chris2> robkinyon: oh, okay

[17:37] <audreyt> just checking back right before sleep

[17:37] <robkinyon> i'm not implementing a p6 item

[17:37] <audreyt> thank $deity that $job day is over and tomorrow I can actually IRC

[17:38] <gaal> audreyt: openfoundry's login/new user system is somewhat borked

[17:38] <robkinyon> chris2: I'm implementing a p5 package installer

[17:38] <audreyt> gaal: session expiry problems?

[17:38] <robkinyon> it just so happens that i'll probably implement a lot of the p6 semantics

[17:38] <gaal> we have a patch pending from new committer anatolyv but he couldn't auth

[17:38] <audreyt> weird

[17:38] <chris2> robkinyon: and you want it to be like gems?

[17:38] <gaal> he can login to the web site, but not svn.

[17:38] <audreyt> is he listed in the project members?

[17:38] <gaal> unfortunately he's offline now.

[17:38] <robkinyon> chris2: That was my initial inspiration, yes

[17:39] <chris2> robkinyon: you may want to read http://rpa-base.rubyforge.org

[17:39] <robkinyon> ok, thanks!

[17:39] <gaal> audreyt: hmm, no.

[17:39] <chris2> robkinyon: rubygems has some problems

[17:39] <gaal> but he did receive the invitation and reply to it (and log in, etc.)

[17:39] <robkinyon> chris2: Gah!

[17:40] <robkinyon> i want to write another CPAN installer, not another CPAN

[17:40] <audreyt> gaal: so add the list manually?

[17:40] <chris2> then you only need a half of rpa :)

[17:40] <audreyt> it could happen if (say) he somehow registered manually

[17:40] <audreyt> without carrying the invitation letter sessionid

[17:41] <robkinyon> LOL

[17:41] <robkinyon> actually, i'm not going to use much of rubygems's architecture at all

[17:41] <chris2> perl probably deals differently with the problems of gems already...

[17:42] <chris2> but stuff like one-directory is one package is obviously bad

[17:42] <robkinyon> Perl doesn't solve the problems gems solves, which is why i want to write something

[17:42] <gaal> oh: I have him as "member unregistered". how do I change that manually?

[17:42] <robkinyon> which actually creates several big problems in Perl, like how to have mod_perl1 and mod_perl2 installed at the same time

[17:44] <gaal> ...I don't see a way of doing that.

[17:44] <stevan> audreyt: what is needed for container support in PIL^N?

[17:44] <robkinyon> brb

[17:44] <audreyt> stevan: some of my timeslice tomorrow :)

[17:44] <stevan> ah

[17:44] <audreyt> stevan: I only had 1.5hr to hack today...

[17:44] <stevan> are you writing it in PIL^N or in Haskell?

[17:44] <audreyt> and I was very tired from $job, so I cloned PGE instead

[17:45] <stevan> :D

[17:45] <audreyt> all methods in PIL^N but with haskell-side wrapper types

[17:45] <stevan> ok

[17:45] <audreyt> not unlike (say) autoboxing Haskell.Integer into Perl6.Int

[17:45] <audreyt> gaal: hm... "avar"?

[17:46] <audreyt> gaal: if you know the email addr, try matching against that in "Edit Staff"

[17:46] <stevan> I was thinking about boxed types lately (dreaming about them last night actually), so I thought I might try to put together the list of methods and (sub|super)class relationships needed for them

[17:46] <gaal> audreyt: no avorobey @ ...

[17:46] * avar waves!

[17:47] <gaal> avar: hey :)

[17:47] <audreyt> avar: hey

[17:47] <avar> ;)

[17:47] <audreyt> avar: so you can login to the web?

[17:47] <avar> to that pugs thing?

[17:47] <audreyt> yeah

[17:47] <audreyt> rt.openfoundry.org

[17:47] <avar> last I checked

[17:47] <audreyt> what's your userid there again?

[17:47] <avar> avar

[17:47] <gaal> nono, avar ne anatolyv

[17:48] <audreyt> very confusing

[17:48] <avar> ?eval "avar" ne "anatolyv"

[17:48] *** evalbot_8498 is now known as evalbot_8500

[17:48] <evalbot_8500> bool::true 

[17:48] <avar> perl confirms it

[17:48] <avar> ;)

[17:48] <audreyt> in any case, I need to crash now... :-/ approach LCamel_, gugod and/or tcliou here for troubleshooting... if they are not around now, maybe ~6hrs later. if it's not fixed when I wake up, I'll handle it tomorrow

[17:49] <gaal> okay, thanks :)

[17:49] <audreyt> stevan: excellent! please put it to Perl6-ObjectSpace or anywhere else you see fit

[17:49] <stevan> I was going to prototype in p5 firtst,.. so probably there yes

[17:49] <stevan> (plus I can use the p5 based class visualizer :)

[17:50] <audreyt> cool... see you tomorrow when my brain is with me :)

[17:50] * audreyt waves &

[17:50] <stevan> excellent,.. have a good sleep

[17:50] * stevan wanders off too &

[17:51] <nothingmuch> audreyt++

[17:51] <avar> karma audreyt 

[17:51] <jabbot> avar: audreyt  has neutral karma

[17:51] <avar> karma ++audreyt 

[17:51] <jabbot> avar: ++audreyt  has neutral karma

[17:51] <avar> ;)

[17:52] <hcchien> avar: can you try to login to openfoundry again to check if yoou are listed in member.

[17:52] <hcchien> I just add you as the project member.

[17:53] <avar> just logged in again

[17:53] <avar> pugs is in "my projects"

[17:55] <gaal> hcchien: can you please do the same for new user "anatolyv"?

[17:55] <hcchien> gaal: let me try it

[17:57] <hcchien> gaal: I can't find the user. does he register?

[17:57] <svnbot6> r8501 | audreyt++ | * treat the input as a long "line" for now.

[17:58] <gaal> hcchien: he had weird problems registering. he logged in and accepted the TOS etc, and got a message everything was successful, but the next thing he tried to do on the web told him he needed to log in again.

[17:59] <gaal> his email shows up as a "member, unregistered"

[18:04] <hcchien> gugod: 

[18:04] <hcchien> gugod: around?

[18:07] <gaal> afk &

[18:31] <gugod> hcchien: yes sir?

[18:32] <hcchien> gugod: gaal said the user "anatolyv" finished the register on openfoundry. but we still see the user in status 'unregister'. if you can help us to check it?

[18:36] <gugod> hcchien: I don't really know how to deal with problem like that. but it seemes to be a known bug which is really difficult to reproduce, and I'll fix that bug in the future. But for this case, I'll just delegate to lcamel to just set the registration state of user anatolyv

[18:37] <hcchien> oh, ok. since it's a known bug. :p

[18:40] <gugod> yes. but it happened only 2 or 3 times last year

[18:41] <gugod> in fact, we didn't know how to reproduce that yet

[19:12] <particle_> seen juerd?

[19:12] <jabbot> particle_: juerd was seen 71 days 19 hours 32 minutes 59 seconds ago

[19:14] <rep> what's your opinion on prolog?

[19:15] <azuroth> morning

[19:15] <azuroth> morning

[19:17] <rep> morning

[19:18] <azuroth> err. whoops.

[19:18] <azuroth> hullo rep

[19:19] <azuroth> I'm looking for a video clip but seem to have misplaced it

[19:22] <azuroth> prolog, rep? I've tried to grok it a bit, but never really...

[20:29] <gaal> hcchien, gugod: thanks

[20:43] <azuroth> heh heh heh

[20:43] <azuroth> take it

[20:44] <nothingmuch> particle_: don't trust jabbot, it's been away for a while

[20:47] <Khisanth> you could use seenserv

[20:55] <particle_> seenserv?

[20:56] <particle_> thanks for the info, nm. found what i needed without juerd this time :)

[20:59] <Khisanth> you can do /msg seenserv seen particle_

[20:59] <nothingmuch> what are the servs available?

[20:59] <nothingmuch> nickserv, memoserv, seenserv, chanserv

[21:38] *** _SamB_ is now known as SamB

[21:48] <Khisanth> nothingmuch: well some places have a hostserv too

[21:49] <nothingmuch> what's that?

[21:50] <azuroth> my friend is reading out this story, "six inches." it's interesting.

[21:50] <Khisanth> it does things similar to the freenode cloaks

[21:52] <wolverian> six inches certainly sounds interesting..

[21:53] <azuroth> ever heard of an author, charles bukowski?

[21:53] <azuroth> it's entirely not what you'd expect from both him and the story's name

[22:04] <wolverian> azuroth, I dimly remember hearing the name. I'll check it out later, thanks!

[22:11] <azuroth> he's an alcoholic, but it's very amusing

[22:34] <azuroth> A witch shrinks her boyfriend to 6 inches, and fucks herself with her ;)

[22:34] <azuroth> him, not her

[22:34] <azuroth> etc

[22:36] <azuroth> Don't we all fantasise about that???

[23:25] <Khisanth> only the suicidal ones

[23:45] <Juerd> 22:02 < particle_> thanks for the info, nm. found what i needed without juerd this time :)

[23:45] <Juerd> particle: yay :)

