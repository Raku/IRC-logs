[00:01] <kungfuftr> stevan: the output wanted?

[00:02] <stevan> it should duplicate the split version

[00:05] <kungfuftr> bah, can't seem to get it

[00:06] <stevan> kungfuftr: not a big deal

[00:07] <kungfuftr> stevan: iirc, the last time i did it, it required fooling perl, so not hugely easy now that it comes to mind

[00:12] <stevan> this /(?:[A-Z]<\s+|[A-Z]<|\s+>|>|\w+|\s+)/g is capturing all the peices

[00:12] <stevan> I can just glue them back together 

[00:18] <kungfuftr> bah, nearly

[00:46] * nothingmuch would like a spare perl6.vim file, if anyone has it

[00:47] <nothingmuch> can't reach luqui's site

[00:49] <kungfuftr> stevan: yar, split is a perl opcode... erple

[00:51] <stevan> kungfuftr: it actually doesnt matter now, because I just realized that rx:perl5{} only works in boolean context anyway

[00:51] <stevan> so I cannot get the split values

[00:52] <kungfuftr> ah, okay.. that not a bug?

[00:52] <stevan> it is a bug

[00:52] <stevan> or rather an un-implemented feature

[00:52] <stevan> regexp support is very limited right now

[00:52] <kungfuftr> =0)

[00:53] <stevan> bascially another more than simple match and substitution is not support

[00:58] <Darren_Duncan> another SQL::Routine commit -- still a lot of translation to go ...

[00:58] <stevan> hey Darren_Duncan 

[00:58] <Darren_Duncan> I must leave computer for 1.5 hours, request at least an hour afterwards before release

[00:58] <Darren_Duncan> hey Stevan

[00:59] <Darren_Duncan> FYI, I still have more to do before you have at it

[00:59] <stevan> Darren_Duncan: I figued that

[00:59] * kungfuftr still building ghc 6.4

[00:59] <stevan> Darren_Duncan: take your time, I wont be able to work on it until next week anyway

[00:59] <Darren_Duncan> sounds good ... and I'll alert you when you no longer have to wait

[01:00] <stevan> Darren_Duncan: have you seen all the ports iblech did?

[01:00] <Darren_Duncan> I noticed that someone did a lot of ports, but didn't remember their name

[01:00] <stevan> all by iblech

[01:00] <stevan> but you have to go,.. dont let me keep you

[01:00] <Darren_Duncan> good for iblech

[01:00] <Darren_Duncan> yep, back in 90 mins

[01:07] <jabbot> pugs - 1214 - large SQL::Routine update - continuing P

[01:12] *** theorbtw1 is now known as theorbtwo

[01:16] <stevan> hey theorbtwo 

[01:16] <theorbtwo> Allo, stevan!

[01:16] <autrijus> err, split regex.

[01:17] <autrijus> I'll look at it after I finish my slides.

[01:17] <stevan> autrijus: :)

[01:17] <jabbot> pugs - 1215 - first upload of perl6 module Pod::Stream

[01:17] <stevan> autrijus: either that, or make rx:perl5:g{} return an array

[01:17] <stevan> which ever is easier

[01:17] <stevan> and no rush

[01:17] <autrijus> ok.

[01:17] <stevan> I am just goofing around with a Pod parser

[01:17] <autrijus> the later is easier.

[01:17] <stevan> see ext/PodStreamParser

[01:19] <stevan> autrijus++ thanks

[01:26] <autrijus> perl6.vim is in.

[01:27] <jabbot> pugs - 1216 - * perl6.vim, courtesy of luqui

[01:28] <ingy> hola

[01:29] <autrijus> Qiang++ # http://use.perl.org/~Qiang/journal/

[01:29] <autrijus> keeping in touch with community++

[01:45] <kcwu> autrijus: perl6.vim is broken, only half part left

[01:46] <autrijus> fixed

[01:47] <jabbot> pugs - 1217 - * add missing half of perl6.vim

[01:57] <jabbot> pugs - 1219 - * specify some function signature, then 

[01:57] <jabbot> pugs - 1218 - * implement ?| and fix contextual logica

[02:38] <Darren_Duncan> okay, I'm back from my non-computer activities

[02:39] <Darren_Duncan> If I remember, autrijus, its about 10:40 where you are now, right?

[02:39] <Darren_Duncan> Anyway, I'd like another hour at least to get stuff done, will provide updates

[02:40] <kcwu> right

[02:44] <theorbtwo> Hmm, anybody remember the URL for the stream from YAPC::Tapei ?

[02:44] <scw> rtsp://140.110.17.6/yapc.sdp

[02:58] <autrijus> ok. another hour is ok.

[03:00] <theorbtwo> Oh, the stream is only of the translator.

[03:01] <scw> theorbtwo: Err, no. Now the speaker is using Chinese

[03:01] <theorbtwo> Oh.

[03:02] <theorbtwo> gmplayer -rtsp-stream-over-tcp rtsp://140.110.17.6/yapc.sdp -fps 25 !

[03:03] <theorbtwo> Of course, I can't understand a word he's saying.

[03:12] <Corion> Did Test.pm break?

[03:13] <kungfuftr> Corion: not unless it's happened post 1208

[03:14] <Corion> kungfuftr: I get 'unexpected "s"' in blib6\lib\Test.pm at line 149, column 1

[03:14] <Corion> (I'm on 1219)

[03:14] <Corion> (Win2k, but I guess that shouldn't matter. But maybe it matters that I'm on GHC 6.2)

[03:15] <autrijus> fixing.

[03:17] <Corion> autrijus: Cool :)

[03:21] <autrijus> Corion: please check

[03:25] <Corion> ... checking

[03:26] <Corion> Looks much better - tests that failed before now pass.

[03:26] <kungfuftr> lol, nice to see sam looking like a garden gnome (http://flickr.com/photos/obra/7453793/in/pool-35323643@N00/)

[03:27] <jabbot> pugs - 1220 - * fix ?? breakage, thanks Corion

[03:28] <Corion> Oooo - one TODO test passes - t/operators/operator.t - 1/29 unexpectedly succeeded

[03:28] * Corion bows to miyagawa

[03:28] <Darren_Duncan> autrijus, I still need another half-hour or so until the next commit

[03:29] <Corion> wtf ? "Failed 1/145 test scripts, 99.31% okay. 0/3198 subtests failed, 100.00% okay." ? Did you go on a mad bugfixing spree? (win2k/r1220)

[03:30] <autrijus> k

[03:30] <kungfuftr> youkoso miyagawa

[03:30] <Corion> (or did I miss something and most of Perl6 now already works?) Anyway - really cool !

[03:30] <miyagawa> chees

[03:30] <miyagawa> cheers

[03:32] <kungfuftr> there's a YAPC in Tokyo?

[03:33] <clkao> in taipei

[03:33] <kungfuftr> supposedly there's one in 2006 in tokyo

[03:34] <theorbtwo> I don't know why, but hearing languages that I don't understand a word of, then having suddenly a word or two in English, then continuing on, seems amuzing to me.

[03:35] <clkao> hopefully

[03:36] <kungfuftr> excellent, must get another excuse to visit our yokohama office next year

[03:36] * Corion falls into bed. Good night all!

[03:37] <theorbtwo> Boggle.

[03:37] <theorbtwo> I've never seen him up this late before.

[03:40] <theorbtwo> We have a release in an hour?

[03:53] <autrijus> asavige!

[03:54] <asavige> Fore! mad golfer reports Files=144, Tests=3198 all tests successful on WinXP (1 subtest unexpectedly succeeded)

[03:56] <autrijus> yay!

[03:56] <autrijus> which is the unexpectedly succeeded one?

[03:56] * kungfuftr still waits on ghc 6.4 to compile

[03:57] <Khisanth> unexpectedly succeeding tests are always amusing :)

[03:58] <asavige> t/operators/operator 1/29 unexpectedly succeeded running with prove -v now

[03:58] <Darren_Duncan> another incremental SQL::Routine commit is in ...

[03:58] <Darren_Duncan> autrijus, I have now done the minimum I wanted to have in prior to the 6.0.13 release ...

[03:59] <Darren_Duncan> tell me how much time left until you want to go, in case I were to try another increment commit

[03:59] <Darren_Duncan> or if you want to go asap, then I'm fine with it

[03:59] <obra> he's speaking right now

[04:00] <Darren_Duncan> that was quick ... he only posted a few minutes ago

[04:00] <asavige> prove -v  on operator.t: not ok 20 - boolean or (?|) returns 0 or 1 # TODO (line 56 Expected: 0 Got: )

[04:01] <Darren_Duncan> I'm away from computer for next 10-20 mins

[04:01] <Darren_Duncan> will run another make/make test in absense

[04:01] <Darren_Duncan> got rev 1222

[04:03] <theorbtwo> It's a pannel discussion.

[04:07] <jabbot> pugs - 1222 -  r3551@speights:  samv | 2005-03-27 12:2

[04:07] <jabbot> pugs - 1221 - SQL::Routine perl6ification major increm

[04:08] <asavige> I guess that means operator.t todo test on line 54 (2 ?| 3 equals 1) was the one that "unexpectedly succeeded"?

[04:08] <Darren_Duncan> now on 'make test' for 1222

[04:09] <theorbtwo> You're already one behind, D_D, but 1223 won't change any tests, but only because testgraph doesn't have any.

[04:10] <Darren_Duncan> that's life

[04:14] <theorbtwo> Next up: Leon Brocard

[04:14] <theorbtwo> Exploiting Other Enterprises' Web Services

[04:14] <theorbtwo> Oh, but not for another 2 hours.

[04:14] <theorbtwo> Congrats, Ovid!

[04:14] <Ovid> Thanks, but it turns out it's not over yet.  There's a ringleader out there.

[04:15] <Ovid> Does anyone here have the capability of doing a reverse cell phone lookup?

[04:15] <Darren_Duncan> result of testing 1222 is 'All tests successful (1 subtest UNEXPECTEDLY SUCCEEDED)'

[04:17] <jabbot> pugs - 1223 - testgraph: Fix divide by zero when test 

[04:17] <theorbtwo> Interesting; I didn't see any dark red from mine.

[04:19] <Darren_Duncan> continuing another segment ...

[04:36] <autrijus> Darren_Duncan: take your time

[04:36] <autrijus> I'm still pending ingy's fix

[04:36] <asavige> In pugsrun/02-dash-n.t I noticed weird "&>" redirection. what does it mean? why not just use ">" ?

[04:36] <Darren_Duncan> I hear you

[04:37] <jabbot> pugs - 1224 - * ?| is no longer TODO

[04:37] <autrijus> I have no idea.

[04:45] <asavige> 1224 make test all ok on WinXP now (unexpectedly succeeded gone)

[04:59] <autrijus> cool.

[04:59] <autrijus> Darren_Duncan, ingy: you have 90 more minutes.

[04:59] <Darren_Duncan> thanks for the notice

[05:00] <autrijus> then I do preflight check

[05:00] <autrijus> then I'll release before my talk.

[05:00] <Darren_Duncan> that's until 23:30 my time

[05:00] <Darren_Duncan> sounds good ...

[05:00] <autrijus> :)

[05:00] <autrijus> Darren_Duncan++

[05:00] <autrijus> ingy++

[05:01] <autrijus> # literally, eleventh hour

[05:01] <Darren_Duncan> after all, what way to be a master presenter than to say to the audience "and you can get it RIGHT NOW"

[05:01] <Darren_Duncan> better then

[05:01] <Darren_Duncan> immediate gratification and all that

[05:02] <Darren_Duncan> I also meant 22:30 my time

[05:02] <autrijus> :)

[05:02] <LCamel> ;)

[05:02] <Darren_Duncan> :)

[05:03] <Darren_Duncan> hey, everyones doing it

[05:03] <obra> Hi LCamel 

[05:03] <tcliou> :P

[05:03] <theorbtwo> $$(':')::Crazzy

[05:04] <autrijus> o/~ crazy / toys in the attic / we are crazy / truly gone fishing o/~

[05:04] <LCamel> hi, obra ;)

[05:09] <Khisanth> el gamel :)

[05:09] <autrijus> lol :)

[05:10] <LCamel> :)

[05:40] <Darren_Duncan> another SRT increment committed ... starting next one ...

[05:43] <autrijus> the talk sequence changed.

[05:43] <autrijus> you have _another_ 90 mins.

[05:44] <hcchien> autrijus' talk would be startted about 4pm (GMT+8) ha

[05:46] <autrijus> jserv is interested in parrot :D

[05:46] <Darren_Duncan> that's nice to know ... however I probably won't take advantage of it since I have to wake up early tomorrow

[05:46] <autrijus> (he's this mad kaffe vm guy in taiwan I like very much)

[05:46] <autrijus> Darren_Duncan: ok =) let me know before you go sleep

[05:46] <Darren_Duncan> will do

[05:47] <jabbot> pugs - 1225 - another large SQL::Routine perl6ificatio

[05:47] <Darren_Duncan> BTW, I don't know if anyone is doing this, but in the increment after the next one I expect to use multi-methods a bit

[05:47] <Khisanth> autrijus: as in the Java thing?

[05:48] <autrijus> Khisanth: yup.

[05:48] <autrijus> he doesn't like java

[05:48] <autrijus> but he likes java vm :)

[05:48] <autrijus> and we both think that parrot has this strong Right Thing feeling.

[05:48] <Khisanth> that ... seems a little odd :)

[05:48] <Khisanth> so he just likes writing VMs?

[05:49] <autrijus> yeah.

[05:49] * Khisanth wonders how long it will be before someone writes a Perl -> Java bytecode thingy

[05:50] <Khisanth> or does one already exist?

[05:50] <autrijus> parrot->jvm?

[05:50] <autrijus> not sure.

[05:51] <Khisanth> I mean just perl->jvm

[05:52] <autrijus> oh. no. there's Inline::Java

[05:52] <autrijus> but not compiled

[05:52] <autrijus> finally writings pugs slides now

[05:52] <autrijus> (was writing perl6/parrot slides)

[05:52] <autrijus> I just love this example:

[05:52] <autrijus> % pugs

[05:52] <autrijus> pugs> { $_ ?? $_ * &?BLOCK( $_ - 1 ) :: 1 }.(10)

[05:52] <autrijus> 3628800

[05:52] <Khisanth> was thinking more along the lines of how pugs can output stuff to run on parrot :)

[05:53] <autrijus> src/Compile/Parrot.hs

[05:53] <autrijus> it runs mandelbrot, as we know :)

[05:53] <autrijus> (not much else, but hey, it's improving)

[05:54] <Khisanth> because it needs more development or because parrot needs more development?

[05:54] <ingy> autrijus: 1226

[05:55] <autrijus> both, but mostly my side

[05:55] <autrijus> I need to switch to TH2 entirely

[05:56] <Khisanth> there is already a 2?

[05:56] *** cnhackTNT is now known as cnhackTNT|WC

[05:56] <autrijus> TH2 is GHC 6.4's TH

[05:57] <jabbot> pugs - 1226 - Make things install to right places

[05:59] <gaal> morning all

[05:59] <autrijus> yo gaal.

[06:00] <Darren_Duncan> mornin

[06:01] <gaal> ooh, preflight checks

[06:04] <gaal> tests broke on mingw again :(

[06:05] <autrijus> !.

[06:05] <autrijus> break how.

[06:05] <autrijus> ingy: your bug?

[06:05] <pasteling> "gaal" at 192.115.25.249 pasted "mingw make test fails" (5 lines, 463B) at http://sial.org/pbot/8662

[06:06] <gaal> we had something like this a few days back, Schwern had a few fixes

[06:06] <autrijus>  aw!

[06:06] <autrijus> ingy: you should not put the */*.t etc to the command line

[06:06] <autrijus> they belong to -e body!

[06:07] <autrijus> (win32 does not expand htem)

[06:07] <kungfuftr> *blink* okay... now ghc has actually finished building

[06:09] <gaal> errrr, doh. tests DO run; somehow my environment forgot HARNESS_PERL and PERL6LIB.

[06:09] <ingy> ?

[06:10] <ingy> I made no changes to test stuff

[06:10] <gaal> at first none of my test ran, but that was apparetnly my mistake for not setting up the env right.

[06:10] <autrijus> hrmph.

[06:10] <autrijus> weird

[06:11] <autrijus> HARNESS_PERL is supposed to be set up as part of make test

[06:11] <autrijus> ingy: ok, prolly not your fault

[06:11] <gaal> this is weird though, it's the same window i've had open for a few days now and i did set up the env in it

[06:11] <autrijus> I'll try to fix.

[06:12] <gaal> make test doesn't skip rules.Disabled

[06:12] <gaal> and t/Dialects/perlego/sigilless.t dies

[06:12] <gaal> Failed 5/148 test scripts, 95.95% okay (mingw)

[06:13] <pasteling> "gaal" at 192.115.25.249 pasted "also, some compilation warnings" (26 lines, 1.1K) at http://sial.org/pbot/8663

[06:15] <autrijus> the warnings are expected.

[06:15] <gaal> k

[06:16] <gaal> sigilless dying is weird, because i treated it with an eval yesterday exactly so it doesn't die (and the treatment worked)

[06:19] <autrijus> LCamel: foundry is broken just now.

[06:19] <autrijus> did anyone do anything?

[06:19] <autrijus> it worked a few mins ago.

[06:23] <Darren_Duncan> I didn't do nothin'

[06:23] <autrijus> sure, "anyone" here is limited to foundry folks :-/

[06:25] <LCamel> autrijus: i see.

[06:27] <Darren_Duncan> upon further investigation, the problem seems specific to the web server ...

[06:27] <Darren_Duncan> a 'svn update' still works just now, between 2 failings to load a web page

[06:27] <Darren_Duncan> so it appears I will still be able to commit tonight

[06:27] <autrijus> preflight #1

[06:28] <Darren_Duncan> am I not allowed to commit first?

[06:28] <gaal> r1226, autrijus?

[06:28] <autrijus> http://wagner.elixus.org/~autrijus/tmp/Perl6-Pugs-6.0.13.tar.gz   

[06:28] <autrijus> Darren_Duncan: if you can still commit, sure., but chance are you can't.

[06:28] <firzen> Why I always be off line? mIRC display "Your connection was lost"

[06:28] <Darren_Duncan> I can update

[06:28] <autrijus> update requires no auth.

[06:28] <autrijus> auth requires the web server.

[06:29] <Darren_Duncan> I see

[06:29] <autrijus> again, for preflight, platform/ghcversion/the "how many tests passed" line

[06:29] <autrijus> is encouraged.

[06:29] <Darren_Duncan> right, I'll save any commit of what I'm on now for tomorrow

[06:29] <Darren_Duncan> will now preflight check ...

[06:30] <gaal> Disabled is still begin tested

[06:30] <autrijus> gaal: tarball?

[06:30] <gaal> (as of r)

[06:30] <autrijus> tarball please.

[06:30] <gaal> sorry, don't have the tarball not yet

[06:30] <autrijus> svn is broken. :)

[06:30] <gaal> ahh

[06:31] <autrijus> I can't commit any of fixes ;)

[06:31] <gaal> one sec

[06:32] * kungfuftr also notes "make test" is broken

[06:32] <autrijus> kungfuftr: tarball?

[06:32] <autrijus> please ignore svn and check tarball

[06:33] <kungfuftr> k

[06:34] <Darren_Duncan> tarball is downloaded ... now running 'make'

[06:36] <gaal> make test is running. it triggered a regular make first, which of course didn't have any work to do

[06:37] <autrijus> that is fine.

[06:37] <gaal> getting some errors in examples; details soon

[06:38] <gaal> mingw/6.4/Failed 2/142 test scripts, 98.59% okay. 14/3196 subtests failed

[06:38] <autrijus> ok. details?

[06:40] <pasteling> "gaal" at 192.115.25.249 pasted "fails in examples" (156 lines, 5.6K) at http://sial.org/pbot/8664

[06:41] <gaal> this is still mingw/64; checking on linux/6.4 now

[06:42] <autrijus> ok.

[06:42] <gaal> looks like i have permission problems and temp files don't get written?

[06:42] <autrijus> yeah.

[06:42] <autrijus> disabling those tests for 6.0.13.

[06:42] <autrijus> (not critical to fix.)

[06:42] <autrijus> (and golf actually works)

[06:43] <gaal> isn't it just find . -type d | xargs chmod +xwr    ?

[06:43] <autrijus> purr.

[06:43] <autrijus> assuming there's find and xargs and chmod.

[06:43] <autrijus> preflight #2.

[06:44] <autrijus> http://autrijus.org/dist/Perl6-Pugs-6.0.13.tar.gz

[06:44] <gaal> just checked.. it isn't just :(

[06:44] <autrijus> 17 mins.

[06:44] * autrijus still has 7 slides.

[06:44] <autrijus> to write, that is.

[06:46] <gaal> results from preflight#1 on linux/6.4: All tests successful, 1 subtest skipped.(<<--- basic.t)

[06:46] <gaal> 1-basic that is

[06:46] <autrijus> ok.

[06:47] <kungfuftr> still running tests on freebsd

[06:47] <gaal> compiling #2 on linux and on mingw

[06:49] <gaal> #2 still fails in examples :(

[06:49] <gaal> no

[06:49] <gaal> my bad

[06:50] <gaal> untarred wrong package, gaal--

[06:50] <gaal> sorry about that :)

[06:51] <Darren_Duncan> now on 'make test' ...

[06:55] <gaal> still fails on examples/, new tarball :(

[06:56] <ingy> pugs is released?

[06:56] <autrijus> hrmph.

[06:56] <autrijus> ingy: no, preflight

[06:56] <autrijus> gaal: there is no t/examples in new tarball.

[06:57] <kungfuftr> autrijus: all pass (1 skip [1-basic]) on freebsd 4.11

[06:57] * gaal is puzzled

[06:57] <Darren_Duncan> tests done, all passed, there were 3196 tests in 142 files, no problems here

[06:58] <Darren_Duncan> the t/1-basic thing results in 1/16 skipped, rest successful

[06:59] <Darren_Duncan> I'm on Mac OS X 10.3.8 with GHC 6.2

[07:00] <gaal> aw :( i forgot the screwdriver in the engine ESCdd reused the pf1 url.

[07:00] <Darren_Duncan> I'm about to sign off for the night ... any last requests?

[07:03] <Darren_Duncan> good luck with the delivery

[07:06] <gaal> tests are running, and the coffee is high.

[07:08] <gaal> mingw/6.4: All tests successful, 1 subtest skipped.

[07:10] <autrijus> ok, released.

[07:10] <gaal> sorry for the delay earlier :(

[07:11] <kungfuftr> yay

[07:12] <autrijus> http://pause.cpan.org/incoming/Perl6-Pugs-6.0.13.tar.gz

[07:13] * gaal is off to $work

[07:14] <mugwump> Releasing software while you're translating a talk!?!

[07:14] <autrijus> yup.

[07:15] * kungfuftr offers autrijus some crack

[07:16] <Khisanth> multitasking++ :)

[07:17] *** cnhackTNT|WC is now known as cnhackTNT

[07:23] <asavige> Perl6-Pugs-6.0.13.tar.gz seems to be missing new t/README file and t/examples, t/Dialects, t/kwid, t/Synopsis dirs

[07:23] <autrijus> yes.

[07:23] <autrijus> sadly.

[07:23] <autrijus> sorry for that. :-/

[07:23] <asavige> cool. Not showstoppers

[07:25] <asavige> better than crack is blue sugar cubes from the frig (Larry does that) Anyone know what is blue sugar cubes? Is that an American thing?

[07:27] * Khisanth has never seen blue sugar cubes

[07:28] <fritzz> http://www.google.ca/search?hl=en&q=%22blue+sugar+cubes%22&meta=

[07:28] <fritzz> weird

[07:29] * q[acme] plays with pugs

[07:29] <asavige> Larry mentions it here http://www.nntp.perl.org/group/perl.perl6.language/19473

[07:30] <Khisanth> asavige: I seem to recall a similar line in one of the matrix movies

[07:32] <cm> I believe it was not about sugar cubes there :|

[07:33] <Khisanth> yes but same idea?

[07:34] <nothingmuch> morning

[07:37] <kungfuftr> q[acme]: what happened to giving up programming?!

[07:38] <q[acme]> kungfuftr: shush

[07:38] <kungfuftr> q[acme]: remind me... i owe you beer

[07:39] <Khisanth> kungfuftr: there wasn't a Programmers Anonymous to be found ;)

[07:39] <kungfuftr> Khisanth: hhhmmm... there might be money in this... self-help books for programmers

[07:40] <Khisanth> kungfuftr: already exist

[07:40] <kungfuftr> =0o

[07:40] <kungfuftr> lies!

[07:41] * nothingmuch wonders if anyone can keep with iblech's productivity

[07:41] <nothingmuch> and link all the tests he writes

[07:42] <Khisanth> all those "Practical $programming_language [Programming]?" books :)

[07:42] <Khisanth> link?

[07:43] <nothingmuch> Khisanth: the backlinks

[07:43] <nothingmuch> http://nothingmuch.woobling.org/pugs_test_status

[07:43] <nothingmuch> browse S02, for example

[07:43] <nothingmuch> you see links to the tests under headers

[07:44] <nothingmuch> and also links to the tests as little superscripts in the docs themselves

[07:44] <Khisanth> hmm no tests for rules yet?

[07:44] <nothingmuch> i don't know

[07:44] <nothingmuch> don't think so

[07:44] <nothingmuch> p5 ones were disabled or something, a while ago

[07:45] <nothingmuch> then again, i'm about 2 days behind

[07:45] <Khisanth> I guess tests for classes and traits should come first

[07:48] <cm> why did you want to give up programming, q[acme]

[07:49] <Khisanth> it was either that or his right foot!

[07:49] <autrijus> my talk starts in 10 minutes.

[07:49] <nothingmuch> good luck, autrijus!

[07:50] <Khisanth> so did you finish the slides yet? ;)

[07:57] <autrijus> http://wagner.elixus.org/~autrijus/p6tu/start.html

[07:58] <Khisanth> ptu?

[07:58] <autrijus> perl 6 the ultimate

[07:58] <q[acme]> hello world!

[07:59] <autrijus> now all you guys are on screen

[07:59] <autrijus> I have 2 mins before my talk

[07:59] <obra> HI YAPC

[07:59] <autrijus> I'll post announcement to p6c during those 2mins

[07:59] <obra>  miyagawa: yeah. let me load my pix

[07:59] <Khisanth> :)

[08:00] <revdiablo> quotes from the silmarillion?

[08:00] <lightstep> in every source file

[08:00] <revdiablo> ah, I wondered where those came from -- didn't recognize them until now :)

[08:01] <revdiablo> I guess 'The Silmaril as lantern light' gave it away

[08:01] <kungfuftr> EAT THE CHEESE OF DOOM!

[08:01] <hcchien> the pugs talk is going to start, and the streaming broadcast is in rtsp://140.110.17.6/yapc.sdp

[08:04] <kungfuftr> bah... what supports real?

[08:04] <hcchien> but it's in chinese. :p

[08:04] <hcchien> quicktime

[08:05] <kungfuftr> yay

[08:05] <kungfuftr> that's one hairy perl geek in front of the camera!

[08:06] * Khisanth wonders why slide 18 is full of smileys

[08:15] <tiw> how can i see it in linux?

[08:16] <kungfuftr> tiw: mplayer with extra codecs should work

[08:17] <jabbot> pugs - 1227 - fuller rows when splitting

[08:17] <tiw> kungfuftr: thanks :)

[08:19] <revdiablo> how long is autrijus' talk?

[08:19] <hcchien> 90 mins

[08:19] <obra> he'll go over ;)

[08:19] <hcchien> ha

[08:19] <revdiablo> ah, I wondered how he was going to fit in all this stuff =)

[08:20] <kungfuftr> i was wondering how he was going to cope with not being able to commit for 90 mins

[08:21] <cm> how can i see it on windows?

[08:21] <kungfuftr> cm: quicktime

[08:21] <Khisanth> kungfuftr: he can start demonstrating pugs development in the middle of the talk

[08:22] <kungfuftr> Khisanth: touche

[08:22] <cm> kungfuftr: thx :o

[08:22] <Khisanth> "he we can see pugs development is going on as I speak"

[08:22] <Khisanth> oops s/he/here/

[08:22] <cm> he speaks crazy language

[08:23] <hcchien> ha, in chinese

[08:23] <kungfuftr> exactly, crazy language

[08:23] <cm> the projector had too many blue sugar cubes

[08:23] <lightstep> howcome no test fail on bsd, but 105 fail on other platforms?

[08:24] <kungfuftr> lightstep: look at the revision numbers

[08:24] <lightstep> oh

[08:24] <Khisanth> hrm

[08:24] <Khisanth> does the Makefile not handle the PCRE stuff?

[08:24] <cm> ..so who in here understands this language? :)

[08:25] <Khisanth> cm: quite a few :)

[08:25] <mugwump> perl6?  what's there not to understand?  ;)

[08:25] <cm> next question: who wants to translate :o)

[08:25] <mugwump> oh han4yu3

[08:26] <kungfuftr> mugwump: what's this i hear about you stealing the clothes from a garden gnome?

[08:26] <cm> mugwump: i thought the point with p6 is that you just write code and it all magically works :o)

[08:26] <kungfuftr> would be nice to see the slides, i would suppose

[08:26] <mugwump> only if you write "retardo" after it :)

[08:27] <Khisanth> hcchien: will the mpeg have subtitles? :)

[08:27] <mugwump> You're the first person to say it looks like a gnome kungfuftr ... I've had "hobbit" recently :)

[08:27] <mugwump> there's some pix on flickr

[08:28] <kungfuftr> mugwump: i've seen you sitting at the bottom of my garden!

[08:28] <hcchien> Khisanth: sounds a little difficult

[08:28] <cm> someone call me when there's code to see on that stream.. :p

[08:28] <mugwump> hanging out with the pixies

[08:28] <hcchien> but slides would be, I guess.

[08:30] <hcchien> maybe we should do a online translation etc. on irc. :D

[08:30] <Khisanth> gah what do you have to do to get PCRE.o to link successfully?

[08:30] <cm> yes you should!

[08:30] <Khisanth> realtime translations?

[08:30] <hcchien> gugod and scw know what he say now. :)

[08:30] <q[acme]> we've been doing realtime translations for the rest of the conference, just the other way

[08:31] <whiteg> autrijus is introducing the history of Perl

[08:32] <whiteg> now hi is talking about the Perl 6

[08:32] <plasmabal> New Genesis Camel  XD

[08:32] <hcchien> he is talking a bout the "languge tax" in perl5

[08:32] <plasmabal> * Faster: Compile into JIT machine code, runnable in embedded system.

[08:32] <clkao> make test wants /usr/bin/pugs??

[08:32] <clkao> why?

[08:33] <plasmabal> * Compatible: Direct call to Perl5/C/Java/PHP/Python/Ruby libarary

[08:33] <kungfuftr> clkao: no idea

[08:33] <lightstep> ugh

[08:33] <plasmabal> * Cleaner: Shorten often-used syntax.

[08:33] <kungfuftr> clkao: autrijus just is "svn's broken"

[08:33] <plasmabal> Powerful: Buile-in OO, Function-O, Doc-O, Logical-O

[08:33] <plasmabal> ooops, another slide.

[08:34] <plasmabal> skip skip skip. XD

[08:34] <plasmabal> Let's see Perl 6

[08:34] <lightstep> pugs comes only on slide 61

[08:34] <hcchien> live demo now

[08:34] <cm> (thx for your translation efforts :)

[08:34] <plasmabal> :)

[08:34] <kungfuftr> ta

[08:35] <whiteg> Perl 6 looks like Perl

[08:35] <plasmabal> THis is a moudle, runabble

[08:35] <plasmabal> it's in test suite.

[08:35] <plasmabal> no trick, just plain code.

[08:35] <Khisanth> hmm those slides work well as a mini perl 6 tutorial

[08:35] <kungfuftr> Perl 6 looks like larry sneezing on the perl5 design spec

[08:35] <plasmabal> vim syntax highlight from perl 5, seems workable on perl 6.

[08:35] <plasmabal> s,from,for,

[08:36] <mugwump> perl 5 design spec?

[08:36] <mjhsieh> live demo

[08:36] <Khisanth> perl 5 has design specs?

[08:36] <kungfuftr> yar, all written afterwards

[08:36] <kungfuftr> =0)

[08:36] <obra> kungfuftr: pointer?

[08:36] <cm> each language construct fits onto a sugar cube ;o

[08:36] <mjhsieh> benchmark

[08:36] <kungfuftr> *slap* i'm taking the piss

[08:36] <whiteg> this module will run tests, print yes, ok or not ok

[08:37] <plasmabal> benchmark is like a box of cholocate: you never know where it runs faster.

[08:37] <plasmabal> it's on perl 5

[08:37] <mjhsieh> two mendelbrot 

[08:37] <plasmabal> let's see it runs on perl 6

[08:38] <mjhsieh> s/mendelbrot/mandelbrot/

[08:38] <plasmabal> see the results

[08:38] <mjhsieh> -O2 vs -O0

[08:38] <plasmabal> i didn't declare the variable as native type, or it'll run faster.

[08:38] <mjhsieh> so it's working

[08:38] <plasmabal> let's see the result, they are all the same.

[08:39] <whiteg> if you download pugs, there are more examples

[08:39] <mjhsieh> sorting

[08:39] <plasmabal> teries.pmc, the test is very important. XD

[08:40] <plasmabal> i can play it until the talk is over.

[08:40] <mjhsieh> no re-compilation needed

[08:40] <plasmabal> Thee items:

[08:40] <plasmabal> * Perl 6: Language specifications:

[08:41] <plasmabal> *Parrot: Run-time environment

[08:41] <plasmabal> * Pugs: Compiler

[08:42] <plasmabal> Three major items, sorry.

[08:42] <whiteg> compile Perl 6 to run on Parrot

[08:42] <nothingmuch> how would you link the testgraph tds to the tests?

[08:42] <nothingmuch> i know the target URL

[08:42] <kungfuftr> plasmabal: no need to worry about being precise, just concise

[08:42] <nothingmuch> but i don't know the HTML to back it

[08:42] <nothingmuch> numbers look bad

[08:42] <plasmabal> kungfuftr: :)

[08:42] <nothingmuch> i need a sort of &nbsp; that fills the entire td and is clickable

[08:42] <obra> nothingmuch: javascript

[08:43] <plasmabal> Why they are called major?  they're going to complete the New Genesis Camel

[08:43] <obra> onClick

[08:43] <plasmabal> Three minor items:

[08:43] <mjhsieh> neon genesis camel

[08:43] <plasmabal> * Ponie: Perl 5 interepter

[08:43] <nothingmuch> obra: i'll try

[08:43] <kungfuftr> nothingmuch: set the css style to "display: block;" and it'll fill the whole area

[08:43] <nothingmuch> kungfuftr: what will fill it?

[08:43] <nothingmuch> &nbsp;?

[08:44] <kungfuftr> it's containing element

[08:44] <nothingmuch> and if it's nothing, will that work?

[08:44] <plasmabal> * PPD: Perl5 translator

[08:44] <nothingmuch> <td style="display: block"><a href="url"></a></td>

[08:44] <kungfuftr> should do

[08:44] <kungfuftr> nah, on the link tag itself

[08:45] <yinjieh> * Ponie: Perl 5 interpreter

[08:45] <plasmabal> yinjieh: my finger flips. :p

[08:45] <yinjieh> plasmabal: :p

[08:45] <mjhsieh> ha

[08:45] <whiteg> * PPD: Perl 5 translator

[08:45] * nothingmuch tries

[08:45] <plasmabal> * PGE: Rules Compiler

[08:46] <whiteg> PGE -> P grammer engine

[08:46] <mjhsieh> P grammer engine

[08:46] <mjhsieh> oops

[08:46] <kungfuftr> too many cooks in the kitchen

[08:46] <plasmabal> FAQ:

[08:46] <plasmabal> * Who many perl 6 programs can run now?

[08:46] * mjhsieh shut-up

[08:46] <plasmabal> s,Who,How,

[08:46] <plasmabal> "Very many"

[08:47] <nothingmuch> kungfuftr++ # works great

[08:47] <kungfuftr> nothingmuch: yay!

[08:47] <plasmabal> * Can Modules on CPAN run?

[08:47] <nothingmuch> if you want to see, just one second

[08:47] <mugwump> plasmabal: ingy's working on that :)

[08:47] <plasmabal> "Many people is working on it"

[08:47] <mjhsieh> excluding OO

[08:47] <plasmabal> * Will Perl 5 stop maintaining?

[08:48] <whiteg> of course not

[08:48] <plasmabal> "ABsolute not"

[08:48] <plasmabal> absolutely

[08:48] <plasmabal> will maintain until nobody use perl5

[08:48] <plasmabal> * DO i need to learn perl 6 from scratch?

[08:48] <kungfuftr> mugwump: is anyone from tpf out there?

[08:48] <plasmabal> "no"

[08:49] <plasmabal> he talks too fast. XD

[08:49] <plasmabal> * I'd like to help, what can i do?

[08:49] <plasmabal> "Don't walk away, complete this talk." XD

[08:49] <lightstep> mplayer doesn't get the stream: it keeps waiting

[08:49] <plasmabal> good, this slide is a diagram. XD

[08:50] <mjhsieh> lightstep: you might need qt

[08:50] <nothingmuch> http://nothingmuch.woobling.org/pugs_test_status/graph.html

[08:50] <whiteg> it's a time table of Perl 6 developing process

[08:50] <whiteg> 2001:perl 6 starts

[08:50] <nothingmuch> it's not perfect

[08:50] <plasmabal> 4 years passed, no single perl 6 line is runnable.

[08:50] <nothingmuch> some line numbers are missing

[08:50] <plasmabal> bwahahaha

[08:50] <nothingmuch> i'm working on that

[08:50] <kungfuftr> nothingmuch: looking good

[08:50] <nothingmuch> but in general you can click most blocks, and get to the corresponding line in the test file

[08:50] <nothingmuch> which will be vimcolorified, as soon as i manage to find a version of perl6.vim

[08:51] <whiteg> everyone bzz

[08:51] <nothingmuch> after that I hope to start coloring the tests themselves

[08:51] <kungfuftr> nothingmuch: perl6.vim is in svn

[08:51] <nothingmuch> good to know

[08:51] <plasmabal> this project is a lie.

[08:51] <nothingmuch> i googled for it, but couldn't download

[08:51] <nothingmuch> plasmabal: it's working now

[08:51] <plasmabal> here comes a nut to implete perl 6.

[08:51] <plasmabal> nothingmuch: i'm translating what au is talking. :)

[08:51] <whiteg> Feb 2005, a crazy strated to do something.

[08:51] <nothingmuch> autrijus managed to save everyone ;-)

[08:51] <nothingmuch> ah

[08:51] <nothingmuch> hehe

[08:52] <nothingmuch> my problem now is that the (platform x revision) matrix creates a bajilion graphs

[08:52] <nothingmuch> and I don't know how to correlate everything

[08:52] <whiteg> 2005-2006:hack hack hack

[08:53] <gaal> hey, if plasmabal is translating au's talk live, and au has a #perl6 window open, so we gett hofstadter-style weird loops?

[08:53] <plasmabal> Perl 6: Make world in steps

[08:53] <kungfuftr> autrijus: skewed vision, eh?

[08:53] <plasmabal> Below is progressing mainly on [email@hidden.address]
[08:53] <plasmabal> 1. call for RFC, collecting ideas

[08:54] <plasmabal> 2. brain-storm in groups, file complete spec suggests

[08:54] <gaal> like videotaping your display as it displays what the vidcam feed

[08:54] <plasmabal> 3. Larry split RFC into chapters, write A one by one

[08:54] <lightstep> i think it's "strange loops"

[08:54] <whiteg> within 15 days

[08:54] <gaal> "strange loops" are weird

[08:54] <plasmabal> his slide is in traditional chinese, i'm translating them into english.

[08:55] <gaal> of course, if the content of #perl6 also mentions the fact that feedback is happening, this makes it doubly weird.

[08:55] <mjhsieh> plasmabal: I can see the slide, then I'll leave it to you

[08:55] <plasmabal> mjhsieh: 􏿽xA9I􏿽xA9I􏿽xA9I

[08:55] <whiteg> so Larry spent half an year to split RFC

[08:56] <kungfuftr> btw, anyone who know trad chinese, simp chinese and japanese AND perl, would be well advised to apply for a job with us!

[08:56] <plasmabal> there're too many rfc so larry in in BSOD.

[08:56] <plasmabal> bwahahaha

[08:56] <whiteg> Larry split RFC according to the chapters of llama

[08:56] <plasmabal> after endless reboot, larry decided to focus one topic at a time.

[08:57] <Khisanth> ah finally ...

[08:57] <plasmabal> 4: design team write corresponding notes, providing examples.

[08:57] <plasmabal> 5. communities provides suggest to A and notes.

[08:57] <plasmabal> 6. Design provide S according to feedback.

[08:57] <tiw> mjhsieh: is the slide in web?

[08:58] <plasmabal> http://wagner.elixus.org/~autrijus/p6tu/slide17g.html#end

[08:58] <mjhsieh> plasmabal: sorry (I can't)

[08:58] <plasmabal> 7. Implementation team will do initial implements

[08:58] <plasmabal> mjhsieh: can't want?

[08:58] <plasmabal> can't what?

[08:58] <plasmabal> 8: Correct S according implemntaiton results

[08:58] <mjhsieh> plasmabal: I can't see the slide through the broadcast

[08:59] <plasmabal> 9: implemntation team do the following implementation.

[08:59] <whiteg> we're now at step9, 

[08:59] <plasmabal> Perl 6: ... (Don't know) XD

[08:59] <plasmabal> * Huffman encoding:

[08:59] <gugod> Perl 6: Driver Complexity Easily

[08:59] * kungfuftr chuckles at craziness between video and chan

[08:59] <gugod> s/Driver/Driving

[09:00] <plasmabal> * Huffman encoding: Easy is easier, hard possible.

[09:00] <whiteg> the more used command should be shorter

[09:00] <plasmabal> 'or' is so often, why we use so many 'or'? use any(...)

[09:01] <plasmabal> * Meet balance between extermes

[09:01] <plasmabal> # Too many operators

[09:01] <plasmabal> # Too little operators

[09:02] <plasmabal> * Accept (words from outside world), respect differences between cultures.

[09:02] <gugod> Accept foriegn languages

[09:03] <gugod> foreign, sorry

[09:03] <plasmabal> Perl 6: The theory of waterbed.

[09:03] <kungfuftr> ullo ij1iao 

[09:03] <plasmabal> * Press here

[09:03] <gugod> Perl 6: Waterbed Theory

[09:03] <mugwump> why use any() when you can use the ∀ operator?  :)

[09:03] <mugwump> blast

[09:03] <plasmabal> * Pop there

[09:04] <lightstep> isn't that forall?

[09:04] <mugwump> er, yes, all()

[09:04] <plasmabal> * The complexity is a constant

[09:04] <mugwump> probably want ∃ (\x{2203})

[09:05] <plasmabal> Perl 6: Avoid (gugod, here you go)

[09:05] <plasmabal> * If "cat" is "tog"

[09:05] <plasmabal> * outstanding visual difference

[09:06] <whiteg> Avoid a word with diffrernt meanings

[09:06] <gugod> Avoid the phrases with multiple purposes

[09:06] <ij1iao> avoid ambiguous

[09:06] <gugod> exaclty

[09:06] <LCamel> don't overload too much

[09:06] <plasmabal> Perl 6 : Freedom

[09:06] <plasmabal> * Give the most freedom to programmers

[09:07] <jabbot> pugs - 1228 - Move SHA1 to modules. 

[09:07] <kungfuftr> <<NB: live translation of autrijus' talk in progress>>

[09:07] <plasmabal> * By custom, no rules.

[09:07] <ij1iao> s/idioms/custom/ ?

[09:07] <plasmabal> * By idiom, not rules

[09:07] <plasmabal> ya ya

[09:08] <ij1iao> * Keep flexibilities

[09:08] <whiteg> * reflect environmental requirments at any time 

[09:08] <plasmabal> somebody take over, i need a rest. :p

[09:08] <kungfuftr> hehe

[09:08] <ij1iao> gugod: go

[09:08] * gugod goes

[09:08] <gugod> XD

[09:08] <whiteg> ij1iao: go

[09:08] <kungfuftr> ij1iao++ # my fbsd hero

[09:08] <plasmabal> ij1iao: hero!

[09:08] <ij1iao> who ?

[09:08] <whiteg> Perl 6: DWM

[09:09] <plasmabal> DWIM

[09:09] <whiteg> * Do what I mean

[09:09] <kungfuftr> not what i say

[09:09] <whiteg> * Make Perl more like a phrase 

[09:09] <whiteg> * do have to use formal english

[09:09] <gugod>  mc:3rd:w/word/ -> match the 3rd occurence of "word" in a string

[09:09] <plasmabal> do not

[09:09] <whiteg> s/do/do not

[09:10] <mjhsieh> mc:3st:w/word/ also do

[09:10] <whiteg> * don't even have to use english

[09:10] <plasmabal> * not necessary in english

[09:10] <gugod> and here comes some chinese code

[09:10] <mjhsieh> 'engrish'

[09:10] <plasmabal> (those examples are in chinese)

[09:10] <plasmabal> mjhsieh: haha

[09:10] <ij1iao> i think it's "not always use formal english"

[09:11] <whiteg> you can do it with some slang module

[09:11] <gugod> Perl6: Document Object Model

[09:11] <gugod> * Whatever inside the progrom document, should be also a object

[09:11] <kungfuftr> so now were'

[09:11] <ij1iao> * use %=POD to access all kinds of embeded data

[09:11] <kungfuftr> bah

[09:12] <whiteg> Perl : variable signs

[09:12] <plasmabal> * Sigil is now part of variable names

[09:12] <plasmabal> @array[3] # no longer $array[3]

[09:12] <plasmabal> %hash{'key'} # also in %hash<key>

[09:12] <mugwump> It's called a DOM but it will look and work more like Tree:DAG_Node or XML::Twig etc

[09:12] <mugwump> Whichever Tree algorithm gets ported to Perl6 first probably :)

[09:12] <whiteg> rules is not very consistent.

[09:13] <whiteg> s/is/are

[09:13] <plasmabal> i'm back. :p

[09:13] <whiteg> welcome back

[09:13] <plasmabal> * array and hash could be used as objects

[09:13] <gugod> (can I keep trying to release SVK::Churn now? :P)

[09:13] <ij1iao> * therefore, arrays and hashs can be used as objects

[09:13] <plasmabal> gugod: go ahead. :p

[09:14] <plasmabal> do things through method calls

[09:14] <plasmabal> Perl 6: Dot 

[09:14] <whiteg> Perl 6: .

[09:14] <ij1iao> * "->" becomes "."

[09:14] <plasmabal> * often-used -> shorten to .

[09:14] <plasmabal> $a_ref.[1] # could be shorten into $ref[1]

[09:15] <plasmabal> * . could be used to call sub

[09:15] <nothingmuch> . o O ( p6 autocompletes the a_ ? ;-) )

[09:15] <plasmabal> ... # it works

[09:15] <plasmabal> .... # it works too

[09:15] <plasmabal> Perl 6: method

[09:15] <plasmabal> * Easy to memorise method

[09:16] <plasmabal> @... # replaces scalar(@array)

[09:16] <mjhsieh> @array.elems

[09:16] <miyagawa> Orz

[09:16] <plasmabal> @array.bytes # ... impossible in Perl 5 Orz

[09:16] <plasmabal> &function.arity #... also impossible XD

[09:16] <ij1iao> Perl 6: Named Variables

[09:16] <plasmabal> opos new slide

[09:16] <plasmabal> * Old syntax is ok

[09:16] <plasmabal> * New named parameters

[09:17] <jabbot> pugs - 1229 -  r3555@speights:  samv | 2005-03-27 17:4

[09:17] <plasmabal> sub clean... # by addr

[09:17] <plasmabal> sub by_value ... # by value

[09:17] <mugwump> bah, why don't me commit messages go in cleanly :(

[09:17] <plasmabal> sub some_opt ... # optional

[09:17] <plasmabal> sub modify ... # modifiable

[09:17] <plasmabal> sub typed ... # typed

[09:17] <LCamel> Perl6::Subs

[09:18] <plasmabal> Pelr 6: Call sub

[09:18] <plasmabal> * Not flatten

[09:19] <plasmabal> :names<a b c> => pass a b c into parameter  named 'names'

[09:20] <plasmabal> * Flatten

[09:20] <kungfuftr> mugwump: i assume they're truncated by the bot

[09:20] <gugod> no... it's truncated in the rss

[09:20] <plasmabal> Perl 6: High level sub

[09:21] <LCamel> (*@_)

[09:21] <plasmabal> * use .assuming to do local currying

[09:21] <gugod> I shall change the bot to optionally report the <description> tag

[09:21] <gugod> that'll make it more informative

[09:21] <plasmabal> * ...... (blank brain...)

[09:22] <plasmabal> autrijus just said he's going to speak FASTER. :O

[09:22] <kungfuftr> mwuahaha

[09:22] <ij1iao> perl6: multi-dispatch sub

[09:22] <plasmabal> Perl 6: Multiple dispatch sub

[09:22] <plasmabal> * By type

[09:22] <plasmabal> * Type value

[09:22] <plasmabal> s,Type,By,

[09:23] <plasmabal> Perl 6: Operator

[09:23] <ij1iao> perl6: operators

[09:23] <plasmabal> * New operator

[09:23] <plasmabal> say ... # read operators

[09:23] <plasmabal> ...; # ... operator

[09:23] <whiteg> ...: #lalala operators

[09:23] <plasmabal> haha

[09:23] <whiteg> lalala

[09:23] <plasmabal> lalala

[09:24] <plasmabal> * unicode operators

[09:25] <whiteg> you can define operators with unicode

[09:26] <plasmabal> bwahahaha

[09:26] <ij1iao> zip operator ...

[09:26] <plasmabal> the jap-yen looks like a zip

[09:27] <plasmabal> unable to type jap-yen on your kb? use Y instead.

[09:27] <plasmabal> * Extend existing operators

[09:27] <miyagawa> hmm, Yen mark is confusable to backslash, for Japanese users

[09:28] <mjhsieh> miyagawa: I agree

[09:28] <miyagawa> we already see/use Yen mark instead of backslash :)

[09:28] <plasmabal> Perl 6: Numeric value and true value

[09:28] <plasmabal> * Numeric context

[09:28] <plasmabal> * True context

[09:28] <plasmabal> * Trinary operator

[09:28] <LCamel> boolean context

[09:29] <plasmabal> hum?

[09:29] <plasmabal> oh

[09:29] <plasmabal> s,True,Boolean,

[09:29] <ij1iao> boolean context, not true context

[09:29] <plasmabal> Perl: Strings

[09:29] <plasmabal> * String context and concatation

[09:29] <plasmabal> * String interpolation

[09:30] <plasmabal> * Formatting strings

[09:31] <plasmabal> Perl 6: Logical operators

[09:32] <plasmabal> * Short curcuit and open curcuit

[09:32] <plasmabal> open ?

[09:32] <plasmabal> am i right?

[09:32] <LCamel> circuit

[09:33] <plasmabal> * Italic (?) || is 'defined or'

[09:33] <mjhsieh> magic of 010

[09:33] <ij1iao> //=

[09:34] <plasmabal> //

[09:34] <plasmabal> we're unable to make or italic, so we use err.

[09:34] <plasmabal> ... 􏿽xB6W􏿽xBA􏿽xFB?

[09:34] <ij1iao> super scalar ?

[09:34] <gugod> hyper-dimention operation

[09:35] <obra> what does >>|<< do?

[09:35] <plasmabal> i don't remember i saw this before. :<

[09:35] <plasmabal> Perl 6: Junctio operators

[09:35] <plasmabal> Junction

[09:35] <lightstep> obra, runs | elementwise

[09:35] <LCamel> >>|<< works like map ?

[09:35] <plasmabal> * Use shortcut (?)

[09:35] <plasmabal> # In perl 5, you write:

[09:36] <plasmabal> * Prime test

[09:36] <plasmabal> 􏿽xBD􏿽xE1􏿽xA6W?

[09:36] <lightstep> no, >><< works like map

[09:36] <plasmabal> alias?

[09:36] <plasmabal> Perl 6: Alias operators

[09:37] <Juerd> obra: @foo >>|<< @bar returns a list of max(+@foo, +@bar) 2-element disjunctions

[09:37] <LCamel> i think codes written in perl6 will be more difficult to maintain..

[09:37] <plasmabal> * Don't need to learn hard glob

[09:37] <ij1iao> powerful lazy-evaluation

[09:37] <plasmabal> * Powerful lazy evaluation

[09:37] <Juerd> LCamel: Code is singular, always.

[09:37] <plasmabal> Perl 6: Matching operators

[09:37] <plasmabal> * Smarter than =~

[09:37] <Juerd> obra: Don't you like the >>+&=<< operator? ;)

[09:38] <plasmabal> * Could process not only scalar

[09:38] <plasmabal> Perl 6: Switch

[09:38] <LCamel> Juerd: thx

[09:38] <plasmabal> * We use given/when to match

[09:38] <plasmabal> * given/when use the same function as ~~

[09:38] <ij1iao> perl6: loop

[09:38] <plasmabal> Perl 6: Loops

[09:38] <gugod> LCamel: you should start writing perl6 right now

[09:38] <plasmabal> * foreach now use for

[09:39] <plasmabal> * for could retreat many values at once.

[09:39] <gugod> LCamel: then you'll know how easily it is to read

[09:39] <plasmabal> s,retreat,get,

[09:39] <plasmabal> Perl 6: Exceptions

[09:39] <plasmabal> * Use $! globally, no $@, $?, and $^E.

[09:39] <LCamel> gugod: the language becomes bigger

[09:39] <plasmabal> Perl 6: Class

[09:40] <plasmabal> ... TOO FAST now~~~

[09:40] <gugod> LCamel: but code becomes more clear

[09:40] <LCamel> gugod: i see.

[09:40] <plasmabal> Perl 6: Roles

[09:40] <gugod> LCamel: peopel don't write a module that uses all feature of perl6

[09:40] <plasmabal> Perl 6: Rules

[09:40] <gugod> LCamel: (that's scares)

[09:40] <gugod> yay, Perl 6 rules

[09:41] * gugod feels like a noise application

[09:41] <ij1iao> too fast to translate ...

[09:41] * kungfuftr shoots gugod

[09:41] <plasmabal> * modifiers are prefix instead of postfix

[09:41] <plasmabal> * anonymous and named rules

[09:41] <plasmabal> * rules includes rules

[09:41] <plasmabal> Perl 6: Syntax

[09:41] <plasmabal> * Give rule a namespace

[09:41] <plasmabal> * Perl 6 is a grammar

[09:42] <plasmabal> Perl 6: In one word

[09:42] <plasmabal> * easy to learn

[09:42] <plasmabal> * Specific (?)

[09:42] <plasmabal> * Accept others

[09:42] <plasmabal> * Workable now

[09:42] <plasmabal> * Make perl more perl

[09:42] <plasmabal> Parrot

[09:42] <plasmabal> ....

[09:42] <Juerd> wth is plasmabal :)

[09:42] <cm> plasmabal is translating autrijus' talk

[09:42] <plasmabal> autrijus is insane now

[09:43] <cm> plasmabal: how so? :D

[09:43] <Juerd> ahh

[09:43] <ij1iao> April Fools joke become true

[09:43] <gugod>  -- It starts from 4/1 2001

[09:43] <plasmabal> Parrot: Dreams come true in April's day

[09:43] <plasmabal> * What is parrot

[09:43] <plasmabal> * Perl 6's Virtual machine 

[09:43] <cm> * a pipe dream

[09:43] <plasmabal> s,april's day,april fool

[09:44] <gugod> A joke that said "Perl6 and Python will be merged"

[09:44] <plasmabal> * also run python, ruby, scheme, forth, basic

[09:44] <gugod> That comes true as desining VM for both languages

[09:44] *** bytewolf is now known as cnhackTNT

[09:44] <plasmabal> * more suitable for dynamic language than java/.net

[09:44] <gugod> ... while it's also the time .Net starts

[09:44] <plasmabal> * college course

[09:44] <plasmabal> * (developers etc)

[09:44] <plasmabal> Parrot: downlad and install

[09:44] <plasmabal> * get stable version

[09:45] <plasmabal> * develop version

[09:45] <plasmabal> Parrot: assembly langauge

[09:45] <ij1iao> parrot: assembly language

[09:45] <gugod> parrot has 3 internal asm

[09:45] <plasmabal> * high-level assembly langauge

[09:45] <gugod> IMC, PASM, PBC

[09:45] <plasmabal> * lovel-level

[09:45] <ij1iao> parrot : register

[09:45] <gugod> it uses registrator

[09:45] <plasmabal> blah blah blah

[09:45] <plasmabal> Parrot: registers

[09:45] <plasmabal> * Direct maaping to registers on cpu

[09:45] <gugod> Some of the binds to CPU register directly

[09:45] <plasmabal> * Parrot magic cookie:

[09:45] <plasmabal> Parrot: variable

[09:45] <plasmabal> * Use registers as variables

[09:46] <gugod> s/Some of the/Some of them/

[09:46] <plasmabal> * named local variable and functions

[09:46] <plasmabal> # save as hello.pmc and you can run in parrot

[09:46] <gugod> As a VM, the number of registers is like 2^32 -1, but it depends on your CPU arch

[09:46] <plasmabal> parrot: control structure

[09:46] <ij1iao> Parrot: Control Flow

[09:46] <plasmabal> * simple loop

[09:47] <plasmabal> * lable can be saved in continuation objects

[09:47] <gugod> -- This  asm has /continuation/

[09:47] <ij1iao> * labels can be stored to continuation objects

[09:47] <gugod> (are we sub-etha-irc ?)

[09:47] <plasmabal> parrot: sub

[09:47] <ij1iao> Parrot: function

[09:47] <plasmabal> * simple sub

[09:47] <plasmabal> haha

[09:47] <ij1iao> * call sub

[09:47] <plasmabal> ij1iao: take over?

[09:47] <gugod> -- this asm even has function call

[09:47] <ij1iao> plasmabal: no ;p

[09:47] <plasmabal> foo

[09:47] <ij1iao> bar

[09:48] <cm> baz

[09:48] <kungfuftr> cheese

[09:48] <plasmabal> parrot: advanced sub

[09:48] <ij1iao> Parrot: adv. sub

[09:48] <plasmabal> * multi-valued sub

[09:48] <plasmabal> * sub call

[09:48] <gugod> -- it doesn't require you to learn parrot asm to write perl6, but it does, when you want to know the reason your perl6 is not fast enough

[09:48] <plasmabal> parrot:library

[09:48] <ij1iao> Parrot: Library

[09:48] <plasmabal> * load library

[09:48] <elmex> gugod: rofl

[09:48] <plasmabal> * get sub wihtin

[09:48] <plasmabal> * blah

[09:48] <elmex> gugod: where does that wise saying come from?

[09:48] <plasmabal> Parrot call external library

[09:48] <gugod> -- you are allowed to load any of 3 asms, or any system depended libraryes

[09:49] <plasmabal> * call .so or .dll on system directly

[09:49] <gugod> elmex: I'm trying to translate autrijus speaking that are not covered by ijliao or plasmabal

[09:49] <plasmabal> * call imeediately now

[09:49] <plasmabal> parrot: todo

[09:49] <gugod> elmex: so, autrijus :)

[09:49] <plasmabal> * abstract syntax tree

[09:49] <plasmabal> * charset translation (?)

[09:49] <ij1iao> * encoding translation

[09:49] <plasmabal> oh, encoding

[09:49] <ij1iao> async IO

[09:49] <plasmabal> * non-async IO

[09:50] <plasmabal> * object exception handling

[09:50] <plasmabal> * blah

[09:50] <ij1iao> Pugs:

[09:50] <gugod> -- Just release 6.0.13

[09:50] <plasmabal> pugs: download and install

[09:50] <LCamel> * 6.0.13 just released

[09:50] <plasmabal> * 6.0.13 just released

[09:50] <plasmabal> * install GHC first

[09:50] <ij1iao> * pre-req GHC

[09:50] <plasmabal> * get develop version

[09:50] <elmex> what is sthis stuff plasmabal  says???

[09:50] <plasmabal> pugs: the history of development

[09:50] <plasmabal> * start on Feb 1, 2005.

[09:50] <kungfuftr> elmex: keep up...

[09:50] <mjhsieh> elmex: YAPC::Taipei

[09:51] <elmex> ??

[09:51] <ij1iao> GHC ? http://www.haskell.org/ghc/

[09:51] <plasmabal> * the homework that I learn haskell and TaPL

[09:51] <LCamel> elmex: plasmabal is translating the speach of autrijus 

[09:51] <nothingmuch> elmex: autrijus' talk

[09:51] <plasmabal> * visit pugscode.org 

[09:51] <cm> elmex: plasmabal is translating autrijus' talk

[09:51] <plasmabal> * superfast deveopemnt pace

[09:51] <plasmabal> Pugs: interpreating mode

[09:51] <gugod> -- and it all starts from a haskell tutoral execisement : Please choose some familiar small language to write a parser

[09:51] <plasmabal> * CLI

[09:51] <plasmabal> elmex: sorry, au is in bersek mode, so am i to follow his slide. :p

[09:52] <elmex> ok

[09:52] <gugod> -- JAPH code on screen

[09:52] <gugod> -- Perl6 Users Golfing System,

[09:52] <gugod> golf-driven development!

[09:52] <plasmabal> pugs is not acronym of any words, but it's exapanded anyway.

[09:53] <plasmabal> * interactive interface

[09:53] <gugod> -- The early golf contect programes and accounting scripts are now ported to perl6

[09:53] <plasmabal> pugs: compiling mode

[09:53] <plasmabal> * three complie backends

[09:53] <ij1iao> * 3 compiler back-end

[09:53] <gugod> -- it's also a compiler to compile to haskell or C

[09:53] <plasmabal> * JIT 

[09:53] <gugod> ooops, s/C/Parrot/

[09:53] <plasmabal> pugs: develop model

[09:54] <gugod> -- pugs : JFDI 

[09:54] <plasmabal> * blah

[09:54] <plasmabal> * Wiki-style development team

[09:54] <ij1iao> JFDI : Just Fxxxing Do It ?

[09:54] <gugod> -- develoeprs(x) =~ x

[09:54] <gugod> yes

[09:54] <plasmabal> * two condtions to be a committer:

[09:54] <LCamel> * 50+ commiters

[09:54] <plasmabal> * test goes first

[09:54] <gugod> -- Test-driven, Golf-driven

[09:54] <gugod> -- >3k tests

[09:54] <plasmabal> ** golf-driven

[09:55] <plasmabal> * test-driven

[09:55] <plasmabal> ** golf-driven

[09:55] <plasmabal> * attracts a lot of nuts

[09:55] <plasmabal> haha

[09:55] <gugod> -- Golf has lots of un-document features of perl6 that's not even present in some source code , and might be even runnable on full-moon night.

[09:55] <nothingmuch> =)

[09:56] <plasmabal> Pugs: documents

[09:56] <plasmabal> * pugs: ex..... (too hard to spell)

[09:56] <plasmabal> * Kwid document format

[09:56] <cm> exegesis?

[09:56] <cm> :|

[09:56] <gugod> Apocryphon

[09:56] <plasmabal> cm: never remember how to spell it. :p

[09:57] <jabbot> pugs - 1230 - Refactor SHA1 to external Makefile.PL

[09:57] <gugod> Apo-Cry-Phon :p

[09:57] <plasmabal> * reamd and howto

[09:57] <plasmabal> s,reamd,readme,

[09:57] <ij1iao> pugs: test

[09:57] <plasmabal> Pugs: Tests

[09:57] <cm> hehe

[09:57] <ij1iao> * 3k+ unit tests

[09:57] <plasmabal> * t/ dir: 3000+ unit tests

[09:57] <ij1iao> ** how to start writing test

[09:58] <plasmabal> * examples/: 40+ integration tests

[09:58] <gugod> -- the way you do bug report, is started from writing failed tests

[09:58] <gugod> -- and pasted on irc, so that other committers will be impatient so that you'll have a committer permission in like 20 miniutes

[09:58] <plasmabal> Pugs: built-in modules

[09:59] <plasmabal> Pugs: Modules in porting

[09:59] <plasmabal> * current 22 modules

[09:59] <plasmabal> * coming sson: DI:PurePerl.....

[09:59] <kungfuftr> buggery, good bit longer than 90 mins so fare

[09:59] <plasmabal> "i have to demo this, this is important."

[09:59] <LCamel> inline Haskell

[09:59] <obra> is the perl6 YAML plan SYCK?

[09:59] <plasmabal> "you can write haskell."

[09:59] <plasmabal> Pugs: Embed other lang

[09:59] <kungfuftr> buggery... that's what i mentioned earlier... so i suppose i'll have to do it... damn... DBI's huge

[10:00] <gugod> -- ingy is still fighting on dynamic loader of inline

[10:00] <gugod> -- even, embed perl5

[10:00] * plasmabal give +10 sword to ingy

[10:00] <plasmabal> Pugs: Internals

[10:00] <obra> kungfuftr: convince tim to do DBI2::PP in perl6 ;)

[10:00] <ij1iao> fighting ? struggle ? :p

[10:00] <gugod> -- starting from main

[10:01] <gugod> -- src/Main.hs

[10:01] <plasmabal> Pugs: plan on 6.2

[10:01] <kungfuftr> obra: well, i like a challenge... =0)

[10:01] <plasmabal> * basic I/O objects

[10:01] <plasmabal> * basic I/O objects and flow control

[10:01] <ij1iao> * to-be-released

[10:01] <plasmabal> pugs: plan on 6.28

[10:01] <plasmabal> * OO kernel

[10:02] <plasmabal> pugs: plan on 6.283

[10:02] <plasmabal> * blah blah blah

[10:02] <plasmabal> pugs: far shore

[10:02] <plasmabal> Pugs: Let's do it together

[10:02] <plasmabal> * port module

[10:03] <plasmabal> * think about examples

[10:03] <plasmabal> * write examples

[10:03] <plasmabal> * translate documents

[10:03] <plasmabal> * clean up (?) parrot imc

[10:03] * mugwump will copy autrijus' idea for Tangram to go for 2.7182818... never get to 3 :)

[10:03] <plasmabal> * learn haskell, improve pugs kernel

[10:03] <gugod> -- you don't even need to know haskell to help perl6

[10:03] <plasmabal> whoooo

[10:03] <gugod> >clap< >clap< >clap<

[10:03] <plasmabal> finish finally. XD

[10:04] <ij1iao> tired

[10:04] <kungfuftr> plasmabal++

[10:04] <cm> plasmabal++ :o)

[10:04] <plasmabal> :)

[10:04] <nothingmuch> plasmabal++

[10:04] <scw> plasmabal++

[10:04] <cm> plasmabal & co, thanks

[10:04] <nothingmuch> gugod++

[10:04] <LCamel> mugwump: looks like metafont..

[10:04] <nothingmuch> autrijus++

[10:04] <kungfuftr> someone ask autrijus where we can send donations!

[10:04] <gugod> yay, YAPC::Taipei fihished

[10:04] <nothingmuch> kungfuftr: there's the PAR link

[10:04] <gugod> YAPC::Asia for the next!

[10:04] <nothingmuch> and i'm subscribed at $20 a month

[10:04] <nothingmuch> i cna give you the link to that too

[10:05] <kungfuftr> ah! gotcha

[10:05] <ij1iao> YAPC::Asia in Tokyo

[10:05] <nothingmuch> http://pugscode.org/donate.html

[10:05] <nothingmuch> that's the subscription link

[10:06] <kungfuftr> hhhmmm... bah, will have to wait for now

[10:06] *** cnhackTNT is now known as cnhackTNT|away

[10:07] <jabbot> pugs - 1231 - S11 - modules - pseudocode

[10:11] <cm> good night

[10:33] <kungfuftr> who ported Email-Envelope?

[10:34] <kungfuftr> ah... iblech

[10:54] <kungfuftr> bugger... DBI::PurePerl is a bastard

[10:56] <Khisanth> to port?

[11:02] <kungfuftr> yup

[11:41] <luqui> hi metaperl

[11:41] <metaperl> hi luqui

[11:42] <luqui> is make test broken for you?

[11:42] <luqui> it seems to be assuming that I have pugs installed...

[11:43] <metaperl> if youre asking me, I can check...

[11:43] <luqui> yeah... you're the only one here, it seems

[11:43] <metaperl> i'm doing make right now

[11:43] <metaperl> after svn update

[11:44] <gaal> luqui, are you using the tarball or the latest revision?

[11:44] <luqui> latest rev

[11:47] <jabbot> pugs - 1232 - Fixed syntax error in Context.hs.

[11:47] <gaal> worksforme linux/6.4

[11:47] <luqui> do you have it installed?

[11:47] <gaal> luqui, does setting the environment help?

[11:48] <luqui> setting the environment to...?

[11:48] <gaal> http://pugs.kwiki.org/?FrequentlyAskedQuestions :

[11:48] <gaal> export HARNESS_PERL=$PWD/pugs

[11:48] <gaal> export PERL6LIB=ext/Test/lib

[11:48] <luqui> oh, hey, probably

[11:48] <gaal> it's still a bug, because make test shouldn't depend on that

[11:49] <gaal> but doing should workaround the problem.

[11:49] <luqui> works

[11:49] <rgs> apparently in 6.0.13 Test.pm is installed under perl5 instead of perl6. Known bug ?

[11:49] * gaal never make installed :)

[11:49] <luqui> hmmm, I don't know

[11:50] * luqui has been absent from the pugs world for a week

[11:50] <luqui> which is an awful lot of time here...

[11:50] * rgs svn ups

[11:51] <gaal> a consolidated grep for #perl and p6-[compiler|language] would be cool.

[11:51] <gaal> i need to go to a meeting. bye.

[11:52] <metaperl> its trying to run /usr/bin/pugs instead of pugs in my local directory tree

[11:52] <metaperl> so it does'nt even start make test

[11:52] <luqui> that's what was happening to me

[11:52] <luqui> gaal has a workaround

[11:52] <rgs> I can reproduce this as well

[11:52] <luqui> something else is wrong...

[11:52] <luqui> all the tests pass except for the rules ones

[11:53] <luqui> wow...

[11:53] <luqui> I wonder how many have been todoed

[11:53] <rgs> is there a commiter here ?

[11:53] <luqui> me

[11:53] <rgs> in t/syntax/inplace.t the shebang line is wrong

[11:53] <rgs> it needs to be pugs instead of perl

[11:54] <luqui> okay

[11:54] <luqui> any others?

[11:55] <luqui> what's that grep option that prints files which don't match?

[11:55] <rgs> t/oo/roles/properties.t (lists perl6)

[11:55] <rgs> -v

[11:55] <luqui> no, files.  and I just found it.  -L

[11:55] <rgs> oh ok

[11:58] <luqui> committed

[11:58] <rgs> why isn't there any MANIFEST file ?

[11:59] <luqui> there's a MANIFEST.SKIP

[11:59] <luqui> so... I don't know

[11:59] <integral> MANIFEST can be generated by make manifest

[12:00] <rgs> ok

[12:00] <luqui> r936 | ingy | Removing the MANIFEST: It always gets out of date, and is only needed for release.

[12:01] <luqui> has work on BEGIN, er, begun?

[12:02] <cls_bsd_> pugs 6.0.13, good

[12:03] <rgs> make pure_site_install doesn't take DESTDIR into account

[12:03] * luqui wishes he knew anything about configure anything

[12:05] * rgs sends patch

[12:07] <jabbot> pugs - 1233 - s{#!/usr/bin/perl6?}{#!/usr/bin/pugs} in

[12:07] <luqui> to p6c?

[12:08] <rgs> yes

[12:08] <luqui> yep

[12:08] <luqui> there it is

[12:09] <luqui> does the patch include the End. at the end?

[12:09] <rgs> no. It's to make the life of patch(1) easier

[12:09] <luqui> ohhhh....

[12:09] <luqui> you can just run raw stuff through patch and it will pull it out?

[12:10] <luqui> do I need a command line flag to do that?

[12:10] <rgs> no, just pipe the mail through patch -p0

[12:10] <rgs> and commit :)

[12:10] <luqui> neato

[12:11] <rgs> patch has been designed by someone who knew what "dwimmery" means

[12:11] <luqui> gee, I wonder who that was?

[12:13] <luqui> thanks, applied, btw

[12:15] <rgs> woohoo

[12:15] <kungfuftr> MANIFEST is only generated for releases

[12:17] <jabbot> pugs - 1236 - Pugscc don't need to be used under pugs 

[12:17] <jabbot> pugs - 1235 - Support make DESTDIR=/... install, court

[12:17] <jabbot> pugs - 1234 -  r1204@scwnb:  scw | 2005-03-26 13:57:43

[12:21] <rgs> ok, another Makefile.PL patch

[12:25] * luqui awaits arrival

[12:25] <rgs> well, I'm trying to fix make test

[12:29] <rgs> hmm, makemaker black magic...

[12:36] <rgs> for some reason Pugs::MakeMaker isn't run to fix the Makefile

[12:37] <jabbot> pugs - 1237 - debian/ added.

[13:04] * luqui beds

[13:07] <jabbot> pugs - 1238 - Fix make test, thanks to rgs.

[13:08] <rgs> yay.

[13:15] <theorbtwo> You know, throwing babelfish on these slides is hilarious.

[13:27] * theorbtwo wonders if anybody saved the videos.

[13:31] <theorbtwo> We have a debian dir now?

[13:31] <theorbtwo> Cool!

[13:44] <scw> theorbtwo: I added it but I'm not really familiar with those stuff. And also, we have to find a DD to accept it :)

[13:46] <theorbtwo> Well, we don't have to; we can build them locally.

[13:48] <scw> yes, and I've do that http://www.csie.ntu.edu.tw/~b92103/pugs/

[13:48] <scw> and also http://www.csie.ntu.edu.tw/~b92103/parrot/

[13:48] <gaal> scw++

[13:49] <scw> will do snapshot of svn and cvs HEAD every day 

[13:49] * theorbtwo pings nothingmuch

[13:54] * nothingmuch pongs

[13:54] <nothingmuch> did you see the graph thingy?

[14:01] <theorbtwo> I saw the one on woobling, but not all changes seem to be checked in.

[14:01] <nothingmuch> no, they aren't

[14:01] <nothingmuch> and i didn't want to let it go till i was content

[14:01] <nothingmuch> it was a bit of a crappy change

[14:01] <nothingmuch> it caused some breakage

[14:01] <nothingmuch> but since i'm at work i haven't looked at it

[14:02] <nothingmuch> on the plus side, i'm going home in 2 mins

[14:02] * theorbtwo nods.

[14:02] <nothingmuch> but i can check it in anyway

[14:02] <theorbtwo> I did notice some changes that are in, and I'm uncertian of the reason for them.

[14:03] <theorbtwo> Oh, I see what you were doing now.

[14:03] <nothingmuch> the ones to the testgraph?

[14:03] <nothingmuch> it just makes it look a bit more uniform

[14:03] <theorbtwo> Right, I see now.

[14:04] <nothingmuch> so, you have 20 seconds

[14:04] <nothingmuch> checkin?

[14:04] <theorbtwo> Go for it.

[14:04] <theorbtwo> I'll do some cleanup of them while you're on your way home.

[14:05] <nothingmuch>  ok, sent

[14:05] <nothingmuch> next i'd like to use Text::VimColor for catalog_tests

[14:06] <nothingmuch> and also add support for multiple test result consolidation

[14:07] <jabbot> pugs - 1239 - graph -> test line hack

[14:07] <theorbtwo> I was thinking of using CSS mouseovers to properly display the test results -- they cut off and show as one line in everything but IE at present.

[14:42] <nothingmuch> evening

[14:48] <stevan> hey nothingmuch, theorbtwo 

[14:48] <stevan> nice work on the testgraph stuff

[14:48] <stevan> we should package that up for perl5 usage too :)

[14:48] <stevan> gotta run,.... easter here,... later :)

[14:48] <nothingmuch> yeah, i thought about forking it off pugs

[14:48] <stevan> nothingmuch++

[14:48] <nothingmuch> hola stevan 

[14:48] <nothingmuch> and mentioning it on perl-qa

[14:48] <stevan> theorbtwo++

[14:48] <nothingmuch> now i want to do consolidation

[14:48] <nothingmuch> ciao stevan 

[14:48] <nothingmuch> have fun

[14:48] <stevan> nothingmuch: do that 

[14:48] <stevan> it could be a very valuable tool

[15:06] <obra> win 24

[15:08] <nothingmuch> stevan: ping

[15:09] <autrijus> greetings!

[15:09] <autrijus> I'm finally back to home.

[15:10] <gaal> we all had lots of fun "hearing" plasmabal's translation of your talk :)

[15:11] <theorbtwo> Allo, autrijus!

[15:11] * theorbtwo is sorry he missed the live version.

[15:11] <autrijus> that'st fine :)

[15:11] <nothingmuch> hola autrijus 

[15:11] <gaal> if there's a cap, maybe we can author an srt.

[15:12] <autrijus> so, I should've said that 80% from the middle two sections

[15:12] <autrijus> that is 40% of total talk

[15:12] <autrijus> is from allison's talk

[15:12] <autrijus> url:

[15:13] <autrijus> http://www.lohutok.net/talks/p6update.pdf

[15:13] <clkao> autrijus++ # wonderful talk

[15:14] <gugod> autrijus++ # compress 50 days of pugs into 2 hours

[15:17] <jabbot> pugs - 1240 - * remove Disabled tests and stuff from m

[15:17] <autrijus> :D

[15:18] <autrijus> actually I took only about 20 minutes for pugs :)

[15:18] <gugod> so that's 85% higher compression ratio

[15:19] <autrijus> so! I'm implementing a new language!

[15:19] <autrijus> a new Parser, AST, Compiler, Emitter

[15:19] <gaal> bored with perl6, eh

[15:19] <autrijus> it's Pugs all over again!

[15:19] <autrijus> yes!

[15:19] <autrijus> it's IMC!

[15:20] <autrijus> the higher-level parrot assembly thing!

[15:20] <gaal> bored with sleep, too

[15:20] <autrijus> rgs: committer-bit-p

[15:20] <autrijus> ?

[15:20] <rgs> autrijus: er, why not.

[15:21] <autrijus> mandrake.com email?

[15:21] <rgs> rgarciasuarez at mandrakesoft.com

[15:21] <rgs> how many committers are there now?

[15:21] <autrijus> done. welcome aboard!

[15:22] <mugwump> I'm number 26 :)

[15:22] <autrijus>  you're the 50th I think.

[15:23] <autrijus> rgs: see http://wagner.elixus.org/~autrijus/p6tu/slide66a.html

[15:23] <rgs> nicely linear.

[15:23] <rgs> resistance is futile.

[15:25] <autrijus> another graph: http://wagner.elixus.org/~autrijus/p6tu/slide63a.html

[15:25] <autrijus> SVK::Churn++

[15:25] <autrijus> gugod++

[15:27] <elmex> hi

[15:27] <gaal> hi elmex

[15:27] <elmex> i love typed languages :) like perl

[15:28] <autrijus> yes!

[15:28] <elmex> my int $i; my string $s; ...

[15:29] <elmex> and will be beatiful for people who are using their own types in every module

[15:29] <autrijus> sure.

[15:29] <elmex> my MyOwnCoolIntWhichIsIncompatibleToAnyOther

[15:32] <elmex> i mena, can i pass my own int's for example to a foreign module, which uses special signatures in it's methods?

[15:32] <elmex> or maybe any object which act's like an int?

[15:36] <autrijus> scw: may I move debian/ to util/ ?

[15:36] <autrijus> I'm not comfortable with freebsd/ and win32/ etc

[15:37] <gaal> i've never seen it anywhere but the top level of a source tree

[15:37] <autrijus> really?

[15:37] <autrijus> won't work at all in anywhere but toplevel?

[15:37] <gaal> maybe it's possible, with some extra configuration

[15:37] <elmex> hm, no idea?

[15:38] <autrijus> anyone got tuits to check? :)

[15:43] <gaal> the dpkg-deb manpage says "Creates a debian archive from the filesystem tree stored in directory.   directory  must  have  a DEBIAN  subdirectory". so it doesn't sound possible

[15:43] <gaal> unless the spec files refer to ../paths

[15:43] <gaal> but i don't know if that works

[15:44] <autrijus> ok. in that case it remains, but I'm not shipping it with MANIFEST

[15:44] <gaal> there doesn't seem to be an option for more flexible locations.

[15:44] <autrijus> added it to MANIFEST.SKIP.

[15:45] <gaal> I'll add a note to the README saying why this is omitted from the tarball and a very short explanation of how to get it anyway

[15:45] <gaal> if that's okay with you

[15:45] <gaal> you tag releases in svn, right?

[15:47] <jabbot> pugs - 1241 - * do not ship debian/ with tarball

[15:48] <rgs> make test is broken again.

[15:48] <autrijus> how?

[15:48] <rgs> t/var/type.................................sh: /home/rafael/foreign/pugs/blib6/script/pugs: No such file or directory

[15:49] <rgs> can't run t/var/type.t. No such file or directory

[15:49] <gaal> forgetting PERL_HARNESS again apparently

[15:50] <gaal> rgs, does the ol' workaround work? export PERL_HARNESS=$PWD/pugs

[15:51] <rgs> well, pugs goes in blib instead of blib6. or the reverse

[15:52] <gaal> in my box it just ends up at the tree root too, and i use that one for the tests

[15:55] <rgs> "pugs" is supposed to be built in blib/ right ? not in blib6 ?

[16:03] * rgs commits

[16:04] <autrijus> rgs++

[16:05] <clkao> autrijus: want to give me short example and pointer to inlining c with callbacks and invoking function pointers?

[16:05] <rgs> well, make test now runs from a clean build, but I feel like a bear in a porcelaine shop

[16:05] <gaal> i think you mean you feel like the ownder of said shop

[16:05] * rgs notices that his name is already correctly spelled in utf-8 in AUTHORS :))

[16:07] <jabbot> pugs - 1242 - * pugs (and other scripts) are preinstal

[16:08] <autrijus> clkao: http://www.haskell.org/pipermail/cvs-ghc/2000-November/006777.html

[16:08] <autrijus> clkao: more uptodate examples are possible

[16:08] <autrijus> ask #haskell

[16:08] <clkao> year 2000!

[16:17] * rgs commits again

[16:17] <jabbot> pugs - 1243 - * Remove temporary files left by tests

[16:17] <rgs> it's addictive.

[16:20] <Khisanth> gooood :)

[16:27] <jabbot> pugs - 1244 - Heavy Magic

[16:37] <jabbot> pugs - 1245 - drunky crow

[16:43] <theorbtwo> rgs: The utf8 names I steal from CPAN when I can.

[16:44] <rgs> nice.

[16:47] <jabbot> pugs - 1246 - Get object files to install in right pla

[16:56] <nothingmuch> i think we better not use it's HTML backend, but the perl array or xml ones

[16:56] <nothingmuch> vim color is hard to deal with

[16:56] <nothingmuch> that way it's easier to promote the backlinks

[16:57] <gaal> ?

[16:57] * theorbtwo checks in some CSS goodness -- please test with more browsers.

[16:57] <theorbtwo> (Recent firefox and opera test OK, haven't tried IE...)

[16:58] <gaal> to2, can you give me a url? i'm not near something that can generate tests

[16:59] <theorbtwo> http://desert-island.dynodns.net/misc/testgraph.html

[16:59] <gaal> wide lines on ff/win32

[17:00] <gaal> having the diag info inthe boxes is way cool though!

[17:00] <theorbtwo> Damn... yeah, I loaded too quick...

[17:00] <theorbtwo> It's not supposed to -- it's supposed to show them on mouseover.

[17:01] <gaal> and the tooltip is incorrectly located

[17:01] <theorbtwo> For some reason, some lines are producing very strange HTML.

[17:01] <gaal> this is ff. let me see in msie

[17:01] <theorbtwo> It's not incorrectly located; I couldn't figure out how to place it anywhere better without modifying flow as you mouseover, which makes moving the mouse do strange things.

[17:02] <gaal> you look like you've been slashdotted :)

[17:03] <gaal> the mouseover should probably be on the td, not the text inside it (if that's even possible)

[17:03] <theorbtwo> It's not.

[17:03] <gaal> msie doesn't show any tooltips :(

[17:04] <theorbtwo> It doesn't show complete junk, though?

[17:04] <gaal> nope

[17:04] <gaal> it looks like the old version of the report

[17:04] <mugwump> mmm, junk

[17:04] <theorbtwo> mugwump?

[17:04] <gaal> could it be the boxen with text in them had unescaped "s ?

[17:05] <theorbtwo> Unescaped quotes shouldn't matter; it's HTML now, not an attribute.

[17:05] <ingy> hola

[17:05] <gaal> firefox++; # "view selection source"

[17:06] <theorbtwo> hola, ingy.

[17:06] <theorbtwo> Back from your Asian tour?

[17:07] <jabbot> pugs - 1247 - testgraph: CSS mouseover goodness.

[17:07] <ingy> no, still here

[17:07] <ingy> for another 9 days!

[17:09] <theorbtwo> Oh, wow!

[17:10] <theorbtwo> Oh: Do you know if the pugs hackfest around YAPC::NA is planned for /before/ or /after/?

[17:11] <autrijus>  before.

[17:11] <gaal> to2, looks good now, but there are still a few bugs with ff

[17:11] <autrijus> somebody offered a nice place.

[17:11] <autrijus> need to talk more

[17:11] <gaal> t/builtins/strings/append.t - test 4

[17:12] <gaal> also, on msie subtests are not clickable

[17:13] <gaal> corection: they *are cliclable*, but the clickable area is tiny

[17:13] <theorbtwo> Hmm, that's the same test I'm seeing it on, but I haven't the foggiest clue why it's generating the bumb HTML for those few tests.

[17:13] <gaal> and left-justified

[17:14] <gaal> but it's better now than your previous html. what changed?

[17:14] <Corion> theorbtwo: Niiice CSS/html !

[17:14] <theorbtwo> t/oo/roles/basic.t 5, t/operators/pipe.t 5, t/rules/perl5.t 133&554... 

[17:15] <gaal> i mean from five minutes ago, from before your ci

[17:16] <Corion> theorbtwo: But it would be better if the tooltip showed below the mouse cursor instead on the left lower corner, because for the pugsrun/ tests, there are only two tests and I have to scroll too far to see both the test and the output

[17:16] <theorbtwo> Mostly CSS.

[17:16] <Corion> (but that'll involve JS)

[17:16] <theorbtwo> Doesn't neccessarly need JS, just better CSS hacks.

[17:17] <jabbot> pugs - 1248 - * semi-working external haskell; needs t

[17:17] <theorbtwo> But the problem is that there's a few tests producing bum HTML for some odd reason that busts the layout.

[17:17] <theorbtwo> gaal, mostly the CSS.

[17:26] <autrijus> journal up...

[17:27] <autrijus> but not really summarized any of your amazing development

[17:27] <autrijus> I'm too drunk :-/

[17:27] <autrijus> will try to make up tomorrow.

[17:27] <mugwump> cheap date ;)

[17:27] <autrijus> g'night!

[17:27] <autrijus> verily.

[17:30] <Corion> On the one photo I saw of autrijus, he looked really tired :)

[17:31] <obra> heh

[17:31] <theorbtwo> Eeep, the HTML looks fine in less, but quite messed up in view source.

[17:37] <jabbot> pugs - 1249 - New logo?

[17:42] <autrijus> mugwump: can you post a png for the logo?

[17:43] * autrijus stops downloading gimp

[17:43] <obra> what's it start as?

[17:44] * obra has the gimp here ;)

[17:44] <autrijus> docs/phd.xcf

[17:44] <autrijus> in pugs

[17:44] <obra> https server still dead

[17:44] <obra> url?

[17:44] <autrijus> just s/https/http/

[17:45] <obra> k. svn catted it

[17:46] <obra> whoa. gimp 2.2 is different

[17:47] <obra> fsck.com/~jesse/hd.png

[17:47] <obra> phd

[17:49] <autrijus> er. eh. except I'm not a PhD :p

[17:49] <autrijus> mugwump: clever work, tho

[17:50] <autrijus> mugwump: although I don't think it fits in docs :)

[17:54] * theorbtwo guesses Larry probably does hold a PHD.

[17:55] <Khisanth> don't think so :p

[17:57] <jabbot> pugs - 1250 - Add TODO test for untangling -c and -e o

[17:57] <theorbtwo> "Before he committed to a lifetime of systems    administration and associated hacking, he and his wife were graduate students    in the linguistics department at UC-Berkeley. "

[17:57] <theorbtwo> ...but I don't know if he graduated.

[17:57] <Corion> ... untangling -c and -e handling will be ugly until we move to Perl parsing of the command line :)

[17:59] <theorbtwo> He is a linguist in human as well as machine languages, reads classical Greek, and studied these as well as Chemistry and Music at Seattle Pacific University, U.C. Berkeley, and U.C.L.A.

[17:59] * theorbtwo shrugs.

[17:59] <theorbtwo> There's a tendency, I've found, to want to split education into well-defined blocks called degrees.

[18:00] <elmex> how many levels of intermediat languages will there be between perl6 and parrot? imc, pasm, bytecode?

[18:00] <theorbtwo> Either you have a PHD or you don't; there is an implication that there is no value to going to grad school without getting a graduate degree, which isn't the case...

[18:00] <theorbtwo> Depends where you place the somewhat arbitrary lines of what parrot is and what perl6 is.

[18:01] <autrijus> <- junior high school dropout.

[18:01] <elmex> parrot is that thing that isn't finished....

[18:01] <autrijus> elmex: uh, no. it's pugs that isn't finished :)

[18:01] <Odin-> Neither is parrot, really. ;)

[18:01] <elmex> ah, i see, parrot is already rocksolid and finished ;)

[18:01] <autrijus> parrot is in remarkably bettter shape than pugs (or perl6)

[18:02] <autrijus> maturity wise.

[18:02] <autrijus> it's quite enough for perl 6 to target.

[18:02] <elmex> well, and what levels of intermediat languages will there be ?

[18:02] <Odin-> Parrot needs something on top of it, to become useful. ;)

[18:02] <autrijus> we generate parrot-ast

[18:02] <autrijus> which is compiled to imc

[18:02] <autrijus> then to pasm

[18:02] <autrijus> then to pbc.

[18:03] <elmex> that are heck of much levels, how do they want to make that fast ? (eg. like perl5?)

[18:03] <theorbtwo> elmex: By having fast compilers for each step, and by caching when you can.

[18:03] <Corion> Pugs is what forces the rest of the "Perl-6-world" to move, at least for now

[18:04] <elmex> theorbtwo: wow, cool ;) that sounds 'easy'

[18:04] <Corion> I say, eliminate them all and use Haskell as the base :)))

[18:04] <Corion> elmex: I look forward to a "port" of Coro to Pugs ! :)

[18:05] <elmex> Corion: the coro author/programmer, marc lehmann sits right next to me ;)

[18:05] <Corion> elmex: Ah, I thought you _were_ him (due to your login name) :)

[18:05] <Corion> elmex: So poke him a bit!

[18:05] <elmex> lol ;)

[18:06] <elmex> Corion: he doesn't know perl6 good enough yet 

[18:06] <Corion> elmex: Bah! I don't know Perl6 either - I just program it as if I were programming in Perl5 :)

[18:06] <elmex> or: he would know it, if he had time. but we're busy with reallife work atm 

[18:07] <Corion> elmex: Ah - so you're not at the Breakpoint demo party :)

[18:07] <elmex> what thing?

[18:07] <elmex> whereis taht

[18:07] <autrijus> elmex: so, pugs is damned fast.

[18:07] <autrijus> on parrot.

[18:07] <autrijus> and not exactly that fast on GHC.

[18:08] <elmex> autrijus: pugs compiles to parrot already?

[18:08] <autrijus> and it's much easier to optimize for parrot than for C--/GHC.

[18:08] <autrijus> elmex: err sure. pugs --runparrot examples/mandel.p6

[18:08] <Corion> elmex: The Breakpoint party is/was every Easter somewhere on the Rhine river. Marc might know it :)

[18:08] <elmex> autrijus: ah

[18:08] <autrijus> that's like two or three days ago.

[18:08] <elmex> oh

[18:09] <elmex> Corion: he says he doesn't know ;) but he can;t remember cleanly

[18:09] <elmex> exactly

[18:09] <autrijus> elmex: oh, say hi to marc for me, too.

[18:09] <autrijus> I'm happy I no longer has to bother him with serializable continuations.

[18:09] <Corion> autrijus: :))))

[18:09] <autrijus> because it's much easier to do in pugs and parrot.

[18:10] <elmex> autrijus: hi back

[18:10] <autrijus> hi schmorp!

[18:10] <schmorp> autrijus: hi :)

[18:10] <Corion> Hi schmorp!

[18:11] <schmorp> .. i join and the discussion dies... i am too late :)

[18:12] <Corion> schmorp: Naah - I was just saying that I looked forward to the Perl6 port of Coro :))

[18:13] <theorbtwo> autrijus: Would running the test suite under the pugscc --run --foo be useful, for various foos?

[18:13] <kcwu> hi schmorp!

[18:13] <Corion> ... half-joking, as Coroutines are built-in in Perl6 I think, but I don't read the docs :)

[18:13] <pjcj> autrijus: I have posted about coverage requirements to p6c, but I suspect it is in a moderation queue somewhere.  Let me know if you need it before it shows up.

[18:13] <autrijus> okay. I'll sleep soonish.

[18:14] <autrijus> theorbtwo: not yet. need to finish on the fly compilation first

[18:14] <autrijus> theorbtwo: then we may need a parrot run and a haskell run.

[18:14] * theorbtwo nods.

[18:14] <schmorp> Corion: s/port/rewrite/ would probably be more realistic

[18:14] <schmorp> Corion: how does parrot handle reentrancy problems?

[18:15] <autrijus> Coro is builtin in perl6 as lazy given/take no?

[18:15] <Corion> schmorp: Dunno - I haven't done any internals work

[18:15] <autrijus> and is in parrot as ./classes/coroutine.pmc

[18:15] <autrijus> also see ./t/pmc/coroutine.t

[18:15] <autrijus> er, I mean gather/take

[18:15] <schmorp> autrijus: yes, but how does it handle the c stack switches?

[18:16] <theorbtwo> It should be possible to do it just by changing the test harness var.

[18:16] <autrijus> schmorp: see parrot/classes/coroutine.c :D

[18:17] <autrijus> (which is a funny way to say "I don't know and don't care as long as it works")

[18:18] <schmorp> i don't think parrto will ever do more than "just work"

[18:18] <autrijus> sure.

[18:18] <autrijus> parrot has this very strong Right Thing design feeling.

[18:19] <elmex> i've a bad feling

[18:19] <schmorp> seriously? to me it lookas more as if a few people had their first try at doing a VM by emulating real hardware

[18:19] <autrijus> seriously.

[18:20] <autrijus> I had this kaffe main committer friend looking at parrot yesterday

[18:20] <autrijus> he thinks parrot should be taught in schools as the example of how to design a VM right.

[18:20] <autrijus> (I was surprised how good it is when I first looked at it seriously last week.)

[18:20] <schmorp> strange - it is so inefficient iwth regards to JIT and compilation

[18:20] <autrijus> *shrug* it worksforme. :)

[18:20] <schmorp> for example, you need to dor egister allocation at least twice

[18:20] <autrijus> and is faster than perl5 even if unannotated.

[18:21] <autrijus> <- doesn't want much.

[18:21] <schmorp> well, that is relatively easy :->

[18:21] <autrijus> mmm maybe it is, but perl5 is actually the faster of the scripting languages.

[18:22] <schmorp> i wonder how fast it would be if designed better

[18:23] <autrijus> it can always use more hack :)

[18:23] <rgs> perl 5.9 is faster than 5.8.

[18:23] <schmorp> it is not question of mroe hack, it is a question of less hack

[18:23] <autrijus> hack, as in improvement

[18:23] <autrijus> not as in kluge.

[18:23] <schmorp> yes

[18:24] <autrijus> but really, it's fast enough for me, and I think I like how easy it is to generate imc, so I've got no complaints.

[18:24] <autrijus> if you can find ways to improve its performance or redo something that runs imc but faster

[18:24] <autrijus> I'm all ears :D

[18:24] <schmorp> i just would have hoped that the parrot people would learn from the existing results we know about jit compilers and such

[18:24] <pjcj> I suspect chip will consider even radical design changes

[18:24] <autrijus> pjcj: right.

[18:24] <theorbtwo> That was a large part of the point of making it register-based.

[18:25] <schmorp> yes, so to jit compile parrot code one has to re-do register allocation another time

[18:25] <schmorp> also, a register is not faster than memory in a vm

[18:25] <schmorp> etc..

[18:25] <schmorp> (but this is the wrong channel for parrot rants :)

[18:26] <autrijus> right.

[18:26] <autrijus> and I hope rants results in code :)

[18:27] <jabbot> pugs - 1251 - One more permutation of '-c -e' gets now

[18:27] <schmorp> unfortunately, not likely with me and parrot (i'd like, but i have too many things going :()

[18:27] <elmex> hehe, if i would be mighty and wise enough to do a VM and JIT and allthat i would od it ;) *G*

[18:28] <autrijus> elmex: "learn" :)

[18:28] <schmorp> hmm, it seems parrot doesn'T handle reentrancy when coroutines are active

[18:28] <autrijus> it's actually quite learnable. I learned a lot just by reading docs.

[18:28] <autrijus> schmorp: oh, and I'm going to write a imcc implementation this week.

[18:28] <autrijus> imc, rather.

[18:29] <elmex> autrijus: i need many many years to do that

[18:29] <elmex> and then, perl7 will be out

[18:29] <autrijus> and then you can help!

[18:30] <schmorp> yes, elme xis very gifted :)=

[18:32] <schmorp> autrijus: imc is a good target, it's not that efficient due to the extra layer, but it makes it possible to replace aprrot by a completely different design

[18:32] <autrijus> yes.

[18:33] <autrijus> or have switchable runcores or something.

[18:33] <autrijus> it's very easy to implement imc :)

[18:36] <autrijus> hi oylenshpeegul.

[18:36] <schmorp> maybe in a yaer or so i'll implement my long-term-plan, using gcc to compile imc "just in time"

[18:36] <oylenshpeegul> hi

[18:36] <autrijus> that would be so nice.

[18:36] <autrijus> schmorp++ # in advance

[18:36] <elmex> lol

[18:36] <schmorp> i am htinking about that for some years now, no matter how long startup tiems get

[18:37] <schmorp> schmorp++ # need no such thing

[18:37] <perlbot> What kind of idiot karmas himself?  Your kind of idiot!

[18:37] <schmorp> was it reste at leats?

[18:38] <elmex> perlbot: karma schmorp

[18:38] <jabbot> elmex: schmorp has karma of 2

[18:38] <perlbot> schmorp doesn't have any karma

[18:38] <elmex> ?Q

[18:38] <elmex> !

[18:38] <elmex> elmex++

[18:38] <perlbot> What kind of idiot karmas himself?  Your kind of idiot!

[18:38] <elmex> perlbot: karma elmex

[18:38] <jabbot> elmex: elmex has karma of 3

[18:38] <perlbot> elmex doesn't have any karma

[18:39] <schmorp> aahh

[18:39] <elmex> lol, i rock

[18:42] <autrijus> IMCC lexer translated

[18:42] <autrijus> stub IMCC.hs too:

[18:43] <autrijus>     All that is gold does not glitter,

[18:43] <autrijus>     Not all those who wander are lost;

[18:43] <autrijus>     The old that is strong does not wither,

[18:43] <autrijus>     Deep roots are not reached by the frost.

[18:43] <autrijus> now sleep. see you tomorrow. :) &

[18:44] <elmex> who does come up with thos cites?

[18:44] <autrijus> me.

[18:44] <elmex> why not cite bible?

[18:44] <schmorp> cu

[18:45] <autrijus> because it is a perl cultural tradition to cite tolkien.

[18:45] <autrijus> see perl5's source code.

[18:45] <elmex> why

[18:45] <autrijus> ask larry.

[18:45] <theorbtwo> Interesting side note: Larry is a wacko bible freak, and chose to use Tolkien quotes.

[18:46] <autrijus> he is also a wacko middle earth freak.

[18:46] <autrijus> (as is jhi, as am I)

[18:46] <rgs> jhi is a wacko discworld freak.

[18:46] <autrijus> rgs: what kind of wacko freak are you?

[18:47] <jabbot> pugs - 1252 - * transcribed IMCC lexer

[18:47] <rgs> I'm not a freak !

[18:47] <Corion> ook

[18:48] <rgs> well, let's assume I'm a wacko jazz freak. Difficult to quote.

[18:48] <Corion> I could add some wacko quotes from X-Men and Sandman comics. Hmmm ;-)

[18:48] <Corion> rgs: Ah, bababadudbababdububababa # freejazz

[18:48] <elmex> i never liked lord of the ringens much

[18:49] <rgs> neither did I, to be honest. But quotes are cool.

[18:49] <elmex> childisch :)

[18:49] <rgs> that's how the perl subculture comes into existence.

[18:49] <elmex> but ... i'm a child still myself

[18:50] <rgs> elmex: are you german ?

[18:50] <elmex> lol, yes

[18:50] <elmex> my english isn't the best

[18:50] <rgs> you make german mispellings :)

[18:50] <elmex> those where only typos 

[18:51] <elmex> because i wrote it too quick

[18:51] <rgs> i make french mispellings too. exemple, connexion.

[18:52] <elmex> heh

[18:53] <theorbtwo> Odd, I wouldn't think ringens would be a german typo -- the german title is Herr der Ringe, so I should think it'd get mistylped ringes.

[18:54] <elmex> lol, indeed

[18:54] <rgs> theorbtwo: "childisch"

[18:54] <elmex> that was misspelling on purpose

[18:54] <pjcj> Lord of the Rings is on Swiss, Austrian and German TV at the moment.  Spookily enough.

[18:54] <rgs> _and_ on French TV.

[18:55] * theorbtwo shrugs -- I have all three on extended ed DVD.

[18:55] <autrijus> so, if leo shows up on #perl6 here later and I'm asleep, please keep him comfortable and happy :)

[18:55] * autrijus waves &

[18:55] <theorbtwo> Sleep well, autrijus.

[18:55] <pjcj> I obviously don't get that French channel, but three showing the same film is enough.

[18:57] <theorbtwo> We only get the Austrian and German channels here, and ORF1 barely comes in.

[18:58] <Corion> Heh. Mad props to GHC / Haskell - it detects edge cases of your function definitions ;-)

[18:59] <pjcj> leo on irc?!

[19:09] <Corion> Hi gaal!

[19:10] <Corion> I'm adding/cleaning the Haskell command line handling, as an exercise :)

[19:10] <gaal> Corion++

[19:12] <gaal> If you hadn't beat me to it, I'd try it myself

[19:13] * theorbtwo ponders... the interface with the mouseover thingy directly below the cell is somewhat easier to read, but makes navigation harder.

[19:14] <theorbtwo> (Because the tip obscures the next one down, so you have to mouse out and then back over to see the tip of that one.

[19:14] <Corion> gaal: Feel free to also work on it :)

[19:14] <theorbtwo> Also, I have no clue how to work around this firefox bug.

[19:14] <theorbtwo> (And I'm fairly certian that's what it is.)

[19:14] <Corion> theorbtwo: Hmm - maybe make it appear above instead - as most people will navigate downwards :))

[19:15] <theorbtwo> That would imply that I can figure out how to do that.

[19:15] <theorbtwo> CSS positioning seems to behave more like a black art then a well-specified language.

[19:16] <Corion> theorbtwo: Aiee :-) Well - consider simply using the overlib JS package that creates JS tooltips that appear right-down of the mouse

[19:16] <theorbtwo> JS--

[19:17] <Corion> theorbtwo: Ah, yes - I've sold part of my soul to the gods of JS, true ...

[19:18] <Corion> theorbtwo: But overlib most likely takes care of the ugly parts. On the other hand, that doesn't degrade nicely for non-JS browsers.

[19:18] <Corion> ... maybe see what Eric Meyer has to offer in his ComplexSpiral demos ?

[19:18] <theorbtwo> Ah-ha!

[19:19] <theorbtwo> Some of my HTMLification regexes were missing /g options.

[19:19] <gaal> Corion: Autrijus mentioned GetOpt, which has docs at http://www.haskell.org/ghc/docs/latest/html/libraries/Cabal/Distribution.GetOpt.html

[19:20] <Corion> gaal: Will look at these :)

[19:20] <gaal> it it's GNUish, I think, so it certainly doesn't do what we want, but if like me you need plenty of exaples, it might help

[19:20] <gaal> ..doesn't do *all* we want

[19:21] <Corion> gaal: I'll look if it does proper collecting of multiple -e fragments, which makes all the rest ugly :)

[19:23] <gaal> i doubt it.

[19:25] <Corion> gaal: Ugh :)

[19:25] <gaal> actually he was talking about System.Console.GetOpt <http://www.haskell.org/ghc/docs/latest/html/libraries/base/System.Console.GetOpt.html> but at a glance it looks pretty much the same thing.

[19:26] <gaal> well, p5's command line is pretty funky.

[19:26] <gaal> you need potentially a specifyable dispatch table.

[19:26] <gaal> well, if you want to write a library for it

[19:26] <gaal> if you don't, you just need a dispatch table :)

[19:28] <vladtz> hello, I was looking at the goto tests and noticed that you can't use return without a value

[19:29] <gaal> i wrote them, let me see

[19:29] <Corion> gaal: Hmmm. Currently I'm thinking of collecting all the "special" stuff in Named Field or whatever. But first, I want to flesh out -ce and -c -e and -e print -c (which doesn't work)

[19:29] <gaal> btw they're all commented out because of a hard parsefail

[19:29] <vladtz> I have an adjusted gotos test, which run's 6/8 tests Iĺl paste 'm

[19:30] <gaal> Corion: do declustering in one swoop maybe, instead of trying to parse every combination separately.

[19:30] <pasteling> "vladtz" at 80.127.84.50 pasted "goto return (void)" (42 lines, 825B) at http://sial.org/pbot/8670

[19:31] <Corion> gaal: Yep - that's what I'm currently doing :) Maybe I should simply sort the options before parsing them :)))

[19:31] <gaal> no no, don't do that

[19:31] <Corion> gaal: But first, I'll have to get Pugs into a compilable state again before committing :)

[19:31] <Corion> gaal: Why not?

[19:31] <gaal> some opts have very short effect which can then be changed

[19:31] <gaal> man perlrun and read -l and -0 carefully

[19:32] <vladtz> gaal: the missing value on return caused the parsefail

[19:32] <gaal> vladtz++, good catch, thanks.

[19:32] <gaal> though the error coordinates were messed up

[19:32] <vladtz> your welcome

[19:32] <Corion> gaal: Hmm - I thought that C<-l> and C<-0> merely inserted Perl code ?

[19:33] <gaal> and also, putting this in eval didn't help

[19:33] <Corion> (via perl -MO=Deparse -le "print")

[19:33] <gaal> no, see perl.c in p5

[19:33] <gaal> even if they did

[19:34] <gaal> you couldn't rearrange its order and maintain correctness

[19:34] <Corion> gaal: Ah, C source diving :( I had hoped to (later) just replace C<-l> by C< -e "BEGIN{...}" >

[19:34] <gaal> s/though// somewhere up there

[19:34] <Corion> gaal: No - I plan to keep all C<-e>, C<-l>, C<-0> arguments in their relative order (and what other cases there are).

[19:35] <Corion> gaal: Well, "plan" is a big word for it :)

[19:35] <Corion> gaal: But stripping out the C<-c>, C<-w> and C<-d> stuff would make that check much more convenient, true!

[19:36] <gaal> well, arguably this (declerative -l, -0) isn't a very important feature so perhaps you could bring it up for retirement on p6l? the command line isn't specced yet

[19:37] <gaal> vladtz, did you commit?

[19:37] <gaal> or shall i?

[19:37] <vladtz> please do, I have no comit access

[19:37] <gaal> ah. that should definitely change :)

[19:37] <gaal> any metacommiters around?

[19:38] <gaal> now that you've made it parse, there are plenty of more things to test with goto :)

[19:39] <theorbtwo> Hmm?

[19:39] <Corion> gaal: Never! I want -l and -0 as I use them often. In fact, my super-secret plan is the C<-g> option, which will make Pugs act mostly like grep.

[19:40] <theorbtwo> vladtz, email?

[19:40] <gaal> oh, -l and -0 of course, but maybe remove -0nnn -e 'code' -0 -mmm -e 'more'

[19:41] <gaal> that example may not in fact be a good one

[19:42] <Corion> gaal: I doubt that this works under P5 currently, but it would be nice to make it work under P6 :)

[19:42] <Corion> gaal: (a bit overboard, maybe :) )

[19:42] <vladtz> [email@hidden.address]
[19:47] <jabbot> pugs - 1253 - Added TODO test for unknown command line

[19:47] <gaal> reading it again, it looks like the main issue is that the order of -l and -0 matters, and some weird interactions may occur between the actual command line and the shebang line.

[19:47] <Corion> gaal: Ah well - those fine points can be cleaned up later :)

[19:47] <gaal> we need to remember the shebang line, because the kernel doesn't do that for us on windows

[19:47] <Corion> Is there anything like the "part()" function for Haskell, to part one list into two (or more) buckets ?

[19:48] <Corion> gaal: Ah, but the shebang "line" is available via getArgs() anyway :)

[19:48] * Corion goes looking in the Prelude docs

[19:49] <gaal> http://zvon.org/other/haskell/Outputprelude/ - the other day i saw exactly what you're looking for

[19:49] <gaal> but i forgot what it was :)

[19:49] <Corion> gaal: I forgot as well :)

[19:50] <Corion> gaal: But I find no inverse function of "zip" or a "grep" into multiple lists there ...

[19:50] <gaal> no multiple return values in haskell

[19:51] <gaal> you can return a list of course

[19:51] <gaal> but not two

[19:51] <Corion> gaal: Bah. Stupid language :(

[19:51] <gaal> so you can return [[a], [b]]

[19:51] <gaal> :)

[19:51] <Corion> gaal: Yeah, 

[19:51] <theorbtwo> Corion, you can only return one list in perl, too.

[19:51] <Corion> gaal: part() will be a good exercise in generic/general Haskell, and it'll make the later porting to Perl6 easier

[19:52] <gaal> heh

[19:52] <Corion> theorbtwo: True, but at least I have the choice of returning a list or a reference to a list, while in Haskell, I have to return a reference to a list :)

[19:52] <gaal> he's hot a point there, to2 does

[19:54] <gaal> heh, Corion, you (and I) were looking for partition :)

[19:54] <gaal> in List

[19:54] <Corion> gaal: Aaah ! One less exercise to do for me :)

[19:55] <gaal> and if you want two tuples, use break

[19:55] <gaal> hey you can still write it yourself :)

[19:58] <vladtz> theorbtwo: can you remove my e-mail from the log (silly me)?

[19:58] <Corion> gaal: I'll be starting with sortBy(), which implements a stable sorting mechanism, which is what I'll want/need :)

[19:58] <theorbtwo> No, I don't have access to that.

[19:58] <vladtz> pitty

[20:00] <theorbtwo> vladtz, you should be able to checkin now.  Please add yourself to AUTHORS as well.

[20:01] <theorbtwo> Sorry I was so slow; Bond is distracting.

[20:02] <gaal> but please svn up before you do more work on goto, i just checked in your fix.

[20:07] <jabbot> pugs - 1254 - fixed syntax error causing parsefail (vl

[20:12] <vladtz> gaal: just missed your message, backed out, did you add the test for empty return somewhere?

[20:13] <gaal> as a parsefail? no, good idea

[20:13] <gaal> can you add it?

[20:13] <gaal> prolly in t/syntax or maybe t/subroutine

[20:13] <gaal> the former, actually.

[20:13] <vladtz> yes Iĺl add it to goto.t?

[20:14] <gaal> no, since it's probably isolatable.

[20:14] <vladtz> subroutine (always confused by former and latter).

[20:15] <gaal> i meant syntax :) but whichever makes more sense to you. remember to use fail("FIXME parsefail") if it still hard-parsefails.

[20:18] <vladtz> it fits nicely into t/subroutines/sub_return_values.t

[20:19] <gaal> cool

[20:23] <vladtz> zzzzzzz

[20:37] <jabbot> pugs - 1256 - 

[20:37] <jabbot> pugs - 1255 - 

[20:38] * theorbtwo 's going to be AFK for at least an hour, possibly much longer -- I'm going to ci my current testgraph stuff -- it's certianly not bugless, but no more buggy then the current.

[20:42] <kungfuftr> evening all

[20:46] <Corion> Hmm. Sorting the command line seems to "work", at least in my testbed ...

[20:47] <jabbot> pugs - 1257 - testgraph: CSS and HTML-escaping updates

[20:54] <cm> hello

[20:54] <Corion> lr!

[21:06] <Corion> Yay! My -c / -e option sorter seems to pass its TODO tests now, at the price of a Haskell warning :)

[21:07] <gaal> congrats, Corion :)

[21:07] <pjcj> u

[21:07] <Corion> gaal: Thanks - I haven't tested it yet against the rest of the suite :))

[21:08] <Limbic_Region> hey Corion

[21:08] <Corion> Hi li!

[21:08] <Corion> err - lr, I meant :)

[21:08] * gaal &

[21:09] <Limbic_Region> tis ok

[21:09] <Corion> It's some ugly code I've created there, but it should be better than what we have now :)

[21:26] <kungfuftr> pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | FBSD_4.11:r1257(2/3212) win2k:r1197(105/3116) Linux:r1197(105/3116) MacOSX:r1197(105/3116) **[793 tests TODO]**

[21:27] *** kungfuftr changes topic to: pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | FBSD_4.11:r1257(2/3212) win2k:r1197(105/3116) Linux:r1197(105/3116) MacOSX:r1197(105/3116) **[793 tests TODO]**

[21:27] <kungfuftr> bah

[21:27] <cm> ..been kung-fu fighting..

[21:28] <kungfuftr> HUH!

[21:28] * fritzz install pubs atm

[21:28] <fritzz> on windows ...

[21:28] <fritzz> :|

[21:29] <kungfuftr> fritzz: that'll be a pint of bitter for me then

[21:29] <fritzz> hehe

[21:30] <Corion> Shouldn't this be valid Perl6 code? ("-h", "--help").map():{ $_, "-w $_", "$_ -w", "-w $_ -w" }

[21:30] <Corion> (that is, (list).map(){block} ? )

[21:33] <fritzz> i just installed GHC

[21:33] <fritzz> added it to my path

[21:34] <fritzz> but when i perl Makefile.pl: *** Cannot find a runnable 'ghc' from path

[21:34] <fritzz> when i type ghc, its there ...

[21:34] <cm> reboot :D

[21:34] <fritzz> lol

[21:34] <cm> close the console

[21:35] <cm> open it again

[21:35] <fritzz> i did

[21:35] <cm> for that the environment variables get updated.. :|

[21:35] <cm> hmm

[21:35] <fritzz> if i type ghc, i can reach the bin

[21:35] <cm> bizarreness

[21:35] <fritzz> ghc: no input files

[21:35] <fritzz> yup yup

[21:36] <Limbic_Region> is there a space in the path to where ghc is?

[21:37] <Limbic_Region> IIRC, there is/was a bug with that

[21:37] * Corion writes a parsefail todo test to test for C<< ("foo","bar").map() >>, because C<< ("foo","bar").sort() >> works :)

[21:38] <Corion> What is the protocol for adding parse fail tests like mine above?

[21:38] <fritzz> ill just reboot

[21:38] <fritzz> darn windowzz !

[21:38] <Limbic_Region> Corion - I will search the channel log

[21:39] <Corion> Limbic_Region: Thanks!

[21:39] <Limbic_Region> I remember there being something said about not commenting it out as it will never be uncommented

[21:40] <kungfuftr> Corion: todo_eval ?

[21:40] <Corion> kungfuftr: Don't ask me :) I'll use whatever you suggest :)

[21:42] * Limbic_Region thinks kungfuftr is correct Corion - still searching though

[21:43] <Limbic_Region> 2087 [21:14] <gaal> test writers: please mark your failing tests (those that must be commented out because even eval doesn't protect from them) with "fail('FIXME: parsefail');" 

[21:43] <Limbic_Region> that was on 2005-03-16

[21:43] <Limbic_Region> and then later on

[21:43] <fritzz> jeez

[21:43] <fritzz> same thing after a reboot

[21:44] <cm> might it be the spaes? :o

[21:44] <Limbic_Region> on the 17th 

[21:44] <Limbic_Region> it looks like nothingmuch added the todo_eval stuff Corion

[21:44] <fritzz> i added it to the user path, let me try with the system path

[21:44] <Limbic_Region> fritzz - for the 3rd time - are there spaces in the path to ghc?

[21:44] <Limbic_Region> IIRC there is/was a bug with that

[21:45] <fritzz> yes

[21:45] <fritzz> %20 ?

[21:45] <Corion> Limbic_Region: Heh. So it's gaal vs. nothingmuch ;-)

[21:45] <Limbic_Region> no Corion

[21:45] <Limbic_Region> gaal was present in the later conversation on the 17th

[21:45] <Corion> Limbic_Region: Ah :)

[21:45] <Limbic_Region> fritzz - not url spaces

[21:45] <cm> fritzz: use the short name

[21:45] <fritzz> ah !

[21:45] <cm> fritzz: like Progra~1 instead of Program Files, or such

[21:45] <fritzz> sorry for being so lame folks

[21:46] <cm> i believe that could work :|

[21:46] <Limbic_Region> or use subst to give pugs its own drive letter

[21:46] * Limbic_Region has a tendency to bend things to his will versus just fixing them

[21:46] <fritzz> work now :)

[21:46] <Limbic_Region> now if you had only listened to us 10 minutes ago

[21:46] <Limbic_Region> :P

[21:47] <fritzz> compiling in progress

[21:47] <fritzz> can i submit report ?

[21:47] <Limbic_Region> Corion - http://colabti.de/irclogger//irclogger_log_search/perl6?search=eval&action=search&timespan=20050226-20050326&text=checked

[21:47] <Limbic_Region> check the second to the last entry on the 16th

[21:47] <Limbic_Region> and then read the 17th

[21:47] <Limbic_Region> you be the judge of what is correct

[21:51] <fritzz> pugs installed successfully :)

[21:57] <cm> on win32? :)

[21:57] <jabbot> pugs - 1259 - Parse bug: Map applied to constant list

[21:57] <jabbot> pugs - 1258 - Partially reworked command line parsing

[21:57] <cm> fritzz: nice. what kind of requirements does it have besides GHC?

[21:57] <cm> fritzz: Perl 5?

[21:57] <fritzz> sound like

[21:57] <fritzz> look like he installed itself in my perl5 dir

[21:58] <fritzz> now i can finally mess with perl6 named arguments :)

[21:58] <Corion> I went with the todo_eval_is route :)

[22:01] <Corion> r1259(0/3221)

[22:01] <Corion> (on win2k)

[22:02] <Corion> ... and I should maybe change 5 of my unexpectedly succeeding tests from todo_ to real tests :)

[22:06] <Corion> Are the current pugs build number stored in any internal variables ? Like somewhere in (the Perl6 equivalent of) Config.pm ? Or $], whatever its name now is ?

[22:06] <integral> pugs_config.h and pugs_version.h contain #defines, as used in Help.hs

[22:08] <integral> The Help module also exports some version information variables, which then don't get used in Config.hs

[22:08] <Corion> integral: :)) So it's not readily available from within Perl6 code :)

[22:09] <integral> Not yet :-)   I'm about to sleep, but if I wasn't, I'd hack Config.hs to use Help.hs or the two header files

[22:09] <Corion> integral+

[22:09] <Corion> integral++

[22:10] <integral> hmm, actually, ...

[22:10] <Corion> Enoguh hacking from me - tomorrow, I might add the implicit conversion of C<-l> to C<-e "BEGIN{...}"> - now I just need to find out what to put there instead of the dots :)

[22:13] <Corion> Gah. Pugs doesn't even like "BEGIN { ... } " yet :)

[22:13] <fritzz> my precious BEGIN

[22:14] <fritzz> usefull to parse config file onload :)

[22:15] <Corion> fritzz: Also very much needed to implement C< -l > :)

[22:15] <Corion> (the command line option, not the -X function)

[22:16] <fritzz> what is C< -l > ?

[22:16] *** khisanth_ is now known as Khisanth

[22:18] <Corion> fritzz: The "-l" command line option (I use Pod escape syntax)

[22:18] <Corion> fritzz: See perldoc perlrun

[22:27] <nothingmuch> stevan: ping

[22:30] <nothingmuch> do we have any vim ninjas present?

[22:32] <rgs> nothingmuch: ask

[22:32] <nothingmuch> perl6.vim should not gobble up =kwid, =pod, =etc

[22:32] <nothingmuch> they should be treated as comments

[22:33] <nothingmuch> at least for starters

[22:33] <nothingmuch> it is giving me a hell of a time trying to parse the HTML output of Text::VimColors, as I need to flatten some <spans>, due to the way it currently parses L<S02/"Section" /skip regex/> stuf

[22:34] <rgs> show me a file that demonstrates the bad behaviour

[22:35] <nothingmuch> t/operators/hyper.t

[22:36] <Corion> Err - how do I specify an "\n" string literal in Haskell ? is chr(13) the only way ?

[22:42] <pjcj> What's the problem with using \n?  That should be fine, I think.

[22:43] <Corion> pjcj: At least with GHC, I get a literal "\n" in the string then :)

[22:44] <rgs> nothingmuch: do I put only "=cut" as an end marker ?

[22:44] <nothingmuch> uhuh

[22:44] <nothingmuch> afaik

[22:44] <nothingmuch> either way, it should do for now

[22:45] <pjcj> Corion: go into ghci, type 'putStrLn "a\nb"'

[22:45] <rgs> nothingmuch: Lexer.hs only lists =pod and =cut as markers.

[22:45] <Corion> pjcj: Weird... I'll try again ... Maybe putStrLn interprets stuff?

[22:45] <nothingmuch> i think it skips =anything

[22:45] <rgs> ( in comments )

[22:46] <nothingmuch> since =kwid doesn't seem to bother it

[22:46] <rgs> ok

[22:46] <Corion> Yeah - simply typing "a\nb" returns "a\nb" and not "a<newline>b"

[22:47] <rgs> ok, Parser.hs has the definition of pod blocks

[22:48] <rgs> nothingmuch: commited

[22:49] <nothingmuch> rgs++

[22:49] <nothingmuch> do you have a colorscheme that could work well?

[22:49] <nothingmuch> the pink one is not that nice

[22:50] <nothingmuch> it shares too much colors

[22:50] <rgs> I don't know

[22:50] <nothingmuch> and i don't think it's fair to impose mine

[22:50] <nothingmuch> it's a bit too nasty

[22:50] <rgs> I'm colour blind. Everyone finds my custom colorscheme ugly

[22:50] <Juerd> I'm colour deaf

[22:51] <Juerd> I can't hear the difference between green and red very well

[22:51] <Juerd> rgs: What colours can you see?

[22:51] <nothingmuch> hmmm

[22:52] <rgs> Juerd: this question doesn't make much sense

[22:52] <nothingmuch> syn region p6POD start="^=[a-z]" end="^=cut" <-- makes perfect sense, but doesn't work for me

[22:52] <nothingmuch> perlbot nopaste

[22:52] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[22:53] <Juerd> rgs: Why not? Do you see no colour at all then?

[22:53] <rgs> Juerd: I see colors. Less than other people.

[22:53] <rgs> Besides this, I have difficulties remembering color names in English.

[22:53] <Juerd> Do you know as which you see them?

[22:54] <rgs> I can't see violet, for example

[22:54] <pasteling> "nothingmuch" at 212.143.91.217 pasted "how perl6.vim colors pod:" (5 lines, 163B) at http://sial.org/pbot/8675

[22:55] <Juerd> rgs: Never go to Belgium by the way - the traffic lights there do not make sense if you can't see the difference between colours

[22:56] <Juerd> They don't consistently stick to the red/yellow/green pattern

[22:56] <nothingmuch> sideways and stuff?

[22:56] * theorbtwo returns.

[22:56] <nothingmuch> hurrah! theorbtwo is here!@

[22:57] <Juerd> nothingmuch: Well, there are traffic lights with dual yellow, or 2-column thingies where next to the main green light is a red arrow

[22:57] <theorbtwo> Have I been missed?

[22:57] <jabbot> pugs - 1260 - Treat pod blocks as comments w.r.t. vim 

[22:57] <pjcj> Corion: \n is a single character.  '\n' is legal and length "a\nb" is 3.

[22:57] <nothingmuch> oh my

[22:57] <Juerd> nothingmuch: And green/red/yellow/green happens too

[22:57] <rgs> Juerd: I've been to Brussels twice

[22:57] <Juerd> rgs: Ah, glad you survived :)

[22:58] * Juerd thinks most of these weird lights are in Antwerp

[22:58] <Juerd> The city you drive into at 120 km/h, after which the motorway suddenly becomes a normal road with traffic lights and everything

[22:58] <nothingmuch> rgs: any clue why that still happens?

[23:00] <rgs> nothingmuch: well, in my tests the whole pod block is highlighted in the p6POD class

[23:00] <nothingmuch> that's odd

[23:00] <nothingmuch> i just noticed it's only doing that for HTML output

[23:01] <nothingmuch> and that :TOhtml from that window works properly

[23:01] <rgs> FWIW I have this in my &stl option, to debug highlighting : (%{synIDattr(synID(line('.'),col('.'),0),'name')})

[23:04] <nothingmuch> ah, i think i see:

[23:04] <nothingmuch> :let perl_include_pod=1

[23:04] <nothingmuch> Text::VimColors is passing that,

[23:05] <rgs> this variable is used by syntax/perl.vim

[23:10] <rgs> time to sleep.

[23:13] <stevan> nothingmuch: hello

[23:13] <nothingmuch> hola

[23:13] <stevan> you pinged?

[23:13] <nothingmuch> yeah, but i forgot why

[23:13] <stevan> ok

[23:14] <nothingmuch> =)

[23:15] <stevan> pjcj: was that your email about code coverage on p6c?

[23:15] <Corion> pjcj: Weird - I must have done something wrong before, because now it works exactly as you say (and what I expected when I started :) )

[23:15] <Corion> pjcj: Thanks!

[23:16] <pjcj> stevan: yeah - I mentioned it briefly here and autrijus asked for a mail to p6c

[23:16] <pjcj> Corion: good ;-)

[23:16] <stevan> Devel::Cover for perl6 would be really cool. I hope that works out 

[23:16] * Corion promotes a todo_is test to is() :)

[23:18] <Corion> Win2k:r1261(0/3229)

[23:20] <Corion> good night all! My work is done by tainting Main.hs with lots of ugly code ...

[23:29] * nothingmuch is frustrated

[23:32] <theorbtwo> Eh, nm?

[23:32] <theorbtwo> With the syntax hilighting for the tests?

[23:34] <theorbtwo> I'm rather fustrated by this apparent firefox bug.

[23:35] <nothingmuch> yes

[23:35] <nothingmuch> vim highlights ok, but then 'source /usr/local/lib/perl5/site_perl/5.9.1/Text/VimColor/mark.vim' yields:

[23:35] <nothingmuch> >Comment>=pod<Comment<

[23:35] <nothingmuch> >>Hyper operators L&lS<<>Number>03<Number<>>/<<>Constant>"Hyper operators"<Constant<>>&g<<

[23:35] <nothingmuch> stupid

[23:37] <jabbot> pugs - 1261 - Multiple -e switches work now

[23:57] <jabbot> pugs - 1262 - fixed AUTHOR in pugscc; worked on PodStr

