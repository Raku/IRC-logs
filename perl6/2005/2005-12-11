[00:00] <svnbot6> r8164 | autrijus++ | * PIL.Native: stub evaluator, roundtrip prettyprinter,

[00:00] <svnbot6> r8164 | autrijus++ |   readline-enabled shell, etc etc.

[00:04] <audreyt> PJF: sure! probe into %SYSTEMDRIVE%/ghc/ghc-* and choose the lexographically largest one?

[00:04] <PJF> That's the plan.

[00:04] <PJF> Thanks Audrey!

[00:04] <audreyt> (that's going to bite us in ghc 6.10.0 -- so if you want to be even more meticulous, go ahead :-))

[00:05] <audreyt> pjf++

[00:12] <Alias_> I thought we did that yesterday

[00:12] <audreyt> we _talked_ about doing that :) 

[00:12] <Alias_> ah

[00:12] <audreyt> pjf just jfdi'ed

[00:13] <PJF> You can fix my code after it's committed, Alias.  Just look for the bits marked 'XXX' and follow the instructions.

[00:13] <PJF> Actually, I'm hoping you can test it on your Windows-flavoured system to make sure it works.

[00:14] <svnbot6> r8165 | autrijus++ | * Unbreak Pugs.Parser from gaal++'s s/extract/extractPlaceholderVars/g change.

[00:14] <svnbot6> r8165 | autrijus++ | * `foo.bar` is now always parsed as `::foo.bar` instead of

[00:14] <svnbot6> r8165 | autrijus++ |   `foo(.bar)`, unless there is a unary foo() function in scope.

[00:14] <svnbot6> r8165 | autrijus++ | * Nullary methods in class scope no longer participate into parsing as unary

[00:14] <svnbot6> r8165 | autrijus++ |   functions.  This fixes the infinite-BUILD problem:

[00:14] <svnbot6> r8165 | autrijus++ |     class foo {}

[00:14] <svnbot6> r8165 | autrijus++ |     class bar { has $.foo is rw; submethod BUILD () { $.foo = foo.new } }

[00:14] <svnbot6> r8165 | autrijus++ |     say bar.new;

[00:15] <svnbot6> r8165 | autrijus++ |   Thanks to r0nny and xinming for their persistence in bringing this issue up.

[00:15] * audreyt feels productive :)

[00:16] <Alias_> We can put a stop to that

[00:16] * audreyt takes a short break to implement provides: support in Module::Install

[00:16] <audreyt> right, like, lunch

[00:36] <audreyt> new M::I released -- going back to pugs

[00:42] <svnbot6> r8166 | juerd++ | Putting feather's website (still one page) in pugs' repository.

[00:42] <svnbot6> r8166 | juerd++ | This overcomes the need for a wiki, still enabling everyone to contribute.

[00:42] <svnbot6> r8166 | juerd++ | Please *do* contribute!!

[00:45] <Juerd_> audreyt: I'd like to ask you to move your svk guide there

[00:45] <Juerd_> audreyt: A link on the home page will also do. In that case, just ask me to do it :)

[00:45] <audreyt> Juerd_: can you do it for me? I'm going to airport soonish

[00:45] <audreyt> yup :)

[00:45] <Juerd_> audreyt: Which one?

[00:45] <clkao> where?

[00:46] <Juerd_> audreyt: Move or link?

[00:47] <Alias_> This is a  normal message

[00:47] <Alias_> Please ignore me, making a Wink demonstration

[00:47] <Alias_> bye!

[00:49] <Juerd_> I'll move it, then everyone can help edit it

[00:50] <audreyt> Juerd_: move is better

[00:53] <PJF> M::I gurus: I'm hoping to save the path to 'ghc' in order to facilitate detection of 'ghc-pkg'.  Can I stuff that into $self->{ghc} in Module::Install::Pugs, or is there a better place?

[00:54] <PJF> Better yet, can I cache the result to assert_ghc_pkg?  Otherwise has_ghc_package goes through all the work of refinding ghc-pkg every time it's called.

[00:54] <svnbot6> r8167 | juerd++ | svk.html

[00:54] <svnbot6> r8168 | juerd++ | Add note that the site is synced every 5 minutes.

[00:55] <audreyt> PJF: sure, just memoize it

[00:55] <audreyt> using a per-object cache

[00:55] <audreyt> each M::I plugin is responsible for managing their own stash, so that's safe

[00:56] <PJF> Using a per-object cache is actually a little easier at the moment, since it allows me to pass a hint to assert_ghc_pkg when we first call it from assert_ghc, but not pass it anything thereafter.

[00:57] <PJF> Oh!  Do you mean memoize it on a per-object basis?  Sorry, mis-parsed.  Can I use $self->{ghc} instead, or will that break M::I expectations of derived classes not adding new attributes?

[00:58] <audreyt> there is no such expectation :)

[00:58] <audreyt> attrs are completely plugin managed

[00:58] <audreyt> M::I only interacts via methods.

[00:58] <PJF> Huzzah!  My code is now just ugly, rather than shockingly ugly.

[00:58] <audreyt> huzzah

[00:58] <Juerd_> PJF: If you could do the same to http://feather.perl6.nl/, that'd be great :P

[00:59] <PJF> You want me to make feather.perl6.nl shockingly ugly as well?

[00:59] <Juerd_> No, ugly rather than shockingly ugly :)

[00:59] <PJF> I think it looks just fine. ;)

[01:00] <PJF> Although you could probably apply a wee stylesheet if you wanted to pretty it up.

[01:00] <Juerd_> Do you have committer access?

[01:01] <PJF> Jured: To feather.perl6? Not that I'm aware of.

[01:01] <Juerd_> No, pugs

[01:01] <Juerd_> This is in pugs/docs/feather

[01:01] <PJF> Oh yes, to pugs I certainly do.

[01:01] <Juerd_> Then be my guest, if you have any idea for the stylesheet

[01:01] <PJF> I'll see what I can do about making it look a little nicer then. ;)

[01:01] <Juerd_> Thanks

[01:02] <PJF> I take it you won't object too much if I enforce my strongly held XHTML beliefs onto it?

[01:02] <PJF> s/enforce/impose/

[01:02] <Juerd_> I don't :)

[01:07] <Juerd_> I'm going to bed

[01:07] <Juerd_> Good night!

[01:09] <PJF> Night Juerd.

[01:12] <audreyt> lunch... bbiab

[01:21] <svnbot6> r8169 | pjf++ | XHTML strict

[01:26] <PJF> Audrey: Is http://www.pugscode.org/css/perl.css stealable for use in http://feather.perl6.nl/ ?

[01:28] <Juerd_> It's the perl.org stylesheet

[01:29] <Juerd_> But I'm sleeping :)

[01:29] <PJF> I thought it looked very familiar.  It doesn't come with any attribution.

[01:29] <PJF> Cute.  I broke ghc: ghc.exe: internal error: update_fwd: unknown/strange object  0

[01:31] <audreyt> PJF: sure, it's stealable :)

[01:31] <audreyt> PJF: during a partial rebuild?

[01:32] <audreyt> or during execution?

[01:32] <PJF> audreyt: During a standard 'make'.  Re-running it made it all happy.

[01:33] <PJF> Could have something to do with me changing the windows priority half-way through, and sprinkling ghc with signals.

[01:33] <audreyt> yup. it's a known issue on the GHC RTS on windows

[01:33] <audreyt> (RTS = runtime system)

[01:33] <PJF> It's running 'make test' happily now, though.  Time for me to review my detection code and submit.

[01:33] <audreyt> cool!

[01:34] <audreyt> any code you submit will be subject to multiple reviews afterwards anyway, so a good rule-of-thumb is "when in doubt, commit" -- i.e. sanity checking if you have time, but don't worry if you don't :)

[01:35] <PJF> I have time, and like to summarise everything into the commit message.  I've changed a few things.

[01:35] <PJF> There's a few bits of code that use $ENV{GHC} || 'ghc', which is no longer desirable.

[01:35] <audreyt> nodnod

[01:35] <audreyt> excellent

[01:35] <audreyt> PJF++ # bringing sanity to the part that most needs it (build system)

[01:36] <audreyt> ingy++ # coming up with a build system that even works

[01:38] <PJF> Is GHC correctly written 'GHC' or 'ghc' in documentation?

[01:39] <audreyt> it's an acronym (_unlike_ Pugs or Perl)

[01:40] <audreyt> so GHC is correct; use "ghc" if you only want to talk about the executable

[01:40] <PJF> Thanks!

[01:40] <audreyt> np :)

[01:46] <azuroth> eval my $a = 1..10; my $b = pop $a; say $b; say $a;

[01:47] <azuroth> ?eval my $a = 1..10; my $b = pop $a; say $b; say $a;

[01:47] *** evalbot_8156 is now known as evalbot_8169

[01:47] <evalbot_8169> OUTPUT[10 123456789 ] bool::true 

[01:58] <svnbot6> r8170 | pjf++ | General improvement of Win32/Cygwin GHC detection code.

[01:58] <svnbot6> r8170 | pjf++ | * Makefile.PL::has_ghc_package() now requires a third argument, being

[01:58] <svnbot6> r8170 | pjf++ |   the 'ghc' command (with path if applicable).

[01:58] <svnbot6> r8170 | pjf++ | In inc::Module::Install::Pugs:

[01:58] <svnbot6> r8170 | pjf++ | * assert_ghc now goes looking for GHC on Win32/Cygwin systems.

[01:58] <svnbot6> r8170 | pjf++ |   This performs lexical sorting of version names, and will bite

[01:58] <svnbot6> r8170 | pjf++ |   us if part of a GHC version string contains a two-digits.

[01:58] <svnbot6> r8170 | pjf++ | * assert_ghc_pkg now caches its findings, rather than re-searching

[01:58] <svnbot6> r8170 | pjf++ |   every time.

[01:58] <svnbot6> r8170 | pjf++ | * assert_ghc_pkg doesn't trust can_run() on cygwin if we're clearly

[01:58] <svnbot6> r8170 | pjf++ |   trying to work with a Windows-land program.  See

[01:58] <svnbot6> r8170 | pjf++ |   https://rt.cpan.org/Ticket/Display.html?id=16375 for details.

[01:59] * PJF apologies for svnbot's spam.

[02:15] <audreyt> PJF: no need to apologize -- there's a reason why we added the trailing ++

[02:16] * audreyt grokked the PPI document object model

[02:17] <audreyt> Alias++ # powerful mind-control laser based education

[02:33] <azuroth> finalizate? heh

[02:49] <audreyt> Alias_: I committed install_share() support into M::I. (r49)

[02:50] <Alias_> audreyt++ # M:I

[02:51] <Alias_> audreyt++ # Having to start karma all over again

[02:51] <audreyt> lol

[02:52] <azuroth> audreyt: did you get a stalker or something..?

[02:53] <audreyt> azuroth: nah :)

[02:59] <svnbot6> r8171 | autrijus++ | * Fix PJF++'s GHC probing logic by normalizing the version

[02:59] <svnbot6> r8171 | autrijus++ |   numbers in directories, so we are fine even when GHC 6.10.999

[02:59] <svnbot6> r8171 | autrijus++ |   is released.

[03:29] <svnbot6> r8172 | azuroth++ | Just a lot of typos, bad spelling and other wrongness.

[03:30] <azuroth> psst. what's the magic incantation to redirect stderr to stdout? 2>&1 ?

[03:36] <dduncan> ping mugwump

[03:36] <dduncan> seen mugwump

[03:47] <stevan_> audreyt: ping

[03:51] <stevan_> exit

[03:51] <stevan_> bah

[03:57] <dduncan> I still have to figure out why, but my last smoke, r8159, took about 6 hours to complete, where normally its about 45 mins ... this is the first time I uploaded a smoke since 2 weeks ago, as there were recently avoided infinite tests during the interim

[03:57] <dduncan> will resync and try another ...

[04:05] <PJF> dduncan: I found a few tests in the smoke would go into infinite loops.  I've tweaked them into flunks.  Previously the infinite loops would run until pugs got tired (a very, very long time) before failing.

[04:05] <svnbot6> r8173 | autrijus++ | * Transcribe native methods from Perl6::ObjectSpace::Core::*

[04:05] <svnbot6> r8173 | autrijus++ |   into PIL.Native.Prim.

[04:05] <audreyt> stevan: yo

[04:05] <audreyt> stevan: PIL.Native.Prim should make you happy :)

[04:05] <audreyt> stevan: next step is to build Instance from the minilang

[04:06] <audreyt> I'm already late for catching my plane to sydney -- expect me to check back about 3hrs later from Mad Golfer's place

[04:07] <dduncan> hello

[04:07] <audreyt> dduncan: yo

[04:07] <audreyt> dduncan: indefinite loops is surely the reason

[04:07] <audreyt> dduncan: but if it's even slower than that, that may be because of gaal's Ann work

[04:07] <PJF> audreyt: Thanks for the updates to the install process.  I can sleep well at night knowing that ghc 6.77777777.8 won't break things.

[04:07] <dduncan> I noted that the commit log over the last few days showed an infinite loop resolution, so I tried smoking again today

[04:08] <audreyt> dduncan: do you know where it stuck for a long time in particular or it's just generally slower?

[04:08] <dduncan> even before that happened, I did notice a longstanding odd behaviour

[04:08] <audreyt> I can build an older pugs and benchmark

[04:08] <dduncan> where occasionally a smoke took double the time as usual ... I think that normally happened after a Makefile.PL update or equivalent

[04:09] <audreyt> hmmm

[04:09] <dduncan> as for right now, I would say it was generally slower and couldn't isolate further

[04:09] <audreyt> or maybe the smoke time counter counted the make? iirc it doesn't

[04:09] <audreyt> okay, noted, will do a profile run before release

[04:09] <audreyt> thanks for the reminder

[04:09] <dduncan> I also know from human observation that I started that reported smoke around 2pm this afternoon and it finished around 8pm

[04:10] <dduncan> and it was using the typical 100%ish CPU

[04:10] <audreyt> nodnod. I think it might be the pragma tweak

[04:10] <dduncan> anyway, I'm trying another now in case that was a fluke

[04:10] <Alias_> Oh for a distribution harness that records wallclock and CPU times...

[04:10] <Alias_> ;)

[04:10] <audreyt> ok. if it's still slower, we can deal

[04:10] <dduncan> I found that typically the wallclock time was close to the reported time

[04:10] <audreyt> Alias_: well, yeah, ours do... it's just not very portable to other distributions :)

[04:11] <Alias_> heh

[04:11] <audreyt> see http://smoke.pugscode.org/

[04:11] <audreyt> ok, time to run

[04:12] <audreyt> bbl from sydney &

[04:12] <dduncan> yes, you can see 345 mins there for darwin

[04:12] <dduncan> that's the one

[04:13] <dduncan> the slowdown seemed general, as I manually checked its progress a dozen times, and the increment was fairly consistent

[04:32] <dduncan> now starting smoke of r8173...

[04:47] <meppl> gute nacht

[05:33] <dduncan> status: smoke is now at ext/Tree

[05:34] <dduncan> so this portion has taken a whole hour by itself

[05:34] <dduncan> (portion from start of /ext)

[05:36] <gaal> eep, sorry for the b0rkag

[05:36] <gaal> and good morning

[05:37] <obra>   who maintains the html formats on smoke.pugscode.org?

[05:39] <gaal> Test::TAP::HTMLMatrix. want a committer bit?

[05:39] <obra> heh. I was just going to suggest column headings ;)

[05:39] <obra> I'm insufficiently motivated to hack, though

[05:40] <gaal> you mean in the matrix, or in the summary page?

[05:40] <obra> the summary page

[05:40] <gaal> the summary is in util/smokeserv

[05:40] <obra> the color-coded results are the bit that are hardest to parse 

[05:41] <gaal> util/smokeserv/ that is.

[05:41] <obra> (Also, one of my developers is colorblind. he's made it clear to me how much red/green and no other indication sucks ;)

[05:43] <gaal> that's a good point, regarding the matrix though I've no ideas on how to make it better.

[05:44] <gaal> does CSS offer bevelled boxes? maybe we can round off passing tests of something.

[05:46] <obra> http://www.dzinelabs.com/Pages/template_bevel.php

[05:48] <gaal> I meant rounded corners

[05:49] <gaal> was using the wrong word though.

[05:49] <dduncan> smoke now at t/builtins at 1h18m mark

[05:51] <obra> Ah. ok. um. rounded corners.  google openrico

[05:53] <obra> also  http://www.456bereastreet.com/

[05:53] <gaal> I take it the answer about CSS having a roundy box property is "no" :-)

[05:54] <gaal> the html for the matrix is already huge, so I really want to avoid doing Stuff for each cell.

[05:54] <obra> yeah. this is done with .js

[05:54] <obra> so it doesn't mess with your pretty semantic html

[05:55] <gaal> we've avoided js so far... I don't know, have to think about it

[05:56] <obra> sure.

[05:56] <obra> It does degrade nicefully

[05:56] <obra> nicely

[05:56] <obra> Though I totally understand the reluctance

[06:00] <gaal> If ("pigs could fly", "we had parrot in the browser").pick the smokes would stay YAML all the way to the browser, who'd do the rendering itself.

[06:01] <obra> well, you could do that today with JS

[06:01] <gaal> it'd take forever.

[06:01] <obra> in JSON?

[06:01] <gaal> it's already slow to change tests.yml to smoke.html

[06:02] <obra> what's it parsing with?

[06:03] <gaal> YAML.pm - which is slow :(

[06:03] <gaal> perl -MYAML -le '$x = time; $y=YAML::LoadFile("tests.yml");$x-=time; print 0-$x'

[06:03] <gaal> # 14 seconds

[06:03] <gaal> for a > 2.5 mb yaml

[06:04] <gaal> excuse my dirty benchmark :)

[06:05] <obra> heh

[06:06] <gaal> hmm, anyone here know enough ruby to run an equivalent oneliner there?

[06:06] <gaal> i bet syck is much faster.

[06:08] <gaal> hahaha, I was looking for a cheat sheet and of course I got cartools cause this is ruby:

[06:08] <gaal> # http://yaml4r.sourceforge.net/

[06:10] <gaal> (docs in pdf)--

[06:12] <gaal> answer: waaaay faster.

[06:13] <gaal> time ruby -e 'require "yaml"; x = YAML::parse(File.open("tests.yml"))'

[06:13] <gaal> # 2.460u 2.920s 0:05.38 100.0%    0+0k 0+0io 0pf+0w

[06:13] <gaal> note that these 5 seconds included loading ruby and the oneliner too.

[06:13] <obra> isn't there a syck perl binding?

[06:13] <gaal> I have to go to $work, see y'all later

[06:14] <gaal> Dunno. If there is, we'll want to use it conditionally..

[06:14] * gaal vanishes

[06:31] *** buu_ is now known as buu

[06:38] <dduncan> now smoke just started data_types

[06:38] <dduncan> little over 2h in

[06:39] * gaal wonders if the Ann change could have caused the slowdown

[06:40] <gaal> dduncan: could you try smoking 8152?

[06:40] <gaal> also, please make sure you have the Prelude precompiled!

[06:40] <gaal> you can test that w/o breaking off your smoke

[06:41] <gaal> just 'pugs' and see how fast the "Loading Prelude" message is in the interactive env.

[06:41] <gaal> I'm really, really not here now. :)

[07:31] <dduncan> now smoke is 3 hours in, and we're on t/oo/roles

[07:31] <dduncan> already, this is 4x the amount of time a full smoke usually takes

[07:32] <dduncan> still appears evenly distributed

[07:35] <obra> what made it go slower?

[07:35] <Alias_> obra++ # Having talked to audreyt, realised again how good a grant admin you were

[07:36] <Alias_> (certainly compared to the typical level)

[07:41] <obra> heh.

[07:41] <obra> I'm not actually a grant admin so much as a project manager

[07:41] <obra> but thanks :)

[07:42] <Alias_> Traded grant war stories with audreyt 

[07:42] <obra> *nod*

[07:42] <Alias_> Apparently your promptness and persistance were the key

[07:42] <obra> I try to keep away from the money. That helps a lot too

[07:42] <Alias_> The expectation that the email will arive to the specific day

[07:42] <Alias_> And that you can't be ignored

[07:43] <Alias_> Other stories of irregular emails, and not chasing up if no response

[07:43] <Alias_> Do you have a guide for grant managers?

[07:44] <obra> I don't, really.

[07:44] <obra> Again, what I do is project management, not grant management.

[07:44] <Alias_> A short intro might be useful

[07:44] <obra> And it's a weird variety of project management, since it's all opensource stuff

[07:44] <obra> *nod* I'll add it to the queue

[07:44] <obra> no guarantees on timeliness, though

[07:45] <Alias_> "Contact them as reliably as possible. And even if it's Larry or Damien don't feel intimidated. They DO have to report to you. Make them"

[07:45] <Alias_> etc

[07:48] <obra> Most everyone I work with is a volunteer. And they don't have to report to me unless they want to.

[07:48] <obra> But, if they report to each other, they'll get more done and feel more productive

[07:49] <Alias_> I'm not sure of the specifics on how it needs to be done, but some guidance might be good

[07:49] <Alias_> To also help new people do it without too much of a hump

[07:50] <obra> Are you picking up some sort of grant admin role?

[07:51] <Alias_> hmm?

[07:51] <Alias_> That might be a conflict of interest :)

[07:51] <obra> Do you have a specific project manager you're looking to have trained?

[07:52] <Alias_> Nope... just an idea based on scuttlebut by recipients :)

[07:53] <obra> *nod* I've been talking to folks about ways to improve that.

[07:53] <obra> I should talk to whiteg

[07:53] <Alias_> The blog thing might help, although it's going to perhaps mean a little more politically sensitive language in the reports

[07:55] <obra> if there are reports, that's still better than what's now

[07:55] * Alias_ shrugs... again, I'm surprised people take grants and then don't follow through on their commitments

[07:58] <dduncan> 3.5 hours in, now on t/packages

[07:59] <Alias_> Can you isolate the specific commit that did it?

[07:59] <dduncan> obra, I don't know why it's slower, but it seems to be an element that is common to all the tests

[07:59] <dduncan> I could try

[08:00] <Alias_> Pick a point half-way between you known points, and then recurse

[08:00] <dduncan> all I know is that this happened after those infinite runtime tests, but not before them

[08:00] <Alias_> shouldn't take amazingly long

[08:00] <Alias_> You should be able to tell pretty quick, right?

[08:00] <Alias_> if any given iteration is slow?

[08:00] <dduncan> it would probably take several hours of testing to figure that out ... not enough time tonight

[08:01] <dduncan> I'd have to exactly time a portion first

[08:01] <dduncan> then I could test with just that to measure it, perhaps 5-10 minutes per version tested

[08:01] <Alias_> Isn't it almost an order of magnitude?

[08:01] <dduncan> yes ... about 5-10X slower

[08:01] <Alias_> but yeah, shouldn't take long... you could almost eyeball it

[08:02] <dduncan> either way, not tonight

[08:02] <Alias_> right

[08:02] <dduncan> actually ...

[08:03] <dduncan> even if I only run part of the smoke, I still have to run 100% of the pugs compile for each version being tested, and that takes a good hour plus

[08:03] <dduncan> at least to start with

[08:03] <Alias_> (current - previous)log(2) * 1.5 hours...

[08:04] <Alias_> a while then :)

[08:04] <dduncan> the last time I know it was normal speed is 2 weeks ago ...

[08:04] <dduncan> my last smoke before the infinites

[08:04] <Alias_> ew

[08:04] <dduncan> the infinites lasted for a week plus ...

[08:05] <dduncan> I wonder if any other smokers showed changes ...

[08:05] <dduncan> looking ...

[08:05] <dduncan> they all seem fast

[08:05] <dduncan> I think the first thing I'll do is a 'make clean' or something

[08:07] <dduncan> meanwhile, I'm killing the current one ...

[08:09] <whiteg> obra: ?

[08:09] <obra> whiteg: about the grant interviews you were thinking about doing back then

[08:10] * whiteg is tracking logs

[08:11] <obra> *nod*

[08:14] <gaal> dduncan: make sure you have Prelude precompiled, and please test against 8152.

[08:14] <dduncan> I thought it always did that

[08:16] <gaal> it should, but the immediate result of it not being done is a slowdown.

[08:17] <gaal> pugs -e 'say %*INC'

[08:18] <gaal> if you see fatal <precompiled>, so is Prelude.pm.

[08:20] <nothingmuch> gaal: all my talks were accepted!

[08:23] <lumimies> Coo

[08:23] <dduncan> okay, I think I reverted to 8152 ... but I can't report the result until tomorrow, given the 1 hour recompile thing ...

[08:24] <gaal> nothingmuch: whee!

[08:24] <gaal> give me ideas for a talk please :(

[08:25] <nothingmuch> what have you been working on lately?

[08:26] <gaal> pragmas? but it looks like mjd and audreyt are doing the hard stuff, I'm just pushing it.

[08:26] <gaal> I know, I'll talk about Analytic and Algebraic Topology of Locally Euclidean Metrization

[08:26] <gaal> of Infinitely Differentiable Riemannian Manifold.

[08:35] <Alias_> Neat, so you can demonstrate calculation of optimised interplanety vehicle launch windows?

[08:35] <Alias_> ;)

[08:36] <Alias_> So, audreyt has finally escaped my clutches

[08:36] <Alias_> Useful World Domination Planning Sessions: 5

[08:36] <Alias_> Number of Times forced to put Laptop Away: 3

[08:37] <Alias_> Number of Shirts Scored: 1 :)

[08:38] <Alias_> So now I have a pugscode shirt with a "Container Model" on the back I cannot begin to comprehend

[08:38] <gaal> Alias_: google for "This I know from nothing".

[08:39] <Alias_> on the plus side, there's apparently only 2 of these shirts in the world :)

[08:39] <gaal> Total T-shirt domination progress: 50%

[08:40] <Alias_> Is it rude to sell a gift on eBay within 24 hours?

[08:40] <Alias_> :)

[08:42] <Alias_> cure poem

[08:42] <Alias_> cute

[08:43] <lumimies> It's not a poem, it's a Tom Lehrer song

[08:43] <gaal> you should hear him sing it

[08:43] * Alias_ nods

[09:48] <ingy> audreyt: what build system is that?

[10:06] <audreyt> ingy: CPAN::MakeMaker

[10:18] <audreyt> (now Module::Install)

[10:18] * audreyt safely arrived to andrews's place

[10:23] <r0nny> yo

[10:27] <audreyt> yo

[10:29] * r0nny screams

[10:29] <r0nny> i want my perl6 code work again

[10:30] <audreyt> it doesn't?

[10:30] <audreyt> I fixed your infinite BUILD bug!

[10:30] <r0nny> still the problem wit the virtually undefined instances

[10:32] <r0nny> btw - is the perl submethod still not aware of cyclic structures ?

[10:32] <r0nny> well - gona try r8173

[10:33] <audreyt> k

[10:33] <audreyt> (working on docs now... bbiab)

[10:33] <r0nny> hf

[10:37] <nothingmuch> audreyt: all my talks were accepted to OSDC

[10:37] <nothingmuch> guess i can't back out now, so see you there ;-)

[10:40] <audreyt> cool

[10:42] <nothingmuch> how was australia?

[10:48] <audreyt> very productive

[10:48] <audreyt> just braindumping with asavige about how to clean up and reorganize the docs/ tree

[10:49] <audreyt> producing a more navigatable interface aka "perldoc perl"

[10:49] <audreyt> reorganize the totally unhelpful pugscode.org homepage

[10:49] <audreyt> (and equally unhelpful http://dev.perl.org/perl6/)

[10:50] <audreyt> and producing a 02Architecture for Pugs that's not filled with jargons

[10:50] <audreyt> and generally make the huge amount of raw information available in a more digestible manner

[10:51] <nothingmuch> sounds good

[10:52] <audreyt> it does... asavige is expert in taking notes

[10:52] <PJF> Good evening, Audrey.  How's Sydney?

[10:52] <audreyt> and technical writing, apparently, in addition to mad golfing

[10:53] <audreyt> PJF: heh, you just missed my reply to nothingmuch :)

[10:53] <audreyt> http://colabti.de/irclogger/irclogger_log/perl6?date=2005-12-11,Sun&sel=253#l446

[10:53] * audreyt praises the log bot

[10:53] * PJF goes digging through logs.

[10:54] <PJF> I was a little sad we didn't have Andrew at OSDc.  We should get Sydney.PM to organise a conference. ;)

[10:54] <audreyt> I think the #l446 bit should make it scroll to the exact point

[10:56] <audreyt> and I just discovered I have two talks to give tomorrow

[10:56] * PJF is still waiting for the logs to load...

[10:56] <audreyt> it's this slow? wow

[10:56] <PJF> Oh!  I knew you were giving talks.  It's even up on use.perl.org as an article.

[10:57] <PJF> I suspect it's my browser/proxy. I can wget the page fine.

[10:57] <audreyt> yeah, I noticed. "the bustling metropolis of Lismore"

[10:57] <PJF> Did you get to visit that herb place we were discussing over dinner?

[10:57] <audreyt> no, I did not.

[10:59] <PJF> Logs seem to be working fine now.  And the #|446 not only ends up at the exact point, but highlights it as well.  Very nice.

[11:01] <audreyt> cool :)

[11:02] <nothingmuch> herb places are fun'

[11:02] <nothingmuch> you can get nice spices

[11:02] <nothingmuch> and things like peeled pistachios

[11:02] <nothingmuch> tea

[11:03] <nothingmuch> eye of newt

[11:03] <audreyt> newts have herbs as eyes?

[11:05] * audreyt is finishing up PIL.Native.Eval

[11:05] <svnbot6> r8174 | pjf++ | Ignorant application of pugscode.org/css/perl.css to feather.

[11:08] <nothingmuch> http://www.extremetech.com/article2/0,1697,1898267,00.asp

[11:36] <Alias_> audreyt: Where was that auto code you showed me before in?

[11:43] <PJF> Do we know of anything that would cause pugs to stop part-way through a 'make smoke' on 0% cpu, and apparently doing nothing?  Or is my system just a little strange.

[11:45] <blm> PJF: You running under Cygwin?

[11:52] <PJF> blm: I sure am.

[11:52] <PJF> blm: I'm guessing it's probably some cygwin oddity at the moment.

[11:53] <blm> PJF: I have ongoing issues with cygwin sh.exe processes just pausing

[11:54] <blm> PJF: When I kill sh.exe the next step of the process continues

[11:54] <blm> PJF:  It is like sh.exe is blocking on something.

[11:54] <blm> PJF: Does that make any sense?

[11:54] <PJF> Hmm...  My process tree looks like bash -> make -> perl -> perl -> pugs

[11:55] <PJF> I don't really want to kill the top-level shell.  If I kill pugs, then that test fails, but the rest continues happily.

[11:55] <blm> PJF: maybe it isn't related then

[11:55] <PJF> Maybe not.  Except that I can run the tests manually and they go through fine.  It's just occasionally a test will hang.  Very frustrating.

[11:56] <blm> Yes.  I can imagine

[11:56] <PJF> I'm not planning to look into it deeply at the moment.  I just wanted to ping the channel to see if there were any known problems.

[11:57] <blm> I don't know.  I am just starting to get into pugs myself.  I just thought it may have been the same problem I am having with cygwin

[11:57] <audreyt> Alias_: AutoLoader.pm line 46

[11:57] <audreyt> PJF: no, nothing of this sort that I know of. which test was the last run?

[11:58] <Alias_> ta

[11:58] <PJF> t/builtins/perl2.t was the last one that hung.

[11:58] <Alias_> PJF-- # Puzzle Pirates... nuff said

[11:58] * PJF laughs.  You're not playing PP, are you?

[11:58] <Alias_> And coding at the same time

[11:58] <Alias_> The only downside of three monitors

[11:59] <PJF> Alias: Let me know when you have a moment, and I can give you a crew invite if you like.  I only play while waiting for tests to complete.

[11:59] <audreyt> PJF: can't duplicate here. try killing the running sh.exe or cygwin

[12:00] <PJF> audreyt: I can just kill pugs and it continues to run happily.  I plan to tweak the smoke tester so that I can run tests verbosely and see exactly where it stops.

[12:00] <PJF> If there's a pattern to it, I'd like to know it.

[12:01] <Alias_> PJF: OK... I think I accidentally joined another crew :/

[12:01] <PJF> Alias: Moving crews is pretty easy.  You can join the Python/Twisted crew if you want. ;)

[12:05] <svnbot6> r8175 | juerd++ | Further xhtmlify

[12:06] <audreyt> the new evaluator is here... will try to finish bootstrapping metamodel tomorrow

[12:06] <svnbot6> r8176 | autrijus++ | * Shiny new PIL.Native.Eval.  "make pil" now starts to evaluate

[12:06] <svnbot6> r8176 | autrijus++ |   the minilanguage according to Stevan's specs.

[12:06] <svnbot6> r8176 | autrijus++ |   (See src/PIL/Native/Prims.hs for the still-growing primitive table)  

[12:07] <audreyt> stevan++ # exceedingly concise implementation to follow

[12:07] <audreyt> I should probably sleep now. good night folks :) *wave*

[12:07] <PJF> Night Audrey.  Sleep well.

[12:30] <PJF> Night everyone.  Time for me to get some sleep.

[12:32] <rafl> audreyt: What explains the recent renaming?

[12:34] <audreyt> rafl: It's part of my transgender process. I'll journal about it.

[12:35] <audreyt> (hmm, I was supposed to sleep but worked on M::I and PAR release engineering instead)

[12:35] <rafl> audreyt: Allright.

[12:53] <Alias_> hmm... ok, so the dist dir is where now?

[12:53] <Alias_> actually, that should be easy to find myself

[13:36] <gaal> any new info about the recent slowdown?

[13:36] <gaal> (popping in during a break from $work)

[13:52] <blm> Where do I find out what the abbreviations are like PMC and imcc mean?

[14:08] <Juerd_> blm: The pugs wiki

[14:09] <blm> Juerd_: Thanks

[14:09] <Juerd_> blm: http://pugs.kwiki.org/?Perl6Nomenclature

[14:11] <blm> Juerd_: Gotchya. Looking at it now. Thanks

[14:13] <Juerd_> blm: yw

[14:45] <bbwwicci> anyone around?

[14:54] <r0nny> bbwwicci: yeah

[14:55] <r0nny> bbwwicci: but usually they got better uses of their time, then answering the frequent anyone around questions

[14:57] <bbwwicci> oh

[16:31] *** fridim is now known as Fripette

[18:11] <r0nny> audreyt: howz the issue with the virtually undefined instances ?

[18:36] <stevan_> audreyt: if you want help with the mini-lang metamodel just ask, I should be able to spare some cycles this week

[18:46] * Juerd_ wonders if there's more of a transformation than the nick change.

[18:46] <rafl> ingy: ping

[18:48] <gaal> Juerd_: yes, she started working at microsoft. http://www.amazon.com/gp/pdp/profile/A2HONNCE6M02GC/002-3673786-2640846

[18:48] <Juerd_> That's scary.

[18:50] <gaal> yes, and amazon use pdps, as you can see from the url.

[18:50] <gaal> okay I think that's enough discordianism from me for tonight :-)

[18:52] <rafl> Juerd_: Hello. Got some money from your client already?

[18:55] <Juerd_> rafl: No. Sent 2nd reminder.

[18:55] <Juerd_> rafl: But have reserved some money I found for CCC

[18:56] <rafl> Juerd_: You *find* money?

[18:56] <Juerd_> Quite literally.

[18:56] <Juerd_> Under a computer, in my office.

[18:56] <Juerd_> I considered it stolen for over a year.

[18:57] <rafl> D'OH..

[18:57] <Juerd_> More or less exactly what I thought, yea

[18:58] <rafl> Why did you put it there at all?

[19:00] *** Fripette is now known as Fridim

[19:00] <Juerd_> I didn't even know I put it there

[19:01] <Juerd_> So I have no idea

[19:01] <Juerd_> It probably got there by accident

[19:05] <Juerd_> In any case, throwing away an old computer has never before been so profitful :)

[19:05] <rafl> :-D

[19:05] <Juerd_> Now let's hope EUR 300 suffices

[19:06] <r0nny> ew - i never knew audreyt was female

[19:06] <Juerd_> r0nny: Neither did I :)

[19:06] <Juerd_> I still don't

[19:06] <r0nny> ?

[19:08] <r0nny> Juerd_: plz clarify context

[19:08] <Juerd_> I don't think I can :)

[19:08] <r0nny> wth ?

[19:09] <r0nny> darn - dont play sick games with a sleepy mind

[19:21] <Juerd_> r0nny: I could say the same to you

[19:26] <r0nny> Juerd_: so u are way to sleepy, too ?

[19:31] <Juerd_> Yea

[20:04] <leo> ping gaal 

[20:05] <Albie> gaal, alive?

[20:06] <leo> or anybody else who knows about Test::TAP::HTMLMatrix

[20:23] <stevan_> audreyt: please read perl5/Perl6-ObjectSpace/docs/Meta-User-Bridge.pod and comment when you have some time :)

[20:25] <svnbot6> r8177 | stevan++ | Perl6::ObjectSpace 

[20:25] <svnbot6> r8177 | stevan++ | - Added document describing the object-space <-> user-space bridge 

[20:25] <svnbot6> r8177 | stevan++ |   idea which I have been contemplating/babbling about for about a 

[20:25] <svnbot6> r8177 | stevan++ |   month now. I hope this makes the idea more clear. Questions, 

[20:25] <svnbot6> r8177 | stevan++ |   comments, suggestions are all welcome :)

[20:45] <sproingie> join #pugs

[20:45] <sproingie> oops

[20:45] <gaal> hi, what's up?

[20:45] * sproingie bangs on that / key a little harder

[20:46] <sproingie> nada.  just catching up after a while

[20:46] <gaal> pong for <leo Albie>

[20:47] <leo> hi gaal 

[20:47] <gaal> hi there!

[20:47] <leo> we got some questions about make smoke and Test::TAP::HTMLMatrix

[20:48] <leo> we that is #parrot 

[20:48] <gaal> irc.perl.org right?

[20:48] <leo> specifically how to include some visible feedback about 'make smoke' progress

[20:48] <leo> irc.pobox.com

[20:50] <gaal> hm, is there another server on that network? I'm not connecting.

[20:50] <leo> blizzard.com iirc

[20:51] <leo> wrong

[20:51] <leo> irc.rhizomatic.net

[20:51] <leo> sorry

[20:51] <gaal> it works from feather :)

[21:09] <gaal> nothingmuch: hi. can you join #parrot @ irc.pobox.com please?

[21:26] <svnbot6> r8178 | fglock++ | * misc/Parser-Mini/pil2_json_emit_pir.p6 - PIR code emitter

[21:54] <audreyt> g'morning

[21:54] * audreyt goes reading the meta-user bridge

[22:20] <stevan_> audreyt: hey 

[22:31] <sri_> audreyt: ping

[23:50] <dduncan> gaal, a smoke of 8152 shows it to be performing at normal/fast speed ... at least until it hangs on ext/Span/t/span.t

[23:51] <dduncan> will update to 8153 to see if that changes something

[23:53] <dduncan> er ...

[23:56] <dduncan> actually, I think it was 8151 that I just tested and found ok

[23:57] <dduncan> next I will try r8158, which given my setup is effectively the next version

