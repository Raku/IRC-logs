[00:09] <crysflame> hi ingy

[00:55] <ingy> hi crysflame 

[01:41] <mugwump> can any functions in pugs return lvalues?

[01:55] <autrijus> technically yes, practically "is rw" trait is not yet parsed.

[01:56] <mugwump> I was just adding a test for the junction example in S09

[01:56] <autrijus> it just need to set the env isLValue bit on.

[01:56] <mugwump> when I realised that substr hasn't been implemented yet :)

[01:56] <autrijus> sure, feel free to test it

[01:56] <autrijus> it's a todo_ test thought :)

[01:56] <autrijus> it's not a misimplemented feature, it's just unimplemented

[01:58] * autrijus reading (google cache of): http://kw.pm.org/talks/2004-10-24-Perl6talk.ppt

[01:58] <autrijus> (Perl 6 is) Ready to ship in { (localtime)[5] + 1902; }. 

[01:59] <autrijus> that slide is quite helpful.

[02:03] <cls_bsd> autrijus++

[02:03] <autrijus> :))

[02:05] <autrijus> cls_bsd: if you're looking for src/ job

[02:05] <autrijus> I just committed a XXX in Eval.hs line 325

[02:05] <autrijus> it deals with the fact that

[02:05] <cls_bsd> okk

[02:05] <autrijus> @a[1] = func(); # scalar context

[02:06] <autrijus> @a[1,2] = func(); # list context

[02:06] <autrijus> currently both passes list context to func()

[02:06] <autrijus> what needs to happen is to write a "cxtFromExp"

[02:06] <autrijus> of type:

[02:06] <autrijus> Exp -> String

[02:06] <autrijus> and replace ths "List" in line 327 with "cxtFromExp exp"

[02:07] <autrijus> the way to write the cxtFromExp function is to pattern match

[02:07] <autrijus> cxtFromExp (Syn "," _) = "List"

[02:07] <cls_bsd> hmm

[02:07] <autrijus> cxtFromExp (Var ('$':_)) = "Scalar"

[02:07] <autrijus> cxtFromExp (Var _) = "List"

[02:07] <autrijus> etc. feel free to finish the rest :)

[02:08] * cls_bsd go to read haskell doc

[02:10] <autrijus> YAHT may help. some people prefer http://www.haskell.org/tutorial/

[02:11] <cls_bsd> great, this tutorial

[02:30] <autrijus> bbiab &

[02:49] <ingy> hola

[02:51] <mugwump> hi ingy 

[02:53] <hcchien> ingy: would you mind to send me your flight schedule again. :p

[02:54] <mugwump> ./pugs -e 'say ["c","a"].join("")'

[02:54] <mugwump> ac

[02:54] <mugwump> :-/

[02:55] <mugwump> ah, it's todo, nevermind

[02:56] <pjcj> svk ci

[02:56] <pjcj> oops

[02:58] <stevan_> howdy ingy

[02:58] <stevan_> I had a kwid question earlier, but I figured it out :)

[03:03] <mugwump> just how *do* you test that two junctions are the same, anyway?  :)

[03:03] <mugwump> if ($j == $k)  # doh!  :)

[03:10] <mugwump> I just did a `svk push', but got ` t/03operator.t - skipped'

[03:11] <hcchien> do you svk pull before?

[03:11] <hcchien> t/03*.t doesn't exist anymore. :)

[03:11] <mugwump> oh, that'd do it :-}

[03:11] <mugwump> I was naively using `svk update'

[03:12] <mugwump> and `svk sync -a'

[03:12] <hcchien> pull may be your friend. :)

[03:12] <hcchien> up; sy; and you have to do the 'sm'

[03:14] <autrijus> just "svk pull" ;)

[03:17] <mugwump> where do you think I should put the junction tests... t/op?

[03:18] <mugwump> t/voodoo perhaps

[03:18] <autrijus> heh heh

[03:18] <autrijus> t/junction/

[03:29] <hcchien> if the value is assigned as undef. what should we expect when try to print it?

[03:29] <autrijus> empty string

[03:34] <crysflame> is there a function junction

[03:34] <crysflame> HA HA

[03:35] <autrijus> :D

[03:41] <hcchien> "for my $foo (@bar)" doesn't work?

[03:42] <autrijus> for @bar -> $foo { ... }

[03:42] <autrijus> that way reads better

[03:42] <autrijus> for (@bar) -> $foo { ... } # this works too

[03:42] <autrijus> for @bar { $^foo ... } # too

[03:43] <hcchien> or for ($foo | @bar) ? :p

[03:43] <autrijus> bwahaha

[03:43] <crysflame> heh

[03:43] <autrijus> [ say $foo | $foo <- @bar, $foo > 3]

[03:43] <crysflame> hcchien++

[03:44] <crysflame> autrijus: is that print grep { $foo > 3 } @bar?

[03:44] <autrijus> @bar.grep:{$_ > 3}.map:{say $_}

[03:45] <crysflame> let me rephrase

[03:45] <crysflame> what does what you said do? [ say ..

[03:45] <crysflame> say every $foo that is > 3, using @bar as a source?

[03:46] <autrijus> yup.

[03:46] <autrijus> except say is invoked many times

[03:46] <crysflame> right

[03:46] <autrijus> instead of being passed a list

[03:46] <crysflame> so map { print } grep { $_ > 3 } @bar in perl5

[03:46] <crysflame> neatr

[03:47] <hcchien> is pugs always 'use strict' now? :)

[03:47] <autrijus> perl6 is always use strict by default.

[03:47] <autrijus> but "perl6 -e" may relax it.

[03:47] <autrijus> that is not currently implemented in pugs. tests welcome

[04:02] <autrijus> reboot, bbiab &

[04:14] *** root_____ is now known as nnunley

[04:21] <metaperl> nnunley are you in England working for fotango or in America?

[04:22] <mugwump> if he's in England he won't be up now ;)

[04:22] <nnunley> metaperl:  I'll be working for fotango in the UK come monday.  But currently in America.

[04:22] <metaperl> why not? they have acid house parties all night :)

[04:22] * nnunley grins.

[04:22] <crysflame> fotango :)

[04:23] <autrijus> really. :)

[04:23] <autrijus> clkao: hope you come back alive :D

[04:23] * nnunley nods.

[04:23] <nnunley> clkao and I will be in the flesh coworkers in about a month.

[04:24] <autrijus> mmm acid-induced software

[04:24] <nnunley> Could be interesting.  Perhaps a little hard to debug.

[04:25] <autrijus> yeah, you'll keep seeing grid bugs.

[04:25] <nnunley> Heh.  Speaking of that... anyone play darwinia, yet?

[04:25] * clkao yawns

[04:27] * nnunley will be heading to bed shortly.  "Held a going away salon/scotch tasting..."

[04:27] <nnunley> Just checking in to see if anything interesting is happening.

[04:28] <autrijus> ah. lots actually.

[04:28] <autrijus> #perlchina is pushing pugs to parse utf8 literals.

[04:30] <autrijus> I'm preparing a "It's a wonderful hacking day" slide, due ~3 hours

[04:30] <autrijus> which means I should probably deIRC and Work

[04:34] <metaperl> nnunley, you have played darwinia? the graphics look blocky

[04:35] <autrijus> bbiab &

[04:35] <metaperl> i'm d/l'ing the demo now

[05:07] <scw> autrijus: in fact, I noticed the problem on VInt on the way home that day, but totally forgot to fix it, sorry

[05:48] <obra> heya david

[05:50] * mugwump puts some finishing touches on a *working* junction-based sendmoremoney.p6

[06:04] *** khisanth_ is now known as Khisanth

[06:40] * mugwump sighs at just how long finishing touches can take sometimes

[07:06] <mugwump> send+more=money is now junctionally functional!

[07:08] <crysflame> heh

[07:31] <ingy> perlbot: seen Schwern?

[07:32] <ingy> hola amigos

[07:33] <Khisanth> perlbot does not have that capability :/

[07:35] <ingy> I forgot

[07:45] <crysflame> i do

[07:45] <ingy> ?

[07:45] <crysflame> not anywhere in my history have i seen schwern mentioned here

[07:46] <ingy> schwern has definitely been on the channel

[07:47] <crysflame> weak history it is then

[07:51] <Khisanth> well there is always seenserv

[08:02] <autrijus> mugwump++

[08:02] <autrijus> going to the talk &

[08:03] <autrijus> I still had not done my slides!

[08:03] <clkao> have fun

[08:03] * autrijus needs to pull an ingy

[08:03] <ingy> hahaha

[08:03] <ingy> pull my finger

[10:16] <nothingmuch> good morning

[10:31] <dada> hola

[10:34] <autrijus> the talk is about to begin

[10:34] <autrijus> wish me luck!

[10:34] * autrijus hopes to lure more pugs developers

[10:35] * rgs sends good waves to autrijus

[10:36] <larsen> in *%$ of the whale!

[10:57] <malaire> Hello, is here anyone who could check my patch about hyperops? Whether it's ok or not? 

[10:57] <malaire> (http://www.nntp.perl.org/group/perl.perl6.compiler/292)

[14:14] <nnunley> mugwump:  Sweet, re the working send+more=money

[15:00] <malaire> GHC 6.4 has been released today...

[15:14] <DrHyde> maybe it will compile on my box then, cos 6.2 sure as hell doesn't

[15:15] <rgs> bootstrapping is not easy

[15:15] <rgs> can you bootstrap 6.4 with 6.2 ?

[15:47] <ingy> hola

[15:47] <ingy> autrijus: how was your talk?

[15:50] <dada> is the talk finished yet? :-)

[15:51] <ingy> dunno, I hope so

[15:51] <ingy> I mean a 5 hour talk with no preparation would be... interesting

[15:51] <larsen> " 11:39 < autrijus> the talk is about to begin "

[15:51] <larsen> and now it's 16.56 here

[15:51] <larsen> ah. 5 hours

[15:51] <larsen> I didn't know that

[15:52] <ingy> ?

[15:52] <dada> oh, maybe he's racing for the World's Longest Talk

[15:52] <ingy> I seriously doubt the talk was more than an hour or two

[15:54] <larsen> I thought you were talking about some form of extended tutorial

[16:00] <malaire> pugs gets quite many warnings with GHC 6.4, but seems to work OK.

[16:00] <malaire> (same 2 test scripts failing)

[16:08] <nothingmuch> could someone please clarify some haskell stuff?

[16:09] <nothingmuch> err, maybe i should go to #haskell instead ;-)

[16:10] <ingy> nothingmuch: yeah, don't interupt us here! We're all trying to sleep!

[16:10] <nothingmuch> beh

[16:10] <ingy> ;)

[16:11] <hcchien> ingy: did you see my message here?

[16:11] <ingy> hcchien: you want my itinerary?

[16:12] <hcchien> ingy: yes.

[16:12] <ingy> hcchien: so you can pick me up from the airport?

[16:13] * nothingmuch wants to be around airports

[16:13] <hcchien> ingy: I don't have car. :/

[16:14] <ingy> hcchien: what do you need my info for?

[16:14] <hcchien> ingy: when will arrive and leave.

[16:16] <ingy> hcchien: I know, but why do you want to know? :)

[16:17] <hcchien> ingy: good question, I may have to make sure you don't lose. :p

[16:18] <ingy> ?

[16:18] <ingy> anyway I arrive March 22nd at 07:50

[16:18] <ingy> and I leave April 5th 16:20

[16:19] <hcchien> :)

[16:19] <ingy> hcchien: where do I go, when I arrive?

[16:20] <hcchien> ingy: we will pick you up when you arrive Taipei.

[16:20] <ingy> wow! thanks!

[16:21] <obra>   hi

[16:21] <Perla> somebody's here?

[16:21] <hcchien> it's what we should do. :)

[16:22] <ingy> hcchien: the evaair info is very unclear, but I assume if I am leaving Seattle at 02:55 on March 22 and landing at 07:50, then it is still March 22nd, right?

[16:22] <ingy> obra: confirm

[16:23] <ingy> and if I leave Taipei on April 5 at 18:20 and arrive in Seattle at 14:00 it is then April 6

[16:24] <ingy> hcchien: note I leave Taipei on April 6 at 18:20 (not 16:20)

[16:24] <hcchien> I think it is 3/23 07:50 in Taipei

[16:25] <obra> TPE->SEA, you get in before you leave

[16:25] <ingy> hcchien: but I am flying west... hmmm, I cross international date line? 

[16:25] <obra> SEA->TPE, you lose a day

[16:25] <obra> yes

[16:25] <ingy> I see

[16:26] <ingy> so hcchien, it looks like I arrive on 07:50 March 23rd :(

[16:26] <hcchien> ingy: I think so. :)

[16:27] <ingy> less days to write talk and party 

[16:27] <ingy> hcchien: at least you do not bug me for my materials this year :P

[16:28] * obra arrives TPE at 0600 on 3/20

[16:28] <ingy> at YAPC::Taipei all talks are written JIT

[16:28] <ingy> obra gets *3* days on me, no fair

[16:28] <hcchien> ingy: yes. so I won't have processings this year. :p

[16:28] <ingy> this is a conspiracy!

[16:29] <ingy> obra kept asking for my flight dates

[16:29] <ingy> and then moved his earlier

[16:29] <ingy> Taipei will be all used up by the time I get there

[16:29] <obra> we'll take pictures

[16:30] <ingy> :P

[16:30] <ingy> maybe I'll change my flight to the 15th

[16:30] <ingy> muhahaha

[16:30] <hcchien> ccCc

[16:30] <ingy> *_*

[16:30] <obra> do it

[16:31] <obra> get taipei ready for us

[16:31] * ingy gives obra her ICY STARE OF DEATH

[16:31] <obra> now you sound like boojum, ingy

[16:31] <ingy> I learned a thing or two from booj

[16:32] <ingy> er, b**jum

[16:33] <whiteg> ingy: are you sure?

[16:34] <obra> ow. my travel to TPE is going to be 24 hours, starting at 6pm

[16:59] <crysflame> ..

[16:59] <crysflame> aha

[17:39] <ingy> hi whiteg 

[17:40] <ingy> hcchien: ping

[17:40] <hcchien> ingy: yes?

[17:41] <ingy> do we have an official wiki for yapc yet?

[17:41] <hcchien> ingy: not yet.

[17:42] <ingy> I can set up yapc.taipei.kwiki.org

[17:42] <hcchien> oh, cool.

[17:42] <hcchien> ingy++

[17:43] <ingy> hcchien: do you have some grapics or a static site that I can theme the  kwiki with?

[17:43] <ingy> I can just use the stuff autrijus sent me

[17:44] <ingy> unless you have something nicer

[17:44] <ingy> obra bummer

[17:47] <ingy> hi luqui 

[17:49] <autrijus> hi :)

[17:52] <hcchien> ingy: how is the official site of yapc

[17:53] <ingy> hcchien: url?

[17:54] <malaire> autrijus: Could you check my hyper-ops patch, whether it's ok or not?

[17:54] <luqui> hi ingy 

[17:54] <malaire> (http://www.nntp.perl.org/group/perl.perl6.compiler/292)

[17:54] <autrijus> !!

[17:54] <autrijus> lots of things happened

[17:54] <autrijus> # http://autrijus.org/hackday/ 

[17:54] <autrijus> slides for today's talk

[17:54] <autrijus> just had a brief electricity outage here...

[17:54] <autrijus> finally got some stable network now

[17:55] <autrijus> interesting approach.

[17:56] <autrijus> I think it works good as first-try

[17:56] <autrijus> eventually we'd like to parse it as part of op2 parser

[17:56] <autrijus> but I think it can go in.

[17:56] <autrijus> please commit

[17:56] <wolverian> autrijus: what is the encoding on hackday/? I can't get it to show properly.

[17:56] <autrijus> utf-8.

[17:56] <autrijus> it's also all in chinese.

[17:57] <autrijus> s/all/almost/

[17:57] <wolverian> ah. still shows as ?. I guess my font doesn't have chinese characters.

[17:57] <autrijus> makes sense.

[17:57] <malaire> I have no commit-rights yet

[17:57] <autrijus> really.

[17:57] * autrijus checks

[17:57] <autrijus> gugod: you want to commit your test too? I'll make you a committer

[17:57] <autrijus> greetings Ovid-san

[17:57] <Ovid> Good morning, autrijus :)

[17:58] <ingy> hi gugod 

[17:58] <Ovid> Hi ingy.

[17:58] <ingy> hi Ovid 

[17:58] <justatheory> autrijus: No distracting ovid, he needs to be working right now!

[17:58] <autrijus> what work needs him now

[17:58] <autrijus> ?

[17:58] <autrijus> malaire: invitation sent. please reply "thanks applied" to yourself :)

[17:58] <justatheory> The training I'm about to give him.

[17:58] <autrijus> err

[17:58] <autrijus> s/invitation/committer bit added/

[17:58] <Ovid> I pretend to work, Theory pretends to pay me.  We're all quite left-wing over here.

[17:59] <justatheory> autrijus: Oh, have you implemented that op yet?

[17:59] <autrijus> what op?

[17:59] <ingy> oh no, Ovid is getting sucked into bricolage

[17:59] <justatheory> err

[17:59] <justatheory> blown, more like

[17:59] <Ovid> What an apt description.

[17:59] * ingy grabs Ovid's leg

[17:59] <Ovid> That's not my leg.

[17:59] * justatheory grabs ovid's hair

[17:59] <ingy> you're right!

[17:59] <justatheory> All right, all right! That's enough!

[18:00] <ingy> but it's so big

[18:00] <autrijus> gugod: welcome aboard, too.

[18:00] <justatheory> gugod++ # My Unicode tester!

[18:00] * justatheory & # Work

[18:00] <ingy> gugod: I am coming up with ideas to use all of your time during YAPC

[18:00] <gugod> hello theory

[18:00] <gugod> hello all

[18:01] <obra> hi

[18:01] <gugod> ingy: .....

[18:01] <autrijus> ingy: surprisingly I am coming up with ideas to use all of your time too

[18:01] <malaire> ok, I did my first commit, v588 ...

[18:01] <autrijus> malaire++

[18:01] <autrijus> I'll base generic hyperop off that.

[18:01] <luqui> ack

[18:01] <ingy> autrijus: I'm creating the yapc kwiki to start writing down all these plans

[18:02] <autrijus> sure.

[18:02] * luqui needs to propose a talk for yapc

[18:02] <rgs> which yapc ?

[18:02] <luqui> na

[18:03] * luqui can't afford international flights

[18:03] <ingy> luqui: think of it as an investment

[18:03] <luqui> no, as in, I actually don't have that much moeny

[18:03] <luqui> not, I don't have money to spend on that.  I just don't have it.

[18:03] <obra> luqui: some international conferences fly interesting people in

[18:03] <rgs> apparently my employer agreed to pay for me to go to oscon.

[18:04] <luqui> rgs: that's always nice

[18:04] <rgs> luqui: can you afford oscon ?

[18:04] <luqui> not if I don't get my talk accepted

[18:04] <rgs> right

[18:04] <luqui> I'm counting on Damian to vouch for me (he's on the selection committee)

[18:04] <hcchien> ingy: http://yapc.elixus.org/

[18:05] <ingy> hcchien: http://yapc.kwiki.org/taipei/

[18:05] <rgs> 'pparently my talk is mostly accepted

[18:05] <obra> luqui: is it the conference fee for OSCon or the other expenses?

[18:05] <luqui> obra: hmm?

[18:05] <obra> that makes it too expensive

[18:05] <luqui> mostly the conference fee

[18:08] <ingy> hcchien: is Dan Kogai comming?

[18:08] <hcchien> ingy: sadly, no. :/

[18:10] <obra> yapc.tw people, join #yapc.tw

[18:18] <pjcj> d

[18:24] * luqui just submitted his talks

[18:25] <tiw> hello, i am using pugs. I have a question, whether pair is implemented in pugs.

[18:25] <theorbtwo> pair?

[18:25] <tiw> $a = :key('value')

[18:25] <tiw> appear err

[18:25] <theorbtwo> Ah.

[18:26] <crysflame> it might be in a test somewhere

[18:26] <theorbtwo> Well, from a quick check, no, at least not in that format.

[18:26] <tiw> and in which format?

[18:26] <crysflame> if not, if you write up a test, autrijus will implement it for you (usually within a few minutes of seeing the test)

[18:26] <dada> $a = (key => 'value');

[18:27] <tiw> $a = 'key'=>'value' is not ok too

[18:27] <theorbtwo> Hmm?  my $a = 'key' => 'value'; say $a.

[18:27] <theorbtwo> Works for me.

[18:28] <dada> for me too

[18:28] <autrijus> that is the only form of pair syntax that works now.

[18:28] <tiw> Undefined variable $pair

[18:28] <tiw> Val VUndef

[18:28] <autrijus> I think we've got tests for the rest of the forms

[18:28] <autrijus> tiw: oh. strict is on by default.

[18:28] <autrijus> so, "my $pair"

[18:29] <tiw> also

[18:29] <tiw> i got it

[18:29] <tiw> thanks lot

[18:29] <theorbtwo> Hm, looks like the time prim is defined wrong -- it should be 0 at Jan 1 2000 (and floating point)... unless Larry changed his mind.

[18:30] <autrijus> it is indeed wrong.

[18:30] <autrijus> fix it? :)

[18:30] <tiw> yes, it work now. 

[18:30] <tiw> and how can turn off strict

[18:30] <autrijus> write a test

[18:31] <autrijus> so I can write ext/strict/

[18:32] <theorbtwo> Hm, I'm somewhat worried that I can't think of a way to test it.

[18:32] <autrijus> "no strict;"

[18:32] <luqui> time 0 ?

[18:32] <luqui> oh that test

[18:33] <luqui> eval 'no strict;  $x = 10;'

[18:33] <luqui> in a list of patterns with |, how do you specify a default?

[18:33] <theorbtwo> I meant testing time().

[18:33] <luqui> in haskell?

[18:33] <theorbtwo> | otherwise = whatever

[18:33] <luqui> theorbtwo: yeah, time(0) should do it

[18:34] <luqui> (if I remember how time works properly...)

[18:34] <luqui> (which I'm sure I don't)

[18:34] <luqui> nevermind

[18:34] <autrijus> luqui: if you are fixing hyperop base case, I just committed

[18:35] <luqui> oh, okay, I'll see how you did it

[18:35] <luqui> I kept getting type errors

[18:35] <luqui> I don't think that's the proper behavior

[18:35] <tiw> I can not use no strict, with following :No compatible subroutine found: &no

[18:36] <autrijus> tiw: right, so that doubles as a test for 'no'.

[18:36] <luqui> I think hyper on two scalars just does the operation once

[18:36] <luqui> that makes writing things recursively really nice

[18:37] <autrijus> luqui: maybe you can help haxx0ring Lexer line 383ish

[18:37] <autrijus> and make >> and << work on all binary OPs

[18:37] <autrijus> so it can work without us munging the Prim decls

[18:37] <autrijus> if you don't feel like doing it I can do that tomorrow

[18:38] <luqui> I can focus on that when I get home

[18:38] <luqui> that sounds like a fun problem

[18:38] <autrijus> cool. it's mildly complex, yeah

[18:39] <dada> autrijus: do you want me to commit the unary * as I've coded it?

[18:39] <autrijus> dada: as you nopasted the other day?

[18:39] <dada> yes

[18:39] <autrijus> along with Syn * etc?

[18:39] <autrijus> and tests?

[18:39] <autrijus> if so, sure!

[18:39] <dada> yes

[18:39] <dada> ok, I do

[18:40] <luqui> how do you run a single test anymore?

[18:40] <luqui> no module 'Test.pm'

[18:40] <malaire> ./pugs t/op/hyper.t works for me

[18:40] <dada> set $PERL6LIB

[18:40] <autrijus> luqui: make install

[18:40] <luqui> ohh... have to install it

[18:40] <autrijus> or, set PERL6LIB to ext/Test/lib

[18:40] <autrijus> and HARNESS_PERL to ./pugs

[18:40] <autrijus> then "prove".

[18:40] <autrijus> or just set PERL6LIB and ./pugs

[18:41] <autrijus> take yer pick :)

[18:41] <autrijus> ok. I think 6.0.11 on Sunday or Monday.

[18:41] <autrijus> that gives me a weekend to tie loose ends up.

[18:41] <nothingmuch> morning

[18:41] <autrijus> greeintgs nothingmuch.

[18:41] <nothingmuch> hulloh

[18:42] * nothingmuch is sorry for not living up to promises

[18:42] <crysflame> autrijus: pugs isn't mentioned at http://en.wikipedia.org/wiki/Perl

[18:42] <nothingmuch> been an annoying half-week so far

[18:42] <crysflame> and it mentions Perl6 as a parrot project

[18:42] <autrijus> crysflame: you can fix that

[18:42] <crysflame> but i won't be. just figured i'd mention it.

[18:42] * crysflame is researching re contextedness for work

[18:43] <autrijus> nothingmuch: aw :/

[18:44] <theorbtwo> Woo, my first commit: r592, fixes time().

[18:44] <nothingmuch> theorbtwo++

[18:44] * luqui & class

[18:44] * nothingmuch wonders how you test that

[18:45] <autrijus> theorbtwo++

[18:45] <autrijus> nothingmuch: time(0)

[18:45] <theorbtwo> I just asked pugs for time, asked perl for time, subtracted, asked units to convert to years, saw 30, and liked it.

[18:45] <autrijus> pugs> time

[18:45] <crysflame> heh

[18:45] <autrijus> 163881920

[18:45] <autrijus> perl -e 'time' # 1110566723

[18:45] <crysflame> that doesn't look right

[18:45] <autrijus> something is wrong.

[18:45] <autrijus> (win32)

[18:45] <theorbtwo> That's right.

[18:46] <theorbtwo> Number of seconds since jan 1, 2000.

[18:46] <autrijus> 163881920 is right!?

[18:46] <theorbtwo> Not 1970.

[18:46] <theorbtwo> Wait, what?

[18:46] <nothingmuch> why did that have to change?

[18:46] <theorbtwo> No, that's not right.

[18:46] <nothingmuch> oh god

[18:46] <nothingmuch> i want Time::Piece

[18:46] <autrijus> jan 1 2000!?

[18:46] <nothingmuch> 6.2! get me 6.2!

[18:46] <autrijus> where is that mentioned?

[18:47] <autrijus> where is it said that p6 counts with y2k as epoch?

[18:47] <ingy> oh my god! there is another ingy, and she is also from Seattle!

[18:47] <ingy> (google hit #2)

[18:47] <autrijus> ingy: yeah, I noticed the other day too

[18:47] <autrijus> guess you're really her

[18:47] <autrijus> and I've been meeting someone else

[18:48] <autrijus> who knew you well to fake an identity as ingy

[18:48] <ingy> oHH NO!

[18:48] <Coke> huh. for some reason I though "ingy" was a guy's name.

[18:48] * theorbtwo searches.

[18:49] <ingy> Coke: there are *2* girls named ingy in Seattle that disprove your assumption

[18:49] <obra> ingy == twiggy?

[18:49] <Coke> It just sounded masculine. =-) My bad. =-)

[18:50] <ingy> oh crap... another ingy http://www.geekhive.com/

[18:50] <autrijus> oh wow. y2k is for real.

[18:50] * Coke vaguely wishes english had better gender discrimination built in, though the PC folks would hate that, he's sure. =-)

[18:50] <malaire> where is y2k mentioned?

[18:50] <ingy> I need a new name!

[18:50] <autrijus> theorbtwo: is it mentioned in apoc/syno?

[18:51] * nothingmuch was really offended when nothingmuch was already taken on livejournal

[18:51] <nothingmuch> a friend has been pestering me for about 6 months to sign up

[18:51] <theorbtwo> I'm searching.

[18:51] <nothingmuch> so finally i was like 'fine fine fine'

[18:51] <nothingmuch> turns out a month before that she signed up

[18:51] <autrijus> malaire: http://0rz.net/5c0dN  

[18:52] <autrijus> we live in interesting time()s.

[18:52] * nothingmuch must remember to try and ruin her google ranking some more

[18:53] <theorbtwo> Can't find it.

[18:53] <autrijus> not in apocs it seems.

[18:53] <autrijus> more importantly, not in Syns.

[18:54] <theorbtwo> Not in any of the three, that I found.

[18:54] <autrijus> neither did I.

[18:54] <autrijus> theorbtwo: can you post to p6c?

[18:54] <autrijus> announce that the time() has been changed

[18:54] <theorbtwo> c?

[18:54] <autrijus> citing the url above as reference

[18:54] <autrijus> and ask for codification

[18:54] <autrijus> yeah, it's c I think.

[18:55] <autrijus> I'm still living by the "always start with p6c" rule of thumb

[18:55] <nothingmuch> ooh, googling for myself: http://forums.photographyreview.com/member.php?u=239051

[18:55] <autrijus> and larry seems quite serious on that 2004-03-03 post...

[18:56] <nothingmuch> damn, i love it when i'm artsy in the bio stuff

[18:57] <autrijus> theorbtwo++ # actually remembered and implemented the y2k ruling. wonderful.

[18:58] <crysflame> the y2k.. . ruling?

[18:58] <autrijus> http://www.nntp.perl.org/group/perl.perl6.internals/21717 # better reference url than 0rz above

[18:58] <autrijus> crysflame: see that url

[18:58] <crysflame> click

[18:58] * nothingmuch wonders why not 0

[18:58] <autrijus> C:\work\pugs>pugs -e "time().say"

[18:58] <crysflame> oh, nice

[18:58] <autrijus> 163882705

[18:58] <nothingmuch> but 2000

[18:58] * obra cries

[18:58] <nothingmuch> if at all

[18:58] <obra> Y2K IS NOT THE EPOCH

[18:59] <Coke> obra; prove it. =-)

[18:59] <crysflame> it is now

[18:59] <autrijus> it is the pugs epoch now...

[18:59] <autrijus> ...unless you can convince larry the other way.

[18:59] <nothingmuch> and why not 1970 to retain compat to data stored in many places

[18:59] * Coke is tempted to implement dan's epoch for parrot from that post.

[18:59] <obra> What was nov 7 1858?

[19:00] <Coke> that was for /parrot/

[19:00] <obra> er 17

[19:00] <obra> sure

[19:00] <Coke> and dan was being DanCranky.

[19:00] <obra> :)

[19:00] <autrijus> obra: that's a VAXism.

[19:01] <Coke> ah,I misread your send. Yes, it was 11/17/1858. =-)

[19:01] <autrijus> "This base time of Nov. 17, 1858 has since been used by TOPS-10, TOPS-20, and VAX ... "

[19:01] <crysflame> you can always just set the epoch by wrapping time..

[19:01] <crysflame> time.epoch(VAX)

[19:01] <autrijus> and we all know where Dan's root was.

[19:01] <crysflame> time.epoch(MAC)

[19:01] <Coke> ... "ew" =-)

[19:01] <crysflame> time.epoch(UNIX)

[19:01] <dada> use Epoch 'Neanderthal';

[19:01] <autrijus> time.epoch('Discordian')

[19:02] <crysflame> right!

[19:02] <malaire> time.epoch(UNIVERSE)

[19:02] <nothingmuch> discordian i can handle

[19:02] * obra wants to know what caused that choice originally

[19:02] <autrijus> obra: ask!

[19:02] <nothingmuch> maybe we should find out if larry is not a cabbage or something

[19:02] <autrijus> I think larry is at least 15,352,192 distinct different cabbages.

[19:02] <nothingmuch> arbitrary values setting 0 are silly. they are --><-- with logic

[19:02] <obra> autrijus: I'm asking the intarweb

[19:03] <nothingmuch> Data::Dimensions is something i like

[19:03] <obra> nothingmuch: so you want the discordian epoch?

[19:03] <nothingmuch> because it is very carefully designed to not do that stuff

[19:03] <obra> --><-- is the five fingered hand of eris.

[19:03] <theorbtwo> Once we can, time(:epoc=>UNIX) should work.  But we can't yet.

[19:03] <nothingmuch> orbra: out of all the possible solutions it is the one i'll have the lease problems remembering =)

[19:03] <nothingmuch> theorbratwo. beh

[19:03] <tiw> i example of pugs, there have #!perl6, is perl6 a link of pugs?

[19:03] * nothingmuch should use tabcompletion and believe it when it doesn't

[19:04] <autrijus> theorbtwo: the first goal is to get it codified :-/

[19:04] <autrijus> tiw: no it is not. not until pugs is rewritten in perl6.

[19:04] <autrijus> and even after that, not until larry blesses it as the real perl6.

[19:04] <crysflame> that's the first time i've heard that come up

[19:05] * Khisanth wonders if anyone is working on a vim/emacs "mode" for perl6

[19:05] <tiw> then why write it in example?

[19:05] <autrijus> tiw: because that's the suggested style in the Apocalypses and Synopses.

[19:05] <obra> perlbot: november 17, 1858 is http://www.inwap.com/pdp10/usenet/julian-day

[19:05] <perlbot> added november 17, 1858 to the database

[19:05] <theorbtwo> OK, sent.

[19:05] <autrijus> tiw: it also means that the examples can be shared between different perl6 implementations.

[19:05] <autrijus> theorbtwo++

[19:05] <obra> that makes some sense now

[19:05] <tiw> i see

[19:06] <autrijus> I think we took that tradition from seano's original P6C.pm.

[19:06] <theorbtwo> Oh: Does openfoundry use your i10n framework, autrijus?

[19:07] <autrijus> l10n? yes.

[19:07] <autrijus> which is just rt's.

[19:07] * theorbtwo was wondering about a fallback that used babelfish.

[19:07] <rgs> lsc

[19:07] <obra> theorbtwo: we've talked about it

[19:07] <obra> theorbtwo: it's against their aup

[19:08] <theorbtwo> Pitty.

[19:08] <obra> autrijus: what's the state of foundry-3.4?

[19:08] <autrijus> obra: the UI part is pending more meetings

[19:08] <obra> once that happens, i think that'll be the fast way to get cpan-3.4

[19:08] <autrijus> but I think pretty strongly that tabbedui and classicui and foundryui should merge.

[19:09] <obra> yay

[19:09] <obra> it's time

[19:09] <autrijus> it is. and cpan-3.4 can then base on that.

[19:09] <obra> hell, it can just be foundry

[19:09] <autrijus> we should code for real toward that when you're here

[19:09] <autrijus> sure thing.

[19:09] <autrijus> ingy has good ideas about per-user svn space and kwiki and blog etc space

[19:09] <obra> yay

[19:09] <autrijus> which I am very interested in

[19:10] <autrijus> so we should also do that.

[19:10] <obra> -> yapc.tw

[19:10] <ingy> yes!

[19:12] <autrijus> :)

[19:15] <tiw> is type system in pugs not complete, or?

[19:15] <theorbtwo> Do we not do prefix ++ and --?

[19:15] <theorbtwo> I don't see them in op1...

[19:16] <autrijus> it's just ++ and --

[19:16] <autrijus> tiw: the type system in pugs is very confusing.

[19:16] <autrijus> however, I don't think perl6's type system is less confusing. :)

[19:16] <theorbtwo> Ah.

[19:16] <ingy> heh

[19:16] <ingy> I spent hours reading about Haskell's type system last night

[19:17] <tiw> confusing? what is mean

[19:17] <autrijus> tiw: i.e. we have a type system, but it is only used as context hints

[19:17] <autrijus> i.e. sub foo (Str $x) { ... }

[19:17] <autrijus> you can pass a Int into foo()

[19:17] <autrijus> it will just stringify it.

[19:17] <dada> ingy: I gave up at page 39 of Gentle

[19:18] <ingy> dada: I'm half thru chapter 7

[19:18] <tiw> i can not explicit define a Int variable now?

[19:18] <autrijus> tiw: no, there is a test for that.

[19:18] <autrijus> that is todo.

[19:18] <ingy> ie I survived reading about types, without committing suicide

[19:19] <ingy> Haskell has an entire OO system just for types!

[19:19] <ingy> a fullfeatured OO system

[19:19] <tiw> oh, i should see the test.

[19:21] <tiw> ingy: you don't like types

[19:22] <ingy> tiw: sure I like types, I just wasn't prepared for Haskell's types!

[19:23] <theorbtwo> Is there a purticular reason that readline is defined to be =, rather then vice-versa?

[19:29] <dada> uhm

[19:29] <dada> ghc complains about not finding 'System.Posix.Types'

[19:29] <autrijus> version and platforms?

[19:30] <dada> 6.2.2 win32

[19:30] <dada> fresh installed

[19:30] <autrijus> ingy: there is also fundeps, existentials, rank-n, and GADTs

[19:30] <autrijus> .msi?

[19:30] <dada> yes

[19:30] <autrijus> C:\ghc\ghc-6.2.2\imports\System\Posix

[19:30] <autrijus> Types.hi

[19:30] <autrijus> is it not there? it is there for me.

[19:31] <ingy> autrijus: great :|

[19:31] <autrijus> ingy: these are not haskell 98 and pugs makes no use of them (yet)

[19:31] <autrijus> so you don't need to do seppuku just yet

[19:31] <dada> fixed

[19:31] <autrijus> "fixed"?

[19:31] <theorbtwo> Please, don't get guts all over the chan.

[19:31] <dada> just needed to close the console and open a new one :-)

[19:32] <autrijus> ah.

[19:32] <dada> it messes with %ENV apparently

[19:32] <autrijus> weird.

[19:32] <autrijus> oh. the .msi

[19:32] <autrijus> that's too fresh :)

[19:32] <dada> yes, the console was opened *before* installing GHC :-)

[19:33] <autrijus> figured :)

[19:33] <tiw> ~= is also a todo feature?

[19:33] <autrijus> yeah, the >><< modifier and the post = modifiers are todo.

[19:34] <autrijus> ~= etc are trivial to implement

[19:34] <autrijus> just look at --

[19:34] <autrijus> not sure if they are tested

[19:35] <dada> why doesn't make test pick up my testfile?

[19:36] <autrijus> perl Makefile.PL

[19:36] <autrijus> will refresh the list of test.s

[19:36] <autrijus> theorbtwo: you posted to p6c?

[19:36] <theorbtwo> Yeah.  Not sure why it hasn't shown up; I should be whitelisted.

[19:36] <autrijus> hmm, maybe needs some time to propagate

[19:36] <theorbtwo> I posted via the NNTP.

[19:36] <autrijus> not sure nntp works.

[19:36] <autrijus> but ok :)

[19:37] <dada> autrijus: yes, sure

[19:37] <ingy> gugod: ping

[19:37] <autrijus> 3:37am here. guess gugod's asleep.

[19:37] <autrijus> I need to sleep soonish too.

[19:38] <ingy> gugod never sleeps

[19:38] <ingy> gugod: join #yapc.tw when you wake up

[19:38] <nothingmuch> anyone care to help me with YAHT excercise 4.7?

[19:38] <nothingmuch> i've been delaying it all day

[19:39] <autrijus> malaire: mm, the >> form is not parsed, only french form?

[19:39] <malaire> yes, I only added french form

[19:39] <theorbtwo> Which one is 4.7?

[19:39] <nothingmuch> #haskell people are not listening to me

[19:39] <nothingmuch> Tuples + Either

[19:39] <nothingmuch> what does Left x construct?

[19:40] <nothingmuch> a value that can be used in place of Either?

[19:40] <nothingmuch> which means...?

[19:40] <dada> I'm about to commit

[19:40] <nothingmuch> fromTuple (One a ) = Left (Left a )

[19:40] <malaire> Left x constructs a value of type Either, as does Right x

[19:41] <autrijus> Left :: a -> Either a b

[19:41] <nothingmuch> what i'm looking for is a practical example of where Either makes sense

[19:41] <autrijus> i.e. for whatever b, it can make a "Either a b" from a

[19:41] <autrijus> nothingmuch: oh. sure. Bind.hs :)

[19:41] <nothingmuch> in the hopes that i can generalize form that

[19:41] <autrijus> Either lets you returns a string for error

[19:41] <nothingmuch> autrijus: be reasonable please

[19:42] <autrijus> and a whatever type you want for normal "correct" answer

[19:42] <autrijus> "Either String Val" means

[19:42] * theorbtwo wonders how many people have filled in affiliation~~m:i/pugs/ in the YAHT download form... and how many of them are me.

[19:42] <autrijus> "something that can fail with a String, or succeed with a Val"

[19:42] <nothingmuch> so the return of function bzzt, being either means 'either bzzt was happy, or it was sad'

[19:42] <malaire> Example 4.7 is *not* practical example... Once you learn about Monads, there are many examples where Either is used.

[19:42] <dada> how do I set the username with svn?

[19:43] <autrijus> svn ci --username maybe?

[19:43] <nothingmuch> ok, what does fromTouple mean, really?

[19:43] <dada> autrijus: exactly that

[19:43] <nothingmuch> either it's a value, or it's a pair, or it's a triple, or a quadruple?

[19:44] <nothingmuch> given any one of the Touple variations?

[19:44] <ingy> dada: svn help checkin

[19:44] <ingy> er

[19:44] <nothingmuch> how does that become, err, logical?

[19:44] <ingy> dada: svn help commit

[19:44] <ingy> rather

[19:44] <dada> it worked! committed! r593! hooray!

[19:44] <ingy> dada++

[19:44] <dada> ingy: thanks :-)

[19:45] <ingy> np

[19:45] <Limbic_Region> perlbot karma for autrijus

[19:45] <perlbot> Karma for autrijus: 6

[19:45] <theorbtwo> You can write multiple versions of the same function that take different arguments.

[19:45] <Limbic_Region> seems low

[19:45] <Limbic_Region> autrijus  

[19:45] * nothingmuch rephrases

[19:45] <malaire> notrhingmuch: It's jsut a example how a single function has return 4 different types of data (i.e. you can't do that, unless different types are put within some other type, e.g. Either)

[19:45] <theorbtwo> So tupple1 Tupple a can do something different then tupple1 Tupple a b.

[19:45] <Limbic_Region> arggh - but this client eats plus symbols so I can't karma anybody

[19:46] <nothingmuch> how do i use the return value?

[19:46] <nothingmuch> ok

[19:46] <dada> actually, t/op/splat.t contains 1 test and 2 todo's (and 4 more commented out because they don't even parse)

[19:46] <nothingmuch> i think i get it

[19:46] <theorbtwo> autrijus++ # proxied

[19:46] <nothingmuch> then i pass it on to other polymorphic functions

[19:46] <nothingmuch> and it just works?

[19:46] <theorbtwo> Then again, I'm not real sure my solution was the best one.

[19:47] <nothingmuch> data if you can get something that doesn't parse to todo_ok in an eval '', then please do

[19:47] <theorbtwo> BTW, appendix d has solutions.

[19:47] <nothingmuch> i looked at the solution, and didn't understand it

[19:47] <autrijus> is this the "tup1" exercise?

[19:47] <nothingmuch> uhuh

[19:47] <nothingmuch> i got passed Maybe

[19:47] <nothingmuch> that makes sense, sort of

[19:48] <autrijus> oh. it's not the tup1 yet. I have a favourite solution for tup1 :)

[19:49] <autrijus> probably won't help you, though :)

[19:49] <autrijus> # http://wagner.elixus.org/~autrijus/tup1.hs

[19:49] <theorbtwo> Oh, my solution does match the sample one pretty well.  That's pretty sad, as I thought my solution was an ugly hack.

[19:50] * nothingmuch grudgingly continues hoping to feel he got it later on

[19:50] <tiw> is match a regex not implemented? and is there anywhere a list, in which i can find what is implemented and what not, i do not want to waste your time on such trivial question

[19:50] <nothingmuch> tiw: this list is a work in progress

[19:51] <nothingmuch> tiw: to be quick, grep -r todo_ t/

[19:51] <autrijus> tiw: you can help filling in annotations for t/Synopsis/*.pod

[19:51] <nothingmuch> tiw: and check if there's a corresponding file for the feature you want

[19:51] <autrijus> it's a task that can be done piecemeal

[19:51] <dada> nothingmuch: I have another exercise for you: learn to spell my nick :-)

[19:51] <autrijus> ask nothingmuch and stevan for the appropriate S<> syntax.

[19:52] <autrijus> I'd be happy to walk you through, but I need to sleep now :)

[19:52] <nothingmuch> da<tab>, i think

[19:52] * autrijus waves &

[19:52] <dada> nothingmuch: no, "data" is not here :-)

[19:52] <nothingmuch> that's unambiguous at the moment

[19:52] <dada> bye autrijus

[19:52] <nothingmuch> ciao, autark-jp 

[19:52] <nothingmuch> damnit

[19:52] <nothingmuch> autrijus: 

[19:52] <dada> [20:47] <nothingmuch> data if you can get something that doesn't parse to todo_ok in an eval '', then please do

[19:53] * nothingmuch is having a very very bad day

[19:53] <nothingmuch> all(users).any(forgive, ignore)

[19:53] * dada pats on nothingmuch's shoulder

[19:54] <malaire> nothingmuch: Once you get to YAHT chapter 9, you might want to read "All About Monads" (http://www.nomaware.com/monads/html/) at that point. -- At least I found that a lot easier introduction to Monads. But it requires you to understand basic stuff first.

[19:54] * nothingmuch will try to remember

[19:56] * malaire Goes to sleep...

[19:56] <nothingmuch> ciao malaire

[19:56] <rgs> Ryusei-Kacho ?

[19:57] <dada> speaking of Haskell, I didn't understand what a "constructor" is

[19:57] <nothingmuch> as I see it a constructor is a way to take some things

[19:57] <dada> but

[19:58] <nothingmuch> and combine them in an undefined way (does the compiler control this?)

[19:58] <nothingmuch> into a tyupe

[19:58] <dada> data Point a = Pt a a

[19:58] <nothingmuch> which other functions have a standard way of taking apart

[19:58] <dada> "Point" is the type here

[19:58] <dada> and what is "Pt"?

[19:58] <nothingmuch> Pt is the name of the constructor

[19:59] <dada> and is the body of the constructor defined elsewhere?

[19:59] <nothingmuch> a a is the body

[19:59] <nothingmuch> it takes a a

[19:59] <nothingmuch> and converts it into Point

[19:59] <dada> mmm

[19:59] <nothingmuch> somehow

[19:59] <dada> but aren't names beginning with a capital reserved for types?

[20:00] <nothingmuch> well, it's not really a function

[20:00] <nothingmuch> since it doesn't do things you control

[20:00] <nothingmuch> or rather, it's not really user defined

[20:00] <nothingmuch> i don't know if it isn't a function

[20:00] <dada> the Gentle tutorial isn't very clear about this point

[20:01] <rgs> autrijus: nice slides.

[20:03] <nnunley> data:  It's a signature, not a function.

[20:03] <nnunley> So you know the shape, but not the construction.

[20:04] <dada> argh!

[20:04] <nnunley> You would need to write a function that in turn builds the data for you.

[20:04] <dada> why is everybody calling me "data" today? :-)

[20:04] <nnunley> dada: Good question.  Muscle memory.

[20:04] <nnunley> Or you could see it as a dadaist experiment. ;)

[20:05] <dada> even :-)

[20:05] <dada> so, "data Point a = Pt a a" is not enough to build a point?

[20:07] <nnunley> dada:  You'd have a simple function that did someting like:  makePoint x y = Pt x y

[20:08] <nnunley> dada:  Note, the type isn't defined yet for a --  it could be just about anything, as long it as it was the same for both slots.

[20:09] <dada> yes, this is clear

[20:09] <dada> but!

[20:09] <dada> Prelude> data Point a = Pt a a

[20:09] <dada> <interactive>:1: parse error on input `data'

[20:09] <dada> should I use "dada" instead? ;-)

[20:09] <nnunley> Put it in a file.

[20:09] <dada> oh, ok

[20:09] <nnunley> The interpreters are a little dull when it comes to defining new functions and types.

[20:10] <tiw> nothingmuch: i have checked matching regexp in t/, but find nothing about it

[20:10] <nothingmuch> tiw: regexp are not implemented

[20:11] <tiw> and also in todo

[20:11] <tiw> not in todo?

[20:11] <dada> well, I still don't understand the need for a "Pt" there

[20:11] <dada> but maybe I will...

[20:12] <nothingmuch> i was supposed to write that, tiw, but i feel like crap and can't concentrate

[20:14] <nnunley> dada: I think it's just to give you a place to hang things.  If you had other options for what a Point could be, say... data Point a = Pt a a | Pt3d a a a | Pt1d a

[20:14] <dada> mmm

[20:15] <dada> this makes sense

[20:15] <nnunley> data:  I suppose it makes more sense once you start playing with the codebase.

[20:16] <nnunley> That is, once you start playing with a real code base.

[20:18] <nnunley> Blah.  Did it again.

[20:23] <dada> I'm getting used to it :-)

[20:34] <dada> I go, goodnight

[20:37] <theorbtwo> Resending time() post via email.

[20:41] <theorbtwo> Is it just me, or is the hyperoperator bit in Prim.hs completely wrong?

[20:42] <theorbtwo> The first codepoint given is capital a circumflex, not <<.

[20:42] <theorbtwo> Morever, it gives <<op>> instead of >>op<< unless I'm quite mistaken.

[20:42] <theorbtwo> Which is quite possible, I should note.

[20:43] <tiw> bye, goodnight

[20:43] <theorbtwo> G'night, tiw.

[20:49] <theorbtwo> t/op/hyper.t would be the right place, right?

[20:50] <theorbtwo> Oh, hmm...

[20:51] * nothingmuch needs alcohol and vast quantities of it, at that

[20:51] <nothingmuch> sorry for not getting to rules yet, everyone

[20:51] <nothingmuch> nothingmuch--

[20:51] <nothingmuch> adios

[21:42] <theorbtwo> Allo, Schwern.

[21:46] <Schwern> Hi

[21:46] <theorbtwo> Hm, do all binary operators have an assignment form?

[21:46] <theorbtwo> Er, binary infix.

[21:48] <theorbtwo> Oh, wait, they're already there, why aren't they parsing...

[21:49] <theorbtwo> Hm, this is sticker then I thought.

[21:50] <theorbtwo> The problem with $a ||= 3; is that it thinks it's $a || =3;

[21:51] <theorbtwo> That is, that the = readline operator is getting applied to the constant 3, and that's getting logically ored with $a.

[21:51] <theorbtwo> (And all of this in void context.)

[22:32] <nnunley> Schwern: Hey.

[22:49] <Schwern> Hey

[22:50] <Limbic_Region> 17:35, nnunley serves to Schwern

[22:51] <Limbic_Region> 17:51, Schwern returns serve

[22:51] <Limbic_Region> this is the longest game of pong I have ever seen

[22:58] <Schwern> Sorry, Pugs is slow

[22:58] <Juerd_> hehe

[22:58] <Juerd_> I've played pong via e-mail once

[22:58] <Juerd_> Once, because a 15 point game takes way too long

[22:59] <theorbtwo> And playing it by email speeds it up?

[22:59] <Juerd_> No

[22:59] <Juerd_> Not quite

[22:59] <Juerd_> Real time games are hard to play turn based

[23:00] <theorbtwo> Of course.

[23:00] <Juerd_> It worked though

[23:00] <Schwern> Let's play tetris on paper.

[23:00] <theorbtwo> (This being why D&D gets a big -- in my book vs LARP.)

[23:00] <Juerd_> Schwern: I've done that!

[23:00] <Juerd_> In school

[23:00] <Juerd_> During maths

[23:00] <Schwern> I was going to say, you must have been reaaaaaally bored.

[23:01] <Juerd_> Of course

[23:01] <theorbtwo> Trying to create an optimal algo, or what?

[23:01] <Juerd_> No

[23:01] <Juerd_> Trying to out-score my opponent

[23:01] <Juerd_> We used all blocks except the square one

[23:02] <Juerd_> A simple D6 determined the block

[23:03] <Juerd_> If I had to choose between paper tetris and e-mail pong, it'd be paper tetris

[23:04] <theorbtwo> /metoo.

[23:04] <Juerd_> we mostly played hangman though

[23:04] <Juerd_> but not with easy words

[23:05] <theorbtwo> antidisestablishmentarisim?

[23:05] <theorbtwo> I know, in Dutch.

[23:05] <Juerd_> Like that, yes

[23:06] <theorbtwo> I wonder -- does Dutch tend to form reallylongcompoundwords like German?

[23:06] <Juerd_> Our chem teacher once tried to play hangman with formulas

[23:06] <lumi> It does

[23:06] <lumi> Like telefoonbeantwoordaparaatvrees

[23:06] <Juerd_> Like H2O -> 2H2 + O2

[23:06] <lumi> (Fear of ansaphones)

[23:06] <Juerd_> lumi: That's voicemailfobie in modern Dutch.

[23:06] <Juerd_> :)

[23:07] <Juerd_> theorbtwo: Yes.

[23:07] <lumi> Really? My favourite word, demolished!

[23:07] <Juerd_> theorbtwo: rioolwaterzuiveringsinstallatie

[23:08] <theorbtwo> Something to do with plumbing?

[23:08] <Juerd_> Somewhat

[23:08] <Juerd_> I don't even know the English word for riool

[23:08] <theorbtwo> I know no Dutch.  Hell, I barely know any German, and I've lived in Munich for over a year and a half.

[23:09] <theorbtwo> Babelfish suggests sewer.

[23:09] <Juerd_> You could never learn Dutch either - you'll just notice everyone starts speaking English to you...

[23:09] <Juerd_> sewer water cleaning installation, then

[23:11] <Juerd_> You misspelled renaissance in your yahoo profile, I think

[23:11] <theorbtwo> Me?

[23:11] <theorbtwo> I don't really care.

[23:13] <Juerd_> Or someone invading your name space

[23:13] <Juerd_> (It's hard to type that without [])

[23:13] <webmind> print $_

[23:13] <Juerd_> webmind: needlessly verbose

[23:13] <Juerd_> webmind: Just print

[23:13] <webmind> uhm

[23:13] <webmind> yeah

[23:13] <webmind> sorry

[23:13] <Juerd_> :)

[23:13] <theorbtwo> Fixed anyway.

[23:13] <lumi> btw theorbtwo, how's the subetha doing?

[23:14] <theorbtwo> Not too badly, but will be a while before it sees light at this pace.

[23:14] <lumi> Need help? I've my mac now

[23:14] <Juerd_> lumi: with french fries?

[23:15] * Juerd_ is still waiting for the mac menu mini

[23:15] <lumi> Um yeh, one of those

[23:15] <theorbtwo> Not really.  Ended up putting pearpc on another box as well.

[23:15] <Juerd_> I've been considering wanting a mac mini.

[23:15] <Juerd_> (Literally)

[23:15] <Juerd_> I still don't know if I want one

[23:15] <theorbtwo> Strangely, networking worked much more easily with that one.

[23:15] <Juerd_> I want to want one though

[23:15] <theorbtwo> I still don't know if I want an OSX box at all.

[23:16] <webmind> Juerd_, why would you want one |?

[23:16] <Juerd_> theorbtwo: That's my problem too

[23:16] <webmind> ?

[23:16] <Juerd_> webmind: Because it's a very neat and silent tiny box

[23:16] <theorbtwo> There still seems to be a significant divorce between the unixy bits and the macy bits.

[23:16] <webmind> well loads of silent boxes out there

[23:16] <theorbtwo> The filesystems have different roots, though.

[23:16] <Juerd_> Not at this price, webmind 

[23:16] <webmind> http://www.myelectronics.nl/

[23:16] <webmind> yes

[23:16] <webmind> at that price

[23:17] <webmind> but no macs

[23:17] <Juerd_> Then not elegantly small

[23:17] <Juerd_> Or?

[23:17] <lumi> Filesystems, different roots?

[23:17] <webmind> Juerd_, check that url.. and then compleyr systems

[23:17] <webmind> the site is crap btw

[23:17] <theorbtwo> They seem to...

[23:18] <Juerd_> I'll have a look

[23:18] <lumi> I don't think so

[23:18] <webmind> btw did the '...' operator still made it into perl6 ?

[23:18] <lumi> You have / and it has your booted partition mounted, at least in my setup, and /Volumes where itautomounts stuff

[23:19] <lumi> But ask nothingmuchm he's the Mac guru

[23:19] <theorbtwo> Oh... no, there's just a lot of hidden directories.

[23:19] <lumi> There is that

[23:20] <Juerd_> webmind: Ehm. I can't find any system that's comparable to the mac mini in price, size and performance

[23:20] <Juerd_> webmind: Which one do you suggest I look at?

[23:20] <webmind> ah

[23:20] <webmind> performance

[23:20] <webmind> Juerd_, well mini-itx case + pentium M board ?

[23:20] <webmind> not sure about the pricing then

[23:21] * webmind actually isn't sure about the mac-mini's performance

[23:21] <Juerd_> webmind: Pentium M is expensive.

[23:21] <webmind> would you want to run linux or MacOSX on the mini btw ?

[23:22] <webmind> Juerd_, but fast

[23:22] <Juerd_> I'd like to try OSX

[23:22] <Juerd_> But I'll probably end up running debian on it

[23:22] <theorbtwo> There's little point in buying a mac just to put debian on it.

[23:22] <Juerd_> theorbtwo: There is with this little machine

[23:22] <theorbtwo> ...though I suppose if the ...

[23:22] <Juerd_> It's small and silent.

[23:22] <theorbtwo> What I was about to say.

[23:22] * webmind doubt if debian runs as fast on a mac as macOS does.. but I honestly don't know

[23:23] <theorbtwo> If you actually have a wish for a small silent box.

[23:23] <Juerd_> And not ridiculously expensive, as mini-itx systems are

[23:23] <webmind> Juerd_, I sugest trying it out somewhere first then

[23:23] <theorbtwo> I have only a minor wish for such a thing.

[23:23] <theorbtwo> (Could do movies on it, probably better then the laptop I'm using now.)

[23:23] <Juerd_> Compare cheap laptops to mini-itx systems

[23:23] <webmind> Juerd_, macmini is 500 right ?

[23:23] <Juerd_> And then realise the cheap laptops come with a big TFT screen built in!

[23:24] <Juerd_> That makes the mini-itx systems very expensive.

[23:24] <Juerd_> A mini itx board easily costs EUR 100

[23:24] <Juerd_> While a cheap micro atx board costs around EUR 40

[23:24] <Juerd_> Or even less

[23:24] <Juerd_> webmind: Yes

[23:24] <Juerd_> webmind: WITH optical drive!

[23:24] <theorbtwo> There's the matter of upgradability, but a mac mini isn't any more upgradable then a laptop.

[23:25] <theorbtwo> Possibly less.

[23:25] <webmind> Juerd_, dvd drive right ?

[23:25] <webmind> which is slot load afaik :(

[23:25] <webmind> I guess it's nice

[23:26] <webmind> just not sure about the g4+slowbus performance

[23:26] <Juerd_> theorbtwo: I don't really care much about that. After two years, I just buy a new one if I think I need one

[23:26] <webmind> especially with non-macos

[23:26] <Juerd_> webmind: You know what I use computers for, right?

[23:26] <webmind> coding ?

[23:26] <Juerd_> I use a browser and terminals with ssh

[23:26] <theorbtwo> I don't get new computers all that often.

[23:26] <Juerd_> That's about it.

[23:26] <webmind> yes

[23:26] <Juerd_> And some music playing

[23:26] <theorbtwo> And I very rarely do a complete upgrade at once.

[23:27] <webmind> so why need the performance of a macmini ?

[23:27] <Juerd_> webmind: Because it's a hell of a lot faster than the annoyingly slow 533 MHz vias

[23:28] <Juerd_> I have two 800 MHz mini itx epias just laying around because I find them too slow to enjoy

[23:28] <webmind> hm k

[23:28] <theorbtwo> For me, I have two rooms.  The noise budget in the living room is already blown.  Putting a perm machine under the bed in the bedroom might be nice, but it'd have to be quiet, and damn cheap.

[23:28] <webmind> sounds usefull

[23:28] <Juerd_> webmind: One will be our print server

[23:28] <webmind> Juerd_, seen the dual mini-itx btw ?

[23:28] <webmind> Juerd_, hmk

[23:28] <webmind> nice

[23:28] <Juerd_> Although that'll be a step backwards from the P3-700 we have now

[23:28] <Juerd_> The good thing though is that it'll be mounted to the wal

[23:29] <Juerd_> wall

[23:29] <webmind> and silent ?

[23:29] <Juerd_> And thus look good in the office :)

[23:29] <Juerd_> A little more silent than we have now. It's not fanless and we'll still be using a normal psu

[23:29] <webmind> main advantage of mini-itx to me is size+noise+power usage

[23:29] <webmind> hmk

[23:30] <Juerd_> Which it all doesn't have. :)

[23:31] <webmind> well size + power usage advantage?

[23:35] <theorbtwo> Hm.

[23:36] <theorbtwo> The 802.11 will not work under Linux.

[23:36] <theorbtwo> I'd call that a good reason to not run it.

[23:37] <Juerd_> So I'll use an USB dongle

[23:37] <Juerd_> It's not a big deal. It doesn't come with 802.11 standard anyway

[23:40] <webmind> does it have any interfacing / driver issues under linux for any other hardware ?

[23:43] <theorbtwo> http://www.sowerbutts.com/linux-mac-mini/#support -- audio doesn't work, probably will be fixed soon, this guy thinks.

[23:43] <theorbtwo> bluetooth and modem untested.

[23:52] <webmind> audio

[23:52] <webmind> that sounds like crap

