[00:00] <wolverian> summer time ends in one hour here.

[00:00] <wolverian> don't generalise. :)

[00:00] <theorbtwo> Oh, damn, I'm an idiot.

[00:00] <theorbtwo> No, wolverian: it ends the same moment all over europe.

[00:00] <theorbtwo> That time is in one hour.

[00:00] <wolverian> ah, you mean european summer time.

[00:00] <wolverian> yes, correct.

[00:34] <eric256> the parens are for pairs.  its the .perl way of outputing it.

[00:35] <wolverian> pairs are higher precedence than , I think

[00:35] <wolverian> s,pairs,=>,

[00:35] <eric256> didn't say they were needed. ;)

[00:35] <eric256> a little lighter green now

[00:36] <eric256> on the tests pages. ;)

[00:45] <jrussell> hiya .. i'm using the combine() function from Math::Combinatorics. i'm not getting the unique combination i'm supposed to get

[00:46] <eric256> jrussell...you know this is a room for perl6 i.e. pugs development right?  you might want #perl

[00:47] <jrussell> oh sorry i didn't

[00:47] <jrussell> thank you

[00:59] <svnbot6> r7770 | eric256++ | Test-Catalog: Added colums to the file listing, added yellow shading for todo items.

[01:00] <theorbtwo> Woo, it's 1 o'clock again (in England).

[01:00] <eric256> ?eval localtime();

[01:00] <evalbot_7770> \Time::Local.new(("day" => 30), ("hour" => 2), ("is_dst" => bool::false), ("min" => 0), ("month" => 10), ("picosec" => 811255000000), ("sec" => 25), ("tz" => 3600), ("tzname" => "CET"), ("wday" => 1), ("yday" => 302), ("year" => 2005)); 

[01:00] <eric256> is that 3600 seconds?

[01:22] * eric256 is amazed by the usefullness of running top in one terminal while working in another...and promises not to leave it running when not needed ;

[02:18] <svnbot6> r7771 | eric256++ | Converted all http links to use the L<" format

[02:27] <eric256> 466 test files with 344 links...not too shabby.

[02:57] <eric256> anyone know when S29 will be commited?

[03:17] <svnbot6> r7772 | eric256++ | Created SAE index for tests.pugscode.org, some code speed up and clean up as well.

[03:22] <autrijus> eric256: you mean to svn.perl.org?

[03:23] <autrijus> I think it makes sense to ask @Larry on p6l about this

[03:23] <autrijus> and if yes I can commit it into svn.perl.org

[03:28] <wolverian> OT - MS's new Consolas font is the best coding font I've seen in a while. (at least if you like purty shapes and antialiasing. :)

[03:29] <autrijus> ooh url?

[03:31] <autrijus> oh, wait, that'd be asking for warez ;)

[03:31] <wolverian> I d

[03:31] <wolverian> on't actually know its license

[03:32] <autrijus> can't easily find it online though

[03:33] <wolverian> right

[03:34] <wolverian> hmm. perl5 feels like walking on ice nowadays. slippery fun, but frustrating.

[03:35] <autrijus> I thought it's been like that for ages :)

[03:35] <autrijus> medieval castle and all that

[03:35] <autrijus> Consolas screenshots look nice

[03:35] <wolverian> but it's only now that I've realised it.

[03:35] <autrijus> not sure I'm giving up Andale Mono (another MS font) though

[03:35] <wolverian> Andale Mono is very nice too.

[03:35] <wolverian> Consolas, Andale Mono and Bitstream Vera Sans.

[03:35] <autrijus> and Anonymous for lower res

[03:35] <autrijus> that's about it for me

[03:36] <autrijus> I still remember the first day I got the then-cutting-edge antialias andale mono + mlterm set up

[03:36] <autrijus> I feel my life has changed :)

[03:37] <autrijus> even better, I imported Apple LiGothic using pfaedit (now known as fontforge) so it works on freetype

[03:37] <wolverian> eh, I'm using 17% of my gmail space and I haven't even checked it in weeks 

[03:37] <autrijus> spams?

[03:37] <wolverian> no, p5p apparently. :)

[03:37] <autrijus> aha :)

[03:44] * autrijus backlogs p6l and wonders if some more sleep is warranted (4:43am)

[04:08] <wolverian> well, that was the first time I've ever used Storable::dclone

[05:04] <eric256> autrijus i meant svn.perl.org

[05:48] <svnbot6> r7773 | eric256++ | Minor tests documentation clean up.

[05:49] <eric256> night all

[05:56] <gaal> heya

[05:56] <gaal> eric256: just missed you - but nice work on the tests referencing!

[06:14] <Khisanth> oO

[06:18] <Khisanth> Bundle::Pugs::SmokeKit requires 5.8.7?

[06:26] <gaal> errr, it shouldn't

[06:27] <gaal> oughta be 5.006001. where'd you get that?

[06:27] <Khisanth> CPAN :)

[06:27] <Khisanth> 0.03

[06:28] <gaal> i wonder what might want 5.8.7 there, maybe one of the deps...

[06:29] <Khisanth> the use 5.008007; wants 5.8.7

[06:29] <gaal> where's a use 5.008007?

[06:30] <Khisanth> the Makefile.PL

[06:30] <gaal> "use 5.006001"

[06:31] <Khisanth> http://search.cpan.org/src/GAAL/Bundle-Pugs-SmokeKit-0.03/Makefile.PL does not agree with you! :)

[06:31] <gaal> !

[06:31] <gaal> fixing

[06:31] <gaal> must have fixed and forgotten to upload :/

[06:34] <gaal> uploaded.

[06:35] <gaal> commute&

[06:51] * Khisanth wonders why ghc requires over 600MB to compile Pugs.Run

[07:20] <xerox> Howdy!

[07:21] <wolverian> morning

[07:21] <xerox> What's this Sunday's pretty-Unicode-sigil? :-)

[07:21] <pmurias> morning

[07:22] <gaal> Khisanth: because that file includes the precompiled prelude.

[07:22] <gaal> but 600mb is a little much.

[07:22] <gaal> are you precompiling other modules besides? Test.pm etc?\

[07:23] <gaal> Khisanth: $CPAN/authors/id/G/GA/GAAL/Bundle-Pugs-SmokeKit-0.04.tar.gz

[07:23] <gaal> and thanks for the report :)

[07:23] <wolverian> xerox, Î©, the camel's butt

[07:23] * xerox pokes wolverian

[07:23] <wolverian> am I really the only one who sees it? :)

[07:23] <xerox> What does it do ?

[07:23] <xerox> I see it :D

[07:24] <wolverian> you can figure out what it does. I just made it up.

[07:24] <xerox> Hmpf.

[08:24] <xinming> seen autrijus 

[08:24] <jabbot> xinming: autrijus was seen 4 hours 6 minutes 17 seconds ago

[08:26] * xinming wonders why pugs developement progress is slown down...

[08:27] <liz6> no worry, it will speed up again this week...  ;-)

[08:27] <xinming> Why the commits aren't so much as before...

[08:28] <xinming> liz6: hmm, what's happening?

[08:28] <xinming> I finally got a rest after I come back to WenZhou.

[08:28] <dduncan> I'd say its partly all those conferences that people are going to

[08:29] <dduncan> autrijus seems to be going to be chain-attending several of them

[08:29] <liz6> exactly, and autrijus should be able to find some "quality time" this week...

[08:30] <xinming> Yeap, I think so, iblench and other people aren't here as usual these days

[08:31] <svnbot6> r7774 | yiyihu++ | Correct a translation problem.

[08:31] <xinming> oops. I should use mistake instead of problem. :/

[08:31] <dduncan> good night folks

[08:32] <xinming> where to get the irc log for this channel? I can't access the link given in www.pugscode.org

[08:34] <rashakil> I'm seeing it at http://colabti.de/irclogger/irclogger_log/perl6?date=2005-10-30 just fine

[08:35] <rashakil> Though, that's where the pugscode.org link redirects to.

[08:45] <xinming> rashakil: thanks, I really don't know why I can't open directly through pugscode.org

[09:11] <buu> So you got the log?

[09:12] <nothingmuch> office mannars suck

[09:12] <nothingmuch> i had a friend who needed a ride a few days ago

[09:12] <nothingmuch> i picked him up and he spend a few minutes at work

[09:12] <nothingmuch> i was on the second screen, coding

[09:13] <nothingmuch> he was on the first screen, watching a movie

[09:13] <nothingmuch> today someone remarked that "it's not really accepted to share company code"

[09:13] <nothingmuch> fsck! the dude doesn't even know to code, and i'm more responsible than that

[09:13] <nothingmuch> and what I was writing is also intended to be opensourced eventually, so it's not even sensitive IP or anything

[09:15] <xinming> buu: Yes

[09:16] <xerox> poor nothingmuch :(

[09:16] <xinming> nothingmuch: what does fsck mean?

[09:16] <nothingmuch> tr/s/u/

[09:16] <xinming> phuck and suck?

[09:16] <xinming> ooops.

[09:16] <nothingmuch> ex

[09:17] <nothingmuch> cept more geeky ;-)

[09:17] <nothingmuch> there was a sprocketdata (colo company) banner a while ago

[09:17] <nothingmuch> J. Random Hacker calls up his colo company's support and says:

[09:17] <nothingmuch> "Hi, I need you to fsck my server" or something like that

[09:18] <xinming> I hear that some companies even don't have a good programmar, most people are hourly programmar I ever heard.

[09:18] <nothingmuch> so the support guy says "Uh, sir, please don't use language like that"

[09:18] <nothingmuch> so he says "I really need a fsck", ... eventually support guy hangs up

[09:18] <nothingmuch> and then epilogue was "We at SprocketData know what fsck really means" or somesuch

[09:20] <gugod> a awesome, educationally meaningful story

[09:36] <autrijus> xinming: irc.pugscode.org

[09:37] <liz6> morning autrijus!

[09:37] <autrijus> greetings liz!

[09:38] <autrijus> the only thing between me and mad pugs haxx0ring is your WEP password :)

[09:38] <xinming> autrijus: I can't even access to these site. :-)

[09:38] <liz6> autrijus: come and get it then...

[09:38] <autrijus> xinming: it worksforme

[09:38] <xinming> autrijus: I have problem get on the subdomains on pugscode.org

[09:39] <autrijus> xinming: check your dns? it worksforme for sure

[09:39] <scook0> I have noticed some problems in the past with irc.pugscode.org

[09:39] <xinming> autrijus: I think this might be filtered by Great Firewall

[09:39] <xinming> autrijus: I changed DNS, not works.

[09:39] <autrijus> xinming: or use this - http://colabti.de/irclogger/irclogger_log/perl6

[09:39] <autrijus> yeah, the Great Firewall of China is indeed a wonder of the world

[09:39] <xinming> autrijus: yes, I use that now, marked favourate.

[09:40] <autrijus> cool

[09:40] <autrijus> re lack of commit, mostly because of I don't have net

[09:40] <autrijus> secondly because PickAxe is such a wonderful read.

[09:42] <xinming> where are you now?

[09:42] <autrijus> xinming: liz6's place

[09:42] <autrijus> ecto, netherlands

[09:42] <liz6> echt, netherlands to be more precise...  ;-)

[09:42] <autrijus> er.

[09:42] <xerox> autrijus: did you meet dons lately? ;)

[09:42] * autrijus blames this ecto blog reader thing

[09:43] <autrijus> but yes. echt

[09:43] <autrijus> xerox: no, but I'm going to stay at his place on december 20(ish)

[09:43] * xinming wants to travel around the world...

[11:02] <r0nny_> rafl_: ping?

[11:03] <rafl_> r0nny_: pong

[11:09] *** scook0_ is now known as scook0

[11:10] <Khisanth> gaal: only if pugs compiles the other modules by default

[11:25] <r0nny_> re

[11:25] <r0nny_> rafl_: is the svk mirror up ?

[11:28] <rafl_> r0nny_: No.

[11:34] <r0nny_> :/

[11:35] <rafl_> autrijus: ping

[11:36] <autrijus> pong

[11:36] <rafl_> autrijus: Does parrot embedding work for libparrot.a as well as for libparrot.so?

[11:36] <autrijus> rafl_: only .a I think, not sure ghc supports .so on lnx

[11:37] <rafl_> Well, how to test that? I'm currently preparing the Debian packages for parrot and would like to build the shared lib only.

[11:39] <autrijus> I don't know... just build libparrot .so and -lparrot

[11:40] <autrijus> and see if it finds that

[11:40] <gaal> Khisanth: by default only Prelude.pm is compiled. But also, by default the maximum heap size for GHC is much lower: it should not (and need not) go to 600mb with anything we're doing (yet). just to make sure, can you take a look at your config.yml?

[11:41] <gaal> also: what GHC/platform are you using?

[12:12] * autrijus praises the Consolas font.

[12:12] <wolverian> autrijus, isn't it nice :) it's fun!

[12:12] <autrijus> the comma is magical

[12:13] <wolverian> yes. the <> are perky, as are $ and Â¢ (the vertical lines are slanted)

[12:13] <autrijus> as it should be

[12:13] <autrijus> so all in all fairly nice

[12:14] <wolverian> ' and ' are the same though. that's weird.

[12:14] <r0nny_> rafl_: might it be possible to dcc me a tarball of the actual version ?

[12:39] <r0nny_> yo

[12:39] <autrijus> journal up :)

[12:40] * autrijus switches to journal-before-hacking

[12:40] <r0nny_> i got a problem with yaml evaluation

[12:40] <autrijus> yes?

[12:40] <r0nny_> there is a yaml file, i want to compute to a deep hash

[12:40] <svnbot6> r7775 | iblech++ | * Usual svn props.

[12:40] <svnbot6> r7775 | iblech++ | * t/pugsbugs/class_name_and_attribute_name_confliction.t: Fixed the test (the

[12:40] <svnbot6> r7775 | iblech++ |   return value of a submethod BUILD is not the return value of a .new()); the

[12:40] <svnbot6> r7775 | iblech++ |   test passes 3/3 now.

[12:41] <r0nny_> but it only maks the name of the first top-level key to a empty value

[12:41] <autrijus> post a sample?

[12:41] <autrijus> or better, write a test :)

[12:41] <autrijus> (and commit it)

[12:42] <r0nny_> http://r0nnyger.mine.nu/~r0nny/config.yaml

[12:43] <autrijus> take a moment to convert it to test format?

[12:43] <r0nny_> btw - the reuslting hash is {('CC' => '')}

[12:43] <autrijus> nod, will fix

[12:43] <r0nny_> how to convert it to test format ?

[12:44] <r0nny_> maybe im just using the wrong indentication

[12:44] <autrijus> r0nny_: look at t/unspecced/eval_yaml.t

[12:44] <autrijus> add to it

[12:44] <autrijus> the identation is correct afaics

[12:45] <autrijus> (you are a committer right?)

[12:45] <r0nny_> no commiter

[12:45] <autrijus> ok, your email?

[12:45] <r0nny_> [email@hidden.address]
[12:45] <r0nny_> plz dont missuse ;P

[12:45] <autrijus> welcome aboard :)

[12:45] <autrijus> sure

[12:45] <r0nny_> hmm

[12:45] <r0nny_> weit

[12:45] <autrijus> an invitation should be in your inbox in a couple mins

[12:46] <svnbot6> r7776 | iblech++ | * Fixed typos in L<> links in four tests.

[12:46] <autrijus> I'll brb -- fetch drink

[12:46] <svnbot6> r7776 | iblech++ | * util/catalog_tmpl/directory.tmpl: Colorized the ok/todo/failed nums

[12:46] <svnbot6> r7776 | iblech++ |   (with the same colors as the smokeserv uses) and added title="..." attributes

[12:46] <svnbot6> r7776 | iblech++ |   for maximum usability.

[12:46] <r0nny_> i think someone put me on some list about 4 or 5 days ago

[12:46] <r0nny_> hmm

[12:46] <r0nny_> *trying to remember*

[12:46] <autrijus> yeah, that's AUTHORS file

[12:46] <autrijus> not committer list

[12:46] <r0nny_> hehe ;P

[12:46] <autrijus> so you'd still need to register to set a password for svn commit :)

[12:46] <gaal> shouldn't there be a yaml doc separator before the CC: line?

[12:46] <autrijus> gaal: optional

[12:46] <gaal> "---\n"

[12:46] <autrijus> only the very old YAML.pm insists on it

[12:46] <autrijus> it's long gone rom spec

[12:47] <autrijus> s/rom/from/

[12:47] <autrijus> perl5 really needs a first-class syck binding

[12:47] <autrijus> it's sad to see RoR people praising YAML 

[12:47] <gaal> i'm too used to using implementations as ad-hoc specifications :/

[12:47] <autrijus> and binding is there for py, php, ocaml, etc

[12:47] <r0nny_> gaal: i removed it after it dod not work ;P

[12:47] <autrijus> except perl ;)

[12:47] <autrijus> (well to be fair there is a very primitive YAML-Parser-Syck)

[12:47] <autrijus> but no dumper part, and the parser is old too

[12:48] <autrijus> any takers? :)

[12:48] <autrijus> if not I may try to trick liz into doing it :)

[12:48] <gaal> :)

[12:48] <autrijus> drink &

[12:51] <r0nny_> !eval eval("CC:\n  FOO: bar\n",:lang<yaml>)

[12:51] <autrijus> it's ?eval

[12:51] <r0nny_> ?eval eval("CC:\n  FOO: bar\n",:lang<yaml>)

[12:51] <evalbot_7776> {("CC" => {("FOO" => "bar"),}),} 

[12:52] <r0nny_> ?eval eval("CC:\n  FOO: '%bar do bar'\n",:lang<yaml>)

[12:52] <evalbot_7776> {("CC" => {("FOO" => "%bar do bar"),}),} 

[12:53] <r0nny_> ?eval eval("CC:\n  FOO: '%bar do bar'\n  bar: '%FOO'\n",:lang<yaml>)

[12:53] <evalbot_7776> {("CC" => {("FOO" => "%bar do bar"), ("bar" => "%FOO")}),} 

[12:54] <r0nny_> why does it work with evalbot, but not on my files -_-

[12:55] <r0nny_> omg

[12:55] <r0nny_> i think i found the problem

[12:55] <r0nny_> =<fil> doenst slurp right :/

[12:56] <r0nny_> fil=file

[12:56] <wolverian> =$fh

[12:56] <theorbtwo> =<filename> should to, iirc...

[12:56] <r0nny_> since i do eval(=<config.yaml>,:lang<yaml>)

[12:57] <theorbtwo> (But perhaps I recall incorrectly, or perhaps the spec changed while I wasn't looking, or perhaps it is unimplmented.)

[12:59] <wolverian> ?eval slurp "foo"

[12:59] <evalbot_7776> Error: No compatible subroutine found: "&slurp" 

[12:59] <wolverian> arr!

[13:00] <r0nny_> eval and =<file> wont work together well

[13:01] <rafl_> autrijus: Did linking against a shared lib work?

[13:05] <xinming> who edit the test in t/pugsbugs/class_name_and_attribute_name_confliction.t ?

[13:07] <xinming> hmm, the updated version doesn't show the bug,

[13:07] <rafl_> xinming: use svk/svn blame

[13:07] <rafl_> Or svk log.

[13:09] <autrijus> rafl_: I've never used that with GHC.

[13:09] <autrijus> it's sad that "svk annotate" and "svk praise" are both longer than "blame"

[13:10] <autrijus> wolverian: slurp is IO no?

[13:10] <r0nny_> i got a syntax error: line 2, column 4

[13:10] <r0nny_>     at tmp-Prelude.pm line 119, column 30-64

[13:10] <autrijus> therefure unsafe

[13:10] <xinming> hmm, autrijus, can attribute has the same name as class name?

[13:10] <autrijus> xinming: yes

[13:11] <xinming> hmm, Ok, revert the file in t/pugsbugs/class_name_and_attribute_name_confliction.t please.

[13:12] <xinming> autrijus: hmm, that's a bug, the test is changed into fit pugs... not the bug report. :-(

[13:13] <autrijus> xinming: iblech is responsible

[13:13] <autrijus> the log says

[13:13] <autrijus> return value of a submethod BUILD is not the return value of a .new()

[13:13] <autrijus> r0nny_: can you commit the test that triggers the syn error? :)

[13:13] * autrijus can't fix something that is not a test...

[13:15] <r0nny_> syn error ????

[13:15] <autrijus> r0nny_: the "tmp-Prelude.pm" syntax error

[13:16] <xinming> ?eval class a {has $.a; method update { $.a; } }; class b { has $.a; submethod BUILD { a.new( a => $.a ).update; } };class c { has $.b; submethod BUILD { b.new( a => $.b ); } };c.new( b => 30 );

[13:16] <r0nny_> autrijus: im not sure, what made it 

[13:16] <evalbot_7776> (no output)

[13:16] <autrijus> r0nny_: nopaste the program?

[13:16] <xinming> this will cause pugs run infinitely.

[13:17] <r0nny_> atm the error doesnt happen

[13:17] <autrijus> k

[13:18] <r0nny_> the =<> op wont work with variables :/

[13:18] <autrijus> =$fh ?

[13:18] <autrijus> oh you mean the string form

[13:18] <r0nny_> i mean filenames

[13:19] <autrijus> =open($filename) perhaps?

[13:19] <xinming> ?eval class a { has $.a; method update { $var -= $.a; } };class b { has $.a; submethod BUILD { a.new( a => $.a ).update; };};b.new( a => 20 );

[13:19] <evalbot_7776> Error: No compatible subroutine found: "&update" 

[13:19] <xinming> autrijus: these are 2 bugs. :/

[13:19] <r0nny_> prelute error again

[13:20] <xinming> But iblench might not understand what I want to test really. he changed the class name.

[13:21] <autrijus> r0nny_: nopaste the code?

[13:21] <autrijus> xinming: hm, add some comments to it, then

[13:21] <autrijus> and revert that part of change

[13:22] <xinming> don't know how to do that exactly. :-( that's why I want you to revert it.

[13:22] <r0nny_> http://rafb.net/paste/results/nZRCGy89.html

[13:22] <autrijus> iblechbot: ideas?

[13:22] <r0nny_> i think line 9 causes it

[13:24] <autrijus> k, fixing

[13:25] <autrijus> I think the =open form is broken for some reason

[13:25] <r0nny_> hmm

[13:25] <rafl_> Why are haskell libs linked statically by default?

[13:27] <autrijus> rafl_: speed mostly

[13:27] <autrijus> and versioning

[13:27] <autrijus> because of separate compilation

[13:27] <autrijus> ghc user manual has something to say about that

[13:27] <r0nny_> autrijus: it breaks also with @foo= =$fh

[13:28] <r0nny_> hmm

[13:28] <r0nny_> hw to slurp a file ?

[13:28] <r0nny_> how

[13:29] <autrijus> @foo = slurp($fh);

[13:29] <autrijus> @foo = $fh.slurp;

[13:29] <rafl_> autrijus: Thank you.

[13:29] <autrijus> rafl_: np

[13:30] <r0nny_> damn - it even breaks if i use slurp

[13:31] <autrijus> weird

[13:33] <r0nny_> what kind of variable returns slurp ?

[13:33] <r0nny_> if fails on eval("file".fslurp,:lang<yaml>

[13:35] <r0nny_> http://rafb.net/paste/results/MY5Lfi72.html

[13:36] <r0nny_> is there a way to tell eval to use a file instead of a string ?

[13:38] <r0nny_> anyone ?

[13:39] <r0nny_> btw - ith there a way, to keep the tmp-Prelude.pm for checking ?

[13:39] <autrijus> r0nny_: eval to use a file?

[13:40] <autrijus> it's called require :)

[13:40] <r0nny_> autrijus: has require a :lang<foo> param ?

[13:40] <r0nny_> and does it have a result like a hash ?

[13:41] <autrijus> no and no I'm afraid

[13:41] <autrijus> although it would make sense to do so

[13:42] <autrijus> let me look at the slurp problem some more

[13:42] <autrijus> I think it's 3 bugs ;)

[13:46] <autrijus> stevan

[13:46] <autrijus> !

[13:47] <gaal> wasn't tmp-Prelude renamed to Prelude.pm a while back for better error messages?

[13:47] <gaal> anyway you should have it in the source tree root, r0nny.

[13:48] <gaal> is "fslurp" a typo?

[13:49] <autrijus> r0nny_: right. are you using svn or 6.2.10?

[13:56] <r0nny_> oh - i just see its 6.2.9

[13:56] <autrijus> er. grr.

[13:57] <autrijus> svn co http://svn.openfoundry.org/pugs   # please do this :)

[13:57] <stevan_> hola senor autrijus 

[13:57] <autrijus> hola senor stevan_ 

[13:57] <svnbot6> r7777 | yiyihu++ | The tests are right, reverted and add some comments about the test.

[13:57] *** stevan_ is now known as stevan

[13:57] <autrijus> how's your schedule today?

[13:57] <r0nny_> i think there was a way, to do evn ebuilds

[13:57] <stevan> autrijus: I have about 1.5-2 hours right now

[13:57] <r0nny_> will do ine for pugs

[13:57] <autrijus> r0nny_: you on gentoo?

[13:58] <autrijus> stevan: ok, are you on macosx or on non- ?

[13:58] <stevan> yes, OS X

[13:58] <r0nny_> autrijus: yeah

[13:58] <autrijus> stevan: cool, give me ~10min

[13:58] <stevan> ok

[13:58] <autrijus> I'll fetch ibook and SEE with you

[13:58] <autrijus> do you have a public IP?

[13:58] <stevan> ok

[13:58] <autrijus> or should I set up one in feather?

[13:58] <stevan> I dont

[13:58] <autrijus> that's fine, we'll use feather

[13:58] <stevan> feather is good

[13:59] <autrijus> fetch ibook &

[14:05] <r0nny_> wich version of parrot does the svn version need ?

[14:06] <autrijus> r0nny_: also trunk

[14:06] <r0nny_> so it needs the svn version of parrot, too

[14:06] <r0nny_> hmm

[14:06] <autrijus> yeah

[14:06] <autrijus> but not neccessary

[14:06] <autrijus> because you can build without parrot linking

[14:06] <autrijus> that's fine

[14:07] <autrijus> you can get rules support for 0.3.0 as well

[14:07] <r0nny_> ok - im going to use parrot-0.2.3 till i got a parrot svn ebuild

[14:07] <autrijus> sure... then rules may break

[14:07] <autrijus> but other things will all work

[14:08] <autrijus> stevan: skype + seE?

[14:08] <svnbot6> r7778 | iblech++ | t/pugsbugs/class_name_and_attribute_name_confliction.t: Explained the current

[14:08] <svnbot6> r7778 | iblech++ | problems of the test in detail (with proposed fixes).

[14:08] <svnbot6> r7779 | stevan++ | Perl6::ObjectSpace - 

[14:08] <svnbot6> r7779 | stevan++ | * first sketch for the object space, this has a long

[14:08] <svnbot6> r7779 | stevan++ |   long long long long way to go. 

[14:08] <svnbot6> r7779 | stevan++ | NOTE: based heavily on fglocks++ and putters++ 

[14:08] <svnbot6> r7779 | stevan++ | Perl6::Value/PIL::Run work, however all bad ideas 

[14:08] <svnbot6> r7779 | stevan++ | are completely mine ;) 

[14:09] <stevan> autrijus: lemme download skype, but I have SEE ready

[14:09] <theorbtwo> Is SEE better then gobby?

[14:09] <autrijus> theorbtwo: yes.

[14:09] <autrijus> not groundbreakingly better, but better

[14:09] <autrijus> mostly it's the scrollbar and cursor chasing

[14:09] <autrijus> stevan: connect to feather

[14:10] <theorbtwo> Nod.

[14:10] <stevan> with SEE?

[14:10] <autrijus> yeah

[14:10] <autrijus> see://

[14:10] <stevan> k

[14:10] * autrijus set up scary tcpxd and ssh-R magic with Kwiki::Edit::SubEtha

[14:11] * stevan is installing skype now

[14:13] <autrijus> btw, other people with SEE are welcome to join also.

[14:14] <xinming> ?eval class a { has $.a; method update { $.a; } };class b { has $.a; submethod BUILD { a.new( a => $.a ).update; }; }; b.new( a => 20 );

[14:14] <evalbot_7779> Error: No compatible subroutine found: "&update" 

[14:14] <xinming> hmm, is this right behaviour?

[14:15] <autrijus> prolly not

[14:15] <autrijus> that's a good test

[14:15] <autrijus> works if you rename?

[14:16] <r0nny_> *afk*

[14:17] <xinming> autrijus: hmm, could you please check out the file and tell me where should I change? :/

[14:17] <autrijus> a sec

[14:17] <autrijus> which test is this again?

[14:19] <xinming> t/pugsbugs/class_name_and_attribute_name_confliction.t

[14:19] <xinming> ?eval class a {has $.a; method update { $.a; } }; class b { has $.a; submethod BUILD { a.new( a => $.a ).update; } };class c { has $.b; submethod BUILD { b.new( a => $.b ); } };c.new( b => 30 );

[14:20] <evalbot_7779> (no output)

[14:20] * xinming is a bit confused about indirect creating the instances.

[14:20] <autrijus> BUILD doesn't return an instance

[14:20] <autrijus> it's not like new

[14:20] <autrijus> it modifies stuff

[14:21] <stevan> xinming: BUILD is passed the recently created, but not initalized instance

[14:21] <xerox> How do you read '$'? :)

[14:21] <autrijus> dollar

[14:21] <xerox> What's its sense?

[14:22] <autrijus> "singular"

[14:22] <xinming> hmm, for my second example, c.new( b => 30 );

[14:22] <xinming> c.new, call BUILD in c class, right?

[14:23] <xinming> :-S

[14:25] <xinming> But I didn't return an instance, I just use BUILD to call another class,

[14:30] <xinming> just use BUILD to call another constructor.

[14:30] <autrijus> yup

[14:31] <autrijus> so it is a bug alright...

[14:31] <autrijus> if you rename the "a" class to "foo" does the bug go away?

[14:33] <xinming> autrijus: yes, If I change the class name into upper case, the bug will disappear

[14:34] <xinming> ?eval class A { has $.a; method update { $.a; } };class B { has $.a; submethod BUILD { A.new( a => $.a ).update; }; }; B.new( a => 20 );

[14:34] <evalbot_7779> B.new(("a" => 20),); 

[14:34] <xinming> ?eval class a { has $.a; method update { $.a; } };class b { has $.a; submethod BUILD { a.new( a => $.a ).update; }; }; b.new( a => 20 );

[14:34] <evalbot_7779> Error: No compatible subroutine found: "&update" 

[14:36] <xinming> ?eval class A {has $.a; method update { $.a; } }; class B { has $.a; method BUILD { A.new( a => $.a ).update; } };class C { has $.b; submethod BUILD { B.new( a => $.b ); } };C.new( b => 30 );

[14:36] <evalbot_7779> C.new(("b" => 30),); 

[14:36] <xinming> I don't think we need to use method or submethod here, as the Synopsis said we can BUILD as method,

[14:37] <xinming> we don't need to care about method or submethod

[14:46] <xinming> ?eval my $x = 100; class A {has $.a; method update { $x -= $.a; } }; class B { has $.a; method BUILD { A.new( a => $.a ).update; } };class C { has $.b; submethod BUILD { B.new( a => $.b ); } };C.new( b => 30 ); $x.say

[14:46] <evalbot_7779> 70 bool::true 

[14:51] <autrijus> nod

[14:51] <autrijus> ok, I got it

[14:51] <autrijus> will fix

[14:51] <autrijus> (conf calling with stevan)

[14:53] <xinming> autrijus: hmm, where do I have to change in my test?

[15:09] <autrijus> mm

[15:12] <ods15> ?eval my $a = 3; $a = $a++;

[15:12] <evalbot_7779> \3 

[15:12] <ods15> ?eval my $a = 3; $a = ++$a;

[15:12] <evalbot_7779> \4 

[15:12] <ods15> ?eval my $a = 3; ++$a = $a;

[15:12] <evalbot_7779> Error: Can't modify constant item: VInt 4 

[15:13] <ods15> ?eval my @a = qw(1 2 3); for (@a) { say pop @a }

[15:13] <evalbot_7779> 3 2 1 undef 

[15:13] <ods15> ?eval my @a = qw(1 2 3); for (@a) { say pop @a }; 1

[15:13] <evalbot_7779> 3 2 1 1 

[15:14] <ods15> ?eval my @a = qw(1 2 3); for (@a) { say "$_ -> ".pop @a }; 1

[15:14] <evalbot_7779> Error:  unexpected "f" expecting ";", statements or end of input reserved word 

[15:14] <ods15> ?eval my @a = qw(1 2 3); for (@a) { say "$_ -> " ~ pop @a }; 1

[15:14] <evalbot_7779> 1 -> 3 2 -> 2 3 -> 1 1 

[15:14] <ods15> ?eval my @a = qw(1 2 3); for (@a) { say ",$_ -> " ~ pop @a }; 1

[15:14] <evalbot_7779> ,1 -> 3 ,2 -> 2 ,3 -> 1 1 

[15:14] <ods15> heh odd

[16:01] <xinming> autrijus: ping

[16:13] <autrijus> xinming: pong

[16:15] <autrijus> stevan++ # very successful design session

[16:15] <autrijus> subethaedit++ skype++ # technology

[16:15] <autrijus> notes committed. questions and feedbacks and sanity checks etc welcome

[16:17] <svnbot6> r7780 | autrijus++ | * Object Space design notes, with Stevan

[16:25] <autrijus> liz6: you got Consolas font? they are amazing

[16:25] <autrijus> can transform one's psyche into the outer space

[16:26] <liz6> interesting...  ;-)

[16:26] <autrijus> (ok, perhaps not that, but still impressive)

[16:31] <stevan> autrijus++ # always enjoyable hacking sessions :)

[16:32] <autrijus> fyi, url:  http://svn.openfoundry.org/pugs/docs/notes/object_space.txt

[16:34] <stevan> I will continue on the core runtime stuff, and read more about YARV/PyPy 

[16:34] <obra> Consolas?

[16:34] * stevan has also dug out his Pickaxe book too

[16:35] <stevan> obra: it is the new MS fixed with font

[16:35] <stevan> for Visual Studio on Longhorn I think

[16:35] <obra> stevan: nicer than andale mono?

[16:35] <obra> . o O { URL? }

[16:35] <stevan> I prefer monaco myself .... but digging up URL from history

[16:36] <stevan> obra: http://blog.bluecog.co.nz/archives/2005/08/01/consolas-font/

[16:37] <obra> Want. ;)

[16:38] <stevan> this is kind of funny too : http://weblogs.asp.net/cazzu/archive/2005/07/27/LonhornPorno.aspx

[16:38] <stevan> "Consolas in spanish is as close as it gets to the "masturbate" verb inflection"

[16:39] * stevan is off to do errands in meatspace, adios &

[16:41] <gaal> autrijus: does Consolas have Unicode goodies?

[16:44] <autrijus> gaal: let me look

[16:45] <autrijus> it's latin cyrrilic greek

[16:45] <autrijus> not comprehensive, not bad for monotype

[16:45] <gaal> I will never leave Courier New it seems :-(

[16:46] <theorbtwo> So it has everything core wants, but not everything Set can use.

[16:46] <theorbtwo> gaal: Fontsets are the answer.

[16:46] <autrijus> gaal: you don't have fallbacks? :)

[16:46] <theorbtwo> BTW, is it possible to do usable Hebrew monospace?

[16:47] <gaal> It'll always be ugly, since some letters really are tiny and narrow. (yod, vav, nun)

[16:48] <gaal> yod and vav in fact look almost identical except for size.

[16:48] <gaal> err, yod and reish that is.

[16:49] <autrijus> dduncan: hey :) we are finally getting to get your modules working For Real

[16:51] <gaal> autrijus + theorbtwo: windows is my desktop environment these days, so not really :(

[16:52] <xinming> Is parenthesis needed in method call within a class?

[16:52] <gaal> not if it has no parameters.

[16:52] <gaal> how's ./ spelled this week?

[16:53] <xinming> ?eval class A { method foo( *@a ){ @a.perl }; method bar( *@a ) { .foo( @a ); }}; my @x=("f","b");A.new.bar( @x );

[16:53] <evalbot_7780> "[\"f\", \"b\"]" 

[16:53] <xinming> ?eval class A { method foo( *@a ){ @a.perl }; method bar( *@a ) { .foo @a ; }}; my @x=("f","b");A.new.bar( @x );

[16:53] <evalbot_7780> Error:  unexpected "@" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or "}" 

[16:54] <gaal> btw, nice paper about namespaces and haskell: http://research.microsoft.com/Users/simonpj/Papers/oo-haskell/overloading_conf.pdf

[16:54] * xinming wishes that parenthesis can be omited if a method is called within class.

[16:59] <autrijus> ooh, more spj paper goodies.

[16:59] <autrijus> xinming: what would this mean

[16:59] <autrijus> .foo 1 + .bar 2

[16:59] <autrijus> if you don't require parens?

[17:00] <gaal> i don't see how this in particular can be used in pugs, but it's great for when you write eg gtk code.

[17:00] <xinming> .foo( 1 + .bar 2)

[17:01] <liz6> or .foo( 1 ) + .bar( 2 ) ?

[17:01] <xinming> first method will take all things as parameters since meet the ';'

[17:02] <rafl_> What's Perl6-ObjectSpace for?

[17:02] <autrijus> I think it's principle of most surprise, either way

[17:02] <autrijus> rafl_: unified runcore of Perl6-* for p5

[17:02] <autrijus> with the metamodel bootstrapping bit reusable among js hs pir etc backends

[17:02] <autrijus> so all backends can finally get same obj semantics

[17:02] <rafl_> autrijus: It superseeds perl5/Perl6-*?

[17:02] <autrijus> which is what 6.28.0 is all about

[17:02] <autrijus> yes.

[17:03] <xinming> This is a bit like `sub foo ($a){...}; sub bar($b) {...}; foo 1 + bar 2 `;

[17:03] <rafl_> autrijus: We'll need a Makefile.PL for it so it gets built with the other perl5 stuff.

[17:03] <autrijus> rafl_: we will, but we'll do that upon release, not now when we are not even sure of the layouts

[17:03] <xinming> what does `foo 1 + bar 2` mean is same as .foo 1 + .bar 2

[17:04] <rafl_> autrijus: OK.

[17:04] <autrijus> xinming: right. that is ergonomics domain; I just note that it looks unfamiliar to me

[17:04] <autrijus> xinming: but if you perceive it as ergonomic, please post to p6l :)

[17:05] <gaal> how does a p5 runcore unify things for js hs pir etc backends?

[17:06] <autrijus> gaal: by separating the metamodel bootstrapping sequence from the underlying Chaos (primitives)

[17:06] <autrijus> gaal: so basically, think of this YARV thing

[17:06] <autrijus> we implement a YARV like VM with p5

[17:06] <autrijus> then spec our metamodel as a set of YARV instruction sets

[17:07] <autrijus> the VM is so minimal that it doesn't handle anything other than prim obj dispatch and opaque storage

[17:07] <gaal> how does PIL figure in this?

[17:07] <autrijus> think of it as "the subset of parrot we need to port to p5 to run p6"

[17:08] <autrijus> PIL is core language

[17:08] <gaal> PIL, not pir

[17:08] <autrijus> the obj space is core runtime, so to speak.

[17:08] <autrijus> core as in "we can add sugar and optimization and shortcut all we want"

[17:09] <autrijus> but if you implement this, we can run p6 on your runtime, although very very slowly

[17:09] <gaal> so: p6 -> PIL -> ..? p5 with objectspace?

[17:09] <autrijus> p6 -> PIL -> p5codegen -> p5objspace

[17:09] <autrijus> p6 -> PIL -> jscodegen -> jsobjspace

[17:09] <autrijus> and p5objspace share with jsobjspace the same metamodel

[17:09] <autrijus> I mean the same code

[17:09] <gaal> oh; okay, so 

[17:09] <gaal> hm, how's that possible?

[17:09] <gaal> they're coded in p5 now

[17:10] <gaal> no? this is a p5 file: http://rt.openfoundry.org/Foundry/Project/Source/index.html/pugs/checkout/perl5/Perl6-ObjectSpace/lib/Perl6/MetaModel/attribute.pm?rev=7779

[17:11] * gaal needs deconfusing.

[17:11] <integral> this is one of those cases where's it's just all layers of indirectionn...

[17:12] <gaal> what is the base runcore written in then?

[17:12] <gaal> p6 too? (ideal, i guess)

[17:12] <autrijus> gaal: that is an empty file ;)

[17:13] <gaal> but then what is the recent commit? just thunks (in the API sense, not the closure sense)?

[17:13] <autrijus> thunks yes

[17:13] <autrijus> gaal: the MM::* will conform to an API not unlike the YARV instruction table

[17:13] <xinming> autrijus: hmm, how man commiters from mainland by the way? Why I ping you just now is because of this question... But forgotten after you responsed. :-/

[17:13] <autrijus> or the PyPy Bytecode cable

[17:13] <xinming> s/man/many/

[17:13] <autrijus> xinming: I don't know, check AUTHORS

[17:13] <autrijus> probably only you

[17:14] <autrijus> s/cable/table/; # freudian

[17:14] <autrijus> gaal: ah, I've read that spj paper. makesense

[17:14] <gaal> so http://www.atdot.net/yarv/insnstbl.html is our inspiration for a pugsy runcore/vm?

[17:15] <xinming> autrijus: I've checked that, But hard to find as some Characters are the same.

[17:15] <autrijus> gaal: only the OO parts not flow

[17:15] <autrijus> gaal: so really just 20~30 opcodes

[17:15] <autrijus> and this is API not really bytecode

[17:15] <autrijus> so they nest, unlike (say) PIR ;)

[17:16] <gaal> pritty pictures would be useful at this point, i think.

[17:16] <autrijus> it's basically a API over Chaos.pm

[17:16] <autrijus> yes. I'll see to that.

[17:16] <gaal> autrijus++ # omni, er, science.

[17:16] <autrijus> ;)

[17:17] <xinming> pugs now can do many things... I just now rewritten a small perl 5 script of mine into perl 6. :-P

[17:17] <gaal> this is instead of doing the OO runcore coupled into the current haskell runcore, yes?

[17:17] <xinming> much smaller in perl 6

[17:18] <gaal> (testing my understanding)

[17:18] <autrijus> gaal: the hs runcore will implement the same api

[17:18] <autrijus> which allows me and stevan work in parallel without dup work

[17:19] <gaal> hmm, but it's not like OO itself (the MM) is written in P6 and then we get runcores for free in all languages? how come?

[17:20] <autrijus> so, the runcore can be written in procedural p6

[17:20] <autrijus> and the runtime just has to support that part and things will Just Work

[17:20] <autrijus> that is still the plan

[17:20] <gaal> uh huh, that's how i was imagining it

[17:20] <autrijus> but if the runtime decides it's too slow

[17:20] <autrijus> as it would be

[17:20] <gaal> :)

[17:20] <autrijus> then the runtime will naturally ask

[17:21] <autrijus> can I reimplement the MM?

[17:21] <autrijus> and they all do

[17:21] <autrijus> but then we get mismatch

[17:21] <autrijus> because the outside API of MM is huge

[17:21] <autrijus> and varies from lang to lang

[17:21] <autrijus> so each bootstraps differently

[17:21] <autrijus> which is good, but would be better if we can say

[17:21] <autrijus> "implement this set of prims fast enough, and you get MM in your language natively"

[17:22] <gaal> gotcha now.

[17:22] <autrijus> so it's like, refactor the JS MM, the P5 MM, the Hs MM, and try to find the midlayer of limited vocab

[17:22] <autrijus> where they all have in common

[17:22] <autrijus> and settle the complexity there

[17:23] <autrijus> this is practical because, well, the upper layer MM keeps changing every week

[17:23] <autrijus> ;)

[17:23] <gaal> :-)

[17:23] <autrijus> so we get same motivation as PIL, only at the OO space.

[17:23] <autrijus> (which is natural seeing we are moving to 6.28.x)

[17:23] <autrijus> so think PIL as the way to constrain the complexity space for the imperative runcore in 6.2.x

[17:24] <autrijus> and ObjSpace doing the same for 6.28.x semantics.

[17:24] <autrijus> I'm sure we can find more abstractions and indirections for grammars, importing from Patrick

[17:26] <gaal> Perl6::Core::Hash demands string keys - is this an oversight or an implementation leakage?

[17:26] <Khisanth> ack!

[17:27] <Khisanth> Setup: waitForProcess: interrupted (Interrupted system call)

[17:28] <gaal> Khisanth, your GHC is loopy? Version?

[17:28] <autrijus> gaal: er what?

[17:28] <autrijus> the Str key is for Opaque

[17:28] <autrijus> look again (and maybe fix the wording)

[17:29] <autrijus> Opaque obj instances are essentially attrs of name=>container slots

[17:29] <autrijus> and name here is fixed Str

[17:32] <gaal> Core::Hash / hash is just a slot dict for objspace objects?

[17:33] <autrijus> oh you are talking about code

[17:33] <autrijus> sorry.

[17:34] <autrijus> thought you were talking about design notes

[17:34] <gaal> oh, i'd better read those :)

[17:34] <autrijus> yeah :) the code is a mess.

[17:34] <autrijus> and subject to lotsa moving.

[17:36] <gaal> url for notes?

[17:36] <autrijus> http://svn.openfoundry.org/pugs/docs/notes/object_space.txt

[17:36] <gaal> ah, found it thanks

[17:37] <autrijus> feel free to edit them and sprinkle with questions and reformat and maim and torture the text

[17:39] <gaal> better than torturing hackers

[17:40] <gaal> however! i need to debug this c beast for $work and get home first :)

[17:42] <autrijus> have... appropriate amount of fun

[17:43] <gaal> appropriate amount of coffee you mean!

[17:43] <gaal> thanks :)   &

[18:02] <r0nny_> re

[18:04] <autrijus> yo

[18:04] <r0nny_> finally found a ssh cappable pc :)

[18:07] <autrijus> excellent :)

[18:08] <Juerd> Blegh, I hate it when people hide behind Anonymous Monk.

[18:09] <Juerd> (And change their HTML writing style accordingly, so you can't even use simple analysis to find out who's behind it... :))

[18:09] * autrijus resists the temptation to suggest Consolas Monk

[18:11] <Juerd> The font? :)

[18:11] <autrijus> yeah. I was using Anonymous

[18:11] <xinming> r0nny_: why not use putty?

[18:11] <Juerd> Ah :)

[18:11] <Juerd> I like Consolas

[18:11] <Juerd> I hate Microsoft for having pretty fonts.

[18:12] <autrijus> eh, isn't that somewhat destructive :)

[18:12] <Juerd> It's the only way I could think of to turn this positive thinking about MS into something negative ;)

[18:15] <luqui> bonjour nothingmuch 

[18:15] <eric256> morning

[18:15] <Juerd> Ah, hi luqui 

[18:15] <Juerd> I was hoping to find you online some time :)

[18:16] <Juerd> luqui: Would it be possible to change evalbot so that it does a /nick, rather than reconnect, on svp updates?

[18:16] <luqui> er...

[18:16] <Juerd> luqui: I don't know about the possibilities of IPC with Pugs

[18:16] <autrijus> sockets?

[18:16] <Juerd> autrijus: Signals or something alike would be easier

[18:16] <luqui> yeah, evalbot would have to talk to a perl 5 IRC interface

[18:17] <r0nny_> xinming: putty makes a pc ssh-cappable

[18:17] <Juerd> luqui: Anyway, if you think it's doable and not too much work, could you please?

[18:17] <eric256> how does it update now?  i was looking at the code the other day an it doesn't seem built to do that. ;)

[18:17] <autrijus> Juerd: we can have them... once Liz gets some cycles, we'll do a design run

[18:17] <Juerd> If it's either not possible or too much work, forget it for now

[18:17] <autrijus> Juerd: it's mostly S17.

[18:17] <Juerd> autrijus: I see

[18:17] <autrijus> or the lack of.

[18:17] <luqui> autrijus, do we have IPCish stuff in pugs?

[18:17] <r0nny_> rafl_: ping?

[18:17] <autrijus> luqui: only sockets and kill

[18:17] <Juerd> luqui: -e $file? :)

[18:18] <Juerd> (MS-DOS age IPC)

[18:18] <luqui> Hmm... I just think it would be nice to run the evalbot IRC interface with the latest version of pugs

[18:18] <autrijus> it would

[18:19] <luqui> but I guess that isn't quite necessary

[18:19] <autrijus> luqui: how's AG coming in wither p5, p6, or pir land?

[18:19] <eric256> it doesn't effect its eval capabilites (or affect...i'll be darned if i can remember which of those to use)

[18:19] <luqui> L::AG 0.07 in perl5 is quite nice nowadays

[18:19] <luqui> and other than that I've been focusing on school

[18:19] <Juerd> luqui: Does it really matter, as long as the ?eval's are executed by the latest?

[18:19] <luqui> but perl6 is my next target

[18:20] <luqui> Juerd, right, probably not

[18:20] <luqui> any particular reason why, other than annoyance?

[18:21] <Juerd> luqui: I'm afraid of k-lines

[18:21] <luqui> ?

[18:21] <Juerd> k-lines are server or ircnet-wide IP-bans

[18:21] <autrijus> luqui: cool, hopefully OO will be robust enough for you to serve as the first victim^Wtest

[18:21] <luqui> ahh

[18:22] <Juerd> I don't know how tolerant freenode is

[18:22] <luqui> okay, that's definitely a valid concern

[18:22] <luqui> considering that it would be banning feather

[18:22] <Juerd> Yes. And that would hurt more than just evalbot, you see.

[18:22] <autrijus> can talk with ops about that no?

[18:22] <Juerd> I do like evalbot, though

[18:22] <autrijus> I mean kline policies

[18:23] <Juerd> autrijus: I've tried, to no avail

[18:23] <Juerd> And freenode lacks well defined rules

[18:23] <autrijus> evalbot used to eval the last version without /nick ing

[18:23] <autrijus> iirc

[18:23] <luqui> yes

[18:23] <eric256> autrijus: still does

[18:23] <luqui> :-p

[18:24] <Juerd> The revision in the nick is useful.

[18:24] <nothingmuch> evening.

[18:24] <Juerd> Especially when pasting the output, or reading a log, later in time

[18:24] <nothingmuch> autrijus + Liz: please publish quick drafts for review

[18:24] <nothingmuch> I am very opinionated on threads but very lacking on time

[18:24] <luqui> so autrijus, what makes io so important?

[18:24] <nothingmuch> and would like to bring up ideas, issues, etc

[18:25] <autrijus> nothingmuch: will do; you on apple and hence SEE reachable?

[18:25] <autrijus> luqui: zero keywords

[18:25] <autrijus> luqui: clean semantics without cruft

[18:25] <eric256> is there any reason S29 is in the regular repo?  i mean why is it on a seperate site? couldn't the author working on it just get a commit bit?

[18:25] <nothingmuch> yes/

[18:25] <autrijus> so you can think of it as Scheme in the OO age

[18:25] <nothingmuch> i'll leave my laptop unsleeping with see  open

[18:26] <luqui> okay, that makes sense

[18:26] <nothingmuch> or the wiki is also good

[18:26] <autrijus> and scheme = important if you are into dirty^Wimpure functional langs

[18:26] <luqui> :-p

[18:26] <nothingmuch> actually even better, since I won't be here tonight and can't contribute

[18:26] <nothingmuch> and wiki is documented for everyone

[18:26] <autrijus> nothingmuch: liz is still fighting with mysql I believe

[18:26] <autrijus> so won't be tonight either way

[18:26] <nothingmuch> okay

[18:26] * nothingmuch never heard of fighting mysql

[18:27] <Juerd> zero keywords

[18:27] * autrijus mumbles something not very positive about mysql3.

[18:27] <Juerd> we can do that!

[18:27] <Juerd> unicode has way more than enough characters ;)

[18:27] <autrijus> Juerd: lol

[18:27] <nothingmuch> APL is *last centuries* line noise... Perl 6 is the future!

[18:27] <Juerd> Sometimes I think that PHP was invented more or less the same way.

[18:28] <nothingmuch> today someone on #perl said 'lolz' every tiime someone made a counterpoint to his pugs trashing

[18:28] <Juerd> "We can do that too!" without sufficiently profound knowledge and wisdom regarding "that".

[18:28] <luqui> ugh

[18:28] <nothingmuch> in the end we got to explaining it all with the phallic aspects of unicorns

[18:28] <nothingmuch> which brings me to something very troubling: http://www.boingboing.net/2005/10/29/nasas_dancing_penis.html

[18:29] <nothingmuch> appearantly this dancing penis has a fetish for feet, and doesn't think that much of hands

[18:29] <Juerd> nothingmuch: ...

[18:29] <nothingmuch> anyway, I have to go sand some shelves

[18:33] <eric256> ...should test files be able to link to other test files?  might make sense to be able to lead a person to the final home for a test.  i think right now we have quite a few duplicate tests.  just a though

[18:34] <eric256> t

[18:39] <svnbot6> r7781 | eric256++ | Fixing existing test-cross references.

[18:40] <autrijus> eric256: I don't see why not.

[18:43] <eric256> once i finish my seemingly unending look for existing but broken links.. ;)  thats getting pretty close to done though i think. then i'll work on reorganizing a little bit ;)

[18:43] <luqui> bbiab

[18:43] <autrijus> eric256++ # Organizer

[18:45] <eric256> not normaly. just want to stay active while i wait for OO and sense i normaly have a hard time finding tests and documentation it seemed like a natural job for me ;)

[18:47] <eric256> there is also a mix of commenting styles driving me mad. lol. pod, kwid and # ;)  /me wonders if anyone is working on a perl6tidy yet. that would be good to apply to most tests too

[18:49] <autrijus> theoretically that is just pugs -CPerl6

[18:50] <eric256> but i want a --style=HTML option so a simple css file colorizes the output. ;) that would be sweet

[18:50] <eric256> -C doesn't have a Perl6 option yet?

[18:53] <Khisanth> gaal: 6.4

[18:53] <autrijus> eric256: hence "theoretically"

[18:54] <autrijus> eric256: actually you want vimhtml

[18:54] <autrijus> with perl6.vim

[18:54] <autrijus> that'd do

[18:54] <autrijus> and Works Today (tm)

[18:55] <eric256> hmm. i'll have to look at that. i was thinking it would be nice with the tests.pugscode.org html...i wonder if i'm the only one using that? 

[18:55] <Khisanth> gaal: http://sial.org/pbot/14013 the config.yml

[18:55] <autrijus> I do look at that.

[18:55] <autrijus> it is nice.

[18:56] <eric256> getting there. and whoever does the smoke server linked to it so you can click failed tests there and see them! and hopefully a link to the SA or E that explains why the test should pass. ;) 

[18:56] <eric256> i wonder if documenting broken/todo tests would be the next step, they are the ones that would probably need links to documents the most

[18:56] <autrijus> iblech is the smoke server guy... though code is in utils/smokeserv/

[18:56] <autrijus> right

[18:57] <autrijus> and it's probably a matter of modifying the smoke html matrix

[18:57] <eric256> yea he already did. ;)

[18:57] <autrijus> sigh I'm so out of touch ;)

[19:13] <luqui> can anyone recommend a good cross-platform network library for c++?

[19:14] <theorbtwo> eric256: Make a hitlist of erroring tests without links to documentation nearby in random order?

[19:19] <eric256> theorbtwo..yea that might work. or just list the broken tests with links to them, most don't have any documentation to speek of ;)

[19:23] <theorbtwo> That's another idea.

[19:23] <theorbtwo> I'm off to the pub.

[19:24] <autrijus> luqui: NSPR?

[19:24] <svnbot6> r7782 | eric256++ | Still fixing cross reference links. :)

[19:24] <eric256> later all. /me needs to not stare at tests for a while ;)

[19:24] <autrijus> ciao :)

[19:24] * autrijus dinnereth &

[19:59] <gaal> Khisanth: try 6.4.1

[20:06] <Khisanth> hrm what does ghc do with opengl?

[20:07] <integral> it includes an OpenGL binding...

[20:16] <geoffb> <wearily> Hi all . . .

[21:40] <wilx> ilogger?

[21:45] <wilx> :)

[22:16] <eric256> iblech++ .. just noticed he was helping with L<> links ;)

[22:20] <rafl_> r0nny_: What?

[22:25] <r0nny_> re

[22:26] <r0nny_> rafl_: do u have p4 access atm - i need to know the co cmd line

[22:26] <rafl_> r0nny_: I've never used perforce directly. svk has a p4 backend.

[22:27] <r0nny_> hmm

[22:27] <rafl_> r0nny_: kane uses p4 himself. You should ask him how to use it or get some docs.

[22:27] <r0nny_> he told, there was no access

[22:30] <rafl_> There is public access.

[22:30] <rafl_> At least for reading.

[22:33] <r0nny_> im foing to try svk access

[22:33] <r0nny_> -f+g

[22:37] <svnbot6> r7783 | eric256++ | perl.t - working on de loopifiying. ;)

[22:40] <eric256> anyone know how to force svk to update my local copy with the newest remote copies?

[22:41] <rafl_> eric256: pull?

[22:42] <rafl_> Or do you have local changes that should be overwritten?

[22:42] <eric256> not working.  i mean it updated some files. but one file in particular will just not update

[22:42] <svnbot6> r7784 | eric256++ | Checking in a new template. Test-Catalog

[22:42] <eric256> local changes that need over written

[22:42] <eric256> actualy deleted the file localy and need to re-get it

[22:42] <rafl_> svk revert -R .; svk pull

[22:42] * eric256 tries that...thanks

[22:43] <eric256> it worked!!! what joy

[22:43] <eric256> thanks

[22:47] <rafl_> np.

[22:47] <svnbot6> r7785 | iblech++ | * Usual svn props.

[22:47] <svnbot6> r7785 | iblech++ | * util/catalog_tmpl/directory.tmpl: Oops, swapped the colors of todo/failed

[22:47] <svnbot6> r7785 | iblech++ |   test nums, fixed.

[23:28] <autrijus> yo.

[23:28] <svnbot6> r7786 | eric256++ | Finaly finished looking at all tests.  Anything that looks like a link is now parsed correctly and cataloged. Now to make sure they all actualy point somewhere. 

[23:29] <autrijus> liz++ # S17 beginning to take shape

[23:36] <amos> hmm. lib/pugs/hack.pod says "grammer" instead of grammar, and docs/src/Junc.* say list instead of pair at some point

[23:41] <autrijus> amos: you have a committer bit?

[23:41] <autrijus> if not, email please

[23:42] <autrijus> (email address, that is)

[23:48] *** amos is now known as azuroth

[23:48] <azuroth> no, I don't

[23:49] <azuroth> [email@hidden.address]
[23:52] <autrijus> welcome aboard :)

[23:52] <autrijus> please fix away

[23:52] <azuroth> cool ^_^

[23:52] <autrijus> don't forget adding your self to AUTHORS :)

[23:53] <azuroth> I'm just learning haskell now, but hopefully I can get used to it soon

[23:54] <autrijus> woot

[23:56] <dduncan> a darwin smoke of 7782 is now up

[23:57] <clkao> *yawn*

[23:58] <dduncan> lots of objectspace and test updates before that ... and after

