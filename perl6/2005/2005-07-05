[00:00] <mugwump> (but with Set::, etc ;))

[00:14] <svnbot6> r5222, autarch++ | make Date.now alias work

[00:40] <mugwump> autarch: we will be needing to differentiate our modules via a namespace.  our opposing views seem to be;

[00:41] <mugwump> 1. the shorter namespaces should be used for the most used pieces

[00:41] <mugwump> vs

[00:41] <mugwump> 2. the shorter namespaces should be used for the simpler concepts

[00:42] <mugwump> would you agree with that?

[00:46] <mugwump> (btw, by namespace, I mean the third part of the module name, as in http://dev.perl.org/perl6/doc/design/syn/S11.html#Versioning

[05:06] <svnbot6> r5223, autarch++ | some docs

[06:13] <Aankhen``> Darren_Duncan++ # DBI v2 discussion

[06:18] <mugwump> Darren_Duncan++ # "accomodate such abhorrent computer programming practices"

[06:19] <Aankhen``> Heh.

[06:19] <Darren_Duncan> hello

[06:19] <Aankhen``> Hiya.

[06:20] <Darren_Duncan> you said my name, so Colloquy alerted me to come here

[06:20] <Aankhen``> Colloquy?

[06:20] <Darren_Duncan> my IRC client for Mac OS X

[06:20] <Aankhen``> Ah.

[06:21] <Darren_Duncan> while being fully GUI, its open source too

[06:21] * mugwump ducks off to www.chansmartialarts.com &

[06:21] <Darren_Duncan> not that I've bothered to take advantage of that, I did give the developer some money

[06:22] <Aankhen``> ?eval gmtime

[06:22] <evalbot6> Error: No compatible subroutine found: "&gmtime" 

[06:22] <Darren_Duncan> doeth

[06:24] <gaal> Aankhen``: working on it

[06:24] <gaal> good morning btw

[06:24] <Aankhen``> Good morning. :-D

[06:25] <Aankhen``> Very good morning. :-D

[06:31] <Aankhen``> ?eval unless (0) { "foo" }

[06:31] <svnbot6> r5224, Aankhen++ | * added HTTP::Date (stubs only!).

[06:31] <svnbot6> r5225, Aankhen++ | * HTTP::Headers needed `use v6;`.

[06:31] <evalbot6> 'foo' 

[06:32] <masak> morning

[06:34] <Aankhen``> Morning.

[06:34] <Aankhen``> ?eval if 1 { "foo" }

[06:34] <evalbot6> 'foo' 

[06:39] *** shachaf_ is now known as Shachaf

[06:41] <Aankhen``> ?eval my @foo = <bar 1 baz 3 quux 2>; my %foo = @foo.map:{ .uc => 1 }; %foo

[06:41] <evalbot6> Error: cannot cast from VList [VList [VStr "PERL6",VInt 1]] to Pugs.AST.Internals.VCode (VCode) 

[06:41] <Aankhen``> ?eval my @foo = <bar 1 baz 3 quux 2>; my %foo = @foo.map:{ (.uc => 1) }; %foo

[06:41] <evalbot6> Error: cannot cast from VList [VList [VStr "PERL6",VInt 1]] to Pugs.AST.Internals.VCode (VCode) 

[06:44] <theorbtw1> Interesting; it thinks that @foo is the code.

[06:44] <svnbot6> r5226, Aankhen++ | * made HTTP::Headers compile.

[06:44] <svnbot6> r5226, Aankhen++ | * HTTP::Headers -- went back to `our @header_order`, et al.

[06:44] <theorbtw1> ?eval my @foo = <bar 1 baz 3 quux 2>; my %foo = { (.uc => 1) }.map @foo; %foo

[06:44] <evalbot6> Error:  unexpected "@" expecting operator, ";" or end of input 

[06:44] <theorbtw1> ?eval my @foo = <bar 1 baz 3 quux 2>; my %foo = { (.uc => 1) }.map(@foo); %foo

[06:44] <evalbot6> Error: cannot cast from VList [VStr "bar",VStr "1",VStr "baz",VStr "3",VStr "quux",VStr "2"] to Pugs.AST.Internals.VCode (VCode) 

[07:28] <Aankhen``> ?eval class Foo { method bar (::?CLASS $stuff) { $stuff } } Foo.new.bar

[07:28] <evalbot6> Error:  unexpected ":" expecting formal parameter, end of input or ")" 

[07:29] <svnbot6> r5227, Aankhen++ | * HTTP::Headers: couple of workarounds to remove errors.

[07:29] <svnbot6> r5228, Aankhen++ | * HTTP::Status: fixed `lc` -> `uc`.

[07:34] <nothingmuch> hola

[07:36] <Aankhen``> iblechbot >> I thought you were able to get ::?CLASS and ::?ROLE to parse?

[07:36] <Aankhen``> D'oh

[07:36] <Aankhen``> .

[07:47] <svnbot6> r5229, Aankhen++ | * HTTP::Request need only `require` HTTP::Message.

[07:47] <svnbot6> r5230, Aankhen++ | * HTTP::Headers: commented out all references to MIME::Base64.

[07:47] <svnbot6> r5231, qtplatypus++ | More work on self hosting grammar.  However this will go on hold

[07:47] <svnbot6> r5231, qtplatypus++ | untill PGE is more mature.  The PGE doesn't handle :w and on my

[07:47] <svnbot6> r5231, qtplatypus++ | computer PGE buss errors on more complex grammars.

[07:52] <Aankhen``> Buss errors?

[07:52] <svnbot6> r5232, Aankhen++ | * HTTP::Message now compiles.

[08:39] <masak> Aankhen``: according to dictionary.com, a "buss" is a kiss, which I can understand would be a problem in complex grammars :P

[08:39] <Aankhen``> Heh.

[08:40] <nothingmuch> i beg to differ

[08:40] <nothingmuch> kisses are very universal tokens

[08:40] <nothingmuch> they work as expected in both the sexual and parental contexts, under almost all platforms

[08:40] <nothingmuch> regardless of language

[08:41] <nothingmuch> masak: how is your monadish business coming along?

[08:41] <masak> nothingmuch: i haven't read anything since yesterday

[08:42] <masak> but kudos to you for writing the tutorial, it really helps

[08:42] <gaal> you know what e e cummings said...

[08:42] <gaal> "kisses are a better fate than wisdom"

[08:42] <masak> (except for 06.kwid which is a nightmare)

[08:43] <masak> (in a good way, of course)

[08:43] <Aankhen``> Oh, I thought it might be something along the lines of "One McChicken burger, no cheese".

[08:43] <gaal> i can't quite picture him saying that, A :-)

[08:43] <Aankhen``> :-P

[08:43] <masak> gaal: kisses, wisdom... can't i have both?

[08:44] <gaal> it made sense in the context when he said it.

[08:45] <masak> usually does

[08:46] <gaal> i find myseif using a pattern, and i wonder if it can be reused by others:

[08:46] <gaal> the Prelude often constructs an object from an array

[08:46] <gaal> say you have class Time { has $.year; has $.month; has $.day }

[08:47] <gaal> and an internals command called localtime that returns @tm = <2005 7 5>

[08:47] <gaal> so my facade returns

[08:48] <gaal> Time::Local.new( year => 2005, month => 7, day => 5 )

[08:48] <gaal> (this is simplified of courtse)

[08:48] *** whitay_ is now known as whitay

[08:48] <gaal> now if there were a standard way to say

[08:48] <gaal> @ids = <year month day>

[08:48] <gaal> i could return

[08:49] <gaal> Time::Local.new ( map { ; @ids[$_] => @dat[ $_ ] ;} 0 .. @ids.end )

[08:49] <gaal> except without the explicit map

[08:49] <gaal> :-)

[08:49] <gaal> (btw the semicolons are just there for paranoia)

[08:49] <gaal> and i meant s/dat/tm/ there

[08:50] <gaal> so this works, but it's a common idiom that doesn't *look* pretty: therefore, i propose a builtin to do it

[08:50] <masak> gaal: so what you would like is a construct of some kind instead of the explicit map?

[08:51] <masak> why not use zip in some way?

[08:51] <masak> or reduce [=>] ?

[08:51] <gaal> zip! that works.

[08:51] <masak> :)

[08:52] * masak likes zip

[08:52] <gaal> i don't know why, but [=>] doesn't work

[08:53] <gaal> ah i think i do know

[08:53] <gaal> i don't want year => 2005 => month => 7

[08:53] <masak> i don't think that is what [=>] gives you

[08:53] <gaal> zip however isn't enough

[08:54] <gaal> masak: in pugs it just gives the first elem, dunno if that's correct

[08:54] <gaal> i need to coerce the list into a hash, no?

[08:54] <masak> are we talking about zip?

[08:55] <masak> i think it takes two lists and returns a hash

[08:55] <gaal> we're talking about using the result of zip as the input to new

[08:55] <masak> yes

[08:55] <gaal> new( year => 2005, month => 7)

[08:55] <gaal> do i need a pairs construcor? is there one?

[08:56] <gaal> ah, there is indeed.

[08:56] <gaal> let's see if pugs has it

[08:56] <masak> seems like zip returns a list.... hm

[08:56] <gaal> yes!

[08:57] <gaal> so i need pairs zip @ids, @tm

[08:57] <gaal> cool :)

[08:57] <masak> yes, that should work :)

[08:57] * gaal <<3 p6

[08:58] <masak> perl6 is spookily convenient

[08:59] <gaal> pugs is spookily "already implemented"

[08:59] <masak> "accidentally implemented" :)

[09:00] * f0rth_ is reading http://channel9.msdn.com/wiki/default.aspx/Channel9.MSHQuickStart

[09:06] * Aankhen`` goink out.

[09:06] <Aankhen``> BBL. &

[09:28] <gaal> ?eval class Foo has $.x; has $.y; sub mkFoo { my @ids = <x y>; my @vals = <1 2>; return Foo.new(pairs zip @ids, @vals) } mkFoo.perl

[09:28] <evalbot6> Error:  unexpected "p" expecting block construct, term, ":", term postfix, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[09:29] <gaal> that's not quite the error i've been getting :-)

[09:29] <gaal> ?eval class Foo has $.x; has $.y; sub mkFoo { my @ids = <x y>; my @vals = <1 2>; return Foo.new(pairs zip @ids, @vals) } mkFoo().perl

[09:29] <evalbot6> Error: Can't use positionals in default new constructor 

[09:30] <gaal> there. the problem is that new is getting confused. however, sadly this doesn't work either:

[09:30] <gaal> ?eval class Foo has $.x; has $.y; sub mkFoo { my @ids = <x y>; my @vals = <1 2>; my %temp = pairs zip @ids, @vals; Foo.new( %temp ) } mkFoo().perl

[09:30] <evalbot6> Error: Can't use positionals in default new constructor 

[09:31] <gaal> so new needs some fixin'.

[09:32] <gaal> also: is it a known bug that class variables don't work?

[09:33] <gaal> class Foo; my $bar; sub get_bar { $bar }

[09:33] <gaal> ?eval class Foo; my $bar; sub get_bar { $bar }

[09:33] <evalbot6> undef 

[09:34] <gaal> class Foo; my $bar = 8; sub get_bar { $bar } get_bar()

[09:34] <gaal> grrrr

[09:34] <gaal> ?eval class Foo; my $bar = 8; sub get_bar { $bar } get_bar()

[09:34] <evalbot6> \8 

[09:34] <gaal> !?

[09:34] <gaal> this didn't workforme, honest :)

[09:35] <gaal> ?eval class Foo; my @bar = <8 9>; sub get_bar { @bar } get_bar()

[09:35] <evalbot6> ['8', '9'] 

[09:35] <gaal> hmmmm

[09:58] <castaway_> why are those refs?

[09:59] <gaal> i don't rightly know, but autrijus once assured me that's correct. :-)

[10:00] <gaal> something about how it's a container, but context still confuses me in p6.

[10:02] <castaway_> umm, ok

[10:02] <castaway_> looks odd from here ,)

[10:09] <nothingmuch> =D

[10:09] <nothingmuch> perl -e 'no UNIVERSAL::isa';

[10:09] <nothingmuch> that works =)

[10:10] *** _meppl_ is now known as meppl

[10:10] <gaal> why is clocksPerSecond = 1000000 in Compat? that's way off

[10:10] <gaal> the correct value is *square* that.

[10:11] <gaal> ...why's it in Compat anyway?

[10:12] <gaal> ugh! time and time uses it incorrectly :-(

[10:13] <gaal> it should always use 10^12

[10:13] <broquaint> What version, nothingmuch? It doesn't work here ...

[10:13] <gaal> oh wait no, it squares it

[10:13] <gaal> why would it do that?

[10:16] <gaal> what's the spec for 'is copy' on optional args?

[10:17] <gaal> that don't have defaults?

[10:17] <gaal> ?eval sub demo(Int ?$arg is copy) { $arg = 4 } demo()

[10:17] <evalbot6> \4 

[10:18] <gaal> wtf? this throws an error on my box

[10:18] <gaal> ?eval $?PUGS_VERSION

[10:18] <evalbot6> \'Perl6 User\'s Golfing System, version 6.2.7, June 13, 2005 (r5232)' 

[10:19] <gaal> hmm, no it doesn't; but equivalent-looking code in prelude does.

[12:13] <svnbot6> r5233, gaal++ | localtime builtin. Needs speccing. two TODOs:

[12:13] <svnbot6> r5233, gaal++ | 1. localtime() fails loudly. use localtime(time) for now.

[12:13] <svnbot6> r5233, gaal++ | 2. scalar localtime doesn't work yet; we need to work out context better.

[12:24] <Aankhen``> gaal >> You're not working on precompiling Prelude?

[12:24] <gaal> it already is precompiled, but pugscc isn't complete (need autrijus for that) so that's disabled for now.

[12:25] <Aankhen``> Ah, okay.

[12:26] <gaal> nice bughunting task: see why localtime() crashes while similar code outside prelude doesn't.

[12:26] <Aankhen``> In a minute.

[12:26] <Aankhen``> Rebuilding Pugs.

[12:27] <gaal> i didn't mean i was assigning this to you :) though if you want to pick it up, go for it! :)

[12:27] <Aankhen``> I know you didn't, but I've got some time. :-)

[12:27] <gaal> Aankhen``++

[12:27] <Aankhen``> Shh!

[12:27] <Aankhen``> Only after I do it!

[12:28] <gaal> async { sleep $n ; Aankhen``++ }

[12:28] <Aankhen``> Heh.

[12:32] <Aankhen``> Um... where is Prelude?

[12:33] <gaal> src/perl6/Prelude.pm

[12:33] <Aankhen``> Ah, right.

[12:33] <gaal> this whole time issue needs more speckwork.

[12:36] <Aankhen``> *** Can't modify constant item: VUndef

[12:36] <Aankhen``>     at <prelude> line 159, column 13-42

[12:36] <gaal> ah! /me is happy to find that autarch is the maintainer of p5's Time::Local

[12:37] <Aankhen``> That's the error you're getting?

[12:37] <gaal> yes.

[12:37] <gaal> backlog a little bit, and you'll see i don't get the same error for similar code in regular circumstances

[12:42] <kungfuftr> castaway_: about?

[12:43] <castaway_> yup

[12:52] <Aankhen``> ?eval 10^12

[12:52] <evalbot6> 10 

[12:52] <gaal> oops

[12:52] <Aankhen``> ?eval 10^^12

[12:52] <evalbot6> bool::false 

[12:52] <Aankhen``> ?eval 10**12

[12:52] <evalbot6> 1000000000000 

[12:52] <gaal> nice catch

[12:52] <Aankhen``> :-)

[12:53] * Aankhen`` is checking to see if it works now.

[12:53] <Aankhen``> Hmm.

[12:53] <Aankhen``> Now the line has moved.

[12:53] <Aankhen``> Oh, no, that's just my debugging.

[12:53] <gaal> fixed r5234

[12:53] <svnbot6> r5234, gaal++ | 10^12 => 10**12, Aankhen``++10^12 => 10**12, Aankhen``++10^12 => 10**12, Aankhen``++10^12 => 10**12, Aankhen``++10^12 => 10**12, Aankhen``++10^12 => 10**12, Aankhen``++10^12 => 10**12, Aankhen``++10^12 => 10**12, Aankhen``++10^12 => 10**12, Aankhen``++10^12 => 10**12, Aankhen``++

[12:54] <gaal> errr

[12:54] * Aankhen`` stares at gaal.

[12:54] <gaal> i didn't say that

[12:54] <gaal> really i didn't

[12:55] <gaal> must have hit '10' in vi before editing, and ESC:wq quickly.

[12:55] <Aankhen``> Aankhen``-- Aankhen``-- Aankhen``-- Aankhen``-- Aankhen``-- Aankhen``-- Aankhen``-- Aankhen``-- Aankhen``--

[12:55] <gaal> but that's not the souirce of the problem, anyway

[12:55] <gaal> lol

[12:55] <gaal> i mean it was certainly a bug

[12:55] <Aankhen``> Yeh, I'm still working on it.

[12:56] <gaal> right, i'm p6-ling.

[12:56] <gaal> Aankhen``++ :)

[12:57] <Aankhen``> ?eval sub demo (Int ?$foo = 5 is copy, Int ?$bar = 10 is copy) { $bar += $foo; }; demo(10, 10);

[12:57] <evalbot6> Error: Can't modify constant item: VInt 10 

[12:58] <Aankhen``> `is copy` is being interpreted as `is rw` there?

[12:58] <Aankhen``> ?eval sub demo (Int ?$foo = 5 is copy, Int ?$bar = 10 is copy) { $foo += 5; }; demo(10, 10);

[12:58] <evalbot6> Error: Can't modify constant item: VInt 10 

[12:58] <Aankhen``> ?eval sub demo (Int ?$foo = 5 is copy, Int ?$bar = 10 is copy) { $foo += 5; }; my ($foo, $bar) = (10, 15); demo($foo, $bar);

[12:58] <evalbot6> Error: Can't modify constant item: VRef <Scalar> 

[12:58] <Aankhen``> ?eval sub demo (Int ?$foo is copy, Int ?$bar is copy) { $foo += 5; }; my ($foo, $bar) = (10, 15); demo($foo, $bar);

[12:58] <evalbot6> \15 

[12:59] <Aankhen``> Wha?

[12:59] <Aankhen``> ?eval sub demo (Int ?$foo is copy, Int ?$bar is copy) { $foo += 5; }; my ($foo, $bar) = (10, 15); demo(foo => $foo, bar => $bar);

[12:59] <evalbot6> \15 

[12:59] <Aankhen``> ?eval sub demo (Int ?$foo = 10 is copy, Int ?$bar = 10 is copy) { $foo += 5; }; my ($foo, $bar) = (10, 15); demo(foo => $foo, bar => $bar);

[12:59] <evalbot6> Error: Can't modify constant item: VRef <Scalar> 

[12:59] <Aankhen``> Pugsbug?

[13:00] <Aankhen``> ?eval sub demo (Int ?$foo = 10 is copy, Int ?$bar = 10 is copy) { ($foo, $bar); }; my ($foo, $bar) = (10, 15); demo(foo => $foo, bar => $bar);

[13:00] <evalbot6> (\10, \15) 

[13:00] <gaal> I think so! add it?

[13:00] <Aankhen``> OK.

[13:00] <gaal> $n has passed.

[13:01] <Aankhen``> ?eval sub demo (?$foo = 10 is copy, ?$bar = 10 is copy) { ($foo, $bar); }; my ($foo, $bar) = (10, 15); demo(foo => $foo, bar => $bar);

[13:01] <evalbot6> (\10, \15) 

[13:07] <Aankhen``> Committed bug test.

[13:07] <svnbot6> r5235, Aankhen++ | * added bug test: `is copy` ne `is rw`.

[13:07] <Aankhen``> Please take a look at it in case I missed something.

[13:07] <Aankhen``> BBL. &

[13:07] <gaal> thanks!

[13:18] <gaal> do stringification methods work? what's the syntax? method ~ ?

[13:20] <gaal> method ~ is not it.

[13:22] <mugwump> prefix:<~> I've seen

[13:23] <gaal> ?eval class Foo; method prefix:<~> { "mmmm!" } ~Foo.new

[13:23] <evalbot6> Error: Wrong number of invocant parameters: 0 actual, 1 expected 

[13:24] <gaal> ?eval class Foo; method prefix:<~> (:) { "mmmm!" } my $x = Foo.new; "$x"

[13:24] <evalbot6> '<obj:Foo>' 

[13:24] <gaal> ?eval class Foo; method prefix:<~> () { "mmmm!" } my $x = Foo.new; "$x"

[13:24] <evalbot6> '<obj:Foo>' 

[13:24] <gaal> oh well.

[13:29] <QtPlatypus> Was the whole precompiile Prelude thing rejected?

[13:29] <gaal> oh, no, it just needs some fixes in the compiler.

[13:39] <svnbot6> r5236, gaal++ | localtime() works, as does localtime(3.14).

[13:52] * QtPlatypus reads S29 "How likely is this to be?"

[13:52] <svnbot6> r5237, Stevan++ | Perl6-MetaModel : removed the add_class_attribute and cleaned up accessor generation; removed the MethodTable object (I didnt need it)

[13:52] <gaal> what do you mean, Qt?

[13:53] <QtPlatypus> The uglyness of the names.

[13:53] <gaal> there's plenty of work on the draft 239, but it's slowly being done

[13:53] <gaal> you mean class names? they're exported by default

[13:53] <QtPlatypus> Arh ok.

[13:53] <gaal> s/they're/builtins/

[13:56] <QtPlatypus> Its just the line "Not all functions are guaranteed to be imported into the global package"

[13:56] <QtPlatypus> threw me

[13:56] <gaal> i think that refers to things like reset

[13:56] <gaal> that nobody wants except for p5 compat

[13:56] <QtPlatypus> or dump

[13:57] <gaal> heh.

[14:02] <QtPlatypus> Should reduce's definition should be changed so to makes use of identy defaults?

[14:02] <gaal> was there a last word on that thread?

[14:03] <QtPlatypus> I think it was one of thouse threads that never end

[14:03] <gaal> me too.

[14:05] <QtPlatypus> But I know that larry blessed identy defaults for [...] and was wondering about its use in >>...<< 

[14:41] <Limbic_Region> seen autrijus

[14:41] <jabbot> Limbic_Region: autrijus was seen 1 days 10 hours 50 minutes 44 seconds ago

[14:41] <Limbic_Region> hmm

[14:41] <Limbic_Region> I am playing hookie today and have time to debug why Prelude.hs fails to compile on my home Win32 machine

[14:42] <gaal> worksforme, L~R

[14:42] <gaal> make clean?

[14:42] <gaal> bbiab &

[14:43] <Limbic_Region> gaal - try an entire clean partition starting from scratch

[14:43] <Limbic_Region> and it only appears to be b0rk on home machine

[15:01] <Limbic_Region> interesting to note - making unoptimized blows up at a different point

[15:01] <Limbic_Region> Compiling Data.Yaml.Syck   ( src/Data/Yaml/Syck.hs, src/Data/Yaml/Syck.o )

[15:39] <Aankhen``> gaal >> prefix:<~> defines what happens when the ~ operator is used; I believe what you're looking for is something like this: multi sub *coerce:<as> (Foo $self, Str ::to) { "mmmm!" }

[15:52] <gaal> rehi

[15:53] <gaal> Aankhen``, i don't understand your signature: why the Str::to?

[15:53] <Aankhen``> Well, AFAICT, the second parameter is the class which is being coerced to.

[15:54] <Aankhen``> In this case, you're handling Str, or any derivative of it.

[15:54] <gaal> oh, i wasn't paying attention. hmm, need to reread on coercions.

[15:54] <gaal> they don't work yet, do they? in pugs that is

[15:55] <Aankhen``> Not that I know of.

[15:55] <Aankhen``> The sub is parsed, but not used.

[15:55] <gaal> ok

[16:02] <gaal> L~R, are you getting 'not in scope' errors on PreludePC?

[16:03] <gaal> i've started getting them also, but they were just warnings before i took a break.

[16:03] <Limbic_Region> no gaal

[16:04] <Limbic_Region> this has been going on for a long time now

[16:04] <gaal> what's the error then?

[16:04] <Limbic_Region> blow up compiling Prelude.hs (with optimized build)

[16:04] <gaal> is there an error message?

[16:04] <Limbic_Region> and blow up compiling Data.Yaml.Syck ( with unoptimized build)

[16:05] <Limbic_Region> NMAKE :  U1077:

[16:05] * Limbic_Region will do the optimized build again to see if it is different, but I don't think so

[16:07] <gaal> syck is no different in unoptimized.

[16:07] <Limbic_Region> gaal - now that's interested

[16:07] <pasteling> "iblech" at 80.81.16.68 pasted "Hm... OO question" (32 lines, 1.1K) at http://sial.org/pbot/11540

[16:07] <Limbic_Region> err interesting even

[16:07] <Limbic_Region> I can't properly make clean

[16:07] <Limbic_Region> it complains about a line being too long

[16:07] <gaal> rm -rf * and svn co again?

[16:07] <Limbic_Region> so I will wipe out and start from scratch

[16:07] <Limbic_Region> yeah

[16:08] <Aankhen``> Limbic_Region >> You need a newer version of NMAKE.

[16:08] <Aankhen``> Are you using 1.5-something?

[16:08] <Limbic_Region> Aankhen`` - I am using the latest one provided by MS

[16:08] <Limbic_Region> but I can verify it isn't a path issue though

[16:08] <Aankhen``> Could you show me the prolog it spits out?

[16:10] <Limbic_Region> it doesn't spit out any prolog that I know of

[16:10] <Limbic_Region> if that was directed to me

[16:10] <Aankhen``> It ought to say "Microsoft (R) Program Maintenance Utility Version Blah Blah"...

[16:10] <Limbic_Region> heh

[16:11] <Limbic_Region> prolog != programming language in this context

[16:11] <Limbic_Region> 1.50

[16:11] <Aankhen``> Yep.

[16:11] <Aankhen``> Right.

[16:11] <Aankhen``> That's the latest one?

[16:11] <Limbic_Region> I am checking now

[16:11] <Aankhen``> Microsoft (R) Program Maintenance Utility Version 7.10.3077

[16:11] <Aankhen``> Copyright (C) Microsoft Corporation.  All rights reserved.

[16:11] <Limbic_Region> think that came with a compiler

[16:11] <gaal> no, i have 7.

[16:12] <Limbic_Region> where do you get it?

[16:12] <Aankhen``> Older versions of nmake can't handle long command lines.

[16:12] <Aankhen``> I believe you can download the VC++ 2003 toolkit or something like that.

[16:12] <Aankhen``> I got mine with VS.NET 2003.

[16:12] <Limbic_Region> right

[16:12] <gaal> yes. see the README.win32 file in a perl5 tarball.

[16:12] <Limbic_Region> that's the point

[16:13] <Limbic_Region> I believe unless you download a larger application

[16:13] <Limbic_Region> the latest you can get of just nmake is 1.5 something

[16:13] <Aankhen``> Yes, if you download the standalone version, that's the latest one.

[16:15] <Limbic_Region> ok - so that's an interesting side point

[16:15] <Limbic_Region> but not relavent to the problem at hand

[16:15] <Limbic_Region> since I can use the 1.5 version at work and have it compile just fine

[16:15] <Limbic_Region> just started optimized build

[16:16] <Aankhen``> Dinner. &

[16:16] <gaal> different subversion maybe?

[16:16] <Limbic_Region> NMAKE : fatal error U1077: 'C:\WINNT\system32\cmd.exe' : return code '0x1'

[16:17] <Limbic_Region> gaal - I have verified that the downloaded file is the same both at home and work

[16:17] <gaal> hmm. sorry, no clues then.

[16:18] <Limbic_Region> in fact - what is the md5sum of your src/Pugs/CodeGen/PIR/Prelude.hs on Win32 ?

[16:19] <gaal> 4ccb5e280a7b67529ebcfa3c297eabd0

[16:20] <Limbic_Region> 4ccb5e280a7b67529ebcfa3c297eabd0 *Prelude.hs

[16:20] <Limbic_Region> yep - same file

[16:21] <cognominal_> ?eval  (1|2)<<.say

[16:21] <evalbot6> Error:  unexpected "<" expecting term postfix, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[16:21] <Limbic_Region> the only difference that I know of between work and home is WinXP Pro vs Win2K

[16:21] <cognominal_> I thougt << was a fallback for the opening french quote

[16:22] <iblech> ?eval (1|2)>>.say

[16:22] <evalbot6> Error:  unexpected ">" expecting term postfix, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[16:23] <gaal> cognominal, it's also the hyperop.

[16:23] <cognominal_> ho, I got them backward, but that does not change anything

[16:23] <gaal> ?eval (1,2,3) >>+ 1

[16:23] <evalbot6> Error:  unexpected ">" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[16:23] <gaal> hmmm. that used to work.

[16:23] <iblech> ?eval (1,2,3) »+ 1

[16:23] <evalbot6> Error:  unexpected "\\" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[16:23] <gaal> ?eval (1,2) >>+<< (5,6)

[16:23] <evalbot6> (6, 8) 

[16:24] <gaal> at least that still does.

[16:24] <svnbot6> r5238, gaal++ | update localtime sig according to lwall's decree.

[16:24] <cognominal_> oukaze? :)

[16:25] <cognominal_> that would be ukase in English

[16:26] <gaal> exactly. :)

[16:27] <cognominal_> you tried to Rat on him... :)

[16:27] <gaal> what he disliked wasn't the Rat, it was the double Int.

[16:33] <coral> ?eval &localtime

[16:33] <evalbot6> \sub {...} 

[16:33] <coral> neat

[16:39] *** Limbic_Region_ is now known as Limbic_Region

[16:39] <Limbic_Region> Aankhen`` fwiw - Microsoft Visual C++ Toolkit 2003 does NOT come with a copy of nmake.exe

[16:40] <gaal> L~R, one of the supporting kits does then.

[16:40] <gaal> .NET platform SDK or whatever they call it

[16:40] <Aankhen``> Wha?

[16:40] <Aankhen``> I coulda sworn it does. :-\

[16:40] <Limbic_Region> I think it was an oversite

[16:40] <Aankhen``> I'm really sorry if I wasted your time...

[16:40] <Limbic_Region> I read an msdn blog article after I installed it

[16:40] <Limbic_Region> and the .NET framework

[16:41] <Limbic_Region> and told it no - it wasn't allowed to contact the internet

[16:41] <Limbic_Region> no worries

[16:41] <Limbic_Region> so now I am back to square 1

[16:41] <cognominal_> ?eval my @a=777; my $a=666;  say << 1 @a $a >>

[16:41] <evalbot6> Error: No compatible subroutine found: "&say" 

[16:41] <Aankhen``> Did you get the .NET SDK?

[16:41] <Limbic_Region> a Prelude.hs that refuses to compile for no apparent reason

[16:41] <gaal> L~R, want mine?

[16:41] <Limbic_Region> Aankhen`` - no 

[16:41] <Limbic_Region> gaal - that would be great

[16:41] <gaal> L~R, please also read perl5's README.win32

[16:42] <cognominal_> how come, say does not work with the bot?

[16:42] <Aankhen``> I think the .NET SDK has it.

[16:42] <Limbic_Region> Aankhen`` - I really don't want to have to download the whole thing for 1 file (since I have no intention of using it for anything else)

[16:42] <Aankhen``> Hmm.

[16:42] <Aankhen``> What's your e-mail address?

[16:42] <Limbic_Region> gaal - I am sure I have in the past - but when I build Perl on Win32 it is usually mingw or Cygwin

[16:42] <cognominal_> eval my @a=777; my $a=666;  print  << 1 @a $a >>

[16:43] <Limbic_Region> [email@hidden.address]
[16:43] <cognominal_> ?eval my @a=777; my $a=666;  print  << 1 @a $a >>

[16:43] <evalbot6> Error: No compatible subroutine found: "&print" 

[16:43] * Limbic_Region goes to look at the readme though since gaal has mentioned it twice now

[16:43] <iblech> ?eval say 42

[16:43] <evalbot6> Error: No compatible subroutine found: "&say" 

[16:43] <iblech> That used to work

[16:43] <iblech> (print won't, however, but say should)

[16:44] <Aankhen``> ?eval my @a=777; my $a=666; << 1 @a $a >>

[16:44] <gaal> http://forum2.org/gaal/pugs/nmake.exe

[16:44] <evalbot6> 3 

[16:44] <Limbic_Region> ?eval say "42"

[16:44] <iblech> ?eval *say 42

[16:44] <evalbot6> Error: No compatible subroutine found: "&say" 

[16:44] <Aankhen``> Bleh.

[16:44] <evalbot6> Error: No compatible subroutine found: "&say" 

[16:44] <Limbic_Region> hmm

[16:44] <Aankhen``> "nmake.exe is an executable file.  For security reasons, GMail does not allow you to send this type of file."

[16:44] <gaal> see url above.

[16:44] <iblech> I think I know why it broke -- it's because the declaration of the safe &say isn't exported correctly or so

[16:44] <Aankhen``> I saw.

[16:44] <Aankhen``> BTW, L~R, you want a GMail invite?

[16:44] <cognominal_> where << >> is documented? the implemantation interpolates scalars but not arrays

[16:45] <Limbic_Region> Aankhen`` - no, I have 50 or so at any given time

[16:45] <Aankhen``> OK.

[16:45] <Limbic_Region> I use that address exclusively for list subscriptions though

[16:45] <gaal> s03 probably, cognominal?

[16:45] <Limbic_Region> Aankhen`` - just change the extension - I will change it back

[16:45] <cognominal_> ho, I did not know that thru gmail, i belonged to a private club...

[16:45] <Limbic_Region> real good security you know

[16:46] <Aankhen``> gaal put it up at http://forum2.org/gaal/pugs/nmake.exe

[16:46] <Limbic_Region> oh 

[16:46] <Limbic_Region> even better

[16:46] <Limbic_Region> let me lower the firewall

[16:47] <Aankhen``> Does Kwid have any mechanism for marking up edits?

[16:48] <Limbic_Region> good news is I can now nmake clean 

[16:48] * Limbic_Region attempts a new build 

[16:49] <Aankhen``> Can roles have BUILD and the like?

[16:50] <Limbic_Region> same error - thanks gaal and Aankhen`` though

[16:50] <Aankhen``> Limbic_Region >> Check that it's using the new version.

[16:50] <Aankhen``> Oh.

[16:50] <Aankhen``> I thought you were talking about clean.

[16:51] <Aankhen``> Could you nopaste the full output?

[16:52] <pasteling> "Limbic_Region" at 24.35.57.240 pasted "src/Pugs/CodeGen/PIR/Prelude.hs is still blowing up on Win32 (home machine only)" (45 lines, 3K) at http://sial.org/pbot/11541

[16:53] <Limbic_Region> out of curiosity - did the ghc requirements change and no one told me?

[16:53] <Aankhen``> I am using 6.4 without problems.

[16:53] <Aankhen``> Do you have Parrot installed?

[16:53] <Limbic_Region> no

[16:53] <Aankhen``> You could try building that and putting parrot.exe in your path.

[16:54] <Limbic_Region> has always worked before without it - as well as working at work without it 

[16:54] <Limbic_Region> but sure

[16:58] <Limbic_Region> attempting build now with parrot in path

[17:00] <Limbic_Region> same error

[17:00] <Limbic_Region> ;-)

[17:01] <Aankhen``> :-\

[17:04] <Limbic_Region> you will never guess in a million billion years what the problem was

[17:04] <svnbot6> r5239, Aankhen++ | * modules/Grammars/Perl6.pm: numerous small changes and a few fixes.

[17:04] * Limbic_Region does a little dance for figuring it out

[17:04] <gaal> disk space? :)

[17:04] <Limbic_Region> GHC-- for 1 .. Inf;

[17:04] <Limbic_Region> no

[17:05] <gaal> well?

[17:05] <Limbic_Region> ghc ships with a perl.exe and perl56.dll in the root directory

[17:05] <gaal> in *its* root dir, yes

[17:05] <Limbic_Region> it was constantly interfering with my installed perl since . takes precedence when searching %PATH

[17:05] <Limbic_Region> so I deleted it

[17:06] <Limbic_Region> no harm no foul right

[17:06] <gaal> but you shouldn't have that dir in your path

[17:06] <Limbic_Region> gaal - it isn't

[17:06] <gaal> you should have bin/ in the path

[17:06] <Limbic_Region> I mean when I am in GHC's root directory

[17:06] <Limbic_Region> as in

[17:06] <Aankhen``> o_O

[17:06] <gaal> why are you ever? :)

[17:06] <Aankhen``> You were trying to build Pugs from GHC's root directory?

[17:06] <Limbic_Region> that's where I install Pugs

[17:06] <Aankhen``> Woo.

[17:07] <Limbic_Region> I have everything Pugs related under a single directory

[17:07] <Limbic_Region> to include parrot now btw

[17:07] <Limbic_Region> so anyway

[17:07] <gaal> L~R, please add this to the infrequently asked questions list :-)

[17:07] <Limbic_Region> you can still do perl in ghc's root directory since it checks %path

[17:07] <gaal> but you should not have deleted ghc's perl. i'm sure it needs it.

[17:07] <Limbic_Region> nope

[17:07] <Limbic_Region> any ole perl will work

[17:08] <Limbic_Region> it just needs to be in a hardcoded path

[17:08] <Limbic_Region> which is why I said GHC--

[17:08] <Limbic_Region> since I didn't have 5.6 lying around

[17:08] <gaal> also i don't see what perl had to do with your syck breakage.

[17:08] <Limbic_Region> neither do I

[17:09] <Limbic_Region> if you feel like bug hunting - just rename your perl.exe in GHC's root directory ;-)

[17:09] <Limbic_Region> note the rename and not delete

[17:10] <Limbic_Region> Aankhen`` - fwiw, pugs is a sub-directory in the ghc root directory (not IN the root directory itself)

[17:10] <Aankhen``> I figured. :-)

[17:11] <gaal> oh, c'mon you wimps! install everything in C:\ :-P

[17:11] <Aankhen``> Hehe.

[17:11] * Aankhen`` considers porting MP3::Info.

[17:12] <Limbic_Region> ok - so now I forgot what exactly it was I wanted to work on

[17:12] <Limbic_Region> oh - I wanted to see if any of the pugsbugs I had submitted tests for were working now

[17:12] * Limbic_Region really doesn't feel like running nmake test

[17:12] <Limbic_Region> are any of the Win32 smokes up to date?

[17:13] <Limbic_Region> nope - both are at least a month old

[17:13] <Aankhen``> Looks like `seek` hasn't been implemented.

[17:13] <gaal> mine is a day or two old if that's any help

[17:14] <Aankhen``> No MP3::Info for now, I guess.

[17:14] <gaal> http://perlcabal.org/~gaal

[17:14] * Aankhen`` wanders off to find a decent game to play.

[17:14] <gaal> Aankhen``, want me to look into it?

[17:14] <gaal> ah :)

[17:14] <Aankhen``> gaal >> Actually, what I would really like is a working Time::Local. :-)

[17:14] <Aankhen``> And MIME::Base64.

[17:14] <Limbic_Region> gaal - if you update regularly you should get autrijus to add it to the list on the pugscode homepage

[17:15] <Aankhen``> So if you need help with your priorities, there you go. ;-)

[17:15] <gaal> you have a working localtime now, if that's what you mean

[17:15] <Aankhen``> BBL, jumping around and shooting people. &

[17:15] * gaal ducks

[17:16] <Limbic_Region> gaal - thanks - it looks like a few have been fixed, but not all of them

[17:16] <gaal> need a newer smoke? i'll start one.

[17:17] <Limbic_Region> no

[17:17] <Limbic_Region> thanks though

[17:17] <gaal> well i started one anyway, so there :-)

[17:17] <Limbic_Region> heh

[17:17] <Limbic_Region> I am just looking at removing some bug workarounds from an example before committing it

[17:18] <gaal> as for the smoke index, i think it's mentioned in the wiki, but i don't automate the build so it's not crucial that it be advertised widely.

[17:19] <Limbic_Region> actually I think a new smoke is in order

[17:19] <Limbic_Region> the past smoke doesn't list one of the tests I am checking for

[17:19] <gaal> one will be up in 30 minutes.

[17:20] <Limbic_Region> hmmm - but I thought you said a few days

[17:20] <Limbic_Region> June 29th is when I uploaded the test

[17:21] <Limbic_Region> *shrug* - I am going to take Jean shopping and will bbiab

[17:21] <Limbic_Region> afk &

[17:28] <cognominal_> clkao: this is not Perl6... I think I understand most or Data::hierarchy, but I don't get the sticky stuff...

[17:28] <gaal> hey autarch :)

[17:28] <cognominal_> clkao, can you give me a hint?

[17:29] <autarch> gaal: hey, thanks for localtime

[17:29] <gaal> sure! the string form doesn't work yet, as you may have noticed

[17:29] <autarch> not an issue for me

[17:30] <gaal> thanks for the nice mail on p6-l btw

[17:30] <gaal> want to work on timegm in the prelude?

[17:30] <autarch> should it be in the prelude or in a Time::Local module?

[17:30] <autarch> it's a fairly involved chunk of code (take a look at the P5 Time::Local)

[17:30] <gaal> i need to add another field, to represent the opaque haskell structure

[17:30] <clkao> cognominal_: it's sticky. not inheritable for children

[17:30] <clkao> cognominal_: why arey ou trying to use d::h?

[17:31] <autarch> OTOH, I can probably more or less copy the P5 code

[17:31] * gaal looks

[17:32] <gaal> hah, i forgot macos used a weird epoch

[17:32] <autarch> yeah, it's insane

[17:33] <autarch> I'm guessing P6 will not support MacOS <X

[17:33] <gaal> p6 hides the epoch anyway.

[17:33] <autarch> thank god

[17:33] <autarch> epochs are evil

[17:34] <gaal> hmmm, we don't have pack yet. is that critical?

[17:34] <autarch> I don't think so, let me look

[17:34] <autarch> no, that's just for caching

[17:34] <gaal> line 54

[17:34] <autarch> I'd probably implement a non-caching version first

[17:35] <autarch> however, can I force integer math with Pugs?  That's important, or else I need to use do int( $year / 100 ) everywhere

[17:35] <gaal> you can say Int $year...

[17:36] <gaal> (i already do has Int $.year for the field)

[17:36] <autarch> and that'll force integer math?

[17:36] <autarch> that'll work

[17:37] <gaal> ?eval class Foo; has Int $.x; method halve() { $.x / 2 } Foo.new(x=>5).halve

[17:37] <evalbot6> 2.5 

[17:37] <gaal> oops :)

[17:38] <gaal> but that's a bug.

[17:38] <autarch> heh

[17:38] <gaal> members aren't in a locked hash at all yet.

[17:38] <gaal> you can still use $:undeclared_private_var i think - they're internally just hash elements.

[17:39] <gaal> ?eval my Int $x = 5; $x / 2

[17:39] <evalbot6> 2.5 

[17:39] <gaal> that's a worse bug. :-P

[17:39] <gaal> actually no:

[17:40] <gaal> ?eval my Int $x = 5; $x /= 2; $x

[17:40] <evalbot6> \2.5 

[17:40] <gaal> oh well.

[17:40] <autarch> heh, int(...) it is

[17:41] <gaal> with an XXX to clean up when it's done.

[17:41] <autarch> yeah

[17:41] <gaal> okay; do you think we need the positional versions of these functions now?

[17:42] <gaal> or can we for now always go through the oop interface, i mean.

[17:43] <autarch> for which, timegm & timelocal?

[17:43] <autarch> I like the idea of OO only

[17:44] <autarch> the positional version is _so_ ugly and hard to remember

[17:44] <gaal> yes. okay, so these two just do some validation and throw everything at new().

[17:44] <autarch> plus if it's a method on some built-in object, caching is simple

[17:44] <PerlJam> gaal: For positional, do you mean the same as in P5 or the reverse as in your email to p6l?

[17:44] <autarch> either way it sucks to use ;)

[17:45] <PerlJam> I think a p5 positional interface would be useful to speed converting p5 to p6

[17:45] <gaal> right. i have to peek at haskell a little, to see if i can sotre their opaque structure in p6.

[17:45] <autarch> PerlJam: that's true

[17:53] <gaal> it seems that we can't. so instead i'll add an epoch field.

[17:53] <gaal> i'll make it Num :-)

[17:54] <gaal> the good news is that if you construct a Time, you can pass either an epoch or everything else, and what you don't supply gets computed.

[17:55] <gaal> at least i think that's good news? please tell me if you think this is slow and bloated.

[18:03] <gaal> meh, you can't get an epoch in haskell without doing calculations.

[18:06] <autarch> that's reasonable, it can always be changed to compute on demand and cache later

[18:06] <autarch> where is the Time interface defined?

[18:07] <gaal> nowhere :) we're making it up as we go

[18:07] <autarch> ok

[18:08] <autarch> but where are internal objects coded?  In haskell or the prelude?

[18:09] <gaal> see src/perl6/Prelude.pm ; it relies on Pugs::Internals::localtime in src/Pugs/Prim.hs

[18:09] <autarch> ok

[18:14] <gaal> bbiab

[18:15] <kolibrie> mugwump was working on a Date framework, too: ext/Date/README.pod

[18:16] <autarch> I know

[18:16] <kolibrie> ok, so long as everyone is talking to everyone

[18:41] <brentdax> A couple days ago (I'm building a new Pugs right now, can't see if it's still there) lookups like $object.foo.bar were broken.  Does anyone know if they still are?

[18:42] <wolverian> Foo.new.bar seems to work

[18:42] <wolverian> (when bar is defined.)

[18:47] <brentdax> I'll check it again when this finishes compiling...

[18:47] <brentdax> btw, does anyone else have trouble with optimized Perl 5 embedding builds?

[18:49] <autarch> brentdax: are you on debian, perchance?  does it complain about _crypt_struct

[18:49] <brentdax> I'm on Ubuntu, which is Debian-derived.  I think that sounds right.

[18:50] <autarch> brentdax: yeah, I saw thought on Ubuntu too

[18:50] <obra> hey autarch

[18:50] <autarch> my fix was to run make unoptimized, let it compile that one file, stop the compile, then run plain make again

[18:50] <autarch> obra: hey there

[18:51] <brentdax> What I've been doing is running make, letting it get to that file and crash, then do the rest of the build with make unoptimized.

[18:52] <brentdax> Your way is probaby better, though.

[18:52] <autarch> brentdax: it's just that one file, so you can stop the build right after it does that file, delete any .o files it made after that, and then go ahead optimized

[18:52] <gaal> there's a compiler directive to turn off optimizations for one file. which one is it, i'll add the flag.

[18:52] <autarch> src/Pugs/Embed/Perl5

[18:52] <geoffb> *yawn*

[18:52] <geoffb> hello, all

[18:53] * geoffb has finally sent his article to the editor, and can now relax and spend a couple hours reading IRC backlog.  :-)

[18:54] <geoffb> BTW, sharing a repository with your editor is the only way to fly

[18:55] <brentdax> Compiling Pugs.Embed.Perl5 ( src/Pugs/Embed/Perl5.hs, src/Pugs/Embed/Perl5.o )

[18:55] <brentdax> /usr/lib/perl/5.8/CORE/reentr.h:611: error: field `_crypt_struct' has incomplete type

[18:56] <gaal> brentdax / autarch: please try editing that file and changing the first line to

[18:56] <gaal> {-# OPTIONS_GHC -fglasgow-exts -cpp -O0 #-}

[18:56] <gaal> and tell me if it helps / just ci it yourself

[18:57] <gaal> (my debian box is too puny to run anything but make unoptimized on anyway :)

[18:58] <brentdax> Change made, compiling now...

[18:59] <brentdax> No joy.

[18:59] <gaal> too bad :/

[19:00] * gaal is off again &

[19:15] * Limbic_Region assumes the integer math is needed to determine epoch and not for returned values since $larry wants fpm

[19:28] <meppl> "$larry"?

[19:29] <meppl> *g

[19:29] * Limbic_Region doesn't understand the question meppl

[19:29] <Limbic_Region> if there is one

[19:31] <meppl> i thought it was inadvertent

[19:31] <meppl> $larry as variable has no sense ;)

[19:33] <Limbic_Region> meppl - to distinguish larry from @larry we use $larry

[19:34] <meppl> achso

[19:34] <meppl> ah okay

[19:37] <meppl> in any case its logical senseless to write a "$" for a substantiv of a human-language.   or we could say "i go $home and eat a $soup from my $grandma"   :D"

[19:39] <Juerd> people with utf8 shells, login on feather please :)

[19:40] <Limbic_Region> how would I know if I have a utf8 shell?

[19:40] <Juerd> Can it display unicode characters? :)

[19:40] <Juerd> Then very probably it is.

[19:40] <integral> it's upside down?

[19:40] <Limbic_Region> dunno - never tried

[19:40] <Juerd> integral: :)

[19:40] * Limbic_Region has only logged on to feather once

[19:40] <Limbic_Region> that was to change my password

[19:41] <integral> Juerd: the line length is weird though, they look longer than 80

[19:42] <Juerd> Blame thy tty.

[19:42] <Juerd> They're 80

[19:42] <integral> hmm, must getting some widths wrong then

[19:43] <integral> ah, it is

[19:46] <Amnesiac> yo juerd

[19:46] <Amnesiac> 'lo Limbic_Region, integral 

[19:54] * Aankhen`` goes to sleep.

[19:54] <Aankhen``> G'night.

[19:56] <Limbic_Region> salutations Amnesiac

[20:08] <wolverian> for the love of god, this game has a copy protection scheme that slows down your computer with an insane process if you bought the game

[20:08] <kolibrie> Juerd: hmm, playing with our minds, are you

[20:08] <Juerd> :))

[20:13] <Limbic_Region> um - is t/builtins/caller.t b0rk?

[20:13] <Limbic_Region> looks like you planned 19 but only ran 3

[20:13] <Limbic_Region> no such sub ....

[20:25] <eric256_> which game wolverian?

[20:27] <wolverian> eric256_: vampire the masquerade: bloodlines

[20:28] <eric256_> ahhh. thought maybe you where talking about half life 2.  it encrypts the entire contents of like 5 CD's...pain in the but

[20:28] <wolverian> heh.

[20:29] <Limbic_Region> pc based games?

[20:29] * Limbic_Region has considered doing some gaming to bring some balance and wasn't sure what he should get

[20:29] <wolverian> yes.

[20:29] <wolverian> Limbic_Region: what kind of games do you like?

[20:31] <Limbic_Region> um - mostly ones that involve either no thinking - (first player shooters)

[20:31] <Limbic_Region> or ones that involve almost entirely thinking (Myst - RPGs - etc)

[20:31] <Limbic_Region> but I am not much of a gamer

[20:32] <autarch> then get a PS2

[20:32] <autarch> lots of choices, minimal work ;)

[20:32] <autarch> running Windows just for games is too much of a PITA

[20:32] * eric256_ seconds Limbic_Region's games chioces. ;)

[20:32] <Limbic_Region> I already own a pc that's dual boot autarch

[20:32] <autarch> ah

[20:33] <autarch> I used to do that, but I hated leaving linux just to play games

[20:33] <Limbic_Region> autarch - actually Windows is the primary partition

[20:33] <eric256_> ps2++ psp+++ ;)

[20:33] <wolverian> Limbic_Region: I can recommend the latter category games mainly

[20:34] <Limbic_Region> well - shoot wolverian

[20:34] <autarch> Limbic_Region: eek

[20:34] <wolverian> Limbic_Region: Fallout 1 & 2, Arcanum: of Steamworks and Magick Obscura, The Longest Journey, and Planescape: Torment

[20:34] <Limbic_Region> autarch - it works out.  While I am heavily *nix biased

[20:34] <Limbic_Region> I use them both equally

[20:34] <wolverian> Limbic_Region: recently those genres have been practically dead on the PC, which sucks

[20:34] <wolverian> (and none of those games are recent)

[20:34] <Limbic_Region> I figure it will keep my skills up when/if the need arises - and it is only fair to b1tch about something when you have walked a mile in its shoes

[20:35] <Limbic_Region> wolverian - you think I could pick them up in a game shop or should I try to order online?

[20:35] <autarch> I've used Windows plenty.  Heck, I used to do tech support ;)

[20:35] <wolverian> Limbic_Region: They'll be rereleases if they're in the shops.

[20:35] <wolverian> Limbic_Region: I'd try ordering first.

[20:35] <Limbic_Region> gotcha

[20:36] <eric256_> Prince of Persia is a good balance of both shooter and puzzle

[20:37] <wolverian> Limbic_Region: some people also like Morrowind, but it always failed to attract me, in all its sequels 

[20:37] <wolverian> (it is the prettiest of the bunch, if that matters, though)

[20:37] <wolverian> (it's a first-person game, too.)

[20:38] * eric256_ cheers when he finds that most if not all his 11 v-mails are junk.

[20:39] <masak> eric256_: prince of persia can hardly be called a "shooter"

[20:39] <eric256_> i meant as a first person combat, if you count throwing stuff it is a shooter ;)

[20:39] <masak> ;)

[20:53] <gaal> ooh, autrijus posted.

[20:56] <masak> poor autrijus... "underclocked" is not like him

[20:56] <Corion> http://datenzoo.de/pugs/win2k.html

[20:56] <Corion> (a smoke, long time not smoked :) )

[20:56] <Corion> cu all and good night

[20:57] <Limbic_Region> thanks wolverian

[20:57] <Limbic_Region> and even though Corion quit - thanks to him too - I bugged him about the smoke in the chatterbox

[20:58] <gaal> lr, i have that smoke up too.

[20:58] * Limbic_Region is confused by the results

[20:59] <gaal> that != from right now

[20:59] <Limbic_Region> stuff that was b0rk is fixed

[20:59] <Limbic_Region> and stuff that was working is b0rk

[20:59] <gaal> that == the one i started a few hours ago.

[20:59] <Limbic_Region> right

[20:59] <gaal> i don't have parrot / p5.

[20:59] <Limbic_Region> neither do I 

[20:59] <Limbic_Region> or rather I do

[20:59] <Limbic_Region> but they don't have anything to do with what I was looking at

[21:00] <gaal> k

[21:00] <Limbic_Region> gaal - it is

[21:00] <Limbic_Region> errr

[21:01] <Limbic_Region> your results don't agree with Corion

[21:01] <Limbic_Region> all 4 of parsing_spaceship.t failed for Corion but 2 passed for you

[21:03] <Limbic_Region> *shrug* - doesn't really matter since at least 2 are still b0rk

[23:23] <rafl> Who is responsible for the debian/ dir in svn?

[23:24] <meppl> what is the sense of this folder?

[23:24] <kungfuftr> rafl: look at the logs?

[23:24] <rafl> meppl: It's used to build pugs packages for the Debian GNU/Linux Distribution.

[23:24] <rafl> kungfuftr: Good point.

[23:25] <meppl> oh

[23:25] <revdiablo> rafl: scw mostly

[23:25] <meppl> im debian-user

[23:27] <rafl> "idle: 6 days" Hm...

[23:28] <rafl> So, I'd like to fix some things and make some improvements on the package. Shall I ask scw or ask someone else for svn access?

[23:30] <geoffb> rafl, well, I'm no metacommiter, but the general rule around here is to ask for the commiter bit, and then go wild.

[23:30] <mugwump> rafl: you can ask anyone listed as an admin on the openfoundry project page

[23:35] <revdiablo> rafl: everything is in source control. if you screw something up, it can just be reverted.

[23:35] <svnbot6> r5240, mugwump++ | How to shoot yourself in the foot with Perl 6

[23:36] <Odin-> O_o

[23:36] <Odin-> Interesting commit comment.

[23:36] <mugwump> in this case it's literal

[23:36] <revdiablo>    A /docs/SHOT_IN_THE_FOOT

[23:36] <revdiablo> hehe

[23:37] <revdiablo> oh lord, my working copy is 600 revisions behind

[23:40] <revdiablo> mugwump++

[23:45] <Odin-> Good one. :)

[23:47] <kungfuftr> mugwump-- # bloody kiwi

[23:47] <svnbot6> r5241, mugwump++ | Test for 'is accessor' trait

[23:50] * mugwump runs around kungfuftr flightlessly and pecks at his feet

