[02:56] <svnbot6> r7987 | lwall++ | my needs to work in conditionals and various other contexts

[05:46] <svnbot6> r7988 | lwall++ | Random cleanup and commentary.  Switched to --> notation for type inferencer.

[06:44] <j0sephi> http://picasa.hu/1132728246-Grootvaderopstap.wmv ;-) :)

[07:34] <svnbot6> r7989 | gaal++ | S29draft.pod: minor fixes

[08:16] <svnbot6> r7990 | lwall++ | Added various number tests to align with S02.

[08:18] <GeJ> larry is in the game? wh00t...

[08:18] <dduncan> yes, has been for a few days at least

[08:19] <GeJ> well, $work and $holidays went in the way... Have to catch up with what happened during the last 3 weeks...

[08:19] <GeJ> Stevan is having a new pet project?

[08:20] <dduncan> afaik, his current big project has been going on awhile

[08:20] <dduncan> as I recall, he's the big metamodel person

[08:20] <GeJ> "Perl6::ObjectSpace"

[08:20] <GeJ> is this a sub-part of of MM2?

[08:20] <dduncan> I suspect that's related to the perl 6 meta-model

[08:21] <dduncan> said meta-model has multiple implementations, one in perl 5

[08:22] <dduncan> I haven't looked at it much

[08:22] <GeJ> oki, last time I checked, stevan made a proposal regarding eigenclasses and such on p6l... the welcome was not as warm as he expected... I have to figure out what happened since then.

[08:23] <dduncan> as I recall, the meta-models and/or PIL2 are being merged into pugs now, which is the main change for the 6.28.0 release

[08:24] <dduncan> so we have more mature object support

[08:25] <GeJ> is pugs on preflight already? it seems quiet for a boarding time. Maybe it's just the check-in yet?

[08:25] <dduncan> no it isn't, to my knowledge

[08:25] <dduncan> I imagine a few weeks to go before the release

[08:27] <GeJ> oki... well, I guess I'm going to start with the summarizes... then have a look at the MLs. thanks for the info. :)

[08:40] <svnbot6> r7991 | kane++ | * add dependency syntax

[08:40] <svnbot6> r7991 | kane++ | * add more suggested tags

[12:05] <svnbot6> r7992 | fglock++ | * /docs/notes/lazyness.txt - added more TODO sections

[12:10] <wolverian> laziness!!!

[12:23] <GeJ> With all this lazyness, I fear that the old joke saying that "@$%$%@$$%$$%@$%$$@%$" is a SMTP daemon in p5 turns into "$" being a full reimplementation of OpenOffice in P6 ;)

[12:23] <svnbot6> r7993 | scook0++ | * Un-break Haddock.

[12:28] <scook0_> GeJ: well, if P6 steals ideas from everywhere else, why not HQ9+ ? :-P

[12:31] <Juerd_> GeJ: No, that's sendmail syntax, not Perl 5 :)

[12:31] <GeJ> :)

[12:33] <GeJ> my mistake, sorry... :) is `cat /dev/urandom | head -n 666 > perl` more accurate for a fully featured implementation of a SMTP server?

[12:34] <autrijus> I think you want | perl

[12:34] <GeJ> mr. A, good evening... yes, I think a pipe would be better indeed...

[12:36] <Juerd_> And because of binary huffman coding, cat /dev/zero | pugs 

[12:36] <Juerd_> :)

[12:36] <webmind> although '>' would be just as effective :)

[12:37] <Juerd_> webmind: Certainly for code reuse :)

[12:37] <webmind> or maybe even increase your chances :)

[12:39] <Juerd_> Neat.

[12:40] <Juerd_> Ik maak voor het eerst stats van een webserver van 'n klantc

[12:40] <Juerd_> s/c$//

[12:40] <Juerd_> Eh, wrong channel

[12:40] <GeJ> Juerd_: are you .nl or .de?

[12:41] <autrijus> GeJ: greetings. are you going to be @ german perl workshop?

[12:41] <GeJ> autrijus: do you know where I could find a schedule and a location?

[12:42] <Juerd_> GeJ: .nl

[12:42] <GeJ> hum... good to know, I may have to remember you next time I receive a .nl message I don't understand ;)

[12:42] <autrijus> GeJ: http://www.perl-workshop.de/2006/

[12:44] <GeJ> autrijus: if I can find a colleague of mine to help me translate the english page... eventually. Early March, in Bochum's university I assume.

[12:45] <GeJ> living in Munich and not being fluent in bavarian german (or in any kind of german for that matter) is not helping.

[12:47] <GeJ> sounds like fun... I just hope I'll be able to attend. $work will be busy as hell for the next 6 months.

[12:49] <GeJ> autrijus: are you coming back to europe to attend the workshop?

[12:53] <autrijus> GeJ: yes, I'll be @ TelAviv from Feb14 (or so) until end of Feb

[12:53] <autrijus> then go to german perl workshop

[13:51] <r0nny> yo

[13:59] <svnbot6> r7994 | rafl++ |  r19368@ata:  rafl | 2005-11-09 02:29:40 +0100

[13:59] <svnbot6> r7994 | rafl++ |  * tpr article: Removed the reference to pugs-modules package for Debian. pugs

[13:59] <svnbot6> r7994 | rafl++ |    depends on it anyway so you don't need to install it explicitly.

[14:01] <rafl> Uh? Long time no commit. I made that change weeks ago..

[14:01] <r0nny> yo rafl

[14:01] <r0nny> any chages in the pkg tool ?

[14:05] <svnbot6> r7999 | rafl++ |  r22085@ata:  rafl | 2005-11-23 14:56:42 +0100

[14:05] <svnbot6> r7999 | rafl++ |  * Added a new control tag in S22draft: Enhances.

[14:06] <rafl> svnbot6: I'm currently discussing with kane about that.

[14:06] * Limbic_Region wonders if rafl knows that svnbot6 is a bot ;-)

[14:08] <rafl> Limbic_Region: Actually.. yes.

[14:08] <rafl> r0nny: I'm currently discussing with kane about that.

[14:53] <Su-Shee> Hi.

[15:00] <Limbic_Region> lo

[15:18] <stevan> GeJ: re: Perl6::Object space,.. you can consider that MM-3.0-Gold Edition

[15:18] <GeJ> stevan: thanks for backlogging :)

[15:18] <stevan> GeJ: :)

[15:19] <stevan> GeJ: it is an attempt to define some core runtime components for a backend agnositic MM to sit atop

[15:19] <stevan> then of course a re-implementation of the MM using those core components

[15:20] <GeJ> so, the integration of P6::OS will tag the 6.28.0 ?

[15:20] <stevan> GeJ: possibly, there is much more thought needed to complete the P6::OS work

[15:21] <stevan> I am not sure what autrijus's plans are regarding what will be in 6.28.0 

[15:22] <stevan> P6::OS will probably come in a later 6.28.* release

[15:23] <GeJ> hum, okay... really need to get into p6l to see the related threads (as I assume that there are some... no?)

[15:23] <stevan> GeJ: not really, the P6::OS has mostly been discussed here, and in my head :)

[15:24] <stevan> it is an implementation detail, so p6l is not interested, it has nothing to do with parrot, so p6i is not interested

[15:24] <GeJ> and since p6c is mostly here... oki, I see.

[15:25] <GeJ> Note to self: spider the #pugs logs before leaving

[15:53] <fglock> commit #8000 !!!

[15:53] <svnbot6> r8000 | fglock++ | * /docs/notes/laziness.txt - filename fixed - wolverian++

[15:58] <Limbic_Region> wooo hooo

[16:08] <fglock> I've sent a mail to p6l asking if 'say 1..Inf' could output an infinite stream, instead of being an idle loop

[16:10] <fglock> I'm not sure if the list received it

[16:11] <Limbic_Region> it did

[16:11] <Limbic_Region> just not answered yet

[16:12] <Limbic_Region> subject line "Lazy lists in Str context"

[16:17] <fglock> Limbic_Region - ok thanks

[16:45] <cdpruden> hmmm.. so I can call a method from p6 in one file, but not in mine, it seems...

[16:47] <cdpruden> err, sorry, wrong tab

[17:42] <gaal> Hi! Is there anyone here who considered coming to the hackathon/conference in Israel this coming February, but decided not to due to financial reasons? Please /msg or email me.

[17:47] <fglock> gaal: sure I'd like to go! (Financial reason == good reason)

[17:51] <fglock> btw - I'm organizing YAPC::Brasil::2006 (april) and YAPC::SouthAmerica::2006 (november) - it would be nice if people would be able to come!

[17:57] <gaal> fglock: ACK. note that my question carries no implied promise, unfortunately :)

[17:58] <gaal> (we are still seeking sponsorship)

[17:59] * kolibrie was thinking gaal had become extremely wealthy

[18:00] <gaal> kolibrie: suuuure, $1M per svn ci :-)

[18:01] <kolibrie> :)

[18:03] * geoffb decides to start doing piles of trivial checkins ...

[18:03] <gaal> geoffb: great! I'll write tests for them

[18:04] <geoffb> heh

[18:04] <gaal> actually no, that's a lot of work. I'll change indentation style, and then change my mind and change it back.

[18:05] <geoffb> :-)

[18:06] <fglock> gaal: :)

[18:36] <xerox> Hiya

[18:36] <xerox> What was the zipWith version of Â¥ ?

[18:39] <gaal> I don't think we have one.

[18:39] <xerox> >>op<< ?

[18:39] <xerox> (But I can't find xor, a-la perl5 ^)

[18:39] <gaal> hmm, come to think of it hyperops are kinda like zipWith!

[18:40] <xerox> Indeed

[18:40] <xerox> (At least that's how I understood it)

[18:40] <gaal> xerox: xor like many ops has been rationalized. if you wany bitty xor, do +^

[18:41] <xerox> '+[@.+]' xor '[))@_}' :-)

[18:42] <xerox> (Though the difference between string and lists threatens ...)

[18:43] <gaal> ?eval '+[@.+]' ~^ '[))@_}'

[18:43] *** evalbot_7982 is now known as evalbot_8000

[18:43] <evalbot_8000> "print " 

[18:43] <xerox> ~ ?

[18:43] <gaal> stringy xor

[18:43] <xerox> 'stringy' ? :-)

[18:44] <gaal> there's also ?^, booly xor

[18:44] <xerox> I could find only 'xor' :-D

[18:44] <gaal> or is that boolea xor? :-p

[18:44] <xerox> I think it's 'boolean'

[18:44] <xerox> ~ makes ops work on strings?

[18:46] <gaal> 'xor' is a synonym for ^^, which is akin to &&, || etc.

[18:46] <xerox> So there are: ~&, ?&, and so on?

[18:46] <gaal> yes, exactly

[18:47] <xerox> Cool!

[18:47] <gaal> this is to avoid ($input+0) & 7 etc.

[18:47] <gaal> like you needed in p5 (and javascript too, I'm told)

[18:48] <gaal> come to think of it i'm not sure i understand ^^.

[18:48] <xerox> hehe.

[18:48] <xerox> Maybe I should checkout and build a newer pugs.

[18:48] <gaal> ah, i do i do.

[18:48] <gaal> it returns the true one.

[18:48] <gaal> or bool::false

[18:48] <gaal> cute.

[18:49] <xerox> What?

[18:49] <gaal> now to find a place this is useful :-)

[18:49] <xerox> Please elaborate on that :-)

[18:49] <gaal> $x ^^ $y  => one of three possible values:

[18:50] <gaal> (a) bool::false, if ?$x == ?$y

[18:50] <gaal> (b) $x, if $x

[18:50] <gaal> (c) $y, if $y

[18:50] <xerox> Heh, what is the '?' about?

[18:50] <gaal> booly context. :)

[18:51] <xerox> Hah.

[18:51] <gaal> ok ok boolean, but i'm feeling, ah, nicky.

[18:51] <xerox> nickian! Err..

[18:51] <gaal> anyway, Prim.hs:847 for The Answer

[18:52] <gaal> Wittgenstein invented truth tables less than a hundred years ago and already we have this!

[18:52] <xerox> Let's synchronize the sources..

[18:53] <gaal> op2 "^^"

[18:53] <xerox> Yes sure

[18:54] <xerox> Some definition there are *so* tersely cute.

[18:56] <gaal> I do wonder, though, if undef wasn't a better choice.

[18:56] <gaal> not seeing the actual usage though, I don't know...

[18:56] <xerox> Are there programs written in p6?

[18:56] <xerox> (..yet)

[18:57] <gaal> sure! examples/

[18:57] <gaal> and of course t/ :-)

[18:58] * Aankhen`` goes to sleep.

[18:58] <xerox> Uuuh, there are plenty of them.

[18:58] <Aankhen``> G'night.

[18:59] <xerox> I want functional p6 code!

[18:59] <gaal> fp.pm somewhere there

[18:59] <gaal> examples/functional/

[19:01] * xerox melts with monads.p6

[19:01] <xerox> See you later :-)

[19:02] <gaal> :-)

[19:02] <gaal> fp.p6 - wondering:

[19:02] <gaal> multi sub member (*$val)            returns Bool { 0 }

[19:02] <gaal> why not bool::false ?

[19:15] <wolverian> gaal, and why not --> Bool?

[19:21] <gaal> wolverian: does that parse already?

[19:22] <wolverian> oh, I don't know.

[20:02] *** comet_ is now known as comet

[20:02] *** comet is now known as comet_

[20:58] *** pjcj_ is now known as pjcj

[22:09] <pmurias> ~/exit Sleeping time

