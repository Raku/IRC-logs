[00:14] <ingy> autrijus: I'll get it shortly!

[00:20] <ingy> seen autrijus 

[00:20] <jabbot> ingy: autrijus was seen 1 hours 47 minutes 16 seconds ago

[00:20] <ingy> autrijus: are there any completely new docs?

[00:22] <geoffb> ingy, did you already have S17?

[00:24] <geoffb> Man, this code optimization blog series is going way longer than I expected: http://www.oreillynet.com/pub/wlg/8260

[00:24] <geoffb> Ah well, at least I'm not running low on topics.  :-)

[00:24] <geoffb> It will be nice when I get done with this series, though, and get back to Perl-specific stuff.

[00:38] <ingy> geoffb: I have it now

[00:38] <ingy> Perl6-Bible-0.22.tar.gz (The Halloween Edition) on the ether to CPAN now...

[00:39] <geoffb> ingy++

[00:39] <ingy> :)

[01:58] <gantrixx> is there anyone here from Phoenix?

[02:00] <amos> maybe!

[02:00] *** amos is now known as azuroth_tafe

[02:01] * theorbtwo thinks azuroth_tafe is being testy.

[02:02] <theorbtwo> (If you will foregive the foregoing pun.)

[02:02] <gantrixx> well if you are from arizona and are looking for a job, msg me privately

[02:03] <azuroth_tafe> no, but I'd like a job anyway . . . ;-p

[02:04] <gantrixx> is autrijus here?

[02:04] <gantrixx> I did get a company interested in using Perl6

[02:04] <gantrixx> unfortunately, they are interested now

[02:04] <gantrixx> they want to rewrite a bunch of Perl5 stuff to Perl6

[02:07] <azuroth_tafe> that's very cool

[02:12] <Khisanth> just not very practical :)

[02:12] <rep> isn't it a bit premature

[02:33] <azuroth_tafe> they don't need to start _using_ it straight away though, right?

[03:08] <gantrixx> actually yes they want to start using it

[03:08] <gantrixx> they thought that Perl5 didn't have multithreading and Perl6 did

[03:08] <gantrixx> actually Perl5 does have it, I'm just not that familiar with it

[03:09] <gantrixx> I did tell them that Perl6 would be a worth while endevor but not until an activestate distrobution is ready

[03:09] <gantrixx> they use perl-win32

[03:10] <gantrixx> OK, I have to log off now.  the kids have stopped comming begging for candy

[03:10] <gantrixx> I'm going to bed

[04:28] <azuroth_tafe> gg

[04:52] <svnbot6> r7805 | eric256++ | added doc links to two tests.

[04:52] <svnbot6> r7805 | eric256++ | Added doc link to slurp.t

[04:52] <svnbot6> r7805 | eric256++ | Doc linkes for a few OO tests.

[07:05] <geoffb> Apparent bug in 'make register':  My PARROT_PATH ends in 'svk/parrot-trunk'.  'make register' dies with an error from ghc-pkg about '.../svk/parrot doesn't exist or isn't a directory'.  Something breaking the directory at the hyphen, I'd guess.

[07:39] <geoffb> morning, nothingmuch 

[07:39] <nothingmuch> morning

[07:40] <geoffb> How's life on your side of the planet?

[07:54] * nothingmuch is doing some catalyst stuff

[07:54] <nothingmuch> as opposed to pugs

[07:54] <nothingmuch> someone was needed to fix sessions up

[07:55] <geoffb> ah

[07:55] <geoffb> Fun at least?

[09:20] <nothingmuch> sorry

[09:20] <nothingmuch> geoffb: yes, pretty fun

[09:20] <nothingmuch> shlemiel the painter

[09:20] <nothingmuch> oops

[09:20] <nothingmuch> damn clipboard

[09:21] <nothingmuch> (that was from a reply to stevan, if anyone cares, on p6l)

[09:21] <nothingmuch> http://dev.catalyst.perl.org/repos/Catalyst/trunk/Catalyst-Plugin-Session/

[09:32] <gaal> anyone know a Windows equivalent to strace?

[09:34] <misc> gaal: see sysinternals.com , maybe they have something ?

[09:35] <gaal> didn't find anything there, but now checking out http://www.bindview.com/Services/RAZOR/Utilities/Windows/strace_readme.cfm

[09:35] <gaal> sysinternals.com++ #general rockitude

[09:36] <gaal> hmmm the bindview strace has a few serious downsides. I think I'll pass for now :/

[10:45] <sky__> an

[10:45] <sky__> yawn

[11:02] <rafl_> Is generating the prelude broken currenylt?

[12:13] <svnbot6> r7806 | autrijus++ | * Wendy's notes of what can hopefully become PA02 that is accessible to nonjargon audiences

[12:21] <autrijus> rafl_: nopaste the error?

[12:22] <autrijus> sadly I need to run off to amsterdam.pm meeting in a couple mins

[12:22] <autrijus> will checkback iff find wireless

[12:22] <autrijus> (journal updated)

[12:22] <autrijus> &

[12:27] * theorbtwo wonders who Wendy is.

[12:43] <rafl_> autrijus: make realclean fixed it.

[12:45] <theorbtwo> Oh, to answer my own question: Liz's housemate.

[13:09] <nothingmuch> hola

[13:17] <theorbtwo> Hola, Yuval.

[13:23] <comet_> morning

[14:07] <Juerd> 13:27 < autrijus> sadly I need to run off to amsterdam.pm meeting in a couple mins

[14:07] <Juerd> Ohhh, thanks for the reminder

[14:07] <Juerd> I was living with the notion of today being monday.

[14:07] <Juerd> theorbtwo: Liz's wife

[14:08] <theorbtwo> Oh, I didn't realize she was married.  Or a lesbian.

[14:12] <Juerd> I

[14:12] <Juerd> I knew the latter, the former only when reading Wendy's site :)

[14:14] <theorbtwo> Oddly, I seem to recall a dutch lesbian couple hanging out on the CB around the time Liz was there, but I don't recal Liz being in it.

[14:15] <theorbtwo> How many lesbian dutch perl monks are there?

[14:18] <stevan> theorbtwo: deep down, I think we are all dutch lesbians

[14:18] <svnbot6> r7807 | stevan++ | Perl6::ObjectSpace - cleaning up some details, making the bootstapping tools easier to use, therefore making the code easier to read as well

[14:18] <stevan> autrijus: ping # have some YARV thoughts when you get back

[14:20] <theorbtwo> Thank you, stevan, for finally giving a punchline.

[14:20] <stevan> theorbtwo: :)

[14:27] <Juerd> 15:23 < stevan> theorbtwo: deep down, I think we are all dutch lesbians

[14:27] <Juerd> ++

[14:27] <Juerd> rotflol.

[14:27] <Juerd> theorbtwo: I have no idea.

[14:27] <Juerd> theorbtwo: They're the only two dutch female perl programmers I know, even

[14:28] <Juerd> But then, I really don't know any dutch perl programmers except those I met at amsterdam.pm

[14:28] <stevan> Juerd: maybe you should take a poll at the meeting :)

[14:30] <Juerd> stevan: "Are you dutch and lesbian?"

[14:30] <stevan> Juerd: well I think you can probably assume the dutch part 

[14:31] <Juerd> autrijus will be at the meeting, and isn't dutch. I hope he's not lesbian, though, because that'd mean my gender guessing skills are WAY off :)

[14:31] <stevan> Juerd: you mean, you didnt know?

[14:31] <Juerd> Why does this subject intruige you so much, by the way? :)

[14:31] <Juerd> stevan: haha

[14:32] <stevan> Juerd: it doesn't really,.. just a slow morning @work :)

[14:32] <Juerd> It'd be fun, though, if there were any relation between sexual preference and programming language of choice

[14:32] <Juerd> I myself am gay

[14:32] * stevan is avoiding writing a proposal for a client

[14:32] <Juerd> Is Perl a gay language? Many PHP coders seem to think so...

[14:33] * stevan thinks PHP is for transgender bestiality freaks

[14:34] <stevan> Juerd: Lambdas are gay (http://www.lambda.org/)

[14:34] <xinming> If there were any relation between sexual preference and programming language... I should choose programming language after my preference is finished. :-P

[14:36] <xinming> hmm, anyone here knows why iblech didn't come here for now?

[14:37] <stevan> xinming: he usually has the iblechbot log the channel,. and I think he backlogs

[14:37] <stevan> he is also still in school,.. 

[14:38] <xinming> Oh, I just wish to have a conversation with him on a test.

[14:38] <Limbic_Region> I would be more interested in a correlation between preferred language and preferred hobbies then in sexual orientation

[14:39] <Limbic_Region> but I guess that's because I already have a mate and am just looking for a pal ;-)

[14:39] <Juerd> Limbic_Region: I think sexual orientation has a lot to do with hobby... :)

[14:39] <stevan> Juerd++ :)

[14:40] <stevan> my name is stevan, like proramming in perl, long walks on the beach and reading sci-fi novels 

[14:40] <Limbic_Region> Juerd - maybe so but I don't really care about the sexual orientation aspect.  Only if they enjoy the same things I do

[14:40] <Juerd> Yes, enjoying the same things is important for sex too.

[14:40] * Limbic_Region hasn't had too many gay men fall for him to make it a problem of avoidance

[14:41] <Limbic_Region> s/problem/reason/

[14:41] * Limbic_Region is in the process of reviving the currently defunct local PerlMongers group

[14:42] <xinming> ?eval class a { has $.a; method update { $.a; } };class b { has $.a; submethod BUILD { a.new( a => $.a ).update; }; }; b.new( a => 20 );

[14:42] <evalbot_7807> Error: No compatible subroutine found: "&update" 

[14:42] <xinming> hmm, Ok, I will ask here anyway.

[14:42] <xinming> Is my example cause recursively method calls?

[14:42] * stevan thinks people might be more likely to go to a perlmongers meeting if it involved sex 

[14:43] <Juerd> ...

[14:44] <xinming> hmm, indirectly...

[14:44] <xinming> Just wish to my test better...

[14:45] <xinming> s/to/to make/

[14:49] <xinming> :-S why If I ask this question... all people are becoming quiet? :-/

[14:52] <stevan> ?eval class a { method update { 'foo' } }; a.new().update();

[14:52] <evalbot_7807> "foo" 

[14:52] <stevan> ?eval class a { method update { 'foo' } }; a.new().update;

[14:52] <evalbot_7807> "foo" 

[14:53] <xinming> but for the indirect class instance creation... It will get the problem.

[14:53] <xinming> with class name and attribute which are the same...

[14:53] <stevan> xinming: what do you want b.new() to return?

[14:54] <xinming> if you change class name a -> A, and b -> B, the problem will go.

[14:54] <stevan> ok

[14:54] <xinming> stevan: returns nothing, Just create a instance and call a method from other class, and return.

[14:55] <stevan> xinming: this will (hopefully) be fixed with the metamodel

[14:56] <xinming> stevan: Yeah, I know, I want to know if the test is finished right now, or after the bug is fixed. :-)

[14:57] <xinming> when should I finish the test.

[14:57] <stevan> xinming: commit the breaking test,.. 

[14:57] <stevan> it will encourage people to fix it :)

[14:57] <xinming> stevan: It's already there.

[14:57] <xinming> pugs/t/pugsbugs/class_name_and_attribute_name_confliction.t

[14:59] <ycheng> /join #sx

[15:00] <theorbtwo> Can you change confliction to conflict?

[15:01] <xinming> theorbtwo: well, do as you wish, as my English is poor. :-/

[15:01] <xinming> sorry for my poor English

[15:02] <theorbtwo> Your english is /far/ better then my Chinese.

[15:03] <xinming> theorbtwo: that makes no sense on comparing English with Chinese... vice versa... As I still have to learn.. :-)

[16:04] <obra> seen luqui

[16:04] <jabbot> obra: luqui was seen 1 days 12 hours 37 minutes 54 seconds ago

[16:18] <eric256> anyone know the name of a web based linux config tool? i always forget its name ;(

[16:19] <xinming> eric256: webadmin?

[16:19] <PerlJam> eric256: try typing "web based linux config tool" into google.

[16:19] * xinming thinks webadmin might be the most famous one. :-/

[16:19] <PerlJam> xinming: It's the first link in google if he'd done what I said.

[16:20] <eric256> webmin..

[16:20] <eric256> PerlJam thats what i was searching with ;)

[16:20] <xinming> PerlJam: It's what I think when I saw he asked. ;-)

[16:20] <xinming> but maybe wrong... :-/

[16:21] <eric256> webmin is it. webadmin is something different... i worded my google query slightly different and didn't get that at all. lol

[16:24] <xinming> eric256: webmin is correct, I ever used this for over month when I was in BeiJing, But now, I prefer ssh instead. ;-)

[16:24] <eric256> yea but i need to do some stuff i ain good at..i'm hoping it will automate them. ;)

[16:24] * eric256 and FTP don't get along well at all

[16:26] * xinming prefer lftp as client and proftpd-mysql as server.

[16:26] <eric256> i can't seem to get any FTP setup to actualy work.

[16:27] <eric256> i'm just not realy a sysadmin at all. 

[16:33] <Khisanth> well ftp has fun issues with firewalls :)

[16:33] <theorbtwo> Try both passive and non-passive.

[16:33] <theorbtwo> Sometimes only one or the other will work.

[16:33] <theorbtwo> FTP is not a good protocol for the age of the NAT.

[16:34] <Khisanth> I don't think either of those will work if both side has a firewall

[16:34] <eric256> its not connecting. its setting up the FTP server.

[16:36] <theorbtwo> Would be likely, Khisanth.

[16:36] <theorbtwo> HTTP is really a much more sane design.

[16:36] <xinming> hmm, it both are behind the firewall, I'd prefer use http for serving files.

[16:37] <xinming> or do some port-map for ftp, But I don't know if it really works though. :-P

[16:37] <xinming> for http, just map the firewall 80 port into the server, that's all done.. IMHO

[16:38] <xinming> s/it/if/

[16:39] <theorbtwo> Or any other port, and give the port in the URL.

[16:39] * eric256 just needs point and click isntallation of FTP ;)

[16:39] <theorbtwo> FTP tries to use a seperate connections for data and control.

[16:40] <eric256> or maybe one that installs itself when i mumble an incantation

[16:40] <theorbtwo> That means it needs to be able to make another connection like this one, and associate them.  HTTP just needs the one.

[16:40] <xinming> in fact, for Unix users, scp isn't not that bad.

[16:40] <theorbtwo> Why do you need ftp for this?

[16:41] <integral> scp eats way more cycles than ftp though

[16:41] <eric256> for this?  /me needs it for work. i have a web developer who needs access to the files and be able to FTP them up and down.

[16:41] <xinming> eric256: try svn. ;-)

[16:42] <xinming> integral: well, For convience, ssh isn't that bad for the machine nowadays.

[16:42] <eric256> xinming... doesn't five me what i need i promise

[16:42] <xinming> what does five mean here? >_<

[16:43] <eric256> s/five/give/   f and g are next to each other ;)

[16:44] <theorbtwo> Ah, OK, that makes sense.

[16:44] <theorbtwo> What is your firewall?

[16:45] <eric256> this is all on the same network

[16:46] <eric256> though my lin box seems to have some sort of firewall of its own in place.  /me curses

[16:46] <xinming> iptables? ipchains?

[16:46] <Khisanth> tables probably

[16:47] <theorbtwo> Oh.

[16:48] <theorbtwo> Hm, you said it's not connecting at all, or just not working?

[16:48] <eric256> iptables

[16:48] <eric256> local wget on the machine gets the login page, anything elsewhere times out.. looking for the config for iptables

[16:48] <theorbtwo> You probably need to open up a hole in your firewall.  Possibly just get rid of it.

[16:49] <xinming> \

[16:49] <eric256> yea. /et/csysconfig/iptables found. ;)

[16:50] <Khisanth> well you need 21 open and posssibly some more if you are not using passive, if you are using passive you should probably specify a port range

[16:50] <eric256> now i fi only understood the syntax. lol /me laughs in misery. hehe computers are soo evil

[16:51] <eric256> turned off firewall and rejoiced

[16:51] <eric256> its behind at least 2 other firewalls anyway....who would need so many firewalls. arg ;)

[17:16] *** stef_ is now known as cognominal_

[17:16] <geoffb> eric256, defense in depth.

[17:17] * geoffb used to be a certified Paranoid Bastard, but now just doesn't have the time for it.

[17:17] <geoffb> Thankfully, I set up my firewalls will I was still a PB.  :-)

[17:18] <geoffb> Anybody here remember FSP?

[17:25] <theorbtwo> Each firewall is to firewall from different people.

[17:26] <theorbtwo> The last one to firewall you from everybody else one the network...

[17:38] <eric256> freaking thing keeps saying invalid login. arg.

[17:39] <Khisanth> which server are you using?

[17:39] <eric256> proftpd

[17:39] <Khisanth> and where is it getting the login/pass info from?

[17:39] <eric256> how do i know?

[17:41] <Khisanth> hmm that should be in the .conf I guess

[17:51] <eric256> yea. it doesn't like running in inetd, but standalone works fine ;) /me rejoices

[17:55] <svnbot6> r7808 | iblech++ | * Usual svn props.

[17:55] <svnbot6> r7808 | iblech++ | * t/pugsbugs/class_name_and_attribute_name_confliction.t: More investigation --

[17:55] <svnbot6> r7808 | iblech++ |   the main cause for failing is now clear (look inside the file).

[17:57] * eric256 chears hystericaly

[17:58] <geoffb> :-)

[18:00] <pmurias> hi

[18:00] <svnbot6> r7809 | stevan++ | Perl6::ObjectSpace -

[18:00] <svnbot6> r7809 | stevan++ | * added the symbol type, to represent variable names and 

[18:00] <svnbot6> r7809 | stevan++ |   optionally the assoiciate type

[18:00] <svnbot6> r7809 | stevan++ | * closures now need closure::params instead of list() for

[18:00] <svnbot6> r7809 | stevan++ |   its param list, and that list must be made up of symbols

[18:00] <svnbot6> r7809 | stevan++ |   instead of strings (which means we get (basic) type 

[18:00] <svnbot6> r7809 | stevan++ |   checking for free)

[18:00] <svnbot6> r7809 | stevan++ | * hash can now take any type for the key, but it will always

[18:00] <svnbot6> r7809 | stevan++ |   stringify that type, and not keep it around (this should be

[18:01] <svnbot6> r7809 | stevan++ |   fixed, but is okay for now)

[18:01] <svnbot6> r7809 | stevan++ | * added some more methods to the bootstrap file as well

[18:01] <eric256> iblech...i'm not sure your right...well i'm not sure your wrong. just when i was testing that example i was doing so with only one set of classes in the file.

[18:01] <eric256> hmm iblech isn't here....

[18:02] * eric256 wishes iblech where here...i just tested it and indeed it breaks even with only one set of classes so i think you might be following a different bug

[18:03] <geoffb> eric256, it's possible he may notice his name went by in iblechbot, but I don't know how careful he is about that

[18:05] <xinming> yeap. :-P iblech might misunderstand me. :-P

[18:07] <twobitsprite> I'm looking for resources on writing parrot asm, but I'm having a hard time finding an actual list of opcodes...

[18:08] <eric256> http://www.parrotcode.org/docs/  .. youve probably looked there, but just in case

[18:08] <PerlJam> twobitsprite: particularly http://www.parrotcode.org/docs/ops

[18:09] <PerlJam> oh, I guess that's empty now.

[18:09] <PerlJam> never mind, ignore me.

[18:09] <twobitsprite> yeah, I saw that, but I was confused by the notation... they notate opcodes as opcode(stuff, stuff)...

[18:10] <Limbic_Region> ok - anyone who knows/understand the Makfile.PL about?

[18:10] <twobitsprite> PerlJam, no, it's not empty...

[18:10] <PerlJam> mine is.

[18:10] <Limbic_Region> in particular, portability 

[18:11] <twobitsprite> well... they list, i.e. the opcode "bnot" in the notation "bnot(inout INT)"... is that the actual syntax? i.e. in my .pasm file, would I say "bnot(inout 4)"?

[18:11] <eric256> maybe compare http://www.parrotcode.org/examples/pasm.html to the docs so you get a feel for how the documentation works

[18:12] <twobitsprite> eric256, ahh ha... examples! :)

[18:12] <twobitsprite> thanks

[18:12] <twobitsprite> this should keep me busy for a while...

[18:13] <geoffb> twobitsprite, why are you working in raw PASM anyway?

[18:13] <eric256> warning /me doesn't know the difference between PIR, Parrot, PASM and a can of worms.

[18:13] <geoffb> Better to use PIR, for your own sanity.

[18:13] <twobitsprite> geoffb, I just wanted to play with it

[18:14] <twobitsprite> geoffb, er... PIR?

[18:14] <geoffb> Hey, if that's your -Ofun, go for it.  :-)

[18:14] <geoffb> PIR == Parrot Intermediate Representation.  It's higher-level, on top of PASM.  Makes it easier to work with.

[18:14] <eric256> so for perl6 we've now designed (we in no way including myself. ;) ) 3 languages? PASM,PIR, and Perl6?

[18:14] <Limbic_Region> where higher in higher-level is relative

[18:14] <Limbic_Region> ;-)

[18:15] <geoffb> Hence "higher" in stead of "high".  :-)

[18:15] <geoffb> s:3rd/ //

[18:16] <Limbic_Region> ok - so no takers on the portability inquiry of Makefile.PL?

[18:16] <geoffb> *la la la la la la la*

[18:16] <twobitsprite> I see

[18:17] <twobitsprite> all over the parrot site, they say the best way to help with parrot was to write asm code, to help test, etc... should I instead be using pir?

[18:17] <PerlJam> twobitsprite: WRT your question, no that's not the syntax.  you could use "bnot X" or "bnot(X)" where X is one of many things.

[18:17] <geoffb> leo, I think twobitsprite should be talking to you

[18:17] <PerlJam> twobitsprite: IN parameters are for input only, OUT are for output only, and INOUT do both.

[18:18] <PerlJam> twobitsprite: X could be an I-register or a P-register, etc.

[18:19] <leo> here I am

[18:19] <pmurias> Is there a short tutorial to perl6?

[18:20] <geoffb> twobitsprite, meet leo.   He's the guy you need to be asking about PASM and PIR . . . though he will probably want to take you to the parrot channel first

[18:20] * twobitsprite tried the parrot channel, only to find the void

[18:21] <geoffb> twobitsprite, not on this network.  irc.perl.org, I think.

[18:21] <leo> twobitsprite: #parrot is at pobox

[18:21] <Limbic_Region> twobitsprite - I thought #parrot was on a different network

[18:21] <twobitsprite> I see

[18:21] <eric256> that. seems silly

[18:21] <leo> irc.pobox.com

[18:22] <geoffb> leo, you might want to become op on #parrot on freenode, just so you can keep a topic in that channel pointing to the correct network

[18:22] <leo> I can try that - good idea

[18:23] <eric256> or we could stick a bot in there. 

[18:24] <PerlJam> the bot could hang out in #parrotsketch and rely the conversation for readonly access too.

[18:24] <PerlJam> :)

[18:25] <geoffb> Take it away, Eric the Orchestra Leader

[18:26] * eric256 looks around behind him....damn volunteer traps, i'm always falling into those

[18:26] <geoffb> ... -Onot_fun: porting perfectly decent SQL code to Oracle ...

[18:26] <geoffb> eric256, heh

[18:28] <pmurias> I'am thinking of writing a 1-2 page tutorial to perl6 for my english assigment , any sugestions?

[18:28] <PerlJam> eric256: PoCoIRC is your friend.

[18:29] <PerlJam> pmurias: Is your english assignment to write a technical document?

[18:29] <eric256> PoCoIRC? will it help me avoid traps? lol

[18:29] <pmurias> Not really?It's just a free topic one :)

[18:29] <geoffb> pmurias, take a look at some of the slideshows . . . doc/talks/ has some

[18:29] <eric256> lol. /me pictures the tortured look on pmurias' english teacher.

[18:29] <geoffb> :-)

[18:30] <eric256> is this the, "make the paper so boring she wont read it all" aproach?

[18:30] <pmurias> a bit

[18:31] <pmurias> The point of the assigment is to just write something usefull.

[18:31] <eric256> i would bet that your teacher doesn't include tutorials, technical manuals, or indexs as "free topic" material.

[18:31] * eric256 doesn't miss the days of writing papers even a little

[18:32] <pmurias> The point was to use engilsh as tool not the objective.

[18:32] <pmurias> So it should be ok.

[18:32] <eric256> ahhh. interesting teacher and assignment

[18:33] <pmurias> english isn't our native language.

[18:33] <geoffb> Yours is pretty good, pmurias 

[18:33] <eric256> ahhh. that makes more since

[18:33] <eric256> yea i wouldn't have guessed, obviously. ;)

[18:33] <xerox> 'useful' ;-)

[18:34] <pmurias> It would be usefull to hack ispell into BitchX

[18:34] <xerox> Try out Circe :-)

[18:38] <pmurias> How upto date to the perl6 definition is pugs 6.2.10?

[18:39] <eric256> both are moving targets.  perl6 isn't anywhere near completly specced out, but pugs keeps very close to the latest decisions on p6

[18:43] <PerlJam> somehow "moving target" seems like a tremendous understatement ;-)

[18:46] <eric256> "implementing perl6 with pugs is like trying to swat a fly with a chop stick" ;)

[18:46] <eric256> now *thats* a moving target. ;)

[18:47] <pmurias> pugs 6.2.10 isn't hopefully a moving target :) Unless you switch tarballs behinde the scene :)

[18:50] <PerlJam> eric256: Didn't you see the Karate Kid?  Catching a fly with chop sticks is so easy that Ralph Macchio could do it; swatting one shouldn't be any more difficult!  ;-)

[18:50] <eric256> pmurias...while 6.2.10 might not be moving..perl6 certainly is

[18:52] <pmurias> I'm grabbing perl 5.8.7 to compile the latest svn revision.

[18:52] <pmurias> I was just considering useing the 6.2.10 installed on by debian server box...

[18:52] * eric256 scratches his head.  what?  compile SVN or compile the newest 5.8.7?

[18:54] <pmurias> The latest pugs revision.

[18:54] <PerlJam> eric256: he's compiling Perl6::Pugs (or whatever the module name is) with perl 5.8.7

[18:54] <eric256> whats that have to do with perl 5.8.7?

[18:54] <pmurias> from the subversion repository

[18:54] <eric256> ohhhh

[18:54] <PerlJam> (I'm guessing)

[18:54] <pmurias> pugs requires 5.8.1 

[18:55] <pmurias> and 5.8.0 was included with slackware 9

[18:55] <eric256> then why are you grabbing 5.8.7? or you don't have perl at all yet?

[18:55] <eric256> ohhh.

[18:55] <PerlJam> why does pugs require 5.8.1?

[18:56] <pmurias> Don't no

[18:56] <obra> 5.8.0 was very buggy

[18:57] <pmurias> Makefile.PL used to say it requires 6.0.0 in the error message previously

[18:57] <pmurias> So i was scared off from the source packages untill recently

[18:58] <pmurias> :)

[18:58] <eric256> lol

[18:59] <PerlJam> oh well, I'm going to continually be blissfully ignorant of the whole thing as I never use a perl < 5.8.6 these days

[19:00] <eric256> pmurias just get a feather account from Juerd then you can always play with the newest pugs...its recompiled every 15 minutes (if there are changes)

[19:21] <ArchDist>  anyone have a suggested book on perl for non-programmers/beginners ?

[19:22] <geoffb> ArchDist, you may want #perl instead.  #perl6 is for development of the Perl 6 compiler

[19:22] <Khisanth> learning perl and beginning perl

[19:23] <Limbic_Region> ArchDist - http://perlmonks.org/index.pl?node_id=284175

[19:23] <Limbic_Region> perlbot learn perl

[19:23] <perlbot> http://learn.perl.org/library/beginning_perl/

[19:24] <ArchDist> geoffb: thanks !

[19:24] <geoffb> In the Perl Training BOF at OSCON Portland, it was pointed out that LP assumes the user programs in some other language already, which the authors freely admitted

[19:24] <geoffb> ArchDist, np

[19:25] <geoffb> hmmm . . . 

[19:25] <ArchDist> yeah LP is not great for non programmers and perl for dummies sucks

[19:26] <ArchDist> thanks !

[19:26] <geoffb> perlbot, #perl6 is for development of the Perl 6 compiler; #perl is for general Perl questions and discussion

[19:26] <perlbot> added #perl6 to the database

[19:26] <geoffb> perlbot, tell geoffb about #perl6

[19:26] <geoffb> I should have thought of that a long time ago

[19:27] <geoffb> Anyone know if there's a shorter way to give that command?

[19:28] <Khisanth> which?

[19:29] <geoffb> "tell nick about topic"

[19:29] <pmurias> Could i get a feather account Juerd ,please?

[19:29] <Khisanth> you could do perlbot #perl6 > geoffb

[19:29] <geoffb> perlbot #perl6 > geoffb

[19:29] <geoffb> perlbot #perl6

[19:29] <perlbot> for development of the Perl 6 compiler; #perl is for general Perl questions and discussion

[19:30] <geoffb> It would be nice if it left the leading "#perl6 is" in

[19:30] <geoffb> (and thanks, Khisanth )

[19:31] <Khisanth> perlbot: forget #perl6 

[19:31] <perlbot> removed #perl6 from the database

[19:31] <Khisanth> perlbot, #perl6 is #perl6 is for development of the Perl 6 compiler; #perl is for general Perl questions and discussion

[19:31] <perlbot> added #perl6 to the database

[19:31] <Khisanth> :P

[19:32] <geoffb> (w00t!  /me just changed made several different pieces of his code lie to the rest of the app, and it all just worked the first time.  Unbelievable.)

[19:32] <r0nny> yo

[19:32] <geoffb> Khisanth, :-)

[19:47] *** Lopo_ is now known as Lopo

[19:58] <geoffb> Man, my heart gets an adrenaline hit every time I have to drop a DB table . . . .

[20:00] <geoffb> Norm!

[20:00] <geoffb> er,

[20:00] <geoffb> nothingmuch@

[20:00] <nothingmuch> hi

[20:00] <nothingmuch> any news

[20:00] <nothingmuch> ?

[20:01] <geoffb> Not a huge amount.  Autrijus is hacking and docing, so all is good right now.

[20:02] <geoffb> And I'm multitasking $work, #perl6, and gjbforth, so as to reduce the $work pain.  :-)

[20:03] <nothingmuch> when work is a pain i actually spend less time on the compu

[20:03] <nothingmuch> work *is* a pain right now

[20:03] <nothingmuch> and I'm doing some catalyst stuff

[20:03] <nothingmuch> no brain power for anything else

[20:03] <geoffb> nodnod

[20:03] <nothingmuch> (computer related)

[20:03] <geoffb> That implies Catalyst doesn't require much brain power?

[20:03] <nothingmuch> instead i built some shelves and i'm replacing the straw seats in  our 11 year old chairs with wooden seats

[20:04] <nothingmuch> no, it means that after catalyst I have nothing left ;-)

[20:04] <nothingmuch> built shelves... beh

[20:04] <nothingmuch> sanded

[20:04] <geoffb> :-)

[20:04] <nothingmuch> and installed

[20:04] <nothingmuch> the seats require some sawing, but nothing complicated

[20:13] <svnbot6> r7810 | iblech++ | * Usual svn props.

[20:13] <svnbot6> r7810 | iblech++ | * t/syntax/unicode.t: Added tests for Unicode subroutines, methods, parameters

[20:13] <svnbot6> r7810 | iblech++ |   and placeholder variables ($^foo).

[20:13] <svnbot6> r7810 | iblech++ | * t/syntax/parsing/gt.t: While adding these tests I found a bug:

[20:13] <svnbot6> r7810 | iblech++ |     ~< foo bar>  # does not parse (as does +<...>).

[20:13] <svnbot6> r7810 | iblech++ | * t/pugsbugs/class_name_and_attribute_name_confliction.t:

[20:13] <svnbot6> r7810 | iblech++ |   * s/method BUILD/submethod BUILD/

[20:13] <svnbot6> r7810 | iblech++ |   * Removed the eval() guards, as these cause that no single .update method

[20:13] <svnbot6> r7810 | iblech++ |     is called (as the code inside the eval()s doesn't resolve the classnames of

[20:13] <svnbot6> r7810 | iblech++ |     its outer scope as classes, but as subroutine names --

[20:13] <svnbot6> r7810 | iblech++ |         class Foo {...};

[20:13] <svnbot6> r7810 | iblech++ |         eval 'Foo.new';  # parsed as Foo().new, not ::Foo.new

[20:13] <svnbot6> r7810 | iblech++ |   * Added inline XXX comments pointing to the "$var not captured" problems.

[20:13] <svnbot6> r7810 | iblech++ |     Also added some more comments.

[20:15] <nothingmuch> woah

[20:16] <xerox> (++)++

[20:16] <pmurias> Shoud a perl6 tutorial teach 'no strict' code

[20:16] <nothingmuch> pmurias: probably not

[20:17] <nothingmuch> the things that require unstricting are not what you teach in a tutorial

[20:17] <PerlJam> pmurias: depends on how the tutorial is bent.

[20:17] <stevan> is there such a thing in perl6?

[20:17] <pmurias> it wouldn't have to introduce my early on

[20:17] <PerlJam> stevan: sure.

[20:17] <stevan> hola nothingmuch 

[20:17] <nothingmuch> hola stevan 

[20:17] <nothingmuch> http://www.kiva.org/index.php

[20:17] <nothingmuch> boingboing is making me happy

[20:17] <nothingmuch> i thought it would be too much

[20:18] <PerlJam> pmurias: If it's a tutorial on "how to do perl6 one-liners" or "obfuscation in perl6", then no strict is probably okay  :)

[20:18] <stevan> PerlJam: what is no strict in perl6/

[20:19] <pmurias> Is there a way to read in input without the =$IN syntax?

[20:19] <PerlJam> stevan: while stricture is the default, perl certainly isn't going to hold you to it if you tell it not to.

[20:20] <PerlJam> pmurias: $IN.read() or some such.

[20:20] <pmurias> my $name = =$IN; # is strange indead

[20:20] <PerlJam> pmurias: (assuming you meant without unary =)

[20:20] <nothingmuch> hmm?

[20:20] <nothingmuch> unary = is lazy, isn't it?

[20:21] <integral> sure not in item context though?

[20:21] <stevan> PerlJam: well I guess I just didnt think there were strictures in perl6

[20:21] <nothingmuch> i would think 

[20:21] <nothingmuch> err, sorry

[20:21] <integral> *surely

[20:21] <nothingmuch> i would think it would simply generate a list

[20:21] <nothingmuch> that in scalar context becomes an array ref

[20:21] <nothingmuch> and this list contains $IN (no data read)

[20:22] <integral> hmm, I thought = was just the general read-and-advance for an iterator

[20:22] <pmurias> $IN.read() dosn't work

[20:22] <pmurias> :(

[20:22] <PerlJam> stevan: oh no.  perl6 will default to the moral equivalent of "use strict" unless you tell it not to (there are various ways) or you're writing something on the command line.

[20:22] <PerlJam> pmurias: maybe it's readlin()

[20:22] <PerlJam> pmurias: maybe it's unimplemented :)

[20:23] <nothingmuch> pmurias: look in t/builtins/io

[20:23] <pmurias> it's readline

[20:23] <pmurias> souns pythonic

[20:23] <stevan> PerlJam: I get all that,.. but I just dont recall reading anything which said "this will be only available under "no strict""

[20:23] <nothingmuch> we still have circumfix <>

[20:24] <PerlJam> stevan: as usual "evil behavior" will only be available under "no strict"  :)

[20:24] <nothingmuch> hmm.. maybe we don't. I did see it though

[20:24] <nothingmuch> somewhere

[20:24] <nothingmuch> it conflicts with <quote words> now

[20:25] <stevan> PerlJam: seems to me there is plenty of evil behavior available under strict too ;)

[20:25] <PerlJam> stevan: yeah, but it's differently evil.  Only truly evil stuff (like code that Damian would write) is available under "no strict"   ;)

[20:25] <pmurias> maybe 'use very strict;' should be implemented :)

[20:26] <nothingmuch> oh wait, filehandles in iterator context are read

[20:26] <nothingmuch> s03 on unary =

[20:26] <PerlJam> nothingmuch: yeah, but which is lazy?

[20:26] <nothingmuch> iterator context is always lazy

[20:26] <PerlJam> for $IN -> $line { ... }  # not lazy?

[20:26] <pmurias> why is not declaring variables in <10 line scripts considered evil ?

[20:27] <PerlJam> for =$IN -> $line { ... }  # lazy?

[20:27] <nothingmuch> yes

[20:27] <nothingmuch> for $in -> $line { }; # i'm not sure that work

[20:27] <nothingmuch> s

[20:27] <PerlJam> good.  I'm not confused (this week)

[20:27] <nothingmuch> but the second is definately lazy

[20:29] <PerlJam> nothingmuch: and  for *=$IN -> $line { ... }   # ?  :-)

[20:29] <nothingmuch> weep

[20:29] <nothingmuch> cry

[20:29] <nothingmuch> i haven't done any OO in perl 6 yet

[20:29] <r0nny> yo

[20:29] <nothingmuch> so i don't really remember

[20:29] <nothingmuch> can't find it now iether

[20:29] <PerlJam> And I guess  for **=$IN -> $line { ... }  # would read STDIN at compile time? ;)

[20:30] <nothingmuch> and I should really be finishing important stuff

[20:30] <nothingmuch> heh

[20:30] <nothingmuch> for BEGIN { *=$IN } -> $line { ... }

[20:30] <nothingmuch> the ircbots have a wonderful example

[20:30] <PerlJam> does that work?

[20:30] <nothingmuch> my $started = BEGIN { time() }

[20:30] <eric256> pmurias because 10 line scripts often grow later

[20:30] <nothingmuch> my $uptime = time() - BEGIN { time() };

[20:31] <eric256> plus habits learned in 10 line scripts are used later in bigger projects

[20:31] <nothingmuch> that is supposed to work

[20:31] <PerlJam> does anyone else think we should have a thunk operator that BEGIN,CHECK,INIT,END,etc. specialize to get their particular behaviors?

[20:32] <eric256> ?eval my $started = BEGIN { time() };   say "Took " ~ (time- $started) ~ "seconds to compile

[20:32] <evalbot_7810> Error:  unexpected "\"" expecting block construct, ":", block, "\\", "$!", "$/", "$", "\"", term postfix, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[20:32] <eric256> ?eval my $started = BEGIN { time() };   say "Took " ~ (time- $started) ~ "seconds to compile"

[20:32] <evalbot_7810> Took 0.047528seconds to compile bool::true 

[20:33] <azuroth> for =$IN lazy? does that mean it'll only try to read from it once every loop, instead of putting it into a big array and iterating...?

[20:33] <PerlJam> btw, I'm *so* glad that I'm not writing a parser for perl6 ;)

[20:33] <PerlJam> azuroth: aye.

[20:33] <r0nny> nothingmuch: do u know a good way, to eval files with a :lang<yaml> and fetch the result ?

[20:33] <azuroth> cool. just checking :-)

[20:33] <PerlJam> azuroth: reads happen as needed instead of all at once.

[20:34] <eric256> my $data = eval $file, :lang<yaml>   ?

[20:34] <kolibrie> think you need a slurp($file)

[20:34] <r0nny> azuroth: i broke Prelude.pm with a more recent version

[20:35] <azuroth> I don't mind :-)

[20:35] <nothingmuch> r0nny: no, i haven't done that yet

[20:35] <eric256> i assumed the file was in $file, not a file handle or name. but yes my $data = eval slurp($file), :lang<yaml> 

[20:37] <azuroth> is slurp lazy...? :D

[20:37] <r0nny> hmm

[20:37] <r0nny> odd

[20:38] * azuroth away, ad TAFE

[20:40] <r0nny> for some reason eval brekas if i call a method on a string like "filemane".fslurp where fslurp is a multi sub returns the result of slurp on a file 

[20:42] <r0nny> is there a way, to output Prelude.pm ?

[20:43] <svnbot6> r7811 | iblech++ | New docs/quickref/sub:

[20:43] <svnbot6> r7811 | iblech++ | * Moved some of docs/quickref/control into quickref/sub.

[20:43] <svnbot6> r7811 | iblech++ | * Documented basic declaration, named,positional and required,optional and

[20:43] <svnbot6> r7811 | iblech++ |   slurpy params, and specifying the declaration scope.

[20:43] <Juerd> autrijus++

[20:43] <Juerd> autrijus++

[20:43] <Juerd> autrijus++

[20:43] <webmind> heh

[20:48] <r0nny> again : is there a way, to output Prelude.pm ?

[20:50] <eric256> r0nny....what do you mean?

[20:50] <eric256> src/perl6/Prelude.pm

[20:51] <r0nny> it tells there is an error in prelude.pm, if i run a special script

[20:52] <r0nny> btw - is there a way to run pir files ?

[20:54] <r0nny> oh - parro just needed more time

[20:55] <r0nny> and it cant find open :/

[21:00] <xinming> a mouse just bit my finger... So... another sleepless night... :-/

[21:01] <eric256> r0nny...i don't think i'm alone when i say....????????? what?

[21:02] <r0nny> eric256: after it failed with pugs i used pugscc to generate a pir file, and ran it with parrot - the result was it couldnt find open

[21:02] <rafl_> Juerd: ping

[21:02] <Juerd> pong, but seeing autrijus do VB Rocketh

[21:02] <Juerd> not too responsive

[21:02] <Juerd> and typing while watching the beamer screen

[21:03] <Juerd> I have no idea if I make typos

[21:03] <Juerd> Can't blink, will miss slides

[21:03] <Juerd> s.will.would.

[21:03] <Limbic_Region> oh the PerlMongers meeting is going on right now?

[21:04] <Juerd> yes

[21:04] <rafl_> Juerd: I don't care as long as you read what I write. feather is there to do irc but it's for perl6 stuff only. Is it also OK to be on non-perl channels, etc?

[21:04] <Juerd> iff you are also on perl 6 channels, and active in them

[21:04] <rafl_> Hm.. autrijus should give a talk on our pm..

[21:04] <rafl_> autrijus: Hey, wanna give a talk for chemnitz.pm? ;-)

[21:04] <Juerd> his pugs talk is *the* *best* *talk* I've *ever* seen so far

[21:05] <rafl_> Where are the slides?

[21:05] <Juerd> scan logs for .xul

[21:05] <Juerd> But the slides are really not enough

[21:05] <rafl_> /lastlog xul gives me nothing.

[21:05] <xerox> Juerd: is there a video?

[21:05] <xerox> rafl_: pugscode.org -> slides ?

[21:05] <Juerd> I had seen them, but the experience of seeing autrijus do the entire presentation is... hard to describe

[21:06] <Juerd> xerox: nafaik

[21:06] <xerox> :(

[21:07] <eric256> http://colabti.de/irclogger//irclogger_log_search/perl6?search=xul&action=search&timespan=&text=checked

[21:09] <pmurias> Juerd could I have a feather account, please?

[21:09] <Juerd> pmurias: request it by email

[21:09] <Juerd> pmurias: include real name and requested username

[21:09] <Juerd> make sure the mail address stays valid for the rest of your life

[21:09] <Juerd> or at least feather's

[21:10] <rafl_> Juerd: again. Is ircing on nonperl6 channels OK on feather? Just to be sure.

[21:10] <Juerd> rafl_: 22:09 < Juerd> iff you are also on perl 6 channels, and active in them

[21:10] <Juerd> rafl_: I hoped that would be clear

[21:10] <Juerd> If not, please specify

[21:11] <rafl_> Juerd: Ok, overread it. I'm also on #perl6 and #parrot.

[21:11] <xerox> what is feather ?

[21:12] <Juerd> xerox: A machine

[21:13] <rafl_> feather.perl6.nl.

[21:16] <xerox> Oh!

[21:16] <xerox> autrijus: you posted a nymphaea shot in the Haskell presentation!  Cool, thanks!

[21:17] <eric256> Juerd is kind enough to donate shell accounts on it for us poor folks to play with feather on

[21:17] <integral> is there anyone planning to pugs things at LPW?

[21:17] <Juerd> eric256: practically, the entire machine is donated

[21:17] <Juerd> eric256: I don't use it for any business stuff. It's dedicated to Perl 6

[21:18] <Juerd> haskell talk now

[21:18] <eric256> Juerd: is there a way for me to run perl6 scripts as cgi scripts on my feather account?

[21:18] <Juerd> autrijus++  # three talks in a row

[21:18] <Juerd> eric256: see http://feather.perl6.nl/, the faq

[21:18] <geoffb>  How long is each one, Juerd ?

[21:18] <Juerd> CGI is language independent

[21:18] <Juerd> geoffb: Depends on the talk

[21:18] <Juerd> geoffb: pugs one was long, vb one was short

[21:19] <geoffb> ah

[21:19] <pmurias> I wrote first 75 lines of my perl6 tutorial :)

[21:19] <xerox> I mean the slide 251 of http://pugscode.org/talks/euroscon05/haskell.xul -- yay! :D

[21:19] <eric256> juerd. by CGI i meant how do i execute a script in on my feather account as a CGI.... i don't know how different to say this

[21:20] <eric256> we don't have cgi-bin folders so where would scripts go?

[21:20] <Juerd> eric256: Do the apache thing, find the cgi-bin folder.

[21:20] <Juerd> Run your own apache.

[21:20] <eric256> hmmm....if i must

[21:20] <Juerd> If you want to do more than static files, then yes.

[21:20] <Juerd> suexec sucks, error logs are global.

[21:21] <Juerd> So you have to have your own apache.

[21:21] <eric256> alright

[21:21] <geoffb> Juerd, is mod_proxy running on feather's main apache?

[21:21] <Juerd> geoffb: Yes

[21:21] <Juerd> geoffb: I'll allow .htaccess soon

[21:21] <geoffb> Then he can run his own apache, but proxy requests through, and outside users would never know.  :-)

[21:21] <Juerd> And you want mod_rewrite too, I guess ;)

[21:21] <geoffb> coo

[21:22] <geoffb> yeah, duh, been a while since I had to set that up

[21:27] <Juerd> done

[21:29] <geoffb> Juerd, just a random thought -- may want to note somewhere that people should through personal Apaches at non-conflicting ports, say 8000 + uid

[21:29] <geoffb> er throw

[21:29] <Juerd> geoffb: See the s/// in the instructions

[21:29] <Juerd> It's 7000 + uid, though

[21:29] <Juerd> Because uids start at 1000 ;)

[21:30] <geoffb> Juerd, ah, nevermind, I wasn't reading docs, just thought of that while doing something else

[21:30] <Juerd> I expect people to be able to read perl (and to do so)

[21:30] <geoffb> :-)

[21:35] <eric256> i get an error cannot open access.log file when trying the copy command

[21:36] <eric256> thats in refernce to http://feather.perl6.nl/ and directions to get my own Apache

[21:42] <Juerd>   

[21:42] <Juerd> eric256: Ignore it.

[21:43] <eric256> hah. i didn't even look i thought it didn't copy any files. /me slaps forhead

[21:46] <eric256> thanks for enduring my stupidity juerd ;)

[22:16] <svnbot6> r7812 | iblech++ | docs/quickref:

[22:16] <svnbot6> r7812 | iblech++ | * sub: Wrote about is rw, is copy, rebinding parameters

[22:16] <svnbot6> r7812 | iblech++ |   (sub foo ($var) { $var := $some_other_var }), and the Proxy class.

[22:16] <svnbot6> r7812 | iblech++ | * namespace: Minor improvements to the section about binding.

[22:16] <svnbot6> r7812 | iblech++ | * op:

[22:16] <svnbot6> r7812 | iblech++ |   * Added "eqv" to the list of ops.

[22:16] <svnbot6> r7812 | iblech++ |   * Clarified example usage of &item.

[22:16] <svnbot6> r7812 | iblech++ |   * Added example of &infix:<..> working with char ranges ("a".."z").

[22:41] <svnbot6> r7813 | stevan++ | Perl6::ObjectSpace -

[22:41] <svnbot6> r7813 | stevan++ | * added &is_empty to list (to make life easier)

[22:41] <svnbot6> r7813 | stevan++ | * opaque now enforces the use of symbol types in get/set_attr

[22:41] <svnbot6> r7813 | stevan++ | * added many more methods to the Bootstrap, I am about half-way

[22:41] <svnbot6> r7813 | stevan++ |   finished with converting Metamorph.pm. I have also added Perl 6

[22:41] <svnbot6> r7813 | stevan++ |   versions of each method as I go along, they could probably use

[22:41] <svnbot6> r7813 | stevan++ |   some work though.

[23:37] <r0nny> ping?

[23:38] <r0nny> is there a string method for prepending another string ?

[23:39] <geoffb> I dunno if it exists yet, but I'd guess .splice(0, 0, $prepend)

[23:51] <r0nny> OMG

[23:51] <r0nny> these is a evalfile stitting in prelude since ages :/

[23:52] <eric256> $x ~= "hello"

[23:53] <eric256> r0nny, sure, but how hard is it to make your own eval file?  sbu evalfile ($filename) { return eval slurp($filename) };

[23:53] <r0nny> eric256: it allways fails for a yaml file

[23:54] <r0nny> tells syntax error at prelude

[23:56] <r0nny> well - it dies on pir stuff

[23:56] <teddyns> hi all

[23:57] <teddyns> does anyone any idea when perl6 might be stable ?

[23:57] <r0nny> yeah

[23:57] <teddyns> about 3-4 months ?

[23:57] <r0nny> but they dont take my ideas very serious ;P

[23:57] <teddyns> :p

[23:57] <teddyns> just a guess ?

[23:57] <r0nny> dont guess

[23:58] <r0nny> expect nothing till it goes bang, and perl6 is there

[23:58] <teddyns> do u think is it ready for production ?

[23:59] <r0nny> no

[23:59] <r0nny> its not even fully implemented atm

