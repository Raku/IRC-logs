[02:08] <machack666> hey all

[02:09] <mugwump> hoesit!

[02:10] <machack666> good, good...

[02:11] <machack666> what's the status on 6.2.1?

[02:15] <machack666> is a junction a formal datatype, and if so, what it its class?

[02:15] <mugwump> but a junction is a superposition of objects!

[02:15] <mugwump> :)

[02:16] <machack666> we were discussing references of junctions earlier

[02:16] <mugwump> The P6FC still needs building, seen docs/src/ in pugs?

[02:18] <mugwump> see also src/Pugs/Context.hs (search for "Junction")

[02:18] <machack666> thx

[02:19] <mugwump> The P6FC may be built on that, however note that it is an inheritance tree where it should possibly be a role graph

[02:19] <machack666> I assume it's docs/src/Junc.pod I'm to be reading?  (What, pray tell is P6FC?)

[02:19] <mugwump> Well, the "FC" means foundation classes

[02:19] <machack666> gotcha

[02:19] <machack666> I'm still cutting my teeth on haskell, but I'll see what I can glean

[02:20] <mugwump> just empty your mind and look at the code ... ;)

[02:20] <mugwump> you have to think like a maths/compsci geek, like reading -> as "implies" or "derives"

[02:21] <machack666> do you know where autrijus is on creating the internals overview document he was talking about?

[02:21] * machack666 was a maths geek

[02:21] <mugwump> I haven't asked tbh

[02:21] <machack666> some of it is just getting the overall picture of how everything works internally

[02:22] <machack666> I don't have any familiarity with p5 internals, other than a basic knowledge of SV, AV, etc.

[02:22] <machack666> not that it is anywhere near the same thing.

[02:23] <mugwump> Hopefully autrijus' summary of the internals will very very enlightening.  I've got some overall stuff, and a bit of specific knowledge but it hasn't really "meshed" yet :)

[02:26] <machack666> my guess is that if we are really just spitting out an AST and executing it, then things like junctions are expanded as part of the tree generation process.  I'm not sure what primitives are supported at the AST level, but it seems like they would all have to be operators/types supported in parrot.

[02:26] * machack666 looks at what he just wrote, and wonders if it means anything.

[02:28] <machack666> src/Pugs/Context.hs is indeed enlightening

[02:31] <mugwump> that, Prim.hs and Eval.hs are an important trio

[02:31] <machack666> so what is Prim?

[02:31] <mugwump> defines language primitives (functions, etc).

[02:32] <machack666> looks like the referencing of junctions issue has been fixed

[02:32] <machack666> I will still see if a test exists

[02:32] <mugwump> issues seem to do that in this tree, it's scary

[02:32] <machack666> is isa() the preferred method of testing reference types?

[02:34] <mugwump> see t/builtins/hashes/isa.t, I guess so

[02:52] <machack666> isa doesn't work with junctions.  it'll have to be ref($j) eq 'Junction' or $j.ref

[02:52] <machack666> it tries to autothread the function call in the isa_ok case

[02:52] <machack666> pesky little varmits

[02:52] <machack666> ah...

[02:52] <machack666> when I thought it was fixed earlier, I was mistaken

[02:52] <machack666> I was running r1926, which had been installed on the system

[02:52] <machack666> there ref $j was 'Junction'

[02:52] <machack666> the current build still has problems

[02:52] <machack666> checked in 3 tests for junctions' reference types

[02:56] <machack666> anyone here who understands Prim.hs?

[02:59] <machack666> I'm wondering what the numeric part of the /op\d/ operator is.  It looks like the number of terms it swallows up

[02:59] <machack666> I'm going to go off of that assumption

[02:59] <machack666> since everyone else looks to be asleep

[03:01] <jabbot> pugs - 2136 - tests for references to junctions

[03:11] <jabbot> pugs - 2137 - Typo fix.

[03:34] <QMario> Hello everyone! :)

[03:36] <QMario> Is everyone sleeping?

[03:41] <QMario> \who

[03:41] <QMario> print "/who"

[04:30] <crysflame> hi

[04:30] <crysflame> yeah, autrijus should be awake soonish

[05:13] <obra>  

[05:24] <wolverian> interesting, obra 

[05:31] <jabbot> pugs - 2138 - clean up a bit

[05:43] <gaal> morning

[05:45] <Corion> r2138 - http://datenzoo.de/pugs/win2k.html - early morning smoke ;)

[05:52] <Corion> Hi Ho ! Hi Ho ! It's off to $work I go.

[06:10] *** {s}AINT is now known as chady

[06:13] <Alias_> autrijus: ping?

[06:25] <Alias_> autrijus: In case you see this later, you REALLY need to address some of those problems in Module::Install. I just found out it's incompatible with 5.005. eep

[06:30] * mugwump imagines autrijus saying "yeah yeah, patches welcome"

[06:30] <Alias_> Pity the guts are pretty opaque

[06:30] <Alias_> :)

[06:47] <nothingmuch> morning

[06:51] <masak> morning nothingmuch

[06:51] <nothingmuch> hola masak 

[06:52] <machack666> hey nm

[06:52] <nothingmuch> hola also machack666 

[06:52] <nothingmuch> #perl6.membersÂ».greet

[06:54] <machack666> what is the syntax for nesting arrays? shouldn't this work: my @a=(1,2,[3,4])?

[06:54] <machack666> ie, @a has 3 elems?

[06:55] <machack666> pugs insists on flattening this for me

[06:56] <machack666> my @b=(3,4);

[06:56] <machack666> my @a=(1,2,\@b);

[06:57] <machack666> this gives the expected nesting of the array in the third slot

[06:57] <machack666> but the direct nesting syntax does not seem to be supported.

[06:57] * castaway_ thought module::install was ingys baby?

[06:57] <castaway_> morning folks btw ,)

[06:57] *** castaway_ is now known as castaway

[06:58] * machack666 refers to S09

[07:05] <machack666> ok, it looks like in order to get a nested array, I'm having to do this:

[07:05] <machack666> (1,2,\[3,4])

[07:06] <machack666> which, unless the nesting rules of perl have changed (and I don't remember that being the case) this would be a bug

[07:08] <castaway> Ugh

[07:08] <castaway> looks like a bug to me

[07:09] <machack666> it's flattening (1,2,[3,4]) by itself.

[07:10] <castaway> are there no tests for it?

[07:10] <machack666> i'm not seeing any in t/builtins

[07:10] <machack666> getting ready to add some

[07:10] <castaway> :)

[07:15] <machack666> is (1,2,(3,4)) supposed to flatter in P6

[07:16] <castaway> dont look at me :) whats it do in perl?

[07:16] <castaway> I'd guess yes

[07:16] <machack666> it flattens

[07:17] <machack666> but we treat arrays and array references a lot more interchangably in p6

[07:17] <castaway> (3,4) is still just a list, no?

[07:17] <machack666> I suppose so

[07:25] <machack666> 8 tests should do it for now

[07:27] <castaway> :)

[07:29] <nothingmuch_> gugod: ping

[07:29] *** nothingmuch_ is now known as nothingmuch

[07:29] <machack666> (4 of which fail !!)

[07:29] <castaway> oops :)

[07:31] <jabbot> pugs - 2139 - Tests for nesting of arrays.

[07:31] <jabbot> pugs - 2140 - Renaming arrays/nesting.t to arrays/nest

[08:41] <jabbot> pugs - 2141 - * nested.t passes; Syn "," now always im

[08:41] <jabbot> pugs - 2142 - * numerous cosmetic source cleanups.

[08:43] * castaway thinks jabbot should report blame too :)

[09:11] <jabbot> pugs - 2143 - * flatten RValues at the right hand of a

[09:27] <nothingmuch> (gugod|autrijus|ingy)->pingf

[09:29] <castaway> :)

[09:31] <jabbot> pugs - 2144 - * remove the unexpected successes from f

[09:37] <Jonathan_> nothingmuch: Just trying to get smoke testing running. When I run yaml_harness.pl, it is trying to run the test scripts with /usr/bin/pugs, which doesn't work out too well on Win32. Ideas for where I should look to fix this?

[09:37] <nothingmuch> set the env variable HARNESS_PERL=$PWD/pugs

[09:37] <nothingmuch> or something like that

[09:38] <nothingmuch> don't forget PERL6LIB

[09:40] <nothingmuch> gaaah!

[09:41] <autrijus> Jonathan_: use util/run_smoke.pl

[09:41] <autrijus> nothingmuch: sorry, I'm out to dinner now, will be back in 20 mins

[09:41] <nothingmuch> autrijus: 30 seconds:

[09:41] <nothingmuch> where is s5.html?

[09:41] <autrijus> no idea... look at original s5 page?

[09:42] <autrijus> I need to run... &

[09:42] <nothingmuch> ciao

[09:47] <Jonathan_> Hmmm...smoke-run.pl sets HARNESS_PERL etc, but when I run the tests they still look for /usr/bin/pugs.

[09:47] <nothingmuch> http://www.ngw.nl/int/dld/s/spork.htm

[09:47] <Jonathan_> Seems that it is looking at the #! line at the start of the scripts.

[09:47] <nothingmuch> odd

[09:48] <Jonathan_> Very.

[09:48] <Jonathan_> Wonder if I've got older version of some test harness or something.

[10:01] * nothingmuch installs all of spork and friends from svn.kwiki.org

[10:10] <Jonathan_> Aha, Test::Harness upgrade did it.

[10:16] <nothingmuch> Jonathan_: yay

[10:18] <Jonathan_> I'll see what HTML is churns out, then I'll set something up to FTP it up to my site.

[10:19] <Jonathan_> Then I will have to do some real work. Ugh.

[10:19] <nothingmuch> rsync with an ssh keys is probably easier

[10:19] <nothingmuch> html is spat out to STDOUT by testgraph.pl

[10:19] <nothingmuch> and due to a clunky old interface it also creates a 'util/testgraph.css'

[10:20] <Jonathan_> I'm using the run-smoke.pl that Autrijus suggested, so I think that will collect it nicely into a folder I gave it.

[10:23] <nothingmuch> lets hope

[10:23] <nothingmuch> gaaah

[10:23] <nothingmuch> Spork::S5 is still not workin

[10:23] <nothingmuch> g

[10:42] <autrijus> nothingmuch: you can drop ::S5 and use normal spork instead

[10:42] <nothingmuch> but it's not as pretty

[10:42] <nothingmuch> i know

[10:43] <autrijus> well there's other spork themes that can be pretty

[10:43] <autrijus> I have no idea what s5.html are you talking about though.

[10:43] <nothingmuch> templates/s5/s5.html

[10:43] <nothingmuch> s/templates/template/;

[10:43] <nothingmuch> i ktraced a bit

[10:43] <nothingmuch> and it's looking in the wrong places

[10:44] <nothingmuch> tried to fix that, and i have no CSS

[10:44] <nothingmuch> gave up

[10:44] <nothingmuch> btw, how does kwid fit into this?

[10:45] <nothingmuch> afaict Spok.slides is ~~ kwid

[10:45] <autrijus> nothingmuch: Spork::Formatter::Kwid let you write kwid instead of spork

[10:45] <autrijus> in Spork.slides

[10:45] <nothingmuch> ah

[10:45] <autrijus> main difference being ``

[10:45] <nothingmuch> so they are different

[10:45] <autrijus> instead of [=...]

[10:45] <nothingmuch> okies

[10:46] * autrijus naps some more. brb...

[10:46] <nothingmuch> ciao

[10:47] <nothingmuch> gah! header/footer are missing from slide1a.html

[10:50] * castaway curses oracle.

[11:01] <jabbot> pugs - 2145 - * `=cut` without a newline at EOF is now

[11:01] <jabbot> pugs - 2146 - * Setting `$*CWD` to invalid directory i

[11:01] <jabbot> pugs - 2147 - * `'key' => val` now works as named para

[11:13] * Alias_ pokes autrijus

[11:13] *** chady is now known as chady_

[11:20] * castaway nudges theorbtwo 

[11:22] * castaway wonders if its weekend yet

[11:23] * theorbtwo hugs castaway.

[11:24] * castaway hugs back.

[11:24] <castaway> Can you close the Opera on insel, please?

[11:38] <Daniel_Nee> Hi, Autrijus: Could you check the email I just send to you, Thanks.

[11:48] <Alias_> So... anyone bored?

[11:50] <castaway> wish I were..

[11:51] <nothingmuch> i hate computers

[11:51] <nothingmuch> i hate software

[11:51] <nothingmuch> i hate system administration

[11:54] * theorbtwo hates not having any money.

[11:59] <nothingmuch> is it so hard to include ssmtp in the worlds most popular distro, for crying out loud?!

[11:59] * theorbtwo wonders what distro nm is talking about.

[11:59] <nothingmuch> fedora

[12:00] <theorbtwo> debian++

[12:00] <nothingmuch> indeed

[12:00] <nothingmuch> especially for work, where you need something that works

[12:00] <nothingmuch> but at my work place everyone knows redhat if at all

[12:00] <nothingmuch> and fedora is the next closest thing

[12:00] <Jonathan_> http://www.jwcs.net/~jonathan/perl6/smokes/win32/

[12:01] <Jonathan_> Should now generate daily, after the binary build.

[12:01] <theorbtwo> nothingmuch, do you know if stephan is interested in more people?

[12:02] <nothingmuch> you mean stevan? actually the reason he initially wanted to remain anonymous was that he isn't really

[12:02] <nothingmuch> and autrijus didn't know he didn't want it to be too public

[12:02] <castaway> more people for?

[12:07] <theorbtwo> Oh.

[12:07] <theorbtwo> Nevermind then.

[12:07] <nothingmuch> are you on all those social networks?

[12:07] <nothingmuch> i have some freelance acquaintances which took LinkedIn very seriously

[12:08] <theorbtwo> I'm on LinkedIn via Gaal, I think, but I haven't taken it too seriously.

[12:08] <theorbtwo> I hate working, and I don't think working remotely will work very well for me.

[12:09] <nothingmuch> have you worked since coming to .de?

[12:09] <theorbtwo> But I'm in rather a situation where I need the money.

[12:09] <theorbtwo> I did some remote work for my parents for a while, but it didn't work very well.

[12:10] <theorbtwo> I'm not very good at working in such a situation, and they weren't very good at working with me.

[12:11] <theorbtwo> I doubt I can find work here, though, as I don't speak enough German to ask for directions to the office, much less get through an interview and any sort of meeting.

[12:12] <castaway> You could do what i did.. (look up US companies)

[12:12] <theorbtwo> Also, my visa explicitly prohibits me from working, meaning that they'd have to want me enough to go to the trouble of getting me a work permit.

[12:12] <theorbtwo> castaway, you did that, but did you use German at that first job?

[12:13] <castaway> No

[12:13] <castaway> (well, eventually, but not to start with)

[12:13] * kungfuftr notes that sophos are currently looking perl programmers in the UK

[12:13] <castaway> yeah, BTDT

[12:13] <kungfuftr> as well as vancouver iirc

[12:14] <theorbtwo> Moving to the UK would be great, but I don't think I can make a livable wage, and they've already interviewed and not hired Jess.

[12:15] <theorbtwo> (No wonder you're still looking to hire if you get wonderful candidates and don't hire them...)

[12:15] <kungfuftr> theorbtwo: Jess?

[12:15] * castaway raises her hand.

[12:15] <Alias_> Jess?

[12:15] <Alias_> What's with all these UKians in Germany without jobs?

[12:16] <castaway> Mostly due to a stupid misunderstanding (or 2).. IMO

[12:16] <kungfuftr> castaway: which post?

[12:16] <castaway> "all" ?

[12:16] <theorbtwo> She has a job.  I do not, and am American, not Birtish.

[12:16] <Alias_> I'm looking at a UKian in Germany called Jody to fly over here to .au

[12:16] <castaway> "Senior Perl Developer" or some such, several months back

[12:17] <castaway> maybe I should have tried to rectify it..

[12:17] * castaway shrugs

[12:17] <kungfuftr> castaway: any idea which department?

[12:17] <theorbtwo> AV.

[12:17] <kungfuftr> Alias_: ah, knewt

[12:17] <Alias_> yes

[12:18] <castaway> Umm, not off hand.. 

[12:18] <Alias_> I have to ask, but did want to do it to knewts face

[12:18] <theorbtwo> AV research, I think.

[12:18] <Alias_> Is "Jody" a guy or a girl :)

[12:18] <kungfuftr> guy

[12:18] <Alias_> I'm thinking guy?

[12:18] <Alias_> right

[12:18] <Alias_> Anyone of you worked with or know him?

[12:18] <kungfuftr> nice bloke, met him a few times at london.pm meets

[12:19] <Alias_> I need to convince my partner we should stump up the money, but he's saying that he has only one job on his CV...

[12:19] <theorbtwo> castaway, you should do something pugsy and put yourself in AUTHORS, then everybody will know your name from playing hangman.

[12:19] <Alias_> His CPAN modules look OK, but not large of spectacular

[12:19] <castaway> ah, Systems Development (with a Jeremy Smith)

[12:20] <kungfuftr> Alias_: all depends what you're after at what sort of price

[12:20] <castaway> in the Virus lab

[12:20] <kungfuftr> castaway: ah, they are picky, tbh

[12:20] <theorbtwo> kungfuftr: Is another department also looking for perl people?

[12:20] <castaway> any there that are less picky? (and arent likely to figure out its the same person? :)

[12:21] <kungfuftr> theorbtwo: yeah, my department

[12:21] <castaway> which is? :)

[12:21] <kungfuftr> Web

[12:21] <kungfuftr> =0)

[12:21] <castaway> Hmm.

[12:22] <Alias_> kungfuftr: I need to dump someone onto a TT/large-OO/mod_perl project and 3+ months to help get it out the door

[12:22] <kungfuftr> Alias_: local or remote working?

[12:22] <Alias_> here in Syd

[12:22] <Alias_> local

[12:22] <Alias_> I don't need brilliance, just speed and competance

[12:23] <kungfuftr> Alias_: independent contractor?

[12:23] <Alias_> employee...

[12:23] <Alias_> well... it's a bit flexible

[12:23] * kungfuftr has a ponder

[12:23] <castaway> bit far away, that

[12:23] <Alias_> But in order to stay in .au and work for more than 3+ months, the job needs to be salary in order to make the working visa stick

[12:24] <castaway> at least you've thought of that

[12:24] <theorbtwo> kungfuftr: She has lots of IT experience, speaks German like a native, is a saint and a pmdev on perlmonks, is CPANed.

[12:24] <castaway> kungfuftr: also in Abingdon ?

[12:24] <kungfuftr> castaway: yeah, where i am currently sitting

[12:25] <kungfuftr> Alias_: there's a few NZ folks might be up for it

[12:25] <theorbtwo> http://www.sophos.com/companyinfo/careers/uk/perlprog.html, I assume?

[12:26] <kungfuftr> yup

[12:27] <kungfuftr> castaway: if you're intrested, lemme know.

[12:27] * kungfuftr & #lunch

[12:27] <Alias_> kungfuftr: names?

[12:27] <Juerd> Anyone here read Perl Medic?

[12:35] <kungfuftr> Alias_: ask mugwump, he's got a btter idea of locals

[12:35] <kungfuftr> Juerd: yup

[12:35] <Alias_> ok

[12:36] <kungfuftr> mugwump: OI, wake up biotch

[12:36] <Alias_> I wish we had purl

[12:37] <Juerd> kungfuftr: What's your opinion?

[12:38] <Juerd> To be honest, I had high expectations and was rather disappointed.

[12:38] <kungfuftr> Juerd: it's not bad, but it's a little too low level, I was mainly concerned about a very huge legacy system and disecting it peice by peice, which it didn't really cover

[12:39] <kungfuftr> castaway: ullo?

[12:39] <Juerd> It doesn't live up to its promises either

[12:39] <Juerd> Like writing better tests, writing better documentation

[12:39] <Juerd> It handles the basics of writing tests and documentation, but doesn't explain how best to

[12:40] <kungfuftr> Juerd: i found the business reasons for doing things a lot more intresting that the technical stuff in the book

[12:40] <Juerd> Me too

[12:40] <Juerd> But that's just one chapter

[12:40] <kungfuftr> yar

[12:40] <kungfuftr> sophos++ # company safari account

[12:40] <kungfuftr> =0)

[12:40] <Juerd> And could have been summarized in two or three pages

[12:41] <Juerd> I for a change bought the dead tree version

[12:41] <Juerd> Which I now regret

[12:41] <Juerd> This isn't a book I will be reading again and again

[12:41] <Juerd> Or be using as a reference

[12:42] * Juerd has a safari account, even

[12:46] * Limbic_Region has spent next to no money on books or DVDs in the last year but typically always gets dead tree versions

[12:46] * Limbic_Region is a bit of a bibliophile

[12:47] <Limbic_Region> theorbtwo - WRT Jess getting in the Authors file so everyone will know her, diotalevi was recently denied a job because he didn't have enough real world Perl experience - go figure

[12:48] <theorbtwo> Ugh.

[12:48] <Juerd> Whuh?

[12:49] * Alias_ & # home

[12:49] <Juerd> Limbic_Region: Do you know how this level of experience was measured?

[12:49] <Limbic_Region> Juerd - the real problem was one of awareness - or lack of it

[12:49] <Limbic_Region> company x wasn't even aware of CPAN

[12:49] <Juerd> Impressive.

[12:50] <castaway> Limbic_Region: I wonder how they figured thaht?

[12:50] <Limbic_Region> apparently there is a parallel universe that is completely unaware of ours castaway

[12:50] <castaway> Most of mine has been personal and not work related

[12:50] <castaway> mebbe he didnt put enough on his CV

[12:51] <Limbic_Region> castaway - 99% of mine has been personal and not work related, but I doubt I would have a problem convincing someone of my real world experience

[12:51] <Juerd> I've been denied Jr programmer jobs several times because I'd be overqualified

[12:51] <Limbic_Region> castaway - I doubt that

[12:52] <Juerd> And I got one job (which I had to deny because of my health) mostly based on my public Perl stuff

[12:52] <castaway> Juerd: yeah, i always wondr whether those are worth applying for..

[12:52] <Juerd> castaway: Which those?

[12:53] <castaway> Junior jobs

[12:53] <Juerd> Apparently not

[12:54] <Juerd> They don't want people who are good at what they're doing, because they won't "fit in the team"

[12:54] <castaway> odd

[12:54] <Juerd> Heard that three times now.

[12:54] <Juerd> They were afraid I'd eventually take a lead role.

[12:54] <castaway> which makes them sound like they want a bunch of people who have no clue?

[12:54] <Juerd> Indeed

[12:54] <Juerd> I asked the third that question almost literally

[12:55] <Juerd> Because it was the third in a row, and it really got me angry then

[12:55] <castaway> I can see their concern, but if you're applying, surely its because thats what you want to do, and not because you'Re hoping to advance quickly afterwards

[12:55] * castaway has no aspirations to become a leader/manager or some suxh

[12:55] <castaway> what did they say?

[12:56] <Limbic_Region> Juerd - I had that problem when I was looking for a part-time job to supplement my income

[12:56] <Juerd> They said that basically, they were indeed looking for people who would just code as was structured by others. In other words: translate diagrams into Perl. The difference between sr and jr programmers was, according to them, that sr got something to say in the design process and jrs were just typists who know Perl.

[12:56] <Limbic_Region> I kept saying I don't care how much I make since it isn't my primary vocation

[12:56] <Juerd> The sort of thing we usually call code monkeys :)

[12:56] <castaway> some people actually like that kinda job.. 

[12:56] <Juerd> Had I known that before, I would never have applied for those jobs, because that kind of work is not what I was looking for.

[12:58] <castaway> (otoho depends on the level of the "design process" ,)

[12:58] <Juerd> castaway: And re aspirations: I had none either, but it's apparently in any intelligent programmer's nature to want to influence design decisions. And I think they're right.

[12:58] * Limbic_Region is glad he doesn't program for a living and has sympathy/empathy for you guys

[13:00] * castaway nods at Juerd

[13:00] <castaway> I was assuming they meant "we'll tell you what it does, you figure out how and do it" .. 

[13:01] <Juerd> I really wanted to have that job in Amsterdam, even though it was a two hour drive away from home.

[13:01] <Limbic_Region> oh, you have got to be kidding me

[13:01] <Limbic_Region> Yahoo let's me receive an email with a particular attachment, but when I try to forward it to my gmail account it bounces for an illegal attachment

[13:02] <Limbic_Region> what kinda crap is that

[13:04] <castaway> broken crap?

[13:04] <Limbic_Region> no - it was bounced by their spam filters apparently - but only on outbound

[13:09] <Juerd> re

[13:21] <jabbot> pugs - 2148 - * Index construct in slices now defaults

[13:21] <jabbot> pugs - 2149 - * mark two other tests as working.

[14:01] <jabbot> pugs - 2150 - * `**` no longer truncates the exponent 

[14:11] <jabbot> pugs - 2151 - * use a slurpy read for t/force_todo

[14:11] <jabbot> pugs - 2152 - * unmark the one unexpected success

[14:31] <jabbot> pugs - 2153 - * add the `make smoke` target.

[14:51] <jabbot> pugs - 2154 - * use a working form to test map on func

[15:11] <jabbot> pugs - 2155 - * slurpy params now applies *-flattening

[15:41] <jabbot> pugs - 2156 - * code blocks as subroutine arguments no

[15:50] <Corion> Weird. Something really messes up my source tree to the point that ghc doesn't want to link Pugs anymore. Wiping src/ and checking it out again fixes that.

[15:50] <Corion> (even though "svn status" tells of no differences)

[15:52] <Corion> Heh. "pugs: src/Pugs/Prim.hs:981:13-36: Non-exhaustive patterns in lambda" for t\builtins\not.t

[15:54] <theorbtwo> Somebody should make that general.

[15:54] <theorbtwo> Sadly, this is easier said then done.

[15:58] * Corion reads the backlog to figure out theorbtwos context

[15:58] <theorbtwo> The patterns around line 981 of src/Pugs/Prim.hs

[15:59] <Corion> theorbtwo: Ah. I didn't look at the source code, just at the output of the smoke

[15:59] <Corion> (black smoke, currently :) )

[16:01] <jabbot> pugs - 2157 - * Implement throws_ok

[16:01] <jabbot> pugs - 2158 - * eval_haskell errors are now catchable.

[16:01] <theorbtwo> D'oh!

[16:01] <nothingmuch> eh?

[16:01] <theorbtwo> I just made almost the same edit as autrijus just did.

[16:02] <theorbtwo> I just didn't check in quite soon enough.

[16:02] <crysflame> heh

[16:02] <nothingmuch> stevan: ping

[16:03] <Corion> #perl6 groupthink is happening

[16:04] * theorbtwo pings Autrijus.

[16:05] <nothingmuch> anybody know where Spork-S5Theme is?

[16:05] <nothingmuch> i found everything else, but not that

[16:10] * autrijus pongs.

[16:10] <theorbtwo> Should eval_haskell be catchable or self-catching?

[16:11] <autrijus> nothingmuch: it's in /gugod/Spork-S5/lib/Spork/S5Theme.pm

[16:11] <jabbot> pugs - 2159 - Return useful error message.

[16:11] <autrijus> theorbtwo: that is an excellent, excellent point :)

[16:11] <Corion> I'd assume catchable but not self-catching

[16:11] <nothingmuch> ah, on svn.kwiki.org?

[16:11] <autrijus> theorbtwo: it should self-catching just like normal eval""

[16:11] <autrijus> nothingmuch: something like that

[16:11] <theorbtwo> OK.

[16:11] <autrijus> I think. which means my first stab is wrong

[16:11] <Corion> Hmmm. Yeah, making it just like perl_eval is a better idea.

[16:11] <autrijus> so please fix it :)

[16:11] * nothingmuch mutters something about releasing modules so that they are accessible before telling people to use them

[16:12] <autrijus> I'm going through the remaining failures now

[16:12] * theorbtwo pings "gcomnz", "mattc", and "tobez".

[16:16] <autrijus> ping(all<gcomnz mattc tobez>)

[16:16] <nothingmuch> autrijus: do you remember which plugin class (spork? kwiki? spoon? spiffy? what?) implements the extraction of __some/path/file.txt__?

[16:17] <theorbtwo> Allo, nr.

[16:17] <autrijus> nothingmuch: Spoon I think. not too sure

[16:18] <nothingmuch> autrijus: thanks

[16:18] <autrijus> np

[16:19] <nothingmuch> ah, Installer has a method... a clever one

[16:22] <nothingmuch> ingy++; # readable cod

[16:25] <theorbtwo> How can I put more then one statement in a case foo of ... case without introducing a new level of monadicness?

[16:25] <nothingmuch> gah, lack of docu

[16:25] <nothingmuch> autrijus: mind if i bug you a bit about this, to keep going fast?

[16:25] <ninereasons> hi theorbtwo 

[16:25] <autrijus> nothingmuch: I don't know anything about it really :)

[16:25] <autrijus> theorbtwo: just use another do

[16:25] <nothingmuch> oh well

[16:26] <ninereasons> you're feeling better I hope, autrijus ?

[16:26] <autrijus> theorbtwo: and omit the "return" from lhs of case

[16:26] <autrijus> ninereasons: yeah, quite a bit better, I think

[16:26] <nothingmuch> for some reason plugin-classes is ignored when extracting files, but not when trying to generate

[16:30] * nothingmuch feels so stupid when trying to figure out large apps

[16:30] <nothingmuch> always the "why didn't I think of that" feeling

[16:31] <autrijus> heh. it can't be harder than hacking in .assuming :)

[16:32] <nothingmuch> autrijus: dense code is also frustrating

[16:32] <nothingmuch> oh, I see... sub register isn't being called at all

[16:33] * nothingmuch hopes this fixes it

[16:34] <nothingmuch> i need a new computer. It can't handle more than 30 windows well with expose

[16:35] <nothingmuch> blammo

[16:38] <theorbtwo> Yey, t/unspecced/eval_haskell 3 now passes.  Now I have to see why 4 fails.

[16:41] <jabbot> pugs - 2160 - * precedence.t all passes; comma is no l

[16:41] <jabbot> pugs - 2161 - * hyperops now extends to the longer, no

[16:41] <Corion> r2156 - http://datenzoo.de/pugs/win2k.html - some more breakage than earlier

[16:42] <ingy> hi nothingmuch 

[16:42] <theorbtwo> Woo, all four pass, time to ci.

[16:43] <autrijus> theorbtwo++

[16:45] <ingy> nothingmuch: are you fighting with Spoon?

[16:51] <theorbtwo> Hm, somebody should fix pugscode.org's DNS so that it works (and not just www.pugscode.org).

[16:52] <autrijus> hm? it worksforme

[16:52] <Limbic_Region> http://pugscode.org and http://www.pugscode.org both work fine for me

[16:52] <theorbtwo> Hm, something being screwy with my DNS wouldn't be very surprising.

[17:01] <jabbot> pugs - 2162 - More eval_haskell fixes: Now passes all 

[17:01] <jabbot> pugs - 2163 - * `$x = 1|2; $x = 3` no longer treats `1

[17:21] <autrijus> woot, I implemented junctive types.

[17:21] <autrijus> (neccessary now we need to say Any|Junction instead of Any)

[17:27] <Corion> r2163 - http://datenzoo.de/pugs/win2k.html

[17:27] *** Corion changes topic to: pugscode.org Â«Overview Journal LogsÂ» | r1773/winxp: 587/4256 smoke/win2k (occasional): http://xrl.us/fqum (114/4369, r2163) Mac OS X (62/4459, r2116) | pugs.kwiki.org

[17:28] <Corion> &

[17:36] <nothingmuch> ingy: i managed, actually

[17:36] <nothingmuch> pretty fast

[17:36] <ingy> ok

[17:36] <ingy> Sporking?

[17:36] <nothingmuch> very readable code

[17:37] <nothingmuch> ingy++

[17:37] <nothingmuch> yup

[17:37] <nothingmuch> i was thinking of maybe completely redoing Spork::Config so it makes more sense

[17:37] <nothingmuch> ~/.sporkrc/config.yaml is used to generate ./config.yaml

[17:37] <nothingmuch> ./config/config.yaml doesn't exist, since it's not relevant per sÃ©

[17:37] <nothingmuch> and ./config.yaml is guessed, not hard coded (user, copyright year, etc)

[17:37] <nothingmuch> makes sense?

[17:37] <ingy> yeah

[17:38] <nothingmuch> so i'll naturally start using freepan for that

[17:38] <nothingmuch> (and while I'm at it everything else too)

[17:38] <nothingmuch> how do I do that?

[17:38] <ingy> one sec

[17:41] <jabbot> pugs - 2164 - * junctive types landed.

[17:51] <jabbot> pugs - 2165 - * the `^` junction opertors now autothre

[17:51] <machack666> t/junctions/associative.t 10..14 are failing.

[17:51] <machack666> Are those bunko tests?  (I was the one to write them, wouldn't mind a second look)

[17:54] <autrijus> hm?

[17:54] <autrijus> those are bunko tests. :)

[17:54] <autrijus> one(one(@a), one(@b)) is not one(@a, @b).

[17:56] <Limbic_Region> machack666 - out of curiosity, did you dream those tests up yourself or did you get them from an A/S/E or perhaps something on p6.L or maybe somewhere else?

[17:57] <autrijus> we are talking to /dev/null :)

[17:57] <Limbic_Region> the point being if we find old/incorrect information out there we should make a best effort to rectify it

[17:57] <Limbic_Region> duh

[17:57] <Limbic_Region> thanks autrijus

[17:57] <autrijus> np :)

[17:57] <Limbic_Region> perlbot has a tell feature though

[17:58] <Limbic_Region> perlbot tell machack666 about Did you dream those tests up yourself?  autrijus says they are wrong but if you got them from somewhere (A/E/S, p6.l, etc) we should try to correct them if possible

[17:58] <perlbot> Did you dream those tests up yourself?  autrijus says they are wrong but if you got them from somewhere (A/E/S, p6.l, etc) we should try to correct them if possible isn't something I know about, Limbic_Region

[17:59] <Limbic_Region> perlbot  machack666 > Did you dream those tests up yourself?  autrijus says they are wrong but if you got them from somewhere (A/E/S, p6.l, etc) we should try to correct them if possible

[18:00] <Limbic_Region> ok - that appears to have worked

[18:01] <simcop2387> Limbic_Region: what are you trying to get perlbot to do? talk to someone for you? you'll have to teach it that first

[18:01] <simcop2387> e.g. perlbot learn blahblahblah as Did you....

[18:01] <simcop2387> perlbot blahblahblah > machack666

[18:01] <perlbot> blahblahblah isn't something I know about, simcop2387

[18:01] <ninereasons> how do you leave a "pounce" or memo for someone to see when they rejoin, simcop2387 ?

[18:01] <simcop2387> don't think perlbot can do that

[18:02] <simcop2387> perlbot help

[18:02] <perlbot> Syntax: (fact) :: tell (who) about (what) :: (who) > (what) :: learn (what) as (info) :: relearn (fact) as (info) :: facts (search term) :: shorten (url) :: shorten it :: search (module) :: docs (module) :: perldoc -f (function) :: math :: fortune :: flip :: host (type) (record) :: rot13 :: roll (die) :: tempconv (temp) :: scramble (text) :: 8ball :: slap :: diss :: what time is it :: highest karma  :: lowest karma

[18:09] * autrijus works on lvalue pairs...

[18:11] <jabbot> pugs - 2166 - * remove fp

[18:11] <jabbot> pugs - 2167 - * add back examples/output/fp/fp

[18:11] <autrijus> done!

[18:13] <rindolf> Hi all!

[18:13] <rindolf> autrijus: here?

[18:13] <autrijus> yes.

[18:14] <rindolf> autrijus: you got a bad review of Module::Install: http://cpanratings.perl.org/d/Module-Install which raises some questions.

[18:15] <autrijus> rindolf: yeah, Alias has pinged me about it.

[18:15] <rindolf> autrijus: OK.

[18:15] <rindolf> autrijus: do you need help with Module::Install?

[18:16] <obra> Alias' issue with M::I is that it's broken on 5.5?

[18:16] <autrijus> yes.

[18:16] <autrijus> it's a compound issue

[18:16] <autrijus> because PPI wants a newer File::Spec than 5.5's

[18:16] <autrijus> and he did not include EU::AI as suggested

[18:17] <obra> Oh.

[18:17] <autrijus> but rather used the auto-download script that was marked as obsolete

[18:17] <clkao> i thought he now does.

[18:17] <autrijus> well, if he now does, great.

[18:17] <clkao> at least for class::autouse. i asked him to do so

[18:18] <autrijus> not for PPI.

[18:18] <autrijus> so that makes the M::I process broken.

[18:18] <obra> Does he have a reason?

[18:18] <Limbic_Region> simcop2387 I think I just picked the wrong syntax, the second attempt appears to have worked

[18:18] <autrijus> I don't quite know how to do. reject 5.5 for EU::AI autodownloader block

[18:18] <autrijus> I think

[18:18] <autrijus> not sure. handling 5005 breakage is not my forte.

[18:19] <autrijus> rindolf: if you are willing to help communicating with Alias_ and/or duplicating the error and/or find out where to fix, I'd be grateful.

[18:20] <rindolf> autrijus: who's Alias_? Where can I find him?

[18:20] <autrijus> Alias_ is here in #perl6. Alias_ is Adam Kennedy :)

[18:20] <rindolf> autrijus: OK.

[18:21] <autrijus> rindolf++ # thanks

[18:21] <jabbot> pugs - 2168 - * lvalue pairs!

[18:21] <rindolf> Is Module::Install supposed to work in Perl 5.005?

[18:21] <rindolf> autrijus++ # You're welcome

[18:21] <theorbtwo> The AUTHORS is sometimes useful.

[18:21] <autrijus> rindolf: yeah, it is.

[18:21] <autrijus> but the EU::AI part (Module::Install::AutoInstall) may not be handling things correctly.

[18:22] <autrijus> <- not having a 5.005 to test

[18:22] <autrijus> oh btw, the bug reporter is running it on 5.00504.

[18:22] <autrijus> stevan: I'm commenting out this block from hash_ref.t

[18:22] <autrijus> #   my $hash = ("1st", 1);

[18:22] <autrijus> #   is $hash{"1st"}, 1, 'comma seperated key/value hash creation works';

[18:22] <autrijus> #   is $hash<1st>,   1, 'unquoted <key> fetching works';

[18:22] <castaway> 2

[18:22] <autrijus> because afaik, it morphs into an Array reference, not a List reference

[18:23] <autrijus> so the duality no longer holds

[18:23] <autrijus> feel free to ask for clarification on p6l though.

[18:23] <castaway> oops

[18:23] <Limbic_Region> [14:09] * autrijus works on lvalue pairs..., [14:11] <autrijus> done!, [14:21] <jabbot> pugs - 2168 - * lvalue pairs! 

[18:23] * Limbic_Region loves the smell of progress in the morning

[18:23] * castaway grins

[18:24] <autrijus> :)

[18:27] * castaway wonders what sort of sin shes committing, downloading opera with mozilla

[18:34] <Limbic_Region> castaway - bootstrap problem, I am sure they will understand

[18:34] <Limbic_Region> could be worse - you could be doing it with IE

[18:34] <Odin-> Oh, you know. God forgives everything ... except this. >;)

[18:34] <rindolf> Hmmm... Alias_ has been idle for 5 hours now.

[18:35] <castaway> heh

[18:35] <castaway> actually, its getting me a corrupt tarfile :(

[18:36] <nothingmuch> hola gaal 

[18:36] <gaal> heya

[18:36] <gaal> did you get my mail?

[18:37] <gaal> if not that's too bad, cause i won't be near that account for ten days :)

[18:37] <nothingmuch> nope, didn't check for a while

[18:37] * nothingmuch feels shrouded by mystery

[18:37] * nothingmuch goes to see what's up

[18:37] * castaway tries lynx instead

[18:38] * gaal on the other hand goes to see what's in the fridge

[18:39] <gaal> ack! what are you doing in my fridge?

[18:40] * castaway waves from the fridge

[18:41] <nothingmuch> mutt is 50% done opening the mailbox!

[18:41] <castaway> woo!

[18:41] * castaway makes the eggs explode..

[18:41] <gaal> castaway, no, it was nothingmuch in my fridge. i'm hungry :(

[18:41] <castaway> oh :)

[18:41] * castaway passes over the pizza

[18:42] <gaal> yum yum yum! thanks!

[18:42] * castaway ponders what pugsish things to do

[18:43] <gaal> [off topic] is anyone experiencing weird issues with the location: bar in the latest firefox on windows?

[18:43] <gaal> i switch tabs/follow a link, and the old url still shows up there.

[18:43] <nothingmuch> 80%!

[18:43] <castaway> no, but my tabs switch focus when moving the mouse over them ;)

[18:44] <gaal> that's actually configurable, i just learned today!

[18:45] <gaal> tools > options > tabbed browsing > tab focus > last checkbox in that chunk.

[18:45] <castaway> Tools->Options? (doesnt exist)

[18:45] <castaway> this is a plain moz tho, not FF

[18:45] <gaal> ah :)

[18:46] * castaway tries edit prefs

[18:46] <gaal> then the pref is prolly different anyway then

[18:46] <castaway> yup, no "tab focus" setting(s)

[18:53] <nothingmuch> Claim Your FREE Laser Level Pro!  

[18:53] <nothingmuch> what's that?

[18:53] <castaway> a laser level?

[18:53] <gaal> You know you want it!

[18:53] <nothingmuch> gaal++ # thanks!

[18:53] * nothingmuch owes a favour

[18:54] <gaal> yeah, get out of my fridge :)

[18:54] <mj41> for @a.values -> $val is rw { $val = 10; } is "Can't modify constant item" today? :-)

[18:54] <nothingmuch> want me to order some takeout for you?

[18:55] <gaal> nah, i found my freezer still had some pitas.

[18:55] <gaal> which reminds me: must buy pitas before it's too late!

[18:55] * Limbic_Region wonders WTF clones of his wife are doing in gaal's freezer

[18:55] <nothingmuch> we have lots of sources of hametz here

[18:55] * Limbic_Region also wonders where this market is that is selling clones of his wife

[18:56] <Limbic_Region> pita = pain in the ass right?

[18:56] <nothingmuch> Limbic_Region: they're all around israel

[18:56] <castaway> also food, Limbic

[18:56] <Limbic_Region> castaway - I know, I was being silly

[18:56] <nothingmuch> Limbic_Region: why is your wife a pain in the ass?

[18:56] <gaal> nm, clones of L~R's wife, my kitchen is full.

[18:57] <shapr> Completely off-topic question, any contract programmer websites you guys recommend?

[18:57] <gaal> how wonderful if perl6 would also make the web go away!

[19:01] <jabbot> pugs - 2169 - * fix bad sort test

[19:01] <Limbic_Region> nothingmuch - it is an affectionate pet name

[19:02] <nothingmuch> pet .. .. affectionate?

[19:03] <nothingmuch> what is 'i' and 't'?

[19:04] <mj41> hmm ... pugs -e "my @a = ( [1,2], [3,4] ); @a[1][1] = 5; say ~@a;" Can't modify too. Problem is elsewhere.

[19:05] <autrijus> mj41: yeah. it's known bug: array_ref.t line 106

[19:06] <mj41> but IMHO, for @a.values -> $val is rw { $val = 10; } was ok yesterday.

[19:06] <autrijus> it was?

[19:07] <Limbic_Region> nothingmuch it = pita, like sweetie, honey, darling, etc

[19:07] <nothingmuch> Limbic_Region: =P

[19:08] <nothingmuch> there's a nice joke

[19:08] <nothingmuch> an american couple and an israeli couple compared

[19:08] <gaal> hey

[19:08] <nothingmuch> context is some food place

[19:09] <gaal> oops wrong window)

[19:09] * autrijus likes "make smoke"

[19:09] <nothingmuch> pass me the honey, honey?

[19:09] <nothingmuch> (american husband)

[19:09] <autrijus> ok... finally gone thru all the failures.

[19:09] <autrijus> remaking another round

[19:09] <nothingmuch> israeli husband: give me that steak you cow

[19:09] <nothingmuch> something like that

[19:10] <nothingmuch> the setting was rather dichotomic in the version that i heard, but I can't recall

[19:10] <nothingmuch> any variations

[19:10] <nothingmuch> and I'm too lazy to make one up now

[19:11] <jabbot> pugs - 2170 - * commenting out the not-really-going-to

[19:11] <jabbot> pugs - 2171 - * semicolon AOAs is TODO.

[19:11] <jabbot> pugs - 2172 - * fix the one last splice bug.

[19:11] <jabbot> pugs - 2173 - * slice's context depends on the indexEx

[19:11] <jabbot> pugs - 2174 - * we need that trailing "" for qq<$var> 

[19:11] <jabbot> pugs - 2175 - * add nested assign to force_todo; clean

[19:11] <jabbot> pugs - 2176 - * update "sort" and "=" to chase prototy

[19:11] <mj41> autrijus: I thing so. For hashs at least. I used "for %conf<index>.values -> $val is rw {"

[19:12] <gaal> you know you've been puzzled by haskell too long when you think there's a bug in make smoke when you read "util/run-smoke.pl . smoke.html"

[19:12] <autrijus> gaal: lol

[19:13] <autrijus> mj41: hm. and it's not working now?

[19:13] * autrijus waits for "make smoke" to finish

[19:14] <mj41> r2163 pugs -e "my %h = hash ( a => 1, b => 2 ); for %h.values -> $val is rw { $val = 0; }"

[19:14] <mj41> Can't modify constant item    .... Val (VInt 0)

[19:14] <autrijus> ok. will check

[19:15] <gaal> autrijus, releasing tonight?

[19:15] <autrijus> gaal: aiming to

[19:15] <autrijus> may or may not actually happen

[19:15] <autrijus> anyone wants to help updating ChangeLog?

[19:16] <Juerd> Eeee

[19:16] <Juerd> How long have I not compiled pugs?!

[19:16] <Juerd> I have GHC 6.2

[19:16] <autrijus> you need GHC 6.4 nowadays.

[19:16] <Juerd> I knew that

[19:16] <Juerd> But didn't realise it was so long since I last compiled pugs

[19:17] <Juerd> (I have to admit at this point that I don't usually test the many code examples I use in IRC and mail :P)

[19:17] <autrijus> that's fine :)

[19:18] <gaal> autrijus, i'll help with the changelog

[19:18] <autrijus> gaal++ # thanks!

[19:18] <gaal> need tea for that though. brb

[19:19] <Juerd> Bahh, debian only has 6.2

[19:20] <autrijus> you can get from experimental

[19:20] <theorbtwo> Or get ghc-cvs

[19:20] <Juerd> Thanks

[19:21] <Juerd> ghc-cvs is 6.3 here. But this mirror doesn't have any new packages either, and I'd expect much more in 2 months not upgrading

[19:21] <Juerd> So I guess this mirror is outdated

[19:21] <theorbtwo> It's 6.5 for me.

[19:22] <Juerd> It's T-42s for me :)

[19:25] <Juerd> Ah, that's better.

[19:27] <gaal> minor(?) make issue: 'make smoke' doesn't seem to put things in blib before running the smoke tests. so if the harness fails (eg don't haev T:T:M installed), the next make relinks pugs.

[19:28] <gaal> (which on a low-mem machine is quite slow)

[19:28] <autrijus> ah. fixes welcome

[19:28] <Juerd> real    2m17.949s

[19:28] <Juerd> user    1m55.090s

[19:28] <Juerd> sys     0m3.711s

[19:28] <Juerd> That used to be less too ;)

[19:29] <autrijus> I'm not too worried :)

[19:31] <Juerd> Does Larry's using an operator in example code, outside discussion of that operator, mean the operator has been approved of?

[19:31] <autrijus> nothing is approved of unless it's written into Synopsis :)

[19:31] <Juerd> (It's XX, of which I can't find any ruling)

[19:33] <Juerd> I'd want to write tests for it, but it's a waste of time if the operator doesn't officially exist yet

[19:33] <mj41> Why output of  perl -e "use File::Spec::Functions; print catfile( '', '.\\fn');"

[19:33] <mj41> \fn

[19:34] <mj41> i prefer fn

[19:34] <autrijus> this is win32?

[19:34] <Juerd> This is Perl 5?

[19:34] <mj41> yes

[19:34] <Juerd> See channel name

[19:35] <mj41> and pugs -e "use File::Spec; say catfile( '', '.\\fn');"

[19:35] <mj41> \\\fn

[19:35] <Juerd> See channel name

[19:35] <crysflame> he just said "pugs -e", Juerd.

[19:35] <Juerd> Oh, now it gets more interesting :)

[19:35] <autrijus> Juerd: see command name :)

[19:35] <Juerd> crysflame: Yeah, I was mentally lagged

[19:36] <crysflame> enforcer mentality deth

[19:41] <jabbot> pugs - 2177 - * fix "sort"'s prototype.

[19:57] * Qiang refreshs screen

[20:01] <jabbot> pugs - 2178 - * fix zip test syntax

[20:01] <jabbot> pugs - 2179 - * repair %h<x> to mean %h{'x'} instead o

[20:01] <jabbot> pugs - 2180 - * repair a couple tests

[20:01] <Juerd> Is there a web based interface to pugs' versioning system?

[20:02] <Juerd> With nice coloured diffs and such

[20:02] <obra> rt.openfoundry.org

[20:02] <obra> go to pugs

[20:02] <obra> click on version control

[20:02] <obra> it's running svnweb

[20:02] <Juerd> Perlfect

[20:02] <Juerd> Thanks

[20:04] * theorbtwo pings stevan.

[20:05] <autrijus> gaal: how's changelog?

[20:05] <gaal> about 60% done

[20:05] <autrijus> I have only ~4 test files to fix

[20:05] <autrijus> all in t/data_types/

[20:05] <gaal> is it :Perl5 or :P5?

[20:05] <autrijus> otherwise I think we're good to go

[20:05] <autrijus> both works; I like :P5 more. :perl5 also works.

[20:05] <autrijus> larry warns that he's moving to :P5/:Perl5

[20:06] <autrijus> but synopsis still says :perl5, so until it changes, we support all three

[20:06] <gaal> does :g work? there's mention of :P5<g>, but not of :g

[20:06] <PerlJam> :g has a new name

[20:06] <PerlJam> (assuming you meant g as in global)

[20:06] <gaal> PerlJam: for p5 regexps

[20:06] *** [1]metaperl_ is now known as metaperl_

[20:06] <autrijus> :g works too.

[20:06] <gaal> thanks

[20:07] <autrijus> as does :i

[20:10] <gaal> oh no :) i was changelogging from an older release. timewarping....

[20:10] <Juerd> operation failed: path does not exist at /usr/local/lib/perl5/site_perl/5.8.5/SVN/Web/Diff.pm line 29.

[20:10] <Juerd> http://rt.openfoundry.org/Foundry/Project/Source/index.html/pugs/diff/t/operators/arith.t?rev1=462&rev2=499

[20:11] <jabbot> pugs - 2181 - * even more repairing.

[20:11] <autrijus> Juerd: hmm, a bug. file a ticket in the openfoundry queue?

[20:12] <autrijus> Juerd: hey, maybe you can answer this

[20:12] <autrijus> foo(1,2,3);

[20:12] <autrijus> foo(1,(2,3));

[20:12] <autrijus> foo((1,2,3));

[20:12] <autrijus> they are potentially different things, right?

[20:12] <autrijus> not always the same

[20:12] <gaal> i can't find the r of the last release?

[20:12] <autrijus> gaal: r1921

[20:13] <autrijus> r12834 (orig r1921):  autrijus | 2005-04-13 03:43:50 +0800

[20:13] <autrijus> * This be Pugs, version 6.2.0.

[20:13] <gaal> um

[20:13] <gaal> then soemone already did half the changelog? and i wans'

[20:13] <gaal> t  confused after all?

[20:13] <gaal> i am now :)

[20:13] <autrijus> stevan already did it up to yesterday

[20:13] <autrijus> or rather, some 40 hours ago

[20:13] <Juerd> autrijus: Depends on foo's signature, I think

[20:14] <autrijus> Juerd: right. 

[20:14] <Juerd> OTOH, no, I think they're all the same.

[20:14] <autrijus> Juerd: right.

[20:14] <autrijus> wait, you can't be right on both times.

[20:14] <gaal> ah.

[20:14] <ingy> http://wiki.freepan.org/index.cgi?ChangingYourFreepanPassword

[20:14] <Juerd> Or, wait, no, "," is a constructor now, isn't it? :)

[20:14] <autrijus> Juerd: you are confusing me :-/

[20:14] <autrijus> I'm already confused

[20:14] <Juerd> That'd mean they have to be different

[20:14] <Juerd> But they can't be, because non-subcall parens are only for forcing precedence

[20:14] <Juerd> HELP

[20:15] <Juerd> There are two similarly spelled operators, one being , and the other being ,.

[20:15] <autrijus> *exactly*

[20:15] <Juerd> One separates sub call arguments, the other list elements

[20:15] <obra> ingy++

[20:15] <autrijus> right.

[20:15] <Juerd> Except of course when lexical (lexical as in how they appear in code) lists do flatten, regardless of context

[20:15] <Juerd> In which case everything matches up again

[20:15] <Juerd> In a most useful way :)

[20:16] <autrijus> so...

[20:16] <autrijus> is((1,2), (3,4), "hey");

[20:16] <autrijus> is this happy or not?

[20:16] <autrijus> assuming &is has the signature of <Str,Str,Str -> Str>

[20:16] <Juerd> No

[20:16] <Juerd> Oh

[20:16] <Juerd> What's ->?

[20:16] <autrijus> <Str,Str,Str -> Bool>, rather

[20:16] <autrijus> the return type

[20:16] <Juerd> And doesn't -> in <> clash?

[20:16] <autrijus> not something canonical ;)

[20:17] <ninereasons> src/Main.o(.text+0x26ab): undefined *** Error code 1

[20:17] <ninereasons> Stop in /usr/home/markmc/cvs/pugs.

[20:17] <autrijus> i.e. it's my notation, ignore it

[20:17] <Juerd> Oh!

[20:17] <ninereasons> At revision 2181

[20:17] <theorbtwo> It's very haskellish.

[20:17] <Juerd> It has too many arguments, I think, autrijus 

[20:17] <Juerd> Although

[20:18] <Juerd> Hm, no

[20:18] <Juerd> It's okay!

[20:18] <Juerd> Because the *,* is in scalar context, not the parens - they just group

[20:18] <Juerd> Yep, that must be it

[20:18] <autrijus> ok. I'm asking p6l :)

[20:18] * Juerd can be extremely confusing when he's thinking out loud

[20:18] <Juerd> autrijus: I think it's okay and equivalent to is([1,2], [3,4], "hey")

[20:19] <mj41> builtins/arrays/nested.t  -> data_types/multi_dimensional_array.t  or  nested_arrays.t  ?

[20:20] <Juerd> Now I'm going home

[20:20] <Juerd> (Almost 22:22 and still @office)

[20:21] <autrijus> mj41: both works for me; please refactor away

[20:21] <mj41> Juerd ... 22:22 same in Czechia :-)

[20:22] <theorbtwo> 22:22 in Germany and the "flirt" commercials are starting.

[20:23] <crysflame> flirt commercials?

[20:24] <theorbtwo> "Call our flirt-line at 1-900-NNN-NNNN."

[20:27] <crysflame> ah, right

[20:28] <mj41> some from nested are not multi-dimensionals, IMHO

[20:29] <mj41> perl -e "my @c = (1,2,(3,4)); print $c[3];"   # 4

[20:31] <jabbot> pugs - 2182 - move builtins/arrays/nested.t to data_ty

[20:31] <gaal> autrijus, getting close

[20:31] <autrijus> cool.

[20:32] <autrijus> mj41: feel free to refactor mercilessly :)

[20:32] <autrijus> ah, you put it in nested_arrays.t. that's good

[20:33] <ninereasons> I still can't build r2181 , autrijus 

[20:34] <ninereasons> is that news?

[20:34] <autrijus> ninereasons: tried clean?

[20:34] <ninereasons> realclean :-)

[20:34] <autrijus> try rechecking out? :)

[20:34] <autrijus> (that is news.)

[20:34] <ninereasons> I'll try rechecking out.

[20:34] <gaal> i'm confused about r numbers: when i svn log, the latest is 2264, but jabbot gives something else

[20:35] <autrijus> gaal: are you checking out from svn.perl.org?

[20:35] <mj41> "-> $val is rw" and File::Spec are broken ... so time to live tutorial_gen a go for shower

[20:35] <autrijus> mj41: what test tests "-> $val is rw"?

[20:35] <autrijus> if there's none, please write one?

[20:36] <gaal> autrijus, yes, should i svn switch back?

[20:36] <autrijus> gaal: sure!

[20:37] <gaal> svn++; # for having switch

[20:38] <ninereasons> is_rw.t, and t/statements/for.t test -> $x is rw

[20:38] <gaal> then again now it doesn't work ;)

[20:38] <ninereasons> t/statements/for.t only, actually

[20:38] <mj41> statemests/for.t  23

[20:40] <ninereasons> checking out again worked, autrijus.  r2184 builds successfully

[20:40] <autrijus> hmm. mysteries

[20:41] <jabbot> pugs - 2183 - * remove the unneccessary END block

[20:41] <jabbot> pugs - 2184 - * that too.

[20:41] <gaal> r2185 - changelog

[20:42] <autrijus> gaal++

[20:42] <gaal> better give it an editorial eye though, autrijus

[20:43] <autrijus> k

[20:43] <gaal> sorry it took so long... anyway let's see what's up with my bg smoke test.

[20:43] <theorbtwo> gaal++

[20:44] * gaal blushes

[20:46] <gaal> the smoke process really needs some backporting love so i can run it on msys

[20:46] <mj41> gaal++

[20:47] <Corion> We have "make smoke" now?

[20:47] <Corion> (and are we preflight? I'm backlogging and slowly catching up)

[20:47] <pasteling> "nothingmuch" at 212.143.91.217 pasted "Spork::Config::Default" (96 lines, 1.7K) at http://sial.org/pbot/9534

[20:47] <pasteling> "nothingmuch" at 212.143.91.217 pasted "Spork::Config::Default" (96 lines, 1.7K) at http://sial.org/pbot/9535

[20:47] <theorbtwo> "backslash protections"?

[20:47] <theorbtwo> It's unicode URL decoding, not utf8.

[20:49] <gaal> Corion, yes

[20:51] <gaal> actually an alternative to porting the new TAP stuff to p5.6.x would be to port it to p6 :)

[20:51] <gaal> and to bundle it with pugs

[20:51] <gaal> though until we have YAML...

[20:52] <Corion> Bah. We should embed SQLite. Then we can do away with YAML :)

[20:53] * autrijus mumbless something about patches welcoeme

[20:53] <Corion> Or we should get Data::Dumper ported, or abuse/misuse that Haskell database, what's its name? HaskellDB ? :)

[20:53] <gaal> porting yaml.pm would no doubt happen before dbi.pm :)

[20:53] <autrijus> I think SQLite is the most attractive :)

[20:53] <PerlJam> er, why do we want to get rid of yaml?

[20:53] <gaal> SQLite is beautiful (lovely license too)

[20:54] <autrijus> right. I like that license.

[20:54] <autrijus> PerlJam: it's not either/or... :)

[20:54] * Corion finds http://cvs.sf.net/viewcvs.py/haskell-libs/libs/takusen/src/Database/Sqlite/

[20:54] <autrijus> "getting away without" != "get rid of"

[20:54] <Corion> PerlJam: I'm not really enchanted by the stability of YAML for p5

[20:54] <PerlJam> autrijus: sorry, I've been suffering the tyranny of OR lately.

[20:54] <autrijus> PerlJam: I think you meant XOR

[20:54] <gaal> inclusive OR++

[20:55] <PerlJam> well, XOR in our usage, OR in "common" usage.

[20:55] <autrijus> whew. I finally worked out the "," semantic.

[20:55] <autrijus> please fire away your smokes :)

[20:55] <autrijus> not exactly preflight, but close

[20:55] * autrijus looks at ChangeLog

[20:55] <nothingmuch> ingy: wake up

[20:55] <Corion> I'm currently running a smoke - still some failures

[20:55] <Corion> (win32 of course)

[20:55] <autrijus> Corion: abort it?

[20:55] <PerlJam> what comma semantic?  you mean  @a = (1,)  ?

[20:55] <autrijus> r2186 changed ~everything

[20:56] <gaal> ah, we were in prepreflight then, Corion :)

[20:56] <Corion> autrijus: I'm already at "p", so I'll let it fly and check out again immediately

[20:56] <nothingmuch> i see 99.26% good

[20:56] <autrijus> PerlJam: $x = [$y[1,2,3], $y[1], $y[3,4]]

[20:56] <Corion> Pugs. Now with five nines goodness :)

[20:56] <nothingmuch> array.t and array_ref.t

[20:56] <nothingmuch> http://nothingmuch.woobling.org/pugs_test_status/

[20:56] <Corion> ... which is better than nine fives!

[20:56] <autrijus> nothingmuch: right, I just fixed the two

[20:56] <nothingmuch> so it should be updated RSN

[20:57] * gaal wonders abotu that 'make smoke' linkarage thing

[20:57] <nothingmuch> http://nothingmuch.woobling.org/pugs_test_status/t/operators/arith.html#line_326 <-- also fails

[20:57] <Corion> BTW, that test failure of pugsrun/10-* comes from not running "make", as that test needs File::Spec copied to blib6/lib.

[20:57] <Corion> "test failure" == "complete skip"

[20:59] <nothingmuch> compile is sloooow

[21:00] <nothingmuch> it's not declaring skip all though, is it?

[21:00] <gaal> zillions of "pugs.exe: cannot cast from VList [] to Pugs.AST.VCode" in t/builtins/strings (msys)

[21:00] <gaal> but these are just warnings

[21:01] <jabbot> pugs - 2185 - ChangeLog updates

[21:01] <jabbot> pugs - 2186 - * finally, sensible "," flattening seman

[21:01] <gaal> anyone else see those?

[21:02] <gaal> not just in strings, i see now - once per almost all files.

[21:02] <gaal> *almost each file

[21:03] <Corion> r2185 - http://datenzoo.de/pugs/win2k.html

[21:03] <Corion> r2185 - 34 failed

[21:03] <castaway> Please find a copy of my CV attached.

[21:03] <castaway> oops ;)

[21:03] <Corion> castaway++ # releasing CV with Pugs

[21:04] <gaal> lol

[21:04] * castaway grins

[21:04] <Corion> r2186 smoke started ;)

[21:04] <Corion> ... what better way to promote yourself? At least if you want to work in a shop that uses Pugs ;)

[21:04] <gaal> Corion++ # da smoke machine

[21:04] <castaway> hmm, tisnt a bad idea actuall;)

[21:04] <castaway> +y

[21:04] <theorbtwo> "The smoking man."

[21:05] <gaal> so *thats* what Burning Man is all about.

[21:05] <Corion> *cough*

[21:05] <stevan> nothingmuch: pong

[21:05] * theorbtwo sniffles.

[21:05] <stevan> theorbtwo: poing

[21:05] * nothingmuch chimes

[21:05] * theorbtwo tries to remember why he pinged stevan.

[21:05] <autrijus> considering that the person behind all technology used in Burning Man is Brian Behlendorf...

[21:05] <Corion> Hmmm. Is there an easy shell command/loop to check if a file has been changed? I want to trigger the upload once the html file has been generated ...

[21:06] <stevan> autrijus: did I read Junctive types are implemted??? :)

[21:06] <nothingmuch> Corion 'wait'?

[21:06] <autrijus> stevan: you read correctly. currently only in subroutine signature

[21:06] <autrijus> sub foo (Any|Junction $x) { ... }

[21:06] <Juerd> Yay!

[21:06] <stevan> autrijus++ # that is soooooooo Cool

[21:06] <Corion> nothingmuch: The command that I would wait for runs on a different machine

[21:06] <autrijus> sub foo (Array&Hash $x) { ... }

[21:06] <Juerd> autrijus: I eventually guessed correctly! ;)

[21:07] <nothingmuch> ah

[21:07] * stevan has been longing for sub sigs in perl for several years

[21:07] <nothingmuch> rsync is prolly the best way

[21:07] <nothingmuch> code wize

[21:07] <Corion> Hmmm. Maybe I should simply run rsync in a 1 minute loop, true.

[21:07] <nothingmuch> otherwise you have versions of find that know to say newer than

[21:07] <Corion> you can check the next smoke result at the usual URL then, because I'll be afk for the next half hour :)

[21:07] <nothingmuch> but the only STD way I know of compares file a to file b

[21:08] * gaal wasted 20 minutes debugging *today* becaseu of a forgotten "... = @_;"

[21:08] <nothingmuch> gaal: use Spiffy;

[21:08] <gaal> no!

[21:08] <gaal> use perl6.

[21:08] <Juerd> The yada yada yada operator is lvalue now?

[21:08] <autrijus> gah.

[21:08] <Juerd> What's the world coming to? :)

[21:08] <Corion> Source filters create more problems than they solve :)

[21:08] <nothingmuch> i think

[21:09] <nothingmuch> source filters give me the heeby jeebies

[21:09] <castaway> gaal: BTDT

[21:09] <nothingmuch> but I must admit i'm tempted after about an hour of practice

[21:09] <nothingmuch> true that

[21:09] <autrijus> Juerd: you are correct after all.

[21:09] <nothingmuch> Juerd: AOP ;-)

[21:09] <nothingmuch> Corion: true that

[21:09] <autrijus> Juerd: so if &is is of signature (Array, Array, Str)

[21:09] <autrijus> (all three nonslurpy)

[21:09] <gaal> castaway, I've BTDT too, which only makes it more aggravating :)

[21:09] <autrijus> Juerd: is the inner (1,2) still running in scalar context?

[21:09] <Corion> The r2186 smoke test is at /oo/ already. So you'll be able to find it at http://datenzoo.de/pugs/win2k.html in a few minutes I think.

[21:09] <Corion> &

[21:10] <autrijus> Juerd: or are the suddenly in Array context?

[21:10] <castaway> heh

[21:10] <Juerd> autrijus: Then it's still scalar context (specifically, array context, which surprisingly nicely is not a form of list context) :)

[21:10] <Juerd> autrijus: Array context is a scalar context

[21:10] <autrijus> Juerd: that is hard to believe.

[21:10] <gaal> corion, did you not get all those "cannor cast" warnings? only on msys apparently.

[21:10] <autrijus> Juerd: I can see "array ref" context, maybe

[21:10] <Juerd> I think we should rename scalar context to singular context

[21:10] <autrijus> Juerd: but Array is a List

[21:10] <autrijus> as Hash is a List

[21:10] <Juerd> autrijus: Array is a class, classes when used for context expect objects, objects are references, Array implies ref

[21:11] <gaal> oh, he left

[21:11] * theorbtwo wonders why skip is pale green.

[21:11] <Juerd> autrijus: That may be, but types have nothing to do with context.

[21:11] <autrijus> Juerd: wow. that line is the most clear thing I have read.

[21:11] <autrijus> Juerd: it also invalidates my hope to release 6.2.1 tonight :-(

[21:11] <stevan> gaal: I hope you dont mind I just added a code example to the Junctive types line in the changelog

[21:11] <gaal> not at all!

[21:11] * stevan is so excited to get started messing around with them :)

[21:11] <autrijus> Juerd: since that means my Eval.hs comma implementation is All Wrong.

[21:12] <stevan> I have to go eat though,. I will check in later :)

[21:12] <Juerd> autrijus: I think it'd be good to rename scalar and list context to singular and plural context, to avoid confusion with types.

[21:12] <autrijus> Juerd: so, it has nothing to do with types, right?

[21:12] <stevan> autrijus++ # for all the cool stuff done today

[21:12] * theorbtwo wonders what line.

[21:12] <autrijus> it's either singular, or plural

[21:12] * gaal isn't very proud of his changelog skillz... but somebody's gotta do it and you werent' areound, stevan :)

[21:12] <autrijus> literal lists always flatten in plural context

[21:12] <autrijus> and never flatten in singular context

[21:13] <autrijus> singular context may be further limited in expecting specific object types

[21:13] <Juerd> autrijus: The main contexts have nothing to do with types, except that scalar(singular) context can expect a certain type of singular value, for example, an Array (reference)

[21:13] <stevan> gaal++ # for being brave enough to volunteer :)

[21:13] <autrijus> while plural context does not care about type

[21:13] <autrijus> is that the case?

[21:13] <Juerd> autrijus: Exactly

[21:13] <Juerd> autrijus: Plural context can care about the types of its values

[21:13] <autrijus> Juerd: I wish these lines are in the synopsis!

[21:13] <theorbtwo> OK, my right hand hurts, and my vision is starting to go out of focus.

[21:13] <theorbtwo> It's time for bed.

[21:14] <autrijus> Juerd: can you be kind and summarize these line into a reply on p6l to my thread?

[21:14] <autrijus> and get another "That's all correct" from Larry

[21:14] <castaway> oooh bedtime

[21:14] <mj41> r2185 for.t still not ok 23 :-(

[21:14] <autrijus> so, sorry, folks, no 6.2.1 tonight because the new context handling is all wrong :-/

[21:14] <Juerd> autrijus: Which lines precisely?

[21:14] * castaway runs off.

[21:14] <autrijus> Juerd: everything after

[21:14] <autrijus> 05:08 < autrijus> Juerd: you are correct after all.

[21:15] <Juerd> autrijus: That's a lot.

[21:15] <autrijus> Juerd: well, what you said, anyway

[21:15] <autrijus> I'd do that, but it's 5:14am here and my fingers are on strike :)

[21:15] <Juerd> I'll see if I can make a nice bulleted list

[21:15] <autrijus> thank you

[21:15] <autrijus> Juerd++

[21:17] <autrijus> is Void a special subtype of Singular, then?

[21:18] <autrijus> or is Void a context of its own like in p5?

[21:19] <gaal> Nilular? :)

[21:19] <autrijus> Nullar

[21:19] <autrijus> I'll need to sleep on this new revelation.

[21:20] <autrijus> journal up... please keep the usual flow of new tests and examples etc :)

[21:20] <Shillo> I think I fixed myself the proper svn access... But I need URL?

[21:20] <gaal> (i've seen "nullary" mentioned in some haskell texts, no doubt in different, er, contexts)

[21:20] <autrijus> there's no release freeze

[21:20] <autrijus> Shillo: http://svn.openfoundry.org/pugs

[21:20] <autrijus> gaal: it's used in arity context, so "unary" instead of "singular"

[21:21] <jabbot> pugs - 2187 - adding some example code for Junctive Ty

[21:21] <gaal> ah. the *opposite* of context.

[21:21] <gaal> (in a way.)

[21:21] <autrijus> :)

[21:21] * autrijus waves... I'll be back :)

[21:21] <gaal> night!

[21:21] <autrijus> see you tomorrow, folks

[21:21] <autrijus> night!

[21:21] <autrijus> &

[21:22] <mj41> night

[21:25] <Juerd> autrijus: I'd think void context would not be Void context, as you cannot have a reference to nothing, or express nothingness in a variable (we have undef), or meaningfully force void context in an expression

[21:28] <Shillo> Hmm, does pugs with with ghc-6.2.2 ?

[21:28] <Shillo> Er, -work- with.

[21:28] <Juerd> autrijus: summary sent to p6l

[21:30] <ninereasons> it might Shillo , but only >= 6.4 is supported

[21:31] <jabbot> pugs - 2188 - unbreak motd

[21:32] <Shillo> ninereasons: Oif.

[21:32] <Shillo> ninereasons: To make things less funny, apt is bugging me about downgrading gcc.

[21:35] <ninereasons> I think that ghc 6.4 might be in experimental ?  I've overheard this, anyway.

[21:35] <Juerd> I used ghc-cvs from current sid(unstable) and that works well

[21:36] <Shillo> ninereasons: I'm on Ubuntu. That leaves me with ghc-cvs from Universe... which also bugs me about gcc.

[21:36] <ninereasons> bummer, Shillo :-(

[21:37] <Corion> One last smoke before bedtime

[21:37] <Corion> Somehow, autrijus makes me feel bad, as he goes to bed at the same time I do, but he's one third-day ahead of me ...

[21:37] <Shillo> ninereasons: Working on fixing it. :)

[21:38] <ninereasons> if you give up, building from sources, which is what I did, using ghc 6.2.2, only took a few hours (gasp)

[21:50] <Shillo> ninereasons: I can do that after I do my hardware upgrade, something I'd ideally want to delay a few months more.

[21:50] * Juerd put the irc log of the context discussion in a use.perl comment for later reference

[21:50] <Shillo> My trusty old Athlon 2000+ got a bit long in the tooth. Can't stand the heating like it used to.

[21:50] <Juerd> http://use.perl.org/comments.pl?sid=26150&op=&threshold=0&commentsort=0&mode=thread&tid=30&pid=0

[21:54] <Corion> 'night

[21:58] <Shillo> Hmm... finnagled the makemakefile to grok the old ghc. Build fails on unknown pragma. Hmm, now we're in Haskell land...

[22:00] <nothingmuch> autrijus: ping

[22:00] <nothingmuch> ah, too late

[22:00] <nothingmuch> anyone else ever used spork?

[22:00] <nothingmuch> i fixed it's config system

[22:02] <mugwump> I've used spork

[22:02] <nothingmuch> mugwump: want to try my changes, see if they make sense?

[22:03] <mugwump> sure, why not

[22:03] <nothingmuch> unidiff?

[22:03] * mugwump shurgs ambivalence

[22:03] <nothingmuch> or should i just tar the whole thing up?

[22:03] <mugwump> whatever's easiest, mail to [email@hidden.address]
[22:03] <nothingmuch> or darcs repo?

[22:04] <mugwump> I can't grok darcs :)

[22:04] <nothingmuch> (or get ingy to get my freepan htpasswd stuff fixed ;-)

[22:04] <nothingmuch> darcs is easy, but i'm not in an evangelist mode

[22:04] <nothingmuch> unidiff against svn.kwiki.org head ca. noon GMT today

[22:05] <nothingmuch> the only thing i don't yet know how to do is mask a file from Spoon::Installer

[22:05] <nothingmuch> so that config/config.yaml isn't created

[22:05] <nothingmuch> that kwiki stuff is not really necessary

[22:05] <mugwump> what's up with FreePAN?  I've got admin on that, can fix it

[22:05] <mugwump> but given the head's in ingy's svn I think I might leave it for now

[22:06] <nothingmuch> whose given head?

[22:06] <nothingmuch> anywho, the change basically is: Spork::Config::Default - some default values

[22:06] <nothingmuch> all of config.yaml is commented out, because defaults make sense now

[22:06] <nothingmuch> ./config.yaml overrides ~/.sporkrc/config.yaml which overrides Spork::Config::Default

[22:07] <mugwump> Nice one

[22:07] <nothingmuch> hmm... is output of 'svn di' good enough?

[22:08] <mugwump> for sure

[22:09] <nothingmuch> http://nothingmuch.woobling.org/spork_defs.diff

[22:09] <nothingmuch> (i don't feel like waiting for mutt to open maildir)

[22:09] <nothingmuch> (i really have to get that under control some time soon)

[22:11] <nothingmuch> hmm.. pardon the tabs

[22:11] <nothingmuch> i'll fix that

[22:12] <mugwump> Heh, _guessing_defaults looks like fun

[22:12] <mugwump> Is Devel::Symdumps core?

[22:13] <nothingmuch> yup

[22:13] <nothingmuch> since 5.6 i think

[22:13] * nothingmuch checks Module::Corelist

[22:13] <mugwump> not in 5.6.1

[22:14] <nothingmuch> hmm, maybe it isn't

[22:14] <nothingmuch> anyway, ingy pondered adding this ability to spiffy anyway

[22:14] <mugwump> ok

[22:14] <nothingmuch> sorry

[22:17] <nothingmuch> next i'll butcher Spork::S5 so that it creates "true"er S5

[22:17] <nothingmuch> with the inc class and all

[22:20] <Juerd> ** Proxy scalars: `%ENV<PATH> ~= '/tmp'`

[22:20] <Juerd> Should probably be :/tmp

[22:20] <Juerd> * Experimental support for link external Haskell libraries

[22:20] <Juerd> Is *anything* in Pugs *not experimental*?

[22:20] <nothingmuch> maybe %ENV<PATH>.ref eq 'Array'?

[22:21] <nothingmuch> or is that sort of pushing it?

[22:21] <nothingmuch> I'd like Env::Path like support in the core, it makes things easier

[22:22] <Juerd> nothingmuch: pushing it. Heh.

[22:23] *** Juerd changes topic to: pugscode.org <Overview Journal Logs> | r1773/winxp: 587/4256 smoke/win2k (occasional): http://xrl.us/fqum (114/4369, r2163) Mac OS X (62/4459, r2116) | pugs.kwiki.org

[22:23] <Juerd> My terminal apparently does NOT like utf-8.

[22:23] <nothingmuch> if we're doing things the right way and not the c library way, and have magic like $*CWD and floating point alarm then why not this too?

[22:23] <Juerd> And <<>> is unnecessary there anyway.

[22:24] <Juerd> nothingmuch: Because %ENV is a very special proxy that you should be able to depend on.

[22:24] <Juerd> With NO surprises.

[22:28] <nothingmuch> good night Juerd, everyone

[22:30] <mugwump> Hmm, Devel::Symdump isn't even in my 5.8.6 dist

[22:30] <ninereasons> frozen light? sounds cool: http://snipurl.com/e56d

[22:30] <nothingmuch> no, it isn't.. sorry

[22:30] <nothingmuch> i was being silly

[22:31] <Limbic_Region> hmmm - how would I go about finding out who wrote examples/games/animals.p6 ?

[22:31] <ninereasons> svn blame

[22:32] <ninereasons> svn blame examples/games/animals.p6

[22:32] <Limbic_Region> ninereasons - I don't actually have svn or pugs

[22:33] * Limbic_Region hangs his head in shame

[22:33] <ninereasons> it was iblech, Limbic_Region :-)

[22:33] <ninereasons> Get Pugs! 

[22:34] * ninereasons pays for services by proferring uninvited advertising

[22:34] <Limbic_Region> well, it was near the top of my todo list ninereasons

[22:34] <nothingmuch> Limbic_Region--; # it's not that hard, just do it man, and you get karma + 2

[22:35] <nothingmuch> before i really go too

[22:35] * nothingmuch brushing teeth

[22:35] <Limbic_Region> you know, make sure your wife can stay in the country, keep your job, buy a house, get a car, read HOP, write an SQL parser in P::RD, learn Haskell, get involved in Pugs

[22:35] <nothingmuch> brush teeth, ++ Limbic_Region...

[22:35] <Limbic_Region> nothingmuch - I remove karma anytime I see it applied to me, but thanks for trying to motivate me

[22:35] <nothingmuch> ah

[22:36] <nothingmuch> Limbic_Region++; # i'll -- for you, and in the time I save you go get pugs

[22:36] <Limbic_Region> lol - thanks

[22:36] <ninereasons> nothingmuch++

[22:36] <Limbic_Region> in any event, a good portion of those things will be done by the end of the month

[22:36] <nothingmuch> well, good luck

[22:37] <Limbic_Region> I will likely skip the P::RD project and combine learn Haskell and get involved in Pugs

[22:37] <nothingmuch> DBI has a pure perl sql fudger

[22:38] <Limbic_Region> nothingmuch - the P::RD project was just to become a SME - I don't really need it for anything

[22:38] <nothingmuch> ah

[22:43] *** ihb is now known as Homer

[22:43] *** Homer is now known as ihb

[22:44] <Shillo> Later, folks!

[22:44] <ninereasons> success, Shillo ?

[22:44] <Shillo> ninereasons: Missing Data.Map. Will work on it tomorrow. Prolly have to compile from source.

[22:44] <ninereasons> better luck later, then.

[22:44] <Shillo> Hope so. :)

[23:08] <stevan> is anyone actually using the TEST_LOG_FILE feature in Test.pm? Or is everyone using the smoker now?

[23:10] <stevan> I am considering removing it from Test.pm

[23:10] <stevan> moving it to it's own module

[23:22] <mugwump> nothingmuch: I have implemented a quick hack so that change doesn't require Devel::Symdump

[23:24] <mugwump> I'll send them both on to ingy as patches

[23:24] <stevan> mugwump: I think he is sleeping

[23:59] <ingy> nothingmuch: ping

[23:59] <ingy> nothingmuch: please retry your freepan repos

