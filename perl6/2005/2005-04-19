[00:03] <mugwump> Junctions do seem to be an arse to deal with, in terms of writing visitor patterns like serialising or stringifying

[00:03] <mugwump> It's the return of (if (ref $foo eq "ARRAY") { ... } elsif (ref $foo eq ...

[00:05] <machack666> you almnost have to store the method bny which they were created

[00:06] <machack666> I i'm getting sporatic readline bugs

[00:06] <machack666> visual artifacts, doubled letters (of which there is only one)

[00:06] <crysflame> perhaps someone put a junction in your prompt

[00:07] * machack666 snorts

[00:08] <machack666> also got two segmentation faults and several illegal instruction crashes that shot me out of pugs

[00:08] <machack666> all when dealing with junctions

[00:17] <mugwump> ouch

[00:17] <mugwump> any reproducible ones?

[00:18] <machack666> nothing consistent

[00:18] <machack666> a lot when I was dealing with the junction comparisons

[00:18] <machack666> ok checked in an associativity test

[00:21] <jabbot> pugs - 2105 - Make $<delim> not interpolate in quoting

[00:21] <jabbot> pugs - 2106 - Tests for the associativity of junctions

[00:21] <machack666> what does the double-U mean in svn update?

[00:22] <machack666> (as a status)

[00:23] <machack666> never mind: `svn help status`

[01:21] <jabbot> pugs - 2107 - Fixed wrong plan count for t/builtins/ha

[01:40] <obra> where's the paper on implementing make in ocaml?

[01:48] <obra> http://www.venge.net/graydon/talks/mkc/html/

[02:00] <mugwump> So, going to implement a make in haskell, obra?  :)

[02:03] <crysflame> http://www.cse.unsw.edu.au/~pls/thesis-topics/funmake.html

[02:03] <crysflame> In this project you will design a clean, simple, portable replacement for `make', as a Haskell EDSL. 

[02:04] <mugwump> maybe I should go move to NSW and complete that for a masters

[02:14] <obra> mugwump: no. a firend wanted it.

[02:21] <jabbot> pugs - 2108 - updated the ChangeLog with all of tadays

[03:43] <lucs> Hola bradb

[03:53] <bradb> hey lucs 

[03:53] <bradb> so, i'll be a bit late tomorrow evening. hitting up the plateau with my real estate agent.

[03:57] <lucs> Good luck with that.

[03:57] <lucs> I'm beat.

[03:57] * lucs & # ZZ

[05:11] <jabbot> pugs - 2109 - quote generator: add a few phrases

[05:21] <jabbot> pugs - 2110 - quote generator: up the samples to incre

[06:11] <jabbot> pugs - 2111 - quote generator: put a cap on annoying p

[06:17] <nothingmuch> morning

[06:40] *** castaway_ is now known as castaway

[06:42] <mj> morning

[06:43] <nothingmuch> morning, mj 

[06:43] <castaway> morning

[06:51] <jabbot> pugs - 2112 - quote generator: a little more fiddling 

[06:51] <jabbot> pugs - 2113 - delete obs file

[09:21] <jabbot> pugs - 2114 - * restore `%h<str> = want()` to impose s

[09:29] <Jonathan_> The Win32 daily builds are back for good. http://www.jwcs.net/~jonathan/perl6/ Sorry for the gap in putting them out.

[09:31] <jabbot> pugs - 2115 - * oops, repair readline()

[09:39] <kungfuftr> bah!

[09:40] <kungfuftr> autrijus: don't suppose you know of a tool for converting PDF to text that'll cope with east asian languages?

[09:45] *** chady_ is now known as chady

[10:10] <nothingmuch> hola

[11:07] <nothingmuch> Jonathan_: want to arrange for smoke testing too?

[11:08] <nothingmuch> akin to: http://nothingmuch.woobling.org/pugs_test_status/

[11:08] <nothingmuch> Corion only puts them out once in a while, i think

[11:12] * shapr waves the lambdacamel pom-poms

[11:12] <nothingmuch> hola shapr 

[11:13] <shapr> y0 wassup?

[11:13] <nothingmuch> not much

[11:13] <theorbtwo> Allo, shapr.

[11:13] <theorbtwo> And all, since I haven't said anything today.

[11:13] <nothingmuch> tests  covered  executable  %

[11:13] <nothingmuch> 26     12071    56404       21

[11:13] <shapr> greetingz Mistah Palantir.

[11:13] <nothingmuch> 1      38462    171598      22

[11:13] <nothingmuch> beh

[11:13] * theorbtwo 's adventures in macland are very much not working.

[11:13] <nothingmuch> tests being 1 on windows is nonsensicle, it's all the tests

[11:14] <nothingmuch> the rest is line counts

[11:14] <theorbtwo> What's that from, nothingmuch?

[11:14] <nothingmuch> how the fsck are there 3x as many executable lines of code?

[11:14] <nothingmuch> i hate complilers! i hate c++!

[11:14] <nothingmuch> our project, and code coverage with a few tests

[11:14] <nothingmuch> first line is linux (g++, gcov)

[11:14] <nothingmuch> second line is window

[11:14] <nothingmuch> s

[11:14] <nothingmuch> dunno which tools

[11:15] <shapr> obra: there's at least one nifty make tool in Haskell. Possibly up to three.

[11:16] <Jonathan_> nothingmuch: Sure, got details of how I can set that up?

[11:16] <nothingmuch> yup

[11:16] <nothingmuch> there are some scripts in util

[11:16] <Jonathan_> Also, is anyone seeing the makefile problem I posted on the mailing list yesterday?

[11:16] <Jonathan_> Ah, OK.

[11:16] <nothingmuch> yaml_harness runs the test suite, and creates tests.yml

[11:17] <nothingmuch> then testgraph.pl reads that yaml (very slow, you can hack it to storable if that bothers you)

[11:17] <shapr> Why not a 'make smoke' command that sticks all the steps together?

[11:17] <nothingmuch> and uses Test::TAP::HTMLMatrix to generate an HTML

[11:17] <nothingmuch> uh

[11:17] <nothingmuch> for starters everyone has a slightly different webserver setup

[11:17] <nothingmuch> i don't know really

[11:18] <nothingmuch> then you run catalog_tests.pl to create backlinked tests and docs

[11:18] <nothingmuch> and then you shove all that on a webserver somewhere

[11:18] <nothingmuch> with the css

[11:18] <shapr> I'd like to have everything but shove in a single command.

[11:18] <nothingmuch> http://nothingmuch.woobling.org/pugs_test_status

[11:18] <nothingmuch> i have a shell script

[11:18] <nothingmuch> there's run_smoke.pl

[11:18] <nothingmuch> which i haven't gotten along with yet

[11:18] <nothingmuch> and since mine worked for me i keep using it

[11:19] <Jonathan_> OK, I'll see if I have time to get that set up later on today.

[11:19] <nothingmuch> perlbot nopaste

[11:19] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[11:19] <pasteling> "nothingmuch" at 212.143.92.226 pasted "test_report.sh" (39 lines, 1K) at http://sial.org/pbot/9482

[11:21] <Jonathan_> Thanks. I may be able to get smoke tests on a Linux box going too.

[11:21] <nothingmuch> goody

[11:21] * shapr cheers

[11:22] <Jonathan_> And this time I promise not to run off to Spain and leave it all broken, like I did with my Win32 Pugs build. :)

[11:22] <nothingmuch> =)

[11:23] <Jonathan_> Shouldn't be much risk of that, it's back to university on Saturday.

[11:23] <Jonathan_> Ugh...exam term.

[11:23] <theorbtwo> Grrr.  I keep writing #elsif instead of #else for some stupid reason.

[11:32] *** chady is now known as [s]AINT

[11:33] *** [s]AINT is now known as {s}AINT

[11:39] <mj> WinXP, s/todo_//, r2115 - 1000/4459 subtests failed, 77.57% okay. 54 subtests skipped.

[11:39] * theorbtwo pings nothingmuch.

[11:55] * nothingmuch chimes

[11:55] * castaway wonders if other people chiime differently, and whether pinging can play tunes..

[11:56] * shapr pings nothingmuch, castaway, and theorbtwo in that order

[11:57] <shapr> It's like a chrismas bells concert!

[11:57] <nothingmuch> ding!

[11:57] <theorbtwo> My mac still isn't playing nice, after getting Panther CDs.

[11:58] <castaway> dong!

[11:58] <nothingmuch> is it cursing at you?

[11:58] <theorbtwo> WooOOOooong.

[11:58] <castaway> hmm, of course the lag makes the tune come out all wrong :)

[11:58] * nothingmuch rings, reverbing theorbtwo's pong

[11:58] * shapr grins

[11:58] <nothingmuch> wmmmmmmmmmmmmmmmmmmmmmm

[11:59] <theorbtwo> It doesn't seem to be doing anything in purticular, just sitting at the "preboot" screen mostly.

[11:59] <nothingmuch> can you boot debian?

[11:59] <nothingmuch> if you can get dd on the ramdisk, then you can fdisk the disk

[12:00] <nothingmuch> put a cd sized partition at the end, and an HFS one elsewhere

[12:00] <nothingmuch> and then eject the debian CD

[12:00] <nothingmuch> put in panther #1

[12:00] <nothingmuch> dd if=/dev/cdrom of=/dev/hda2

[12:00] <castaway> beige doesnt boot from anything but an apple-cd apparently

[12:00] <nothingmuch> or actually 3 on macs

[12:00] <nothingmuch> oi

[12:00] <nothingmuch> you need bootx?

[12:00] <nothingmuch> i could mail you an OS9 CD

[12:00] <castaway> (so sayeth the linuc-ppc channel)

[12:01] <theorbtwo> #debianppc, actually.

[12:01] <nothingmuch> if i can find one

[12:01] <shapr> I can probably scrape up a copy of System 7 around here somewhere.

[12:01] * nothingmuch wishes castorbway would have bought an imac or something

[12:01] <theorbtwo> We tried.

[12:01] <nothingmuch> system 7.5.3 can be downloaded free, IIRC

[12:01] <nothingmuch> it is also bootx capable

[12:01] <castaway> on floppy images, but we have no floppy drive ,)

[12:01] <theorbtwo> Right, but only on floppy, which won't help me without a floppy drive.

[12:01] <arcady_> yeah, installing linux on the beige macs is a real pain

[12:02] <arcady_> and booting it too

[12:02] <castaway> arcady_: actually we want osx on it

[12:02] <nothingmuch> arcady_: ever tried the nubus macs? yuck!

[12:02] <arcady_> panther won't work

[12:02] <theorbtwo> Right, have Jaguar.

[12:02] <castaway> it should with XFactoWhatsit

[12:02] <nothingmuch> what does xpostdefacto do, btw?

[12:02] <theorbtwo> Sorry, meant Jaguar when I said Panther above.

[12:02] <arcady_> ah

[12:02] <nothingmuch> does it modify the binaries?

[12:02] <theorbtwo> It seems to be mostly a set of kernel extensions.

[12:03] <arcady_> why do you want OS X on it?

[12:03] <nothingmuch> or does it fudge the puter so it thinks it's a newworld?

[12:03] <castaway> to run SEE

[12:03] <arcady_> yeah, basically it installs a few kexts

[12:03] <arcady_> you used to have to do it yourself

[12:03] <arcady_> it just does it for you nicely, I think

[12:03] <nothingmuch> theorbtwo: another path could be trying to install darwin itself

[12:03] <nothingmuch> and bootstrap OSX from an installation of that

[12:04] <theorbtwo> That's an idea.

[12:04] <nothingmuch> or netbsd

[12:04] <arcady_> darwin probably won't work

[12:04] <theorbtwo> I was wondering also if I can put the hdd in one of my pc boxes, and copy what I need onto there.

[12:04] <castaway> umm.. ebay: mac floppy drive new: buy now 5 euro

[12:04] <nothingmuch> theorbtwo: sure

[12:04] <nothingmuch> if it's ide, which at that era i'm willing to bet it is

[12:04] <castaway> (assuming thats the right sort of drive)

[12:04] <castaway> it has IDE

[12:05] <nothingmuch> so it's no problem

[12:05] <nothingmuch> but you should have a linux with support for macos style partition tables

[12:05] <arcady_> oh, and OS X doesn't support internal floppies... or didn't anyway

[12:05] <arcady_> since no mac has one

[12:06] <castaway> eh?

[12:06] <theorbtwo> Hmm?  There's a connector for one.  Even came with a cable.

[12:06] <castaway> what do they have then?

[12:06] <nothingmuch> and from there bootx

[12:06] <nothingmuch> arcady_: but that could be used to get 7.5.3

[12:06] <arcady_> those macs that have one

[12:06] <arcady_> they don't exist anymore

[12:06] <nothingmuch> to get dd

[12:06] <nothingmuch> or whatever tools

[12:06] <castaway> http://cgi.ebay.de/ws/eBayISAPI.dll?ViewItem&category=12828&item=5766697721&rd=1&ssPageName=WDVW (anyway)

[12:06] <nothingmuch> or at least run xpostdefacto

[12:06] <theorbtwo> OpenDarwin 7.2.1 does not support the g3 beige.

[12:07] <nothingmuch> darwin 7 == osx 10.3

[12:07] <arcady_> apple doesn't include drivers for apple hardware in darwin

[12:07] <nothingmuch> darwin 6 == osx 10.2

[12:07] <nothingmuch> etc

[12:07] <castaway> 7.5.3 does tho, arcady_ 

[12:07] <nothingmuch> arcady_: but rudimentary support should be possible, no?

[12:07] <nothingmuch> i mean, if they don't have graphics accel or networking, it doesn't really matter, right?

[12:07] <arcady_> potential problem with 7.5.3 though, is that it doesn't support HFS+

[12:08] <arcady_> nothingmuch, I don't think they have support for ADB either

[12:08] <nothingmuch> oh my

[12:08] <arcady_> you could netboot it headless, and that's about it, I think

[12:08] <nothingmuch> yuck kyuck yuck

[12:08] <castaway> eep

[12:08] <arcady_> else the linux folks would have taken the drivers long ago

[12:09] <theorbtwo> http://www.opendarwin.org/downloads/6.6.2/INSTALL.ppc.txt says that opendarwin/ppc 6.6.2 will insall and boot on all PowerPC-based Macintoshes supported by Mac OS X 10.2.6.

[12:10] <theorbtwo> Which AFAIK should include this one.

[12:10] <nothingmuch> if the osx boot cd won't work, i doubt opendarwin would either

[12:10] * castaway wonders if install/boot inclues "run" :)

[12:10] <arcady_> by the way, have you tried Open Firmware?

[12:10] * theorbtwo sighs.

[12:10] <castaway> the boot cd may just be broke

[12:11] <theorbtwo> Yes.  I still get the preboot screen.

[12:11] <theorbtwo> Which seems quite odd.

[12:11] <castaway> yes, arcady_ .. people are claiming that beige's don't boot from anything but an apple-cd

[12:12] <theorbtwo> Hold down alt-apple-o-f while booting, right?

[12:12] <theorbtwo> ...and that should work independent of any sort of boot media, even on oldworld macs, yes?

[12:13] <arcady_> yes

[12:13] <arcady_> BUT

[12:13] <arcady_> oldworld macs will show the OF screen on the default device

[12:13] <arcady_> which, for oldworld, is the serial port

[12:13] <nothingmuch> oi

[12:13] <arcady_> doesn't hurt to try anyway

[12:14] * nothingmuch is soooo glad that his booting-funny-OSs-on macs started with an ibook

[12:14] <nothingmuch> and then progressed into history

[12:14] <nothingmuch> and not the other way around

[12:14] <shapr> yay! iRiver > Sony

[12:14] <nothingmuch> ?

[12:15] <shapr> I bought a Sony 1GB Network Walkman, it refused to work with out Windows. iRiver 1GB costs less, has more features, works fine with Linux.

[12:16] <arcady_> but the sony one looks cooler, or something

[12:16] <shapr> Sony has lotsa copy protection, digital rights management, etc

[12:16] <arcady_> and sort of almost supports mp3!

[12:16] <castaway> 20GB++

[12:16] <shapr> Truly, the Sony does look cooler. Too bad you can't initialize the Sony without a copy of windows.

[12:16] <shapr> The iRiver worked out of the box.

[12:17] <kungfuftr> nothingmuch: that HTML seems to output very oddly (lots of random horizontal lines)

[12:17] <nothingmuch> kungfuftr: where?

[12:17] <nothingmuch> between table rows?

[12:17] <theorbtwo> Is the serial port the bottom one or the top one?

[12:18] <kungfuftr> nothingmuch: yar

[12:18] <nothingmuch> xshot?

[12:18] <kungfuftr> *blink* wtf... i switch back to em and they're gone... bloody odd

[12:18] <nothingmuch> theorbtwo: either, but i think the one marked with a telephone is the first one

[12:18] <nothingmuch> <em>?

[12:18] <theorbtwo> I have no case, and thus no markings.

[12:18] <nothingmuch> for the links?

[12:18] <nothingmuch> oh,

[12:18] <nothingmuch> uh, i think the top might work

[12:19] <nothingmuch> and if not the top then probably the bottom

[12:19] * castaway laughs

[12:19] <nothingmuch> do you have a mac serial to rs232 converter?

[12:19] <theorbtwo> I think so.

[12:19] <kungfuftr> nothingmuch: thought about marking todo tests with opacity? (yes, it's possible on all browsers)

[12:19] <nothingmuch> conceptually how will that work?

[12:19] <nothingmuch> i don't mind, i just don't know how

[12:20] <nothingmuch> but IMHO todo tests should be darker, like they are

[12:20] <nothingmuch> because everyone already knows what it means

[12:20] <theorbtwo> Eh?  TODO tests are /lighter/.

[12:21] <nothingmuch> there's a bug right now

[12:21] <nothingmuch> they are yellow

[12:21] <nothingmuch> but in my darcs repo they are dark green like they used to

[12:21] <nothingmuch> and unexpectedly succeeded todo tests are yellow

[12:22] <kungfuftr> todo = light red... todo unexectedly pass... light green?

[12:22] <nothingmuch> red implies failure, IMHO

[12:22] <nothingmuch> todo+fail is OK

[12:22] <nothingmuch> that's expected

[12:23] <nothingmuch> red catches the eye

[12:23] <kungfuftr> well yeah, but it's still a failure overall

[12:23] <nothingmuch> but then we'll be swamped in failures which aren't real

[12:23] <castaway> orange! no, blue!

[12:23] <nothingmuch> and green/red mixed together looks like poop, not green or red

[12:24] <kungfuftr> hhhmmm... orange is good

[12:24] <kungfuftr> as acme would agree

[12:24] * nothingmuch disagrees more

[12:24] * q[acme] agrees with orange

[12:24] <kungfuftr> =0)

[12:24] <nothingmuch> when i look at test results i would normally look for things in the following order:

[12:24] <nothingmuch> how many tests failed/passed etc (bottomline)

[12:25] <nothingmuch> if i see fail, scroll up/down looking for red things

[12:25] <nothingmuch> i want nothing else to stand out in this sweep

[12:25] <nothingmuch> and i don't want to get confused

[12:25] <nothingmuch> then i can go and look for a test to untodo, or a feature to implement

[12:26] <kungfuftr> nothingmuch: ever heard of semiotics?

[12:26] <castaway> so why are they in there at all? :)

[12:26] <shapr> What about red for failed test, yellow for fatal, and green for passing? Maybe unexpected successes can be blue?

[12:26] <nothingmuch> what's so bad about the current scheme?

[12:27] <shapr> The dark green for fatal confuses me, green means success to my unit test training.

[12:27] <kungfuftr> nothingmuch: different colors mean different things to different cultures

[12:27] <kungfuftr> semiotics++

[12:27] <shapr> The dark green fatal color is the only one that really gets in my way.

[12:27] <theorbtwo> Huh?  Dark green doesn't mean fatal.

[12:27] <nothingmuch> shapr: green *is* success

[12:27] <nothingmuch> kungfuftr: everywhere but PRC, if i recall correctly green is YES and red is NO

[12:28] <theorbtwo> Green is "what we expected to happen did".

[12:28] <castaway> (just give them classes, and let whomever has problems, customize in the CSS.. ,)

[12:28] <shapr> yeah, good idea

[12:28] <theorbtwo> Dark green is "expected failure".

[12:28] <nothingmuch> basically the colors are a measure of how much the implementation and tests are in synch

[12:28] <nothingmuch> sync

[12:28] <nothingmuch> if the implementation moves a little

[12:28] <nothingmuch> creating bugs, or fixing things

[12:28] <theorbtwo> We do, castaway, except in the right hand column.

[12:28] <nothingmuch> then you notice things

[12:28] <castaway> well why are there complaints then?

[12:29] <nothingmuch> because you see red and yellow popping up

[12:29] * nothingmuch doesn't know

[12:29] <castaway> (of course, this makes for nice confusion when comparing outputs :)

[12:29] <shapr> Ok, never mind. I like what I just saw on http://datenzoo.de/pugs/win2k.html

[12:29] <nothingmuch> shapr: that has a buggy Test::TAP::HTMLMatrix

[12:29] <kungfuftr> castaway: todo fail is green, which seems like this test is ok... no need to worry about implementing it to actually pass

[12:29] <nothingmuch> compare with http://nothingmuch.woobling.org/pugs_test_status

[12:29] <nothingmuch> kungfuftr: the test is ok, it's not a bug

[12:30] <nothingmuch> it's the lowest priority action after: fix bugs, untodo tests

[12:30] <theorbtwo> OK, I now have an open firmware prompt on the screen of my apple.

[12:30] <castaway> kungfuftr: then change your css, and stop bothering people :)

[12:30] <nothingmuch> theorbtwo: yay!

[12:30] <castaway> wow!

[12:30] <kungfuftr> castaway: =0P

[12:30] <castaway> how did you do that?

[12:30] <nothingmuch> t/operators/quoting.t is an interesting example

[12:30] <nothingmuch> roie_m's fixes changed things

[12:31] <nothingmuch> for the better, and for the worse

[12:31] <nothingmuch> (i think it was him)

[12:31] <nothingmuch> the changes caused two tests to fail

[12:31] <nothingmuch> and 6 tests to start becomming ok

[12:31] <nothingmuch> the rest of the green stuff is like it was before

[12:31] <shapr> nothingmuch: Ah, I don't like the dark green there. I don't know what it should mean. But I'll take castaway's suggestion.

[12:31] <nothingmuch> find a better meaning for it

[12:31] <nothingmuch> to me it's like a diff

[12:31] <nothingmuch> where dark green needs work

[12:31] <nothingmuch> but you better take care of red and yellow first

[12:32] <nothingmuch> btw, i don't know how to represent tests with no outpput

[12:32] <kungfuftr> black?

[12:32] <nothingmuch> Test::Harness thinks they are errors

[12:32] <nothingmuch> what meaning do you want to give to those blocks?

[12:32] <nothingmuch> black? why?

[12:33] <kungfuftr> nothingness... lack of something

[12:33] <nothingmuch> think of the tests as a sort of system where you mark points of sanity in the implementation

[12:33] <nothingmuch> testing lets you change code with confidence

[12:33] <nothingmuch> the stable situation is one where you start from

[12:34] <nothingmuch> everything is as expected

[12:34] <nothingmuch> some things are not yet ready

[12:34] <nothingmuch> you change xyz to make some dark green tests become green

[12:34] <kungfuftr> reminds me... gotta set up a tindering system soon

[12:34] <nothingmuch> you can see which ones started working when they turn yellow

[12:34] <nothingmuch> and which ones break when they turn red

[12:34] <nothingmuch> if your changes make only yellows, then you can just go to the test

[12:34] <nothingmuch> s

[12:34] <nothingmuch> and say "ok, this is the new stable situation, you are no longer todo"

[12:35] <nothingmuch> you confirm them

[12:35] <nothingmuch> todo tests that are failing should not attract attention, because they are normal

[12:35] <nothingmuch> and because we have so many of them

[12:35] * kungfuftr ran TAP::Matrix stuff with PDF output, wasn't bad

[12:35] <nothingmuch> html to pdf?

[12:35] <kungfuftr> nope... PDF::API2

[12:36] <nothingmuch> ah, instead of Petal?

[12:36] <kungfuftr> yar

[12:36] <nothingmuch> could you put that up on CPAN?

[12:36] <nothingmuch> kungfuftr++

[12:36] <kungfuftr> nope, fraid not

[12:36] <nothingmuch> licensing issues?

[12:36] <kungfuftr> commercial... =0(

[12:36] <nothingmuch> pdf2::api, or your visualizer?

[12:36] <kungfuftr> me own visualizer thingy

[12:37] <nothingmuch> oh well

[12:37] * kungfuftr will have a look at doing it at home though

[12:37] <nothingmuch>  /me is glad it's being useful though

[12:37] <kungfuftr> and it got ported to another framework too... so don't even have the code no more

[12:38] <nothingmuch> you lost me,

[12:38] <kungfuftr> we have our own harness framework... i did it in Test::TAP initially as a test to see if it was possible

[12:38] <nothingmuch> ah

[12:39] <kungfuftr> management like colorful PDFs

[12:39] <kungfuftr> q[acme]: defenitely nutty

[12:49] <stevan> morning all

[12:50] <stevan> theorbtwo: ping!

[12:50] <nothingmuch> hola stevan 

[12:50] <nothingmuch> i'm home in 40 mins

[12:50] <nothingmuch> i'd like to know what's new

[12:50] <nothingmuch> cool?

[12:50] <stevan> nothingmuch: yes

[12:50] * nothingmuch leaves now...

[12:50] <nothingmuch> ciao!

[12:50] <stevan> adios

[12:51] <stevan> kungfuftr: are you trying to make the test output in PDF?

[12:51] * stevan only half read the backlog today

[12:55] <kungfuftr> stevan: i did do

[12:55] <stevan> kungfuftr: even better :)

[12:55] <stevan> which PDF lib did you use?

[12:55] <kungfuftr> PDF::API2

[12:55] <stevan> yuk :P

[12:55] * stevan prefers pdflib-lite

[12:56] <kungfuftr> yar, but the most complete

[12:56] <stevan> kungfuftr: have you tried pdflib-lite? It

[12:56] <stevan> is pretty complete

[12:56] <kungfuftr> stevan: nope, mainly because it's all i have available here currently

[12:56] <stevan> :)

[12:57] <stevan> I have actually been working on a DBI like module for PDFs

[12:57] <kungfuftr> stevan: got a url?

[12:57] <stevan> yeah

[12:57] <stevan> this is the commercial site

[12:57] <stevan> http://www.pdflib.com/

[12:57] <stevan> for the more robust lib

[12:58] <kungfuftr> k

[12:58] * castaway wonders where theorbtwo went :)

[12:58] <stevan> but if you are on BSD and have access to the ports tree, try /ports/print/pdflib-perl/

[12:58] <stevan> I have used that several times on FreeBSD servers with no issue

[12:59] <stevan> kungfuftr: its a straight port of the C-api,... so its nothing fancy, but I think that in some cases the approach is simpler than PDF::API2

[12:59] <stevan> PDFs are very procedural creatures anyway

[12:59] <kungfuftr> stevan: mainly looking for a way to extract text from PDF (including non-latin characters) in perl

[12:59] <stevan> because all they really are is a sequence of PostScript commands

[13:00] <stevan> kungfuftr: the pdflib has pretty sophisticated PDF-parsing capabilities, but you need to pay for it

[13:00] <stevan> I think the license is like $400 USD

[13:00] <kungfuftr> stevan: hhhmmm... bah, don't think boss would got for the licence

[13:00] <stevan> yeah thats the hard one :)

[13:01] <jabbot> pugs - 2116 - Added script which reads output of "svn 

[13:01] <stevan> PDF parsing is pretty difficult since different programs and different libs will create different PDFs

[13:02] <stevan> we tried to create 2 pdfs, one with PDF::API2 and one with pdflib and tried to compare/diff them

[13:02] <stevan> totally different files

[13:02] <kungfuftr> stevan: we'd need the $10,000 licence it'd reckon

[13:02] <stevan> :)

[13:02] *** webmind_ is now known as webmind

[13:02] <kungfuftr> though should check with activestate to see if they have anything

[13:03] <stevan> I think you will find most PDF parsing libs cost $$

[13:03] <stevan> but if you do find a free one,.. please let me know :)

[13:04] <kungfuftr> stevan: well, if activestate have something, it'll not cost us anything

[13:05] <kungfuftr> (owning opensource language and tools company)++

[13:05] * shapr waves pom-poms

[13:05] * castaway deduces that kungfuftr works for Sophos

[13:05] <kungfuftr> castaway: filthy lies!

[13:05] <kungfuftr> *blink* um... yes

[13:08] <kungfuftr> anyways, back to work with me

[13:08] <castaway> :)

[13:09] <stevan> later kungfuftr 

[13:09] <stevan> howdy shapr, I aint seen you 'round these parts lately

[13:09] <shapr> Hiya stevan, I've been busy.

[13:10] <stevan> me too (I finally had to do some $work)

[13:10] <shapr> I should be busy now too, but I got my first wearable digital music player so I'm being geeky.

[13:12] <stevan> very nice

[13:12] <stevan> what did you get?

[13:13] <shapr> iRiver 1GB, after taking back the win32-only drm-only Sony Network Walkman.

[13:14] <shapr> It's quite nice, fm radio, easy voice record/compress/playback on the player itself, and standard mp3/ogg/something else playing.

[13:14] * theorbtwo has been trying to mess with the mac.

[13:15] <stevan> I have been condsidering getting one,.. but I find I am rarely without my laptop anyway :)

[13:15] <shapr> I haven't yet tested it in-flight on my unicycle, but that's about to happen once I have some music loaded.

[13:15] <theorbtwo> (And largely failing, but I at least have auto-boot mode off, so it now boots into open firmware.)

[13:15] <stevan> theorbtwo: our fearless Mac-Warrior has returned

[13:15] <stevan> theorbtwo: just FYI, i have OS 9, 10.0, 10.1, 10.2, 10.3 Cds

[13:15] <stevan> all you need to do is ask and I will post images for you

[13:20] <shapr> stevan: what sort of $work do you do?

[13:20] <stevan> shapr: mostly web-based database reporting tools

[13:20] <stevan> although we do plently of PDF and Excel exporting too

[13:21] <stevan> so it is not always web based

[13:21] <stevan> shapr: and yourself?

[13:22] *** stevan changes topic to: pugscode.org «Overview Journal Logs» | r1773/winxp: 587/4256 smoke/win2k (occasional): http://xrl.us/fqum (158/4302, r2032) Mac OS X (62/4459, r2116) | pugs.kwiki.org

[13:22] <theorbtwo> Hm, these may come in handy.

[13:22] <shapr> Sort of similar stuff. Lately I make websites for EU projects.

[13:23] <shapr> It mostly consists of webmonkey creation of input/edit/view for whatever type of info the EU project wants.

[13:23] <stevan> ah

[13:24] * stevan has to get some more coffee, bbiab

[13:24] <shapr> We use Zope/Plone because we need control flow abstractions, i18n support, document handling, mailing lists, message boards, membership, etc etc

[13:25] <stevan> I have been meaning to check out Zope, but I live so much in a perl world I know I will only get jealous :)

[13:25] <shapr> Zope has good and bad points.

[13:26] <shapr> It's the best thing I've seen yet, but I still very much want something better.

[13:28] <shapr> Computing in general needs a better i18n abstraction. ResourceBundles/gettext/etc just don't cut it.

[13:33] <nothingmuch> afternoon

[13:33] <theorbtwo> Have you read through the i18n modules at search.cpan.org/~autrijus ?

[13:33] <theorbtwo> Nothing mindblowing, but looks quite nice.

[13:33] <theorbtwo> Allo, nothingmuch!

[13:33] * castaway didnt notice nothin' go..

[13:33] * theorbtwo has the machine booting to OF (without silly stuck keys stuff).

[13:34] <nothingmuch> wee!

[13:35] <nothingmuch> now what can you do?

[13:35] * nothingmuch neever dabbled with OF

[13:35] <nothingmuch> except for 'reset all' or whatever

[13:35] <nothingmuch> and 'boot'

[13:40] <nothingmuch> stevan: ping

[14:00] <nothingmuch> hola Corion 

[14:00] <nothingmuch> did you get around to sending that test result?

[14:00] <Corion> hola nothingmuch 

[14:00] <Corion> nothingmuch: No - when run manually, it succeeds :(

[14:01] <nothingmuch> oi,

[14:01] <nothingmuch> oh well

[14:02] <Jonathan_> Gotta run...looks like it's tomorrow morning for getting the smoke tests running, providing nothing gets in my way. Bye

[14:02] <nothingmuch> ciao, Jonathan_ 

[14:02] <nothingmuch> good luck!

[14:03] <nothingmuch> what's everyone's favourite slide show tool?

[14:04] <Corion> s5

[14:04] <shapr> I like whatever metaperl was using.

[14:04] <Corion> I even wrote a stupid converter from pod to S5, but there are hundreds of those out there already ;)

[14:04] <autrijus> I use Spork+Kwid+S5

[14:04] <autrijus> or rather, Kwid=>Spork=>S5

[14:05] * nothingmuch doesn't want to learn latex every time he wants to use prosper... good calls

[14:05] <nothingmuch> autrijus: got some scripts for that?

[14:05] <autrijus> nothingmuch: it's on CPAN

[14:06] <autrijus> just install Spork and Spork::Formatter::Kwid

[14:06] <autrijus> then

[14:06] <autrijus> spork -new

[14:06] <autrijus> edit config.yaml to say

[14:06] <autrijus> formatter_class: Spork::Formatter::Kwid

[14:06] <autrijus> that's all

[14:06] <autrijus> if you want to generate S5, use

[14:06] <autrijus> plugin_classes:

[14:06] <autrijus> - Spork::S5

[14:07] <gugod> - Spork::S5ThemeFlower

[14:07] <nothingmuch> goody

[14:07] <nothingmuch> http://search.cpan.org/search?query=spork&mode=all

[14:07] <nothingmuch> yielded good results

[14:10] <nothingmuch> can't find Spork::Formatter::Kwid

[14:11] <autrijus> ingy: you forgot to release it?

[14:11] <autrijus> http://autrijus.org/tmp/Spork-Formatter-Kwid-undef.tar.gz 

[14:12] <nothingmuch> autrijus++

[14:12] <nothingmuch> it's in SVN either way

[14:12] <nothingmuch> google finds only that

[14:14] <Corion> Hmmm. At least my DSL still works. They were supposed to upgrade it today, but that didn't happen.

[14:16] <Corion> Oooo. nmake optimized now makes ghc.exe (6.4) panic. "ghc.EXE: panic! (the `impossible' happened, GHC version 6.4): mkWWcpr: not a product PugsziAST.Param{tc r1f9}"

[14:16] <Corion> Should we report these somewhere?

[14:17] <nothingmuch> i had that exact error too

[14:17] <nothingmuch> it went away after a while

[14:17] <Corion> nothingmuch: I still have it - since yesterda

[14:17] <nothingmuch> i had that 3 days ago, i think

[14:17] <Corion> in r2116

[14:17] <nothingmuch> and it went away starting yesterday morning, when i started trying again

[14:18] <Corion> nothingmuch: BTW, is there a way to get at your fixed version of Test::TAP::HTMLMatrix without installing darcs ? Like, a new CPAN release? :)

[14:19] <nothingmuch> wget -rp 

[14:21] <nothingmuch> i could release it, but i think it's a bit silly

[14:21] <nothingmuch> i'd like to be sure there are no other issues yet, that are as stupid

[14:21] <nothingmuch> i thought of waiting 2 days or so

[14:22] <autrijus> Corion: weird. does "optimized" after "clean" produce that error?

[14:22] <nothingmuch> autrijus: for me it did

[14:22] <Corion> autrijus: Aaah - maybe I should make clean before that ... Will retry after the smoke run went through.

[14:24] <autrijus> nothingmuch: it did produce the error? weird.

[14:25] <nothingmuch> yep

[14:25] <nothingmuch> nevermind, it went away

[14:28] <Corion> nothingmuch: Ah, but to fix all the stupid bugs, that's what version 1.0 is for. We are at 0.01, so you're still free to do incremental fixes :)

[14:28] <nothingmuch> okay

[14:28] * nothingmuch releases

[14:29] <Corion> nothingmuch++ # quick releases

[14:30] <nothingmuch> it's been two days, so I think it's OK

[14:31] <Corion> My releases often have a quick (three hour or so) fixup release after them ;)

[14:33] <Corion> nothingmuch: Also, I just want to see if the cpansmoke test produces another failure now for the module (and this time I won't upgrade other modules in the meantime ! I promise!)

[14:33] <nothingmuch> okies =)

[14:35] * PerlJam does a "svn up" in his pugs dir after several days away from pugs ... let's see what happens  ;)

[14:35] * PerlJam fully expects the world to have shifted.

[14:35] <Corion> And there is a new mail worm mailing *.de addresses. Unfortunately, I have such a mail address :(

[14:36] <Corion> Oh. And Pugs versioning is broken again (stopped at r2097)

[14:37] <Corion> r2116 smoke - http://datenzoo.de/pugs/win2k.html

[14:38] <nothingmuch> Corion: 2116 should be at the end of the 'extra' yaml

[14:38] <Corion> nothingmuch: It's there, but it's not up in the version message. And Pugs reports itself as being r2097, while it's actually r2116

[14:40] <Corion> I wonder how I could write a good test for that ... It would need to ask svn ... Not really feasible...

[14:41] <Corion> Ah. I see now. Whoever "fixed" it, made it circumvent my fix. Oh well.

[14:42] <Corion> Or maybe it's just me being stupid. Much more likely.

[14:48] <nothingmuch> hola lightstep 

[14:49] <lightstep> good afternoon

[14:50] <autrijus> yo lightstep-san

[14:50] <autrijus> :r no longer segfaults!

[14:51] <lightstep> happy bday

[14:51] <lightstep> what was the bug?

[14:51] <autrijus> thanks

[14:51] <autrijus> lightstep: seems getEnvironment is not reentrant for some reason

[14:51] <autrijus> all works when I changed it to just getEnv

[14:51] <autrijus> lightstep: are you interested in modelling the Larry List?

[14:52] <Corion> Larry List ?

[14:52] <autrijus> defined in http://www.nntp.perl.org/group/perl.perl6.compiler/622

[14:52] * Corion reads

[14:52] <autrijus> our Array currently are simple one-part lists

[14:53] <autrijus> Larry Lists (LL in short) will allow pushing to infinite lists.

[14:53] <autrijus> and even popping of.

[14:53] <stevan> pop-ing infinity :)

[14:53] <autrijus> updating our IArray to LLs will rock.

[14:54] <autrijus> nothing else needs changing -- just the IArray data structure itself.

[14:54] <lightstep> push and pop work at the end of the list?

[14:54] <autrijus> aye

[14:54] <theorbtwo> push and pop from the end, unshift and shift from the beginning.

[14:54] <lightstep> and infinite list are different from finite lists? or is it element-lists vs. generator-lists?

[14:54] <stevan> shift and unshift dont work on Inf arrays yet either

[14:55] <stevan> autrijus: did you see the Changelog? I tried to add all of yesterdays commits to it

[14:55] <theorbtwo> Apparently, all lists have an element section, followed by a generator section.

[14:55] <theorbtwo> Of course, either of them can be empty.

[14:55] <lightstep> eek. 0... has a last element

[14:55] <autrijus> lightstep: it seems like LLs has an FixedArray part and a Gen part

[14:56] <theorbtwo> Yep, and that last element is Inf.

[14:56] <theorbtwo> We don't do full Cantor transfinites, just boring old infinity.

[14:56] <autrijus> stevan: right. thanks for the monumental task :)

[14:56] <Corion> The LL sounds sensible to me, at least, it handles push/pop on infinite lists in a sensible way

[14:56] <stevan> autrijus: it was easy actually,.. most of the commmits were tests :)

[14:56] <autrijus> it is sensible. it's just a matter of implementation :)

[14:57] <stevan> BTW - there are commented out tests for these Inf lists in t/builtins/array/push|pop|shift|unshift.t

[14:57] <autrijus> yeah, I've seen'em

[14:58] <stevan> not very extensive though,.. since @larry  hadnt decided on it yet

[14:58] <autrijus> *nod*

[14:58] * stevan is off to the dirt world to do some errands

[14:58] <autrijus> have fun :)

[14:58] <stevan> I can try to write better ones when I come back

[15:00] <Corion> nothingmuch: BTW, I put some fixes for Win32 paths into util/testgraph.pl - do you want them for the main class? Currently it doesn't translate from local filenames to http filenames ...

[15:01] <Corion> (otherwise, I'll keep them local instead of committing them. They consist of the kludgey $link =~ tr[\\][/]; # for My::File and My::Subtest

[15:02] <nothingmuch> Corion: yes

[15:03] <theorbtwo> D'oh, I should have thought of that.

[15:03] <theorbtwo> I suspect that tests_catalog has a similar bug.

[15:03] <Corion> nothingmuch: I suggest (as a general solution) $link =~ tr[\\][/] if $^O =~ /MSWin32/

[15:04] <nothingmuch> (reverse?)

[15:04] <Corion> theorbtwo: I think alias wrote a module for that, but it always trips me up as well :)

[15:04] <nothingmuch> why not just use File::Spec?

[15:04] <nothingmuch> i'll put the fix where it ought to be

[15:05] <Corion> nothingmuch: Yes - you could use File::Spec - that's the saner approach ;)

[15:05] <nothingmuch> what is the diff?

[15:05] <nothingmuch> i 

[15:05] <nothingmuch> am not sure where the problem is yet

[15:06] <Corion> nothingmuch: ? Ah - when I run the unmodified testgraph.pl, I get links like t\builtins\foo.t#line25

[15:06] <nothingmuch> oh

[15:06] <Corion> ... which is not really good if I want to use it via HTTP instead of the file system

[15:06] <nothingmuch> i get it

[15:06] <nothingmuch> it's too much File::Spec

[15:06] <nothingmuch> ;-)

[15:06] <Corion> nothingmuch: You need to join "/". File::Spec is good for local files but not for HTTP :)

[15:06] * nothingmuch thought URI::file would take care of that

[15:07] <nothingmuch> it's taking a $path (opaque, comes from File::Find, $subtest->test_file, which is parsed from <pos:...>

[15:08] <nothingmuch> File::Spec is never in the way actually

[15:08] <nothingmuch> then I do return URI::file->new($path);

[15:09] <nothingmuch> I see: $u4 = URI::file->new("c:\\windows\\", "win32");

[15:09] <Corion> nothingmuch: Hmmm. Won't that create an absolute path?

[15:09] <nothingmuch> hmm, from the docs it sounds like it should work

[15:09] <lightstep> what is the arrangement of src/ ?

[15:09] <lightstep> (ie. which modules are in the Pugs namespace, and which are not?)

[15:10] <nothingmuch> • [syeeda:~] nothingmuch % perl -MURI::file -e 'warn URI::file->new("foo\\bar.txt", "win32")'

[15:10] <nothingmuch> foo/bar.txt at -e line 1.

[15:10] * nothingmuch is stumped

[15:10] <Corion> lightstep: All internal stuff went below Pugs/, but non-#perl6 libraries stay up there

[15:10] <theorbtwo> ...is, I think, the theory.

[15:10] <Corion> I guess that URI::file is the thing then. That looks good.

[15:10] <nothingmuch> • [syeeda:~] nothingmuch % perl -MURI::file -e 'warn URI::file->new("c:\\foo\\bar.txt", "win32")'

[15:10] <nothingmuch> file:///c:/foo/bar.txt at -e line 1.

[15:10] <nothingmuch> makes sense

[15:11] <Corion> For example the unicode is not internal, as is the regex lib

[15:11] <nothingmuch> i'm already using it, though, that's what's odd about the whole mess

[15:11] <theorbtwo> The reality is that I moved everything except the things that autrijus told me not to move.

[15:11] <Corion> theorbtwo: :))

[15:12] <nothingmuch> Corion: could you test how URI::file behaves without "win32" sent in, by default?

[15:12] <lightstep> and what is Pugs.Types.Array ?

[15:12] <nothingmuch> lightstep: Itypes implementations

[15:12] <lightstep> oh

[15:12] <theorbtwo> It's the implementation of the Array IType.

[15:13] <lightstep> but all it contains is a class definition

[15:13] <theorbtwo> Yeah.

[15:13] <Corion> C:\>perl -MURI::file -e "warn URI::file->new('foo\\bar.txt')"

[15:13] <lightstep> oh, i get it

[15:13] <Corion> # foo/bar.txt at -e line 1.

[15:14] <nothingmuch> oh crap

[15:14] <Corion> Ooo. After a "make clean", "make optimized" compiles.

[15:15] <nothingmuch> I forgot to do it for the links, it's only done for the CSS

[15:15] <nothingmuch> Corion++; # really a bug

[15:17] <autrijus> lightstep: the actualy IArray definition is in AST.hs

[15:18] <autrijus> line 1026

[15:18] <obra>    'morning

[15:18] <autrijus> hi obra.

[15:18] <obra> how goes?

[15:18] <autrijus> brain hurts.

[15:18] <nothingmuch> Corion: want to try now?

[15:18] <autrijus> 4th full day of banging-against-the-bamboo-wall

[15:18] <Corion> nothingmuch: Try now what?

[15:18] <autrijus> in a murderous mood :)

[15:18] <shapr> autrijus: you need a machete!

[15:18] <shapr> Ok, never mind

[15:19] <Corion> Or many many pandas

[15:19] <nothingmuch> Devel::ebug is my new machete

[15:19] <nothingmuch> Test::TAP::HTMLMatrix

[15:19] <shapr> autrijus + murderous mood + machete = bad

[15:19] <Corion> nothingmuch: From where?

[15:19] <nothingmuch> wget -r http://nothingmuch.woobling.org/Test-TAP-HTMLMatrix

[15:19] * autrijus frags shapr mercilessly

[15:19] <nothingmuch> ... or you could also get a darcs binary

[15:20] * shapr respawns in another part of the level.

[15:20] <Corion> nothingmuch: Ah, I've got 2 vcs installed already :)

[15:20] <nothingmuch> so?

[15:20] <autrijus> obra: http://struts.apache.org/flow/remote-example.html

[15:20] <nothingmuch> ;-)

[15:20] <theorbtwo> shapr++

[15:20] <autrijus> obra: I'm converging there.

[15:21] <jabbot> pugs - 2117 - add a couple of phrases

[15:22] <nothingmuch> Corion: darcs is very unintrusive, i think you'd like it if you don't want more bloat

[15:22] <obra> huh.

[15:22] <obra> Which parts of that? Are continuations now a part of this?

[15:22] * shapr has at least four VCSs installed

[15:23] <nothingmuch> woo! you can set $^O

[15:23] * nothingmuch has cvs, svn, svk (unused), darcs

[15:23] <nothingmuch> i should get around to learning svk finally

[15:23] <nothingmuch> but darcs is so fun

[15:23] <shapr> Yeah, darcs is addictively easy.

[15:23] <autrijus> obra: uh, more like the ajax help part

[15:25] <obra> ah :)

[15:25] <Corion> nothingmuch: Tested and installed OK here.

[15:25] <obra> pk. makes more sense

[15:25] <nothingmuch> how about the links?

[15:26] <nothingmuch> (i did not yet check in tests for URI

[15:26] <Corion> nothingmuch: I'm generating the graph at the moment :)

[15:26] <nothingmuch> with or without your tr///?

[15:26] <Corion> Ah, and btw, there is a potential division by zero error in the ::Model

[15:26] <Corion> nothing currently testing without the model

[15:27] <nothingmuch> i know, fixed

[15:27] <nothingmuch> 0.03 coming together

[15:30] <Corion> Hmm - no, still broken # http://datenzoo.de/pugs/win2k.html . But maybe that's a stale file.

[15:31] <Corion> No, the local copy is the same.

[15:32] <nothingmuch> okay, i wrote the test, now i'm working with that

[15:40] <nothingmuch> well, i've violated the darcs mantra

[15:40] <nothingmuch> unupull the URI::file in links patch

[15:40] <nothingmuch> and then darcs pull

[15:40] <nothingmuch> i've amend recorded a published patch because I shouldn't have published it

[15:52] <ninereasons> hi

[15:53] <shapr> niner niner, we read ya good buddy.

[15:53] <shapr> What's your 10-20?

[15:54] <theorbtwo> The svn --version should be working again.

[15:54] <ninereasons> puddletown usa, goodbuddy; backatcha

[16:01] <jabbot> pugs - 2118 - Make --version's r\d+ work right again (

[16:11] <jabbot> pugs - 2119 - * serializable subcontinuation monad imp

[16:11] <jabbot> pugs - 2120 - * err, typo.

[16:11] <shapr> That's nearly quotable.

[16:11] <shapr> "serializable subcontinuation monad implementation" "whoops, just a typo, really"

[16:12] <integral> heh

[16:12] <autrijus> heh.

[16:14] <qmole> lol

[16:14] <nothingmuch> hah

[16:14] *** nothingmuch is now known as someone

[16:14] <someone> tee hee

[16:14] *** someone is now known as nothingmuch

[16:16] <ingy> morning

[16:17] <shapr> Fnord

[16:17] <nothingmuch> shapr++

[16:18] <nothingmuch> hola ingy

[16:18] <nothingmuch> how many pounds in the last 24 hrs?

[16:18] <ingy> hi nothingmuch 

[16:18] <ingy> um 1-2

[16:18] <ingy> hopefully I'll be in maintenance mode this time next week

[16:19] <ingy> getting tired of not eating

[16:19] <nothingmuch> i wonder why that is

[16:19] <ingy> although I must say that not eating is far less ditracting

[16:20] <nothingmuch> Devel::Cover is soooo sloooow

[16:21] <pjcj> I optimise via Moore's law!

[16:21] <nothingmuch> pjcj: explain

[16:21] <pjcj> in 18 months it'll seem twice as fast

[16:21] <theorbtwo> ...assuming the machines it's being run on are new.

[16:21] <lightstep> chuck moore sells 60-GIPS chips for $1 US

[16:22] <nothingmuch> heh

[16:22] * nothingmuch 's computer is 5 years old

[16:22] <nothingmuch> lightstep: ref?

[16:23] <lightstep> forthfreak.net/misc/25x.html

[16:24] <ninereasons> thanks for fixing the ":r" segfault, autrijus. 

[16:25] <autrijus> ninereasons: no prob :)

[16:26] <lightstep> those chips are a little silly, though: 0.5 W of power, and no muptiplication opcode

[16:29] <nothingmuch> this is not really going to be the next big thing, is it?

[16:29] <shapr> Isn't it similar to the Cell's tradeoff?

[16:30] <lightstep> he's making these designs for the last decade or so

[16:42] <ingy> perlbot: nopaste?

[16:42] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[16:49] <nothingmuch> welll, does anybody else have Test::TAP::Foo bugs?

[16:50] * nothingmuch considers finally releasing

[16:50] <nothingmuch> hammerred out div by 0 cases in ratio

[16:50] <nothingmuch> now it DWIMS

[16:50] <nothingmuch> and have actual_cases method

[16:50] <nothingmuch> and $subtest->planned;

[16:51] <jabbot> pugs - 2121 - * `:l filename` no longer needs double q

[16:52] <ninereasons> neato, typing savings

[16:52] <nothingmuch> yay! drinking age in toronto is 199

[16:52] <nothingmuch> i was afraid it was 21

[16:52] <nothingmuch> s/9$//;

[16:54] <Juerd> 199; grin.

[16:56] <theorbtwo> (In the revision 2121, if Pugs is still alive...)

[16:56] <autrijus> hm?

[16:56] <theorbtwo> Old song.

[16:56] <theorbtwo> Not a good one either.

[16:56] <theorbtwo> http://frodisman.com/2525.html

[16:57] <theorbtwo> Oh, also it doesn't have a 2121 verse, just 2525.

[17:03] <Limbic_Region> chip about?

[17:03] <Limbic_Region> seen chip?

[17:03] <jabbot> Limbic_Region: chip was seen on Fri Apr  8 19:06:05 2005 GMT

[17:09] <nothingmuch> beh, releng never ever ends

[17:17] * nothingmuch releases

[17:21] <jabbot> pugs - 2122 - * assigning a List into a Scalar vivifie

[17:22] <nothingmuch> tarballs on http://nothingmuch.woobling.org/Test-TAP-Model and http://nothingmuch.woobling.org/Test-TAP-HTMLMatrix

[17:35] <nothingmuch> wow, i love darcs SOOOOO much

[17:35] <nothingmuch> example.pl snuck into Test::TAP::Model

[17:35] <nothingmuch> you can massage it out of history

[17:35] * nothingmuch feels like Richard Nixon

[17:36] <ninereasons> revisionist revision control

[17:37] <nothingmuch> uhuh

[17:37] <nothingmuch> and all with branching =)

[17:37] <nothingmuch> no 'p4 obliterate'

[17:38] <autrijus> darcs is supernice when you only have a couple developers :)

[17:38] <autrijus> <- developed Pugs up to 6.0.2 with darcs

[17:39] <nothingmuch> autrijus: what happens when more enter the picture?

[17:39] * nothingmuch doesn't have project which are that busy

[17:39] <nothingmuch> i rather like SVN now that I know it more

[17:39] <nothingmuch> it's copying metaphore is very elegant

[17:40] <autrijus> nothingmuch: the slowness kicks in.

[17:40] <nothingmuch> but centralization bites me

[17:40] <nothingmuch> i guess svk is prolly best for larger groups

[17:40] <nothingmuch> while darcs is fun for your own kind of thing

[17:40] <nothingmuch> autrijus: ah....

[17:40] <nothingmuch> they're working on it though

[17:40] <nothingmuch> lots of improvements, lately

[17:40] <nothingmuch> and David is taking a sabbatical, to work on the conflict resolution stuff

[17:42] <nothingmuch> wow... /me sold $12 worth of photos at shutterstock

[17:42] <autrijus> cool. but svk gained the darcs dependency algorithm :)

[17:42] * nothingmuch is impressed with himself

[17:42] <nothingmuch> but it can't undo

[17:42] <autrijus> nothingmuch: actually we figured out how to do that too :)

[17:42] <nothingmuch> that's actually my #1 reason for liking darcs now

[17:42] <nothingmuch> really?

[17:42] <autrijus> `svk obliterate`

[17:42] <autrijus> only works on fsfs though.

[17:42] <nothingmuch> in that case, make an interface as nice as darcs, and =)

[17:42] <nothingmuch> fsfs?

[17:43] <autrijus> the new svn 1.1 backend

[17:43] <nothingmuch> is clkao coming to the hackathon?

[17:43] <autrijus> it works by zeroing out the delta.

[17:43] <autrijus> don't think so... he's going to euroscon and yapceu last I heard

[17:43] <nothingmuch> bummer

[17:43] * nothingmuch promised he'd help

[17:43] <nothingmuch> but then time suddenly diminished

[17:44] <nothingmuch> maybe you'd like to hack a bit of svk at the hackathon

[17:44] <nothingmuch> well, lets not make plans

[17:44] <nothingmuch> we'll see what we want to do when we get there

[17:53] <clkao> bwahaha

[17:53] <nothingmuch> bwahaha?

[17:58] <crysflame> hi, clkao

[17:58] <nothingmuch> URI::Title <-- interesting

[18:02] <Corion> Hmm - the build is currently broken (r2122) - src/Pugs/Help.hs: file name does not match module name `Main'

[18:03] <autrijus> huh?

[18:03] <autrijus> worksforme

[18:03] <autrijus> can other people confirm?

[18:05] <Corion> "nmake clean && perl Makefile.PL && nmake" gives that problem.

[18:05] <ninereasons> no problem seen here

[18:06] <Corion> Weird ... I don't see any problem either, but ghc doesn't want it ...

[18:06] <Corion> src/Main.hs is there, it finds it, but then complains about src/Pugs/Help.hs ...

[18:07] <autrijus> Corion: "svn di" for local differences

[18:07] <autrijus> and do a "make clean"?

[18:07] <autrijus> failling that, try fresh checkout?

[18:08] <Corion> Ah. My usual problem. No newline at end of file - which doesn't get caught by a fresh checkout, but which makes ghc cry.

[18:08] <Corion> autrijus: Checkouts don't catch that...

[18:08] <Corion> Yep - now builds properly.

[18:09] <autrijus> you really should switch to a newline-happy editor :)

[18:09] * theorbtwo wonders if there's a way to get openfoundry to reject files with missing newlines at the end.

[18:09] <Corion> Why is ghc broken that way? (and why is my editor broken that way too)

[18:09] <Corion> I'm also looking for a fast/nice/tabbing editor that knows UTF8. I don't want the hog that is Eclipse, don't want vi* or emacs*

[18:10] <autrijus> well.. that doesn't leave much choices

[18:10] <autrijus> Komodo? ;)

[18:10] <theorbtwo> I hear good things about kwrite.

[18:10] <Corion> autrijus: Hmmm - never looked at it.

[18:10] <Corion> I should continue working on Zaphod.

[18:10] <autrijus> there is Haste.

[18:10] <Corion> An editor that is scriptable in JS has many advantages.

[18:11] * Corion goes looking for Haste

[18:11] <autrijus> # http://haste.dyndns.org:8080/screenshots.php

[18:11] <autrijus> it doesn't help your perl files :)

[18:11] <Corion> Ugh. Also uses Java. Big-slow-bloat.

[18:11] <autrijus> is it?

[18:11] <Corion> Oh. Now the error mutated.

[18:11] <autrijus> I thought it's totally in GHC.

[18:11] <Corion> src/RRegex.o(.text+0xd8):ghc2480.hc: undefined reference to `RRegexziSyntax_zdwpolyzuzez126Uz126U4_closure'

[18:12] <Corion> ... and some more.

[18:12] <autrijus> Corion: a clean+make will almost surely fix that

[18:12] <Corion> while Linking ...

[18:12] <Corion> autrijus: Did that already. Maybe I should do a fresh checkout...

[18:12] <Corion> Or maybe you did forget to check in a relevant file?

[18:12] <autrijus> maybe, yeah. sounds weird

[18:12] <autrijus> I didn't.

[18:13] <ninereasons> Corion, I like Helios Textpad, which has some support for utf8 encoding

[18:13] <Corion> autrijus: Oh well - I'll wipe src/ and do a fresh checkout then.

[18:16] <Corion> Yep. Wiping src/ and checking it out again worked. I wonder what caused that, because svn status claimed I was clean...

[18:18] * ninereasons finds himself typing " :t subname " in pugs.

[18:19] <ninereasons> mild case of Haskell infection

[18:19] <ninereasons> mostly, I seem to be immune

[18:19] <Corion> I need a faster machine. Building Pugs (optimized) already takes as long or even longer than building Perl ...

[18:20] <theorbtwo> We could make that work, possibly, though the types of subs I don't think are currently hugely interesting.

[18:20] <ninereasons> it seems to be largely a function of how much memory you have, Corion 

[18:21] * shapr hasn't recovered yet

[18:21] <clkao> i/win	24

[18:21] <Corion> ninereasons: I have 1GB of real RAM, and GHC only seems to be using 200MB or so. Maybe I should look into giving ghc more RAM ...

[18:21] <shapr> four years and counting

[18:22] <Corion> shapr: Complaints about ghc? :)

[18:22] <shapr> Only that it has more flags than the UN.

[18:22] <ninereasons> hahah

[18:22] <autrijus> Corion: splice.t all passes.

[18:22] <Corion> autrijus: Oh whee! That means I need to uncomment some of the harder tests there! Yay! :)))

[18:23] <autrijus> Corion: actually I uncommented them :)

[18:23] <autrijus> see r2123.

[18:23] <Corion> autrijus++

[18:23] <autrijus> now you can convert the rest 5

[18:23] <Corion> autrijus: Sure will do :)) And I really have to look at your changes to learn what you did :)

[18:23] <clkao> autrijus: damnit. let's do svk hackathon in yapceu

[18:23] <autrijus> clkao: I won't be @yapceu

[18:23] <Corion> clkao: Could be interesting ;)

[18:24] <autrijus> euroscon, yes

[18:24] <autrijus> unless I manage to find another sponsor

[18:24] <Corion> (but I don't know/have svk)

[18:24] <clkao> where will you be around that time?

[18:24] <autrijus> Corion: just download the win32 installer and start s/svn/svk/g 

[18:24] <autrijus> Corion: everything will be the same except magically faster

[18:24] <autrijus> clkao: dunno, it's mostly funding issue

[18:25] <Corion> autrijus: And I'll have a local repository where I can commit to. Hmmm ...

[18:25] <clkao> autrijus: er, to #svn-dev and talk to brane. he is resolving the bad apr_uint32_t issues

[18:26] <clkao> autrijus: funding, i thought you earned enough money last year :p

[18:26] <autrijus> clkao: ...and I'm going to invest all of them to this box thing :p

[18:26] <clkao> oh.

[18:26] <clkao> magical box

[18:26] <shapr> Pandora's box?

[18:26] <autrijus> rubic's box

[18:27] <shapr> What's rubic's box? Like Rubik's Cube?

[18:27] <autrijus> right. misspelling

[18:28] * theorbtwo wants to see a Rubik's Cube case mod now.

[18:28] <theorbtwo> Preferably motorized.

[18:28] <shapr> Would be an amusing way to dump heat.

[18:28] <shapr> Watch the bits spin.

[18:29] <theorbtwo> I'm not sure it'd really dump heat.

[18:30] <theorbtwo> Friction.

[18:31] <Corion> autrijus: I get No compatible subroutine found: &splice\n App "&splice" [] [Var "@a",App "&prefix:+" [Var "@a"] [],Val (VInt 0),Val (VInt 11),Val (VInt 12)] # now

[18:31] <Corion> ... which is the first splice call I want to test.

[18:31] <autrijus> Corion: really.

[18:31] <autrijus> Corion: is it from splice.t?

[18:32] <Corion> Yeah - line 53 is offending I think.

[18:32] <Corion> If I comment out lines 52-56, some more tests pass and then it dies after test 7

[18:33] <autrijus> this is maximally weird.

[18:33] <autrijus> I'll check out a fresh copy.

[18:33] <Corion> The first test is splice(@a,+@a,0,11,12); - maybe it doesn't like that inline list at the end ? I'll check my local status with svn diff - maybe the newlines got broken again and I didn't notice.

[18:34] <autrijus> no, it all works for me

[18:34] <nothingmuch> http://nothingmuch.woobling.org/YAPC/NA/2005/outline.txt

[18:34] <autrijus> that test, I mean

[18:34] <Corion> No, all clean according to svn diff.

[18:34] <Corion> and r2123 is the most current version.

[18:34] <nothingmuch> cleaned up a bit, now that I can read better

[18:34] <Corion> And just before I started looking closer, I saw splice.t work

[18:35] <Corion> I think I need to wipe the whole directory and check out completely fresh :(

[18:35] <autrijus> it worksforme from a fresh copy :(

[18:35] <Corion> autrijus: I think it's something broken in my local copy and I need to nuke it from space. It's the only way to be sure.

[18:36] <theorbtwo> (Jurassic Park solution)++

[18:37] <Corion> Oh. "make" works. "make optimize" doesn't.

[18:37] <Corion> This is really weird. If we accept ghc as bugfree, that is.

[18:37] * Corion builds pugs as optimized again.

[18:37] <theorbtwo> GHC is not bugfree.

[18:37] <Corion> theorbtwo: I know.

[18:38] <autrijus> we are exercising all sorts of cutting edges.

[18:38] <theorbtwo> You might be interested in adding a -dcore-lint, to tell you where ghc thinks it's buggy.

[18:38] <Corion> ... but in an ideal world, the optimized version would be functionally identical to the unoptimized version ;)

[18:38] <Corion> autrijus: The GHC devs should worship you, as you supply them with a possibly infinite list of bugreports :)

[18:38] <Corion> "potentially"

[18:38] * theorbtwo tries to remember what he was working on.

[18:39] <Corion> theorbtwo: resurrecting your filesystem?

[18:39] <theorbtwo> No, did that several days ago.

[18:39] <theorbtwo> Mostly, at least.

[18:39] <Corion> No. It was merely a bad build, however I did that. Now it just plain works, even with the optimized build.

[18:39] <theorbtwo> /var and /home were on a different partition.

[18:39] * Corion doubts his sanity.

[18:40] <Corion> (a bit more than every other day)

[18:40] <autrijus> theorbtwo: Evalable? :D

[18:40] <theorbtwo> Ah, no, but close.

[18:40] <theorbtwo> Writing tests for the existing eval_haskell.

[18:40] <castaway> eval_lisp !

[18:40] <theorbtwo> Including a bunch of TODO tests.

[18:40] <autrijus> delete.t passes. yay.

[18:41] <jabbot> pugs - 2123 - * splice.t all passes.

[18:41] <jabbot> pugs - 2124 - * delete.t passes.

[18:41] * autrijus praises the high test coverage

[18:42] <machack666> pugs> my $j = 1|2

[18:42] <machack666> undef

[18:42] <machack666> $j = 5

[18:42] <machack666> *** Error:: Can't modify constant item

[18:43] <machack666> I get that the assignment is being autothreaded, but does this mean that once a variable is declared a junction, it cannot be reassigned?

[18:44] <machack666> i.e., is there some way of saying $j, the variable, rather than $j, the junction of the two values held in the variable

[18:44] <nothingmuch> maybe if you take a ref to a junction, then it become a non-autothreading junction?

[18:44] <autrijus> I don't think assignment is autothreaded.

[18:45] <autrijus> it's just a simple bug :)

[18:45] <machack666> I think we're getting the equivalent of 1 = 5 | 2 = 5

[18:45] <Corion> autrijus: Do we know how big our test coverage actually is? In a Devel::Cover sense, I mean?

[18:45] * nothingmuch meant in the general case

[18:45] <autrijus> machack666: add a test for that?

[18:45] <nothingmuch> Corion: Paul Johnson thought that maybe we could pull something off with hat

[18:45] <machack666> sure ... is that an eval ... ; 1 case?

[18:45] <autrijus> machack666: eval_ok, yeah

[18:46] <Corion> nothingmuch: Nice - so we can zero in on the white spots of the map :)

[18:46] <pjcj> nothingmuch: no - that looks unlikely now

[18:46] <nothingmuch> oh, you are paul johnson

[18:46] <pjcj> ;-)

[18:46] <theorbtwo> HAT doesn't work for a lot of the more odd features of GHC.

[18:46] <nothingmuch> pjcj++; # Devel::Cover has been very useful for me lately

[18:47] <pjcj> thanks - I'm glad it has

[18:47] <pjcj> right, pugs uses libraries hat can't deal with

[18:48] <nothingmuch> maybe we can be a bit more brutish, and just note every successful pattern match and the function it took?

[18:48] <nothingmuch> the only thing left after that is branches

[18:48] <nothingmuch> i think

[18:48] <theorbtwo> And sadly it fails very uncleanly.

[18:49] <nothingmuch> how hackable is GHC?

[18:49] <shapr> Somewhat hackable.

[18:49] <autrijus> GHC is written in GHC

[18:49] <shapr> On the good side, the primary GHC developer shows up on #haskell most days, so once you get into it, you can ask him deep questions.

[18:49] <machack666> ok, added a test in t/junctions/misc_junctions.t

[18:49] <nothingmuch> autrijus: that does not compute

[18:50] <autrijus> machack666: danke

[18:50] <machack666> de nada

[18:50] <autrijus> shapr: oh, wait, who is that?

[18:50] <nothingmuch> shapr: I hope that was a hypothetical 'you'

[18:50] <Corion> autrijus: I get two fails now in splice.t, with weird tests that I don't really understand. But I verified them in Perl5. (r2127)

[18:51] <jabbot> pugs - 2125 - * exists.t passes.

[18:51] <jabbot> pugs - 2126 - Test for reassignment of a junction vari

[18:51] <jabbot> pugs - 2127 - Converted more Perl tests

[18:51] <machack666> off to find more corner cases...

[18:56] <nothingmuch> Corion: any results from tapfoo yet?

[18:56] <Corion> nothingmuch: tapfoo?

[18:56] <nothingmuch> Test::TAP::*

[18:57] <Corion> nothingmuch: Just installing the new versions from your tarballs

[18:57] <Corion> Both tested (and installed) clean

[18:58] <nothingmuch> how about the URI mess?

[18:59] <machack666> ok:

[19:00] <machack666> pugs> my $j = 1|2

[19:00] <machack666> pugs> my $k= \$j

[19:00] <machack666> pugs> $k.ref

[19:00] <machack666> ({ref:<Scalar::Const>})

[19:01] <nothingmuch> wow

[19:01] <nothingmuch> how do you find all this stuff?

[19:01] <machack666> looks like it's taking a ref to the contents, and not to the junction itself

[19:01] <machack666> i like to break things

[19:01] <machack666> :D

[19:01] <nothingmuch> i meant how do you figure out what to try and break?

[19:02] <machack666> instinct, i guess

[19:02] <nothingmuch> machack666++

[19:02] <machack666> my first karma point !!

[19:02] <machack666> :)

[19:02] <nothingmuch> machack666++

[19:02] <nothingmuch> machack666++; # deserves more

[19:03] <masak> machack666++

[19:03] <machack666> my second karma point !!

[19:03] <nothingmuch> perlbot karma machack666 

[19:03] <perlbot> Karma for machack666: 4

[19:03] <masak> :)

[19:03] <nothingmuch> =)

[19:03] <machack666> my "third" | "fourth" karma point !!

[19:03] <masak> lol

[19:03] <machack666> so what is the type of a junction ref supposed to return, so I can write a test for it?

[19:04] <theorbtwo> perlbot, highest karma

[19:04] <perlbot> The top 5 karma entries: C: 93, autrijus: 83, nothingmuch: 59, stevan: 49, theorbtwo: 31

[19:04] <machack666> C++ :P_

[19:04] <shapr> C--

[19:04] <theorbtwo> C--

[19:04] <machack666> must come up in conversatin

[19:04] <shapr> C-- is at http://www.cminusminus.org/

[19:05] * machack666 considers changing his nick to machack666++

[19:05] <machack666> ;)

[19:05] <nothingmuch> lets talk about C-- in the context of how GHC uses C-- to create C code. Does GHC use C--?

[19:05] <nothingmuch> C-- is much better than the cee that shall not be autoincremented

[19:05] <nothingmuch> doesn't see, to work

[19:05] * shapr laughs

[19:06] <shapr> That which shall not be autoincremented.

[19:06] <nothingmuch> I think C-- is really cool, only I don't really know what C-- is. Anyone care to explain C--?

[19:06] <shapr> perlbot: highest karma

[19:06] <perlbot> The top 5 karma entries: C: 84, autrijus: 83, nothingmuch: 59, stevan: 49, theorbtwo: 31

[19:06] <shapr> wow, that was fast.

[19:07] <machack666> perlbot: lowest karma

[19:07] <perlbot> The bottom 5 karma entries: <: -417, -: -89, php: -70, <!: -36, ": -15

[19:07] <nothingmuch> where's rindolf?

[19:07] <q[acme]> heh <!

[19:07] * shapr summons schlomi

[19:07] <machack666> perlbot: middlingest karma

[19:08] <nothingmuch> middest karma?

[19:08] <theorbtwo> C-- C--

[19:08] <shapr> midden karma?

[19:08] <shapr> C-- C-- !

[19:08] <machack666> C----!

[19:08] <machack666> C-=100?

[19:09] * machack666 contemplates breaking the perlbot...

[19:09] <machack666> edge cases, dammit!

[19:09] <Corion_> nothingmuch: http://datenzoo.de/pugs/win2k.html

[19:09] <machack666> ;)

[19:09] <mj> C--

[19:09] <shapr> perlbot: highest karma

[19:09] <perlbot> The top 5 karma entries: autrijus: 83, C: 78, nothingmuch: 59, stevan: 49, theorbtwo: 31

[19:09] <shapr> ahh, much better.

[19:10] <nothingmuch> Corion: with your hacks?

[19:10] <Corion_> nothingmuch: No, without any hacks.

[19:10] <nothingmuch> yay!

[19:10] <castaway> orange!

[19:10] * nothingmuch goes to play with sister

[19:10] * autrijus waves goodnight

[19:10] <nothingmuch> orange what?

[19:10] <nothingmuch> ciao, autrijus!

[19:11] <jabbot> pugs - 2128 - eval_is '...' won't find the lexical '$j

[19:11] <Corion_> Hmmm. Should \xa0 break in a whitespace delimited list? I think not.

[19:11] <castaway> colours

[19:11] * Corion_ goes to investigate

[19:11] <castaway> later nothingmuch 

[19:11] <theorbtwo> I think not as well.

[19:11] <theorbtwo> G'night, autrijus.

[19:11] <nothingmuch> castaway: which colours? in the percentages?

[19:11] <theorbtwo> Er, G'night, nothingmuch.

[19:11] <shapr> good night autrijus!

[19:12] <castaway> yup

[19:12] * nothingmuch will come back =)

[19:12] <nothingmuch> castaway: aren't they pretty? i like around 65%ish the best

[19:12] * shapr throws lambdas

[19:12] <castaway> pretty++

[19:12] <shapr> C--

[19:12] * theorbtwo ducks.

[19:13] * castaway catches and tosses back

[19:13] <theorbtwo> Careful, those lambdas have sharp points!

[19:13] <theorbtwo> Allo, Corion!

[19:13] <theorbtwo> Are my flixes for the version thingy working for you?

[19:14] <Corion__> Hmm. The connection seems a bit spotty :(

[19:14] <theorbtwo> Oh, the DSL-ISP switch finally went through?

[19:16] <Corion__> theorbtwo: Partially. I'm now on a 3mbit line. But I still don't have the 1und1 account data %-)

[19:16] <Corion__> I'm using my T-Online account now, which is only good for a 1mbit line, supposedly. But I've also read that others are using their 1mbit account on 3mbit lines.

[19:16] <shapr> Does it cost three times as much?

[19:16] <castaway> sneaky

[19:17] <Corion__> shapr: With T-Online it costs three times as much (usually), 70 EUR as opposed to 25 EUR. But with the switch I will pay 7 EUR.

[19:17] <Corion__> Oh. I got a mail from their customer support. Let's see.

[19:17] <castaway> is that including the line?

[19:18] <Corion__> And some more ... mailworms :(

[19:18] <Corion__> I need to rewire my mailscanner to delete them on the pop account so they don't clog my mailarchive :(

[19:19] <Corion__> Grrr. Their customer "service" reply is merely a redirect to the phone support. Which is closed for today. Great.

[19:19] <Corion__> (but I expected bad customer service)

[19:19] <shapr> I recently got k-lined by my ISP because they had network problems so I flooded the MAC address cache on the switch to explore the local net. They laughed when I told them I was actually trying to fix the network rather than DoS it.

[19:20] <Corion__> shapr: Take over their Cisco routers and reconfigure the network yourself.

[19:20] <shapr> I'm tempted.

[19:20] *** Corion__ is now known as Corion_

[19:20] <shapr> But I have enough stuff to do, and they're limping along by themselves for the most part.

[19:21] *** Corion_ is now known as Corion

[19:22] <Corion> Hmm. I should find some big file to download, to see if the connection is capped or not ;)

[19:23] <shapr> download me!

[19:23] <Corion> shapr: url?

[19:23] * gaal reads the poem for Config.hs and giggles

[19:23] <shapr> um

[19:23] <shapr> Sadly, I'm not network enabled to that level yet.

[19:24] <gaal> s/poem/riddle/ really.

[19:26] <theorbtwo> Corion: Download yourself a new kernel source tarball.

[19:26] <shapr> Oh, good idea. You could darcs get the linux kernel repo

[19:26] <Corion> theorbtwo: Yeah, that's an idea.

[19:26] <Corion> shapr: I don't have darcs :)

[19:27] <shapr> You could download darcs first ;-)

[19:27] <shapr> Oh, speaking of which I should migrate the DarcsWiki to moin 1.3 and upload it to darcs.net

[19:28] <shapr> Now that I finally got around to asking for a login for darcs.net.

[19:31] <jabbot> pugs - 2129 - unTODOed unexpected succeedings

[19:34] <gaal> perl5 $Config{sig_name} is ugly imo. think we can change it from a string to something else?

[19:37] <Corion> Ah hah. Seems like Haskell words() regards \xA0 as whitespace.

[19:37] <Corion> ... which is bad/unexpected.

[19:40] * boogie introducing the first Pugs web application

[19:40] * boogie says it's very slow, so I'll remove from my server, but you can check it now. :)

[19:40] <boogie> http://perl6.wish.hu/cgi-bin/index.cgi

[19:44] <Corion> boogie: Nice :))

[19:45] <theorbtwo> Cool.

[19:47] <theorbtwo> Hm, there's an awful lot of "some nondescript dude" tiles.

[19:48] <castaway> camels++

[19:49] <boogie> thanks. :)

[19:49] <stevan> boogie++

[19:50] <stevan> boogie: you should put this into CGI/examples/

[19:50] <theorbtwo> boogie++

[19:50] * theorbtwo wonders what http://perl6.wish.hu/pics/card10.jpg is.

[19:50] <shapr> It's a camel.

[19:51] <jabbot> pugs - 2130 - Fixed whitespace parsing. \xA0 is nonbre

[19:51] <boogie> stevan: the code has a lot of ugly hacks, i don't think it's a good idea. :)

[19:52] <shapr> theorbtwo: I'm guessing it's part of the Perl Tarot.

[19:53] <stevan> boogie: so does CGI.pm :)

[19:54] * theorbtwo didn't know there was a perl tarot.

[19:54] * shapr didn't either.

[19:54] <theorbtwo> Of course, I also don't recognize all the faces in this game.

[19:55] <Corion> Bah. Looks like the latest "fix" I committed did break more than it fixed (as usual).

[19:55] <shapr> That's how we all learn.

[19:56] <Corion> shapr: True, but I should learn to run "make test" _before_ I commit :)

[19:56] <shapr> ah, good point.

[19:56] * theorbtwo doesn't recognize guy-with-brown-stripe-in-the-background, guy-with-pale-blue-background, or guy-with-grey-background.

[19:57] <boogie> who wonders: 3 - larry wall, 4 - leo tötsch, 5 - me, 6 - autrijus tang, 8 - damian conway, 9 - randal schwartz 

[19:58] <ninereasons> fun stuff, boogie.  

[19:58] <boogie> stevan: It's really ugly. But I'll think about it. ;)

[19:58] <theorbtwo> Are you sure 6 is Autrijus?

[19:59] <shapr> card7 maybe?

[19:59] <boogie> theorbtwo: I'm not sure just me and Leo (I met him personally), the others from Google Images

[20:00] <boogie> the correct list: 3 - larry wall, 4 - leo tötsch, 5 - me, 7 - autrijus tang, 8 - damian conway, 9 - randal schwartz 

[20:00] <stevan> two matches so far ;)

[20:00] <boogie> 6 - dan sugalski

[20:01] <stevan> boogie: I think the code (regardless of the number of ugly hacks) is useful for people to see

[20:01] <stevan> we all promise not to judge you by it :)

[20:01] <theorbtwo> Who is 6, then?

[20:02] <theorbtwo> Ah, thank you, boogie.

[20:03] <stevan> I got Larry, Randall and a Camel :)

[20:03] <stevan> doh,.. the server went away ??

[20:03] <ninereasons> shut down now, for me

[20:04] <ninereasons> well, boogie said that its' being removed

[20:05] <ninereasons> ... and now it's back

[20:05] <boogie> oops, i've gzipped the whole directory. :)

[20:06] <boogie> it's seems that the server is OK now, I think I will remove it later

[20:07] <boogie> the load is about 6, what's not normal, but working

[20:10] <lightstep> what is PAR?

[20:11] <Corion> PAR is the Perl answer to JAR - a self-contained Perl package

[20:11] <Corion> (can be converted into a self-contained executable9

[20:11] <lightstep> autrijus wrote about #par in his journal, but it seems rather empty

[20:13] <Corion> There is a talk by autrijus on PAR ( he held it on the German Perl Workshop)

[20:13] <Corion> I think CPAN also has lots on PAR, resp. the documentation of PAR.

[20:13] * Corion goes looking for the talk.

[20:14] <Corion> http://wagner.elixus.org/~autrijus/par-tutorial/start.html

[20:15] <Corion> testgraph++ # makes comparing against the current test run very convenient

[20:21] <jabbot> pugs - 2131 - Working fix for nonbreaking whitespace. 

[20:21] <ninereasons> www.letterjames.de is nifty

[20:23] <lightstep> the we-want-cookies-and-you-don't page isn't available in english

[20:36] <Corion> r2131 - http://datenzoo.de/pugs/win2k.html

[20:37] *** Corion changes topic to: pugscode.org «Overview Journal Logs» | r1773/winxp: 587/4256 smoke/win2k (occasional): http://xrl.us/fqum (91/4373, r2131) Mac OS X (62/4459, r2116) | pugs.kwiki.org

[20:43] <mj> my @index = (

[20:43] <mj>    hash ( a => 1,  b => 2,  ),

[20:43] <mj>         { c => 3,  d => 4,  },

[20:43] <mj> );

[20:43] <mj> say join " ", @index.ref, @index[0].ref, @index[1].ref;  # Array Hash Pair

[20:44] <theorb> Hm, well, 2 out of 3 ain't bad.

[20:46] <stevan> :)

[20:49] <theorb> Hm, which is better for eval_haskell if $*PUGS_HAS_HSPLUGINS is 0: Don't plan the rest of the tests, or skip them?

[20:51] <Corion> theorb: I think skipping is better, as skipping produces some output that will allow you to diagnose the problem.

[20:52] <Corion> Perl also skips tests when features are disabled.

[20:54] <theorb> Hm, a couple problems with skip, though...

[20:54] <theorb> 1) My test code has to keep checking with every test if $*PUGS_HAS_HSPLUGINS.

[20:55] <theorb> 2) They constantly show as skipped on the testgraph.

[20:55] <boogie> Memory game's source code has been added to the SVN repository...

[20:55] <Corion> theorb: No. skip 4, "$feature not implemented"; exit. And yes, they show on the test graph, which is my intention (for diagnosing)

[20:55] <ninereasons> yay, boogie++

[20:56] <theorb> Mmm, OK.

[20:56] <Corion> ... because if you think you have hs-plugins, and you see the skips, you should start to wonder

[20:56] * shapr skips and hops

[20:56] <Corion> theorb: Later we should get SKIP: { ...; skip; ... }; # like we have in Perl5

[20:57] <theorb> Hm, should we have a skip_rest that skips all of the tests that the plan says we should have left?

[20:57] <Corion> theorb: That'd be nice, yes.

[21:01] <jabbot> pugs - 2132 - The first web application... ;)

[21:01] <stevan> boogie++ 

[21:03] <theorb> Wow.  Test.pm has a global variable named "$loop", uncommented.

[21:05] <stevan> we should make all those $globals into $GLOBALS

[21:13] <Corion> g'night

[21:14] <theorb> G'night, ... oh, already missed him.

[22:11] <jabbot> pugs - 2133 - Test::skip_rest (thus far undocumented),

[22:12] <mj> g'night

[22:15] <ninereasons> night, mj

[22:21] <jabbot> pugs - 2134 - * restore IMC to a runnable state

[22:31] <jabbot> pugs - 2135 - * restore Eclipse sanity.

