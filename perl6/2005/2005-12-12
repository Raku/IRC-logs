[00:18] <svnbot6> r8179 | autrijus++ | * fixed threaded-ghc detection in Makefile.PL.

[00:24] <svnbot6> r8180 | autrijus++ | * During "make install", the build system will still warn for

[00:24] <svnbot6> r8180 | autrijus++ |   "make register" even if Cabal has already registered for the user.

[00:24] <svnbot6> r8180 | autrijus++ | * If the user has a local perl directory but is not root (and hence

[00:24] <svnbot6> r8180 | autrijus++ |   cannot write to the global GHC package configuration file), do not

[00:24] <svnbot6> r8180 | autrijus++ |   attempt to register as it will trigger an obscure error.

[00:24] <svnbot6> r8180 | autrijus++ |   (Both reported by Andrew Savige.)

[00:29] <dduncan> r8158 has a 'make' failure when compiling Pugs.Run, citing Pugs/PreludePC.hs

[00:29] <dduncan> trying later version ...

[00:31] <dduncan> now trying r8172

[00:37] <audreyt> hm, the Perldoc-Kwid and YAML-Syck situation is really bad.

[00:38] <audreyt> ingy: will you have slices of time to fix either of them, or should I give it a go, or do you know other interested parties?

[00:38] <audreyt> (for p5)

[00:44] <stevan> audreyt: ping 

[00:45] * stevan curses his shody IRC client

[00:45] <audreyt> stevan: yo

[00:45] <audreyt> stevan: the bridge makes sense.

[00:45] <stevan> audreyt: cool

[00:45] <audreyt> stevan: I think I need an ObjSpace minilang as well

[00:45] <audreyt> Pugs.MM.Parser 

[00:45] <stevan> what is the first mini-lang for?

[00:45] <audreyt> that has additional forms tailored to OO, such as "class {}"

[00:46] <audreyt> the first one is just core native types.

[00:46] <audreyt> the second minilang subsumes the first

[00:46] <stevan> to describe them? or to use them?

[00:46] <audreyt> and desugars to the first

[00:46] <audreyt> to use them

[00:46] <audreyt> they are the moral equiv to your s-exp

[00:46] <stevan> ok

[00:46] <audreyt> and the second MM lang will have signature forms

[00:46] <stevan> so a mini-lang on top of a mini-lang :)

[00:46] <audreyt> for which we'd need first-class types

[00:47] <stevan> ok

[00:47] <audreyt> so I'll go back and add it as a native type

[00:47] <stevan> cool

[00:47] <stevan> I was mostly envisioning the module-signature type as being a hash of (Str -> Method) 

[00:47] <audreyt> PickAxe has two pages (or was it threE)

[00:48] <audreyt> that lists the builtin types and methods

[00:48] <audreyt> I think we need that as well

[00:48] <stevan> ok

[00:48] <stevan> isn't that S29 actually?

[00:48] <audreyt> it turns out asavige has written an entire book about Data/C++

[00:49] <audreyt> no, S29 needs to be reformed into just a list of default imports

[00:49] <audreyt> that's more like S30

[00:49] <audreyt> and each class would need its own manpage

[00:49] <stevan> ok

[00:49] <audreyt> so "perldoc Int" would behave sensibly

[00:49] <stevan> If we can get @larry to add doc strings to the language we can autogenerate it all :)

[00:50] <stevan> so wont the second mini-language essentially be a minimal Perl 6?

[00:51] * stevan is envisioning a PASM & PIR type relationship between the two mini-languages

[00:51] <stevan> is that what you are thinking?

[00:51] <audreyt> stevan: yes, I think it will grow to be PIL2

[00:51] <audreyt> yes.

[00:51] <stevan> ok

[00:51] <audreyt> but we may need more forms to get dependent types etc

[00:51] <audreyt> but that's not for this milestone

[00:51] <stevan> ok

[00:51] <audreyt> it's a dynamic language in this milestone (with types as assertions)

[00:54] <stevan> audreyt: so is the mini-lang documented anywhere?

[00:54] <stevan> in other words,.. can I mess around with it?

[00:54] <audreyt> stevan: if you would like, please sprinkle haddocs around the source

[00:55] <audreyt> just write in {-| ... -} blocks 

[00:55] <stevan> ok

[00:55] <audreyt> the relevant haskell source is PIL.Native.Types line 41

[00:56] <audreyt> the parser forms are all in P.N.Parser

[00:56] <audreyt> pretty forms are in P.N.Pretty

[00:56] <audreyt> you can experiement with "make pil"

[00:56] <audreyt> between those three I hope you'd be able to figure out the syntax forms

[00:56] <audreyt> and document it a bit -- feel free to muck around as well

[00:56] <audreyt> I'll do the same for bootstrap itself in PIL.MM.Types

[00:56] <audreyt> PIL.MM.Parser and PIL.MM.Pretty

[00:57] <audreyt> exactly like you envisioned

[00:57] <stevan> ok

[00:57] <stevan> excellent :)

[00:57] <audreyt> stevan++ # excellent visionary for this coding monkey

[00:58] * stevan blushes

[00:58] <audreyt> *smile*

[01:01] <dduncan> 8172 has same failure ... returning to HEAD and trying a make realclean

[01:05] <dduncan> now building 8180 following a make realclean

[01:06] <svnbot6> r8181 | autrijus++ | * More build system tweaks:

[01:06] <svnbot6> r8181 | autrijus++ |     - Don't let the user continue if "Setup" cannot be built

[01:06] <svnbot6> r8181 | autrijus++ |       (usually indicated a broken Cabal install)

[01:06] <svnbot6> r8181 | autrijus++ |     - Prompt the user to install as root if it looks like

[01:06] <svnbot6> r8181 | autrijus++ |       $Config{sitelib} is not writable.

[01:10] <clkao> audreyt: 1.06 works alright?

[01:10] <stevan> audreyt: I think I grok the mini-lang now

[01:10] <audreyt> stevan: wow, like, in 10 minutes

[01:10] <stevan> are "nil" and "true" literals?

[01:10] <audreyt> clkao: it does, but provides: is broken

[01:10] <audreyt> stevan: yes, and false

[01:10] <stevan> Parsec is very readable :)

[01:11] <audreyt> I mean yes, and "false"

[01:11] <audreyt> stevan: yeah, isn't it :)

[01:11] <audreyt> actually I left out "false"

[01:11] <audreyt> please add it in

[01:11] <audreyt> that will be your first haskell commit :)

[01:11] <stevan> I still have trouble following actual Haskell code,.. but I can grok the "spirit" of the code

[01:11] <stevan> :)

[01:12] <stevan> I will add some Haddock too so that its more than a single line commit ;)

[01:13] <audreyt> stevan: cool :)

[01:13] <audreyt> rafl: my intention is to schedule 6.2.11 with next parrot

[01:14] <audreyt> like, one or two days after next parrot

[01:14] <rafl> audreyt: Great, thanks.

[01:14] <audreyt> if we did get bootstrap hooked at that time (which is possible but don't count on it), we'll call it 6.28.0

[01:14] <audreyt> but one way or another there will be a release that works with the parrot-with-nonbroken-lexical-pads

[01:14] <clkao>  audreyt so it's not indexed properly?

[01:14] <audreyt> (we can't target this current parrot)

[01:14] <audreyt> clkao: "provides" was typoed as "procides" in META.yml

[01:15] <audreyt> clkao: I am deeply sorry (already fixed in M::I)

[01:15] <audreyt> (M::I 0.41)

[01:15] <clkao> oh !*(#@&$

[01:16] <audreyt> yesterday I warned you in #svk... probably missed it

[01:16] <clkao> can you ask konig to do proper manual index for me (or you can do so?)

[01:16] <audreyt> you can release 1.07 and just rant against me in the changelog and rel announcement. you have been known to do so.

[01:17] <obra> actually, you can do reindex by hand now

[01:17] <stevan> audreyt: are closures represented as p6-ish pointy blocks?

[01:17] <obra> and version re-indexing

[01:18] <clkao> no, i don't want to release 1.07

[01:18] <audreyt> stevan: yes. better syntax welcome

[01:18] <audreyt> obra: oh really. how?

[01:18] <clkao> i've only done that ranting about myself

[01:18] <obra> audreyt: hang on

[01:18] <stevan> audreyt: nah, I like pointy blocks :)

[01:18] <clkao> konig did manual index for me before provides: is ever actually in use

[01:19] <audreyt> clkao: you did that for 0.25.

[01:19] <obra>     https://pause.perl.org/pause/authenquery?ACTION=reset_version 

[01:19] <clkao> XD

[01:20] <stevan> audreyt: how do I call a constructor? ::bit.new() ?

[01:20] <clkao> right i shall get some sleep

[01:21] <audreyt> stevan: you can only write literals

[01:21] <audreyt> stevan: they are their own constructor

[01:21] <stevan> ?

[01:22] <stevan> I dont understand

[01:22] <audreyt> barewords are constructors

[01:22] <audreyt> no other forms yet

[01:22] <stevan> ah

[01:22] <stevan> so true or false

[01:22] <audreyt> yup

[01:22] <stevan> nice

[01:22] <audreyt> which is a problem with composites

[01:22] <audreyt> [1.add(2)] is currently illegal

[01:23] <audreyt> as is [$v]

[01:23] <audreyt> to support them though will need either new forms

[01:23] <stevan> hm

[01:23] <audreyt> or explicit .new method

[01:23] <audreyt> and I'm not sure we really need them yet

[01:23] <audreyt> as it can be done with [].append(1.add(2))

[01:23] <audreyt> but we'll see.

[01:23] <stevan> ok

[01:23] <audreyt> maybe the parser should just desugar this to that.

[01:24] <audreyt> feel free to implement it :) I'm going to give two talks 30 minutes from now

[01:24] <stevan> no need for sugar at this point

[01:24] * stevan doubts he will implement any Haskell tonight :)

[01:24] <stevan> comments I can do

[01:24] <Juerd_> Good night everyone

[01:24] <stevan> night Juerd_ 

[01:25] <audreyt> stevan: fix the "false" too

[01:25] <audreyt> bbiab

[01:47] <stevan> audreyt: is there any form of assignment? Can I "name" things? 

[01:55] <audreyt> going to UNSW for the talk

[01:55] <stevan> ok

[01:55] <stevan> I will keep digging

[01:55] <audreyt> stevan: assignment is on the MM level since it works with containers

[01:55] <stevan> ok

[01:55] <audreyt> you can name things by saying

[01:55] <audreyt> (->$x{...}).call(3)

[01:55] <audreyt> which names $x to 3

[01:55] <audreyt> we can have a "let" form as sugar as well

[01:55] <audreyt> if you want

[01:55] <stevan> oh I see

[01:55] <stevan> ok

[01:56] <audreyt> I need to run now

[01:56] <stevan> no,.. thats cool for now

[01:56] <stevan> enjoy

[01:56] <stevan> audreyt++ 

[02:05] <MacVince> how do I get Perl 6 on my PC?  Either with darcs or svn, the command's not on pugscode.org from what I can see.

[02:05] <stevan> MacVince: svn co http://svn.openfoundry.org/pugs/

[02:05] <MacVince> Thanks

[02:18] <dduncan> so the head compiled fine

[02:18] <dduncan> trying a smoke ...

[02:18] <dduncan> on another matter ...

[02:18] <obra> 'evening

[02:19] <dduncan> I hear from 1-2 hours ago that there is a plan to release a 6.2.11, following the next parrot release

[02:19] <dduncan> I assume that parrot would be 0.4.1 ... do you know when that is?

[02:19] <stevan> dduncan: or 6.28.0 if we can get the metamodel bootstrapped 

[02:19] <obra> dduncan: parrot releases are monthly

[02:20] <tewk_> dduncan: yep, I would guess end of the month

[02:20] <dduncan> I suppose in 3 weeks then

[02:20] <dduncan> then I'll try to have my database stuff in some working form by then

[02:20] <dduncan> I'm even putting aside another project and working on it today

[02:21] <dduncan> so at 6:18 local I started a smoke of a cleanish-built r8180

[02:22] <dduncan> after 4 mins, its at ext/File-Spec ... it may be too soon to tell, but the speed problem may have been a phantom and may be gone now

[02:36] <dduncan> 18 mins in, now on ext/URI

[02:40] <dduncan> now at 6:40, on t/builtins/io

[02:40] <dduncan> performance seems normal

[02:59] <stevan> audreyt: I am getting errors about ghcconfig.h not being there when I try "make pil"

[03:13] <dduncan> I was away from comp, but the smoke is now done

[03:13] <dduncan> so it completed in under an hour

[03:14] <dduncan> seems back to normal to me

[03:14] <dduncan> I suspect the problem may have been a dirty build on my system, and not anything that was checked in ...

[03:14] <dduncan> or if it was a bad checkin, that was fixed in the last 10 revisions

[03:15] <dduncan> now uploading the smoke result

[03:18] <dduncan> done

[03:18] <dduncan> the official "repository snapshot / darwin" is now 51 minutes, much better than that 345 minutes yesterdayish

[05:17] <Alias_> seen audreyt?

[05:17] * Alias_ misses not having purl

[05:25] <gaal> morning

[05:25] <Alias_> afternoon

[05:25] <gaal> dduncan: so I take it it wasn't 8153 that caused the slowdown? whew :-) but I still wonder what it coulda been.

[05:26] <gaal> hey Alias_

[05:26] <dduncan> hello

[05:26] <gaal> dduncan++; # thanks very very much for tracking this

[05:26] <dduncan> gaal, I never tracked it down per se

[05:27] <dduncan> I can guess that either the problem was on my machine, or it just came and went ... the former is more likely

[05:28] <gaal> dduncan: at least we know that refactoring Exp wasn't responsible. it would have sucked if it were, because it'd mean forward maintainership would be hurt

[05:28] <dduncan> one thing that I did notice is that the current version getting code doesn't work properly when one checks out an older revision and has a local repository ... while the files are rolled back, the current version reported by pugs is the latest revision ever committed

[05:28] <dduncan> I think

[05:29] <dduncan> one clue that the problem was just my machine is that the linux smokes seemed to be fast as ever, as reported

[05:29] <gaal> you mean, svn co -r XX some/file ; make ; ./pugs -v says YY?

[05:29] <dduncan> um ...

[05:29] <dduncan> not sure

[05:29] <gaal> that makes sense, if some/file isn't responsible for versions :)

[05:30] <dduncan> but its a minor matter even if I did see a problem, since it doesn't affect the newest version by definition

[05:33] <gaal> doesn't look like a problem to me, becuase I can't envision any sort of solution that makes sense. ./pugs -v  => "all files are rX except for some/file and that/other/file which are rY, and oh, /that/one/there is rZ

[05:33] <gaal> nobody would ever look at versions anymore :-)

[05:34] <gaal> in a project that was massively forked maybe that could be useful though

[05:34] <dduncan> so nothing needs to be done

[05:34] <dduncan> with this matter

[05:35] <gaal> I think I've seen c projects that take care to have symbols populated from CVS so that every file had this stamp. If you need that level of versioning, ok I guess, but I'd rather not need it!

[05:37] <gaal> (you know, you can't really stop there either. say I co rX, then hack on file f1 but don't check it in yet. f1 will report version X, but of course it isn't a pristine X any more. This actually *is* an issue for smoke tests, where careless hackers (*whistle*) forget to remove some experimental code they'd left in somewhere, run and submit a smoke, and in fact some of its results are bogus.)

[05:38] * gaal has been guilty of that one :/

[05:39] <Alias_> CVS-based versioning is bad

[05:39] <gaal> whatever, i'm not advocating that

[05:40] <Alias_> It makes it almost impossible to have someone else work on the code in their own repository

[06:07] <Alias_> ack... feature that audreyt was supposed to implement in M:I isn't... :/

[06:10] <Alias_> aaaahhh... it got implemented, but apparently not added to the Manifest

[06:25] <svnbot6> r8182 | Darren_Duncan++ |  r1246@Darren-Duncans-Computer:  darrenduncan | 2005-12-11 22:22:00 -0800

[06:25] <svnbot6> r8182 | Darren_Duncan++ |  /ext/Rosetta-Incubator : updated SQL/Routine.pm to add new (empty) classes ::Document and ::Node, updated Rosetta.pm to add ::Interface, ::Interface::fubar (a placeholder), ::Engine; in both files, added a template INTERFACE pod and expanded the VERSION pod

[07:04] <svnbot6> r8183 | Darren_Duncan++ |  r1252@Darren-Duncans-Computer:  darrenduncan | 2005-12-11 23:03:25 -0800

[07:04] <svnbot6> r8183 | Darren_Duncan++ |  /ext/Rosetta-Incubator : minor README update; the pre-rewrite Rosetta svn depot has moved

[07:06] <dduncan> g'night folks

[08:51] <ingy> rafl: pong

[08:52] <ingy> rafl: msg me

[08:52] <ingy> audreyt: will I have slices of time to fix either of who?

[08:55] <ingy> audreyt: I may have slices of time if you feed me slices of cake...

[08:56] <xinming> where to get the irc log message for this channel please?

[08:57] <Alias_> She'll be busy until 2-3 hours

[08:57] <Alias_> Giving a talk at Sydney.pm tonight... 

[08:57] <blm> ?

[09:00] <xinming> hmm, I mean the log bot

[09:01] <Alias_> google?

[09:02] <Alias_> in fact, the pugs website has a link

[09:02] <xinming> No, I can't get the channel log through the link provided in www.pugscode.org

[09:02] <Alias_> http://colabti.de/irclogger/irclogger_log/perl6?date=2005-12-12

[09:02] <xinming> thanks

[09:02] <Alias_> That's where the link takes me...

[09:06] <xinming> the redirect procedure seems to be a problem here, ISP is broken. :-/

[10:22] <PJF> Ahoy there, m'hearties!  Is it reasonably for me to alter the pugs makefile to also remove 'tempfile.*.*' and 'temp-test.*.*-out' as part of a 'make clean'?

[10:22] <PJF> Given their names I presume they are temporary, and hence prime candidates for sweeping during a clean operation.

[10:24] <PJF> Good.  I was hoping nobody would object. ;)

[10:27] <svnbot6> r8184 | pjf++ | Remove temp-test.*.*-out and tempfile.*.* during make clean

[10:35] <Alias_> GODDAM FUCKING PUZZLE PIRATES

[10:38] <PJF> Arrr?

[10:38] <PJF> Everything okay, Alias?

[10:45] <Alias_> WASTING TIME

[10:49] <blm> I must try this puzzle pirates :-)

[10:49] <PJF> I'm not sure if it was a good idea showing it to Alias...

[10:55] <blm> PJF: Dont we need distractions now and then

[10:55] <blm> PJF: ?

[10:56] <PJF> Oh aye.  Although Puzzle Pirates can be very distracting. ;)

[10:56] <PJF> www.puzzlepirates.com

[10:56] <PJF> We're on the Sage ocean.  Alias here is "Peucebeard", and all the Python/Twisted people hang out in crew "The Squishy Few".

[10:57] <blm> :-)

[10:57] <blm> Cool

[11:22] <blm> No luck

[11:22] <PJF> No luck?

[11:22] <blm> Firewall problems

[11:23] <PJF> Arr....

[11:23] <blm> Shiver me timbers!

[11:23] <blm> I need a good name

[11:24] <PJF> Pugsbeard. ;)

[11:24] <blm> Firewall has been beaten :-)

[11:25] <blm> danke :-)

[11:25] <PJF> That didn't take you long.

[11:25] <PJF> If it's your first login, you may wish to exit off the character creation screen, and pick "Sage" as your ocean on the login screen.

[11:25] <PJF> Otherwise you won't have the joy of beating Alias at swordfighting for hours on end. ;)

[11:26] <blm> So just hit cancel without creating a pirate?

[11:26] <PJF> Yup!

[11:27] <PJF> It picks a random ocean (aka server) when you first start, for load balancing reasons.

[11:27] <blm> Already on Sage :-)

[11:27] <PJF> Good good.

[11:33] <Alias_> NO!

[11:33] <Alias_> Don't do it!

[11:34] <Alias_> Having fully evaluated the wonder and hilarity that is Puzzle Pirates, I have decided I must allow it to dominate my life, of vanquish it, and send it to the briney bottom

[11:34] <Alias_> I have chosen the latter

[11:34] <PJF> Most wise.

[11:34] <kane-xs_> pff... chicken ;)

[11:34] <Alias_> AR!

[11:34] <Alias_> So now I'll just have to stick to CPAN the Gathering

[11:35] * PJF laughs.

[11:39] <Alias_> IT IS DONE

[11:39] <blm> Need more pirate sayings :-)

[11:39] <Alias_> Now I can be the only person to say I have "Defeated" Puzzle Pirates

[11:40] <PJF> http://www.talklikeapirate.com/howto.html

[11:41] <gaal> PJF: Arr! It's obvious you are on windows because those are cleaned automatically on other platrorms

[11:41] <gaal> but PJF++ nonetheless!

[11:42] <gaal> (I used to be on Midnight for a while, but haven't logged in in a while)

[11:42] <blm> I know a few people I can make completely ineffective with Puzzle Pirates ;-)

[11:42] * PJF laughs

[11:42] <gaal> haha

[11:43] * Alias_ waves

[11:43] <Alias_> nobody shows audreyt

[11:43] <Alias_> :)

[11:43] <blm> Yes that could be bad :-)

[11:43] <PJF> Aye, I agree there.  Audrey should definitely be kept away.

[11:43] <Alias_> She's apparently only barely recovered from the Nethack addiction

[11:45] <Alias_> grr... I really dislike that XML::SAX::Writer->new doesn't return a XML::SAX::Writer object

[11:45] <Alias_> But then the SAX toolkit of modules is amazing enough I'm willing to overlook it

[11:45] <PJF> Nethack was glorious.  I spent a goodly amount of my student life playing that game.

[11:45] <Alias_> Team Fortress for me

[11:46] <Alias_> in retrospect, I'm glad my addiction was a multiplayer game

[11:46] <Alias_> Because no single player game can hold me for more than a few days now

[11:47] <Alias_> Becoming a programmer also helps, because your disgust at the crappy AI translates into innoculation

[11:47] <PJF> I loved team fortress, but my P90 and 36.6k modem didn't.

[11:47] <wolverian> subspace! 

[11:47] <Alias_> Did I mention I administered the residential college LAN? So I had 100meg ethernet to fibre in my bedroom

[11:48] <Alias_> Which has kind of innoculated me from getting shitty about low connection speeds :)

[11:48] <blm> Alias_: hmmph spoilt on campus students ;-)

[11:48] <Alias_> Since nothing I will ever have will compare to it

[11:49] <blm> I used to work at a games place with 20 computers that the public could rent time on to play netgames

[11:50] <blm> It innoculated me from spending too much time playing multiplayer games on the net as Broadband < LAN

[11:50] <Alias_> yeah... still, CPAN the Gathering is the ultimate game

[11:51] <blm> I haven't got that game yet :-)

[11:51] * PJF taps Alias and cats Summon Acme::Everything.

[11:51] <Alias_> Fortunately, I don't even know what that means

[11:52] <Alias_> I only lived with game players, I managed to resist their smelly ways

[11:52] <PJF> Well, avoid the cardboard crack as well. ;)

[11:52] <Alias_> But some culture leached into my skin

[12:06] <gaal> audreyt: bug report re: http://search.cpan.org/~autrijus/Acme-emcA-0.04/lib/Acme/emcA.pm

[12:06] <gaal> "This document describes version 0.04 of Acme::ComeFrom, released November 8, 2002."

[12:07] * Alias_ snickers... bug reports for Acme modulkes

[12:07] <Alias_> Just submit it to RT

[12:09] <audreyt> gaal: fixed

[12:09] <svnbot6> r8185 | autrijus++ | * convenience function "eval" for work in the "make pili" interactive shell.

[12:10] <Alias_> ah, you're back

[12:10] <audreyt> skud++ # volunteering to help the p6doc/pugsdoc effort

[12:10] <Alias_> audreyt: You forgot to add M:I:Share to the dist

[12:10] <Alias_> Or at least, it didn't make it to the version that went to CPAN

[12:12] <PJF> Evening Skud!

[12:12] <Skud> evening

[12:13] <Skud> fancy seeing you here

[12:13] <gaal> rehi all

[12:14] <gaal> bug reports for Acme modules are very important! :) we must bring silliness to perfection.

[12:14] <Skud> audreyt: got your invitation, thanks.  doing the necessary now.

[12:14] <PJF> Funny that.  ;)  We seem to keep bumping into each other. ;)

[12:14] <audreyt> Skud: yo! :)

[12:15] <Skud> pjf: was just thinking of you today, actually, as i updated my resume and tried to figure out what to say about the training notes

[12:15] <Alias_> gaal: Perfect Chaos? Is that even a concept?

[12:18] <gaal> It's an imperative!

[12:18] <PJF> Skud: I think you should say very good things about the training notes. ;)  Is my memory correct that you were looking at working at a nice non-IT centered place, like a museum?

[12:19] <gaal> like "time flies when you're having fun".

[12:19] <Alias_> You are leaving IT during the Great Perl Drought?

[12:20] <kane-xs_> who's actually droughting right now?

[12:20] <audreyt> gaal: won NAPC no si 01.0 Acme::emcA 0.10 is on CPAN now :laag

[12:21] <gaal> audreyt: תודה רבה

[12:21] <audreyt> :)

[12:22] <gaal> hahahaaa! irssi screws up the timestamp for that line

[12:22] <Alias_> kane-xs_: It's not quite 2000 all over again, but it's heading that way

[12:22] <Skud> pjf: yes, my ideal job would be to do the sort of stuff i'm doing (LAMP plus kinda broader ranging generalist stuff) in a museum setting.

[12:22] <Alias_> ooohhh... still coding, but somewhere nicer :)

[12:22] <Skud> pjf: there's a good looking opening at hte national library of australia that i'm going to apply for.

[12:23] <kane-xs_> alias: jobs.perl seems rather slow for that in .eu at least

[12:23] <kane-xs_> in general, not many perl'ers asked for here

[12:23] * gaal would love to live in the kind of city that had a full time job for a museum techie who did LAMP stuff.

[12:23] <Skud> gaal: well, this is library information systems

[12:23] <Skud> and it's the australian equivalent of the LoC

[12:23] <gaal> ah!

[12:23] <Alias_> Wouldn't the National Library mean Canberra?...

[12:24] <Skud> alias: yes, it would.  but i survived ottawa, which is like canberra only less pretty and 30 degrees colder.

[12:24] <Alias_> hahahah, right, forgot about that 

[12:24] <gaal> 30 degrees in what scale?

[12:24] <svnbot6> r8186 | autrijus++ | * PIL.Native: introduce the idea of slurpy primitives (primX) -- 

[12:24] <svnbot6> r8186 | autrijus++ |   [].push(1,1.add(1)) for example.  Was going to desugar [1, 1.add(1)]

[12:24] <svnbot6> r8186 | autrijus++ |   into that form, but then was distracted to give four talks in a row.

[12:24] <PJF> Skud: Sounds fantastic.  Good luck with the application.

[12:24] <Skud> i mean, canberra's not my idea of a great place to live, but it's an OKish place, and i've had a stint of "real city" so i'm kind of refreshed and ready to face the vicissitudes of whatever my career demands next.

[12:24] <Skud> thanks pjg

[12:24] <Alias_> Skud: Sure

[12:24] <Skud> pjf even

[12:25] <Skud> alias: also, sydney is too humid for my tastes :)

[12:25] <Alias_> Compared to Melbourne?

[12:25] <PJF> What confuses me with Canberra is it's so seasonal.  I have to keep checking if parliment is going to be in season before travelling there.

[12:25] <svnbot6> r8187 | autrijus++ | * add the missing "false" literal to PIL.Native.Parser

[12:25] <svnbot6> r8187 | autrijus++ |   as it seems Stevan didn't get around to that yet :)

[12:27] <PJF> And Canberra is filled with people who can't tell me what they do for a job, except that it must involve Perl.

[12:27] <audreyt> Skud: feel free to poke around docs/* and try to make sense of it -- asavige and I will try to type out the doc tree reorg braindump tomorrow and post it into the tree

[12:27] <Skud> pjf: why does parliament affect you?

[12:27] <Skud> audrey: i'm probably not even going to do a checkout for a few days yet, i'm afraid.

[12:27] <audreyt> but my brain's fried after giving five talks today, and so I'll have to sleep and check back tomorrow :)

[12:27] <audreyt> Skud: oh, cool, that's fine

[12:28] <Alias_> audreyt: Can you release M:I 0.43 before you go?

[12:28] <Skud> life's kind of crazy right now. too much bloody seasonal crap, plus i'm kind of braindead with hayfever at this time of year.

[12:28] <Alias_> Just make sure ::Share is in the dist this time, otherwise no change

[12:28] <PJF> Skud: Parliament means more expensive airfares and accomodation.  So if we're going to organise training courses in Canberra, we try to do it in the "off season".

[12:28] <Skud> oh, right.

[12:28] <Skud> i never did training in canberra

[12:28] <Skud> mostly did melb/syd with the odd jaunt elsewhere mostly for corporate stuff

[12:29] <audreyt> Alias_: k

[12:29] <Alias_> thans

[12:29] <Alias_> thanks

[12:29] <Skud> pjf: this is the job ad: http://www.nla.gov.au/jobs/1707aps5-6.html

[12:29] <PJF> Skud: We were surprised at how popular Canberra has been.  A few departments are jumping into Perl in a big way.

[12:29] <Alias_> audreyt++ # Still catching up

[12:29] <Alias_> PJF: Unlike in the corporate world, government has to be more accountable on costs

[12:29] <audreyt> Alias_: also author_from form is in

[12:29] <audreyt> and all_from will use it

[12:29] <Alias_> ok

[12:29] <Skud> audreyt: mind you, i may well check it out at work instead/as well ... i'm moving desks and will be closer under my boss's eye, but perl looks like work ;)

[12:29] <audreyt> also if you've explicit set stuff before, all_from won't try to guess those

[12:30] <audreyt> Skud: cool :D

[12:30] <PJF> Skud: Nice that Duty #1 mentions open source explicitly.

[12:30] <Skud> pjf: yes. it's all OSS by the looks of it.  looks like lots of glue and XML.

[12:30] <PJF> And Duty #3 is to hang out with Audrey.

[12:30] <Skud> yes!

[12:30] <Alias_> PJF: Also, my spies tell me that the anti-microsoft rubmlings in government grow louder, so I imagine when you start moving more things to linux, there's a rise in Getting Stuff Done work involved in that

[12:31] <Alias_> audreyt: An explicit after all_from will overwrite though?

[12:31] <audreyt> Alias_: sure

[12:31] <Alias_> ok, just double checking

[12:32] <audreyt> Alias_: but you'd more likely to put stuff for all_from fails to guess

[12:32] <PJF> Alias: Canberra is still around 50/50 between training on Windows and *nix.  If anything the percentage of training on Windows has been increasing rapidly.  I think that's because Perl is becoming much more popular, rather than *nix becoming less popular.

[12:32] <audreyt> so still makes sense for all_from not overwrite

[12:32] <Alias_> Oh, and I want 10 minutes at some point to resolve a clash between module-level and dist-level share

[12:32] <Alias_> But no hurry there

[12:32] <PJF> Skud: The mention of FOSS throughout the position sounds very nice.  Good luck with the application, it looks like a great job.

[12:32] <audreyt> ok... tomorrow at earliest... I can't think right now

[12:33] <Alias_> sure sure

[12:33] <audreyt> Alias_: 0.43 is on CPAN

[12:33] <Alias_> My code works, so I can wait weeks

[12:33] <Skud> what's the url for RSS of a use.perl journal?

[12:33] <Skud> never mind.  *views source*

[12:34] <PJF> Skud: There's also http://use.perl.org/~skud/journal/friends/rss to get a feed of all of your friends.

[12:34] <Skud> pjf: hrm.

[12:34] <PJF> Replace 'skud' with a different login if you want to get a feed off someone else's friends.

[12:34] <Skud> i should probably do that. but i mostly read my friends list via LJ.

[12:35] <Skud> pjf: do you blog regularly anywhere?

[12:35] <PJF> I found that my journal had snuck onto LJ at the other day.

[12:35] <Skud> i read a few use.perl journals via lj

[12:35] <Alias_> You can do that?

[12:35] <Skud> yes.  http://livejournal.com/syn/

[12:35] <PJF> Skud: http://pjf.id.au/blog or http://use.perl.org/~pjf/journal or http://advogato.net/person/pjf or http://www.livejournal.com/users/paul_fenwick/

[12:35] <Skud> add syndicated feeds to LJ, and then you can friend them like a person or a community

[12:36] <Skud> pjf: which do you post to regularly?

[12:36] <Alias_> oh, you need a lj login

[12:36] <Skud> alias: *nod*

[12:36] <gaal> i can add syns to lj

[12:36] <PJF> Skud: They're all the same.  I post to pjf.id.au and it pushes it out to everything else.

[12:36] <Skud> ok. i'll friend your lj then. costs me less syn points :)

[12:37] <gaal> note that if you do, it's a good idea to use _rss or _feed suffix, so that if the person opens a real lj some time later their name is still available.

[12:37] <Skud> or if you're syndicating from use.perl do something like foo_useperl

[12:37] <gaal> oh, but i see http://www.livejournal.com/users/paul_fenwick/ already exists.

[12:37] <PJF> Gaal: I have enthusiastic friends.

[12:38] <PJF> Gaal: I don't mind.  I was wondering how to push it out to LJ for a while.  ;)

[12:39] <Skud> pjf: did you ever have one of those vi reference mugs back in teh day?

[12:39] <PJF> Skud: Unfortunately not, although I had a friend who did.  They're one of the big reasons we decided to make regular expression mugs.

[12:40] <PJF> Skud: I should put a photograph of them online.  They've been pretty popular so far.  Audrey's got a few, if I recall correctly.

[12:40] <Skud> are you giving them away as promotional wossnames?

[12:41] <PJF> Skud: We certainly are.  Everyone at OSDc received a mug.  We're handing out a few to regular clients, and the rest will probably go to user group meetings.

[12:41] <Skud> PJF: well, put one aside for me?

[12:42] <PJF> Skud: Gladly!  If you're going to be at LCA I can even deliver it to you in Dunedin (spel?).

[12:42] <Skud> nope

[12:42] <Skud> i have no budget for travel at hte moment

[12:42] <Skud> alas

[12:42] <Skud> tell you what i do have, though... i have new perfume that smells of pencil shavings!

[12:43] <PJF> Skud: Pencil Shavings?  You're going for smart-smelling perfumes?  Perhaps one that smells like solder?

[12:44] <Skud> hee! yes, in fact!

[12:44] <Skud> one of my other favourites from this mob is called "brimstone" and it's kind of ashy and metallic

[12:44] <PJF> You have one that smells like solder?

[12:45] * PJF laughs!

[12:45] <PJF> That's fantastic!

[12:45] <Skud> they're from Black Phoenix Alchemy Labs, who make these essential oil blends that are kind of notorious for interacting oddly with people's body chemistry

[12:45] <Skud> the brimstone one smells like beetroot on my best friend

[12:45] <PJF> That's not altogether bad.  Beetroot is a wonderful vegetable.

[12:45] <Skud> smells awful on marna though

[12:46] <PJF> Do I know Marna?

[12:46] <Skud> on me... smells like a cross between a campfire and iron filings

[12:46] <Skud> doubt it. she lives in ottawa.

[12:46] <Skud> the pencil shavings one is called "lear" and contains white cedar, bay, and sage.

[12:47] <PJF> Sounds like good stuff.  You've got me thinking of other "smart smells" now.

[12:47] <Skud> i've got one called "lightning" that i haven't tried yet

[12:47] <Skud> it's meant to be ozoney, but it smells like cheap disinfectant in the sample bottle

[12:48] <PJF> Skud: From what you've said, it could smell like just about anything once you wear it.

[12:48] <Skud> mind you, with BPAL that could be a good thing

[12:48] <Skud> yeah

[12:49] <PJF> Do I dare ask who/what BPAL is?  Or should I wikipedia for it?

[12:49] <Skud> black phoenix alchemy labs

[12:49] <PJF> Ah!

[12:49] <Skud> http://www.blackphoenixalchemylab.com/

[12:50] <PJF> Goodness me, that's quite a navigation menu.

[12:50] <Skud> they have this system where you can order 6 sample bottles for a fairly small price, and then everyone kind of shares and swaps them.  there's a whole market in bpal samples.

[12:50] <Skud> yeah, it's a bit of a PITA to navigate.  the search is handy.

[12:50] <Skud> i started by searching for "masculine" scents, since anything floral or fruity smells like puke on me

[12:50] <PJF> Now I really should be getting to sleep, before I start investigating perfumes that smell like freshly washed neoprene...

[12:51] <Skud> heee!

[12:51] <Skud> and yes, it's past my bedtime too.  i suck at this whole early-to-bed-early-to-rise thing.

[12:51] <PJF> Actually, Alias probably had to put up with that smell last week.  I hope he didn't mind too much.

[12:51] <Alias_> with what now?

[12:51] <Skud> the smell of pjf's new latex fetish outfit

[12:51] <PJF> Alias: You were in the room in which we normally store our scuba equipment.

[12:52] <Alias_> ooohh...

[12:52] <Alias_> Didn't notice a thing

[12:52] <Alias_> Except I kept wondering if the homebrew bottles were going to explode in the night

[12:52] <PJF> Good!  The fan was a worthwhile investment then.

[12:52] <Skud> death by homebrew!

[12:52] <Skud> ok, bedtime.

[12:52] <Skud> gnite, folks

[12:52] <PJF> Not the ones in your room.  We had a few explosions from ones in the laundry during your stay.

[12:52] <PJF> Night Skud!

[12:52] <PJF> Great catching up with you again.

[12:53] <PJF> And yes, past my bedtime too.

[12:53] <PJF> Night all.  Happy documenting!

[12:53] <audreyt> g'nite PJF, Skud

[12:53] * audreyt waves &

[12:57] <Alias_> night

[12:57] <blm> Goodnight

[12:59] <fglock> audreyt: is the new mini language going to replace PIL2?

[13:01] <rafl> fglock: He said something like that yesterday evening, yes.

[13:03] <meppl> guten morgen

[13:03] <svnbot6> r8188 | fglock++ | * set svn properties

[13:03] <kane-xs_> hi rafl

[13:03] <kane-xs_> i seem to have a fubared svk checkout currently.. waiting for clkao to come back to help me sort it

[13:05] <rafl> Hello kane-xs_ 

[13:05] <rafl> Why not simply make a new checkout? :-)

[13:06] <kane-xs_> because i have a /lot/ of changes in that checkout.. some commited and not pushed

[13:06] <rafl> kane-xs_: Sorry that I can't hack on JIB currently. I'm quite busy with setting up an MMTA.

[13:06] <rafl> Oh, OK.

[13:06] <kane-xs_> and i dont want allt hat history to go away in one big diff

[13:06] <kane-xs_> rafl: that's ok.. we're on no timeline here ;)

[13:06] <Alias_> Can I ask why "jib"?

[13:06] <kane-xs_> no

[13:07] <rafl> kane-xs_: Just wanted to inform you.

[13:07] <rafl> Alias_: jib is brilliant.

[13:07] <Alias_> rafl: Not the funtionality, the actual three letters

[13:07] <Alias_> I can't find a decryption of it

[13:07] * kane-xs_ hands alias GNU

[13:07] * Alias_ blinks

[13:08] <rafl> :-(

[13:08] <kane-xs_> Gnu's not unix

[13:08] <Alias_> JIB isn't...

[13:08] <rafl> Err, :-)

[13:08] <Alias_> Broken?

[13:08] <kane-xs_> <rafl> Alias_: jib is brilliant.

[13:08] <Alias_> ooohh

[13:08] * Alias_ smacks head

[13:08] <kane-xs_> ucfirst()

[13:08] <Alias_> *handsfaceheaddesk*

[13:09] <audreyt> fglock: no... the minilang is just for the basic runtime. The next layer of PIL.MM.* will probably evolve into PIL2 though

[13:09] * kane-xs_ helps

[13:09] <audreyt> fglock: there is currently no difference with PIL1 and PIL2 in src/Pugs/*

[13:09] <audreyt> fglock: PIL.* is my way of approximating the PIL2 design from the object space

[13:09] <audreyt> fglock: so what you are working with now is essentially still PIL1

[13:10] <audreyt> you can run a diff to see it

[13:10] <audreyt> sorry if I did not make it clear... I will try to document it tomorrow after I wake up

[13:10] <fglock> audreyt: I'm experimenting with a 'PIL API'

[13:10] <audreyt> I've seen the mini parser work

[13:10] <fglock> in order to ease generating code using p6 itself

[13:10] <audreyt> oh?

[13:10] <audreyt> yeah, it's cool

[13:11] <Alias_> Don't forget the SAX driver...

[13:11] <audreyt> I'll give it a more thorough look tomorrow and try to coordinate

[13:11] <Alias_> YOUR LANGUAGE WILL BE XMLIFIED!

[13:11] <Alias_> Assembly Markup Language

[13:11] <Alias_> ASSML

[13:12] <audreyt> but I shall not procrastinate on sleeping anymore :) &

[13:13] <fglock> Alias_: I've only read about SAX, but I didn't try to use it

[13:13] <Alias_> Ever used POE?

[13:13] <Alias_> Or Twisted in Python

[13:13] <Alias_> Or Haskell :)

[13:13] <fglock> no

[13:14] <Alias_> Similar... great idea, but you have to turn you brain sideways

[13:14] <Alias_> On the other hand, it makes doing quite sophisticated XML stuff pretty easy

[13:17] <fglock> btw, I was thinking about emitting Python code - but I'll have to learn a little of Python first

[13:18] <geoffb> *yawn*

[13:18] <geoffb> Morning, all

[13:19] <geoffb> Haven't been keeping up for like a month ... what's new in pugstown?

[13:23] <geoffb> Wow, don't everyone talk at once.  :-)

[13:24] <fglock> geoffb: sorry, I was trying to find out how to explain these things

[13:24] <geoffb> ?

[13:25] <fglock> the current work is on making pugs capable to emit enough info to the runtime to build classes, roles, etc

[13:26] <geoffb> fglock, OK, go on ... sounds like PIL2 actually in progress?

[13:26] <fglock> yes, but it is being rethinked into a new mini-language

[13:27] <fglock> following stavan's work with the metamodel

[13:27] <fglock> stevan's

[13:27] <geoffb> interesting

[13:27] <geoffb> Last I heard, stevan had been playing around with doing the MM in S-expressions.  Is that what happened?

[13:28] <fglock> yes, it is actually still happening

[13:29] <fglock> audreyt and stevan are implementing and documenting it

[13:29] <geoffb> audreyt is a new nick to me ... new alias for autrijus?  Or different person?

[13:29] <Alias_> ...

[13:30] <Alias_> same person, different gender

[13:30] <Alias_> Autrijus is now Audrey

[13:30] <geoffb> I was wondering how that would turn out.  Happier now, I hope?

[13:30] <Alias_> It's been a week... I guess we'll find out later

[13:30] <geoffb> Fair enough.

[13:31] <geoffb> (Good luck, Audrey!)

[13:32] <geoffb> Odd thought -- did he change his handle at use.perl.org as well?

[13:32] <fglock> I'm playing with the idea of implementing parts of pugs in p6

[13:32] <Alias_> fglock: Isn't that what Alison et al is doing?

[13:32] <geoffb> damn English pronouns

[13:32] <Alias_> Like, the actual creation of Perl 6...

[13:37] <fglock> Alias_: not exactly - I'm just playing with moving the implementation of some modules to p6, and then make p6/haskell call each other to finish the job

[13:37] <geoffb> fglock, cool

[14:07] <fglock> audreyt: it would be cool if the mini-language would be valid perl 6, like "featherweight perl"

[14:08] <fglock> then we could just execute it using an older pugs

[14:37] <Alias_> ugh... writing PITA is a PITA :)

[14:37] <Alias_> XML is great and all, but gets tiresome to code

[14:38] * Alias_ takes a break and moves onto other works

[14:41] <stevan_> fglock: I think the new mini-lang is actually close to a featherweight perl6 

[14:41] <stevan_> at least from what I can grok out of PIL.* sources

[14:42] <stevan_> audreyt: I added "false" but never managed to get "make pili" to work (problems with ghcconfig.h) so I didnt commit

[14:52] <fglock> stevan: cool - emitting code from a featherweight p6 using pugs would be fun

[14:54] <fglock> of course Haskell can do that easily, but pushing the limits of pugs is nice

[15:49] *** khisanth_ is now known as Khisanth

[16:10] <tewk_> stevan_: I had the same problem and had to add include paths to the Makefile for ghcconfig.h and EXTERN.h

[16:15] *** ntgrl is now known as integral

[16:18] <svnbot6> r8189 | fglock++ | * misc/Parser-Mini/pil2_json_emit_io.p6 - a simple emitter for the "IO" language;

[16:18] <svnbot6> r8189 | fglock++ |   only 'say 1+1' works

[16:41] *** integral is now known as ntgrl

[18:00] <Andy> pugs: http://www.livejournal.com/users/substitute/1165155.html

[18:01] <gaal> too true!

[18:03] <gaal> can a pad have a scope!? data Exp .... | Pad !Scope !Pad !Exp

[18:04] <stevan_> gaal: a Pad is scope..... isnt it?

[18:04] <gaal> Pad is the binding structure

[18:04] <gaal> ah, I think I get it:

[18:04] <gaal> there are pads for Mys, pads for States, etc.

[18:05] <gaal> Pad is just a map

[18:06] <stevan_> with a pointer to the previous (OUTER::) pad

[18:06] <stevan_> I always saw it as a linked list, where the Map was node value

[18:06] <gaal> I hope I got this right. Anyway this means each scope actually has several Pad strcutres associated with it

[18:06] <stevan_> eak

[18:06] <stevan_> why?

[18:07] <gaal> the SMy (S for Scope) pad, the SState pad, etc.

[18:07] <stevan_> Andy: nice Pugs :) .. my friends have a similar pair 

[18:07] * stevan_ is not familiar enough with the workings of "state" to really comment

[18:07] <gaal> data Scope = SState | SLet | STemp | SMy etc.

[18:07] *** stevan_ is now known as stevan

[18:07] <gaal> hello stevan!

[18:08] <stevan> hello gaal 

[18:08] <gaal> I was just telling stevan_ about pads

[18:08] * stevan is trying to convience his wife to let him to the Hackathon::IL

[18:08] <gaal> whoooah!

[18:08] <stevan> gaal: dont talk to that asshole stevan_,.. he is nothing but trouble 

[18:09] <gaal> Hey stevan's wife! We'll treat him well, promise!

[18:09] <stevan> :)

[18:11] <gaal> eeeeek! I just noticed Scope types derive Ord, and that fact is actualy used. How funky!

[18:17] *** Amnesiac_ is now known as Amnesiac

[18:24] <gaal> whee, mpj has a picture of Crater Lake in his homepage

[19:12] <svnbot6> r8190 | fglock++ | * misc/Parser-Mini/pil2_json_emit_php.p6 

[19:23] <stevan> fglock: emit PHP!!!

[19:23] <stevan> hullo Ovid

[19:24] <Ovid> Hi Stevan.

[19:32] <svnbot6> r8191 | fglock++ | * Parser-Mini/pil2_json_emit_php.p6 - more ops

[19:33] <fglock> stevan: :)

[19:34] * stevan is experimenting with Seaside (smalltalk++)

[19:34] <stevan> fglock: so Forth, P6, P5, PHP... now what :)

[19:35] <fglock> I'm lacking ideas - maybe 6502

[19:35] <fglock> I loved Apple ][ assembler

[19:36] <stevan> :D

[19:36] <stevan> did you already do PIR?

[19:36] <fglock> yes

[19:36] <stevan> maybe Ruby

[19:36] <fglock> ah, ok - and Python

[19:37] <obra> fglock: scheme?

[19:37] <stevan> FORTRAN!

[19:37] <obra> fglock: VB?

[19:37] <stevan> PIL->COBOL would be useful :P 

[19:37] <fglock> hey, I'll need some help

[19:38] <fglock> :)

[19:38] <stevan> you should build a Lego Robot which writes the PIL to punch cards :)

[19:39] * fglock looks on google for what language Lego Robots use

[19:40] <stevan> you can write them in FORTH

[19:40] <stevan> pbforth

[19:40] <stevan> there is also a C dialect for them

[19:40] <stevan> and Ada

[19:40] <stevan> p6->Ada then we can control missles with P6 :)

[19:47] <tewk_> make pili gives this error /tmp/ghc16716.hc:9:22: fpstring.h: No such file or directory

[19:48] <tewk_> I found fpstring.h in src/cbits, and added -isrc/cbits to the ghc cmdline, but couldn't get it to work.  Ideas?

[19:52] * fglock goes read about Ada

[19:55] <fglock> http://archive.adaic.com/pol-hist/history/holwg-93/

[20:04] <stevan> fglock: they have links to the other Ada design docs on Lambda the Ultimate too : http://lambda-the-ultimate.org/node/view/3

[20:10] <fglock> stevan: how about PEARL - http://www.irt.uni-hannover.de/pearl/pearlein-gb.html :)

[20:13] <fglock> thanks for the link

[21:01] * eric256 hates to admint that sudoku is addictive ;)

[21:49] <r0nny> yo

[21:50] <r0nny> audreyt: ping ? howz the undefined instance prob ?

[21:56] <stevan> r0nny: I think audreyt is concentrating on the object-space which will eventually give us the metamodel which will solve most (if not all) of your OO issues

[21:57] <stevan> the current object model in Pugs is incomplete and will be deprecated once the metamodel is in place

[21:57] <r0nny> stevan: atm my problem is, they do it in the normal branch, and this broke my code since some objects are virtually undefined now

[21:58] <stevan> r0nny: I understand that, but what I am saying is that with a little patience, you will have all you need :)

[21:58] <stevan> s/have/get/

[21:59] <r0nny> hmm

[21:59] <stevan> remember, pugs is -Ofun, which means sometimes things won't work right

[21:59] <r0nny> yeah

[21:59] <r0nny> i wish i knew the revision number i need to make it work again

[21:59] <stevan> especially when audreyt is basically re-writing the guts with the object-space work

[22:00] <stevan> r0nny: is your code in Pugs?

[22:00] <stevan> the code which is not working currently

[22:00] <r0nny> no

[22:00] <r0nny> atm its external

[22:00] <r0nny> its a depency solving system

[22:00] <stevan> ok, I was thinking maybe you could track down the revision that way

[22:01] <r0nny> maybe date-based

[22:01] <stevan> openfoundry has a nice interface to SVN, you can browse backwards through the commit logs 

[22:01] <stevan> that might help in your search 

[22:02] <r0nny> but first i need to check, if there is a way to enter the wanted revision sonewhere in my pkg manager wich installs pugs from svn for me

[22:03] <stevan> I have no idea,.. I dont use a pkg manager , I pull direct from svn :)

[22:18] *** PerlJam is now known as ParodyBit

[22:18] *** ParodyBit is now known as PerlJam

[23:21] <trym> where can I read about the status of perl6 ?

[23:21] <trym> ive browsed through the urls in the topic, not finding exactly what Im looking for

[23:22] <mlh> pugscode.org perhaps

[23:22] <integral> dev.perl.org/perl6/ perhaps?

[23:22] <trym> pugs is a implementation of the perl6 implementation?

[23:22] <trym> is it official ?

[23:22] <mlh> yes

[23:23] <audreyt> greetings

[23:23] <audreyt> trym: yes, we are fixing the state of the documentation

[23:23] <mlh> audreyt: thanks for the talk last night -- it was great

[23:23] <integral> not official, surely?

[23:23] <audreyt> want a committer bit to our subversion repository so you can help? :)

[23:23] <mlh> trym: also see http://planetsix.perl-foundation.org/

[23:23] <trym> just roughly.. when do you think perl6 will be ready to be used in production ?

[23:24] <mlh> heh, i'm not sure you want me.  then again i might be able to do docs

[23:24] <audreyt> integral: pugs is officially a perl6 implementation... not sure if s/a/the/, but "a" certainly

[23:24] <audreyt> mlh: that is currently one of the most dire focus :)

[23:24] <integral> ah!  I didn't quite realise that either

[23:24] <obra> It is "a", not "the"

[23:25] <obra> There is currently no "compliance test" for perl6 implementations.

[23:25] <audreyt> unless it is the pugs tests ;)

[23:25] <obra> It's not ;P

[23:25] <obra> Also, there is no 100% specification for Perl 6.0.0 yet

[23:26] <audreyt> trym: we are targetting productively use of pugs as a dynamic language targetting both parrot and perl5 on next february-march.

[23:26] <obra> but now, I must run

[23:26] <trym> won't several perl6 implementations become confusing?

[23:26] <obra> trym: no more so than C, Java or Python

[23:26] <audreyt> trym: not anymore than several python, C++ or Java implementations

[23:26] <trym> point taken

[23:26] <obra> *5* audreyt

[23:26] <audreyt> *5*

[23:26] <obra> It'll actually help make sure we've got an ironclad spec

[23:27] <trym> just very used to relating to only one... _the perl_

[23:28] <mlh> audreyt: ok, [email@hidden.address] key if you want it is on major keyservers :-)

[23:28] <Andy> audreyt: Do you have a URL somewhere that explains the name change?  I want to let people know, but also anticipate the immediate followup question.

[23:29] <audreyt> mlh: welcome aboard!

[23:29] <q[Skud]> morning.

[23:29] <audreyt> Andy: I'll post it as a journal entry some time today or tomorrow.

[23:29] <Andy> audreyt: OK, thanks.

[23:30] <mlh> audreyt: thakns

[23:30] <audreyt> trym: interested in trying out pugs and maybe helping out tests/documentations/examples/code? I'd send you a committer bit if you would let me know your email address :)

[23:31] <trym> sent by notice

[23:31] <trym> my spam filter has its hands full as it is ;)

[23:31] <audreyt> welcome aboard :)

[23:32] <trym> hehe thanks :)

[23:32] <audreyt> mlh, trym: be sure to add yourself to the AUTHORS file; that will ensure that the svn commit works

[23:32] <trym> do you guys need hosting of some sort?

[23:32] <trym> Im in the process of setting up a hosting center

[23:33] <mlh> k

[23:33] <trym> i already have a few boxes here and there.. but Ill have much more resources to myself as the center comes up

[23:34] <audreyt> trym: oh cool - interested in running a smoke test server?

[23:34] <audreyt> see util/smoke_loop.sh on the pugs subversion tree for how

[23:35] <trym> probably :) that should be a box that is not in production I guess ? ;)

[23:35] <audreyt> or if you can run user mode linux or some sort of jail/chroot/acl

[23:35] <gaal> hi there :)

[23:35] <audreyt> gaal: yo

[23:36] <gaal> I was looking earlier tonight at how pads were created

[23:37] <gaal> didn't understand it very well yet; but I did see the responsibility was partly in Eval

[23:38] <audreyt> gaal: *nod*

[23:38] <gaal> how do these "pad transformations" work?

[23:39] <gaal> eg in enterWhile

[23:39] <audreyt> very carefully

[23:39] <gaal> enterLex [symLast, symNext] action

[23:39] <gaal> who are symLast and symNext anyway?

[23:39] <audreyt> look at how enterLex is defined

[23:40] <audreyt> it takes a list of (Pad -> Pad)

[23:40] <audreyt> and apply them in turn to envLexical

[23:40] <gaal> yes, so they are such funcitons

[23:40] <trym> so smoke_loop.sh is sort of an error detection system.. for it to be useful, where should the results be reported?

[23:40] <gaal> elsewhere I see genSymPrim "&next", but I don't see how that connects

[23:41] <gaal> trym: there's a util/smokeserv that posts results

[23:41] <audreyt> trym: it should be uploaded... actually we should throw that into the loop

[23:41] <gaal> well, a client under that dir that posts them

[23:41] <trym> well you have the aftercmd thingie

[23:41] <gaal> trym: that's deprecated, actually

[23:42] <trym> maybe I wasnt looking at the newest revision

[23:42] <gaal> you were, likely... the code you're looking at hasn't been hacked on in a while (I think)

[23:43] <gaal> err, did I say "elsewhere"? the line above, doh.

[23:43] <trym> oh well time for bed I guess.. :)

[23:43] <trym> sleep tight

[23:44] <gaal> night

[23:45] <audreyt> trym: I fixed it :)

[23:45] <svnbot6> r8192 | autrijus++ | * turn AFTER_CMD into uploading the smoke report to server

[23:45] <svnbot6> r8192 | autrijus++ |   in the default util/smoke_loop.sh run. reported by: trym

[23:45] <gaal> hmm, is fix a callCC thing?

[23:45] <audreyt> trym: good night

[23:45] <audreyt> gaal: fix is just the Y combinator

[23:45] <gaal> fix :: (a -> a) -> a

[23:46] <gaal> I need to remelt my brain to remember what that is

[23:47] <audreyt> fact = fix (\f x -> case x of { 0 -> 1; _ -> x * f (x-1) })

[23:47] <gaal> oh, cool!

[23:47] <gaal> unlambda, in a way?

[23:47] <audreyt> it's inventing a recursive name out of thin air

[23:47] <audreyt> yeah

[23:48] <gaal> ok so taking a simple one:

[23:49] <gaal> enterGiven topic action = do { sym <- genSym "$_" topic ; enterLex [sym] action }

[23:49] <gaal> genSym gives a transformer that adds a symbol to a pad, yes?

[23:49] <audreyt> yes.

[23:49] <gaal> ooh, there's even a comment saying just that :)

[23:50] <audreyt> :D

[23:51] <gaal> so pads are populated during reduction, hence, in Eval

[23:51] <gaal> reduceSyn "given" eventually calls enterGiven

[23:52] <gaal> how does a pad know its outer pad? 'asks'?

[23:52] <audreyt> yup.

[23:52] <audreyt> yes. in any given time you can get the current lexical pad:

[23:52] <audreyt> pad <- asks envLexical

[23:52] <Juerd_> Yet another day gone by without having done anything productive. Blah

[23:52] <Juerd_> Good night.

[23:52] <audreyt> or the outer pad:

[23:52] <audreyt> outer <- asks envOuter

[23:52] <audreyt> which may be Nothing

[23:52] <gaal> on top level

[23:52] <Juerd_> Oh, and for the record: I absolutely profoundly hate MS Windows.

[23:52] <audreyt> Juerd_: good night, sleep well :)

[23:53] <Juerd_> audreyt: Thanks

[23:53] <gaal> findVarRef has a good demo, ok

[23:53] <gaal> Juerd_: nighty night :)

[23:53] <stevan> audreyt: hey!

[23:53] <Juerd_> gaal: ty

[23:53] <Juerd_> afk

[23:54] <gaal> so, what's needed for lexical import? some note in the ast that, when reduced, gens a symbol;

[23:54] * stevan has to run, but will be back in 1 hour

[23:54] <audreyt> stevan: cool

[23:54] <gaal> also, errors if the symbol already exists, yes?

[23:54] <audreyt> gaal: yes and yes.

[23:56] <audreyt> gaal: I'd imagine that the note is just a normal Pad node

[23:56] <gaal> on the parser end, ignoring the concrete syntax for a moment, the work is similar to ruleVarDeclaration

[23:56] <gaal> ?

[23:57] <audreyt> I mean, a Sym node

[23:57] <audreyt> ys.

[23:58] <q[Skud]> gah. moving desks *again*.

[23:58] <gaal> hmmm, so there aren't big obstacles to doing this, are there? :)

