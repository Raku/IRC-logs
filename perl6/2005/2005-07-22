[00:37] <stevan> iblech: we dont need dispatch() in the JS metamodel

[00:38] <stevan> iblech: we can use can()..... so Class.can('foo').call(args) and instance.can('bar').call(args)

[00:45] <gaal> hey all. you may need to make clean after this commit - r5738

[00:48] <gaal> night :)

[00:49] <svnbot6> r5738, gaal++ | config file-based build prefs 

[00:55] *** joepurl_ is now known as joepurl

[01:03] <ferreira> Someone gets this also: "Can't open perl script "util/build_pugs.pl": No such file or directory"

[01:03] <svnbot6> r5739, Stevan++ | Perl6.MetaModel - (JS version)

[01:03] <svnbot6> r5739, Stevan++ | * added Perl6.Class classes

[01:03] <svnbot6> r5739, Stevan++ |     - added test file for this

[01:03] <svnbot6> r5739, Stevan++ | * added POD documentation to most classes

[01:03] <coral> mm, #perl is quiet today

[01:03] <coral> ww

[01:05] <webfiend> quiet, or just not insanely busy?

[01:14] <ferreira> "util/build_pugs.pl": No such file or directory - is this a Cygwin privilege or someone else is having trouble with this?

[01:42] <coral> ferreira: does make clean resolve it?

[01:42] * coral is guessing wildly

[01:42] <coral> webfiend: quiet, as in hasn't lit up today

[01:46] <ferreira> coral: nope. I did "make clean; svn up; perl makefile.PL; make" and it complains again. The same with "make unoptimized"

[01:47] <coral> mm

[01:47] <dudley> ferreira: just happened to me, too

[01:47] <coral> must be broken in svn

[01:48] <coral> i don't see any mention of build_pugs.pl in my scrollback

[01:53] <ferreira> It must have broken with "r5738, gaal++ | config file-based build prefs"

[01:56] <dudley> gaal: ping

[01:57] <coral> seen gaal

[01:57] <jabbot> coral: gaal was seen 1 hours 8 minutes 51 seconds ago

[01:57] <coral> saying "night"

[01:58] <ferreira> indeed, reverting to r5737, make is working now

[01:58] <dudley> I'm guessing he just missed that file in the ci

[01:58] <ferreira> anyone knows if autrijus who wrote the code of Pugs/Run/Args.hs?

[01:59] <dudley> ferreira: svk blame

[01:59] <dudley> that'll show you who checked in each line of a file

[01:59] <dudley> or svn blame, if you're not using svk yet

[02:01] * geoffb likes that "yet"

[02:02] <ferreira> sorry for my svn ignorance. Now I see: autrijus, iblech, bsb, theorbtwo - a team work. But most of it has been written by iblech.

[02:02] <dudley> ferreira: hey, no worries. I just learned that last week.

[02:02] <geoffb> s/most of it/most of the current revision/

[02:03] <geoffb> If someone completely rewrites a file, then blame doesn't show the old author

[02:03] <ferreira> dudley: you learned svn or you jumped right to svk?

[02:03] <ferreira> geoffb: ok, got that

[02:03] <dudley> I used svn for about a month before I tried svk.

[02:04] <mugwump> I think it's a good idea to start with svn, given svk is basically a glorified SVN client with merge history tracking.

[02:04] <svnbot6> r5740, fglock++ | * updated ChangeLogs

[02:04] <svnbot6> r5740, fglock++ | * added unicode support to Set::Infinite

[02:04] <ferreira> what the hell? "parse error (possibly incorrect indentation)" That Haskell is starting to look to like Python

[02:04] <mugwump> That's glorified as in HALEEPHUKENLUJIA!!!!!

[02:05] <dudley> ferreira: I've been wondering when I would hear someone complain about significant whitespace in haskell :-)

[02:05] <dudley> It's optional, though. You can use brackets and semicolons if you really want to.

[02:07] <ferreira> mugwump: I am suffering sinner that has to live mostly with Windoze at these days. Those beautiful tools like perl, svn, etc., etc. love to make life miserable for us that are Unix-challenged

[02:08] <mugwump> in that case, there are more windows svn clients available than svk

[02:08] <mugwump> TortoiseSVN is cute

[02:08] <geoffb> Tortoise(CVS|SVN|<more?>)

[02:08] <dudley> I was just about to say that...

[02:09] <geoffb> Great minds think alike . . . .

[02:10] <mugwump> unless you're talking about ./foo()

[02:10] <dudley> mugwump: ha!

[02:11] <ferreira> dudley: I was just starting with Haskell and trying some guesses. Well, I just find out that # are not for comments and I have to use -- instead (think Lua, SQL, not Perl)

[02:13] <dudley> ferreira: I would think learning haskell by random guesses will be fairly painful :-)

[02:14] <coral> heh

[02:14] <ferreira> dudley: I use Windows - I enjoy suffering. What means "Pattern match(es) are overlapped"? A pattern like ("--":xs) overlaps with ("--external":mod:rest)? 

[02:16] <dudley> I'm new to Haskell myself, so someone else may want to field this one

[02:20] <dudley> I think it means that the pattern that comes first will match everything that the second one will, so you can never reach the second.

[02:20] <dudley> There's an incredibly high chance that that's wrong, though

[02:22] <ferreira> When a string like "--" is used in a pattern, it means the arg should be equal to this or like Perl regex /^--/? You know that?

[02:25] <geoffb> ferreira, this may or may not help, but a string "foo" is exactly a list ['f', 'o', 'o']

[02:25] <geoffb> so matching ("--": ...) == matching ('-' : '-' : ...)

[02:26] <geoffb> So yes, ("--":xs) would match anything starting with --

[02:26] <dudley> and ("--":xs) will match any string that begins with --

[02:27] <dudley> great minds again...

[02:27] <geoffb> heh

[02:28] <ferreira> and if I want to match exactly "--"?

[02:28] <dudley> the :xs part tells the pattern to put the rest of the elements of the list into xs

[02:29] <dudley> so if you wanted to match only "--" with nothing after it, you would leave that part out

[02:30] <ferreira> Well, now I understand why at p6c someone reported that pugs -we "@*ARGS[0].say" -foobarfluffy

[02:30] <ferreira> outputs -f

[02:30] <ferreira> The use of patterns in the command line parser does this.

[02:31] *** kungfuftr is now known as kgftr|konobi

[02:33] <geoffb> Time for a test, ferreira.  :-)

[02:35] <dudley> anyone else running ghc from darwinports on tiger?

[02:38] <svnbot6> r5741, Stevan++ | Perl6::MetaModel - (Perl 5 version)

[02:38] <svnbot6> r5741, Stevan++ | * find_attribute_spec() now uses the dispatcher (in BUILD order)

[02:38] <svnbot6> r5741, Stevan++ | * fixed method list in ::MetaClass POD

[02:43] <ferreira> how do I run only a subset of tests: for example, those in "t/pugsrun"?

[02:45] <dudley> ferreira: you should be able to just run them with pugs

[02:45] <svnbot6> r5742, Stevan++ | Perl6::MetaModel - removed the get_all_attributes() method in favor of the dispatcher

[02:58] <geoffb> ferreira, I think "prove" might do what you want

[02:58] <geoffb> looks like it

[03:04] <ferreira> "Can't exec /usr/bin/pugs" says prove. Don't know how to tell it the pugs right there at '.'. If I try dudley's suggestion, tests are all failing miserably. My config should be screwed up.

[03:05] <dudley> I have a symlink to pugs in my path. Maybe that's why it worksforme.

[03:07] <geoffb> I think there's some envvar for prove that tells it where to find pugs.  hmmm

[03:12] <ferreira> Yes, it worked with the symlink and prove. Thanks, geoffb and dudley. Now I am going to try my changes.

[03:16] <geoffb> ewww.  Normally, the env var HARNESS_PERL would work, but code in the pugsrun tests forces ./pugs.  bleah

[03:16] <geoffb> That, I think, is a bug.

[04:51] <geoffb> OK, time to take a break from Haskell tutorials for a little while, I think . . . probably a good idea to let things settle overnight before attaching chapter 7 (Input/Output) of _A Gentle Introduction to Haskell, Version 98_

[05:19] <stevan> *sigh* now I know how autrijus feels

[05:19] <stevan> $Larry is totally re-arranging how the metamodel would work

[05:22] <sanxiyn> I checked out pugs today, but build failed with "Can't open perl script "util/build_pugs.pl": No such file or directory", any idea?

[05:26] <stevan> sanxiyn: it seems to have been a problem today. Try checking out again now, it is likely fixed now.

[05:30] <sanxiyn> I see no update with "svn up"...

[05:30] <sanxiyn> (rev 5742)

[05:31] <gaal> morning folks

[05:31] <stevan> sanxiyn: did you "make clean"?

[05:31] <svnbot6> r5743, gaal++ | oops, forgot this for the build system. gaal--

[05:31] <gaal> sorry about that :)

[05:31] <gaal> please try the latest build now.

[05:31] <stevan> gaal: hows goes the hackathon ?

[05:32] <gaal> we aren't hacking a lot, but we are athonning!

[05:32] <stevan> nice

[05:33] <gaal> it's only szabgab and me now

[05:33] <gaal> nothingmuch will come later

[05:34] <sanxiyn> oops, now I see it.

[05:34] <gaal> last night i gave the perl6 is cool spiel to szabgab and eilara

[05:34] <gaal> (and broke th build!)

[05:35] <gaal> lumi and rindolf were also here

[05:35] <gaal> my cat was scared but is recovering

[05:35] <gaal> pizza ETA... 10 hours?

[05:36] <stevan> gaal: 2 words - baking paper ;)

[05:36] <gaal> that's it more or les

[05:36] <gaal> ah!

[05:36] <gaal> good, you reminded me

[05:36] <gaal> we made crazy soft drinks

[05:36] <gaal> experiments with dry ice :)

[05:37] <stevan> ?

[05:37] <gaal> we "made smoke"

[05:37] <gaal> white smoke

[05:37] <gaal> by dropping some dry ice that i had into coke to cool it

[05:38] <gaal> it looks just like a canister of liquid nitro does

[05:38] <stevan> nice

[05:39] <sanxiyn> Now I get "Can't use an undefined value as an ARRAY reference at util/build_pugs.pl line 14."

[05:39] <gaal> hmm! let me see

[05:40] <sanxiyn> Must be a bad time me trying...

[05:40] <gaal> nah, bad time me committing :)

[05:40] <gaal> sec

[05:41] <gaal> hmm, what os are you on sanxiyn?

[05:41] <sanxiyn> Debian Linux.

[05:42] <gaal> stevan do you get that too?

[05:42] <dudley> gaal: I'm getting the same thing on osx 10.4

[05:42] <stevan> gaal: I havent built pugs in a while, I use feather

[05:43] <gaal> can you paste the perl -Iinc util/build_pugs.pl line just over that error?

[05:43] <gaal> stevan: clever :)

[05:44] <gaal> dudley, sanxyin, something like C:\perl\bin\perl.exe -Iinc util\build_pugs.pl +GHC C:\......

[05:46] <pasteling> "dudley" at 70.179.213.96 pasted "build_pugs.pl error output" (1 line, 1.5K) at http://sial.org/pbot/11904

[05:46] <gaal> thanks

[05:49] <gaal> i think it's a command line length issue. darn.

[05:49] <szabgab> hey ppl, what is the simplest recommended way to learn Perl6 now ?

[05:50] <QtPlatypus> szabgab: Good question.

[05:50] <QtPlatypus> I guess from reading the Synoposes and Exengieses (spelling).

[05:51] <dudley> Then reading the mailing list archives to see what's changed since the Synopses were last updated...

[05:51] <dudley> :-)

[05:52] <gaal> dudley: can you run this exact command in your shell manually?

[05:52] <gaal> it'll probably give the same error

[05:52] <dudley> I can try...

[05:53] <dudley> yep, same thing

[05:53] <szabgab> thats sounds like too difficult and long and    well outdated

[05:53] <gaal> okay. now try it without the Mono -L directives

[05:53] <gaal> which i think aren

[05:53] <gaal> 't required

[05:53] <gaal> (i'm trimming fat)

[05:54] <dudley> no joy

[05:55] <gaal> in line 13, just above the error, please put in this debug print:

[05:56] <gaal> require YAML; die YAML::Dump($opts);

[05:56] <gaal> and nopaste the result?

[05:56] <gaal> i want to confirm the cmdline gets eaten

[05:57] <dudley> GHC:

[05:57] <dudley>   - /opt/local/bin/ghc

[05:57] <dudley>   - -threaded

[05:57] <dudley> that's it.

[05:58] <gaal> eek :)

[05:58] <gaal> whoever's eating it must be hungry.

[05:58] <dudley> heh.

[05:59] <gaal> though it is fishy that it stops right where the first substitution takes place :(

[06:00] <gaal> # isn't a special character in your shell, is it?

[06:00] <sanxiyn> # is...

[06:00] <sanxiyn> # starts a comment.

[06:00] <gaal> ah.

[06:00] <sanxiyn> echo a # b

[06:00] <gaal> that does put a damper on out relationship.

[06:00] <sanxiyn> (echoes "a")

[06:01] <dudley> gaal: what system are you on?

[06:01] <gaal> windows.

[06:01] <gaal> sec, fixing.

[06:03] <gaal> (doing a basic sanity check first)

[06:03] <gaal> sanxiyn++, dudley++

[06:04] <gaal> r5744

[06:05] <gaal> please svn up and tell me it works. :)

[06:07] <sanxiyn> gaal: Oops, I backed to r5737 and now building...

[06:07] <svnbot6> r5744, gaal++ | oops, ### introduced a comment on some shells.

[06:07] <dudley> gaal++ # It seems to be working now, yay

[06:07] <sanxiyn> dudley: Nice to hear that.

[06:08] <gaal> thank you!

[06:08] <dudley> np

[06:08] <gaal> brb (shower) &

[06:52] * gaal pops back in

[06:53] <gaal> how's the build going for y'all?

[06:55] <sanxiyn> It is built!

[06:55] <sanxiyn> Now, time to play with it.

[06:56] <gaal> cool. that's the fun part :)

[06:56] <QtPlatypus> You might wish to look at the cookbook entries to for help coding.

[07:03] <jdv79> are there examples of interacting with p5 like DBI and such?

[07:04] <gaal> jdv79: the basics are quick to summarize:

[07:04] <gaal> eval ($p5_string, :lang<perl5>)

[07:04] <gaal> use perl5:P5Module;

[07:04] <gaal> that's more or less it :)

[07:05] <jdv79> ok, i'll give it a go - thanks

[07:05] <gaal> you can also look in t/

[07:06] <jdv79> is there a strict or warnings pragma in pugs?

[07:06] <jdv79> or is that not even p6?

[07:07] <QtPlatypus> jdv79: Not yet.

[07:07] <jdv79> cool

[07:07] <QtPlatypus> jdv79: And I expect it will have.

[07:07] <QtPlatypus> Though they will most likely be diffrent to perl5.

[07:08] <jdv79> use v6 does what?

[07:08] <gaal> jdv79: see t/unspecced/p5/

[07:09] <gaal> use v6 simply guards against p5 accidentally trying to run p6 code.

[07:21] <jdv79> my @drivers = DBI.available_drivers(); should work, right?

[07:27] <jdv79> *** No compatible subroutine found: "&available_drivers"

[07:27] <jdv79> weird

[07:53] <Darren_Duncan> All ...

[07:54] <Darren_Duncan> I have completed the first draft of my Lightning Talk for OSCON 2005, which introduces 'Rosetta'.

[07:54] <Darren_Duncan> I request your assistence to help me make this talk the best it can be.

[07:54] <obra> url?

[07:54] <Darren_Duncan> You should send your replies to me at [email@hidden.address] since I don't leave IRC open all the time

[07:54] <Darren_Duncan> coming

[07:55] <Darren_Duncan> http://darrenduncan.net/OSCON/OSCON2005LightningTalk.txt

[07:55] <Darren_Duncan> this is indirectly related to Perl 6

[07:55] <Darren_Duncan> mainly it is Perl 5 now ... but related because I will be porting it over soon

[07:56] <Darren_Duncan> I posted my request to 3 database email lists, but thought I'd ask here also

[07:56] <Darren_Duncan> is it worth posting to p6c or p6l, or would that be off topic (replies are private)

[07:57] <Darren_Duncan> I think the start and end are ok; the middle 80% is what needs fixing

[07:57] <Darren_Duncan> for one thing, this is twice as long as it has to be, taking about 8 minutes to read aloud

[07:58] <Darren_Duncan> thanks

[07:58] <Darren_Duncan> note that I'll be hanging up this channel in about 10 minutes, but will see any emails tomorrow ... could talk at length on channel tomorrow, though, if appropriate

[07:59] <obra> I haven't had time to reply to you about what searchbuilder does

[07:59] <obra> :/

[07:59] <Darren_Duncan> not worried

[07:59] <obra> Darren_Duncan: will you have slides with pretty example code?

[07:59] <Darren_Duncan> as mentioned elsewhere, I don't plan to name any other modules, but just address the hot features that people want

[07:59] <Darren_Duncan> I have zero slides, sorry

[08:00] <obra> Or is the plan to just read that aloud?

[08:00] <Darren_Duncan> the talk isn't long enough for that

[08:00] <Darren_Duncan> I plan to read it aloud

[08:00] <Darren_Duncan> though attempt to keep looking at the audience from time to time

[08:00] <obra> is there a rosetta tutorial online?

[08:01] <Darren_Duncan> while I could say all of these details from memory, I wrote it down so I didn't have to search within 5 mins to say the right thing

[08:01] <Darren_Duncan> no tutorial yet per se

[08:01] <obra> nod

[08:01] <Darren_Duncan> there is a pile of documentation, but none tutorial-ish yet

[08:01] <Darren_Duncan> this is very new, after all

[08:02] <Darren_Duncan> I expect to have a proper tuturial within a year's time though ... maybe even give a full length talk too

[08:02] <Darren_Duncan> of course, this is an example of something that people can contribute

[08:03] <obra> But it's been on CPAN since 2003, no?

[08:03] <Darren_Duncan> I also plan to have a few large updates to Rosetta between now and when OSCON hits, so certain confusing bits shouuld be gone

[08:03] <Darren_Duncan> yes

[08:04] <obra> But now, I need to run to work

[08:04] <Darren_Duncan> It also didn't actually work worth a damn until around now

[08:04] <Darren_Duncan> the text of the talk assumes I've gotten a few things working that aren't working now

[08:04] <jdv79> oh, a fresh build works for perl5:DBI but the latest CPAN release doesn't - even weirder

[08:06] <Darren_Duncan> good night

[09:50] <svnbot6> r5745, gaal++ | allow precompiling arbitrary additional modules; setting GHC heap size via config.yml

[11:20] <QtPlatypus> How does sub coerse:base {...} differ from sub infix:base {...} ?

[11:41] <QtPlatypus> ?eval sub base(Int $x,Int $y where {$y>1}) {...}

[11:41] <evalbot6> Error:  unexpected "w" expecting trait, ",", ":" or ")" 

[12:28] <QtPlatypus> ?eval want

[12:28] <evalbot6> 'Scalar (Any), LValue' 

[12:29] <QtPlatypus> ?eval my $a = want; want;

[12:29] <evalbot6> 'Scalar (Any), LValue' 

[12:29] <QtPlatypus> ?eval my $a = want; $a

[12:29] <evalbot6> \'Scalar ((mkType "Scalar"))' 

[12:29] <QtPlatypus> ?eval my Str $a = want; $a

[12:29] <evalbot6> \'Scalar ((mkType "Scalar"))' 

[12:31] <QtPlatypus> ?eval sub a {given want { say $_}};a()

[12:31] <evalbot6> Error: No compatible subroutine found: "&a" 

[12:31] <QtPlatypus> ?eval sub a() {given want { say $_}};a()

[12:31] <evalbot6> perl6 Error: No compatible subroutine found: "&given" 

[12:31] <QtPlatypus> ?eval sub a() {given "a" { say $_}};a()

[12:31] <evalbot6> a bool::true 

[12:31] <QtPlatypus> ?eval sub a() {given (want) { say $_}};a()

[12:31] <evalbot6> Scalar (Any), LValue bool::true 

[12:32] <QtPlatypus> ?eval sub a() {given (want) { say $_}};my $a=a()

[12:32] <evalbot6> Scalar (Any), LValue \bool::true 

[12:32] <QtPlatypus> ?eval sub a() {given (want(1)) { say $_}};my $a=a()

[12:32] <evalbot6> Error: No compatible subroutine found: "&want" 

[13:14] <svnbot6> r5746, qtplatypus++ | A simple MIME-Base64 implimentation.

[13:24] <svnbot6> r5747, iblech++ | * perl5/Perl6.MetaModel/tests/*: Fixed the svn properties (sorry, was my fault).

[13:24] <svnbot6> r5747, iblech++ | * Added the usual svn properties to qtplatypus++'s ext/MIME-Base64.

[13:24] <svnbot6> r5747, iblech++ | * PIL2JS:

[13:24] <svnbot6> r5747, iblech++ |   * pil2js.pl has a much saner API resembling GCC a bit now:

[13:24] <svnbot6> r5747, iblech++ |     $ pil2js.pl -o compiled.js input.pl

[13:24] <svnbot6> r5747, iblech++ |     $ pil2js.pl -o SomeModule.js SomeModule.pm

[13:24] <svnbot6> r5747, iblech++ |     $ pil2js.pl --link=html -o test.js ~Prelude.js SomeModule.js compiled.js

[13:24] <svnbot6> r5747, iblech++ |     $ pil2js.pl --link=js   -o test.js  Prelude.js SomeModule.js compiled.js

[13:24] <svnbot6> r5747, iblech++ |   * Better exception handling: try { die ... } should not alert() the error

[13:24] <svnbot6> r5747, iblech++ |     message. Instead, only exceptions making it to the toplevel are reported.

[13:24] <svnbot6> r5747, iblech++ |     (I.e. "say $some_undeclared_variable" will now show a user-visible error

[13:24] <svnbot6> r5747, iblech++ |     message instead of leaving a small entry in the JavaScript console (if

[13:24] <svnbot6> r5747, iblech++ |     available).

[13:26] <QtPlatypus> iblech: What svn propertes have to be added?

[13:26] <iblech> QtPlatypus: See lib/pugs/hack.pm. But it's not a problem if you forget them

[13:28] * QtPlatypus nods.

[13:39] <masak> ingy, ping

[13:42] <meppl> open: config.yml: No such file or directory at inc/PugsBuild/Config.pm line 41.

[13:42] <meppl> known?

[13:42] <svnbot6> r5748, gaal++ | add usage note; some minor cleanups

[13:42] <gaal> um, that shouldn't happen, meppl

[13:42] <gaal> but do this:

[13:42] <gaal> make config.yml

[13:42] <meppl> okee

[13:43] <meppl> dont work :o)

[13:43] <gaal> does make clean and perl Makefile.PL help?

[13:43] <meppl> ill do

[13:43] <meppl> it

[13:48] <meppl> gaal, no it doesnt work, the config.yml is still missing

[13:48] <Aankhen``> I am getting the same error (Win32, MSVC++).

[13:49] <QtPlatypus> meppl: I got the same problem.

[13:50] <QtPlatypus> (OSX)

[13:54] <Aankhen``> There is a strange circular dependency.

[13:54] <Aankhen``> Makefile.PL uses PugsBuild::Config, but PugsBuild::Config needs to read from config.yml, which is generated by a Makefile target.

[13:56] <QtPlatypus> Ick

[13:59] <pasteling> "Aankhen``" at 61.246.147.73 pasted "Possible PugsBuild::Config patch" (25 lines, 867B) at http://sial.org/pbot/11909

[13:59] <Aankhen``> Could you please try that?

[13:59] <Aankhen``> Seems to work for me.

[14:03] <pasteling> "Aankhen``" at 61.246.147.73 pasted "Cleaned up patch" (25 lines, 880B) at http://sial.org/pbot/11910

[14:03] * Aankhen`` pokes QtPlatypus, meppl and gaal.

[14:03] * QtPlatypus is trying it out

[14:03] <Aankhen``> OK.

[14:04] <Aankhen``> Bleh, I still made some mistakes.

[14:04] <Aankhen``> But the patch ought to work, regardless.

[14:07] * QtPlatypus nods "Seems to make a diffrence"

[14:08] <Aankhen``> OK, then I'll commit it as a temporary workaround.

[14:09] <QtPlatypus> Aankhen``++

[14:10] <meppl> it works

[14:13] <masak> Aankhen``++

[14:14] <svnbot6> r5749, Aankhen++ | * PugsBuild::Config: temporary workaround for config.yml error.

[14:23] <svnbot6> r5750, iblech++ | * PIL2JS: pil2js.pl -- Let the user choose the path to PIL2JS.js.

[14:23] <svnbot6> r5750, iblech++ | * PIL2JS: PIL::Nodes -- "my @array;" and "my %hash;" weren't working correctly,

[14:23] <svnbot6> r5750, iblech++ |   because their containers pointed to the scalar undef, as a workaround, "my

[14:23] <svnbot6> r5750, iblech++ |   @array = ()" had to be used. Fixed.

[14:24] <eric256> pastebot nopaste

[14:24] <eric256> pasteling nopaste

[14:24] <iblech> perlbot nopaste

[14:24] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[14:25] <eric256> thanks... i never remember that for some reason

[14:25] <pasteling> "eric256" at 66.102.136.66 pasted "Make Error" (16 lines, 1.1K) at http://sial.org/pbot/11911

[14:25] <eric256> i can't get pugs to nmake..... just updated the svn and did make and thats what i got

[14:28] <Aankhen``> nmake seems to be working okay for me so far...

[14:28] <gaal> BACK

[14:28] <gaal> oops

[14:28] <Aankhen``> Hiya gaal.

[14:28] <Aankhen``> Hola stevan.

[14:29] <gaal> hmm, right, that only workedforme because i already had the file in place. darn.

[14:29] <gaal> this build stuff is full of potholes

[14:30] <Aankhen``> Heh.

[14:30] <eric256> lol

[14:30] <Aankhen``> gaal, do you know where/how config.yml is used?

[14:31] <eric256> any idea what is going oni/

[14:31] <eric256> ?

[14:31] <Aankhen``> I see one use of it (`PugsBuild::Config->lookup('ghc_heap_size')` in Makefile.PL), but the rest don't seem to be used...

[14:31] <gaal> look for __optimized__

[14:31] <Aankhen``> Where?

[14:31] <gaal> also util/gen_prelude.pl implicitly uses it

[14:32] <gaal> __optimized__ is in the makefile

[14:32] <gaal> passed to util/build_pugs.pl

[14:32] <gaal> which expands it

[14:32] <Aankhen``> I don't see it. :-S

[14:32] <gaal> what does your $pugs target say?

[14:33] <gaal> $(PERL) util/build_pugs.pl right?

[14:33] <Aankhen``> Um... I hate to tell you this, but util/build_pugs.pl is not showing up anywhere in the file.

[14:33] <Aankhen``> Oh, one sec.

[14:34] <Aankhen``> Komodo suddenly realised it IS showing up.

[14:34] <gaal> your workaround is the correct fix, anyway

[14:34] <pasteling> "Aankhen``" at 61.246.147.73 pasted "$pugs :" (2 lines, 2.8K) at http://sial.org/pbot/11912

[14:34] <gaal> it actually used to be that way

[14:35] <gaal> but then i thought it was better to use make for what it's good at

[14:35] <Aankhen``> It's a good idea, but then how do you solve the circular dependency?

[14:35] <Aankhen``> Anyway.

[14:35] <gaal> have the module copy the defauly file when it wants it, like you do

[14:36] <gaal> but leave a dummy target in the makefile, so that when the config.yml fiel is edited, pugs gets rebuilt.

[14:36] <Aankhen``> The reason why I want to know about config.yml is that I want to figure out how to specify an installation prefix in it.

[14:36] <Aankhen``> That should save me the trouble of always putting PREFIX=foo after my `perl Makefile.PL`.

[14:37] <gaal> right. well, theoretically you could do the same kind of thing ghc_heap_size does: in the actual makefile code, perform a lookup and manipulate whatever you want.

[14:37] <gaal> sec

[14:38] <gaal> back

[14:38] <Aankhen``> WB.

[14:38] <gaal> but i'm not really sure i like all this system :(

[14:38] <eric256> umm. did any of that have to do with my problem or was that something else? i lost the trail of thought there

[14:39] <gaal> eric, lookin

[14:39] <gaal> g

[14:39] <Aankhen``> eric256: I doubt it's to do with your problem, since I am not able to reproduce it, so I can't really debug it.

[14:39] <eric256> thanks, i just didn't want to have missed the answer. lol

[14:40] <gaal> eric, when did you last svn up?

[14:40] <eric256> about a minute before i posted that message

[14:41] <gaal> made clean? :)

[14:42] <eric256> yep. i will agian though

[14:43] <gaal> huh, there is something wrong there though, sec

[14:43] <eric256> same error after make clean

[14:43] <gaal> svn up please

[14:43] <svnbot6> r5751, gaal++ | fix make unoptimized target

[14:46] <Aankhen``> eric256: Also, del config.yml

[14:46] <pasteling> "Aankhen``" at 61.246.147.73 pasted "Build error: GHC heap size" (17 lines, 917B) at http://sial.org/pbot/11913

[14:47] <eric256> arg....nmake clean has a command that is too long

[14:47] <Aankhen``> Oh.

[14:47] <eric256> anyone have the link to the new nmake version?

[14:47] <Aankhen``> Sorry, that one was my fault.

[14:47] <Aankhen``> (the build error, not eric256's problem)

[14:47] <gaal> http://forum2.org/gaal/pugs/nmake.exe

[14:48] <Aankhen``> gaal: What variable do I set to alter the PREFIX in the final Makefile, unless it is specified on the command-line?

[14:49] <eric256> appears to be working...thanks gaal

[14:49] <gaal> i don't know, it's a Module::Install / MM thing

[14:49] <eric256> dang i spoke tooo soon

[14:49] <gaal> you could hack and set ENV.

[14:49] <Aankhen``> How does MM come in?

[14:49] <gaal> makefile generation voodoo

[14:50] <Aankhen``> But where is it called?

[14:50] <gaal> uh, if M:I doesn't use that, forget it

[14:50] <Aankhen``> It's not in M::I...

[14:50] <pasteling> "eric256" at 66.102.136.66 pasted "Same nmake error, just later on." (61 lines, 5.3K) at http://sial.org/pbot/11914

[14:50] <gaal> ok, then whatever it is that does honor your PREFIX today...

[14:50] <Aankhen``> Ah.

[14:50] <Aankhen``> M::I::Makefile.

[14:50] <Aankhen``> That's what uses it.

[14:51] <gaal> fixing

[14:52] <gaal> svn up, eric, sorry about that.

[14:53] <eric256> its okay.  glad to be of services ;)

[14:54] <Aankhen``> gaal: Sorry to keep bugging you, but do you know if EU::MM will override any `makemaker_args` calls with parameters from ARGV?

[14:54] <Aankhen``> Or do the calls take precedence?

[14:54] <svnbot6> r5752, gaal++ | fix for make unoptimized for real

[14:55] <eric256> same error agian...farther down i think...

[14:55] <eric256> what usefull info can i give you? or do you want me to paste it agian?

[14:56] <gaal> eric, it still doesn't work?

[14:56] <eric256> nope... svn up; nmake clean; perl Makefile.PL; nmake unoptimized;   same error

[14:56] <gaal> Aankhen``, not sure

[14:57] <gaal> do you specify PREFIX to make or to makemaker anyway?

[14:58] <gaal> 5752?

[14:58] <gaal> (eric)

[15:01] <eric256> C:\projects\pugs\pugs>svn up

[15:01] <eric256> At revision 5752.

[15:05] <gaal> worksforme :/

[15:06] <gaal> ah

[15:06] <gaal> maybe not.

[15:06] <eric256> hehe

[15:06] <Aankh|Clone> [20:24:21] <Aankhen``> Or do the calls take precedence?

[15:06] <Aankh|Clone> [20:24:25] <svnbot6> r5752, gaal++ | fix for make unoptimized for real

[15:06] <Aankh|Clone> [20:25:30] <eric256> same error agian...farther down i think...

[15:06] <Aankh|Clone> -

[15:07] <Aankh|Clone> Did I miss anything?

[15:07] <gaal> A: 04[17:57] gaal: 01do you specify PREFIX to make or to makemaker anyway?

[15:07] <gaal> eric, fixing.

[15:08] <Aankh|Clone> No...

[15:08] <Aankh|Clone> Erm.

[15:08] <Aankh|Clone> Wait.

[15:08] <gaal> that's an "either or" question. :)

[15:08] <Aankh|Clone> I don't understand.

[15:08] <Khisanth> hmmm invisible black text :)

[15:09] <gaal> eric256: *sigh* try again now please.

[15:10] <gaal> a: when do you specify PREFIX - i never use it myself and don't know - during make, or when you make the makefile?

[15:10] <Aankh|Clone> When creating the makefile.

[15:10] <Aankh|Clone> perl Makefile.PL PREFIX=foo

[15:12] <gaal> sorry, i just don't know.

[15:12] <svnbot6> r5753, gaal++ | fix unoptimized, really for real.

[15:13] <Aankh|Clone> OK.

[15:16] *** Aankh|Clone is now known as Aankhen``

[15:17] <eric256> svn up'ing right now

[15:18] * eric256 begins make and holds his breath

[15:20] <eric256> working now. thanks

[15:21] <gaal> cool, thanks for helping :)

[15:28] <Aankh|Clone> I am not having a good day.

[15:28] *** Aankh|Clone is now known as Aankhen``

[15:31] <gaal> build systems can do that to you :/

[15:32] <Aankhen``> Oh, that is just a minor niggle.

[15:32] <Aankhen``> I've just been having a really bad day.

[15:33] <gaal> oh? well in that case i have this job for you maybe you'd be interested in working on the build system? :-P

[15:33] <Aankhen``> Heh.

[15:33] <Aankhen``> If you want help which I can provide, sure.

[15:34] <Aankhen``> I'm here for a little while longer before dinner, and then I'll be back after dinner.

[15:36] <gaal> there's not something specific - your impressions with connecting eg. the PREFIX setting to it would be valuable

[15:37] <Aankhen``> I am working on hooking up the `install_dir` setting from config.yml, if that's what you mean.

[15:37] <Aankhen``> Just waiting for it to compile (this is the third time I'm trying, because of various related and unrelated problems).

[15:38] <gaal> cool, good. if you see a refactoring along the road, feel free to apply or suggest it.

[15:39] <Aankhen``> Refactoring for what?

[15:39] <gaal> i'm not happy with how it is now, but i don't know if it's because my code is needlessly complex, or if build systems in general are complicated

[15:39] <gaal> A: for build_pugs.pl + PugsBuild::Config etc.

[15:40] <gaal> + Makefile.PL

[15:40] <Aankhen``> Ah.

[15:40] <Aankhen``> I tried to understand the whole system a while back... 'twas a bad idea. :-P

[15:40] <gaal> :)

[15:41] <Aankhen``> I would like to try refactoring it, but TBH, I wouldn't know where to start.

[15:41] <Aankhen``> How do I escape a colon?

[15:41] <Aankhen``> I want to say this: install_dir: C:\Development\Perl6

[15:41] <Aankhen``> Do I just backwhack the colon?

[15:41] <Aankhen``> (YAML)

[15:42] <gaal> no need

[15:42] <gaal> only the first colon is significant.

[15:42] <Aankhen``> Ah.

[15:42] <Aankhen``> vi's syntax highlighting fooled me.

[15:42] * Khisanth wonders if there exists any simple build system

[15:44] <gaal> yes, the yaml mode isn't very polished.

[15:44] <gaal> There probably is, but it isn't portable. :-P

[15:45] <Khisanth> between languages or platforms?

[15:46] <Aankhen``> Both, no doubt.

[15:47] <gaal> seen nothingmuch

[15:47] <jabbot> gaal: nothingmuch was seen 16 hours 15 minutes 26 seconds ago

[15:48] <gaal> yeah, i was joking. it looks like these things get crufty but also have some legitimate concerns they can't help but have to address.

[15:48] <Aankhen``> Yep.

[15:48] <Aankhen``> But I would think it could be refactored... after all, refactoring is not supposed to change the meaning.

[15:50] <gaal> it's all jenga-rigged. you want to throw out something, but you find out that it provides some treatment of an obscure case in a platform you can't test on yourself, so you decide to leave it...

[15:50] <Aankhen``> Fun. ;-)

[15:51] <gaal> yeah. when will nothinmuch arrive already and take my mind off this :)

[15:52] <Khisanth> gaal: heh that seems to sound like people's description of the perl5 core :)

[15:54] <gaal> i added my share of cruft too: I liked how ghc solved the option sorting problem: ghc +RTS -M320m -RTS --other --options

[15:54] <gaal> so i copied the design

[15:55] <gaal> but of course unluckily, i had to pass RTS paramaters myself to ghc from within an aggragated option list

[15:55] <gaal> so i ended up having to use a different marker for + and -

[15:55] <gaal> which is ugly to the extreme :(

[15:56] <gaal> plus, i can't escape them simply:  \+RTS

[15:56] <gaal> because someone else "fixes" the paths: s,\\,/,g

[15:56] <gaal> so that gets translated to /+RTS :)

[15:57] <gaal> and i absolutely refuse to write code that accepts "/" as an escape character.

[15:57] <Khisanth> this sounds extremely bad

[15:58] <gaal> conceptually, what i need to do is serialize the various option lists

[15:58] <gaal> into some armor form

[15:58] <gaal> but the command line is a crappy transport

[15:59] <gaal> plus, it's insane to make command line args opaque

[15:59] <gaal> if anyone has any ideas for making this better, i'd love to hear

[16:00] <Khisanth> what the heck is this being used for?

[16:00] <gaal> pass various options around to different parts of the build system

[16:01] <gaal> ghc, the thing that generates the precompiled prelude...

[16:02] <Aankhen``> gaal: It's not parsing my install_dir...

[16:03] <gaal> nopaste a patch?

[16:03] <Aankhen``> No, as in, the YAML structure, which ought to contain a string (the path), just has a 0.

[16:04] <gaal> what's the line say?

[16:04] <Aankhen``> install_dir: C:\Development\Perl6

[16:04] <Aankhen``> C:\Development\pugs>perl Makefile.PL

[16:04] <Aankhen``> $VAR1 = {

[16:04] <Aankhen``>           'install_dir' => 0,

[16:05] <gaal> looking at it...

[16:05] <gaal> btw "perl -Iinc util/build_pugs.pl -h"

[16:05] <Aankhen``> Ah.

[16:05] <Aankhen``> Thanks. =)

[16:09] <Aankhen``> Oh, PugsBuild::MiniYAML needs to handle escaped characters.

[16:09] <gaal> fixed it, committing.

[16:09] <Aankhen``> Merci. :-D

[16:09] <gaal> that wasn't the problem

[16:09] <Aankhen``> OK.

[16:09] <gaal> the problem was that my true/false handling wasn't anchored

[16:10] <Aankhen``> Oh.

[16:10] <gaal> so your string contained an "n"

[16:10] <Aankhen``> Yeh.

[16:10] <gaal> and embarassingly, the mini parser normalized that as a "false".

[16:10] <Aankhen``> Committed?

[16:10] <gaal> src

[16:11] <gaal> sec

[16:11] * Aankhen`` waits impatiently.

[16:12] <gaal> up

[16:13] <gaal> i hope there are no more bugs soon. i have to prepare dough for the pizza :)

[16:13] <Aankhen``> I shall try to refrain from finding them. ;-)

[16:14] <Aankhen``> OK, I managed to hook it up.

[16:14] <Aankhen``> Now let me see if I can override it using PREFIX= on the command line.

[16:14] <gaal> here, take this BugSquasher2000. may it serve you well.

[16:14] <Aankhen``> Yep.

[16:14] <gaal> hold on

[16:14] <gaal> why PREFIX=?

[16:14] <Aankhen``> What do you mean?

[16:15] <gaal> we're trying to unify the configuration

[16:15] <gaal> so expoty PUGS_BUILD_OPTS=PREFIX=c:\whatever:

[16:15] <gaal> oh crap

[16:15] <gaal> that won't work

[16:15] <Aankhen``> Yeh.

[16:15] <gaal> because i split that var on :

[16:15] <gaal> tsk, tsk.

[16:15] <Aankhen``> Oh, thataway.

[16:15] <Aankhen``> I was thinking of it in terms of how you have no `export FOO=bar` on Windows.

[16:16] <svnbot6> r5754, gaal++ | be more careful normalizing true/false values

[16:16] <gaal> anyway, do what you think's right :)

[16:16] <gaal> i'll be back :)

[16:16] <Aankhen``> A'right.

[16:16] <Aankhen``> I think I'll be off for dinner too.

[16:16] <Aankhen``> See ya later.

[16:18] <gaal> :) &

[16:25] <svnbot6> r5755, Aankhen++ | * added `install_dir` key to config.yml -- path to install Pugs in.

[16:25] <svnbot6> r5755, Aankhen++ | * modified Makefile.PL and PugsBuild::Config to handle the new key.

[16:25] <gustins> hey :)

[16:26] <gustins> here is someone from germany?

[16:26] <iblech> gustins: Yep

[16:26] <gustins> from which city?

[16:27] <iblech> Augsburg, near Munich

[16:27] <gustins> it's great... it's in bavaria?

[16:27] <iblech> Yep

[16:27] <gustins> :)

[16:30] <iblech> autrijus: FYI, parsing the output of -CPIL of Prelude/JS.pm: ~~30s here. The actual compile: ~~0s :))

[16:31] <kev009> is perl6 anywhere near release state?

[16:31] <PerlJam> kev009: define "near"

[16:31] <PerlJam> you give me an epsilon and I'll tell you if we're within it.

[16:32] <kev009> say, 6 months?

[16:32] <PerlJam> no.

[16:32] <kev009> how about a year 6?

[16:32] <PerlJam> oh ... you'll probably have to define "release" too as my idea of a release is proably different than yours

[16:33] <kev009> beta and or RC will be fine.

[16:34] <PerlJam> 1.5 years?  I think we *might* have a beta by then (but I'm optimistic)

[16:35] <kev009> PerlJam: ok.  any good source to read what will be new/changed?

[16:35] <kev009> I've heard a lot of hype but haven't seen much material

[16:35] <PerlJam> kev009: dev.perl.org

[16:35] <PerlJam> And you can use pugs now to try things out.

[16:36] <kev009> ok

[16:36] <PerlJam> pugs is a full-featured implementation of perl6.  The main downside is that it's slow.

[16:37] <Limbic_Region> s/is a/will be/

[16:38] <Limbic_Region> s/it's slow/it's currently/

[16:38] <PerlJam> right, right.

[16:38] <Limbic_Region> err currently slow even

[16:38] <PerlJam> pugs rocks though.

[16:38] <Limbic_Region> pugs will likely end up being more full featured then the official p6 compiler

[16:39] <PerlJam> I still get goose bumps when I write perl6 and pugs actually runs it.

[16:39] <Limbic_Region> at least WRT backends being targeted anyway

[16:39] <osfameron> Limbic_Region: is it definite that pugs won't be the/a official p6 compiler ?

[16:40] <PerlJam> once we get to some form of AST, we can get anywhere  :)

[16:40] <Limbic_Region> osfameron - nothing is definate

[16:40] <Limbic_Region> but it certainly looks that way for a couple of reasons

[16:40] <PerlJam> osfameron: It's the official bootstrap compiler.

[16:40] <iblech> PerlJam: As proven by -CPIR, PIL-Run and PIL2JS :)

[16:41] <PerlJam> yeah, PIL2JS still makes me boggle a bit :-)

[16:42] <Limbic_Region> PerlJam - "anywhere" is a bit of a stretch - I assume you mean given any turing complete language

[16:42] <iblech> Oh, and WRT speed: The only really slow part of current Pugs is its evaluator. The parser and -CPIL are fast :)

[16:42] <Limbic_Region> and even then - there are some things that are just way too hard to realistically do even with turing complete languages

[16:43] <PerlJam> Limbic_Region: how about "anywhere someone would want to go" then?

[16:44] <Limbic_Region> I would have just said most anywhere

[16:44] <Limbic_Region> *shrug* - what do I know - I am just a lurker these days 

[16:44] <PerlJam> "anywhere" is close enough for me then.

[16:44] <PerlJam> measure with a micrometer, mark with chalk and cut with an axe

[16:45] <Khisanth> iblech: but WRT to speed aren't most people concerned about the evaluator? :)

[16:45] * Limbic_Region chuckles at the idea of BASIC with coroutines and continuations

[16:46] <Limbic_Region> Khisanth - well, when PIL-PIR is complete it shouldn't be much of an issue

[16:46] <iblech> Khisanth: Well :)

[16:46] <iblech> Limbic_Region: Right.

[16:47] <PerlJam> iblech: well, the issue just gets moved from pugs-space to parrot-space really.

[16:47] <PerlJam> er, Limbic_Region 

[16:47] <Limbic_Region> there are still a lot of optimizations to be made in Parrot itself and there are certainly a large number of optimizations to be made in the PIL-PIR process

[16:48] <Limbic_Region> IIRC - parrot already meets or exceeds p5/python/ruby (and even C) in many benchmarks

[16:48] <Limbic_Region> well - I do recall correctly - the problem is my recollection is from some time ago and things change

[16:49] <PerlJam> Limbic_Region: your recollection is pre-chip.  The jury is still out on the changes that chip and leo are making.

[16:49] <Limbic_Region> agreed

[16:50] <Limbic_Region> admittedly I have only been following p6.i through the summaries since late november of last year

[16:52] <Limbic_Region> I would be very much interested in mapping how much of the p6 language has been spec'd against what hasn't been spec'd against how much has been implemented in Pugs against how much is currently supported in PIL-PIR

[16:59] <ingy> masak: pong

[17:14] <svnbot6> r5756, gaal++ | cleanups for default config.yml. Note that we need an empty makefile target

[17:14] <svnbot6> r5756, gaal++ | so that when the user edits their config.yml pugs gets recompiled. But the

[17:14] <svnbot6> r5756, gaal++ | initialization can't be in the rule because of the circular dependency that

[17:14] <svnbot6> r5756, gaal++ | would entail.

[17:19] * eric256_ curses his web host....3 days of odd errors with no explanations, then today it suddenly starts working agian

[17:33] <dudley> Does PREFIX=mumble work now?

[17:34] <dudley> last I heard, it only partially worked. Some things defaulted to your p5 prefix regardless

[17:34] <gaal> A checked it in; i didn't try it

[17:37] <Aankhen``> Uh, I didn't check in PREFIX=.

[17:38] <Aankhen``> I just added an `install_dir` key in config-template.yml, and support for it in Makefile.PL and PugsBuild::Config.  `install_dir` functions as an alias of PREFIX.

[17:38] <Aankhen``> s/alias of/alias for/

[17:38] <Aankhen``> (I got tired of always using `perl Makefile.PL PREFIX=foo` :-P)

[17:38] <gaal> ah.

[17:38] <gaal> ok.

[17:39] <dudley> Aankhen``:  does that install things where you want them?

[17:39] <Aankhen``> On my system, yes, pretty much.

[17:39] <Aankhen``> Everything except Perl6::Pugs is installed into the specified directory.

[17:39] <dudley> Is your PREFIX different from your p5 prefix?

[17:40] <Aankhen``> Yes.

[17:40] <Aankhen``> I'm on Win32, if that makes a difference to you.

[17:42] * eric256_ wonders why you renamed it install_dir instead of PREFIX

[17:42] <eric256_> although i think yours makes more sense. lol

[17:42] <dudley> No, there's just a warning in INSTALL about how PREFIX is broken. If it's not, I'll take that out.

[17:42] <Aankhen``> Ahh, I tried to make it a little more user-friendly.

[17:42] <Aankhen``> As you say, `install_dir` makes more sense to me than `PREFIX`.

[17:44] <Aankhen``> dudley: As I recall, I never did have trouble with PREFIX. It was the Debian (or perhaps Linux in general) crowd that had a lot of problems.

[17:46] <Aankhen``> Hola nothingmuch.

[17:46] <eric256_> i just nevere make install....no reason to chance it ;)

[17:47] <Aankhen``> Heh.

[17:48] <nothingmuch>  oops

[17:48] <nothingmuch> hola

[17:49] <Aankhen``> What's shakin'?

[17:49] <nothingmuch> not much

[17:49] <eric256_> anyone here familar with the current state of pugs scopes?

[17:49] * nothingmuch is depressed

[17:49] <nothingmuch> hand won't heal

[17:49] <nothingmuch> I can't play the bass

[17:50] <Aankhen``> Awww.

[17:50] <eric256_> S06 says that global subroutines can be prefixed with * but don't need to be if it is unambiguos.... or am i reading that rwong?

[17:50] <nothingmuch> i think that makes sense.

[17:50] <nothingmuch> my sub foo { }

[17:50] <nothingmuch> foo() will beat any global foo

[17:51] <nothingmuch> but if there's no 'my sub foo' you don't need to say 'our sub foo' or something to use it

[17:51] <eric256_> but do global subs need to be declared with *?  is it only optional when calling them?

[17:53] <eric256_> while i'm at it .... wouldn't "as global" be better than a * for subs? ;)

[17:53] <nothingmuch> i don't think so

[17:53] <nothingmuch> think of 'sub name block' as a sort of macro

[17:53] <nothingmuch> that compiles down to

[17:53] <nothingmuch> BEGIN { &name := sub block }

[17:54] <eric256_> but we have  "as primitive" and "as builtin", etc. 

[17:55] <nothingmuch> ....?

[17:55] <eric256_> i'm not sure where attributes fit in that macro of yours...are they droped into the actual block ?   sub test as builtin { ... }  is &test := sub {is builten; ... }

[17:55] <svnbot6> r5757, iblech++ | * PIL2JS:

[17:55] <svnbot6> r5757, iblech++ |   * my @a = "hi" is now the same as my @a = ("hi",) (i.e., it works now).

[17:55] <svnbot6> r5757, iblech++ |   * my %h = (a => 1, b => 2) and my %h = (a => 1) work now, too.

[17:55] <svnbot6> r5757, iblech++ |   * Test.pm doesn't die anymore when reporting a failed tested (because it

[17:55] <svnbot6> r5757, iblech++ |     accessed $?CALLER::CALLER::POSITION, which is now stubbed).

[17:55] <svnbot6> r5757, iblech++ |   * Various parameters ($_, $^a) were seen as pass-by-name only because of me

[17:55] <svnbot6> r5757, iblech++ |     misunderstanding isNamed. Fixed.

[17:55] <svnbot6> r5757, iblech++ |   * Many new primitives and operators: &nothing, &split (Str only), &not,

[17:55] <svnbot6> r5757, iblech++ |     &true, &join, &map, &grep, &sum, &infix:<..>, &infix:<^..>, &infix:<..^>,

[17:55] <svnbot6> r5757, iblech++ |     &infix:<^..^>, &infix:<**>, &infix:«<=>».

[17:55] <svnbot6> r5757, iblech++ |   * Updated README to reflect PIL2JS's progress.

[17:55] <svnbot6> r5757, iblech++ | * unEVALed some tests in t/operators/ so PIL2JS can run them.

[17:55] <eric256_> he just likes all them ++'s

[17:55] <nothingmuch> it's not really a macro

[17:56] <eric256_> i understand, but then where do attributes fit in such that is global doesn't make more sense

[17:57] <PerlJam> eric256_: Why does it have to be either/or?  Can't it be "and"?

[17:57] <PerlJam> (personally, I like the use of hungarian notation in this instance though)

[17:58] <eric256_> oh i don't care if its both PerlJam  ... i just have never realy gotten used to this punctuation... and since these cases

[17:58] <eric256_> wont happen often  as global seemed like a nice fit

[17:59] <eric256_> but them i'm still not realy secure in my understanding of attributes, hence the questions ;) in seek of knowledge

[17:59] * Aankhen`` stares at iblech.

[18:00] <iblech> Aankhen``: ? :D

[18:00] <Aankhen``> iblech++

[18:00] <Aankhen``> Oh, and gaal++; gaal++; # for rushing to the rescue earlier =)

[18:01] <iblech> I'm uploading the complete testsuite, compiled to JS, currently. Many tests pass :)

[18:02] <iblech> (Of course, even more tests fail)

[18:11] <eric256_> hmmm....no response...must mean its time to head off for lunch

[18:22] <iblech> http://m19s28.vlinux.de/iblech/stuff/not_perm/pil2js-demo/t/ -- Our testsuite compiled to JavaScript :)

[18:23] <eric256_> thats kind of sick

[18:23] <eric256_> lol

[18:26] * masak has finally understood the difference between "svk up" and "svk pull"

[18:27] <masak> and i think i like it

[18:29] <iblech> FYI, many tests in t/builtins/ mostly pass. t/oo/, by contrast, dies all the time. Part of the errors are because &eval is unimplemented, though

[18:30] <Aankhen``> Hey iblech, you're running dual AMD Athlons?

[18:31] <iblech> Yep :) Very useful for compiling thousands of tests :)

[18:31] <Aankhen``> Heh.

[18:31] <gaal> all smokers: if you have lots of ram, you can speed up smokes. in your config.yml, uncomment ghc_heap_size and precompile_modules

[18:31] <Aankhen``> Are those regular Athlon MPs or Athlon 64s?

[18:31] <gaal> this makes your pugs slower to build but faster to smoke

[18:32] <Aankhen``> I uncommented the precompile_modules line while building.  `nmake test` was smokin' fast. ;-)

[18:32] * Aankhen`` bangs his head on the wall.

[18:32] <Aankhen``> s/ fast//

[18:32] <gaal> you can also inline additional arbitrary modules into pugs but you need lots of ram for every one.

[18:32] <iblech> Aankhen``: Regular Athlon MPs 2000 MP+

[18:33] <Aankhen``> iblech: Ah, I see.

[18:34] <eric256_> after chaning config.yml do you need ot perl Makefile.PL agian?

[18:34] <Aankhen``> eric256_: Yes.

[18:35] <gaal> ideally no :)

[18:35] <Aankhen``> Well, you definitely need it for install_dir.

[18:35] <Aankhen``> Dunno about the others.

[18:35] <Aankhen``> BBIAB.

[18:36] <eric256_> i often spell unoptimized wrong. so that is a nice option to have in the config file

[18:36] <gaal> you have it there

[18:37] <gaal> and the old targets still exist

[18:37] <gaal> or am i misunderstanting you?

[18:37] <eric256_> i like the option in config.yml so i don't have to always type nmake unoptimized....since i tend to spell it wrong the first time ;)

[18:37] <gaal> aaahhh :)

[18:37] <gaal> oaky

[18:38] <gaal> yes, well it's not all bad this thing

[18:38] <eric256_> do modules have to be compiled at make time? or is there a while to precompile them for use later?

[18:39] <eric256_> s/while/way/

[18:40] <gaal> no, we don't have dynamic loading yet

[18:42] <eric256_> i keep hoping...dunno why, nothing i need to precompile...it will just be fun. ;)

[18:42] <eric256_> includeing Test.pm in the compiling is taking forever.

[18:42] <masak> hm, wizard.p6 is still b0rken

[18:42] <masak> i got stuck in an infinite loop after killing my first army of frogs

[18:43] <eric256_> thats new. 

[18:43] <masak> i'll see if i can find the bug

[18:44] <masak> anyway, i get a lot of "army of frogs is attacking you. what will you do?" followed by "the army of frogs is dead!" all the time

[18:44] <masak> Ctrl+C doesn't help, so i had to open a new terminal and kill pugs

[18:45] <masak> can anyone confirm this behaviour?

[18:45] <svnbot6> r5758, fglock++ | * fixed tests in Set::Infinite::Functional

[18:46] <dudley> masak: Ctrl+C worked for me, but otherwise, yes, it happens here

[18:47] <masak> i haven't found the bug in the source, but it is either a simple error in wizard.p6 or a pugsbug

[19:05] <masak> update on the wizards.p6 bug: it seems that when the frog army is shifted from the array, the array doesn't get shorter

[19:06] <gaal> frog traces!

[19:06] <masak> at first sight, there seems to be one shift to many, since both line 59 and line 176 do a shift

[19:06] <masak> gaal: :)

[19:06] <masak> s/to many/too many/

[19:22] <pasteling> "masak" at 130.238.83.176 pasted "I can't explain this error in a one-liner, could someone help me?" (5 lines, 153B) at http://sial.org/pbot/11922

[19:22] <gaal> @.b

[19:23] <masak> d'oh! thx

[19:23] <gaal> the error location is confus[ing|ed]

[19:23] <Khisanth> hmm

[19:24] <gaal> but that's a well-known issue.

[19:29] <pasteling> "masak" at 130.238.83.176 pasted "ok, next one :/ i get a "can't modify constant item" when i shift from an rw member -- why?" (4 lines, 260B) at http://sial.org/pbot/11923

[19:34] <Aankhen``> ?eval class Test { has Int @.b is rw; method b { @.b.shift() }; my %h; %h<test> = Test.new(:b("testing", "testing")); my $b = %h<test>.b

[19:34] <evalbot6> Error:  unexpected "{" expecting trait, ";" or end of input 

[19:34] <svnbot6> r5759, chromatic++ | Added tests for global destruction: call DESTROYALL() on all active objects.

[19:34] <svnbot6> r5759, chromatic++ | (This is the last feature Test::Builder needs to work completely.)

[19:34] <svnbot6> r5760, chromatic++ | Allow the option of using svk, if it doesn't look like an svn checkout.

[19:34] <svnbot6> r5760, chromatic++ | Hopefully somewhat portable to other shells.

[19:34] <Aankhen``> ?eval class Test { has Int @.b is rw; method b { @.b.shift() } }; my %h; %h<test> = Test.new(:b("testing", "testing")); my $b = %h<test>.b

[19:34] <evalbot6> Error: Can't modify constant item: VUndef 

[19:34] <Aankhen``> ?eval class Test { has Int @.b is rw; }; my %h; %h<test> = Test.new(:b("testing", "testing")); %h<test>.b

[19:34] <evalbot6> ['testing', 'testing'] 

[19:34] <Aankhen``> ?eval class Test { has Int @.b is rw; }; my %h; %h<test> = Test.new(:b("testing", "testing")); %h<test>.b.shift

[19:34] <evalbot6> Error: Can't modify constant item: VUndef 

[19:37] <gaal> nothingmuch, ping

[19:38] <nothingmuch> pong

[19:38] <gaal> eilara pointed out that in HTT, it's kinda silly to color the percentage box yellow on failures

[19:38] <nothingmuch> HTT?

[19:38] <gaal> it oughta be red. maybe differently tinted red, but red

[19:38] <gaal> TTH

[19:38] <nothingmuch> oh

[19:39] <gaal> i am low on wakies

[19:39] <nothingmuch> i like it moving from yellow to red

[19:39] <nothingmuch> depending on percentage

[19:39] <gaal> but yellow has another meaning

[19:39] <nothingmuch> "unexpected success"?

[19:39] <autrijus> greetings. I'm about to sleep now; this is just a heads-up to say I'm not dead. I have merely been caught up in $work for a couple days; after that I've stumbled upon this horrible thing called the Sims. :-/

[19:39] <gaal> so maybe have it move from pink to blood red

[19:39] <gaal> hello autrijus :)

[19:40] <nothingmuch> autrijus: sims are fun to kill

[19:40] <nothingmuch> the "party fire" scenario is by far my favourite

[19:40] <nothingmuch> make a house

[19:40] <gaal> autrijus: may you never meet GTA: SA

[19:40] <autrijus> nothingmuch: indeed, isn't it. but that kept me in Win32, and that means no Pugs work ;)

[19:40] <nothingmuch> invite all your friends

[19:40] <autrijus> gaal: good, I don't even want to know about it

[19:40] <nothingmuch> make 3-4 fireplaces

[19:40] <nothingmuch> close off all thie doors

[19:40] <nothingmuch> and put lots of furniture next to the fireplaces

[19:40] <nothingmuch> sometimes if you build a house over that place, it will be haunted

[19:40] <gaal> nothingmuch: smoker to the core.

[19:41] <autrijus> anyway, I think I'll take drastic measure to eradicate the game and boot into the productive freebsd tomorrow

[19:41] <autrijus> but I need to sleep now. g'nite :) *wave*

[19:41] <nothingmuch> gaal: the i don't want to change the yellow, it works well for me

[19:41] <nothingmuch> i disagree with the difference of meaning

[19:42] <gaal> maybe bonus tests should be blue then?

[19:42] <gaal> anyway the colors shouldn't be the only cue

[19:42] <gaal> i gave the TTH spiel to quite a few people by now.

[19:42] <gaal> some are colorblind

[19:43] <gaal> :-/

[19:43] <nothingmuch> if they are colorblind they should just use the regular test harness output

[19:43] <nothingmuch> or find a wayh to denote stuff with symbols, or shades of grey

[19:43] <nothingmuch> red and green blindness is by far the most common, if my facts are right

[19:43] <nothingmuch> so this is a big problem

[19:44] <gaal> i think the scaled summary is cute but not really useful

[19:44] <svnbot6> r5761, Stevan++ | Perl6::MetaModel - (Perl 5)

[19:44] <svnbot6> r5761, Stevan++ | * ::Class & ::Role no longer call $class_name->meta which helps in breaking circularity

[19:44] <svnbot6> r5761, Stevan++ | * ::Object is being broken down in an effort to break circularity as well

[19:44] <svnbot6> r5761, Stevan++ | * ::MetaModel same thing here,... tweaks and hacks to break circularity

[19:44] <svnbot6> r5761, Stevan++ | * ::MetaClass, just removing a comment which is no longer relevant

[19:44] <svnbot6> r5762, Stevan++ | org.perl6.metamodel - (yes, thats right, it's Java)

[19:44] <svnbot6> r5762, Stevan++ | * first stab at the MetaModel in Java, very primative still 

[19:44] <svnbot6> r5762, Stevan++ | ** please don't hate me ;) **

[19:44] <nothingmuch> scaled summary?

[19:44] <gaal> without  it we can supply alternate CSS

[19:44] <gaal> whoa stevan :)

[19:45] <stevan> :)

[19:45] <nothingmuch> gaal: TTH is all about cuteness

[19:45] <nothingmuch> it's a way to get on top of lots of data

[19:45] <nothingmuch> and it does it by being visually attractive

[19:45] <stevan> gaal: I waas going to do C#, but my Mono install is broken

[19:45] <gaal> candy ne effective

[19:46] <gaal> not necessarily at least

[19:46] <gaal> C#?

[19:46] <gaal> oh

[19:46] <gaal> oh

[19:47] <stevan> it is an experiment in the solidity of the metamodel

[19:47] <gaal> nothingmuch: i should get you that book by the graph guy

[19:47] <stevan> Java is not as forgiving as P5, JS

[19:47] <nothingmuch> graph guy?

[19:47] <gaal> first i have to remember its name

[19:47] <gaal> and his name

[19:47] <gaal> there's a really good book about visual presentation

[19:47] <stevan> Tufte?

[19:48] <gaal> yeah, i think so

[19:48] <stevan> Edward Tufte

[19:48] <gaal> yes

[19:48] * nothingmuch is frustrated

[19:49] <nothingmuch> every time someone new sees TTH i suddenly have to get educated

[19:49] <nothingmuch> and this results in 10 people editing CSS

[19:49] <nothingmuch> and then I have to merge all that

[19:49] <nothingmuch> and eventually the change isn't even noticable

[19:49] <eric256_> hehe /me comes back from lunch to find that the build failed because of exhausted heap. oops

[19:50] <gaal> isn't the solution to that the commit bit? :-P

[19:50] <nothingmuch> nope, because there are conceptual conflicts

[19:50] <gaal> eric, uncomment ghc_heap_size

[19:50] <nothingmuch> people who are unhappy with what the color-czar says

[19:50] <nothingmuch> which I think was stevan, theorbtwo and I a while back

[19:50] <eric256_> or recomment precompile_modules: [ ext/Test/lib/Test.pm ]

[19:50] <nothingmuch> should just replace what they want to replace.

[19:50] <nothingmuch> by editing the CSS or subclassing or whatever

[19:51] <gaal> eric, if you do precompile test your smoke will fly

[19:51] <nothingmuch> gaal: how do I precompile test?

[19:51] <eric256_> i'll give it another go then... just in the name of science

[19:51] <gaal> nm: vi config.yml

[19:51] <gaal> brb

[19:51] * nothingmuch restarts smoke loop

[19:52] <gaal> (nm: rename TTH as Bikeshed. then people will literally be able to color it.)

[19:53] <nothingmuch> =)

[19:53] <Khisanth> ?eval '«'..'»'

[19:53] <evalbot6> Error:  unexpected "\\" expecting term postfix, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[19:53] <eric256_> and you would expect?

[19:54] <eric256_> i'm guessing that looks different with unicode support. lol

[19:54] <Khisanth> heh

[19:54] <Khisanth> it actually works, just not with evalbot

[19:54] <eric256_> i wonder if evalbot is unicode friendly

[19:54] <iblech> ?eval "äöü"

[19:54] <evalbot6> ***      unexpected "("     expecting term postfix, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input     at -e line 8, column 4 

[19:55] <nothingmuch> nope

[19:55] <nothingmuch> that sucks

[19:55] <Khisanth> where did the ( come from?

[19:55] <nothingmuch> IRC is byte leveel

[19:55] <nothingmuch> haskell is unicode friendly

[19:55] <nothingmuch> pugs uses haskell strings

[19:55] <iblech> Khisanth: Probably from examples/network/evalbot/evalhelper.p5

[19:55] <nothingmuch> so my conclusion is that haskell expects utf-16 or something

[19:57] <Khisanth> ['«'..'»'] didn't seem to work in ghci

[19:59] <Khisanth> what is the $ operator called in Haskell?

[20:00] <iblech> Function application

[20:00] <iblech> f $ x = f x

[20:01] <iblech> f (long expression, parens needed) = f $ long expression, parens can be dropped thanks to the $ operator

[20:07] <Khisanth> hrm so . is like using $ twice?

[20:09] <iblech> (f . g) x = f (g x) = f $ g x = f $ g $ x, so yes

[20:10] <Khisanth> thanks

[20:10] <iblech> np

[20:17] <Aankhen``> G'night.

[20:40] <svnbot6> r5763, fglock++ | * several improvements and more docs in Set::Infinite

[20:40] <svnbot6> r5764, fglock++ | * more tests in Set::Infinite

[20:41] <sili> are those commit comments?

[20:42] <sili> :/

[20:42] <sili> vague++

[20:42] <Khisanth> yes, you didn't know?

[20:42] <sili> rhetorical

[20:43] <Khisanth> hrm there is no test of :by

[20:44] <iblech> There is

[20:44] <iblech> Sec

[20:45] <iblech> t/operators/adverbial_modifiers.t 

[20:46] <Khisanth> what else can it be used with besides the range op?

[20:46] <svnbot6> r5765, putter++ | Another cm of progress on modules/Grammars/rx_grammar.pl.

[20:47] <iblech> No idea

[20:48] <Khisanth> how about working with chars and strings?

[20:48] <putter> f:x(1)(2,3) => f(x=>1,2,3)  or something like that.  doesnt work yet.  (which makes emulating rx a pain;)

[20:58] <eric256> perlbot nopaste

[20:58] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[21:02] <putter> &

[21:13] <pasteling> "eric256" at 66.102.136.66 pasted "Just me agian" (14 lines, 1.1K) at http://sial.org/pbot/11927

[21:13] <eric256> i'm very talented at getting errors during make today

[21:14] <eric256> what a proud skill that is ;).  The paste is an error i got while nmake unoptimized with Prelude and Test pre compiled

[21:16] <iblech> eric256: Ooh! You found a bug in GHC!

[21:16] <iblech> (I think.)

[21:18] <svnbot6> r5766, iblech++ | * More unEVALs and minor test fixes in t/subroutines/.

[21:18] <svnbot6> r5766, iblech++ | * Usual svn properties.

[21:18] <svnbot6> r5766, iblech++ | * PIL2JS:

[21:18] <svnbot6> r5766, iblech++ |   * ?(?0) no longer returns true (in JavaScript, all objects are true -- even

[21:18] <svnbot6> r5766, iblech++ |     new Boolean(false)).

[21:18] <svnbot6> r5766, iblech++ |   * Native JavaScript functions may safely return arrays now.

[21:18] <svnbot6> r5766, iblech++ |   * Initial support of &?SUB and &?BLOCK.

[21:18] <svnbot6> r5766, iblech++ |   * $*OS = "browser".

[21:18] <svnbot6> r5766, iblech++ |   * Arity reporting is sometimes wrong (this is an (already tested against)

[21:18] <svnbot6> r5766, iblech++ |     pugsbug), so &statement_control:<for> and &map no longer refuse to work

[21:18] <svnbot6> r5766, iblech++ |     with 0-ary functions, but instead simply call them and hope they actually

[21:18] <svnbot6> r5766, iblech++ |     accept at least one param.

[21:18] <svnbot6> r5766, iblech++ |   * Fixed &substr and &split to autocoerce their arguments into Strs.

[21:18] <svnbot6> r5766, iblech++ |   * Fixed pil2js.pl to accept files ending in .p6 as Perl 6 sources.

[21:21] <eric256> i'm not sure that excites me

[21:21] <eric256> lol

[21:21] <svnbot6> r5767, iblech++ | Test.pm -- Skip checking using junctive &infix:<|> when running under PIL2JS.

[21:21] <svnbot6> r5767, iblech++ | This is so tests don't die if one of their subtests fail.

[21:22] <eric256> trying it without Test.pm precompiled to see if the trouble is there or with the heap size..

[21:24] <eric256> yep. works fine without Test.pm included

[21:24] <eric256> that must suck up the memory

[21:24] <iblech> Seems so

[21:31] <eric256>       @.monsters.perl.say; my $x = shift @.monsters;  @.monsters.perl.say;

[21:32] <eric256> any ideas why that prints the same thing beofre AND after the shift?

[21:32] <eric256> hmmm.... @.monster is a property of an object, does shift not work on the proxy object that is being used?

[21:33] <eric256> ?eval class Foo { has @.test }; my $x = new Foo; $x.test = (1,2,3); $x.foo.say;

[21:33] <evalbot6> Can't exec "pugs": Text file busy at examples/network/evalbot//evalhelper.p5 line 42. 

[21:34] <eric256> ?eval class Foo { has @.test }; my $x = new Foo; $x.test = (1,2,3); $x.foo;

[21:34] <evalbot6> Error: No compatible subroutine found: "&foo" 

[21:34] <eric256> ?eval class Foo { has @.test }; my $x = new Foo; $x.test = (1,2,3); $x.test;

[21:34] <evalbot6> [1, 2, 3] 

[21:34] <eric256> ?eval class Foo { has @.test }; my $x = new Foo; $x.test = (1,2,3); shift; $x.test; $x.test;

[21:34] <evalbot6> Error:  unexpected ";" expecting term 

[21:34] <eric256> ?eval class Foo { has @.test }; my $x = new Foo; $x.test = (1,2,3); shift $x.test; $x.test;

[21:34] <evalbot6> [2, 3] 

[21:34] <eric256> or not

[21:37] <svnbot6> r5768, Stevan++ | org.perl6.metamodel - (Java version)

[21:37] <svnbot6> r5768, Stevan++ | * MetaClass now supports superclasses and can calculate MRO

[21:37] <svnbot6> r5768, Stevan++ |     - added test for MRO calcs

[21:38] <eric256> hmmm.  definitly works in tests... must be missing something

[21:40] <eric256> i think i'm going crazy now.

[21:43] <svnbot6> r5769, eric256++ | wizard.p6 - debug info added,bug shifting off of an Objects property

[21:45] <eric256> can someone run the updated wizard.p6 for me? and confirm that the debug output is the same all three times... i've gotta be missing something obvious but this is all right there in the middle of a method....

[21:46] <eric256> ?eval class Foo { has @.test }; my $x = new Foo; $x.test = [1,2,3]; shift $x.test; $x.test;

[21:46] <evalbot6> [2, 3] 

[21:46] <eric256> hmm thoguth maybe some () versus [ ] thing.....i feel all alone here. ;)

[21:47] <pasteling> "iblech" at 80.81.17.170 pasted "eric256: Debug output" (15 lines, 1.1K) at http://sial.org/pbot/11929

[21:47] <eric256> well its not just me

[21:47] <eric256> see in that output how @.monsters stayed the same even after shift @.monsters ?

[21:48] <eric256> i still havn't managed to recreate it with smaller code though, so something is going on

[21:50] <eric256> thanks for running that BTW ;)

[21:50] <svnbot6> r5770, iblech++ | * Usual svn props.

[21:50] <svnbot6> r5770, iblech++ | * unEVALs in t/subroutines/ and t/var/type.t.

[21:50] <svnbot6> r5770, iblech++ | * PIL2JS -- Initial support for always-existant $_.

[22:03] <eric256> hmm. turns out its an issue with the constructor

[22:07] <eric256> ?eval class Foo { has @.test }; my $x = Foo.new( :test(1));  shift $x.test; $x.test;

[22:07] <evalbot6> \1 

[22:07] <eric256> ?eval class Foo { has @.test }; my $x = Foo.new( ); push $x.test, 1; shift $x.test; $x.test;

[22:07] <evalbot6> [] 

[22:24] <svnbot6> r5771, iblech++ | Many more unEVALs in statements/ and syntax/.

[22:24] <svnbot6> r5772, eric256++ | * added tests for bug with OO contructor + list attributes

[22:24] <svnbot6> r5773, eric256++ | * fixed test count in attribute_list.t"

[22:30] <svnbot6> r5774, iblech++ | * Usual svn props.

[22:30] <svnbot6> r5774, iblech++ | * One more unEVAL: t/general/atoms.t

[22:30] <svnbot6> r5774, iblech++ | * PIL2JS: &last, &next, and &redo work in while and until loops now, too.

[22:30] <svnbot6> r5774, iblech++ | * PIL2JS: Implemented &next (but not yet working for &for, only for the other

[22:30] <svnbot6> r5774, iblech++ |   loop constructs).

[22:31] <eric256> eval is evil

[22:32] <iblech> Not generally, but many tests don't have a chance of passing in PIL2JS as PIL2JS doesn't have &eval

[22:32] <iblech> And eval(...)s slow down execution

[22:33] <eric256> are those tests that are fixed now? or do you just have a better way around evals?

[22:35] <iblech> Right, most tests have long been fixed.

[22:35] <iblech> (And the unEVAL was simply forgotten)

[22:38] <eric256> ahh

[22:39] <wolverian> there's a Java backend now too?

[22:41] <iblech> wolverian: No, only the beginning of a port of Perl6-MetaModel to Java

[22:42] <iblech> Hm... PIL2JS passes more tests I thought it would :)

[22:42] <wolverian> well, that's still something! 

[22:42] * iblech uploads the testsuite compiled to JS again

[22:50] <iblech> http://m19s28.vlinux.de/iblech/stuff/not_perm/pil2js-demo/t/

[22:51] <iblech> Ok, need to sleep now :)

[22:51] <iblech> Night all :)

[23:13] <QtPlatypus> Just to confirm, At the moment there is no way to get at a code's PIL from withing Pugs.  And there is no function corrasponding to "show" from src/AST/Internals.hs

[23:14] <QtPlatypus> If that understanding is incorrect, please correct.

[23:27] <Excalibor> greetings

[23:40] <stevan> wolverian: the Java backend is an experiment

[23:41] <stevan> in porting a highly flexible object model to a highly restrictive runtime

[23:41] <stevan> it might also come in handy with the JS backend since JS and Java can (in some cases) talk to one another easily

[23:42] <stevan> QtPlatypus: I think you can do print as PIL

[23:43] <stevan> QtPlatypus: IIRC, that is how the backends work currently, but calling Pugs to parse the P6 and export PIL, which they then parse and run in the runtime

[23:46] *** Maddingue__ is now known as Maddingue

