[00:00] <Ovid> Crap.  My HTML::Entities still fails.

[00:16] <stevan> Ovid many of those are force TODO so they dont really pass

[00:16] <stevan> the tests are a few weeks (even months in some places) ahead of development

[00:17] <Ovid> Makes sense.  I still wish I could figure out why HTML::Entities fails, though.  When I have time, I'll try to produce a minimal test case for checking somewhere.

[00:19] <stevan> Ovid: After I finish all the test stuff and changelog I will take a look (assuming I dont just pass out)

[00:19] <Ovid> Heh :)

[00:19] <Ovid> I wish I could get away with that.  Unfortunately, work beckons.

[00:19] <Ovid> Good work, though, so I can't complain.

[00:20] <stevan> I am in between projects,.. so I got tuits

[00:20] <Ovid> Wow.  It's really pouring down outside.  I love it!

[00:20] <stevan> but soon my next project starts to my commit level will go down

[00:22] <Ovid> Well, I want to devote my weekends to this, but the guy who's working on the new parser for AI::Prolog thinks he might have it done soon, so I'll need to get that polished.

[00:23] <stevan> BTW - very cool stuff with that AI::Prolog

[00:24] <stevan> I have always been a fan of Prolog

[00:24] <Ovid> Thank you.  After I get it a bit more stable, I want to port it Parrot.

[00:24] <stevan> and Erlang, which looks a lot like Prolog and whose first prototype was actually in prolog

[00:24] <stevan> Ovid: that would be very cool

[00:24] <Ovid> I would prefer to do a Warren Abstract Machine, but I don't know them very well.  A first pass with an engine I know would be better.

[00:24] <stevan> I have high hopes for Parrot,.. it is all the potential I saw in the JVM but which never happened

[00:25] <Ovid> Actually, I'd be rather interested in Mercury.  I've heard good things about it.

[00:25] <stevan> I have read a bit about WAMs, but that goes over my head pretty quickly

[00:25] <stevan> I think I have heard of that

[00:25] <stevan> you know shapr is a language fetishist too

[00:25] <stevan> he sent me a few links to some really weird stuff

[00:26] <stevan> not Brainf*ck weird either,.. PhD thesis weird

[00:26] <Ovid> Have you read http://www.vanx.org/archive/wam/wam.html?  It's  a tutorial reconstruction of the WAM.  It makes more sense, though, if you're familiar with Prolog and how it's backtracking works (understanding choicepoints and all that)

[00:27] * stevan follows the link

[00:28] <mugwump> Oz is based on a WAM AIUI

[00:28] <stevan> hmm, these are the kind of PDFs which make me miss access to corporate laser printers

[00:29] <Ovid> Really?

[00:29] <Ovid> (I mean about Oz)

[00:29] <mugwump> so buy one second hand, they're throwing them away these days

[00:29] <stevan> mugwump: not a bad idea actually :)

[00:31] <mugwump> I was tempted by a ~$400 new colour HP laser with JetDirect

[00:32] <crysflame> mmm, neat

[00:32] <crysflame> you'll bleed toner bills for life

[00:32] <mugwump> Then I remembered that HP is an ink company that sells PCs and servers on the side

[00:32] <mugwump> :)

[01:13] <jabbot> pugs - 1829 - First pass at cookbook entry for interpo

[01:13] <jabbot> pugs - 1828 - First pass at reversing chars and words

[01:23] <jabbot> pugs - 1830 - First pass at cookbook entry for indenti

[01:33] <hlen> maybe they should create a perl6 section in perlmonks

[01:33] <jabbot> pugs - 1831 - more force-TODO and test cleanup

[01:33] <mugwump> dear god no!

[01:43] <jabbot> pugs - 1832 - First pass at cookbook entry for trimmin

[01:51] <buu> Is there anyway to use the current pugs to limit execution time and such?

[02:37] *** metaperl_ is now known as metaperl

[02:45] <ninereasons> maybe I should understand your question, buu; but I don't 

[02:46] <buu> I wish to embed a language

[02:46] <buu> I'd love to embed perl6

[02:46] <buu> But I need to control how long the program executes, system calls, memory, etc

[02:47] <ninereasons> hm.. i might be mistaken, buu; but I don't think that there is a way to do that yet.

[02:48] <ninereasons> you might look through the test suite though, and see if the features you need are being tested, and are succeeding.

[02:48] <buu> =[

[02:49] <buu> I don't think this is part of the test suite

[02:50] <ninereasons> should it be, do you think?

[02:50] <buu> er

[02:50] <buu> Obviously *I* think it should be, but I'm not sure anyone else does

[02:51] <ninereasons> I'm not sure that what anybody else thinks really matters .  If you're able to write appropriate tests, then it seems to me that you should do so.

[02:51] <buu> Er

[02:51] <buu> I don't think the features I want are even planned, how would I write tests for them?

[02:52] <ninereasons> you have a point there, if that's the case :)

[02:52] <buu> I don't think anyone has contemplated it yet

[02:53] <buu> It's more of an interpreter issue than a language issue

[02:53] <ninereasons> good luck with it :)

[02:53] <buu> ...

[02:54] <buu> Thanks

[03:00] <autrijus> hi lambdacamels

[03:01] <autrijus> buu: what's your host language?

[03:01] <buu> autrijus: Probably perl

[03:02] <buu> Or possibly pike

[03:02] <buu> Or pathenthetically python!

[03:02] <buu> Hell, I might do it in p6 if it's advanced enough yet

[03:04] * buu pokes autrijus 

[03:08] <autrijus> hrmph.

[03:08] <autrijus> buu: your best bet is to help us working on pugscc --parrot

[03:08] <buu> I demand you drop everything you're doing and solve my problem right now!

[03:08] <buu> Er, what is pugscc?

[03:08] <autrijus> then you get to use embed parrot for free

[03:08] <autrijus> and just feed it IMC.

[03:08] <buu> And can parrot do those tricks?

[03:08] <autrijus> yes.

[03:08] <buu> Really?!

[03:08] <buu> Where is that documented

[03:09] <autrijus> while GHC also can, embedding GHC is trickier.

[03:09] <buu> How about pugs

[03:09] <autrijus> pugs is just a compiler.

[03:10] <buu> Er, what executes the compiled code?

[03:10] <autrijus> you don't hear "embed gcc" that often :)

[03:10] <autrijus> either GHC, or Parrot.

[03:10] <autrijus> pugscc has different backends.

[03:10] <autrijus> see mod_parrot for concrete example

[03:10] <buu> Freaky.

[03:11] <autrijus> author of mod_parrot says he'd be working on mod_pugs.

[03:11] <autrijus> which seems to be exactly what you want.

[03:11] <autrijus> http://www.parrotcode.org/docs/embed.html # embedding parrot

[03:11] <buu> hrm

[03:11] <buu> Sounds keen.

[03:11] <autrijus> http://www.smashing.org/mod_parrot/ # mod_parrot

[03:13] <buu> How far along is pugscc?

[03:17] <mugwump> mod_segfault

[03:18] <autrijus> buu: well it can compile mandelbrot :)

[03:18] <autrijus> but needs more work.

[03:20] <buu> heh

[03:21] <buu> Well

[03:21] <buu> I'm reading embed parrot and such, I don't really see how to do what I want

[03:22] <autrijus> you want pdd18

[03:22] <autrijus> # http://dev.perl.org/perl6/pdd/pdd18_security.html

[03:22] <autrijus> also see dan's recent posts

[03:24] <buu> Where?

[03:26] <autrijus> good question. I can't find it anymore.

[03:27] <autrijus> ask around? I know Dan is still continuing the design for quota

[03:27] <autrijus> <- not really a parrot person

[03:27] <autrijus> trying to be, but not quite there

[03:27] <stevan> autrijus: hello

[03:28] <autrijus> hi stevan!

[03:28] <stevan> the tests have been cleaned

[03:28] <stevan> although I see a few that need my attention

[03:28] <buu> So eh, it's not implemented yet?

[03:29] <autrijus> buu: I'm sure it's not implemented in full

[03:29] <autrijus> I don't know which hooks are already in place.

[03:29] <buu> hrm

[03:32] <autrijus> stevan: I'm trying to kill the mutual recursion now

[03:32] <autrijus> seems GHC goes bonkers over it

[03:32] <stevan> autrijus: ok, I am cleaning a few more tests that showed up

[03:33] <stevan> (I just did a fresh 'make' and 'make test'

[03:33] <autrijus> cool. and I reasoned yesterday that the new binding code for slurpy array is likely to be broken

[03:33] <autrijus> also normal scalar bindings may also be broken

[03:33] <autrijus> it seemed to assume "is copy" by default

[03:33] <autrijus> it's easy to fix, fortunately

[03:33] <autrijus> so let me tackle this mut.rec. first

[03:33] <stevan> ok

[03:43] <stevan> is openfoundry down?

[03:44] <autrijus> no... dns however looks weird

[03:46] <autrijus> please add this entry

[03:46] <autrijus> 140.109.17.109          rt.openfoundry.org

[03:46] <autrijus> I'm looking for fix

[03:53] <autrijus> or rather

[03:53] <autrijus> 140.109.17.109          rt.openfoundry.org svn.openfoundry.org

[03:53] <stevan> I cant add DNS entries

[03:53] <stevan> I have no access to that stuff actually

[03:54] <autrijus> that's a real problem then

[03:54] <stevan> I am running another 'make test' to make sure I got everything

[03:54] <autrijus> sec.

[04:01] <autrijus> svn switch --relocate http://svn.openfoundry.org/ http://foundry.autrijus.org/

[04:01] <autrijus> that should do.

[04:03] <stevan> not working

[04:03] <autrijus> what's the error msg?

[04:03] <stevan> svn: PROPFIND request failed on '/'

[04:03] <stevan> svn: PROPFIND of '/': 302 Found (http://foundry.autrijus.org)

[04:08] <autrijus> svn switch --relocate http://svn.openfoundry.org/ http://pugs.autrijus.org/

[04:08] <autrijus> this should now work.

[04:08] <stevan> svn: PROPFIND request failed on '/pugs'

[04:08] <stevan> svn: PROPFIND of '/pugs': Could not resolve hostname `pugs.autrijus.org': No address associated with nodename (http://pugs.autrijus.org)

[04:09] <stevan> I can just send you patches

[04:09] <buu> So sad.

[04:11] <autrijus> try final time?

[04:11] <autrijus> svn switch --relocate http://svn.openfoundry.org/ http://openfoundry.dyndns.org/

[04:12] <stevan> worked :)

[04:12] <autrijus> =) lunch &

[04:18] <luqui> what happened to svn.openfoundry.org?

[04:18] <stevan> luqui: DNS issues

[04:18] <stevan> try this:

[04:18] <stevan> svn switch --relocate http://svn.openfoundry.org/ http://openfoundry.dyndns.org/

[04:18] <luqui> cool

[04:18] <stevan> :)

[04:20] <luqui> it's been awhile... what have you guys done...

[04:20] <luqui> er, should I say, what haven't you done :-)

[04:20] <stevan> luqui: oh nothing

[04:20] <luqui> got rules yet?

[04:20] <stevan> the ChangeLog is fairly up to day

[04:20] <stevan> rx:perl5 only

[04:21] <luqui> awww

[04:21] <stevan> limited too

[04:21] <buu> Hmph

[04:21] <stevan> we got CGI.pm :P

[04:21] <stevan> sockets, threads

[04:21] <buu> Any one have an idea how much of parrot-security has been implemented

[04:21] <Ovid> We *sort of* got CGI.pm.

[04:21] <stevan> nope, you could try asking on #parrot though

[04:21] <stevan> Ovid is much pickier about his CGI than I am :)

[04:22] <Khisanth> is this CGI.pm better than the old one? :)

[04:22] <stevan> Khisanth: could it be any worse :P

[04:22] <Khisanth> stevan: YEeES

[04:22] <Khisanth> things can always be worse

[04:23] <Alias_> Yeah, CGI could be even LARGER 

[04:23] <stevan> Khisanth: it is not OO, but I tried to be cleaner about things

[04:23] <stevan> and Ovid is working on it now (which is a very good thing)

[04:23] <luqui> I think once grammar munging is available, we'll very soon see PHPerl

[04:23] <Ovid> It will be.  My thought is that, amongst other things, HTML generating functions will be handled separately and we won't have the odd mixing of sub calls and methods.

[04:23] <luqui> (that is, inside-out perl)

[04:23] <Khisanth> bleh

[04:23] <buu> Ovid: That'd be nice.

[04:23] <stevan> Alias_: I will make a special one /just/ for you :)

[04:24] <Alias_> oh joy

[04:24] <Ovid> I've also been working on HTML::Entities, but for some reason, Pugs stops parsing my file partway through.  It doesn't throw any errors until I try to access the things that it failed to parse.

[04:24] <stevan> Ovid: yes,.. no HTML,.. templates are much smarter anyway

[04:24] <Alias_> Can you port Matt Wright's Formail as well?

[04:24] <buu> Where is #parrot?

[04:24] <Ovid> Sure!  I can see how many of his security holes I can stuff into one script!

[04:24] <stevan> Alias_: I thought you were starting the perl6-MSA effort :)

[04:26] <Ovid> I should add that the current modules being implemented in ext/ are just to test Pugs.  At least for the stuff I've seen, I hope no one intends that they be considered "real".

[04:27] <stevan> I think all of Pugs is still "use at your own risk" status :)

[04:28] <ingy> hola kids

[04:28] <stevan> hey ingy 

[04:28] <luqui> hi ingy

[04:28] <Ovid> Hi ingy.

[04:28] <luqui> buu: irc.perl.org

[04:28] <Ovid> And hi luqui!

[04:28] <ingy> hey luqui, nice to be seeing you in Toronto

[04:29] <ingy> hi stevan, Ovid 

[04:29] <luqui> but not in portland :-(

[04:29] <ingy> when?

[04:29] <Ovid> You can't make it this time?  That's too bad :(

[04:29] <ingy> ah, luqui is not going...

[04:29] <ingy> I thought you meant I was not going

[04:29] <luqui> yeah, didn't get a talk accepted

[04:30] <luqui> Allison is trying to get me a vip pass, but haven't heard anything yet

[04:30] * ingy thinks it is funny that she is the one giving the pugs talk

[04:31] <ingy> oh hell luqui, if that's all you need I wouldn't sweat it

[04:31] <Ovid> You could always sign up as a volunteer.  Yeah, you miss a couple of sessions, but you still get in free.

[04:31] <ingy> you're definitely high enough on the Perl food chain I would think

[04:32] <luqui> :-)

[04:32] <luqui> brb

[04:32] <Ovid> stevan, you there?

[04:32] <stevan> Ovid: yup

[04:32] <Ovid> I'm reducing HTML::Entities to a minimal test case right now so we can figure out why it's not parsing properly.

[04:33] <stevan> make sure to try the latest build too

[04:34] <stevan> almost all tests will now pass 

[04:34] <Ovid> Sure.  As soon as I can check it out :)

[04:34] <stevan> Failed 6/203 test scripts, 97.04% okay. 44/4236 subtests failed, 98.96% okay. to be exact

[04:34] <Ovid> I'm on 6.0.14

[04:34] <stevan> svn switch --relocate http://svn.openfoundry.org/ http://openfoundry.dyndns.org/

[04:35] <Ovid> Updating now!

[04:36] <luqui> b

[04:38] <stevan> wow,.. a lot of movement on the cookbook 

[04:38] <stevan> nice

[04:38] <luqui> where are we doing this?

[04:38] <ingy> luqui: no comments on S26 yet. have you heard any mumblings?

[04:38] <stevan> luqui: doing what? the cookbook? examples/cookbook/*

[04:39] <luqui> oh, yeah, I didn't read that.  I would have if Aaron did it, but I trusted you, so I was lazy about it

[04:39] <Ovid> Well, I was whoring the cookbook out on Perlmonks.

[04:39] <ingy> I guess I'll just have to arm wrestle Larry at the hackathon

[04:39] <luqui> do we require that the cookbook examples run?

[04:39] <Ovid> no

[04:39] <stevan> luqui: nope (but it does help)

[04:39] <luqui> I'll look it over one of these days

[04:40] <jabbot> pugs - 1833 - even more test cleaning and force-TODO-i

[04:40] <jabbot> pugs - 1834 - * add unicode include headers to avoid w

[04:40] <jabbot> pugs - 1835 - * remove warnings from hsplugins probing

[04:40] <jabbot> pugs - 1836 - More progress on S28draft.pod

[04:40] <jabbot> pugs - 1837 - the last of the force-TODO and test clea

[04:40] * ingy goes off to lift weights

[04:40] <stevan> ingy: no CPAN drinking game?

[04:40] <luqui> You should arm wrestle gloria

[04:40] <ingy> stevan: niiice

[04:40] <ingy> stevan: we played a CPAN drinking game in Taiwan

[04:41] <ingy> autrijus won actually

[04:41] <stevan> ingy: yes I have heard,.. although no one has detailed the rules of the game yet

[04:41] <ingy> stevan: I'll fill you in when we next meet up

[04:42] <stevan> ingy: sounds good

[04:42] <ingy> hmm... Maybe I'll write it up as S27!!

[04:42] <ingy> The Bible should definitely cover drinking

[04:43] <ingy> did pugs get released this week?

[04:43] <stevan> ingy: not yet,.. we are getting 6.2.0 ready right now

[04:43] <ingy> maybe I'll get S27 in on time then

[04:44] <ingy> but first I must dance!

[04:44] <ingy> swing dancy dancy &

[04:49] <Ovid> stevan:  I have HTML::Entities down to an 8 line program that fails to parse properly.

[04:49] <stevan> Ovid: paste it to me

[04:49] <stevan> perlbot nopaste

[04:49] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[04:49] <Ovid> Actually, just got it shorter.  Hold on.

[04:49] <jabbot> pugs - 1838 - Add $string.chop and fix a string delim 

[04:51] <pasteling> "Ovid" at 66.167.139.35 pasted "minimal test case for HTML::Entities failure" (36 lines, 1.1K) at http://sial.org/pbot/9253

[04:52] <stevan> Ovid: bare returns like that dont work

[04:53] <luqui> Do we have a place to put perl-in-perl implementations of perl builtins?

[04:53] <Ovid> stevan:  doesn't matter.  Have 'em return anything, even "return 'foo'" and you'll get the same error.  However, if you delete that for loop, it finds the sub.

[04:54] <Ovid> Something about the for loop is killing it.

[04:54] <luqui> pugs -e 'sub foo () { say "bar" }  module Baz; foo()'  # prints 'bar'

[04:55] <luqui> are namespaces implemented, or are they just a noop?

[04:58] <stevan> Ovid: I got it to compile

[04:58] <stevan> pasting in one second

[04:58] <Ovid> Yeah, it compiles fine, but the test fails saying it can't find the subroutine.

[04:58] <Ovid> OK.

[04:59] <pasteling> "stevan" at 67.186.136.119 pasted "HETest working" (43 lines, 798B) at http://sial.org/pbot/9254

[05:02] <Ovid> stevan, I think I just found the problem.  $char_to_entity is never declared, but Pugs is silently ignoring this.

[05:04] <Ovid> Er, there's a deeper problem.  I through that in my original HTML::Entities and I get the same error :-/

[05:09] <teamjet> i am really embarassed, looking for spoon-feeding here

[05:09] <teamjet> perl 6 out yet?

[05:09] <Ovid> No, not yet.  We're working on a prototype named pugs.

[05:09] <jabbot> pugs - 1839 - some ChangeLog additions

[05:10] <teamjet> thanks

[05:10] <Ovid> No problem.

[05:16] <luqui> ack, how do I flatten an array in pugs!

[05:16] <luqui> my $a = [1,2,3]; my @b = *@a;  say +@b;   # 1

[05:16] <luqui> er, *$a

[05:17] <Ovid> Generally when I get stuck like that I grep through the tests to see if there's something compatible.

[05:17] <luqui> doing that now

[05:19] <jabbot> pugs - 1840 - Continuing work on S28draft.pod

[05:24] <Ovid> Woo hoo!  I go the the test in HTML::Entities to pass.  Finally :)

[05:25] <stevan> ok,.. I am off to sleep 

[05:26] <Ovid> Night stevan.  Thanks for all of your help.

[05:26] <stevan> autrijus: I updated the changelog, but you might want to add more

[05:26] <stevan> Ovid: your welcome ... did the whole thing compile? or just the mini version?

[05:26] <theorbtwo> Morning, all.

[05:26] <Ovid> I have a much larger mini-version.

[05:27] <stevan> autrijus: and any tests which still die I thought you might be able to fix, otherwise just add them to force_todo

[05:27] <stevan> Ovid: excellent

[05:27] <stevan> btw - t/force_todo is so much nicer than manual todo/un-todo

[05:27] <stevan> morning theorbtwo 

[05:28] <theorbtwo> Is the plugins detection killing anybody now?

[05:28] <stevan> ok, going for real, g'nite all see you in about 7 hours

[05:28] <theorbtwo> g'night, stevan.

[05:29] <gaal> morning all. what's that i hear about openfoundry down?

[05:29] <theorbtwo> Mornin, gaal.  If you didn't see, BTW, evan linked to your LJ post.

[05:29] <gaal> i just made coffee, i didn't see *anything* yet :)

[05:30] <gaal> h

[05:30] <gaal> oh, that is

[05:31] <gaal> that evan, i like him :)

[05:31] <gaal> his later post in evan_tech, coming from him, sounds like an april fool's joke though :)

[05:33] <theorbtwo> Odd, I didn't notice that somehow.

[05:33] <gaal> insufficient coffee maybe?

[05:33] *** castaway_ is now known as castaway

[05:34] * gaal smokes 1840

[05:34] <theorbtwo> Insufficent tea, quite likely.

[05:35] <gaal> king crimson must have been lambdafolk. they have that line in their first album where they mention insufficient schemes.

[05:36] <gaal> beh, why is yaml_harness running rules/Disabled?

[05:39] <Khisanth> gaal: smoking 1840 packs of cigarette a day is a bit unhealthy isn't it? :)

[05:39] <gaal> who said it was cigarettes :)

[05:40] <Khisanth> smoking anything in that quantity has to be bad

[05:41] <gaal> we've reached the Victorian age if you think of r numbers as years AD.

[05:41] * Khisanth waits for 3000

[05:46] <theorbtwo> In the Year Two Thousand... </voice>

[05:47] <gaal> to2, i'm tweaking testgraph a wee bit, is it okay to always say 'type=text/css' in the LINK element?

[05:48] <theorbtwo> I'm not 100% sure.

[05:48] <gaal> oaky, so i won't.

[05:49] <theorbtwo> I didn't originally have it that way; it was suggested as a fix to some problem or another, but I don't remember what, or if it worked.

[05:49] <theorbtwo> I don't really see where it'd be a problem, though.

[05:49] <gaal> it was suggested to fix a problem with my webserver. it didn'

[05:49] <gaal> t fix it :)

[05:49] <jabbot> pugs - 1841 - A bit more work on S28draft.pod

[05:50] <gaal> i'm adding an option to embed the css file; the command line remains compatible with old usage.

[05:57] <dvergin__> Time for bed. S28draft.pod is tucked in for the night and my eyeballs are all a-twiggle. 'Night, all.

[06:10] <gaal> to2, which version of the cataloger is preferred now? jmm or the other one?

[06:10] <theorbtwo> The other one.

[06:10] <theorbtwo> jmm no longer exists.

[06:10] <gaal> ah, thanks

[06:10] <theorbtwo> (Because it got mv'd over the other one.)

[06:11] <gaal> (i guess i still have it around because of a leftover hack attempt created a conflict and svn was smart enough not to remove my local copy)

[06:14] <gaal> in that script, do you mean "cd .." instead of "ls .." ?

[06:15] <gaal> and, whoprovides pugs_svn_src?

[06:17] * theorbtwo wonders what gaal is talking about.

[06:18] <gaal> look at util/catalog_tests.pl:26

[06:19] <theorbtwo> Oh.  That's nothingmuch's code; I haven't looked at it much since he added that.

[06:19] <gaal> ah, sorry.

[06:19] <gaal> so do i need 'svn co' instead?

[06:19] <theorbtwo> I think he means cd .. ; svn co http://...

[06:19] <gaal> yeah

[06:19] <gaal> fixing

[06:20] <Ovid> Night all.

[06:23] * chady looks around and gets worried that he has a lot to learn now to keep up

[06:25] * luqui & bed

[06:40] <jabbot> pugs - 1842 - * type casting errors are now more descr

[06:43] <gaal> http://forum2.org/gaal/pugs/tests_winxp_msys.html and http://forum2.org/gaal/pugs/tests_linux.html - avec test xrefs

[06:46] <Ovid> Does anyone know how to get Unicode characters to show up on the Mac OS X terminal?

[06:49] <jabbot> pugs - 1843 - * downgrade Win32 failures to warnings.

[06:49] <jabbot> pugs - 1844 - * =<> now works again (sort of)

[06:49] <jabbot> pugs - 1845 - * Typeable fixes.

[06:49] <jabbot> pugs - 1846 - allow embedding CSS (for broken webserve

[06:49] <jabbot> pugs - 1847 - * "my $x = rhs" should impose rvalue con

[06:52] <autrijus> stevan: cool. I'm still working on test auditing and mutrec

[07:04] <Ovid> Does Pugs have issues with printing unicode characters?

[07:04] <autrijus> worksforme.

[07:05] <Ovid> Hmm ... I can't get HTML::Entities to quite work but printing debug output seems to be weird.

[07:05] <mj41> WinXP build failed: 

[07:05] <mj41> Compiling Compat           ( src/Compat.hs, src/Compat.o )

[07:05] <mj41> src/Compat.hs:55:13: Not in scope: `trace'

[07:05] <mj41> src/Compat.hs:81:0:

[07:05] <mj41>     Duplicate type signature:

[07:05] <mj41>       src/Compat.hs:81:0-37: statFileSize :: FilePath -> IO Integer

[07:05] <autrijus> where's the code? freepan?

[07:05] <mj41>       src/Compat.hs:105:0-37: statFileSize :: FilePath -> IO Integer

[07:06] <Ovid> autrijus:  was that question directed at me?

[07:06] <autrijus> yeah

[07:06] <autrijus> mj41: try r1848

[07:06] <Alias_> Ovid: You were mentioning reflection before. I forgot to mention that you may want to take a look at Class::Inspector

[07:07] <mj41> Compact.hs done

[07:08] <Ovid> It's nowhere right now.  I am trying to add HTML::Entities to ext/ and I have decode_entities partially working, but encode_entities is giving me fits.  I haven't checked anything in because I understood that ext/ was only for working code and I've no idea where to check it in at.

[07:08] <autrijus> ok. check in to ext/HTML-Entities/

[07:08] <autrijus> and I'll fix it right away, how about that :)

[07:09] <Ovid> OK :)

[07:09] <jabbot> pugs - 1848 - * fix Compat.hs on win32

[07:11] <Ovid> autrijus:  I just checked it in.

[07:13] <mj41> pugs -e "return 1;";

[07:13] <mj41> cannot return() outside a subroutine

[07:13] <mj41> Val (VList [VInt 1])

[07:13] <mj41> Is this ok?

[07:14] <autrijus> $ perl -e 'return 1'

[07:14] <autrijus> Can't return outside a subroutine at -e line 1.

[07:14] <autrijus> I guess it's okay.

[07:15] <autrijus> Ovid: wonderful. let me look

[07:15] <autrijus> I'll rename them.

[07:15] <Ovid> Thanks. I started working on that so I could check in CGI recipes to the cookbook :)

[07:15] <autrijus> to HTML-Entities

[07:15] <Ovid> Lots of stuff is commented out while I was trying to get it to work, so it looks sloppy.

[07:17] <Ovid> Regrettably, I need to hit the sack.  Night all!

[07:17] <mj41> my mistake, same as perl5, but what about

[07:17] <mj41> #conf.pl:

[07:17] <mj41> return { 1; }

[07:17] <mj41> pugs -e "require 'conf.pl'"

[07:17] <mj41> perl -e "require 'conf.pl'"

[07:17] <autrijus> Ovid: I see why.

[07:17] <autrijus> you need to use utf8 for your src code.

[07:17] <Ovid> Oh?

[07:18] <Ovid> Er, it wasn't?

[07:18] <autrijus> it was latin1.

[07:18] <Ovid> It looked fine to me.

[07:18] <autrijus> I fixed it.

[07:18] <autrijus> r1852

[07:18] <Ovid> Hmm ... how do I tell?

[07:18] <Aankhen``> Night Ovid.

[07:18] <autrijus> depends on what your editor is.

[07:18] <Aankhen``> (whenever you pop off)

[07:18] <autrijus> for vim, "set fenc=utf8"

[07:18] <Ovid> Thanks.

[07:19] <Ovid> I'm using vim 7.0 (alpha) for Mac OS X.  

[07:19] <Aankhen``> vim on Mac?  Oh, the irony... ;-)

[07:19] <jabbot> pugs - 1849 - First pass at horribly crippled HTML::En

[07:19] <jabbot> pugs - 1850 - * rename directories

[07:19] <jabbot> pugs - 1851 - * change File-Spec name change

[07:19] <jabbot> pugs - 1852 - * use uutf8 literals.

[07:19] <Ovid> Yeah, I've heard it before :)

[07:20] <Ovid> OK, now I'm going to bed and I really mean it!

[07:20] <chady> errm.. no ghc-6.4 for debian?

[07:21] <autrijus> chady: look at experimental

[07:29] <jabbot> pugs - 1853 - * and tests should use utf8 too

[07:30] <chady> autrijus: thanx

[07:32] <mj41> damn it

[07:32] <mj41> perl -e "my $c={ a=> 1}; print (keys %$c)"  # a

[07:32] <mj41> pugs -e "my $c=( a=> 1); say $c.keys"   # a

[07:32] <mj41> pugs -e "my $c={ a=> 1}; say $c.keys"  # 0

[07:32] <autrijus> mj41: fixing.

[07:32] <ingy> hola

[07:33] <autrijus> hey ingy

[07:33] <mj41> autrijus: thanks

[07:33] <ingy> hi autrijus 

[07:37] <Aankhen``> 􏿽xABautrijus􏿽xBB: The Perl 5 HTML::Entities appears to be encoded in Latin-1.

[07:39] <autrijus> Aankhen``: Perl 6 apparently is unicode baesd.

[07:39] <autrijus> based, even.

[07:39] <autrijus> it may be a day that we guess latin1.

[07:39] <autrijus> but I do not want it to be the default.

[07:40] <Aankhen``> Yeh, I was just pointing it out in case there were any problems stemming from that fact...

[07:40] <autrijus> ok :)

[07:40] <Aankhen``> Do multi subs work?

[07:40] <autrijus> they should/

[07:40] <autrijus> they should.

[07:40] <Aankhen``> Cool.

[07:41] <Aankhen``> encode_entities seems to be a good candidate.

[07:54] <Juerd> autrijus: Didn't Larry say latin1 bytes work as their utf8 characters?

[07:54] <Juerd> (I wonder *how*, though)

[07:57] <ingy> autrijus: where is the long module list in cpan?

[07:58] <rgs> ingy: http://www.cpan.org/modules/02packages.details.txt.gz ?

[07:58] <ingy> tanks

[08:01] <Aankhen``> Eek. GHC is 47 MB?

[08:01] * Aankhen`` watches his connection choke.

[08:01] <ingy> Perl6 got a BIG motor

[08:02] <Aankhen``> Heh.

[08:03] <autrijus> Juerd: larry may have said that. I don't see a way to do that cleanly.

[08:03] <autrijus> so I punted.

[08:06] <Aankhen``> 􏿽xABautrijus􏿽xBB: Are you still working on HTML::Entities?

[08:07] <autrijus> Aankhen``: yes, about to commit now

[08:07] <Aankhen``> Alright.

[08:07] * Aankhen`` waits with bated breath.

[08:08] <rindolf> Hi all!

[08:09] <autrijus> hi rindolf!

[08:09] <Aankhen``> Hiya.

[08:09] <rindolf> Hi autrijus 

[08:09] <rindolf> Hi Aankhen`` 

[08:09] <Aankhen``> What's shakin'?

[08:09] <rindolf> Aankhen``: I'm fine. I finished writing an article for Perl.com.

[08:09] <Aankhen``> Cool.

[08:09] <Aankhen``> Link?

[08:10] <autrijus> working HTML::Entities landed.

[08:10] <Aankhen``> Or is it yet to be submitted?

[08:10] <Khisanth> can the various unicode files be easily distinguished from each other?

[08:10] <autrijus> enjoy

[08:10] <rindolf> Aankhen``: I can /msg you a link.

[08:10] <autrijus> r1854

[08:10] <Aankhen``> Sure, that'd be great.

[08:10] <autrijus> rindolf: /metoo

[08:10] <rindolf> autrijus: OK

[08:10] <Aankhen``> Yey for autrijus!

[08:10] <autrijus> Khisanth: utf8 from utf16 etc, sure

[08:10] <autrijus> Khisanth: but a file can be both valid utf8 and valid latin1.

[08:10] <autrijus> and I don't want to trigger reparse.

[08:10] <autrijus> so that's a problem.

[08:11] <autrijus> if you have thunk of a clever algorithm, I'm all ears

[08:11] <Alias_> with or without prescanning? :)

[08:11] <Khisanth> what about endian? (I am was just looking at the menu in Mozilla)

[08:12] <autrijus> reparse = 2pass ;)

[08:12] <autrijus> Khisanth: endian ha sBOM

[08:12] <autrijus> has BOM

[08:12] <autrijus> so that's clear

[08:12] <gaal> a file is valid utf8 and valid latin1  iff it is ascii, no?

[08:12] <autrijus> no.

[08:13] <autrijus> any utf8 file is also valid latin1 file.

[08:13] <autrijus> actually, any file whatsoever is a valid latin1 file.

[08:13] <gaal> ah, yes of course

[08:13] <gaal> silly me. only it's nonsense latin1, likely

[08:13] <autrijus> aye.

[08:14] <autrijus> problem being, one cannot easily tell.

[08:15] <gaal> all you need it a test for nonsesicality then. though you still need anoth pass, to tell whether the utf8 interpretation yields nonsense too, for example if the author was being silly.

[08:15] <Khisanth> perhaps larry meant something else?

[08:15] <autrijus> gaal: 2pass is not acceptable for a streaming parser.

[08:15] <autrijus> I can lookahead finitely, but I don't want to do infinite lookahead.

[08:16] <autrijus> Khisanth: perhaps. there's no way to tell except ask :)

[08:16] <gaal> autrijus: neither is an AI-complete dependency :)

[08:16] <gaal> (i was saying that tongue in cheek :)

[08:17] <Alias_> autrijus: Can you reparse at all, or is it just expensive?

[08:17] <Alias_> My "is this a binary" stuff generally just pulls the first chunk ( 1/2/4k of the file and checks that )

[08:18] <gaal> is latin-1 some sort of preferred 8-bit encoding in perl6?

[08:18] <autrijus> Alias_: that means a 4k lookahead up front

[08:18] <autrijus> that is doable.

[08:18] <autrijus> it is perhaps the most sensible thing to do.

[08:18] <Alias_> autrijus: Which if it matches the page size is very fast

[08:19] <Alias_> As long as you _can_ reparse if you have to...?

[08:19] <Alias_> But I'd imagine that BEGIN would make that very hard

[08:19] <autrijus> yeah, especially BEGIN that affects encoding.

[08:19] <autrijus> use encoding()

[08:19] <rindolf> gaal: hi! It's me, Shlomi.

[08:19] <rindolf> gaal: what's up?

[08:19] <jabbot> pugs - 1854 - * require "" now works on utf8 files.

[08:20] <autrijus> gaal: I don't know. I hope not. I can cope if it is

[08:20] <Alias_> But really, can you ever actually know?

[08:20] <nothingmuch> small poll: who is the youngest person here? some friend is asking

[08:20] <gaal> hi Shlomi

[08:20] <nothingmuch> he's assuming me, i said lightstep

[08:20] <rindolf> nothingmuch: I'm 27.

[08:20] <Alias_> how old?

[08:20] <autrijus> definitely not me. I'm 23, I'm old ;)

[08:20] <rindolf> Hi nothingmuch 

[08:20] <nothingmuch> hola

[08:20] <rindolf> nothingmuch: what's up?

[08:21] * theorbtwo is back.

[08:21] <autrijus> hey theorbtwo.

[08:21] <rindolf> nothingmuch: how old are you?

[08:21] <nothingmuch> 19

[08:21] <autrijus> I'm currently fixing the infinite loop in array_ref

[08:21] <nothingmuch> lighstep is 18

[08:21] <nothingmuch> not much

[08:21] * theorbtwo is 24.

[08:21] <nothingmuch> or maybe even 17

[08:21] * gaal is 64

[08:22] <autrijus> mmm base 7?

[08:22] <gaal> j/k

[08:22] <rindolf> nothingmuch: I talked with a 16-year old Perl programmer yesterday

[08:22] <nothingmuch> rindolf: the person is looking for someone interested in p6

[08:22] <rindolf> nothingmuch: I see.

[08:22] <nothingmuch> if that's relevant, then i shoot

[08:22] <autrijus> next week I'll turn 24, which means I would have programmed perl for 10 years.

[08:22] <nothingmuch> it's for some interview

[08:22] <rindolf> nothingmuch: are you exempt from service? Or are you an Atuday?

[08:23] <nothingmuch> exempt is true

[08:23] <rindolf> autrijus: I've been programming Perl since 1996

[08:23] * nothingmuch feels younger all of a sudden

[08:23] <rindolf> nothingmuch: do you know your way around Module::Build?

[08:23] <nothingmuch> rindolf: i've hacked something into it once

[08:23] <nothingmuch> and i use it

[08:23] <nothingmuch> but i don't know it per se

[08:25] * theorbtwo feels much older.

[08:25] <rindolf> nothingmuch: do you know how I can install a custom file under /usr/share/xml/ ?

[08:25] <nothingmuch> nope... usually i resort to doing that in __DATA__

[08:25] <nothingmuch> this is because /usr/share might not be /usr/share

[08:26] <rindolf> nothingmuch: well, something along these lines.

[08:26] <nothingmuch> i'd put it under the same libpath you put your .pm in

[08:26] <nothingmuch> for consistency

[08:26] <rindolf> OK.

[08:26] <nothingmuch> because the file can be looked up in perl

[08:27] <nothingmuch> and because you don't have to learn anything new =)

[08:27] <rindolf> Of course, I'm considering changing my strategy and writing a module with a function that will return the content I want to put it in the file.

[08:27] <nothingmuch> that's normally a better approach

[08:27] <nothingmuch> even if the function is just a thin wrapper for a file

[08:28] <rindolf> nothingmuch: OK.

[08:36] <castaway> hey there young people :)

[08:36] *** scw is now known as scv

[08:36] <nothingmuch> hola, old woman!

[08:36] *** scv is now known as scw

[08:36] <castaway> you young whippersnapper you :)

[08:37] * castaway wonders if shes the oldest here ,)

[08:37] <rindolf> castaway: how old are you? (if I may be prudent enough to ask)

[08:37] <castaway> 31 ,)

[08:37] <castaway> (ancient ,)

[08:38] <castaway> not that I feel this old.. 

[08:38] <rindolf> Is there anyone here older than 31?

[08:38] <nothingmuch> our search is in the other direction

[08:38] * castaway suspects chip may be..

[08:39] * theorbtwo is Sparticus!

[08:39] <rindolf> Chip Salzberg is here?

[08:39] <nothingmuch> yes, he is the parrot lead architecht

[08:39] <nothingmuch> tect

[08:39] <castaway> occasionally

[08:43] <castaway> hmm, Chip: Back in 1988, I wanted to use Perl 2.0 on a .. 

[08:44] * rgs is 30

[08:44] <rgs> since several years

[08:44] <rindolf> castaway: perl 2.0?

[08:44] <nothingmuch> damn, i was 3

[08:44] <rindolf> castaway: oh right Nineteen-_Eighty_-Eight.

[08:45] <rindolf> I was 11

[08:45] <castaway> right

[08:45] * theorbtwo was 8.

[08:45] * castaway was umm.. 15

[08:45] <nothingmuch> oh crap, you had to bee a teenager in the 80s?

[08:45] <nothingmuch> i'm so sorry!

[08:45] <castaway> so I'm betting he's got a few years on me

[08:45] <castaway> no reason to be, they were good :)

[08:46] <rindolf> castaway: what did you want to run Perl on?

[08:46] <castaway> No, that was Chip, not me, I was quoting

[08:46] <rindolf> castaway: I see.

[08:47] <castaway> but for the record, it says: Xenix/286 

[08:47] <castaway> http://www.foo.be/docs/tpj/issues/vol2_4/tpj0204-0004.html

[08:47] <rindolf> Xenix... %-)

[08:47] <rindolf> Xenis was a single-user UNIX.

[08:51] <castaway> SEE still running, nm?

[08:51] * castaway attacked it yesterday

[08:51] <nothingmuch> should be

[08:51] <nothingmuch> i can access it

[08:52] <castaway> nifty

[08:52] <castaway> its getting as far as sending me doc lists.. just need to parse them :)

[08:53] <nothingmuch> all from seemacs?

[08:56] <theorbtwo> She's dealing with the lunch-guy now, I think.

[08:56] <theorbtwo> Sounds like all from seemacs.

[08:58] <castaway> yes (back)

[08:58] <castaway> (from 5 floors down)

[08:58] <autrijus> $a = 5; *$a

[08:58] <autrijus> is that an error or just (5) ?

[08:58] <castaway> yes from seemacs.. ie it takes my connection, thinks Im another SEE instance, and offers me a doclist.. :)

[09:00] <rindolf> What's seemacs?

[09:00] <theorbtwo> http://emacswiki.org/wiki/SubEthaEmacs

[09:01] <castaway> An attempt to implement SubEthaEdit type multi user editing, into emacs

[09:02] <theorbtwo> Not just SEE-type, but wire-compatible with SEE.

[09:02] <castaway> umm, right

[09:03] * castaway should update that page

[09:07] <autrijus> infinite cyclic structures implemented.

[09:07] <nothingmuch> autrijus++

[09:07] <rindolf> perlbot top 20 karma

[09:07] <perlbot> The top 20 karma entries: C: 77, autrijus: 71, nothingmuch: 48, stevan: 46, ~brad2901: 29, theorbtwo: 28, ingy: 28, gaal: 21, $i: 20, iblech: 16, beth: 16, Darren_Duncan: 14, jagerman: 14, ~wegstar: 13, (: 13, shapr: 12, Yaakov: 12, Somni: 12, Corion: 11, Juerd: 10

[09:07] <autrijus> my $a = [0]; $a[0] = $a;

[09:08] <nothingmuch> $i =)

[09:09] * nothingmuch whines about redhat and minimizes IRC again

[09:09] * Khisanth wonders what is (:++

[09:09] <castaway> an odd smiley?

[09:09] <Khisanth> or wait it's (++

[09:09] <theorbtwo> Hm, trying to say $a, say $a.perl, or say +$a hangs.

[09:10] <Khisanth> .perl?

[09:10] <theorbtwo> Think Data::Dumper.

[09:11] <Khisanth> oh

[09:11] <theorbtwo> (I'm not sure if the first two hanging is OK, but the last should just return 1, no?)

[09:12] <shapr> whoa, I got 12

[09:12] * shapr boings happily

[09:13] <theorbtwo> Allo, shapr.

[09:14] * castaway ruffles shapr

[09:14] <shapr> allo!

[09:14] * shapr looks like a nice set of curtains with ruffles

[09:14] <castaway> *g*

[09:14] <castaway> hey there bouncy

[09:14] * castaway dubs shapr "tigger"

[09:15] <shapr> heh

[09:17] * gaal goes "oo"

[09:19] <jabbot> pugs - 1855 - * saner context casting; infinite cyclic

[09:20] <autrijus> my $array_ref7 = [ $array_ref1[[2, 1, 0]] ];

[09:20] <autrijus> this tests looks very wrong...

[09:20] <kungfuftr> moo

[09:21] * shapr boings

[09:21] <castaway> woof!

[09:24] <autrijus> oh well. I'll change it to

[09:24] <autrijus> my $array_ref7 = [ $array_ref1[*[2, 1, 0]] ];

[09:29] <jabbot> pugs - 1856 - * more array_ref work; all tests now pas

[09:30] <ingy> autrijus: just commited S27

[09:30] <autrijus> ingy: woot

[09:33] * ingy looks forward to playing a few rounds at YAPC

[09:34] <castaway> playing?

[09:35] <ingy> castaway: read S27

[09:35] * castaway tries to absorb it my osmosis :)

[09:35] <autrijus> hmm

[09:35] <autrijus> my @lines7 = readline($in7);

[09:35] <autrijus> my @line8 = 1..Inf;

[09:35] <ingy> http://svn.openfoundry.org/pugs/docs/S27draft.pod

[09:35] <autrijus> somehow some people want the first to be strict

[09:35] <autrijus> and the second to be lazy

[09:36] <autrijus> talk about conflicting expectations.

[09:36] <castaway> :)

[09:36] * theorbtwo notes that a circle is not a polygon.

[09:36] <autrijus> it is a infinygon.

[09:36] <theorbtwo> I thought it was a unigon.

[09:36] <nothingmuch> autrijus: i think this can be done by doing laziness as a trait

[09:37] <nothingmuch> it's a trait of the value

[09:37] <nothingmuch> that affects how it's containers behaves

[09:37] <autrijus> I'll just mandate readline() is strict in list context for now.

[09:37] <nothingmuch> rvalues that occur from readline(...) etc, will be eager

[09:37] <nothingmuch> or strict (i think that's a conflicting term)

[09:38] <autrijus> eager == strict in here

[09:38] <nothingmuch> i.e., be eager where we suspect it should be done

[09:38] <nothingmuch> yes

[09:38] <nothingmuch> you are right

[09:38] <nothingmuch> be lazy only when we're sure it's safe

[09:38] <nothingmuch> and how are we sure it's safe? we know some primitives, like ... Inf are pure

[09:38] <nothingmuch> or some explicit constructs are lazy

[09:38] <nothingmuch> strictness is a contageous trait

[09:39] <nothingmuch> that affects everything it touches

[09:39] <nothingmuch> including delazifying things that are lazy, but are interacting with strict values now

[09:39] <jabbot> pugs - 1857 - S27 - Beer Drinking Hackers Must Read!

[09:39] <jabbot> pugs - 1858 - * add pair.keys and pair.values back.

[09:40] <castaway> ah, perl culture, of course

[09:42] <castaway> hmm, poor ole non-drinking hackers :)

[09:42] <theorbtwo> You can be the offical.

[09:42] <rindolf> ingy: hi.

[09:42] <castaway> hmm, ta :)

[09:42] <castaway> as long as I get tea :)

[09:43] <theorbtwo> And a copy of 02modules!

[09:43] <castaway> of course

[09:43] <elmex> wtf is S27 ??

[09:43] <elmex> i hate beer

[09:43] <castaway> the Perl Culture chapter

[09:43] <elmex> i only drink whiskey

[09:43] <castaway> sorry, it only says beer

[09:44] <ingy> elmex: add your own game :P

[09:44] <elmex> s/beer/alcohol/ s/alcohol/drugs/ s/drugs/drugs&sex/

[09:44] <Khisanth> caffeinated drinking game should be more productive ;)

[09:44] <ingy> but less fun

[09:45] <ingy> hi rindolf 

[09:45] <kungfuftr> vodka+redbull!

[09:45] <nothingmuch> redbull?! *choking sounds*

[09:45] <nothingmuch> too sweet!

[09:45] <ingy> tequilla+vodka+redbull!!

[09:45] <ingy> TVR baby!

[09:45] <nothingmuch> jagermeister (2-3 shots), then beer

[09:46] <nothingmuch> (as much as it takes to stay happy but not completely drunk)

[09:46] <ingy> nothingmuch: TVR is a traditional JAPH drink

[09:46] <nothingmuch> (normally 3-5 1/2 liters an evening)

[09:46] <elmex> scottisch whiskey!

[09:46] <castaway> Scotch

[09:46] <elmex> oh, thanks ;)

[09:46] * nothingmuch has never tried whiskey

[09:47] <elmex> scotch whiskey

[09:47] <elmex> nothingmuch: my fav. is glenfiddich ;)

[09:47] <nothingmuch> http://perlmonks.org/?node=edan

[09:47] <nothingmuch> there's a list there, maybe you count

[09:48] <rindolf> ingy: what's up? What is keeping you busy nowadays?

[09:49] <jabbot> pugs - 1859 - * readline() is now strict in list conte

[09:53] <ingy> rindolf: Perl

[09:54] <rindolf> ingy: what in Perl?

[09:55] <ingy> Kwiki, YAML, Perldoc, Kwid, FreePAN, Pugs to name a few

[09:55] <ingy> you know, top level namespaces stuff ;)

[09:56] <ingy> (except Pugs)

[09:56] <rindolf> Heh.

[09:56] <rindolf> Can FreePAN install Python modules?

[09:57] <ingy> http://wiki.freepan.org/index.cgi?FAQ

[09:57] <ingy> <-- bedtime

[09:57] <rindolf> Oh the horror! http://search.cpan.org/~ingy/Kwid-0.00_01/

[09:57] <rindolf> ingy: aren't you British?

[09:57] <ingy> no

[09:57] <rindolf> ingy: I see.

[09:57] <rindolf> ingy: good night.

[09:58] <ingy> nighty night

[09:58] <kungfuftr> anyone got much experience with perl and shift_jis encodings?

[09:58] <kungfuftr> (OT i know)

[09:58] <rindolf> kungfuftr: don't look at me.

[09:59] * rindolf is innocent (really)

[10:01] <autark-jp> kungfuftr: only experience I have is converting it to something sane ;)

[10:03] <kungfuftr> autark-jp: how bout converting the MS version of shift_jis to utf-8 and back again?

[10:03] <Aankhen``> Is builtins/undef supposed to fail a few tests?

[10:03] <autrijus> I'm going thru all tests now

[10:03] <autrijus> please bear with me

[10:03] <autark-jp> don't know if I have touched MS version, but sjis->utf8->sjis, yes.

[10:03] <Aankhen``> OK.

[10:04] <rindolf> Aankhen``: welcome back

[10:04] <Aankhen``> Just compiling Pugs for the first time, and the tests are taking longer than the compilation. :-P

[10:04] <Aankhen``> Thanks, rindolf. :-)

[10:04] <autrijus> that's usual. we have lots and lots of tests

[10:04] <Aankhen``> Yeah, I figured.

[10:04] <Aankhen``> Anyway.

[10:05] <Aankhen``> I'll wait till you're done with going through the tests.

[10:05] <ingy> autrijus: who played CPAN Drinking besides acme, autrijus, clkao, gugod, ingy, mugwump and obra?

[10:05] <autrijus> yeah

[10:05] <ingy> was hcchien there?

[10:06] <autrijus> no

[10:06] <ingy> whiteg was there but did not play

[10:06] <nothingmuch> perl golf should be mentioned, it being the basis for pugs development driving

[10:06] <ingy> nothingmuch: patches welcome!

[10:06] <rindolf> ingy: what's CPAN Drinking?

[10:06] <autrijus> s/patches/commits/

[10:06] * nothingmuch thinks outloud more than he should

[10:07] <ingy> rindolf: read S27

[10:07] * theorbtwo asks questions less then he should.

[10:07] <nothingmuch> rindolf: see s27 in docs

[10:07] <autrijus> rindolf: built pugs yet? :)

[10:08] <rindolf> There's a typo there.

[10:08] <rindolf> autrijus: no, not yet.

[10:09] <rindolf> EQUIPTMENT.

[10:09] <rindolf> twice

[10:09] <ingy> rindolf: fix it please

[10:09] <ingy> I must sleeeeep

[10:09] <theorbtwo> G'night, Ingy.

[10:09] <jabbot> pugs - 1860 - * join () now passes all tests; ().join(

[10:09] <jabbot> pugs - 1861 - Added history of CPAN drinking game

[10:10] <ingy> night theorbtwo &

[10:10] <autrijus> ingy: fixed.

[10:11] <rindolf> ingy: night

[10:15] <theorbtwo> Mornin, meta, cwest.

[10:15] <autrijus> hey.

[10:16] * kungfuftr reruns smoker

[10:19] <jabbot> pugs - 1862 - * fix typo, spotted by rindolf.

[10:20] * rindolf pets jabbot 

[10:20] <gaal> who was the official for the game?

[10:21] <autrijus> whiteg I think

[10:21] <nothingmuch> jabbot: seen stevan

[10:21] <jabbot> nothingmuch: stevan was seen on Tue Apr 12 05:28:46 2005 GMT

[10:21] <nothingmuch> goody goody gumdrops

[10:21] <nothingmuch> i'm forking off test graph

[10:21] <nothingmuch> i have some ideas:

[10:22] <nothingmuch> or maybe it doesn't, maybe it just builds a structure

[10:22] <nothingmuch> yaml harness should be TAP::YAML, or something along those lines

[10:22] <nothingmuch> the actual harness should use it

[10:22] <nothingmuch> it is an object that takes straps and builds yml

[10:22] <nothingmuch> and the yaml harness uses YAML and that to make a yml

[10:23] <nothingmuch> TAP::Visualize::$foo will be testgraph.pl

[10:23] <nothingmuch> what is $foo? i don't know what kind of graph that is

[10:23] <theorbtwo> TAP::Visualize::HTML ?

[10:23] <nothingmuch> there are many ways to use HTML to visualize it

[10:23] <theorbtwo> The name wasn't meant to invoke "graph" so much as "graphical".

[10:23] <nothingmuch> i'm not sure that is accurate enough

[10:24] <nothingmuch> i'll make a Tap::Visualize::$foo::Consolidating, which takes several YAMLs

[10:24] <nothingmuch> since consolidation is basically a display issue

[10:24] <nothingmuch> but it will use TAP::Consolidator, i think

[10:24] <nothingmuch> we could say it's Tap::Visualize::HTMLMatrix?

[10:25] <nothingmuch> i think that gives a better idea of what it does

[10:25] <theorbtwo> Works for me.

[10:25] <nothingmuch> okay

[10:26] <nothingmuch> so what should the TAP::DOM thing name be?

[10:27] <nothingmuch> TAP::Structure? that is a bit vague?

[10:28] * castaway is still puzzling what "TAP" might be :)

[10:28] <nothingmuch> http://search.cpan.org/perldoc?Test::Harness::TAP

[10:28] <theorbtwo> Test somethingoranother Protocol.

[10:28] <nothingmuch> test anything protocol ;-)

[10:28] <theorbtwo> Perl's interface between testing modules like Test::More and the test harness Test::Harness is a simple text-based format called TAP, the Test Anything Protocol. This is its story.

[10:29] <castaway> aha

[10:29] <jabbot> pugs - 1863 - * reverse.t now all passes.

[10:32] <theorbtwo> The modules should probably be under the Test::* namespace, rather then TAP::*.

[10:32] <nothingmuch> TAP::Model is the best name I can think of

[10:32] <nothingmuch> i don't want to imply they're used for testing...

[10:32] <nothingmuch> maybe Test::TAP::*?

[10:33] <theorbtwo> Why don't you want to imply that?

[10:33] <nothingmuch> because they aren't test modules per se

[10:33] <nothingmuch> they are reporting tools

[10:33] <nothingmuch> customarily Test::* gives you a set of assertions, or whatever

[10:33] <nothingmuch> it's very useful that you can get a dense result list

[10:33] <nothingmuch> and normally know exactly what a module does in the Test:: namespace

[10:34] <nothingmuch> i feel a bit ooky about polluting test results

[10:34] <nothingmuch> since I know it will bug me a little

[10:34] <nothingmuch> the Test::Harness mess (one for every dist that bundles it) is annoying enough already

[10:34] <nothingmuch> but either way, Test::TAP is good enough for me

[10:35] <Aankhen``> BBL.

[10:35] <nothingmuch> because you learn what TAP is once, and then you can filter quickly

[10:35] <nothingmuch> ciao Aankhen`` 

[10:37] <rindolf> Aankhen``: bye

[10:38] <nothingmuch> hola lightstep 

[10:38] <lightstep> is it just me, or does t/data_types/hash_ref.t contain an infinite loop?

[10:38] <rindolf> lightstep: hi

[10:38] <lightstep> y0

[10:39] <lightstep> pugs -e 'my $a; $a<a>=1'  <--  loops

[10:40] <nothingmuch> then that's a bug

[10:40] <nothingmuch> ping autrijus 

[10:47] * lightstep -> bong

[10:47] <nothingmuch> sshhh!

[10:47] <nothingmuch> you might be bugged

[10:47] <nothingmuch> with all this anarchy going about the feds are probably monitoring #perl6

[10:56] <autrijus> whew.

[10:56] <autrijus> just implemented mergesort.

[10:56] <autrijus> @a.sort:{$^b <=> $^a} works

[10:56] <autrijus> as doea

[10:56] <autrijus> sort {$^b <=> $^a} @a

[10:56] <nothingmuch> yay!

[10:57] <nothingmuch> this could be lazified

[10:57] <autrijus> provided you know that the closure does not cause side efects.

[10:57] <autrijus> maybe you want the side effects.

[10:57] <nothingmuch> as a heapsort

[10:57] <nothingmuch> i thought we don't care about all that stuff in p6 

[10:57] <nothingmuch> =P

[10:57] <autrijus> ;)

[10:58] <autrijus> you wish ;)

[10:58] <nothingmuch> no i wish otherwise

[10:58] <nothingmuch> but thats what i sort of seem to observe

[10:59] <nothingmuch> the general mantra is that somehow things will work out

[10:59] <jabbot> pugs - 1864 - * sort {} now works.

[11:00] <castaway> "things"?

[11:00] * castaway decides its lunchtime

[11:03] <pjcj> autrijus: you want to specify when and how often and with which parameters a sort sub will be called?

[11:03] <autrijus> not really.

[11:03] <nothingmuch> autrijus: what is your opinion on laziness?

[11:04] <autrijus> I think laziness is a good thing in general. :)

[11:04] <autrijus> is this vague enough?

[11:04] <pjcj> ah - good.  It sounded as though you did.

[11:04] <xern> damn, my remote machine is down..... cannot write code now....

[11:04] <nothingmuch> i love laziness

[11:04] <pjcj> laziness is still a virtue, even in Perl6, no?

[11:04] <nothingmuch> but i don't want to give up robustness

[11:04] <nothingmuch> i prefer being explicitly lazy

[11:11] <Aankhen``> Is t/data_types/array_ref supposed to take ages?

[11:12] <Aankhen``> It seems to be stuck at "ok 35/41".

[11:12] <autrijus> hm? it worksforme

[11:13] <Aankhen``> Strange.

[11:13] <Aankhen``> I'll try again in a few minutes.

[11:17] <rindolf> nothingmuch: Ran Eilam demands his book back.

[11:17] <nothingmuch> ran eilam can give me his mailing address like he promised 3-4 times

[11:18] <nothingmuch> and then i will gladly mail it

[11:18] <nothingmuch> but i'm not driving to TA on anti-isthemines

[11:18] <rindolf> nothingmuch: are anti-isthemines a kind of drugs?

[11:18] <nothingmuch> yes

[11:18] <nothingmuch> they repress a part of the immune system

[11:18] <castaway> histamines, no?

[11:18] <castaway> (for hayfever)

[11:18] <nothingmuch> could be, i have no clue, castaway 

[11:19] <nothingmuch> typically allergic people produce histamines for the wrong reasons

[11:19] <rindolf> nothingmuch: you can take a bus.

[11:19] <jabbot> pugs - 1865 - * empty scalar autovivification.

[11:19] <nothingmuch> rindolf: no, i can't, because if i get back from work, and then go, by the time i'm done i have no bus home

[11:20] <nothingmuch> please don't patronize me, i can think of this stuff myself

[11:20] <rindolf> nothingmuch: I see.

[11:20] <nothingmuch> anyway, i have dermatitis, which is like allergies in that histamines are produced wrongly, but the reasons for this symptom are different from allergies

[11:20] <Aankhen``> t/builtins/string/length went mad...

[11:21] * rindolf has prepared rice with lentils

[11:21] <Aankhen``> "Failed 36/15 tests, -140.00% okay"

[11:21] <nothingmuch> Aankhen``: Test::Harness is funny that way

[11:21] <nothingmuch> if the plan doesn't match reality in some way

[11:22] <Aankhen``> OK.

[11:22] <nothingmuch> run pugs t/builtins/string/length

[11:22] <nothingmuch> .t

[11:22] <nothingmuch> and fix the plan stuff

[11:22] <nothingmuch> and also make a bug report to Test::Harness about that

[11:22] <Aankhen``> t/data_types/array_ref is stuck on "ok 35/41" again.

[11:23] * Aankhen`` salutes!

[11:23] <Aankhen``> SIR YES SIR!

[11:23] <nothingmuch> double time

[11:23] <autrijus> it doesn't for me :-(

[11:23] <nothingmuch> ;-)

[11:23] <Aankhen``> Hrm.

[11:23] <Aankhen``> I'll fix the plan thingie first.

[11:23] <autrijus> did you "make optimized"?

[11:23] <autrijus> cool

[11:23] * nothingmuch believes in god, and believes that god believes in Aankhen`` 

[11:24] <Aankhen``> nmake, actually; Win32, VC++.

[11:24] <Aankhen``> No optimized though.

[11:25] * nothingmuch thinks his GC zone ideas are materializing very well, but doesn't have the time to impl

[11:29] <jabbot> pugs - 1866 - * hash() and pair() works as described i

[11:31] <Aankhen``> Whaaa?

[11:31] <Aankhen``> It's running 51 tests...

[11:31] <Aankhen``> Hrm.

[11:31] <Aankhen``> It's running each test three times.

[11:31] <Aankhen``> Inside the loop, atleast.

[11:32] * theorbtwo wonders why pugs -e 'require_haskell("/usr/src/SHA1/blib/arch/SHA1__0_0_1.o"); say &sha1' still doesn't work.

[11:32] <nothingmuch> gaal++

[11:33] <castaway> what does it do?

[11:33] <theorbtwo> Undeclared variable &sha1

[11:33] <theorbtwo> Val VUndef

[11:34] <castaway> hmm, how does p6 know thats supposed to be a func call in SHA1*.o ?

[11:35] <theorbtwo> Because SHA1__0_0_1.o tells it so.

[11:35] <castaway> automagically adds to the namespace?

[11:36] <theorbtwo> Supposed to.

[11:37] <castaway> can you check the symbol table or whatever, and see if its there?

[11:37] <castaway> can someone give me a url to look directly at the files in the pugs svn?

[11:37] <theorbtwo> http://svn.openfoundry.org/pugs/head/

[11:38] <castaway> thanks

[11:38] <Aankhen``> Um... how do you de-reference an array reference?

[11:39] <castaway> hmm, head/ didnt work, but the rest was good :)

[11:39] <Aankhen``> Nevermind.

[11:39] * castaway looks at doc/class ducktyping stuff, but cant understand it

[11:39] <jabbot> pugs - 1867 - * infinite cyclic hashes.

[11:42] <kcwu> pugs> ?1

[11:42] <kcwu> Segmentation fault (core dumped)

[11:43] <Aankhen``> I give up.

[11:43] <Aankhen``> How do you de-reference an array ref?

[11:43] <theorbtwo> The cabal broke @$ar?

[11:44] <Aankhen``> Doesn't seem to work.

[11:45] <autrijus> list $ar

[11:45] <Aankhen``> Ah.

[11:45] <Aankhen``> Thanks.

[11:45] <autrijus> @{$ar}  probably should work too

[11:46] <autrijus> write TODO tests.

[11:46] <Aankhen``> Alright.

[11:46] <Aankhen``> Does next() work?

[11:46] <autrijus> no.

[11:46] <kcwu> it seems that, any line begin with '?' will make pugs crash. "? <exp>" doesn't work at all

[11:47] <Aankhen``> Darn.

[11:47] <autrijus> kcwu: right. had not have time to fix

[11:47] <Aankhen``> There's something strange about t/builtins/strings/length.t

[11:48] <Aankhen``> Hrm, wait.

[11:48] <autrijus> but, dinner first. &

[11:48] * castaway wonders why P6::Bible requires Spiffy

[11:48] <Aankhen``> Enjoy your meal.

[11:49] <theorbtwo> Bon appitite, autrijus.

[11:49] <nothingmuch> castaway: most of ingy's stuff does

[11:49] <theorbtwo> BBIAB, have to reboot.

[11:50] <castaway> aeh, but I thunk P6 bible is just a bunch of pod files..

[11:50] <castaway> (and is it supposed to give errors parsing the pod files? :)

[11:51] *** chady is now known as megalomania

[11:52] <Aankhen``> Eek.

[11:52] <Aankhen``> This array is being flattened. O_O

[11:52] <Aankhen``> Er.

[11:52] <Aankhen``> Sorry.

[11:55] <Aankhen``> Since the tests for multidimensional arrays are all TODO'd in data_types/array.t,  I guess they're not supported.

[11:57] <Aankhen``> WB.

[11:57] * castaway snuggles theorbtwo.

[11:57] * theorbtwo thanks Aankhen, and kisses castaway.

[11:59] <Aankhen``> The more I look at length.t, the stranger it seems...

[11:59] <gaal> and now it only has the *easy* cases, Aanken`` :)

[11:59] <gaal> s/k/kh/

[11:59] <jabbot> pugs - 1868 - * hash.t all passes.

[11:59] <jabbot> pugs - 1869 - * repair junction.pick

[11:59] <Aankhen``> Heh.

[11:59] <Aankhen``> That's nice. ^_^

[12:00] <Aankhen``> Welp, atleast now it's clear why it's running 36 tests.

[12:00] <Aankhen``> Sorta clear, at any rate

[12:00] <Aankhen``> .

[12:09] <jabbot> pugs - 1870 - fix indentation

[12:18] * nothingmuch wants proper delegation already!

[12:18] <nothingmuch> Class::Delegation doesn't really cut it

[12:20] <rindolf> nothingmuch: what does delegation mean?

[12:20] <nothingmuch> sub new { ....; $self->{some_slot} = $object }

[12:20] <nothingmuch> and then you somehow declare that $object handles methods xyz for you

[12:21] <rindolf> nothingmuch: can't AUTOLOAD or whatever do that?

[12:21] <nothingmuch> and you don't have to wrap it in sub method { $self->{some_slot}->method(@_) }

[12:21] <nothingmuch> or use scary AUTOLOAD tricks

[12:21] <nothingmuch> AUTOLOAD only goes so far

[12:21] <nothingmuch> Class::Delegation uses a very scary variation on the AUTOLOAD theme

[12:23] <iblech> nothingmuch: has $.some_slot handles <method1 method2>

[12:23] <nothingmuch> in p5, not p6

[12:24] <nothingmuch> if i didn't know how lovely delegation in p6 will be, i wouldn't be complaining ;-)

[12:24] <iblech> :)

[12:25] <pdcawley> Okay, how do I tell ghc where to find hs-plugins?

[12:25] <rindolf> nothingmuch: but you can manufacture methods to do it using eval,

[12:25] <nothingmuch> rindolf: no thank you

[12:25] <ninereasons> make install && make register, pdcawley 

[12:25] <pdcawley> Ah...

[12:25] <nothingmuch> rindolf: i code to promote readability 1st

[12:25] <nothingmuch> i've done this stuff, and i do it for fun still

[12:26] <pdcawley> That'll teach me not to read the whole README

[12:26] <nothingmuch> but this code is code for others to read and see, and i'd rather type a bit more, than to confuse someone whose reading it

[12:26] <nothingmuch> i can do it with regular @ISA inheritence, and it's not that aweful

[12:26] <obra> nothingmuch++

[12:26] <nothingmuch> it just adds a bit of interface cruft

[12:26] <rindolf> nothingmuch: I meant that write a method factory and then use it like (delegate([qw(method1 method2 method3)], 'myslot'))

[12:27] <nothingmuch> this is not very reliable, it suffers from the infamous INIT/BEGIN time mess

[12:27] <nothingmuch> rindolf: again, that's what Class::Delegation basically cooks up for you, it doesn't matter how it's implemented

[12:27] <nothingmuch> (not friendly to mod_perl users)

[12:27] <ninereasons> gaal, I hope that I didn't mess up length.t too much.  If I did, would you tell me what I did wrong?

[12:27] <nothingmuch> as this module will most likely be used for generating reports, i don't want anyone sufferring

[12:28] * pdcawley really, really wishes the INIT/BEGIN thing could be fixed up in Perl 5.

[12:28] <pdcawley> There's so much cool stuff you can do when you use that stuff, and then it all falls to pieces when you try to use mod_perl

[12:29] <nothingmuch> Export::Simple for example

[12:29] <nothingmuch> that's sooooo beautiful

[12:29] <jabbot> pugs - 1871 - length.t add to force_todo

[12:30] <pdcawley> Almost anything that uses attributes falls apart in mod_perl if memory serves.

[12:30] <obra> agh! piers! you said that hateful word

[12:30] <pdcawley> obra: What hateful word?

[12:30] <obra>  

[12:30] <nothingmuch> funny thing is that attributes usually help organize wide apps like web ones very well

[12:30] * obra is a bit bent out of shape about the Apache2 renaming

[12:30] <pdcawley> nothingmuch: Indeed.

[12:31] <obra> "Here! well into RC land, we're going to break all your apache2 code"

[12:31] <pdcawley> Imagine being able to write 'sub whatever :handles('/this/path') {...}'

[12:31] <obra> and people have wondered why I didn't want to port RT to mp2 until it was released

[12:31] * pdcawley is so glad he isn't writing web apps any more.

[12:31] * nothingmuch is glad he never really started

[12:32] * pdcawley notes that Rails is tempting him to start again, but this time in Ruby.

[12:32] <pdcawley> The P6Rails is going to kick *much* ass.

[12:33] <nothingmuch> yeah

[12:33] <nothingmuch> with WALK, and hyper dispatch

[12:33] <nothingmuch> and junctions

[12:33] <nothingmuch> and all that beautiful stuff that really helps to simplify spaghetti logic

[12:33] <nothingmuch> and, err, proper OOP support

[12:33] <nothingmuch> duh

[12:33] * obra has been luring autrijus toward writing webapp framework

[12:33] * pdcawley was thinking more along the lines of all the lovely domain specific metaprogramming that Rails has.

[12:34] <gaal> back

[12:34] <pdcawley> but a big 'yeah' to the other stuff...

[12:34] <gaal> ninereasons, what did you think you messed up? :)

[12:34] <nothingmuch> pdcawley: example? i don't know rails

[12:34] <nothingmuch> i barely know of it

[12:34] <ninereasons> I was confused by an edit conflict, for one thing.

[12:35] <nothingmuch> ninereasons: 3-way-diff is your best friend

[12:35] <ninereasons> I checked in a G file - bad

[12:35] <gaal> where, length.t? 

[12:35] <nothingmuch> too bad vimdiff doesn't know how to do it

[12:35] <pdcawley> When you're defining your class attributes, for instance, you can declare some fields with 'has :whatever', 'belongs_to :whatever_else' and it uses this info to work out the database table structure it's working with.

[12:35] <ninereasons> fixed now, though.

[12:35] <ninereasons> (well, I think so, anyway)

[12:35] <nothingmuch> pdcawley: ah, pretty

[12:35] <gaal> sorry, i was eating and i seem to lack some context

[12:36] <pdcawley> And, while it does it, it sets up appropriate accessor methods.

[12:36] <nothingmuch> pdcawley: i have a pet project that's sort of stalled because real work isn't pushing it forward, that does very funky stuff with Class::DBI schemas, using SQL::Fairy

[12:36] <ninereasons> sorry, I didn't get enough sleep and probably didn't proved intelligible context, gaal

[12:36] <nothingmuch> err, sqlfairy, that is SQL::Translator

[12:36] <ninereasons> *provide

[12:37] <pdcawley> Oh, it's all stuff that can be done in Perl, but it's so well thought through in Rails.

[12:37] <ninereasons> svn up to get length.t and forece_todo and see what you think about the alterations I made.

[12:37] * nothingmuch will take a look at it some day, if he ever gets to needing to do web development

[12:37] <gaal> no worries :)

[12:37] <pdcawley> And because you don't have to roll all your own 'internals of the object' cruft for every method, you can just get on with writing the app.

[12:37] <obra> yeah. rails is _pretty-

[12:37] <obra> and the code is _pretty_

[12:37] <pdcawley> obra: It's quality all the way down.

[12:38] <ninereasons> gaal, ok :)

[12:38] <kungfuftr> pdcawley: how's the pgce going?

[12:38] <pdcawley> Ruby has beautifully 'light' OO syntax; there's very little scaffolding so every bit of code you read is relevant.

[12:38] <pdcawley> kungfuftr: Dropped out.

[12:39] <kungfuftr> pdcawley: heh, perl addict!

[12:39] <pdcawley> Not that. Just a hellish workload.

[12:39] <jabbot> pugs - 1872 - resolve conflicting edit

[12:40] <nothingmuch> how does ruby support YAML?

[12:40] * pdcawley notes that Ruby is one of the things that really excites him about Perl 6's OO facilities.

[12:40] <pdcawley> nothingmuch: Very well, thank you.

[12:40] <nothingmuch> goody

[12:40] * nothingmuch might be tempted to really try and use it when it's time

[12:40] <pdcawley> The testing fixtures in Rails are specced using YAML.

[12:40] <nothingmuch> but again, management will have to unstick that project

[12:42] <pasteling> "gaal" at 192.115.25.249 pasted "msys build fail (latest r)" (5 lines, 192B) at http://sial.org/pbot/9259

[12:43] <gaal> who broke the build? :)

[12:43] <kungfuftr> gaal: you need to make clean

[12:43] <gaal> (okay on linux, where i have hs-plugin fwiw)

[12:44] <gaal> but i did :)

[12:44] <kungfuftr> hhhmmm... odd

[12:44] * kungfuftr waits for his testrun to finish

[12:44] <pdcawley> Tests are failing here 'Cannot cast from VRef <Scalar> to [Char]' looks common...

[12:44] <pdcawley> OSX + hs-plugin

[12:44] <ninereasons> don't build 'make optimized' pdcawley, that might solve the problem.

[12:45] <gaal> oh: on linux, src/Eval.hs:286:34: Empty 'do' construct

[12:45] * pdcawley just did 'make; make test'

[12:45] <pdcawley> no make optimized in sight.

[12:46] <ninereasons> hm.  i'm not helping then :(

[12:46] <gaal> oh: on linux i forgot to make clean

[12:46] <gaal> so ignore that complaint

[12:46] <gaal> but msys is certainly b0rken.

[12:47] <kungfuftr> latest smoke build on my boxen: http://kungfuftr.com/pugs-smoke.html

[12:48] <ninereasons> look at all that perty green :)

[12:50] <gaal> i just noticed something i don't like about the testgraph: you can't copy the test description.

[12:50] <gaal> i wonder if there's a way to avoid that w/o javascript

[12:51] <kungfuftr> not really i'm afraid

[12:51] <gaal> oh, crap: the Eval error still happens for me in latest r

[12:51] <gaal> on linux

[12:52] <gaal> whoops, sorry, no i had a stale file again. careless. :(

[12:52] * kungfuftr *slaps* gaal

[12:52] <gaal> ouch!

[12:54] * kungfuftr reruns test builder

[12:54] <ninereasons> there's no way for pugs-interactive to wait on the following line for the completion of an expression, is there? I've tried the obvious '\' and that doesn't work

[12:55] <stevan> make optimized just worked for me 

[12:55] <stevan> (so far)

[12:55] <ninereasons> wow.

[12:55] <stevan> hola nothingmuch 

[12:56] <stevan> the test are running (with some errors though)

[12:56] <kungfuftr> junctions seem to be pretty borked

[12:56] <stevan> kungfuftr: really??

[12:57] <kungfuftr> stevan: yeah, 18/30 failed... 7/23 ran, etc.

[12:57] <nothingmuch> hola stevan 

[12:57] <nothingmuch> which do yo prefer, stevan, HTML::Template, or Petal?

[12:58] <stevan> nothingmuch: stevan  mostly, I dont respond when people call me Petal :P

[12:58] <stevan> nothingmuch: I have never used Petal

[12:58] <nothingmuch> stevan++

[12:58] <stevan> HTML::Template used to be my favorite

[12:58] <nothingmuch> exactly

[12:58] <nothingmuch> it's nice, but no one uses it

[12:58] <stevan> but now I am addicted to Template Toolkit

[12:59] <nothingmuch> IMHO we don't need a "real" templating thing, and i'd rather have one that everyone can read easily

[12:59] <stevan> I like being able to do [% object.method() %]

[12:59] <nothingmuch> i think HTML::Template and Petal both satisfy that requirement

[12:59] <nothingmuch> in petal that is also allowed, which is why i prefer it to HTML::Template

[12:59] <stevan> I would go with HTML::Template it is more common

[12:59] <nothingmuch> in general it is more forgiving of OOP design

[12:59] <nothingmuch> okie dokies

[12:59] <stevan> and still very usable (just more work on the perl side)

[13:00] <stevan> this is for the Test::TAP::Madness::* module?

[13:00] <castaway> Text::Template++ :)

[13:00] <nothingmuch> Test::TAP::HTMLMatrix will be a gutted testgraph.pl

[13:00] * stevan just finished his first cup of coffee and the backlog :)

[13:00] <nothingmuch> insert ::Visualize in there

[13:00] * shapr writes Madness::Cthulhu

[13:01] <stevan> stevan queues up Madness::One::Step::Beyond

[13:01] * shapr grins

[13:01] <kungfuftr> nothingmuch: TT++

[13:01] <nothingmuch> Object::Meta::Plugin

[13:01] <stevan> nothingmuch: in answer to your age query,.. I am 31 (soon to be 32)

[13:01] <nothingmuch> kungfuftr: yeah, i rather like it too, but it has a 30 minute learning curve. i want a 5 minute one.

[13:01] <stevan> nothingmuch: I dont know if I agree witht hat

[13:02] <stevan> I saw TT and it made immediate sense

[13:02] <castaway> stevan, how soon? :)

[13:02] <stevan> (on the template side that is)

[13:02] <stevan> castaway: Aug 12th

[13:02] <kungfuftr> you may not need those stupidly advanced things now, but further down the line you will and when that happends it's a huge extra cost to have to either hack it into Petal (etc) or move everything to TT

[13:02] <castaway> damn :)

[13:02] * stevan hopes he is the oldest 

[13:02] <castaway> nope, missed by a month

[13:02] <ninereasons> pdcawley reported lots of tests failing without 'make optimized', stevan .. 

[13:02] <nothingmuch> splash? wtf? MOMMMY!)

[13:02] <ninereasons> pdcawley Tests are failing here 'Cannot cast from VRef <Scalar> to [Char]' looks common...

[13:02] <nothingmuch> it's also a beast to install

[13:02] <nothingmuch> (what?! XS? DBI? /usr/share/WHAT?!

[13:02] <shapr> oldest what?

[13:02] <nothingmuch> #perl6 lurker

[13:03] <stevan> ninereasons: I got that too

[13:03] <shapr> I'm 33

[13:03] <shapr> 1971

[13:03] * castaway blinks

[13:03] <stevan> DOH!!! the geezer from sweden beat us

[13:03] * shapr grins

[13:03] <castaway> darn :)

[13:03] <Steve_p> Geezer???

[13:03] <stevan> castaway: it does explain why he is so wise

[13:03] <shapr> haha

[13:03] <castaway> stevan umm.. :)

[13:04] <castaway> but not the bouncy bits :)

[13:04] <stevan> Steve_p: can you beat shapr's 33?

[13:04] * ninereasons is childlike in perl; at 48

[13:04] <shapr> w00

[13:04] <castaway> ooh

[13:04] <Steve_p> Actually, no, I can't

[13:04] <stevan> 48, 48,... so I hear a 50?

[13:04] * stevan sometimes feels like his is 50 after chasing the kids all day

[13:04] <Steve_p> 1971 is the perfect year

[13:05] <shapr> Steve_p: which month?

[13:05] <stevan> Steve_p: I prefer 73 myself :)

[13:05] <kungfuftr> 83!

[13:05] <Steve_p> Wait a second, yes I can beat 33

[13:05] <Steve_p> (old age) -- # ;)

[13:05] <Steve_p> shapr, January

[13:05] <shapr> Ah yes, I'm September.

[13:05] <stevan> kungfuftr: I remember '83,.. those were the days,.. 

[13:05] <castaway> September++

[13:06] <stevan> got my first pair of Fat Laces

[13:06] <castaway> right, stevan :)

[13:06] <shapr> I got on the internet in the 80s

[13:06] * nothingmuch 's parents didn't even meet in 83

[13:06] * stevan puts on Melli-Mels "The Message" 

[13:07] <stevan> shapr: how could you? Al Gore didnt invent it until the early 90s

[13:07] <nothingmuch> hah

[13:08] <stevan> nothingmuch: I need to get you those Mingus MP3s

[13:09] <nothingmuch> indeed

[13:09] <stevan> you can't play Jazz bass without listening to them

[13:09] <nothingmuch> don't worry, i like chambers

[13:09] <nothingmuch> and i like doug watkins

[13:09] <nothingmuch> i'm missing a lot

[13:09] <nothingmuch> but i have some education, still ;-)

[13:09] <stevan> John Coltrane - A Love Supreme ++

[13:10] <shapr> I like John Lee Hooker, Jimi Hendrix.

[13:10] <nothingmuch> don't have that either

[13:10] <shapr> and Led Zeppelin, of course.

[13:10] <stevan> shapr: I got some nice Robert Johnson MP3s recently too

[13:10] <nothingmuch> stevan, shapr if you don't have any concienceous objections, should i start a bt tracker for us?

[13:10] <stevan> and some early Woody Guthrie commie/union stuff

[13:11] <shapr> I don't do copyright stuff, if that's what you mean by conscientous objections.

[13:11] <ninereasons> and Raaaay Charles

[13:11] * nothingmuch normally does that, and then buys it if he's still listening after a short while

[13:11] <shapr> I just don't do it at all, and I encourage others to do the same.

[13:11] <stevan> nothingmuch: me too,.. MP3s are only so good quality wise

[13:11] <shapr> Because, the current laws are waaaay stupid.

[13:12] <stevan> nothingmuch: I have no objections either

[13:12] <rindolf> ninereasons: Hit the Road Jack, and don't you come back, no more, no more, no more, no more.

[13:12] <shapr> And the only way they'll get fixed is by killing off the Media Mafia.

[13:12] <stevan> shapr: you need only look at many of the 80s-90s hip hop artists to see how wrong the system is

[13:12] <shapr> I agree

[13:12] <nothingmuch> anyway, i'll do that bt thing, and who ever wants the cops at their door can join it =)

[13:12] <stevan> (although that no longer applies now)

[13:13] <stevan> nothingmuch: in the words of Ice Cube, Dr. Dre and all of NWA ..... F*ck dah Police

[13:13] <nothingmuch> fsck /dev/pig

[13:13] <ninereasons> rindolf, Well I'm through with you, too bad you're blue I said move on, I said move on

[13:13] <nothingmuch> bwahaha

[13:13] <nothingmuch> damn, i'm so lame

[13:14] <stevan> nothingmuch++

[13:14] <nothingmuch> anyway, back to work

[13:18] <stevan> I am still getting errors with plain 'make'

[13:18] * stevan goes back to 'make optimized'

[13:20] * kungfuftr needs a faster box

[13:24] <shapr> rob__: are you rob nagler?

[13:25] <rob__> shapr: actually im not mr. nagler :)

[13:25] <kungfuftr> assign.t is hanging

[13:25] <shapr> ok, whew.

[13:26] <shapr> I can skip the flaming then.

[13:26] <rob__> heh

[13:26] <kungfuftr> on test 2... odd

[13:28] <kungfuftr> bah... meetings to go to

[13:32] <masak> shapr: now that pugs supports multidimensional data structures, what do you think is the feasibility of writing a board game in it?

[13:33] <shapr> err

[13:33] <stevan> masak: you might want to start with Tic-Tac-Toe first

[13:34] <masak> :) good idea

[13:34] <shapr> Who elected me clueful? =)

[13:34] <stevan> Pugs still consumes a lot of memory and CPU at times

[13:35] <masak> shapr: you and autrijus are the only ones i know in here :)

[13:35] <shapr> Oh, ok then.

[13:35] <stevan> masak: now you know me too :)

[13:36] <masak> stevan: yes, hello :)

[13:36] <stevan> hello masak nice to meet you :)

[13:37] <masak> i'm the stereotype minimal committer. i have committed six lines of test code in t/subroutines/sub_named_params.t

[13:38] <stevan> masak: anything is something :)

[13:38] <masak> true :)

[13:38] <masak> i'm not sure how to become more involved, short of reading up on haskell

[13:38] <masak> and i have little time, otherwise i would do this full time

[13:39] <stevan> masak: but you help when  you have time... me I am in between projects so I have time to spare

[13:40] <stevan> but when my next project starts (in a week or so) my commit rate will go down

[13:40] <stevan> the ebb and flow of OSS :)

[13:40] <masak> sometimes i wish i was out of a work so i could do this all day

[13:40] <masak> living on air, coding pugs

[13:41] <stevan> masak++ # prefering unemployment 

[13:41] <castaway> if only..

[13:42] <cognominal> masak: I am going thru http://www.haskell.org/tutorial/. It is a good tutorial

[13:43] <stevan> masak: shapr's HaskellDemo is nice too http://www.haskell.org/hawiki/HaskellDemo

[13:43] * shapr cheers

[13:43] <stevan> shapr: I added it to READTHEM as well

[13:43] <shapr> spiffy!

[13:45] <masak> cognominal & stevan: thx

[13:47] <ninereasons> pugs> my ($foo, $bar) = ('FOO', 'BAR');

[13:47] <ninereasons> ({ref:<Scalar>}, {ref:<Scalar>})

[13:47] <autrijus> greetings!

[13:47] <nothingmuch> in p5, is an assignment an lvalue?

[13:48] <autrijus> yes, an assignment is an lvalue.

[13:48] <nothingmuch> i.e., can i say ($foo ||= '') .= "blah"?

[13:48] <autrijus> yes.

[13:48] <nothingmuch> autrijus++

[13:48] <clkao> hi autrijus

[13:48] <autrijus> hey clkao.

[13:49] <masak> hi autrijus

[13:49] <stevan> autrijus: good morning/afternoon/evening

[13:49] <autrijus> hey stevan. lots and lots of core changes.

[13:49] <jabbot> pugs - 1873 - * removed pretty much all vCast from Pri

[13:50] <shapr> yay

[13:50] * stevan stops his build and runs svn up 

[13:50] * pdcawley does the same.

[13:50] * shapr does that too!

[13:50] <nothingmuch> darcs get http://nothingmuch.woobling.org/Test-TAP-Model

[13:50] <shapr> peer pressure!

[13:50] <autrijus> heh... I'm not done yet :)

[13:50] <stevan> autrijus: should I update the changelog again,.. or is more to come?

[13:51] <pdcawley> Have we got objects yet?

[13:51] <autrijus> stevan: you should update the changelog again... all my work currently is getting the lvalue model in

[13:51] <autrijus> pdcawley: you have ref() and isa() and MMD, so yes

[13:51] <autrijus> but you don't have classes ;)

[13:51] <nothingmuch> pdcawley: sort of... they're basic infastructure

[13:51] <nothingmuch> their

[13:51] <stevan> autrijus: sounds good

[13:51] <pdcawley> Right, so if I'm going to do the 'minilisp in perl6 on haskell' thing, then I need to write it in a functional styly for now?

[13:52] <stevan> pdcawley: yes

[13:52] <stevan> pdcawley: there is some 'functional'-style stuff in examples/

[13:52] <nothingmuch> pdcawley: yep

[13:52] <nothingmuch> but wait a week ;-)

[13:52] <pdcawley> Why? You're doing it already?

[13:52] <autrijus> pdcawley: however basic class support is real soon now. I think by the end of this month :)

[13:52] <pdcawley> Or we'll have objects by then?

[13:53] <nothingmuch> pdcawley: not me, but autrijus

[13:53] <nothingmuch> maybe me if i have more time, but i doubt that will make a diff

[13:53] <pdcawley> I think if I can get my data structures and functions designed effectively, the conversion to an OO implementation should be straightforward.

[13:54] <stevan> wow... over 30 commits since I went to bed last night (only 8 hours ago)

[13:54] <pdcawley> However, a 'call_with_current_continuation' type thing, exposed at the language level wouldn't suck...

[13:54] <stevan> pdcawley: t/unspeced/cont.t

[13:54] <pdcawley> Ooh...

[13:54] <stevan> (I think that is what you want)

[13:55] <autrijus> there's also &sub.goto

[13:55] <pdcawley> Want more than escape continuations.

[13:55] <autrijus> you can have full continuations iff you can get larry to spec them.

[13:55] <autrijus> :)

[13:55] <autrijus> @larry, that is

[13:55] <pdcawley> Dang.

[13:55] <stevan> pdcawley: and t/subroutine/curry.t (more functional stuff)

[13:56] <osfameron> why is larry now @larry ?

[13:56] <autrijus> osfameron: design team

[13:56] <stevan> autrijus: I think ingy is planning on arm wrestling larry re: POD

[13:56] <autrijus> cool

[13:56] <osfameron> autrijus: aha, thanks

[13:56] <stevan> autrijus: you can challange him with the CPAN drinking game

[13:56] <nothingmuch> stevan: is that a good thing or a bad thing?

[13:56] * nothingmuch thinks it's a good thing

[13:56] <nothingmuch> design team needs shaking up IMHO

[13:57] <stevan> nothingmuch: we just all need to watch out for the blue ice cubes,... 

[13:57] <nothingmuch> and the anarchistic approach of "just do it instead of them and see what they say" seems to be the sportiest way

[13:58] <ninereasons> t/operators/assign.t still hangs for me

[13:58] <stevan> ninereasons: yeah me too (with make optimized that is)

[13:59] <ninereasons> still {ref:<Scalar>})

[13:59] <ninereasons> my $a = 'FOO'

[13:59] <ninereasons> 'FOO'

[13:59] <ninereasons> my ($a) = 'FOO'

[13:59] <ninereasons> ({ref:<Scalar>})

[14:00] <ninereasons> that's why the swap hangs, I suppose.

[14:00] <ninereasons> recursive references

[14:02] <gaal> btw if anyone is looking to write tests but doesn't knwo which, there's plenty to do in goto.t 

[14:03] <Steve_p> My guess is that there is refactoring to be done on just about any of the test files

[14:03] <stevan> Steve_p: dont you know it :)

[14:04] <stevan> I did some cleaning last night, but it was far from sufficient

[14:05] <ninereasons> frankly, it was awesome, stevan; but I'm sure you're right that there's more to do.

[14:05] <stevan> ninereasons: thank you,.. but what I saw along the way,.. oh the horror,.. the horror :)

[14:06] * ninereasons wraps a blanket over shocked and trembling stevan

[14:06] <autrijus> I'm fixing infinite loop 

[14:06] <gaal> stevan, any particular things you want us to work on?

[14:07] <gaal> lol, nothingmuch++ "# FIXME - the whole Test::Harness::Straps model can be figured out from this"

[14:07] <stevan> gaal: hmmm, anything listed in t/force_todo would be a good place

[14:08] <gaal> i mean, you mentioned refactoring

[14:08] <nothingmuch> shit, i dropped my eraser in my coffee

[14:08] <stevan> some of those are broken, and some are missing Pugs features, and still others are just messy

[14:08] <shapr> nothingmuch: might taste better

[14:08] <gaal> congratulations, you now have decaf

[14:08] <nothingmuch> shapr: actually i was done with it 5-6 hrs ago

[14:09] <nothingmuch> but it's turkish crap, with the gunk on the bottom

[14:09] <stevan> yummy

[14:09] <nothingmuch> just deep enough for it to be completely submersed

[14:09] <shapr> I don't think that piece of plastic will erase marks anymore.

[14:09] <stevan> turkish coffee marinated erasers

[14:09] <Aankhen``> Do multidimensional structures work?

[14:09] <Aankhen``> Data structures, even.

[14:10] <nothingmuch> Aankhen``: you mean by ref?

[14:10] <nothingmuch> or like 'my @array is shape()'?

[14:10] <Aankhen``> By ref, I guess, e.g. my @array = ([1, 2, 3], [3, 2, 1]);

[14:11] <nothingmuch> my pugs is not compiled right now, so i can't sya

[14:11] <nothingmuch> but i am 90% sure that yes

[14:12] <stevan> Aankhen``: that should work now (assuming you can compile)

[14:14] <Aankhen``> Ah.

[14:14] <Aankhen``> Since which revision?

[14:14] <Aankhen``> I compiled 1853.

[14:15] <Aankhen``> It simply flattened the AoA (both references, BTW) in builtins/strings/length.t.

[14:16] <Aankhen``> BBIAB.

[14:16] <stevan> Aankhen``: svn up because we are now on 1873 

[14:17] <autrijus> infinite loop fixed.

[14:17] <autrijus> about to commit ---

[14:17] <autrijus> but I'm not sure of the logic in monads.hs line 232 at all.

[14:18] <stevan> autrijus: I updated the ChangeLog (its now 70 lines long)

[14:18] <nothingmuch> . o O ( aquaaariiuuuuss! )

[14:18] <gaal> is the moon in the 7th house?

[14:18] <ninereasons> Aankhen``,  r1835 has ({ref:<Scalar::Const>}, {ref:<Scalar::Const>})

[14:18] <ninereasons> r1865 has ({ref:<Array>}, {ref:<Array>})

[14:18] <nothingmuch> *horn sounds*

[14:18] <nothingmuch> gaal: when?

[14:19] <gaal> now. is it?

[14:19] <ninereasons> svn up should cure your problem, Aankhen`` 

[14:19] <nothingmuch> no clue

[14:19] <nothingmuch> where is jupiter?

[14:19] <gaal> dunno. aligned with mars?

[14:19] <nothingmuch> no peace, though, to guard the planet

[14:19] <autrijus> r1875.

[14:20] <jabbot> pugs - 1874 - more ChangeLog additions

[14:20] <jabbot> pugs - 1875 - * new context propagation logic to disti

[14:20] <cognominal> ". o O ( aquaaariiuuuuss! )": nothingmuch betrays his age

[14:20] <nothingmuch> cognominal: beh. I like duke ellignton's stuff, where the horns sound like electric guitars

[14:20] <nothingmuch> age has nothing to do with it, good education does ;-)

[14:20] <cognominal> :)

[14:21] * nothingmuch had, musically speaking, very good parents and friends

[14:21] <stevan> cognominal: he got it from his grandmothers record collection :)

[14:21] <nothingmuch> not only musical edu, actually. Mom said to me once 'did you ever watch hair? it's a good movie'

[14:22] <nothingmuch> and dad took me to see Forman's guard changing parade thing in prague, because he thought i might appreciate it

[14:24] <ninereasons> yay.  works for me, autrijus 

[14:28] <autrijus> woot.

[14:29] <ninereasons> i wish I could get these plugins installed on freebsd 4.11.  It bugs me.

[14:29] <jabbot> pugs - 1876 - * bad casting for "Any".

[14:39] * nothingmuch is invisible

[14:39] <autrijus> hey mtve.

[14:39] <autrijus> whew. assign.t all passes!

[14:39] <autrijus> which means we have a rather sane semantics now

[14:39] <jabbot> pugs - 1877 - * assign.t all passes, including weird o

[14:40] <Steve_p> heh

[14:41] * autrijus runs another round of tests

[14:41] <autrijus> ok. now I think I have time to look at SHA1...

[14:43] <castaway> yay :)

[14:43] <nothingmuch> does anybody have 10 minutes of sisyphic work time to donate?

[14:43] <shapr> to what?

[14:43] <nothingmuch> Test::TAP::Model

[14:46] <Steve_p> I can take a look at it in a couple hours.  What's needed?

[14:46] <nothingmuch> test coverage

[14:47] <nothingmuch> :w

[14:47] <nothingmuch> damn

[14:47] <nothingmuch> and lots of predicates

[14:47] <nothingmuch> for convenience

[14:47] <nothingmuch> the coverage is really for these

[14:47] <Steve_p> predicates?

[14:47] <nothingmuch> i have an object:

[14:47] <autrijus> ok. can someone run another round of test for r1878 and post url?

[14:47] <nothingmuch> Test::TAP::Model::File

[14:48] <autrijus> I need my laptop's cpu power for hs-plugins :)

[14:48] <nothingmuch> it wraps around the hash structure in Test::TAP::Model

[14:48] <nothingmuch> and gives you convenience methods

[14:48] <nothingmuch> $t->passed_tests

[14:48] <nothingmuch> $t->bailed_out

[14:48] <nothingmuch> etc

[14:48] <nothingmuch> autrijus: will be ready in 10 mins

[14:48] <autrijus> danke

[14:48] <nothingmuch> or whatever it takes for the cycle

[14:50] <jabbot> pugs - 1878 - * restore join() to sanity.

[14:50] <Steve_p> OK, I'll take a look at it

[14:50] <nothingmuch> Could not find module `Plugins':

[14:50] <nothingmuch>   use -v to see a list of the files searched for

[14:50] <nothingmuch>   (imported from src/External/Haskell.hs)

[14:50] <nothingmuch> make: *** [optimized] Error 1 

[14:50] <nothingmuch> Steve_p: i'll submit my progress as soon

[14:50] <autrijus> the probing is still bad?

[14:50] <autrijus> omg.

[14:51] <nothingmuch> this is after make purge

[14:52] <autrijus> I'll take over ;)

[14:52] <nothingmuch> ssh to eris

[14:52] <nothingmuch> i'll chown /usr/local/src/pugs

[14:52] <autrijus> please svn up

[14:52] <autrijus> perl Makefile.PL

[14:52] <autrijus> and try agian

[14:52] <autrijus> see if r1879 works

[14:52] <Steve_p> Where is Test::TAP::Model hiding?

[14:52] <nothingmuch> Steve_p: darcs get http://nothingmuch.woobling.org/Test-TAP-Model

[14:52] <nothingmuch> i have yet to submit the File.pm file

[14:53] <nothingmuch> ok, seems to work

[14:57] <jhorwitz> autrijus: any progress on the parrot backend lately?

[14:57] <autrijus> hey jhorwitz!

[14:57] * jhorwitz emerges from lurking

[14:57] <autrijus> jhorwitz: nope. the priority is to get 6.2 out of door

[14:57] <autrijus> then write PA02

[14:57] <autrijus> then PugsIMC 

[14:58] <jhorwitz> more time for me to grok haskell...

[14:59] <autrijus> :D

[14:59] <jabbot> pugs - 1879 - * brutal way to check hs-plugins

[15:00] <castaway> brutal++ :)

[15:00] <pdcawley> Mmm... brutality!

[15:01] <Steve_p> Anyone here get darcs to compile with GHC-6.4

[15:01] <autrijus> Steve_p: it seems to be a known no-go

[15:01] <nothingmuch> Steve_p: not me. Be cheap and get a binary

[15:01] <nothingmuch> or just wget -r,

[15:02] * castaway gets inline haskell disabled (but then I did before too)

[15:05] <autrijus> require_haskell "/usr/local/lib/perl6/site_perl/mach/SHA1__0_0_1.o"

[15:05] <autrijus> pugs: /usr/local/lib/perl6/site_perl/mach/SHA1__0_0_1.o: unknown symbol `SHA1_sha1_closure'

[15:05] <autrijus> ok, I get that far.

[15:05] <autrijus> Internal error while running expression:

[15:05] <autrijus> resolveObjs failed with <<False>>

[15:05] * autrijus fixing

[15:09] <nothingmuch> Steve_p: OK, File.pm added

[15:09] <jabbot> pugs - 1880 - remove obsolete comment

[15:10] <nothingmuch> I'll write Test::TAP::Model::Subtest now, and then refactor ::File to use that for extraction

[15:10] <Steve_p> nothingmuch, got it :)

[15:11] <nothingmuch> thanks

[15:12] <rindolf> Everybody join #perl! We're 15 people short of having 400 participants.

[15:12] <rindolf> 14

[15:13] <nothingmuch> rindolf--; # beh, this is so pointless

[15:13] <rindolf> nothingmuch: I was joking.

[15:13] <rindolf> perlbot karma rindolf

[15:13] <perlbot> Karma for rindolf: 2

[15:14] <pdcawley> rindolf-- 

[15:14] <pdcawley> rindolf--

[15:14] <Steve_p> rindolf--

[15:14] <pdcawley> Because neutral is good.

[15:14] <pdcawley> Dang.

[15:14] <pdcawley> rindolf++

[15:14] <nothingmuch> oh my

[15:14] <pdcawley> karma rindolf?

[15:14] <jabbot> pdcawley: rindolf? has neutral karma

[15:14] <nothingmuch> rindolf: you can ++ yourself ;-)

[15:14] <rindolf> pdcawley: thanks

[15:14] <nothingmuch> (j/k)

[15:15] <autrijus> require_haskell works.

[15:15] <rindolf> perlbot karma rindolf

[15:15] <perlbot> rindolf doesn't have any karma

[15:15] <autrijus> cleaning up and about to commit.

[15:15] <pdcawley> perlbot karma pdcawley

[15:15] <perlbot> pdcawley doesn't have any karma

[15:15] <rindolf> pdcawley++

[15:15] <nothingmuch> btw, autrijus , make test didn't finish yet

[15:15] <autrijus> nothingmuch: is it looping?

[15:15] <nothingmuch> oh my, were having a karma orgy

[15:15] <nothingmuch> t/data_types/hash_ref.t <-- loopy?

[15:15] <nothingmuch> if yes, then I guess that yes

[15:15] <nothingmuch> i've been looking at it for 30 seconds

[15:15] <nothingmuch> no change

[15:16] <autrijus> aw :-/

[15:16] <autrijus> looks yes.

[15:16] <autrijus> terribly sorry. :(((

[15:16] <autrijus> fixing

[15:16] <nothingmuch> karma sutra

[15:16] <jabbot> nothingmuch: sutra has neutral karma

[15:16] <nothingmuch> autrijus: you can ssh to eris to debug this stuff

[15:16] * castaway wonders what autrijus did, and how it "works"

[15:17] <shapr> Hail Eris!

[15:17] <rindolf> nothingmuch: I won't like you anymore unless you bump my karma.

[15:17] <nothingmuch> rindolf: why?

[15:17] * rindolf is kidding

[15:18] <rindolf> 10 people short of 400

[15:18] <nothingmuch> with you it's always very hard to understand

[15:18] <nothingmuch> normally to imply cynical tone people either exaggerate wildly, or stick in a bunch of ';-)' '=P' or ':)'s 

[15:18] <nothingmuch> with all your proper punctuation and stuff

[15:19] <autrijus> I like proper punctuation. ;-) =P :)

[15:19] <Aankhen``> Heh.

[15:19] <rindolf> autrijus++

[15:19] <Aankhen``> Everyone has a poker face on IRC.

[15:19] <Aankhen``> :-| <--- my poker face.

[15:19] <autrijus> do I get to be the joker?

[15:19] <pdcawley> UWTLS?

[15:19] <jabbot> pugs - 1881 - * require_haskell now runs... more work 

[15:20] <ninereasons> sorry, autrijus.  the king cannot be the joker.

[15:20] * pdcawley realises that if he doesn't keep up with p6l he's not going to have a clue what most of it means.

[15:20] <autrijus> "unless we take Luke's suggestion."

[15:20] <nothingmuch> two hundred and fifty six!

[15:21] <pdcawley> So EIWTLS is 'Even if we take...'

[15:21] <rindolf> Why aren't we using CIA as a commit bot?

[15:22] <autrijus> howto?

[15:22] <nothingmuch> because pugs is not yet tracked by CIA

[15:22] <nothingmuch> if you 

[15:22] <nothingmuch> if you have the know how to make it work, i reckon we'll all be pleased =)

[15:22] <autrijus> yup.

[15:23] <rindolf> nothingmuch: http://cia.navi.cx/doc/adding-projects

[15:24] <nothingmuch> you're welcome to do it, i don't have the tuits to mess with stuff like that

[15:24] <nothingmuch> or rather, i do

[15:24] <nothingmuch> but i have higher priority things to fill up this time

[15:25] <rindolf> nothingmuch: I think I need access to the physical repository.

[15:26] <nothingmuch> if you need dirty work, like adding hooks, autrijus can probably help

[15:26] <nothingmuch> if you need regular commit access, that's not an issue

[15:26] <nothingmuch> if you tell me what to do i'll do that

[15:26] <nothingmuch> but if it involves signing up/making decisions/communicating i'd rather write the code i'm working on right now

[15:27] <nothingmuch> because the test graphing has been waiting for refactoring a long while, and i finally have an excuse to do it while at work

[15:27] <rindolf> nothingmuch: I think I need to setup a hook.

[15:27] <nothingmuch> i don't know how openfoundry manages this stuff

[15:27] <nothingmuch> i have admin access, but i'm not 100%

[15:27] <autrijus> rindolf: post the details on setting up svn hook on some url?

[15:27] <nothingmuch> i'm not a subversion user, so i don't know what i can do

[15:27] <autrijus> rindolf: I'll redirect foundry people to it.

[15:27] <nothingmuch> 100% sure i can do it

[15:28] <rindolf> autrijus: they're in the URL I pointed you to.

[15:28] <autrijus> ah. I missed that link.

[15:28] <rindolf> autrijus: http://cia.navi.cx/doc/adding-projects

[15:29] <rindolf> And then the whole world and his mother will see the Pugs commits on #commits

[15:29] <machack666> hey all, is there a rev that builds all tests on Mac OS X?  There was one that was close last nght (<60 tests failing), but now it looks like there are a lot more failing again (mostly to do with vCast, looks like)

[15:29] <rgs> that'll double the traffic on #commits.

[15:30] <nothingmuch> machack666: you can try before itypes

[15:30] <jabbot> pugs - 1882 - Updated listification syntax for strings

[15:30] <nothingmuch> but right now tests are hanging

[15:30] <nothingmuch> autrijus: are you going to use eris, or can i keep it in the smoke loop?

[15:30] <machack666> thanks, nm -- anything I can help with?

[15:30] <autrijus> nothingmuch: I'm not going to use eris; I'm almost getting the hanging fixed

[15:30] <nothingmuch> machack666: errm, not that I know how to tell you to help

[15:31] <nothingmuch> in general i can help

[15:31] <nothingmuch> but not specifically

[15:31] <nothingmuch> i can tell you: write tests

[15:31] <machack666> ok -- I'll just wait on bated breath.  :)

[15:31] <nothingmuch> but that's about it ;-)

[15:34] <autrijus> machack666: examples/cookbook/ needs help :)

[15:34] <machack666> i'll take a looksie.

[15:36] <machack666> yes, it is fairly spartan.

[15:37] <machack666> is the idea to only translate when there is a distinction between the P6 and P5 solutions?

[15:39] <nothingmuch> i think so

[15:40] <nothingmuch> but i think it would be nice to translate to "good" perl6 where applicable

[15:40] <nothingmuch> otherwise p6 might look just like p5 with a funnier syntax

[15:40] <autrijus> yeah.

[15:40] <nothingmuch> i.e., zip, junctions, hyper ops - these should really shine in cookbook examples

[15:40] <mj41> So. How to translate this to perl6?

[15:40] <mj41> foreach my $tut_num ( 0..$#$index ) {

[15:40] <mj41>     $prev_tut_fn = $tut_fn;

[15:40] <mj41>     $tut_fn = $index[ $tut_num ];

[15:40] <mj41>     if ( $tut_num+1 <= $#$index ) {   $next_tut_fn = $index[ $tut_num + 1 ];   } else {   $next_tut_fn = undef;   }

[15:40] <ninereasons> go, go, nothingmuch  preach

[15:41] <autrijus> infloop fixed.

[15:41] <autrijus> I think.

[15:42] <nothingmuch> autrijus: do you know if there is an $?ITER var?

[15:42] <nothingmuch> i resort to many 'my $i; for (@_){ $i++; ... }' things in p5

[15:42] <nothingmuch> i don't like that

[15:42] <nothingmuch> i think it's useful enough that we can subvert p6l

[15:42] <nothingmuch> in which case this will look like:

[15:42] <autrijus> r1884

[15:42] <nothingmuch> for $tut_num (@index) {

[15:43] <nothingmuch> no

[15:43] <nothingmuch> acki

[15:43] <machack666> nothingmuch: wasn't there a discussion about for @ar.kv?

[15:43] <autrijus> eh. you do

[15:43] <nothingmuch> for $tut_num (0 .. @index.elems - 2){

[15:43] <autrijus> for @index.kv { ... }

[15:44] <autrijus> that even works now

[15:44] <nothingmuch> ah, that's cool

[15:44] <nothingmuch> ok, so

[15:44] <nothingmuch> for @index.kv -> ($index, $value) ?

[15:44] <nothingmuch> or do you need to take the pair apart in the loop?

[15:44] <autrijus> for @index.kv -> $idx, $val { ... }

[15:44] <nothingmuch> ok

[15:44] <autrijus> or, implicitly

[15:44] <autrijus> for @index.kv -> { say "$^i: $^x" }

[15:45] <nothingmuch> $^key, $^value; # they sort ok ;-)

[15:45] <autrijus> yeah, isn't the alphabets great.

[15:45] <autrijus> nothingmuch: can you run another round of smokes?

[15:45] <autrijus> I'm pretty confident it's not looping now

[15:45] <nothingmuch> running

[15:46] <nothingmuch> i think we should be really nasty with this one though

[15:47] <nothingmuch> for (@index[0 .. @index.elems - 2] ¥ @index[1...]) {

[15:47] <nothingmuch> 	....

[15:47] <nothingmuch> }

[15:47] <nothingmuch> maybe the subscript slices can be niftier?

[15:47] <nothingmuch> $^a is tut

[15:47] <nothingmuch> $^b is next

[15:48] <nothingmuch> what does the rest of the loop look like?

[15:48] <ninereasons> with parens, is the -> arrow is not necessary for implicit vars; isn't that right?

[15:48] <nothingmuch> i prefer $^former and $^latter

[15:48] <nothingmuch> =)

[15:48] <nothingmuch> i think it shouldn't be

[15:48] <nothingmuch> but i have no clue

[15:49] <PerlJam> -> is not needed for $^foo

[15:49] <machack666> if infinite slices do the right thing􏿽x81, does for (@index[0..Inf -2]) do the right thing as well?

[15:49] <nothingmuch> can you say 'for (@index[0 .. -2] ¥ @index[1...]) {'?

[15:49] <PerlJam> they are completely orthogonal.

[15:49] <nothingmuch> machack666: i'm not 100% sure, we had a discussion on that

[15:49] <nothingmuch> on 0 .. -2 doing the right thing

[15:49] <nothingmuch> that is, really meaning 0 .. @index.elems

[15:49] <PerlJam> machack666: I would think not.

[15:50] <jabbot> pugs - 1883 - * hash_ref infinite loop fixed.

[15:50] <jabbot> pugs - 1884 - * do not allow storing into constant has

[15:50] <PerlJam> nothingmuch: same to you.

[15:50] <nothingmuch> but i think 0 .. Inf does not mean 0 .. @index.elems

[15:50] <nothingmuch> i don't remember what the conclusions were

[15:50] <machack666> it seems like there could be a handy shorthand for that

[15:50] <PerlJam> nothingmuch: it does.

[15:50] <PerlJam> well, it *can*

[15:50] <nothingmuch> PerlJam: sorry, that came out stupid

[15:50] <nothingmuch> i think it does not mean that syntatically

[15:50] <nothingmuch> the consequences are the same

[15:50] <nothingmuch> but Inf -2 is Inf, not @index.elems -2

[15:51] <nothingmuch> woah, idea:

[15:51] <machack666> but only if - binds tighter than Inf

[15:51] <machack666> :)

[15:51] <nothingmuch> @array![-2, -1]

[15:51] <theorbtwo> Hm, if Inf-2 became Inf but something-2.

[15:51] <nothingmuch> negated subscripts

[15:51] <nothingmuch> or maybe [^ ]

[15:51] <theorbtwo> Er, something<-2>

[15:51] <PerlJam> nothingmuch: yeah, I thought of that too just now (I'd use ! but in a different place)

[15:52] <machack666> or something<..-2> : Inf from the other direction!

[15:52] <nothingmuch> you mean @array[!-2]?

[15:52] <PerlJam> nothingmuch: yep

[15:52] <integral> Perhaps a smaller infinity that really is only as big as the thing indexed?   So Inf-2 = Inf, LittleInf-2 = @whatever.elems-2

[15:52] <nothingmuch> that is i-2 is '-2 but false'?

[15:52] <nothingmuch> that's nice

[15:52] <nothingmuch> i prefer yours, it's much more flexible

[15:52] <nothingmuch> but then we'd have to include set operations on subscripts

[15:52] <nothingmuch> and make them high order objects

[15:52] <nothingmuch> (which i wouldn't mind, really, they should be very useful)

[15:53] <nothingmuch> i'll write to P6l

[15:53] <autrijus> $ ./pugs -e "require_haskell 'SHA1__0_0_1.o'; say sha1('')"

[15:53] <autrijus> da39a3ee5e6b4b0d3255bfef95601890afd80709

[15:53] <theorbtwo> Yey!

[15:54] <integral> autrijus++

[15:54] <autrijus> theorbtwo++

[15:54] <autrijus> dons++

[15:54] <rindolf> autrijus: what about me?

[15:54] <autrijus> now, to go from here to "require SHA1;"

[15:54] <Khisanth> that is with the plugins?

[15:54] <autrijus> Khisanth: yes, with hs-plugins

[15:54] <autrijus> you can grab http://tpe.freepan.org/repos/ingy/SHA1/

[15:54] <autrijus> install pugs, install that

[15:54] <Khisanth> the 0_0 looks funny :)

[15:54] <autrijus> and voila.

[15:54] <autrijus> it will go away :)

[15:54] <autrijus> it's version number.

[15:55] <Khisanth> hrm it's a .o not a .so?

[15:55] <theorbtwo> Don't we need it to support multiple installed versions of the same module?

[15:55] <autrijus> we do

[15:55] <autrijus> it will go away from the syntax.

[15:55] <autrijus> not from the filesystem.

[15:55] <autrijus> "require SHA1" needs to figure out which .o

[15:55] <theorbtwo> (For that matter, shouldn't there be an "INGY" in there somewhere.)

[15:55] <theorbtwo> Ah.

[15:55] <autrijus> ingy++ # too

[15:56] <theorbtwo> Ah!

[15:56] <theorbtwo> The '&':name is what was missing.

[15:56] <autrijus> yup.

[15:57] <autrijus> entirely my fault.

[15:57] <autrijus> also you need to point getConfig to it.

[15:57] <autrijus> so it knows archlib etc.

[15:57] <autrijus> also I instrumented Perl6::MakeMaker to install things from src/.

[15:57] <autrijus> it should go to package-specifc dirs later.

[15:57] <autrijus> but now I don't care :)

[15:58] <theorbtwo> OK.

[15:59] <nothingmuch> machack666: so what does the rest of that recipe look like?

[15:59] <jabbot> pugs - 1885 - * require_haskell Really Works.

[16:01] <nothingmuch> PerlJam: Message-ID: [email@hidden.address]
[16:02] <nothingmuch> autrijus: assign.t seems to hang

[16:02] <ninereasons> which version, nothingmuch?  after 1880 ?

[16:02] <nothingmuch> 1884

[16:03] <autrijus> gah, it hangs _again_ ?

[16:03] <autrijus> sorry :-(

[16:03] <autrijus> gimme a sec.

[16:03] <nothingmuch> yup

[16:03] <nothingmuch> ssh eris

[16:03] <nothingmuch> you know you want to

[16:03] <nothingmuch> because I have to go home

[16:04] <autrijus> okie.

[16:04] <nothingmuch> i've setgid everything to my group, and chmodded so i have write, so we should be able to get along as long as your umask is sane

[16:05] <mj41> @a.elems-1 == @a.last_or_something_like ?

[16:05] <autrijus> danke. sorry for causing this much trouble

[16:05] <nothingmuch> that is, insane

[16:05] <nothingmuch> no trouble

[16:05] <nothingmuch> i opened the shell account precisely for this purpose

[16:05] <nothingmuch> machack666: ping

[16:05] <PerlJam> nothingmuch: you know you're going to get back responses like @array[all(0..,none(-2,-1)).list]  (or whatever the syntax is to get a list of all of the values in a junction).

[16:06] <machack666> nothingmuch: mj41 was the guy with the recipe, I beieve

[16:06] <nothingmuch> that sucks

[16:06] <nothingmuch> ah

[16:06] <nothingmuch> mj41: ping

[16:06] <nothingmuch> ;-)

[16:06] <nothingmuch> sorry machack666 

[16:06] <mj41> for $a.kv -> $idx, $val {

[16:06] <mj41>     if ( $idx > 0 ) { $prev = $a[$idx-1] } else { $prev = undef };

[16:06] <mj41>     if ( $idx + 1 < $a.elems ) { $next = $a[$idx+1] } else { $next = undef };

[16:06] <mj41> }

[16:06] <nothingmuch> where is the tut_num example coming from?

[16:06] <machack666> i'm too busy doing productive work, like getting utf-8 support working with emacs.  ;)

[16:06] <mj41> sorry

[16:07] <nothingmuch> i'm not really sure exactly what it does

[16:07] <autrijus> now, let's see if it works....

[16:07] * autrijus crosses fingers

[16:08] <autrijus> $ ./pugs -MSHA1 -e "say sha1('')"

[16:08] <autrijus> da39a3ee5e6b4b0d3255bfef95601890afd80709

[16:08] <autrijus> yes! yes!

[16:08] * nothingmuch crosses fingers too

[16:08] <nothingmuch> autrijus++

[16:08] <nothingmuch> mj41?

[16:08] <PerlJam> autrijus: excellent!  You've laid the foundation for the SHA-NA-NA module!  ;-)

[16:09] * PerlJam wonders if the humor is lost on this audience.

[16:09] <jabbot> pugs - 1886 - * pugs -MSHA1 -e "say sha1('')"

[16:10] <theorbtwo> s/NA/NaN/g

[16:10] * theorbtwo got the reference after a bit.

[16:10] <PerlJam> Perhaps I'm just an old american.

[16:11] <nothingmuch> ha ha ha ha!

[16:11] <nothingmuch> i was away for a second, i promise

[16:11] <nothingmuch> *cough*

[16:12] <nothingmuch> mj41: see nopaste

[16:12] <nothingmuch> perlbot nop

[16:12] <nothingmuch> perlbot nopaste

[16:12] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[16:13] <pasteling> "nothingmuch" at 212.143.92.226 pasted "for loop, with $prev and $next" (6 lines, 146B) at http://sial.org/pbot/9269

[16:13] <nothingmuch> err, the first subscript should be [email@hidden.address]
[16:14] * nothingmuch leaves

[16:15] *** bradb is now known as bradb|out

[16:18] <mj41> $pugs.can(zip) ?

[16:19] <theorbtwo> pugs -e "@foo=zip('a'..'f', 10..15); say @foo.perl"

[16:19] <stevan> PerlJam: I got your reference, ... but 10 minutes late after reading the backlog :)

[16:20] <mj41> No compatible subroutine found: &zip

[16:21] <theorbtwo> Hm?  I thought it worked...

[16:21] <stevan> mj41: that doenst mean it is not there,.. it just means you didnt supply the right args

[16:21] <stevan> t/builtins/list/zip.t

[16:22] <autrijus> bad precedence for "zip"

[16:22] <autrijus> someone wrote "left" where it should be "pre"

[16:23] <machack666> are here docs supported in pugs?

[16:23] <autrijus> no.

[16:24] <machack666> which Synopsys talks about here docs?  a non-existant one?  ;)

[16:24] <machack666> i'm trying to translate some recipies and I know that at least the quoting mechanism has changed.  I'd like to find more info about where they can go, etc...

[16:25] <pasteling> "mj41" at 147.229.221.107 pasted "array prev and next if defined, good enough?" (12 lines, 356B) at http://sial.org/pbot/9270

[16:27] <autrijus> zip() is in.

[16:27] <autrijus> machack666: qq:to

[16:27] <autrijus> S02.

[16:27] <machack666> autrijus: thx

[16:29] <jabbot> pugs - 1887 - * zip().

[16:30] <theorbtwo> D'oh!  I forgot the -i on my grep.

[16:32] <autrijus> now going back to fix assign.t loop...

[16:33] <autrijus> theorbtwo: so, now mut rec is not a problem for us, I think I'll release 6.2.0 with mutrec

[16:33] <autrijus> is "make optimized" still bad?

[16:34] <theorbtwo> Sounds good to me, autrijus.

[16:36] <stevan> autrijus: trying make optimized right now

[16:37] <ninereasons> S02 makes it sound like [email@hidden.address] is the literal equivalent of $#foo.  is that correct?

[16:38] <stevan> hmm, so what would (0 .. Inf).end() do?

[16:38] <autrijus> looks so

[16:38] <autrijus> stevan: it will probably return Infinity after either constant time or nonconstant time.

[16:39] <jabbot> pugs - 1888 - * deref scalar in value context.

[16:39] <jabbot> pugs - 1889 - * oops, remove debug

[16:40] <ninereasons> I don't understand what larry means by [email@hidden.address] or [-1]' ?

[16:40] * theorbtwo grins.

[16:40] <autrijus> it means that

[16:40] <theorbtwo> I'd hope after constant time.

[16:40] <autrijus> @foo[$#foo]

[16:40] <autrijus> needs to written as @foo[-1].

[16:40] <autrijus> hth.

[16:41] <autrijus> stevan: I'm making a round of tests

[16:41] <autrijus> I think we're good to preflight.

[16:41] <stevan> autrijus: I am too (make optimized && make test)

[16:42] <autrijus> wait -- lvalue zip?

[16:42] <autrijus> whose idea is it? is it in the synopses?

[16:43] <stevan> where do you see this?

[16:43] <autrijus> zip.t

[16:43] <machack666> make && make test still has failures on mac os x...

[16:43] <autrijus> failures is fine

[16:43] <autrijus> infinite loop is not :)

[16:44] * stevan needs to get more RAM,... make is getting slow

[16:45] <machack666> ok

[16:45] <machack666> do the pipe operators work yet?

[16:46] <autrijus> no

[16:48] <autrijus> I think I see an infinite loop at t/pugsrun/06-dash-help

[16:48] <autrijus> sigh

[16:53] <machack666> hanging on operators/assign (1/51) mac os x w/ hs-plugins

[16:55] <kungfuftr> moo

[16:55] <autrijus> machack666: probably not up to date

[16:57] * kungfuftr reruns smoke again

[16:57] <machack666> i think i'm using the alternate svn server.  is there a sync delay?

[16:57] <autrijus> there is.

[16:57] <Corion> http://datenzoo.de/pugs/win2k.html - r1887

[16:57] <autrijus> please use svn.openfoundry.org one

[16:58] <gaal> 1890?

[16:58] <machack666> i don't really know svn well -- how to change without rechecking?

[16:58] <iblech> [t/operators/assign.t] -- 51/51 passes @r1890

[16:58] <Corion> Hmmm. In abs.t - it checks for Int, but type Num is just as good IMO, or even better as a result of abs()

[16:59] <Corion> Oh. But they mutate the type ... that's the bad thing about it, now I realize :)

[16:59] <nothingmuch> evening

[17:00] <jabbot> pugs - 1890 - * zip now uses length of longest; zip.t 

[17:01] <Corion> Eh... @INC.perl.say outputs "\('... " - what's the backslash doing there?

[17:01] <autrijus> what's "boustrophedonic"?

[17:01] <autrijus> Corion: it means that it's a reference to a list...

[17:01] <ninereasons> maybe 'undef' behaves differently on win32 ?  assign.t is failing there on r1887, for Corion

[17:02] <nothingmuch> http://www.worldwidewords.org/weirdwords/ww-bou1.htm

[17:02] <Corion> autrijus: Ah. Hmmm... which makes my reparsing test bork

[17:02] <Corion> ninereasons: It loops endlessly until I killed assign.t

[17:02] <cognominal> An ancient mode of writing, in alternate directions, one line

[17:02] <cognominal>    from left to right, and the next from right to left (as

[17:02] <cognominal>    fields are plowed), as in early Greek and Hittite.

[17:02] <autrijus> Corion: I think we can drop that... but then, 

[17:02] <autrijus> $foo = @INC; $foo.perl

[17:02] <autrijus> will need the \

[17:03] <Corion> autrijus: I don't mind changing my test :)

[17:03] <autrijus> I don't think I can fix it right now

[17:03] <cognominal> http://www.perlmonks.org/?node_id=45852

[17:03] <autrijus> yay, please do :)

[17:03] <nothingmuch> autrijus: did the tests pass on eris?

[17:03] <Corion> Aiee - and somebody changed the option parsing :)

[17:05] <autrijus> nothingmuch: had not rerun yet, still fixing bugs

[17:05] <Steve_p> nopaste?

[17:05] <gaal> autrijus: think printers

[17:05] <nothingmuch> ok, i'm restarting the loop now

[17:05] * autrijus thinks printers

[17:05] <gaal> old printers

[17:05] * nothingmuch makes noises

[17:05] <gaal> that took a while to move the printing head

[17:05] <nothingmuch> bzzzzzzzz, kashclick, bzzzzzzzzzzzzzz, kashclick, bzzzzzzzz

[17:06] <nothingmuch> ah!

[17:06] <gaal> if it's already at one side, why rewind it before printing another line?

[17:06] <nothingmuch> trrz trrz trrzz trzzz

[17:06] <nothingmuch> (the old one was a very quick laser printer)

[17:06] <gaal> no CR

[17:06] <gaal> only LF

[17:06] <gaal> these guys were the earliest unix users!

[17:06] <gaal> or mac users, i can never remember.

[17:07] <nothingmuch> gaal: join("\b\b", split(//, "other line");

[17:07] <nothingmuch> ;-)

[17:07] <theorbtwo> BTW, most modern inkjet printers print that way -- they just reverse every other line.

[17:08] <mj41> 111 users

[17:08] <gaal> so even modern printers are boustrophedonic. :)

[17:08] <nothingmuch> mj41: so what does that example do?

[17:09] <jabbot> pugs - 1891 - * split() should not strip leading field

[17:09] <jabbot> pugs - 1892 - * length.t all passes; reenable io

[17:10] <Steve_p> nothingmuch, --- Test-TAP-Model_0/t/basic.t  2005-04-12 10:12:01.939300464 -0500

[17:10] <Steve_p> Crap!

[17:10] <Steve_p> nothingmuch,  http://paste.husk.org/3001

[17:10] <gaal> we actually have the word boustrophedonic in the pugs source tree.

[17:10] <Steve_p> Test coverage for Test::TAP::Model at 100%

[17:10] <nothingmuch> Steve_p: wants to darcs send?

[17:10] <nothingmuch> yay!

[17:11] <nothingmuch> Steve_p++; # amazing work on p5p, and also here

[17:12] <ninereasons> Corion does >= r1890 still hang for you?

[17:12] <Corion> ninereasons: Dunno - just fixing a test then resmoking

[17:12] <Juerd> @print = @lines[0... :by(2)] Y @lines[1... :by(2)]>>.reverse

[17:12] <nothingmuch> dinnertime

[17:12] <autrijus> 06-dash-help no longer borks.

[17:12] <Juerd> Except real life wants CRLF to stay at the end, and not be moved to /^LFCR/

[17:12] <nothingmuch> Steve_p: if you darcs send by the time i'm back i won't apply, there's a conflict so far

[17:13] <nothingmuch> so i'll merge in a bit

[17:13] <ninereasons> i was able to find a backversion of r1887, and it did hang as you describe, also on freebsd

[17:13] * autrijus looks some more at testgraph

[17:13] <wolverian> Juerd: is p5 smart about that?

[17:13] <wolverian> it is, apparently.

[17:13] <wolverian> er, no it's not.

[17:13] <wolverian> damn you reverse in list context.

[17:15] <Juerd> wolverian: P5 doesn't have Y, P5 doesn't have ..Inf, P5 doesn't have :by, P5 doesn't have >> and it doesn't have a reverse method on arrays. What exactly is left to be smart about? :)

[17:15] <autrijus> :D

[17:15] <autrijus> Juerd++

[17:15] <wolverian> Juerd: the CLRF :)

[17:15] * Juerd only now realises how hard this same thing would be in Perl 5 :)

[17:15] <Juerd> wolverian: Oh! :)

[17:16] <Juerd> wolverian: Just autochomp and add it again when printing

[17:16] <Juerd> Easiest solution :)

[17:16] <Juerd> s/reverse method on arrays/reverse method on scalars/, though it has neither.

[17:17] <Juerd> And of course, you want LF only, not CR

[17:17] <ninereasons> is '@ARGS is chomped' still current, or was it abandoned?

[17:17] <Juerd> CR kind of defeats the purpose here 

[17:18] <machack666> dumb question: will infix:<Y> be an actual synonym for infix:<&yen;> ?

[17:18] <Juerd> machack666: It already is.

[17:19] <machack666> unicode, schmunicode! ;)

[17:19] <jabbot> pugs - 1893 - * any junctions must be reduced.

[17:19] <jabbot> pugs - 1894 - Restored -I test due to @INC.perl.say re

[17:20] * Khisanth wonders if Perl7 will have Z

[17:20] * pjcj wonders if Perl7 will be Z

[17:23] * Steve_p is Z

[17:23] * machack666 is going to digest some more on the synopses

[17:23] <machack666> bye all

[17:23] * hlen wonders what Y does

[17:24] <Juerd> hlafarge: It is zip()

[17:24] <Juerd> eh

[17:24] <Juerd> s/hlafarge/hlen/

[17:24] <Corion> My test smoke is still running, but didn't hang.

[17:24] <Corion> r1894

[17:24] <hlen> Juerd, ok.. thanks, i'll look into zip()

[17:25] <gaal> it's time to think of -j3 for make test/yaml_harness... a complete smoke is no longer very fast

[17:25] * ninereasons found 'is chomped' in E02

[17:25] <Corion> gaal: Was it ever? :)

[17:25] <Juerd> hlen: See also http://juerd.nl/files/slides/2005dpw/en/perl6op.html for a very quick introduction

[17:26] <gaal> wasn't too bad a month ago

[17:26] <hlen> Juerd, ok, thanks again =)

[17:27] <pdcawley> Woo... summary's written.

[17:27] <Corion> r1894 - http://datenzoo.de/pugs/win2k.html

[17:28] <Corion> pdcawley++

[17:28] <Juerd> pdcawley: Are you writing the p6[lci] summaries again now?

[17:28] <pdcawley> Every other week.

[17:28] <Juerd> Ah, good!

[17:28] <pdcawley> Keeps the workload manageable for both Matt and me.

[17:28] <Juerd> pdcawley++

[17:28] <pdcawley> I know from experience that if you slip to fortnightly the work gets really, really, heavy.

[17:29] <nothingmuch> gaal: i'll try to hack that into Test::TAP::Blah

[17:29] <Corion> BTW, I get some unexpected successes - should I hunt them down and promote them ?

[17:29] <nothingmuch> should be easy to do with forks, since the data is easily serializable

[17:29] <nothingmuch> but i would like to do it in a subclass

[17:29] <Corion> (given.t, sub_return_values.t, short_circuit.t)

[17:32] <elmex> ack

[17:34] <autrijus> I'll promote given.t.

[17:34] * nothingmuch returns

[17:34] <autrijus> you can do the rest

[17:35] <Corion> autrijus: Sir, YES! Sir!

[17:36] <nothingmuch> Steve_p: ping

[17:36] <nothingmuch> Steve_ping

[17:38] <nothingmuch> autrijus: 06-dash-version.t

[17:38] <nothingmuch> hangs

[17:39] <gaal> not on r1890/msys

[17:39] * nothingmuch svn ups once more

[17:39] <Corion> Weird - one "unexpected success" seems to be a Test.pm bug - it is reported as TODO, even though it is a plain "is()" call

[17:40] <nothingmuch> Corion: that happens usually when there are '#' in the test desc

[17:40] <nothingmuch> and it's a harness bug, not a Test.pm bug

[17:40] <nothingmuch> and i'm not 100% sure it's a bug

[17:40] <Corion> nothingmuch: I'm looking if it is mentioned in force_todo :)

[17:40] <Corion> Yep - they are still in force_todo :)

[17:40] <nothingmuch> pugs t/blah.t | grep '#';

[17:41] <nothingmuch> i saw a grep that highlighted matches

[17:41] <Corion> force_todo should output a real TODO message (like, "for release")

[17:41] * nothingmuch wonders where that was

[17:41] <nothingmuch> where is that?

[17:42] <autrijus> Test.pm

[17:42] * Corion commits

[17:42] * nothingmuch is sooo out date

[17:42] * autrijus commits

[17:43] <autrijus> looking good

[17:43] * nothingmuch reloops

[17:44] <autrijus> ok, r1897.

[17:44] <autrijus> shower now; I'll do preflight + release when I get back.

[17:46] <autrijus> meanwhile, if anyone fancies reading at svn log and add the past few hours' work to ChangeLog... :)

[17:46] <autrijus> brb &

[17:49] <jabbot> pugs - 1895 - Untodoed some succeeding tests

[17:49] <jabbot> pugs - 1896 - * given.t all passes, thanks Eris.

[17:49] <jabbot> pugs - 1897 - * 06-dash-version should not match again

[17:51] <ninereasons> it's nice that jabbot walks toward us when speaking now, instead of away as before.

[17:51] * shapr agrees

[17:51] <shapr> Hail Eris!

[17:51] <nothingmuch> hail eris!

[17:52] <pasteling> "Corion" at 217.86.61.174 pasted "Coroutine testbed" (63 lines, 1.3K) at http://sial.org/pbot/9271

[17:52] <Corion> I've pasted my coroutine testbed (which I haven't even once run through Pugs), in case somebody wants to toy with it. I won't get to toying with it during this week.

[17:52] <gaal> [OT] cuuute! http://perlnomic.org/ (i suppose i'm a fan of Peter Suber)

[17:53] <Corion> It's supposed to become an interface to irc, of course, but I've left out the sockets stuff for the start.

[18:02] <Steve_p> nothingmuch?

[18:03] <nothingmuch> yes

[18:05] <Aankhen``> Yey, the array_ref tests aren't hanging any longer!

[18:07] <nothingmuch> Steve_p?

[18:08] <gaal> r1901, but this is a fix in the yaml harness and doesn't require another smoke round, folks.

[18:09] <jabbot> pugs - 1898 - <Corion> force_todo should output a real

[18:09] <jabbot> pugs - 1899 - * repair want.t

[18:09] <jabbot> pugs - 1900 - * splat now flattens for real

[18:09] <jabbot> pugs - 1901 - fix failing test xref on msys

[18:09] <autrijus> ***  Evl: App "circumfix:{}" ('aasd')

[18:10] <autrijus> wha?

[18:10] <autrijus> I didn't even know we have circumfix:

[18:10] <nothingmuch> circumfix is like hyper, right?

[18:10] <autrijus> oh wow we do.

[18:10] <autrijus> no, it's { }

[18:11] <nothingmuch> i think hyper is a circumfix op though

[18:11] <nothingmuch> even if { } is too

[18:12] <autrijus> oh. ok.

[18:12] <autrijus> anyway, fixing pair.t

[18:12] <autrijus> 4 tests to go!

[18:13] <gaal> msys: t/magicals/pid.t

[18:13] <gaal> '.' is not recognized as an internal or external command,

[18:13] <gaal> operable program or batch file.

[18:14] <gaal> and: t/pugsbugs/env_is_readonly.t 

[18:14] <gaal> Can't locate File/Spec.pm in @INC (@INC contains: ext/Test/lib /usr/lib/perl6/msys /usr/lib/perl6 /usr/lib/perl6/site_perl/msys /usr/lib/perl6/site_perl . blib6/lib).

[18:14] <gaal> Val VUndef

[18:15] <gaal> we dont' support cygwin at all, do we? i should just s/cygwin/msys all over t/

[18:16] <kungfuftr> latets smoke on my box is up

[18:16] <gaal> oh, my bad re:env_is_readonly, right? i should put blib in the search path.

[18:17] <Corion> Heh - thanks to whoever added that fix upon my blathering

[18:17] <gaal> so, autrijus, can i chuck cygwin for msys?

[18:17] <nothingmuch> pugs: cannot cast from VList [] to AST.VCode

[18:17] <nothingmuch> for every test

[18:17] <crysflame> msys?

[18:17] <gaal> Corion, the win32 couldn't xref blah? that was me

[18:18] <gaal> crysflame: msys ~~ mingw

[18:18] <Corion> gaal: I meant r1989

[18:18] <crysflame> ok

[18:18] <Corion> err - r1898

[18:18] <gaal> i don't know why they needed two names

[18:18] <gaal> ah

[18:18] <mj41> MSYS or Minimal SYStem is a POSIX and Bourne shell environment use with MinGW

[18:19] <gaal> so is the arch ever mingw? on my box it's msys

[18:19] <gaal> i've never seen mingw

[18:19] <gaal> or could it be that it depends on the order you install them?

[18:20] <kungfuftr> autrijus: know where to get binary ghc package for freebsd 5.3?

[18:20] <autrijus> kungfuftr: pkg_add should do no?

[18:20] <autrijus> clkao mentioned somewhere has it

[18:21] <kungfuftr> autrijus: pkg_add -r ghc doesn't have any on the mirrors

[18:22] <kungfuftr> gollem: ye cunt!

[18:22] * shapr blinks

[18:22] <kungfuftr> =0)

[18:22] <gollem> you know it

[18:22] <shapr> är du säkert?

[18:22] <shapr> finns det nån annat?

[18:22] <kungfuftr> gollem est my housemate... a fellow perl geek

[18:23] <shapr> jaså

[18:23] <shapr> det är okej

[18:23] <mj41> MSWin32 - nmake - ActivePerl or 

[18:23] <mj41> mingw - mingw32-make - MinGW and ActivePerl or

[18:23] <mj41> msys - make - MinGW, MSYS and ActiveState or

[18:23] <mj41> msys - make - MinGW, MSYS and MSYS-DTK (MinGW perl) 

[18:23] <gollem> nej , finns ingen annan

[18:23] <shapr> är du svensk?

[18:23] <gollem> japp

[18:23] <shapr> hur kommer du till uk?

[18:23] <gollem> hehe

[18:23] <gollem> bra fr􏿽xE5ga

[18:23] <kungfuftr> bah!

[18:23] <gollem> fick jobb

[18:24] <shapr> intressant

[18:24] <shapr> kungfuftr: cool, you live with a swede

[18:24] <gollem> it's very very cool..

[18:24] <gollem> :)

[18:25] <shapr> men jag 􏿽xE4r inte s􏿽xE4kert om jag l􏿽xE5ter svenska ocks􏿽xE5

[18:25] <shapr> jag kommer fr􏿽xE5n USA, men bor i Boden

[18:25] <gollem> ok

[18:25] <gollem> jag bodde i Lule􏿽xE5 fram till i december d􏿽xE5 jag flyttade hit

[18:25] <shapr> well dang

[18:25] <shapr> I never meet the local geeks

[18:25] <shapr> that sucks

[18:25] <gollem> hehe

[18:25] <shapr> Or maybe I did meet you?

[18:26] <gollem> doubt it

[18:26] <shapr> Did you ever meet the crazy american person with a reputation for writing Haskell?

[18:26] <shapr> The unicyclist in Boden?

[18:26] <shapr> Ok, never mind :-)

[18:26] <gollem> yes

[18:26] <gollem> err

[18:26] <gollem> hmm

[18:26] <gollem> in Boden? no ,maybe not

[18:27] <shapr> I hung out in Lule􏿽xE5 some with an Irish friend of mine.

[18:27] <gollem> i went to the Uni there

[18:28] <shapr> Do you know Tony Scully in CDH/CDT?

[18:28] <gollem> no

[18:28] <shapr> ah well

[18:28] <shapr> tyv􏿽xE4rr

[18:29] <gollem> what is an american doing in Boden anyways?

[18:29] <shapr> I met this chick on icq, (50,000 words omitted) and now I live in Boden.

[18:29] <nothingmuch> hah

[18:29] <kungfuftr> what is anyone doing on boden is a better question

[18:29] <nothingmuch> castaway and theorbtwo both have such stories

[18:29] <Corion> Yay! The segfault when evaluating NaNs has gone too!

[18:30] <jabbot> pugs - 1902 - * fix named vindings.

[18:30] <jabbot> pugs - 1903 - * pair.t and multidum repaired.

[18:30] <jabbot> pugs - 1904 - * junction_functions repaired.

[18:30] <gollem> shapr: i hope she's worth it...

[18:30] <Corion> nothingmuch: But they sound so alike. It's as if they copy their story.

[18:30] * shapr grins

[18:31] <shapr> It's not a great sacrifice to live in Boden. It's a beautiful place, and I have internet.

[18:31] <gollem> how long have you lived there?

[18:31] <zuulvin_> wedwdw

[18:31] <zuulvin_> dddddd

[18:31] <shapr> two years in Boden, three years in Tornio before that.

[18:31] <shapr> puhutko suomea?

[18:31] <gollem> ooh

[18:33] <autrijus> Corion: win32 happy?

[18:35] <Corion> autrijus: Yep

[18:35] <autrijus> care to do another full test run?

[18:35] <autrijus> I think I'm ready for preflight.

[18:35] <Corion> There are some Win32 issues (PID, ENV), but nothing pressing :)

[18:35] <autrijus> reviewing changelog now

[18:35] <nothingmuch> autrijus: should i try to finish mine for once?

[18:35] <autrijus> yeah, sure, as long as the tests are TODOed/skipped

[18:35] <autrijus> nothingmuch: sure!

[18:35] <nothingmuch> it is at oo

[18:35] <Corion> http://datenzoo.de/pugs/win2k.html - r1901

[18:36] <Corion> (and I have to fix another of my tests that fails due to the changed string-eval semantics)

[18:36] <autrijus> nod. I've fixed all the visible reds here

[18:36] <autrijus> or forced todoed them

[18:36] <nothingmuch> t/operators/binding.t

[18:36] <nothingmuch> # Looks like you failed 1 tests of 9

[18:36] <autrijus> ok, take your time

[18:36] <nothingmuch> r1902 finishing soon

[18:36] <nothingmuch> bad plan else where

[18:36] <kungfuftr> autrijus: http://kungfuftr.com/pugs-smoke.html too

[18:36] <autrijus> r1906 has bindings done

[18:37] <nothingmuch> beh, you'll see

[18:37] <autrijus> r1906 is all clean here

[18:37] <gaal> t/builtins/io/io_in_for_loops...............ok                               

[18:37] <gaal>         1/49 unexpectedly succeeded

[18:37] <nothingmuch> ok, it'll update soon

[18:37] <autrijus> I think, at least

[18:37] <kungfuftr> still doing another run

[18:37] <nothingmuch> kungfuftr: hopefully this will soon be consolidated

[18:37] <nothingmuch> i'm working hard on this

[18:37] <nothingmuch> if you want to help with Test::TAP::Model i'll be grateful

[18:37] <kungfuftr> nothingmuch: oh... nice

[18:37] <nothingmuch> darcs repo is up

[18:37] <kungfuftr> yup, been trying to do test stuff last few days

[18:38] <kungfuftr> real life--

[18:38] <autrijus> magickally, "make optimized" worked again

[18:38] <Corion> Oooo - conflict :)

[18:38] <autrijus> oooh exciting

[18:39] <kungfuftr> oooh... cheese!

[18:39] <Corion> Nah - I think the conflict was either resolved or gaal directly fixed the test-bug as well :)

[18:40] <jabbot> pugs - 1905 - add msys to windows junctions

[18:40] <jabbot> pugs - 1906 - * fix xor; clean the rest of tests

[18:40] <gaal> t/magicals/pid..............................NOK 1# Looks like you failed 1 tests of 1

[18:41] <Corion> gaal: PIDs are broken on Win32

[18:41] <Corion> (all PIDs are "1" :) )

[18:41] <gaal> ah :)

[18:41] <Corion> gaal: I added a test for that, because one day I intend to fix it :)

[18:41] <gaal> good, good

[18:41] <Corion> gaal: The test checks if the child PID differs from our $*PID :)

[18:41] * Corion does another smokeround

[18:42] <gaal> t/operators/binding.........................NOK 7# Looks like you failed 1 tests of 9

[18:42] <Corion> I hope that we get embedding soon, so I can start stealing from Perl5 and/or using Win32 DLL functions

[18:42] <gaal> t/operators/filetest........................FAILED tests 2-3, 5-6, 23, 26    

[18:42] <gaal>         Failed 6/30 tests, 80.00% okay (less 4 skipped tests: 20 okay, 66.67%)

[18:42] <Corion> Heh. Should we have #pugssmoke, where everybody does live reports of their test runs? :)

[18:43] <kungfuftr> how longs kwiki.org been dead?

[18:43] <gaal> t/operators/short_circuit...................FAILED tests 15, 19

[18:43] <gaal> tell me if i should stop sayig all this

[18:43] <gaal> we have a problem with how slow these cycles are

[18:44] <kungfuftr> gaal: run the smoke and upload the html to somewhere

[18:44] <kungfuftr> =0)

[18:44] <gaal> t/pugsrun/01-multiple-e.....................FAILED test 7 # Corion, this one's for you :)

[18:44] <gaal> kff, but that has latency

[18:44] <Steve_p> kungfuftr, seen reports from yesterday

[18:44] <jabbot> Steve_p: I havn't seen reports , Steve_p

[18:44] <autrijus> I force_todoed them

[18:44] <Corion> gaal: Fixed in the latest commit I think

[18:44] <gaal> how latest is the latest?

[18:44] <nothingmuch> Steve_p: ping

[18:44] <Steve_p> heh

[18:44] <autrijus> r1909.

[18:45] <Corion> r1908 is what I'm smoking

[18:45] <Steve_p> hi nothingmuch

[18:45] <nothingmuch> sent?

[18:45] <autrijus> Corion: it will have one bad plan() in short_circuit

[18:45] <autrijus> otherwise should be fine

[18:45] <autrijus> I'm rerunning another round as well.

[18:45] <nothingmuch> http://nothingmuch.woobling.org/pugs_test_status/

[18:45] <gaal> how do i tell which ver i have co'ed?

[18:45] <Steve_p> Yeah, darcs send said it did

[18:46] <gaal> oh, right, svn info

[18:46] <kungfuftr> gaal: `svn up` should tell you after it's finished

[18:46] * nothingmuch goes to clean the kitchen

[18:46] <gaal> yeah, but i don't want to do that while in the middle of a smoke :)

[18:46] <nothingmuch> Steve_p: i'll check mail soon

[18:47] <gaal> okay, i had 1905.

[18:47] <gaal> see, it's impossible to test when there are four commits before the test is over :)

[18:47] <gaal> and this is a relatively fast machine!

[18:48] <autrijus> t/pugsrun/01-multiple-e.....................ok

[18:48] <autrijus>         1/7 unexpectedly succeeded

[18:48] * nothingmuch 's is still compiling for 190x, dunno which

[18:48] <nothingmuch> but optimized

[18:48] <autrijus> t/pugsbugs/env_is_readonly..................ok

[18:48] <autrijus>         2/3 unexpectedly succeeded

[18:48] <autrijus> known?

[18:48] <autrijus> if yes, remove them from force_todo please

[18:49] <gaal> autrijus, i think this may be a platform-dep issue, because for me that failed.

[18:49] <kungfuftr> 2029!?!?

[18:50] <jabbot> pugs - 1907 - * retract one too eager force_todo

[18:50] <jabbot> pugs - 1908 - Fixed another test that broke due to the

[18:50] <jabbot> pugs - 1909 - * fix test count

[18:50] <gaal> kff, ?

[18:50] <autrijus> CGI is failing:

[18:50] <autrijus> t/basic.t                 21    5  23.81%  7 9-12

[18:50] <autrijus> t/params.t                30    9  30.00%  2 9 11-12 17 24-25 27-28

[18:50] <kungfuftr> what url do i use to co again?

[18:50] <crysflame> like, CGI.pm?!

[18:51] <autrijus> I'll investigate CGI.pm.

[18:51] <autrijus> kungfuftr: http://svn.openfoundry.org/pugs/

[18:51] <kungfuftr> ta

[18:51] <gaal> we need to teach perlbot that

[18:52] <kungfuftr> odd... unrecognised url scheme so svn reports

[18:52] <autrijus> you don't have neon built in?

[18:52] <kungfuftr> don't think so

[18:52] <kungfuftr> bellecks

[18:54] <autrijus> back.

[18:54] <autrijus> I'll deal with the 3 unexpected successes.

[18:56] <autrijus> done.

[18:57] <autrijus> making another round of r1910 tests

[18:57] <Corion> r1908 at http://datenzoo.de/pugs/win2k.html

[18:58] <autrijus> weird

[18:58] <autrijus> t\builtins\io\io_in_for_loops.t

[18:58] <autrijus> I thought I have force_todo there

[18:58] <autrijus> can you run it separately?

[18:58] <autrijus> it looks like that run has no idea of force_todo

[18:59] <autrijus> ChangeLog done.

[19:00] <jabbot> pugs - 1910 - * clean up unexpected tests.

[19:00] <jabbot> pugs - 1911 - * bump version to 6.2.0; add ChangeLog

[19:00] <autrijus> preflight will begin shortly.

[19:00] <Corion> I'm currently smoking r1910 - should I stop/restart/retest ?

[19:00] <autrijus> no, go ahead

[19:01] <Corion> Weird. The force_todo file claims that #26 is todo, but the test output disagrees ...

[19:03] <kungfuftr> right... doing a test run on my 5.3 speddier laptop

[19:03] <autrijus> #26?

[19:03] <Corion> Hah. The output is "(TODO for release)", but I think that the harness wants "#TODO reason"

[19:03] <Corion> autrijus: In io_in_for_loops.t or whatever it's called.

[19:04] <Corion> Hmmm. No, the output is even "# TODO for release". Weird.

[19:07] <autrijus> preflight!

[19:07] <autrijus> http://wagner.elixus.org/~autrijus/tmp/Perl6-Pugs-6.2.0.tar.gz 

[19:07] <castaway> oooh

[19:08] <autrijus> writing to p6c.

[19:09] <wolverian> hmm, pugs has apparently added its Test.pm to my 5.8.4 lib dir.

[19:10] <autrijus> it did that a while ago.

[19:10] <autrijus> I believe it has been fixed. is this a current issue?

[19:10] <wolverian> probably not.

[19:10] <wolverian> removing them and retrying.

[19:10] <autrijus> thanks and sorry.

[19:10] <wolverian> no problem.

[19:12] <Corion> r1910 - http://datenzoo.de/pugs/win2k.html (rsync++)

[19:12] <gaal> Corion, scp -C is good too :)

[19:12] <autrijus> Corion: grab preflight and "nmake test" by hand?

[19:12] <Corion> autrijus: Willdo

[19:13] <Corion> gaal: Does it skip unchanged files?

[19:13] <gaal> no, but it compresses the data.

[19:13] <autrijus> 06-dash-version.t

[19:13] <autrijus> it will fail, that's expected, I'm committing a fix.

[19:14] <autrijus> it's regex matching against 6.0.x.

[19:14] <autrijus> fancy that.

[19:14] <gaal> anyone in tests already? i'm still compiling

[19:15] <kungfuftr> r1911 here

[19:15] <Corion> nmake test running

[19:15] <gaal> btw how bad is it if i make optimized, then svn up a few files, and make w/o optimized? (not happening now, i've started from clean)

[19:15] <Corion> (still compiling) # preflight

[19:15] <stevan> (me too) # preflight

[19:16] <gaal> ah, tests have started.

[19:17] <Corion> t/builtins/io/io_in_for_loops...............ok

[19:17] <autrijus> preflight is expected to have one test file fail (06-dash-version) and nothing else.

[19:17] <Corion> ... so it's a problem of the yaml harness that it doesn't recognize the force_todo stuff

[19:17] <autrijus> I will release the final version if Corion and stevan confirms this status.

[19:18] <Corion> autrijus: Oy! Now I get your 6.0.x comment :)

[19:18] <autrijus> :)

[19:18] <Corion> autrijus: But I wanted to avoid the test to check against the version of the currently running pugs.exe :)

[19:19] <stevan> testing testing testing .....

[19:19] <theorbtwo> Should you disable make optimized in the release?

[19:19] <Corion> ... A project manager falls from the empire state building. As he passes the third floor, he is overhead to say "so far, so good".

[19:19] <kungfuftr> r1911 is clean except for 06-dash-version.t with `make; make test`

[19:20] <jabbot> pugs - 1912 - * isa_ok now OKs

[19:20] <jabbot> pugs - 1913 - * fix version for .002000

[19:20] <jabbot> pugs - 1914 - tests chars, but not adequately; see

[19:20] <jabbot> pugs - 1915 - * oops, wrong regex

[19:20] <jabbot> pugs - 1916 - * we are not 6.0.x anymore

[19:20] <autrijus> theorbtwo: optimized now works.

[19:20] <theorbtwo> Oh, OK.

[19:20] <gaal> PID still fails here

[19:20] <autrijus> for some strange reason

[19:20] <autrijus> gaal: oh? which version? which test?

[19:20] <autrijus> gaal: what's your 

[19:20] <gaal> t/magicals/pid..............................FAILED test 1                    # msys

[19:20] <autrijus> pugs -e "$?OS"

[19:20] <autrijus> pugs -e "$?OS.say"

[19:21] <gaal> ahem.

[19:21] <gaal> $ pugs -e "$?OS.say" 

[19:21] <gaal>  

[19:21] <gaal> unexpected "O" 

[19:21] <gaal> expecting "x", "d", octal digit, "o", "b", digit, fraction, exponent, term postfix, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[19:21] <gaal> NonTerm SourcePos "-e" 1 2

[19:21] <autrijus> pugs -e '$?OS.say'

[19:21] <autrijus> ;)

[19:21] <Corion> magicals/pid.t fails here too. $*PID support is broken on Win32

[19:22] <gaal> yeah, msys :)

[19:22] <Corion> I'll demote that test to todo_

[19:22] <theorbtwo> Hmmpf, can we get something saner?

[19:22] <gaal> t/operators/arith...........................FAILED tests 149-150, 152-153

[19:22] <Corion> autrijus: Or do you want to demote tests there?

[19:22] <gaal> t/operators/filetest........................FAILED tests 2-3, 5-6, 23, 26

[19:22] <autrijus> ok, I added skip.

[19:22] <theorbtwo> (Then msys, that is.)

[19:22] <gaal> huh? that's sane enough, to2

[19:23] <gaal> don't you expect 'cygwin' for $^O when you use that?

[19:23] <gaal> oops $?OS

[19:23] <Corion> t/operators/arith: 13/179 skipped, but otherwise OK on Win2k

[19:23] <theorbtwo> I expect "cygwin" on cygwin systems, "win32" on pure win32 systems.

[19:23] <gaal> well, msys is very much like cygwin.

[19:24] <Corion> t/operators/filetest.t fails FAILED tests 2-3, 5-6, 23, 26

[19:24] <mj41> WinXP infinite loop, IMO:

[19:24] <mj41> pugs -e "use File::Spec; say 'begin'; say abs2rel( '\a' , '\b' ); say 'end';"

[19:24] <Corion> Likely because -s is still unimplemented on Win32

[19:24] <theorbtwo> msys is only a well-known name for those highly familiar with cygwin, no?

[19:25] <stevan> mj41: what does the perl5 File::Spec do?

[19:25] <gaal> do we want force_todo to have platform smarts?

[19:25] <gaal> or is that the road to insanity?

[19:25] <Corion> gaal: I think we should make the platform relevant tests simply todo_

[19:25] <Corion> t/pugsrun/06-dash-version...................FAILED tests 1-8

[19:25] <Corion> (as expected)

[19:26] <gaal> Corion, but then you get unexpected oks on som platforms.

[19:26] <theorbtwo> Um, giving "unexpectedly succeeded" on linux isn't much better then "failed" on win32.

[19:26] <stevan> what about a compromise of todo_win32_* test functions

[19:26] <Corion> Ah - I forgot about the other platforms, true.

[19:26] <Corion> Let's simply make the test smarter then.

[19:26] <gaal> stevan, surely *that* is insane :)

[19:26] <gaal> todo_freebsd

[19:26] <gaal> todo_cray

[19:26] <theorbtwo> todo_qnx!

[19:27] <gaal> todo_zx_spectrum

[19:27] <Corion> todo_linux_freebsd_but_not_netbsd

[19:27] <stevan> todo_commodore_64

[19:27] <kungfuftr> how bout as a parameter? for todo

[19:27] <Corion> Let's simply add another junction to TODO, which contains the OSes :)

[19:27] <theorbtwo> Allo, limbic.

[19:27] <Corion> kungfuftr: You keep reading my mind!

[19:27] <autrijus> don't do that to 6.2.0 yet :)

[19:27] <nothingmuch> damn you Test::Harness!

[19:27] <Limbic_Region> salutations theorbtwo

[19:27] <kungfuftr> =0)

[19:27] <gaal> no!!! skip if $?OS = any<known_bad>

[19:28] <theorbtwo> L~R: http://wagner.elixus.org/~autrijus/tmp/Perl6-Pugs-6.2.0.tar.gz 

[19:28] <Limbic_Region> very productive day for me - haven't been following Pugs at all today - so what's new?

[19:28] <gaal> whoops, i'm slow :)

[19:28] <Limbic_Region> heh - good timing theorbtwo - will have to check it out tomorrow though

[19:28] <stevan> Corion: I like the Junction idea

[19:28] <Corion> stevan: It's just disguised madness IMO.

[19:28] <mj41> perl -e "use File::Spec::Functions qw(abs2rel); print abs2rel( '\a' , '\b' );"

[19:28] <mj41> ..\a

[19:29] <autrijus> actually, realflight.

[19:29] <Corion> Simply make the tests smart enough to care for their platform

[19:29] <gaal> so, summary of failing tests on win32:

[19:29] <gaal> t/magicals/pid.t                           1    1 100.00%  1 

[19:29] <gaal> t/operators/arith.t                      179    4   2.23%  149-150 152-153 

[19:29] <gaal> t/operators/filetest.t                    30    6  20.00%  2-3 5-6 23 26

[19:29] <gaal> t/pugsrun/06-dash-version.t                8    8 100.00%  1-8

[19:29] <kungfuftr> r1916 # running tests with `make optimized; make test`

[19:29] <Corion> autrijus: Still looking good here.

[19:29] <stevan> Corion: madness abounds with Pugs :)

[19:29] <autrijus> http://wagner.elixus.org/~autrijus/Perl6-Pugs-6.2.0.tar.gz 

[19:29] <autrijus> if you are early into the previous test, please drop it

[19:29] <Corion> autrijus: New version?

[19:29] <stevan> autrijus: no problems here either

[19:29] <autrijus> yes, likely to be final one.

[19:30] <jabbot> pugs - 1917 - * pid.t skipped on win32

[19:30] <jabbot> pugs - 1918 - * sporadic test fails reported by gaal a

[19:30] <gaal> i love it how firefox names the download Perl6-Pugs-7.2.0.tar.gz :)

[19:30] <autrijus> :D

[19:30] <Corion> On my version, it was:

[19:30] <Corion> t/magicals/pid.t                           1    1 100.00%  1

[19:30] <Corion> t/operators/filetest.t                    30    6  20.00%  2-3 5-6 23 26

[19:30] <Corion> t/pugsrun/06-dash-version.t                8    8 100.00%  1-8

[19:30] <autrijus> ok, I think I covered for all of them.

[19:30] <stevan> mj41: what platform are you on?

[19:30] <autrijus> as for filetest.t, because we don't have win32-specific forcetodo

[19:30] <autrijus> I simply disabled all tests for filetest.t on win32.

[19:31] <stevan> autrijus: no problems at all with Mac OS X

[19:31] <autrijus> actually, you can just selective rerun that three first

[19:31] <stevan> (but the test are not completely done)

[19:31] <Corion> autrijus: Good Enough

[19:31] <autrijus> pid, filetest, 06dashv

[19:31] <autrijus> and report back whether they now Works.

[19:31] <Corion> autrijus: Will rerun the three failing tests, plus the one of gaal

[19:31] <autrijus> there's no arith.t in this release ;)

[19:31] <autrijus> <- too tired to investigate msys

[19:31] <gaal> *giggle*

[19:32] <gaal> it's a painful test to debug

[19:32] <autrijus> that too.

[19:32] * autrijus waits for Corion/gaal to report

[19:32] <kungfuftr> autrijus: r1916 is completely clean with optimized

[19:32] <autrijus> wonderful!

[19:32] <autrijus> looks like we have a solid release.

[19:33] <boogie> server isc.perl.org

[19:33] <Corion> operators/filetest.t crashes for me

[19:33] <gaal> i just remembered that at some point, it reported the wrong coordinates to failing tests - but that may have been fixed

[19:33] <autrijus> oh wow.

[19:33] <autrijus> crashes!?

[19:33] <Corion> (syntax error: $pugs is undefined)

[19:33] <Corion> *undeclared

[19:33] <autrijus> argh.

[19:33] <Corion> the other two are fine

[19:33] <gaal> guess there's no filetest in this release either, huh? :p

[19:33] <Corion> ... at least according to prove.pl

[19:33] <autrijus> it's just a typo ;)

[19:34] <autrijus> but hey, why not

[19:34] <Corion> Yeah - pugs -Iblib6\lib reports the same failure :)

[19:34] <autrijus> yeah, and it's fixed in trunk

[19:35] * Corion wipes his flight-dir

[19:35] * stevan is still testing ....

[19:35] * Corion starts another smoke run

[19:35] <kungfuftr> filetest.t fails on freebsd

[19:36] <kungfuftr> test 6 and 26

[19:36] <Corion> kungfuftr: Likely because of the aforementioned syntax error :)

[19:36] <gaal> still compiling, here :/

[19:36] <kungfuftr> ah!

[19:36] <Corion> kungfuftr: Oh - if it doesn't completely fail, then there is something bad...

[19:36] <lightstep> what is `cannot find package plugins'? (on perl Makefile.PL)? no hs-plugins on this system?

[19:37] <autrijus> right. that's fine

[19:37] <theorbtwo> Correct.  The next line should warn you about that.

[19:37] <autrijus> Corion: it appears that it tries to -w pugs

[19:37] <autrijus> and fails

[19:37] <autrijus> anyway it's not in the release.

[19:37] * autrijus takes this No Mercy approach

[19:37] <ninereasons> filetest.t doesn't fail on my bsd, r1920

[19:38] <stevan> filetest.t is ok on my Mac

[19:38] <theorbtwo> We couldn't figure out a real platform-independent way to shut it up... so we didn't, because it's better then hanging on half of our user base during Makefile.PL time.

[19:38] <Corion> Maybe umask differences

[19:38] <kungfuftr> ninereasons: r1920 still does here

[19:39] * gaal wishes for a haskell ccache

[19:39] <Corion> ccache ?

[19:39] <gaal> ah, tests just started

[19:39] <gaal> Corion, a hack to make c builds faster

[19:39] <Corion> gaal: I think GHC is already pretty smart about compiling ;)

[19:39] <gaal> it stores .o files in a cache, keyed by their MD5s

[19:39] <ninereasons> I make realclean first, but surely that's not a difference, kungfuftr ?

[19:40] <jabbot> pugs - 1919 - * so much for cargo culting

[19:40] <jabbot> pugs - 1920 - * cargo cult too

[19:40] <gaal> yes, but not when i rm -rf the old preflight dir :)

[19:40] <kungfuftr> ninereasons: nope, just tests have changed since my last build

[19:40] <Corion> gaal: Aaah ;)

[19:40] <gaal> which i kinda want to do you know, as one more measure against paper bags.

[19:41] <kungfuftr> ninereasons: yeah, pugs is 1916 here

[19:41] <stevan> *sigh* we have too many tests ...

[19:41] <gaal> kff, 1920 is the latest r

[19:41] <Corion> stevan: Feel free to reorganize them in a way that exposes new bugs in the early-run tests :)

[19:42] <gaal> ...so far so good on msys...

[19:42] <kungfuftr> gaal: i know... but between 1916 and 1920, only tests have changed

[19:42] <stevan> Corion: but how will we know where the next bug is ?

[19:42] <Corion> Heh - quoting typo in t/magicals/pid.t - double quotes where single quotes should be used :)

[19:42] <nothingmuch> Steve_p: darcs pull if you're interested

[19:42] * kungfuftr rebuilds anyway

[19:42] <nothingmuch> i haven't merged yet, i'm on a blitz

[19:42] <theorbtwo> I suspect the harnesses should shuffle, and run in -j2 mode.

[19:42] <Corion> stevan: Ah, that I don't know. But maybe for regressions :))

[19:43] <nothingmuch> i'll do it in 3 minutes, when I'm done with one more thing

[19:43] <gaal> 'use less bugs' or 'use bugs <predictable>'

[19:43] <Corion> theorbtwo: Hmm - -j2 would be interesting indeed, except that we don't have File::Temp yet

[19:43] <Corion> (some of my tests use sleep(), so -j2 would benefit from that)

[19:43] <nothingmuch> Corion: temp? what for?

[19:43] <stevan> Corion: actually we might want to look into a t/skip_todo file which avoid tests which we absolutely know are TODO

[19:43] <nothingmuch> Corion: not only that, there's some of us with multiple CPU boxes

[19:43] <Corion> nothingmuch: Race conditions. Currently all tempfiles are hardcoded

[19:43] <nothingmuch> eris is 2 cpu

[19:44] <nothingmuch> safta is 2 cpu HT

[19:44] <theorbtwo> lilith is hyperthreaded.

[19:44] <Corion> nothingmuch: My P4 box pretends to be 2 CPUs as well

[19:44] <nothingmuch> Corion: then they should be different per test case

[19:44] <Corion> nothingmuch: Which is why I want File::Temp

[19:44] <nothingmuch> safta pretends it's 4 cpu

[19:44] <nothingmuch> Corion: i mean hard coded diff

[19:44] <nothingmuch> or we could do File::Temp

[19:44] <gaal> t/operators/filetest fails here, predictably, in my pf2 package...

[19:44] <nothingmuch> we could start by making it brutish

[19:45] <autrijus> http://wagner.elixus.org/~autrijus/Perl6-Pugs-6.2.0.tar.gz   

[19:45] <Corion> nothingmuch: Sure, but that will lead to stupid copying and inexplainable errors. That's why I want File::Temp :)

[19:45] <nothingmuch> lets assume that the probability of collision with $$+rand+time+rev is ok

[19:45] <autrijus> err, sorry: http://wagner.elixus.org/~autrijus/dist/Perl6-Pugs-6.2.0.tar.gz   

[19:45] <nothingmuch> and then we could really do it, once we have a proper stat

[19:45] <Corion> nothingmuch: Hah. $*PID is constant on Win32.

[19:45] * theorbtwo assumes those are ~~?

[19:45] <theorbtwo> Er, ~.

[19:45] <gaal> oh - it's out?

[19:45] <nothingmuch> huraah!

[19:45] <Corion> nothingmuch: Never, never! use stat! There are (POSIX) calls for Tempfiles, and Win32 has them too (or via POSIX)

[19:45] <Corion> I want proper tempfiles :)

[19:45] <autrijus> sanity check that dist/ tarball?

[19:46] <autrijus> make sure the two headache tests are not there, the version etc passes when run individually, etc

[19:46] <nothingmuch> Corion: well, i don't know of the proper ones, i just use File::Temp

[19:46] <autrijus> using a built pugs

[19:46] <Corion> Ooops - t/operators/arith.t failed due to a syntax error - $pugs undeclared.

[19:46] <nothingmuch> i thought it was needed, afterwords

[19:46] <Corion> nothingmuch: File::Temp uses the proper ones :)

[19:46] <nothingmuch> to make sure the file you created was what you wanted, or something

[19:46] <autrijus> Corion: fixed already

[19:46] <nothingmuch> well, sure, whatever =)

[19:46] <Corion> autrijus++ # fixing tests before I find failures

[19:46] <ingy> hola

[19:47] <stevan> hey ingy, care to preflight?

[19:47] <autrijus> anyway, I think it's ready to fly.

[19:47] <autrijus>     http://wagner.elixus.org/~autrijus/dist/Perl6-Pugs-6.2.0.tar.gz

[19:47] <autrijus>     SIZE (Perl6-Pugs-6.2.0.tar.gz) = 642482

[19:47] <autrijus>     MD5 (Perl6-Pugs-6.2.0.tar.gz) = 8d5438d49db872ffe2394fd4995d335b

[19:47] <stevan> autrijus: t/pugsrun/06-dash-version.t                8    8 100.00%  1-8

[19:47] <stevan> thats all 

[19:47] <stevan> Failed 1/203 test scripts, 99.51% okay. 8/4246 subtests failed, 99.81% okay.

[19:48] <autrijus> stevan: right, that's with the tmp/ one?

[19:48] <autrijus> anyway it's fixed :)

[19:48] <stevan> the first one you asked to preflight :)

[19:48] <theorbtwo> Hm, the current -dcore-lint error happens both with and without optimized.  Reporting it on #haskell.

[19:48] <autrijus> yup.

[19:48] <autrijus> ok, that's fine, posting on p6c now.

[19:48] <nothingmuch> 4000... wow

[19:48] <stevan> 4246 actually :P

[19:49] * nothingmuch remembers when his tests accounted for more than 10% of the suite

[19:49] <nothingmuch> yeah yeah, i'm not blind

[19:49] <gaal> sanity check looks good here

[19:49] <autrijus> okay, fly!

[19:50] <jabbot> pugs - 1921 - * This be Pugs, version 6.2.0.

[19:50] * gaal cheers

[19:50] <Corion> r1919 looks good her

[19:50] <Corion> e

[19:50] <Corion> Yayyy

[19:50] <autrijus> yay!

[19:50] <Corion> Fly my Pugs! Fly!

[19:50] <ninereasons> *applause*

[19:50] * castaway cheers

[19:50] <theorbtwo> jabbot, nopaste

[19:50] <jabbot> theorbtwo: Does talking about this bother you?

[19:51] <stevan> whose got the champagne!!!

[19:51] <ingy> pugs++

[19:51] <autrijus> and again, our summarizer missed us...

[19:51] <mj41> s/todo_//g foreach test;

[19:51] <mj41> r1600 - 1308/4135 subtests failed, 68.37% okay.

[19:51] <mj41> r1700 - 1166/4222 subtests failed, 72.38% okay.

[19:51] <mj41> r1800 - 1252/4214 subtests failed, 70.29% okay.

[19:51] <mj41> r1900 -  893/4240 subtests failed, 78.94% okay.

[19:51] <gaal> perlbot nopaste

[19:51] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[19:51] * stevan watches as Corion's Pug falls several stories to the ground and splats

[19:52] <lightstep> so few tests added over time?

[19:52] *** bradb|out is now known as bradb

[19:53] <stevan> I wonder how many commits we had in the past 48 hours?

[19:54] * kungfuftr can't remember where the churn graph is

[19:54] <stevan> stevan% svn log -r "{2005-04-11}:HEAD" | grep '^r[0-9]'| cut -d'|' -f2 | sort | uniq -c | sort

[19:54] <stevan>    1  Ovid 

[19:54] <stevan>    1  asavige 

[19:54] <stevan>    1  cognominal 

[19:54] <stevan>    1  kcwu 

[19:54] <stevan>    1  luqui 

[19:54] <stevan>    1  tobez 

[19:54] <rindolf> autrijus: I see you've added pugs to CIA.

[19:54] <stevan>    1  xern 

[19:54] <stevan>    2  ingy 

[19:54] <stevan>    4  gaal 

[19:55] <stevan>    4  ninereasons 

[19:55] <stevan>    4  theorbtwo 

[19:55] <stevan>    5  corion 

[19:55] <stevan>    5  dvergin 

[19:55] <stevan>    5  gcomnz 

[19:55] <stevan>   16  Stevan 

[19:55] <stevan>   16  iblech 

[19:55] <stevan>  102  autrijus 

[19:55] <stevan> that there is a lot of commits

[19:55] <autrijus> rindolf: I did not. maybe someone else did.

[19:55] <lightstep> too bad the last summary was weekly, not fortnightly

[19:56] <autrijus> that's fine :)

[19:56] <autrijus> posted to p6c.

[19:56] <autrijus> same post posted to journal.

[19:57] <autrijus> feel free to cross post the good news elsewhere.

[19:57] <autrijus> anywhere is fine... even slashdot :)

[19:57] <autrijus> now... I really should sleep.

[19:57] <autrijus> thanks everybody. :))))

[19:57] * autrijus waves &

[19:57] <stevan> nite autrijus 

[19:58] <theorbtwo> G'night, autrijus.

[19:58] <gaal> good night!

[19:59] <kungfuftr> full clean build here anyways

[20:00] <kungfuftr> =0)

[20:00] <Corion> Slashdot accepts every crap today. Maybe we should offer them to pay if they mention Pugs every week :)

[20:02] * theorbtwo ponders what useful he could do with the haskell bindings, but without user-visible objects.

[20:02] <theorbtwo> I wonder if I can do objects on the level I'd want already.

[20:07] <theorbtwo> Ugh.

[20:08] <theorbtwo> ./pugs -e'require_haskell("SHA1__0_0_1.o"); say sha1("")'

[20:08] <theorbtwo> pugs: internal error: stg_ap_p_ret Please report this as a bug to [email@hidden.address] or http://www.sourceforge.net/projects/ghc/

[20:09] * kungfuftr gets pugs running under svk

[20:15] <ninereasons> why did your build succeed this time, I wonder, kungfuftr ?

[20:15] <kungfuftr> ninereasons: no idea, is very odd

[20:16] <kungfuftr> bad cleanup from the test first time round?

[20:16] <nothingmuch> oddd

[20:16] <nothingmuch> very very odd

[20:17] <ninereasons> btw, kungfuftr , have you succeeded in getting plugins installed (sorry to be a broken record about this)

[20:18] <gaal> 9r: did you 'make register'?

[20:18] <ninereasons> it won't build for me, gaal

[20:18] <gaal> ah

[20:18] <gaal> what platgform?

[20:18] <ninereasons> it doesn't seem to like what it gets from autoconf

[20:18] <ninereasons> freebsd 4.11

[20:19] <gaal> it won'r build for me on windows either :( but on linux it does work.

[20:19] <kungfuftr> ninereasons: nope, there's no freebsd port for it, so don't get on teh server i'm afraid

[20:19] <ninereasons> (autoconf259 actually - maybe that's the issue)

[20:19] <ninereasons> yes, gaal, debian built and installed as did slackware

[20:20] <gaal> slackware! my first distro

[20:20] <ninereasons> i'm sentimentally attached to slackware.

[20:20] * gaal remembers going off to a distant university as a kid to download tens of 5 1/4" diskettes

[20:21] <ninereasons> but debian makes me go "wow"

[20:21] <ninereasons> so many cool ideas.

[20:21] <gaal> the coolest thing about debian is that mostly, it just works

[20:21] <ninereasons> yes.  I was introduced to it through knoppix

[20:22] <ninereasons> just works.

[20:22] <theorbtwo> A close second is that when it doesn't just work, it doesn't get in your way when trying to fix it.

[20:22] <gaal> true dat

[20:23] <ninereasons> funny perl installation, though :)

[20:23] <Aankhen``> G'night.

[20:23] <gaal> 9r: apt-get install dh-make-perl, if you have more than one box.

[20:24] <ninereasons> noted, gaal.

[20:24] <gaal> though nowadays i just say to hell with it and use cpanplus

[20:24] <nothingmuch> mutt is slow

[20:24] * nothingmuch needs to repatch for headercache

[20:25] <kungfuftr> ninereasons: come across hs-plugins in ports anywhere?

[20:25] <ninereasons> no, kungfuftr .

[20:25] <ninereasons> kungfuftr, it's strange though, because 'don' develops on *bsd, I'm told

[20:26] <kungfuftr> anyone updated MANFIFEST at all?

[20:28] <stevan> kungfuftr: its part of the release process

[20:30] <kungfuftr> ah, k

[20:30] <mj41> g'night

[20:42] <Corion> theorbtwo: You could implement File::Temp via your external bindings, or SQLite - both could be object-less exports, simply passing through the handles/strings (I think)

[20:47] <nothingmuch> Steve_p: darcs pull

[20:47] <nothingmuch> kungfuftr: did you see Test::TAP::Model?

[20:48] <kungfuftr> nothingmuch: nope... where?

[20:48] <nothingmuch> darcs get http://nothingmuch.woobling.org/Test-Tap-Model

[20:48] * kungfuftr don't use darcs

[20:48] <nothingmuch> wget -r then

[20:50] <kungfuftr> nothingmuch: looks intresting

[20:51] * nothingmuch will now do Test::TAP::Visualize::HTMLMatrix

[20:51] <nothingmuch> based on stevan's thing

[20:51] <nothingmuch> btw, stevan, gaal, theorbtwo, autrijus, ingy et al: do you mind if i just put copyright "The Pugs Hackers"?

[20:51] <nothingmuch> IMHO this code belongs to us all, and not only to us who worked on it

[20:52] <kungfuftr> nothingmuch: i've had some ideas in how to improve the html generation tbh

[20:52] <nothingmuch> i'm going to use a real templating thingy

[20:52] <nothingmuch> for starters

[20:53] <Corion> Pe-tal ! Pe-tal ! Pe-tal ! (although I admit that HTML::Template is easier done than Petal :) )

[20:53] <nothingmuch> yeah, i'm for petal

[20:54] <nothingmuch> especially since Test::TAP::Model has a nice OOP interface on top of the hash structures

[20:54] <Corion> "easier done" in Pugs

[20:54] <theorbtwo> I'd prefer that copyright be stated as belonging to something with some legal existance: a finite and enumerated list of people.

[20:54] <lightstep> to whom is pugs copyrighted?

[20:54] <theorbtwo> Autrijus.

[20:54] <nothingmuch> theorbtwo: perl foundation? autrijus? people?

[20:54] <nothingmuch> i'm not a part of the perl foundation

[20:55] <kungfuftr> pugscode.org ?

[20:55] <theorbtwo> Er, pugs is copyright autrijus.

[20:55] <Corion> BTW, Haskell School of Expression is one of the recommended books, right?

[20:55] <nothingmuch> in fact, i feel somewhat alienated by it, for this hunk of code

[20:55] <theorbtwo> You do, nm?

[20:55] <ninereasons> my copy of "The Haskel School of Expression" is signed by the author

[20:55] <ninereasons> (although, not addressed to me)

[20:55] <nothingmuch> a bit

[20:55] <nothingmuch> personally i don't think they are actively helping

[20:55] <nothingmuch> luqui and pmichaud do

[20:55] <nothingmuch> but aside from that there has been no active input except on their level

[20:55] <nothingmuch> that is, we do stuff

[20:56] <nothingmuch> then we run into trouble

[20:56] <nothingmuch> and we go ask

[20:56] <Corion> Hmmm - the reviews say that it's a good second book ... Does it address the type system/monads in a good way ?

[20:56] <Corion> nothingmuch: Ah, who cares about TPF?

[20:56] <nothingmuch> Corion: exactly

[20:56] <Corion> ... or do they hold the (c)opyright on Pugs?

[20:56] <nothingmuch> i think they don't

[20:56] <nothingmuch> autrijus does

[20:56] <Corion> nothingmuch: They didn't as much drop the ball, they saw it falling and never moved in the general direction IMO.

[20:56] <kungfuftr> nothingmuch: "Copyright pugscode.org"?

[20:57] <theorbtwo> "Pugs is Copyright 2005 by Autrijus Tang.  All Rights Reserved." (From the README.)

[20:57] <Corion> nothingmuch: Ah, he got TPF grant(s), so he feels more attached to them I think

[20:57] <nothingmuch> theorbtwo: what should our code be, then?

[20:57] <theorbtwo> Copyright all of us.

[20:57] <nothingmuch> Corion: i spent work time today on this stuff, because work is interested

[20:57] <theorbtwo> Anyone who has copyrighted stuff in it.

[20:57] <nothingmuch> that doesn't mean the code is copyright hyperroll

[20:57] <theorbtwo> Er, copyrightable.

[20:57] <clkao> 5/win25

[20:57] <nothingmuch> because i only refactored

[20:57] <nothingmuch> oh my

[20:58] <nothingmuch> does anyone have the capacity to svn blame | awk > copyright efficiently?

[20:58] <Corion> Who cares about the copyright if the license is BSD/artistic ? I don't mind leaving the copyright with whoever as long as I can use/modify/distribute the code as I wish

[20:58] <nothingmuch> Corion: he who holds the copyright decides the license

[20:58] <theorbtwo> nm: That's one reason I try to keep track of AUTHORS.

[20:58] <ninereasons> it's a very Windows friendly book, Corion: I assume you approve

[20:58] <theorbtwo> Also, he who has copyright has standing to sue for violations of the license.

[20:59] <Corion> nothingmuch: The license already is BSD/Artistic/dual, so I'm OK with that

[20:59] <Corion> ninereasons: Ah, well - I don't mind windows-friendly books :)

[20:59] <nothingmuch> svn blame | cut -d: -f1 | sort | uniq | <map via AUTHORS>?

[20:59] <lightstep> nothingmuch, it's gpl, so it can never be non-gpl

[20:59] <nothingmuch> theorbtwo: i'll do it later, methinks

[20:59] <nothingmuch> lightstep: i don't really know the details

[21:00] <nothingmuch> but the point is, that copyrights are an important attribution of control

[21:00] <nothingmuch> it's not that i don't trust that TPF will use it correctly,

[21:00] <nothingmuch> but this code is ours and should be marked as such

[21:00] <nothingmuch> theorbtwo: what about contributors whose code has been indented, for example?

[21:01] <theorbtwo> nm: Don't use blame, use log.

[21:01] <nothingmuch> good point

[21:02] <nothingmuch> odd

[21:02] <nothingmuch> svn log -q util/testgraph.pl | awk '/^r/ { print $3}' | sort | uniq

[21:02] <nothingmuch> doesn't include stevan

[21:03] <lightstep> "You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License." (from LICENSE/GPL)

[21:03] <theorbtwo> nm: Did you expect it to?

[21:03] <nothingmuch> IIRC he wrote the original

[21:03] <theorbtwo> I think I did.

[21:04] <theorbtwo> But looking at the svn log out, all the patches are very short.

[21:04] <nothingmuch> ah, sorry =)

[21:04] <nothingmuch> theorbtwo++

[21:04] <nothingmuch> i was sure it was his all along =)

[21:05] <theorbtwo> Oh, the "lines" thing is the number of lines in the changelog entry, not the number of lines in the patch.

[21:06] <pjcj> !

[21:06] <pjcj> ... ww

[21:06] <nothingmuch> AUTHORS doesn't contain the rt.openfoundry.org id, does it?

[21:06] <nothingmuch> egrep -i 'autrijus|corion|gaal|nothingmuch|putter|rootmj|theorbtwo' AUTHORS 

[21:06] <nothingmuch> even worse without -i

[21:06] <pjcj> quit

[21:07] <Corion> pjcj: You're not in the vi window! :)

[21:07] <theorbtwo> I try to have it contain it, or something pretty obvious from it.

[21:07] <nothingmuch> theorbtwo: are you willing to handle patching the copyright stuff?

[21:07] <nothingmuch> Corion: that's not a vi command

[21:07] * theorbtwo is going to have to pick up Yet Another VCS for this, isn't he?

[21:07] <theorbtwo> Tomorrow.

[21:07] <pjcj> Corion: no - I was trying to install Apache::Filter  ;-)

[21:08] <nothingmuch> theorbtwo: or wget -r

[21:08] <nothingmuch> and patch

[21:09] <theorbtwo> Nah, I can pick up darcs no problem.

[21:09] <theorbtwo> debian++

[21:09] <nothingmuch> yeah, it's easy =)

[21:09] * Corion goes to bed. Have a good next 8 hours! I will be watching you via the logs :)

[21:09] <theorbtwo>       5  Stevan

[21:09] <theorbtwo>       5  autrijus

[21:09] <theorbtwo>       5  putter

[21:09] <theorbtwo>       5  rootmj

[21:09] <theorbtwo>      10  corion

[21:09] <theorbtwo>      20  kungfuftr

[21:09] <theorbtwo>      30  nothingmuch

[21:09] <theorbtwo>      65  theorbtwo

[21:09] <theorbtwo>      70  gaal

[21:10] * theorbtwo goes to a different bed.

[21:10] <kungfuftr> theorbtwo: wassat?

[21:11] <theorbtwo> Number of checkins to the util testy stuff.

[21:11] <kungfuftr> ah

[21:11] <nothingmuch> oops

[21:11] <nothingmuch> kungfuftr: darcs pull

[21:11] <nothingmuch> i was pushing to the wrong repo

[21:11] <theorbtwo> I should probably check for checkins to the old util/categorize_tests.pl before it got renamed over.

[21:11] <nothingmuch> this has docs, and tests, and whatnot

[21:12] <nothingmuch> doesn't it retain history?

[21:12] <theorbtwo> It does.

[21:12] <nothingmuch> so...?

[21:12] <theorbtwo> But the file isn't there anymore, so the quick stats I just gathered don't include it.

[21:13] <theorbtwo> I'll check more carefully later.

[21:13] <nothingmuch> oh well

[21:13] * theorbtwo & # really.  Monitor off in 3... 2... 1...

[21:14] <nothingmuch> 	perl_subversion: 0

[21:14] <nothingmuch> 	pugs_versnum: 6.2.0

[21:14] <nothingmuch> so much for releng ;-)

[21:20] <jabbot> pugs - 1922 - unTODOed test - worksforme on Win32, ple

[21:31] <Juerd> Argh

[21:31] <Juerd> After two days I find out why I can't svn up pleac anymore. It's s/pleac/cookbook/ now...

[21:32] <gcom> yeah, fortunately i noticed that somehow before trying too many times

[21:46] <stevan> nothingmuch: ping

[21:46] <nothingmuch> pong

[21:46] <stevan> the original catalog tests was mine

[21:47] <stevan> but I showed it to you and you ran with it

[21:47] <nothingmuch> that i remember

[21:47] <nothingmuch> i didn't remember testgraph.pl

[21:47] <nothingmuch> btw, want to SEE?

[21:47] <stevan> after that all i did was contribute ideas and such

[21:47] <stevan> yeah testgraph.pl I did the original HTML layout idea

[21:47] <stevan> but again,.. you all ran with it

[21:48] <stevan> (which is a good thing)

[21:48] <stevan> nothingmuch: I stay away from SEE 

[21:48] <stevan> it tries to take over all my files and I cant seem to stop it

[21:48] <stevan> TextMate is my new favorite editor

[21:48] * nothingmuch somehow gets along with it

[21:48] <nothingmuch> vim vim vim!

[21:48] <nothingmuch> vim for the masses!

[21:48] <nothingmuch> vim with molasses!

[21:49] * stevan prefers to have a GUI

[21:50] <nothingmuch> gvim =)

[21:50] <stevan> to be honest (and I know this is blasphemy in these halls) I dont like vi and any vi descendent

[21:50] <nothingmuch> textmate looks pretty funky

[21:50] <stevan> (modal interfaces)--

[21:50] <nothingmuch> but i'm really hooked bad on vim

[21:50] <nothingmuch> stevan: people who think like vi think like vi

[21:50] <nothingmuch> that's all there's to it

[21:51] <nothingmuch> i get along with it because i think modally

[21:51] <nothingmuch> anyway, you're more than welcome to work with my coe

[21:51] <nothingmuch> amend, or whatever

[21:51] <stevan> nothingmuch: I would like too,.. but I am thinking I need to pay some attention to $work

[21:51] <nothingmuch> beh!

[21:51] <stevan> I have been doing the bare min for about a month now :)

[21:52] <nothingmuch> hah

[21:52] <stevan> luckily my boss is cool with all this stuff

[21:52] <stevan> but I have another project starting in a week or so,.. and I need to prepare for it

[21:53] * stevan is dreading going back to perl 5 land in some ways

[21:53] <nothingmuch> i always thought you were the boss at II

[21:53] <stevan> nothingmuch: LOL

[21:53] <stevan> nope

[21:53] <nothingmuch> =)

[21:53] <stevan> we are only 3 people, and we work pretty independently

[21:53] <stevan> so in a way I am my own boss

[21:53] <stevan> but its not my company

[21:54] <nothingmuch> oh well =)

[21:54] <stevan> nothingmuch: even if I was,.. i still gotta pay the bills :)

[21:54] <nothingmuch> bills shmills

[21:55] <stevan> unlike autrijus my client is not willing to run perl5 yet :)

[21:55] <nothingmuch> pugs needs you

[21:55] <stevan> :)

[21:55] <stevan> have no fear,.. I will not go anywhere

[21:55] <stevan> you couldn't get rid of me if you tried

[21:56] <stevan> nothingmuch: hey,.. have you figured out how you are getting to YAPC::NA?

[21:56] <nothingmuch> no $$$

[21:56] <nothingmuch> so no, i haven't

[21:57] <stevan> hmmm, well if you can manage the plane cost,.. you can stay with me free

[21:57] <nothingmuch> plane will be around $700 round trip

[21:57] <stevan> you will just have to hide in the closet when the maid comes in

[21:58] <stevan> try and get $work to pay for it

[21:58] <stevan> tell em its vital to the business model

[21:58] <nothingmuch> work is not in great financial conds

[21:58] <nothingmuch> and they know it ain't ;)

[21:58] <nothingmuch> again, small co

[21:58] <stevan> what about mom and dad? you got a birthday coming up or something?

[21:59] <nothingmuch> i'm richer than them =)

[22:00] <stevan> nothingmuch: I am running out of ideas here :)

[22:00] <stevan> we are back to selling your body parts

[22:02] <nothingmuch> damn

[22:02] <nothingmuch> YAML is not being nice

[22:07] *** metaperl__ is now known as metaperl_

[22:09] <jabbot> pugs - 1923 - More pleac^Wcookbook comments, XXX marke

[22:17] <nothingmuch> it calls the sub in scalar context!

[22:18] <nothingmuch> ack!

[22:18] <nothingmuch> run away run away!

[22:26] <stevan> off for dinner,... &

[22:29] <jabbot> pugs - 1924 - test a few escaped characters in strings

[22:55] <stevan> nothingmuch: ping

[22:59] <jabbot> pugs - 1925 - test stringified array

[23:01] <stevan> nothingmuch: check your email

[23:01] <stevan> hey Ovid

[23:02] <stevan> bye ovid 

[23:02] <Ovid> Hi stevan

[23:02] <Ovid> Bye steven

[23:02] * stevan goes back upstairs for dinner :)

[23:02] <Ovid> s/steven/stevan/

[23:02] <stevan> Ovid: you are not the first person to mess up the spelling and surely not the last :)

[23:07] <gcom> Juerd: ping

[23:11] <gcom> Ovid: you around?

[23:12] <Ovid> Yes, but working.

[23:12] <gcom> k, i want to  hit you up later to talk about pod in Cookbook examples

[23:12] <gcom> obviously it would have to be somewhat clean-room to avoid copyright violation

[23:13] <gcom> not even sure if it's wanted/needed though

[23:13] <gcom> i'll probably be online later or tomorrow though, no rush on that one

[23:13] <Ovid> Good point.  I was wondering about this issue.  Should we touch base with O'Reilly?

[23:14] <gcom> yeah, i don't know, i feel like venturing toward filling out the pods, cause questions coming up in comments seem to be asking for it

[23:14] <gcom> i don't own a perl cookbook though, so perhaps it's safe for me to venture forth (used to own one a long time ago)

[23:15] <Ovid> I know a few folks who work there.  Let me shoot an email and see what they say.

[23:15] <gcom> cool

[23:15] <gcom> thanks

[23:15] <Ovid> np

[23:16] <gcom> later then, i gotta get back to work too :)

[23:17] <Ovid> Email sent.

[23:19] <Limbic_Region> hey Ovid - what's shaking?

[23:19] <Ovid> Not much.  Working right now.

[23:20] * Limbic_Region forgets you are 3 hours behind

[23:20] * Ovid works late, too.

[23:20] <Ovid> Though I would prefer to be 5 hours ahead ...

[23:21] <shapr> Come to Sweden!

[23:21] <Ovid> God, I'd love to.  So close to all of my family, but so far from a job :(

[23:22] <shapr> Your family is in Sweden?

[23:22] <shapr> g'day mugwump 

[23:22] <mugwump> morning!

[23:22] * mugwump is slowly making it back into his home TZ

[23:23] <Ovid> No.  My dad lives in Germany, one brother's in London and then another brother and sister are a couple of hours north of London.  Essentially, all of the family I have any serious contact with live on that side of the pond.

[23:23] <Ovid> That's one of the reasons I miss living in Amsterdam.  Family.

[23:23] <shapr> Wow, your family migrates more than mine.

[23:24] <Ovid> No.  My father just slept around a lot.  My sister in the UK is three weeks younger than I am.

[23:24] <shapr> oh

[23:24] <Ovid> :)

[23:24] <shapr> I have no idea how to respond to that statement.

[23:24] <Ovid> No problem.  At this point, it's rather amusing.

[23:24] <mugwump> does it run in the family?  ;-)

[23:24] <Ovid> (though I doubt my mother thought so at the time)

[23:25] <Ovid> Of course not!  I tell all of my women that I'm seeing others :)

[23:25] * shapr laughs

[23:29] <mugwump> I don't like to volunteer the information.  But if they ask, well, they get what they deserve for their suspicion

[23:30] <shapr> I'm just monogamous. Having tried polyamory, I decided monogamy was for me.

[23:31] <mugwump> It's certainly a more pragmatic choice

[23:32] <mugwump> nice combigism btw (polyarmory), you should add that to the dicshunary.com

[23:33] * shapr snickers

[23:33] <shapr> A telepathic journal is totally mind-blogging!

[23:33] <Ovid> Heh

[23:36] <Odin-> shapr: Please remain where you are. The Pun Police are on their way.

[23:36] * shapr sniggers

[23:37] <shapr> The Punisher approaches!

[23:37] * Odin- notifies the SWAT.

[23:40] * Limbic_Region is too lazy for more than 1 woman, which suits his wife just fine

[23:42] <Ovid> My best friend and I have been in a relationship with the same woman for years.  Kind of freaks a few people out.

[23:42] <shapr> question is, is your best friend that woman?

[23:42] <Ovid> Heh, no.

[23:43] <Limbic_Region> I was in a situation where one gf told me she didn't care if I was with the other gf as long as I was with her and the other gf said the same thing about the first

[23:43] *** khisanth_ is now known as Khisanth

[23:44] <Limbic_Region> everyman's dream right - not mine

[23:44] <Limbic_Region> too much work/hassle

[23:44] <shapr> That's most of my problem with polyamory as well.

[23:44] <shapr> polylogistics make category theory look so simple.

[23:45] <Limbic_Region> Ovid - doesn't really freak me out but makes me wonder who has what plans for the future

[23:46] <Ovid> Limbic_Region:  not much I can say about that for privacy reasons, but she's decided to move in with him and it looks like they'll be buying a house together.  It's a good thing.

[23:46] <Limbic_Region> *shrug* - who am I to say anything as long as all parties are happy

[23:47] * Odin- notes that while you're complaining of having too many women, others complain of lack of them.

[23:47] <shapr> Yeah, I agree with that.

[23:47] <Odin-> Why is it that nobody seems to hit the right balance? ;>

[23:48] <Ovid> I'm hardly complaining about too many women, actually.  I was kidding about my above comment about "telling them".  I have one woman with whom I am serious, but she's now my best friend's primary partner so I don't see as much of her as I used to.  Other than that, I date.

[23:49] * justatheory has too many woman.

[23:50] <Ovid> Well, you're about to in a few weeks.

[23:50] <justatheory> Yow! So true.

[23:50] <justatheory> s/woman/women/

[23:50] * Ovid notes that no one would have any idea of the context of that comment.

[23:50] <Odin-> Indeed.

[23:50] <justatheory> Let them guess. :-)

[23:51] <Ovid> :)

[23:58] <shapr> hiya mark

