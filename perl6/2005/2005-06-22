[00:41] <meppl> gute nacht  -  good night

[00:47] <svnbot6> r4907, autrijus++ | * better handling of modules and qualified names in PIR generation.

[00:51] <autrijus> integral: still there?

[01:35] <nothingmuch> greetings from the autrijus & nothingmuch hackathonon

[01:36] <nothingmuch> oh my, autrijus just took his laptop to the shower

[01:36] <kelan> mini-hackathon?

[01:37] <kelan> nothingmuch: what happens in the 7th and 8th chapters of harrorth? fun things?

[01:37] <nothingmuch> well, hackathon starts tomorrow, but we arrived a day early

[01:37] <kelan> ah

[01:37] <autrijus> rehi \camels :)

[01:37] <nothingmuch> i'm 40 something hours without sleep, so remind me what the titles of 7 & 8 are

[01:38] <kelan> let me check

[01:38] <kelan> chapter 7 starts "Forth for Real"

[01:38] <nothingmuch> ah

[01:38] <nothingmuch> that tries to model forth more closely

[01:38] <nothingmuch> we're going to have another chapter like that

[01:38] <nothingmuch> i've tried doing the next one 3-4 times already

[01:38] <kelan> and 8 is "Implementing Our New Knowledge"

[01:39] <nothingmuch> each time i backed out of my strategy

[01:39] <nothingmuch> oh, i see

[01:39] <nothingmuch> so 7 is a forth primer

[01:39] <nothingmuch> discussing "true"er forth

[01:39] <nothingmuch> regardless of harrorth

[01:39] <autrijus> the one-level-up-truth

[01:39] * kelan nods

[01:39] <nothingmuch> and chapter 8 tries to take some of the ideas of chapter 7 and impelment them

[01:39] <autrijus> "the truth... is up there" or something

[01:40] <nothingmuch> to an extend it does it very well... : is a word, ; is an immediate word, etc

[01:40] <kelan> any plans for the hackathon yet?

[01:40] <nothingmuch> i guess "we'll see" is probably the best strategy

[01:40] <nothingmuch> what autrijus is trying to say is that i just told him that every time I try doing soemthing forthish my forth guru shows me yet another neat trick

[01:41] <nothingmuch> a sort of zen slap

[01:41] <nothingmuch> there's no shortage in work

[01:46] * autrijus sees no complimentary towels nothingmuch talked about

[01:46] <autrijus> nvm, got mine

[01:52] * nothingmuch wonders if porting Devel::FIXME to perl 6 will be with macros or with hooks

[01:58] * geoffb reappears

[02:01] <geoffb> autrijus.ping('OpenFoundry bug')

[02:04] <autrijus> geoffb: looking into it now

[02:04] <autrijus> finally got connection

[02:04] <geoffb> thanks!

[02:04] * autrijus blames toronto and dusseldorf airports for not having wireless

[02:05] <nothingmuch> budapest had nice wifi

[02:05] <geoffb> bastards.  :-)

[02:05] <autrijus> something really fishy is going on with openfoundry's nfs

[02:05] <nothingmuch> i rsynced 400mb of comic books from my home box

[02:05] <autrijus> sec

[02:05] <nothingmuch> then i read one

[02:06] <nothingmuch> and felt too sleepy for the rest

[02:06] <nothingmuch> it was a good plan for passing the flight, but I just wasn't up to it =(

[02:06] <mugwump> (paper books)++

[02:11] <nothingmuch> mugwump: indeed

[02:11] <nothingmuch> i think that and the tripod are the bulk of my suitecase

[02:42] <autrijus> geoffb: too silly

[02:42] <autrijus> the Rationale field is >255bytes

[02:42] <autrijus> and hence borked the RT thing

[02:42] <autrijus> underneath

[02:42] <autrijus> with no good errmsg

[02:43] <autrijus> geoffb: so I trimmed it to one line

[02:43] <autrijus> and lo it worked

[02:43] <autrijus> ;)

[02:44] <autrijus> geoffb: so, enjoy -- I'll trim things in the code now

[02:48] <autrijus> geoffb: fixed as r1173

[02:55] <svnbot6> r4908, autrijus++ | * remove debug messages

[02:57] <abez> ? eval 1+1

[02:57] <abez> ?eval 1+1

[02:59] <abez> seen Darren_Duncan

[02:59] <jabbot> abez: Darren_Duncan was seen 1 days 7 hours 33 minutes 41 seconds ago

[03:01] <abez> ?eval $x=3; $x

[03:02] <geoffb> autrijus, sorry, was AFK putting kiddo to bed

[03:02] <geoffb> Lemme check if the project appears on my page

[03:04] <geoffb> yep, it's there

[03:04] <geoffb> Bloody stupid that RT barfed on a too-long field

[03:06] * geoffb chuckles at the random shuffling of Chinese and English

[03:09] <geoffb> Bah, anyone know which fonts to select for Debian's Firefox package to get fairly unicode-complete fonts?  I'd rather see the nice soothing Chinese characters rather than a bunch of hex codepoints all over the page . . . .

[03:10] <mugwump> try ttf-arphic-*

[03:12] <revdiablo> geoffb: there's a gigantic arialuni.ttf you can find that has a lot of unicode characters in it

[03:12] <revdiablo> hmm, seems that it comes with MS Office

[03:13] <mugwump> all 23MB of it :)

[03:14] <geoffb> Well, MS Office won't work for me, since I don't have (easy) access to it . . . but trying Arial off the menu just in case

[03:15] <geoffb> hmmm, nope

[03:16] <Khisanth> hmm I have to zoom to 200%

[03:16] <mugwump> my unicode support ♙♟s !

[03:17] <Khisanth> mine too

[03:17] <geoffb> mugwump, what is that supposed to show?

[03:17] <Khisanth> but apparently not things like Chinese!

[03:17] <mugwump> That's two chess pieces from plane 0x26

[03:17] <mugwump> pawns

[03:17] <geoffb> ah

[03:18] <geoffb> OK, mugwump, I know I want Unicode instead of GB or Big5 versions of ttf-arphic-*, but what's the difference between ttf-arphic-ukai and ttf-arphic-uming?

[03:19] <geoffb> <rant>And why doesn't installation of a desktop not depend on a good set of unicode fonts in this day and age?!?</rant?

[03:19] <mugwump> I think that the difference comes down to the style of the characters

[03:20] <geoffb> what westerners would think of as a typeface, or something orthogonal to that?

[03:20] <mugwump> sure

[03:20] <geoffb> LOL

[03:21] <geoffb> Or as my father used to say, "Why yes."

[03:21] <mugwump> 我能寫中文

[03:22] <mugwump> That should have been 5 characters

[03:24] <geoffb> Well, in xchat I see it as 5 codepoints, but I'm working on apt-get'ing more fonts now.

[03:24] <geoffb> :-)

[03:25] <revdiablo> I see 3 boxes and 2 characters, I guess that means I have irssi mostly behaving. :)

[03:27] <mugwump> 我能写中文  # what about that?

[03:28] <jql> works for me

[03:30] <mugwump> actually only one character is different there, the middle one the simplified character "写" is used instead of traditional "寫" (xĭe, to write) 

[03:33] * geoffb selects a few random fonts from the boggling list from `apt-cache search xfonts` and gives his net connection a thrashing

[03:33] <revdiablo> weird. that time I got 4 boxes, one character, then another box

[03:33] <jql> those glyphs all work fine for me

[03:33] * jql hugs ubuntu

[03:34] <revdiablo> jql: hmm, what font packages do you have installed?

[03:34] <revdiablo> I wonder if there are Real Debian (tm) counterparts

[03:34] <geoffb> And more importantly, *which one are you using*

[03:35] <geoffb> revdiablo had my thought first

[03:35] <jql> just the base install of kubuntu with the devel kit and firefox (which means +gtk)

[03:35] <geoffb> :-)

[03:35] <geoffb> What font are you using in your chat client?

[03:35] <geoffb> (or *term, as the case may be)

[03:36] <jql> client. utf-8 encoded bitstream vera

[03:36] <geoffb> hmmm, checking

[03:36] <mugwump> fixed (6x13) and 9x15 have the best unicode coverage of the fixed fonts, apparently

[03:36] <jql> and the client is utf-8 encoded, not the font. :)

[03:39] * geoffb tries Bitstream Vera with firefox while ttf-arphic finishes installing

[03:39] <jql> I have Big5, BT, and Batang fonts installed, too

[03:39] <jql> wicked

[03:39] <mugwump> yeah, I tend to install the lot, too.

[03:40] <jql> GB, not BT

[03:40] <jql> bizzare thinko

[03:40] <mugwump> batang?

[03:40] <jql> forean iirc

[03:40] <jql> s/f/k/

[03:41] <coral> bat-tang

[03:46] <geoffb> brb

[03:51] <geoffb> mugwump, can you repaste those characters?

[03:52] <mugwump> 我能寫中文, 我能写中文

[03:53] <geoffb> oh, now that's MUCH better

[03:53] <coral> ?????, ?????

[03:54] <geoffb> And the difference between the two ttf-arphic fonts is: squarish v. handwritingish

[03:54] <jql> spiffy

[03:56] <geoffb> ah-ha!  Now I understand why I couldn't see changes between fonts in the extended characters -- when you change fonts in xchat, if the new one doesn't support some glyphs that the old one did, it appears to keep the bitmaps generated for the old font

[03:56] <geoffb> -- FOR JUST THOSE CHARACTERS

[03:56] <coral> heh!

[03:56] <geoffb> a usefullish feature, but damned surprising

[03:58] <jql> hah. cute but evil

[03:58] <Khisanth> hmm that is probably pango's doing

[03:59] <mugwump> wŏ néng xǐe Hànyǚ pínyín

[04:00] <mugwump> wŏ néng dă zì Hànyǚ pínyín, perhaps

[04:01] <mugwump> Can you see those?  All latin characters with various unusual accents, including a u with umlaut *and* upsidedown circumflex

[04:01] <geoffb> Khisanth, it's the kind of thing that makes me want to figure out a "best order" to cycle through fonts to get the western characters *and* the unicode characters good from that point on

[04:01] <geoffb> mugwump, yep

[04:01] <geoffb> can now

[04:02] <Khisanth> geoffb: I just use "Monospace" whatever font that is suppose to be :)

[04:03] <geoffb> Khisanth, that was my starting point -- because I assumed that the package monkeys would Do The Right Thing.  Unfortunately, they are also Only Human

[04:04] <Khisanth> I mean in xchat, and have my charset set to utf8

[04:04] <geoffb> mugwump, what is your natal language?

[04:04] <geoffb> (I could swear I've seen you use several)

[04:05] <mugwump> Geordie

[04:05] * geoffb blinks

[04:05] <mugwump> way-oo man?

[04:06] * geoffb was not expecting an answer that would leave him more confused than before

[04:06] <mugwump> Then I learned cockney, a year of floridan, followed by many years of kiwi

[04:06] <mugwump> these are all English dialects ;)

[04:07] <geoffb> I recognized all but Geordie.  All I could think of was "Laforge?"

[04:07] * Khisanth was unfortunately thinking the same ...

[04:08] <Khisanth> of course the next thought that popped up was "wtf?"

[04:08] <geoffb> NODNOD

[04:08] * jql doesn't recall Cmdr Laforge speaking another language... that universal translator rocks

[04:08] <mugwump> yee mean yee divvent understand Geordie? 

[04:11] <geoffb> Favorite episode of TNG: when aliens with reference-only language beam captain down to random planet to force them to work through the fact that the universal translator couldn't fix their completely different languages

[04:12] <mugwump> sounds like taking babelfish on for not being able to handle east/west translation :)

[05:00] <geoffb> Any SVK gurus about?  #svk seems to be quiet (AKA, no answer to question)

[05:03] <mugwump> sadly no, they're all asleep or travelling to YAPC::na I think

[05:03] <mugwump> just trollers like me about

[05:04] <revdiablo> I know a bit about svk and svn

[05:04] <revdiablo> hardly would call myself a guru, but maybe I can help

[05:19] <mugwump> cool ... you've seen the parrot SDL examples aye geoffb ?

[05:20] <geoffb> Actually, still haven't got off my ass and compiled a parrot recent enough to include parrot SDL, despite having svk co'ed it a few days ago, sigh

[05:21] <geoffb> But as I recall, chromatic hadn't done the OpenGL side of it yet.

[05:21] <geoffb> Besides, the Perl 5 people deserve an actual working bugfree compatible portable version of SDL_perl . . . .

[05:22] <geoffb> And as soon as they have it, I intend to mercilessly push for 'use SDL::OpenGL--perl5' to Do The Right Thing

[05:22] <geoffb> :-)

[05:24] <mugwump> sounds excellent.  There could even be a PP6 (pure perl 6) SDL module that wraps whichever backend is available

[05:24] * mugwump can just keep on dreaming you know ;)

[05:25] <mugwump> Something along the lines of freevo would be an excellent demo project

[05:25] <mugwump> largely because Freevo is slow, inflexible and generally just bites... but looks great on the lounge TV

[05:26] <geoffb> So we want to show them that it works better with Perl 6 than Python?

[05:27] <mugwump> no, we want to show them that perl 6 coders are cooler than python coders.  priorities.

[05:27] <geoffb> :-)

[06:40] * geoffb is growing bleary-eyed staring at diffs for hours on end

[06:41] <geoffb> Methinks the remaining merges will have to wait for morning

[06:41] <geoffb> g'night, all

[07:49] <mugwump> gah, didn't get a chance to fix up those broken Date::Gregorian tests ... sorry people :(

[07:49] * mugwump & # full moon party

[10:23] *** Aragone is now known as Arathorn

[10:45] <nothingmuch> good morning

[10:45] <autrijus> yo

[10:48] <broquaint> How's NA, autrijus?

[10:48] <clkao> hello autrijus

[10:51] <autrijus> very nice

[10:52] <autrijus> turns out nothingmuch dreamed about parsing forth's higher order functions as bytes, and muttered something about parsing literals in his sleep

[10:53] <autrijus> so the rest of the night I dreamed about optimising literals -- that is constant folding in the SSA/ANF dominance tree -- in the lambda calculus

[10:53] <autrijus> ...and hence started hackathon even before we ake up

[10:53] <autrijus> ;)

[10:53] <autrijus> s/ake/wake/

[10:54] <nothingmuch> hackathonon

[10:54] <broquaint> Now all you need is a brain => haskell dump that doesn't require a keyboard ...

[10:54] <broquaint> Or should that be, brain ==> haskell ? ;)

[10:54] <autrijus> come to think about it, maybe I should get a Ghost in the Shell brain-port tattoo here

[10:54] <autrijus> always wanted to get one

[10:54] <nothingmuch> well, we talked about stuff when we arrived, and I don't think I was awake at the time either

[10:54] <nothingmuch> brain >>= haskell

[10:55] <broquaint> I figure brain-port tatoos will be available in Taiwan first, if anywhere.

[10:59] <autrijus> http://www.justplay.nl/media/7/20040506-Neck%20GITS.jpg

[11:00] <autrijus> # older model -- I wanted the more sophisticated panel-like one -- but something like that

[11:00] <broquaint> Wireless would be ideal.

[11:00] <autrijus> indeed.

[11:19] <nothingmuch> http://nothingmuch.woobling.org/autrijs_wifi_ghost_shell.jpg =D

[11:19] <nothingmuch> i kind of screwed up the fake gradient background, because I sampled the wrong color

[11:19] <nothingmuch> sorry

[11:20] <autrijus> lol, nothingmuch++

[11:27] <nothingmuch> properly (un)focused version online

[11:27] <nothingmuch> (sort of ;-)

[11:27] <nothingmuch> time for breakfast

[11:45] <kungfuftr> autrijus++ # brain port tattoo would be fonq

[12:03] <stef__> salut slanning :)

[12:03] <slanning> salut

[12:04] <autrijus> greetings.

[12:05] <nothingmuch> autrijus is "sleeping", he told me so 10 minutes ago

[12:05] <nothingmuch> don't listen to him ;-)

[12:06] <autrijus> I am!

[12:06] * autrijus is even snorting

[12:06] <stef__> who cares, you just sait your are programming in your sleep

[12:06] <autrijus> that'd be correct

[12:06] <stef__> just need a plug to make sure the sleep work is indeed saved somewhere

[12:07] <autrijus> I use a brain-local branch of svk

[12:07] <autrijus> so I can commit to //hippocampus/...

[12:07] <slanning> :)

[12:29] * autrijus wakes up

[13:14] <svnbot6> r4909, autrijus++ | * fix export aliasing and nesting in PIR compilation

[14:40] *** Maddingue is now known as Maddingue_

[14:52] <dudley> Does anybody know if there's a perl6 mode for emacs anywhere?

[14:53] <autrijus> not afaics

[14:54] <dudley> I was afraid of that. I guess I should start learning lisp...

[14:55] * QtPlatypus has been using the standard cperl that works with perl5, "Unfortunitly it brakes more then it works"

[15:05] <slanning> dudley: excluding the docs at the beginning, cperl-mode.el is only about 7200 lines long

[15:06] <integral> ~ 1/3 of pugs :-/

[15:08] <dudley> slanning: Yeah, I scrolled through it a couple of days ago.

[15:08] <dudley>  I just wanted to make sure there wasn't something out there already.

[15:08] <QtPlatypus> I wounder how hard it would be to make pugs dump its parse tree in the form of an s-expression so that emacs has a better chance of working out what everthing means.  Otherwise the problem is going to be very hard.

[15:09] <slanning> 8)

[15:09] <autrijus> QtPlatypus: -CPugs uses haskell exp form

[15:09] <autrijus> which should be trivial to s-expressionalise

[15:09] <autrijus> or you can write a Emit.SExpr...

[15:10] <integral> perl6->elisp 8-)

[15:11] <dudley> QtPlatypus: I think the problem is going to be very hard anyway, considering I don't know perl6 or elisp yet ; )

[15:13] <QtPlatypus> dudley: Lisp isn't that difficult.  Personally I just wish that elisp had lexical scoping.

[15:26] <slanning> what do i install to get the "happy preprocessor" ? (needed during build of haskell-src-exts which is required for hs-plugins)

[15:29] <autrijus> slanning:  http://www.haskell.org/happy/

[15:35] <integral> autrijus: to use a different emitter in Pugs.Compile.PIR do I need to write a different Translate class?

[15:35] <integral> The one in there atm uses the Trans monad which uses Stmt from Emit.PIR

[15:36] <autrijus> integral: you need to factor out Pugs.Compile.PIR to Pugs.Compile, and then factor out Pugs.Compile.PIR into Pugs.Trans.PIR

[15:36] <autrijus> and then write your own Translate class in Pugs.Trans.Perl5

[15:36] <autrijus> making only use of Compile

[15:36] <autrijus> instead of the Translate defined inPIR

[15:36] <autrijus> essentially every translator defines its own Translate class.

[15:37] <integral> ok, that makes sense :-)

[15:37] <autrijus> glad I'm making sense :)

[15:38] *** nothingmuch_ is now known as nothingmuch

[15:44] <slanning> thanks, autrijus - now i have the prereqs installed, but it says "Pugs build should not get here" - is there something special like `make dist` to be done when using the checkout from darcs instead of from CPAN?

[15:45] <slanning> (it says that during `perl Makefile.PL` I should've said)

[15:51] <slanning> hmm, in fact it does the same thing from `cpan`, therefore "no"

[15:51] <slanning> (or not necessarily no, but irrelevant)

[15:52] <autrijus> hrm.

[15:53] <autrijus> weird

[15:53] <autrijus> try checking out from subversion and see if it works?

[15:53] * autrijus wonders if there's a sync problem

[15:54] <slanning> it's inc/Module/Install.pm line 29, included from line 8 of Makefile.PL if that says anything - but i will try checking out from subversion

[15:54] <slanning> is subversion the "standard" checkout, then?

[15:55] <autrijus> it is.

[15:55] <autrijus> but it should be identical from darcs

[15:57] <slanning> hm, same thing :/  i must've skipped something somewhere

[15:59] <autrijus> :/

[16:00] <autrijus> you have a shell I can try on?

[16:00] <autrijus> never happened before

[16:07] <slanning> no, i think the firewall prevents accessing from outside

[16:09] <slanning> cpansign -v also doesn't work (MISSING Signature file!) if that gives any hint

[16:09] <slanning> that's why i thought maybe i need to `make dist` or something

[16:22] <autrijus> no... the missing signature is known for development version

[16:26] <slanning> hello, david :)

[16:33] <nothingmuch> ugh. I don't like it when people make things so much more complicated than what they should be

[16:33] <nothingmuch> it's even worse when people make things more complicated than they already are.

[16:36] <broquaint> Who needs --long-options -wsowd?

[16:43] <slanning> ew my god, $FindBin::Bin is saying /home/slanning/bric/svn/rev_1_8/bin whereas i'm executing `perl Makefile.PL` from /home/slanning/pugs/pugs-darcs -- i think my debian perl upgrade today might've hosed something :/

[16:44] <slanning> but perl -MFindBin -le'print $FindBin::Bin' works as expected -- hm..

[16:44] <kungfuftr> is there a multiline hash style comment available in perl6?

[16:47] <autrijus> hash style?

[16:49] <kungfuftr>  ie: # This is a comment

[16:50] <kungfuftr> would be nice if you could do something like "#**********\nThis\nis\na\ncomment\n#**********\n"

[16:51] <kungfuftr> or something like a code block that was a comment

[16:52] <kungfuftr> autrijus: if you clock what i mean

[16:52] <wolverian> kungfuftr: =pod?

[16:52] <Khisanth> heh

[16:52] <kungfuftr> wolverian: pod must start at the start of the line

[16:52] <wolverian> kungfuftr: true enough.

[16:53] <kungfuftr> wolverian: =0)

[16:53] <wolverian> kungfuftr: can you find a character series that isn't ambiguous in perl6 that could be used for an in-expression comment block?

[16:53] <kungfuftr> #{ }

[16:53] <wolverian> (I couldn't find one for perl5...)

[16:53] <wolverian> hmm.

[16:53] <autrijus> #{ #}

[16:53] <autrijus> #{ }#

[16:53] <wolverian> yeah, didn't think of using # in it.

[16:53] <wolverian> sounds like a p6l issue.

[16:53] <autrijus> I rather like that, yes.

[16:54] <kungfuftr> *blink*

[16:54] <wolverian> I rather like pod, myself.

[16:54] <wolverian> literate programming and all that..

[16:54] <kungfuftr> wolverian: pod is great, but i use pod for usage documentation and hash comments for when i really need to describe what's going on in this part of the code

[16:55] <wolverian> kungfuftr: =for hackers 

[16:55] <geoffb> Whereas I HATE pod.

[16:55] <slanning> i think pod is an abomination

[16:55] <geoffb> slanning appears to agree

[16:55] <kungfuftr> wolverian: breaks up indenting

[16:55] <wolverian> geoffb: yes, me too. I love the concept, though.

[16:55] <wolverian> kungfuftr: yes.

[16:56] <geoffb> Yeah, the concept isn't bad -- pretty good, even.  The syntax is awful.  Worst syntactical mistake Larry every made, IMHO

[16:56] <geoffb> oh dammit, brb

[16:56] <wolverian> geoffb: good thing it's being fixed in perl6 then!

[16:56] <nothingmuch> i think pod comments still apply

[16:56] <kungfuftr> autrijus: i don't have proper net access at the minute... can you8 forward it to p6l?

[16:56] <kungfuftr> geoffb: pod is being replaced with Kwid, iirc

[16:57] * nothingmuch needs to make sure to scroll down before answering questions

[16:57] <nothingmuch> oh, whoops

[16:57] <kungfuftr> pod comments for describing the ins and outs for a particular peice of code are BAD, m'kay

[16:57] <wolverian> kungfuftr: why?

[16:58] * QtPlatypus thinks that there should be a documentation taint to subs.

[16:59] <wolverian> QtPlatypus: the language that really uses that, python, seems woefully underdocumented to me.

[16:59] <kungfuftr> wolverian: breaks indenting, will confuse pod translators and will completely screw auto-indenters

[16:59] <wolverian> (in many places.)

[16:59] <wolverian> kungfuftr: the latter two have never been a problem for me. honestly, never. the first issue is, of course, true.

[16:59] <kungfuftr> hash-comments are for code, pod is for describing how to use that code

[16:59] <QtPlatypus> wolverian: I've seen it used in Lisps as well.

[16:59] <wolverian> QtPlatypus: I meant to say 'the language I know ...'

[16:59] <wolverian> :)

[17:00] <slanning> documentation taint?

[17:00] <wolverian> kungfuftr: I like POD because it lifts comments to an equal standing with code. comments are not embedded in code, the file just alternates between the two! that is literal programming, to an extent.

[17:00] <wolverian> slanning: I assume he meant 'trait'

[17:01] * QtPlatypus is assuming that I meant 'trait' as well.

[17:02] <kungfuftr> wolverian: there's fairly often i need to describe how a particular regex works in the code for the rest of my team

[17:02] <kungfuftr> bbl

[17:02] <wolverian> kungfuftr: sure. but there's nothing forcing you to not use POD for it.

[17:02] <slanning> i've still never heard of "documentation trait", but i think you mean like in elisp where you add a docstring as the first line of a function

[17:03] <wolverian> slanning: something like that, yes. perhaps using perl6's trait functionality. 

[17:03] <QtPlatypus> slanning: Exactly.

[17:03] <wolverian> slanning: if you don't know what traits are in perl6, read http://dev.perl.org/perl6/doc/design/syn/S12.html

[17:03] <slanning> oh, it's perl6 vocabulary, that explains it :)

[17:05] <QtPlatypus> Would make it possable to implement perl6explain (or whatever its going to be called) open ended.

[17:05] <svnbot6> r4910, autrijus++ | * detab; use Noop for END blocks

[17:07] <Khisanth> nothingmuch: you keep missing that six in the URL :p

[17:08] <nothingmuch> Khisanth: oh crap, that's not in the URL

[17:08] <nothingmuch> that's just pbotutil with nothing

[17:08] <Khisanth> ah

[17:08] <nothingmuch> i thought it didn't announce anywhere, i'll revise my conf

[17:08] <Khisanth> time to fix settings?

[17:09] <nothingmuch> yes =)

[17:12] <nothingmuch> Khisanth: ping

[17:12] <Khisanth> hrm?

[17:12] <nothingmuch> where is it normally announced? #perl?

[17:13] <nothingmuch> 11278 should not have been pasted

[17:13] <Khisanth> yes

[17:13] <nothingmuch> okay, seems like it didn't

[17:14] <Khisanth> err didn't see a 11278

[17:14] <nothingmuch> goody

[17:21] <autrijus> nothingmuch: t/subroutines/arg_ref_type_preservation.t

[17:21] <svnbot6> r4911, autrijus++ | * So much for not compromising... change the := ?? :: line

[17:21] <svnbot6> r4911, autrijus++ |   in Test.pm so it can work with PIR.

[17:27] <slanning> hm, if i do `perl Makefile.PL` it fails because $FindBin::Bin is wrong, but if i `chmod 755 Makefile.PL` and `./Makefile.PL` it works - but `which perl` says "/usr/bin/perl" which is what the top of Makefile.PL says

[17:28] <slanning> does that say anything to anyone? i'm going crazy

[17:32] <autrijus> slanning: your perl in path is not /usr/bin/perl ?

[17:32] <autrijus> and do you have problem installing other cpan modules?

[17:33] <autrijus> which platforms is this?

[17:37] <slanning> `which perl` says /usr/bin/perl; Pod::Text installed okay from `cpan`, though probably it just doesn't use FindBin; debian, which i think is where the problem is from because the perl package updated today

[17:37] <slanning> hm, maybe `which perl` is lying

[17:39] <slanning> no, /usr/bin/perl is the only `perl' in my $PATH

[17:40] <geoffb> sheesh, bak

[17:42] <geoffb> autrijus, what did you change in 4911 (while I go `svk pull`)?  And why?

[17:42] <autrijus> geoffb: there's this line

[17:42] <autrijus> $ok := $cond ?? "ok " :: "not ok "

[17:42] <autrijus> which aliases $ok to a constant string

[17:43] <nothingmuch> Khisanth: i saw my name in #perl, and i've been googling for logs for 3 minutes now, and found nothing

[17:43] <nothingmuch> i closed the window before I could react though

[17:43] <autrijus> and I gave up, after trying to ~2hr, to simulate it in parrot

[17:43] <nothingmuch> so i missed whatever you said, if you said anything

[17:43] <autrijus> geoffb: so I changed it to a simple if/unless

[17:43] <autrijus> that's all.

[17:43] <geoffb> gotcha

[17:43] <Khisanth> I haven't said anything to you in #perl recently

[17:44] <nothingmuch> i saw "nothing: "

[17:44] <nothingmuch> or something like that... perhaps it was around 10 minutes ago, about the pbotutil

[17:44] <geoffb> Well, honestly, as crazy as Test.pm does, I think it's got the wrong design ideal -- it should not *itself* be a test of language features.  In fact, it should be just plain *boring*, because it's used to test the language features . . . .

[17:44] <Khisanth> you sure it wasn't #perl6?

[17:45] <slanning> I set PARROT_PATH=/usr/local/parrot-0.2.1 ; in Makefile.PL, `sub parrot_config', it basically chdir($PARROT_PATH) then `./parrot parrot-config.imc ...`; but `parrot` isn't in $PARROT_PATH, it's in $PARROT_PATH/bin (linked to from /usr/local/bin), while parrot-config.imc is in $PARROT_PATH

[17:46] <nothingmuch> quite sure

[17:46] <geoffb> That was part of where I was going with t/01-sanity -- eventually there should be a set of tests in there that include all the necessary functionality for a cleaner, meaner Test.pm.

[17:46] <nothingmuch> but not sure it was "nothing: ", could have been just "nothing"

[17:48] <Khisanth> ah that was PerlJam :)

[17:48] <slanning> hm, i think i'm going to cut my losses (several hours) and give up - good luck

[17:48] <Khisanth> 1119461459<PerlJam>     Khisanth: nothing.  That's another option.

[17:56] <integral> *argh* PIL is type-indexed on Stmt and friends from Emit.PIR :-/

[18:00] <nothingmuch> Khisanth: yes, that was it

[18:04] <svnbot6> r4912, autrijus++ | * add Shlomi to AUTHORS for the readline bug report -- no idea

[18:04] <svnbot6> r4912, autrijus++ |   why I didn't added him earlier

[18:05] <nothingmuch> well, maybe because he didn't really help ;-)

[18:44] <svnbot6> r4913, bsmith++ | Moved the Compile class to Pugs.Compile.  The interface to the compilers

[18:44] <svnbot6> r4913, bsmith++ | is in Pugs.Trans (for the moment at least).

[18:47] <geoffb> D'oh!  /quit != /leave

[18:55] <nothingmuch_> hackathon time

[18:55] <nothingmuch_> ciao everyone!

[18:55] <geoffb> go nothingmuch_ !

[18:59] <Qiang> hm. they got cable internet in the cottage?

[18:59] <svnbot6> r4914, autrijus++ | * 01-sanity/07-test.t is now working!

[19:00] <geoffb> Go autrijus!

[19:01] <autrijus> alright. I'm going to meel lwall at all

[19:01] <autrijus> and stevan and other friends

[19:01] * autrijus waves &

[19:05] <PerlJam> If "meeling" is anything like "mealing" I hope no one does that to lwall  ;-)

[19:05] <svnbot6> r4915, autrijus++ | * `make pirsmoke` is now a reality...

[19:06] <integral> .oO( make BACKEND=PIR smoke if we have multiple backends )

[19:07] <PerlJam> surely you mean "PUGSBACKEND=pir make smoke"

[19:07] <integral> maybe :-)

[19:12] <Khisanth> hmm

[19:13] <Khisanth> PerlJam: but don't some cannibals believe that when they eat other people, they are acquiring some traits and such from those they eat?

[19:13] <PerlJam> Khisanth: aye, 'tis true.  I still hope no one does it to lwall.

[19:15] <Khisanth> Qiang: they don't NEED internet and I think it's something slightly slower

[19:19] <geoffb> AAAAAUUUUUUGGGGGGHHHHH!  I HATE WORKING WITH C!

[19:20] <geoffb> I believe, deep in my heart of hearts, that gcc error messages were designed specifically to piss me off.

[19:20] <arcady> and C hates working with you

[19:20] <Khisanth> but C is fun!

[19:20] <geoffb> The C I learned in college was fun.

[19:20] <Khisanth> geoffb: they seem to have gotten better over the years

[19:20] <integral> segfaults lead to hours of entertainment!

[19:20] <geoffb> The C I have to deal with now is NOT

[19:21] <Khisanth> wait not, gcc error messages are ok, g++ error messages are just cryptic

[19:21] <arcady> C++ is just cryptic

[19:21] <arcady> and leads to such fun things as internal compiler errors

[19:21] <geoffb> 'syntax error before "foo"' is driving me nuts.

[19:21] <geoffb> How far before "foo", jerkoff?!?

[19:22] <geoffb> arcady, bleah, good to know it could always be worse

[19:22] <stef_> Knisanth: i would say he would acquire some properties, not traits :)

[19:23] <stef_> depends if you consider eating as compilation or runtime...

[19:23] * geoffb is trying to get glprocs.c to compile in Debian, so that the Wayne's new SDL_perl automatic-GL-extensions-code will work on something other than Win32.

[19:23] <Khisanth> don't think I have ever seen an "internal compiler error"

[19:23] <Khisanth> hopefully never will

[19:23] <integral> GHC does those occasionally with pugs

[19:24] <geoffb> Khisanth, I second that emotion

[19:24] <Khisanth> geoffb: missing brace or semicolon somewhere? :)

[19:24] <geoffb> Khisanth, that's what I'm thinking maybe, but I can't figure out where.

[19:25] <geoffb> And these header files are so damned repetitive, they lull your eyes into missing stuff

[19:34] <svnbot6> r4916, bsmith++ | Moved Pugs.Compile.PIR to Pugs.Trans.PIR

[19:42] * geoffb breathes deeply

[19:43] <geoffb> must . . . stop . . . fist . . . of . . . death

[19:43] <geoffb> I'm thinking it's header file version skew

[19:43] <Khisanth> more C?

[19:43] <geoffb> yep

[19:44] <Khisanth> what are you writing this C for anyway?

[19:44] * geoffb looks at the long picture:

[19:44] <geoffb> If I get this to work, then SDL_perl 1.x will be resurrected stronger than before, more powerful, faster . . . .

[19:45] <geoffb> And I can get back to trying to get SDL_perl and pugs to work nicely together.  ;-)

[19:45] <Khisanth> hmm

[19:46] <lightstep> fight version skew: http://www.haskell.org/tmrwiki/EternalCompatibilityInTheory

[19:46] <geoffb> And really, I'm not writing the C.  Just trying to merge Wayne's work in the Win32 world with current Debian package.

[19:47] <geoffb> But Wayne unfortunately did some Win32-specific stuff, and my C merging skills are weak.

[19:47] <arcady> I wonder what parrot's NCI would think of the opengl libraries

[19:47] <geoffb> arcady, if I get this working, I might throw some energy at that as well.  :-)

[19:48] <lightstep> sorry, it's my first day, i don't even know what SDL is

[19:48] <lightstep> nor NCI

[19:48] <integral> there's already a ParNCI SDL binding :-)

[19:48] <arcady> parrot's NCI is not very difficult to use, I think

[19:48] <lightstep> oh, wait, i recall SDL

[19:48] <geoffb> lightstep, SDL is a cross-platform, cross-language toolset for doing simple graphics stuff.  NCI is Native Call Interface

[19:48] <geoffb> ah

[19:49] <geoffb> integral, yep: without OpenGL, last I heard

[19:49] <integral> oh well :-)

[19:49] <geoffb> And OpenGL is what I actually want to have working.

[19:50] * geoffb would really like to just port my 3D engine to Perl 6 and throw away all of the source filtering that gets me just partway to the happy place

[19:50] <geoffb> But to do that, I need to get pugs and SDL::OpenGL to talk to each other.  And to do that, I need to get recent SDL_perl to build on Debian.  Which is where I currently am.

[19:50] <geoffb> About this far -->  <-- from yak shaving

[19:53] <khisanth_> so as I was saying ...

[19:53] *** khisanth_ is now known as Khisanth

[19:53] <Khisanth> so the latest SDL Perl doesn't actually work anywhere besides windows?

[19:54] <geoffb> s/latest/latest 1.x/

[19:54] <geoffb> but otherwise, yes

[19:54] <geoffb> Because that's all Wayne has . . .

[19:54] <geoffb> I'm working to bring his work back to the masses

[19:55] <geoffb> Um, did you see my reply?  It's looking like you're having connection issue

[19:55] <geoffb> s

[19:55] *** khisanth_ is now known as Khisanth

[19:56] <Khisanth> yes I did

[19:56] <geoffb> k

[19:57] <geoffb> OK, afk for a few to make sandwich and clear head, then back to try banging on this again

[20:12] * integral gives PIL a nasty look for being type-indexed on Emit.PIR types

[21:14] <stef> Reading package info from stdin... ghc-pkg: Line 1: Invalid syntax (no colon after field name)  # does someone get that when trying to compile ghc plugins?

[21:16] <stef> hum. plugin.conf.inplace which is fed to ghc-pkg containes only "[]\n"

[21:29] <geoffb> stef, I think I saw that when I was first trying to build.

[21:29] <geoffb> Um, what was that . . . .

[21:29] <geoffb> old ghc version?

[21:30] <stef> nope, 6.4

[21:30] <stef> delivered by mandriva thx to rgs

[21:31] <geoffb> damn, what *was* that

[21:32] <geoffb> sorry stef, can't remember for the life of me.  I know I've seen it though, so it's not an unknown issue . . . just not a documented fix, I guess.

[21:34] <stef> I see the same kind of error in the log of #haskell

[21:38] <geoffb> stef, you know, I seem to recall having missed a prereq in the chain . . . check the READMEs again carefully, perhaps?  Sorry I'm not giving better help, but I know somewhere in my brain there's the answer, and I'm kinda poking at it.  :-)

[21:40] <Darren_Duncan> ?eval 1+1

[21:40] <Darren_Duncan> ?pugs 1+1

[21:41] <mugwump> jabbot: seen evalbot6?

[21:41] <jabbot> mugwump: evalbot6 was seen 5 days 15 hours 6 minutes 17 seconds ago

[21:42] <Darren_Duncan> I tried it yesterday within my local perl mongers meeting, to demonstrate it, and it didn't work ... alas

[21:42] <Darren_Duncan> the meetings topic was on IRC etc bots

[21:58] <geoffb> my @tasks_stack = < pugs+opengl pugs+SDL_perl SDL_perl-1.20.5 glprocs.c GLsdk-glxdemo >.map:{ "Get $_ to build on Debian" }; @tasks.pop # And there was much rejoicing . . . .

[21:59] <geoffb> well, the latter was supposed to be @tasks_stack.pop, but oh well

[22:15] <Khisanth> geoffb: finally got it to work?

[22:17] <geoffb> I figured there might be a problem with Wayne's merge of GLsdk into SDL_perl.  So I downloaded the raw GLsdk and went to compile that.  After a few fixes, I got its demo to work, and with the knowledge gained there, am hacking on the previous problem again.

[22:17] <geoffb> Wish me luck.  :-)

[22:37] <geoffb> BOO-YAH --  @tasks_stack.pop

[22:55] <geoffb> ALL RIGHT!  @tasks_stack.pop

[22:57] <geoffb> @tasks_stack.push('Now that SDL_perl builds and installs on Debian, finish merge with Wayne and try again.')

