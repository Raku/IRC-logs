[00:17] <jabbot> pugs - 1184 - Added tests for anonymous roles and dest

[00:17] <jabbot> pugs - 1183 - Added clone and constructor tests.

[00:21] <iblech> Hi, just wanted to say that a) i must totally sleep now :) and b) I'll be away the next week (skiing)

[00:27] <jabbot> pugs - 1185 - Added tests for properties.

[00:29] *** iblech changes topic to: pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | FBSD_4.11:r1124(120/2913) win2k:r1124(110/2913) Linux:r1185(111/3191)

[00:48] <kolibrie> anyone tried 'export TEST_LOG_FILE=test.log; make test; vi test.log'?

[00:49] <theorbtwo> Allo.

[00:50] <kolibrie> groetjes

[00:52] <theorbtwo> kolibrie: Haven't tried it -- there's a test harness that outputs YAML, though, which is probably useful for more or less the same stuff.

[00:53] <theorbtwo> autrjus, re the TODO list generator: have you tried looking at the testgraph thing?

[00:53] <kolibrie> theorbtwo: is YAML the kind of stuff META.yml is made of?

[00:53] <theorbtwo> (The dark green and dark red is TODO: green is "good", red is "bad".  (Yeah, typically Western.))

[00:53] <theorbtwo> Yes.

[00:54] <kolibrie> which module is generating that?

[00:55] <theorbtwo> YAML.pm, naturally.

[00:56] <kolibrie> I mean, how is it harnessed to the tests?

[00:56] <theorbtwo> perl util/yaml_harness.pl

[00:56] <kolibrie> I'll look at it

[00:56] <theorbtwo> That'll generate a tests.yml file.

[01:01] <kolibrie> it looks like util/yaml_harness.pl reads the $*OUT from the test scripts and generates YAML from it

[01:02] <kolibrie> I'm wondering if I should just change the output of my 'test.log' to spit out YAML

[01:02] <theorbtwo> Something like that.

[01:02] <kolibrie> or maybe allow it to spit out several different formats

[01:02] <autrijus> greetings from YAPC::Taipei!

[01:02] <kolibrie> woohoo!

[01:02] <theorbtwo> Salutations!

[01:03] <autrijus> I just refactored hash to take strings as keys (by default for now)

[01:04] <kolibrie> not quite sure what that means - translation?

[01:04] <theorbtwo> It didn't before?

[01:05] <autrijus> it didn't

[01:05] <kolibrie> theorbtwo: not sure what autrijus did

[01:05] <autrijus> my %hash = (1 => 2); %hash<1>

[01:05] <autrijus> doesn't work

[01:05] <autrijus> because 1 is Int and <1> means {'1'}

[01:05] <theorbtwo> Ah.

[01:05] <autrijus> try it. :)

[01:06] <theorbtwo> Ah.

[01:06] <kolibrie> so now %hash<1> will say 2?

[01:07] <theorbtwo> And, I hope, the opp will also start working:

[01:07] <theorbtwo> ./pugs -e 'my %foo=("1" => 2); say %foo{1}'

[01:08] <autrijus> right.

[01:09] <autrijus> YAPC broadcast -- rtsp://140.110.17.6/yapc.sdp

[01:09] <kolibrie> in what language?

[01:09] <autrijus> this hour is chinese (clkao)

[01:09] <autrijus> after that it's all english

[01:09] <autrijus> with chinese interpreters

[01:09] <kolibrie> my chinese is non-existent

[01:10] <theorbtwo> When are you on?

[01:11] <autrijus> tomorrow last session

[01:11] <autrijus> # http://yapc.elixus.org/schedule.html

[01:11] <autrijus> 90 minutes, "Perl 6 The Ultimate"

[01:11] <autrijus> (times are in GMT+8)

[01:12] <kolibrie> what software plays .sdp?  Haven't run across that before.

[01:12] <autrijus> mplayer or quicktime

[01:13] <kolibrie> thanks

[01:13] <theorbtwo> Sadly, gxine does not.

[01:14] <kolibrie> totem popped up when I tried, but then said it couldn't do it

[01:14] <autrijus> :-/

[01:14] <autrijus> vlc maybe?

[01:14] <theorbtwo> Hmm, (g)mplayer seems to have problems of some sorts as well, but it looks like it's simply not seeing any data from it.

[01:15] <bd_> I got mplayer to play it on the second try

[01:15] <kolibrie> vlc just spit out a whole bunch of junk on the command-line

[01:22] <kolibrie> stevan, you around?

[01:22] <hcchien> vlc doesn't work for me.

[01:24] <autrijus> I want clkao's slides :(~

[01:24] * autrijus can't see any word

[01:25] <Khisanth> need new glasses? :)

[01:25] <autrijus> I don't have glasses :)

[01:25] <Khisanth> ah well there is your problem!

[01:26] <autrijus> XD

[01:26] <kolibrie> binoculars come in handy

[01:26] <Khisanth> field of vision is too narrow

[01:27] <autrijus> the speakers should just upload their slides :)

[01:27] <kolibrie> would be nice

[01:28] <hcchien> I just ask the speakers upload the slides before their talk. :)

[01:33] <kolibrie> autrijus: good luck tomorrow, in case I don't bump into you before then

[01:33] <autrijus> :D

[01:51] <luqui> ditto

[01:51] <luqui> to the good luck bit

[01:51] <luqui> and s/in case I don't bump into you before then//

[01:51] <autrijus> =)

[02:27] <autrijus> http://wagner.elixus.org/~clkao/runapp-intro

[02:38] <stevan> autrijus: next release is 6.0.13? or were you going to go to 6.0.14?

[02:38] <autrijus> 6.0.13. I have no problem with 13, thanks :)

[02:38] <stevan> ok :)

[02:38] <stevan> isnt 666 good luck in china as well?

[02:39] <autrijus> right

[02:39] <stevan> actually both my bosses are chinese-americans 

[02:39] <autrijus> nice

[02:39] <stevan> actually they own the company

[02:39] <stevan> :P

[02:40] <stevan> and I am the only other employee :)

[02:40] <autrijus> nice

[02:40] <stevan> small consultancies ++

[03:05] <ingy> hi stevan 

[03:05] <stevan> hey ingy

[03:05] <ingy> install problems?

[03:06] <stevan> yeah I noticed that the Test.pm Makefile.PL installed into my /Library/Perl/5.8.1 as well as the /Library/Perl/6

[03:07] <stevan> I noticed this because I copied that Makefile.PL for the FileSpec one

[03:07] <stevan> and prompty overwrote my perl5 File::Spec install :)

[03:15] <_metaperl> how do I init my svn repository on rt.openfoundry.org

[03:15] <autrijus> _metaperl: what is your project name?

[03:15] <_metaperl> terry@Abulafia:~/perl/hax$ svn import DBIx-DBH http://svn.openfoundry.org/dbixdb\

[03:15] <_metaperl> h/ -m 'initial import' 

[03:15] <_metaperl> svn: PROPFIND request failed on '/dbixdbh' 

[03:15] <_metaperl> svn:  

[03:15] <_metaperl> Could not open the requested SVN filesystem 

[03:15] <_metaperl> dbixdbh

[03:16] <_metaperl> the project name is dbixdbh

[03:16] <autrijus> uh

[03:16] <autrijus> you just use it

[03:16] <_metaperl> but my svn import just failed...

[03:16] <autrijus> try again?

[03:17] <autrijus> it takes some time to initiate I think

[03:17] <_metaperl> yes, now it worked... but I never explicitly initted it

[03:18] <stevan> autrijus: how far along is the parrot and haskell backends?

[03:18] <stevan> still pretty primative?

[03:19] <autrijus> very primitive

[03:19] <stevan> ok

[03:19] <autrijus> but I'll focus on haskell backend

[03:19] <autrijus> and port all Eval.hs over

[03:19] <autrijus> so we have on the fly compilation

[03:19] <autrijus> and won't need to maintain two piece of logic

[03:20] <autrijus> the parrot backend should also benefit from that.

[03:20] <stevan> cool

[03:23] <_metaperl> hi Ovid

[03:23] <autrijus> hey Ovid

[03:23] <Ovid> Hi people.

[03:23] <stevan> hey ovid

[03:24] <Ovid> Hi stevan.  Out of curiosity, do you know if anyone is using the Class::Traits module?

[03:24] <stevan> nothingmuch tried to use it once

[03:25] <stevan> but it wasnt really what he needed

[03:25] <stevan> other than that nope

[03:25] <stevan> I enjoyed writing it :)

[03:25] <Ovid> Hrmph.  Bummer.  We have some things we might be using it for in Bricolage 2, so I was wondering if anyone else had success with it.

[03:26] <stevan> I have fiddled with it, but it's a weird way to think of OO

[03:26] <stevan> and so I never found a good fit for it

[03:27] <stevan> and nothingmuch's idea was pretty insane, he basically tried to use it for cracked out mixins

[03:27] <Ovid> ? Traits should be a nice replacement for mixins.  What was he doing?

[03:27] <stevan> mixins :)

[03:28] <Ovid> Heh :)

[03:28] <Ovid> Traits would have been perfect, then.  I think mixins are only marginally better than the Interface crap they came up with in Java.

[03:28] <stevan> he really needed to use multiple inheritence and mixins, and thats not really what Traits are

[03:29] <stevan> he needed traits that didnt flatten into the class basically

[03:29] <stevan> nothingmuch is crazy :)

[03:29] <Ovid> Ah, OK.  That would be an issue.

[03:30] <Ovid> The "not flattening" part.  Not the "crazy" part :)

[03:30] <stevan> I would be happy to resurrect that project though

[03:30] <stevan> it was fun

[03:31] <stevan> ingy: what is the status of the Kwid stuff? I need it for the Changelog?

[03:33] <cm> hi

[03:34] <autrijus> stevan: svn log not detailed enough?

[03:34] <stevan> autrijus: in some places yes, in some places no, and I have not been following the kwid stuff much though

[03:35] <autrijus> nod. I think Perl5-Kwid can gen html

[03:35] <stevan> ok

[03:35] <autrijus> and there is also a Kwid Formatter in Spork (outside pugs)

[03:35] <autrijus> which can gen Kwiki, S5 and other slides using Kwid

[03:35] <stevan> yes I saw that

[03:41] <stevan> would you classify the inline stuff as experimental as well?

[03:41] <autrijus> sure.

[03:41] <stevan> or is that pretty far along ?

[03:41] <autrijus> no, just color it experimental

[03:42] <autrijus> the point of .13 is to push out experimental stuff so people can make them robust in .14 :)

[03:42] <stevan> ok

[03:44] <stevan> are we dropping all 6.2.2 support after 6.0.13?

[03:44] <autrijus> we are officially dropping 6.2 support on 6.2.

[03:44] <stevan> ok

[03:44] <autrijus> before that, there may be features that 6.2 won't run

[03:45] <stevan> BTW - iblech ported 17 modules and wrote over 200 oo tests

[03:45] <stevan> iblech++

[03:46] <stevan> what does pugs --extern do?

[03:46] <nothingmuch> good morning

[03:46] <autrijus> stevan: it generates the haskell wrapper

[03:46] <stevan> good morning nothingmuch

[03:46] <autrijus> for a inline module

[03:47] <nothingmuch> actually

[03:47] <nothingmuch> good night

[03:47] <stevan> nothingmuch: we are all on internet time here

[03:47] <stevan> its night for me, morning for you,.. I dont know what for autrijus 

[03:47] <autrijus> 11:47 noon 

[03:47] * nothingmuch drinks his tea, and goes to read

[03:47] <nothingmuch> well, it is morning, physically

[03:47] <nothingmuch> just not mentally

[03:47] <nothingmuch> for autrijus it should be around noonish

[03:47] <stevan> 10:47pm here

[03:48] <nothingmuch> 5:47 am

[03:49] <nothingmuch> so anyway, today i hope to finish the linking of results to the cross index

[03:49] <stevan> nice

[03:49] <nothingmuch> and we have to generate index.html files per dir

[03:50] <nothingmuch> depends on if i have to go to my luthier or not

[03:50] <nothingmuch> well, we'll see

[03:50] <nothingmuch> anywho, ciao

[03:50] <cm> 10:50 pm, mhm

[03:50] <stevan> you jamming to hard or something?

[03:50] <nothingmuch> was semi drunk up to around 3 hours ago

[03:50] <nothingmuch> a bit hoarse (good music)

[03:51] <nothingmuch> my neck kind of hurts, from the cape

[03:51] <nothingmuch> and my arm does too, from playing with the fairy wand

[03:51] <stevan> ah yes isreali halloween right?

[03:51] <nothingmuch> yup

[03:51] <nothingmuch> we are celebrating the death of some persian-age hitler

[03:51] <nothingmuch> mostly by eating cookies

[03:52] <nothingmuch> named 'ears of haman'

[03:52] <nothingmuch> a metaphore for the real ones that were allegedly cut off

[03:52] <nothingmuch> it's also considered a 'mitzva', that is, a sort of good thing to do

[03:53] * stevan thought christian holidays were weird

[03:53] <nothingmuch> as perscribed by god

[03:53] <nothingmuch> to get drunk

[03:53] <nothingmuch> http://en.wikipedia.org/wiki/Purim

[03:54] <nothingmuch> http://en.wikipedia.org/wiki/Hamantasch

[03:54] <nothingmuch> zzz &

[03:56] <stevan> metaperl: you around?

[03:57] <_metaperl> here

[03:58] <stevan> do you happen to remember what numeric functions you impemented?

[03:58] <_metaperl> well they are in the same place in Prim.hs so Icould find them

[03:58] <stevan> so I dont have to dig really deep into SVN

[03:58] <_metaperl> oh, you want to write tests?

[03:58] <_metaperl> hold on

[03:58] <stevan> actually its for the changelog, but I will write tests too if they are needed

[03:59] <_metaperl> atan2

[03:59] <_metaperl> cos, sin, sqrt

[04:00] <_metaperl> and exp

[04:00] <stevan> excellent,.. thanks

[04:01] <_metaperl> sure

[04:35] <stevan> autrijus: r1186 has the new Changelog in it

[04:35] <stevan> autrijus: you might need to add some details that I missed

[04:35] <stevan> ingy: add any Kwid stuff too it as well

[04:37] <jabbot> pugs - 1186 - adding ChangeLog for 6.0.13

[04:41] <stevan> ok I will TODO the tests tomorrow, night all &

[05:17] <jabbot> pugs - 1187 - * ARGS is the new ARGV

[05:22] <autrijus> stevan++

[05:36] <Khisanth> what did the V stand for anyway?

[05:37] <bd_> Vector maybe?

[05:38] <Darren_Duncan> 'Values' I think

[05:38] <Darren_Duncan> It comes, I think, from the C days when the main() got 2 arguments ...

[05:38] <Khisanth> well yeah

[05:38] <Darren_Duncan> ARGC (count) and ARGV (values)

[05:39] <Darren_Duncan> Perl didn't need the count, but kept the Values name anyway

[05:39] <Khisanth> could be vector though :)

[05:39] <Darren_Duncan> perhaps

[05:39] <Darren_Duncan> vector is another name for array, isn't it?

[05:39] <Khisanth> vector is a rather confusing term!

[05:40] <Darren_Duncan> If you know math, it makes sense

[05:40] <Darren_Duncan> 'vector' is a term in mathematics that is a list of related values that act like one value

[05:40] <Khisanth> if you are using Java or C++ you could be refering to the specific classes :)

[05:41] <Darren_Duncan> eg, a direction in 2+D space has 2+ elements in the vector, one per dimension, and all together they give a single indication of the direction

[05:41] <Schwern> Victory

[05:41] <Schwern> Visitors

[05:41] <Darren_Duncan> the math term 'matrix' is like a two-dimensional array, or a grid

[05:42] <Schwern> ..._

[05:43] <Darren_Duncan> now, about my porting progress ...

[05:43] <Darren_Duncan> I made a promise to have a perl-6ification up today

[05:43] <Darren_Duncan> so to meet that promise, I'm going to leave the perl 5 updates half-finished and do them later

[05:43] <Darren_Duncan> though I originally planned to do them first

[05:44] <Darren_Duncan> the very first commit of the port will also lack a SYNOPSIS, but that should be added the next day

[05:45] <Darren_Duncan> as a separate decision, my announcement to dbi-users will be made after the port, so the announcement can include that a perl6 version is available

[05:46] <Darren_Duncan> working ...

[05:58] <autrijus> tmoertel++ # crazy folk

[05:58] <autrijus> in one day!

[05:58] <autrijus> # http://community.moertel.com/ss/space/start/2005-03-25/1

[05:59] * tmoertel blames the espresso

[05:59] <autrijus> ooh just like me

[05:59] <autrijus> tmoertel: will you compile ruby to parrot after 50 days?

[05:59] <autrijus> or compile to haskell... or compile to pugsast

[05:59] <autrijus> tmoertel: you know, with template haskell, you can just focus on the evaluator and it will magically become a compiler :D

[06:00] <tmoertel> autrijus: no, I want to implement only the fun stuff :)

[06:00] <autrijus> aw, I assure you all of it is fun :)

[06:00] <autrijus> <- starts pugs only to model junctions

[06:00] <tmoertel> <- has parsimoniously allocated tuits

[06:00] <autrijus> you can get some imaginary tuits

[06:01] <autrijus> or quarternion tuits

[06:01] <tmoertel> hmmm... sqrt(-tuit); yes, that might work...

[06:01] <autrijus> Kwid is the new Changelog format

[06:06] <autrijus> hash string keys and scw's END{} fix are now in

[06:06] <autrijus> Schwern++

[06:06] <autrijus> err, 

[06:06] <autrijus> scw++

[06:07] <jabbot> pugs - 1190 - * scw contributed a fix to make END {...

[06:07] <jabbot> pugs - 1189 - * kwidify changelog

[06:07] <jabbot> pugs - 1188 - * mad golfer should not have my chinese 

[06:10] <gaal> hi

[06:12] <autrijus> hey

[06:13] <Schwern> scw != Schwern

[06:13] <autrijus> except my autocompleter brain cells only does two character lookahead

[06:13] <autrijus> and you sort first :)

[06:14] <gaal> heh (lucky i have a double-a deal in my name)

[06:16] <gaal> autrijus, re the command line, shall we do it haskell then?

[06:17] <autrijus> you mean the parser?

[06:17] <autrijus> sure, that'd be nice.

[06:17] <autrijus> write a 

[06:17] <gaal> yes

[06:17] <autrijus> parseArgs :: [String] -> Arguments

[06:17] <autrijus> or rather

[06:17] <autrijus> parseOpts :: [String] -> Options

[06:17] <autrijus> and declare an option struct for things we care about?

[06:18] <gaal> okay; the only problem is things like p5 -0 that can be specified a few times and basically have effect only until they are redefined

[06:18] <gaal> ie they have side effects

[06:18] <gaal> on the code that accumulates as they are parsed :/

[06:19] <autrijus> that's fine.

[06:19] <autrijus> you don't need to do it right now :)

[06:19] <gaal> so this Options can contain part of a one-liner

[06:19] <autrijus> yeah.

[06:19] <autrijus> or evan a function

[06:19] <autrijus> optSource :: IO String

[06:19] <gaal> imagine that :)

[06:19] <autrijus> which, when run, returns a string

[06:20] <autrijus> either from readFile or just "return str"

[06:22] <gaal> hmm, but there are things that are environment / more or less global, not part of the source String

[06:23] <autrijus> sure, then add more opt stuff

[06:25] <gaal> i'll take a look at how the current library does this, i have a lot of learning to do

[06:25] <autrijus> that's fine :)

[06:25] <autrijus> feel free to ask around on #haskell

[06:25] <autrijus> or google for haskell-cafe archives about opt parsing

[06:26] <gaal> ah, good, good. though perl probably outweirds most of what's foudn there :) 

[06:26] <gaal> good lead though.

[06:27] <jabbot> pugs - 1191 - fix enum test.

[06:27] * gaal &

[07:57] <jabbot> pugs - 1192 - * asavige pointed out that nonblocky dec

[08:10] <autrijus> obra's talk is about to begin

[08:10] <autrijus> I'm the interpreter :)

[08:11] <autrijus> autrijus> _

[08:13] <Dabian> ajeau!

[08:14] <Schwern> Can you JIT obra?

[08:24] <Darren_Duncan> has the talk started yet?

[08:25] <Darren_Duncan> anyway, quick question ...

[08:25] <Darren_Duncan> is Pugs no longer using a MANIFEST?

[08:26] <Darren_Duncan> apparently not ... although it still has a MANIFEST.SKIP

[08:27] <Darren_Duncan> anyway, the first SQL::Routine commit has been done ...

[08:27] <Darren_Duncan> the translation is not complete, and I will resume it tomorrow

[08:27] <jabbot> pugs - 1194 - SQL::Routine first commit - partial tran

[08:27] <jabbot> pugs - 1193 - Locale::KeyedText - fixed a few minor Pe

[08:28] <Darren_Duncan> meanwhile, I delivered something of it by the day I promised, Friday the 25th

[08:28] <Darren_Duncan> GOOD LUCK on the talk, Obra and Autrijus

[08:28] <Darren_Duncan> I look forward to the report tomorrow

[08:45] *** ruuku is now known as luqui

[08:48] <crysflame> autrijus++ # autrijus> _

[08:48] <luqui> autrijus> _ ?

[08:49] <scw> luqui: 'autrijus>' is the prompt :p

[08:49] <hcchien> interpreter. :)

[08:50] <luqui> and the _ is?

[08:50] <scw> cursor?

[08:50] <luqui> uh

[08:50] <luqui> whatever

[08:50] <scw> or maybe `everthing` since he's crazy on Haskell :pp

[08:51] <luqui> I was thinking:

[08:51] <luqui> for 1... { die if $_ > autrijus }

[08:51] <luqui> that would give the halting computer a pain

[09:23] <hcchien> hmm...., ingy may announce FreePAN project later. :)

[09:23] <Alias_> eep

[09:23] <Alias_> I'd hoped to talk to him about it first

[09:23] <Alias_> There's some... problems... with the concept

[09:24] <hcchien> you can ping him now. 

[09:25] <ingy> hello

[09:25] <autrijus> Alias_: I've voiced your concerns yesterday.

[09:25] <autrijus> during ingy's b-day party

[09:25] <Alias_> hahahah

[09:25] <Alias_> oopsi

[09:25] <Alias_> I've got a few more to add

[09:25] <ingy> autrijus: was I concerned?

[09:25] <autrijus> type away

[09:25] <autrijus> ingy: you were drunk

[09:25] <hcchien> haha

[09:25] <ingy> I had one beer

[09:25] <Alias_> My main new concern is this idea that the dist will exactly match what is in svn

[09:25] <autrijus> you had insufficient sleep

[09:26] <autrijus> gawd I made larry write S28

[09:26] <Alias_> My dists practically never match what is in my repository

[09:26] <autrijus> http://www.nntp.perl.org/group/perl.perl6.compiler/460

[09:26] <Alias_> In fact, my layout is totally different

[09:26] <autrijus> luqui: S28.pod? XD

[09:26] <Alias_> I have a package build script to "compile" a release

[09:26] <ingy> Alias_: the dist will match your MANIFEST likely

[09:26] <ingy> at the time you tag a release

[09:27] <Alias_> MANIFEST?

[09:27] <Alias_> I have no such think

[09:27] <Alias_> thing

[09:27] <Alias_> It's built at package compile time automatically

[09:27] <ingy> I must not be understanding you

[09:27] <obra> Alias_: _why_ do you do this?

[09:27] <ingy> sorry I am very tired right now

[09:27] <obra> what's the purpose?

[09:27] <Alias_> obra: A variety of reasons...

[09:28] <Alias_> obra: Firstly, so all my devel modules are in one huge /lib

[09:28] <autrijus> I'm cool with MANIFEST not in trunk.

[09:28] <autrijus> (ingy is cool with that too)

[09:28] <Alias_> So I can work on improvements to several interlinked modules at once

[09:28] <Alias_> Secondly for quality control

[09:28] <obra> oh. so the problem is that svn doesn't have views yet ;)

[09:28] <obra> for quality control?

[09:28] <Alias_> My build script auto-adds 99_pod.t and does various other sanity checking

[09:28] <autrijus> nor does svk

[09:28] <autrijus> but svk will :)

[09:28] <autrijus> clkao: will svk have views?

[09:28] <Alias_> obra: Once Test::Inline 2 is done it will also automatically compile the inline tests

[09:29] <clkao> it's half implemented. and some new fancy api broke that branch. but it is fixable

[09:29] <Alias_> In the actual directory for the dist, I generally have two files only. Makefile.PL and Changes

[09:29] <Alias_> The rest is built 

[09:30] <Alias_> Next possible problem, how will Freepan handle unpack/repack?

[09:30] <autrijus> aw, "twigil"

[09:30] <autrijus> $@% are "sigils"

[09:30] <autrijus> *?^ are "twigils"

[09:30] <ingy> nice

[09:30] <Alias_> Having the release manager/indexer do things to people's packages

[09:30] <obra> Alias_: will the new test::inline be 100% backwards compat

[09:31] <Alias_> obra: As clone as I can get to it

[09:31] <obra> Alias_: it sounds like you'll want to do "releases" to FreePAN

[09:31] <Alias_> obra: It will drop a few very redundant things

[09:31] * obra worries that it'll break RT

[09:31] <Alias_> obra: The new Test::Inline has much better support for big projects

[09:31] <ingy> Alias_: you don't have to use the autodist feature. Likely there will be support for you to build your own dists.

[09:31] <Alias_> obra: You can compile tests for the entire lib in one hit

[09:32] <Alias_> My biggest T:Inline usage involves 59 test scripts and 5000 SLOC

[09:32] <ingy> or maybe FreePAN just leaves exports tarballs of releases to CPAN, or something

[09:32] <ingy> TMTOWTDI

[09:34] * Jouke waves at the Y::T attendees

[09:34] <autrijus> yo Jouke!

[09:34] <obra> Alias_: Why do I care that I can compile?

[09:34] <Alias_> obra: Because the only thing that pod2test does is compile inline tests into test scripts?

[09:35] <obra> er right. I don't want to check those into my repo

[09:35] <Alias_> Maybe bad use of "compile"

[09:35] <obra> untill I ditch test::inlinethough I've needed a custom pod2test

[09:36] <Alias_> The downside of T::Inline 2 is it currently has a little dependency bloat

[09:36] <Alias_> I hope to resolve that as I get closer to something more community friendly

[09:36] <obra> when do you plan to release?

[09:36] <Alias_> When I get close enough...

[09:37] <Alias_> It works fine for me in my uses ATM... the rest is just a gift to everyone, done as I have the time

[09:37] <Alias_> But I won't do a "real" release until it's good enough

[09:38] <Alias_> s/good/compatible/

[09:54] <ingy> and now I speak for FreePAN...

[09:54] <ingy> autrijus: will you translate?

[09:54] <autrijus> sure!

[09:54] <ingy> Alias_: I will give you commit access to the project :)

[09:55] <Alias_> ingy: It scares me too much at the moment :)

[09:55] <ingy> Alias_: everything around here scares me

[10:02] <hcchien> FreePan talk now

[10:17] <jabbot> pugs - 1195 - Added examples/japh/madgolfer.p6 -- is t

[10:19] <Alias_> While we are on the subject of cons

[10:19] <Alias_> http://ali.as/OSCON

[10:47] <jabbot> pugs - 1196 -  r2839@speights:  samv | 2005-03-26 18:3

[11:17] <jabbot> pugs - 1197 - cleanup/unification of command line hand

[11:31] *** integral is now known as thaum

[11:32] *** thaum is now known as integral

[11:53] *** saorge` is now known as saorge

[12:32] *** tsee_ is now known as tsee

[12:59] <Corion> btw - Win2k:r1197(105/3116)

[13:24] *** Aankh|Clone is now known as Aankhen``

[13:57] *** Aankh|Clone is now known as Aankhen``

[14:07] *** cnhackTNT|away is now known as cnhackTNT

[14:39] <scw> Hello, I packed pugs into debian package :)

[14:39] <scw> http://www.csie.ntu.edu.tw/~b92103/pugs

[14:40] <scw> There are still several problems (path and something like that), I'll fix them tomorrow :)

[14:49] *** cnhackTNT|away is now known as cnhackTNT

[14:51] *** kungfuftr changes topic to: pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | FBSD_4.11:r1197(114/3115) win2k:r1124(110/2913) Linux:r1185(111/3191)

[14:52] *** kungfuftr changes topic to: pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | FBSD_4.11:r1197(114/3115) win2k:r1197(105/3116) Linux:r1185(111/3191)

[14:52] <kungfuftr> bah

[14:56] <integral> mm, what's the two numbers?  files failed / subtests failed?

[14:57] <malaire> subtests failed / subtests total

[14:57] * integral can add OS X to that

[15:06] <obra> hm. pugs has no sockets yet

[15:07] <malaire> My testresults:  Linux:r1197(105/3116)

[15:13] <integral> hmm, 13 minutes, _slow_ ;-)

[15:13] <integral> my results: MacOSX:r1197(105/3116)

[15:14] *** integral changes topic to: pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | FBSD_4.11:r1197(114/3115) win2k:r1197(105/3116) Linux:r1197(105/3116) MacOSX:r1197(105/3116)

[15:22] <autrijus> obra: Write Tests

[15:22] <autrijus> test and ye shall receive features

[15:27] <ingy> hola

[15:27] <ingy> autrijus: did you actually ever really get SHA1 working as advertised?

[15:28] <autrijus> ingy: no, the NamedLoader thing needs another ocuple minutes

[15:28] <autrijus> I will make it all work before (or during) my talk.

[15:28] <ingy> aye

[15:29] <ingy> I want to move it into modules where it belongs

[15:29] <ingy> that will require major mods to the build system to install all the core .o files

[15:30] <ingy> So they can be built outside of pugs

[15:30] <ingy> and then we can move modules into freepan

[15:30] <ingy> I need to spend another day fighting MakeMaker

[15:35] <nothingmuch> morning

[15:41] <autrijus> ingy: you want to move SHA1 to modules?

[15:42] <autrijus> ingy: like, you think it's not possible to make it install properly tomorrow?

[15:42] <autrijus> s/install/make/

[15:42] <autrijus> that is fine.

[15:42] <autrijus> you can move at will

[15:42] <ingy> autrijus: I don't want to move until later

[15:42] <autrijus> k.

[15:42] <ingy> let's try to make it work where it is tommorrow

[15:43] <ingy> that would be nice

[15:43] <autrijus> k.

[17:13] <elmex> woho

[17:32] <autrijus> ?

[17:33] <elmex> autrijus++

[17:33] <elmex> your cool ;)

[17:34] <autrijus> thanks. :)

[17:37] <jabbot> pugs - 1200 - * mandel.p6 now produces the correct ima

[17:37] <jabbot> pugs - 1199 - add my name.

[17:37] <jabbot> pugs - 1198 - fix one test.

[17:39] <elmex> bbl

[17:43] <kungfuftr> autrijus: who owns jabbot?

[17:45] <autrijus> gugod

[17:45] <stevan> autrijus: I have TODOed all the tests

[17:45] <stevan> I am going to svn up it now

[17:46] <stevan> I added # unTODOme to the end of all the todo-ed tests

[17:46] <stevan> do some shell script wizard maybe can whip something up to automate this

[17:47] <jabbot> pugs - 1201 - * switch to the C-line #line comment at 

[17:47] <stevan> and when all the tests run, we have 3198

[17:48] <autrijus> thank you.

[17:48] <stevan> ok r1202 - all the tests TODOed

[17:48] <autrijus> I've just implemented Leo's fixes.

[17:48] <stevan> no problem :)

[17:48] <autrijus> perl5 is now:

[17:48] <stevan> for Parrot stuff?

[17:48] <autrijus> real    0m6.213s

[17:48] <autrijus> user    0m5.695s

[17:49] <autrijus> pugs is now:

[17:49] <autrijus> real    0m5.652s

[17:49] <autrijus> user    0m5.225s

[17:49] <autrijus> yeah.

[17:49] <stevan> :)

[17:49] <stevan> ok I am gonna be offline for the day, enjoy yourself 

[17:50] <stevan> BTW - kwid changelog ,.. very nice 

[17:50] <autrijus> yeah, much more readable

[17:50] <autrijus> thanks stevan, see ya!

[17:53] <kungfuftr> autrijus: where's a good place to dive into the haskell code?

[17:53] <autrijus> kungfuftr: depends on your interests...

[17:53] <autrijus> AST.hs is the definition of everything

[17:54] <autrijus> Prim.hs is most rewarding

[17:54] <kungfuftr> autrijus: paranoia is my intrest

[17:54] <kungfuftr> =0)

[17:54] <autrijus> Eval.hs is the heavy weight.

[17:54] <autrijus> so, it's all good :)

[17:57] <jabbot> pugs - 1204 - * Prepare for release.

[17:57] <jabbot> pugs - 1203 - * switched both mandel.p5 and mandel.p6 

[17:57] <jabbot> pugs - 1202 - TODOed all the tests in preparation for 

[17:57] <kungfuftr> bah, i need a faster machine

[17:58] <autrijus> zzz &

[18:15] <elmex> hi

[18:17] <jabbot> pugs - 1205 - * add newline at end of file

[18:37] <jabbot> pugs - 1206 - untodo one test, it's already ok.

[18:47] *** kungfuftr changes topic to: pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | FBSD_4.11:r1206(10/3197) win2k:r1197(105/3116) Linux:r1197(105/3116) MacOSX:r1197(105/3116)

[19:07] <jabbot> pugs - 1207 - fix examples test. '&>' will go backgoun

[19:49] *** _metaperl is now known as metaperl

[19:51] *** Aankh|Clone is now known as Aankhen``

[19:54] <elmex> hi

[19:54] <elmex> boyz

[20:09] <elmex> where to find a real perl6 spec?

[20:09] <gaal> t/Synopsys

[20:10] <kungfuftr> elmex: http://dev.perl.org/perl6/ also handy

[20:14] <elmex> gaal: the Synopsys are a bit ... 'fuzzy' ;0

[20:15] <gaal> they are concise; they're considered the (incomplete) spec. perhaps the exegeses and apocalypes might come in handy?

[20:18] <Darren_Duncan> Anyone know about how many hours I have left to squeeze in more commits before the 6.0.13 release cutoff?

[20:19] <vladtz> and break a few test along the way :-)

[20:20] <Darren_Duncan> all my commits in the next few hours are in /modules, so shouldn't break anything

[20:21] <Darren_Duncan> they are just semi-critical to making the ports look a lot better

[20:24] <vladtz> well it was just good to see all tests passed again after several days of finding out how to compile for i386 on a athlon-64...

[20:36] *** kungfuftr changes topic to: pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | FBSD_4.11:r1207(0/3197) win2k:r1197(105/3116) Linux:r1197(105/3116) MacOSX:r1197(105/3116)

[20:36] <kungfuftr> NB: while 0 tests fail, the goto test still doesn't compile correctly

[20:42] *** kungfuftr changes topic to: pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | FBSD_4.11:r1207(0/3197) win2k:r1197(105/3116) Linux:r1197(105/3116) MacOSX:r1197(105/3116) **[793 tests TODO]**

[20:42] <gaal> it doesn't?

[20:43] <gaal> i thought i'd fixed it last night

[20:43] <kungfuftr> 2 secs

[20:43] <gaal> compiles fine here

[20:44] <kungfuftr> gaal: http://paste.husk.org/2890

[20:45] <gaal> sure you svn up'ed? can you look at the file and see if most of it is commented out?

[20:46] <gaal> (from line 17 on)

[20:46] <kungfuftr> 2 secs

[20:46] <kungfuftr> yar... conflict from last svn up... goi

[20:47] <gaal> we're no trying to adhere to 'all tests must run' policy - which means parsefails are tagged with a todo_fail() or a fail(), then commented out.

[20:48] <gaal> if you see a test blowing up, please fix it :)

[20:48] <kungfuftr> heh, if i could... not enough haskellknowledge... =0/

[20:49] <gaal> i meant the test :) though hey, fixing the code would be nice too :)

[20:49] <kungfuftr> heh

[20:49] <kungfuftr> would love to fix code... but has spirraled

[20:52] <vladtz> kungfuftr: yes I know, lots of todo's

[20:52] <vladtz> enough for now, bye

[20:59] <kungfuftr> all tests pass on FreeBSD 4.11... yay! =0)

[21:23] <kungfuftr> gaal: there's going to be a release very soon, aye?

[21:34] <kungfuftr> anyone?

[21:34] <Darren_Duncan> it should be on the 27th, Autrijus' time

[21:34] <Darren_Duncan> which is later today the 26th, my time

[21:35] <Darren_Duncan> I need a few more hours to get stuff in first

[21:35] <kungfuftr> k, will commit an interim MANIFEST

[21:35] <Darren_Duncan> why was the old MANIFEST removed?

[21:35] <Darren_Duncan> It can be regenerated along with any commit using 'make manifest'

[21:35] <kungfuftr> being updated too much iirc

[21:37] <Darren_Duncan> since Autrijus may get up and do his thing at any time, I am meanwhile doing smaller commits less often, to lessen risk

[21:37] <jabbot> pugs - 1208 - large Locale::KeyedText documentation up

[21:37] <Darren_Duncan> more often I mean

[21:37] <kungfuftr> yar, i think he's off to bed now

[21:38] <Darren_Duncan> yes

[21:38] <Darren_Duncan> its early morning in Taiwan right now

[22:47] <autrijus> er.

[22:47] <autrijus> don't do a interim MANIFEST. :)

[22:47] <autrijus> I can gen one locally.

[22:48] <autrijus> btw, hi.

[22:48] <kungfuftr> np

[22:48] <kungfuftr> noticed wasn't in svn anymore, so didn't

[22:49] <autrijus> :)

[22:50] * kungfuftr can be sensible at time

[22:50] <Darren_Duncan> hello Autrijus!

[22:50] <kungfuftr> autrijus: go to bed!

[22:50] <Darren_Duncan> question: in how many hours is the cut-off for getting /modules stuff into 6.0.13?

[22:50] <Darren_Duncan> didn't he just get up?

[22:50] <kungfuftr> autrijus: btw, is there anything in place for .xs stuff at the moment

[22:51] <kungfuftr> Darren_Duncan: 4 hrs sleep does not count

[22:51] <autrijus> Darren_Duncan: I don't know, how many you need?

[22:52] <Darren_Duncan> as many as I can get ... or I suppose 3-4 hours

[22:52] <autrijus> that's fine.

[22:52] <autrijus> it's 7am here.

[22:52] <autrijus> I'll do release at noon.

[22:52] <Darren_Duncan> I can give new estimates as time goes by

[22:52] <autrijus> sounds like a plan?

[22:52] <Darren_Duncan> sounds ok so far

[22:52] <Darren_Duncan> I'll let you know closer to that if I'm running short of time

[22:52] <autrijus> I need to do interpretation and my real talk afternoon

[22:53] <autrijus> sure =)

[22:53] <autrijus> will you be committing new files so I need to regen manifest?

[22:53] <Darren_Duncan> meanwhile, I'm doing smaller commits more often, to reduce risk

[22:53] <kungfuftr> Darren_Duncan: what platform you running on?

[22:54] <Darren_Duncan> I'm on Mac OS X 10.3.8 currently, 10.4 when it comes out

[22:54] <autrijus> k, cool!

[22:54] <Darren_Duncan> rumors say mid-April

[22:54] <kungfuftr> Darren_Duncan: can you update the end of the topic line?

[22:55] <Darren_Duncan> I never tried to do that ... can a non-admin do it?

[22:55] <autrijus> all can.

[22:55] <kungfuftr> yup

[22:55] <kungfuftr> there's no +t on the channel

[22:55] <Darren_Duncan> I'm using the Colloquay client

[22:55] <Darren_Duncan> quy

[22:55] <kungfuftr> Darren_Duncan: you can paste in chan, someone else will update

[22:55] <Darren_Duncan> I'll explore the menus in case there's something about the topic line

[22:56] <Darren_Duncan> is there something you want me to put in the topic line for you?

[22:56] <kungfuftr> autrijus: an .xs stuff at all? or easy was to port .xs based modules?

[22:56] <kungfuftr> Darren_Duncan: MacOSX:r1197(105/3116)

[22:57] <kungfuftr> <platform>:<revision>(<failed>/<total>)

[22:57] <Darren_Duncan> do you want me to try a rebuild?

[22:57] <kungfuftr> yar, from latest revision (1208)

[22:57] <Darren_Duncan> wait a few minutes

[22:58] <kungfuftr> np

[22:58] <Darren_Duncan> starting 'make' now ...

[23:04] <Darren_Duncan> starting 'make test' now

[23:04] <autrijus> kungfuftr: there will be inline support for C real soon

[23:04] <autrijus> External/C.hs

[23:05] <kungfuftr> autrijus: nice

[23:05] <kungfuftr> autrijus: anyone thought of tackling a DBI port?

[23:06] <kungfuftr> bollocks... bigger than I initially though... hhhmmm...

[23:06] <autrijus> er, port DBI::PurePerl

[23:06] <autrijus> that's all you need

[23:07] <kungfuftr> ah

[23:07] <Darren_Duncan> makes sense to me

[23:08] <Darren_Duncan> make test is still running ... fyi, I'm still on GHC 6.2, not 6.4, if that matters

[23:08] <kungfuftr> autrijus: ah! thanks, will have a peek in the morning

[23:08] <autrijus> Darren_Duncan: that's good.

[23:08] <autrijus> although if you go up to GHC 6.4

[23:08] <autrijus> you'll have a much quicker test turnaround :)

[23:09] <kungfuftr> autrijus: ghc 6.4 in ports yet?

[23:09] <Darren_Duncan> because its faster, or it skips more tests?

[23:10] <pjcj> autrijus: Would I be right in thinking that if I were to walk the AST and hook into reduce I would be able to produce a p6 coverage tool?

[23:10] <pjcj> Or maybe there's a better way?

[23:12] <autrijus> kungfuftr: yup

[23:12] * kungfuftr has another peek

[23:13] <autrijus> pjcj: yes and yes.

[23:13] <autrijus> pjcj: if you outline the things you need

[23:13] <autrijus> then I can probably add hooks for you ast part of my Eval.hs refactoring

[23:13] <autrijus> in a way that doesn't hurt any performance if not used.

[23:13] <autrijus> send to p6c :)

[23:14] <Darren_Duncan> okay, there is good news and bad news re make test

[23:14] <pjcj> OK, I'll do that.  When are you doing the refactoring?  ie, do I need to do it now?

[23:14] <autrijus> no, today is 6.0.13

[23:14] <autrijus> refactoring is next week

[23:14] <autrijus> then 6.0.14

[23:14] <autrijus> and may or may not be a 6.0.15

[23:14] <Darren_Duncan> good news is, 'All tests successful, files=144, tests=3198'

[23:14] <autrijus> then 6.2.0.

[23:14] <pjcj> OK, I'll have a think and send off some mail tomorrow then.

[23:14] <autrijus> danke

[23:14] <autrijus> happy thunking

[23:15] <pjcj> but first, sleep, I think

[23:15] <Darren_Duncan> then it appeared to try running another test suite and died

[23:15] <Darren_Duncan> citing file "t/1-basic.t"

[23:15] <Darren_Duncan> will pastebot it

[23:17] <pasteling> "Darren_Duncan" at 24.108.164.7 pasted "result of 'make test' on Mac OS X -- good news, bad news" (15 lines, 1.2K) at http://sial.org/pbot/8656

[23:17] <kungfuftr> Darren_Duncan: i assume it's a test for ext/Test/t/1-basic.t

[23:17] <autrijus> ingy will be around soon.

[23:18] <autrijus> is the "make install" overwriting perl5's Test.pm bug fixed?

[23:18] <autrijus> I'll check both with him.

[23:18] <kungfuftr> it's because pugs isn't installed in that path

[23:18] <autrijus> it shouldn't need to.

[23:19] <autrijus> it should respect HARNESS_PERL

[23:19] <Darren_Duncan> kungfuftr, probably, and I pasted the details anyway

[23:19] <Darren_Duncan> anyway, because of the death, I didn't get any (N/M) result

[23:19] <kungfuftr> autrijus: i get similar here

[23:20] <kcwu> after make clean, src/External/Haskell/*.o havn't be removed ..

[23:20] <Darren_Duncan> Note that I did the initial Makefile with the system Perl 5.8.1 but that should be acceptable

[23:20] <Darren_Duncan> Although I did get a "Warning: prerequisite ExtUtils::MakeMaker 6.15 not found. We have 6.12."

[23:21] <autrijus> Darren_Duncan: try svn up and again

[23:21] <Darren_Duncan> okay

[23:22] <Darren_Duncan> now doing 'make' again

[23:22] * kungfuftr does the same

[23:22] <Darren_Duncan> now 'make test' again

[23:23] <autrijus> kcwu: fixed.

[23:23] <autrijus> r1210

[23:23] <elmex> perl6 is dead

[23:23] <obra> long live perl6

[23:23] <kungfuftr> elmex: no no, it'll be here by christmas

[23:24] <elmex> i don't belive in miracles

[23:24] <Darren_Duncan> I'm on 1209; should I kill the test and up again?

[23:24] * obra wrote a perl6 script last week

[23:24] <autrijus> you don't need to believe when you can actually know.

[23:24] <autrijus> Darren_Duncan: no need to

[23:24] <Darren_Duncan> ok

[23:24] * obra has no faith. 

[23:24] * obra has something better

[23:25] <kungfuftr> obra: leet hacker perl skills?

[23:25] <autrijus> prescient ability?

[23:25] <obra> visible proof

[23:25] * obra waves at his proof

[23:25] <kungfuftr> obra: tatoo of a camel?

[23:26] * autrijus particles back

[23:27] <jabbot> pugs - 1210 - * kcwu reported that we should clean src

[23:27] <jabbot> pugs - 1209 - * attempt a fix at the make test bug dar

[23:27] <kcwu> does make tags works for you? i got "hasktags: src: openFile: inappropriate type (is a directory)"

[23:28] <autrijus> kcwu: fix please :)

[23:29] <kcwu> autrijus: ok, just make sure it's not my own problem :)

[23:31] <Darren_Duncan> autrijus, it now has no errors and says all tests successful

[23:35] <kcwu> err, seems that vim doesn't like tags file generated by hasktags :(

[23:37] <jabbot> pugs - 1212 - hasktags only likes files, not directory

[23:37] <jabbot> pugs - 1211 - minor LKT 5v1.03 sync update, ignorable

[23:42] <stevan> autrijus: any way to make split support regexp quickly?

[23:44] <kungfuftr> stevan: you can do split with pure perl5 regexes

[23:45] <stevan> kungfuftr: how :)

[23:46] <kungfuftr> stevan: my @foo = $string =~ /<insert voodoo regex here>/;

[23:46] <stevan> :)

[23:47] <jabbot> pugs - 1213 - * tags file should depend on source file

[23:47] <stevan> ok, hopefully I can make the regexp Voodoo work in pugs :)

[23:47] <kungfuftr> it requires doing some zero lookahead assertion and use of the g modifier

[23:47] <stevan> kungfuftr: my regexp fu is only so-so

[23:48] <stevan> I am trying to do this: split /([A-Z]<\s+|[A-Z]<|\s+>|>)/, $text

[23:49] <stevan> any thoughts on how to convert it?

[23:49] <kungfuftr> 2 secs, i'll have a think

[23:49] <stevan> cool

[23:49] <kungfuftr> stevan: can you give me a copy of the text?

[23:50] <stevan> yeah

[23:50] <stevan> perlbot nopaste

[23:50] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[23:50] <pasteling> "stevan" at 67.186.136.119 pasted "split -> to -> //g" (10 lines, 328B) at http://sial.org/pbot/8658

[23:52] <stevan> kungfuftr: BTW - I am doing it in perl5 right now

[23:52] <stevan> to make sure my logic is right

[23:53] <kungfuftr> yar, will do same here

