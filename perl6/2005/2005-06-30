[07:20] * mugwump works far too late at a job that jumped the shark about 6 months ago

[07:31] <svnbot6> r5127, pdcawley++ | Added test for nested, named subroutines.

[09:37] <kungfuftr> morning all

[09:38] <mugwump> hi scott

[09:39] * mugwump ducks off & # ... damn pre-launch evenings

[12:35] <gaal|work> ping -1

[12:36] <gaal|work> pugs -CPugs produces output that contains things like

[12:36] <gaal|work> envGlobal = <ref>

[12:37] <gaal|work> how is this supposed to work?

[12:37] <Limbic_Region> any LiveJournal users out there?

[12:37] * gaal|work raises his hand

[12:38] <gaal|work> need anything, L~R?

[12:38] <gaal|work> The <ref> thing breaks compilation, because it gives

[12:39] <gaal|work> # /home/roo/src/pugs/MainCC.hs:434:252: parse error on input `<'

[12:39] <Limbic_Region> do you follow the perl communit journal there?

[12:39] <gaal|work> no, i think i only visitied once or twice.

[12:39] <Limbic_Region> I dropped my LJ some time ago for personal reasons

[12:40] <Limbic_Region> but I have been reading the perl community journal there off and on for a while

[12:40] <gaal|work> k

[12:40] <Limbic_Region> I have noticed quite a bit of linking to O'Reilly copyrighted material

[12:40] <Limbic_Region> as well as some flat out lies about p6

[12:40] <Limbic_Region> http://www.livejournal.com/community/perl/102202.html

[12:41] <Limbic_Region> I did what I could as Anonymous Coward - but think that registered members might have more weight in their responses

[12:42] <gaal|work> FWIW, LJ's origianl author, Brad, is pushing hard a new decentralized identity system, so you don't strictly need an LJ account to make identified contributions.

[12:42] <gaal|work> openid.net

[12:44] *** calvin__ is now known as calvin_

[12:44] <gaal|work> what lies do you see there? i think you may be taking it a little harshly. misinformed opinion maybe, but where's the lie?

[12:45] <Limbic_Region> gaal - not necessarily in that post - general trend over time

[12:46] <gaal|work> *shrug* i can't make everyone enlightened.

[12:46] <Limbic_Region> nor can I 

[12:46] <gaal|work> (that was an understatement)

[12:46] <Limbic_Region> I was just wondering how many people here were LJ users

[12:47] <Limbic_Region> and either didn't bother or were unaware with the community

[12:50] <gaal|work> L~R, does pugscc work for you? script/pugscc --pugs -e "say <hi>" --run

[12:50] <gaal|work> I think it broke, but I want to know where

[12:51] <gaal|work> we need this for the precompiled prelude thing

[12:56] <Limbic_Region> I have been compiling since I got in this morning - 55 minutes so far (and that was only taking into account changes in the last 24 hrs)

[12:56] <Limbic_Region> when it finishes, I will let you know

[12:59] <pdcawley> ?eval my %hash = ( if => 'then')

[12:59] <evalbot6> {('if' => 'then')} 

[12:59] <pdcawley> coo... id've thought that would have been a pita to parse.

[13:00] <QtPlatypus> It will be, at the moment => stringafies its LHS.

[13:02] <gaal|work> anyone around with a working pugscc?

[13:02] <gaal|work> (thanks, l~r!)

[13:25] <Limbic_Region> gaal - turns out that pugscc isn't recognized by Win32 (though I distinctly remember running it in the past)???

[13:26] <gaal|work> beh. can you try to run it with perl explicitly? (it's a p5 script)

[13:26] <gaal|work> i have to leave now for a few hours

[13:27] <gaal|work> but really i think the compiler itself is broken. the problem needs to be backtraced

[13:27] <gaal|work> anyway - thanks - bbl

[13:31] <stevan_> jabbot: seen autrijus

[13:31] <jabbot> stevan_: autrijus was seen 7 hours 24 minutes 57 seconds ago

[13:53] * coke__ skips the huge review and hopes he didn't miss anything.

[13:53] <svnbot6> r5128, Stevan++ | Perl6::MetaModel - More refactoring before the plane back to the states

[14:12] <svnbot6> r5129, Stevan++ | Perl6::MetaModel - The last vestiges of the old republic has been swept away! The meta model is now clean (well except for roles, I will do those on the plane home)

[14:40] <autrijus> gaal: yes, pugscc is broken like that. will fix

[15:03] <pdcawley> Have we got any design/tests on querying variables for their traits (or do I mean properties)?

[15:16] <kolibrie> I think those are in t/var

[15:44] <Liquid> hello

[15:44] <kungfuftr> castaway_: OI!

[15:45] <Liquid> I'm trying to get mortgage rates from a website to put on to my website and I dont know how to go about it, I need it so it updates automaticly

[15:45] <coke__> and you want to write it in perl6?

[15:45] <Liquid> Well 

[15:45] <Liquid> I'm willing to write in what ever works 

[15:45] <Liquid> *it

[15:46] <coke__> "this is not the channel you're looking for"

[15:46] <Liquid> Thanks

[15:46] <Liquid> Any suggestions?

[15:47] <osfameron> perlmonks.org # not irc, but possibly more helpful

[15:47] <Liquid> Thank you

[15:47] <Liquid> Y'all have a good day

[15:50] <Limbic_Region> also #perl

[15:50] <osfameron> but that's more of a social clubi

[15:50] <osfameron> people seem to get a bit bad tempered about technical questions

[15:50] <osfameron> (sometimes)

[15:51] <Limbic_Region> happens at the Monastery too - though less often

[15:51] <osfameron> really?  I've not looked at anything except weekly best for quite a while now

[15:52] <wolverian> efnet #perlhelp is quite helpful at times

[15:53] <Limbic_Region> osfameron - heh - you should see some of the flamewars 

[15:53] * QtPlatypus keeps thinking of the Monastry as the 'Scary devil Monastery' and they dislike technicall questions.

[15:53] <Limbic_Region> but for the most part, the noise:signal ratio at the Monastery is quite good

[15:54] <coke__> pmi?

[15:56] <coke__> will perl6 support recursive grammars?

[15:56] <coke__> (rules defined in terms of themselves?)

[15:56] <QtPlatypus> coke__: I beleve they should.

[15:57] <coke__> which variant of should is that? =-)

[15:57] <QtPlatypus> SHOULD

[15:57] <nothingmuch> morning

[15:57] <coke__> I'll clarify my request for clarification. =-)

[15:58] <coke__> is it in the p6bible, do you know? are you saying they should because you think it's nifty? because @larry said so?

[15:58] <coke__> or, more simply, I suppose, are you speaking from a position of authority in such matters.

[15:58] <kungfuftr> coke__: a gramme is a rule... and rules are recursive.

[15:59] <kungfuftr> so... all things being... i'd have thought so

[15:59] <QtPlatypus> I'm saying that it should because it's nifty and without recurvive rules you wouldn't be able to define alot of usefull grammers.

[16:00] <coke__> danke. now to figure out if patrick's actually made it work yet.

[16:00] * Limbic_Region is finally at a point to start working on condensing his ball balancing code but needs to go to lunch

[16:00] <Limbic_Region> food &

[16:01] <nothingmuch> seen autriju

[16:01] <jabbot> nothingmuch: I havn't seen autriju, nothingmuch

[16:01] <nothingmuch> s

[16:01] <nothingmuch> seen autrijus

[16:01] <jabbot> nothingmuch: autrijus was seen 1 hours 21 minutes 36 seconds ago

[16:02] <nothingmuch> hmm... i wonder if stevan & luqui gave autrijus my tripod.

[16:02] * nothingmuch forgot it in their room

[16:02] <QtPlatypus> Isn't that the diffrence between regular expression and a rule anyway?

[16:04] <coke__> I'm trying to get at this from inside parrot, not from pugs, so I'm not entirely up to speed on the p6 aspect of things.

[16:06] <coke__> Anyone interested in writing a perl6 grammar for tcl expressions? =-)

[16:07] <kungfuftr> sicko

[16:07] <coke__> yes?

[16:08] <Odin-> Is that sick? :p

[16:09] <kungfuftr> then again... i was thinking about introducing some ecmascript stuff into perl6.. but anyhows

[16:10] <Odin-> Again ... is that sick? ;p

[16:10] <kungfuftr> probably... but i'm biased

[16:10] <coke__> well, if anyone *is* feeling sick, the "spec" is at http://www.tcl.tk/man/tcl8.5/TclCmd/expr.htm . =-0

[16:13] <Khisanth> not sick, bored maybe ...

[16:15] <kungfuftr> coke__: might be more intresting to auto codegen using lex/yacc files (can't remember the name of the process)

[16:16] <nothingmuch> oh crap, poor autrijus

[16:17] <kungfuftr> bnf even

[16:18] <kungfuftr> BNF grammar -> perl6 grammar

[16:20] <coke__> I don't want to require lex/yacc.

[16:21] <QtPlatypus> BTW do you know if there is any plans to back port PGN into perl5 so we can avoid the cost of Parse::RecDecent

[16:21] <QtPlatypus> PGE

[16:22] <kungfuftr> coke__: it would be a one-time operation with lex/yacc, etc

[16:22] <nothingmuch> if autrijus comes in, tell him i left to pick him iup

[16:29] <integral> PGE's PIR -> Perl6 -> PIL -> Perl5 ...

[16:33] <Odin-> Wouldn't PGE run through Ponie?

[16:34] <kolibrie> should, since it's all in parrot, and not tied to perl6

[16:46] <coke__> I'm tempted to implement a wrapper for this in partcl.

[17:07] * geoffb appears fuzzily

[17:07] <geoffb> oy, almost a full day of backlog to read

[17:07] <geoffb> ackpth

[17:15] <gaal> rehi

[17:23] <geoffb> Hey gaal, what's up?

[17:23] <gaal> all good. waiting for pugs to build so i can see if pugscc is fixed

[17:24] <geoffb> :-)

[17:25] <geoffb> God, it's like a badly run PBS telethon

[17:25] <gaal> how so?

[17:25] <geoffb> The last message from lilo -- why would the message need to be repeated to our server only?

[17:26] <geoffb> oh wait -- you may not have seen it.

[17:26] <geoffb> Duh.

[17:26] <gaal> true

[17:26] * geoffb goes back to reading backlog on various channels

[17:32] <coke__> if I run pugs in interactive mode, type some crap and *tap* delete, it proceeds to delete the entire line one char at a time.

[17:32] <gaal> OS?

[17:33] <gaal> oh, i forgot, it doesn't run in win32 anyway

[17:33] <coke__> os x

[17:33] <gaal> but it looks like your readline lib is crazy

[17:34] <gaal> does, eg, the CPAN shell do the same?

[17:34] <coke__> works fine for everything else. =-)

[17:34] <gaal> assuming you have the same readline there

[17:34] <coke__> I grabbed a pre-built GHC. that'd be my first guess as to borkage.

[17:34] <gaal> FW(vl)IW, this worksforme on linux

[17:36] <coke__> is there a nopaste for this channel?

[17:36] <gaal> perlbot nopaste

[17:36] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[17:37] <pasteling> "Coke" at 199.33.156.133 pasted "simple grammar" (9 lines, 165B) at http://sial.org/pbot/11455

[17:38] <coke__> that kills PGE. (using the demo.pir handler, which doesn't exactly use perl6 to define a grammar). Does that seem like a reasonable grammar?

[17:39] <gaal> no idea. are mutually recursive rules allowed?

[17:39] <coke__> this is why I asked earlier about recursive grammars. =-)

[17:39] * gaal is rule-ignorant

[17:39] * gaal is backlog-ignorant too :)

[17:39] <coke__> alternatively, is there a non recursive way to write that.

[17:43] <gaal> dunno :)

[17:43] <coke__> I don't see any tests yet for grammar. hurm.

[17:49] <gaal> oh, too bad, pugscc is still broken :(

[17:53] <integral> in what way is pugscc broke?

[17:53] <Limbic_Region> gaal - on the bright side, I finally got my ball balancing code working and condensed

[17:53] <gaal> integral: the haskell target produces code that doesn't compile

[17:53] <gaal> it has things like <ref> in the generated globC

[17:53] <gaal> can you fix that?

[17:54] <integral> oh, I'd expect that that's known since Pugs.Compile.Haskell isn't using PIL (and the new Pugs.CodeGen system)

[17:54] <gaal> L~R, the puzzle? cool

[17:54] <integral> not something I really know how to fix

[17:55] <Limbic_Region> gaal - it isn't a solution to the challenge - it is a solution to the puzzle

[17:55] <gaal> Is PIL mature enough to compile everything no?

[17:55] <gaal> now

[17:55] * integral doesn't know

[17:55] <Limbic_Region> http://perlmonks.org/index.pl?node_id=471405  # if you are interested

[17:56] <gaal> thanks, L~R

[17:56] <gaal> hmm, well fwiw pugs -CPIL on Prelude.pm doesn't *croak*, but that doesn't say much

[17:57] <jdv79> what does it do? :)

[17:57] <gaal> oh, my bad

[17:57] <gaal> on -e 'say <hi>' it doesn't croak

[17:57] <gaal> on Prelude.pm it does :)

[17:58] <gaal> grrrr, no, i'm completely dyslectic it seems!

[17:58] <gaal> diskless

[17:58] <gaal> or something :)O

[17:59] <gaal> but it doesn't emit anything remotely like an AST for the prelude (only four lines :)

[18:00] <gaal> hey, weren't semicolons at the end of where blocks once required?

[18:00] <gaal> when /moose/ { say <hi> };

[18:00] <gaal> (*when* blocks, eep)

[18:02] <gaal> brb

[18:22] <spinclad> coke__, aside from mutual recursion, i see two issues with your grammar, and wonder if it's saying what you intend:

[18:23] <spinclad> 1.  <expr>*<expr> should be the same as <expr>+.  Should you excape the *?

[18:24] <wolverian> gaal: not in perl6. when is a statement

[18:24] <wolverian> gaal: dunno about pugs :)

[18:24] <spinclad> 2.  if you do, then A*A*A*A has five parses.  Do you intend to parse uniquely?

[18:26] <coke__> bah. yes, I mean to escape the *

[18:26] <coke__> please explain #2, pretending I don't know anything. =-09

[18:26] <gaal> wolverian: thanks

[18:26] <coke__> (e,r =-)

[18:27] <coke__> (changing that, I get a match in demo.pir, and can "next" until I exceed max recus depth in parrot)

[18:27] <spinclad> A*(A*(A*A)) A*((A*A)*A) (A*A)*(A*A) (A*(A*A))*A ((A*A)*A)*A

[18:29] <gaal> anyone know what autrijus' schedule is? i mean both for flights and for, eh, flights.

[18:29] <coke__> My ultimate goal would be to have that to the last one of your examples.

[18:29] <coke__> er, "have that translate"

[18:33] <gaal> wow! $obj.perl is real neat

[18:33] <spinclad> your grammar is ambiguous.  fraid i can't speak about PGE here (haven't dug into it);  

[18:33] <coke__> how can I disambiguate it?

[18:33] <coke__> (a pointer to a non perl6 way of doing so would also be fine)

[18:34] <spinclad> some grammar engines have constraints on the grammars they'll accept

[18:35] <spinclad> yacc and bison are the two i've used; antlr i expect; plenty of others i don't know

[18:36] <spinclad> key buzzwords: LL(n), LR(n), LALR(n) grammars

[18:36] <spinclad> as soon as you research these you'

[18:36] <coke__> http://pltplp.net/lex-yacc/example.html.en appears to have the sort of thing I want.

[18:36] <spinclad> ll probably know more than me

[18:40] <kolibrie> gaal: I think nothingmuch knows something about autrijus' flight

[18:40] <spinclad> rule expr { <binary> }; rule binary { <atom> | <expr> \* <atom> }  should be unambiguous

[18:40] <kolibrie> but he disappeared in a hurry a few hours ago

[18:41] <kolibrie> gaal: luqui and stevan may also have known, but they left the conference four hours ago

[18:41] <gaal> kolibrie, are there still talks on now?

[18:41] <coke__> the con ended yesterday, no more talks.

[18:41] <coke__> (i'm guessing people were hanging out and getting stuff done,though)

[18:42] <gaal> oh, i thought for some reason this was day 4

[18:42] <gaal> 3

[18:42] <kolibrie> nope, yesterday was it

[18:42] <gaal> guess i'm a little mixed up :)

[18:42] <gaal> well in that case he's probably asleep! :)

[18:42] <kolibrie> possibly

[18:43] <kolibrie> or in transit

[18:43] <gaal> yeah, that happens more often

[18:47] <coke__> spinddf~!~

[18:47] <spinclad> he slept 16 hours this morning

[18:47] <gaal> long morning!

[18:47] <spinclad> coke_ae76?

[18:48] <spinclad> (or was that yestermorn? i've lost track)

[18:48] <coke__> my screen session went south, sorry.

[18:49] <coke__> hurm. with your suggested change, I can get PGE to bus error much more frequently. =-)

[18:50] <spinclad> but at least unambiguously :)

[18:50] <gaal> bbiab

[18:51] <spinclad> (i gotta finish building everything so i can talk more than theory!)

[19:48] <svnbot6> r5130, iblech++ | * Usual svn properties added to various new files.

[19:48] <svnbot6> r5130, iblech++ | * Added "#ifndef HADDOCK" directive to src/Emit/PIR/ParrotObject.hs so Haddock

[19:48] <svnbot6> r5130, iblech++ |   runs again.

[19:48] * eric256 returns after nearly two week without pugs.....soo long!!! ;)

[19:48] <Darren_Duncan> especially in internet time

[19:49] <eric256> especially in pugs internet time

[19:49] <Darren_Duncan> that's like a year in Pugs time

[19:49] <eric256> just finished reading the current page of journal....now to travel back....back...way back....to the page before the current page. ;)

[19:55] <coke__> bah. does autrijus's journal have its own rss feed?

[19:56] <gaal> coke__, use.perl.org offers feeds. eg. syndicated on http://livejournal.com/users/autrijus_rss

[19:57] <eric256> it is are to read the journal, find last entry, read, scroll up and find previous entry, read down, scroll up agian....okay not hard, just weird. lol

[19:57] <eric256> s/are/hard/

[19:58] <coke__> goal - that looks like HTML. is there no actual feed ?

[19:58] <gaal> that's a known quirk with onilne journals. some hosts have day pages you can go to a certain date and navigate forward from.

[19:58] <coke__> ah. that points back to feed://use.perl.org/~autrijus/journal/rss

[19:58] <coke__> thank you. =-)

[19:58] <gaal> coke__, http://use.perl.org/~autrijus/journal/rss

[19:58] <gaal> yup

[19:59] <coke__> why that's not aggregated into planet parrot, I'llnever know. =-)

[20:06] <wolverian> coke__: planet.perl.org 

[20:06] <wolverian> and planetsix.perl.org 

[20:07] <coke__> ah.

[20:08] <coke__> ah well, I've grabbed autriju's, that's good enough for now. =-)

[20:09] <nothingmuch> evening

[20:09] <gaal> hey nm!

[20:09] <nothingmuch> hi ho

[20:09] <nothingmuch> what's up?

[20:09] <gaal> dunno, but pugscc is down :)

[20:09] * nothingmuch will hack up consolidated smoke viewing as soon as he goes to the bathroom.

[20:10] <nothingmuch> i'll tell autrijus when he wakes up

[20:10] <gaal> kewl

[20:10] <gaal> when are flights scheduled?

[20:10] <wolverian> http://www.geeksunite.net # help chip

[20:11] <nothingmuch> mine arrives on June 3, 3:45

[20:11] <nothingmuch> israel time

[20:11] <nothingmuch> autrijus's leaves at around the same time, july 2nd, canada time

[20:11] <nothingmuch> err, s/June/July/;

[20:11] <eric256> june 3?  ehhh perhaps you mean July?

[20:12] <gaal> when's pugs planned to fly?

[20:25] <kolibrie> nothingmuch: did you find your tripod?

[20:35] <putter> coke__: ping?

[20:36] <coke__> pong

[20:36] <putter> hi, recursive rules are supported,

[20:37] <putter> rule binary { <expr>*<expr>} should probably be rule binary :w { <expr> \* <expr>}

[20:38] <putter> the :w means whitespace in pattern matches optional(? hmm, I better check that) ws in target.

[20:39] <putter> there are grammar tests, some never enabled, some disabled recently when PGE was broken by the new parrot calling conventions.

[20:41] <coke__> and how do you specify the :w at the parrot level?

[20:41] <coke__> (since that's outside the rule itself)

[20:41] <putter> I have drafts of non-pge rx engines in p6 and p5.  the p6 ones are rather crufty due to current pugs limitations.  there hasnt been much interest in grammars (your's is the first I've seen), so I have them all backburnered.  if you'd like to push on something, like a tcl expr grammar, that could be fun...

[20:41] <coke__> putter: that's exactly what I'm writing. it's failing wonderfully! =-)

[20:42] <putter> re :w, you can put it in the rule, but dollars to donuts, its not yet implemented by pge...

[20:43] <coke__> eh. I can make the whitespace explicit for now, that's not an issue.

[20:43] <coke__> the fact that I can't seem to make demo.pir do any kind of nontrivial recursion is, however.

[20:44] <nothingmuch> kolibrie: yes I did, it was with autrijus after all

[20:45] <putter> I don't know the state of pge re recursion.  You can recurse in pcre (using names), and in p5 (using code returning regexes).

[20:45] <kolibrie> nothingmuch: awesome

[20:45] <coke__> eh. PGE or bust.

[20:45] <putter> re pge or bust, well...

[20:47] <putter> If you have a grammar you would like to have work in p6 (as opposed to parrot), I can dust of enough of a p6 engine to drive it.  Especially if namespaces have started working better.  Won't get done today though.

[20:47] <putter> s/dust of/dust off/

[20:48] <nothingmuch> ugh.... Method::Alias uses ExtUtils::AutoInstall, which needs CPANPLUS

[20:48] <putter> PGE is currently limited enough that it is straightforward to use try/die backtracking to do an re match.

[20:49] <putter> err, limited enough ... to do an _equavalent_ ...

[20:49] <nothingmuch> that's so overkill for something that simly does adds some subs to the caller of import

[20:49] <nothingmuch> *sigh*

[20:49] <nothingmuch> oh, CPANPLUS is optional

[20:50] <coke__> putter: I appreciate the offer, but I'm working in parrot, not perl6. I'll just keep bugging pmi

[20:51] <putter> coke__: oh, and you can "use" : :: ::: cuts to prune grammars.  Though I suspect pge hasnt implemented them yet.

[20:52] <kolibrie>  putter: I'm interested in grammars, but no hurry

[20:52] <coke__>  putter: I'm enough of a noob that I don't get how that helps me.

[20:53] <coke__> ah. prevent recursion where possible?

[20:54] <putter> re parrot v p6, ah, ok.  let me know if you want a grammar, or a :parsetree, for regexps (to replace pge parse).  that was the original objective of my... puttering.

[20:55] <putter> kolibrie: :) Well, let me know if I can assist.

[20:55] * putter thinks grammars are going to end up being _very_ nifty...

[20:57] <putter> coke__: re cut, managing backtracking, either for efficiency or control, is the biggy... so yes, you can use it to control recursion.

[20:58] <coke__> of course, being a noob, I still don't know where I'd put such things.

[20:59] <putter> the cuts are basically "commits" with assorted "so, if you fail after reaching me, instead of just backtracking normally, fail back mumble far".

[21:01] <putter> Dont worry about them to start with.  When you find things that take horribly long to (not/)match, or you get multiple match results and you want to get rid of some of them, or...,  then you can worry about them.

[21:02] <putter> s/When/If/  # see also, premature optimization ;)

[21:04] <putter> coke__: well, if you have any questions at all...  I'll try to find answers...

[21:04] <coke__> hurm. I should write something that does what demo.pir does so I can keep my grammar as a perl6-looking thing, and import it into parrot automatically. Should make getting help from y'all easier. =-)

[21:05] <kolibrie> putter: thanks, I'll holler when I'm floundering

[21:06] <putter> its easy to create a string containg the code for a couple of rules, and yank them out with a regexp, generating whatever form you need.  thats how I dealt with grammars not yet existing.

[21:06] * putter thinks of several fish puns, several involving dogs/pugs

[21:07] <putter> I have to run, but do backread irc.

[21:07] <putter> &

[21:08] <kolibrie> pmichaud had nice slides of the current state of rules/grammars/pge, which he promised to put online

[21:08] <kolibrie> so someone can update S05

[21:13] <Darren_Duncan> following wolverian's posting ... that's unfortunate what happened to Chip Salzenberg

[21:34] <nothingmuch> irssix crashes too often

[21:37] <nothingmuch> autrijus says: "i have a dream, i dream of languages judged not by their runtime but by their charectaristics"

[21:37] <nothingmuch> and now he's going back to sleep

[23:07] <coke__> ah. pge seems to respect the :w modifier if you put it in as the first part of the rule.

[23:18] * coke__ wonders how to weld perl6 grammars into a tcl syntax.

[23:19] <Limbic_Region> I saw your journal

[23:19] <Limbic_Region> you are looking at using PGE from within Parrot correct - and not Pugs?

[23:21] <coke__> <nod<>

[23:21] * coke__ decides to let the tcl people figure out the syntax they want.

[23:22] *** kungfuftr changes topic to: 6.2.7 released! | http://pugscode.org/ <Overview Journal Logs> | http://pugs.kwiki.org | paste: http://sial.org/pbot/perl6 | Chip needs help!!! http://www.geeksunite.net

[23:25] <Limbic_Region> kungfuftr - I am having trouble accessing the main site (it's been slashdotted) - perhaps include a mirror?

[23:34] <kungfuftr> http://phoenixrising.ws/mirror/www.geeksunite.net/

[23:36] <Limbic_Region> I meant in the topic

[23:37] <Limbic_Region> but I think it will all settle down in a bit

[23:37] <Limbic_Region> getting slashdotted probably killed the main site

[23:38] <kungfuftr> yar... i'm _sorta_ getting it

[23:49] <Juerd> I wonder - is all the weird stuff with names *coindidentally* happening much in the perl community

[23:49] <Juerd> Or does Perl attract weird people

[23:50] <coke__> this was discussed on lily earlier today. Exactly.

[23:50] <Juerd> I can think of at least 4 examles, including myself

[23:50] <Juerd> (chromatic, abigail, brian d foy, juerd (I use that as my first name, but it is not))

[23:50] <Juerd> There are probably more.

[23:51] <Juerd> Perhaps people even with normal looking names, who are really someone entirely different

[23:51] <Limbic_Region> Dan Sugalski goes by Elian at the Monastery

[23:51] <Juerd> that's just a nick, isn't it?

[23:51] <Limbic_Region> oh - you mean beyond online handles 

[23:52] <Juerd> I'm more referring to people who use something weird as their rYea

[23:52] <wolverian> that last word really freaked out here 

[23:52] <Juerd> oh goddamn, it's so annoying if irssi interprets typing-faster-than-the-connection-can-handle as a paste

[23:52] <wolverian> set the autopaste thing off :)

[23:52] <Juerd> I first wanted to type "I'm more referring to people who use something weird as their real name"

[23:52] <Juerd> Then tried to erase that with ^U

[23:53] <wolverian> how do you define weird in a multicultural society though?

[23:53] <Juerd> Then acknowledged L~R's "oh - you mean beyond online handles" with Yea.

[23:53] <wolverian> I usually use the arrow keys, in case I want to recall the line after all

[23:53] <wolverian> that is slower, though.

[23:54] <Juerd> wolverian: Well, using a nickname as your real name (to the extent of having it printed on/in books is rather extreme) or having a guide for capitalisation, or the combination of that, I find weird :)

[23:54] <Juerd> Even though I do that myself.

[23:54] <Juerd> wolverian: ^Y recalls a ^U-deleted line.

[23:55] <Juerd> I must admit that when I read in scrotties book my own name as "Juerd Waalboer" I found it weird

[23:55] <Juerd> Even though I myself chose to use that name, even on CPAN.

[23:56] <wolverian> oh, well. yes. that is extreme.

[23:56] <wolverian> I do prever my nick in all lc, so I guess I'm weird too, in a small way.

[23:56] <wolverian> er. s,v,f,

[23:56] <Juerd> I wonder if Perl does this to people, or whether Perl attracts these people, or if it's just all coincidence

[23:57] <Juerd> Nah, just wishing for proper capitalization of a handle|nick is normal I think

[23:57] <wolverian> oh, right. only if you wish it on your real name.

[23:57] <Juerd> Although wishing that something is lc even at the beginning of a sentence is a bit weird :)

[23:57] <wolverian> (or nick as real name, or whatever the other way around, maybe.)

[23:58] <wolverian> Juerd: I like chromatic because of that. :)

[23:58] <Juerd> Oh, I do like it.

[23:58] <Juerd> But even though I myself do a similar thing, I find it weird

[23:59] <Juerd> (With me, it just slowly got to be like this, up to the point where I sort of decided to keep it that way)

