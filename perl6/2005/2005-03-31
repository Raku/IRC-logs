[00:00] * crysflame nods

[00:34] <kungfuftr> nn all

[01:13] <Darren_Duncan> Here's something for you Mac OS X users ...

[01:14] <Darren_Duncan> The result of a short intro exchange I had with BareBones Software is that they will indeed be adding Perl 6 specific syntax coloring et al to BBEdit 8, in response to my feature request (fwd to the lists 2 days ago), though specific dates are unknown as yet

[01:15] <Darren_Duncan> Also, aside from the legal paperwork, I have been accepted as a beta tester for that feature once its is ready

[01:17] <Darren_Duncan> For those of you who don't know about it, this is the program: http://www.barebones.com/products/bbedit/index.shtml

[01:23] <crysflame> bbedit rules

[01:23] <crysflame> REALLY

[01:23] <crysflame> Darren_Duncan++ # hot damn, you rule

[01:24] <Darren_Duncan> crysflame, I also asked and ...

[01:24] <Darren_Duncan> other people such as yourself, who use the program, can also apply to beta test this feature

[01:25] <Darren_Duncan> that said, they don't want to maintain a huge beta pool, so prefer just the most qualified candidates

[01:26] <Darren_Duncan> a wild guess of mine is that about a half-dozen of us who work A LOT with Perl 6 and know it inside and out is probably about the right maximum

[01:27] <Darren_Duncan> chrysflame, are you on version 8, or an older version?

[01:27] <Darren_Duncan> I mean crysflame

[01:31] <crysflame> i do not use bbedit

[01:31] <crysflame> but thank you for the offer

[01:31] <crysflame> even if i were to beta test it i wouldn't use it much, and my perl6 experience is so slim as to be nearly nil

[01:32] <crysflame> it would be a waste of their time to accept me as a beta tester right now :) maybe in a while

[01:32] <crysflame> i submit ingy in my place

[01:32] <Darren_Duncan> so was your praise of the program based on third party experience rather than yours?

[01:32] <crysflame> no, i've used it before

[01:33] <Darren_Duncan> what do you use now?

[01:33] <crysflame> i use vim and textedit

[01:33] <crysflame> textedit is super lightweight

[01:33] <Darren_Duncan> I see

[01:33] <crysflame> vim is heavy and effective

[01:33] <crysflame> bbedit doesn't offer me anything that i don't already have satisfied elsewhere :|

[01:34] <Darren_Duncan> I find that BBEdit has lots of features but is not bloated, and many features I use everyday that the likes of textedit don't have ... I also find command-line editors (eg vim) to be too difficult to use, even if they are powerful

[01:34] <Darren_Duncan> it also keeps improving greatly with each version.

[01:35] <Darren_Duncan> my last version was 6.5, from 3 years earlier ... big improvement since then

[01:35] <Darren_Duncan> prior to that, I used the Lite 4.1 for years, which was free

[01:35] <Darren_Duncan> now, Text Wrangler is free

[01:35] <Darren_Duncan> since its free, its no sacrifice for you to try TW

[01:37] <Darren_Duncan> I just like the look and feel of it too

[01:37] <Darren_Duncan> more so than anything else

[01:39] <Darren_Duncan> crysflame, you suggested Ingy as a candidate ... do you know for a fact that he uses Mac OS X?

[01:41] <q[acme]> he's got an ibook and everything

[01:41] <crysflame> yes

[01:42] *** theorbtw1 is now known as theorbtwo

[01:52] <theorbtwo> svn rm util/catalog_tests.pl ; svn mv util/catalog_tests.jmm.pl util/catalog_tests.pl OK with everyone and the right way to do it?

[01:57] <stevan> theorbtwo: no

[01:58] <stevan> oh wait

[01:58] <stevan> yest that is right

[01:58] <stevan> sorry read it wrong

[01:58] <theorbtwo> Whew, because I already did it.

[01:58] <stevan> :)

[01:58] <stevan> I switched the rm and mv at first

[01:59] <theorbtwo> Also, replaced a bunch of code.  Still has more or less the same problems as before, but seems a lot cleaner to me.

[01:59] <theorbtwo> Also, it works around it's own problems at least somewhat.

[02:01] <jabbot> pugs - 1360 - ...in with the new (I hope I didn't mess

[02:01] <jabbot> pugs - 1359 - Out with the old...

[02:01] <jabbot> pugs - 1358 - catalog_tests: This code has around the 

[02:32] <kcwu> I expect "$x=-> $a { -> $b { $a+$b }};" should work as "$x=sub ($a) { sub ($b) { $a+$b }}", but pugs doesn't. Is pugs wrong? Or I am wrong?

[02:33] <theorbtwo> Your expectations mesh with mine.

[02:41] <jabbot> pugs - 1361 - Fix links.  (Who tried to put syntatic q

[02:56] <autrijus> hi lambdacamels!

[02:56] <autrijus> it seems that there's another Pugs hackathon at June, a few weeks before yapc::na

[02:56] <autrijus> featuring leo toetsch and yours truly!

[02:57] <theorbtwo> A few weeks?

[02:57] <autrijus> details tbd (austrian perl workshop)

[02:58] <theorbtwo> Oh, OK then.

[02:58] <autrijus> 9th 10th june

[02:58] <theorbtwo> I'm going halfway out of my mind trying to schedule my summer vacation, but if this is in australia, I don't care.

[02:58] <theorbtwo> Oh.  Austria.  Possibly I care.

[02:58] <autrijus> :D

[02:58] <theorbtwo> Oh: Good-morning.

[02:58] <autrijus> Vienna.pm++

[02:59] <autrijus> good morning :)

[02:59] <hcchien> Vienna!!

[03:00] * theorbtwo thinks he's in the mood for a new and deeper project, so you've showed up just in time for me to quiz you about the parser...

[03:01] <autrijus> woot

[03:01] <autrijus> quiz away

[03:01] <autrijus> kcwu: I think it's a bug (or likely a bug). write a test?

[03:02] <theorbtwo> Is there a reason that identifier `sepBy1` (try $ string "::") is repeated all over the place, or should they be taken out and replaced with a common (monadic) function?

[03:02] <autrijus> there's no reason

[03:02] <autrijus> please refactor away

[03:02] <autrijus> call it ruleQualifiedIdentifier

[03:02] <autrijus> or something like that.

[03:03] <theorbtwo> Does that belong in... ah, that was one of my next questions.  Lexer or Parser?

[03:03] <autrijus> your call. I don't terribly care.

[03:03] <theorbtwo> OK.

[03:03] <theorbtwo> Parser it is.

[03:03] <autrijus> =)

[03:09] <stevan> hey autrijus, good morning

[03:12] <kcwu> How do I write tests if pugs runtime error? comment that line and write fail("msg") ?

[03:12] <stevan> kcwu: does it work with eval ?

[03:12] <stevan> or does it fail with that as well

[03:13] <kcwu> even with eval(), pugs terminate when encounter that line

[03:14] <stevan> comment out the test and use fail

[03:14] <stevan> but there is a standard message ,.. it should be in t/README somewhere

[03:14] <stevan> fail("FIXME parsfail")

[03:14] <stevan> I think

[03:15] <stevan> and if it is a bug, use fail(), but if it is un-implemented feature, use todo_fail()

[03:15] <theorbtwo> Hm, I'd really rather the actual code be present in the message issued, so it shows up in my HTML thingy.

[03:16] <stevan> theorbtwo: good idea, can you ammend t/README to say that?

[03:16] <theorbtwo> Hm, I probably shouldn't have broken the smoker while kungfuftr is asleep.

[03:16] <theorbtwo> Oh, wait, he's not using the bit... I wonder why it's not running, then.

[03:16] <theorbtwo> Oh, it is, but his clock is wrong.

[03:17] <stevan> did he get it to watch the RSS feed?

[03:17] <stevan> or is it just a regular cron?

[03:18] <theorbtwo> Last I heard, a cronjob running at 0 and 30 past the hour.

[03:18] <theorbtwo> But the time in the title tag says 2:57:21 (GMT), but the r shown is up-to-date.

[03:19] <theorbtwo> So I'm confused.

[03:21] <jabbot> pugs - 1362 - add tests for nested "pointy" block

[04:53] *** hoowa2 is now known as hoowa

[04:56] <theorbtwo> Oh.  Nevermind, the smoker's running, it's just doing it slowly.

[05:01] <jabbot> pugs - 1363 - adding tests for hex(), ord(), chr() and

[05:31] <jabbot> pugs - 1364 - adding tests for abs(), log(), rand(), s

[05:41] <jabbot> pugs - 1365 - rand() may equal to 0

[06:00] <jdv79> stevan, still around?

[06:36] *** castaway_ is now known as castaway

[06:41] <jabbot> pugs - 1366 - mostly minor LKT and SRT test updates - 

[07:01] <gaal> to2, you there?

[07:04] * castaway was wondering that

[08:39] <kungfuftr> moo

[08:44] <gaal> se!

[08:44] <castaway> Servus!

[08:45] <gaal> continuation antler style }:)

[08:57] <castaway> hey nm

[08:57] <nothingmuch> morning

[08:57] * nothingmuch hates banks

[09:00] <Darren_Duncan> morning

[09:00] <Darren_Duncan> I made my first use of multi-methods today ... and tomorrow is my first use of hyper-operators

[09:01] <Darren_Duncan> the SQL::Routine perl6ification is thereby proceeding further into the "what does perl 6 add" waters

[09:01] <jabbot> pugs - 1368 - ArgParse.hs - moving from strings to an 

[09:01] <jabbot> pugs - 1367 - another SQL::Routine perl6ification incr

[09:37] <Juerd> Someone port DBI please ;)

[09:38] <rgs> ask Tim

[09:43] <jdv79> DBI on parrot or bust! ;)

[09:43] <castaway> Juerd, DIY, methinks :)

[09:44] <Juerd> What is DIV?

[09:45] <rgs> DIY is Do It Yourself </purl>

[09:45] <Juerd> Oh, Y, not V

[09:45] <Juerd> This font really sucks.

[09:45] <jdv79> divs are an xhtml thing

[09:45] <Juerd> Someone get me a useful small font that isn't too small. A direct truetype version of X's misc-fixed would work.

[09:46] <Juerd> castaway: I'll port DBIx::Simple when DBI's there ;)

[09:46] <Juerd> Though I really, really, do hope the default interface will be made sane.

[09:46] <jdv79> DBI and DBD::* is a lot of code isn't it?

[09:46] <castaway> default interface?

[09:47] <Juerd> castaway: DBI's interface without wrapper

[09:47] <Juerd> jdv79: Loads.

[09:47] <castaway> Juerd: hmm, works fine for me

[09:47] <Juerd> castaway: It works, but it sucks. Somewhat like PHP.

[09:47] <jdv79> i don't think DBI is gonna change radically anytime soon

[09:47] <Juerd> fetchrow_array doesn't return an array, it returns a list

[09:48] <castaway> If you say so, I havent found it sucky

[09:48] <Juerd> But fetchrow_arrayref isn't consistent, because it does return an arrayref, not a listref

[09:48] <Juerd> (listrefs do not exist)

[09:48] <Juerd> And why all the typing? Why fetchrow_arrayref if "array" implies the rest?

[09:48] <jdv79> in the docs he says that he's looking to fix those little things

[09:48] <Juerd> Further, why are fetchall_arrayref and fetchall_hashref so terribly different?

[09:49] <Juerd> etcetera,

[09:49] <Juerd> s/,/./

[09:49] <castaway> Because.

[09:49] <Juerd> jdv79: I hope so. But I hope "fetchrow_", "selectall_" and "fetchall_" are seen as a problem that needs fixing

[09:49] <Juerd> Otherwise it'll only be made consistent, while improvement can be found in much more.

[09:50] <jdv79> i don't see it as a problem

[09:50] * castaway goes back to prodding at oracle procedures

[09:51] <jdv79> the new p6 context stuff might be able to "fix" what you are talking about Juerd 

[09:51] <jdv79> is that what you mean?

[09:51] <Juerd> No

[09:51] <Juerd> The method names are stupid.

[09:52] <Juerd> It can be made a little more intelligent

[09:52] <Juerd> In essense, letting the thing know what you want makes sense

[09:52] <Juerd> And having a lot of methods instead of one that does everything you want makes sense too

[09:52] <Juerd> But saving on typing by having lots of methods, and then making the method names this long is a bit weird.

[09:53] <Juerd> For that matter, it could just have been fetch(row => 'arrayref')

[09:53] <jdv79> how would you "fix" it?

[09:53] <jdv79> and that's less typing how?

[09:57] <Juerd> jdv79: Have a look at DBIx::Simple

[09:58] <Juerd> That's one way

[09:58] <Juerd> But I imagine Perl 6 has more idiomatic ways to solve this

[09:58] <jdv79> oh course you wrote it so you're biased no matter what:)

[09:58] <Juerd> In particular, I imagine a 'fetch' method that uses the want object to know what's wanted

[09:59] <Juerd> $result.fetch.as(Array)

[09:59] <Juerd> my @foo = $result.fetch

[09:59] <Juerd> my %foo = $result.fetch

[09:59] <jdv79> i think the more fine grained calling context can help

[09:59] <Juerd> And then having fetchall makes sense again.

[09:59] <Juerd> selectall and friends are a terrible mistake

[10:00] <Juerd> Necessary only because without it, DBI's a pain in the arse.

[10:00] <Juerd> (Lots and lots of typing)

[10:00] <Juerd> jdv79: I made it because of exactly the same reason: I think DBI's interface sucks

[10:00] <Juerd> Or, well, could be much better.

[10:01] <jdv79> did you tell Bunce about your ideas?

[10:01] <Juerd> The dbh/sth idea works well, naturally, even though it'd be nice to skip the extra steps in between *by default*

[10:01] <Juerd> jdv79: Not explicitly. I'm certain he knows about DBIx::Simple though.

[10:01] <castaway> thats what selectall does, surely?

[10:02] <jdv79> how can you expect DBI to change if you don't tell the author about your grievances?

[10:02] <Juerd> castaway: Yes, but specifying the return type in the dbh method is a serious breach of purity, and would require wrapping of each of the methods in order to be consistent.

[10:02] <Juerd> castaway: A single method that says "prepare and execute this query and return the sth" fixes a lot.

[10:03] <jdv79> isn't that do()

[10:03] <Juerd> That's the very first thing EVERY DBI wrapper does.

[10:03] <Juerd> jdv79: No, that doesn't give you the sth

[10:03] <jdv79> it gives you one step further, the result, doesn't it?

[10:04] <Juerd> jdv79: I don't *expect* it to change. Its author obviously thinks about this differently than I do, because otherwise why would the module be as it is?

[10:04] * castaway thinks the DBIx::FetchContext (or whatever its called) adds those

[10:04] <Juerd> jdv79: No, it does not. do is useless for select queries.

[10:04] <jdv79> ContextualFetch and yeah, that one is cool

[10:04] <Juerd> Another thing that's needed is statement caching

[10:04] <castaway> Juerd, generally because thats what the author thought of at the time.. without suggestions, its hard to see the wood for the trees

[10:04] <Juerd> So you don't have to prepare and cache manually

[10:05] <Juerd> castaway: If they're smart, and of that I'm convinced, they look at all the existing DBI wrappers to see what they all do.

[10:05] <jdv79> totally, i would suggest you write this all down and send it to Bunce Juerd

[10:05] <Juerd> Obviously, I think only DBIx::Simple got it right, but one thing they all do is provide a single prepare-and-execute method in one form or another.

[10:05] <castaway> Juerd: who has time for such? (I certainly wouldnt have)

[10:05] <Juerd> jdv79: I've written it all down once, but I can't find the PM node.

[10:05] <castaway> plus ALL is a lot of them

[10:06] <rgs> who is nothingmuch ?

[10:06] <castaway> this is why its a community, people work together

[10:06] <castaway> rgs, how do you mean?

[10:06] <rgs> Yuval Kogman, ok

[10:06] <rgs> castaway: I'm adding people to the P5 AUTHORS files.

[10:06] <rgs> I had only his email address

[10:06] <castaway> ah, ok

[10:06] <ingy> hola

[10:07] <autrijus> Juerd: I use the Anonymous font.

[10:07] <Juerd> http://perlmonks.org/?node_id=415809

[10:07] <autrijus> it looks great on small size

[10:07] <Juerd> There it is

[10:07] <Juerd> Google--  # lost a hell of a lot of PM nodes!

[10:07] <jdv79> we don't need to see it - send it to the author of DBI!

[10:07] <Juerd> autrijus: Thanks, I'll have a look soon

[10:08] <castaway> google is not supposed to have PM nodes

[10:08] <Juerd> It is 

[10:08] <Juerd> Super Search is no longer in the menu and Google is recommended

[10:08] <castaway> as far as I understand it anyway

[10:08] <Juerd> In fact, perlmonks.thepen.com exists for search engine (mostly Google) indexing.

[10:09] <castaway> Funny, its in mine, and I've never seen such an announcement

[10:09] <Juerd> Oh, it's back :)

[10:09] <castaway> the stuff to sort out robots etc isnt add yet, afaik

[10:09] <Juerd> I'm sure it was gone a while.

[10:09] <castaway> Not that I ever noticed anyways

[10:09] <tomyan> Juerd: have you read http://groups.google.com/groups?selm=20040127225639.GF38394@dansat.data-plan.com

[10:09] <Juerd> Google very properly ignores the PM site, as requested by the site.

[10:10] <Juerd> tomyan: Yes.

[10:10] <castaway> right.

[10:10] <rgs> hi nothingmuch 

[10:10] <Juerd> tomyan: TBH, I don't care much about the internals. They work very well for me, and I expect them to continue to work in a similar way. People working on this I'm sure are doing the right thing.

[10:11] <Juerd> http://perlmonks.org/?node_id=415809 is the rant about DBI's interface, fyi

[10:11] <Juerd> Unprepared so unstructured

[10:12] <jdv79> if its just interface then your module fixes "the problem"

[10:12] <jdv79> i personally would like to see both the interface and the guts a little nicer

[10:12] <jdv79> but it works fine for now:)

[10:13] <Juerd> jdv79: Yes, the module does fix it.

[10:13] <Juerd> jdv79: Otherwise I would not have written it

[10:13] <jdv79> ok Juerd 

[10:13] <Juerd> jdv79: However, as things are already going to be incompatible, it'd be great if DBI's own interface would be so that wrappers can mostly become an historical artifact.

[10:14] <Juerd> And there can be DBI::Compat perhaps

[10:15] <jdv79> well, even if it does change i can almost guarantee it would mirror your module

[10:15] <jdv79> won't rather

[10:19] <kungfuftr> nothingmuch: mind if i make a few changes to the testgraph stuff?

[10:26] <Juerd> jdv79: That's not necessary.

[10:26] <Juerd> jdv79: Perl 6 has many neat features that allow for an even better interface.

[10:27] <Juerd> jdv79: And when the interface itself is good, features can be added in subclasses/roles/mixins instead of wrappers, and everyone can benefit from them.

[10:27] <Juerd> (They can now, but it's much harder)

[10:28] <jdv79> cool, tell Bunce cause I'm not gonna do it:)

[10:29] <Juerd> Before I contact anyone designing DBI directly, I want to have a solid idea of what I think would be best.

[10:29] <Juerd> And at this moment, I don't have that

[10:29] <Juerd> Because I don't know how to tell a method what to return

[10:29] <Juerd> This is something that Perl 6 should do, not the module itself. And the want object is how to read this informatio

[10:29] <Juerd> (Or return value based dispatch, which isn't going to happen iirc)

[10:30] <Juerd> %hash = RHS, @array = RHS are simple and clear

[10:30] <Juerd> But what do you do in the case of foreach $result.fetch -> ... { ... }

[10:30] <Juerd> It'd be neat if that worked such that for $result.fetch -> %hash { ... } and for $result.fetch -> @array { ... } dwym

[10:30] <Juerd> (s/foreach/for/g)

[10:31] <Juerd> And for $result.fetch -> $columnfoo, $columnbar { ... }

[10:31] <Juerd> That'd also throw some renewed purpose into sigils.

[10:31] <Juerd> Since they're kind of purposeless in current Perl 6 :)

[10:32] <Juerd> They're just syntax with subtle differences, no longer necessary, as $aref can be used just as @array in almost every situation.

[10:32] <Odin-> Some kind of mental assistence: "This is how I intend to use this"..?

[10:33] <Juerd> I should probably dump this at p6l

[10:33] <Juerd> But first I need to think about it some more

[10:33] <Juerd> The smart .fetch is the only idea I currently have

[10:33] <Juerd> And that neglects the prepare/execute thingies

[10:34] * Odin- is under the impression that Perl6 is getting to be frighteningly like some sort of "lisp with syntax"...

[10:34] <Juerd> Let alone the func interface (Which I'd love to see gone completely - let drivers subclass DBI and add real methods)

[10:34] <Juerd> Odin-: Correct impression.

[10:34] <Odin-> :)

[10:35] <Juerd> afk

[10:35] * Juerd is going to work (place, not verb)

[10:36] <nothingmuch> kungfuftr: feel free

[10:36] <nothingmuch> it's not my code

[10:36] <nothingmuch> it's stevan's

[10:36] <nothingmuch> but it's not really his, it's ours

[10:37] <nothingmuch> btw, could you update your pugs-smoke.html to be more like mine?

[10:37] <nothingmuch> that is, also generate docs?

[10:37] <autrijus> right. we're jsut a bunch of crazy socioanarchists :)

[10:37] * autrijus finally recovered from mild food poisoning

[10:37] <Odin-> autrijus: Isn't that the idea behind open source?

[10:37] <nothingmuch> food poisoning? again?

[10:38] <autrijus> Odin-: sure, as eben's paper had nicely put

[10:38] <autrijus> nothingmuch: yeah. :-/

[10:38] <nothingmuch> oi vey

[10:38] <Odin-> autrijus: 'Anarchism triumphant', or?

[10:39] <autrijus> yes, that.

[10:39] <Odin-> Yeah. :p

[10:39] <autrijus> one of classical readings :)

[10:39] <nothingmuch> perlbot nopaste

[10:39] <perlbot> Paste your code here and #<channel> will be able to view it: http://sial.org/pbot/<channel>

[10:39] <pasteling> "nothingmuch" at 212.143.92.226 pasted "smoke report generating script" (38 lines, 1.1K) at http://sial.org/pbot/8792

[10:40] <autrijus> nothingmuch++

[10:41] <Odin-> Hm. Yeah, although he's from the FSF, and thus a bit more ... shall we say ideological, than 'open source' folks... :/

[10:41] <nothingmuch> autrijus: eris sometimes goes to sleep, i'll make etherwake setuid, and make a global 'wake-eris' cmd

[10:42] <autrijus> Odin-: sure, but it makes a good read nevertheles

[10:43] <Odin-> autrijus: Indeed. (I myself belong more in that camp, I'm afraid. ;)

[10:44] <autrijus> that's fine :)

[10:44] <autrijus> nothingmuch: roger

[10:45] <nothingmuch> oi vey: ld: truncated or malformed archive: /usr/local/lib/ghc-6.4/libHSbase.a at offset 1388334 (member extends past the end of the file, can't load from it)

[10:45] <kungfuftr> nothingmuch: i would, however still can't work it out

[10:46] <nothingmuch> what can't you work out?

[10:46] <nothingmuch> testgraph.pl, or that shell snippet?

[10:47] <nothingmuch> hmm... my squid is acting up

[10:50] <osfameron> squid++ # battered, if it's not overcooked and rubbery

[10:50] <nothingmuch> but sometimes it refuses to be greedy

[10:51] <nothingmuch> in that case even I feel like cooking it

[10:51] <nothingmuch> although i'm a vegeterian

[10:51] * nothingmuch asked it to save up to 10 GBV

[10:52] <nothingmuch> du -sh /var/cache/squid/

[10:52] <nothingmuch> 944M    /var/cache/squid/

[10:52] <kungfuftr> nothingmuch: getting the docs generated

[10:52] <nothingmuch> policy is lru

[10:52] <nothingmuch> perl catalog_tests.jmm.pl makes t_index out of t/Synopsis and t/

[10:55] * castaway smiles.

[11:17] * nothingmuch smiles back at castaway

[11:25] <nothingmuch> disktool/diskutil

[11:25] * nothingmuch likes the fact that every app on OSX has some kind of esoteric, hidden, but very complete CLI

[11:25] <nothingmuch> softwareupdate, installer

[11:25] <nothingmuch> Kicker and configd

[11:25] <nothingmuch> via scutil

[11:25] <nothingmuch> nicl

[11:25] <nothingmuch> especially in raw mode

[11:26] <xerox> What does CLI mean?

[11:26] <nothingmuch> command line interface

[11:34] <castaway> nm, they do? so wheres the SEE one? :)

[11:34] <nothingmuch> 'see' ;-)

[11:34] <castaway> and anyway, wheres my test sEE? :)

[11:34] <castaway> wow, really?

[11:34] <nothingmuch> yes

[11:34] <castaway> whts it do?

[11:34] <nothingmuch> you can open pipes or files in SEE

[11:34] <nothingmuch> and it can wait, or be async

[11:34] * castaway is impressed

[11:35] <nothingmuch> no, wait, i can't

[11:35] * nothingmuch has no subetha on eris yet

[11:35] <nothingmuch> i can pull it off

[11:35] <nothingmuch> i'm not logged in, so SEE can't really run

[11:37] <castaway> umm.. eh?

[11:37] <nothingmuch> i don't think you can publish/announce from the CLI yet, though

[11:37] <nothingmuch> i have SSH access

[11:37] <nothingmuch> but no windowserver session

[11:37] <castaway> ah, I see

[11:37] <nothingmuch> you can do most that stuff from 'osascript' though

[11:37] <castaway> osascript?

[11:38] <nothingmuch> OSX apps have what's called the open scripting architechture

[11:38] <castaway> (we have a product/solution called "OSA" :)

[11:38] <nothingmuch> which allows you to send events

[11:38] <nothingmuch> typically scripted by applescript

[11:38] <castaway> funky stuff

[11:38] <nothingmuch> perl has Mac::Glue to take advantage of that

[11:38] <nothingmuch> the app must be enabled though

[11:38] <wolverian> is that like corba?

[11:38] <nothingmuch> wolverian: much higher level

[11:38] <nothingmuch> tell application "SubEthaEdit"

[11:39] <nothingmuch> open "file/name"

[11:39] <nothingmuch> announce file # or whatever, app specific

[11:39] <castaway> sounds like COM/VBScript

[11:39] <nothingmuch> raise window 0

[11:39] <nothingmuch> end tell

[11:39] <nothingmuch> i bet it's similar

[11:39] <wolverian> that looks _very_ nice

[11:39] <wolverian> if only linux had that kind of application consistency

[11:40] <wolverian> (although I guess gnome will get there eventually.)

[11:40] <nothingmuch> autrijus' subetha/kwiki hack uses applescript

[11:41] <nothingmuch> http://search.cpan.org/src/AUTRIJUS/Kwiki-Edit-SubEtha-0.02/lib/Kwiki/Edit/SubEtha.pm

[11:41] <nothingmuch> don't view it in a browser, it's screwey

[11:41] <nothingmuch> view source

[11:41] <castaway> *g*

[11:42] <nothingmuch> errm, wait not that

[11:42] <nothingmuch> http://search.cpan.org/src/AUTRIJUS/Kwiki-Edit-SubEtha-0.02/script/subethakwiki.pl

[11:43] <nothingmuch> look at that 'tell menu stuff

[11:43] <nothingmuch> that's really funky

[11:43] <nothingmuch> oh, i forgot 'open'

[11:43] <nothingmuch> it does URLs, or file based handling

[11:43] <nothingmuch> open foo.txt -> your editor

[11:43] <kungfuftr> nothingmuch: who own's the cataloging script?

[11:43] <nothingmuch> kungfuftr: we do

[11:43] <nothingmuch> ;-)

[11:43] <nothingmuch> theorbtwo wrote it's begining

[11:43] <kungfuftr> nothingmuch: ah, k

[11:43] <nothingmuch> i did most of the ugly stuff

[11:44] <nothingmuch> svn blame

[11:44] <castaway> pugs owns it ,)

[11:44] <kungfuftr> yar, is it effecient? ie: doesn't try to update if test hasn't changed, etc?

[11:44] <nothingmuch> kungfuftr: not yet

[11:45] <nothingmuch> we could break it up

[11:45] <nothingmuch> and then use make to handle that logic

[11:45] <nothingmuch> s/long/longer/

[11:45] <nothingmuch> the snippet i posted does that in parallel

[11:45] <nothingmuch> it rarely takes it long than it takes GHC to skip everything

[11:48] <wolverian> nothingmuch: gnome-open works similarly, it uses gnomevfs, so it can open documents I think even via gopher.

[11:49] <nothingmuch> that's cool

[11:49] * nothingmuch hacked together mailtomutt 

[11:50] <wolverian> gnomevfs-mount is the coolest app of this week.

[11:50] <nothingmuch> and there's also lbdb support for address book

[11:50] * wolverian mounts a website 

[11:50] <nothingmuch> so then i could do open 'mailto:blah'

[11:50] <nothingmuch> and have a new terminal with mutt

[11:50] <nothingmuch> and completion, and so on

[11:50] <nothingmuch> but since then i've moved to a laptop

[11:50] <nothingmuch> ooh

[11:50] <castaway> theres too many camps in the "linux software" troup to get a general consensus on stuff like that, methinks, anyway

[11:50] <nothingmuch> osx knows to mount ftp and DAV

[11:50] <castaway> there'll always be X ways to do it

[11:51] <tomyan> yeah, like kde has dcop

[11:51] <wolverian> gnome can mount just about anything as well, but the mounts aren't integrated into the filesystem, AFAIK

[11:51] * nothingmuch thinks all of unix is too much legacy

[11:51] <nothingmuch> the standard C libs, and posix in general could be rethought

[11:51] <wolverian> that is, you can only use nautilus to browse the mounts, not the CLI

[11:51] <nothingmuch> based on the current state of the linux kernel it could be made much nicer

[11:52] * nothingmuch doesn't want that to happen though

[11:53] <nothingmuch> can't just uproot everything

[11:53] <kungfuftr> bah, cataloging thing hates me

[11:53] <nothingmuch> kungfuftr: it has many deps

[11:53] <nothingmuch> and it needs a new Fille::Spec

[11:53] <nothingmuch> there's a bug in an old one

[11:53] <nothingmuch> that ships with recent perls (like 5.9.1)

[11:54] <nothingmuch> abs2rel was broken somehow

[11:54] <kungfuftr> nothingmuch: ack well, i'll just try it

[12:01] <wolverian> nothingmuch: http://freedesktop.org/wiki/Software/dvfs might be interesting.

[12:01] <wolverian> sorry if you know about that already :) (it is relatively new)

[12:01] <nothingmuch> i don't work with gnome/kde, so i visit freedesktop only sporadically

[12:03] <nothingmuch> it sounds good

[12:03] <wolverian> the idea is nice, though. I'm not sure how fully it is implemented in even COM and such.

[12:03] <nothingmuch> OSX has a FileManger object in Cocoa

[12:03] <nothingmuch> it's got some nice facilities

[12:03] <nothingmuch> for creating, opening, closing, saving (atomically too)

[12:03] <nothingmuch> it wraps aroudn kqueue (i think) for notifications

[12:04] <nothingmuch> maybe in GNUStep it's done with FAM

[12:05] <wolverian> isn't FAM just an alteration monitor?

[12:05] <wolverian> (e.g. not a generic messaging bus)

[12:05] <nothingmuch> oh!

[12:05] <nothingmuch> another OSX thing:

[12:05] <nothingmuch> pbcopy, pbpaste

[12:05] <nothingmuch> very useful

[12:05] <nothingmuch> pbpaste | perl is something i use all the time

[12:05] <wolverian> what does that do?

[12:05] <nothingmuch> wolverian: i meant the monitoring part

[12:05] <nothingmuch> it talks to the clipboard

[12:06] <nothingmuch> in nextstep it's called the pasteboard

[12:06] <wolverian> nothingmuch: ah. yes, I expect linux things to use fam/gamin for that.

[12:06] <wolverian> (gamin is a strict subset of fam functionality, simpler code)

[12:08] <wolverian> hmm, pbcopy/paste seems useful. 

[12:08] <wolverian> I wonder if I have something like that. using the mouse is a bother.

[12:09] <kungfuftr> nothingmuch: rightio... generated... add to script

[12:10] <nothingmuch> kungfuftr++

[12:10] <nothingmuch> so now we have osx and freebsd

[12:10] <nothingmuch> you should ci your css change

[12:11] <nothingmuch> (just normalize the grey so it's on the whole doc, i think)

[12:12] <autrijus> purr

[12:13] <q[acme]> miaow

[12:14] <kungfuftr> nothingmuch: k

[12:18] <kungfuftr> nothingmuch: who else is running an auto-smoke?

[12:18] <nothingmuch> me, so far

[12:18] <nothingmuch> we're working on merging it

[12:18] <nothingmuch> well, planning on working

[12:18] <nothingmuch> i'll write a CGI that takes the tests.yml and consolidates

[12:18] <nothingmuch> and then keeps HTML results X revisions back, or something

[12:19] <kungfuftr> ah, k

[12:20] <kungfuftr> i might need to change it to run every hour instead of every 30 mins

[12:20] <kungfuftr> =0(

[12:21] <jabbot> pugs - 1372 - Changes to make the testgraph more reada

[12:21] <jabbot> pugs - 1371 -  r4327@speights:  samv | 2005-03-31 20:1

[12:21] <jabbot> pugs - 1370 - 

[12:21] <jabbot> pugs - 1369 -  r4313@speights:  samv | 2005-03-30 15:1

[12:23] <kungfuftr> nothingmuch: no plans to hack Test::Smoke for our purposes?

[12:25] <nothingmuch> soon

[12:25] <nothingmuch> ;-)

[12:25] <nothingmuch> it'll be in pugs

[12:27] <kungfuftr> yay

[12:28] <kungfuftr> rightio... auto-smoker will run every hour here now

[12:28] <kungfuftr> =0/

[12:32] *** obra is now known as ingy_

[12:32] *** ingy_ is now known as whiteg_

[12:33] *** whiteg_ is now known as obra

[13:40] <shapr> huzzah!

[13:42] <nothingmuch> LOL: Die Larry Wall and Perl developers,   

[13:42] <castaway> ?

[13:42] <nothingmuch> this was a thank you letter ;-)

[13:43] <nothingmuch> hmm

[13:43] <rgs> harmless typo.

[13:43] <rgs> I suppose.

[13:43] <nothingmuch> it's still very cute

[13:44] <rgs> in fact, I hope it's only a typo

[13:45] <Juerd> This is why you should enter text with a keyboard, not thought recognition.

[13:45] <nothingmuch> http://groups-beta.google.com/group/perl.perl5.porters/msg/2f4d4181e478fa0a

[13:45] <nothingmuch> Juerd: i meant to ask you

[13:45] <nothingmuch> know the touchstream, and what you said about RSI and physical/audible feeback?

[13:45] <Juerd> I even mentioned it in that conversation

[13:46] <nothingmuch> i /reaaallly/ like feedback (apple keyboards of the 80s have wonderful response)

[13:46] <nothingmuch> i have no rsi problems

[13:46] <Juerd> And I said I thought it'd be horrible, but otoh maybe not because you don't have to press anything, so you also don't have to know when to stop pressing.

[13:46] <nothingmuch> i hate reaching for the mouse

[13:46] <nothingmuch> and i like gestures

[13:46] <Juerd> I haven't tried any yet.

[13:46] <nothingmuch> ok, that sort of makes sense

[13:46] * nothingmuch is afraid that if he'll buy it he'll start developing some problems

[13:46] <nothingmuch> the bass has tought me to be gentle

[13:47] <nothingmuch> but that's the mother of all feedbacks

[13:47] <Juerd> The only way to find out if something is a good solution for you, is to try

[13:47] * nothingmuch thinks he may not be able to decide till after it's too late

[13:47] <nothingmuch> at $400 i'm a bit hesitant =)

[13:47] <Juerd> I spent thousands.

[13:48] <Juerd> In fact, in USD it'll be well over 10k.

[13:48] <nothingmuch> on ergo equip?

[13:48] <Juerd> Often I like something at first, and then after a month start hating it.

[13:48] <Juerd> You can't evaluate input devices in a week.

[13:48] * nothingmuch doesn't have ergo problems, i'm only seeking the coolness

[13:48] <nothingmuch> well, ok, good point

[13:48] <Juerd> And certainly not in a few minutes in a store

[13:48] <nothingmuch> someone at work is a fan of these things

[13:48] <Juerd> Or worse: from pictures on a website

[13:48] <nothingmuch> so i might be able to steal it

[13:49] <nothingmuch> the touch pad thing really seems logical to me

[13:49] <nothingmuch> especially for scrolling

[13:49] <Juerd> Yes, but I wonder if a keyboard without keys would work well

[13:49] <nothingmuch> i don't know about typing

[13:49] <Juerd> My current keyboard the opposite of flat :)

[13:49] <nothingmuch> excatly

[13:49] <Juerd> And the touchstream thingies are as flat as can be.

[13:49] <Juerd> I really like this keyboard.

[13:49] <Juerd> I'm going to buy one for at home soon.

[13:50] <nothingmuch> this is my other option: http://matias.ca/tactilepro/

[13:50] <nothingmuch> i think

[13:50] <nothingmuch> for the clickity behavior

[13:50] <Juerd> Clickies are nice to type with if you have strong hands

[13:50] <Juerd> If your hands are not strong, don't use them even if you like them

[13:50] <Juerd> I liked them, but my hands weren't strong enough

[13:50] <castaway> bah, clickies

[13:50] <Juerd> And training is an illusion.

[13:51] <nothingmuch> i had the original clickie keyboard this one refers to

[13:51] <nothingmuch> i used it for a long while

[13:51] <Juerd> Long whiles don't say a thing

[13:52] <nothingmuch> .../

[13:52] <nothingmuch> ?

[13:52] <Juerd> I used the same great keyboard for many years until I first experienced tremendous pain.

[13:52] <Juerd> Then I had to switch

[13:52] <nothingmuch> when did that start?

[13:52] <Juerd> August 2001

[13:52] <nothingmuch> i mean age wise

[13:52] <Juerd> The information sheet has no information.

[13:52] <Juerd> 17

[13:53] <Juerd> Maybe 18

[13:53] <nothingmuch> beh. tough decisions

[13:53] <Juerd> Yes, 18.

[13:53] <Juerd> What crappy site is this?

[13:54] <Juerd> They don't mention the force of the keys.

[13:54] <nothingmuch> which site is crappy?

[13:54] <ihb> Juerd: if you had to choose, would you take a split keyboard with buttons that are harder to press, or a straight laptop-type keyboard?

[13:54] <nothingmuch> the keyboard one i posted?

[13:54] <Juerd> ihb: The normal famous split keyboards only move the problem from your wrists to your shoulders

[13:55] <Juerd> ihb: So then it'd be the laptop keyboard, but only a good one - not compaq.

[13:55] <ihb> what makes a laptop keyboard good?

[13:55] <Juerd> ihb: However, if I had to choose between a good split keyboard (kinesis contoured) and a laptop kb, the kinesis'd win

[13:55] <Juerd> The kinesis has perfect feedback too, by the way.

[13:55] <Juerd> It clicks loudly.

[13:56] <Juerd> ihb: The IBM part number ;)

[13:56] <ihb> Juerd: my wrists hurt when i type on straight keyboards. :-/

[13:56] <Juerd> ihb: It should feel solid, not wobbly.

[13:56] <Juerd> ihb: And feedback must be right

[13:56] <ihb> Juerd: kinesis contoured?

[13:56] <shapr> I have two kinesis contoured, they're my favorit!

[13:56] <Juerd> The Type Matrix keyboards are a nice idea, but I never got to fully evaluate the design principle because they implemented it with a rather crappy type of laptop keyboard, which gets on my nerves.

[13:56] <shapr> And I use a custom "I am not a koala" keymap that moves all modifier keys under my thumbs.

[13:57] <Juerd> ihb: www.kinesis-ergo.com

[13:57] <shapr> Have you guys seen the flinder?

[13:57] <Juerd> shapr: Eh, all except shift already are there.

[13:57] <ihb> i'm about to get a new keyboard, so any tips are appreciated. :-)

[13:57] <shapr> I'd suggest kinesis contoured.

[13:57] <Juerd> ihb: If you're on a budget, get a Key Tronics ErgoForce

[13:58] <Juerd> ihb: If not, Kinesis Contoured

[13:59] <shapr> Juerd: I swapped Shift_L and DEL, and got rid of Shift_R (it's iswitchb-buffer now). I remapped End and PgDn to Hyper, and Home and PgUp to Super.

[13:59] * nothingmuch would like a programmer's dvorak

[14:00] <shapr> My keymap started out as dvorak.

[14:00] <castaway> http://desert-island.dynodns.net/bilder/diverse/giraffe.jpg (my keyboard)

[14:00] <nothingmuch> {} and sigils should be easy

[14:00] <nothingmuch> ; should be veeerry easy

[14:00] <nothingmuch> every time i try to switch programming stops me

[14:00] <nothingmuch> shapr: what other changes did you make?

[14:01] <ihb> Juerd: so you're saying that in general split isn't any better than straight?

[14:01] <shapr> Meaning-oriented changes mostly. I'm in pursuit of Jef Raskin's ideals.

[14:01] <castaway> (dont all click at once, that lags :)

[14:01] <shapr> castaway: gorgeous keyboard, what did you map that large giraffe key to do? ;-)

[14:01] <nothingmuch> shapr: i have a silly project i'm not getting to that is sort of like raskin's zoom

[14:01] <nothingmuch> did i bug you or only stevan about it?

[14:01] <shapr> Not me.

[14:02] <nothingmuch> i'll bug you some time, if you're curious

[14:02] <shapr> I'd very much like to hear about it.

[14:02] <nothingmuch> i know how i'll implement it, i just can't find the tuits

[14:02] <castaway> shapr, its the look-cute key :)

[14:02] * nothingmuch has to go to his bass lesson soon though

[14:02] <nothingmuch> so can't now

[14:02] <shapr> I agree with Raskin's ideas, though I don't always agree with his implementations. I met him at EuroPython 2004, and I'm sorry he's gon now :-(

[14:03] <shapr> castaway: Wow, great idea!

[14:03] <Juerd> ihb: Depends on your body.

[14:03] <Juerd> Juerd: For thin people, it's bad.

[14:03] <shapr> Isn't that a key-locked 5.25 disk holder to the left of your screen?

[14:04] * castaway checks

[14:04] <Juerd> nothingmuch: I use dvorak and like it very much.

[14:04] <Juerd> nothingmuch: My dvorak course is at dvorak.nl

[14:04] <kungfuftr> ah... much better

[14:04] <castaway> (the pic is a bit old)

[14:04] <shapr> I'm not thin, and I still don't like split keyboards. I think the kinesis design is much more natural. When you sit down and relax, do you put your hands on your knees, or together in your lap?

[14:04] <castaway> na, thats a 3.5" box

[14:06] <Juerd> shapr: Hands on the keyboard

[14:06] <Juerd> They give you soft pads with it

[14:06] <Juerd> It's comfortable too

[14:06] <shapr> I mean split keyboards like microsoft natural. They still put your hands together. Kinesis doesn't require that.

[14:06] <shapr> I much prefer Kinesis.

[14:06] <Juerd> The distance is fixed though

[14:07] <Juerd> At a good distance imo

[14:07] <shapr> ihb: if you're in north Sweden, you can try my Kinesis =)

[14:07] <Juerd> And if you're near .nl, you can try mine

[14:07] <Juerd> But not for a month, because I need it :)

[14:07] <shapr> I have a spare.

[14:07] <ihb> haha :-)

[14:07] <Juerd> It takes more than a month to get used to it

[14:07] <shapr> Hm, it took me about three days.

[14:08] <Juerd> Were you no touch typists before?

[14:08] <Juerd> s/ts/t/

[14:08] <shapr> But then, I regularly remap my keyboard for fun, maybe that's related?

[14:08] <Juerd> haha

[14:08] <Juerd> The problem I had is that the keys are no longer horizontally shifted each row

[14:09] <Juerd> They're in a matrix position, and that took serious getting used to

[14:09] <shapr> Oh yeah, I had that problem with the next to bottom row, my fingers couldn't find that row at all the first few hours.

[14:09] <Juerd> I have to admit that I still have only one and half of my typing is at home on a normal keyboard

[14:09] <Juerd> I have a problem with the bottom row

[14:09] <Juerd> I've remapped all those keys elsewhere so I have two options

[14:10] <Juerd> Only very slowly I'm getting used to hitting the original keys

[14:10] <shapr> I have a theory that dealing with change is a skill like any other, and I practice that with stuff like continual small keymap changes.

[14:10] <Juerd> I can handle small keymap changes well

[14:11] <Juerd> And it took me only a week or so to get used to dvorak

[14:11] <Juerd> (then a month to regain my old speed)

[14:11] <shapr> That is impressive.

[14:11] <shapr> And that's not a small change.

[14:11] <Juerd> It's a big change indeed

[14:11] <Juerd> But using the key positions I had always used

[14:11] <Juerd> Getting used to keys in a slightly different position is harder

[14:12] <shapr> For me that's the other way around. I can use different keyboards with the same layout just fine. But different layouts on the same keyboard is more difficult.

[14:13] <Juerd> shapr: What layout do you use?

[14:13] <shapr> modified dvorak.

[14:13] <shapr> Like I said, I've moved the modifier keys under my thumbs.

[14:13] <Juerd> Modifier keys are not part of dvorak.

[14:14] <shapr> True, but dvorak on kinesis does define modifier keys.

[14:14] <mattc> Hi all, I'm thinking of having a look at the modules and tests for missing builtins in the IO namespace.  Anything you think I should know?

[14:14] <Juerd> shapr: Not differently from qwerty

[14:14] <mattc> sorry to interrupt the keyboard chat :)

[14:14] <shapr> heh

[14:14] <Juerd> shapr: I don't use the kinesis' dvorak layout by the way. I hate how it changes some things around for no reason at all.

[14:14] <Juerd> And I must have `~ in the upper left corner

[14:15] * castaway wonders if she missed a pic of a kinesis, whatever that is

[14:15] <Juerd> castaway: www.kinesis-ergo.com "contoured"

[14:15] <shapr> I don't know what the kinesis dvorak layout is, I use the dvorak layout flavor I like. 

[14:15] <shapr> castaway: http://kinesis-ergo.com/images/500-blk.jpg

[14:16] <shapr> mattc: which tests?

[14:16] <castaway> mm, funky, tho it looks like it needs more space on the desk

[14:16] <shapr> I'm a lambdafolk trying to get comfy in the Perl6 world.

[14:16] <shapr> castaway: it's smaller actually, because of the missing keypad .

[14:16] <wolverian> I seriously need to force myself to learn dvorak. dammit, I'll just move the keys physically.

[14:17] <castaway> but theres all that space in the middle

[14:17] <ihb> shapr: ah, we've talked in haskell, haven't we?

[14:17] <shapr> It is taller than other keyboards, which gave me a neat idea. Just put a nano-ITX mobo into the keyboard - http://www.scannedinavian.com/2004-05-24.html

[14:17] <shapr> ihb: yes we have.

[14:18] <castaway> *g* shapr

[14:18] <castaway> looks odd.. anyway

[14:21] <mattc> shapr: um, eof, fileno, getc etc

[14:21] <Juerd> castaway: No, less space.

[14:22] <mattc> tests for those builtins

[14:22] <Juerd> castaway: Or, well, a little more, but not significantly.

[14:22] <wolverian> are strings arrays/lists in perl6?

[14:22] <castaway> Juerd: hmm take a pic of one in action? :)

[14:22] <Juerd> castaway: Action in a picture?

[14:23] <shapr> I think the request is for a picture of a Kinesis on a desktop in front of a screen.

[14:23] <castaway> Juerd: heh, yup.. y'know what I mean, with hands and surroundings etc

[14:23] <shapr> Then you get a better feeling for the amount of space it requires.

[14:23] <Juerd> With hands? WHY? :)

[14:23] <castaway> correctimo

[14:23] <castaway> because

[14:23] <wolverian> just wondering, since S02 seems to say that arrays also have .bytes etc. and handling strings and arrays the same skips a .split.. :)

[14:24] <Juerd> I'm not going to show you my hands. That's private! :)

[14:24] <castaway> then borrow someones :)

[14:24] <Juerd> castaway: This is madness :)

[14:24] * shapr gives Juerd a hand 

[14:24] <shapr> I've got a spare.

[14:25] <castaway> :)

[14:25] * castaway never claimed to be sane

[14:25] <shapr> Oh, I had an idea for a seriously nutty keymap recently. Hidden Markov Model!

[14:25] <Juerd> I can make a picture of my desk if you want

[14:25] <Juerd> But without body parts.

[14:25] <shapr> Instead of one single keymap, create a unique optimized keymap to follow each key pressed, and reserve one key to reset to a known state.

[14:26] <castaway> That would be appreciated

[14:27] <Juerd> It's a mess though

[14:27] <Juerd> Be warned :)

[14:28] <castaway> :)

[14:29] <castaway> cant be worse than ours.. hmm, wheres that bash.org-mess entry..

[14:29] <castaway> same url bilder/mess.jpg :)

[14:30] <Juerd> same url?

[14:30] <Juerd> same as what?

[14:30] <shapr> As the giraffe?

[14:30] <castaway> as the one I gave before

[14:30] * castaway is too lazy to type (same hostname, really)

[14:30] <stevan> mattc: you were asking about IO builtin tests? 

[14:30] <castaway> thats a more recent pic too

[14:31] <mattc> stevan: yes, I was

[14:31] <mattc> was thinking about having a look at porting the IO namespace

[14:31] <mattc> some builtin tests seems a logical place to start

[14:31] <stevan> mattc: the IO namespace? as in Haskell System.IO?

[14:32] <mattc> stevan: no, the perl 5 IO namespace

[14:32] <shapr> Yeah, that's what I was wondering.

[14:32] <Juerd> castaway: It's less, but only because I have a bigger desk and a lot of space to store stuff.

[14:32] <mattc> don't know anything about Haskell....

[14:32] <stevan> mattc: ah

[14:33] <stevan> mattc: well the t/builtins/io/ directory could definitely use some work

[14:33] <mattc> stevan: yeah, looking at that now

[14:33] <stevan> you might also was to look at Synopsis 29 for a list of Built-ins

[14:33] <shapr> And I don't know anything about Perl...

[14:33] <mattc> excellent

[14:33] <castaway> yeah, 2 machines on the same desk is pushing it a bit

[14:33] <mattc> I'll do that

[14:34] <stevan> mattc: here is the link to teh latest version http://www.rodadams.net/Perl/S29.html

[14:34] <mattc> stevan: thanks very much

[14:34] <Juerd> http://foto.juerd.nl/desk.jpg

[14:34] <Juerd> Left desk is mine

[14:34] <mattc> any other pointers are welcome :)

[14:34] <stevan> mattc: actually it looks like Syn 16 will cover IO more

[14:34] <mattc> ok

[14:34] <stevan> mattc: t/README is a good reference

[14:35] <stevan> other that that, just ask here, and someone will answer :)

[14:35] <stevan> mattc: are you committer yet?

[14:35] <mattc> yeah

[14:35] <castaway> ooh, loadsaspace

[14:35] <Juerd> castaway: Do you want a picture with this keyboard and a normal one?

[14:35] <stevan> good

[14:35] <mattc> I did some tests a couple of weeks ago

[14:35] <castaway> mm, yeah, why not, if you've got one handy..

[14:35] <castaway> thats a high monitor, are you tall? :)

[14:36] <mattc> alright, I'll get started then, thanks for your help stevan

[14:36] <Juerd> 1m83

[14:36] <scw> Juerd: Why's the mouse on the floor? :p

[14:36] <stevan> Juerd: is that some kind of foot pedal?

[14:36] <Juerd> stevan: Yes

[14:36] <stevan> mattc: your welcome :)

[14:36] <stevan> Juerd: what for?

[14:36] <Juerd> stevan: To access the numeric portion of the keyboard

[14:36] <Juerd> The "keypad" layer

[14:36] <Juerd> Which is full of macros and remapped keys :)

[14:37] * castaway looks up

[14:37] <stevan> Juerd: very cool

[14:38] <stevan> mattc: be sure to add yourself to the AUTHORS file as well

[14:39] <shapr> Juerd: is that silly putty on your desk?

[14:39] <Juerd> castaway: http://foto.juerd.nl/keyboards.jpg

[14:39] <Juerd> castaway: Smaller, as you can see

[14:39] <Juerd> shapr: No, crazy putty.

[14:39] <stevan> shapr: I saw that too :)

[14:39] * shapr grins

[14:40] * castaway scales pic

[14:40] <castaway> ah yes, eversoslightly

[14:40] <shapr> stevan: Is Silly Putty still sold in the US?

[14:40] <Juerd> Get firefox :)

[14:40] <stevan> looks like Juerd likes Jelly Beans as well :)

[14:40] <Juerd> shapr: crazyputty.com

[14:40] <Juerd> stevan: winegums

[14:40] <stevan> shapr: I think so

[14:40] <stevan> Juerd: winegums?

[14:41] <Juerd> That's what they're called

[14:41] <shapr> Similar to jelly beans.

[14:41] <shapr> EuroBeans =)

[14:41] <Juerd> Not really, shapr 

[14:41] <shapr> I think they're similar.

[14:41] <stevan> for a more "mature" palette :)

[14:41] <castaway> Juerd, only one problem tho.. I got taught (cough) one-handed typing :)

[14:41] <Juerd> Winegums are soft, larger, not as annoyingly sweet

[14:41] <Juerd> castaway: So?

[14:41] * castaway uses 1.5 hands tho

[14:41] <castaway> well, wont work on that keyboard so well :)

[14:41] <Juerd> castaway: With this keyboard you automatically learn to type :)

[14:42] <castaway> try it without thumbs ,)

[14:42] <Juerd> Forget it

[14:42] <wolverian> Juerd: is that windows running on your computer? :)

[14:42] <Juerd> Do you not have thumbs?

[14:42] <Juerd> wolverian: No

[14:42] <Juerd> wolverian: It's the IE icon, right?

[14:42] <Juerd> :)

[14:43] <wolverian> yes. :) it'd have to be custom themed, though.

[14:43] <Juerd> It's KDE

[14:43] <Juerd> And IE runs with wine

[14:43] <wolverian> ah, okay.

[14:43] <wolverian> are you one of those strange people who don't run everything maximised?

[14:43] <castaway> No, no thumbs

[14:43] <Juerd> I quite messed up Abeltje's lightening talk about IE automization

[14:43] * castaway grins at wolverian (thanks for adding to my survey .)

[14:44] * shapr uses ion3

[14:44] <Juerd> By asked "Will that work with IE under Linux?" "Of cour... IE under Linux?!"

[14:44] <Juerd> s/asked/asking/

[14:44] <wolverian> castaway: can I see this survey somewhere? :)

[14:44] <shapr> yeah, me too.

[14:44] <Juerd> wolverian: Yes.

[14:45] <castaway> wolverian: heh, its in my head.. people that like everything maximised are seriously male brained (IMO anyway)

[14:45] <shapr> male brained?

[14:45] <wolverian> castaway: why?

[14:45] <Juerd> I'm male and homosexual. Should be male brained.

[14:45] <shapr> I am thoroughly male, if that helps any.

[14:46] <wolverian> I'm a very girlish male!

[14:46] <shapr> castaway: I shall ask the ion3 author if he has any females on the mailing list. That's a fascinating idea.

[14:46] <castaway> well (my opinion), its similar to the multi-tasking thing.. men that cant stand seeing more than one window at once are terrible multitaskers

[14:46] <castaway> whats ion3?

[14:46] <wolverian> castaway: a window manager. think screen for X

[14:46] <castaway> and its all due to male brainedness.. 

[14:46] <Juerd> http://foto.juerd.nl/winegums.jpg  # not jelly beans.

[14:46] <wolverian> (although it's not as simple; a better equivalent would be ratpoison)

[14:46] <shapr> ion3 is the ultimate in running everything maximised.

[14:46] <wolverian> shapr: ratpoison!

[14:46] <castaway> (ie concentration on the task at hand - hunting, not gathering)

[14:47] <shapr> wolverian: I can't use gimp well with ratpoison.

[14:47] <castaway> shapr: that would be an interesting question, yes

[14:47] <shapr> castaway: I disagree, I cannot function in this society without large doses of methylphenidate.

[14:47] <wolverian> shapr: ah, okay.

[14:47] <Juerd> shapr: See? Not similar.

[14:47] <castaway> Juerd: not all males are male-brained

[14:47] <castaway> methy-wot?

[14:47] <shapr> Ritalino

[14:47] <shapr> Vitamin R :-)

[14:47] <shapr> ADDeral, Concerta, etc

[14:48] <Juerd> castaway: So there could be a female in my head? That's scary.

[14:48] * castaway has no clue what that is and why

[14:48] <Juerd> (Women just are scary. Not my fault.)

[14:48] <shapr> The trade name Ritalin has the chemical name methylphenidate.

[14:48] <castaway> Juerd: its all my personal opinion, see it how you will :)

[14:48] <shapr> castaway: it's a fascinating question, thanks for mentioning it. I shall continue to do research on that question for the next few years.

[14:49] * Juerd wants confirmation from shapr (concentrate! :)) about winegums not being like jelly beans

[14:49] <shapr> Juerd: No sir, I lived in the USA for the first 27 years of my life, and I've been in Finland and Sweden the next five years. I believe that winegums are very similar to jelly beans.

[14:49] <stevan> Juerd: are they wine flavored? 

[14:49] <Juerd> And I'm not going to say what I want to say about ion before you answer :)

[14:49] <Juerd> shapr: They're not!

[14:49] <Juerd> stevan: Yes.

[14:49] <shapr> c'est votre choix

[14:50] <shapr> Similarity is in the eye of the beholder.

[14:50] <Juerd> shapr: Anyway, ion works well with non-maximized windows.

[14:50] <castaway> shapr I still dont know what Rita-wotsit is.. (but whatever .)

[14:50] <Juerd> I've used it for more than a year.

[14:50] <shapr> castaway: have you heard of ADD or ADHD?

[14:50] <castaway> shapr, wine gums are nothing like jelly beans!

[14:50] <Juerd> castaway++

[14:50] <castaway> shapr, vaguely

[14:50] <shapr> If you say so. Possibly my US culture oriented palate has been permanently poisoned by the refined sugar culture from which I originate.

[14:50] <stevan> shapr: they dont look or sound like jellybeans, I am gonna have to agree with them

[14:51] <Juerd> Real winegums have the wine they taste like stamped on them, these all say "REDBAND"

[14:51] <stevan> Juerd: are they a dutch thing? or german thing?

[14:51] <Juerd> I don't know

[14:51] * stevan remembers lots of weird gummi's from his time in germany

[14:51] <Juerd> The name is english :)

[14:51] <castaway> british

[14:51] <stevan> even stranger :P

[14:51] <Juerd> So

[14:51] <shapr> castaway: Small children who cannot sit still, who cannot focus on a single task, they grow up to become adults who are just the same. Like me!

[14:52] <Juerd> What else do you want to see?

[14:52] <castaway> wine gums are soft, jelly beans have hard shells

[14:52] <Juerd> It's almost 5 o'clock

[14:52] <stevan> shapr: all Hail the ADD !!!!

[14:52] <shapr> Hail Eris!

[14:52] <Juerd> shapr: Long live cocai^Writalin

[14:52] <castaway> shapr ah.. just another different human trait

[14:52] <Juerd> No more pictures?

[14:52] <shapr> castaway: Yup, but at certain extremes it does not fit into today's society.

[14:53] * stevan likes his ADD, and dislikes ritalin

[14:53] <shapr> I love Ritalin. I can keep a job now!

[14:53] <shapr> Heck I have my own company now.

[14:53] <Juerd> shapr: You don't mind that it does things to your thought stream?

[14:53] <stevan> shapr: so many of my coworkers have ADD, so ti works well for me

[14:53] <shapr> Juerd: Yes I do mind. But the natural me does not function in this society.

[14:54] <Juerd> shapr: I have my own company too. Doesn't mean I'm having work :)

[14:54] <castaway> Juerd: aeh, no all done, thanksverymuch!

[14:54] <stevan> mind-altering drugs ++ :)

[14:54] <Juerd> castaway: You're welcome

[14:54] <Juerd> shapr: Natural me has trouble too, but so far manages

[14:54] <stevan> functioning-in-society--

[14:54] <castaway> bah, drugs--

[14:54] <castaway> making society fit oneself, better .)

[14:55] <wolverian> work--

[14:55] <shapr> The point of drugs like Ritalin is to allow the user to build up habits that solve the problem so that you can (hopefully) not need the drugs at some point.

[14:55] <stevan> castaway++

[14:55] <castaway> sounds like a bad theory

[14:55] <shapr> I dunno. Some parts of it are true for me.

[14:56] <stevan> shapr: my worries with Ritalin was always that its really just high-grade speed

[14:56] <shapr> It's not. I've had amphetamines too, and they are a 'dirty stimulant'. The side effects sucked.

[14:56] <stevan> speed is really bad for your heart (among other organs)

[14:56] <shapr> Ritalin specifically stimulates the focus parts of the brain.

[14:56] <Juerd> As if ritalin has no side effects.

[14:57] * castaway tries to remember where this tied in with male brains :)

[14:57] <shapr> Ritalin has almost zero side effects for me. The only one of any importance is that I get nervous in social situations.

[14:57] <stevan> shapr: you are likely immune to the side effects now

[14:57] <shapr> castaway: you were talking about focus oriented male brains. I use full-screen-only ion3 and I am *not* focussed.

[14:57] <castaway> ah, gotcha

[14:57] <Juerd> http://foto.juerd.nl/office.jpg

[14:57] <Juerd> Last picture for now :)

[14:58] <shapr> stevan: Could be. I started taking Ritalin four years ago.

[14:58] <shapr> oh, I want to post a picture! It's me! http://www.scannedinavian.com/images/uni-hop.jpg

[14:59] <shapr> Right so, how can lambdafolk contribute to Pugs?

[14:59] <Juerd> Your bicycle is broken.

[14:59] <shapr> Juerd: Now two people can use my bicycle at the same time!

[14:59] * castaway grins

[15:00] <castaway> shapr, can I clarify that, are the *Apps* fullscreen in ion3 ?

[15:00] <hattmoward> I think you've got a penguin infestation, son.

[15:00] <Juerd> castaway: Windows can't overlap in ion

[15:00] <Juerd> (not by default that is)

[15:00] <castaway> Oh

[15:00] <Juerd> castaway: So they fill up to preformatted shapes, by default: full screen

[15:00] <shapr> castaway: http://www.scannedinavian.org/~shae/ecb.png

[15:00] <Juerd> shapr: Ew, big terminal.

[15:01] <Juerd> I like to have 6 terminals on screen when I'm programming

[15:01] <Juerd> It saves you a lot of brain context switches.

[15:01] <shapr> I have eshell.

[15:01] <Juerd> What be that?

[15:01] <wolverian> ew, emacs. :)

[15:01] <Juerd> EEEEEEEEwwwwwmacs.

[15:02] * hattmoward keeps two terminals connected to the same screen session

[15:02] <shapr> emacs shell. M-s pops up eshell into the same directory as the file I'm seeing. And I can use buffers like files on the command line in shell. So I get to pipe in and out of buffers.

[15:02] <Juerd> Oh, when I said 6 terminals, note that three of them are remote ssh sessions with screen running

[15:02] <shapr> Haven't you ever wished files you're editing were directly addressable from the command line?

[15:02] * stevan regularly has 6 terminal windows too, of which 3 are SSH 

[15:03] <Juerd> stevan++ :)

[15:03] <stevan> and at least one is Pugs :)

[15:03] <stevan> one for dev server, one for staging server and one for prod server 

[15:04] <shapr> emacs can also edit over one or more of ssh, su, sudo, scp, etc. So I need ssh less.

[15:04] <castaway> Juerd: thats what we were talking about :)

[15:04] <Juerd> I'm going to tidy this place a little and then drive home

[15:04] * castaway pounces on hatt

[15:04] <Juerd> castaway: We were? What exactly?

[15:04] <hattmoward> no!

[15:04] *** Corion_ is now known as Corion

[15:04] <castaway> multiple thingys on the screen ,)

[15:04] <Juerd> castaway: Does that make my brain female then?

[15:04] <castaway> IMO, yup

[15:04] <shapr> Ich veiss nicht!

[15:04] <shapr> Ich habe keine ahnung!

[15:04] <Juerd> Aren't "male" and "female" terribly wrong then?

[15:05] * stevan also has IRC, iTunes and iCHa

[15:05] <Juerd> shapr: weiss, Ahnung.

[15:05] <shapr> whoops, thanks.

[15:05] <shapr> Anyway, how can lambdafolk contribute to the Revolution? Is there a lambdafaq?

[15:05] <castaway> Juerd: depends on the context.. 

[15:05] <castaway> whats a lamdafolk?

[15:05] <stevan> castaway: how is it that a female brain is better at multi-tasking?

[15:05] <Juerd> castaway: Restricted greeks.

[15:06] <shapr> Juerd: only if camelfolk count as that too :-)

[15:06] <stevan> shapr: I have a list of things I would like implemented :) if you are looking for something to do

[15:06] <castaway> stevan, the theory (ages old) goes, that men were out hunting (as cave people this is), and thus had to fully concentrate, to avoid getting hunted themselves..

[15:06] <stevan> hmmm

[15:06] <castaway> While women gathered, looked after kids, cooked, make clothing etc.

[15:07] <shapr> stevan: Tell me more. No promises as to what I can do though.

[15:07] <Juerd> shapr: camelfolks are kamlotaur :)

[15:07] <shapr> So women were forced to multitask?

[15:07] <stevan> castaway: ok, that makes sense,... however I blame it less on my "female"-ness and more on my ADD

[15:07] <hattmoward> castaway: I find your ideas intriguing and would like to subscribe to your newsletter. ;)

[15:07] * shapr grins

[15:07] <Corion> Grrr. lightstep broke my pugsrun tests while refactoring the code :(

[15:07] <stevan> shapr: I commited some test for basic builtins yesterday

[15:08] <shapr> "Messages in A Bottle" - Castaway's Writings.

[15:08] <stevan> hex(), chr(), ord(), and some math functions

[15:08] <Juerd> castaway: But women can't drive and I can. How does that work?

[15:08] <Juerd> :)

[15:08] <castaway> Right.. but lately, the theory is less that these functionalities (?) are bodily oriented, just more brain oriented, that a "female" brain has more connections between the 2 halves

[15:08] * castaway drives Juerd off a cliff, just to prove

[15:08] <stevan> castaway: I will buy that one

[15:09] <castaway> shapr++

[15:09] <shapr> castaway: Does ambidexterity count?

[15:09] <shapr> I tend to switch primary hands every coupla years for entertainment purposes.

[15:09] <castaway> shapr, I hadnt taken that into account.. but it sounds female-brained to me

[15:09] * stevan went to school for fine-arts painting and ended up a programmer

[15:09] <castaway> funky

[15:09] <Juerd> castaway: But autism is said to be related to having *less* connections between brainhalves

[15:09] <xerox> shapr: how do you use buffer like files in pipes?

[15:09] <Juerd> castaway: This could explain why more men are autistic, in the context of what you said

[15:09] <stevan> shapr: I am starting to think Ritalin is a good thing for you  :)

[15:09] <Juerd> castaway: But it'd make me a very weird person.

[15:09] <shapr> xerox: sure.

[15:09] <castaway> Juerd: yup.. which is why autistics are not good at most things, just the one, no?

[15:10] <shapr> stevan: I know it is!

[15:10] <castaway> people are weird, theres no getting around that

[15:10] <shapr> stevan: Where are you? Maybe I can drop by one day and meet you.

[15:10] <shapr> I like to meet ADD people. They're always interesting.

[15:10] * castaway taught herself to write lefthanded, just because :)

[15:10] <shapr> Have you tried left-footed writing?

[15:10] <stevan> shapr: Eastern US, Connecticut

[15:11] <Corion> Writing upside-down/right-to-left is a fun exercise too (that is, 180° rotated)

[15:11] <shapr> I can type on my kinesis with my feet, except for the fact that my largest toe *really* gets in the way.

[15:11] <Juerd> I can type with my feet

[15:11] * stevan just uses telekenisis

[15:11] <Juerd> But I never hit the keys I want to.

[15:11] <shapr> I can also take my glasses off with my feet, but I end up with toeprints on the lenses.

[15:11] <stevan> Juerd++

[15:12] <shapr> stevan: mah roots is Birminhayum, so I dunno if I'll get up that way anytime soon.

[15:12] <castaway> Juerd++

[15:12] <castaway> shapr, I never got far with my feet, odd that

[15:13] <stevan> shapr: Birminhayum?

[15:13] <shapr> Birmingham, Alabama

[15:13] <castaway> taking glasses off is easier

[15:13] *** clkao_ is now known as clkao

[15:14] <stevan> shapr: ahh, I've been to Mobile, but never Birmingham

[15:15] <Juerd> Who wants to buy a crappy colour laser printer?

[15:15] <Juerd> EUR 350

[15:15] <stevan> Juerd: you might want to improve your sales pitch :)

[15:16] <Juerd> It's brand new.

[15:16] <Juerd> And does duplex printing

[15:16] <stevan> unless 'crappy' means 'really nice' in Dutch 

[15:16] * shapr snickers

[15:16] <shapr> lekker == lexer? =)

[15:16] <Juerd> stevan: No, the print quality really is subprofessional :)

[15:16] <shapr> ik begrijp het niet!

[15:16] <Juerd> shapr: lekker == tasting good

[15:16] <Juerd> shapr: DAN HEB JE PECH

[15:16] * shapr snickers

[15:17] * Juerd m&m's

[15:18] * hattmoward mr. goodbar...  s

[15:18] <Juerd> heh.

[15:19] * stevan winegums

[15:20] * castaway pokes hatt

[15:21] <hattmoward> hmm?

[15:21] <jabbot> pugs - 1373 - * even more speculative work on IMC comp

[15:22] <castaway> rejoin #pm, silly :)

[15:22] <hattmoward> yah, scott let me know

[15:22] <hattmoward> wasn't paying attention

[15:23] * shapr sings "I'll send an SMS to the world"

[15:24] <hattmoward> heheh

[15:25] <castaway> tsktsk

[15:25] * castaway grins

[15:25] * castaway has no mobile phone

[15:27] <Juerd> Are you proud of not having a mobile phone?

[15:28] <castaway> yup

[15:30] <shapr> stevan: it seems the darcs repo hasn't been updated since day before yesterday, that's why I can't find your changes.

[15:31] <Corion> BTW, does the current build still build/test/work for anybody ? I think it must be broken due to the borked argument parsing ...

[15:31] <stevan> shapr: try svn

[15:31] <shapr> I think I'll just wait...

[15:33] <Corion> Ah - no, some stuff still works (but -l doesn't I think)

[15:34] <stevan> shapr: so do you do Haskell at work? 

[15:34] <shapr> Some, yes.

[15:34] <shapr> Mostly I do Python at work.

[15:35] <Juerd> Where do you work?

[15:35] <shapr> In my bed!

[15:35] <Juerd> You mostly do Python in bed?

[15:35] <Juerd> That's scary.

[15:35] <shapr> Seriously though, I have two companies, one which is just me, and one which is I half own with my fiancee.

[15:36] <Juerd> I know what working in bed is like

[15:36] <Juerd> I do that too sometimes

[15:36] <Juerd> But not Python! :)

[15:36] * shapr is afraid to ask.

[15:36] <Juerd> Afraid to ask what?

[15:36] <Juerd> (heh)

[15:36] <shapr> Nothing to ask here, move along folks.

[15:36] <Juerd> No, ask

[15:36] <stevan> shapr: what kind of work do your do?

[15:36] <shapr> stevan: if it's geeky work, I'll take money to do it.

[15:36] <Juerd> stevan: My guess is that he's mostly a Python programmer.

[15:37] <Juerd> shapr: What about nerdy work then?

[15:37] <shapr> I dunno the difference.

[15:37] <shapr> I mostly do webdev in Zope/Plone the last year or two.

[15:37] <autrijus> try darcs again

[15:37] <shapr> yay

[15:37] <autrijus> is it synced?

[15:37] <autrijus> error was "argument lists too long"

[15:37] <shapr> I dunno, but if you ask me to try it's likely.

[15:37] <autrijus> the buffer overflow for the shells

[15:37] <PerlJam> shapr: you mean you don't code scheme for a living?  ;)

[15:38] <shapr> PerlJam: I scheme to code for a living, does that count?

[15:38] <PerlJam> :-)

[15:38] <autrijus> be glad you don't code schema for a living :

[15:38] <autrijus> :)

[15:38] * shapr laughs

[15:38] <Juerd> shapr: Enough can be found with Google about the difference.

[15:38] * Juerd is both :)

[15:38] <shapr> I did some XSLT work recently, it was painful.

[15:38] <Juerd> shapr: What was that question now?

[15:38] <shapr> Ich habe keine Ahnung!

[15:38] <shapr> Ik veit het niet!

[15:38] <Juerd> weet

[15:39] <shapr> thanks

[15:39] <castaway> It ws "which work did you do from bed"

[15:39] <castaway> ,)

[15:39] <Juerd> Du hast wohl eine Ahnung en je weet 't wel!

[15:39] <shapr> Jag har ingen aning!

[15:39] * castaway hat aber auch keine Ahnung

[15:39] * shapr wonders if Juerd speaks any Swedish... 

[15:39] <Juerd> (This opposite of "not" is something I really, really miss in English.)

[15:40] <shapr> You can say "You do so have a suspicion."

[15:40] <Juerd> shapr: nej

[15:40] <shapr> But you're right, such a thing is rarely used in English.

[15:41] <Juerd> shapr: Jag inte alls talar Svenska

[15:41] <jabbot> pugs - 1374 - Added examples/obfu/snowing.p6 -- first 

[15:41] <shapr> Och kan jag inte tala Svenska heller.

[15:42] <Juerd> Vad tr􏿽xE5kigt...

[15:43] <xerox> ö

[15:43] <Juerd> xerox: My terminal doesn't do utf-8

[15:43] <xerox> It was a smiley :P

[15:43] <shapr> tyvärr

[15:44] <Corion> I need some Haskell help - the ArgParse.h does not parse C<-I foo> anymore since the ADT rewrite, and I don't know how to coax the Haskell except some ugly postprocessing :)

[15:44] <Juerd> shapr: What's the 4th character?

[15:45] <Juerd> shapr: 􏿽xE4?

[15:45] <Juerd> &auml;

[15:45] <shapr> tyv&auml;rr

[15:45] <shapr> c'est 'quelle dommage' en suédois.

[15:45] <autrijus> gatherargs?

[15:45] <autrijus> Corion: line 93

[15:45] <autrijus> gatherArgs("-I":dir:rest)         = [Opt "-I" dir] ++ gatherArgs(rest)

[15:45] <rgs> 'quel dommage', even

[15:46] <shapr> rgs: merci :-)

[15:46] <shapr> stevan: aha, the naturalOrRat code?

[15:46] <Corion> autrijus: That line already exists in my source ...

[15:46] <autrijus> add a (('-':'I':dir):rest) form?

[15:47] <stevan> shapr: no I added the t/builtins/hex.t,ord.t, chr.t and the t/builtins/math/* tests

[15:47] <Corion> autrijus: According to my printouts, the parsing already messes things up by allowing "-I" if not followed by a value to become "-I" "", which is wrong.

[15:47] <autrijus> oh ok.

[15:47] <Corion> autrijus: I didn't rework it to become like it is now, I just want to fix my test cases anymore :)

[15:47] <Juerd> shapr: comment pensez-vous que je ne pouvait deviner ca? ;)

[15:47] <Juerd> +pas

[15:47] <Corion> autrijus: err - s!anymore!!

[15:47] <autrijus> Corion: I see. talk to lightstep? :)

[15:47] * shapr looks up deviner...

[15:48] <autrijus> I can take a look it after my journaling too

[15:48] <Corion> autrijus: If lightstep were here, I'd ask/explain/point out the failing tests :)

[15:48] <shapr> Of course, 'to divine'

[15:48] <Corion> autrijus: maybe I'll find somebody who explains it while you

[15:48] <Corion> ... you're journaling :)

[15:48] <Juerd> shapr: kaj kiel paroladas ni fremdlingve? :)

[15:49] <autrijus> Corion: shapr here is also a skilled lambdafolk :)

[15:49] <shapr> minä en puhu norska!

[15:49] <Corion> autrijus: :)

[15:49] <shapr> Juerd: Is that norsk?

[15:49] <autrijus> shapr: so is the darcs repo uptodate?

[15:49] <shapr> Corion: though I claim tmoertel is more skilled than me in both lambda and camel worlds.

[15:50] <wolverian> shapr: en min􏿽xE4k􏿽xE4􏿽xE4n. :)

[15:50] <Juerd> shapr: I have no idea. Jeg snakker ikke norsk.

[15:50] <Corion> shapr: I don't mind - I'm not really skilled in making Haskells pattern matching work for me :)

[15:50] <shapr> autrijus: datewise it seems so, but it might not be, I can't find hex.t / ord.t / chr.t

[15:51] <autrijus> t/builtins/hex.t ?

[15:51] <shapr> I haven't got one.

[15:51] * shapr pulls again

[15:51] <jabbot> pugs - 1375 - Missing keywords

[15:51] <shapr> Nope

[15:52] * Corion got hex.t

[15:52] <Corion> r1375

[15:52] * stevan has it too (but I wrote it, so ....)

[15:52] <shapr> wolverian: kiitos

[15:52] <Juerd> I'm going home now

[15:52] <wolverian> shapr: ole hyv􏿽xE4.

[15:52] <Juerd> Gxis revidoj!

[15:52] <Corion> shapr: You got a moment / inclination to look into the command line parser ArgParse.hs ?

[15:52] <wolverian> Juerd: bye. 

[15:53] * shapr looks

[15:54] <Corion> shapr: The problem in parsing is, that -I and -e can be given in two variants, -Ifoo and -I foo. The parser currently only allows/thinks of the first variant, and gives an empty string plus a separate (wrong) argument in the second case.

[15:54] <Corion> "How to fix that?"

[15:59] <shapr> Which tests work on this?

[15:59] <autrijus> shapr: try again?

[15:59] * shapr pulls

[15:59] <autrijus> I _think_ it's fixed

[15:59] <autrijus> for real thi

[15:59] <autrijus> s time

[15:59] <stevan> shapr: none :) hex(), ord() and chr() are not yet implemented

[16:00] <shapr> what about the -I arg? It has tests?

[16:00] <autrijus> oh. I'll also be happier if ArgParse.hs

[16:00] <autrijus> can be renamed into Main/Args.hs or Run/Args.hs etc.

[16:00] <shapr> autrijus: yay! I have {hex,ord,chr}.t !

[16:00] <autrijus> but it's not a priority :)

[16:00] <autrijus> shapr: yay!

[16:00] <shapr> thanks!

[16:01] <xerox> Be back later, enjoy pugs hacking shapr ;)

[16:01] <shapr> :-)

[16:01] <shapr> Corion: Is there a test for -Idir ?

[16:01] <Corion> shapr: pugsrun/01-dash-uppercase-i.t

[16:02] <Corion> shapr: (tests both, -Idir and -I dir)

[16:02] <shapr> spiffy

[16:02] <shapr> er, and what the command to run just one test again? :-/

[16:02] <autrijus> make

[16:02] <autrijus> preferably make install

[16:02] <Corion> shapr: I wouldn't care for -I dir, but theorbtwo uses it and Perl supports it too :)

[16:02] <autrijus> then ./pugs t/pugsrun/01-dash-uppercase-i.t

[16:03] <autrijus> alternatively, if -I is working

[16:03] <Corion> shapr: I use nmake && pugs -Iblib6\lib -w t\pugsrun\01-dash-uppercase-i.t

[16:03] <autrijus> then what corion said.

[16:03] <Corion> shapr: You might need to adjust the make tool and the path_sep variable :)

[16:03] <autrijus> it doesn't help a lot if -I is broken :D

[16:03] <Corion> autrijus: Luckily, -Ifoo is not (yet) broken ;)

[16:03] <autrijus> very lucky.

[16:04] <Corion> We should get to a zero-bug state soonish so one quickly sees if a change broke something...

[16:04] <shapr> I have a package hiding problem with ghc 6.4, is that known?

[16:04] <Corion> ... but that conflicts with the goal of having parsebug tests

[16:05] <Corion> Maybe a watcher "you broke more tests than when you checked out" would help :)

[16:05] <autrijus> shapr: hm?

[16:05] <shapr> Main.hs wants Posix, which is masked by default in ghc 6.4, but ghc-pkg expose posix-1.0 gives me a different compile error.

[16:06] <autrijus> oh wow. no. hrm.

[16:06] <shapr> specifically src/Internals.hs:21:4: \n Conflicting exports for `createDirectory': \n `module Posix' exports `System.Posix.Directory.createDirectory' imported from Posix at src/Internals.hs:66:0-11 \n `module System.Directory' exports `System.Directory.createDirectory' imported from System.Directory at src/Internals.hs:83:0-22

[16:06] <autrijus> I wonder why it does owrk for me.

[16:06] <shapr> That's after ghc-pkg expose posix-1.0

[16:06] <autrijus> try using a ifdef hack to work it around?

[16:07] * shapr tries

[16:08] <shapr> Which createDirectory should be exported from Internals? Sys.Dir or Posix?

[16:10] * shapr hides createDirectory and removeDirectory from Posix

[16:11] <autrijus> yup.

[16:11] <jabbot> pugs - 1376 -  r4722@hcchien:  hcchien | 2005-04-01 00

[16:11] <autrijus> I think Sys is correct.

[16:11] <kcwu> what is the difference between "is(eval'foo')" and "eval_is('foo')"? pugs will terminate with former, not in latter

[16:12] <autrijus> weeird.

[16:12] <autrijus> there should be no diff.

[16:13] <kcwu> t/data_types/anon_block.t line 50

[16:13] <kcwu> is(eval'$pointy_block_nested(5)(6)', 11, '-> $a { -> $b { $a+$b }} nested <"pointy" block> works'); will termiate

[16:13] <Corion> Yay. I fixed it through voodoo. Fascinating.

[16:14] <autrijus> haskell voodoo is fascinating. :)

[16:15] <stevan> kcwu: eval_is just wraps it inside the eval, which will prevent pugs from dieing

[16:15] <autrijus> kcwu: ooh...write a meta-test? :)

[16:15] <kcwu> or because haskell lazy?

[16:15] <Corion> autrijus: Yes.

[16:16] <Corion> Grrr. And lightstep even removed (Perl code generating) functionality :(

[16:18] <autrijus> you can easily revert them back :)

[16:18] <autrijus> by some more voodoo, I presume

[16:18] <Corion> autrijus: No, because lightstep made the code much more Haskellish, which is what I wanted. But I wrote the tests, so the features I wanted stay :)

[16:19] <Corion> (as my Haskell is not good, I see more value in my tests than in the Haskell that I write :))

[16:19] <autrijus> sure :)

[16:21] <Corion> BTW, are BEGIN blocks in already ?

[16:21] <autrijus> no the are not, sadly. 

[16:21] <autrijus> I really need to finish this metacompiler.

[16:22] <Corion> autrijus: No worries - BEGIN would be nice, so -l works (by s!-l!-e "BEGIN{ magic }"!), but not important :)

[16:22] <autrijus> http://svn.openfoundry.org/pugs/examples/obfu/snowing.p6

[16:22] <autrijus> asavige is at it again

[16:25] <Juerd> This car is going to kill me soon.

[16:25] <Juerd> On the way home it stopped functioning twice. In 10 km.

[16:25] <shapr> You could get a unicycle.

[16:26] <Juerd> And goddamn, suddenly losing power steering IN A CORNER sucks.

[16:26] <autrijus> shapr always mentions unicycles at any given chance :)

[16:26] * shapr laughs

[16:26] <kcwu> hmm, I think t/pugsbugs/syntax_crashes.t is about that. # < autrijus> kcwu: ooh...write a meta-test? :)

[16:27] <autrijus> kcwu: ah. ok

[16:31] <ihb> since has $.foo = { ...; }; is overloaded to execute at object initialization, is there any other way to create a class attribute that should hold a closure than to wrap the closure in another closure so that the wanted closure is returned at object initialization? (i realize that wasn't exactly crystal clear)

[16:31] <jabbot> pugs - 1378 - tests floating numbers and return types 

[16:31] <jabbot> pugs - 1377 - change fail() with eval_is()

[16:31] <autrijus> sub {} 

[16:31] <autrijus> maybe?

[16:32] <ihb> autrijus: won't sub {} also create a closure?

[16:32] <autrijus> I'm not terribly sure of that.

[16:32] <ihb> hmm, btw, exactly what does "pseudo-assignment" mean? (http://dev.perl.org/perl6/synopsis/S12.html -- Attributes, 6th paragraph)

[16:33] <ihb> perhaps i misinterpreted that paragraph when i first read it.

[16:33] <ihb> i've never heard of pseudo-assignments before.

[16:34] * autrijus points ihb to p6l :-/

[16:35] <ihb> ok.

[16:36] <Corion> Heh. I think I fixed the argument parsing :)

[16:36] <ihb> a hopefully simpler question: what's the difference between has and my/our?

[16:37] <stevan> anyone ever use a hosted SVN server? for work (pseudo-closed source) code?

[16:37] <autrijus> ihb: has is instance prop, my/our is class?

[16:37] <autrijus> uh, not me, my work uses openfoundry

[16:38] <Corion> stevan: I use locally an svn server which I connect to via ssh, but that's the only solution I know via server side

[16:38] <stevan> Corion: that is what we do now, but we are looking to be more "virtual" (aka, get rid of the office)

[16:38] <ihb> that's my guess too, but i don't find it clear from S12.

[16:38] <Juerd> shapr: unicycles do not go 100 km/h

[16:38] <Corion> stevan: Ah, but I'd still keep the svn server hidden behind an ssh tunnel

[16:39] <Corion> stevan: (that is, you should run your own server, or at least have some shell accounts on some server)

[16:39] <shapr> Juerd: sounds like your car doesn't either =)

[16:39] <Juerd> It does

[16:39] <Juerd> At that speed, it doesn't fail.

[16:39] <stevan> Corion: there are a number of SVN hosts out there which offer secure access cvsdude.org is one

[16:39] <Juerd> It's below 30 km/h that it's unreliable

[16:39] <stevan> Juerd: so drive him faster

[16:40] <Juerd> That's why this keeps happening in corners

[16:40] <Juerd> Can't take these any faster.

[16:40] <Corion> stevan: Hmmm - interesting... I still believe in self-hosting/administering, but that takes time, true

[16:40] <Juerd> stevan: it...

[16:40] <stevan> Corion: usually I do too, but without a central location, its hard

[16:40] <stevan> s/him/home/

[16:40] <Corion> stevan: Why is the location a problem ? I rented a machine in some data center

[16:41] <Corion> stevan: I could offer you shell access there, for a miniscule fee :))))

[16:41] <shapr> Juerd: do you have a carbeurator or fuel injection?

[16:41] <Juerd> shapr: Yes

[16:41] <Juerd> But not when driving on LPG

[16:41] <stevan> Corion: that is the other idea, but I thought I would explore the other options first

[16:41] <Juerd> And it happens on gas too

[16:42] * stevan would like to not have to be SVN admin anymore

[16:42] * stevan needs more interns to do the monkey work

[16:42] <Corion> stevan: Having a machine on the 'net is some hassle. Pair seem to do good managed hosting, but you don't get to be root on the machine.

[16:42] <Corion> stevan: What's so wrong with ssh tunnels into the (managed) machine?

[16:42] <Corion> stevan: (other than you staying the svn monkey)

[16:43] <Juerd> shapr: Oh, you probably wanted to know which one of the two. Injection.

[16:43] <stevan> Corion: nothing, other than the monkey bit :)

[16:43] <shapr> Juerd: If you have a carbeurator, you may need to clean the fuel lines or the exit ports.

[16:43] <Juerd> shapr: But LPG isn't directly injected.

[16:43] <shapr> Oh, then I don't need to explain to you how Venturi relates to carbeurators.

[16:44] <Juerd> shapr: Injectors, spark plugs, valve lid, gasoline pump, gasoline, oil, coolant, PAM sensor, lambda sensor all have already been replaced.

[16:44] <shapr> What's LPG? better gas mileage? and how do you have indirect fuel injection?

[16:44] <Juerd> Even the screen wiper fluid has been replaced :)

[16:44] <ihb> what happens if you do "class Foo { sub foo { ... } { my $.foo; } { my $.foo; } }" (i assume you can do things like "class Foo { method foo { ... } print 'foo'; method bar { ... } }" in Perl 6)

[16:44] <Juerd> shapr: LPG is liquid gas.

[16:45] <Juerd> shapr: GPL in french, autogas in some languages

[16:45] <shapr> Your car runs on butane or something?

[16:45] <Juerd> No, LPG :)

[16:45] * shapr asks google

[16:45] <Juerd> It's a mixture of butane and propare IIRC

[16:45] <Juerd> propaNe

[16:45] <shapr> That's amazing.

[16:46] <Juerd> It's much cheaper than gasoline.

[16:46] <shapr> That is one sort of car I have never worked on!

[16:46] <Juerd> 45 cents instead of EUR 1.27 per liter

[16:46] <Juerd> You get only 1:10 out of it instead of 1:12 (with my car)

[16:46] <Juerd> But that's certainly still worth it :)

[16:47] <Juerd> bbl  # dinner

[16:47] <shapr> Internal combustion is at best inefficient with changing demand.

[16:47] <shapr> Aaaanyway... 

[16:49] <lightstep> hello. i saw myself on the journal, can i help?

[16:49] <autrijus> yes you can.

[16:49] * lightstep figured he broke ArgParse

[16:49] <autrijus> Corion: lightstep comes!

[16:49] <Corion> autrijus: :)

[16:50] <Corion> lightstep: I think I fixed most of it already, but I'm hunting down some failures still :)

[16:50] <lightstep> cool

[16:50] <Corion> bare "-" for example ("read from stdin")

[16:50] <Corion> lightstep: But other than breaking my tests, you did exactly what I had in mind :))))

[16:50] <Corion> lightstep: ... although I don't understand the complete stuff yet, it looks far more Haskellish :)

[16:50] <lightstep> bare "-" should be where "--" and detecting file names is

[16:51] <lightstep> that is, in unpackOptions

[16:51] * lightstep is nowhere near the precious homedir with the local image

[16:52] <Corion> lightstep: Yeah ...

[16:52] <lightstep> oh, and findArg should have `guard (not (null param))' in the middle, so `-e expr' will work

[16:53] <lightstep> and -l is broken, since it was broken anyway, and i didn't know what to do with it

[16:54] <Corion> lightstep: Interesting method - I fudged it by replacing all empty args with the next File. But yes, your way sounds better, and I should add a test that prevents -e "" foo from getting parsed wrongly

[16:54] <Corion> lightstep: What was broken about -l ?

[16:54] <shapr> autrijus: are you using ghc 6.4?

[16:54] <autrijus> shapr: yes I am.

[16:54] <autrijus> on fbsd and win32

[16:55] <shapr> Weird, I'm getting several errors.

[16:55] <lightstep> it didn't work for me, and the code looked as if it wouldn't work (it expanded to "-e" with comments)

[16:55] <autrijus> let me check out darcs to see if it's darcs prob

[16:55] <lightstep> and the code can be prettier: '-':x:[] = ['-',x]. i don't know why i forgot about it in the first place

[16:55] <Corion> lightstep: That's the idea - -l in Perl5 would be -e "BEGIN{ magic }"

[16:56] <shapr> autrijus: oh, I think I just hid the wrong createDirectory, doh

[16:57] <shapr> Oh, I guess not.

[16:57] <shapr> Where's the svn repo?

[16:58] <lightstep> you can make "-l" work as a special case in Main and Run, or convert it in procArg, or convert it when finding it

[16:58] <shapr> Mentioned on the homepage maybe? too easy!

[16:59] <autrijus> hrm, the network here is dying

[16:59] <autrijus> I may have to drop soon. please keep feeding the puppy :)

[16:59] * shapr grins

[16:59] <shapr> autrijus: I'll figure it out.

[16:59] <autrijus> danke!

[16:59] <autrijus> &

[17:00] <Corion> lightstep: Yep - I put it in gatherArgs currently

[17:01] <castaway> puppy??

[17:01] <Corion> castaway: Small dog.

[17:01] * castaway sneaks off with the puppy

[17:01] <Corion> castaway: Small dog.

[17:01] <Corion> Oops - wrong window

[17:02] <shapr> castaway: http://pugscode.org/images/pugs.small.png

[17:02] <shapr> Happy Puppy!

[17:02] <castaway> cute!

[17:04] <autrijus> shapr: for what its worth, darcs fresh checkout builds just fine on fbsd 5.3 with ghc 6.4.

[17:04] <autrijus> [not|autrijus]~/work/pugs_0$ ghc --version

[17:04] <autrijus> The Glorious Glasgow Haskell Compilation System, version 6.4

[17:04] <lightstep> Corion, how did you figure foldl out without learning the haskell libraries?

[17:04] <Corion> lightstep: ??? I read some of Prelude

[17:05] <autrijus> lightstep: by being exceedingly smart? :)

[17:05] <Corion> lightstep: And I know foldl under the name of "reduce" :)

[17:05] <Corion> autrijus: I'm not smart :)

[17:05] <Corion> ... but I hide the consequences of most of my mistakes very well !

[17:05] <lightstep> wow. usually, people learn to use the procedures before the combinators. maybe you're like bird

[17:06] <Corion> lightstep: Functional programming (except the types) isn't that foreign a concept to me. Perl has it in some ways too.

[17:06] <autrijus> it's just you have to pay a very heavy language tax in perl to use them :)

[17:06] <autrijus> up to 70%, in some of Higher Order Perl examples

[17:06] <Corion> (and Monads are foreign to me as well; I think I understand what they are for, but haven't grasped them really)

[17:07] <autrijus> but yeah, pretty much all advanced perl module authors know some functional stuff, I think.

[17:07] <Corion> autrijus: HOP hasn't come out here yet :( It's a sure buy for me, even though I've read many chapters already :)

[17:07] <autrijus> it's great to have a deadtree version :D

[17:07] <Corion> autrijus: indeed

[17:08] <theorbtwo> autrijus: Take a job translating it, and get paid to have a deadtree version!

[17:08] <Corion> Mmmmm. Translating HOP to German would be a nice idea. Except that I doubt there'll be a market here ;(

[17:09] <rgs> HOP.

[17:09] <autrijus> uh, I already have a dead tree version as a gift :)

[17:09] <theorbtwo> That, and you aren't an experinced translator.

[17:09] <theorbtwo> http://perl.plover.com/hop/

[17:10] <theorbtwo> Somehow I read a Corion line as a autrijus line.

[17:10] <Corion> jabbot: HOP is at http://perl.plover.com/hop/

[17:10] <jabbot> Corion: 􏿽xB0O􏿽xA6􏿽xED􏿽xA4F

[17:10] <Corion> jabbot: HOP also is Higher Order Perl

[17:10] <jabbot> Corion: 􏿽xAD􏿽xEC􏿽xA8􏿽xD3􏿽xA6p􏿽xA6􏿽xB9􏿽xAA􏿽xFC􏿽xA1I

[17:10] <autrijus> jabbot: hop?

[17:10] <jabbot> autrijus: That is interesting. Please continue.

[17:10] <Corion> ... I hope the responses are not insults ...

[17:11] <Corion> jabbot: HOP ?

[17:11] <jabbot> Corion: HOP is at http://perl.plover.com/hop/

[17:11] <autrijus> jabbot: HOP?

[17:11] <jabbot> autrijus: HOP is at http://perl.plover.com/hop/

[17:11] <theorbtwo> They don't appear to be valid utf8 at all.

[17:11] <Corion> theorbtwo: I wondered why ChatZilla wasn't displaying anything worthwhile...

[17:11] <autrijus> Corion: no; they are "gotcha" and "ach so!" respectively, in traditional chinese, in big5.

[17:11] * shapr too

[17:11] <shapr> haha

[17:12] <Corion> autrijus: Ah :) ChatZilla didn't render them as chinese glyphs though ...

[17:12] <lightstep> jabbot, higher order perl?

[17:12] <jabbot> lightstep: Please go on.

[17:13] <Corion> jabbot: higher order perl is HOP

[17:13] <jabbot> Corion: hmm

[17:13] <Corion> :-)))

[17:13] <Corion> jabbot: higher order perl?

[17:13] <jabbot> Corion: higher order perl is HOP

[17:13] <Corion> jabbot: HOP?

[17:13] <jabbot> Corion: HOP is at http://perl.plover.com/hop/

[17:13] <Corion> :)

[17:14] * Corion reminiscences the Good Ol' Times with his infobot

[17:14] <theorbtwo> jabbot: HOP is also higher order perl

[17:14] <jabbot> theorbtwo: 􏿽xAD􏿽xEC􏿽xA8􏿽xD3􏿽xA6p􏿽xA6􏿽xB9􏿽xAA􏿽xFC􏿽xA1I

[17:15] <theorbtwo> jabbot: higher order perl is also at http://perl.plover.com/hop/

[17:15] <jabbot> theorbtwo: ok

[17:15] <Corion> Hah. Fixed.

[17:17] <theorbtwo> BTW, autrijus, I'm curious: Do books get translated into both trad and simp, or only one, and if both, do you do both at once, or sepperately?

[17:18] * Corion thinks that jabbot should chatter whenever it feels a question goes unanswered :)

[17:19] <castaway> eep

[17:19] <Corion> castaway: I ran such a bot - it had a delay of 3s or something, and if nobody seemed to answer the question, it pulled its own answer.

[17:19] <Corion> castaway: 'twas fun :)

[17:20] <Corion> (provided it had an answer)

[17:20] <Corion> Otherwise it only spoke when directly addressed

[17:20] <Corion> Heh. Seems like my fixes didn't break anything else in a spectacular way :)

[17:22] <castaway> hmm

[17:22] * castaway looks for a website where complex flights are bookable.. ie A->B->C->A

[17:23] <Corion> castaway: Castorbaway World Tour 2005 ? :)

[17:23] <Corion> castaway: But I think Opodo offers that...

[17:24] <castaway> something simliar

[17:25] <castaway> hmm, www.qixo.com was actually nifty (for normal flights), until it failed to come up with one-way ones

[17:25] <Corion> Does 224/3842 failures sound sane for r1378 ?

[17:26] * Corion commits anyway

[17:27] <Corion> Ooooo - ChatZilla is really nice - I can just click into the topic and edit it in-place!

[17:27] *** Corion changes topic to: pugscode.org <<Overview Journal>> | pugs.kwiki.org | logged: http://xrl.us/e98m | Auto-smoke: http://kungfuftr.com/pugs-smoke.html | win2k:r1378(224/3842) Linux:r1302(193/3383) MacOSX:r1342(189/3478)

[17:27] <Khisanth> old news!

[17:28] <Corion> That's a funky interface :)

[17:28] <Corion> Khisanth: But new to me ;)

[17:28] * Khisanth doesn't use chatzilla

[17:31] <jabbot> pugs - 1379 - Command line parsing fixes

[17:42] <theorbtwo> When you're editing things and want to make sure you don't create new bugs, save around a tests.yml from before, and diff -u with the one after.

[17:45] <Corion> theorbtwo: Aaaah - that's a great idea! I forgot about the tests.yml, thanks!

[17:49] <Khisanth> hrm those numbers are for how many tests are passing?

[17:55] <theorbtwo> The ones in the /topic?  How many are /failing/.

[17:57] <Corion> pass, fail - where is the difference?

[17:58] <theorbtwo> One shows red, the other green?

[17:58] <theorbtwo> It's very christmasy, really...

[17:59] <theorbtwo> Reminds me, somebody wanted to ci updates to testgraph, but didn't?

[17:59] <Corion> Hmmm. Should while(=<>) { ... } work ? Because I get "Fail: <stdin>: hGetLine: end of file"

[17:59] <theorbtwo> Also, kungfuftr, if you're around, you should check in your testgraph.css, it looks quite nice.

[17:59] <theorbtwo> I think you want foreach (), but it should work.

[17:59] <theorbtwo> Er, for.

[17:59] <Khisanth> I mean the ones for the three different platforms

[18:00] <Corion> theorbtwo: Ah, yes :)

[18:00] <theorbtwo> It should parse, though.

[18:00] <theorbtwo> Run, even.

[18:00] <Corion> The error is gone, but it doesn't read anything :)

[18:00] <theorbtwo> It just won't assign the line you read anywhere.

[18:01] <Corion> theorbtwo: Ah - then I'll do a TODO test with that :)

[18:01] <Corion> I've implemented -p and -n then, but I'll make the tests TODO, until for (=<>) is implemented

[18:02] <Khisanth> about =<>, is it suppose to work?

[18:03] <Corion> Khisanth: No, seems like not yet

[18:04] <Khisanth> oh ok, I was just trying autrijus' slides the other day

[18:04] <Corion> Ah - my tests are TODO already anyway :)

[18:05] <Corion> theorbtwo: How do I generate the yml ?

[18:05] * Corion goes looking at the HTML generator

[18:06] <theorbtwo> export HARNESS_PERL=/usr/src/pugs/pugs; perl util/yaml_harness.pl

[18:06] <Corion> theorbtwo: Thanks! :)

[18:06] <Juerd> re

[18:07] <theorbtwo> nothingmuch, did you take a look at my changes to catalog_tests.pl?

[18:07] <theorbtwo> (Note the lack of .jmm.; I rm'd the other one and mv'd the .jmm. in it's place, since the other one was unmaintainted.)

[18:07] <Corion> Eh - I get lots of "Couldn't match line" ... Does that mean it has problems with DOS line endings ?

[18:08] <kungfuftr> theorbtwo: the css is checked in now

[18:09] <Corion> Or are there any prereqs that I don't meet ? Like, Test::Harness version?

[18:09] <kungfuftr> bbiab - hometime

[18:09] <theorbtwo> No, that means poorly written regexes.

[18:09] <theorbtwo> I think.

[18:10] <Corion> theorbtwo: Hmmm - doesn't look like my test output would ever match the regex - it scans for /<pos:/ and I've never seen that in test output

[18:10] <theorbtwo> Oh.

[18:11] <theorbtwo> I was thinking of some place completely different.

[18:11] <Corion> theorbtwo: That's the only place in the source where I see "Couldn't match line" ...

[18:11] * castaway thunk someone sed earlier, that a newish/er Test::Harness wu a requirymento

[18:11] * castaway wonders if irssi has 'search in buffer'

[18:11] <Corion> Ah - I'll upgrade Test::Harness and see what happens

[18:12] * theorbtwo wonders where castaway's spanish kick came from.

[18:12] <Corion> castaway: BTW, I took the plunge and will move my DSL to 1&1

[18:12] <Corion> castaway: So in a few weeks, you'll know if you can safely move over :)

[18:13] <castaway> ;)

[18:13] <castaway> spanish, moi?

[18:13] <Corion> Still the same failures, even though I have Test::Harness v2.46 now

[18:15] <theorbtwo> Hm.

[18:16] <Corion> theorbtwo: I can paste the output, but I'll poke the script a bit (after committing)

[18:16] <crysflame> hi, cwest

[18:16] <cwest> Hi

[18:16] <theorbtwo> Pasting the output would be nice.

[18:16] <crysflame> build issue?

[18:18] <Corion> Will have to wait, as one of my tests still fails in an unexpected way (rather than in an expected way :))

[18:18] <kcwu> castaway: try /lastlog to grep logs

[18:18] <castaway> Meeee?

[18:18] <castaway> wtf?

[18:18] <castaway> oh! in irrsi?

[18:18] <kcwu> yes

[18:18] <castaway> sorry, was miles away already

[18:19] <castaway> hmm, guess isnt in the scrollback anymore.. thanks!

[18:22] <castaway> ooh Corion, cute pop-up calendar on www.travelocity.com, when you click in the date box!

[18:22] <castaway> (and it works in Opera ;)

[18:22] <Corion> castaway: Mine doesn't ?

[18:23] <castaway> I dunno.. just thought you'd be interested ,)

[18:23] <Corion> But yes, it's really cute - I like how it highlights the field you're currently editing

[18:27] <chip> Hi all ... anybody remember whether traits can be specified with <> parameters?  i.e. if there were a "doc" trait, could I say   $x is doc<foo>   to mean   $x is doc('foo')  ?

[18:29] <castaway> indeed, Corion :)

[18:31] <Corion> jabbot, nopaste

[18:31] <jabbot> Corion: Please go on.

[18:31] <jabbot> pugs - 1380 - Small -p and -n changes

[18:31] <Corion> jabbot, nopaste?

[18:31] <jabbot> Corion: nopaste is http://paste.phpfi.com/ or http://nopaste.snit.ch:8001/ or at http://irc.csie.org:8888/

[18:32] <Corion> jabbot, pastebot?

[18:32] <jabbot> Corion: Tell me more about that.

[18:32] <Corion> Hmm - what was the bot that automagically announced the pastes too?

[18:32] <crysflame> nopaste?

[18:32] <crysflame> pastebot?

[18:33] <crysflame> pasteling!

[18:33] <Corion> Aaah ! crysflame ++

[18:33] <theorbtwo> http://sial.org/pbot

[18:34] <theorbtwo> jabbot, nopaste is Use http://sial.org/pbot

[18:34] <jabbot> theorbtwo: 􏿽xA9ҥH􏿽xA1H

[18:34] <theorbtwo> jabbot, patebot is Use http://sial.org/pbot

[18:34] <jabbot> theorbtwo: ok

[18:34] * crysflame blinks

[18:34] <theorbtwo> jabbot, pasteling is Use http://sial.org/pbot

[18:34] <jabbot> theorbtwo: 􏿽xA4F􏿽xB8􏿽xD1

[18:34] <theorbtwo> Somebody told jabbot to use various phrases in big-5.

[18:34] <pasteling> "Corion" at 217.234.123.6 pasted "Output of util/yaml_harness.pl for theorbtwo" (45 lines, 1.6K) at http://sial.org/pbot/8804

[18:34] <cwest> bah

[18:35] <Khisanth> cwest: still compiling ghc? :)

[18:35] <cwest> heh

[18:35] <cwest> nope. make error on pugs actually

[18:36] <pasteling> "cwest" at 216.92.130.109 pasted "pugs, make, macosx 10.3" (6 lines, 470B) at http://sial.org/pbot/8805

[18:36] <cwest> Probably something silly.

[18:40] <theorbtwo> Hm, Corion, does setting things in ENV not work correctly, possibly?

[18:40] <Corion> theorbtwo: Aaah - might be - I'll do it manually and verify that

[18:40] <theorbtwo> Can you set $ENV{TEST_ALWAYS_CALLER}=1, then run a test by-hand?

[18:41] <Corion> Nope - still the same when running the harness.

[18:42] <Corion> ... and the output of a single test is no different than with ! exists $ENV{TEST_ALWAYS_CALLER}

[18:42] <theorbtwo> Hm, odd.

[18:44] <x86> w00t :P

[18:45] * x86 didnt realize there was a dedicated perl6 channel

[18:45] <x86> im gonna go register #perl7 and #perl8 

[18:45] * x86 grins

[18:45] <integral> it's more Pugs than p6

[18:45] <theorbtwo> Is there another p6?

[18:45] <qmole> Pugs is more p6 than p6 :)

[18:45] <x86> hah

[18:53] <kungfuftr> ah... home at last

[18:54] <shapr> Anyone built up-to-the-minute pugs on debian/unstable with the 6.4 debs?

[19:00] <theorbtwo> Yes.

[19:00] <shapr> works fine for you?

[19:00] <theorbtwo> Yep.

[19:00] <shapr> ok, I'm going to check out the svn repo and try it again.

[19:05] <shapr> theorbtwo: Did I do something wrong? "svn checkout pugs && cd pugs && perl Makefile.PL && make -j3"

[19:05] <kungfuftr> shapr: try `make test` by itself

[19:06] <theorbtwo> That looks right to me, shapr.

[19:06] <shapr> theorbtwo: What version do you get from dpkg -s ghc6 ?

[19:08] <shapr> Oh I think I found the problem.

[19:08] <shapr> I'm using ghc6.4 from the haskell-unsafe debian repository.

[19:09] <pasteling> "theorbtwo" at 84.245.186.194 pasted "dpkg -s ghc6" (20 lines, 1.2K) at http://sial.org/pbot/8806

[19:09] <shapr> ok, now I'm really confused.

[19:10] <shapr> theorbtwo: thank you

[19:15] * kungfuftr starts to port File::Path and its dependencies

[19:16] <Corion> Hmmm. File::Find::Rule could be ported. Maybe even as File::Find :)

[19:17] <dada> good nacht

[19:17] <theorbtwo> Goodnight, dada.

[19:17] <kungfuftr> hhhmmm...

[19:27] <Corion> Hmm. What would be the basic building blocks of directory interaction ? opendir / readdir / closedir ? I'd wrap them into an iterator anyway, but Pugs needs these, right?

[19:31] <Corion> Who'd I ask for builtins ?

[19:32] <theorbtwo> p6l.

[19:34] <Corion> theorbtwo: Ah. Yet-another-mailing-list ... I'll wait it out then ;)

[19:41] <jabbot> pugs - 1381 - Added test for unpacking hashes.

[19:43] <Corion> How do I call a subroutine by name in Perl6 ?

[19:44] <PerlJam> Corion: "Hey Foo(), come here!"  ;)

[19:47] <crysflame> heh

[19:47] *** metaperl__ is now known as metaperl_

[20:01] <castaway> PerlJam++

[20:20] <Corion> I currently drift in the direction of making opendir/readdir/closedir become "slurpdir" instead

[20:20] <Corion> (with the same list/scalar semantics as slurp() maybe)

[20:20] <Corion> ... because I've never used rewinddir() myself

[20:21] <stevan> hey Darren_Duncan 

[20:21] <PerlJam> Corion: what's needed is an IO::All-like interface IMHO

[20:21] <Darren_Duncan> hey stevan

[20:22] <PerlJam> The {open,read,close}dir interface can be kept for backward compatibility but be relegated to POSIX or something 

[20:22] <Corion> PerlJam: IO::All is the devils doing. It's convenient for nice hacks, but even less secure than open "|foo; rm -rf /"

[20:23] <Corion> I want a safe open function that will open a file exactly as specified, and not some behind-the-scenes-magic that'll wreak havoc.

[20:23] <Corion> But that's unrelated to the builtin that tells me about the contents of a directory :)

[20:24] <Corion> ... the alternative I'm currently thinking about would be to return a "directory" object, just like open() returns a file object...

[20:24] <Corion> ... but then, you never rewind/seek in the directory object, so the directory object would be a lazy list anyway

[20:25] <PerlJam> Many things turn into lazy lists in perl6

[20:25] <stevan> Corion: I think Apoc16 is going to deal with all that stuff

[20:25] <stevan> (no idea when that will be out though)

[20:26] <Corion> stevan: I was about to ask that resp. make the comment that I'd have learned Haskell by that time :)

[20:26] <PerlJam> Corion: I've heard that IO::All is influencing the design of some perl6 things at the cabal level.

[20:26] <stevan> Corion: you will likely be teaching graduate level courses in Haskell by the time its out :)

[20:27] <Corion> PerlJam: Ah well - if they reintroduce the all-singing, all-dancing open backdoor, so be it. It was a nice time with Perl6, but Perl5 has its merits then.

[20:27] <PerlJam> stevan: not if Larry delegates the work somewhat :)

[20:27] <Corion> open(my $fh, "<", $filename) is almost good. open(my $fh, "| foo") is too powerfull.

[20:27] <stevan> PerlJam: looks like he is starting to do that with s29

[20:28] <Darren_Duncan> anyone know what the "CPAN drinking game" is that Autrijus referred to? ... the name suggests something in my mind, which is take a certain number of drinks when you see something on cpan, but I haven't found anything on google to back it up

[20:28] <Corion> IO::All can be hacked in afterwards, just like it was done in Perl5

[20:28] <Corion> Darren_Duncan: I think it involves alcohol

[20:28] <stevan> Corion: would you prefer a all_hell_breaks_loose() builtin then?

[20:28] <Darren_Duncan> yes, all drinking games do

[20:28] <Corion> stevan: That's called eval ""

[20:29] <stevan> Corion++

[20:29] <Darren_Duncan> you take a small drink when encountering something frequent, and many when something rare

[20:29] <Darren_Duncan> the rules are usually made up to make fun of something

[20:29] <stevan> Darren_Duncan: post a comment, ask him what it is

[20:29] <Darren_Duncan> ok

[20:29] <Darren_Duncan> in any event, he said he won it

[20:30] <stevan> Darren_Duncan: "wining" a drinking game is open to interpretation 

[20:31] <Darren_Duncan> yes, its all a big joke really

[20:31] <theorbtwo> I think you win if you're the last one concious.

[20:31] <Darren_Duncan> yes

[20:32] <stevan> Darren_Duncan: if you come to YAPC::NA I am sure we can get another game going

[20:32] <Darren_Duncan> mainly, I wondered what the list of conditions was for this particular game, if it were written up already

[20:32] <metaperl> Darren_Duncan, did you write Rosetta?

[20:32] <Darren_Duncan> metaperl, yes

[20:32] <Darren_Duncan> if you mean the database library

[20:32] <stevan> theorbtwo: did you get any more info about YAPC::NA accomidations

[20:32] <metaperl> what a huge piece of software!

[20:33] <Darren_Duncan> yep, 2 years in the making and it still can't do more than open and close a connection end-to-end

[20:33] <theorbtwo> Stevan, haven't asked.

[20:33] <metaperl> you seem to have a lot of obligations for your code to be database and web-server independant

[20:33] <Darren_Duncan> I like to design for the long term

[20:34] <metaperl> you're Canadian right?

[20:35] *** metaperl__ is now known as metaperl_

[20:35] <Darren_Duncan> I am, yes

[20:36] <stevan> Darren_Duncan: I read that first as "I like to design for a long time" :)

[20:36] <Darren_Duncan> did you hear me say it here?

[20:36] <Darren_Duncan> that is a side effect

[20:36] <metaperl> CGI-MultiValuedHash is pretty fresh

[20:37] <Darren_Duncan> my first 5-8 releases of Rosetta, in 2003, had no code, just documentation

[20:38] <Darren_Duncan> what does 'fresh' mean in this context?

[20:38] <Darren_Duncan> do you mean 'it is different' or it was recently updated?

[20:38] <metaperl> fresh means nifty and well-worth knowing about

[20:38] <metaperl> in this case

[20:39] <metaperl> it is a valuable contribution

[20:39] <stevan> metaperl is getting all hip-hop on the canadian :P

[20:39] <metaperl> :)

[20:40] <Darren_Duncan> a short description of the way I work is "over-engineered"

[20:40] <stevan> over-engineering++ # me too

[20:40] <Darren_Duncan> it takes a long time to get anything functional, but once it is, it should last a long time and be very adaptable

[20:40] * stevan queues some Grandmaster Flash and the Furious Five for Darren_Duncan 

[20:40] <Darren_Duncan> that's my goal, to make stuff that is very useful

[20:42] <Darren_Duncan> I see the whole Perl 6 / Parrot scene as being similar ... slow to become useful, but when it is, watch out!

[20:42] <metaperl> lol@stevan

[20:43] <stevan> Darren_Duncan: re: perl6/parrot, I agree, it will keep me from moving to (Ruby | Python | Java)

[20:43] <Darren_Duncan> my saying 'slow' meant the process was started about 5 years ago, but only just now starting to be able to run perl 6

[20:43] <Darren_Duncan> however, I consider it worth it for the quality of what is coming out

[20:43] <metaperl> you left out C++

[20:43] <stevan> metaperl: yuk!!! never 

[20:43] <Darren_Duncan> I agree

[20:43] <Darren_Duncan> C++ is a has-been

[20:43] <metaperl> Andrew J. Bromage likes C++

[20:43] <shapr> But he likes Haskell better =)

[20:44] <metaperl> there is a book on generic programming in C++

[20:44] <stevan> metaperl: who is Andrew J?

[20:44] <kungfuftr> work++ # yay! unlimited safari account

[20:44] <Darren_Duncan> away from comp for 10 mins ...

[20:44] <metaperl> Java lacks generics .... AJB was a former Perl programmer...

[20:44] <stevan> metaperl: I think Java is going to get generics soon

[20:44] <metaperl> he won paper of the year at TPC2 for a CGI-based kiosk system

[20:44] <stevan> C# 2.0 is getting them too

[20:45] <stevan> personally I like Ada style generics more than more type-based generics of C++, etc.

[20:46] <metaperl> stevan are you on the extremeperl mailing list?

[20:46] <metaperl> we are kicking up some serious dust on that list

[20:46] <stevan> metaperl: i dont think so

[20:47] <metaperl> you should join

[20:47] <shapr> It's fun.

[20:47] <metaperl> www.extremeperl.org

[20:51] <stevan> metaperl: who is running the list?

[20:51] <metaperl> I suppose Rob Nagler

[20:57] <stevan> joined

[21:04] <Darren_Duncan> ... back again

[21:08] <Darren_Duncan> I had a quick look at the extremeperl group too ... 4 years its been around and 1/3 of the traffic was in just this month

[21:10] <Darren_Duncan> anyway, since the list is normally low traffic, I signed to it also

[21:10] <shapr> What do you guys think? Can you learn the lessons of Haskell without using Haskell? Can Perl alone teach you what there is to know about Haskell?

[21:11] <Corion> shapr: No

[21:11] <Darren_Duncan> what are the lessens of Haskell

[21:11] <stevan> shapr: no

[21:11] <theorbtwo> Perhaps /you/ can, but /I/ certianly can't.

[21:11] <stevan> shapr: however I think you can learn about Haskell and then apply that back to perl

[21:11] <Corion> shapr: At least the types are something quite foreign to Perl, and the Monads as well

[21:11] <shapr> Yes, I think so too.

[21:12] <shapr> The Pugs people have changed my opinion about Perlers in general.

[21:12] <shapr> For the better =)

[21:12] <Darren_Duncan> I don't consider myself an XP programmer, but I do constantly refactor my code

[21:12] <stevan> shapr: I learned alot of ML, and later applied the knowledge to perl (because I have any ML work)

[21:12] <theorbtwo> shapr, you're a lambadite?

[21:13] <shapr> I'm not much of Perl user. I used it for two weeks once in ... 1999?

[21:13] <stevan> theorbtwo: he also like *shhhhh* python

[21:13] <shapr> Actually, in the last month, my opinion of Python has gone down much, and my opinion of Perl has gone up much.

[21:13] <Odin-> Perl6 is something of a perl-lisp hybrid freak. :/

[21:13] <Corion> shapr: Why has your opinion of Python gone down?

[21:14] <Odin-> (I mean that in a kinda-good way, though.)

[21:14] <theorbtwo> Oh, perl6 gets a lot more freakish then that.

[21:14] <shapr> Because the man who designed Python, Guido van Rossum, thinks that all the Function Programming features of Python should be ripped out.

[21:14] <Odin-> theorbtwo: Yeah, but I think that's a good description. ;)

[21:14] <Corion> You can only appreciate (the features of) Lisp after you've reached a certain level of programming complexity

[21:15] <theorbtwo> Yeah, Guido is very much of the There is Only One Way To Do It school of thought.

[21:15] <stevan> shapr: lambda in Python is not so good, it could use reworking

[21:15] <Corion> shapr: That's my impression too - I'm still programming in Python 1.6 and 2.2.

[21:15] <theorbtwo> It has it's advantages, but it's not for me.

[21:15] <shapr> I prefer multi-paradigm languages, I've considered Python to be one up to this point. If the FP features are removed, I think it will hurt the language as a whole.

[21:15] <Corion> shapr: My feeling is that Guido is ripping it all out to sacrifice it for speed.

[21:15] <shapr> stevan: I totally agree. I think the FP features in Python should be fixed, not removed.

[21:15] <stevan> python list compressions are nice though (at least they were when I looked at them a while back)

[21:15] <ninereasons> I like how much admiration of other languages has gone into the design of perl6

[21:16] <shapr> stevan: they came from Haskell =)

[21:16] <stevan> shapr: yup :)

[21:16] <shapr> ninereasons: yes, me too.

[21:16] <shapr> The famous "What I don't like about Advocacy" perl post says something about that.

[21:16] <x86> im gonna build my own perl6 implementation and call it rotts

[21:16] * x86 chuckles

[21:17] <jdv79> admiration?  interesting word to use.

[21:17] <ninereasons> "envy" is the word that was used during design

[21:18] <ninereasons> admiration is a nicer word, and I think truer to the ... sentiment :-)

[21:21] <shapr> I mentioned in some of the Python related IRC channels that I was unhappy about FP features being removed from Py3K, and most pythonistas said they didn't like the features anyway. Personally, I think that's because the FP stuff in Python doesn't work so well.

[21:21] <stevan> shapr: lambda is just ackward to use especially without proper closures 

[21:22] <jdv79> you don't think its just because most developers are used to OO these days?

[21:22] <Corion> shapr: lambda is unwieldly, but that's no reason to remove it - it should be made _more_ usable instead. But Guido has lost much with me since he introduced types into Python and reduced the flexibility of objects

[21:22] <shapr> Yeah, it is. But the FP features of Python got me started doing FP, and that got me into Haskell.

[21:23] <shapr> jdv79: It might be, I don't know.

[21:23] <Khisanth> shapr: wouldn't python being multi paradigm be at odds with "there can be only one way to do it"? :)

[21:23] <jdv79> we hired two new programmers for our very small team at work and all they know is OO

[21:23] <shapr> I do think the monadic abstraction is lot like the object abstraction, but instead of separate objects stuck to each other, you have a conveyor belt.

[21:24] <jdv79> well, its what they are proficient in at least

[21:24] <Corion> jdv79: Then maybe you hired the wrong programmers ? :)

[21:24] <jdv79> could be

[21:24] <stevan> jdv79: is all they know OO, or Java?

[21:24] <jdv79> stevan, :)

[21:24] <Corion> ... if you work in a SmallTalk shop, you better know OO :)

[21:25] <jdv79> talk about hitting the nail right on the head! 

[21:25] <stevan> I have meet many a OO programmer who really just knows how to write bad Java, and knows little of what OO really is

[21:25] <jdv79> one does seem to understand OO pretty well whereas the other seems to be a "Java coder"

[21:26] <stevan> java is becoming the language of choice at several schools, which is a bad thing IMO

[21:26] * shapr agrees

[21:26] <stevan> not that Java is bad (its ugly at times, and really nice at times)

[21:26] <stevan> but I think it boxes you into a bad thought pattern

[21:26] <jdv79> C and C++ was used where i went to school

[21:27] <shapr> COBOL and 360 asm where I went to school =)

[21:27] * stevan went to art school, mostly I used oils, and some watercolors :)

[21:27] <shapr> Not that I ever got into the CS program.

[21:27] <shapr> hiya lightstep 

[21:27] <stevan> personally I like JCL, now those were the days :P

[21:28] * shapr grins

[21:28] <lightstep> good evening

[21:28] <shapr> stevan: I predict you are older than thirty years of age.

[21:28] <stevan> shapr: LOL, 31 to be exact :)

[21:29] <stevan> shapr: I am a programming language fetishist

[21:29] <lightstep> does make also make Makefile ?

[21:29] <shapr> oh me too!

[21:29] <shapr> lightstep: perl Makefile.PL

[21:29] <stevan> I have a really nice SNOBOL book on my bookshelf, right next to the IBM 360 ASM book

[21:30] <Corion> Ah, so this is #over-30 on freenode :)

[21:30] <Corion> ... except for autrijus, who is here to make us feel younger

[21:30] <stevan> shapr: I have 3 kids though, which make me feel older than I am sometimes :)

[21:30] <shapr> I'm over 30!

[21:30] <shapr> but I have no kids.

[21:30] <lightstep> i think it's hard to get to contrinuting to a perl6 implementation effort in haskell is you're not a programming language fetishist

[21:30] <Khisanth> kids make you age faster? :)

[21:30] <stevan> shapr: my personal favorite esoteric language is Lucid, ever hear of it?

[21:31] <shapr> Yup, dataflow language.

[21:31] <stevan> lightstep++

[21:31] <shapr> You'd like Haskell's Yampa.

[21:31] <shapr> And you'd like Arrows too.

[21:31] <stevan> Khisanth: re: kids, they make you have to "act" older 

[21:31] <shapr> My favorite esoteric language of the moment is Epigram, heard of it?

[21:32] <Khisanth> stevan: I was thinking of the stress

[21:32] <lightstep> linux is on darcs but pugs is on svn? howcomes?

[21:32] <Darren_Duncan> if you're going talking about ages, I'm 27 and single

[21:32] <stevan> shapr: no

[21:33] <Corion> single and kids are orthogonal :)

[21:33] <Darren_Duncan> I do have younger siblings, however, and lots of friends have young children, so I'm still around them all the time

[21:33] <Corion> lightstep: I thought Linux was using BitKeeper?

[21:33] <stevan> Khisanth: its actually not so stressful, but my friday nights are a lot duller since kids 

[21:33] <Darren_Duncan> no children of my own, to clarify

[21:34] <stevan> Darren_Duncan: that you know of ;)

[21:34] <lightstep> Corion, it was #haskell's first april's fool joke

[21:34] <Corion> lightstep: Aaah :)

[21:34] <Darren_Duncan> stevan, unless someone stole my blood and mixed up a batch, definitely there are none

[21:35] <Darren_Duncan> I'm not one of those people who sleeps around

[21:36] <Corion> anyway - have a nice next 8 hours :)

[21:36] <stevan> shapr: "Epigram is a dependently typed functional programming language" interesting ...

[21:36] <Corion> (type inference)++

[21:36] <Darren_Duncan> so here's a question ...

[21:36] <shapr> stevan: You can describe code behaviour in the type system. It's wild.

[21:36] <Darren_Duncan> If I make my big announcement about major code release tomorrow (SRT/Rosetta) Developer release #2, will people take it seriously?

[21:37] <shapr> I doubt it.

[21:37] <Darren_Duncan> does April Fools intrude on cpan?

[21:37] <Corion> Darren_Duncan: Make it interesting, but keep it vague enough so that people keep wondering if it's for real or a joke :)

[21:37] <Corion> Darren_Duncan: Sure

[21:37] <Corion> Darren_Duncan: Don't release Acme::Rosetta and expect it to be taken seriously :)

[21:37] <Darren_Duncan> I don't make Acme modules

[21:37] <lightstep> netscape went open source on april first

[21:38] <Corion> lightstep: And Parrot was conceived as an April Fools joke too

[21:38] <Darren_Duncan> also, the rumors say Apple will anounce Tiger's release on april 1st

[21:38] <Corion> I also heard that the next release will be called Pooh, after the success of tigger

[21:38] <Darren_Duncan> yes, the origin of Parrot is a classic

[21:39] <Darren_Duncan> maybe in 5 years, after they run out of cat names, and express unhappiness about the situation

[21:40] <shapr> Fuzzbutt, MacOS MCMLXXXVIII

[21:45] <Darren_Duncan> Corion, if I remember, I will make sure to keep my announcement vague, although that is the opposite of what I normally do so it may stand out

[21:46] <Darren_Duncan> maybe if I make some outlandish claims, that'll do it

[21:52] <Khisanth> no that would make it too fake :)

[21:53] <Darren_Duncan> I know ... and this is the best yet ...

[21:54] <Darren_Duncan> I'll just do it exactly the same way I would if it were some other day!

[22:05] <jdv79> i thought you didn't hang at rutgers any longer

[22:26] *** beth__ is now known as beth

[22:44] <lightstep> @seen

[22:44] <lightstep> jabbot, seen nothingmuch

[22:44] <jabbot> lightstep: nothingmuch was seen on Thu Mar 31 22:02:39 2005

[22:45] <lightstep> jabbot, seen lightstep

[22:45] <jabbot> lightstep: lightstep was seen on Fri Apr  1 06:44:56 2005

[22:55] <lightstep> shapr, pugs/src/Posix.hs is the module

[22:55] <shapr> So why the heck can't make find it?

[22:56] <shapr> it has -i. -isrc

[22:57] <lightstep> wrong window

[22:58] <shapr> Isn't make the correct command?

[22:58] <lightstep> if MakeMaker creates incompatible make, that might be a problem. i have GNU Make 3.80

[22:59] <shapr> same here, 3.80-9

[23:03] <shapr> Maybe my system is just totally broken?

[23:04] <lightstep> maybe

[23:04] <lightstep> Maybe Broken = Nothing | Just Broken

[23:05] <lightstep> omg, summer just hit (making it 2am instead of 1am)

[23:06] <Limbic_Region> US has another week to wait

[23:07] <theorbtw1> Another week?  I thought just a few days...

[23:07] <Limbic_Region> oh - did everyone read autrijus's journal entry indicating that there was a good chance he might be living with Leo for a couple weeks

[23:07] * Limbic_Region lost track of time 

[23:07] <Limbic_Region> yes - this weekend

[23:07] <Limbic_Region> for those who aren't familiar with Leo's code churning output capabilities - they rival autrijus

[23:08] <Limbic_Region> that should be some fun and exciting times

[23:08] <shapr> Wow

[23:08] <shapr> I look forward to that. With some trepidation, but mostly excitement.

[23:11] * crysflame blinks

[23:11] <crysflame> oh, wow

[23:11] <crysflame> that should be awesome

[23:11] <crysflame> go autrijus 

[23:15] <Khisanth> Limbic_Region: that would probably be a strange time to be visiting Leo then :)

[23:17] <shapr> yay!

[23:17] <shapr> I can build pugs!

[23:21] *** theorbtw1 is now known as theorbtwo

