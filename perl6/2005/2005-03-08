[00:08] <metaperl_> I got the Algorithms book by Rabhi and Lapalme

[00:24] <metaperl_> hi cls_bsd

[00:24] <metaperl_> do you work for autrijus' company also?

[00:40] <ingy> mauke: can you help me once more?

[00:43] <pasteling> "ingy" at 24.19.10.51 pasted "can someone look at this? I can't get it to compile." (23 lines, 685B) at http://sial.org/pbot/7959

[01:07] <hoowa> hihi

[01:08] <hoowa> sleeping?

[01:16] <hoowa> hihi i want to rewrite module in perl6. does pugs support all perl6 syntax?

[01:16] <rooneg> nothing supports all perl6 syntax yet ;-)

[01:17] *** khisanth_ is now known as Khisanth

[01:17] <hoowa> ???

[01:17] <hoowa> poke 

[01:17] <stevan> hoowa: pugs is not done yet :)

[01:17] <stevan> hoowa: it is missing some very important features still

[01:17] <hoowa> supports how much?

[01:18] <stevan> hoowa: whats your module?

[01:18] <hoowa> in pate

[01:19] <hoowa> my pate

[01:19] <stevan> is it on CPAN?

[01:20] <hoowa> not i forgot my password on cpan.  i want to rewrite other module ini read ? md5 ? crypt::blowfish ? ......

[01:21] <hoowa> i like crypt::blowfish, that one pureperl5 named crypt::blowfish_pp

[01:22] <stevan> hoowa: Pugs is still in the early-alpha stage, it will not have enough features

[01:22] <stevan> hoowa: but you can write help tests

[01:22] <stevan> hoowa: or write some example code

[01:23] <hoowa> example code ? about "helll world"?

[01:25] <stevan> have you downloaded Pugs yet?

[01:26] <hoowa> yes. but not installed.

[01:27] <stevan> look in the examples directory

[01:27] <stevan> there are some working examples in there

[01:28] <hoowa> ok thank u.

[01:41] * ingy is having minor monadic success :D

[01:43] <rooneg> anyone else seeing this error?  src/Main.hs:159: Variable not in scope: `config_file_sep'

[01:44] <scw> rooneg: make clean; perl Makefile.PL; make

[01:44] <scw> rooneg: I met it five minutes ago :p

[01:44] <ingy> scw++

[01:45] <ingy> make purge is better

[01:45] <ingy> btw

[01:45] <rooneg> weird.  i had tried 'perl Makefile.PL; make', but hadn't done the make clean.  i wonder why that mattered...

[01:45] <ingy> rooneg: it thought your Makefile was up to date

[01:45] * rooneg hates make

[01:46] <ingy> make is your friend

[01:46] <rooneg> except when it's not ;-)

[01:46] <ingy> just get in the habit of:

[01:46] <rooneg> didn't you just spend like a day fighting with makemaker?  i'd think you'd be more in the 'make can take a flying leap' club at this point ;-)

[01:46] <ingy> svn up; make purge; perl Makefile.PL; make test

[01:47] <ingy> I like make more than MakeMaker

[01:47] <rooneg> yeah, well, that's not saying much...

[01:48] <ingy> make is actually very nice for what it does

[01:50] <lumi> ?? Regression? 

[02:17] <Darren_Duncan> I've got a Perl 6 language question that I haven't seen the answer to in the Synopsis ...

[02:19] <Darren_Duncan> If a subroutine variable is required (not optional), does Perl prevent passing of undefined values to it, or does it only require that any kind of value or variable is passed to it?

[02:23] <Khisanth> I certainly hope you are ...

[02:23] <Khisanth> unless undef stops being a valid value

[02:24] <Darren_Duncan> s/variable/argument/ - what I meant to say

[02:25] <Darren_Duncan> so it is valid for a required argument to be given the undefined value?

[02:26] <buu> Darren_Duncan: At a guess: yes.

[02:27] <buu> I think it just checks for *numbers* of arguments.

[02:27] <Darren_Duncan> right then, I'll continue to test for undefined input values as I did in Perl 5

[02:27] <Darren_Duncan> thanks

[02:27] <buu> You could probably get away with something like

[02:27] <buu> sub foo( $x is not undef ); or something

[02:27] <Darren_Duncan> if that works, great

[02:28] <buu> Not sure really.

[02:28] <Darren_Duncan> of course, I still have to test array elements if they all must be defined too

[02:28] <Darren_Duncan> I'll do the explicit tests for now

[02:49] <Steve_p> Hide?

[02:49] <Steve_p> crap, hide?

[02:53] <joejiang_> hello fayland

[02:54] <joejiang_> we have a channel at #perlchina at this server 

[02:54] <joejiang_> welcome to join us 

[04:19] <autrijus> greetings.

[04:19] <autrijus> is the 6.4 bug still there?

[04:19] <autrijus> mm shapr is away

[04:19] <seano> 6.4 bug?

[04:19] <autrijus> conflicting export of getEnvironment on GHC 6.4 on POSIX

[04:20] <seano> import foo hiding (getEnvironment)

[04:20] <autrijus> sure.

[04:20] <autrijus> attempting a fix now

[04:20] <seano> man, handling of my is incredibly wonky now...

[04:21] <autrijus> it is!

[04:21] <autrijus> I really need to sit down and get eval-during-parse implemented

[04:21] <autrijus> shapr: darcs and svn.perl.org are both synced per minute

[04:21] <seano> My guess is that it really should be a macro that can take either a '$var' or a '($list_of_vars,...)', and produce a lexicalization of those names, plus a list for future assignment.

[04:22] <autrijus> shapr: I attempted a fix; see if you can get it running

[04:22] <seano> Also LHS ternary broken :(.

[04:22] <autrijus> yup, I think so too. can you write a AST for my()?

[04:23] <autrijus> (or did P6C.pm already do that?)

[04:23] <seano> That was a real eye-opener into how weird Perl5 is for me.  i.e. '($x ? $y : @z) = @w' correctly propagates context.

[04:24] <seano> autrijus: I'll look at it, but it will take me a bit of time to understand how that code works, i.e. constructing a list-lvalue.

[04:24] <seano> autrijus: and no, didn't do that.  There was a hack to get both "my ($x)" and "my $x" to DTRT with respect to context, but nothing systematic.

[04:25] * autrijus purrs.

[04:25] <autrijus> bbiab

[04:25] <seano> What I really want to see is "my" completely separated from assignment, so you can then have some sort of kick-ass destructuring assignment like my ($x, ($y, $z, @ws)) = [1,[2..5]]

[04:31] <seano> autrijus: why are "constructs" separated from "declarations", rather than all gathered as "statements"?

[04:34] <autrijus> I thought the magic that does binding is not my but :=-^H

[04:34] <autrijus> seano: I don't know, I merely followed pmichaud and luqui's naming convention

[04:35] <autrijus> it's just names tho.

[04:35] <autrijus> not really reflected on the AST level

[04:35] <autrijus> the AST level is just Syn and App.

[04:35] <mugwump> 71 nicks!

[04:35] <autrijus> where Syn means special forms.

[04:35] <autrijus> hi mugwump!

[04:35] <autrijus> when are you arriving?

[04:35] <mugwump> oh... I've got it right here

[04:36] <autrijus> thomasyeh++ # pugs works on AIX

[04:36] <mugwump> hmm, 21:50 on 23 Mar

[04:36] <autrijus> good. now I can really deploy it to $real_work.

[04:36] <seano> autrijus: re decl/construct -- fair enough.  re bind/assign -- it seems like they should always be the same in terms of how they tear apart the RHS.

[04:36] <autrijus> that is something I don't know about.

[04:36] <autrijus> I know := does the unpacking the same way as sub params

[04:36] <autrijus> I have no idea what = does.

[04:37] <autrijus> is it specced somewhere?

[04:37] <seano> on AIX?  Poor pugs...

[04:37] <autrijus> mugwump: cool. that's taipei time?

[04:37] <seano> no -- I meant 

[04:37] <seano> no -- I meant "should" in the "ought" sense.  It would just be painful for them to act differently.

[04:37] <autrijus> so it's just like := but destructive?

[04:38] <mugwump> yes, taipei time.  I'll drop an e-mail too

[04:38] <seano> Just like := but non-aliasing, i.e. updates to the lhs vars don't update parts of the rhs construct.  But I could be completely on crack.

[04:38] <autrijus> my $a = (1,2,3);

[04:38] <seano> note it's been >~ 1yr since I've read through the apocageses.

[04:38] <autrijus> my $a := (1,2,3);

[04:38] <autrijus> and it's synopses now :)

[04:39] <seano> that one actually bites me, because I expect "@x=1..3;$x=@x;$x" to return 3.  Man, I feel obsolete.

[04:40] <Khisanth> 3? but $x is a reference ...

[04:40] <seano> yeah, but not in P5!

[04:40] * Khisanth notes this is extremely confusing :)

[04:40] * seano is too confused to notice....

[04:40] <Khisanth> hmm ghc actually requires perl5

[04:41] <Khisanth> seems quite "circular"

[04:41] <autrijus> yup. so it's bootstrapping in a roundabout way.

[04:41] <seano> haha.  I get a kick out of how the functional-lang folks who tend to dump on Perl still use to glue GHC together

[04:42] <seano> Don't get me wrong, Haskell's a treat, but the whole "we're so pure, you can't insert a print statement" thing can get tiresome (and yes, I know the GHC extensions get around this).

[04:42] <Khisanth> by Perl can be functional too

[04:42] <Khisanth> oops s/by/but/

[04:42] <seano> and sysfunctional!

[04:42] <seano> s/sys/dys/

[04:42] * tmoertel` thinks a lot of fp folks *like* Perl

[04:43] * seano has yet to see them admit it.

[04:44] <scw> odd... eval 'my %z = 0, 10000; %z{0}++' makes pugs stop.

[04:44] <seano> autrijus: re decl/construct, I guess my point is that they should all be "macro ...", with the macro controlling how the rest is parsed.  Kinda like Lisp.

[04:44] * Khisanth still has to get a copy of HOP

[04:44] <scw> instead of return something like undef.

[04:45] <seano> scw: hashes can't be named 'z'

[04:45] <Khisanth> I hope you are kidding

[04:45] * seano should have added a smiley or something, I suppose...

[04:45] <Khisanth> seano: with all the changes to perl6 that actually sounded believable!

[04:45] <scw> eval 'my %hash = 0, 10000; %hash{0}++'

[04:46] <autrijus> seano: I completely agree.

[04:46] <autrijus> I also think the macro bit is not specced at all.

[04:46] <scw> leads the same result..

[04:46] <autrijus> if you can help getting that done, great; I think I'll punt till 6.28318

[04:47] <Darren_Duncan> I just got back ... now reviewing last 36 minutes of log ...

[04:47] <jesse_> autrijus: what are you deploying pugs for in production?

[04:47] <autrijus> jesse_: as a scripting language for OpenAFP.hs and PDF::FromHTML

[04:47] <autrijus> jesse_: basically a reasonably complex DB2->AFP->PDF distribution engine that is powered by several REST web services.

[04:48] <jesse_> Wow. fearsome

[04:48] <autrijus> and it's all on AIX ;)

[04:48] <seano> autrijus: help get the macro part done?  hahaha!  That's some major hair.  I guess I'd start by getting '$param is Expr' and 'is parsed ...' to work, then replace my, for, etc. by P6 subs.

[04:48] *** jesse_ is now known as obra

[04:48] <obra> yeah, I'm truly afraid

[04:48] <autrijus> seano: that sounds good, and much more practical :)

[04:49] <autrijus> but it's not as fearsome as what Dan did with parrot

[04:49] <obra> hah

[04:49] <autrijus> and its register-spilling monstrosity

[04:49] <obra> Pugs NCI

[04:49] <seano> The next two weeks will probably be a bit crazy for me with grading etc. for finals, but hopefully I'll have quality P6 time during spring break.

[04:49] <autrijus> woot woot.

[04:49] <autrijus> seano++ # in advance

[04:49] <Darren_Duncan> FYI, I'm mostly finished writing my Perl 6 LKT now; still have a few things to figure out ...

[04:49] <seano> autrijus: no fair playing the expectations game ;).

[04:49] <autrijus> Darren_Duncan: wonderful

[04:50] <Darren_Duncan> for example, with multi-dimensional structures, when an assignment copies just a reference, or the whole array

[04:50] <seano> well..., I'm more or less comfortable with/resigned to the register part, but objects, mmd, etc. are just scary.

[04:50] <autrijus> seano: let me up the ante and send you an invitation mail to become a committer

[04:51] <seano> autrijus: thanks, but I'd like to at least be comfortable enough with the code to not auto-kick my own ass before doing that.

[04:51] <autrijus> Darren_Duncan: I think the idea is "you can't easily tell the difference."

[04:51] <Darren_Duncan> sure but ...

[04:51] <Darren_Duncan> it would be nice to know when, if I modified a value passed in as an argument, whether the caller's context changes

[04:51] <Darren_Duncan> I know that the base arguments are copied

[04:52] <seano> One of the pains of 'is parsed' is that it requires fixing of the internal P6 grammar production names, and hence the structure of the grammar, since user programs will embed them.

[04:52] <autrijus> *nod*. paste some example code?

[04:52] <seano> I'm not sure I have a good enough idea what Larry's idea of the language is to do such a thing.

[04:52] <autrijus> or nopaste, really; or post on p6c :)

[04:52] <seano> brb

[04:53] <Darren_Duncan> I'm looking for relevant portions in the Synopsis, currently I'm reviewing "Data Types" in #2 to get a different question answered re sigils

[04:55] <autrijus> greetings flw.

[04:55] <Darren_Duncan> FYI, if you want to see the current state of the module, look under http://darrenduncan.net/p6c/KeyedText.pm

[04:55] <Darren_Duncan> Ignore the SYNOPSIS, which isn't translated yet

[04:56] <autrijus> cool!

[04:56] <autrijus> "under the same terms

[04:56] <autrijus> as Perl 6 itself."

[04:56] <autrijus> except there is no such a term :D

[04:56] <autrijus> (j/k)

[04:56] <Darren_Duncan> for contrast, add a '5' before the .pm to see the Perl 5 version

[04:57] <autrijus> ok

[04:57] <mugwump> Do laywers care about chronological consistency?

[04:57] <autrijus> probably not.

[04:57] <autrijus> hmm

[04:57] <autrijus> $message.msg_key~': '~

[04:57] <buu> Release under perl5 terms =/

[04:57] <Darren_Duncan> FYI, I started to consider using kwid, but then forgot where the detailed docs were

[04:57] <buu> Darren_Duncan: Flee from the horror that is kwid!

[04:57] <Darren_Duncan> sure

[04:57] <autrijus> "{ $message.msg_key }: { join(',', ...) }"

[04:58] <Darren_Duncan> I haven't worked out the replacement for join and map etc yet, if any

[04:58] <autrijus> it's just join and map.

[04:58] <Darren_Duncan> same old then

[04:58] <Darren_Duncan> here's one ...

[04:59] <Darren_Duncan>  what's the proper way to know if a module or class has been loaded already?

[04:59] <Darren_Duncan> I'll explain why I want to know

[04:59] <Darren_Duncan> its re translate_message()

[04:59] <autrijus> Darren_Duncan: it's doc/perlkwid.kwid at this moment, btw

[05:00] <autrijus> well, defined() maybe? not sure

[05:00] * obra watches #perl not get it

[05:00] <autrijus> ask on p6l? :)

[05:00] <Darren_Duncan> does p6l have a chat room, or do I use the mailing list?

[05:01] <Darren_Duncan> FYI, I plan to translate as much as I can without asking too many questions, then commit fixes later when I get them answered

[05:01] <autrijus> p6l has a chatroom, and that is here.

[05:01] <autrijus> but the mailing list is canonical :)

[05:01] <Darren_Duncan> sure enough

[05:01] <Darren_Duncan> at least here, answers can be fast

[05:02] <autrijus> yup. basically we formulate questions in an appropriate form

[05:02] <Darren_Duncan> just answer the following if you know them without having to look up ...

[05:02] <Darren_Duncan> 1. what's the p6 version of UNIVERSAL::isa ?

[05:02] <autrijus> and made sure it's not one of the FAQs

[05:02] <autrijus> then throw them to p6l for larry & co :)

[05:02] <Darren_Duncan> ... actually, nevermind

[05:02] <autrijus> it is .isa

[05:02] <autrijus> $foo.isa

[05:02] <autrijus> is always okay

[05:02] <autrijus> unlike perl5.

[05:03] <Darren_Duncan> my explicit parameter list requires the argument is of said class, no need to test

[05:03] <Darren_Duncan> here's a different one I asked before you signed on ...

[05:04] <Darren_Duncan> if a sub argument is mandatory, then does that prevent undefined values, or just that the caller gives any kind of argument?

[05:04] <Darren_Duncan> In Perl 5, an undefined arg is the same as no arg

[05:04] <Darren_Duncan> currently I assume that undefined values are valid and test for defined()

[05:04] <autrijus> undef() ?

[05:05] <autrijus> sure, undef is a proper arg.

[05:05] <Darren_Duncan> ok

[05:07] <Darren_Duncan> FYI, the only reason a few of my code lines are commented out is because the new // operator causes messed up syntax coloring on my text editor; they are actually valid code lines

[05:07] <Darren_Duncan> I'll uncomment before commit

[05:07] <autrijus> your text editor being vim?

[05:07] <Darren_Duncan> nothing so geeky - its BBEdit

[05:07] <Darren_Duncan> currently set to display Perl colors

[05:08] <Darren_Duncan> Interestingly enough, it colors the word 'method' blue; I didn't realize that word was valid in Perl 5

[05:08] <seano> Darren_Duncan: dude, Emacs runs on OS X.  Why wait?

[05:08] <buu> Because emacs sux!

[05:08] <Darren_Duncan> the coloring issue was a minor thing, and I *like* BBEdit

[05:08] * seano contemplates war...

[05:08] <Darren_Duncan> BBEdit is one of the best text editors there is, except for not being fully programmable, which I don't care about

[05:09] <Darren_Duncan> very powerful multi-file search and replace features for one thing

[05:09] <seano> Darren_Duncan: Having imbibed emacs first, I always found it was almost configurable enough for me to make it into Emacs ;).

[05:09] * autrijus contemplates eclipse :)

[05:09] <Darren_Duncan> I'm sure the colorer will be updated for Perl 6 soon enough

[05:09] * seano notes that he will have plenty of time to do so as it starts up.

[05:10] <Darren_Duncan> The editor is also fully Unicode aware

[05:10] <autrijus> well it starts up in 2 seconds here... same as emacs :)

[05:10] <Darren_Duncan> I'm saving all my files in UTF-8 format, in fact

[05:10] <autrijus> Darren_Duncan++ # The Way To Go

[05:10] <seano> Darren_Duncan: re multi-file -- true.  I wish M-x occur worked across files...

[05:10] * autrijus stresses again that Pugs will not grok latin1 << >> or Y.

[05:10] <Darren_Duncan> not just multi-file, but multi-file with regexes

[05:10] <seano> Darren_Duncan: people who use more than 127 characters piss me off...

[05:10] <buu> autrijus: Why not?

[05:11] <autrijus> buu: because it's ambiguous.

[05:11] <autrijus> utf8 << may either be a latin1 << prefixed with \xC2

[05:11] <Darren_Duncan> Perl 6 is supposed to be natively Unicode anyway

[05:11] <autrijus> or parsed as utf8.

[05:11] <buu> oh

[05:11] <Darren_Duncan> but meanwhile I "use utf8" in my current Perl 5 stuff

[05:12] <Darren_Duncan> higher characters only show up in my example French characters that have accents, though

[05:12] <Darren_Duncan> some parts of CPAN display them properly, others don't

[05:12] <Darren_Duncan> but even when not, only those few accented characters are messed up, since utf-8 is a superset of ascii

[05:13] <seano> autrijus: I'd give it a try, but I deleted it to save disk space.  The poor kids in the class I TA this quarter are all being forced to use Eclipse, so I've had to start it up a couple of times.

[05:13] <Darren_Duncan> I'm not bothering with any Unicode encodings except utf8

[05:13] <seano> In any case, I remember >> 2 sec.  Maybe my laptop drive's slow.

[05:14] <seano> autrijus: re macros & grammars, S02: "Intra-line comments will not be supported in standard Perl (but it would be trivial to declare them as a macro)." makes me think something like this needs to be shoved in at a very low level.

[05:16] <Darren_Duncan> here's a Q: ...

[05:17] <Darren_Duncan> My message.as_string() was a guess re sorting

[05:18] <autrijus> I'll bbiab.

[05:18] <Darren_Duncan> Eg, if I feed %hash.pairs to map {} but want to sort it first, will a plain 'sort' implicitly sort on the keys by string value, or do I have to say that explicitly as I did?

[05:18] <Darren_Duncan> ... using sort { $a.key cmp $b.key }

[05:19] <arcady> I think you have to sort them explicitly

[05:19] <seano> Darren_Duncan: I guess the question is what 'infix:cmp(Pair, Pair)' does

[05:19] <Darren_Duncan> well, that seems safer for now

[05:19] <Darren_Duncan> seano, yes

[05:19] <seano> So brutally define it to your will :).

[05:19] <Darren_Duncan> sort of

[05:20] <Darren_Duncan> assuming that $a cmp $b is what sort does implicitly

[05:20] <Darren_Duncan> all the time

[05:21] <seano> There was a thread awhile back on P6L on which comparison -- <=>, cmp, or something else -- is used by default between objects.  I don't think there was a resolution then, but maybe since...

[05:21] <PerlJam> I think you mean $^a and $^b there as $a and $b don't magically appear

[05:21] <Darren_Duncan> er, yes, if that's the new names of those variables

[05:22] <arcady> it's the new implicit variable syntax thingy

[05:22] <Darren_Duncan> I changed my code to use that

[05:29] <Darren_Duncan> I just noticed the .as() method in Perl data types; I could use that instead of manual joining ...

[05:31] <Darren_Duncan> the .perl() method also looks cool ... it could possibly replace the likes of Data::Dumper

[05:31] <PerlJam> not possibly, definitely.

[05:33] <PerlJam> well, probably with a little help to traverse the data structure if .perl() doesn't do that by default.

[05:34] <Darren_Duncan> .perl() at least handles arrays and hashes of one dimension

[05:39] <PerlJam> I like as :lang<perl> though as at least other languages can add their own as-handlers

[05:41] <arcady> that doesn't seem too useful though

[05:41] <Darren_Duncan> Oh, oh, S02 answered my question ...

[05:41] <Darren_Duncan> "Sorting a list of pairs should sort on their keys by default."

[05:41] <Darren_Duncan> so that takes care of that

[05:41] <PerlJam> arcady: why not?

[05:42] <arcady> because how does any other language deal with things like $foo vs. @foo and so on?

[05:42] <arcady> unless I completely misunderstand the issue

[05:43] <PerlJam> arcady: other languages are free to deal with those as best they can :)

[05:44] <arcady> well, you can just write a module to dump to whatever format

[05:44] <arcady> and in 99% of cases, you'd be using as :lang<perl> anyway

[05:47] <PerlJam> I suppose the exact form the feature takes doesn't matter too terribly much.

[05:48] <arcady> feel free to write the module, if you want it so badly : )

[05:49] <theorbtwo> Mornin, all.

[05:49] <PerlJam> $some_big_data_structure but= python_representation_role;  say $some_big_data_structure.python;

[05:51] <arcady> I wonder how you'd serialize functions then

[05:52] <Darren_Duncan> Mornin, one

[05:52] <theorbtwo> src/Main.hs:159: Variable not in scope: `config_file_sep' ?

[05:55] <PerlJam> arcady: parrot byte code.

[05:55] <PerlJam> arcady: then you use your handy-dandy parrot-to-<insert language> translator to get the appropriate language representation.

[05:57] <ingy> ola

[05:57] <ingy> hola even

[05:57] <ingy> theorbtwo: make purge

[05:57] <ingy> silly rabbit

[05:58] <ingy> autrijus: I learned a bit about monads today

[05:59] <PerlJam> ingy: enough to build a perl6 rules parser?  ;)

[06:00] <Darren_Duncan> I could use a bit of that

[06:00] <Darren_Duncan> though only very basic regexps in my current mod

[06:00] <Darren_Duncan> sorry, "rules"

[06:00] <PerlJam> Darren_Duncan: for those modules you mentioned on p6c?  (or was it p6l?)

[06:01] <Darren_Duncan> I haven't written anything to p6l ...

[06:01] <Darren_Duncan> All the modules I mentioned on p6c have fairly basic regexps, if any ...

[06:02] <Darren_Duncan> in SQL::Routine, I think I only use them to test if input looks like a number

[06:02] <Darren_Duncan> more specifically, test if its anything except an integer

[06:02] <Darren_Duncan> a positive integer

[06:02] <theorbtwo> That fixed it, ingy, sorry.  So what dependency are we missing?  Makefile.PL wasn't modified, which is the usual culprit...

[06:03] <Darren_Duncan> In Locale::KeyedText, 2 uses; 

[06:03] <tmoertel`> is the darcs repo up to date?

[06:03] <Darren_Duncan> 1. see if it has any non-alphanumerics

[06:03] <Darren_Duncan> 2. replace one literal with another

[06:04] <Darren_Duncan> the latter each being defined in scalar vars

[06:04] <Darren_Duncan> no fancy lookahead or lookback or whatever stuff

[06:04] <theorbtwo> Oh, presumably util/PugsConfig.pm.

[06:07] <Darren_Duncan> Here's a Q that's strictly about optimization ...

[06:07] <ingy> theorbtwo: Makefile.PL and util/PugsConfig.pm generate src/Config.hs

[06:07] <Darren_Duncan> I put most of my code at the top of my module, and most pod at the bottom, with a __END__ in between, so the parser stops there and doesn't waste time below, and I have lots of POD ... is this sort of thing useful with perl 6?

[06:08] <PerlJam> Darren_Duncan: perl6 doesn't grok __END__.  That's changed to =begin DATA 

[06:08] <Darren_Duncan> If I stick a "=begin END" (the perl 6 equiv) above all my pod, will that make Pugs compile it faster?

[06:08] <ingy> Darren_Duncan: I think that's an unnecessary optimization

[06:09] <Darren_Duncan> okay, out it goes

[06:09] <ingy> not worth talking about

[06:09] <Darren_Duncan> I won't bring it up again

[06:12] * PerlJam sleep &

[06:18] <theorbtwo> Hmmpf, what's the URL for this pastebot?

[06:20] <ingy> perlbot: nopaste?

[06:23] <perlbot> Paste your code here and #perl will be able to view it: http://sial.org/pbot/perl

[06:23] <ingy> theorbtwo: ^^

[06:23] * Aankhen`` considers whining about how he wants #perl6 to view things.

[06:23] <Khisanth> that should probably be http://sial.org/pbot/perl6

[06:23] <Khisanth> or the output will end up in the wrong chan :)

[06:23] <pasteling> "theorbtwo" at 84.245.186.254 pasted "Makefile.PL patch for dependency on util/PugsConfig.pm, and -O3 on build while I'm at it." (18 lines, 729B) at http://sial.org/pbot/7966

[06:23] <theorbtwo> Thanks.

[06:23] <theorbtwo> I did ask pastebot for help, in my defense, but it was not very forthcoming about it.

[06:26] <tmoertel`> is Main.hs being hacked on right now?

[06:26] <ingy> tmoertel`: I am hacking on it heavily

[06:26] <ingy> why?

[06:27] <tmoertel`> I was going to take a cleanup pass at it

[06:27] <ingy> pleas wait

[06:27] <obra>     hey ingy

[06:27] <tmoertel`> no problem

[06:27] <ingy> hi obra 

[06:27] <ingy> once I get the test harness working again, it's all yours

[06:29] <theorbtwo> Anybody have time to review that patch?  It's pretty trivial.

[06:31] * tmoertel` didn't know GHC had an -O3 optimization level

[06:31] <theorbtwo> Aye.  I haven't benchmarked, but it certianly feels like it does a 'make test' run much faster.

[06:32] <tmoertel`> theorbtwo: faster than -O2?  -O2 rarely is faster than plain -O in my experience, but -O is much faster than w/o any opts

[06:33] <tmoertel`> it looks like GHC takes any optimization level (-O9999 works)

[06:33] <theorbtwo> I haven't tried comparing the various -O levels; will do that now.

[06:34] <tmoertel`> I don't think anything beyond -O2 is implemented in the compiler

[06:35] <scw> wow, the compilation is really slow with -O3

[06:37] <scw> but takes only 1 second to generate each generation in life.p6, which took 6 seconds before.

[06:41] <hoowa> hi autrijus

[06:51] <theorbtwo> Hm, surprising -- my measurements say that no -O option is actually faster then -O1 or -O2 for a complete make all test cycle.

[06:55] <Darren_Duncan> question: if I wanted to create an alias for a package name, do I use "let" or "::=" or do something else; eg "let Message be Locale::KeyedText::Message"?

[06:56] <Darren_Duncan> reverse last 2 operands in example

[06:56] <Darren_Duncan> I don't want to create a new class 

[06:58] <Darren_Duncan> I'll try the "::=" that aliases variables and see how that goes

[06:58] <Darren_Duncan> or skip it

[07:12] <ingy> tmoertel`: I am close to checking  in Main.hs

[07:12] <ingy> tmoertel`: are you a lambdafolk?

[07:13] <ingy> KwikPoll: Who here uses OS X?

[07:13] <theorbtwo> 0;

[07:15] <ingy> theorbtwo: no mac?

[07:15] <theorbtwo> No mac.

[07:15] <ingy> it would be cool to work with someone like tmoertel` using SubEthaEdit

[07:16] <theorbtwo> SubEthaEdit sounds interesting.  I, of course, am not somebody like tmoerel`.

[07:16] <ingy> perl people pairing up with haskell people

[07:16] <theorbtwo> Hell, I'm stuck on exercise 3.10 of YAHT at the moment.

[07:17] <Darren_Duncan> okay, I'm going to commit the first Locale::KeyedText for perl 6 now.  doubtless it has bugs, but it should be at least 90% correct

[07:17] <ingy> Darren_Duncan: as long as it's in modules

[07:17] <Darren_Duncan> It is in modules; I followed the example of Sample-Module

[07:17] <ingy> coolness

[07:24] <Darren_Duncan> quick question; I forgot to use the command-line option to spec a commit message, so was dumped into Vim; I wrote a message there, but what is the keystroke to save and quit Vim?

[07:24] <scw> :wq

[07:25] <Darren_Duncan> clarify that; what does ":" mean?

[07:25] <Darren_Duncan> ctrl-:?

[07:25] <scw> Err, after pressed <esc>

[07:26] <Darren_Duncan> that seems to have done it, thanks

[07:26] <nothingmuch> morning

[07:26] <Darren_Duncan> morning nothing

[07:27] <Darren_Duncan> I just committed the first LKT a few seconds ago; update to see it

[07:27] <Darren_Duncan> I haven't tried compiling it of course, but it should be 90% correct

[07:27] <Darren_Duncan> its in /modules

[07:28] <scw> nothingmuch: Hello, several tests in not.t, auto.t and assign.t failed, how about using todo_* ?

[07:28] <nothingmuch> i didn't change not.t

[07:28] <nothingmuch> and luqui untodoed some tests

[07:28] <nothingmuch> he said since they were bugs, and not unimplemented features, they should not be todo

[07:29] <nothingmuch> auto.t is not mine either

[07:31] <nothingmuch> sorry, back

[07:31] <nothingmuch> http://rt.openfoundry.org/Foundry/Project/Source/index.html/pugs/revision/?rev=512

[07:38] <scw> oh, I didn't see the commit log :)

[07:40] <nothingmuch> i agree with him in theory

[07:40] <nothingmuch> but i think it confuses users

[07:40] <nothingmuch> i.e. "what's wrong? i get pugs 6.0.11 and tests failed!"

[07:40] <nothingmuch> but then again, bugs *are* bugs

[07:42] <autrijus> fwiw, I think luqui is right.

[07:42] <autrijus> tests should never fail to compile, though.

[07:42] <autrijus> and before a release I'll TODO all the failing tests

[07:42] <nothingmuch> on that i agree

[07:42] <autrijus> but inbetween releases, it's okay to have tests failing on trunk

[07:42] <ingy> autrijus: want to see pair with me?

[07:43] <autrijus> not yet, at $client's placed

[07:43] <autrijus> and using their computer

[07:43] * autrijus is trying to get gpg running on AIX.

[07:43] <ingy> ok

[07:43] * nothingmuch wouldn't mind joining a see session

[07:43] <autrijus> you can pair with nothingmuch :)

[07:43] <nothingmuch> i'd like to see what you guys do

[07:43] <ingy> autrijus: yuck

[07:43] <nothingmuch> not that i'd know how to do anything ;-)

[07:43] <nothingmuch> aix... oh my

[07:43] <nothingmuch> which reminds me

[07:44] <ingy> big patch to Main.hs incoming...

[07:44] <autrijus> woot.

[07:44] <nothingmuch> i can try and compile pugs on aix, hpux, solaris, and osf when that box comes back to life

[07:44] <autrijus> nice. aix is known to work.

[07:44] <nothingmuch> given GHC on those platforms

[07:44] <autrijus> but GHC is notoriously portable

[07:44] <autrijus> so we don't have a pressing need

[07:44] <nothingmuch> so we actually don't worry about it

[07:44] <nothingmuch> ok

[07:44] <nothingmuch> All the same for me =)

[07:46] <nothingmuch> ingy: mention my name in chat or something if you are starting see and don't mind me joining. that way i get a colloquy bubble. i'm going to do some real work now that i've eaten and stuff

[07:46] <ingy> nothingmuch: sure

[07:46] <ingy> nothingmuch: so you have OS X?

[07:46] <nothingmuch> uhuh

[07:46] <nothingmuch> so does lumi

[07:47] <ingy> that's 4 so far

[07:47] <nothingmuch> he just started and might enjoy see as well

[07:47] <ingy> we should keep a list

[07:47] <nothingmuch> but he starts work at around 11:00, so he's not up yet

[07:47] <nothingmuch> i think there's more

[07:47] <ingy> nothingmuch: what tz are you?

[07:47] <nothingmuch> Israel

[07:47] <ingy> cool

[07:48] <ingy> I have a friend there

[07:48] <ingy> the inventor of yaml

[07:48] <ingy> so i am used to that particular tz

[07:48] <nothingmuch> but normally i'm in sync with europe central as far as getting up, and greenland as far as going to bed

[07:48] <ingy> for pairing

[07:48] <nothingmuch> i saw on the website

[07:48] <nothingmuch> didn't know he was from israel though

[07:49] <nothingmuch> many israeli's or people with jewish names live in NA

[07:49] <ingy> Oren Ben-Kiki

[07:49] <ingy> I almost wrote Oren Ben-Kwiki

[07:49] <nothingmuch> hah

[07:49] <ingy> Oren and i went skiing in Canada this winter

[07:50] <nothingmuch> skiing... mmmm

[07:50] <ingy> his son and ex-wife live near me

[07:50] <nothingmuch> been too long

[07:50] <nothingmuch> a bit more than a year since I last went

[07:50] <ingy> he is a genius imo

[07:50] <nothingmuch> where do you live?

[07:50] <ingy> Seattle

[07:50] <nothingmuch> is he a perl guy?

[07:50] <ingy> not really

[07:50] <nothingmuch> i don't recall his named being mentioned otherwise than in YAML context

[07:50] <nothingmuch> ah, that explains it =)

[07:51] <autrijus> I see the name "Oren" and I keep having flashbacks from the Kill Bill movie...

[07:51] <nothingmuch> o-ren

[07:51] <nothingmuch> sort of

[07:51] * ingy can't wait to write a perl6 yaml parser in haskell

[07:51] <nothingmuch> the pronounciation of Oren is much less detaché

[07:52] <ingy> tmoertel`: Main.hs checked in

[07:52] <ingy> hmmm. I bet I broke Pugs::MakeMaker

[07:52] <ingy> I need tests :P

[07:52] <nothingmuch> i'm creating OSXPeople on pugs.kwiki.org

[07:52] <clkao> ingy: svk didn't treat you well?

[07:53] <ingy> clkao: I love you

[07:53] <ingy> clkao: we can hack the hateful svk in Taiwan

[07:53] <clkao> right

[07:53] <ingy> and maybe the more hateful YAML.pm

[08:02] <Darren_Duncan> since this was going around 10 mins ago -- I use Mac OS X, I live in Canada, and tz -800

[08:05] <Darren_Duncan> its midnight here now

[08:05] <Darren_Duncan> oh, the Perl 6 summaries just came out

[08:05] <thesaboteur> heh im unfortunately on mac os x as well

[08:05] <thesaboteur> I also unfortunately am south of the border

[08:05] <Darren_Duncan> what do you mean "unfortunately"; what would you prefer

[08:05] <Darren_Duncan> for an os

[08:05] <thesaboteur> I would prefer a debian or Fedora system

[08:05] <Darren_Duncan> you can dual-boot Macs with a half dozen plus Linux distros

[08:05] <nothingmuch> especially debian or fedora

[08:05] <nothingmuch> though on macs i would prefer gentoo

[08:05] <thesaboteur> Im a newbie with perl (Just learning) and working on getting my perl fixed so I can use modules from cpan.

[08:05] <nothingmuch> since it's a bit less trouble

[08:05] <nothingmuch> thesaboteur: the #1 place to do that is http://www.perlmonks.org/

[08:05] <thesaboteur> eh dual booting is to much work.

[08:05] <nothingmuch> well, suite yourself... If you don't want linux enough to work for it ;-)

[08:05] <Darren_Duncan> in my understanding, the most popular Mac distro is Yellow Dog Linux (YDL), which I think is a version of one of your prefs ... have to check

[08:05] <thesaboteur> nothingmuch: ah thankye 

[08:06] <nothingmuch> YDL == redhat, sort of

[08:06] <thesaboteur> er

[08:06] <Darren_Duncan> well, you can sole-boot a Mac under Linux if you want

[08:06] <thesaboteur> it's not really "my mac" hence the not trying to transform it into linux to much.

[08:06] <thesaboteur> im at work

[08:06] <Darren_Duncan> from what I've heard, its a lot easier to dual-boot with the Mac os than it is with Windows; I've heard the latter tends to screw with things

[08:06] <nothingmuch> http://pugs.kwiki.org/?OSXPeople

[08:07] <thesaboteur> I really hate macs but if I can install enough linux stuff onto it then it makes it bearable :)

[08:08] <autrijus> try Ubuntu on PowerPC :)

[08:08] <theorbtwo> Debian should run just fine on PPC, dual-booting.

[08:08] <thesaboteur> yeh but I can't change the os

[08:08] <nothingmuch> thesaboteur: if you have another mac, you can boot your mac in fw disk mode

[08:08] * theorbtwo wonders if it's worth the effort to set up an emulated OSX in order to pair with somebody.

[08:09] <nothingmuch> and use ipartition to resize the partition of your root

[08:09] <nothingmuch> or just copy everything over

[08:09] <nothingmuch> repartition

[08:09] <nothingmuch> and copy everything back

[08:09] <Darren_Duncan> should we sign up to Perl6People too?

[08:09] <nothingmuch> theorbtwo: it'll probably be very very slow

[08:09] <Darren_Duncan> re the qwiki?

[08:09] <autrijus> thesaboteur: MacOnLinux?

[08:09] <nothingmuch> but pearpc can do it

[08:09] <autrijus> it seemed to work fine the last time I tried

[08:09] <thesaboteur> I dunno I got confused a few lines ago

[08:09] <autrijus> pearpc = ultra slow.

[08:10] <autrijus> I'd suggest moonedit ;)

[08:10] <Darren_Duncan> I've heard that the Mac hardware is a preference among Linux people

[08:10] <hoowa> haha tang

[08:10] <autrijus> greetings hoowa!

[08:10] <Darren_Duncan> any main complaints are with the OS

[08:10] <theorbtwo> It was almost usable on my 700MHz P3; this is a 3GHz P4/HT, so should be barely usable.

[08:10] <thesaboteur> Darren_Duncan: yeh don't get me wrong the processors are bad ass but I have a very deep hatred of macs that has been with me for years.

[08:10] <autrijus> 3ghc sounds indeed borderline okay.

[08:11] <autrijus> 3ghz, even. bad autocompletion

[08:11] <thesaboteur> Im attempting to install xtools now, hopefully it works and makes my perl stuff work

[08:11] <Darren_Duncan> thesaboteur: that's unfortunate

[08:11] <Darren_Duncan> I don't use xtools, even though I hear they're great

[08:12] <Darren_Duncan> just the BBEdit text editor and the standard Unix perl

[08:12] * nothingmuch uses carbon vim

[08:12] <thesaboteur> Darren_Duncan: I think it stems from when I was a little kid, using a school mac, I think the mac tried to molest me and I have repressed the memory.

[08:12] <Khisanth> ...

[08:12] <Darren_Duncan> that could be it ... surely there are no real reasons to hate macs

[08:12] <nothingmuch> isn't xtools some kind of configuration management thingy for OSX server?

[08:13] <thesaboteur> er I thought xtools was what gave me gcc and stuff like that?

[08:13] <nothingmuch> ah

[08:13] <nothingmuch> xcode

[08:13] <thesaboteur> er yea thats it

[08:13] <nothingmuch> if your mac is new, it's in /Applications/Installers

[08:13] <nothingmuch> or something like that

[08:13] <Darren_Duncan> XCode is it

[08:13] <nothingmuch> perl works without it, btw

[08:13] <thesaboteur> oh I downloaded it from the mac site

[08:13] <Darren_Duncan> It comes on a separate CD with the Mac OS X Cds, or you can download it

[08:13] <Darren_Duncan> for free

[08:13] <nothingmuch> and XCode the IDE is not very perl friendly without camelbones

[08:13] <thesaboteur> yeah my perl works but I couldn't install/configure a module I got from cpan

[08:14] <nothingmuch> ah, that makes sense

[08:14] <thesaboteur> yeah so im working on trying to figure out what I have to do, so I can compile modules from cpan without doing a bunch of magic tricks.

[08:14] <Darren_Duncan> Apple's bundle of developer tools gives you gcc, but you can install that by itself and without XCode

[08:15] <Darren_Duncan> XCode does require gcc though, as it uses gcc behind the scenes

[08:15] <thesaboteur> Darren_Duncan: yea but then I wouldn't have all the library's I need though right?

[08:15] <Darren_Duncan> libraries for what?

[08:15] <nothingmuch> i'd just install it all

[08:15] <thesaboteur> I dunno really

[08:15] <Darren_Duncan> The standard bsd libraries are separate installs from carbon/cocoa etc

[08:15] <nothingmuch> and from the web is prolly a good choice, since it's more recent

[08:15] <Darren_Duncan> still, I just install everything, its about 500M

[08:15] <thesaboteur> dunno but xcode install is almost done now anyways

[08:16] <Darren_Duncan> the stuff I don't use is there to play with later when I want to try that cool Cocoa stuff

[08:16] <nothingmuch> Cocoa is mui fun

[08:16] <thesaboteur> as long as I can compile stuff i'll be happy

[08:16] <nothingmuch> when i have little bits of time i try to hack in it

[08:17] <nothingmuch> thesaboteur: if you want linux like goodness, fink.sf.net

[08:17] <Darren_Duncan> once you've done the general dev tools install, you can run gcc on the command line as usual

[08:17] <Darren_Duncan> that's what I used to compile my Perl

[08:17] <thesaboteur> nothingmuch: yeh I have that :)

[08:17] <nothingmuch> doesn't it want the dev tools?

[08:17] <Darren_Duncan> I don't use Fink -- its a great tool, but I didn't need it

[08:18] * nothingmuch doesn't like fink because if something breaks, it all breaks

[08:18] <thesaboteur> nothingmuch: to do anything usefull it does yea :)

[08:18] <nothingmuch> i use it very very very sparingly

[08:18] <Darren_Duncan> I compile perl on the command line, basic "make Configure" etc

[08:19] <thesaboteur> fink works good for small packages that im to lazy to compile myself, like ping and whois.

[08:19] <Darren_Duncan> Fink was more useful in the older days, by providing access to a lot of unix software that otherwise know about Mac OS X to install the normal way

[08:19] <nothingmuch> you have ping and whois on OSX

[08:19] <thesaboteur> yea

[08:19] <Darren_Duncan> these days, everything I need knows about OS X, so fink isn't needed

[08:19] <ingy> thesaboteur: do you know about Kwiki?

[08:19] <nothingmuch> did you install the BSD subsystem?

[08:19] <thesaboteur> ingy: never heard of it

[08:19] <Darren_Duncan> oh yes, the BSD subsystem is required for the dev tools

[08:19] <thesaboteur> nothingmuch: I dunno I just kept clicking agree/ok

[08:20] <nothingmuch> huh

[08:20] <nothingmuch> bummer

[08:20] <Darren_Duncan> that is part of the standard Mac OS X install, and is installed by default with Mac OS X, unless you uncheck the option

[08:20] <nothingmuch> lots of std unix tools are installed on OSX

[08:20] <nothingmuch> but i don't remember if by default or not

[08:20] <ingy> thesaboteur: it is a wiki framework with plugins... about 150 modules from various authors

[08:20] <Darren_Duncan> the BSD tools includes the Perl bundled with OS X

[08:20] <Darren_Duncan> 5.8.1 was bundled with Panther 10.3

[08:20] <ingy> thesaboteur: I have a method to install and maintain all of those without going thru cpan

[08:21] <thesaboteur> Darren_Duncan: im not doing an os install, perl was/is installed.  Im simply trying to get gcc and a perl install that will work with cpan modules.

[08:21] <Darren_Duncan> sure, and it was simple for me

[08:21] <thesaboteur> ingy: hmm sounds kool.

[08:22] <ingy> Darren_Duncan: I just checked in a new Pugs::MakeMaker

[08:22] <ingy> could you test it out

[08:22] <autrijus> fayland++ # volunteering to take over zh-cn maintainership

[08:22] <thesaboteur> ingy: Im trying to get a fairly uncommon module to work though I suspect

[08:22] <autrijus> fayland: you are a pugs committer now. welcome aboard!

[08:22] <ingy> thesaboteur: ok

[08:22] <Darren_Duncan> simply installing the whole dev tools set on top of a machine with the whole OS X 

[08:22] <Darren_Duncan> includes all the tools you need to do perl stuff, or compile with gcc

[08:22] <Darren_Duncan> ingy, I hear you, will check it out

[08:22] <fayland> autrijus ,thanks.i'll do my best

[08:23] * nothingmuch fades out

[08:23] <nothingmuch> ciao

[08:23] <thesaboteur> sweet the new xcode tools thingy fixed my perl :)

[08:24] <Darren_Duncan> great to hear , sab

[08:24] <thesaboteur> it installed to, yay.

[08:25] <Darren_Duncan> gcc 3.4 is what currently comes with the os x dev tools

[08:26] <Darren_Duncan> Mac OS X Tiger 10.4 is now being built with gcc 4, so its tools should have that too

[08:27] <Darren_Duncan> okay, I see problems with the latest Pugs

[08:27] <Darren_Duncan> earlier today, it compiled and tested without issues

[08:28] <ingy> Darren_Duncan: your module?

[08:28] <theorbtwo> 33/1281 subtests failed, 97.42% okay?  That's expected.

[08:28] <Darren_Duncan> now 'make' is fine but 'make test' is borked 

[08:28] <ingy> Darren_Duncan: did your module pass its test?

[08:29] <ingy> because it fails here

[08:29] <cls_bsd> flush Failed Test   Stat Wstat Total Fail  Failed  List of Failed

[08:29] <Darren_Duncan> it says Failed 77 test scripts, no output seen ... before that it says 'unexpected "$"' and "expecting ";" or end of input

[08:29] <cls_bsd> t/op/assign.t                2    2 100.00%  1-2

[08:29] <cls_bsd> t/op/auto.t      1   256    37   44 118.92%  11-37

[08:29] <cls_bsd> t/op/not.t                  14    4  28.57%  1-2 4-5

[08:29] <ingy> but I don't think it is my fault

[08:29] <Darren_Duncan> ingy, I expect that my module will not pass its test, since it uses features Pugs doesn't support; it shouldn't even compile ...

[08:30] <ingy> oh

[08:30] <Darren_Duncan> but the test suite doesn't run /modules, does it?

[08:30] <ingy> ok, then I won't attempt to fix it :P

[08:30] <Darren_Duncan> those are "extra"

[08:30] <ingy> no

[08:30] <ingy> yes they are extra

[08:31] <Darren_Duncan> I expect to try running what I committed when Pugs has its features

[08:31] <Darren_Duncan> meanwhile, its presence can give developers an idea what features to put in possibly earlier

[08:31] <Darren_Duncan> I only use the simpler parts of the missing features

[08:31] <Darren_Duncan> no overloading, no multimethods, etc

[08:32] <ingy> ok

[08:32] <autrijus> the failed tests is not Officially Okay

[08:32] <autrijus> but is Acceptable during releases

[08:32] <autrijus> it is my plan to make them TODO before each release

[08:32] <autrijus> for that release tarball alone

[08:32] <ingy> aye

[08:32] <Darren_Duncan> meanwhile, people can just critique the code in my mod if they see what doesn't look like proper perl 6 code

[08:32] <autrijus> but let them fail (as long as it's not fail-to-compile) during releases

[08:32] <autrijus> Darren_Duncan: wonderful work!

[08:32] <autrijus> Darren_Duncan++

[08:33] * autrijus is still stuck at $client_site waiting for a particularly slow GCC install.

[08:33] <autrijus> AIX--

[08:33] <Darren_Duncan> note that I ran 'make clean' prior to these last tests; might that have borked it?

[08:33] <ingy> AIX-- indeed

[08:33] <theorbtwo> You can't ssh home?

[08:33] * ingy hasn't worked on AIX in 10 years though

[08:34] * decay_ is sitting at a aix workstation right now ;)

[08:34] <Darren_Duncan> This is an example of what was borked with the tests; 

[08:34] <Darren_Duncan> t/01basic........................

[08:34] <Darren_Duncan> unexpected "$"

[08:34] <Darren_Duncan> expecting ";" or end of input

[08:34] <Darren_Duncan> NonTerm "/System/Library/Perl/5.8.1/Test.pm" (line 31, column 1)

[08:34] <ingy> Darren_Duncan: use make purge instead

[08:35] <ingy> and svn up

[08:35] <Darren_Duncan> will try that

[08:35] <Darren_Duncan> come to think of it, my "perl Makefile.PL" mentioned something missing, but I thought it was unimportant

[08:36] <Darren_Duncan> okay, I did 'make purge' and 'svn update' then what followed started out the same

[08:36] <Darren_Duncan> Warning: the following files are missing in your kit:

[08:36] <Darren_Duncan>         modules/Sample-Module/blib6/arch/auto/Sample/Module/.exists

[08:36] <Darren_Duncan>         modules/Sample-Module/blib6/lib/auto/Sample/Module/.exists

[08:36] <Darren_Duncan>         modules/Sample-Module/blib6/lib/Sample/.exists

[08:36] <Darren_Duncan>         modules/Sample-Module/blib6/lib/Sample/Module.pm

[08:36] <Darren_Duncan> Please inform the author.

[08:37] <ingy> hrm

[08:37] <ingy> one sec

[08:38] <ingy> svn up

[08:38] <ingy> that was likely my fault :(

[08:39] <Darren_Duncan> continuing, 'make' gives no errors, 'make test' same as before ...

[08:39] <Darren_Duncan> ingy, I'll wait for you to do something, since you seem to recognize it

[08:40] <ingy> that's inconceivable

[08:40] <ingy> it works fine over here

[08:40] <Darren_Duncan> if it makes any difference, I could throw out my whole working dir and do a fresh checkout?

[08:40] <Darren_Duncan> just in case

[08:41] <ingy> you don't have to throw the old one out

[08:41] <ingy> are you using svk or svn?

[08:41] <Darren_Duncan> I didn't mean that literally

[08:41] <ingy> well yeah, try it

[08:42] <Darren_Duncan> I'm using svn, same as the host server seems to be

[08:42] <ingy> svk talks to svn servers.. but anyways...

[08:42] <ingy> please try a fresh checkout

[08:43] <Darren_Duncan> I noticed something curious ... apparently there are a couple blib folders in the folder that is the parent of my pugs root dir; one says 'blib' and the other 'blib6', the latter just updated.

[08:43] <Darren_Duncan> is it normal to have blib outside the current working directory?

[08:45] <ingy> hmmm

[08:45] <Darren_Duncan> svn checkout http://svn.openfoundry.org/pugs/ in progress

[08:45] <Darren_Duncan> done ... revision 524

[08:45] <ingy> It orks for me on two different machines

[08:45] <ingy> works

[08:46] <Darren_Duncan> This time, "perl Makefile.PL" gives no errors

[08:46] <ingy> osx and linux

[08:47] <Darren_Duncan> however, while make was fine, 'make test' did what it did before

[08:48] <ingy> delete the spurious blib dirs

[08:48] <Darren_Duncan> eg ...

[08:48] <ingy> what type of os are you on?

[08:48] <Darren_Duncan> t/op/substr......................

[08:48] <Darren_Duncan> unexpected "$"

[08:48] <Darren_Duncan> expecting ";" or end of input

[08:48] <Darren_Duncan> NonTerm "/System/Library/Perl/5.8.1/Test.pm" (line 31, column 1)

[08:48] <Darren_Duncan> t/op/substr......................dubious                                     

[08:48] <Darren_Duncan>         Test returned status 1 (wstat 256, 0x100)

[08:48] <Darren_Duncan> I removed everything before checkout, including all the blib dirs

[08:48] <autrijus> hrmph.

[08:48] <autrijus> it's using the perl5's Test.pm.

[08:49] <autrijus> not pugs'.

[08:49] <autrijus> hence, the problem.

[08:49] <ingy> yes

[08:49] <Darren_Duncan> I'm on Mac OS X

[08:49] <ingy> I noticed 

[08:49] <Darren_Duncan> and it did work fine earlier today

[08:49] <ingy> trying to figure out why

[08:49] <ingy> Darren_Duncan: run `./pugs -V`

[08:50] <Darren_Duncan> here ya go ...

[08:50] <Darren_Duncan> Summary of pugs configuration:

[08:50] <Darren_Duncan> archlib: /System/Library/Perl6/darwin-thread-multi-2level

[08:50] <Darren_Duncan> privlib: /System/Library/Perl6

[08:50] <Darren_Duncan> sitearch: /Library/Perl6/darwin-thread-multi-2level

[08:50] <Darren_Duncan> sitelib: /Library/Perl6

[08:50] <Darren_Duncan> @*INC:

[08:50] <Darren_Duncan> .

[08:50] <cls_bsd> '% pugs assign.t' and failed

[08:50] <ingy> yow!

[08:50] <Darren_Duncan> that wasn't all of it, my IRC client cut off

[08:51] <Darren_Duncan> the rest ...

[08:51] <Darren_Duncan> .

[08:51] <ingy> Darren_Duncan: you need to use nopaste

[08:51] <Darren_Duncan> what's nopaste?

[08:51] <ingy> perlbot: nopaste?

[08:51] <perlbot> Paste your code here and #perl will be able to view it: http://sial.org/pbot/perl

[08:52] <ingy> make sure to select #perl6

[08:52] <pasteling> "Darren_Duncan" at 24.109.93.98 pasted "the result of pugs -V" (14 lines, 435B) at http://sial.org/pbot/7969

[08:53] <Darren_Duncan> how's that?

[08:53] <scw> cls_bsd: yes, it fails and should fail.

[08:53] <Darren_Duncan> I'll bookmark the 'bot for next time

[08:53] <ingy> now paste all of the build output

[08:53] <autrijus> I wonder if we should add a notice to Makefile.PL

[08:53] <autrijus> that says "failed tests is okay inbetween releases"

[08:53] <autrijus> or something like that

[08:53] <autrijus> to reduce fear undertainty and doubt

[08:54] <ingy> I don't really think they are so ok, but maybe I'm thinking wrong

[08:54] <pasteling> "Darren_Duncan" at 24.109.93.98 pasted "the build information, I think" (49 lines, 2.7K) at http://sial.org/pbot/7970

[08:54] <autrijus> okay, as in, we except them to happen

[08:54] <autrijus> we will get around to it soon

[08:54] <autrijus> et cetera.

[08:54] <ingy> it certainly is nice to have failing tests shared amongst us

[08:55] <ingy> maybe we need unit tests vs regression tests

[08:55] <ingy> t/ and unit/

[08:56] <autrijus> maybe. sounds bdufing though.

[08:56] <ingy> true

[08:56] <cls_bsd> hmm

[08:56] <ingy> but then again I'm the bduf master :p

[08:56] <ingy> anyway I'm not sold on it

[08:56] <autrijus> IGNY

[08:57] <ingy> I think the message idea is fine

[08:57] <autrijus> "I'm gonna need you", or something :)

[08:57] * autrijus thinks ingy's open source project manager points are well-stated, and that igny != bduf generally :)

[08:58] <ingy> my motto was always YAAGNI

[08:58] <ingy> You Actually *Are* Gonna Need It!

[08:59] <ingy> Darren_Duncan: the failing test output man!

[09:00] <Darren_Duncan> am I the first one to have this?

[09:00] <ingy> Darren_Duncan: what directory do you run perl Makefile.PL from?

[09:01] <Darren_Duncan> I run it from inside the root of the pugs directory, the directory that contains /lib and /t and etc

[09:01] <ingy> cp kwid ../../../blib6/script/kwid

[09:01] <Darren_Duncan> this is standard for CPAn distros, and the Perl distro itself, I think

[09:01] <ingy> that is definitely messed up

[09:01] <Darren_Duncan> at least that's how I always did it

[09:02] <ingy> that's correct

[09:02] <Darren_Duncan> after all, an unqualified file name, "Makefile.PL" you have to be in the same dir as the file

[09:02] <ingy> where is your test output?

[09:02] <Darren_Duncan> I'll paste the lot if you want, but its 77X of the same more or less

[09:03] <ingy> well i think the problemo is the ../../../blib6

[09:03] <ingy> Darren_Duncan: just paste the top stuff

[09:04] <ingy> cp lib/Test.pm ../../../blib6/lib/Test.pm

[09:04] <ingy> Test.pm is not where pugs testing can find it

[09:04] <pasteling> "Darren_Duncan" at 24.109.93.98 pasted "result of make test" (30 lines, 2.8K) at http://sial.org/pbot/7971

[09:04] <ingy> thus the problem

[09:04] <Darren_Duncan> I snipped the middle

[09:05] <ingy> ok I got it

[09:07] <Darren_Duncan> goodstuff

[09:07] <ingy> can you paste ext/Test/Makefile

[09:08] <Darren_Duncan> just a sec

[09:09] <ingy> and also paste inc/Module/Install/Pugs.pm and ext/Test/Makefile.PL

[09:09] <pasteling> "Darren_Duncan" at 24.109.93.98 pasted "/ext/Test/Makefile" (521 lines, 14.6K) at http://sial.org/pbot/7972

[09:11] <pasteling> "Darren_Duncan" at 24.109.93.98 pasted "/ext/Test/Makefile.PL" (14 lines, 316B) at http://sial.org/pbot/7973

[09:11] <ingy> autrijus: ping

[09:11] <ingy> autrijus: look at http://sial.org/pbot/7972

[09:12] <pasteling> "Darren_Duncan" at 24.109.93.98 pasted "/inc/Module/Install/Pugs.pm" (74 lines, 2.2K) at http://sial.org/pbot/7974

[09:12] <ingy> autrijus: especially INST_LIB

[09:12] <ingy> that is messed up!

[09:13] <Darren_Duncan> as inane as it sounds, I'm going to try something I should't have to try ... back in a few minutes

[09:13] <ingy> omg, is he rebooting?

[09:16] <ingy> Dear Darren, if rebooting doesn't work try touching your head and then your feet alternately for about 15 minutes...

[09:16] <ingy> Darren_Duncan: if you ever reboot to solve a perl problem again, I am never helping you

[09:16] <thesaboteur> Then repeatedly chant "I am the walrus" while clicking your heels together.

[09:17] <Darren_Duncan> I totally didn't expect that to work

[09:17] <Darren_Duncan> but who knows about strange background issues

[09:17] <ingy> obviously not you :P

[09:18] <ingy> MakeMaker is behaving strangely

[09:18] <ingy> what version is your perl?

[09:18] <Darren_Duncan> I just figured, might as well try everything

[09:18] <Darren_Duncan> the one I was using with Pugs was the bundled one, 5.8.1rc4

[09:19] <ingy> 01:16 < ingy> Dear Darren, if rebooting doesn't work try touching your head and then your feet alternately for about 15 minutes...

[09:19] <Darren_Duncan> I also have 5.8.6 installed in a separate dir; could run through that instead

[09:19] <ingy> ok...

[09:19] <ingy> 5.8.1 is a POS

[09:19] <ingy> but I'm not certain that is the problem

[09:20] <ingy> but i wouldn't be  surprised

[09:20] <Darren_Duncan> yet 5.8.1 worked earlier

[09:20] <ingy> well this isn't earlier

[09:20] <Darren_Duncan> no

[09:21] <ingy> I get the same thing with my /usr/bin/perl

[09:22] <ingy> autrijus: ping... have you seen this?

[09:22] <Darren_Duncan> currently I'm trying without a new re-checkout

[09:23] <Darren_Duncan> make skipped everything, make test failed as before

[09:23] <Darren_Duncan> NonTerm "/Volumes/Programming160/Perl/lib/perl5/5.8.6/Test.pm" (line 31, column 1)

[09:23] <Darren_Duncan> So its using the newer version now

[09:23] <ingy> http://sial.org/pbot/7972 ... INST_LIB is clearly set to ../../blib6/lib but ../../../blib6/lib gets used

[09:24] <ingy> Darren_Duncan: so is it working with the new perl?

[09:24] <Darren_Duncan> I could try sitting in the parent of the 'pugs' directory and see what happens

[09:24] <Darren_Duncan> no, see my above comment

[09:24] <ingy> nononono

[09:25] <ingy> that will work as well as rebooting did

[09:25] <Darren_Duncan> sitting in parent failed

[09:25] <ingy> where is your perl-5.8.6 located?

[09:26] <Darren_Duncan> see above comment

[09:26] <ingy> what is the path to your perl-5.8.6?

[09:27] <Darren_Duncan> test

[09:28] <Darren_Duncan> du-oh, a leading "/" doesn't work here

[09:28] <Darren_Duncan> how about: /Volumes/Programming160/Perl/bin/perl

[09:28] <ingy> /Volumes/Programming160/Perl/bin/perl -v

[09:28] <ingy>  /Volumes/Programming160/Perl/bin/perl -v

[09:29] <Darren_Duncan> but I have a softlink to it at /Volumes/Programming160/perl58 , which is what I actually invoked

[09:29] <ingy> do this...

[09:29] <ingy> checkout a new version

[09:29] <Darren_Duncan> I'm on the -v

[09:29] <ingy> cd to into it

[09:30] <ingy>   /Volumes/Programming160/Perl/bin/perl Makefile.PL; make test

[09:30] <pasteling> "Darren_Duncan" at 24.109.93.98 pasted "the -v output" (10 lines, 463B) at http://sial.org/pbot/7975

[09:31] <Darren_Duncan> my 5.8.6 is just all the default settings, except for its location

[09:31] <Darren_Duncan> so I don't clobber the Perl that came with the os

[09:31] <Darren_Duncan> will do, just a sec

[09:32] <ingy> also try running

[09:32] <Darren_Duncan> checkout in progress

[09:33] <ingy>  /Volumes/Programming160/Perl/bin/perldoc -l ExtUtils::MakeMaker

[09:33] <ingy> what is the output for that?

[09:34] <ingy> Darren_Duncan: what is the output for /Volumes/Programming160/Perl/bin/perldoc -l ExtUtils::MakeMaker

[09:35] <Darren_Duncan> didn't get to that yet, on 'make test'

[09:35] <Darren_Duncan> separate window ...

[09:36] <Darren_Duncan> the tests seem to be working now

[09:36] <dada> hola

[09:37] <nothingmuch> hola

[09:37] <ingy> Darren_Duncan: ok.. you probably want /Volumes/Programming160/Perl/bin in the front of your path

[09:37] <Darren_Duncan> your next question resulted in ...

[09:37] <Darren_Duncan> ... /Volumes/Programming160/Perl/lib/perl5/5.8.6/ExtUtils/MakeMaker.pm

[09:38] <ingy> ok fine

[09:41] <ingy> the problem is solved

[09:41] <ingy> perl-5.8.1-RC1 sucks!!!

[09:41] <Darren_Duncan> now it says failed 3/77, which sounds like what you expected

[09:41] <ingy> yes

[09:41] * ingy never uses the system perl

[09:41] * nothingmuch neither

[09:41] <Darren_Duncan> still, I'm going to test a bit more on my own to see why 581 worked before but not now, maybe

[09:41] <nothingmuch> but then again, i'm an idiot in that respect

[09:41] * nothingmuch works in 5.9

[09:41] <Darren_Duncan> to be honest, I prefer to use 5.8.6, and into there is where I install any mods ...

[09:41] <ingy> ok I am leaving....

[09:41] <Darren_Duncan> I just use the system perl as a shortcut when I think it won't make any difference

[09:41] <Darren_Duncan> thanks for your time

[09:41] <nothingmuch> ciao ingy!

[09:41] <Darren_Duncan> see you ingy

[09:41] <ingy> laters

[09:41] <Darren_Duncan> and now it's 1:41am here

[09:48] <Darren_Duncan> good night brave souls

[09:49] <theorbtwo> G'midmorning, Darren.

[09:49] <Darren_Duncan> ya, that too

[09:49] <Darren_Duncan> very early in the morning

[10:40] <kolibrie> well, I made it here! first irc in about ten years

[10:40] <kolibrie> pugs is very cool

[10:41] <kolibrie> I'm a little worried by the development pace... I can barely follow it

[10:41] <kolibrie> I have an idea for an addition to Test.pm

[10:42] <kolibrie> I wrote Test::Debugger in perl5 because I wanted some way to output the status for failed or TODO tests

[10:44] <kolibrie> I'm thinking it would be nice to have some kind of logging available in Perl6's Test.pm

[10:45] <kolibrie> If I write something (before someone else writes and commits it), how do I go about sending changes

[10:46] <kolibrie> I'm using the darcs repository

[10:46] <kolibrie> (hope I didn't miss a FAQ)

[10:54] <flw> D:\MoChou\pugs>perl makefile.pl

[10:54] <flw> *** Readline support disabled.  If you want readline support,

[10:54] <flw> please install Term::ReadLine::Gnu from CPAN, as well as

[10:54] <flw> the GNU Readline headers and shared library.

[10:54] <flw> Writing Makefile for Kwid

[10:54] <flw> Writing Makefile for Pugs::MakeMaker

[10:54] <flw> Writing Makefile for Test

[10:54] <flw> Writing Makefile for Perl6::Pugs

[10:54] <flw> D:\MoChou\pugs>dir makefile

[10:54] <flw> 􏿽xC7􏿽xFD􏿽xB6􏿽xAF􏿽xC6􏿽xF7 D 􏿽xD6􏿽xD0􏿽xB5ľ􏿽xED􏿽xCA􏿽xC7 􏿽xB9􏿽xA4􏿽xD7􏿽xF7􏿽xB7􏿽xD6􏿽xC7􏿽xF8

[10:54] <flw> 􏿽xBE􏿽xED􏿽xB5􏿽xC4􏿽xD0􏿽xF2􏿽xC1􏿽xD0􏿽xBA􏿽xC5􏿽xCA􏿽xC7 F8C0-4091

[10:54] <flw> D:\MoChou\pugs 􏿽xB5􏿽xC4􏿽xC4􏿽xBF¼

[10:54] <flw> 2005-03-08  18:54               26,259 Makefile

[10:54] <flw> 1 􏿽xB8􏿽xF6􏿽xCEļ􏿽xFE         26,259 􏿽xD7􏿽xD6􏿽xBD􏿽xDA

[10:54] <flw> 0 􏿽xB8􏿽xF6􏿽xC4􏿽xBF¼     56,369,152 􏿽xBF􏿽xC9􏿽xD3􏿽xC3􏿽xD7ֽ􏿽xDA

[10:54] <flw> D:\MoChou\pugs>nmake

[10:54] <flw> Microsoft (R) 􏿽xB3􏿽xCC􏿽xD0􏿽xF2􏿽xCE􏿽xAC􏿽xBB􏿽xA4ʵ􏿽xD3􏿽xC3􏿽xB9􏿽xA4􏿽xBE􏿽xDF 7.00.9466 􏿽xB0􏿽xE6

[10:54] <flw> 􏿽xB0􏿽xE6􏿽xC8􏿽xA8􏿽xCB􏿽xF9􏿽xD3􏿽xD0 (C) Microsoft Corporation􏿽xA1􏿽xA3􏿽xB1􏿽xA3􏿽xC1􏿽xF4􏿽xCB􏿽xF9􏿽xD3􏿽xD0Ȩ􏿽xC0􏿽xFB􏿽xA1􏿽xA3

[10:54] <flw> NMAKE : fatal error U1052: δ􏿽xD5􏿽xD2􏿽xB5􏿽xBD􏿽xCE􏿽xC4􏿽xBC􏿽xFE􏿽xA1􏿽xB0Makefile􏿽xA1􏿽xB1

[10:54] <flw> Stop.

[10:54] <flw> NMAKE : fatal error U1077: 􏿽xA1􏿽xB0cd􏿽xA1􏿽xB1 : 􏿽xB7􏿽xB5􏿽xBBش􏿽xFA􏿽xC2􏿽xEB􏿽xA1􏿽xB00x2􏿽xA1􏿽xB1

[10:54] <flw> Stop.

[10:54] <flw> D:\MoChou\pugs>

[10:54] <flw> Pugs Ϊʲô􏿽xB1􏿽xE0􏿽xD2벻􏿽xB9􏿽xFDȥ􏿽xA3􏿽xBF

[10:55] <flw> autrijus 􏿽xD4􏿽xDA􏿽xB2􏿽xBB􏿽xD4􏿽xDA􏿽xA3􏿽xBF

[10:57] <thesaboteur> erm stop using windows :)

[10:58] <autrijus> hi flw.

[10:58] <autrijus> that is strange.

[10:58] <autrijus> can you try using an older version of nmake?

[10:58] <autrijus> the free downloadable version of 1.50?

[10:58] <autrijus> instead of 5.00.9466

[11:03] <autrijus> I'll be back later

[11:04] <autrijus> going away from net access &

[11:07] <dada> it seems to work with nmake 7.10.3077, though

[11:07] <flw> 􏿽xCE􏿽xD2􏿽xCA􏿽xD4􏿽xCA􏿽xD4 nmake 1.50

[11:16] <flw> 􏿽xD3􏿽xC3 nmake 1.50 Ҳ􏿽xB2􏿽xBB􏿽xD0􏿽xD0􏿽xA3􏿽xACͬ􏿽xD1􏿽xF9􏿽xB5Ĵ􏿽xED􏿽xCE􏿽xF3􏿽xA1􏿽xA3

[11:22] <dada> flw: ?

[11:26] <flw> ================================================

[11:26] <flw> D:\MoChou\pugs>svn up

[11:26] <flw> 􏿽xD3􏿽xDA􏿽xD0􏿽xDE􏿽xB6􏿽xA9􏿽xB0􏿽xE6 524􏿽xA1􏿽xA3

[11:26] <flw> D:\MoChou\pugs>perl makefile.pl

[11:26] <flw> *** Readline support disabled.  If you want readline support,

[11:26] <flw> please install Term::ReadLine::Gnu from CPAN, as well as

[11:26] <flw> the GNU Readline headers and shared library.

[11:26] <flw> Checking if your kit is complete...

[11:26] <flw> Looks good

[11:26] <flw> Writing Makefile for Kwid

[11:26] <flw> Writing Makefile for Pugs::MakeMaker

[11:26] <flw> Writing Makefile for Test

[11:26] <flw> Writing Makefile for Perl6::Pugs

[11:26] <flw> D:\MoChou\pugs>nmake

[11:26] <flw> Microsoft (R) Program Maintenance Utility   Version 1.50

[11:26] <flw> Copyright (c) Microsoft Corp 1988-94. All rights reserved.

[11:26] <flw> cp lib/Perl6/Pugs.pm blib\lib\Perl6\Pugs.pm

[11:26] <flw> NMAKE : fatal error U1052: file 'Makefile' not found

[11:26] <flw> Stop.

[11:26] <flw> NMAKE : fatal error U1077: 'C:\WINNT\system32\cmd.exe' : return code '0x2'

[11:26] <flw> Stop.

[11:26] <flw> D:\MoChou\pugs>

[11:26] <flw> ================================================

[11:27] <flw> D:\MoChou\pugs>svn up

[11:27] <flw> 􏿽xD3􏿽xDA􏿽xD0􏿽xDE􏿽xB6􏿽xA9􏿽xB0􏿽xE6 524􏿽xA1􏿽xA3

[11:27] <flw> D:\MoChou\pugs>perl makefile.pl

[11:27] <flw> *** Readline support disabled.  If you want readline support,

[11:27] <flw> please install Term::ReadLine::Gnu from CPAN, as well as

[11:27] <flw> the GNU Readline headers and shared library.

[11:27] <flw> Checking if your kit is complete...

[11:27] <flw> Looks good

[11:27] <flw> Writing Makefile for Kwid

[11:27] <flw> Writing Makefile for Pugs::MakeMaker

[11:27] <flw> Writing Makefile for Test

[11:27] <flw> Writing Makefile for Perl6::Pugs

[11:27] <flw> D:\MoChou\pugs>nmake

[11:27] <flw> Microsoft (R) Program Maintenance Utility   Version 1.50

[11:27] <flw> Copyright (c) Microsoft Corp 1988-94. All rights reserved.

[11:27] <flw> cp lib/Perl6/Pugs.pm blib\lib\Perl6\Pugs.pm

[11:27] <flw> NMAKE : fatal error U1052: file 'Makefile' not found

[11:27] <flw> Stop.

[11:27] <flw> NMAKE : fatal error U1077: 'C:\WINNT\system32\cmd.exe' : return code '0x2'

[11:28] <flw> Stop.

[11:28] <flw> D:\MoChou\pugs>

[11:28] <flw> ================================================

[11:29] <dada> uhm

[11:30] <dada> what does 'dir Makefile' say again?

[11:33] <flw> ================================================

[11:33] <flw> D:\MoChou\pugs>nmake clean

[11:33] <flw> Microsoft (R) Program Maintenance Utility   Version 1.50

[11:33] <flw> Copyright (c) Microsoft Corp 1988-94. All rights reserved.

[11:33] <flw> cd ext/Kwid/ && D:\Perl\bin\perl.exe -Iinc -MExtUtils::Command -e test_f

[11:33] <flw> Makefile && nmake clean

[11:33] <clkao> nopaste please

[11:35] <flw> dada: please receive.

[11:40] <dada> flw: I'm firewalled

[11:40] <dada> oops

[11:43] <nothingmuch> salad++

[11:45] <nothingmuch> perlbot: nopaste

[11:45] <perlbot> Paste your code here and #perl will be able to view it: http://sial.org/pbot/perl

[11:45] <nothingmuch> flw - you should use that

[11:46] <flw> ok

[11:47] <flw> http://sial.org/pbot/7977

[11:49] <nothingmuch> err, set the chanel to #perl6

[11:52] <pasteling> "flw" at 221.218.15.49 pasted "make pugs failed!" (78 lines, 2.9K) at http://sial.org/pbot/7978

[11:53] <nothingmuch> ok, now find someone who knows more than me about windows/nmake ;-)

[11:54] <nothingmuch> huh!

[11:55] <nothingmuch> the makefile works

[11:55] <nothingmuch> cp lib/Perl6/Pugs.pm blib\lib\Perl6\Pugs.pm

[11:55] <nothingmuch> odd

[11:55] <dada> flw: I don't know

[11:55] <nothingmuch> does windows have the equiv of strace?

[11:55] <dada> nothingmuch: I don't think so

[11:55] <nothingmuch> that way you can find out rather easily exactly what makefile path it's trying to open

[11:55] <nothingmuch> by looking for chdir and open syscalls

[11:55] <nothingmuch> well, that's as far as I go

[11:56] <nothingmuch> except that you should try going into ext/*

[11:56] <nothingmuch> and see if there's a makefile in each one of those

[11:56] <dada> the only thing that I can think of is some misunderstanding due to unicode, probably

[11:56] <nothingmuch> yah, that happens a lot with make stuff

[11:56] <nothingmuch> many perl modules' compilations break unless you set LC_ALL=C

[11:57] <nothingmuch> if your username has funny chars

[11:57] <nothingmuch> mine, for example, is יובל קוג'מן

[11:57] <nothingmuch> make doesn't like that

[12:01] <thesaboteur> Im really new at perl, I want to tell perl to only print out parts of a string and to discard the other parts.

[12:01] <thesaboteur> print "From:\e[1;31m $_[0]\e[0m  : $_[2]\n"

[12:02] <thesaboteur> $_[2] this part here has a huge string in it

[12:02] <thesaboteur> I want to chop out stuff like <html><body ichatballooncolor=

[12:02] <flw> 􏿽xB2􏿽xBB̫􏿽xC3􏿽xF7􏿽xB0􏿽xD7􏿽xD6􏿽xEE􏿽xCE􏿽xBB􏿽xB5􏿽xC4􏿽xD2􏿽xE2􏿽xCB􏿽xBC􏿽xA1􏿽xAD􏿽xA1􏿽xAD

[12:03] <dada> thesaboteur: what exactly do you want to chop out? a specified number of chars, or html tags, or what?

[12:04] <thesaboteur> well here's the full string: <html><body ichatballooncolor="#ACB5BF" ichattextcolor="#000000"><font face="Helvetica" ABSZ=12 color="#000000">j</font></body></html>

[12:04] <thesaboteur> I want to chop out everything except for "j"

[12:04] <thesaboteur> but j will be different everytime

[12:05] <thesaboteur> and their are other variables like "#ACB5BF"  ="#000000" etc.

[12:05] <dada> $_[2] =~ s/<[^>]+>//g;

[12:06] <wolverian> thesaboteur: see HTML::Parser, and the various higher level interfaces to it

[12:08] <thesaboteur> arg this more complicated then I thought it would be

[12:09] <metaperl> HTML::Tree is the way thesaboteur

[12:09] <metaperl> you just want the content of the font tag

[12:09] <metaperl> my $tree = HTML::TreeBuilder->new_from_file($file);

[12:09] <metaperl> my $font = $tree->look_down ('_tag' => 'font');

[12:10] <metaperl> my ($content) = $font->content;

[12:10] <metaperl> print $content

[12:10] <metaperl> done

[12:10] <thesaboteur> er yea but I just started messing with perl yesterday so.

[12:10] <nothingmuch> thesaboteur: if the html is the exact same thing all the time you can also just snip that out, either like dada did, or match out the text with the whole strings on either side

[12:10] <nothingmuch> metaperl++

[12:11] <nothingmuch> thesaboteur: that doesn't mean you shouldn't do it right =)

[12:11] <thesaboteur> nothingmuch: yeah I don't know how to put what dada gave me into my current setup though.

[12:11] <metaperl> nothingmuch: thanks

[12:11] <dada> thesaboteur: right before your print line

[12:11] <nothingmuch> well, it's really simple, just take that chunk, and put it in, but put a 'use HTML::TreeBuilder' in front... Let me explain line by line

[12:12] <nothingmuch> my $tree = # this declares a variable named tree

[12:12] <nothingmuch> HTML::Tree::Builder->new_from_file($file)

[12:12] <nothingmuch> and assigns it the return value of the method new_from_file called on the class HTML::TreeBuilder

[12:12] <nothingmuch> that is to say

[12:12] <nothingmuch> it tells HTML::Tree::Builder to create a new tree object, from the file whose path is in the strig $file

[12:13] <thesaboteur> yea I know roughly how it works (I think).

[12:13] <nothingmuch> ok, so we have the HTML tree of the document inside $tree

[12:13] <nothingmuch> we ask it to find us an element named font

[12:13] <nothingmuch> which is another object

[12:13] <nothingmuch> we take that

[12:13] <nothingmuch> and ask it to give us it's content

[12:13] <nothingmuch> which is a string

[12:13] <nothingmuch> we print that

[12:14] <thesaboteur> yeah I see

[12:14] <nothingmuch> http://search.cpan.org/perldoc?HTML::TreeBuilder <-- where to find documentation, and installation links

[12:14] <nothingmuch> or perldoc HTML::TreeBuilder if you have it installed

[12:14] <nothingmuch> if you don't have it installed, 'perl -MCPAN -e shell'

[12:15] <nothingmuch> it will ask you to configure some options

[12:15] <nothingmuch> use the default for what you don't care about

[12:15] <nothingmuch> and then when you see a prompt, type 'install HTML::TreeBuilder'

[12:15] <thesaboteur> ok kool, thanks

[12:15] <nothingmuch> you can also use the download link from search.cpan.org

[12:15] <nothingmuch> untar that

[12:15] <thesaboteur> I didn't know I could do that

[12:15] <nothingmuch> and do 'perl Makefile.PL' in the untarred dir

[12:16] <thesaboteur> yeh I installed 2 modules already

[12:16] <nothingmuch> but that won't automatically tell you about/install  dependancies

[12:19] <thesaboteur> that's badass it's installing now

[12:19] <thesaboteur> it's like apt but for perl :)

[12:20] <nothingmuch> you can also try CPANPLUS

[12:20] <nothingmuch> it's the next version of the CPAN shell

[12:20] <nothingmuch> a complete rewrite

[12:20] <thesaboteur> kool

[12:23] <thesaboteur> once I run perl -MCPAN -e shell do I have to configure everytime or can I run this a different way?

[12:27] <thesaboteur> I ran it as non root the first time, so trying again now.

[12:29] <nothingmuch> no, it saves it either in /Library/Perl/..../CPAN/MyConfig.pm

[12:29] <nothingmuch> or something like that

[12:29] <nothingmuch> or under ~/.cpan

[12:29] <nothingmuch> i forget the diffs between CPAN and CPANPLUS in that respect

[12:29] <metaperl> CPANPLUS works well for me for non-root installs. CPAN did not

[12:30] <nothingmuch> CPAN is hard to trick to work as nonroot

[12:30] <nothingmuch> but it can be done

[12:30] <nothingmuch> CPANPLUS is better thought out for that

[12:31] <thesaboteur> yeh it's working ok for me now  

[12:35] <nothingmuch> beh, what an annoying machine

[12:35] <thesaboteur> dada: thanks what you gave me seems to work ok

[12:35] * nothingmuch has been running coverage analisys for a product on a box

[12:35] <nothingmuch> for 2 weeks

[12:35] <nothingmuch> err, it'll take 2 weeks

[12:35] <nothingmuch> i've been at it for 1

[12:35] <nothingmuch> and all the trouble that could happen is

[12:35] <nothingmuch> now it's not powering up

[12:35] <nothingmuch> =(

[12:36] <thesaboteur> er that sucks

[12:36] <nothingmuch> uhuh

[12:36] <thesaboteur> what happens when you turn it on, any fans spin or anything?

[12:36] <nothingmuch> nada

[12:36] <nothingmuch> we had a power failure

[12:37] <thesaboteur> eh

[12:37] <nothingmuch> seems like the power supply took some punishment

[12:37] <thesaboteur> yeah I would start there, what kinda box is it.

[12:37] <nothingmuch> our sysop will deal with it promply, though

[12:37] <nothingmuch> some mega super x86

[12:37] <nothingmuch> fast

[12:37] <nothingmuch> powerful

[12:37] <nothingmuch> but not professional hardware

[12:37] <nothingmuch> and if not our sysop, our vice president of R&D

[12:37] <thesaboteur> heh

[12:38] <nothingmuch> he's an EE guy

[12:38] <nothingmuch> and loves nostalgic trips

[12:38] * nothingmuch wants sun/ibm to produce $20,000 x86 boxes

[12:38] <nothingmuch> with reduntant power supplies

[12:38] <nothingmuch> and little 'attn' leds

[12:38] <thesaboteur> Now I just gotta get this thing to stop logging me off when I send lol.

[12:39] <nothingmuch> so that we wouldn't spend so much time fixing them

[12:39] <nothingmuch> i think that's a bot doing that

[12:39] <nothingmuch> lol

[12:39] <nothingmuch> hmm

[12:39] <shapr> My box right next to me has redundant power supplies, and it only cost me 2500euro.

[12:39] <thesaboteur> sun's new server the v40z er something like that has a mini computer inside of it, to give you detailed stats if it has problems, it's own little bios and stuff, hella kool.

[12:39] <nothingmuch> we have sunfires here

[12:40] <nothingmuch> an age old sun workstation

[12:40] <nothingmuch> which only recently had keyboard trouble

[12:40] <nothingmuch> also, a 192mhz aix box

[12:40] <nothingmuch> i don't know how it's still alive

[12:41] <thesaboteur> we used to have tons of old ss5 pizza boxes.

[12:41] <nothingmuch> these things are just higher quality hardware

[12:41] <nothingmuch> we have two x86 pizzaboxes by sun

[12:41] <nothingmuch> but i don't know how good they are

[12:41] <thesaboteur> lol

[12:41] <nothingmuch> and 5 by asus

[12:41] <nothingmuch> i hope they'll live

[12:41] <nothingmuch> but these are servers

[12:42] <nothingmuch> mail, dns, pdc, etc

[12:42] <nothingmuch> the QA/development are the ones giving us crap

[12:42] <nothingmuch> and they're cheap

[12:42] <thesaboteur> yea we got tired of running servers on pizza boxes so we got an E4500 one day, big improvement for the cheap price.

[12:43] <thesaboteur> i've never really been a big sparc fan though, haven't tried sol10 yet though.

[12:43] <nothingmuch> sounds reliable

[12:43] <nothingmuch> they're cheap now, too

[12:44] <thesaboteur> that e4500 gave us alot of processor problems at first, that's fixed and it still prints goofy power supply errors to the console every now and then.

[12:44] <nothingmuch> we have an e3500 as a dev machine at work

[12:44] <nothingmuch> 8 cpus

[12:44] <nothingmuch> all slow, but still, 8 of them =)

[12:44] <thesaboteur> yeah that's what we had

[12:44] <thesaboteur> 5gb ram

[12:44] <nothingmuch> anywho, we don't have performance trouble

[12:44] <thesaboteur> 2 18gb external drives

[12:44] <nothingmuch> we have reliability trouble

[12:44] <nothingmuch> and the sun/aix/hpux qa machines are good quality

[12:44] <thesaboteur> yea that sucks

[12:45] <nothingmuch> because you can't buy cheap one

[12:45] <nothingmuch> s

[12:45] <nothingmuch> but the linux/windows qa machines are crummy

[12:45] <thesaboteur> heh

[12:46] <nothingmuch> they're faster, but they break

[12:46] <thesaboteur> I've never really had to many major problems with x86 stuff.

[12:46] <nothingmuch> and the one i worked on just dies

[12:46] <nothingmuch> died

[12:46] <nothingmuch> so i'm whyning

[12:46] <nothingmuch> whining

[12:46] <thesaboteur> yea

[12:46] <nothingmuch> ok, well, it was fixed

[12:46] * nothingmuch likes the sysop team =)

[12:47] <nothingmuch> good think sqlite is transaction happy

[12:48] <thesaboteur> I get to go home in an hour

[12:49] <nothingmuch> where is home?

[12:49] <shapr> Home is where the heart is.

[12:49] <thesaboteur> dc metro area

[12:49] <nothingmuch> it's very early there, no?

[12:49] <shapr> Happily, I keep mine in my chest, so wherever I am, there you go.

[12:49] <thesaboteur> yea, nearly 8am here

[12:50] <nothingmuch> 1 hour day? or is there some catch

[12:50] <thesaboteur> heh I work the 1-9

[12:50] <nothingmuch> ah

[12:50] <nothingmuch> at programming?

[12:50] <nothingmuch> or do you babysit boxes at night?

[12:50] <thesaboteur> I'm supposed to yell "fire" in the event of one.

[12:51] <thesaboteur> yeah "Pat's the boxes"

[12:51] <nothingmuch> they are that common, huh?

[12:51] <nothingmuch> ;-)

[12:51] <nothingmuch> we have the backup tapes in a fire safe

[12:51] <nothingmuch> and everything else is insured

[12:51] <thesaboteur> so while im here making sure they don't blowup im trying to learn perl 

[12:52] <thesaboteur> just cause it sounded good at the time

[12:52] <nothingmuch> well, in that case don't have too much fun

[12:52] <thesaboteur> nothing else better to do

[12:52] <nothingmuch> otherwise you might not notice and lose your job ;-)

[12:52] <thesaboteur> it would be hard to miss it

[12:53] <thesaboteur> lots of loud buzzers and bells and loud sound things anyways

[12:53] <nothingmuch> for nonfires i hope you use nagios

[12:53] <nothingmuch> or equiv

[12:53] <thesaboteur> heh I had mentioned nagios when they interviewed me and they didn't know what I was talking about :/

[12:54] <shapr> aieee

[12:54] <shapr> run away!

[12:54] <nothingmuch> beh!

[12:54] <thesaboteur> they use some proprietary closed source glorified "ping monitor" *cringe*

[12:54] <shapr> Reminds me of a job where I interviewed and they didn't know what recursive descent parsers were....

[12:55] <nothingmuch> if they want something propietry there's IPSentry which is very simple, or BB which is popular

[12:55] <thesaboteur> eh I don't know what that is either.

[12:55] <shapr> thesaboteur: do you do parsing for a living?

[12:55] <thesaboteur> shapr: nope :)

[12:55] <shapr> see, that's okay then ;-)

[12:55] <shapr> These guys did...

[12:57] <thesaboteur> that's kinda like this database company I knew, they refused to use linux for any of there database stuff, something about not point and clicky enough for them.

[12:57] <thesaboteur> so anyways afk for a few gotta go check on the boxes.

[12:58] <shapr> Worst thing yet was a job where I got hired to increase the average cluefulness of fifteen or twenty other programmers. All of their java code used static methods, no object instances. All of their if then calls had an empty "else {};" because they didn't know you could leave it out.

[13:02] <nothingmuch> oh crap

[13:02] <nothingmuch> [root@safta yuval]# swapon -a

[13:02] <nothingmuch> swapon: /dev/hdd3: No such device or address

[13:02] <nothingmuch> no wonder tests are failing

[13:02] <nothingmuch> uck

[13:02] * nothingmuch pays sysops another visit

[13:05] <thesaboteur> well thanks for the help everyone, Im gonna go, gotta go do stuff. l8r

[13:20] <flw> fayland 􏿽xD4􏿽xDA􏿽xC2􏿽xF0􏿽xA3􏿽xBF

[13:20] <shapr> was that koi-8?

[13:21] <hcchien> fayland: hola

[13:21] <fayland> hcchien,hi

[13:22] <hcchien> fayland: do you use utf-8 for the p6l10n-zh_cn?

[13:22] <fayland> i'm not sure. maybe gb2312

[13:22] <fayland> need uft-8?

[13:23] <hcchien> It would be better. :)

[13:23] <fayland> i'll take care. :)

[13:23] <hcchien> thanks. 

[13:23] <nothingmuch> utf-8 is the way perl6 is looking

[13:24] <theorbtwo> utf-8 is the way perl6 is looking to prefer, anyway.

[13:25] <theorbtwo> autrijus has stated that pugs will not accept latin1 « and », but only utf8, and it only seems fair to hold the zh_* people to the same standard.

[13:26] <nothingmuch> i think i annoyed him

[13:26] <nothingmuch> i normally go to great length to use utf8

[13:26] <nothingmuch> because hebrew is very unreliable otherwise

[13:26] <nothingmuch> but when i submtited t/op/zip.t and t/op/quoting.t i forgot

[13:26] <hcchien> hmm..., theorbtwo can type chinese? :)

[13:27] <shapr> I really prefer utf-8 myself.

[13:27] <theorbtwo> Type, possibly.  Understand, no.

[13:27] <nothingmuch> now my vimrc has set encoding=utf8... I hope that doesn't hurt other things too bad

[13:27] <theorbtwo> ﬒

[13:28] <hcchien> I really prefer utf-8 myself either.

[13:28] <theorbtwo> 万

[13:29] <theorbtwo> There we are.  Chinese.  And I even know it means 10,000, because the unicode character browser told me so.

[13:30] <hcchien> anyway, is anyone else interesting in p6l10n?

[13:32] <nothingmuch> i might be tempted to say i will do hebrew

[13:32] <nothingmuch> but i know i won't

[13:32] <nothingmuch> =)

[13:35] <theorbtwo> I suspect it'd be a very good way to force yourself to read the document you're translating hard.

[13:36] <theorbtwo> But then again, I'm monolingual, and thus have little experience trying it.

[13:37] <nothingmuch> well, true that

[13:37] <nothingmuch> but i'm very bad with either language

[13:37] <hcchien> now we have only .tw and .cn.

[13:37] <nothingmuch> and languages in general

[13:37] <nothingmuch> so... =)

[13:37] <nothingmuch> you might be able to get lumi to do it

[13:38] <theorbtwo> You seemed interested in l10n earlier, when you wanted to write p6 code in Hebrew.

[13:39] * theorbtwo sees nthListEl' (l:ls) 1 = l in Haskell Tutorial, and thinks "wow, it's already in Hebrew!"

[13:42] <nothingmuch> ah

[13:42] <nothingmuch> no, i didn't want to do it

[13:42] <nothingmuch> i just showed how it might look like

[13:42] <nothingmuch> i will only program in english, or the lingua franca of the period depending on what it is

[13:43] <nothingmuch> and we don't see that changing anytime soon, do we?

[13:43] <shapr> Doesn't lingua franca necessarily imply French?

[13:43] <nothingmuch> anyone can learn perl more easily than hebrew, and most people already english, so...

[13:43] <nothingmuch> yeah, that always bugged me, shapr... =/

[13:43] <shapr> I always purposely misquote and say "lingua fracas"

[13:45] <nothingmuch> the STM article autrijus gave me yesterday is really nice

[13:45] <shapr> Software Transactional Memory?

[13:46] <nothingmuch> uhuh

[13:46] <shapr> that's some powerful stuff

[13:46] <shapr> SPJ is hoping to use that to make GHC SMP-happy.

[13:46] <nothingmuch> indeed it is

[13:46] <shapr> I'm pretty sure it will work out nicely.

[13:46] * nothingmuch really sees haskell becomming a major part of his work someday soon

[13:46] <nothingmuch> err, play

[13:46] <shapr> I do wish I could work region allocation in there somewhere.

[13:47] <shapr> I get paid to do Haskell =)

[13:47] <shapr> Amazingly, because I wrote an open source Haskell app and one of my clients wanted to use it.

[13:47] <nothingmuch> ooh

[13:47] <nothingmuch> what app was that?

[13:48] <shapr> It's a webapp for searching mailman mailing list archives. I wasn't able to find an app that did that, so I wrote one for my own use.

[13:48] <shapr> It took me about four evenings of spare time to make it work, and it was about 200 lines of code.

[13:49] <shapr> It's gotten a bit bigger since I've had to handle weird special cases like duplicate message-id and broke RFC dates.

[13:49] * nothingmuch hopes he lives to see the day when computers will be tought what we want of them

[13:49] <nothingmuch> ad they will design extensible, opaque protocols to handle the mess themselves

[13:52] <nothingmuch> i have a question

[13:52] <nothingmuch> about how something might look in haskell

[13:52] <nothingmuch> this is a project that i'm sort of working on right now

[13:52] <nothingmuch> you could call it a testing automation thing

[13:53] <nothingmuch> but really it is something that must run jobs on abstract resources (remote machines, mostly)

[13:53] <nothingmuch> in a certain order

[13:53] <nothingmuch> and collect results

[13:54] <shapr> Have you seen QuickCheck?

[13:54] <nothingmuch> the resources are objects which normally look like semaphores

[13:54] <nothingmuch> tmoertel's mentioned it many times on his website

[13:54] <nothingmuch> i went through it once

[13:54] <nothingmuch> anywho

[13:55] <shapr> you run a job on a remote machine and want a certain result?

[13:55] <nothingmuch> not only that

[13:55] <nothingmuch> for example, to run a test you need 'resource produc daemon running', and resource '100mb of ram free'

[13:55] <nothingmuch> and resource 'the target platform is xyz'

[13:55] <nothingmuch> a group of resources that can be granted is typically sliced by machine

[13:56] <nothingmuch> i.e. machine X is a sun box, with 8gb of ram, etc

[13:56] <nothingmuch> it also has some funkier resources, like 'product is running'

[13:56] <nothingmuch> which is a resource that when claimed will start a new job, whose resource is 'machine isa same as where i started'

[13:56] <nothingmuch> which requires 'product binaries are available'

[13:57] <nothingmuch> and starts the product

[13:57] <nothingmuch> and so on and so forth

[13:57] <shapr> sounds nifty

[13:57] <nothingmuch> it's now trivial to make nightly builds with this, load balance tests, and so forth

[13:57] <theorbtwo> Sounds an awful lot like apt-get.

[13:57] <nothingmuch> theorbtwo: simpler example: make

[13:57] <shapr> sounds like an interesting cross between design by contract, STM-optimistic locking, and unit testing.

[13:57] <nothingmuch> ooh, it's 16:00

[13:57] <shapr> it's 15:00 here.

[13:58] <theorbtwo> Not sure about simpler.

[13:58] <nothingmuch> time for cigarette & coffee

[13:58] <nothingmuch> anywho, the protocol between resources is 'you were granted', which gives you a grant

[13:58] <nothingmuch> you can claim the grant, or forefit it, and it might be revoked

[13:58] <nothingmuch> this allows jobs which depend on each other's serial execution to share a resource

[13:58] <nothingmuch> and not cause deadlock

[13:58] <theorbtwo> But yeah, same thing.

[13:59] <nothingmuch> when you got a grant, you have a token

[13:59] <nothingmuch> which you return when you're done

[13:59] <nothingmuch> the allocator api is for resources and requests

[13:59] <nothingmuch> can you grant this now?

[13:59] <nothingmuch> can you grant this ever?

[13:59] <nothingmuch> etc

[13:59] <nothingmuch> it's very oop

[13:59] <nothingmuch> and i wondered how it might look in haskell/fp

[13:59] <nothingmuch> but i've got to go for 5 mins

[14:00] <nothingmuch> otherwise Uri's timeline is ruined ;-)

[14:00] <shapr> sounds a lot like STM, but you might also want to look at QuickCheckM

[14:08] <viirya> autrijus: ping

[14:15] <nothingmuch> anywho,

[14:15] <nothingmuch> i'm sorry to say this

[14:15] <nothingmuch> but some guy who left work a week ago to study is having his goodbye party

[14:15] <nothingmuch> and he brought sushi

[14:15] <nothingmuch> so i'm introducing further delays, or perhaps a rollback of the conversation ;-)

[14:15] <shapr> heh

[14:15] <shapr> sushi!

[14:16] <nothingmuch> to reimburse you a bit

[14:16] <nothingmuch> i'll give you a tip

[14:16] <nothingmuch> brahm's first cello sonata

[14:16] <nothingmuch> go get it, it's good for you

[14:17] <autrijus> viirya: pong

[14:17] <autrijus> greetings, folks, btw.

[14:17] * autrijus finished backlogging

[14:17] <shapr> hiii autrijus!

[14:17] <autrijus> finally got back from $work

[14:17] * shapr boings cheerfully

[14:18] <autrijus> convinced gpg to look like pgp for a complex large application on aix.

[14:18] <autrijus> painful stuff.

[14:18] <shapr> I've seen some wrappers that do that, is that what you used?

[14:18] <autrijus> yeah, I used pgpgpg

[14:18] <autrijus> but it's not a complete emulation

[14:18] <autrijus> so I made it more complete.

[14:19] * autrijus still backlogging

[14:19] * shapr cleans out the backlog

[14:19] <theorbtwo> Allo, autrijus.

[14:20] <autrijus> yo theorbtwo. how's life?

[14:21] <viirya> autrijus: 'require' prim searchs incs not recursively. you know?

[14:21] <autrijus> why should it search recursively?

[14:21] <autrijus> perl5 does not

[14:21] <viirya> autrijus: causing make test failure now.

[14:21] <autrijus> really.

[14:22] <tmoertel> autrijus: do you want darcs patches sent to [email@hidden.address] ?

[14:22] <autrijus> tmoertel: yes, that is my intention

[14:22] <autrijus> so when I'm not available other committers can freely commit them after some reviews

[14:22] <theorbtwo> Not bad.  A bit worried that some of my solutions to the exercises on YAHT aren't that hot.

[14:22] <autrijus> viirya: what make test failure?

[14:22] <autrijus> theorbtwo: well, they work, that's the important bit :)

[14:22] <viirya> autrijus: make test could work, I mean.

[14:23] <viirya> /could/couldn't/

[14:23] <autrijus> trying to duplicate.

[14:23] <viirya> pugs doesn't find out Test.pm.

[14:24] <theorbtwo> Most of them.  Some I am thus far unable to slove.

[14:25] <autrijus> it all worksforme.

[14:25] <autrijus> viirya: osx?

[14:25] <viirya> autrijus: linux

[14:25] <autrijus> weird. let me boot into fbsd.

[14:27] <viirya> How it works? Now requireInc just search ./Test.pm in code.

[14:28] <autrijus> are you working on the darcs repo?

[14:29] <viirya> autrijus: no, svk.

[14:29] <autrijus> weeird.

[14:29] <autrijus> rebooting to fbsd now, bbiab.

[14:39] <autrijus> rebooted.

[14:39] <clkao> you seem to have a slow computer?

[14:39] <Limbic_Region> that's a neat trick - rebooting without losing IRC connection

[14:39] <Limbic_Region> ;-)

[14:39] <autrijus> Limbic_Region: it's called "GNU Screen"

[14:39] <autrijus> clkao: I have a semifunctional freebsd.

[14:39] <autrijus> got no bandwidth in .cn to set it up

[14:39] <clkao> autrijus: meanwhile, be glad that you use asus.

[14:39] <clkao> http://www.beareyes.com.cn/2/lib/200503/05/20050305003.htm

[14:39] <clkao> it seems very suitable for, uh, heavy duty users like you

[14:40] <autrijus> viirya: make test worksforme on fbsd.

[14:40] <statico> <

[14:40] <statico> clkao: as long as it's asus with via chipsets, not nvidia...

[14:40] <autrijus> viirya: can you start from a clean tree?

[14:40] <autrijus> I'll do the same.

[14:42] <viirya> autrijus: All I do is 'make test'. It doesn't work.

[14:42] <autrijus> viirya: did you do "make purge"?

[14:42] <autrijus> then "perl Makefile.PL" etc?

[14:42] <viirya> why doing make pruge?

[14:43] <autrijus> because a certain ingy broke the PugsConfig.pm process twice

[14:43] <viirya> /pruge/purge/

[14:43] <autrijus> I seem to remember that there's patch somewhere to hook PugsConfig.pm as part of "make" dependency

[14:43] <viirya> autrijus: I check out a new copy of pugs.

[14:44] <autrijus> yeah, theorbtwo had a patch.

[14:44] <autrijus> theorbtwo: are you not a committer?

[14:44] <autrijus> theorbtwo: would you like to be one and commit it by yourself?

[14:46] <autrijus> mm -O3.

[14:46] <autrijus> I think the gain on making tests is little

[14:46] <autrijus> and the loss on recompilation is larger by comparison

[14:46] <autrijus> as has been shown here

[14:47] <autrijus> so I'll refrain from making optimization the default.

[14:47] <autrijus> I will, however, add an "optimized" target.

[14:47] <autrijus> so you can do "make optimized" and be happy.

[14:48] <autrijus> hi fayland!

[14:48] <autrijus> I understand you failed making pugs?

[14:48] <Coke_> seen obra

[14:48] <autrijus> hi Coke_ :)

[14:49] <Coke_> whoops. wrong window. Hi, autrijus.

[14:49] <fayland> ya,let me do it again

[14:49] <hcchien> fayland++  # convert the doc to utf-8

[14:49] <fayland> wait a moment

[14:49] <fayland> :)

[14:50] <Coke_> hey, autrijus - can you add <a name> markers to http://svn.perl.org/perl6/pugs/trunk/docs/01Overview.html ?

[14:50] <autrijus> Coke_: I'd gladly accept patches that does that :)

[14:50] <Coke_> (I'd like to link to "What was the revised bootstrapping plan?" from parrotcode.org)

[14:51] <fayland> autrijus: NMAKE : fatal error U1052: file 'Makefile' not found

[14:51] <Coke_> is pugscode.org in the same repo as parrotcode.org ?

[14:51] <autrijus> mm gugod volunteered to kwidify PA01

[14:51] <fayland> autrijus, just 'svn up' and perl makefile.pl nmake test,and return that

[14:51] <autrijus> Coke_: no, it is not.

[14:51] <autrijus> fayland: rename your C:\Program Files\Microsoft Visual Studio*

[14:51] <autrijus> or just remove that from your path

[14:52] <autrijus> and run perl Makefile.PL again.

[14:52] <fayland> ok.

[14:53] <autrijus> viirya: so it works now?

[14:53] <autrijus> I've committed theorbtwo's patch as r525

[14:53] <autrijus> you no longer need to do "make purge" again.

[14:53] <autrijus> also, for people who's into fast pugs, "make optimized" works now.

[14:54] <autrijus> greetings stevan-san.

[14:55] <fayland> autrijus, it doesn't work. the same result.

[14:55] <autrijus> got some time to help me to redo the PA01 chunk of "Is there a CPAN for Perl 6 modules?" ?

[14:55] <autrijus> fayland: so nmake is still in your path?

[14:55] <stevan> morning autrijus (at least morning for me that is)

[14:55] <autrijus> fayland: try to find out where is nmake.exe and remove it from path.

[14:55] <hcchien> hmm...., test failed on op/not

[14:56] <fayland> I have two nmake, one at c:\usr\bin,another just removed

[14:56] <Steve_p> Yeah, op still needs to be changed per Larry's comments

[14:56] <stevan> hcchien: I think luqui un_todo-ed the tests which are bugs and not un-implemented

[14:56] * Steve_p thought he TODO'd those 

[14:56] <autrijus> fayland: ok, remove c:\usr\bin from your path as well.

[14:56] <stevan> autrijus: are you asking if I want to help on PA01?

[14:56] <autrijus> fayland: or rename nmake.exe

[14:57] <autrijus> stevan: yeah. if you don't feel like doing it, I'll ask for ingy's help :)

[14:57] * autrijus is in code mode not docs mode

[14:57] <hcchien> so I should ignore the failed and make install? :)

[14:57] <autrijus> hcchien: yes, that's the plan

[14:57] <nothingmuch> yummy

[14:57] <stevan> autrijus: I can do that, sure

[14:57] <nothingmuch> morning stevan 

[14:57] <stevan> hey nothingmuch 

[14:57] <nothingmuch> we had wine too

[14:57] <hcchien> autrijus: not marked as 'TODO'? 

[14:57] <nothingmuch> =)

[14:57] <autrijus> stevan++

[14:57] <nothingmuch> (i had wine leftovers)

[14:57] <autrijus> hcchien: luqui's idea is that TODO means todo

[14:58] <autrijus> i.e. 

[14:58] <autrijus> missing features

[14:58] <autrijus> and misimplemented stuff should fail

[14:58] <autrijus> to give them higher priority.

[14:58] <autrijus> now I'd gladly accept a patch to Makefile.PL that says that.

[14:58] <scw> What's the easiest way to test single .t file?

[14:58] <autrijus> i.e. "Now, type 'make test' to test -- some tests may fail; that's okay inbetween releases... etc"

[14:58] <autrijus> scw: prove.

[14:59] <autrijus> env HARNESS_PERL=./pugs prove t/op/foo.t

[14:59] <fayland> autrijus, it returns cann't find nmake and lwp from microsoft, then return the same.

[14:59] <theorbtwo> autrijus, thanks for the offer of committer bits, but I'd rather wait until I write a patch that just goes in.

[15:01] <stevan> autrijus: where is the original PA01? docs/01Overview.html?

[15:01] <scw> Seems the @INC is not corrected, I got: NonTerm "/usr/share/perl/5.8/Test.pm" (line 31, column 1)

[15:01] <autrijus> stevan: yup, that is the one.

[15:01] <autrijus> scw: "make purge" ?

[15:02] <autrijus> scw: oh, prove?

[15:02] <fayland> autrijus: Fetching 'Nmake15.exe' from download.microsoft.com...

[15:02] <scw> autrijus: ya

[15:02] <fayland> autrijus: that's right?

[15:02] <autrijus> fayland: yeah, so Makefile is really not there for nmake. that's weird.

[15:02] <autrijus> fayland: are you under cygwin?

[15:02] <viirya> autrijus: certainly weird.

[15:02] <scw> autrijus: I used  'HARNESS_PERL=./pugs prove t/op/assign.t'  and got such error..

[15:02] <viirya> autrijus: it doesn't work.

[15:02] <fayland> no cygwin.

[15:03] <theorbtwo> Why not just ./pugs t/op/assign.t ?

[15:03] <stevan> scw: I am getting the same thing "NonTerm "/System/Library/Perl/5.8.1/Test.pm" (line 31, column 1)"

[15:03] <viirya> autrijus: complaining Can't locate Test.pm

[15:03] <viirya> autrijus: stevan's problem is that.

[15:03] <fayland> autrijus: but i can see makefile in the folder

[15:03] <nothingmuch> mine too, btw

[15:03] <autrijus> scw: add this

[15:03] <autrijus> PERL6LIB=./ext/Test/lib

[15:04] <nothingmuch> s/\./\$PWD/; # works under all shells, less problematic

[15:04] <scw> autrijus: This works :)

[15:04] <autrijus> fayland: nmake /f Makefile

[15:04] <nothingmuch> stevan: go write yourself down in pugs.kwiki.org/?OSXPeople

[15:04] <viirya> autrijus: after adding that, it surely works.

[15:05] <viirya> autrijus: but why not search all dictionaries under Incs.

[15:05] <fayland> autrijus: NMAKE : fatal error U1052: file 'Makefile' not found

[15:06] <fayland> autrijus, still the same

[15:06] <autrijus> viirya: i'd argue it's NotABug then. inconvenience, yes, but not a bug.

[15:06] <autrijus> fayland: nmake /f c:\absolute\path\to\Makefile

[15:07] <viirya> autrijus: It's your intention to just add module one by one?

[15:07] <autrijus> viirya: if you do "make install"

[15:07] <autrijus> then it will just pick things up.

[15:07] <autrijus> before "make install", yes.

[15:07] <autrijus> I'll remove PERL5LIB and PERLLIB from the search path now.

[15:08] <viirya> autrijus: ok. see.

[15:08] <nothingmuch> stevan: did you write a test for your mail titled 'Bugs' of yesterday?

[15:08] <fayland> autrijus: no help.

[15:08] <fayland> autrijus: :(

[15:08] <stevan> nothingmuch: yes, t/op/sub_return_values.t has some tests for that

[15:08] <autrijus> fayland: that is a bit too weird.

[15:08] <nothingmuch> stevan++

[15:09] <fayland> autrijus: no body else met that?

[15:09] <autrijus> nope.

[15:09] <nothingmuch> somehow i missed it in the svn commit RSS

[15:09] <autrijus> fayland: ok, try these commands:

[15:09] <hcchien> should we merge t/0*.t to t/Synopsis ?

[15:09] * hcchien is back to pugs. :p

[15:10] <autrijus> perl -Iutil -MPugsConfig -e "PugsConfig->write_config_modules" > src\Config.hs

[15:10] <autrijus> perl Makefile.PL -version

[15:10] <autrijus> ghc --make -o pugs src/Main.hs -isrc

[15:11] <autrijus> fayland: try the three commands.

[15:11] <fayland> ok, wait a moment

[15:12] <autrijus> hcchien: that was the plan, but the new, much more precise layouts seems to be overlapping a lot with the original Synopsis plan.

[15:12] <autrijus> i.e. t/syntax/ t/magicals/ etc

[15:12] <autrijus> so I'm not at all sure how to link the tests with synopses.

[15:12] <hcchien> autrijus: yes, I saw that. and I think it woule be better. :)

[15:13] <autrijus> except with the new regime

[15:13] <autrijus> we no longer know which synopsis paragraph is tested

[15:13] <stevan> autrijus: I was thinking of writing up a test document

[15:13] <autrijus> and which is not.

[15:13] <autrijus> stevan: elaborate?

[15:13] <hcchien> I am thinking about this issue, too.

[15:13] <stevan> one that would describe the contents of each test file, so people would be able to find where a test goes better

[15:13] <autrijus> stevan: it is best to annotate synopsis with test file names, I think.

[15:14] <stevan> autrijus: that works too

[15:14] <fayland> autrijus: Can't locate object method "write_config_modules" via package "PugsConfig" at -e

[15:14] <fayland>  line 1.

[15:14] <autrijus> because to annotate with actual tests is cumbersome

[15:14] <autrijus> so maybe just add random =head3 lines

[15:14] <autrijus> or other lines

[15:14] <autrijus> to the synopses pods?

[15:14] <autrijus> i.e. annotate paragraphs with =head3 (untested)

[15:15] <autrijus> and for things that has tests, annotate with =head3 t/op/zip.t

[15:15] <autrijus> or something. that's just a wild idea.

[15:15] <stevan> autrijus: ok I will start on that after the PA01 stuff

[15:15] <autrijus> stevan: woot!

[15:15] <autrijus> stevan: if you do that, maybe just put a README to t/

[15:15] <autrijus> and say "see Synopsis/*.pod for our coverage statement"

[15:16] <autrijus> and then start annotating *.pod under there.

[15:16] <scw> autrijus: Hope my commit doesn't break any thing and I have to go home now, 'night :)

[15:16] <autrijus> 'nite!

[15:16] <nothingmuch> i disagree

[15:16] <autrijus> scw++

[15:16] <autrijus> nothingmuch: cool. elaborate?

[15:16] <fayland> autrijus: maybe just write_config_module ; no s

[15:16] <nothingmuch> that is hard to make a table like analysis

[15:16] <nothingmuch> featurex- yes

[15:16] <autrijus> ooh. wow!

[15:16] <nothingmuch> feature z- no

[15:16] <autrijus> "Assigning to slice of array now works and some tests on this is added.

[15:16] <autrijus> fayland: right!

[15:17] <autrijus> nothingmuch: but "feature x" is complex

[15:17] <stevan> nothingmuch: so are you thinking a feature matrix is better?

[15:17] <nothingmuch> i don't know

[15:17] <autrijus> it is best if we can cross reference.

[15:17] <stevan> nothingmuch: I have a deal for you

[15:17] <fayland> autrijus: now it's compiling

[15:17] <stevan> I will start with annotating the Synopsis

[15:17] <nothingmuch> i think we should make grep -r on *.pod easily recover:

[15:17] <nothingmuch> a. what's covered

[15:17] <nothingmuch> b. what's to cover

[15:18] <nothingmuch> c. the things name, for further, or location in file

[15:18] <autrijus> scw++ # slice array assignment. fantastic

[15:18] <nothingmuch> for further grepping, that is

[15:18] <stevan> nothingmuch: how can we get that out of grep?

[15:18] <nothingmuch> maybe grep -B or -A depending where you put that

[15:19] <nothingmuch> or =head1 Smart Matching [unimplemented, tested]

[15:19] <fayland> autrijus: now i got '==     Version: 6.0.10 (r525) ====================================='

[15:19] <fayland> autrijus: done.

[15:19] <autrijus> fayland: ok... I guess that works.

[15:19] <autrijus> fayland: but you still need to fix the nmake issue to run the test suite. hrmph.

[15:19] <nothingmuch> perhaps [pugs status: unimplemented, tested] for more uniquy extraction

[15:19] * autrijus wonders if it's too late to switch to Build.PL

[15:19] *** Aankh|Clone is now known as Aankhen``

[15:20] <fayland> autrijus: i have no idea how to fix it. :(

[15:20] <nothingmuch> i doubt it is

[15:20] <nothingmuch> except you might make people angry

[15:20] <autrijus> just "[pugs: todo, t/op/zip.t]" is fine

[15:20] <fayland> autrijus: it works in other modules.

[15:20] <autrijus> fayland: bizzare.

[15:20] <nothingmuch> autrijus: i agree

[15:21] <autrijus> =pugs todo t/op/zip.t

[15:21] <autrijus> or, less bizzare:

[15:21] <autrijus> =head3 pugs todo t/op/zip.t

[15:22] <autrijus> array.t is now all pass.

[15:22] <fayland> autrijus: see u tomorrow. i must go sleep cause i must get up early to have lessons

[15:23] <autrijus> fayland: okay. we'll figure out the problem later.

[15:23] <fayland> autrijus: okay. bye.

[15:25] <autrijus> hi ninereasons.

[15:25] <ninereasons> hi

[15:26] <nothingmuch> beh, sorry

[15:26] <nothingmuch> discussion about something interrupted

[15:26] <nothingmuch> autrijus: i think it should be on the original =head$x of the docs

[15:27] <nothingmuch> and perhaps preceding blocks of example code

[15:27] <autrijus> maybe. we need to mark it though.

[15:27] <autrijus> B<pugs todo t/op/zip.t>

[15:27] <autrijus> works for you?

[15:28] <nothingmuch> i think so

[15:28] <stevan> autrijus, nothingmuch: why don

[15:28] <stevan> t

[15:28] <stevan> I just start going through it

[15:28] <nothingmuch> i can help, but not for a few hours... when i'll get home

[15:28] <stevan> because I am thinking that we may have plenty done which are not covered in the Synoposis

[15:28] <autrijus> hey.

[15:28] <stevan> since the Synopsis are not 100%

[15:29] <autrijus> let us abuse S<>, ok?

[15:29] <autrijus> S<todo t/op/zip.t>

[15:29] <autrijus> and just grep for 'S<' ;)

[15:29] <stevan> is S<> valid POD?

[15:29] <nothingmuch> heh

[15:29] <autrijus> it is.

[15:29] <stevan> nice

[15:29] <autrijus> it means <nobr>.

[15:29] <nothingmuch> that's like mucking html with &nbsp;

[15:29] <nothingmuch> and grepping for that

[15:29] <nothingmuch> ;-)

[15:29] <stevan> LOL

[15:29] <autrijus> bwahaha.

[15:29] <stevan> ok S<> it is

[15:30] <autrijus> yeah. and I think for things we have done and synopsis talks nothing about

[15:30] <autrijus> maybe we add something like

[15:30] <nothingmuch> we could also do Z<>pugs blahZ<>

[15:30] <autrijus> S<unspecced t/op/foo.t>

[15:30] <autrijus> nothingmuch: ugly!

[15:30] <nothingmuch> oops, i forgot the ;-)

[15:30] <autrijus> :)

[15:30] <theorbtwo> Why not put comments next to the tests, rather then the other way around?

[15:31] <nothingmuch> that is mostly done, i think

[15:31] <nothingmuch> except where tests are two synopses at once

[15:31] <autrijus> theorbtwo: both needs to be done.

[15:31] <stevan> theorbtwo: I wanted to make a test overview basically

[15:31] <nothingmuch> see for example t/op/smartmatch.t

[15:31] <autrijus> the Syn->Tests directly is the currently lacking one though.

[15:31] <stevan> so people can easily see what is in where

[15:31] <nothingmuch> it's pretty verbose that way

[15:32] <autrijus> and like nothingmuch said, tests are less structured than syns

[15:32] <autrijus> so it makes sense to link from the structured one to unstructured ones.

[15:32] <autrijus> I think, anyway

[15:32] <nothingmuch> perhaps for further greppability, and goodness in general, S<unimplemented, F<t/op/blah.t>>

[15:32] <nothingmuch> err, awkability

[15:32] <autrijus> S<unimplemented t/op/blah.t> is good enough, really :)

[15:33] <nothingmuch> i'm just getting carried away

[15:33] * autrijus wants to keep the entry barrier as low as possible

[15:33] <stevan> I agree, if we need more we can figure it out then

[15:33] <autrijus> stevan: the map can then be generated by a inverted index script.

[15:33] <nothingmuch> we could expand that, to S< blah F<blah»

[15:33] <autrijus> the tests -> syn map that is

[15:34] * stevan dashes off to get some more coffee

[15:34] * nothingmuch should shut up and get back to work, or not get back to work but actually do something

[15:35] <autrijus> :)

[15:39] <nothingmuch> autrijus: did you also stub !~?

[15:39] *** _metaperl is now known as metaperl

[15:40] <autrijus> nothingmuch: no. want to do that for me?

[15:40] <autrijus> just do what I did with ~~ and replace eq with ne.

[15:40] <nothingmuch> i'll look at your diff and try to repl

[15:40] <nothingmuch> btw, is my %hash = (

[15:40] <autrijus> no need to diff

[15:41] <nothingmuch> "foo", bar",

[15:41] <autrijus> just look at Prim.hs

[15:41] <autrijus> and copy the two lines that contains ~~

[15:41] <nothingmuch> "blah", "blah",

[15:41] <nothingmuch> );

[15:41] <nothingmuch> still allowed?

[15:41] <nothingmuch> (what about parsing it?)

[15:41] <nothingmuch> (it = !~)

[15:42] <autrijus> it's already parsed.

[15:42] <nothingmuch> goody

[15:42] <autrijus> nothingmuch: I think it's still allowed, aye

[15:42] <nothingmuch> it doesn't parse

[15:42] <nothingmuch> new test =)

[15:43] <autrijus> let's see if I beat you to it :)

[15:43] <autrijus> r530

[15:43] <autrijus> should be now parsed.

[15:43] * nothingmuch sticks tounge out

[15:43] <nothingmuch> no fair

[15:43] * autrijus smiles

[15:44] <dada> autrijus: which time plan do you have to implement unary * (the "splat" operator)?

[15:44] * theorbtwo ponders...

[15:45] <autrijus> dada: I had not thought about it much, to be honest. definitely before 6.2.0.

[15:45] <theorbtwo> What's the time-plan for implementing "Haskell is the XS of pugs"?

[15:45] <autrijus> theorbtwo: Kwid.hs?

[15:45] <autrijus> it should happen as soon as ingy and I gets some pairing time.

[15:45] <autrijus> which is, at latest, on YAPC.

[15:46] <dada> autrijus: well, if it's more than 2 weeks from now, I will try to give a stab at it. if it's sooner, I don't even try :-)

[15:46] <autrijus> the final week of march

[15:46] <autrijus> dada: please give a stab at it!

[15:46] <autrijus> I don't plan to see 6.2.0 before YAPC::Taipei.

[15:46] <theorbtwo> Kwid is trying to muck with the parser, though... I was thinking more in terms of exporting a couple of functions.

[15:46] <autrijus> theorbtwo: nono, kwid has its own parser...

[15:46] <nothingmuch> isn't 6.2.0 two weeks from now? ;-)

[15:46] <autrijus> nothingmuch: who said that? ;)

[15:46] <autrijus> theorbtwo: so it's just exporting the usual functions.

[15:47] <nothingmuch> just kidding, autrijus =)

[15:48] * nothingmuch twiddles fingers, waiting for pugs to finish compiling

[15:48] <autrijus> != in haskell is /=

[15:48] <autrijus> btw.

[15:48] <autrijus> think math. :)

[15:48] <nothingmuch> i thought it was an alias for the perlop

[15:48] <nothingmuch> i just saw it break =)

[15:49] <autrijus> see "ne" above =)

[15:50] * nothingmuch dances the svn commit dance

[15:51] <Steve_p> heh

[15:52] * Steve_p forgot to do the dance last night

[15:53] <stevan> autrijus: I am still getting the problem with 'make test'

[15:53] <stevan> cant locate Test.pm stuff

[15:53] <autrijus> stevan: "make purge" not curing things?

[15:53] <stevan> no

[15:53] <autrijus> most bizzare. fresh checkout?

[15:53] <stevan> r531

[15:54] <stevan> I will try again

[15:54] <autrijus> I mean, raze things

[15:54] <autrijus> and "svn up"

[15:54] <autrijus> rm -rf *; svn up

[15:54] <autrijus> or, if using svk, rm -rf *; svk revert -R .

[15:55] <nothingmuch> can you assign pairs to a hash yet?

[15:55] <autrijus> mm !~ works now

[15:55] <autrijus> nothingmuch++

[15:55] <nothingmuch> yeah, that was really hard

[15:55] <nothingmuch> =P

[15:56] <nothingmuch> i was told what to do, and it was two full lines!

[15:56] <autrijus> gosh!

[15:56] <autrijus> that's almost a dissertation right there!

[15:56] * nothingmuch notes that ghc is /still/ compiling Eval.hs

[15:57] * autrijus notes that "make optimized" is bad for your health

[15:57] <nothingmuch> it's better afterwords

[15:57] <nothingmuch> my laptop is 400mhz

[15:58] <nothingmuch> eval '%hash4 = ("key" => "value")';

[15:58] <nothingmuch> this is fatal

[15:58] <autrijus> since it's a casting error.

[15:58] <autrijus> wow bizzare.

[15:58] <autrijus> looking into it

[15:59] <nothingmuch> ok(eval '

[15:59] <nothingmuch> 	my %hash = (

[15:59] <nothingmuch> 		"foo", "bar",

[15:59] <nothingmuch> 		"blah, "blah",

[15:59] <nothingmuch> 	);

[15:59] <nothingmuch> 	1;

[15:59] <nothingmuch> ', "expression parsed (well, lexed)");

[15:59] <autrijus> yeah, I'm looking into it. I think I know what's wrong. sec.

[16:00] <nothingmuch> nok... VError "\nunexpected \"b\"\nexpecting term postfix, operator, \",\" or \")\"" (NonTerm "<eval>" (line 4, column 25))

[16:00] <nothingmuch> err, append 'say $!' after the test

[16:00] <nothingmuch> it's a different thing

[16:01] <nothingmuch> fixed "blah -> "blah", still error, quite similar

[16:02] <nothingmuch> say ~%hash -> Fail: cannot cast as Str: VHash (MkHash [(VStr "blah",VStr "blah"),(VStr "foo",VStr "bar")])

[16:03] <nothingmuch> should i test for stringification in t/hash.t?

[16:03] <autrijus> sounds good

[16:03] <nothingmuch> i don't know what it looks like, i just know that it will

[16:04] <stevan> autrijus: it seems to be looking for blib6/ which is not there

[16:05] <autrijus> weird. it is there for me.

[16:05] <autrijus> your ExtUtils::MakeMaker version?

[16:06] <stevan> 6.12

[16:07] <autrijus> mm 6.17 here.

[16:07] <stevan> ok, I will update it

[16:07] <autrijus> so when you do "make"

[16:07] <stevan> make works

[16:08] <autrijus> things are generated in blib/lib?

[16:08] <autrijus> instead of blib6/lib/

[16:08] <stevan> its make test that messes up

[16:08] <stevan> yeah looks like it

[16:08] <autrijus> post your Makefile's 

[16:08] <autrijus> test_dynamic :: pure_all 

[16:08] <autrijus> section.

[16:08] <nothingmuch> does anybody know what the output of hash interpolation will look like?

[16:08] <stevan> ok one sec

[16:09] <stevan> very strange

[16:09] <stevan> it is making blib6 in the parent directory

[16:09] <autrijus> wtf...

[16:09] <stevan> yeah 

[16:09] <stevan> odd

[16:10] <arcady> nothingmuch "By default, keys and values are separated by tab characters, and pairs are terminated by newlines." - S02

[16:10] <nothingmuch> how is this related to osx is what i want to know

[16:10] <stevan> this is the test_dynamic stuff:

[16:10] <stevan> 	PERL_DL_NONLAZY=1 $(FULLPERLRUN) "-Iinc" "-MExtUtils::Command::MM" "-e" "ENV->{HARNESS_PERL} = q*/Users/stevan/Projects/PUGS/pugs/blib/script/pugs*; ENV->{PERL6LIB} = q*/Users/stevan/Projects/PUGS/pugs/blib6/lib*; test_harness($(TEST_VERBOSE), 'inc', '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

[16:10] <nothingmuch> i have it too

[16:10] <nothingmuch> arcady++

[16:10] <autrijus> weird. what perl has 6.12 as EUMM?

[16:12] <stevan> Module::Install::Pugs.pm line 9 is "$self->set_blib('../../blib6');"

[16:12] <stevan> that seems like it might be the problem

[16:12] <stevan> maybe that should only be one ../

[16:13] * nothingmuch assumes that you subclass Hash and stringify it otherwise then it's diff

[16:13] <nothingmuch> can't test till 6.2.0

[16:13] <nothingmuch> eval '~%hash9'

[16:13] <nothingmuch> that's also fatal

[16:13] <nothingmuch> cannot cast into [VPair]: VSub..

[16:13] <autrijus> stevan: how about taking an absolute path at that point?

[16:13] <autrijus> nothingmuch: yup, I'm aware of it now.

[16:14] <nothingmuch> just in case it might be unrelated, autrijus

[16:14] <nothingmuch> Tom Waits++

[16:14] <stevan> autrijus: what do you mean by absolute path? (my Makefile skills are limited)

[16:14] <stevan> Boogie Down Productions++

[16:14] <nothingmuch> google++

[16:16] <autrijus> stevan: I'll deal. sec

[16:16] <nothingmuch> ah, hip hop

[16:16] <nothingmuch> that's why i never heard of it

[16:16] * nothingmuch doesn't know anything about hiphop

[16:16] <nothingmuch> a teeny bit about pop

[16:16] <metaperl> stevan, you are too old to like BDP

[16:16] <metaperl> stevan check out my hip hop album: http://diskjockeybyrd.iuma.com

[16:16] <nothingmuch> knowlege stops at 1999 or so, when sister stopped watching TV that much

[16:17] <stevan> metaperl: not true, i am too young

[16:17] <metaperl> oops

[16:17] <metaperl> document contains no data

[16:17] <metaperl> my album is gone from the web... sigh

[16:18] <stevan> metaperl: its working for me, but very very slowly

[16:19] <nothingmuch> autrijus: is t/syntax/lf_in_list.t, which assigns (\n"foo", "bar\n"blah", "blah"\n); to %hash a todo, or a bug?

[16:20] <autrijus> nothingmuch: I think it's a todo. not sure

[16:20] <nothingmuch> todo then

[16:21] <autrijus> nod. still fixing blib6 issue.

[16:21] <autrijus> for web app writers:

[16:21] <autrijus> http://cocoon.apache.org/2.1/userdocs/flow/index.html

[16:21] <autrijus> I intend Pugs to be able to do that (and more) on 6.2.

[16:21] <autrijus> (that's for another $project)

[16:22] <metaperl> Perl has something called Contize

[16:22] <nothingmuch> uhuh

[16:22] <autrijus> and Continuity

[16:22] <metaperl> on CPAN

[16:22] <nothingmuch> brock/awwaiid does it

[16:22] <autrijus> which are badly broken.

[16:22] <nothingmuch> he is a very cool guy

[16:22] <theorbtwo> (And to think, I knew him way back when.)

[16:22] <nothingmuch> says he will hack pugs once he grows out of OcaML a bit

[16:22] <nothingmuch> Ocaml? OCAML?

[16:22] <nothingmuch> beh

[16:23] <autrijus> Contize works only on shallow real hashes.

[16:23] <nothingmuch> metaperl: how could they not be broken? perl is not pure

[16:23] <autrijus> not objects or control flows in general.

[16:23] <autrijus> well, javascript is not pure either ;)

[16:23] <autrijus> and yet Cocoon/Rhino does that beautifully.

[16:23] <metaperl> this cocoon thing is powerful

[16:23] <nothingmuch> i think Coro can be used to butcher that

[16:24] <metaperl> but it's Java based, not javascript AFAICT

[16:24] <autrijus> nothingmuch: no, I hacked that and talked to Coro author.

[16:24] <nothingmuch> in a way that really works

[16:24] <nothingmuch> ah

[16:24] <autrijus> metaperl: no, the continuation engine is javascript.

[16:24] <nothingmuch> just speculating

[16:24] <autrijus> I tried an attempt in perl5 to do continuations

[16:24] <autrijus> with regex.

[16:24] <autrijus> and another attempt with $^D.

[16:24] <autrijus> both works to a degree, but are super-fragile.

[16:25] <nothingmuch> brb

[16:25] <autrijus> I'll spare you the details :)

[16:25] <autrijus> err, $^P, not $^D.

[16:25] <autrijus> but Pugs is pure CPS.

[16:25] <autrijus> and has a small enough AST

[16:25] <autrijus> so should be easy to contize.

[16:26] <autrijus> hi nnunley. I'm daydreaming here about http://cocoon.apache.org/2.1/userdocs/flow/continuations.html in Pugs :)

[16:27] <metaperl> will you be able to hijack the javascript part of cocoon directly?

[16:27] <metaperl> with no mods?

[16:28] <autrijus> Inline::Rhino? sure.

[16:28] <autrijus> but I want to write the logic in perl, not javascript!

[16:29] <autrijus> (although javascript is actually a neat little language to write logics.)

[16:31] <nnunley> autrijus: Nice.  Have you looked at seaside?

[16:31] * nothingmuch sits down...o O ( now what should I do? )... ... ...( go home! )

[16:31] <autrijus> nnunley: yeah, and wash, and borges, and lots of other things.

[16:32] * nothingmuch writes 'irc log ca. 18:30' on his hand

[16:32] <autrijus> (and the LL* talks)

[16:32] <nothingmuch> ciao!

[16:32] <metaperl> the main wash site is down. do you have a link to seaside?

[16:32] <autrijus> nothingmuch: mmm Memento

[16:32] <nnunley> http://seaside.st/

[16:32] <nothingmuch> oh btw, thanks for the STM article, autrijus!

[16:32] <autrijus> http://beta4.com/seaside2/

[16:32] <nothingmuch> t/syntax/lf_in_list.t comitted

[16:32] <autrijus> nothingmuch: np :) glad you enjoyed it. I think STM is really good.

[16:32] <autrijus> nothingmuch++

[16:32] <nnunley> autrijus: That redirects to the seaside.st site.

[16:32] <metaperl> I say forget YAHT. Go straight to this algorithms book

[16:32] <autrijus> ahh. ok

[16:32] <nothingmuch> oh, lastly

[16:32] <nothingmuch> did you look at the private msgs i sent you?

[16:33] <autrijus> the algorithm book is wonderufl.

[16:33] <wolverian> hrm, how do I specify that a sub doesn't return anything in the sub signature?

[16:33] <autrijus> nothingmuch: I did. It looks vaguely like doing a combinator library in perl5. I'm not sure it's my forte.

[16:34] <autrijus> wolverian: returns Void 

[16:34] <autrijus> (not sure, just a guess.)

[16:34] <nothingmuch> i was actually thinking of doing it in haskell and perl together

[16:34] <nothingmuch> each side for it's forte

[16:34] <autrijus> ah. that could be fun. I think you can write it up a bit and solicit suggestions on #haskell

[16:34] <autrijus> there's several such combinator libraries in haskell already.

[16:35] <nothingmuch> right now it's low on the task circular buffer/stack thingy

[16:35] <nothingmuch> it's a dependancy of pugs hacking which is a dependancy of haskell

[16:35] <nothingmuch> and it's also a dependancy on SICP

[16:35] <nothingmuch> (finishing it, that is)

[16:35] <nothingmuch> and prolog

[16:35] <autrijus> mmm #perl6 is apparently full of ADD folks.

[16:35] <autrijus> <- being one

[16:35] <nothingmuch> add?

[16:37] <autrijus> http://en.wikipedia.org/wiki/ADD

[16:37] * nothingmuch finished packing... ciao!

[16:38] <autrijus> stevan: blib6 should be fixed.

[16:38] <Steve_p> Since I just ran across it and wished for something like it in Perl, is there a function composition operator/function in Perl 6?

[16:38] <stevan> autrijus: just svn updated, will let you know

[16:39] <metaperl> maybe we need a thin layer between haskell and perl

[16:39] <autrijus> perl5?

[16:39] <Steve_p> heh

[16:39] <metaperl> so function composition, etc. dont need re-implementation

[16:39] <Steve_p> Inline::GHC :)

[16:40] <autrijus> sub infix:<o> (Code &f, Code &g) { sub { g(f(@_)) } }

[16:40] <autrijus> not quite.

[16:41] <autrijus> in ruby it's

[16:41] <autrijus>   class Proc

[16:41] <autrijus>     def *(other)

[16:41] <autrijus>       raise unless arity == other.arity

[16:41] <autrijus>       proc {|*a| self.call(other.call(*a))}

[16:41] <autrijus>     end

[16:41] <autrijus>   end

[16:42] <autrijus> the proposal to implement it in Ruby was rejected:

[16:42] <autrijus> "A very few people would use this feature."

[16:42] <autrijus> thanks, matz :)

[16:44] <Steve_p> I was thinking a case like MY::postamble in EU::MM could easily use it

[16:44] <stevan> autrijus: its working now

[16:44] * Steve_p tires of hacking the symbol table :)

[16:44] <autrijus> cool!

[16:44] <autrijus> Steve_p: post to the idle speculation list!

[16:44] <Steve_p> p6l? :)

[16:44] <autrijus> yeah :)

[16:44] <autrijus> that's larry's words, not mine

[16:45] <Steve_p> That's why I have my questions in test cases tied to a specific Larry email :)

[16:45] <autrijus> heh heh.

[16:46] <autrijus> mm I think this p6 summary is the longest to date.

[16:47] <autrijus> clearly we're doing something right :)

[16:47] <Steve_p> It's been a busy couple of weeks :)

[16:47] * Steve_p is still trying to catch up from being sick

[16:53] * Coke_ has yet to see a summary.

[16:54] <autrijus> http://www.nntp.perl.org/group/perl.perl6.compiler/278

[16:54] <Coke_> I see pugs has a queue at rt.perl.org/rt3/ now.

[16:55] <autrijus> it does.

[16:55] <autrijus> had not announced it yet

[16:55] <autrijus> still needs to do some mailgate foo.

[16:56] <autrijus> (and I like using tests as tickets :))

[16:56] <autrijus> (but I'll announce it before YAPC.)

[16:56] * Steve_p remembers to checnk for spam in Perl5

[17:00] *** dadaumpa is now known as dada

[17:01] <Coke_> sorry, didn't mean to steal your thunder. It's already out there, though. (Note, there's ALSO a perl6 queue. someone explain THAT to me. =-)

[17:04] <Steve_p> I thought it was there for questions

[17:04] * Steve_p takes a peek

[17:06] <Steve_p> Hmmm...test patches, patches to languages/perl6

[17:06] <Steve_p> Hey, , there's ALSO a perl6 queue. someone

[17:06] <Steve_p>                explain THAT to me. =-)

[17:06] <Steve_p> Crap

[17:06] <Steve_p> Thu Mar 04 17:30:00 2004  coke - Queue changed from parrot to perl6

[17:06] <Steve_p> :)

[17:08] <Steve_p> It seems like Perl 6 is all languages/perl6 related tickets

[17:08] <ingy> hola

[17:08] <autrijus> wow, look at #21679

[17:09] <autrijus> that is very far along

[17:09] <autrijus> but I can't seem to download the attachment?

[17:09] <autrijus> it's all \x00

[17:10] <autrijus> the .tar.gz one is good

[17:11] <Steve_p> And it's all over two years old :-/

[17:12] <autrijus> and that has never landed 

[17:13] <autrijus> so is bitrotten

[17:13] <Steve_p> :(

[17:14] <autrijus> use inline 'Haskell' 'some code here';

[17:14] <Steve_p> heh

[17:14] <autrijus> use extension 'Haskell' 'file.hs';

[17:14] <autrijus> I'm just mimicking that patch.

[17:14] <autrijus> not a bad idea.

[17:14] <autrijus> ingy: what do you think? :)

[17:15] <autrijus> that's sad. if that patch has landed and polished a bit

[17:16] <autrijus> language/perl6 could've been bootstrapping :-(

[17:16] <Steve_p> I'll have to check to see how bitrotten these patches are

[17:16] <autrijus> is language/perl6/ still working?

[17:16] <autrijus> I mean, compiles, passes tests and all

[17:19] <Steve_p> Good question :-/

[17:19] <Steve_p> Coke_?

[17:19] <ingy> well I think you should hust be able to write modules in haskell with no .pm file required and just `use` them like any other

[17:20] <ingy> I plan on implementing the plumbing during yapc

[17:20] <autrijus> woot!

[17:20] <autrijus> let us totally do that

[17:20] <autrijus> starting from Kwid!

[17:20] <theorbtwo> Much coolness.

[17:20] <ingy> and then yaml

[17:20] <autrijus> and then yaml.

[17:20] <autrijus> that way haskell and pugs will have YAML in no time

[17:20] * ingy does the happpy dance

[17:20] * autrijus too

[17:21] <Steve_p> and then the breakfast cereals...Ooop, this isn't the "Holy Grail" ;)

[17:21] <autrijus> I also happen to think YAML can help us fix the AST.

[17:21] <autrijus> fix, as in, enrich the types.

[17:22] <autrijus> especially references and co.

[17:22] <autrijus> ingy: YAML can't serialize infinite data structures, right? :)

[17:22] <ingy> autrijus: sure it can :P

[17:22] <autrijus> ok... give me a YAML serialization for the fibonacci series...

[17:24] <ingy> as long as it can be expressed in terms of a scalar sequnce or mapping

[17:24] * autrijus predices explosive productivity during the 2 weeks of YAPC::Taipei

[17:24] <Steve_p> YAPC::Taipei is two weeks long?

[17:24] <ingy> but you could come up with a way to do it

[17:24] <autrijus> Steve_p: the conf itself is 2 days; but the prehackathon and posthackathon is 2 weeks in total.

[17:31] <ingy> I hope I have time to write my presentation on Kwiki

[17:31] <ingy> :p

[17:32] <hcchien> ingy: do you send me your schedule? :)

[17:32] <Limbic_Region> I parsed that wrong ingy - I read it as "I hope I have time for a quickie"

[17:33] <ingy> hcchien: I think so

[17:33] * ingy always has time for a kwiki

[17:34] * hcchien is checking

[17:34] <ingy> hcchien: you mean my flight schedule, right?

[17:36] <ingy> Dear Brian,                                                                     

[17:36] <ingy>                                                                                 

[17:36] <ingy> Congratulations! You have been accepted as a presenter for                      

[17:36] <ingy> the O'Reilly Open Source Convention 2005 at the Oregon Convention Center,       

[17:36] <ingy> Portland, Oregon, August 01, 2005 - August 05, 2005.                            

[17:36] <ingy>                                                                                 

[17:36] <ingy> The following has been accepted as a 45 minute session for the event:           

[17:36] <ingy>                                                                                 

[17:36] <ingy> "Apocalypse Now! - Perl6 is Here Today"                                         

[17:36] <ingy> sorry :(

[17:36] <autrijus> woooot!

[17:36] <autrijus> ingy++

[17:37] <dada> ingy**

[17:37] <autrijus> mmm ICFP deadline is 13th april

[17:37] <larsen> I humbly add my ingy++

[17:37] <obra> ingy: woot

[17:37] <ingy> I guess that means rewriting Spork in Perl6

[17:38] <autrijus> "Practice and experience: Functional programming in education and industry."

[17:38] <autrijus> somebody remind me to submit the proposal before YAPC::Taipei hackathons are over :)

[17:39] <hcchien> ingy: yes. so I didn't see that before. :)

[17:39] <obra> autrijus: will try

[17:39] * autrijus wonders when will euroscon start to call for papers

[17:39] <dada> autrijus: well, the CFP for the Italian Perl Workshop is already out :-)

[17:40] <obra> does euroscon have a date yet? 

[17:40] * obra still hasn't heard back from ORA about OSCon

[17:40] <autrijus> not sure.

[17:40] <autrijus> when is italian perl workshop?

[17:40] <rgs> obra: october 17-20 it seems

[17:40] <dada> autrijus: 23-24 june

[17:40] <autrijus> icfp is September 26-28

[17:40] <autrijus> so I'll shape my schedule around that

[17:41] <autrijus> AOSS is early september @ srilanka or cambodia

[17:41] * obra ponders early october eurohackathon

[17:41] <autrijus> so euroscon fits just fine

[17:41] <autrijus> obra: count me in :)

[17:41] <clkao> whoot

[17:42] <autrijus> june is a bit early.

[17:42] <obra> autrijus: was hoping for that

[17:42] <clkao> round world hacking tour again?

[17:42] <obra> we'll need tshirts

[17:42] <hcchien> hehe

[17:42] <shapr> autrijus: you're going to ICFP05?

[17:42] <hcchien> I want to go to Ams, too.

[17:42] <autrijus> shapr: I am.

[17:42] <autrijus> if my proposal is accepted, that is.

[17:43] <autrijus> if not, I'll try to.

[17:43] <shapr> hmm

[17:43] <autrijus> I got mail from wadler yesterday :)

[17:43] <autrijus> asking me to list pugs on his fp-in-realworld page.

[17:45] <shapr> heh, cool

[17:47] <dada> I'm afraid I MUST pose a few stupid questions now

[17:47] * shapr does muscle poses

[17:47] <autrijus> I just submitted http://autrijus.org/tmp/pugs.html  :)

[17:47] <autrijus> dada: fire away, sire

[17:48] <dada> am I right in suspecting line 190 of AST.hs (vCast (VArray (MkArray l)) = l) being responsible for the non-working of *@array?

[17:48] <autrijus> why do you think that?

[17:48] <autrijus> I can't see a connection :)

[17:48] <dada> because op1 "*"    = return . VList . vCast

[17:49] <autrijus> I thought it's the "*" op being wrong.

[17:49] <autrijus> "list" op does what it should do.

[17:49] <autrijus> * and ** needs to do more

[17:49] <autrijus> but they don't

[17:49] <dada> oh

[17:49] <dada> ok, ok :-)

[17:49] <autrijus> the "," Syn prolly need to take account of App "*"

[17:49] <autrijus> and flatten them

[17:49] <autrijus> alternatively, make "*" a Syn.

[17:50] <autrijus> I'm not sure whetier if prefix:<*> is rebindable.

[17:50] <autrijus> or whether it's implementable in perl6.

[17:50] <dada> slowly, very slowly

[17:50] <dada> I'm just hacking around, I'm totally clueless in Haskell

[17:50] <autrijus> or both. or neither. or both.

[17:50] * autrijus starts resembling larry.

[17:51] <autrijus> ok. let me explain :)

[17:51] <dada> Syn == syntax

[17:51] <autrijus> right. Syn is "special form" so to speak.

[17:51] <autrijus> it means things that are inherent to AST 

[17:51] <autrijus> and are not rebindable.

[17:51] <autrijus> i.e. can't be reimplemented in pure perl6.

[17:52] <autrijus> and you can't generally take references to Syn stuff.

[17:52] <autrijus> until we have macros.

[17:52] <autrijus> which I'll not go into.

[17:52] <dada> ok, and they are implemented in Eval.hs (mostly, at least)?

[17:52] <autrijus> luqui: hey, is prefix <*> ?

[17:52] <autrijus> luqui: hey, is prefix <*> a Syn?

[17:53] <autrijus> i.e. what will happen if I redefine prefix:<*> and prefix:<**>?

[17:53] <luqui> are you using <> as a quoter in your question?

[17:53] <autrijus> yes I am.

[17:53] <autrijus> dada: yes. see line 270

[17:53] <luqui> well I wonder what it would return if it weren't

[17:53] <autrijus> I wonder too.

[17:53] <autrijus> also, "is returns Void" sane?

[17:54] <luqui> yeah, that's been mentioned befor

[17:54] <luqui> wait

[17:54] <luqui> "is returns"

[17:54] <autrijus> is returns == returns

[17:54] <dada> autrijus: ok, I follow

[17:54] <autrijus> iirc.

[17:54] <luqui> oh... is returns(Void)

[17:54] <autrijus> yeah.

[17:54] <luqui> traits don't behave like verbs

[17:54] <autrijus> <- about to sleep, not in the tiptoe typing shape

[17:54] <luqui> so the parens are required

[17:54] <autrijus> yup.

[17:54] <autrijus> dada: so see line 365

[17:54] <nothingmuch> autrijus: tomorrow i'll start writing tests for OOP

[17:55] <autrijus> nothingmuch: woot

[17:55] <nothingmuch> and rules

[17:55] <dada> autrijus: seen

[17:55] <nothingmuch> i wonder if one could test macros

[17:55] <dada> autrijus: and also line 448-455

[17:55] <autrijus> you see there an implementation for flattening.

[17:55] <luqui> nothingmuch: with 'eval', I don't see why not

[17:55] <autrijus> yup.

[17:55] <dada> autrijus: in 365?

[17:55] <nothingmuch> without starting a separate interpreter

[17:55] <luqui> i want macros to be implemented

[17:55] <autrijus> in 367 in fact but yeah.

[17:55] <nothingmuch> well, supposedly they can go farther than that...

[17:56] <dada> I see, I seeeee

[17:56] <luqui> farther than what?

[17:56] <autrijus> dada: ok. now see Bind

[17:56] <autrijus> mm wait a bit

[17:57] <nothingmuch> maybe i just dunno

[17:57] <nothingmuch> i thought they weren't limited to anything

[17:57] <nothingmuch> that is, they're as powerful as source filters

[17:58] <autrijus> still in Eval

[17:58] <autrijus> line 559

[17:58] <nothingmuch> well, ok, why not

[17:58] <autrijus> it is calling  bindParams prms invs args

[17:58] <autrijus> so either bindParams or doApply needs to analyze invs and args

[17:58] <dada> autrijus: ok

[17:58] <luqui> so why can't you test that with eval?

[17:58] <autrijus> and see if they contain Syn "*"

[17:59] <nothingmuch> luqui: i dunno

[17:59] <nothingmuch> =P

[17:59] <autrijus> and then unpack them away.

[17:59] <autrijus> that is one approach

[17:59] <autrijus> but I had not thought of it in detail

[17:59] <autrijus> and also "*" is currently an App not a Syn

[18:00] <dada> gosh

[18:00] <autrijus> to make it a Syn, change Parser line 402

[18:00] <autrijus>     , preOps   " = ! + - ~ ? * ** +^ ~^ ?^ \\ "         -- Symbolic Unary

[18:00] <nothingmuch> i doubt splat will change any

[18:00] <autrijus> into something like

[18:00] <autrijus> , preSyn " * ** " ++ preOps " = ! + ......"

[18:00] <nothingmuch> oh, Syn vs. app is not synopsis vs. apocalypse =)

[18:00] <nothingmuch> *blush*

[18:00] <nothingmuch> what is an App?

[18:01] <autrijus> and then add a line on 498

[18:01] <shapr> I have an App in windows!

[18:01] <autrijus> preSyn = ops $ makeOp1 Prefix "" Syn

[18:01] <autrijus> that's all it takes.

[18:01] <nothingmuch> shapr -= 0.01

[18:01] * shapr snickers

[18:01] <autrijus> nothingmuch: App means "apply", it means calling a function.

[18:01] * shapr deserved that

[18:01] <autrijus> Syn means "syntax", it means a special form.

[18:02] <autrijus> I need to write them all in PA02 ;)

[18:03] <autrijus> I wonder if I can convince Bestian to fly to OSCON with ingy.

[18:04] <shapr> I'd like to meet ingy, I've heard fascinating things about that person.

[18:04] <shapr> ingy: do you have a website?

[18:04] <ingy> shapr: http://zombo.com

[18:05] <shapr> ingy: oh, you know Steve Howell?

[18:05] <stevan> autrijus: question about Perl6/lib

[18:05] <shapr> fooey, flash.

[18:05] <stevan> is that gone away now?

[18:05] * autrijus sighs.

[18:05] <autrijus> yeah.

[18:05] <stevan> my @*INC is : /System/Library/Perl6/darwin-thread-multi-2level

[18:05] <autrijus> and v6/ is also gone away.

[18:06] <stevan> ok

[18:06] <autrijus> they may come back in the future.

[18:06] <autrijus> we don't know.

[18:06] <stevan> so what should I tell people re: perl6 CPAN?

[18:06] <stevan> other than to submit to Pugs

[18:06] <stevan> and not CPAN

[18:06] <autrijus> "wait for Pugs::MakeMaker / Module::Install::Pugs on CPAN ;)"

[18:07] <autrijus> "once they are available individually on CPAN, you can start submit things to CPAN, because that means we've figured out the distribution problem"

[18:07] <autrijus> "suggestions welcome etc"

[18:07] <stevan> ok

[18:07] <autrijus> (which shouldn't be long; YAPC::Taipei should also tackle that.)

[18:07] <stevan> sounds good

[18:07] * autrijus is piling lotsa things on Y::T

[18:09] <dada> uhm

[18:09] <dada> pugs> ? *(1,2,3)

[18:09] <dada> *** Evl: App "&prefix:*" (Syn ","

[18:10] <dada> it's still an App :-(

[18:10] <autrijus> right. what's what I mean by * is App, not Syn

[18:10] <autrijus> have you adjusted the Parser?

[18:10] <dada> autrijus: yeah

[18:10] <autrijus> and removed * from Prim?

[18:10] <autrijus> (it's no longer a primitive)

[18:10] <autrijus> sorry I didn't mention that.

[18:10] <dada> oops

[18:11] <dada> remove the op1 or remove it from initSyms?

[18:11] <dada> or both?

[18:11] <dada> or neither? :-)

[18:11] <autrijus> hehe.

[18:11] <autrijus> both.

[18:19] <autrijus> hi Schwern!

[18:20] * nothingmuch noticed the avg population of #perl6 is growing

[18:20] <dada> AAAATGH

[18:21] <autrijus> dada: sorry for the pain :-/

[18:21] <dada> autrijus: no no

[18:21] <dada> I was just modifying the wrong files :-)

[18:21] <autrijus> roflmao!

[18:22] <nothingmuch> stevan->ping

[18:22] <Limbic_Region> well if the H had been a C I would have thought dada was playing "guess the amino acid"

[18:23] <dada> Limbic_Region: :-)

[18:23] <stevan> autrijus: whats up

[18:24] <stevan> or rather nothingmuch: whats up

[18:24] <nothingmuch> stevan: how sane would it be to subclass Tree::Simple objects?

[18:24] * stevan takes a big swig of coffee 

[18:24] <stevan> nothingmuch: I do it all the time

[18:24] <nothingmuch> i'm not very satisfied with setNodeValue et all

[18:24] <nothingmuch> i'm not very satisfied with setNodeValue et al

[18:24] <nothingmuch> eck, shell reflexes

[18:24] <stevan> what do you want it to do?

[18:24] <nothingmuch> colloquy should have an option to disable history =)

[18:24] <nothingmuch> well, i need objects with types

[18:25] <nothingmuch> and i need them to have weird content

[18:25] <nothingmuch> and i don't want the tree nodes to delegate to another object,

[18:25] <stevan> nothingmuch: I usually subclass it to do just that

[18:25] <nothingmuch> or contain a hash

[18:25] <nothingmuch> because that is annoying

[18:25] <stevan> hmmm, so you want to store extra info right in Tree::Simple then?

[18:25] <obra> sene autrijus

[18:25] <nothingmuch> goody

[18:25] <Schwern> autrijus:  Hey

[18:25] <obra> oh. 3 minutes. ok :)

[18:26] <nothingmuch> sort of

[18:26] <nothingmuch> perhaps stringification, too

[18:26] <obra> autrijus-san: your isp hates you

[18:26] <nothingmuch> i want to be able to feed them to petal templates easily

[18:26] <autrijus> obra: how much?

[18:26] <obra> [email@hidden.address] host eforward2.name-services.com[216.52.184.242] said:

[18:26] <obra>     550 5.7.1 Invalid recipient: [email@hidden.address] (in reply to RCPT TO

[18:26] <obra>     command)

[18:26] <stevan> nothingmuch: I am sure you could add more fields to it, just watch out for clashes

[18:27] <autrijus> what the...

[18:27] <obra> "a lot"

[18:27] <autrijus> I don't understand.

[18:27] <autrijus> autrijus.org.           3601    IN      MX      5 mail.autrijus.org.

[18:27] <autrijus> autrijus.org.           3601    IN      MX      10 eforward4.name-services.com.

[18:27] <nothingmuch> uhuh, that is the usual perl5 oop mess.. i know =)

[18:27] <autrijus> obviously it should try mail.autrijus.org first.

[18:27] * nothingmuch has ISP trouble too.... =(

[18:28] <nothingmuch> nowadays it's relatively stable

[18:28] <nothingmuch> but a month ago i was on the verge of crying for about two weeks streight

[18:28] <Limbic_Region> autrijus - is there a A record for mail.autrijus.org or only a P record?

[18:28] <autrijus> mail.autrijus.org.      3526    IN      A       220.132.132.105

[18:28] <nothingmuch> my friend in switzerland had pretty graphs for mailq sizes thrown off scale for years =)

[18:28] <autrijus> I'm sure I got it correct :-/

[18:28] * stevan loves his cable modem

[18:28] * Limbic_Region tests

[18:29] <nothingmuch> lucky for me i even had a backup mx

[18:29] <obra> autrijus: but if your backup mx is losing, that's bad

[18:29] <autrijus> yeah it should not be losing at all. will look to it tomorrow

[18:30] <Limbic_Region> autrijus - you have SMTP services running on that box?

[18:30] <obra> I wonder if it's worth taking eforward out of dns until it's fixed

[18:30] <Limbic_Region> $ telnet 220.132.132.105 25

[18:30] <Limbic_Region> Connecting To 220.132.132.105...Could not open connection to the host, on port 25: Connect failed

[18:30] <obra> better to have tempfail/queueing

[18:30] <autrijus> it worksforme.

[18:30] <autrijus> try again?

[18:30] <Limbic_Region> ok

[18:31] <Limbic_Region> same thing - let me try from outside government firewall

[18:31] <autrijus> don't tell me my ISP is blocking incoming 25.

[18:31] <ingy> Schwern: did you submit an oscon proposal this year?

[18:31] <obra> it works for me now.

[18:31] * autrijus shudders.

[18:31] <obra> I wonder if there's a cable cut

[18:31] <ingy> shapr: *you* know Steve Howell?

[18:31] <nothingmuch> autrijus: that's just what happenned to me a month ago

[18:31] <nothingmuch> yuck yuck yuck

[18:32] <Limbic_Region> autrijus - working here

[18:32] <nothingmuch> they said AOL was complaining

[18:32] <Limbic_Region> you should probably disable vrfy btw

[18:32] <nothingmuch> i asked why the blocked incoming and not outgoing

[18:32] <nothingmuch> they said 'just cause'

[18:32] <autrijus> how do I disable vrfy?

[18:32] <Limbic_Region> I didn't test some other potential no-nos but if vrfy is enabled they are likely as well

[18:32] * Limbic_Region is a sendmail weenie not postfix

[18:33] <Limbic_Region> in fact, you probably shouldn't have postfix identify itself as such

[18:33] <Limbic_Region> I need to check one more thing to rule out it being a firewall issue on my side

[18:33] <shapr> ingy: via TheWiki and #python, yes. Early into YAML I was considering writing a YAML parser to help out.

[18:34] <shapr> But I got distracted, as usual.

[18:34] <shapr> Limbic_Region: Want to try a postfix replacement written in Haskell? =)

[18:34] <dada> yeah!

[18:35] <Limbic_Region> autrijus - nothing wrong with incoming 25 on your end - must be a firewall issue on my end - go figure ;-)

[18:35] <dada> pugs> ? *(1,2,3)

[18:35] <dada> *** Evl: Syn "*"

[18:35] <shapr> ingy: Sadly, I have all the focus of a gerbil. methylphenidate upgrades my focus to praire dog level, so I can now stay employed.

[18:35] <dada> (and later...)

[18:35] <autrijus> dada: woot!

[18:35] <dada> *** Error: "Unknown syntactic construct"

[18:35] <autrijus> dada: sure. that means you need to implement Syn "*"

[18:35] <autrijus> preferably just above Syn ","

[18:35] <Limbic_Region> shapr - not especially.  Just wanted to let autrijus know of potential security risks

[18:35] <dada> I'll look into it

[18:36] <Schwern> ingy:  Nope.  Thought of something interesting to say too late.  I'm writing up one for YAPC though.

[18:36] <autrijus> dada: I don't think I've made you a committer, did I?

[18:36] <dada> nope

[18:36] <autrijus> dada: email to send invitation to? :)

[18:36] <shapr> Limbic_Region: I suspected not, therefore the smiley at the end attempting to imply the non-serious suggestion part. I just had to wave my lambda pom-poms, sorry :-)

[18:36] <dada> autrijus: dada at perl dot it

[18:36] <stevan> autrijus: commiting the PA01 change now

[18:37] <autrijus> stevan: yay!

[18:38] <Limbic_Region> autrijus - it is in your main.cf file - http://www.postfix.org/postconf.5.html

[18:39] <dada> it is possible that ghc doesn't like \t in source files?

[18:39] <ingy> Schwern: I got one accepted

[18:39] <autrijus> Limbic_Region: vrfy closed.

[18:40] <ingy> so prepare a place for me

[18:40] <nothingmuch> dada: it needs to be consistent

[18:40] <nothingmuch> and consistency of haskell code in pugs is spaces

[18:40] <autrijus> dada: what nothingmuch said. when in doubt, try expandtab :)

[18:40] <autrijus> I've seen tabs in tests.

[18:40] <autrijus> I don't quite care :)

[18:40] <autrijus> but .hs files wants spaces.

[18:40] <autrijus> feel free to add -- vim: magic lines

[18:40] <autrijus> or emacs, etc

[18:40] <autrijus> as you see fit, at the end of .hs files.

[18:40] <dada> nothingmuch: "Be consistent. Be nice" vs. "Be consistent. Or be dead"

[18:41] <autrijus> the latter.

[18:41] <autrijus> haskell, I mean. not pugs :)

[18:41] <dada> one more thing learned :-)

[18:41] <autrijus> stevan++ # excellent answer to PA01!

[18:41] <nothingmuch> haskell likes tabs too

[18:42] <nothingmuch> but it's either or, really

[18:42] * nothingmuch did yaht stuff (ooh, so many) with tabs

[18:42] <autrijus> viirya / hcchien: can you re-translate the "Is there a CPAN for Perl 6 modules?" chunk to zh-tw/PA01 ?

[18:42] <autrijus> zh-tw/01Overview.html, even.

[18:43] <dada> which is the current status of tests with the svn version?

[18:43] <dada> I have several failures, but I don't know which ones are mine and which not :-)

[18:45] <nothingmuch> dada - list the test files

[18:45] <nothingmuch> perlbot nopaste

[18:45] <perlbot> Paste your code here and #perl will be able to view it: http://sial.org/pbot/perl

[18:45] <nothingmuch> only set #perl6 as the channel

[18:45] <autrijus> see? that's the problem with making tests fail :)

[18:45] <autrijus> (but yeah, one should be able to count delta in head)

[18:45] <nothingmuch> well, otoh if they all pass, then you are ignoring problems =)

[18:45] <nothingmuch> unless you explicitly search for them

[18:46] <pasteling> "dada" at 193.203.230.22 pasted "failing pugs tests" (6 lines, 374B) at http://sial.org/pbot/8003

[18:46] <autrijus> which I do anyway :)

[18:46] <nothingmuch> dad- not yours

[18:46] <nothingmuch> s/(?=-)/a/

[18:47] <theorbtwo> nothingmuch-- # useless use of (?...) in RE.

[18:47] <nothingmuch> uh, fine

[18:47] <dada> nothingmuch: ok, thanks

[18:47] <nothingmuch> s/(?:?=-)/a/

[18:47] <nothingmuch> doesn't that help readabilty?

[18:47] <theorbtwo> s/-/a/

[18:47] <theorbtwo> Much better.

[18:48] <nothingmuch> uh?

[18:48] <nothingmuch> i'm finding a place, that has no width, followed by a -

[18:48] <nothingmuch> and replacing it with 'a' to make 'dad-' into 'dada-'

[18:48] <nothingmuch> i could have just used tab completion, but then i would not show off my mad regex skillz

[18:49] <theorbtwo> s/-/a-/

[18:49] <nothingmuch> then no one would know i know zero width lookahead assertions =)

[18:49] <theorbtwo> Yes, but everyone would know what the RE did without checking perlre.

[18:50] <nothingmuch> beh, regexes followed by typos correct the typos, everyone knows that =)

[18:50] <nothingmuch> theorbtwo *= nothingmuch

[18:50] <nothingmuch> there, that's more than --

[18:50] <nothingmuch> i've got to go put my sister to sleep

[18:51] <theorbtwo> nothingmuch++ # karmic balance.

[18:52] <ingy> nothingmuch: hopefully that's not like putting your dog to sleep

[18:53] <PerlJam> nothingmuch: just remember that in perl6 your RE would be :  s/<before: ->/a/, while theorbtwo's would still be s/-/a-/

[18:57] <autrijus> wow. today's journal is really long.

[18:57] <autrijus> zzz. :) &

[19:00] <ingy> autrijus:it seems that test failures in the pugs tests prevent the ext tests from running

[19:03] <theorbtwo> .oO(Woo, I'm a "helpful soul")

[19:04] <autrijus> yow, luqui's post on p6l kept me awake.

[19:04] <autrijus> ingy: really. hrmph.

[19:04] <theorbtwo> Hm, on second thought, I think I'll take that committer bit, if it's still on the table.

[19:05] <theorbtwo> james at mastros dot biz.

[19:06] <autrijus> sent.

[19:06] <autrijus> welcome aboard!

[19:07] <theorbtwo> Thanks!  I'll try to not make too much of a pest of myself.

[19:07] <dada> autrijus: is there something dangerous in the "??????" text I'm about to agree? :-)

[19:08] <ingy> my oscon talk will be ... interesting

[19:08] <ingy> autrijus: I only have 45 minutes so far, so it might be hard to integrate Bestian

[19:08] <autrijus> dada: http://wagner.elixus.org/~hcchien/termtouse.html is the en-us.

[19:08] <ingy> of course I would be up to the challenge

[19:08] <autrijus> ingy: I mostly think just to send him there to chat with people.

[19:08] <dada> autrijus: thanks

[19:09] <autrijus> and avoid the hefty entrance fee

[19:09] <ingy> autrijus: good idea

[19:09] <autrijus> dada: it's sf.net boilerplace.

[19:09] <autrijus> boilerplate, even.

[19:09] <autrijus> luqui++ # pattern matching subs makes sense!

[19:09] <autrijus> I think my evil plan of inflicting haskell-sense on luqui is working.

[19:09] <obra>       hah

[19:10] <theorbtwo> Well, I can read the TOS exactly enough to tell that it looks real pretty.

[19:10] <ingy> how hard will it be to implement p6 rules?

[19:11] <autrijus> ingy: given PGE milestone 1, not hard at all

[19:11] <autrijus> trivial almost.

[19:11] <autrijus> without PGE milestone 1, I think a week of concentration.

[19:12] <ingy> is there an expected timeline for milestone 1?

[19:13] <obra> ingy: I'm working on it

[19:13] <obra> ingy: have you seen the milestones doc? comments would be appreciated

[19:13] <Coke_> hey, obra.

[19:13] <obra> Coke_: did you get my mail?

[19:13] <ingy> obra: url?

[19:14] <obra> http://svn.perl.org/perl6/doc/trunk/plans/milestones.pod   

[19:14] <obra> I've been working on fleshing it out with design team members. more questions to have it answer would be useful

[19:14] <Coke_> I'll comment on the parrot stuff, and how that might realte to the other projects as well as how leo's most recent 0.2.0 roadmap might integrate.

[19:14] <obra> "send patches"

[19:14] <Coke_> (and several nits)

[19:14] <ingy> obra: what's pod?

[19:14] <obra> Coke_: please do

[19:14] <obra> ingy: :P

[19:14] <ingy> :P

[19:15] <Coke_> btw, =head3 isn't supported by my pod reader. =-)

[19:15] <obra> when I can run kwid with TPF perl6, I'll switch

[19:15] <ingy> no more pod after yapc

[19:15] <obra> Coke_: it's supported by pod2html, which is the use case here ;)

[19:15] <Coke_> actually, that's what I used. 

[19:15] <obra> huh. I know there are version skew issues

[19:16] <obra> some pod2htmls deal and others don't

[19:16] <obra> but really I'm much more concered with getting the raw information written down at this point

[19:17] <autrijus> yup.

[19:17] <ingy> obra: you just gave me an idea

[19:17] <obra> Coke_: can you point me at leo's plan when you reply?

[19:17] <ingy> actually this was thought of by autrijus long ago, but...

[19:18] <ingy> well not quite...

[19:18] <obra> what is it?

[19:18] <ingy> a kwiki plugin such that you can use svn/svk to check out and edit pages

[19:18] <ingy> and svn hooks to store the metadata

[19:19] <obra> isn't that just kwiki::archive::svk?

[19:19] <obra> but yes, I'd like that. a lot

[19:19] <ingy> not quite

[19:19] <ingy> so would I

[19:19] <obra> :)

[19:19] <Schwern> ingy:  What's your talk about?

[19:19] <ingy> Schwern: Apocalypse Now -- Perl6 is Here Today!

[19:20] <ingy> I don't think my Kwiki tutorial got accepted, but I don't know yet

[19:21] <ingy> Schwern: basically I'm playing god\Wautrijus, since she won't be there

[19:21] <dada> ouch

[19:22] <dada> src/Eval.hs:368: Variable not in scope: `retval'

[19:22] <ingy> broken code!?!

[19:22] <Coke_> leo's plan is spread over the mailing list in about 6 emails. =-)

[19:22] <ingy> I like haskell because generally when it compiles it works

[19:23] <ingy> getting to compile is the hard part ;)

[19:23] <pasteling> "dada" at 193.203.230.22 pasted "offending snippet from Eval.hs" (6 lines, 257B) at http://sial.org/pbot/8014

[19:24] *** DrSockHunter is now known as DrHyde

[19:24] <obra> Coke_: If you can tell me what to search for, synthesis is my hob

[19:24] <obra> job

[19:25] <ingy> autrijus: why was PERL5LIB removed from the path?

[19:25] <Coke_> obra: http://groups-beta.google.com/group/perl.perl6.internals/browse_thread/thread/ddfa91a387b9273d/74fd1652e2fbac32#74fd1652e2fbac32

[19:25] <Limbic_Region> Coke_ - IIRC, some of Leo's spread out proposal extends back to when Dan was around and said N-O

[19:25] <autrijus> ingy: because I was appending Perl6/lib/ to there

[19:25] <autrijus> ingy: and you removed it

[19:26] <autrijus> so it now sees Test.pm 

[19:26] <autrijus> which it can't parse

[19:26] <autrijus> and bokred.

[19:26] <nothingmuch> beh

[19:26] <nothingmuch> wifi problems

[19:26] <autrijus> if you want proper p5 interop, we can add it

[19:26] <autrijus> later

[19:26] <autrijus> but not like this, not now

[19:26] <ingy> I see

[19:26] <ingy> makes total sense

[19:26] <ingy> but Darren's problem was different

[19:27] <ingy> autrijus: did you see that btw?

[19:28] <ingy> Schwern: in perl-5.8.1-RC1 when I set INST_LIB to ../../blib/lib MakeMaker kindly changed it to ../../../blib/lib

[19:28] <dada> ohhhhh shame on me

[19:28] <dada> I didn't see the difference between retval and retVal

[19:29] <autrijus> ingy: what problem again? I thought it's the hardcoded ../../blib

[19:29] <autrijus> which broke bad MM

[19:29] <autrijus> and I fixed.

[19:29] <ingy> let me review patch

[19:30] <autrijus> ingy: I just used FindBin::Bin.

[19:30] <dada> how do I get only the first elem of a list in Haskell?

[19:30] <autrijus> head

[19:30] <clkao> not car ?

[19:30] * clkao giggles

[19:30] <dada> it compiles! it compiles!

[19:31] <dada> I needed a $ before the head

[19:31] <ingy> autrijus: that will work although it should use M::I's base

[19:31] * dada feels like playing with lego toys

[19:31] <ingy> will fix

[19:32] * theorbtwo sometimes thinks haskell needs a good case of parens and commas.

[19:32] <autrijus> ingy: I'll leave it to you :)

[19:32] <Khisanth> but it has both!

[19:32] <autrijus> theorbtwo: you can add parens liberally :)

[19:32] <autrijus> commas is harder :)

[19:34] <dada> still, my splat operator doesn't do what it should do :-(

[19:35] <autrijus> as long as it doesn't break more things, feel free to just commit it in.

[19:35] <autrijus> I'll take a look tomorrow.

[19:35] <autrijus> really sleep &

[19:35] <ingy> autrijus: done

[19:36] <obra> Coke_: mailed to myslef for later raiding

[19:36] <autrijus> I take it back; even if it breaks more things, as long as it doesn't break the whole test tree catastrophically, still commit it.

[19:37] * Limbic_Region wonders how autrijus is able to get any sleep

[19:37] <Limbic_Region> after having as mentally stimulating as he must have on a daily basis my mind won't shut off to sleep

[19:38] <theorbtwo> L~R, try noting the time now, and when he next says something.

[19:40] <Limbic_Region> [theorbtwo] - and?

[19:40] <dada> autrijus: were you talking to me about committing?

[19:40] <Limbic_Region> yes dada

[19:40] <theorbtwo> Yeah, he was, dada.

[19:41] <dada> ohhhh

[19:41] <theorbtwo> Subtract.  Ain't that long.

[19:41] <dada> ok, I will commit then. it seems that I didn't broke anything

[19:41] <dada> (yet :-)

[19:42] <Limbic_Region> theorbtwo - any is 0 and the time autrijus is away is longer than that

[20:00] <ingy> r536

[20:09] <nothingmuch> hola lumimies

[20:09] <lumimies> Morning

[20:09] <theorbtwo> G'localtime, lumi.

[20:09] <lumimies> Sorry I'm multiplying

[20:10] <lumimies> I mean morning in the loosest possible sense

[20:10] <crysflame> heh

[20:16] <dada> dammit

[20:17] <dada> I need a way to debug what's happening in pugs

[20:17] <dada> does ghc have a debugger?

[20:19] <dada> seems not

[20:19] <rgs> there's ghci

[20:19] <dada> can I run pugs through ghci?

[20:20] <dada> wait, wait, doesn't ghc have all that +RTS stuff on the command line?

[20:23] <theorbtwo> It does.  You can run pugs with +RTS ... -RTS options.

[20:23] <theorbtwo> But I'm not sure it's useful.

[20:25] <dada> no, it is not

[20:26] <dada> since my ghc is compiled without DEBUG support, I can't use -D

[20:26] <dada> I wonder how does autrijus does debugging of pugs source

[20:36] *** Coke_ is now known as Coke-afk

[20:39] <lumi> That's so annoying

[20:58] *** saorge` is now known as saorge

[21:05] <tmoertel> ingy: any reason why getLibs in returning an IO action?

[21:06] <tmoertel> s/in/is/

[21:13] <Steve_p> Good afternoon stevan :)

[21:13] <stevan> howdy Steve_p 

[21:15] <ingy> tmoertel: what would you suggest?

[21:15] <tmoertel> ingy: if it's not dependent on IO, then "IO a" could become "a"

[21:16] <ingy> tmoertel: I fought with it for 2 hours. Feel free to refactor

[21:16] <tmoertel> otoh, if you are expecting that in a later rev, we'll need to perform IO like doesDirectoryExist on the paths, we ought to leave it in IO

[21:16] <ingy> tmoertel: I was hoping to pair with  you sometime

[21:16] <ingy> btw

[21:16] <tmoertel> cool

[21:16] <ingy> do you have a mac?

[21:17] <tmoertel> ingy: I'm on i386-linux-thread-multi right now, but I have a mac or two in the office

[21:24] <mauke> I've removed the IO part

[21:24] <tmoertel> ingy: take a look at http://community.moertel.com/ss/space/tmoertel/Hackery

[21:24] <mauke> it seems to compile

[21:43] <dada> I go, goodnight goodfellas

[21:43] * joodie waves

[22:51] <ingy> tmoertel: can you commit that or should I?

[22:51] <tmoertel> ingy: I can send a darcs patch out 

[22:52] <ingy> how do darcs and svn get resolved?

[22:52] <tmoertel> ingy: it looks like svn is the master repo and autrijus syncs from svn->darcs periodically

[22:53] <tmoertel> ingy: my guess is autrijus can go darcs->svn, too

[22:53] <tmoertel> ingy: when I commit darcs patches, the go to the perl6-compiler list

[22:53] <nothingmuch> ingy - they don't

[22:54] <nothingmuch> syncup is just svn pull

[22:54] <nothingmuch> darcs recrod -l

[22:54] <nothingmuch> that way conflicts are mad

[22:54] <nothingmuch> e

[22:59] <ingy> well go ahead and submit the patch

[22:59] <tmoertel> ingy: maybe I'll just post a normall diff -u patch and you can apply it?

[23:00] <ingy> I don't need the diff

[23:00] <ingy> sure I'll do it

[23:01] <tmoertel> ingy: you'll need to make a few related changes, too

[23:01] <ingy> crap. cut/paste from that site borks newlines

[23:01] <tmoertel> ingy: see http://community.moertel.com/ss/space/tmoertel/Hackery/pugs-getLibs.patch

[23:01] <ingy> can you email the patch to ingy at ttul dot org

[23:01] <ingy> oh

[23:02] * ingy should learn to read...

[23:02] <tmoertel> I commented out the "PERL5LIB" and "PERLLIB" line to match your more-recent version

[23:03] <tmoertel> ingy: at one point I saw a doesDirectoryExist test. do you still want to do that?

[23:07] <ingy> tmoertel: applied as r539

[23:07] <ingy> tmoertel: no

[23:08] <ingy> because relative paths should work

[23:08] <ingy> perl5 doesn't do exists. neither should we

[23:09] <ingy> (read, it already bit me ;)

[23:09] <tmoertel> that's sound logic, afaics  :)

[23:09] <ingy> laters&

[23:10] <nothingmuch> good night

[23:10] <tmoertel> 'night

[23:36] <safrican> Hello

[23:43] <arcady> hi

[23:50] <mugwump> so, who has an opinion on the junction vs eigenstate thing ?

[23:51] <metaperl_> mugwump, can you expand with examples?

[23:51] <metaperl_> I know eigenstates were in Q::S

[23:51] <metaperl_> I am presenting tonight at our perl mongers meeting on Perl 6 Junctions

[23:51] * metaperl_ groks URL

[23:51] <mugwump> ($a = any(1..9); $b = any(1..9); $c = any(0..9); if ( ($a + $b) == ($a * 10 + $c) ) { say "A + B = AC"; say "$a + $b = ".($a*10+$c) }

[23:52] <metaperl_> actually tomorrow: http://www.hcoop.net/~terry/perl/talks/p6-junctions/

[23:53] <mugwump> see also examples/sendmoremoney.p6 in pugs svn

[23:54] <mugwump> the above is the simplest form of this problem I could find

[23:54] <obra>  mugwump: what are your .tw dates?

[23:54] <mugwump> 23rd midnite  - 31st midday

[23:55] <obra> oh. so no hackathon? :/

[23:56] <mugwump> what date does that start / run to?

[23:56] <obra> not sure. hoas

[23:56] <mugwump> > For now, it would be on 3/28 - 3/31 (4 days) in Hualien.

[23:57] <mugwump> - 簡信昌

[23:57] <mugwump> blast :)

[23:58] <obra> go for 2 days

[23:58] <obra> or 3

[23:58] <obra> it's so worth it

[23:58] <obra> hialien is fucking gorgeous

[23:59] <mugwump> yes, it seems a little early to leave doesn't it

[23:59] <metaperl_> is hualien where the wulai people live?

