[00:00] <cybercobra> absolute last one - zip (|). does it work like zip() in functional langs?

[00:01] <buu> Hrm. Is there any cool new way to play with indexing in to function returns?

[00:01] <putter> no problem.  I'm doing binary search on program composition with a several minute cycle time.   sigh.   hmm, zip... dont remember, checking...

[00:02] <Darren_Duncan> the tutorial is now just ended

[00:02] <Darren_Duncan> seen ingy

[00:02] <jabbot> Darren_Duncan: ingy was seen 19 minutes 41 seconds ago

[00:04] <putter> err, zip yes, but what is "(|)" ?

[00:04] <cybercobra> putter: the ()s aren't part of the operator

[00:05] <cybercobra> i was using the parens to indicate the alternate name for the zip op

[00:06] <iblech> cybercobra: Alternate names for zip are Y and ¥, not |, IIRC

[00:06] <dudley> I thought it was ¥

[00:06] <iblech> | is short for any()

[00:06] <cybercobra> iblech: hmm, I guess the periodic table of operators I have is outdated

[00:06] <ingy> Darren_Duncan: ping

[00:07] <buu> Is there any clever perl6 way to turn foo.bar.baz in to foo.bar and .baz ?

[00:07] <ingy> stevan: ping

[00:07] <sili> buu: with?

[00:07] <dudley> An updated periodic table would be pretty cool.

[00:07] <buu> sili: Begone.

[00:08] <sili> with foozle {

[00:08] <cybercobra> putter: but the zip op does work like I thought, correct?

[00:08] <buu> sili: I think you just bang out random unicode operators and one of them will work.

[00:10] <sili> sounds like p6

[00:10] <buu> Yeah.

[00:10] <putter> zip ( 11,21,31 ; 12,22,32; 31,32,33)  it's in S29draft.pod.  I don't know if the usual "what happens if one list is shorter" has been resolved.

[00:10] <buu> I understand perl7 will be nick named APL

[00:10] <sili> i hear perl8 looks like php

[00:11] <putter> oops, zip ( 11,21,31 ; 21,22,23; 31,32,33)

[00:11] <putter> bah.  yes, the usual. :)

[00:12] <cybercobra> putter: thanks a ton.

[00:12] <putter> ah.  it takes an optional :shortest  to do truncation rather than undef padding.

[00:13] <putter> np. :)

[00:16] <Darren_Duncan> ingy ping

[00:16] <Darren_Duncan> Damian just left after I spoke to him;

[00:16] <Darren_Duncan> I'm in the big room

[00:16] <Darren_Duncan> I also got a description of what you look like from Damian

[00:17] <Darren_Duncan> I'm currently wearing a white iMac shirt and blue jeans, have glasses, and am 6ft tall, no decorations; my backpack has some orange shiny flagging tape on it, and I have an IBook

[00:17] <putter> Sigh.  Just how bad is not saying  is primitive  for a function in the Prelude?  In the presence of  is primitive , the string-flavored macro called by Parser just doesnt work.

[00:18] <Darren_Duncan> big room meaning where evening events are

[00:19] <iblech> putter: (Might be wrong what I say) is primitive causes the sub to not have an own entry in the callstack, i.e. a return will return from the sub executing the primitive instead of the primitive itself

[00:19] * putter wonders how long before people get more outlandish to improve visibility... I have the red left sleeve, green right, and checkerboard vest...

[00:19] <iblech> putter: So I think it's ok to omit the is primitive

[00:20] <dudley> putter: I used to have a shirt like that...

[00:20] <putter> iblech: my thanks.

[00:21] <iblech> putter: np. :)

[00:25] <Darren_Duncan> if anyone is at OSCON, I have held a seat for the main tuesday event in the front row in front of the podium, right of the aisle

[00:25] <Darren_Duncan> come 'n meet

[00:26] <Darren_Duncan> temp signoff to save power now

[00:26] <svnbot6> r6011 | iblech++ | PIL2JS: Fix lexical stomping in some rare cases (&statement_control:<for> was

[00:26] <svnbot6> r6011 | iblech++ | affected, though...). "But I thought you've already fixed that some revs ago,

[00:26] <svnbot6> r6011 | iblech++ | by backuping lexical vars on subentry and restoring them on subexit, in the

[00:26] <svnbot6> r6011 | iblech++ | &return()-handler?" -- Yes. But the native JavaScript return() was still called

[00:26] <svnbot6> r6011 | iblech++ | in two places, causing the &return()-handler to not be executed causing the

[00:26] <svnbot6> r6011 | iblech++ | restoring of vars not happen causing many infinite loops when running the

[00:27] <svnbot6> r6011 | iblech++ | testsuite.  Fixed.

[00:55] <ingy> grrr

[00:56] <ingy> I think my irssi logging is busted

[00:56] <ingy> can someone email me the interview in the scrollby from earlier?

[00:56] <ingy> [email@hidden.address]
[00:56] <ingy> thanks

[00:57] <iblech> ingy: http://colabti.de/irclogger/irclogger_logs/perl6

[00:59] <ingy> rock

[00:59] <ingy> iblech++

[01:03] <iblech> http://m19s28.vlinux.de/iblech/stuff/not_perm/pil2js-demo/t/smoke.html # New jssmoke, uploading the individual tests in ~~5min

[01:03] <iblech> (4514 test cases: 2764 ok, 1750 failed, 471 todo, 2 skipped and 55 unexpectedly succeeded, 61.23% ok)

[01:39] <putter> iblech: re smoke, I think there's a p6 version of splice in the PIR prelude.

[01:40] <iblech> putter: ooh! Looking...

[01:40] <Darren_Duncan> back online ... in the front of the main room, anyone can stop by and visit

[01:40] <Darren_Duncan> big talks in 1 hour

[01:41] <iblech> putter: Great! I'll add this to Prelude::JS::Array and see if it passes the tests :)

[01:43] <putter> :)  Which may be the first time it's ever been run... ;)  (my fuzzy recollection is that at the time it was written distinct(?) pir and pugs bugs prevented it being run anywhere)

[01:56] <iblech> Unfortunately, it seems to infinite loop before the first test result of splice.t is printed

[01:57] <putter> bah.  I'll take a look at it.  I think the pugsbugs which stopped it from running have long been fixed.

[01:58] <iblech> Great, thanks :)

[02:00] <svnbot6> r6012 | iblech++ | * PIL2JS: Copied Prelude::PIR's &splice to Prelude::JS::Array and fixed a Perl

[02:00] <svnbot6> r6012 | iblech++ |   5-ism ($array[$idx] instead of @array[$idx]). Doesn't work yet, though.

[02:00] <svnbot6> r6012 | iblech++ | * 19 testfiles: unEVALs or eval -> try. Some tests pass now, because of the

[02:00] <svnbot6> r6012 | iblech++ |   lexicals-in-eval thing. I went through all subdirs of t/, with the exception

[02:00] <svnbot6> r6012 | iblech++ |   of pugsbugs/ and unspecced/, will probably look into them tomorrow.

[02:01] <iblech> Ok, need to sleep now

[02:01] <iblech> Night all :)

[02:37] <cybercobra> is there going to be a libpcre for perl6? or is libpcre unofficial?

[02:59] <putter> iblech: PIR.hs splice now passes splice.t with 2 failures due to want.List being :todo<feature>.

[02:59] <svnbot6> r6013 | putter++ | src/perl6/Prelude/PIR.pm: splice bugfixes.  iblech++

[03:27] <stevan> ingy: pingy

[03:30] <stevan> ingy: I am not sure why the movie is not working, I can reproduce the issue here when i download it

[03:30] <stevan> however the original plays fine locally

[03:30] <stevan> I am going to try and zip it and see if that fixes the issue

[03:38] <stevan> ingy: the movie is now zipped on the server

[03:38] <stevan> and downloading it is successfull

[03:39] <stevan> it is kind of rough, I dont have any really good movie editing software

[03:39] <stevan> if you want to remake the animation part, let me know, i will send you the images, and the audio portion as well

[03:45] <dudley> stevan: It works for me. Good stuff :-)

[03:45] <dudley> stevan++

[03:47] <dudley> I'm just glad my wife didn't hear me laughing at it, she would have mocked me mercilessly for rampant geekitude.

[03:47] <dudley> ;-)

[03:49] <stevan> dudley: even worse, my wife heard me making it :)

[03:50] <dudley> heh

[03:52] <dudley> If you had to recommend one book on objects/metaobjects, which would it be? I was considering The Art of the Metaobject Protocol

[03:54] <dudley> bbiab

[03:54] <stevan> dudley: yes, that is the best one so far

[03:54] <stevan> in fact, it is pretty much the only one i have found

[03:55] <stevan> There is another book "Putting MetaClasses to Work" 

[03:55] <stevan> but it is not as good as The Art of MOP

[03:55] <stevan> besides Scheme is sooooo much prettier than C++ :)

[04:06] <dudley> That's not saying much :)

[04:06] <svnbot6> r6014 | Stevan++ | adding The Art of the MetaObject Protocol to the list

[04:06] <svnbot6> r6015 | putter++ | src/Pugs/Parser.hs: reverted to r6012.  Some experimental changes were unintentionally included in r6013.  Sorry.

[04:08] <stevan> iblech++ # PIL2JS is unstoppable

[04:08] <stevan> iblech: you will need to add details about PIL2JS in the changelog, as I am not sure how much to include

[04:10] <stevan> gaal: ping (how much "complete" is PugsBuild?)

[04:13] <dudley> Goodnight, everybody

[04:13] <dudley> sleep &

[04:13] <stevan> nite dudley 

[04:30] <stevan> putter: please add your Rule work to the Changelog, I am not sure I understand whats going on there :)

[04:47] <svnbot6> r6016 | Stevan++ | 6.2.9 changelog ... surely some stuff is missing; autrijus, iblech, gaal and putter please review

[04:57] <svnbot6> r6017 | Stevan++ | Perl6::MetaModel - Method, PrivateMethod and SubMethod are now implemented as closures; not 100% sure where this is going yet, but it is a start

[04:58] <putter> stevan: nothing worth mentioning.

[04:58] <putter> (re Changelog)

[04:59] <stevan> putter: okay, thanks :)

[05:04] <putter> stevan: actually... ok, PGE's :words (aka :w) got exposed.  but there are no tests, and while it seemed to work, there also seemed to be some bugs.  on the other hand, it's something folks have expressed interest in having in the past.  so... whatever you think.

[05:05] <putter> on the gripping hand, you probably have to be using parrot HEAD for it to work.  so lets punt until next release, when the parrot/PGE situation is cleaner, and further stuff has been done.

[05:06] <stevan> ok

[05:07] <Aankhen``> Morning.

[05:07] <stevan> hola Aankhen`` 

[05:07] <Aankhen``> stevan :-)

[05:07] * Aankhen`` wonders how to unbreak his SVK.

[05:08] * Aankhen`` is probably going to end up installing MingW again just to build XML::Xerces... :-\

[05:08] <Aankhen``> (which is required for SWIG, which is required for building the Perl bindings for Subversion, which is required for SVK)

[05:18] <putter> ^.^

[05:19] <putter> maze of twisty little passages...

[05:27] <gaal> stevan: pong

[05:27] <gaal> good morning

[05:28] <gaal> PugsBuild is not complete in the sense that many things should be assimilated into it

[05:28] <gaal> that is, lots of options that were now added ad-hoc to the place that needs them as env vars need to be put there.

[05:29] <gaal> also, eventually it can be nice to have a Configure script that lets a user create their config.yml (or edit one)

[05:29] <stevan> gaal: cool

[05:29] <gaal> as for correctness: there are still a few rough edges

[05:29] <gaal> for example: make ; make rebuilgs pugs

[05:29] <gaal> twice

[05:30] <gaal> because precompilation isn't smart enough to detect when something's changed or not

[05:30] <stevan> ok, please clarify the changelog then when you have a second

[05:30] <gaal> that may sound not very bad, but consider how often you legitimately want to do make and then some time afterwards make smoke

[05:31] <gaal> also also, the centralized switch of PUGS_BUILD_OPTS doesn't have a rational way of handling array data, for example precompiled_modules

[05:31] <gaal> but it needs to - that's the point.

[05:31] <gaal> OK

[05:34] <gaal> stevan

[05:34] <Aankhen``> Heh.

[05:34] <Aankhen``> Connection lost!

[05:34] <gaal> feather needs another alias

[05:34] <gaal> there.is.no etc.

[05:36] <gaal> Aankhen``, huh?

[05:37] <Aankhen``> stevan has disappeared. :-P

[05:37] <gaal> ah. he must not like build stuff very much :)

[05:37] <stevan> sorry, i am here

[05:37] <Aankhen``> I wonder why... I thought EVERYONE finds that stuff fascinating. ;-)

[05:37] <stevan> just metamodel-ing

[05:38] <gaal> hey, Stevan, the line about $CALLER::_ is probably a bugfix, no?

[05:38] <stevan> gaal: to be honest, I have no idea

[05:38] <stevan> it seemed like a feature :)

[05:38] <gaal> btw, the movie is unplayable for me too

[05:39] <gaal> oh crap, i gotta vamoose to $work

[05:39] <stevan> gaal: did you download the zip?

[05:39] <gaal> yes

[05:39] <stevan> odd

[05:39] <stevan> I need to install iMovie or something

[05:39] <svnbot6> r6018 | Stevan++ | Perl6::MetaModel -

[05:39] <svnbot6> r6018 | Stevan++ | * Perl6::Class now just creates Class objects, no more dispatch handling

[05:39] <svnbot6> r6018 | Stevan++ | * Perl6::Instance now handles dispatching, and is where most of the p5 suger is

[05:39] <svnbot6> r6018 | Stevan++ | * removed all "type" checking in attributes, this is not the responsbility of the metamodel 

[05:39] <Aankhen``> stevan++ # Metamodels :-)

[05:39] <gaal> see y'all later folks &

[05:40] <Aankhen``> See ya gaal.

[05:46] <svnbot6> r6019 | gaal++ | add info about PugsBuild

[06:15] <svnbot6> r6020 | Stevan++ | Perl6::MetaModel - 

[06:15] <svnbot6> r6020 | Stevan++ | * removed ->meta calls on the meta class, we now bootstrap the meta-meta

[06:15] <svnbot6> r6020 | Stevan++ |   class when it is created

[06:15] <svnbot6> r6020 | Stevan++ | * all metaclass access is now through ::meta() global function

[06:17] <putter> Good night. &

[06:54] <ingy> stevan: url?

[06:56] <pdcawley> What does PIL stand for?

[06:57] <QtPlatypus> Pugs Intermeadate Langage.

[06:57] <pdcawley> Ta.

[06:57] * castaway_ lends QtPlatypus a 'u'

[07:02] <QtPlatypus> Thank u

[07:04] * Aankhen`` lends castaway_ an ewe.

[07:05] <castaway_> ta ,)

[07:06] *** castaway_ is now known as castaway

[08:01] <nothingmuch> morning

[08:02] <szabgab> ha

[08:03] <szabgab> nothingmuch: I will have this lightning talk tomorrow

[08:03] <szabgab> it seems they don't have enough people so they gave me 10 minutes

[08:03] <nothingmuch> eh?

[08:03] <szabgab> do you know the Hebrew name of Pugs ?

[08:04] <szabgab> I am talking about AP4

[08:06] <nothingmuch> פאגס?

[08:07] <nothingmuch> i know you are, but i thought like "i will have this lightnning talk tomorrow"... as opposed to next week?

[08:13] *** nnunley2 is now known as nnunley

[08:17] * nothingmuch goes to stage template toolkit and class dbi in the crud arena

[08:17] <nothingmuch> cdbi is bringing weird lookup tables into the ring

[08:32] <brentdax> Does anyone know if we'll see 6.2.9 tomorrow?

[08:42] <szabgab> nothingmuch: next week is a regular pm meeting, tomorrow is AP4

[08:42] <nothingmuch> i know =)

[08:42] <szabgab> on the regular pm I talk regular stuff

[08:42] <szabgab> on ap4 I talk light

[08:44] <szabgab> I need to prepare the talk now

[08:45] <nothingmuch> have fun

[09:00] <dada> ?eval given((1,2,3)) { .[0]+.[1].+.[2] }

[09:00] <evalbot6> Error:  unexpected "{" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[09:01] <dada> ?eval given((1,2,3)) { $_.[0]+$_.[1]+$_.[2] }

[09:01] <evalbot6> 6 

[09:01] <dada> ?eval given((1,2,3)) { .[0]+.[1]+.[2] }

[09:01] <evalbot6> Error:  unexpected "{" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[09:01] <dada> that's wrong

[09:02] <pdcawley_> By gum it is too.

[09:02] <dada> pdcawley_: huh?

[09:02] <pdcawley_> ?eval given((1)) { .length }

[09:03] <evalbot6> Error: No compatible subroutine found: "&length" 

[09:03] <pdcawley_> Wrong.

[09:03] <dada> less wrong, however

[09:03] <dada> ?eval given("hello") { .length }

[09:03] <evalbot6> Error: No compatible subroutine found: "&length" 

[09:03] <pdcawley_> ?eval given({foo => 'bar'}) { .{foo} }

[09:03] <evalbot6> Error:  unexpected "{" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[09:03] <dada> ?eval given("hello") { $_.length }

[09:03] <evalbot6> Error: No compatible subroutine found: "&length" 

[09:04] <pdcawley_> Looks like it's the brackets...

[09:04] <dada> ?eval given("hello") { $_.chars }

[09:04] <evalbot6> 5 

[09:04] <dada> ?eval given("hello") { .chars }

[09:04] <evalbot6> 5 

[09:04] <pdcawley_> ?eval given(-> {'foo'}) {.()}

[09:04] <evalbot6> Error:  unexpected "{" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[09:04] <dada> brackets and square ones, as in my previous example

[09:04] <pdcawley_> ?eval given(->{'foo'}) { $_.() }

[09:04] <evalbot6> 'foo' 

[09:05] <pdcawley_> And parentheses.

[09:05] <dada> ?eval given([1,2,3]) { .[0] }

[09:05] <evalbot6> Error:  unexpected "{" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[09:05] <dada> damn

[09:05] <pdcawley_> That's a grammar thing.

[09:05] <pdcawley_> it's not looking at the value of $_, it's just misparsing before it gets to that.

[09:06] * pdcawley_ would write a test, but has a summary to write. And I've finished my cup of tea so I'd better get on.

[09:06] * dada goes testwriting

[09:08] <nothingmuch> templates are either not primitive enough, or too primitive

[09:08] * nothingmuch wants a templating module with higher order functions

[09:08] <nothingmuch> where each function is really a template block

[09:09] <dada> that's hot

[09:09] <dada> (higher order template, that is :-)

[09:09] <nothingmuch> because if there is one functional concept that templating should benefit from is combinators

[09:09] <nothingmuch> for example a table combinator

[09:09] <nothingmuch> that takes a templater that templates cells

[09:10] <nothingmuch> and tabular structure

[09:10] <nothingmuch> and then applies the cell template to the elements of the table

[09:10] * nothingmuch wonders if there is a templating library in haskell

[09:12] <Aankhen``> Care to explain what a combinator is?

[09:13] <pdcawley_> A function that takes functions as an argument and returns a new function?

[09:14] <pdcawley_> def apply(&f, &g) { sub { &g(&f(*@_)) } } # For instance

[09:14] <nothingmuch> Aankhen``: think map is an example of one

[09:14] <nothingmuch> in this case we're taking an input 

[09:15] <nothingmuch> and a function

[09:15] <nothingmuch> and we are creating an output that is constructed by applying the function to the input

[09:15] <nothingmuch> the function cares about the nested elements

[09:15] <nothingmuch> the combinator cares about the structure

[09:16] <Aankhen``> Hrm.

[09:16] <Aankhen``> I see.

[09:16] <Aankhen``> Wow, I actually do see.

[09:16] * Aankhen`` faints.

[09:16] <pdcawley_> Heh. Have you read Higher Order Perl yet?

[09:16] <nothingmuch> nope

[09:16] <Aankhen``> Me?

[09:16] * pdcawley_ grins at nothingmuch, you probably don't need to.

[09:16] <Aankhen``> No, I haven't.

[09:17] <nothingmuch> how come?

[09:17] <nothingmuch> i don't really know my stuff =)

[09:17] <pdcawley_> You should. Good stuff in there on programming perl in a functional style.

[09:17] <nothingmuch> i have other monatary priorities at the moment though =)

[09:17] <Aankhen``> Will do.

[09:17] <nothingmuch> anyway, @work is being taken out to lunch

[09:17] <nothingmuch> ciao!

[09:17] <Aankhen``> (I am assuming you are still talking to me)

[09:17] <pdcawley_> Still lots of value in there even if you do know about higher order functions.

[09:18] <pdcawley_> Aankhen: Yes.

[09:18] <pdcawley_> Right, off to finish the summary.

[09:18] <Aankhen``> See ya.

[10:03] <pdcawley> Is Thomas Sandlaß in here?

[10:15] <svnbot6> r6021 | autrijus++ | * .assuming() should support the new pair-first binding semantics too.

[10:15] <svnbot6> r6022 | autrijus++ | * fix random typo in dollar_underscore.t

[10:16] * pdcawley notes that every time he writes the summary he finds himself wanting to shout at TSa...

[10:17] <GeJ> for thread hijacking? isn't this punishable by law?

[10:17] <GeJ> that should be.

[10:18] <pdcawley> Has anything he's ever said ever cast light on *anything*?

[10:18] <pdcawley> His ability to ignore the wider question in favour of nitpicking the particular example chosen to illustrate it is quite staggering.

[10:18] <pdcawley> And it's not just me he's done it to.

[10:34] <pdcawley> This channel is logged and googlable isn't it?

[10:34] <svnbot6> r6023 | autrijus++ | * run-smoke.pl assumed everyone was iblech... that's not the case :)

[10:35] <pdcawley> Ah well, I stand by it, even if I wouldn't say it in a summary.

[10:35] <autrijus> :)

[10:35] * pdcawley has come damned close on occasion.

[10:36] <autrijus> however, if not for TSa, the warnock rate on p6[lc] will likely double

[10:36] * pdcawley giggles.

[10:37] <pdcawley> <warnocked post>, <Thomas says something>, <No thomas, you're wrong and here's why> And yay, the thread is unwarnocked.

[10:37] <autrijus> yup.

[10:37] <pdcawley> I shall try to look at it that way from now on.

[10:37] <pdcawley> Thank you for your insight.

[10:37] <autrijus> no prob :)

[10:37] * autrijus is relenging finally

[10:37] <autrijus> how many hours do we have till ingy's talk?

[10:38] <pdcawley> relenging?

[10:38] <autrijus> release engineering

[10:38] <pdcawley> Ah.

[10:38] <pdcawley> So, how much of his talk do you plan to have outdated by the time he gives it?

[10:40] <autrijus> I don't know, all of it maybe?

[10:40] <pdcawley> Yay!

[10:40] <autrijus> "Seeing that CMU Common Lisp's compiler is called Python, we decide to rename Pugs to Python too"

[10:41] <autrijus> "Unification through renaming"

[10:42] <pdcawley> Yay!

[10:42] <pdcawley> BTW, have you seen the thing I just posted suggesting 'bundle' types?

[10:43] <pdcawley> As a way round the Any|Junction thing.

[10:46] <autrijus> I think the consensus shifted for Any to include Junction now.

[10:46] <pdcawley> But now Array.isa(Single) right?

[10:47] <pdcawley> Which seems odd in its own way.

[10:47] <autrijus> although, Array is not a value type

[10:48] <autrijus> you can't have a value of the type Array.

[10:48] * pdcawley blinks.

[10:48] <autrijus> the basic idea is that the parameter is composed of a container type and a value type

[10:48] <autrijus> container type is currently $ @ %

[10:48] <pdcawley> And a Junction's a value type?

[10:48] <autrijus> I propose & is unified to $

[10:49] <autrijus> yes.

[10:49] <autrijus> a value is either an intrinsic, or an object

[10:49] <autrijus> it's all in http://svn.openfoundry.org/pugs/src/PIL.hs

[10:50] <autrijus> quite formalized; I'll write up a detailed treatment after the release

[10:50] <pdcawley> I'm failing to see how a junction can be a value type, but an array isn't.

[10:50] <autrijus> okay. a scalar container can hold a junction.

[10:50] <pdcawley> Can't I write: sub foo (Array $ary) {...}

[10:50] <pdcawley> Or isn't that quite the same thing.

[10:50] <autrijus> why, yes, but that means something else

[10:50] <autrijus> it means "Scalar of Ref of Array"

[10:50] <autrijus> just shorthanded

[10:51] <pdcawley> But a Junction isn't a reference type in the same way... okay...

[10:51] <autrijus> yup.

[10:51] <autrijus> you can have "Scalar of Junction".

[10:51] <autrijus> no need to say Ref of.

[10:51] <autrijus> in fact, Ref only points to containers.

[10:51] <autrijus> sometimes constant containers

[10:51] <autrijus> as in "is constant"

[10:51] <pdcawley> Because it needs to do scary implicit things that it can't do when it's isolated behind a reference?

[10:51] <autrijus> but containers nevertheless.

[10:52] <autrijus> no, just because there's no junctive container.

[10:52] <autrijus> there are only three container types in perl6 and that's fixed.

[10:52] <pdcawley> So I can't take a reference to a junction, I take a reference to a scalar that *contains* a junction.

[10:52] <autrijus> yup.

[10:52] <autrijus> and it may be a constant nonrebindable scalar container

[10:52] <autrijus> so it's almost as good as a value

[10:52] <autrijus> but still not quite -- it's always passed by ref

[10:53] <autrijus> instead of values, where you copy the value.

[10:53] <pdcawley> Can I subtype, say Array, and then say that a particular @array uses my subclass as its container?

[10:53] <autrijus> that amounts to tying

[10:53] <autrijus> and yes.

[10:53] <autrijus> so container types must belong two one of the three fundamental interfaces

[10:53] <autrijus> if it conforms to neither, it's not making any sense.

[10:53] <pdcawley> For instance, adding something like the Smalltalk collection hierarchy and using them in @ary things.

[10:53] <autrijus> s/two one/to one/

[10:54] <autrijus> that is fine, but you are then acting on the container level

[10:54] <autrijus> not the value level

[10:54] <pdcawley> Gotcha. And good.

[10:54] <autrijus> so even if you undef @ary, that tie remains

[10:54] <autrijus> yeah, it's all very clean. putter++ iblech++ for forcing this rethink

[10:54] <pdcawley> And anything I put in @ary gets put in my collection.

[10:54] <autrijus> yup.

[10:54] <pdcawley> Until I either untie, or retie.

[10:54] <autrijus> oh. a constant immutable container is different from a value in one very real way

[10:55] <autrijus> that is it has a =:=

[10:55] <autrijus> i.e. unique identity

[10:55] <pdcawley> Useful for hashing, for instance.

[10:55] <autrijus> it never makes sense to test =:= on values.

[10:55] <autrijus> or bind them.

[10:55] <autrijus> S03 makes it quite clear that =:= is operating on the container level.

[10:56] <autrijus> anyway, I'm currently formulating Pair as having the "key" side as a value the "val" side as a container.

[10:56] <autrijus> it is consistent with the S* usage

[10:56] <pdcawley> So, for instance, a Pair doesn't have an id, but the box it's in does.

[10:56] <autrijus> yes.

[10:57] <pdcawley> Doesn't this have problems when the box is a Ref?

[10:57] <autrijus> npe

[10:57] <pdcawley> Because by the sound of it a Ref is a value type, but it seems to make a good deal of sense that it should implement =:=

[10:57] <autrijus> a container of id #123 contains a value of the Ref type

[10:57] <autrijus> if you want to do =:= on that ref, you deref it.

[10:57] <autrijus> ${$ref} =:= ...

[10:58] <autrijus> if you don't then it's testing the outer box.

[10:58] <autrijus> (all this is consistent with perl5.)

[10:58] <pdcawley> So, we have Scalar<isa Container> -> Ref<isa Value> -> Pair<isa Value>

[10:58] <pdcawley> Or am I missing something?

[10:59] <autrijus> only =:= in perl5 is spelled as overload::AddrRef

[10:59] <autrijus> data Container = Scalar (Cell Scalar)  -- Scalar container

[10:59] <autrijus> a Cell is either Constant or Mutable

[10:59] <pdcawley> Should that really be Scalar<isa Container> -> Ref<isa Value> -> AnonScalar<isa Container> -> Pair<isa Value>

[11:00] <autrijus> pdcawley: right, the last formulation is correct.

[11:00] <autrijus> the Anon part doesn't matter

[11:00] <autrijus> Scalar doesn't know if they are anon or not

[11:00] <autrijus> they are always anon, in a sense

[11:00] <pdcawley> Well, no, just for my bookkeeping.

[11:00] <autrijus> the pad binds them to names

[11:00] <autrijus> ah. good. ok

[11:00] <autrijus> and a Value is either intrinsic (ref) or object (Ref)

[11:00] <autrijus> but either way they are not containers.

[11:00] <pdcawley> Which reminds me, are we going to have Symbol as a first class type in Perl?

[11:01] <autrijus> you mean lispish symbols?

[11:01] <pdcawley> Yeah.

[11:01] <autrijus> perl has first-class types

[11:01] <autrijus> which is symbols in two levels

[11:01] <autrijus> one is the

[11:01] <autrijus> ::SymName

[11:01] <autrijus> level

[11:01] <pdcawley> I meant, is a namespace going to be analogous to a hash of strings, or a hash of symbols?

[11:01] <autrijus> one is

[11:02] <autrijus> :(Any $foo) level

[11:02] <autrijus> newtype Pad = MkPad (Map Sym Container)

[11:02] <autrijus> (a Pad is a map from sym to container)

[11:02] <autrijus> data Sym = MkSym { sigil  :: Char , twigil :: Maybe Char , name   :: Name }

[11:02] <autrijus> (a symbol is a type that has sigil, twigil, name parts)

[11:02] <autrijus> newtype Name = MkName { unName :: String }

[11:02] <autrijus> (a name is a tagged string.)

[11:03] <pdcawley> And symbols are unique?

[11:03] <autrijus> they are immutable.

[11:03] <autrijus> hence, unique, in a sense.

[11:03] <pdcawley> So one could potentially write String.intern returns Symbol

[11:03] <autrijus> one could. but I don't know if this is exposed to the language.

[11:03] <autrijus> the runtime is certainly required to support them

[11:03] <pdcawley> And have it return the existing Symbol for that string if it already existed.

[11:03] <autrijus> but I don't know how to expose them.

[11:03] <autrijus> i.e. it never came up. so p6l it :)

[11:04] <autrijus> (it's trivial to expose them from an implementation pov)

[11:04] <pdcawley> It's just that in Ruby there's a good deal of slinging of symbols about the place and it's quite useful. (Not hurt by the fact that they have a handy symbol quoting operator)

[11:05] * pdcawley grins, the fun begins if you start mucking about with '$foo with spaces'.intern :)

[11:05] <pdcawley> Perl5 symbol tables are *such* fun.

[11:05] <autrijus> perl usually use constant strings as symbols.

[11:05] <autrijus> I'm not opposed to that, really.

[11:06] <pdcawley> It's just that, if you're slinging symbols around, your equality checks get much cheaper...

[11:06] <pdcawley> (if they're unique symbols that is)

[11:06] <autrijus> well, a good compiler should turn all constant string comparison into integer checks.

[11:06] <autrijus> in fact, I think PIR does that.

[11:06] <autrijus> i.e. it hoists constant strings into the constant segmant

[11:06] <autrijus> *segment

[11:07] <pdcawley> Yeah, but being able to do "string".intern and get a flyweight for slinging around has its virtues even at a language level.

[11:08] <autrijus> I don't dispute that :)

[11:08] <pdcawley> I'll kick something up to p6l later. Need to write the summary.

[11:08] <autrijus> <- wrote enough scheme to appreciate this

[11:08] <pdcawley> I've written very little scheme, but it appeals to me as a language.

[11:08] <pdcawley> The cunning stuff that gets done with symbol properties for instance is both delightful and evil.

[11:10] * pdcawley grins. Plus, if it's an exposed class, we can extend it.

[11:11] <pdcawley> If symbol tables are exposed as using strings, that's less useful/more painful.

[11:15] <autrijus> they can't be less useful

[11:15] <autrijus> since it can do strictly more things

[11:16] <autrijus> but it could be argued that it's more painful

[11:16] <dada> ?eval 1 if 'a' ~~ /a/;

[11:16] <evalbot6> pugs: src/events.c:270: init_events_first: Assertion `rc == 0' failed. 

[11:16] <pdcawley> Actually, they can be less useful, because the variety of things you can do with strings gets in the way of using them effectively as symbols.

[11:17] <autrijus> right but that's still a cognitive overload thing

[11:17] <autrijus> to the type system they are essentially heavily constrained showable stuff.

[11:17] <dada> no rules yes?

[11:17] <autrijus> (and comparable and ordered)

[11:17] <autrijus> dada: not in evalbot

[11:17] <dada> mmm

[11:17] <autrijus> dada: some kind of parrot problems

[11:17] <pdcawley> Are symbols necessarily ordered?

[11:17] <dada> I've downloaded the binary build of pugs, and no rules there too

[11:18] <pdcawley> Because the rules are handled in Parrot.

[11:18] <pdcawley> I think.

[11:18] <dada> but there is a parrot.exe in the distribution

[11:18] <dada> what I get is:

[11:18] <dada> *** Cannot parse PGE: a

[11:18] <autrijus> pdcawley: they are ordered by their hashes

[11:18] <dada> *** Error: invalid argument

[11:18] <autrijus> or addresses

[11:18] <autrijus> at least

[11:19] <pdcawley> What if you do /a/ ~~ 'a'?

[11:19] <autrijus> but yeah, "hashable" is probably a better term

[11:19] <autrijus> dada: you have parrot 0.2.2-release?

[11:19] <autrijus> and pugs 6.2.8-release?

[11:19] <dada> autrijus: no error, but no match either

[11:20] <autrijus> dada: hm.

[11:20] <dada> autrijus: no, I got the nightly build binaries

[11:20] <autrijus> parrot nightly is known to be unsupported by pugs

[11:20] <autrijus> we can only target releases

[11:20] <autrijus> esp. with the huge refactoring going on right now in both sides

[11:21] <dada> ok; so is svn pugs known to be working with parrot 0.2.2-release?

[11:21] <autrijus> yes I think so

[11:23] * dada sighs

[11:23] <autrijus> ?eval 'a' ~~ m:P5/a/

[11:23] <evalbot6> MkMatch {matchOk = True, matchFrom = 0, matchTo = 1, matchStr = "a", matchSubPos = [], matchSubNamed = {}} 

[11:23] * dada still has ghc 6.2.2 :-(

[11:24] <autrijus> ?eval m:P5/a/ ~~ 'a'

[11:24] <evalbot6> MkMatch {matchOk = True, matchFrom = 0, matchTo = 1, matchStr = "a", matchSubPos = [], matchSubNamed = {}} 

[11:24] <autrijus> dada: hm, you can't install 6.4?

[11:24] <dada> autrijus: downloading it now

[11:25] <autrijus> oh ok. there's also 6.4.1-tobe builds as http://haskell.org/ghc/dist/stable/dist/ghc-6.4.1.20050803-i386-unknown-mingw32.tar.gz

[11:25] <autrijus> no function changes, just some speedups and less "impossible" bugs

[11:25] <dada> autrijus: I can only target releases :-)

[11:25] <autrijus> lol.

[11:25] <autrijus> note that neither parrot nor pugs has a "-stable" branch :)

[11:27] <dada> so, while I take the time to configure my system to be able to do some testing, I have a bug for you:

[11:28] <dada> ?eval given('hello') { .chars }

[11:28] <evalbot6> 5 

[11:28] <dada> ?eval given((1,2,3)) { .length }

[11:28] <evalbot6> Error: No compatible subroutine found: "&length" 

[11:28] <dada> oops

[11:28] <dada> ?eval given((1,2,3)) { .elems }

[11:28] <evalbot6> 3 

[11:28] <dada> ?eval given((1,2,3)) { .[0] }

[11:28] <evalbot6> Error:  unexpected "{" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[11:28] <pdcawley> Did you write the tests yet?

[11:29] <dada> pdcawley: still downloading the latest ghc to build the latest pugs :-)

[11:29] <pdcawley> Not got a feather account?

[11:29] <dada> nope

[11:29] <autrijus> dada: nod, prefix .[] is known to be missing. grep for a test or write a new one as :todo<feature>

[11:29] <pdcawley> ?eval given({foo => 'bar'}) { .{'foo'} }

[11:29] <evalbot6> Error:  unexpected "{" expecting operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[11:29] <autrijus> it's a parser thing

[11:30] <pdcawley> and .() fails too.

[11:30] <dada> autrijus: yes, I meant to show the bug in the parser

[11:30] <dada> ?eval given((1,2,3)) { $_.[0] }

[11:30] <evalbot6> \1 

[11:30] <autrijus> nod

[11:30] <autrijus> tests welcome

[11:30] <dada> they're coming

[11:31] <dada> ...slowly

[11:31] <autrijus> brb

[11:32] <pdcawley> seen brentdax?

[11:32] <jabbot> pdcawley: brentdax was seen 3 hours 49 seconds ago

[11:33] <pdcawley> Brent, if you're there, I've forgotten whether you prefer to go by Brent Dax or Brent Royal-Gordon in the summaries.

[11:41] <dada> pdcawley: can you tell me more about these feather accounts? :-)

[11:42] <coral> "This week's summary by Brent 'Dax' Royal-Gordo"

[11:42] <coral> from google

[11:42] <pdcawley> Don't ask me, ask Juerd.

[11:42] <pdcawley> google feather.perl6.nl for pointers.

[11:43] <pdcawley> I'm damned if I'm typing the whole lot out :)

[11:43] <pdcawley> re Brent's handle.

[11:43] <pdcawley> Maybe I should promote him to the ranks of the mononyms.

[11:43] <coral> in 2002 he was just Brent Dax

[11:44] <dada> seen Juerd?

[11:44] <jabbot> dada: Juerd was seen 4 days 13 hours 34 minutes 19 seconds ago

[11:44] * pdcawley grins, 'Brent Royal-Gordon née Dax' is probably laying it on a bit thick.

[11:45] <coral> heh

[11:45] <coral> perfect

[11:46] <pdcawley> That should be (née Dax) shouldn't it?

[11:46] * pdcawley wishes he could see Brent's face when he scrolls back though the log.

[11:53] <rafl> Is 6.2.9 already released?

[11:56] <coral> by topic, no?

[11:57] * rafl only looked at the changelog.

[11:58] <castaway> dada: [email@hidden.address] :)

[11:58] <castaway> Send name, email address and say "make me a feature account please"

[11:59] <castaway> umm, "feather"

[11:59] <dudley> dada: But I think Juerd was going on vacation for a while

[12:04] <iblech> putter++ # Implemented &splice in Perl 6, passes tests! Thanks very much :)

[12:19] <svnbot6> r6024 | iblech++ | * PIL2JS: Prelude::JS::Array: Copied putter++'s &splice from Prelude::PIR --

[12:19] <svnbot6> r6024 | iblech++ |   passes tests, thanks :)

[12:19] <svnbot6> r6024 | iblech++ | * util/yaml_harness.pl, util/run-smoke.pl: Made it completely work again,

[12:19] <svnbot6> r6024 | iblech++ |   normal smoke tests ext/ again, jssmoke does not.

[12:19] <svnbot6> r6024 | iblech++ | * Makefile.PL: Added jssmoke target.

[12:32] *** xinming1983 is now known as xinming

[12:36] <Limbic_Region> seen autrijus

[12:36] <jabbot> Limbic_Region: autrijus was seen 1 hours 5 minutes ago

[12:36] <Limbic_Region> autrijus ping

[12:39] <Limbic_Region> autrijus - I assume you will backlog.  Please read http://use.perl.org/~Limbic%20Region/journal/26062 and tell me if there is anything you want to change or if you would rather I delete the entry all together.  I forgot to ask the obvious question - if someone is interested in funding, what should they do?

[12:52] <pdcawley> autrijus: Just a thought, under what you were saying about container types, @foo := $foo is illegal right?

[12:58] * pdcawley reads to the end of the thread and attempts to unask the question.

[13:03] <szabgab> beginners help, how do you translate this P5 regex: /^P.*/  ? 

[13:03] <Limbic_Region> szabgab - you don't have to if you don't want to

[13:03] <szabgab> but I would like to :-)

[13:04] <Limbic_Region> p5 regexen still work

[13:04] <pdcawley> No translation needed.

[13:04] <szabgab> I am preparing a talk on the ^P.* languages

[13:04] <Limbic_Region> oh - well, if you really want to make a rule there are plenty of examples

[13:04] <pdcawley> just do /^P.*/, it's a perfectly legal Perl 6 rule.

[13:04] <szabgab> and want to tell the crowd to find nothingmuch (and maybe gaal if he also comes)

[13:05] <Limbic_Region> right s/a rule/a named rule/

[13:05] <szabgab> ok, I can live with the old school, but actually I already have that on my first slide

[13:06] <szabgab> on the last one I'd rather put something else

[13:10] <svnbot6> r6025 | iblech++ | PIL2JS:

[13:10] <svnbot6> r6025 | iblech++ |   * try { die "hi" }; say $! outputs "hi" now, not "hi at foo.p6...".

[13:10] <svnbot6> r6025 | iblech++ |   * die/warn without parameters output the standard message now.

[13:10] <svnbot6> r6025 | iblech++ |     try { die $some_object }; # $some_object is still an object now, not some

[13:10] <svnbot6> r6025 | iblech++ |     stringification. die.t passes 4/4 now. :)

[13:11] <szabgab> The slides are at http://www.szabgab.com/talks/p_on_ap4.pdf and http://www.szabgab.com/talks/p_on_ap4.sxi if anyone has a few minutes to waste from his life

[13:14] <autrijus> Limbic_Region: obviously, that someone should mail me :)

[13:15] <autrijus> or /msg me

[13:15] <autrijus> or talk to me here in #perl6.

[13:16] <autrijus> Limbic_Region: annotate " the way TPF grants currently work " with ", namely having fixed delivery goals and timelines

[13:17] <autrijus> 'cuz there's nothing specific about TPF here :)

[13:18] <autrijus> pdcawley: yes, it's completely illegal.

[13:18] <autrijus> $foo := @foo; # this works, rather inconsistently, as ($foo := \@foo)

[13:18] <autrijus> but that's due to a larry ruling more than anything else.

[13:19] <pdcawley> ISTM that the tricky bit's going to be doing @array := @array[<whatever the slice syntax is this week>]

[13:20] <autrijus> that is not a problem; note that array containers contains scalar containers, not values

[13:20] <pdcawley> Oh yeah.

[13:20] <pdcawley> So your bound array will be an array of the containers found by the slice.

[13:20] <autrijus> yes.

[13:21] <autrijus> that's why it's called arrays, instead not lists (which contains values not containers.)

[13:21] <autrijus> s/which contains/which has/

[13:22] <pdcawley> Ever since I started to grok list, I've always thought that 'list' implies 'linked list of pairs'

[13:22] <pdcawley> s:first/list/lisp/

[13:22] <autrijus> indeed. but in perl6 they really mean "tuple".

[13:22] <autrijus> n-tuple, that is

[13:22] <autrijus> but each element in the tuple may also be a generator, further complicating the issue.

[13:23] <autrijus> it's a mess :)

[13:23] <pdcawley> Yeah... making streams be transparent is... um...

[13:23] <autrijus> (but at least a understandable mess)

[13:23] * pdcawley grins, so long as it's an implementable mess.

[13:24] <pdcawley> Oh yes, it's been a while since I asked, but does &?CALLER_CONTINUATION return a full continuation yet?

[13:24] <autrijus> yeah, you end up with the real list values accessible only via .spec

[13:24] <autrijus> sure oit is :)

[13:24] <autrijus> sorry, lagged

[13:25] <autrijus> $?CALLER_CONTINUATION will return a full cont in the new runcore.

[13:25] <pdcawley> Which will be along when it's along.

[13:25] <autrijus> that is, at least a couple weeks away before you can write it profitably.

[13:25] <autrijus> yes.

[13:25] <integral> until then t/unspeced/cont.t shows some things are working though

[13:25] <pdcawley> And: Hurrah!

[13:25] <autrijus> although this time it's a second-system, which means it'll be much more robust :)

[13:26] * autrijus shudders to think about the horribly VList and ClassTree hacks in the old runcore.

[13:26] <pdcawley> It's not a second system, you've just thrown the spike away.

[13:27] <autrijus> true.

[13:27] <svnbot6> r6026 | fglock++ | * Spans of Recurrences now iterate correctly in Set::Infinite

[13:27] <autrijus> replacing it with a larger spike.

[13:28] <pdcawley> At least you can carry over the tests :)

[13:28] <pdcawley> Better than your average spike.

[13:29] <scook0> isn't Pugs just one big spike? :-)

[13:29] <autrijus> yup :)

[13:29] <scook0> for the second-system that is P6

[13:30] <autrijus> p6 is third system already

[13:30] <pdcawley> Okay, so the first runcore was a subspike.

[13:31] <autrijus> it's spikes all the way down.

[13:31] <pdcawley> Nah, I don't think we need to throw Perl 5 away.

[13:31] <pdcawley> Actually, if it's a spike on a spike it's a superspike isn't it?

[13:32] <autrijus> Warte nur, balde ruhest du auch :)

[13:33] <pdcawley> wossat?

[13:33] <autrijus> (translation: things will be thrown away when it's time, including p5 and p6)

[13:33] <scook0> autrijus: about the semantics of Cell/Box:

[13:33] <stevan> morning all

[13:34] <QtPlatypus> I'm unsure if p5 will go away, Its possable that p5 and p6 have diffrent niches.

[13:34] <autrijus> it's a Goethe poem; "Wandrers Nachtlied II" or something

[13:34] <scook0> does replacing the Box in a mutable cell constitute binding, or assignment? or something else?

[13:34] <scook0> (this is what I was trying to ask yesterday)

[13:34] <autrijus> scook0: yes, that is exactly what binding means.

[13:35] <stevan> ingy: ping

[13:35] <autrijus> assignment is changing the boxVal

[13:35] <autrijus> (if not tied)

[13:35] <autrijus> but preserving the boxId.

[13:36] <autrijus> stevan: I can't see your movie either

[13:36] <stevan> ahhh

[13:36] <autrijus> even with the new QuickTime-win32

[13:36] <stevan> dudley could see it

[13:36] <scook0> does this mean that each symbol (in the Pad) has its own unique Container/Cell?

[13:36] <stevan> dudley: ping

[13:36] <dudley> stevan: pong

[13:37] <scook0> (i.e. they're not shared between symbols)

[13:37] <autrijus> scook0: yes, that's exactly it.

[13:37] <stevan> dudley: what OS were you on? when you could see the movie

[13:37] <autrijus> but otoh, neither of them is mutable anyway. the mutable bit is the box and tiedness.

[13:37] <dudley> MacOS 10.4.2

[13:37] <autrijus> so "not shared" and "shared" means little

[13:37] <stevan> ah... ok I think that is what Ingy is on, so hopefully it will work for him

[13:37] <stevan> dudley: thanks

[13:37] <dudley> np

[13:37] <autrijus> but I want to see the movie :)

[13:38] <pdcawley> Well, unless they're bound...

[13:38] <stevan> autrijus: I will see what I can do :)

[13:38] * stevan didnt really want to $work anyway ;)

[13:39] <autrijus> pdcawley: bound means having the same box, not the same container cell

[13:39] <autrijus> pdcawley: this is PIL internals, not exposed to p6 :)

[13:39] <pdcawley> Ah. Gotcha.

[13:40] <pdcawley> I'll go back in my box shall I?

[13:40] <Limbic_Region> autrijus - I am on it

[13:40] <autrijus> only if you feel like to..

[13:41] <autrijus> Limbic_Region: cool, thanks

[13:44] <Limbic_Region> autrijus - WRT what to do if someone wants to fund - I have tentatively added this:  or now email - things may change but if they do I will post about that myself.

[13:44] <coral> morning, autrijus

[13:44] <autrijus> sure.

[13:45] <Limbic_Region> done

[13:45] * Limbic_Region goes back to being a lurker

[13:46] <autrijus> Limbic_Region++

[13:46] <stevan> Limbic_Region++ # I have to concur

[13:46] <autrijus> so how many hours till ingy's on air?

[13:47] <stevan> it is about 7 AM on the west coast I think

[13:47] <autrijus> ok, we have 5 hours

[13:47] * autrijus goes back fixing the 15 remaining subtest fails

[13:48] <scook0> autrijus: thanks for your time.  see y'all later.

[13:50] <svnbot6> r6027 | autrijus++ | * As a special form, `do {STMT}` is taken as `do STMT`.

[13:59] <Aankhen``> pdcawley++ # mutual appreciation of TSa

[13:59] <svnbot6> r6028 | rafl++ | * Added debian/pugs-modules.install

[13:59] <svnbot6> r6028 | rafl++ | * Changed maintainer address (mookooh.org is dead).

[13:59] <svnbot6> r6028 | rafl++ | * Bumped up version to 6.2.9-1.

[14:15] <svnbot6> r6029 | autrijus++ | * first batch of TODOify for this release.

[14:15] <svnbot6> r6030 | fglock++ | * added method negate() in Recurrence.pm 

[14:17] <svnbot6> r6031 | autrijus++ | * second batch of TODOify

[14:17] <svnbot6> r6031 | autrijus++ | * hash_access_interpolation.t is mistesting, but still points to a real

[14:17] <svnbot6> r6031 | autrijus++ |   parsing bug. fixing...

[14:32] <svnbot6> r6032 | iblech++ | * Usual svn props.

[14:32] <svnbot6> r6032 | iblech++ | * PIL2JS:

[14:32] <svnbot6> r6032 | iblech++ |   * PIL2JS.js: Fixed display of native JS exceptions.

[14:32] <svnbot6> r6032 | iblech++ |   * New Prelude::JS::Context: Added stub &scalar and &list.

[14:32] <svnbot6> r6032 | iblech++ |   * New Prelude::JS::Math:    Added &pi, &atan (with one and two args), &sin,

[14:32] <svnbot6> r6032 | iblech++ |     &cos, &tan, &asin, and &acos.

[14:32] <svnbot6> r6032 | iblech++ |   * Prelude::JS::Array: Added &reverse (but doesn't use context yet).

[14:32] <svnbot6> r6032 | iblech++ | * t/builtins/math/trig.t: Added TODO feature tests for &asin and &acos.

[14:44] <ingy> hola

[14:45] <Limbic_Region> como esta ustede?

[14:45] <ingy> 3 hours, 50 minutes until show time

[14:45] <Limbic_Region> que bueno

[14:45] <ingy> autrijus: Q: what pugs hackathons have you been to?

[14:46] <autrijus> ingy: the .au one with leo+chip and the .ca one with lots of people

[14:46] <autrijus> ingy: ~50 minutes till 6.2.9-release

[14:47] <autrijus> my local copy should be passing all the test now, so entering preflight anytime

[14:47] <autrijus> iblech: you up for updating ChangeLog so it's less ambiguous about js?

[14:47] <ingy> yay

[14:47] <ingy> autrijus: you forget the first one!

[14:48] <autrijus> first one?

[14:48] <ingy> taipei

[14:48] <autrijus> oh. you were there too so that goes w/o saying :)

[14:48] <ingy> well I was at .ca too :p

[14:49] <autrijus> right.

[14:49] <ingy> ok, go release pugs

[14:49] <autrijus> although working on perldoc instead :)

[14:49] <autrijus> I wasn't at the .il one, though.

[14:49] <ingy> when was .il?

[14:49] <mjl69> is that what brian d foy was referring to in his perlcast interview when he said a bunch of guys in a room furiously working on laptops at yapc?  The Real Programmers.

[14:49] <iblech> autrijus: Yep, currently resmoking

[14:49] <autrijus> mjl69: likely

[14:50] <autrijus> iblech: cool, and thanks for catching my misfix to runsmoke

[14:50] <iblech> autrijus: Will need ~~27min

[14:50] <autrijus> that's fine

[14:50] <iblech> My bad for breaking it the first time...

[14:50] <mjl69> (perl audio interviews)++

[14:50] <autrijus> I fixed a parser bug that should affect you as well

[14:50] <iblech> The do { STMTS } thing?

[14:51] <autrijus> no, "<%h<1>>" was mismarsed as "<" ~ %h{'1>'}

[14:51] <autrijus> retesting, about to commit, but that should only affect two subtests, doesn't affect percentage much

[14:51] <iblech> Ah, ok.

[14:55] <svnbot6> r6033 | iblech++ | * t/builtins/strings/length.t: Use for with n-ary block instead of split.

[14:55] <svnbot6> r6033 | iblech++ |   Doesn't affect normal Pugs (still passes 31/31).

[14:55] <svnbot6> r6033 | iblech++ | * PIL2JS:

[14:55] <svnbot6> r6033 | iblech++ |   * PIL::Parser, PIL: Fixed parsing and quoting of >255 chars.

[14:55] <svnbot6> r6033 | iblech++ |   * Prelude::JS::Str: Stubbed &bytes, &codes, and &graphs.

[14:55] <svnbot6> r6034 | autrijus++ | * <...> and <<...>> was globbing whitespaces after them,

[14:55] <svnbot6> r6034 | autrijus++ |   even when interpolated as hash subscripts.

[14:55] <svnbot6> r6034 | autrijus++ | * also, "%h<x>>" was misparsed as "%h{'x>'}".

[14:58] <putter> dada: my (very very likely wrong) fuzzy recollection is the PGE error you described can be caused by parrot not being found due to PATH not being setup properly.

[14:59] * pdcawley_ grins at Aankhen. We love everybody!

[15:01] <stevan> ingy: ping

[15:02] <dada> putter: I installed the pugs binary (which includes parrot.exe) in C:\pugs and added C:\pugs to the PATH, so parrot.exe is there

[15:06] <putter> szabgab: p5's /^P.*/ , aka /^P.*/s, is p6's rx:perl5/^P.*/ or rx/^P.*/ .  No change.  p5's /^P.*/m is p6's rx:perl5/(?m)^P.*/ or rx/^^P\N*/ .

[15:08] <putter> dada: ah well, sorry.   We should collect a list of error messages and what they mean in INSTALL.

[15:09] <ingy> stevan: pong

[15:09] <stevan> ingy: movie work for you?

[15:09] <autrijus> resmoking r6035 for a final round before preflight

[15:09] <ingy> can someone find me a Lambda Camels group photo

[15:09] <ingy> stevan: kind of I think

[15:09] <stevan> ingy: kind of?

[15:09] <autrijus> ingy: type 

[15:10] <autrijus> /who #perl6

[15:10] <ingy> stevan: is it supposed to be moving or stop animation?

[15:10] <autrijus> and take a screenshot

[15:10] <autrijus> group photo for you

[15:10] <stevan> ingy: 2 seconds each frame

[15:10] <ingy> stevan: ok, then yes.

[15:10] <autrijus> or take a screenshot of pugs/AUTHORS

[15:10] <stevan> autrijus: :)

[15:10] <ingy> I had various tech probelms

[15:10] <ingy> with the movie

[15:10] <stevan> ingy: if you want I can send you the frames as well as the audio

[15:11] <stevan> audio is in WAV and frames are JPEG

[15:11] <ingy> stevan: no, it's cool

[15:11] <autrijus> the frames in jpeg?

[15:11] <ingy> I'll make it work

[15:11] <stevan> ok

[15:11] <autrijus> stevan: bzip2 that and put it somewhere I can download?

[15:11] <stevan> autrijus: sure

[15:11] <autrijus> I can put it back into a more workable format :)

[15:11] * nothingmuch sighs

[15:11] <stevan> excellent

[15:11] <nothingmuch> and says hi

[15:11] <putter> szabgab: re ap4, on page "Ruby" the image obscures text (... commun<clip>) in my browser.

[15:11] <autrijus> avidemux2++

[15:11] <autrijus> and this sorenson squeezeit thing isn't bad either

[15:16] <putter> szabgab: also clipping on slide-just-before-references.  in references, pugscode link is a different color than rest (not link?).

[15:16] <svnbot6> r6035 | autrijus++ | * recover the lexemeness of adverbian pairs.

[15:18] <stevan> hey nothingmuch 

[15:18] <putter> szabgab: might also mention possibility of language implementations written in p6.  thus being supported on all pugs backends (parrot, javascript, etc).

[15:18] <nothingmuch> hola

[15:21] <ingy> yo autrijus 

[15:21] <stevan> autrijus: is tar.gz okay?

[15:21] <svnbot6> r6036 | iblech++ | * ChangeLog: PIL2JS passes 64.00%. :)

[15:21] <svnbot6> r6036 | iblech++ | * docs/talks/README: Linked to PDF version of my talk

[15:21] <svnbot6> r6036 | iblech++ |   "Anatomie eines Compilers am Beispiel von Pugs";

[15:21] <putter> dada: ah, when its a PATH problem, that explanation follows the Cannot parse PGE.

[15:21] <autrijus> stevan: sure, fine

[15:21] <autrijus> ingy: yes?

[15:22] <ingy> autrijus: I need to come clean with you

[15:22] <autrijus> ingy: what did you do to me?

[15:22] <ingy> I need to publically forgive you

[15:22] <autrijus> ok... how did I offend you in the first place?

[15:22] <ingy> FOR JOURNALING ALL MY FRICKIN TALK MATERIAL YESTERDAY!!!

[15:22] <ingy> ;)

[15:23] <autrijus> eh, you know that #perl6 is all logged anyway :)

[15:23] <autrijus> but sure, go ahead and forgive me...

[15:23] <ingy> sure, but not broadcast to the world!

[15:23] <ingy> autrijus: *smooch*

[15:23] <nothingmuch> ingy: good luck

[15:23] <ingy> hi nothingmuch!

[15:24] <autrijus> ingy: alright. according to larry I'm just not good at Stealth... need to tell me to not broadcast something beforehand

[15:24] <stevan> autrijus: uploading to feather right now, I will let you know when it is there

[15:24] <autrijus> ingy: but I'm glad you plan to forgive me

[15:25] <ingy> autrijus: :) it just makes it more of a challenge for me

[15:25] <ingy> which is a good thing :D

[15:25] <autrijus> riiight. 

[15:25] <autrijus> you'll get 1)more audience and 2)audience who has higher expectation

[15:25] <ingy> now I reeeeally need to forgive you :p

[15:26] <autrijus> stevan: sure, or just add the link to the movie page in the kwiki

[15:26] <autrijus> either way's fine

[15:26] <stevan> autrijus: will do

[15:26] <stevan> ingy: I thought people came to your talks to see you, not to hear you :P

[15:27] <autrijus> I have to concur

[15:27] <iblech> autrijus: http://linide.sourceforge.net/pugs-svngraph-6.2.9.png http://linide.sourceforge.net/pugs-pil2js-smoke-6.2.9.html

[15:27] <autrijus> iblech: roger, thanks

[15:27] <autrijus> "2878 ok" in a week

[15:28] * autrijus is still very impressed

[15:28] <ingy> stevan: good point

[15:28] <ingy> autrijus: where is your picture in the mirror?

[15:28] <stevan> autrijus: http://no.perlcabal.org/~stevan/GonzoMovie.tar.gz

[15:28] <stevan> also linked on the kwiki

[15:28] <ingy> your canonical one

[15:28] <autrijus> stevan: how did you find no.perlcabal.org the domain name? :)

[15:28] <autrijus> ingy: http://en.wikipedia.org/wiki/Autrijus_Tang 

[15:29] <autrijus> click on the picture

[15:29] <stevan> I just copied your URL  I think

[15:29] <autrijus> hm.

[15:29] <ingy> autrijus: go it

[15:29] <autrijus> ingy: so did you choose the .mp4 version of my movie?

[15:29] <ingy> got it

[15:30] <ingy> autrijus: yes

[15:30] <autrijus> good

[15:30] <autrijus> I'll mp4ize stevan's one shortly if I got around to it

[15:30] <ingy> I hacked Kwiki/Spork to display it inside the slide

[15:30] <ingy> but stevan's movie wouldn't work that way

[15:30] <ingy> :\

[15:30] <ingy> So I run it in separate quicktime

[15:31] <ingy> autrijus: oh nice!!

[15:31] <autrijus> and maybe subtitle it

[15:31] <ingy> no need, but sure

[15:31] <autrijus> ok, I won't bother then

[15:31] <putter> so, we are in preflight testing?

[15:32] <autrijus> putter: almost

[15:32] <autrijus> a preflight tarball will be up in ~15 mins

[15:32] <stevan> autrijus: BTW - the audio is timed for 2 seconds each frame

[15:33] <autrijus> stevan: intentional?

[15:33] <stevan> sort of :)

[15:33] <autrijus> ok :)

[15:33] <stevan> happy accident :)

[15:35] * autrijus tries to focus a bit more, with "coding music"

[15:35] <autrijus> o/~ For God wrote in Lisp code / When he filled the leaves with green. / The fractal flowers and recursive roots: / The most lovely hack I've seen. o/~

[15:37] <svnbot6> r6037 | autrijus++ | * redo.t: unTODO an unexpected passing

[15:37] <autrijus> hey Darren_Duncan. having fun?

[15:38] <Darren_Duncan> yes, the morning OSCON keynote just started, Nat Torkington is on stage

[15:38] <Darren_Duncan> Larry's onion was last night, and Damian's dead languages

[15:38] <Darren_Duncan> all good stuff

[15:39] <Darren_Duncan> last night, Larry's family was in attendence, and I had a chat with both him and them

[15:39] <QtPlatypus> Darren_Duncan: Is the Onion on the web somewhere?

[15:39] <Darren_Duncan> Larry's talk had lots of great art in his slides, and they were drawn by his daughter

[15:40] <Darren_Duncan> partly on my suggestion, she will be posting them on her website soon

[15:40] <Darren_Duncan> I don't know if its on the web

[15:40] <Darren_Duncan> I know that Damian's won't be

[15:40] <Darren_Duncan> Larry's talk was mainly about secret agents

[15:41] <Darren_Duncan> comparing 16 different personalities with Perl community personalities

[15:41] <autrijus> what does "Capacity" mean anyway?

[15:41] <Limbic_Region> my drill instructors thought it was great fun in boot cammp

[15:41] <Darren_Duncan> Larry explicitly mentioned you in the talk also

[15:41] <QtPlatypus> autrijus: In what context?

[15:41] <autrijus> QtPlatypus: in the larry context ;)

[15:41] <Darren_Duncan> I mean, mentioned Autrijus

[15:41] <Darren_Duncan> in regards to Pugs

[15:41] <autrijus> I'm supposed to be the agent with Stealth:1, Combat:4, Capacity:2

[15:42] <Darren_Duncan> but maybe also with one of the personalities

[15:42] <Darren_Duncan> so you saw the details somewhere?

[15:42] <QtPlatypus> autrijus: Means how much you can carry.

[15:42] <autrijus> Darren_Duncan: in #oscon

[15:42] <Darren_Duncan> I see

[15:42] <QtPlatypus> I'm guessing.  It looks RPGish.

[15:42] <autrijus> QtPlatypus: oh. ah. as in lbs

[15:42] <Darren_Duncan> never been there

[15:42] <Darren_Duncan> is it on freenode?

[15:42] <autrijus> no, on magnet I think

[15:42] <autrijus> irc.perl.org

[15:43] <Darren_Duncan> okay, will look in there ...

[15:55] <putter> hmm... so what happend around day 120?  (re commit graph http://linide.sourceforge.net/pugs-svngraph-6.2.9.png )

[15:56] <coral> 6.2.9 out?

[15:56] <autrijus> uploading

[15:56] <coral> unf

[15:56] <coral> autrijus++

[15:56] <autrijus> (preflight 1, that is)

[15:57] <gaal|work> heya

[15:57] <autrijus> hey gaal|work!

[15:57] * gaal|work interviewed 3,000 candidates today

[15:58] <gaal|work> with no voice :)

[15:58] <autrijus> !

[15:58] <gaal|work> ooh preflihgt!

[15:58] <gaal|work> preflight even

[15:58] <gaal|work> okay, fewer than 3,000

[15:58] <Darren_Duncan> I can help with the preflight

[15:59] <gaal|work> sure did feel like it though

[15:59] <autrijus> http://pugscode.org/tmp/Perl6-Pugs-6.2.9-pre1.tar.gz

[15:59] <Limbic_Region> what rev is that autrijus?

[15:59] <autrijus> 1440991 bytes md5=527ea84fc880528d3369d4fe29122dfa

[15:59] <Darren_Duncan> oh that; I just did a svn up

[15:59] * Limbic_Region will likely only be able to do 1 make test given how slow this maching is

[15:59] * gaal|work catches ride home and will start smoking in ~45 min - if there's still anything to smoke :

[15:59] <autrijus> Limbic_Region: a future revision

[15:59] <autrijus> hadn't committed thing back

[15:59] <autrijus> will do now

[15:59] <gaal|work> later &

[16:00] * Limbic_Region waits

[16:00] <autrijus> Limbic_Region: er, please use the tarball :)

[16:00] <autrijus> unless you for some reason can't download that

[16:02] <rafl> autrijus: *** Cannot find a runnable 'ghc' from path. - I have /usr/bin/ghc -> /etc/alternatives/ghc -> /usr/lib/ghc-6.4/bin/ghc -> ghc-6.4

[16:02] <Limbic_Region> not that autrijus 

[16:02] <autrijus> rafl: and /usr/bin is in path?

[16:02] <Limbic_Region> just won't be finished compiling before everyone else says they are done make test

[16:02] <autrijus> rafl: oh ok.

[16:03] * Limbic_Region downloaded it though anyway and is beginning make

[16:03] <putter> is pre1 basically r6037?  (if so, I'll leave a test run going...)

[16:03] <Darren_Duncan> downloading

[16:03] <rafl> autrijus: Sure, it is.

[16:03] <jp-autark> I can smoke some too

[16:03] <autrijus> rafl: hm. have some time to trace it into inc/Module/Install/Can.pm's can_run ?

[16:04] <rafl> autrijus: OK.

[16:04] <autrijus> putter: no, it's not, I havn't committed the changes back

[16:04] <autrijus> I'm on win32, takes some time

[16:04] <putter> ah.  ok.

[16:04] <Darren_Duncan> lots of bandwidth competition here, so dl is 2-4K/sec

[16:04] <autrijus> it just gone blue screened on me, and I aborted chkdsk, so it's behaving weirdly

[16:05] <Limbic_Region> the download shouldn't be a problem - it is still relatively small

[16:05] <Limbic_Region> my problem is having only 256MB of ram on this machine and having to compete for resources

[16:06] <Darren_Duncan> indeed

[16:06] <Darren_Duncan> its already half done

[16:07] <Darren_Duncan> I'm also plugged into power, so all the disk access to compile shouldn't cause problem

[16:10] <autrijus> ok, pre1 is now 6039.

[16:10] <svnbot6> r6038 | autrijus++ | * fix the Set/Span tests to mention -Inf not -Infinity

[16:10] <svnbot6> r6039 | autrijus++ | * bump versions; add config.yml to MANIFEST.SKIP

[16:10] <autrijus> I'm smoking the same tarball on win32

[16:10] <rafl> autrijus: Somehow $ENV{PATH} only contains '.'.. echo $PATH on the shell gives me: /home/rafl/.local/bin:/home/rafl/bin:/bin:/usr/bin:/usr/ucb:/usr/local/bin

[16:10] <autrijus> (already did fbsd)

[16:10] <autrijus> rafl: hm. I don't think I reset PATH

[16:10] <autrijus> is it like that for all perl programs?

[16:11] <autrijus> trace Makefile.PL for how

[16:11] <Darren_Duncan> should I re-get preflight now?

[16:11] <Darren_Duncan> my last download almost finished

[16:11] <Limbic_Region> autrijus - is 6039 preflight or are there still more changes coming?

[16:11] <autrijus> Darren_Duncan: no, same thing

[16:11] <autrijus> Limbic_Region: pre1 =:= r6039

[16:11] <Limbic_Region> ok - will be faster to abort and svn up

[16:11] <rafl> autrijus: Even perl -le 'print $ENV{PATH}' outputs nothing.. Hrm...

[16:12] <autrijus> rafl: not likely to be my side of problem then

[16:13] <Darren_Duncan> were there several pre1, or only 1 version of pre1?

[16:13] <Limbic_Region> Darren_Duncan - it was faster for autrijus to post the tarball for pre1 then it was for the commits to show up in the repository

[16:13] <Limbic_Region> there is only 1 - available as 6039 or from the link

[16:14] <rafl> autrijus: Of course. That scares me nonetheless.

[16:14] <Limbic_Region> though when I svn up'd, I got 6040

[16:14] <Darren_Duncan> okay

[16:14] <Darren_Duncan> its untarred, now making ...

[16:15] <autrijus> Limbic_Region: r6040 won't affect test results

[16:15] <svnbot6> r6040 | qtplatypus++ | Renaming rx_grammar.pl to rx_grammar.pm

[16:16] <Darren_Duncan> actuallly, I'm not sure my ghc was installed properly ... can't find on path

[16:16] <Darren_Duncan> but I thought I did it the same way as before

[16:16] <Darren_Duncan> ran the package installer for Mac OS X 10.3

[16:16] <autrijus> Darren_Duncan: maybe /usr/local/bin isn't in your path

[16:17] <Darren_Duncan> I haven't changed the path from how Mac OS X defaults it

[16:17] <autrijus> right, which did not include /usr/local/bin

[16:17] <autrijus> I think.

[16:18] * QtPlatypus nods "Yep, thats the first thing I had to fix when dealing with OSX"

[16:18] <Darren_Duncan> quick question: what command to add to my path?

[16:19] <autrijus> export PATH=$PATH:/usr/local/bin

[16:19] <autrijus> setenv PATH $PATH:/usr/local/bin

[16:19] <autrijus> one of the two

[16:20] <autrijus> if you feel like, you can add a probe for this in Makefile.PL and suggest people do the right thing -- or silently fix it for them -- but that may be too clever.

[16:20] <QtPlatypus> autrijus: I think silently fixing it for them would be rude.

[16:20] <Darren_Duncan> the first line seems to have worked, thanks

[16:21] <autrijus> QtPlatypus: right. so fatal warning maybe

[16:21] <autrijus> s/warning/error/

[16:21] * Limbic_Region begins nmake test on 6040

[16:21] <Darren_Duncan> better to just spit out a "you need to do this first" message, and change nothing

[16:21] *** Aankh|Clone is now known as Aankhen``

[16:22] <Darren_Duncan> now on 'make'

[16:24] <Limbic_Region> autrijus - looks like I failed test 55 of io

[16:24] <autrijus> Limbic_Region: looks like I just skipped it for you

[16:24] <autrijus> r6041

[16:24] <Limbic_Region> k

[16:24] <Limbic_Region> won't re-run if that's all that changed

[16:27] <Aankhen``> Hmm.

[16:27] <svnbot6> r6041 | autrijus++ | * unlink() in t/builtins/io/io.t gets platform-specific failures; skip for now.

[16:27] <Aankhen``> gaal: You on Win32?

[16:27] <jp-autark> smoke of pre1: http://home.ifi.uio.no/~davidra/smoke.html

[16:27] <Darren_Duncan> I think I'll just work with the svn instead of the tarball

[16:27] <Darren_Duncan> its a fresh upload anyway

[16:27] <Darren_Duncan> reintegrating fixes is faster

[16:29] <Limbic_Region> odd - wonder why it said "skipped - rules support seems to be missing"

[16:29] <Limbic_Region> for t/builtins/undef that is

[16:35] <putter> undef.t apparently tests some undef-related aspects of rules.  curious.  "skipped..." means "a" ~~ /a/ didn't match.

[16:35] <svnbot6> r6042 | Stevan++ | Perl6::MetaModel - (p5)

[16:35] <svnbot6> r6042 | Stevan++ | * unify the storage of the metaclasses by moving it

[16:35] <svnbot6> r6042 | Stevan++ |   into the BUILD submethod of Perl6::MetaClass

[16:37] <Limbic_Region> putter - it is the message that I found curious, as I have a parrot.exe in my path - though not latest/greatest

[16:37] * Limbic_Region is in t/packages now

[16:37] <Limbic_Region> so far only 1 failure (now skipped) and 1 weird skipped message

[16:37] <Darren_Duncan> I'm now just testing against the svn rather than the tarball, currently on 'make'

[16:37] <Darren_Duncan> but the svn is clean

[16:41] <putter> Limbic_Region: in interactive ./pugs , does "a" ~~ /a/ succeed?

[16:41] <gaal> rehi

[16:41] <Limbic_Region> putter - can't tell ATM as I don't really want to take away from the already limited resources 

[16:42] <putter> ;)

[16:42] <gaal> what's smokin'?

[16:42] <putter> groan

[16:42] <Khisanth> gaal: your dinner!

[16:42] <Limbic_Region> I did get a couple "useless use of a constant in void context" in t/pugsrun/ uppercase c - though no outright failures

[16:42] <putter> pre1 aka r... something

[16:42] <gaal> no, it's nm that burns pizzas :)

[16:43] <gaal> pf1?

[16:43] <Limbic_Region> got a no subroutine found in uppercase m (again, no failur just a message)

[16:43] <Aankhen``> gaal: Ping!

[16:43] <Limbic_Region> I got another rules skipped message in t/rules (but for only 1 test, the rest ran)

[16:43] <gaal> heya! :)

[16:43] <Aankhen``> May I PM you?

[16:43] <gaal> PM me?

[16:44] <gaal> what's that?

[16:44] <Limbic_Region> private message

[16:44] <Limbic_Region> as in /msg

[16:44] <gaal> of course

[16:44] <Aankhen``> Indeed.

[16:44] <putter> ok, I have a pre1 failure in t/unspecced/eval_yaml .

[16:45] <putter> pugs: toEnum{SyckKind}: tag (214748364802) is outside of enumeration's range (0,2)  ... dubious died.

[16:46] * Limbic_Region hasn't made it that far yet

[16:47] <putter> 49 skipped.  that's the only failure.  embedded parrot:perl5.  optimized.  recent parrot trunk/ and ghc snapshot.  amd64.

[16:48] <putter> oh, FC3.

[16:49] <putter> I was running make tests with this configuration a lot yesterday, with no failures.

[16:50] <Limbic_Region> t/unspecced/eval_yaml worked here

[16:51] <Limbic_Region> ok, finished

[16:52] <Limbic_Region> 1 test failed (io which is now skipped), Win XP, optimized, parrot rather recent

[16:52] <Limbic_Region> there were 2 tests skipped due to no rules support which was odd

[16:53] <Limbic_Region> several tests that spit out error messages but didn't actually fail (like no defined sub and useless use of constant in void context)

[16:53] <Limbic_Region> other than that - all ok

[16:53] <putter> Hmm, when I rerun  t/unspecced/eval_yaml both directly and in harness, it passes. :(  Ghc x86_64 flakeyness?

[16:54] <gaal> i'm finishing off pass #1 of the build. will there be a pf2?

[16:54] <putter> Limbic_Region: could you do the test now?

[16:54] <gaal> darn, forgot to inline Test.pm

[16:54] <Limbic_Region> putter - just did

[16:54] <Limbic_Region> *** Cannot parse PGE: a

[16:54] <Limbic_Region> *** Error: end of file

[16:55] * Limbic_Region wonders WTF that means

[16:55] <putter>  "a" ~~ /a/    !( "a" ~~ /a/)   eval('!("a" ~~ /a/)')

[16:55] <putter> ah.

[16:55] * putter looks around for an old copy of parrot...

[16:56] * Limbic_Region is about to update

[16:56] <autrijus> gaal: yes, there will, based on feedbacks

[16:56] <autrijus> gaal: I'm doing the movie. eta 10 min

[16:56] <autrijus> then I'll roll pf2

[16:56] <autrijus> and another round, and we'll be good to go.

[16:56] <putter> what r number does parrot --version show?

[16:56] <gaal> the movie? what, there's another one? *glee*

[16:56] <Limbic_Region> too late putter

[16:57] <putter> ?

[16:57] <Limbic_Region> I just wiped out the directory

[16:57] <gaal> reminder to smokers: if you have lots of RAM, precompile Test (but give a large heap)

[16:57] <Limbic_Region> I checked parrot -V (which didn't have the rev) and it was 0.2.2

[16:57] <putter> ah well.  (you do that stuff _after_ testing is done...;)

[16:58] <putter> gaal: details?

[16:58] <gaal> putter: cp util/config-template.yml config.yml ; $EDITOR config.yml, uncomment two lines 

[16:59] <gaal> the one with "precompile_modules" and "ghc_heap_size"

[16:59] <gaal> ones

[16:59] <putter> ah, tnx.

[16:59] * Aankh|Clone bangs forehead on wall.

[16:59] <gaal> this saves ~8 minutes on my box

[16:59] <Limbic_Region> putter - parrot --version doesn't give more than 0.2.2 AFAICT

[16:59] <putter> out of?

[16:59] <Aankh|Clone> gaal: Wanna guess where I found binaries for XML::Xerces?

[17:00] <gaal> where? :)

[17:00] <Aankh|Clone> xml.apache.org, of course.  The home of Xerces-P.

[17:00] <Limbic_Region> though the rule test does now work in pugs

[17:00] <gaal> :))

[17:00] <putter> Limbic_Region: top line should say something like This is parrot version 0.2.2-devel (r8730) built for nojit.  Unless its the official release I guess...?

[17:01] <Limbic_Region> putter - I don't think that always works

[17:01] <Limbic_Region> I am getting it from Jonathan's prebuilt binary page

[17:01] <putter> sigh.  ok, thanks.

[17:01] <Limbic_Region> same thing with Pugs - wouldn't ever tell me the rev level

[17:01] * Limbic_Region builds Pugs himself now and all is fine

[17:02] * Limbic_Region used to build parrot all the time as he was involved in the dev work, but only on Cygwin

[17:02] * Limbic_Region doesn't do anything these days as he is officially lurker only

[17:03] <putter> So, has anyone run make test with the most recent parrot release?   Ie, should we include a caveat in the release announcement about that not quite working?  Or is it?

[17:04] <Limbic_Region> putter - I can run the test suite again

[17:04] <Limbic_Region> the parrot from Jonathan's binary page was built today

[17:04] <putter> gaal: that was 8 min out of X min?

[17:04] <gaal> ~45?

[17:04] <gaal> i forget the exact numbers

[17:05] <gaal> it made the build slower by ~7 and the smoke faster by ~15

[17:06] <putter> Turns out I have a copy of parrot-0.2.2.  And a non-embedded pugs.  I'll run it after the current make test run is done.

[17:07] <gaal> actually: no, the cost is lighter than that. the time for the whole 2nd pass on my box is ~7min; but i already pay some of that cost anyway with precompiling Prelude alone

[17:07] <gaal> this needs to be more scientific.

[17:07] <putter> gaal: ok, thanks.  it looks like my tests are running sufficiently faster that it doesnt seem worth the divergence from common user experience.  But I look forward with great hapiness to using it in development.

[17:08] <gaal> actually in development you may not want to use it, unless you run the whole test suite often :)

[17:09] <gaal> stevan about? is there a new version of the movie up that i can try?

[17:09] <putter> for parser changes, again, and again, and ... 

[17:09] <putter> and all the ext/ tests...

[17:10] <putter> btw, is anyone checking the ext/ tests?

[17:10] <gaal> see, that's because you actually know haskell. me, i recompile all the time just to make ghc happy :)

[17:10] <putter> and is there any way to run them other than hand editing a harness call?

[17:10] <putter> :)

[17:10] <gaal> putter, they are on by default

[17:10] * brentdax wakes up and wonders what pdcawley wanted with him.

[17:11] <autrijus> movie done

[17:11] <autrijus> reencoding

[17:11] <autrijus> ingy: how many hours do I have? :)

[17:11] <Darren_Duncan> make done ... will try svn up again ...

[17:11] <pdcawley> Wanted to know if you wanted to be BRG, or BD in the summary. Went with Brent Royal-Gordon.

[17:11] <putter> :|  err, "just to make ghc happy"?  putter realizes he really didnt understand that...

[17:11] <pdcawley> I think I've asked you before and forgot.

[17:11] <Darren_Duncan> I'm at 6042 ... now starting make test

[17:11] <gaal> putter, i meant i still make zillions of syntax mistakes or type errors whenever i code in haskell

[17:12] <gaal> i'm learning though, it used to be googols of 'em.

[17:13] <putter> ah.  :)  yes.  most of my time in haskell dev is spent in a "did it typecheck yet?" loop.   which probably means I should take a more analytic and disciplined approach to it... but haven't yet.

[17:13] <autrijus> I'm back. any new smoke failures?

[17:13] <Limbic_Region> putter - almost back to t/builtins/undef with a parrot built today - so far so good

[17:14] <brentdax> Yeah, I'm trying to use my Real Name(tm) from now on--the "Dax" is just in my From line for old times' sake.

[17:14] <gaal> as for controlling what to smoke: util/yaml_harness.pl accepts a list of dirs on the comand line

[17:14] <putter> re make test checking ext/ ... err, no?

[17:14] <gaal> it defauilts to include ext

[17:14] <gaal> aahhhh, make test...

[17:14] <gaal> i thought you were running make smoke

[17:14] <putter> ah, no.  perhaps should.

[17:14] <gaal> in that case i don't know, sorry :)

[17:15] <gaal> of course you should. it's got *colors* :)

[17:15] <gaal> my smoke is only in pugsbus/ :(

[17:15] <stevan> autrijus: where is the movie ??

[17:15] <putter> mumble gui*!?! mumble command line mumble

[17:15] <gaal> no gui

[17:15] <gaal> yaml and html

[17:15] <gaal> "make smoke" on the command line

[17:16] <gaal> but you do need some per5 dependencies satisfied first:

[17:16] * putter pulling gaal's leg...

[17:16] <gaal> "cpan Test::TAP::HTMLMatrix" should take care of that

[17:16] * gaal yelps voicelessly

[17:17] <putter> actually, yes, I remember lacking prerequisites.  hmm, perhaps that's something worth mentioning in INSTALL?  Though the error may be self-explanatory...?

[17:17] <putter> :)

[17:17] <gaal> hey, t\pugsrun\09-dash-uppercase-c.t is still giving those warnings about "useless use of a constant in void context" (not fatal or anything)

[17:17] <gaal> it is

[17:17] <gaal> it says what you need to install

[17:18] <Limbic_Region> and uppercase m yells about an undefined subroutine

[17:18] <gaal> isn't that the test we always end up skipping? :)

[17:18] <gaal> ah no, the one with spaces in the path is.

[17:19] <autrijus> stevan: uploading

[17:19] <gaal> stevan ping?

[17:19] <stevan> autrijus: cool :)

[17:19] <stevan> gaal: pong

[17:19] <autrijus> stevan: I think you'll *love* it :)

[17:19] <gaal> did you u/l a new version of your movie?

[17:19] <stevan> autrijus: no doubt i will :)

[17:19] <autrijus> gaal: what I'm uploading _is_ a new version of stevan's

[17:19] <stevan> gaal: I put the audio and frames up for autrijus to do

[17:19] <autrijus> much improved

[17:19] <gaal> ah :)

[17:20] <gaal> ?eval say <<cool>>

[17:20] <evalbot6> cool bool::true 

[17:20] <autrijus> ?eval <<cool>>

[17:20] <evalbot6> 'cool' 

[17:20] <Limbic_Region> putter - parrot built today works fine AFAICT

[17:20] <gaal> it's true that it's cool.

[17:20] <autrijus> wmv uploading eta 90sec

[17:20] <autrijus> mp4 coming in 5 mins

[17:20] <autrijus> then swf

[17:20] <gaal> then pf? :)

[17:20] <putter> k

[17:20] <autrijus> pf?

[17:20] <gaal> you said there's a pf2?

[17:20] <autrijus> ah, pf2 :)

[17:20] <autrijus> yes.

[17:20] <autrijus> actually, let me multitask.

[17:21] * autrijus opens a new screen to roll pf2

[17:21] <gaal> there should be an executable format called pf

[17:21] <gaal> works only part of the time.

[17:21] <autrijus> heh

[17:21] <autrijus> http://perlcabal.org/~autrijus/oscon05-stevan.wmv

[17:22] <autrijus> have fun

[17:22] <gaal> smoke for pf1 eta 1min

[17:22] <stevan> horray :)

[17:22] <gaal> wow, that server is well-connected.

[17:23] <putter> ok, that's just weird.  Is there a known problem of make test in some pugs configurations running ext/ tests, and in others not?

[17:23] <stevan> ((add 1 autrijus) (add 1 autrijus))

[17:23] <autrijus> putter: yes, js does not and normal does

[17:23] <autrijus> I think

[17:24] <autrijus> or is that smoke?

[17:24] * autrijus is not very sure

[17:25] <szabgab> puuter: thanks for the imput

[17:25] <gaal> http://perlcabal.org/~gaal/smoke_xp.html

[17:25] <putter> hmm.   EMBED=parrot:perl , and I believe just parrot, never give me ext/ .  But EMBED nothing just did. ?!?

[17:25] <gaal> # pf1

[17:25] <szabgab> hi gaal

[17:25] <gaal> hey gabor

[17:25] <szabgab> so is there any chance to see you tomorrow in the afternoon ?

[17:25] <putter> all make test.

[17:26] <autrijus> putter: I think iblech did that on purpose

[17:26] <gaal> probably not, sorry

[17:26] <gaal> also i can't speak anyway

[17:26] <szabgab> "ligthtening" talks are between 14:00-14:30 and mine is 10 minutes long

[17:26] <gaal> so it's not like i can be very useful

[17:26] <szabgab> what dou mean you cant'

[17:26] <szabgab> speak ?

[17:27] <gaal> throat infection

[17:27] <putter> gaal: re scientifically, it could be nice to have runtimes in make test, for total, and perhaps (optionally?) for each entry.

[17:27] <gaal> each entry is already in, when you run the yaml harness

[17:27] <ingy> hola

[17:27] <gaal> the whole smoke, also

[17:27] <ingy> I need a picture of a Lambda Camel!

[17:27] <gaal> but not for the build

[17:27] <ingy> 1 hour to go!

[17:28] <ingy> autrijus: do we have release?

[17:28] <szabgab> at least you are an authentic Pugs developer not like "the speaker"

[17:28] <putter> autrijus: ah.  ok.  but... wouldn't you run the fewer tests on the slower configuration...?  I must be missing the motivation...?

[17:28] <szabgab> you could show code and irc with people sitting next to you

[17:28] <gaal> "there's one!!"

[17:28] <ingy> autrijus: and do you have a lambda camel image?

[17:29] <szabgab> yeah nm, is going to be there I know, but still having two is better :-)

[17:29] <gaal> ingy, would the joke Programming Perl 33rd ed image help?

[17:29] <szabgab> gaal: ok I'll get off this thing, but I have some questions

[17:29] <gaal> sure

[17:29] <ingy> gaal: sure

[17:29] <ingy> I need it now!

[17:29] <gaal> ingy, let me hunt for the beast

[17:30] <szabgab> th 33rd ed is on the web site of Aevil

[17:30] <ingy> what about the svk site

[17:30] <gaal> http://www.axis-of-aevil.net/img/2003_08/p6_cover.jpg

[17:30] <szabgab> I just saw it and used it in my slides

[17:30] <gaal> (that was for ingy)

[17:30] <gaal> ha! jinx.

[17:30] <szabgab> and I was searching for this about an hour !

[17:31] <gaal> man, your google-fu needs an infusion :)

[17:31] <autrijus> ingy: we have movie!

[17:31] <autrijus> ingy: http://perlcabal.org/~autrijus/oscon05-stevan.mp4

[17:31] <gaal> "perl6 parody image", 2nd link

[17:31] <ingy> http://www.atomiccoffeemedia.com/theonion/jimmydean/contest/images/pictures/pugs.jpg

[17:31] <autrijus> ingy: how many time before the talk?

[17:31] <autrijus> s/many/much/

[17:31] <gaal> lol, love the image ingy

[17:31] <szabgab> sure if you know what magic words to use on Google then its easy :-)

[17:32] <ingy> autrijus++ # movie

[17:32] <ingy> one hour to talk

[17:32] <autrijus> good. look at the movie and see if it works?

[17:33] <szabgab> ew can embed both p5 and parrot in pugs, right ?

[17:33] <autrijus> szabgab: on some platforms, yes

[17:33] <gaal> yay movie!  kewl

[17:33] <szabgab> but one of the is a language you can use (p5)

[17:34] <szabgab> the other one is a backend, you won't write embedded parrot code in pPugs would you ?

[17:34] <integral> you could, to use a parrot library like NCI

[17:35] <autrijus> szabgab: you can do eval("...", :lang<pir>)

[17:35] <autrijus> and require_pir "foo.pbc"

[17:35] <autrijus> but that's about it I think, nothing terribly useful.

[17:35] <szabgab> ok, so if I understand currently - on some platforms - you can use Perl6 code, Perl5 code after embedding the interpreter, Parrot code after embedding Perrrot

[17:35] <itz_> probably this isnt implemented yet .. but is there anyway of setting up tab complete on pugs>"A".<tab> to show methods like say?

[17:35] <autrijus> szabgab: but external parrot almost works as well as, if not better than, embedded

[17:35] <autrijus> itz_: it's a very nice idea.

[17:35] <szabgab> ok what else can we embed now ?

[17:36] <stevan> itz_: that will be much easier when the metamodel is in place

[17:36] <autrijus> itz_: once we have the metamodel ready then we should have that

[17:36] <stevan> :)

[17:36] <autrijus> :))

[17:36] <autrijus> szabgab: haskell, if you have hs-plugins

[17:36] <autrijus> szabgab: that's about it... no embedded SpiderMonkey for now

[17:36] <itz_> the same answer to a computing related question :O must be a first :)

[17:36] <szabgab> ok, these are the "front ends"

[17:37] <szabgab> to kids now &

[17:37] <gaal> bye szabgab!

[17:37] <gaal> how do you do that karaoke/voiceover thing anyway?

[17:37] <Khisanth> pugs now embeds spidermonkey?

[17:38] <putter> itz_: you might also look at... examples/eval.p6   the beginning of a p6 repl.

[17:38] <putter> szabgab: &

[17:38] <itz_> putter: tnx I shall

[17:38] <autrijus> Khisanth: no, not now

[17:39] <autrijus> gaal: ms movie maker

[17:39] <Khisanth> gaal: many things :)

[17:39] <autrijus> finally: http://perlcabal.org/~autrijus/oscon05-stevan.swf

[17:39] <gaal> (magic boxen)++

[17:39] <autrijus> someone add them to the http://apocalypse.kwiki.org/?Movie page please

[17:39] <autrijus> I'll reboot back to fbsd

[17:40] <stevan> autrijus: I will

[17:40] <putter> itz_: if you wanted to start on the <tab> autocompletion... symbol tables %Foo:: do exist, so could use that...

[17:40] <Khisanth> gaal: you could also use virtual dub or mencoder or transcode :)

[17:40] * putter thinks "they do exist, don't they...?"

[17:41] <ingy> autrijus: how do I embed an mp4 in html?

[17:41] <ingy> the <embed> tag is cropping

[17:42] <gaal> (prgrammable magic boxen)++

[17:43] <stevan> autrijus: ingy: kwiki has updated movie links now

[17:43] <ingy> I have the movies

[17:43] <szabgab> back for a few seconds they start to ask for water and things :-)

[17:43] <ingy> I need the proper html

[17:43] <wolverian> <object>, I think. <embed> is IE only.

[17:43] <szabgab> so the frontened is ok, now what is the curent backend ?

[17:43] <wolverian> http://www.w3.org/TR/REC-html40/struct/objects.html#h-13.3

[17:43] * ingy tries

[17:43] <Darren_Duncan> 'make test' still in progress

[17:44] <szabgab> what code can be run on Javascript /

[17:44] <szabgab> ?

[17:44] <gaal> szabgab, over 60% of the test suite passes.

[17:45] <szabgab> of Perl 6 you mean ?

[17:45] <gaal> of pugs

[17:45] <ingy> wolverian: <object data="url"> ???

[17:45] <putter> well, the pugs test suite.  which is a subset of p6

[17:45] <wolverian> ingy, yes. remember alt="" too.

[17:46] <putter> fuzzy but ever growing subset.  add tests! ;)

[17:46] <Aankh|Clone> This SWIG stuff is driving me crazy...

[17:46] <ingy> wolverian: no worky!

[17:46] <szabgab> what other backends are running now ?

[17:46] <ingy> in firefox anyway

[17:47] <wolverian> ingy, hmm. does your page validate? :)

[17:47] <ingy> <object data="movies/oscon05-autrijus.mp4">

[17:47] <Darren_Duncan> 'make test' currently t/oo ... no problems so far

[17:47] <putter> as long as we're all waiting for tests and building movies... at some point we should abstract some of the test files, so for instance, a full array test suite can be applied to all objects which claim to be array-like, without having to duplicate things.

[17:47] <szabgab> so what do I need in order to have the javascript backend ?

[17:47] <wolverian> ingy, it might be a plugin problem then.

[17:48] <gaal> szabgab, hmm, i don't know - unless somebody else does look for iblech

[17:48] <gaal> seen iblech

[17:48] <jabbot> gaal: iblech was seen 2 hours 21 minutes 38 seconds ago

[17:48] <putter> szabgab: perl, and brower. :)

[17:49] <putter> s/brower/browser/

[17:49] <putter> but spidermonkey is much faster.

[17:50] <putter> that you can get from mozilla.org (I fuzzily recall)

[17:50] <szabgab> putter: I am slow, I have pugs compiled on my machine, what now ?

[17:50] <putter> ./pugs -e 'say "hello, world!"  # its traditional ;)

[17:50] <szabgab> I also have say "Hello World" which would be enough for me

[17:51] <szabgab> putter: that's ok, but that's not javascript

[17:51] <putter> saying ./pugs  starts it in interactive mode.

[17:51] <szabgab> yeah, that part is already working thanks to gaal and the hackathon

[17:51] <ingy> SWEEEEEEEEEEEEEET!

[17:51] <ingy> I got it

[17:51] <ingy> stevan++

[17:51] <ingy> autrijus++

[17:51] <putter> javascript is under perl5/PIL2JS .  see info there.  it's a bit standalone at the moment.

[17:51] <szabgab> now I would like to see it in my browser (and all locally, I won't have network tomorrow)

[17:52] <ingy> <embed src="movies/oscon05-stevan.mp4" WIDTH="100%" HEIGHT="100%" CONTROLS="TRUE">

[17:52] <autrijus> woot

[17:53] <autrijus> szabgab: perl5/PIL2JS/README explains how to get that working

[17:53] <wolverian> what happened to standards? :(

[17:53] <stevan> ingy: horray

[17:53] <autrijus> wolverian: you want <object> ?

[17:53] <szabgab> thanks, now reading ..

[17:53] <wolverian> well, I think it's the w3c recommendation

[17:53] <stevan> I guess this is the next best thing to being there :)

[17:53] <wolverian> I don't mind if the page doesn't even attempt to validate :)

[17:53] <autrijus> wolverian: not until you put <object> for <img> too :)

[17:53] <Aankh|Clone> wolverian: <object> doesn't work in the majority of browsers.

[17:54] <wolverian> Aankh|Clone, really? IE?

[17:54] <autrijus> and really, if they had spelled it <obj>

[17:54] <autrijus> then I think it will get more adoption.

[17:54] <Aankh|Clone> wolverian: Not in IE, or Safari, or Konqueror, IIRC.

[17:54] <autrijus> it's a huffman thing

[17:54] <wolverian> Aankh|Clone, agh. sucks.

[17:54] <Aankh|Clone> Why?

[17:54] <autrijus> <object> I think works in IE

[17:54] <autrijus> not sure about the konq series.

[17:54] <gaal> autrijus, why? <blink> got plenty of adoption.

[17:54] <Aankh|Clone> You're forgetting the greatest thing about standards: there's so many of them to choose from. :-)

[17:54] <wolverian> autrijus, right. xhtml lets you do: <p src="image.png">alternative text</p>

[17:54] * gaal ducks

[17:54] <wolverian> autrijus, where src can be video as well.

[17:54] *** Aankh|Clone is now known as Aankhen``

[17:54] <wolverian> er, xhtml2, that is.

[17:54] <autrijus> yes.

[17:54] <autrijus> xhtml2 looks very cool

[17:55] <autrijus> not as cool as perl6 but close

[17:55] <gaal> maybe we can target it? :)

[17:55] <wolverian> I thought I read they're retaining <b> and such, which sucks, though.

[17:55] <autrijus> of course, there's this implementation bit...

[17:55] <autrijus> gaal: lol, a turing complete xhtml?

[17:55] <gaal> PHBs love to call HTML a language after all :)

[17:55] <autrijus> I think you can do that with xml namespace... just compile to xslt

[17:55] <gaal> pf2-p?

[17:56] <Aankhen``> wolverian: Why does retaining <b> and such suck?

[17:56] <autrijus> gaal: as soon as you stop tempting me with good ideas

[17:56] <Aankhen``> Ah, autrijus, IE does support <object>, but it's broken.

[17:56] <autrijus> or, sick ideas, as the case may be

[17:56] <Aankhen``> http://lists.w3.org/Archives/Public/w3c-wai-ig/2002AprJun/0865.html

[17:56] <putter> autrijus: for post-release, would you mind a 10x slowdown in rx compilation?  basically, Parser.hs hooks out to macros in Prelude.hs which hook back to Parser.  Allows rx and friends to be replaced, lexically, perl-side.  But perl5.t goes from under a minute to seven. :/

[17:56] <Aankhen``> http://diveintomark.org/archives/2003/04/13/object_and_internet_explorer too.

[17:56] <gaal> i saw your hair autrijus. it isn't pointy :)

[17:56] <autrijus> putter: post-release, just commit things in and we'll talk :)

[17:57] <putter> k. :)

[17:57] <Aankhen``> ingy: I believe that for <object> to work, you'd need to specify a mime-type using the `type` attribute.

[17:57] <putter> (anarchistic development)++

[17:57] <Aankhen``> ingy: If you're interested, http://realdev1.realise.com/rossa/rendertest/quicktime.html

[17:58] <Darren_Duncan> testing

[17:58] <wolverian> Aankhen``, <b> versus <strong>. I dislike purely visual elements. that's what CSS is for

[17:58] <wolverian> Aankhen``, albeit it's a useful shortcut. :)

[17:58] <gaal> good read for after the release: http://www-cs-faculty.stanford.edu/~knuth/smullyan.html

[17:58] <Aankhen``> wolverian: <strong> does not cover every single case where you want text to appear in bold.

[17:58] <autrijus> Aankhen``: that's what css is for.

[17:59] <autrijus> font-weight: bold

[17:59] <autrijus> but hey, mtowtdi.

[17:59] <Aankhen``> autrijus: So basically, you want to replace a short, easy to use, semantically meaningless tag with a long, less easy to understand tag and attribute combination that is also semantically meaningless?

[18:00] <Aankhen``> (that is to say, <b>foo</b> vs. <span class="something_that_needs_to_be_bold">foo</span>)

[18:01] <putter> gaal: :)

[18:03] <Aankhen``> wolverian, take a look at this if you have a minute: http://mpt.net.nz/archive/2004/05/09/semantic

[18:04] <ingy> hey all: http://www.kwiki.org/apocalypse/start.html

[18:04] <ingy> THANK YOU

[18:04] <autrijus> pre2 uploading

[18:04] <autrijus> ingy: talk starting?

[18:04] <ingy> can I announce 6.2.9?

[18:04] <autrijus> you can, but not at beginning of the talk.

[18:04] <ingy> I talk in 30 minutes

[18:04] <autrijus> oh ok.

[18:04] <autrijus> then you can.

[18:04] <ingy> :)

[18:05] <ingy> I'll have irc window open on stage

[18:05] <stevan> ingy++  

[18:05] <ingy> ok bbiab!

[18:05] <gaal> we'll flag you :) "ingy ingy! tell them now!"

[18:05] <whiteg> ingy++

[18:05] <integral> the url on the first page of the slides is wrong :)

[18:05] <ingy> hi whiteg!!!!

[18:06] <integral> ingy: s{autrijus.org/apoc}{www.kwiki.org/apocalypse}

[18:06] <autrijus> ingy: commit your .spork to docs/talks/ now!

[18:06] <autrijus> ingy: we'll fix it for you! it's a tradition

[18:06] <autrijus> (or put it somewhere and I can commit for you)

[18:06] <whiteg> ingy: :)

[18:07] <whiteg> ingy: good luck

[18:08] <wolverian> Aankhen``, thanks, that's a good page.

[18:09] <Aankhen``> NP.

[18:10] <autrijus> uploaded: http://perlcabal.org/~autrijus/Perl6-Pugs-6.2.9-pre2.tar.gz

[18:10] <autrijus> size: 1441212 sha1: 39184eac1e4fe9a7008455a0415394575773b01a

[18:10] <autrijus> this is likely the final -pre before release.

[18:10] <autrijus> I'll update ChangeLog now and wait for ingy's slides to go into docs/talks/

[18:11] <autrijus> but otherwise please start smoking

[18:11] <autrijus> it corresponds to r6045.

[18:13] <szabgab> trying the javascrip backend and does not seem to do anything

[18:13] <szabgab> script is      say "Hello World";

[18:13] <autrijus> szabgab: it should have generated some .html files. also, do you have spidermonkey installed?

[18:13] <szabgab> perl5/PIL2JS/pil2js.pl --output=hello_world.html --link=html hello_world.pil

[18:14] <szabgab> ah I need spiedrmoneky ?

[18:14] <autrijus> no, I think you can just open hello_world.html in your fav browser, no?

[18:14] <autrijus> you want iblech for this

[18:14] <szabgab> Firefox ?

[18:14] <autrijus> and I really need to go back to releng :)

[18:14] <szabgab> do that, I have 12 more hours to show this :-)

[18:15] <szabgab> and nothingmuch will be there too so I can blame it on him :-)

[18:15] <szabgab> later&

[18:15] <gaal> bye again

[18:17] <autrijus> gaal: resmoking?

[18:17] <gaal> yes, near end of pass 1 build.

[18:18] <autrijus> k

[18:19] <putter> Aankhen``: ah well.  parrot-0.2.2 works.  so your failures are still unexplained.

[18:21] <ingy> autrijus: you want my slides tarball?

[18:22] <autrijus> ingy: just the spork file

[18:22] <Aankhen``> putter: Eh?

[18:22] <autrijus> I spotted quite a number of glitches

[18:22] <autrijus> but overall very very good talk

[18:23] <stevan> ingy++ # I agreee :)

[18:24] <ingy> http://www.kwiki.org/apocalypse.slides

[18:25] <ingy> nobody cares about details in an ingy talk

[18:25] <gaal> ingy, what's the start url again?

[18:25] <putter> Aankhen``: doh.  don't mind me.

[18:25] <ingy> http://www.kwiki.org/apocalypse/start.html

[18:25] <putter> Limbic_Region:  ah well.  parrot-0.2.2 works.  so your failures are still unexplained.

[18:25] <ingy> I think

[18:25] <gaal> ingy, thanks (and good luck :)

[18:25] <gaal> yes, it is

[18:26] <ingy> gaal: thank you!

[18:26] <ingy> thank you all

[18:26] <autrijus> ingy: fixing, eta 120 seconds

[18:26] <ingy> go autrijus go

[18:27] <gaal> autrijus, i have a minor fix, shall i commmit?

[18:28] <gaal> the default recommended heap size for precom prelude ***+ Test*** should be a little larget

[18:28] <gaal> larger

[18:28] * putter can't get beyond the start slide.  looks like the js doesnt work in an up-to-date firefox on FC3. :(

[18:28] <stevan> putter: hit "return"

[18:29] <putter> doh.  thanks.  :/

[18:29] <autrijus> gaal: just commit

[18:29] <autrijus> gaal: better do it now :)

[18:29] <gaal> ack

[18:29] <stevan> putter: it took a minute or two to realize that myself :)

[18:29] <autrijus> ingy: http://autrijus.org/tmp/apocalypse.slides

[18:29] <Darren_Duncan> I finished make test ... 1 failed file

[18:29] <autrijus> ingy: have fun, you rock!

[18:29] <Darren_Duncan> t/data_types/pairs.t

[18:30] <autrijus> don't look at my changes -- after all I didn't look at iblech's changes back at YAPC::NA ;)

[18:30] <autrijus> just spork -make again

[18:30] <Darren_Duncan> I think pairs.t just died

[18:30] <Darren_Duncan> anyway, I'm going to go over and show support for ingy in his audience

[18:30] <Darren_Duncan> offline momentarily ...

[18:31] <autrijus> have fun :)

[18:31] <autrijus> gaal: how's the smoke?

[18:31] <gaal> still compiling Run pass #2

[18:32] <gaal> once that

[18:32] <gaal> s finished eta 1300 sec more or less

[18:32] <autrijus> ok. as soon as you report 100% ok I'll roll a release :)

[18:32] <autrijus> sanity checking here too, plus changelogging

[18:32] <gaal> my last commit was fun: one line patch to a comment. :)

[18:33] <autrijus> heh :)

[18:33] <autrijus> ingy should be on air now

[18:33] <gaal> damn damn damn!

[18:33] <gaal> ran out of heap

[18:33] <gaal> apparenlty the patch wasn't good :)

[18:33] <autrijus> roll it back ;)

[18:33] <gaal> nah, why do that when i can suggest a bigger heap :)

[18:34] <autrijus> maybe because some people don't have that amount of memory :)

[18:34] <autrijus> (it's a hard req)

[18:34] <autrijus> ah, just a comment?

[18:34] <autrijus> go ahead ;)

[18:35] <gaal> yes - most people don't precompile Test.pm anyway

[18:35] <gaal> better precompilation == better

[18:35] <gaal> (hmm, does the above equation imply that precompilation == 0 ?)

[18:38] <gaal> i won't commit until i know it's sufficient

[18:38] <gaal> so if you want to roll a tarball, don't wait for me

[18:38] <autrijus> gaal: nah, I'll wait for you :)

[18:38] <gaal> it == the value i gave

[18:38] <gaal> == embarrasingly high

[18:39] <brentdax> What program is used to display these slides?

[18:40] <gaal> a web browser

[18:44] * putter final (pre2) test run begins...

[18:44] <autrijus> good

[18:45] <gaal> uh oh. my directive was not honored

[18:45] <gaal> sorry :(

[18:45] <autrijus> np :(

[18:46] <putter> brentdax: http://www.kwiki.org/apocalypse/start.html  http://search.cpan.org/~ingy/Spork-0.20/

[18:46] <gaal> restarting, but this is probably indicative of a PugsBuild bug :(

[18:48] <Darren_Duncan> test

[18:48] <Darren_Duncan> the autrijus video is playing now

[18:48] <Darren_Duncan> just ended

[18:48] <ingy> autrijus: I think they liked the movie

[18:48] <Darren_Duncan> I'm at ingy's talk ... 

[18:49] <Darren_Duncan> I did

[18:49] <autrijus> ingy: I listened to it.

[18:49] <autrijus> and I heared the applause too

[18:49] <gaal> smoke started. eta 1350 sec

[18:49] <autrijus> boojum++ # skype feed

[18:49] <obra> hah

[18:50] <stevan> skype feed? where?

[18:50] <autrijus> stevan: private :)

[18:50] <stevan> ah

[18:51] * putter abandons google search for oscon skype :(

[18:51] <gaal> heh :)

[18:52] <putter> fyi, parrot-0.2.2 vs parrot trunk/ is not an issue (on FC3 etc etc) vis make test (err, the flavor of make test which includes etc/).  one test run still in progress.

[18:53] <putter> Remind me why make test sometimes includes ext/ and sometimes not?

[18:54] <putter> (preceeding parrot observation was vis pre1)

[18:54] <Darren_Duncan> I don't know

[18:54] <Darren_Duncan> in my experience, it only runs ext/ if all the normal t/ worked

[18:54] <Darren_Duncan> one t/ failure, and no ext/ is run ... its very annoying, really

[18:54] <Darren_Duncan> and the smokers don't have that problem

[18:56] <putter> maybe have separate make test and make fulltest ?   That would also provide a place to put "it just runs toooo long" tests.

[18:57] <autrijus> ok, changelog done. who still smoking?

[18:57] <gaal> me

[18:57] <putter> It would also be nice to get the rules tests out from t_disabled.

[18:57] <clkao> should i? last i tried it will take 1 hour

[18:57] <putter> me

[18:58] <ingy> autrijus: is it soup yet?

[18:58] <Darren_Duncan> data_types/pairs.t didn't work before

[18:59] <autrijus> Darren_Duncan: yes, noted

[18:59] <autrijus> ingy: waiting for gaal + putter to finish smoking

[18:59] <autrijus> will be done before your talk is done

[18:59] * putter is working through t/operators/... no issues yet...

[19:00] <gaal> the last test in io.t crashes for me (w32 native)

[19:01] <autrijus> ok.

[19:02] <clkao> even make clean takes so long

[19:02] <clkao> infinite look

[19:02] <clkao> loop

[19:05] <putter> clkao: really?  hmm... perhaps I should try it on one of my pre1 builds...?

[19:05] <clkao> it's old makefile

[19:05] <clkao> rerun makefile.pl works

[19:05] <putter> ah

[19:06] <autrijus> ok, ready to fly anytime.

[19:06] <gaal> i'm still in oo, near the end

[19:06] <autrijus> k, will wait for you two

[19:07] <ingy> autrijus: can you give guido a committer bit?

[19:07] <ingy> k thx

[19:07] <autrijus> is he in the audience?

[19:07] <autrijus> guido at python dot org?

[19:08] <autrijus> I don't usually send it to people who is not expecting it :)

[19:09] * putter I'm though t/ without issues.  ext/ is running...

[19:10] <gaal> i've started pugsrun, a little less than 5min i think.

[19:10] <autrijus> pugs committership invitation sent to both guido and larry.

[19:11] <putter> but based on t/, and pre1 ext/ , I'm fine with flying.

[19:11] <autrijus> 8108 tests all pass here.

[19:11] <putter> :)

[19:11] <putter> What about matz? :)

[19:11] <autrijus> if matz is in the audience sure :)

[19:11] <gaal> or spj? :)

[19:12] <autrijus> I'll do that at icfp not oscon :)

[19:12] <stevan> and brendan (the Javascript guy)

[19:12] <gaal> t/rules/, so far so good.

[19:16] <autrijus> writing release notes.

[19:17] <gaal> &clear for @takeoff;

[19:18] <autrijus> okay. fly!

[19:18] * gaal cheers

[19:18] <xb95> everybody clapped in the audience

[19:18] <autrijus> http://pugscode.org/dist/Perl6-Pugs-6.2.9.tar.gz :)

[19:18] <Darren_Duncan> who just said "its soup:"

[19:19] <ingy> A collective w00t to you all

[19:19] <putter> yay!!

[19:19] <autrijus> ingy: I hope the release didn't go unnoticed :)

[19:19] <xb95> I will have to play with Pugs later, I had never known much about it. This is exciting. :)

[19:19] <putter> toot!  toot!

[19:21] <autrijus> ingy: you rock :)

[19:22] <Amnesiac> are you guys at OSCON right now?

[19:22] <autrijus> Amnesiac: not physically, but virtually :)

[19:22] <Amnesiac> ah :P

[19:22] <Amnesiac> couldn't attend this time?

[19:24] <autrijus> decided not to :)

[19:26] <Amnesiac> I see

[19:26] <putter> with flight 6.2.9 vanishing into the mists of time, putter dreams of making big buggy and dangerous patches to pugs...  But that will have to wait, for now is a time for... paperwork!

[19:26] <putter> bye all &

[19:26] <autrijus> ciao putter :)

[19:27] <putter> congrats ingy!

[19:27] <stevan> Amnesiac: autrijus didnt want to submit to another body cavity search at the airport

[19:27] <Amnesiac> haha

[19:28] <autrijus> too true, sadly

[19:34] <Darren_Duncan> naptime see youse later

[19:38] <autrijus> release notes up. journaling...

[19:39] <gaal> i figured out why my heap size request wasn't honored earlier

[19:39] <clkao> all tests pass with PUGS_EMBED=perl5

[19:40] <clkao> though a bit too late

[19:40] <autrijus> still, good to know :)

[19:40] <gaal> (at first i added a trace print, and it worked, so i was about to commit a "here, i don't know why but this helps" patch :)

[19:40] <gaal> but the real reason is that i didn't rerun perl Makefile.PL

[19:41] <Limbic_Region> hey - how did ingy's talk go?

[19:41] <gaal> that's kinda distressing, because config.yml is supposed to be a dep

[19:41] <autrijus> Limbic_Region: I hear that it's quite well received

[19:41] <gaal> ah! it's just a dep for pugs... hmm. how do i make it a trigger for a makefile regen?

[19:41] <autrijus> gaal: touch Makefile.PL

[19:41] <autrijus> # evil but works

[19:41] <gaal> heh

[19:42] <autrijus> Limbic_Region: the videos got some applauses :)

[19:42] <gaal> heh heh :)

[19:42] <Limbic_Region> good

[19:42] <Limbic_Region> I will have to check out the video from home - apparently I can't download/install the proper codex and only get sound

[19:43] <autrijus> it surprises me that you can't even get .swf

[19:43] <autrijus> or .wma

[19:43] <gaal> wha! it *still* doesn't work. this can't be<tm>

[19:43] <autrijus> I mean .wmv

[19:43] <autrijus> usually one of the two could work

[19:44] <gaal> anyone here with plenty of RAM? (> 512mb)

[19:44] <dudley> gaal: 768M here

[19:45] <gaal> okay, please help me reproduce this:

[19:45] <gaal> take the release tarball

[19:45] <gaal> add this to util/build_pugs.pl

[19:45] <gaal>     print ((join " ", @_) . "\n");

[19:46] <gaal> as line 65, right after "sub run"

[19:46] <gaal> then vi config.yml

[19:46] <gaal> uncomment precompile_modules and ghc_heap_size

[19:47] <gaal> perl Makefile.PL ; make

[19:47] <Limbic_Region> autrijus - the .wmv does work - but only sound

[19:47] <gaal> and tell me if pass #2 crashes + how much memory GHC thinks it has

[19:47] <Limbic_Region> not all .wmv are created equal

[19:47] * Limbic_Region didn't try the .swf

[19:47] <dudley> gaal: okay, give me a minute

[19:47] <Khisanth> Limbic_Region: which wmv?

[19:47] <Khisanth> oscon05-stevan.wmv worked fine

[19:48] <gaal> the vexing issue is that on an svn working copy the above *does* work.

[19:48] <Limbic_Region> http://apocalypse.kwiki.org/index.cgi?Movies

[19:48] <gaal> thanks dudley!

[19:48] <dudley> np

[19:48] <gaal> this will take more than a minute though :)

[19:48] <Limbic_Region> Khisanth - depending on your version of media player and what codexen it has installed

[19:48] <gaal> bbibab # food &

[19:49] <Khisanth> Limbic_Region: not even using windows :)

[19:49] <Limbic_Region> heh

[19:49] <Limbic_Region> not really an option for me ATM 

[19:50] <Limbic_Region> .swf is working though

[19:50] <autrijus> cool

[19:50] <autrijus> at least you get some sort of image

[19:51] <Khisanth> that camera for an eye look is ...

[19:51] <autrijus> ...my signature look.

[19:51] <Khisanth> "I am Autrijus of Borg..."

[19:51] <stevan> Khisanth: that is his eye

[19:51] <stevan> he is a cyborg dont you know

[19:51] <Khisanth> :)

[19:51] <Khisanth> stevan: that would explain alot actually

[19:52] <Khisanth> the coding while sleeping for example

[19:52] <autrijus> "in the long run, we are all cyborgs"

[19:53] <Khisanth> wouldn't mpeg1 have been easier? :)

[19:54] <autrijus> true, but sorenson squeeze put mpeg1 at the second page :)

[19:54] <autrijus> and I followed the path of least resistance

[19:54] <autrijus> s/squeeze/squeezeit/

[19:54] <Khisanth> then whey did you create three?! :P

[19:55] <autrijus> well, .wmv is master copy, but ingy is on osx, so .mp4 is more natural

[19:55] <autrijus> but I wasn't sure he can run the .mp4 codec, so I made .swf as fallback

[19:55] <autrijus> end of story :)

[19:55] <Khisanth> not .mov anymore?

[19:55] <autrijus> squeezeit can't generate .mov file properly on my machine

[19:55] <autrijus> :-/

[19:56] <autrijus> and I hear .mp4 is the future anyway

[19:57] <Limbic_Region> the last video creation stuff I did was years ago when my boss wanted the clip from Charlie Brown with the 5 cent psychiatrist bit - I had to figure out how to rip the DVD and convert the format - back then it didn't seem all that easy

[19:58] <autrijus> it's my first time playing with video creation too

[19:58] <autrijus> lots of false starts

[19:59] * Limbic_Region has now enjoyed both movies

[19:59] <autrijus> :D

[19:59] <Khisanth> it's quite easy these days :)

[19:59] <Khisanth> some formats easier than others

[20:04] <Aankhen``> G'night.

[20:04] <gaal> bye A!

[20:09] <Khisanth> hmm Azumanga

[20:13] <dudley> whee, pass #2

[20:13] <gaal> okay, Run will take a while

[20:15] <gaal> in the meantime: scoll up a bit to the line just before GHC started. do you see +RTS -Msomething -RTS ?

[20:16] <dudley> s/something/348m/

[20:16] <gaal> which is what you have in your congig.yml, right?

[20:16] <gaal> config

[20:16] <dudley> yep

[20:17] <gaal> okay. that's basic sanity. :)

[20:17] <gaal> now to see GHC honored that.

[20:24] <szabgab> to finish my questions, can Pugs compile to Parrot already ?

[20:24] <autrijus> szabgab: yes. ./pugs -BPIR -e 'say 123'

[20:25] <autrijus> ./pugs -CPIR -e 'say 123' > foo.pir

[20:25] <autrijus> (-B is compile+run, -C is compile only)

[20:25] <autrijus> the PIR backend is currently quite behind javascript though.

[20:25] <szabgab> ok, so Pugs can run P6 by itself, through Parrot and through my browser (Javascript) am I right, that's it currently ?

[20:25] <autrijus> yes.

[20:25] <autrijus> and also thru p5

[20:26] <autrijus> but only for very simple things

[20:26] <autrijus> but I plan to remedy that.

[20:26] <szabgab> do you mean it can generate p5 script ?

[20:26] <autrijus> yes.

[20:26] <szabgab> p6->p5 compiler ?

[20:26] <autrijus> yes.

[20:26] <szabgab> oh

[20:26] <autrijus> the code is in perl5/PIL-Run/

[20:26] <autrijus> like JS, it's not yet integrated back.

[20:26] <szabgab> as if I could make sense of that :-(

[20:27] <autrijus> these are all new developments in the last two weeks :)

[20:27] * Limbic_Region wipes the drool from szabgab's chin and attempts to close the gaping oriface

[20:27] <szabgab> oh I see that's the ONLY reason I have not noticed them :-)

[20:27] <autrijus> right. in YAPC::NA we talked about them a lot

[20:28] <autrijus> but real working code only begings in the past few weeks

[20:28] <szabgab> I missed that by a week, but I hope YAPC::EU will give some if that too

[20:28] <szabgab> if/of

[20:30] <autrijus> hm, guido didn't pick up the pugs committer invitation. I wonder why

[20:30] <gaal> dudley, for me, running the GHC second pass manually (i.e., copything the GHC command line over and submitting it to the shell verbatim) did work.

[20:30] <gaal> was he indeed in the audience?

[20:31] <dudley> gaal: It's been chugging along at 217M real memory for a while now

[20:31] <gaal> it oughta still rise

[20:31] <autrijus> gaal: he was... although it turned out that he didn't ask for committershi

[20:31] <autrijus> p

[20:31] <autrijus> larry asked it for him

[20:31] <gaal> hee

[20:33] <gaal> once upon a time, livejournal had invites. it was considered good to "recruit" active interesting writers - people were proud of the people they brought

[20:33] <szabgab> ./pugs --help tells me   (valid backends are: Ghc, Parrot, Pil, Pir, Pugs)

[20:33] <gaal> so, nice catch for today, autrijus :)

[20:33] <szabgab> which is Perl5 ?

[20:35] <gaal> to continue the analogy, sometimes newcomers didn't seem eager in the beginning... but turned out to get hooked after a few months.

[20:35] <gaal> :)

[20:36] <stevan> it would be pretty cool to have Guido in the Pugs AUTHORS file :)

[20:37] <autrijus> indeed :)

[20:37] <autrijus> szabgab: none is perl5/js. that's what I meant by "not integrated"

[20:38] <szabgab> ah

[20:42] <dudley> gaal: done. GHC maxed out at 275M.

[20:42] <gaal> okay, that means it was honored on your setup.

[20:42] <gaal> it == the heap size request

[20:42] <gaal> which means i have no idea why sometimes it isn't honored.

[20:43] <gaal> :-/

[20:43] <gaal> anyway, thanks, dudley++

[20:44] <dudley> np :-)

[20:46] <dudley> okay, time to go home now. Adios!

[20:49] <autrijus> iblech: hm, http://linide.sourceforge.net/pugs-livecd-6.2.9.iso is down? I thought it was up a while ago

[20:53] <ingy> hola

[20:53] <gaal> night all! nice flying with you :)

[20:53] <gaal> oh - congrats ingy :)

[20:53] <ingy> thanks gaal :)

[20:53] <gaal> bye &

[20:54] <autrijus> ingy: so how's the talk :)

[20:54] <autrijus> the skype feed broke right after my video

[20:54] <ingy> heh

[20:54] <ingy> it was great

[20:54] <ingy> I think so

[20:54] <autrijus> woot

[20:55] <autrijus> so you can enjoy the conference now

[20:55] <ingy> I guess some people maybe didn't like my personal rants

[20:55] <autrijus> you mean against oscon?

[20:55] <autrijus> or against blue sugar cubes?

[20:55] <autrijus> or against george?

[20:55] <ingy> yeah... take no prisoners eh?

[20:55] <autrijus> mm :)

[20:55] <autrijus> so did you use my modified slides?

[20:55] <ingy> I just say what's on my mind

[20:56] <autrijus> the one with french poetry

[20:58] <ingy> I take things from various sources

[20:58] <ingy> too little time to say everything

[20:59] <autrijus> *nod* I just wanted to make sure that I'm not arguably the greatest hacker :)

[21:00] <ingy> you are a great hacker

[21:00] <ingy> :p

[21:00] <autrijus> right, but not the way you put it, so I changed it slightly :)

[21:00] <autrijus> but anyway, thanks so much for doing the stunt

[21:01] <ingy> yeah, thanks for writing it

[21:01] <ingy> :)

[21:01] <autrijus> nah, most of the materials are from you and interviews

[21:01] <autrijus> btw, the interviews == good idea

[21:01] <autrijus> I hope my metaphysical mishmash didn't turn people off

[21:01] <ingy> yeah, there was some new fun created

[21:01] <ingy> movies++

[21:02] <autrijus> movies++ # indeed

[21:02] <ingy> Gloria Wall laughed a lot at your metaphysical mishmash :)

[21:02] <autrijus> oooh. nice :)

[21:02] <ingy> so I think it was nice

[21:03] <szabgab> where are the slides ?

[21:03] <autrijus> :D

[21:03] <autrijus> szabgab: in the pugs tree

[21:03] <autrijus> docs/talks/oscon-apocalypse.spork

[21:03] <autrijus> rendered html is http://www.kwiki.org/apocalypse/start.html

[21:04] <szabgab> thx

[21:05] <ingy> szabgab: http://www.kwiki.org/apocalypse/slide23b.html#end

[21:06] <szabgab> autrijus: that page does not have working links even http://autrijus.org/apoc/start.html is 404

[21:06] <ingy> my personal  favorite

[21:06] <ingy> *yawn*

[21:06] <ingy> I need a nap

[21:06] <clkao> ingy: you should go to svl talk!

[21:06] <autrijus> ingy: I need to sleep too

[21:06] <autrijus> gotta wake up in 5 hours

[21:07] <autrijus> wonder how I can do that

[21:07] <autrijus> alarm clocks, maybe

[21:07] <clkao> it won't work

[21:07] <shapr> lots of them

[21:08] <autrijus> a beowolf...

[21:08] <autrijus> ...not going to work

[21:08] <shapr> heh, a beowulf cluster of clocks? That just might work.

[21:08] <autrijus> gosh, that slide23b's damian picture is animated gif

[21:08] <autrijus> horrors

[21:14] * autrijus waves &

[21:45] <pdcawley> ?eval my @a = (1,2); my @b = (3,4,5); map -> $arg { $arg } @a, @b

[21:45] <evalbot6> (1, 2, 3, 4, 5) 

[21:46] <Limbic_Region> ?eval my @a = (1,2); my @b = (3,4,5); zip @a, @b

[21:46] <evalbot6> (1, 3, 2, 4, undef, 5) 

[21:46] <buu> Eval bot so sexy.

[21:47] <integral> safe sexy!

[21:47] <pdcawley> ?eval my @a = (1,2); my @b = (3,4,5); my @c; for @a,@b -> $_ { push @c, $_ }; @c

[21:47] <evalbot6> [1, 2, 3, 4, 5] 

[21:48] <pdcawley> ?eval my @a = (1,2); my @b = (3,4,5); map -> $arg { $arg } \@, \@b

[21:48] <evalbot6> Error:  unexpected "\\" expecting block construct, ":", "::", term postfix, operator, postfix conditional, postfix loop, postfix iteration, ";" or end of input 

[21:48] <Limbic_Region> you forget an a or was that intentional?

[21:48] <pdcawley> Forgot.

[21:49] <pdcawley> ?eval my @a = (1,2); my @b = (3,4,5); map -> $arg { $arg } \@a, \@b

[21:49] <evalbot6> (1, 2, 3, 4, 5) 

[21:49] <pdcawley> Ooh... that's broken.

[21:49] <pdcawley> According to Luke that should be ((1,2), (3,4,5))

[21:50] <pdcawley> ?eval my @a = (1,2,3); zip @a, @a, @a

[21:50] <evalbot6> (1, 1, 1, 2, 2, 2, 3, 3, 3) 

[21:50] <Limbic_Region> ok, so according to Luke - what syntax should you use to get the current behavior?

[21:50] <Limbic_Region> IOW - when is auto-derefening not

[21:50] <pdcawley> Ghod knows. 

[21:51] <pdcawley> Personally I think that signature slurpy is over eager.

[21:52] <pdcawley> What's signature of zip?

[21:54] <Limbic_Region> sorry - was in #perl

[21:54] <Limbic_Region> dunno

[21:54] * pdcawley grins, I've just asked Luke on p6l. Interested to hear what he has to say.

[21:54] <Limbic_Region> I have pretty much removed myself from p6 dev and when I ready the summary today, I didn't know what the recent decision on slurpy params was but I took it that you didn't like it

[21:55] <pdcawley> I don't. But I may have been misreading the spec and living in blissful ignorance for months.

[21:55] <pdcawley> s/months/years/

[22:00] <putter> zip is in docs/AES/S29draft.pod

[22:02] <putter> (it came up in conversation with cybercobra)

[23:11] <pdcawley_>  Hmm... unless I'm seriously misunderstanding Luke' s point, that should flatten all the list args to zip in a single list.

[23:12] <pdcawley_> But I've got to go AFK again... sorry.

[23:13] <svnbot6> r6057 | fglock++ | * updated Recurrence.pm ChangeLog

[23:13] <svnbot6> r6058 | Stevan++ | Perl6::MetaModel - (p5)

[23:13] <svnbot6> r6058 | Stevan++ | * cleaning up some hacks in Object

[23:13] <svnbot6> r6058 | Stevan++ | * cleaning up MRO handling in MetaClass

[23:13] <svnbot6> r6058 | Stevan++ |   - adding comments about circularity issues

[23:13] <svnbot6> r6058 | Stevan++ | * cleaning up _metaclass_dispatch in MetaModel

[23:13] <svnbot6> r6058 | Stevan++ |   - now properly handles private method calls

[23:13] <svnbot6> r6058 | Stevan++ |   - ideally this can be removed post bootstrapping,

[23:13] <svnbot6> r6058 | Stevan++ |     I will have to investigate that  

[23:13] <svnbot6> r6059 | iblech++ | PIL2JS: README: Added basic getting started info, szabgab++ for asking.

[23:13] <svnbot6> r6059 | iblech++ | In short: use ./jspugs.pl, enter :precomp, then enter Perl 6 code and point

[23:13] <svnbot6> r6059 | iblech++ | your browser to ./output.html.

[23:14] * brentdax heads over to PAUSE...

[23:19] <iblech> stevan: FYI, I'll probably start integrating Perl6.MetaModel tomorrow (i.e. in ~~15h)

[23:19] <nothingmuch> ingy: cute tal.

[23:19] <nothingmuch> k

[23:20] <nothingmuch> too bad you didn't fix my typos/wordos though ;-)

[23:37] *** Maddingue__ is now known as Maddingue

[23:39] <iblech> autrijus: re (was at local Linux usergroup meeting, hold my talk, people seemed to like it :)) It seemed .sf.net was down, but it's up again now. I've just uploaded the new live cd

[23:40] <iblech> autrijus: How will PIL2 emit class definitions? E.g., what's the PIL for class Foo is Bar { has Baz .$grtz is rw }?

[23:41] <iblech> (Need to sleep now, but will backlog.)

[23:41] <iblech> Night all :)

[23:45] <brentdax> The PAUSE indexer got a little confused when it looked at WWW-Kontent-0.01...it seems to have sat there going "I don't see any `package` statements--where are the modules?"

