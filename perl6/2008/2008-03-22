[00:00] *** thoughtpolice joined
[00:01] <meppl> good night

[00:03] *** meppl left
[00:20] <mncharity> ok.  STD_red->IR.  at least for say(3).  next, IR->p5.

[00:28] *** lumi joined
[00:31] *** jferrero joined
[00:31] *** lumi left
[00:32] *** lumi joined
[00:38] *** jferrero left
[00:40] *** larsen joined
[00:48] *** LazyJim left
[00:53] <mncharity> say(3) makes it through.

[01:07] *** japhb joined
[01:07] *** japhb left
[01:10] *** kanru joined
[01:18] <pugs_svnbot> r20141 | putter++ | [elf_a] Added IR construction and P5 emitting.  ./elf_a_create.pl -e 'say(3)' makes it from p6 to p5.

[01:18] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20141

[01:19] <lambdabot> Title: Changeset 20141 - Pugs - Trac

[01:19] <mncharity> going to regret the "late night commit" in the morning.  but "early and often".

[01:22] <mncharity> The IR node info needs to be pulled out into a class.  Then give elf_b ir node generation.  And elf_a "class X {...}" IR construction and p5 emitting.  At that point elf_on_STD_red will be caught up with elf_on_rakudo.  Give elf_b p6 versions of elf_a's hand written p5 files.  then incrementally bang on STD_red, the IR and p5 emitting until they compile and run.

[01:24] <mncharity> running late.  good night all &

[01:25] *** mncharity left
[01:25] *** mncharity joined
[01:27] <mncharity> pmurias: sorry I wasn't around much today.   more over the weekend.

[01:27] *** mncharity left
[01:41] *** elmex left
[02:10] *** thoughtpolice left
[02:31] *** larsen left
[02:39] <spinclad> TimToady: S05:1410: s/euro/eutero/  # it buys more lately, after all

[02:43] <spinclad> i'm happy with the spelling 'Exodos', although i wonder then how to spell 'Leviticus', wishing to have a LXX at hand to see.

[02:52] <spinclad> and 'Deuteronomia' is englished, and 'Numeri' latined then englished; so consistency as a guide seems to only point toward tradition.

[02:57] <Juerd> I thought it was Exodus

[03:13] <allbery_b> it is

[03:14] <allbery_b> well, it's שמות but who's counting :)

[03:24] <allbery_b> or are you reaching for transliterations from the Septuagint?

[03:24] <allbery_b> if so, "Leviticus" will be a problem as it's a Latinization of a Hellenization of Hebrew :)

[03:26] <allbery_b> (well, Anglicization of ...)

[03:30] <allbery_b> which is ridiculous as the Hebrew name is ויקרא (va-Yiqra, "and [G-d] called"), and more colloquially תורת כוהנטם (Torat Kohanim, "Torah of the Priests"); the former makes *at least* as much sense as the made-up "Leviticus" and the latter is what "Leviticus" was presumably shooting for (and missing badly)

[03:34] *** wknight8111 is now known as wknight-away

[03:37] <allbery_b> (and if you're serious about figuring out the Greek you can probably find the Septuagint online, try sacred-texts.org for starters)

[03:44] *** Limbic_Region left
[03:48] *** valrke left
[03:55] *** wknight-away left
[04:10] *** [particle] joined
[04:23] *** lisppaste3 joined
[04:53] *** Chillance left
[05:35] *** kanru left
[05:55] *** wknight-away joined
[06:13] *** Alias__ joined
[06:13] *** Zygo left
[06:22] *** BinGOs left
[06:22] *** justatheory left
[07:04] *** FurnaceBoy left
[07:20] *** buu left
[07:22] *** buubot left
[07:50] *** BinGOs joined
[07:59] *** Aankhen`` joined
[08:02] *** wknight-away left
[08:30] *** alc joined
[08:47] *** nothingmuch joined
[08:51] *** buu joined
[08:51] *** buubot joined
[09:55] *** Psyche^ joined
[10:12] *** Patterner left
[10:12] *** Psyche^ is now known as Patterner

[10:23] *** larsen joined
[10:29] *** c9s_ is now known as c9s

[10:33] *** rindolf joined
[10:34] *** larsen left
[11:02] *** luqui joined
[11:13] *** LazyJim joined
[11:24] *** wknight-away joined
[11:39] *** meppl joined
[11:49] *** chris2 joined
[11:57] *** wknight-away left
[12:07] *** wknight-away joined
[12:24] *** rindolf left
[12:44] *** pmurias joined
[12:53] <ting> win 10

[12:59] *** turrepurre joined
[13:04] *** rindolf joined
[13:16] *** ntgrl joined
[13:17] *** ntgrl is now known as integral

[13:20] *** wknight-away left
[13:21] *** Onyxyte joined
[13:31] *** Onyx|Idle joined
[13:39] *** Onyxyte left
[13:39] *** Onyx|Idle is now known as Onyxyte

[13:45] *** wknight-away joined
[13:50] *** Onyxyte left
[13:54] *** eternaleye left
[14:15] *** wknight-away left
[14:18] *** mncharity joined
[14:21] *** FurnaceBoy joined
[14:23] *** FurnaceBoy left
[14:34] *** FurnaceBoy joined
[14:39] *** alc left
[14:48] *** lollix joined
[14:49] *** lollix left
[14:55] *** kanru joined
[15:01] *** wknight-away joined
[15:06] <pmurias> mncharity: hi

[15:07] *** luqui left
[15:07] <pmurias> i wrote a simplistic script which generates a ctags file for STD should i ci it somewhere?

[15:08] <[particle]> yes yes yes

[15:08] <pmurias> where? ;)

[15:10] <[particle]> util/gen_std_tags.pl ??

[15:11] <pmurias> added util/gen_STD_ctags.pl, but can change the name ;)

[15:11] <pugs_svnbot> r20142 | pmurias++ | a simple hack to generate a tags file for STD.pm

[15:11] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20142

[15:11] <lambdabot> Title: Changeset 20142 - Pugs - Trac

[15:12] <[particle]> yay

[15:12] <[particle]> it's good to be home again, if only for two days

[15:13] <pmurias> mncharity: would it be (easier|more fun) working on match2ir if one could just fill in STD.pm {*} actions

[15:14] <pmurias> ?

[15:14] <pmurias> mncharity: meaning should i implement it?

[15:17] *** araujo joined
[15:29] <pugs_svnbot> r20143 | putter++ | [elf_a] Cleaned up elf_a_create and renamed files.  Output a much more terse IR description.

[15:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20143

[15:29] <lambdabot> Title: Changeset 20143 - Pugs - Trac

[15:33] <TimToady> spinclad: I wasn't trying to mix in lxx spellings, it just happened.  :)

[15:33] <[particle]> hey TimToady! how's things?

[15:33] <TimToady> welcome temporarily back

[15:34] <TimToady> much better than a sesequiweek ago

[15:34] <TimToady> *sesqui

[15:34] <[particle]> ah, good news from the doctors with the cameras?

[15:34] <TimToady> well, not done with tests yet

[15:34] <TimToady> but I feel much better after topping up with half a gallon of blood

[15:35] * diakopter has O-

[15:35] <[particle]> camel blood, i hope.

[15:35] <TimToady> ct scan, chest xray, upper endo (with ultrasound!) all negative

[15:35] <TimToady> in a week I'll probably go in for lower endo, joy

[15:36] <diakopter> they can't use valgrind to find the leak, right

[15:36] <[particle]> i'll likely have one of those before year's end

[15:36] <TimToady> but at this point it looks like best bet is some kind of angiodysplasia

[15:36] <[particle]> lovely.

[15:36] <TimToady> which is something like varicose veins on your insides

[15:37] <TimToady> well, my insides, in this case...

[15:37] <[particle]> release the nanobots with lasers on their heads!

[15:37] <TimToady> still several other things it could be too...

[15:38] <TimToady> I'd settle for a sayaka

[15:39] *** smtms left
[15:39] <diakopter> well if the blood isn't pooling somewhere it's got to be leaving somehow...

[15:39] <[particle]> my arthritis is killing me today. can't lift my arms above my shoulders

[15:40] <TimToady> symmetrical?

[15:42] <TimToady> sorry, I shouldn't be trying to play doctor over irc :)

[15:44] <[particle]> yes, it's crohn's arthritis

[15:44] <[particle]> just like rheumatoid (sp?) but without permanent damage

[15:44] <mncharity> pmurias: hi!

[15:45] <[particle]> yesterday it was thumbs, wrists, shoulders, knees, and ankles

[15:46] <[particle]> imagine how much fun it was to shovel snow, drive 2 hours, carry a snowboard, and fly 3 hours

[15:46] <mncharity> pmurias: re STD.pm actions, hmm, there's an idea.

[15:46] <mncharity> though actions would be part of the parse phase, hmm.

[15:48] <mncharity> have you seen elf_a_src/ast_handlers.config ?   the Match nodes are labeled with the rule which generated them, or in the case of some #= foo  , a  rule__foo or something like that.

[15:49] <TimToady> I just have my _REDUCE method attaching the tag currently as a proxy for a rule pointer, since subs in p5 aren't really 1st class objects

[15:49] <mncharity> basically by the time STD_red hands us a Match tree, ... all we have is a match tree.

[15:49] <TimToady> and my current EXPR just looks at /^infix/ on that tag to see if it should pop 2 terms instead of 1

[15:49] <mncharity> :)

[15:50] <TimToady> nounphrase having moved into EXPR, more or less

[15:50] <TimToady> but it's not quite right yet

[15:50] <mncharity> re _REDUCE, yeah, STD_red is just using rule name too, well, the hand written rule name or mutant #= rule name.

[15:51] *** elmex joined
[15:51] <TimToady> and there's something squirrely about prefixes and postfixes that dominate a nearby infix

[15:51] <mncharity> treating #= foo like implicit   $<foo>=[ ... ]

[15:51] *** wknight-away left
[15:51] <TimToady> because the prefix dominates a following infix, and for symmetry a postfix could dominate a preceding infix

[15:52] <TimToady> -$x**$y is the canonical case in existing operators

[15:52] <TimToady> but the reverse of that could hold for a user-defined postfix

[15:52] <TimToady> but a prefix can't dominate to its left, nor a postfix to its right

[15:53] <TimToady> so $x**-$y can't make the - looser than the **

[15:53] <pugs_svnbot> r20144 | putter++ | [elf_a] Now quiet by default (-v gives the old behavior).  And in the absence of -c, now eval()s the p5.

[15:53] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20144

[15:54] <lambdabot> Title: Changeset 20144 - Pugs - Trac

[15:54] <TimToady> and then there's the little case of what do you do if there's both a prefix that dominates what's after and a postfix that dominates what's before...

[15:55] <TimToady> say, for the sake of argument, there were a - postfix that did what - prefix does

[15:55] <TimToady> you can get cool stuff like $x**-$y-**$z

[15:56] <TimToady> which seems a bit bogus

[15:57] <TimToady> not to mention ambiguous

[15:58] <TimToady> the prefix would be trying to turn it into $x**(-($y-**$z)) while the postfix would be trying to do the mirror image

[15:58] <mncharity> in redsix I ended up having separate left and right precedences, inferred from the fixity, because i was just finding it too confusing to try an work directly with both fixity and precedence in the OPP.

[15:59] <mncharity> assoc too, maybe?

[16:00] <mncharity> no, just precedence.

[16:02] <mncharity> plus a "needs an expression on left? on right?"

[16:03] <TimToady> at the moment I just track whether to pop 1 or 2 args, assuming that prefix and postfix are just simple unary by then, but may have to rethink

[16:04] <TimToady> this was a lot simpler before the mathematicians got involved with their -$x**$y   :)

[16:04] <mncharity>  /me looks at $x**-$y-**$z , thinks Acme is going to get some *really* strange stuff.

[16:05] <TimToady> well, that's obviously got to be asymmetrical or illegal

[16:05] <TimToady> but the question remains whether the $x**$y- analog works

[16:05] <TimToady> and means ($x**$y)-

[16:05] <mncharity> re illegal, but it could be a circumfix operator, or... ;)

[16:06] <TimToady> well, if you have prefix:<-> and circumfix:<- -> you're already in a world of hurt even without the postfix:<->

[16:06] <pmurias> TimToady: can't prefix and postfix get handled as part of the term instead of the OPP

[16:06] <pmurias> ?

[16:07] <TimToady> pmurias: that's what I had before

[16:07] <TimToady> (with nounphrase)

[16:07] <TimToady> but it doesn't parse -$x**$y right

[16:07] <TimToady> s/right/"right"/ if rand < .5

[16:08] <TimToady> s/rand/rand()/

[16:09] <TimToady> so the way the mathematicians want it, it needs to be parsed more like 0-$x**$y

[16:09] <TimToady> ignoring the detail that prefix:<-> has a different precedence than infix:<->

[16:11] <TimToady> and I can do that pretty easily in EXPR

[16:11] <TimToady> question is how/whether to apply the same logic to postfixes dominating a preceding infix

[16:12] <[particle]> (didn't (lisp (solve (all (this (with (parens ;)))))))

[16:12] <TimToady> only for prefixes :)

[16:13] <[particle]> the interesting bits of language are where symmetry is broken

[16:14] <mncharity> hi pmurias.  i'm attempting to get elf_a to start running the t/01-sanity/ tests.  then... something?

[16:14] <TimToady> indeed, but it's my job to figure out if the user is going to want the precedence of, say, postfix:<i> to be outside that of infix:<+>

[16:15] <TimToady> so that they can say 1+2i

[16:15] <TimToady> wait, that doesn't want to dominate the +, nevermind

[16:15] <TimToady> but some similar situation

[16:15] <pmurias> mncharity: rehi

[16:15] <TimToady> maybe the user wants listops that go at the end of the list instead of the beginning

[16:16] <TimToady> but postfixes are already syntactically distinguished

[16:16] <TimToady> since the require no whitespace

[16:16] *** ntgrl joined
[16:16] <TimToady> *they

[16:16] *** integral left
[16:16] <pmurias> moving unarry prefix and postfix operators to the top of the precendence tables would "solve" the issue ;)

[16:16] *** ntgrl is now known as integral

[16:17] <TimToady> already the case for postfix, basically

[16:17] <TimToady> I'm just wondering what happens if a user defines a looser postfix

[16:17] <TimToady> such as a hypothetical postfix:<->

[16:17] <[particle]> isn't there room for users to create their own precedence levels?

[16:18] <TimToady> where $x**$y- could mean the same as -$x**$y

[16:18] <[particle]> leave dominating-postfix as an exercise

[16:18] <TimToady> yes, but the question is what do you do next

[16:19] <TimToady> it's trivial to create a postfix:<-> with looser prec than **

[16:19] <TimToady> but will it do anything with that precedence, and if so, what?

[16:22] <pmurias> TimToady: is ** proper mathematical notation?

[16:22] <TimToady> and the crazy thing is that the leftward precedence of a term is specified by a postfix, while the rightward precedence of a term is specified by the prefix

[16:23] <TimToady> pmurias: no, we just have to parse superscripts correctly  :)

[16:23] <TimToady> unfortunately Unicode doesn't have superscripts on superscripts...

[16:24] <TimToady> so it's hard to write $x**$y**$z

[16:27] <TimToady> anyway, ** has been "proper" ever since Fortran

[16:29] <TimToady> and arguably, ** is better huffman coding of a heavy operation than superscripting is

[16:29] <TimToady> so Backus was just fixing math notation  :)

[16:29] *** rindolf left
[16:31] *** elmex left
[16:39] <pugs_svnbot> r20145 | putter++ | [STD_red] show a pretty picture of where the parse error occurred.

[16:39] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20145

[16:39] <lambdabot> Title: Changeset 20145 - Pugs - Trac

[16:41] *** rindolf joined
[16:43] *** jhorwitz joined
[16:43] <pmurias> mncharity: it's possible to run the actions after the parse (they can't affect it of course)

[16:44] <mncharity> math notation regrettably has a great deal to be fixed.  but that's for openmath or mathml or some such.

[16:45] <mncharity> re actions,

[16:48] <mncharity> true.  but one probably doesn't want to write them in ruby and do them inside of STD_red.  so STD_red could include "do action here" tags in the Match tree, and they could be done afterwards, in elf.  providing a match object so the action has the raw material to work with.  ...  which is what we have now. ;)   eg,

[16:49] <mncharity> 'if 3 {4} else {5}' has a Match labeled if__else, which isn't a real rule, but rather the rule if with the #= else  tag.

[16:50] <mncharity> this was the #= thing I mentioned which I'm not sure is the right thing to be doing.  but it does provide a place to hang "actions". :)

[16:51] <TimToady> there's no requirement to hang an action on every tag :)

[16:51] <pmurias> TimToady: heavy operations means used commonly or slow?

[16:52] <TimToady> the {*} is serving also to indicate explicitly where LTM must quit, if it hasn't quit before now (which it usually has)

[16:53] <TimToady> ** is higher order than * in the sense that ** can be defined (roughly) in terms of repeated *

[16:53] <TimToady> and you learn it later in school

[16:53] <TimToady> so "mentally" heavy

[16:54] <pmurias> mncharity: i just wanted to know if it would be more fun filling in STD.pm and having a script extract the actions out

[16:54] <TimToady> and $x**$y tends to do more "violence" to the value than $x*$y, in some sense

[16:55] <TimToady> please do not put actions into STD.pm

[16:55] <TimToady> the main point of {*} is to avoid installing platform dependencies

[17:00] <mncharity> re fun, :) hmm,

[17:01] <pmurias> TimToady: they would be kept in a seperate place

[17:02] <mncharity> prompted by the question, I'm filling in if... and noting it is heavy going.  a combination of the elf infrastructure is still getting fleshed out, plus the kp6-derived IR needs tweaking to mesh with the STD Match tree.

[17:03] <mncharity> so doing it in elf isn't quite fun yet.  hopefully by tomorrow.

[17:03] *** Aankhen`` left
[17:06] <mncharity> re STD, I wonder if it is time to give STD it's own directory?  there's a lot of it src/perl6, plus more in winter_jig/STD, and now a bit in util/, ...  as it becomes the focus of a lot of people/work, it will outgrow being directly in src/perl6/ at some point.

[17:06] <mncharity> *it in

[17:14] <mncharity> ok.  reality correction.  elf_a does 'say(3)'.  but little else.  well, it could do 'class A { has $.x; ... }'.  but it doesn't even parse strings, nor do if(), etc.  and a lot of that will require nontrivial slogging.  so... not yet ready for use.

[17:15] <mncharity> re STD, or just start collecting all the non-TimToady work in a misc/STD/ ?

[17:18] <mncharity> hmm, both <statement> and <statement_control:use> seem to be trying to <eat_terminator>

[17:19] <mncharity> (in STD.pm)

[17:21] *** smtms joined
[17:28] *** Chillance joined
[17:30] *** smtms left
[17:31] *** smtms joined
[17:31] *** chris2 left
[17:31] <pmurias> mncharity: you mean elf_a, or STD_red related slogging?

[17:31] <mncharity> both :/

[17:32] *** elmex joined
[17:32] <mncharity> I'd forgotten the STD_red "big hairy quoted everything" handling was just sketched in, and not yet running.

[17:35] <mncharity>  /me tempted to fake it.  That section is slated for overhaul in STD.pm, and STD_red is doing something rather different anyway... but faking it would be a slippery slope.  sigh.  maybe fake ' ' to get sanity running an then go back to it?

[17:35] <TimToady> yeah, the quoting in STD may be in for some refactoring as well, so I'd fake it for now.

[17:35] *** rindolf left
[17:36] <TimToady> on <eat_terminator>, need to cogitate a bit or two

[17:36] <TimToady> probably will end up deleting the call in use and no

[17:36] <mncharity> ok

[17:37] <TimToady> since eat_terminator is supposed to handle the need for ; when you stack to statement_control on the same line

[17:38] <TimToady> since foo {...}; bar {...} requires the semi

[17:38] <TimToady> and the use/no calls probably predate that decision

[17:38] <TimToady> but that's just gut feeling, not thotthru

[17:39] <TimToady> but in any case <EXPR>? should be greedy enough to get us to the ';' anyway

[17:40] <TimToady> so we can rely on statement's call to e_t

[17:41] <TimToady> is a bit strange to reduce it (and having side effects!) before eating the semi, but seems benign, and you have to do that anyway if there's no semi

[17:44] <TimToady> 'course, arguably, that means that eat_terminator doesn't need to be its own rule

[17:44] <TimToady> however, it's probably good to make it available for user-derived grammars

[17:46] <TimToady> (for similar reasons I've been tempted to make all the regex matching rules into multis, but I keep resisting that temptation. :)

[17:46] <mncharity> lol :)

[17:47] <TimToady> I did rename all the regex rules that have names that are too long though...

[17:48] <TimToady> instead of all the ordered/unorderer mumbojumbo, it's now regex_{first,every,any,all}

[17:48] <TimToady> for || && | & respectively

[17:48] <mncharity> ah, neat

[17:49] <TimToady> should probably check in my current STD et al, though it might regress some things

[17:49] <TimToady> but since I'm really the only one running it, that's okay :)

[17:49] <TimToady> break early, break often...

[17:49] <mncharity> STD_red is so out of sync at this point, further STD.pm changes aren't a problem. :)

[17:50] <mncharity> though maybe I'll snarf a copy for STD_red.  It's not _that_ out of sync.

[17:50] <TimToady> well, you could at least glare at the diffs

[17:50] <pugs_svnbot> r20146 | lwall++ | [STD et al.] snapshot of current state

[17:50] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20146

[17:50] <lambdabot> Title: Changeset 20146 - Pugs - Trac

[17:51] <mncharity> lunch time, but, could you give me a hint how 'say 3' parses?

[17:51] <TimToady> term:listop

[17:51] <mncharity> looking....

[17:53] <mncharity> ah, ok.  bbl.  will attempt sanity, with fake quotes, after lunch and errands.

[17:53] <mncharity> thanks

[17:53] <TimToady> walk &

[18:00] *** b_jonas joined
[18:05] *** meteorjay joined
[18:18] *** Psyche^ joined
[18:18] *** Patterner left
[18:18] *** Psyche^ is now known as Patterner

[18:20] *** jferrero joined
[18:50] *** eternaleye joined
[18:56] *** rindolf joined
[19:09] <spinclad> TimToady: for the record, Juerd++ first noticed Exodos.

[19:20] <TimToady> I've been reading too much greek lately, obvously...

[19:20] *** elmex left
[19:22] *** jferrero left
[19:22] *** jhorwitz left
[19:23] * spinclad too... gimme that old time geometria

[19:23] <TimToady> ὁδὸς is one of those weird words that is structurally masculine but actually feminine...

[19:25] *** jferrero joined
[19:26] *** alester joined
[19:27] <TimToady> well, it's actually neither...

[19:32] <spinclad> neither?   now i need a good input method cause i want to mangle something from memory... <isé 'é 'odos anw katw>... looks feminine to me

[19:33] <allbery_b> heh

[19:34] <TimToady> you want rough breathings there, not smooth

[19:35] <spinclad> true, s/'/`/, i was leaving them off for smooth

[19:35] <spinclad> as an input method, it's a real mangle

[19:35] <TimToady> but yes, ἡ ὁδὸς 

[19:37] <TimToady> when a real masc noun would take ὁ instead of ἡ as an article

[19:41] <TimToady> but yeah, no decent greek input method here either...

[19:41] <TimToady> and likely to be modern greek in any case

[19:41] <TimToady> (no pun intended)

[19:43] <spinclad> drat.  here i was hoping you would suggest one in passing.  so this has been cut and paste, or ...?

[19:43] <spinclad> s/would/could/

[19:45] <TimToady> yes, just cnp

[19:47] *** cognominal_ joined
[19:48] <spinclad> [mock-translation from before: to an élekron, the way to the anode and the kathode are the same]

[19:49] <spinclad> s/élekron/élektron/  # step on my own joke

[19:57] <TimToady> there's some discussion at http://mail.nl.linux.org/linux-utf8/2006-01/msg00019.html

[19:57] <lambdabot> Title: Re: Experiments with classical Greek keyboard input

[19:57] <TimToady> but looks like an overall mess

[19:59] <spinclad> thanks, i take a look.  can't be much worse than pali (paa.li)

[20:01] <TimToady> now if only I had a geek input method...

[20:01] <spinclad> *i'll  # coffeee!!

[20:02] <spinclad> *psi*

[20:02] <TimToady> most geeks already have an input method for coffee

[20:04] <spinclad> i go exercise it now then  &

[20:28] *** lee__ joined
[21:00] *** meteorjay left
[21:01] *** alester left
[21:48] *** LazyJim left
[22:10] *** jferrero left
[22:10] *** jferrero joined
[22:10] <mncharity> TimToady: in term:listop, and <nofat> <arglist> , the <!before \w> of <nofat> rejects an arglist beginning with 3?

[22:12] <b_jonas> hmm, is <nofat> something stolen from m?mix ?

[22:12] *** jferrero left
[22:14] <mncharity> hmm, no idea.

[22:14] *** pmurias left
[22:14] <b_jonas> (the world's first polyunsaturated computer)

[22:15] <b_jonas> (100% natural, too)

[22:29] *** justatheory joined
[22:44] *** smtms_ joined
[22:51] <TimToady> mncharity: fixed, listop shouldn't have have traversed \s before <nofat>

[22:51] <pugs_svnbot> r20147 | lwall++ | [STD] various whitespace snafus

[22:51] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20147

[22:51] <lambdabot> Title: Changeset 20147 - Pugs - Trac

[22:52] <TimToady> the <!before \s> is only to prevent <nofat> from matching in the middle of an identifier

[22:52] <TimToady> \w rather

[22:54] <mncharity> ah, ok.  thanks

[22:54] *** smtms left
[22:55] *** smtms_ is now known as smtms

[23:02] *** rindolf left
[23:15] *** Limbic_Region joined
[23:32] *** larsen joined
[23:45] *** xd joined
[23:46] *** REPLeffect joined
[23:48] <pugs_svnbot> r20148 | putter++ | [STD_red] +fake quote parsing; +term:listop Match; ignore nounphrase;  ws tweaks following r20147.

[23:48] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20148

[23:49] <lambdabot> Title: Changeset 20148 - Pugs - Trac

[23:52] <mncharity> prove -e ./elf_a ../../../t/01-sanity/01-tap.t

[23:52] <pugs_svnbot> r20149 | putter++ | [elf_a] "say 3" and "say 'e'" work.  t/01-sanity/01-tap.t passes.  There's also an unfinished attempt at if().

[23:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20149

[23:52] <lambdabot> Title: Changeset 20149 - Pugs - Trac

[23:52] <mncharity> a first test pass. :)  all the rest fail of course.

[23:55] <mncharity> 0.3 sec runtime.

