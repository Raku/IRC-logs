[00:10] *** ruz joined
[00:22] *** sri_work left
[00:23] *** simcop2387 left
[00:26] *** simcop2387 joined
[00:30] <pugs_svn> r19697 | cosimo++ | [t] Test suite refactoring.

[00:30] <pugs_svn> r19697 | cosimo++ | Moved sign-sqrt math functions under t/spec/S29-num

[00:30] <pugs_svn> r19697 | cosimo++ | Applied slight fugdeification of pod sections and

[00:30] <pugs_svn> r19697 | cosimo++ | removed redundant main::is_approx() test function.

[00:32] *** justatheory left
[00:32] <cosimo_> almost all existing S29 tests are now moved to t/spec ... 

[00:32] *** justatheory joined
[00:34] <TimToady> yay!

[00:35] <cosimo_> of course, more tests are needed to cover all of S29, ... :-)

[00:36] <TimToady> I need to convince someone to make a specsmoke target for rakudo...

[00:37] <cosimo_> would be useful

[00:37] <TimToady> I think we should probably have 40,000 tests by the time 6.0 comes out

[00:39] <cosimo_> 40k is a looong way, but adding 1 test is 1 less to go. :-)

[00:41] <TimToady> well, I'd be happy if anything ran all the tests we have now  :)

[00:41] <TimToady> (except for the incorrect ones, of course :)

[00:42] <cosimo_> I was trying yesterday to run single test scripts

[00:42] <TimToady> using prove6?

[00:42] <cosimo_> ehm

[00:42] <cosimo_> no

[00:43] <cosimo_> manually with t/harness

[00:43] <TimToady> main problem with prove6 is I think it has to run in top-level dir

[00:44] <TimToady> but maybe that has been fixed

[00:44] <TimToady> oh, t/harness is parrotland

[00:45] <cosimo_> yes, maybe it's not the proper way of doing

[00:45] <TimToady> perhaps t/harness should be taught about fudge

[00:46] <cosimo_> is it possible to run prove6 without pugs?

[00:46] <TimToady> oh, perl6/t/harness is already taught

[00:46] <TimToady> looks like you have to use --fudge

[00:46] <cosimo_> yep, sorry I was referring to parrot/languages/perl6/t/harness

[00:47] <TimToady> I mostly just "make spectest" or run the *.rakudo file directly

[00:48] <cosimo_> spectest doesn't work on win32. I hadn't yet time to look at that.

[00:50] <cosimo_> One of the things I want to do is

[00:50] <cosimo_> to try to run single tests (ex.: S29-trig/e.t) which currently fail for me

[00:51] <cosimo_> and try to implement/fix the missing/broken functions.

[00:51] <cosimo_> I'd like to learn more about parrot and perl6 grammar/pir

[00:51] <TimToady> I noticed that rakudo doesn't seem to do eval yet, through try seems to work most of the time

[00:52] <TimToady> todo() required two arguments till earlier today, and fudge only gives the reason argument

[00:52] <TimToady> since it marks each test individually

[00:53] <TimToady> and it looks like the only way to have default arguments is via multi

[00:53] * cosimo_ can now properly do a 'make spectest'...

[00:56] *** njbartlett left
[01:00] <cosimo_> Is #?rakudo todo 'notimplemented'  a correct syntax? Probably I should use skip?

[01:01] *** devogon left
[01:04] <TimToady> todo should work now, as long as you have the most recent Test.pm

[01:04] <TimToady> if it blows up the parse, use skip

[01:04] <TimToady> since eval doesn't work yet

[01:05] <TimToady> try works at least some of the time, but doesn't help with parsefails

[01:09] <meppl> good night

[01:10] *** njbartlett joined
[01:10] <cosimo_> meppl: night

[01:14] <meppl> ;)

[01:16] <cosimo_> TimToady: would you mind looking at a fudge "patch"? seems to correct the 'todo' problem I've seen

[01:18] <cosimo_> This one -> http://nopaste.ch/0a4ccce41a6efab.html

[01:19] <cosimo_> or probably I have totally missed the point... :-)

[01:23] <TimToady> the point of the if is that there might be a sequence of tests interspersed with non-test statements, and we only want to mark the test statements, which are recognized by putting is/ok/etc at the beginning of the line

[01:24] <cosimo_> mmh, let me recheck. I'm trying with S29-str\index.t

[01:25] <TimToady> looks like it's working okay to me

[01:26] *** meppl left
[01:27] <cosimo_> works for me, even though vim doesn't understand `;#' without spaces

[01:28] <cosimo_> you mean that it works, but with or without the change?

[01:29] <TimToady> I mean fudge looks like it's doing the right thing.  my perl6 blows up on the first index call

[01:29] <TimToady> without the change

[01:30] <TimToady> the correct 2 tests are commented out

[01:30] <TimToady> so the $IS is recognizing the "is" on each line

[01:32] <TimToady> suppose some test had "say '# comment'" in between those lines.   It would mark the say rather than the 2nd is with your change

[01:34] <cosimo_> I'm too tired to go on, of course... :-) Going to sleep. Thanks for your support!

[01:34] <TimToady> night!

[01:34] <cosimo_> Tomorrow is another day!

[01:35] *** japhb joined
[01:37] *** cosimo_ left
[02:05] *** dlocaus joined
[02:05] <dlocaus> .

[02:05] *** dlocaus left
[02:11] <TimToady> decommuting &

[02:11] *** thestarslookdown joined
[02:34] *** Auzon joined
[03:00] *** _newbie_ joined
[03:00] *** _newbie_ left
[03:01] *** jeffreykegler joined
[03:04] *** jeffreykegler left
[03:09] *** Limbic_Region left
[03:19] *** thestarslookdown left
[03:34] *** wtgee joined
[03:52] *** Kattana left
[04:11] *** SubStack joined
[04:11] *** chacha_chaudhry joined
[04:12] *** chaoslawful joined
[04:13] *** chaoslawful left
[04:14] *** chaoslawful joined
[04:47] *** mncharity joined
[04:54] *** wtgee left
[04:58] <mncharity> late night rehi.  btw, if anyone would like to bang on the ruby backend, you would be most welcome.  rather non-Ofun to work solo.

[05:02] *** Ashizawa joined
[05:14] *** Ashizawa_ joined
[05:18] *** Ashizawa_ left
[05:23] <pugs_svn> r19698 | putter++ | [kp6] ruby backend: Emit/Ruby5Regex.pm created, copied from Emit/Perl5Regex.pm.

[05:25] *** Ashizawa_ joined
[05:27] <pugs_svn> r19699 | putter++ | [kp6] fix name: Ruby5Regex.pm -> Emit/RubyRegex.pm

[05:29] *** thestarslookdown joined
[05:35] *** Ashizawa left
[05:46] *** chaoslawful left
[06:04] *** manfred_ joined
[06:07] *** jjore joined
[06:11] *** thestarslookdown left
[06:12] <mncharity> I'm puzzling over kp6's regex support.  It looks like main options are Visitor/Token.pm and Visitor/Emit/Perl5Regex.pm.  Yes?  Or have I missed something?  The first appears to be used (script/kp6) by default, but lacks the emit_foo support for alternate backends which the second provides.

[06:15] <mncharity> They both seem an easy transliteration.  They seem to implement a very simple subset of regex?  Which should I be using?  Are both believe to support parsing of kp6?  Is either the focus of future development?

[06:15] <avar> they both work, Token is the p6 one and p5rx uses the p5 engine

[06:18] <mncharity> I'm a bit surprised by how minimal the regex engine implementations seem to be... ^.^

[06:18] <mncharity> avar: ah, ok.  let's see..

[06:21] <mncharity> hmm, so if Token is just another p6 part of kp6, why am I getting 'emit_ruby not found for Token' errors in -Cruby?

[06:27] *** cspencer joined
[06:28] <Auzon> pugs: 10 % 2

[06:28] <exp_evalbot> RESULT[0]

[06:29] <Auzon> pugs: 5.5 % 1

[06:29] <exp_evalbot> RESULT[1/2]

[06:29] <Auzon> cute.

[06:31] *** manfred_ left
[06:36] <mncharity> Ok.  I thought my task for tonight was going to be starting support for Token.  But it sounds like that should not be necessary.  That Token should *just work* by default.  In which case I note it doesn't.   script/kp6 -Cruby 'grammar A{token b{c}};' fails with Can't locate object method "emit_ruby" via package "Token" at compiled/perl5-kp6-mp6/lib/KindaPerl6/Visitor/Emit/Ruby.pm line 298.

[06:37] <mncharity> but -Cperl5 works, suggesting there's an implicit emit_perl5 somewhere?

[06:38] *** Ashizawa joined
[06:40] <mncharity> An Emit/RubyRegexp might be higher performance than using Token.pm.  But the current objective is 'get to bootstrap as soon as possible', so if Token.pm should be working, then a RubyRegexp is a task for post-bootstrap.

[06:41] *** Ashizawa left
[06:41] *** Ashizawa_ left
[06:44] <mncharity> avar: regards your earlier comments about Pad and common backend code, perhaps there are really two flavors of bootstrap.  Compiler bootstrap, where p6 code becomes able to parse itself, generate an ast, and emit to a runtime *not* included in the bootstrap.  And a runtime bootstrap, where the runtime is mostly implemented in p6, with a very small non-p6 footprint.

[06:44] <mncharity> Pad and the common backend code would be the latter?   Does that make sense?

[06:45] *** pen1 left
[06:52] *** chacha_chaudhry left
[06:53] *** cspencer left
[07:00] *** devogon joined
[07:01] <mncharity> ah well.  I'm going to punt for the evening, pending clarification from kp6 folks.  Which may seem rather odd.  But I've been defining my scope to exclude kp6 stuff as much as possible, delegating such work, in part as a reality check on there being people who care about any of this.

[07:07] <mncharity> Faster kp6 doesn't matter if kp6 isn't critical path to getting p6.  Creating a ruby backend may simply not make sense.  Hacking time, like life, is precious and limited.  With things like OLPC where it can have a clear and immediate impact on peoples' lives.  So if anyone doesn't think this a useful exercise, please, I'd appreciate hearing about it.  Repeatedly. :)

[07:08] <mncharity> g'night all :) &

[07:08] <Auzon> night ;0

[07:08] <Auzon> ;)

[07:10] <mncharity> lol

[07:10] *** mncharity left
[07:34] *** manfred joined
[07:42] *** Khisanth left
[07:56] *** lyokato_ joined
[07:57] *** Khisanth joined
[08:03] *** Aankhen`` joined
[08:41] *** meppuru joined
[09:06] *** iblechbot joined
[09:08] *** pmurias joined
[09:36] *** zf8 joined
[09:36] *** zf8 left
[09:41] <pugs_svn> r19700 | pmurias++ | [kp6-ruby] added Token to the default visitor sequence

[09:57] *** iblechbot left
[10:01] *** ludan left
[10:05] *** zf8 joined
[10:05] *** zf8 left
[10:11] *** rindolf joined
[10:15] *** mj41__ joined
[10:22] *** jwest- joined
[10:24] *** blindfish joined
[10:25] *** barney joined
[10:34] *** mj41 left
[10:58] *** iblechbot joined
[11:18] *** manfred left
[11:32] *** jjore left
[11:34] *** blindfish left
[11:43] *** chris2_ joined
[11:45] *** ruoso joined
[11:45] *** manfred joined
[11:46] *** chris2_ is now known as chris2

[12:01] *** rindolf left
[12:13] *** manfred left
[12:17] *** cosimo_ joined
[12:20] *** ispy_ joined
[12:31] *** zf8 joined
[12:31] *** zf8 left
[12:33] <spinclad> @tell mncharity debian doesn't seem to have ruby 1.9 at all, only 1.8 (at least on etch, lenny, sid).  how stable is 1.9 these days? -- it sounds like it was full of bleeding edges in redsix times.

[12:33] <lambdabot> Consider it noted.

[12:37] <pugs_svn> r19701 | cosimo++ | [t] Test suite refactoring.

[12:37] <pugs_svn> r19701 | cosimo++ | Moved undef,undefine tests under t/spec/S29-scalar

[12:38] <pugs_svn> r19702 | cosimo++ | [t] Test suite: refactored some operators/numify.t tests

[12:38] <pugs_svn> r19702 | cosimo++ | under S29-num/int.t

[12:42] *** jovs joined
[12:42] *** jovs left
[12:47] <pugs_svn> r19703 | cosimo++ | [t] Refactored cmp tests under t/spec/S29-any

[12:49] <pugs_svn> r19704 | cosimo++ | Fixed typos

[12:49] *** lyokato_ left
[12:51] <agentzh> cosimo_: thanks for your work on test suite refactoring :)

[12:55] <cosimo_> agentzh: my pleasure. I'm doing that to get involved in the project and learn along the way

[12:56] <agentzh> cosimo_: i used to do exactly the same thing one and a half year ago for exactly the same reason ;)

[12:57] <agentzh> cosimo_: then i got distracted to work on smartlinks.pl and other things ;)

[12:58] <cosimo_> I'm happy to think that this is *also* a way to speed up perl6 1.0 release :-)

[12:58] <cosimo_> I meant: I *like* to think

[12:58] <agentzh> *nod*

[12:59] <cosimo_> Not that it is true, of course...

[12:59] <cosimo_> :-)

[12:59] <agentzh> in fact it *is* ;)

[13:01] <agentzh> one of the biggest problems i was facing was how to verify the newly added tests.

[13:01] <agentzh> in those days, audreyt was very responsive and can hack in features so that i can test the tests by "running" them ;)

[13:01] <agentzh> *could

[13:11] *** manfred joined
[13:16] *** bphillip2 joined
[13:21] *** frodo72 joined
[13:21] *** frodo72 is now known as poletti

[13:22] *** riffraff joined
[13:23] <riffraff> hi

[13:23] *** poletti left
[13:24] *** njbartlett left
[13:24] *** frodo72 joined
[13:25] *** frodo72 is now known as poletti

[13:26] <cosimo_> hi!

[13:27] <moritz_> good localtime() all

[13:27] <pmurias> hi

[13:31] *** poletti is now known as polettix

[13:32] *** bphillip1 left
[13:37] *** polettix left
[13:38] *** polettix joined
[13:39] *** cosimo_ left
[13:39] *** rindolf joined
[13:42] *** polettix left
[13:43] *** cosimo_ joined
[13:43] *** polettix joined
[13:52] *** cosimo_ left
[13:54] *** IllvilJa left
[14:06] *** [particle] left
[14:25] *** drrho joined
[14:35] *** araujo left
[14:50] *** manfred left
[14:51] *** meppuru left
[14:53] *** meppuru joined
[14:56] *** meppuru left
[15:00] *** meppuru joined
[15:03] *** jwest- left
[15:14] *** sri_work joined
[15:16] *** cspencer joined
[15:24] *** rindolf left
[15:36] *** jferrero left
[16:02] *** meppuru left
[16:03] *** meppuru joined
[16:05] *** riffraff left
[16:11] *** manfred joined
[16:22] *** xinming_ joined
[16:30] *** barney left
[16:31] *** cspencer left
[16:32] *** polettix left
[16:37] *** cspencer joined
[16:39] *** xinming left
[16:56] *** cspencer left
[17:00] <cj> hihi

[17:01] <cj> pmurias: hi ho

[17:02] <cj> if I wanted to make a kp6 IL emitter, what should I get familiar with?  the p5 emitter, probably... but I tried reading the p5 emitter, and I was very confused :)

[17:23] *** wtgee joined
[17:27] *** njbartlett joined
[17:42] *** meppel-san joined
[17:57] *** zf8 joined
[17:57] *** zf8 left
[17:59] *** cmarcelo joined
[18:00] *** meppuru left
[18:02] *** sri_work left
[18:02] *** sri_work joined
[18:03] *** meppel-san is now known as meppl

[18:23] *** iblechbot left
[18:33] *** pmurias left
[18:35] *** pmurias joined
[18:39] *** jjore joined
[18:41] *** Woody4286 joined
[18:42] *** meteorjay left
[18:48] *** Limbic_Region joined
[18:49] *** meteorjay joined
[18:49] *** simcop2387 left
[18:50] *** simcop2387 joined
[18:52] *** simcop2387 left
[18:53] *** simcop2387 joined
[19:09] *** renormalist joined
[19:15] *** drrho left
[19:22] *** iblechbot joined
[19:28] *** IllvilJa joined
[19:42] *** thoughtpolice joined
[19:56] *** cspencer joined
[20:05] *** cspencer_ joined
[20:09] *** IllvilJa left
[20:12] <cj> does anyone have docs on the code in this directory?

[20:12] <cj> http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/src/KindaPerl6/Visitor/Emit/

[20:12] <lambdabot> Title: Revision 19704: /v6/v6-KindaPerl6/src/KindaPerl6/Visitor/Emit, http://tinyurl.com/ynqqq3

[20:15] *** cspencer left
[20:22] *** manfred left
[20:23] *** IllvilJa joined
[20:24] *** chris2 left
[20:32] *** chris2 joined
[20:41] *** araujo joined
[21:07] *** BinGOs left
[21:12] *** BinGOs joined
[21:15] <pmurias> cj: docs/ruby_backend.txt

[21:19] *** Aankhen`` left
[21:23] <pmurias> cj: if you have any questions ask

[21:34] <pugs_svn> r19705 | cosimo++ | [t] Test suite refactoring

[21:34] <pugs_svn> r19705 | cosimo++ | Moved pugs-specific system() tests under t/spec/S29-os

[21:34] <pugs_svn> r19705 | cosimo++ | Most likely these tests are not relevant (or might be

[21:34] <pugs_svn> r19705 | cosimo++ | modified for rakudo)...

[21:35] <cj> pmurias: what is AST, and are there any docs on it?

[21:40] <pugs_svn> r19706 | cosimo++ | [t] Test suite: refactored `eqv' tests under S29-any/eqv.t

[21:43] *** cspencer_ left
[21:45] *** DarkWolf84 joined
[21:58] <pmurias> cj: src/KindaPerl6/Ast.pm

[21:58] <pmurias> you can try script/kp6 -Cast on a piece of code to see what it compiles to

[22:00] *** ofer0 is now known as ofer

[22:00] *** cosimo_ joined
[22:04] <cosimo_> hi there!

[22:08] *** cspencer_ joined
[22:11] *** kst joined
[22:12] *** cspencer_ left
[22:16] <pmurias> cosimo_: hi

[22:17] *** jferrero joined
[22:18] <pmurias> cj: AST is Abstract Syntax Tree, the representation of code as a data structure

[22:26] <pugs_svn> r19707 | cosimo++ | [t] Test suite refactoring.

[22:26] <pugs_svn> r19707 | cosimo++ | Moved builtins/type_declarations.t under t/spec/S29-type.

[22:26] <pugs_svn> r19707 | cosimo++ | Don't know if it's really correct, but we can change it later.

[22:37] *** pmurias left
[22:59] *** meppl left
[23:00] *** meppl joined
[23:03] *** chris2 left
[23:25] *** iblechbot left
[23:38] *** cosimo_ left
[23:40] *** cosimo_ joined
[23:43] *** kingkongrevenge joined
[23:44] *** ofer left
[23:50] <cj> hurm... anyone know what my svn username is?  /me checks the AUTHORS file log

[23:56] *** cosimo_ left
