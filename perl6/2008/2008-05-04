[00:04] *** eternaleye joined
[00:07] <spinclad> it looks likely that it would impose numeric context on both sides, ie. try to interpret the strings as numbers.

[00:17] <Eevee> I suppose that's really the question then

[00:17] <Eevee> will strings still automatically cast to numbers

[00:22] <TimToady> it depends simply on how the default infix:<->(Any $x, Any $y) is written

[00:23] <TimToady> unless someone explicitly writes infix:<->(Str $x, Str $y)

[00:24] <TimToady> at minimum, you'll get a couple of warnings out of it

[00:24] <Eevee> well, would hope so

[00:24] <Eevee> just wonder if they'd be fatal or not

[00:25] <Eevee> I can't imagine where trying to subtract "apple" is what someone wants

[00:25] <TimToady> we're trying to avoid fatals because we want to be parallelism friendly

[00:25] <TimToady> so more likely is to return an unthrown exception

[00:26] <TimToady> if you're hypersubtracting two arrays, you don't want to blow up everything just because of a bad apple or two

[00:26] * Eevee groan

[00:26] <[particle1> Failure++

[00:26] *** [particle1 is now known as [particle]

[00:26] <TimToady> what we have here is Failure to communicte. :)

[00:27] <TimToady> *communicate even...

[00:28] <Eevee> well

[00:29] <Eevee> damn, that sucks both ways

[00:29] <Eevee> if it's fatal, I just lost the entire operation

[00:30] <Eevee> if it's not, I have to either loop through both beforehand and error-check or loop through the result and look for a nonresult  (or forget to do anything and have the exception floating around until who knows when)

[00:32] *** justatheory left
[00:33] <Auzon> Either way, you need to be sure that your array doesn't have any strings in it if you're going to subtract.

[00:34] <TimToady> you're probably going to do some kind of reduce operation at some point, and you just use one that dispatches to a Failure case

[00:35] <TimToady> and that can determinate policy

[01:14] *** kanru left
[01:15] <obra> TimToady: I've been hacking at MAD a bit. Would you be ok with everything getting shifted into packages under MAD::?

[01:16] *** pbuetow left
[01:22] *** BinGOs_ joined
[01:27] *** BinGOs left
[01:36] *** BinGOs_ left
[01:55] <TimToady> obra: is fine by me, as long as it's being maintained

[01:56] *** pascaldamian2 left
[01:59] <mncharity> backlogging... laughing...

[01:59] <mncharity> "apples" - "oranges"

[02:00] <mncharity> I guess that should be ﻿"apples" <=> "oranges"

[02:00] <TimToady> now one wishes to make a pun on Orange Free State...

[02:00] <mncharity> oyyyy

[02:02] <mncharity> Hmm.  "The Perl 6 Joke Book"...

[02:02] <mncharity> maybe someone should start a file...

[02:03] <Tene> I already have one.  ~/irclogs/freenode/#perl6.*

[02:04] <mncharity> looking...

[02:05] <mncharity> oh, joke.  got it.  didn't realize there was a ... .  oh.  joke.  got it... maybe

[02:05] <mncharity> ;)

[02:05] *** justatheory joined
[02:08] <mncharity> ok, don't get it.  explain?

[02:10] <Auzon> All his logs are The Perl 6 Joke Book

[02:10] * mncharity not psyched to hack STD_red this evening. :/

[02:11] <allbery_b> for some reason I thought TimToady said that

[02:11] <allbery_b> (about irc logs)

[02:11] * TimToady wonders if irc is short for "I recall correctly"

[02:13] <mncharity> finish sync'ing std.rb; cross fingers; attempt parse of "most of" t/; debug; try again; achieve "finally have a second (non-pugs) parser for t/", one willing to talk about objects.  fork elf_f.  attack tests.  smoking...

[02:14] <TimToady> I think STD5 is getting pretty close to functional

[02:14] <mncharity> :) !

[02:15] <TimToady> was astounded to discover that tre doesn't match "\n" against [\n\f]

[02:15] <Auzon> STD5 is the Perl 5 translation of STD.pm?

[02:15] <TimToady> in particular, it's the *automated* translation

[02:15] <mncharity> \n\r?

[02:15] <obra> TimToady: I'm trying to get MAD to the point where it will actually be run as part of the 5.10 tests by default

[02:15] <TimToady> no, was trying to match \v

[02:16] <mncharity> oh, [\n\f]   eeep

[02:16] <obra> "force others to maintain it through trickery"

[02:16] <TimToady> getting all the ws, unv, vws rules tidy is a pain if you're trying to do LTM right

[02:16] <TimToady> well, there are some unicode chars in there too

[02:17] <mncharity> ah

[02:17] <TimToady> but it's really hard to make much progress parsing Perl if you can't recognize vertical whitespace...

[02:17] <TimToady> obra++

[02:17] <TimToady> *obra++

[02:18] <mncharity> re pain, yeah.  hmm.  /me wonders about implication for maintenance and modification...

[02:18] <TimToady> sorry, C joke...

[02:18] <mncharity> specifically, a C ++ joke.

[02:18] <TimToady> rofl

[02:19] <obra> *snicker*

[02:19] <Eevee> ha

[02:19] <mncharity> :)

[02:19] <TimToady> well, the main point of STD5 is to work through all the implications of real LTM

[02:19] <TimToady> and specifically autogenerated LTM

[02:19] * obra is trying to decide what the right thing to do about the XML::Parser dependency is

[02:20] <mncharity> re point, nod

[02:20] <TimToady> MAD doesn't have to spit out XML, it only has to spit out something recognizable by nomad, or whatever lib it's gotten itself turned into

[02:20] <TimToady> so while I can cheat to some extent, I often choose not to

[02:21] <TimToady> last night and this morning I hacked (hopefully correct) longest-token backoff into the lexer

[02:21] <TimToady> so we should be able to put back the commented rules that start with <ident> pretty soon

[02:21] <TimToady> assuming we don't want to leave it the way it is for performance

[02:22] <TimToady> should probably be special casing for ident tokens anyway

[02:22] <TimToady> but that's just an optimization

[02:22] * obra nods

[02:23] <mncharity> re put back, np.  one of the advantages of the otherwise painful manual decoupling of STD_red from STD.pm is I've just kept them in.

[02:23] <TimToady> main thing is to preserve correct semantics, which probably means I should break apart term:name now just to force the issue

[02:23] <obra> I don't actually have a huge issue with the xml-as-metaformat. It's more of a "the existing Nomad side of things would require refactoring to not use XML::Parser."

[02:23] <obra> But cheating and creating a baby-mad-xml parser seems plausible

[02:24] <TimToady> well, if I'd done it a few months later I'd probably have tried to use yaml instead

[02:24] * obra nods

[02:24] <mncharity> re XML, I note my startlement at the poor performance of yaml (hmm, was it just ruby's, p5, or both (syck)).  if performance matters, might consider a  foo(bar(...,"...",3,...),hee(...))  function form which can just be eval'ed.

[02:24] <TimToady> but yaml has its own issues...

[02:25] *** obk joined
[02:25] <TimToady> that could also be made to work

[02:25] <TimToady> and has a better chance of passing odd characters that upset xml/yaml

[02:26] <mncharity> oh yeah.  that, and other "interesting" little bugs.

[02:27] <obra> Yep. I sent a patch to p5p today for the first of those.

[02:27] <obra> First (two lines of) C I've written in years.

[02:28] <mncharity> it seems clear no one is slamming syck with large volumes of generated end-to-end tests.

[02:29] <mncharity> *yet

[02:29] *** obk left
[02:29] <TimToady> well, not with unicode in it.  :)

[02:31] <obra> :)

[02:31] * obra mails off a 400k diff to p5p

[02:31] <mncharity> even non-unicode.  I'm getting fuzzy on the details, but there was the "if the field value is string x, then let's change the field name..."

[02:31] <mncharity> "﻿(two lines of) C"... ﻿"400k diff"...

[02:31] * mncharity thinks "line wrapping"

[02:35] * TimToady thinks "tab expansion"

[02:36] <mncharity> oo, good one :)

[02:36] <TimToady> but probably just mostly Perl, not C

[02:37] *** justatheory left
[02:37] <mncharity> sent/sending implies to different patches, but i was slow to notice that...

[02:37] <mncharity> *two even

[02:37] <mncharity> one would be odd

[02:38] <TimToady> it's the parody bit

[02:39] <mncharity> EECC

[02:40] <mncharity> hmm.  EECC!

[02:40] <mncharity> ok.  let's see... focus...

[02:40] <obra> Ah. a nice tidy 57k once compressed

[02:41] <TimToady> that's cheating

[02:42] <TimToady> though probably a much better measure of actual information content

[02:42] <[particle]> ...as if toke.c isn't compressed.

[02:42] <mncharity> if programmer productivity is very roughly constant in lines of code... could you write the compressed form and be 10x more productive?

[02:42] <[particle]> off &

[02:42] <Auzon> See you, [particle]

[02:43] <Auzon> TimToady: Interesting idea. Compressed LOC as a new metric?

[02:43] <TimToady> well of course, that's why my editor is cat >/dev/kmem

[02:43] <TimToady> why do you think it always says "decompressing" when you're booting up linux?

[02:44] * mncharity is somewhat curious if # vi /dev/kmem  works... but not enough to try

[02:44] <obra> note that I moved every file in mad/ to saner locales.

[02:44] <obra> so really, I probably only touched about 40 loc non-programatically

[02:44] <TimToady> Auzon: yes, but then you'll get comments filled with random passages from classic books

[02:44] <TimToady> oh, wait, I already do that...

[02:45] <mncharity> lol

[02:45] <Auzon> Eh. Most code metrics are flawed.

[02:45] <Auzon> If not all.

[02:45] <TimToady> that's because most code is flawed, I imagine

[02:45] <Auzon> Well, to assess productivity :P

[02:45] <mncharity> I'd forgotten about the pugs source quotes/poems.  That was fun.

[02:46] * obra was pleased. clkao and I went for a week's hackathon. sloccount told us we'd worked for 9 months and it had cost $150,000 to create our output

[02:46] <mncharity> ﻿Auzon: smaller better?

[02:47] <Auzon> That's my opinion on code, yes.

[02:47] <mncharity> "dramatically improve productivity... remove macros from your language..."

[02:47] <mncharity> "Java's secrets to productivity..."

[02:47] <mncharity> beans!

[02:49] <mncharity> I was kind of disturbed the next morning when I realized I had been making "loc is good"-ish irc arguments the night before.  *Late* the night before.

[02:50] <mncharity> "I am sorry for the length of my letter, but I had not the time to write a short one."  Blaise Pascal

[02:50] <obra> And now to see what the porters' wisdom on my hackjob is

[02:51] <obra> But first, Battlestar Galactica. 

[02:51] <mncharity> hacking p5!  it has everything! ...  suspense! ...

[02:51] <obra> Thanks for the san-check, TimToady. (madness is still measured on the sanity scale, after all)

[02:52] <mncharity> but is it a logarithmic order-of-magnitude scale...

[02:52] <obra> Where does Sage's MAD->6 live?

[02:54] <mncharity> ﻿"I am sorry for the length of my program, but I had not the language to write a short one."  Ben Bitdiddle

[02:54] <mncharity> "Perl 6 wasn't ready yet."

[02:55] <mncharity> ok.  brain frie.  maybe a couple of hours of p6 tomorrow.   

[02:55] <mncharity> *fried

[02:55] <mncharity> good night all.  been fun. &

[02:55] <Auzon> see you.

[02:55] *** mncharity left
[02:57] *** alester joined
[02:59] <TimToady> obra: ./misc/pX/Common/P5_to_P6_Translation

[03:29] <obra> Thanks. There's some good stuff there that should migrate upstream into p5 core. (http://svn.pugscode.org/pugs/misc/pX/Common/P5_to_P6_Translation/AST_Description.txt in particular) 

[03:29] <lambdabot> http://tinyurl.com/69z2xd

[03:41] *** syle left
[04:01] *** justatheory joined
[04:07] <Eevee> time to take a shot at this test migration thing

[04:09] *** justatheory left
[04:10] *** wknight8111 left
[04:12] *** vaughn left
[04:24] *** justatheory joined
[04:26] *** justatheory left
[04:34] *** PerlJam left
[04:35] *** wolverian left
[04:35] *** pugs_svnbot left
[04:35] *** Juerd left
[04:37] *** dalek left
[04:37] *** pmichaud left
[04:42] *** Psyche^ joined
[05:00] *** Patterner left
[05:00] *** Psyche^ is now known as Patterner

[05:10] *** alester left
[05:19] *** alanhaggai__ left
[05:20] *** alanhaggai joined
[05:22] *** alanhaggai left
[05:33] *** yewenbin joined
[05:33] *** Psyche^ joined
[05:44] *** Patterner left
[05:44] *** Psyche^ is now known as Patterner

[06:04] *** Alias_ joined
[06:46] *** rindolf joined
[06:56] *** yewenbin left
[06:58] *** meppl joined
[07:05] *** alanhaggai joined
[07:14] *** Schwern joined
[07:17] *** baest left
[07:17] *** baest joined
[07:37] *** icwiener joined
[07:40] <TimToady> hmm, looks like feather is down...

[07:47] <TimToady> pugs: say "howdy"

[07:47] <exp_evalbot> OUTPUT[howdy␤]

[07:50] *** zamolxes_ joined
[07:54] *** kane_ left
[07:55] <rindolf> Hi TimToady 

[07:56] <rindolf> TimToady: good localtime()

[07:58] *** zamolxes left
[08:08] *** yewenbin joined
[08:11] *** BinGOs joined
[09:10] *** kane_ joined
[09:25] *** schmalbe joined
[09:32] *** iblechbot joined
[10:02] *** Alias_ left
[10:03] *** Alias_ joined
[10:14] *** Alias__ joined
[10:16] *** Alias_ left
[10:16] *** Alias_ joined
[10:16] *** Alias__ left
[10:17] *** Alias_ left
[10:17] *** Alias_ joined
[10:23] *** wolv joined
[10:42] *** chris2 joined
[11:19] *** wolv left
[11:46] *** rindolf left
[11:52] *** alanhaggai left
[11:52] *** dalek joined
[11:53] *** wolverian joined
[11:56] *** pmichaud joined
[11:56] *** Juerd joined
[11:57] *** PerlJam joined
[12:17] *** dalek left
[12:19] *** Juerd left
[12:20] *** wolverian left
[12:20] *** PerlJam left
[12:20] *** pmichaud left
[12:26] *** pbuetow joined
[12:49] *** lerog joined
[13:17] *** charsbar left
[13:24] *** charsbar joined
[13:32] *** schmalbe left
[13:59] *** yewenbin left
[13:59] *** yewenbin joined
[14:01] *** dalek joined
[14:01] *** wolverian joined
[14:01] *** Juerd joined
[14:01] *** Juerd left
[14:01] *** Juerd joined
[14:13] *** alester joined
[14:27] <moritz_> re

[14:30] *** jan_ joined
[14:31] *** wknight8111 joined
[14:36] *** dalek left
[14:36] *** dalek joined
[14:39] *** yewenbin left
[14:46] *** alester left
[14:52] *** elmex joined
[14:54] *** vaughn joined
[15:16] *** Torment joined
[15:27] *** ChanServ sets mode: +o diakopter

[15:27] *** diakopter sets mode: +o TimToady

[15:27] *** diakopter sets mode: -o diakopter

[15:32] *** Jedai left
[16:06] *** icwiener_ joined
[16:21] *** Juerd left
[16:21] *** Juerd joined
[16:22] *** riffraff joined
[16:23] *** icwiener left
[16:23] <riffraff> hi

[16:23] *** eternaleye left
[16:57] *** rindolf joined
[17:19] *** ujwalic joined
[17:29] *** pmurias joined
[17:31] <pmurias> pugs: say "evalbot works"

[17:31] <exp_evalbot> OUTPUT[evalbot works␤]

[17:31] <pmurias> pugs: say sum(1,3,4)

[17:31] <exp_evalbot> OUTPUT[8␤]

[17:31] <pmurias> shouldn't the sum function be removed?

[17:31] <pmurias> as there exists [+]

[17:31] <pmurias> ?

[17:32] <moritz_> is it still in S29

[17:32] <moritz_> ?

[17:32] <moritz_> I don't see it there

[17:33] <pmurias> neither do i

[17:33] <moritz_> so it's just a pugs artifact

[17:33] <pmurias> but is tested in t/builtins/lists/sum.t

[17:35] <moritz_> that's one more piece of work for Auzon++ to remove ;-)

[17:35] <moritz_> actually we should have a test file with deprecated builtins

[17:35] <moritz_> that tests for the non-existance of a sub 'sum' 

[17:36] <moritz_> or you can just remove it for now, if you feel comfortable with it

[17:37] <pmurias> i'm not sure we should check for non-existance of anything

[17:38] <allbery_b> any complaitn implementation is allowed to provide more than 6.0.0-STD

[17:38] <moritz_> allbery_b: is that officially specced?

[17:38] <allbery_b> I believe so, that's the point of having the -STD stuff

[17:39] <allbery_b> it's kinda the language spec version of 'does'

[17:39] <moritz_> I'd find it very confusing if my own 'multi sub sum(...)' isn't called on some implementations because there is a builtin already

[17:39] <moritz_> allbery_b: but deviations from the standard must be declared

[17:39] <moritz_> allbery_b: like 'use v6_with_sum;' or whatever

[17:40] <moritz_> allbery_b: extensibility doesn't imply that you may have any extensions in an implementation of the standard

[17:44] *** justatheory joined
[17:58] *** b_jonas joined
[18:11] *** Schwern left
[18:35] *** Auzon left
[18:44] *** eternaleye joined
[18:55] *** jferrero joined
[18:58] *** [particle]ventus left
[19:00] *** [particle] left
[19:05] *** eternaleye left
[19:08] *** eternaleye joined
[19:09] *** [particle] joined
[19:32] *** jan_ left
[19:57] *** PerlJam joined
[20:17] *** Khisanth left
[20:17] *** Khisanth joined
[20:19] *** Alias_ left
[20:35] *** riffraff left
[20:35] *** jferrero left
[20:37] *** jan_ joined
[20:45] *** jferrero joined
[20:49] *** BinGOs_ joined
[20:54] *** BinGOs_ left
[20:54] *** BinGOs_ joined
[20:58] *** lerog left
[20:58] *** lerog joined
[20:59] *** riffraff joined
[21:01] *** BinGOs left
[21:06] *** BinGOs_ is now known as BinGOs

[21:11] *** chris2 left
[21:14] *** eternaleye_ joined
[21:16] *** eternaleye left
[21:24] *** jferrero left
[21:33] *** icwiener_ left
[21:44] *** rindolf left
[21:51] *** pmurias left
[22:24] *** eternaleye_ left
[22:24] *** eternaleye_ joined
[22:26] *** b_jonas left
[22:38] *** BinGOs left
[22:58] *** iblechbot left
[23:04] *** Beschwa joined
[23:09] *** elmex left
[23:23] *** Beschwa left
[23:25] *** riffraff left
[23:52] <meppl> good night

[23:54] *** meppl left
