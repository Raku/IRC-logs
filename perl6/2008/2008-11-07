[00:02] *** dalek left
[00:03] <meppl> good night

[00:04] *** jnthn left
[00:05] *** meppl left
[00:06] <masak> Wikipedia++ # This article is about the function transformation technique. For the dish, see Curry.

[00:08] *** pmichaud joined
[00:08] *** jnthn joined
[00:13] *** dalek joined
[00:13] *** smg left
[00:14] *** pmichaud left
[00:14] *** pmichaud joined
[00:14] *** renormalist left
[00:15] *** dalek left
[00:16] *** PerlJam joined
[00:16] *** dalek joined
[00:18] *** jnthn left
[00:18] *** jnthn joined
[00:19] *** dalek left
[00:20] *** dalek joined
[00:30] *** masak left
[00:37] *** pedrob left
[00:44] *** DemoFreak joined
[01:24] *** wknight8111 joined
[01:30] *** DemoFreak left
[01:40] *** alc joined
[01:43] *** alester_ joined
[01:43] *** smg joined
[01:45] *** Exodist left
[01:50] *** FurnaceBoy joined
[01:56] *** Limbic_Region joined
[02:00] *** jauaor left
[02:15] *** lisppaste3 left
[02:16] *** lisppaste3 joined
[02:21] *** wknight8111 left
[02:22] *** lisppaste3 left
[02:27] *** lisppaste3 joined
[02:31] *** eternaleye left
[02:31] *** Limbic_Region left
[02:34] *** hercynium joined
[02:37] <pugs_svn> r22908 | bacek++ | [spec] Replace some skip with todo for rakudo

[03:17] *** Psyche^ joined
[03:20] *** nothingmuch_ joined
[03:21] *** nothingmuch left
[03:21] *** nothingmuch_ is now known as nothingmuch

[03:26] *** Patterner left
[03:26] *** Psyche^ is now known as Patterner

[03:31] *** fleebailey33 joined
[03:40] *** FurnaceBoy left
[03:46] *** Alias__ joined
[03:46] *** Alias_ left
[03:55] *** fleebailey33 left
[04:00] *** bacek left
[04:00] *** bacek_ left
[04:00] *** yahooooo3 left
[04:00] *** Maddingue left
[04:00] *** lambdabot left
[04:01] *** eternaleye joined
[04:02] *** bacek_ joined
[04:02] *** bacek joined
[04:02] *** lambdabot joined
[04:02] *** yahooooo3 joined
[04:02] *** Maddingue joined
[04:04] *** z80ASM joined
[04:20] <pugs_svn> r22909 | lwall++ | [gimme5] move more boilerplate out of normal matcher methods

[04:21] <bacek_> perl6: say Object ~~ Any; say Any ~~ Object

[04:21] <p6eval> elf 22847: OUTPUT[Can't call method "Str" on an undefined value at ./elf_f line 649.␤ at ./elf_f line 3861␤]

[04:21] <p6eval> ..pugs: OUTPUT[␤1␤]

[04:21] <p6eval> ..rakudo 32404: OUTPUT[Null PMC access in get_string()␤current instr.: 'parrot;P6metaclass;add_parent' pc 95 (runtime/parrot/library/P6object.pir:126)␤]

[04:37] *** cpfr joined
[04:39] *** bacek left
[04:39] *** bacek_ left
[04:39] *** yahooooo3 left
[04:39] *** Maddingue left
[04:39] *** lambdabot left
[04:44] *** Maddingue joined
[04:44] *** bacek_ joined
[04:44] *** bacek joined
[04:44] *** lambdabot joined
[04:44] *** yahooooo3 joined
[04:59] <literal> did someone answer my question while my connection was out?

[05:05] <pmichaud> literal: I didn't see the question.

[05:05] <literal> here it is: does the language standard define some way of getting at the name of the implementation? like $?RUNTIME or something

[05:06] <pmichaud> possibly $?COMPILER

[05:06] *** z80ASM left
[05:09] <pmichaud> moritz_ / masak:  the tests for RT #58526 in S29-list/pick.t look wrong to me.

[05:42] <pugs_svn> r22910 | pmichaud++ | [spec]:  Fix test in S29-list/pick.t .

[05:49] *** Bzek left
[05:52] *** hercynium left
[05:56] <pugs_svn> r22911 | lwall++ | [tryfile] needs chomp when files from stdin

[06:18] *** spx2 left
[06:18] *** spx2 joined
[06:18] <pugs_svn> r22912 | pmichaud++ | [spec]:  Add tests that "$a" and "{3}" return Str.

[06:23] *** mberends left
[06:46] *** iblechbot left
[07:20] <moritz_> rakudo: say 'test';

[07:20] *** p6eval left
[07:20] *** p6eval joined
[07:20] *** p6eval left
[07:21] <moritz_> I've just switched the evalbot to use a local parrot mirror. It seems it didn't work ;)

[07:22] *** p6eval joined
[07:28] *** justatheory left
[07:32] <moritz_> rakudo: say "another test"

[07:32] <p6eval> rakudo 32416: OUTPUT[another test␤]

[07:37] <moritz_> rakudo: say "{1}".WHAT

[07:37] <p6eval> rakudo 32416: OUTPUT[Int␤]

[07:38] *** Bzek joined
[07:38] <moritz_> rakudo: say "a {1}".WHAT

[07:38] <p6eval> rakudo 32416: OUTPUT[Str␤]

[07:41] <pmichaud> I have that fixed in the rakon branch, but not in trunk yet.

[07:42] <pmichaud> Feel free to skip/todo the tests until we merge the branch.

[07:42] *** rakudo_svn joined
[07:42] <rakudo_svn> r32417 | pmichaud++ | [rakudo]: partial spectest-progress.csv update

[07:43] <moritz_> pmichaud: done.

[07:43] <pugs_svn> r22913 | moritz++ | [t/spec] TODO'ed two new tests for rakudo

[07:43] <pmichaud> we should be able to merge the branch tomorrow sometime.  It fixes most of the array issues we've been having.

[07:43] <moritz_> nice

[07:44] <moritz_> sadly I'm not online during the weekend, so I can't witness it first hand (or help with testing) :(

[07:44] <pmichaud> > say [ [1,2], [3,4] ].perl

[07:44] <pmichaud> [[1, 2], [3, 4]]

[07:44] <lambdabot>   Not in scope: `say'Not in scope: `perl'

[07:44] <moritz_> but I volunteer to clean up any passing TODO tests on Sunday.

[07:44] <pmichaud> rakudo:  say [ [1,2], [3,4] ].perl

[07:44] <p6eval> rakudo 32416: OUTPUT[[[1, 2], [3, 4]]␤]

[07:45] <pmichaud> oh, that was working already.

[07:45] <pmichaud> oh well. :-)

[07:45] <moritz_> it wasn't working when stored in a hash.

[07:45] <pmichaud> rakudo:  say [ [1,2], [3,4] ].pick(*)

[07:45] <p6eval> rakudo 32417: OUTPUT[341␤]

[07:45] <moritz_> rakudo: my %h = (a => [[1, 2], [3, 4]]); say %h<a>.perl

[07:45] <p6eval> rakudo 32417: OUTPUT[[1, 2, 3, 4]␤]

[07:45] <pmichaud> right, that should be fixed in the new branch.

[07:46] <pmichaud> let's see

[07:46] <pmichaud> > my %h = (a => [[1, 2], [3, 4]]); say %h<a>.perl

[07:46] <pmichaud> [[1, 2], [3, 4]]

[07:46] <lambdabot>   <no location info>: parse error on input `='

[07:46] <moritz_> nice.

[07:47] <pmichaud> this fixes lots of the "little" issues that have been surrounding arrays and hashes

[07:47] <moritz_> that should also reduce the amount of undef warnings in tests that are now marked as todo

[07:47] <pmichaud> yes, likely.

[07:47] <pmichaud> anyway, I need sleep -- back in a while.

[07:47] <moritz_> good night (and great work)

[07:48] *** hanekomu joined
[08:03] *** pbuetow joined
[08:13] *** ashizawa joined
[08:19] *** elmex joined
[08:32] *** pbuetow left
[08:40] *** bacek_ left
[08:42] *** DemoFreak joined
[08:45] *** preflex_ joined
[08:45] *** preflex left
[08:46] *** KidShenck joined
[08:50] *** agentzh left
[08:57] *** ejs joined
[09:00] *** cosimo joined
[09:05] *** stephenos left
[09:09] *** hanekomu_ joined
[09:14] *** ludan joined
[09:15] *** hanekomu_ left
[09:15] <ludan> hi

[09:15] <moritz_> hi there

[09:22] *** hanekomu left
[09:26] *** agentzh joined
[09:26] *** preflex_ left
[09:27] *** preflex joined
[09:35] *** pmurias joined
[09:47] *** nacho_ joined
[09:47] *** DemoFreak left
[09:51] *** agentzh left
[09:52] *** agentzh joined
[09:59] *** r00t|work joined
[09:59] *** r00t|work left
[10:03] *** preflex left
[10:04] *** preflex joined
[10:04] *** iktome joined
[10:06] *** wolverian joined
[10:14] *** nacho_ left
[10:29] *** alc left
[10:29] *** pmurias left
[10:37] *** meppl joined
[10:38] *** agentzh left
[10:41] *** zamolxes joined
[10:43] *** agentzh joined
[10:49] *** ashizawa left
[10:52] *** iktome left
[11:07] *** Bzek left
[11:09] *** schmalbe joined
[11:31] *** iblechbot joined
[11:37] *** pedrob joined
[11:53] *** fleebailey33 joined
[11:53] *** pedrob left
[11:56] *** pedrob joined
[11:57] *** jauaor joined
[11:58] <jauaor> Hello

[12:07] *** pmurias joined
[12:09] <wayland76> jauaor: Hello :)

[12:09] *** zamolxes left
[12:10] <jauaor> Hi wayland76 :-)

[12:10] <jauaor> breakfast, brb

[12:14] <wayland76> bedtime for me &

[12:20] *** KidShenck left
[12:22] *** z80ASM joined
[12:30] *** alester_ left
[12:32] *** Jedai joined
[12:44] *** ludan left
[12:47] *** meppl left
[12:49] *** |Jedai| left
[12:50] *** Bzek joined
[12:57] *** pedrob left
[12:59] *** cosimo left
[13:01] *** alester_ joined
[13:03] *** alester_ left
[13:13] * jauaor back

[13:16] *** Alias__ left
[13:16] *** smg left
[13:35] *** masak joined
[13:46] *** Bzek left
[13:47] *** sri_kraih_ joined
[13:47] *** sri_kraih_ left
[13:47] *** sri_kraih_ joined
[14:04] *** sri_kraih left
[14:19] *** rindolf joined
[14:26] * jauaor finally compiling parrot

[14:27] *** DemoFreak joined
[14:29] *** Aisling left
[14:29] *** Aisling joined
[14:35] <pmurias> jauaor: re finally, did you have any problems with compiling parrot?

[14:35] <lambdabot> pmurias: You have 3 new messages. '/msg lambdabot @messages' to read them.

[14:35] *** fleebailey33 left
[14:37] <jauaor> pmurias: no .... just no free time

[14:37] <jauaor> hah

[14:37] <jauaor> pmurias: I am compiling for mac though, running a fulltest now

[14:47] *** smg joined
[14:58] *** pmurias left
[14:59] *** ejs left
[14:59] *** ejs joined
[15:03] *** jhorwitz joined
[15:08] <bacek> pugs: say Bool.pick

[15:08] <p6eval> pugs: OUTPUT[*** pick not defined: VType (mkType "Bool")␤    at /tmp/8CzicbeaQR line 1, column 5 - line 2, column 1␤]

[15:09] <bacek> pugs: say Bool.pick(*)

[15:09] <p6eval> pugs: OUTPUT[*** pick not defined: VType (mkType "Bool")␤    at /tmp/yLV3OGGQQQ line 1, column 5 - line 2, column 1␤]

[15:11] <TimToady> that is a very recent spec change

[15:12] <TimToady> I would not expect anyone to have implemented it yet

[15:14] <TimToady> it's also possible it's a bad design, and there should be a way of getting a list of the types values instead

[15:14] <TimToady> *type's

[15:16] *** eternaleye left
[15:16] *** adc_Penner joined
[15:18] *** cosimo joined
[15:28] <pmichaud> an interesting artifact of Bool.pick is that ?Bool.pick will always return Bool::True .

[15:29] <[particle]> why is that?

[15:29] <pmichaud> because .pick returns a list of one element.

[15:29] <pmichaud> it does not return one element.  :-)

[15:29] <[particle]> ok, so you need ?$(Bool.pick)

[15:29] <[particle]> no...

[15:29] <pmichaud> no

[15:29] <pmichaud> Bool.pick[0]

[15:29] <[particle]> you need yep

[15:30] <pmichaud> or I've been writing   Bool.pick.[0]

[15:30] *** pmurias joined
[15:30] <[particle]> do lists have a .head method?

[15:30] <pmichaud> .first, I think.

[15:30] <jauaor> mmm it seems like a fulltest is indeed a fulltest

[15:30] <pmichaud> so Bool.pick.first

[15:30] <[particle]> so ?Bool.pick.first works

[15:31] <pmichaud> rakudo:  say [1,2,3].pick.perl;

[15:31] <p6eval> rakudo 32423: OUTPUT[[2]␤]

[15:31] <[particle]> jauaor: that's no lie

[15:31] <pmichaud> rakudo: say [1,2,3].pick.first.perl;

[15:31] <p6eval> rakudo 32423: OUTPUT[No applicable methods.␤␤current instr.: '_block11' pc 66 (EVAL_11:20)␤]

[15:31] *** cosimo left
[15:31] <TimToady> maybe pick should be returning a capture, not a list/array

[15:31] <pmichaud> ENOFIRST

[15:31] <[particle]> rakudo: say [1,2,3].pick.first

[15:31] <p6eval> rakudo 32423: OUTPUT[No applicable methods.␤␤current instr.: '_block11' pc 66 (EVAL_12:20)␤]

[15:31] <[particle]> yep, no .first

[15:32] <TimToady> I think returning an array is bogus

[15:32] <pmichaud> could be.

[15:33] <TimToady> is like saying that map's closure always returns an array

[15:33] <[particle]> what would prefix:? interrogate in the Capture returned from .pick?

[15:34] <TimToady> you mean prefix:<?> I presume.  this is #perl where that notation is forbidden :)

[15:34] <TimToady> #perl6 even

[15:34] <[particle]> :P

[15:35] <TimToady> prefix:<?> takes a scalar argument, and if you bind a capture with one positional argument, it just binds that one argument

[15:35] <pmichaud> yes, I've been thinking about ways to fix that in Rakudo (the prefix:? notation)

[15:36] <TimToady> so ?Bool.pick ought to be false half the time, I think

[15:37] <pmichaud> same for  something like   foo() if Bool.pick;     ?

[15:37] <pmichaud> is there a binding there?

[15:38] <TimToady> presumably

[15:38] <[particle]> doesn't 'if' imply prefix:<?> ?

[15:38] <pmichaud> I think it just implies a test for boolean-ness

[15:38] <pmichaud> that doesn't _have_ to be prefix:<?>

[15:39] <[particle]> ok, yes, that's correct.

[15:39] <TimToady> it implies item context on the capture returned by the pick, so that it can call the appropriate low-level method

[15:39] <TimToady> which at the moment is .true still

[15:39] <jauaor> mm.. seems like failed 3 tests out of 66

[15:40] <pmichaud> I have to finish preparing for a meeting in 20 mins -- will be back in 50.

[15:40] <pmichaud> (actually, I'm here the whole time -- will start paying attention again in 50)

[15:42] *** cosimo joined
[15:47] *** ZuLuuuuuu joined
[15:54] <jauaor> mm.. seems like the test got stuck or something ...

[16:09] *** hercynium joined
[16:10] <rakudo_svn> r32425 | pmichaud++ | [rakudo]: spectest-progress.csv update: 211 files, 4413 passing

[16:10] <pmurias> TimToady: congrats on getting rid of TRE ;)

[16:11] * jauaor ended up interrupting the test

[16:11] <TimToady> 'course, that means I have to write a real lexer now  :)

[16:12] <TimToady> the current one is just the TRE workaround that happened to be good enough to workaround TRE entirely

[16:13] *** rindolf left
[16:17] *** tcliou left
[16:19] *** pedrob joined
[16:19] *** tcliou joined
[16:20] *** xinming left
[16:20] *** xinming joined
[16:20] *** stephenos joined
[16:27] <jauaor> http://pastebin.com/m59d4751

[16:27] <buubot> jauaor: The paste m59d4751 has been copied to http://erxz.com/pb/13317

[16:27] <jauaor> anybody got an idea?, trying to run 'parrot perl6.pbc'

[16:27] <jauaor> parrot 0.8.0

[16:33] *** ejs left
[16:41] *** pedrob_ joined
[16:44] *** pedrob left
[16:44] *** justatheory joined
[16:47] *** justatheory left
[16:47] *** justatheory joined
[16:48] <jauaor> mmm.. interesting

[16:48] <jauaor> it works if I 'make perl6'

[16:49] <pmichaud> jauaor: is it actually Parrot 0.8.0 or the current head in the svn repo?

[16:49] <pmichaud> (i.e., the 0.8.0 release?)

[16:49] <jauaor> pmichaud: the parrot 0.8.0 .. from the tarball itself

[16:49] <jauaor> correct

[16:50] <pmichaud> ah.  I'm not sure what the issue is there.

[16:50] *** eternaleye joined
[16:50] <rakudo_svn> r32428 | pmichaud++ | [rakudo]:  Remove -G flag from test_summary.pl,

[16:50] <rakudo_svn> r32428 | pmichaud++ | as it results in "out of memory" errors on my machine

[16:50] <rakudo_svn> r32428 | pmichaud++ | for the S05-mass/rx.t tests.

[16:50] <pmichaud> it looks kinda weird to me.

[16:52] *** pedrob_ left
[16:52] *** Exodist joined
[16:53] *** Exodist left
[16:54] *** adc_Penner left
[16:56] *** Exodist joined
[16:56] *** pmurias left
[17:12] *** z80ASM left
[17:12] *** pedrob joined
[17:13] *** pmurias joined
[17:13] *** pedrob left
[17:19] <jauaor> yeah .. in principle, it looks weird

[17:20] <pmurias> moritz_: the irc log for today is blank

[17:22] *** eternaleye left
[17:27] *** aindilis left
[17:28] *** aindilis joined
[17:30] *** pbuetow joined
[17:36] *** tomyan left
[17:48] *** meppl joined
[17:52] *** jan_ left
[17:54] *** jan_ joined
[17:56] *** rindolf joined
[17:58] *** fleebailey33 joined
[18:04] *** fleebailey33 left
[18:16] *** aindilis left
[18:17] *** aindilis joined
[18:29] *** zamolxes joined
[18:40] *** bacek left
[18:42] *** tcliou is now known as tcliou|slept

[18:48] <masak> oh! pair query methods are gone. fancy that.

[18:53] *** tewk_ left
[18:53] *** tewk joined
[18:53] <masak> what's this TRE people seem so happy that TimToady got rid of?

[18:53] <masak> also, FWIW, I liked Bool.pick the moment I saw it. :)

[18:56] *** mberends joined
[19:00] <TimToady> well, if we don't break that you can now say Day ~~ :pick<Tue> to get a 1/7th chance :)

[19:01] <TimToady> or maybe that's :pick(Tue)

[19:02] <PerlJam> or both

[19:02] <TimToady> since Tue is acting as a typename

[19:02] <TimToady> yes, but it just seems like more work to do Tue ~~ 'Tue' than Tue ~~ Tue

[19:03] <TimToady> and that's assuming types stringify to their names, which is still in doubt

[19:04] *** pedrob joined
[19:04] <PerlJam> What else would they stringify to?  A structure representation?   A composition representation?    ?

[19:05] <[particle]> 0x5afecafe

[19:05] <TimToady> or maybe a package name with a :ver and :auth

[19:05] <PerlJam> Hmm

[19:05] <TimToady> or maybe they're undef like the protoobjects of the same name :)

[19:05] <[particle]> that sounds like a Capture

[19:06] <TimToady> so maybe they stringify to a warning

[19:07] <TimToady> or maybe '' but Failure

[19:07] <PerlJam> "ope' not this Class..."

[19:08] <PerlJam> ~Typename ~~ Failure   seems a little harsh :)

[19:08] <[particle]> ~Bool ~~ /you have been eaten by a grue/

[19:09] <PerlJam> I have got to get a better font.  All of the tildes look like dashes.

[19:12] *** hercynium left
[19:21] *** hercynium joined
[19:29] *** ab5tract joined
[19:35] *** hanekomu joined
[19:37] *** idemal left
[19:47] *** zamolxes left
[19:50] *** rindolf left
[19:57] *** zamolxes joined
[20:00] *** cpfr left
[20:01] *** schmalbe left
[20:02] *** hanekomu_ joined
[20:04] *** hanekomu_ left
[20:06] <TimToady> @tell azawawi S_s_h seems to be calling is_type and is_routine on all sorts of things for which it makes no sense, such as the insides of strings like "True" and the various bits of longnames like statement_control:PRE

[20:06] <lambdabot> Consider it noted.

[20:07] *** spx2_ joined
[20:10] *** spx2 left
[20:16] *** fridim_ joined
[20:19] *** hanekomu left
[20:21] *** smg left
[20:22] <TimToady> @tell azawawi the problem is you can't just scan for /identifier/; you need to pick color based on the *last* context you care about, like nibbler or deflongname

[20:22] <lambdabot> Consider it noted.

[20:26] *** cosimo left
[20:30] <TimToady> @tell azawawi so in the case of push @basetypenames, "True" the True is currently blue because the push is an identifier, which is bogus, since True is just a nibble

[20:30] <lambdabot> Consider it noted.

[21:04] *** alex_ndc joined
[21:07] *** alex_ndc left
[21:08] *** alexn joined
[21:10] *** alexn is now known as alexn_org

[21:12] *** ab5tract left
[21:16] *** alexn_org left
[21:17] *** alexn_org joined
[21:20] *** alexn_org left
[21:21] *** alexn_org joined
[21:21] *** alexn_org left
[21:22] *** alexn_org joined
[21:22] *** alexn_org left
[21:23] *** alexn_org joined
[21:25] *** ab5tract joined
[21:26] *** riffraff joined
[21:26] *** riffraff left
[21:29] *** alexn_org left
[21:29] *** alexn_org joined
[21:36] *** ruoso joined
[21:37] <ruoso> hmmm... irc log seems offline

[21:38] *** japhb left
[21:40] *** japhb joined
[21:42] <pmurias>  ruoso hi

[21:42] <ruoso> hi pmurias 

[21:42] <ruoso> have you seen my changes in mildew?

[21:43] <ruoso> I took the liberty to do it, as you were offline for a few days

[21:43] <pmurias> ruoso: feel free to change anything you want i don't belive in code "ownership"

[21:43] <ruoso> ;P

[21:44] <ruoso> but did you agree with removing $AST::CODE?

[21:44] <pmurias> looking...

[21:46] <pmurias> i was just attempting to make emitting a bit more consise

[21:46] <pmurias> it was propably a bit to clever

[21:47] <pmurias> ruoso: sm0p has bit rotted

[21:47] <ruoso> pmurias, in which sense?

[21:48] <pmurias> it doesn't compile with a new gimme5

[21:48] *** cpfr joined
[21:48] <pmurias> does anything recurse in DESTROYALL atm?

[21:48] <ruoso> oh... the sm0p compiler..

[21:48] *** alexn_org left
[21:49] <ruoso> pmurias, we might just implement the 'free' operator in mold

[21:49] <ruoso> and re-implement it in mold correctly

[21:49] <ruoso> and it does recurse today, yes

[21:49] <ruoso> because one object's destroyall can end up in another destroyall call

[21:50] <pmurias> ahh

[21:51] <pmurias> implementing the 'free' operator in mold isn't hard 

[21:51] *** smg joined
[21:52] *** alexn_org joined
[21:54] <ruoso> pmurias, then we have just some tests using slime, right?

[21:54] <pmurias> ruoso: i wanted to remove slime to have an easier task of hunting down NULLs which are a problem with mold

[21:54] <pmurias> ruoso: tests 2,9,12,16,17

[21:54] <ruoso> yes.... I agree completely...

[21:54] <ruoso> slime already played its role 

[21:55] <ruoso> the most important of it being proving the concept that SMOP can have more than one interpreter cooperating at the same time

[21:55] <pmurias> ruoso: i'll remove those tests

[21:56] <ruoso> pmurias, just comment them on the CMakeLists.txt

[21:56] <ruoso> pmurias, we can rewrite them using mold

[21:56] <ruoso> later

[21:56] <pmurias> ok

[21:58] * ruoso dinner &

[22:00] <pmurias> ruoso: the remaining tests pass with a SMOP_DISPATCH DESTROYALL 

[22:01] <pugs_svn> r22914 | azawawi++ | [STD_syntax_highlight] removed check on 'lex' directory

[22:10] <rakudo_svn> r32441 | pmichaud++ | [rakudo]:  merge rakon branch to trunk

[22:11] *** ZuLuuuuuu left
[22:14] <pugs_svn> r22915 | pmurias++ | [smop]

[22:14] <pugs_svn> r22915 | pmurias++ | removed SLIME

[22:14] <pugs_svn> r22915 | pmurias++ | commented out slime using tests

[22:14] <pugs_svn> r22915 | pmurias++ | commented out test 1 as it tests slightly inlegal things and is duplicated by higher level stuff 

[22:14] <pugs_svn> r22915 | pmurias++ | test 4 fails as we are doing DESTROYALL incorrectly now

[22:16] *** hercynium left
[22:28] *** alexn_org left
[22:29] *** alexn_org joined
[22:29] *** alexn_org left
[22:32] *** rindolf joined
[22:34] <pugs_svn> r22916 | bacek++ | [spec] Made Incrementor/Decrementor behave according to S03.

[22:38] *** wknight8111 joined
[22:39] *** alexn_org joined
[22:57] *** alexn_org left
[23:02] *** DarkArchon joined
[23:03] <DarkArchon> moritz_ doesn't happen to be around does he?

[23:06] <pugs_svn> r22917 | azawawi++ | [STD_syntax_highlight] added --snippet-html

[23:06] <masak> DarkArchon: well, he's usually gone on weekends.

[23:06] <DarkArchon> :( damn

[23:06] *** alexn_org joined
[23:07] <masak> yeah, can't everyone be 100% dedicated to Perl 6 all the time? would be much easier that way.

[23:07] *** pmurias left
[23:08] <DarkArchon> it would, alas, the world isn't perfect

[23:09] <masak> ...yet >:)

[23:10] *** Psyche^ joined
[23:10] <DarkArchon> some evil death ray that will make us all dedicated to perl 6 in mind?

[23:15] <DarkArchon> I don't suppose anyone else on knows a lot about the ilbot?

[23:16] *** jhorwitz left
[23:19] <DarkArchon> how about perl in general?

[23:20] <masak> what about it?

[23:20] *** rindolf left
[23:21] *** idemal joined
[23:21] <DarkArchon> I'm having trouble getting ilbot to run

[23:21] <DarkArchon> it keeps failing on line 22

[23:21] <masak> did you mean "how about some evil death ray that will make us all dedicated to perl in general in mind?" or "I don't suppose anyone else on knows a lot about perl in general" :)

[23:21] <DarkArchon> use IrcLog qw(get_dbh gmt_today); <-- that

[23:21] <DarkArchon> which means I'm missing something

[23:21] <DarkArchon> (unless I'm way off)

[23:21] <DarkArchon> the question is what?

[23:22] <masak> DarkArchon: sorry, I wish I could be of any assistance, but your guess is as good as mine in this case.

[23:22] <DarkArchon> damn

[23:23] *** Patterner left
[23:23] *** Psyche^ is now known as Patterner

[23:24] *** zamolxes left
[23:24] *** zamolxes_ joined
[23:26] *** fridim_ left
[23:28] *** zamolxes_ left
[23:34] <pmichaud> std: my %h; %h{"key"} = "value"; say %h\{"key"};

[23:34] <p6eval> std 22847: OUTPUT[parse failure␤]

[23:38] <masak> :)

[23:39] <masak> even std is wrong.

[23:40] <Khisanth> DarkArchon: it means it's probably reporting the wrong line number :)

[23:41] <DarkArchon> it reported correct line numbers for other, similar, errors. If so though, then how do I find out what the problem is?

[23:41] <masak> there's a Perl 6 authority food chain nowadays: Sxx > std > spectests > tests > implementations

[23:41] *** pmurias joined
[23:43] *** Limbic_Region joined
[23:44] <diakopter> food is right.  in what direction does the eating occur?

[23:45] <DarkArchon> ?

[23:47] <diakopter> chomps

[23:48] <masak> diakopter: chomps always work from the right, IIRC. this goes for both Perl 5 and 6.

[23:51] *** alester left
[23:52] *** DarkArchon left
[23:56] *** iblechbot left
