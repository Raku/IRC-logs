[00:06] *** Ontolog left
[00:25] *** pbuetow left
[00:29] *** justatheory joined
[00:52] *** ab5tract_ joined
[00:53] *** pedrob joined
[00:54] *** ab5tract_ left
[00:56] *** simcop2387 left
[00:58] *** spx2 left
[00:58] *** spx2 joined
[00:59] <spx2> heh ... nasty

[01:03] *** Alias_ left
[01:07] *** cathyal left
[01:08] *** Alias_ joined
[01:17] *** simcop2387 joined
[01:18] *** jauaor left
[01:27] <spx2> I just thought of having a stack with operators and operands and when I get a pattern like "Whatever_Operator - Operand" treat "-" as unary

[01:27] <spx2> this turned out to be wrong very fast as it broke nearly all my other tests :)

[01:27] <spx2> sweet test-driven dev

[01:27] *** alester_ joined
[01:28] <spx2> I probably should read some tutorial on expression evaluation

[01:28] <spx2> or book..

[01:35] *** wayland76 joined
[01:41] *** fleebailey33 joined
[01:42] <meppl> good night

[01:44] *** meppl left
[01:46] *** nacho_ left
[02:04] <pugs_svn> r22886 | lwall++ | [Cursor] refactor cursor_fate for cleanliness and slight speed gains

[02:11] *** wknight8111 left
[02:14] *** fleebailey33 left
[02:15] *** pedrob left
[02:17] *** kanru left
[02:27] *** simcop2387 left
[02:29] *** simcop2387 joined
[02:29] *** simcop2387 left
[02:30] *** simcop2387 joined
[02:31] *** simcop2387 is now known as babooncopper

[02:33] *** babooncopper is now known as simcop2387

[02:37] *** alc joined
[03:10] *** Limbic_Region left
[03:21] *** kanru joined
[03:48] *** Psyche^ joined
[03:50] <alester_> host perl101.org

[04:00] *** elmex left
[04:02] *** elmex joined
[04:06] *** Patterner left
[04:06] *** Psyche^ is now known as Patterner

[04:11] <wayland76> host 'perl101.org' found, but is currently passed out after too much "marking" (partying) :)

[04:17] *** z80ASM joined
[04:18] *** nacho_ joined
[04:19] *** FurnaceBoy left
[04:24] *** alc left
[04:25] *** japhb_ joined
[04:27] *** japhb left
[04:31] <bacek_> perl6: my $j = true(Bool::True & Bool::False); my $f = Bool::False; say $j == $f; say $j == Bool::False; say (true(Bool::True & Bool::False) == $f)

[04:31] <p6eval> pugs: OUTPUT[*** ␤    Unexpected "$j"␤    expecting "=", "::", context, ":" or "("␤    at /tmp/atvjE3ZEJf line 1, column 4␤]

[04:31] <p6eval> ..rakudo 32356: OUTPUT[0␤0␤0␤]

[04:31] <p6eval> ..elf 22847: OUTPUT[Undefined subroutine &GLOBAL::true called at (eval 129) line 3.␤ at ./elf_f line 3861␤]

[04:32] <bacek_> pugs: my $j := true(Bool::True & Bool::False); my $f = Bool::False; say $j == $f; say $j == Bool::False; say (true(Bool::True & Bool::False) == $f)

[04:32] <p6eval> pugs: OUTPUT[*** ␤    Unexpected " Bool"␤    expecting "::"␤    at /tmp/BTN6RmCBij line 1, column 27␤]

[04:32] <bacek_> pugs--

[04:44] *** nacho_ left
[04:48] *** voteobama is now known as apeiron

[05:02] *** sri_kraih left
[05:15] *** z80ASM left
[05:15] *** alc joined
[05:59] *** mberends_ left
[06:27] *** justatheory left
[06:46] *** ashizawa joined
[06:55] *** spx2 left
[06:55] *** spx2 joined
[06:57] *** alester_ left
[07:12] *** alc left
[07:12] *** stephenos left
[07:12] *** Chillance left
[07:25] *** japhb_ left
[07:25] *** japhb__ joined
[07:25] *** alc joined
[07:32] *** dmq left
[07:32] *** dmq joined
[07:50] *** pbuetow joined
[07:54] *** iblechbot joined
[08:13] *** meppl joined
[08:25] *** pbuetow left
[08:25] *** Bzek joined
[08:29] *** [particle]1 joined
[08:34] *** [particle] left
[08:42] *** bacek_ left
[08:50] *** fleebailey33 joined
[09:16] *** cosimo joined
[09:25] *** Ej_Pulsar joined
[09:40] *** Ej_Pulsar left
[09:52] *** ejs joined
[09:58] *** jauaor joined
[09:59] <jauaor> hello

[10:02] *** smg left
[10:08] *** broquaint joined
[10:09] *** mj41 left
[10:13] *** mj41 joined
[10:15] *** masak joined
[10:19] *** zamolxes joined
[10:40] *** alc left
[10:42] *** ejs left
[10:58] *** zamolxes left
[11:04] *** tomyan joined
[11:09] *** masak left
[11:30] *** Chillance joined
[11:32] *** smg joined
[11:32] *** ejs joined
[11:49] *** pnu joined
[11:55] *** araujo left
[12:04] *** zamolxes joined
[12:05] *** jauaor left
[12:13] *** rindolf joined
[12:25] *** meppl left
[12:26] *** kst left
[12:36] *** rindolf left
[12:39] *** pnu left
[12:48] *** ashizawa left
[13:00] *** pnu joined
[13:01] *** z80ASM joined
[13:39] *** yahooooo3 left
[13:39] *** Maddingue left
[13:39] *** lambdabot left
[13:40] *** lambdabot joined
[13:40] *** yahooooo3 joined
[13:40] *** Maddingue joined
[13:48] *** rindolf joined
[13:53] *** bacek left
[13:53] *** jhorwitz joined
[13:59] *** pedrob joined
[14:00] *** z80ASM left
[14:07] *** Chillance left
[14:08] *** araujo joined
[14:25] *** ashizawa joined
[14:26] *** ashizawa_ joined
[14:30] *** masak joined
[14:45] *** jauaor joined
[15:04] *** sri_kraih joined
[15:07] *** ashizawa_ left
[15:07] *** ashizawa_ joined
[15:08] *** ashizawa_ left
[15:10] *** stephenos joined
[15:17] *** ruoso left
[15:27] *** eternaleye left
[15:34] *** ejs left
[15:39] *** adc_Penner joined
[15:47] *** smg left
[15:52] *** TJCRI joined
[15:53] *** Exodist joined
[15:58] *** zamolxes left
[16:04] *** jhorwitz_ joined
[16:10] *** kst joined
[16:26] *** jhorwitz left
[16:31] *** |Jedai| joined
[16:38] *** TJCRI left
[16:43] *** tomyan left
[16:47] *** justatheory joined
[16:49] *** Jedai left
[16:56] *** ruoso joined
[17:01] *** cosimo left
[17:07] <ruoso> Hello!

[17:09] <ruoso> @tell pmurias do you think you could make mildew work with "use SMOP"?

[17:09] <lambdabot> Consider it noted.

[17:16] *** masak left
[17:17] *** smg joined
[17:18] *** hercynium joined
[17:28] *** z80ASM joined
[17:29] *** rindolf left
[17:35] *** ashizawa left
[17:43] *** Alias_ left
[17:46] *** rdice joined
[18:00] *** z80ASM left
[18:09] *** meppl joined
[18:13] <pugs_svn> r22887 | ruoso++ | [mildew] avoid using globals during ->m0ld().

[18:13] <ruoso> @tell pmurias I've removed $AST::CODE from mildew Ast.pm... it now must return the m0ld code in the m0ld call. This means more registers are created, but that can be easily optimized in the future...

[18:13] <lambdabot> Consider it noted.

[18:25] *** ZuLuuuuuu joined
[18:36] *** jferrero joined
[18:37] *** alester left
[18:40] <ruoso> TimToady, it seems that viv is returning the arg of the VAST::Methodcall as a "ws"

[18:40] <ruoso> is that expected? or  "ws" is something different than whitespace?

[18:41] *** pbuetow joined
[18:41] *** pedrob left
[18:53] <ruoso> TimToady, I'm assuming "ws" is there by mistake and I'm jumping to the node immediatly inside it...

[19:01] *** Bzek left
[19:21] <ruoso> TimToady, it seems STD is parsing $OUT.print("a","b") as a semilist of a single element which is a infix:<,> with the actual arguments... is that really necessary? couldn't it be just part of the semilist?

[19:23] * moritz_ thinks it's consistent right now

[19:23] <lambdabot> moritz_: You have 1 new message. '/msg lambdabot @messages' to read it.

[19:25] <ruoso> it also puts the second element inside a termish, while the first is a plain noun

[19:26] <ruoso> hmm... and termish is not really an ast element, it's just an array... hmm...

[19:26] <moritz_> if it has no semantic meaning, just filter it out in your compiler

[19:29] <ruoso> yeah... that's what I'm doing...

[19:29] <ruoso> but I was just wondering if that's the way it was supposed to be

[19:30] <ruoso> I mean, in "$a.b('c','d')",  "'c','d'" is the semilist... I don't really see why all the bloat

[19:30] <TimToady> semilist is semicolon-separated, not comma separated

[19:30] <ruoso> ahm

[19:30] <ruoso> ok

[19:30] <ruoso> that makes sense

[19:30] <TimToady> potentially multi-dimensional, basically

[19:31] <ruoso> I always forget about slices

[19:32] <ruoso> TimToady, have you seen the ws issue I wrote before?

[19:32] <TimToady> example?

[19:33] <ruoso> v6/mildew/t/call.t

[19:38] <TimToady> looks like a bug

[19:38] <TimToady> probably missing a cursor_fresh somehwere

[19:44] <TimToady> anyway, likely some immutable/mutable cursor confusion, so probably an optimization gone bad

[19:46] <ruoso> right... I'm doing a small hack (it's not that small anymore) to extract the element inside it as if the ws wasn't there..

[19:46] <ruoso> but it's a bit ugly... so just let me know when the hack is not needed...

[19:47] <ruoso> is there a syntax to create the capture flattened when doing a method call? 

[19:49] <pugs_svn> r22888 | ruoso++ | [mildew] allow multiple arguments in method calls to preserve the information for those using the capture in slice context...

[19:51] <ruoso> this last commit actually makes me realize the native smop capture needs to be smarter and also support slice context itself...

[19:54] <TimToady> it all depends on whether it's going to bind to @ or @@

[20:02] *** Exodist left
[20:02] *** Exodist joined
[20:08] *** pedrob joined
[20:11] *** mberends joined
[20:13] <ruoso> TimToady, but isn't there a way to say "send this capture already flattened"

[20:13] <ruoso> "eagerly flatten the capture" 

[20:19] <TimToady> list() or @() both provide list context

[20:20] <ruoso> but if you do $a.b(list()) will still be a semilist with a list

[20:20] <TimToady> yes

[20:21] <ruoso> what I'm trying to figure out is a way to have a simpler capture... in order to bootstrap the more complete capture...

[20:21] <ruoso> the native capture in SMOP currently assumes it is eagerly flattened...

[20:22] <TimToady> well, there are always pragmas over a lexical scope

[20:22] <ruoso> use native capture; ?

[20:25] <ruoso> TimToady, I was actually thinking evil... like... a different syntax for the method call... but I suppose you're going to kick me for giving this idea ;)

[20:27] <moritz_> Perl 6: more casual evilness for you.

[20:27] <ruoso> but I might argue that interoperating with other languages might require simplifying the capture...

[20:29] * ruoso looking in the unicode table for yet another circumfix ;)

[20:32] * ruoso .oO ( $a.b˓1,2,3˒)

[20:34] * ruoso .oO ( $a.b⎨1,2,3⎬ )

[20:34] * ruoso hides

[20:35] *** jferrero left
[20:48] *** jauaor left
[20:49] <[particle]1> ruoso: how about -> instead of . ? >:)

[20:49] *** [particle]1 is now known as [particle]

[20:49] <moritz_> oh noes!

[20:52] *** cdehaan joined
[20:52] *** mberends left
[21:02] *** perl7 joined
[21:03] *** masak joined
[21:04] *** pbuetow left
[21:04] *** pbuetow joined
[21:05] *** alester joined
[21:11] <masak> rakudo: class A {}; class C is A {}; say "OH HAI"

[21:11] <p6eval> rakudo 32364: OUTPUT[OH HAI␤]

[21:11] <masak> rakudo: class A::B {}; class A::B::C is A::B {}

[21:11] <p6eval> rakudo 32364: OUTPUT[Attempt to inherit from non-existent parent class␤current instr.: 'die' pc 13394 (src/gen_builtins.pir:8255)␤]

[21:11] <masak> rakudo: grammar A { token foo { foo } }; say "foo" ~~ A::foo

[21:11] <p6eval> rakudo 32364: OUTPUT[foo␤]

[21:11] <masak> rakudo: grammar A::B { token foo { foo } }; say "foo" ~~ A::B::foo

[21:11] <p6eval> rakudo 32364: OUTPUT[0␤]

[21:11] <jnthn> masak: plz ticket that second one

[21:11] <moritz_> and test-case it ;)

[21:12] <masak> jnthn: I was just going to ask you that :)

[21:12] <masak> moritz_: if time permits, I will.

[21:12] <masak> jnthn: what about the fourth one?

[21:12] <moritz_> if not, maybe I can get around to it

[21:12] <masak> one of us will.

[21:13] <masak> I have to git-push and blog first, at least

[21:13] *** ruoso left
[21:13] <jnthn> masak: I think that may be part of a bigger issue with ~~ on functions - I think we need to recognize that form syntactically...maybe. Need to see what's going on to be sure.

[21:14] <masak> jnthn: just wanted to show you that there are two remaining problems with the current :: solution. both affect November.

[21:14] *** bacek joined
[21:14] * masak writes to rakudobug

[21:14] <jnthn> Inheritance one will be trivial.

[21:14] <bacek> perl6: say ('a'&'b'&'c') eq ('a'|'b'|'c')

[21:14] <jnthn> Second one is I fear a tad deeper.

[21:14] <p6eval> rakudo 32364: OUTPUT[1␤]

[21:14] <p6eval> ..elf 22847: OUTPUT[No viable candidate for call to multimethod infix__38($,$,$) at (eval 121) line 3␤ at ./elf_f line 3861␤]

[21:14] <p6eval> ..pugs: OUTPUT[all(VJunc any(VBool False,VBool True))␤]

[21:14] <masak> jnthn++

[21:15] <masak> jnthn: if you promise to keep fixing Rakudo, I promise to keep trying to break it to the best of my ability :P

[21:15] <masak> er, find existing holes, I mean.

[21:15] <masak> no need to introduce new ones.

[21:15] <jnthn> :P

[21:16] <[particle]> that's inevitible

[21:16] <jnthn> Yes, preferably find existing ones. :-P

[21:16] <masak> I'll focus on that.

[21:17] <masak> [particle]: though there are certainly mitigating factors. being Don Knuth is one, for example.

[21:17] <masak> is he on the Parrot board yet?

[21:17] <masak> :P

[21:17] <[particle]> :)

[21:18] <jnthn> Which will be completed first? Perl 6, Duke Nukem Forever, or Knuth's books? ;-)

[21:18] <masak> the race is on!

[21:18] <bacek> perl6: say ("a"|"a"|"b").perl

[21:18] <p6eval> pugs: OUTPUT[("a" | "b")␤]

[21:18] <p6eval> ..rakudo 32366: OUTPUT[any("a", "a", "b")␤]

[21:18] <p6eval> ..elf 22847: OUTPUT[No viable candidate for call to multimethod infix__124($,$,$) at (eval 119) line 3␤ at ./elf_f line 3861␤]

[21:18] <[particle]> i heard knuth was writing duke nukem forever in perl 6

[21:19] * masak thinks Knuth's last book will be about implementing DNF in Parrot, running on Hurd

[21:19] <bacek> on quantum computers

[21:19] <masak> using string theory

[21:20] <moritz_> a quantized string theory, if you please ;)

[21:20] * [particle] waves

[21:20] <masak> :P

[21:20] * bacek reply with tsunami back

[21:20] * Patterner looks at [particle] collapsing

[21:21] <masak> Patterner: you shouldn't have looked!

[21:21] * moritz_ sees a pattern emerging

[21:21] * masak groans

[21:22] <Patterner> useless use of cat.

[21:23] <moritz_> ... in void context.

[21:31] *** cdehaan left
[21:37] *** alester left
[21:50] *** rdice left
[21:52] <wayland76> If we keep going like this, we won't just have Donald Knuth here, but Terry Pratchett too :)

[21:53] <pugs_svn> r22889 | moritz++ | [t/spec] add (skipped) tests for [perl #60356] (can't inherit from a class

[21:53] <pugs_svn> r22889 | moritz++ | with :: in the name), masak++

[21:53] * wayland76 has just woken up, and doesn't feel completely jazzed-up yet; this cat must have a half-life :)

[21:53] <masak> moritz_++

[21:53] *** fleebailey3 joined
[21:56] <moritz_> rakudo: grammar A::B { token foo { foo } }; say "foo" ~~ &A::B::foo

[21:56] <p6eval> rakudo 32366: OUTPUT[0␤]

[22:00] *** jhorwitz_ left
[22:00] *** elmex left
[22:03] *** adc_Penner left
[22:04] *** wknight8111 joined
[22:46] *** spx2 left
[22:46] *** spx2 joined
[22:58] *** perl7 left
[23:03] *** iblechbot left
[23:29] *** bacek_ joined
[23:31] *** Maghnus left
[23:33] *** smg left
[23:33] *** pedrob left
[23:33] *** pedrob joined
[23:34] *** pedrob left
[23:34] <meppl> good night

[23:40] *** meppl left
[23:44] *** fleebailey33 left
[23:54] *** alester joined
[23:54] *** masak left
