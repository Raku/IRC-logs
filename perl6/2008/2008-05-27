[00:00] <dolmen> your test is breaking the rakudo patch I just sent :(

[00:00] <pmichaud> yes, that's why I did it.  :-)

[00:01] <pmichaud> I've fixed the patch.

[00:01] <pmichaud> just running spectest_regression on it now, then will commit.

[00:05] <dolmen> how much time left?

[00:05] <pmichaud> just finished.... committing now

[00:05] * dolmen will have a good night :)

[00:07] <rakudo_svn> r27835 | pmichaud++ | [rakudo]:

[00:07] <rakudo_svn> r27835 | pmichaud++ | * Add an implementation of infix:<xx>, from RT#54870 (dolmen++)

[00:07] <rakudo_svn> r27835 | pmichaud++ | * Patch courtesy Olivier Mengu?\195?\169 <olivier.mengue at gmail.com>

[00:07] <rakudo_svn> r27835 | pmichaud++ | * One minor change to handle negative repetition values.

[00:08] <pmichaud> time for some dinner.

[00:08] <pmichaud> bbl.

[00:11] <dolmen> time for sleep.

[00:11] <dolmen> bye

[00:16] <Auzon> It seems smartlinks cannot be included in multiple Spec files at once.

[00:16] *** FurnaceBoy joined
[00:21] <Auzon> or maybe they can, if they are adjacent.

[00:23] <Auzon> perl6: say @*INC

[00:23] <exp_evalbot> kp6: OUTPUT[␤]

[00:23] <exp_evalbot> ..pugs: OUTPUT[␤]

[00:23] <exp_evalbot> ..rakudo: OUTPUT[␤]

[00:23] <exp_evalbot> ..elf: OUTPUT[.␤]

[00:26] <Auzon> TimToady: (or anyone else) @*INC isn't mentioned anywhere in the specs. I thought it would be in S02 somewhere under Names and Variables. Is it still named @*INC?

[00:28] <Auzon> TimToady: I see tests for #line directives and $?POSITION, as well as $?CALLER::POSITION (see t/magicals/line_basic.t and t/magicals/caller_pos.t), but I do not see them in the specs anywhere.

[00:30] <pugs_svnbot> r20547 | Auzon++ | [gsoc_spectest] Test reorganization.

[00:33] *** ruoso left
[00:36] *** dolmen left
[00:42] <pugs_svnbot> r20548 | Auzon++ | [gsoc_spectest] added tests for existence of PERLVER, OS, OSVER variables.

[00:45] <pugs_svnbot> r20549 | Auzon++ | [gsoc_spectest] tabs to spaces.

[00:46] <Auzon> pugs: say :10<:2<1.1>>

[00:46] <exp_evalbot> OUTPUT[21.1␤]

[00:46] <Auzon> pugs: say :2<1.1>

[00:46] <exp_evalbot> OUTPUT[1.5␤]

[00:46] <Auzon> pugs: say :2<1000>

[00:46] <exp_evalbot> OUTPUT[8␤]

[00:47] <Auzon> pugs: say :16(:2<10000>)

[00:47] <exp_evalbot> OUTPUT[22␤]

[00:47] <Auzon> hm.

[00:55] *** FurnaceBoy left
[01:02] *** bacek joined
[01:03] <bacek> perl6: say int(-0.5)

[01:03] <exp_evalbot> kp6: OUTPUT[syntax error at position 7, line 1 column 7:␤say int(-0.5␤       ^ HERE␤]

[01:03] <exp_evalbot> ..pugs: OUTPUT[0␤]

[01:03] <exp_evalbot> ..rakudo: OUTPUT[-0␤]

[01:03] <exp_evalbot> ..elf: OUTPUT[syntax error at (eval 14) line 3, near "))"␤ at ./elf_f_faster line 4456␤]

[01:04] *** baest left
[01:11] *** eternaleye left
[01:16] <bacek> pugs: use Test; my @p = (1..3); is(pop @p, 3, 'match');

[01:16] <exp_evalbot> OUTPUT[pugs: *** Unsafe function 'use' called under safe mode␤    at /tmp/Arb8o5TYUO line 1, column 1␤]

[01:17] <bacek> pugs: my @p = (1..3); is(pop @p, 3, 'match')

[01:17] <exp_evalbot> OUTPUT[*** No such subroutine: "&is"␤    at /tmp/zdJqdQJPkl line 1, column 17 - line 2, column 1␤]

[01:17] <bacek> pugs: sub is($a,$b) { say $a == $b }; my @p = (1..3); is(pop @p, 3)

[01:17] <exp_evalbot> OUTPUT[1␤]

[01:21] *** bacek left
[01:24] *** Limbic_Region left
[01:25] *** Ched- left
[01:25] *** Ched- joined
[01:31] *** bacek joined
[01:31] *** eternaleye joined
[01:33] *** agentzh left
[01:34] *** ting_ left
[01:45] *** bacek__ joined
[01:58] *** bacek left
[02:02] *** kanru left
[02:03] *** elmex left
[02:16] *** zakame_ joined
[02:17] *** zakame_ left
[02:18] *** Eevee left
[02:19] *** alanhaggai joined
[02:23] *** nipotaway is now known as nipotan

[02:46] *** alanhaggai_ joined
[02:47] *** alanhaggai left
[02:47] *** alanhaggai_ is now known as alanhaggai

[02:54] *** agentzh joined
[02:54] *** ting joined
[03:06] <diakopter> Auzon: [do you know whether] are there currently tests for $_ (testing things that set it; getting it)

[03:06] <Auzon> I don't currently know, but ack can answer me quickly.

[03:07] <Auzon> There are some in t/var/default_scalar.t .... looking for more

[03:08] <diakopter> S05 mentions how rules interact with it

[03:09] <Auzon> A lot of test cases use $_ for shorthand, but the one I mentioned seemed to be the only test of it as a special variable.

[03:09] <Auzon> There are some test testing 'for'.

[03:10] <diakopter> I wonder if the "is topic" property is still specified

[03:11] <Auzon> an ack says no.

[03:11] <Auzon> $_ is mentioned along with "topic" in a few places

[03:12] <diakopter> I guess one could search for " .amethod"

[03:13] <Auzon> "amethod" only finds "metamethod"

[03:14] <diakopter> oh, I meant " .anything"

[03:14] <diakopter> the implicit invocant

[03:15] <Auzon> nothing there either.

[03:15] <Auzon> not much for "anything" either

[03:16] <diakopter> there's this thread.  I don't know if it got resolved.  http://www.nntp.perl.org/group/perl.perl6.language/2005/07/msg22263.html

[03:16] <lambdabot> Title: Re: How to write a self.pm (Re: method calls on $self) - nntp.perl.org, http://tinyurl.com/6r6uyz

[03:21] * diakopter reads S04 (more)

[03:46] *** braceta__ left
[03:47] *** H0LE joined
[03:48] *** wknight8111 left
[03:48] <pmichaud> there was a good discussion of $_ on #parrot a few days ago

[03:49] *** bacek__ left
[03:51] <pmichaud> http://www.parrotcode.org/misc/parrotsketch-logs/irclog.parrot-200805/irclog.parrot.20080519  (search for TimToady and that will get you near the beginning of the conversation)

[03:51] <lambdabot> http://tinyurl.com/629aef

[03:59] <diakopter> I like this log viewer: http://irclog.perlgeek.de/parrot/2008-05-19#i_299618

[03:59] <lambdabot> Title: IRC log for #parrot, 2008-05-19

[04:00] <pmichaud> oh, that's excellent.  

[04:00] * pmichaud bookmarks.

[04:24] *** nipotan is now known as nipotaway

[04:32] *** penk joined
[04:41] *** alanhaggai left
[04:50] *** H0LE left
[05:14] *** LCamel_ joined
[05:14] *** LCamel left
[05:25] *** tcliou left
[05:27] *** baest joined
[05:28] <rakudo_svn> r27840 | pmichaud++ | [rakudo]:

[05:28] <rakudo_svn> r27840 | pmichaud++ | * Fix typos and trailing spaces.

[05:35] *** LCamel_ left
[05:51] *** tcliou joined
[05:52] *** iblechbot joined
[05:55] *** Jedai left
[06:11] *** LCamel joined
[06:12] *** tcliou left
[06:13] *** iblechbot left
[06:14] *** tcliou joined
[06:25] *** pbuetow joined
[06:43] *** alc joined
[06:45] *** meppl joined
[06:46] *** pbuetow left
[06:54] *** c1sung joined
[07:41] *** IllvilJa left
[07:48] <pugs_svnbot> r20550 | bacek++ | dies_ok and lives_ok now implemented in rakudo. Remove #?rakudo skip

[07:48] <pugs_svnbot> r20551 | bacek++ | Change mis-leading comment in #?rakudo skip

[07:51] <pugs_svnbot> r20552 | bacek++ | Add #?rakudo skip for colon ivokation syntax

[07:51] <pugs_svnbot> r20553 | bacek++ | Add more rakudo guards to include in spectest_regression

[07:59] *** Jedai joined
[08:30] *** Alias_ joined
[09:11] *** Alias__ joined
[09:12] *** Alias_ left
[09:22] <pugs_svnbot> r20554 | pmurias++ | [elf] default attribiute handling in elf_faster

[09:23] <moritz_> bacek_: if you modify files in t/spec, please include [spec] in the commit message

[09:29] <moritz_> @tell Auzon re @*INC it's unlikely that it will be in the spec because the module handling is decoupled from the file system (to support unicode and case sensitive module names that the filesysstem doesn't support)

[09:29] <lambdabot> Consider it noted.

[09:32] *** iblechbot joined
[09:32] *** pmurias joined
[09:36] *** galf1 joined
[09:39] <moritz_> @tell Auzon re whitespaces/tabs: the consensus is 4 space. See docs/Pugs/Doc/Hack.pod section Editing for details

[09:39] <lambdabot> Consider it noted.

[09:43] <moritz_> pmurias: is the current svn revision enough to identify the elf version?

[09:43] *** renormalist joined
[09:49] *** exp_evalbot left
[09:49] <pugs_svnbot> r20555 | moritz++ | [evalbot] first attempt to incorporate revision numbers into 'perl6:' output

[09:50] *** exp_evalbot joined
[09:50] <moritz_> perl6: say "hi"

[09:50] *** exp_evalbot left
[09:50] *** exp_evalbot joined
[09:51] *** exp_evalbot left
[09:51] <pugs_svnbot> r20556 | moritz++ | [evalbot] second try

[09:51] *** exp_evalbot joined
[09:52] <moritz_> perl6: say "hi"

[09:52] <exp_evalbot> kp6 r20556: OUTPUT[hi␤]

[09:52] <exp_evalbot> ..pugs: OUTPUT[hi␤]

[09:52] <exp_evalbot> ..rakudo r: OUTPUT[hi␤]

[09:52] <exp_evalbot> ..elf r20556: OUTPUT[hi␤]

[09:53] <moritz_> rakudo: say "hi"

[09:53] <exp_evalbot> OUTPUT[hi␤]

[09:55] *** exp_evalbot left
[09:55] <pugs_svnbot> r20557 | moritz++ | [evalbot] rakudo should now tell its svn revision

[09:55] *** exp_evalbot joined
[09:55] <moritz_> rakudo: say "hi"

[09:55] <exp_evalbot> rakudo r 27842OUTPUT[hi␤]

[09:56] <moritz_> perl6: say "test"

[09:56] <exp_evalbot> kp6 r20557: OUTPUT[test␤]

[09:56] <exp_evalbot> ..pugs: OUTPUT[test␤]

[09:56] <exp_evalbot> ..rakudo r27842: OUTPUT[test␤]

[09:56] <exp_evalbot> ..elf r20557: OUTPUT[test␤]

[09:57] *** exp_evalbot left
[09:57] <pugs_svnbot> r20558 | moritz++ | [evalbot] whitespace fix

[09:57] <moritz_> rakudo: say "test"

[09:57] *** exp_evalbot joined
[09:57] <moritz_> rakudo: say "test"

[09:57] <exp_evalbot> rakudo r27842 OUTPUT[test␤]

[10:03] *** alc left
[10:04] *** ruoso joined
[10:05] <bacek_> moritz_, ok

[10:14] *** IllvilJa joined
[10:20] *** galf1 left
[11:03] *** elmex joined
[11:38] <pmurias> moritz_: the revision number should be enough

[11:39] <moritz_> pmurias: good, that's implemented now

[12:07] *** alanhaggai joined
[12:50] *** iblechbot left
[13:00] *** cmarcelo joined
[13:06] *** jhorwitz joined
[13:06] *** detrolex joined
[13:07] *** detrolex left
[13:08] *** detrolex joined
[13:09] *** rindolf joined
[13:16] *** wknight8111 joined
[13:23] *** Patterner left
[13:23] *** Psyche^ joined
[13:24] *** Psyche^ is now known as Patterner

[13:26] <detrolex> im looking for some really interesting regex stuff

[13:26] <detrolex> anyone got any

[13:26] <detrolex> like you know for fun:P

[13:26] <diakopter> detrolex: do you mean interesting rules?

[13:27] <detrolex> yeah!

[13:27] <diakopter> I don't know [of] any

[13:28] <moritz_> detrolex: you can t try to understand Perl 6' standard grammar ;)

[13:28] <detrolex> :P

[13:28] <detrolex> in time my friend, in time

[13:29] <moritz_> detrolex: what kind of fun are you after? crafting regexes yourself?

[13:31] <moritz_> detrolex: the most robust solution on perl 6 ground is certainly PGE, so I'd suggest playing with that

[13:35] <detrolex> let me have a look

[13:42] <moritz_> afk

[14:22] *** pbuetow joined
[14:27] *** TJCRI joined
[14:32] *** gbacon left
[14:48] *** alc joined
[15:14] <rakudo_svn> r27848 | pmichaud++ | [rakudo]:

[15:14] <rakudo_svn> r27848 | pmichaud++ | * Update $! handling in 'try' blocks.

[15:14] <rakudo_svn> r27848 | pmichaud++ | * bacek++ for ideas and suggestions on this.

[15:17] *** Ched- left
[15:17] *** fridim_ joined
[15:21] *** chris2 joined
[15:22] *** gbacon joined
[15:22] *** jjore left
[15:23] *** sscaffidi joined
[15:23] *** jjore joined
[15:23] *** jjore is now known as zz_jjore

[15:23] *** zz_jjore is now known as jjore

[15:25] *** chris2 left
[15:26] *** BinGOs joined
[15:30] *** cosimo left
[15:36] *** meppl left
[15:37] *** meppl joined
[15:38] *** cmarcelo left
[15:42] *** meteorjay joined
[15:46] *** kaether left
[15:47] <cj> hey folks

[15:47] <moritz_> hey cj

[15:47] <cj> where is the p6 grammar documented?

[15:47] <moritz_> (that even rhymes)

[15:48] <moritz_> in http://svn.pugscode.org/pugs/src/perl6/STD.pm

[15:50] <cj> moritz_: "hey" doesn't sound like "jota"

[15:50] <cj> I'm so confused! :)

[15:51] <moritz_> cj: I'd prononunce your name "cee-jay" ;)

[15:52] <cj> yeah, me too, but sometimes I use "say-jota" to be different :)

[15:52] *** Southen joined
[15:53] <cj> so, which tokens are involved in C<<say "hello, world!">> ?

[15:53] <moritz_> uhm, many

[15:54] <moritz_> you might try cheat+gimme5+STD5_run to find out

[15:54] <cj> I'd like to get the list so I can start create a simple DLR implementation

[15:54] <cj> eh?

[15:54] *** adb_ joined
[15:54] <moritz_> look at src/perl6

[15:55] <moritz_> larry hacked up a few tools that can mostly run STD.pm by now

[15:55] <moritz_> 'cheat' simplifies the grammar

[15:55] <cj> moritz_: oh?  what kinds of tools?

[15:55] <moritz_> and 'gimme5' translates it to perl 5 code

[15:56] <moritz_> and 'STD5_run' executes the result of './cheat STD.pm | gimme5 > STD5.pm'

[15:56] <pmichaud> rakudo's parse of C<<say "hello, world!">>  :   http://nopaste.snit.ch/13082

[15:56] <pmichaud> it's not exactly the same as what STD.pm will give, but it's pretty close.

[15:56] <moritz_> cj: and you might be interested in 'elf', which is a bootstrapped Perl 6 compiler that uses a ruby-translation of STD.pm as its grammar

[15:57] <moritz_> it lives in misc/elf/ in the pugs repo

[16:00] <cj> maybe I ought to just start with C<<"hello, world!">>

[16:00] <moritz_> ;)

[16:01] *** awwaiid joined
[16:01] <cj> who is raduko, and how how do I get her to emit the AST (that's what it is, isn't it) for "hello, world!" ?

[16:01] <moritz_> rakudo is Perl 6 on parrot

[16:02] <moritz_> ../../parrot perl6.pbc --target=parse

[16:02] <moritz_> ../../parrot perl6.pbc --target=parse $file # actually

[16:02] <moritz_> parrot is https://svn.perl.org/parrot/trunk, and rakudo is in languages/perl6

[16:02] <lambdabot> Title: Revision 27849: /trunk

[16:05] *** Ched- joined
[16:06] *** elmex left
[16:07] <cj> build build build

[16:08] *** Southen_ left
[16:09] <pmichaud> what I just displayed was the parse tree

[16:09] <pmichaud> for the ast, use --target=past

[16:11] <pmichaud> rakudo's ast for C<< say "hello, world!" >>  :   http://nopaste.snit.ch/13083

[16:12] *** iblechbot joined
[16:13] <cj> cc -o miniparrot src/main.o \ -Wl,-rpath=/usr/src/svn/parrot/trunk/blib/lib -L/usr/src/svn/parrot/trunk/blib/lib -lparrot -lpthread -lm -L/usr/lib  -licuuc -licudata -lpthread -lm -ldl -lm -lpthread -lcrypt -lrt -lreadline -lpcre -lcrypto  -L/usr/local/lib -Wl,-E   src/null_config.o

[16:13] <cj> /usr/src/svn/parrot/trunk/blib/lib/libparrot.so: undefined reference to `U16_GET_UNSAFE'

[16:14] *** mofino left
[16:14] <cj> $ apt-file search u16.h

[16:15] <cj> hurm...

[16:15] <cj> er, utf16.h, probably :)

[16:15] <cj> $ sudo apt-get install libicu36-dev

[16:16] *** armagad_ joined
[16:17] *** eternaleye_ joined
[16:17] <pmichaud> afk  # lunch, errands

[16:17] *** eternaleye left
[16:21] *** rindolf left
[16:24] *** stevan_ left
[16:39] *** stevan_ joined
[16:47] *** eternaleye_ left
[16:49] *** justatheory joined
[16:50] *** nipotaway is now known as nipotan

[16:52] *** Psyche^ joined
[17:03] <pmurias> avar: would you be interested with working on the elf lisp backend?

[17:03] <avar> elf?

[17:04] *** Patterner left
[17:04] *** Psyche^ is now known as Patterner

[17:04] <moritz_> a bootstrapped perl 6 compiler with perl 5 backend and ruby-translated STD.pm as a parser

[17:05] *** kanru joined
[17:06] <pmurias> developed mainly by mncharity

[17:06] <moritz_> and extended a bit by pmurias ;)

[17:07] <pmurias> ;)

[17:09] <moritz_> feather's apache won't start, says "no space left on device"

[17:09] <moritz_> odlly there's pretty much left

[17:10] <moritz_> a 'aptitude autoclean' freed 1GB

[17:12] <moritz_> http://perlpunks.de/paste/show/483c40b4.14db.28a any idea what the offending partition could be?

[17:14] <moritz_> all partitions are mounted rw

[17:14] <diakopter> it's the tmp

[17:14] <moritz_> with 4GB still available?

[17:15] <Auzon> Is there a running instance of Apache?

[17:15] <lambdabot> Auzon: You have 2 new messages. '/msg lambdabot @messages' to read them.

[17:15] <Juerd> moritz_: Have you straced yet?

[17:15] <Auzon> ﻿/msg lambdabot @messages

[17:15] <moritz_> Juerd: no

[17:15] <Auzon> wtf.

[17:15] <Juerd> moritz_: Do you have time or do you want me to do it?

[17:15] <moritz_> Auzon: leading non-printable char

[17:15] <Auzon> yeah... but still

[17:15] <Juerd> Auzon: Just say "messages" in the channel :)

[17:15] <Auzon> I didn't want to flood it ;)

[17:15] <Juerd> Eh, @messages

[17:15] <Juerd> 2 is doable :)

[17:16] <moritz_> Juerd: I'll try, but I don't know if I'll have any luck

[17:16] <Juerd> moritz_: Let me know your findings

[17:16] <Juerd> What was that new channel again?

[17:16] <moritz_> Juerd: #perl6-soc ?

[17:17] <Juerd> Ah, danke

[17:17] <pmurias> avar: elf lives in the pugs repo under misc/elf

[17:19] <avar> it's bootstrapped already?

[17:19] <diakopter> moritz_: fix-ed

[17:19] <Auzon> Yep. It's written in Perl 6.

[17:20] <moritz_> diakopter++

[17:20] <moritz_> diakopter: what did you do to fix it?

[17:20] <diakopter> thanks to http://myrandomreviews.com/2007/11/17/no-space-left-on-device-mod_rewrite-could-not-create-rewrite_log_lock/

[17:20] <lambdabot> Title: 49 No space left on device: mod_rewrite: could not create rewrite_log_lock 36, http://tinyurl.com/5o75ey

[17:20] <moritz_> ah, I see

[17:20] <Juerd> diakopter++ for fixing

[17:20] <Juerd> moritz++ for trying

[17:28] *** cjfields joined
[17:31] <pmurias> avar: the parser is not bootstraped but everything else is

[17:31] *** tobeya joined
[17:31] *** eternaleye_ joined
[17:33] *** nothingmuch left
[17:33] *** nothingmuch joined
[17:35] <pugs_svnbot> r20559 | pmurias++ | added quotemeta

[17:35] <pugs_svnbot> r20559 | pmurias++ | replaced a use of Data::Dumper with quotemeta

[17:35] <pugs_svnbot> r20559 | pmurias++ | marked a HACK

[17:35] *** rakudo_svn left
[17:36] <pugs_svnbot> r20560 | moritz++ | [svn-search]

[17:36] <pugs_svnbot> r20560 | moritz++ |  * :retab

[17:36] <pugs_svnbot> r20560 | moritz++ |  * change index order to hopefully get consistently sorted results

[17:36] *** rakudo_svn joined
[17:41] *** vixey left
[17:42] <pmurias> swimming&

[17:42] <pugs_svnbot> r20561 | moritz++ | [svn-search] previous commit didn't work, let's try it revision by revision :(

[17:44] *** schmalbe joined
[17:46] *** alanhaggai left
[17:46] *** alanhaggai joined
[17:47] <diakopter> [particle]: did you ever get re-engine-TRE running on windows?

[17:47] <[particle]> no. did i ever try?

[17:48] <diakopter> [particle]: http://irclog.perlgeek.de/perl6/2008-02-22#i_211606

[17:48] <lambdabot> Title: IRC log for #perl6, 2008-02-22

[17:53] <[particle]> i guess i did try. never got it working, and no longer need it, as TimToady has moved away from tre

[17:55] <diakopter> Cursor5.pm in svn wants it

[17:58] *** braceta joined
[17:59] *** alanhaggai left
[17:59] *** alanhaggai joined
[18:01] *** alanhaggai left
[18:02] *** alanhaggai joined
[18:06] <diakopter> well, I got further by grabbing the libintl stuff from mingw-gettext-0.17-1.fc8.x86_64.rpm... but now it's failing on regerror.o:regerror.c:(.text+0x25): undefined reference to `libintl_gettext'

[18:06] <diakopter> that could be b/c it's amd64; oops

[18:27] *** jferrero joined
[18:32] *** jferrero left
[18:39] *** kst left
[18:46] *** jferrero joined
[18:56] *** ruoso left
[19:02] *** kst joined
[19:07] *** sscaffidi left
[19:08] <cj> make: *** No rule to make target `src/call_list.txt', needed by `src/nci.c'.  Stop.

[19:09] <cj> hurm.

[19:09] <japhb> ur?

[19:09] <moritz_> cj: I've ssen that error on a mailing list resently

[19:09] <cj> http://rafb.net/p/yyJGrU20.html

[19:09] <lambdabot> Title: Nopaste - No description

[19:09] <japhb> cj: the problem is that you did make clean instead of make realclean

[19:10] <cj> oh.

[19:10] <cj> nobody tells me these things.

[19:10] <japhb> cj: It's a bug, make clean should have done the right thing

[19:10] <cj> realcleaning

[19:10] <japhb> cj: the patch is already submitted, but hasn't been accepted yet.

[19:11] <cj> it has to be accepted before applied!? I thought this was perl!

[19:11] <cj> k.  I'm going to lunch while that churns

[19:12] <japhb> cj: Parrot is rather un-Pugs-ish in that respect.

[19:12] <moritz_> ;)

[19:26] <pmurias> i once took part in a python project where my patches were refactored before being applied, which really nice

[19:35] *** ron_ joined
[19:36] *** jferrero left
[19:36] <ron_> rakudo: sub foo($a) {say $a} ; my $x = ;

[19:36] <exp_evalbot> rakudo r27852 OUTPUT[Statement not terminated properly at line 1, near "= ;"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[19:38] *** sscaffidi joined
[19:38] *** wknight8111 left
[19:38] *** wknight8111 joined
[19:39] *** schmalbe left
[19:39] <ron_> non terminated example above seems to core dump when run as ./perl6.exe or ./perl6 under cygwin OR ubuntu

[19:40] *** cjfields left
[19:40] * moritz_ builds perl6

[19:41] <moritz_> works fine in debian

[19:43] <ron_> updated to 27852 under cygwin afaict - will try to keep looking

[19:43] *** ron_ left
[19:44] *** ron_ joined
[19:44] <Auzon> ron_: doesn't core dump or anything for me either

[19:46] <moritz_> should we deduce that ubuntu is just as weird (as development platform) as windows? *g*

[19:46] <wolverian> let me try, sec

[19:46] <wolverian> (I have ubuntu)

[19:47] <ron_> Statement not terminated properly at line 1, near "= ;\r\n\r\n# r" ...current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82) ... many lines ... called from Sub 'parrot;Perl6::Compiler;main' pc 10064 (perl6.pir:186) then Aborted (core dumped)

[19:47] <wolverian> git svn rebasing first...

[19:48] <armagad_> moritz_: Don't like Mark hear you say that

[19:49] <armagad_> He will send the Shuttleworthnauts to whoop you

[19:49] <moritz_> armagad_: if Mark would listen to me I could tell him lots of things ;)

[19:49] <wolverian> oops, I'm using the git mirror already

[19:49] <wolverian> no wonder git svn was slow :) 

[20:01] <pmurias> is @array:k legal perl6?

[20:01] *** alc left
[20:01] <pmurias> i can't find the place where it is specced and @array.:k also exists

[20:02] <moritz_> pmurias: I've seen it recently, let me take a look...

[20:02] <moritz_> S02:1532 might be a start

[20:03] <moritz_> that applies to @array[*]:k at least

[20:04] <moritz_> don't know if it applies to @array directly, but I think it should

[20:09] <wolverian> *** glibc detected *** ./perl6: double free or corruption (!prev): 0x0000000000e83310 ***

[20:09] <moritz_> valgrind!

[20:09] <wolverian> this with 27852 

[20:09] <pmurias> moritz_: S02:1532 is where it took the code from

[20:09] <wolverian> the program ron_ pasted

[20:09] <wolverian> on ubuntu 8.04

[20:10] <moritz_> sometimes I think that Perl 6 is so vast that I'll never going to learn it

[20:10] <moritz_> and I can hardly imagine it being fully implemented

[20:10] <wolverian> moritz_, installing...

[20:10] <Auzon> Are the cross referenced tests being smoked regularly?

[20:10] <Auzon> http://perlcabal.org/syn/ , that is

[20:10] <lambdabot> Title: Official Perl 6 Documentation

[20:11] <pmurias> moritz_: it's the perl5 that I'm afraid I'll never full learn

[20:11] <pmurias> * fully

[20:11] <moritz_> Auzon: I think so, yes - once a day

[20:12] * wolverian glares at the 37mb valgrind package

[20:12] *** ruoso joined
[20:14] <moritz_> Auzon: but since pugs is as dead as a open source dog can be I wouldn't pay the smokes too much attention

[20:14] <Auzon> Hm, ok.

[20:14] *** japhb left
[20:15] <wolverian> lots of valgrind warnings

[20:16] <wolverian> huh, with valgrind I don't get the core dump

[20:16] <moritz_> maybe valgrinds intercepts it somehow

[20:17] <wolverian> yeah

[20:18] <pmurias> avar: if you have any requests/question concerning elf please don't hestiate to ask ;)

[20:18] <TimToady> Auzon: we might possibly have an @*INC, but if so, it would only be for the user's unofficial modules

[20:19] *** aindilis left
[20:19] *** ron_ left
[20:19] *** aindilis joined
[20:19] *** ron_ joined
[20:20] <Auzon> TimToady: Alright. Is there any way to check the traits of a variable/subroutine/module/etc?

[20:20] <TimToady> traits that want to be checkable should be mixing in an appropriately named method

[20:20] <wolverian> I'm failing to use allyoop :(

[20:20] <wolverian> it doesn't want to open the source files for the errors

[20:22] <wolverian> oh, -I

[20:22] <pmurias> TimToady: why does both @a.kv @a.:kv and @a:kv exist and what's the diffrence?

[20:22] <pugs_svnbot> r20562 | pmurias++ | [elf] removed p5 prototypes from methods (useless)

[20:22] <pugs_svnbot> r20562 | pmurias++ | removed a couple of nonspec methods

[20:22] <wolverian> damn, still doesn't work

[20:23] <moritz_> pmurias: @array[1,3,5].kv will return 0, 1, 2 as keys

[20:23] <TimToady> there's no such thing as @a:kb

[20:23] <TimToady> :kv

[20:23] <pmurias> there is @a:k

[20:23] <TimToady> no

[20:23] <TimToady> there is @a[@x]:k

[20:24] <TimToady> adverbs modify operators, not nouns

[20:24] <TimToady> the :k is modifying the subscript operator

[20:24] <pmurias> S09:532

[20:25] <wolverian> at least I have the relevant stack trace now

[20:25] <wolverian> anyone want it? :)

[20:25] <moritz_> is @a[@x]:k translated to @a.postcircumfix:<[ ]>(@x, :k) ?

[20:25] <moritz_> wolverian: [email@hidden.address] wants it

[20:25] <wolverian> okies

[20:25] <TimToady> well, S09 is wrong :)

[20:25] <cj> cool.  parrot compiled for me :)

[20:26] <TimToady> I believe that passage in S09 was written before we'd invented .:kv and such

[20:27] <pmurias> .:kv invokes the :kv method?

[20:27] *** wknight8111 left
[20:28] *** wknight8111 joined
[20:28] <TimToady> presumably--we're more interested in the way %x.:delete<x> works with that notation

[20:28] <TimToady> but generically it's a way of modifying a subscript from the front instead of the back

[20:28] <TimToady> likewise %x.:exists<x>

[20:29] <TimToady> the syntax also gets used for :r file tests

[20:29] <wolverian> moritz_, does it take attachments?

[20:29] <TimToady> so the S09 attempt to apply :kv to a noun is just a fossil, I think

[20:30] <moritz_> wolverian: I think so

[20:30] <avar> pmurias: is the misc/elf directory self-contained?

[20:30] <pmurias> avar: it uses misc/STD_red for parsing

[20:30] <avar> so I can just check out misc?

[20:30] <wolverian> moritz_, sent

[20:30] <pmurias> avar: yes

[20:31] <moritz_> wolverian++

[20:31] <wolverian> damn, I forgot to attach the actual full backtrace

[20:31] <wolverian> but uh, I don't know how to redirect that to a file

[20:32] <wolverian> it seems to want to go to the terminal, no matter what I do...

[20:32] <pmurias> TimToady: i don't need to write a patch for S09? ;)

[20:32] <TimToady> in any case, @foo:kv would now parse the :kv as an extension to the identifier 'foo'

[20:32] <Auzon> wolverian: did you try 2>&1 >output.log

[20:32] <wolverian> yes

[20:32] <TimToady> I'll try to fix S09 later today

[20:32] <wolverian> it still goes to the terminal 

[20:33] <wolverian> I had this problem with a python core dump too at some point

[20:42] *** japhb joined
[20:47] <wolverian> hm, gdb isn't helping much since I don't really know the parrot source

[20:48] *** cjfields joined
[20:50] *** dolmen joined
[20:59] *** vixey joined
[21:10] *** pmurias left
[21:13] *** fridim_ left
[21:15] *** TJCRI left
[21:16] *** mj41 left
[21:21] <diakopter> avar: I'm having a heckofa time installing re::engine::TRE on strawberry 5.10.0.1  may I nopaste you the dmake output?

[21:22] <diakopter> TimToady: Cursor.pm wants re::engine::TRE - should I ignore that for now?

[21:22] <diakopter> Cursor5.pm

[21:22] <avar> diakopter: sure

[21:26] <Auzon> diakopter: nopaste here: http://sial.org/pbot/perl6

[21:26] <meppl> good night

[21:28] <pasteling> "diakopter" at 209.9.237.164 pasted "dmake clean && perl Makefile.PL && dmake >out.log 2>&1" (795 lines, 28.8K) at http://sial.org/pbot/31135

[21:29] *** meppl left
[21:30] <diakopter> avar: and that's after adding LIBS=>'-lintl -liconv' to the tre\Makefile.PL to stop it complaining about that

[21:31] <avar> seems lke some odd linker error

[21:31] <avar> yes it depends on gnu stuff implicitly I found:)

[21:31] <avar> does building libtre by itself work on windows?

[21:31] <avar> it has some test programs IIRC

[21:32] <diakopter> failed with same error, if you mean the tre\Makefile.PL in re::engine::TRE

[21:33] <diakopter> is there a separate package of libtre?

[21:34] <avar> tre is a regex library distributed in its own package, I just include it

[21:36] <diakopter> ohh..

[21:36] <avar> I'm not much help, I haven't built this in ages and I've forgotten how it all goes

[21:36] <avar> But try to build the tre tar.gz you find on google

[21:37] <dolmen> perl6: say "abc" eq "abc"

[21:37] <exp_evalbot> kp6 r20562: OUTPUT[1␤]

[21:37] <exp_evalbot> ..pugs: OUTPUT[1␤]

[21:37] <exp_evalbot> ..rakudo r27856: OUTPUT[1␤]

[21:37] <exp_evalbot> ..elf r20562: OUTPUT[1␤]

[21:37] <dolmen> perl6: say "abc" !eq "abc"

[21:37] <exp_evalbot> kp6 r20562: OUTPUT[syntax error at position 10, line 1 column 10:␤say "abc" !eq "abc␤          ^ HERE␤]

[21:37] <exp_evalbot> ..pugs: OUTPUT[␤]

[21:37] <exp_evalbot> ..rakudo r27856: OUTPUT[Statement not terminated properly at line 1, near "!eq \"abc\""␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[21:37] <exp_evalbot> ..elf r20562: OUTPUT[Unimplemented infix_prefix_meta_operator or infix_circumfix_meta_operator at ./elf_f_faster line 2744␤]

[21:38] <diakopter> yikes; it appears I need Microsoft Visual C++ 6.0

[21:38] <dolmen> perl6: say "abc" ne "abc"

[21:38] <exp_evalbot> kp6 r20562: OUTPUT[0␤]

[21:38] <exp_evalbot> ..pugs: OUTPUT[␤]

[21:38] <exp_evalbot> ..rakudo r27856: OUTPUT[0␤]

[21:38] <exp_evalbot> ..elf r20562: OUTPUT[␤]

[21:39] <Auzon> perl6: say "abc" eq "abc"

[21:39] <exp_evalbot> kp6 r20562: OUTPUT[1␤]

[21:39] <exp_evalbot> ..pugs: OUTPUT[1␤]

[21:39] <exp_evalbot> ..rakudo r27856: OUTPUT[1␤]

[21:39] <exp_evalbot> ..elf r20562: OUTPUT[1␤]

[21:39] <Auzon> I'm glad we all agree on that.

[21:40] *** ron__ joined
[21:41] *** ron_ left
[21:41] <avar> pmichaud: the elf source tree is confusing:)

[21:42] <pmichaud> not my fault.  :-)

[21:42] <avar> How does it compare to kp6 in completeness / bootstrapping etc

[21:42] <avar> s/pmichaud/pmurias/

[21:43] *** Alias__ left
[21:47] *** pbuetow left
[21:50] *** allbery_b left
[22:05] *** ron___ joined
[22:06] *** ron__ left
[22:14] *** allbery_m joined
[22:15] *** cjfields left
[22:15] *** allbery_m is now known as eviltwin_b

[22:25] *** eviltwin_b is now known as allbery_b

[22:28] *** sscaffidi left
[22:28] *** alanhaggai left
[22:29] *** allbery_b left
[22:31] *** wknight8111 left
[22:35] *** allbery_m joined
[22:35] *** allbery_m is now known as allbery_b

[22:35] *** iblechbot left
[22:39] *** eternaleye_ left
[22:39] *** wknight8111 joined
[22:44] *** FurnaceBoy joined
[23:05] <TimToady> diakopter: as you no doubt have discovered, Cursor5 still requires tre

[23:07] <TimToady> mainly because I discovered ways of working around most of its limitations, and I don't want to write a real DFA engine without real Perl 6...

[23:08] *** Khisanth left
[23:09] *** Khisanth joined
[23:19] *** jferrero joined
[23:20] <speckbot> r14546 | larry++ | Cleanup bogus use of adverbs on bare terms

[23:25] *** alester_ joined
[23:26] *** eternaleye_ joined
[23:31] *** wknight8111 is now known as wknight-away

[23:34] *** mncharity joined
[23:35] *** alester_ left
[23:35] *** cjfields joined
[23:35] <mncharity> avar: ping?

[23:36] <avar> mncharity: pong

[23:37] <mncharity>  #!/usr/bin/env elf_f_faster\nuse v6; ...    to write elfish scripts (assumes misc/elf is in your PATH;

[23:37] *** braceta left
[23:38] <avar> Yes I saw that in the readme

[23:38] *** braceta joined
[23:38] <mncharity> elf_f_src/'s Elf_Faster.pm and EmitFasterP5.pm  is an example of creating a variant in the elf_f_src directory, misc/elfish/showcode an example of building an elf derivative elsewhere.

[23:38] <mncharity> run-tests.results_faster will give some idea of test status.

[23:39] <mncharity> make rebuild  will let you watch the self-compile.

[23:41] <mncharity> in comparison to kp6, it's vastly faster, is using a non-p6 parser, and has a fairly, but not yet completely pure, bootstrap.

[23:41] <mncharity> it's design focus was creating an environment to create p6 compilers.

[23:43] <mncharity> long term, I'd ideally like EmitSimple to be refactored so the IR nodes call a microkernel vocabulary of methods to generate backend source, rather than doing it themselves.  but not there yet.

[23:44] *** wknight-away is now known as wknight8111

[23:46] <mncharity> runtime still doesn't really support named arguments, let alone closures.  the performance demands of the combined parser/compiler define the constraints on runtime api/abi.  and don't have a p6 parser yet.  so have a multiple-api story with only moderate overhead, but I'm wondering whether to

[23:47] <mncharity> convert STD_red to p6 first, to avoid unpleasant surprises.

[23:52] <mncharity> pmurias: re 'the parser is not bootstraped but everything else is', a p6 runtime implementation doesn't exist either (ie, multimethod dispatch, etc).

[23:53] <mncharity> so we're not quite ready to a p6 metacircular evaluator.

[23:53] <mncharity> *do a

