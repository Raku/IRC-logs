[00:17] *** Eidolos left
[00:17] *** Eidolos joined
[00:27] *** yewenbin joined
[00:30] *** luqui left
[01:03] *** Schwern joined
[01:11] *** mww113 joined
[01:11] *** eternaleye left
[01:11] <mww113> please join #leifswolfbot, we need more players

[01:11] *** mww113 left
[01:14] <xerohg> lol

[01:14] <xerohg> so cute

[01:23] *** syle left
[01:24] *** [particle]ventus joined
[01:25] *** justatheory joined
[01:33] * CMA ha regresado.

[01:33] *** Ched- left
[01:34] *** Ched- joined
[01:46] *** alanhaggai joined
[02:03] *** alanhaggai_ joined
[02:03] *** kanru left
[02:15] *** justatheory left
[02:17] *** alanhaggai left
[02:21] *** eternaleye joined
[02:21] *** alanhaggai_ left
[02:39] *** penk joined
[02:44] *** luqui joined
[02:53] *** CMA left
[02:53] *** alanhaggai joined
[03:04] *** pravus left
[03:07] *** elmex_ joined
[03:07] *** pravus joined
[03:20] *** elmex left
[03:20] *** elmex_ is now known as elmex

[03:27] *** japhb left
[03:28] *** japhb joined
[03:55] *** pbuetow left
[03:58] *** alanhaggai left
[04:00] *** Schwern left
[04:10] *** mncharity left
[04:12] *** alanhaggai joined
[04:14] *** wknight8111 left
[04:16] *** alanhaggai_ joined
[04:18] *** eternaleye left
[04:28] *** justatheory joined
[04:28] *** nipotan is now known as nipotaway

[04:28] *** luqui left
[04:30] *** Psyche^ joined
[04:32] *** alanhaggai left
[04:36] *** Brony joined
[04:36] <Brony> Hi folks.

[04:36] <Brony> Intelligent financiers here?

[04:40] <Brony> Today I noticed a fairly ugly chump with the most perfectly maintained, expensively dressed trophy you could imagine.

[04:44] <Brony> I was on here just last week with another "top pick" for the financially troubled.

[04:44] <Brony> Those who splurged then are up already a beautiful 10%.

[04:44] <Auzon> What are you going on about?

[04:45] <Brony> Auzon, Where?

[04:46] <Auzon> I just didn't realize that this was #finance-after-dark :P

[04:47] *** Patterner left
[04:47] *** Psyche^ is now known as Patterner

[04:48] *** lisppaste3 left
[04:48] *** justatheory left
[04:49] <Brony> I tried to join all the most intelligent channels but is this as good as it gets?

[04:50] <Auzon> Depends on what type of intelligence you want us to have.

[04:51] <Brony> I cashed out some of my investments so that I might enjoy spending my money as much as I do investing it.

[04:51] <Brony> But I can't help but feel the itch, still, to redeploy it.

[04:52] <Brony> I have noticed that most people seem to save and save and never really enjoy their fruit. More, rather, the thought(s) of it.

[04:57] <Brony> Buffett is said to be the wealthiest man in the world. But that is a technicality.

[04:58] *** syle joined
[04:58] *** lisppaste3 joined
[04:59] <Brony> In our world, 5% of the people own 90% of the wealth.

[04:59] <Brony> Which means that 95% of the people are livong off 10% of the worldwide wealth.

[05:01] <Brony> I guess it is more satisfying to own stake in exciting businesses than it is to actually consume money.

[05:01] <Brony> One cannot help but think of all the opportunity costs.

[05:02] <Brony> When I was younger I lived lavishly at times and now as an investor I consider all the precious money I flushed away.

[05:09] *** alanhaggai_ left
[05:33] <Brony> Do you folks enjoy expensive women?

[05:33] <Brony> I can still smell the perfume of the first stripper I had when I was 19.

[05:39] *** eternaleye joined
[05:49] <Brony> When a gentleman amasses enough wealth, he can own an entire shopping centre, a hugely lucrative venture in most instances.

[05:49] *** azure1st left
[05:51] <Tene> I'm really curious about why you're discussing this here.

[05:53] *** Lorn_ joined
[05:53] *** Lorn left
[05:55] <Brony> 201cThe results reinforce the grade and tonnage estimates of this growing asset and the very significant potential of Jacques Lake, the results are similar to those for the Michelin Deposit in its initial exploration stages,201d

[05:55] <Brony> Also worthy of note is that there is no groundwater, metallurgical or rock mechanic issues identified to date at the Jacques Lake Deposit, which is good to know.

[06:12] *** Lorn joined
[06:20] *** [particle]ventus left
[06:25] *** Lorn_ left
[06:25] *** Lorn_ joined
[06:30] <Brony> Truly, if you look through a cemetery or on plaques commemorating lives well lived,

[06:30] <Brony> you will notice that it is common for wives to live a good 20 years longer than husbands.

[06:30] <Brony> Going by date of birth versus date of death.

[06:31] *** Lunchy joined
[06:32] <Brony> Women have much less to concern themselves with because they have learned that men are all too eager to take care of it for them.

[06:33] <Brony> But I suggest certain men take after women in many respects.

[06:33] <Brony> Truly, it seems they know how to live this life.

[06:33] *** Lorn_ left
[06:34] *** Lunchy_ left
[06:38] *** Lorn left
[06:53] *** Lorn joined
[07:02] <Brony> In my experiences, black women more than any others have the greatest tendency to flat-out seek "sugar daddies."

[07:02] <Brony> It is amusing to me.

[07:03] <Brony> So this *very* well-kept black woman with this awkward, ugly, nerdish white man...

[07:04] *** Lorn_ joined
[07:04] *** meppl joined
[07:05] *** iblechbot joined
[07:10] <Brony> I was wondering how a chump like that, stepping out of his Lexus, managed to get such a HOT, perfectly maintained wife by his side.

[07:11] <Brony> But then I realized she was black and that she was not his wife at all. But rather, using him for his means and his dinners.

[07:12] <Brony> I just love the black woman's love of material and luxury.

[07:12] <Brony> There is nothing they love more than a wealthy whitey.

[07:13] *** ChanServ sets mode: +o Tene

[07:13] *** Brony left
[07:13] *** Tene sets mode: -o Tene

[07:13] <Tene> Interesting.

[07:13] <Auzon> Very.

[07:14] <Auzon> Actually, only interesting in that he had no clear motive.

[07:20] *** Lorn left
[07:27] *** syle left
[07:56] *** rindolf joined
[07:57] *** xerohg left
[07:57] *** bsb left
[08:04] *** meppl left
[08:05] *** masak joined
[08:17] <Tene> The pugscode main page has a 'Download' link to http://rakudo.org/perl6/index.cgi?download_perl_6 which is broken

[08:45] <pugs_svnbot> r20378 | moritz++ | [t/spec] added simple test for positional placeholders

[08:45] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20378

[08:45] <lambdabot> Title: Changeset 20378 - Pugs - Trac

[08:45] *** jan_ left
[08:54] <pugs_svnbot> r20379 | moritz++ | [t/spec] added smartlink to  positional-placeholders.t

[08:54] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20379

[08:54] <lambdabot> Title: Changeset 20379 - Pugs - Trac

[09:00] <pugs_svnbot> r20380 | tene++ | added simple test for named placeholders

[09:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20380

[09:00] <lambdabot> Title: Changeset 20380 - Pugs - Trac

[09:02] *** syle joined
[09:02] <moritz_> Tene: your test is borked

[09:03] <Tene> moritz_: hm?

[09:03] <moritz_> one_placeholder(2); doesn't set a named arg

[09:03] <moritz_> :bla(2) 

[09:03] <moritz_> or bla => 2

[09:03] <Tene> Wow.  That's awesome how I completely failed there.

[09:03] <Tene> moritz++

[09:04] <moritz_> I fixed it

[09:04] <pugs_svnbot> r20381 | moritz++ | [t/spec] named placeholders should be tested with a name ;-)

[09:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20381

[09:04] <lambdabot> Title: Changeset 20381 - Pugs - Trac

[09:05] <Tene> Although, somehow it was still passing anyway on rakudo?

[09:05] <Tene> What happens when you call foo(1) on sub foo (:$a) { ... }

[09:06] <moritz_> does :$a force named arguments?

[09:06] <Tene> Yes.

[09:06] <Tene> I'll add another test.

[09:06] <moritz_> if so, I guess that's an error

[09:06] <Tene> rakudo does the same thing with normal named arguments.

[09:06] <Tene> What does the spec say?

[09:08] <moritz_> Arguments that correspond to named parameters are evaluated in item

[09:08] <moritz_> context. They can only be passed by name, so it doesn't matter what

[09:08] <moritz_> order you pass them in:

[09:08] <moritz_> the "They can only be passed by name" is the crucial point

[09:08] <moritz_> S06:748

[09:09] <Tene> Huh.  Interesting.

[09:09] <pugs_svnbot> r20382 | tene++ | Add another named placeholder test.

[09:09] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20382

[09:09] <lambdabot> Title: Changeset 20382 - Pugs - Trac

[09:10] *** muixirt joined
[09:12] *** meteorjay joined
[09:20] *** iblechbot left
[09:34] *** mj41 left
[10:09] *** wknight8111 joined
[10:28] *** chris2 joined
[10:35] *** SysPete joined
[10:45] *** iblechbot joined
[10:46] *** SysPete left
[10:52] *** muixirt_ joined
[10:59] *** bbkr_ joined
[10:59] *** bbkr__ left
[11:00] *** alanhaggai joined
[11:01] *** pbuetow joined
[11:09] *** muixirt left
[11:10] *** riffraff left
[11:10] *** zakame_ joined
[11:11] *** zakame_ left
[11:20] <masak> I like how things are moving forward with Perl 6 right now

[11:20] <masak> it makes me excited!

[11:30] <moritz_> aye, rakudo is moving ;)

[11:32] *** cosimo left
[11:33] *** wknight8111 left
[11:35] *** pbuetow left
[11:38] *** cosimo joined
[11:54] *** chris2 left
[11:56] *** syle left
[12:03] *** muixirt_ is now known as muixirt

[12:05] *** wknight8111 joined
[12:08] *** muixirt_ joined
[12:25] *** muixirt left
[12:25] *** muixirt_ is now known as muixirt

[12:32] *** rindolf left
[12:34] *** muixirt left
[12:46] *** ofer left
[12:46] <masak> ok, so what can I do with rakudo today?

[12:47] <masak> is there a summary somewhere? not just small blog posts about new functionality

[12:48] <masak> could I write something semi-large, like a wiki or a chat forum?

[12:49] <moritz_> not really

[12:49] <moritz_> there's no CGI module for rakudo atm

[12:49] * masak guessed so

[12:49] <masak> but there is one for pugs?

[12:49] <moritz_> aye

[12:49] <masak> what prevents one from porting it?

[12:49] <moritz_> dunno

[12:49] <masak> why would it need porting at all? both are p6

[12:50] <moritz_> just run rakudo over ext/CGI/lib/CGI.pm and see what fails

[12:51] <moritz_> I see it uses s:P5:g:i/foo/bar/ a lot

[12:51] <moritz_> I don't think rakudo supports that

[12:55] *** jan joined
[12:59] <Tene> first thing it dies on is default values for subs

[12:59] <Tene> I could work on that today/tonight.

[12:59] <moritz_> I think it's not yet worth the trouble

[12:59] <Tene> Eh, should be pretty simple.

[12:59] <moritz_> I thought you meant working around in CGI.pm code

[13:03] <masak> moritz_: why would being able to use CGI in rakudo not be worth the trouble?

[13:04] <Tene> masak: He meant that trying to modify CGI.pm to run on rakudo wouldn't be worth it, that it would be better to try to modify rakudo to run the current CGI.pm

[13:04] <Tene> I think

[13:04] <moritz_> yes

[13:04] * Tene bbl, class.

[13:04] <masak> ah, ok

[13:04] <masak> yes, sure

[13:04] <masak> that's what I'd like, too

[13:07] * masak just found languages/perl6/docs/STATUS in the parrot repo

[13:07] <masak> good summary

[13:07] <moritz_> is that up-to-date?

[13:08] <masak> dunno

[13:09] <masak> last updated April 17

[13:09] <wolverian> where's the summary of the STATUS status? ;)

[13:12] *** cmarcelo joined
[13:20] *** Psyche^ joined
[13:26] *** alanhaggai_ joined
[13:28] *** wknight8111 left
[13:31] *** TJCRI joined
[13:31] *** Patterner left
[13:31] *** Psyche^ is now known as Patterner

[13:37] *** eternaleye left
[13:41] *** alanhaggai left
[13:50] *** ispy_ joined
[13:51] *** pmurias joined
[13:56] <pmurias> masak: you could use (the object oriented interface) of CGI in elf if you were willing to use a (slight) hack

[13:58] *** peepsalot joined
[14:01] <masak> pmurias: elf?

[14:01] *** alanhaggai_ left
[14:06] <moritz_> elf is mncharity (former putter)'s attempt to bootstrapt STD.pm in ruby

[14:06] <masak> ooh

[14:06] <Tene> Or I could pick up Juerd++'s "good web framework" proposal like I've been meaning to do since I read it.

[14:07] <moritz_> that would be great

[14:07] <Tene> I certainly think it would be.

[14:10] <[particle]> it shouldn't be hard to get rakudo to support rx:P5//, but seems better to update those regexes to perl 6

[14:11] <masak> good exercise in perl 6 regexes, too

[14:12] <[particle]> ja

[14:12] <moritz_> problem was that pugs didn't support s/// very well with P6 regex

[14:14] *** TJCRI left
[14:14] <[particle]> yes, right. it's historical.

[14:15] <[particle]> btw we have mod_perl6 now working with rakudo

[14:15] <pmichaud_> well, rakudo doesn't support s/// yet either :-|

[14:16] *** pmichaud_ is now known as pmichaud

[14:16] <masak> would anyone mind if I translated the 22 s:P5 regexps in CGI.pm to Perl 6 regexps?

[14:17] <masak> should I copy the file and do it somewhere else?

[14:17] *** ting___ left
[14:17] *** ting joined
[14:17] <moritz_> no, that's what revision control is for ;)

[14:17] <masak> true.

[14:17] <moritz_> just do it in place, and whoever doesn't like it can revert it

[14:17] <masak> so, main question again: are people likely to revert it? is it a step backward?

[14:18] <moritz_> no, it's a step forward

[14:18] * masak does it, then

[14:18] <moritz_> as long as pugs isn't maintained, I wouldn't worry about tests that fail with pugs

[14:18] <masak> mm

[14:18] <moritz_> it's not a very nice attitude, but it's not nice to be blocked on a possibly dead project either

[14:19] <masak> can I run my translation proposals by you guys when I'm unsure? my p6regexpese is a bit rusty

[14:19] <moritz_> sure

[14:19] *** rdice joined
[14:19] <masak> \o/

[14:20] <moritz_> I somewho suspect that most regexe translations in CGI.pm will be fairly mechanical

[14:20] *** Lorn_ is now known as Lorn

[14:20] <masak> moritz_: yes, they look easy

[14:20] <masak> but I don't want to accidentally introduce errors because of insufficient understanding

[14:22] <moritz_> don't worry, as soon as the code runs you can test it

[14:22] <moritz_> and before it doesn't matter if it's errornous or not

[14:23] <masak> does to me :)

[14:23] *** rawb joined
[14:23] *** rawb left
[14:24] *** smtms left
[14:26] <masak> I write s:P5:g/[-_](\w)/-$0.uc()/ as s:g/<[-_]>(\w)/{ -$0.uc() }/

[14:27] <masak> comments? are the {} necessary?

[14:27] <[particle]> i'd change (\w) to <alnum>

[14:27] <moritz_> the { } are necessary

[14:28] <masak> [particle]: oki

[14:28] <masak> moritz_: thx

[14:28] <masak> [particle]: do I change \d similarly to something?

[14:28] <[particle]> <digit>

[14:29] <masak> ok. why?

[14:29] <masak> longer, means the same thing

[14:29] <[particle]> it's a full word rather than a funny code

[14:29] <masak> point

[14:29] <moritz_> you can use $<alnum> rather than $0

[14:29] <masak> I'll change

[14:29] <masak> moritz_: huh?

[14:29] <masak> in what way?

[14:29] <moritz_> named captures

[14:30] <masak> so <alnum> makes named capture?

[14:30] <moritz_> yes

[14:30] <[particle]> s:g/<[-_]><alnum>/{ -$<alnum>.uc() }/

[14:30] <masak> neat

[14:31] *** smtms joined
[14:31] *** IllvilJa left
[14:36] <masak> is <[- ... ]> the new [^ ... ] ?

[14:37] <moritz_> <-[...]> I think

[14:37] <masak> ah

[14:38] <moritz_> one more step towards out-of-band signalling ;)

[14:39] <masak> it's rx:i//, not rx//i, wight?

[14:39] <TimToady> yes

[14:40] <masak> TimToady: whoa! don't sneak up on me like that...

[14:40] <moritz_> lol

[14:41] <masak> is & magical in the replacement part of a s///?

[14:41] <TimToady> I'd write that other one as s:g[ <-[ _ ]> <alnum> ] = -$<alnum>.uc

[14:41] <pmichaud> also, \d is faster than <digit>

[14:42] <masak> TimToady: oki, will do

[14:42] <TimToady> & is magical only insofar as you can call a function with it in double quotes

[14:42] <TimToady> if you want a representation of the entire match use $/ or $()

[14:42] <masak> ok

[14:43] <pmichaud> (at least in PGE, \d is faster than <digit>)

[14:43] *** meteorjay left
[14:43] <masak> $temp_key ~~ s:g[ <-[ _ ]> <alnum> ] = -$<alnum>.uc

[14:43] <masak> correct?

[14:43] <moritz_> TimToady: the question nobody could answer so far: does '$object.method: $argument' need a space after the colon?

[14:43] <TimToady> I'd use \d when constructing tokens and <digit> when I want the digit to *be* the token, usually :)

[14:44] <TimToady> yes

[14:44] <moritz_> then the test suite is wrong in several places

[14:45] <masak> \012 is illegal nowadays, yes?

[14:45] <pmichaud> S02 also has       for @x.grep:{ 0 <= $_ < all(@y) } {...}

[14:45] <masak> what about \x8b?

[14:45] <TimToady> yes, \o12 instead

[14:45] <TimToady> \x8b is fine, but it now eats as many hex digits as it can

[14:45] <TimToady> \xbeef

[14:45] <masak> ah

[14:45] <pmichaud> (hex digits are yummy)

[14:46] <TimToady> and if you need to distinguish, use [] insteaqd of {}, as in \x[dead]beef

[14:47] <masak> hm, did ^^ and $$ mean start- and end-of-string nowatimes?

[14:47] *** sscaffidi joined
[14:47] <pmichaud> ^^   start of line    $$   end of line

[14:47] <masak> right

[14:47] <TimToady> ^ and $ are stringy

[14:48] <masak> so, keep the olf ^ and $ in this case

[14:48] <TimToady> grep:{...} is parsed as grep :{...}

[14:48] <pugs_svnbot> r20383 | moritz++ | [spec] S29-hash/: insert space after obj.meth:

[14:48] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20383

[14:48] <lambdabot> Title: Changeset 20383 - Pugs - Trac

[14:48] <pmichaud> aha

[14:49] <pmichaud> so there is a special :{...} form still

[14:49] <pmichaud> I couldn't find it.

[14:49] <TimToady> it's just a strange adverb

[14:49] <TimToady> we have :() for sigs too

[14:49] <TimToady> and infix:<+> is kinda the same

[14:50] <pmichaud> is :{...} in the synopses anywhere ?

[14:50] <moritz_> t/spec/S17-coro/* seems to be all wrong

[14:50] <moritz_> yield() is gone, right?

[14:50] <TimToady> sure, right there is S02 :P

[14:50] <moritz_> and replaced by gather/take

[14:50] <TimToady> yield was never in officially

[14:50] <TimToady> neither was coro

[14:51] <moritz_> ok, then I'll delete the tests

[14:51] <pugs_svnbot> r20384 | masak++ | [CGI.pm] converted P5 regexps to Perl 6 ones

[14:51] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20384

[14:51] <lambdabot> Title: Changeset 20384 - Pugs - Trac

[14:51] <pmichaud> ah, okay

[14:51] <pmichaud> found :{...}  (adverbial block)

[14:51] <pmichaud> I wonder why my 'ack' line didn't find it.

[14:51] <masak> is there a way to build coro/yield in p6?

[14:51] <moritz_> masak: with gather { ...  take }

[14:51] <masak> ah, nice

[14:51] <masak> gather/take is powerful

[14:52] <TimToady> the nice thing about gather is that you get to specify the scope separately from the function interface

[14:52] <masak> what does that mean?

[14:52] <pugs_svnbot> r20385 | moritz++ | [spec] there's no coro { ...  yield; } (superseeded by gather/take)

[14:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20385

[14:52] <TimToady> since take is dynamically scoped

[14:52] <lambdabot> Title: Changeset 20385 - Pugs - Trac

[14:52] <TimToady> the take doesn't have to be inside the gather lexically

[14:53] <moritz_> so is it an error to call take() without a gather?

[14:53] <masak> no, I know that part. but the part about 'scope separate from function interface'

[14:53] <TimToady> it's an error if there's no gather in your outer dynamic scope

[14:53] <moritz_> TimToady: ok

[14:54] <TimToady> you can do nested gather/takes inside a single function, for instance

[14:54] <TimToady> or you can do a gather which calls out to service functions to calculate what to take next

[14:55] *** penk left
[14:55] <TimToady> it's also explicit documentation that a lazy list is expected at the point of the gather

[14:55] <TimToady> rather than having to guess whether foo() is going to return a complete value or a partial value

[14:56] <TimToady> and it's powerful enough you can write an entire regex engine using gather/take for backtracking

[14:57] <moritz_> you can use Coro to implement lazy gather/take in p5 ;-)

[14:57] <TimToady> (metholate did just that, trying to run STD on pugs, but I ran into other issues...)

[14:57] <pugs_svnbot> r20386 | moritz++ | [t/spec] more whitespaces for disambiguation

[14:57] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20386

[14:57] <lambdabot> Title: Changeset 20386 - Pugs - Trac

[14:57] <TimToady> but can you scope it dynamically?

[14:57] <moritz_> yes

[14:58] <moritz_> because the "current Coro" is dynamically scoped

[14:58] <moritz_> you can use it's refaddr to key a global hash, which it turn holds a reference to the lazy list that is being returned

[14:58] <TimToady> but coro can't establish a dynamic scope in its caller, can it?

[14:59] <TimToady> or does it take a closure?

[14:59] <TimToady> if so, nevermind

[14:59] <moritz_> Not quite sure

[15:01] <moritz_> Perl6::GatherTake does (at least basic) dynamic scoping

[15:01] <moritz_> http://perlpunks.de/paste/show/4821c307.2b2a.bc

[15:04] *** iblechbot left
[15:05] <pugs_svnbot> r20387 | moritz++ | [t/spec] more disambiguation whitespaces for S29-list/

[15:05] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20387

[15:05] <lambdabot> Title: Changeset 20387 - Pugs - Trac

[15:08] <pugs_svnbot> r20388 | moritz++ | [t/spec] one more disambiguation whitespace

[15:08] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20388

[15:08] <lambdabot> Title: Changeset 20388 - Pugs - Trac

[15:11] <pugs_svnbot> r20389 | moritz++ | [t] coro is gone. Really.

[15:11] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20389

[15:11] <lambdabot> Title: Changeset 20389 - Pugs - Trac

[15:33] *** Eevee left
[15:55] *** IllvilJa joined
[15:59] *** yewenbin left
[16:09] *** TJCRI joined
[16:17] *** pbuetow joined
[16:19] *** rdice_ joined
[16:22] *** iblechbot joined
[16:22] *** meppl joined
[16:27] *** justatheory joined
[16:36] *** pravus left
[16:36] *** rdice left
[16:40] <pmichaud> TimToady++   # S05 updates

[16:40] *** meppl left
[16:42] *** alanhaggai joined
[16:44] *** eternaleye joined
[16:45] *** rindolf joined
[16:45] <[particle]> who's in charge of the svn bot here? diakopter? it'd be nice to see the synopsis changesets here too.

[16:47] *** nipotaway is now known as nipotan

[16:47] *** pravus joined
[16:58] *** pravus_ joined
[16:59] *** justatheory left
[17:03] <moritz_> I think I have a generic svnbot hanging around somewhere - maybe I can throw that in

[17:04] <[particle]> it's gotta be pretty plain where svnbot is on feather

[17:05] *** pbuetow_ joined
[17:06] *** pugs_svn joined
[17:07] *** pugs_svn left
[17:07] *** pugs_svn joined
[17:07] <pugs_svn> r14540 | larry++ | clarifications to previous change

[17:07] <pugs_svn> r14541 | larry++ | [S05] better characterize Match and Cursor methods

[17:07] <moritz_> why the fuck is it called pugs_svn?

[17:07] *** pugs_svn left
[17:08] <moritz_> ah, my fault (of course ;)

[17:08] *** speckbot joined
[17:08] <moritz_> now it's called "specbot"

[17:08] *** pravus left
[17:10] <[particle]> speckbot :)

[17:10] <[particle]> moritz_++

[17:10] *** snooper joined
[17:15] *** pbuetow left
[17:17] *** pravus_ is now known as pravus

[17:21] *** alester joined
[17:23] *** justatheory joined
[17:23] *** pbuetow joined
[17:23] *** pbuetow_ left
[17:23] *** ispy_ left
[17:34] *** snooper left
[18:01] *** japhb left
[18:22] *** rindolf left
[18:22] *** Ched- left
[18:25] *** ReiniUrban joined
[18:28] *** ReiniUrban is now known as rurban

[18:32] *** japhb joined
[18:33] *** rindolf joined
[18:40] *** Ched- joined
[18:47] *** elmex left
[18:55] *** rurban left
[18:58] *** elmex joined
[19:15] *** Eevee joined
[19:25] *** PerlPilot is now known as PerlJam

[19:26] *** eternaleye left
[19:32] *** rdice_ left
[19:35] *** eternaleye joined
[19:54] *** rdice joined
[19:56] <pmurias> moritz_: only elf's parser is in ruby

[19:57] *** pbuetow_ joined
[19:57] <moritz_> pmurias: and the runtime is p5?

[19:57] <pmurias> moritz_: for know p5 is the only backend

[19:58] <pmurias> the rest of the compiler is in p6

[19:58] <pmurias> s/know/now

[19:58] <moritz_> and what do you run it with? rakudo? pugs?

[19:59] <pmurias> itself

[19:59] <moritz_> ok

[19:59] <pmurias> it's partly bootstraped (the parser isn't)

[19:59] <moritz_> can you already use it as a syntax checker?

[20:00] <pmurias> it dosn't parse everything

[20:00] <moritz_> how much does it parse?

[20:00] <pmurias> hard question

[20:01] <moritz_> I'm updating one of my machines to Debian Lenny in the hope that it has sufficiently new ruby packages ;)

[20:02] <pmurias> you could always compiler ruby from source ;)

[20:02] <moritz_> it's not the only thing that I want upgraded ;)

[20:03] *** rdice left
[20:03] *** syle joined
[20:03] <pmurias> i don't think elf is suitable as a general purpose perl6 syntax checker as it's missing a few crucial small things

[20:03] *** [particle]ventus joined
[20:03] *** rindolf left
[20:04] <pmurias> but the ruby parser is modeled on STD.pm so once TimToady++ gets it to work is should be possible to plug it in

[20:10] *** chris2 joined
[20:10] *** pbuetow left
[20:11] *** rdice joined
[20:19] *** wknight8111 joined
[20:35] *** eternaleye left
[20:36] *** eternaleye joined
[20:36] <pmurias> moritz_: what do you intend to use a syntax checker for?

[20:36] <moritz_> pmurias: sanity check of the test suite

[20:37] <pmurias> i see

[20:37] <pmurias> dosn't pugs work?

[20:38] <moritz_> partially

[20:39] <moritz_> and two partial sanity checks are better than just one ;)

[20:40] <pmurias> parsing is hard, so it's the area incomplete implementations lack most

[20:41] <pmurias> * parsing perl6 

[20:41] <TimToady> (un)fortunately, it takes Perl 6 to parse Perl 6 correctly  :)

[20:42] *** Juerd joined
[20:42] <moritz_> nothing but Perl 6 can parse Perl 6

[20:43] <Juerd> That's a problem there.

[20:43] <Juerd> Perl 6 is not an implementation :)

[20:45] *** [particle]ventus left
[21:03] *** barney joined
[21:10] * ruoso wuold rephrase that as "it takes *a* Perl 6 to parse Perl 6"

[21:14] <moritz_> ;)

[21:14] *** pmurias left
[21:17] *** barney left
[21:29] *** rdice left
[21:32] *** justatheory left
[21:48] *** BinGOs_ joined
[21:54] *** BinGOs left
[21:58] *** BinGOs joined
[21:59] *** pbuetow_ left
[22:03] *** TJCRI left
[22:06] *** BinGOs_ left
[22:07] *** peepsalot left
[22:09] *** eternaleye left
[22:10] *** eternaleye joined
[22:10] *** justatheory joined
[22:12] *** eternaleye left
[22:13] *** eternaleye joined
[22:17] *** iblechbot left
[22:27] *** [particle] left
[22:28] *** [particle] joined
[22:30] <Auzon> home &

[22:30] *** Auzon left
[22:43] *** chris2 left
[22:45] *** SamB left
[22:46] *** elmex left
[22:46] *** eternaleye left
[22:46] *** SamB joined
[22:49] *** lisppaste3 left
[22:55] *** SamB left
[22:55] *** r0bby left
[22:55] *** SamB joined
[22:56] *** masak left
[23:00] *** lisppaste3 joined
[23:36] *** felipe left
[23:45] *** eternaleye joined
[23:58] *** Patterner left
