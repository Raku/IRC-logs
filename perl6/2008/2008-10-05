[00:00] *** ruoso joined
[00:08] *** justatheory joined
[00:08] *** plash_ joined
[00:13] *** masak left
[00:24] *** alester left
[00:28] *** justatheory left
[00:36] *** kst```` left
[00:36] *** kst```` joined
[00:43] *** alester joined
[00:53] *** araujo left
[01:10] *** alester left
[01:11] *** BinGOs_ joined
[01:11] *** BinGOs left
[01:29] <ruoso> @tell pmurias, the compilation of p6opaque is failing, am I missing some command to run?

[01:29] <lambdabot> Consider it noted.

[01:32] <pugs_svn> r22507 | ruoso++ | [smop] preparing to implement preludescope.

[01:32] <ruoso> @tell pmurias, I've started preludescope, it declares a m0ld block where we can define things that goes into this special scope... we then just need to use it as the ultimate outer scope when starting to parse...

[01:32] <lambdabot> Consider it noted.

[02:11] *** meppuru joined
[02:13] *** alester joined
[02:17] *** alester left
[02:18] *** alester joined
[02:22] *** kst```` left
[02:22] *** kst```` joined
[02:26] *** alester left
[02:26] *** meppl left
[02:37] *** sri_work left
[02:45] *** Bzek joined
[02:48] *** eternaleye_ left
[02:55] *** eternaleye_ joined
[02:58] *** wknight8111 left
[03:02] *** elmex_ joined
[03:09] *** speedy joined
[03:18] *** elmex left
[03:18] *** elmex_ is now known as elmex

[03:30] *** tcliou left
[03:30] *** LCamel left
[03:34] <pugs_svn> r22508 | lwall++ | [STD] clean up nibbler output

[03:34] <pugs_svn> r22508 | lwall++ | [viv] now successfully produces transforms STD.pm to ast(ish)

[03:34] <TimToady> s/produces //

[03:49] *** yahooooo left
[04:16] *** c1sung left
[04:18] *** kst```` left
[04:18] *** kst````` joined
[04:23] *** araujo joined
[04:49] *** speedy left
[05:07] *** Psyche^ joined
[05:12] *** Auzon joined
[05:24] *** Patterner left
[05:24] *** Psyche^ is now known as Patterner

[05:55] *** notbenh joined
[05:57] <notbenh> is there a way to modify class Object from the outside? I would like to try and plug in a method, cant seem to find a way to do that in all the docs. Have I missed that?

[05:58] <Tene> Yes.  You're looking for 'is also'

[05:59] <Tene> class Object is also { ... }

[05:59] <notbenh> Tene: cool thanks

[06:46] *** BinGOs_ left
[06:48] *** kst````` left
[06:48] *** kst````` joined
[07:10] *** dominiko joined
[07:10] *** dominiko left
[07:12] *** xinming_ joined
[07:16] *** iblechbot joined
[07:25] *** xinming left
[07:56] *** kanru left
[08:00] *** kanru joined
[08:01] *** alanhaggai left
[08:11] *** BinGOs joined
[08:17] *** pmurias joined
[08:23] <pmurias> ruoso: i asked this before but seemed why are some files in src prefixed with smop and others aren't?

[08:28] *** hercynium left
[08:32] *** jferrero joined
[08:38] <pugs_svn> r22509 | pmurias++ | [smop] a pregenerated sm0p5 shouldn't be in version control

[08:48] *** agentzh left
[09:12] *** kst`````` joined
[09:12] *** kst````` left
[09:39] *** Kitchy joined
[09:41] *** Kitchy left
[09:43] <pugs_svn> r22510 | pmurias++ | [smop] fixed sm0p--

[09:44] <pmurias> ruoso: hi

[09:59] <pugs_svn> r22511 | pmurias++ | [smop] reverted 22507 as it create segfaults, and after trying to get it to work i belive that plugging it into the loading sequence in smop_internal.h unnesesarly complex and frail

[10:07] <pmurias> ruoso: what i belive is that instead of having a buch of .c/.sm0p files with a complicated loading sequence we should seperate stuff as a bunch of .ri/.m0ld files which would state their dependencies on each other

[10:17] <ruoso> pmurias, the prefix in the files is plain inconsistency on my part :)

[10:17] <ruoso> pmurias, hi

[10:18] <ruoso> pmurias, that would be a great idea... the way they are now are the first thing I could think of...

[10:19] <ruoso> we need some way to make it easier to add things to "prelude"

[10:19] <ruoso> since the "prelude" will be mostly defined by the things that will be in src-s1p/

[10:21] <ruoso> pmurias, about the revert... that was the part I was starting to wonder if it should be or not as part of "libsmop"

[10:21] <ruoso> but maybe it should just be outside smop_init();

[10:21] <ruoso> something like smop_prelude

[10:22] <ruoso> or smop_main()

[10:27] <pmurias> should the prefix be removed or inserted everywhere?

[10:27] <ruoso> maybe removed, since they're already in smop/src/

[10:28] <ruoso> then we have a usefull prefix,

[10:28] <ruoso> which is s1p

[10:28] <ruoso> native

[10:28] <ruoso> slime

[10:29] <ruoso> smop_lowlevel could be called simply lowlevel...

[10:32] <pmurias> the lexical prelude creation could be pure m0ld

[10:35] <pmurias> it could keep everything linked into libsmop for now, but assuming we want to target non-p6 stuff in the future too (for example python) in should be seperated at least conceptually

[10:35] <pmurias> ruoso: should i change the paths?

[10:50] *** plash_ left
[10:51] *** masak joined
[10:55] *** audreyt joined
[10:59] *** abra joined
[11:07] *** abra left
[11:16] <pugs_svn> r22512 | pmurias++ | [smop] removed the smop_ prefix from source files

[11:17] <ruoso> pmurias, paths? you mean file names?

[11:17] <pmurias> yes

[11:18] <pmurias> changing the file names changes the path in a way ;)

[11:19] <pmurias> do you think storing the ri's in a "stash" object instead of c variables would be a good idea?

[11:20] <ruoso> pmurias, it probably would...

[11:20] <ruoso> but some RI's need to be accessed directly

[11:20] <ruoso> the thing is that this basic types are actually an exception...

[11:21] <ruoso> the real types won't be available as C symbols

[11:24] <pmurias> only the native ones, not the S1P ones should be speciall?

[11:26] <pmurias> * special

[11:27] *** plash_ joined
[11:28] *** alanhaggai joined
[11:30] <rakudo_svn> r31668 | allison++ | [pdd27mmd] Merging the pdd27mmd branch into trunk for r30235 to r31667.

[11:34] <masak> I notice that &leave is not mentioned in S29. would it be ok if I tried to write somethine about it?

[11:34] <masak> what class does &?BLOCK belong to? Block?

[11:34] <masak> any other classes that have a .leave method?

[11:36] <masak> (for example, what does context return? always a Block? S06 doesn't say)

[11:38] <masak> also, under 'caller' in S29, it says 'See "The context and caller functions" in S06.' -- the link is broken. is it really enough to refer to the informal description in S29 instead of providing an API-perspective description in S29? or is the link just a placeholder for eventual real content?

[11:39] <masak> many questions. :) if someone has the ability to mentor me through this, I believe I could do much good.

[11:45] *** kst`````` left
[11:45] *** kst`````` joined
[11:49] <pmurias> masak: i think S29 should provide an API description as that is what you expect when you lookup a function, a link is ok too if it would cause too much duplication

[11:50] <masak> pmurias: in this case, I think S06 is more hand-wavy than a real API description

[11:50] <masak> S29 could provide both the link and a minimal summary, for example

[12:00] <ruoso> pmurias, the ones that will be written in Perl 6 are not that special... but the ones currently designated as s1p_* are special

[12:00] <ruoso> because they are not yet using p6opaque

[12:00] <ruoso> they won't be available in the public namespace

[12:00] <ruoso> they won't be part of the prelude scope

[12:01] * ruoso later & (today elections take place in Brasil)

[12:01] <masak> happy electing!

[12:15] <pmurias> ruoso: how hard would it be to compile smop on windows--?

[12:47] <pmurias> ruoso: if would like to get rid of using RI's as prototypes

[12:47] <pmurias> s/if/i

[13:04] *** plash_ left
[13:21] <pmurias> and i can either imagine using a special prototype RI for each normal RI, or using a defined but emptyish object for the prototype such as [] for array

[13:22] *** smtms left
[13:36] <pmurias> and there remain the issue how should the empytish one be create in the second method

[13:36] <pmurias> * remains

[13:50] *** pmurias left
[13:58] <rakudo_svn> r31674 | pmichaud++ | [rakudo]: spectest-progress.csv update: 200 files, 4437 passing tests

[14:01] *** hercynium joined
[14:03] <ruoso> @tell pmurias, about compiling on windows, i have absolutely no idea (thank god)

[14:03] <lambdabot> Consider it noted.

[14:05] <ruoso> @tell pmurias, the prototypes should start using p6opaque as RI as soon as we have a more high-level compiler.. the example you created in test-mildew points at this very precise direction...

[14:05] <lambdabot> Consider it noted.

[14:16] <ruoso> @tell pmurias, I think I know how to make the prelude loading nicer... we assume all files in src-s1p/ will be "use"d by the prelude scope, and then we add a special syntax to s1p to allow importing C symbols... 

[14:16] <lambdabot> Consider it noted.

[14:18] <ruoso> @tell pmurias like 'our multi map (Code $expression, *@values) := Â¢SMOP__S1P__map'

[14:18] <lambdabot> Consider it noted.

[14:25] *** kst`````` left
[14:25] *** kst`````` joined
[14:31] *** meppuru left
[14:38] *** meppl joined
[14:40] <pugs_svn> r22513 | ruoso++ | [smop] one example on the proposal on how to automatically build the prelude using the files in src-s1p

[14:58] *** kane_ joined
[15:05] *** meppl left
[15:10] *** hercynium left
[15:27] *** meppl joined
[15:33] *** alanhaggai left
[15:49] *** abra joined
[15:57] *** simcop2387 left
[16:00] *** simcop2387 joined
[16:05] <masak> what generates the L<S06/...> links on http://perlcabal.org/syn/S29.html ?

[16:05] <lambdabot> Title: S29

[16:05] <masak> I'm trying to find out what to fix to make the crosslinks work again

[16:09] <masak> something on feather, perhaps?

[16:10] <masak> some general POD-to-HTML thingie? but how would a general tool know what S06 was?

[16:28] *** sri_work joined
[16:42] *** kst`````` left
[16:48] *** masak left
[17:07] *** smtms joined
[17:15] *** mberends left
[17:28] *** abra left
[17:30] <moritz_> re

[17:30] <moritz_> masak: tools/smartlinks.pl

[17:32] <pugs_svn> r22514 | moritz++ | [t] move some tests to spec/, re-worked pre-post.t, some minor corrections and

[17:32] <pugs_svn> r22514 | moritz++ | rakudo fudgings

[17:36] *** jferrero left
[17:38] *** azawawi joined
[17:39] <azawawi> hi

[17:39] *** Bzek left
[17:40] <azawawi> @seen pmichaud

[17:40] <lambdabot> pmichaud is in #perl6. I last heard pmichaud speak 2d 3h 31m 31s ago.

[17:54] *** Chillance joined
[17:55] *** azawawi left
[17:55] <rakudo_svn> r31680 | moritz++ | [rakudo] guard Str.split and Str.comb against zero width regex matches.

[17:55] <rakudo_svn> r31680 | moritz++ | Also refactored Str.comb to use regex(string, 'continue => pos)

[17:58] <pugs_svn> r22515 | moritz++ | [t/spec] some test enhancements, corrections and fudging for rakudo.

[18:07] <rakudo_svn> r31681 | moritz++ | [rakudo] five more files for spectest_regression

[18:23] *** mncharity joined
[18:31] *** notbenh left
[18:45] *** yahooooo joined
[18:53] <pugs_svn> r22516 | moritz++ | [README] mention pugs-commits google group

[19:23] *** xuser left
[19:51] <mncharity> re pugs-commits, so do we continue the "commit messages are part of the #perl6 IRC conversation" style, or switch to something more normal, but uglier on irc?  lots of karma though.

[19:54] *** lambdabot left
[19:54] *** simcop2387 left
[19:56] <moritz_> mncharity: I'm still fond of the svn bots, and have no plans on abolishing them

[19:56] *** lambdabot joined
[19:57] <moritz_> (unless an overwhelming majority of #perl6 inhabitants votes differrently)

[20:05] <mncharity> I certainly enjoy them.  :)

[20:06] *** simcop2387 joined
[20:08] <moritz_> that's 2:0 for keeping that, I call that a majority ;)

[20:08] <moritz_> s:2nd/that/them/

[20:10] <mncharity> lol

[20:12] <moritz_> that's how applied democracy (with not-so-many participants) works

[20:14] <mncharity> trying not to think about the election.  sigh.  real democracy works on "aren't they pretty?  a confident?  they can thus be your pilot.  and brain surgeon.  and president.  no problem...".

[20:14] <mncharity> *and

[20:20] * fullermd is willing to graciously accept your vote.

[20:20] <mncharity> lol

[20:20] <pugs_svn> r22517 | putter++ | [elf_h] Restructured the IRxBuild initializer.

[20:20] <pugs_svn> r22517 | putter++ | Cheating for on_sbcl - because SBCL didn't like compiling a 60kB method with 100 embedded subs.

[20:21] <fullermd> And I'm not even pretty!  It's win-win!

[20:24] <mncharity> first elf cheat for on_sbcl. :/  (ie, changing elf code solely because on_sbcl is having a problem with it).  ah well.

[20:29] <mncharity> etime.  commit tomorrow.  *wave* &

[20:29] *** mncharity left
[20:38] <pmichaud> I think we keep the svn bots -- I like them both.

[20:38] <pmichaud> the commit messages are useful for seeing a general idea of what's happening.  the email messages provide more details.

[20:39] <moritz_> pmichaud: I had an idea on how to get a bit more attention from Perl 5 developers...

[20:40] <moritz_> pmichaud: I noticed that Str.split doesn't work with zero-width assertions, and so I thought I might post it as a challenge to perlmonks.org

[20:40] <moritz_> pmichaud: people don't like PIR, but if they give their solutions in simple perl, it should be easy to translate to PIR

[20:41] <moritz_> and perhaps offer a CREDITS entry or something ;)

[20:43] <pmichaud> moritz_: sure, I've invited that in the past.  It'd be good to do it again.

[20:44] <moritz_> I'm short on tuits right now (exam preparation), but in about two weeks I should get around to it

[20:44] <pmichaud> sounds great

[21:02] *** justatheory joined
[21:24] *** plash joined
[22:04] *** iblechbot left
[22:32] *** plash left
[23:06] *** elmex left
[23:07] *** Auzon left
[23:59] *** _Chillance_ joined
