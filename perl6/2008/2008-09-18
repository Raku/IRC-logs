[00:01] *** hercynium left
[00:03] *** Ontolog left
[00:15] *** justatheory left
[00:15] <ispy_> @seen rindolf

[00:15] <lambdabot> I saw rindolf leaving #perl6 4h 30m 57s ago, and .

[00:17] *** justatheory joined
[00:18] *** kst```` left
[00:20] *** kst joined
[00:24] *** justatheory left
[00:37] *** kanru left
[00:45] <pugs_svn> r22272 | ruoso++ | [smop] the leaks are still there, but now array iterator is working...

[00:48] *** kanru joined
[00:50] *** hercynium joined
[00:50] *** BinGOs left
[00:51] *** wknight8111 joined
[00:54] *** baest left
[01:00] * ruoso . o O ( now we're at a very close step from having map implemented... )

[01:41] *** abra joined
[01:46] *** mncharity joined
[01:46] <mncharity> perl6: say(<a b c>.Str)

[01:46] <p6eval> rakudo 31216: OUTPUT[Method 'Str' not found for invocant of class 'List'␤current instr.: '_block11' pc 46 (EVAL_12:18)␤]

[01:46] <p6eval> ..elf 22272: OUTPUT[abc␤]

[01:46] <p6eval> ..pugs: OUTPUT[*** No such method in class Array: "&Str"␤    at /tmp/ic67Au3jeE line 1, column 5-16␤]

[01:46] <meppl> good night

[01:46] <mncharity> g'night meppl :)

[01:46] <mncharity> perl6: say(<a b c>)

[01:46] <p6eval> elf 22272, pugs, rakudo 31216: OUTPUT[abc␤]

[01:46] <meppl> ;)

[01:47] *** meppl left
[01:47] <mncharity> perl6: my $arrayref = <ok 4 - say stringifies its args>; say $arrayref;

[01:47] <p6eval> pugs, rakudo 31216: OUTPUT[ok 4 - say stringifies its args␤]

[01:47] <p6eval> ..elf 22272: OUTPUT[ok4-saystringifiesitsargs␤]

[01:48] <mncharity> perl6: my $arrayref = <ok 4 - say stringifies its args>; say $arrayref.WHAT;

[01:48] <p6eval> elf 22272, pugs, rakudo 31216: OUTPUT[Array␤]

[01:59] *** araujo joined
[02:03] *** Limbic_Region left
[02:24] <s1n> moritz_: where do i find the actual definition of is() that's used in Test.pm?

[02:24] <s1n> err well, n/m...

[02:27] *** wknight8111 left
[02:32] *** mberends joined
[02:33] <pugs_svn> r22273 | putter++ | [elf] ++ and -- now work.  Makefile tweaks.  Test results synced.

[02:33] <pugs_svn> r22273 | putter++ | New Makefile target test_ok_files tests only files which run_tests said passed.

[02:33] <pugs_svn> r22273 | putter++ | It uses prove, which is more picky than run_tests, so it doesn't agree.

[02:33] <pugs_svn> r22273 | putter++ | There's still no simple yes/no answer to "did I break something?".  moritz++

[02:35] <mncharity> closest answer is  make test .  ie, elf needs to continue to compile itself, and any changed results to t/ should ideally be understood.  though in practice, that second part is often neglected.  optional at this point.

[02:35] <mncharity> good night all.

[02:35] *** mncharity left
[02:48] *** sri_work left
[02:51] *** z80ASM joined
[02:51] *** slavik joined
[02:52] <slavik> is there a perl6 code editor that has autocomplete and syntax highlighting for perl6?

[02:52] <slavik> also, am I correct in assuming that pugs has rules?

[03:13] <s1n> @tell pmichaud i have it tested and it works, sort of, there's a bug i don't know how to solve so i need your expertise

[03:13] <lambdabot> Consider it noted.

[03:35] <rakudo_svn> r31218 | tene++ | Merge exceptionmagic branch into trunk.

[03:35] *** drbean_ joined
[03:36] <Tene> slavik: There's decent vim support.  Look in the editors/ directory.

[03:36] <slavik> hmm, ty

[03:37] <slavik> I'll have to look up vim auto tab stuffs

[03:50] *** kanru left
[03:52] *** drbean left
[03:56] *** kanru joined
[03:59] *** Bzek left
[04:08] *** Bzek joined
[04:11] *** Bzek left
[04:12] *** z80ASM left
[04:15] *** Bzek joined
[04:16] *** Bzek left
[04:16] *** Bzek joined
[04:25] *** abra left
[04:27] *** scrottie joined
[04:28] <scrottie> beppu, awwaiid.  yo.

[04:57] *** ispy_ left
[04:58] *** ispy_ joined
[04:58] *** xinming_ joined
[05:11] *** xinming left
[05:18] *** sail0r joined
[05:22] *** sail0r left
[05:37] *** hercynium left
[05:54] *** slavik left
[05:56] *** BinGOs joined
[05:58] *** Psyche^ joined
[06:07] *** ashizawa joined
[06:13] *** Patterner left
[06:13] *** Psyche^ is now known as Patterner

[06:13] *** Ontolog joined
[06:22] *** baest joined
[06:39] *** mberends left
[06:44] *** alester left
[07:04] *** jferrero joined
[07:22] *** Lorn left
[07:29] *** jferrero left
[07:30] *** zamolxes left
[07:38] *** penk joined
[07:45] *** iblechbot joined
[07:54] <Ontolog> what is the command to run all the tests?

[07:54] <moritz_> make spectest_regression

[07:54] <moritz_> or make fulltest # also runs condingstd tests

[07:55] <moritz_> it was r31218 that introduced the segfault, so not your problem ;)

[08:03] <Ontolog> cool but it seems there are problems with my implementation

[08:03] <Ontolog> i'll look into it

[08:24] *** barney joined
[08:29] *** pmurias joined
[08:44] *** smg left
[08:47] *** Ontolog left
[08:48] <rakudo_svn> r31223 | tene++ | Revert my previous exceptions commit.  It was wrong.

[08:50] <pmurias> ruoso: have you tried making SMOP_REFERENCE and SMOP_RELEASE print line info or should i try it?

[08:55] *** Auzon left
[09:02] *** zamolxes joined
[09:16] *** jan_ left
[09:16] *** yves left
[09:16] *** [particle] left
[09:19] *** fullermd joined
[09:19] *** jfredett joined
[09:19] *** pjcj joined
[09:21] *** Ontolog joined
[09:21] *** jan_ joined
[09:21] *** yves joined
[09:21] *** [particle] joined
[09:21] *** gbacon joined
[09:21] *** simcop2387 joined
[09:21] *** pasteling joined
[09:21] *** rakudo_svn joined
[09:22] *** Ontolog left
[09:22] *** Ontolog joined
[09:23] <Ontolog> moritz_: did you see the mail about matches?

[09:24] <moritz_> Ontolog: no, currently I don't have mail access :(

[09:24] <Ontolog> ohh

[09:25] <Ontolog> The question is, should say "ab1cd12ef123gh".match(/\d+/).perl;

[09:26] <Ontolog> return ["1", "12", "1", "2", "123", "12", "1", "23", "2", "3"]

[09:26] <moritz_> rakudo: say "ab1cd12ef123gh".match(/\d+/).perl

[09:26] <p6eval> rakudo 31223: OUTPUT[{}␤]

[09:26] <Ontolog> match is not implemented

[09:26] <Ontolog> i implemented it

[09:26] <Ontolog> on my machine

[09:27] <Ontolog> but all my match does is iterate over matches by calling match.'next'() and getting match.'text'()

[09:27] <Ontolog> and the result is the list shown

[09:27] * moritz_ thought he had applied a patch from cjfields that implements match

[09:28] <moritz_> that's wrong

[09:28] <Ontolog> well in Str.pir there is no sub 'match'

[09:28] <moritz_> it could be in src/builtins/any-str.pir

[09:28] <Ontolog> if you can get at your mail, check out the diff i sent

[09:28] <Ontolog> i see

[09:28] <Ontolog> well running .match on a string doesn't work normally

[09:29] <moritz_> rakudo: say "abc".match(/b./)

[09:29] <p6eval> rakudo 31223: OUTPUT[bc␤]

[09:29] <Ontolog> my point is not so much to implement match(), but if I did that's cool, my point is to illustrate what is happening

[09:29] *** bennymack left
[09:29] <Ontolog> hm?

[09:29] <Ontolog> i guess it is my bad..

[09:29] <Ontolog> let me check it out again....

[09:29] <moritz_> I think that match.next doesn't do what we think it does, or is broken, or ... dunno

[09:30] <moritz_> what we need for Perl 6 is non-overlapping matches

[09:31] <moritz_> so 1, 12, 123 in your example above

[09:31] <Ontolog> yes

[09:31] <Ontolog> that's what I expected

[09:31] <moritz_> it looks as though match.next gives all possible matches

[09:31] <Ontolog> exactly

[09:32] <moritz_> maybe there's a way to supply a start position to a regex match?

[09:32] <Ontolog> btw, the match I implemented in Str.pir behaves differently than the existing match

[09:32] <moritz_> something like regex(string, start)

[09:33] <moritz_> (I don't have a copy of parrt here, so I can't check :(

[09:33] <Ontolog> how will that fix the problem in match?

[09:35] <moritz_> in perl psudo code: $previous = 0; while $regex($str, $previous) { push @ret, ~match; $previous = $match.to)

[09:35] <moritz_> errm, think $/ instead of match

[09:42] <Ontolog> I see what you are saying but is that just a workaround for a bug?

[09:42] *** felipe joined
[09:42] <moritz_> no

[09:43] <moritz_> I think PGE needs backtracking match.next semantics

[09:43] <Ontolog> ok

[09:43] <moritz_> lunch &

[09:43] <Ontolog> as to the impl of match in any-str.pir and the one i did for myself in Str.pir

[09:43] <Ontolog> ok ttyl

[09:44] <Ontolog> when you return: shouldn't match.(/rx/) return a List?

[09:46] *** bennymack joined
[09:52] <ruoso> pmurias, please, try it... I still didn't try...

[09:54] <pmurias> what c flag should be used to enable such tracing?

[09:55] <ruoso> there's already one... 

[09:55] <ruoso> SMOP_LOWLEVEL_MEM_DEBUG

[10:02] <pugs_svn> r22274 | pmurias++ | [smop] SMOP_RELEASE and SMOP_REFERENCE print line,function and file with SMOP_LOWLEVEL_MEM_DEBUG

[10:06] <pmurias> ruoso: i'm not even sure what the leaking Code is

[10:08] *** Jedai joined
[10:09] *** masak joined
[10:10] *** iblechbot left
[10:15] *** smg joined
[10:18] <ruoso> pmurias, test/32 is an example...

[10:18] * ruoso later &

[10:18] *** ruoso left
[10:20] *** pmurias left
[10:28] <rakudo_svn> r31225 | jonathan++ | [rakudo] Handle the case where a fractional part of a number contains underscores; PIR doesn't allow this, so just whip 'em out. Resolves RT#58998.

[10:36] *** elmex joined
[10:47] <rakudo_svn> r31226 | jonathan++ | [rakudo] Make use happen at BEGIN time. This lets us use modules that contain classes. However, we still have various issues to follow up on with this (for example, making it work when you use a module that does a use itself, which gives very odd errors at the moment, and

[10:47] <rakudo_svn> ..making this play well when a pre-compiled module does a use).

[10:54] <Ontolog> yay, i will soon have a full week to work on perl6! muahahaha

[10:55] <Ontolog> if only someone will lay down the law with regards to match() behavior

[10:55] <Ontolog> i could write a decent patch ;-)

[10:55] *** wknight8111 joined
[10:59] *** Ontolog left
[11:11] <rakudo_svn> r31227 | jonathan++ | [rakudo] Sort out keys, values and kv on mappings (and thus hashes) by exporting them, as we do for List. Gets us passing another 8 TODO'd spectests.

[11:38] *** iblechbot joined
[11:41] *** masak left
[11:43] *** Ontolog joined
[11:44] <rakudo_svn> r31228 | jonathan++ | [rakudo] We currently always store subs in the namespace without sigil, so if we get a sub parameter with the & sigil then we need to strip it off. Resolves RT#58828.

[11:51] *** wknight8111 left
[11:56] *** penk left
[12:04] *** BinGOs left
[12:04] *** BinGOs joined
[12:10] *** ispy_ left
[12:21] *** abra joined
[12:37] *** ispy_ joined
[12:38] *** sirhc joined
[12:50] *** ashizawa left
[12:56] *** REPLeffect left
[13:07] *** macae joined
[13:28] <Juerd> Let's call undef "unvalue" :)

[13:28] <Juerd> Antivalue :)

[13:30] *** macae left
[13:31] *** pmurias joined
[13:31] <pmurias> Juerd: a NULL pointer is the antivalue ;)

[13:33] *** Front_slash joined
[13:34] <Juerd> Heheh

[13:35] *** Front_slash left
[13:36] *** ispy_1 joined
[13:39] *** Lorn joined
[13:40] *** Front_slash joined
[13:44] *** c1sung joined
[13:47] *** c1sung left
[13:47] *** c1sung joined
[13:48] *** TJCRI joined
[13:52] *** ispy_ left
[14:01] *** mberends joined
[14:02] *** ispy_1 left
[14:03] *** alester joined
[14:03] *** NeatFires joined
[14:03] <NeatFires> when?

[14:04] <pmurias> NeatFires: ?

[14:07] <pugs_svn> r22275 | pmurias++ | [smop] SMOP_LOWLEVEL_MEM_DEBUG shouldn't be set by default

[14:22] *** ruoso_ joined
[14:22] <ruoso_> Hello!

[14:27] *** omichael joined
[14:44] <ruoso_> pmurias: I'm adding a little more debug information...

[14:44] * ruoso_ back to hunting leaks

[14:44] <pugs_svn> r22276 | moritz++ | [t/spec] unfudged passing TODO tests for rakudo

[14:45] <pugs_svn> r22277 | moritz++ | [t/spec] more unfudging

[14:47] <pugs_svn> r22278 | moritz++ | [t/spec] more unfudging of passing TODO tests

[14:47] <PerlJam> 5/away

[14:54] *** sri_work joined
[15:01] <pugs_svn> r22279 | moritz++ | [t/spec] tests for code objects in signatures

[15:02] <pugs_svn> r22280 | moritz++ | [t/spec] svn props on newly added test file

[15:05] *** Exodist joined
[15:11] *** ruoso_ left
[15:12] *** ruoso__ joined
[15:16] *** ruoso__ left
[15:26] <rakudo_svn> r31229 | moritz++ | [rakudo] added tests for the fix in r31228 to spectest_regression

[15:31] *** pmurias left
[15:33] *** kanru left
[15:36] *** exodist_ joined
[15:36] *** zamolxes left
[15:41] *** Exodist left
[15:48] *** barney left
[16:10] *** wknight8111 joined
[16:21] *** aindilis joined
[16:24] *** justatheory joined
[16:32] *** baest left
[16:35] *** ashleyb joined
[16:39] *** wknight8111 left
[16:42] *** smg left
[16:49] *** wknight8111 joined
[16:52] <Juerd> I haven't been active on the mailinglists for a while now

[16:53] <Juerd> But now I've decided to stop reading them too. Sorry

[16:53] <Juerd> Perl 6 activity is too much for me to follow :)

[16:54] <[particle]> we're not slowing down just so you can catch up :P

[16:54] <Juerd> No, I don't want you to. I lack tuits to catch up.

[16:54] <[particle]> you'll find them some day. we'll be here.

[16:54] <Juerd> It's just that I have been reading only 10% of the mail anyway, and still it's eating too much time

[16:55] <Juerd> I'm cutting down on mailinglists and irc

[16:55] <Juerd> Just removed 6 mailing lists from mutt's check-these-mailboxes-for-new-mail list

[16:55] <[particle]> i went from 10 irc channels down to three. i'm up to six now :(

[16:56] <Juerd> 20 here :(

[16:56] <Juerd> I find it very hard to choose which I'm leaving.

[16:57] <Juerd> But I'll have to do it soon.

[16:57] <[particle]> 20 is way too many

[16:57] <Juerd> For quite a while I've had a highlight on /utf-8/ in any channel =~ /perl/

[16:57] <Juerd> But I can't be everyone's unicode help.

[16:58] <Juerd> Also, finally my message got through to most of the community so I no longer have to :)

[16:59] <moritz_> yes, Juerd++

[16:59] <rakudo_svn> r31234 | moritz++ | [rakudo] implement Any.split(/regex/), Ontolog++

[16:59] <rakudo_svn> r31234 | moritz++ | Patch courtesy by Chris Davaz, <cdavaz at gmail dot com>

[16:59] <rakudo_svn> r31234 | moritz++ | Note that currently Str.split(Str) mask this method for strings, which should be

[16:59] <rakudo_svn> r31234 | moritz++ | fixed by moving that to Any as well.

[16:59] * Juerd still wants tuits to rewrite p5 unicode docs, but that'll probably never happen

[16:59] *** meppl joined
[17:00] <Juerd> By the time I have enough tuits for that, Perl 6 is probably already there, and I can just write P6 docs :)

[17:01] <Juerd> I sincerely hope that Perl 6 will have way less Unicode documentation. It's part of life now.

[17:02] <rakudo_svn> r31236 | moritz++ | [rakudo] fixed trailing whitespaces

[17:02] * moritz_ hpes that too

[17:02] <moritz_> afk&

[17:02] *** Chillance joined
[17:07] <[particle]> juerd: have you looked at parrot's strings pdd?

[17:07] *** justatheory left
[17:07] <Juerd> [particle]: A while ago

[17:07] <Juerd> [particle]: I'm curious if it'll be as efficient as Perl 5's strings. I fear it might not be.

[17:08] *** exodist_ left
[17:08] <[particle]> i'm not familiar enough with either design to comment

[17:08] <[particle]> but i hope we're able to get review from p5pers who are

[17:09] <Juerd> The main important thing is that there ought to be TWO string types.

[17:09] <Juerd> One binary, one text.

[17:10] <Juerd> Text is a sequence of encoded numbers

[17:12] <TimToady> the important new idea is the NFG encoding, which gives you one integer per grapheme, which should be very efficient (after transcoding)

[17:14] *** rindolf joined
[17:16] *** Exodist joined
[17:18] *** exodist_ joined
[17:18] *** exodist_ left
[17:18] *** exodist_ joined
[17:18] *** exodist_ left
[17:22] *** Exodist left
[17:28] *** Bzek left
[17:30] *** Exodist joined
[17:39] *** ruoso joined
[17:40] *** justatheory joined
[17:40] *** zamolxes joined
[17:42] <ruoso> Hello!

[17:46] <pugs_svn> r22281 | ruoso++ | [smop] fixed two memory leaks. changed a bit the SMOP_LOWLEVEL_MEM_DEBUG code and added SMOP_MOLD_DEBUG and SMOP_SLIME_DEBUG that prints when it is evaluating some call both the name of the method as well as the type

[17:47] <ruoso> @tell pmurias, I left a commented line with all the debug options in CMakeLists.txt... I'm using "./build/test/foo 2>&1 | less" to trace the leaks...

[17:47] <lambdabot> Consider it noted.

[17:55] <rindolf> Hi ruoso 

[17:55] <ruoso> hi rindolf 

[17:56] <rindolf> ruoso: what's up?

[17:56] <ruoso> leaks everywhere ;)

[17:56] <ruoso> heh... I'm doing some plumbing

[18:01] *** Front_slash left
[18:04] *** Exodist left
[18:04] *** Exodist joined
[18:06] <ruoso> Are packages called "::Foo" or "Foo::" ?

[18:06] <ruoso> or "::Foo::?

[18:06] <PerlJam> Just "Foo" unless you need to give perl more clue, then "::Foo"  (AFAIK)

[18:07] <PerlJam> or even ::(Foo)

[18:07] <ruoso> Just "Foo" refers to the class, doesn't it?

[18:08] *** jhorwitz joined
[18:10] <PerlJam> This is where I would say to go read the Synopsis as my memory isn't that good :)

[18:11] <ruoso> :P

[18:13] *** smg joined
[18:14] *** pmurias joined
[18:20] *** wknight8111 left
[18:20] <meppl> good night

[18:23] *** meppl left
[18:34] *** jan_ left
[18:37] *** pmurias left
[18:42] *** ashleyb left
[18:45] *** jan_ joined
[18:59] *** Auzon joined
[19:01] *** abra left
[19:07] *** REPLeffect joined
[19:10] *** larsen_ joined
[19:10] * ruoso wonders why he can't connect to irc.perl.org

[19:11] <rindolf> ruoso: let me try.

[19:11] <rindolf> ruoso: I can connect there - not sure about login.

[19:11] <rindolf> ruoso: I'm on #moose and #perl-qa now.

[19:13] <ruoso> hmm... there's a bogus proxy configuration somewhere...

[19:16] * ruoso better now...

[19:22] *** explorer joined
[19:47] *** baest joined
[19:52] *** explorer left
[19:57] *** braceta joined
[19:59] *** justatheory left
[20:13] *** justatheory joined
[20:17] *** pmurias joined
[20:20] <ruoso> hi pmurias 

[20:24] *** araujo left
[20:27] *** araujo joined
[20:31] <ingy> seen TimToady 

[20:31] <ingy> seen TimToady?

[20:31] <ingy> meh

[20:33] <pmurias> ruoso: hi

[20:33] <ruoso> @seen TimToady 

[20:33] <lambdabot> TimToady is in #perl6. I last heard TimToady speak 3h 21m 24s ago.

[20:33] <ruoso> ingy, ^

[20:34] <ingy> :)

[20:35] <rindolf> Maybe I should try seeing if my Perl6 Graham Function program works in Rakudo.

[20:36] <ingy> TimToady: you said at some point that you had certain unicode issues with YAML::XS. I am in a good spot to pay attention, so please email [email@hidden.address] with any YAML requests.

[20:37] <ruoso> pmurias, have you seen the changes I made?

[20:38] <pmurias> yes

[20:39] <pmurias> it shouldn't have been causing the leak

[20:39] <pmurias> we need a proper way of creating prototypes for RI's instead of using the RI is it's own meta RI

[20:39] <pmurias> trick

[20:41] *** mtrimpe joined
[20:43] <pmurias> shower&

[20:55] <pmurias> ruoso: anyway clearing up the Code leaks makes the remaining on in 21_code much clearer

[20:55] <ruoso> yep

[20:56] *** larsen_ left
[21:00] *** Southen joined
[21:02] <pmurias> found it

[21:04] <pugs_svn> r22282 | pmurias++ | [smop] fixed one leak in 21_code

[21:04] <pmurias> ruoso: the convention is that normal c functions don't RELEASE their argument?

[21:05] *** wknight8111 joined
[21:05] *** eternaleye left
[21:05] <ruoso> pmurias++

[21:05] <ruoso> pmurias, there's no convention for normal c functions...

[21:05] <pmurias> c functions in smop

[21:10] <pugs_svn> r22283 | pmurias++ | [smop] fixed remaining leak

[21:13] *** braceta left
[21:16] *** eternaleye joined
[21:18] <pmurias> is there a TAP way of marking that a test is excpected to fail?

[21:21] <[particle]> like # TODO ?

[21:21] *** eternaleye_ joined
[21:22] <[particle]> http://svn.perl.org/parrot/trunk/languages/perl6/t/01-sanity/01-tap.t

[21:22] <lambdabot> http://tinyurl.com/445tfo

[21:23] *** TJCRI left
[21:24] <pmurias> [particle]: it doesn't work if the test dies

[21:25] <pmurias> ruoso: we have no leaks now ;)

[21:25] <[particle]> ah, dies.

[21:25] <ruoso> pmurias++ for 1..*

[21:26] <[particle]> you can't mark that in the tap, unless you don't use a plan

[21:26] <[particle]> if you have a function like eval_dies_ok available, you can use that

[21:30] <pmurias> ruoso: map should be a function not a map method

[21:31] <ruoso> so the call should be postcircumfix:<()>, right?

[21:33] <moritz_> wtf is the readproctitle process on feather?

[21:34] <pmurias> ruoso: yes

[21:34] <moritz_> and why does it need so much CPU?

[21:34] <pmurias> ruoso: maybe map should be written in Perl 6?

[21:35] <ruoso> pmurias, cool... do you want to take that to do now? I'm a bit busy now...

[21:35] <ruoso> pmurias, at least in m0ld

[21:35] <ruoso> that's for sure

[21:36] *** eternaleye left
[21:37] <pmurias> ruoso: i should be sleeping now, the pugs backend will need some work first

[21:38] <ruoso> :P

[21:38] <pmurias> g'night

[21:38] *** pmurias left
[21:54] * ruoso later &

[21:54] *** ruoso left
[21:58] *** eternaleye_ left
[21:58] *** eternaleye_ joined
[22:02] *** gispita joined
[22:04] *** NeatFires left
[22:09] *** rindolf left
[22:10] *** meppl joined
[22:10] <Juerd> moritz_: readproctitle is an in-$0-logging mechanism

[22:11] <Juerd> moritz_: It's using so much CPU because whatever it's logging, is broken and keeps logging stuff. At this point, we should be happy that it's not a file based log :)

[22:13] <Juerd> It was commitbit. Killed.

[22:26] *** gispita left
[22:46] *** sri_work left
[22:50] *** Auzon left
[22:54] *** Lorn_ joined
[22:54] *** omichael left
[23:00] *** hercynium joined
[23:06] *** Lorn left
[23:17] *** Lorn joined
[23:24] *** iblechbot left
[23:30] *** Chillance left
[23:31] *** justatheory left
[23:32] *** Lorn_ left
