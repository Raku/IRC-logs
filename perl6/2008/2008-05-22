[00:01] <Juerd> I hate autoscrolling. I don't read entire texts at exactly the same speed apparently.

[00:01] <Juerd> And I don't mind scrolling manually at all.

[00:07] *** mncharity joined
[00:12] *** eternaleye joined
[00:18] *** IllvilJa joined
[00:19] *** elmex left
[00:54] *** nipotan is now known as nipotaway

[00:54] *** Helios- joined
[01:14] *** pbuetow left
[01:14] *** pbuetow joined
[01:25] *** Ched- left
[01:25] *** Grrrr left
[01:37] *** Limbic_Region left
[01:56] *** Helios- left
[01:58] *** coolcat50 left
[02:01] *** mncharit1 joined
[02:02] *** mncharity left
[02:08] *** Helios- joined
[02:18] *** felipe left
[02:24] *** eternaleye left
[02:27] *** jhorwitz left
[02:33] *** Helios- left
[02:44] *** jjore left
[02:47] *** jjore joined
[02:47] *** jjore is now known as zz_jjore

[02:47] *** zz_jjore is now known as jjore

[02:58] *** jjore is now known as zz_jjore

[02:58] *** zz_jjore is now known as jjore

[02:59] *** Helios- joined
[02:59] <pugs_svnbot> r20479 | putter++ | [elf] sprintf added; an unfinshed start on import(); Pair now used for pairs.

[03:04] *** thepler left
[03:04] *** pugs_svnbot left
[03:04] *** audreyt left
[03:04] *** Juerd left
[03:04] *** wolverian left
[03:04] *** dalek left
[03:04] *** ruoso left
[03:04] *** jjore left
[03:04] *** arguile left
[03:04] *** kolibrie left
[03:04] *** qmole left
[03:04] *** Auzon left
[03:04] *** meteorjay left
[03:04] *** Caelum left
[03:04] *** allbery_b left
[03:04] *** Maddingue left
[03:04] *** rhr left
[03:04] *** pmichaud left
[03:04] *** baest left
[03:04] *** jiing left
[03:04] *** kcwu left
[03:04] *** rafl left
[03:04] *** shachaf left
[03:04] *** araujo left
[03:04] *** TimToady left
[03:04] *** ting_ left
[03:04] *** Eevee left
[03:04] *** Patterner left
[03:04] *** agentzh left
[03:04] *** mtve left
[03:04] *** Tene left
[03:04] *** cj left
[03:04] *** drbean_ left
[03:04] *** buubot left
[03:04] *** r0bby left
[03:04] *** speckbot left
[03:04] *** pjcj left
[03:04] *** REPLeffect_ left
[03:04] *** Jedai left
[03:04] *** moritz_ left
[03:04] *** PerlJam left
[03:04] *** gbacon left
[03:04] *** smtms left
[03:04] *** nipotaway left
[03:04] *** SubStack left
[03:04] *** kst left
[03:04] *** Sartak left
[03:04] *** obra left
[03:04] *** integral left
[03:04] *** IllvilJa left
[03:04] *** fullermd left
[03:04] *** mofino left
[03:04] *** cls_bsd left
[03:04] *** tobeya left
[03:04] *** SamB left
[03:04] *** lambdabot left
[03:04] *** spinclad left
[03:04] *** yves left
[03:04] *** Lunchy left
[03:04] *** Khisanth left
[03:04] *** joejaxx left
[03:04] *** stevan_ left
[03:04] *** carlosf left
[03:04] *** japhb left
[03:04] *** zev left
[03:04] *** xdg_ left
[03:04] *** zamolxes left
[03:04] *** silug left
[03:04] *** jrockway left
[03:04] *** zostay left
[03:04] *** ingy left
[03:04] *** IRSeekBot left
[03:04] *** yahooooo left
[03:04] *** kane_ left
[03:04] *** cookys left
[03:04] *** hcchien left
[03:04] *** avar left
[03:04] *** LCamel left
[03:04] *** buu left
[03:04] *** alester left
[03:04] *** tcliou left
[03:04] *** ilbot2 left
[03:04] *** pasteling left
[03:04] *** gugod left
[03:04] *** aindilis left
[03:04] *** TreyHarris left
[03:04] *** charsbar left
[03:04] *** mj41 left
[03:04] *** mncharit1 left
[03:04] *** pbuetow left
[03:04] *** bsb left
[03:04] *** bbkr_ left
[03:04] *** diakopter left
[03:04] *** ofer left
[03:04] *** perlbot left
[03:04] *** nothingmuch left
[03:04] *** explorer left
[03:05] *** jjore joined
[03:05] *** mncharit1 joined
[03:05] *** pbuetow joined
[03:05] *** IllvilJa joined
[03:05] *** japhb joined
[03:05] *** TimToady joined
[03:05] *** Sartak joined
[03:05] *** Patterner joined
[03:05] *** alester joined
[03:05] *** Auzon joined
[03:05] *** explorer joined
[03:05] *** PerlJam joined
[03:05] *** mj41 joined
[03:05] *** ruoso joined
[03:05] *** wolverian joined
[03:05] *** Juerd joined
[03:05] *** pmichaud joined
[03:05] *** pugs_svnbot joined
[03:05] *** dalek joined
[03:05] *** Eevee joined
[03:05] *** charsbar joined
[03:05] *** smtms joined
[03:05] *** Jedai joined
[03:05] *** carlosf joined
[03:05] *** cookys joined
[03:05] *** baest joined
[03:05] *** audreyt joined
[03:05] *** Caelum joined
[03:05] *** agentzh joined
[03:05] *** integral joined
[03:05] *** xdg_ joined
[03:05] *** ofer joined
[03:05] *** lambdabot joined
[03:05] *** tobeya joined
[03:05] *** ting_ joined
[03:05] *** thepler joined
[03:05] *** bbkr_ joined
[03:05] *** kst joined
[03:05] *** avar joined
[03:05] *** ilbot2 joined
[03:05] *** aindilis joined
[03:05] *** bsb joined
[03:05] *** stevan_ joined
[03:05] *** kane_ joined
[03:05] *** IRSeekBot joined
[03:05] *** rafl joined
[03:05] *** gbacon joined
[03:05] *** nipotaway joined
[03:05] *** araujo joined
[03:05] *** meteorjay joined
[03:05] *** cls_bsd joined
[03:05] *** fullermd joined
[03:05] *** Tene joined
[03:05] *** qmole joined
[03:05] *** REPLeffect_ joined
[03:05] *** gugod joined
[03:05] *** ingy joined
[03:05] *** zostay joined
[03:05] *** diakopter joined
[03:05] *** drbean_ joined
[03:05] *** hcchien joined
[03:05] *** Lunchy joined
[03:05] *** silug joined
[03:05] *** r0bby joined
[03:05] *** Khisanth joined
[03:05] *** buu joined
[03:05] *** zamolxes joined
[03:05] *** SamB joined
[03:05] *** speckbot joined
[03:05] *** rhr joined
[03:05] *** moritz_ joined
[03:05] *** joejaxx joined
[03:05] *** kcwu joined
[03:05] *** pjcj joined
[03:05] *** allbery_b joined
[03:05] *** arguile joined
[03:05] *** kolibrie joined
[03:05] *** Maddingue joined
[03:05] *** buubot joined
[03:05] *** LCamel joined
[03:05] *** tcliou joined
[03:05] *** pasteling joined
[03:05] *** perlbot joined
[03:05] *** nothingmuch joined
[03:05] *** TreyHarris joined
[03:05] *** zev joined
[03:05] *** spinclad joined
[03:05] *** mtve joined
[03:05] *** SubStack joined
[03:05] *** yves joined
[03:05] *** mofino joined
[03:05] *** cj joined
[03:05] *** jrockway joined
[03:05] *** obra joined
[03:05] *** yahooooo joined
[03:05] *** jiing joined
[03:05] *** shachaf joined
[03:07] *** thepler left
[03:07] *** pugs_svnbot left
[03:07] *** Juerd left
[03:07] *** audreyt left
[03:07] *** wolverian left
[03:07] *** dalek left
[03:07] *** ruoso left
[03:07] *** kolibrie left
[03:07] *** qmole left
[03:07] *** Auzon left
[03:07] *** jjore left
[03:07] *** arguile left
[03:07] *** meteorjay left
[03:07] *** Caelum left
[03:07] *** allbery_b left
[03:07] *** Maddingue left
[03:07] *** ting_ left
[03:07] *** Eevee left
[03:07] *** Patterner left
[03:07] *** TimToady left
[03:07] *** mtve left
[03:07] *** agentzh left
[03:07] *** Tene left
[03:07] *** drbean_ left
[03:07] *** cj left
[03:07] *** buubot left
[03:07] *** r0bby left
[03:07] *** pjcj left
[03:07] *** moritz_ left
[03:07] *** speckbot left
[03:07] *** REPLeffect_ left
[03:07] *** PerlJam left
[03:07] *** Jedai left
[03:07] *** smtms left
[03:07] *** SubStack left
[03:07] *** kst left
[03:07] *** nipotaway left
[03:07] *** gbacon left
[03:07] *** Sartak left
[03:07] *** obra left
[03:07] *** integral left
[03:07] *** mofino left
[03:07] *** fullermd left
[03:07] *** cls_bsd left
[03:07] *** tobeya left
[03:07] *** IllvilJa left
[03:07] *** SamB left
[03:07] *** lambdabot left
[03:07] *** spinclad left
[03:07] *** yves left
[03:07] *** Lunchy left
[03:07] *** Khisanth left
[03:07] *** joejaxx left
[03:07] *** stevan_ left
[03:07] *** carlosf left
[03:07] *** zev left
[03:07] *** xdg_ left
[03:07] *** zamolxes left
[03:07] *** japhb left
[03:07] *** silug left
[03:07] *** jrockway left
[03:07] *** zostay left
[03:07] *** ingy left
[03:07] *** IRSeekBot left
[03:07] *** kane_ left
[03:07] *** ilbot2 left
[03:07] *** alester left
[03:07] *** yahooooo left
[03:07] *** hcchien left
[03:07] *** cookys left
[03:07] *** buu left
[03:07] *** avar left
[03:07] *** tcliou left
[03:08] *** pasteling left
[03:08] *** LCamel left
[03:08] *** gugod left
[03:08] *** aindilis left
[03:08] *** TreyHarris left
[03:08] *** charsbar left
[03:08] *** mj41 left
[03:08] *** diakopter left
[03:08] *** bsb left
[03:08] *** bbkr_ left
[03:08] *** pbuetow left
[03:08] *** mncharit1 left
[03:08] *** ofer left
[03:08] *** perlbot left
[03:08] *** nothingmuch left
[03:08] *** explorer left
[03:08] *** rhr left
[03:08] *** baest left
[03:08] *** pmichaud left
[03:08] *** kcwu left
[03:08] *** jiing left
[03:08] *** rafl left
[03:08] *** shachaf left
[03:08] *** araujo left
[03:09] *** BinGOs left
[03:09] *** Gothmog_ left
[03:09] *** exp_evalbot left
[03:09] *** yath left
[03:09] *** wknight8111 left
[03:10] *** Helios- left
[03:29] *** Helios- joined
[03:30] *** jjore joined
[03:30] *** mncharit1 joined
[03:30] *** pbuetow joined
[03:30] *** IllvilJa joined
[03:30] *** japhb joined
[03:30] *** TimToady joined
[03:30] *** Sartak joined
[03:30] *** Patterner joined
[03:30] *** alester joined
[03:30] *** Auzon joined
[03:30] *** explorer joined
[03:30] *** PerlJam joined
[03:30] *** mj41 joined
[03:30] *** ruoso joined
[03:30] *** wolverian joined
[03:30] *** Juerd joined
[03:30] *** pmichaud joined
[03:30] *** pugs_svnbot joined
[03:30] *** dalek joined
[03:30] *** Eevee joined
[03:30] *** charsbar joined
[03:30] *** smtms joined
[03:30] *** Jedai joined
[03:30] *** carlosf joined
[03:30] *** cookys joined
[03:30] *** baest joined
[03:30] *** audreyt joined
[03:30] *** Caelum joined
[03:30] *** agentzh joined
[03:30] *** integral joined
[03:30] *** xdg_ joined
[03:30] *** ofer joined
[03:30] *** lambdabot joined
[03:30] *** tobeya joined
[03:30] *** ting_ joined
[03:30] *** thepler joined
[03:30] *** bbkr_ joined
[03:30] *** kst joined
[03:30] *** avar joined
[03:30] *** ilbot2 joined
[03:30] *** aindilis joined
[03:30] *** bsb joined
[03:30] *** stevan_ joined
[03:30] *** kane_ joined
[03:30] *** IRSeekBot joined
[03:30] *** rafl joined
[03:30] *** gbacon joined
[03:30] *** nipotaway joined
[03:30] *** araujo joined
[03:30] *** meteorjay joined
[03:30] *** cls_bsd joined
[03:30] *** fullermd joined
[03:30] *** Tene joined
[03:30] *** qmole joined
[03:30] *** REPLeffect_ joined
[03:30] *** gugod joined
[03:30] *** ingy joined
[03:30] *** zostay joined
[03:30] *** diakopter joined
[03:30] *** drbean_ joined
[03:30] *** hcchien joined
[03:30] *** Lunchy joined
[03:30] *** silug joined
[03:30] *** r0bby joined
[03:30] *** Khisanth joined
[03:30] *** buu joined
[03:30] *** zamolxes joined
[03:30] *** SamB joined
[03:30] *** speckbot joined
[03:30] *** rhr joined
[03:30] *** moritz_ joined
[03:30] *** joejaxx joined
[03:30] *** kcwu joined
[03:30] *** pjcj joined
[03:30] *** allbery_b joined
[03:30] *** arguile joined
[03:30] *** kolibrie joined
[03:30] *** Maddingue joined
[03:30] *** buubot joined
[03:30] *** LCamel joined
[03:30] *** tcliou joined
[03:30] *** pasteling joined
[03:30] *** perlbot joined
[03:30] *** nothingmuch joined
[03:30] *** TreyHarris joined
[03:30] *** zev joined
[03:30] *** spinclad joined
[03:30] *** mtve joined
[03:30] *** SubStack joined
[03:30] *** yves joined
[03:30] *** mofino joined
[03:30] *** cj joined
[03:30] *** jrockway joined
[03:30] *** obra joined
[03:30] *** yahooooo joined
[03:30] *** jiing joined
[03:30] *** shachaf joined
[03:38] *** pbuetow_ joined
[03:49] *** pbuetow left
[03:51] *** luqui joined
[03:56] <pugs_svnbot> r20481 | putter++ | [STD_red] Line and character positions are now unchanged by removal of bogus pods.

[03:56] *** mncharit1 left
[04:28] *** exp_evalbot joined
[04:28] *** BinGOs joined
[04:28] *** Gothmog_ joined
[04:28] *** yath joined
[04:35] *** simcop2387 joined
[04:47] *** Alias_ joined
[04:53] *** BinGOs left
[04:53] *** Gothmog_ left
[04:53] *** exp_evalbot left
[04:53] *** yath left
[04:53] *** exp_evalbot joined
[04:53] *** BinGOs joined
[04:53] *** Gothmog_ joined
[04:53] *** yath joined
[04:56] *** luqui left
[04:57] *** meteorjay left
[05:00] <Auzon> TimToady: in S01, should "use v6-alpha" be "use v6" in the nested example?

[05:03] *** carlosf left
[05:16] *** xxy joined
[05:33] <speckbot> r14545 | larry++ | cleanup of old v6-alpha hack suggested by Auzon++

[05:33] <Auzon> Thanks TimToady. I'll be getting some of them in the test suite soonish.

[05:39] *** BinGOs left
[05:39] *** Gothmog_ left
[05:39] *** exp_evalbot left
[05:39] *** yath left
[05:39] *** thepler left
[05:39] *** pugs_svnbot left
[05:39] *** Juerd left
[05:39] *** audreyt left
[05:39] *** wolverian left
[05:39] *** dalek left
[05:39] *** ruoso left
[05:39] *** kolibrie left
[05:39] *** qmole left
[05:39] *** Auzon left
[05:39] *** jjore left
[05:39] *** arguile left
[05:39] *** Caelum left
[05:39] *** allbery_b left
[05:39] *** Maddingue left
[05:39] *** ting_ left
[05:39] *** Eevee left
[05:39] *** Patterner left
[05:39] *** TimToady left
[05:39] *** mtve left
[05:39] *** agentzh left
[05:39] *** Tene left
[05:39] *** drbean_ left
[05:39] *** cj left
[05:39] *** buubot left
[05:39] *** r0bby left
[05:39] *** pjcj left
[05:39] *** moritz_ left
[05:39] *** speckbot left
[05:39] *** REPLeffect_ left
[05:39] *** PerlJam left
[05:39] *** Jedai left
[05:39] *** smtms left
[05:39] *** SubStack left
[05:39] *** kst left
[05:39] *** nipotaway left
[05:39] *** gbacon left
[05:39] *** Sartak left
[05:39] *** obra left
[05:39] *** integral left
[05:39] *** mofino left
[05:39] *** fullermd left
[05:39] *** cls_bsd left
[05:39] *** tobeya left
[05:39] *** IllvilJa left
[05:39] *** SamB left
[05:39] *** lambdabot left
[05:39] *** spinclad left
[05:39] *** yves left
[05:39] *** Lunchy left
[05:39] *** Khisanth left
[05:39] *** joejaxx left
[05:39] *** stevan_ left
[05:39] *** zev left
[05:39] *** xdg_ left
[05:39] *** zamolxes left
[05:39] *** japhb left
[05:39] *** silug left
[05:39] *** jrockway left
[05:39] *** zostay left
[05:39] *** ingy left
[05:39] *** IRSeekBot left
[05:39] *** xxy left
[05:39] *** kane_ left
[05:39] *** ilbot2 left
[05:39] *** alester left
[05:39] *** yahooooo left
[05:39] *** hcchien left
[05:39] *** cookys left
[05:39] *** buu left
[05:39] *** avar left
[05:39] *** tcliou left
[05:39] *** pasteling left
[05:39] *** LCamel left
[05:39] *** gugod left
[05:39] *** aindilis left
[05:39] *** TreyHarris left
[05:39] *** charsbar left
[05:39] *** mj41 left
[05:39] *** Alias_ left
[05:39] *** simcop2387 left
[05:39] *** pbuetow_ left
[05:39] *** diakopter left
[05:39] *** bsb left
[05:39] *** bbkr_ left
[05:39] *** ofer left
[05:39] *** perlbot left
[05:39] *** nothingmuch left
[05:39] *** explorer left
[05:39] *** rhr left
[05:39] *** baest left
[05:39] *** pmichaud left
[05:39] *** kcwu left
[05:39] *** jiing left
[05:39] *** rafl left
[05:39] *** shachaf left
[05:39] *** araujo left
[05:41] *** Helios- left
[05:56] *** Helios- joined
[05:57] *** kanru joined
[05:57] *** xxy joined
[05:57] *** yath joined
[05:57] *** Gothmog_ joined
[05:57] *** BinGOs joined
[05:57] *** exp_evalbot joined
[05:57] *** Alias_ joined
[05:57] *** simcop2387 joined
[05:57] *** pbuetow_ joined
[05:57] *** jjore joined
[05:57] *** IllvilJa joined
[05:57] *** japhb joined
[05:57] *** TimToady joined
[05:57] *** Sartak joined
[05:57] *** Patterner joined
[05:57] *** alester joined
[05:57] *** Auzon joined
[05:57] *** explorer joined
[05:57] *** PerlJam joined
[05:57] *** mj41 joined
[05:57] *** ruoso joined
[05:57] *** wolverian joined
[05:57] *** Juerd joined
[05:57] *** pmichaud joined
[05:57] *** pugs_svnbot joined
[05:57] *** dalek joined
[05:57] *** Eevee joined
[05:57] *** charsbar joined
[05:57] *** smtms joined
[05:57] *** Jedai joined
[05:57] *** cookys joined
[05:57] *** baest joined
[05:57] *** audreyt joined
[05:57] *** Caelum joined
[05:57] *** agentzh joined
[05:57] *** integral joined
[05:57] *** xdg_ joined
[05:57] *** ofer joined
[05:57] *** lambdabot joined
[05:57] *** tobeya joined
[05:57] *** ting_ joined
[05:57] *** thepler joined
[05:57] *** bbkr_ joined
[05:57] *** kst joined
[05:57] *** avar joined
[05:57] *** ilbot2 joined
[05:57] *** aindilis joined
[05:57] *** bsb joined
[05:57] *** stevan_ joined
[05:57] *** kane_ joined
[05:57] *** IRSeekBot joined
[05:57] *** rafl joined
[05:57] *** gbacon joined
[05:57] *** nipotaway joined
[05:57] *** araujo joined
[05:57] *** cls_bsd joined
[05:57] *** fullermd joined
[05:57] *** Tene joined
[05:57] *** qmole joined
[05:57] *** REPLeffect_ joined
[05:57] *** gugod joined
[05:57] *** ingy joined
[05:57] *** zostay joined
[05:57] *** diakopter joined
[05:57] *** drbean_ joined
[05:57] *** hcchien joined
[05:57] *** Lunchy joined
[05:57] *** silug joined
[05:57] *** r0bby joined
[05:57] *** Khisanth joined
[05:57] *** buu joined
[05:57] *** zamolxes joined
[05:57] *** SamB joined
[05:57] *** speckbot joined
[05:57] *** rhr joined
[05:57] *** moritz_ joined
[05:57] *** joejaxx joined
[05:57] *** kcwu joined
[05:57] *** pjcj joined
[05:57] *** allbery_b joined
[05:57] *** arguile joined
[05:57] *** kolibrie joined
[05:57] *** Maddingue joined
[05:57] *** buubot joined
[05:57] *** LCamel joined
[05:57] *** tcliou joined
[05:57] *** pasteling joined
[05:57] *** perlbot joined
[05:57] *** nothingmuch joined
[05:57] *** TreyHarris joined
[05:57] *** zev joined
[05:57] *** spinclad joined
[05:57] *** mtve joined
[05:57] *** SubStack joined
[05:57] *** yves joined
[05:57] *** mofino joined
[05:57] *** cj joined
[05:57] *** jrockway joined
[05:57] *** obra joined
[05:57] *** yahooooo joined
[05:57] *** jiing joined
[05:57] *** shachaf joined
[05:58] *** BinGOs left
[05:58] *** exp_evalbot left
[05:58] *** Gothmog_ left
[05:58] *** yath left
[05:59] *** exp_evalbot joined
[05:59] *** BinGOs joined
[05:59] *** Gothmog_ joined
[05:59] *** yath joined
[06:16] *** Ad joined
[06:17] *** xxy left
[06:19] *** alc joined
[06:19] *** Ad left
[06:31] *** polettix joined
[06:31] *** justatheory left
[06:38] *** BinGOs left
[06:38] *** Gothmog_ left
[06:38] *** exp_evalbot left
[06:38] *** yath left
[06:38] *** thepler left
[06:38] *** pugs_svnbot left
[06:38] *** Juerd left
[06:38] *** audreyt left
[06:38] *** wolverian left
[06:38] *** dalek left
[06:38] *** ruoso left
[06:38] *** kolibrie left
[06:38] *** qmole left
[06:38] *** Auzon left
[06:38] *** jjore left
[06:38] *** arguile left
[06:38] *** Caelum left
[06:38] *** allbery_b left
[06:38] *** Maddingue left
[06:38] *** ting_ left
[06:38] *** Eevee left
[06:38] *** Patterner left
[06:38] *** TimToady left
[06:38] *** mtve left
[06:38] *** agentzh left
[06:38] *** Tene left
[06:38] *** drbean_ left
[06:38] *** cj left
[06:38] *** buubot left
[06:38] *** r0bby left
[06:38] *** pjcj left
[06:38] *** moritz_ left
[06:38] *** speckbot left
[06:38] *** REPLeffect_ left
[06:38] *** PerlJam left
[06:38] *** Jedai left
[06:38] *** smtms left
[06:38] *** SubStack left
[06:38] *** kst left
[06:38] *** nipotaway left
[06:38] *** gbacon left
[06:38] *** Sartak left
[06:38] *** obra left
[06:38] *** integral left
[06:38] *** mofino left
[06:38] *** fullermd left
[06:38] *** cls_bsd left
[06:38] *** tobeya left
[06:38] *** IllvilJa left
[06:38] *** SamB left
[06:38] *** lambdabot left
[06:38] *** spinclad left
[06:38] *** yves left
[06:38] *** Lunchy left
[06:38] *** Khisanth left
[06:38] *** joejaxx left
[06:38] *** stevan_ left
[06:38] *** kanru left
[06:38] *** zev left
[06:38] *** xdg_ left
[06:38] *** zamolxes left
[06:38] *** japhb left
[06:38] *** silug left
[06:38] *** jrockway left
[06:38] *** zostay left
[06:38] *** ingy left
[06:38] *** IRSeekBot left
[06:38] *** kane_ left
[06:38] *** ilbot2 left
[06:38] *** alester left
[06:38] *** yahooooo left
[06:38] *** hcchien left
[06:38] *** cookys left
[06:38] *** buu left
[06:38] *** avar left
[06:38] *** tcliou left
[06:38] *** pasteling left
[06:38] *** LCamel left
[06:38] *** gugod left
[06:38] *** aindilis left
[06:38] *** TreyHarris left
[06:38] *** charsbar left
[06:38] *** mj41 left
[06:38] *** diakopter left
[06:38] *** bsb left
[06:38] *** bbkr_ left
[06:38] *** pbuetow_ left
[06:38] *** ofer left
[06:38] *** perlbot left
[06:38] *** simcop2387 left
[06:38] *** nothingmuch left
[06:38] *** explorer left
[06:38] *** Alias_ left
[06:38] *** alc left
[06:38] *** rhr left
[06:38] *** baest left
[06:38] *** pmichaud left
[06:38] *** kcwu left
[06:38] *** jiing left
[06:38] *** araujo left
[06:38] *** rafl left
[06:38] *** shachaf left
[06:41] *** Helios- left
[06:45] *** Helios- joined
[06:46] *** Grrrr joined
[06:46] *** alc joined
[06:46] *** yath joined
[06:46] *** Gothmog_ joined
[06:46] *** BinGOs joined
[06:46] *** exp_evalbot joined
[06:46] *** kanru joined
[06:46] *** Alias_ joined
[06:46] *** simcop2387 joined
[06:46] *** pbuetow_ joined
[06:46] *** jjore joined
[06:46] *** IllvilJa joined
[06:46] *** japhb joined
[06:46] *** TimToady joined
[06:46] *** Sartak joined
[06:46] *** Patterner joined
[06:46] *** alester joined
[06:46] *** Auzon joined
[06:46] *** explorer joined
[06:46] *** PerlJam joined
[06:46] *** mj41 joined
[06:46] *** ruoso joined
[06:46] *** wolverian joined
[06:46] *** Juerd joined
[06:46] *** pmichaud joined
[06:46] *** pugs_svnbot joined
[06:46] *** dalek joined
[06:46] *** Eevee joined
[06:46] *** charsbar joined
[06:46] *** smtms joined
[06:46] *** Jedai joined
[06:46] *** cookys joined
[06:46] *** baest joined
[06:46] *** audreyt joined
[06:46] *** Caelum joined
[06:46] *** agentzh joined
[06:46] *** integral joined
[06:46] *** xdg_ joined
[06:46] *** ofer joined
[06:46] *** lambdabot joined
[06:46] *** tobeya joined
[06:46] *** ting_ joined
[06:46] *** thepler joined
[06:46] *** bbkr_ joined
[06:46] *** kst joined
[06:46] *** avar joined
[06:46] *** ilbot2 joined
[06:46] *** aindilis joined
[06:46] *** bsb joined
[06:46] *** stevan_ joined
[06:46] *** kane_ joined
[06:46] *** IRSeekBot joined
[06:46] *** rafl joined
[06:46] *** gbacon joined
[06:46] *** nipotaway joined
[06:46] *** araujo joined
[06:46] *** cls_bsd joined
[06:46] *** fullermd joined
[06:46] *** Tene joined
[06:46] *** qmole joined
[06:46] *** REPLeffect_ joined
[06:46] *** gugod joined
[06:46] *** ingy joined
[06:46] *** zostay joined
[06:46] *** diakopter joined
[06:46] *** drbean_ joined
[06:46] *** hcchien joined
[06:46] *** Lunchy joined
[06:46] *** silug joined
[06:46] *** r0bby joined
[06:46] *** Khisanth joined
[06:46] *** buu joined
[06:46] *** zamolxes joined
[06:46] *** SamB joined
[06:46] *** speckbot joined
[06:46] *** rhr joined
[06:46] *** moritz_ joined
[06:46] *** joejaxx joined
[06:46] *** kcwu joined
[06:46] *** pjcj joined
[06:46] *** allbery_b joined
[06:46] *** arguile joined
[06:46] *** kolibrie joined
[06:46] *** Maddingue joined
[06:46] *** buubot joined
[06:46] *** LCamel joined
[06:46] *** tcliou joined
[06:46] *** pasteling joined
[06:46] *** perlbot joined
[06:46] *** nothingmuch joined
[06:46] *** TreyHarris joined
[06:46] *** zev joined
[06:46] *** spinclad joined
[06:46] *** mtve joined
[06:46] *** SubStack joined
[06:46] *** yves joined
[06:46] *** mofino joined
[06:46] *** cj joined
[06:46] *** jrockway joined
[06:46] *** obra joined
[06:46] *** yahooooo joined
[06:46] *** jiing joined
[06:46] *** shachaf joined
[06:57] *** eternaleye joined
[06:57] *** pmurias joined
[07:16] <pmurias> @tell mncharity STD_red_run is broken it just passes the perl6 code along as the output of the parse

[07:16] <lambdabot> Consider it noted.

[07:25] *** wolv joined
[07:25] *** wolv left
[07:34] *** Alias_ left
[07:39] *** Ched- joined
[07:40] *** meppl joined
[07:53] *** iblechbot joined
[07:53] <pugs_svnbot> r20482 | pmurias++ | [STD_red] removed a debugging leftover which broke STD_red_run

[07:56] <pmurias> @tell mncharity i fixed tht

[07:56] <lambdabot> Consider it noted.

[08:14] *** masak joined
[08:15] *** vixey left
[08:51] <moritz_> Auzon: pong

[08:52] <moritz_> (if somewhat belated ;-)

[08:56] <pmurias> does STD.pm support quasi-quotes?

[08:58] <moritz_> what are quasi-quotes?

[08:58] <moritz_> is it that q:options/stuff/ thingy?

[08:58] <pmurias> my $code = q:code {say 1+2}

[08:59] <pmurias> they are AST literals using perl6 syntax

[08:59] <moritz_> I remember the kp6 discussion about them

[09:04] *** polettix left
[09:06] *** kanru left
[09:09] *** donaldh joined
[09:11] *** schmalbe joined
[09:18] *** rindolf joined
[09:26] *** wknight8111 joined
[09:59] *** luqui joined
[10:04] *** alc left
[10:05] *** penk joined
[10:12] *** felipe joined
[10:15] *** IllvilJa left
[10:36] <pmurias> would it be possible to add hooks to the pugs repo which checks if a comit breaks elf?

[10:37] <moritz_> imho that would be rather intrusive, unless restricted to misc/elf/

[10:38] <moritz_> you could set up a cron job that reports via an irc bot or something

[10:38] <pmurias> of course it would be restricted to misc/elf

[10:39] <moritz_> pmurias: how would you define breakage?

[10:42] *** rindolf left
[10:46] <pmurias> not self-compiling or the self-compilied version not running hello world

[10:55] <masak> do quasi-quotes close over variables?

[10:56] <moritz_> pmurias: you do notice that bootstrapping elf takes quite some time?

[10:58] <masak> i.e. `return q:code { $var }; # var in this scope, or in caller's?`

[10:59] <pmurias> moritz_: a few seconds (with elf_faster)

[11:00] <pmurias> might be better left to the bot

[11:00] <masak> ah, nvm, found it: S06:2590

[11:00] <masak> they're hygienic :)

[11:04] *** meppl left
[11:07] <moritz_> pmurias: I haven't tried elf_faster yet

[11:09] *** iblechbot left
[11:17] <pmurias> it's faster ;)

[11:17] <pugs_svnbot> r20483 | pmurias++ | renamed EmitNoMooseP5 to EmitFasterP5

[11:30] *** chris2 joined
[11:32] * pmurias runs for lunch

[11:37] *** Southen joined
[11:55] *** FurnaceBoy joined
[12:09] <moritz_> http://blog.koehntopp.de/uploads/DSC01935.JPG

[12:11] *** r0bby left
[12:13] *** luqui left
[12:14] *** alanhaggai joined
[12:35] <moritz_> pugs: my %h = (1, 2);

[12:35] <exp_evalbot> RESULT[{("1" => 2),}]

[12:45] *** Psyche^ joined
[12:57] *** Patterner left
[12:57] *** Psyche^ is now known as Patterner

[13:01] *** alanhaggai left
[13:04] *** cmarcelo joined
[13:07] *** Psyche^ joined
[13:14] *** FurnaceBoy left
[13:19] *** meppl joined
[13:24] *** Patterner left
[13:24] *** Psyche^ is now known as Patterner

[13:26] *** elmex joined
[13:34] *** eternaleye left
[13:36] *** alanhaggai joined
[13:39] *** Grrrr left
[13:39] *** Grrrr joined
[13:41] *** cognominal_ left
[13:44] *** iblechbot joined
[13:44] *** alanhaggai left
[13:47] *** cognominal_ joined
[13:52] *** rdice joined
[13:56] *** TJCRI joined
[13:57] *** sscaffidi joined
[14:06] <pugs_svnbot> r20484 | pmurias++ | changed hash accesses on objects to method calls

[14:08] *** sscaffidi left
[14:11] *** sscaffidi joined
[14:11] <pugs_svnbot> r20485 | pmichaud++ | * add #?rakudo skip blocks

[14:11] <pugs_svnbot> r20485 | pmichaud++ | * tests still don't pass in rakudo because of $_ in bare closures

[14:22] <TimToady> pmurias: STD.pm does not yet have support for quasi-quoting.  (It used to have support for the "triple rule" via the old quotesnabber mechanism, but nibbler doesn't know about triple-quotes yet.  Nothing in STD has ever recognized :code though.)

[14:23] <pugs_svnbot> r20486 | pmurias++ | changed some more illegal private attributes accesses into method calls

[14:23] <pugs_svnbot> r20486 | pmurias++ | marked some p5 regexes as rx:P5

[14:24] *** schmalbe left
[14:24] <pmurias> TimToady: thanks

[14:25] <TimToady> still working out whether balanced quotes should be handled by language derivation rather than context variable, and this tends to tell me it should, since the quasi-quote char will almost always be {...}, and in any case there are far fewer bracket chars than other characters, so we're not talking about a lot of new derived languages, I suspect

[14:26] <TimToady> and then the triple-quote rule can be generically written as <starter>**3 as long as the language defines a starter rule

[14:27] <TimToady> so at the moment only unbalanced quotes will be matched implicitly by setting $+STOP

[14:28] <TimToady> it's also quite possible that $+STOP is a premature optimization, and most programs will use only a few quote chars that can be handled by derivation...we'll see how it works out

[14:29] *** meppl left
[14:42] *** justatheory joined
[14:59] *** IllvilJa joined
[15:05] *** explorer is now known as JoaquinFerrero

[15:06] *** JoaquinFerrero is now known as explorer

[15:30] *** IllvilJa left
[15:33] <pugs_svnbot> r20487 | particle++ | [spec] start marking string length tests for rakudo

[16:00] *** sscaffidi left
[16:12] *** masak left
[16:19] *** rindolf joined
[16:19] <pugs_svnbot> r20488 | pmurias++ | [elf] removed more of treating objects as hashes

[16:30] *** Patterner left
[16:36] *** Psyche^ joined
[16:36] *** Psyche^ is now known as Patterner

[16:38] *** eternaleye joined
[16:46] *** justatheory left
[16:46] *** justatheory joined
[16:51] *** nipotan joined
[16:51] *** nipotan left
[16:51] <Auzon> moritz_: re pong... I forgot what I was going to ask.

[16:52] <moritz_> Auzon: ok ;-)

[16:52] *** nipotaway is now known as nipotan

[16:52] <moritz_> if it were important you'd certainly resorted to email

[16:52] <pmichaud> Auzon++  # getting v6-alpha removed from spec.  :-)

[16:52] <moritz_> oups

[16:53] <Auzon> moritz_: It's almost certainly related to evalbot and elf, so it's not urgent

[16:55] <Auzon> re v6-alpha in the spec: I counted some 597 test files in pugs/t that use v6-alpha. Is there any problem with a just doing global replacement on them?

[16:55] *** eternaleye left
[16:55] <moritz_> Auzon: if you restrict your regexes sufficiently it shouldn't be a problem

[16:56] <Auzon> I'll do a svn diff to make sure. Is it a problem to do them all in one shot?

[16:56] <moritz_> ie "s/^(\s)*use\s+v6-alpha;\s*$/${1}use v6;/

[16:56] <moritz_> no, problem, go right ahead

[16:57] <[particle]> please do! yay.

[16:57] <pmichaud> I think it's pretty safe... please commit :-)

[16:57] <Auzon> Alright.

[16:57] * pmurias is annoyed by implementation specific p6 "extensions"

[16:57] <moritz_> I just don't want comments along the lines "the difference between v6 and v6-alpha is..." mangled

[16:57] <moritz_> they should be removed, not mangled ;)

[16:58] <pmichaud> v6-alpha was in the spec, so it's not exactly "implementation specific"  :-)

[16:58] <pmurias> i'm removing non-speced workarounds in elf

[16:59] <pmurias> an object in elf is a p5 hash underneath

[16:59] <Auzon> /^use v6-alpha;$/ seems to work fine

[17:00] <pmurias> so you can use $obj<foo> to access a private foo attribiute

[17:01] <Auzon> and there are four files that mention v6-alpha without being in the earlier format.

[17:01] <Auzon> OK.

[17:05] <pmurias> pmichaud: is it possible to work on rakudo withouth touching pir this days?

[17:05] <pmichaud> pmurias: not yet.  coming soon.

[17:05] <pmichaud> well, unless you're doing makefile, test, or harness stuff :-)

[17:06] <pmichaud> moritz++ added a very useful patch yesterday to improve our spectest handling

[17:06] <[particle]> so far, rakudo can compile 300+ lines of CGI.pm in the pugs repo

[17:07] <moritz_> cool

[17:07] <[particle]> if it weren't for gather/take, it'd probably be >400

[17:07] <pmurias> pir is my least favourite language

[17:10] <Tene> gather/take isn't implemented?

[17:10] <[particle]> nope

[17:10] <Tene> Huh.

[17:10] <Tene> I know what I'm working on tonight, then.

[17:11] <pmichaud> sounds like Tene++ is going to pull a jonathan++ on us :-)

[17:11] <Tene> What's jonathan about this?

[17:13] <pmichaud> implementing something early that I think will come later :-)

[17:13] <pmichaud> like Junctions.  :-)

[17:13] <Auzon> rakudo: say 1 == 1|2|3

[17:13] <exp_evalbot> OUTPUT[1␤]

[17:13] <pmichaud> I think junctions may be disabled at the moment

[17:14] <Tene> rakudo: my $f = 1|2|3; $f = $f + 5; say $f.perl;

[17:14] <exp_evalbot> OUTPUT[Method 'perl' not found for invocant of class 'String'␤current instr.: 'parrot;Junction;perl' pc 3746 (src/gen_builtins.pir:2835)␤called from Sub '_block11' pc 113 (EVAL_10:42)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 783 (src/PCT/HLLCompiler.pir:458)␤called from Sub

[17:14] <exp_evalbot> ..'parrot;PCT::HLLCompiler;evalfiles' pc 1065 (src/PCT/HLLCompile...

[17:14] <Tene> rakudo: my $f = 1|2|3; $f = $f + 5; say $f;

[17:14] <exp_evalbot> OUTPUT[get_string() not implemented in class 'Junction'␤current instr.: 'print' pc 7445 (src/gen_builtins.pir:5254)␤called from Sub 'say' pc 7467 (src/gen_builtins.pir:5264)␤called from Sub '_block11' pc 116 (EVAL_10:42)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 783

[17:14] <exp_evalbot> ..(src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;...

[17:16] <Tene> pmichaud: is there anything particularly tricky about gather/take that makes you expect it to not come until later?

[17:17] <pmurias> $foo.accessor(...) is illegal perl6?

[17:17] *** mncharity joined
[17:18] <pmurias> mncharity: hi

[17:18] <mncharity> hi ﻿pmurias :)

[17:18] <lambdabot> mncharity: You have 2 new messages. '/msg lambdabot @messages' to read them.

[17:18] <pmurias> elf is currently broken as it depended on bugs

[17:18] <pmichaud> Tene:  just the handling of the collection of return arguments is all

[17:19] <mncharity> highly dependent on bugs.  aka bootstrap. :)

[17:19] <mncharity> looking...

[17:19] <pmichaud> Tene: it may actually be easy to implement, which is why I was saying it's another "jonathan".  I thought Junctions might be tricky until he did a simple implementation :-)

[17:20] <mncharity> at some point we should probably have a concept of a stable/~release binary.  for things like misc/elf/showcode to use.

[17:21] <pmurias> i'm thinking how to solve it so use the prev revision 

[17:21] <Eevee> oh hey when did we get junctions

[17:22] <Eevee> rakudo: my $f = 1|2|3; $f = $f + 5; say 7 == $f;

[17:22] <exp_evalbot> OUTPUT[1␤]

[17:22] <Eevee> nice

[17:22] <mncharity> re solve, so is the cause known?

[17:22] <pmurias> yes

[17:23] <mncharity> *﻿misc/elfish/showcode

[17:23] <mncharity> ?

[17:23] <pmurias> the problem was that elf used <attr> instead of attr

[17:24] <pmurias> * .attr

[17:25] <pmurias> when i substitutes .attr for <attr> a bug surfaced

[17:26] <pugs_svnbot> r20489 | pmurias++ | [elf] slightly less broken

[17:26] <mncharity> hmm.  I suspect Emit is using implicit IR node type detection, by saying things like  if $n<foo> { 'ah, $n supports foo, so...' }

[17:26] <pmurias> $n<foo> is horrible and strictly forbiden in perl6

[17:27] <pmurias> when i solved the bug which surfaced another one appeared with the accessors

[17:27] <mncharity> :)

[17:27] <mncharity> err, re '﻿horrible and strictly forbiden', :)

[17:27] <pmurias> which should be used $foo.bar = 123 not $foo.bar(123)

[17:28] *** eternaleye joined
[17:28] <pmurias> there are some $foo.bar(123) abuses in elf left

[17:29] <mncharity> yep.  welcome to the fun which is bootstrapping...  (at least for a non kernel language "onion" approach)

[17:30] <pmurias> the ci'ed elf_f_faster is the one from the previous version

[17:32] <pmurias> an "onion" approach isn't much better

[17:34] <pmurias> misunderstood

[17:34] <mncharity> ﻿"onion" allows each layer to achieve correctness, independently of those above it.

[17:35] <pmurias> if one of the layers contains hack the others are tainte

[17:35] <pmurias> d

[17:36] <mncharity> but there's no need for a layer to contain a hack.  ie, "onion" is usually implemented on top of another language, and only becomes self-implemented towards the end.

[17:36] <pmurias> a kernel language fixes a lots of problems

[17:36] <mncharity> err, what I just said wasn't quite true.

[17:37] <mncharity> hmm :/

[17:37] <mncharity> anyway, back to creating a "bootstrap test" Makefile...

[17:38] <pmurias> i'm a bit confused now, i'll banish the non-lvalue accessor usage later today

[17:39] <Auzon> Here goes nothing.

[17:39] *** sscaffidi joined
[17:39] <pmurias> Auzon: ?

[17:39] <Auzon> I'm committing all those files.

[17:43] <moritz_> the commit arrived here

[17:43] <pugs_svnbot> r20490 | Auzon++ | s/^use v6-alpha;$/use v6;/;

[17:43] <pugs_svnbot> r20490 | Auzon++ | Also catching a few other mentions of v6-alpha.

[17:44] <Auzon> I visually reviewed the diff, so it should be OK.

[17:44] <[particle]> heh, if only that were always true

[17:45] <Auzon> Indeed.

[17:48] *** TJCRI left
[17:49] <mncharity> ﻿Auzon++  # bulk t/ improvements

[17:52] <moritz_> @karma Auzon

[17:52] <lambdabot> Auzon has a karma of 9

[17:54] * moritz_ predicts that within the next two months Auzon++'s karma will increase by at least 150

[17:54] <[particle]> within the past second auzon++'s karma rose by one

[17:55] <mncharity> ﻿pmurias: the key is to look at the set of things broken/missing, choose one you hypothesize is currently easily addressed, attempt it, do it {fully, partially, or back out as being unexpectedly difficult}, and (most importantly) get it back to being working.

[17:57] <mncharity> That last being the "always keep a place to stand" standard advice.  It's very easy to wander off the "bootstrap path" into woods of recursive yaks ("to finish this, I'll fix that, but that turns out to require the other, which..." starts to get very confusing and unmanagable).

[18:01] <pugs_svnbot> r20491 | putter++ | [elf] Makefile added with README's bootstrap test (modified to start on elf_f_faster).  README now empty.

[18:11] *** rindolf left
[18:25] *** b_jonas joined
[18:29] <moritz_> I just tried 'make' in elf_f_src

[18:29] <moritz_> make: *** No rule to make target `../elf_f_faster2', needed by `bootstrap_executable_permissions'.  Stop.

[18:31] <pugs_svnbot> r20492 | putter++ | [elf] Makefile: add test targets, separate concepts of rebuild and bootstrap.

[18:32] <mncharity> ﻿moritz_: fixed

[18:32] <mncharity> though default target is now a test.  hmm, perhaps that's a mistake

[18:32] <mncharity> ?

[18:33] <mncharity> starting with empty STD_red cache, the elf_f_faster and elf_f bootstrap checks take 70 s on my box.

[18:34] <mncharity> ﻿moritz_: note that the elf_f_src sources are currently in a broken state.  suggest svn up -r...

[18:38] <mncharity> cd misc/elf; svn up . -r20479; svn up elf_f_src/Makefile

[18:38] <moritz_> mncharity: the bootstrap hell you wanted to avoid? :/

[18:39] <mncharity> sigh.  "the woods are pretty, but dark and deep"

[18:41] <mncharity> but now that you have a working elf_f_faster you can run  make demo  in misc/elfish/showcode.  last night's cute hack.

[18:41] <mncharity> :)

[18:47] <pugs_svnbot> r20493 | putter++ | [elf] elf_f_faster: reverted to working r20479.

[18:47] <mncharity> ﻿pmurias: I took the liberty of reverting the elf_f_faster executable.  code is still the same.  want people to be able to see last night's cute toy.

[18:47] <mncharity> s/code/sources/

[18:49] <moritz_> sh: line 1: ./../STD_red/STD_red_run: No such file or directory

[18:49] <moritz_> Parse failed.

[18:50] <mncharity> command line?

[18:50] <moritz_> "make demo"

[18:50] <moritz_> I think the ./ should be ../

[18:53] *** ofer left
[18:58] <mncharity> fixed, i think.  ./ ?

[18:58] <pugs_svnbot> r20494 | putter++ | [elfish/showcode] Makefile: fixed.  The ELF_STD_RED_RUN check now fails properly, and anyway, the Makefile itself now sets it.  moritz_++

[18:59] <mncharity> not fixed.  sloppy.  sigh.  looking...

[18:59] *** r0bby joined
[19:00] <moritz_> now 'showcode' builds for me

[19:01] <moritz_> and when I run it I get 'Use of uninitialized value $file in concatenation (.) or string at ./showcode line 225.

[19:01] <moritz_> do I need X for that?

[19:01] *** deephan joined
[19:03] <mncharity> re ﻿'Use of uninitialized value $file'..., ?!

[19:03] <pugs_svnbot> r20495 | putter++ | [elfish/showcode] Makefile: trying again.  Now requires user to set ELF_STD_RED_RUN=../../STD_red/STD_red_run themselves.

[19:04] <moritz_> fnow it works

[19:04] <moritz_> mncharity++

[19:08] <mncharity> np.  should have tested a bit, but it was late.  my thanks for serving as a guinea pig.  :/

[19:09] <moritz_> guinea pigs are tasty ;)

[19:09] <moritz_> or so it's said - I never ate one ;)

[19:09] *** lisppaste3 joined
[19:09] <mncharity> not yet set up to show the analysis notes in the IR pane.  and the IR tree needs to be compactified.  and... so much else.  but still... there are pretty colors.

[19:09] <mncharity> :)

[19:10] <mncharity> "p6 needs more pretty colors"

[19:10] <moritz_> indeed

[19:12] <mncharity> incidentally, someone could take the same approach as showcode does to dump a syntax information tree for editor source coloring, etc.

[19:12] <mncharity> s/same/similar/

[19:12] <mncharity> or just for colorful html-ifying of p6 source.

[19:15] <mncharity> oh, hmm.  showcode actually depends on the elf_f_src *sources* working.  because it does code parsing and ir work, it has a copy of the compiler.  so it won't work on HEAD.  only worked for you because you -r﻿20479'ed.  :/

[19:16] <moritz_> uhm, I didn't (or so I think)

[19:16] <mncharity> oh, no, maybe ok.  as long as only the emitter is broken, rather than the ir analysis too.

[19:18] <mncharity> intermittent svn failures...

[19:19] <moritz_> it seems that feather's apache is half b0rked

[19:20] <moritz_> busy rakudo.org day ;)

[19:20] *** explorer left
[19:20] <mncharity> ﻿busy rakudo.org day?

[19:21] * mncharity joins #parrot

[19:23] <mncharity> ﻿pmurias: re $n<foo>, re could always define a  method postcircumfix:[< >] in IRx1::Base, and pretend the $n<foo> are non-bogus... ;)

[19:24] <mncharity> *s/re/we/

[19:25] <mncharity> ﻿moritz_: did the javascript work for you?

[19:26] <moritz_> mncharity: I don't know what it should do, but it hilights and scrolles the left and middle frame if I click on the right

[19:26] <mncharity> good.  should be able to click in the other frames as well, and have all 3 stay synced.

[19:27] <moritz_> mncharity: which comes remarkably close to what I intended when I thought about my 'perlhints' project, only that the anotations should be semantic informations in natural language

[19:27] <mncharity> re synced, or not... hmm...

[19:28] <moritz_> would be cool, but I don't know how useful it would be

[19:28] <mncharity> ah.  more windows! :)  also have a whole nother dimention... mouseover popups.

[19:31] <mncharity> ok, so ~stays in sync, but no so good about cleaning up past highlighting.  unsuprising.  @infinite_todo_list.push

[19:32] *** FurnaceBoy joined
[19:32] <mncharity> @a.splice(randint(@a),0,$x) ?

[19:32] <lambdabot> Unknown command, try @list

[19:32] <mncharity> +@a

[19:32] <mncharity> perl6: 3 => 4

[19:32] <exp_evalbot> kp6: OUTPUT[syntax error at position 2, line 1 column 2:␤3 => ␤  ^ HERE␤]

[19:32] <exp_evalbot> ..pugs: RESULT[(3 => 4)]

[19:32] <exp_evalbot> ..rakudo: OUTPUT[get_bool() not implemented in class 'Perl6Pair'␤current instr.: 'parrot;PCT::HLLCompiler;command_line' pc 1288 (src/PCT/HLLCompiler.pir:688)␤called from Sub 'parrot;Perl6::Compiler;main' pc 9782 (perl6.pir:186)␤]

[19:33] <mncharity> pugs: my $h = (3=>4,5=>6)

[19:33] <exp_evalbot> RESULT[[(3 => 4), (5 => 6)]]

[19:34] <mncharity> pugs: my $h = (3=>4,5=>6); $h.WHAT

[19:34] <exp_evalbot> RESULT[::Array]

[19:34] <Eevee> why is rakudo trying to cast a Pair to Bool?

[19:35] <mncharity> ?

[19:35] <moritz_> that's what the error message is saying

[19:35] <mncharity> s/?/dunno/

[19:35] <mncharity> :)

[19:35] <mncharity> rakudo: 0

[19:35] <exp_evalbot> RESULT[0]

[19:36] <mncharity> ﻿rakudo: 1

[19:36] <mncharity> rakudo: 0

[19:36] <exp_evalbot> RESULT[0]

[19:36] <mncharity> rakudo: 1

[19:36] <exp_evalbot> RESULT[1]

[19:37] <Auzon> Oh, is that the one character thing?

[19:37] <Auzon> ﻿rakudo: 1

[19:37] <Auzon> Yep, it is

[19:37] <mncharity> ﻿rakudo: my %h; %h

[19:37] <mncharity> rakudo: my %h; %h

[19:37] <exp_evalbot> RESULT[Method 'perl' not found for invocant of class 'Mapping'␤current instr.: '_block11' pc 38 (EVAL_11:18)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 783 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1065 (src/PCT/HLLCompiler.pir:587)␤called from Sub

[19:37] <exp_evalbot> ..'parrot;PCT::HLLCompiler;command_line' pc 1244 (...

[19:37] <mncharity> re ws character, yeah. :/

[19:38] <mncharity> rakudo: my @a; @a

[19:38] <exp_evalbot> RESULT[Method 'perl' not found for invocant of class 'List'␤current instr.: '_block11' pc 38 (EVAL_11:18)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 783 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1065 (src/PCT/HLLCompiler.pir:587)␤called from Sub

[19:38] <exp_evalbot> ..'parrot;PCT::HLLCompiler;command_line' pc 1244 (src...

[19:38] <mncharity> just for completeness...

[19:38] <mncharity> rakudo: my $s; $s

[19:38] <exp_evalbot> RESULT[Method 'perl' not found for invocant of class 'Undef'␤current instr.: '_block11' pc 38 (EVAL_11:18)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 783 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1065 (src/PCT/HLLCompiler.pir:587)␤called from Sub

[19:38] <exp_evalbot> ..'parrot;PCT::HLLCompiler;command_line' pc 1244 (sr...

[19:43] <mncharity> perl6: my %h = {2=>3,4=>5};

[19:43] <exp_evalbot> kp6: RESULT[{ '4' => 5, '2' => 3,  }]

[19:43] <exp_evalbot> ..pugs: RESULT[{("2" => 3), ("4" => 5)}]

[19:43] <exp_evalbot> ..rakudo: RESULT[Method 'perl' not found for invocant of class 'Closure'␤current instr.: '_block11' pc 38 (EVAL_11:18)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 783 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1065 (src/PCT/HLLCompiler.pir:587)␤called

[19:43] <exp_evalbot> ..from Sub 'parrot;PCT::HLLCompiler;command_line' pc 1244 (...

[19:47] *** meteorjay joined
[19:48] <mncharity> ﻿moritz_: re hints, I've used them as a shortcut rather than pawing through Snn.  it's an emacs/lisp thing, perhaps now eclipse, but it would be nice in editors to be able to "click" on constructs and get hints, perhaps even Snn sections.

[19:49] <mncharity> also need a p6 QuickRef at some point.   http://www.zenspider.com/Languages/Ruby/QuickRef.html

[19:49] <moritz_> indeed, but atm perl 6 is still too unstable to really do something like that

[19:50] <mncharity> really?  hmm

[19:51] <mncharity> nice Google logo

[19:51] <lambdabot> Title: Ruby QuickRef

[19:52] <pugs_svnbot> r20496 | moritz++ | [evalbot] truncate rakudo's stack traces

[19:53] *** exp_evalbot left
[19:53] *** exp_evalbot joined
[19:53] <moritz_> rakudo: foo bar garbage

[19:53] <exp_evalbot> OUTPUT[Could not invoke non-existent sub garbage␤current instr.: '_block11' pc 21 (EVAL_10:15)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 783 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1065 (src/PCT/HLLCompiler.pir:587)␤called from Sub

[19:53] <exp_evalbot> ..'parrot;PCT::HLLCompiler;command_line' pc 1244 (src/PCT/HLLCom...

[19:54] *** exp_evalbot left
[19:54] *** exp_evalbot joined
[19:54] <moritz_> rakudo: foo bar garbage

[19:54] <exp_evalbot> OUTPUT[Could not invoke non-existent sub garbage␤current instr.: '_block11' pc 21 (EVAL_10:15)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 783 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1065 (src/PCT/HLLCompiler.pir:587)␤called from Sub

[19:54] <exp_evalbot> ..'parrot;PCT::HLLCompiler;command_line' pc 1244 (src/PCT/HLLCom...

[19:54] <moritz_> damn

[19:54] <moritz_> why doesn't this work?

[19:55] <pmurias> mncharity: i think removing implementation specific hack is very important

[19:55] <pmurias> * hacks

[19:55] *** exp_evalbot left
[19:55] *** exp_evalbot joined
[19:55] <moritz_> rakudo: foo bar garbage

[19:55] <exp_evalbot> OUTPUT[Could not invoke non-existent sub garbage␤current instr.: '_block11' pc 21 (EVAL_10:15)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 783 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1065 (src/PCT/HLLCompiler.pir:587)␤called from Sub

[19:55] <exp_evalbot> ..'parrot;PCT::HLLCompiler;command_line' pc 1244 (src/PCT/HLLCom...

[19:56] <PerlJam> moritz_: what do you expect it to do?

[19:56] <moritz_> PerlJam: truncate the stack trace beginning from the first "called from Sub"

[19:56] *** exp_evalbot left
[19:57] *** exp_evalbot joined
[19:57] <moritz_> rakudo: foo bar garbage

[19:57] <exp_evalbot> OUTPUT[Could not invoke non-existent sub garbage␤current instr.: '_block11' pc 21 (EVAL_10:15)␤

[19:57] <mncharity> agreed.  but choice of "which hacks to remove in which order" is key.  eg, implicit checking of node type would become very easy if/when Emit switches over to multi methods.  which would also make emitting smop easier (the original motivation for it).

[19:57] <moritz_> now that's better

[19:57] <Juerd> moritz_: More than half I assume.

[19:58] <Juerd> mncharity, moritz_: apache2 is forcefully killed and restarted every 3 hours because it has a huge memory leak

[19:59] <pmurias> mncharity: you can use .isa

[19:59] <pugs_svnbot> r20497 | moritz++ | [evalbot] fixed regex in previous commit

[19:59] <pmurias> using if $n<foo> {} is confusing and error prone

[20:00] <PerlJam> pmurias: tell that to the language designer  ;-)

[20:00] <mncharity> the step by step choices of "next, do we: () add functionality X?  with what hacks?  () remove old hack Y?" are what take us from no-p6 at all to ultimate spec compliance.    re .isa, true. :)

[20:01] <mncharity> err, do we have .isa?  .WHAT perhaps.

[20:01] <mncharity> re error prone, yeah. :/

[20:02] <mncharity> ﻿Juerd: :)  yipes.  image of flooding...

[20:05] * moritz_ looks if there are new Apache packages in debian

[20:07] <pmurias> PerlJam: i meant the elf version of $n<foo> {}

[20:08] *** Ched- left
[20:09] <moritz_> Juerd: I just upgraded apache2

[20:09] <pmurias> mncharity: i'll finish the $n<foo> -> $n.foo move, but it will require braking the moosish elf backend as moose uses different accesors than perl6

[20:09] *** deephan left
[20:10] <pmurias> TimToady: perl6 uses $foo.bar = 123 accessors instead of $foo.bar(123), right?

[20:10] <moritz_> pmurias: if you declare 'has $.bar is rw', yes

[20:11] <pmurias> found proof at last

[20:11] <Juerd> moritz_: We'll see if that helps.

[20:11] <pmurias>    (($anonymous = 0) does answer).answer = 42;

[20:12] <Juerd> moritz_: I have memory usage charts (time/memory) so I can see if it helps. For now, please keep the cronjob that kills apache.

[20:12] <Juerd> http://c14.convolution.nl/munin/perl6.nl/feather1.perl6.nl-memory.html

[20:12] <lambdabot> Title: Munin :: perl6.nl :: feather1.perl6.nl :: memory, http://tinyurl.com/6kwoy5

[20:13] <Eevee> http://www.php.net/~derick/meeting-notes.html#id44 -- apparently named parameters were considered for PHP6.  they have a slightly different take on the subject.

[20:15] <moritz_> "It also makes for messier code.". Sure.

[20:15] <pmurias> ;)

[20:15] <Eevee> this document is rather insightful

[20:15] <Eevee> now I know why PHP is such a mess

[20:15] <Eevee> the developers are just insane

[20:15] <moritz_> PHP traditionally makes the mistakes that Perl fixed 15 years ago

[20:16] *** Ched- joined
[20:16] <Eevee> it also invents new ones

[20:16] <Eevee> there's a function that acts like s///e

[20:16] *** Ched- left
[20:17] <b_jonas> what about such a function?

[20:17] <Eevee> except it takes just a string as the substituted part (since there are no lambdas), and substitutes captures *before* evaluating the string

[20:17] <b_jonas> what?

[20:17] *** Ched- joined
[20:17] <b_jonas> no lambdas or anything?

[20:17] <Eevee> no, php has no lambdas

[20:17] <b_jonas> not even named subs like python?

[20:17] <pmurias> b_jonas: ;)

[20:17] <b_jonas> that is refs to named subs

[20:18] <Eevee> functions aren't first-class objects in php

[20:18] <b_jonas> eek

[20:18] <b_jonas> that's just stupid

[20:18] <Eevee> there are a few functions that accept function *names* as arguments, but that's all

[20:18] <b_jonas> and there isn't even some hack like in c++ for it

[20:18] <b_jonas> like a default method

[20:18] <b_jonas> ?

[20:18] <b_jonas> objects that you can call as functions, that is

[20:19] <fullermd> Oh, but you can create them, by passing the function body as a quoted string into the concisely-named create_function().  That's all you need, right?

[20:19] <Eevee> fullermd: of course!

[20:19] <b_jonas> that's just really stupid

[20:19] <b_jonas> I definitely won't use php then

[20:19] <Eevee> anyway, the problem with this is

[20:19] <b_jonas> functions are not first-class objects

[20:19] <moritz_> or read http://www.php.net/~derick/meeting-notes.html#safe-mode ;)

[20:19] <lambdabot> Title: Minutes PHP Developers Meeting

[20:19] <b_jonas> where did they get that from?

[20:19] <b_jonas> just crazy

[20:19] <Eevee> preg_replace('/(whatever)/e', 'foo($1)', "some string with whatever in it")

[20:20] <Eevee> that will substitute 'whatever' into 'foo($1)' before trying to execute it

[20:20] <Eevee> so it will try to eval, literally, 'foo(whatever)'

[20:20] <b_jonas> that's like having to call quotemeta and construct a query with concatenation to insert something in a database

[20:20] <Eevee> you can add quotes..  but then if your pattern captures something with quotes in it..

[20:20] <b_jonas> does php force that too, btw, or is that just a usual practice?

[20:21] <Eevee> b_jonas: this is how the PHP manual suggests preventing SQL injection: http://us3.php.net/manual/en/security.database.sql-injection.php

[20:21] <lambdabot> Title: PHP: SQL Injection - Manual

[20:21] *** ruoso left
[20:21] <Eevee> well, down under 'avoiding techniques'

[20:22] <moritz_> I think there *are* DB libraries for PHP that use placeholders

[20:23] <wolverian> there's create_function(), that creates an anonymous function by taking a string of code, creating a new function and returning its name

[20:23] <moritz_> but they aren't widespread

[20:23] <wolverian> pointing out the obvious hilarity left to reader

[20:23] <Eevee> moritz_: there are; mysqli

[20:23] <moritz_> wolverian: lol ;)

[20:23] <Eevee> but even the manual doesn't suggest using them

[20:23] <moritz_> Eevee: that sounds like it only supports mysql...?

[20:23] <b_jonas> well, that's stupid too

[20:23] <Eevee> yes, there are separate sets of db functions for each rdbms

[20:24] <Eevee> there's something on PEAR (php's attempt at a CPAN) that will abstract between them

[20:24] *** ruoso joined
[20:24] <b_jonas> ok, I'll avoid php even more from now on

[20:25] <b_jonas> I mean, I'll avoid it more than just python or java which I dislike

[20:25] * fullermd writes PHP for a living.

[20:25] <spinclad> :(

[20:25] <b_jonas> pity

[20:26] <Eevee> fullermd: I am sorry

[20:26] <fullermd> I thought about selling crack in schoolyards instead, but the hours are inconvenient.

[20:26] <moritz_> we can't be all winners, can we?

[20:26] <moritz_> lol

[20:26] <moritz_> fullermd++

[20:26] <spinclad> you would get more respect though

[20:26] <b_jonas> fullermd: are you writing thin wrapper functions for code with source in other language?

[20:27] <fullermd> Well, I once had some code that used PHP's stillborn Java integration...   it wasn't stillborn enough.

[20:29] <fullermd> Really, it's like way too many things in the field; it sucks, but it's often convenient, and if you know what you're doing it'll succeed in getting your work done.

[20:29] <mncharity> ﻿pmurias: breaking Mooseish elf_f would be unfortunate.  the emitter should be hacked to keep at least bootstrap working.  even if that blocks the $n.foo = 3 assignment edit for now.

[20:29] <b_jonas> do you have to work on some existing large codebase?

[20:29] <b_jonas> also, is it good apart from PHP?

[20:30] <fullermd> It takes a lot of rather-undeserved crap for the mountains of people who have no business programming at all who use it, and not enough for its real flaws under that.

[20:30] <pmurias> mncharity: it's possible to make Moose create different accessors

[20:30] <fullermd> Not really.  Lot of small codebases.  And a lot of built-up stuff over the years for new codebases.

[20:30] <moritz_> ps -el|grep apache|grep defunct|wc -l

[20:30] <moritz_> 9

[20:30] <moritz_> on feather

[20:30] <Eevee> fullermd: don't worry, I give it plenty of crap for its actual problems, but only language nerds seem to care about those

[20:31] <Eevee> "what's a closure?  that sounds dumb and useless I'm just doing web programming"

[20:31] <b_jonas> fullermd: did you try to convert them to some non-php language?

[20:32] <fullermd> Non-billable, in my "spare" time?   :p

[20:37] <mncharity> ﻿pmurias: I believe stevan_(?) said p5 lvalue accessors ~just don't work~.  or some such.  no?

[20:37] <mncharity> re hack emitter, I would be fine with the emitter special casing  $x.foo = ... .

[20:38] <stevan_> yeah lvalue sucks

[20:38] <stevan_> i think someone created a tied hack for it

[20:38] <stevan_> but that wont go in Moose

[20:38] <stevan_> you could use it here

[20:39] <stevan_> but then dont complain about performance anymore, cause whatever Moose didnt kill, the tie() will 

[20:40] <pmurias> stevan_: tie()? most cases won't be tied

[20:41] <pmurias> as there is no need to overide the accessor in most cases

[20:43] <stevan_> well if you use any moose features at all, you will need too

[20:43] <stevan_> but we already discussed this

[20:44] <pmurias> yes

[20:46] <mncharity> rakudo: say {3=>4}

[20:46] <exp_evalbot> OUTPUT[_block16␤]

[20:46] <mncharity> pugs: say {3=>4}

[20:46] <exp_evalbot> OUTPUT[*** ␤    Unexpected end of input␤    Closing hash curly may not terminate a line;␤    please add a comma or a semicolon to disambiguate␤    at /tmp/RkWmrkqm2M line 2, column 1␤]

[20:46] <jrockway> pugs: do { say { 3 => 4 } }

[20:46] <exp_evalbot> OUTPUT[3        4␤␤]

[20:47] <mncharity> danke

[20:47] <mncharity> pugs: do { say { 3 => 4, 5=>6 } }

[20:47] *** exp_evalbot left
[20:47] <mncharity> pugs: do { say { 3 => 4, 5=>6 } }

[20:47] *** exp_evalbot joined
[20:47] <jrockway> heh, pugs just hates you :D

[20:47] <mncharity> lol

[20:47] <mncharity> pugs: do { say { 3 => 4, 5=>6 } }

[20:47] *** exp_evalbot left
[20:47] <mncharity> oky

[20:47] *** exp_evalbot joined
[20:47] <pmurias> does x01.pl serve a purpose anymore?

[20:48] <mncharity> no, that can go

[20:48] <mncharity> s/can/should/

[20:48] <mncharity> kp6: say {3=4,5=>6}

[20:48] <exp_evalbot> r20497: OUTPUT[error in Block at compiled/perl5-kp6-mp6/lib/KindaPerl6/Grammar/Sub.pm line 753, <> line 1.␤*** Syntax Error in Block: missing closing curly bracket  ␤]

[20:48] <mncharity> sigh

[20:48] <moritz_> oh, something caused a Segmentation fault in evalbot

[20:48] <mncharity> kp6: say {3=>4,5=>6}

[20:48] *** exp_evalbot left
[20:49] <mncharity> ah, not pugs specific.

[20:49] *** exp_evalbot joined
[20:49] <mncharity> perl6: 3

[20:49] <exp_evalbot> kp6: RESULT[3]

[20:49] <exp_evalbot> ..pugs: RESULT[3]

[20:49] <exp_evalbot> ..rakudo: RESULT[3]

[20:49] <mncharity> perl6: say {}

[20:49] <exp_evalbot> kp6: OUTPUT[␤]

[20:49] <exp_evalbot> ..pugs: OUTPUT[*** ␤    Unexpected end of input␤    Closing hash curly may not terminate a line;␤    please add a comma or a semicolon to disambiguate␤    at /tmp/mAOMnEQBqY line 2, column 1␤]

[20:49] <exp_evalbot> ..rakudo: OUTPUT[_block16␤]

[20:50] <mncharity> perl6: say ﻿{3=>4,5=>6}

[20:50] <exp_evalbot> kp6: OUTPUT[syntax error at position 4, line 1 column 4:␤say ﻿{3=>4,5=>6␤    ^ HERE␤]

[20:50] <exp_evalbot> ..pugs: OUTPUT[*** ␤    Unexpected "\65279{"␤    expecting bare or pointy block construct, ":", identifier or operator␤    at /tmp/A0aRoI6rIS line 1, column 5␤]

[20:50] <exp_evalbot> ..rakudo: OUTPUT[Statement not terminated properly at line 1, near "\x{ef}\x{bb}\x{bf}{3=>4,5"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤called from Sub 'parrot;Perl6::Grammar;statementlist' pc 18329 (src/gen_grammar.pir:2735)␤called from Sub

[20:50] <exp_evalbot> ..'parrot;Perl6::Grammar;statement_block' pc 15175 (src/gen_grammar.pir...

[20:50] <mncharity> sigh

[20:50] <mncharity> perl6: say {3=>4,5=>6}

[20:50] *** exp_evalbot left
[20:50] <mncharity> curious

[20:50] *** exp_evalbot joined
[20:51] *** Chillance joined
[20:53] <Eevee> wow, you killed evalbot

[20:53] <spinclad> (let me guess, rakudo sees a utf2-encoded ucs2 bom)

[20:53] *** cutz joined
[20:54] *** iblechbot left
[20:55] <spinclad> *utf8-

[20:57] *** cutz left
[21:00] <mncharity> ﻿spinclad: re utf8, nope, hand typed, no cut and paste.  something about the construct.

[21:01] * wolverian thinks about a 2-bit unicode encoding

[21:01] <moritz_> mncharity: there still was a "nasty" character in your code

[21:05] <pmurias> mncharity: i'm running make bootstrap_faster now

[21:06] <spinclad> i see:  C<< perl6: say ﻿{3=>4,5=>6} >> with a box (zero-width under a space? bom?) between 'say' and '{...}'

[21:07] <Eevee> oh, I just see a space

[21:07] <spinclad> pugs saw it as \65279, rakudo as \x{ef}\x{bb}\x{bf}

[21:07] <pmurias> could the evalbot be made bom-resistant?

[21:07] <Eevee> what is vim's "identify char under cursor"?

[21:08] *** sscaffidi left
[21:08] <kolibrie> :asc

[21:08] <spinclad> 65279 == 0xfeff

[21:08] <Eevee> aha, or ga

[21:09] <Eevee> bah, it copied as a space

[21:11] <spinclad> perhaps another clue to when irc client passes boms

[21:11] <pugs_svnbot> r20498 | pmurias++ | [elf] fixed elf_f_faster

[21:11] <pugs_svnbot> r20498 | pmurias++ | proper accessor usage (breaks the moosish elf)

[21:11] <pmurias> mncharity: should we have a file with know elf divergences?

[21:13] <pmurias> s/divergences/non standard stuff used by elf/

[21:13] <mncharity> good idea

[21:14] <mncharity> re boom, hmm, I thought i just typed that, let's see...

[21:14] <mncharity> perl6: say {3=>4,5=>6}

[21:15] *** exp_evalbot left
[21:15] *** exp_evalbot joined
[21:15] <spinclad> plain space this time

[21:15] <mncharity> if there was a bom there, then gaim/gnome is even sicker than I thought...

[21:15] <spinclad> no bom i'm sure

[21:15] <spinclad> just a pair-bomb

[21:15] <mncharity> oy

[21:16] <mncharity> re divergences, good idea

[21:16] <pmurias> mncharity: an name ideas?

[21:16] <pmurias> shower&

[21:16] <mncharity> TODO ? :)

[21:16] <mncharity> ﻿pmurias: before you go,

[21:17] <pmurias> go on

[21:17] <mncharity> re elf broken, so is that next on your todo list, or are you hoping (/me looks over sholder) someone else will fix it?

[21:17] <mncharity> :)

[21:18] <spinclad> perl6: say {3=>4,}

[21:18] <exp_evalbot> kp6: OUTPUT[3   4␤]

[21:18] <exp_evalbot> ..pugs: OUTPUT[*** ␤    Unexpected end of input␤    Closing hash curly may not terminate a line;␤    please add a comma or a semicolon to disambiguate␤    at /tmp/4IrjpRWiA0 line 2, column 1␤]

[21:18] <exp_evalbot> ..rakudo: OUTPUT[_block16␤]

[21:18] <pmurias> it's rather low on my todo list as it would involve buying a better machine to work on elf moosish

[21:18] <mncharity> the later is ok, but it needs fixing.

[21:19] <mncharity> hmm, "later" is ambigous there.  english--.  or is it "latter"?  anyway, I can look into it, but just let me know.

[21:20] <mncharity> btw, ﻿pmurias++ ;)

[21:22] <mncharity> re say, given that say.t suggests there's a method .say, it would seem to make sense for *say(*@a) to be just @a.map{$_.say}.join("")

[21:22] <mncharity> ﻿pmurias: re todo, ok, I'll look.

[21:23] <diakopter> ugh; a widespread virus/trojan/rootkit outbreak here at my office site.

[21:26] <spinclad> re say, that would put each element on its own line?

[21:27] <spinclad> and join ... what?

[21:28] <spinclad> @a.join('').say

[21:28] <lambdabot> Unknown command, try @list

[21:28] <mncharity> ﻿pmurias: did you try  make rebuild  on a clean checkout?  I quickly get a  ../elf_f_faster0 -x -o ../elf_f_faster1 Elf_Faster.pm  compile failure.

[21:29] <mncharity> so elf_f_faster self compilation is broken too.

[21:29] <mncharity> ﻿diakopter: SONY?

[21:30] <mncharity> ﻿spinclad: oh,right.  duh.   my $say_to_string is context = 1;  ...  sigh.   build .say on a .say_to_s ?  then recurse on the .say_to_s

[21:32] *** FurnaceBoy left
[21:32] <pmurias> mncharity: was in elf_f_src when comitted

[21:35] <pmurias> removed the file elf_f* accidently when removing junk

[21:35] <pmurias> rebootstraping...

[21:35] <diakopter> mncharity: not SONY... 

[21:43] *** rdice left
[21:43] <mncharity> okayyy, have ugly kludge handling of pairs and hash&array literals.  really have to do List's for real some day.  but for now...

[21:43] *** iblechbot joined
[21:44] <mncharity> will commit later.  bbl... hmm, or tomorrow.

[21:44] <Juerd> wolverian: 2 bit unicode would have to be: first bit 0 => this is the last bit for this codepoint, 1 => another bit coming up... and then the second bit encoding the codepoint somehow. Of course the 1/0 of the first bit could be reversed :)

[21:45] <pmurias> the Call and Apply nodes are a hack

[21:45] <mncharity> ﻿pmurias: I'll backlog.  Just let me know if there's anything you would like me to do.  bootstraps have great "ARRG!*%^@%%" and 'pulling out hair' frustration potential.

[21:45] <wolverian> Juerd, yeah. :)

[21:45] <mncharity> re hack, oh yes.

[21:45] <Juerd> wolverian: I don't think it would be much less efficient than utf32 ;)

[21:46] <Juerd> (sizewise)

[21:46] <wolverian> sounds like it'd be utf33, in practice :)

[21:46] <mncharity> right thing is perhaps to check if there's a lexical override in scope, and if not, apply a macro containing an inline_p5 construct.  but no macros yet.  so the macros are inlined in the emitter, and the absence of overrides is assumed.

[21:46] <pmurias> mncharity: my mid term plan is to have the sm0p grammar running

[21:47] <mncharity> that would be very neat

[21:48] <pmurias> i plan to copy the kp6 EmitPerl5Regex approach

[21:48] <pugs_svnbot> r20499 | pmurias++ | [elf] fixed elf_f_faster for real ;)

[21:49] <Eevee> that sounds like how my commit messages go.  "fixed X"  "really fixed X"  "found another bug in X"  "fuck"

[21:50] <Tene> hehe

[21:50] <pugs_svnbot> r20500 | pmurias++ | [elf] an emitter with token {...} support stub

[21:51] <pmurias> Eevee: the last one was figuring that i typed rm elf_f*

[21:51] <mncharity> yay.  got to go.  I'll sync and commit later.  re approach, not sure what that is, but np.  you saw misc/elfish_smop/, yes?

[21:51] * mncharity runs... &

[21:51] <pmurias> mncharity: yes

[21:55] <cognominal_> what is the difference between the rule \s and \h ?

[21:56] <moritz_> \h = horizontal whitespace

[21:56] <moritz_> tab, space

[21:56] <cognominal_> it seems that  \s  == <[\h\v]>

[21:57] <moritz_> \v = vertical spaces (newline, vertical tab

[21:57] <moritz_> aye

[21:57] <cognominal_> do I get that right?

[21:57] <moritz_> yes

[21:57] <cognominal_> seems that \h is silently missong from PGE

[21:58] <Tene> It is?  That would explain some things.

[21:58] <moritz_> ticket!

[21:58] *** explorer joined
[21:58] <b_jonas> what's PGE?

[21:58] <moritz_> parrot grammar engine

[21:58] <b_jonas> oh, this is perl6

[21:58] <b_jonas> I thought it was #perl

[21:59] <moritz_> ;)

[21:59] <cognominal_> yea, one need context to get the acronym soup

[22:00] <moritz_> cognominal_: or online IRC logs that explain acronyms ;)

[22:01] <cognominal_> I dream to add convestation system to the IRC protocol so that oped people can group and tag threads for later peruse

[22:01] *** gbacon left
[22:03] <moritz_> cognominal_: I'll provide you with ~ 1Mio lines of IRC logs that you can tag, for testing purposes ;)

[22:05] *** alester left
[22:06] *** gbacon joined
[22:07] *** Psyche^ joined
[22:07] <cognominal_> I have way more on my linux box.

[22:08] <moritz_> cognominal_: that's just the #perl6 and #parrot IRC log database

[22:10] <Tene> looks like I have 713M of irc logs.

[22:10] <moritz_> Tene: compressed?

[22:11] <Tene> moritz_: no. :(

[22:11] *** gbacon left
[22:11] <moritz_> Tene: I bzip2 my logs, and have about 50M atm

[22:12] *** gbacon joined
[22:12] * Tene bzip2 now.

[22:13] *** gbacon left
[22:13] *** gbacon joined
[22:13] *** fullermd left
[22:13] *** fullermd joined
[22:15] *** b_jonas left
[22:19] * moritz_ heads off to bead

[22:20] <Auzon> @karma c

[22:20] <lambdabot> c has a karma of 15

[22:20] <Auzon> @karma C

[22:20] <lambdabot> C has a karma of 15

[22:20] <Auzon> Hm.

[22:20] <Eevee> @karma perl

[22:20] <lambdabot> perl has a karma of -1

[22:20] <Eevee> oh dear.  this does not bode well

[22:21] <Auzon> perl++

[22:21] <Auzon> @karma english

[22:21] <lambdabot> english has a karma of 0

[22:22] <Auzon> @karma php

[22:22] <lambdabot> php has a karma of -1

[22:22] <Eevee> php--

[22:22] <Auzon> It seems that most inanimate systems only get --'d

[22:22] *** Patterner left
[22:22] *** Psyche^ is now known as Patterner

[22:22] <Eevee> except C, which has somehow found a loophole despite being inanimate

[22:22] <Auzon> due to cpp

[22:22] <Eevee> right

[22:23] <Auzon> @karma c++

[22:23] <lambdabot> c++ has a karma of -8

[22:23] <Auzon> Heh.

[22:23] <Auzon> @karma c

[22:23] <lambdabot> c has a karma of 15

[22:23] <Auzon> Oh, good, it didn't cascade

[22:23] *** rindolf joined
[22:27] *** fullermd left
[22:29] *** Southen_ joined
[22:36] *** fullermd joined
[22:39] *** eternaleye left
[22:46] *** Southen left
[22:47] <pmurias> @karma python

[22:47] <lambdabot> python has a karma of 0

[22:49] *** pmurias left
[22:50] *** iblechbot left
[22:53] <rindolf> perlbot: karma python

[22:53] <perlbot> Karma for python: 29

[22:55] <Auzon> Odd.

[23:05] <pbuetow_> perlbot: karma java

[23:05] <perlbot> Karma for java: -45

[23:05] <pbuetow_> @karma java

[23:05] <lambdabot> java has a karma of -23

[23:05] <pbuetow_> hehe

[23:07] <Eevee> ouch

[23:07] <Eevee> are either of these tied to purl's karma on irc.perl.org?

[23:13] <Auzon> I don't think so.

[23:21] *** [particle] left
[23:27] *** rindolf left
[23:38] *** [particle] joined
[23:43] *** Chillance left
[23:43] *** cmarcelo left
[23:46] *** chris2 left
