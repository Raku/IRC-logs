[00:03] *** s1n left
[00:03] *** japhb left
[00:06] *** ywc joined
[00:08] *** s1n joined
[00:08] *** japhb joined
[00:09] *** s1n left
[00:09] *** japhb left
[00:09] *** japhb joined
[00:13] *** jferrero left
[00:18] *** s1n joined
[00:18] *** jferrero joined
[00:19] *** s1n left
[00:19] *** jferrero left
[00:22] *** s1n joined
[00:22] *** jferrero joined
[00:23] *** s1n left
[00:23] *** jferrero left
[00:23] <rakudo_svn> r28401 | pmichaud++ | [rakudo]:

[00:23] <rakudo_svn> r28401 | pmichaud++ | * Move postfix:<i> from builtins/op.pir to classes/Complex.pir .

[00:24] *** s1n joined
[00:24] *** jferrero joined
[00:25] *** s1n left
[00:25] *** jferrero left
[00:25] *** s1n joined
[00:25] *** jferrero joined
[00:32] *** [particle]ventus joined
[00:38] *** wknight8111 joined
[00:42] *** s1n left
[00:42] *** jferrero left
[00:45] *** s1n joined
[00:45] *** jferrero joined
[00:51] *** kanru left
[00:53] *** kanru joined
[00:53] *** sri_work left
[00:59] *** wknight8111 left
[00:59] *** wknight8111 joined
[01:03] <dolmen> pmichaud, are you working on Complex?

[01:04] <pmichaud> I was just refactoring postfix:<i> at the moment.

[01:05] <pmichaud> rakudo: say 4+3i;

[01:05] <p6eval> rakudo r28402 OUTPUT[4+3i␤]

[01:05] <Auzon> rakudo: (4+3i).perl.say

[01:05] <p6eval> rakudo r28402 OUTPUT[Method 'perl' not found for invocant of class 'Complex'␤current instr.: '_block11' pc 60 (EVAL_12:21)␤

[01:05] <dolmen> I will try to improve that a bit

[01:05] <dolmen> rakudo: say 3i.WHAT;

[01:05] <p6eval> rakudo r28402 OUTPUT[Statement not terminated properly at line 1, near ".WHAT;"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[01:06] <Auzon> rakudo: (3i).WHAT.say

[01:06] <p6eval> rakudo r28402 OUTPUT[Method 'WHAT' not found for invocant of class 'Complex'␤current instr.: '_block11' pc 42 (EVAL_12:18)␤

[01:06] <Auzon> I thought .WHAT would be for Any?

[01:06] <Auzon> rakudo: Any.WHAT.say

[01:06] <p6eval> rakudo r28402 OUTPUT[Any␤]

[01:07] <pmichaud> I didn't bother to map Parrot's Complex class to a Rakudo equivalent.

[01:07] <pmichaud> I can do that.

[01:07] <Auzon> Would that improve anything?

[01:07] <pmichaud> or I can leave it for dolmen to do it :-)

[01:07] <pmichaud> yes.  The Complex type that is showing up now is actually a Parrot object (i.e., not a subclass of Perl 6's Object)

[01:07] <dolmen> yes, I'm on it

[01:07] <pmichaud> so that's why .WHAT is failing.

[01:07] <pmichaud> dolmen++

[01:10] <rakudo_svn> r28403 | pmichaud++ | [rakudo]:

[01:10] <rakudo_svn> r28403 | pmichaud++ | * Fix prefix:<^>(Any) to return an exclusive Range instead of an inclusive one.

[01:10] <rakudo_svn> r28403 | pmichaud++ | * Refactor prefix:<^>(Any) into src/classes/Range.pir .

[01:10] <Auzon> rakudo: my enum Day <Sun Mon Tue Wed Thu Fri Sat>; Day.perl.say

[01:10] <p6eval> rakudo r28402 OUTPUT[Statement not terminated properly at line 1, near "Mon Tue We"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[01:10] <pmichaud> rakudo doesn't do enum yet.

[01:11] <Auzon> oh

[01:11] <pmichaud> at least, I don't think it does, unless jonathan++ slipped it in on me.  :-)

[01:12] *** FurnaceBoy left
[01:13] *** pbuetow left
[01:15] <Auzon> rakudo: my %h = enum <a b c>; %h.perl.say

[01:15] <p6eval> rakudo r28403 OUTPUT[Could not find non-existent sub enum␤current instr.: '_block11' pc 56 (EVAL_12:24)␤

[01:20] *** redicaps joined
[01:22] <Tene> Auzon: what is enum?

[01:22] <Auzon> S12:1650 or http://perlcabal.org/syn/S12.html#Enums

[01:22] <lambdabot> Title: S12

[01:28] *** Ara5n left
[01:28] *** mofino left
[01:28] *** dalek left
[01:28] *** r0bby left
[01:28] *** Caelum_ left
[01:28] *** dolmen left
[01:28] *** stevan_ left
[01:28] *** Coleoid left
[01:28] *** jan_____ left
[01:28] *** Patterner left
[01:28] *** zostay left
[01:28] *** s1n left
[01:28] *** jferrero left
[01:28] *** yves left
[01:28] *** ilbot2 left
[01:28] *** rafl left
[01:28] *** gbacon left
[01:28] *** redicaps left
[01:28] *** cls_bsd left
[01:28] *** TimToady left
[01:28] *** diakopter left
[01:28] *** SubStack left
[01:28] *** bacek left
[01:28] *** lambdabot left
[01:28] *** kanru left
[01:28] *** alester left
[01:28] *** ingy left
[01:28] *** lumi left
[01:28] *** wknight8111 left
[01:28] *** ywc left
[01:28] *** silug left
[01:28] *** pasteling left
[01:28] *** eternaleye left
[01:28] *** bbkr__ left
[01:28] *** ruoso left
[01:28] *** xdg left
[01:28] *** japhb left
[01:28] *** gugod left
[01:29] *** rhr_ left
[01:29] *** thepler left
[01:29] *** cj left
[01:29] *** meteorjay left
[01:29] *** [particle]ventus left
[01:29] *** drbean left
[01:29] *** spinclad_ left
[01:29] *** araujo left
[01:29] *** pengrate left
[01:29] *** nothingmuch left
[01:29] *** BinGOs left
[01:29] *** bacek_ left
[01:30] *** kcwu left
[01:30] *** yahooooo left
[01:30] *** apeiron left
[01:30] *** pjcj left
[01:36] *** TimToady joined
[01:36] *** Ched- joined
[01:36] *** bacek__ joined
[01:36] *** redicaps joined
[01:36] *** wknight8111 joined
[01:36] *** kanru joined
[01:36] *** jferrero joined
[01:36] *** s1n joined
[01:36] *** [particle]ventus joined
[01:36] *** japhb joined
[01:36] *** ywc joined
[01:36] *** bacek_ joined
[01:36] *** alester joined
[01:36] *** yves joined
[01:36] *** ilbot2 joined
[01:36] *** gbacon joined
[01:36] *** rafl joined
[01:36] *** diakopter joined
[01:36] *** pengrate joined
[01:36] *** cls_bsd joined
[01:36] *** kcwu joined
[01:36] *** silug joined
[01:36] *** gugod joined
[01:36] *** drbean joined
[01:36] *** pasteling joined
[01:36] *** spinclad_ joined
[01:36] *** Ara5n joined
[01:36] *** SubStack joined
[01:36] *** lambdabot joined
[01:36] *** bacek joined
[01:36] *** mofino joined
[01:36] *** ingy joined
[01:36] *** dalek joined
[01:36] *** dolmen joined
[01:36] *** eternaleye joined
[01:36] *** bbkr__ joined
[01:36] *** stevan_ joined
[01:36] *** BinGOs joined
[01:36] *** Coleoid joined
[01:36] *** araujo joined
[01:36] *** lumi joined
[01:36] *** jan_____ joined
[01:36] *** Patterner joined
[01:36] *** rhr_ joined
[01:36] *** r0bby joined
[01:36] *** thepler joined
[01:36] *** cj joined
[01:36] *** ruoso joined
[01:36] *** yahooooo joined
[01:36] *** Caelum_ joined
[01:36] *** irc.freenode.net sets mode: +o TimToady

[01:36] *** meteorjay joined
[01:36] *** apeiron joined
[01:36] *** xdg joined
[01:36] *** fullermd joined
[01:36] *** Lunchy joined
[01:36] *** Auzon joined
[01:36] *** Maghnus joined
[01:36] *** jiing joined
[01:36] *** qmole_ joined
[01:36] *** Ingmar joined
[01:36] *** PerlJam joined
[01:36] *** pmichaud joined
[01:36] *** p6eval joined
[01:36] *** Southen joined
[01:36] *** felipe joined
[01:36] *** vixey joined
[01:36] *** nothingmuch joined
[01:36] *** zostay joined
[01:36] *** pjcj joined
[01:36] *** Khisanth joined
[01:36] *** Gothmog_ joined
[01:36] *** agentzh joined
[01:36] *** osfameron joined
[01:36] *** pugs_svnbot joined
[01:36] *** awwaiid joined
[01:36] *** charsbar joined
[01:36] *** kane_ joined
[01:36] *** broquaint joined
[01:36] *** TreyHarris joined
[01:36] *** rakudo_svn joined
[01:36] *** tcliou_ joined
[01:36] *** erikh joined
[01:36] *** yath joined
[01:36] *** c1sung joined
[01:36] *** lisppaste3 joined
[01:36] *** avar joined
[01:36] *** wolverian joined
[01:36] *** moritz_ joined
[01:36] *** nnunley joined
[01:36] *** allbery_b joined
[01:36] *** audreyt joined
[01:36] *** buu joined
[01:36] *** clkao joined
[01:36] *** Juerd joined
[01:36] *** jjore joined
[01:36] *** mtve joined
[01:36] *** obra joined
[01:36] *** buubot joined
[01:36] *** speckbot joined
[01:36] *** Tene joined
[01:36] *** nipotaway joined
[01:36] *** IRSeekBot joined
[01:36] *** LCamel joined
[01:36] *** Maddingue joined
[01:36] *** arguile joined
[01:36] *** jrockway joined
[01:36] *** Grrrr joined
[01:36] <dolmen> pmichaud, I created onload for Complex

[01:37] <pmichaud> dolmen++

[01:37] <dolmen> I now have to replace the construction of Complex inf e.g. infix:+

[01:37] <dolmen> s/inf/in/

[01:38] <dolmen> I'm not sure if Complex is an object or just a wrapper around a parrot type

[01:39] <dolmen> In postfix:i, "$0[1] = a" puzzles me

[01:39] <pmichaud> follow the example for things like Int, Float

[01:40] <pmichaud> actually

[01:40] <pmichaud> you may just be able to do a 'register'

[01:40] <pmichaud> just a sec

[01:42] <pmichaud> http://nopaste.snit.ch/13281

[01:42] <pmichaud> methods then go into the ['Perl6Complex'] namespace

[01:46] *** bacek_ left
[01:51] <dolmen> In Num and Int, this is reversed

[01:52] <dolmen> pmichaud: Is it because 'Complex' is already the name of the parrot type?

[01:54] <pmichaud> yes.

[01:54] <pmichaud> Since Parrot already grabs the name 'Complex', we have to use a different name for Rakudo's type.  

[01:54] <pmichaud> which also tells me that my nopaste was wrong. 

[01:54] <pmichaud> just a sec

[01:54] <pmichaud> (perhaps 'Hash' is a better model)

[01:55] <pmichaud> http://nopaste.snit.ch/13282

[01:55] <pmichaud> no, Hash isn't a good model either.

[01:55] <pmichaud> anyway, nopaste #13282 should be a better start.

[01:56] <dolmen> I already wrote that

[01:56] <pmichaud> (the 'name'=> option is what I added)

[01:57] <pmichaud> dolmen++

[01:57] <Auzon> What happens if someone defines a class name of 'also' and someone tries to inherit from it?

[01:58] <Auzon> perl6: class also {}; class Foo is also {}; say Foo ~~ also;

[01:58] <p6eval> kp6 r20832: OUTPUT[no method 'APPLY' in Class 'Undef'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤    

[01:58] <p6eval> ..pugs: OUTPUT[␤]

[01:58] <p6eval> ..rakudo r28403: OUTPUT[invoke() not implemented in class 'also'␤current instr.: '_block11' pc 36 (EVAL_10:19)␤

[01:58] <p6eval> ..elf r20832: OUTPUT[syntax error at (eval 14) line 14, near "Foo ~"␤ at ./elf_f_faster line 4549␤]

[01:58] <pmichaud> I suspect that class 'also' should fail.

[01:58] <pmichaud> actually, no.

[01:58] <pmichaud> hrm.

[01:59] <pmichaud> I'll let someone else figure that out.  :-)

[01:59] <Auzon> 'open' and 'nonfinal' have similar problems

[01:59] <Auzon> and 'hidden'

[02:02] *** ywc is now known as ywc|away

[02:08] *** ywc|away is now known as ywc

[02:14] <Auzon> S12:1797 says to 'use oo :closed :final', but 1806, 1817, and 1822 'use class :open' or 'use class :nonfinal'. Can someone explain the why this is inconsistent?

[02:15] *** jferrero left
[02:26] <bacek__> rakudo: min({ abs $^a <=> abs $^b }, (-2..2));

[02:26] <p6eval> rakudo r28403 RESULT[0]

[02:26] <bacek__> rakudo: say min({ abs $^a <=> abs $^b }, (-2..2));

[02:26] <p6eval> rakudo r28403 OUTPUT[0␤]

[02:26] <bacek__> rakudo: min({ abs 0+$^a <=> abs 0+$^b }, (-2..2));

[02:26] <p6eval> rakudo r28403 RESULT[0]

[02:26] <Auzon> rakudo: min(-50 .. 50).say

[02:26] <p6eval> rakudo r28403 OUTPUT[-50␤]

[02:29] <pmichaud> pugs: say ((0,1,2) X (0,1,2)).perl

[02:29] <p6eval> OUTPUT[((0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2))␤]

[02:29] <Auzon> I was wondering if you had an evalbot in #parrot that I blocked :P

[02:29] <pmichaud> just was in the wrong window.  Happens often to me.

[02:34] <bacek__> rakudo: my @array = <5 -3 7 0 1 -9>; say @array.min: { abs $^a <=> abs $^b };

[02:34] <pugs_svnbot> r20833 | Auzon++ | [gsoc_spectest] tests for is also/instead/open. (added 16 tests)

[02:34] <p6eval> rakudo r28403 OUTPUT[absolute() not implemented in class 'Perl6Str'␤current instr.: '_block25' pc 162 (EVAL_12:67)␤

[02:34] <bacek__> rakudo: my @array = <5 -3 7 0 1 -9>; say @array.min: { abs 0+$^a <=> abs 0+$^b };

[02:34] <p6eval> rakudo r28403 OUTPUT[0␤]

[02:34] <bacek__> pmichaud: probably bug in rakudo...

[02:35] <pmichaud> why do you think that's a bug?

[02:35] <pmichaud> what answer do you expect?

[02:36] <pmichaud> oh, because the first one didnt do any output?

[02:36] <pmichaud> ah, I see.

[02:36] <pmichaud> I don't know that I've implemented abs yet.

[02:37] <pmichaud> at least for strings.  Just a sec.

[02:38] <rakudo_svn> r28404 | pmichaud++ | [rakudo]:

[02:38] <rakudo_svn> r28404 | pmichaud++ | * More prefix:<^> refactoring.

[02:38] <bacek__> but why it 'Perl6Str'?

[02:39] *** kanru left
[02:40] *** pugs_svnbot left
[02:40] *** p6eval left
[02:40] *** Auzon left
[02:40] *** jan_____ left
[02:40] *** Coleoid left
[02:40] *** stevan_ left
[02:40] *** buu left
[02:40] *** zostay left
[02:40] *** dolmen left
[02:40] *** Patterner left
[02:40] *** audreyt left
[02:40] *** wolverian left
[02:40] *** Khisanth left
[02:40] *** Ched- left
[02:40] *** s1n left
[02:40] *** ilbot2 left
[02:40] *** yves left
[02:40] *** rafl left
[02:40] *** gbacon left
[02:40] *** bacek left
[02:40] *** TimToady left
[02:40] *** diakopter left
[02:40] *** redicaps left
[02:40] *** cls_bsd left
[02:40] *** SubStack left
[02:40] *** lambdabot left
[02:40] *** pmichaud left
[02:40] *** qmole_ left
[02:40] *** fullermd left
[02:40] *** lumi left
[02:40] *** alester left
[02:40] *** charsbar left
[02:40] *** ingy left
[02:40] *** Maddingue left
[02:40] *** rakudo_svn left
[02:40] *** awwaiid left
[02:40] *** xdg left
[02:40] *** bbkr__ left
[02:40] *** PerlJam left
[02:40] *** wknight8111 left
[02:40] *** ywc left
[02:40] *** c1sung left
[02:40] *** eternaleye left
[02:40] *** Southen left
[02:40] *** erikh left
[02:40] *** arguile left
[02:40] *** allbery_b left
[02:40] *** osfameron left
[02:40] *** Maghnus left
[02:40] *** ruoso left
[02:40] *** pasteling left
[02:40] *** silug left
[02:40] *** mtve left
[02:40] *** broquaint left
[02:40] *** kane_ left
[02:40] *** thepler left
[02:40] *** rhr_ left
[02:40] *** japhb left
[02:40] *** Tene left
[02:40] *** meteorjay left
[02:40] *** buubot left
[02:40] *** tcliou_ left
[02:40] *** avar left
[02:40] *** cj left
[02:40] *** gugod left
[02:40] *** speckbot left
[02:40] *** moritz_ left
[02:40] *** TreyHarris left
[02:40] *** spinclad_ left
[02:40] *** [particle]ventus left
[02:40] *** nipotaway left
[02:40] *** jrockway left
[02:40] *** obra left
[02:40] *** LCamel left
[02:40] *** IRSeekBot left
[02:40] *** clkao left
[02:40] *** pengrate left
[02:40] *** agentzh left
[02:40] *** nothingmuch left
[02:40] *** araujo left
[02:40] *** drbean left
[02:40] *** vixey left
[02:40] *** BinGOs left
[02:40] *** Grrrr left
[02:40] *** yath left
[02:40] *** Gothmog_ left
[02:40] *** apeiron left
[02:40] *** bacek__ left
[02:40] *** jjore left
[02:40] *** kcwu left
[02:40] *** lisppaste3 left
[02:40] *** pjcj left
[02:40] *** Juerd left
[02:40] *** nnunley left
[02:40] *** yahooooo left
[02:40] *** Ingmar left
[02:40] *** felipe left
[02:40] *** dalek left
[02:40] *** Ara5n left
[02:40] *** mofino left
[02:40] *** jiing left
[02:40] *** Lunchy left
[02:40] *** Caelum_ left
[02:40] *** r0bby left
[02:41] *** TimToady joined
[02:41] *** Ched- joined
[02:41] *** bacek__ joined
[02:41] *** redicaps joined
[02:41] *** wknight8111 joined
[02:41] *** s1n joined
[02:41] *** [particle]ventus joined
[02:41] *** japhb joined
[02:41] *** ywc joined
[02:41] *** alester joined
[02:41] *** yves joined
[02:41] *** ilbot2 joined
[02:41] *** gbacon joined
[02:41] *** rafl joined
[02:41] *** diakopter joined
[02:41] *** pengrate joined
[02:41] *** kcwu joined
[02:41] *** cls_bsd joined
[02:41] *** silug joined
[02:41] *** gugod joined
[02:41] *** drbean joined
[02:41] *** pasteling joined
[02:41] *** spinclad_ joined
[02:41] *** Ara5n joined
[02:41] *** SubStack joined
[02:41] *** lambdabot joined
[02:41] *** bacek joined
[02:41] *** mofino joined
[02:41] *** ingy joined
[02:41] *** dalek joined
[02:41] *** dolmen joined
[02:41] *** eternaleye joined
[02:41] *** bbkr__ joined
[02:41] *** stevan_ joined
[02:41] *** BinGOs joined
[02:41] *** Coleoid joined
[02:41] *** araujo joined
[02:41] *** lumi joined
[02:41] *** jan_____ joined
[02:41] *** Patterner joined
[02:41] *** rhr_ joined
[02:41] *** r0bby joined
[02:41] *** thepler joined
[02:41] *** cj joined
[02:41] *** ruoso joined
[02:41] *** yahooooo joined
[02:41] *** Caelum_ joined
[02:41] *** meteorjay joined
[02:41] *** apeiron joined
[02:41] *** xdg joined
[02:41] *** fullermd joined
[02:41] *** irc.freenode.net sets mode: +o TimToady

[02:41] *** Lunchy joined
[02:41] *** Auzon joined
[02:41] *** Maghnus joined
[02:41] *** jiing joined
[02:41] *** qmole_ joined
[02:41] *** Ingmar joined
[02:41] *** PerlJam joined
[02:41] *** pmichaud joined
[02:41] *** p6eval joined
[02:41] *** Southen joined
[02:41] *** felipe joined
[02:41] *** vixey joined
[02:41] *** nothingmuch joined
[02:41] *** zostay joined
[02:41] *** pjcj joined
[02:41] *** Khisanth joined
[02:41] *** Gothmog_ joined
[02:41] *** agentzh joined
[02:41] *** osfameron joined
[02:41] *** pugs_svnbot joined
[02:41] *** awwaiid joined
[02:41] *** charsbar joined
[02:41] *** kane_ joined
[02:41] *** broquaint joined
[02:41] *** TreyHarris joined
[02:41] *** rakudo_svn joined
[02:41] *** tcliou_ joined
[02:41] *** erikh joined
[02:41] *** yath joined
[02:41] *** c1sung joined
[02:41] *** lisppaste3 joined
[02:41] *** avar joined
[02:41] *** wolverian joined
[02:41] *** moritz_ joined
[02:41] *** nnunley joined
[02:41] *** allbery_b joined
[02:41] *** audreyt joined
[02:41] *** buu joined
[02:41] *** clkao joined
[02:41] *** Juerd joined
[02:41] *** jjore joined
[02:41] *** Grrrr joined
[02:41] *** jrockway joined
[02:41] *** arguile joined
[02:41] *** Maddingue joined
[02:41] *** LCamel joined
[02:41] *** IRSeekBot joined
[02:41] *** nipotaway joined
[02:41] *** Tene joined
[02:41] *** speckbot joined
[02:41] *** buubot joined
[02:41] *** obra joined
[02:41] *** mtve joined
[02:43] <rakudo_svn> r28406 | pmichaud++ | [rakudo]:

[02:43] <rakudo_svn> r28406 | pmichaud++ | * Fix abs() for non-numeric types.

[02:46] <pugs_svnbot> r20834 | bacek++ | [spec] Add more parentises around method calls

[02:47] * diakopter wants a Perl 6 "implementation" whose Test.pm causes it to always give what the test expects (not just fake success).  Who wants to write a fudgefork to do that....?

[02:48] <pmichaud> diakopter: ...explain?

[02:49] <diakopter> pmichaud: :) just a joke... a pretend-implementation that feeds Test.pm whatever each test expects (dies_ok, is_deeply, etc)

[02:50] <Auzon> You'd still need a good parser :P

[02:50] <diakopter> in other words, an implementation that is complete.. that is, passes all the tests in the test suite

[02:51] <diakopter> "complete"

[02:52] <diakopter> that'd be a fun lightning talk

[02:52] <Auzon> So basically a fake implementation that automatically passes all the tests? ;)

[02:52] <pmichaud> I can do that by faking Test.pm :-)

[02:52] *** Alias_ joined
[02:56] <diakopter> pmichaud: yep, that's what I mean

[02:56] <diakopter> well, sort of, I wanted it to actually produce the expected results, not just always give "ok"

[02:59] *** ywc left
[03:04] *** elmex_ joined
[03:04] <rakudo_svn> r28407 | duff++ | [rakudo]:

[03:04] <rakudo_svn> r28407 | duff++ | * Add run builtin (Zev++ RT50558)

[03:04] <rakudo_svn> r28407 | duff++ | * patch courtesy Zev Benjamin <zev-perl6  at strangersgate.com>

[03:05] <rakudo_svn> r28408 | pmichaud++ | [rakudo]: Fix abs(Int) to return Int.

[03:13] *** [1]Maghnus joined
[03:18] *** elmex left
[03:18] *** elmex_ is now known as elmex

[03:20] *** dolmen left
[03:22] <rakudo_svn> r28409 | pmichaud++ | [rakudo]:

[03:22] <rakudo_svn> r28409 | pmichaud++ | * Add S29-list/minmax.t to spectest_regression.data (bacek++)

[03:26] *** kunwon1 joined
[03:31] *** stevan_ left
[03:33] *** BinGOs_ joined
[03:33] *** stevan_ joined
[03:36] <Auzon> elf: say 7 + 18 + 21 + 6 + 1 + 7 + 16

[03:36] <p6eval> OUTPUT[76␤]

[03:37] *** BinGOs left
[03:39] *** Maghnus left
[03:39] *** [1]Maghnus is now known as Maghnus

[03:46] <Auzon> elf: say 76+73+39

[03:46] <p6eval> OUTPUT[188␤]

[03:47] *** alester_ joined
[03:49] *** Alias__ joined
[03:49] *** kolibrie joined
[03:50] *** Alias_ left
[03:50] * kolibrie made it to YAPC

[04:02] *** rpethe joined
[04:12] *** a-jing joined
[04:13] *** a-jing left
[04:24] *** c1sung left
[04:25] *** c1sung joined
[04:49] *** rpethe left
[04:52] <stevan_> kolibrie: your here too?

[05:10] <rakudo_svn> r28413 | coke++ | [codingstd]

[05:10] <rakudo_svn> r28413 | coke++ | 

[05:10] <rakudo_svn> r28413 | coke++ | Pass "make codetest"

[05:26] *** Alias_ joined
[05:27] *** Alias__ left
[05:35] <pugs_svnbot> r20835 | lwall++ | [STD] various repairs to fate system

[05:35] <pugs_svnbot> r20835 | lwall++ | [gimme5] ability to process grammars that use Perl grammar

[06:20] *** iblechbot joined
[06:20] *** Alias__ joined
[06:22] *** kanru joined
[06:30] *** Alias_ left
[06:37] *** alester_ left
[06:50] *** iblechbot left
[06:53] *** Psyche^ joined
[07:09] *** Patterner left
[07:09] *** Psyche^ is now known as Patterner

[08:00] *** BinGOs_ is now known as BinGOs

[08:03] *** wknight8111 left
[08:10] *** Patterner left
[08:10] *** c1sung left
[08:10] *** yves left
[08:10] *** rafl left
[08:10] *** ilbot2 left
[08:10] *** gbacon left
[08:11] *** Patterner joined
[08:11] *** c1sung joined
[08:11] *** rafl joined
[08:11] *** gbacon joined
[08:11] *** ilbot2 joined
[08:11] *** yves joined
[08:12] *** ontel joined
[08:15] *** redicaps left
[08:22] *** elmex left
[08:22] *** kanru left
[08:23] *** elmex joined
[08:25] *** cosimo joined
[08:29] *** Alias_ joined
[08:36] *** renormalist joined
[08:37] *** renormalist left
[08:39] *** Alias__ left
[08:41] *** Patterner left
[08:41] *** Psyche^ joined
[08:41] *** Psyche^ is now known as Patterner

[08:51] *** gbacon_ joined
[08:53] *** gbacon left
[08:57] *** bacek__ left
[09:04] *** IllvilJa joined
[09:28] *** mj41 joined
[09:39] *** kanru joined
[09:53] *** chris2 joined
[10:11] *** vixey left
[10:19] *** wknight8111 joined
[11:17] *** rindolf joined
[11:18] *** eevee joined
[11:18] *** eevee is now known as Eevee

[11:25] *** wknight8111 left
[11:31] *** Ched- left
[11:34] *** ched joined
[11:34] *** ched left
[11:36] *** pbuetow joined
[11:38] *** bbkr__ left
[11:40] *** FurnaceBoy joined
[11:41] *** a-jing joined
[11:42] *** a-jing left
[11:44] *** Lorn joined
[11:50] *** a-jing joined
[12:04] *** chris2 left
[12:05] *** iblechbot joined
[12:12] *** stevan_ left
[12:25] *** SamB joined
[12:29] *** Ched- joined
[12:33] *** Ched- left
[12:35] *** thepler left
[12:38] *** Jedai joined
[12:40] *** wknight8111 joined
[12:42] *** donaldh joined
[12:43] *** thepler joined
[13:08] *** mj41 left
[13:15] *** cmarcelo joined
[13:19] *** mj41 joined
[13:27] *** pmurias joined
[13:29] *** a-jing left
[13:32] *** IllvilJa left
[13:37] *** [particle]ventus left
[13:49] *** IllvilJa joined
[13:54] *** eternaleye_ joined
[13:57] *** TJCRI joined
[13:59] *** renormalist joined
[14:06] *** eternaleye left
[14:21] *** gbacon_ is now known as gbacon

[14:25] <pmurias> Nl

[14:25] *** pmurias left
[14:25] *** pmurias joined
[14:25] <diakopter> Nl?

[14:26] <pmurias> diakopter: hi

[14:26] <diakopter> pmurias: hi

[14:26] <pmurias> typing accident

[14:26] <pmurias> lunch&

[14:26] <diakopter> @yaNApc

[14:26] <lambdabot> Unknown command, try @list

[14:34] *** eternaleye_ left
[14:38] <pmurias> will you be at yapc europe?

[14:40] *** TreyHarris left
[14:41] *** TreyHarris joined
[14:41] <diakopter> me?  when is it

[14:41] <pmurias> diakopter: August 13 - 15

[14:42] <diakopter> permaybe

[14:42] <diakopter> I only hear English - will I be at a loss

[14:44] <pmurias> diakopter: it's English only

[14:44] <diakopter> oh

[14:44] <pmurias> the talks are

[14:45] <pmurias> diakopter: were are you from by the way?

[14:45] <diakopter> TimToady: is about to speak on pugscode/src/perl6/*.pm  .... I'll summarize here :)

[14:45] <diakopter> Wichita, KS

[14:45] <rakudo_svn> r28424 | pmichaud++ | [rakudo]:

[14:45] <rakudo_svn> r28424 | pmichaud++ | * Add docs/spectest-progress.csv to track progress on passing spectests.

[14:45] <rakudo_svn> r28424 | pmichaud++ |   (I'll keep this file up-to-date for the time being.)

[14:54] *** [particle] joined
[14:59] *** Schwern joined
[15:02] <pmurias> what does permaybe mean?

[15:02] *** Jedai left
[15:09] *** [particle] left
[15:11] <pmurias> ruoso: what should i focus on now a faster sm0p parser of cleaning up elf?

[15:11] *** Schwern left
[15:11] <pmurias> perl6: "abc" =~ /b/

[15:11] <p6eval> kp6 r20835: OUTPUT[syntax error at position 6, line 1 column 6:␤"abc" =~ /b␤      ^ HERE␤]

[15:11] <p6eval> ..pugs: OUTPUT[*** ␤    Unexpected "/"␤    There is no =~ operator in Perl 6 -- did you mean ~~ (match) or ~= (concat-assign)?␤    at /tmp/eQXymuWyjL line 1, column 10␤]

[15:11] <p6eval> ..rakudo r28424: OUTPUT[Method 'lvalue' not found for invocant of class 'PAST::Val'␤current instr.: 'parrot;PAST::Compiler;as_post' pc 2787 (src/PAST/Compiler.pir:718)␤

[15:11] <p6eval> ..elf r20835: RESULT[1␤]

[15:14] *** Schwern joined
[15:15] <TimToady> hi, you're on YAPC-TV!!!

[15:16] <moritz_> YaY

[15:16] <moritz_> rakudo: say "Hi, I'm the cool kid ;-)"

[15:16] <p6eval> rakudo r28424 OUTPUT[Hi, I'm the cool kid ;-)␤]

[15:16] <rindolf> Hi TimToady 

[15:17] <rindolf> Hi moritz_ 

[15:17] *** ChanServ sets mode: +o diakopter

[15:17] *** MaNoJob joined
[15:19] *** toddr joined
[15:19] <diakopter> WELCOME YAPC

[15:19] *** Jedai joined
[15:19] *** beppu joined
[15:22] *** MaNoJob is now known as MaNo|Job

[15:23] *** [particle] joined
[15:23] *** Schwern left
[15:24] *** pbuetow left
[15:24] *** pbuetow joined
[15:25] *** pmurias left
[15:25] *** pmurias joined
[15:25] *** pbuetow left
[15:26] *** Schwern joined
[15:26] *** ontel left
[15:27] *** pbuetow joined
[15:28] *** toddr left
[15:29] *** toddr joined
[15:31] *** Jedai left
[15:34] *** donaldh left
[15:35] *** Jedai joined
[15:36] *** rindolf left
[15:38] *** blehv joined
[15:39] *** gbacon left
[15:41] *** revdiablo joined
[15:41] <pugs_svnbot> r20836 | pmurias++ | [elf]

[15:41] <pugs_svnbot> r20836 | pmurias++ | removed =~

[15:41] <pugs_svnbot> r20836 | pmurias++ | added a doubt to the two compilers section in the README

[15:42] *** gbacon joined
[15:45] <diakopter> well, I would summarize it if the wifi were working here

[15:48] <diakopter> factorial macro...

[15:48] <jrockway> eval: 10!

[15:49] <TimToady> perl6: sub postfix:<!> ($x) { [*] 1..$x }; 5!

[15:50] <p6eval> kp6 r20836: OUTPUT[error in Block at compiled/perl5-kp6-mp6/lib/KindaPerl6/Grammar/Sub.pm line 362, <> line 1.␤*** Syntax Error in sub '': missing closing curly bracket ␤]

[15:50] <p6eval> ..pugs: RESULT[120]

[15:50] <p6eval> ..rakudo r28425: OUTPUT[Statement not terminated properly at line 1, near ":<!> ($x) "␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[15:50] <p6eval> ..elf r20836: OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted

[15:50] <p6eval> ..due to compilation errors.␤]

[15:52] <apeiron> MØØSE

[15:52] <diakopter> pmurias: you around?

[15:53] <pmurias> diakopter: yes

[15:54] <diakopter> you and Auzon want to hack STD5 into the evalbot?

[15:54] <pmurias> diakopter: now?

[15:55] <diakopter> :D

[15:55] <diakopter> sure, why not

[15:55] <Auzon> Sure, what needs to be done with it?

[15:56] <pmurias> diakopter: a STD5 is quite verbose

[15:56] <pmurias> ;) a STD5 match

[15:57] <pmurias> it would either flood the channel with --vertical or be mericlessly wraped

[15:58] *** armagad_ joined
[15:58] <moritz_> so what can we print? parse failed/succeded?

[16:00] <diakopter> probably grep just for the name/subrule that matched,

[16:00] <diakopter> (s)

[16:00] <pmurias> it would be pretty useless

[16:00] <diakopter> it would show the subrules that matched

[16:01] <diakopter> (in order they matched)

[16:02] <diakopter> oops

[16:02] *** diakopter sets mode: -o diakopter

[16:02] <pmurias> moritz: if you have a wide screen or good eyesight and a small font you could try STD5_dump_match

[16:03] <pmurias> or have evalbot nopaste the output of --vertical

[16:04] <pmurias> diakopter: what do you need STD in evalbot for?

[16:06] <pmurias> yap6: say 5

[16:06] <p6eval> yap6 r20836 OUTPUT[parsed: [["use"],["v6"],[";"],["say"],[5],["EOI"]]␤]

[16:06] <diakopter> pmurias: to show yapc

[16:06] <pmurias> on the projector?

[16:06] <diakopter> sure, yeah :)

[16:07] <diakopter> Larry's about halfway done

[16:07] <diakopter> with his talk

[16:07] *** FurnaceBoy left
[16:07] <diakopter> if you can do it in 15 minutes.. :D

[16:08] <pmurias> does evalbot run perl5.10

[16:08] <pmurias> ?

[16:08] <diakopter> no

[16:08] <diakopter> does it need to?

[16:08] <pmurias> STD5 runs on perl5.10 only

[16:08] <diakopter> oh

[16:09] <pmurias> you can call STD5 from the terminal if you want to show the match to people

[16:09] *** cjfields joined
[16:09] <ruoso> pmurias, a faster sm0p parser is certainly much helpfull

[16:10] *** alester left
[16:10] <diakopter> pmurias: that's what he's doing

[16:10] <diakopter> I just thought it would be cool to show it on irc too

[16:11] <moritz_> diakopter: I don't think that can be done fast and in a useful way ;)

[16:11] <diakopter> ok

[16:12] <pmurias> ruoso: i'm considering cleaning up elf and feeding it output of STD5

[16:12] <pmurias> diakopter: would you like to write a sm0p parser? ;)

[16:12] <diakopter> what's currently parsing it

[16:12] <moritz_> I think kp6

[16:13] *** cjfields_ joined
[16:13] <pmurias> diakopter: elf is currently parsed by STD_red

[16:13] <pmurias> which is STD hand-converted to ruby

[16:13] * moritz_ was talking about sm0p

[16:14] <pmurias> diakopter: sorry got confused

[16:14] <pmurias> diakopter: sm0p is currently parsed my a primtive (recdescent) perl6 grammar

[16:15] <ruoso> well... there's a lowlevel method implemnetation already

[16:15] <ruoso> there's a lowlevel scalar also

[16:15] <ruoso> it should be possible to do something with that already

[16:16] <pmurias> diakopter:  v6/smop/sm0p/KP6Grammar.pm

[16:17] <pmurias> ruoso: meant plugging STD5 into elf, more as an alternative as STD_red is enough for the code smop could run now

[16:20] <pmurias> cycling& bbl

[16:20] *** toddr left
[16:22] *** [particle] left
[16:26] <ruoso> pmurias, I'm not sure I understood what you said... but that's probably because I'm not that familiar with STD5 internals

[16:27] *** Alias_ left
[16:27] <moritz_> let's ask the other way round - how hard/easy is sm0p to parse? it is specced somewhere?

[16:28] <pmurias> ruoso: i was considering whether to write a faster sm0p parser or to cleanup elf and plug STD5 into it

[16:28] <pmurias> moritz_: i would guess sm0p is pretty simple to parse

[16:29] *** cjfields left
[16:29] *** eternaleye_ joined
[16:29] <ruoso> pmurias, writing a faster sm0p parser is already a usefull thing to do

[16:29] *** cjfields_ is now known as cjfields

[16:30] <ruoso> but I think it should be possible to do some more things with smop than what sm0p does

[16:31] <moritz_> is v6/smop/sm0p/Grammar.pm intended to be a "real" Perl 6 grammar for sm0p?

[16:31] <pmurias> &

[16:31] *** pmurias left
[16:32] <moritz_> "token frame" could be made "rule frame", then all of those <ws> tokens could go away

[16:33] <ruoso> moritz_, supposedly yes...

[16:33] <ruoso> but the KP6 version works with KP6

[16:33] <ruoso> there's a start of what a parrot version would be

[16:34] <moritz_> parrot = PGE or rakudo here?

[16:35] <ruoso> moritz_, I think PGE

[16:35] <ruoso> I never actually tested it

[16:35] <ruoso> I mean...

[16:35] <ruoso> I could never make it work...

[16:36] <ruoso> but conceptually Grammar.pm describes it... it might have some bugs that were only fixed in the KP6 version

[16:40] *** Alias_ joined
[16:44] *** Alias__ joined
[16:46] *** Schwern left
[16:59] *** MaNo|Job left
[17:00] *** Alias_ left
[17:00] *** Alias_ joined
[17:02] *** Alias__ left
[17:02] *** rindolf joined
[17:02] *** araujo left
[17:09] *** elmex_ joined
[17:13] *** polettix joined
[17:20] *** Alias_ left
[17:20] *** Alias_ joined
[17:22] *** elmex left
[17:22] *** elmex_ is now known as elmex

[17:30] *** borondil joined
[17:35] *** toddr joined
[17:46] *** cognominal_ joined
[17:47] *** toddr left
[17:48] *** eternaleye_ left
[17:48] *** poletti joined
[17:48] *** eternaleye_ joined
[17:49] *** polettix left
[17:50] *** poletti is now known as polettix

[17:51] *** IllvilJa left
[18:00] *** toddr joined
[18:02] *** toddr left
[18:10] *** toddr joined
[18:11] *** barney joined
[18:13] *** FurnaceBoy joined
[18:16] *** sri_work joined
[18:19] *** cognominal__ joined
[18:23] *** pmurias joined
[18:23] *** toddr left
[18:25] <pmurias> ruoso: is a faster sm0p parser something your blocking or would it just be usefull?

[18:27] <ruoso> not really blocking... no...

[18:27] <ruoso> it's just a PITA to wait KP6 everytime...

[18:29] *** cognominal_ left
[18:31] *** barney left
[18:33] *** icwiener joined
[18:34] *** toddr joined
[18:35] *** toddr left
[18:37] <icwiener> Hi, I watched for Perl 6 books and found some. Is is already possible to write a book that is not outdated quite fast? I mean, is the language itself solid enough to write books? Just curious because I'm considering buying the one James Lee wrote and not following the process closely enough to know such things.

[18:38] <icwiener> Do you have any hints? Maybe about the book as well? :=)

[18:38] *** xinming left
[18:38] *** xinming joined
[18:39] *** xinming left
[18:40] *** xinming joined
[18:40] *** toddr joined
[18:41] <PerlJam> icwiener: what books on perl 6 did you find?

[18:42] <pmurias> icwiener: the spec seems to gradualy stablise, but the implementations are rapidly changing

[18:43] <icwiener> PerlJam: Perl 6 and Parrot Essentials (2004)

[18:43] <icwiener> PerlJam: Perl 6 Now (2004)

[18:43] <icwiener> and some more older books...

[18:43] <PerlJam> icwiener: the latter really isn't a perl 6 book.

[18:44] <icwiener> Oh, right just read the descriptive title.

[18:44] <PerlJam> (It's about how to do perl 6 like things in perl 5 today)

[18:44] <pmurias> @tell mncharity Foo.new(a=>1,b=>1) gets parsed as Foo.new(a=>(1,b=1))

[18:44] <lambdabot> Consider it noted.

[18:44] <icwiener> PerlJam: Beginning Perl 6: From Novice to Professional (July 2008)

[18:44] <PerlJam> icwiener: the perl 6 portion of Perl 6 and Parrot Essentials is definitely outdated.

[18:45] <PerlJam> icwiener: the parrot portion is too, but the reference material is still fairly good.

[18:45] <pmurias> you can always print out the synopsis

[18:46] <icwiener> pmurias: So what is thought in the book (the latter one) might be "stable" but how it is done in the compiler/interpreter/whatever is still changing. Did I get that right? But the implementation is not important for learning from the book right?

[18:47] <pmurias> icwiener: i haven't read the book

[18:47] <PerlJam> pmurias: since it's not even out yet :)

[18:47] <icwiener> PerlJam: What's with the latter book. Do you know it? It seems promising. The author wrote another Perl (5) book that is rated very highly.

[18:47] <PerlJam> I wonder if I could cajole rdice into giving me a copy for review :)

[18:48] <PerlJam> icwiener: I know nothing about it.

[18:48] <PerlJam> icwiener: though I'd be leery of it give that perl 6 is still a christmas away

[18:48] <icwiener> PerlJam: Ok. Maybe after you got your review copy... ;)

[18:49] <pmurias> icwiener: what i mean is the book can only discuss how things are speced to be not how they are, as the language isn't implemented (fully|mostly) yet

[18:49] <PerlJam> pmurias: well, it could say things like "in rakudo, you'd do this" and "i pugs, you'd do this" and  "In <insert some other implementation>, you'd do this"

[18:50] *** erikh left
[18:50] <pmurias> PerlJam: but it would outdate itself rapidly

[18:50] <pmurias> not the pugs stuff :(

[18:50] <PerlJam> pmurias: not for pugs since it hasn't changed in a year or so :)

[18:50] <PerlJam> Schwern is slowing down my IRC

[18:51] <Auzon> Yeah, but Elf and Rakudo would be obsolete before it got to press. ;)

[18:51] <ingy>  /kick Sch

[18:51] <ingy> meh

[18:51] <ingy>  /kick Sch*

[18:52] <Auzon> rakudo: say try {1}

[18:52] <icwiener> Hmm. Ok. Thank you for your advice. Helped a lot with my decision. :)

[18:52] <p6eval> rakudo r28431 OUTPUT[1␤]

[18:52] <Auzon> rakudo: say try {5**2}

[18:52] <p6eval> rakudo r28431 OUTPUT[25␤]

[18:52] <PerlJam> icwiener: why are you interested in perl 6?

[18:52] <PerlJam> icwiener: I ask because it's not suitable for some uses just yet

[18:52] <Auzon> rakudo: my Int $foo; $foo = 'obviously not an Int'; say $foo;

[18:52] <p6eval> rakudo r28431 OUTPUT[Type check failed␤current instr.: 'parrot;Perl6Object;infix:=' pc 59 (src/gen_builtins.pir:51)␤

[18:53] <Auzon> rakudo: my Str $foo; $foo = 5; say $foo;

[18:53] <pmurias> unless you're prepared to hack on the compiler

[18:53] <p6eval> rakudo r28431 OUTPUT[Type check failed␤current instr.: 'parrot;Perl6Object;infix:=' pc 59 (src/gen_builtins.pir:51)␤

[18:53] <Eevee> wow, try{} exists now?

[18:53] <Eevee> when did that happen

[18:53] <Auzon> Eevee: Not sure, but I think I have another test for Rakudo to pass unfudged.

[18:54] <Eevee> you guys move too fast for me to keep up and do anything  :P  slow down

[18:54] * pmurias is scared of STD_red, but mncharity isn't here to fix it for him :(

[18:54] <icwiener> PerlJam: Because I wrote some stuff in Perl 5 about five years ago and I need a nice language for prototyping at the end of the year (yes around christmas ;)) ... I have a month vacation in August so I thought that would be a nice opportunity to get into Perl 6. :)

[18:55] *** dolmen joined
[18:56] <PerlJam> icwiener: well, if you don't mind the state it's in, I encourage you to use rakudo if you can.

[18:56] <Auzon> Can I ask what you're prototyping?

[18:56] *** xinming_ joined
[18:57] *** FurnaceBoy left
[18:59] <rakudo_svn> r28432 | pmichaud++ | [rakudo]:

[18:59] <rakudo_svn> r28432 | pmichaud++ | * SVN property fix on spectest-progress.csv .

[18:59] *** Alias_ left
[18:59] <icwiener> Auzon: Nothing big. We have to implement a client server application in C and I think it's nice to have the client or the server written in some less problematic language. That way you do not have the problem of having a server and a client that are both not yet working correctly and it's hard to see where the problem is.

[19:00] <icwiener> PerlJam: Thanks for the advise.

[19:00] <Auzon> Interesting. Rakudo might be enough for you.

[19:01] <dolmen> Auzon, is there sockets in rakudo yet?

[19:01] *** xinming left
[19:01] <Auzon> Not that I know of.

[19:01] <icwiener> But until christmas there will be, right? :)

[19:02] <dolmen> :)

[19:02] <PerlJam> Parrot has sockets, it's just not exposed to Rakudo yet (AFAIK)

[19:02] <Auzon> rakudo: my Int $foo; say try {$foo = 'asdf'};

[19:02] <p6eval> rakudo r28432 OUTPUT[Null PMC access in get_string()␤current instr.: 'print' pc 9561 (src/gen_builtins.pir:6286)␤

[19:02] <PerlJam> So, all it would take is someone to write the glue.

[19:02] <dolmen> oh, you're prototyping a Chritsmas gift :)

[19:02] <Auzon> rakudo: my Int $foo; say eval '$foo = "asdf"';

[19:02] <p6eval> rakudo r28432 OUTPUT[Scope  not found for PAST::Var '$foo'␤current instr.: 'parrot;PCT::HLLCompiler;panic' pc 156 (src/PCT/HLLCompiler.pir:103)␤

[19:03] <icwiener> dolmen: hehe, no. actually some stuff for an exam that is supposed to be given in january.

[19:04] <Auzon> Alright. Well, good luck, icwiener.

[19:04] <Auzon> away &

[19:05] <icwiener> Thank you. To all of you. :)

[19:05] <icwiener> Bye, for now.

[19:06] *** icwiener left
[19:15] *** Schwern joined
[19:27] <rakudo_svn> r28433 | pmichaud++ | [rakudo]:

[19:27] <rakudo_svn> r28433 | pmichaud++ | * Update Complex as subclass of Any, add .perl method (dolmen++)

[19:27] <rakudo_svn> r28433 | pmichaud++ | * Patch RT#55872 courtesy Olivier Mengu?\195?\169 [email@hidden.address]
[19:27] <rakudo_svn> r28433 | pmichaud++ |   (with minor changes by pmichaud)

[19:34] <dolmen> pmichaud++

[19:38] *** borondil left
[19:46] *** Schwern left
[19:47] *** Schwern joined
[19:47] <pugs_svnbot> r20837 | diakopter++ | [yap6] fixed the ast output so it's actually a tree

[19:47] *** pugs_svnbot left
[19:47] *** pugs_svnbot joined
[19:48] <diakopter> http://www.perlcabal.org/svn/pugs/revision/?rev=20837   stupid pugs_svnbot

[19:48] <lambdabot> Title: revision: /pugs (Rev: 20837, via SVN::Web)

[19:48] * diakopter heads to Alias' next talk

[19:48] *** Schwern left
[19:50] <pmurias> diakopter: why is pugs_svnbot stupid?

[19:50] *** Alias_ joined
[19:50] <moritz_> because it doesn't fully show diakopter's wonderful commit messages

[19:51] <moritz_> surprisingly it works well with everbody else's commits

[19:51] *** armagad_ left
[19:51] <diakopter> :P

[19:52] <diakopter> :PP

[19:52] <moritz_> anyway, diakopter++ # verbose commit messages

[19:52] <diakopter> I think, rather, it's freenode that doesn't work with my commits.

[19:53] <moritz_> freenode? why?

[19:54] *** blehv left
[19:55] <diakopter> b/c it kicks pugs_svnbot when it sends messages in too quick of succession

[19:56] <moritz_> I ignore joins and quits... was it really kicked?

[20:00] <diakopter> yes

[20:00] <diakopter> 14:43:32 -!- pugs_svnbot [n=pugs_svn@feather.perl6.nl] has quit [Excess Flood]

[20:02] *** Schwern joined
[20:09] <pmurias> Term::ANSIColor++ # my favourite module

[20:09] <moritz_> diakopter: is it that pugs based svn bot?

[20:10] <pmurias> karma Term::ANSIColor

[20:10] <pmurias> @karma Term::ANSIColor

[20:10] <lambdabot> Term::ANSIColor has a karma of 1

[20:10] <moritz_> diakopter: I use Bot::BasicBot myself, it throttles automatically

[20:11] *** Exodist joined
[20:12] *** rindolf left
[20:15] <diakopter> so does botnix (dalek on #parrot)

[20:16] *** Schwern left
[20:17] *** Schwern joined
[20:20] <rakudo_svn> r28436 | pmichaud++ | [rakudo]:

[20:20] <rakudo_svn> r28436 | pmichaud++ | * Make rakudo's grammar slightly closer to STD.pm (expect_term).

[20:29] *** armagad_ joined
[20:40] *** Exodist is now known as Exodist-BRB

[20:40] *** Exodist-BRB is now known as Exodist

[20:40] *** perlbot joined
[20:40] *** araujo joined
[20:46] *** Schwern left
[20:47] <spinclad_> i see rakudo_svn doesn't pass utf8 through as dalek does ('Olivier Mengué')

[20:48] *** Schwern joined
[20:49] <moritz_> yes, I'll have to investigate

[20:49] <moritz_> later this week, hopefully

[20:51] *** FurnaceBoy joined
[21:03] *** Alias_ left
[21:15] <pmurias> diakopter: is mncharity at the yapc?

[21:21] *** simcop2387 joined
[21:23] <diakopter> pmurias: I don't know

[21:25] <pmurias> :)

[21:30] *** IllvilJa joined
[21:36] *** nipotaway is now known as nipotan

[21:36] *** polettix left
[21:36] <pmurias> TimToady: use'ing Thing in "grammar Foo is Thing" is wrong

[21:36] <pmurias> Perl lives in STD5 dosn't it?

[21:44] *** bacek_ joined
[21:45] *** bacek_ left
[21:48] *** cjfields left
[21:49] <pmurias> diakopter: what did TimToady use for onscreen match dumping?

[21:54] <diakopter> a script he had

[21:54] <diakopter> I don't know; email him?

[21:55] *** toddr left
[21:55] *** armagad_ left
[21:57] <pmurias> diakopter: i'm wandering if it was my script ;)

[22:00] *** armagad_ joined
[22:01] <diakopter> pmurias: it might have been, but there was no color

[22:02] *** iblechbot left
[22:04] <pmurias> diakopter: you have seen the output of STD5_dump_match?

[22:04] <diakopter> noo

[22:05] <TimToady> I didn't have a chance to show it, ran out of time

[22:05] <TimToady> and most of my examples aren't whole files

[22:06] <pmurias> TimToady: did you use YAML?

[22:07] <TimToady> mostly just filtered through ->hash to cut down the output, yeah.

[22:08] <TimToady> but I mostly wasn't trying to show trees

[22:08] <TimToady> but specific bits of stuff that flow from the grammar like the difference between prefix:<++> and postfix:<++> and the user-added prefix:<+->

[22:09] <TimToady> and how the bits of code look, and how the LTM works

[22:09] *** TJCRI left
[22:09] <TimToady> and I was gonna use your program and brag about it, but last night it didn't parse a file with just $a++ in it, so I left it in the way it was

[22:10] <PerlJam> TimToady: so, for LTM, you stop ltm processing as soon as you hit something that's "over-quantified"?  I.e.  'abc' ** 3..5 would work, but 'abc'+  would not?

[22:10] * PerlJam still doesn't quite understand ltm

[22:12] <TimToady> 'abc'+ should count as one 'abc'

[22:13] <TimToady> (if there's nothing after it)

[22:13] <TimToady> though, actually, I think the + comes through to

[22:13] <TimToady> since that might influence which is the longest token

[22:13] *** Schwern left
[22:13] <TimToady> after, an identifier is <alpha>\w*, more or less

[22:14] *** nipotan is now known as nipotaway

[22:14] <TimToady> sorry, just woke up from migraine-enforced nap, so not quite thinking straight yet

[22:14] <diakopter> TimToady: want to know who won the golf?

[22:15] <TimToady> sure

[22:15] <diakopter> they tied the 18 holes

[22:15] <PerlJam> I'm having sinus headaches myself.  A nap sounds real good.

[22:15] <diakopter> at even par

[22:15] <diakopter> and Tiger won in the first sudden death hole

[22:15] <TimToady> sudden death after that?

[22:15] <TimToady> ah, well, I was a little surprised his knee held up

[22:15] <pugs_svnbot> r20838 | pmurias++ | initial port of the sm0p grammar to gimme5 (the hack/rule engine compiles STD5)

[22:15] <TimToady> I thought Rocco might have the advantage down the way

[22:19] <pmurias> TimToady: STD5_dump_match seems to have broken down horribly for STD5

[22:20] <pmurias> have you changed the way STD needs to be invoked

[22:21] <pmurias> ruoso: if you aren't sleeping i have ci a initial version of the sm0p grammar running under gimme5

[22:23] <TimToady> pmurias: I don't think so

[22:24] <ruoso> pmurias, cool...

[22:24] * diakopter heads to tpf grant bof

[22:25] <ruoso> pmurias, had you tested using it as the  preprocessor?

[22:25] <pmurias> it only does the matching

[22:25] <ruoso> the grammar is a match and replace...

[22:25] <ruoso> there is no real action....

[22:26] *** mncharity joined
[22:26] <pmurias> i remove actions before passing it to gimme5

[22:26] <ruoso> even if it's only string replace?

[22:27] <pmurias> mncharity: hi

[22:27] <pmurias> ruoso: yes, i'll use elf later to run the actions

[22:28] <ruoso> alright then...

[22:28] <pmurias> TimToady: could you paste the scripts you use to run STD5?

[22:28] <ruoso> btw... I'm not really around here...

[22:28] <ruoso> I'm finishing packaging for a transatlantic move

[22:28] * ruoso moving back to brasil

[22:30] <pmurias> ruoso: i won't iterupt you then, so you don't forget anything ;)

[22:30] <pmurias> * interupt

[22:31] *** eternaleye joined
[22:31] <TimToady> ~.~.

[22:32] *** Exodist left
[22:32] <TimToady> sorry, this wireless doesn't roam well...

[22:32] <TimToady> pmurias: hang on a sec

[22:32] <mncharity> hi ﻿pmurias

[22:32] <lambdabot> mncharity: You have 1 new message. '/msg lambdabot @messages' to read it.

[22:32] <mncharity> ﻿/msg lambdabot @messages

[22:33] <pmurias> mncharity: are you at the yapc?

[22:35] * pmurias should have looked at the ip adress instead of asking stupidly

[22:35] *** cjfields joined
[22:36] <cjfields> rakudo: 'A'..'D'.say;

[22:36] <p6eval> rakudo r28443 OUTPUT[D␤]

[22:36] <pasteling> "TimToady" at 198.37.17.244 pasted "tryfoo, runs the foo rule in STD (currently set up to test backref match)" (14 lines, 234B) at http://sial.org/pbot/31333

[22:36] <cjfields> rakudo: say 'A'..'D';

[22:36] <p6eval> rakudo r28443 OUTPUT[ABCD␤]

[22:36] <cjfields> rakudo: say 'A'..'Z'

[22:36] <p6eval> rakudo r28443

[22:36] <p6eval> ..OUTPUT[ABCDEFGHIJKLMNOPQRSTUVWXYZAAABACADAEAFAGAHAIAJAKALAMANAOAPAQARASATAUAVAWAXAYAZBABBBCBDBEBFBGBHBIBJBKBLBMBNBOBPBQBRBSBTBUBVBWBXBYBZCACBCCCDCECFCGCHCICJCKCLCMCNCOCPCQCRCSCTCUCVCWCXCYCZDADBDCDDDEDFDGDHDIDJDKDLDMDNDODPDQDRDSDTDUDVDWDXDYDZEAEBECEDEEEFEGEHEIEJEKELEMENEOEPEQERESETEUEVEWEXEYEZFAFB

[22:36] <p6eval> ..FCFDFEFFFGFHFIFJFKFLFMFNFOFPFQFRFSFTFUFVFWFXFYFZGA...

[22:36] <cjfields> Ugh.

[22:37] <cjfields> rakudo: say 'A'..^'Z'

[22:37] <p6eval> rakudo r28443 OUTPUT[ABCDEFGHIJKLMNOPQRSTUVWXY␤]

[22:37] <Auzon> Wow. That's pretty WTFy.

[22:37] <cjfields> yeah, just found that one.

[22:37] <Auzon> You can use .say if you put the first group in parens

[22:37] <TimToady> alpha ++ should never exceed the length on the right

[22:38] <TimToady> and you have to have that test anyway, in case the comparison "misses"

[22:38] <Auzon> rakudo: ('A' .. 'Z').perl.say

[22:38] <p6eval> rakudo r28443 OUTPUT["A".."Z"␤]

[22:38] <TimToady> on the other hand, it *should* stop on Z anyway

[22:38] <pmurias> TimToady: foo works

[22:38] <dolmen> rakudo: say ('A'..'Z')

[22:38] <p6eval> rakudo r28443

[22:38] <p6eval> ..OUTPUT[ABCDEFGHIJKLMNOPQRSTUVWXYZAAABACADAEAFAGAHAIAJAKALAMANAOAPAQARASATAUAVAWAXAYAZBABBBCBDBEBFBGBHBIBJBKBLBMBNBOBPBQBRBSBTBUBVBWBXBYBZCACBCCCDCECFCGCHCICJCKCLCMCNCOCPCQCRCSCTCUCVCWCXCYCZDADBDCDDDEDFDGDHDIDJDKDLDMDNDODPDQDRDSDTDUDVDWDXDYDZEAEBECEDEEEFEGEHEIEJEKELEMENEOEPEQERESETEUEVEWEXEYEZFAFB

[22:38] <p6eval> ..FCFDFEFFFGFHFIFJFKFLFMFNFOFPFQFRFSFTFUFVFWFXFYFZGA...

[22:38] <pmurias> TimToady: does comp_unit work for you?

[22:38] <Auzon> seems to me that the trimming needs to be just a bit shorter...

[22:39] <cjfields> that's what I would think, but...

[22:39] <cjfields> rakudo: say 'A'..'Y'

[22:39] <p6eval> rakudo r28443 OUTPUT[ABCDEFGHIJKLMNOPQRSTUVWXY␤]

[22:39] <cjfields> which is fine

[22:39] <pmurias> foo works for me too

[22:40] <cjfields> rakudo: say 'A'..

[22:40] <p6eval> rakudo r28443 OUTPUT[Statement not terminated properly at line 1, near ".."␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[22:40] <pasteling> "TimToady" at 198.37.17.244 pasted "trytry, which runs try.t as a comp_unit (where try.t is an old copy of radix.t)" (15 lines, 264B) at http://sial.org/pbot/31334

[22:40] <cjfields> rakudo: say 'A'..'AA'

[22:40] <p6eval> rakudo r28443 OUTPUT[A␤]

[22:41] <pmurias> mncharity: i'm thinking it would be a good idea to add STD5 as a second parser to elf

[22:41] <TimToady> pmurias: and yes, the last nopaste works with comp_unit

[22:41] <TimToady> I can also run your program on try.t, not on a simple $a++

[22:43] *** eternaleye_ left
[22:44] <TimToady> works on the most recent radix.t as well

[22:44] <TimToady> so it's not that my try.t is old

[22:44] *** SubStack_ joined
[22:44] <pmurias> so it's an STD bug

[22:45] <pmurias> ?

[22:45] <TimToady> I don't know why your program doesn't work; didn't have a chance to look at it

[22:45] <pugs_svnbot> r20839 | Auzon++ | [evalbot] shortened the max length slightly to keep output in one message.

[22:45] <TimToady> I was up till 1:00 getting ready for my talk today

[22:46] <TimToady> and had a sufficient number of my own bugs :)

[22:46] <pmurias> it's your program that doesn't work

[22:46] <pmurias> ;)

[22:46] <pmurias> it works on radix.t

[22:46] <dolmen> rakudo: my $a = 'Z'; $a++; say $a;

[22:46] <p6eval> rakudo r28443 OUTPUT[AA␤]

[22:46] <pmurias> STD5_dump_match works on radix.t

[22:47] *** cjfields left
[22:47] <mncharity> ﻿pmurias: Foo.new(a=>1,b=>2) parsing as a=>(1,b=>2) is STD.pm spec (the precedence check in EXPR has been commented out there for a long time).  :a<1>,:b<2> works.

[22:47] <mncharity> not at yapc

[22:47] <TimToady> could well be my bug, but I already had programs that parsed $a++, so I just used em

[22:47] *** ruoso left
[22:47] <Auzon> elf: say time

[22:47] <p6eval> OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted due to

[22:47] <p6eval> ..compilation errors.␤]

[22:47] <Auzon> elf: sub time is p5 {time}; say time

[22:47] <pmurias> TimToady: if i pass $a++ to comp_unit is spawns an error

[22:47] <p6eval> OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted due to

[22:47] <p6eval> ..compilation errors.␤]

[22:48] <Auzon> elf: say 1

[22:48] <p6eval> OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted due to

[22:48] <p6eval> ..compilation errors.␤]

[22:48] <dolmen> rakudo: my $a = 'AZ'; $a++; say $a;

[22:48] <Auzon> evalbot control restart

[22:48] *** p6eval left
[22:48] <Auzon> oops, sorry

[22:48] *** p6eval joined
[22:48] <dolmen> rakudo: my $a = 'AZ'; $a++; say $a;

[22:48] <Auzon> rakudo: say 'A' .. 'Z'

[22:48] <TimToady> it's probably somewhere in faststopper

[22:48] <p6eval> rakudo r28443 OUTPUT[BA␤]

[22:48] <p6eval> rakudo r28443

[22:48] <p6eval> ..OUTPUT[ABCDEFGHIJKLMNOPQRSTUVWXYZAAABACADAEAFAGAHAIAJAKALAMANAOAPAQARASATAUAVAWAXAYAZBABBBCBDBEBFBGBHBIBJBKBLBMBNBOBPBQBRBSBTBUBVBWBXBYBZCACBCCCDCECFCGCHCICJCKCLCMCNCOCPCQCRCSCTCUCVCWCXCYCZDADBDCDDDEDFDGDHDIDJDKDLDMDNDODPDQDRDSDTDUDVDWDXDYDZEAEBECEDEEEFEGEHEIEJEKELEMENEOEPEQERESETEUEVEWEXEYEZFAFB

[22:48] <p6eval> .....

[22:48] <mncharity> elf: say 3

[22:48] <p6eval> OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted due to

[22:48] <p6eval> ..compila...

[22:49] <Auzon> dang. It's still too long, by just a few characters

[22:49] <pmurias> it's my fault

[22:49] <pmurias> i changed =~ to ~~

[22:50] <mncharity> :(  we talked about that...

[22:50] <mncharity> not right thing

[22:50] <pmurias> mncharity: that = breaking the bootstrap?

[22:51] <pmurias> i didn't break it, it just requires 5.10

[22:51] <pugs_svnbot> r20840 | Auzon++ | [evalbot] last commit was just barely too long with the message length. Old length was 350 if it matters.

[22:51] <mncharity> adding code is generally safer than changing or removing.  and there's lots of stuff needing to be added.   an infix:<~~> implementation in p6 would be neat. ;)

[22:51] <Auzon> Do you have multi methods, mncharity?

[22:52] <pmurias> mncharity: i disagree

[22:52] <mncharity> very crude ones.  basically just Class::Multimethods.

[22:52] <pmurias> with the changing and removing bit

[22:54] <mncharity> ﻿pmurias: re disagree, I know.  how about I fork an "elf_p" from elf_f.  that will also provide a place for you to work on adding STD.

[22:54] <TimToady> pmurias: found it

[22:54] <pmurias> mncharity: okay

[22:54] <mncharity> ﻿Auzon: re multimethods, and on the SBCL backend, not yet (no even classes yet).

[22:54] <pugs_svnbot> r20841 | lwall++ | [STD] accidental magical value collision at -1 in faststopper

[22:55] <Auzon> with multimethods, it shouldn't be too hard to implement an infix:<~~>

[22:55] <TimToady> pmurias: both .pos and $+endargs were using -1 to represent "no position yet", and -1 == -1, so it succeeded in failing :)

[22:56] <TimToady> the sort of bug that only shows up if the file starts with EXPR rather than a statement_control

[22:56] <mncharity> re infix:<~~>, oh, there's enough mm to do that.  ie, fixed arity, no optional or named args, class-not-value based.

[22:57] <mncharity> defining ~~ in the prelude won't actually get it called at the moment, unless you call it directly in GLOBAL::, but I was originally thinking of doing that this evening.

[22:58] <pmurias> this = infix:<~~>

[22:58] <pmurias> ?

[22:58] *** SubStack left
[22:58] <dolmen> perl6: my $a = 'Z'; my $b = $a; $a++; say ($a gt $b).perl;

[22:58] <p6eval> kp6 r20841: OUTPUT[syntax error at position 27, line 1 column 27:␤my $a = 'Z'; my $b = $a; $a++; say ($a gt $b).perl␤                           ^ HERE␤]

[22:58] <p6eval> ..pugs: OUTPUT[Bool::False␤]

[22:58] <p6eval> ..rakudo r28443: OUTPUT[Bool::False␤]

[22:58] <p6eval> ..elf r20841: OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted

[22:59] <p6eval> ..due to compila...

[22:59] <mncharity> multi infix:<~~>(Blah $a,Blip $b){...}  lather rinse repeat

[22:59] <pmurias> upgrading evalbot to perl5.10 would fix it

[22:59] <pmurias> shower&

[23:00] <TimToady> pmurias: your program now works on my ++$a; file

[23:00] <mncharity> problem is, instead of =~ , a nonspec 'can do anything we want it to' op being hardwired into the emitter, that's now been changed to ~~ .  so... after the fork, will revert.

[23:00] <Auzon> 5.10's infix:<~~> is slightly different in subtle ways from what I remember. The Perl 6 meaning changed sometime before 5.10 was released, so ~~ doesn't follow the P6 meaning in P5.

[23:01] *** SubStack_ is now known as SubStack

[23:01] <dolmen> rakudo: say 'A'..^'AA'

[23:01] <p6eval> rakudo r28443 OUTPUT[A␤]

[23:01] <mncharity> the "so..." elaborates as 'which is rather an obstacle to then doing ~~ right'.

[23:01] <dolmen> rakudo: say 'A'..'AA'

[23:01] <p6eval> rakudo r28443 OUTPUT[A␤]

[23:02] <pmurias> mncharity: =~ is speced

[23:03] <mncharity> ﻿pmurias: ooo, htanks for the unicode fix

[23:04] <mncharity> and the autobox... hmm... does that mean the feather autobox needs to be upgraded as well?

[23:04] <mncharity> re '﻿=~ is speced', ?

[23:04] <pmurias> mncharity: it's speced not to be valid

[23:05] <pmurias> pugs: my $a;$a =+ 3;say $a;

[23:05] <p6eval> OUTPUT[3␤]

[23:05] <pmurias> pugs: my $a;$a = ~ 3;say $a;

[23:05] <p6eval> OUTPUT[3␤]

[23:05] <pmurias> pugs: my $a;$a =~ 3;say $a;

[23:05] <p6eval> OUTPUT[*** ␤    Unexpected "3"␤    There is no =~ operator in Perl 6 -- did you mean ~~ (match) or ~= (concat-assign)?␤    at /tmp/MXG4gIk6C0 line 1, column 13␤]

[23:06] <Auzon> pugs: say "foo" . "bar"

[23:06] <p6eval> OUTPUT[*** ␤    Unexpected "."␤    expecting operator, ":" or ","␤    at /tmp/woxbsc3lZL line 1, column 11␤]

[23:06] <pmurias> as a way of catching a mistake cause by a perl5 mindset

[23:06] <pmurias> s/mindest/usage/

[23:06] <Auzon> same with .length

[23:10] <mncharity> ﻿pmurias: "﻿it's speced not to be valid".  ah, ok.  happily it will eventually go away when real regex support gets added.  it could certainly be replaced with something non-prohibited, like ==~ , but that would be silly.

[23:10] <TimToady> and everything else in STD that calls .obs

[23:12] <mncharity> ﻿pmurias: misc/elfish/elf_p/ an ok name for the fork?

[23:16] <pmurias> p meaning p(murias)?

[23:17] <mncharity> re r20789, so autobox had a minor rev 'old api breaks even though it would be trivial to keep it working' change?   eep... 2.53?  that's just sooo wrong.

[23:17] <TimToady> pmurias: there seems to be a bug in your program, parsing "++$a;\n" it nests sigil 4 deep for some reason

[23:18] <mncharity> re p, or whatever.  open to suggestions.  or you can simply rename it of course.

[23:18] <TimToady> the yaml output only shows one level of sigil, not 4

[23:18] <pmurias> k

[23:22] *** Caelum_ is now known as Caelum

[23:24] <pmurias> TimToady: found it $<sigil> = $<variable><sigil>

[23:24] <pmurias> TimToady: why do you do it?

[23:28] <TimToady> the assignment operator has to know whether it should parse as list or item assignment

[23:28] <TimToady> and that depends on whether the sigil is '$'

[23:30] *** cmarcelo left
[23:30] <pugs_svnbot> r20842 | putter++ | [elf] Copy elf/elf_f_src to elfish/elf_p/ .  An experimental fork for pmurias++.

[23:31] <TimToady> it should probably just propagate the text of the sigil, not the node

[23:31] <mncharity> Actually, that might have been better as elf_x - ie, a non-stable development branch.  ah well.

[23:32] <pmurias> TimToady: yes

[23:33] <TimToady> I'll take a look at it sometime, so don't worry about it

[23:37] *** Kattana joined
[23:38] <dolmen> rakudo: say ('a'..'z').chars

[23:38] <p6eval> rakudo r28445 OUTPUT[Method 'chars' not found for invocant of class 'Range'␤current instr.: '_block11' pc 49 (EVAL_14:20)␤

[23:38] <dolmen> rakudo: say ('a'..'z').perl.chars

[23:38] <p6eval> rakudo r28445 OUTPUT[8␤]

[23:39] <TimToady> .chars should be another one of those methods that has an Any variant that coerces to Str

[23:39] *** Lorn left
[23:39] <dolmen> rakudo: my $a = 'a'..'z'; say $a.chars

[23:39] <p6eval> rakudo r28445 OUTPUT[Method 'chars' not found for invocant of class 'Range'␤current instr.: '_block11' pc 70 (EVAL_14:27)␤

[23:39] <dolmen> rakudo: my Str $a = 'a'..'z'; say $a.chars

[23:39] <p6eval> rakudo r28445 OUTPUT[Type check failed␤current instr.: 'parrot;Perl6Object;infix:=' pc 59 (src/gen_builtins.pir:51)␤

[23:39] <TimToady> rakudo: say ~('a'..'z')

[23:39] <p6eval> rakudo r28445 OUTPUT[get_string() not implemented in class 'Range'␤current instr.: 'prefix:~' pc 11061 (src/gen_builtins.pir:7401)␤

[23:40] <dolmen> rakudo: say (~('a'..'z').chars)

[23:40] <p6eval> rakudo r28445 OUTPUT[Method 'chars' not found for invocant of class 'Range'␤current instr.: '_block11' pc 49 (EVAL_14:20)␤

[23:40] <dolmen> rakudo: say (~('a'..'z')).chars

[23:40] <p6eval> rakudo r28445 OUTPUT[get_string() not implemented in class 'Range'␤current instr.: 'prefix:~' pc 11061 (src/gen_builtins.pir:7401)␤

[23:41] *** pmurias left
[23:42] <TimToady> if bare ~ doesn't work, adding a .chars won't make it better

[23:43] *** elmex left
[23:43] <TimToady> perl6: say ('a'..'z').join.chars

[23:43] <p6eval> kp6 r20842: OUTPUT[syntax error at position 4, line 1 column 4:␤say ('a'..'z').join.char␤    ^ HERE␤]

[23:43] <p6eval> ..pugs: OUTPUT[26␤]

[23:43] <p6eval> ..rakudo r28445: OUTPUT[Method 'join' not found for invocant of class 'Range'␤current instr.: '_block11' pc 49 (EVAL_14:20)␤

[23:43] <p6eval> ..elf r20842: OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted

[23:43] <p6eval> ..due to compila...

[23:44] <TimToady> perl6: say ['a'..'z'].join.chars

[23:44] <p6eval> kp6 r20842: OUTPUT[syntax error at position 4, line 1 column 4:␤say ['a'..'z'].join.char␤    ^ HERE␤]

[23:44] <p6eval> ..pugs: OUTPUT[26␤]

[23:44] <p6eval> ..rakudo r28445: OUTPUT[2001␤]

[23:44] <p6eval> ..elf r20842: OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted

[23:44] <p6eval> ..due to compila...

[23:44] <diakopter> rakudo: 2001...?

[23:44] <p6eval> rakudo r28445 OUTPUT[Statement not terminated properly at line 1, near "...?"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[23:44] <TimToady> ooh, rakudo is on a space odyssey

[23:45] <dolmen> rakudo: say (~(('a'..'z').list)).chars

[23:45] <p6eval> rakudo r28445 OUTPUT[2001␤]

[23:45] <dolmen> rakudo: say (~(('a'..'y').list)).chars

[23:45] <p6eval> rakudo r28445 OUTPUT[49␤]

[23:45] <dolmen> rakudo: say (~(('A'..'Y').list)).chars

[23:45] <p6eval> rakudo r28445 OUTPUT[49␤]

[23:45] <dolmen> rakudo: say ('A'..'Y').list

[23:45] <p6eval> rakudo r28445 OUTPUT[ABCDEFGHIJKLMNOPQRSTUVWXY␤]

[23:46] *** bacek_ joined
[23:47] <dolmen> rakudo: say ~(('A'..'Y').list)

[23:47] <p6eval> rakudo r28445 OUTPUT[A B C D E F G H I J K L M N O P Q R S T U V W X Y␤]

[23:47] <diakopter> rakudo: say ~(('A'..'Y').list.pick)

[23:47] <p6eval> rakudo r28445 OUTPUT[Method 'pick' not found for invocant of class 'List'␤current instr.: '_block11' pc 58 (EVAL_14:21)␤

[23:48] <diakopter> pugs: say ~(('A'..'Y').list.pick)

[23:48] <p6eval> OUTPUT[P␤]

[23:49] <diakopter> pugs: say ~(('R','A','K','U','D','O').list.pick)

[23:49] <p6eval> OUTPUT[K␤]

[23:49] <diakopter> pugs: say ~(('R','A','K','U','D','O').list.pick)

[23:49] <p6eval> OUTPUT[K␤]

[23:49] <diakopter> pugs: say ~(('R','A','K','U','D','O').list.pick)

[23:49] <p6eval> OUTPUT[R␤]

[23:49] <TimToady> perl6: say ('a'..'y').cat

[23:49] <p6eval> kp6 r20842: OUTPUT[syntax error at position 4, line 1 column 4:␤say ('a'..'y').ca␤    ^ HERE␤]

[23:49] <p6eval> ..pugs: OUTPUT[*** Unimplemented unaryOp: cat␤    at /tmp/6x0LBEdYR3 line 1, column 5 - line 2, column 1␤]

[23:49] <p6eval> ..rakudo r28445: OUTPUT[Method 'cat' not found for invocant of class 'Range'␤current instr.: '_block11' pc 49 (EVAL_14:20)␤

[23:49] <p6eval> ..elf r20842: OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted

[23:49] <p6eval> ..due to compila...

[23:49] <Auzon> diakopter: try <r a k u d o> instead ;)

[23:50] <diakopter> pugs: say ~(('rakudo').split('').pick)

[23:50] <p6eval> OUTPUT[r␤]

[23:50] <diakopter> pugs: say ~(('rakudo').split('').pick)

[23:50] <p6eval> OUTPUT[u␤]

[23:50] *** eternaleye_ joined
[23:50] <diakopter> rakudo: say ~(('rakudo').split('').pick)

[23:50] <p6eval> rakudo r28445 OUTPUT[Method 'pick' not found for invocant of class 'List'␤current instr.: '_block11' pc 47 (EVAL_12:20)␤

[23:50] <dolmen> pugs: <rakudo>.split('').pick.say

[23:50] <p6eval> OUTPUT[d␤]

[23:50] <diakopter> rakudo: say ~(('rakudo').split(''))

[23:50] <p6eval> rakudo r28445 OUTPUT[r a k u d o␤]

[23:50] <dolmen> pugs: <rakudo>.split('').pick.say

[23:50] <p6eval> OUTPUT[k␤]

[23:50] <TimToady> perl6: say 'rakudo'.comb(/./).pick

[23:51] <p6eval> kp6 r20842: OUTPUT[syntax error at position 17, line 1 column 17:␤say 'rakudo'.comb(/./).pic␤                 ^ HERE␤]

[23:51] <p6eval> ..pugs: OUTPUT[k␤]

[23:51] <p6eval> ..rakudo r28445: OUTPUT[Method 'comb' not found for invocant of class 'Perl6Str'␤current instr.: '_block11' pc 45 (EVAL_12:22)␤

[23:51] <p6eval> ..elf r20842: OUTPUT[syntax error at ./elf_f_faster line 3160, near ") ~"␤syntax error at ./elf_f_faster line 3161, near "))"␤syntax error at ./elf_f_faster line 3162, near "}elsif"␤Global symbol "$m" requires explicit package name at ./elf_f_faster line 3162.␤Execution of ./elf_f_faster aborted

[23:51] <p6eval> ..due to compila...

[23:51] <TimToady> split '' is so perl 5...

[23:51] <diakopter> well it doesn't have chars

[23:51] <diakopter> oh wait it does

[23:52] <diakopter> oh wait that's even wrong; heh

[23:53] <diakopter> rakudo: say ~(('rakudo').split('').item.perl)

[23:53] <p6eval> rakudo r28445 OUTPUT[["r", "a", "k", "u", "d", "o"]␤]

[23:55] <mncharity> "﻿split '' is so perl 5..." :)

[23:56] *** eternaleye left
