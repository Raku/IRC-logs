[00:01] *** justatheory left
[00:03] *** bacek_ joined
[00:21] <diakopter> yap6 is no longer a mere lexer/tokenizer that also syntax checks.  Now it's a lexer/parser/scanner that syntax checks.

[00:21] <pugs_svnbot> r21003 | diakopter++ | [yap6]

[00:21] <pugs_svnbot> r21003 | diakopter++ | * yap6 now generates (and outputs only) the match tree

[00:22] <diakopter> evalbot control svnup

[00:23] * diakopter taps his fingers

[00:27] <pugs_svnbot> r21004 | diakopter++ | [yap6] braino..

[00:28] *** FurnaceBoy joined
[00:30] <diakopter> yap6: say $a;

[00:30] <p6eval> yap6 r21004 OUTPUT[tree: {program => [{func_call => ["say"," ",{expr => {sVari => ["\$",{id => "a"}]}}]},";"]}␤]

[00:30] <pugs_svnbot> r21005 | diakopter++ | [yap6] cleanup of both()

[00:30] <Auzon> diakopter: I'd kinda like to make it possible for evalbot to control that.

[00:32] <diakopter> evalbot control svnup parrot

[00:32] <diakopter> evalbot control svnup pugscode

[00:32] <diakopter> evalbot control rebuild parrot

[00:34] <dolmen> perl6: my $a = 1..5; $a.perl.say; say $a.shift; $a.perl.say;

[00:34] <p6eval> kp6 r21005: OUTPUT[syntax error at position 10, line 1 column 10:␤my $a = 1..5; $a.perl.say; say $a.shift; $a.perl.say␤          ^ HERE␤]

[00:34] <p6eval> ..pugs: OUTPUT[[1, 2, 3, 4, 5]␤1␤[2, 3, 4, 5]␤]

[00:34] <p6eval> ..rakudo r28692: OUTPUT[1..5␤1␤2..5␤]

[00:34] <p6eval> ..elf r21005: OUTPUT[Can't call method "shift" without a package or object reference at (eval 117) line 5.␤ at ./elf_f line 3854␤"1E0"␤]

[00:36] *** sscaffidi joined
[00:36] <dolmen> perl6: my $a = 1..1; $a.perl.say; $a.shift.say; $a.perl.say;

[00:36] <p6eval> kp6 r21005: OUTPUT[syntax error at position 10, line 1 column 10:␤my $a = 1..1; $a.perl.say; $a.shift.say; $a.perl.say␤          ^ HERE␤]

[00:36] <p6eval> ..pugs: OUTPUT[[1,]␤1␤[]␤]

[00:36] <p6eval> ..rakudo r28692: OUTPUT[1..1␤1␤2..1␤]

[00:36] <p6eval> ..elf r21005: OUTPUT[Can't call method "shift" without a package or object reference at (eval 115) line 5.␤ at ./elf_f line 3854␤"1E0"␤]

[00:37] <dolmen> perl6: my $a = 1..1; $a.perl.say; $a.shift.say; $a.perl.say; $a.perl.say;

[00:37] <p6eval> kp6 r21005: OUTPUT[syntax error at position 10, line 1 column 10:␤my $a = 1..1; $a.perl.say; $a.shift.say; $a.perl.say; $a.perl.say␤          ^ HERE␤]

[00:37] <p6eval> ..pugs: OUTPUT[[1,]␤1␤[]␤[]␤]

[00:37] <p6eval> ..rakudo r28692: OUTPUT[1..1␤1␤2..1␤2..1␤]

[00:37] <p6eval> ..elf r21005: OUTPUT[Can't call method "shift" without a package or object reference at (eval 115) line 5.␤ at ./elf_f line 3854␤"1E0"␤]

[00:37] <diakopter> what did rakudo do with [1..1].shift ?

[00:38] <dolmen> [1..1] is not (1..1)

[00:38] <dolmen> rakudo: (1..1).WHAT.say

[00:38] <p6eval> rakudo r28692 OUTPUT[Range␤]

[00:38] <dolmen> rakudo: [1..1].WHAT.say

[00:38] <p6eval> rakudo r28692 OUTPUT[Array␤]

[00:40] <diakopter> rakudo: my $a = 1..1; $a.shift; say $a.perl

[00:40] <p6eval> rakudo r28692 OUTPUT[2..1␤]

[00:41] <diakopter> I don't understand that

[00:42] <dolmen> what is the process to submit test cases por Perl6?

[00:42] <bacek_> diakopter: bug in range.

[00:42] <diakopter> dolmen: you get a commit bit, and add 'em

[00:42] <bacek_> (is was about [2..1]

[00:42] <dolmen> not a bug

[00:43] <diakopter> dolmen: do you already have subversion commit access to pugs (where the tests are)?

[00:43] <dolmen> not yet

[00:43] <diakopter> msg me your email address and desired username and I'll add you

[00:50] *** sscaffidi left
[00:55] *** Chillance left
[00:57] *** hercynium_ joined
[00:57] *** hercynium_ is now known as hercynium

[01:01] <pugs_svnbot> r21006 | lwall++ | [STD] revisions to endstmt memoization

[01:01] <pugs_svnbot> r21006 | lwall++ | faststopper is now gone

[01:01] <pugs_svnbot> r21006 | lwall++ | statement parsing is a bit simpler

[01:01] <pugs_svnbot> r21006 | lwall++ | various other buglets fixed

[01:06] *** BinGOs left
[01:06] *** BinGOs joined
[01:10] *** pbuetow left
[01:11] *** BinGOs left
[01:19] *** hercynium left
[01:19] *** justatheory joined
[01:19] *** hercynium joined
[01:21] *** a-jing joined
[01:21] *** a-jing left
[01:21] *** Jedai left
[01:24] <dolmen> can I create spec/S29-range/ ?

[01:24] *** justatheory left
[01:24] * dolmen is a new commiter on Pugs...

[01:25] <diakopter> commit first; ask questions later

[01:25] <diakopter> Auzon: you around to elaborate/specify?

[01:27] *** Limbic_Region left
[01:27] *** p6eval left
[01:27] *** iblechbot left
[01:27] *** Khisanth left
[01:27] *** GeJ left
[01:28] *** ingy joined
[01:28] *** Limbic_Region joined
[01:28] *** p6eval joined
[01:28] *** iblechbot joined
[01:28] *** Khisanth joined
[01:28] *** GeJ joined
[01:28] *** simcop2387 joined
[01:28] *** cookys joined
[01:28] *** Southen joined
[01:28] *** agentzh joined
[01:28] *** mj41 joined
[01:28] *** kolibrie joined
[01:28] *** fullermd joined
[01:28] *** qmole_ joined
[01:28] *** pmichaud joined
[01:28] *** charsbar joined
[01:28] *** irc.freenode.net sets mode: +o ingy

[01:28] <diakopter> <sigh> netsplits.

[01:28] *** qmole_ left
[01:28] *** kolibrie left
[01:28] *** GeJ left
[01:28] *** p6eval left
[01:28] *** Limbic_Region left
[01:28] *** fullermd left
[01:28] *** agentzh left
[01:28] *** pmichaud left
[01:28] *** ingy left
[01:28] *** Southen left
[01:28] *** Khisanth left
[01:28] *** mj41 left
[01:28] *** cookys left
[01:28] *** simcop2387 left
[01:28] *** iblechbot left
[01:28] *** charsbar left
[01:29] *** ingy joined
[01:29] *** Limbic_Region joined
[01:29] *** p6eval joined
[01:29] *** iblechbot joined
[01:29] *** Khisanth joined
[01:29] *** GeJ joined
[01:29] *** simcop2387 joined
[01:29] *** cookys joined
[01:29] *** Southen joined
[01:29] *** agentzh joined
[01:29] *** mj41 joined
[01:29] *** kolibrie joined
[01:29] *** fullermd joined
[01:29] *** qmole_ joined
[01:29] *** pmichaud joined
[01:29] *** charsbar joined
[01:29] *** irc.freenode.net sets mode: +o ingy

[01:30] *** FurnaceBoy left
[01:30] *** japhb left
[01:30] *** audreyt_ left
[01:30] *** meteorja1 left
[01:30] *** wilx left
[01:31] *** FurnaceBoy joined
[01:31] *** japhb joined
[01:31] *** audreyt_ joined
[01:31] *** meteorja1 joined
[01:31] *** wilx joined
[01:31] *** ruoso joined
[01:31] *** spinclad joined
[01:31] *** TreyHarris joined
[01:31] *** Kattana joined
[01:31] *** nipotan joined
[01:32] *** TreyHarris left
[01:32] *** Kattana left
[01:32] *** wilx left
[01:32] *** japhb left
[01:32] *** spinclad left
[01:32] *** FurnaceBoy left
[01:32] *** meteorja1 left
[01:32] *** audreyt_ left
[01:32] *** ruoso left
[01:32] *** nipotan left
[01:33] *** FurnaceBoy joined
[01:33] *** japhb joined
[01:33] *** audreyt_ joined
[01:33] *** meteorja1 joined
[01:33] *** wilx joined
[01:33] *** ruoso joined
[01:33] *** spinclad joined
[01:33] *** TreyHarris joined
[01:33] *** Kattana joined
[01:33] *** nipotan joined
[01:35] *** LowBass left
[01:36] *** [particle] left
[01:36] *** [particle] joined
[01:36] *** rhr joined
[01:36] *** Auzon joined
[01:36] *** jrockway joined
[01:36] *** smtms joined
[01:36] *** yahooooo2 joined
[01:36] *** SamB joined
[01:36] *** lumi joined
[01:38] *** lumi left
[01:38] *** rhr left
[01:38] *** [particle] left
[01:38] *** yahooooo2 left
[01:38] *** SamB left
[01:38] *** Auzon left
[01:38] *** smtms left
[01:38] *** jrockway left
[01:38] *** qmole_ left
[01:38] *** kolibrie left
[01:38] *** GeJ left
[01:38] *** p6eval left
[01:38] *** Limbic_Region left
[01:38] *** fullermd left
[01:38] *** agentzh left
[01:38] *** pmichaud left
[01:38] *** ingy left
[01:38] *** Southen left
[01:38] *** Khisanth left
[01:38] *** mj41 left
[01:38] *** cookys left
[01:38] *** simcop2387 left
[01:38] *** iblechbot left
[01:38] *** charsbar left
[01:38] *** TreyHarris left
[01:38] *** Kattana left
[01:38] *** wilx left
[01:38] *** japhb left
[01:38] *** spinclad left
[01:38] *** FurnaceBoy left
[01:38] *** meteorja1 left
[01:38] *** audreyt_ left
[01:38] *** ruoso left
[01:38] *** nipotan left
[01:38] *** IRSeekBot left
[01:38] *** eternaleye left
[01:38] *** dolmen left
[01:38] *** cognominal_ left
[01:38] *** ispy_ left
[01:38] *** jhorwitz left
[01:38] *** bacek left
[01:38] *** xinming left
[01:38] *** alanhaggai left
[01:38] *** bacek_ left
[01:38] *** wknight8111 left
[01:38] *** stevan_ left
[01:38] *** hercynium left
[01:38] *** kanru left
[01:38] *** jjore left
[01:38] *** elmex left
[01:38] *** Patterner left
[01:38] *** jfredett left
[01:38] *** araujo left
[01:38] *** vixey left
[01:39] *** ingy joined
[01:39] *** lumi joined
[01:39] *** SamB joined
[01:39] *** yahooooo2 joined
[01:39] *** smtms joined
[01:39] *** jrockway joined
[01:39] *** Auzon joined
[01:39] *** rhr joined
[01:39] *** [particle] joined
[01:39] *** nipotan joined
[01:39] *** Kattana joined
[01:39] *** TreyHarris joined
[01:39] *** spinclad joined
[01:39] *** ruoso joined
[01:39] *** wilx joined
[01:39] *** meteorja1 joined
[01:39] *** audreyt_ joined
[01:39] *** japhb joined
[01:39] *** FurnaceBoy joined
[01:39] *** charsbar joined
[01:39] *** pmichaud joined
[01:39] *** qmole_ joined
[01:39] *** fullermd joined
[01:39] *** kolibrie joined
[01:39] *** mj41 joined
[01:39] *** agentzh joined
[01:39] *** Southen joined
[01:39] *** cookys joined
[01:39] *** simcop2387 joined
[01:39] *** GeJ joined
[01:39] *** Khisanth joined
[01:39] *** iblechbot joined
[01:39] *** p6eval joined
[01:39] *** Limbic_Region joined
[01:39] *** hercynium joined
[01:39] *** bacek_ joined
[01:39] *** dolmen joined
[01:39] *** wknight8111 joined
[01:39] *** jfredett joined
[01:39] *** cognominal_ joined
[01:39] *** ispy_ joined
[01:39] *** araujo joined
[01:39] *** kanru joined
[01:39] *** jjore joined
[01:39] *** alanhaggai joined
[01:39] *** jhorwitz joined
[01:39] *** stevan_ joined
[01:39] *** irc.freenode.net sets mode: +o ingy

[01:39] *** bacek joined
[01:39] *** elmex joined
[01:39] *** vixey joined
[01:39] *** xinming joined
[01:39] *** IRSeekBot joined
[01:39] *** eternaleye joined
[01:39] *** Patterner joined
[01:39] *** baest_ joined
[01:39] *** gbacon joined
[01:39] *** avar joined
[01:39] *** clkao joined
[01:39] *** DietCoke joined
[01:39] *** s1n joined
[01:39] *** Grrrr joined
[01:39] *** pjcj joined
[01:39] *** bsb joined
[01:39] *** drbean joined
[01:39] *** Tene joined
[01:39] *** moritz_ joined
[01:39] *** cj joined
[01:39] *** broquain1 joined
[01:39] *** arguile joined
[01:39] *** Maddingue joined
[01:39] *** allbery_b joined
[01:39] *** rakudo_svn joined
[01:39] *** awwaiid joined
[01:39] *** osfameron joined
[01:39] *** PerlJam joined
[01:39] *** pasteling joined
[01:39] *** silug joined
[01:39] *** SubStack joined
[01:39] *** gugod joined
[01:39] *** cls_bsd joined
[01:39] *** diakopter joined
[01:39] *** wolverian joined
[01:39] *** lambdabot joined
[01:39] *** buubot joined
[01:39] *** TimToady joined
[01:39] *** yves joined
[01:39] *** ilbot2 joined
[01:39] *** rafl joined
[01:39] *** mtve joined
[01:39] *** kane_ joined
[01:39] *** pengrate joined
[01:39] *** nothingmuch joined
[01:39] *** obra joined
[01:39] *** Gothmog_ joined
[01:39] *** funktio joined
[01:39] *** jan__ joined
[01:39] *** fridim joined
[01:39] *** hcchien joined
[01:39] *** irc.freenode.net sets mode: +o TimToady

[01:39] *** revdiablo joined
[01:39] *** Ara4n joined
[01:39] *** felipe joined
[01:39] *** dmq joined
[01:39] *** perlbot joined
[01:39] *** pugs_svnbot joined
[01:39] *** dalek joined
[01:39] *** Caelum joined
[01:39] *** jiing joined
[01:39] *** Juerd joined
[01:39] *** buu joined
[01:39] *** nnunley joined
[01:39] *** lisppaste3 joined
[01:39] *** yath joined
[01:39] *** zostay joined
[01:40] *** [particle] left
[01:40] *** rhr left
[01:40] *** lumi left
[01:40] *** yahooooo2 left
[01:40] *** Auzon left
[01:40] *** smtms left
[01:40] *** SamB left
[01:40] *** jrockway left
[01:40] *** Limbic_Region left
[01:40] *** p6eval left
[01:40] *** Southen left
[01:40] *** agentzh left
[01:40] *** kolibrie left
[01:40] *** qmole_ left
[01:40] *** GeJ left
[01:40] *** pmichaud left
[01:40] *** Khisanth left
[01:40] *** fullermd left
[01:40] *** simcop2387 left
[01:40] *** cookys left
[01:40] *** ingy left
[01:40] *** iblechbot left
[01:40] *** mj41 left
[01:40] *** charsbar left
[01:40] *** Kattana left
[01:40] *** FurnaceBoy left
[01:40] *** japhb left
[01:40] *** spinclad left
[01:40] *** TreyHarris left
[01:40] *** wilx left
[01:40] *** audreyt_ left
[01:40] *** meteorja1 left
[01:40] *** nipotan left
[01:40] *** ruoso left
[01:40] *** Grrrr left
[01:40] *** bsb left
[01:40] *** pjcj left
[01:40] *** eternaleye left
[01:40] *** s1n left
[01:40] *** drbean left
[01:40] *** gbacon left
[01:40] *** IRSeekBot left
[01:40] *** wolverian left
[01:40] *** diakopter left
[01:40] *** jhorwitz left
[01:40] *** dolmen left
[01:40] *** TimToady left
[01:40] *** ispy_ left
[01:40] *** cognominal_ left
[01:40] *** buubot left
[01:40] *** lambdabot left
[01:40] *** cls_bsd left
[01:40] *** bacek left
[01:40] *** yves left
[01:40] *** ilbot2 left
[01:40] *** rafl left
[01:40] *** rakudo_svn left
[01:40] *** xinming left
[01:40] *** arguile left
[01:40] *** broquain1 left
[01:40] *** PerlJam left
[01:40] *** allbery_b left
[01:40] *** awwaiid left
[01:40] *** SubStack left
[01:40] *** osfameron left
[01:40] *** gugod left
[01:40] *** pasteling left
[01:40] *** silug left
[01:40] *** Maddingue left
[01:40] *** pengrate left
[01:40] *** kane_ left
[01:40] *** Tene left
[01:40] *** mtve left
[01:40] *** moritz_ left
[01:40] *** alanhaggai left
[01:40] *** cj left
[01:40] *** bacek_ left
[01:40] *** hcchien left
[01:40] *** buu left
[01:40] *** zostay left
[01:40] *** nothingmuch left
[01:40] *** fridim left
[01:40] *** perlbot left
[01:40] *** wknight8111 left
[01:40] *** stevan_ left
[01:40] *** avar left
[01:40] *** funktio left
[01:40] *** Ara4n left
[01:40] *** Gothmog_ left
[01:40] *** DietCoke left
[01:40] *** Patterner left
[01:40] *** jjore left
[01:40] *** hercynium left
[01:40] *** nnunley left
[01:40] *** yath left
[01:40] *** revdiablo left
[01:40] *** Juerd left
[01:40] *** lisppaste3 left
[01:40] *** felipe left
[01:40] *** clkao left
[01:40] *** obra left
[01:40] *** elmex left
[01:40] *** kanru left
[01:40] *** jan__ left
[01:40] *** baest_ left
[01:40] *** dmq left
[01:40] *** dalek left
[01:40] *** pugs_svnbot left
[01:40] *** Caelum left
[01:40] *** jfredett left
[01:40] *** araujo left
[01:40] *** vixey left
[01:40] *** jiing left
[01:41] *** ingy joined
[01:41] *** lumi joined
[01:41] *** SamB joined
[01:41] *** yahooooo2 joined
[01:41] *** smtms joined
[01:41] *** jrockway joined
[01:41] *** Auzon joined
[01:41] *** rhr joined
[01:41] *** [particle] joined
[01:41] *** nipotan joined
[01:41] *** Kattana joined
[01:41] *** TreyHarris joined
[01:41] *** spinclad joined
[01:41] *** ruoso joined
[01:41] *** wilx joined
[01:41] *** meteorja1 joined
[01:41] *** audreyt_ joined
[01:41] *** japhb joined
[01:41] *** FurnaceBoy joined
[01:41] *** charsbar joined
[01:41] *** pmichaud joined
[01:41] *** qmole_ joined
[01:41] *** fullermd joined
[01:41] *** kolibrie joined
[01:41] *** mj41 joined
[01:41] *** agentzh joined
[01:41] *** Southen joined
[01:41] *** cookys joined
[01:41] *** simcop2387 joined
[01:41] *** GeJ joined
[01:41] *** Khisanth joined
[01:41] *** iblechbot joined
[01:41] *** p6eval joined
[01:41] *** Limbic_Region joined
[01:41] *** hercynium joined
[01:41] *** bacek_ joined
[01:41] *** dolmen joined
[01:41] *** wknight8111 joined
[01:41] *** jfredett joined
[01:41] *** cognominal_ joined
[01:41] *** ispy_ joined
[01:41] *** araujo joined
[01:41] *** kanru joined
[01:41] *** jjore joined
[01:41] *** alanhaggai joined
[01:41] *** jhorwitz joined
[01:41] *** stevan_ joined
[01:41] *** irc.freenode.net sets mode: +o ingy

[01:41] *** bacek joined
[01:41] *** elmex joined
[01:41] *** vixey joined
[01:41] *** xinming joined
[01:41] *** IRSeekBot joined
[01:41] *** eternaleye joined
[01:41] *** Patterner joined
[01:41] *** baest_ joined
[01:41] *** gbacon joined
[01:41] *** avar joined
[01:41] *** clkao joined
[01:41] *** DietCoke joined
[01:41] *** s1n joined
[01:41] *** Grrrr joined
[01:41] *** pjcj joined
[01:41] *** bsb joined
[01:41] *** drbean joined
[01:41] *** Tene joined
[01:41] *** moritz_ joined
[01:41] *** cj joined
[01:41] *** broquain1 joined
[01:41] *** arguile joined
[01:41] *** Maddingue joined
[01:41] *** allbery_b joined
[01:41] *** rakudo_svn joined
[01:41] *** awwaiid joined
[01:41] *** osfameron joined
[01:41] *** PerlJam joined
[01:41] *** pasteling joined
[01:41] *** silug joined
[01:41] *** SubStack joined
[01:41] *** gugod joined
[01:41] *** cls_bsd joined
[01:41] *** diakopter joined
[01:41] *** wolverian joined
[01:41] *** lambdabot joined
[01:41] *** buubot joined
[01:41] *** TimToady joined
[01:41] *** yves joined
[01:41] *** ilbot2 joined
[01:41] *** rafl joined
[01:41] *** mtve joined
[01:41] *** kane_ joined
[01:41] *** pengrate joined
[01:41] *** nothingmuch joined
[01:41] *** obra joined
[01:41] *** Gothmog_ joined
[01:41] *** funktio joined
[01:41] *** jan__ joined
[01:41] *** fridim joined
[01:41] *** hcchien joined
[01:41] *** irc.freenode.net sets mode: +o TimToady

[01:41] *** revdiablo joined
[01:41] *** Ara4n joined
[01:41] *** felipe joined
[01:41] *** dmq joined
[01:41] *** perlbot joined
[01:41] *** pugs_svnbot joined
[01:41] *** dalek joined
[01:41] *** Caelum joined
[01:41] *** jiing joined
[01:41] *** zostay joined
[01:41] *** yath joined
[01:41] *** lisppaste3 joined
[01:41] *** nnunley joined
[01:41] *** buu joined
[01:41] *** Juerd joined
[01:41] *** rakudo_svn left
[01:41] *** arguile left
[01:41] *** xinming left
[01:41] *** PerlJam left
[01:41] *** allbery_b left
[01:41] *** broquain1 left
[01:41] *** awwaiid left
[01:41] *** SubStack left
[01:41] *** osfameron left
[01:41] *** gugod left
[01:41] *** pasteling left
[01:41] *** silug left
[01:41] *** Maddingue left
[01:41] *** xinming joined
[01:41] *** broquain1 joined
[01:41] *** gugod joined
[01:41] *** SubStack joined
[01:41] *** silug joined
[01:41] *** pasteling joined
[01:41] *** PerlJam joined
[01:41] *** osfameron joined
[01:41] *** awwaiid joined
[01:41] *** rakudo_svn joined
[01:41] *** allbery_b joined
[01:41] *** Maddingue joined
[01:41] *** arguile joined
[01:42] <dolmen> how can test a new test with rakudo?

[01:42] <dolmen> I don't want to run the full spectest

[01:43] <bacek_> dolmen: create t/localtest.data and run make localtest

[01:43] <bacek_> format for file is same as t/spectest_regression.data

[01:43] *** bsb left
[01:43] *** pjcj left
[01:43] *** Grrrr left
[01:43] *** s1n left
[01:43] *** eternaleye left
[01:43] *** drbean left
[01:43] *** gbacon left
[01:43] *** IRSeekBot left
[01:44] <Auzon> diakopter: ping

[01:44] *** IRSeekBot joined
[01:44] *** eternaleye joined
[01:44] *** gbacon joined
[01:44] *** drbean joined
[01:44] *** bsb joined
[01:44] *** pjcj joined
[01:44] *** Grrrr joined
[01:44] *** s1n joined
[01:44] <diakopter> Auzon: gnop

[01:45] <Auzon> What did you want me to elaborate on?

[01:45] <diakopter> about dolmen's question about spec/S29-range

[01:47] <Auzon> Sure, it fits well

[01:47] <diakopter> there were so many netsplits; who knows who got which messages

[01:48] <Auzon> I thought you were asking about evalbot or something

[01:54] *** diakopter left
[01:54] *** jhorwitz left
[01:54] *** ispy_ left
[01:54] *** dolmen left
[01:54] *** wolverian left
[01:54] *** TimToady left
[01:54] *** cognominal_ left
[01:54] *** buubot left
[01:54] *** lambdabot left
[01:54] *** cls_bsd left
[01:55] *** TimToady joined
[01:55] *** dolmen joined
[01:55] *** cognominal_ joined
[01:55] *** ispy_ joined
[01:55] *** jhorwitz joined
[01:55] *** buubot joined
[01:55] *** lambdabot joined
[01:55] *** wolverian joined
[01:55] *** diakopter joined
[01:55] *** cls_bsd joined
[01:55] *** irc.freenode.net sets mode: +o TimToady

[01:58] *** japhb left
[02:01] *** Limbic_Region left
[02:02] *** BinGOs joined
[02:11] *** alanhaggai left
[02:13] *** alanhaggai joined
[02:16] <pugs_svnbot> r21007 | dolmen++ | First commit.

[02:16] <pugs_svnbot> r21007 | dolmen++ | A few simple Range tests.

[02:16] *** kanru left
[02:17] *** dolmen left
[02:21] <diakopter> dolmen: also, add yourself to AUTHORS

[02:23] *** Pzt joined
[02:26] *** hercynium left
[02:30] *** japhb joined
[02:33] <Auzon> whois moritz_

[02:35] <Auzon> moritz_: I was thinking for evalbot that we could combine all the exec_whatever subs, and just pass them the command to execute. We can also get rid of the filtering code so that it just trims by length (which I think I have just under one message).

[02:36] *** r0bby joined
[02:37] *** jfredett left
[02:38] *** [particle] left
[02:52] *** ispy_ left
[03:01] *** alanhaggai left
[03:11] *** jhorwitz left
[03:19] *** [particle] joined
[03:19] *** elmex left
[03:19] *** Alias_ joined
[03:20] <buu> Auzon: Sounds complicated.

[03:21] <Auzon> buu: the evalbot stuff? It'll have to be careful where we decide to do things, but it'll reduce the amount of things needed for a new implementation down to one line or so.

[03:21] <pugs_svnbot> r21008 | audreyt++ | * INSTALL: Document the "cabal install Pugs -fOptimize" flag.

[03:21] <pugs_svnbot> r21008 | audreyt++ |   As of Pugs-6.2.13.4, "pugs -e1" time is much shorter than

[03:21] <pugs_svnbot> r21008 | audreyt++ |   before (<0.3s user time), thanks to a new Prelude compilation

[03:21] <pugs_svnbot> r21008 | audreyt++ |   technique using Data.Binary instead of Data.Yaml.Syck.

[03:22] <buu> Auzon: You should look at mine =]

[03:22] <Auzon> buu: Where is it?

[03:22] <buu> buubot: hi

[03:22] <buubot> buu: leave me the fuck alone

[03:22] <buu> =[

[03:22] <Auzon> That'd be a lot simpler to implement :P

[03:23] <buu> eval: 2+2

[03:23] <buu> Oh

[03:23] <buu> buubot: eval: 2+2

[03:23] <buubot> buu:  4

[03:23] <Auzon> I've seen your bot used occasionally... but p6eval is more complicated due to the need to support multiple Perl 6 implementations

[03:24] <buu> How do you access each perl6 implementation?

[03:24] <Auzon> rakudo: say "hi"

[03:24] <p6eval> rakudo r28692 OUTPUT[hi␤]

[03:24] <buu> I mean programatically.

[03:25] <Auzon> p6eval: help

[03:25] <p6eval> Auzon: Usage: <(nqp|perl6|pugs|pixie|elf|rakudo|yap6|kp6): $perl6_program>

[03:25] <bacek_> pixie?

[03:25] <Auzon> bacek: Elf variant based on STD

[03:27] <Auzon> buu: code is separated into two parts, the main bot and the executer. The Executer handles the forking and such. The main bot has a dispatch table and a bunch of if statements for each implementation

[03:27] <buu> Auzon: The only real limitation is that bb only talks to thinks that can be embedded in perl.

[03:27] <pugs_svnbot> r21009 | lwall++ | [LazyMap] looping bug in iter()

[03:27] <pugs_svnbot> r21009 | lwall++ | [Cursor5] stop * match when it matches null string

[03:28] *** FurnaceBoy left
[03:34] *** jfredett joined
[03:37] *** alanhaggai joined
[03:46] *** jfredett left
[03:51] *** jfredett joined
[03:54] *** kane_ left
[03:58] *** wknight8111 left
[04:01] *** kane_ joined
[04:13] *** nipotan is now known as nipotaway

[04:16] *** japhb left
[04:16] *** Grrrr left
[04:16] *** s1n left
[04:16] *** pjcj left
[04:16] *** bsb left
[04:16] *** eternaleye left
[04:16] *** drbean left
[04:16] *** gbacon left
[04:16] *** IRSeekBot left
[04:16] *** japhb joined
[04:16] *** IRSeekBot joined
[04:16] *** eternaleye joined
[04:16] *** gbacon joined
[04:16] *** drbean joined
[04:16] *** bsb joined
[04:16] *** pjcj joined
[04:16] *** Grrrr joined
[04:16] *** s1n joined
[04:33] <Auzon> perl6: say Rat ~~ Num

[04:33] <p6eval> kp6 r21009: OUTPUT[no method 'APPLY' in Class 'Undef'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤    

[04:33] <p6eval> ..pugs: OUTPUT[1␤]

[04:33] <p6eval> ..rakudo r28692: OUTPUT[0␤]

[04:33] <p6eval> ..elf r21009: OUTPUT[Can't call method "Str" on an undefined value at ./elf_f line 649.␤ at ./elf_f line 3854␤]

[04:35] <Auzon> pugs: 1.1.WHAT

[04:35] <p6eval> RESULT[::Rat]

[04:35] <Auzon> pugs: say 1.1 ~~ Num

[04:35] <p6eval> OUTPUT[1␤]

[04:44] <Auzon> rakudo: sub returntype as Str {'foo'}; say returntype;

[04:44] <p6eval> rakudo r28692 OUTPUT[Statement not terminated properly at line 1, near "{'foo'}; s"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[04:44] <Auzon> rakudo: sub returntype of Str {'foo'}; say returntype;

[04:44] <p6eval> rakudo r28692 OUTPUT[foo␤]

[04:44] <Auzon> rakudo: Str sub returntype {'foo'}; say returntype;

[04:44] <p6eval> rakudo r28692 OUTPUT[Statement not terminated properly at line 1, near "sub return"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[04:44] <Auzon> rakudo: my Str sub returntype {'foo'}; say returntype;

[04:44] <p6eval> rakudo r28692 OUTPUT[Null PMC access in type()␤current instr.: 'parrot;Perl6;Grammar;Actions;scoped' pc 110447 (src/gen_actions.pir:6647)␤

[04:45] <Auzon> rakudo: sub returntype (--> Str) {'foo'}; say returntype;

[04:45] <p6eval> rakudo r28692 OUTPUT[Statement not terminated properly at line 1, near "(--> Str) "␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤

[04:47] *** Pzt left
[04:56] *** alanhaggai left
[05:02] *** alester joined
[05:06] *** japhb left
[05:06] <pugs_svnbot> r21010 | Auzon++ | [gsoc_spectest] S02: Added some parameter type and return type tests (added 12 tests)

[05:06] <Auzon> This may not be 100%, but it's a good start. self.sleep;

[05:07] *** Psyche^ joined
[05:22] *** Patterner left
[05:22] *** Psyche^ is now known as Patterner

[05:33] *** japhb joined
[05:56] *** jfredett left
[05:57] *** jfredett joined
[06:01] *** jfredett left
[06:02] *** jfredett joined
[06:05] *** jwest- joined
[06:11] *** alester left
[06:12] *** justatheory joined
[06:14] *** Alias_ left
[06:17] *** justatheory left
[06:19] *** smtms left
[06:23] *** smtms joined
[06:30] *** jwest- left
[06:36] *** lambdabot left
[06:41] *** osfameron left
[06:43] *** jfredett left
[06:43] *** jfredett joined
[07:12] <pugs_svnbot> r21011 | moritz++ | [spec] added Ovid++'s type check regressioin test

[07:21] *** sri_work joined
[07:21] <pugs_svnbot> r21012 | moritz++ | fixed intendation and curlies in type.t

[07:28] *** Jedai joined
[07:30] <pugs_svnbot> r21013 | moritz++ | [spec] types.t: more fudging, and rewrote some tests in terms of dies_ok

[07:45] *** meppl joined
[08:00] <pugs_svnbot> r21014 | moritz++ | [spec] started to fudge pair.t - still a long way to go

[08:09] <pugs_svnbot> r21015 | moritz++ | [spec] started to fudge lists.t

[08:11] <moritz_> fudging is a bit frustrating if rakudo dies unspecifically with "Method 'lvalue' not found for invocant of class 'PAST::Stmts'" or "null PMC access in type()" or some such

[08:12] <bacek_> moritz_: -G?

[08:13] <bacek_> even adding new empty lines can help...

[08:14] <moritz_> bacek_: -G doesn't help for incorrectly generated PAST (and -G isn't well supported in the testing tool chain)

[08:15] <moritz_> the frustrating thing is that these errors don't map to location in the file

[08:15] <pugs_svnbot> r21016 | moritz++ | [spec] some more fudging of lists.t

[08:18] <bacek_> moritz_: ho! nice bug.

[08:20] <moritz_> bacek_: which one? #56330 ?

[08:20] <bacek_> Method 'lvalue' not found for invocant of class 'PAST::Stmts'

[08:20] <moritz_> ah, this one

[08:21] <bacek_> rakudo: my $a=24;my $b=2; ($b,$a) = $(a,$b)

[08:21] <p6eval> rakudo r28692 OUTPUT[Method 'lvalue' not found for invocant of class 'PAST::Stmts'␤current instr.: 'parrot;PAST::Compiler;as_post' pc 2787 (src/PAST/Compiler.pir:718)␤

[08:22] <moritz_> it never gets around to actually evaluating the RHS

[08:23] <moritz_> if it would, It would complain about sub a() not being found

[08:23] <bacek_> rakudo: my $a=24;my $b=2; ($b,$a) = ($a,$b)

[08:23] <p6eval> rakudo r28692 OUTPUT[Method 'lvalue' not found for invocant of class 'PAST::Stmts'␤current instr.: 'parrot;PAST::Compiler;as_post' pc 2787 (src/PAST/Compiler.pir:718)␤

[08:24] <bacek_> rakudo: my $a;my $b;  my @l=(1..2); ($b,$a) = @l;

[08:24] <p6eval> rakudo r28692 OUTPUT[Method 'lvalue' not found for invocant of class 'PAST::Stmts'␤current instr.: 'parrot;PAST::Compiler;as_post' pc 2787 (src/PAST/Compiler.pir:718)␤

[08:24] <bacek_> LHS :)

[08:26] *** jfredett left
[08:26] *** jfredett joined
[08:26] *** pmurias joined
[08:27] <pmurias> pixie: say "hello world"

[08:27] <p6eval> OUTPUT[Can't locate STD5.pm in @INC (@INC contains: ../../src/perl6 /etc/perl /usr/local/lib/perl/5.8.8 /usr/local/share/perl/5.8.8 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.8 /usr/share/perl/5.8 /usr/local/lib/site_perl .) at pixie line 4.␤BEGIN failed--compilation aborted at pix...

[08:29] <moritz_> pmurias: chroot not yet updated, it'll take some time :(

[08:30] *** jfredett left
[08:30] *** jfredett joined
[08:31] *** jfredett left
[08:31] *** p6eval left
[08:31] *** GeJ left
[08:31] *** kolibrie left
[08:31] *** qmole_ left
[08:31] *** fullermd left
[08:31] *** Southen left
[08:31] *** pmichaud left
[08:31] *** agentzh left
[08:31] *** Khisanth left
[08:31] *** simcop2387 left
[08:31] *** cookys left
[08:31] *** ingy left
[08:31] *** iblechbot left
[08:31] *** mj41 left
[08:31] *** charsbar left
[08:32] *** ingy joined
[08:32] *** mj41_ joined
[08:32] *** p6eval joined
[08:32] *** iblechbot joined
[08:32] *** Khisanth joined
[08:32] *** GeJ joined
[08:32] *** simcop2387 joined
[08:32] *** cookys joined
[08:32] *** Southen joined
[08:32] *** agentzh joined
[08:32] *** mj41 joined
[08:32] *** kolibrie joined
[08:32] *** fullermd joined
[08:32] *** qmole_ joined
[08:32] *** pmichaud joined
[08:32] *** charsbar joined
[08:32] *** irc.freenode.net sets mode: +o ingy

[08:36] *** elmex joined
[08:36] *** Southen_ joined
[08:39] *** Southen left
[08:40] *** jfredett joined
[08:43] *** a-jing joined
[08:43] *** a-jing left
[08:46] *** audreyt_ is now known as audrey

[08:46] *** audrey is now known as audreyt

[08:49] *** mj41 left
[08:57] *** bacek_ left
[09:04] *** kanru joined
[09:06] *** sri_work_ joined
[09:10] <moritz_> anybody had any success building pugs on debian etch?

[09:10] <moritz_> s/etc/lenny/

[09:14] *** sri_work left
[09:27] *** masak joined
[09:30] *** pmurias left
[09:35] *** jfredett is now known as joebot

[09:36] *** joebot is now known as \bot

[09:36] *** \bot left
[09:36] *** jfredett joined
[09:37] *** jfredett is now known as \bot

[09:37] *** xinming_ joined
[09:39] * moritz_ notices with pleasure that ghc6's memory usage seems a bit lower than before

[09:39] *** xinming left
[09:40] *** \bot left
[09:40] *** jfredett joined
[09:45] *** Coleoid_ joined
[09:45] *** Coleoid_ is now known as Coleoid

[09:46] *** meppl left
[09:55] <moritz_> where does 'cabal install Pugs' place the pugs binary?

[10:01] *** chris2 joined
[10:10] <masak> and where does it place the source tree?

[10:11] <moritz_> seems to be all in ~/.cabal/$somewhere

[10:17] <masak> hm, yes

[10:17] <masak> but I don't find pugs there

[10:17] <masak> what's pugs-DrIFT?

[10:17] <moritz_> ~/.cabal/bin/pugs for me

[10:18] <masak> yes, but that's just the binary

[10:18] <masak> what if I want to change something and rebuild?

[10:19] <moritz_> dunno

[10:19] <masak> being able to do that would be a boon

[10:19] <moritz_> diakopter: would you be fine with removing the ||| hack from evalbot and instead use two separate targets?

[10:24] *** Alias_ joined
[10:29] *** Alias_ left
[10:32] *** LCamel joined
[10:34] <pugs_svnbot> r21017 | moritz++ | [evalbot] assemble all needed data for different executers in a large hash.

[10:34] <pugs_svnbot> r21017 | moritz++ | Planned steps:

[10:34] <pugs_svnbot> r21017 | moritz++ |  0) move to appropriate package

[10:34] <pugs_svnbot> r21017 | moritz++ |  1) use this data in a single executer sub

[10:34] <pugs_svnbot> r21017 | moritz++ |  2) use it also to assemble output for 'perl6:' evaluation

[10:34] <pugs_svnbot> r21017 | moritz++ |  3) get rid of the exec_$stuff subs

[10:34] <pugs_svnbot> r21017 | moritz++ |  4) clean up sub said()

[10:38] <moritz_> what svn revision does 6.2.13.1 correspond to?

[10:41] <audreyt> it's all HEAD as there has been no src/ checkins

[10:42] <audreyt> once I've got the new Cabal procedure sorted out (still working with the Cabal team) I'll check it in.

[10:42] <audreyt> but no promises as of when :)

[10:46] <moritz_> audreyt: sounds great. When you do, could you please notify me? Then I'll update pugs on evalbot's server

[10:46] <audreyt> ok.

[10:47] <audreyt> can you point the binary to it for now?

[10:48] <moritz_> what do you mean?

[10:49] <audreyt> i.e. use the ~/.cabal/bin/pugs for evalbot's pugs:

[10:50] <moritz_> (I'm currenlty working on a copy of the chroot in which evalbot runs, and I'm updating that to Debian Lenny + cabal-installed pugs. In this new chroot (not yet in "production) I'll use the ~/.cabal/bin/pugs)

[10:50] <audreyt> thanks!

[10:50] <moritz_> I don't plan to do touch the pugs in the current chroot because it's too painful, and it'll shortly be substituted anyway

[10:51] <audreyt> k

[10:51] <audreyt> bbiab...

[10:54] *** Alias_ joined
[10:55] *** revdiablo left
[10:55] *** revdiablo joined
[11:01] *** ruoso left
[11:04] *** ruoso joined
[11:16] *** sri_work_ left
[11:31] *** cosimo joined
[11:54] *** a-jing joined
[11:54] *** a-jing left
[11:59] <pugs_svnbot> r21018 | moritz++ | [evalbot] continued refactoring. Be impressed if this works.

[11:59] *** p6eval left
[11:59] *** p6eval joined
[11:59] <moritz_> rakudo: say "hi"

[11:59] *** p6eval left
[12:00] *** chris2 left
[12:00] *** p6eval joined
[12:01] <moritz_> rakudo: say "hi"

[12:01] *** p6eval left
[12:01] *** p6eval joined
[12:01] *** p6eval left
[12:01] <pugs_svnbot> r21019 | moritz++ | [evalbot] fixed first stupid thinko - more to follow

[12:02] *** p6eval joined
[12:02] <moritz_> rakudo: say "hi"

[12:02] <p6eval> rakudo 28692: No output (you need to produce output to STDOUT)

[12:02] *** p6eval left
[12:04] <pugs_svnbot> r21020 | moritz++ | [evalbot] also commit changes to the module ... :/

[12:05] *** p6eval joined
[12:05] <moritz_> rakudo: say "hi"

[12:05] <p6eval> rakudo 28692: No output (you need to produce output to STDOUT)

[12:06] *** p6eval left
[12:06] <pugs_svnbot> r21021 | moritz++ | [evalbot] confused variables

[12:06] *** p6eval joined
[12:06] <moritz_> sometimes I wish I had a test suite

[12:06] <moritz_> rakudo: say "hi"

[12:06] <p6eval> rakudo 28692: OUTPUT[hi␤]

[12:06] <moritz_> pugs: say "hi"

[12:06] <p6eval> pugs: OUTPUT[sh: /home/evalenv/.cabal/bin/pugs: No such file or directory␤]

[12:07] <moritz_> kp6: say("hi")

[12:07] *** p6eval left
[12:07] *** p6eval joined
[12:07] <bacek> Generating precompiled Prelude, Math::Basic... pugs: Internal error:

[12:07] <bacek>     Invalid grammatical category: "Bool"

[12:08] <bacek> Debian/lenny...

[12:08] <moritz_> bacek: try the 'cabal update; cabal install Pugs -fOptimize' approach described in INSTALL

[12:08] <moritz_> elf: say "hi"

[12:09] <bacek> moritz_, thanks

[12:09] *** p6eval left
[12:09] *** cmarcelo joined
[12:09] *** p6eval joined
[12:09] <bacek> cabal: command not found

[12:09] <moritz_> bacek: "described in INSTALL" ;)

[12:09] <moritz_> nqp: say("hi")

[12:09] <p6eval> nqp: OUTPUT[hi␤]

[12:10] <bacek> yeah... But what about compiling from sources? :)

[12:11] <pugs_svnbot> r21022 | moritz++ | [evalbot] more confusion

[12:11] <moritz_> bacek: cabal does compile from source

[12:11] *** p6eval left
[12:11] *** p6eval joined
[12:12] <moritz_> rakudo: say "hi"

[12:12] <p6eval> rakudo 28692: OUTPUT[hi␤]

[12:12] <moritz_> rakudo: "hi"

[12:12] <p6eval> rakudo 28692: RESULT["hi"]

[12:12] <moritz_> rakudo: 1/0

[12:12] <p6eval> rakudo 28692: OUTPUT[Divide by zero␤current instr.: 'infix:/' pc 11355 (src/gen_builtins.pir:7547)␤]

[12:12] <moritz_> ok, filtering works

[12:12] <moritz_> nqp: say(1/0)

[12:12] <p6eval> nqp: OUTPUT[float division by zero␤current instr.: '_block11' pc 6 (EVAL_4:6)␤]

[12:12] *** Jedai left
[12:12] <moritz_> same here

[12:12] <moritz_> elf: say "hi"

[12:12] *** p6eval left
[12:13] *** p6eval joined
[12:16] *** p6eval left
[12:16] <pugs_svnbot> r21023 | moritz++ | [evalbot] it helps to use correct sub names

[12:16] <moritz_> elf: say "hi"

[12:16] *** p6eval joined
[12:16] <moritz_> elf: say "hi"

[12:16] <p6eval> elf 21023: OUTPUT[hi␤]

[12:17] *** p6eval left
[12:20] *** p6eval joined
[12:21] <moritz_> pugs: say "Hi"

[12:21] <p6eval> OUTPUT[./pugs: error while loading shared libraries: libperl.so.5.8: cannot open shared object file: No such file or directory␤]

[12:21] *** p6eval left
[12:22] *** p6eval joined
[12:22] <moritz_> rakudo: say "hi from new chroot"

[12:23] <p6eval> rakudo 28687: OUTPUT[hi from new chroot␤]

[12:23] <moritz_> elf: say "hi"

[12:23] <p6eval> elf 21023: OUTPUT[Can't locate autobox.pm in @INC (@INC contains: /etc/perl /usr/local/lib/perl/5.10.0 /usr/local/share/perl/5.10.0 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.10 /usr/share/perl/5.10 /usr/local/lib/site_perl .) at ./elf_f line 7.␤BEGIN failed--compilation aborted at ./elf_f

[12:23] <p6eval> ..li...

[12:24] <moritz_> elf: say "hi"

[12:24] <p6eval> elf 21023: OUTPUT[Can't locate Class/Multimethods.pm in @INC (@INC contains: /etc/perl /usr/local/lib/perl/5.10.0 /usr/local/share/perl/5.10.0 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.10 /usr/share/perl/5.10 /usr/local/lib/site_perl .) at ./elf_f line 10.␤BEGIN failed--compilation aborted

[12:24] <p6eval> ..a...

[12:25] <moritz_> elf: say "hi"

[12:25] <p6eval> elf 21023: OUTPUT[/usr/bin/env: ruby: No such file or directory␤Parse failed.␤ at ./elf_f line 3824␤]

[12:25] <moritz_> elf: say "hi"

[12:25] <p6eval> elf 21023: OUTPUT[/home/evalenv/pugs/misc/STD_red/prelude.rb:462:in `require': no such file to load -- readline (LoadError)␤     from /home/evalenv/pugs/misc/STD_red/prelude.rb:462:in `<top (required)>'␤       from /home/evalenv/pugs/misc/STD_red/std.rb:10:in `require'␤      from

[12:25] <p6eval> ../home/evalenv/pugs/misc/STD_red/...

[12:26] <diakopter> moritz_: no, not really, b/c I need to be able to add grammars very easily

[12:26] *** FurnaceBoy joined
[12:26] <moritz_> diakopter: ok, I'll see what I can do

[12:26] <diakopter> there can't be a special case for yap6 in the command line builder?

[12:26] <moritz_> elf: say "hi"

[12:26] <p6eval> elf 21023: OUTPUT[hi␤]

[12:27] <moritz_> yap6: say "hi"

[12:27] *** p6eval left
[12:27] <diakopter> hee

[12:27] *** p6eval joined
[12:27] <diakopter> I still don't know why things like that crash evalbot

[12:27] <moritz_> Not a HASH reference at evalbot.pl line 103.

[12:27] <moritz_> that was my fault

[12:27] <diakopter> oh

[12:28] <moritz_> diakopter: I don't know why evalbot crashes sometimes. Only this case is clear to me ;

[12:28] <pugs_svnbot> r21024 | moritz++ | [evalbot] hopefully yap6 works again

[12:29] *** p6eval left
[12:29] * diakopter waits 3 minutes

[12:29] *** p6eval joined
[12:29] <moritz_> yap6: say "hi"

[12:29] *** p6eval left
[12:29] *** p6eval joined
[12:29] <diakopter> well, it still hasn't learned "

[12:30] *** p6eval left
[12:30] <moritz_> I should actually svn up in the right chroot

[12:30] *** p6eval joined
[12:30] <moritz_> yap6: say 1

[12:30] *** p6eval left
[12:30] *** p6eval joined
[12:32] *** p6eval left
[12:32] <pugs_svnbot> r21025 | moritz++ | [evalbot] import Scalar::Util into the right namspace

[12:32] *** p6eval joined
[12:32] <moritz_> yap6: say 1

[12:33] <p6eval> yap6: OUTPUT[tree: {program => [{func_call => ["say"," ",{expr => {bareInt => 1}}]}]}␤]

[12:33] <moritz_> YaY

[12:33] <diakopter> \o/

[12:33] <diakopter> moritz_: note the actual match tree

[12:33] <moritz_> diakopter: I did notice it. Cool.

[12:34] <moritz_> yap6: say 1 ||| 1

[12:34] <p6eval> yap6: OUTPUT[Can't locate Perl6in5/Grammar/say.pm in @INC (@INC contains: ../lib lib /etc/perl /usr/local/lib/perl/5.10.0 /usr/local/share/perl/5.10.0 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.10 /usr/share/perl/5.10 /usr/local/lib/site_perl .) at (eval 1) line 1.␤BEGIN failed--compilat...

[12:34] <moritz_> what should I do to enable that?

[12:34] <moritz_> pixie: say "hi"

[12:34] <diakopter> oh; yippee; Perl 5.10

[12:34] <p6eval> pixie: OUTPUT[Can't locate STD5.pm in @INC (@INC contains: ../../src/perl6 /etc/perl /usr/local/lib/perl/5.10.0 /usr/local/share/perl/5.10.0 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.10 /usr/share/perl/5.10 /usr/local/lib/site_perl .) at pixie line 4.␤BEGIN failed--compilation aborted at...

[12:34] <diakopter> yap6: ltm||| food

[12:34] <p6eval> yap6: OUTPUT[syntax error at line 1 col 1 near " food"␤Expected: "unknown".␤[]]

[12:35] <diakopter> yap6: ltm|||food

[12:35] <p6eval> yap6: OUTPUT[Odd number of elements in anonymous hash at lib/Perl6in5/Compiler/Parser.pm line 98.␤tree: {program => undef}␤]

[12:35] <diakopter> heh

[12:35] <diakopter> that grammar is broken

[12:35] <diakopter> Grammar/ltm.pm

[12:36] <diakopter> yap6: ltm |||food

[12:36] <p6eval> yap6: OUTPUT[Odd number of elements in anonymous hash at lib/Perl6in5/Compiler/Parser.pm line 98.␤tree: {program => undef}␤]

[12:36] <diakopter> yap6: ltm |||foodie

[12:36] <p6eval> yap6: OUTPUT[Odd number of elements in anonymous hash at lib/Perl6in5/Compiler/Parser.pm line 98.␤tree: {program => undef}␤]

[12:36] <diakopter> yap6: ltm |||foodies

[12:36] <p6eval> yap6: OUTPUT[Odd number of elements in anonymous hash at lib/Perl6in5/Compiler/Parser.pm line 98.␤tree: {program => undef}␤]

[12:36] *** pbuetow joined
[12:36] * moritz_ installs YAML::XS for gimme5

[12:37] <moritz_> pixie: say "hi"

[12:37] <p6eval> pixie: OUTPUT[Can't create pixie.log: Permission denied at ../../src/perl6/Cursor5.pm line 59.␤BEGIN failed--compilation aborted at ../../src/perl6/Cursor5.pm line 62.␤Compilation failed in require at ../../src/perl6/STD5.pm line 28.␤BEGIN failed--compilation aborted at ../../src/perl6/STD5.pm...

[12:37] <diakopter> yay; with 5.10 I can use lots of neat new re features

[12:37] <diakopter> how convenient

[12:37] <diakopter> ;)

[12:38] <moritz_> pugs: say "hi"

[12:38] <p6eval> pugs: OUTPUT[hi␤]

[12:38] <diakopter> wow; fast

[12:38] <moritz_> ok, evalbot status summary: everything but pixie: and perl6: works again

[12:38] <diakopter> audreyt++

[12:38] <diakopter> moritz_++

[12:38] <moritz_> pugs will be updated via 'cabal install' as soon as audreyt++ pushes the new version

[12:39] * moritz_ will ask pmurias if can add a --nolog option, I don't want to allow write access for evalbot

[12:39] <moritz_> perl6: should be a smop

[12:41] *** FurnaceBoy left
[12:42] <diakopter> moritz_: oh, I thought you meant implementing Perl 6 for a minute there.

[12:42] <moritz_> lol

[12:43] <moritz_> well, if you believe ruoso++ it is a smop ;)

[12:43] <pugs_svnbot> r21026 | moritz++ | [evalbot] re-added perl6: target

[12:43] <moritz_> evalbot control restart

[12:43] *** p6eval left
[12:43] *** p6eval joined
[12:44] <moritz_> perl6: say "hi again"

[12:44] <p6eval> elf: RESULT[{}␤]

[12:45] <diakopter> yap6: today I work on your opep (operator precedence expression parser)

[12:45] *** p6eval left
[12:45] <pugs_svnbot> r21027 | moritz++ | [evalbot] fixed previous commit

[12:46] *** p6eval joined
[12:46] <moritz_> diakopter: sorry, just killed p6eval the second you said that ;)

[12:46] <moritz_> perl6: say "hi"

[12:46] <p6eval> elf 21027: RESULT[{}␤]kp6 21027: RESULT[DISPATCH: calling  on invalid object:$VAR1 = 'perl';␤␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 128␤        main::DISPATCH('perl') called at - line 11␤]pugs: RESULT[undef]rakudo 28687: RESULT[Null PMC access in find_method()␤current

[12:46] <p6eval> ..instr.: '_block11' pc 38 (EVAL_13:18)␤]

[12:47] <diakopter> wow

[12:47] <moritz_> or in other words, I screwed up

[12:48] *** cmarcelo left
[12:49] *** p6eval left
[12:49] *** p6eval joined
[12:49] <moritz_> elf: say 1

[12:49] <p6eval> elf 21027: OUTPUT[1␤]

[12:49] <moritz_> perl6: say 1

[12:49] <p6eval> elf 21027: RESULT[{}␤]

[12:49] <p6eval> ..kp6 21027: RESULT[DISPATCH: calling  on invalid object:$VAR1 = 'perl';␤␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 128␤    main::DISPATCH('perl') called at - line 11␤]

[12:49] <p6eval> ..pugs: RESULT[undef]

[12:49] <p6eval> ..rakudo 28687: RESULT[Null PMC access in find_method()␤current instr.: '_block11' pc 38 (EVAL_13:18)␤]

[12:51] *** cmarcelo joined
[12:51] <moritz_> it seems to pass an empty (?) string to each implementation

[12:52] *** p6eval left
[12:52] <pugs_svnbot> r21028 | moritz++ | [evalbot] more debugging aids

[12:52] *** Lunchy joined
[12:52] <moritz_> perl6: say 1;

[12:52] *** p6eval joined
[12:52] <moritz_> perl6: say 1;

[12:53] <p6eval> elf 21028: RESULT[{}␤]

[12:53] <p6eval> ..kp6 21028: RESULT[DISPATCH: calling  on invalid object:$VAR1 = 'perl';␤␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 128␤    main::DISPATCH('perl') called at - line 11␤]

[12:53] <p6eval> ..pugs: RESULT[undef]

[12:53] <p6eval> ..rakudo 28687: RESULT[Null PMC access in find_method()␤current instr.: '_block11' pc 38 (EVAL_13:18)␤]

[12:53] *** p6eval left
[12:54] <pugs_svnbot> r21029 | moritz++ | [evalbot] hopefully passing the right program now

[12:54] *** p6eval joined
[12:54] <moritz_> perl6: say 1;

[12:54] <p6eval> elf 21029: OUTPUT[1␤]

[12:54] <p6eval> ..kp6 21029: OUTPUT[1␤]

[12:54] <p6eval> ..pugs: OUTPUT[1␤]

[12:54] <p6eval> ..rakudo 28687: OUTPUT[1␤]

[12:54] <moritz_> YaY

[12:57] *** p6eval left
[12:57] *** p6eval joined
[12:57] <pugs_svnbot> r21030 | moritz++ | [evalbot]: cosmetic changes

[12:57] <moritz_> ok, enough evilbot changes today, gotta do something productive

[12:59] <drbean>  /lastlog altgr

[13:09] *** alester joined
[13:10] *** alester left
[13:22] *** DietCoke left
[13:28] <diakopter> now this is just weird

[13:31] *** pmurias joined
[13:33] <diakopter> or perhaps I'll put off the opep and instead create the handler model

[13:34] * diakopter goes back to reading Engineering a Compiler

[13:34] <pmurias> moritz_: i could change the Cursor5 not to insist on a log

[13:34] <pmurias> diakopter: hi

[13:34] <diakopter> pmurias: yo

[13:34] <moritz_> pmurias: that would be nice

[13:34] <diakopter> pmurias: yap6 makes match trees now

[13:34] <pmurias> good

[13:36] <diakopter> now if only strawberry 5.10 gave the same results as 5.10 on my mac and the 5.10 used by p6eval.

[13:36] <diakopter> oddness

[13:36] <diakopter> svn status on the strawberry one shows nothing modified

[13:36] <diakopter> oddities ** of

[13:38] <diakopter> so I read the language spec for reia (reia-lang.org) - it seems to have a very similar smart match as well as capture-ish constructs.

[13:40] *** zeno__ joined
[13:40] <zeno__>  > reverse . show $ foldl1 (*)

[13:41] <pmurias> diakopter: re 5.10 , debian is easy to use so it wouldn't be hard to for you to get the exactlly the same perl

[13:41] <pmurias> ;)

[13:41] <diakopter> but is debian easy to use on a windows machine that doesn't allow vmware

[13:42] <zeno__> odd ubuntu doesnt have a pugs package

[13:42] <diakopter> <sigh> I guess I'll build 5.10 on my linux vps.

[13:42] <diakopter> oh yeah, I forgot; I can use winscp to make editing easy.

[13:44] *** rdice joined
[13:48] <pmurias> diakopter: the match trees aren't really matches

[13:48] *** jhorwitz joined
[13:49] <pmurias> s/matches/Matches

[13:50] *** TJCRI joined
[13:51] <pmurias> moritz_: you could symlink pixie.log to /dev/null

[13:52] <moritz_> pixie: say "hi"

[13:52] <p6eval> pixie: OUTPUT[Can't locate re/engine/TRE.pm in @INC (@INC contains: ../../src/perl6 /etc/perl /usr/local/lib/perl/5.10.0 /usr/local/share/perl/5.10.0 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.10 /usr/share/perl/5.10 /usr/local/lib/site_perl .) at ../../src/perl6/Cursor5.pm line 428.␤BEGI...

[13:52] <moritz_> pmurias: ah, different error now (ln -s was a good idea)

[13:53] <diakopter> pmurias: :P what else do they need to be matches?

[13:53] <pmurias> .from .to

[13:53] <moritz_> I think they are not the standard perl6 match objects

[13:53] *** zeno__ left
[13:53] *** BinGOs left
[13:53] <moritz_> but they're nice and compact for IRC output ;)

[13:53] <diakopter> ok; .from and .to are easy... what else

[13:54] *** zeno__ joined
[13:54] <moritz_> pixie: say 1

[13:54] <p6eval> pixie: OUTPUT[Subroutine from redefined at ElfCore5.pm line 741.␤Subroutine to redefined at ElfCore5.pm line 742.␤mkdir lex: Permission denied at ../../src/perl6/Cursor5.pm line 246␤]

[13:54] *** BinGOs joined
[13:54] <moritz_> oh dammit

[13:54] <pmurias> moritz_: getting rid of lex would be hard

[13:54] <moritz_> I suppose, yes

[13:54] <pmurias> diakopter: you have read the Match object section of S05?

[13:55] *** ispy_ joined
[13:55] <moritz_> pmurias: is a writable lex/ subdir somewher enough?

[13:55] <diakopter> yes, at some point.  I can hardly claim to remember it.

[13:55] <moritz_> and if yes, where

[13:55] <pmurias> moritz_: yes

[13:55] <moritz_> in src/perl6/ ?

[13:55] <pmurias> moritz_: in misc/pixie

[13:56] <diakopter> pmurias: the Match objects at http://www.perlcabal.org/syn/S05.html#Match_objects won't be useful for yap6 for a long time..

[13:56] <moritz_> pixie: say 1

[13:57] <p6eval> pixie: OUTPUT[Subroutine from redefined at ElfCore5.pm line 741.␤Subroutine to redefined at ElfCore5.pm line 742.␤cp: cannot stat `lex/Perl/expect_term': No such file or directory␤]

[13:57] <moritz_> sh: line 1: 32051 File size limit exceeded/usr/bin/perl pixie --quiet /tmp/0ATKHStvSX >> /tmp/kXvEdKlcHt 2>&1

[13:57] <moritz_> how much space does it need?

[13:58] <pmurias> ~2.0M

[13:58] <diakopter> .from .to .chars .orig .text (their equivalents actually) are all available *while* yap6 is running, so they're there.  but the default output doesn't include that info

[13:59] <diakopter> but my main point is that since yap6 is not written in Perl 6, it doesn't need to use Match object semantics internally.

[13:59] <diakopter> and especially since it doesn't use STD.pm to generate its parsers...

[13:59] <diakopter> the match objects wouldn't be useful to any other implementation.

[14:01] *** p6eval left
[14:01] <pugs_svnbot> r21031 | moritz++ | [evalbot] bump up size limit for temp files to 5MB

[14:01] *** p6eval joined
[14:02] <pugs_svnbot> r21032 | moritz++ | forgot semicolon

[14:02] <diakopter> pmurias: also, if yap6 continues to progress, it will follow the steps documented in ROADMAP

[14:02] <moritz_> pixie: say 1

[14:02] <p6eval> pixie: OUTPUT[Subroutine from redefined at ElfCore5.pm line 741.␤Subroutine to redefined at ElfCore5.pm line 742.␤cp: cannot stat `lex/Perl/expect_term': No such file or directory␤1␤]

[14:03] <moritz_> pmurias: do I have to clean up old lex/ dir?

[14:04] <moritz_> pixie: say 1

[14:04] <p6eval> pixie: OUTPUT[Subroutine from redefined at ElfCore5.pm line 741.␤Subroutine to redefined at ElfCore5.pm line 742.␤cp: cannot stat `lex/Perl/expect_term': No such file or directory␤1␤]

[14:06] <pmurias> food&

[14:07] *** pmurias left
[14:07] *** zeno__ left
[14:07] <pugs_svnbot> r21033 | diakopter++ | [yap6] document unreadines of Makefile.PL

[14:10] <pugs_svnbot> r21034 | diakopter++ | [yap6]

[14:10] <pugs_svnbot> r21034 | diakopter++ | updated README

[14:11] *** ggoebel joined
[14:14] *** iblechbot left
[14:20] *** Jedai joined
[14:29] <diakopter> yap6: package Foo; say 3;

[14:29] <p6eval> yap6: OUTPUT[Syntax error in /tmp/VpRDwBWUCu at line 1 col 8 : Input file is Perl 5, not Perl 6!␤]

[14:39] *** edpratomo joined
[14:44] *** drbean left
[15:01] *** zostay left
[15:02] *** zostay joined
[15:05] <moritz_> how should isa_ok been called? isa_ok($obj, Type) or isa_ok($obj, 'Type')?

[15:06] *** Grrrr left
[15:08] <rakudo_svn> r28694 | moritz++ | [rakudo] Test.pm: added three-arg form of isa_ok()

[15:09] <diakopter> anyone seen this?  http://www.chrisseaton.com/katahdin/

[15:11] *** ludan joined
[15:14] <pugs_svnbot> r21035 | moritz++ | [spec] fixed nested_pairs.t - ready for spectest_regression

[15:17] <diakopter> aha.  stealing the precedence generator from Katahdin...

[15:18] <moritz_> diakopter: yes, I saw it. And he's doing it (the parsing) wrong

[15:18] <pugs_svnbot> r21036 | moritz++ | [spec] fudged array_extending.t

[15:18] <diakopter> moritz_: wrong how?

[15:18] <moritz_> diakopter: he's basically doing precedence parsing with backtracking

[15:19] <diakopter> and that's wrong?

[15:19] <moritz_> I read one of his papers from front to back, and he has ridicoulusly high startup times (20s or a minute or so)

[15:19] <moritz_> diakopter: that's very inefficient

[15:20] <moritz_> diakopter: that's O(2^n) in the worst case, where you can have polynomial time

[15:20] <moritz_> open that paper, search for his discussion on speed

[15:20] <diakopter> his thesis is pretty short

[15:20] <moritz_> man, he even JIT'ed the parser to make it faster

[15:20] *** masak left
[15:22] *** jfredett_ joined
[15:23] *** jfredett left
[15:23] <diakopter> oh; his alternation does longest-match

[15:23] *** jfredett_ is now known as jfredett

[15:29] *** Limbic_Region joined
[15:31] *** alanhaggai joined
[15:31] <diakopter> moritz_: this is interesting; yap6 does an analogous JIT... parser objects/rules/patterns aren't built until they are used the first time

[15:32] <moritz_> diakopter: lazynes != JIT

[15:32] <diakopter> I didn't say ==; I said analogous.

[15:34] <moritz_> the big difference is that JIT speeds up every execution, whereas lazyness only speeds up one

[15:34] *** vixey left
[15:34] *** vixey joined
[15:34] <Limbic_Region> lazy not necessarily equal to late binding either - but we sometimes use them as synonyms

[15:36] <diakopter> moritz_: I guess I'm not seeing how yap6's parser generators aren't analogous to JIT, since they are both lazy and memoized.

[15:36] <moritz_> diakopter: you're probably right, it's a very high-level JITting

[15:37] <moritz_> I always associated JIT with bytecode -> machine code

[15:37] <Limbic_Region> because at the low level, JITing is saying - don't execute this byte code - execute this machine code

[15:37] <moritz_> perhaps that's why I failed to see the connection

[15:38] <diakopter> I suppose it could go a step further and generate each parser as a .pmc which is eval-loaded upon first-demand

[15:39] <diakopter> moritz_: I don't understand why you call Seaton's approach to parsing "wrong"...?  

[15:39] <moritz_> diakopter: not really wrong, just very inefficient 

[15:41] <moritz_> the last compiler I know of that had different startup times mostly died because of it

[15:41] <diakopter> which was that

[15:41] <moritz_> kp6

[15:41] <moritz_> the bootstrapped version

[15:41] <diakopter> oh; you meant the last Perl 6 compiler

[15:42] <moritz_> I don't know any other compiler with similar startup times ;)

[15:42] <moritz_> even EiffelStudio seemed faster to me

[15:42] <diakopter> I would include gimme5's run duration in STD5's startup time...

[15:43] <diakopter> (since it's STD.pm that you care about, on input)

[15:44] *** alanhaggai left
[15:47] <diakopter> moritz_: I don't understand why you say Seaton's approach is worst-case O(2^n), since all the papers on packrat parsing say that it guarantees linear?

[15:49] <moritz_> diakopter: I just remeber that he wrote in one of his papers that his parser backtracks to get precedence and associativity right (which sounds very time consuming), and that he had huge speed problems. Maybe I made the wrong connection, but to me that seemed to be the obvious explanation

[15:49] <diakopter> his paper says that it has large startup times

[15:50] <diakopter> which means that it is slow...

[15:50] <diakopter> but doesn't say anything about how it slows with bigger input

[15:51] <moritz_> well, n is the number of tokens in an expression, not input size

[15:51] <moritz_> big input doesn't necessarily mean longer expressions

[15:51] <diakopter> of course, but in general, it does.

[15:52] <diakopter> it does mean more tokens, I mean.

[15:52] <diakopter> wait, what is your point?  by "bigger input", of course I meant more tokens....

[15:52] <pugs_svnbot> r21037 | moritz++ | [spec] more fudging in S02-builtin_data_types/ - some if it successful

[15:52] <moritz_> diakopter: per expression?

[15:53] <moritz_> diakopter: I'm pretty sure that it won't do a precedence parse of a whole file without sequence points where it stops

[15:53] <diakopter> oh

[15:53] <diakopter> now I fully read your definition of n

[15:54] <diakopter> I haven't seen that definition...

[15:55] <moritz_> computer scientists don't think in such terms I guess, but it seems to make sense to me

[15:56] <diakopter> I agree; that's an interesting measure

[15:57] <awwaiid> diakopter, yap6 that you're doing is in the pugs svn? what directory? I see pugs/v6/yap6/ but that claims to be SMOP now

[15:57] <diakopter> awwaiid: it's in pugs/misc/yap6

[15:57] <awwaiid> thanks

[15:58] <diakopter> moritz_: after thinking about it a bit, I think the tokens-per-expression omega should correspond to the graphemes-per-input..

[15:58] <diakopter> (because you can have an input with 1 expression)

[15:59] <moritz_> diakopter: you can, but it's not the typical use case

[16:00] <diakopter> but my point is that that language can have arbitrarily large expressions, and there's nothing in the theory about packrat parsing that indicates that expressions have different parse omegas than series of expressions...?

[16:00] <moritz_> that would be a wort case. I'm not sure he tried to construct an input string for which his parser took maximal time, to demonstrate that his already-slow software could be even slower ;)

[16:00] <TimToady> when you talk about "startup time" up above, I don't know whether you're talking about typical user-process startup time, or the time necessary to get the bot to say something

[16:00] <TimToady> gimme5 is fair to count in the latter, but not the former

[16:01] <TimToady> it's just part of the "compilation" of STD to STD5

[16:01] <TimToady> which reminds me, I should make a real Makefile for STD5 soonish

[16:01] <moritz_> diakopter: you're 100% right, I just wanted to tell you that a t(n) (t: time, n: characters) curve isn't sufficient to measure if that parser is O(2^n) or not

[16:02] <moritz_> unless you first try to find an input string that takes maximal time

[16:03] <diakopter> moritz_: (which would be different per-language, so perhaps some languages have a lot less-concave curve)

[16:03] <diakopter> (or more-concave)

[16:04] <moritz_> aye

[16:04] <moritz_> I think it's hard to write large expressions in postscript

[16:04] <rakudo_svn> r28695 | moritz++ | [rakudo] three more test files for spectest_regression

[16:06] *** Limbic_Region left
[16:11] *** Grrrr joined
[16:20] *** iblechbot joined
[16:26] <pugs_svnbot> r21038 | diakopter++ | [yap6] * more inlined 'manual' memoization because apparently I can't figure out how to use Memoize.pm, or it doesn't work in these nested closures.

[16:28] <diakopter> moritz_: upon further reflection, I don't think it (yap6 and the STD_hand grammar) is using sequence points.  This is due to the nature of the Kleene star, which is inherently right recursive.  at one point I did some thinking about how to rewrite star() so it inlined the recursion, but didn't finish.

[16:29] <moritz_> diakopter: so you never know if an expression is parsed correctly until you reach end of input?

[16:29] <moritz_> that would be very bad for handling BEGIN blocks and such

[16:30] <diakopter> no; there still is the notion of ->{fated} in a "Match", but I haven't determined how to annotate patterns in the grammar as such

[16:31] <diakopter> stealing the 'fate' term from STD5 of course

[16:31] <diakopter> or Cursor5

[16:33] <diakopter> b/c how such a sequence point would be implemented in the packrat parsing paradigm is to make an alternating parser detect when a successful result was 'fated', so just return it, instead of continuing with other options.  Obviously such an annotation enabled important/necessary optimization (lack of total wasted effort) opportunities.

[16:34] <TreyHarris> is this right: / ( (\d) { $0 < 256 or fail } ** '.' ) ** 4 / matches an IP address?  is that how you'd combine separator and quantifier **?

[16:34] <moritz_> TreyHarris: no, it's wrong

[16:34] <TreyHarris> moritz_: and correct would be?

[16:35] <moritz_> TreyHarris: the inner regex means (0 up to 255) separated by '.'

[16:35] <TreyHarris> (i see how to do it in two rules, i mean in a single one)

[16:35] <moritz_> and then you do that four times

[16:35] <TreyHarris> oops... i meant (\d+)

[16:36] <moritz_> (\d+) { $0 < 256 or fail } [ \. (\d+) { $0 < 256 or fail ] ** 3

[16:36] <TreyHarris> and i don't want to capture, so...

[16:36] <TreyHarris> but that's P5-ish... are you saying you can't use separator-** for this purpose?

[16:36] <moritz_> of course that's a bit ugly, bbecause the (\d+) { $0 < 256 or fail  part is repeated

[16:37] <moritz_> TreyHarris: you can use it either for delimited or for counted repetition

[16:37] <TreyHarris> moritz_: but not boh.

[16:37] <moritz_> TreyHarris: I don't see how you can use it for both at the same time 

[16:37] <TreyHarris> both

[16:37] <moritz_> other than  '<delimited> & <repeated>' of course

[16:37] <diakopter> (){} **4** '.'

[16:38] <moritz_> diakopter: is that valid p6 regex, and dwim?

[16:38] <diakopter> moritz_: no :P I made it up

[16:38] <TreyHarris> ** 4&'.' 

[16:39] <diakopter> TreyHarris: but that seems to indicate that there will be 4 of '.', which of course could be decremented internally.. but still

[16:39] <TreyHarris> /'x' ** 4|'.'/ would match x, x.x, x.x, x.x.x... and also xxxx :)

[16:40] *** meppl joined
[16:40] <[particle]> istr a **{...} incantation

[16:40] * [particle] checks S05

[16:41] <moritz_> sorry, I'll be missing #perl6-soc again today

[16:41] <moritz_> I'll write my report now, probably

[16:44] <[particle]> ah, rats. gotta prep for a concall &

[16:44] <diakopter> 'x' ** 4 ** '.' makes sense to me, because there's no alternative (sane) interpretation.  I mean, if ** is right-associative..

[16:45] <diakopter> eh, I take that back; I guess there is.

[16:47] <moritz_> ** would be left associative in regexes I guess

[16:52] *** cognominal_ left
[16:52] *** justatheory joined
[16:54] *** alester joined
[16:54] <diakopter> actually that would make it chaining, of sorts.

[16:55] <moritz_> which seems useful to me

[16:56] <diakopter> yeah, me too.  you could have  (\d+) { $0 < 255 } ** 4 ** '.' ** 5 ** ','

[16:57] *** meppl left
[16:58] <diakopter> or  (\d+) { $0 < 255 } ** 4 ** '.' ** 0..63 ** ','      0..63 ip addresses sep by commas

[16:59] <diakopter> or  [**] (\d+) { $0 < 255 }, 4, '.', 0..63, ','

[17:01] <diakopter> that works b/c the quantifier is an implied 1..* when it's a literal, so the explicit quantifier is a modifier of the literal's op.

[17:04] *** p6eval left
[17:04] *** xinming_ left
[17:04] *** elmex left
[17:04] *** [particle] left
[17:04] *** bacek left
[17:04] *** yves left
[17:04] *** ilbot2 left
[17:04] *** rafl left
[17:04] <moritz_> do we have hyper ops in regexes?

[17:05] *** p6eval joined
[17:05] *** xinming_ joined
[17:05] *** elmex joined
[17:05] *** [particle] joined
[17:05] *** bacek joined
[17:05] *** rafl joined
[17:05] *** ilbot2 joined
[17:05] *** yves joined
[17:05] <diakopter> I don't think so... I was again imagining :D

[17:05] <moritz_> I think that would be very confusing because people tend not to think about precedence levels in regexes

[17:06] *** justatheory left
[17:06] *** zostay left
[17:06] *** Jedai left
[17:06] *** pbuetow left
[17:06] *** kanru left
[17:06] *** smtms left
[17:06] *** s1n left
[17:06] *** pjcj left
[17:06] *** bsb left
[17:06] *** eternaleye left
[17:06] *** gbacon left
[17:06] *** IRSeekBot left
[17:06] <moritz_> and they would be surprised where the boundaries of single tokens are

[17:06] *** justatheory joined
[17:06] *** zostay joined
[17:06] *** Jedai joined
[17:06] *** pbuetow joined
[17:06] *** kanru joined
[17:06] *** smtms joined
[17:06] *** eternaleye joined
[17:06] *** gbacon joined
[17:06] *** bsb joined
[17:06] *** pjcj joined
[17:06] *** s1n joined
[17:06] <moritz_> s/tokens/precedence levels/

[17:07] *** alester left
[17:07] *** iblechbot left
[17:07] *** ludan left
[17:07] *** edpratomo left
[17:07] *** TJCRI left
[17:07] *** rdice left
[17:07] *** cmarcelo left
[17:07] *** qmole_ left
[17:07] *** kolibrie left
[17:07] *** fullermd left
[17:07] *** agentzh left
[17:07] *** GeJ left
[17:07] *** pmichaud left
[17:07] *** ingy left
[17:07] *** Khisanth left
[17:07] *** mj41_ left
[17:07] *** cookys left
[17:07] *** simcop2387 left
[17:07] *** charsbar left
[17:07] *** Kattana left
[17:07] *** wilx left
[17:07] *** spinclad left
[17:07] *** TreyHarris left
[17:07] *** audreyt left
[17:07] *** meteorja1 left
[17:07] *** nipotaway left
[17:07] *** vixey left
[17:07] *** Patterner left
[17:07] *** pengrate left
[17:07] *** mtve left
[17:07] *** moritz_ left
[17:07] *** Tene left
[17:07] *** cj left
[17:07] *** IRSeekBot joined
[17:07] *** IRSeekBot left
[17:08] *** audreyt joined
[17:08] *** meteorja1 joined
[17:08] *** wilx joined
[17:08] *** spinclad joined
[17:08] *** TreyHarris joined
[17:08] *** Kattana joined
[17:08] *** nipotaway joined
[17:09] *** IRSeekBot joined
[17:12] *** vixey joined
[17:12] *** Patterner joined
[17:12] *** Tene joined
[17:12] *** moritz_ joined
[17:12] *** cj joined
[17:12] *** pengrate joined
[17:12] *** mtve joined
[17:12] *** ingy joined
[17:12] *** iblechbot joined
[17:12] *** ludan joined
[17:12] *** edpratomo joined
[17:12] *** TJCRI joined
[17:12] *** rdice joined
[17:12] *** cmarcelo joined
[17:12] *** mj41_ joined
[17:12] *** Khisanth joined
[17:12] *** GeJ joined
[17:12] *** simcop2387 joined
[17:12] *** cookys joined
[17:12] *** agentzh joined
[17:12] *** kolibrie joined
[17:12] *** fullermd joined
[17:12] *** qmole_ joined
[17:12] *** pmichaud joined
[17:12] *** charsbar joined
[17:12] *** irc.freenode.net sets mode: +o ingy

[17:14] *** ludan left
[17:15] *** qmole_ left
[17:15] *** kolibrie left
[17:15] *** rdice left
[17:15] *** TJCRI left
[17:15] *** edpratomo left
[17:15] *** fullermd left
[17:15] *** agentzh left
[17:15] *** GeJ left
[17:15] *** pmichaud left
[17:15] *** ingy left
[17:15] *** Khisanth left
[17:15] *** mj41_ left
[17:15] *** cookys left
[17:15] *** simcop2387 left
[17:15] *** cmarcelo left
[17:15] *** iblechbot left
[17:15] *** charsbar left
[17:16] *** ingy joined
[17:16] *** iblechbot joined
[17:16] *** edpratomo joined
[17:16] *** TJCRI joined
[17:16] *** rdice joined
[17:16] *** cmarcelo joined
[17:16] *** mj41_ joined
[17:16] *** Khisanth joined
[17:16] *** GeJ joined
[17:16] *** simcop2387 joined
[17:16] *** cookys joined
[17:16] *** agentzh joined
[17:16] *** kolibrie joined
[17:16] *** fullermd joined
[17:16] *** qmole_ joined
[17:16] *** pmichaud joined
[17:16] *** charsbar joined
[17:16] *** irc.freenode.net sets mode: +o ingy

[17:16] *** nipotaway is now known as nipotan

[17:25] <TimToady> wow, brown.freenode.net seems really flakey of late

[17:25] <TimToady> ** in regex is right associative too

[17:26] <TimToady> because the ** rule looks for a quantified atom on its right

[17:26] <TimToady> so you have to use brackets to be left associative, which is probably a feature

[17:31] *** ispy_ left
[17:46] <pmichaud> pugs:  say (1..5).WHAT

[17:46] <p6eval> pugs: OUTPUT[Array␤]

[17:46] <pmichaud> pugs:  say (1..5).pick

[17:46] <p6eval> pugs: OUTPUT[1␤]

[17:46] <pmichaud> pugs:  say (1..5).pick

[17:46] <p6eval> pugs: OUTPUT[4␤]

[17:54] <pmichaud> pugs:  say (1..5).pick(3)

[17:54] <p6eval> pugs: OUTPUT[345␤]

[17:54] <pmichaud> pugs:  say (1..5).pick(3)

[17:54] <p6eval> pugs: OUTPUT[234␤]

[17:54] <pmichaud> pugs:  say (1..5).pick(3)

[17:54] <p6eval> pugs: OUTPUT[325␤]

[17:54] <pmichaud> pugs:  say (1..5).pick(7)

[17:54] <p6eval> pugs: OUTPUT[53124␤]

[17:54] <moritz_> pugs: say (1..5).pick(*)

[17:54] <p6eval> pugs: OUTPUT[12435␤]

[17:55] <pmichaud> should pick/grep/cat/keys/kv/pairs/values be methods of the Positional role?

[17:56] <pmichaud> or should Range and List each provide their own methods for these?

[17:56] <pmichaud> or is there some relation between Range and List that I'm unaware of?

[17:56] <moritz_> I think that implementing a iterator should be enough for grep and cat, for example

[17:57] <pmichaud> moritz:  what about   (1..5).grep    ... ?

[17:57] <pmichaud> (1..5).grep would imply a 'grep' method on Range objects

[17:57] <TimToady> grep only requires an iterator for its input, since it's lazy, I think

[17:58] <pmichaud> I'm asking more about dispatch

[17:58] <pmichaud> how does (1..5).grep get dispatched

[17:58] <moritz_> having a common role for such things (Positional and Iteratable) could solve some trouble

[17:58] <pmichaud> or (1..5).pick

[17:58] <TimToady> grep is probably one of those methods that is forced to mean the same thing everywhere via Any

[17:58] <pmichaud> okay.

[17:58] <pmichaud> that works for me.

[17:58] <TimToady> like join

[17:59] <pmichaud> thanks.

[17:59] <moritz_> should I update S29 to add Any multis?

[17:59] <TimToady> then the Any implementation really decides which class or role it really uses

[17:59] *** Lorn joined
[18:00] <TimToady> moritz_: don't see much harm in it

[18:00] <TimToady> (they aren't multis, they're just methods)

[18:00] <TimToady> (of Any)

[18:00] <TimToady> single dispatch

[18:01] <TimToady> no magical syntax right now, just Prelude defining methods in Any that refer to the real class/role

[18:02] <pmichaud> TimToady++  # simple implementations :-)

[18:03] <pmichaud> I'll update Rakudo to match also.

[18:03] <pugs_svnbot> r21039 | diakopter++ | [yap6] \o/ successfully converted plus()/star() to iterative instead of recursive.  speed/memory improvements ensue.

[18:03] * moritz_ somhow still doesn't like the idea - why should the List methods be so special that they are anchored in Any, and many others aren't?

[18:07] <TimToady> because they're defined by the language

[18:08] <[particle]> pugs: 1.pick

[18:08] <p6eval> pugs: OUTPUT[*** pick not defined: VInt 1␤    at /tmp/9ESTHIbncN line 1, column 1 - line 2, column 1␤]

[18:08] <TimToady> they're as close to "built-ins" as p6 gets

[18:12] <pugs_svnbot> r21040 | diakopter++ | [yap6] eliminated unnecessary deep_copy

[18:54] <spinclad> .oO {   <ipoctet> ** '.' :n(4)     <ipoctet> ** 4 :sep<.>    <ipoctet> ** ('.' but 4)   }

[18:55] * spinclad wonders, am i netsplit?

[18:55] <diakopter> if you are, it's w/ me

[18:56] <spinclad> just hadn't seen any talk for 40 minutes

[18:56] <spinclad> (thought it a bit anomalous)

[18:58] <spinclad> re **, i think something like the above is needed: i see only one repetition operation, with both a separator and quantifier.

[18:59] <spinclad> but it doesn't fit in the regex sublanguage well.

[19:00] <TimToady> we're just all off hacking in another window...

[19:01] <spinclad> if #parrot, i'm still backlagged there

[19:02] *** avar left
[19:03] <pugs_svnbot> r21041 | lwall++ | [perl6] add Makefile

[19:03] <pugs_svnbot> r21041 | lwall++ | [STD etc.] memoization via lang-specific positional array of memos

[19:03] <pugs_svnbot> r21041 | lwall++ | [STD] the ws_* attributes are now gone

[19:03] <pugs_svnbot> r21041 | lwall++ | [Cursor5] much cleanup of match tree

[19:03] *** avar joined
[19:04] <TimToady> (not real memoization, just position-specific data)

[19:04] <Auzon> perl6: package A {our $B = 42;}; say $A::B;

[19:04] <p6eval> elf 21041: OUTPUT[42␤]

[19:04] <p6eval> ..kp6 21041: OUTPUT[no method 'APPLY' in Class 'Undef'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤     ]

[19:04] <p6eval> ..pugs: OUTPUT[␤]

[19:04] <p6eval> ..rakudo 28687: OUTPUT["load_bytecode" couldn't find file 'PGE.pbc'␤current instr.: 'parrot;Grammar;onload' pc 8434 (src/gen_builtins.pir:5462)␤]

[19:05] <spinclad> (re doesn't fit regex sublang): i take it back, i see :adverbs used in regexes...

[19:06] <TimToady> but in general adverbs are used in regexen to modify what's coming, not what came before

[19:06] <spinclad> (at least free-floating at the start of a bracket-group; what do those attach to?)

[19:06] <spinclad> yeah

[19:06] *** Alias_ left
[19:07] <spinclad> so quite different from the main language

[19:07] <TimToady> except see also s:g:i/.../ for instance

[19:07] <TimToady> it's in front there too

[19:08] <spinclad> i see those as still in the main language, applying to the 's'

[19:08] <TimToady> the adverbs on operators only works that way because there's no other place to look for them.

[19:08] <spinclad> could they possibly be made to work the same in regexes?

[19:08] <TimToady> don't wanna

[19:08] <spinclad> good nuff

[19:09] <spinclad> (but WHY???)

[19:10] <TimToady> because it's often better if adverbs can come before the thing they modify, just because you read left-to-right

[19:11] <diakopter> ... grammar RTLPerl { ...

[19:11] <TimToady> that's why s///g turned into s:g///

[19:11] <spinclad> grammar BiDiPerl

[19:11] <TimToady> it's particularly necessary for an adverb like :lang to come before the language it switches to

[19:12] <spinclad> well, yes, especially if the modifier modifies prior parsing

[19:12] <spinclad> yes

[19:12] <TimToady> 1..10:by(2) doesn't have to modify the parse of ..

[19:12] <TimToady> and it's relatively close by (usually)

[19:13] <spinclad> i don't quite see that applying to ** though, it's not modifying its parse either

[19:13] <spinclad> so similar to ..

[19:15] <spinclad> and i'm starting to think of ** as :($left, :$n, :$sep) or some such

[19:15] <spinclad> (if i'm not mangling the syntax too grossly)

[19:16] <spinclad> anyway, made my case, your call

[19:17] <TimToady> you're not the first person to ask for combining sep and counting, actually

[19:17] <TimToady> will think about it s'more

[19:18] <spinclad> TreyHarris earlier today, even

[19:18] <diakopter> zounds

[19:18] <spinclad> and diakopter

[19:18] <spinclad> and now me

[19:18] <spinclad> with pitchforks

[19:19] <spinclad> and torches

[19:19] <diakopter> TimToady: see above for my idea about making the chaining behavior do a composition instead of two applications...

[19:22] <diakopter> zounds: caching of the heretofore AST results constitutes 96% of the yap6 processing time. hrm :/

[19:22] <diakopter> er, theretofore

[19:24] <diakopter> (multiplies time by 25)

[19:25] <TimToady> actually, Morris Siegel beat you all to it.  :)

[19:27] <diakopter> 25x is enough to warrant adding a 2nd pass (to build the ast) upon reaching an ltm-stopper or end-of-input...

[19:50] *** mst joined
[19:50] <mst> where does pugs svn live now?

[19:50] * mst wanted to poke at STD5.pm

[19:50] <Auzon> http://svn.pugscode.org/pugs/

[19:51] <[particle]> std5 is under src/perl6/

[19:51] <mst> right.

[19:51] <mst> thanks very much all

[19:51] *** mst left
[19:57] <diakopter> oooo  (continued from above) ... and during that special-mode second pass, the parsing tree would be fated forward (down into the tree as opposed to in reverse)

[20:03] <[particle]> i'm going to be late for the phone call

[20:04] *** Jedai left
[20:11] *** cathya joined
[20:21] *** rdice left
[20:23] *** iblechbot left
[20:28] *** lambdabot joined
[20:45] <moritz_> re

[20:57] <pugs_svnbot> r21042 | lwall++ | [Cursor5] didn't propagate memo array correctly

[20:57] <pugs_svnbot> r21042 | lwall++ | [STD] list and chain operators also want deadwood removed

[20:58] *** wilx left
[21:04] <diakopter> moritz_: you're still awake? :)

[21:05] <moritz_> diakopter: yes

[21:06] <moritz_> diakopter: it's 11pm here, and still too warm to sleep

[21:07] <moritz_> and know that the football match is over (Germany won btw) I can enjoy life again ;)

[21:09] <moritz_> s/know/now/

[21:14] *** jhorwitz left
[21:22] *** dduncan joined
[21:23] <gbacon> where is the source for svnbot?

[21:25] <diakopter> gbacon: it's under examples/network

[21:25] <diakopter> iirc

[21:25] <diakopter> yes

[21:25] <diakopter> it's in Perl 6

[21:26] <Auzon> actually, I don't think the source is in the repo

[21:26] <moritz_> some of the svn bots here (rakudo_svn most notably) is in perl5, using SVN::Log and Bot::BasicBot

[21:27] <moritz_> (and specbot is the same perl 5 based thingy)

[21:28] <diakopter> Auzon: yeah it is...

[21:28] <diakopter> examples/network/svnbot.pl

[21:28] <diakopter> pugs_svnbot

[21:28] <diakopter> er

[21:28] <Auzon> That's not what's running here

[21:29] <diakopter> oh.  it was a couple of months ago

[21:29] <moritz_> Auzon: I thnk pugs_svnbot is powered by examples/network/svnbot.pl, and running on feather

[21:29] <moritz_> (timtowtdi.org hosts only two svn bots atm)

[21:29] <diakopter> whew; I'm not crazy

[21:30] <Auzon> I only see one running on timtowtdi.org...

[21:31] * moritz_ sees two. /me wins ;-)

[21:31] <moritz_> one is the specbot, don't know what its nick is ;)

[21:31] *** edpratomo left
[21:32] <diakopter> perlbot: what do you do

[21:32] <moritz_> and with scarce 117 nicks in here I'm not too fond on figuring out which one it is ;)

[21:32] <diakopter> buubot: how many bots are you

[21:32] <buubot> diakopter: Stored how many bots

[21:33] <Auzon> I thought it was speckbot, but I don't see it. and a 'ps -A | grep svnbot' only returned one

[21:33] <moritz_> Auzon: btw if you want to change something in p6eval's env, it's now in /newchroot, not /chroot anymore

[21:33] <Auzon> ok

[21:33] *** speckbot joined
[21:34] <diakopter> there it is

[21:34] <moritz_> speckbot, there you go

[21:34] <moritz_> only the svn bots are in the old chroot

[21:34] * diakopter 's not looking forward to refactoring yap6's parser() again for two-passes

[21:35] <Auzon> moritz_: Any objections to me moving the up to date tests in t/packages to t/spec/S10-packages?

[21:35] <moritz_> I should clean up the rest to avoid confusion

[21:35] <Auzon> moritz_: we could commit the svnbot code to the pugs repo if you want

[21:35] <moritz_> Auzon: re moving, do as you want

[21:36] <moritz_> Auzon: re svnbot code, I wouldn't mind, but perhaps we should change the hardcoded configuration first ;)

[21:36] <Auzon> yeah, I was thinking that we could generalize it

[21:36] <moritz_> shouldn't be too hard

[21:39] *** meppl joined
[21:52] *** Alias_ joined
[21:58] <pugs_svnbot> r21043 | moritz++ | [spec] rand.t: unfudged one test, changed fudge message of other

[22:03] *** barney joined
[22:08] *** Limbic_Region joined
[22:14] *** TJCRI left
[22:17] <Auzon> perl6: my $hyphen-name = 5; say $hyphen-name;

[22:17] *** nowhea__ joined
[22:17] <p6eval> elf 21043: OUTPUT[Useless use of subtraction (-) in void context at (eval 123) line 3.␤Undefined subroutine &GLOBAL::prefix__61 called at (eval 123) line 3.␤ at ./elf_f line 3854␤]

[22:17] <p6eval> ..kp6 21043: OUTPUT[no method 'APPLY' in Class 'Undef'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤     ]

[22:17] <p6eval> ..pugs: OUTPUT[*** No such subroutine: "&name"␤    at /tmp/83mHeZFOzx line 1, column 1-20␤]

[22:17] <p6eval> ..rakudo 28687: OUTPUT[get_iter() not implemented in class 'Integer'␤current instr.: 'prefix:=' pc 11123 (src/gen_builtins.pir:7336)␤]

[22:18] <Auzon> I'm guessing that only \w is allowed as a variable or package name without being quoted.

[22:18] <moritz_> yes

[22:19] <moritz_> but IMHO - is just more readable as a word separator

[22:20] *** riffraff joined
[22:20] <Auzon> I really have no preference, but this means I have to quote the package tests for S10 if I move them

[22:20] *** riffraff left
[22:20] <moritz_> or use CamelCase

[22:22] *** Alias_ left
[22:23] <Auzon> it does 'use t::packages::FileName' which would translate to 'use t::spec::S10-packages::FileName' which isn't allowed. I'm trying to think of ways around this.

[22:24] *** barney left
[22:24] <moritz_> hurm

[22:25] *** dduncan left
[22:25] <Auzon> an equivalent to 'use lib' would get around this nicely.

[22:25] <moritz_> yes

[22:25] <moritz_> or a t/spec/modules/ or some such

[22:28] <diakopter> offline for 9 days&

[22:28] <Auzon> see you, diakopter.

[22:28] <moritz_> have fun, and see you diakopter ;)

[22:36] <rakudo_svn> r28698 | bernhard++ | Remove trailing space.

[22:41] *** hercynium joined
[22:41] *** hercynium left
[22:41] *** bacek left
[22:43] *** LCamel left
[22:43] *** LCamel joined
[22:49] *** dolmen joined
[22:53] *** meppl left
[22:53] *** hercynium joined
[23:06] *** Alias_ joined
[23:08] *** cmarcelo left
[23:10] <pugs_svnbot> r21044 | dolmen++ | Moving range.t with built-ins datatypes.

[23:15] *** nowhea__ left
[23:22] <pugs_svnbot> r21045 | gbacon++ | Make svnbot.pl run with pugs v6.2.13.5.

[23:28] *** nowhea__ joined
[23:37] *** vixey left
[23:46] *** nowhea__ left
[23:46] <dolmen> rakudo: say (3 == 1..5).perl

[23:46] <p6eval> rakudo 28687: OUTPUT[get_number() not implemented in class 'Range'␤current instr.: 'infix:==' pc 8852 (src/gen_builtins.pir:5763)␤]

[23:47] <dolmen> perl5: say (3 == 1..5).perl

[23:47] <dolmen> perl6: say (3 == 1..5).perl

[23:47] <p6eval> elf 21045: OUTPUT[␤]

[23:47] <p6eval> ..kp6 21045: OUTPUT[syntax error at position 4, line 1 column 4:␤say (3 == 1..5).per␤    ^ HERE␤]

[23:47] <p6eval> ..pugs: OUTPUT[Bool::False␤]

[23:47] <p6eval> ..rakudo 28687: OUTPUT[get_number() not implemented in class 'Range'␤current instr.: 'infix:==' pc 8852 (src/gen_builtins.pir:5763)␤]

[23:52] <pugs_svnbot> r21046 | dolmen++ | More ranges tests.

[23:59] *** bacek joined
