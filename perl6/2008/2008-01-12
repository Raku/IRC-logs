[00:17] *** kanru joined
[00:33] *** Limbic_Region left
[00:39] *** jferrero joined
[00:43] *** arxc left
[00:55] *** devogon left
[00:59] *** ting left
[00:59] *** tcliou joined
[01:06] *** ruoso joined
[01:18] *** njbartlett_ left
[01:19] *** tobeya left
[01:26] *** njbartlett_ joined
[01:31] *** Psyche^ joined
[01:46] *** Patterner left
[01:46] *** Psyche^ is now known as Patterner

[01:50] <meppuru> good night

[01:51] *** meppuru left
[02:01] *** luqui joined
[02:06] *** araujo joined
[02:07] *** Limbic_Region joined
[02:07] *** bwisti left
[02:09] <Auzon> pugs: print "good" if ([+] ord() % 10 for split //, "samil") == 4;

[02:09] <exp_evalbot> OUTPUT[*** ␤    Unexpected "for"␤    expecting operator, ":", "," or ")"␤    at /tmp/M7aNI1HXgl line 1, column 33␤]

[02:09] <Auzon> pugs: ord("a")

[02:09] <exp_evalbot> RESULT[97]

[02:09] <Auzon> pugs: $_ = "a"; ord()

[02:09] <exp_evalbot> OUTPUT[*** No compatible multi variant found: "&ord"␤    at /tmp/u943LNJLAk line 1, column 11 - line 2, column 1␤]

[02:09] <Auzon> pugs: print "good" if ([+] (ord($_) % 10 for split //, "samil")) == 4;

[02:09] <exp_evalbot> OUTPUT[*** ␤    Unexpected "for"␤    expecting operator or ")"␤    at /tmp/Gw7HR9tRiH line 1, column 36␤]

[02:10] <Auzon> pugs: print "good" if ([+] map {ord($_) % 10} split //, "samil") == 4;

[02:10] <exp_evalbot> OUTPUT[*** ␤    Unexpected "split"␤    expecting ",", ":", operator or ")"␤    at /tmp/ayNLwrOKvy line 1, column 41␤]

[02:10] <Auzon> oh right

[02:11] <Auzon> pugs: print "good" if ([+] map {ord($_) % 10} split /<?>/, "samil") == 4;

[02:11] <exp_evalbot> OUTPUT[*** ␤    Unexpected "split"␤    expecting ",", ":", operator or ")"␤    at /tmp/3PWVvBBiQo line 1, column 41␤]

[02:11] *** luqui left
[02:11] <Auzon> pugs: split /<?>/, "samil";

[02:11] <exp_evalbot> RESULT[("s", "a", "m", "i", "l")]

[02:11] <Auzon> pugs: map {ord} split /<?>/, "samil";

[02:11] <exp_evalbot> OUTPUT[*** ␤    Unexpected "}"␤    at /tmp/Vo1hlfcA7J line 1, column 9␤]

[02:11] <Auzon> pugs: map ord, split /<?>/, "samil";

[02:11] <exp_evalbot> OUTPUT[*** ␤    Unexpected ","␤    at /tmp/KSmJY7Gy5A line 1, column 8␤]

[02:12] <Auzon> pugs: map {ord($_)} split /<?>/, "samil";

[02:12] <exp_evalbot> OUTPUT[*** ␤    Unexpected "split"␤    expecting ",", ":" or operator␤    at /tmp/NnYC9MIzvy line 1, column 15␤]

[02:12] <Auzon> pugs: map {ord($_)} (split /<?>/, "samil")

[02:12] <exp_evalbot> OUTPUT[*** ␤    Unexpected "("␤    expecting ",", ":" or operator␤    at /tmp/Ugp8qfsDLl line 1, column 15␤]

[02:12] <Auzon> Oh well. Maybe some other time.

[02:14] *** alester joined
[02:18] *** ashleyb left
[02:18] *** xinming left
[02:35] *** polettix left
[02:57] *** __Ace__ left
[03:00] *** charsbar_ left
[03:01] *** charsbar joined
[03:02] *** Limbic_Region left
[03:20] *** ofer left
[03:23] *** jferrero left
[03:27] *** japhb left
[03:35] *** alester left
[03:38] *** xinming joined
[03:50] <spinclad> pugs: "samil".split(/<?>/)

[03:50] <exp_evalbot> RESULT[("s", "a", "m", "i", "l")]

[03:51] <spinclad> pugs: "samil".split(/<?>/).map({.ord})

[03:51] <exp_evalbot> RESULT[(115, 97, 109, 105, 108)]

[03:51] <spinclad> pugs: "samil".split(/<?>/).map({.ord % 10})

[03:51] <exp_evalbot> RESULT[(5, 7, 9, 5, 8)]

[03:52] <spinclad> pugs: say 'good' if [+] "samil".split(/<?>/).map({.ord % 10}) == 4

[03:52] <exp_evalbot> RESULT[undef]

[03:52] <spinclad> pugs: say 'bad' unless [+] "samil".split(/<?>/).map({.ord % 10}) == 4

[03:52] <exp_evalbot> OUTPUT[bad␤]

[03:53] <spinclad> pugs: "samil".split(/./)

[03:53] <exp_evalbot> RESULT[("s", "a", "m", "i", "l")]

[03:54] <spinclad> pugs: say 'good' if [+] "samil".split(/<?>/).map({.ord}) % 10 == 4

[03:54] <exp_evalbot> RESULT[undef]

[03:55] <spinclad> pugs: [+] "samil".split(/<?>/).map({.ord}) % 10

[03:55] <exp_evalbot> RESULT[5.0]

[03:56] <spinclad> pugs: [+] "samil".split(/<?>/).map({.ord})

[03:56] <exp_evalbot> RESULT[534]

[03:56] <spinclad> pugs: "samil".split(/<?>/).map({.ord}) % 10

[03:56] <exp_evalbot> RESULT[5.0]

[03:57] <spinclad> pugs: say 'good' if ([+] "samil".split(/<?>/).map({.ord})) % 10 == 4

[03:57] <exp_evalbot> OUTPUT[good␤]

[03:57] *** AzureBOT joined
[04:41] *** Limbic_Region joined
[04:52] *** alpine_style joined
[04:55] *** ofer joined
[04:56] *** ting joined
[05:12] *** REPLeffect joined
[05:54] *** Limbic_Region left
[06:02] <TimToady> Auzon: you have to have a comma after map's block, unlike in p5

[06:08] *** alester joined
[06:21] *** DarkWolf84 left
[06:26] *** alpine_style left
[06:32] *** REPLeffect left
[06:37] *** bbkr__ left
[06:37] *** bbkr__ joined
[06:54] *** xinming_ joined
[06:56] *** dduncan joined
[07:04] *** xinming left
[07:18] <Auzon> Thanks, TimToady++

[07:21] <Auzon> pugs: ([+] "samil".split(/<?>/).map({.ord}))

[07:21] <exp_evalbot> RESULT[534]

[07:21] <Auzon> awesome :)

[07:22] <Auzon> spinclad++ ;)

[07:22] *** Auzon left
[07:42] *** luqui joined
[07:44] *** alester left
[07:56] *** japhb joined
[08:09] *** dduncan left
[08:14] *** Maddingue left
[08:14] *** Maddingue joined
[08:23] *** riffraff joined
[08:23] *** Aankhen`` joined
[08:24] *** jjore joined
[08:29] *** devogon joined
[08:31] *** iblechbot joined
[09:19] *** barney joined
[09:23] *** meppuru joined
[09:27] *** jisom joined
[09:41] *** iblechbot left
[09:56] *** xinming_ left
[10:21] *** njbartlett_ left
[10:23] *** Aankh|Clone joined
[10:24] *** barney left
[10:36] *** iblechbot joined
[10:39] *** Aankhen`` left
[10:58] *** alc joined
[11:03] *** marmic left
[11:08] *** marmic joined
[11:20] *** jisom left
[11:48] *** masak joined
[12:01] *** cosimo joined
[12:33] *** meppuru left
[12:34] *** luqui left
[12:39] *** jferrero joined
[12:42] *** cosimo left
[12:44] *** Southen_ left
[12:46] *** njbartlett_ joined
[13:03] *** Southen joined
[13:04] *** rindolf joined
[13:04] <rindolf> Hi all.

[13:06] <masak> hello

[13:23] *** snearch joined
[13:29] *** Alias_ left
[13:46] *** Schwern joined
[13:53] *** chris2 joined
[13:57] *** cosimo joined
[13:58] *** cosimo is now known as cosimo2

[13:58] <rindolf> How do I make a flat copy of a ResizablePMCArray in Parrot?

[14:03] *** kane__ joined
[14:06] <wolverian> try #parrot 

[14:09] <rindolf> wolverian: OK.

[14:09] <wolverian> (magnet)

[14:10] <pasteling> "rindolf" at 79.182.99.195 pasted ""clone " to make a flat copy of an array." (25 lines, 429B) at http://sial.org/pbot/29801

[14:10] *** polettix joined
[14:21] *** alester joined
[14:42] <pugs_svn> r19437 | cosimo++ | Changed skip block with the new compiler directive

[14:48] *** alester left
[14:49] *** explorer__ joined
[14:49] *** explorer__ left
[14:54] *** masak left
[14:57] <cosimo2> Hi all

[14:58] <rindolf> Hi cosimo2 

[14:58] <cosimo2> what's the best way to change the ":todo<feature>" in this test?

[14:58] <pasteling> "cosimo" at 84.215.162.181 pasted "Tests :todo refactoring" (6 lines, 235B) at http://sial.org/pbot/29804

[14:59] <cosimo2> It's possible to say '#?pugs: todo("xxx", 1)' before a single test?

[15:02] *** jrm_ joined
[15:05] * cosimo2 has been reading particle's use.perl.org journal

[15:05] <cosimo2> probably it is

[15:15] <PerlJam> cosimo2: it is.  I think the ,1 is even optional.

[15:16] *** tewk left
[15:17] <pugs_svn> r19438 | cosimo++ | chomp tests refactoring.

[15:17] <pugs_svn> r19438 | cosimo++ | Copied tests from /t/arrays/chomp.t and /t/strings/chomp.t.

[15:17] <pugs_svn> r19438 | cosimo++ | Changed todo tests with new compiler directive (#?pugs: todo(...))

[15:17] <pugs_svn> r19439 | cosimo++ | added Id keywords

[15:19] <pugs_svn> r19440 | cosimo++ | set svnprops 'Author', 'Date', 'Revision', 'Id'

[15:24] *** rindolf left
[15:28] <clkao>  /win 46

[15:31] <kane__> cl!

[15:36] *** rindolf joined
[15:41] *** tewk joined
[15:43] *** snearch left
[15:52] *** jhorwitz joined
[15:53] *** Schwern left
[15:56] *** tewk left
[15:59] *** tewk joined
[16:05] *** IllvilJa left
[16:06] *** tewk_ joined
[16:06] *** tewk left
[16:15] *** meppuru joined
[16:20] *** meppuru left
[16:21] *** meppuru joined
[16:26] *** rindolf left
[16:27] *** alc left
[16:37] *** IllvilJa joined
[16:54] *** Psyche^ joined
[17:03] *** pmurias joined
[17:10] <skids> Are Proxy (tied) attributes supposed to be working yet?  I get a ref-to-<obj:Proxy> when trying code like what's in the tests/libwww-perl/docs

[17:10] <skids> (rather than it calling FETCH/STORE)

[17:11] *** Patterner left
[17:11] *** Psyche^ is now known as Patterner

[17:14] *** alester joined
[17:14] <pmurias> mncharity: how is the backend progressing? :)

[17:15] *** Aankh|Clone is now known as Aankhen``

[17:24] *** xinming joined
[17:34] *** cosimo2 left
[17:57] *** wtgee joined
[18:11] *** ruoso left
[18:12] *** ruoso joined
[18:13] *** braceta joined
[18:26] *** __Ace__ joined
[18:37] *** rindolf joined
[18:39] *** BinGOs_ joined
[18:39] *** BinGOs left
[18:40] *** BinGOs_ is now known as BinGOs

[19:02] *** rdice joined
[19:07] <pugs_svn> r19441 | cosimo++ | Test suite refactoring.

[19:07] <pugs_svn> r19441 | cosimo++ | Copied t/builtins/strings/p5chop.t to t/spec/S29-functions/str/p5chop.t

[19:10] *** cosimo2 joined
[19:15] <pugs_svn> r19442 | pmurias++ | [kp6] support for ::Foo, updated tests

[19:16] *** rdice left
[19:16] *** cosimo2 is now known as cosimo

[19:22] *** braceta left
[19:25] <pugs_svn> r19443 | cosimo++ | Test suite refactoring (spec/S29). Merged:

[19:25] <pugs_svn> r19443 | cosimo++ | /t/builtins/strings/chop.t

[19:25] <pugs_svn> r19443 | cosimo++ | /t/unspecced/chop.t

[19:27] <pugs_svn> r19444 | cosimo++ | [t]: Fixed path for S29/str/chop.t

[19:28] *** rindolf left
[19:30] <wtgee> Hi, I just checked out parrot and got it working fine and then went to parrot/languages/perl6 and am currently getting some failures in 'make spectest' and am not really sure what I should do next.

[19:31] <cosimo> wtgee: I'm currently working on the spec tests

[19:31] <cosimo> I think it's a *long* way to go to make these tests succeed...

[19:31] <wtgee> Okay, that is what I was wondering.  So if my regular 'make test' worked I should be fine?

[19:32] <alester> So I can no longer do random q{} quoting?

[19:32] <pugs_svn> r19445 | cosimo++ | Test suite refactoring (spec/S29).

[19:32] <pugs_svn> r19445 | cosimo++ | Copied /t/builtins/strings/p5chomp.t 

[19:32] <pugs_svn> r19445 | cosimo++ | to /t/spec/S29-functions/str/p5chomp.t

[19:32] <wolverian> hm? 

[19:33] <alester> Why can I not say

[19:33] <alester> perl6 -e"say q{hello, world}" ?

[19:33] <wtgee> cosimo: I am just following along the perl6/README for running the test suite...maybe we should make a note that it will fail.

[19:34] <wolverian> alester, that should wori.

[19:34] <wolverian> s/wori/work/

[19:34] <cosimo> wtgee: don't know

[19:35] <alester> you'd think.

[19:36] <wolverian> well, note that the implementations do not usually implement all of the spec (yet) :)

[19:38] <alester> oh it's a quoting issue

[19:44] *** jisom joined
[19:44] <Tene> alester: q{} is NYI in parrot's perl6.

[19:51] <[particle]> try q<>

[19:51] <[particle]> iirc

[19:51] <[particle]> &

[19:51] <Tene> that doesn't work either.

[19:57] <pugs_svn> r19446 | cosimo++ | Test suite refactoring (spec/S29).

[19:57] <pugs_svn> r19446 | cosimo++ | Copied [ul]c[first] test scripts.

[20:05] *** jferrero left
[20:12] <pugs_svn> r19447 | rhr++ | [Unicode.pm] begin to do Str as suggested in recent spec updates.  TimToady++

[20:20] *** jisom left
[20:23] <pugs_svn> r19448 | rhr++ | [Unicode.pm] handle grapheme numbers correctly

[20:26] *** Patterner left
[20:40] <pugs_svn> r19449 | cosimo++ | Moved test script to /t/spec/S29-functions/str/capitalize.t

[20:40] <pugs_svn> r19449 | cosimo++ | Fixed little typos.

[20:46] <pugs_svn> r19450 | cosimo++ | Test suite refactoring (spec/S29).

[20:46] <pugs_svn> r19450 | cosimo++ | Copied /t/builtins/strings/length.t

[20:46] <pugs_svn> r19450 | cosimo++ | Added smartlinks for bytes and chars.

[20:58] <pugs_svn> r19451 | cosimo++ | Test suite refactoring (spec/S29).

[20:58] <pugs_svn> r19451 | cosimo++ | Copied rindex.t from /t/builtins/strings/rindex.t

[20:58] <pugs_svn> r19451 | cosimo++ | Added one more test with 3-level call chains.

[20:59] <pugs_svn> r19452 | cosimo++ | Adjusted plan for S29/str/rindex test script

[21:09] *** alester left
[21:11] <pugs_svn> r19453 | cosimo++ | Test suite refactoring (spec/S29)

[21:11] <pugs_svn> r19453 | cosimo++ | Copied split.t from /t/builtins/strings.

[21:12] <wolverian> I love the smell of burning tuits in the morning 

[21:13] <wolverian> (cosimo++)

[21:20] <pugs_svn> r19454 | cosimo++ | Test suite refactoring (spec/S29).

[21:20] <pugs_svn> r19454 | cosimo++ | Refactored comb/split tests.

[21:21] *** marmic left
[21:22] <cosimo> wolverian: It's almost night here... :-)

[21:23] <wolverian> here, too :)

[21:25] *** gaal left
[21:28] *** jjore left
[21:35] *** stevan_ left
[21:36] *** chris2 left
[21:41] <pugs_svn> r19455 | cosimo++ | Test suite refactoring (spec/S29)

[21:41] <pugs_svn> r19455 | cosimo++ | sprintf.t from /t/builtins/strings/sprintf.t

[21:44] <pugs_svn> r19456 | rhr++ | [Unicode.pm] move normalization into Grapheme

[21:45] <cosimo> Anyone knows why here: http://perlcabal.org/syn/S29.html#Str the inlined test scripts in t/spec look like one row only?

[21:45] <lambdabot> Title: S29

[21:45] <cosimo> while tests in t/builtins are ok?

[21:53] *** crashmatrix joined
[21:53] *** jhorwitz left
[21:56] <pugs_svn> r19457 | rhr++ | [Unicode.pm] a few fixes

[21:58] *** stevan_ joined
[22:05] <pugs_svn> r19458 | rhr++ | [Unicode.pm] clean up normalization dispatch

[22:19] <cosimo> anyone knows an example of Str.samecase() ?

[22:20] *** stevan_ left
[22:23] *** Aankhen`` left
[22:24] <cosimo> no luck today... :-)

[22:27] <rhr> cosimo: samecase 'foo', 'BaR' eq 'FoO'

[22:32] <cosimo> thx

[22:32] <cosimo> and Str.basecase() ?

[22:32] <cosimo> samebase, sorry

[22:35] <rhr> samebase 'foo', "ba\x[0303]r" eq "fo\x[0303]o"

[22:36] *** stevan_ joined
[22:40] *** pmurias left
[22:41] <cosimo> oh, interesting... where did you read that?

[22:41] <cosimo> mailing lists?

[22:43] <rhr> it was a spec update from yesterday

[22:43] <rhr> or the day before...

[22:48] <cosimo> I read the spec document but has no examples...

[22:52] *** cosimo left
[22:53] *** iblechbot left
[22:54] *** masak joined
[22:57] *** marmic joined
[23:06] *** wtgee left
[23:11] *** Limbic_Region joined
[23:14] *** toyam joined
[23:23] *** devogon left
[23:25] *** devogon joined
[23:25] <toyam> hello

[23:26] <toyam> ping particle

[23:29] *** stevan_ left
[23:29] *** stevan_ joined
[23:30] *** icwiener joined
[23:31] *** jjore joined
[23:35] *** meppel-san joined
[23:40] *** meppuru left
[23:53] *** briansk1 joined
[23:53] *** icwiener left
[23:54] <briansk1> will Inline/XS code from perl5 work with perl6 or will it need to  be rewritten?

[23:59] <masak> briansk1: you might find the discussion at http://www.perlmonks.org/?node_id=279901 interesting

