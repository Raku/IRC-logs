[00:01] *** hercynium joined
[00:03] *** smg joined
[00:03] *** pbuetow left
[00:19] *** kisu left
[00:19] *** kisu joined
[00:44] *** s1n left
[00:46] *** DemoPhreak left
[00:55] *** [particle] left
[01:20] *** ting joined
[01:27] *** azawawi joined
[01:27] <azawawi> good morning

[01:32] <ZuLuuuuuu> good morning

[01:32] <ZuLuuuuuu> azawawi where are you from?

[01:32] <azawawi> jordan

[01:32] <azawawi> u?

[01:32] <ZuLuuuuuu> here it is 3:30 am

[01:32] <ZuLuuuuuu> turkey

[01:33] <azawawi> 3:33am

[01:33] <ZuLuuuuuu> jordan? it is in usa?

[01:33] <azawawi> south of you ;-)

[01:33] <ZuLuuuuuu> cant be?

[01:33] <ZuLuuuuuu> is it a country :D

[01:34] <ZuLuuuuuu> oh

[01:34] <ZuLuuuuuu> ok

[01:34] <ZuLuuuuuu> it is "􏿽xFCrd􏿽xFCn" in turkish very different

[01:34] <ZuLuuuuuu> thats why I couldn't recognise

[01:35] <azawawi> http://maps.google.com/maps?f=q&hl=en&geocode=&q=amman&sll=37.0625,-95.677068&sspn=40.188298,79.101563&ie=UTF8&ll=31.940509,35.933533&spn=21.50657,39.550781&z=5

[01:35] <lambdabot> Title: Google Maps, http://tinyurl.com/55725j

[01:35] <azawawi> i know ;-)

[01:39] <ZuLuuuuuu> i am gonna sleep good night :)

[01:40] <azawawi> i just woke up... ;-)

[01:40] <ZuLuuuuuu> :D

[01:40] <azawawi> good night

[01:40] *** ZuLuuuuuu left
[01:42] *** kisu left
[01:43] <wayland76> (Australia here :) )

[01:43] <azawawi> hi wayland76

[01:43] <wayland76> hi

[01:44] <azawawi> im trying to figure out why this http://feather.perl6.nl/~azawawi/STD.html is not working properly

[01:44] <lambdabot> Title: STD.pm

[01:46] <wayland76> I would imagine the answer is beyond me, but I'm having a look at it :)

[01:46] <wayland76> My browser seems to be choking on it, though :)

[01:46] <azawawi> firefox 3?

[01:47] <wayland76> Seamonkey, whichever one came with Fedora 6

[01:47] <azawawi> it should be... 20 MB worth of info in that html

[01:47] <azawawi> and i havent compressed the tree info yet

[01:47] <wayland76> The new Fedora comes out later this month, and I'll get that

[01:47] <wayland76> Ok :)

[01:47] <azawawi> chrome does not have a problem with it btw...

[01:48] <wayland76> Anyway, if my browser ever recovers, I'll have a look at it :)

[01:48] <wayland76> Well, my machine only has 1G memory, too

[01:48] <wayland76> :)

[01:49] <wayland76> And a Celeron 266

[01:49] <azawawi> btw, it is the browser that cant handle it not the machine ;-)

[01:50] <wayland76> Seamonkey is currently using about 85% cpu :)

[01:50] <wayland76> Yeah, doesn't surprise me :)

[01:51] <wayland76> Guess I can't help if I can't look at it.  Maybe after Fedora 10 comes out, and I've had time to download and upgrade... :)

[01:53] <wayland76> Ooh, Parrot release tomorrow

[01:53] <azawawi> what's the link?

[01:53] <wayland76> (although it may be the day after in my time)

[01:54] <wayland76> between what we just said, or a link that talks about the Parrot release?

[01:54] <wayland76> :)

[01:54] <azawawi> parrot release link

[01:54] <wayland76> Dunno, but I put it on my calendar, so I must've seen it somewhere :)

[01:55] *** slavik joined
[01:56] <wayland76> (btw, I should've said "18 November"; it's currently the 17th here)

[01:56] *** s1n joined
[01:56] <azawawi> 17th here

[01:56] <slavik> is subst (regex, string) complete?

[01:57] <slavik> it doesn't seem to work in rakudo

[01:57] <slavik> rakudo: $x = yay; $x .= subst (/a/, ""); say $x;

[01:57] <p6eval> rakudo 32742: OUTPUT[Scope not found for PAST::Var '$x'␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 152 (src/PCT/HLLCompiler.pir:104)␤]

[01:57] <slavik> rakudo: my $x = yay; $x .= subst (/a/, ""); say $x;

[01:57] <p6eval> rakudo 32742: OUTPUT[Could not find non-existent sub yay␤current instr.: '_block11' pc 26 (EVAL_11:16)␤]

[01:58] <slavik> rakudo: my $x = "yay"; $x .= subst (/a/, ""); say $x;

[01:58] <p6eval> rakudo 32742: OUTPUT[No applicable methods.␤␤current instr.: '_block11' pc 78 (EVAL_11:27)␤]

[01:58] <wayland76> azawawi: Yeah, I figured, that's why I specified.  You'll probably get the release on the 18th, but I'll have to wait until the 19th :)

[01:58] <slavik> rakudo: my $x = "yay"; $x = $x.subst(/a/, ""); say $x;

[01:58] <p6eval> rakudo 32742: OUTPUT[yy␤]

[01:58] <slavik> hmm

[01:59] <azawawi> slavik: AnyStr.subst

[01:59] <slavik> yeah, I got it, ty

[01:59] <wayland76> rakudo: my $x = "yay"; $x.subst(/a/, ""); say $x;

[01:59] <p6eval> rakudo 32742: OUTPUT[yay␤]

[01:59] <slavik> azawawi: I am working on a URL grammar thing

[01:59] <azawawi> wayland76: cool thx

[02:00] <slavik> so trying to put in as much stuff as I can for demo purposes

[02:00] <slavik> the operators to force context are really nice

[02:00] *** hercynium left
[02:02] *** hercynium joined
[02:02] <azawawi> slavik: demo?

[02:03] <slavik> demonstration

[02:03] <slavik> having trouble with split though

[02:03] <slavik> rakudo: say split /-/, "hello-bah";

[02:03] <p6eval> rakudo 32742: OUTPUT[Statement not terminated properly at line 1, near "/-/, \"hell"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[02:04] <azawawi> rakudo: my $a="a b c"; $a.split(/ /); say $a;

[02:04] <p6eval> rakudo 32742: OUTPUT[perl6regex parse error: Null pattern illegal at offset 25, found ' '␤current instr.: 'parrot;PGE;Perl6Regex;parse_error' pc 9717 (compilers/pge/PGE/Perl6Regex.pir:1142)␤]

[02:04] <slavik> rakudo: my $a, my $b = split /-/, "hello-bah"; say $a, $b;

[02:04] <p6eval> rakudo 32742: OUTPUT[Statement not terminated properly at line 1, near "/-/, \"hell"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[02:04] <slavik> rakudo: my $a, my $b = split /\-/, "hello-bah"; say $a, $b;

[02:04] <p6eval> rakudo 32742: OUTPUT[␤]

[02:04] <slavik> rakudo: my $a, my $b = split /\-/ "hello-bah"; say $a, $b;

[02:04] <p6eval> rakudo 32742: OUTPUT[Statement not terminated properly at line 1, near "\"hello-bah"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[02:04] <wayland76> azawawi: to rephrase what I think he means by "demo", is that he wants to make as many examples as possible

[02:04] <slavik> yes

[02:04] <slavik> rakudo: my $a, my $b = split /w/ "hellowbah"; say $a, $b;

[02:04] <p6eval> rakudo 32742: OUTPUT[Statement not terminated properly at line 1, near "\"hellowbah"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[02:04] <slavik> hmm, what am I doing wrong there?

[02:05] <slavik> rakudo: my $a, my $b = split /w/, "hellowbah"; say $a, $b;

[02:05] <p6eval> rakudo 32742: OUTPUT[␤]

[02:05] <slavik> why isn't that working?

[02:05] <wayland76> rakudo: my $a, my $b = split(/w/, "hellowbah"); say $a, $b;

[02:05] <p6eval> rakudo 32742: OUTPUT[␤]

[02:05] <slavik> rakudo: (my $a, my $b) = split /w/, "hellowbah"; say $a, $b;

[02:05] <p6eval> rakudo 32742: OUTPUT[Method 'lvalue' not found for invocant of class 'PAST;Stmts'␤current instr.: 'parrot;PAST;Compiler;as_post' pc 2924 (src/PAST/Compiler.pir:742)␤]

[02:05] <azawawi> slavik: lvalues do not work yet in rakudo

[02:05] <wayland76> rakudo: my $a; my $b; ($a, $b) = split(/w/, "hellowbah"); say $a, $b;

[02:05] <p6eval> rakudo 32742: OUTPUT[Method 'lvalue' not found for invocant of class 'PAST;Stmts'␤current instr.: 'parrot;PAST;Compiler;as_post' pc 2924 (src/PAST/Compiler.pir:742)␤]

[02:05] <azawawi> rakudo: my ($a, $b);

[02:06] <p6eval> rakudo 32742: RESULT[Method 'perl' not found for invocant of class 'Signature'␤current instr.: '_block11' pc 37 (EVAL_15:15)␤]

[02:06] <slavik> rakudo: my ($a, $b) = split /w/, "hellowbah"; say $a, $b;

[02:06] <p6eval> rakudo 32742: OUTPUT[Method 'lvalue' not found for invocant of class 'PAST;Stmts'␤current instr.: 'parrot;PAST;Compiler;as_post' pc 2924 (src/PAST/Compiler.pir:742)␤]

[02:06] <azawawi> rakudo: my $a, $b; # this should work

[02:06] <slavik> hmm, is there a not using strict?

[02:06] <p6eval> rakudo 32742: OUTPUT[Scope not found for PAST::Var '$b'␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 152 (src/PCT/HLLCompiler.pir:104)␤]

[02:06] <azawawi> rakudo: my $a; my $b; # this should work

[02:06] <p6eval> rakudo 32742: RESULT[undef]

[02:07] <azawawi> slavik: my ($a, $b) -> my $a; my $b; # to make it work

[02:07] <slavik> rakudo: my $a; my $b; ($a, $b) = split /w/, "hellowbah"; say $a, $b;

[02:07] <p6eval> rakudo 32742: OUTPUT[Method 'lvalue' not found for invocant of class 'PAST;Stmts'␤current instr.: 'parrot;PAST;Compiler;as_post' pc 2924 (src/PAST/Compiler.pir:742)␤]

[02:08] <slavik> I basically want that ... looks like @list = split works though

[02:08] <slavik> will use that for now ...

[02:09] *** wknight8111 left
[02:10] <azawawi> slavik: btw, you can '/msg p6eval' privately to test things

[02:10] <slavik> azawawi: well I want you to see what I was doing :)

[02:10] <slavik> besides, I have rakudo installed

[02:11] <slavik> and pugs

[02:11] <slavik> pugs from cabal and rakudo from svn

[02:11] <slavik> although I am 100+ revs behind

[02:11] <azawawi> evalbot control version

[02:11] <p6eval> This is evalbot revision 23014

[02:11] <slavik> rakudo:

[02:11] <slavik> rakudo: ;

[02:11] <p6eval> rakudo 32742: RESULT[Null PMC access in find_method()␤current instr.: '_block11' pc 37 (EVAL_12:15)␤]

[02:11] <slavik> there

[02:12] <slavik> mine is 326xx

[02:12] <slavik> will update it shortly

[02:16] <slavik> rakudo: say "blah" * 2;

[02:16] <p6eval> rakudo 32742: OUTPUT[0␤]

[02:16] <slavik> aww

[02:17] <slavik> would be neat that if a string was an operand of an arithmetic operator, it would return the identity for that operation

[02:22] *** kanru joined
[02:29] <meppl> good night

[02:30] <slavik> night

[02:34] *** meppl left
[02:34] *** kanru left
[02:34] <azawawi> @tell TimToady should i be removing nodes like routine_declarator__S_114method from redspans trees?

[02:34] <lambdabot> Consider it noted.

[02:36] <slavik> ok ... I need some help with a point block

[02:36] <slavik> to make it more terse and unreadable

[02:36] <slavik> I have @pairs where each element is in the form of \w+=\w+

[02:37] <slavik> I would like to do something like the following: for map {split /\=/, $_ } @pairs -> $key, $value { say $key, $value; }

[02:39] <azawawi> slavik: im not really familiar with that... maybe with moritz_ comes...

[02:39] <slavik> k

[02:39] <slavik> basically I want to do a for BLOCK -> var, var

[02:39] <slavik> or some sort

[02:40] <azawawi> hmmm have tried looking at 99problems (http://feather.perl6.nl/~azawawi/html/examples/99problems/)

[02:40] <lambdabot> Title: Index of /~azawawi/html/examples/99problems

[02:41] <azawawi> s/have/have you/

[02:41] <slavik> hmm, no

[02:41] <slavik> what is that?

[02:41] <azawawi> http://www.ic.unicamp.br/~meidanis/courses/mc336/2006s2/funcional/L-99_Ninety-Nine_Lisp_Problems.html

[02:41] <lambdabot> Title: L-99: Ninety-Nine Lisp Problems, http://tinyurl.com/tt9e7

[02:42] <slavik> err, they aren't perl6 ... :P

[02:42] <azawawi> the first link are re-written in perl6

[02:42] <slavik> oh

[02:42] <azawawi> s/are/is

[02:42] <slavik> meh

[02:42] <azawawi> im still sleepy ;-)

[02:44] *** kanru joined
[02:45] <azawawi> @tell TimToady i stopped using is_routine, is_type, how about using @baseroutinenames and @basetypenames directly?

[02:45] <lambdabot> Consider it noted.

[02:46] *** bacek joined
[02:47] <pugs_svn> r23029 | azawawi++ | [STD_syntax_highlight] quote -> dark magenta

[02:47] <pugs_svn> r23029 | azawawi++ | [STD_syntax_highlight] package_declarator -> dark red

[02:48] <pugs_svn> r23030 | azawawi++ | [STD_syntax_highlight] stop using is_routine and is_type

[02:50] *** kisu joined
[02:52] <pugs_svn> r23031 | azawawi++ | [STD_syntax_highlight] package_declaractor->bold red (for --ansi-text)

[02:53] <azawawi> @tell TimToady after looking at param_var, i noticed that we have 2 trees for buffer '$STOP' in 'method TOP ($STOP = undef) {'

[02:53] <lambdabot> Consider it noted.

[02:57] *** [particle] joined
[03:01] *** sri_kraih left
[03:05] <s1n> pmichaud: ping

[03:08] *** armagad left
[03:20] *** azawawi left
[03:22] *** justatheory left
[03:27] *** Patterner1 joined
[03:27] *** [particle] left
[03:35] *** kisu_ joined
[03:37] *** nacho joined
[03:40] *** kisu left
[03:44] *** Patterner left
[03:44] *** Patterner1 is now known as Patterner

[03:58] *** nacho left
[04:02] *** kisu_ left
[04:03] *** kisu_ joined
[04:04] *** kisu_ is now known as kisu

[04:19] *** kane__ left
[04:20] *** kanru left
[04:26] *** kanru joined
[04:28] *** bacek_ joined
[04:31] *** bacek left
[04:32] *** azawawi joined
[04:39] *** kisu left
[04:54] *** kane_ joined
[04:55] *** ab5tract joined
[04:55] *** stephenos joined
[05:02] *** ab5tract left
[05:07] <azawawi> @tell moritz_ what's the best way in your opinion to compress <span id="tree_\d+"> in --full-html=- STD_syntax_highlight output?

[05:07] <lambdabot> Consider it noted.

[05:07] * azawawi work &

[05:07] *** azawawi left
[05:22] *** alc joined
[05:33] <xinming> 34

[05:33] <xinming> wrong window, sorry.

[05:44] *** bacek joined
[05:47] *** penk joined
[06:23] *** mberends left
[06:23] *** DemoFreak joined
[06:31] *** bsdperl joined
[06:36] *** slavik left
[06:42] *** ashizawa joined
[06:48] *** iktome joined
[06:48] <iktome> join #ruby

[06:50] *** araujo left
[07:10] *** adc_penner joined
[07:16] *** cotto left
[07:23] *** stephenos left
[07:56] *** pbuetow joined
[08:00] *** elmex joined
[08:15] *** bacek_ left
[08:17] *** bacek_ joined
[08:21] *** iblechbot joined
[08:29] *** schmalbe joined
[08:34] *** pbuetow left
[08:35] *** SamB left
[08:43] *** apeiron left
[08:45] *** Ehtyar joined
[08:52] *** apeiron joined
[08:55] *** bacek left
[09:07] *** apeiron left
[09:14] *** DemoFreak left
[09:17] *** adc_penner left
[09:21] *** zamolxes left
[09:23] *** c9s_ left
[09:29] *** ejs joined
[09:37] *** alc left
[09:45] *** Ehtyar left
[10:00] *** tomyan joined
[10:09] *** kisu joined
[10:11] *** araujo joined
[10:12] *** apeiron joined
[10:12] *** smg left
[10:28] *** kisu_ joined
[10:34] *** kisu left
[10:40] *** ruoso left
[10:43] *** Ehtyar joined
[10:49] *** Bzek joined
[10:55] *** cognominal left
[10:56] *** Bzek left
[11:00] *** Bzek joined
[11:12] *** kisu__ joined
[11:17] *** kisu_ left
[11:36] *** alc joined
[11:42] *** smg joined
[11:56] *** lichtkind joined
[11:56] <lichtkind> is there anywhere material about elf?

[12:03] *** kisu__ left
[12:06] *** rindolf joined
[12:12] *** kisu joined
[12:17] *** kanru left
[12:24] *** mj41 left
[12:25] *** yves left
[12:26] *** kanru joined
[12:31] *** SamB joined
[12:31] *** lisppaste3 left
[12:31] *** lisppaste3 joined
[12:37] *** iblechbot left
[12:40] *** sri_kraih joined
[12:44] *** cognominal joined
[12:56] *** Lorn joined
[13:01] *** penk left
[13:03] *** lichtkind left
[13:12] *** ejs left
[13:14] *** ejs joined
[13:20] *** yves joined
[13:23] *** pmurias joined
[13:24] *** iblechbot joined
[13:45] *** ashizawa left
[13:48] *** pmurias left
[14:12] *** bacek__ joined
[14:14] *** bacek_ left
[14:26] *** rindolf left
[14:36] *** |Jedai| joined
[14:38] <moritz_> re

[14:38] <lambdabot> moritz_: You have 5 new messages. '/msg lambdabot @messages' to read them.

[14:54] *** Jedai left
[14:56] *** ejs_ joined
[14:56] *** ejs left
[15:00] *** kanru left
[15:01] *** iktome left
[15:03] *** kanru joined
[15:03] *** kisu left
[15:03] *** kisu_ joined
[15:10] *** Exodist joined
[15:11] *** kisu_ is now known as kisu

[15:18] *** rdice joined
[15:36] *** ruoso joined
[15:50] *** [particle] joined
[15:50] *** [particle]1 joined
[15:51] <ruoso> Hello!

[15:51] <[particle]1> hola

[15:52] *** [particle] left
[15:53] *** [particle]1 is now known as [particle]

[16:17] *** zamolxes joined
[16:18] <TimToady> @tell azawawi no, @baseroutinenames and @basetypenames are going away as soon as we implement a prelude to define them instead.  if the info you need isn't in the tree, it should be put there.

[16:18] <lambdabot> Consider it noted.

[16:18] *** rindolf joined
[16:20] <rakudo_svn> r32768 | infinoid++ | [rakudo] gen_junction_pir.pl can use strict and warnings.

[16:29] *** meppl joined
[16:30] *** schmalbe left
[16:32] *** justatheory joined
[16:48] *** stephenos joined
[16:50] *** kisu left
[16:50] <rakudo_svn> r32770 | japhb++ | [Rakudo] Add languages/perl6/tools/rebase-rakudo.pl

[16:50] <rakudo_svn> r32770 | japhb++ | 

[16:50] <rakudo_svn> r32770 | japhb++ | * Add rebase-rakudo.pl, a tool to make rebase/rebuild/test

[16:50] <rakudo_svn> r32770 | japhb++ |   of Parrot/Rakudo more "fire and forget".

[16:50] <rakudo_svn> r32772 | japhb++ | [Rakudo] Set svn props on rebase-rakudo.pl

[16:50] *** kisu joined
[16:51] *** masak joined
[16:52] <masak> ok, given that we don't have list slices in Perl 6 yet, what's the easies way to take a list slice?

[16:52] <masak> rakudo: my @a = 0, 10, 20, 30, 40, 50; say @a[1,3,5]

[16:52] <p6eval> rakudo 32769: OUTPUT[30␤]

[16:52] <masak> (Rakudo currently treats the index as a scalar)

[16:52] *** spx2 left
[16:53] *** spx2 joined
[16:54] *** ejs_ left
[16:55] <masak> rakudo: sub slice(@a, @i) { my @res; for @i.values -> $ix { @res.push(@a[$ix]) }; return @res }; my @a = 0, 10, 20, 30, 40, 50; say slice(@a, [1, 3, 5])

[16:55] <p6eval> rakudo 32769: OUTPUT[103050␤]

[16:55] *** hercynium left
[16:58] <masak> workarounds++

[16:59] <TimToady> we've got list slices in Perl 6, but not in perl6

[17:00] <rakudo_svn> r32774 | infinoid++ | [rakudo] Add copyright line and $Id$ to rebase-rakudo.pl.

[17:00] <TimToady> pugs: my @a = 0, 10, 20, 30, 40, 50; say @a[1,3,5]

[17:00] <p6eval> pugs: No output (you need to produce output to STDOUT)

[17:00] <TimToady> hmm

[17:00] <masak> Pugs has been doing that for a few days,

[17:00] <masak> at least here on #perl6

[17:00] <TimToady> well, works here orz

[17:00] <masak> we've got list slices in Perl 6, but not on #perl6 :P

[17:01] <TimToady> perl6: my @a = 0, 10, 20, 30, 40, 50; say @a[1,3,5]

[17:01] <p6eval> pugs: No output (you need to produce output to STDOUT)

[17:01] <p6eval> ..elf 23014: OUTPUT[Useless use of a constant in void context at (eval 117) line 4.␤50␤]

[17:01] <p6eval> ..rakudo 32769: OUTPUT[30␤]

[17:01] <TimToady> std: my @a = 0, 10, 20, 30, 40, 50; say @a[1,3,5]

[17:01] <p6eval> std 23014: OUTPUT[Use of uninitialized value $file in open at Cursor.pm line 151.␤Use of uninitialized value $file in concatenation (.) or string at Cursor.pm line 151.␤parse failure␤]

[17:01] <TimToady> heh

[17:02] <masak> STD has been doing that for a few days, too.

[17:02] <TimToady> bot rot

[17:05] <masak> rakudo: say "bit rot".subst(/i/, <o>)

[17:05] <p6eval> rakudo 32769: OUTPUT[bot rot␤]

[17:06] <masak> <o>

[17:14] *** zamolxes left
[17:16] *** ejs joined
[17:24] <masak> rakudo: my $l; for 1..2 -> $t { $l = $l // $t; say $l; $l = $t } # found a bug

[17:24] <p6eval> rakudo 32775: OUTPUT[1␤1␤]

[17:24] <masak> wait, nvm.

[17:24] <masak> that's correct :/

[17:30] *** hercynium joined
[17:30] *** kisu left
[17:31] *** macae joined
[17:32] *** kisu joined
[17:35] <masak> @tell pmichaud The strange thing about http://nopaste.snit.ch/14615 is that $last_linetype doesn't keep its value between the two iterations in the for loop.

[17:35] <lambdabot> Consider it noted.

[17:36] *** masak left
[17:47] *** pbuetow joined
[18:00] *** japhb__ left
[18:17] *** kisu left
[18:22] *** japhb joined
[18:25] *** ejs left
[18:34] *** zamolxes joined
[18:41] *** rindolf left
[18:42] *** alc left
[18:52] *** rindolf joined
[18:56] *** macae left
[19:05] *** tomyan left
[19:05] *** smtms left
[19:08] *** exodist_ joined
[19:08] *** Exodist left
[19:13] *** smtms joined
[19:16] *** mberends joined
[19:23] *** smg left
[19:23] *** DemoFreak joined
[19:43] *** spx2 left
[19:44] *** spx2 joined
[20:00] *** rindolf left
[20:00] *** adc_penner joined
[20:00] *** Lorn left
[20:01] *** aindilis joined
[20:06] *** jferrero joined
[20:28] *** adc_penner2 joined
[20:32] *** adc_penner left
[20:36] *** Bzek left
[20:45] *** masak joined
[20:46] <masak> .

[20:53] *** smg joined
[21:08] *** rdice left
[21:11] <pugs_svn> r23032 | moritz++ | [t/spec] test for RT #60528

[21:13] *** c1rcuit joined
[21:20] <rakudo_svn> r32781 | moritz++ | [rakudo] '!FAIL'() when Str.substr index is out of bound, instead of throwing

[21:20] <rakudo_svn> r32781 | moritz++ | an exception. Patch courtesy by Vasily Chekalkin, bacek++

[21:36] *** perl7 joined
[21:43] *** ruoso left
[21:47] <spx2> could this be true ?

[21:47] <spx2> http://www.catonmat.net/blog/wp-content/uploads/2008/11/larry-wall-quick-and-dirty.jpg

[21:52] <masak> spx2: it's at least not as punny as TimToady usually is

[22:03] *** wknight8111 joined
[22:08] <spx2> will perl6 have threads or will it be the same scary improvisation that perl5 is ?

[22:11] <pmichaud> spx2:  I think the current design is that there's an explicit  'hyper' keyword that says you want the following operation(s) to be performed in parallel.

[22:11] <lambdabot> pmichaud: You have 3 new messages. '/msg lambdabot @messages' to read them.

[22:16] *** ZuLuuuuuu joined
[22:16] *** adc_penner2 left
[22:17] *** jferrero left
[22:21] *** perl7 left
[22:21] <spx2> I gotta tell ya , some crazy shit going on in those synopsis ... 

[22:21] * spx2 covers eyes

[22:22] <masak> spx2: anything special you want to ask about them?

[22:25] <spx2> masak: yes,if the language will be learnable by human beeings

[22:25] <masak> spx2: I'm programming in it right now.

[22:25] <masak> it's not a problem.

[22:26] <masak> (as far as I know, I'm a human being.)

[22:29] <wknight8111> ...or a very clever bot

[22:33] <masak> what's the difference?

[22:38] *** c1rcuit left
[22:40] <literal> spx2: the format of the synopses aren't ideal for learning, but they are ideal for language implementors...

[22:41] <spx2> literal: oh yes, that escaped me

[22:42] <masak> it's like very concentrated juice.

[22:42] <literal> the apocalypses and exegeses are more fun to read

[22:43] <literal> they cover they "why is it like this?" and the "how can I make use of it?" parts

[22:43] <PerlJam> Although both are a bit dated

[22:43] <literal> yeah

[22:44] <PerlJam> The Exegesis on Rules in particular could use an update.

[22:46] <ZuLuuuuuu> I don't know the discussion but you can also get the "Perl 6 and Parrot Essentials" book which is a more polished look into the language

[22:48] <PerlJam> Yeah, that book is a good parrot reference and a broad intro to perl 6.

[22:48] <PerlJam> (also a bit dated :)

[22:50] <literal> it's available free online somewhere

[22:50] <literal> parrot/pugs svn or somewhere, don't remember

[22:54] *** iblechbot left
[22:56] *** pbuetow left
[23:10] *** ruoso joined
[23:12] <ruoso> Hello!

[23:13] <masak> y0

[23:14] *** rdice joined
[23:17] *** bacek_ joined
[23:18] *** bacek__ left
[23:22] *** Limbic_Region joined
[23:24] *** hercynium left
[23:34] <wayland76> rakudo: say "yo-yo".subst(/o/, 0)

[23:34] <p6eval> rakudo 32783: OUTPUT[y0-yo␤]

[23:34] <wayland76> So how do we do a global subst?

[23:35] <masak> wayland76: know about .trans ?

[23:36] <masak> rakudo: say "yo-yo".trans( [ "o" => "0" ] )

[23:36] <p6eval> rakudo 32783: OUTPUT[y0-y0␤]

[23:37] <masak> moritz_++ taught me that.

[23:40] *** masak left
[23:41] <literal> rakudo: say "bla.trans(a => 'o')

[23:41] <p6eval> rakudo 32783: OUTPUT[Statement not terminated properly at line 1, near "\"bla.trans"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[23:41] <literal> rakudo: say "bla.trans([a => 'o'])

[23:41] <p6eval> rakudo 32783: OUTPUT[Statement not terminated properly at line 1, near "\"bla.trans"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[23:41] <literal> rakudo: say "bla.trans('a' => 'o')

[23:41] <p6eval> rakudo 32783: OUTPUT[Statement not terminated properly at line 1, near "\"bla.trans"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[23:42] <literal> rakudo: say "bla.trans(['a' => 'o'])

[23:42] <p6eval> rakudo 32783: OUTPUT[Statement not terminated properly at line 1, near "\"bla.trans"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[23:42] <literal> I fail

[23:42] <literal> rakudo: say "bla".trans(a => 'o')

[23:42] <p6eval> rakudo 32783: OUTPUT[bla␤]

[23:42] <literal> rakudo: say "bla".trans('a' => 'o')

[23:42] <p6eval> rakudo 32783: OUTPUT[blo␤]

[23:42] <literal> no autoquoting?

[23:45] <TimToady> rakudo: say "yo-yo".subst(/o/, 0, :global)

[23:45] <p6eval> rakudo 32783: OUTPUT[y0-yo␤]

[23:45] <TimToady> rakudo: say "yo-yo".subst(/o/, 0, :g)

[23:45] <p6eval> rakudo 32783: OUTPUT[y0-yo␤]

[23:45] <TimToady> oh well

[23:46] <pmichaud> we don't do :g yet :-(

[23:46] <pmichaud> although I think there's a patch in the queue for it.

[23:46] <pmichaud> If so I'll see about applying it.  If not I have plenty of people who could write it.

[23:57] *** DemoFreak left
