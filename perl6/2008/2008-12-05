[00:00] <rakudo_svn> r33495 | jonathan++ | [rakudo] When we see a proto routine, mark it :multi() so it ends up in the Perl6MultiSub and set a proto property on it.

[00:00] <rakudo_svn> r33496 | jonathan++ | [rakudo] Some initial work on proto support. This finds and extracts the proto from the other candidates, and if there is an ambiguity or we don't have any applicable candidates then we hand back the proto instead. This patch also adds a mixing bit of documentation and fixes a

[00:00] <rakudo_svn> ..memory leak that could happen if we ended up with a circularity in the narrowness graph (need to free memory up before throwing the exception).

[00:01] <pugs_svn> r24154 | jnthn++ | [t/spec] Some simple tests for proto, which aren't related to operators.

[00:04] *** Exodist left
[00:05] *** smg joined
[00:10] <rakudo_svn> r33497 | jonathan++ | [rakudo] Add S06-multi/proto.t, which has some tests we pass and has been fudged.

[00:11] *** DemoFreak joined
[00:13] *** vixey left
[00:18] *** dr_df0 left
[00:29] *** [particle]1 joined
[00:33] *** TimToady joined
[00:33] *** f00li5h joined
[00:34] <[particle]1> sigh. i can't remember how to match a repeated pattern in the same regex

[00:34] <[particle]1> token foo { $<sym>=[\w+] ... $<sym> } doesn't seem to work

[00:35] *** [particle] left
[00:38] *** alester left
[00:49] <[particle]1> timtoady: got a distracted sec to remind me of the syntax for the above?

[00:49] <[particle]1> i wanna match 'ABC foo ABC'

[00:50] <TimToady> that should work

[00:50] <lambdabot> TimToady: You have 2 new messages. '/msg lambdabot @messages' to read them.

[00:50] <[particle]1> rats. thanks.

[01:03] *** elmex left
[01:05] *** DemoFreak left
[02:05] *** eternaleye joined
[02:12] <mncharity> "You have reached the answering machine of Murphy.  I am out of the office until tomorrow.  Please leave your name, number, and project, and I'll be happy to break it tomorrow.  Beeep."

[02:21] *** stephens left
[02:31] <pugs_svn> r24155 | putter++ | [rx_on_re] Instead of the AST directly emitting rx engine runtime subs, it now emits p5 code which creates them later.  No regressions.

[02:31] <pugs_svn> r24155 | putter++ | STD_blue-based elfx now runs /a/.match("bac") (but still returns a non-elf rx_on_re Match class), and passes its first rx_on_re/t/ tests.

[02:45] <literal> perl6: say «oh h\»i»

[02:45] <p6eval> pugs: OUTPUT[ohh»i␤]

[02:45] <p6eval> ..rakudo 33499: OUTPUT[Statement not terminated properly at line 1, near "\x{ab}oh h\\\x{bb}i\x{bb}"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[02:45] <p6eval> ..elf 24155: OUTPUT[Parse error in: /tmp/4JAp577RWb␤panic at line 1 column 0 (pos 0): Can't understand next input--giving up␤WHERE: say «oh h\»i»␤WHERE:/\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:76:in `scan_unitstopper'␤  STD_red/std.rb:224:in `comp_unit'␤  STD_red/std.rb:210:in

[02:45] <p6eval> .....

[02:46] <mncharity> well, that went smoothly.  Match unification and fleshing out blue AST->IR next I think.  should be able to start it tomorrow.

[02:48] <literal> perl6: say <<oh h\>i>>

[02:48] <p6eval> elf 24155: OUTPUT[o␤]

[02:48] <p6eval> ..pugs, rakudo 33499: OUTPUT[ohh>i␤]

[02:55] *** mncharity left
[03:18] *** Psyche^ joined
[03:25] *** ChanServ sets mode: +o TimToady

[03:25] <diakopter> help alias

[03:25] <diakopter> erm

[03:26] <diakopter> /help alias I mean

[03:26] <buu> 18

[03:31] *** Patterner left
[03:31] *** Psyche^ is now known as Patterner

[03:34] *** ChanServ sets mode: +o buu

[03:35] *** ChanServ sets mode: -o buu

[03:42] *** alester joined
[04:11] *** Limbic_Region left
[04:15] *** IRSeekBot joined
[04:23] *** jhorwitz left
[05:45] *** Aisling left
[05:45] *** Aisling joined
[06:17] *** justatheory joined
[06:17] *** japhb left
[06:18] *** japhb joined
[06:37] *** ashizawa joined
[06:53] <pugs_svn> r24156 | hinrik++ | [util/perl6.vim] treat sigils, twigils, and package scope separately from variable names, improve numbers, autoquoting, strings, and a bunch of other fixes

[06:57] *** Hinrik left
[06:58] *** alester left
[07:36] *** iblechbot joined
[07:43] <pugs_svn> r24157 | moritz++ | [t/spec] some unfudges for rakudo

[07:43] *** charsbar joined
[07:44] *** dalek left
[07:46] *** dalek joined
[07:47] *** PerlJam left
[07:47] *** PerlJam joined
[07:48] *** ingy left
[07:48] *** wolverian left
[07:48] *** wolverian joined
[07:48] *** charsbar_ left
[07:54] *** DemoFreak joined
[07:56] *** ingy joined
[07:56] *** japhb left
[07:58] *** japhb joined
[08:04] <literal> perl6: say <1e-9

[08:04] <p6eval> rakudo 33499: OUTPUT[␤]

[08:04] <p6eval> ..elf 24157: OUTPUT[Parse error in: /tmp/w3Q6ed5bp4␤panic at line 1 column 5 (pos 5): Error in quotesnabber␤WHERE: say <1e-9␤WHERE:     /\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:1307:in `quotesnabber'␤  (eval):1:in `__quote_2074984'␤  STD_red/prelude.rb:406:in `block in

[08:04] <p6eval> ..longest_...

[08:04] <p6eval> ..pugs: OUTPUT[*** ␤    Unexpected end of input␤    expecting "\\", variable name, ">" or "<"␤    at /tmp/DCIfRbrEB8 line 2, column 1␤]

[08:34] *** smtms left
[08:42] *** elmex joined
[08:43] *** smg left
[09:14] <moritz_> rakudo: class Foo { has $bar; method baz($baz) { given ($baz) { foo($baz, $bar); } } }

[09:14] <p6eval> rakudo 33502: No output (you need to produce output to STDOUT)

[09:16] <moritz_> rakudo: class Foo { has $bar; method baz() { given (1) { foo($bar); } } }; say '2'

[09:16] <p6eval> rakudo 33502: No output (you need to produce output to STDOUT)

[09:21] *** kane_ joined
[09:29] *** zamolxes left
[09:46] *** jferrero joined
[10:10] *** meppl joined
[10:13] *** smg joined
[10:16] *** dr_df0 joined
[10:22] *** spx2 left
[10:23] *** spx2 joined
[10:47] *** masak joined
[10:58] *** zamolxes joined
[11:06] *** masak left
[11:14] *** mj41_ left
[11:21] *** zamolxes left
[11:21] *** zamolxes joined
[11:23] *** kanru left
[11:27] *** kanru joined
[11:30] *** ejs joined
[11:38] *** nothingmuch joined
[12:04] *** thei0s1 left
[12:08] <pugs_svn> r24158 | jnthn++ | [t/spec] Unfudge a .match test for Rakudo and add a few more.

[12:10] <rakudo_svn> r33504 | jonathan++ | [rakudo] Fix our ability to smart-match against Match (which checks the LHS is of type Match).

[12:14] *** masak joined
[12:14] *** ashizawa left
[12:27] *** sri_kraih joined
[13:25] *** thei0s joined
[13:33] *** kane__ joined
[13:37] *** vixey joined
[13:41] *** kane_ left
[14:05] *** jferrero left
[14:13] *** sri_kraih left
[14:16] *** jan_ left
[14:32] *** gbacon left
[14:35] *** jhorwitz joined
[14:36] *** xinming_ left
[14:48] *** iblechbot left
[15:06] *** dr_df0 left
[15:07] *** iblechbot joined
[15:10] *** rindolf joined
[15:10] *** ejs1 joined
[15:14] *** Exodist joined
[15:16] *** jferrero joined
[15:17] *** alester joined
[15:17] <alester> http://perlbuzz.com/2008/12/database-access-in-perl-6-is-coming-along-nicely.html

[15:17] *** xinming joined
[15:20] *** ejs left
[15:21] *** Lorn joined
[15:23] *** xinming left
[15:38] *** xinming joined
[15:44] *** ejs2 joined
[15:44] *** jan_ joined
[15:45] *** PZt left
[15:51] *** ejs1 left
[15:59] *** eternaleye left
[16:03] *** eternaleye joined
[16:05] *** exodist_ joined
[16:14] *** cognominal left
[16:15] *** ejs2 left
[16:16] *** PZt joined
[16:17] *** DemoPhreak joined
[16:22] *** Exodist left
[16:23] *** eternaleye left
[16:26] *** gbacon joined
[16:28] *** cognominal joined
[16:28] *** stephens joined
[16:30] *** DemoFreak left
[16:36] <pugs_svn> r24159 | moritz++ | [docs] update feather/syn_index.html, pmichaud++

[16:41] <moritz_> the irc logs will go down in a few minutes (server reboot)

[16:41] <moritz_> rakudo: say 3.WHO

[16:41] <p6eval> rakudo 33513: OUTPUT[Method 'WHO' not found for invocant of class 'Int'␤current instr.: '_block11' pc 23 (EVAL_13:15)␤]

[16:43] *** apeiron_ joined
[16:46] *** moritz joined
[16:46] *** IRSeekBot left
[16:48] *** adc_penner joined
[16:51] *** meteorjay joined
[16:54] *** DemoFreak joined
[16:54] *** apeiron left
[17:01] *** apeiron_ is now known as apeiron

[17:06] *** xuser left
[17:09] *** kane_ joined
[17:10] *** DemoPhreak left
[17:10] *** kane__ left
[17:12] *** lambdabot left
[17:17] *** lambdabot joined
[17:18] *** smtms joined
[17:20] <rakudo_svn> r33515 | pmichaud++ | [rakudo]:  spectest-progress.csv update: 228 files, 4710 passing, 0 failing

[17:23] *** meteorjay left
[17:25] *** adc_penner2 joined
[17:26] *** rindolf left
[17:27] *** smg left
[17:30] *** ruoso joined
[17:36] *** ilbot2 joined
[17:38] *** moritz_ joined
[17:41] *** adc_penner left
[17:42] *** moritz left
[17:49] <ruoso> Hello!

[17:49] * ruoso trying to backlog since yesterday...

[18:02] *** zamolxes left
[18:43] *** apeiron left
[18:57] *** smg joined
[19:20] <rakudo_svn> r33524 | jonathan++ | [rakudo] Switch us from using Perl6Str to using Str. Either this, one of the Parrot changes that were required to make this work or something else entirely means we are failing a couple of tests in S02-builtin_data_types/bool.t. These relate to expecting an isa test for Int is

[19:20] <rakudo_svn> ..a Num to work (it works with smartmatch, where we override the Num proto's ACCEPTS to specially handle this, but they aren't actually in a type relationshp); not sure how that test ever passed, and if we're really testing isa rather than just some kind of wider acceptance, I'm not completely sure

[19:20] <rakudo_svn> ..they're correct.

[19:23] <pugs_svn> r24160 | jnthn++ | [t/spec] Unfudge 'is also on Str' test.

[19:24] *** Lorn left
[19:34] <ruoso> wow... now *that*'s a big commit message ;)

[19:35] <moritz_> I'm pretty sure that 'isa_ok(3.2, Int)' is wrong

[19:52] <moritz_> http://perlgeek.de/blog-en/perl-6/tidings-2008-12.html

[19:53] <moritz_> (if you have comments/corrections, I'll backlog)

[19:53] *** dr_df0 joined
[19:54] <ruoso> moritz_++

[19:56] *** apeiron joined
[20:11] *** ft joined
[20:24] *** apeiron_ joined
[20:28] * ruoso later &

[20:28] *** ruoso left
[20:29] *** apeiron left
[20:29] *** apeiron_ is now known as apeiron

[20:40] *** ruoso joined
[20:52] <pugs_svn> r24161 | moritz++ | [t/spec] some corrections and fudges

[21:03] <pugs_svn> r24162 | moritz++ | [t/spec] sqrt.t fudging

[21:12] *** dr_df0 left
[21:17] <pugs_svn> r24163 | moritz++ | [t/spec] Int conforms to Num, but still !Int.isa(Num)

[21:19] *** ryanc left
[21:20] <pugs_svn> r24164 | moritz++ | [t/spec] fix mis-spelled type names, and fudge for rakudo accordingly

[21:20] *** justatheory left
[21:21] <meppl> good night

[21:22] <pugs_svn> r24165 | moritz++ | [t/spec] skip a few more Inf/Nan tests for rakudo that will fail once the type

[21:22] <pugs_svn> r24165 | moritz++ | registry is in place

[21:22] *** meppl left
[21:23] <pugs_svn> r24166 | moritz++ | [t/spec] more skipping of Inf/NaN tests

[21:35] *** meteorjay joined
[21:48] *** smg left
[21:51] *** [particle]1 left
[21:56] *** [particle] joined
[22:11] *** Southen joined
[22:15] *** alester left
[22:15] <masak> moritz_: is it still ok(eval('...')), or is that written somehow else nowadays?

[22:16] *** Southen_ left
[22:17] <moritz_> masak: there's eval_lives_ok and eval_dies_ok

[22:18] *** lambdabot left
[22:18] <moritz_> masak: but not all old code has to be ported, if it still works

[22:18] <moritz_> (ie returns true from the eval)

[22:18] <masak> moritz_: ok.

[22:19] *** clkao_ joined
[22:20] *** clkao left
[22:20] *** lambdabot joined
[22:23] *** pasteling left
[22:27] *** pasteling joined
[22:38] *** mncharity joined
[22:40] <rakudo_svn> r33527 | jonathan++ | [rakudo] Fix lookup of attributes in nested scopes of methods when they are declared twigilless.

[22:42] <mncharity> rakudo: "bac" ~~ /a/

[22:42] <p6eval> rakudo 33525: RESULT[{}]

[22:42] <mncharity> rakudo: ("bac" ~~ /a/).perl

[22:42] <p6eval> rakudo 33525: RESULT["\{}"]

[22:43] * mncharity wonders what he's missing...

[22:43] <masak> mncharity: what are you expecting?

[22:43] <mncharity> a Match object?

[22:43] <masak> well, isn't it?

[22:43] <mncharity> rakudo: ("bac" ~~ /a/).WHAT

[22:43] <p6eval> rakudo 33525: OUTPUT[Null PMC access in get_integer()␤current instr.: 'parrot;PGE;Match;get_bool' pc 522 (compilers/pge/PGE/Match.pir:337)␤]

[22:44] <masak> whoa!

[22:44] <mncharity> ?

[22:44] <masak> mncharity: submit a bug report :)

[22:44] <masak> don't we have tests for that?

[22:44] <moritz_> we should :()

[22:45] <masak> yarr.

[22:45] <mncharity> that would be a yak too far.  the only question was, if array-ness was independent of hash-ness, I'd unify rx_on_re's Match directly into elf's, but if not, or uncertain, I'll leave the separate for now.  I think.

[22:46] * masak submits the rakudobug, then

[22:47] *** ruoso left
[22:49] *** rhr_ joined
[22:55] <masak> perl6: say do given 1 { when 1 { 1 }; default { 5 } } # what should this print?

[22:55] <p6eval> elf 24166: OUTPUT[Can't locate object method "cb__Given" via package "EmitSimpleP5" at ./elf_f line 1561.␤]

[22:55] <p6eval> ..rakudo 33527: OUTPUT[5␤]

[22:55] <p6eval> ..pugs: OUTPUT[1␤]

[22:55] <moritz_> 1

[22:56] <masak> is it a known flaw in Rakudo?

[22:56] <moritz_> it's a known "feature" that rakudo tries all 'when' blocks instead of leaving the scope

[22:56] <masak> ah, right.

[22:56] * masak remembers now

[22:57] <masak> then I guess I'll use an array of closures instead.

[22:57] <moritz_> #57652

[22:57] <moritz_> [BUG] successfull 'when' does not skip the following tests.

[22:58] <masak> yeah.

[22:59] * moritz_ calls it a day, TTFN folks

[22:59] *** rhr left
[23:01] *** ryanc joined
[23:08] *** adc_penner2 left
[23:08] *** masak left
[23:15] *** exodist_ left
[23:15] *** Exodist joined
[23:18] *** smg joined
[23:19] *** smg left
[23:34] *** slavik joined
[23:34] <slavik> rakudo: say "hello"

[23:34] <p6eval> rakudo 33527: OUTPUT[hello␤]

[23:34] <slavik> rakudo: say 1..5 Z 6..10

[23:34] <p6eval> rakudo 33527: OUTPUT[16273849510␤]

[23:35] <slavik> rakudo: my %hash 1..5 Z 6..10; say %hash.perl;

[23:35] <p6eval> rakudo 33527: OUTPUT[Statement not terminated properly at line 1, near "1..5 Z 6.."␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[23:35] <slavik> rakudo: my %hash = 1..5 Z 6..10; say %hash.perl;

[23:35] <p6eval> rakudo 33527: OUTPUT[{"1" => 6, "2" => 7, "3" => 8, "4" => 9, "5" => 10}␤]

[23:38] <slavik> rakudo: my %hash = 1..5 Z 6..8; say %hash.perl;

[23:38] <p6eval> rakudo 33527: OUTPUT[{"1" => 6, "2" => 7, "3" => 8}␤]

[23:40] <mncharity> drat.  out of time.  working to remove Match overloading from rx_on_re, as part of unifying its Match class(es) with elf's.  back at it Monday.  cheers.  &

[23:41] *** mncharity left
[23:49] *** vixey left
[23:54] *** xuser joined
[23:55] *** Limbic_Region joined
