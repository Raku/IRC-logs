[00:02] <mncharity> "bootstraps on gimme5".  "self-compiles using STD.pm".  "one step left".  not really.  "synced with STD.pm".  "next, running STD.pm".

[00:02] <mncharity> masak: fun question, conversation.  thanks :)

[00:02] <masak> perhaps the fact that I can't think of a big feature I'd really like to have right now is a sign that I've internalized the current limitations of Rakudo. :)

[00:02] <masak> mncharity: thank you.

[00:03] <mncharity> :)  I'm off (running late).  g'night all.  &

[00:03] *** mncharity left
[00:09] *** nacho joined
[00:09] *** kst` left
[00:09] *** kst` joined
[00:10] *** eternaleye left
[00:12] *** Limbic_Region joined
[00:16] *** vixey left
[00:31] *** nacho left
[00:47] *** cdavaz joined
[00:49] *** ChrisDavaz left
[00:56] <ab5tract> masak, do you have any plans for November that extend it past the level of present day wikis?

[00:56] <masak> ab5tract: depends on what you mean.

[00:56] <masak> first, I'd like it to _reach_ the level of present day wikis. :)

[00:57] <ab5tract> not that i know what these features might be

[00:57] <ab5tract> ah, yes, i can understand that :)

[01:02] <ab5tract> masak, consider yourself forked.

[01:03] <masak> ab5tract: cool.

[01:03] <ab5tract> It's past time I got my hands dirty on some Rakudo.

[01:04] <masak> ab5tract: right now, what I aim for is a broad coverage of common markups, starting with MediaWiki.

[01:04] <masak> ab5tract: are you on the November mailing list?

[01:04] <ab5tract> No. Is it google group'ble?

[01:05] <masak> aye. http://groups.google.com/group/november-wiki

[01:05] <lambdabot> Title: november-wiki | Google Groups

[01:23] *** smg joined
[01:23] *** cathyal joined
[01:23] <cathyal> hi

[01:24] <cathyal> anyone up for some haskell?

[01:24] *** Ehtyar left
[01:24] <meppl> good night

[01:25] *** meppl left
[01:27] <slavik> masak: check out my site, been hacking wordpress and dtabds :)

[01:30] <masak> slavik: url?

[01:37] <slavik> masak: bcacm.org/~slavik

[01:38] *** PZt left
[01:38] <slavik> first I had to hack the tabs to look like that, then had to hack the plugin that did it so that the pop up menu displayed correctly

[01:39] <masak> slavik: it's a bit of a slow load.

[01:40] <slavik> masak: my college's network is crap :(

[01:40] <masak> slavik: I'll get back to you when it's loaded. :)

[01:43] <slavik> heh

[01:44] <masak> slavik: ...which it still hasn't.

[01:44] <slavik> :(

[01:46] <masak> indeed. maybe you should consider hosting it somewhere else.

[01:46] <slavik> masak: but where?

[01:47] <masak> slavik: depends on your needs, I guess.

[01:47] <slavik> masak: I will prolly host it at home, 40KB upload and ports not blocked, but haven't set the system up

[01:47] <masak> mm

[01:47] <slavik> btw, I have full access to that server

[01:53] *** ZuLuuuuuu left
[01:56] *** kanru left
[01:57] *** kanru joined
[01:57] <masak> I don't have any, it seems. it still hasn't loaded.

[02:00] *** kst` left
[02:00] *** kst` joined
[02:04] <slavik> hmm

[02:04] <slavik> :(

[02:04] <slavik> masak: has it loaded now?

[02:05] <masak> nope.

[02:06] <slavik> you use OSX?

[02:07] <slavik> 130.238.45.242 - - [29/Nov/2008:20:30:45 -0500] "GET /~slavik/ HTTP/1.1" 200 19207 "-" "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit/525.18 (KHTML, like Gecko) Version/3.1.2 Safari/525.20.1"

[02:07] <masak> aye. that's me.

[02:07] <slavik> :(

[02:23] <masak> note to self: trying to rebuild Rakudo and do `make test` on November simultaneously -- doesn't really work.

[02:24] <slavik> lol

[02:25] <masak> slavik: where are you based?

[02:26] <slavik> =nyc

[02:27] <masak> still Saturday over there?

[02:27] <slavik> yes

[02:28] <slavik> rakudo: {say $^a, $^bb} for je, jne, jg, jge, jl, jle Z =, !=, >, >=, <, <=

[02:28] <p6eval> rakudo 33359: OUTPUT[Statement not terminated properly at line 1, near "=, !=, >, "␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[02:28] <masak> it's quite late here in Europe, bordering on early.

[02:28] <slavik> rakudo: {say $^a, $^bb} for qw(je, jne, jg, jge, jl, jle) Z qw(=, !=, >, >=, <, <=)

[02:28] <p6eval> rakudo 33359: OUTPUT[je,=,␤jne,!=,␤jg,>,␤jge,>=,␤jl,<,␤jle<=␤]

[02:28] <masak> slavik: the commas become part of the words, do you really want that?

[02:28] <slavik> rakudo: {say $^a~" is "~$^b} for qw(je jne jg jge jl jle) Z qw(= != > >= < <=)

[02:28] <p6eval> rakudo 33359: OUTPUT[je is =␤jne is !=␤jg is >␤jge is >=␤jl is <␤jle is <=␤]

[02:29] <slavik> hehe

[02:29] <masak> nice.

[02:29] <masak> I didn't know we had qw()

[02:30] <slavik> err, q, qw is ' and "" I think

[02:30] <slavik> or w/e

[02:30] <masak> nono, I know what they are.

[02:30] <slavik> qw() has been there since at least Perl5 :P

[02:30] <masak> I just didn't know Rakudo had them.

[02:30] <slavik> why wouldn't it be in Perl6?

[02:30] <masak> slavik: I know what they are.

[02:30] <slavik> I am messing with you ;)

[02:31] <masak> right.

[02:31] * masak needs sleep

[02:31] <slavik> wait, so what did you do everytime you needed to qw() ???

[02:31] <masak> I just used <> like normal Perl 6 programmers :)

[02:32] <slavik> >.<

[02:32] <masak> I did!

[02:32] <slavik> does Perl6 allow defining operators?

[02:32] <masak> sure.

[02:32] <slavik> NICE!

[02:32] <slavik> we should define !

[02:32] <masak> see the part in the spec about defining operators :)

[02:33] <slavik> masak: you expect me to read it?

[02:33] <masak> slavik: oh please, that's been done to death :)

[02:33] <slavik> I expect you to feed it to me :P

[02:33] <masak> slavik: yes. many times.

[02:33] <slavik> rakudo: say 5!;

[02:33] <p6eval> rakudo 33359: OUTPUT[Statement not terminated properly at line 1, near "!;"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[02:33] <slavik> :(

[02:33] <masak> slavik: you need to define it first.

[02:33] <slavik> I know, making sure it isn't defined

[02:34] <slavik> rakudo: sub fac($x) {return 1 if $x == 0; return $x*fac($x-1);}; say fac(5);

[02:34] <p6eval> rakudo 33359: OUTPUT[120␤]

[02:34] <slavik> awesome

[02:35] <slavik> now, let's define ! ...

[02:37] <masak> you can't really do that in Rakudo yet. (I think.)

[02:37] <masak> you can in Pugs, though.

[02:37] <masak> or used to be able to, at least.

[02:40] <masak> now -- sleep

[02:40] <masak> g'night.

[02:40] *** masak left
[02:45] *** apeiron left
[03:01] *** ab5tract left
[03:02] *** cathyal left
[03:08] *** apeiron joined
[03:23] *** Psyche^ joined
[03:28] *** kst` left
[03:28] *** kst` joined
[03:35] *** Limbic_Region left
[03:39] *** Patterner left
[03:39] *** Psyche^ is now known as Patterner

[03:48] *** DemoFreak left
[03:55] <avar> rakudo: sub fac($x) { [*] 1 .. $x }; say fac(5);

[03:55] <p6eval> rakudo 33359: OUTPUT[Statement not terminated properly at line 1, near "1 .. $x };"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[03:55] <avar> rakudo: sub fac($x) { [*] 1..$x }; say fac(5);

[03:55] <p6eval> rakudo 33359: OUTPUT[Statement not terminated properly at line 1, near "1..$x }; s"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[03:55] <avar> rakudo: sub fac($x) { [*] (1..$x) }; say fac(5);

[03:55] <p6eval> rakudo 33359: OUTPUT[Statement not terminated properly at line 1, near "(1..$x) };"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[03:55] <avar> rakudo: say [1..5].perl

[03:55] <p6eval> rakudo 33359: OUTPUT[[1, 2, 3, 4, 5]␤]

[03:56] <avar> rakudo: say [*] 1,2

[03:56] <p6eval> rakudo 33359: OUTPUT[Statement not terminated properly at line 1, near "1,2"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[03:57] <avar> rakudo: say eval "1*2";

[03:57] <p6eval> rakudo 33359: OUTPUT[2␤]

[03:57] <avar> sub fac($x) { eval(join("*", 1..$x)) }; say fac(5);

[03:57] <avar> rakudo: sub fac($x) { eval(join("*", 1..$x)) }; say fac(5);

[03:57] <p6eval> rakudo 33359: OUTPUT[120␤]

[03:57] <avar> poor man's hyperop:)

[04:01] *** elmex left
[04:02] *** elmex joined
[05:16] *** kst` left
[05:16] *** kst`` joined
[05:20] <buu> Uh oh, it's an avar.

[05:35] <slavik> ?

[05:35] <slavik> avar: nice one

[05:46] *** xinming_ joined
[05:55] *** xinming left
[06:26] *** slavik left
[06:38] *** eternaleye joined
[06:51] *** meppl joined
[06:52] <meppl> good morning

[07:03] <literal> morning

[07:03] <pugs_svn> r24113 | hinrik++ | [util/perl6.vim] highlight contextualizers, operators, plus various small improvements

[07:07] *** sri_kraih_ left
[07:10] *** kst`` left
[07:10] *** kst``` joined
[07:15] *** bsdperl joined
[07:18] *** iblechbot joined
[07:29] *** jimmy__ joined
[07:33] <jimmy__> rakudo: <Hello>.say

[07:33] <p6eval> rakudo 33360: OUTPUT[Hello␤]

[07:38] *** justatheory joined
[07:40] *** iblechbot left
[07:42] *** jimmy____ joined
[07:42] *** jimmy____ left
[07:55] *** mncharity joined
[07:58] *** apeiron_ joined
[07:58] *** vixey joined
[08:00] <mncharity>  /me knows it's late when meppl says good morning...

[08:00] *** jimmy__ left
[08:01] <mncharity> masak: re things for a third person to work on...  an important but quite hard one might be helping TimToady with STD/gimme5.

[08:07] <mncharity> g'night all &

[08:07] <pugs_svn> r24114 | putter++ | [STD_green] Flesh out Makefile infrastructure for parsing STD.pm.

[08:07] <pugs_svn> r24114 | putter++ | [STD_blue] Adapt to STD.pm:  warn of untagged nodes, instead of dying; and clip cycles more quickly.  Doesn't dump yet.

[08:07] *** mncharity left
[08:10] *** apeiron left
[08:17] *** justatheory left
[08:17] *** apeiron_ is now known as apeiron

[08:18] *** xinming joined
[08:34] *** xinming_ left
[08:39] *** justatheory joined
[09:07] *** apeiron left
[09:16] *** iblechbot joined
[09:36] *** eternaleye_ joined
[09:37] *** eternaleye left
[09:44] *** kst```` joined
[09:44] *** kst``` left
[09:51] *** kanru left
[09:51] *** kanru joined
[09:52] *** kanru left
[10:06] *** kanru joined
[10:08] *** kanru left
[10:11] *** kanru joined
[10:31] *** DemoFreak joined
[11:09] *** justatheory left
[11:12] *** smg left
[12:09] *** sri_kraih joined
[12:18] *** xinming left
[12:29] *** kst```` left
[12:29] *** kst````` joined
[12:42] *** smg joined
[12:49] *** ZuLuuuuuu joined
[13:24] *** ZuLuuuuuu left
[13:37] *** riffraff joined
[14:09] *** ruoso joined
[14:13] <ruoso> Hello!

[14:14] * ruoso speaking directly from his new laptop... still has a lot of work to do to get it in shape for development

[14:16] * ruoso .oO ( (unbranded laptops)++ )

[14:21] *** pmurias joined
[14:21] <ruoso> hi pmurias 

[14:21] <pmurias> ruoso: hi

[14:23] <ruoso> pmurias, any progress on the PCLCoro thingy?

[14:24] *** justatheory joined
[14:25] <pmurias> i'm planning to code it now

[14:25] <ruoso> cool

[14:26] <ruoso> I should be a little bit unproductive in the next week or two

[14:26] <pmurias> configuring your new laptop? ;)

[14:27] <ruoso> yeah... and also taking care of my newborn ;)

[14:27] <pmurias> is it ok to make PCL a required dependency?

[14:28] <ruoso> for now, sure...

[14:28] <ruoso> we then can figure out how to make that dependencies external later

[14:30] <ruoso> that will probably happen when we have proper module loading

[14:34] *** adc_penner joined
[14:38] *** Southen_ joined
[14:46] *** hercynium joined
[14:47] *** riffraff left
[14:52] <pmurias> ruoso: is there a tool we could easily use to determin which revision introduced the leak?

[14:52] *** drbean_ left
[14:53] <ruoso> pmurias, well... one could checkout an arbitrary revision in the past and run make tets

[14:53] *** masak joined
[14:53] <ruoso> and then going forward until the leak appears

[14:54] *** drbean joined
[14:56] *** Southen left
[14:56] <masak> ooh, I know of a module I will write to change the grammar of Perl 6: one that does pattern matching. so then I can write `my ($a => $b, $c) = (1 => 2, 3);` when assigning names to things in data structures with known shape.

[14:57] <pmurias> ruoso: choosing an arbitary revision means using binary search ;)

[14:57] <ruoso> heh... yeah... kindof

[14:58] *** kst````` left
[14:58] *** kst````` joined
[14:59] *** thei0s joined
[15:03] *** apeiron joined
[15:05] <pugs_svn> r24115 | pmurias++ | [smop] added a stub of the PCL coroutine interpreter

[15:17] *** xinming joined
[15:17] *** IRSeekBot left
[15:35] *** riffraff joined
[15:35] *** jan_ left
[15:35] *** riffraff left
[15:42] *** adc_penner2 joined
[15:44] *** adc_penner left
[15:44] *** DemoFreak left
[15:44] *** jferrero left
[15:44] *** preflex left
[15:44] *** rhr left
[15:44] *** japhb left
[15:44] *** jjore left
[15:45] *** preflex joined
[15:45] *** c1sung joined
[15:45] *** Aisling left
[15:45] *** jfredett joined
[15:46] *** rhr joined
[15:47] *** DemoFreak joined
[15:57] *** japhb joined
[15:57] *** jjore joined
[15:59] *** xuser left
[16:00] <rakudo_svn> r33370 | pmichaud++ | [rakudo]: spectest-progress.csv update: 227 files, 4653 passing, 48 failing

[16:00] *** jferrero joined
[16:05] *** hercynium left
[16:26] *** jan__ joined
[16:31] *** sri_kraih_ joined
[16:45] *** pmurias left
[16:47] *** sri_kraih left
[17:13] *** kst````` left
[17:13] *** kst````` joined
[17:20] *** ruoso left
[17:37] *** ruoso joined
[17:41] *** smg left
[18:01] *** Limbic_Region joined
[18:07] *** Limbic_Region left
[18:27] *** Aisling joined
[18:27] *** Aisling left
[18:28] *** Aisling joined
[18:31] *** ruoso left
[18:35] *** masak left
[18:51] <pugs_svn> r24116 | hinrik++ | [util/perl6.vim] fix problem with contextualizers

[18:54] <pugs_svn> r24117 | hinrik++ | [util/perl6.vim] a better fix

[19:07] *** [particle] joined
[19:10] *** [particle]2 left
[19:10] *** pugs_svn left
[19:10] *** cookys left
[19:10] *** lisppaste3 left
[19:11] *** cookys joined
[19:11] *** smg joined
[19:12] *** pugs_svn joined
[19:14] <literal> what does the KitchenSink role do?

[19:15] <moritz_> re

[19:24] <pugs_svn> r24118 | moritz++ | [util/smartlinks.pl] account for new synopsis filenames, and delete code to

[19:24] <pugs_svn> r24118 | moritz++ | update them from svn.perl.org

[19:25] *** kst````` left
[19:25] *** kst````` joined
[19:28] *** pbuetow joined
[19:30] <pugs_svn> r24119 | hinrik++ | [util/perl6.vim] improved highlighting of variables and builtin types, and some more comments

[19:47] <pugs_svn> r24120 | moritz++ | [t] some test and smartlink fixes

[19:49] *** donaldh joined
[19:49] <pugs_svn> r24121 | moritz++ | [t/spec] remove rakudo fudge markers because no test passes anyway (comment.t)

[20:05] *** pcbuetow joined
[20:15] *** pbuetow left
[20:26] <pugs_svn> r24122 | moritz++ | [t/spec] regression tests for RT #60898 (ranges + infix:<Z>)

[20:35] *** xuser joined
[20:35] *** slavik joined
[20:35] *** nvteighen joined
[20:35] <slavik> rakudo: say "hello nvteighen"

[20:35] <p6eval> rakudo 33376: OUTPUT[hello nvteighen␤]

[20:36] <nvteighen> Another perl-bot?

[20:36] <slavik> perl6 bot :)

[20:36] * nvteighen was playing with some at #perl

[20:36] <nvteighen> so, I guess I'll have to download Perl6 from perl.org

[20:37] <slavik> pugs: sub fac ($x) { return 1 if $x == 0; return $x * fac($x-1); } say fac(100);

[20:37] <p6eval> pugs: OUTPUT[93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000␤]

[20:37] <slavik> nvteighen: :)

[20:38] <nvteighen> tail-recursive factorial à la SICP?

[20:38] <slavik> pugs is Perl6 on haskell, rakudo is perl6 on parrot, elf is minimal perl6 (to make perl6 compile perl6

[20:38] <slavik> yes

[20:38] <slavik> that is completely functional style :P

[20:38] <nvteighen> yup

[20:39] <slavik> nice, eh?

[20:39] <nvteighen> really nice

[20:39] <slavik> rakudo: say "hello" + 1

[20:39] <p6eval> rakudo 33376: OUTPUT[1␤]

[20:39] <slavik> rakudo: say "2" + 1

[20:39] <p6eval> rakudo 33376: OUTPUT[3␤]

[20:39] <slavik> ooh, how about this ...

[20:39] <nvteighen> hmm... that's the sort of stuff pmasiar hates

[20:41] <slavik> rakudo: my @list1 = 1..5; my @list2 = 6..10; my @list3 = 11..15; for @list1 Z @list2 Z @list3 -> $a, $b, $c { say "{$a} {$b} {$c} =="; }

[20:41] <p6eval> rakudo 33376: OUTPUT[1 6 11 ==␤2 7 12 ==␤3 8 13 ==␤4 9 14 ==␤5 10 15 ==␤]

[20:41] <slavik> boom baby

[20:41] <slavik> Z is infix zip operator

[20:41] <slavik> or how about the following

[20:42] <slavik> rakudo: my @list1 = 1..5; my @list2 = 6..10; my %hash = @list1 Z @list2; say %hash.perl;

[20:42] <p6eval> rakudo 33376: OUTPUT[{"1" => 6, "2" => 7, "3" => 8, "4" => 9, "5" => 10}␤]

[20:42] <slavik> nice, init?

[20:43] <slavik> take a list of keys and a list of values and BAM! you get a hash

[20:43] <nvteighen> wow

[20:43] <slavik> also ... .perl is awesome, it is like data dumper or printr() but native

[20:43] <nvteighen> printr()?

[20:43] <slavik> nvteighen: I did show you my overused grammar example, right?

[20:44] <slavik> nvteighen: from PHP

[20:44] <nvteighen> not that one... at least I don't remember it

[20:44] <slavik> rakudo: my $var = 1,[2, {"a"=>"b"}]; say $var.perl;

[20:44] <p6eval> rakudo 33376: OUTPUT[[1, [2, {"a" => "b"}]]␤]

[20:45] <nvteighen> well, that's near to a Lisp macro...

[20:45] <slavik> rakudo: my @var{a}[2]{b}[10] = 1; say @var.perl;

[20:45] <p6eval> rakudo 33376: OUTPUT[Statement not terminated properly at line 1, near "{a}[2]{b}["␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[20:45] <slavik> rakudo: my %var{a}[2]{b}[10] = 1; say @var.perl;

[20:45] <p6eval> rakudo 33376: OUTPUT[Statement not terminated properly at line 1, near "{a}[2]{b}["␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[20:45] <slavik> rakudo: my %var{a}[2]{b}[10] = 1; say %var.perl;

[20:45] <p6eval> rakudo 33376: OUTPUT[Statement not terminated properly at line 1, near "{a}[2]{b}["␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[20:45] <slavik> rakudo: my %var<a>[2]<b>[10] = 1; say %var.perl;

[20:45] <p6eval> rakudo 33376: OUTPUT[Could not find non-existent sub a␤current instr.: '_block11' pc 16 (EVAL_12:15)␤]

[20:45] <moritz_> slavik: I think that autovivification doesn't work properly yet

[20:46] <slavik> oh, ok

[20:46] <slavik> moritz_: bcacm.org/~slavik/

[20:46] <slavik> moritz_: my perl6 guide will compete with yours :P

[20:46] <slavik> aww

[20:46] <nvteighen> :D

[20:46] <moritz_> slavik: YaY, competition is always good ;)

[20:47] <slavik> moritz_: I already have a big working grammar that you've seen

[20:47] <slavik> I need to write up a chapter on operators

[20:47] <slavik> and hack wordpress some more, then eventually replace it with something written in perl6

[20:48] <slavik> nvteighen: there is also november, a wiki written in perl6 and it works now

[20:48] <slavik> although slow and crashes sometimes, but it is there already

[20:48] <nvteighen> so, Perl6 is slowly getting suitable for production?

[20:49] <slavik> yes

[20:49] <nvteighen> (looking at Py3.0...)

[20:49] <slavik> nvteighen: I'd say a year, maybe two until it is like ready ready (when rakudo passes the spec)

[20:50] <nvteighen> ok... I'll download it and look at it

[20:50] <slavik> ooh, nvteighen, here's a cool twist on the thing above

[20:50] <nvteighen> anyway, I'm currently trying to get Perl5

[20:51] <slavik> rakudo: my @list1 = 1..5; my @list2 = 6..10; my @list3 = 11..15; { say "{$^a} {$^c} {$^b}=="; }  for @list1 Z @list2 Z @list3;

[20:51] <p6eval> rakudo 33376: OUTPUT[too few arguments passed (0) - 1 params expected␤current instr.: '_block45' pc 433 (EVAL_14:134)␤]

[20:51] <slavik> rakudo: my @list1 = 1..5; my @list2 = 6..10; my @list3 = 11..15; { say "{$^a} {$^c} {$^b}=="; } for @list1 Z @list2 Z @list3;

[20:51] <p6eval> rakudo 33376: OUTPUT[too few arguments passed (0) - 1 params expected␤current instr.: '_block45' pc 433 (EVAL_14:134)␤]

[20:51] <slavik> hmm

[20:51] <slavik> rakudo: my @list1 = 1..5; my @list2 = 6..10; my @list3 = 11..15; { say "{$^a} {$^c} {$^b}=="; } for (@list1 Z @list2 Z @list3);

[20:51] <p6eval> rakudo 33376: OUTPUT[too few arguments passed (0) - 1 params expected␤current instr.: '_block45' pc 433 (EVAL_14:134)␤]

[20:52] <slavik> rakudo: my @list1 = 1..5; my @list2 = 6..10; my @list3 = 11..15; { say "{$^c} {$^b}=="; } for @list1 Z @list2;

[20:52] <p6eval> rakudo 33376: OUTPUT[too few arguments passed (0) - 1 params expected␤current instr.: '_block44' pc 386 (EVAL_14:122)␤]

[20:52] <slavik> hmm, guess that doesn't work yet

[20:52] <slavik> rakudo: my @list1 = 1..10;for @list1 -> $a, $b { say "{$b} {$a}=="; } 

[20:52] <p6eval> rakudo 33376: OUTPUT[2 1==␤4 3==␤6 5==␤8 7==␤10 9==␤]

[20:53] <slavik> nvteighen: makes sense?

[20:53] <slavik> rakudo: my @list1 = 1..10; { say "{$^b} {$^a}=="; } for @list1;

[20:53] <p6eval> rakudo 33376: OUTPUT[too few arguments passed (0) - 1 params expected␤current instr.: '_block34' pc 289 (EVAL_14:101)␤]

[20:53] <slavik> rakudo broke

[20:53] <slavik> that used to work

[20:53] <nvteighen> slavik: no

[20:53] <slavik> rakudo: my @list1 = 1..10; { say $^b, $^a, "=="; } for @list1;

[20:53] <p6eval> rakudo 33376: OUTPUT[21==␤43==␤65==␤87==␤109==␤]

[20:53] <slavik> oh, ok

[20:53] <slavik> anyway

[20:54] <slavik> for @list -> var list

[20:54] <slavik> that is a pointy block

[20:54] <slavik> so @list -> $a, $b will iterate two items at a time and stick them into $a and $b

[20:55] <nvteighen> oh, that's what you told me some days ago

[20:55] <slavik> but if you place the for loop block before the keywork for, the variables have to become $^a and $^b meaning that they are placeholders, then those variables are ordered according to alphabetical order and the proper number of stuff is grabbed from the list to fill them

[20:55] <slavik> yes

[20:56] <nvteighen> yuck!

[20:56] <slavik> Python cannot do that, in fact, no other language besides Perl6 can do that ... even for ($i, $j) (@list) will not work, I think

[20:56] <slavik> in Perl6

[20:57] <nvteighen> unless maybe some heavily-macrofied Lisp... I guess not

[20:57] *** xuser left
[20:57] *** masak joined
[21:00] *** jferrero left
[21:00] <slavik> anyway, time to go home

[21:00] *** slavik left
[21:01] *** nvteighen left
[21:06] *** xinming left
[21:09] *** smg left
[21:11] *** _albertux_ joined
[21:18] *** dr_df0 joined
[21:20] <dr_df0> hi, i'm not able to checkout the latest revision of pugs from http://svn.pugscode.org/pugs

[21:20] *** _albertux__ joined
[21:20] <dr_df0> the error is on file pugs/v6/smop/m0ld

[21:20] <dr_df0> is that known bug/

[21:20] <dr_df0> ?

[21:21] <moritz_> what error?

[21:21] <dr_df0> svn: In directory 'pugs/v6/smop/m0ld'

[21:21] <dr_df0> svn: Can't copy 'pugs/v6/smop/m0ld/.svn/tmp/text-base/m0ld.hs.svn-base' to 'pugs/v6/smop/m0ld/.svn/tmp/m0ld.hs.tmp.tmp': No such file or directory

[21:21] <moritz_> dr_df0: try rm -rf pugs/v6/smop/m0ld/ and then a new checkout

[21:22] <masak> dr_df0: I've seen other people be hit by that before.

[21:22] <moritz_> dr_df0: sounds like a local svn fuckup on your machine, that happens from time to time

[21:22] <dr_df0> I tried to checkout to a fresh directory

[21:22] <masak> don't know if they solved it, though.

[21:22] <masak> rakudo: say 4 ~~ [1,2,3,4,5]

[21:22] <p6eval> rakudo 33376: OUTPUT[Method 'ACCEPTS' not found for invocant of class 'Perl6Array'␤current instr.: 'infix:~~' pc 14261 (src/gen_builtins.pir:8657)␤]

[21:23] * masak files TODO rakudobug

[21:23] <moritz_> masak: what should it do?

[21:23] <masak> check elementness, methinks

[21:23] <masak> I'm checking now

[21:23] <masak> it shouldn't die, at least.

[21:23] <moritz_> that would be 4 ~~ any(...)

[21:23] <masak> hm. yes.

[21:24] * masak tries that

[21:24] <moritz_> Various proposed-but-deprecated smartmatch behaviors may be easily (and we hope, more readably) emulated as follows:

[21:24] <moritz_> Num     Array  array contains number  X.any

[21:24] <masak> mm

[21:24] <masak> seems I don't have any support for my expectation about itemness

[21:25] <masak> my brain must be running an old version of Perl 6.

[21:25] <moritz_> perl-5.10.0 runs the same old versin of Perl 6.

[21:27] <masak> there are worse things than being as outdated as Perl 5.10 :)

[21:27] <moritz_> aye

[21:27] *** vixey left
[21:27] <moritz_> man, people on perlmonks.org sometimes still report that they can only use perl-5.6.something

[21:29] <masak> poor souls.

[21:30] <moritz_> perl 5.6 is from March 2000, that's nealrly 9 years by now

[21:31] <masak> rakudo: my @a = 1,2,3,4,5; say 4 ~~ any(@a)

[21:31] <p6eval> rakudo 33376: OUTPUT[1␤]

[21:31] <masak> \o/

[21:33] <masak> rakudo: say [1,2,3,4] ~~ [1,2,3,4] # this should work, though

[21:33] <p6eval> rakudo 33376: OUTPUT[Method 'ACCEPTS' not found for invocant of class 'Perl6Array'␤current instr.: 'infix:~~' pc 14261 (src/gen_builtins.pir:8657)␤]

[21:33] * masak reports that TODO instaed

[21:33] <masak> s/ae/ea/

[21:35] * moritz_ curses whoever made the Sdd.html pages load so slow in FF 2

[21:37] *** _albertux_ left
[21:37] <masak> moritz_: that'd be azawawi.

[21:39] *** _albertux__ left
[22:14] *** elmex left
[22:16] *** donaldh left
[22:18] *** kst````` left
[22:18] *** justatheory left
[22:19] *** kst````` joined
[22:23] <meppl> good night

[22:25] *** meppl left
[22:39] *** smg joined
[22:51] *** Limbic_Region joined
[22:54] *** adc_penner2 left
[23:06] *** pcbuetow left
[23:10] *** eternaleye_ left
[23:12] *** eternaleye joined
[23:38] *** iblechbot left
[23:47] *** lisppaste3 joined
[23:48] *** dduncan joined
[23:57] *** DemoFreak left
[23:58] *** Khisanth joined
