[00:00] <TimToady> which renders tries completely unnecessary

[00:00] <Limbic_Region> forgive me for being completely ignorant here, but will this allow us to have variable width assertions?

[00:00] <TimToady> maybe someday someone will retrofit the autolexer to p5, I dunno

[00:01] <TimToady> um, not sure what you're asking, example?

[00:01] <Limbic_Region> just a second

[00:02] <TimToady> jnthn: looks like all the .*, .? etc method calls are missing as well

[00:02] <Limbic_Region> was pulling up perldoc perlre to make sure I got the verbiage correct

[00:03] <jnthn> TimToady: The other thing I was after in STD.pm (though maybe you already added this) is how to parse "my $thingy = -> $x { say $x }; ".

[00:03] <jnthn> Just the current random features that are on my mind. :-)

[00:04] <TimToady> that's handled under circumfix:<{ }>, where it calls <lambda>

[00:04] <TimToady> which includes both -> and <->

[00:05] *** Zygo left
[00:05] *** devogon left
[00:05] *** devogon joined
[00:06] *** Zygo joined
[00:06] <TimToady> and circumfix parses as a term

[00:06] <TimToady> though it's possible the <?before> is redundant there with what pblock already accepts...

[00:06] <Limbic_Region> look behind assertions in p5 have to be fixed width correct?  That is the limitation I am asking about

[00:06] <jnthn> TimToady: OK, you changed that recent-ish? Or maybe I missed it before...well, can get the Rakudo grammar in line with that anyway...

[00:06] <TimToady> Limbic_Region: yes, fixed

[00:07] <TimToady> jnthn: don't remember when I did that

[00:07] <TimToady> Limbic_Region: lookbehind is specced to run in reverse

[00:07] <jnthn> OK, well, thanks anyway. :-)

[00:07] <Limbic_Region> ah, clever

[00:07] <TimToady> so any node that can be matched in reverse may be used in a lookbehind

[00:08] <TimToady> biab &

[00:08] <Limbic_Region> TimToady - final question (for now).  Are there any whiz-bang features offered by any other product (PCRE for instance) that you know of not being addressed ?

[00:08] <Limbic_Region> TTFN

[00:10] *** Auzon left
[00:10] *** njbartlett left
[00:10] *** lumi left
[00:10] *** Maddingue left
[00:10] *** cognominal_ left
[00:10] *** BinGOs left
[00:10] *** Helios left
[00:10] *** marmic left
[00:10] *** jrockway left
[00:10] *** baest left
[00:10] *** pravus left
[00:11] *** iblechbot left
[00:11] *** Neophytos joined
[00:11] *** chialdo joined
[00:12] <chialdo> Hello.

[00:12] <chialdo> Is the general consensus in here that wealth a positive-sum phenomenon?

[00:12] <chialdo> is a*

[00:12] *** pbuetow left
[00:13] <chialdo> I can effectively argue that the worse off is one group the better off may be another.

[00:14] <chialdo> Yet I might also be able to argue nearly as effectively that the better off is one group the better off may be another.

[00:15] <chialdo> The general concensus among the economics taught and most accepted is that wealth is a creation game.

[00:19] *** monomorph left
[00:20] *** xinming left
[00:22] *** ludan left
[00:24] <dconway> would you stfu

[00:25] <chialdo> How can royalty exist if not for thousands of inferior servants revering that royalty?

[00:25] *** chialdo was kicked by TimToady (TimToady))
[00:28] <TimToady> Limbic_Region: well, some packages do approximate matching.  interestingly, TRE is one of them, which is what I'm using for my LTM

[00:28] <TimToady> though I need to look at their syntax for that and decide how it fits into p6 syntax

[00:31] <Limbic_Region> TRE = http://www.laurikari.net/tre/

[00:31] <lambdabot> Title: 169 TRE home page

[00:32] <Limbic_Region> ok, thanks

[00:34] *** cmarcelo joined
[00:36] *** lichtkind left
[00:36] <pugs_svnbot> r20007 | lwall++ | Missing .foo as term, noted by jnthn++

[00:36] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20007

[00:36] <lambdabot> Title: Changeset 20007 - Pugs - Trac

[00:36] <TimToady> jnthn: actually, the . variants are handled by <dotty>, which just has to be added to <noun>

[00:38] <TimToady> Limbic_Region: basically, they extend the syntax of {} quantifiers, which is inconsistent with the p6 approach, so we'll have to come up with some other syntax

[00:45] *** Auzon joined
[00:45] *** njbartlett joined
[00:45] *** lumi joined
[00:45] *** Maddingue joined
[00:45] *** cognominal_ joined
[00:45] *** BinGOs joined
[00:45] *** marmic joined
[00:45] *** jrockway joined
[00:45] *** baest joined
[00:45] *** pravus joined
[00:45] *** pbuetow joined
[00:51] *** nipotaway is now known as nipotan

[00:53] *** devogon left
[01:03] *** araujo left
[01:04] *** lyokato joined
[01:10] *** cnhackTNT joined
[01:27] *** Limbic_Region left
[01:35] *** justatheory left
[01:38] *** [particle] left
[01:39] *** [particle] joined
[01:39] *** cnhackTN1 joined
[01:40] *** tobeya left
[01:42] *** nothingmuch left
[01:42] *** nothingmuch joined
[01:43] *** cnhackTNT left
[01:45] *** alester joined
[01:49] *** zakame joined
[01:52] *** silug left
[02:06] *** PerlPilot is now known as PerlJam

[02:10] *** jferrero left
[02:16] *** zakame_ joined
[02:20] *** dconway left
[02:21] *** justatheory joined
[02:25] *** wtgee left
[02:26] *** justatheory left
[02:28] *** ntgrl joined
[02:28] <pugs_svnbot> r20008 | putter++ | misc/winter_jig/backend_bare_perl5: Now runs.  six_kp6_bare_p5 compiles 'say(3)'.

[02:28] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20008

[02:28] <lambdabot> Title: Changeset 20008 - Pugs - Trac

[02:39] *** integral left
[02:39] *** zakame left
[02:43] *** Helios joined
[02:49] *** DarkWolf84 joined
[03:03] *** zakame joined
[03:12] *** zakame_ left
[03:18] *** fridim_ joined
[03:20] *** zakame_ joined
[03:25] *** zakame_ left
[03:25] *** zakame__ joined
[03:27] *** zakame left
[03:28] *** GeJ left
[03:28] *** GeJ joined
[03:29] *** zakame__ is now known as zakame

[03:29] *** araujo joined
[03:39] *** chinsans joined
[04:04] *** Psyche^ joined
[04:04] *** Psyche^ is now known as Patterner

[04:04] *** Lunchy left
[04:18] *** zakame left
[04:18] *** RayMagini left
[04:21] *** RayMagini joined
[04:26] *** Lunchy joined
[04:39] *** zakame joined
[04:39] *** pcbuetow joined
[04:45] *** cmarcelo left
[04:51] *** pbuetow left
[04:54] *** bsb left
[05:03] *** wknight8111 left
[05:05] *** zakame left
[05:08] *** zakame joined
[05:18] *** eternaleye joined
[05:29] *** Neophytos left
[05:32] *** njbartlett left
[05:33] *** njbartlett joined
[05:38] *** Neophytos joined
[05:39] *** justatheory joined
[05:46] *** alc joined
[05:47] *** wtgee joined
[05:51] *** njbartlett left
[05:54] *** alester left
[05:57] *** DarkWolf84 left
[06:07] *** justatheory left
[06:08] *** justatheory joined
[06:09] *** justatheory left
[06:11] *** devogon joined
[06:25] *** penk joined
[06:32] *** wtgee left
[06:33] *** zakame left
[06:37] *** zakame joined
[06:38] *** zakame left
[06:39] *** xinming joined
[06:41] *** zakame joined
[07:10] *** fridim_ left
[07:11] *** fridim_ joined
[07:14] *** fridim_ left
[07:16] *** fridim_ joined
[07:17] *** njbartlett joined
[07:27] *** snooper joined
[07:36] *** masak joined
[07:39] *** pbuetow joined
[07:39] *** pcbuetow left
[07:44] *** njbartlett left
[07:48] *** ntgrl is now known as integral

[07:48] *** snooper left
[07:51] *** pcbuetow joined
[07:54] *** Aankhen`` joined
[08:02] *** pbuetow left
[08:05] *** dduncan joined
[08:12] *** iblechbot joined
[08:26] *** kanru left
[08:29] *** njbartlett joined
[08:30] *** kanru joined
[08:32] *** fridim_ left
[08:44] *** snooper joined
[08:45] *** chinsans left
[08:45] *** chinsans joined
[08:52] *** pcbuetow left
[08:57] *** njbartlett left
[08:58] *** pcbuetow joined
[09:08] *** snooper left
[09:23] *** Schwern left
[09:24] *** snooper joined
[09:25] *** zakame left
[09:31] *** ruoso joined
[09:33] *** pcbuetow left
[09:33] *** pcbuetow joined
[09:44] *** wknight8111 joined
[09:45] *** snooper left
[09:51] *** monomorph joined
[10:05] <ruoso> mncharity, s1p is just a subset of perl 6 that can be translated to C using the default smop interpreter implementation

[10:06] <ruoso> for instance... at this moment there is no lexical scopes and namespaces in somp

[10:06] <ruoso> so every symbol must be translated to its C implementation symbol

[10:07] <ruoso> and lexical variables must be translated to smop "frame" manipulations, like SMOP__SLIME__Capturize

[10:08] *** ebassi joined
[10:10] <ruoso> s1p is also specific to class definitions... so it will compile src-s1p/Object.pm to a C code that initializes the Object package and class...

[10:11] <ruoso> using p6opaque, which is the default representation for Perl 6 object

[10:11] <ruoso> s

[10:11] *** dduncan left
[10:12] <ruoso> each method will be added to the Object object using the REPR API

[10:12] <ruoso> the method will be the lowlevel method that I had implemented yesterday

[10:13] <ruoso> and the body of the method will be something like a set of sm0p blocks, except that it doesn't need to be translated to sm0p and then to C... it can be written directly in C

[10:13] <ruoso> of course I'll need to implement some lowlevel operations like "if"

[10:13] <ruoso> "for" 

[10:14] <ruoso> "if" will be an prototype that will have a "if", a "then" and an "else" attribute 

[10:14] <ruoso> where if, then and else are code objects

[10:15] <ruoso> and I will call "eval" on the "if"

[10:17] <ruoso> in theory, the condition of the if can be something implemented in anything... even p5 for instance

[10:17] <ruoso> as long as it complies to the API

[10:26] *** cnhackTN1 left
[10:40] *** njbartlett joined
[10:48] *** chris2 joined
[10:50] *** kanru left
[10:58] *** masak left
[10:59] *** kanru joined
[11:05] *** nipotan is now known as nipotaway

[11:07] *** njbartlett left
[11:26] *** alc left
[11:39] <rakudo_svn> r26069 | jonathan++ | [rakudo] Make it so you can write expressions such as my $x = <-> $y { ... }. Note that it should work for -> as well as <->, but at the moment the first is a parse error; my guess is that it's going for prefix:- rather than the longer token ->.

[11:51] <rakudo_svn> r26070 | jonathan++ | [rakudo] Make .foo call $_.foo.

[12:02] *** njbartlett joined
[12:20] *** lyokato left
[12:24] *** hanekomu joined
[12:31] *** wknight8111 left
[12:31] *** njbartlett left
[12:36] *** lyokato joined
[12:36] *** lyokato left
[12:38] *** xinming left
[12:38] *** xinming joined
[12:44] *** njbartlett joined
[12:57] *** penk left
[12:57] *** araujo left
[12:57] *** [particle] left
[12:57] *** Zygo left
[12:57] *** kst left
[12:57] *** cookys left
[12:57] *** orafu left
[12:57] *** rakudo_svn left
[12:57] *** pmichaud left
[12:57] *** buubot left
[12:57] *** smtms left
[12:57] *** sordith joined
[12:58] *** penk joined
[12:58] *** araujo joined
[12:58] *** [particle] joined
[12:58] *** Zygo joined
[12:58] *** kst joined
[12:58] *** cookys joined
[12:58] *** orafu joined
[12:58] *** rakudo_svn joined
[12:58] *** buubot joined
[12:58] *** pmichaud joined
[13:03] *** wknight8111 joined
[13:03] *** renormalist joined
[13:07] *** cmarcelo joined
[13:13] *** sordith_ left
[13:14] *** ruoso left
[13:16] *** eternaleye_ joined
[13:16] *** eternaleye left
[13:16] *** njbartlett left
[13:17] *** gbacon joined
[13:21] *** smtms joined
[13:32] *** cognominal_ left
[13:45] *** RichiH joined
[13:51] *** alester joined
[13:51] *** cognominal_ joined
[13:53] <RichiH> where should one put perl6 modules? /me will prolly want to work on a module over time so it might be ready once perl6 is

[13:56] <kolibrie> RichiH: right now most perl6 modules live in the pugs repo under ext

[13:57] *** thoughtpolice left
[14:01] *** cognominal_ left
[14:03] *** iblechbot left
[14:06] *** jhorwitz joined
[14:07] *** alester left
[14:11] <RichiH> kolibrie: ah, ok

[14:11] <RichiH> so i should try and get commit access for that subtree?

[14:12] <kolibrie> do you have a commit bit for the pugs repo?

[14:13] <RichiH> (also, i still hate that sigils are determind by what data structure you access to get at your data, not by what data you take out of said structure, but that will prolly not change back :p )

[14:13] <RichiH> kolibrie: i have nothing except an idea

[14:13] <RichiH> 'Commit access is handed out liberally; contact the Pugs team for details.' <- sounds good

[14:14] <kolibrie> RichiH: send me your e-mail address somehow and I'll send you a commit bit

[14:14] <RichiH> kolibrie: do i need to be able to send email from that address or is receiving OK?

[14:15] <kolibrie> RichiH: that's where commitbit will send you your login instructions

[14:15] <RichiH> k, so i can use my cpan alias. good :)

[14:17] <kolibrie> RichiH: hmm, says that nickname is in use (I left it blank) - which nickname would you like

[14:18] <kolibrie> RichiH: perhaps RichiH?

[14:18] <RichiH> yah, RichiH sounds fine

[14:19] <kolibrie> RichiH: sent

[14:19] <RichiH> ta

[14:20] <RichiH> and the second you say that, i get spam from "Lana Hairston" how she is bored tonight.. i am on to your secret identity

[14:20] <kolibrie> :)

[14:22] *** IRSeekBot left
[14:22] <kolibrie> RichiH: a good first commit is to add your name to AUTHORS, to make sure everything is working

[14:23] <RichiH> kk

[14:24] *** fridim_ joined
[14:28] *** IRSeekBot joined
[14:28] * RichiH mumbles about non-https signup forms

[14:29] <RichiH> also, https does not even die properly

[14:30] * kolibrie thinks https should work

[14:30] * RichiH thinks so, as well

[14:30] <RichiH> it doesn't, though :p

[14:30] *** silug joined
[14:31] <kolibrie> (I am on https://commitbit.pugscode.org)

[14:31] <lambdabot> Title: Welcome to CommitBit for PugsCode

[14:32] <RichiH> kolibrie: hmm, yah. when you replace the http with https on the link i got via mail, it does not work, though

[14:32] <kolibrie> RichiH: strange

[14:33] <RichiH> is there a paper on why the sigil handling was changed for perl6, btw?

[14:33] <RichiH> i really want to understand why that is being done

[14:33] <RichiH> and i can't think of any good reasons, myself

[14:33] <kolibrie> it's discussed in one of the synopsis

[14:36] *** eternaleye_ left
[14:37] <kolibrie> RichiH: looks like it is mentioned here, but not so much of the 'why': http://perlcabal.org/syn/S02.html#Names_and_Variables

[14:37] <lambdabot> Title: S02

[14:37] <allbery_b> summary:  the way sigils change based on usage is confusing.  I think the "why" is  in the apocalypse/exegesis

[14:38] <[particle]> 'why' is probably in A02

[14:39] <pmichaud> good morning, all

[14:40] * RichiH would argue that most people will either touch perl for a short time and then leave or, if they stick to it, will advance to intermediate within a year. in both cases, the adde complexity does not hurt that much and as soon as you understand the _why_, it makes moving data back and forth a lot easier -- but it's prolly too late for that, so i will just read the documents :)

[14:44] <[particle]> hey there pm!

[14:44] <[particle]> RichiH: did you get your commit bit? i can give you one, if not.

[14:45] *** mattz left
[14:46] <RichiH> [particle]: yes, i did, thanks

[14:46] <[particle]> welcome!

[14:48] *** Neophytos left
[14:50] *** Lorn_ joined
[14:51] *** Auzon left
[14:51] <RichiH> is feather.perl6.nl the only mirror of svn.pugscode.org? if yes, i would rather use that, as the ssl cert matches that host, not svn.pugscode.org

[14:52] <kolibrie> feather.perl6.nl is svn.pugscode.org

[14:52] *** ruoso joined
[14:52] <kolibrie> (svn.pugscode.org is an alias)

[14:52] <RichiH> yes, but is it the _only_ svn.pugscode.org?

[14:52] <[particle]> yes

[14:52] <RichiH> ah, yah, i could of just checked for cnames

[14:52] <RichiH> stupid me

[14:52] <RichiH> thanks

[14:56] *** Lorn left
[14:57] *** mattz joined
[15:01] *** Lorn joined
[15:01] *** ryakubo joined
[15:01] <ryakubo> hi

[15:01] <[particle]> hi

[15:04] *** alester joined
[15:04] <pugs_svnbot> r20009 | RichiH++ | * AUTHORS:

[15:04] <pugs_svnbot> r20009 | RichiH++ |   Adding myself as per kolibrie's suggestion to check if I can commit

[15:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20009

[15:04] <lambdabot> Title: Changeset 20009 - Pugs - Trac

[15:05] <RichiH> seems to of worked

[15:05] <kolibrie> RichiH++ # new pugs committer

[15:05] *** cognominal_ joined
[15:05] <RichiH> now on to my evil scheme for world domination

[15:06] <pmichaud> get in line.  :-)

[15:06] * RichiH realizes he did not even disclose his evil plan, yet

[15:06] <RichiH> basically, i want to create a package structure with loads of named regexps

[15:07] <RichiH> so that if you want to know if something is ipv4, you don't have to refer to your own library and/or google, any more

[15:07] <[particle]> like Regexp::Common in perl 5

[15:07] <pmichaud> sounds like a grammar :-)

[15:07] <[particle]> ...or  a set of grammars

[15:08] *** zamolxes joined
[15:08] <RichiH> basically

[15:09] <ryakubo> there's lolcode support in parrot?

[15:09] <RichiH> yes

[15:09] <RichiH> a full implementation, iirc

[15:09] <[particle]> i'm not sure it's complete yet, but it's close

[15:09] <ryakubo> ok that's awesome!

[15:09] <pmichaud> I CAN HAZ LOLCODE

[15:10] <ryakubo> that's reason enough to try and help out :P

[15:10] <RichiH> for some defintion of awesome ;)

[15:13] <ruoso> That (someone wanting to implement a non-core module) reminds me that there's no CPAN6 yet...

[15:13] *** renormalist left
[15:13] *** Lorn_ left
[15:13] <ruoso> it's probably better to keep the modules in pugs' svn for now... 

[15:14] <RichiH> ruoso: yah, that is why i just joined you lot :)

[15:17] *** mattz left
[15:18] *** mattz joined
[15:21] <RichiH> is Regexp::Named a good name?

[15:23] <ruoso> RichiH, considering Grammar is already a concept in Perl 6

[15:23] <ruoso> I don't think you need to have that in the name of the module

[15:23] *** iblechbot joined
[15:24] <RichiH> ruoso: i can't just name it Regexp, though

[15:24] *** meppl joined
[15:24] <[particle]> "regexp" is an old name, don't use it

[15:24] <ruoso> Grammar::Common::IPv4?

[15:24] <[particle]> we call them "regex" or "rule"

[15:24] <ruoso> Grammar::Common::Net::IPv4?

[15:26] <[particle]> Grammar::Common seems like a good name to me

[15:28] <ruoso> but considering that as a module namespace, more than the grammar name in itself

[15:36] <Tene> It's very close to complete.  I don't remember what's left, but it's not much.

[15:36] <Tene> lolcode, that is.

[15:38] <[particle]> i keep forgetting to poke jhorwitz to get mod_lolcode working

[15:39] <Tene> There's some new proposals for lolcode version 1.3

[15:40] <Tene> languages/lolcode implements 1.2

[15:42] *** mattz left
[15:44] <pugs_svnbot> r20010 | putter++ | misc/winter_jig/backend_bare_perl5/: refactoring.  Better, but still a work-in-progress.

[15:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20010

[15:44] <lambdabot> Title: Changeset 20010 - Pugs - Trac

[15:49] <mncharity> ruoso: ok.  once the winter_jig emitter infrastructure is a little more sane, I'll likely ask you for some test cases, what some simple thing (eg, 'say(3)', or maybe 'class A { sub f(){3} }; say(A.new().f())') should compile to, and then try to set you up with the start of an emitter which works at least on those cases.  but

[15:50] <ruoso> mncharity, yeah... I think I should do it in the s1p page in the wiki

[15:50] <mncharity> smop is going to be the first thing which requires real compilation, rather than just skimming an ast, and the infrastructure for that is still in the "fuzzy mental picture - no code" phase.  so, it may be some days.

[15:51] <ruoso> I'll take the class A { method f() { 3 } } example

[15:51] <ruoso> and try to sketch how it should look like in C

[15:51] <mncharity> :)

[15:51] *** mattz joined
[15:52] *** njbartlett joined
[16:00] *** peeps[work] joined
[16:02] *** hanekomu left
[16:10] *** marmic left
[16:13] *** marmic joined
[16:15] *** ryakubo left
[16:16] <ruoso> http://www.perlfoundation.org/perl6/index.cgi?distributionformat

[16:16] <lambdabot> Title: DistributionFormat / Perl 6

[16:16] <ruoso> I started some notes on how module distribution format would look like

[16:17] <pmichaud> ruoso: how does this mesh with the versioning information already defined in the synopses?

[16:18] <ruoso> I'm still just brainstorming it, but in theory minor version is invisible to that matter

[16:19] <pmichaud> also, are we necessarily going to be distributing binaries? 

[16:19] *** njbartlett left
[16:19] <pmichaud> I would think we'd distribute source

[16:19] <pmichaud> a-la CPAN

[16:20] <ruoso> nopes... the idea is to distribute only source

[16:20] <ruoso> but building a binary package before installing

[16:20] <pmichaud> wouldn't that be implementation specific, then?

[16:20] *** zamolxes left
[16:20] <ruoso> probably, but the concept remains

[16:20] <pmichaud> okay

[16:21] *** wtgee joined
[16:25] *** TJCRI joined
[16:25] *** mattz left
[16:25] *** mattz joined
[16:33] *** Lorn left
[16:38] *** fridim_ left
[16:41] <pugs_svnbot> r20011 | putter++ | misc/winter_jig/backend_bare_perl5/: fleshed out emitter infrastructure.

[16:41] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20011

[16:41] <lambdabot> Title: Changeset 20011 - Pugs - Trac

[16:49] *** zostay joined
[16:50] <ruoso> pmichaud, please take a look in the current version of that page

[16:51] <ruoso> I basically took the debian package concept and stripped down several things that might not be important to a perl module...

[16:51] <ewilhelm> 'architecture' is a list?

[16:51] <ruoso> yep...

[16:52] <ruoso> let's say your module compile on linux and macos, but not on win32

[16:52] <ewilhelm> you forgot 'configure_requires'

[16:52] <ruoso> configure_requires?

[16:52] <ruoso> what is it?

[16:53] <ewilhelm> that META.yml field tells the installer what has to be setup *before* trying to Build.PL/Makefile.PL

[16:53] <ruoso> oh... that is build-depends... 

[16:53] <ruoso> but it looks you're assuming compatibility with current package format

[16:54] <ruoso> and that's not the case...

[16:54] <ewilhelm> no, I'm pointing out something that has been a huge pain for not having had it originally

[16:54] <ruoso> but in theory, build-depends takes care of that

[16:54] <ewilhelm> how do you have platform-dependendent build-depends?

[16:55] <ruoso> I can get the debian schema for that

[16:55] <wolverian> I wonder if haskell's cabal spec would be useful too

[16:55] <ewilhelm> well, debian would configure_requires e.g. buildroot or whatever

[16:56] <ewilhelm> they have a fairly homogenous build environment, which is equivelant to having all of the low-level build tools in the core

[16:56] <ruoso> ewilhelm, not really

[16:56] <ruoso> several debian packages use custom building tools

[16:56] <ruoso> that are listed as build-depends

[16:57] <ruoso> like debhelper, cdbs

[16:57] <ewilhelm> when we're 5 years out and perl 6.1 core didn't have the new whiz-bang thing, how do you drag the environment up to date?

[16:57] <ruoso> ewilhelm, I'm just not saying your point... what case is not covered by build-depends?

[16:57] <ruoso> s/saying/seeing/

[16:58] <ewilhelm> wait, is everything statically determined by meta.yml?

[16:58] <ruoso> build-depends certainly yes

[16:58] <ewilhelm> Alias_: you here?

[16:58] <ewilhelm> ruoso: I think it needs to be more dynamic than that

[16:59] <ruoso> the build-depends?

[16:59] <ewilhelm> where is the './configure'-like process?

[16:59] <ruoso> implemented by each runtime

[16:59] <ruoso> Makefile.PL no longer belongs to the source package

[17:00] <ewilhelm> how's that going to work?

[17:00] <ruoso> each runtime knows what each "source part type" means

[17:00] <Alias_> ewilhelm: barely

[17:00] <ewilhelm> even ant has exec

[17:00] <ruoso> ant is compared to make

[17:01] <ruoso> what I'm describing here would be compared to automake

[17:01] <ewilhelm> you're drafting something that looks way more like ant than a makefile

[17:01] <ewilhelm> so we're stuck with whatever build support is in the original runtime?

[17:02] <ruoso> nopes... that's what build-depends are for

[17:02] <ewilhelm> is build-depends an array or string?

[17:02] *** justatheory joined
[17:02] <ruoso> well, it's in a text file... so it's a stirng... ;)

[17:02] <ruoso> but it sure is a list of items

[17:03] <ewilhelm> the installer would install that list of items and then what?

[17:03] <ruoso> and then that list of items could declare new "source part types"

[17:03] <ewilhelm> hand-off the 'source' section to the first one in the list?

[17:04] <ruoso> it's a plugin-like system

[17:04] <ewilhelm> where does 'different actions on different platforms' fit into it?

[17:04] <ewilhelm> the plugin has to deal with that?

[17:04] <ruoso> by platform you mean architecture or runtime?

[17:05] <ruoso> or both?

[17:05] <ruoso> and which kind of action are you talking about?

[17:05] <ewilhelm> both and/or neither depending on whether everything the package needs is provided via the runtime

[17:06] <ewilhelm> for instance, Wx::ActiveX only works on windows, but Wx::Mozilla tends not to work so well there

[17:06] <ewilhelm> so the dependency changes depending on the platform (for some value of 'platform')

[17:07] <ruoso> you mean that all this parts are part of the same source package?

[17:08] <ruoso> but, you do have how to have conditional build-depends on the architecture and runtime

[17:08] <ewilhelm> no, they're dependencies

[17:08] <ruoso> depends: Wx::ActiveX [arch:win32], Wx::Mozilla [!arch:win32]

[17:09] <ruoso> that's how debian deals with it

[17:09] <ewilhelm> ok, and build-depends has that same syntax?

[17:09] <ruoso> yep

[17:10] <ruoso> but that makes me think that we should probably have a test-depends as well

[17:23] *** wtgee left
[17:32] *** njbartlett joined
[17:35] <ewilhelm> ruoso: yeah, test-depends

[17:35] <ewilhelm> we never did hammer-out recommends in the p5 world

[17:42] *** chris2 left
[17:42] *** eternaleye_ joined
[17:44] *** justatheory left
[17:45] *** justatheory joined
[17:50] *** justatheory_ joined
[17:50] *** justatheory left
[17:50] <mugwump> Test::Depends?

[17:51] <ruoso> mugwump, the idea is getting the modules installed when wanting to test 

[17:51] <ruoso> and differentiate runtime depends from test depends from build depends

[17:53] <mugwump> sure.  I normally bundle the hard dependencies, and use Test::Depends to skip the missing dependencies

[17:53] <mugwump> (with Test::Depends, the hard dependency is really just Test::Depends)

[17:54] *** Psyche^ joined
[17:55] <ewilhelm> ruoso: I think this needs a field for the META.yml version and/or some kind of minimum version for the setup tool

[17:56] <ewilhelm> that is, when this changes, how do older parrots upgrade the 'apt' portion?

[17:57] <ruoso> ewilhelm, hmmm... sure... like debian's Standards-Version:... 

[17:58] <ruoso> ewilhelm, please feel free to change the wiki page

[17:58] <ruoso> I really don't mean to be *the* maintainer of that ;) I'm just the starter of the brainstorm

[18:03] *** eternaleye joined
[18:08] <pugs_svnbot> r20012 | lwall++ | Added mechanisms for getting more input on \v transition.

[18:08] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20012

[18:09] <lambdabot> Title: Changeset 20012 - Pugs - Trac

[18:10] *** justatheory_ left
[18:11] *** Patterner left
[18:11] *** Psyche^ is now known as Patterner

[18:11] *** justatheory joined
[18:14] *** IRSeekBot left
[18:17] *** IRSeekBot joined
[18:17] *** eternaleye_ left
[18:21] *** blindfish joined
[18:21] *** barney joined
[18:25] <[particle]> the standard dialect of english requires ) after the .

[18:25] <TimToady> not if you start the ( in the middle of the sentence

[18:26] <TimToady> you're getting confused with typesetters' rules for ' maybe...

[18:26] <TimToady> which I also ignore...

[18:26] <[particle]> hrmm, wasn't aware of the middle of sentence rule

[18:26] <TimToady> if you put a whole sentence inside, then the period goes inside

[18:26] <[particle]> yes, modern technical english is better served by putting . afterwards

[18:26] <TimToady> that's pretty standard

[18:27] <[particle]> what about comma?

[18:27] <TimToady> never inside

[18:28] <TimToady> and outside only if a comma would be used in the absence of the parenthetical phrase

[18:28] <[particle]> use English::Critic; # ISAGN

[18:29] <TimToady> the tricky one is what to do with sentence and a half (which happens to me a lot.  Go figure...)

[18:29] <[particle]> Grammar::Critic is for something else :)

[18:29] <TimToady> in those cases I just recast the sentence to avoid the problem

[18:30] *** TJCRI left
[18:30] <TimToady> actually, I'd usually sentencify the fragment in that case.  (Which happens to me a lot.  Go figure...)

[18:34] *** zostay_ joined
[18:34] *** IllvilJa left
[18:45] *** zostay left
[18:45] *** justatheory left
[18:46] *** justatheory joined
[18:52] *** IllvilJa joined
[18:55] *** cognominal_ left
[18:56] *** ebassi left
[18:58] *** wknight8111 left
[18:58] *** Aankhen`` left
[19:14] *** IRSeekBot left
[19:19] *** IRSeekBot joined
[19:24] *** TJCRI joined
[19:30] *** jferrero joined
[19:32] *** justatheory left
[19:36] *** dexF joined
[19:48] *** rindolf joined
[19:50] *** wknight8111 joined
[19:54] *** Auzon joined
[20:00] *** pcbuetow left
[20:02] *** cognominal_ joined
[20:09] *** schmalbe joined
[20:14] *** jferrero left
[20:14] <pugs_svnbot> r20013 | lwall++ | removed fossilized anglewords and quotewords noted by pmichaud++

[20:14] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20013

[20:14] <lambdabot> Title: Changeset 20013 - Pugs - Trac

[20:14] *** jferrero joined
[20:23] *** Auzon left
[20:27] <mncharity> TimToady: I'm writing a quick wrapper script for STD5.  To feed it input, and extract the Match yaml from it's output.  src/perl6/STD5_run ?   Do any of the scratch directories have to be emptied between searches?

[20:27] *** barney left
[20:27] <TimToady> not unless you change any rules or how they map to lexer patterns

[20:28] <mncharity> ok

[20:28] <TimToady> good idea to clean out every make test or so though

[20:28] <TimToady> it takes very little time to rebuild

[20:32] <TimToady> not sure yet how the caching strategy will interact with user-definded regexen though

[20:32] <TimToady> if it's fast enough, maybe do only in-process cache

[20:32] <TimToady> but even rebuilding the cache for STD takes only a few seconds

[20:33] <TimToady> well, that's rebuilding all of yamlg6, and only those parts of lex visited by ->longer()

[20:33] <TimToady> ->longest() even...

[20:34] <TimToady> still, that's most of it for parsing 42+1

[20:35] <TimToady> since it has to pull in all of prefix, terms, postfix, and infix

[20:35] <mncharity> perl -w STD5.pm is giving me Global symbol "$moreinput" requires explicit package name at STD5.pm line 2380. on head.  expected?

[20:35] <TimToady> s/yamlg6/yamlg5/

[20:35] <mncharity> "lotsfix":)

[20:36] <TimToady> ah, I hardwired moreinput into my gimme5, but haven't checked that in

[20:36] <TimToady> it's about the only context variable we aren't declaring "is context" ourselves

[20:36] <mncharity> no need to alter you development stride.  I can work on a different corner for a while.

[20:37] <TimToady> not sure if my current gimme5 and Cursor5 work at all; I'm in the middle of trying to do correct autolex on embedded alternations

[20:37] <mncharity> sure, np.  I'll work on...

[20:37] <mncharity> maybe sixkit instead.

[20:38] <TimToady> and I'm probably out of hack time for the day due to $job plus Dr appt

[20:39] <mncharity> Idea is a new gstreamer gst-launch-like tool.  sixkit std5 ! std_match_to_kp6_ast ! mumble_compiler/opt=foo ! mumble_backend ! -e 'say 3;'

[20:40] <mncharity> np.  I'll check in a non-working rough draft.

[20:40] <pugs_svnbot> r20014 | lwall++ | [gimme5] declare our $moreinput

[20:40] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20014

[20:40] <lambdabot> Title: Changeset 20014 - Pugs - Trac

[20:40] <TimToady> I can check in the gimme5 part, I think

[20:40] <TimToady> and then your version should work

[20:40] <mncharity> checking..

[20:42] <mncharity> well, got closer.  np.  another day.

[20:42] <TimToady> what kind of rule are you trying to run?

[20:43] <TimToady> I haven't quite got statement there yet all the way down to EXPR

[20:43] <mncharity> oh, wait.  works.  looks like a wrapper bug.  I'm all set.

[20:43] <mncharity> Perl->new(orig => '42')->noun([]);

[20:44] <TimToady> should be able to at least do '42+1' -> EXPR

[20:44] <TimToady> might not terminate pretty though

[20:44] <TimToady> and you're trying to extract the match

[20:45] <rhr> when I run it it seems to parse 42 and then stop

[20:46] <TimToady> it's still looking for infix at the end, question is whether it traversed 4 positions

[20:46] <TimToady> as an op prec parser, it keeps looking for more infix

[20:46] <TimToady> and the final one should fail

[20:47] <TimToady> (unless you have an explicit terminator)

[20:47] <rhr> it only gets to:2 afaics

[20:47] <TimToady> hmm. maybe some of my new gimme stuff is interfering

[20:48] <mncharity> given "out of hack time", I'll just say thanks, rather than getting into 42+1 output.  42 is just fine to get the script out. :)

[20:48] *** blindfish left
[20:48] <TimToady> nod, thanks

[20:48] <pasteling> "rhr" at 65.94.10.253 pasted "42+1 STD5 output" (950 lines, 38.7K) at http://sial.org/pbot/30364

[20:52] <TimToady> rhr: looks like you called noun rather than EXPR

[20:54] <rhr> how is that done?  my $r = Perl->new(orig => '42+1')->EXPR([]); (changed from noun) doesn't work

[21:01] <TimToady> dunno, probably some interference with my newer gimme code

[21:01] <pugs_svnbot> r20015 | putter++ | src/perl6/STD5_run: A script to make running STD5.pm easier, by providing it input, and isolating it's Match yaml output.

[21:01] <pugs_svnbot> r20016 | lwall++ | revert a bit of code

[21:01] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20016

[21:01] <lambdabot> Title: Changeset 20016 - Pugs - Trac

[21:01] <TimToady> try that version of gimme5, after clearing yamlg5 and lex dirs

[21:03] <rhr> oh, it was segfaulting :( let me svn up and try

[21:04] <rhr> still segfaults.  p5 bug I guess

[21:08] <rhr> actually, a tre bug: tre_tnfa_run_parallel

[21:08] <pugs_svnbot> r20017 | putter++ | src/perl6/STD5_run: it STD5.pm doesn't exist, create it.

[21:08] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20017

[21:08] <lambdabot> Title: Changeset 20017 - Pugs - Trac

[21:08] <TimToady> are you running in a locale? that may be fooling tre

[21:11] <TimToady> it's really easy to coredump tre by feeding it the wrong encoding...

[21:12] <TimToady> bbl &

[21:14] *** gilimanjaro joined
[21:18] <rhr> my locale is utf8, but it still segfaults with LC_ALL=C LANG=C

[21:21] *** Schwern joined
[21:21] *** dexF left
[21:25] *** shachaf left
[21:36] <rakudo_svn> r26077 | bernhard++ | [Rakudo]

[21:36] <rakudo_svn> r26077 | bernhard++ | Rakudo does not use PAST-pm, so don't mention it in ROADMAP.

[21:41] *** shachaf joined
[21:42] *** rindolf left
[21:44] *** gilimanjaro left
[21:44] *** gilimanjaro joined
[21:46] *** gilimanjaro left
[21:47] *** gilimanjaro joined
[21:57] <rakudo_svn> r26081 | jonathan++ | [rakudo] Implement smart-match for classes.

[22:01] *** schmalbe left
[22:04] *** jhorwitz left
[22:21] *** gilimanjaro left
[22:22] *** gilimanjaro joined
[22:24] *** gilimanjaro left
[22:42] *** kaether joined
[22:54] *** TJCRI left
[22:54] *** cmarcelo left
[23:03] *** kaether_ joined
[23:03] *** alester_ joined
[23:04] *** kaether_ left
[23:09] *** Schwern left
[23:11] *** peeps[work] left
[23:11] *** peeps[work] joined
[23:13] *** thoughtpolice joined
[23:18] *** jferrero left
[23:18] *** kaether left
[23:23] *** zamolxes joined
[23:24] *** peeps[work] left
[23:25] *** tobeya joined
[23:26] *** Limbic_Region joined
[23:33] *** justatheory joined
[23:38] *** DarkWolf84 joined
[23:39] *** eternaleye left
[23:41] *** iblechbot left
[23:49] <meppl> good night

[23:51] *** meppl left
[23:58] *** iblechbot joined
