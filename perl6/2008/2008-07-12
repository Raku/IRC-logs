[00:20] *** Alias_ left
[00:43] *** justatheory left
[01:05] *** mizai joined
[01:05] *** mizai left
[01:12] *** Ara4n joined
[01:15] *** lumi left
[01:15] *** lumi joined
[01:18] *** justatheory joined
[01:18] *** Ara5n left
[01:24] *** silug joined
[01:45] *** silug left
[02:11] *** peepsalot joined
[02:20] *** Alias_ joined
[02:22] *** pbuetow left
[02:25] *** nipotan is now known as nipotaway

[02:39] *** meteorjay joined
[02:44] *** alanhaggai left
[02:55] *** jfredett_ joined
[03:02] <TimToady> @tell pmurias a mutable object must specify its WHICH identity in terms of an immutable value type; immutable value types are their own identity and are required to support consistent canonicalization for eqv etc.; and canonicalization is hashable without knowledge of type, so no explicit .hash required

[03:02] <lambdabot> Consider it noted.

[03:06] *** jfredett left
[03:06] *** elmex_ joined
[03:10] <TimToady> @tell pmurias, IOW, hashes are always keyed on canonicalized .WHICH, though the particular form of canonicalization may depend on the hash key's declared type

[03:10] <lambdabot> Consider it noted.

[03:14] *** b_jonas left
[03:21] *** elmex left
[03:21] *** elmex_ is now known as elmex

[03:33] *** simcop2387 left
[03:38] *** simcop2387 joined
[03:40] *** kanru joined
[03:42] *** silug joined
[03:45] *** silug left
[03:53] *** [particle] left
[03:54] *** [particle] joined
[03:55] *** Alias_ left
[04:05] *** redicaps joined
[04:20] *** alester joined
[04:26] *** c1sung left
[04:28] *** rindolf joined
[05:24] *** peepsalot left
[05:25] *** Psyche^ joined
[05:25] *** alester left
[05:27] *** Patterner left
[05:27] *** Psyche^ is now known as Patterner

[05:29] *** justatheory left
[05:43] *** silug joined
[05:44] *** mib_pf5f04 joined
[05:44] *** mib_pf5f04 left
[05:47] *** silug left
[06:23] *** simcop2387 left
[07:18] *** simcop2387 joined
[07:42] *** kanru left
[07:44] <rindolf> Hi all.

[07:46] *** silug joined
[07:50] *** iblechbot joined
[07:50] *** silug left
[08:10] *** alanhaggai joined
[08:19] *** barney joined
[09:21] *** Alias_ joined
[09:42] <rakudo_svn> r29330 | bernhard++ | [Rakudo] Add or update some Copyright or SVN-Id lines

[09:49] *** silug joined
[09:52] *** Alias_ left
[09:53] *** Alias_ joined
[09:53] *** Alias_ left
[10:01] *** alanhaggai left
[10:10] *** meppl left
[10:20] *** silug left
[10:32] *** meppl joined
[10:51] *** chris2 joined
[10:52] *** pbuetow joined
[10:56] *** wknight8111 left
[10:56] *** wknight8111 joined
[10:57] *** sri_work joined
[11:31] *** pmurias joined
[11:32] *** redicaps left
[11:46] *** ruoso joined
[11:47] <pmurias> ruoso: hi

[11:47] <lambdabot> pmurias: You have 1 new message. '/msg lambdabot @messages' to read it.

[11:47] <ruoso> hi pmurias 

[11:50] <pmurias> should i just svn remove the old sm0p implementation when i move in the new one?

[11:50] <ruoso> yeah... I think that's ok

[11:51] <pmurias> i wonder if i haven't spent enought time on sm0p, that i could have written a basic perl6->slime backend ;)

[11:52] <ruoso> pmurias, and you could even add the brew as a makefile target, so it would be called automatically when the sm0p.pm source changes

[11:53] <ruoso> pmurias, you think you can write a simple "variable" support that would generate all the nodes for the equivalent calls?

[11:53] <ruoso> like...

[11:54] <ruoso> $a = regular_sm0p_node;

[11:54] <ruoso> $a.foo();

[11:54] <ruoso> $something.method($a)

[11:54] <pmurias> yes, but i think i shouldn't

[11:55] <ruoso> hmm... you're probably right

[11:55] <pmurias> growing sm0p into perl6 doesn't seem a good idea

[11:58] <pmurias> i think i'll finish labels, and likely add nested frames and leave it at that

[12:01] <pmurias> but we can start work on s1p soon ;)

[12:10] *** alanhaggai joined
[12:11] <pugs_svn> r21309 | fglock++ | minor fix in test output

[12:15] *** wknight8111 left
[12:17] *** silug joined
[12:19] *** silug left
[12:25] <pugs_svn> r21310 | pmurias++ | [smop] sm0p has labels now (see test file), forward labels are not supported yet, as they would require hackery

[12:30] <pmurias> ruoso: you can now use labels ;)

[12:41] *** nothingmuch left
[12:55] <pmurias> ruoso: would a move_capturize_with_responder be a good idea?

[13:05] *** alanhaggai left
[13:10] <pmurias> ruoso: i can delete old_src?

[13:16] *** rindolf left
[13:37] *** sri_work left
[13:39] *** rindolf joined
[13:39] *** Schwern joined
[13:40] <rindolf> Hi all.

[13:40] <rindolf> Can anyone edit http://www.perlfoundation.org/perl5/index.cgi?comics# ?

[13:40] <lambdabot> Title: Comics / Perl 5 Wiki

[13:40] <rindolf> Oh wait! NoScript.

[13:44] *** ruoso left
[13:44] *** b0xd joined
[13:50] <pmurias> rindolf: you are banned from the wiki too? ;)

[13:51] <rindolf> pmurias: no, I'm not.

[13:51] <rindolf> pmurias: just had the NoScript extension on.

[13:51] <rindolf> pmurias: and without JavaScript it didn't work at all.

[13:51] <rindolf> I had to whitelist perlfoundation.org

[13:57] *** alanhaggai joined
[14:03] *** sri_work joined
[14:05] <pmurias> rindolf: why do you have NoScript?

[14:05] *** jhorwitz joined
[14:07] <rindolf> pmurias: well, I installed it because a few hours after every reboot, I cannot access Google properly.

[14:07] <rindolf> pmurias: and so the Google Ads stall my homepage and other sites.

[14:09] <pmurias> strange 

[14:17] *** silug joined
[14:20] *** silug left
[14:24] *** b0xd left
[14:26] *** Southen joined
[14:45] *** Southen_ left
[14:50] *** justatheory joined
[14:55] *** b0xd joined
[14:56] *** pbuetow left
[14:58] *** icwiener_ joined
[15:12] *** icwiener left
[15:20] *** b0xd left
[15:34] *** alc joined
[15:40] *** rindolf left
[15:55] *** thepler_ left
[15:59] *** alanhaggai_ joined
[16:02] *** thepler_ joined
[16:04] *** justatheory left
[16:09] *** alc left
[16:13] *** alanhaggai left
[16:18] *** silug joined
[16:23] *** silug left
[16:28] *** pbuetow joined
[16:36] *** kanru2 joined
[16:43] *** davidm123 joined
[16:57] *** rhett joined
[16:57] <rhett> hey, what's new in perl 6?

[17:00] <pmurias> rhett: compared to perl 5?

[17:00] <rhett> oh, sorry, I mean, what's new in the perl 6 world?

[17:01] <rhett> is rakudo going to be fast?

[17:01] <pmurias> it should (for a vm)

[17:02] <rhett> are people working on a fast c implementation of perl 6?

[17:02] <pbuetow> the vm of perl 6 is in c

[17:03] <rhett> so, is rakudo the last thing that needs to be done?

[17:03] <pbuetow> i guess they will improve the vm and perl 6 itself in parallel

[17:03] <rhett> I'm confused, I guess I just want to know when perl 6 can start to replace perl 5

[17:03] <pbuetow> it ll be at christmas :)

[17:04] <pbuetow> (we dont know which christmas)

[17:04] <rhett> well, I mean what needs to be done?

[17:04] <rhett> like, if I just wrote a c version of pugs, would that work?;

[17:04] <pbuetow> you can read the news at rakudo.org and follow the development or help

[17:05] <pmurias> rhett: parrot is not finished yet

[17:05] <pbuetow> hmm, this will be yet another implementation, besides of pugs and rakudo and probably some more

[17:06] <pmurias> there's elf, and the undeveloped kp6

[17:07] <spinclad> smop is a c substrate for an implementation

[17:07] <pugs_svn> r21311 | fglock++ | [v6.pm] fixed Makefile.PL

[17:08] <pmurias> smop will be likely mostly p6

[17:08] <spinclad> rhett: perl 6 has already started to replace perl 5: kp6 and rakudo use perl 6 for their implementation

[17:10] <pmurias> rhett: perl6 will replace perl5 sooner if you help, you know ;)

[17:10] <rhett> yeah, i'm trying to see where I could fit in

[17:10] <pmurias> rhett: what are you happy coding in?

[17:10] <rhett> whatever

[17:10] <spinclad> haskell?

[17:11] <pmurias> common lisp? ;)

[17:11] <rhett> sure, whatever

[17:12] <spinclad> oo, we have a vict^Wvolunteer!  pugs needs a revival...

[17:12] <pmurias> rhett: the things i'm involved are elf and smop, you could help with them

[17:12] <spinclad> elf, STD, kp6, ...

[17:13] <spinclad> in particular building a bridge between elf and smop

[17:13] <pmurias> or a bridge between elf and STD

[17:14] <pmurias> it lives under misc/pixie

[17:14] * rhett reads about what the heck elf and smop are

[17:14] <davidm123> the download link on http://www.pugscode.org/ is broken (as is the try pugs now link)

[17:14] <lambdabot> Title: Pugs - pugscode

[17:15] <pmurias> rhett: what are you reading?

[17:15] <rhett> last time I checked in, people said, well, perl 6 is done as pugs in haskell, it's just slow.  So, I assumed that all that needs to be done is a fast implementation in c

[17:15] <rhett> http://www.perlfoundation.org/perl6/index.cgi?smop

[17:15] <lambdabot> Title: SMOP / Perl 6

[17:17] <spinclad> yes, that's good for smop

[17:19] <pmurias> i should update the sm0p page

[17:19] <rhett> i guess I don't understand.  If there are specs for the perl 6 language, why it doesn't just get coded up in c

[17:19] <pmurias> the parsing part is hard to do in c

[17:19] <rhett> and just call it perl6, instead of smop/elf/hoogieboogie

[17:20] <pmurias> calling your implementation perl6 is claiming it's more offical than the others

[17:21] <rhett> i don't see a problem with that, as long as it's free

[17:21] <pmurias> two different implementation can't be both called perl6

[17:22] <rhett> oh, so because larry wrote perl5, his can be officially perl5, but there can't be an official perl6, since the community writes it?

[17:22] <rhett> and no one is better than anyone else?

[17:23] <TimToady> nobody else was crazy enough to reimplement perl5

[17:23] <TimToady> we expect a lot of people to be that crazy about perl6  :)

[17:24] <pmurias> pypy and jython are called pypy and jython not python an python

[17:25] *** nothingmuch joined
[17:26] <pugs_svn> r21312 | fglock++ | [v6.pm] fixed Test.pm compilation

[17:27] <pmurias> rhett: it's mostly an issue of there being multiple incomplete and vastly different perl6 implemenations, and nobody wan't to be unkind enough to claim the name

[17:27] <rhett> yeah, it would be nice if the community could agree on something, I guess

[17:29] *** PZt left
[17:29] <pmurias> the compiler to be agreed upon would need to be powerfull enough to fit everyones needs

[17:30] <TimToady> the current situation *is* what the community agreed on  :)

[17:30] <pmurias> walk&

[17:31] *** pmurias left
[17:39] <pugs_svn> r21313 | fglock++ | updated MANIFEST

[17:44] *** yewenbin left
[17:51] <spinclad> community policy this time around is that Perl 6 is the spec and perl6 is any implementation that implements it

[17:55] <spinclad> ( a corollary of TIMTOWTDI, i venture )

[17:55] <speckbot> r14562 | larry++ | [S04] small clarification to whether named subs are really closures

[18:02] *** chris2 left
[18:14] *** rhett left
[18:16] *** kcwu joined
[18:21] *** silug joined
[18:35] *** justatheory joined
[18:39] *** justatheory left
[18:47] *** wknight8111 joined
[18:51] *** silug left
[19:03] *** pmurias joined
[19:09] *** barney left
[19:16] <pugs_svn> r21314 | pmurias++ | [smop] deleted the old sm0p compiler

[19:18] <pmurias> @tell ruoso why have you put #\n in p6opaque.c?

[19:18] <lambdabot> Consider it noted.

[19:21] <pmurias> @teel ruoso p6opaque.h is missing (svn add it)

[19:21] <lambdabot> Consider it noted.

[19:22] <pmurias> does @teel work too? 

[19:24] <pugs_svn> r21315 | pmurias++ | [smop] two warnings about unkown methods

[19:25] <spinclad> does @teal send a color?

[19:28] <pugs_svn> r21316 | pmurias++ | [smop] reverted 21307 and 21306 to make smop compile again :(

[19:28] <pugs_svn> r21316 | pmurias++ | hopefull the can be reapplied soon :)

[19:32] *** pbuetow left
[19:55] *** rdice joined
[20:06] *** wknight8111 left
[20:09] <pugs_svn> r21317 | pmurias++ | [sm0p] added a general sm0p test

[20:09] <pmurias> @tell ruoso p6opaque.h is missing

[20:09] <lambdabot> Consider it noted.

[20:11] <pmurias> @tell ruoso: could you add a test for copy to 17_sm0p.sm0p please i can't get it to work somehow

[20:11] <lambdabot> Consider it noted.

[20:11] *** Limbic_Region joined
[20:36] *** ruoso joined
[20:38] <allbery_b> I don't think that colon will do what you hope

[20:39] <allbery_b> but since the target's here...

[20:39] <allbery_b> <pmurias> @tell ruoso: could you add a test for copy to 17_sm0p.sm0p please i can't get it to work somehow

[20:39] <ruoso> Hi all!

[20:39] <lambdabot> ruoso: You have 4 new messages. '/msg lambdabot @messages' to read them.

[20:40] <ruoso> pmurias, sorry about that... I'm adding p6opaque.h now

[20:41] <pmurias> ruoso: rehi

[20:41] <pugs_svn> r21318 | ruoso++ | [smop] ruoso-- forgot to add p6opaque.h

[20:41] <ruoso> pmurias, I didn't mean to commit the additional '#' in the sm0p blocks..

[20:41] <ruoso> it was just me checking if I was not trying to use the results of a node twice

[20:43] <pmurias> ruoso: would it be good idea to have a $SMOP__SLIME__CurrentFrame.call(identifier,SMOP__SLIME__Capturize.new(...)) ?

[20:44] <pmurias> ruoso: should i remerge 21307 and 21306 now?

[20:45] <ruoso> pmurias, please...

[20:48] <pmurias> i get errors in p6opaque

[20:48] <pmurias> 16 and 14, is it expected?

[20:49] *** silug joined
[20:50] <pmurias> ruoso: add p6opaque_methods.sm0p too, please

[20:50] <ruoso> ruoso--

[20:51] <pugs_svn> r21319 | ruoso++ | [smop] ruoso-- forgot to add p6opaque_methods.sm0p

[20:51] <pmurias> use svn status ;)

[20:51] <ruoso> pmurias, I need to define a good .svn_ignore

[20:52] <pugs_svn> r21320 | pmurias++ | reverted the reversion

[20:54] <pmurias> ruoso: do you think $SMOP__SLIME__CurrentFrame.call would be a good idea?

[20:55] <ruoso> pmurias, yes... I do... you just need to add the responder in that call

[20:55] <ruoso> you need the responder, the identifier and the capture

[20:56] <pmurias> i meant to take the responder from captures invocant

[20:56] *** justatheory joined
[20:56] <ruoso> pmurias, hmm.. that can be ok...

[20:57] <pmurias> as it's annoying to always have to copy the invocant to extract the responder from it

[20:58] <ruoso> yeah... I think it's ok...

[20:58] <ruoso> and if someone needs to call on other responder with that invocant, they can use the extended version sm0p has now

[21:00] <pmurias> calling an object with a different responder violates the encapsulation barrier a bit

[21:01] <ruoso> maybe... I'm not sure about it...

[21:01] <ruoso> in fact I tend to ignore that question, because the capture is not really visible in the low-level invocation..

[21:01] <ruoso> although for the higher level, it is indeed very tight up

[21:02] <pmurias> capture is not really visible, i'm confused

[21:03] <ruoso> SMOP_DISPATCH doesn't look at the capture

[21:03] <ruoso> but that's maybe irrelevant

[21:04] <pmurias> guess so

[21:05] <pmurias> * i guess so

[21:05] <pmurias> ruoso: it would be cool for objects to be able to have multiple responder interfaces

[21:06] <pmurias> so that for example python code would see a different api for the object than p6 code

[21:06] <ruoso> pmurias, the problem is that the object won't be binary compatible with both runtimes at the same time anyway

[21:07] <pmurias> meant python code running on smop

[21:09] <pmurias> it wouldn't require a secondary responder interface, just a secondary MESSAGE would be enough

[21:09] <pmurias> or even better

[21:09] <pmurias> it's possible to call methods on the responder interface?

[21:12] <pmurias> i'll sleep now, but would be grateful if you add the $SMOP__SLIME__CurrentFrame.copy test when you have some time 

[21:12] <ruoso> pmurias, copy test?

[21:12] <ruoso> pmurias, test/16 is failing sm0p parse here

[21:13] <ruoso> pmurias, oh... sorry... I didn't update misc/sm0p

[21:14] *** jhorwitz left
[21:14] <pmurias> just a version of the test in 17 with copied values would be enough

[21:14] <pmurias> s/would/should/

[21:14] <pmurias> sleep for real&

[21:14] *** pmurias left
[21:15] *** rdice left
[21:21] *** alester joined
[21:22] <pugs_svn> r21321 | ruoso++ | [smop] solves memory leak in test/17.

[21:23] <ruoso> @tell pmurias,  I really didn't understand what you mean... test/17 had a copy call commented out, I just uncommented it and it worked... what do you think that should be tested?

[21:23] <lambdabot> Consider it noted.

[21:28] *** lde left
[21:46] *** alester left
[22:18] *** iblechbot left
[22:30] *** cognominal__ joined
[22:31] *** meppl left
[22:36] *** cognominal_ left
[22:40] *** meppl joined
[22:41] *** cognominal_ joined
[22:49] *** cognominal__ left
[23:43] *** Caelum left
[23:44] *** wknight8111 joined
[23:48] *** eternaleye_ joined
[23:53] *** Schwern left
[23:53] *** alester joined
