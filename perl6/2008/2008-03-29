[00:02] *** syle joined
[00:05] *** Zygo left
[00:05] *** Zygo joined
[00:09] *** wtgee left
[00:14] *** felipe joined
[00:33] *** LazyJim left
[00:37] *** justatheory left
[00:56] *** SamB joined
[00:56] *** syle left
[01:01] *** alc joined
[01:07] <pugs_svnbot> r20183 | lwall++ | [STD5] can now parse 'say 42+1;' x 10 (loses Match & blows up at end)

[01:07] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20183

[01:07] <lambdabot> Title: Changeset 20183 - Pugs - Trac

[01:12] <stevan_> mncharity: look at Package::Relative or somehting like that,.. nothingmuch wrote it

[01:20] <TimToady> mncharity: I'm currently refactoring STD to match all initial <name>s in one spot; the current STD assumes that postlexer assertions cause the lexer to back off

[01:20] <TimToady> and that's not valid for the TRE impl

[01:21] <TimToady> so term:listop is mutating into the only thing that looks for a non-keyword identifier/name, and then dispatches based on what it finds after it

[01:21] *** iblechbot joined
[01:21] <TimToady> including typenames, typecasts, etc.

[01:34] *** ofer left
[01:41] *** iblechbot left
[01:43] *** wknight-away left
[01:51] *** justatheory joined
[01:58] <pugs_svnbot> r20184 | lwall++ | [STD] move typenames and packagevars in to term:name

[01:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20184

[01:58] <lambdabot> Title: Changeset 20184 - Pugs - Trac

[02:38] *** Foke2 left
[02:41] *** justatheory left
[03:00] *** alester joined
[03:07] *** Limbic_Region left
[03:10] *** tobeya left
[03:15] *** Student joined
[03:17] *** meppl left
[03:17] *** explorer left
[03:18] *** kst joined
[03:18] *** meppl joined
[03:20] <mncharity> http://search.cpan.org/~nuffin/Package-Relative-0.01/lib/Package/Relative.pm

[03:20] <lambdabot> Title: Package::Relative - Support for '..' style relative paths in perl namespaces. -  ..., http://tinyurl.com/32pfoq

[03:23] <mncharity> TimToady: ok, thanks

[03:26] *** meppl left
[04:05] *** elmex_ joined
[04:08] *** Auzon joined
[04:09] *** stevan__ joined
[04:14] <Auzon> Hi all. I'm interested in making significant contributions to Perl 6 test cases for a GSoC project. I've already talked with people about that, but I'm wondering which backends are good candidates for me focusing effort on.

[04:14] <Auzon> Is Rakudo usable for anything?

[04:17] <mncharity> you might ask on #parrot about rakudo.  but,

[04:17] <mncharity> why would a backend need to be focused on to write tests?

[04:18] <mncharity> Perl 6 is nominally defined by an implementation independent test suite.

[04:18] *** elmex left
[04:21] <Auzon> My (hopefully) mentor said that I should plan on running the tests with some implementations to get numbers and (for things already implemented) to see if they are correct

[04:23] <Auzon> numbers as far as seeing how many tests pass/fail for particular implementations for progress reports

[04:23] <Auzon> smop: say "hi"

[04:23] <Auzon> Hm.

[04:23] *** stevan_ left
[04:30] *** justatheory joined
[04:35] <mncharity> ah, ok.  the only implementation which currently passes much of the test suite is pugs.  followed (distantly) by redsix.

[04:36] <allbery_b> but pugs is moribund

[04:37] <Auzon> Well, it still will let me test things that are implemented but not tested (especially corner cases)

[04:38] <Auzon> basically, I guess I want to list the things that can currently parse the test cases.

[04:38] <spinclad> moribund? it's alive, it passes its tests, it's just not breathing

[04:39] <Auzon> and I won't need to rebuild it then

[04:41] <Auzon> is redsix available in here yet?

[04:42] <Auzon> redsix: say 1

[04:42] <Auzon> guess not, unless it's under a different name

[04:43] <spinclad> i think the evalbot is out just now

[04:44] <spinclad> perl6: say 'hi'

[04:44] <exp_evalbot> kp6: OUTPUT[hi␤]

[04:44] <exp_evalbot> ..pugs: OUTPUT[hi␤]

[04:44] <exp_evalbot> ..rakudo: OUTPUT[hi␤]

[04:44] *** justatheory left
[04:44] <spinclad> ah... it just doesn't include smop or redsix.

[04:51] <mncharity> redsix has no taint/safe mode.

[04:54] <Auzon> That makes sense. So I guess Pugs and Rakudo are the ones I'll mention explicitly. Thanks :)

[04:55] <pugs_svnbot> r20185 | putter++ | [elf_a/b] Tweaking how Moose is used.

[04:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20185

[04:55] <lambdabot> Title: Changeset 20185 - Pugs - Trac

[05:47] <mncharity> end of day.  I'm seeing elf_b self compilation at 12 sec (vs 4 sec for elf_a compiling elf_b).  thanks to the folks on #moose.  good night all &

[05:48] <Auzon> bye

[05:49] *** mncharity left
[06:01] *** alester left
[06:15] *** stevan__ left
[06:16] *** stevan_ joined
[07:13] *** Student left
[07:42] *** Foke2 joined
[07:55] *** alc left
[08:03] *** iblechbot joined
[08:08] *** Aankhen`` joined
[08:47] *** wknight-away joined
[08:51] <spinclad> rakudo now has some IO implemented; does exp_evalbot run in a safe jail?

[09:18] *** alc joined
[09:32] *** chris2 joined
[09:39] *** Aankh|Clone joined
[09:44] *** gbarr left
[09:52] *** barney joined
[09:57] *** Aankhen`` left
[10:03] *** Aankh|Clone is now known as Aankhen``

[10:04] *** Aankhen`` left
[10:06] *** Aankhen`` joined
[11:00] *** drrho joined
[11:27] *** Chillance joined
[11:38] *** wknight-away left
[11:41] *** alc left
[11:42] *** alc joined
[11:48] *** barney left
[11:52] *** meppl joined
[12:15] *** LazyJim joined
[12:27] *** meppl left
[13:00] *** smtms left
[14:08] *** meppl joined
[14:34] *** rindolf joined
[15:24] *** iblechbot left
[15:26] *** macroron joined
[15:36] *** syle joined
[15:41] *** macroron left
[15:53] *** Southen joined
[15:54] *** justatheory joined
[15:57] *** syle left
[15:59] *** justatheory left
[16:04] *** Southen_ left
[16:05] *** justatheory joined
[16:07] *** Chillance left
[16:13] *** mncharity joined
[16:17] <mncharity> Juerd: fyi, ^^^ re rakudo io

[16:19] *** iblechbot joined
[16:19] <mncharity> moritz_: http://irclog.perlgeek.de/perl6/today looks down.

[16:19] <lambdabot> Title: IRC log for #perl6, 2008-03-29

[16:21] *** aindilis joined
[16:24] *** justatheory left
[16:29] <pugs_svnbot> r20186 | putter++ | [elf_on_rakudo] Check-in old edits.

[16:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20186

[16:29] <lambdabot> Title: Changeset 20186 - Pugs - Trac

[16:34] *** wtgee joined
[16:36] *** spinclad joined
[16:39] *** drrho left
[16:50] <pugs_svnbot> r20187 | putter++ | [winter_jig/elf_on_STD_red] Graduates from winter_jig to misc/elf.

[16:50] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20187

[16:50] <lambdabot> Title: Changeset 20187 - Pugs - Trac

[16:51] *** clintongormley joined
[16:52] <clintongormley> pugs: say "hello"

[16:52] <exp_evalbot> OUTPUT[hello␤]

[16:52] <clintongormley> pugs: @a=(10,20,30); print @a[1];

[16:53] <exp_evalbot> OUTPUT[*** ␤    Unexpected "=("␤    expecting "::"␤    Variable "@a" requires predeclaration or explicit package name␤    at /tmp/9sl9aqGUiZ line 1, column 3␤]

[16:53] <clintongormley> pugs: my @a=(10,20,30); print @a[1];

[16:53] <exp_evalbot> OUTPUT[20]

[16:54] <clintongormley> pugs: my @a=(10,20,30);  my @b=[1,2]; print @a[@b]

[16:54] <exp_evalbot> OUTPUT[30]

[16:54] <clintongormley> pugs: my @a=(10,20,30);  my @b=[1,2]; print @a[1,2]

[16:54] <exp_evalbot> OUTPUT[2030]

[16:54] <clintongormley> pugs: my @a=(10,20,30);  my @b=[1,2]; print @a[(@b)]

[16:54] <exp_evalbot> OUTPUT[30]

[16:54] <pugs_svnbot> r20188 | putter++ | winter_jig/STD becomes misc/STD, with

[16:54] <pugs_svnbot> r20188 | putter++ | STD_extract - a STD.pm parser,

[16:54] <pugs_svnbot> r20188 | putter++ | STD_deconstructed.pl - an experiment in making STD.pm implicit meaning, explicit.

[16:54] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20188

[16:54] <lambdabot> Title: Changeset 20188 - Pugs - Trac

[16:55] <clintongormley> pugs: my @a=(10,20,30);  my @b=[1,2]; print @a[@b.list]

[16:55] <exp_evalbot> OUTPUT[30]

[16:55] <clintongormley> rakudo: my @a=(10,20,30);  my @b=[1,2]; print @a[@b]

[16:55] <exp_evalbot> OUTPUT[30]

[16:56] *** cmarcelo joined
[16:56] <clintongormley> rakudo: my @a=(10,20,30);  my @b=[1,2]; print @a[@b]

[16:56] <exp_evalbot> OUTPUT[30]

[16:56] <clintongormley> rakudo: my @a=(10,20,30);  my @b=[1,2]; print @a[1,2]

[16:56] <exp_evalbot> OUTPUT[20]

[16:56] <clintongormley> pugs: my @a=(10,20,30);  my @b=[1,2]; print @a[1,2]

[16:56] <exp_evalbot> OUTPUT[2030]

[16:57] <clintongormley> rakudo: my @a=(10,20,30);  my @b=[1,2]; print @a[1,2]

[16:57] <exp_evalbot> OUTPUT[20]

[16:57] <clintongormley> rakudo: my @a=(10,20,30);  my @b=[1,2]; print @a[@b].join("-")

[16:57] <exp_evalbot> OUTPUT[Method 'join' not found for invocant of class 'Integer'␤current instr.: '_block10' pc 108 (EVAL_11:41)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 785 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1059 (src/PCT/HLLCompiler.pir:585)␤called from Sub

[16:57] <exp_evalbot> ..'parrot;PCT::HLLCompiler;command_line' pc 1238 ...

[16:58] <clintongormley> rakudo: my @a=(10,20,30);  my @b=[1,2]; my @c= @a[@b]; print @c.join('-')

[16:58] <exp_evalbot> OUTPUT[Method 'join' not found for invocant of class 'Integer'␤current instr.: '_block10' pc 130 (EVAL_11:51)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 785 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1059 (src/PCT/HLLCompiler.pir:585)␤called from Sub

[16:58] <exp_evalbot> ..'parrot;PCT::HLLCompiler;command_line' pc 1238 ...

[16:58] <Juerd> 5~09:50 < spinclad> rakudo now has some IO implemented; does exp_evalbot run in a  safe jail?

[16:58] <clintongormley> heya Juerd

[16:58] <Juerd> exp_evalbot should be migrated to the virtual machine for eval bots.

[16:58] <Juerd> Please volunteer, root access is available.

[16:58] <Juerd> Hello clintongormley 

[16:59] <clintongormley> rakudo: my @a=[1,2,3]; say @a.join(',')

[16:59] <exp_evalbot> OUTPUT[1,2,3␤]

[17:00] <clintongormley> rakudo: my @a=(10,20,30);  my @b=[1,2]; print @@a[@b]

[17:00] <exp_evalbot> OUTPUT[Statement not terminated properly at line 1, near "@@a[@b]"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤called from Sub 'parrot;Perl6::Grammar;statementlist' pc 15718 (src/gen_grammar.pir:2404)␤called from Sub 'parrot;Perl6::Grammar;statement_block'

[17:00] <exp_evalbot> ..pc 12889 (src/gen_grammar.pir:1390)␤called from...

[17:00] * clintongormley sighs

[17:01] <clintongormley> P6 is not quite as DWIM as I hoped :)

[17:01] <diakopter> rakudo is in infancy

[17:01] <diakopter> in its Perl 6 lifetime

[17:01] <clintongormley> pugs: my @a=(10,20,30);  my @b=[1,2]; print @a[@@b]

[17:01] <exp_evalbot> OUTPUT[*** ␤    Unexpected "]"␤    expecting "::"␤    Variable "@@b" requires predeclaration or explicit package name␤    at /tmp/eTHywXfihT line 1, column 45␤]

[17:01] <Auzon> rakudo: my @a=(10,20,30);  my @b=[1,2]; print @a[@b]

[17:01] <clintongormley> pugs: my @a=(10,20,30);  my @b=[1,2]; print @@a[@b]

[17:01] <exp_evalbot> OUTPUT[30]

[17:01] <exp_evalbot> OUTPUT[*** ␤    Unexpected "[@"␤    expecting "::"␤    Variable "@@a" requires predeclaration or explicit package name␤    at /tmp/lWjnqXcKXN line 1, column 42␤]

[17:01] <Auzon> Why are you using double @s?

[17:02] <clintongormley> because I'm guessing :)

[17:02] <clintongormley> there was a question on PM : http://www.perlmonks.org/index.pl?node_id=677231

[17:02] <lambdabot> Title: &#91;Perl 6&#93; single-value vs. array slices

[17:02] <clintongormley> and (without having actually read any of the synopses) i was trying to figure it out

[17:03] <Auzon> ah.

[17:03] <clintongormley> so, i assumed that : say @a[@b]

[17:03] <clintongormley> would give you an array slive

[17:03] <clintongormley> s/slive/slice/

[17:03] <clintongormley> then, with a very brief skim of S09, i saw the double @@, so though i'd try that out

[17:03] <clintongormley> but no

[17:04] * clintongormley is a bit lazy

[17:09] *** IllvilJa left
[17:19] <clintongormley> pugs: my @a=(10,20,30); say @@a[1,2]

[17:19] <exp_evalbot> OUTPUT[*** ␤    Unexpected "["␤    expecting "::"␤    Variable "@@a" requires predeclaration or explicit package name␤    at /tmp/IN5NYLlbNB line 1, column 26␤]

[17:19] *** clintongormley left
[17:22] <pugs_svnbot> r20189 | putter++ | misc/run_implementations created from winter_jig's sixcmd and sixrx, scripts to simplify running various p6 implementations, and regex engine.

[17:22] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20189

[17:22] <lambdabot> Title: Changeset 20189 - Pugs - Trac

[17:22] *** rindolf left
[17:27] *** smtms joined
[17:28] *** Aankhen`` left
[17:32] *** revdiablo joined
[17:36] *** Aankhen`` joined
[17:43] <pugs_svnbot> r20190 | putter++ | misc/kp6_misc created from winter_jig's kp6_ast, and backend_bare_perl5.  Tools to use the kp6 ast outside of kp6, and an abandoned p6 implementation using kp6 as an external parser.

[17:43] <pugs_svnbot> r20190 | putter++ | I don't anticipate any further development.

[17:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20190

[17:43] <lambdabot> Title: Changeset 20190 - Pugs - Trac

[17:55] <pugs_svnbot> r20191 | putter++ | misc/rakudo created from winter_jig's

[17:55] <pugs_svnbot> r20191 | putter++ | parse_t_spec.t - runs the rakudo parser against t/, to check parser coverage;

[17:55] <pugs_svnbot> r20191 | putter++ | elf_on_rakudo - an abandoned attempt to create a usable p6 implementation by combining the rakudo parser with a simple p5 backend.

[17:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20191

[17:55] <lambdabot> Title: Changeset 20191 - Pugs - Trac

[18:05] *** IllvilJa joined
[18:14] *** Foke2 left
[18:38] *** alc left
[18:44] *** thoughtpolice joined
[18:46] *** Psyche^ joined
[18:48] *** Patterner left
[18:48] *** Psyche^ is now known as Patterner

[19:05] *** cmarcelo left
[19:12] *** gbarr joined
[19:12] <Auzon> redsix requires Ruby 1.9, correct? Does that refer to the development version, because http://www.ruby-lang.org/en/downloads/ says that the latest stable version is 1.8.6-p114.

[19:12] <lambdabot> Title: Download Ruby

[19:20] *** gbarr left
[19:24] *** Aankhen`` left
[19:34] <mncharity> Auzon: re 'redsix requires Ruby 1.9', yes.  see http://www.ruby-lang.org/en/news/2007/12/25/ruby-1-9-0-released/ .  1.9 is the development branch towards 2.0.

[19:34] <lambdabot> Title: Ruby 1.9.0 Released

[19:34] <pugs_svnbot> r20192 | putter++ | [winter_jig] Status update.

[19:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20192

[19:34] <lambdabot> Title: Changeset 20192 - Pugs - Trac

[19:34] <Auzon> ah.

[19:34] <Auzon> Thanks. :)

[19:34] <mncharity> np

[19:35] <Auzon> It just didn't make sense for the redsix README to say not to use a development version, and then the Ruby site to list 1.9.0 as a development version. :-/

[19:36] <mncharity> winter is over; winter_jig is done; elf continues to toil towards Christmas.

[19:36] <mncharity> ah, interesting. hmm.  the issue is, prior to the 1.9.0 release, there were years of unreleased things calling themselves 1.9.0.

[19:37] <Auzon> I'm not familiar with those projects (winter, winter_jig, elf).

[19:43] <pugs_svnbot> r20193 | putter++ | [redsix/README] Clarify the version of ruby 1.9 required.  Auzon++

[19:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20193

[19:43] <lambdabot> Title: Changeset 20193 - Pugs - Trac

[19:43] <Auzon> Thanks :)

[19:44] <mncharity> winter is a season; winter_jig is how I spent a large hunk of March, an effort to get p6 development moving briskly again; elf, formerly elf_on_STD_red, the main result of winter_jig, is a p6 implementation which uses an external parser, STD_red, but otherwise self compiles.  I hope to rapidly turn elf into something folks can easily use to pursue their p6 implementation interests.

[19:46] <Auzon> So can elf run Perl 6 on its own? something like: elf -e'say "hi"'

[19:47] *** chris2 left
[19:47] <mncharity> http://svn.pugscode.org/pugs/misc/winter_jig/README  http://svn.pugscode.org/pugs/misc/winter_jig/STATUS_2008_Mar_29_FINAL  At least until I decide whether to move it misc/pX/Aside/ .

[19:47] <mncharity> yes.

[19:48] <Auzon> So how complete it is?

[19:48] <mncharity> or more significantly,  ./elf_b -x -o ./elf_b2 elf_b_src/Match.pm elf_b_src/ast_to_ir.pl elf_b_src/ast_handlers.pl elf_b_src/ir_nodes.p6 elf_b_src/emit_p5.p6 elf_b_src/prelude.p6 elf_b_src/main.p6  # compiling itself

[19:48] <mncharity> re complete, very very not.

[19:49] <mncharity> need more "very"'s there, and boldface.  objective is to

[19:50] <mncharity> create an environment where people can write highly restricted but still comfortable p6 code, while writing a more real implementation in p6.

[19:52] <Auzon> and it compiles down to Perl 5, correct?

[19:52] <mncharity> this weekend's focus is on adding -I and -M, and a abstraction to separate parser from ir from emitter, so people can easily pursue their own interests, whether parsing, code analysis, backends and runtimes, while sharing code, but not getting roadblocked by each other.

[19:53] <mncharity> yes

[19:53] <Auzon> Neat :)

[19:54] <mncharity> though the intent is to be able to shortly do  ./elf_b -MEmitCommonLisp -e 'say 3'  and have the right thing happen.

[19:54] <mncharity> assuming someone other than me writes EmitCommonLisp. ;)

[19:55] <mncharity> in a form like http://svn.pugscode.org/pugs/misc/elf/elf_b_src/emit_p5.p6

[19:55] <Auzon> Very cool.

[19:55] <mncharity> :)

[19:58] <mncharity> or something like  ./elf_b_create.pl --compiler='./elf_b -MEmitCommonLisp' -o elf_bootstrapped_onto_common_lisp

[20:02] <mncharity> ./elf_b -MPerl5LikeCommandLine -MParserSTD5 -MNicerIR -MCompileSMOPFromNicerIR -e 'say 3'

[20:02] <Auzon> Does that work now?

[20:03] <mncharity> very not.  no -M, no use(), no "any of those modules implemented".

[20:03] <mncharity> currently  ./elf_b_create.pl --compiler=./elf_b -o ./elf_b2  is the highlight - self compilation.

[20:03] <Auzon> ah.,

[20:04] <mncharity> building the infrastructure on which the -M... stuff can be written is top of the TODO.

[20:05] * Auzon now remembers why he doesn't like compiling generally

[20:07] <mncharity> currently have elf_a (p5) compiling elf_b (p6), and elf_b compiling itself.  next milestone is elf_c (modular p6).

[20:07] <Auzon> Is it fast so far?

[20:08] <mncharity> elf_a compiles elf_b in 4 sec, elf_b compiles itself in 11 sec.  hmm, that's with parser caching, let's see, with empty cache...

[20:09] <mncharity> elf_b is 18 sec.

[20:10] <Auzon> That's not terrible.

[20:10] <mncharity> ymmv

[20:10] <Auzon> I guess. I don't really remember :)

[20:11] <mncharity> I think of it as quite remarkably delightful.  I would have been (barely) willing to live with 10x worse, but it would not have been happy.

[20:11] <Auzon> well, I'd need to see how much code is being compiled to get context

[20:14] <mncharity> yeah.  hmm, a one-big-file-of-p6 isn't created anymore.  would have to run ./elf_b_create.pl, and then look at  elf_b_src/Match.pm elf_b_src/ast_to_ir.pl elf_b_src/ast_handlers.pl elf_b_src/ir_nodes.p6 elf_b_src/emit_p5.p6 elf_b_src/prelude.p6 elf_b_src/main.p6 .  wc says 1576 lines   4874 words  53408 bytes.

[20:15] <Auzon> That doesn't seem bad at all.

[20:15] <Auzon> spiffy. I have redsix running now (for some definition of running)

[20:18] *** kst left
[20:18] *** kst` joined
[20:18] <mncharity> one of very few who ever have ;)  let me know if you have any questions

[20:18] <Auzon> It's actually the only thing that can run Perl 6 that I have running :)

[20:18] *** silug left
[20:18] <Auzon> I'm trying to throw it against the test suite to get a rough count of passing/failing stats

[20:18] <mncharity> pugs should definitely be a priority/focus.

[20:19] <Auzon> Right. I'm working on getting it running too

[20:19] <Auzon> I have a feeling I'm not too far away from getting it running too.

[20:20] <mncharity> re rough count, I'd expect a 20% pass or less.

[20:20] <Auzon> well, the total test count

[20:21] <Auzon> I want to know how many tests actually exist so I can get an idea of how many would be realistic to add this summer.

[20:21] <mncharity> if for some reason you need additional test cases, you can roll back history to when PIL2JS and PIL-Run were working.

[20:21] <mncharity> re total test count, you've seen the smoke site?

[20:22] <Auzon> Yeah

[20:22] <Auzon> I didn't remember seeing a count there ^_^'

[20:22] <Auzon> I figured I'd need pugs and some friends running anyway, so I decided to just go that way

[20:23] <Auzon> What does this message mean from redsix? # Perl source ./redsix:3645 changed.  I will eval() it later.

[20:23] <mncharity> http://smoke.pugscode.org/ is down.  iblech?

[20:23] <mncharity> http://64.233.169.104/search?q=cache:dpsA9KKFh48J:smoke.pugscode.org/+smoke+perl6&hl=en&ct=clnk&cd=1&gl=us

[20:24] <lambdabot> http://tinyurl.com/357bne

[20:24] <mncharity> Pugs 6.2.13                                             r20091                                         10 Mar 2008   19366 test cases:  18071 ok, 		1295 failed, 		1919 todo,  769 skipped and 		30 unexpectedly succeeded               

[20:25] <Auzon> Wow. A lot more than I thought!

[20:25] <Auzon> Almost a test case per commit in the repo :)

[20:26] *** cathya joined
[20:26] *** syle joined
[20:26] <Auzon> but they take forever to run, it seems

[20:27] *** meppl left
[20:28] *** meppl joined
[20:28] <Auzon> is there a way to get redsix to make a similar smoke page?

[20:28] <mncharity> re redsix message, redsix is written in both ruby and p6.  it's reporting that its internal p6 has changed since its internal copy of its "internal p6, compiled into ruby" was updated, and thus that it will evaluate that p6 as its final step of startup.

[20:30] <mncharity> with 5.10, prove takes a "what program to run" argument, so you may be able to get a smoke out of that.  there once was a working smoke redsix target in the pugs Makefile.  it may even still be there and still work.

[20:31] <mncharity> make smoke-redsix

[20:32] <Auzon> is that in pugs/Makefile ?

[20:32] <Auzon> cause "make smoke-redsix" just tries to build Pugs again

[20:33] <mncharity> you will probably want to cpu and memory ulimit that, as some tests may non-terminate, or perhaps grow massively.

[20:34] <Auzon> oh

[20:34] <Auzon> make smoke-redsix looks like it depends on Pugs.

[20:34] <Auzon> So I need to get Pugs working before I do that

[20:34] <mncharity> an unfortunate characteristic of the pugs makefile is that doing things like  make smoke-redsix  first try to make pugs.  edits welcome. :)

[20:34] *** thoughtpolice left
[20:37] <mncharity> re redsix message, basically redsix was intended to be a rapid couple-of-weeks bootstrap, but schedule slippage killed it.

[20:37] <mncharity> it's been a zombie since

[20:38] <Auzon> so the two builds that are most well-off are zombies?

[20:38] *** cathya left
[20:39] <mncharity> pugs is more enchanted sleep, occasionally dusted by caring dwarfs.

[20:41] <mncharity> redsix is a "no one goes near it", bit rotted zombie, occasionally crudely patched back together by its creator.

[20:42] <Auzon> So what is active these days?

[20:42] *** thoughtpolice joined
[20:45] <mncharity> svn log is your best guide, but it doesn't include parrot

[20:46] *** cathya joined
[20:47] <mncharity> svn log -v  rather

[20:49] <mncharity> basically, src/perl6/STD* is turning into a p6 parser; kp6; smop; tests; getting pugs to work on current ghc; ... in no particular order.

[20:49] <mncharity> oh, and winter_jig, now elf.

[20:52] <Auzon> one more question. on the Pugs smoke page, I see some "100.00% ok"s. Does that mean pugs passes all the tests?

[20:52] <Auzon> or just all the ones not marked TODO or something like that?

[20:54] <mncharity> continuing the fairytale theme, elf is Santa's young elf, full of potential, energy and big dreams, eager to work with people towards Christmas. :)

[20:54] *** Limbic_Region joined
[20:54] <Auzon> Cute. :P

[20:55] <mncharity> re "100.00% ok", passed or skipped.

[20:55] <mncharity> re 'just all the ones not marked TODO or something like that', right

[20:55] <Auzon> is there a way to tell how many were skipped?

[20:56] <Auzon> hm, never mind

[20:56] <mncharity> "18071 ok, 		1295 failed, 		1919 todo,"

[20:56] <Auzon> Math will help me here :D

[20:56] <Auzon> or just looking at that.

[20:57] <mncharity> I'm not sure whether there is a "skipped" bucket distinct from "todo" or not.

[20:57] <Auzon> on the individual smoke page, it looks like it. http://m19s28.dyndns.org/iblech/stuff/pugs-smokes/pugs-smoke-6.2.13-r0-darwin-normal--1161137352-5402--17954-17954-0-4638-747-0--f074b12a389a4acf75fbc278e10802cd.html

[20:57] <Auzon> see the very bottom

[20:57] <lambdabot> Title: TAP Matrix - Wed Oct 18 01:16:18 2006 GMT, http://tinyurl.com/3bbcyp

[20:57] *** cmarcelo joined
[20:58] <mncharity> ah, ok

[20:58] <cathya> heh google page is in black now

[20:58] <cathya> earth hour

[20:58] <Auzon> Neat.

[20:59] <Auzon> But my lights are off...

[20:59] <mncharity> yeah.  and clicking on "Google" didn't provide any info, so the usual "Google looks odd, click on Google to find out why" heuristic didnt work.

[20:59] <mncharity> :)

[20:59] <Auzon> That heuristic is pretty intuitive and works most of the time :)

[20:59] <mncharity> Auzon: computers draw lots of power... :)

[21:01] <mncharity> eh-3hrs here.

[21:01] <Auzon> I imagine that my laptop uses almost no power compared to the hall/lounge/bathroom lights here, which are on 24/7 unless someone turns them off.

[21:02] <mncharity> hmm, not much hacking today.  :/  errands.  then -M -I.  else Monday. :/

[21:03] <mncharity> re lights, /me notices "unless someone turns them off", but decides not to comment. :P

[21:03] <Auzon> It's a dorm.

[21:03] <mncharity> self referential, _and_ self invalidating.

[21:03] <allbery_b> all too many people default on for lights

[21:03] <Auzon> And too many people leave water running while brushing teeth. That's my current pet-peeve

[21:04] <mncharity> bbl &

[21:04] <Auzon> see you

[21:04] <Auzon> thanks for your help

[21:05] <allbery_b> re google heuristic:  mine is "google *logo* looks odd, click on it" which is more reliable in general

[21:06] <Auzon> yeah

[21:06] <Auzon> That's what I thought the original one was

[21:13] <mncharity> elf is "the new elf in the workshop, full of potential, who thinks Christmas in May would be great".  :)

[21:17] <allbery_b> he'll be ground down soon enough...

[21:44] *** elmex joined
[21:48] *** Chillance joined
[21:48] *** bhwu joined
[21:51] *** luqui joined
[21:54] *** iblechbot left
[21:57] *** elmex_ left
[22:14] *** Psyche^ joined
[22:26] *** Patterner left
[22:26] *** Psyche^ is now known as Patterner

[22:36] *** wtgee left
[22:36] *** wtgee joined
[23:35] *** LazyJim left
[23:37] *** meppl left
[23:49] *** justatheory joined
[23:58] *** silug joined
[23:59] *** syle left
[23:59] *** lichtkind joined
