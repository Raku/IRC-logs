[00:00] <TimToady> if there were, it would be from reordering operators via precedence, I suspect

[00:00] <TimToady> but mostly I just see O nodes copied up the tree

[00:01] <TimToady> as for viv, there are still a number of missing action methods, I expect

[00:03] <mncharity> re loop, ok.  could be me.  running STD_blue_run on elf_h_src/CommandLine.pm, even with a branch-local() %seen counter limit of 30, I was still hitting "seen this node too many times".  I'll explore.

[00:04] *** alester joined
[00:10] <mncharity> not something to worry about.  I'll report back.

[00:10] <TimToady> well, lemme know if you have an example--I think I know where the bug might be

[00:10] <TimToady> gotta wander off &

[00:10] <mncharity> bye.  tnx for the help

[00:15] <mncharity> re viv, it looks like STD_blue will just continue using the class-STD tree directly, rather than switching to viv.  since viv wasn't actually labeling the nodes, but rather depending on "no :=" etc for STD-specific guessing, I've just added that dependence to the existing STD_blue tree walker.

[00:16] <mncharity> simpler, at least for now.

[00:20] *** FurnaceBoy left
[00:20] *** hercynium joined
[00:39] *** ispy_ joined
[00:45] <pasteling> "mncharity" at 98.216.110.149 pasted "my $x = $y.m();" (20 lines, 314B) at http://sial.org/pbot/32604

[00:47] *** jferrero left
[00:47] *** [particle] joined
[00:49] <mncharity> TimToady: fyi, whatever it is I'm seeing, I note I see it on "my $x = $y.m();".  the above trace may provide a clue.  but again, I've not looked at it closely, and you needn't spend time on it on my account.  I wondered earler if you already knew whether/where cycles might be present, just as a way of avoid work duplication.  didn't intend to create an action item.

[00:52] *** Auzon joined
[01:07] *** BinGOs left
[01:09] *** BinGOs joined
[01:17] <pugs_svn> r22593 | putter++ | [elfish/STD_blue] Dropped in STD_red elf_h IRx1_FromAST constructors.  Currently adapting them to the STD_blue/gimme5 ast.  -e 'say 3' works, but little else yet.

[01:17] *** eternaleye left
[01:24] *** mncharity left
[01:43] *** s1n left
[01:49] *** Ontolog joined
[02:15] *** eternaleye joined
[02:29] *** [particle] left
[02:32] *** ab5tract joined
[02:34] *** kanru left
[03:01] *** kst left
[03:01] *** kst joined
[03:16] *** ispy_ left
[03:20] *** alester left
[03:40] *** bjakb joined
[03:41] *** kst left
[03:41] *** kst joined
[03:46] *** justatheory joined
[03:47] *** justatheory left
[03:48] *** tcliou joined
[04:57] *** alester joined
[05:28] *** bjakb left
[05:42] *** sail0r joined
[05:43] *** sail0r left
[05:51] *** Auzon left
[05:56] *** Psyche^ joined
[06:06] *** adc_Penner joined
[06:13] *** BinGOs left
[06:14] *** Patterner left
[06:14] *** Psyche^ is now known as Patterner

[06:17] *** BinGOs joined
[06:28] *** alanhaggai left
[06:39] *** kanru joined
[06:43] *** zamolxes left
[06:53] *** penk joined
[06:58] *** kst` joined
[06:58] *** kst left
[06:59] *** alester left
[07:09] *** penk left
[07:10] *** iblechbot joined
[07:14] *** eternaleye left
[07:16] *** bacek_ joined
[07:16] *** bacek left
[07:23] *** sri_work joined
[07:25] *** pmurias_ joined
[07:27] *** ab5tract left
[07:29] <pmurias_> @tell mncharity if you do you tree traversal with a DFS, that is mark the nodes you already visited your tree traversal should handle cycles

[07:29] <lambdabot> Consider it noted.

[07:32] *** ujwalic_ left
[07:52] *** adc_Penner2 joined
[07:57] *** schmalbe joined
[08:05] *** dmq joined
[08:05] *** dmq left
[08:07] *** adc_Penner left
[08:10] *** elmex joined
[08:15] *** meppl joined
[08:20] *** adc_Penner2 left
[08:36] <pugs_svn> r22594 | pmurias++ | [mildew] a bit of progess on running t/pure_prototype_how.p6

[08:52] *** tomyan joined
[08:52] *** kst` left
[08:52] *** kst` joined
[09:03] *** pmurias_ left
[09:11] *** bjakb joined
[09:24] *** ujwalic_ joined
[09:24] *** ujwalic_ is now known as ujwalic

[09:27] *** araujo left
[09:28] *** araujo joined
[09:32] <schmalbe> Is there a document containing fulltext of all synopses ?

[09:35] *** sri_work left
[09:38] *** orafu joined
[09:46] <literal> schmalbe: http://perlcabal.org/syn/

[09:46] <lambdabot> Title: Official Perl 6 Documentation

[09:47] *** AzureStone left
[09:49] <schmalbe> tnx, bookmarked it

[09:54] *** pedrob joined
[09:59] *** Bzek joined
[10:01] *** AzureStone joined
[10:05] *** sri_work joined
[10:18] *** bacek_ left
[10:23] *** bacek_ joined
[10:37] *** meppl left
[10:40] *** pedrob left
[10:52] *** bacek_ left
[10:53] *** Ontolog left
[10:58] *** Ehtyar left
[10:59] *** kst` left
[10:59] *** kst` joined
[11:00] *** bacek_ joined
[11:00] *** zamolxes joined
[11:02] *** ujwalic left
[11:04] *** PZt joined
[11:06] *** AzureStone_ joined
[11:18] *** ejs0 joined
[11:24] *** AzureStone left
[11:28] *** alanhaggai joined
[11:37] *** iblechbot left
[11:52] *** kst` left
[11:52] *** kst` joined
[11:57] *** insert_coins joined
[12:16] *** xiaoyafeng joined
[12:16] *** ejs0 left
[12:22] *** iblechbot joined
[12:33] *** ejs0 joined
[12:41] *** kst` left
[12:41] *** kst` joined
[12:48] *** alanhaggai left
[12:54] *** alc joined
[13:01] *** pmurias_ joined
[13:12] <pmurias_> TimToady: is the strange indent from Cursor.pmc used anywhere?

[13:13] *** pedrob joined
[13:17] *** masak joined
[13:18] *** alester joined
[13:18] *** schmalbe left
[13:18] *** kst` left
[13:19] *** kst` joined
[13:22] *** alester left
[13:23] *** alc left
[13:31] *** z80ASM joined
[13:37] *** pmurias_ left
[13:42] *** jferrero joined
[13:45] *** jhorwitz joined
[13:52] <z80ASM> hi, hackers

[13:53] <masak> z80ASM: y0

[13:53] <z80ASM> so bored... maybe should start programming something

[13:54] <masak> might I suggest you take a look at this Perl 6 wiki project everyone's talking about? :)

[13:54] <z80ASM> mmh... sure ;P

[13:54] <masak> http://www.november-wiki.org/

[13:54] <lambdabot> Title: Main_Page

[13:54] <masak> http://github.com/viklund/november/

[13:54] <lambdabot> Title: viklund's november at master — GitHub

[13:56] <masak> suggested order of introduction: hit the README file, then talks/YAPC-EU-2008.pdf, then docs/, then the source in p5w/ and p6w/

[13:56] *** kst` left
[13:56] *** kst` joined
[13:56] *** alanhaggai joined
[14:05] *** rjbs left
[14:07] <xiaoyafeng> november is great, not on cross platform is a flaw.

[14:08] <masak> xiaoyafeng: thank you. Parrot is also great, or at least going in the direction of greatness.

[14:09] <masak> it's both cross-platform and cross-language, which is kind of mind-boggling when you think about it.

[14:13] *** alanhaggai left
[14:15] *** pmurias_ joined
[14:15] *** mncharity joined
[14:17] <mncharity> TimToady, etal: it looks like gimme5 isn't including elsif clauses in its output?  'if 3 { 4 } elsif 5555 { 55555 }', the 5's didn't show up.  not pressing, just fyi.

[14:17] <lambdabot> mncharity: You have 1 new message. '/msg lambdabot @messages' to read it.

[14:19] <pmurias_> mncharity: hi

[14:20] <mncharity> pmurias_: thanks.  question is, what to then do when you see a  ... hi :)

[14:21] <pmurias_> when do you have a problem with circularity?

[14:21] <mncharity> ... see a node again.  current "answer" is include it a few more times, in case the AST->IR converter needs it, then punt.  possible alternative is "just don't include the SIGIL field".  another possible answer is "stop being careless - the tree is fine".  we'll see.

[14:22] <mncharity> re when, STD_blue_run --format=p5a

[14:23] <mncharity> not sure I'd call it a problem, well, not a real one. :)  but an issue.

[14:23] <pmurias_> you could save circularity with assignment to a variable

[14:23] <pmurias_> or assume that AST->IR won't need it

[14:25] <mncharity> yes, that one (won't need)

[14:25] <mncharity> :)

[14:25] *** lichtkind joined
[14:27] <mncharity> basically, circularity is unexpected, probably shouldn't be there, and would require some small work to deal with.  so "before simply adapting, try knocking it off".

[14:29] <mncharity> bit of progress.  checkin later.  back later.   cheers &

[14:29] *** pedrob left
[14:29] *** mncharity left
[14:29] *** pedrob joined
[14:30] *** bacek_ left
[14:32] <pugs_svn> r22595 | putter++ | [elfish/STD_blue] Continuing to adapt constructors.

[14:32] *** pedrob left
[14:36] *** alester joined
[14:37] *** z80ASM left
[14:39] *** kst` left
[14:39] *** kst` joined
[14:39] <pugs_svn> r22596 | pmurias++ | [mildew] added a --desugar option to see Perl 6 code converted to method calls

[14:50] *** bitofbuntu joined
[15:02] <lichtkind> pmichaud: there?

[15:28] *** hercynium left
[15:30] *** kst` left
[15:30] *** kst` joined
[15:30] *** ejs0 left
[15:37] <pugs_svn> r22597 | pmurias++ | [mildew] improved --deparse, ^!

[15:38] *** Exodist joined
[15:40] <TimToady> pmurias_: I don't think indent is used currently, though its big brother in gimme5 is used all over the place.  I think I used to use it to generate lexers back before I switched to a tabualr format.

[15:40] <TimToady> *tabular

[15:47] <TimToady> @tell mncharity yep, that's why I'm writing "viv --p6", to see what's not there that should be.  I figure if I can reproduce the original exactly then I'm not forgetting anything crucial.

[15:47] <lambdabot> Consider it noted.

[15:49] *** pedrob joined
[15:50] *** pedrob left
[15:50] *** masak left
[15:51] <pmurias_> TimToady: i'm even using  the one from gimme5 in mildew, but the one in Cursor.pmc seems broken (it inserts blank lines)

[15:58] *** pmurias_ left
[16:05] *** Lorn joined
[16:05] *** pmurias_ joined
[16:10] *** jferrero left
[16:10] *** zamolxes left
[16:12] *** z80ASM joined
[16:18] *** ruoso joined
[16:18] *** kst` left
[16:18] *** kst` joined
[16:19] *** [particle] joined
[16:25] <ruoso> TimToady, re: Foo::Bar.randommethod()... my reasoning was that *method* invocation applies to Classes, not all types of packages... therefore Foo::Bar wouldn't be found as a Class... unless we accept that all types of packages can be coerced to classes to do some basic things... otherwise. Foo::Bar.WHAT would return 'Package'

[16:27] <ruoso> TimToady, I do understand, however, that WHAT is a macro, but I'd rather accept the coercion to keep the semantic consistency...

[16:30] *** smtms left
[16:32] *** [particle]2 left
[16:34] *** Lorn__ joined
[16:36] <avar> w 14

[16:37] *** zamolxes joined
[16:43] *** adc_Penner joined
[16:43] *** schmalbe joined
[16:47] *** Lorn left
[16:47] *** Lorn_ left
[16:50] *** azawawi joined
[16:50] <azawawi> hi

[16:50] *** justatheory joined
[16:51] <azawawi> @seen moritz_

[16:51] <lambdabot> moritz_ is in #perl6. I last heard moritz_ speak 20h 18m 23s ago.

[16:51] * moritz_ waves hi to azawawi and then has to leave for his table tennis game

[16:51] <moritz_> but I'll backlog ;)

[16:51] <azawawi> have fun ;-)

[16:51] <moritz_> thanks

[16:56] *** jferrero joined
[16:58] <pmurias_> ruoso: hi

[16:59] <pmurias_> ruoso: the way STD handles is if Foo::Bar is a know type it is a type else it's a package

[17:01] *** z80ASM left
[17:01] <pmurias_> STD:3248

[17:03] *** kst` left
[17:03] *** kst` joined
[17:04] *** Zoffix joined
[17:05] *** ruoso left
[17:07] *** pedrob joined
[17:13] *** Jedai left
[17:15] <azawawi> rakudo: say <a b c d>[-2, -1]

[17:15] <p6eval> rakudo 31926: OUTPUT[c␤]

[17:15] <azawawi> pugs: say <a b c d>[-2, -1]

[17:15] <p6eval> pugs: OUTPUT[cd␤]

[17:15] <Zoffix> 0_p

[17:17] *** TJCRI joined
[17:25] *** pmurias_ left
[17:25] *** Jedai joined
[17:33] *** meppl joined
[17:36] *** smtms joined
[17:36] *** kst` left
[17:36] *** kst` joined
[17:39] *** Bzek left
[17:53] *** ab5tract joined
[17:56] *** pmurias_ joined
[17:58] *** justatheory left
[17:58] *** justatheory joined
[18:05] <TimToady> pmurias_: no, if it's not a known type it

[18:06] <TimToady> is a function

[18:06] <TimToady> packages are considered degenerate types

[18:08] <TimToady> and any package name may be used as a protoobject, even if we don't know anything about the type yet

[18:09] <azawawi> what the correct way to read a line from stdin in p6?

[18:10] <TimToady> =$*IN

[18:10] <PerlJam> greetings

[18:10] <TimToady> or =<>, if no command line args

[18:11] <PerlJam> I still want to write =<$*IN> sometimes

[18:12] <azawawi> what about 'my $foo = $*IN.readline;'?

[18:12] <azawawi> i noticed that pugs also allows bare readline...

[18:12] <TimToady> not sure if that will be official

[18:14] <azawawi> $*IN.readline or readline alone or readline?

[18:14] <TimToady> any of those

[18:14] <azawawi> thx

[18:15] <TimToady> but likely there's some single-dispatch api for iterators, and whatever that is...

[18:16] <TimToady> so maybe $*IN.shift or some such

[18:16] *** ab5tract left
[18:16] *** hercynium joined
[18:16] <PerlJam> $*IN.more_please

[18:16] <TimToady> whatever the multi-dispatch prefix:<=> calls underneath

[18:16] <pmurias_> TimToady: sorry, i should reread code before misleading others

[18:17] <PerlJam> $*IN.thank_you_sir_may_I_have_another

[18:17] <TimToady> so almost certainly *not* readline

[18:17] <azawawi> rakudo: my $foo = =<>; say $foo;

[18:17] <p6eval> rakudo 31926: OUTPUT[-1␤]

[18:17] *** tomyan left
[18:18] <azawawi> rakudo returns -1 on =<>

[18:18] <TimToady> pugs:  my $foo = =<>; say $foo;

[18:18] <p6eval> pugs: OUTPUT[*** Unsafe function '=' called under safe mode␤    at /tmp/WwLB9u6bfm line 1, column 6-14␤]

[18:18] <TimToady> that makes more sense

[18:19] *** schmalbe left
[18:20] <azawawi> rakudo: my $foo = =$*IN; say $foo;

[18:20] <pmurias_> OTOH it would be cool if it spawned a new bot waiting for input

[18:21] <azawawi> that should be waiting for sure...

[18:22] <azawawi> under rakudo, only =$*IN and $*IN.readline currently work

[18:23] *** kst` left
[18:23] *** kst` joined
[18:24] <pmurias_> azawawi: it might be waiting for input from the standard input the evalbot recived

[18:24] <pmurias_> rakudo: say 1

[18:25] <azawawi> rakudo: say "anything";

[18:25] <pmurias_> pugs: 1

[18:25] <PerlJam> TimToady: why isn't $*IN.shift blessed?  Or have you just not thought about it in enough detail beyond "not readline"?

[18:27] *** jeja joined
[18:28] <TimToady> several reasons

[18:28] <TimToady> one of which is confusion between multiple dispatch apis and single dispatch

[18:29] <TimToady> another of which is the principle of "just do it like P5"

[18:29] <TimToady> yet another is "filehandles are just iterators"

[18:29] <TimToady> vs "filehandles *aren't* just iterators"

[18:30] *** zamolxes left
[18:30] <TimToady> for instance, suppose you want to generalize =<>, which does double iteration

[18:30] *** pmurias__ joined
[18:31] <TimToady> =@filenames doesn't read the lines from each file like =<> does from @*ARGV

[18:31] <TimToady> @*ARGS rather

[18:31] <lambdabot> Unknown command, try @list

[18:31] <TimToady> not sure whether that worthwhile

[18:31] <TimToady> *that is

[18:34] <TimToady> and maybe there's something going on with a slice of iterators

[18:35] <TimToady> and =[;] @filenames woudl be what =<> is really doing

[18:38] <TimToady> more succinctly, =@*ARGS gives you the next filename, whereas =@@*ARGS gives you the next line

[18:38] <TimToady> or maybe something inside out from that

[18:40] * PerlJam is *so* glad he's not a language designer  :)

[18:43] *** pmurias_ left
[18:47] *** pmurias__ is now known as pmurias_

[18:47] <pmurias_> TimToady: is VAST::Methocall intended?

[18:48] <TimToady> nope

[18:48] *** ab5tract joined
[18:50] <TimToady> well, what are you asking, really?

[18:51] <pmurias_> i see VAST::Methodcall nodes in VAST and they seem strange

[18:52] <TimToady> it's just a precedence level, really

[18:52] <TimToady> so anything postfixey tends to look like that

[18:53] <TimToady> except for ++ maybe

[18:54] <pmurias_> why aren't VAST nodes subclasses of Match?

[18:54] <TimToady> because they're not parse trees, they're abstract(er)

[18:57] <pmurias_> is VAST intended to diverge much from the parse tree?

[18:58] <TimToady> it's intended to be something that is easy to walk and spit out p5 so I can replace gimme5

[18:59] *** jferrero left
[19:02] *** pedrob left
[19:08] *** kst` left
[19:08] *** kst` joined
[19:17] *** jferrero joined
[19:18] <TimToady> or maybe =<> is really ==@*ARGS, where prefix:<==> iterates a list of iterators, or a tree of iterators

[19:24] <TimToady> but a good functional programmer would pass prefix:<=> to a visitor, I suppose, though it's not nice for visitors to be destructive

[19:25] *** Zoffix left
[19:29] *** donaldh joined
[19:44] *** pedrob joined
[19:56] <azawawi> good night

[19:56] *** azawawi left
[19:59] *** kst` left
[19:59] *** kst` joined
[20:15] <moritz_> re

[20:16] *** bacek joined
[20:17] *** p6eval left
[20:17] *** p6eval joined
[20:32] *** cookys joined
[20:41] *** wilx_ joined
[20:51] *** kst`` joined
[20:51] *** kst` left
[20:53] *** partclCoke joined
[20:53] <partclCoke> ~

[21:00] *** pmurias_ left
[21:10] *** BinGOs left
[21:11] *** TJCRI left
[21:16] *** BinGOs joined
[21:26] *** bacek left
[21:32] *** bacek joined
[21:46] *** mncharity joined
[21:47] *** jhorwitz left
[21:48] *** donaldh left
[21:51] *** guhuc joined
[21:51] *** guhuc left
[21:52] *** saxufujoz joined
[21:54] *** hercynium left
[21:54] *** iblechbot left
[21:54] *** ruoso joined
[21:57] *** kst`` left
[21:57] *** kst`` joined
[22:03] *** adc_Penner left
[22:09] *** bitofbuntu left
[22:13] *** Lorn__ left
[22:16] *** saxufujoz left
[22:21] *** zamolxes joined
[22:29] *** bsb left
[22:31] *** [particle]1 joined
[22:35] <pugs_svn> r22598 | lwall++ | [99problems] caller must be caller() before something that looks like arguments

[22:38] *** Exodist left
[22:43] *** sri_work left
[22:48] *** [particle] left
[22:50] <mncharity> TimToady: just in case the STD circularity remains an open issue of interest, I note '$a.m == 0 ' results in chain=>[  {arg=> {post=> {arg=> ...

[22:50] <lambdabot> mncharity: You have 1 new message. '/msg lambdabot @messages' to read it.

[22:52] <mncharity> TimToady: apropos viv vs gimme5, so has gimme5 development ceased?  is the plan to fix things like the mising elsif clauses in gimme5, or punt until viv exists?

[22:54] *** kst`` left
[22:54] *** kst`` joined
[22:54] <TimToady> have a fix for it already

[22:54] <mncharity> :)

[22:54] <TimToady> just running the test

[22:55] <mncharity> np, no hurry, just wondering the plan.

[22:55] <TimToady> actually, half way through, so probably good enough to check in

[22:55] <TimToady> (fix for circularity, not elsif)

[22:57] <ruoso> TimToady, just a sanity check... so Foo::Bar.baz() will attempt to "coerce" the package to a dumb class that might even provide a method baz() even not being an actual class?

[22:57] <pugs_svn> r22599 | lwall++ | [STD] fix circularity bug in unary and binary ops

[22:57] <pugs_svn> r22599 | lwall++ | [viv] more progress in ~ delimiters through

[22:57] <TimToady> something like that--might even degrade down to a P5ish dispatcher

[22:58] <mncharity> apropos "reproduce the original exactly" (as a test of some parse tree's correctness), I note that I have learned fear of that concept.  it always seems attractive, but since diffs often remain unusable until a sea of little nits get precisely dealt with, my attempts in that direction often converge too slowly to succeed.

[22:59] <TimToady> depends on how you define "succeed"

[22:59] <TimToady> and on how stubborn you are... :)

[22:59] <mncharity> lol

[22:59] <ruoso> TimToady, hmmm... that's actually a very sane option... a class-less package when coerced to a class returns a class that has a p5-like dispatcher as HOW

[22:59] <TimToady> I know that's the only thing that worked for MAD

[23:00] <mncharity> re (fix for circularity, not elsif), ah, oh, drat. ;)

[23:00] <TimToady> the elsif problem is a little hairier, something to do with trying to bind a quantified parenthesis maybe

[23:02] <TimToady> anyway, it's probably putting the $<elsif> binding inside the parens and then throwing it all away

[23:02] <mncharity> re MAD, ah.  yeah.  So I guess my observation is "the path can be unexpectedly expensive".

[23:02] <mncharity> given MAD, you know this.

[23:02] <TimToady> some kinds of success can only be bought for "expensive"

[23:03] <TimToady> and in that case it was something I had to pay for my earlier transgressions :)

[23:05] <mncharity> re circularity patch, I confirm my loops have gone away.  happiness.

[23:05] <mncharity> lol

[23:06] <mncharity> language implementation as penance.  fun concept.

[23:08] <TimToady> may have a workaround for elsif problem, compiling

[23:10] <pugs_svn> r22600 | lwall++ | [STD] workaround for elsif problem; put extra [] to move quantifier outside of binding

[23:10] <TimToady> seems to do the trick

[23:11] <TimToady> changed $<x> = (...)* to [$<x> = (...)]*

[23:11] <TimToady> some there's some screwup between quantifiers and binding

[23:15] *** _fer_ joined
[23:15] <TimToady> s/some/so

[23:15] <_fer_> hello folks

[23:15] <TimToady> what about those of us that aren't folks?

[23:16] <_fer_> sorry, I'm not speak english very well and I think that may be a good way to say "hello"

[23:16] <_fer_> :-)

[23:16] <TimToady> it's fine, I'm just giving you a hard time :)

[23:16] <_fer_> ok

[23:17] <_fer_> you are the only person on this channel

[23:17] <_fer_> ?

[23:17] <TimToady> there are quite a few people, but they're mostly asleep

[23:17] <TimToady> and those who look in every few minutes are likely off hacking on something on the side

[23:17] <_fer_> where are you=

[23:18] <_fer_> ?

[23:18] <TimToady> in my chair at the office

[23:18] <_fer_> In wich county

[23:18] <_fer_> country

[23:18] <_fer_> I'm from argentina

[23:18] <TimToady> US of A

[23:18] <_fer_> aaaa ok

[23:18] <meppl> good night

[23:18] <TimToady> I've flown over Argentina

[23:19] <_fer_> yes?, and you like it?

[23:19] *** bjakb left
[23:19] <TimToady> well, the Andes are pretty

[23:19] <_fer_> do you visit Buenos Aires?

[23:19] <TimToady> but I only landed in Chile and Uruguay

[23:19] <_fer_> aaaa, ok

[23:19] <_fer_> you must visit Buenos aires

[23:19] <_fer_> is a beautifull place

[23:20] <TimToady> I hope to get there someday

[23:20] <_fer_> I live in Buenos Aires

[23:20] <_fer_> where do you live?

[23:20] <TimToady> California

[23:20] <mncharity> g'night meppl

[23:20] <_fer_> Beach boys

[23:20] <_fer_> :-)

[23:21] <TimToady> "I wish they all could be California girls..."

[23:21] <meppl> ;)

[23:21] <_fer_> if you could see the argentinean girls don't you say thar :-)

[23:23] *** meppl left
[23:28] *** _fer_ left
[23:30] <mncharity> if()s working.  yay.  tnx.

[23:43] *** kst`` left
[23:43] *** kst`` joined
[23:43] <mncharity> "We the passing generation have had to grope our way out of the dark slowly and painfully, with trial and error. But what has to be pardoned to us can no longer be pardoned to our successors, to whom we bequeath the costly knowledge and painful experiences that have cost us so dear, but which we have gladly earned, and now painstakingly contribute for their instruction, and the advancement of their future..."

[23:43] <mncharity> oh, i'm so very tired of ast groveling.

[23:44] <TimToady> just think how much easier this would all be in Haskell :)

[23:45] <mncharity> lol.  sigh.

[23:59] *** pedrob left
