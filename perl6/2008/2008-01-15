[00:00] *** meppl joined
[00:00] <cosimo> To anyone on these frequencies. Is it correct to mark todos as `#?pugs:' rather than `#?perl6:' ?

[00:00] *** lambdabot left
[00:01] <[particle]> yes, but pugs doesn't understand it yet

[00:01] <TimToady> sure, if it's an old todo

[00:01] *** lambdabot joined
[00:01] <TimToady> pugs will be taught

[00:01] <TimToady> with our fantastic new preprocessor

[00:01] <cosimo> yes, I mean old ones that were already in the tests.

[00:01] <TimToady> go ahead and change them

[00:01] <[particle]> pugs is old & busted. <the implementation yet to be named> is the new hotness.

[00:01] *** jferrero left
[00:02] <japhb_> TimToady: to bad we can't just pipe it through Tom anymore ....

[00:02] <TimToady> it's a shell game

[00:03] <TimToady> we should call our preprocessor "fudge"

[00:04] * japhb_ mightily resists the urge to go back into free-association mode on codenames for the preprocessor

[00:04] <TimToady> you write it, you can name it. :)

[00:04] <cosimo> I should assume that things like: "#?pugs: todo($reason,1)" are not going to work. Correct?

[00:05] <[particle]> cosimo: can you expand on what you mean by "not going to work"?

[00:05] <japhb_> TimToady: I've already got my hands full with one Perl 6/Parrot project ... I can only shave so many yaks at once.  :-)

[00:05] <TimToady> they'll jus tlook like comments to Perl currently

[00:06] <TimToady> to pugs that is

[00:06] <TimToady> and the test will fail anyway...

[00:06] <cosimo> Look here http://svn.pugscode.org/pugs/t/spec/S29-str/split.t

[00:07] <cosimo> There's `:todo<$todo>'

[00:07] <cosimo> Does this make sense with the new directives

[00:07] <cosimo> ?

[00:08] <[particle]> yes, it makes sense. the term following the directive is executed at runtime

[00:08] <[particle]> so $todo will work

[00:08] <cosimo> I see. thanks!

[00:08] <TimToady> it's using it as a boolean to mark the test as todo

[00:09] <TimToady> at runtime

[00:09] <TimToady> which we can perhaps continue to support

[00:09] <cosimo> isn't `$todo' the reason for marking test as todo?

[00:09] <TimToady> except then it's not platform independent

[00:10] <TimToady> default is 0, which presumably doesn't mark it todo

[00:11] * cosimo seem to recall that :todo worked the other way around...

[00:11] <cosimo> like :todo(n_of_tests, reason)

[00:11] <cosimo> probably...

[00:12] <TimToady> the old flag just applied to the current is() or ok(), so no count needed

[00:12] *** Andy_ joined
[00:12] <TimToady> if #?pugs: todo sets a $*TODO counter, the sub probably needs to pay attention to that instead of having a $todo parameter

[00:13] <cosimo> I'm confused now...

[00:15] <cosimo> Idea: drop the $todo flag in the sub, and put the #?pugs: todo() directive on the line before the call to `split_test'

[00:15] <cosimo> even if $todo = 0

[00:15] <cosimo> which makes me think it was a fast and easy way to make that test todo or not

[00:16] <TimToady> indeed, it's called only once, so just assume someone will put #?foo: todo in front of the call

[00:16] <TimToady> if they need to mark it todo

[00:17] <TimToady> or, in worst case, put a bare block around the call

[00:17] <TimToady> so just drop the $todo parameter, yes

[00:17] <cosimo> ok

[00:20] <pugs_svn> r19489 | cosimo++ | Removed the $todo flag (was disabled anyway). If needed, we will add a '#?perl6: todo' marker

[00:21] *** Limbic_Region joined
[00:22] *** cosimo left
[00:23] *** thoughtp1lice joined
[00:23] *** thoughtpolice left
[00:24] *** thoughtp1lice is now known as thoughtpolice

[00:30] <pugs_svn> r19490 | ruoso++ | [smop] SMOP__LOWLEVEL__OP__Free as an operator available to the high-level, as there can be a node referencing this call in the stack, in the CPS object destruction...

[00:30] *** Auzon joined
[00:31] <pugs_svn> r19491 | ruoso++ | [smop] changing the Perl 6 code snippet for the CPS object destruction to use the constants instead of bare identifiers

[00:34] <pugs_svn> r19492 | ruoso++ | [smop] updating the Perl 6 snippet in the test... Everytime I start thinking about writing the lowlevel test I realise that something is missing. Lets hope this is the last time I realise it...

[00:37] *** Southen left
[00:37] *** pjcj left
[00:37] *** pjcj joined
[00:37] *** Southen joined
[00:37] *** Southen_ joined
[00:39] <ruoso> weird is that for the lowlevel I need the highlevel and for the highlevel I need the lowlevel... bootstrap is a confusing thing... (I hope I do find my way out...)

[00:40] <ruoso> if anyone jumps in and help writing the test code for the lowlevel :P

[00:43] *** jhorwitz left
[00:49] <pugs_svn> r19493 | ruoso++ | [smop] some more comments in the 01_smop_lowlevel.c test

[00:49] <ruoso> sleep &

[00:50] <Auzon> Good night ;)

[00:54] *** Southen left
[00:57] <meppl> good night

[00:59] *** ruoso left
[00:59] *** meppl left
[01:06] *** braceta left
[01:12] *** lyokato_ joined
[01:15] *** devogon left
[01:18] *** cnhackTNT joined
[01:25] *** nipotaway is now known as nipotan

[01:32] *** jjore left
[01:39] *** Jedai joined
[01:47] *** jferrero joined
[01:56] *** Torment left
[02:07] *** Caelum left
[02:09] *** Caelum joined
[02:10] *** jferrero left
[02:22] *** wknight8111 joined
[02:34] *** agentzh left
[02:45] *** Southen_ left
[02:45] *** Southen_ joined
[02:46] *** Southen joined
[03:02] *** Southen_ left
[03:03] *** Southen left
[03:04] *** gongyiliao joined
[03:06] *** agentzh joined
[03:18] *** penk joined
[03:29] *** Torment joined
[03:40] *** BillR joined
[03:42] *** BillR left
[03:47] *** takanori_ left
[03:47] *** Jedai left
[04:04] *** takanori joined
[04:04] *** jjore joined
[04:13] *** Limbic_Region left
[04:16] <spinclad> [hold for uplogging:] re ___STACK___:  could this become C< $MY::STACK >, along with C< $CALLER::STACK >, C< $OUTER::STACK > (perhaps) and such?  The MY:: and CALLER:: ones at least could be tools in CPS conversion, if i hit my guess.

[04:17] <spinclad> s/[hold .*:]//  # oops

[04:36] *** nothingmuch left
[04:40] *** nishanth joined
[04:53] *** ChanServ sets mode: +o diakopter

[04:54] *** diakopter sets mode: +o TimToady

[04:54] *** diakopter sets mode: -o diakopter

[04:54] *** wknight8111 left
[04:55] <diakopter> TimToady: 'is the just the' in Functions.pod

[05:05] <TimToady> it's in pugs repo, so you can fix it.  :)

[05:16] *** Aankhen`` joined
[05:26] *** bsb joined
[05:55] *** Auzon left
[06:01] *** alc joined
[06:02] *** kanru left
[06:07] *** DarkWolf84 left
[06:10] *** WAR-GOD joined
[06:16] *** WAR-GOD left
[06:17] *** thoughtpolice left
[06:30] *** shachaf is now known as slbkbs

[06:36] *** penk left
[06:39] *** gongyiliao left
[06:40] *** kanru joined
[06:43] *** slbkbs is now known as shachaf

[06:49] *** shachaf is now known as slbkbs

[06:50] *** shachaf joined
[06:52] *** slbkbs left
[06:59] *** penk joined
[07:00] *** mncharity left
[07:00] *** mncharity joined
[07:07] *** cnhackTNT left
[07:09] *** cosimo joined
[07:20] *** cosimo left
[07:23] *** jisom joined
[07:35] *** devogon joined
[07:38] *** cnhackTNT joined
[07:47] *** sachu joined
[07:53] <sachu> Hi.  I would like to start contributing to Pugs. I was looking around for bugs to try fixing. The list I could find, following the "All open tickets" link at http://dev.pugscode.org/wiki/ , is very small (27 entries) and looks like mostly like housekeeping issues. I would like something more "code-like" to work on -- part of the idea is that I will learn better Haskell and Perl in the effort...

[07:53] <lambdabot> Title: Pugs - Trac

[07:53] <sachu> ...to track down and fix the bug. Am I looking in the wrong place, or are there no hard-core bugs in Pugs? (I already have a committer Id). If the former, could you point me to the current bugs list?

[07:54] <moritz_> sachu: the bug list is the list of failing test cases

[07:55] <allbery_b> pugs is kinda not being actively developed; it's somewhere in the middle of a massive overhaul audreyt was doingbefore she fell sick (adding the Meta-Object Protocol)

[07:55] <moritz_> sachu: run "make smoke" and then look at smoke.html

[07:56] <sachu> moritz_,allbery_b: thanks. Does this mean that there is not much to be done right now in pugs?

[07:56] <allbery_b> not in pugs per se.  much of the actual development these days is in kp6 (also in the pugs tree), mostly in the lisp backend IIRC

[07:57] <moritz_> sachu: it means that you are free to do whatever you want with pugs

[07:57] <moritz_> ;-)

[08:00] <sachu> (wondering what to do now!) thank you for the help. would you happen to know an opensource project that  is being actively developed and uses Haskell?

[08:01] <allbery_b> check the haskell.org wiki

[08:01] <allbery_b> off the top of my head, darcs

[08:02] <sachu> thanks

[08:03] *** aindilis left
[08:03] *** aindilis joined
[08:07] <sachu> allbery_b: what happened to audreyt? is she ok now?

[08:07] <moritz_> sachu: she has to live a life with much stress, which implies less to no pugs hacking

[08:07] <allbery_b> she got hepatitis.  she's recovered from that mostly but doctors have told her to live a low-stress lifestyle for a while to make sure it doesn't recur

[08:10] <sachu> ok

[08:10] <allbery_b> (before she got ill, it was like she never slept or rested...)

[08:11] <allbery_b> body can take only so much of that kind of abuse, then the reserves are gone and the $#!+ hits the fan, and you're never the same

[08:12] <allbery_b> happened to me just over 10 years ago, since then haven't had anything like the energy or resilience I originally had

[08:12] <sachu> (and nobody has taken over that mantle yet?)

[08:12] <allbery_b> (I got "walking bronchitis" instead of hepatitis:  try to treat it, it'd switch lungs or be replaced by flu for a while)

[08:12] <allbery_b> too much of it was in audrey's head, I think

[08:12] *** masak joined
[08:12] <sachu> hmmm...

[08:13] <allbery_b> or possibly on her laptop and now stuck there

[08:14] <allbery_b> in any case, some of the early decisions in pugs came back to haunt it (perl6 allows a wider range of identifier names than the parser in pugs can accept without a massive from-the-ground-up rewrite, for example)

[08:15] <allbery_b> so, while it was a useful starting point, it's probably not worth putting too much effort into unless you want to use what's there as an example but start from scratch

[08:17] <allbery_b> (pugs' big advantage was that haskell has awesome support for writing language interpreters/compilers, so it was relatively quick to make a working perl6 prototype.  but being quick, not everything was thought through fully, like the parsing)

[08:20] *** iblechbot joined
[08:22] <allbery_b> and it did what it set out to do:  by implementing a working perl6 prototype it kickstarted perl6 work which had gotten bogged down and was going nowhere

[08:23] * allbery_b is multitasking, sorry

[08:24] *** cosimo joined
[08:24] *** nishanth left
[08:30] *** chacha_chaudhry joined
[08:41] *** nothingmuch joined
[08:50] *** chacha_chaudhry left
[09:15] *** jferrero joined
[09:20] *** braceta joined
[09:28] *** mmorrow joined
[09:29] <mmorrow> hey, i just darcs got the pugs repo, and noticed that the last recorded patch is from may 2007.

[09:29] <mmorrow> so the darcs repo isn't up to date, then?

[09:29] *** Southen joined
[09:30] <allbery_b> may 2007?  sounds like you hit the old one

[09:30] <mmorrow> yeah

[09:30] <mmorrow> where's the newbie

[09:30] <mmorrow> ?

[09:31] <mmorrow> i got from http://darcs.pugscode.org/

[09:31] <lambdabot> Title: Index of /

[09:31] <allbery_b> oh.  it's not in darcs, it's in svn

[09:31] <mmorrow> ahh

[09:31] <mmorrow> thanks

[09:32] <allbery_b> http://svn.pugscode.org/pugs

[09:32] <lambdabot> Title: Revision 19493: /

[09:34] <allbery_b> (darcs doesn't handle large numbers of patches well.  darcs2 is supposed to fix that but they're still working bugs and perofrmance issues out of it and it didn't exist at all when the darcs pugs repo was getting really slow)

[09:34] <mmorrow> ha. i first got without the --partial flag...15000+ patches

[09:35] <allbery_b> yep

[09:35] <allbery_b> gets painful when it goes to reconcile them all :)

[09:35] <mmorrow> sounds like fun to me!

[09:36] *** jferrero left
[09:40] *** Southen left
[09:40] *** qmole_ left
[09:40] *** Southen joined
[09:42] *** pen1 joined
[09:42] *** qmole_ joined
[09:42] *** qmole__ joined
[09:43] *** Southen left
[09:47] *** pen2 joined
[09:49] *** qmole left
[09:55] *** Southen joined
[09:59] *** masak left
[10:00] *** penk left
[10:04] *** Southen left
[10:05] *** pen1 left
[10:13] *** stevan_ left
[10:16] *** pen2 left
[10:17] *** cnhackTNT left
[10:22] *** sachu left
[10:31] *** alc left
[10:48] *** chris2 joined
[10:59] *** lyokato_ left
[11:00] *** lyokato_ joined
[11:00] *** lyokato_ left
[11:01] *** wknight-away joined
[11:10] *** falesca joined
[11:15] *** jferrero joined
[11:26] *** iblechbot left
[11:48] *** njbartlett_ left
[11:51] *** polettix left
[11:52] *** nipotan is now known as nipotaway

[11:54] *** Botje left
[11:54] *** jisom left
[11:55] *** Alias_ joined
[11:57] *** Botje joined
[12:00] *** polettix joined
[12:23] *** wknight-away left
[12:24] *** ebassi joined
[12:44] *** Southen joined
[12:46] *** cmarcelo joined
[12:53] *** kanru left
[12:53] *** kanru joined
[12:56] *** wknight-away joined
[12:56] *** lorn joined
[12:57] *** lorn is now known as Lorn

[12:58] *** polettix left
[12:58] *** polettix joined
[13:00] *** chris2 left
[13:04] *** Lorn left
[13:09] *** njbartlett_ joined
[13:13] *** lorn joined
[13:15] *** iblechbot joined
[13:30] *** skids left
[13:33] *** jferrero left
[13:34] *** njbartlett_ left
[13:35] *** ispy_ joined
[14:03] *** Andy_ left
[14:24] *** [particle] left
[14:32] *** skids joined
[14:34] *** [particle] joined
[14:38] *** njbartlett_ joined
[14:44] *** pjcj left
[14:44] *** pjcj joined
[14:45] *** manfred joined
[14:46] *** jhorwitz joined
[14:46] *** njbartlett_ left
[14:56] *** kanru left
[14:57] *** rdice joined
[15:12] *** meppuru joined
[15:18] *** TJCRI joined
[15:18] *** lorn is now known as Lorn

[15:19] *** meppuru is now known as meppl

[15:41] *** kanru joined
[16:15] *** [particle] left
[16:26] *** [particle] joined
[16:30] *** jferrero joined
[16:31] *** icwiener joined
[16:33] *** blindfish joined
[16:40] *** barney joined
[16:55] *** blindfish left
[17:20] *** njbartlett_ joined
[17:22] *** jjore left
[17:22] *** cosimo left
[17:22] *** IllvilJa left
[17:23] *** justatheory joined
[17:28] *** pdcawley joined
[17:31] *** njbartlett_ left
[17:42] *** IllvilJa joined
[17:48] *** meppl left
[17:48] *** justatheory_ joined
[17:49] *** justatheory left
[17:51] *** meppuru joined
[17:53] *** blindfish joined
[17:54] *** blindfish left
[17:56] *** cognominal_ left
[18:01] *** njbartlett_ joined
[18:02] *** [particle] left
[18:07] *** [particle] joined
[18:29] *** jjore joined
[18:30] *** ebassi left
[18:46] *** jjore left
[18:48] *** jjore joined
[18:50] *** DarkWolf84 joined
[18:51] *** icwiener left
[18:51] *** icwiener joined
[19:05] *** icwiener left
[19:06] *** icwiener joined
[19:06] *** icwiener left
[19:06] *** icwiener joined
[19:07] *** icwiener left
[19:08] *** icwiener joined
[19:09] <meppuru> good night

[19:11] *** meppuru is now known as meppl

[19:12] *** meppl left
[19:40] *** rindolf joined
[19:45] *** ruoso joined
[19:52] *** jferrero left
[20:06] *** barney left
[20:07] *** rdice left
[20:07] *** ruoso left
[20:12] *** rindolf left
[20:35] *** pjcj_ joined
[20:36] *** pjcj left
[21:08] <pugs_svn> r19494 | cosimo++ | Converted quotemeta.t to unix format (?)

[21:09] *** justatheory_ left
[21:09] *** justatheory joined
[21:10] <moritz_> @tell cosimo the line endings of quotemeta.t looked fine before, and if they were wrong additional carriage returns shouldn't damage the markup like that

[21:10] <lambdabot> Consider it noted.

[21:12] <pugs_svn> r19495 | cosimo++ | Converted some *.t scripts to unix format (?)

[21:19] *** Aankhen`` left
[21:22] *** manfred left
[21:23] *** Blasi joined
[21:34] *** rindolf joined
[21:34] *** chris2__ joined
[21:35] *** chris2__ left
[21:35] *** chris2 joined
[21:37] <wknight-away> is there an svn for perl 6? I just checked out the parrot trunk and perl 6 isn't in there

[21:37] <moritz_> wknight-away: it's in languages/perl6/

[21:38] <wknight-away> i just checked out and there is no /languages subfolder

[21:38] *** wknight-away is now known as wknight8111

[21:38] <moritz_> which repo URL are you using?

[21:39] <moritz_> https://svn.perl.org/parrot/trunk/languages/perl6/

[21:39] <lambdabot> Title: Revision 24891: /trunk/languages/perl6

[21:39] <wknight8111> https://svn.perl.org/parrot/trunk <-- what I used

[21:39] <lambdabot> Title: Revision 24891: /trunk

[21:40] <moritz_> that's what I use, and there's a languages/ folder in there

[21:41] <wknight8111> Okay, i see it when i browse. I'll try to update or something. Thanks

[21:41] <moritz_> I mean I use the same as you do

[21:41] <moritz_> yw

[21:55] *** marmic left
[21:55] *** jhorwitz left
[21:57] *** justatheory left
[21:59] *** marmic joined
[22:06] *** ispy_ left
[22:10] *** Lorn left
[22:11] *** pdcawley left
[22:30] *** cmarcelo left
[22:31] *** Schwern joined
[22:36] *** TJCRI left
[22:39] *** rindolf left
[22:42] *** ashleyb joined
[22:51] *** _ccc joined
[22:52] *** jferrero joined
[22:53] <_ccc> for zip(@bar; @foo) -> $b, $f {...} doesn't work as advertised on runpugs - is this just a bug, or a change in zip or for

[22:53] <moritz_> I think a bug in pugs

[22:53] <moritz_> pugs: for <a b c> Z <1 2 3> -> $a, $b {say $a, ": ", $b }

[22:54] <exp_evalbot> OUTPUT[a1: b2␤c3: ␤]

[22:54] <moritz_> pugs: for <a 1 b 2 c 3> -> $a, $b {say $a, ": ", $b }

[22:54] <exp_evalbot> OUTPUT[a: 1␤b: 2␤c: 3␤]

[22:54] *** cmarcelo joined
[22:54] <moritz_> so it seems infix:<Z> doesn't work as expected either

[22:55] <_ccc> not flattening

[22:55] <moritz_> pugs: <a b> Z <1 2>

[22:55] <exp_evalbot> RESULT[(("a", "1"), ("b", "2"))]

[22:55] <moritz_> aye

[22:55] <_ccc> pugs: eager(<a b> Z <c d>)

[22:55] <exp_evalbot> OUTPUT[*** ␤    Unexpected "Z"␤    expecting operator, ":" or ")"␤    at /tmp/kQT77uftyy line 1, column 13␤]

[22:55] <moritz_> _ccc: I think the "slice" context changes where introduced after audreyt got thick

[22:56] <moritz_> pugs: my $a = lazy { say "foo"; }; say "bar";

[22:56] <exp_evalbot> OUTPUT[bar␤]

[22:56] <moritz_> so lazy works, eager doesn't

[22:56] <moritz_> ironic, isn't it? ;-)

[22:56] <_ccc> true

[22:59] *** namit joined
[23:01] *** polettix left
[23:04] *** icwiener left
[23:05] *** _ccc left
[23:09] *** polettix joined
[23:11] *** cosimo joined
[23:19] *** dduncan joined
[23:19] *** dduncan left
[23:22] <pugs_svn> r19496 | cosimo++ | Test suite refactoring.

[23:22] <pugs_svn> r19496 | cosimo++ | unspecced/chop.t tests were already moved to t/spec/S29-str/chop.t.

[23:29] <pugs_svn> r19497 | cosimo++ | Test suite refactoring.

[23:29] <pugs_svn> r19497 | cosimo++ | Moved all array-related tests under S29 (t/spec/S29-array).

[23:29] <pugs_svn> r19497 | cosimo++ | Changed 1 todo test with the new compiler directive.

[23:29] <pugs_svn> r19497 | cosimo++ |  --Questa linea, e quelle sotto di essa, saranno ignorate--

[23:29] <pugs_svn> r19497 | cosimo++ | 

[23:29] <pugs_svn> r19497 | cosimo++ | D    t/builtins/arrays/shift.t

[23:29] <pugs_svn> r19497 | cosimo++ | D    t/builtins/arrays/pop.t

[23:29] <pugs_svn> r19497 | cosimo++ | D    t/builtins/arrays/push.t

[23:29] <pugs_svn> r19497 | cosimo++ | D    t/builtins/arrays/splice.t

[23:29] <pugs_svn> r19497 | cosimo++ | D    t/builtins/arrays/unshift.t

[23:29] <pugs_svn> r19497 | cosimo++ | A    t/spec/S29-array

[23:29] <pugs_svn> r19497 | cosimo++ | A    t/spec/S29-array/shift.t

[23:29] <pugs_svn> r19497 | cosimo++ | A    t/spec/S29-array/pop.t

[23:29] <pugs_svn> r19497 | cosimo++ | A    t/spec/S29-array/push.t

[23:29] <pugs_svn> r19497 | cosimo++ | A    t/spec/S29-array/splice.t

[23:29] <pugs_svn> r19497 | cosimo++ | A    t/spec/S29-array/unshift.t

[23:29] *** Limbic_Region joined
[23:37] *** iblechbot left
[23:43] <pugs_svn> r19498 | cosimo++ | [t] Refactored delete() tests into S29-array and S29-hash

[23:52] <pugs_svn> r19499 | cosimo++ | [t] Refactored `exists' builtin tests into S29-array and S29-hash

[23:53] *** skids left
[23:58] *** jiing left
[23:58] *** IllvilJa left
