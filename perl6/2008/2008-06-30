[00:06] *** bacek joined
[00:07] *** justatheory joined
[00:08] *** justatheory left
[00:10] *** bacek left
[00:10] *** bacek joined
[00:16] *** jferrero left
[00:53] *** meppl left
[01:12] *** xinming left
[01:12] *** xinming joined
[01:28] *** Alias_ joined
[01:31] *** a-jing joined
[01:31] *** a-jing left
[01:42] *** lambdabot joined
[02:17] *** hikozaemon joined
[02:18] *** hikozaemon left
[02:22] *** a-jing joined
[02:23] *** a-jing left
[02:30] *** apeiron_ joined
[02:33] *** apeiron left
[02:33] *** apeiron_ is now known as apeiron

[02:45] <pugs_svnbot> r21114 | Auzon++ | [gsoc_spectest] reorganization and a few more tests for ===, eqv, and ranges. (7 tests added)

[02:58] *** kanru left
[03:02] *** eternaleye left
[03:05] *** elmex left
[03:05] <pugs_svnbot> r21115 | lwall++ | [STD] improvements to strange quote languages

[03:06] *** elmex joined
[03:07] *** redicaps joined
[03:28] *** alanhaggai_ left
[03:31] *** kanru joined
[03:36] *** alanhaggai joined
[04:08] *** edpratomo joined
[04:22] *** edpratomo left
[04:26] *** alanhaggai left
[04:26] *** alanhaggai joined
[04:36] *** apeiron_ joined
[04:43] *** apeiron left
[05:14] *** alanhaggai left
[05:17] <rakudo_svn> r28841 | pmichaud++ | [rakudo]:

[05:17] <rakudo_svn> r28841 | pmichaud++ | * spectest-progress update:  74 files, 1126 passing tests (0 failing tests)

[05:22] *** alanhaggai joined
[05:44] *** wknight8111 left
[06:01] *** Psyche^ joined
[06:18] *** Patterner left
[06:18] *** Psyche^ is now known as Patterner

[06:19] *** meteorja1 left
[06:28] *** polettix joined
[06:43] *** apeiron_ is now known as apeiron

[06:45] *** smtms_ joined
[06:47] *** smtms left
[06:48] *** iblechbot joined
[06:53] *** xinming_ joined
[07:02] *** xinming left
[07:04] *** smtms_ left
[07:13] *** drbean left
[07:16] *** drbean joined
[07:18] *** alanhaggai_ joined
[07:23] *** polettix left
[07:34] *** alanhaggai left
[07:35] <moritz_> Auzon: I'm looking at range.t, line 22: ``isnt ~(0..^10), ~(0.. ^10)'' - is 0.. ^10 valid syntax? I guess it means the same as 0...(0..9), which kinda looks odd to me

[07:40] <pugs_svnbot> r21116 | moritz++ | [spec] fudged S03-operators/range.t, but needs Range.Str in Rakudo to work

[07:49] <pugs_svnbot> r21117 | moritz++ | [spec] fudged value_equivalence.t. Rakudo now parses it, but doesn't

[07:49] <pugs_svnbot> r21117 | moritz++ | implement infix:<===> yet

[08:00] *** alanhaggai_ left
[08:02] *** cls_bsd joined
[08:23] *** cosimo joined
[08:26] *** iblechbot left
[08:35] *** smtms joined
[08:40] *** smtms_ joined
[08:40] *** meppl joined
[08:42] *** bacek left
[08:45] *** smtms__ joined
[08:52] *** smtms left
[08:53] *** chris2 joined
[08:56] *** smtms joined
[08:59] *** smtms_ left
[09:03] *** smtms_ joined
[09:04] *** pmurias joined
[09:04] <pmurias> moritz_: sorry about blaming errors on evalbot ;)

[09:04] <pmurias> had an unrecompiled STD5.pm

[09:05] <pmurias> TimToady: how do you test STD.pm?

[09:06] <moritz_> judging from the commit logs by running it onto itself ;)

[09:06] *** smtms__ left
[09:07] <pmurias> moritz_: the problem is exactly how?

[09:07] <pmurias> s/?//

[09:07] *** alanhaggai joined
[09:07] <pmurias> as my stuff which used STD.pm just broke with the new commits

[09:15] <pmurias> what was the perl #... thingy to set the current filename? (/me left Programming Perl at home)

[09:16] <moritz_> you mean in eval?

[09:16] *** Jedai joined
[09:18] <pmurias> moritz_: no, in perl5

[09:20] *** smtms left
[09:20] <pmurias> s/current filename/filename used in reporting errors/

[09:21] *** smtms_ left
[09:25] <pmurias> moritz_: fixed

[09:25] <pmurias> * fixed pixie

[09:26] <pugs_svnbot> r21118 | pmurias++ | [pixie]

[09:26] <pugs_svnbot> r21118 | pmurias++ | pixie uses elfX

[09:26] <pugs_svnbot> r21118 | pmurias++ | fixed to work with the newest STD.pm

[09:26] <pugs_svnbot> r21118 | pmurias++ | [elfX]

[09:26] <pugs_svnbot> r21118 | pmurias++ | prefix:<++> works (HACK)

[09:28] <pmurias> moritz_: i think lex/ needs to be rm -fr, as it got poisoned somehow

[09:28] <pugs_svnbot> r21119 | pmurias++ | [pixie] removed debugging leftover

[09:29] <pmurias> yap6: ls|||

[09:29] <p6eval> yap6: OUTPUT[statement not terminated properly near the end of input␤[]]

[09:29] <pugs_svnbot> r21120 | moritz++ | [spec] S29-num/complex.t: fixed two tests

[09:29] <pmurias> yap6: ls|||;

[09:29] <p6eval> yap6: OUTPUT[Can't locate Perl6in5/Grammar/ls.pm in @INC (@INC contains: ../lib lib /etc/perl /usr/local/lib/perl/5.10.0 /usr/local/share/perl/5.10.0 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.10 /usr/share/perl/5.10 /usr/local/lib/site_perl .) at (eval 1) line 1.␤BEGIN failed--compilati...

[09:29] <pmurias> yap6: ls;|||;

[09:29] <p6eval> yap6: OUTPUT[sh: /tmp/VUPUklwcOb: Permission denied␤]

[09:29] <pmurias> yap6: ;ls;|||;

[09:29] <p6eval> yap6: OUTPUT[sh: /tmp/CqK4keblMX: Permission denied␤]

[09:31] <pmurias> yap6: >/dev/null;echo |||;

[09:31] <p6eval> yap6: OUTPUT[/tmp/eSPfT6tw9I␤]

[09:31] <pmurias> moritz_: it's possible to have evalbot execute arbitrary shell commands as you see

[09:31] <pmurias> yap6: >/dev/null;echo * |||;

[09:31] <p6eval> yap6: OUTPUT[bin lib t /tmp/7ivRuSHKxH␤]

[09:31] <pmurias> yap6: >/dev/null;echo ../* |||;

[09:31] <p6eval> yap6: OUTPUT[../CHANGES ../COPYRIGHT ../debian ../INSTALL ../KUDOS ../LICENSE ../Makefile.PL ../MANIFEST ../README ../ROADMAP ../src ../STATUS ../TODO ../yap6.spec /tmp/97cvLqAPXK␤]

[09:32] <moritz_> ouch

[09:32] <pmurias> yap6: >/dev/null;pwd |||;

[09:32] <p6eval> yap6: OUTPUT[/home/evalenv/pugs/misc/yap6/src␤]

[09:33] <pmurias> yap6: >/dev/null;echo ../misc/pixie/* |||;

[09:33] <p6eval> yap6: OUTPUT[../misc/pixie/* /tmp/OsMnssZw5D␤]

[09:33] <pmurias> yap6: >/dev/null;echo ../../misc/pixie/* |||;

[09:33] <p6eval> yap6: OUTPUT[../../misc/pixie/* /tmp/CnTkH7xsUW␤]

[09:33] <pmurias> yap6: >/dev/null;echo ../../* |||;

[09:33] <p6eval> yap6: OUTPUT[../../Blondie ../../buildbot ../../Class-Events ../../Date ../../elf ../../elfish ../../evalbot ../../Grammars ../../IDE-support ../../irclog ../../JavaScript-FrontEnd ../../kp6_misc ../../kp6-repl.pl ../../old_pugs_perl5_backend ../../org.perl6.metamodel ../../Parser-Mini ../../...

[09:33] <pmurias> yap6: >/dev/null;echo ../../p* |||;

[09:33] <p6eval> yap6: OUTPUT[../../perlhints ../../pixie ../../pugspc ../../pX /tmp/THDlqvzQYI␤]

[09:34] <pmurias> yap6: >/dev/null;echo ../../pixie/le* |||;

[09:34] <p6eval> yap6: OUTPUT[../../pixie/lex /tmp/QPoLPKLOgf␤]

[09:34] <pmurias> yap6: >/dev/null;rm -fr ../../pixie/lex# |||;

[09:34] <p6eval> yap6: No output (you need to produce output to STDOUT)

[09:34] *** wknight8111 joined
[09:34] <pmurias> yap6: >/dev/null;echo ../../pixie/le* |||;

[09:34] <p6eval> yap6: OUTPUT[../../pixie/lex /tmp/uSepatVGtv␤]

[09:34] <pmurias> yap6: >/dev/null;rm -fr ../../pixie/lex/*# |||;

[09:34] <p6eval> yap6: No output (you need to produce output to STDOUT)

[09:34] <pmurias> yap6: >/dev/null;echo ../../pixie/le* |||;

[09:34] <p6eval> yap6: OUTPUT[../../pixie/lex /tmp/xmWUk3JFjy␤]

[09:34] <pmurias> yap6: >/dev/null;echo ../../pixie/lex/* |||;

[09:34] <p6eval> yap6: OUTPUT[../../pixie/lex/Perl_with_actions /tmp/gm5wVYkCHh␤]

[09:34] <moritz_> evalbot control restart

[09:34] *** p6eval left
[09:35] *** p6eval joined
[09:35] <pugs_svnbot> r21121 | moritz++ | [evlbot] disable insecure command execution. pmurias++, diakopter--

[09:35] <moritz_> pmurias: if you want shell access to the host that runs evalbot that can be arranged

[09:35] <pmurias> it would be better the using security holes ;)

[09:36] <moritz_> aye

[09:36] *** barney joined
[09:37] <pmurias> moritz_: i don't think i managed to remove lex, can you do it?

[09:37] <pmurias> pixie: say 4;

[09:38] <p6eval> pixie: No output (you need to produce output to STDOUT)

[09:39] <pmurias> pixie: say 5;

[09:39] <p6eval> pixie: No output (you need to produce output to STDOUT)

[09:39] <pmurias> pixie: say "Hello";

[09:39] <p6eval> pixie: No output (you need to produce output to STDOUT)

[09:40] <moritz_> pmurias: see /msg

[09:49] <pmurias> pixie: say "Hello";

[09:49] <p6eval> pixie: OUTPUT[Hello␤]

[09:49] <pmurias> ;)

[09:49] <moritz_> YaY, pmurias++

[09:49] <moritz_> yap6: >/dev/null;echo ../../* |||;

[09:49] <p6eval> yap6: No output (you need to produce output to STDOUT)

[09:49] <pmurias> &

[09:49] *** pmurias left
[09:56] <pugs_svnbot> r21122 | moritz++ | [evalbot] be more verbose on security risks

[09:58] *** masak joined
[10:14] *** meppl left
[10:24] *** meteorjay joined
[10:35] *** meteorjay left
[10:44] *** wknight8111 left
[10:53] *** a-jing joined
[10:53] *** a-jing left
[11:07] *** wknight8111 joined
[11:07] *** pbuetow joined
[11:19] *** pbuetow left
[11:19] *** pbuetow joined
[11:20] *** pbuetow left
[11:20] *** pbuetow joined
[11:46] *** ruoso joined
[11:57] *** wknight8111 left
[12:12] *** Helios joined
[12:18] *** Helios` left
[12:19] *** ruoso left
[12:22] *** meppl joined
[12:38] *** alanhaggai left
[12:40] <TreyHarris> pmichaud: how do I expect ('foo').join(':') to work?  :)

[12:41] <pmichaud> TreyHarris: it returns 'foo'

[12:41] <pmichaud> same as if I did     my @a = ('foo');   return @a.join(':');

[12:41] <TreyHarris> ok.  just being sure I expect what I expected I expect. :)

[12:42] <pmichaud> the definitions as given in S29 would've had it returning ':'

[12:42] <TreyHarris> !

[12:42] <TreyHarris> huh.  didn't notice that.

[12:43] <masak> who's maintaining S29?

[12:43] <pmichaud> whoever commits changes to it :-)

[12:43] <pmichaud> afaik there's not an official maintainer

[12:43] *** meppl left
[12:45] <masak> but we all agree that S29 is wrong about $array.join($sep) ?

[12:45] <pmichaud> yes.

[12:47] <pmichaud> (except I would phrase it that S29 is wrong about $str.join($sep) )

[12:47] <masak> why $str? I can understand $str.split, but not $str.join

[12:48] <pmichaud> masak:  see above .... ('foo').join(':')

[12:48] <pmichaud> that's calling .join on a Str object

[12:48] <masak> ah

[12:48] <masak> so that's the only case where it does the Wrong thing... I see

[12:49] <pmichaud> well, according to S29     (1).join('')   isn't even allowed.

[12:50] <pmichaud> why is why we've fixed it by moving join into the Any class

[12:53] *** wknight8111 joined
[13:03] *** cmarcelo joined
[13:04] *** renormalist joined
[13:05] <masak> pmichaud: yes, I saw the thread about that. so _that's_ what the change to Any will do: make the one-element invocants work properly... yes?

[13:06] <pmichaud> yes

[13:06] <pmichaud> and we'll do this for a variety of methods, also

[13:06] <pmichaud> like .abs, .unpolar, .cis, etc.

[13:06] <pmichaud> so that   "-1".abs  will dtrt

[13:07] *** alanhaggai joined
[13:20] <masak> pmichaud: I've always wondered how Perl 6 would solve exactly that kind of issue, sending a Str to a method expecting a Num

[13:21] <pmichaud> me also -- we ultimately decided to use Any

[13:26] *** redicaps left
[13:27] *** iblechbot joined
[13:28] *** ruoso joined
[13:31] <rakudo_svn> r28856 | pmichaud++ | [rakudo]:

[13:31] <rakudo_svn> r28856 | pmichaud++ | * Add stringification and numification to Range objects.

[13:39] <moritz_> rakudo: say 1.5 ~~ 1^..^2

[13:39] <p6eval> rakudo 28856: OUTPUT[0␤]

[13:39] <moritz_> should that print 1?

[13:41] *** alanhaggai_ joined
[13:45] *** alanhaggai left
[13:45] <pugs_svnbot> r21123 | moritz++ | [spec] fudged and corrected range.t

[13:46] *** rdice joined
[13:50] <rakudo_svn> r28858 | moritz++ | [rakudo] add S03-operators/range.t to spectest_regression

[13:50] *** alanhaggai_ left
[13:50] <moritz_> it's funny, rakudo_svn told me about my commit before my local svn client told me that all file data were transmitted ;)

[13:54] <pmichaud> moritz_: yes, it should print 1 -- Parrot has a bug in floating point comparisons  (RT#56464)

[13:54] <pmichaud> moritz_: sometimes the perl.org svn server doesn't send back the confirmation to the client immediately -- it gets hung up somewhere even though the commit has completed.  We've noticed this at various times.

[13:55] <moritz_> ok

[13:55] <moritz_> afk &

[14:13] *** alester joined
[14:14] *** thepler joined
[14:18] *** TJCRI joined
[14:20] *** meppl joined
[14:33] *** sscaffidi_ joined
[14:47] *** jhorwitz joined
[14:52] *** sscaffidi_ left
[14:54] *** sscaffidi_ joined
[14:56] *** Lorn joined
[15:08] *** Lorn_ left
[15:30] *** meppl left
[15:34] *** broquaint joined
[15:38] <pmichaud> in S03-operators/range.t

[15:38] <pmichaud>     is ~(@one .. 3)     , "1 2 3", "lower inclusive limit is in scalar context";

[15:38] <pugs_svnbot> r21124 | pmichaud++ | S03-operators/range.t:  correct a syntax error, remove some #?rakudo skips

[15:38] <pmichaud> looks wrong to me.

[15:39] <moritz_> why?

[15:39] <pmichaud> @one in item context returns an Array, not an Int

[15:39] <lambdabot> Maybe you meant: more vote wn

[15:39] <pmichaud> to get the number of items we use  +@one

[15:39] <moritz_> pmichaud: then it should actually be in numeric context

[15:40] <pmichaud> you're saying the arguments to '..'  should be numeric context?

[15:40] <moritz_> hurm

[15:40] <moritz_> wouldn't work for 'a'..'z'

[15:40] <pmichaud> ...exactly.  :-)

[15:40] <moritz_> ok, you're right

[15:40] <moritz_> ... as usual ;)

[15:44] <pmichaud> we could certainly define infix:<..>(Any, Any)   and then overload with infix:<..>(Str, Str), though.

[15:48] <moritz_> don't think it's a good idea atm

[15:48] <moritz_> although it seems to be the general trend in perl 6 :(

[15:53] *** jjore left
[15:53] *** jjore joined
[15:55] *** sscaffidi_ is now known as hercynium_

[16:04] *** araujo left
[16:04] *** hcchien left
[16:04] *** buu left
[16:04] *** fridim left
[16:04] *** perlbot left
[16:04] *** stevan_ left
[16:06] *** kanru left
[16:07] *** buu joined
[16:08] *** araujo joined
[16:08] *** stevan_ joined
[16:08] *** fridim joined
[16:08] *** hcchien joined
[16:08] *** hcchien_ joined
[16:08] *** hcchien left
[16:08] *** Alias_ left
[16:10] *** masak left
[16:12] *** justatheory joined
[16:12] *** kane_ joined
[16:15] <pugs_svnbot> r21125 | pmichaud++ | S03-operators/range.t:  Add note about use of @array as arguments to infix:<..>

[16:15] <Auzon> moritz_: 0.. ^9 is specifically a failure case

[16:15] <pmichaud> why is that a failure?

[16:15] <pmichaud> (unless for the same reason that I gave for @one, @three above)

[16:16] <Auzon> S03:1061 says it is

[16:16] <Auzon> because it parses as 0 .. (0..9)

[16:16] <Auzon> err, 0.. (0..8)

[16:17] <pmichaud> S03 says it may succeed or fail.

[16:17] <pmichaud> (i.e., we haven't decided yet.)

[16:17] <pmichaud> so, we just don't know what it means.  We don't know that it fails.

[16:17] <pmichaud> same as we don't know what   @one .. @three   means yet

[16:18] <Auzon> Well, I'm testing to make sure that it's not the same as 0..9

[16:18] <pmichaud> ah, that's true.  And you're correct, no matter what it does, it won't be the same as 0..9  :-)

[16:18] <pmichaud> er, wait.

[16:19] <pmichaud> er, right -- nm the "wait"

[16:19] <Auzon> Sorry, I didn't think about which type of 'failure' it was when describing it the first time

[16:19] <pmichaud> 0 .. ^9  would be   0 .. (0..^9)  which, assuming the latter is evaluated in numeric context, would be  0 .. 9  which would not be the same as 0 ..^ 9   :-)

[16:20] *** cjfields joined
[16:20] <Auzon> Yeah. :)

[16:29] *** alanhaggai joined
[16:35] *** kanru joined
[16:36] <moritz_> it would be 0 .. (0..8)

[16:37] <moritz_> or, whatever

[16:37] <Auzon> or (more confusingly and as pmichaud had it) 0 .. (0 ..^ 9) ;)

[16:37] <Auzon> ranges with endpoints of ranges are silly.

[16:38] <Auzon> s/silly/confusing/

[16:38] <moritz_> unless they're meant to be multi-dimensional ;)

[16:39] <moritz_> rakudo: say 1.."3"

[16:39] <p6eval> rakudo 28868: OUTPUT[123␤]

[16:40] <Auzon> rakudo: say 1 .. 'a'

[16:40] <p6eval> rakudo 28868: OUTPUT[␤]

[16:40] <moritz_> my @r = 1 .. '2'; say @r[0].WHAT

[16:40] <spinclad> if i wanted to know if a line was in a trapezoid, i could try C< ^$num ~~ (^$left .. ^$right) > ... 

[16:40] *** meppl joined
[16:40] <moritz_> rakudo: my @r = 1 .. '2'; say @r[0].WHAT

[16:40] <p6eval> rakudo 28868: OUTPUT[Int␤]

[16:41] <pmichaud> 0 .. ^9  ==>  0 .. (0 ..^ 9)  =assumingnumericcontext=>   0 .. +(0 ..^ 9)  ==>  0 .. 9  

[16:41] <pmichaud> since +(0..^9) == 9  :-)

[16:41] <moritz_> I think we should forbid ranges of stuff that hasn't implemented ++

[16:42] <moritz_> just too mis-leading

[16:43] *** barney left
[16:43] <pmichaud> except that   ++  may in fact be valid on ranges :-)

[16:44] <pmichaud> (0..10) + 2   becomes   2..12

[16:44] <Auzon> You'd use a hyper operator there, wouldn't you?

[16:45] <pmichaud> not necessarily.  In particular:

[16:45] <spinclad> the main advantage to ranges of ranges i see at the moment is for the Pythagoreans among us:  0 .. (0 .. 3) is the mystic tetractys, the triangle of 10 dots; 0 .. (0 .. (0 .. 2)) is the pyramid of 10 dots.

[16:45] <pmichaud>    11 ~~ ((0..10) + 2)    # Bool::True

[16:45] <spinclad> this seems like a marginal market to me

[16:46] <pmichaud> I'm only quoting S03.

[16:46] <vixey> hehehe spinclad

[16:46] <pmichaud> S03:2743

[16:47] <pmichaud>     (1..11:by(2)) * 5           # same as 5..55:by(10)

[16:47] *** [particle] left
[16:49] <spinclad> (so, oddly, 0 .. (0 .. 3) and 0 .. (0 .. ^3) are both 10, but different ways.)

[16:49] <pmichaud> spinclad: no,  0 .. +(0.. 3)    would be 0 .. 4

[16:50] <spinclad> pmichaud: sorry, i wasn't using the + interpretation, but the triangular one.  sorry for crosstalk.

[16:50] <pmichaud> oh.

[16:50] <pmichaud> okay, I get it.

[16:50] <pmichaud> anyway, afk, lunch

[16:51] *** ruoso left
[16:51] *** chris2 left
[16:51] *** [particle]1 is now known as [particle]

[16:52] *** ruoso joined
[16:58] *** eternaleye joined
[17:09] *** nipotaway is now known as nipotan

[17:11] *** apeiron_ joined
[17:11] *** justatheory left
[17:13] *** apeiron left
[17:13] *** apeiron_ is now known as apeiron

[17:17] *** kanru left
[17:18] *** tuxdna joined
[17:19] *** kanru joined
[17:45] *** Pzt joined
[17:51] *** hercynium_ left
[17:53] *** hercynium_ joined
[17:57] *** justatheory joined
[17:59] *** Alias_ joined
[18:01] *** tuxdna left
[18:02] *** alanhaggai_ joined
[18:05] *** alester left
[18:11] *** pmurias joined
[18:17] *** alanhaggai left
[18:18] *** justatheory left
[18:33] *** justatheory joined
[18:46] *** alanhaggai_ left
[18:46] *** Pzt left
[18:51] *** Alias__ joined
[18:52] *** Alias_ left
[18:59] *** PZt joined
[19:04] <pugs_svnbot> r21126 | pmurias++ | [pixie] sanity 1-3 works

[19:05] *** Alias_ joined
[19:05] <pmurias> pixie: my $var = 4;say "foo $var bar";

[19:06] <p6eval> pixie: OUTPUT[foo 4 bar␤]

[19:06] *** Alias_ left
[19:06] <pmurias> perl6: my $var = 4;say "foo $var bar";

[19:07] <p6eval> elf 21126: OUTPUT[foo $var bar␤]

[19:07] <p6eval> ..kp6 21126: OUTPUT[foo 4 bar␤]

[19:07] <p6eval> ..pugs: OUTPUT[foo 4 bar␤]

[19:07] <p6eval> ..rakudo 28871: OUTPUT[foo 4 bar␤]

[19:08] <Auzon> pixie: if 1 {say "pixie++"}

[19:08] <Auzon> I think I broke it

[19:08] <p6eval> pixie: RESULT[error: syntax error at (eval 208) line 3, near "if 1"␤]

[19:09] *** polettix joined
[19:10] *** meppl left
[19:25] *** pmurias left
[19:27] *** cjfields_ joined
[19:27] *** cjfields left
[19:41] *** pmurias joined
[19:41] <pmurias> pixie: say 5;

[19:41] <p6eval> pixie: OUTPUT[5␤]

[19:42] <pmurias> Auzon: if is in sanity 4 ;)

[19:56] *** jferrero joined
[19:58] *** Auzon left
[20:00] *** pmurias left
[20:00] *** Auzon joined
[20:00] *** pmurias joined
[20:01] <pmurias> diakopter: how do you handle state in your packrat grammar?

[20:03] *** pmurias left
[20:04] *** meppl joined
[20:04] *** Auzon left
[20:07] *** Alias__ left
[20:07] *** Auzon joined
[20:33] *** hercynium_ left
[20:36] *** hercynium_ joined
[20:43] <pugs_svnbot> r21127 | lwall++ | [STD] propagate current match state down into tweaks for better error messages

[20:45] *** r0bby left
[20:53] *** iblechbot left
[20:57] *** japhb left
[21:05] *** Limbic_Region joined
[21:12] *** polettix left
[21:20] *** r0bby joined
[21:28] *** japhb joined
[21:35] *** Jedai left
[21:40] *** japhb left
[21:47] *** rdice left
[21:51] *** cjfields_ left
[21:56] *** Limbic_Region left
[21:59] *** justatheory left
[22:01] *** Limbic_Region joined
[22:03] *** cggoebel left
[22:08] *** cognominal_ left
[22:09] *** jferrero left
[22:19] *** cognominal_ joined
[22:22] *** hercynium_ left
[22:31] *** cjfields joined
[22:34] *** TJCRI left
[22:34] <pugs_svnbot> r21128 | lwall++ | [STD] more state propagation

[22:34] *** cjfields left
[22:48] *** japhb joined
[23:08] *** justatheory joined
[23:14] *** eternaleye left
[23:20] *** justatheory left
[23:26] *** elmex left
[23:28] <meppl> good night

[23:29] *** eternaleye joined
[23:30] *** cathyal joined
[23:30] *** meppl left
[23:39] *** justatheory joined
[23:42] *** bacek joined
[23:49] *** cmarcelo left
[23:52] *** japhb left
