[00:08] *** zamolxes joined
[00:23] *** fridim_ left
[00:30] *** wknight8111 joined
[00:41] *** pcbuetow left
[00:41] *** alanhaggai joined
[00:43] *** Aisling left
[00:46] *** Aisling joined
[00:46] *** alester left
[00:59] *** alester joined
[01:16] *** Khisanth left
[01:20] *** Khisanth joined
[01:21] *** justatheory joined
[01:22] *** Ontolog joined
[01:56] *** justatheory left
[02:03] *** Limbic_Region joined
[02:07] *** sri_work left
[02:16] *** hercynium joined
[02:16] *** hercynium left
[02:35] *** Bzek joined
[02:37] *** pasteling left
[02:56] *** alester left
[03:00] *** elmex left
[03:01] *** eternaleye left
[03:02] *** elmex joined
[03:28] *** Limbic_Region left
[03:36] *** PZt joined
[03:40] *** xrt joined
[03:46] *** xrt left
[04:15] *** alester joined
[04:24] *** explorer left
[04:32] *** Ontolog left
[04:43] *** slavik joined
[04:45] <slavik> hmm

[04:46] <slavik> I got a grammar thing to work :)

[04:46] <slavik> sort of

[04:48] *** FireMinion left
[04:53] <slavik> if I have two rules in a grammar, how can I match a string against the whole grammar an then figure out what rule in the grammar was matched?

[05:22] *** Bzek left
[05:43] *** slavik left
[05:49] *** Psyche^ joined
[05:58] *** azawawi joined
[05:58] <azawawi> moritz_: ping

[06:06] *** Patterner left
[06:06] *** Psyche^ is now known as Patterner

[06:29] *** alester left
[06:35] *** azawawi left
[06:52] *** bsb joined
[07:18] *** iblechbot joined
[07:22] *** Bzek joined
[08:44] *** schmalbe joined
[08:53] *** ihrd joined
[08:58] *** pmurias joined
[09:02] <pmurias> mj41_: the sial.org link doesn't work for me 

[09:19] <ihrd> yes, "Proxy Error"

[09:19] *** bsb left
[09:30] <pmurias> or an not found one when using https

[09:31] <pmurias> https defeats proxies right?

[09:33] *** pbuetow joined
[09:36] *** ihrd left
[09:38] *** meppl joined
[09:55] *** azawawi joined
[10:14] *** schmalbe left
[10:19] *** masak joined
[10:20] *** azawawi left
[11:03] *** ejs joined
[11:07] *** dominiko joined
[11:34] *** fridim_ joined
[11:37] <pugs_svn> r22649 | pmurias++ | [mildew] runs mildew/t/pure_prototype_how.t

[11:53] *** [1]Maghnus is now known as Maghnus

[12:18] *** dominiko left
[12:38] <masak> is "file".:e supposed to work in Perl 6 without quoting the ':e' part?

[12:38] <masak> rakudo: say '.'.':e'

[12:38] <p6eval> rakudo 31963: OUTPUT[Method ':e' not found for invocant of class 'Perl6Str'␤current instr.: '_block11' pc 30 (EVAL_14:16)␤]

[12:39] <masak> ah, seems my change from yesterday hasn't reached p6eval yet

[12:55] <pmurias> masak: i guess it should

[12:55] *** alanhaggai left
[12:55] <masak> I guess so too.

[12:55] *** xiaoyafeng joined
[12:56] <masak> right now Rakudo rejects the syntax with a funny error message

[12:56] <pmurias> S12:739

[12:56] <pmurias> pugs: 'foo'.:e

[12:56] <p6eval> pugs: OUTPUT[*** ␤    Unexpected ":e"␤    expecting ".", "\187", ">>", "=", "^", operator name, qualified identifier, variable name, "...", "--", "++", "i", array subscript, hash subscript or code subscript␤    at /tmp/lJA1UZsNvk line 1, column 7␤]

[12:57] *** ejs left
[12:57] <masak> aye. I've seen it used in other places in the synopses as well. S16, frex.

[12:58] <masak> I'll send rakudobug an email about it.

[13:01] <masak> done.

[13:10] <pmurias> masak: i *could* add .:e support to mildew but it's not exactly on the ROADMAP right now

[13:10] <masak> pmurias: not asking you to. :)

[13:10] <masak> I'm just thinking along these lines because I added "file" ~~ :e support to Rakudo yesterday

[13:11] <masak> pmurias: btw, I hear this 'mildew' name being dropped all the time nowadays. I thought you guys were building sm0p and m0ld and stuff. where does mildew fit into the picture?

[13:13] *** adc_Penner joined
[13:14] <pugs_svn> r22650 | pmurias++ | [mildew] infix:<:=>

[13:14] <pmurias> masak: sm0p is dead

[13:14] <pmurias> mildew is our perl6 compiler

[13:14] <masak> nice

[13:14] <masak> what does it compile to?

[13:14] <pmurias> m0ld

[13:14] <masak> :)

[13:15] <masak> which is...?

[13:15] <pmurias> the assembler

[13:15] <masak> so, sort of like PIR?

[13:15] <pmurias> yes

[13:15] <pmurias> with a perl6 syntax and 4 opcodes

[13:16] <masak> is Perl 5 compatibility on the ROADMAP?

[13:16] <pmurias> yes

[13:16] <masak> good. that's a killer feature.

[13:16] *** ruoso joined
[13:16] <pmurias> ruoso: hi

[13:16] <masak> ruoso: hi

[13:17] <ruoso> hi pmurias masak 

[13:17] <lambdabot> ruoso: You have 1 new message. '/msg lambdabot @messages' to read it.

[13:17] * ruoso just lost a morning doing maintainance in his Thinkpad T60

[13:18] <ruoso> a bad contact fixed with a small piece of alluminum and a small rubber band to keep the pressure

[13:18] * ruoso hates computer parts that are not fixeable by amateurs...

[13:20] <pmurias> ruoso: pure_prototype_how.t runs

[13:20] <ruoso> YAY!

[13:20] <ruoso> pmurias++

[13:22] * ruoso svn update'ing

[13:31] <ruoso> pmurias, while it runs, I can't see the output...

[13:32] *** jan_ left
[13:34] <pmurias> how do you run it?

[13:34] <ruoso> v6/mildew$ perl mildew --file t/variable_declaration.p6 | LD_LIBRARY_PATH=../smop/build/ ../smop/m0ld/dist/build/m0ld/m0ld --exec

[13:35] <pmurias> make'd smop?

[13:35] <ruoso> yes

[13:35] <ruoso> I even removed build and m0ld/dist

[13:36] <ruoso> and rebuilt everything

[13:36] <ruoso> including './Setup configure --flags=SMOP; ./Setup build'

[13:36] <ruoso> inside m0ld

[13:36] *** alanhaggai joined
[13:37] <pmurias> it works here, maybe i have old something

[13:40] <pmurias> you could nopaste perl mildew --file t/variable_declaration.p6 --desugar

[13:40] <pmurias> i rebuild STD, rm -fr lex and rm -fr build;make in smop and it prints output

[13:41] <ruoso> ok... let me rebuild STD

[13:41] <pmurias> btw t/variable_declaration.p6 is a different test

[13:41] <ruoso> yeah... I know...

[13:43] <ruoso> pmurias++ # rebuilding STD works

[13:43] <pmurias> something like gobby for shells would be nice

[13:45] <ruoso> we could have the evalbot updated to use mildew instead of pugs for smop

[13:46] <ruoso> that's very cool

[13:47] <ruoso> because we're actually using STD as the parser for SMOP

[13:54] <pmurias> i'm not really sure how do procced with adding a new evalbot backend

[13:55] <ruoso> pmurias, at first we could have mildew optionally accepting STDIN

[14:02] <pugs_svn> r22651 | pmurias++ | [mildew] defining simple subs argumentless subs with <:=>

[14:04] <pmurias> ruoso: feel free to change mildew's interface any way you like 

[14:04] <ruoso> :)

[14:08] <pmurias> as long as you don't use the elf one with swarms of one letter options which do evil things

[14:09] <ruoso> I'm just planning to fallback to STDIN if no --file is set

[14:10] *** abra joined
[14:11] <pugs_svn> r22652 | ruoso++ | [mildew] fallsback to STDIN if no --file is set

[14:12] *** abra left
[14:13] <ruoso> mildew$ echo '$OUT.print("Hello World!\n")' | perl mildew | LD_LIBRARY_PATH=../smop/build/ ../smop/m0ld/dist/build/m0ld/m0ld --exec

[14:14] *** jhorwitz joined
[14:15] <pmurias> lunch&

[14:18] *** fridim_ left
[14:26] *** jan_ joined
[14:35] *** zch051383471952 joined
[14:46] <ruoso> :D brazil just won the futsal world cup ;) 

[14:49] *** abra joined
[14:51] <masak> ruoso: congratulations.

[14:51] <ruoso> :D

[14:57] *** wtgee1 joined
[15:07] *** wtgee1 left
[15:10] *** abra left
[15:11] *** alanhaggai_ joined
[15:11] *** alanhaggai left
[15:11] *** alanhaggai_ is now known as alanhaggai

[15:12] *** abra joined
[15:13] *** abra left
[15:15] *** abra joined
[15:18] *** zch051383471952 left
[15:21] <masak> can you store a reference to a method in a variable?

[15:29] *** ruoso left
[15:30] *** araujo left
[15:35] *** fridim_ joined
[15:40] <pmurias> masak: yes

[15:40] <masak> how?

[15:40] <pmurias> my $method = method {...}

[15:41] <masak> ah, but I mean en existing method, one that was declared already in some class that I maybe didn't write

[15:41] <pmurias> you could use the meta protocol

[15:45] *** explorer joined
[15:58] *** abra left
[16:00] *** abra joined
[16:00] <pugs_svn> r22653 | pmurias++ | [mildew]

[16:00] <pugs_svn> r22653 | pmurias++ | --exec option to execute the code instead of just compiling

[16:00] <pugs_svn> r22653 | pmurias++ | "make test" runs all mildew tests

[16:00] <pmurias> TimToady: any ideas how to reduce the STD startup time?

[16:03] *** abra left
[16:03] *** fridim_ left
[16:04] *** elmex left
[16:04] *** elmex joined
[16:05] *** abra joined
[16:13] *** abra left
[16:22] *** sri_work joined
[16:26] *** [bobrik] joined
[16:26] <[bobrik]> any gentoo users here?

[16:28] *** mberends joined
[16:32] <TimToady> STD starts up in less than a second, so you must mean something else

[16:49] *** masak left
[17:04] <pmurias> [bobrik]: i'm an gentoo ex-user

[17:04] <[bobrik]> pmurias: how did you installed parrot with perl6 support? languages/perl6 is empty for me =(

[17:05] <pmurias> TimToady: mildew executing a single test takes ~1.0 sec

[17:05] <pmurias> [bobrik]: if it's empty for you propably have a broken checkout

[17:10] <pmurias> TimToady: i could use joint compilation for tests if they become to numerous (>30)

[17:12] <[bobrik]> pmurias: `emerge parrot`

[17:12] <[bobrik]> build workdir contain perl6

[17:12] <[bobrik]> pmurias: how did you install that?

[17:12] <pmurias> you should propably checkout parrot from version control and build it yourself

[17:13] <pmurias> [bobrik]: i didn't install parrot

[17:14] <[bobrik]> you checked it from svn and built yourself?

[17:15] <pmurias> yes

[17:17] <moritz_> re

[17:17] <lambdabot> moritz_: You have 1 new message. '/msg lambdabot @messages' to read it.

[17:17] <moritz_> @massages

[17:17] <lambdabot> azawawi said 1d 9h 45m 59s ago: im interested in http://www.nntp.perl.org/group/perl.perl6.users/2008/07/msg788.html.

[17:18] <moritz_> pmurias: re mildew, what do I need to run it?

[17:18] <pmurias> moritz_: perl mildew --exec --file file

[17:19] <moritz_> pmurias: does it need write access anywhereß

[17:19] <moritz_> s/ß/?/

[17:19] <pmurias> lex propably

[17:19] <moritz_> v6/mildew/lex?

[17:19] <pmurias> and you need to compile m0ld v6/smop/m0ld with ./Setup configure --flags=SMOP;./Setup build

[17:19] <pmurias> yes

[17:19] <pmurias> it's STD based

[17:21] <moritz_> @tell azawawi go right ahead ;)

[17:21] <lambdabot> Consider it noted.

[17:21] *** silug joined
[17:21] *** Bzek left
[17:24] *** ruoso joined
[17:24] <moritz_> pmurias: setting up lex/ rw for the 'evalbot' user is a bit of an effort, so I don't know if I'll do it today... but if it's not done by Wednesday, feel free to bug me again ;)

[17:24] <pmurias> moritz_: you did it for pixie right?

[17:25] <moritz_> pmurias: no, but for STD.pm

[17:25] <pmurias> pixie: say 1

[17:25] <p6eval> pixie: No output (you need to produce output to STDOUT)

[17:25] <pmurias> pixie: 1

[17:25] <p6eval> pixie: No output (you need to produce output to STDOUT)

[17:25] <moritz_> does pixie re-use STD.pm's lex cache?

[17:25] *** ruoso_ joined
[17:26] <pmurias> don't remember, pixie is not important

[17:26] <moritz_> ok ;)

[17:26] <moritz_> is it still developed?

[17:26] <pmurias> no

[17:26] <moritz_> then I'll rip it out of evalbot

[17:26] <pmurias> fine, it's broken anyway

[17:26] *** ruoso__ joined
[17:26] *** ruoso__ left
[17:27] *** ruoso left
[17:27] *** ruoso_ left
[17:27] *** abra joined
[17:27] *** ruoso joined
[17:28] * ruoso .oO( doing maintainance on laptops sucks )

[17:29] <pmurias> ruoso: you are aware we fake stacklessness for other interpreters by saving an restoring the stack in an unportable manner?

[17:30] <ruoso> what do you mean?

[17:31] <pmurias> s/an/and

[17:31] <pmurias> ruoso: it's possible to save the C stack if we are willing to resort to assembler

[17:31] <ruoso> we don't even need to go to assembler

[17:31] <ruoso> C99 specs longjmp

[17:32] * ruoso wonders if pmurias meant "aware that we *could* fake"

[17:34] <pmurias> yes

[17:34] <ruoso> yes... I'm aware of that.. and in fact... that is probably a good way to provide p5 XS integration

[17:34] <ruoso> that subject was discussed this week

[17:35] <ruoso> about getting p5 XS macros and changing it when building the SMOP p5 interpreter

[17:35] <ruoso> and subverting the current XS macros to do this kind of hack

[17:35] <ruoso> TimToady even said that was the ponie idea

[17:36] <ruoso> considering SMOP p5 would require a recompilation of binary modules... which seems just fine...

[17:36] <pmurias> why would we need to change the XS macroes?

[17:37] <ruoso> because the C code inside XS modules might be recursing on the p5 interpreter using the C stack

[17:37] <ruoso> so we would need to change the macros so that instead of doing the call, it would save the current stack and recurse without using the C stack

[17:40] <ruoso> in fact... this trick could be used to remove current p5 non-stacklessness

[17:44] *** FireMinion joined
[17:46] <pmurias> ruoso: can longjump also "rewind" the stack or only unwind it?

[17:46] <ruoso> pmurias, setjmp is the reverse

[17:48] <ruoso> pmurias, are you aware that the latest changes broke tests in smop?

[17:49] <pmurias> hm, checking

[17:50] <ruoso> pmurias, it looks ".^!how()" in p6opaque is not working as expected

[17:55] *** abra left
[17:56] <pugs_svn> r22654 | moritz++ | [docs/tutorial] (aka book) many clean ups and enhancements to ch07_grammars.pod.

[17:56] <pugs_svn> r22654 | moritz++ | Also other small fixes.

[17:56] <pugs_svn> r22655 | pmurias++ | [smop] fixed failing p6opaque tests

[17:57] <ruoso> pmurias, I'm not sure the recusion in p6opaque is a good idea

[17:58] <ruoso> that ckecing should probably be made inside the sm0p block (which could be translated to m0ld)

[17:59] <ruoso> we even have the ri test already

[17:59] <pmurias> propably, it wouldn't change anything the way p6opaque is currently implemented

[18:00] <ruoso> pmurias, do I translate it to m0ld or you do it?

[18:02] *** abra joined
[18:03] <pmurias> you can do it

[18:04] <ruoso> ok

[18:04] <moritz_> http://perlgeek.de/blog-en/perl-6/tidings-2008-10.html # any comments?

[18:04] <lambdabot> Title: blog | Perlgeek.de Blog :: Perl 6 Tidings from September and October 2008

[18:05] *** cathyal joined
[18:10] *** abra left
[18:11] <pmurias> moritz_: s/kreep/creep/ # OTOH maybe it's intentional

[18:11] <literal> moritz_: awesome

[18:11] <ruoso> moritz_, awesome, indeed

[18:13] <pmurias> moritz_: re syntax highlighter plugging something like that into STD5_run shouldn't be hard

[18:13] <pmurias> * STD5_dump_match

[18:14] <moritz_> pmurias: probably, but I didn't grok the code :/

[18:16] <pmurias> traverse_match creates an array of events (like rule starts, rule ends) and process_events executes them in the order of their positions in the source file

[18:16] *** pedrob joined
[18:17] *** pedrob_ joined
[18:17] <pmurias> moritz_: it should become clearer if you what the $events passed to traverse_match contains after the topmost traverse_match finishes

[18:18] <literal> moritz_: I see a few typos, "simple most solution" (most simple solution) and "hybernating"/"hybernates" (hibernating/hibernates), "agend" (agenda)

[18:19] <moritz_> literal: thanks, fixed

[18:19] <pmurias> moritz_: and you didn't mention that smop now uses viv ;)

[18:19] <moritz_> pmurias: does it? how? through mildew?

[18:20] <moritz_> pmurias: just write a paragraph or two about it, and I'll add them to the page

[18:20] <pmurias> yes, mildew uses viv

[18:23] <pmurias> moritz_: as a comment?

[18:25] *** pedrob left
[18:27] <moritz_> pmurias: or nopaste it, then I'll add it to the main posting

[18:27] *** ujwalic joined
[18:28] *** abra joined
[18:29] *** abra left
[18:31] <pmurias> SMOP now has a new compiler mildew which uses viv/STD as it's parser.

[18:31] <pmurias> Mildew supports only a handfull of stuff now (creating an object with a simpilified meta model being the most advanced one)

[18:31] <pmurias> is the most i came up with ;)

[18:35] <moritz_> pmurias: ok, updated the post

[18:35] <moritz_> it now reads "SMOP now has a new compiler named mildew which uses viv/STD as its parser. Right now it supports only a handfull of operations, the most advanced of it is creating an object with a simplified meta model.

[18:35] <moritz_> It lives in the Pugs repository under v6/mildew/."

[18:35] *** pedrob joined
[18:38] <pmurias> any one willing to hack on it in perl5 is welcome to come to #perl6

[18:38] <pmurias> ;)

[18:40] *** pedrob__ joined
[18:41] *** pedrob__ left
[18:42] *** eternaleye joined
[18:51] *** pasteling joined
[18:51] *** pasteling left
[18:51] *** azawawi joined
[18:51] <azawawi> ping

[18:51] <lambdabot> azawawi: You have 1 new message. '/msg lambdabot @messages' to read it.

[18:52] <moritz_> pong ;)

[18:52] *** abra joined
[18:54] <azawawi> so basically we should look for '_from','_to' of the deepest leaf of the yaml output

[18:54] *** pasteling joined
[18:54] <moritz_> that should work, I think

[18:55] <azawawi> moritz_: the problem is that the type is not provided in the yaml output

[18:57] <moritz_> azawawi: I don't think you need to actually care about the yaml or json thing... take a look at the `tryfile' script

[18:57] <moritz_> instead of Dump($r) in the last line you can work with $r directly

[18:57] <pasteling> "azawawi" at 212.38.141.105 pasted "yaml output of 'my $foo = "hello"'" (139 lines, 3.8K) at http://sial.org/pbot/32716

[18:58] * azawawi looking at it

[18:58] *** pedrob left
[18:58] <moritz_> azawawi: I think the "reduced" is the most interesting thing, it gives you the name of the rule

[18:59] *** pedrob joined
[18:59] *** ujwalic left
[18:59] *** silug left
[19:00] <azawawi> moritz_: hmmm, then we simply match _reduced:'variable' to its color and we're done ;-)

[19:00] *** pedrob_ left
[19:00] <moritz_> azawawi: I don't know if it's that easy, but you can find out by trying ;)

[19:02] *** fridim_ joined
[19:02] <azawawi> moritz_: any favourite color scheme for highlighting? ;-)

[19:03] <moritz_> azawawi: I like vim's, but I don't really care

[19:03] <moritz_> azawawi: colors are just constants, and easy to change

[19:03] <moritz_> azawawi: even better, you could emit xhtml + <span class="syn_variable"> and the like, so colors could be changed in the csss

[19:03] <moritz_> s/csss/css/

[19:04] <azawawi> moritz_: nicely said...

[19:04] <pmurias> azawawi: you're implementing the syntax highligher?

[19:04] <azawawi> moritz_: already did it in runpugs

[19:04] <azawawi> pmurias: yeah... trying ;-)

[19:05] <pmurias> if you want to work with an array of rule starts and ends you can reuse the code in DumpMath.pm

[19:05] <pmurias> in src/perl6

[19:08] *** Patterner left
[19:08] <pmurias> azawawi: or i can do it

[19:09] <azawawi> pmurias: what XML is it talking about in DumpMath.pm?

[19:12] *** fridim__ joined
[19:12] *** fridim__ left
[19:14] <pugs_svn> r22656 | pmurias++ | added STD_syntax_highlight a prove of concept core of a syntax highlighter

[19:14] <pmurias> azawawi: old comment meant to remove it for a long time ;)

[19:15] <pmurias> azawawi: STD5_dump_match has a second output mode which spits out the match in XML like format (--horizontal) which was the default a long time ago 

[19:19] <azawawi> pmurias++

[19:20] <pmurias> azawawi: are you hacking or STD_syntax_hightlight now (want to avoid duplication, we can gobby of course ;)

[19:21] *** alanhaggai left
[19:21] <azawawi> pmurias: hacking... ;-)

[19:22] <azawawi> pmurias: STD_syntax_highlight does not understand pod comments

[19:23] <moritz_> that's probably because they are parsed with <.ws>, which doesn't show up in the parse tree

[19:25] <pasteling> "mj41" at 147.229.5.124 pasted "subversion problem inside pugs/v6/smop/m0ld directory" (28 lines, 1K) at http://sial.org/pbot/32717

[19:29] <pmurias> mj41_: general subversion evilness

[19:30] <pmurias> rm -fr m0ld

[19:30] <pmurias> svn up m0ld

[19:34] <pmurias> azawawi: we could change the STD.pmc creation process to keep all info

[19:35] <pasteling> "azawawi" at 212.38.141.105 pasted "possible output from STD_syntax_highlight 'my $foo="Hello"'" (25 lines, 1K) at http://sial.org/pbot/32718

[19:37] <moritz_> azawawi: it would be much more useful to have each piece of text embedded in only one <span>...</span>

[19:38] <pmurias> moritz_: it would be premature optimalisation

[19:38] <azawawi> moritz_: sure, but that info can be used later to show the parse tree on a click on '$foo' for instance...

[19:38] * moritz_ shuts up ;)

[19:39] <pmurias> azawawi: commit early, commit often

[19:39] <moritz_> aye

[19:41] <azawawi> pmurias: shall i start working on STD_syntax_highlight then?

[19:41] * pmurias notices that commit yearly is frighteningly similar

[19:41] <pmurias> azawawi: so the example was a manual mockup ;)

[19:41] <pmurias> ?

[19:41] <azawawi> yeah

[19:42] <azawawi> pmurias: i took your output and modified it

[19:42] <azawawi> pmurias: "possible output from STD_syntax_highlight" ;-)

[19:42] <pmurias> you can start working if you want

[19:42] <azawawi> pmurias: thx for jumpstarting the project ;-)

[19:43] <pmurias> i don't have the patience to write all the CSS rules so i wouldn't set upon it myself

[19:44] <azawawi> pmurias: javascript + css is my domain ;-)

[19:45] *** pbuetow left
[19:45] <pmurias> shower&

[19:53] *** Aisling left
[19:54] *** Aisling joined
[19:55] *** explorer left
[20:11] *** abra left
[20:19] *** Psyche^ joined
[20:19] *** Psyche^ is now known as Patterner

[20:27] <pmurias> azawawi: how the syntax highlighter going ? :)

[20:27] <azawawi> pmurias: nicely... nearly there

[20:28] <literal> will it work with vim? :P

[20:29] <pmurias> literal: i'm afraid not

[20:29] <moritz_> literal: you don't want that. For a syntax hilighter in an editor you want something that doesn't die when it finds a syntax error ;)

[20:34] *** ruoso left
[20:34] *** ruoso_ joined
[20:34] <pmurias> moritz_: not nessesarly

[20:35] <pmurias> necessarily, STD could serve as a sort of syntax checker

[20:36] <moritz_> well, it could be made as a hook on :w

[20:39] <pmurias> literal: it should be possible to write a STD based syntax highlighter for vim

[20:42] *** explorer joined
[20:44] <pugs_svn> r22657 | azawawi++ | updated STD_syntax_highlight to output some colors 

[20:48] <pugs_svn> r22658 | moritz++ | [STD_syntax_highlight] also emit <pre>...</pre> tags around code

[20:50] <pmurias> moritz_: should pre be done by CSS?

[20:51] <moritz_> pmurias: don't think so

[20:52] <moritz_> so that non-CSS-aware clients display it as correctly as possible

[20:53] <pmurias> non-CSS-aware clients don't see the color

[20:54] <moritz_> pmurias: but then they see at least the whitespaces

[20:55] <pmurias> moritz_: do you use or now of anyone using non-CSS-aware clients?

[20:55] <moritz_> pmurias: links and lynx

[20:56] <azawawi> moritz_: mobile devices

[20:57] <moritz_> azawawi: I'd like to introduce a two-stage translation, for example I'd translate both scope_declarator and routine_declarator to 'keyword', and then only emit a css calss for 'keyword' - does that meet your approval?

[20:58] <azawawi> moritz_: yeah why not

[20:58] <moritz_> (background: I don't know if it's a good idea to emit a few hundred css classes)

[20:59] <azawawi> moritz_: let us not optimize atm

[21:00] *** [bobrik] left
[21:00] <moritz_> as you wish ;)

[21:00] * azawawi studying the STD grammar...

[21:02] <azawawi> pmurias: how do we get token 'pod_comment'?

[21:03] <pmurias> we can compile a custom STD

[21:05] <moritz_> I think TimToady will be interested in solving that problem soon too

[21:06] <azawawi> i think it can also be detected without any STD.pm change... looking at the html output

[21:06] <pmurias> azawawi: you mean doing manual reparsing of the whitespace?

[21:07] <moritz_> pmurias: not re-parsing... but everything that's not matched by any rule got to be a whitespace

[21:07] <azawawi> pmurias: when all spans are closed, that's a whitespace

[21:07] * azawawi testing this theory

[21:08] <pmurias> moritz_: everything is matched by topmost rule

[21:08] <pugs_svn> r22659 | moritz++ | [STD_syntax_highlight] HTML-Escape <>&". Add a few CSS classes.

[21:09] <pmurias> it should be possible to turn <.foo> into <foo> with either a modified gimme5 or a STD preprocessor

[21:10] <moritz_> ... or with the :keepall modifier

[21:11] *** araujo joined
[21:11] <pmurias> that's the theoretical solution

[21:13] <cathyal> OT

[21:13] <cathyal> pascal is delphi these days?

[21:14] <moritz_> iirc delphi = pascal + gui (+ objects?)

[21:14] <cathyal> ohh

[21:14] <cathyal> really?

[21:14] <cathyal> woah

[21:14] <cathyal> didnt think pascal still existed

[21:16] <pmurias> some people learn it a the "first" language in Eastern Europe

[21:17] <cathyal> yeah we had it in school

[21:17] <cathyal> pascal i.e

[21:17] <moritz_> it's commonly used as a teaching language

[21:17] <moritz_> or at least it used to be

[21:19] <cathyal> speakinog of which

[21:19] <cathyal> something about haskell

[21:19] <cathyal> i am thinking that Elaine's symbolic progrmaming language in Enochian will be based on Haskell ?

[21:19] <cathyal> are there any symbolic languages based on haskell yet\

[21:23] <pmurias> cathyal: Enochian and Elaine being?

[21:25] <cathyal> pmurias: http://www.millvexations.co

[21:25] <cathyal> pmurias: http://www.millvexations.com

[21:25] <lambdabot> Title: Mill Avenue Vexations: Sub-Culture in Tempe, Arizona

[21:27] <cathyal> elaine is a girl; and Enochian is an old symbolic ciphertext psudeolingustic language designed by John Dee as the supposed "language of the angels

[21:29] <pugs_svn> r22660 | moritz++ | [STD_syntax_highlight] some more colors

[21:30] <pmurias> cathyal: haskell and esothericisms are on the opposed ends of the spectrum

[21:31] <pmurias> and clearly Lisp is the language from which the gods wrought the universe.

[21:31] * moritz_ has enough trouble remebering one fantasy language

[21:31] <moritz_> pmurias: ... except that they hacked most of it together in perl, actually ;)

[21:32] <cathyal> so are you saying lisp is what should be used

[21:32] <moritz_> http://xkcd.com/224/

[21:32] <lambdabot> Title: xkcd - A Webcomic - Lisp

[21:34] <cathyal> so whats a good langhuage for this

[21:34] <cathyal> haskell was in mind

[21:34] <moritz_> was haskell in mind /me goes to bed

[21:35] <moritz_> s/was/with/

[21:37] <cathyal> heh

[21:37] <cathyal> so then ?

[21:43] <pmurias> cathyal: angels should be communicating in a programming language

[21:46] <pmurias> * shouldn't

[21:46] <pmurias> unless they are robotic

[21:53] <cathyal> heh

[21:57] *** fridim_ left
[22:17] *** justatheory joined
[22:20] *** azawawi left
[22:23] *** iblechbot left
[22:32] *** pedrob left
[22:33] *** adc_Penner left
[22:36] *** pmurias left
[22:42] *** silug joined
[22:59] *** explorer left
[23:20] *** Aisling left
[23:32] *** Aisling joined
[23:41] *** PZt left
[23:41] *** Entonian joined
[23:47] *** justatheory left
[23:52] *** justatheory joined
