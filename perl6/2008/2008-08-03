[00:04] <meppl> good night

[00:47] *** idemal joined
[00:48] *** cjfields joined
[00:48] *** cjfields left
[02:57] *** alanhaggai joined
[03:01] *** elmex_ joined
[03:06] *** REPLeffect joined
[03:10] *** Schwern joined
[03:10] *** Alias_ joined
[03:21] <pugs_svn> r21740 | lwall++ | [STD] much improved error messages

[03:21] <pugs_svn> r21740 | lwall++ | [methods_on_typed_attrs] class Bar must be predeclared

[03:26] <pugs_svn> r21741 | audreyt++ | * Fix Paths_Pugs and Pugs.Prim.Match to look at sourcedir first, and then

[03:26] <pugs_svn> r21741 | audreyt++ |   installdir.

[03:28] <audreyt> @tell gaal fixed sorry

[03:28] <lambdabot> Consider it noted.

[03:56] *** xinming_ joined
[04:05] *** xinming joined
[04:11] *** alester joined
[04:22] *** cls_bsd joined
[04:46] *** Schwern joined
[04:47] *** Schwern joined
[04:49] <pugs_svn> r21742 | Auzon++ | [gsoc_spectest] moved counted.t to spec, added a few more tests. (added 6 tests)

[04:49] <Auzon> vacation (well, tomorrow) &

[04:53] <pugs_svn> r21743 | lwall++ | [STD] previous change lost bits of syntax tree

[04:53] <TimToady> (parses 94% of t/ currently)

[05:01] *** xinming_ joined
[05:16] <gaal> audreyt: should look in $sourcedir </> blib6/pugs/perl5/lib, I think...

[05:16] <lambdabot> gaal: You have 1 new message. '/msg lambdabot @messages' to read it.

[05:16] <audreyt> gaal: hm

[05:16] <lambdabot> audreyt: You have 3 new messages. '/msg lambdabot @messages' to read them.

[05:16] <audreyt> mind if I ask why :)

[05:16] <audreyt> I know it's what we used to do

[05:17] <gaal> well, my own sourcedir doesn't have HsBridge :)

[05:17] <audreyt> Pugs.Prim.Match currently has

[05:17] <audreyt>     pwd1    <- io $ getDataFileName "perl5/Pugs-Compiler-Rule/lib"

[05:18] <audreyt> doesn't HsBridge live somewhere there?

[05:18] <gaal> beh, my pbotutil isn't configured on this machine....

[05:19] <gaal> sec

[05:21] <pugs_svn> r21744 | audreyt++ | * Use ./Setup to configure/build, not cabal.

[05:21] <pugs_svn> r21744 | audreyt++ | * Also make "upload-smoke" synonym to "smoke-upload"

[05:22] <gaal> I'm not understanding this :/

[05:23] <gaal> the error message is:

[05:23] <gaal> Can't locate Pugs/Runtime/Match/HsBridge.pm in @INC

[05:23] <gaal> and the @INC contains the .cabal dir but not sourcedir

[05:23] <gaal> ... the unshift @INC lines add the cabal dir

[05:24] <gaal> though the code looks like it oughta work

[05:24] <gaal> (incidentally, do you have to rm pugs too before make?)

[05:25] <gaal> also also: did you mean to create _cabal </> "Pugs-" ++ versnum and return _cabal </> "share" </> "Pugs-" ++ versnum ("share" only in one of these)?

[05:26] <audreyt> ok, a sec

[05:31] <pugs_svn> r21745 | audreyt++ | * Fix paths of Paths_Pugs

[05:31] <gaal> looking...

[05:37] <gaal> audreyt++ :)

[05:37] <pugs_svn> r21746 | gaal++ | * minor golfage and remove a debug print

[05:38] <gaal> though I can't say I really understand "doesDirectoryExist $ dir </> fn" there

[05:38] <gaal> I mean, why do we </> fn to the dir?

[05:38] <audreyt> it checks if the source dir exists

[05:38] <audreyt> i.e. if we are running a installed (prepackaged) pugs

[05:38] <audreyt> the sourcedir might not be there

[05:39] <audreyt> maybe it's an empty directory

[05:39] <audreyt> so the dir will be there but not its content

[05:39] <audreyt> it's just paranoia.

[05:39] <audreyt> ok with r21747 pugs/rule should work again

[05:39] <audreyt> bbiab

[05:40] <pugs_svn> r21747 | audreyt++ | * build Pugs-Compiler-Rule with pugs

[05:40] <gaal> I'd better go to work.....

[05:43] *** Psyche^ joined
[05:50] *** BinGOs joined
[05:55] *** BinGOs joined
[06:13] *** xinming joined
[06:18] *** fullermd joined
[06:33] *** xinming_ joined
[06:55] *** a-jing joined
[06:58] *** a-jing left
[07:26] <pugs_svn> r21748 | audreyt++ | * Remove NOTES-pugs-ghc681 as it's out of date.

[07:26] <pugs_svn> r21748 | audreyt++ |   (Also, test if git-svn dcommit works for this commit.)

[07:37] <pugs_svn> r21749 | lwall++ | [STD and t/] various bugs, STD now parses 96% of t/

[07:57] *** BinGOs joined
[08:17] <pugs_svn> r21750 | audreyt++ | * Remoge Pugs.sln as Visual Haskell has bitrotten.

[08:25] *** Alias__ joined
[08:31] *** pmurias joined
[08:31] <pugs_svn> r21751 | pmurias++ | [smop] simple method call works with Mold

[08:33] <pmurias> ruoso: hi

[08:34] <pmurias> how does returning values work in smop?

[08:35] <pmurias> either setr store the result of the previously evaluated node or the SMOP_DISPATCH returns a value?

[08:35] <pmurias> s/store/strores/

[08:50] <pugs_svn> r21752 | audreyt++ | * Makefile.PL: Remove config.yml from build requirements for now.

[08:51] <pmurias> s/storores/stores/

[08:57] *** masak joined
[09:05] <pugs_svn> r21753 | pmurias++ | [m0ld] renamed REAME to README (typoes--)

[09:16] <ruoso> pmurias, SMOP_DISPATCH returns a value so that when that node doesn't recurse, the return value can be taken....

[09:16] <ruoso> but setr is used when you recurse and need to return the value to a previous frame

[09:17] <ruoso> (then SMOP_DISPATCH returns immediatly)

[09:17] <ruoso> (and usually returns SMOP__NATIVE__bool_false)

[09:17] *** meppl joined
[09:20] <ruoso> pmurias, that allows special casing objects that are allowed to recurse in the C stack (interpreter calls, frame calls etc)

[09:21] <ruoso> meaning...

[09:21] <ruoso> when you create a frame, or set a frame for running, you're recursing in the C stack and you can't use setr because you're expecting the return from the C stack...

[09:22] <ruoso> that's why it's the code that creates a new frame that should "setr" on the back frame...

[09:23] <ruoso> and the "eval" code of the continuation that should store the result of some specific call in its internal strucuture (in slime, in the slime node "result" attribute)

[09:26] <pmurias> ruoso: i'm just storing it in a register

[09:36] <pugs_svn> r21754 | pmurias++ | [smop]

[09:36] <pugs_svn> r21754 | pmurias++ | Mold - return values, proper refcounting for register content

[09:38] <pmurias> ruoso: how should i describe Mold on the wiki is a few examples and explaining what do the 4 opcodes do enough?

[09:39] <pmurias> s/decribe/document/

[10:11] <pmurias> ruoso: if you have any questions/concerns about mold feel free to ask and i'll expand the wiki page

[10:15] <pugs_svn> r21755 | pmurias++ | [smop]

[10:15] <pugs_svn> r21755 | pmurias++ | target moved to the first parameter of the call opcode in Mold as it corresponds to $target = ...

[10:21] <ruoso> pmurias, you could throw away unused return values immediatly

[10:21] <ruoso> pmurias, that is not done in slime just because it's too lame

[10:23] <ruoso> pmurias, in sm0p you didn't have a way to say a value wasn't being used anyomore... but m0ld have a way for you to know that...

[10:24] <ruoso> pmurias, btw... the wiki page is just fine...

[10:24] * ruoso will come around from time to time...

[10:36] <pmurias> ruoso: you mean having a /dev/null register?

[10:41] *** ilogger2 joined
[10:42] <ruoso> pmurias, basically yes... but you just need to have a statement without an assignement

[10:49] <pmurias> having contexts would be a different way to solve it

[11:34] *** sri_work joined
[11:35] *** wknight8111 joined
[11:41] <ruoso> pmurias, contexts can be used as an optimization later...

[12:00] <ruoso> pmurias, can mold frames be reused?

[12:01] <ruoso> oh... now I see it...

[12:01] <ruoso> it's the mold "code" that you reuse when creating the frame

[12:02] <ruoso> pmurias++ # very clean and neat implementatoin

[12:06] * ruoso beach &

[12:18] *** alester joined
[12:20] *** Lorn joined
[12:27] *** alester left
[12:46] *** kanru joined
[13:21] *** alester joined
[13:36] *** MeGaMiC joined
[13:44] *** MeGaMiC left
[13:47] *** MeGaMiC joined
[14:14] *** Southen joined
[14:19] *** MeGaMiC left
[14:22] *** pmurias joined
[14:25] <pmurias> is it acceptable haskell style to mix do with >>?

[14:30] *** alester left
[14:33] *** pmurias left
[14:49] *** Limbic_Region joined
[14:51] *** Arathorn joined
[14:51] *** fridim_ joined
[14:55] <Arathorn> hi all - i have a question about smop: has there been any thought about how the threading semantics of the various embedded runtimes might interact?

[14:55] *** LimbicRegion joined
[14:56] *** Limbic_Region left
[14:56] *** LimbicRegion is now known as Limbic_Region

[14:56] <Arathorn> whilst i think i understand the idea of a central event loop using polymorphic eval to dispatch invocations to different runtimes

[14:57] <Arathorn> i don't see how multiple threads within those runtimes could ever return objects to SMOP sanely - especially if SMOP itself was running those runtimes concurrently

[14:57] * Arathorn gets tied up in concurrency at both the object & meta-object level and starts to boggle

[15:03] *** alanhaggai_ joined
[15:04] *** alanhaggai_ left
[15:08] <audreyt> @tell ruoso thanks for pushing me over the edge to switch to git -- http://pugs.blogs.com/pugs/2008/08/short-notes-on.html

[15:08] <lambdabot> Consider it noted.

[15:12] *** fridim__ joined
[15:23] *** jhorwitz joined
[15:28] *** fridim_ left
[15:37] *** Alias_ joined
[15:39] *** alester joined
[15:40] *** alester left
[15:46] *** gaal joined
[15:53] *** alanhaggai joined
[16:07] *** Alias_ left
[16:12] *** gaal left
[16:17] *** iblechbot joined
[16:47] *** iblechbot left
[16:48] *** Limbic_Region left
[16:49] *** jan__ joined
[16:51] *** Arathorn left
[17:31] *** Limbic_Region joined
[17:33] *** Arathorn joined
[17:33] *** renormalist joined
[17:48] <renormalist>  /quit

[17:48] <renormalist> ups

[17:48] *** renormalist left
[17:54] *** renormalist joined
[17:57] *** meppl joined
[18:01] *** Arathorn left
[18:05] *** lambdabot joined
[18:09] *** Arathorn joined
[18:17] *** meppl left
[18:18] *** Arathorn left
[18:18] *** lambdabot left
[18:19] *** lambdabot joined
[18:26] *** jferrero joined
[18:35] <pugs_svn> r21756 | pmichaud++ | S29-str/substr.t: 8 new passing spectests for rakudo

[18:38] *** pmurias joined
[18:49] *** MortenB joined
[18:53] *** Limbic_Region left
[19:08] *** SamB joined
[19:08] *** hercynium joined
[19:34] *** SamB left
[19:35] *** hercynium left
[19:36] *** jferrero left
[19:56] *** fridim__ left
[20:16] *** fooandroo joined
[20:19] <fooandroo> pmurias: yes, if you don't overdo it. One place it makes perfect sense is in on-the-fly parsers

[20:20] *** rindolf joined
[20:20] <fooandroo> for example, do char '\\' ; choice [ char 'n' >> '\n', char 't' >> '\t' ]

[20:21] <fooandroo> I'm probably missing two "return"s there, but you get the idea.

[20:30] *** MortenB left
[20:33] *** wilx joined
[20:36] *** renormalist left
[20:36] *** Schwern joined
[20:40] *** jhorwitz left
[20:55] <pmurias> fooandroo: if you are using semicolons in do you can as well to choice [do {char 'n';return '\n'},do {char 't';return '\t'}]

[20:56] *** Limbic_Region joined
[21:02] <fooandroo> you can use layout to make this pretty:

[21:02] <fooandroo> char '\\'

[21:02] <fooandroo> choice

[21:03] <fooandroo>   [ .... >> ....

[21:03] <fooandroo>   , .... > ....

[21:03] <fooandroo>   , .... >> ....

[21:03] <fooandroo>   ]

[21:03] <fooandroo> s/ > / >> /

[21:04] <fooandroo> you can certainly use do inside the choice, but >> possibly makes it prettier.

[21:12] <pugs_svn> r21757 | pmurias++ | [m0ld] comments,integer constants

[21:19] *** MeGaMiC joined
[21:26] *** pmurias left
[21:43] *** aindilis joined
[21:51] *** araujo joined
[21:54] *** Alias_ joined
[22:11] *** Alias__ joined
[22:11] *** Alias_ left
[22:23] *** alanhaggai left
[22:38] *** justatheory joined
[23:07] *** rafl joined
[23:10] *** Chillance joined
[23:12] *** MeGaMiC left
[23:12] *** justatheory left
[23:16] *** lambdabot left
[23:16] *** lambdabot joined
[23:19] *** sail0r joined
[23:26] *** SamB joined
[23:27] *** SamB left
[23:27] *** Arathorn joined
[23:35] *** SamB joined
[23:36] *** SamB left
[23:46] *** SamB joined
[23:46] *** SamB left
[23:53] *** SamB joined
[23:53] *** SamB left
[23:58] *** Limbic_Region left
