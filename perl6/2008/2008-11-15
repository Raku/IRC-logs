[00:03] *** Limbic_Region left
[00:05] <pugs_svn> r23017 | ruoso++ | [smop] pureprototypehow now implements FETCH by itself.

[00:05] <pugs_svn> r23017 | ruoso++ | [mildew] trying to figure out a way to make it work... I still dont know why it doesnt work

[00:21] *** FurnaceBoy joined
[00:36] *** DemoFreak joined
[00:41] *** lumi joined
[00:54] *** hercynium left
[01:29] *** armagad left
[01:33] *** justatheory left
[01:37] *** justatheory joined
[01:58] *** DemoFreak left
[02:09] <meppl> good night

[02:10] *** alester joined
[02:12] *** meppl left
[02:17] *** silug left
[02:18] *** jferrero left
[02:47] *** sri_kraih joined
[02:53] *** hercynium joined
[03:12] <pugs_svn> r23018 | lwall++ | [Cursor] more duplicate rule linking

[03:12] <pugs_svn> r23018 | lwall++ | save STD.pm snapshot via storable for booting all other parses faster

[03:15] *** sri_kraih_ joined
[03:21] *** armagad joined
[03:23] *** cpfr left
[03:28] *** cpfr joined
[03:29] *** sri_kraih left
[03:54] *** Patterner1 joined
[04:10] *** Patterner left
[04:10] *** Patterner1 is now known as Patterner

[04:27] *** ispy_ joined
[04:39] *** FurnaceBoy left
[04:47] *** [particle] joined
[05:07] *** lizsac joined
[05:07] *** hercynium left
[05:29] *** alc joined
[05:30] *** japhb_ joined
[05:33] *** japhb left
[05:41] *** kisu joined
[05:58] *** s1n joined
[06:13] <wayland76> I haven't given up asking when Perl 6 will be out :)

[06:13] <lambdabot> wayland76: You have 1 new message. '/msg lambdabot @messages' to read it.

[06:13] <wayland76> and in fact, someone asked the other day :)

[06:15] <wayland76> (this is in response to the Perl6 design meeting notes :) )

[06:19] <TimToady> we know when, we just don't know the date of when

[06:23] <[particle]> i'm telling you, you gave up.

[06:23] <[particle]> you just might not know it yet

[06:23] <wayland76> :)

[06:23] <wayland76> I think I had teachers like you ( [particle] ) at school :)

[06:24] <TimToady> then your teachers didn't understand present tense either? :)

[06:25] <wayland76> Quite possibly :), this was a semi-modern education system after all :)

[06:25] <[particle]> i'm just a wigwam with a ribbon round it

[06:25] <wayland76> What colour ribbon? :)

[06:26] <[particle]> grue

[06:26] <wayland76> (although thinking about the Linux analogy of a wigwam, I'm wondering whether being a wigwam is a good thing :) )

[06:27] <TimToady> I think we should have a teepee party instead.

[06:27] <TimToady> and the ribbon will therefore be white

[06:28] <wayland76> Well, that certainly has its good points, but can we make it either non-smoking or smoking optional? :)

[06:28] <TimToady> the smokers can stay on the second floor

[06:28] * wayland76 notices that there are three definitions of grue :) 

[06:29] <wayland76> Fine by me :)

[06:29] <TimToady> used to be only two, but they grue

[06:30] <wayland76> ...and if you meet the one that isn't a colour, it can be gruesome?

[06:30] <wayland76> :)

[06:30] <TimToady> you can be a gruesome twosome

[06:30] <wayland76> Now there are enough definitions to form a gruep :)

[06:31] <TimToady> they can all be grue members

[06:33] <wayland76> Hmm.  Not sure I'd want to be a twosome with a grue.  The grue would want to be the gruem, and I'm not keen on being the other option :)

[06:33] <[particle]> perl is a grue language

[06:33] <wayland76> Better grue members than dismembers, which is what would probably happen to anyone meeting a grue :)

[06:34] <wayland76> Ah, that explains why meeting a grue is such a sticky situation :)

[06:35] <[particle]> you're in a twisty maze of puns, all alike.

[06:35] <wayland76> Yes, it's an amazing form of punishment

[06:37] <wayland76> Maybe a /maison/ would be a better place to party (doing the twist, of course) than a wigwam

[06:38] <wayland76> (with apologies to those whose French is even rustier than mine :) )

[06:38] <TimToady> I'm not allowed to attend maisons

[06:39] *** stephenos left
[06:40] <wayland76> Hmm.  That is a problem.  Our church forbids us to join secret societies, so I can't be a mason either

[06:40] <wayland76> Unless it's a HTML::Mason

[06:40] *** Bzek joined
[06:40] <wayland76> Maybe we could compromise on that :)

[06:40] <TimToady> funny, my church says the same thing

[06:41] <[particle]> it's okay to be a mason with two colons?

[06:41] <TimToady> well, actually, it's the manual that sez it

[06:42] <[particle]> naptime &

[06:43] <wayland76> Similar situation, except the Australian manual doesn't actually say it, IIRC

[06:43] <wayland76> Have a good nap :)

[06:47] *** scrottie left
[06:52] *** adc_Penner joined
[06:53] *** alester left
[06:57] *** justatheory left
[06:59] *** [particle] left
[07:08] <literal> do you guys know if anyone /util/perl6.vim is the only vim syntax file for Perl 6? if so, is it unmaintained?

[07:08] <literal> s/anyone//

[07:09] <literal> I see quite a few things that can be improved

[07:11] <TimToady> go for it

[07:13] <literal> I don't have a commit bit :)

[07:14] <TimToady> msg me your email and preferred nick

[07:14] <literal> alrighty

[07:15] *** charsbar_ left
[07:15] *** charsbar joined
[07:15] <TimToady> hmm, commitbit seems to be hung, might take a while

[07:16] <literal> I see

[07:26] *** japhb_ left
[07:26] *** japhb__ joined
[07:27] *** adc_Penner left
[07:31] <TimToady> well, I can't seem to get it up

[07:31] *** spx2 left
[07:31] <TimToady> (don't take that wrong...)

[07:31] <literal> haha

[07:32] *** spx2 joined
[07:32] <literal> some other time, then

[07:32] <TimToady> you can go ahead and work on it anyway, and someone could always apply a patch for you, till we get feather straightened out

[07:34] <TimToady> bingo, got on

[07:35] *** ispy_ left
[07:36] <TimToady> commitbit sent

[07:36] <literal> yay

[07:36] <TimToady> it's customary to add yourself to AUTHORS as a test commit

[07:37] <literal> ok

[07:38] *** azawawi joined
[07:39] <azawawi> hello

[07:39] <lambdabot> azawawi: You have 1 new message. '/msg lambdabot @messages' to read it.

[07:39] <azawawi> @messages

[07:39] <lambdabot> TimToady said 11h 52m 25s ago: even with the latest checkin, you're still going to get OOM on any file with multiple overloading; I need to come up with a less memory-intensive way to do that...

[07:41] <azawawi> @seen TimToady

[07:41] <lambdabot> TimToady is in #perl6. I last heard TimToady speak 4m 12s ago.

[07:41] <azawawi> TimToady: great, im already seeing less OOMs: see the end of http://feather.perl6.nl/~azawawi/html/log.txt

[07:42] <azawawi> TimToady: time for total execution is about 7797 wallclock secs... 770/774 passed

[07:45] <pugs_svn> r23019 | hinrik++ | I can has commit?

[07:45] <literal> woo

[07:46] <azawawi> literal: you're gonna fix perl6.vim pod comments?

[07:46] <literal> azawawi: precisely

[07:46] <azawawi> literal: that would be great... go for it

[08:06] *** drbean left
[08:13] *** kisu left
[08:14] *** kisu joined
[08:15] *** ejs joined
[08:20] *** iblechbot left
[08:21] *** drbean joined
[08:24] *** mberends joined
[08:28] <pugs_svn> r23020 | azawawi++ | [STD_syntax_highlight] Read from stdin when no filename is given or is '-'

[08:28] <pugs_svn> r23020 | azawawi++ | [STD_syntax_highlight] Default output mode is ansi-escaped sequences (--ansi-text)

[08:28] <pugs_svn> r23020 | azawawi++ | [STD_syntax_highlight] Replaced $parser->parseFile($file) with parse($file_text) 

[08:28] <pugs_svn> r23020 | azawawi++ | [STD_syntax_highlight]      # slurp file once instead of twice

[08:28] <pugs_svn> r23020 | azawawi++ | [STD_syntax_highlight] Updated pod comments along with usage

[08:30] <azawawi> @tell moritz_ 'cat foo.pl | STD_syntax_highlight' now works

[08:30] <lambdabot> Consider it noted.

[08:39] *** araujo left
[09:00] *** DemoFreak joined
[09:02] <pugs_svn> r23021 | azawawi++ | [evalbot] 'highlight: <perl6 code>' is now working with STD_syntax_highlight

[09:03] <azawawi> evalbot control version

[09:03] <p6eval> This is evalbot revision 22847

[09:06] *** smg left
[09:08] *** p6eval left
[09:08] *** p6eval joined
[09:09] <azawawi> highlight: my $foo = "filename: $file";

[09:09] *** p6eval left
[09:09] *** p6eval joined
[09:10] <azawawi> @tell moritz_ when does evalbot svn up itself... i tried the restart command and the revision was 23014?

[09:10] <lambdabot> Consider it noted.

[09:17] <azawawi> im bored... anyone online?

[09:22] *** iblechbot joined
[09:25] *** azawawi left
[09:40] *** Bzek left
[09:40] *** sail0r joined
[09:43] *** sail0r left
[09:52] *** alc left
[09:54] *** pmurias joined
[09:58] <ruoso> hi pmurias 

[09:59] <pmurias> ruoso: hi

[09:59] <ruoso> I'm trying to figure out what's wrong with the add_method call

[09:59] <ruoso> it keeps getting a bool as the first positional argument

[10:00] <ruoso> would you mind taking a look to see if you find out what the problem is?

[10:01] <ruoso> pmurias, it's the classhow_add_method_real.t

[10:01] * ruoso bbl &

[10:01] *** abra joined
[10:02] *** abra left
[10:03] <pmurias> ruoso: ok i'll look into it

[10:06] *** Bzek joined
[10:21] *** pmurias left
[10:26] *** masak joined
[10:36] *** smg joined
[10:45] *** cognominal left
[10:55] *** alc joined
[10:58] *** kisu left
[10:59] *** kisu joined
[11:01] *** azawawi joined
[11:01] <azawawi> ping()

[11:09] <ruoso> meh... I have a chiken-egg problem with method dispatch and FETCH

[11:09] * ruoso later &

[11:09] <azawawi> evalbot control version

[11:09] <p6eval> This is evalbot revision 23014

[11:10] <azawawi> evalbot control restart

[11:10] *** p6eval left
[11:10] *** p6eval joined
[11:10] <azawawi> evalbot control version

[11:10] <p6eval> This is evalbot revision 23014

[11:15] <masak> I would expect chicken-egg problems to show up in that situation. I would also expect them to be solved in the end by Alexandrian solutions or Deus ex machina.

[11:15] <masak> :)

[11:20] <pugs_svn> r23022 | ruoso++ | [smop] PurePrototypeHOW provides minimal infraestructure for an incomplete knowhow...

[11:20] <ruoso> maybe we need forward context propagation to solve that circularity

[11:20] * ruoso later&

[11:47] *** lichtkind joined
[11:48] *** lichtkind left
[11:50] *** ejs left
[11:55] *** cognominal joined
[11:58] *** alanhaggai joined
[12:39] *** riffraff joined
[12:40] <riffraff> hi

[12:43] <pugs_svn> r23023 | azawawi++ | [STD_syntax_highlight] highlight scalar, array and hash variables

[12:43] <azawawi> evalbot control version

[12:43] <p6eval> This is evalbot revision 23014

[12:45] *** alanhaggai left
[12:49] *** alexn_org joined
[12:51] *** alanhaggai joined
[12:51] *** alanhaggai left
[13:07] *** hercynium joined
[13:11] *** alexn_org left
[13:12] *** ruoso_ joined
[13:14] *** ruoso left
[13:15] *** kisu left
[13:17] *** kisu joined
[13:21] *** meppl joined
[13:21] *** ruoso_ left
[13:27] *** alexn_org joined
[13:34] *** alexn_org left
[13:37] *** adc_Penner joined
[13:37] *** pmurias joined
[13:38] <azawawi> pmurias: ?

[13:43] <pmurias> azawawi: ?

[13:43] <azawawi> who maintains evalbot?

[13:44] <pmurias> moritz_ does

[13:44] <pmurias> azawawi: what do you want from it?

[13:45] *** _p6eval joined
[13:45] <azawawi> highlight: my foo = "the file is $file";

[13:45] <_p6eval> highlight 23023: OUTPUT[Unknown routines:␤       foo called at 1 ␤        my called at 1 ␤[37mmy[0m[37m [0m[37mf[0m[37moo[0m[37m [0m[37m=[0m[37m [0m[33m"[0m[33mthe file is [0m[1;32m$[0m[1;32mfile[0m[33m"[0m;␤]

[13:45] <azawawi> highlight: my $foo = "the file is $file";

[13:45] <_p6eval> highlight 23023: OUTPUT[[1;31mmy[0m[1;31m [0m[1;34m$[0m[1;34mfoo[0m[1;31m [0m[34m=[0m [33m"[0m[33mthe file is [0m[1;34m$[0m[1;34mfile[0m[33m"[0m;␤]

[13:45] <masak> ouch. stop that!

[13:45] <pmurias> that's cool

[13:46] <masak> it's a bunch of control characters.

[13:46] <masak> what's cool about it?

[13:46] <pmurias> masak: you don't see the color?

[13:46] <azawawi> what's ur client, masak?

[13:46] <masak> GNU Emacs ERC

[13:46] <masak> pmurias: I see colours, but not the ones I think you're seeing.

[13:47] <azawawi> btw, i just used Term::AnsiColor and it worked on mIRC

[13:47] <masak> ok.

[13:47] <masak> I just want it noted that it looks very ugly on at least one client.

[13:48] <masak> I hope it won't become a recurring thing on the channel :/

[13:48] <azawawi> :-(

[13:48] <azawawi> ;-)

[13:48] <masak> how do the logs treat it, by the way?

[13:49] * azawawi checking logs

[13:49] <azawawi> not good...

[13:49] <masak> yes, that's how it looks

[13:49] <masak> like line noise

[13:49] *** _p6eval left
[13:50] <azawawi> masak: do u ever see color on your client?

[13:50] <masak> azawawi: maybe you could convince _p6eval to send you coloured messages in private?

[13:50] <masak> azawawi: not the kind needed here, no.

[13:50] <masak> my client does its own colouring.

[13:54] <pmurias> OT: is JSAN alive, that is does it make sense to release js stuff there?

[13:57] <azawawi> so no way to implement a correct color scheme for all of IRC clients.... (http://www.ircle.com/colorfaq.shtml)

[13:57] <lambdabot> Title: Color FAQ

[14:00] <azawawi> masak: what about pastebot-ing a link of html instead of direct IRC colors?

[14:05] <masak> azawawi: would be awesome.

[14:05] <masak> rakudo: sub foo(*@a) { .say for @a.values }; foo <a b c d>

[14:05] <p6eval> rakudo 32666: OUTPUT[a␤b␤c␤d␤]

[14:06] <masak> rakudo: sub foo(*@a) { .say for @a }; foo <a b c d>

[14:06] <p6eval> rakudo 32666: OUTPUT[1␤]

[14:06] <masak> should the latter one work?

[14:06] * azawawi is looking at pbotutil

[14:22] <pmichaud> slurpies and parameter passing are a bit suspect at the moment

[14:22] <pmichaud> jonathan++ and I still need to review container semantics in params

[14:22] <pmichaud> (but we need to re-do params in general, so...)

[14:24] <masak> ISTR ihrd++ posting a ticket about this

[14:24] <pmichaud> yes, me too.

[14:39] *** lizsac is now known as lizsmack

[14:41] *** lizsmack is now known as lizsac

[14:59] *** zamolxes joined
[15:13] *** hercynium left
[15:14] *** [particle] joined
[15:16] *** alc left
[15:37] <azawawi> how do i serve html content from a pastebot site?

[15:42] *** s1n1 joined
[15:43] *** s1n left
[15:48] <azawawi> 1<br/>2<span style='color:red'>3</span>

[15:48] *** ruoso joined
[15:49] <ruoso> pmurias, hi... I found out what the problem is

[15:50] <ruoso> it's about the circularity between the FETCH and dispatch methods

[15:51] <ruoso> I'm not still sure about how to solve it... maybe that's when forward context propagation comes to rescue

[15:53] * ruoso painting house &

[15:53] *** rindolf joined
[16:02] *** [particle] left
[16:05] *** alester joined
[16:08] *** Patterner1 joined
[16:08] *** alester left
[16:19] *** ewilhelm left
[16:20] *** masak left
[16:25] *** adc_Penner2 joined
[16:25] *** Patterner left
[16:25] *** Patterner1 is now known as Patterner

[16:30] *** adc_Penner left
[16:31] <pmurias> ruoso: we could pass parameters as is rw and avoid the FETCH

[16:38] *** zamolxes left
[16:38] *** schmalbe joined
[17:05] *** ewilhelm joined
[17:09] *** s1n1 left
[17:09] *** wknight8111 left
[17:12] *** spx2 left
[17:12] *** _p6eval joined
[17:13] <azawawi> highlight: my $foo = "highlight $please\n";

[17:13] *** _p6eval left
[17:19] *** [particle] joined
[17:20] *** jhorwitz joined
[17:25] *** rindolf left
[17:26] *** smg left
[17:34] <pugs_svn> r23024 | azawawi++ | [evalbot] 'highlight:' works only in private msg mode, masak++

[17:34] <pugs_svn> r23024 | azawawi++ | [evalbot] Your IRC client should support ansi-escape sequences.

[17:35] *** p6crayon joined
[17:36] <azawawi> highlight: my $a,@b,%c = "1 2 $three";

[17:36] <p6crayon> Please use /msg p6crayon highlight: my $a,@b,%c = "1 2 $three";

[17:37] <azawawi> not bad ;-)

[17:38] <azawawi> @tell masak i fixed evalbot to work in private msg mode when 'highlight:' is requested

[17:38] <lambdabot> Consider it noted.

[17:41] <azawawi> evalbot control version

[17:41] <p6eval> This is evalbot revision 23014

[17:41] <p6crayon> This is evalbot revision 23023

[17:41] <azawawi> evalbot control restart

[17:41] *** p6crayon left
[17:41] *** p6eval left
[17:41] *** p6crayon joined
[17:41] *** p6eval joined
[17:41] <azawawi> evalbot control version

[17:41] <p6eval> This is evalbot revision 23014

[17:41] <p6crayon> This is evalbot revision 23023

[17:44] <TimToady> seems like you could omit the highlight:

[17:46] <azawawi> TimToady: it is the same evalbot as p6eval (misc/evalbot.pl)

[17:46] *** p6crayon left
[17:46] *** p6crayon joined
[17:48] * azawawi fixing it...

[18:04] *** p6crayon left
[18:05] <pugs_svn> r23025 | lwall++ | [Cursor] reorder fate elements

[18:09] <pugs_svn> r23026 | azawawi++ | [evalbot] refactored to be /msg nick my $foo

[18:09] <pugs_svn> r23026 | azawawi++ | [evalbot] 'highlight:' is not needed, TimToady++

[18:09] *** _p6crayon joined
[18:09] <azawawi> highlight: say "im back";

[18:09] <_p6crayon> Please use /msg _p6crayon say "im back";

[18:10] <literal> if one encounters a .pod file, how can you differentiate reliably between Perl 5 pod and Perl 6 pod? The first thing that comes to mind is the presence of =cut

[18:10] *** _p6crayon left
[18:10] *** _p6crayon joined
[18:11] *** aindilis` left
[18:12] <azawawi> literal: http://perlcabal.org/syn/S26.html

[18:12] <lambdabot> Title: S26

[18:12] <literal> azawawi: I know, but it doesn't answer my question

[18:13] <azawawi> =begin block_type =end block_type ?

[18:13] <literal> You can begin p5pod and p6pod in the same way

[18:14] <literal> If you see =begin (or =whatever), you don't know which you've got unless there's a =cut sometime later on, and that's not always true of .pod files

[18:15] * azawawi reading std

[18:17] *** riffraff left
[18:17] <azawawi> std: =begin =end

[18:17] <p6eval> std 23014: OUTPUT[Use of uninitialized value $file in open at Cursor.pm line 151.␤Use of uninitialized value $file in concatenation (.) or string at Cursor.pm line 151.␤parse failure␤]

[18:18] <_p6crayon> std 23023: OUTPUT[############# PARSE FAILED #############␤Unrecognized token after =begin at /tmp/2KwZNnu_NR line 1:␤------> [32m=begin [31m=end[0m␤00:05 72m␤]

[18:18] *** _p6crayon left
[18:23] <ewilhelm> azawawi, particle said in the meeting minutes that there was some online examples of perl 6 syntax highlighted

[18:24] * ewilhelm does not see that on spec.pugscode.org though

[18:24] <azawawi> ewilhelm: search for 'highlight'...

[18:24] <azawawi> http://perlcabal.org/syn/S02.html

[18:24] <lambdabot> Title: S02

[18:25] <ewilhelm> ah, so only within S02?

[18:26] <ewilhelm> oh, no it is in all of the spec htmls

[18:26] <azawawi> no you can also access it directly from http://feather.perl6.nl/~azawawi/html/

[18:26] <ewilhelm> nice

[18:27] <azawawi> thx

[18:27] <lambdabot> Title: Index of /~azawawi/html

[18:27] <azawawi> im working on fixing it for the evalbot also

[18:29] <TimToady> it's still doing identifiers wrong; it shouldn't make True blue in

[18:29] <TimToady> push @basetypenames, "True", "False", "Bool::True", "Bool::False";  # in quotes lest gimme5 translate them

[18:29] <azawawi> TimToady: sorry but i havent looked into that yet... it is next on my TODO though

[18:30] * azawawi makes a note for it

[18:30] <[particle]> true blue todo?

[18:31] *** p6crayon joined
[18:31] <azawawi> highlight: push @basetypenames, "True", "False", "Bool::True", "Bool::False";  # in quotes lest gimme5 translate them

[18:31] <p6crayon> Please use /msg p6crayon push @basetypenames, "True", "False", "Bool::True", "Bool::False";  # in quotes lest gimme5 translate them

[18:33] *** araujo joined
[18:33] * azawawi working on fixing "True" bug ;-)

[18:35] *** |Jedai| joined
[18:37] *** Bzek left
[18:42] *** alester joined
[18:43] <pugs_svn> r23027 | azawawi++ | [STD_syntax_highlight] fixed identifier and sigil matching to be more exact

[18:43] <azawawi> TimToady: fixed... ;-)

[18:44] <azawawi> highlight: push @basetypenames, "True", "False", "Bool::True", "Bool::False";  # in quotes lest gimme5 translate them

[18:44] <p6crayon> Please use /msg p6crayon push @basetypenames, "True", "False", "Bool::True", "Bool::False";  # in quotes lest gimme5 translate them

[18:46] <TimToady> identifier is also wrong in constant %term            = (:prec<z=>);

[18:47] <TimToady> and something strange is going on with parameters; they;re two-tone

[18:47] <TimToady> *they're

[18:48] <literal> azawawi: what IRC client do you use?

[18:48] <azawawi> literal: mIRC...

[18:48] <literal> I see

[18:49] <literal> my client (xchat) doesn't support these escapes

[18:49] <TimToady> also token statement_control:unless {

[18:49] <TimToady> irssi is fine with 'em

[18:49] *** wknight8111 joined
[18:49] <literal> I would have figured you'd use mIRC-style color escapes, which are supported by most clients (including xchat)

[18:50] <azawawi> they're the output from --ansi-text (Term::AnsiColor)

[18:51] *** alester left
[18:53] *** Jedai left
[18:54] <azawawi> TimToady: im coloring only 'variable's (http://feather.perl6.nl/~azawawi/t2.html)

[18:54] <lambdabot> Title: t2.pl

[18:55] <pmurias> azawawi: you could use String::IRC

[18:55] <azawawi> pmurias: i was going to... but Term::AnsiColor worked for mIRC... ;-)

[18:55] * azawawi is lazy...

[18:56] <TimToady> the "unless" should not be highlighted, it's just the key of a pair

[18:56] *** smg joined
[18:58] <azawawi> vim colors them ;-)

[18:58] <TimToady> and some :syms are colored while others are not

[18:58] <TimToady> vim isn't trying to use the standard grammar...

[18:59] *** __felix__ joined
[18:59] <TimToady> $longname comes out wrong too

[19:00] <TimToady> it's coloring the longname like its a token name

[19:00] <azawawi> STD.pm, right?

[19:00] <TimToady> you have to ignore 'identifier' most of the time, really

[19:01] <TimToady> generally identifiers are part of something else that determines the color instead

[19:01] <azawawi> that's true

[19:01] <TimToady> and if the more important context comes later on the line, you have to ignore an earlier "identifier"

[19:02] <TimToady> nibble, pairs, and variables all hide identifier

[19:03] <TimToady> yes, STD.pm

[19:03] * azawawi generating STD.pm...

[19:07] <TimToady> and I really don't understand what's going on with when it decides to make :sym red or blue

[19:07] <azawawi> it is basically css...

[19:08] <azawawi> it was a hack to make things work in the beginning...

[19:09] <TimToady> but it seems rather random

[19:09] <TimToady> in method EXPR ($preclvl)

[19:09] <TimToady> it changes from blue to cyan after the p

[19:17] <azawawi> TimToady: i fixed it today to do sigil coloring ($,@,%)...

[19:18] <azawawi> i didnt handle $+, and $? yet...

[19:21] *** ZuLuuuuuu joined
[19:32] *** wknight8111 left
[19:36] *** hercynium joined
[19:43] *** ZuLuuuuuu left
[19:50] *** Guest36170 left
[19:50] *** araujo left
[19:54] *** jan_ joined
[19:55] <azawawi> TimToady: is_routine, is_type are returning true on strange cases

[19:57] *** kisu left
[19:57] *** kisu joined
[19:59] <azawawi> TimToady: they both seem to use @PADS

[20:01] <azawawi> TimToady: e.g. constant %term, term returns true on is_routine, is that the right behavior?

[20:02] *** Chillance joined
[20:02] * azawawi sleep &

[20:04] *** p6crayon left
[20:05] <TimToady> you shouldn't be calling is_routine on that identifier

[20:05] <azawawi> i remember is_routine was a bit different before... or am i sleepy? ;-)

[20:06] *** jferrero joined
[20:09] <azawawi> TimToady: im going to sleep now, good night... thx for your valuable comments... will fix them soon.

[20:09] * azawawi sleep &

[20:23] *** justatheory joined
[20:30] *** __felix__ left
[20:30] *** abra joined
[20:31] *** abra left
[20:42] *** zamolxes joined
[20:59] *** spx2 joined
[21:00] *** rhr left
[21:01] *** rhr joined
[21:19] *** rhr_ joined
[21:31] *** slavik joined
[21:32] <slavik> rakudo: say 2 ** 65

[21:32] <p6eval> rakudo 32675: OUTPUT[3.68934881474191e+19␤]

[21:32] <slavik> pugs: say 2 ** 65

[21:32] <p6eval> pugs: No output (you need to produce output to STDOUT)

[21:32] *** rhr left
[21:33] <slavik> pugs: say STDOUT 2 ** 65;

[21:33] <p6eval> pugs: No output (you need to produce output to STDOUT)

[21:33] <slavik> err ... ?

[21:33] <slavik> pugs: print 2 ** 65;

[21:33] <p6eval> pugs: No output (you need to produce output to STDOUT)

[21:33] <slavik> pugs: 2 ** 65;

[21:33] <p6eval> pugs: No output (you need to produce output to STDOUT)

[21:33] <slavik> pugs: say "hello";

[21:33] <p6eval> pugs: No output (you need to produce output to STDOUT)

[21:33] <slavik> wtf?

[21:34] <Patterner> you broke it.

[21:35] <slavik> D:

[21:37] *** kisu left
[21:38] *** kisu joined
[21:42] <slavik> pugs: 2

[21:42] <p6eval> pugs: No output (you need to produce output to STDOUT)

[21:42] <slavik> rakudo: 2

[21:42] <p6eval> rakudo 32675: RESULT[2]

[21:49] <slavik> so, how can I get rakudo to display the entire number???

[21:49] <slavik> rakudo: say 6!;

[21:49] <p6eval> rakudo 32675: OUTPUT[Statement not terminated properly at line 1, near "!;"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[21:50] *** kisu left
[21:51] <slavik> rakudo: sub fact ($x) { return 1 if $x == 0; return $x * fact($x-1); } say fact(1);}

[21:51] <p6eval> rakudo 32675: OUTPUT[Statement not terminated properly at line 1, near "say fact(1"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[21:51] <slavik> rakudo: sub fact ($x) { return 1 if $x == 0; return $x * fact($x-1); } say fact(1);

[21:51] <p6eval> rakudo 32675: OUTPUT[Statement not terminated properly at line 1, near "say fact(1"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[21:51] <slavik> rakudo: sub fact ($x) { return 1 if $x == 0; return $x * fact($x-1); }; say fact(1) ~ "";

[21:51] <p6eval> rakudo 32675: OUTPUT[1␤]

[21:52] <slavik> rakudo: sub fact ($x) { return 1 if $x == 0; return $x * fact($x-1); }; say fact(1);

[21:52] <p6eval> rakudo 32675: OUTPUT[1␤]

[21:52] <slavik> rakudo: sub fact ($x) { return 1 if $x == 0; return $x * fact($x-1); }; say fact(6);

[21:52] <p6eval> rakudo 32675: OUTPUT[720␤]

[21:52] <slavik> rakudo: sub fact ($x) { return 1 if $x == 0; return $x * fact($x-1); }; print fact(6);

[21:52] <p6eval> rakudo 32675: OUTPUT[720]

[21:52] <slavik> rakudo: sub fact ($x) { return 1 if $x == 0; return $x * fact($x-1); }; print fact(10);

[21:52] <p6eval> rakudo 32675: OUTPUT[3628800]

[21:52] <slavik> rakudo: sub fact ($x) { return 1 if $x == 0; return $x * fact($x-1); }; print fact(25);

[21:52] <p6eval> rakudo 32675: OUTPUT[1.5511210043331e+25]

[21:52] <slavik> hmm ...

[21:57] *** rindolf joined
[22:05] <slavik> hmm, I am having trouble matching a period in a string using grammars

[22:07] <[particle]> you need to quote it

[22:07] <[particle]> token period { '.' }

[22:07] <slavik> hmm, I am doing that

[22:08] <slavik> 	token hostname { \w+ [ '.' w+ ]* }

[22:08] <slavik> my $str = "http://www.yahoo.com:80/index.html";

[22:08] <slavik> does that make sence?

[22:08] <slavik> www.yahoo.com should be matched as the hostname

[22:10] <slavik> latest build of rakudo btw

[22:15] <slavik> got it ... I forgot to put '\' in front of w >.<

[22:16] *** meppl left
[22:17] <slavik> ok, I think I found a bug ...

[22:19] <slavik> pmichaud: I found another weird thing with grammars, not sure if it's a bug, but if you do <blah>? when trying to print $/<blah> it will print 1 meaning that $/<blah> is defined, but the match will go into $/<blah>[0]

[22:19] *** ZuLuuuuuu joined
[22:31] *** kisu joined
[22:33] *** jferrero left
[22:33] *** kisu left
[22:33] *** wknight8111 joined
[22:34] <pugs_svn> r23028 | pmurias++ | [mildew] parameters are passed by BINDing (is rw is incorrectly the default now)

[22:34] *** schmalbe left
[22:35] *** kisu joined
[22:40] *** nacho joined
[22:43] *** ZuLuuuuuu left
[22:45] *** rindolf left
[22:59] *** meppl joined
[23:05] *** kisu left
[23:06] *** kisu joined
[23:10] *** adc_Penner2 is now known as adc_penner

[23:16] *** adc_penner left
[23:32] *** pmurias left
[23:37] *** rhr_ is now known as rhr

