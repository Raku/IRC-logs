[00:15] *** justatheory_ left
[00:31] *** BinGOs left
[00:31] *** BinGOs joined
[00:36] *** BinGOs left
[00:38] *** justatheory joined
[00:42] *** BinGOs joined
[00:43] *** hercynium_ joined
[00:43] *** hercynium left
[00:48] *** BinGOs left
[00:58] *** zamolxes left
[00:59] *** BinGOs joined
[01:11] *** eternaleye_ joined
[01:39] *** sri_work left
[01:48] <meppl> good night

[01:48] *** meppl left
[01:56] *** alanhaggai joined
[02:03] *** eternaleye_ left
[02:07] *** jhorwitz left
[02:18] *** hercynium_ left
[02:47] *** alester_ joined
[02:50] *** BinGOs left
[02:57] <Ontolog> moritz_: for split with a negative limit, we want to throw an exception?

[02:57] <Ontolog> moritz_: to me it doesn't seem very a very Perlish thing to do

[02:58] *** eternaleye_ joined
[03:02] *** elmex_ joined
[03:02] *** elmex left
[03:02] *** Bzek joined
[03:02] *** elmex_ is now known as elmex

[03:09] *** alanhaggai_ joined
[03:12] *** kanru joined
[03:16] *** cognominal left
[03:16] *** cognominal joined
[03:23] *** alanhaggai left
[03:50] <s1n> Ontolog: there's a discussion on the mailing list about split

[03:58] *** Bzek_ joined
[04:06] *** Bzek__ joined
[04:07] <Ontolog> i know i am following it

[04:07] <Ontolog> this is in regards to that discussion

[04:13] *** Bzek left
[04:20] *** Bzek__ left
[04:20] *** Bzek joined
[04:23] *** Bzek_ left
[04:27] <pugs_svn> r22465 | putter++ | [on_sbcl] Boxed strings and integers.  Also "", 0, etc, now false.

[04:27] <pugs_svn> r22465 | putter++ | [elf_h] Elf source tweak - a miscalled fixed-arity sub.

[04:37] *** Alias_ joined
[05:05] *** alanhaggai_ is now known as alanhaggai

[05:09] *** alanhaggai_ joined
[05:10] *** alanhaggai left
[05:10] *** alanhaggai_ is now known as alanhaggai

[05:14] *** Psyche^ joined
[05:29] *** Patterner left
[05:29] *** Psyche^ is now known as Patterner

[05:31] *** kanru left
[05:40] *** alester_ left
[05:44] *** iblechbot joined
[05:49] *** justatheory left
[05:50] *** justatheory joined
[05:53] *** kanru joined
[06:16] *** justatheory left
[06:19] *** alanhaggai left
[06:21] *** ashizawa joined
[06:24] *** BinGOs joined
[06:41] *** kanru left
[06:42] *** kanru joined
[07:20] <moritz_> Ontolog: I don't really know; I could argue either way

[07:46] *** penk joined
[07:48] *** [particle] left
[07:48] *** [particle]1 joined
[08:02] *** literal left
[08:04] *** literal joined
[08:52] *** iblechbot left
[08:52] *** elmex left
[08:52] *** falesca left
[08:52] *** PZt left
[08:52] *** Caelum left
[08:52] *** ryanc left
[08:52] *** sirhc left
[08:52] *** mj41 left
[08:52] *** TimToady left
[08:52] *** [particle]1 left
[08:52] *** ashizawa left
[08:52] *** Ontolog left
[08:52] *** jfredett left
[08:52] *** allbery_b left
[08:52] *** hcchien left
[08:52] *** penk left
[08:52] *** araujo left
[08:52] *** Alias_ left
[08:52] *** apeiron left
[08:52] *** xinming left
[08:52] *** cosimo left
[08:52] *** Southen left
[08:52] *** avar left
[08:57] *** kst` joined
[09:03] *** eternaleye_ left
[09:03] *** Jedai left
[09:03] *** charsbar left
[09:03] *** Guest70230 left
[09:03] *** rakudo_svn left
[09:03] *** yves left
[09:03] *** pasteling left
[09:03] *** kane_ left
[09:03] *** Bzek left
[09:03] *** SamB left
[09:03] *** xuser_ left
[09:03] *** alester left
[09:03] *** integral left
[09:03] *** Ehtyar left
[09:03] *** Tene left
[09:03] *** smtms left
[09:03] *** Patterner left
[09:03] *** lambdabot left
[09:03] *** drbean left
[09:03] *** jan_ left
[09:03] *** jdv79 left
[09:03] *** Khisanth left
[09:03] *** REPLeffect left
[09:03] *** agentzh left
[09:03] *** mtve left
[09:03] *** silug left
[09:03] *** zostay left
[09:03] *** ting left
[09:03] *** Aisling left
[09:10] *** smtms joined
[09:17] *** TimToady joined
[09:17] *** aindilis` joined
[09:17] *** jiing joined
[09:17] *** Aisling joined
[09:17] *** xuser joined
[09:17] *** zostay joined
[09:17] *** ilbot2 joined
[09:17] *** IRSeekBot joined
[09:17] *** kcwu joined
[09:17] *** c1sung joined
[09:17] *** buubot joined
[09:17] *** mj41 joined
[09:17] *** sirhc joined
[09:17] *** ryanc joined
[09:17] *** Caelum joined
[09:17] *** PZt joined
[09:17] *** falesca joined
[09:17] *** elmex joined
[09:17] *** iblechbot joined
[09:17] *** beppu joined
[09:17] *** PerlJam joined
[09:17] *** szbalint joined
[09:17] *** nnunley joined
[09:17] *** spinclad joined
[09:17] *** idemal joined
[09:17] *** pochi joined
[09:17] *** broquaint joined
[09:17] *** clkao joined
[09:17] *** ewilhelm joined
[09:17] *** Guest16015 joined
[09:17] *** obra joined
[09:17] *** cxreg joined
[09:17] *** sunnavy joined
[09:17] *** jiing_ joined
[09:17] *** simcop2387 joined
[09:17] *** p6eval joined
[09:17] *** hcchien joined
[09:17] *** avar joined
[09:17] *** allbery_b joined
[09:17] *** jfredett joined
[09:17] *** araujo joined
[09:17] *** Southen joined
[09:17] *** Ontolog joined
[09:17] *** cosimo joined
[09:17] *** xinming joined
[09:17] *** apeiron joined
[09:17] *** Alias_ joined
[09:17] *** ashizawa joined
[09:17] *** penk joined
[09:17] *** [particle]1 joined
[09:17] *** irc.freenode.net sets mode: +o TimToady

[09:17] *** Patterner joined
[09:17] *** Bzek joined
[09:17] *** eternaleye_ joined
[09:17] *** SamB joined
[09:17] *** Jedai joined
[09:17] *** Khisanth joined
[09:17] *** REPLeffect joined
[09:17] *** alester joined
[09:17] *** agentzh joined
[09:17] *** integral joined
[09:17] *** charsbar joined
[09:17] *** lambdabot joined
[09:17] *** drbean joined
[09:17] *** Ehtyar joined
[09:17] *** mtve joined
[09:17] *** Tene joined
[09:17] *** jan_ joined
[09:17] *** silug joined
[09:17] *** jdv79 joined
[09:17] *** ting joined
[09:17] *** pasteling joined
[09:17] *** yves joined
[09:17] *** kane_ joined
[09:17] *** Guest70230 joined
[09:17] *** rakudo_svn joined
[09:17] *** rafl joined
[09:17] *** johto joined
[09:17] *** LCamel joined
[09:17] *** pmichaud joined
[09:17] *** bennymack-work joined
[09:17] *** fullermd joined
[09:17] *** moritz_ joined
[09:17] *** r0bby joined
[09:17] *** Juerd joined
[09:17] *** rhr joined
[09:17] *** jrockway joined
[09:17] *** Grrrr joined
[09:17] *** pugs_svn joined
[09:17] *** buu joined
[09:17] *** cls_bsd joined
[09:17] *** diakopter joined
[09:17] *** Maddingue joined
[09:17] *** arguile joined
[09:17] *** jjore joined
[09:17] *** ryanc left
[09:17] *** PZt left
[09:17] *** xuser left
[09:17] *** c1sung left
[09:17] *** sirhc left
[09:17] *** kcwu left
[09:17] *** TimToady left
[09:17] *** Caelum left
[09:17] *** falesca left
[09:17] *** ilbot2 left
[09:17] *** aindilis` left
[09:17] *** elmex left
[09:17] *** mj41 left
[09:17] *** IRSeekBot left
[09:17] *** iblechbot left
[09:17] *** buubot left
[09:19] *** Tene left
[09:20] *** Tene joined
[09:22] *** ashizawa left
[09:22] *** hcchien left
[09:22] *** pochi left
[09:22] *** jfredett left
[09:22] *** clkao left
[09:22] *** [particle]1 left
[09:22] *** Ontolog left
[09:22] *** allbery_b left
[09:23] *** barney joined
[09:23] *** [particle]1 joined
[09:23] *** ashizawa joined
[09:23] *** Ontolog joined
[09:23] *** jfredett joined
[09:23] *** allbery_b joined
[09:23] *** hcchien joined
[09:23] *** clkao joined
[09:23] *** pochi joined
[09:33] *** TimToady joined
[09:33] *** aindilis` joined
[09:33] *** xuser joined
[09:33] *** iblechbot joined
[09:33] *** elmex joined
[09:33] *** falesca joined
[09:33] *** PZt joined
[09:33] *** Caelum joined
[09:33] *** ryanc joined
[09:33] *** sirhc joined
[09:33] *** mj41 joined
[09:33] *** buubot joined
[09:33] *** c1sung joined
[09:33] *** kcwu joined
[09:33] *** IRSeekBot joined
[09:33] *** ilbot2 joined
[09:33] *** irc.freenode.net sets mode: +o TimToady

[09:39] *** c1sung left
[09:39] *** TimToady left
[09:39] *** falesca left
[09:39] *** ilbot2 left
[09:39] *** PZt left
[09:39] *** ryanc left
[09:39] *** sirhc left
[09:39] *** xuser left
[09:39] *** kcwu left
[09:39] *** Caelum left
[09:39] *** buubot left
[09:39] *** IRSeekBot left
[09:39] *** mj41 left
[09:39] *** elmex left
[09:39] *** iblechbot left
[09:39] *** aindilis` left
[09:45] *** Aisling left
[09:45] *** Aisling joined
[09:48] *** TimToady joined
[09:48] *** aindilis` joined
[09:48] *** xuser joined
[09:48] *** iblechbot joined
[09:48] *** elmex joined
[09:48] *** falesca joined
[09:48] *** PZt joined
[09:48] *** Caelum joined
[09:48] *** ryanc joined
[09:48] *** sirhc joined
[09:48] *** mj41 joined
[09:48] *** buubot joined
[09:48] *** c1sung joined
[09:48] *** kcwu joined
[09:48] *** IRSeekBot joined
[09:48] *** ilbot2 joined
[09:48] *** irc.freenode.net sets mode: +o TimToady

[09:49] *** baest_ joined
[10:04] *** sri_work joined
[10:06] *** Alias_ is now known as adamkennedy

[10:07] *** baest left
[10:09] *** c1sung left
[10:09] *** TimToady left
[10:09] *** falesca left
[10:09] *** ilbot2 left
[10:09] *** PZt left
[10:09] *** ryanc left
[10:09] *** sirhc left
[10:09] *** xuser left
[10:09] *** kcwu left
[10:09] *** Caelum left
[10:09] *** buubot left
[10:09] *** IRSeekBot left
[10:09] *** mj41 left
[10:09] *** elmex left
[10:09] *** iblechbot left
[10:09] *** aindilis` left
[10:21] *** TimToady joined
[10:21] *** aindilis` joined
[10:21] *** xuser joined
[10:21] *** iblechbot joined
[10:21] *** elmex joined
[10:21] *** falesca joined
[10:21] *** PZt joined
[10:21] *** Caelum joined
[10:21] *** ryanc joined
[10:21] *** sirhc joined
[10:21] *** mj41 joined
[10:21] *** buubot joined
[10:21] *** c1sung joined
[10:21] *** kcwu joined
[10:21] *** IRSeekBot joined
[10:21] *** ilbot2 joined
[10:21] *** irc.freenode.net sets mode: +o TimToady

[10:23] *** braceta joined
[10:23] *** ting left
[10:23] *** ting joined
[10:43] *** penk left
[11:07] *** adamkennedy left
[11:23] *** masak joined
[11:26] *** alanhaggai joined
[11:39] *** zamolxes joined
[11:41] *** BinGOs left
[11:41] *** BinGOs joined
[11:47] *** BinGOs left
[11:47] *** BinGOs joined
[12:20] *** wilx joined
[12:32] <moritz_> rakudo: say $?PACKAGE

[12:32] <p6eval> rakudo 31507: OUTPUT[Scope not found for PAST::Var '$PACKAGE'‚ê§current instr.: 'parrot;PCT::HLLCompiler;panic' pc 156 (src/PCT/HLLCompiler.pir:103)‚ê§]

[12:34] <masak> rakudo: class A {}; A.new.WHAT.say

[12:34] <p6eval> rakudo 31507: OUTPUT[A‚ê§]

[12:38] *** kolibrie joined
[12:48] <moritz_> rakudo; package A; say 1

[12:49] <masak> rakudo: package A; say 1

[12:49] <p6eval> rakudo 31507: OUTPUT[Could not find non-existent sub package‚ê§current instr.: '_block11' pc 21 (EVAL_12:15)‚ê§]

[12:49] *** ashizawa left
[12:49] <masak> rakudo: package A { say 1 }

[12:49] <moritz_> rakudo: package A { say 1; };

[12:49] <p6eval> rakudo 31507: OUTPUT[Statement not terminated properly at line 1, near "{ say 1 }"‚ê§‚ê§current instr.: 'parrot;PGE::Util;die' pc 119 (runtime/parrot/library/PGE/Util.pir:82)‚ê§]

[12:49] <p6eval> rakudo 31507: OUTPUT[Statement not terminated properly at line 1, near "{ say 1; }"‚ê§‚ê§current instr.: 'parrot;PGE::Util;die' pc 119 (runtime/parrot/library/PGE/Util.pir:82)‚ê§]

[12:49] <masak> :)

[12:49] *** wilx left
[12:50] *** p6eval left
[12:51] *** p6eval joined
[12:58] *** abra joined
[13:01] *** rindolf joined
[13:14] *** rindolf left
[13:20] *** abra left
[13:20] <masak> is it still true what it says on S06:601?

[13:20] <masak> I seem to remember that something like that was retracted

[13:22] <moritz_> that looks out-of-dateish

[13:22] <masak> it does, doesn't it?

[13:22] <masak> @ask TimToady is it still true what it says on S06:601? I seem to remember that something like that was retracted

[13:22] <lambdabot> Consider it noted.

[13:22] <masak> lambdabot: thanks

[13:23] * moritz_ wonders if every "thanks" to lambdabot increases the karma of lambdabot's creator

[13:23] * masak hopes not

[13:24] <masak> implicit karma transactions are evil

[13:24] <masak> even if created for apparently good reasons

[13:26] <Juerd> feather's uptime is 131 days.

[13:26] <Juerd> That's pretty high for a box with way too many users with root access :)

[13:26] <moritz_> aye ;)

[13:27] <masak> Juerd++ # feather

[13:27] <Juerd> Remember when it crashed because all memory was exhausted?

[13:27] <Juerd> That was 131 days ago. :)

[13:27] <Juerd> So hurrah for those who put effort into fixing memory leaks!

[13:28] <moritz_> and for those who restart apache regularly ;)

[13:28] <Juerd> Well, Apache is restarted automatically every 6 hours

[13:28] <Juerd> 0 */6 * * * root /usr/local/bin/incredibly_ugly_hack_to_restart_apache

[13:28] <masak> :)

[13:29] * moritz_ made that hack even uglier

[13:29] <Juerd> But better too :)

[13:31] *** Bzek left
[13:34] <moritz_> speaking of which, I could do another apt-get upgrade on feather...

[13:36] *** Bzek joined
[13:44] *** zamolxes left
[13:45] <masak> moritz_: we talked about named parameters being optional the other day. I just confirmed that they are on S06:763.

[13:45] *** Limbic_Region joined
[13:49] <masak> re S06:811, I don't understand what the difference would be between `sub head(*$head, *@tail)` and `sub head($head, *@tail)`...

[13:50] *** Limbic_Region left
[13:51] <masak> is it that the latter would not match a call on the form `head(1..Inf)`?

[13:52] *** `nipra left
[13:55] <masak> on S06:860, is the backslash intentional? in other words, does .perl on a Capture print something starting with a backslash?

[13:59] <masak> hm, seems it is. t/spec/S02-builtin_data_types/capture.t seems to use both '\' and '|'. nvm.

[14:00] *** aindilis` is now known as aindilis

[14:02] <masak> but wait! on S06:935, again a '\' is used in an argument list. now I'm confused.

[14:05] <masak> S06 just becomes stranger and stranger the further into it I get... :/

[14:11] *** mj41_ joined
[14:13] <moritz_> masak: *$head seems to make $head optional

[14:14] <masak> ah.

[14:14] <masak> so a slurpy scalar is the same as an optional argument?

[14:14] <[particle]1> that seems right to me

[14:14] *** [particle]1 is now known as [particle]

[14:14] *** preflex left
[14:15] <[particle]> i added parameter passing rules to nqp and rakudo some time ago

[14:15] <[particle]> lemme look at the nqp source to remember

[14:15] <masak> sure thing

[14:16] <moritz_> does nqp have slurpy params?

[14:16] <masak> this: `@a ==> @b` would be a pure list assignment, wouldn't it?

[14:16] <masak> could I write `@a ==> my @b`?

[14:16] <moritz_> I think you could

[14:17] <masak> and `@a ==> @b` is the same as `push @b, @a`, yes?

[14:17] <[particle]> http://svn.perl.org/parrot/trunk/compilers/nqp/src/Grammar/Actions.pir ~423

[14:17] <moritz_> masak: you meant @a ==>> @b?

[14:17] <lambdabot> http://tinyurl.com/4ox7d9

[14:17] <masak> moritz_: aye

[14:18] <[particle]> oh, also need parser link there...

[14:18] <moritz_> actions written in PIR look so painful ;)

[14:18] <[particle]> http://svn.perl.org/parrot/trunk/compilers/nqp/src/Grammar.pm ~229

[14:19] <masak> I only have a Grammar.pg

[14:20] <[particle]> oh, sorry

[14:20] <[particle]> .pg

[14:20] <PerlJam> Wait ... when did ==> become two headed?  (==>>) 

[14:20] <[particle]> if $key eq 'slurp' {              # slurpy

[14:20] <[particle]>     $past.slurpy( $sigil eq '@' || $sigil eq '%' );

[14:20] <[particle]>     $past.named( $sigil eq '%' );

[14:20] <[particle]> }

[14:21] <masak> PerlJam: when it's additive, like >> in shells

[14:21] <[particle]> it's only slurpy if it's a @ or %

[14:21] <masak> [particle]: be that as it may, it's called 'slurpy scalar' in S06

[14:21] <[particle]> seems * is ignored for *$param

[14:21] <masak> [particle]: at least that's a semantics I can understand :)

[14:21] <PerlJam> masak: so, ==> is like "empty the target and fill it from the source" and ==>> is "add the source to the target"?

[14:22] <[particle]> http://spec.pugscode.org/ not responding :(

[14:22] <masak> PerlJam: think so

[14:22] <masak> [particle]: I had the same problem

[14:22] <masak> moritz_ did not

[14:22] <[particle]> dns cache?

[14:22] <masak> might be

[14:23] * [particle] restarts ff

[14:23] <moritz_> no, browser redirect cache

[14:23] <moritz_> with wget I get the same failure

[14:24] <PerlJam> btw, wrt slurpy scalars, I always though they were to circumvent laziness.  i.e., a slurpy scalar will eagerly get you one item from a listy source.

[14:24] <PerlJam> s/though/thought/

[14:24] <[particle]> sure, but are they optional?

[14:24] <[particle]> in nqp, they're not.

[14:25] <masak> quite.

[14:25] <PerlJam> I wouldn't expect them to be optional.

[14:26] <[particle]> then * is meaningless on scalar params

[14:26] <masak> S06 talks about them at length, so it doesn't seem they're meaningless

[14:26] <[particle]> that's the part i'm trying to look at next :)

[14:28] *** mj41 left
[14:29] * moritz_ tries to figure out what's wrong with feather's apache

[14:29] <moritz_> HTTP/1.1 302 Object moved

[14:29] <moritz_> Location: http://perlcabal.org/syn/

[14:29] <lambdabot> Title: Official Perl 6 Documentation

[14:29] <moritz_> now magically works [tm]

[14:30] *** eternaleye_ left
[14:30] <[particle]> works for me after ff restart

[14:30] <masak> now Wikipedia is down instead :/

[14:34] *** ispy_ joined
[14:36] <masak> ah, here: "A heisenbug is a computer bug that disappears or alters its characteristics when an attempt is made to study it."

[14:39] <masak> is there really a KitchenSink role in Perl 6? I don't know if that makes me laugh or cry

[14:39] <masak> couldn't it at least be called Sink?

[14:41] <moritz_> uhm, this is weird...

[14:41] <moritz_> the response header from feather's apache also includes

[14:41] <moritz_> Server: Microsoft-IIS/6.0

[14:41] <masak> haha

[14:41] <moritz_>   X-Powered-By: ASP.NET

[14:41] <moritz_>   X-AspNet-Version: 2.0.50727

[14:41] *** meppl joined
[14:42] *** hercynium joined
[14:42] <masak> aye, S06 confirms the `@a ==> my $b` syntax.

[14:42] <masak> wonder if `@a ==>> my $b` would be equivalent or a syntax error?

[14:45] <moritz_> STD parse ==>> my @b

[14:47] <masak> are PRE blocks run after tie-breaking is finished on multisubs?

[14:49] <moritz_> yes

[14:49] <moritz_> if you want additional conditions that contribute to tie-breaking, you have to use subset types instead

[14:49] <masak> seems sane

[14:50] <PerlJam> I would think that @a ==>> my @b should just work fine.  (Since that's my "least surprise" and perl follows said principle)

[14:50] <masak> :)

[14:51] <masak> PerlJam: well, something like `my $b += 2` doesn't work

[14:51] <moritz_> pugs: my $b += 2;

[14:51] <p6eval> pugs: RESULT[\2]

[14:51] <masak> hm :)

[14:51] <moritz_> masak: sure? ;-)

[14:51] <masak> "test first, then speak with certainty"

[14:52] <masak> rakudo: my $b += 2;

[14:52] <p6eval> rakudo 31512: OUTPUT[MMD function __i_add not found for types (78, 92)‚ê§current instr.: 'infix:+=' pc 11837 (src/gen_builtins.pir:7430)‚ê§]

[14:52] <moritz_> rakudo can't autovivify scalars yet

[14:52] <moritz_> so my $x; $x++ will also fail

[14:53] <moritz_> rakudo: my Str $x; $x++; say $x

[14:53] <p6eval> rakudo 31512: OUTPUT[Str‚ê§]

[14:53] <masak> I would at least not be surprised if the above threw a not-defined warning, something which Pugs does not support, IIRC

[14:53] <moritz_> aye

[14:53] <moritz_> otoh perl doesn't warn on $undef++ or $undef += $something either

[14:53] <moritz_> because it's such a common non-error case

[14:54] <masak> aye

[14:54] <masak> with that reasoning, Perl 6 shouldn't either

[14:54] <moritz_> rakudo: my $x = 0; my @a = <1 2>; $x += @a; say $x

[14:54] <p6eval> rakudo 31512: OUTPUT[2‚ê§]

[14:55] <moritz_> I somehow thought that this doesn't work

[14:55] <moritz_> rakudo: my $x = 0; my @a = <a b  c d>; $x += @a; say $x

[14:55] <p6eval> rakudo 31513: OUTPUT[4‚ê§]

[14:56] <moritz_> rakudo: my @x = 1, 2, 3; my $i = 0; $i += @x; say $i

[14:56] <p6eval> rakudo 31513: OUTPUT[3‚ê§]

[14:57] * moritz_ closes RT #58274

[14:59] *** zamolxes joined
[15:01] *** braceta left
[15:03] *** alanhaggai left
[15:06] *** preflex joined
[15:07] *** kanru left
[15:08] *** kanru joined
[15:08] *** literal left
[15:09] *** literal joined
[15:16] *** kanru left
[15:17] *** kanru joined
[15:20] *** literal left
[15:21] *** justatheory joined
[15:22] *** preflex left
[15:22] *** literal joined
[15:24] *** preflex joined
[15:27] *** ruoso joined
[15:42] *** alanhaggai joined
[15:42] *** Exodist joined
[15:50] *** literal left
[15:50] *** literal joined
[16:01] *** literal left
[16:01] *** literal joined
[16:17] <pmichaud> (my $b += 2;)    I suspect this will throw a warning

[16:18] <masak> ok.

[16:18] <pmichaud> however,   my $b;  $b++;    won't throw a warning, as we're explicitly allowed to increment undef values to Int

[16:18] <masak> what's the difference?

[16:19] <pmichaud> one's mentioned in the synopsis as being allowed while the other isn't?

[16:19] <moritz_> that does't look like a good reason to me ;)

[16:20] <masak> the feel very similar to me

[16:20] <masak> s/the/they/

[16:20] <moritz_> in perl 'my $b += 2' doesn't warn either

[16:21] <pmichaud> I'm just reading the synopsis.  :-)

[16:21] <pmichaud> I don't design the language, I just implement it.

[16:21] <pmichaud> The section that says that $x++ works on undef is in "Autoincrement precedence"

[16:21] <pmichaud> (in S03)

[16:22] *** mofino left
[16:22] <pmichaud> since += isn't "autoincrement", I'm not generalizing in that manner

[16:23] *** zamolxes left
[16:24] <pmichaud> otoh, the section "Declarators" does say:

[16:24] <pmichaud> When parentheses are omitted, you may use any infix assignment operator instead of = as the initializer. In that case, the left hand side of the infix operator will be the variable's prototype object:

[16:24] <pmichaud>     constant Dog $fido .= new;      # okay: a constant Dog object

[16:24] <pmichaud> so, "any infix assignment operator" would presumably include +=

[16:24] <pmichaud> that'll be weird.

[16:25] *** jhorwitz joined
[16:25] <meppl> good night

[16:26] <[particle]> Dog++

[16:26] <pmichaud> I'm not sure that STD.pm supports the other infix assignment ops as initializers yet, though.  It seems to only handle '=' and '.='

[16:26] *** meppl left
[16:26] <[particle]> what does that result in?

[16:26] <pmichaud> that would be an error, because Dog isn't in a suitable container

[16:27] <pasteling> "moritz_" at 89.13.207.187 pasted "failures while accessing http://dev.pugscode.org/changeset/22454" (9 lines, 2.2K) at http://sial.org/pbot/32382

[16:27] <[particle]> where Dog is the protoobject

[16:27] <pmichaud> right, it's not in a suitable container

[16:27] <pmichaud> it's like saying   3++

[16:27] <TimToady> I think += should be able to turn an Int into a 0

[16:27] <lambdabot> TimToady: You have 1 new message. '/msg lambdabot @messages' to read it.

[16:27] <TimToady> or a Scalar into a 0

[16:28] <pmichaud> TimToady: okay, works for me.

[16:28] <[particle]> does that mean the Int protoobject has an Autoincrementable role?

[16:28] <[particle]> or Vivifiable?

[16:28] <pmichaud> I hadn't seen the line in S03 that said any infix assignment operator could be an initializer (until just now)

[16:29] <ruoso> I think "Uninitialized" is a special value that knows how to turn itself into a lot of values...

[16:30] <ruoso> like array, hash, 0, ""

[16:30] <TimToady> I don't know how generalizable the thing is

[16:30] <ruoso> because autovivification depends on it

[16:30] <pmichaud> TimToady: I'd agree with that, also.  :-)

[16:30] <TimToady> but maybe it's related to the table of degenerate reduction ops

[16:30] <moritz_> I think the ops should be special, not the undef

[16:30] <ruoso> postcircumfix:{} is not an op

[16:31] <TimToady> if [*]() is 1 then maybe *= autovivs to 1

[16:31] <ruoso> it's a method

[16:31] <moritz_> because it makes it easier to add types with new autovivification options

[16:31] <masak> just as the discussion gets interesting, I have to go :P

[16:31] <pmichaud> alas, so do I.

[16:31] <masak> see you around

[16:31] *** masak left
[16:32] <TimToady> I suspect the question is already answered. :)

[16:33] <ruoso> it is?

[16:33] <TimToady> I think there's a deep relationship between assignment ops and reduction ops

[16:36] * ruoso has a blurred mind at the moment... 

[16:36] * ruoso later &

[16:46] *** TJCRI joined
[16:46] *** alanhaggai_ joined
[16:52] *** zamolxes joined
[16:52] *** alanhaggai left
[16:53] *** alanhaggai_ is now known as alanhaggai

[16:54] *** literal left
[16:54] *** literal joined
[17:00] *** Lorn joined
[17:15] *** rindolf joined
[17:15] *** rindolf left
[17:32] *** Bzek left
[17:33] *** alanhaggai_ joined
[17:44] *** apeiron_ joined
[17:45] *** alanhaggai__ joined
[17:47] *** alanhaggai left
[17:58] *** apeiron left
[18:00] *** alanhaggai_ left
[18:02] *** apeiron_ is now known as apeiron

[18:10] *** ispy_ left
[18:17] *** mofino joined
[18:26] *** cosimo left
[18:44] <rakudo_svn> r31519 | pmichaud++ | [rakudo]:  spectest-regression.csv update: 193 files, 4381 passing tests

[18:57] <rakudo_svn> r31520 | pmichaud++ | [rakudo]:  Correct name of t/spec/S05-modifier/ignorecase.t

[18:59] <moritz_> uhm, I shouldn't commit when half asleep

[18:59] *** alanhaggai__ is now known as alanhaggai

[19:32] *** barney left
[20:16] *** cognominal left
[20:25] *** Torment joined
[20:40] *** Kitchy joined
[20:41] <PerlJam> moritz_: no, you should wait until you are fully asleep, then commit.

[20:41] <PerlJam> :-)

[20:41] <Kitchy> Will there be a good compiler for Perl 6 that would let me decompile into C?

[20:42] <PerlJam> Kitchy: if the need is great, someone will write it.

[20:43] *** Jedai left
[20:44] <[particle]> i can't imagine that need will be great

[20:44] <PerlJam> [particle]: me either.

[20:44] <[particle]> but who am i to judge?

[20:45] <moritz_> you are [particle] ;-)

[20:45] <[particle]> all i know is: it's not in the perl 6 spec, so it's not required for any perl 6 to implement.

[20:55] <Kitchy> Is it expected that the Camel book equivalent for Perl 6 will include community-written manpage stuff like the Perl 5 book does?

[20:57] <Kitchy> ...because it sounds like english isn't the first language of some of the current doc writers.

[20:58] <moritz_> you can be sure that whatever O'Reilly publishes will be thoroughly edited

[20:58] <moritz_> (and you're welcome to fix spelling and grammar errors yourself ;-)

[21:04] *** smtms left
[21:04] *** smtms joined
[21:11] *** alester left
[21:16] *** TJCRI left
[21:19] *** Kitchy left
[21:21] *** meppl joined
[21:23] *** meppl left
[21:27] *** eternaleye_ joined
[21:49] *** iblechbot left
[21:55] *** cognominal joined
[21:58] *** Lorn_ joined
[22:06] *** eternaleye_ left
[22:06] *** eternaleye_ joined
[22:08] * ruoso later &

[22:08] *** ruoso left
[22:10] *** Lorn left
[22:17] *** Lorn joined
[22:19] *** ludan joined
[22:19] *** Lorn_ left
[22:37] *** Lorn left
[22:50] *** ludan left
[22:54] *** eternaleye_ left
[23:03] *** eternaleye_ joined
[23:06] *** kulp joined
[23:18] *** meppl joined
[23:56] *** Exodist left
