[00:12] *** wknight8111 joined
[00:25] *** kanru left
[00:37] *** mjk left
[00:38] *** justatheory joined
[00:39] *** justatheory left
[01:06] *** bacek left
[01:25] *** bacek joined
[01:27] *** a-jing joined
[01:27] *** a-jing left
[01:33] *** cjfields joined
[01:36] <pugs_svnbot> r21104 | lwall++ | [STD] 55%

[01:41] *** wknight8111 left
[01:45] *** bacek left
[01:50] *** justatheory joined
[01:59] *** justatheory left
[02:02] *** alester joined
[02:17] *** alanhaggai joined
[02:23] <rakudo_svn> r28804 | petdance++ | fixed some markup

[02:26] *** alanhaggai_ joined
[02:40] *** alanhaggai left
[02:57] *** cjfields left
[03:01] *** Lorn joined
[03:03] <Lorn> moritz_: ping

[03:06] *** elmex_ joined
[03:11] *** elmex left
[03:12] *** elmex_ is now known as elmex

[03:38] *** jfredett_ left
[03:39] *** jfredett joined
[03:39] *** pbuetow_ joined
[03:43] <Auzon> elf: 8 + 1 + 12 + 14 + 8

[03:43] <p6eval> elf 21104: RESULT[43␤]

[03:51] *** pbuetow left
[03:53] *** cjfields joined
[04:15] *** cjfields left
[04:29] *** lambdabot left
[04:30] *** lambdabot joined
[04:40] <pugs_svnbot> r21105 | Auzon++ | [gsoc_spectest] many relational tests (checking that Bool::True or Bool::False is returned, num/str usage). (added 28 tests)

[05:13] *** a-jing joined
[05:13] *** a-jing left
[06:06] *** Psyche^ joined
[06:18] *** Patterner left
[06:18] *** Psyche^ is now known as Patterner

[07:05] <pugs_svnbot> r21106 | lwall++ | [STD] 100%!!!

[07:05] <pugs_svnbot> r21106 | lwall++ | STD5 now parses STD.pm (more or less correctly) in 75 sec using 70 megs

[07:07] *** alanhaggai_ left
[07:18] *** lambdabot left
[07:19] *** lambdabot joined
[07:44] *** iblechbot joined
[07:45] *** alanhaggai joined
[07:52] *** lambdabot left
[08:07] *** barney joined
[08:24] *** masak joined
[08:43] *** riffraff joined
[08:44] <riffraff> hi

[08:51] *** barney left
[08:52] <spinclad> STD5++ !   # svn up && play with it !

[09:05] *** rindolf joined
[09:12] <pugs_svnbot> r21107 | clkao++ | set the dump url for svk to bootstrap mirror with.

[09:14] <rindolf> clkao: here?

[09:48] *** chris2 joined
[10:07] *** chris2 left
[10:17] *** kanru joined
[10:32] *** apeiron_ joined
[10:45] *** meppl joined
[10:48] *** apeiron left
[11:06] *** polettix joined
[11:30] *** icwiener joined
[11:30] *** redicaps joined
[11:31] *** redicaps left
[11:32] *** tuxdna joined
[11:35] *** meppl left
[11:36] *** b_jonas joined
[12:04] *** araujo left
[12:14] *** tuxdna left
[12:32] *** nothingmuch left
[12:32] *** chris2 joined
[12:53] *** poletti joined
[13:01] *** polettix left
[13:13] *** poletti left
[13:19] *** pbuetow_ is now known as pbuetow

[13:32] *** rindolf left
[13:40] *** wknight8111 joined
[13:41] *** ggoebel left
[13:55] <rakudo_svn> r28816 | pmichaud++ | [rakudo]:

[13:55] <rakudo_svn> r28816 | pmichaud++ | * Update test_summary.pl script to use -G,

[13:55] <rakudo_svn> r28816 | pmichaud++ |   record aborted test runs as failed tests.

[13:57] *** ggoebel joined
[13:59] <pugs_svnbot> r21108 | pmichaud++ | Update skip message for S29-num/abs.t .

[14:03] *** cognominal_ left
[14:12] <rakudo_svn> r28818 | pmichaud++ | [rakudo]:

[14:12] <rakudo_svn> r28818 | pmichaud++ | * In test_summary.pl, counting aborts as failed tests should count

[14:12] <rakudo_svn> r28818 | pmichaud++ |   them as tests, too.

[14:12] *** cognominal_ joined
[14:17] *** icwiener_ joined
[14:23] *** ruoso left
[14:26] *** wknight8111 left
[14:31] *** ruoso joined
[14:34] *** icwiener left
[14:35] *** kanru left
[14:44] <rakudo_svn> r28822 | pmichaud++ | [rakudo]:

[14:44] <rakudo_svn> r28822 | pmichaud++ | * spectest-progress update: 75 test files, 1077 passing, 74 failing

[14:46] *** kanru joined
[14:50] *** jan__ left
[15:14] *** poletti joined
[15:16] *** broquaint left
[15:16] *** broquaint joined
[15:18] *** poletti is now known as polettix

[15:25] *** cggoebel joined
[15:28] *** barney joined
[15:33] *** ggoebel left
[15:35] *** alanhaggai left
[15:48] *** cathya left
[15:54] *** alester left
[16:01] *** Lorn left
[16:01] *** kanru left
[16:10] *** jan__ joined
[16:12] <moritz_> Lorn_: pong

[16:12] <moritz_> (with only 14Hrs delay)

[16:13] *** apeiron_ is now known as apeiron

[16:22] *** kanru joined
[16:27] *** Belaf joined
[16:27] *** Belaf left
[16:27] *** barney left
[16:27] *** wknight8111 joined
[16:31] *** meppl joined
[16:31] *** alanhaggai joined
[16:32] *** tuxdna joined
[16:43] <moritz_> pixie: say "test"

[16:43] <p6eval> pixie: OUTPUT[fatal error: ############# PARSE FAILED #############␤----> <<<HERE>>>say "test"␤Can't understand next input--giving up at line 1␤]

[16:44] <moritz_> pixie: say 1

[16:44] <p6eval> pixie: OUTPUT[fatal error: ############# PARSE FAILED #############␤----> <<<HERE>>>say 1␤Can't understand next input--giving up at line 1␤]

[16:44] <moritz_> pixie: 1;

[16:44] <p6eval> pixie: OUTPUT[fatal error: ############# PARSE FAILED #############␤----> <<<HERE>>>1;␤Can't understand next input--giving up at line 1␤]

[16:50] *** a-jing joined
[16:50] *** a-jing left
[16:52] *** alester joined
[16:56] <moritz_> is '.=' just a method call, or also a special operator?

[16:56] <moritz_> in other words, can I do $obj .= method; ?

[16:58] <pmichaud> it's an operator, but yes,   $obj .= method   works

[16:58] <pmichaud> it's essentially the same as  $obj = $obj.method;   (but "in place")

[16:59] *** alanhaggai left
[17:00] <pmichaud> so, $x.abs   returns the absolute value of $x,  but $x.=abs  changes $x to its absolute value

[17:00] <moritz_> I knew that $x.=abs works, but I didn't know about $x .= abs

[17:00] <pmichaud> it's the same parse

[17:00] <moritz_> thanks

[17:01] <pmichaud> i.e., it's infix:<.=> in either case

[17:01] *** alanhaggai joined
[17:07] <b_jonas> I wonder if the $foo.$bar indirect method call syntax doesn't clash with some other syntax

[17:07] <b_jonas> also $foo!$bar

[17:07] <b_jonas> but apparently no

[17:07] <b_jonas> it's funny

[17:07] <rakudo_svn> r28826 | moritz++ | [rakudo] removed connect.t from spectest_regression, connect() isn't

[17:07] <rakudo_svn> r28826 | moritz++ | implemented. This test only succeeded (and skipped everything) so far 

[17:07] <rakudo_svn> r28826 | moritz++ | because nobody had PERL_TESTS_ALLOW_NETWORK env variable set.

[17:08] <moritz_> b_jonas: why should it? . is used only for floating point literals and method calls

[17:08] <b_jonas> no, not only

[17:08] <b_jonas> it's used for dotted infix operators too

[17:08] <b_jonas> isn't it?

[17:08] <moritz_> example?

[17:09] <moritz_> what is a "dotted infix operator"?

[17:09] <b_jonas> wait, let me look it up

[17:09] <moritz_> there's infix:<..> for creating ranges, but that's an entirely different token

[17:09] <b_jonas> hmm no

[17:09] <b_jonas> backspace is used for that now

[17:09] <b_jonas> like

[17:09] <b_jonas> and it's indexing, not infix

[17:09] <b_jonas> like

[17:09] <b_jonas> @foo\  [2]

[17:09] *** icwiener_ left
[17:10] <pmichaud> that's an "unspace"

[17:10] <moritz_> ah, but indexing *is* is amethod call

[17:10] <b_jonas> no wait

[17:10] <b_jonas> it also says something about dots

[17:10] <moritz_> you can say @foo.[2]

[17:10] <moritz_> which is an alias for @foo[2], which is a method call again

[17:10] *** icwiener joined
[17:10] <b_jonas> it says $foo.++ is equivalent to $foo++

[17:11] <b_jonas> I see

[17:11] <moritz_> yes, because it calls postfix:<++>

[17:11] <pmichaud> postfix operators may be preceded by a dot.

[17:11] <b_jonas> and both indexing and ++ is a postfix, which is why they don't normally accept spaces before then?

[17:11] <pmichaud> b_jonas: yes.

[17:11] <moritz_> right

[17:12] <moritz_> besides, it allows us to talk about postcircumfix:<[ ]> as .[] unambigously ;)

[17:12] <b_jonas> so that means it would clash only if there was a postfix:<$> or postcircumfix:<$>

[17:12] <moritz_> aye

[17:12] <b_jonas> but a dot is not allowed before infixes, right?

[17:13] <moritz_> (a postcircumfix needs two delimiters, though)

[17:13] <moritz_> right

[17:13] <b_jonas> so I can say 1 + 2, can say 1.<+>(2), but can't say 1.+ 2

[17:13] <b_jonas> no wait, it's 1.:<+>(2)

[17:13] <b_jonas> according to S12

[17:13] <moritz_> I thought it was infix:<+>(1, 2)

[17:14] <b_jonas> I think both

[17:14] <moritz_> and you can say 1.+2, but that's parsed as (1.) + 2 ;-)

[17:14] <b_jonas> or either

[17:14] <b_jonas> ah yeah, 

[17:14] <b_jonas> unlike in octave where 1.+2 is parsed as 1 .+ 2

[17:14] <b_jonas> because there's a .+ operator

[17:15] <pmichaud> there a .+ operator in Perl 6, also.

[17:15] <b_jonas> but normally 1. is parsed as 1

[17:15] *** alester_ joined
[17:15] <pmichaud> 1. isn't valid Perl 6

[17:15] <b_jonas> pmichaud: is there? what kind of operator?

[17:15] *** alester left
[17:15] <pmichaud> it has to be 1.0

[17:15] <b_jonas> pmichaud: it's not?

[17:15] <b_jonas> hmm

[17:15] <pmichaud> (i.e., a decimal point has to be followed by a digit)

[17:15] <b_jonas> that's good actually

[17:15] <pmichaud> .+ is a different operator

[17:15] <SamB> yeah, it's silly to parse 1. as floating-point

[17:16] <moritz_> btw the .:<+>  would be *very* weird syntax for ops with right associativity

[17:16] <b_jonas> what does .+ do?

[17:16] <b_jonas> ah, I see

[17:16] <b_jonas> method call variant

[17:16] <pmichaud>     $object.+meth(@args)  # calls all methods (1 or more)

[17:16] <pmichaud> (S12)

[17:17] <b_jonas> moritz_: S12 specifically says     $a.:<+>($b)           # equivalent to $a + $b

[17:17] <b_jonas> you need the paren or a colon I think

[17:17] <pmichaud> need the colon.

[17:17] <moritz_> b_jonas: it does, but it *is* weird IMHO

[17:18] *** alanhaggai_ joined
[17:18] <b_jonas> I see

[17:20] <moritz_> while Perl 6 is very cool and well thought through in most areas, I sometimes find things where I disagree with @Larry

[17:20] <b_jonas> inevitable

[17:20] <moritz_> but I guess that's unavoidable, and even if I designed a language myself, I'd find those corners

[17:20] <moritz_> (probably much more often, really)

[17:21] <pmichaud> I think there are even places where @Larry disagrees with @Larry.  :-)  I _know_ there are places where I disagree with myself about things I've designed and implemented :-)

[17:22] *** polettix left
[17:23] <b_jonas> you mean, places where any(@Larry) disagrees with any(@Larry)?

[17:23] <b_jonas> luckily such a disagreement is usually not a big problem yet while the S can be changed

[17:24] <b_jonas> they did change a few times already

[17:24] <b_jonas> let's change the string concat operator to | by the way

[17:24] <b_jonas> is there a | infix yet?

[17:24] <b_jonas> oh yeah there is

[17:24] <Auzon> yes

[17:24] <moritz_> I'm quite sure there is ;)

[17:24] <Auzon> Junctions

[17:24] <b_jonas> yep

[17:24] <b_jonas> any

[17:25] <b_jonas> well, I don't like how they have such short names anyway

[17:26] <b_jonas> is there some simple syntax that's not used up yet by the way?

[17:26] <moritz_> yes, lots of non-ASCII operators ;)

[17:26] <pmichaud> the ` character isn't used

[17:26] <b_jonas> I said simple

[17:26] <b_jonas> oh, very good

[17:26] <moritz_> but that's intentional

[17:26] <Auzon> pmichaud: ` is semi-reserved for user stuff due to visibility

[17:26] <pmichaud> Auzon: right.  So it's not "used" by Perl 6 :-)

[17:26] <b_jonas> I was thinking of using ` for method calls next time I design an oo language

[17:27] <Auzon> @ infix isn't used to my knowledge.

[17:27] <b_jonas> and symbol literals (as a prefix), and structure element access (doubled) and stuff like that

[17:27] <b_jonas> Auzon: hmm

[17:27] <b_jonas> that ` is reserved is also good for meta-perl6 talks

[17:28] <b_jonas> that is, you could eg. surround p6 code with `...`

[17:28] <b_jonas> or stuff like that

[17:28] <b_jonas> when you talk about perl6 syntax

[17:28] <pmichaud> oh, we already have ... for that :-)

[17:28] <b_jonas> but ... has a meaning, doesn't it?

[17:28] <b_jonas> it dies

[17:28] <b_jonas> it means unimplemented

[17:28] <pmichaud> isn't that what `...` would mean?  ;-)

[17:29] *** icwiener left
[17:29] <b_jonas> and it's documented as a standard way to declare a sub without defining it

[17:29] <b_jonas> using ... is annoying for that reason

[17:29] *** icwiener joined
[17:29] <b_jonas> you can't dotdotdot out code

[17:29] <pmichaud> the synopses are full of examples where "..." is used to mean "other stuff goes here"

[17:30] <b_jonas> that you don't show

[17:30] <b_jonas> exactly

[17:30] <b_jonas> btw, there's a similar problem with J

[17:30] <pmichaud> could always use ???, then :-)

[17:30] *** alanhaggai left
[17:30] <b_jonas> meh, ??? is an operator already, isn't it?

[17:30] <pmichaud> right, it calls warn

[17:31] <b_jonas> there is no easy syntax reserved for meta-J talk

[17:31] <b_jonas> I ended up taking the habit of putting J code in round parenthesis

[17:31] <b_jonas> they're used as grouping parenthesis in J but they're at least usually balanced in one-liners

[17:32] <moritz_> <meta_J_talk>...</meta_J_talk> # a bit verbose, though :)

[17:32] <b_jonas> yep

[17:33] <b_jonas> and it's actually <J_code>...</J_code> because you want to surround the J code in meta-J context

[17:34] <b_jonas> you could use ). if you wanted a two-character delimiter that's absolutely not used anything in J yet

[17:34] <b_jonas> s/used/used for/

[17:34] <b_jonas> or `.

[17:39] *** nothingmuch joined
[17:39] *** tuxdna left
[17:41] *** ruoso left
[17:41] *** hercynium joined
[17:43] *** chris2 left
[17:48] *** alester_ left
[17:50] *** kattana_ joined
[17:54] *** Kattana left
[18:11] *** kattana_ is now known as Kattana

[18:14] *** meppl left
[18:14] *** riffraff left
[18:27] *** Psyche^ joined
[18:35] <rakudo_svn> r28829 | pmichaud++ | [rakudo]:

[18:35] <rakudo_svn> r28829 | pmichaud++ | * Need to avoid tailcalls in cmp and leg due to RT#56448.

[18:36] <rakudo_svn> r28830 | pmichaud++ | [rakudo]:

[18:36] <rakudo_svn> r28830 | pmichaud++ | * More fixes to list context, move 'join' and 'sort' into Any class.

[18:36] <rakudo_svn> r28830 | pmichaud++ | * All spectest_regression tests pass again.

[18:39] *** _ggoebel_ joined
[18:39] <pugs_svnbot> r21109 | pmichaud++ | S29-list/join.t:  unskip two more tests for rakudo.

[18:43] *** Patterner left
[18:43] *** Psyche^ is now known as Patterner

[18:56] *** cggoebel left
[19:08] *** wknight8111 left
[19:10] *** apeiron_ joined
[19:14] *** broquaint left
[19:16] *** kattana_ joined
[19:26] *** apeiron left
[19:27] *** cmarcelo joined
[19:32] *** Kattana left
[19:36] *** kane_ left
[19:52] *** pmurias joined
[19:52] <pmurias> pixie: say 4;

[19:52] <p6eval> pixie: OUTPUT[fatal error: ############# PARSE FAILED #############␤----> <<<HERE>>>say 4;␤Can't understand next input--giving up at line 1␤]

[19:56] <pmurias> pixie: say 4

[19:56] <p6eval> pixie: OUTPUT[fatal error: ############# PARSE FAILED #############␤----> <<<HERE>>>say 4␤Can't understand next input--giving up at line 1␤]

[19:56] <pmurias> moritz_: it's an evalbot problem

[19:58] *** iblechbot left
[20:00] <pugs_svnbot> r21110 | pmurias++ | [pixie]

[20:00] <pugs_svnbot> r21110 | pmurias++ | moving towards passing 01-sanity/02-counter.t ;)

[20:01] *** peepsalot joined
[20:03] *** awwaiid left
[20:03] *** awwaiid joined
[20:32] *** cmarcelo left
[20:39] *** pmurias_ joined
[20:40] <pmurias_> @tell mncharity run-tests hides some failures in sanity at least 01-sanity/02-counter.t

[20:45] *** araujo joined
[21:02] *** masak left
[21:05] *** pmurias left
[21:05] *** pmurias_ left
[21:06] *** jfredett_ joined
[21:06] *** rindolf joined
[21:06] *** rindolf left
[21:10] *** jjore left
[21:10] *** jjore joined
[21:16] <pugs_svnbot> r21111 | pmichaud++ | S04-statements/no-implict-block.t:  Update rakudo skip message.

[21:16] <pugs_svnbot> r21112 | pmichaud++ | Fix naming of "no-implicit-block.t"

[21:16] <rakudo_svn> r28833 | pmichaud++ | [rakudo]:

[21:16] <rakudo_svn> r28833 | pmichaud++ | * Update name of S04-statements/no-implicit-block.t

[21:17] * moritz_ -- # typos in file names

[21:21] <moritz_> http://nopaste.snit.ch/13424

[21:21] <moritz_> @tell pmurias http://nopaste.snit.ch/13424

[21:21] <moritz_> ENOLAMBDABOT

[21:22] *** jfredett left
[21:23] *** iblechbot joined
[21:29] *** jfredett_ is now known as jfredett

[21:34] <pugs_svnbot> r21113 | moritz++ | [spec] S29-list/join.t: backed tests withe quotes from TimToady, since I

[21:34] <pugs_svnbot> r21113 | moritz++ | haven't got around fixing the specs (and nobody else had in the mean time)

[21:35] *** cggoebel joined
[21:51] *** _ggoebel_ left
[21:53] *** peepsalot left
[22:01] *** icwiener_ joined
[22:05] *** jferrero joined
[22:07] *** xinming left
[22:17] *** icwiener left
[22:17] *** pbuetow left
[22:19] *** meppl joined
[22:25] *** iblechbot left
[22:31] *** ruoso joined
[22:35] *** b_jonas left
[22:39] *** justatheory joined
[22:55] *** xinming joined
[23:00] *** kattana_ left
[23:03] *** justatheory left
[23:04] *** Kattana joined
[23:14] *** apeiron_ is now known as apeiron

[23:17] *** Alias_ left
[23:24] *** wknight8111 joined
[23:28] *** ruoso left
[23:37] *** Psyche^ joined
[23:53] *** icwiener_ left
[23:55] *** Patterner left
[23:55] *** Psyche^ is now known as Patterner

