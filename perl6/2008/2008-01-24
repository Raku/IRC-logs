[00:04] *** icwiener_ joined
[00:04] *** sri_work left
[00:14] *** BinGOs left
[00:14] *** BinGOs joined
[00:18] *** icwiener left
[00:18] <Caelum> I'm getting this trying to compile pugs: RRegex.hs:44:7: Could not find module `Data.Array':

[00:21] *** polettix left
[00:22] *** BinGOs_ joined
[00:26] *** BinGOs left
[00:31] *** riffraff left
[00:42] <mncharity> Caelum: using a nice old ghc 6.6.1?

[00:42] *** BinGOs_ left
[00:42] * mncharity wishes ruby had smalltalk's becomes() :/

[00:43] <Caelum> mncharity: 6.8.2, the one on Debian :)

[00:47] *** BinGOs_ joined
[00:49] *** Daveman joined
[00:50] <mncharity> Caelum: my fuzzy understanding is pugs has regrettably not yet been ported to 6.8.

[00:50] <Caelum> ahh

[00:50] <mncharity> I believe 6.6.1 works.

[00:50] <Caelum> seems weird that a compiler would break backward compatibility

[00:51] <mncharity> i believe that has been the repeated experience across several ghc revs.

[00:56] *** chris2 left
[00:56] *** BinGOs_ left
[01:01] *** cnhackTNT joined
[01:07] *** njbartlett left
[01:07] *** devogon left
[01:07] *** pflanze left
[01:07] *** stevan_ left
[01:08] *** revdiablo joined
[01:08] *** LCamel joined
[01:08] *** devogon joined
[01:09] *** sunnavy joined
[01:10] <pugs_svn> r19650 | putter++ | [kp6] ruby backend: work around ruby sensitivity to comma position; additional infix ops; package variables; binding of same.

[01:10] *** LimbicRegion joined
[01:12] *** njbartlett joined
[01:13] *** alc joined
[01:14] <mncharity> apropos previous conversation re binding, things ended up more complex.  while getting s_x will check for lexical variables, and then object methods (used for package variables), setting s_x = 3 will create a lexical if one doesn't already exist, period.  so $x := 3 is now something like  if not defined? x or defined? x == "local-variable"; s_x = 3; else; self.s_x = 3; end.

[01:14] <mncharity> and yes, I suppose a container needs to created there so its more like ...s_x = Scalar.new(3) .

[01:15] <mncharity> ...s_x = 3.containerize    :)

[01:16] <mncharity> the  not defined? x  may be excess, only true if there's been a compiler error.

[01:16] *** casper__ joined
[01:17] *** icwiener_ left
[01:18] <mncharity> anyway, perl script/kp6 -Bruby -e 'sub f($n){if $n == 0 {0} else {if $n == 1 {1} else {f($n-1)+f($n-2)}}}; say f(10)'  now works.  also with my sub f.

[01:19] <mncharity> note the ; before say.  without it, you get two separate compilation units.

[01:19] *** lyokato_ joined
[01:19] *** c9s joined
[01:20] <mncharity> and binding a lhs other than a single variable isn't implemented as yet.

[01:20] *** thepler joined
[01:21] *** pflanze joined
[01:21] *** apple-gunkies joined
[01:25] *** silug joined
[01:27] *** Limbic_Region left
[01:27] *** LimbicRegion is now known as Limbic_Region

[01:27] *** spinclad joined
[01:36] *** devogon left
[01:38] *** atobey left
[01:41] <pugs_svn> r19651 | putter++ | [kp6] ruby backend: sync doc.  Non-container bindees are now given containers.

[01:41] <pugs_svn> r19651 | putter++ | As container ro/rw isn't implemented, my $x := 3; $x = 4; regrettably works.

[01:44] *** Khisanth joined
[01:46] <mncharity> btw, if anyone wants a separable kp6 project, you might take a look at BEGIN (and macros).  currently, kp6 tries to use the same emitter for BEGIN and other ast nodes.  so BEGIN's emit_ruby hands over some ruby code, which kp6 then tries to eval() as p5.  instead, it should ideally ask an emitter appropriate to the backend being used at compile-time.

[01:47] *** ludan left
[01:47] <mncharity> or perhaps the Emit/Ruby.pm ast note for BEGIN should be kludged to call emit_perl, and worry about the rest at bootstrap time.

[01:52] *** SamB joined
[02:09] *** jeffreykegler joined
[02:12] *** jjore left
[02:13] <pugs_svn> r19652 | lwall++ | [kv.t] Fixed test count, which was only off by two orders of magnitude...

[02:20] *** [particle] left
[02:21] *** jeffreykegler left
[02:47] *** [particle] joined
[02:53] *** cognominal_ left
[03:07] *** cxreg joined
[03:08] <cxreg> fyi, pugscode.org download link is pointing to a non-working rakudo.org url (redirected here from #parrot)

[03:09] *** Schwern left
[03:10] *** _sprocket_ joined
[03:14] *** Lorn joined
[03:16] *** kanru left
[03:22] <mncharity> cxreg: thanks.  :)  things have gotten a bit crufty.

[03:59] *** Limbic_Region left
[04:04] *** jjore joined
[04:10] *** kyrbe joined
[04:14] *** penk joined
[04:27] *** IRSeekBot joined
[04:34] *** lyokato_ left
[04:40] *** lyokato_ joined
[05:02] *** _sprocket_ left
[05:02] *** Lorn left
[05:23] *** DarkWolf84 left
[05:35] *** nothingmuch left
[05:45] *** Kattana joined
[06:26] *** devogon joined
[06:38] <pugs_svn> r19653 | putter++ | [kp6] ruby backend: a first rough cut at class variables and methods.

[06:38] *** mncharity left
[07:19] *** jjore left
[07:20] *** BinGOs joined
[07:30] *** meppuru joined
[07:45] *** marmic joined
[07:46] *** mattz joined
[07:47] *** zf8 joined
[07:52] *** Aankhen`` joined
[07:55] *** kane_ joined
[07:58] *** AtomicStack joined
[08:00] *** avar joined
[08:07] <moritz_> Caelum: there is pugs-ghc681.diff which have to apply to compile pugs with ghc 6.8.1

[08:14] <pugs_svn> r19654 | moritz++ | [pugscode.org] added a working download link, cxreg++

[08:16] *** zf8 left
[08:17] *** mattz left
[08:23] *** AtomicStack left
[08:29] *** Lunchy left
[08:35] *** mattz joined
[08:36] *** iblechbot joined
[08:40] *** zf8 joined
[08:45] *** Lunchy joined
[08:45] *** gugod_ joined
[08:46] <pugs_svn> r19655 | pmurias++ | fixed accidential modification of run_tests.pl

[08:57] *** gugod left
[08:57] *** njbartlett left
[09:13] *** gugod_ is now known as gugod

[09:20] *** zamolxes left
[09:30] *** Aankh|Clone joined
[09:33] *** Aankhen`` left
[09:33] *** devogon left
[09:33] *** penk left
[09:33] *** [particle] left
[09:33] *** cnhackTNT left
[09:33] *** xinming left
[09:33] *** f0rth_ left
[09:33] *** dalek left
[09:34] *** Aankhen`` joined
[09:34] *** devogon joined
[09:34] *** penk joined
[09:34] *** [particle] joined
[09:34] *** cnhackTNT joined
[09:34] *** xinming joined
[09:34] *** f0rth_ joined
[09:34] *** dalek joined
[09:34] *** araujo joined
[09:34] *** SCalimlim joined
[09:34] *** simcop2387 joined
[09:34] *** Maddingue joined
[09:34] *** ead joined
[09:34] *** kcwu joined
[09:34] *** cognominal joined
[09:34] *** arguile joined
[09:34] *** wolverian joined
[09:34] *** Eidolos joined
[09:34] *** xinming left
[09:34] *** xinming joined
[09:45] *** pflanze left
[09:48] *** Aankhen`` left
[09:52] *** masak joined
[09:56] *** icwiener joined
[10:04] *** cnhackTNT left
[10:13] *** Aankh|Clone is now known as Aankhen``

[10:14] *** lyokato_ left
[10:20] *** Aankhen`` left
[10:20] *** Aankhen`` joined
[10:23] *** clkao joined
[10:23] *** falesca joined
[10:32] *** orafu joined
[10:34] *** lyokato_ joined
[10:37] *** ead left
[10:41] *** ead joined
[10:42] *** falesca left
[10:42] *** Aankhen`` left
[10:42] *** zf8 left
[10:42] *** iblechbot left
[10:42] *** marmic left
[10:42] *** kyrbe left
[10:42] *** apple-gunkies left
[10:42] *** c9s left
[10:42] *** qmole left
[10:42] *** alester left
[10:42] *** braceta left
[10:42] *** pbuetow left
[10:42] *** masak left
[10:42] *** xinming left
[10:42] *** mattz left
[10:42] *** Lunchy left
[10:43] *** Lunchy joined
[10:44] *** masak joined
[10:44] *** xinming joined
[10:44] *** mattz joined
[10:44] *** shachaf joined
[10:44] *** japhb joined
[10:44] *** yahooooo joined
[10:44] *** tcliou joined
[10:44] *** falesca joined
[10:44] *** Aankhen`` joined
[10:44] *** zf8 joined
[10:44] *** iblechbot joined
[10:44] *** marmic joined
[10:44] *** kyrbe joined
[10:44] *** apple-gunkies joined
[10:44] *** c9s joined
[10:44] *** qmole joined
[10:44] *** alester joined
[10:44] *** braceta joined
[10:44] *** pbuetow joined
[10:44] *** djm joined
[10:44] *** awwaiid joined
[10:44] *** jiing joined
[10:44] *** bphillip1 joined
[10:44] *** charsbar joined
[10:44] *** broquaint joined
[10:44] *** bloonix joined
[10:44] *** allbery_b joined
[10:44] *** nnunley joined
[10:44] *** GeJ joined
[10:44] *** awwaiid left
[10:44] *** awwaiid joined
[10:44] *** aindilis left
[10:45] *** aindilis joined
[10:45] *** buubot joined
[10:46] *** Lunchy left
[10:50] <pugs_svn> r19656 | ruoso++ | [smop] when implementing SMOP__SLIME__Frame I realise that it is even simpler than I first had thought. see http://www.perlfoundation.org/perl6/index.cgi?default_smop_interpreter_implementation for the new layout

[10:50] <lambdabot> Title: Default SMOP Interpreter Implementation / Perl 6, http://tinyurl.com/3328jg

[10:51] *** cognominal_ joined
[10:52] *** funktio left
[10:52] *** obra left
[10:54] *** Lunchy joined
[10:54] *** ebassi joined
[10:57] *** alc left
[10:58] *** allbery_b left
[11:00] *** allbery_b joined
[11:03] *** funktio joined
[11:04] *** obra joined
[11:11] *** polettix joined
[11:13] *** charsbar_ joined
[11:13] *** charsbar left
[11:15] *** iblechbot left
[11:40] *** lyokato_ left
[11:47] *** yves left
[11:49] *** mj41 left
[11:50] *** mattz left
[11:51] *** mattz joined
[11:53] *** njbartlett joined
[11:56] *** meppuru left
[11:57] *** avar left
[12:02] *** AtomicStack joined
[12:03] *** avar joined
[12:04] *** AtomicStack left
[12:07] *** lambdabot left
[12:07] *** jeffreykegler joined
[12:12] *** kanru joined
[12:12] *** lichtkind joined
[12:16] *** jferrero joined
[12:31] *** sri_work joined
[12:34] <pugs_svn> r19657 | ruoso++ | [smop] new C call SMOP__NATIVE__capture_delegate can be used to create a cloned capture with a new invocant. SMOP__SLIME__CurrentFrame is a proxy responder interface that delegates all calls to the currently active frame in the interpreter using the capture_delegate call.

[12:40] *** AtomicStack joined
[12:46] *** casper__ is now known as Casan

[12:57] <pugs_svn> r19658 | ruoso++ | [smop] move_capturize implemented in SMOP__SLIME__Frame...

[12:58] *** njbartlett left
[13:02] *** ispy_ joined
[13:02] *** jferrero left
[13:03] *** ispy_ left
[13:05] *** cmarcelo joined
[13:17] *** macae joined
[13:17] *** iblechbot joined
[13:26] *** yves joined
[13:28] *** njbartlett joined
[13:47] *** kyrbe left
[13:53] *** jeffreykegler left
[14:03] *** njbartlett left
[14:04] *** sri_work_ joined
[14:06] *** _sprocket_ joined
[14:07] *** _sprocket_ left
[14:07] *** _sprocket_ joined
[14:07] *** _sprocket_ left
[14:07] *** AtomicStack left
[14:07] *** jhorwitz joined
[14:11] *** cognominal_ left
[14:13] *** zf8 left
[14:14] *** sri_work left
[14:14] *** braceta left
[14:15] *** gbacon left
[14:17] *** AtomicStack joined
[14:17] *** nothingmuch joined
[14:17] *** gbacon joined
[14:36] *** AtomicStack left
[14:48] *** IllvilJa left
[14:48] *** lichtkind left
[14:53] *** tuxdna joined
[14:54] <pugs_svn> r19659 | ruoso++ | [smop] SMOP__SLIME__Frame.goto($count)

[14:56] *** njbartlett joined
[14:56] *** polettix left
[14:57] *** Lorn joined
[14:59] *** Lorn left
[15:02] <pugs_svn> r19660 | ruoso++ | [smop] SMOP__SLIME__CurrentFrame implemented.

[15:06] *** sri_work_ is now known as sri_work

[15:06] *** tuxdna left
[15:08] *** IllvilJa joined
[15:14] <pugs_svn> r19661 | ruoso++ | [smop] SMOP__NATIVE__int basics implemented.

[15:38] *** kanru left
[15:42] *** manfred joined
[15:48] <pugs_svn> r19662 | ruoso++ | [smop] SMOP__SLIME__Node implemented.

[15:49] *** [particle1 joined
[15:58] *** kanru joined
[15:59] *** pmurias joined
[16:01] *** pmurias left
[16:06] *** [particle] left
[16:07] *** [particle] joined
[16:14] *** wknight8111 joined
[16:15] *** [particle] left
[16:16] *** [particle] joined
[16:16] *** barney joined
[16:16] *** njbartlett left
[16:17] *** njbartlett joined
[16:24] *** [particle1 left
[16:25] *** [particle1 joined
[16:29] *** [particle2 joined
[16:29] *** polettix joined
[16:36] *** polettix left
[16:37] *** polettix joined
[16:41] *** kyrbe joined
[16:41] *** kyrbe left
[16:42] *** [particle] left
[16:44] *** chris2 joined
[16:47] *** [particle1 left
[16:53] *** polettix left
[16:54] *** polettix joined
[16:57] *** pmurias joined
[16:59] <pmurias> ruoso: i looked into the new layout, it's much easier to understand

[17:00] <pmurias> will the nodes have to be rw

[17:00] <pmurias> ?

[17:03] *** blindfish joined
[17:05] <ruoso> pmichaud, in SLIME, yes...

[17:05] <pugs_svn> r19663 | ruoso++ | [smop] SMOP__SLIME__Capturize code written

[17:06] <ruoso> pmurias, ^

[17:06] <ruoso> pmichaud, oops

[17:06] <pmichaud> np :-)

[17:06] <ruoso> pmurias, but the idea is that any other implementation may replace SLIME at any time :)

[17:06] <ruoso> slime is just the lame default implementation

[17:09] <pmurias> ruoso: i wandered if having explicit register would be better then mixing data with the code

[17:10] <ruoso> pmurias, it probably is... but I wanted to have the simplest possible implementation up...

[17:10] *** TJCRI joined
[17:10] *** dronevil joined
[17:10] <ruoso> and that's the point on it being completely pluggable

[17:11] <ruoso> so I can replace it with a more serious implementation in the future

[17:13] <pmurias> would it be theoreticly possible to have a stackfull implementation too?

[17:13] <ruoso> in theory yes... 

[17:14] <ruoso> but I trully believe that a intepreter is better as stackless

[17:20] *** mofino joined
[17:21] <mofino> IS IT DONE YET?

[17:21] <mofino> *channel lynch*

[17:21] <mofino> :)

[17:27] <[particle2> wanna help?

[17:27] *** [particle2 is now known as [particle]

[17:27] <mofino> I wish

[17:27] <mofino> I'm too useless to help

[17:27] <[particle]> i can give you a commit bit

[17:27] <[particle]> there's plenty of useless things to do :)

[17:27] <mofino> do you guys need a hand warmer?

[17:28] <mofino> I'm good at that

[17:28] <[particle]> you can read the spec, and make sure the tests look good

[17:28] <[particle]> or write new tests... or ask questions about stuff you've read

[17:29] <mofino> Hmm

[17:29] <mofino> I guess that's a good idea anyway

[17:29] <[particle]> :)

[17:29] <mofino> regardless of uselessness

[17:29] <[particle]> if you msg me your email addr and preferred username, i'll give you a pugs commit bit

[17:29] <mofino> !

[17:30] <mofino> Slow down, I only started out as a troll

[17:30] <mofino> we just met!

[17:30] <[particle]> yep, it's that easy to get involved. we even accept trolls

[17:30] <mofino> I would like to go out for dinner first, at least.

[17:30] *** meppuru joined
[17:31] * [particle] orders dinner for the channel

[17:34] <[particle]> well, if you want to get involved, we'd love the help

[17:34] <mofino> Honestly if I was reliable, I would

[17:35] <mofino> instead I sit in the peanut gallery and shout obsceneties

[17:35] <Tene> They even let me in!

[17:35] <mofino> I will however take your advice and start reading

[17:36] <[particle]> excellent! there's a lot to read.

[17:36] <pugs_svn> r19664 | ruoso++ | [smop] SMOP__INTPTR__InterpreterInstance written...

[17:36] <mofino> man, I'm so excited for perl6

[17:36] <[particle]> so is everyone else in the channel. you've come to the right place :)

[17:37] <mofino> it's going to be so very awesome

[17:37] <[particle]> rakudo: say "perl 6 rocks"

[17:37] <exp_evalbot> OUTPUT[perl 6 rocks␤]

[17:38] <mofino> CANT WAIT

[17:38] <mofino> RELEASE TODAY!

[17:38] * mofino explodes

[17:38] <pugs_svn> r19665 | ruoso++ | [smop] As the first draft code of the lowlevel interpreter instance, marking version 0.1.2

[17:38] <[particle]> pugs:  "i can't wait".say

[17:38] <exp_evalbot> OUTPUT[i can't wait␤]

[17:38] <mofino> stop getting me all excited!

[17:38] <ruoso> cool... next thing in my ROADMAP is the sm0p preprocessor

[17:44] *** zf8 joined
[17:45] *** zf8 left
[17:49] <pmurias> ruoso: regarding help with the preprocessor,is there anything you want to know or do not know how to do?

[17:50] <ruoso> I still don't know exactly how to integrate the preprocessor in the build process

[17:50] <ruoso> as to be called before cpp

[17:50] *** masak left
[17:50] <[particle]> "build process" == makefile?

[17:52] <[particle]> .smop.cpp : \n \s+ <preprocessor_name> $< $@

[17:52] <[particle]> where .smop is the input file extension, and .cpp is the output extension

[17:52] <[particle]> and where $< is the input file, and @ is the output file

[17:53] <[particle]> $@

[17:53] <pmurias> [particle]: it's \t instead of \s

[17:53] <[particle]> ah, yeah, right.

[17:53] <ruoso> [particle], "build process" == autoconf/automake

[17:54] <[particle]> ah, i don't know autotools, they're not windows-friendly

[17:54] <ruoso> hm...

[17:54] <ruoso> but anyway... I wanted to avoid having to create a different file

[17:55] <ruoso> and just have gcc calling it, as it calls cpp..

[17:55] <pmurias> windows is not pmurias-friendly

[17:55] <ruoso> ruoso is not windows-friendly ;P

[17:56] <pugs_svn> r19666 | ruoso++ | [smop] updating Makefile.am to include the new files.

[17:57] <ruoso> pmurias, but I'm also a little distant from KP6 lately... It would be nice if someone closer could write the emitter...

[18:00] *** rdice joined
[18:06] <pmurias> ruoso: i could work on it in a bit more than 3 weeks time

[18:07] <ruoso> pmurias, hmmm... ok... let's hope fglock has some time before that...

[18:07] <pmurias> kp6 is not that hard

[18:07] <pmurias> ;)

[18:08] <pmurias> swimming&

[18:08] *** pmurias left
[18:08] *** boobot joined
[18:09] *** rindolf joined
[18:10] *** boobot left
[18:10] *** boobot joined
[18:11] <simcop2387> i should take him out of here

[18:14] *** boobot left
[18:14] *** simcop2387 left
[18:14] *** simcop2387 joined
[18:17] *** polettix left
[18:35] <ruoso> error: pointers are not permitted as case values

[18:35] <ruoso> gahhhhhhh

[18:35] <ruoso> sometimes I forget how C is stupid..

[18:36] *** ebassi left
[18:40] *** manfred left
[18:42] <integral> can't you cast them to a numeric type?

[18:43] <ruoso> case (int)SMOP__ID__foo: ?

[18:44] <ruoso>  error: case label does not reduce to an integer constant

[18:44] <ruoso> no... it's really stupid...

[18:45] <TimToady> it's gonna turn into cascaded ifs anyway so you might as well write it that way

[18:45] *** barney left
[18:46] <ruoso> yeah... I was hoping not having to write dumb cascade ifs... :P

[18:48] <TimToady> that's what macros are for :)

[18:52] <ruoso> hmmm... 

[18:52] *** mncharity joined
[18:53] * ruoso wondering if given/when can be written as a macro to create cascaded ifs...

[18:54] *** TJCRI left
[19:05] *** mj41 joined
[19:07] *** mj41 left
[19:07] *** mj41 joined
[19:08] *** mj41 left
[19:09] *** mj41 joined
[19:13] *** dronevil left
[19:13] *** mj41 left
[19:13] *** mj41 joined
[19:17] *** lambdabot joined
[19:20] <spinclad> #define GIVEN(x) dollar_ = (x);

[19:20] <spinclad> #define WHEN(y) if ((x) == (y)) {

[19:21] <spinclad> #define ENDWHEN }

[19:21] <spinclad> that ENDWHEN is UGLY tho

[19:22] <spinclad> oop, #define WHEN(y) if (dollar_ == (y)) {

[19:22] <spinclad> and you have to choose a type for dollar_

[19:22] <moritz_> actually it's if(smartmatch(dollar_), (y))

[19:23] <spinclad> if(smartmatch(dollar_, (y)))

[19:23] <spinclad> right

[19:24] *** TJCRI joined
[19:26] <spinclad> better, leave the braces out of the macros: use as  WHEN(yy1) { ... } \n WHEN(yy2) { ... }

[19:31] <spinclad> no elses here, though; as long as your C<y>s exclude each other it should work

[19:32] <TimToady> alternately, if you want exclusive, define WHEN to start out with "else if"

[19:33] <TimToady> then dummy up the first "if (0) {}"

[19:39] *** Lorn joined
[19:43] *** macae left
[19:46] *** Limbic_Region joined
[19:48] *** pmurias joined
[19:50] *** jferrero joined
[19:51] *** cosimo_ joined
[19:56] <pugs_svn> r19667 | ruoso++ | [smop] Major code review... We already support the sm0p preprocessor... the file just need to be named .sm0p and then automake executes sm0p.pl to transform... For now sm0p.pl is just taking out the sm0p code as I can check if everything compiles... smop itself compiles fine...

[19:56] <pugs_svn> ..some tests still do not compile

[19:58] <ruoso> home &

[19:58] <moritz_> ruoso++ # hacking smop, verbose commit messages

[19:58] <ruoso> :)

[19:59] <ruoso> if anyone wants to make the rest of the tests to compile, I'd be very much happy... ;)

[19:59] *** lichtkind joined
[19:59] <cosimo_> you mean tests in t/spec?

[20:00] <TimToady> :)

[20:00] <ruoso> cosimo_, not yet :P... still in smop/test/

[20:00] <TimToady> cosimo_: did you notice I made the colon optional on #? lines?

[20:01] <ruoso> really home &

[20:02] <cosimo_> TimToady: no, but now I'm 'svn update'-ing. I will check existing tests.

[20:02] <cosimo_> and t/spec/README I guess

[20:03] <TimToady> the other new thing is #?DOES

[20:03] <cosimo_> ok, looked up ?DOES in the readme. Thanks

[20:03] <TimToady> which currently allows digits but I'm thinking of allowing expressions so you can use it inside a parameterized sub

[20:04] <TimToady> since it just gets shoved in as the arg to skip()

[20:05] <TimToady> the funnest fix was to change "plan 2732" to "plan 27", which removed a *lot* of red from the smoke page :)

[20:06] <TimToady> but, alas, reduced the total test count to back below 20,000

[20:06] <moritz_> ;)

[20:12] <cosimo_> I wasn't able to do much during last week. I moved to another apartment... :-)

[20:13] <cosimo_> TimToady: did you see my msg on p6l about uniq and stuff?

[20:17] *** rindolf left
[20:20] *** icwiener left
[20:21] <pugs_svn> r19668 | putter++ | [kp6] v6-KindaPerl6/script/run_tests.pl: svn propset svn:executable true run_tests.pl

[20:25] *** Ast joined
[20:25] *** ludan joined
[20:26] <ludan> hi

[20:26] <TimToady> cosimo_: I answered it on the list

[20:27] <TimToady> ludan: howdy

[20:27] <pmurias> mncharity: sorry for breaking run_tests.pl

[20:27] <ludan> TimToady: howdy :)

[20:31] <pmurias> mncharity: re the BEGIN problem method names in are conflicting with the ones in Perl5 (Perl5 is emiting mixed ruby/perl5 code as a result)

[20:31] *** zf8 joined
[20:31] <pmurias> emit_body needs to be emit_ruby_body or similar

[20:31] *** blindfish left
[20:32] *** zf8 left
[20:36] <pugs_svn> r19669 | putter++ | [kp6] ruby backend: +fixes. +more runtime.  a few more tests pass.

[20:37] <mncharity> pmurias: re run_tests, no problem.  :)  find t/kp6|perl -ne '...system...'  is always available.

[20:37] *** atobey joined
[20:38] <mncharity> pmurias: re BEGIN, oh, drat.  I'm sorry about that.  I'll go through and rename myself clear.

[20:40] <cosimo_> TimToady: I read now your mails on google groups... I have probably messed up my perl6 mail folder :-􏿽xA7

[20:41] <pmurias> mncharity: made the same mistake, fglock++ found it for me

[20:41] <pmurias> with perl5v6

[20:41] *** IRSeekBot left
[20:42] <cosimo_> TimToady: thanks for pointing out "doubt" vs "question". I had no doubt about that. :-) But I was wrong

[20:42] *** Ast left
[20:43] <mncharity> pmurias: I wonder if the Emit/Perl5 code should be modified, s/emit_(?!perl5)/emit_perl5/g ?

[20:43] *** Daveman left
[20:45] <mncharity> perl -ne 'print if /emit_(?!perl5)/' src/KindaPerl6/Visitor/Emit/Perl5.pm

[20:45] *** IRSeekBot joined
[20:46] <pmurias> mncharity: yes

[20:47] <pmurias> mncharity: will you do it or shall i?

[20:58] <pmurias> (doing it)

[21:01] <pugs_svn> r19670 | putter++ | [kp6] ruby backend: +fixed a regression. +renamed some emit methods to avoid collisions with the perl5 emitter.  t/kp6 BEGIN tests now pass.  pmurias++/fglock++

[21:01] <mncharity> pmurias: oh, thanks :)

[21:13] <pugs_svn> r19671 | pmurias++ | [kp6]

[21:13] <pugs_svn> r19671 | pmurias++ | added a perl5_ to methods in order to avoid conflicts with other backends

[21:13] <pugs_svn> r19671 | pmurias++ | s/emit_(?!perl5)/emit_perl5_$1/g

[21:21] *** riffraff joined
[21:21] *** thoughtpolice joined
[21:23] *** Aankhen`` left
[21:23] <riffraff> hi

[21:25] <mncharity> pmurias: (?!perl5) is actually a zero-length lookahead assertion ;0

[21:25] <mncharity> err, ;)

[21:26] *** Lorn left
[21:27] <mncharity> pmurias: thanks for getting BEGIN to work.  the test failures were worrying.

[21:27] <pmurias> mncharity: yess...

[21:27] <pmurias> but it work anyway ;)

[21:31] <mncharity> :)

[21:33] * mncharity tries to remember what  use lib ".";  means...

[21:34] <TimToady> puts the . on the front of the path

[21:35] <TimToady> cosimo_: looks like I lied; fudge already handles an expression on DOES (as long as the expression isn't 0, that is :)

[21:39] <mncharity> looks like kp6's passing of ../../t/01-sanity/06-use.t is a bit bogus.   script/kp6 -Cast -e 'use lib ".";'  reports it broken into two separate compilation units.

[21:40] <mncharity> re puts the . on the front of the path, thanks

[21:44] <pmurias> mncharity: kp6 dosn't really support use

[21:44] <mncharity> less work for me :)

[21:45] <pmurias> mncharity: actually more

[21:46] <pmurias> ispell--

[21:46] <pugs_svn> r19672 | lwall++ | [fudge] clarify that #?DOES can take an expression (within limits)

[21:47] <mncharity> oh... kp6 uses use()?  hmm...

[21:47] <mncharity> it would be quite useful to have a list of all the kp6 p6 files which will need to be compiled to bootstrap.

[21:48] <pmurias> find src/

[21:49] <pmurias> withought some things in other languages

[21:50] *** IllvilJa left
[21:50] <pmurias> mncharity: kp6 uses the perl5 use

[21:53] *** Botje joined
[21:54] <Botje> I know i'm going to regret it, but does pugs expose metaclasses somehow? since $obj.meta doesn't quite work

[21:54] <mncharity> ok.  I'll punt until the bootstrap begins and there are multiple .rb files at hand.

[21:54] <moritz_> pugs: say "foo".HOW.methods

[21:54] <exp_evalbot> OUTPUT[["reverse","chop","index","quotemeta","join","chars","bytes","split","LIST","ITEM","bless"]␤]

[21:55] <moritz_> Botje: but I think right now it only works for strings, not in the general case

[21:56] <Botje> i see

[21:57] <moritz_> Botje: you're welcome to fix this if you want ;)

[21:57] <Botje> would it be much work? :P

[21:57] <moritz_> yes, I fear

[21:57] <moritz_> but you can try anyway

[21:58] <Botje> hmm

[21:58] <Botje> so why does it work for strings ? :)

[21:59] <moritz_> because audrey started with them, as a prototype

[22:00] <Botje> I was hoping to use perl 6's shiny meta-ness for a paper :)

[22:00] <moritz_> uhm

[22:00] <moritz_> I don't think any implementation exposes that yet

[22:01] <pugs_svn> r19673 | putter++ | [kp6] ruby backend: a few additional passing tests.

[22:01] *** rdice left
[22:01] <Botje> well, I was planning on contributing to pugs anyway

[22:01] <moritz_> that's great

[22:01] <Botje> but i'm guessing it's more than a day's work ;)

[22:01] <moritz_> do you have a commit bit yet?

[22:02] <Botje> I'll be able to hack on it in two weeks at best

[22:02] <pmurias> depends on how good haskell coder you are

[22:02] <Botje> I'm down to one head-asplosion a week on #haskell :)

[22:02] <moritz_> ;)

[22:04] <moritz_> uhm, it seems I just killed commitbit

[22:05] <moritz_> it wasn't responding, so I did an svc -d commitbit

[22:05] <moritz_> then the same with -u

[22:05] <moritz_> now I get a 503

[22:05] <moritz_> ah, now it works

[22:06] *** Jamtech joined
[22:06] <moritz_> Botje: pugs isn't developed very actively these days - but you're welcome to change that

[22:06] <moritz_> Botje: and whenever you feel like hacking on anything perl6 related, feel free to request a commit bit here on the channel

[22:07] <Botje> i'll see after my exams ;)

[22:07] <moritz_> good luck ;)

[22:08] <pmurias> sleep

[22:08] * mncharity wonders if there is any pattern to how many/which t/kp6 tests need to pass in order to bootstrap

[22:08] <mncharity> g'night pmurias, thanks for your help

[22:09] <moritz_> mncharity: they could all pass, and still bootstrap wouldn't automatically work

[22:10] <mncharity> true.  it's the reverse case of 'bootstrap doesn't require feature x' which is potentially interesting.

[22:10] <moritz_> mncharity: but fglock said that bootstrap was nearly there, just a few bugs left in the backend

[22:11] <mncharity> in order to more rapidly get to bootstrap, check performance, and see if the approach is panning out.

[22:11] <moritz_> mncharity: but the current backend is so slow that he (temporarily) gave up bootstrapping work

[22:12] <Botje> it appears all builtin types have HOW implemented

[22:12] <mncharity> re nearly there, :)   re just a few bugs left, :(

[22:12] <moritz_> pugs: say 2.HOW.methods

[22:12] <exp_evalbot> OUTPUT[["LIST","ITEM","bless"]␤]

[22:13] <moritz_> pugs: say (2i).HOW.methods

[22:13] <exp_evalbot> OUTPUT[*** No such method in class Class: "&methods"␤    at /tmp/bkPwbcx5QZ line 1, column 5 - line 2, column 1␤]

[22:14] <moritz_> pugs: say (2i) * (1i)

[22:14] <exp_evalbot> OUTPUT[-2 + 0i␤]

[22:14] <Botje> pugs: say 2i.WHAT

[22:14] <exp_evalbot> OUTPUT[0 + 2i␤]

[22:14] <moritz_> so Complex doesn't have a .HOW 

[22:14] <moritz_> pugs: say "str".WHAT

[22:14] <exp_evalbot> OUTPUT[Str␤]

[22:20] <pugs_svn> r19674 | putter++ | [kp6] ruby backend: +run_scripts to docs. +isa().

[22:20] <mncharity> bbiab

[22:20] *** TJCRI left
[22:21] <meppuru> good night

[22:23] *** cmarcelo left
[22:26] *** meppuru left
[22:26] *** pmurias left
[22:29] <cj> moo

[22:29] <cj> I'm attending this thing next week:

[22:29] <cj> http://www.langnetsymposium.com/

[22:29] <lambdabot> Title: 2008 Lang.NET Symposium

[22:29] <cj> thanks, lambdabot

[22:29] <cj> I'm thinking I'll recruit some warm bodies to help implement "Iron Perl6" or whatever

[22:30] <cj> anyone want to contribute anything to the effort? :)

[22:30] <moritz_> cj: just an idea - that could be a kp6 backend

[22:31] <cj> moritz_: nifty.  where can I find the kp6 bytecode spewer?

[22:32] <moritz_> cj: nowhere yet. You need to write it ;)

[22:32] <moritz_> cj: currently it spits out perl5 (and other HLLs)

[22:33] <cj> moritz_: I guess my question is "what is the 'it' which spits out perl5 (and other HLLs)"?

[22:34] <cj> s/"\?/?"/

[22:34] <moritz_> Visitor::EmitPerl5 and other, iirc

[22:37] <cj> cool.  got a svn url?

[22:38] <moritz_> http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/src/KindaPerl6/Visitor/Emit/

[22:38] <lambdabot> Title: Revision 19674: /v6/v6-KindaPerl6/src/KindaPerl6/Visitor/Emit, http://tinyurl.com/ynqqq3

[22:38] <moritz_> there are Perl5.pm, Lisp.pm, Ruby.pm etc

[22:38] <moritz_> only Perl5.pm is full featured right now

[22:45] <cj> moritz_: nifty.  it would be neat to bootstrap to IL!

[22:46] <moritz_> cj: yes ;)

[22:47] <moritz_> cj: in general fglock and pmurias are the kp6 gurus, if you have further questions

[22:47] * moritz_ is just an interested oberserver who contributes one or two test cases

[22:48] *** iblechbot left
[23:00] *** chris2 left
[23:04] *** riffraff left
[23:11] <pugs_svn> r19675 | cosimo++ | [t] Test suite refactoring.

[23:11] <pugs_svn> r19675 | cosimo++ | Moved all builtins/math test scripts under t/spec/S29-num and S29-trig.

[23:11] <pugs_svn> r19675 | cosimo++ | Applied fudge-ification.

[23:11] <pugs_svn> r19675 | cosimo++ | Applied new is_approx() tests for approximate compares.

[23:14] *** alester left
[23:20] <moritz_> cosimo_: if you change the tests to use is_approx, then the Test.pm in the pugs repo should have that as well

[23:25] <pugs_svn> r19676 | cosimo++ | Added and documented approx(), is_approx() approximate test functions.

[23:26] <cosimo_> moritz_: just did that. I can't test pugs, though

[23:26] <moritz_> ok

[23:33] *** pjcj_ joined
[23:36] *** lichtkind left
[23:38] <cosimo_> good night to all

[23:39] *** cosimo_ left
[23:40] *** ludan left
[23:43] *** polettix joined
[23:54] *** Caelum left
[23:55] *** Jamtech left
[23:59] *** thoughtp1lice joined
