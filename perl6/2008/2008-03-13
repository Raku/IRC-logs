[00:07] *** ispy_ joined
[00:09] *** Limbic_Region joined
[00:15] *** spx2 joined
[00:24] *** cmarcelo joined
[00:33] *** buubot joined
[00:36] *** buu joined
[00:39] *** thoughtpolice joined
[01:07] *** Blazeix joined
[01:10] <Blazeix> Hi, I'm thinking about learning perl6, so I would like to make a few simple applications with it. Does perl6 have some useful libraries yet?

[01:10] *** lyokato_ joined
[01:10] <Blazeix> I've downloaded pugs, and I've been messing with simple perl6 syntax

[01:10] *** Morasique joined
[01:23] *** stevan_ joined
[01:25] *** zonkers_ joined
[02:00] *** justatheory joined
[02:03] *** thoughtp1lice joined
[02:10] *** Lorn joined
[02:35] *** c9s joined
[03:12] *** diotalevi joined
[03:19] *** sh0cked joined
[03:21] *** penk joined
[03:36] *** rhr joined
[03:38] *** drbean joined
[03:49] *** revdiablo joined
[03:52] *** Blazeix left
[04:10] *** cnhackTNT joined
[04:16] *** Lorn joined
[04:56] *** justatheory joined
[04:59] *** BrutusIunius joined
[05:22] *** justatheory joined
[05:50] *** BrutusIunius joined
[06:04] *** r0bby joined
[06:14] *** devogon joined
[06:16] *** charlesmorgan joined
[06:16] <charlesmorgan> Hi folks.

[06:16] <charlesmorgan> How many of you *love* income trusts?

[06:17] <charlesmorgan> Show of hands?

[06:17] <charlesmorgan> How about you sit there like a dead log if your IQ is less than 75.

[06:20] <charlesmorgan> It's always the MORONS who never say a word. They park their asses on IRC and go play with computer pornography.

[06:21] *** charlesmorgan left
[06:33] *** tewk joined
[06:39] <rakudo_svn> r26345 | duff++ | [rakudo] rough cut implementation of auto-{increment,decrement} for Perl6Str

[06:52] *** Aankhen`` joined
[07:43] *** marmic joined
[07:58] *** BinGOs joined
[08:05] *** iblechbot joined
[08:19] *** cognominal_ joined
[08:36] *** wknight8111 joined
[09:55] *** masak joined
[10:10] *** ebassi joined
[10:28] *** ebassi joined
[10:41] *** FurnaceBoy joined
[10:42] *** ruoso joined
[11:11] *** cognominal_ joined
[11:17] *** masak joined
[11:55] *** ebassi_ joined
[12:08] *** wknight8111 joined
[12:16] *** IllvilJa joined
[12:34] <rakudo_svn> r26347 | duff++ | [rakudo] make Perl6Str increment() work on empty strings

[13:22] *** pmurias joined
[13:24] <pmurias> mncharity: is something like that allowed in perl6?

[13:29] *** cmarcelo joined
[13:35] *** lisppaste3 joined
[13:35] *** Psyche^ joined
[13:43] *** FurnaceBoy joined
[13:56] *** BinGOs joined
[14:06] *** xinming joined
[14:29] *** ebassi joined
[14:32] *** Aankhen`` joined
[15:00] *** chris2 joined
[15:03] *** ispy_ joined
[15:11] *** xinming_ joined
[15:13] *** braceta joined
[15:45] *** TJCRI joined
[15:52] *** kanru joined
[16:04] *** chacha_chaudhry joined
[16:04] *** ispy_ joined
[16:05] *** gbarr joined
[16:05] *** chacha_chaudhry left
[16:21] *** rdice joined
[16:22] <moritz_> the server on which evalbot runs is currently down :(

[16:22] <moritz_> I hope to get it running this weekend

[16:22] *** jrockway joined
[16:34] *** bockmabe joined
[16:37] <pmurias> ruoso: will it be possible to inherit from native/lowlevel classes?

[16:38] *** chris2 left
[16:39] <ruoso> from native you can only inherit by composition

[16:39] <ruoso> you cannot change the representation

[16:39] <ruoso> the lowlevel implementations won't be available in the namespace for that ;)

[16:39] <ruoso> that's why the src-s1p implementations need to be written

[16:40] *** BinGOs joined
[16:40] <pmurias> thinking how should Array be implemented

[16:40] <ruoso> S1P__Array?

[16:40] <pmurias> yes

[16:41] <ruoso> take a look at the autovivification notes in the wiki

[16:41] <ruoso> the basic idea is that you're going to return containers or lazy lookup containers

[16:41] <ruoso> the lazy lookup containers will autovivify to a real container

[16:42] <ruoso> the important thing here is that you cannot change the representation of the object during the autovivification

[16:42] <ruoso> it must be the same pointer

[16:43] *** BrutusIunius joined
[16:44] <ruoso> which means that you will always keep the proxy object when something was autovivified 

[16:44] <ruoso> at least when working with lowlevel objects

[16:45] <ruoso> that won't happen for higher-level objects...

[16:45] <pmurias> no?

[16:45] <ruoso> because they all have the WHENCE 

[16:45] <ruoso> and they are representation-independent

[16:46] *** bocksp joined
[16:46] *** peepsalot joined
[16:47] <pmurias> how does binding to an array element work

[16:47] <pmurias> in terms of low level operations

[16:47] <pmurias> an array has a memory block of Scalars

[16:48] <ruoso> that's when the lookup proxy object enters

[16:49] <pmurias> explain please ;)

[16:49] <ruoso> $a[1][2][3] works as:

[16:49] <ruoso> 1) you make a lookup on $a for the element 1

[16:50] <pmurias> which returns a proxy object

[16:50] <ruoso> 2) this lookup returns a proxy object that delegates to the cell value

[16:50] <ruoso> that can be empty,

[16:50] <ruoso> in the case that the element has not been autovivified yet

[16:51] <ruoso> but this proxy object knows how to implement the Scalar, Array and Hash API

[16:51] <pmurias> how does $a[1] := work

[16:52] <ruoso> in theory, yes...

[16:52] *** Jamtech joined
[16:53] <pmurias> ?

[16:53] <ruoso> ah...

[16:53] <ruoso> I didn't see the "how" part

[16:53] <pmurias> ;)

[16:53] <ruoso> $a[1] will return the proxy object

[16:54] <ruoso> the same way $a returns

[16:54] <ruoso> and the bind will substitute the container inside $a[1]

[16:54] <ruoso> the same way it substitutes the container inside $a

[16:55] <moritz_> so every variable has a container?

[16:56] <moritz_> isn't that rather inefficient?

[16:56] <PerlJam> moritz_: every var *is* a container

[16:56] *** eternaleye joined
[16:56] <PerlJam> moritz_: don't you know the rules of optimization?  Working code first.  :)

[16:56] <moritz_> PerlJam: allright, I'll be quiet ;-)

[16:57] <ruoso> PerlJam, but every var *lookup* has a container

[16:57] <ruoso> so binding can work

[16:58] <ruoso> the same way that every hash lookup must *have* a container, and don't *be* a container

[16:59] <PerlJam> ruoso: right, you get a container thingy so that you can use it for autovivification or to somehow morph it into the contianer that's already there.

[16:59] <ruoso> or to bind it to somewhere else

[16:59] <ruoso> or to get bound from somewhere else

[16:59] <PerlJam> sure, depending on context.

[17:00] <ruoso> in fact, the lookup can return a simple lazy lookup object

[17:00] <ruoso> so the lookup doesn't really happen until you use it

[17:01] <PerlJam> yeah, perl6 has proxies everywhere it seems.  That's the price of laziness.

[17:01] <ruoso> yeah...

[17:01] <ruoso> and it's scary to think about lazy lookup + currying

[17:01] <ruoso> to make something like

[17:02] <ruoso> $a<b><c>[1]<d> turn into a sql statement

[17:02] <PerlJam> I try not to think about how it all works as long as it just does  :)

[17:04] <ruoso> like $person{ name => 'John' }<contacts>{ name => 'Jane' }

[17:07] <ruoso> this would make DBIx::Class in Perl 6 just awesome...

[17:07] <pmurias> ruoso: have you thought about running the sm0p grammar on smop?

[17:08] <ruoso> you mean compiling the sm0p grammar to sm0p?

[17:09] <pmurias> i thought more about compiling to c

[17:09] <ruoso> If anyone writes a conversor :)

[17:10] *** buubot joined
[17:12] *** buu joined
[17:13] <pmurias> how to revive a file removed from the repo if i know the path but don't rememeber the revision (with svk)?

[17:15] *** Zygo joined
[17:15] <kolibrie> pmurias: svk revert path/to/file ?

[17:15] *** gbarr joined
[17:19] <pmurias> find the revision first is the soultion ;)

[17:21] <[particle]> pmurias: try grepping svn log -v

[17:21] <pmurias> svk cat dosn't work on removed files

[17:22] <pmurias> [particle]: vim searched for it

[17:23] *** kanru joined
[17:40] *** meppl joined
[17:51] *** justatheory joined
[17:57] *** Daveman joined
[18:00] <pugs_svnbot> r20117 | pmurias++ | [kp6] a revival of Emit::TokenC with the intent of being used by smop

[18:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20117

[18:00] <lambdabot> Title: Changeset 20117 - Pugs - Trac

[18:08] *** ebassi_ joined
[18:09] *** BrutusIunius joined
[18:11] *** simcop2387 joined
[18:13] *** TJCRI joined
[18:23] *** thepler joined
[18:28] *** barney joined
[18:30] *** explorer joined
[18:37] *** alester joined
[18:48] *** Schwern joined
[18:58] *** Psyche^ joined
[19:01] *** Jamtech joined
[19:09] *** thepler joined
[19:33] *** TJCRI joined
[19:37] *** eternaleye joined
[20:09] *** jferrero joined
[20:47] *** Lorn_ joined
[20:50] *** BinGOs joined
[21:24] *** smtms joined
[21:41] *** IllvilJa joined
[21:46] *** thepler joined
[22:00] *** buchetc joined
[22:34] *** eternaleye_ joined
[22:46] *** rindolf joined
[23:09] *** ebassi joined
[23:18] <mncharity> sigh.  both rakudo (pbc and exe) and redsix are under 20 lines per second, just for parsing.  that's just not usable.

[23:39] *** zgold joined
[23:43] <meppl> good night

[23:45] <zgold> just wanted to drop a word of praise for pugs and perl 6.. im just learning haskell and what you guys have done is really, really cool :)

[23:45] <pugs_svnbot> r20118 | putter++ | [STD_red] sync some unfinished work.

[23:45] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20118

[23:45] <lambdabot> Title: Changeset 20118 - Pugs - Trac

[23:46] *** BinGOs joined
[23:53] *** eternaleye_ joined
