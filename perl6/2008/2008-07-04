[00:03] *** Coleoid joined
[00:13] *** cls_bsd left
[00:18] <pugs_svn> r21202 | ruoso++ | [smop] yet more work on the p6opaque implementation... Some nasty bug is causing a deadlock (yes... I know the reasons for locks to exist is to cause dead-locks, but that is what I got so far)

[00:19] * ruoso g'night &

[00:20] *** ikeda left
[00:25] <meppl> good night

[00:28] *** meppl left
[00:44] *** justatheory joined
[00:52] *** gbacon left
[00:53] *** gbacon joined
[00:54] *** elmex left
[00:58] *** xinming joined
[01:03] *** penk joined
[01:09] *** xinming__ left
[01:10] *** polettix left
[01:20] *** xinming_ joined
[01:22] *** pbuetow left
[01:33] *** xinming left
[01:34] *** agentzh joined
[01:41] *** agentzh left
[01:42] *** a-jin1 joined
[01:42] *** a-jin1 left
[01:51] *** Alias_ left
[01:53] *** Alias_ joined
[01:58] *** agentzh joined
[01:58] *** Alias_ left
[01:59] *** Alias_ joined
[02:06] *** Coleoid left
[02:08] *** bacek__ joined
[02:09] *** bacek left
[02:19] *** Alias_ left
[02:21] *** Alias_ joined
[02:30] *** xinming joined
[02:39] *** xinming_ left
[02:46] *** bacek joined
[02:48] *** bacek__ left
[02:52] *** Alias_ left
[03:01] *** xinming_ joined
[03:02] *** xinming left
[03:03] *** Ara4n joined
[03:04] *** justatheory left
[03:06] *** Ara5n left
[03:06] *** kanru left
[03:11] *** xinming_ left
[03:13] *** xinming joined
[03:38] *** cls_bsd joined
[03:43] *** kanru joined
[04:05] *** lambdabot left
[04:06] *** lambdabot joined
[04:10] *** sri_work left
[04:17] *** lambdabot left
[04:18] *** lambdabot joined
[04:20] *** lambdabot left
[04:20] *** lambdabot joined
[04:23] *** lambdabot left
[04:24] *** lambdabot joined
[04:26] *** lambdabot left
[04:27] *** lambdabot joined
[04:28] <rakudo_svn> r29042 | pmichaud++ | [rakudo]:  merge rakvar branch into trunk

[04:29] <rakudo_svn> r29042 | pmichaud++ | * Better handling of $_, $!, $/ initialization in blocks and routines.

[04:29] <rakudo_svn> r29042 | pmichaud++ | * Refactor <dotty> and <methodop>

[04:29] <rakudo_svn> r29042 | pmichaud++ | * .implicit_method now works

[04:29] <rakudo_svn> r29042 | pmichaud++ | * Move .?, .*, .+ handlers into Object.

[04:29] <rakudo_svn> r29042 | pmichaud++ | * all spectest_regression tests still pass

[04:30] *** lambdabot left
[04:30] *** lambdabot joined
[04:31] *** lambdabot left
[04:35] <pugs_svn> r21203 | lwall++ | [STD] user-oriented message on detection of unless-else suggested by moritz++

[04:35] <pugs_svn> r21203 | lwall++ | [gimme5] a|b bug discovered by pmurias++

[04:42] *** lambdabot joined
[04:44] *** lambdabot left
[04:46] *** xinming_ joined
[04:46] *** lambdabot joined
[05:02] *** xinming left
[05:03] <pugs_svn> r21204 | lwall++ | [STD] allow .123 to parse as suggested by Gerd Pokorra++

[05:05] <pugs_svn> r21205 | bacek++ | [spec] Unfudge tests for rakudo fixed by r29042

[05:07] <pugs_svn> r21206 | bacek++ | [spec] Unfudge tests for rakudo fixed by r29042

[05:12] <pugs_svn> r21207 | bacek++ | [spec] Unfudge tests for rakudo fixed by r29042

[05:15] *** xinming joined
[05:27] *** xinming_ left
[05:27] *** xinming_ joined
[05:33] *** Psyche^ joined
[05:37] <rakudo_svn> r29043 | pmichaud++ | [rakudo]:

[05:37] <rakudo_svn> r29043 | pmichaud++ | * Update C<abs> function and method

[05:37] <rakudo_svn> r29043 | pmichaud++ | * Start refactoring builtin methods and functions

[05:39] <pugs_svn> r21208 | pmichaud++ | [rakudo]:  Unfudge tests in S29-num/abs.t

[05:39] *** xinming left
[05:42] *** xinming joined
[05:48] *** Patterner left
[05:48] *** Psyche^ is now known as Patterner

[05:50] *** xinming_ left
[05:50] *** polettix joined
[06:11] <rakudo_svn> r29044 | pmichaud++ | [rakudo]:

[06:11] <rakudo_svn> r29044 | pmichaud++ | * move more builtins into src/builtins/num.pir

[06:21] *** Ashizawa joined
[06:24] <rakudo_svn> r29045 | pmichaud++ | [rakudo]:  update Complex.exp and Complex.sqrt

[06:24] *** xinming_ joined
[06:26] *** polettix left
[06:28] <pugs_svn> r21209 | bacek++ | [spec] Unfudge S29-num/exp.t for rakudo

[06:31] <pugs_svn> r21210 | bacek++ | [spec] Unfudge 2 more tests in S29-num/sqrt.t for rakudo

[06:36] *** xinming left
[06:37] *** PZt left
[06:40] *** xinming joined
[06:41] *** masak joined
[06:46] *** xinming__ joined
[06:52] *** xinming_1 joined
[06:52] *** xinming__ left
[06:52] *** xinming_ left
[06:58] *** xinming left
[06:58] <rakudo_svn> r29046 | pmichaud++ | [rakudo]:  More builtin method refactors.

[06:59] *** xinming_1 left
[06:59] *** xinming joined
[07:20] <Ontolog> audreyt: I'm having trouble using gb18030 with Encode::HanExtra, do you know about this issue?

[07:26] *** ZuLuuuuuu joined
[07:28] *** ZuLuuuuuu left
[07:29] *** pmurias joined
[07:30] <rakudo_svn> r29047 | pmichaud++ | [rakudo]:  More builtin refactors (Str)

[07:32] *** Ashizawa left
[07:33] <pmurias> breakfast&

[07:33] *** pmurias left
[07:35] *** Ashizawa joined
[07:52] *** xinming_ joined
[07:52] *** xinming left
[07:54] *** cognominal__ left
[07:54] *** nipotan is now known as nipotaway

[07:57] *** penk left
[07:59] *** penk joined
[08:00] *** lambdabot left
[08:00] *** xinming joined
[08:01] *** lambdabot joined
[08:02] <moritz_> rakudo: $_ = 3; say .sqrt;

[08:02] <p6eval> rakudo 29047: OUTPUT[Method 'sqrt' not found for invocant of class 'Int'␤current instr.: '_block11' pc 45 (EVAL_11:19)␤]

[08:03] <moritz_> rakudo: $_ = "foo"; .lcfirst.say

[08:03] <p6eval> rakudo 29047: OUTPUT[foo␤]

[08:03] <moritz_> rakudo: $_ = "foo"; .ccfirst.say

[08:03] <p6eval> rakudo 29047: OUTPUT[Method 'ccfirst' not found for invocant of class 'Perl6Str'␤current instr.: '_block11' pc 45 (EVAL_11:19)␤]

[08:03] <moritz_> rakudo: $_ = "foo"; .ucfirst.say

[08:03] <p6eval> rakudo 29047: OUTPUT[Foo␤]

[08:03] <bacek_> moritz_:  I already unfudged this tests :)

[08:03] <moritz_> bacek_: I noticed ;)

[08:04] <moritz_> autounfudge++

[08:04] <bacek_> (manual unfudge)++ :)

[08:04] <moritz_> bacek_: you did it manually? why?

[08:05] <bacek_> moritz_: this tests were opened in my vim. I just remove few lines :)

[08:05] *** elmex joined
[08:06] <pugs_svn> r21211 | moritz++ | [spec] unfudged tests in arith.t

[08:07] <bacek_> +200 passed tests in single day.

[08:08] <moritz_> t/spec/S04-statements/for.t is broken

[08:08] <moritz_> sub some_sub_1 ($arg) { $d = $d ~ $arg; } for 0 .. 5 { .some_sub_1 };

[08:09] <moritz_> since somve_sub_1 is a sub, and not a method in class Int, this will never work

[08:10] <moritz_> oddly enough rakudo dies with a parse failure, not with a "no such method in class Int" error

[08:10] *** xinming__ joined
[08:10] <bacek_> it's not in spectest_regression.data...

[08:11] <moritz_> aye, it's not. It dies with 'Null PMC access in type()'

[08:12] *** jferrero joined
[08:14] *** xinming_ left
[08:15] *** bacek_ left
[08:18] *** xinming_ joined
[08:21] *** rindolf joined
[08:23] *** xinming left
[08:23] <moritz_> rakudo: class Int is also { method foo { say self } }; 4.foo

[08:23] <p6eval> rakudo 29048: OUTPUT[Class 'Int' already registered!␤current instr.: '!keyword_class' pc 10552 (src/gen_builtins.pir:6944)␤]

[08:23] *** renormalist joined
[08:30] *** xinming__ left
[08:34] *** kanru left
[08:36] *** xinming joined
[08:39] <rindolf> moritz_: I'm less angry today.

[08:43] *** xinming_ left
[08:43] *** kanru joined
[08:51] *** Schwern joined
[08:53] *** xinming_ joined
[08:54] *** Lorn_ left
[09:06] *** xinming left
[09:24] *** chris2 joined
[09:32] *** pbuetow joined
[09:38] *** renormalist left
[09:40] *** Lorn joined
[09:41] *** stevan_ left
[10:15] *** penk left
[10:23] <bacek> moritz_: ping

[10:23] <moritz_> bacek: pong

[10:24] <bacek> Looks like you missed semicolon in for.t for some_sub_1

[10:24] <bacek> bacek@icebolt:~/src/parrot/languages/perl6$ ../../parrot perl6.pbc -e 'my $d; sub some_sub_1 ($arg) { $d = $d ~ $arg; }; for 0 .. 5 { .some_sub_1 };'

[10:24] <bacek> Method 'some_sub_1' not found for invocant of class 'Int'

[10:24] <bacek> after } for some_sub_1;

[10:25] <bacek> bacek@icebolt:~/src/parrot/languages/perl6$ ../../parrot perl6.pbc -e 'my $d; sub some_sub_1 ($arg) { $d = $d ~ $arg; } for 0 .. 5 { .some_sub_1 };'

[10:25] <bacek> Statement not terminated properly at line 1, near "{ .some_su"

[10:26] <bacek> (but I'm not sure about 'official' perl6 syntax in this case)

[10:26] <bacek> pugs: my $d; sub some_sub_1 ($arg) { $d = $d ~ $arg; } for 0 .. 5 { .some_sub_1 }

[10:26] <p6eval> pugs: RESULT[undef]

[10:26] <moritz_> closing curly followed by line break implies a ;

[10:26] <bacek> pugs: my $d; sub some_sub_1 ($arg) { $d = $d ~ $arg; }; for 0 .. 5 { .some_sub_1 }

[10:26] <p6eval> pugs: RESULT[undef]

[10:27] <moritz_> but it doesn't hurt to add some, because it's not what the file tests for

[10:31] <bacek> 'token block' is quite different in STD.pm in rakudo...

[10:34] <moritz_> parse errors in wrong, fudged tests

[10:35] *** donaldh joined
[10:36] *** Ontolog left
[10:37] *** Ontolog joined
[10:37] *** cognominal_ joined
[10:38] *** meppl joined
[10:45] *** redicaps joined
[10:59] *** cognominal_ left
[11:02] <pugs_svn> r21212 | moritz++ | [spec] added a few semicolons in for.t; fixed plan in uc.t. bacek++

[11:05] *** rindolf left
[11:09] <rakudo_svn> r29049 | moritz++ | [rakudo] added S29-str/uc.t to spectest_regression, bacek++

[11:26] *** cognominal_ joined
[11:28] *** pmurias joined
[11:31] <ruoso> pmurias, good morning...

[11:31] <ruoso> ;)

[11:36] <pmurias> ruoso: good morning

[11:40] <ruoso> pmurias, I tried to run your parser, but it failed saying that a module was not retuning a true value...

[11:40] <ruoso> are you in the middle of some change?

[11:40] <pmurias> i'm testing my changes now

[11:43] <pugs_svn> r21213 | pmurias++ | [pixie] arrays are marked in the dumps, stranger token names work more often

[11:44] <pugs_svn> r21214 | pmurias++ | [sm0p] fixed some bugs

[11:44] <pmurias> ruoso: did you run sh brew?

[11:45] <ruoso> before using the parser...

[11:46] <pmurias> i'll have to wait for p6opaque.sm0p to compile to test my changes :(

[11:47] <ruoso> pmurias, I can commit it now... it is segfaulting... but it compiles...

[11:47] <pmurias> no i don't ;)

[11:47] <ruoso> p6opaque.sm0p is already up-to-date

[11:50] <pmurias> ruoso: what do you want to commit?

[11:51] <ruoso> nothing... I thought p6opaque.sm0p wasn't compiling because of something I didn't commit

[11:51] <ruoso> but it was up-to-date already

[11:53] <pmurias> (GNU indent)++

[11:56] * moritz_ leaves for the weekend, see you on Sunday night or Monday

[12:01] *** dbrock left
[12:05] <ruoso> pmurias, btw... some things on that grammar are only that way because of KP6... it could be much simpler...

[12:06] *** cognominal_ left
[12:06] <pmurias> ruoso: noticed it already

[12:07] <pmurias> ;)

[12:07] <ruoso> but as soon as you have something working pleeeease tell me... I can't stand parsing p6opaque.sm0p anymore ;)

[12:08] *** iblechbot joined
[12:11] *** cognominal_ joined
[12:14] <pmurias> ruoso: the build system if very stange

[12:14] <pmurias> * strange

[12:14] <ruoso> why?

[12:16] <pmurias> make clean fixed stuff

[12:16] <pmurias> autotools are a hack

[12:18] * ruoso likes autotools...

[12:18] * ruoso doesn't really understands it... but it works pretty nicely for me...

[12:18] <pmurias> i get no subtests run for test/12_p6opaque

[12:18] <ruoso> pmurias, are you using make -f Makefile.cvs to set it up

[12:19] <pmurias> yes

[12:19] <ruoso> pmurias, test 12 is b0rk3d now

[12:19] <pmurias> ok

[12:19] <pmurias> everything else now works fine

[12:20] <ruoso> cool... 

[12:20] <pugs_svn> r21215 | pmurias++ | [smop] SM0P_FASTER=1 works

[12:20] <ruoso> we could even replace the default and have the SMOP_INVIABLYSLOW env variable ;)

[12:21] <ruoso> pmurias, where is re/engine/TRE.pm?

[12:22] <ruoso> I have an incomplete checkout of pugs svn

[12:22] <pmurias> on cpan

[12:22] <ruoso> oh

[12:24] *** cognominal_ left
[12:25] *** Ontolog left
[12:27] <pmurias> ruoso: still installing the dependencies?

[12:27] <ruoso> yes...

[12:27] <ruoso> pmurias, is there a list of them somewhere?

[12:28] <pmurias> don't think so

[12:29] *** ludan joined
[12:31] <pmurias> i think it's just Moose and re::engine::TRE on the gimme5/STD side and autobox::Core

[12:32] <ruoso> hmmm... smop_lowlevel.sm0p generates C errors

[12:33] <ruoso> so does p6opaque.sm0p

[12:33] <pmurias> SM0P_FASTER=1 make and SM0P_FASTER=1 make test

[12:33] <ruoso> yes... but make sure the pre-parsed .c files are removed

[12:33] *** Lorn_ joined
[12:33] <ruoso> for some reason make clean doesn't remove them

[12:34] *** Lorn left
[12:35] *** slavi1 joined
[12:36] <pmurias> i run rm -fr `svn status`

[12:36] <pmurias> and make clean

[12:36] <slavi1> does pugs build with ghc 6.8.2?

[12:37] <ruoso> pmurias, try explicitly removing src/smop_lowlevel.c

[12:37] <ruoso> and then try to recompile with SM0P_FASTER=1

[12:38] <pmurias> ruoso: you run sh brew in misc/sm0p?

[12:38] <ruoso> should I run it again?

[12:38] <pmurias> it's a badly named recompile everything script

[12:38] <pmurias> NC

[12:39] <ruoso> even then

[12:39] <pmurias> sorry, strange stuff happens here when caps lock is pressed :(

[12:39] <ruoso> it's something in the constant identifier translation

[12:40] <ruoso> it's returning strings with "SMOP__ID__" where it should be something like "SMOP__ID__foo"

[12:41] <ruoso> token idconst {  <idconst_list> { make 'SMOP__ID__' ~ $/ ~ '' }}

[12:41] <ruoso> oh... maybe I have larry's fix outdated...

[12:42] <pmurias> ruoso: are you absolutly sure you have the most current revision?

[12:42] <pmurias> i have fixed it ealier today

[12:42] <ruoso> sorry... that was the problem... it works now... pmurias++

[12:44] <ruoso> pmurias++ for 1..Inf;

[12:44] <ruoso> the new parser is just fantastic :)

[12:44] <ruoso> no more 3minutes for each p6opaque change...

[12:45] *** a-jin1 joined
[12:45] <masak> btw, what's the semantic difference between 1..Inf and 1..* ?

[12:45] *** a-jin1 left
[12:45] *** pbuetow left
[12:46] *** pbuetow joined
[12:46] <pugs_svn> r21216 | ruoso++ | [smop] p6opaque still breaks... but now pmurias++ sm0p parser is used by default

[12:49] *** lisppaste3 left
[12:51] <TimToady> masak: not much difference, really

[12:51] <slavi1> TimToady: :D

[12:52] <TimToady> though 'a'..* looks nicer than 'a'..Inf

[12:52] <masak> definitely

[12:53] <masak> hm, ?( undef ~~ -Inf..Inf )

[12:53] <masak> probably not

[12:53] <ruoso> TimToady, while you're around... have you backlogged to the part I was talking about implementing the default object dispatch for Perl 6 in Perl 6?

[12:54] <TimToady> I saw it

[12:54] <slavi1> 6.2.13.a(Perl5_stub.o): In function `pugs_ValToIv': Perl5_stub.c:(.text+0x723): undefined reference to`Pugszm6zi2zi13_PugsziRunziPerl5_zdfvalToIvzua78GK_closure'

[12:54] <slavi1> what am I missing?

[12:55] <ruoso> TimToady, would you like to consider writing that default dispatch code in Perl 6?

[12:56] <TimToady> not sure; don't understand it well enough yet to have a feeling

[12:57] <ruoso> well... if you look at v6/smop/src-s1p/P6Meta.pm 

[12:58] *** meppl left
[12:58] <ruoso> that's mostly the default p6 metaclass

[12:58] <ruoso> that will be used in smop

[12:58] <ruoso> it will be compiled down to C+sm0p later

[12:59] <slavi1> is there a pugs compile howto?

[12:59] <ruoso> the dispatcher is simply the implementation of "method dispatch($meta: $object, $identifier, $capture --> Object) {...}

[13:01] <ruoso> TimToady, at this moment, p6opaque is already delegating calls to the metaclass using the "dispatch" method... I just need to fix some nasty bug now before I move forward to implement the REPR api in p6opaque

[13:01] <ruoso> if everything goes well... we can even proceed to the compilation of P6Meta.pm and Object.pm down to C+sm0p

[13:02] <TimToady> I might have a chance to look at it later today

[13:02] <ruoso> cool

[13:02] *** cmarcelo joined
[13:03] *** cognominal_ joined
[13:10] <pmurias> ruoso: how do you plan to have decent performace while having lots of stuff in Perl 6?

[13:10] *** rindolf joined
[13:10] <ruoso> pmurias, this lots of stuff will be running in the lowest smop level

[13:10] <ruoso> directly in the interpreter

[13:10] <pmurias> TimToady: is it ok if I add an option to gimme5 to write rule start positions somewhere?

[13:11] <ruoso> optimizations are possible ahead...

[13:11] <ruoso> but I'm not sure it is actually possible to do it without writing this lots of stuff in Perl 6

[13:11] <ruoso> because of the polymorphic representations in Perl 6

[13:11] <ruoso> everything needs to be handled as method calls

[13:12] <ruoso> you cannot introspect the object directly, unless you are the object responder interface

[13:13] <TimToady> pmurias: what do you mean by a "rule start position"?

[13:13] <ruoso> but considering Perl 6 supports different representations to not only share the same metaclass implementation, but it also supports you having a superclass of a different representation of the current object

[13:13] <rindolf> Hi all.

[13:14] <pmurias> TimToady: the position in the source file where a given rule starts

[13:14] <ruoso> so since you can have the Default metaclass being used by p6opaque as well as p5Moose

[13:14] <TimToady> how is this different from _from?

[13:14] <pmurias> in #abc\ntoken foo {...} it's 5

[13:14] <TimToady> oh, wait, you're talking about gimme5, not STD5

[13:14] <TimToady> ENOCOFFEE

[13:14] <pmurias> yes

[13:15] <ruoso> I'm not sure you can actually have this default metaclass written in anything else then Perl 6 itself...

[13:15] <rakudo_svn> r29052 | pmichaud++ | [rakudo]:  Refactor sqrt to be a method on Any.

[13:15] <ruoso> and again, that's the point where I think the REPR API is actually something that needs to be part of the spec, so we can share Metaclass implementations among different Perl 6 implemnetations

[13:17] <rakudo_svn> r29053 | pmichaud++ | [rakudo]: spectest-progress.csv update - 86 files, 1473 passing tests

[13:17] <ruoso> it would be a shame if each metaclass needed to be re-implemented for each Perl 6 implementation...

[13:19] *** cognominal__ joined
[13:21] <TimToady> bbl & # breakfast at cafeteria...

[13:27] <ruoso> pmurias, where do I change the sm0p grammar? there's a bug (I think prior to your implementation) in the generated code...

[13:28] *** cognominal_ left
[13:29] <pmurias> misc/sm0p

[13:30] <ruoso> sm0p.pm?

[13:30] <pmurias> yes

[13:32] <ruoso> cool

[13:32] <pugs_svn> r21217 | ruoso++ | [misc/sm0p] positional arguments also need a SMOP_REFERENCE

[13:37] *** ludan left
[13:37] <rindolf> Doesn't TimToady celebrates the 4th of July?

[13:41] *** Schwern left
[13:43] <pugs_svn> r21218 | ruoso++ | [SMOP] YAY! p6opaque succesfully delegates the methods to the metaclass... including the DESTROYALL call...

[13:43] *** Schwern joined
[13:45] <ruoso> All tests successful.

[13:45] <ruoso> Files=12, Tests=78,  1 wallclock secs ( 0.11 cusr +  0.13 csys =  0.24 CPU)

[13:45] <ruoso> :D

[13:47] *** renormalist joined
[13:48] *** meppl joined
[13:51] *** pmurias left
[13:55] *** redicaps left
[13:58] <pugs_svn> r21219 | pmichaud++ | STD.pm:  {*} for all alternatives in <dec_number>, not just last

[14:03] *** meppl left
[14:07] <pugs_svn> r21220 | ruoso++ | [smop] SMOP__SLIME__Capturize.new and SMOP__NATIVE__int are not identifiers...

[14:07] <pugs_svn> r21221 | ruoso++ | [smop] fixing test count... all tests pass...

[14:08] <ruoso> :D and now 12_p6opaque.t has no leaks and is valgrind clean :D

[14:10] * ruoso now can move forward to implement the REPR api in p6opaque...

[14:10] *** icwiener joined
[14:23] *** meppl joined
[14:28] *** PZt joined
[14:37] *** alanhaggai joined
[14:42] *** sri_work joined
[14:45] *** cognominal__ left
[14:46] *** alanhaggai left
[14:46] *** cognominal_ joined
[14:46] *** alanhaggai joined
[14:48] *** renormalist left
[14:51] *** c9s_ joined
[14:51] *** donaldh left
[14:57] *** simcop2387 left
[15:00] *** simcop2387 joined
[15:02] *** Ashizawa left
[15:15] <slavi1> is the perl6 specification "complete" ???

[15:26] <pmichaud> the June 2008 version of it it :-)

[15:26] <pmichaud> er, is

[15:27] <slavi1> I mean, will are there more things that need to be added to perl6 that haven't been specified yet?

[15:28] <slavi1> Checked out revision 16464. ... how do I update to the lastest revision of pugs?

[15:29] <slavi1> nvm

[15:29] <slavi1> I pulled from the wrong svn repo

[15:30] <pmichaud> (more things to be added) -- isn't that part of the purpose of Perl 6:   to make it easier to add things that we haven't specified yet?   ;-)

[15:30] <slavi1> hmm, perhaps I should rephrase that ...

[15:31] <slavi1> is perl6/pugs ready for production/testing use?

[15:31] <pmichaud> production, probably not.  testing, preliminary.

[15:31] <pmichaud> but, of course, those are questions about implementations, not about the language spec.  :-)

[15:31] <slavi1> right

[15:32] <pmichaud> rakudo perl is getting closer

[15:32] <slavi1> closer than pugs?

[15:33] <slavi1> rakudo perl == parrot?

[15:33] <pmichaud> it's not closer than pugs yet, but it's getting there.  rakudo perl == perl 6 on parrot, yes.

[15:33] <slavi1> ahh, ty

[15:33] <slavi1> does the latest svn of pugs build on ghc 6.8.2?

[15:34] <pmichaud> alas, I don't know much about building pugs at this point

[15:34] <pmichaud> someone else on the channel might be able to help

[15:34] <slavi1> :(

[15:35] <slavi1> Generating precompiled Prelude, Math::Basic... pugs: Internal error: Invalid grammatical category: "Bool"

[15:35] <slavi1> :(

[15:53] *** FurnaceBoy joined
[16:07] *** Schwern left
[16:15] <masak> slavi1: easiest way to build Pugs nowadays is via cabal-install

[16:16] <masak> slavi1: the error you describe is a known one, arising from a discrepancy between GHC 6.8.3 and Pugs

[16:16] <slavi1> I see

[16:16] <masak> basically, Pugs slipped behind bleeding-edge GHC, and no-one maintains it

[16:17] <masak> but see the README in Pugs for installation instructions using cabal-install

[16:17] <masak> that's how I built it

[16:17] <slavi1> ty

[16:17] <masak> np

[16:19] <slavi1> hmm, it appears that ubuntu doesn't have cabal :(

[16:19] <slavi1> will have to get it from debian later

[16:19] <masak> you can also install it from source

[16:19] <slavi1> I know

[16:19] <slavi1> I'd rather have a package (if it exists)

[16:20] <masak> I can understand that :)

[16:20] <masak> I was impatient, so I build it from source :)

[16:20] <slavi1> I haven't checked yet

[16:20] * slavi1 is playing WoW :P

[16:22] *** alanhaggai left
[16:32] *** icwiener left
[16:33] *** icwiener joined
[16:38] *** slavi1 left
[16:45] *** kanru left
[16:45] *** jjore left
[16:47] <rakudo_svn> r29057 | pmichaud++ | [rakudo]: Update <dec_number> to match STD.pm

[16:48] <rakudo_svn> r29058 | pmichaud++ | [rakudo]:  Fix handling and scoping of given statement

[16:56] <pugs_svn> r21222 | pmichaud++ | S04-statements/no-implicit-block.t:  unskip test now that 'given' works

[16:59] <pugs_svn> r21223 | lwall++ | [STD] capture dec_number coefficient to distinguish from the exponent

[17:03] <rakudo_svn> r29059 | pmichaud++ | [rakudo]:  Refactor 'min' and 'max' into Any class.

[17:05] *** jferrero left
[17:05] <pugs_svn> r21224 | pmichaud++ | S29-list/minmax.t:  mark a test error with #?rakudo skip

[17:07] *** rdice joined
[17:15] *** wknight8111 left
[17:23] *** Lorn joined
[17:23] *** Lorn_ left
[17:31] *** FurnaceBoy left
[17:33] *** rhr left
[17:36] *** rhr joined
[17:38] *** icwiener_ joined
[17:43] *** kanru joined
[17:46] *** icwiener-_- joined
[17:48] *** c9s_ left
[17:48] <rakudo_svn> r29060 | pmichaud++ | [rakudo]:  Add min, max, minmax, and pop methods to Range

[17:49] <rakudo_svn> r29061 | pmichaud++ | [rakudo]:  Move builtin 'reverse' method/function to Any

[17:50] <pugs_svn> r21225 | pmichaud++ | S29-list/minmax.t:  update test, .min and .max do work on Any

[17:51] *** icwiener left
[17:51] <pugs_svn> r21226 | pmichaud++ | S02-builtin_data_types/range.t:  update #?rakudo skips, note possible errors

[18:01] *** icwiener_ left
[18:03] *** cognominal_ left
[18:08] <pugs_svn> r21227 | pmichaud++ | S29-list/minmax.t: go ahead and fix the first .min tests on str values

[18:08] *** icwiener-_- is now known as icwiener

[18:12] *** pbuetow left
[18:12] *** pbuetow joined
[18:37] *** [particle]1 joined
[18:49] <rakudo_svn> r29062 | pmichaud++ | [rakudo]:  Refactor Str.index into Any class, code cleanup.

[18:49] <rakudo_svn> r29063 | pmichaud++ | [rakudo]:  Move .truncate and .int into Any class.

[18:50] <pugs_svn> r21228 | pmichaud++ | S29-num/int.t:  Fix syntax error, update test, remove a #?rakudo skip

[18:51] *** meppl left
[18:55] *** [particle] left
[18:56] *** mtrimpe joined
[18:59] *** sri_work_ joined
[19:01] *** eternaleye left
[19:13] *** sri_work left
[19:26] *** pmurias joined
[19:27] *** cmarcelo left
[19:28] *** pmurias left
[19:30] *** meppl joined
[19:42] *** planofish joined
[19:42] *** pmurias joined
[19:46] <pmurias> ruoso: would i be usefull to use label instead of ints as arguments to move_capturize?

[19:46] <pmurias> s/i/it

[19:47] <ruoso> it actually would.... do you think you can do it only in the syntax level?

[19:47] <ruoso> by then replacing the labels by the actual number?

[19:48] <ruoso> or do you have something else in mind?

[19:48] <pmurias> ruoso: i could do it in syntax level

[19:48] <ruoso> that would be cool...

[19:49] <ruoso> it doesn't even need to be specific to the move_capturize

[19:49] <ruoso> oh wait... no... the move_capturize is different

[19:49] <ruoso> it would be possible to do it for the other methods, but it would be different...

[19:50] <ruoso> pmurias, but the move_capturize would already be very helpfull

[19:50] <ruoso> because it receives too many parameters... and it's easy to get lost...

[19:50] <ruoso> as well as the fact that you need to rearrange the numbers when you add a node...

[19:52] <ruoso> pmurias, btw... we're very close of the need for the s1p compiler...

[19:53] *** Lorn_ joined
[19:53] <ruoso> src-s1p/P6Meta.pm will probably be the first one to be compiled

[19:54] <planofish> pmurias: isn't that missing a delimiter?

[19:54] <planofish> s/i/it ?

[19:56] <pmurias> planofish: yes

[19:58] *** japhb left
[19:58] *** japhb joined
[19:58] <pmurias> ruoso: s1p compiles to slime?

[19:59] <planofish> ok

[19:59] <planofish> Court orders YouTube to give Viacom video logs

[20:00] <ruoso> pmurias, yes... basically the .pm file will be translated to a .sm0p file

[20:03] *** mtrimpe left
[20:03] *** mtrimpe joined
[20:04] *** mtrimpe left
[20:04] *** Schwern joined
[20:04] *** Lorn left
[20:05] *** mtrimpe joined
[20:06] *** apeiron left
[20:14] *** planofish left
[20:18] *** apeiron joined
[20:35] *** pmurias left
[20:37] *** pmurias joined
[20:38] <pmurias> ruoso: i think i'll add the labels tomorrow, as i'm not thinking efficiently enough now

[20:39] <ruoso> pmurias, no prob...

[20:39] <ruoso> but start thinking on how we can implement the s1p compiler

[20:39] <pmurias> ok ;)

[20:39] <ruoso> ;)

[20:41] <pmurias> do we have any choices besides using elf?

[20:44] <pmurias> i think rakudo is too parrot specific, and kp6 is unbootstraped and written in mp6

[20:45] *** FurnaceBoy joined
[20:47] <pmurias> i think it would be usefull to have a few working sm0p examples

[20:49] <ruoso> well... p6opaque provide a few

[20:49] <ruoso> including a continuation passing style example

[20:50] *** rindolf left
[20:52] *** Lorn_ left
[20:54] <pmurias> ruoso: much better than the examples in the test suit

[20:55] <ruoso> yeah... p6opaque is an example of where I actually need sm0p

[20:55] <ruoso> meaning that I don't have a choice

[20:55] <ruoso> where it is completely stackless 

[20:58] <pmurias> ruoso: are you familiar with elf or kp6 internals?

[20:59] <ruoso> not really... I was familiar with kp6 at some time... but I lost touch when I started yap6/smop

[21:02] *** jferrero joined
[21:03] <pmurias> g' night

[21:03] *** pmurias left
[21:03] *** rdice left
[21:06] *** iblechbot left
[21:09] *** jjore joined
[21:18] *** chris2 left
[21:19] *** planofish joined
[21:20] *** icwiener_ joined
[21:33] <vixey> oohhh

[21:33] * vixey FINALLY understands where the nick TIMTOWTDI

[21:33] <vixey> ..comes from

[21:35] <SamB> vixey: you are pretty slow ;-)

[21:36] <SamB> except the nick is TimToady, not TIMTOWTDI

[21:36] *** icwiener left
[21:36] <vixey> right ...

[21:36] <vixey> well noticed

[21:37] <SamB> I, having taken a perl class at the community college, have actually heard TIMTOWTDI pronounced aloud, and so was able to get it more easily ;-)

[21:39] <pmichaud> istr that TimToady has also mentioned that it's in "honor" of Tim O'Reilly as well :-)

[21:40] <SamB> which has uncomplementary implications regarding O'Reilly, I take it?

[21:40] <pmichaud> oh, I'm sure it would be entirely complimentary

[21:40] <SamB> what with the quotation marks then?

[21:40] <pmichaud> my quotes around honor were simply because I couldn't remember the proper word

[21:40] <pmichaud> oddly, there's not a wikipedia entry for TimToady :-)

[21:40] <SamB> hah

[21:41] <SamB> that's not too odd

[21:41] <SamB> I don't imagine they have a great deal of entries named soley for IRC nicks

[21:42] <pmichaud> however, "Tim Toady" is mentioned on http://en.wikipedia.org/wiki/TMTOWTDI

[21:47] *** eternaleye joined
[22:22] *** Alias_ joined
[22:33] *** masak left
[22:37] *** araujo left
[22:46] *** eternaleye_ joined
[22:55] <rakudo_svn> r29065 | pmichaud++ | [rakudo]:  minor changes to simplify .HLL transition

[22:58] *** eternaleye left
[23:05] *** jferrero left
[23:42] *** wknight8111 joined
[23:49] *** pbuetow left
[23:52] *** cognominal_ joined
