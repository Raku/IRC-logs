[00:01] *** icwiener_ left
[00:05] *** PZt left
[00:10] *** FurnaceBoy left
[00:13] *** Schwern left
[00:28] *** mtrimpe left
[00:32] *** Eevee left
[00:35] *** silug left
[00:48] *** Ara5n joined
[00:58] <meppl> good night

[01:00] *** meppl left
[01:02] *** Jedai left
[01:05] *** Ara4n left
[01:47] *** araujo joined
[02:01] *** Eevee joined
[02:06] *** alanhaggai joined
[02:07] *** stevan_ joined
[02:09] *** Eevee left
[02:12] *** wknight8111 left
[02:25] *** silug joined
[02:36] *** a-jin1 joined
[02:36] *** a-jin1 left
[02:41] *** xinming joined
[02:50] *** alanhaggai left
[02:54] *** xinming_ left
[02:56] *** Alias_ left
[03:00] *** xinming_ joined
[03:00] *** Alias_ joined
[03:05] *** elmex_ joined
[03:09] *** alester_ joined
[03:09] *** alanhaggai_ joined
[03:13] *** xinming left
[03:15] *** xinming joined
[03:22] *** elmex left
[03:22] *** elmex_ is now known as elmex

[03:23] *** Ara4n joined
[03:23] *** Ara5n left
[03:24] *** sri_work_ left
[03:25] <bacek> pugs: sub twice($a) { sub { 2*$a} }; my $t = twice;

[03:25] <p6eval> pugs: OUTPUT[*** ␤    Unexpected "$t"␤    expecting "=", context, ":" or "("␤    at /tmp/HQqGnCOxrn line 1, column 35␤]

[03:25] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; my $t = twice;

[03:25] <p6eval> pugs: OUTPUT[*** ␤    Unexpected "$t"␤    expecting "=", context, ":" or "("␤    at /tmp/r0sjMRwvW7 line 1, column 36␤]

[03:25] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; say twice(5);

[03:25] <p6eval> pugs: OUTPUT[<SubRoutine(<anon>)>␤]

[03:25] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; say twice(5)->();

[03:25] <p6eval> pugs: OUTPUT[*** ␤    Unexpected "->();"␤    expecting ":", term postfix, operator or ","␤    at /tmp/QkbPxRQpru line 1, column 45␤]

[03:25] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; say twice(5).();

[03:25] <p6eval> pugs: OUTPUT[10␤]

[03:26] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; say twice.(5);

[03:26] <p6eval> pugs: OUTPUT[*** Cannot cast from VUndef to Pugs.AST.Internals.VCode (VCode)␤    at /tmp/tn98aF191L line 1, column 37-46␤]

[03:26] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; say twice().(5);

[03:26] <p6eval> pugs: OUTPUT[*** No compatible multi variant found: "&twice"␤    at /tmp/kWwQ6AAVOE line 1, column 37-48␤]

[03:26] *** xinming_ left
[03:26] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; say twice(5).();

[03:26] <p6eval> pugs: OUTPUT[10␤]

[03:27] <bacek> rakudo: sub twice($a) { sub { 2*$a}; }; say twice(5).();

[03:27] <p6eval> rakudo 29067: OUTPUT[Statement not terminated properly at line 1, near ".();"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤]

[03:27] <bacek> rakudo: sub twice($a) { sub { 2*$a}; }; say twice(5);

[03:27] <p6eval> rakudo 29067: OUTPUT[_block22␤]

[03:27] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; my $t = twice(5);

[03:27] <p6eval> pugs: RESULT[\sub :(@_) "$_" := "Scalar" #<Scalar:0xb7a529dd>␤          "@_" := "Array" #<Array:0xb7a529d5>␤          "&?ROUTINE" := "Sub" #<Sub:0xb7a062ed>␤          "&?BLOCK" := "Sub" #<Sub:0xb7a062ed> {, "$_" := "Scalar" #<Scalar:0xb7c47f8d>␤                                                ...

[03:27] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; my $t = twice(5); say $t();

[03:27] <p6eval> pugs: OUTPUT[10␤]

[03:28] <bacek> rakudo: sub twice($a) { sub { 2*$a}; }; my $t = twice(5); say $t();

[03:28] <p6eval> rakudo 29067: OUTPUT[10␤]

[03:28] <bacek> pugs: sub twice($a) { sub { 2*$a}; }; my $t = twice; say $t();

[03:28] <p6eval> pugs: OUTPUT[*** ␤    Unexpected "$t"␤    expecting "=", context, ":" or "("␤    at /tmp/SbGCncpbok line 1, column 36␤]

[04:21] <bacek> perl6: sub times($a,$b) { $a * $b; }; sub divide($a,$b) { $a / $b; } sub make_op($op) { sub($a,$b) { $op($a,$b) } }; my $t = make_op(&times); say $t(21,2); my $div = make_op(&divide); say $div(42,2);

[04:21] <p6eval> elf 21228: OUTPUT[Parse error in: /tmp/qR2i1rXHIF␤panic at line 1 column 31 (pos 31): Can't understand next input--giving up␤WHERE: ub times($a,$b) { $a * $b; }; sub divide($a,$b) { $a / $b; }␤WHERE:                              /\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:76:in

[04:21] <p6eval> .....

[04:21] <p6eval> ..kp6 21228: OUTPUT[error in Block at compiled/perl5-kp6-mp6/lib/KindaPerl6/Grammar/Sub.pm line 362, <> line 1.␤*** Syntax Error in sub '': missing closing curly bracket ␤]

[04:21] <p6eval> ..pugs: OUTPUT[42␤21␤]

[04:21] <p6eval> ..rakudo 29067: OUTPUT[Statement not terminated properly at line 1, near "sub make_o"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤]

[04:21] <bacek> perl6: sub times($a,$b) { $a * $b; }; sub divide($a,$b) { $a / $b; }; sub make_op($op) { sub($a,$b) { $op($a,$b) } }; my $t = make_op(&times); say $t(21,2); my $div = make_op(&divide); say $div(42,2);

[04:21] <p6eval> elf 21228: OUTPUT[/home/evalenv/pugs/misc/STD_red/match.rb:141:in `block in to_dump0': undefined method `to_dump0' for true:TrueClass (NoMethodError)␤   from /home/evalenv/pugs/misc/STD_red/match.rb:140:in `each'␤     from /home/evalenv/pugs/misc/STD_red/match.rb:140:in `map'␤       from

[04:21] <p6eval> ../home/evalenv/pugs/mi...

[04:21] <p6eval> ..kp6 21228: OUTPUT[error in Block at compiled/perl5-kp6-mp6/lib/KindaPerl6/Grammar/Sub.pm line 362, <> line 1.␤*** Syntax Error in sub '': missing closing curly bracket ␤]

[04:21] <p6eval> ..pugs: OUTPUT[42␤21␤]

[04:21] <p6eval> ..rakudo 29067: OUTPUT[42␤84␤]

[04:30] *** eternaleye_ left
[04:37] *** xinming_ joined
[04:40] *** apeiron left
[04:40] *** apeiron joined
[04:47] *** xinming_ left
[04:50] *** xinming left
[05:02] *** xinming joined
[05:15] *** alanhaggai_ left
[05:17] *** xinming_ joined
[05:30] *** xinming left
[05:36] *** Psyche^ joined
[05:39] *** a-jin1 joined
[05:40] *** a-jin1 left
[05:44] *** xinming joined
[05:50] *** Patterner left
[05:50] *** Psyche^ is now known as Patterner

[05:56] *** xinming_ left
[06:03] *** eternaleye_ joined
[06:17] *** vsoni joined
[06:27] *** alester_ left
[06:39] *** Auzon1 joined
[06:39] *** Auzon left
[06:40] *** vsoni left
[06:46] *** planofish left
[07:13] *** vsoni joined
[07:13] *** xinming_ joined
[07:24] *** vsoni left
[07:26] *** xinming left
[08:17] *** barney joined
[08:26] *** rindolf joined
[08:27] *** iblechbot joined
[08:39] *** alc joined
[09:22] *** pbuetow joined
[09:46] *** [particle]1 left
[09:47] *** [particle] joined
[09:51] *** Eevee joined
[09:57] *** chris2 joined
[10:06] *** Jedai joined
[10:07] <rakudo_svn> r29074 | bernhard++ | [perl6] Fix some POD.

[10:56] *** riffraff joined
[11:04] *** meppl joined
[11:48] *** barney left
[12:14] *** aindilis left
[12:15] *** aindilis joined
[12:32] *** aindilis left
[12:52] *** riffraff left
[13:13] *** masak joined
[13:29] *** alc left
[13:34] *** silug left
[14:04] *** meppl left
[14:38] *** barney joined
[14:38] <rakudo_svn> r29079 | pmichaud++ | [rakudo]:  spectest-progress.csv update, 87 files, 1587 passing tests

[14:51] *** rdice joined
[14:52] *** stevan_ left
[15:01] *** lichtkind joined
[15:01] <lichtkind> expression are also evaled when curly braces stand for hashre?

[15:01] <lichtkind> hashref

[15:07] *** chris2 left
[15:11] <TimToady> lichtkind: maybe--we could define { => } as a closure that gets evaluated lazily in hash context; this would be a departure from Perl 5 semantics though

[15:11] <masak> lichtkind: you mean like eval { 'tomatoes' => 'fried green' } ?

[15:11] <lichtkind> jes masak

[15:12] <masak> my instinct says 'yes', but I'm still trying to parse what TimToady said

[15:13] <TimToady> it would be nice if map { $a => $b } would do what the user expects

[15:13] <lichtkind> TimToady: my question was just if in current perl 6 expr are evaled inside an hash definition

[15:13] <TimToady> and I'm trying to answer the "when" of that question

[15:13] <TimToady> in p5 the expressions are evaluated immediately

[15:14] <TimToady> I'm saying if we did it lazily, we might be able to finesse the map { $a => $b} problem

[15:15] <masak> TimToady: do you mean my %example = { a => (side_effect1() + side_effect2() }; %example<a> # boom

[15:15] <TimToady> and not decide till it's used whether it was intended for a hash or a function

[15:15] <masak> what's the map { $a => $b} problem?

[15:15] <TimToady> well, it actually genererally shows up as map { $_ => func($_) } or some such

[15:16] <TimToady> but people expect it to return a list of pairs, and they get a syntax error instead

[15:16] <masak> ah.

[15:16] <TimToady> because to the parser it looks like a hash composer

[15:16] <masak> I'm among those people

[15:17] <lichtkind> so no full eval inside hash definitions?

[15:17] <TimToady> eh, currently it does full eval; we're speculating

[15:17] <TimToady> basically it currently adds .() if it looks like a hash composer

[15:17] <lichtkind> thanks

[15:20] *** FurnaceBoy joined
[15:21] <TimToady> bbl &

[15:22] <lichtkind> thanks masak

[15:22] <masak> lichtkind: np :)

[15:22] *** lichtkind left
[15:26] *** silug joined
[15:31] *** scrottie left
[15:31] *** scrottie joined
[15:37] <rindolf> Hi TimToady, masak 

[15:37] <rindolf> TimToady: I'm going out to bike.

[15:37] <masak> hiya, rindolf 

[15:37] <rindolf> Previously I hacked on some Perl code to verify Freecell solutions.

[15:42] <masak> my latest Perl adventure was a q&d translation of a Haskell program I was writing, into a Perl 5 one-liner, to understand what the heck was going wrong in the Haskell program :)

[15:42] <masak> I just don't know how to add spurious print statements to my Haskell code.

[15:52] *** alester_ joined
[15:57] <allbery_b> Debug.Trace.trace

[15:57] *** jhorwitz joined
[15:58] <masak> allbery_b: I'll look into that

[15:59] <masak> I waved around ineffectively in GHCi, and then I resorted to Perl

[15:59] <masak> it helped, too

[15:59] * masak knows that the limitation is in him, not in Haskell

[16:05] <allbery_b> pure functional programming takes some getting used to if you're used to imperative languages

[16:07] <rindolf> Bleh! Could not get out on time.

[16:07] <rindolf> Going to half-walk/half-run instead.

[16:07] <rindolf> Bye all.

[16:07] <masak> allbery_b: yes, but I've also found that the results are very beautiful

[16:07] <masak> rindolf: seeya

[16:13] *** FurnaceBoy left
[16:21] *** rdice left
[16:37] *** alanhaggai joined
[16:39] *** masak left
[17:06] *** Auzon1 is now known as Auzon

[17:07] <Auzon> Should .perl be in S29 under 'Any'?

[17:08] *** [particle]1 joined
[17:09] *** barney left
[17:11] *** jan__ left
[17:12] *** jan_ joined
[17:16] *** vsoni joined
[17:17] *** Alias_ left
[17:23] *** [particle] left
[17:29] *** GeJ left
[17:31] *** alanhaggai_ joined
[17:31] *** alanhaggai left
[17:33] *** alanhaggai_ is now known as alanhaggai

[17:37] *** slavi1 joined
[17:42] *** GeJ joined
[17:57] *** vsoni left
[17:59] *** vsoni joined
[18:00] *** pmurias joined
[18:02] *** alanhaggai left
[18:07] *** rindolf left
[18:13] <pmurias> ruoso: one problem with elf is that STD_red dosn't parse everythin in src-s1p, and the STD based frontend (pixie) is in a very early stage

[18:16] <slavi1> woot, I got pugs

[18:36] *** [particle]1 left
[19:00] *** vsoni left
[19:13] *** vsoni joined
[19:23] *** gbacon left
[19:38] <pmurias> ruoso: ping

[19:49] *** alester_ left
[19:57] *** stevan_ joined
[19:59] *** Alias_ joined
[20:04] *** slavi1 left
[20:07] *** vsoni left
[20:11] <pmurias> TimToady: what is an acceptable to you way of me adding the rule start extraction to gimme5?

[20:11] <pmurias> should i add an option or check an env var?

[20:17] *** xinming joined
[20:19] *** Alias_ left
[20:19] *** Alias_ joined
[20:25] *** jferrero joined
[20:27] *** xinming_ left
[20:32] *** jferrero left
[20:32] <pmurias> TimToady: or is it usefull for something else and i should spit out the info in a particular way?

[20:33] *** jferrero joined
[20:38] *** pmurias left
[20:57] *** pbuetow left
[21:03] *** jferrero left
[21:09] *** jferrero joined
[21:29] *** jferrero left
[21:40] *** webar7 joined
[21:40] <webar7> I saw a person with a tshirt in toronto that said:      perl6 != ";"

[21:40] <webar7> what does that mean

[21:40] <webar7> does perl6 no require  ; or something?!

[21:41] <webar7> at yonge and dundas

[21:41] <webar7> oh well

[21:42] *** webar7 left
[21:49] *** pbuetow joined
[22:04] *** FurnaceBoy joined
[22:06] *** jferrero joined
[22:21] *** pbuetow left
[22:21] *** pbuetow joined
[22:56] *** vsoni joined
[23:09] <ingy> I think that would mean "perl6 is not finished"

[23:15] *** FurnaceBoy left
[23:32] *** vsoni left
[23:36] *** eternaleye_ left
[23:36] *** eternaleye_ joined
[23:46] <Alias_> ingy: I can't use private message on this network

[23:47] <vixey> Alias_: /msg nickserv help register

[23:49] *** mjk joined
[23:50] *** iblechbot left
[23:51] <Alias_> blah

