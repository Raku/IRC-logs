[00:09] *** [particle] left
[00:15] *** IllvilJa joined
[00:16] *** jjore left
[00:16] <rakudo_svn> r25819 | coke++ | [codingstd]

[00:16] <rakudo_svn> r25819 | coke++ | 

[00:16] <rakudo_svn> r25819 | coke++ | Update nearly every PIR file in the repository to have the new PIR coda.

[00:16] <rakudo_svn> r25819 | coke++ | 

[00:16] <rakudo_svn> r25819 | coke++ | Avoids the PIR files that have tests that cruelly depend on their contents.

[00:16] <rakudo_svn> r25819 | coke++ | 

[00:17] <rakudo_svn> r25819 | coke++ | Only 3 files fail t/codingstd/pir_code_coda.t now.

[00:22] *** [particle] joined
[00:26] *** thoughtpolice joined
[00:44] *** lichtkind_ left
[00:46] *** wknight-away joined
[00:49] *** IllvilJa left
[01:05] *** nipotaway is now known as nipotan

[01:11] <pugs_svnbot> r19940 | lwall++ | [STD] Missing -> and <-> as EXPR stoppers

[01:11] <pugs_svnbot> r19940 | lwall++ | [STD] circumfix:<{ }> should also parse pblocks; jonathan++

[01:11] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19940

[01:11] <lambdabot> Title: Changeset 19940 - Pugs - Trac

[01:17] *** rutlov joined
[01:21] *** rutlov left
[01:21] *** kanru left
[01:23] *** xinming left
[01:25] *** [particle] left
[01:31] *** lyokato_ joined
[01:32] *** sri_work_ left
[01:38] *** [particle] joined
[01:39] *** thoughtp1lice joined
[01:49] *** jjore joined
[01:53] *** zakame joined
[01:53] *** ruoso left
[01:54] *** thoughtpolice left
[02:04] *** alester joined
[02:31] *** Psyche^ joined
[02:36] *** fridim_ left
[02:40] *** eternaleye_ is now known as eternaleye

[02:47] *** Patterner left
[02:47] *** Psyche^ is now known as Patterner

[02:51] <meppl> good night

[02:51] <meppl> gute nacht

[02:52] *** zakame_ joined
[02:52] *** meppl left
[03:00] *** zakame left
[03:01] *** zakame_ is now known as zakame

[03:16] *** stevan_ left
[03:26] *** zakame_ joined
[03:30] *** cnhackTNT joined
[03:32] *** zakame left
[03:36] *** hcchien left
[03:40] *** jjore left
[03:51] *** pcbuetow left
[03:51] *** pbuetow joined
[03:59] *** pbuetow left
[04:00] <pugs_svnbot> r19941 | lwall++ | [STD] some issues noticed by putter++

[04:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19941

[04:00] <lambdabot> Title: Changeset 19941 - Pugs - Trac

[04:13] *** Limbic_Region left
[04:13] *** hcchien joined
[04:18] *** RayMagini left
[04:20] *** RayMagini joined
[04:38] *** zakame_ left
[04:42] *** zakame_ joined
[05:04] *** wknight-away left
[05:07] *** Zygo left
[05:07] *** Zygo joined
[05:12] *** rutlov joined
[05:20] *** rutlov left
[05:20] *** Zygo left
[05:21] *** Zygo joined
[05:23] *** zakame__ joined
[05:29] *** zakame__ is now known as zakame

[05:31] *** Zygo left
[05:32] *** DarkWolf84 left
[05:42] *** zakame_ left
[05:45] *** zakame left
[05:48] *** njbartlett left
[05:55] <pugs_svnbot> r19942 | lwall++ | [gimme5] more tweakage of tweakage

[05:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19942

[05:55] <lambdabot> Title: Changeset 19942 - Pugs - Trac

[06:03] *** thoughtp1lice left
[06:49] *** zakame joined
[06:53] *** alester left
[07:05] *** monomorph joined
[07:22] *** Auzon joined
[07:32] *** Auzon left
[07:36] *** Auzon joined
[07:47] *** smtms left
[07:54] *** mj41____ joined
[08:01] *** Aankhen`` joined
[08:12] *** mj41___ left
[08:42] *** cnhackTNT left
[08:45] *** iblechbot joined
[08:57] *** hanekomu joined
[09:02] *** cnhackTNT joined
[09:11] *** smtms joined
[09:14] <cognominal__> where are the actions correspondint to STD.pm?

[09:15] *** zakame left
[09:26] *** lidden joined
[09:36] *** zakame joined
[09:39] *** IllvilJa joined
[09:44] *** ebassi joined
[09:47] *** simcop2387 left
[09:59] *** silug left
[10:09] *** cnhackTNT left
[10:11] *** dmq joined
[10:15] *** hanekomu left
[10:16] *** zakame left
[10:18] *** ruoso joined
[10:19] *** pbuetow joined
[10:20] *** pbuetow left
[10:20] *** lidden left
[10:21] *** pbuetow joined
[10:21] *** laye joined
[10:23] *** njbartlett joined
[10:29] *** IRSeekBot left
[10:31] *** IRSeekBot joined
[10:47] *** njbartlett left
[10:48] *** zakame joined
[11:04] *** laye left
[11:05] *** simcop2387 joined
[11:06] *** smtms left
[11:10] *** lyokato_ left
[11:15] *** wknight-away joined
[11:16] *** smtms joined
[11:21] *** pbuetow left
[11:39] *** silug joined
[11:49] *** rindolf joined
[11:59] *** Zygo joined
[12:12] *** pbuetow joined
[12:16] <ruoso> what does "want" return inside foo for:  bar(|foo())?

[12:16] *** wknight-away left
[12:17] <ruoso> pugs: sub foo () { say wants }; sub bar { }; bar(|foo())

[12:17] <exp_evalbot> OUTPUT[*** No such subroutine: "&wants"␤    at /tmp/h7pPGmjfy9 line 1, column 18-24␤]

[12:17] <ruoso> pugs: sub foo () { say want }; sub bar { }; bar(|foo())

[12:17] <exp_evalbot> OUTPUT[Scalar (Capture)␤]

[12:19] *** cmarcelo joined
[12:19] <ruoso> pugs: sub foo () { say want }; sub bar { }; bar(\foo())

[12:19] <exp_evalbot> OUTPUT[Scalar (Any), LValue␤]

[12:21] <ruoso> pugs: sub foo () { say want }; my $a = \foo();

[12:21] <exp_evalbot> OUTPUT[Scalar (Any), LValue␤]

[12:21] <ruoso> pugs: sub foo () { say want }; my @a = \foo();

[12:21] <exp_evalbot> OUTPUT[Scalar (Any), LValue␤]

[12:21] <ruoso> pugs: sub foo () { say want }; my @a = foo();

[12:21] <exp_evalbot> OUTPUT[List (Any)␤]

[12:22] <ruoso> pugs: sub foo () { say want }; my ($a,$b) = foo();

[12:22] <exp_evalbot> OUTPUT[List (Any)␤]

[12:22] <ruoso> pugs: sub foo () { say want }; my $a, $b = foo();

[12:22] <exp_evalbot> OUTPUT[*** ␤    Unexpected " ="␤    expecting "::"␤    Variable "$b" requires predeclaration or explicit package name␤    at /tmp/T5IgnU1yOq line 1, column 35␤]

[12:23] <ruoso> pugs: sub foo () { say want }; my $a; my $b; $a, $b = foo();

[12:23] <exp_evalbot> OUTPUT[Scalar ((mkType "Scalar"))␤]

[12:23] *** zakame left
[12:36] *** pbuetow left
[12:45] <pugs_svnbot> r19943 | ruoso++ | [smop] some more work in p6opaque. but I ve realised that I must change the order in the ROADMAP and implement a lowlevel Method, Attribute, Package and Submethod before implementing p6opaque...

[12:45] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19943

[12:45] <lambdabot> Title: Changeset 19943 - Pugs - Trac

[12:50] *** nipotan is now known as nipotaway

[12:54] *** njbartlett joined
[12:59] *** kanru joined
[13:00] *** alc joined
[13:00] *** reZo left
[13:06] *** rindolf left
[13:09] <ruoso> http://users.ipa.net/~dwighth/smalltalk/byte_aug81/design_principles_behind_smalltalk.html

[13:09] <lambdabot> Title: Design Principles Behind Smalltalk, http://tinyurl.com/hog8

[13:10] <ruoso> interesting fact that SMOP fits almost perfectly to this paper... 

[13:13] *** Lorn joined
[13:17] *** njbartlett left
[13:19] *** rindolf joined
[13:22] <ruoso> "A program should specify only the behavior of objects, not their representation."

[13:27] *** alester joined
[13:48] *** hao joined
[13:48] *** araujo left
[13:51] *** pbuetow joined
[13:53] *** alester left
[13:57] *** penk joined
[14:06] *** alc left
[14:12] *** blindfish joined
[14:15] *** hao left
[14:27] *** masak joined
[14:39] *** dsadinoff joined
[14:39] *** stevan_ joined
[14:41] <dsadinoff> ? 1 + 1

[14:41] <smtms> dsadinoff, hi

[14:42] <dsadinoff> oops, I mean to use ?eval.  I'm wating the Audrey YAPC::Asia video

[14:42] <[particle]> pugs: 1 + 1

[14:42] <exp_evalbot> RESULT[2]

[14:43] <[particle]> things have changed a bit since that video

[14:43] <dsadinoff> is there a particular FAQ I should be reading?

[14:45] <Auzon> The channel topic :P

[15:01] *** TJCRI joined
[15:03] *** jhorwitz joined
[15:09] *** njbartlett joined
[15:13] *** chris2 joined
[15:14] <TimToady> cognominal__: no, there are no official actions to go with STD yet; the actions will depend on the platform in any case...

[15:14] <TimToady> to the extent that there are official actions, they're already inlined closures

[15:17] <TimToady> ruoso: I think the new want() should be designed only to return the information available, and otherwise be free to say "I don't know".

[15:18] <TimToady> I don't want the dispatching slowed down *at all* to make want possible.

[15:19] <TimToady> want is rather less important in p6 than in p5, since it was primarily used to deal with an absence of multiple dispatch

[15:19] <TimToady> and I'd kill want() without remorse if I thought it was getting in the way of anything important

[15:29] <Juerd> want can be nice for a common set up without resorting to macros

[15:30] <ruoso> TimToady, I was having weird thougths on making co-routines to determine the result of want

[15:30] *** Auzon left
[15:30] <ruoso> like suspending the execution of that routine until the context is realised

[15:30] <ruoso> but maybe that's overkill :P

[15:34] <AndyAway> Hey, TimToady, I gave my "Stop saying script" talk this weekend

[15:34] <AndyAway> and YOU WEREN'T THERE TO REFUTE IT.

[15:34] <AndyAway> hahah

[15:34] *** AndyAway is now known as alester

[15:34] <alester> Andy 2, Larry 1

[15:34] <alester> Now, I am the master.

[15:35] <ruoso> TimToady, in fact, as overloading and tieing are so much simpler in Perl 6, "want" will not have the same usefullness than it have in Perl 5, I think...

[15:40] *** njbartlett left
[15:44] <TimToady> ruoso: the problem is that you can't know the exact nature of the data that will be returned until you run that coro, and multiple dispatch may well depend on it

[15:44] <TimToady> given that you can't predict the future, you can't have it both ways.   :)

[15:44] <ruoso> heh..

[15:45] <ruoso> we may need to program in "negative time"

[15:45] <ruoso> heh

[15:45] *** sri_work joined
[15:45] <TimToady> want() is also not going to be backward/foreward compatible as our type inferencers get better

[15:46] <wolverian> I'm sure someone would answer "use static types!" to that

[15:46] <TimToady> well, 42 is a static type, but you still have to return it first... :)

[15:47] <wolverian> dependent types? :)

[15:47] <wolverian> just put your program in the type level...

[15:47] <ruoso> if Perl was completely functional, we could try each possibility ;)

[15:47] <wolverian> oh, wait, I'm sure there's a problem here... ;) 

[15:47] <TimToady> and in fact, want() will destroy any type inferencing inside its scope of effect

[15:47] <TimToady> (from the view outside)

[15:48] <wolverian> righto, I need to be less of an ass :)

[15:48] <TimToady> well, you'll notice I'm actually coming down on the functional side here by de-emphasizing want()  :)

[15:49] <TimToady> want() is a time paradox waiting to happen. :)

[15:49] <TimToady> or maybe "waiting to have already happened..."

[15:49] <wolverian> use tenses;

[15:50] <TimToady> that makes for tense users...

[15:50] *** penk left
[15:50] <TimToady> if would_have_wanted(42) {...}

[15:52] <wolverian> I wonder what a mathematician would call that

[15:52] <TimToady> "linguistics"

[15:52] <ruoso> when I saw Damian's talk I knew it would be usefull somewhere.. ;)

[15:54] <wolverian> well, I'm pretty sure you can encode that if you have enough operators :)

[15:55] <TimToady> it's difficult when your operators go recursive and get longer than a DFA can recognize as a longest token...

[15:55] <TimToady> already had to deal with that for Perl 6

[15:56] <wolverian> my dfa is bigger than yours

[15:57] <TimToady> you can't say [«X«X+X»X»] without declaring your own macro, for instance

[15:58] <TimToady> but we do allow both [«X+X»] and [X«+»X]

[15:58] <wolverian> hm, I forgot what XX does

[15:58] <TimToady> cartesian cross

[15:58] <wolverian> ah, yes

[15:58] <TimToady> with an operator

[15:59] <wolverian> those make me want to ask perl6 their types 

[15:59] <TimToady> just use want()  :)

[16:00] <ruoso> or would_have_wanted() when you have mmd

[16:00] <ruoso> ;)

[16:00] <TimToady> will_have_wanted

[16:01] <ruoso> damian had a prettier phrase

[16:01] <ruoso> would_have_already_been_wanted

[16:01] <ruoso> or something like that

[16:01] <wolverian> wanted_in_some_universe(42)

[16:02] <TimToady> might've-beens...

[16:02] <ruoso> is there a copy of that talk somewhere? i don't even remember the name of the talk

[16:03] <rakudo_svn> r25841 | particle++ | [rakudo][t] clean up lib path in harness

[16:04] *** lidden joined
[16:05] <rakudo_svn> r25842 | particle++ | [rakudo][perldoc] add 'see also' text

[16:06] *** ilbot2 joined
[16:07] *** moritz_ joined
[16:07] <rakudo_svn> r25843 | particle++ | [rakudo] allow subcalls like 'foo.()'

[16:07] <moritz_> the logger has been down for some time, it should be up and working again

[16:07] <rakudo_svn> r25844 | particle++ | [rakudo] whitespace cleanup

[16:09] *** macroron joined
[16:09] <moritz_> the channel index doesn't work yet, but it's going to be fixed

[16:13] *** macroron left
[16:14] *** macroron joined
[16:33] *** dlocaus joined
[16:34] *** sri_work left
[16:35] <dlocaus> moritz_: Hi!  Well, I wanted to break the bad news to the KP6 team, but I got a Job!  Well, that's good news for me, but the time it will take out of my life means I pretty much won't be able to work on kp6.  I certainly won't be able to put in enough time to keep up with what's going on.

[16:35] <moritz_> dlocaus: congratulations, nice to hear that you got a job!

[16:35] <dlocaus> so, I wanted to thank you guys, I had fun, I hoped I helped out, and I won't forget you guys!

[16:36] <dlocaus> moritz_: yes! I'm happy too

[16:36] <[particle]> dlocaus++

[16:36] <dlocaus> It wasn't a perl job, but the perl jobs seam to have dried up

[16:36] <moritz_> although perl 6 is important, real life is much more important most of the time

[16:36] <dlocaus> I love perl.

[16:36] <dlocaus> I'm doing php/mysql dba.

[16:37] <dlocaus> For some reason, people are asking for perl programmers but no one is hiring.

[16:37] <dlocaus> Either I'm not good enough (hardly) or that these HR people are just filling up their boxes (probably).

[16:38] <dlocaus> But, I'll keep an weather eye out.

[16:38] <[particle]> if you want to move, there are perl jobs in seattle

[16:39] <dlocaus> I know, but my father is getting old and requires supervision, not constant supervision, but a close eye.

[16:39] <dlocaus> I'd love to move to Oregon or Washington state, back to America.

[16:39] <dlocaus> Well, you know what I mean.

[16:40] <[particle]> ayep

[16:41] <dlocaus> @tell fglock  I got the job.  I'm sorry, I won't be able to help out any more do to limited time.  I would chew up more time trying to find out what is going on, than putting in new coding effort.  I'll be checking out some of the smaller projects, or ones that require less time to be putting in effort.  Thank you for the chance to help out on the KP6 project.

[16:41] <lambdabot> Consider it noted.

[16:41] <dlocaus> @seen pumaris

[16:41] <lambdabot> I haven't seen pumaris.

[16:41] <dlocaus> @seen pmaris

[16:41] <lambdabot> I haven't seen pmaris.

[16:42] <dlocaus> @tell pmurias I got a new job.  I'm sorry, I won't be able to help out any more do to limited time.  I would chew up more time trying to find out what is going on, than putting in new coding effort.  I'll be checking out some of the smaller projects, or ones that require less time to be putting in effort.  Thank you for the chance to help out on the KP6 project.

[16:42] <lambdabot> Consider it noted.

[16:43] <dlocaus> Well, good luck guys, I'll check back from time to time and see how you guys are doing

[16:44] <rindolf> Is Rakudo the new name of mp6 or kp6?

[16:44] <moritz_> rindolf: the new name for perl6 on parrot

[16:44] <moritz_> kp6 is still kp6 ;)

[16:47] *** sri_work joined
[16:48] *** falesca joined
[16:49] *** dlocaus left
[16:51] *** masak left
[17:21] <cognominal__> what is kp6? :)

[17:21] <cognominal__> compared to nqp and rakudo (that, I know)

[17:23] *** pmurias joined
[17:23] <moritz_> kp6 is "KindaPerl6", and is a Perl 6 compiler written in a subset of perl 6

[17:23] <moritz_> the most advanced backend is the perl5 one, and ruoso++ is working on a C based backend

[17:24] *** meppl joined
[17:24] <pmurias> moritz_: ruoso++ is writing a vm for kp6 to run on

[17:24] <lambdabot> pmurias: You have 1 new message. '/msg lambdabot @messages' to read it.

[17:25] <moritz_> pmurias: that's another way to put it, yes ;)

[17:26] <ruoso> pmurias, I'm not sure SMOP can be called a VM

[17:26] <ruoso> it depends on the definition of what VM is

[17:27] <ruoso> if you call perl5 a VM, then SMOP is a VM

[17:27] <moritz_> let's call it a "C based runtime", and everybody's happy ;)

[17:28] <ruoso> although "C based" have almost no meaning

[17:30] <moritz_> "perceived to be fast" ;)

[17:30] *** njbartlett joined
[17:30] <ruoso> he

[17:30] <ruoso> heh

[17:30] <moritz_> anyway, gotta go

[17:30] <moritz_> ciao

[17:30] <ruoso> moritz_, you know... ciao is the italian for "Hello"

[17:31] <ruoso> in portuguese you would need to say tchau

[17:31] <moritz_> ruoso: "hello" and "bye"

[17:33] <pmurias> ruoso: it's a bit of a "create your own interpreter toolkit"

[17:33] *** araujo joined
[17:41] <TimToady> @tell mncharity a heads-up: I'm moving the @fate parameter to the front of the arg list so that I can use the variadic part of the list to emulate named args under p5; can't also use variadic for @fate, so now it's a fixed arg

[17:41] <lambdabot> Consider it noted.

[17:55] *** Psyche^ joined
[18:11] *** Patterner left
[18:11] *** Psyche^ is now known as Patterner

[18:17] *** rintaro left
[18:17] *** rintaro_ joined
[18:21] *** meppel-san joined
[18:27] *** meppl left
[18:27] *** meppel-san is now known as meppl

[18:31] *** ebassi is now known as ebassi|dinner

[18:49] *** fridim_ joined
[19:02] *** ruoso left
[19:13] *** silug left
[19:28] *** ebassi|dinner left
[19:28] *** peeps[work] joined
[19:28] *** rindolf left
[19:34] *** rindolf joined
[19:45] *** GeJ joined
[19:48] *** jhorwitz left
[19:53] *** TJCRI left
[19:58] *** simcop2387 left
[20:01] *** simcop2387 joined
[20:10] *** TJCRI joined
[20:12] *** silug joined
[20:19] * [particle] needs grammar help

[20:19] <[particle]> token pod_delimited_block {

[20:19] <[particle]>     ^^ '=' <.unsp>? 'begin' <.ws> <ident> <pod_option>* \n

[20:19] <[particle]>     .*?

[20:19] <[particle]>     ^^ '=' <.unsp>? 'end'   <.ws> $<ident> \N*

[20:19] <[particle]>     {*}

[20:19] <[particle]> }

[20:20] <[particle]> this captures pod blocks like "=begin foo :w :x\n=           :y :z\nblah blah blah\n=end foo"

[20:21] <[particle]> however, if i modify .*? to <pod_para> where i have "rule pod_para { .*? }", then pod_delimited_block fails on the same text

[20:21] <[particle]> simply replacing ".*?" with <pod_para> makes the match fail. i believe it's a pge bug, but i'm not 100% certain. thoughts? ideas?

[20:30] <PerlJam> [particle]: what happens if you use "regex" rather than "rule"?

[20:31] <[particle]> well, even if i change .*? to (.*?) it fails

[20:31] <PerlJam> I mean rules get :sigspace and :ratchet turned on, but that's not what happened in pod_delimieted_block

[20:32] <PerlJam> You're right though that it may be a pge bug.

[20:33] *** devogon joined
[20:35] <[particle]> i get 'Null pattern illegal'

[20:35] <[particle]> hrmm, no, that might be something else

[20:36] *** rindolf left
[20:36] *** macroron left
[20:36] <[particle]> yep, that wos something else

[20:36] <[particle]> changing rule to regex has no effect

[20:37] <[particle]> i get an empty result

[20:37] *** Limbic_Region joined
[20:42] <rhr_> [particle]: if it's a backtracking problem, you could replace .*? with something like (\N* \n <-[=]> | <-[=]>* '=' \N)*

[20:46] <rhr_> or maybe that should be [ <-[=\n]>* [ '=' \N | \n <-[=]> ] ]*

[20:48] <rhr_> err [ <-[=\n]>* [ '=' \N | \n <-[=]> ]? ]*

[20:48] <chris2> what's "bermuda island"?

[20:48] <PerlJam> chris2: it's an island in the atlantic ocean

[20:49] <PerlJam> chris2: one vertex of the "bermuda triangle" IIRC

[20:49] <chris2> it's something perl related from ovid, but google fails on me

[20:49] <[particle]> it's also part of a project ('bermuda) that ovid is working on

[20:49] <[particle]> check use.perl.org/~ovid/journal

[20:50] *** Aankhen`` left
[20:50] *** riffraff joined
[20:51] <chris2> thx. tried to search there but no results

[20:56] <[particle]> rhr_: that didn't help... i guess it's a bug :(

[20:57] <PerlJam> [particle]: is Pm still planning to do the release on Wed?  If so, I'm sure you'll see him in the next couple of days :)

[20:57] <[particle]> yes, he is planning that release

[20:58] <[particle]> i was hoping to get more perldoc support in by then, but it may have to wait

[20:58] <PerlJam> make sure to RT the supposed bug.

[20:59] <[particle]> you betcha!

[21:10] *** ludan joined
[21:11] <ludan> hi

[21:12] *** ki joined
[21:23] <ki> I AM GOD

[21:24] <ki> BOW DOWWWWWWWWWWWWWWWWWWN

[21:24] <ki> HAHAHAHAH

[21:24] <ki> LOL

[21:24] <ki> FBI PLZ

[21:29] <rhr_> [particle]: one more try [ <!before "\n="> . ]*

[21:31] <[particle]> [ <!before ^^ '='> .]*? # works -- rhr_++

[21:31] <[particle]> hrmm, but it's still not capturing it. i got prematurely excited

[21:32] <[particle]> $<body>=[ <!before ^^ '='> .]*?  # doesn't work.

[21:34] <ki> s

[21:34] <ki> lol r u hackin

[21:35] <Tene> hi, ki

[21:35] <Tene> Interested in Perl 6?

[21:36] <ki> yes

[21:36] <ki> oh thats what this channel is

[21:36] <rhr_> [particle]: you may need $<body>=[ [ <!before ^^ '='> .]*? ]

[21:36] <ki> sorry i dont get it

[21:36] <Tene> ki: what did you think this channel was?

[21:36] <ki> peace 

[21:36] <ki> i thought it was about collecting sea shells

[21:37] *** Zygo left
[21:37] <Tene> Oh.  No, we're about Perl, the programming language, not Pearls.

[21:38] *** Zygo joined
[21:38] <ki> lol you guys have patience

[21:38] <Tene> Usually.

[21:39] <ki> hey

[21:39] <ki> do you guys know how i become an irccop

[21:39] <[particle]> if we weren't so patient, perl 6 would be done already

[21:40] <ki> trudat

[21:41] *** blindfish left
[21:42] <[particle]> best to ask that on #freenode

[21:43] *** eternaleye_ joined
[21:43] <ki> love u guys

[21:43] <ki> i'll be back

[21:43] <ki> xxx

[21:43] <ki> :)

[21:43] <ki> :D

[21:43] *** eternaleye left
[21:43] <ki> xoxox

[21:43] <ki> lol

[21:43] <ki> luv u

[21:43] <ki> <3

[21:43] *** ki left
[21:43] * [particle] *yawns*

[21:44] *** eternaleye_ is now known as eternaleye

[21:48] <rakudo_svn> r25853 | particle++ | [rakudo][perl6doc] extend perl6doc compiler

[21:48] <rakudo_svn> r25853 | particle++ | ~ add support for delimited, paragraph, and abbreviated block syntax

[21:48] <rakudo_svn> r25853 | particle++ | ~ add support for simple pod options (:foo only, not :foo<bar>, :foo(1), :!foo, etc)

[21:54] *** DarkWolf84 joined
[21:57] *** Alias_ left
[21:57] *** monomorph left
[22:01] *** devogon_ joined
[22:02] *** devogon left
[22:18] *** fridim_ left
[22:26] *** pmurias left
[22:29] *** dsadinoff left
[22:29] *** cmarcelo left
[22:31] *** fridim_ joined
[22:36] <pugs_svnbot> r19944 | lwall++ | [gimme5] now parses 75% of STD as p5

[22:36] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19944

[22:36] <lambdabot> Title: Changeset 19944 - Pugs - Trac

[22:43] <jrockway> avar: ping

[22:43] <jrockway> avar: i finally tried SLIME

[22:44] <jrockway> it's awesome.  just like programming elisp except CLOS works :)

[22:56] <avar> if you think it's like hacking elisp you're doin it wrong:)

[22:56] <avar> jrockway: but nice

[22:56] <avar> jrockway: would you be interested in hacking POE::Component::Server::Swank? :)

[22:56] <jrockway> C-x C-e <the result appears in the minibuffer>

[22:57] <jrockway> avar: yes

[22:57] <jrockway> i was planning that actually

[22:57] <jrockway> will probably just use MX::POE though

[22:57] <jrockway> we need to add docstrings to perl first ;)

[22:58] <avar> MX::POE ?

[22:58] <jrockway> MooseX::POE

[22:58] <jrockway> basically a sugary layer around poe

[22:58] <jrockway> the idea, i assume, is to have perl-slime, right?

[22:58] <jrockway> sepia isn't quite right

[22:58] <avar> Yes, that

[22:58] <jrockway> i like the way slime-based development works

[22:58] <avar> I've looked at the protocol and it isn't that complex, especially with a sexp parser (on cpan)

[22:59] <jrockway> write a form, send it to the REPL, then play with it

[22:59] <jrockway> yup

[22:59] *** eternaleye left
[22:59] <jrockway> set up a git repo and i'll contribute if you start something :)

[22:59] *** eternaleye joined
[22:59] <jrockway> i don't mind handling the emacs end really, i like elisp

[22:59] *** chris2 left
[22:59] <jrockway> although, i guess slime is a minor mode..

[23:04] *** Psyche^ joined
[23:06] <jrockway> perl5 + Devel::Declare + Moose + SLIME == lisp with CPAN

[23:06] <jrockway> although, you may be interested in my lisp that i'm working on that compiles to perl

[23:07] <jrockway> and is designed to be "perlish"

[23:07] <avar> will it be a 100 year language?:)

[23:07] *** peeps[work] left
[23:08] <avar> jrockway: how would I allow you to commit? I just have anon git:// and ssh:// for write

[23:08] <avar> i.e. how do people generally do this

[23:08] <jrockway> avar: people usually give the committers an ssh account

[23:08] <jrockway> i used to, but it's too hard to maintain

[23:09] <jrockway> i'll pull and publish, and then you can pull from my repo whenever you want

[23:09] <jrockway> or i'll mail you patch :)

[23:09] <avar> mm, distributed++

[23:09] <cognominal__> what is the Item type in Perl 6?

[23:09] <cognominal__> is that anything that is not a junction?

[23:11] *** cmarcelo joined
[23:14] *** TJCRI left
[23:18] <Limbic_Region> jrockway - did you see the less than favorable catalyst book review on use.perl ?

[23:20] <avar> Oh crap I'm on the use perl frontpage

[23:21] <wolverian> cognominal__, I don't see Item in S02

[23:22] *** Patterner left
[23:22] *** Psyche^ is now known as Patterner

[23:23] <cognominal__> I see it in S29

[23:24] <cognominal__>  subset Matcher of Item | Junction;

[23:27] <cognominal__> A junction of type is a union of set

[23:27] <cognominal__> I suppose they are disjoint sets, so my hypothesis

[23:28] <jrockway> Limbic_Region: lol :)

[23:28] <Limbic_Region> jrockway - good, I won't attempt to paste the url then ;-)

[23:28] <jrockway> hehe

[23:29] <jrockway> i like how rjbs thinks he's a fucking catalyst expert now

[23:29] <jrockway> but whatever :)

[23:34] *** fridim_ left
[23:41] *** wknight-away joined
[23:58] *** polettix joined
