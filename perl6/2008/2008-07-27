[00:08] <pugs_svn> r21558 | lwall++ | [Cursor] more caching

[00:09] *** Alias_ joined
[00:10] *** mtrimpe left
[00:10] *** Schwern left
[00:21] *** eternaleye joined
[00:47] *** Alias_ left
[00:49] *** Alias_ joined
[00:50] *** hercynium left
[00:50] *** Alias__ joined
[00:51] *** Schwern joined
[00:52] <pugs_svn> r21559 | lwall++ | [Cursor] whoops, syntax error

[00:55] *** alester joined
[01:08] *** Alias_ left
[01:10] *** aindilis joined
[01:11] *** apple-gunkies left
[01:16] *** jferrero left
[01:19] *** alester left
[01:25] *** leto joined
[01:26] <leto> hola

[01:36] <TimToady> aloh

[01:38] *** alester joined
[01:45] *** pbuetow left
[01:55] <meppl> good night

[01:56] *** meppl left
[02:03] *** PZt joined
[02:11] <rakudo_svn> r29782 | pmichaud++ | [rakudo]: Allow single-test make targets, refactor fudge/harness.

[02:11] <rakudo_svn> r29782 | pmichaud++ | * Patch courtesy Schwern++.

[02:19] <TimToady> perl6: say "howdy"

[02:19] <p6eval> elf 21559: OUTPUT[howdy␤]

[02:19] <p6eval> ..pugs: OUTPUT[howdy␤]

[02:19] <p6eval> ..rakudo 29782: OUTPUT[howdy␤]

[02:19] <Alias__> perl6: system('ls');

[02:20] <p6eval> elf 21559:

[02:20] <p6eval> ..OUTPUT[Aside␤deleteme10230.dump␤deleteme10230.p6␤deleteme10257.dump␤deleteme10257.p6␤deleteme10899.dump␤deleteme10899.p6␤deleteme10945.dump␤deleteme10945.p6␤deleteme10994.dump␤deleteme10994.p6␤deleteme11077.dump␤deleteme11077.p6␤deleteme11127.dump␤deleteme11127.p6␤deleteme11230.dump␤del...

[02:20] <p6eval> ..pugs: OUTPUT[*** Unsafe function 'system' called under safe mode␤    at /tmp/MtXCu9fzLJ line 1, column 1-13␤]

[02:20] <p6eval> ..rakudo 29782: OUTPUT[Could not find non-existent sub system␤current instr.: '_block11' pc 18 (EVAL_11:13)␤]

[02:20] <Alias__> perl6: while(1) { }

[02:21] <Alias__> ...

[02:21] <p6eval> elf 21559: OUTPUT[Parse error in: /tmp/CvZNmLUDnP␤panic at line 1 column 0 (pos 0): Can't understand next input--giving up␤WHERE: while(1) { }␤WHERE:/\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:76:in `scan_unitstopper'␤  STD_red/std.rb:224:in `comp_unit'␤  STD_red/std.rb:210:in

[02:21] <p6eval> ..`...

[02:21] <p6eval> ..pugs: No output (you need to produce output to STDOUT)

[02:21] <p6eval> ..rakudo 29782: No output (you need to produce output to STDOUT)

[02:22] <TimToady> perl6: say "hi"

[02:22] <p6eval> elf 21559: OUTPUT[hi␤]

[02:22] *** alester left
[02:22] <p6eval> ..pugs: OUTPUT[hi␤]

[02:22] <p6eval> ..rakudo 29782: OUTPUT[hi␤]

[02:32] *** bacek joined
[02:37] *** xinming_ joined
[02:49] *** xinming left
[03:07] *** elmex_ joined
[03:13] *** justatheory joined
[03:15] *** yewenbin joined
[03:20] <pugs_svn> r21560 | lwall++ | [Cursor] continue to recover from speed-induced bugs

[03:22] *** elmex left
[03:23] *** elmex_ is now known as elmex

[03:23] <pugs_svn> r21561 | leto++ | Fix test which was wrongly expecting the returned value to have an angle outside of -pi <= theta <= pi .

[03:31] *** Alias__ left
[03:58] <pugs_svn> r21562 | lwall++ | [STD] allow ::{'$var'} as special degenerate case of name both beginning and ending with ::

[04:06] <pugs_svn> r21563 | lwall++ | [STD] generalize array shapes to be sequence of [], {}, or () so we can parse (-->Type)

[04:10] *** Schwern left
[04:10] <speckbot> r14570 | larry++ | Allow stackable subscript declarations and (-->type)

[04:20] *** alester joined
[05:26] *** xinming joined
[05:35] *** xinming_ left
[05:46] *** Psyche^ joined
[05:50] *** justatheory left
[05:55] *** coumbes left
[05:55] *** sri_work_ left
[05:59] *** Patterner left
[05:59] *** Psyche^ is now known as Patterner

[06:00] *** Limbic_Region left
[06:00] *** Schwern joined
[06:04] *** justatheory joined
[06:17] *** Lorn left
[06:20] *** PZt is now known as spres

[06:20] *** spres is now known as PZt

[06:31] *** xinming_ joined
[06:37] *** justatheory left
[06:45] *** xinming left
[06:46] *** alester left
[06:54] *** perlbot left
[07:04] *** bacek left
[07:21] *** sri_work joined
[07:38] *** xinming_ left
[07:40] *** iblechbot joined
[07:42] *** xinming joined
[07:53] *** a-jing joined
[07:53] *** a-jing left
[08:01] *** fridim_ joined
[08:11] *** pmurias joined
[08:13] *** ludan joined
[08:24] *** iblechbot left
[08:34] <pmurias> ruoso: i'm implementing Frame.clone, and will write a Code which takes a slime frame

[08:47] <pugs_svn> r21564 | fglock++ | [v6.pm] added all(), any(), true(), not()

[08:52] *** Schwern left
[08:56] *** bbkr left
[08:56] *** bbkr joined
[08:57] *** pmurias left
[08:57] *** ruoso left
[08:57] *** agentzh left
[08:57] *** ingy left
[08:57] *** nnunley left
[08:57] *** rlb3 left
[08:57] *** silug left
[08:57] *** r0bby left
[08:57] *** pmurias joined
[08:57] *** ruoso joined
[08:57] *** agentzh joined
[08:57] *** ingy joined
[08:57] *** nnunley joined
[08:57] *** r0bby joined
[08:57] *** silug joined
[08:57] *** rlb3 joined
[09:00] *** chris2 joined
[09:09] *** charsbar joined
[09:09] *** hanekomu joined
[09:17] *** Southen joined
[09:23] *** mtrimpe joined
[09:24] *** charsbar_ left
[09:31] *** charsbar_ joined
[09:31] *** yewenbin left
[09:35] *** mtrimpe left
[09:37] *** revdiablo joined
[09:40] <pmurias> TimToady: %Cursors::lexers do *get* poisoned

[09:41] <pmurias> instead of debuging metadebugging code i should have just checked that

[09:47] *** masak joined
[09:49] *** charsbar left
[09:54] <pugs_svn> r21565 | pmurias++ | improved show_changed_vars which proved that %Cursor::lexers was getting poisoned

[09:56] <pmurias> TRE segfaults after a few tests anyway if %Cursor::lexers get set to ();

[10:00] *** pmurias left
[10:01] *** pmurias joined
[10:17] * zamanfou is now away: In the rain my tears are forever lost.

[10:25] *** pbuetow joined
[10:25] *** hanekomu left
[10:26] *** kanru left
[10:30] *** kanru joined
[10:58] *** meppl joined
[10:59] *** pmurias left
[11:46] *** jan_ left
[12:10] *** rindolf joined
[12:22] *** fridim_ left
[12:25] *** a-jing joined
[12:25] *** a-jing left
[12:31] *** ruoso left
[12:32] *** fridim_ joined
[13:02] *** chris2 left
[13:05] *** pmurias joined
[13:16] <pugs_svn> r21566 | fglock++ | [v6.pm] rx() parser fixed

[13:17] <pugs_svn> r21567 | fglock++ | [v6.pm] fixed last commit

[13:29] *** sri_work_ joined
[13:31] *** sri_work left
[13:34] *** jan joined
[13:45] *** wknight8111 joined
[13:49] <pugs_svn> r21568 | fglock++ | [PCR] fixed name mangler

[13:51] *** icwiener joined
[13:58] *** wknight8111 left
[14:13] *** b_jonas joined
[14:25] <pugs_svn> r21569 | fglock++ | [v6.pm] smartmatch fixes

[14:31] <pugs_svn> r21570 | pmurias++ | [elf] removed old on_smop attempts

[14:45] <pugs_svn> r21571 | pmurias++ | [STD]

[14:45] <pugs_svn> r21571 | pmurias++ | teststd prints out the failed tests at the end

[14:45] <pugs_svn> r21571 | pmurias++ | commented out a line of code which was meant add a label to the COMPILING namespace

[14:47] *** fridim_ left
[14:59] *** jhorwitz joined
[15:01] <masak> perl6: say "I like pie".HOW

[15:01] <p6eval> elf 21571: OUTPUT[Can't locate object method "HOW" via package "I like pie" (perhaps you forgot to load "I like pie"?) at (eval 117) line 3.␤ at ./elf_f line 3861␤]

[15:01] <p6eval> ..pugs: OUTPUT[^Str␤]

[15:01] <p6eval> ..rakudo 29799: OUTPUT[get_string() not implemented in class 'P6metaclass'␤current instr.: 'print' pc 12259 (src/gen_builtins.pir:7802)␤]

[15:04] <pugs_svn> r21572 | fglock++ | [v6.pm] improved smartmatching

[15:10] *** rindolf left
[15:15] <pmurias> a macro definition should create a new grammar, and parse using it?

[15:20] *** Lorn joined
[15:23] *** iblechbot joined
[15:34] *** Lorn_ joined
[15:44] *** Chillance joined
[15:46] *** Lorn left
[15:50] <pugs_svn> r21573 | fglock++ | [v6.pm] fixed 'if'

[15:57] *** araujo left
[15:59] *** kanru left
[16:13] *** kanru joined
[16:17] *** PZt left
[16:30] *** fridim_ joined
[16:33] *** cognominal_ joined
[16:33] *** chris2 joined
[16:36] *** alester joined
[16:38] *** eternaleye left
[16:42] *** cognominal__ left
[16:45] *** masak left
[16:50] <pugs_svn> r21574 | fglock++ | [v6.pm] improved perl(), slurp()

[17:16] *** cognominal__ joined
[17:17] <moritz_> re

[17:17] <pmurias> TimToady: the segfault is cause by a memory leak

[17:17] <pmurias> moritz_: hi

[17:23] *** cognominal_ left
[17:45] *** cls_bsd left
[17:52] *** meppl left
[18:09] <pugs_svn> r21575 | moritz++ | [spec] untodo a test in inheritance.t, schwern++

[18:10] <Auzon> hi moritz_

[18:11] <moritz_> hi Auzon 

[18:12] * moritz_ just returned after a long weekend wihtout internet access :/

[18:13] <Auzon> I've been working on the regex tests, and I've noticed that rakudo supports the /foo/ form but not m/bar/

[18:13] <Auzon> the latter parsefails

[18:13] <moritz_> did you write a ticket already?

[18:14] <Auzon> Not yet. It was late and I wanted to be coherent :)

[18:15] <moritz_> hehe ;-)

[18:16] <Auzon> I also have an odd segfault in spectest_regression in perl.t of all places.

[18:16] <moritz_> is your checkout clean?

[18:16] <moritz_> and did you do a make realclean recently?

[18:16] <moritz_> it works fine here

[18:16] *** meppl joined
[18:17] <moritz_> http://news.oreilly.com/2008/07/larry-wall-at-oscon-open-sourc.html if you haven't seen it already ;-)

[18:17] <lambdabot> Title: Larry Wall at OSCON: Open Source as a Parenting Experience | O'Reilly News, http://tinyurl.com/5ostxk

[18:17] <Auzon> I did a make realclean and built stuff as usual. I'll investigate a bit more.

[18:18] <moritz_> is 'svn diff' empty?

[18:18] <Auzon> I'll check

[18:18] <Auzon> When I tried this last night, it worked if I ran the version in pugs but not the version that the spectest_regression checked out.

[18:19] <moritz_> scary ;)

[18:22] * moritz_ wonders why Schwern sent a 4 lines patch to RT although he has a pugs commit bit

[18:23] <moritz_> probably didn't know the tests are hosted there

[18:24] <pmurias> &

[18:25] <Auzon> Yeah. I have the same issue as last night. I'll try the file on a different host to see if I can duplicate the segfault

[18:25] <pugs_svn> r21576 | fglock++ | [v6.pm] added tests

[18:30] <Auzon> Odd. The same file works elsewhere

[18:38] <moritz_> http://perlgeek.de/blog-en/perl-6/huffman-tree-with-rakudo.html

[18:38] <lambdabot> Title: blog | Perlgeek.de Blog

[18:39] <Auzon> cool :)

[18:40] <moritz_> yes ;)

[18:40] <moritz_> pmichaud will like that, some more positive press for rakudo ;-)

[18:44] <pugs_svn> r21577 | fglock++ | [v6.pm] updated MANIFEST

[18:46] <moritz_> btw I found that blosxom (perl based blog system) integrates very nicely with my home-made offline CMS

[19:06] *** ingyfoo joined
[19:10] *** justatheory joined
[19:12] <Auzon> moritz_, have you see the files t/regex/p6regex/p6regex.t and t/regex/p6regex/regex_tests?

[19:13] <Auzon> I'm trying to think of how to get them to run under Rakudo, but it's a challenge since we have no split or s///

[19:14] <Auzon> I'm thinking about making a p5 script to kludge around it, or maybe changing the format of the test file somehow

[19:14] *** justatheory left
[19:14] * moritz_ looks

[19:16] <moritz_> the substitution of the file name can be removed, just use a fixed path like t/spec/S05-regex/regex_tests or whatever

[19:17] <moritz_> most of the substitions on $target can be made with .trans, which cjfields++ implemented in rakudo

[19:17] <moritz_> and maybe just ignore those tests that contain stuff that can't be substituted right now?

[19:17] <Auzon> Well, the simple substitutions aren't a problem since I can use .substr

[19:18] *** ingy left
[19:21] <pugs_svn> r21578 | fglock++ | [PCR] version 0.35

[19:23] <pugs_svn> r21579 | fglock++ | [v6.pm] version 0.028  # >5600 tests

[19:49] *** Schwern joined
[19:53] *** chris2 left
[20:05] *** rindolf joined
[20:10] *** pbuetow left
[20:10] *** pbuetow joined
[20:11] *** r0bby left
[20:14] *** alester is now known as AndyAway

[20:24] <pmurias> TimToady: are you working on macroes right now? (I don't want to duplicate effort)

[20:25] *** r0bby joined
[20:44] <pugs_svn> r21580 | moritz++ | [spec] moved blocks/multi_sub.t to spec/

[20:47] *** Limbic_Region joined
[20:47] <pugs_svn> r21581 | moritz++ | [spec] moved proto tests out of S06-multi/type-based.t

[20:53] <rindolf> pmurias: "macros" - not "macroes".

[20:55] <Auzon> How hard would it be to get a $?FILE working in Rakudo?

[20:55] <Auzon> (just to tell the current file, or even the main file would be very helpful)

[20:56] <pmurias> rindolf: yes, sorry

[20:57] <rindolf> It's tomatoes and potatoes but macro and typos.

[20:57] <rindolf> macros and typos even.

[21:02] <pugs_svn> r21582 | moritz++ | [spec] partial fudge (and correction) of S06-multi/type-based.t, unfudge one

[21:02] <pugs_svn> r21582 | moritz++ | test in S12-class/inheritance.t

[21:02] <b_jonas> yeah, and either and neither and weird and caffeine but otherwise i before e except before c if it's pronounced as long e.

[21:02] <b_jonas> English spelling is just crazy.

[21:03] <moritz_> reminds me a bit of perl 5 ;-)

[21:03] <moritz_> it's crazy and inconsistent, and everybody uses it ;-)

[21:03] *** mncharity joined
[21:04] <pmurias> mncharity: hi

[21:05] <b_jonas> and I say crazy because I gave up writing "weird" in favor of "crazy" and "curious"

[21:05] <b_jonas> and "strange"

[21:06] *** eternaleye joined
[21:07] <pmurias> who invented english spelling?

[21:08] <moritz_> the British mostly ;-)

[21:09] *** araujo joined
[21:10] <pugs_svn> r21583 | moritz++ | [spec] fudged S06-multi/type-based.t for rakudo

[21:20] *** rlb3_ joined
[21:27] *** rlb3 left
[21:29] *** Schwern left
[21:45] *** iblechbot left
[21:50] <rakudo_svn> r29808 | moritz++ | [rakudo] added S06-multi/type-based.t to spectest_regression

[21:50] <rakudo_svn> r29808 | moritz++ |  +5 pass, +13 skip 

[21:52] *** justatheory joined
[21:54] <Auzon> moritz_: I think I'm going to defer working on p6regex.t until rakudo supports s///, $*FILE and either filehandle iteration or split. I was able to kludge in $*FILE support to Rakudo, but reading the input into lines seems too difficult at present.

[21:54] <moritz_> dosn't work with open() yet?

[21:55] <Auzon> open works, so does $fh.readline, but I can't seem to detect the end of the file.

[21:56] <moritz_> lemme check, perhaps there's an easy way

[21:56] <Auzon> OK

[21:57] <Auzon> .readline always seemed to return a defined value so I can't tell the difference between an empty line and EOF

[21:57] <Auzon> .eof isn't implemented. slurp works great, but I can't split it into lines. lines isn't implemented either :-/

[21:58] <moritz_> my @lines = =$handle; also doesn't seem to work

[21:58] <Auzon> No, even though IO.pir has code for the IOIterator object

[21:59] <moritz_> ok, I'd say stall the work, and write a ticket (in which you mention that > 500 tests hang on this feature ;-)

[21:59] <Auzon> :)

[22:01] <moritz_> debian has updates for my mail client - 9 CVEs :(

[22:06] <mncharity> hi pmurias :)

[22:10] <pmurias> re the compiler refactor, the argument against it was that someone replacing the compiler would have to now that it has an emitter and a parser

[22:11] *** rindolf left
[22:14] <pmurias> mncharity: rehi ;

[22:16] <Auzon> moritz_: Should I open up a bunch of tickets for each separate issue, or just request something (that appears to be) simple like .eof?

[22:16] <moritz_> yes.

[22:16] <moritz_> (ok, not very helpful)

[22:16] <moritz_> Auzon: open as many tickets as you feel like

[22:17] <moritz_> Auzon: multiple ones are more helpful, I guess

[22:17] <Auzon> Alright, sounds good. I'll submit a batch in an hour or so. break &

[22:19] <pmurias> sleep&

[22:19] *** pmurias left
[22:20] <moritz_> good idea, actually (to sleep)

[22:36] *** jhorwitz left
[22:41] *** ludan left
[22:42] <pugs_svn> r21584 | putter++ | [elf_g] temp() is now used for dynamically scoped variables.

[22:42] <pugs_svn> r21584 | putter++ | Code needing the old context var bogosity should stay with the frozen elf_f.

[22:42] <pugs_svn> r21584 | putter++ | [STD_red] Accept 'temp' as a scope_declarator.

[22:42] <mncharity> TimToady: STD.pm missing 'temp'.

[22:43] <mncharity> hmm, I wonder how much of the elf code STD will then accept

[22:44] *** icwiener_ joined
[22:44] *** b_jonas left
[22:45] <mncharity> Auzon: re p6regex.t, I also expect it to be useful to elf in a couple of weeks.

[22:51] <mncharity> @tell Auzon re reading lines, a cautionary tale - I've squandered a scary amount of life attempting workarounds for pugsbugs.  Man months.  Given that rakudo is actively developed, I suggest you try applying a very low threshold to asking "rakudo folks: I need to do X - can you find me a way to do it that works?", and shift to some unblocked aspect of test writing.

[22:51] <lambdabot> Consider it noted.

[22:52] <mncharity> Else you find at summer's end, you've spent a great deal of time wandering a maze of deadend passages, and debugging rakudo, rather than writing tests.

[22:52] <moritz_> mncharity: that's what Auzon has planned, if I understood it correctly

[22:52] <moritz_> bed &

[22:53] <mncharity> indeed.  but it was unclear how much struggle happened before deferring.

[22:53] <mncharity> I'm suggesting such struggle be carefully monitored and in general avoided.

[22:53] <mncharity> good night :)

[22:54] <mncharity> it's come up once or twice previously during the summer... but seemed an open issue.

[22:57] <mncharity> hmm, it's not even clear to me Auzon's time is well spent doing fudge annotations.

[22:58] <mncharity> s/well/best/

[22:59] *** icwiener left
[22:59] <mncharity> TimToady: re STD scope_declarator, and 'let'.

[23:00] <mncharity> I'd be happy to add them myself if you prefer. ;)

[23:26] *** mncharity left
[23:27] *** mncharity joined
[23:29] <pugs_svn> r21585 | putter++ | [STD] Added the 'let' and 'temp' scope_declarator's.

[23:37] <pugs_svn> r21586 | putter++ | [rx_on_re] Unbroke vis elf_g.  r21458 conjunction regression fixed.

[23:37] <pugs_svn> r21586 | putter++ | The r21458 commit message comment that it was 'working "better"' was incorrect.

[23:40] *** wknight8111 joined
