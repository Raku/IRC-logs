[00:02] *** Auzon joined
[00:08] *** wknight8111 is now known as wknight-away

[00:15] *** meteorjay joined
[00:19] *** Foke2 left
[00:20] *** eternaleye_ joined
[00:20] *** justatheory left
[00:23] *** eternaleye left
[00:23] *** eternaleye_ is now known as eternaleye

[00:29] *** bockmabe_ joined
[00:29] *** Psyche^ joined
[00:29] *** Patterner left
[00:29] *** Psyche^ is now known as Patterner

[00:30] *** rhr left
[00:30] *** rhr joined
[00:30] *** bockmabe left
[00:37] *** tobeya left
[00:41] *** jan_ left
[00:41] *** Auzon left
[00:47] *** meppl joined
[00:48] *** ep0ch joined
[00:49] <ep0ch> No.

[00:49] *** ep0ch left
[00:50] *** Limbic_Region left
[00:51] *** angelixd joined
[01:09] *** Onyxyte joined
[01:24] *** angelixd left
[01:42] *** eternaleye left
[02:11] *** Juerd_ joined
[02:15] *** Juerd_ left
[02:15] *** Juerd_ joined
[02:17] *** Juerd left
[02:20] <mncharity>  /me wonders what  my Int Num f() {};   means (to choose two random fulltypename's).

[02:22] *** Juerd_ is now known as Juerd

[02:22] *** eternaleye joined
[02:23] <[particle1> i can't see how that will parse

[02:23] *** [particle1 is now known as [particle]

[02:25] <[particle]> my Int of Num f() {}; will parse, but fail in the semantic analyzer, i suspect

[02:26] <[particle]> see fulltypename in http://svn.pugscode.org/pugs/src/perl6/STD.pm

[02:27] <mncharity> scope_declarator:my -> scoped -> <fulltypename>* <routine_declarator>

[02:27] <mncharity> it appears and intentional construct

[02:27] <[particle]> token scope_declarator:my       { <sym> <scoped> {*} }          #= my

[02:28] <mncharity> yes

[02:28] <[particle]> ah, i see it now.

[02:28] <[particle]> that should likely be a ?

[02:29] <mncharity> ah.  hmm.

[02:29] <[particle]> feel free to update. it'll get reverted if you're wrong

[02:29] <mncharity> though isn't  my Dog Animal $x;  valid?

[02:29] *** thoughtpolice joined
[02:29] <mncharity> or, um,   my Dog HeatSource $fido;

[02:29] <[particle]> i'll have to check the synopsis to be sure.

[02:30] <[particle]> imo it leads to ambiguity

[02:30] <[particle]> my Dog|Heatsource $fido; might work

[02:31] <[particle]> but my Array of Int Array of Num $x; is ambiguous

[02:31] <[particle]> or more simply my Array of Int Num

[02:32] <[particle]> i'm just not sure what multiple typenames allow you to do that it would be valid

[02:32] <mncharity> re changing STD.pm, I don't.  On the model that I am usual confused, and TT's few mistakes are of a recognizable flavor (non-local inconsistency), of which this case isn't.

[02:33] <mncharity> my *very* fuzzy recollection is they might be additional constraints.  Eg, $fido can't be a cold dog.

[02:33] <mncharity> but that opinion plus five cents will get you... five cents.

[02:35] <mncharity> err, oops.  my example should have been   my Int Num sub f() {};

[02:37] <mncharity> i'm puzzling over whether the IR for sub declaration needs a variable node hanging off it, to handle the details of that &f .

[02:40] <mncharity> ah well.  inline typenames for now, refactor later.

[02:47] <mncharity> TimToady: pluralized and scoped have a "'(' <signature> ')' <trait>*".  could that be made a subrule?

[02:52] *** alester joined
[02:55] *** justatheory joined
[02:55] <mncharity> TimToady: variable_decl special cases '=' and '.='.  Does that mean  my Foo $x += 3; is invalid?  for all "+=" ops other than = and .= ? 

[02:59] <mncharity>  /me wonders what to call the "scope typenames plurality" tuple, since its showing up in a lot of decls.  eg, DeclareSub     scope typenames plurality ident multisig traits block

[03:03] *** shachaf is now known as grhgh

[03:04] *** grhgh is now known as shachaf

[03:06] <mncharity> anyone have an opinion on whether to pull out some infix:foos as IR nodes?  And which?  Bind and Assign being two candidates.  an argument being it might simplify IR tree analysis.  but I'm not sure it actually does... might be better off with a is_bind? attribute on an Apply("infix:=",...) node.

[03:07] <mncharity> s/attribute/annotation/

[03:07] *** Auzon joined
[03:10] *** sargtim left
[03:15] *** LazyJim left
[03:21] <meppl> good night

[03:21] *** wknight-away left
[03:24] *** meppl left
[03:29] <mncharity> good night

[03:30] <mncharity> TimToady: in param_var, it seems like <?{ $<sigil> eq '&' }> <?ident> :: <ident=sublongname> eats and discards an ident?

[03:35] * ingy is bored. know any good projects I can work on?

[03:36] <mncharity> elf! :)

[03:37] <ingy> happy fool's day, #perl6!

[03:38] <mncharity> <render in deep att-tv-commercial voice>"Have you ever wanted to write a p6 backend?  A compiler?  A prelude?  _You will._"</>

[03:38] <mncharity> doh

[03:38] <mncharity> :)

[03:38] <mncharity> almost made it.  only 1/2 hour left.  drat.

[03:43] <pugs_svnbot> r20206 | putter++ | elf_d_src/Notes.txt: Start of an IRx1 "IR experimental 1" draft.

[03:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20206

[03:43] <lambdabot> Title: Changeset 20206 - Pugs - Trac

[04:28] *** r0bby left
[04:32] *** r0bby joined
[04:35] *** cmarcelo left
[04:46] *** Daveman left
[04:49] <pugs_svnbot> r20207 | putter++ | [elf_c] Some refactoring work.

[04:49] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20207

[04:49] *** Auzon left
[04:49] <lambdabot> Title: Changeset 20207 - Pugs - Trac

[04:50] *** mncharity left
[04:52] *** Daveman joined
[04:59] *** masak joined
[05:06] *** r0bby left
[05:06] *** r0bby joined
[05:15] *** wknight-away joined
[05:38] *** lambdabot left
[05:39] *** lambdabot joined
[05:39] *** Zygo left
[05:40] *** Zygo joined
[05:47] *** alester left
[05:50] *** jan_ joined
[05:54] *** cycom joined
[05:54] *** Zygo left
[05:55] *** Zygo joined
[06:02] *** Aankhen`` joined
[06:15] *** justatheory left
[06:20] *** wknight-away left
[06:35] *** Auzon joined
[06:37] *** syle joined
[07:15] *** aindilis left
[07:15] *** aindilis joined
[07:22] *** iblechbot joined
[07:30] *** jan_ left
[07:58] *** dalek left
[07:58] *** dalek joined
[09:26] *** chris2 joined
[09:27] *** Helios- left
[09:27] *** Helios- joined
[09:30] *** corneliu1_ joined
[09:32] *** corneliu1_ is now known as c9s

[09:33] *** Helios- left
[09:34] *** Helios- joined
[09:45] *** do joined
[09:45] *** do left
[09:46] *** ruoso joined
[10:05] *** meppl joined
[10:08] *** orafu joined
[10:46] *** Aankhen`` left
[10:46] *** Aankhen`` joined
[11:15] *** Aankh|Clone joined
[11:27] *** iblechbot left
[11:33] *** Aankhen`` left
[11:41] *** chris2 left
[11:42] *** IllvilJa joined
[11:46] *** iblechbot joined
[11:46] *** JDlugosz joined
[11:47] <JDlugosz> Hello world

[11:48] *** Aankh|Clone left
[11:48] <JDlugosz> Hello world

[12:00] *** Onyxyte left
[12:06] *** JDlugosz left
[12:07] *** chacha_chaudhry joined
[12:13] *** Aankhen`` joined
[12:31] *** alc joined
[12:43] *** Aankhen`` left
[12:48] *** Aankhen`` joined
[12:52] *** thoughtpolice left
[13:08] *** Muixirt joined
[13:21] *** eternaleye left
[13:21] *** eternaleye joined
[13:29] *** iblechbot left
[13:39] *** eternaleye left
[13:46] *** jhorwitz joined
[13:49] *** LazyJim joined
[13:49] *** cmarcelo joined
[13:51] *** TJCRI joined
[13:52] *** pmurias joined
[14:01] *** alc left
[14:06] *** Auzon left
[14:08] *** iblechbot joined
[14:15] *** DarkWolf84 joined
[14:35] *** alester joined
[14:39] *** IllvilJa left
[14:51] *** jan_ joined
[15:04] *** diotalevi joined
[15:04] *** diotalevi left
[15:08] *** masak left
[15:12] *** rhandom joined
[15:26] *** c9s left
[15:31] *** justatheory joined
[15:39] *** chacha_chaudhry left
[15:40] *** alc joined
[15:42] <allbery_b> whoa.  it's audrey!  (on list)

[15:53] *** avar left
[15:54] *** avar joined
[15:54] *** lisppaste3 left
[16:10] *** lisppaste3 joined
[16:21] *** eternaleye joined
[16:32] *** fagzal joined
[16:32] *** Auzon joined
[16:35] *** wtgee joined
[16:35] *** syle left
[16:36] *** fagzal left
[16:38] *** jan_ left
[16:41] *** nwc10 joined
[17:00] *** peeps[work] joined
[17:01] *** mj41___ joined
[17:03] *** peepsalot left
[17:03] *** smtms left
[17:03] *** pjcj left
[17:03] *** pravus left
[17:03] *** silug left
[17:03] *** zostay left
[17:03] *** mj41__ left
[17:03] *** diakopter left
[17:03] *** cookys left
[17:05] *** pravus joined
[17:05] *** zostay joined
[17:05] *** cookys joined
[17:05] *** diakopter joined
[17:06] *** pmurias left
[17:07] *** mncharity joined
[17:08] *** Psyche^ joined
[17:08] *** smtms joined
[17:11] *** Foke2 joined
[17:13] *** rhandom left
[17:13] *** BinGOs_ joined
[17:14] *** smtms left
[17:16] *** BinGOs left
[17:17] *** BinGOs_ is now known as BinGOs

[17:18] *** Auzon left
[17:20] *** peepsalot joined
[17:22] *** smtms joined
[17:25] *** Patterner left
[17:25] *** Psyche^ is now known as Patterner

[17:34] <pugs_svnbot> r20208 | lwall++ | [STD] inside of () and [] should be semilist, not statementlist

[17:34] <pugs_svnbot> r20208 | lwall++ | [Cursor5] s:g/warn/print STDERR/ because warn makes debugger too verbose

[17:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20208

[17:34] <lambdabot> Title: Changeset 20208 - Pugs - Trac

[17:45] *** ruoso left
[17:52] <[particle]> "i don't need a jet to get jet lagged" sounds more like a dylan quote than a wall quote.

[17:53] *** barney joined
[18:03] *** zostay_ joined
[18:03] *** zostay_ left
[18:16] *** TJCRI left
[18:16] <pugs_svnbot> r20209 | putter++ | [elf_c] Started adding use().  Refactoring towards runtime-swappable compilers.

[18:16] <pugs_svnbot> r20209 | putter++ | ../elf_c -x -o ../elf_c1 ElfC.pm  now works.

[18:16] <pugs_svnbot> r20209 | putter++ | elf_c can no longer be compiled by elf_b, only by itself.

[18:16] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20209

[18:16] <lambdabot> Title: Changeset 20209 - Pugs - Trac

[18:21] *** tobeya joined
[18:55] *** peepsalot left
[18:57] *** peepsalot joined
[18:58] *** peepsalot left
[18:59] *** peepsalot joined
[19:00] *** peepsalot left
[19:03] *** peepsalot joined
[19:10] <mncharity> so quiet

[19:11] <nwc10> just the tumbleweed^Wcommits rolling through

[19:12] *** barney left
[19:12] *** kcwu left
[19:12] *** yahooooo left
[19:12] *** stevan_ left
[19:12] *** agentzh left
[19:12] *** jjore left
[19:13] <mncharity> :)

[19:15] *** silug joined
[19:16] *** barney joined
[19:16] *** kcwu joined
[19:16] *** yahooooo joined
[19:16] *** stevan_ joined
[19:16] *** agentzh joined
[19:16] *** jjore joined
[19:17] *** alc left
[19:18] <pmichaud> which is better, lots of discussion and no commits, or vice-versa?  ;-)

[19:19] <nwc10> light is better than heat

[19:22] <mncharity> lol #re which is better

[19:22] *** ruoso joined
[19:23] <mncharity> hi ruoso

[19:23] <ruoso> hi mncharity 

[19:23] <mncharity>  /me ponders 'light is better than heat'

[19:24] <nwc10> long mailing list threads can end up being referred to as "more heat than light'

[19:24] *** rindolf joined
[19:25] <nwc10> the sort that end up as a lot of arguments, and little or no progress

[19:25] <mncharity> right

[19:28] *** pmurias joined
[19:29] <pmurias> mncharity: Apply can be replaced by Call

[19:30] <mncharity> in elf_d's IRx1?

[19:30] <pmurias> yes

[19:30] *** barney left
[19:31] <mncharity> currently Apply is function application, Call is method call.

[19:31] *** barney joined
[19:32] <pmurias> function application is also method call

[19:32] <mncharity> nod

[19:32] *** thoughtpolice joined
[19:32] <pmurias> the hard part is the method name

[19:33] <mncharity> err, un-nod.  I'm unclear.

[19:33] *** barney left
[19:33] <mncharity> I don't have a clear concept of how methods and subs are different.

[19:34] <mncharity>  /me goes to read Snn...

[19:34] <mncharity> http://feather.perl6.nl/syn/S06.html

[19:34] <lambdabot> Title: S06

[19:35] <pmurias> &foo(123) is &foo."postcircumfixfix:<( )>"(123)

[19:35] <pmurias> &foo(123) is &foo.postcircumfixfix:<( )>(123)

[19:36] <mncharity> really?

[19:37] <pmurias> yes

[19:38] <mncharity> spec?

[19:38] <pmurias> indirectly

[19:39] <pmurias> grep for  postcircumfix:<( )>

[19:39] <pmurias> and .postcircumfix:<[ ]>

[19:40] <pmurias> shower&

[19:42] <mncharity> http://feather.perl6.nl/syn/ "Google Search the Synopses" is broken :(

[19:42] <lambdabot> Title: Official Perl 6 Documentation

[19:42] <pmurias> (not yet) ;)

[19:42] <pmurias> mncharity: i use ack

[19:42] <mncharity> ack?

[19:42] <alester> ack!

[19:42] <alester> http://petdance.com/ack/

[19:42] <lambdabot> Title: ack -- better than grep, a power search tool for programmers

[19:42] <alester> A standard tool for Parrot folks.

[19:43] * [particle] eats ack for breakfast

[19:43] <pmurias> alester: is it especialy needed for parrot work?

[19:43] <alester> It's very helpful.

[19:43] <alester> most Parrot people use it.

[19:43] <[particle]> c code, perl code, pir code. ack helps me search only the files i'm interested in inside the parrot repo

[19:44] <mncharity> so grep-like.  but... oh, are the Snn in the pugs tree?

[19:44] <pmurias> i just use as a grep with perl5 syntax

[19:44] <[particle]> svn co http://svn.perl.org/perl6/doc/trunk

[19:44] <lambdabot> Title: Revision 14538: /doc/trunk

[19:44] <mncharity> ahhhh

[19:45] *** cathya joined
[19:45] <mncharity> thanks! :)

[19:47] *** eternaleye left
[19:49] <TimToady> mncharity: <?ident> is just shorthand for <?before <ident> > there, I think

[19:50] <TimToady> and yes, all the declarative syntax could probably use a going over

[19:50] <TimToady> = and .= are pseudoassignment forms slurped by declrators.  my $x += 1 parses as (my $x) += 1 instead

[19:53] <TimToady> in general, assignops are mutators that make little sense on a new variable

[19:54] <mncharity> ok

[19:55] <[particle]> TimToady: did you see yesterday's comments on <fulltypename>* ?

[20:00] <TimToady> 0 or more is correct

[20:00] <TimToady> it's not ambiguous insofar as the parser can know which identifiers are predeclared as typenames

[20:01] <rindolf> Hi all!

[20:01] <rindolf> TimToady: (and everyone) You may wish to review http://www.shlomifish.org/same-as-perl.html before I publish it.

[20:01] <TimToady> phone &

[20:02] <mncharity> pmurias: While S02 says "The C<Callable> role implies the ability to support C<< postcircumfix:<( )> >>.", it also talks of function calls without a pcf().  eg, 'say 3'.  Perhaps 'say 3' should be interpreted 'pcf()(say,3)' or 'say.pcf()(3)'.  But that's not clear to me.

[20:03] *** Aankhen`` left
[20:05] *** IllvilJa joined
[20:11] <mncharity> 'say(3)' and 'say.(3)' don't parse using postcircumfix.  though that's not definitive, as, for instance, neither does 'while', but one could argue the parser should emit  'statement_control:while(...)' and the IR shouldn't have a While or Loop node.

[20:12] <mncharity> s/neither does 'while'/'while' is parsed specially/

[20:12] <mncharity> s/specially/specifically/

[20:17] <mncharity> hmm.  Sub/Method/Macro decl could be collapsed into a RoutineDecl.  and Call/Apply/MacroApply collapsed into a Call.  RoutineDecl would still need a flag distinguishing them, so it's not really a collapse, just a refactoring.

[20:18] <mncharity> Call could be a real collapse.

[20:19] <mncharity> but I'm still unclear on the connection between Call and postcircumfix:<( )>, and if they are distinct, whether function application and method call are also distinct, in which case Call is just a refactoring as well.

[20:21] <mncharity> And a potentially less interesting one.

[20:22] <mncharity> (if emitters/analysis generally wishes to treat the cases differently)

[20:22] <mncharity>  /me puzzled.  thoughts?

[20:23] *** rindolf left
[20:25] <mncharity> rindolf is a Llama?

[20:28] <pmurias> mncharity: pcf = ?

[20:28] *** chris2 joined
[20:28] <mncharity> postcircumfix

[20:30] <Juerd> Does Perl 6 have a way to indicate that of a certain set of parameters, only one may be given?

[20:31] <Juerd> e.g. :html or :text or :xhtml or :yaml

[20:31] <Juerd> Or does it have to be :type<htlm>, :type<text>, :type<xhtml>, :type<yaml> (lots of typing)

[20:31] <mncharity> so there are two optional parameters, and only one may be set?  don't know of such.

[20:31] <Juerd> Yes

[20:32] <pmurias> TimToady: could you clarify the corespondence between function application and postcircumfix:<( )>?

[20:34] <mncharity> assert [$html,$text,$xhtml,$yaml].count_defined == 1  ;)

[20:34] <mncharity> assert_only_one_defined $html,$text,$xhtml,$yaml;

[20:34] <mncharity> s/only/exactly

[20:37] *** meppl left
[20:37] *** iblechbot left
[20:47] *** justatheory left
[20:48] *** alester is now known as andyaway

[20:59] <TimToady> Juerd: just use two different multi sigs

[20:59] <Juerd> TimToady: Oh, of course!

[20:59] <Juerd> TimToady: Makes me happy ):

[20:59] <Juerd> Eh

[20:59] <Juerd> :)

[21:00] <Juerd> Smileys should have parity 

[21:00] <Juerd> and error correction

[21:01] <TimToady> pmurias: I can't clarify it unless I know what the question is :)

[21:05] <pmurias> TimToady: is &foo.postcircumfix(...) equivalent to &foo(...)

[21:06] <pmurias> ?

[21:07] *** jhorwitz left
[21:07] *** Auzon joined
[21:08] *** spx2 joined
[21:08] <spx2> hello

[21:08] <Juerd> IIRC, it's &foo.postcircumfix:«( )»(...)

[21:08] <Juerd> Hi

[21:08] <spx2> how is perl6 doing today ?

[21:08] <Juerd> spx2: Rakudo got IO.

[21:08] <spx2> Juerd: cool !

[21:08] <Juerd> So I guess Perl 6 is happy.

[21:08] <spx2> Juerd: you mean all packages in IO namespace ?

[21:09] <spx2> Juerd: or just "generic" IO ?

[21:11] <TimToady> it is likely that the arguments to &foo.postcircumfix:«( )»(...) would be the same as the arguments to &foo.(...)

[21:11] <Juerd> spx2: Simple IO

[21:11] <TimToady> though that doesn't necessarily generalize to other postcircumfixes

[21:11] <spx2> Juerd: ok thanks

[21:12] <Juerd> TimToady: I see recursion ;)

[21:12] <TimToady> for instance, there might be some remapping from .[] to .postcircumfix:<[ ]>()

[21:13] <TimToady> yes, well, the buck stops somewhere in there...

[21:15] <TimToady> in general, the concept of .postcircumfix:<( )> as a standalone operator is rather useless

[21:17] <mncharity> class A { sub f($obj;$y){} }; A.new.f(3)   # valid?

[21:18] <TimToady> I presume you meant : there, but no in any case

[21:18] <TimToady> subs are not visible through the single dispatcher

[21:18] <mncharity> re meant, yes.  re rest, ah, ok.

[21:19] *** pmurias left
[21:19] <TimToady> and the colon is probably illegal in an ordinary sub declaration

[21:19] <spx2> may I ask a question ?

[21:20] <TimToady> no

[21:20] <spx2> is there a page describing how perl6 funds are distributed ?

[21:20] <spx2> the funds from donations

[21:20] <spx2> I am interested in seeing the priorities of the short-term goals etc 

[21:20] <spx2> is that written somewhere online ?

[21:21] <pmichaud> spx2:  depends on what you mean by "perl6 funds"

[21:22] <spx2> pmichaud: the funds raised by donations

[21:22] <pmichaud> I don't think those are tied specifically to "Perl 6"

[21:22] <spx2> pmichaud: what do you understand by perl6 funds and what possible meanings would you find for that expression ?

[21:22] <pmichaud> i.e., those are just "perl funds"

[21:22] <pmichaud> or, better still, simply "TPF donations".  

[21:23] <pmichaud> (note:  I'm not an officer or even particularly knowledgeable about any of this, so take everything I say with a good size chunk of salt.)

[21:23] <spx2> pmichaud: ok , I'm interested in where do TPF donations go as in concrete work of someone

[21:23] *** wknight-away joined
[21:23] <spx2> pmichaud: ok no problem

[21:24] <spx2> pmichaud: you need not be an officer

[21:24] <pmichaud> spx2:  I think you want http://www.perlfoundation.org/grants

[21:28] *** syle joined
[21:43] *** nwc10 left
[21:43] *** andyaway left
[21:43] *** orafu left
[21:43] *** dalek left
[21:43] *** aindilis left
[21:43] *** maokt left
[21:43] *** pasteling left
[21:43] *** ilbot2 left
[21:43] *** Lunchy left
[21:43] *** Qiang left
[21:43] *** buubot left
[21:44] *** Moss23 joined
[21:45] *** nwc10 joined
[21:45] *** andyaway joined
[21:45] *** orafu joined
[21:45] *** dalek joined
[21:45] *** aindilis joined
[21:45] *** maokt joined
[21:45] *** pasteling joined
[21:45] *** ilbot2 joined
[21:45] *** Lunchy joined
[21:45] *** Qiang joined
[21:45] *** buubot joined
[21:47] *** araujo left
[22:02] *** Foke2 left
[22:06] *** Qiang left
[22:06] *** nwc10 left
[22:06] *** andyaway left
[22:06] *** Lunchy left
[22:06] *** orafu left
[22:06] *** maokt left
[22:06] *** buubot left
[22:06] *** ilbot2 left
[22:06] *** pasteling left
[22:06] *** aindilis left
[22:06] *** dalek left
[22:20] *** pjcj joined
[22:21] *** pjcj left
[22:21] *** pjcj joined
[22:22] *** pjcj left
[22:22] *** pjcj joined
[22:26] *** eternaleye joined
[22:26] *** nwc10 joined
[22:26] *** andyaway joined
[22:26] *** orafu joined
[22:26] *** dalek joined
[22:26] *** aindilis joined
[22:26] *** maokt joined
[22:26] *** pasteling joined
[22:26] *** ilbot2 joined
[22:26] *** Lunchy joined
[22:26] *** Qiang joined
[22:26] *** buubot joined
[22:29] *** jan_ joined
[22:38] *** nwc10 left
[22:40] *** meppl joined
[22:42] *** chris2 left
[22:49] *** eternaleye left
[22:51] *** ruoso left
[22:55] *** wtgee left
[23:01] *** thoughtpolice left
[23:02] *** Limbic_Region joined
[23:17] *** justatheory joined
[23:22] *** Moss23 left
[23:23] *** eternaleye joined
[23:25] *** Schwern joined
[23:32] *** felipe left
[23:33] *** peeps[work] left
[23:36] *** syle left
[23:40] *** jan_ left
[23:41] *** cmarcelo left
[23:48] *** luqui joined
[23:48] <pugs_svnbot> r20210 | putter++ | [elf_d] A first cut at elf_d, with a new IR.

[23:48] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20210

[23:48] <lambdabot> Title: Changeset 20210 - Pugs - Trac

[23:49] *** jan_ joined
