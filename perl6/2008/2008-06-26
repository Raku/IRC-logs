[00:04] <pmichaud> pugs:  say +(1..5)

[00:04] <p6eval> pugs: OUTPUT[5␤]

[00:04] <pmichaud> pugs: say +(10..20)

[00:04] <p6eval> pugs: OUTPUT[11␤]

[00:06] *** nowhea__ joined
[00:13] <dolmen> will have a look at this tomorrow

[00:14] *** apeiron_ joined
[00:14] *** dolmen left
[00:17] <pmichaud> potential release name:  http://picasaweb.google.com/patrick.michaud/Misc02?authkey=wXfw2HI43Lo

[00:17] <lambdabot> Title: Picasa Web Albums - Pm - misc, http://tinyurl.com/6dkcqf

[00:18] *** apeiron_ is now known as apeiron

[00:27] *** Limbic_Region left
[00:27] <pugs_svnbot> r21047 | lwall++ | [STD] ws memo bug, can now get about 4000 bytes into STD.pm

[00:27] <pugs_svnbot> r21047 | lwall++ | [Cursor5] show location in orig code more often

[00:37] *** justatheory left
[00:56] *** pbuetow left
[01:01] *** Limbic_Region joined
[01:11] *** felipe left
[01:15] *** drbean joined
[01:21] *** drbean left
[01:24] *** drbean joined
[01:31] <pugs_svnbot> r21048 | lwall++ | [STD] package name bugs, combined package_def with role_def

[01:31] <pugs_svnbot> r21048 | lwall++ | [Cursor5] can now do pretty trace in color

[01:31] <TimToady> STD5 now gets 4460 bytes into STD.pm before blowing up \o/

[01:41] <pmichaud> yay!  How long is STD.pm ?

[01:43] <Limbic_Region> right, but it did it consume the first 4460 bytes correctly :-)

[01:49] <Auzon> pmichaud: STD.pm is ~96000 chars including POD and comments

[01:50] <pmichaud> so, ~ 5% :-)

[01:51] <Auzon> But probably not 5% of the implementation.

[01:53] *** bacek_ joined
[02:01] *** cmarcelo joined
[02:06] *** FurnaceBoy joined
[02:10] *** bacek left
[02:13] *** cathya left
[02:17] *** nipotan is now known as nipotaway

[02:31] <pugs_svnbot> r21049 | Auzon++ | [vim syntax highlighting] fixed problems with my previous syntax highlighting change. qq{} doesn't work, not sure if I'm responsible for that or not.

[02:44] <rakudo_svn> r28699 | pmichaud++ | [rakudo]:

[02:44] <rakudo_svn> r28699 | pmichaud++ | * Add workarounds for argument checking of 0-ary functions (RT#56366).

[02:44] *** Limbic_Region left
[03:00] <pmichaud> pugs:  say (3..7).pick(10).elems

[03:00] <p6eval> pugs: OUTPUT[5␤]

[03:03] *** cmarcelo left
[03:05] *** elmex_ joined
[03:05] *** redicaps joined
[03:10] *** s1n left
[03:12] *** FurnaceBoy left
[03:18] *** drbean left
[03:18] *** Pzt joined
[03:21] *** elmex left
[03:21] *** elmex_ is now known as elmex

[03:25] *** drbean joined
[04:29] <pugs_svnbot> r21050 | Auzon++ | [gsoc_spectest] t/packages -> t/spec/S10-packages/*.t and t/spec/packages/*.pm. Modified a bunch of tests.

[04:29] <pugs_svnbot> r21050 | Auzon++ | packages used for testing are stored in t/spec/packages to avoid a hyphen in the name since hyphens are not legal package/variable names (without quoting them explicitly each time).

[04:29] <Auzon> files left in t/packages are out of date (or rely on unspecced features specific to Pugs)

[04:31] <Auzon> I'll revisit smartlinks and add a handful of tests that I originally intended to add before I got sidetracked reorganizing. But reorganizing is helpful anyway.

[04:56] *** hercynium left
[05:07] <Auzon> I'll be out tomorrow until late if at all. night all &

[05:11] *** justatheory joined
[05:11] *** Psyche^ joined
[05:23] *** Patterner left
[05:23] *** Psyche^ is now known as Patterner

[05:30] *** pbuetow joined
[05:38] *** justatheory left
[05:42] *** nothingmuch left
[05:42] *** nothingmuch joined
[05:45] *** alester joined
[05:53] *** felipe joined
[05:57] <alester> Should "my Num $num = 14" work?

[05:57] <alester> 'cause it goes crashy crashy for me.

[06:02] <rakudo_svn> r28703 | pmichaud++ | [rakudo]:

[06:02] <rakudo_svn> r28703 | pmichaud++ | * Add .pick methods and functions.

[06:02] <rakudo_svn> r28703 | pmichaud++ | * Add .elems methods and functions to Any.

[06:02] <rakudo_svn> r28703 | pmichaud++ | * Resolves RT#56266 and RT#49085.

[06:09] <rakudo_svn> r28704 | petdance++ | adding some type sanity

[06:12] *** araujo left
[06:16] *** nowhea__ left
[06:36] <rakudo_svn> r28705 | pmichaud++ | [rakudo]:

[06:36] <rakudo_svn> r28705 | pmichaud++ | * spectest-progress.csv update

[06:36] <rakudo_svn> r28705 | pmichaud++ | * 73 files, 944 passing tests as of 2008-06-26 00:00

[06:41] <pugs_svnbot> r21051 | pmichaud++ | S29-num/rand.t:  Update #?rakudo skip message to link to RT#56274.

[06:43] *** alester left
[06:58] <rakudo_svn> r28707 | pmichaud++ | [rakudo]:

[06:58] <rakudo_svn> r28707 | pmichaud++ | * Move .cis and .unpolar into Any.

[07:11] *** Pzt left
[07:15] <pugs_svnbot> r21052 | pmichaud++ | S29-num/complex.t:  update #?rakudo skip markers for new passing tests

[07:15] *** araujo joined
[07:29] <pmichaud> pugs:  say [1,2,3].join('-');

[07:29] <p6eval> pugs: OUTPUT[1-2-3␤]

[07:29] <pmichaud> pugs:  say ([1,2,3], 7).join('-');

[07:29] <p6eval> pugs: OUTPUT[1 2 3-7␤]

[07:29] <pmichaud> pugs:  say join('-', [1,2,3]);

[07:29] <p6eval> pugs: OUTPUT[-␤]

[07:30] <pmichaud> pugs:  say join('-', 1, 2, 3);

[07:30] <p6eval> pugs: OUTPUT[-␤]

[07:30] <pmichaud> pugs:  my @a = 1, 2, 3;  say join('-', @a);

[07:30] <p6eval> pugs: OUTPUT[-␤]

[07:30] <moritz_> not quite what expected ;)

[07:34] <moritz_> Auzon: in r21049 (vim syntax hilighting) you reverted my changes to the type names. Was that on purpose?

[07:36] <moritz_> rakudo: say [1,2,3].join('-')

[07:36] <p6eval> rakudo 28687: OUTPUT[1-2-3␤]

[07:36] <moritz_> I'm pretty sure that's correct

[07:36] <moritz_> rakudo: ([1,2,3], 4).join('-')

[07:36] <p6eval> rakudo 28687: RESULT["1 2 3-4"]

[07:36] <moritz_> I think that's also correct

[07:43] <pmichaud> pugs:  say [1,3,7].values;

[07:43] <p6eval> pugs: OUTPUT[137␤]

[07:43] <pmichaud> pugs:  say ([1,3,7], 2).values;

[07:43] <p6eval> pugs: OUTPUT[1 3 72␤]

[07:44] <pmichaud> pugs:  say ([1,3,7], 2).values.elems;

[07:44] <p6eval> pugs: OUTPUT[2␤]

[07:45] <pmichaud> pugs:  say [1,3,7].values.elems;

[07:45] <p6eval> pugs: OUTPUT[3␤]

[07:45] <pmichaud> rakudo: say [1,3,7].values.elems;

[07:45] <p6eval> rakudo 28687: OUTPUT[3␤]

[07:45] <pmichaud> rakudo: say [1,3,7].values.WHAT;

[07:45] <p6eval> rakudo 28687: OUTPUT[Array␤]

[07:46] <pmichaud> oh.

[07:46] <pmichaud> okay, I think I understand now.

[07:46] <pmichaud> although I'm still a little curious if [1,2,3].join('-')   should be  "1-2-3" or "1 2 3".

[07:47] <pmichaud> (since [1,2,3] is a Scalar)

[07:47] <pmichaud> wow, 2:44a here.  Time for sleep.

[07:50] <moritz_> pmichaud: scalar containers dispatch method calls to their stored objects

[07:50] <pugs_svnbot> r21053 | pmichaud++ | Update some skip messages in the test suite to include RT ticket numbers.

[07:52] <pmichaud> moritz_++  # good point.

[07:53] <pmichaud> afk

[07:54] <moritz_> sleep well ;)

[08:05] <pugs_svnbot> r21054 | lwall++ | [STD] bugs, bugs, bugs, bugs...now gets 11% through parsing itself

[08:08] *** a-jing joined
[08:08] *** a-jing left
[08:14] *** meppl joined
[08:18] *** smtms left
[08:19] *** smtms joined
[08:41] *** bacek_ left
[08:42] *** cognominal_ joined
[09:08] *** smtms left
[09:09] *** mj41__ joined
[09:09] *** mj41__ is now known as mj41

[09:21] *** icwiener joined
[09:23] *** Jedai joined
[09:27] *** mj41_ left
[09:29] *** |Jedai| joined
[09:29] *** jfredett_ joined
[09:29] *** Jedai left
[09:30] *** jfredett left
[09:30] *** jfredett_ is now known as jfredett

[09:30] *** smtms joined
[09:31] *** |Jedai| left
[09:35] *** masak joined
[09:36] *** Jedai joined
[09:45] *** xinming joined
[09:45] *** Jedai left
[09:50] *** broquain1 is now known as broquaint

[09:52] *** Jedai joined
[09:55] *** Jedai left
[09:58] *** Jedai joined
[10:02] *** xinming_ left
[10:09] *** bacek joined
[10:11] *** iblechbot joined
[10:17] *** pbuetow left
[10:17] *** pbuetow joined
[10:18] *** jan__ left
[10:19] *** a-jing joined
[10:19] *** a-jing left
[10:21] *** X-Scale joined
[10:22] *** meppl left
[10:50] *** icwiener left
[10:59] *** lisppaste3 left
[11:03] *** ruoso left
[11:04] *** jan joined
[11:04] *** iblechbot left
[11:16] *** chris2 joined
[11:24] *** b_jonas joined
[11:44] *** ruoso joined
[11:52] *** ggoebel left
[11:56] *** xinming_ joined
[12:02] *** xinming left
[12:04] *** xinming joined
[12:15] *** alester joined
[12:22] *** xinming_ left
[12:25] <pugs_svnbot> r21055 | pmichaud++ | Oops!  Be careful of $_ interpolation in "...".  (pmichaud--)

[12:28] <pugs_svnbot> r21056 | pmichaud++ | Clean up fudging in S29-num/int.t .

[12:29] <moritz_> pmichaud: do you ever sleep? ;-)

[12:40] <pmichaud> sure!

[12:40] *** BinGOs left
[12:41] *** BinGOs joined
[12:48] *** |Jedai| joined
[12:54] *** smtms left
[12:54] *** cmarcelo joined
[12:57] *** ispy_ joined
[12:58] *** alester left
[12:58] *** smtms joined
[13:01] *** ggoebel joined
[13:06] *** Jedai left
[13:07] *** iblechbot joined
[13:08] *** mjk joined
[13:11] <rakudo_svn> r28711 | pmichaud++ | [rakudo]:

[13:11] <rakudo_svn> r28711 | pmichaud++ | * Small update to postfix:<i>, so that (1i)i comes up with the

[13:11] <rakudo_svn> r28711 | pmichaud++ |   correct result.

[13:17] *** kolibrie left
[13:20] <Auzon> moritz_: probably not :) I'll look at it tonightish

[13:22] <moritz_> Auzon: maybe we should import type information from docs/p6types, rhr++ did assembly quite many there

[13:22] <pmichaud> pugs:  say (1i)i    # just curious

[13:22] <p6eval> pugs: OUTPUT[0 + 0i␤]

[13:23] <pmichaud> rakudo:  say (1i)i;   # updated, yet?

[13:23] <p6eval> rakudo 28687: OUTPUT[0+1i␤]

[13:23] <pmichaud> no.  Actually, 28687 is pretty old.

[13:27] <moritz_> oh, maybe I should start cron in the new chroot... 

[13:31] <gbacon> which svnbot does rakudo_svn run?

[13:31] <moritz_> gbacon: a perl 5 based  (not yet in any repo)

[13:31] <moritz_> rakudo:  say (1i)i;   # updated, yet?

[13:31] <p6eval> rakudo 28687: OUTPUT[0+1i␤]

[13:31] <moritz_> wrong chroot

[13:31] <moritz_> oh, it was actually a locked svn repo causing troubles

[13:33] *** kolibrie joined
[13:47] *** smtms left
[13:47] *** BinGOs left
[13:51] *** |mjk| joined
[13:52] *** smtms joined
[13:54] <moritz_> rakudo: sub a(Num $x) { say $x); a(1)

[13:54] <p6eval> rakudo 28714: OUTPUT[Missing '}' at line 1, near "); a(1)"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤]

[13:54] <moritz_> rakudo: sub a(Num $x) { say $x}; a(1)

[13:54] <p6eval> rakudo 28714: OUTPUT[Null PMC access in type()␤current instr.: 'a' pc 137 (EVAL_15:59)␤]

[13:59] *** BinGOs joined
[13:59] *** rdice joined
[14:02] *** TJCRI joined
[14:07] *** jhorwitz joined
[14:10] *** mjk left
[14:11] *** |mjk| left
[14:12] *** mjk joined
[14:13] <pmichaud> The "Null PMC access in type()" is probably worth an RT ticket.

[14:13] <pmichaud> rakudo:  say (1i)i;  # how about now?

[14:13] <p6eval> rakudo 28714: OUTPUT[-1+0i␤]

[14:13] <pmichaud> yay!

[14:14] <pmichaud> rakudo:   say (50..60).pick

[14:14] <p6eval> rakudo 28714: OUTPUT[56␤]

[14:15] <pmichaud> rakudo:   say (50..60).pick(5).join(' ')

[14:15] <p6eval> rakudo 28714: OUTPUT[52 57 53 55 60␤]

[14:15] <pmichaud> rakudo:   say (50..60).pick(*).join(' ')

[14:15] <p6eval> rakudo 28714: OUTPUT[52 54 53 50 59 58 60 55 56 57 51␤]

[14:15] <pmichaud> rakudo:   say 5.pick(5);

[14:15] <p6eval> rakudo 28714: OUTPUT[5␤]

[14:15] <pmichaud> rakudo:   say 5.pick(5, :repl);

[14:15] <p6eval> rakudo 28714: OUTPUT[55555␤]

[14:19] <[particle]> do you need the comma?

[14:23] *** alester joined
[14:23] <pmichaud> currently, yes.

[14:25] <pmichaud> I'm pretty sure that's the case for all named arguments (i.e., requiring commas between them and other arguments)

[14:26] *** FurnaceBoy joined
[14:33] *** hercynium joined
[14:37] <moritz_> rakudo: say 1 ~~ Int

[14:37] <p6eval> rakudo 28714: OUTPUT[1␤]

[14:37] <moritz_> rakudo: say 1 ~~ Num

[14:37] <p6eval> rakudo 28714: OUTPUT[0␤]

[14:38] *** pmurias joined
[14:38] <pmurias> pixie: say 23;

[14:38] <p6eval> pixie: OUTPUT[Subroutine from redefined at ElfCore5.pm line 741.␤Subroutine to redefined at ElfCore5.pm line 742.␤cp: cannot stat `lex/Perl/expect_term': No such file or directory␤Use of uninitialized value in numeric eq (==) at ../../src/perl6/STD5.pm line 3241.␤Use of uninitialized value in ...

[14:39] <pmurias> moritz: is it possible to expand the ...?

[14:39] <pmurias> well, _moritz:

[14:40] <moritz_> pmurias: I can execute the same from the command line

[14:40] *** ggoebel left
[14:40] <pmurias> i think the pixie: works only the warnnings hide the output

[14:41] <moritz_> aye

[14:41] <moritz_> pmurias: I think the best solution is to add a filter to pixie's output (before it is truncated)

[14:42] <pmurias> makes sense

[14:42] <moritz_> or (even easier from my POV) a pixie wrapper script

[14:42] *** xinming left
[14:42] <moritz_> that hides these warnings

[14:42] <moritz_> (atm length filtering is done before per-impl filtering - a bit stupid :)

[14:43] <pmurias> Maddingue: i'll fetch my laptop and code the wrapper

[14:43] <pmurias> s/Maddingue/moritz_

[14:44] <pmurias> cgi-irc nick completion sucks

[14:44] <[particle]> why can't you fix or disable the warnings in pixie?

[14:45] <pmurias> particle: the are genuine warnings, and most of them are emitted by things used by pixie

[14:45] <masak> moritz_++ # for http://www.perlmonks.org/?node_id=657862

[14:45] <pmurias> fetching laptop&

[14:46] *** pmurias left
[14:49] <moritz_> pixie: say 1;

[14:49] <p6eval> pixie: OUTPUT[Subroutine from redefined at ElfCore5.pm line 741.␤Subroutine to redefined at ElfCore5.pm line 742.␤cp: cannot stat `lex/Perl/expect_term': No such file or directory␤1␤]

[14:52] <moritz_> difference is that I recompiled STD5.pm in the mean time

[14:52] <moritz_> perl5.10.0 gimme5 STD.pm > STD5.pm # is that right?

[15:03] *** mjk left
[15:07] <rakudo_svn> r28715 | jonathan++ | [rakudo] Stub in Block, Ruotuine, Sub and Method PMCs and classes. Start using them for subs and methods (not for normal blocks yet - is a tad tickier).

[15:07] *** cjfields joined
[15:07] <moritz_> can I have multis with constants in the signature?

[15:07] *** FurnaceBoy left
[15:08] <moritz_> ie. multi sub divides(Int $x, Int $divisor){...}; multi sub divides(Int $x, 2) { ... }

[15:09] <b_jonas> moritz_: pattern matching of data? dunno

[15:10] <TreyHarris> moritz_: good point in email, i missed that particular concatenation.  I think TimToady will have to make a ruling here...

[15:11] *** Chillance joined
[15:12] <moritz_> TreyHarris: I hope he does

[15:13] <moritz_> TreyHarris: I think that atm Complex is intended to be completely outside the type structure of numeric types, which makes defining all those multis a real mess

[15:17] *** Lorn left
[15:18] <b_jonas> moritz_: it's even intended that way?

[15:18] <b_jonas> that's a pity

[15:18] <b_jonas> I like first class complex numbers

[15:19] <b_jonas> both because of the semantics and because of the implementation

[15:20] <moritz_> b_jonas: not entirely sure if it's intentend. I seem to recall that, but I forgot where I got that idea from

[15:26] *** justatheory joined
[15:33] *** jhorwitz left
[15:44] <pugs_svnbot> r21057 | rhr++ | [p6types] Adjust Num heirarchy, pending further clarification

[15:44] <pugs_svnbot> r21057 | rhr++ |           Note that most/all methods in Positional might really be in Any

[15:44] <pugs_svnbot> r21057 | rhr++ | 	  (although that would make Positional rather pointless)

[15:46] <moritz_> it wouldn't make Positional pointless, because it's what defines the @ sigial

[15:46] <moritz_> for example it holds the postcircumfix:<[ ]> method

[15:46] <masak> moritz_: I don't understand your question in the email thread "Type of literals"

[15:46] *** smtms_ joined
[15:47] <masak> if Foo isa Int, why wouldn't 1 be an Int too?

[15:47] <moritz_> masak: yes, but 1.WHAT would say Foo, not Int

[15:47] <masak> ah, yes

[15:47] <masak> though isa_ok would do the right thing

[15:47] <masak> then I understand your question

[15:47] <masak> and I agree that the test is likely wrong

[15:48] <moritz_> ok, we seem to have consensus here

[15:48] <masak> though I can't see how one could make the test fail without leaving 'standard' Perl 6

[15:49] <masak> they are, after all, literals

[15:49] <moritz_> the question is what the "standard" says about the type of literals

[15:49] <moritz_> which is what my question asks

[15:50] <masak> why shouldn't 'standard' Perl 6 guarantee that 1.WHAT eq 'Int'?

[15:50] <moritz_> to allow optimizations

[15:50] <masak> ah.

[15:50] *** smtms left
[15:50] <moritz_> or perhaps a not-so-contrieved example might be Ranges

[15:50] *** smtms_ is now known as smtms

[15:50] <masak> how so?

[15:50] <moritz_> (1^..5) might be implemented by a different class than (1..5)

[15:51] <masak> mm, ok

[15:51] <moritz_> or you could autmatically flatten short ranges into lists, if that happens to be more efficient

[15:52] <masak> yes.

[15:52] <masak> though that would require analysis about the surroundings

[15:52] <b_jonas> yep

[15:52] <[particle]> moritz: youd' have to do type punning if that's the case

[15:52] <[particle]> otherwise it's just wrong

[15:53] *** meppl joined
[15:53] <masak> because 3.5 ~~ 2..4 should not be flattened

[15:53] <[particle]> 1..2 ~~ List # ouch

[15:53] <moritz_> I hope Perl 6 lives long enough to motivate people to write really clever compilers

[15:53] <b_jonas> in ruby for example, 1 is a Fixnum, but you don't actually use Fixnum for anything, only its superclass Integer because integers are transparently upgraded to Bignums when they're large

[15:53] <masak> moritz_: people already write really clever compilers

[15:53] <b_jonas> Fixnums are just a more efficent representation for some Integers

[15:54] <moritz_> [particle]: ok, perhaps the Range to List autoconvertion was contrieved again ;)

[15:54] <b_jonas> it's only an implementation thing

[15:54] <moritz_> masak: not optimization wise, not for perl 6 ;)

[15:54] <masak> :)

[15:54] *** peepsalot joined
[15:55] <moritz_> "first make it run, then make it right, then make it fast"

[15:56] <masak> though a product is sometimes quite worthless before step 2

[15:56] <masak> and often of little interest before step 3

[15:56] <[particle]> you forgot TimToady's job, "first make it lex"

[15:56] <b_jonas> lol

[15:56] <moritz_> masak: yes, but for other developers it really helps to have something that runs ;)

[15:56] <moritz_> [particle]: ;-)

[15:57] <masak> moritz_: true

[15:57] *** jhorwitz joined
[15:57] <b_jonas> meh, if it's the kind of language where if it parses it almost always is correct, then you only need a syntax checker, not something that runs the programs

[15:58] <moritz_> I never encountered such a language

[16:00] <pmichaud> moritz_: btw, if you can get me a latest copy of your spectest_regression.csv grapher (or check it into the repo), I can automatically generate graphs and have them hosted on my server.

[16:00] <moritz_> pmichaud: I'll check it in a few minutes

[16:00] <pmichaud> or we could probably get them hosted on a feather* host

[16:01] <pmichaud> (my server has plenty of bandwidth, though.)

[16:01] * moritz_ doesn't care where it's hosted, but it looks nice on rakudo.de, so I'll keep a copy there ;)

[16:04] <moritz_> my MANIFEST diff contains +languages/perl6/t/01-sanity/09-types.t                      [perl6]

[16:04] <moritz_> should I commit that?

[16:05] <pmichaud> yes.  we have a couple of people who have been adding files to the repo but forgetting to update manifest

[16:06] <rakudo_svn> r28717 | moritz++ | [perl6] added tools/progress-graph.pl. Also added missing test file to

[16:06] <rakudo_svn> r28717 | moritz++ | MANIFEST

[16:11] <rakudo_svn> r28719 | moritz++ | [perl6] codingstandards

[16:13] *** Lorn joined
[16:15] *** masak left
[16:19] <TimToady>  /e

[16:20] <TimToady> not to mention \o

[16:20] * TimToady has to use o rather than o/ because his left shoulder is sore... :)

[16:29] *** hercynium left
[16:29] *** pmurias joined
[16:31] <pmurias> moritz_: it would be best to implement the error filtering in the evalbot

[16:31] *** kanru left
[16:33] <moritz_> pmurias: I trust your judgement there

[16:33] *** kanru joined
[16:33] <moritz_> pmurias: if you implement the filtering, I'll move the lenght filtering to happen after the per-implementation error filtering

[16:35] *** nowhea__ joined
[16:38] *** polettix joined
[16:50] <pmurias> moritz_: i added some hacks to ignore warnings under --quiet

[16:50] <pugs_svnbot> r21058 | pmurias++ | [pixie] the --quiet option dosn't print warnings

[16:50] <pmurias> pixie: say 4;

[16:50] <p6eval> pixie: OUTPUT[Subroutine from redefined at ElfCore5.pm line 741.␤Subroutine to redefined at ElfCore5.pm line 742.␤cp: cannot stat `lex/Perl/expect_term': No such file or directory␤4␤]

[16:50] <moritz_> pmurias: I svn up'ped now

[16:51] <moritz_> pixie: say 4

[16:51] <pmurias> pixie: say 4;

[16:51] <p6eval> pixie: OUTPUT[4␤]

[16:51] <p6eval> pixie: OUTPUT[4␤]

[16:51] <moritz_> W0OO00T

[16:51] <moritz_> pmurias++

[16:53] <pmurias> how does one get a pugs.blogs.com account?

[16:54] <moritz_> pmurias: first get a blogs.com account, then poke the right people(tm)

[16:54] <moritz_> it could be that I'm one of those, I'm not entirely sure

[16:55] *** nowhea__ left
[16:58] *** nowhea joined
[16:58] <moritz_> seems I'm not one of those[tm].

[16:58] <pugs_svnbot> r21059 | pmurias++ | [STD_red] fixed => handling (preclim is respected)

[16:58] <moritz_> pmurias: maybe ask those who already posted there?

[17:00] <moritz_> afk

[17:00] <pugs_svnbot> r21060 | cjfields++ | more tests

[17:02] <cmarcelo> audreyt: hello. are you deriving those separated packages for pugs from the svn? or there's sth extra? (/me just reading #haskell backlog)...

[17:06] <pmurias> @seen mncharity

[17:06] <lambdabot> I haven't seen mncharity.

[17:06] <pugs_svnbot> r21061 | pmurias++ | [elf] add elfX a unstable/less-hacky elf branch

[17:06] <pmurias> @seen moritz_

[17:06] <lambdabot> moritz_ is in #perl6. I last heard moritz_ speak 6m 32s ago.

[17:07] <audreyt> cmarcelo: no, I'll check them all into svn when I'm done with it...

[17:07] <audreyt> cmarcelo: alternatively! you can check them all into svn and nuke src/{Pugs,Main}*, if you feel like it

[17:07] <audreyt> and hack Makefile.PL to build third-party/Cabal and third-party/cabal-install 

[17:07] *** alanhaggai joined
[17:07] <audreyt> and generally redo the build system

[17:08] <audreyt> to be a shallow shim to cabal

[17:08] <audreyt> (bbl)

[17:08] <cmarcelo> nice.

[17:09] <cmarcelo> but keeping Cabal and cabal-install copies of our own in the tree?

[17:10] <audreyt> sure, if you're aiming for offline installation.

[17:10] <audreyt> (bbl for real)

[17:11] <cmarcelo> k

[17:16] *** nipotaway is now known as nipotan

[17:21] *** smtms left
[17:25] <moritz_> bak

[17:25] *** kolibrie_ joined
[17:27] *** kolibrie left
[17:27] *** kolibrie_ is now known as kolibrie

[17:32] *** pmurias left
[17:38] *** justatheory left
[17:51] *** vixey joined
[17:53] *** smtms joined
[18:06] *** ggoebel joined
[18:22] *** vixey` joined
[18:22] *** vixey left
[18:22] *** hercynium joined
[18:22] *** vixey` is now known as vixey

[18:26] *** apeiron_ joined
[18:29] *** zamolxes joined
[18:32] *** apeiron left
[18:32] *** apeiron_ is now known as apeiron

[18:32] *** justatheory joined
[18:33] *** cls_bsd left
[18:39] *** barney joined
[18:43] *** vixey left
[18:44] *** vixey joined
[18:49] *** polettix left
[18:54] *** ggoebel left
[19:03] <pugs_svnbot> r21062 | lwall++ | [Cursor5] BRACKET should restore outer language

[19:03] <pugs_svnbot> r21062 | lwall++ | [STD] parse :my correctly

[19:08] *** Alias_ left
[19:12] *** chris2 left
[19:18] *** jan left
[19:19] *** jan__ joined
[19:22] *** Lorn_ joined
[19:22] *** justatheory left
[19:27] *** justatheory joined
[19:29] *** hercynium left
[19:36] *** vixey left
[19:40] *** Lorn left
[19:46] *** vixey joined
[19:51] *** justatheory left
[19:54] *** hercynium joined
[20:15] *** justatheory joined
[20:15] *** jfredett_ joined
[20:20] *** pbuetow left
[20:20] *** pbuetow joined
[20:22] *** ispy_ left
[20:26] *** jfredett left
[20:31] *** FurnaceBoy joined
[20:33] *** riffraff joined
[20:36] *** ggoebel joined
[20:37] *** X-Scale left
[20:41] *** iblechbot left
[20:47] *** barney left
[20:49] *** cognominal_ left
[20:50] *** cognominal_ joined
[21:02] *** lisppaste3 joined
[21:08] *** hercynium left
[21:20] *** TJCRI left
[21:21] *** jhorwitz left
[21:30] <Lorn_> p6eval: say foo

[21:30] <Lorn_> say 4

[21:30] <Lorn_> ;

[21:30] <Lorn_> say 4;

[21:31] <moritz_> rakudo: say 4;

[21:31] <p6eval> rakudo 28729: OUTPUT[4␤]

[21:31] <Lorn_> how i test perl6 things?

[21:31] <moritz_> Lorn_: you have to talk to a particular implementation

[21:32] <moritz_> implementations are rakudo,pugs,elf,pixie,kp6,nqp,yap6

[21:33] <Lorn_> moritz_: :) if i has 2 arrays, $a = [0, 1, 2] , $b = [ 0, 1, 4, 5 ] i want to intersect( sorry for the bad english :P) and $intersect will be $intersect = [ 0, 1 ]

[21:33] <Lorn_> moritz_: how i did this with perl6? i remember that has something to help me with that..

[21:33] <moritz_> pugs: my @a = 1, 2, 3; my @b = 2, 3, 4; my @inter = grep { $_ ~~ @b } @a; say @inter.perl

[21:33] <p6eval> pugs: OUTPUT[*** ␤    Unexpected "@a"␤    expecting ",", ":" or operator␤    at /tmp/DNFIPN7fPU line 1, column 65␤]

[21:34] <moritz_> pugs: my @a = 1, 2, 3; my @b = 2, 3, 4; my @inter = grep { $_ ~~ @b }, @a; say @inter.perl

[21:34] <p6eval> pugs: OUTPUT[\()␤]

[21:34] <moritz_> not good ;)

[21:34] <Lorn_> :P

[21:34] <moritz_> best bet is to do it like in p5 and build a hash of one of those arrays

[21:35] <Lorn_> hey, 5.10 has smart match too ~~

[21:35] <moritz_> pugs: my @a = 1, 2, 3; my @b = 2, 3, 4; my %b{@b} = 1 xx @b; my @inter = grep { %b{$_} }, @a; say @inter.perl

[21:35] <p6eval> pugs: OUTPUT[\(2, 3)␤]

[21:35] <Lorn_> i dont have 5.10 at work :/ only at home

[21:35] <moritz_> much better ;)

[21:36] <Lorn_> :)

[21:36] <Lorn_> moritz_: do you have 5.10? 

[21:36] <Lorn_> i think that  my @a = 1, 2, 3; my @b = 2, 3, 4; my @inter = grep { $_ ~~ @b }, @a; say @inter.perl will work in 5.10

[21:37] <moritz_> it should (with some more parenthesis)

[21:37] <moritz_> perl5.10.0 -wle 'my @a = qw(a b c); my @b = qw(d c a); my @inter = grep { $_ ~~ @b } @a; print "@inter"'

[21:37] <moritz_> a c

[21:38] <moritz_> rakudo: say 3 ~~ (2, 3, 4)

[21:38] <Lorn_> moritz_: nice

[21:38] <p6eval> rakudo 28729: OUTPUT[Method 'ACCEPTS' not found for invocant of class 'List'␤current instr.: 'infix:~~' pc 10492 (src/gen_builtins.pir:6878)␤]

[21:38] * Lorn_ installing 5.10 at $home :)

[21:39] *** rdice left
[21:49] <pugs_svnbot> r21063 | cjfields++ | fix test (should be a space, not underscore)

[21:55] <pugs_svnbot> r21064 | moritz++ | [spec] moved no_implicit_block.t to spec/S04-statements/

[21:55] <pugs_svnbot> r21064 | moritz++ |  (and s/_/-/g in the file name)

[22:02] <pugs_svnbot> r21065 | moritz++ | [spec] fudged no-implict-block.t

[22:02] *** cggoebel joined
[22:02] <cggoebel> anyone have experience formatting SD cards?

[22:02] <cggoebel> Can anyone tell me why I can fdisk /dev/mmcblk0 create a single linux partition... do a mkfs.ext2 on /dev/mmcblk0p1 (getting "Buffer I/O error" and "io page write" errors then mount /dev/mmcblk0 /mnt -t vfat and see and work with the files which were there from when it was originally formatted as vfat?

[22:02] <cggoebel> oops...

[22:02] <moritz_> cggoebel: wrong channel ;)

[22:02] <cggoebel> wrong channel... apologies

[22:06] *** alester is now known as AndyAway

[22:06] <pugs_svnbot> r21066 | moritz++ | [spec] unfudged two passing tests in anon_block.t, jonathan++ for making them

[22:06] <pugs_svnbot> r21066 | moritz++ | pass

[22:12] *** bacek_ joined
[22:14] <rakudo_svn> r28730 | moritz++ | [rakudo] one more test for spectest_regression

[22:15] *** cjfields left
[22:25] <pugs_svnbot> r21067 | moritz++ | [spec] test for $_ being treated as formal parameter of a block

[22:25] *** riffraff left
[22:28] <Juerd> cggoebel: The table needs to be reread. hdparm -z

[22:29] <Juerd> fdisk does this on write. However, if it fails, you must reboot first.

[22:33] *** apeiron left
[22:33] *** silug left
[22:33] <pugs_svnbot> r21068 | moritz++ | [spec] moved two tests to a different file (which will 

[22:33] <pugs_svnbot> r21068 | moritz++ | follow in next commit.  svn--)

[22:33] <pugs_svnbot> r21069 | moritz++ | [spec] added tests for repeated declaration of a variable in same scope

[22:37] *** cmarcelo left
[22:39] <pugs_svnbot> r21070 | moritz++ | [t] removed redundant test

[22:42] <pugs_svnbot> r21071 | moritz++ | [t] rewrote test in terms of eval_lives_ok, and spell-checked description

[22:47] <rakudo_svn> r28731 | moritz++ | [rakudo] one more test for spectest_regression

[22:48] *** c1sung joined
[23:03] *** meppl left
[23:08] *** bacek__ joined
[23:20] *** zamolxes left
[23:25] *** bacek_ left
[23:25] *** [particle1 joined
[23:27] *** Limbic_Region joined
[23:32] *** b_jonas left
[23:34] *** bacek__ left
[23:37] *** [particle] left
[23:40] *** bacek_ joined
[23:41] *** peepsalot left
