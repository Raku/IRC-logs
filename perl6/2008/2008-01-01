[00:06] *** theorbtwo joined
[00:14] *** jferrero left
[00:15] <dduncan> My impression is that, while the Haskell backend could be viable longer term, it may ultimately have just been a rapidly developed prototype for Perl 6, letting us work out some design kinks through practice, and that the Parrot one will shortly take over as the main implementation.

[00:16] <dduncan> So optimized for fun vs optimized for longer term use.

[00:17] <dduncan> At the moment I'm not putting much stock in the Haskell version progressing much longer, and that the Parrot one will be the most viable implementation within the next few weeks/months.

[00:18] *** theorb left
[00:19] <markstos> dduncan: thanks for the viewpoint.

[00:19] <dduncan> I think for a foundation Parrot is also a lot easier to install than Pugs is, the former having perhaps much simpler or common dependencies ... C vs Haskell.

[00:19] <markstos> "apt-get install ghc" is rather easy. 

[00:21] <markstos> I have poked through the parrot bytecode files supporting that implementation of Perl 6, and so far I have't find them accessible to hack on. So far, Haskell looks more interesting to me to learn. However, perhaps with NQP, more Perl 6 development will be happening in a language that looks Perl6ish

[00:22] <dduncan> well sure, Haskell is a much more advanced foundation, and arguably a better language ... but still a larger dependency

[00:23] <dduncan> as for *today*, though, I think Pugs is still further ahead if you simply want to write Perl 6

[00:23] <dduncan> but I think that by the time I migrate from Tiger to Leopard, I may not bother installing ghc on the latter, we'll se

[00:24] <markstos> Yes, although the slow performance of pugs was frustrating.  The parrot backend seems to be faster now, but has less features than pugs does. 

[00:25] <dduncan> that's a big reason itself ... currently Perl 6 under Pugs performs about 200X slower than equivalent Perl 5

[00:25] <dduncan> its really hard to do Perl 6 development with that

[00:26] <dduncan> I'm currently assuming that Parrot will add enough features soon that I can develop under that instead ... if it doesn't already have enough

[00:26] <markstos> And hard for me to conceive what it would take to optimize it to improve performance to be reasonable close. 

[00:26] <dduncan> I'm hoping that Parrot has a better chance of reaching native Perl 5 speeds ... or at least within 10X in the short term

[00:29] *** jhorwitz left
[00:41] *** jferrero joined
[00:58] <Khisanth> dduncan: it's kinda dead in the water if it doesn't ...

[01:00] <dduncan> indeed

[01:01] <Khisanth> on other hand it has been said perl5 has been getting slower with each release so if they wait long enough ... ;)

[01:01] *** chris2 left
[01:02] *** markstos left
[01:02] *** markstos joined
[01:02] <jjore-m> But 5.10 is supposedly faster than 5.8.

[01:03] *** markstos left
[01:03] *** markstos joined
[01:04] <jjore-m> except for my ( $self ) = @_ which is much slower (but only due to a bug and not through anything intrinsic)

[01:04] <jjore-m> http://use.perl.org/~jk2addict/journal/35189 fwiw.

[01:04] <lambdabot> Title: Journal of jk2addict (4946)

[01:04] <dduncan> apparently it has a bug making list assignment slower though

[01:05] <jjore-m> Jah, that's what I linked to.

[01:05] <jjore-m> I looked at the code for deciding the COMMON flag but looked away when it turned out to be ugly.

[01:07] *** alester joined
[01:07] *** jjore-m left
[01:09] *** han_ left
[01:10] *** han_ joined
[01:11] *** thestarslookdown left
[01:11] *** justatheory left
[01:12] *** markstos left
[01:12] *** markstos joined
[01:13] *** markstos left
[01:13] *** markstos joined
[01:15] *** han__ joined
[01:31] *** han_ left
[01:50] *** devogon left
[02:08] *** BinGOs left
[02:09] *** BinGOs joined
[02:14] *** BinGOs left
[02:22] *** jisom joined
[03:00] <meppuru> good night

[03:07] *** meppuru left
[03:47] *** pmurias joined
[03:47] *** pmurias left
[03:52] *** SCalimlim left
[04:22] *** jisom left
[04:29] *** jferrero left
[04:58] *** lichtkind left
[04:59] *** khisanth_ joined
[04:59] *** khisanth_ left
[05:01] *** markstos left
[05:05] *** jjore-m joined
[05:10] *** chaoslawful joined
[05:10] *** chaoslawful left
[05:33] *** SCalimlim joined
[05:43] <Limbic_Region> @tell TimToady Happy New Year - in S02 "with multiple identical bracket characters, which must by closed by the" s/by/be/

[05:43] <lambdabot> Consider it noted.

[06:09] *** thestarslookdown joined
[06:18] *** jjore-m left
[06:25] <Limbic_Region> @tell TimToady in S02 "If any native type is explicitly initialized to C<*> (the C<Whatever> type), it is left uninitialized." This is confusing since a native type can't be undefined.  It might be better to say is initialized to the default values as shown above.  That is of course if that's what happens - if not, I don't understand.

[06:25] <lambdabot> Consider it noted.

[06:33] *** Limbic_Region left
[07:06] *** Aankhen`` joined
[07:22] *** jjore-m joined
[07:32] *** devogon joined
[07:45] *** xinming joined
[07:51] *** xinming left
[07:52] *** drbean left
[08:05] *** __Ace__ joined
[08:08] *** thestarslookdown left
[08:20] *** duzy joined
[08:26] <duzy> greeting, :)

[08:48] *** meppuru joined
[09:33] *** chacha_chaudhry joined
[09:33] *** chacha_chaudhry left
[09:35] *** Mips_ joined
[09:35] <Mips_> hi

[09:41] *** BinGOs joined
[10:13] *** iblechbot joined
[10:32] *** jjore-m left
[10:47] *** dennis_ joined
[10:48] *** dennis_ left
[10:48] *** xinming joined
[10:54] *** barney joined
[11:05] *** Mips_ left
[11:06] *** cognominal_ left
[11:24] *** lampus joined
[11:29] *** han__ left
[11:32] *** __Ace__ left
[11:38] *** pmurias joined
[11:42] *** drrho joined
[12:04] *** dduncan left
[12:16] *** marmic left
[12:29] *** marmic joined
[12:38] *** cathyal joined
[12:39] *** cathyal left
[12:58] *** Schwern left
[13:29] *** chacha_chaudhry joined
[13:29] *** chacha_chaudhry left
[13:29] <pmurias> what would be a good way to map perl6 calling convention to perl5?

[13:33] <pugs_svn> r19298 | pmurias++ | [kp6-v6]

[13:33] <pugs_svn> r19298 | pmurias++ | cleaned up KindaPerl6::Runtime::Perl5V6::Runtime a bit

[13:33] <pugs_svn> r19298 | pmurias++ | a simple calling convention benchmark

[13:33] <clkao> win 10

[13:36] *** duzy left
[13:49] *** cognominal_ joined
[13:50] *** cognominal_ left
[13:52] *** cognominal_ joined
[13:54] *** cognominal_ left
[14:06] *** marmic left
[14:06] *** polettix joined
[14:13] *** cognominal_ joined
[14:13] *** theorbtwo left
[14:16] *** chris2 joined
[14:16] *** theorbtwo joined
[14:23] *** lisppaste3 left
[14:33] *** lisppaste3 joined
[14:34] *** iblechbot left
[14:42] *** chris2 left
[14:46] *** chris2 joined
[14:48] *** stef_ joined
[14:48] *** stef_ left
[14:50] *** stef_ joined
[14:50] *** stef_ left
[14:51] *** stef_ joined
[14:51] *** barney left
[14:52] *** stef_ left
[14:56] *** markstos joined
[15:07] *** marmic joined
[15:14] *** krinke joined
[15:15] <krinke> #ruby-de

[15:15] *** iblechbot joined
[15:17] *** iblechbot left
[15:22] *** Limbic_Region joined
[15:24] <pmurias> krinke: ?

[15:24] <krinke> utlo?

[15:27] <Limbic_Region> @messages

[15:27] <pmurias> krinke: utlo means?

[15:27] <krinke> yes

[15:28] *** jedai joined
[15:37] <Limbic_Region> @tell TimToady ref S02  I meant to ask you about KeySet as well but I fell asleep.  It says increment = true and decrement = false.  If you decrement an already false value does it stay false?  If so, should the doc explicitly state this?  I am thinking of the silly $|++ here

[15:37] *** alester left
[15:41] *** gbacon left
[15:43] *** jhorwitz joined
[15:52] *** gbacon joined
[15:53] *** gbacon left
[15:53] *** gbacon joined
[15:59] *** theorbtwo left
[16:00] *** theorbtwo joined
[16:04] *** alester joined
[16:06] *** b_jonas joined
[16:07] *** b_jonas_ joined
[16:08] *** b_jonas left
[16:08] *** b_jonas_ is now known as b_jonas

[16:15] *** alester left
[16:18] *** cognominal_ left
[16:27] *** alester joined
[16:30] <Limbic_Region> TimToady ping

[16:31] *** manfred joined
[16:31] *** Psyche^ joined
[16:32] *** alester left
[16:33] <Juerd_> I just killed an elvis and a pugs on feather

[16:33] <Juerd_> The elvis was owned by root, the pugs was owned by andara

[16:33] <Juerd_> fyi

[16:33] <Juerd_> I'm incredibly tired so I'm not going to investigate further :)

[16:33] <Limbic_Region> sleep well, and happy new year

[16:34] <Juerd_> Thanks and ditto

[16:34] * Juerd_ last woke up yesterday around noonish. It's now 17:32

[16:34] <Juerd_> afk  # zleeb

[16:36] *** gbacon left
[16:38] *** gbacon joined
[16:44] *** jhorwitz left
[16:48] *** Patterner left
[16:48] *** Psyche^ is now known as Patterner

[17:14] *** chacha_chaudhry joined
[17:24] *** chacha_chaudhry left
[17:31] *** krinke left
[17:35] *** pbuetow left
[17:35] *** pbuetow joined
[17:36] *** njbartlett left
[17:37] *** rindolf joined
[17:47] *** jferrero joined
[17:58] *** meppuru left
[18:09] *** meppuru joined
[18:12] *** [particle1 joined
[18:14] *** jferrero left
[18:23] *** rindolf left
[18:23] *** drrho left
[18:26] *** [particle] left
[18:32] *** barney joined
[18:42] *** jjore-m joined
[18:51] *** cognominal_ joined
[19:02] *** meppuru left
[19:03] *** meppuru joined
[19:16] <pmurias> if i pass a number to substr how does it know if i want end or length?

[19:17] *** jferrero joined
[19:19] *** jjore-m left
[19:19] <Gothmog_> could you be somewhat more specific? i.e., which substr, and which argument are you referring to?

[19:20] *** jferrero left
[19:20] *** jferrero joined
[19:20] <pmurias> Gothmog_: Functions.pod: 1355

[19:22] <pmurias> docs/Perl6/Spec/Functions.pod

[19:23] <Gothmog_> by dispatching, you may either call it with a StrLen or StrPos type argument.

[19:23] <Gothmog_>  our Str multi substr (Str $s, StrPos $start, StrLen $length?) is rw

[19:23] <Gothmog_>  our Str multi substr (Str $s, StrPos $start, StrPos $end?) is rw

[19:26] <pmurias> but a number is converted in either Len or Pos

[19:27] <pmurias> 1363

[19:28] *** Auzon joined
[19:29] <pmurias> i'm implementing it as 01-sanity/07-substr.t

[19:30] *** barney left
[19:31] <pmurias> the first form is used

[19:31] <pmurias> there

[19:38] *** markstos left
[19:43] *** markstos joined
[19:44] *** jferrero left
[19:45] <Gothmog_> hm, that seems ambiguous then. but shouldn't you do the cast in substr but before the call?

[19:45] *** seablue100 joined
[19:46] *** jferrero joined
[19:47] <Gothmog_> either way, there will be default if you don't explicitly cast your number.

[19:51] <pmurias> Gothmog_: it should be mentioned 

[19:51] <Gothmog_> ack

[19:52] <pmurias> TimToady: what does substr(Str,Int,Int) do?

[19:53] *** njbartlett joined
[20:09] *** jferrero left
[20:13] <pugs_svn> r19299 | pmurias++ | [kp6-v6] subs withought arguments, a bit more runtime

[20:13] *** alester joined
[20:19] *** alester left
[20:24] *** BinGOs left
[20:24] *** BinGOs joined
[20:31] *** meppuru left
[20:33] *** meppuru joined
[20:43] *** manfred left
[20:48] *** lumi joined
[21:11] *** _sprocket_ joined
[21:13] *** BinGOs_ joined
[21:13] *** Aankhen`` left
[21:13] *** BinGOs left
[21:13] *** BinGOs_ is now known as BinGOs

[21:21] *** _sprocket_ left
[21:21] *** alester joined
[21:26] *** seagreen100 joined
[21:29] *** seablue100 left
[21:42] *** jferrero joined
[21:54] *** pmurias left
[21:58] *** alester left
[22:03] *** r0bby left
[22:05] *** seagreen100 left
[22:31] *** b_jonas left
[22:56] *** quester joined
[22:58] *** quester left
[23:37] *** quester_p6 joined
[23:40] *** lambdabot left
[23:41] *** quester_p6 left
[23:43] *** p6quester joined
[23:46] *** p6quester left
[23:47] *** jferrero left
[23:47] *** p6quester joined
[23:57] *** badalex left
