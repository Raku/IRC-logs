[00:00] <Auzon> rakudo: say #{foo} "hi"

[00:00] <p6eval> rakudo 29834: OUTPUT[␤]

[00:00] <Auzon> rakudo: say #(foo) "hi"

[00:00] <p6eval> rakudo 29834: RESULT[␤1]

[00:00] <Auzon> Now that's odd.

[00:01] *** rindolf left
[00:09] *** avar left
[00:14] *** Schwern left
[00:21] <Limbic_Region> rakudo: $_ = 'blah'; say #{foo} "hi"

[00:21] <p6eval> rakudo 29834: OUTPUT[␤]

[00:21] <Limbic_Region> yep, odd

[00:21] <Auzon> rakudo: say

[00:21] <p6eval> rakudo 29834: OUTPUT[␤]

[00:24] *** luqui left
[00:30] *** justatheory left
[00:38] *** Schwern joined
[00:41] *** Schwern left
[00:49] *** ruoso joined
[01:31] *** jferrero left
[01:37] <pugs_svn> r21900 | ruoso++ | [smop] skeleton for the default block signature lowlevel implementation in place... it should not be very hard to implement..

[01:51] *** alanhaggai joined
[01:56] *** ruoso left
[02:01] *** Limbic_Region left
[02:15] *** kanru left
[02:15] *** meppel-san joined
[02:22] *** wknight8111 left
[02:33] *** meppl left
[02:45] *** meppel-san left
[02:45] *** meppl joined
[02:48] *** kanru joined
[03:02] *** elmex_ joined
[03:07] *** alanhaggai left
[03:10] <TimToady> rakudo: say #(just a line-end comment to rakudo) die "never got here"

[03:10] <p6eval> rakudo 29834: OUTPUT[␤]

[03:10] <TimToady> as for $_, you have to use .say to get at that

[03:18] *** elmex left
[03:18] *** elmex_ is now known as elmex

[03:41] *** ilogger2_ joined
[03:47] *** alester_ joined
[03:50] <StephenPollei> rakudo: my $good=0; try {my Int $foo=3; $foo=4.1; CATCH {$good=1;} } ; $good;

[03:50] <p6eval> rakudo 29834: OUTPUT[Statement not terminated properly at line 1, near "{$good=1;}"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤]

[03:51] <StephenPollei> pugs: my $good=0; try {my Int $foo=3; $foo=4.1; CATCH {$good=1;} } ; $good;

[03:51] <p6eval> pugs: RESULT[\0]

[03:53] <TimToady> nobody actually checks type constraints yet

[03:53] <StephenPollei> Am I writing the try catch block correctly? and if you put a float into int should it roundoff or throw some kind of type check exception? I think it should round.

[03:54] <StephenPollei> I wish to add tests into t/spec that's why I'm interested. I'm just getting started with it

[03:54] <TimToady> p5 currently just truncates, but I think p6 specs floor

[03:54] <StephenPollei> rakudo: my $good=0; try {my Int $foo=3; $foo='str'; CATCH {$good=1;} } ; $good;

[03:54] <p6eval> rakudo 29834: OUTPUT[Statement not terminated properly at line 1, near "{$good=1;}"␤current instr.: 'parrot;PGE::Util;die' pc 120 (runtime/parrot/library/PGE/Util.pir:82)␤]

[03:55] *** Schwern joined
[03:56] <TimToady> actually, it specs truncation in S09

[03:57] <StephenPollei> OK and the 'str' one does it cause exception or does it become 0 or does it become 'str'.chars

[03:59] <TimToady> that would throw an exception, I think, but maybe it's just a warning (resumable exception by default)

[04:00] <StephenPollei> yes I forgot about warning, has to be checked with .defined or .true before anything or it then raises the exception

[04:03] <StephenPollei> if it was int instead of Int it would have to throw excpetion on the spot or put a 0 or 'str'.elems into the varible

[04:03] *** Taras joined
[04:03] <Taras> Once the dangers of asbestos were proven, it was removed from many building materials2014but not before it was fitted in nearly every home built before 1978.

[04:04] *** TimToady sets mode: +b *!i=Webchat@209.91.114.*

[04:04] *** Taras was kicked by TimToady (TimToady))
[04:05] <TimToady> yeah, if it's Int it can just assign an unthrown exception, but there isn't that option for int

[04:05] <TimToady> since int is a Just type, not a Maybe type, in haskellian terms

[04:10] <StephenPollei> OK I think I can figure out how to write a test for it, thanks.

[04:19] *** BinGOs joined
[04:57] *** xinming_ joined
[05:10] *** xinming joined
[05:12] *** cookys joined
[05:14] *** ashizawa joined
[05:18] *** Ara5n joined
[05:28] *** xinming_ joined
[05:34] <StephenPollei> pugs: + 'str' ;

[05:34] <p6eval> pugs: RESULT[0.0]

[05:34] <StephenPollei> rakudo: + 'str' ;

[05:34] <p6eval> rakudo 29834: RESULT[0]

[05:36] *** xinming__ joined
[05:45] *** Psyche^ joined
[05:50] *** simcop2387 joined
[05:54] *** BinGOs_ joined
[06:13] *** xinming joined
[06:30] *** xshelf joined
[06:33] *** xshelf left
[07:16] *** meppl joined
[07:25] *** bp0 joined
[07:56] *** ZuLuuuuuu joined
[08:03] *** ilogger2 joined
[08:16] *** penk joined
[08:23] *** [particle]1 joined
[08:40] *** fridim_ joined
[08:41] *** pmurias joined
[08:42] <pmurias> @tell ruoso do we plan about to realease smop on CPAN anytime soon?

[08:42] <lambdabot> Consider it noted.

[08:42] *** pmurias left
[09:26] *** fridim_ left
[09:27] *** fridim_ joined
[09:54] *** wknight8111 joined
[10:02] *** sri_work joined
[10:12] *** [particle]1 left
[10:19] *** zamolxes joined
[10:23] *** nicky00 joined
[10:23] <nicky00> hello everyone

[10:23] <nicky00> i've got a question

[10:23] <nicky00> how would you parse this .asp>COLLE SITTARD MACHINEHANDEL BV</a></b></td></tr><tr>

[10:23] <nicky00> to keep just COLLE SITTARD MACHINEHANDEL ?

[10:29] <zamolxes> is that  really ".asp>" ?

[10:38] <nicky00> yeah

[10:38] <nicky00> its cool tho

[10:38] <nicky00> solved it

[10:38] <nicky00> thank you ^_^

[10:39] <zamolxes> :)

[10:59] *** penk left
[11:04] *** ZuLuuuuuu joined
[11:25] *** rindolf joined
[11:34] *** ZuLuuuuuu left
[11:43] *** zamolxes left
[12:00] *** ruoso joined
[12:10] *** rindolf left
[12:39] *** pmurias joined
[12:39] <pmurias> ruoso: hi

[12:44] <clkao> win goto 63

[12:53] *** rindolf joined
[12:59] *** cmarcelo joined
[13:02] *** fridim_ left
[13:10] *** ZuLuuuuuu joined
[13:32] *** [particle] joined
[13:41] *** pmurias left
[13:50] *** pmurias joined
[14:10] *** Jedai joined
[14:15] *** avar joined
[14:16] *** REPLeffect joined
[14:23] *** ptman joined
[14:23] *** Exodist joined
[14:26] *** edpratomo joined
[14:51] *** hercynium joined
[14:59] *** pmurias left
[15:02] *** fridim_ joined
[15:08] *** jferrero joined
[15:25] *** rindolf left
[15:31] *** ZuLuuuuuu left
[15:36] *** fridim_ left
[15:51] *** rindolf joined
[16:08] *** kanru joined
[16:14] *** kst joined
[16:17] *** iblechbot joined
[16:21] *** fridim_ joined
[16:22] *** fridim_ left
[16:32] *** justatheory joined
[16:35] *** charsbar joined
[16:39] <pugs_svn> r21901 | lwall++ | [STD] various changes in preparation for inlining p5 regex optimizations

[16:40] *** cmarcelo left
[16:43] *** hercynium left
[16:48] *** kst left
[16:48] *** hercynium joined
[16:48] *** kst joined
[16:49] *** cathyal joined
[16:49] *** iblechbot left
[16:55] *** cathyal left
[16:57] *** cathyal joined
[17:17] *** eternaleye_ joined
[17:17] *** justatheory left
[17:22] *** davidm123 joined
[17:28] *** kst left
[17:28] *** kst joined
[17:36] <davidm123> what's the status of pod6?  who uses it?  it doesn't look like the parrot docs use it.

[17:42] <pugs_svn> r21902 | Auzon++ | [gsoc_spectest] moved sub_named_params.t content to S06-signature/named-parameters.t. everything passes; now to add more tests

[17:42] <[particle]> davidm123: i've started a parser for pod6 in parrot's repo

[17:42] <[particle]> but mostly, it's not used yet

[17:43] <davidm123> i looked at pod6 about a year ago, and it was most not used yet either ;)

[17:43] <Auzon> I'm pretty sure that the test suite uses Pod6.

[17:44] <[particle]> when damian submitted his synopsis draft for review, there were some critical comments about it

[17:45] <[particle]> i believe that led folks not to move forward towards implementing it

[17:45] <[particle]> i'd like to break that logjam and get things moving again

[17:46] <[particle]> so i started the parser

[17:46] <[particle]> but i'm lacking tuits as of late

[17:46] <davidm123> i tend to like incremental changes, e.g. fix the sigils in perl, make lists more terse and fix other annoyances in pod

[17:52] *** hercynium left
[17:54] *** justatheory joined
[17:55] *** cathyal left
[17:57] *** cathyal joined
[18:11] *** kst left
[18:11] *** kst joined
[18:16] *** rindolf left
[18:19] *** Jedai left
[18:36] *** Exodist left
[18:40] *** Exodist joined
[18:54] *** kst left
[18:54] *** kst joined
[19:17] <davidm123> is there some latest spec for kwid?

[19:30] *** Schwern joined
[19:32] *** kst left
[19:32] *** kst joined
[19:35] *** [particle] left
[19:47] *** REPLeffect left
[19:49] *** [particle] joined
[19:53] *** justatheory left
[19:54] *** REPLeffect joined
[19:58] *** charsbar left
[20:00] *** [particle]1 joined
[20:03] *** REPLeffect left
[20:13] *** REPLeffect joined
[20:13] *** zamolxes joined
[20:16] <StephenPollei> in http://svn.pugscode.org/pugs/t/README the link http://rakudo.org/perl6/index.cgi?smart_linking is dead

[20:17] *** [particle] left
[20:19] *** kst left
[20:19] *** kst joined
[20:28] *** cognominal_ joined
[20:34] *** justatheory joined
[20:36] *** jferrero left
[20:51] *** hercynium joined
[20:58] *** kst left
[20:58] *** kst joined
[21:16] *** lleksah joined
[21:33] *** jferrero joined
[21:35] *** kst left
[21:35] *** kst joined
[21:43] *** ekremmm joined
[21:44] *** ekremmm left
[21:49] *** lleksah left
[21:55] *** Schwern left
[21:55] *** eternaleye_ left
[22:01] *** justatheory left
[22:05] *** hercynium left
[22:06] *** kst left
[22:06] *** kst joined
[22:16] <s1n> are there any good guides out there to understanding PIR code? i want to start hackin on rakudo (as well as the test suite) but i'm very unfamiliar with it's syntax and structure

[22:22] *** Limbic_Region joined
[22:26] *** pmurias joined
[22:26] <pmurias> (wired connection from home)++

[22:27] *** diakopter joined
[22:28] *** diakopter left
[22:30] *** diakopter joined
[22:33] *** justatheory joined
[22:36] <cognominal_> sln: you should start by reading the pods in the docs/ folder

[22:36] <cognominal_> then in docs/immc/ folder

[22:37] <cognominal_> finally docs/pdds/pdd19_pir.pod

[22:38] <cognominal_> reading existing code helps too.

[22:38] <s1n> cognominal_: thanks, i'll start there

[22:39] <s1n> i'd really like to find some low key, low priority bugs or work to do to get used to it, if you know of any...

[22:44] *** cognominal_ left
[22:45] *** kst left
[22:45] *** kst joined
[22:45] *** Exodist left
[22:51] *** pmurias left
[22:51] *** cognominal_ joined
[22:54] *** davidm123 left
[22:59] *** Blasi joined
[23:11] *** Blasi left
[23:11] *** Blasi joined
[23:12] *** Blasi left
[23:13] *** cognominal_ left
[23:16] *** cognominal_ joined
[23:17] *** Schwern joined
[23:22] *** diakopter left
[23:25] *** Alias_ joined
[23:35] *** kst left
[23:35] *** kst joined
[23:41] *** sri_work left
[23:47] *** fridim_ joined
[23:51] *** fridim_ left
