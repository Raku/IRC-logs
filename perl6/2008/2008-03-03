[00:00] *** damir joined
[00:09] *** ikeda joined
[00:09] *** ikeda left
[00:14] *** damir left
[00:14] *** damir joined
[00:16] *** rimad left
[00:17] *** wknight8111 joined
[00:23] *** chris2 left
[00:25] *** ikeda joined
[00:26] *** ikeda left
[00:34] *** ikeda joined
[00:41] *** ikeda left
[00:44] *** devogon left
[00:54] *** wknight8111 left
[00:55] *** zeeeee joined
[00:57] *** kanru left
[01:04] *** cnhackTNT joined
[01:32] *** lyokato joined
[01:33] *** justatheory left
[01:33] *** Rmann left
[01:39] *** zeeeee left
[01:57] *** ting joined
[02:14] *** agentzh left
[02:15] *** agentzh joined
[02:29] *** wknight8111 joined
[02:35] *** agentzh left
[02:46] *** c9s left
[02:46] *** c9s joined
[03:04] *** agentzh joined
[03:06] *** wknight8111 left
[03:20] *** cmarcelo left
[03:32] *** c9s left
[03:34] <ingy> seen audreyt

[03:34] *** justatheory joined
[03:39] <xinming> ingy: She is not here for a long time. We all miss her. :'(

[03:43] *** justatheory left
[04:01] *** agentzh left
[04:05] *** agentzh joined
[04:10] *** ikeda joined
[04:13] *** damir is now known as rimad

[04:19] *** RayMagini left
[04:21] *** ikeda_ joined
[04:21] *** RayMagini joined
[04:22] *** ikeda_ left
[04:24] *** ikeda_ joined
[04:24] *** ikeda left
[04:48] <spinclad> xinming: word of truth, that

[04:56] *** ikeda_ left
[04:58] *** ikeda joined
[05:04] *** [particle] left
[05:07] *** [particle] joined
[05:15] *** cls_bsd left
[05:20] *** alc joined
[05:47] *** njbartlett left
[06:18] *** ikeda left
[06:26] *** lumi joined
[06:41] *** iblechbot joined
[06:43] *** BinGOs left
[07:01] *** mattz__ left
[07:05] *** BinGOs joined
[07:09] *** njbartlett joined
[07:16] *** BinGOs left
[07:17] *** revdiablo left
[07:18] *** Chillance left
[07:18] *** BinGOs joined
[07:26] *** iblechbot left
[07:39] *** jjore is now known as zz_jjore

[07:39] *** zz_jjore is now known as jjore

[07:45] *** njbartlett left
[07:45] *** cls_bsd joined
[07:47] *** BinGOs left
[07:53] *** BinGOs joined
[07:55] *** mattz joined
[07:58] *** rindolf joined
[08:02] *** Aankhen`` joined
[08:12] *** iblechbot joined
[08:17] *** cnhackTNT left
[08:18] *** rindolf left
[08:19] *** ruoso left
[08:26] *** devogon joined
[08:49] *** cosimo joined
[08:49] *** SparkyFlary joined
[08:49] *** SparkyFlary left
[09:20] *** DarkWolf84 joined
[09:26] *** Schwern joined
[09:30] *** hugues23 joined
[10:08] *** ikeda joined
[10:18] *** Schwern left
[10:19] *** ikeda left
[10:19] *** ikeda joined
[10:22] *** ruoso joined
[10:23] *** alc left
[10:27] *** ikeda left
[10:32] *** ebassi joined
[10:40] *** rindolf joined
[10:41] *** ikeda joined
[10:43] *** njbartlett joined
[10:51] *** rindolf left
[10:57] *** zamolxes joined
[11:09] *** wknight8111 joined
[11:14] *** njbartlett left
[11:26] *** ikeda_ joined
[11:26] *** lyokato left
[11:27] *** araujo left
[11:34] *** RichiH left
[11:36] *** ikeda left
[11:39] *** cmarcelo joined
[11:39] *** RichiH joined
[12:04] *** orafu left
[12:04] *** orafu joined
[12:05] *** sri_work joined
[12:06] *** devogon left
[12:36] *** orafu left
[12:36] *** orafu joined
[12:37] *** nipotan is now known as nipotaway

[12:38] *** njbartlett joined
[12:42] *** kanru joined
[12:48] *** smtms left
[12:58] *** smtms joined
[13:02] *** ebassi is now known as ebassi|lunch

[13:02] *** ebassi|lunch left
[13:03] *** ebassi joined
[13:03] *** ebassi is now known as ebassi|lunch

[13:05] *** njbartlett left
[13:11] *** hanekomu joined
[13:15] *** kolibrie joined
[13:21] *** jrockway left
[13:27] *** orafu left
[13:27] *** orafu joined
[13:28] *** njbartlett joined
[13:29] *** orafu left
[13:32] *** OuLouFu joined
[13:41] *** OuLouFu left
[13:44] <pugs_svnbot> r20051 | putter++ | [misc/STD_red] Bugfixed regressions.  Compatibility with old ruby 1.8 improved (to use its ruby -rdebug).

[13:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20051

[13:44] <lambdabot> Title: Changeset 20051 - Pugs - Trac

[13:44] *** wknight8111 left
[13:46] *** ebassi|lunch is now known as ebassi

[13:46] *** OuLouFu joined
[13:47] *** blindfish joined
[13:54] *** njbartlett left
[13:58] *** OuLouFu left
[14:12] *** DarkWolf84 left
[14:25] *** iblechbot left
[14:26] *** wknight8111 joined
[14:32] *** sri_work left
[14:35] *** njbartlett joined
[14:48] *** rdice joined
[14:48] *** eternaleye left
[14:49] *** eternaleye joined
[14:57] *** wknight8111 left
[15:06] *** iblechbot joined
[15:08] *** meppl joined
[15:08] *** eternaleye left
[15:10] *** chris2 joined
[15:11] *** njbartlett left
[15:11] *** alester joined
[15:11] *** revdiablo joined
[15:13] *** OuLouFu joined
[15:18] *** OuLouFu left
[15:21] *** ikeda joined
[15:22] *** ikeda_ left
[15:30] *** [particle1 joined
[15:36] *** ikeda_ joined
[15:39] *** rindolf joined
[15:40] *** jhorwitz joined
[15:40] *** ikeda left
[15:46] *** [particle] left
[15:47] *** [particle1 is now known as [particle]

[15:53] *** wknight8111 joined
[15:54] *** pmurias joined
[16:07] *** literal_ joined
[16:07] *** OuLouFu joined
[16:16] *** OuLouFu left
[16:18] *** zostay_ is now known as zostay

[16:21] *** literal left
[16:22] *** literal_ is now known as literal

[16:26] *** falesca left
[16:31] *** IllvilJa joined
[16:38] *** cls_bsd left
[16:43] *** rfordinal_athome joined
[16:46] *** rfordinal_athome left
[16:50] *** sordith_ left
[16:50] *** sordith_ joined
[16:51] *** orafu joined
[16:53] *** jrockway joined
[16:55] *** orafu left
[16:55] *** orafu joined
[16:57] *** hanekomu left
[16:59] *** jdhall joined
[16:59] *** orafu left
[17:00] *** IRSeekBot left
[17:00] *** OuLouFu joined
[17:02] *** IRSeekBot joined
[17:03] *** ikeda_ left
[17:04] *** OuLouFu is now known as orafu

[17:08] *** orafu left
[17:09] *** orafu joined
[17:11] *** araujo joined
[17:14] *** hugues23 left
[17:15] *** ikeda joined
[17:16] *** Aankhen`` left
[17:20] *** penk left
[17:20] *** orafu left
[17:21] *** orafu joined
[17:24] *** penk joined
[17:25] *** wknight8111 left
[17:25] *** jrockway left
[17:30] *** Samsta joined
[17:30] <Samsta> im trying to read a file, but it stops reading when it gets to \x11

[17:32] *** Samsta left
[17:36] <TimToady> well, got the Impatience part down, I see...

[17:46] *** ikeda left
[17:48] *** ikeda joined
[17:48] *** ikeda left
[17:52] *** agentzh left
[17:52] *** silug left
[17:52] *** GeJ left
[17:52] *** xinming left
[17:52] *** nipotaway left
[17:52] *** rakudo_svn left
[17:52] *** demq left
[17:52] *** pmichaud left
[17:52] *** buubot left
[17:52] *** shachaf left
[17:52] *** agentzh joined
[17:52] *** silug joined
[17:52] *** GeJ joined
[17:52] *** xinming joined
[17:52] *** nipotaway joined
[17:52] *** demq joined
[17:52] *** shachaf joined
[17:52] *** rakudo_svn joined
[17:52] *** buubot joined
[17:52] *** pmichaud joined
[17:52] *** ikeda joined
[17:53] *** jrockway joined
[17:54] *** peeps[work] joined
[17:54] *** ikeda left
[17:55] *** ikeda joined
[17:57] <pugs_svnbot> r20052 | putter++ | misc/STD_red/std.rb: Now executable.  To make it more obvious how to play.

[17:57] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20052

[17:57] <lambdabot> Title: Changeset 20052 - Pugs - Trac

[18:00] *** Jamtech joined
[18:01] *** ikeda left
[18:02] <gbacon> so what's up with the cabal build for pugs?

[18:11] *** hanekomu joined
[18:14] *** macae joined
[18:15] *** zamolxes left
[18:17] *** ebassi left
[18:19] *** njbartlett joined
[18:26] <sordith_> oh no, i am so messed up. i totally forgot to wish moritz_ a happy birthday yesterday

[18:26] * sordith_ rolls a huge cake in

[18:28] *** hugues24 joined
[18:28] <TimToady> gbacon: it seems pugs currently has one foot on 6.6.1 and the other foot on 6.8, and is not quite happy about either of them...

[18:29] <gbacon> noticed that :-)

[18:29] <pugs_svnbot> r20053 | pmurias++ | fixed do

[18:29] <pugs_svnbot> r20053 | pmurias++ | a couple of hacks for tokens to compile

[18:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20053

[18:29] <lambdabot> Title: Changeset 20053 - Pugs - Trac

[18:29] *** dduncan joined
[18:32] *** barney joined
[18:37] *** pmurias_ joined
[18:37] *** pmurias left
[18:37] <gbacon> oh, that's cute: changing the verbosity level changes the build result

[18:46] *** macae left
[18:52] *** iblechbot left
[18:53] *** Psyche^ joined
[18:56] *** hanekomu left
[18:59] <pugs_svnbot> r20054 | pmurias++ | fixed typo

[18:59] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20054

[18:59] <lambdabot> Title: Changeset 20054 - Pugs - Trac

[19:01] <mncharity> re 'changing the verbosity level changes the build result', !?! ^.^

[19:03] *** njbartlett left
[19:05] * ruoso added himself as a mentor for gsoc, and added smop as a project idea at http://www.perlfoundation.org/perl5/index.cgi?gsoc2008

[19:05] <lambdabot> Title: gsoc2008 / Perl 5 Wiki

[19:05] *** Jamtech left
[19:05] * mncharity slogs through syntax... has an "ahhh, Scheme" <pleasant contrast> moment.  sanity quickly returns, as does slogging.

[19:09] *** Patterner left
[19:09] *** Psyche^ is now known as Patterner

[19:10] <mncharity> or maybe not sanity,  but "there's a reason for this pain".  no place to hang stuff off of sexps.  and they're verbose.

[19:12] <TimToady> :]

[19:12] <wolverian> I wish I liked sexps. really. they're so elegant.

[19:12] *** Schwern joined
[19:13] <TimToady> they appeal to people who think integers are really sets of sets of sets of nothing :)

[19:13] <ruoso> I've been thinking a lot about Erland and IO lately

[19:13] <ruoso> (IO the language, not Input/Output)

[19:14] <ruoso> and I think I'll consider "Actor" as another built-in type

[19:14] <ruoso> who implement a different object representation

[19:14] <ruoso> where the code that uses it, only have access to the message sender...

[19:14] <ruoso> and the message handler is implemented in a green thread of its own

[19:15] <ruoso> and that makes me think that I'll have to implement a scheduler in smop sooner than expected

[19:15] <TimToady> it's hard to schedule a scheduler...

[19:16] <nothingmuch> ruoso: actor == an object with async methods

[19:17] <ruoso> not really

[19:17] <nothingmuch> theoretically it's just a responder interface that delegates to a low level thread

[19:17] <nothingmuch> should be easy

[19:17] <ruoso> in an actor, each instance is private to a single thread...

[19:17] <nothingmuch> right

[19:18] <nothingmuch> well

[19:18] <nothingmuch> there is no guarantee that it'll be in the same thread

[19:18] <ruoso> actor == aync messaging to a single threaded message handler

[19:18] <nothingmuch> typically you have as many "real" thread as real CPUs

[19:18] <ruoso> nothingmuch, the whole thing is about you having to guarantee that

[19:18] <ruoso> oh wait...

[19:18] <ruoso> I think we're talking about different things

[19:19] <nothingmuch> erlang has inspired a lot of $work code

[19:19] <nothingmuch> i think it's the same =

[19:19] <nothingmuch> )

[19:19] <ruoso> every actor instance *is* a green thread...

[19:19] <nothingmuch> yes

[19:19] <nothingmuch> it's not so much a concurrency guarantee as lack of a synchronization guarantee

[19:19] <ruoso> and the reference to that object in other code is just a message sender...

[19:20] <nothingmuch> the box type is completely free form

[19:20] <nothingmuch> you can have it be anything

[19:20] <nothingmuch> if it's easy to share thread data, great

[19:20] <nothingmuch> just make it the value

[19:20] <nothingmuch> that is, a pointer to the real inv

[19:20] <nothingmuch> otherwise make it some symbolic ref

[19:20] <nothingmuch> but that's a VM concern

[19:21] <nothingmuch> smop prolly can rely on pthreads

[19:21] <nothingmuch> so it should be easy to share data by default

[19:21] <nothingmuch> and the operation should be safe

[19:21] <ruoso> as all operation *inside* the actor is serialized

[19:22] <nothingmuch> that actually doesn't really matter

[19:22] <TimToady> I kinda see ==> and <== as being the Perl 6 view of that

[19:23] <nothingmuch> unfortunately that's too call site specific

[19:23] <nothingmuch> if the calls are just methods with no return values

[19:23] <nothingmuch> then you get a "real" actor model

[19:23] <ruoso> nothingmuch, it matters because the user knows it doesn't need to use locking inside each message processing...

[19:24] <nothingmuch> i think that on the low level it should be possible to implement an async actor

[19:24] <nothingmuch> if someone wants to bother with locking, let em

[19:24] <nothingmuch> just don't make it the default

[19:24] <TimToady> with feeds we get the actual underlying endpoints by binding one end or the other, I think

[19:24] <TimToady> then they're just objects

[19:24] <ruoso> TimToady, I'm not following... how ==> relates to actors...

[19:25] <ruoso> nothingmuch, but being lock-free is the entire point of actors...

[19:25] <nothingmuch> it still requires an explicit decsision by the user

[19:25] <nothingmuch> ruoso: if optimizing for performance, maybe a specific actor wants to be async

[19:25] *** arcady joined
[19:25] <nothingmuch> 99% of the time, they don't want to do that

[19:25] <nothingmuch> but i think it should still be allowed somehow, just for flexibility's sake

[19:26] <ruoso> I see... but then it can just inherit another implementation, can't it?

[19:26] <nothingmuch> sure

[19:26] <nothingmuch> that's a good way to do it

[19:28] <ruoso> but this makes me realise that I need a scheduler api on top of the interpreter api (considering the scheduler views the interpreter as a green thread)

[19:29] <mncharity> for a STD rul like  token dotty:sym<.+> { <sym> <methodop> {*} }  #= plus   ... what's the expected Match looklike.  ie, where does the "plus" go?   dotty:plus?

[19:31] *** lichtkind joined
[19:32] <ruoso> TimToady, about ==> and actors... let me see if I got it right... ==> would turn the other end into an actor, and the scheduler would work just like unix pipe... is it?

[19:32] <TimToady> the {*} represents a reduction called with an argument of "dotty:sym<.+> plus" or some such

[19:32] <TimToady> i.e. the name of the rule plus the #= comment

[19:32] <mncharity> hmm... tnx... hmm...

[19:32] <ruoso> TimToady, not like unix pipe... but like if there was a pipe between two processess

[19:32] <TimToady> it just wants to be a unique key

[19:33] <TimToady> it's an object pipe, yes

[19:33] <TimToady> as with Unix pipes, it makes a fundamental anti-promise about synchronicity

[19:33] <[particle]> how modern. you can see the plumbing.

[19:33] <TimToady> that would be postmodern

[19:34] <TimToady> it's all a series of ducts...

[19:34] <TimToady> and undoubtedly it's just syntactic sugar for something like Actors underneath

[19:34] <ruoso> so a ==> b ==> c ==> d would create a green thread for each of b, c and d... while the result of a would be message one by one to b...

[19:35] <ruoso> and so on...

[19:35] <mncharity> I've just now been, without thinking it through, embedding the comments in the match structure.  eg, [... | <a> <b> #=foo\n...] gets a  $<foo><a> and $<foo><b>, where really treating them as comments it would be $<a> $<b>.

[19:35] <TimToady> ruoso: yes, and presumably we recognize the form of b to know whether it's a real thready process or just a "tap"

[19:35] <mncharity> perhaps  $<a> $<b> $<comment>='foo'  would be better.

[19:36] <ruoso> I was thinking about doing it manually with CPS... but the Actor abstraction is certainly healthier

[19:36] *** dduncan left
[19:37] <[particle]> right, postmodern. duh

[19:37] <TimToady> mncharity: well, if you want to set up the default reduction for {*} to do that, sure, but I wasn't thinking it was necessary to poke those into a match tree unless the reduction wants it

[19:38] <TimToady> there are a lot of {*} in there that probably just want a null reduction and let the parent name the result

[19:38] *** Qiang joined
[19:38] <TimToady> s/in there/in STD/

[19:39] <TimToady> might even want to remove a few {*} where they interfere with LTM

[19:39] <TimToady> since they stop the longest same as :: does

[19:41] * ruoso home &

[19:41] <TimToady> I probably erred on the side of putting too many {*} than too fuew...

[19:41] <TimToady> *few even

[19:42] *** dduncan joined
[19:42] <mncharity> re 'poke those into a match tree', there some cases where it saves later "figure out which branch we took by which keys got defined", or worse, "by looking at the raw text" (eg, to check for ! in :!x, rather than having a fake colonpair__false type node which is $<false> in a colonpair.  The last just made we wince, but... something... so the info isn't lost.

[19:42] <TimToady> and generally, if the tag of the {*} is meaningful for the parse, it should not have used a tag

[19:42] <TimToady> *nod* it's a balancing act there

[19:43] <TimToady> if you never throw out the old emails the congress will eventually subpeona you for them... :)

[19:44] <TimToady> and until then the extra info just clutters up your storage vault...

[19:44] <mncharity> which if you haven't been breaking the law, is at most embarrassing.

[19:44] <TimToady> but there's real info embedded in all the dross too, as you say...

[19:44] <mncharity> well, and the admin cost of responding to the subpeona

[19:44] <mncharity> oky, time for a break

[19:45] <TimToady> ciao

[19:46] <lichtkind> TimToady: i would like to comment your "make gold" sentence yesterday

[19:46] <pugs_svnbot> r20055 | putter++ | misc/STD_red/std.rb: sync'ing, and the addition of Match()s, continues.

[19:46] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20055

[19:46] <lambdabot> Title: Changeset 20055 - Pugs - Trac

[19:46] <mncharity> not &, but rather, change of topic/focus. :)

[19:48] <mncharity> nothingmuch: you were interested in attribute grammars a while back, yes?  did you have any particular engine in mind?  Stratego looks interesting, though their installation story at the moment, until they get their next release out, is painful.

[19:48] <lichtkind> TimToady: i think your considerably wise and thats one reason why i choose perl over python some years ago, and what you once said about esoteric knoledge is true by in large and furthermore i have lot of respect for your christian believes but ...

[19:49] <mncharity> it's also a bit ad hoc - a system and dsl designed specifically to be a compiler internals.  vs a more language-y approach, like using a hs library.

[19:49] <TimToady> it was a cheap shot, and I apologize

[19:50] <mncharity> anyway, I'd be interested in your thoughts on what the "we start compiling" step after mindless emitting from ast's might look like.

[19:52] <lichtkind> TimToady: but i got the impression you don't got the point yet what is esoteric all about (esoteric in german sense :) )

[19:54] <TimToady> I just see a lot of "esoteric" that is proud: "I know this and you don't, nyah, nyah, nyah".  I'm willing to admit that there can be esoteric that is humble too. :)

[19:55] <TimToady> as C.S. Lewis was fond of pointing out, a real religion needs to have both "thick" and "thin" aspects

[19:55] *** Squern joined
[19:55] <TimToady> it needs to be transparent enough that a child can understand, and deep enough that the wisest philosopher can't get to the bottom of it.

[19:56] <TimToady> it's easy to fall off on either side...

[19:56] <TimToady> and I think this applies to programming language design too. :)

[19:56] <lichtkind> TimToady: thats what i wanted say mow :)

[19:57] <TimToady> as I said, it was a cheap shot, and I'm sorry.  on the other hand, I think even humble esoterica can simple be misguided

[19:57] <sordith_> TimToady: i think what you created together with other hackers comes pretty close to that perfect religion :D

[19:57] <TimToady> and obviously there's enough contradictory esoterica in the world that it can't all be right.  :)

[19:58] <lichtkind> TimToady: the problem that i have with religion, is that its a tool to rule people and criple their mind, the best PR athiest can get. nevertheless i like your approach to it. and yes ihe basic rules of life can understand a child but ...

[19:59] <TimToady> sordith_: well, maybe it's at least a picture of a what a good religion ought to be like

[19:59] <TimToady> but as with all human institutions, it's far from infallible...

[20:01] <TimToady> lichtkind: there are far too many people who find religion convenient for their own purposes.  if your religion never feels inconvenient, it's not doing you much good... :)

[20:01] <TimToady> and I find the core of the christian faith to be exceeding inconvenient when it's good for me.  :)

[20:01] <lichtkind> i understand what you mean but its acually not something i believe

[20:02] <sordith_> lichtkind: maybe the hardest part about religion is the state, where you realize that what is best for you does not necessarily have to be the best for another person

[20:03] <lichtkind> yes and now

[20:03] <sordith_> so i cant just go and beat a person down for using PHP because Perl is such much better for my purposes

[20:03] <lichtkind> the point i try to make that TimToady approach is too rosy eyed too me 

[20:03] <TimToady> here in northern california we have all sorts of people who think they can invent their own private religion cafeteria style, but there's no sacrifices to be made

[20:04] *** Squern left
[20:04] <TimToady> I don't think I'm rosy eyed.  I just try not to confuse what people say with what they really are

[20:04] <[particle]> spambots?

[20:04] *** Squern joined
[20:04] <sordith_> and thats a few steps further in the path of achieving wisdom

[20:06] <sordith_> cause - no offense lichtkind - i know you from lots of chatting, i know you did not mean it in a bad way - but the comment about being rosy eyed is about making a judgement. and wise people would not do that no matter what religion is right for them

[20:07] <sordith_> your religion is good if it allows you to accept that other people have a different religion

[20:08] <TimToady> in my theology there's only one person who ever did a perfect job of conveying the message, and many who fail miserably, and many who say they do but are evil, and make the truth stink.  it's all part of reality, but the stinky parts do not excuse us from looking for the good.

[20:08] *** Schwern left
[20:08] <[particle]> i'm sorry, this channel is for developing the new version of religion. you're probably using an existing religion, and should jump to #perl ;)

[20:08] <lichtkind> sordith_:  it was no judgement, is you caring and friendly like larry and having his opinion it can only mean that he doesn't know some bits about christianity in the early days

[20:08] <sordith_> [particle] :D

[20:09] <lichtkind> [particle]: it over in 1min plz

[20:09] <[particle]> talk as long as you like, i'm just making a joke

[20:10] <lichtkind> sordith_: i have no problem whatssover people believe but i have an opinion whats an illusion and whats not

[20:10] <lichtkind> sordith_: its part of normal growing up to not impose your opinion to other people

[20:11] <lichtkind> no matter what kind of opinion

[20:11] <sordith_> lichtkind: you think that, and i have the feeling that i know why you think that. but there is a flaw in that point of view, in the assumption of a boolean type of situation, whether you are right or wrong or the other person is right or wrong. but religion is exactly _not_ about that

[20:11] <lichtkind> sordith_: of couse it is :)

[20:12] *** schmalbe joined
[20:12] <lichtkind> if its not its not worth called religion in the latin sense

[20:13] <sordith_> lichtkind: define religion for yourself. the moment you find the right definition you will stop to feel any need to concince other people about the right choices. you will be able to show them what you have and allow them to choose

[20:14] <lichtkind> sordith_: religion comes from re-ligare: it means religion is what helpes you reconnect to god

[20:14] <lichtkind> and a connection is something you feel and know no need to believe

[20:14] *** Squern left
[20:14] <sordith_> lichtkind: you go backwards right now and try to convince me with the truth of other people. it does not matter where the word religion comes from and who made that up :-)

[20:15] *** Schwern joined
[20:15] <lichtkind> idiology are arbitrary information and do not connect to god

[20:15] <lichtkind> no i just clear the definition :)

[20:15] <TimToady> I think that depends on what God thinks, not on what I think.  :)

[20:16] *** njbartlett joined
[20:16] <[particle]> http://media3.washingtonpost.com/wp-dyn/content/photo/2008/03/03/PH2008030300924.jpg

[20:16] <lambdabot> http://tinyurl.com/ysonwr

[20:17] <sordith_> [particle]: thats a nice one

[20:18] <lichtkind> TimToady: in my theology many had many or few valueable bits, jesus was one of the best in recent times, but that all just tools to wake me up to realise that i am god in carnation

[20:18] <lichtkind> haha 

[20:19] <TimToady> and have you never wondered what God thinks of that?

[20:20] <lichtkind> TimToady: i think thats what he like that we lealise  since all parent what their children to be no less than themselve

[20:21] <lichtkind> s/lealise/realise/

[20:21] *** tobeya joined
[20:21] <TimToady> sure, but the parents like to be asked for advise on that subject too.  :)

[20:22] <lichtkind> TimToady: haha, i think at first parents wish well for their children, when the come and ask its even better

[20:23] *** fridim_ joined
[20:24] *** eggzeck joined
[20:24] <lichtkind> thatswhy i also think that god has no problem with any religion as long as it don't prevents to have contact with his children

[20:24] *** Chris62vw joined
[20:25] <eggzeck> grammar check ;-)

[20:25] *** jdhall left
[20:26] <lichtkind> but i also wanted to code some new feature into kephra

[20:27] *** barney left
[20:28] <lichtkind> TimToady:  just one comment to the cs lewis thing with  "religion needs to have both "thick" and "thin" aspects"

[20:29] <lichtkind> TimToady: i think the basic truths are simple, but by the time you grow mentaly and spiritually you understand more layers of that same truths, maybe that what lewis mean with thick and thin end

[20:36] *** Squern joined
[20:36] *** Schwern left
[20:37] *** literal left
[20:38] *** Squern left
[20:39] *** Schwern joined
[20:39] *** literal joined
[20:42] *** rindolf left
[20:43] *** iblechbot joined
[20:45] *** Schwern left
[20:45] *** Schwern joined
[20:47] *** blindfish left
[21:03] *** avar left
[21:05] *** dduncan left
[21:09] *** schmalbe left
[21:26] *** Chillance joined
[21:26] *** Chillance left
[21:26] *** Chillance joined
[21:38] <pugs_svnbot> r20056 | putter++ | misc/STD_red/STD_red_run: created.

[21:38] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20056

[21:38] <lambdabot> Title: Changeset 20056 - Pugs - Trac

[21:45] *** brbpack joined
[21:46] *** rdice left
[21:52] *** FurnaceBoy joined
[21:54] *** penk left
[21:55] *** Schwern left
[21:59] *** __dylan__ joined
[22:15] <lichtkind> TimToady: thank you for the adventure

[22:18] *** ikeda joined
[22:20] *** ikeda left
[22:21] *** jhorwitz left
[22:24] *** ikeda joined
[22:26] *** pmurias_ is now known as pmurias

[22:28] <pmurias> [particle]: where does the past->yaml live?

[22:30] <mncharity> In STD.pm, token infix:sym<=>, what is self.<sigil> ?  The grammar has a sigil field?

[22:32] *** ikeda left
[22:36] *** __dylan__ left
[22:39] *** eth01 joined
[22:47] *** eth01 left
[22:58] *** cmarcelo left
[23:00] *** brbpack left
[23:02] *** pmurias left
[23:07] *** eggzeck left
[23:18] *** Limbic_Region joined
[23:18] *** chris2 left
[23:22] *** Chillance left
[23:24] <TimToady> mncharity: presumably hoisted up into self by lines (such as in noun) that say:     | <variable> { $<sigil> = $<variable><sigil> }

[23:25] <TimToady> but it's not entirely clear that self can represent the match object on the left quite so transparently

[23:25] <TimToady> anyway, it's just a first whack at defining the parsing of item assignment vs list assignment based on the recent simplification

[23:27] <TimToady> likely a cleaner way would be to have a "thisterm" to go with "thisop" so we could cleanly refer to the previous term while looking for an infix or terminator

[23:28] <TimToady> the current notation was mostly just shorthand for (propagate the sigil out of what I just matched somehow or other)

[23:30] <mncharity> ah, ok.  tnx.  hmm...

[23:30] <TimToady> anyway, it's trying to make the distinction of S03:2104

[23:31] <TimToady> if these were true attribute grammars it would just naturally propagate upward when we asked for it. :)

[23:31] <mncharity> ah, I was just thinking of requesting a pointer to literature. :)

[23:31] <mncharity> re attribute grammars, there's a thought.

[23:31] <mncharity> :)

[23:32] <TimToady> the same role is currently filled by context vars mostly

[23:33] *** Auzon joined
[23:33] <TimToady> attribute grammars are simultaneously too powerful and not powerful enough :)

[23:33] <mncharity> re S03:2104, I've forgotten, is there a web Snn with line numbers somewhere?

[23:34] <TimToady> see the end of http://irclog.perlgeek.de/perl6/today and click the link there...

[23:36] <mncharity> re 'not enough', yeah.  which is why I really liked the "Grammars as spec which the collective parser wienies of the world could build and tweak engines against".  maybe get back to that once ruls/subs are objects, and thus can participate in a non-executable way.

[23:37] *** penk joined
[23:41] *** bockmabe joined
[23:42] <mncharity> re 'click the link there', hmm, I'm seeing two line-numberless versions of S03, one as Pugs POD Operator.pod, and one as Spec from perlcabal.  What am I missing?

[23:44] <mncharity> ah, you can attach #line_NNN to the perlcabal url.

[23:45] <lichtkind> are .fmt methods still valid perl ?

[23:45] <mncharity> it might be nice if http://perlcabal.org/syn/ actually said that somewhere.  or there was a form at the top of the Snn.  reading the html source to find it seems a suboptimal ui. :)

[23:45] <lambdabot> Title: Official Perl 6 Documentation

[23:47] <TimToady> the link recognition for S03:2104 should automatically add the lined number directive for you, if you click on that particular link

[23:49] <TimToady> lichtkind: yes, unless we decide to simplify somehow

[23:50] <lichtkind> thanks. iwandered if tablets are still correct on this, just braging but my index has 308 entry

[23:50] <mncharity> re Snn:N, ah.  d'oh.  towards the bottom because it had just been said, not towards the bottom because it was in the footer.

[23:51] <TimToady> mncharity: anyway, when I mouseover the link I see the line number

[23:51] <mncharity> is there any easy web-based way to get from text *to* line numbers?

[23:51] <TimToady> ah, sorry I was unclear

[23:51] *** iblechbot left
[23:52] <mncharity> np

[23:53] <TimToady> not that I know of.  but I work straight from the pod files :)

[23:53] <mncharity> right.

[23:54] <TimToady> it would probably be more useful for posterity if the linker intuited a pattern to match instead of the line number, since the line numbers change over time

[23:55] <TimToady> 'course, sometimes the words change too... 

