[00:04] *** cookys left
[00:05] *** zamolxes joined
[00:05] *** kisu__ left
[00:07] *** kisu__ joined
[00:08] *** lichtkind_ left
[00:18] <TimToady> Refinement to LTM tiebreaking rules so that foo matches before \w\w\w and fo\w matches before f\w\w.

[00:22] *** dalek left
[00:23] *** dalek joined
[00:25] *** kanru left
[00:25] *** wolverian left
[00:25] *** wolv joined
[00:26] *** wolv is now known as wolverian

[00:30] *** ZuLuuuuuu joined
[00:32] *** aindilis joined
[00:43] *** spx2 left
[00:45] <meppl> good night

[00:45] *** spx2 joined
[00:47] *** meppl left
[00:50] <rakudo_svn> r32911 | allison++ | [cage] Fix coding standards failures aside from SQLite copyright.

[00:50] *** ZuLuuuuuu left
[00:58] *** km2 left
[00:58] *** km2 joined
[01:07] *** kisu__ left
[01:13] *** jferrero left
[01:16] *** PZt joined
[01:17] *** felipe left
[01:22] *** rhr_ joined
[01:35] *** rhr left
[01:42] *** kisu joined
[01:50] *** kisu left
[01:52] *** kisu joined
[01:53] *** alc joined
[01:53] *** jhorwitz left
[02:10] *** dukeleto joined
[02:11] *** Oolk joined
[02:16] *** Exodist left
[02:30] *** zamolxes left
[02:33] *** DarkAkorn joined
[02:34] *** DarkAkorn is now known as DarkArkon

[02:34] *** DarkArkon is now known as DarkAkorn

[02:39] *** sri_kraih_ left
[02:41] *** bacek_ joined
[02:41] *** bacek__ joined
[02:41] <bacek_> perl6: say 1i ~~ Num

[02:41] <p6eval> pugs: No output (you need to produce output to STDOUT)

[02:41] <p6eval> ..elf 23046: OUTPUT[Can't call method "Str" on an undefined value at ./elf_f line 649.␤ at ./elf_f line 3861␤]

[02:41] <p6eval> ..rakudo 32919: OUTPUT[0␤]

[02:42] <bacek_> something wrong with 'pugs' in p6eval...

[02:44] *** bacek left
[02:51] *** stephens left
[03:14] *** simcop2387 left
[03:15] *** kisu left
[03:16] *** kisu joined
[03:16] *** simcop2387 joined
[03:22] *** Patterner1 joined
[03:24] *** Patterner left
[03:24] *** Patterner1 is now known as Patterner

[03:24] *** felipe joined
[03:54] *** kisu_ joined
[03:55] *** alester_ joined
[03:58] *** kisu left
[04:10] *** Limbic_Region left
[04:25] *** Oolk left
[04:38] *** apeiron left
[04:41] *** apeiron joined
[05:05] *** DarkAkorn left
[05:12] *** |jedai| joined
[05:13] *** |jedai| left
[05:19] *** kisu_ left
[05:20] *** kisu_ joined
[05:53] *** mberends left
[05:56] *** justatheory left
[06:27] *** justatheory joined
[06:39] *** silug joined
[06:43] *** DemoFreak joined
[07:03] *** pbuetow joined
[07:04] *** alester_ left
[07:07] *** ashizawa joined
[07:31] *** pbuetow left
[07:32] *** mberends joined
[07:33] *** elmex joined
[07:50] *** bacek__ left
[07:51] *** justatheory left
[07:57] *** kisu_ left
[07:57] *** silug left
[07:59] *** kisu_ joined
[07:59] *** dukeleto left
[08:01] *** bacek__ joined
[08:17] *** smg left
[08:21] <moritz_> rakudo: say %*VM<config>.keys.perl

[08:21] <p6eval> rakudo 32926: OUTPUT[["i_vfork", "i_syssocket", "ar", "as", "has_gdbm", "-Wnot-a-real-warning", "i_locale", "-Wformat-extra-args", "mandir", "-Wmissing-braces", "i_dld", "-Wall", "i_float", "pmc", "i_sysioctl", "share_ext", "osname", "perldoc", "lex", "i_stdarg", "HAS_SNPRINTF", "make_and",

[08:21] <p6eval> .."-Wstrict...

[08:24] *** jimmy_ joined
[08:24] <jimmy_> rakudo: say %?VM<config><osname>

[08:24] <p6eval> rakudo 32926: OUTPUT[Lexical '%?VM' not found␤current instr.: '_block11' pc 23 (EVAL_12:17)␤]

[08:24] <jimmy_> rakudo: say %*VM<config><osname>

[08:24] <p6eval> rakudo 32926: OUTPUT[linux␤]

[08:26] *** ejs joined
[08:39] *** azawawi joined
[08:39] <azawawi> ping

[08:39] <lambdabot> azawawi: You have 1 new message. '/msg lambdabot @messages' to read it.

[08:39] <azawawi> @messages

[08:39] <lambdabot> wayland76 said 20h 47m 52s ago: For clues about moritz_'s thesis, see http://moritz.faui2k3.org/en/uni (but I don't know what his thesis is either :) )

[08:40] <moritz_> good morning

[08:40] <moritz_> (my thesis is about spin transport phaenomena in mesoscopic systems. Weird stuff.)

[08:40] <azawawi> works with p6? ;-)

[08:41] <moritz_> no

[08:41] <azawawi> so parrot will be production quality by 2010

[08:42] <azawawi> moritz_: where can i find the rakudo spec passed/failed graph?

[08:42] <moritz_> http://rakudo.de/

[08:42] <lambdabot> Title: Rakudo - A Perl 6 Compiler

[08:43] <azawawi> thx

[08:59] *** bacek_ left
[09:00] *** jimmy_ left
[09:07] *** masak joined
[09:10] *** iblechbot joined
[09:12] *** azawawi left
[09:42] *** alc left
[09:47] *** smg joined
[09:49] *** schmalbe joined
[09:52] *** kisu_ left
[09:53] *** simcop2387 left
[09:54] *** kisu_ joined
[09:56] *** simcop2387 joined
[10:39] *** kisu_ left
[10:39] *** masak left
[10:39] *** kisu_ joined
[11:07] *** DemoFreak left
[11:19] *** kanru joined
[11:27] *** km2 left
[11:33] *** DarkArchon joined
[11:35] *** spx2 left
[11:36] *** spx2 joined
[11:40] *** zamolxes joined
[11:52] *** ChrisDavaz left
[11:52] *** smg left
[11:57] *** meppl joined
[12:02] *** zamolxes left
[13:25] *** ilogger2 joined
[14:11] *** iblechbot joined
[14:16] *** rindolf joined
[14:16] *** kisu__ joined
[14:34] *** iblechbot left
[14:46] *** kisu_ joined
[14:53] *** kisu__ left
[14:53] *** silug joined
[14:58] *** spx2 joined
[15:00] *** xinming joined
[15:04] *** Exodist joined
[15:12] *** iblechbot joined
[15:36] <pugs_svn> r23047 | jnthn++ | [spectest] Fix line ending issues and set svn:eol-style native on S12-class/basic.t.

[15:43] <moritz_> rakudo: say 010 + 010

[15:43] <p6eval> rakudo 32938: OUTPUT[Leading 0 does not indicate octal in Perl 6␤Leading 0 does not indicate octal in Perl 6␤20␤]

[15:44] *** xuser joined
[15:44] <masak> Rakudo++

[15:47] <moritz_> rakudo++ indeed

[15:49] <masak> moritz_: if I see a file in t/spec with underscores, should I change its name to something with dashes? or are there good reasons not to?

[15:50] <moritz_> masak: if you do it, please do it for all at once, and adapt spectest.dat

[15:51] <masak> moritz_: that's a nice idea.

[15:51] <masak> I might do it later today, no promises. :)

[15:54] *** kanru joined
[15:56] *** silug left
[16:08] *** kisu_ left
[16:08] *** bsdperl joined
[16:08] *** kisu_ joined
[16:16] <TimToady> std: 010+

[16:16] <p6eval> std 23047: OUTPUT[############# PARSE FAILED #############␤(Possible runaway string from line 1 to line 1)␤Can't understand next input--giving up at /tmp/SGdr8R22kO line 0:␤------> ␤    expecting prefix or noun␤Other potential difficulties:␤  Leading 0 does not indicate octal in

[16:16] <p6eval> ..Perl...

[16:16] <TimToady> currently STD only reports the leading 0 if there was some other difficulty, but maybe it should do it all the time

[16:17] <rindolf> Someone I know from fc-solve-discuss created an Assembler where a leading 0 indicates Hexadecimal.

[16:17] <moritz_> rindolf: even more fun ;)

[16:17] <TimToady> I blame the hindu-arabics :)

[16:19] <masak> meanwhile, in the rest of the world, a leading 0 indicates nothing in particular.

[16:21] <rindolf> What will a leading 0 signify in p6?

[16:21] <TimToady> nothing in particular

[16:21] <moritz_> rindolf: a warning

[16:21] <rindolf> And octal will be 0o?

[16:21] <TimToady> or :8<...>

[16:21] <moritz_> or .oO ;)

[16:21] <rindolf> I see.

[16:22] <TimToady> .oO(mental arithmatic goes here)

[16:22] <TimToady> *arithmetic even

[16:22] *** kisu__ joined
[16:23] *** stephens joined
[16:23] <masak> o_O

[16:23] <PerlJam> Is being arithmatic like being arthritic in any way?

[16:24] <moritz_> arithmatic = arithmetic with arthritic brain?

[16:24] <TimToady> no, it's automatic arithmetic

[16:25] <TimToady> you're thinking of arithitis

[16:26] <masak> I think we have an arithmatic down in the lunch room.

[16:26] <moritz_> TimToady: yes. English can be so confusing from time to time ;)

[16:26] *** meteorjay joined
[16:26] <TimToady> and Chinese isn't even one language

[16:27] <TimToady> all(@Chinese) == False

[16:27] *** kisu_ left
[16:28] <TimToady> well, I wonder if I should do anything today...

[16:29] <rindolf> TimToady: contribute to en.wiktionary.org

[16:29] <TimToady> I meant, should I be doing something I should already be doing?  :)

[16:30] <TimToady> I don't need new things in that category...

[16:30] <rakudo_svn> r32941 | coke++ | Resolve RT#60592 ; rename :lexid to :subid

[16:30] <rakudo_svn> r32941 | coke++ | 

[16:30] <rakudo_svn> r32941 | coke++ | change docs, PIR syntax, and internal C structure that housed the data.

[16:32] <PerlJam> TimToady: release a perl 6 compiler that's "official"  ;-)

[16:32] <masak> PerlJam: what do you think we've been doing all this time?

[16:32] <PerlJam> masak: yeah, but he should do it *today*  :)

[16:33] <perl6> please, release me!

[16:33] <masak> ...just to up the stakes a bit, eh?

[16:34] <masak> someone should make a webcomic about poor little perl6 being held prisoner underground by the Perl community, for fear of what it might do if let out.

[16:34] <moritz_> masak: nice idea ;)

[16:34] <[particle]> sounds a bit like serenity

[16:34] <PerlJam> I like how "git diff master..lex4" shows me trailing whitespace in red.

[16:35] <masak> [particle]: I haven't got to that series yet. I hear it's good though.

[16:35] <[particle]> pj: my .vimrc shows me trailing ws in red

[16:35] <[particle]> masak: hulu.com has them all

[16:35] <masak> moritz_: the phrase 'please, release me' would figure in every installment.

[16:35] <masak> [particle]: noted.

[16:36] <PerlJam> [particle]: for all files or just certain ones?

[16:37] <masak> [particle]: "We're sorry, currently our video library can only be streamed within the United States."

[16:37] <[particle]> pj: all files. i hate all trailing ws equally, but it could be configured per-filetype i suppose

[16:37] <PerlJam> This is the first time I've noticed trailing whitespace of any kind (since usually it's invisible :)

[16:37] <[particle]> masak :(

[16:37] <masak> indeed.

[16:37] <[particle]> PerlJam: pugs repo is full of it, unfortunately

[16:38] <PerlJam> does it really bother you that much?

[16:38] <PerlJam> I'm still in the position of wonder why anyone even cares.

[16:38] <PerlJam> s/wonder/wondering/

[16:41] <TimToady> .oO(if purl were here, I'm sure she'd have some opinions about the merits/demerits of cage cleaning)

[16:42] * masak is glad purl isn't here

[16:45] <[particle]> perljam: it messes with my ability to edit files quickly. if i go to the end of the line, my cursor isn't over the semicolon, it's to the right of it by some number of invisible characters

[16:46] *** smg joined
[16:46] <[particle]> so, i have a ',ts' vim macro that removes all trailing space in a file

[17:10] *** jan__ joined
[17:34] *** cognominal joined
[17:43] *** justatheory joined
[18:00] *** canol joined
[18:02] *** REPLeffect joined
[18:09] *** canol is now known as ZuLuuuuuu

[18:14] *** justatheory left
[18:15] *** justatheory joined
[18:15] *** justatheory left
[18:15] *** justatheory joined
[18:24] *** ZuLuuuuuu left
[18:38] *** DemoFreak joined
[18:46] *** pbuetow joined
[18:58] *** schmalbe joined
[18:58] *** km2 joined
[18:58] <pugs_svn> r23048 | lwall++ | [gimme5] switch back to YAML::Syck till YAML::XS is fixed

[18:58] <pugs_svn> r23048 | lwall++ | [viv] allow input from stdin

[18:58] <pugs_svn> r23048 | lwall++ | [STD] always report worries for now

[19:03] *** preflex joined
[19:09] *** adc_penner joined
[19:10] *** pbuetow left
[19:11] *** DarkArchon joined
[19:15] *** Khisanth joined
[19:17] *** simcop2387 joined
[19:36] *** hercynium joined
[19:38] *** rdice joined
[19:42] *** smg left
[20:26] *** pmurias joined
[20:30] *** masak joined
[20:48] *** alexn_org joined
[20:57] *** schmalbe left
[20:57] *** kisu_ joined
[20:59] *** DarkAcorn joined
[21:02] *** pbuetow joined
[21:03] *** kisu__ left
[21:12] *** smg joined
[21:16] *** rindolf left
[21:26] *** DarkArchon left
[21:29] *** zamolxes joined
[22:01] <masak> I know what's going on in the following piece of code, but I would like for someone to tell me whether this shloud work:

[22:01] <masak> rakudo: my $cl = { "$^name upcased becomes {$^name.uc}" }; say $cl("larry")

[22:01] <p6eval> rakudo 32961: OUTPUT[too few arguments passed (0) - 1 params expected␤current instr.: '_block26' pc 191 (EVAL_12:69)␤]

[22:02] <masak> s/shloud/should/

[22:03] <moritz_> why shouldn't it work?

[22:03] <masak> moritz_: because the thing inside the string is also a closure.

[22:03] <moritz_> rakudo: my $cl = { $^a ~ $^a }; say $cl("b")

[22:03] <p6eval> rakudo 32961: OUTPUT[bb␤]

[22:03] <moritz_> rakudo: my $cl = { $^a ~ { $^a }.() }; say $cl("b")

[22:03] <p6eval> rakudo 32961: OUTPUT[too few arguments passed (0) - 1 params expected␤current instr.: '_block23' pc 167 (EVAL_14:65)␤]

[22:03] <masak> moritz_: then you agree that it's a bit odd that it doesn't work?

[22:04] <moritz_> ah, I see what you mean.

[22:04] <masak> should it or shouldn't it work?

[22:04] <moritz_> but since you can't pass arguments to closures in strings, it makes most sense to use the outer closure's self-declared parameters

[22:04] <masak> I mean, there's no way to send arguments to a closure in a string anyway...

[22:04] <masak> right.

[22:04] * masak files rakudobug

[22:04] <moritz_> I don't know if it's specced, from a dwim'miness POV it should work.

[22:05] <masak> aye

[22:05] <jnthn> masak: I think that's for the language list rather than rakudobug, IMO.

[22:05] <masak> jnthn: gotcha.

[22:05] <masak> (I already made the wrong call once today with sign())

[22:06] <jnthn> I could also argue that keeping closure parameter semantics consistent is desirable, and saying that if you want a closrue that takes paratmers you can always do a pointy instead.

[22:06] <jnthn> erm

[22:06] <jnthn> Not closure paratmers, placeholder parameters.

[22:06] <jnthn> But yes, I see the other argument too.

[22:07] <masak> each time you say something worthwhile, I have to redo my text selection in the IRC buffer :P

[22:08] * moritz_ experienced the same thing a few times today already

[22:08] <jnthn> masak: That's OK, many of the times you say something worthwhile I have another Rakudo ticket to work on. ;-)

[22:08] <masak> so $^they are called 'placeholder parameters'?

[22:08] <moritz_> ;-)

[22:08] <jnthn> I believe so.

[22:09] <masak> jnthn: good thing I don't say something worthwhile that often, then :P

[22:09] <masak> either I've been losing speed lately, or rakudo's been getting more robust, or both.

[22:10] <jnthn> The proportion of the Perl 6 RT tickets you're the creator of suggests otherwise... ;-)

[22:10] <jnthn> I'd like to hope Rakudo is getting more robust.

[22:10] <jnthn> There can only be so many bugs, surely? :-)

[22:11] * moritz_ notices that real world hacking tends to catch very different bugs than the test suite

[22:12] <jnthn> Yeah. I do try these days to put something close to what the bug was into the test suite, or un-fudge a test that fixing that made pass.

[22:12] <jnthn> The second does happen a bit too.

[22:17] <masak> mail sent.

[22:20] <masak> now for the other bug I found...

[22:20] * masak grins evilly

[22:24] *** hercynium left
[22:25] *** adc_penner left
[22:26] *** hercynium joined
[22:38] *** zamolxes_ joined
[22:38] *** zamolxes left
[22:48] *** FurnaceBoy joined
[22:50] *** DemoFreak left
[22:50] *** zamolxes_ left
[22:50] *** zamolxes joined
[22:51] *** kisu__ joined
[22:55] *** kisu_ left
[22:55] *** iblechbot left
[23:06] *** lisppaste3 joined
[23:10] <masak> http://gist.github.com/27262

[23:10] <lambdabot> Title: gist: 27262 — GitHub

[23:11] <masak> I didn't work too hard trying to shrink the example further.

[23:11] <pmichaud> yet another lexicals bug.

[23:11] <lambdabot> pmichaud: You have 5 new messages. '/msg lambdabot @messages' to read them.

[23:11] <masak> pmichaud: aye, I knew you were going to say that :)

[23:11] <pmichaud> well, that's what it _is_  :-)

[23:11] <masak> well, sure.

[23:12] <masak> pmichaud: do you think it will sort itself out after the lex branches come merging back to trunk?

[23:12] <pmichaud> yes.

[23:12] <masak> good.

[23:12] <pmichaud> so far every lexical example that's been submitted seems to work in the lex branch

[23:12] <masak> very good.

[23:13] <pmichaud> right now we're just having trouble with context management (contexts being collected too soon or not at all)

[23:13] <masak> sounds tricky.

[23:13] <jnthn> Having seen, but not worked on, the code in question I can say it almost certainly *is* tricky.

[23:14] <pmichaud> we're really close.

[23:15] <masak> pmichaud: as in, if I go to bed now I might have to backlog the merge?

[23:18] <pmichaud> you might.

[23:19] *** hercynium left
[23:19] *** masak left
[23:22] *** pbuetow left
[23:28] *** rdice left
[23:42] * moritz_ risks missing the merge, and goes to bed now ;)

[23:45] *** spx2 left
