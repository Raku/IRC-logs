[00:02] *** jferrero joined
[00:15] *** alech left
[00:38] *** cspencer left
[00:52] <literal> perl6: my $var = 'bar', "foo \qq[$bar]".perl

[00:52] <p6eval> elf 24603: RESULT«"\"foo\\\ \\\\qq\\\[\\\$bar\\\]\""␤»

[00:52] <p6eval> ..rakudo 34343: OUTPUT«Scope not found for PAST::Var '$bar'␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[00:52] <p6eval> ..pugs: OUTPUT«*** Undeclared variable: ("$bar",MkPad (padToList [("$_",PELexical {pe_type = (mkType "Scalar"), pe_proto = <Scalar:0xb6511639>, pe_flags = MkEntryFlags {ef_isContext = True}, pe_store = <ref:0xb653e731>}),("@_",PELexical {pe_type = (mkType "Array"), pe_proto = <Array:0xb6515081>...

[00:52] <literal> perl6: my $var = 'bar'; "foo \qq[$bar]".perl

[00:52] <p6eval> pugs: OUTPUT«*** Undeclared variable: ("$bar",MkPad (padToList [("$_",PELexical {pe_type = (mkType "Scalar"), pe_proto = <Scalar:0xb6509e89>, pe_flags = MkEntryFlags {ef_isContext = True}, pe_store = <ref:0xb6541731>}),("@_",PELexical {pe_type = (mkType "Array"), pe_proto = <Array:0xb650f705>...

[00:52] <p6eval> ..elf 24603: RESULT«"\"foo\\\ \\\\qq\\\[\\\$bar\\\]\""␤»

[00:52] <p6eval> ..rakudo 34343: OUTPUT«Scope not found for PAST::Var '$bar'␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[00:53] <literal> perl6: my $var = 'bar'; "foo \qq[$var]".perl

[00:53] <p6eval> pugs, rakudo 34343: RESULT«"\"foo qq[bar]\""»

[00:53] <p6eval> ..elf 24603: RESULT«"\"foo\\\ \\\\qq\\\[\\\$var\\\]\""␤»

[00:54] <pugs_svn> r24604 | hinrik++ | [util/perl6.vim] remove a redundant line

[01:21] <meppl> good night

[01:24] *** meppl left
[01:30] *** maerzhase left
[01:39] *** DemoFreak left
[01:46] *** cspencer joined
[01:50] <cspencer> rakudo: :by(3).WHAT.say

[01:50] <p6eval> rakudo 34343: OUTPUT«Pair␤»

[01:53] <cspencer> rakudo: (by => 3).WHAT.say

[01:53] <p6eval> rakudo 34343: OUTPUT«Pair␤»

[01:54] <cspencer> rakudo: :a(0).perl.say

[01:54] <p6eval> rakudo 34343: OUTPUT«"a" => 0␤»

[01:54] <cspencer> rakudo: :!a.perl.say

[01:54] <p6eval> rakudo 34343: OUTPUT«"a" => 0␤»

[02:16] *** alc joined
[02:19] *** r0bby left
[02:19] *** r0bby joined
[02:20] *** ruoso left
[02:28] *** alanhaggai joined
[02:46] *** rhr joined
[03:01] *** alester joined
[03:09] *** ruoso joined
[03:21] *** azawawi_ joined
[03:34] *** azawawi left
[03:38] *** azawawi joined
[03:48] *** dwhipp joined
[03:56] *** azawawi_ left
[04:00] *** cspencer left
[04:00] *** elmex left
[04:02] *** elmex joined
[04:03] *** azawawi left
[04:08] <pugs_svn> r24605 | hinrik++ | [util/perl6.vim] a few Q tweaks

[04:09] <dwhipp> rakudo: my @a = 1..3; @a >>++;

[04:09] <p6eval> rakudo 34343: OUTPUT«Statement not terminated properly at line 1, near ">>++;"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[04:09] <dwhipp> rakudo: my @a = 1..3; @a >>+=>> 1;

[04:09] <p6eval> rakudo 34343: OUTPUT«Statement not terminated properly at line 1, near ">>+=>> 1;"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[04:10] <dwhipp> rakudo: my @a = 1..3; @a >>+>>= 1;

[04:10] <p6eval> rakudo 34343: OUTPUT«get_iter() not implemented in class 'Integer'␤current instr.: 'prefix:=' pc 17607 (src/builtins/misc.pir:17)␤»

[04:12] *** cspencer joined
[04:13] <dwhipp> rakudo: my @a = 1..3; ++<< @a;

[04:13] <p6eval> rakudo 34343: OUTPUT«Syntax error at line 1, near "++<< @a;"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[04:13] <literal> rakudo: my @ = 1..3; [++] @a;

[04:13] <p6eval> rakudo 34343: OUTPUT«Syntax error at line 1, near "[++] @a;"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[04:14] <literal> rakudo: my @a = 1..3; [++] @a;

[04:14] <p6eval> rakudo 34343: OUTPUT«Syntax error at line 1, near "[++] @a;"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[04:15] *** alanhaggai left
[04:29] *** c9s left
[04:37] <Tene> Does anyone here know colomon from use.perl ?

[04:57] <TimToady> rakudo: my @a = 1..3 @a>>++

[04:57] <p6eval> rakudo 34345: OUTPUT«Statement not terminated properly at line 1, near "@a>>++"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[04:59] <Tene> Should that parse?

[04:59] <TimToady> rakudo: my @a = 1..3; @a>>++

[04:59] <p6eval> rakudo 34345: OUTPUT«Statement not terminated properly at line 1, near ">>++"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[04:59] <TimToady> std: my @a = 1..3; @a>>++

[04:59] <p6eval> std 24605: OUTPUT«00:05 86m␤»

[05:00] <TimToady> rakudo: my @a = 1..3; @a»++

[05:00] <p6eval> rakudo 34345: OUTPUT«Statement not terminated properly at line 1, near "\x{bb}++"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤»

[05:00] <Tene> Ah, hyper postfix NYI.

[05:00] <TimToady> std: my @a = 1..3; @a»++

[05:01] <p6eval> std 24605: OUTPUT«00:05 86m␤»

[05:06] *** alester left
[05:08] <dwhipp> my @a = 1..3; my ($head, @tail) = @a; say "$head, {@tail}"

[05:08] <dwhipp> rakudo: my @a = 1..3; my ($head, @tail) = @a; say "$head, {@tail}"

[05:08] <p6eval> rakudo 34345: OUTPUT«1, ␤»

[05:08] <dwhipp> pugs: my @a = 1..3; my ($head, @tail) = @a; say "$head, {@tail}"

[05:08] <p6eval> pugs: OUTPUT«1, 2␤»

[05:09] *** cspencer left
[05:09] <dwhipp> rakudo: my @a = 1..3; my ($head, @tail) = |@a; say "$head, {@tail}"

[05:09] <p6eval> rakudo 34345: OUTPUT«too many arguments passed (4) - 2 params expected␤current instr.: 'infix:=' pc 13192 (src/builtins/assign.pir:71)␤»

[05:09] <dwhipp> rakudo: my @a = 1..3; my ($head, *@tail) = @a; say "$head, {@tail}"

[05:09] <p6eval> rakudo 34345: OUTPUT«1, ␤»

[05:09] <dwhipp> rakudo: my @a = 1..3; my ($head, *@tail) := @a; say "$head, {@tail}"

[05:09] <p6eval> rakudo 34345: OUTPUT«rtype not set␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[05:09] <dwhipp> rakudo: my @a = 1..3; my ($head, *@tail) := |@a; say "$head, {@tail}"

[05:09] <p6eval> rakudo 34345: OUTPUT«rtype not set␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[05:10] <dwhipp> pugs: my @a = 1..3; my ($head, *@tail) := |@a; say "$head, {@tail}"

[05:10] <p6eval> pugs: OUTPUT«*** Wrong number of binding parameters: 1 actual, 2 expected␤    at /tmp/uWQROwcYBI line 1, column 15-40␤»

[05:10] <dwhipp> pugs: my @a = 1..3; my ($head, *@tail) := @a; say "$head, {@tail}"

[05:10] <p6eval> pugs: OUTPUT«*** Wrong number of binding parameters: 1 actual, 2 expected␤    at /tmp/wol2upjsf3 line 1, column 15-39␤»

[05:11] *** cspencer joined
[05:13] <dwhipp> rakudo: my @a = 1..3; my ($head, @tail) = 1..3; say "$head, {@tail}"

[05:13] <p6eval> rakudo 34345: OUTPUT«1, ␤»

[05:13] <dwhipp> rakudo: my @a = 1..3; my ($head, *@tail) = 1..3; say "$head, {@tail}"

[05:13] <p6eval> rakudo 34345: OUTPUT«1, ␤»

[05:13] <dwhipp> rakudo: my @a = 1..3; my ($head, *@tail) := 1..3; say "$head, {@tail}"

[05:14] <p6eval> rakudo 34345: OUTPUT«rtype not set␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 146 (src/PCT/HLLCompiler.pir:102)␤»

[05:15] <dwhipp> seems there must be a way to do "($car, @cdr) = @list" -- signature matching works

[05:17] *** cspencer left
[05:22] *** c9s joined
[05:29] *** dwhipp left
[05:38] *** cspencer joined
[06:04] *** c9s left
[06:13] *** bacek left
[06:19] *** Luyt joined
[06:24] *** c9s_ joined
[06:28] *** c9s_ left
[06:29] *** c9s_ joined
[06:29] *** c9s_ left
[06:30] *** c9s_ joined
[06:48] *** ashizawa joined
[06:56] *** cspencer left
[06:58] *** cspencer joined
[07:02] *** cspencer left
[07:05] *** Luyt left
[07:14] *** azawawi joined
[07:14] <azawawi> hi

[07:18] *** mberends joined
[08:05] *** vixey joined
[08:09] *** alech joined
[08:12] <literal> hi

[08:15] <Tene> hi!

[08:15] <azawawi> hi!!

[08:21] <mberends> hi!!!

[08:22] <literal> since there's someone here now, what's the shortest way to do this in Perl 6? http://www.reddit.com/r/programming/comments/7lf1u/coding_challenge_divide_a_list_into_n_sublists/

[08:24] <mberends> it's gotta be slices, but Rakudo slices may be only partially implemented

[08:31] <Tene> I came up with a few options.  let's see what I remember.

[08:33] <Tene> http://nopaste.snit.ch/15096 was my first solution

[08:36] <Tene> I think I had an answer with slices, but slices are NYI on rakudo

[08:36] <Tene> I also had an answer with gather/take...

[08:36] <Tene> gather { for 1..$n { take <something> } }

[08:36] <Tene> don't quite recall, but it was pretty short

[08:37] *** justatheory joined
[08:44] *** plash_ joined
[08:52] *** ewilhelm left
[08:57] *** alech left
[08:59] *** ejs joined
[09:04] *** iblechbot joined
[09:19] *** ejs left
[09:24] *** duke_leto joined
[09:27] *** ejs joined
[10:01] *** ejs left
[10:11] *** ejs joined
[10:16] *** ejs left
[10:16] *** ejs joined
[10:37] *** dmq joined
[10:37] *** dmq left
[10:50] *** duke_leto left
[10:52] *** alc left
[10:59] *** alech joined
[11:07] *** DemoFreak joined
[11:24] *** alech left
[11:33] *** alech joined
[11:44] *** masak joined
[11:54] <masak> perl6: <13 37 50 50 57 -32 3 40 50 41 51 52 45 33 51 -31>.map({ chr($_ + 64) }).join('').say

[11:54] <p6eval> elf 24605: OUTPUT«Use of uninitialized value $_ in addition (+) at (eval 117) line 3.␤Undefined subroutine &GLOBAL::chr called at (eval 117) line 3.␤ at ./elf_f line 3861␤»

[11:54] <p6eval> ..pugs, rakudo 34346: OUTPUT«Merry Christmas!␤»

[11:54] <masak> (the conventional one, not the Perl 6 one)

[11:57] *** alech left
[11:57] <masak> I just submitted i slightly worrying bug.

[11:58] <masak> perl6: class A { has $.b; }; my @q = A.new( :b(1) ); while shift @q -> $p { $p.clone( :b($p.b + 1) ); say $p.b; }

[11:58] <p6eval> rakudo 34346: OUTPUT«2␤»

[11:58] <p6eval> ..pugs: OUTPUT«*** Cannot 'shift' scalar␤    at Prelude.pm line 736, column 48-75␤»

[11:58] <p6eval> ..elf 24605: OUTPUT«Useless use of reference constructor in void context at (eval 121) line 13.␤Undefined subroutine &Main::ARRAY called at (eval 121) line 8.␤ at ./elf_f line 3861␤»

[12:01] <masak> TimToady: though I'm flattered, I think you meant "I'd just watch moritz_ for a while"

[12:05] *** cognominal left
[12:07] <masak> pmurias, ruoso: I know it's probably not your fault, but when checking out pugs with `svn co http://svn.pugscode.org/pugs/ pugs`, svn dies in pugs/v6/smop/m0ld/. on a clean checkout.

[12:08] *** pmurias joined
[12:08] *** ashizawa left
[12:13] <pmurias> ruoso: is -DSMOP_LOWLEVEL_MEM_TRACE enough to turn reference counting validation on?

[12:15] <masak> pmurias: http://gist.github.com/39888

[12:17] <pmurias> masak: remove .svn directories at random ;)

[12:17] <masak> pmurias: I want to stress that this is a clean checkout, not an update.

[12:18] <masak> svn complains when I remove .svn directories.

[12:19] <masak> :(

[12:19] <masak> I know this is most likely svn's fault, not yours

[12:19] <masak> but it's bad for everyone if people coming to Perl 6 cannot check out the Pugs repo.

[12:20] * masak upgrades svn

[12:24] <pmurias> masak: maybe your svn is too new?

[12:24] <masak> it was 1.4.4

[12:24] <masak> latest is 1.5.5

[12:24] <pmurias> i have 1.4.6

[12:25] <masak> pmurias: and you can to clean checkouts from that URL with no problem?

[12:28] <ruoso> pmurias, yes, it is

[12:29] <pmurias> masak: trying

[12:30] <pmurias> ruoso: i suspect it is not working in HEAD

[12:30] <ruoso> you probably just fixed all the leaks ;)

[12:30] <pmurias> ruoso: could you check if it works? (with an artificial one)

[12:33] <pmurias> i fixed the leaks before the switch to scons, but P5Interpreter isn't DESTROYALL'ed properly at the leak checker doesn't find anything

[12:33] <pmurias> masak: the fresh checkout works here

[12:36] <masak> pmurias: thank you. then hopefully it's just 1.4.4 that's too old.

[12:39] <ruoso> pmurias, you can always turn SMOP_LOWLEVEL_MEM_DEBUG on also, it should print more verbose messages...

[12:43] <pugs_svn> r24606 | pmurias++ | [smop] fixed a segfault in postcircumfix:<( )> on a wrapped SV*

[12:43] <pmurias> ruoso: i'll try that again

[12:46] *** DemoFreak left
[12:46] *** DemoFreak joined
[12:49] <pmurias> ruoso: i just wanted to have someone else check if the tracing works as i'm getting more and more confused by it atm

[12:49] *** plash_ left
[13:01] *** ft left
[13:04] <pmurias> ruoso: m0ld was not calling smop_destr

[13:06] *** icwiener joined
[13:10] <masak> Perl is a Shinto shrine: http://www.youtube.com/watch?v=Xe1TZaElTAs

[13:15] <pmurias> ruoso: i think i'll just write a bytecode loade

[13:16] <pmurias> and throw away the smop in haskell embedding

[13:27] *** icwiener_ joined
[13:38] <masak> upgrading svn didn't help :( I still can't check out the Pugs repo.

[13:38] <masak> the error message changed slightly:

[13:38] <masak> "Can't open file 'pugs/v6/smop/m0ld/.svn/tmp/text-base/m0ld.hs.svn-base': No such file or directory"

[13:38] <masak> svn--

[13:38] *** meppl joined
[13:40] <pmurias> masak: maybe you need exactly 1.4.6?

[13:40] <pmurias> masak: fresh checkout again?

[13:42] *** icwiener left
[13:42] <pmurias> ruoso: how should smop know how to load a given object from a bytecode file?

[13:45] *** iblechbot left
[13:46] *** alech joined
[13:57] <masak> pmurias: I think I'll turn to #svn about this.

[13:57] <masak> pmurias: yes, it was a fresh checkout.

[13:57] <azawawi> masak: what's the problem?

[13:57] <masak> azawawi: I can't get svn to checkout the whole Pugs repo.

[13:58] <azawawi> masak: will try it now on feather1

[13:59] <masak> people have reported similar problems in the last couple of months. this is the first time I've had them.

[13:59] <azawawi> masak: any pbot output you could share?

[13:59] *** alester joined
[13:59] <masak> azawawi: the error is simply "svn: Can't open file 'pugs/v6/smop/m0ld/.svn/tmp/text-base/m0ld.hs.svn-base': No such file or directory"

[14:00] <azawawi> masak: svn co works on feather1, version 1.5.1 (r32289)

[14:00] <masak> azawawi: thanks for checking.

[14:01] <azawawi> masak: np

[14:16] *** alester left
[14:23] *** ft joined
[14:37] *** vixey left
[14:43] *** alech left
[14:50] *** eternaleye_ joined
[14:54] *** nomas joined
[14:59] *** DemoFreak left
[15:00] *** DemoFreak joined
[15:01] *** nomas left
[15:04] *** nomas joined
[15:06] *** eternaleye left
[15:06] *** ZuLuuuuuu joined
[15:14] *** alanhaggai joined
[15:15] *** nomas left
[15:16] *** bsdperl left
[15:19] *** nomas joined
[15:20] <rakudo_svn> r34347 | infinoid++ | [cage] Fix failures from the following codingstd tests:

[15:20] <rakudo_svn> r34347 | infinoid++ | * check_toxxx.t

[15:20] <rakudo_svn> r34347 | infinoid++ | * c_code_coda.t

[15:21] *** dalek left
[15:21] *** dalek joined
[15:22] <TimToady> no problem svn upping in california

[15:23] <masak> I don't think it's the upping that's the problem, only the co'ing under some not yet clear circumstances.

[15:26] *** nomas left
[15:29] *** iblechbot joined
[15:29] <pugs_svn> r24607 | moritz++ | [t] and [t/spec]

[15:29] <pugs_svn> r24607 | moritz++ |  * moved NaN.t, ref.t, trusts.t and fail.t to spec/

[15:29] <pugs_svn> r24607 | moritz++ |  * merged tests from complex_powers.t into arith.t

[15:29] <pugs_svn> r24607 | moritz++ |  * replaced die_and_end.t with something more useful inside spec/

[15:29] <pugs_svn> r24607 | moritz++ |  * merge builtins/my.t into spec/S04-declarations/my.t

[15:29] <pugs_svn> r24607 | moritz++ |  * small simplifications to spec/S03-operators/p5arrow.t

[15:29] <pugs_svn> r24607 | moritz++ |  * removed quotes from isa_ok(..., 'QuotedType') 

[15:29] <pugs_svn> r24607 | moritz++ |  * various unfudges for rakudo

[15:29] <pugs_svn> r24607 | moritz++ |  * added tests for binding to signatures

[15:30] <pugs_svn> r24607 | moritz++ |  * added tests for KeyHash

[15:30] <pugs_svn> r24607 | moritz++ |  * added TASKS

[15:30] <pugs_svn> r24607 | moritz++ |  * [examples/99problems]: simplified some of the tests

[15:30] <pugs_svn> r24607 | moritz++ | Merry Christmas!

[15:30] * azawawi 'The Return of The moritz_' ;-)

[15:32] *** alc joined
[15:32] <moritz_> I'm just peeking in

[15:32] <azawawi> merry christmas

[15:32] <moritz_> thanks, same to you!

[15:33] * azawawi is working on Inline::C + PPI

[15:35] *** ejs1 joined
[15:42] *** alech joined
[15:45] <pugs_svn> r24608 | moritz++ | [t/spec] some unfudges in next.t

[15:45] *** alech left
[15:46] *** ejs left
[15:48] *** cspencer joined
[15:49] *** cspencer left
[15:50] *** ejs2 joined
[15:51] *** alanhaggai_ joined
[15:55] <pugs_svn> r24609 | lwall++ | [STD] add div operator, don't mismarse (::T) as (: : T)

[16:00] *** ejs1 left
[16:06] *** ft left
[16:06] *** alanhaggai left
[16:11] *** ft joined
[16:13] *** maerzhase joined
[16:21] *** alanhaggai_ is now known as alanhaggai

[16:24] *** alc left
[16:34] *** alester joined
[16:37] *** ejs2 left
[16:40] *** cspencer joined
[16:43] <pmurias> azawawi: Inline::C + PPI = speeding PPI up?

[16:56] *** alester left
[17:17] *** cognominal joined
[17:19] *** masak left
[17:20] *** alech joined
[17:21] *** ejs joined
[17:21] *** ejs1 joined
[17:27] *** ejs left
[17:28] *** dwhipp joined
[17:28] <dwhipp> pugs: say "yes" if 1 == 1|2

[17:28] <p6eval> pugs: OUTPUT«yes␤»

[17:28] <dwhipp> pugs: say "yes" if 1 === 1|2

[17:28] <p6eval> pugs: OUTPUT«yes␤»

[17:28] <dwhipp> rakudo: say "yes" if 1 === 1|2

[17:28] <p6eval> rakudo 34350: RESULT«Bool::False»

[17:34] <dwhipp> pugs: [1,2,3] === [1|2, 2|3, 3|4]

[17:34] <p6eval> pugs: RESULT«Bool::False»

[17:34] <dwhipp> pugs: [1,2,3] === [1, 2, 3]

[17:34] <p6eval> pugs: RESULT«Bool::False»

[17:34] <dwhipp> rakudo: [1,2,3] === [1, 2, 3]

[17:35] <p6eval> rakudo 34350: RESULT«Bool::False»

[17:35] <dwhipp> rakudo: [1,2,3] ~~  [1, 2, 3]

[17:35] <p6eval> rakudo 34350: RESULT«Bool::True»

[17:35] <dwhipp> rakudo: [1,2,3] ~~  [1, 2|3, 3]

[17:35] <p6eval> rakudo 34350: RESULT«Bool::False»

[17:35] <dwhipp> rakudo: [1,2,3] ~~  [1, 2&3, 3]

[17:35] <p6eval> rakudo 34350: RESULT«Bool::False»

[17:35] <dwhipp> rakudo: [1,2,3] ~~  [1, 2, 3]

[17:35] <p6eval> rakudo 34350: RESULT«Bool::True»

[17:36] <dwhipp> pugs: [1,2,3] ~~  [1, 2, 3]

[17:36] <p6eval> pugs: RESULT«Bool::True»

[17:36] <dwhipp> pugs: [1,2,3] ~~  [1, 2|3, 3]

[17:36] <p6eval> pugs: RESULT«Bool::False»

[17:37] <cspencer> pugs: [1,2,3] ~~ [1, 2||3, 3]

[17:37] <p6eval> pugs: RESULT«Bool::True»

[17:38] <dwhipp> but that's trivially true

[17:39] <dwhipp> pugs: [1,0,3] ~~  [1, 0||2, 3]

[17:39] <p6eval> pugs: RESULT«Bool::False»

[17:39] <dwhipp> pugs: [1,0,3] ~~  [1, 0|2, 3]

[17:39] <p6eval> pugs: RESULT«Bool::False»

[17:39] <cspencer> hmm

[17:39] <cspencer> pugs: (0|2).say

[17:40] <p6eval> pugs: OUTPUT«any(VInt 0,VInt 2)␤»

[17:40] <dwhipp> pugs : 0 ~~ 0|2

[17:40] *** justatheory left
[17:41] <dwhipp> pugs: 0 ~~ 0|2

[17:41] <p6eval> pugs: RESULT«(Bool::False | Bool::True)»

[17:42] <dwhipp> pugs: my @a = 0; my @b = 0|2; @a ~~ @b

[17:42] <p6eval> pugs: RESULT«Bool::False»

[17:42] <dwhipp> pugs: my $a = 0; my $b = 0|2; $a ~~ $b

[17:42] <p6eval> pugs: RESULT«(Bool::False | Bool::True)»

[17:42] *** justatheory joined
[17:42] <dwhipp> rakudo: my @a = 0; my @b = 0|2; @a ~~ @b

[17:42] <p6eval> rakudo 34350: RESULT«Bool::False»

[17:43] <dwhipp> rakudo: my @a = 0; my @b = 0|2; @a === @b

[17:43] <p6eval> rakudo 34350: RESULT«Bool::False»

[17:43] *** justatheory left
[17:43] <dwhipp> rakudo: my @a = 0; my @b = 0|2; |@a === |@b

[17:43] <p6eval> rakudo 34350: RESULT«Bool::False»

[17:44] *** alech left
[17:46] *** cspencer left
[17:47] *** alanhaggai left
[17:53] *** ejs1 left
[17:53] *** ejs joined
[17:55] *** brunoV joined
[17:56] *** ZuLuuuuuu left
[17:57] *** icwiener-_- joined
[18:06] *** cspencer joined
[18:11] *** rindolf joined
[18:14] *** icwiener_ left
[18:17] *** cspencer left
[18:21] *** justatheory joined
[18:21] *** dwhipp left
[18:22] <pugs_svn> r24610 | moritz++ | [t/spec] unfudge some last/next/redo tests for rakudo

[18:30] *** Psyche^ joined
[18:32] *** Patterner left
[18:32] *** Psyche^ is now known as Patterner

[18:32] *** explorer__ joined
[18:41] *** icwiener-_- is now known as icwiener

[18:46] *** icwiener_ joined
[18:47] *** jferrero left
[18:55] *** barney joined
[18:59] *** cspencer joined
[19:00] *** icwiener left
[19:04] *** cspencer left
[19:11] *** alech joined
[19:14] *** explorer__ left
[19:15] *** alech left
[19:17] *** cspencer joined
[19:19] *** alech joined
[19:30] *** alech left
[19:35] *** maerzhase left
[19:43] *** alech_ joined
[19:44] *** awwaiid joined
[19:47] *** maerzhase joined
[19:53] *** jferrero joined
[19:56] *** ejs left
[20:02] *** cspencer left
[20:02] *** kidd left
[20:02] *** maerzhase left
[20:02] *** iblechbot left
[20:02] *** elmex left
[20:02] *** jan_ left
[20:02] *** xinming left
[20:02] *** Patterner left
[20:02] *** rindolf left
[20:02] *** SamB left
[20:02] *** meteorjay left
[20:02] *** orafu left
[20:02] *** awwaiid left
[20:02] *** dalek left
[20:02] *** r0bby left
[20:02] *** dukeleto_ left
[20:02] *** japhb left
[20:02] *** Khisanth left
[20:02] *** drbean left
[20:02] *** kcwu left
[20:03] *** jferrero left
[20:03] *** icwiener_ left
[20:03] *** DemoFreak left
[20:03] *** lambdabot left
[20:03] *** Eevee left
[20:03] *** aindilis left
[20:03] *** simcop2387 left
[20:03] *** xuser left
[20:03] *** p6eval left
[20:03] *** agentzh left
[20:03] *** meppl left
[20:03] *** mberends left
[20:03] *** araujo left
[20:03] *** alech_ left
[20:04] *** alech joined
[20:09] *** jnthn joined
[20:09] *** pasteling joined
[20:09] *** hcchien joined
[20:09] *** nnunley joined
[20:09] *** szbalint joined
[20:09] *** charsbar joined
[20:09] *** broquaint joined
[20:09] *** meteorjay joined
[20:09] *** SamB joined
[20:09] *** rindolf joined
[20:09] *** Patterner joined
[20:09] *** literal joined
[20:09] *** idemal joined
[20:09] *** c1sung joined
[20:09] *** edenc joined
[20:09] *** nothingmuch joined
[20:09] *** agentzh joined
[20:09] *** p6eval joined
[20:09] *** xuser joined
[20:09] *** simcop2387 joined
[20:09] *** aindilis joined
[20:09] *** Eevee joined
[20:09] *** lambdabot joined
[20:09] *** DemoFreak joined
[20:09] *** icwiener_ joined
[20:09] *** jferrero joined
[20:09] *** StephenPollei joined
[20:09] *** ilbot2 joined
[20:09] *** yves joined
[20:09] *** Trey joined
[20:09] *** allbery_b joined
[20:09] *** mj41 joined
[20:09] *** go|dfish joined
[20:09] *** xinming joined
[20:09] *** jan_ joined
[20:09] *** elmex joined
[20:09] *** iblechbot joined
[20:09] *** maerzhase joined
[20:09] *** awwaiid joined
[20:09] *** cspencer joined
[20:09] *** dalek joined
[20:09] *** meppl joined
[20:09] *** mberends joined
[20:09] *** araujo joined
[20:09] *** dukeleto_ joined
[20:09] *** japhb joined
[20:09] *** irc.freenode.net sets mode: +o jnthn

[20:09] *** kidd joined
[20:09] *** Khisanth joined
[20:09] *** drbean joined
[20:09] *** kcwu joined
[20:09] *** zostay joined
[20:09] *** cls_bsd joined
[20:09] *** orafu joined
[20:09] *** wolverian joined
[20:09] *** Lunchy joined
[20:09] *** lisppaste3 joined
[20:09] *** buubot joined
[20:09] *** Guest16015 joined
[20:09] *** baest joined
[20:09] *** silug joined
[20:09] *** IRSeekBot joined
[20:09] *** ingy joined
[20:09] *** spinclad joined
[20:09] *** jjore joined
[20:09] *** Tene joined
[20:09] *** szabgab joined
[20:09] *** sunnavy joined
[20:09] *** mtve joined
[20:09] *** integral joined
[20:09] *** irc.freenode.net sets mode: +o Tene

[20:10] *** alester joined
[20:15] *** alester left
[20:27] *** alech left
[20:29] *** alech joined
[20:30] *** c9s___ joined
[20:32] *** r0bby joined
[20:40] <cspencer> pugs: .say Str.HOW.methods

[20:40] <p6eval> pugs: OUTPUT«*** ␤    Unexpected "Str"␤    expecting operator␤    at /tmp/Koqqi85u6x line 1, column 6␤»

[20:41] <cspencer> pugs: .say for Str.HOW.methods

[20:41] <p6eval> pugs: OUTPUT«*** No such method in class Class: "&methods"␤    at /tmp/jJirIgXBhf line 1, column 10 - line 2, column 1␤»

[20:43] <ruoso> pmurias, I already thought a lot about the module loading in SMOP

[20:45] <ruoso> it should work by calling some init() function on the module being loaded, passing the lexical scope at which the top-level package is going to be installed

[20:45] <ruoso> then it will look into this lexical scope for the package of the name that it tried to 'use' or 'require'

[20:45] <ruoso> it then aliases that package to the scope that called 'use' or 'require'

[20:46] <ruoso> and calls .EXPORTALL in that package

[20:46] <ruoso> we might start loading .so plugins 

[20:47] *** c9s_ left
[20:52] *** ^aristotle joined
[20:52] *** alech_ joined
[20:54] <^aristotle> if I have a string in $foo and a junction of strings in $bar, is there a way to ask how many of the $bar values match $foo?

[20:54] *** alech left
[20:56] *** Limbic_Region joined
[20:56] *** jferrero left
[21:00] *** xinming left
[21:02] *** xinming joined
[21:05] <pmurias> ruoso: the problem with that scheme is that gcc is sluggish

[21:06] *** xinming left
[21:07] <ruoso> pmurias, what do you mean?

[21:07] <pmurias> gcc compiles code slowly

[21:09] <pmurias> hmm, maybe it's fast enough

[21:09] * pmurias is prejudiced against gcc from compiling c++ code

[21:10] *** kisu joined
[21:12] <pmurias> ruoso: is load($filename) which would load a file and call init enough?

[21:13] <ruoso> pmurias, but why would you need to compile code to load in runtime?

[21:14] <ruoso> my idea is that you would have pre-compiled files

[21:14] <ruoso> you don't really need a bytecode loader

[21:15] <ruoso> you just need to compile down the code to some known API

[21:15] <pmurias> had a previous thought that invoking gcc every time we run a test will slow us down

[21:16] <pmurias> s/slow us down/make running the test suit slower/

[21:18] <pmurias> ruoso: what should be init's signature? i'll implement the object loading scheme now and we'll see how it works

[21:29] *** kisu__ left
[21:31] *** ejs joined
[21:34] *** alech joined
[21:38] *** alech_ left
[21:41] *** azawawi_ joined
[21:41] <ruoso> pmurias, I think it would be something in the line of init(interpreter, lexical)

[21:42] <ruoso> but we have to be carefull to make sure the init() doesn't cause a C recursion, this call needs to get back to the interpreter runloop before running the actual init code

[21:43] *** azawawi left
[21:47] *** azawawi_ left
[21:49] *** azawawi joined
[21:53] *** brunoV left
[21:55] *** rindolf left
[22:03] *** icwiener_ left
[22:05] *** bacek joined
[22:10] *** vixey joined
[22:11] *** alech_ joined
[22:11] *** alech left
[22:18] *** azawawi_ joined
[22:18] *** cspencer left
[22:19] *** justatheory left
[22:24] *** ^aristotle left
[22:30] *** ejs left
[22:30] *** azawawi left
[22:32] *** barney left
[22:36] *** Limbic_Region left
[22:59] *** masak joined
[23:00] <masak> perl6: class A { has $.foo }; my $a = A.new; $a.foo = 5; say $a.foo

[23:00] <p6eval> rakudo 34360: OUTPUT«Cannot assign to readonly variable.␤current instr.: 'die' pc 14705 (src/builtins/control.pir:204)␤»

[23:00] <p6eval> ..elf 24610, pugs: OUTPUT«5␤»

[23:00] <masak> Elf and Pugs somewhat reassure me here. I thought Rakudo knew something I didn't.

[23:00] <masak> didn't this work at some point in the past? ISTR it did.

[23:01] * masak peruses the spectests

[23:01] *** iblechbot left
[23:03] <masak> moritz_++ # tireless test herding

[23:04] *** cspencer joined
[23:05] *** cspencer left
[23:06] <pmurias> masak: rakudo is right here, right?

[23:08] <masak> pmurias: oh, right! the rw thing.

[23:08] * masak forgot

[23:08] <masak> perl6: class A { has $.foo is rw }; my $a = A.new; $a.foo = 5; say $a.foo

[23:08] <p6eval> rakudo 34360: OUTPUT«Parrot VM: Can't stat languages/perl6/perl6.pbc, code 2.␤main: Packfile loading failed␤»

[23:08] <p6eval> ..elf 24610, pugs: OUTPUT«5␤»

[23:08] <masak> that's Rakudo rebuilding, right? :)

[23:09] * masak tries locally

[23:13] <masak> yes, it works. that explains it.

[23:15] *** bacek left
[23:20] *** cspencer joined
[23:28] *** kisu left
[23:28] *** alech_ left
[23:28] *** kisu joined
[23:30] <masak> rakudo: class A { has $.foo is rw }; my $a = A.new; $a.foo = 5; say $a.foo

[23:30] <p6eval> rakudo 34360: OUTPUT«5␤»

[23:41] *** masak left
[23:58] *** vixey left
