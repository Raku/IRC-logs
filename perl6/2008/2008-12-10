[00:00] *** Hinrik left
[00:01] <literal> perl6: "oh { "hello" } there"

[00:01] <p6eval> pugs, rakudo 33735: RESULT["oh hello there"]

[00:01] <p6eval> ..elf 24233: OUTPUT[Parse error in: /tmp/Cd2dqrZA28␤panic at line 1 column 0 (pos 0): Can't understand next input--giving up␤WHERE: "oh { "hello" } there"␤WHERE:/\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:76:in `scan_unitstopper'␤  STD_red/std.rb:224:in `comp_unit'␤ 

[00:01] <p6eval> ..STD_red/std.r...

[00:02] <pugs_svn> r24234 | pmichaud++ | [rakudo]:  Correct .elems count on list-of-lists in cross-metaop.t

[00:02] *** smg joined
[00:05] *** smg left
[00:10] <rakudo_svn> r33736 | pmichaud++ | [rakudo]:  Refactor infix:<X> to avoid numeric list indices.

[00:16] *** thepler__ left
[00:17] *** km2 left
[00:25] *** Limbic_Region joined
[00:44] *** apeiron left
[00:45] *** apeiron joined
[00:55] <pugs_svn> r24235 | hinrik++ | [util/perl6.vim] set the 'iskeyword' option, made =encoding look more special, fix interpolated closures, highlight the minus as part of a negative number

[01:08] <literal> perl6: my $var1-k;

[01:09] <p6eval> pugs: OUTPUT[*** No such subroutine: "&k"␤    at /tmp/oWrTmHyZgp line 1, column 1-11␤]

[01:09] <p6eval> ..rakudo 33737: RESULT[undef]

[01:09] <p6eval> ..elf 24235: OUTPUT[Undefined subroutine &GLOBAL::k called at (eval 117) line 3.␤ at ./elf_f line 3861␤]

[01:09] <literal> rakudo: my $vark-k;

[01:09] <p6eval> rakudo 33737: RESULT[undef]

[01:09] <literal> rakudo: my $var1-1;

[01:09] <p6eval> rakudo 33737: RESULT[-1]

[01:10] <literal> splendid

[01:10] <literal> rakudo: my $var1'1;

[01:10] <p6eval> rakudo 33737: OUTPUT[Statement not terminated properly at line 1, near "'1;"␤␤current instr.: 'parrot;PGE;Util;die' pc 129 (runtime/parrot/library/PGE/Util.pir:83)␤]

[01:10] *** ChrisDavaz joined
[01:18] *** lichtkind left
[01:20] *** exodist_ joined
[01:22] *** Exodist left
[01:22] *** thestarslookdown joined
[01:25] *** FurnaceBoy left
[01:35] *** smg joined
[01:36] *** smg left
[01:57] *** thestarslookdown left
[02:02] *** Limbic_Region left
[02:07] *** agentzh left
[02:16] <pugs_svn> r24236 | hinrik++ | [util/perl6.vim] improved highlighting of variables, fixed problem with reduce

[02:34] <pugs_svn> r24237 | hinrik++ | [util/perl6.vim] apply the same variable highlighting improvements to custom routine names

[03:06] *** simcop2387 is now known as apetits

[03:06] *** smg joined
[03:06] *** apetits is now known as simcop2387

[03:13] *** Psyche^ joined
[03:21] *** PZt left
[03:24] *** Patterner left
[03:24] *** Psyche^ is now known as Patterner

[03:28] *** Pzt3 joined
[03:29] *** Pzt3 is now known as PZt

[03:45] *** agentzh joined
[03:53] <dukeleto> rakudo: warn "42"

[03:53] <p6eval> rakudo 33739: OUTPUT[Could not find non-existent sub warn␤current instr.: '_block11' pc 20 (EVAL_13:15)␤]

[03:54] <dukeleto> did warn get renamed?

[03:55] <[particle]> did it get implemented?

[03:55] <[particle]> hey, is the pdx meeting tomorrow?

[03:55] <dukeleto> particle: yes

[03:56] <dukeleto> i am not quite sure, I just compiled a perl6 binary and was messing around

[03:56] <[particle]> ok, a few things...

[03:56] <dukeleto> how would I go about implementing warn?

[03:56] <[particle]> 1) *a lot* of functionality has been implemented in the past week, check rakudo.org for details

[03:57] <dukeleto> and if you have any really simple stuff that needs to be done, like test unfudging or doc fixing, I may be able to get people to work on it tomorrow

[03:57] <[particle]> 2) the documentation, starting with docs/getting_started.pod and other docs/* need a good going over

[03:57] <dukeleto> particle: I just did a braindump of rakudo.org, amazing! 

[03:57] <[particle]> 3) we really need help converting the perlfoundation.org/parrot wiki to trac.parrot.org/parrot/wiki

[03:57] <dukeleto> lexicals and inpline PIR, spiffy

[03:58] <[particle]> and list assignment and slices

[03:58] <[particle]> and default values for object/class attributes

[03:58] <[particle]> and hyperops and metaops

[03:58] <dukeleto> particle: this is good, what type of conversion of the wiki do you need?

[03:59] <[particle]> *really* *busy* *week*

[03:59] <[particle]> migrate the pages from perlfoundation to parrot.org

[03:59] <dukeleto> is it the same wiki software?

[03:59] <[particle]> no :(

[03:59] <dukeleto> some markup/etc? 

[03:59] <[particle]> socialtext to whatever trac uses

[03:59] <dukeleto> uggg. I had to deal with that at work also. incompatible wiki markup is a bummer

[04:00] <dukeleto> but, still doable

[04:00] <dukeleto> are there certain more important pages that should be done first?

[04:00] * [particle] looks...

[04:01] <[particle]> start with the 'contributing to parrot' section

[04:01] *** elmex_ joined
[04:01] <dukeleto> that sounds reasonable

[04:03] <[particle]> it'd be nice to have the chart and data, as well

[04:05] <dukeleto> that should be doable, i just created an account on trac

[04:06] <dukeleto> particle: good news, trac wiki uses MoinMoin syntax, which I am used to

[04:06] <[particle]> awesome.

[04:07] <[particle]> wonder if a socialtext->moinmoin script would be hard, even an 80% solution

[04:07] <dukeleto> particle: I will look at the socialtext source

[04:10] <[particle]> here's the reverse: http://joiwiki.ito.com/joiwiki/index.cgi?moinmoin_to_socialtext_conversion_script

[04:10] <rakudo_svn> r33740 | pmichaud++ | [rakudo]: Remove declaration-order.t from spectest.data for now.

[04:10] <rakudo_svn> r33740 | pmichaud++ | It causes a failed assertion in Parrot (which is proving stubborn 

[04:10] <rakudo_svn> r33740 | pmichaud++ | to fix), and would only give us two passing tests for now anyway.

[04:10] <rakudo_svn> r33740 | pmichaud++ | Perhaps it'll clear up when we refactor signatures and class construction.

[04:14] <dukeleto> i just made an openid to try to look at the source of perlfoundation wiki but I am waiting on the email from them

[04:14] <dukeleto> sucks that you can't view read-only source without creating an account

[04:15] <[particle]> hrmm. yes, it does.

[04:16] <dukeleto> but I don't really need the source, it is just basic unnumbered lists, images and links

[04:17] *** elmex left
[04:17] *** elmex_ is now known as elmex

[04:33] *** DemoFreak left
[04:34] <dukeleto> perlfoundation.org is not responding now, great luck

[04:34] <dukeleto> The Perl foundation website is temporarily unavailable.

[04:35] <[particle]> sigh. svn.perl.org was down for 5-10mins today, maybe this is related and similar. no idea.

[04:36] <[particle]> http://log.perl.org/ isn't helpful on the earlier outage

[04:54] <dukeleto> finally!

[04:59] *** ab5tract joined
[05:27] *** smg left
[05:43] <pugs_svn> r24238 | hinrik++ | [util/perl6.vim] add the 'contains' keyword

[05:54] *** jimmy__ joined
[06:00] <rakudo_svn> r33741 | pmichaud++ | [rakudo]: List assignment on my/our declarations works.

[06:09] *** justatheory joined
[06:10] *** alester_ joined
[06:12] *** jimmy__ left
[06:17] *** xinming_ left
[06:20] <rakudo_svn> r33742 | duff++ | Change instances of "new 'Iterator', foo" to use "iter foo" instead

[06:27] *** lambdabot left
[06:29] *** lambdabot joined
[06:30] *** DemoFreak joined
[06:41] *** ashizawa joined
[06:49] *** ab5tract left
[06:53] <pugs_svn> r24239 | pmichaud++ | [t/spec]:  Update todo message in try.t

[06:55] <pugs_svn> r24240 | pmichaud++ | [t/spec]:  Update todo message in return.t

[06:57] *** smg joined
[07:00] *** stephens left
[07:11] <pugs_svn> r24241 | duff++ | parenthesize so that uniq tests parse properly

[07:20] <rakudo_svn> r33743 | duff++ | [rakudo] Changed uniq, min, and max to use iterators

[07:28] *** spx2 left
[07:28] *** spx2 joined
[07:30] <rakudo_svn> r33744 | pmichaud++ | [rakudo]: spectest-progress.csv update: 235 files, 4884 passing, 0 failing

[07:31] *** c9s left
[07:39] *** smg left
[07:43] *** alester_ left
[07:44] *** potong joined
[07:44] *** adc_penner joined
[07:49] *** samlh left
[07:49] *** samlh joined
[07:52] *** xinming_ joined
[07:52] *** justatheory left
[07:57] *** baest left
[07:57] *** baest joined
[08:01] *** potong left
[08:10] *** mberends joined
[08:10] <pugs_svn> r24242 | moritz++ | [t/spec] unfudge some list assignment test (and infix:<X>) for rakudo

[08:24] <Tene> How can I check how std.pm parses something?

[08:28] *** iblechbot joined
[08:31] <moritz_> Tene: either you look at the full html output of the syntax hilighter...

[08:31] <moritz_> Tene: or you run it through STD5_dump_match, which seems slightly borked atm

[08:32] <[particle]> does tryfile not work?

[08:32] <[particle]> src/perl6/tryfile

[08:34] <moritz_> [particle]: that only tells you if, not how

[08:34] <Tene> moritz_: syntax hilighter is where?

[08:34] <[particle]> ah

[08:34] <moritz_> Tene: pugs repo, src/perl6/STD_syntax_highlight

[08:35] <moritz_> ./STD_syntax_highlight --full-html $file

[08:35] <moritz_> should do

[08:37] <moritz_> ./STD_syntax_highlight --full-html out.html < foo.pl

[08:39] <moritz_> then open out.html and click the "Show Syntax Tree" button, and move your mouse over the part of the file you're interested in

[08:43] *** kane_ joined
[08:52] <Tene> Hey, who wants a first draft of CATCH blocks?

[08:52] <Tene> in rakudo?

[08:53] <Tene> Hmm.  It needs to set the topic correctly or something, I guess.

[08:55] <Tene> Yeah, I don't have a pugs checkout, I guess.

[08:56] <moritz_> for STD.pm it's enough to svn co http://svn.pugscode.org/pugs/src/perl6

[08:56] <moritz_> if there's anything in particular that you want to have parsed, just nopaste it, and I'll give you the HTML output

[08:57] <Tene> do { say 'omg; CATCH { say 'wtf exception; } }

[08:58] * moritz_ inserts another quote

[08:59] <Tene> or whatever.  anything with a CATCH block in it.

[08:59] <Tene> s/block/closure trait/

[09:00] *** adc_penner left
[09:00] <moritz_> http://moritz.faui2k3.org/tmp/catch.html there you go

[09:00] <Tene> 'show syntax tree' just shows '...'

[09:01] <moritz_> Tene: you have to move the mouse over the thing you're intersted in

[09:01] <Tene> ah

[09:01] <moritz_> Tene: and enable javascript in your browser

[09:02] *** adc_penner joined
[09:02] <Patterner> Javascript Steals Creditcard Numbers!

[09:02] <moritz_> sometimes it's comforting not to have a credit card :-)

[09:09] *** smg joined
[09:10] <literal> http://www.itworld.com/print/58558

[09:12] * Tene sleep.

[09:16] <Tene> Okay, working-but-incorrect patch sent to pmichaud.  Now real sleep.

[09:16] <moritz_> literal: so true (and scary for the casual programmer)

[09:17] <literal> are hash keys subject to the same restrictions as identifiers like variable and package names? I didn't find anything on that in the synopses

[09:20] <moritz_> literal: you mean on the LHS of the => operator?

[09:20] <moritz_> token fatarrow { <key=identifier> \h* '=>' <.ws> <val=EXPR(item %item_assignment)>

[09:20] <moritz_> }

[09:20] <moritz_> from STD.pm

[09:21] <moritz_> so it looks like it expects an identifier

[09:21] <literal> moritz_: that and hash keys in general

[09:22] <literal> will take a look at STD.pm

[09:23] *** bacek joined
[09:23] <moritz_> literal: hash keys in things like %hash<key here> are arbitrary

[09:23] *** adc_penner left
[09:24] <moritz_> unlike perl 5, we have no auto quoting in %hash{key} because there's a different syntax for quoted hash keys

[09:24] <literal> yeah

[09:24] <moritz_> literal: I very much like your syntax highlighting works, very nice to use

[09:25] *** adc_penner joined
[09:26] <literal> good to know :)

[09:27] *** adc_penner left
[09:27] *** rindolf joined
[09:28] *** adc_penner joined
[09:30] *** ejs joined
[09:31] <literal> the things I haven't really touched are Q and all the regex/rule stuff

[09:32] <literal> I'll have to, though, since the latter currently breaks the highlighting in many test files

[09:51] *** iblechbot left
[09:55] *** dukeleto left
[09:57] *** smg left
[10:03] *** rindolf left
[10:04] *** bsb joined
[10:41] <pugs_svn> r24243 | hinrik++ | [util/perl6.vim] latin1 alphabetical characters allowed in identifiers, require identifier for autoquoting, highlight the $ placeholder like a variable, not an operator

[10:45] *** smg joined
[10:48] <pugs_svn> r24244 | hinrik++ | [util/perl6.vim] small cleanup

[10:54] *** meppl joined
[11:14] *** ChrisDavaz left
[11:19] *** ejs left
[11:19] *** ejs joined
[11:40] *** kanru left
[11:46] *** kanru joined
[11:49] *** bsb left
[12:00] *** araujo left
[12:03] *** alexn_org joined
[12:13] *** iblechbot joined
[12:19] *** masak joined
[12:23] *** alexn_or1 joined
[12:27] *** sri_kraih joined
[12:47] *** ejs1 joined
[12:50] *** ruoso left
[12:53] *** simcop2387 left
[12:55] *** ejs left
[13:01] *** ChrisDavaz joined
[13:02] *** araujo joined
[13:03] *** masak left
[13:05] *** ejs1 left
[13:07] *** vixey joined
[13:33] *** simcop2387 joined
[13:47] *** Lorn joined
[13:53] *** jhorwitz joined
[13:59] *** vixey left
[14:00] *** c9s joined
[14:03] *** ashizawa left
[14:16] *** mberends left
[14:20] *** vixey joined
[14:20] *** adc_penner left
[14:25] *** azawawi joined
[14:25] <azawawi> ping pong

[14:25] <azawawi> @seen moritz_

[14:25] <lambdabot> moritz_ is in #perl6. I last heard moritz_ speak 5h 42s ago.

[14:25] <moritz_> s/ping pong/table tennis/

[14:26] <azawawi> moritz_: im back ;-)

[14:26] <azawawi> moritz_: and im sorry it runs slow on ff2 

[14:26] <moritz_> azawawi: I'll be migrating to ff3 some day anyway...

[14:27] <azawawi> which page is it?

[14:27] <azawawi> @tell literal great work on perl6.vim

[14:27] <lambdabot> Consider it noted.

[14:27] <moritz_> azawawi: for example S03

[14:28] <azawawi> what kind of hardware you're running it on? memory?

[14:29] <moritz_> 2Ghz dual core, 3GB ram.

[14:29] <moritz_> hardware is not a problem.

[14:29] <literal> @tell azawawi thanks

[14:29] <lambdabot> Consider it noted.

[14:29] <azawawi> lol

[14:29] <lambdabot> azawawi: You have 1 new message. '/msg lambdabot @messages' to read it.

[14:30] <azawawi> @messages

[14:30] <lambdabot> literal said 17s ago: thanks

[14:30] <moritz_> azawawi: it might also be related to one of my many browser plugins

[14:30] <azawawi> can u disable them and try again?

[14:30] <azawawi> im downloading the latest win ff2 btw...

[14:31] <moritz_> azawawi: not now, I'm not at home right now

[14:33] *** c9s left
[14:34] *** c9s joined
[14:35] <azawawi> moritz_: tried and it works like a charm... vanilla ff2+firebug

[14:37] <azawawi> moritz_: if it is getting http gzip-ed, then it is going to be fast

[14:37] <moritz_> azawawi: the slowness is after downloading the page, while rendering or running js or something

[14:39] <azawawi> moritz_: that's the problem, im not running any js on startup.

[14:41] <azawawi> moritz_: it loads the file in an iframe when you click on 'simple', and in a new window when you click 'full'

[14:41] <moritz_> azawawi: but there is javascript that runs on startup, that collapses the inline tests

[14:42] <azawawi> moritz_: i dont remember touching that

[14:42] <azawawi> @seen TimToady

[14:42] <lambdabot> TimToady is in #perl6. I don't know when TimToady last spoke.

[14:42] <moritz_> azawawi: neither do I, but I do observe a slowdown that wasn't there before.

[14:44] <azawawi> moritz_: will investigate it...

[14:45] <azawawi> moritz_: did u hear anything about STD.pm license for CPAN inclusion from TimToady?

[14:46] <moritz_> azawawi: I didn't, but TimToady is travelling atm and not very responsive

[14:48] <azawawi> moritz_: i think i got it. it is attaching to all divs in the document and im adding like 119 divs to S03

[14:57] <TimToady> in Kuala Lumpur on very low battery.  assume Artistic 2.0 for now, I think

[14:57] <lambdabot> TimToady: You have 2 new messages. '/msg lambdabot @messages' to read them.

[14:57] <azawawi> thanks...

[14:58] <moritz_> TimToady: have the appropriate amount of fun :-)

[14:58] * PerlJam DCCs TimToady some power

[14:58] <TimToady> will resurface in Amsterdam in about 14 hrs or so

[14:59] <TimToady> afk &

[15:00] <azawawi> moritz_: try this version plz: http://feather.perl6.nl/~azawawi/S03.html

[15:01] <moritz_> azawawi: I'll try later when I'm at home

[15:03] *** kcwu left
[15:04] *** kcwu joined
[15:05] *** ruoso joined
[15:05] <pugs_svn> r24245 | azawawi++ | [util/smartlinks.pl] Converted highlighter divs to spans to improve 

[15:05] <pugs_svn> r24245 | azawawi++ | [util/smartlinks.pl] Sxx startup load performance. moritz_++

[15:14] *** MarkReed joined
[15:17] <azawawi> what's a good package name for STD_syntax_highlight STD::Syntax::Highlight or Syntax::Highlight::Perl6 ?

[15:18] *** rindolf joined
[15:18] <moritz_> Perl6::Highlight

[15:18] <azawawi> nice one

[15:29] <ruoso> pmichaud++ # very nice blog post

[15:30] <moritz_> pmichaud++ # very nice features in rakudo :-)

[15:45] *** jferrero joined
[15:52] *** duke_leto joined
[15:52] *** masak joined
[16:07] *** hercynium joined
[16:14] *** stephens joined
[16:18] *** justatheory joined
[16:30] *** xinming_ left
[16:31] <pugs_svn> r24246 | azawawi++ | [Perl6::Highlight] Adding the initial required structure & files

[16:52] *** alexn_org left
[16:52] *** xinming joined
[16:54] *** justatheory left
[17:01] *** masak left
[17:03] *** azawawi left
[17:04] *** justatheory joined
[17:07] *** alexn_or1 left
[17:11] <moritz_> @tell azawawi I don't think src/perl6/ is a good location for a Perl 5 module. Maybe misc/ would be better?

[17:11] <lambdabot> Consider it noted.

[17:19] *** alech left
[17:20] *** alech joined
[17:26] *** xinming left
[17:27] *** xinming joined
[17:32] *** thepler_ left
[17:33] *** thepler joined
[17:36] *** justatheory left
[17:38] *** jferrero left
[17:43] *** duke_leto left
[17:57] *** kane__ joined
[17:57] *** kane__ left
[18:14] *** kane_ left
[18:19] *** Hinrik joined
[18:20] *** jferrero joined
[18:22] <moritz_> rakudo: say <1 2> X<=X <2 3>

[18:22] <p6eval> rakudo 33771: OUTPUT[1111␤]

[18:22] <moritz_> rakudo: say ?all <1 2> X<=X <2 3>

[18:22] <p6eval> rakudo 33771: OUTPUT[1␤]

[18:29] <[particle]> should that really return 1 rather than Bool::True?

[18:29] <[particle]> pugs: say 1 <= 2

[18:29] <p6eval> pugs: OUTPUT[1␤]

[18:30] <[particle]> okay then :)

[18:30] <moritz_> [particle]: there's no official word on how enums stringify yet

[18:30] <[particle]> ah, right! good point.

[18:31] <pugs_svn> r24247 | moritz++ | [t/spec] combined junction and XopX tests

[18:32] <moritz_> these tests that I've added (and I'm working on more) look really scary ;-)

[18:33] *** smtms_ joined
[18:35] <moritz_> rakudo: my ($x, $y, $z); say ? $x, $y X!=:=X $z

[18:35] <p6eval> rakudo 33771: OUTPUT[11␤]

[18:35] <moritz_> rakudo: my ($x, $y, $z); say ? all  $x, $y X!=:=X $z

[18:35] <p6eval> rakudo 33771: OUTPUT[1␤]

[18:36] <moritz_> tests that there's on overlap between containers on the RHS and LHS

[18:38] <Hinrik> are there any non-identifier variable names other than $!, $/, and $\d+ ?

[18:39] <moritz_> apart from those with twigils and pseudo-twigils I'm aware of none

[18:39] <Hinrik> pseudo-twigils?

[18:39] <moritz_> $<foo>

[18:40] <Hinrik> ah yeah, forgot to mention that one

[18:45] <pugs_svn> r24248 | moritz++ | [t/spec] more meta ops tests

[18:45] *** smtms left
[18:52] <moritz_> testing is hard, let's go shopping.

[18:52] <moritz_> bbiab

[18:52] <[particle]> there's @_ $_ etc

[19:02] <Hinrik> _ is allowed in an identifier, so I didn't count those

[19:03] *** PZt left
[19:09] <[particle]> it's not allowed to start an identifier, though. ok

[19:10] <[particle]> oh, nm, it is.

[19:10] <rakudo_svn> r33773 | infinoid++ | [cage] Fix trailing whitespace.

[19:10] * [particle] checks just in case

[19:15] *** smtms_ is now known as smtms

[19:15] *** REPLeffect joined
[19:21] *** MarkReed left
[19:21] *** PZt joined
[19:21] *** adc_penner joined
[19:28] *** pbuetow joined
[19:49] *** jferrero left
[19:56] *** dr_df0 joined
[20:01] *** alech left
[20:01] *** alech joined
[20:03] *** rindolf left
[20:18] *** ruoso left
[20:19] *** c9s_ joined
[20:25] *** mberends joined
[20:37] *** c9s left
[20:40] <Tene> So, anyone feel like telling me what I need to do with the exception object for CATCH blocks?  Do I set it to $_?

[20:40] <Tene> The spectests check it using 'when', which checks $_ iirc...

[20:47] <jnthn> Tene: I would expect, for the sake of generality, it want's to go in a named register.

[20:47] <jnthn> $_ is rather Perl specific.

[20:47] <Tene> jnthn: I'm asking for rakudo specifically.

[20:48] <jnthn> Tene: Oh, I see. I though you were asking about it for PAST.

[20:48] <Tene> all parrot does is put it in a named register

[20:48] <Tene> I'm asking about the PAST I need to generate

[20:48] <jnthn> OK, great.

[20:48] <Tene> unless you want to do it.  I have an incorrect patch that works, but doesn't set $_

[20:49] <jnthn> Tene: The details are in http://dev.perl.org/perl6/doc/design/syn/S04.html

[20:49] <jnthn> See section Exception Handlers

[20:49] <jnthn> But yes, it goes in $_, and is in $! too

[20:51] <Tene> I'm not sure yet how to refer to a named register in PAST.  I'll look around.

[20:54] <jnthn> PAST::Var.new( :name('nameofreg') :scope('register') )

[20:54] <Tene> Clever.  Okay.

[21:02] *** Ehtyar left
[21:29] *** dr_df0 left
[21:34] *** sri_kraih left
[21:46] *** pcbuetow joined
[21:47] *** Lorn left
[21:47] *** bacek left
[21:52] <lisppaste3> aartist pasted "LWP::Protocol::https::Socket error" at http://paste.lisp.org/display/71943

[21:53] *** aartist joined
[21:55] *** pbuetow left
[22:00] <rakudo_svn> r33777 | jonathan++ | [rakudo] Perl6MultiSub PMC tests that attach a signature should have multi_invocant set to true, as those generated by Rakudo do.

[22:11] <moritz_> rakudo: my %h = a => 4, b => 3; say %h<b a>

[22:11] <p6eval> rakudo 33776: OUTPUT[Use of uninitialized value␤␤]

[22:11] <moritz_> rakudo: my %h = a => 4, b => 3; say %h{'b', 'a'}

[22:11] <p6eval> rakudo 33776: OUTPUT[Use of uninitialized value␤␤]

[22:24] *** Limbic_Region joined
[22:27] <pugs_svn> r24249 | jnthn++ | [t/spec] Add a test for the ;; syntax.

[22:30] <rakudo_svn> r33780 | jonathan++ | [rakudo] If we add an invocant to a signature, we must mark that it is a multi invocant too.

[22:30] <rakudo_svn> r33781 | jonathan++ | [rakudo] Make Perl6MultiSub honor lack of multi_invocant in a signature, meaning ;; now functions correctly.

[22:30] *** araujo left
[22:32] *** mberends left
[22:33] *** adc_penner left
[22:41] *** jhorwitz left
[22:42] <pugs_svn> r24250 | jnthn++ | [rakudo] Tests to make sure that declaring anonymous routines with only, multi or proto fails.

[22:50] <rakudo_svn> r33782 | jonathan++ | [rakudo] Make it an error to use only, multi or proto with an anonymous routine.

[22:56] *** exodist_ is now known as Exodist

[22:57] <pugs_svn> r24251 | moritz++ | [t] remove Test-Less/. Afaict it's not used, and superseeded by fudge

[22:57] <pugs_svn> r24251 | moritz++ | (protest NOW if I'm wrong)

[23:16] <pugs_svn> r24252 | moritz++ | [t/spec] fix plan in S06-multi/syntax.t; use eval_dies_ok for terser testing

[23:17] <jnthn> moritz_: Ooh, I shoulda thought to use that...thanks.

[23:17] <moritz_> jnthn: np

[23:20] <Hinrik> so I heard testing will be integrated into the language, what will that look like?

[23:21] <moritz_> Hinrik: that's up for debate ;-)

[23:21] <Hinrik> I see

[23:21] <moritz_> https://trac.parrot.org/parrot/wiki/PerlSixTesting

[23:21] <moritz_> that's my current brainstorming, with ideas from pmichaud and masak

[23:22] *** hercynium left
[23:22] <Hinrik> interesting

[23:23] *** iblechbot left
[23:27] * Khisanth prefers the other parrot logo

[23:29] <moritz_> I have to go to bed now... if you have any comments or questions on the Testing outline, go ahead, I'll backlog

[23:29] <pugs_svn> r24253 | tene++ | Un-eval a test.

[23:40] <rakudo_svn> r33783 | tene++ | [rakudo]: Initial support for CATCH blocks.

[23:41] *** jan_ left
[23:43] *** jan joined
[23:43] *** jan is now known as Guest26759

[23:46] *** pcbuetow left
