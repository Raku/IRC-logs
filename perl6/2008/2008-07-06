[00:13] *** eternaleye_ left
[00:19] *** vsoni joined
[00:24] *** eternaleye_ joined
[00:33] *** vsoni left
[01:03] *** jferrero left
[01:10] *** bacek_ joined
[01:11] *** bacek left
[01:45] *** Jedai left
[01:46] <pugs_svn> r21229 | cjfields++ | add complement, deletion, squash tests

[02:01] *** cjfields joined
[02:02] *** cjfields_ joined
[02:02] *** cjfields left
[02:02] *** a-jing1 joined
[02:02] *** a-jing1 left
[02:03] *** bacek__ joined
[02:09] <bacek__> perl6: my $a=(1..5|6..10); say ~min($a);

[02:10] *** cjfields_ left
[02:10] <p6eval> elf 21229: OUTPUT[Parse error in: /tmp/kplAu6c9LD␤panic at line 1 column 15 (pos 15): "#<Match:0xb7832aa4>" is not associative␤WHERE: my $a=(1..5|6..10); say ~min($a);␤WHERE:               /\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:2102:in `_EXPR_raw'␤  STD_red/std.rb:1948:in

[02:10] <p6eval> ..`...

[02:10] <p6eval> ..kp6 21229: OUTPUT[syntax error at position 5, line 1 column 5:␤my $a=(1..5|6..10); say ~min($a)␤     ^ HERE␤]

[02:10] <p6eval> ..pugs: OUTPUT[*** ␤    Unexpected "$a"␤    expecting "=", "_", exponent, term postfix, operator, ")", context, ":" or "("␤    ambiguous use of a non associative operator␤    at /tmp/xUSHJt9upV line 1, column 4␤]

[02:10] <p6eval> ..rakudo 29090: OUTPUT[MMD function __cmp not found for types (104, 95)␤current instr.: 'parrot;Range;!to_test' pc 5028 (src/gen_builtins.pir:3365)␤]

[02:10] <bacek__> perl6: my $a=(1..5|6..10); say $a.min;

[02:11] <p6eval> elf 21229: OUTPUT[Parse error in: /tmp/7e6uNNfNsv␤panic at line 1 column 15 (pos 15): "#<Match:0xb7803b14>" is not associative␤WHERE: my $a=(1..5|6..10); say $a.min;␤WHERE:               /\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:2102:in `_EXPR_raw'␤  STD_red/std.rb:1948:in

[02:11] <p6eval> ..`bl...

[02:11] <p6eval> ..kp6 21229: OUTPUT[syntax error at position 5, line 1 column 5:␤my $a=(1..5|6..10); say $a.min␤     ^ HERE␤]

[02:11] <p6eval> ..pugs: OUTPUT[*** ␤    Unexpected "$a"␤    expecting "=", "_", exponent, term postfix, operator, ")", context, ":" or "("␤    ambiguous use of a non associative operator␤    at /tmp/JY9gQs2e4s line 1, column 4␤]

[02:11] <p6eval> ..rakudo 29090: OUTPUT[get_integer() not implemented in class 'Junction'␤current instr.: 'parrot;Range;!to_test' pc 5028 (src/gen_builtins.pir:3365)␤]

[02:11] <bacek__> perl6: my $a:=(1..5|6..10); say $a.min;

[02:12] <p6eval> elf 21229: OUTPUT[Parse error in: /tmp/BOKCGf4QrZ␤panic at line 1 column 16 (pos 16): "#<Match:0xb783d468>" is not associative␤WHERE: my $a:=(1..5|6..10); say $a.min;␤WHERE:                /\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:2102:in `_EXPR_raw'␤  STD_red/std.rb:1948:in

[02:12] <p6eval> ..`...

[02:12] <p6eval> ..kp6 21229: OUTPUT[syntax error at position 5, line 1 column 5:␤my $a:=(1..5|6..10); say $a.min␤     ^ HERE␤]

[02:12] <p6eval> ..pugs: OUTPUT[*** ␤    Unexpected ".."␤    expecting "_", exponent, term postfix, operator or ")"␤    ambiguous use of a non associative operator␤    at /tmp/9W1DFyRbaJ line 1, column 15␤]

[02:12] <p6eval> ..rakudo 29090: OUTPUT[get_integer() not implemented in class 'Junction'␤current instr.: 'parrot;Range;!to_test' pc 5028 (src/gen_builtins.pir:3365)␤]

[02:12] <bacek__> perl6: my $a:=((1..5)|(6..10)); say $a.min;

[02:13] <p6eval> elf 21229: No output (you need to produce output to STDOUT)

[02:13] <p6eval> ..kp6 21229: OUTPUT[syntax error at position 5, line 1 column 5:␤my $a:=((1..5)|(6..10)); say $a.min␤     ^ HERE␤]

[02:13] <p6eval> ..pugs: OUTPUT[any(VList [VInt 1,VInt 2,VInt 3,VInt 4,VInt 5],VList [VInt 6,VInt 7,VInt 8,VInt 9,VInt 10])␤]

[02:13] <p6eval> ..rakudo 29090: OUTPUT[Method 'min' not found for invocant of class 'Junction'␤current instr.: '_block11' pc 84 (EVAL_14:26)␤]

[02:19] *** bacek_ left
[02:20] *** mjk left
[02:27] *** jhorwitz left
[02:29] *** meppl joined
[02:30] *** bacek_ joined
[02:41] *** bacek__ left
[02:49] *** xinming_ joined
[02:51] *** meppl left
[02:59] *** apeiron left
[02:59] *** apeiron joined
[03:00] *** xinming__ joined
[03:02] *** xinming left
[03:03] *** drbean_ joined
[03:04] *** drbean_ left
[03:05] *** drbean left
[03:05] *** drbean joined
[03:05] *** elmex_ joined
[03:07] *** drbean left
[03:08] *** drbean joined
[03:08] *** xinming_ left
[03:09] *** xinming joined
[03:18] *** ruoso left
[03:21] *** xinming__ left
[03:22] *** elmex left
[03:22] *** elmex_ is now known as elmex

[03:30] *** alester_ joined
[03:40] *** pbuetow_ joined
[03:47] *** vsoni joined
[03:51] *** slavi1 joined
[03:52] <slavi1> are any of the perl6 books worth getting? also, are there any perl5 to perl6 guides?

[03:52] *** pbuetow left
[04:09] <bacek_> pugs: my $a := (1|2|3); say $a;

[04:09] <p6eval> pugs: OUTPUT[any(VInt 1,VInt 2,VInt 3)␤]

[04:10] <bacek_> pugs: sub foo($a) { say 'foo ' ~$a); my $a := (1|2|3); foo $a;

[04:10] <p6eval> pugs: OUTPUT[*** ␤    Unexpected ");"␤    expecting "::", term postfix, operator, ":", "," or "}"␤    at /tmp/bUjVPNWm08 line 1, column 29␤]

[04:10] <bacek_> pugs: sub foo($a) { say 'foo ' ~$a}; my $a := (1|2|3); foo $a;

[04:10] <p6eval> pugs: OUTPUT[any(VStr "foo 1",VStr "foo 2",VStr "foo 3")␤]

[04:11] <bacek_> rakudo: sub foo($a) { say 'foo ' ~$a}; my $a := (1|2|3); foo $a;

[04:11] <p6eval> rakudo 29090: OUTPUT[get_string() not implemented in class 'Junction'␤current instr.: 'foo' pc 158 (EVAL_14:60)␤]

[04:11] <bacek_> pugs: sub foo($a) { say 'foo ' ~$a}; my $a := (1|2|3); $a.foo;

[04:12] <p6eval> pugs: OUTPUT[any(VStr "foo 1",VStr "foo 2",VStr "foo 3")␤]

[04:17] *** lambdabot left
[04:22] *** slavi1 left
[04:24] <bacek_> pugs: say 'hello'.index((e|l))

[04:24] <p6eval> pugs: OUTPUT[*** No such subroutine: "&e"␤    at /tmp/ZfYzkUg1lY line 1, column 19-24␤]

[04:24] <bacek_> pugs: say 'hello'.index(('e'|'l'))

[04:24] <p6eval> pugs: OUTPUT[any(VInt 1,VInt 2)␤]

[04:24] <bacek_> pugs: say ('hello'|'world').index('o')

[04:25] <p6eval> pugs: OUTPUT[any(VInt 1,VInt 4)␤]

[04:25] <bacek_> pugs: say ('hello'|'world').index('o'|'l')

[04:25] <p6eval> pugs: OUTPUT[any(VJunc any(VInt 1,VInt 3),VJunc any(VInt 2,VInt 4))␤]

[04:32] *** lambdabot joined
[04:33] *** masak joined
[04:39] *** xinming left
[04:43] *** xinming joined
[04:45] *** Entonian joined
[04:50] *** vsoni left
[04:52] *** vsoni joined
[05:01] *** araujo left
[05:02] *** Eevee left
[05:06] *** xinming_ joined
[05:12] *** eternaleye_ left
[05:13] *** eternaleye_ joined
[05:14] *** xinming__ joined
[05:14] *** vsoni left
[05:18] *** xinming left
[05:23] *** xinming__ left
[05:24] *** xinming joined
[05:30] *** Psyche^ joined
[05:31] *** xinming__ joined
[05:34] *** xinming_ left
[05:40] *** xinming_ joined
[05:43] *** xinming left
[05:47] *** Patterner left
[05:47] *** Psyche^ is now known as Patterner

[05:52] *** xinming__ left
[06:05] *** Grrrr left
[06:13] *** c9s joined
[06:15] *** xinming joined
[06:18] <bacek_> rakudo: sub foo($a) { say 'foo ' ~$a}; my $a := (1|2|3); $a.foo;

[06:18] <p6eval> rakudo 29090: OUTPUT[Method 'foo' not found for invocant of class 'Junction'␤current instr.: '_block11' pc 55 (EVAL_14:22)␤]

[06:19] <masak> rakudo: sub foo($a) { say 'foo ' ~$a}; my $a := (1|2|3); foo($a)

[06:19] <p6eval> rakudo 29090: OUTPUT[get_string() not implemented in class 'Junction'␤current instr.: 'foo' pc 158 (EVAL_15:60)␤]

[06:19] <masak> that oughta work.

[06:19] <bacek_> masak: rakudo lack autothreading for junctions...

[06:19] <masak> :/

[06:20] *** cls_bsd left
[06:22] *** xinming__ joined
[06:25] <ingy> Alias_: ok

[06:26] <masak> rakudo: say 4 == 1|2|3|4|5

[06:26] <p6eval> rakudo 29090: OUTPUT[1␤]

[06:26] <masak> not completely lacking, though

[06:27] <ingy> Alias_: are you online?

[06:27] <Alias_> yo

[06:27] <ingy> join magnet

[06:28] <Alias_> I am

[06:28] <ingy> 23:25 [magnet] [msg(Alias_)] hi

[06:28] <ingy> 23:25 [magnet] -!- Alias_: No such nick/channel

[06:29] *** xinming_ left
[06:29] <Alias_> I'm not forced to adopt the trailing underscore there

[06:32] *** xinming_ joined
[06:36] *** xinming left
[06:39] <bacek_> masak: it's a lot of ugly copypasted code in Junction.pir...

[06:40] <masak> bacek_: anything we can do about it?

[06:40] <bacek_> masak: I'm trying to understand MMD...

[06:40] <masak> who isn't? :)

[06:41] <bacek_> masak: probably chromatic understands it :)

[06:44] *** xinming__ left
[06:51] *** alester_ left
[07:03] *** Jedai joined
[07:08] *** xinming_ left
[07:09] *** c9s__ joined
[07:14] *** eternaleye_ left
[07:25] *** c9s left
[07:27] *** masak left
[07:36] *** xinming joined
[07:37] *** eternaleye_ joined
[07:39] *** a-jing1 joined
[07:39] *** a-jing1 left
[07:45] *** barney joined
[08:02] *** pmurias joined
[08:04] *** dburning joined
[08:05] *** dburning left
[08:06] *** Jedai left
[08:08] *** cls_bsd joined
[08:18] *** GarulfoUnix joined
[08:20] *** Alias_ left
[08:27] <pugs_svn> r21230 | pmurias++ | removed irx1_describe

[08:45] *** Helios left
[09:19] *** iblechbot joined
[09:20] *** GarulfoUnix left
[09:22] *** Entonian left
[09:22] *** Entonian joined
[09:29] *** barney left
[09:37] *** meppl joined
[09:38] *** ruoso joined
[09:44] *** c9s__ left
[09:45] <pmurias> ruoso: hi

[09:49] *** pmurias_ joined
[09:50] *** pmurias_ left
[09:50] *** pmurias left
[09:50] *** pmurias joined
[10:12] *** meppl left
[10:15] *** meppl joined
[10:16] *** drbean left
[10:22] *** Entonian left
[10:22] *** Entonian joined
[10:34] <pmurias> walk&

[10:40] *** elmex left
[10:40] *** elmex joined
[10:41] *** elmex left
[10:42] *** elmex joined
[10:46] *** pmurias left
[10:49] *** bacek_ left
[10:50] *** bacek_ joined
[10:54] *** Entonian_ joined
[10:55] *** Entonian left
[11:19] *** a-jing1 joined
[11:20] *** a-jing1 left
[11:21] *** masak joined
[11:22] *** Entonian__ joined
[11:24] *** Entonian_ left
[11:33] <masak> rakudo: sub f { return }; f

[11:33] <p6eval> rakudo 29097: OUTPUT[too few arguments passed (0) - 1 params expected␤current instr.: 'f' pc 68 (EVAL_13:34)␤]

[11:34] <masak> so, it turns out that return takes only one argument

[11:34] <masak> not several, not even zero, _one_

[11:34] <masak> I've submitted a bug report/patch for this, but it's still being processed

[11:35] <masak> also,

[11:35] <masak> rakudo: sub f {}; f

[11:35] <p6eval> rakudo 29097: RESULT[Null PMC access in find_method()␤current instr.: '_block11' pc 25 (EVAL_13:11)␤]

[11:35] <masak> this is a bit worse, and harder to fix

[11:36] <masak> no special provisions are made to make the return value of an empty sub be undef

[11:36] <masak> so right now, it's even more undefined than undef :/

[11:38] <masak> hm, maybe this belongs more on #parrot

[11:52] *** Entonian_ joined
[11:52] *** Entonian__ left
[11:57] *** Chillance joined
[12:05] *** baest joined
[12:09] *** chris2 joined
[12:13] *** Schwern joined
[12:25] *** fridim left
[12:38] *** Schwern left
[12:42] *** alanhaggai joined
[12:49] *** Helios joined
[13:12] *** FurnaceBoy joined
[13:24] <pugs_svn> r21231 | masak++ | [array.t] removed blocks that prevented variables from seeing each other

[13:27] *** masak left
[13:33] *** Coleoid joined
[13:34] *** bacek__ joined
[13:36] *** bacek_ left
[13:45] *** Entonian_ left
[13:56] *** pmurias joined
[13:57] *** Entonian_ joined
[13:57] *** icwiener joined
[14:00] *** xinming left
[14:00] *** xinming joined
[14:19] *** Entonian_ left
[14:19] *** Entonian_ joined
[14:29] *** meppl left
[14:34] *** bacek__ left
[14:42] <pmurias> it's quiet on the weekends here ;)

[14:42] *** Entonian__ joined
[14:45] *** Entonian_ left
[14:51] *** a-jing1 joined
[14:52] *** a-jing1 left
[14:53] *** jan_ left
[15:00] <rakudo_svn> r29098 | jonathan++ | [rakudo] Replace usage of :instanceof with storing the proto as a property. Still need to fixup isa to work, but this resolves some other issues for now that the :instanceof usage introduced. Also lays the groundwork for storing signature objects.

[15:02] *** Entonian__ left
[15:03] *** meppl joined
[15:03] *** Entonian__ joined
[15:18] *** barney joined
[15:24] *** Entonian__ left
[15:24] *** Entonian_ joined
[15:44] *** alanhaggai left
[15:52] *** Entonian_ left
[15:52] *** Entonian__ joined
[15:59] *** Schwern joined
[16:00] *** meteorjay joined
[16:02] *** meteorjay left
[16:06] *** Alias_ joined
[16:07] *** FurnaceBoy left
[16:08] *** jan_ joined
[16:12] *** Alias_ left
[16:12] *** Alias_ joined
[16:18] *** Entonian__ left
[16:20] *** Entonian__ joined
[16:27] *** Southen left
[16:47] *** araujo joined
[16:52] <pmurias> agentzh: hi

[16:58] *** Entonian__ left
[16:59] *** Entonian__ joined
[16:59] <pmurias> agentzh: i'm looking into using your rule tracer for STD.pm/gimme5

[17:02] *** xinming_ joined
[17:13] *** xinming left
[17:15] <moritz_> re

[17:15] <pmurias> moritz_: hi

[17:17] <pmurias> cycling&

[17:17] *** pmurias left
[17:20] *** xinming_ left
[17:20] *** xinming joined
[17:22] *** sri_work joined
[17:23] *** Entonian__ left
[17:25] *** Entonian__ joined
[17:26] *** alester_ joined
[17:27] *** alester_ is now known as alest

[17:27] *** alest is now known as alester_

[17:29] *** alanhaggai joined
[17:29] <pugs_svn> r21232 | Auzon++ | [gsoc_spectest] reorganization and partial fudging on perl.t.

[17:39] *** FurnaceBoy joined
[17:40] *** Schwern left
[17:59] *** Entonian__ left
[18:08] *** barney left
[18:29] *** sri_work left
[18:46] *** pmurias joined
[18:49] *** jferrero joined
[18:50] *** Gruber joined
[19:13] *** Schwern joined
[19:16] *** chris2 left
[19:29] *** charsbar left
[19:31] *** charsbar joined
[19:34] <pmurias> is there a vi clone which is faster than vim for large files (like STD5.pm)?

[19:35] *** xinming_ joined
[19:36] *** xinming left
[19:39] <Gothmog_> pmurias: http://www.vim.org/tips/tip.php?tip_id=611

[19:39] <lambdabot> Title: Tip #611 - Open big files and work fast : vim online

[19:43] *** icwiener_ joined
[19:46] *** cjfields joined
[19:49] *** rindolf joined
[19:49] <rindolf> Hi all.

[19:49] <rindolf> http://search.cpan.org/~btrott/XML-Feed-0.12/ - WTF?

[19:49] <lambdabot> Title: Benjamin Trott / XML-Feed-0.12 - search.cpan.org

[19:55] *** xinming_ left
[19:57] *** icwiener left
[20:01] <moritz_> @tell slavi1 latests pugs builds when the build is triggered with 'cabal install' - see the INSTALL file on how to do it

[20:01] <lambdabot> Consider it noted.

[20:06] <rindolf> moritz_: Cabal?

[20:06] <pmurias> s

[20:06] <rindolf> moritz_: There is no IGLU Cabal!

[20:06] <pmurias> rindolf: hi

[20:06] <rindolf> Hi pmurias 

[20:06] <rindolf> Seems like XML-Feed and XML-Atom both need some TLC.

[20:06] <moritz_> rindolf: the haskell package manager

[20:07] <rindolf> moritz_: ah, heh.

[20:07] <rindolf> Is there still work on Pugs?

[20:07] <moritz_> audreyt++ made it installable with ghc-6.8.2 and cabal

[20:07] <moritz_> that's the only work for now

[20:08] <rindolf> moritz_: ah.

[20:08] <rindolf> moritz_: does Pugs require ghc-6.8.2 now?

[20:08] <moritz_> rindolf: dunno, but I think so, yes

[20:09] <moritz_> but the last version of pugs that also works with ghc 6.6.1 is feature identical to current pugs

[20:09] <pmurias> rindolf: other (more actively develped) Perl 6 implementations live in the pugs repo too

[20:10] <SamB> and more importantly, a huge test suite...

[20:10] <pmurias> Gothmog_: i got errors when i pasted the tip into my .vimrc

[20:11] <rindolf> moritz_: crud.

[20:11] <rindolf> moritz_: this is the No. 1 thing I hate about Pugs.

[20:11] <rindolf> Always Bleeding-edge GHC.

[20:11] <rindolf> Well, not the No. 1 thing.

[20:12] <rindolf> But some (most ?) people are not using bleeding edge distros.

[20:12] <rindolf> There's Debian who's stable is about a year old.

[20:12] <rindolf> and used to be much worse.

[20:12] <rindolf> There's Mandriva which was released a few months back.

[20:12] <rindolf> And Fedoa.

[20:12] <rindolf> Fedora, I mean.

[20:13] * pmurias has very bad experience with Mandrake linux

[20:13] <pugs_svn> r21233 | Auzon++ | [gsoc_spectest] reorganization of reduce tests

[20:13] <SamB> so what's wrong with testing?

[20:13] <moritz_> Debian Lenny is quite usable, comes with perl 5.10.0 and ghc 6.8.2 or 6.8.1

[20:13] <SamB> stable is obviously designed for the paranoid

[20:13] <rindolf> pmurias: Mandriva.

[20:13] <rindolf> pmurias: Mandrake Linux is its old name.

[20:13] <rindolf> pmurias: I used it since 7.

[20:13] <rindolf> 7.1

[20:14] <rindolf> I'm on MDV Cooker now.

[20:14] <pmurias> rindolf: Mandrake Linux is the thing i have bad experience with

[20:15] <rindolf> pmurias: ah, which version?

[20:15] <rindolf> pmurias: Mandriva/Mandrake often used to have some cute bugs.

[20:15] <rindolf> pmurias: which required some manual tweaking.

[20:16] <pmurias> can't remember

[20:16] <rindolf> pmurias: what are you using now?

[20:16] <pmurias> it involved lots of cds

[20:16] <moritz_> pmurias: re vim being slow, is it still too slow if you disable syntax hilighting?

[20:17] <rindolf> moritz_: and possible the auto-indentation.

[20:17] <rindolf> moritz_: and the filetype.

[20:18] <pmurias> moritz_: less so

[20:18] <pmurias> it takes a while to load file, but if i don't close vim it's fast enough

[20:20] <pmurias> rindolf: what's TLC?

[20:20] <moritz_> for example a very bad band ;-)

[20:21] <rindolf> pmurias: Tender Loving Care.

[20:27] <pmurias> rindolf: what's up recently?

[20:27] <rindolf> pmurias: I've syndicated my fortune cookies to Atom.

[20:28] <rindolf> pmurias: using XML-Feed.

[20:28] <rindolf> But now I want the feed to validate.

[20:29] <rindolf> pmurias: where I ran into a few bugs/limitations of XML-Feed.

[20:30] *** alester_ left
[20:32] *** gbacon joined
[20:32] <pugs_svn> r21234 | moritz++ | [t] lots of POD corrections and minor improvements in t/blocks/

[20:39] *** iblechbot left
[20:48] <pmurias> rindolf: i'm looking for fun perl6 tasks now, and will get to now if i will be studing CS or maths tomorrow

[20:49] <rindolf> pmurias: ah.

[20:49] <rindolf> pmurias: work on Rakudo or something.

[20:59] <pmurias> rindolf: elf/smop is more my sort of stuff

[21:01] <rindolf> pmurias: what is elf/smop?

[21:02] <moritz_> http://rakudo.de/progress-nonstacked.png # rakudo progress graph as non-stacked graph

[21:02] <rindolf> moritz_: I don't see anything (FF 3 on MDV-Cooker)

[21:03] <Auzon> It's weird here too unless I zoom in.

[21:03] <moritz_> transparent png

[21:03] <Auzon> (here is Fedora 9, Konqueror 4.0.5)

[21:03] <moritz_> maybe that's the problem?

[21:04] <moritz_> it's 640x480

[21:05] <Auzon> Looks fine in a standard HTML page

[21:05] <Auzon> though, Firefox 3 works just fine

[21:06] <moritz_> on the train I had some time to play with gnuplot

[21:07] <Auzon> Very cool :)

[21:07] <Coleoid> moritz_: Nice graph! Last full run I did was over 2000 passing, is that bad?  :s

[21:07] <moritz_> Coleoid: rakudo? are you sure?

[21:07] <Coleoid> Well, less sure than I was three seconds ago...

[21:07] <Coleoid> :D

[21:08] <Auzon> Coleoid: If you are doing 'make spectest_regression', the passed amount counts the skipped tests too

[21:08] <Coleoid> I've kind of got array.t blown apart, but I could move that aside, revert, and rerun, to be sure.

[21:08] <Coleoid> Oh!

[21:08] <moritz_> docs/spectest-progress.csv lists over 2000 tests run, but at most 1587 pass

[21:08] <Coleoid> Auzon:  That's the answer.

[21:09] <Coleoid> Drat.

[21:09] <moritz_> that's why the data is assembled with tools/test_summary.

[21:09] <moritz_> pl

[21:13] *** cjfields left
[21:13] <Coleoid> I'm trying to figure out the incantation to fudge and run a single *.t file.

[21:13] <rakudo_svn> r29104 | pmichaud++ | [rakudo]: spectest-progress.csv update:  87 files, 1587 passing tests

[21:13] <Coleoid> I've got: perl t/harness --fudge --keep-exit-code t\spec\S02-builtin_data_types\array.t

[21:13] <moritz_> Coleoid: the easiest is to add it to t/localtest.data and then 'make localtest'

[21:13] <Coleoid> moritz_: Oooh!

[21:14] <moritz_> that was [particle]++'s work

[21:14] <Auzon> neat, I didn't know that

[21:14] <Auzon> I was stringing together a longish line of commands :)

[21:19] <rakudo_svn> r29105 | moritz++ | [rakudo] cosmetic changes to tools/*.pl

[21:20] <Coleoid> Odd, I get the failure I saw before, after I'd jiggered array.t.  I smoked array.rakudo and retried for good measure, same result.

[21:20] <moritz_> which weird error?

[21:21] <Coleoid> Er, I'm pasting to the wrong channel.

[21:21] <Coleoid> Paste where for here, please?

[21:22] <moritz_> see /topic

[21:22] <moritz_> anyway, i'm in #parrot as well ;)

[21:23] <Coleoid> I read it twice before asking, but panic makes me stupid.  Sorry.

[21:23] <moritz_> Coleoid: that's most likely not-yet implemented list assignment

[21:23] <pasteling> "Coleoid" at 76.251.83.159 pasted "error from array.t" (24 lines, 1.6K) at http://sial.org/pbot/31488

[21:23] <moritz_> something like ($a, $b) = (1, 2)

[21:23] *** cjfields joined
[21:25] <Coleoid> Perhaps make spectest_regression hides these messages.

[21:25] *** rindolf left
[21:26] <moritz_> no, it doesn't include array.t

[21:26] *** cjfields left
[21:26] <Coleoid> Hmm.  There's a bit of array.t that passes, most of it blocked off.  Iit looked to me like a few more were actually passing, and that the rest could use more detailed messages.

[21:27] <moritz_> ../../parrot perl6.pbc t/spec/S02-builtin_data_types/array.t

[21:28] <Coleoid> Perhaps that was from a 'make spectest', but...

[21:28] <moritz_> ok, http://rakudo.de/ now shows both charts

[21:28] <lambdabot> Title: Rakudo - A Perl 6 Compiler

[21:29] <moritz_> Coleoid: 'make spectest' is mostly useless atm

[21:29] <pasteling> "Coleoid" at 76.251.83.159 pasted "More directly run array.t" (13 lines, 1.1K) at http://sial.org/pbot/31489

[21:30] <Coleoid> moritz_:  Well, I'll stop doing that, then.  :D

[21:30] <Auzon> Would it be possible to implement .eval on Perl6Str fairly easily in Rakudo?

[21:30] <moritz_> Coleoid: it's only interesting if you want to fudge tests and import them into spectest_regression

[21:30] <pmichaud> Auzon: eval already works, as long as the eval'd string doesn't need access to outer lexicals

[21:30] <moritz_> rakudo: eval 'say 1';

[21:30] <pmichaud> oh, you mean as a method call?

[21:30] <p6eval> rakudo 29107: OUTPUT[1␤]

[21:30] <Auzon> pmichaud: eval($foo) works; $foo.eval doesn't

[21:31] <moritz_> rakudo: 'say 1'.eval

[21:31] <pmichaud> yes, it should be a method call.  yes, that's easy.

[21:31] <p6eval> rakudo 29107: OUTPUT[Method 'eval' not found for invocant of class 'Perl6Str'␤current instr.: '_block11' pc 21 (EVAL_10:13)␤]

[21:31] <pmichaud> I'll do it now.

[21:31] <Auzon> Thanks pmichaud++

[21:31] <pmichaud> I'm fixing the for loop issue too

[21:32] <pugs_svn> r21235 | pmichaud++ | Add some temporary #?rakudo skip markers until

[21:32] <pugs_svn> r21235 | pmichaud++ | block types and closures work again

[21:32] <moritz_> rakudo: my @array2 = ("test", 1, undef); say @array2.perl

[21:32] <p6eval> rakudo 29107: OUTPUT[Method 'perl' not found for invocant of class 'Failure'␤current instr.: 'parrot;List;perl' pc 2583 (src/gen_builtins.pir:1804)␤]

[21:33] <pmichaud> interesting.

[21:33] <pmichaud> that's fixable too.  :-)

[21:33] <pugs_svn> r21236 | Auzon++ | [gsoc_spectest] staging commit for perl2.t. Partially fudged.

[21:34] <Auzon> moritz_: I just moved perl.t and perl2.t to t/spec/S02-names_and_variables. They both look very similar (to the point of testing the same cases). Should one be removed?

[21:34] <pmichaud> merged, probably

[21:34] <pmichaud> (removing duplicate cases, of course)

[21:36] <pmichaud> S29 doesn't define .eval

[21:36] <pmichaud> which means that it's a fallback

[21:37] <Auzon> It almost looks like perl2.t was automatically generated from perl.t

[21:37] <pmichaud> (which rakudo doesn't implement yet)

[21:37] <pmichaud> have we gotten official word yet on whether Perl 6 will use fallback dispatch?

[21:38] <moritz_> pmichaud: no, we haven't

[21:39] <pmichaud> that said, I think it's reasonable to assume that .eval will be an Any method

[21:40] <pmichaud> hrm

[21:40] <pmichaud> well, or maybe not

[21:40] *** alester_ joined
[21:41] <pmichaud> I like the stacked plot a bit better.  :-)

[21:41] * moritz_ too

[21:42] <pmichaud> it makes it easier to see the growth in the regression suite, as well as the passing tests

[21:42] <Auzon> also, can I assume that this is true in general?: eval($foo.perl) eqv $foo

[21:42] <moritz_> but I assume that when the number of data points increase significantly the better quality of the gnuplot stuff will matter more

[21:43] <Auzon> (yes, I know I could have an object that randomly returns a value for .eqv, but excepting cases like those.)

[21:43] <moritz_> Auzon: normally yes

[21:43] *** justatheory joined
[21:44] <Auzon> great :)

[21:44] <rakudo_svn> r29108 | pmichaud++ | [rakudo]: add .perl method to Failure (moritz++)

[21:47] *** Schwern left
[21:47] <pugs_svn> r21237 | moritz++ | [spec] partly fudged S02-builtin_data_types/array.t. Plan is offbyone, and a

[21:47] <pugs_svn> r21237 | moritz++ | few failures are still there, but no runtime errors anymore

[21:50] <pugs_svn> r21238 | moritz++ | [spec] array.t: isa_ok with type name (not Str) as second argument

[21:52] *** pmurias left
[21:55] <moritz_> pmichaud: what do you think, is it ok to add a test file with passing TODO tests to spectest_regression?

[21:59] <pugs_svn> r21239 | moritz++ | [spec] fudged array.t, fixed plan (at least I hope so).

[21:59] <pugs_svn> r21239 | moritz++ | Unfudged two tests from arith.t

[22:02] <Auzon> hm. perl.t and perl2.t test the same things (with one more case in perl.t). So I think I'll keep perl.t instead of perl2.t

[22:02] <moritz_> pmichaud: if you don't mind passing TODO test then we can add array.t to spectest_regression (but I won't fudge it in all detail because the passing tests are just silly)

[22:03] <moritz_> Auzon: then remove perl2.t

[22:04] <moritz_> btw t/general/basic.t seems like a good candidate for removal as well

[22:06] <Auzon> ok

[22:08] *** elmex left
[22:12] <pugs_svn> r21240 | moritz++ | [spec] move blocks/placeholders.t to spec/, Tene++ for such a nice test file

[22:16] <pugs_svn> r21241 | moritz++ | [t/block] more POD changing, and a few vim mode lines

[22:19] <pugs_svn> r21242 | moritz++ | [spec] moved blocks/dollar_underscore.t to spec/

[22:43] *** wknight8111 joined
[22:45] <Auzon> Is there an online rakudo bug tracker?

[22:47] <moritz_> http://rt.perl.org/rt3/Search/Results.html?Query=Queue%20%3D%20'perl6'%20AND%20(Status%20%3D%20'open'%20OR%20Status%20%3D%20'new'%20OR%20Status%20%3D%20'stalled')

[22:47] <Auzon> Thanks :)

[22:47] <moritz_> or just http://rt.perl.org/rt3 and then click on the 'perl6' queue

[22:47] <lambdabot> Title: Login

[22:48] <moritz_> that freakin' RT seems to bother you with login requests until you either give up or give in ;)

[22:48] <Auzon> It's not bothering me for some reason O.o

[22:48] <Auzon> maybe it's because I accepted its cookie

[22:49] <moritz_> or it smells that I'd give in after enough bothering, and thus intensifies its effort

[22:49] <Auzon> heh

[22:49] <Auzon> So I've found several bugs regarding .perl

[22:50] <Auzon> Should I report them there or does someone here want the fairly easy reports?

[22:50] <Auzon> rakudo: '$a'.perl.say # for instance

[22:50] <p6eval> rakudo 29109: OUTPUT["$a"␤]

[22:51] * moritz_ looks if he can do it

[22:51] <Auzon> also, rakudo: '{'.perl.say

[22:51] <Auzon> rakudo: '{'.perl.say

[22:51] <p6eval> rakudo 29109: OUTPUT["{"␤]

[22:52] <Auzon> rakudo: '\''.perl.say

[22:52] <p6eval> rakudo 29109: OUTPUT["'"␤]

[22:52] <Auzon> rakudo: '\\'.perl.say

[22:52] <p6eval> rakudo 29109: OUTPUT["\\"␤]

[22:52] <Auzon> It might be easier to switch to single quotes

[22:52] <moritz_> aye

[22:53] <Auzon> then you'd only need to add an escape for '

[22:53] * moritz_ tries that, and runs spectest_regression

[22:53] <Auzon> and not @ $ % & {

[22:54] <moritz_> d'oh, S02-builtin_data_types/range.t expects strings to be escaped with double quotes

[22:54] * moritz_ seems to recall telling somebody that testing for a literal value of '.perl' doesn't make sense most of the time

[22:56] *** jjore left
[22:58] *** pbuetow_ left
[23:01] <pugs_svn> r21243 | moritz++ | [t] mentioned non-canonical .perl in deprecated-syntax.pod

[23:01] <pugs_svn> r21244 | moritz++ | [spec] fudged Range.perl tests as unspecced

[23:02] <moritz_> "You have 900 points until level 19 - Abbot." too much time spent on perlmonks ;)

[23:04] <rakudo_svn> r29111 | moritz++ | [rakudo] Str.perl uses single quotes, Auzon++

[23:04] <moritz_> Auzon: r29111 fixes '$a'.perl

[23:04] <Auzon> excellent. rebuilding now to see what this gets us.

[23:04] <rakudo_svn> r29112 | moritz++ | [rakudo] three more files for spectest_regression

[23:06] <moritz_> world domination, of course ;-)

[23:06] <Auzon> :D

[23:06] <Auzon> bbiab.

[23:07] <moritz_> bbi8h (aka "sleep" ;-)

[23:08] *** araujo left
[23:08] <moritz_> I hope I didn't screw up anything essential ;)

[23:25] *** FurnaceBoy is now known as Id10tBoy

[23:33] *** Id10tBoy left
[23:52] *** wknight8111 left
[23:53] *** wknight8111 joined
[23:56] <meppl> good night

[23:58] *** meppl left
