[00:09] *** Schwern joined
[00:17] *** justatheory joined
[00:30] *** eternaleye joined
[01:04] *** lyokato_ joined
[01:05] *** cathya joined
[01:07] *** BinGOs_ joined
[01:14] *** Schwern joined
[01:16] <meppl> good night

[01:20] *** lyokato_ joined
[01:22] *** aindilis joined
[01:42] *** [particle] joined
[01:45] *** penk joined
[02:02] *** thoughtpolice joined
[02:03] *** hcchien joined
[02:04] *** thoughtpolice joined
[02:04] *** stevan__ joined
[02:07] *** justatheory joined
[02:12] *** alester joined
[02:19] *** shachaf joined
[02:57] *** c9s___ joined
[03:08] *** alester joined
[03:19] *** LazyJim joined
[03:26] *** c9s____ joined
[03:53] *** jferrero joined
[04:46] *** cathya joined
[04:52] *** GeJ left
[05:32] *** Psyche^ joined
[06:25] *** thoughtpolice joined
[06:36] *** cathya joined
[06:48] *** alc joined
[06:54] *** barney joined
[06:55] *** xxxxxxxxxxxxxx joined
[06:56] *** luqui joined
[07:14] *** peepsalot joined
[07:17] *** xinming_ joined
[07:27] *** rutlov joined
[07:35] *** rutlov left
[07:39] *** Aankhen`` joined
[08:03] *** xxxxxxxxxxxxxx left
[08:09] *** ilogger2 joined
[08:38] *** meteorjay joined
[08:47] *** buubot joined
[08:50] *** buu joined
[08:51] *** mofino left
[08:55] *** wknight-away joined
[08:56] *** Aankhen`` joined
[08:59] *** mofino joined
[09:05] *** BrutusIunius joined
[09:51] *** alc joined
[09:52] *** rindolf joined
[09:59] *** BrutusIunius left
[10:11] *** alc left
[10:18] *** elmex joined
[10:31] *** BrutusIunius joined
[10:34] *** c9s_ joined
[10:38] *** BrutusIunius left
[11:17] *** wknight-away left
[11:50] *** meppl joined
[11:59] *** BrutusIunius joined
[12:14] *** BrutusIunius left
[12:22] *** BrutusIunius joined
[12:28] *** chris2 joined
[12:46] *** BrutusIunius left
[12:52] *** rindolf left
[13:38] *** LazyJim joined
[13:40] *** paddy joined
[13:41] *** paddy left
[13:45] *** wknight-away joined
[13:46] *** alester joined
[13:50] *** TJCRI joined
[13:51] *** BrutusIunius joined
[13:54] *** [particle] joined
[14:01] *** rindolf joined
[14:06] *** jhorwitz joined
[14:10] *** BrutusIunius left
[14:11] *** smtms joined
[14:12] *** nirz joined
[14:15] *** wknight-away is now known as wknight8111

[14:15] *** nirz left
[14:17] *** meteorjay left
[14:25] *** smtms_ joined
[14:38] *** smtms left
[14:49] *** [particle1 joined
[14:54] *** smtms_ is now known as smtms

[14:58] *** [particle] left
[15:05] *** BrutusIunius joined
[15:08] *** [particle1 left
[15:12] *** pmurias joined
[15:13] <pmurias> mncharity: should ruby STD_red_run --yaml -e 'say(1)' run on ruby1.119

[15:13] *** jferrero joined
[15:13] <pmurias> * 1.19

[15:13] <pmurias> * 1.9

[15:14] *** TJCRI left
[15:15] *** TJCRI joined
[15:31] *** rindolf left
[15:37] *** FurnaceBoy joined
[15:37] *** BrutusIunius left
[15:38] *** jferrero left
[15:38] *** jferrero joined
[15:40] *** rindolf joined
[15:46] *** mncharity joined
[15:47] <mncharity> hi pmurias, one sec, backlogging

[15:48] *** BrutusIunius joined
[15:48] *** BrutusIunius left
[15:49] <mncharity> 1.9 has a yaml problem.  there's a note and patch in README.  re say(1), I think so, checking...

[15:50] <pmurias> it works on 1.8

[15:50] <mncharity> ruby1.9 STD_red_run --yaml -e 'say(1)' works for me with a patched yaml.rb.   and ruby1.8 without it.

[15:51] <mncharity> :)

[15:51] <mncharity> I was actually thinking of adding a fast path to <after> to help 1.8 with <ws>.  let's see...

[15:53] <pmurias> seen the patch

[15:56] <pmurias> fixed it

[15:58] <mncharity> eep.  looks like there's been a performance regression, with both 1.8 and 1.9.  perhaps yesterday's "clean up the Match tree" changes.

[15:59] *** BrutusIunius joined
[16:08] <mncharity> nothing obvious.  so rolling back through revisions looking for the regression.

[16:11] *** justatheory joined
[16:37] *** peepsalot joined
[16:42] *** BinGOs joined
[16:43] <mncharity> ok, so with 1.9, the hit, 2 sec->12 sec, is coming from YAML::Syck.  that 2 sec includes the "never been optimized" original Match dump, so Syck's 10 sec is surprising.  Removing expect_term's nounphrase, which introduces a non-tree-ness, saves Syck 3 sec.  1.8's Syck is a bit worse, and doesn't improve when nounphrase goes away.

[16:45] <mncharity> so... custom yaml dumper?  1.8 with yaml is up around 40 sec, and so unusable.  1.9 at 12 sec is iffy.  2 sec is nice.

[16:46] <mncharity> hmm, wonder if ruby's Syck can be told "don't try to connect up non-tree-ness - just be fast".  because that's the only possibility which comes to mind on why Syck is losing so badly.

[16:47] <pmurias> why is no-tree-ness slow?

[16:51] <allbery_b> ..meaning it's searching for multiply referenced subtrees?

[16:51] <allbery_b> or nodes

[16:53] <mncharity> re 'why is no-tree-ness slow?', keeping track of all the nodes seen, and checking new nodes against them?  where node is any string or Match.

[16:54] <mncharity> hmm, the 'each Match has a copy of the string it matched' might cut that in half...  well, parts of it in half, each Match would still need its copy of the original source string then.

[16:55] <mncharity> err, switching from the current design choice of 'each Match...' might cut...

[16:56] <mncharity> re why slow, that's the only thing which came to mind on why Match's match_describe is <2 sec, while Syck is 10 sec.

[16:57] <mncharity> the 3 sec improvement when nounphrase goes away also suggests this interpretation

[17:01] <mncharity> ah, another almost 3 sec is spent on the formatting of those Match strings.

[17:04] <mncharity> with Match's just containing crosslinks to a single original string, Syck costs 8 sec, down from 9. :/

[17:06] <mncharity> ok.  live with 1.9 12 sec parse for now.  sigh.

[17:09] <mncharity> custom dumper later, especially if Match-tree non-treeness can be minimized or localized.

[17:20] *** Chillance joined
[17:25] <pugs_svnbot> r20139 | putter++ | [elf_a] slightly prettier Match tree output.

[17:25] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20139

[17:25] <lambdabot> Title: Changeset 20139 - Pugs - Trac

[17:27] *** BrutusIunius left
[17:37] *** Psyche^ joined
[17:38] *** Psyche^ is now known as Patterner

[17:39] *** rindolf left
[17:45] *** yahooooo joined
[17:47] <mncharity> what's the p5 magic phrase to interpolate an expression into a string?  @{...} something like that...?

[17:48] <wolverian> @{[ ... ]} if you want list context, ${\...} if scalar

[17:48] <lambdabot> Maybe you meant: . ? @ bf ft id pl rc v wn

[17:48] <wolverian> just like outside strings :)

[17:51] *** rindolf joined
[17:51] <mncharity> thanks! :)

[17:51] <wolverian> you're welcome 

[17:52] *** Zygo joined
[17:58] *** tobeya joined
[17:58] <pugs_svnbot> r20140 | putter++ | [elf_a] beginnings of an IR.

[17:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20140

[17:58] <lambdabot> Title: Changeset 20140 - Pugs - Trac

[17:59] <mncharity> bbl &

[18:06] *** Patterner left
[18:06] *** Psyche^ joined
[18:06] *** Psyche^ is now known as Patterner

[18:11] <pmurias> mncharity: will the matches from STD_red be similiar to matches from STD.pm?

[18:18] <pmurias> is there ctags support for perl6 (STD.pm specificly)

[18:50] *** Zygo left
[18:50] *** Zygo joined
[18:53] *** simcop2387 joined
[18:54] *** smtms left
[19:00] *** Psyche^ joined
[19:14] *** jrockway joined
[19:17] *** Patterner left
[19:17] *** Psyche^ is now known as Patterner

[19:45] *** jhorwitz left
[19:56] *** chris2 left
[19:56] *** smtms joined
[20:08] *** Aankhen`` left
[20:19] *** tobeya left
[20:49] *** eternaleye joined
[20:52] *** BinGOs left
[20:52] *** BinGOs joined
[21:19] *** marshmallows joined
[21:20] <marshmallows> hi, hope everything is going well :)

[21:26] *** thoughtpolice joined
[21:30] <TimToady> so do we...

[21:38] <rindolf> TimToady: hi.

[21:38] <rindolf> TimToady: I've been using TAP to test Anarki Arc.

[21:44] <marshmallows> hey TimToady, How is it going?

[21:44] <marshmallows> (what's being worked on currently?)

[21:44] <marshmallows> (pugs.blogs hasn't updated in a long time..)

[21:45] *** pmurias left
[21:48] *** valerie- joined
[21:56] *** valrke joined
[21:56] *** valerie- left
[22:06] *** rindolf left
[22:06] <mncharity> pmurias: re 'will the matches from STD_red be similiar to matches from STD.pm?', yes.  STD_red's std.rb is just a hand modified version of STD.pm, converting it into executable ruby.

[22:09] <mncharity> re yes, well, that's the intent.  In so far as it doesn't look like a Match tree emitted by STD_red could be produced by STD.pm, that's more or less a STD_red bug.  That said, there seemed no need to add Matches for "pass through" rules.  And there are places where I mishandled the #= comments, which should be tweaked.

[22:11] *** thoughtpolice left
[22:11] <mncharity> And the few backtracking rules, don't.  So some as-yet-unknown portion of p6 won't be parsing.  And the same for the absence of longest token.  That said, STD.pm doesn't yet itself define a workable parser, so no big deal.

[22:14] <mncharity> And there's a bit of "well, we're not quite synced with parts of STD.pm, but focus on using it and worry about details later, as STD.pm matures".  But, basically yes.

[22:15] <mncharity> Re backtracking, there's a story for how to add it.  But it's a bit crufty, so I'm just waiting to see if the absence causes problems in practice.

[22:16] *** TJCRI left
[22:17] <mncharity> pmurias: ctags?  I'd be surprised (very) if there were a ctags mode for p6, but other than that, it should work fine, no?

[22:17] <mncharity> what do you wish it to do?

[22:19] *** alester left
[22:23] *** jferrero left
[23:09] *** Psyche^ joined
[23:16] *** Limbic_Region joined
[23:18] *** elmex left
[23:23] *** Patterner left
[23:23] *** Psyche^ is now known as Patterner

[23:30] *** elmex joined
