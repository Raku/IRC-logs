[00:04] *** Exodist left
[00:06] *** Limbic_Region joined
[00:08] *** bacek_ joined
[00:11] <wayland76> Lets hope no new bugs emerge from the merge, or we'll be on the verge of singing a dirge (well, maybe not, but it sounds good :) )

[00:11] <wayland76> perl6coders++ :)

[00:12] <wayland76> perl6testers++ :)

[00:12] <wayland76> (that is people who write tests :) )

[00:13] <wayland76> (I'm not going to ++ the people who just download and test it, because I don't like to ++myself :) )

[00:13] <wayland76> karma myself

[00:13] <wayland76> @karma myself

[00:13] <lambdabot> myself has a karma of 0

[00:14] <wayland76> I guess preincrement doesn't work :)

[00:14] *** Aisling joined
[00:16] *** kisu_ joined
[00:16] *** spx2 joined
[00:16] *** spx2 left
[00:16] *** spx2 joined
[00:23] *** kisu__ left
[00:26] *** pmurias left
[00:28] *** kanru left
[00:38] *** zamolxes left
[00:41] *** le00 joined
[00:42] <le00> hi

[00:42] <le00> i've a problem with http::proxy module

[00:43] *** le00 left
[00:48] <meppl> good night

[00:49] *** kisu_ left
[00:50] *** kisu__ joined
[00:52] *** kisu__ is now known as kisu

[00:55] *** spx2_ joined
[00:56] *** spx2 left
[01:32] *** kisu left
[01:36] *** kisu joined
[01:45] *** spx2_ left
[01:59] *** perlbsd joined
[02:00] *** bsdperl left
[02:15] *** alexn_org left
[02:18] *** kisu_ joined
[02:21] *** PZt joined
[02:23] *** kisu left
[02:32] *** dukeleto joined
[02:41] *** xinming left
[02:44] *** FurnaceBoy left
[02:47] *** justatheory left
[02:47] *** DarkArchon joined
[02:49] *** stephens left
[02:51] *** kisu_ left
[03:01] *** bsdperl joined
[03:03] *** lizsac joined
[03:05] *** DarkAcorn left
[03:06] *** DarkAcorn joined
[03:07] *** DarkArchon left
[03:08] *** DarkArchon joined
[03:09] *** perlbsd left
[03:15] *** DarkArchon left
[03:21] *** alester joined
[03:22] *** Patterner1 joined
[03:27] *** DarkAcorn left
[03:33] *** Limbic_Region left
[03:35] *** justatheory joined
[03:37] *** Patterner1 is now known as Patterner

[03:48] *** PerlJam joined
[03:48] *** awwaiid joined
[03:48] *** tcliou|Away joined
[03:48] *** zostay joined
[04:17] *** sri_kraih joined
[05:11] *** justatheory left
[05:16] *** Bzek_ joined
[05:25] *** justatheory joined
[05:27] *** simcop2387 left
[05:35] *** justatheory left
[05:38] *** alc joined
[05:56] *** justatheory joined
[06:15] *** cookys joined
[06:23] *** pbuetow joined
[06:26] *** justatheory left
[06:48] *** km2 left
[06:49] *** DemoFreak joined
[06:51] *** justatheory joined
[06:57] *** alester left
[07:10] *** pbuetow left
[07:37] *** azawawi joined
[07:37] <azawawi> ping

[07:39] *** azawawi left
[07:39] <moritz_> good morning

[07:41] *** REPLeffect left
[07:51] *** elmex joined
[07:52] *** apeiron joined
[08:00] *** simcop2387 joined
[08:12] *** apeiron left
[08:13] *** bacek_ left
[08:14] *** ejs joined
[08:15] <wayland76> good day :)

[08:21] *** rindolf joined
[08:28] *** apeiron joined
[08:35] *** xinming joined
[08:39] *** pmurias joined
[08:45] *** pnu joined
[08:52] *** alc left
[08:54] *** jimmy_ joined
[09:26] *** xinming_ joined
[09:34] *** sri_kraih_ joined
[09:35] *** schmalbe joined
[09:37] *** xinming left
[09:37] *** iblechbot joined
[09:39] *** DemoFreak left
[09:50] *** sri_kraih left
[09:52] *** rindolf left
[10:01] *** mberends joined
[10:13] *** xinming joined
[10:14] *** xinming_ left
[10:18] *** justatheory left
[10:23] *** justatheory joined
[10:28] *** jimmy_ left
[10:43] *** smg left
[10:46] *** apeiron left
[10:57] *** xinming left
[10:57] *** xinming joined
[11:04] *** justatheory left
[11:08] *** justatheory joined
[11:08] *** pmurias left
[11:23] *** meppl joined
[11:25] *** justatheory left
[11:25] *** justatheory joined
[11:44] *** justatheory left
[11:52] *** justatheory joined
[11:55] *** smg joined
[11:55] *** smg left
[11:59] *** smg joined
[12:00] *** smg left
[12:02] *** pmurias joined
[12:06] *** smg joined
[12:15] *** spx2 joined
[12:34] *** agentzh joined
[12:39] *** xinming left
[12:44] *** xinming joined
[12:46] *** rindolf joined
[13:01] *** langri joined
[13:07] *** Lorn joined
[13:14] *** Bzek_ left
[13:26] *** ejs_ joined
[13:26] *** ejs left
[13:29] *** jferrero joined
[13:30] <langri> :)

[13:35] *** langri left
[13:48] *** rindolf left
[13:53] *** ejs_ left
[14:06] *** kanru joined
[14:06] *** jferrero left
[14:12] *** mj41_ joined
[14:25] *** aindilis joined
[14:27] *** FurnaceBoy joined
[15:01] *** alech joined
[15:04] *** alester joined
[15:20] *** jhorwitz joined
[15:28] *** mberends left
[15:30] *** apeiron joined
[15:48] *** stephens joined
[15:51] *** adc_penner joined
[15:59] *** ZuLuuuuuu_ joined
[16:06] *** canol joined
[16:06] <canol> quit

[16:06] *** canol left
[16:07] <moritz_> fail

[16:11] *** canol joined
[16:16] *** __felix__ joined
[16:16] *** ludan joined
[16:16] *** __felix__ left
[16:18] *** canol left
[16:21] *** rindolf joined
[16:21] *** ZuLuuuuuu_ left
[16:28] *** ZuLuuuuuu joined
[16:35] <rindolf> Hi all.

[16:35] <rindolf> Is List.uniq() the same as List.ones() ?

[16:35] <moritz_> List.uniq isn't specced

[16:36] <moritz_> and I don't know about List.ones(), where did you find that?

[16:36] <rindolf> moritz_: it was in an old script of mine.

[16:36] <rindolf> moritz_: which is in the Pugs repository.

[16:37] <moritz_> pugs: say <a b c a c>.ones.perl

[16:37] <p6eval> pugs: No output (you need to produce output to STDOUT)

[16:37] <rindolf> pugs_svn: http://svn.openfoundry.org/pugs/examples/qotw/008e/graham.pl

[16:37] <rindolf> moritz_: http://svn.openfoundry.org/pugs/examples/qotw/008e/graham.pl

[16:37] <moritz_> erm, yes, evalbot's pugs is broken

[16:37] <moritz_> *** No such method in class Array: "&ones"

[16:38] *** rdice joined
[16:38] <rindolf> Hmmm... maybe it's "one(" instead of "ones("

[16:38] <pmurias> rindolf: Perl 6 wouldn't have two methods which do the same thing

[16:39] <moritz_> rindolf: ah, one(List) creates a Junction

[16:39] <moritz_> don't know if it's also available as a method, but why not?

[16:42] <rindolf> OK, uniq() works instead of one() + .values

[16:42] <pmurias> perl6: say (one(1,1,2,3) == 1).perl ~ (one(1,1,2,3) == 2).perl

[16:42] <p6eval> elf 23048: OUTPUT[Undefined subroutine &GLOBAL::one called at (eval 121) line 3.␤ at ./elf_f line 3861␤]

[16:42] <p6eval> ..pugs: No output (you need to produce output to STDOUT)

[16:42] <p6eval> ..rakudo 32978: OUTPUT[one(Bool::True, Bool::True, Bool::False, Bool::False)one(Bool::False, Bool::False, Bool::True, Bool::False)␤]

[16:44] <rindolf> rakudo: sort {$^a <=> $^b }, (500, 6)

[16:44] <p6eval> rakudo 32978: RESULT[[6, 500]]

[16:45] <rindolf> Hmmmm....

[16:45] <rindolf> rakudo: my $x = [5,65900,7]; my $y = [100,5,8]; sort { $^a <=> $^b }, uniq(@($x), @($y)).join(",");

[16:45] <p6eval> rakudo 32979: RESULT[["5,65900,7,100,8"]]

[16:46] <rindolf> Oh! Duh.

[16:46] <rindolf> Why did I join them.

[16:46] <rindolf> GIGO.

[16:46] *** xinming left
[16:52] <PerlJam> What are the built-in unicode operators?  Is it just « and  » these days, or are there more?

[16:53] <rindolf> [+] and friends don't work in Rakudo.

[16:53] <rindolf> I mean the fold operator.

[16:54] <TimToady> the current match continuation is $¢, but that is not really an operato

[16:55] <TimToady> and I think smop is using ¢ as a continuation sigil of some sort

[16:55] <rindolf> ¢

[16:55] <PerlJam> I guess what I'm really after are the unicodey things that are available in STD

[16:56] <TimToady> only via user-defined macro

[16:56] <TimToady> or as identifiers

[16:57] <TimToady> or as quote characters

[16:57] <pmurias> TimToady: we use the cent as the c variable sigil

[16:57] <TimToady> okay

[16:58] <pmurias> and only in m0ld

[16:59] <TimToady> but might be useful in any glue code that is known to be targeting C

[16:59] <TimToady> or something Cish

[17:00] <TimToady> and certainly admissible as a p6 dialect, given a reasonable "use" at top

[17:01] <TimToady> might make the C-to-P6 translator easier too  :)

[17:01] <TimToady> so we can make sure to preserve all those buffer and integer overflow bugs :P

[17:06] *** xuser left
[17:08] <pmurias> TimToady: do you have any pointers for NFG?

[17:10] <rakudo_svn> r32982 | jonathan++ | [rakudo] Refactor subtypes. The subset class that should never have been is gone, and we can now find out quickly what real, non-subset type was refined.

[17:11] <pmurias> TimToady: pointers meaning things i should read rather than memory adresses

[17:13] <TimToady> https://svn.perl.org/parrot/trunk/docs/pdds/pdd28_strings.pod

[17:14] <pasteling> "rindolf" at 62.219.139.216 pasted "This program generates a run-time error in Rakudo without a line number." (261 lines, 8.8K) at http://sial.org/pbot/33299

[17:15] <rindolf> Hi all.

[17:15] <rindolf> Can anyone help with http://sial.org/pbot/33299 ?

[17:15] <pmurias> TimToady: thanks

[17:20] *** dukeleto left
[17:26] *** schmalbe left
[17:27] *** zamolxes joined
[17:29] *** Exodist joined
[17:30] <moritz_> rindolf: that's NYI list assignment

[17:30] <TimToady> pmurias: note that the parrot conception is a per-string nfg table, but the p6 conception is more like a shared nfg table so that you can do string comparisons efficiently; shared tables have extra considerations though

[17:30] <moritz_> afk

[17:33] *** ludan left
[17:34] *** xuser joined
[17:44] <pugs_svn> r23049 | jnthn++ | [spectest] Unfudge MMD subtype test that Rakudo now passes.

[17:44] <pugs_svn> r23050 | jnthn++ | [spectest] Test for multi-jointed namespaces with grammars.

[17:50] <rakudo_svn> r32983 | jonathan++ | [rakudo] Pull refined real type out of subtypes when constructing a signature, so multiple dispatch handles subtypes more correctly (possibly even completely correctly now).

[17:53] *** lambdabot joined
[18:02] <pugs_svn> r23051 | jnthn++ | [spectest] Try to clean up and correct a subtypes test file. It used the wrong keyword, had one test that was wrong and other mess. Fudge it for Rakudo too.

[18:03] <pugs_svn> r23052 | pmurias++ | [STD] fixed tiny typo in comment

[18:06] *** ZuLuuuuuu left
[18:10] <rakudo_svn> r32984 | jonathan++ | [rakudo] Another spectest that we now pass much of.

[18:18] *** pbuetow joined
[18:33] <moritz_> rakudo: my $x = [ 42 ]; say $x<0>

[18:33] <p6eval> rakudo 32984: OUTPUT[42␤]

[18:33] <moritz_> can I assume that this is a bug? ;-)

[18:36] <pugs_svn> r23053 | moritz++ | [t/spec] unfudge a passing test for rakudo in catch_type_cast_mismatch.t

[18:38] <jnthn> moritz_: It looks...odd.

[18:40] *** zamolxes left
[18:40] <moritz_> I'll open a ticket

[18:52] *** xinming joined
[18:56] *** DemoFreak joined
[19:08] *** schmalbe joined
[19:11] *** adc_penner3 joined
[19:21] *** masak joined
[19:25] *** FurnaceBoy left
[19:26] *** adc_penner left
[19:29] *** alexn_org joined
[19:30] <rakudo_svn> r32989 | bernhard++ | [codingstd] satisfy trailing_spaces.t and c_parens.t

[19:30] <rakudo_svn> r32990 | jonathan++ | [rakudo] Put something in to make traits on routines work for now. The whole traits thing needs a good refactor to eliminate the duplication here and elsewhere - will attend to that in the not too distant future.

[19:30] *** km2 joined
[19:32] <masak> $hash<a b c><d e f>

[19:32] <masak> is that legal Perl 6?

[19:32] <masak> would it Do What I Mean?

[19:32] <jnthn> Eww. Hmm.

[19:32] <masak> :)

[19:32] <jnthn> You get a hash slice...and then get a slice of that?

[19:33] <masak> I hope to get up to nine elements from that.

[19:33] <jnthn> Surely though, if you took a slice with keys a, b and c, then there is no d, e and f into that slice...

[19:33] <jnthn> Oh.

[19:33] <masak> that's just what I _guess_ it would mean, of course.

[19:33] <masak> I'm equally open to the idea that it doesn't work.

[19:34] <masak> ...but in that case I'd like a convincing explanation for why it doesn't.

[19:34] <jnthn> What I just said, is why I'd expect it not to.

[19:34] <masak> so, precedence, basically.

[19:34] <jnthn> You've just got back a slice and are indexing into that.

[19:34] <masak> right.

[19:34] <jnthn> Not so much precedence.

[19:35] <masak> ...but the order in which things are evaluated? :P

[19:35] <jnthn> Yes :P

[19:35] <jnthn> I may be wrong, but it's what I'd expect.

[19:35] <masak> ok, so how does one write what I meant?

[19:36] *** rindolf left
[19:37] <jnthn> Trying to figure out a way that is nice...

[19:37] <jnthn> What were you expecting back? A flattened list?

[19:37] <masak> yes, sure.

[19:37] <jnthn> like if you'd written $hash<a><d>, $hash<a><e>, ..., $hash<c><f>

[19:38] <masak> exactly.

[19:38] <masak> I could probably do it wirh map.

[19:38] <jnthn> Yeah

[19:38] <masak> that's good enough for now.

[19:39] <jnthn> ($hash<a b c>.values)>>.<d e f>

[19:39] <jnthn> With something to flatten it out

[19:39] <masak> next question: will multidimensional slice assignment work?

[19:39] <masak> jnthn: oh -- `>>.`, that's nice.

[19:40] *** schmalbe left
[19:40] <masak> like @a[ $xmin..$xmax ; $ymin..$ymax ] = @new_block;

[19:41] <jnthn> It wouldn't surprise me if that did just work

[19:42] <jnthn> As I understand it from a Rakudo POV, we'll be doing list assignment by the LHS providing a list of containers that we then assign to.

[19:42] <masak> nice.

[19:42] <jnthn> So I guess the LHS there would do just that.

[19:43] <jnthn> woo. we have is default

[19:43] <masak> jnthn++

[19:44] <jnthn> That means we're now correctly, I think, doing multi dispatch decided on arity, type, constraints and the is default trait.

[19:44] <jnthn> Which is everything, if I understand the spec properly.

[19:45] <masak> that should be enough

[19:45] <jnthn> Next (after working out why multi methods don't work and multi subs do) it's protos.

[19:45] * masak says "protos" out loud. has a nice ring to it.

[19:50] <rakudo_svn> r32992 | jonathan++ | [rakudo] Implement is default trait and use it as a final tie-breaker in multiple dispatch.

[19:54] *** xinming left
[20:09] *** Lorn_ joined
[20:12] *** alexn_org left
[20:16] *** DarkArchon joined
[20:16] *** DarkArchon is now known as DarkAkorn

[20:18] * DarkAkorn pokes moritz_

[20:18] <lambdabot> DarkAkorn: You have 1 new message. '/msg lambdabot @messages' to read it.

[20:21] *** Lorn left
[20:23] *** Lorn joined
[20:29] *** ab5tract joined
[20:44] *** Lorn left
[20:47] <moritz_> DarkAkorn: repoke

[20:50] <DarkAkorn> hey!

[20:50] <DarkAkorn> I've been trying to get you!

[20:51] <DarkAkorn> I can't get ilbot to work, despite clearing all the error messages :(

[20:51] <moritz_> the last time the connect didn't work out for me, I had mis-configured it

[20:51] <moritz_> (ie I had used an illegal nick name)

[20:52] <moritz_> double-check your config - if that's not it, I don't know what else could be wrong

[20:53] <DarkAkorn> alright. I'm assuming its either there, or my host, it says trying to connect, but I'm IRCop on the other server, and I don't even see a client connecting message from it :(

[20:53] *** xinming joined
[20:54] *** Lorn_ left
[20:54] <DarkAkorn> it's not like the config is all that big though :( nick, server, channel. Even if the database.conf is wrong, it should connect right?

[20:56] <moritz_> if database.conf is wrong, it complains bitterly.

[20:56] <DarkAkorn> it's not complaining

[20:56] <DarkAkorn> I also don't see where the bot.conf could be wrong

[20:57] <DarkAkorn> server should use the same format as if I was typing /server irc.freenode.net or some such correct?

[20:58] <moritz_> right

[21:00] <DarkAkorn> I don't suppose you've ever tested this on a web server (as opposed to a dedicated one) have you?

[21:01] *** cognominal left
[21:02] <moritz_> no

[21:03] <DarkAkorn> :/

[21:03] *** ZuLuuuuuu joined
[21:22] *** xinming left
[21:27] *** alech left
[21:27] *** alech joined
[21:44] *** km2 left
[21:45] *** xinming joined
[21:52] *** xinming left
[21:52] *** xinming joined
[21:53] *** DarkAkorn left
[21:53] *** DarkArchon joined
[22:02] *** apeiron_ joined
[22:08] *** apeiron left
[22:10] *** rdice left
[22:10] *** DarkArchon left
[22:22] *** apeiron_ is now known as apeiron

[22:30] *** explorer joined
[22:39] *** pmurias left
[22:45] *** apeiron_ joined
[22:46] <masak> rakudo: my $cl = { "$^name upcased becomes {$name.uc}" }; $cl('larry')

[22:46] <p6eval> rakudo 32997: OUTPUT[Scope not found for PAST::Var '$name'␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 152 (src/PCT/HLLCompiler.pir:104)␤]

[22:47] <jnthn> :-|

[22:47] <jnthn> Damm, I hoped that would already work!

[22:47] *** iblechbot left
[22:47] <masak> jnthn: me too :)

[22:47] <masak> jnthn: if I add the test, will you add the functionality?

[22:48] <jnthn> Yes, if you also file an RT ticket.

[22:48] <jnthn> Otherwise I'll surely forget.

[22:49] * masak files

[22:49] *** apeiron left
[22:50] *** apeiron_ left
[22:51] *** bacek__ joined
[23:01] *** Limbic_Region joined
[23:02] *** Chillance joined
[23:02] *** Chillance left
[23:02] *** Chillance joined
[23:19] *** bacek__ left
[23:21] <masak> oh, oh! are positional placefolder variables incurably readonly?

[23:22] <TimToady> indeed they are.  use -> or <-> if you want them otherwise.

[23:23] <masak> oki.

[23:23] <TimToady> readonly is a very good default for the optimizer, I think

[23:23] *** alester left
[23:24] <pugs_svn> r23054 | masak++ | [spec/S06-signature/positional-placeholders.t] added test that $^foo

[23:24] <pugs_svn> r23054 | masak++ | automatically creates $foo

[23:25] <masak> it also makes the programmer think twice about tweaking variables that shouldn't be tweaked :)

[23:25] <masak> easier to create new ones instead.

[23:26] *** Exodist left
[23:28] *** km2 joined
[23:29] *** spx2 left
[23:30] *** spx2 joined
[23:31] *** apeiron joined
[23:42] *** masak left
[23:51] *** explorer left
