[00:05] *** justatheory left
[00:23] *** ruoso joined
[00:25] *** drbean joined
[00:27] *** bacek joined
[00:29] *** cognominal left
[00:35] *** cognominal joined
[00:35] <pugs_svn> r22135 | ruoso++ | [smop] updating test/30_array_map to reflect the fact that "map" receives and returns an iterator

[00:41] *** hercynium_ joined
[00:44] *** felipe joined
[00:55] *** leedo left
[01:00] <pugs_svn> r22136 | ruoso++ | [smop] starting to implement "map"

[01:11] *** kanru joined
[02:03] <ruoso> pugs: my @@a = map { $_, 0 - $_ }, 1..5; say @@a.perl();

[02:03] <p6eval> pugs: OUTPUT[\(1, -1, 2, -2, 3, -3, 4, -4, 5, -5)␤]

[02:04] <ruoso> pugs: my @@a = map { $_, 0 - $_ }, 1..5; say @a[0;0]

[02:04] <p6eval> pugs: OUTPUT[*** ␤    Unexpected "["␤    expecting "::"␤    Variable "@a" requires predeclaration or explicit package name␤    at /tmp/MEWNYIenWL line 1, column 42␤]

[02:04] <ruoso> pugs: my @@a = map { $_, 0 - $_ }, 1..5; say @@a[0;0]

[02:04] <p6eval> pugs: OUTPUT[*** ␤    Unexpected ";"␤    expecting "x", octal digit, "o", "b", fraction, exponent, term postfix, operator or "]"␤    at /tmp/kZyL475VEt line 1, column 45␤]

[02:04] <ruoso> pugs: my @@a = map { $_, 0 - $_ }, 1..5; say @@a[00]

[02:04] <p6eval> pugs: OUTPUT[1␤]

[02:04] <ruoso> it looks like pugs doen't have slice context yet... :(

[02:04] <ruoso> rakudo: my @@a = map { $_, 0 - $_ }, 1..5; say @@a[0;0]

[02:04] <p6eval> rakudo 30744: OUTPUT[Statement not terminated properly at line 1, near "@@a = map "␤␤current instr.: 'parrot;PGE::Util;die' pc 119 (runtime/parrot/library/PGE/Util.pir:82)␤]

[02:05] <ruoso> elf: my @@a = map { $_, 0 - $_ }, 1..5; say @@a[0;0]

[02:05] <p6eval> elf 22136: OUTPUT[Use of uninitialized value $_ in subtraction (-) at (eval 121) line 3.␤Use of uninitialized value $_ in anonymous hash ({}) at (eval 121) line 3.␤Undefined subroutine &GLOBAL::map called at (eval 121) line 3.␤ at ./elf_f line 3861␤]

[02:05] <ruoso> elf: my @@a = map { $_, $_ }, 1..5; say @@a[0;0]

[02:05] <p6eval> elf 22136: OUTPUT[Use of uninitialized value $_ in anonymous hash ({}) at (eval 121) line 3.␤Undefined subroutine &GLOBAL::map called at (eval 121) line 3.␤ at ./elf_f line 3861␤]

[02:05] *** imperator joined
[02:09] *** alc joined
[02:12] *** jferrero left
[02:16] *** imperator left
[02:18] <ruoso> sanity check: iterators should return the capture for that iteration, which may contain more than one item. it's then up to the calling code to define how to use that...

[02:19] <ruoso> for instance... when "map" consumes the input iterator, it stores the capture returned by the input iterator and consumes the elements in there before asking for another round... 

[02:20] <ruoso> but most of the time this is a non-issue, because the generic lazy list and lazy slice implementations will take care of hiding that complexity...

[02:21] <ruoso> since an iterator in slice context returns a bidimensional array, while in list context flattens the slice to a single dimension...

[02:23] <ruoso> the problem with that is when you want to use that in item context...

[02:24] <ruoso> hmm

[02:24] <ruoso> actually...

[02:24] <ruoso> it's not a problem

[02:24] <ruoso> we have to define the context first...

[02:26] <ruoso> map receives an iterator *in item context*... which means that in low-level "map { ... } (1,2,3)" makes something like "map((1,2,3).Iterator.Item, {...})""

[02:27] <ruoso> and that iterator in item context knows that it should flatten the return for each iteration to a single value (including re-trying when that step returned an empty capture... which is something "grep" will do a lot)

[02:30] <pugs_svn> r22137 | ruoso++ | [smop] "map" receives "Iterator in item context" (updating test code)...

[02:41] * ruoso sleep & (it's always good to know that the reality fits in the model you're working on)

[02:41] * ruoso . o O ( for some concepts of reality )

[02:41] * ruoso z Z z

[02:45] <s1n> anyone around with knowledge of List.pir?

[02:53] *** alc left
[02:53] *** redicaps joined
[03:03] *** elmex_ joined
[03:05] *** yahooooo left
[03:06] *** yahooooo2 joined
[03:07] *** agentzh left
[03:07] *** agentzh joined
[03:10] *** redicaps left
[03:18] *** elmex left
[03:18] *** elmex_ is now known as elmex

[03:24] <s1n> anyone remotely familiar with List.pir?

[03:31] *** yahooooo2 left
[03:32] *** yahooooo joined
[03:37] <s1n> is it better to skip a test or mark it as todo<bug>?

[03:40] *** sail0r joined
[03:42] <literal> roughly, you skip a test on a platform where it is irrelevant, you mark it todo when it is to test functionality that has not been implemented fully

[03:46] <PerlJam> s1n: What about List.pir?

[03:46] <s1n> PerlJam: have you messed with flatten?

[03:47] <PerlJam> briefly

[03:47] <s1n> does that flatten array references?

[03:48] <PerlJam> it flattens Lists  :)

[03:48] <s1n> i've been playing with it and i dont think it does, but there are comments that the impending lazylist effort will radically change it

[03:48] <s1n> does it flatten Lists of references to Lists though?

[03:49] <PerlJam> it doesn't recurse or anything.  It's just one level deep flattening.

[03:50] <s1n> okay, that answers my question

[03:51] <PerlJam> there are some hacks for flattening a Range or Array.  These hacks will be what are radically altered once we get true lazy lists (I'd imagine)

[03:51] <s1n> yeah i'll probably just write a ticket and leave it at that

[03:52] *** yahooooo left
[03:54] *** [particle] left
[03:55] <s1n> PerlJam: does slicing depend on the lazylist effort?

[03:55] <PerlJam> dunno

[03:56] *** eternaleye_ left
[03:57] *** eternaleye joined
[04:01] <pugs_svn> r22138 | s1n++ | [spec] fudged array_mmd.t and array_ref.t for rakudo

[04:13] *** ruoso left
[04:15] *** iblechbot joined
[04:30] *** sail0r_ joined
[04:32] *** iblechbot left
[04:35] *** sail0r__ joined
[04:39] *** sail0r__ left
[04:44] *** alanhaggai left
[04:52] *** sail0r left
[05:01] *** sail0r_ left
[05:29] *** Psyche^ joined
[05:32] *** Patterner left
[05:32] *** Psyche^ is now known as Patterner

[05:40] *** zostay_ joined
[05:41] *** zostay left
[05:44] *** ting_ joined
[05:44] *** ting left
[06:36] <pugs_svn> r22139 | moritz++ | [t/spec] minor fudging nits

[06:37] *** c9s left
[06:38] *** c9s_ joined
[06:39] *** ashizawa joined
[06:40] *** c9s_ is now known as c9s

[06:41] <rakudo_svn> r30747 | moritz++ | [rakudo] one more test for spectest_regression, s1n++

[07:11] *** viklund joined
[07:17] *** BinGOs joined
[07:33] *** bacek_ joined
[07:34] *** bacek left
[07:46] *** Lunchy left
[07:51] *** zamolxes left
[08:00] <moritz_> 343 files in spec/, 428 test files outside of spec/

[08:01] <moritz_> makes me think it's a never ending task

[08:01] * moritz_ is slightly frustrated

[08:04] <pugs_svn> r22140 | moritz++ | [t] moved loopscope.t to spec/, simplfied a bit

[08:14] *** Lunchy joined
[08:15] *** sri_work left
[08:15] *** iblechbot joined
[08:23] *** kane_ left
[08:30] *** Lunchy left
[08:35] *** Lunchy joined
[08:40] *** IRSeekBot joined
[08:56] *** zamolxes joined
[09:12] <pugs_svn> r22141 | moritz++ | [t] move pugs specific tests to pugs/

[09:13] *** ruoso joined
[09:17] *** cosimo joined
[09:18] <pugs_svn> r22142 | moritz++ | [t] moved tests around, merged single test into another file

[09:19] <pugs_svn> r22143 | moritz++ | [t] delete merged test; should have been done in r22142 already.

[09:33] *** Maghnus left
[09:34] *** Maghnus joined
[09:39] *** ruoso left
[09:40] *** bacek_ left
[10:13] *** meteorjay left
[10:20] *** BinGOs left
[10:29] *** BinGOs joined
[10:33] *** c9s left
[10:38] *** c9s_ joined
[10:40] *** c9s_ is now known as c9s

[11:03] *** araujo left
[11:07] *** zamolxes left
[11:08] *** zamolxes joined
[11:10] *** jferrero joined
[11:11] *** ruoso joined
[11:41] *** ruoso left
[11:45] *** whereiskurt_ joined
[12:00] *** BinGOs left
[12:00] *** BinGOs joined
[12:00] *** Lichtkind joined
[12:06] *** abra joined
[12:14] *** kane_ joined
[12:34] *** Jedai joined
[12:55] *** ashizawa left
[13:03] *** whereiskurt_ left
[13:13] *** jferrero left
[13:16] <pugs_svn> r22144 | moritz++ | [t] moved operators/hyper.t to spec/

[13:21] *** abra left
[13:22] <pugs_svn> r22145 | moritz++ | [t] moved config.t to spec/, deleted redundant tests

[13:24] <pugs_svn> r22146 | moritz++ | [t] moved goto.t to spec/

[13:30] <pugs_svn> r22147 | moritz++ | [t] move blocks/splat_rw.t to spec/

[13:34] <pugs_svn> r22148 | moritz++ | [t] merged blocks/splatty_with_type.t into spec/

[13:42] <pugs_svn> r22149 | moritz++ | [t] merged blocks/slurpy_param.t into spec/

[13:50] <moritz_> uhm, I merge some tests into spec/S06-signature/slurpy-params.t, and now it dies while running  the first ones

[13:50] <moritz_> how do I revert a commit?

[13:55] *** masak joined
[13:59] <pugs_svn> r22150 | moritz++ | [t/spec] partially reverted r22149 because it borked rakudo's

[13:59] <pugs_svn> r22150 | moritz++ | spectest_regression

[14:00] <pmichaud> any suggestions how to fix t/spec/S04-declarations/my.t:37 ?

[14:01] <moritz_> what's wrong with it?

[14:01] <pmichaud> sub foo is declared later in the test

[14:01] <moritz_> uhm

[14:01] <pmichaud> so it's not dying properly because sub 'foo' exists.

[14:02] <moritz_> I'll rename the second sub foo

[14:02] <pmichaud> (yes, we can argue that there's a signature mismatch there and so it should die anyway, but ...)

[14:03] <pugs_svn> r22151 | moritz++ | [t/spec] fixed name clash, pmichaud++

[14:04] <rakudo_svn> r30750 | pmichaud++ | [rakudo]: Eliminate :immediate subs from generated output.

[14:04] <rakudo_svn> r30750 | pmichaud++ | * Now use .loadinit() attribute of PAST::Block.

[14:04] *** jferrero joined
[14:10] *** masak left
[14:22] *** masak joined
[14:25] <pugs_svn> r22152 | moritz++ | [t] move sub_return_values.t to spec, corrected isa_ok calls to use type names

[14:30] *** REPLeffect left
[14:31] <pugs_svn> r22153 | moritz++ | [t/spec] fudged return.t for rakudo

[14:31] *** TJCRI joined
[14:36] <rakudo_svn> r30751 | moritz++ | [rakudo] two more tests for spectest_regression

[15:12] *** REPLeffect joined
[15:12] *** REPLeffect left
[15:12] *** REPLeffect joined
[15:21] *** kidd__ joined
[15:24] <rakudo_svn> r30753 | pmichaud++ | [rakudo]: spectest-progress.csv update: 153 files, 2707 passing tests

[15:26] *** viklund left
[15:28] *** justatheory joined
[15:36] *** dr_df0 joined
[15:36] *** Exodist joined
[15:45] *** araujo joined
[15:48] <pugs_svn> r22154 | moritz++ | [t/TASKS] smore more overall TASKS

[15:49] *** masak left
[15:54] *** abra joined
[16:03] *** jan_ left
[16:03] *** ruoso joined
[16:07] *** jan_ joined
[16:14] *** sri_work joined
[16:15] *** dr_df0 left
[16:15] *** c9s left
[16:25] <ruoso> Howdy!

[16:27] <moritz_> !ydwoH

[16:28] * ruoso still digesting the amount of concepts around the implementation of "map"!

[16:29] * ruoso . o O ( I just hope all the conceptual torture saves us a lot of code in the future )

[16:33] *** kidd__ left
[16:36] *** rindolf joined
[16:59] *** cosimo left
[17:09] *** c9s_ joined
[17:25] *** meppl joined
[17:32] *** pmurias joined
[17:33] <pmurias> ruoso: hi

[17:34] <ruoso> hi pmichaud 

[17:34] <ruoso> hi pmurias 

[17:44] *** zamolxes left
[17:46] <ruoso> pmurias, did you follow my last thoughts on map?

[17:55] <pmurias> ruoso: yes

[17:57] <pmurias> seems ok

[18:01] <pmurias> i'm pretty muddled now, so i might me wrong ;)

[18:01] *** pmurias left
[18:02] *** pim joined
[18:02] <pim> Hi, everybody.

[18:03] <moritz_> hi pim

[18:09] *** c9s joined
[18:10] *** pim left
[18:11] *** justatheory left
[18:17] <pugs_svn> r22155 | moritz++ | [t/spec] allow rakudo to run most of pge's regex tests

[18:18] <pugs_svn> r22156 | moritz++ | [t/spec] test files should end with .t, stupid me.

[18:20] *** c9s_ left
[18:20] *** zamolxes joined
[18:20] *** c9s_ joined
[18:29] *** alester joined
[18:33] *** c9s left
[18:34] *** zamolxes left
[18:34] <rakudo_svn> r30761 | moritz++ | [rakudo] add pge-tests.t to spectest_regression

[18:34] <rakudo_svn> r30761 | moritz++ | The immense number of skips is mostly explained by the fact that if we

[18:34] <rakudo_svn> r30761 | moritz++ | wouldn't skip > 240 tests, the test segfaults.

[18:34] <rakudo_svn> r30761 | moritz++ |  +307 skip, 105 todo, 333 pass

[18:37] *** yahooooo joined
[18:38] *** zamolxes joined
[18:41] *** c9s_ left
[18:47] *** [particle] joined
[18:51] *** Exodist left
[18:51] *** Exodist joined
[18:52] *** kst left
[18:52] *** kst joined
[18:54] <rakudo_svn> r30764 | pmichaud++ | [rakudo]:  code generated by --target=pir now runs from parrot (RT #53040)

[18:57] *** kst left
[18:57] *** kst joined
[18:58] *** zamolxes left
[18:58] *** TJCRI left
[18:58] *** Maghnus left
[18:58] *** ting_ left
[18:58] *** hercynium left
[18:58] *** Myoma left
[18:58] *** Khisanth left
[18:58] *** Guest70230 left
[18:58] *** SamB left
[18:58] *** idemal left
[18:58] *** frobnitz left
[18:58] *** jiing left
[18:58] *** spinclad left
[18:59] *** obra left
[18:59] *** sunnavy left
[18:59] *** clkao left
[18:59] *** nnunley left
[18:59] *** szbalint left
[18:59] *** PerlJam left
[18:59] *** beppu left
[18:59] *** rindolf left
[18:59] *** jferrero left
[19:06] *** drbean left
[19:06] *** s1n left
[19:06] *** awwaiid left
[19:06] *** broquaint left
[19:06] *** aindilis left
[19:06] *** baest left
[19:06] *** buubot left
[19:06] *** literal left
[19:06] *** zamolxes joined
[19:06] *** rindolf joined
[19:06] *** TJCRI joined
[19:06] *** jferrero joined
[19:06] *** Maghnus joined
[19:06] *** ting_ joined
[19:06] *** drbean joined
[19:06] *** idemal joined
[19:06] *** hercynium joined
[19:06] *** Myoma joined
[19:06] *** Khisanth joined
[19:06] *** Guest70230 joined
[19:06] *** jiing joined
[19:06] *** s1n joined
[19:06] *** awwaiid joined
[19:06] *** spinclad joined
[19:06] *** broquaint joined
[19:06] *** aindilis joined
[19:06] *** literal joined
[19:06] *** obra joined
[19:06] *** sunnavy joined
[19:06] *** clkao joined
[19:06] *** SamB joined
[19:06] *** nnunley joined
[19:06] *** szbalint joined
[19:06] *** PerlJam joined
[19:06] *** beppu joined
[19:06] *** baest joined
[19:06] *** buubot joined
[19:07] *** TJCRI left
[19:07] *** aindilis left
[19:07] *** smg left
[19:07] *** aindilis` joined
[19:07] *** pochi left
[19:07] *** pochi joined
[19:07] *** smg joined
[19:07] *** abra left
[19:07] *** merlo_ joined
[19:07] <moritz_> pmichaud++ # r30764

[19:08] *** justatheory joined
[19:08] *** aindilis` is now known as aindilis

[19:08] *** justatheory left
[19:08] *** justatheory joined
[19:08] *** IRSeekBot left
[19:08] *** TJCRI joined
[19:12] *** eternaleye left
[19:20] *** scrottie joined
[19:23] *** [particle]1 joined
[19:24] *** yahooooo left
[19:25] *** IRSeekBot joined
[19:27] *** viklund joined
[19:34] *** IRSeekBot left
[19:37] *** scrottie left
[19:40] *** [particle] left
[19:41] *** merlo_ left
[19:49] *** [particle] joined
[19:54] *** scrottie joined
[20:07] *** [particle]1 left
[20:12] *** kanru left
[20:12] *** justatheory left
[20:18] *** justatheory joined
[20:20] *** rindolf left
[20:41] *** zamolxes left
[20:43] *** diakopter is now known as diakopter_af

[20:43] *** diakopter_af is now known as diakopter

[20:43] *** diakopter is now known as diakopter_afk

[20:43] *** diakopter_afk is now known as diakopter_af

[20:44] *** diakopter_af is now known as diakopter

[20:45] *** diakopter is now known as diakopter_afk

[20:45] *** diakopter_afk is now known as diakopter

[20:55] *** yahooooo joined
[20:59] *** sri_work left
[21:01] *** fullermd left
[21:13] *** ludan joined
[21:27] *** ruoso left
[21:27] <rakudo_svn> r30769 | jonathan++ | [rakudo] Free allocated memory in Perl6MultiSub, so we don't leak.

[21:28] <rakudo_svn> r30770 | jonathan++ | [rakudo] Fix trailing whitespace.

[21:30] *** TJCRI left
[21:31] *** meppl left
[21:36] *** rjbs joined
[21:36] <rjbs> Hi, totally random drop-in question from someone who doesn't follow p6

[21:36] <rjbs> does this dwiw:

[21:36] <moritz_> go right ahead

[21:37] <rjbs>  with ($obj) { .some_method_obj_provides } 

[21:37] <moritz_> yes

[21:37] <rjbs> fantastic, thank you 

[21:37] * rjbs is trying to write up an explanation about why sigils are so nice, mostly for his .pm group

[21:38] <rjbs> as long as I'm asking: is $self implicit in its own method bodies?

[21:38] <rjbs> method foo { .some_other_method }

[21:38] <rjbs> s/implicit/default invocant/

[21:38] <moritz_> no, it's not

[21:38] <rjbs> Ok.  Is that planned but not implemented, or not planned but likely to change?

[21:38] <moritz_> you'd have to write method my_method ($_:, $stuff) { ... }

[21:38] <moritz_> it's not planned

[21:38] <rjbs> thanks

[21:39] <moritz_> but there's the 'self' keyword/builtiin/whatever

[21:39] <rjbs> sure

[21:40] <moritz_> and you can call $.method for example (which is an evil hack, but should work)

[21:40] <moritz_> if it returns  a scalar

[21:40] <moritz_> or @.method if it returns a list

[21:44] <TimToady> s/with/given/

[21:45] <TimToady> and the parens aren't necessary, so: given $obj { .some_method_obj_provides }

[21:55] *** Maghnus left
[22:01] *** ludan left
[22:06] *** raiph joined
[22:13] *** [particle]1 joined
[22:22] *** alester_ joined
[22:25] *** StephenPollei left
[22:27] *** StephenPollei joined
[22:31] *** [particle] left
[22:36] <raiph> hi

[22:36] <moritz_> hi

[22:37] <raiph> i've read your recent perl5-6 posts. great stuff.

[22:37] <moritz_> thanks

[22:37] <literal> me too, keep up the good work

[22:38] <raiph> moritz: are you involved with november?

[22:38] <moritz_> I'm slowly running out of tuits/topics/motivation for the blog...

[22:38] <moritz_> raiph: yes, a bit

[22:38] <moritz_> I wrote a grammar for HTML::Template, and a few tests

[22:38] <raiph> moritz: aha.

[22:39] <moritz_> and I discuss bugs that masak finds in rakudo ;)

[22:42] *** alester_ left
[22:44] <rjbs> TimToady: thanks

[22:51] <s1n> moritz_: S02-builtin_data_types/array-mmd.t is fudged for rakudo as well, but doesn't have any tests that pass unfudged, just fyi

[22:51] <moritz_> s1n: yes, I noticed

[22:52] <moritz_> s1n: I added the other (array-ref.t iirc) to spectest_regression

[22:52] <moritz_> I should teach autounfudge.pl to also look at files outside of spectest_regression

[22:53] <moritz_> so that they'll get unfudged when the tests start passing, but don't waste CPU cycles as long as no test is run

[22:54] <moritz_> anyway, good work, s1n++

[22:56] *** Maghnus joined
[22:57] <s1n> moritz_: there's a big problem with me running autounfudge, there's a bug in parrot that i'm working on that prevents me from doing any IO

[22:57] *** sail0r joined
[22:57] *** Exodist left
[22:58] <moritz_> but IO isn't used very much in the tests, is it?

[22:59] <s1n> the ones in spectest_regression will crash my system

[22:59] <moritz_> that's bad

[22:59] <moritz_> what OS do you use?

[22:59] <moritz_> parrot shouldn't even be able to crash your system

[22:59] <moritz_> doesn't matter how buggy it is

[23:01] <s1n> gentoo, 64bit

[23:02] <s1n> i reported rt#57776 along the same lines

[23:02] <s1n> i think they're related, but haven't been able to get a segfault, just flat out consumes everything

[23:02] <raiph> juerd: ping

[23:03] <s1n> looks like addresses bonked, they're doing IO in a kinda wonky way, relying on addresses to be in a certain order

[23:03] <s1n> they obviously aren't on my system

[23:03] *** sail0r left
[23:05] <s1n> that bug is on my todo list, just hadn't gotten to it, i'm working with chromatic on ironing out a few 64bit bugs, i'll eventually get to this

[23:05] <Juerd> raiph: Sorry, not available any time soon; email me please

[23:05] <Juerd> afk

[23:05] <s1n> anyways, gotta go to class

[23:06] * moritz_ got to go to bed

[23:09] *** [particle] joined
[23:09] <raiph> juerd: yay! I sent several emails a week or two back, incl. at least one to [email@hidden.address] from raiph.mellor atsign g mail dot com. I can repeat or use a diff email addy if you like.

[23:09] <Juerd> Ah, I see them

[23:10] <raiph> :)

[23:10] <Juerd> I have not yet come around to the administation involved, sorry

[23:10] <Juerd> afk && good night

[23:11] <raiph> understand. no probs. you've always done a fab job in the years I've been lurking. no hurry.

[23:14] <StephenPollei> maybe the tests should run with some setrlimit used to control resource overconsumption negatively affecting others and puting some sanity into test performance

[23:15] *** raiph left
[23:21] *** [particle]1 left
[23:22] *** alester_ joined
[23:26] <rjbs> Do I need parens around the cond in if?

[23:26] <rjbs> if $bool { ... }

[23:26] <Myoma> no

[23:26] <pugs_svn> r22157 | moritz++ | [t/spec] some unfudging

[23:28] <rjbs> Thnks.

[23:30] <literal> rjbs: If you haven't seen it, here are some short introductions to various Perl 6 features -> http://perlgeek.de/blog-en/perl-5-to-6/

[23:30] <lambdabot> Title: blog | Perlgeek.de Blog :: Category Perl-5-to-6

[23:36] *** ruoso joined
[23:36] *** justatheory left
[23:42] *** iblechbot left
[23:44] <rjbs> literal: thanks; I just had a few direct questions for now apropos a journal entry i'm writing

[23:46] <ruoso> moritz_, did you change the CSS of the 5-to-6 blog? or is it my browser that is rendering weird fonts?

[23:46] <literal> looks fine here

[23:46] <literal> then again, I have firefox set to use my fonts regardless of CSS :)

[23:49] <ruoso> yeah... it looks better that way

[23:49] *** fullermd joined
[23:59] *** aindilis is now known as Saram

[23:59] *** Saram is now known as aindilis

