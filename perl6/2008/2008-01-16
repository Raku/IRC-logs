[00:01] <pugs_svn> r19500 | cosimo++ | [t] Moved `exists' builtin tests under S29-array and S29-hash.

[00:02] *** cosimo left
[00:03] <pugs_svn> r19501 | lwall++ | Changed #?perl6: to #?rakudo:

[00:08] *** cosimo joined
[00:08] *** cosimo left
[00:10] *** cosimo joined
[00:12] *** cosimo left
[00:13] *** cmarcelo left
[00:19] *** justatheory joined
[00:20] *** IllvilJa joined
[00:26] *** alester left
[00:37] *** namit left
[00:37] *** Blasi left
[00:37] *** thoughtpolice joined
[00:37] *** Blasi joined
[00:40] *** jiing joined
[00:42] *** Blasi left
[00:45] *** crashmatrix left
[00:45] *** crashmatrix joined
[00:50] *** Auzon joined
[00:52] *** nipotaway is now known as nipotan

[00:54] *** nipotan is now known as nipotaway

[00:59] *** nipotaway is now known as nipotan

[01:04] *** cognominal_ joined
[01:05] *** justatheory left
[01:07] <Tene> So, any way to execute a closure in the current context instead of the context it was created in?

[01:08] <Tene> I want to be able to pass a closure to a function and then run that closure, except with some setup and teardown code inserted around it.

[01:09] *** cnhackTNT joined
[01:09] <Tene> If there was a way to insert extra code at arbitrary points in a closure, that would be okay too.

[01:09] <Tene> I guess I could do it with macros, too.

[01:10] *** skids joined
[01:11] *** chris2 left
[01:18] *** Lorn joined
[01:22] *** wknight8111 left
[01:23] *** wknight-away joined
[01:23] *** wknight-away is now known as wknight8111

[01:25] *** wknight8111 left
[01:26] *** wknight8111 joined
[01:31] *** devogon left
[01:39] *** jjore left
[02:11] *** polettix left
[02:12] *** kanru left
[02:24] *** lisppaste3 left
[02:31] *** Schwern left
[02:34] *** lisppaste3 joined
[02:40] <pugs_svn> r19502 | lwall++ | [fudge] first whack at test preprocessor

[02:50] *** kanru joined
[03:02] *** [particle1 joined
[03:08] *** Lorn left
[03:15] *** stevan_ joined
[03:15] *** [particle] left
[03:16] *** aindilis left
[03:17] *** aindilis joined
[03:26] *** [particle1 left
[03:27] *** alester joined
[03:32] *** [particle] joined
[03:51] *** [particle1 joined
[04:05] <pugs_svn> r19503 | agentz++ | [smartlinks.pl] prints usage info when GetOptions fails

[04:05] *** [particle2 joined
[04:15] *** penk joined
[04:16] *** [particle2 left
[04:17] *** [particle2 joined
[04:18] *** Limbic_Region left
[04:19] *** [particle1 left
[04:19] *** [particle] left
[04:24] *** Auzon left
[04:27] *** jferrero left
[04:28] *** Auzon joined
[04:38] *** thoughtp1lice joined
[04:43] <pugs_svn> r19504 | agentz++ | [smartlinks.pl] fixed a bug when --test-res is set while test file info is not available (aka the newline prbolem) reported by Cosimo++

[04:53] *** wknight8111 left
[04:55] *** thoughtpolice left
[04:55] *** [particle] joined
[04:58] *** thoughtp1lice is now known as thoughtpolice

[05:00] *** lyokato_ joined
[05:15] *** [particle2 left
[05:32] *** masak joined
[05:37] *** alc joined
[05:59] *** araujo left
[06:20] *** thoughtpolice left
[06:35] *** njbartlett_ left
[06:44] *** pen1 joined
[06:51] *** Schwern joined
[06:55] *** Schwern left
[06:55] *** Schwern joined
[07:01] *** Auzon left
[07:04] *** penk left
[07:18] <pugs_svn> r19505 | lwall++ | [fudge] bug removal

[07:25] *** jjore joined
[07:25] <pugs_svn> r19506 | lwall++ | Changing todo's to "fudge normal form"

[07:41] *** bsb left
[07:42] <pugs_svn> r19507 | lwall++ | more "fudge normal form"

[07:42] <pugs_svn> r19508 | lwall++ | [fudge] allow indentation of c?foo: line

[07:54] *** penk joined
[07:58] *** penk left
[08:00] <pugs_svn> r19509 | cosimo++ | Perl script to set svn props, for those poor souls that work on Win32.

[08:00] <pugs_svn> r19509 | cosimo++ | Bonus: it added the svn props to itself.

[08:01] <pugs_svn> r19510 | cosimo++ | [t/spec] Added svn props where not set

[08:13] *** jisom joined
[08:14] *** pen1 left
[08:25] *** iblechbot joined
[08:26] *** [particle1 joined
[08:30] *** Aankhen`` joined
[08:32] *** devogon joined
[08:42] *** [particle] left
[08:46] *** kane_ joined
[08:48] *** cosimo joined
[09:01] <moritz_> so is perl6 on parrot officially renamed to rakudo?

[09:02] *** jisom left
[10:07] *** wknight-away joined
[10:11] <Alias_> rakudo?

[10:11] *** ruoso joined
[10:13] <masak> rakudo!

[10:13] <masak> sounds japanese

[10:19] * ruoso rofl with the last xkcd strip

[10:24] *** luqui joined
[10:32] <pugs_svn> r19511 | Darren_Duncan++ | ext/Muldis-DB/ : reverted last SeeAlso change (r19354) as ::Interface will take the simpler AST input directly, no X wrapper needed

[10:34] *** DarkWolf84 left
[10:41] *** chris2 joined
[10:49] *** cnhackTNT left
[11:02] *** barney joined
[11:13] *** wknight-away left
[11:19] *** ebassi joined
[11:23] *** jferrero joined
[11:30] *** marmic left
[11:43] *** nipotan is now known as nipotaway

[11:47] *** cmarcelo joined
[11:52] *** polettix joined
[11:57] *** marmic joined
[12:03] *** iblechbot left
[12:06] *** Schwern left
[12:16] *** DarkWolf84 joined
[12:20] *** Alias_ left
[12:20] *** Alias_ joined
[12:34] *** DarkWolf84 left
[12:34] *** Lorn joined
[12:37] *** lyokato_ left
[12:56] *** rindolf joined
[12:57] <rindolf> Hi all.

[12:57] *** wknight-away joined
[12:58] <moritz_> hi rindolf

[12:59] <rindolf> Hi moritz_ 

[12:59] <rindolf> moritz_: what's up?

[13:02] *** luqui left
[13:03] <moritz_> rindolf: the ususal stuff - my studies, perlmonks, hacking my websites etc.

[13:04] <moritz_> rindolf: what about you?

[13:04] <rindolf> moritz_: well, I started working in a new job (for a one-month trial) on Sunday.

[13:04] <rindolf> moritz_: and yesterday I wrote some code.

[13:04] <moritz_> rindolf: what kind of job?

[13:04] <rindolf> moritz_: C++ programmer.

[13:04] <rindolf> moritz_: on Linux.

[13:04] <rindolf> :-)

[13:05] <pugs_svn> r19512 | ruoso++ | [smop] the ___POINTER___ macro replaces the object's RI to a NOOP RI so it can be put as a parameter inside a stack node, instead of just returning a proxy object.

[13:06] *** [particle1 left
[13:06] *** [particle] joined
[13:07] <rindolf> moritz_: oh! And on Saturday I wrote my first PIR program.

[13:07] <moritz_> both sound cool

[13:08] <Alias_> I have seen the future, and it is inline PIR

[13:10] <moritz_> and mod_parrot ;)

[13:11] <Alias_> Quite probably

[13:11] <Alias_> What struck me was chromatic's speed benchmarks

[13:11] <Alias_> It's not quite as fast as haskell, but it's damned impressive

[13:11] *** penk joined
[13:12] <Alias_> So it would seem to me that embedding not-quote-as-fast-as-c-but-way-faster-than-perl code would be advantagous in extreme

[13:12] <avar> where are those benchmarks?

[13:12] <Alias_> recent use.perl or perl.com post, one of the two

[13:12] <moritz_> especially if it doesn't cause segmentation faults when you do something wrong ;)

[13:12] <Alias_> indeed :)

[13:13] <ebassi> avar: http://use.perl.org/~chromatic/journal/35333?from=rss

[13:13] <lambdabot> Title: Journal of chromatic (983)

[13:14] <avar> Alias_: you can have stand-alone perl6

[13:14] <Alias_> avar: I know

[13:14] <Alias_> Although not QUITE standalone right?

[13:14] <pasteling> "avar" at 208.78.101.240 pasted "ldd -r perl6" (15 lines, 781B) at http://sial.org/pbot/29872

[13:14] <Alias_> You still need to keep it inside a parrot checkout or something?

[13:14] <Alias_> Because of make problems?

[13:15] <avar> since mod_parrot works I expect linking it to libparrot should too

[13:15] <Alias_> libgmp built in? Neato

[13:15] <Alias_> So large number support from the start

[13:16] <avar> ./perl6 -e 'say 9**9**9'

[13:16] <avar> 1.96627e+77

[13:16] <avar> sh-3.1$ ./perl6 -e 'say 9**9**9**9'

[13:16] <avar> inf

[13:16] <Alias_> nice

[13:16] <Alias_> I've been thinking a bit over the last few days

[13:16] <Alias_> Is anyone building parrot/perl6 with MinGW?

[13:17] <avar> they're waiting for you

[13:17] <Alias_> :)

[13:17] <Alias_> Well, kinda :)

[13:17] <Alias_> I'm not one to deal with bugs in the C, I just take stuff that works and package it up

[13:18] <Alias_> BUT, I might be able to add parrot/perl6 support to Perl::Dist

[13:18] <Alias_> "Vanilla Perl 6"

[13:27] *** [particle1 joined
[13:29] *** meppuru joined
[13:29] *** meppuru is now known as meppl

[13:30] <rindolf> Hi Alias_ 

[13:30] <rindolf> Alias_: there was something I've been meaning to ask you, but I don't recall what it was.

[13:31] <moritz_> rindolf: then you'll have to ask a generic question

[13:31] <moritz_> like "?"

[13:31] <moritz_> ;)

[13:31] *** chris2 left
[13:32] <rindolf> Alias_: when are you going to restore http://ali.as/devel/cvsmonitor/ ?

[13:34] *** skids left
[13:34] *** njbartlett_ joined
[13:35] <Alias_> rindolf: As it just so happens I'm in the middle of recovering it right now

[13:35] <Juerd_> How does >> work in regexes, given that > also ends <foo ...>?

[13:36] <moritz_> what's >> supposed to be?

[13:36] <Juerd_> Right word boundary

[13:37] * Juerd_ doesn't like its spelling because it's much different from >> in Perl 6 itself, but mostly wonders how it can be parsed alright

[13:37] <moritz_> disambiguation by requiring whitespaces?

[13:37] <moritz_> that's ugly, I know

[13:37] <Juerd_> Ugh

[13:38] <rindolf> Alias_: oh cool.

[13:38] <rindolf> Alias_++

[13:38] <Alias_> rindolf: In getting the Strawberry websites working, I discovered how to link svn to dreamhost sites properly

[13:39] <Alias_> I have the ali.as site in some random condition in version control, just didn't have a good way to deploy it

[13:39] <Alias_> Setting up the cron now in fact

[13:39] <Alias_> (dreahost recently adding cron support was the final piece I needed)

[13:45] <Alias_> rindolf: You actually use CVS Monitor?

[13:45] <Alias_> I thought most people had pretty much moved on from CVS now

[13:46] <rindolf> Alias_: no, but it's a broken link in the dmoz.org CVS category.

[13:46] <Alias_> ah :)

[13:46] <Alias_> Which you look after? 

[13:47] <rindolf> Alias_: I'm an editor of the "Configuration Management/Tools" directory, which contains it.

[13:47] <Alias_> ah

[13:47] <Alias_> You'd probably be interested in one of my current work projects then

[13:47] <Alias_> I've added schema version control to Oracle

[13:55] *** iblechbot joined
[13:56] *** [particle] left
[14:05] *** alc left
[14:07] *** jferrero left
[14:09] *** alester left
[14:12] <bphillip1> Alias_: sounds interesting, available to the public?

[14:13] <Alias_> bphillip1: It's too company-specific atm

[14:13] <Alias_> bphillip1: But once I'm no longer employed by the company (and I've got all the kinks worked out) I definitely want to do a CPAN variant

[14:14] <Alias_> We're still hitting problems with it not being quite paranoid enough

[14:14] <Alias_> And it doesn't support branch tracking properly

[14:14] <Alias_> It does, however, seriously kick ass

[14:15] <Alias_> Inspired a bit by some of the Ruby stuff, but improved

[14:15] <Alias_> (so as to be more appropriate for mere mortals that can't code)

[14:15] <bphillip1> Alias_: do you tend to reserve the right to release what you develop at a company as open source stuff at a later date?

[14:16] <Alias_> Sometimes

[14:16] <Alias_> Or at least, I try to negotiate the ability to open source stuff that doesn't have a business value to the company

[14:16] <bphillip1> where I work, we sign something about everything we create on company time/equipment being proprietary to The Company

[14:16] <Alias_> Well, contracting helps for one

[14:16] <bphillip1> true

[14:17] <Alias_> Also, I've done it enough times that I can demonstrate all the additional value I bring to the company from previous iterations

[14:17] <Alias_> The giant stinking pile of CPAN modules etc

[14:17] <Alias_> And failing that, I sucker them on the "It means I'll keep supporting the code even after you stop paying me" argument

[14:17] <bphillip1> nice :-)

[14:18] <Alias_> Of course, I'd never propose to do it with anything that generates income

[14:18] <Alias_> I have one system in particular that I'd dearly love to CPANify

[14:18] <Alias_> For screen scraping banks websites

[14:18] <Alias_> But it's a critical advantage for my client in his market

[14:18] <moritz_> something like a kicking ass WWW::Mechanize?

[14:19] <moritz_> erm, ass kicking

[14:19] <moritz_> ykwim

[14:19] <Alias_> More like an ass-kicking Finance::Bank

[14:19] <moritz_> ok

[14:20] <Alias_> Awesome code, very very robust

[14:20] <Alias_> But utterly sekrit

[14:20] <Alias_> And so it stays private

[14:21] <Alias_> But really, 50% of most code everyone writes has little business value

[14:21] <rindolf> Alias_: regarding Ada - besides the Ada-ish VHDL there's also Verilog which is more Cish

[14:21] *** wknight-away left
[14:21] *** [particle] joined
[14:21] <Alias_> rindolf: Ya, but I get the impression that VHDL is what the big boys all use

[14:21] <moritz_> it is indeed

[14:22] <Alias_> And now I understand why

[14:22] <rindolf> Alias_: my previous workplace used Verilog.

[14:22] <rindolf> Alias_: and so did my friend's previous workplace.

[14:22] <Alias_> Were they massive chip companies?

[14:22] <rindolf> Alias_: no.

[14:22] <rindolf> Alias_: they were small companies.

[14:22] <Alias_> Wel there you go :)

[14:22] <rindolf> I did work a bit with VHDL in the Technion.

[14:23] <Alias_> Anyways, I need to sleep now

[14:23] <rindolf> Alias_: good night.

[14:23] <Alias_> If this trip of mine comes off, I'll wanted to spend some quality time on the Perl 6 / parrot toolchain anyways

[14:23] <Alias_> So hopefully all the niggly compiler issues are worked out by then

[14:25] <Alias_> rindolf: Won't get cvsmonitor pages working today

[14:25] <Alias_> But I've got cron up, so it should just be a matter of pushing the pages over from old version control

[14:25] <Alias_> night all

[14:25] *** Alias_ left
[14:35] *** skids joined
[14:36] *** jferrero joined
[14:44] *** [particle1 left
[14:46] *** jhorwitz joined
[14:51] *** kanru left
[14:55] *** ebassi left
[14:56] *** ebassi joined
[15:02] *** rdice joined
[15:10] *** barney left
[15:14] *** rindolf left
[15:27] *** gbacon left
[15:28] *** gbacon joined
[15:28] *** jferrero left
[15:32] *** jferrero joined
[15:34] *** kanru joined
[15:34] *** rindolf joined
[15:48] *** araujo joined
[15:58] *** skids left
[16:03] *** ispy_ joined
[16:05] *** masak left
[16:11] <pugs_svn> r19513 | ruoso++ | [smop] the ___POINTER___ macro is actually POINTLESS... :) The Free lowlevel call should ignore the refcount anyway and clean the reference to the object in the current stack.

[16:14] *** exp_evalbot left
[16:14] *** exp_evalbot joined
[16:15] <pugs_svn> r19514 | moritz++ | [evalbot] perl6 on parrot is now called "Rakudo"

[16:15] *** exp_evalbot left
[16:15] *** exp_evalbot joined
[16:16] <moritz_> rakudo: say "hi there, with new name"

[16:16] <exp_evalbot> OUTPUT[hi there, with new name␤]

[16:18] *** pro21ms4 joined
[16:25] <[particle]> moritz_++

[16:27] *** rindolf left
[16:34] <moritz_> pmichaud++

[16:34] * ispy_ wonders if he can ++ himself?

[16:35] *** jferrero left
[16:35] <moritz_> ispy_: you can, but it won't do you any good ;)

[16:36] * ispy_ kicks the dirt...

[16:43] <[particle]> ispy_++ for being a karma whore

[16:44] <[particle]> who's your daddy?

[16:44] <ispy_> you are :(

[16:44] *** penk left
[16:44] <[particle]> :D

[16:44] <ispy_> haha...

[16:46] <gbacon> integral: you clown

[16:47] <gbacon> a total of three messages and you ban me?

[16:47] <diakopter> moritz_: how about having exp_evalbot prepend the implementation name before 'OUTPUT'

[16:49] <moritz_> diakopter: why? ususally it's quite clear from context which on is to blame ;)

[16:49] <pugs_svn> r19515 | ruoso++ | [smop] For sanity reasons, I defined q:sm0p which is a quoting type that is a "stack definition language" that translates one statement to one stack node without creating a new stack.

[16:50] <diakopter> usually, yeah. I guess I'm a stickler for perspicuity.

[16:50] <diakopter> but, you're right.

[16:50] <diakopter> so it's probably not worth the extra noise

[16:51] <ruoso> I just love Perl 6... which other language would allow me to create a new syntax inside it in such a clear way...

[16:51] <moritz_> diakopter: if you can't map eval command to output from context, you'd have to prepend the output lines with the evaluated command as well

[16:52] <moritz_> ruoso: perhaps lisp?

[16:52] <moritz_> I never actually used lisp, so I'm not sure ;)

[16:52] *** jferrero joined
[16:53] <pasteling> "ruoso" at 213.13.127.198 pasted "If you think stack manipulation was nice in SMOP, take a look in the q:sm0p quoting type, in the example CPS implementation for DESTROYALL..." (18 lines, 639B) at http://sial.org/pbot/29875

[16:53] <diakopter> moritz: or, prepend with requestorname: IMPL|STDOUT

[16:53] <ruoso> moritz_, see the paste above

[16:54] *** araujo left
[16:56] <moritz_> diakopter: I think I'll do that if it turns out that the current approach isn't working in the wild

[16:56] *** araujo joined
[16:57] <[particle]> perl6: say(captialize('hElLo, WoRlD'));

[16:57] <exp_evalbot> kp6: OUTPUT[no method 'APPLY' in Class 'Undef'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤   KindaPerl6::Runtime::Perl5::MOP::__ANON__('HASH(0x824bda4)', 'APPLY', 'HASH(0x8e4afe0)') called at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 169␤  

[16:57] <exp_evalbot> ..main::DISPATCH('HASH(0x824bda4)', 'APPLY', 'HASH(0x8e4afe0)') ca...

[16:57] <exp_evalbot> ..pugs: OUTPUT[*** No such subroutine: "&captialize"␤    at /tmp/G24xX4oUq0 line 1, column 5-31␤]

[16:57] <exp_evalbot> ..p6: No output (you need to produce output to STDOUT)

[16:58] <[particle]> where's rakudo in there?

[17:00] <pugs_svn> r19516 | moritz++ | [evalbot] one more s/p6/rakudo/, [particle]++

[17:00] *** pugs_svn left
[17:01] *** pugs_svn joined
[17:07] <[particle]> would folks here be interested in commit messages from rakudo, and is it easy enough to create a bot that reports only commits to parrot's languages/perl6 dir?

[17:10] * diakopter fires up svnbotl for parrot/languages/perl6 in #perl6 

[17:10] <moritz_> [particle]: yes

[17:12] <[particle]> diakopter: it'd be nice to have that bot on irc.perl.org#rakudo too

[17:12] <[particle]> ...and some other bots, if i can figure out how to get them there

[17:12] <moritz_> [particle]: do you want logging in that channel?

[17:12] <gbacon> anyone have ops on #Perl?

[17:13] <[particle]> sure, you can log #rakudo

[17:16] <moritz_> let's see if my bot works on irc.perl.org

[17:16] <moritz_> that server tends to produce connection timeouts

[17:17] *** rakudo_svn joined
[17:18] <diakopter> here goes nothing

[17:19] <diakopter> c'mon, someone with commit access to rakudo... do your thing

[17:23] *** manfred joined
[17:23] <pugs_svn> r19517 | lwall++ | [fudge] recognize is_* ok_* for user-defined tester subs

[17:23] *** ispy_ left
[17:23] *** jjore left
[17:57] <ruoso> TimToady, I've came up with an alternative way to create a new set of stack nodes in smop, if you have some free time, could you please take a look at it? http://sial.org/pbot/29875

[17:57] <lambdabot> Title: Paste #29875 from "ruoso" at 213.13.127.198

[17:57] *** jferrero left
[17:58] *** pmurias joined
[17:58] <pmurias> moritz_: lisp dosn't have syntax itself

[17:58] <ruoso> heh

[18:00] <pmurias> ruoso: tcl would let you create a new syntax

[18:01] *** kst left
[18:01] *** cosimo left
[18:07] * ruoso having weird thoughts about using the stage 0 and 1 languages inside the C code, including a pre-processor before cpp that would translate the stage 0 and 1 languages to C code directly

[18:10] <pmurias> ruoso: i think an important question is "Is Perl 6 a better low-level language then C?"

[18:11] <ruoso> pmurias, not at all, but the thing is that the stage 0 language and the stage 1 language are supposed to be translattable to C

[18:12] <[particle]> is stage 1 built on stage 0?

[18:12] <[particle]> like, could you build up a chain of emitters?

[18:13] <ruoso> [particle], I still didn't stress it, but I think so...

[18:14] <ruoso> because the stage 0 language is a stack node builder

[18:14] <ruoso> and the stage 1 is something that will be translated into a set of stack nodes

[18:17] <ruoso> [particle], but I think it won't be a simple chain of emitters... because the stage1 has some boot C code before creating the actual nodes...

[18:17] <ruoso> so, the stage 1 would be translated to some C code, than the stage0 lang and then some more C code...

[18:21] *** skids joined
[18:23] *** ebassi left
[18:23] *** rindolf joined
[18:28] *** pro21ms4 left
[18:32] *** braceta left
[18:38] *** braceta joined
[18:41] <skids> Suppose I have a class with tons of constants some of which are needed to invoke methods, but maybe the constants are not so useful outside the class.  Has any sugar been proposed to allow a y.meth($foo, $bar) to look up $foo, $bar in y's class before the regular search?  Just wondrin.

[18:43] <pmurias> skids: $foo,$bar are variables?

[18:43] <skids> Well, could be.  For me I'm just thinking constants, but that could be useful too.

[18:44] <skids> There's that class variable $^var, right?  But that would still need a Package:: in front of each one used.

[18:45] <pmurias> skids: $^var is a placeholder variable

[18:46] <skids> Hrm oh yeah what was that sigil then...

[18:46] <pmurias> skids: i don't think there are class variables

[18:47] <pmurias> i think it would be $ClassName::var

[18:49] <skids> No there was something about non-per-instance methods IIRC, looking now.

[18:49] <pmurias> they are methods on the metaobject instance method ^foo {}

[18:50] <skids> $:, @:, %: is what I was referring to. "Class attributes"

[18:54] <skids> I suppose y.meth(y.:foo,y.:bar,y.:blah ...) is better than y.meth($MyClass::foo, $MyClass::bar, $MyClass::blah ...) for short variable names.

[19:00] <pmurias> S12:715

[19:01] *** alester joined
[19:04] *** cosimo joined
[19:05] <cosimo> hi there!

[19:05] <lambdabot> cosimo: You have 1 new message. '/msg lambdabot @messages' to read it.

[19:05] <moritz_> cosimo: that message is now superflous, since agentzh++ fixed smartlinks.pl ;)

[19:06] <cosimo> moritz_: yes, I know. Thanks anyway

[19:06] <cosimo> BTW, newbie q:

[19:07] <cosimo> I don't remember my nick pwd, how can I "reset" it?

[19:07] <TimToady> pugs passwd?

[19:07] <moritz_> cosimo: pugs svn?

[19:08] <pugs_svn> r19518 | putter++ | Add ruby backend option to script/kp6.

[19:08] <[particle]> irc nickserv password?

[19:08] <cosimo> no, sorry. I'm talking about freenode irc.  particle: yea

[19:08] <TimToady> as usual, the expert answer is "it depends" :)

[19:08] <cosimo> :-)

[19:09] <skids> pmurias: ahh, the ^ was in my synapses from S12:441

[19:09] * skids relieved his synapses are functioning on some level

[19:09] <cosimo> what time is it in the states, now??? Usually at this time in my TZ there's not many people

[19:10] <skids> 2pm EST.

[19:11] <skids> People too busy working off their mortgages, I guess.

[19:11] <gbacon> and selling off gold too

[19:11] <cosimo> TimToady: have you seen the add-svn-props.pl? Don't know if it's ok, but I thought it's more cross-platform than /bin/sh

[19:12] <skids> speaking of which, meeting...

[19:19] <TimToady> cosimo: no, haven't looked at it, but if it works, it works...

[19:21] <pugs_svn> r19519 | putter++ | Emit/Ruby.pm now defines Emit::Ruby, not Emit::Perl5.

[19:21] <pugs_svn> r19519 | putter++ | perl script/kp6 -Cruby -e 'say 3' still doesn't work:

[19:21] <pugs_svn> r19519 | putter++ |   Can't load Emit::Ruby plugin: Can't locate KindaPerl6/Visitor/Emit/Ruby.pm

[19:21] <pugs_svn> r19519 | putter++ |    in @INC

[19:21] <cosimo> TimToady: yep, it does

[19:21] <cosimo> :-)

[19:33] <pasteling> "mncharity" at 76.24.28.215 pasted "perl Makefile.PL kp6_mp6 "Please inform the author." error message" (9 lines, 400B) at http://sial.org/pbot/29880

[19:34] <mncharity> @tell fglock fyi: perl Makefile.PL kp6_mp6 "Please inform the author." error message: http://sial.org/pbot/29880

[19:34] <lambdabot> Consider it noted.

[19:35] <pmurias> @tell putter did you run make? ;)

[19:35] <lambdabot> Consider it noted.

[19:35] <mncharity> no.  :)

[19:36] <mncharity> @tell fglock I didn't run make.  Oops.  Never mind.  Thanks.  pmurias++

[19:36] <lambdabot> Consider it noted.

[19:37] *** jferrero joined
[19:38] <pmurias> mncharity: perl5v6 now has a primitive MOP

[19:38] <pmurias> src/KindaPerl6/Runtime/Perl5V6/MOP.pm

[19:39] <mncharity> looking...

[19:40] <mncharity> (while make kp6_mp6 is running...  it's compiling more than Emit/Ruby.pm, which was unexpected)

[19:42] <mncharity> re MOP.pm, interesting, thanks.  (I don't understand the oo bootstrap or mop well enough to comment, but I look forward to copying from it:)

[19:43] * mncharity wonders why make kp6_mp6 is recompiling KindaPerl6/Grammar/*.pm :/

[19:44] <pmurias> mncharity: did you use make forcerecompile?

[19:44] <pugs_svn> r19520 | ruoso++ | [smop] finally I have the code for the first test... the only problem is that this test will only be able to run when I have a looooooot of code.

[19:45] <pmurias> (svn sometimes screws up timestamps)

[19:47] <mncharity> re forcerecompile, no.  and i don't immediately see a kp6_mp6 dependency on the makefiles.  curious.

[19:47] <mncharity> hmm... timestamps..

[19:48] <pugs_svn> r19521 | ruoso++ | [smop] a small note regarding the specific feature the test is trying to address..

[19:50] <mncharity> oh, duh.  yes, the compiled/perl5-kp6-mp6/lib/KindaPerl6/Grammar/*.pm are from Jan 5, vs Jan 11 for the source.

[19:52] <mncharity> and it was indeed an svn issue.  removing and reverting bumpted the *.pm to the 11th.

[19:52] *** jisom joined
[19:59] *** polettix left
[20:00] *** crashmatrix left
[20:06] <pugs_svn> r19522 | putter++ | perl script/kp6 -Cruby -e 'say 3' works.

[20:06] <pugs_svn> r19522 | putter++ | docs/ruby_backend.txt: added 'how to get Emit/Ruby.pm built' notes.  pmurias++

[20:06] <pugs_svn> r19522 | putter++ | Emit/Ruby.pm: emit_perl5 methods renamed emit_ruby.

[20:06] <pugs_svn> r19522 | putter++ | Bug: while -Cruby behaves as -Cperl5, -Bruby also behaves as -Cperl5.

[20:16] <pugs_svn> r19523 | putter++ | ruby_backend.txt: change mentioned but missed in r19522.

[20:21] *** jisom left
[20:28] *** _sprocket_ joined
[20:28] <pugs_svn> r19524 | putter++ | script/kp6 -Bruby -e 'say 3' sort of works.

[20:28] <pugs_svn> r19524 | putter++ | It doesn't run, because the emitted p5 is changed:

[20:28] <pugs_svn> r19524 | putter++ | -        ::DISPATCH( $Code_say, 'APPLY', ::DISPATCH( $::Int, 'new', 3 ) );

[20:28] <pugs_svn> r19524 | putter++ | +        ::DISPATCH( ( $GLOBAL::Code_say = $GLOBAL::Code_say || ::DISPATCH( $::Routine, "new", ) ), 'APPLY', ::DISPATCH( $::Int, 'new', 3 ) );

[20:28] <pugs_svn> r19524 | putter++ | script/kp6: added missing -B/-C handling for "ruby".  I'm unsure why -C already

[20:28] <pugs_svn> r19524 | putter++ |  seemed to be working.

[20:28] <pugs_svn> r19524 | putter++ | Emit/Ruby.pm: modified an emitted header comment to make origin unambiguous. 

[20:31] *** Coke joined
[20:32] * Coke yawns.

[20:42] *** Lorn left
[20:42] *** lorn joined
[20:43] *** lorn is now known as Lorn

[20:44] <pugs_svn> r19525 | putter++ | Milestone: script/kp6 understands a ruby backend exists.

[20:44] <pugs_svn> r19525 | putter++ | Currently it's a copy of Perl5.pm.

[20:44] <pugs_svn> r19525 | putter++ | It is emitting slightly broken p5 code, cause unknown.

[20:49] *** rindolf left
[20:58] *** manfred left
[21:03] *** Lorn left
[21:11] <pmurias> mncharity: you didn't add all nessesary visitors to the processing chain

[21:11] <pmurias> script/kp6 --do ExtractRuleBlock,Token,MetaClass,Global,Emit::Ruby ../../t/01-sanity/01-tap.t | perl -I compiled/perl5-kp6-mp6/lib/

[21:12] <pmurias> works

[21:18] <pmurias> script/kp6 -Cnoexistent defaults to -Cperl5

[21:18] *** jferrero left
[21:19] *** TJCRI joined
[21:21] <pmurias> mncharity: why did you change your nick, i only made the connection that you are putter by looking at AUTHORS

[21:23] *** Gregor__ joined
[21:26] *** mmorrow left
[21:26] *** wknight-away joined
[21:26] *** mmorrow joined
[21:26] *** wknight-away is now known as wknight8111

[21:29] <pugs_svn> r19526 | cosimo++ | Test suite refactoring.

[21:29] <pugs_svn> r19526 | cosimo++ | Moved builtins/control_flow/sleep.t under t/spec/S29-context

[21:31] *** icwiener joined
[21:32] <pmurias> mncharity: just asking out of curiosity ;) 

[21:33] *** Aankhen`` left
[21:33] *** Gregor__ left
[21:35] <pugs_svn> r19527 | cosimo++ | Refactored keys/values tests for arrays and hashes (S29)

[21:37] *** japhb_ left
[21:38] *** meteorjay joined
[21:38] <pugs_svn> r19528 | lwall++ | [fudgeall] mung filenames to .fud and run fudge preproprocessor over /spec files only

[21:46] *** meteorjay left
[21:52] *** jferrero joined
[22:03] *** jferrero left
[22:03] *** Limbic_Region joined
[22:08] <pugs_svn> r19529 | putter++ | [kp6] ruby backend now actually runs ruby, and emits some ruby code.

[22:08] <pugs_svn> r19529 | putter++ |   script/kp6 -Bruby -e 'say 3'  works, but little else.

[22:08] <pugs_svn> r19529 | putter++ | And the calling convention is likely to change.

[22:08] <pugs_svn> r19529 | putter++ | Ruby version >= 1.9.0 is currently required.

[22:09] *** TJCRI left
[22:11] *** japhb joined
[22:11] *** ispy_ joined
[22:12] <mncharity> pmurias: re nick, people in perl land had short, creative nicks.  back when I didn't realize how much of my life would be spent on p6, I thought "ah, here's a chance to experiment with having a short creative nick!".  perhaps if it were shorter or more creative it would have had a more lasting appeal.  but didn't.

[22:14] <pmurias> mncharity: thanks

[22:15] <moritz_> perl  script/kp6 -Bruby -e 'say 3'

[22:15] <moritz_> No such file or directory at script/kp6 line 528.

[22:15] <mncharity> np :)

[22:15] <pmurias> mncharity: did you make

[22:16] <[particle]> mncharity: do you want an mncharity-shaped commit bit?

[22:16] <mncharity> docs/ruby_backend.txt has the "get kp6 to compile Emit/Ruby.pm into the right place" receipe

[22:16] <pugs_svn> r19530 | pmurias++ | [kp6] added missing compiled file

[22:17] <mncharity> [particle]: hmm, I think I'll stick with putter for now.  traditional.  but thanks. :)

[22:17] <pmurias> moritz_: do you have ruby?

[22:17] <mncharity> pmurias: ah, good idea.  thanks.

[22:17] <moritz_> pmurias: aye

[22:18] <moritz_> ah, wait

[22:18] <moritz_> I have ruby1.9 but no 'ruby' symlink

[22:18] <mncharity> I was wondering what to call it.  Is that a vote for "ruby1.9" ?

[22:19] <moritz_> in Debian Stable ruby is ruby1.8, if you want ruby1.9 you have to say that explicitly

[22:20] <moritz_> so for me ruby1.9 is more convenient ;)

[22:20] <mncharity> changing script/kp6 ...

[22:21] <pmurias> sleep&

[22:21] *** pmurias left
[22:21] <pugs_svn> r19531 | putter++ | [kp6] script/kp6 now uses "ruby1.9" instead of "ruby"

[22:21] <pugs_svn> r19531 | putter++ | to get a >=1.9.0 version of ruby.

[22:21] <mncharity> pmurias: g'night.  thanks for your help.

[22:23] *** tobeya left
[22:23] <moritz_> perl  script/kp6 -Bruby -e 'say 3'

[22:23] <moritz_> -:5: syntax error, unexpected '('

[22:23] <moritz_>  c_say.( 3)

[22:23] <moritz_>         ^

[22:25] <mncharity> hmm...

[22:25] <mncharity> that's the error message I see when running a ruby1.8 against the -C output.

[22:26] <mncharity> so much for giving a nice error message to people running 1.8 :/

[22:26] <mncharity> did you svn up to r19531 ?

[22:26] *** Limbic_Region left
[22:34] *** jjore joined
[22:34] *** braceta left
[22:35] <moritz_> yes

[22:35] <moritz_> and I deinstalled ruby 1.8

[22:36] <moritz_> so if it runs anything rubyish at all, it is 1.9

[22:37] *** Auzon joined
[22:37] <moritz_> I have a libruby1.8 still, but I don't think that should interfere

[22:38] *** cmarcelo left
[22:39] <mncharity> (bbiab - call)

[22:40] <mncharity> ruby1.9 --version  says 1.9.0?

[22:40] <moritz_> aye

[22:40] <mncharity> mumph

[22:41] *** rdice left
[22:41] <mncharity> such pain because 1.8 doesn't have real lambdas. :/  let's see...

[22:42] <moritz_> I can see if I can get a newer ruby version from backports.org

[22:42] <mncharity> could you try .call( instead of .( ?

[22:43] <mncharity> my guess is debian is providing a prerelease version of 1.9.0 (as the release version works).

[22:43] <moritz_> .c_say(2) is valid syntax

[22:43] <moritz_> ruby 1.9.0 (2006-06-08) [i486-linux]

[22:43] <mncharity> c_say.call(2)

[22:44] <moritz_> how do I obtain all of the emitted ruby code?

[22:44] <mncharity> yeah, 1.9.0 was released at end of year.  but the development builds from the preceeding year called themselves 1.9.0.  sigh.

[22:45] <[particle]> now that's just silly.

[22:45] <mncharity> released 25 Dec 2007  http://www.ruby-lang.org/en/

[22:45] <lambdabot> Title: Ruby Programming Language

[22:46] <mncharity> moritz_:  perl script/kp6 -Cruby -e 'whatever'

[22:46] <mncharity> [particle]: yeah. :/

[22:47] <mncharity> moritz_:  ruby1.9 -Icompiled/ruby-kp6-mp6 emitted.rb

[22:47] *** alester left
[22:48] <moritz_> testing has 1.9.0+20071016-1

[22:48] <moritz_> not really new either

[22:48] *** _sprocket_ left
[22:49] *** cspencer joined
[22:49] <mncharity> moritz_: actually, I think I'm going to leave the calling convention .( .  Running old 1.9 development snapshots opens up a world of random pain, so failing seems the better outcome than continuing.

[22:51] *** mmorrow left
[22:53] <moritz_> mncharity: good reasning ;)

[22:56] <[particle]> it'd might be helpful to have back-end appropriate help text, something like :script/kp6 -Bruby -h

[22:56] <mncharity> moritz_: if you haven't yet upgraded, could you wait a moment, and check out a new kp6 with warning message?

[22:57] <meppl> good night

[22:57] <moritz_> mncharity: ok

[22:58] *** meppl left
[22:59] <pugs_svn> r19532 | putter++ | [kp6] script/kp6: check for old versions of ruby (1.8, and prerelease 1.9).

[23:00] <mncharity> moritz_: ok, should now politely complain.

[23:00] <moritz_> it does

[23:00] <moritz_> mncharity++

[23:00] <mncharity> :)

[23:01] <mncharity> re testing has 1.9.0+20071016-1, :(

[23:03] <mncharity> I'll try to remove the 1.9 dependency once things are further along.  to use 1.8, one has to play gensym games, because 1.8 doesn't have a normally scoped lambda.

[23:03] *** Auzon left
[23:03] <gbacon> @pl \a b -> head a == head b

[23:03] <lambdabot> (. head) . (==) . head

[23:03] <moritz_> mncharity: I don't think that's high priority

[23:05] <mncharity> but it's hard to emit code, and use blocks for lexical scoping, where variables may be mis-bound.  eg,

[23:05] <mncharity> x = 4; ->(x){x=3}; #x == 4 works, but -> is 1.9

[23:06] <mncharity> x = 4; (proc {|x| x=3}).call(14); # x==3 :(

[23:06] <mncharity> err,

[23:06] <mncharity> x = 4; (->(x){x=3}).call(14); #x == 4

[23:08] *** Jamtech joined
[23:08] <mncharity> or something like that.  know recognized as a Bad Idea.  but... still have to live with the concequences for another year or so.

[23:08] <mncharity> s/know/now/

[23:09] * moritz_ drifts off to sleep

[23:09] <mncharity> g'night!  thanks for trying it, and turning up bugs :)

[23:09] *** jferrero joined
[23:13] *** Jamtech_ joined
[23:15] *** Jamtech left
[23:15] *** Jamtech_ left
[23:15] <pugs_svn> r19533 | putter++ | [kp6] script/kp6: fixed check for ruby 1.9.0 prerelease versions.

[23:19] <cspencer> have the new #?perl6 test skipping commands been added into the p6 distributed with parrot yet?

[23:19] *** Auzon joined
[23:24] <[particle]> we're working on it.

[23:24] <[particle]> #?perl6: todo(...) works

[23:24] <[particle]> skip() doesn't

[23:25] <cspencer> ah ok

[23:25] <pugs_svn> r19534 | putter++ | [kp6] Emit/Ruby.pm: removed ruby version check from emitted code.

[23:25] <pugs_svn> r19534 | putter++ | Older versions parsefail, so it wasn't running anyway.

[23:26] <cspencer> is that in the current check svn revision?

[23:26] <pugs_svn> r19535 | cosimo++ | Refactored `kv' tests under S29-array & S29-hash.

[23:26] <pugs_svn> r19535 | cosimo++ | Fudge-ify :todo test markers. 

[23:26] <cspencer> er...checked in, rather

[23:26] *** cognominal_ left
[23:28] <cosimo> [particle]: isn't it  #?perl6: todo 'bla' ? without parens?

[23:28] <[particle]> cosimo: now it is. but that doesn't work yet :)

[23:28] *** iblechbot left
[23:28] <[particle]> things are changing very quickly

[23:31] <cosimo> I have changed 2-3 times the tests in t/spec ... :-)

[23:33] <TimToady> hopefully we're converging on a solution, but I haven't yet figured out how to shim fudgeall into Makefile.PL for pugs...

[23:34] <cosimo> No problem, really.

[23:34] <TimToady> well, I'd just like the fudging to be automatic where it's needed

[23:34] *** alester joined
[23:34] <TimToady> and I'm scared of hacking on Test::Harness directly :)

[23:34] <[particle]> i'll be changing t/spec shortly if you don't beat me to it

[23:34] <[particle]> s/perl6/rakudo/g

[23:35] <TimToady> I beat you to it more than a day ago...

[23:35] <cosimo> TimToady: I didn't understand the "fudge" thing until I read your emails twice :-)

[23:36] <TimToady> it's a colloqial use of the term

[23:36] <TimToady> fudging is a kind of cheathing

[23:36] <TimToady> cheating

[23:36] <cosimo> IIUC, it's a way to "hide" perl6 implementation differences from a test point of view. Isn't it?

[23:36] <TimToady> as in Fudge Factor

[23:36] <Khisanth> you mean I wasn't supposed to pour fudge on that ... hmmm

[23:37] <TimToady> it's a way to get more information out of a partial success than just by blowing up halfway through, or not parsing at all

[23:37] <[particle]> TimToady: C<#?perl6: skip_block('...');> becomes <$?rakudo: skip '...'>, correct?

[23:37] <TimToady> yes

[23:38] <cosimo> I tried to ack for skip_block recently (maybe a week ago) but nothing showed up...

[23:38] <TimToady> except #? still not $?

[23:38] <[particle]> oops, right, #?

[23:38] <TimToady> and you can say #?rakudo: 3 skip '...' to skip the next 3 tests without using a block

[23:39] <TimToady> putting the count in front makes it easier to keep it separate from the "reason" arguments

[23:39] *** REPLeffect joined
[23:39] <TimToady> (which are actually extensible, just being a string that is passed through)

[23:44] <pugs_svn> r19536 | cosimo++ | Added svn props to test scripts

[23:45] *** icwiener left
[23:45] <cosimo> Is it normal that http://perlsix.org/svn/pugs/revision?rev=19536 , which is only svn props added, shows all rows removed and re-added?

[23:45] <lambdabot> Title: revision: /pugs (Rev: 19536, via SVN::Web)

[23:56] <pugs_svn> r19537 | cosimo++ | Refactored pairs tests into S29-arrays and S29-hash

[23:57] <TimToady> I would guess it's diffing a file with CRLF with a file with just LF

[23:57] <TimToady> ETOOMANYWITHS

