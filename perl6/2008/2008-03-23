[00:05] *** REPLeffect left
[00:06] *** Psyche^ joined
[00:07] *** lee___ joined
[00:11] *** [particle1 joined
[00:16] *** meppl left
[00:17] *** lee__ left
[00:18] *** FurnaceBoy left
[00:22] *** Patterner left
[00:22] *** Psyche^ is now known as Patterner

[00:23] *** FurnaceBoy joined
[00:25] *** [particle2 joined
[00:26] *** [particle] left
[00:26] *** [particle2 is now known as [particle]

[00:26] *** b_jonas left
[00:30] *** Mmi joined
[00:30] <Mmi> Hi.

[00:30] <Mmi> When I turn on my laptop, the lights go on but it does not start up. I have to pull out the battery and cut off the power

[00:30] <Mmi> then try again once reconnecting the battery or cord and sometimes then the BIOS beeps and it actually starts up.

[00:30] <Mmi> But it is becoming more and more a rarity that it can actually go through and start.

[00:31] <Mmi> Any ideas what the problem might be?

[00:31] *** peepsalot left
[00:33] <Mmi> Are there any computer mechanics about?

[00:33] *** peepsalot joined
[00:34] <pugs_svnbot> r20150 | putter++ | [elf_a] A start at sanity/03-equal.t.

[00:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20150

[00:34] <lambdabot> Title: Changeset 20150 - Pugs - Trac

[00:35] <Mmi> I don't understand how this network can have so many people logged in with so few people ever delivering any form of intelligence.

[00:35] <Mmi> Is this a bot-net?

[00:36] <mncharity> good night all &

[00:37] *** mncharity left
[00:43] *** [particle1 left
[00:50] <spinclad> Mmi: wrong channel.  why on earth do you imagine a channel devoted to Perl 6 would be helpful?

[00:50] <Mmi> spinclad, Good computer expertise.

[00:51] <[particle]> we're mostly a bunch of linguists

[00:51] <[particle]> and software != hardware

[00:51] <spinclad> your problem is way off topic, and not of interest.

[00:51] <Mmi> spinclad, To like Perl 6 is to love computers.

[00:52] <[particle]> want to help improve perl 6?

[00:52] <spinclad> rather, to like computers is to love Perl 6

[00:53] <spinclad> anyway, my suggestion would be to cut the power and try again.  if that fails, try again.

[00:54] *** larsen left
[00:55] <spinclad> perhaps your BIOS is using an outdated version of Perl 6

[00:55] <spinclad> you may need to upgrade

[00:56] <Mmi> actually, it makes no difference if i shut it down completely or if i am just attempting to resume from hibernation.

[00:56] <spinclad> first, check out a development revision from https://svn.perl.org/parrot/trunk and http://svn.pugscode.org/pugs

[00:57] <lambdabot> Title: Revision 26516: /trunk

[00:57] <spinclad> recompile, install in your BIOS and presto, all better.

[01:00] <spinclad> free advice and well worth every penny!

[01:09] <Mmi> i am afraid if i turn it off now i will never be able to start it up again.

[01:09] <Mmi> it took me about 10 tries this time.

[01:10] <spinclad> well, if it doesn't start again your problem is solved.  no need to fear any longer.

[01:10] <Mmi> actually, there are quite a lot of references via google when i search 'laptop not starting'.

[01:10] <Mmi> it is a fairly common problem it seems.

[01:11] <spinclad> good.  anything else?  want to help with Perl 6?

[01:20] *** lee__ joined
[01:28] *** lee___ left
[01:29] *** zblaxell__ joined
[01:30] *** cognominal_ left
[01:35] <eternaleye> <Mmi> I don't understand how this network can have so many people logged in with so few people ever delivering any form of intelligence.

[01:35] <eternaleye> [10:54] <Mmi> Is this a bot-net?

[01:36] <eternaleye> Gah, wrong channel. Trying to show the funniness elsewhere

[02:00] *** xd left
[02:00] *** xd joined
[02:03] *** wknight-away joined
[02:08] *** Limbic_Region left
[02:23] <Mmi> the margin of profit on electronics these days must be very high.

[02:23] <Mmi> the efficiency of manufacture in china is most exceptional.

[02:24] <Mmi> i am tired of paying premium prices for cheap chinese manufacturing.

[02:25] *** Mmi left
[02:27] *** Jedai joined
[02:55] *** mi_bella joined
[02:55] *** mi_bella left
[02:58] *** justatheory left
[03:04] *** LazyJim joined
[03:06] *** wknight-away left
[03:23] *** [particle1 joined
[03:31] *** lee__ left
[03:33] *** lee_ joined
[03:39] *** LazyJim left
[03:40] *** [particle] left
[03:56] *** thoughtpolice joined
[03:58] *** lee_ left
[04:36] *** alester joined
[05:15] *** kanru left
[05:25] *** thoughtpolice left
[05:27] *** thoughtpolice joined
[05:40] *** Chillance left
[05:47] *** alester left
[05:56] *** FurnaceBoy left
[06:22] *** BinGOs_ joined
[06:31] *** BinGOs_ left
[06:31] *** BinGOs_ joined
[06:36] *** BinGOs_ left
[06:38] *** BinGOs left
[06:48] *** cognominal_ joined
[06:49] *** BinGOs joined
[06:50] *** luqui joined
[06:54] *** BinGOs left
[06:54] *** BinGOs joined
[06:59] *** BinGOs left
[07:10] *** BinGOs joined
[07:11] *** lee__ joined
[07:15] *** BinGOs left
[07:31] *** BinGOs joined
[08:02] *** Aankhen`` joined
[08:19] *** LazyJim joined
[08:23] *** xd left
[08:29] *** xd joined
[08:35] *** BinGOs left
[08:35] *** BinGOs joined
[08:41] *** BinGOs left
[08:41] *** BinGOs joined
[08:46] *** BinGOs left
[08:46] *** BinGOs joined
[08:57] *** BinGOs_ joined
[09:03] *** BinGOs_ left
[09:03] *** BinGOs_ joined
[09:04] *** BinGOs left
[09:09] *** BinGOs_ left
[09:09] *** BinGOs joined
[09:14] *** BinGOs left
[09:15] *** BinGOs joined
[09:17] *** BinGOs left
[09:20] *** alester joined
[09:21] *** BinGOs joined
[09:25] *** alester left
[09:25] *** Khisanth joined
[09:30] *** meteorjay joined
[09:33] *** barney joined
[09:37] *** elmex joined
[09:48] *** larsen joined
[09:58] *** wknight-away joined
[10:12] *** iblechbot joined
[10:27] *** larsen left
[10:32] *** elmex left
[11:24] *** meppl joined
[11:26] *** lee__ left
[11:32] *** lee__ joined
[11:59] *** meppl left
[12:06] <moritz_> re

[12:14] *** barney left
[12:21] <moritz_> happy easter!

[12:22] <moritz_> I just deleted some spam from the IRC logs

[12:23] *** turrepurre left
[12:29] *** BinGOs left
[12:38] *** BinGOs joined
[12:52] *** wknight-away left
[13:06] <spinclad> felices pascuas!

[13:07] <spinclad> (and moritz_++)

[13:09] <allbery_b> purim sameach! :p

[13:25] *** thoughtpolice left
[13:35] *** FurnaceBoy joined
[13:44] *** marshmallows left
[14:06] *** meppl joined
[14:09] *** meteorjay left
[14:09] *** elmex joined
[14:27] *** cmarcelo joined
[14:29] *** qmole joined
[14:41] *** [particle] joined
[14:53] *** lee__ left
[15:12] *** chris2 joined
[15:15] *** justatheory joined
[15:17] *** ludan joined
[15:26] *** ludan left
[15:44] *** IRSeekBot joined
[16:03] *** lichtkind joined
[16:04] <lichtkind> cant help but ionce i heard of things like @a[-1] in perl 6 as ordinary slice

[16:21] *** meppl left
[16:22] *** LazyJim left
[16:25] *** meppl joined
[16:55] <pugs_svnbot> r20151 | putter++ | [STD_red] try longest tokens first.  So && isnt parsed as & .

[16:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20151

[16:55] <lambdabot> Title: Changeset 20151 - Pugs - Trac

[16:58] <pugs_svnbot> r20152 | putter++ | [STD_red] Tweak If, Decl, and string emit.  Fake use().  A couple of t sanity tests pass.

[16:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20152

[16:58] <lambdabot> Title: Changeset 20152 - Pugs - Trac

[17:12] *** meppl left
[17:17] *** [particle2 joined
[17:17] *** [particle] left
[17:31] *** mncharity joined
[17:31] *** justatheory left
[17:32] *** rindolf joined
[17:48] <mncharity>  /me reminds myself: "the objective of elf_a/b is not to pass t/, but to be useful&interesting enough that others work on it".  It's a social project, not yet one more p6 implementation bootstrap.

[17:49] <mncharity> s/bootstrap/spin-up/

[17:49] <mncharity> leaving STD...

[17:50] <mncharity> TimToady: re "but since I'm really the only one running it, that's okay :)",

[17:50] <mncharity> (apropos STD.pm)

[17:54] <mncharity> I am running it both directly and indirectly.  Whenever I hit parse fail in elf, which means in STD_red, which happens a lot, if it is in the regions where I think of STD5 as having a chance to work, basically EXPR, checking STD5 is a first step.  Right next to reading STD.pm to see what _should_ be happening.  Before even looking at STD_red to

[17:56] <mncharity> see what might be happening.  And indirectly.  Because STD_red is simply a hand copy of STD.pm into a more directly executable form.  Skipping mainly just @fate, due to its complexity and "known to not yet be working"-ness.

[17:56] <mncharity> So STD.pm is in rather heavy use.

[17:57] <mncharity> I haven't been touching it directly, because it seems to be tightly entwined with your thought and development processes.

[17:59] <mncharity> And because my own inclination would be to alter it rather radically.  So everything I would change about it, ripping out non-code clutter, isolating code from regexs, moving from "this is a p6 grammar" to "this is a declarative specification of a p6 grammar", and thus to metaprogramming the whole thing, all this is inconsistent with STD.pm's current usage,

[17:59] <mncharity> which is to help you put together a working grammar.

[18:00] <mncharity> (people with line-to-long lossage can see the log)

[18:02] <mncharity> But it's my belief STD.pm is _the_ bottleneck on Perl 6 development.  It was a year ago when yet_another_regex_engine was looking for a grammar to run.  Still is.

[18:03] <mncharity> So *anything* I can do to help get us a working grammar, please just ask.  And not be at all reticent(sp?) about it. :)

[18:06] <mncharity> From grammar follows parser, follows ast and IR, follows emitting to p5 etal.  We've walked the path downstream of the parser many times.  I went to misc/old_pugs_perl5_backend/PIL-Run/lib/PIL/Run/PrimP5.pm looking for use() code for elf.  

[18:07] <mncharity> We *just* *need* *a* *fribbling* *parser*.  :)

[18:08] <mncharity> So anyone who cares about making Perl 6 exist, should be sending TimToady a fruitcake with a little note saying "Anything I can do to help with STD, please just let me know."

[18:08] <mncharity> Every Tuesday.

[18:10] <mncharity> because STD looks like our currently best shot at getting one.

[18:12] <mncharity> doesn't even have to be DFA.  maybe backtracking would be easier to get working to start with.  just, anything.

[18:16] *** b_jonas joined
[18:18] *** marmic joined
[18:24] *** Gothmog_ joined
[18:29] *** Psyche^ joined
[18:31] <mncharity> perhaps the two characteristics a parser project needs to have is to be usable now, and to be clearly converging towards "realness / spec-ness / this is really on the mainline development path leading to P6 and not just another dead end".

[18:33] <mncharity> STD_red is maybe almost "usable", and inherits the second bit from STD.pm.  But other things might have this shape.

[18:33] <mncharity> Like a STD5 become usable, of course.  But perhaps others as well.

[18:36] *** nebnav joined
[18:39] *** meppl joined
[18:44] *** Patterner left
[18:44] *** Psyche^ is now known as Patterner

[18:54] *** [particle2 left
[19:05] *** chris2 left
[19:14] <pugs_svnbot> r20153 | putter++ | [elf_a] Added multiple file compilation, and an empty prelude.

[19:14] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20153

[19:14] <lambdabot> Title: Changeset 20153 - Pugs - Trac

[19:15] *** Aankhen`` left
[19:32] <pugs_svnbot> r20154 | putter++ | [elf_b] says "hi".

[19:32] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20154

[19:32] <lambdabot> Title: Changeset 20154 - Pugs - Trac

[19:42] *** mibu joined
[19:45] *** mibu left
[20:13] *** r0bby joined
[20:20] *** rindolf left
[20:29] *** justatheory joined
[20:30] *** pmurias joined
[20:31] *** justatheory left
[20:37] *** explorer joined
[20:38] <pmurias> mncharity: is a fruitcake diet healthy?

[20:41] *** Limbic_Region joined
[20:52] *** elmex left
[20:55] <mncharity> lol :)

[20:55] <mncharity> probably not.

[20:55] <mncharity> "healthy delectable food of your choice"?

[20:57] <mncharity> does Moose have a root Object class?   trying to figure out where to drop the prelude.

[20:58] <[particle1> it's Moose::Object

[20:58] *** [particle1 is now known as [particle]

[20:58] <mncharity> thanks :)

[20:58] <[particle]> http://search.cpan.org/~stevan/Moose-0.40/lib/Moose/Object.pm

[20:58] <lambdabot> Title: Moose::Object - The base object for Moose - search.cpan.org

[20:59] <mncharity> so the next question is,

[21:00] <mncharity> I fuzzily remember there was some magic p5 GLOBAL place where one could define visible-everywhere sub()s.  ??

[21:00] *** justatheory joined
[21:01] <allbery_b> that had to do with perl5 ithreads

[21:01] <allbery_b> IIRC

[21:01] <allbery_b> unless you're thinking of package UNIVERSAL which acts like a universal base class

[21:01] <[particle]> UNIVERSAL::

[21:02] <mncharity> re base class, no, sub rather than method lookup.  re UNIVERSAL, looking...

[21:03] <pmurias> mncharity: a use Prelude; is a more human hack

[21:04] <pmurias> humane

[21:04] <mncharity> no, not UNIVERSAL I don't think.  it was something like a glob where you could stuff, say, a  sub substr2 {...}, and have substr2() visible everywhere (just like substr()).

[21:05] <[particle]> main:: ?

[21:05] <mncharity> re 'use Prelude;', yeah.  :/  So far the output of compilation has the property that it's entirely self contained... oh, it still could.  hmm...

[21:06] <mncharity> re main::, looking...

[21:07] <mncharity> doesn't seem to be main:  perl -we 'sub main::f{3};package Foo; print f();'  Undefined subroutine &Foo::f

[21:07] <allbery_b> no, I didn't think so.  I don't think there is such a thing.  but, hm, lemme try something

[21:07] <[particle]> tr/{}/()/

[21:08] <lumi> perl -we 'sub ::f{3}; package Foo; print f();'

[21:08] <lumi> Eck

[21:08] <lumi> Not that either, anyway

[21:09] <pmurias> mncharity: the output isn't, say is missing

[21:09] <allbery_b> feh.  nope, CORE doesn't work that way either

[21:09] <b_jonas> there was a node about that

[21:09] <mncharity> re Prelude, could inline a package Prelude, then poke INC or whatever so it thinks its already loaded.  then can "use Prelude" everywhere, but compiled code remains without external dependencies.

[21:09] <b_jonas> I'll search it, a moment

[21:09] <b_jonas> but I think the result was that there's no way to do it

[21:10] <[particle]> >perl -we "Foo::bar(123); package Foo; sub bar { &::baz } package main; sub baz { print @_ } "

[21:10] <[particle]> 123

[21:10] <[particle]> or "sub bar ::baz(@_)" if you prefer

[21:10] <pmurias> mncharity: is self containes a big feature?

[21:11] <[particle]> "sub bar { ::baz(@_) }" that is

[21:11] *** nebnav left
[21:11] <mncharity> pmurias: re "the output isn't, say is missing", ?

[21:12] <mncharity> re ::baz, oh, neat, trying...

[21:12] <b_jonas> mncharity: http://www.perlmonks.com/?node_id=388819

[21:12] <lambdabot> Title: Creating a global function

[21:14] <mncharity> re big feature?, bootstrap is hard, and gets even harder if I had you X, and X may or may not stop working at any time depending on how remote files continue to evolve.  with self contained, I give you a version of elf_b, which will need to eventually start capturing its own copy of STD_red (for the same reason), and you know it will keep working, regardless of what happens elsewhere.

[21:15] <mncharity> you no longer need to worry about how it was created, or whether it happens to have a #!perl at top or not.

[21:15] <mncharity> re global, looking...

[21:15] <pmurias> prelude.pl is missing from the repo

[21:17] <mncharity> oops, sorry, fixing

[21:18] <pmurias> i think you should be using $Code_say instead of &say anyway

[21:18] <pugs_svnbot> r20155 | putter++ | [elf_a] add missing prelude.pl.

[21:18] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20155

[21:19] <lambdabot> Title: Changeset 20155 - Pugs - Trac

[21:19] <pmurias> if you want lexical subroutines that is

[21:19] <mncharity> hmm, that has a bogus package Moose;  in it.

[21:21] <mncharity> ok, so  UNIVERSAL::AUTOLOAD (works in 5.10?); main ::baz; and "you're asking the wrong question - it should be lexical".

[21:22] <mncharity> with 3, the prelude could be  our $c_say = sub{...}; and appear only once.

[21:25] <pmurias> yes

[21:28] <mncharity> ok, cleaning up to do a checkin with completely kludged say(), then... lexicals.

[21:31] <pugs_svnbot> r20156 | putter++ | [elf] Start of support for subs, classes, and method calls.

[21:31] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20156

[21:31] <lambdabot> Title: Changeset 20156 - Pugs - Trac

[21:32] <mncharity> oops, elf_b_src/main.pl should be a method, not a sub.  hmm...

[21:32] *** Limbic_Region left
[21:43] <pugs_svnbot> r20157 | putter++ | [elf_a] Start of support for method decls.

[21:43] <pugs_svnbot> r20157 | putter++ | [elf_b] main.pl now uses a method main().

[21:43] <pugs_svnbot> r20157 | putter++ | [STD_red] Provide a Match for method_def.

[21:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20157

[21:43] <lambdabot> Title: Changeset 20157 - Pugs - Trac

[21:43] <mncharity> btw, thanks everyone.

[21:43] <mncharity> especially for the "you are barking up the wrong tree". :)

[21:49] <mncharity> hmm, /me wonders if trying to get function namespaces to work right is out of scope for the elf_a backend.  the question is "is this a minimally required thing to make p6 writing of elf_b comfortable".

[21:50] <mncharity> answer no.  then the only question is given that absent GLOBAL::CORE or somesuch, if one has to hack anyway, which direction to hack in.

[21:52] <b_jonas> still those elves

[21:53] <mncharity> given that methods work, perhaps could live with a "flat single global namespace" for functions.  eeww.  would mean no helper sub... no, my $s = sub{}; should work.  $s.() ... dunno.

[21:53] <mncharity> ? :)

[21:54] <pmurias> what's wrong with subs as $Code_foo ?

[21:57] <mncharity> {pkg A; my $c_f=...; }  {pkg A; ... no f...},

[21:59] <mncharity> in ruby lexicals and method calls look the same, so you can fudge one to the other.  but p5, it may be that it requires real emitter groveling over the ir.

[22:00] <mncharity> "if it requires real work, it hopefully doesn't belong in elf_a".  because you want to be writing it in p6.

[22:10] *** riffraff joined
[22:13] <pugs_svnbot> r20158 | putter++ | [elf_a] All sub()s appear in package main, regardless of where they are defined.  But method()s do the right thing.  And my $x = sub(){}; $x.(); now works.

[22:13] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20158

[22:13] <lambdabot> Title: Changeset 20158 - Pugs - Trac

[22:19] <mncharity>  ++... allbery_b and lumi and b_jonas to search out the path originally envisioned, and the pain therein.  [particle] to suggest a different path.  pmurias to ask the right questions and provide the focus needed to choose that path.  /me to write just <10 lines of code.

[22:20] <mncharity> yay :P

[22:20] *** nebnav joined
[22:21] <mncharity> hmm, what next...

[22:24] *** nebnav left
[22:26] <mncharity> no way to use arrays and hashes at the moment.  maybe that, then teaching elf_b_create.pl to write the p6 for the IR nodes.  then get elf_b using STD_red.

[22:27] <mncharity> i wonder if there's an autobox module which provides ->push() etc...

[22:28] <wolverian> autobox::Core

[22:28] <wolverian> and Moose::Autobox...

[22:29] <mncharity> oh, wizzy.  maybe this won't be too painful...

[22:37] *** pmurias left
[22:40] *** b_jonas left
[22:46] *** iblechbot left
[22:55] <pugs_svnbot> r20159 | putter++ | [elf_a] Start of support for arrays.  "my $x = [2,3,4]; say $x.[1]; $x.push(6);" works.

[22:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20159

[22:55] <lambdabot> Title: Changeset 20159 - Pugs - Trac

[23:07] <pugs_svnbot> r20160 | putter++ | [elf_a] Start of hash support. "my $h = {3,4,5,6}; say $h.{5}" works.

[23:07] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20160

[23:07] <lambdabot> Title: Changeset 20160 - Pugs - Trac

[23:08] <wolverian> whoot, nice work

[23:13] *** FurnaceBoy left
[23:31] <mncharity> looks like infix:= wasn't working because YAML::Syck::Load was taking  str: =   and building 'str'=>'str'.  odd, really odd.

[23:31] <pugs_svnbot> r20161 | putter++ | [elf_a] infix:= no longer mutates into infix:str (seems to be a YAML::Syck::Load bug).  Fixed Match.to (no longer reports .from).  Fixed comment handling for .config files.

[23:31] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20161

[23:31] <lambdabot> Title: Changeset 20161 - Pugs - Trac

[23:33] <mncharity> err, taking  str: "=" .  and str: '='  behaved the same.

[23:34] <mncharity> infix:str now emits as lhs = rhs.  sigh.  but works :)

[23:35] <mncharity> hmm

[23:37] <mncharity> doh

[23:37] <pugs_svnbot> r20162 | putter++ | [elf_a] Moved infix:= workaround from emit_p5 to ast_handlers.

[23:37] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/20162

[23:37] <lambdabot> Title: Changeset 20162 - Pugs - Trac

[23:43] <mncharity> perl -MYAML::Syck -MData::Dumper -we 'print Data::Dumper::Dumper(YAML::Syck::Load("---\nstr: \"=\"\n"));' $VAR1 = {'str' => 'str' };   v5.10.0  YAML::Syck 1.04

[23:43] <mncharity> what was that Bill the Cat expression?

[23:45] <mncharity> wp says "Thbbbt!".  I thought there was one starting with a P.  The coughing up hairball noise. :)

[23:46] <mncharity> curiously, '=' and bare = (vs "=") seem to work

[23:48] *** BinGOs_ joined
[23:48] *** FurnaceBoy joined
[23:50] <mncharity> dinner &

[23:50] *** BinGOs left
[23:52] *** lichtkind left
[23:53] *** BinGOs joined
[23:55] <mncharity> runtime on "say 3" is up 1 sec over earlier to 1.4 sec. :/  wonder why.

