[00:03] *** pbuetow left
[00:03] *** pbuetow joined
[00:14] *** iblechbot left
[00:14] *** csharp joined
[00:24] *** Maddingue joined
[00:26] *** jferrero joined
[00:28] *** cathya left
[00:29] *** cathya joined
[00:33] <mncharity> [particle]: a yaml dump of   languages/perl6/perl6 --target=past  would be great.  Curious that --target=past ignores -e.

[00:33] *** alester joined
[00:34] <pmichaud> (--target=past ignores -e)   I noticed that also yesterday.  Probably deserves a ticket to [email@hidden.address]
[00:38] <Juerd> pmichaud: Hi. I see you're a speaker at fosdem tomor... eh, in little over 12 hours :)

[00:38] <Juerd> pmichaud: Do you know if there's any Perl community gettogether?

[00:46] <Juerd> http://use.perl.org/comments.pl?sid=38508&cid=60912  # acme suggested meeting too, but without location and time

[00:46] <lambdabot> Title: FOSDEM

[00:47] *** cmarcelo joined
[00:50] <pmichaud> I'm not aware of a perl community get together... I probably should've tried to organize one.  :-|

[00:51] <pmichaud> I'm pretty busy saturday (tomorrow), but so far sunday seems open

[00:51] <mncharity> re 'Probably deserves a ticket to [email@hidden.address] sent.

[00:51] <pmichaud> mncharity++  # thanks

[00:52] <pmichaud> Juerd: I've asked others, but can ask you also -- any particular points to be sure to hit/avoid about Perl 6 in tomorrow's talk?

[00:54] <Juerd> pmichaud: That people shouldn't compare software based on version numbers.

[00:54] <Juerd> (hit)

[00:55] <Juerd> Especially since Perl 6 and PHP 6 are scheduled so competatively

[00:55] <Juerd> PHP 6 will probably be released long before Perl 6, but Perl 6 is an almost new language.

[00:56] <pmichaud> really?  When is PHP 6 coming out?

[00:58] <Juerd> Probably before it's finished ;)

[00:58] <Juerd> But probably also before christmas

[01:00] <Juerd> Didn't you know that the PHP 6 talk was scheduled directly after yours?

[01:00] <Juerd> In the same room even

[01:01] <pmichaud> yes, I did know that

[01:01] *** lampus joined
[01:01] <pmichaud> but I hadn't linked "Perl 6" and "PHP 6" in my mind.  You're correct that many audience members might.

[01:02] <pmichaud> (I had already planned to attend the PHP 6 talk, since I have a few PHP projects)

[01:02] <Juerd> Ah. It is my experience that many people think version numbers of certain kinds of software are almost the same because it's some kind of competative race.

[01:02] *** fridim_ joined
[01:03] <Juerd> Internet Explorer and Netscape, versions 3..5 had the same problem. 6 less so.

[01:03] <Juerd> Some say that PHP released 5, which isn't really that big a difference since 4, to get in line with Perl. It's probably false, but still there's people who think this.

[01:04] <pmichaud> well, I know that I did see similar things with Linux releases for a while (e.g., between RedHat and SUSE)

[01:04] <Juerd> The PHP 6 talk is "Unicoding with PHP 6" by the way.

[01:04] <Juerd> But on the printed schedule it's just titled "PHP 6"

[01:05] <pmichaud> so yes, I know what you're talking about.  I'll see if I can gently make the disconnection in my talk.  But my talk already focuses on Perl 6 being an altogether new language in many ways

[01:05] <Juerd> Ah, that's great in any case :)

[01:05] <Juerd> 'cause That appeals to both Perl lovers and Perl haters :)

[01:05] *** monomorph left
[01:06] <Juerd> Many Perl users like learning a new powerful language, especially if it is "Perlish"

[01:06] <pmichaud> a little over half of the talk is "what is Perl 6, why it is great", the remaining is "how are we implementing it (in Parrot)"

[01:06] <Juerd> And Perl-haters will see that many of their complaints, except noise about line noise, is gone :)

[01:07] <pmichaud> yes, I already cover the sigil changes

[01:07] <Juerd> I think that that is a good format for this audience

[01:07] <pmichaud> I gave a similar talk to this one a few months ago, and it ran 90 minutes.  So I have to figure out how to get down to under 45.  :-)

[01:07] <pmichaud> but I'll do it.  :-)

[01:07] <Juerd> Are you going to mention just Rakudo, or the multiple implementations?

[01:07] <pmichaud> definitely mention the multiple implementations

[01:07] <Juerd> Or is this too sensitive a subject to mention on IRC :D

[01:08] <pmichaud> I always mention that there are multiple Perl 6 efforts

[01:08] * Juerd got a few off-list responses to his "focus on a single one for now" suggestion

[01:08] <pmichaud> the rakudo implementation will be interesting because it's using the parrot compiler toolkit (which is a significant talk in its own right) and because it really is written using Perl 6

[01:09] <Juerd> I forgot to mention that that statement was based on dollar based development.

[01:09] <pmichaud> yes, but in many days dollars and effort are interchangable

[01:09] <pmichaud> personally, I'm very glad we have multiple efforts taking place.  I also don't see it as zero-sum

[01:10] <Juerd> I am also glad we have multiple simultaneous approaches

[01:10] <Juerd> However, for funding "Perl 6" I'd say it's best to pick one at a time.

[01:10] <pmichaud> my experience is that the multiple efforts are making it easier for all to progress.  I think that's actually necessary in a project as ambitious as Perl 6

[01:10] <Juerd> It appears not many people share that view.

[01:11] <pmichaud> well, much of the funding that has been available thus far has been targeted

[01:11] <pmichaud> (to parrot).  That's not a function of TPF or the grants committee, but rather the organizations contributing the funding

[01:11] <SamB> well it's definately better then having all the effort spent in barking up the wrong tree, and possibly better than leaving some people who'd otherwise contribute out since they can't find anything to work on...

[01:11] <Juerd> The more transparent the ambition (as in "we've never done it before, and don't really know if it'll work the way we want it to") is to investors, the fewer bucks they'll spend, I think. It's a gut feeling.

[01:11] <pmichaud> if other organizations want to contribute to other efforts, that's perfectly okay also.

[01:12] * SamB doesn't think he'd ever consider giving money to something with that many opcodes...

[01:12] <pmichaud> and by "other organizations"  I mean other organizations that want to contribute to other implementations via TPF

[01:12] <Juerd> pmichaud: That effectively forces sponsors to dive into Perl 6 culture, which raises the bar a lot.

[01:12] *** lampus left
[01:13] <pmichaud> Juerd: right.  The organizations that have made substantial donations, such as NLNET and Mozilla, dove into the culture enough to see that the Parrot effort was where they wanted to focus their efforts

[01:14] <pmichaud> I don't know what is happening to the "non-targeted" funds that TPF grants may have available.

[01:14] *** monomorph joined
[01:14] <Juerd> pmichaud: Those organizations have their roots in open development

[01:14] <Juerd> It's easier for them.

[01:14] <pmichaud> correct

[01:15] <pmichaud> if people look at those grants and say "TPF is only supporting Parrot", that's a mistake.

[01:15] <pmichaud> TPF is making it possible for those other organizations to support Parrot.

[01:15] <pmichaud> or at least making it easier.

[01:16] <Juerd> I know

[01:16] <Juerd> And I'm not objecting

[01:17] <Juerd> I'm looking at it in the context of Conrad's thread starting mail

[01:17] <Juerd> Which was about raising funds for Perl 6, not about TPF or past grants.

[01:18] <Juerd> And I do think that it's easier to ask corporations for their money to fund a product, rather than something resembling a research project.

[01:18] <pmichaud> yes, it is.

[01:18] <Juerd> Apart from that, I agree wholeheartedly that having multiple implementations is good, and that TPF should be able to fund any and all of them.

[01:18] <pmichaud> right -- that's really up to the grants committee.

[01:19] <Juerd> I had no idea that there was still 35k left

[01:19] <avar> [particle]: re svn, no, a .git:) I keep it at git.nix.is

[01:19] <avar> [particle]: git-clone git://git.nix.is/avar/pm/re-engine-TRE

[01:20] <Juerd> And to be honest I'm a bit surprised, since I've seen people complain "We're unpaid volunteers, so duh, it'll take a while" while the "unpaid" part turns out to be by choice...

[01:21] <Juerd> I'm not suggesting that everybody should start taking money, but I am under the impression that several people who would like to spend more time on hacking on Perl 6, had no idea that their work had a chance of getting funded.

[01:21] <pmichaud> well, the NLNet funds aren't totally unencumbered -- they're restricted to specific milestones

[01:21] <Juerd> (Which would not make being unpaid a choice - it would make it a result of ignorance)

[01:21] <pmichaud> so we can't just say "here's $x to go work on whatever you think needs working on"

[01:21] <Juerd> Ah.

[01:21] <Juerd> Unrenegotiable?

[01:22] <pmichaud> it was renegotiated once... but there are some broad limits to what the funds are intended to cover, yes

[01:22] <Juerd> No, not "whatever you think", but wouldn't it be useful if people could at least suggest alternative milestones?

[01:22] <Juerd> Of course, bureaucracy might kill the process. I have no idea how to fix that.

[01:23] <Juerd> Anyway, I should go home and get some sleep before I drive to Brussels tomorr... today. 

[01:23] <pmichaud> I should finish my presentation slides.  :-)

[01:24] *** silug joined
[01:25] <Juerd> Good luck :)

[01:25] <pmichaud> thanks.  :-)

[01:25] <pmichaud> at least I have a head start on this one.  Many times I only have 3-4 hours to finish.

[01:26] <pmichaud> right now I have about 7 or 8.

[01:26] <pmichaud> (and a head start on the slides from my previous presentation, also :-)

[01:28] *** monomorph left
[01:34] <meppl> good night

[01:35] *** jferrero left
[01:37] *** meppl left
[01:41] *** Limbic_Region left
[01:50] <mncharity> [particle]: spinclad: ok, yes, ../../parrot perl6.pbc --target=past should definitely be included as a parser source.  especially once it gets a yaml output form - I'm unclear on whether there is p5 or other code to pick up the existing output.

[01:53] <TimToady> mncharity: how'd the meet with obra go?

[01:55] *** charsbar_ left
[01:58] *** Schwern joined
[02:00] *** charsbar joined
[02:05] *** devogon left
[02:06] *** demerphq joined
[02:06] <pugs_svnbot> r19982 | lwall++ | remove :: from filenames for windersboxen

[02:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19982

[02:06] <lambdabot> Title: Changeset 19982 - Pugs - Trac

[02:07] *** Limbic_Region joined
[02:14] *** tobeya left
[02:20] *** demq left
[02:22] *** [particle1 joined
[02:23] <csharp> download links don't work ~ http://www.pugscode.org/

[02:23] <lambdabot> Title: Pugs - pugscode

[02:25] <csharp> is it just me?

[02:27] *** Limbic_Region left
[02:28] <pugs_svnbot> r19983 | lwall++ | [gimme5] default to not failing over if lexer fails (for now)

[02:28] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19983

[02:28] <lambdabot> Title: Changeset 19983 - Pugs - Trac

[02:32] <TimToady> doesn't work, just pull it from svn to get the bleeding edge (which requires GHC 6.8.1 I think at the moment)

[02:32] <csharp> yeah, i just found the page for svn co (http://www.perlfoundation.org/perl6/index.cgi?download_pugs)

[02:32] <lambdabot> Title: Download Pugs / Perl 6

[02:35] *** [particle] left
[02:36] <mncharity> TimToady: re meet, useful.  () he thought getting us towards a documented stable ast which people could target was the main potential contribution.  () i found it interesting how several things i've come to think of as obvious, even in extended conversation with someone familiar with the area, proved not so.  () got me over threshold to revisit parrot.

[02:38] <mncharity> () it was interesting the difficulty of characterizing what i've come to view as the critical importance of a fast edit-test cycle.  given a _work_ p6 snatched from the future, however slow, we would be all set.  but given existing buggy and incomplete implementations, slow is deadly.

[02:39] <mncharity> * _working_

[02:40] <mncharity> there were some others... hmm...

[02:42] <mncharity> () oh, very interesting hearing of views from the broader p6, and p5 viewing p6, communities.  which i almost never see.

[02:43] *** justatheory left
[02:48] <mncharity> () he found... non-obvious?... my perspective that the p6 critical path has been on hold for several years (modulo various projects contributing to language spec evolution), since pugs's first summer, blocked by not having a parser willing to provide a parse tree which includes oo info.  thus killing backend and prelude development, and thus any large-scale use of p6.

[02:51] *** thoughtpolice left
[02:53] <mncharity> highlights.

[02:58] <mncharity> looking at parrot's language/perl6, some of the choices are interesting.  eg, there's support for junctions and (reportedly - blog) for roles, but not for Array's.

[03:00] <mncharity> s/choices/emphasis/.  "bottom up"-ish.

[03:00] <mncharity> perhaps.

[03:01] *** fridim_ left
[03:05] <TimToady> back from dinner

[03:05] <TimToady> thanks

[03:16] <pugs_svnbot> r19984 | lwall++ | change bad download link in at least one spot...

[03:16] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19984

[03:16] <lambdabot> Title: Changeset 19984 - Pugs - Trac

[03:21] *** rhr_ is now known as rhr

[03:22] <pugs_svnbot> r19985 | putter++ | [kp6] added -C ast-yaml option.

[03:22] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19985

[03:22] <lambdabot> Title: Changeset 19985 - Pugs - Trac

[03:32] *** bradb joined
[03:33] *** Lorn left
[03:38] *** Lorn joined
[03:44] *** bradb left
[04:17] *** RayMagini left
[04:20] *** RayMagini joined
[04:24] *** laye left
[04:33] *** drbean left
[04:36] *** kst left
[04:38] *** pcbuetow joined
[04:40] *** Schwern left
[04:49] *** pbuetow left
[04:49] <pugs_svnbot> r19986 | putter++ | [kp6] Changed -C ast-yaml from YAML::Syck to YAML::XS.

[04:49] <pugs_svnbot> r19987 | lwall++ | [gimme5] much cleanup of trace output

[04:49] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19987

[04:49] <lambdabot> Title: Changeset 19987 - Pugs - Trac

[04:57] <TimToady> mncharity: what is the difference between YAML::Syck and YAML::XS?

[05:01] <mncharity> [particle]: apropos kwalify, regrettably it doesn't deal with tags (nor permit enum's of maps_.  so, it doesn't seem to help us.  so... I'm thinking of metaprogramming something which loads the yaml and grovels over the resulting objects. :/  seems less painful than going the xml route.

[05:13] <mncharity> TimToady: re Syck vs XS... just a past end-of-day mistake.  jumping at unicode bug shaddows.  reverting.

[05:14] *** laye joined
[05:15] *** justatheory joined
[05:22] <pugs_svnbot> r19988 | putter++ | [kp6] revert r19986.  Syck seems vaguely preferable to libyaml/XS on both perl and ruby.  But it's late, so this may get revisited, again.

[05:22] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19988

[05:22] <lambdabot> Title: Changeset 19988 - Pugs - Trac

[05:23] <mncharity>  /me nodding off.  good night all &

[05:23] *** mncharity left
[05:28] <TimToady> @tell mncharity yes, it would be very nice if any fast form of yaml had its unicode act together...

[05:28] <lambdabot> Consider it noted.

[05:29] *** justatheory left
[05:32] *** pcbuetow left
[05:32] *** pbuetow joined
[05:32] *** pbuetow left
[05:33] *** justatheory joined
[05:34] *** justatheory left
[05:34] *** pbuetow joined
[05:38] *** r0bby left
[05:42] *** pbuetow left
[05:45] *** pbuetow joined
[05:48] *** r0bby joined
[06:13] *** devogon joined
[06:27] *** cathya left
[06:32] *** DarkWolf84 left
[06:32] *** Lorn left
[06:33] *** Lorn__ left
[06:35] *** pbuetow left
[06:36] *** pbuetow joined
[06:38] *** SCalimlim joined
[06:44] *** cathya joined
[06:48] *** araujo left
[06:50] *** Jamtech joined
[06:53] *** laye left
[06:54] *** Jamtech left
[06:56] *** Jamtech joined
[07:00] *** Auzon joined
[07:02] *** Jamtech left
[07:14] <pugs_svnbot> r19989 | lwall++ | [gimme5] getting --> coercions to add in prec and assoc to %thisop

[07:14] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19989

[07:14] <lambdabot> Title: Changeset 19989 - Pugs - Trac

[07:28] *** BinGOs joined
[07:45] *** Aankhen`` joined
[07:51] *** Alias_ joined
[07:52] *** rintaro_ is now known as rintaro

[08:27] *** IllvilJa left
[08:29] *** Auzon left
[08:39] *** pack|eet joined
[08:44] *** cmarcelo left
[08:49] *** Zygo left
[08:49] *** Zygo joined
[09:20] *** monomorph joined
[09:33] *** cathya left
[09:35] *** BinGOs left
[09:37] *** peepsalot left
[09:37] *** peepsalot joined
[09:40] <Tene> http://pleasedieinafire.net/~tene/grammar.png -- 20%

[09:42] <pmichaud> Tene: that's for rakudo?

[09:42] <Tene> Yeah.

[09:43] <Tene> 20% of rakudo's grammar.pm

[09:43] <pmichaud> ah

[09:43] <pmichaud> <afterws> isn't called?  or just isn't linked yet?

[09:43] <Tene> nothing up to that point calls it.

[09:43] <pmichaud> actually, an interesting grammar to graph might be NQP's grammar :-)

[09:44] <pmichaud> it's a bit smaller

[09:44] <pmichaud> still, this is quite cool

[09:45] *** BinGOs joined
[09:46] *** BinGOs_ joined
[09:46] <pugs_svnbot> r19990 | lwall++ | [gimme5] EXPR more stable, much debugging of endsym logic

[09:46] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19990

[09:46] <lambdabot> Title: Changeset 19990 - Pugs - Trac

[09:46] *** BinGOs left
[09:46] *** BinGOs_ is now known as BinGOs

[09:47] <TimToady> what's a routine_declatorot?  :)

[09:47] <Tene> A typo, of course.

[09:47] <pmichaud> it's the official name for bit decay

[09:47] <pmichaud> bit decay that occurs regularly, that is

[09:49] <Tene> 33% done

[09:50] *** smtms joined
[10:06] <Tene> There, done.

[10:06] <Tene> the source is http://pleasedieinafire.net/~tene/grammar.src

[10:06] <Tene> compile with: dot grammar.src -Tpng -o grammar.png

[10:08] *** pack|eet left
[10:09] <pmichaud> unfortunately, <TOP> isn't at the top.

[10:10] <Tene> Heh.

[10:10] <Tene> Hmm, wonder if i can fix that.

[10:10] <pmichaud> internally, optable calls <term>

[10:13] <Tene> re-rendered with optable -> term

[10:13] <Tene> And that put TOP at the top.

[10:15] <pmichaud> 'quote_expression' calls 'quote_concat'

[10:15] <pmichaud> 'quote_concat' calls 'quote_term'

[10:16] <pmichaud> 'quote_term' calls 'variable'

[10:16] <pmichaud> and 'quote_literal'

[10:17] <pmichaud> (those are all in src/parser/quote_expression.pir, written as PIR instead of regexes

[10:17] <Tene> updated

[10:17] <Tene> Now TOP is in the middle of the top.  Entertaining.

[10:22] *** c9s left
[10:22] *** c9s_ joined
[10:23] *** ludan joined
[10:24] *** meppl joined
[10:31] *** c9s_ is now known as c9s

[10:32] *** drrho joined
[10:50] *** chris2 joined
[11:05] <pugs_svnbot> r19991 | lwall++ | [gimme5] getting endsym info up to where autolexer can see it

[11:05] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19991

[11:05] <lambdabot> Title: Changeset 19991 - Pugs - Trac

[11:35] *** cognominal__ joined
[11:36] *** cognominal_ left
[11:52] <rakudo_svn> r26016 | paultcochrane++ | [rakudo] Updating svn properties appropriately so the file_metadata test runs

[11:52] <rakudo_svn> r26016 | paultcochrane++ | correctly for svk working copies.

[11:55] *** devogon left
[12:24] *** drbean joined
[12:31] *** kanru left
[13:23] *** njbartlett left
[13:29] *** leif__ joined
[13:30] *** kanru joined
[13:32] *** mncharity joined
[13:33] *** Jedai left
[13:40] *** Jedai joined
[13:52] *** naxxtor_ joined
[13:52] *** agemo joined
[13:53] *** aneas joined
[14:06] <Juerd> pmichaud: Great talk :)

[14:29] *** leif__ left
[14:29] *** smtms left
[14:59] *** alester left
[15:01] *** penk joined
[15:08] *** Zygo left
[15:08] *** zblaxell joined
[15:10] *** penk left
[15:10] *** penk joined
[15:21] *** RayMagini left
[15:34] *** alester joined
[15:34] *** cognominal__ left
[15:47] *** penk left
[15:54] *** iblechbot joined
[15:58] *** RayMagini joined
[16:31] *** DarkWolf84 joined
[16:34] <mncharity> does Moose provide multi-methods?  I've been groveling over the docs and do see them.  Is there anything now available aside from Damian's very old Class-Multimethods, and Lukes "one global namespace" Class-Multimethods-Pure?

[16:34] <mncharity> *don't

[16:52] * SamB considers making a stupid joke about MOOSE being a convenient way to edit MOO objects

[16:58] <mncharity> Moo Software Engineering?

[16:59] *** kane_ left
[17:09] *** sri_work joined
[17:09] <TimToady> I don't believe anyone has actually implemented the currently specced multi dispatch

[17:09] <TimToady> because MO is necessary but not sufficient

[17:11] <TimToady> multiple dispatch tends to live outside the purview of any one type

[17:12] <TimToady> though of course the Code types have to deal with it on various levels

[17:12] *** alester left
[17:13] <TimToady> it's another one of those areas that everyone else has been avoiding thinking about, like longest-token matchers :)

[17:14] <TimToady> so I wouldn't be surprised if that was something I had to prototype after STD is "done"

[17:15] <TimToady> but by all means, feel free to work on it! :D

[17:20] *** rintaro left
[17:21] <mncharity> :P   /me dodges the concept by clarifying that it was just a normal "I want to do X in p5.  The RightThing approach is multiple dispatch.  Before I decide on which not-RightThing to use instead... time has passed... I don't suppose there's a chance that...".

[17:21] <mncharity> though ended up with a not-RightThing of single dispatch on typename suffix, which has the nice property that

[17:23] <mncharity> it permits ducktyped dispatch on ast nodes from different sources... ah bleep... it's all kludge.

[17:24] *** Juerd left
[17:24] *** Juerd joined
[17:25] *** PerlJam left
[17:25] *** Limbic_Region joined
[17:25] *** PerlPilot joined
[17:28] *** drrho left
[17:38] *** Psyche^ joined
[17:55] *** Patterner left
[17:55] *** Psyche^ is now known as Patterner

[18:13] *** chris2 left
[18:13] <mncharity> [particle]: re rakudo ast yaml, any idea when it might be available?

[18:18] *** Aankhen`` left
[19:01] *** Helios left
[19:01] *** Helios_ joined
[19:06] *** rindolf joined
[19:14] *** Jimi joined
[19:14] *** araujo joined
[19:17] *** marmic left
[19:20] *** marmic joined
[19:28] *** aneas left
[19:59] *** rindolf left
[20:03] *** rindolf joined
[20:04] *** njbartlett joined
[20:05] *** pack|eet joined
[20:06] *** Jimi left
[20:09] *** zblaxell is now known as Zygo

[20:17] *** rindolf left
[20:19] *** yodzeb joined
[20:22] *** rindolf joined
[20:24] *** ewilhelm joined
[20:29] *** yodzeb left
[20:32] <pugs_svnbot> r19992 | lwall++ | [STD] rewrite panic as normal method because it's hard to <commit>

[20:32] <pugs_svnbot> r19992 | lwall++ | [gimme5] properly recognize (and ignore <rw> on context)

[20:32] <pugs_svnbot> r19992 | lwall++ | [Cursor5] double-quoted string now pulls out fixed prefix, if any

[20:32] <pugs_svnbot> r19992 | lwall++ | [Cursor5] only non-atoms in quantification context need extra grouping

[20:32] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19992

[20:32] <lambdabot> Title: Changeset 19992 - Pugs - Trac

[20:40] *** rindolf left
[20:59] *** kst joined
[21:01] *** schmalbe joined
[21:11] *** alester joined
[21:21] *** alester left
[21:29] *** SCalimlim left
[21:31] *** schmalbe left
[21:38] <tewk> 

[21:45] *** alester joined
[21:47] *** csharp left
[21:47] *** IllvilJa joined
[21:49] *** ruoso left
[21:50] *** ruoso joined
[21:54] *** Helios_ is now known as Helios

[21:56] *** justatheory joined
[22:02] <pugs_svnbot> r19993 | lwall++ | [gimme5] various metachar and yaml vs. unicode issues

[22:02] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/19993

[22:03] <lambdabot> Title: Changeset 19993 - Pugs - Trac

[22:35] *** alester left
[22:59] *** Psyche^ joined
[23:05] *** Botje left
[23:06] *** pack|eet left
[23:14] *** Patterner left
[23:14] *** Psyche^ is now known as Patterner

[23:15] *** iblechbot left
[23:47] *** ofer left
