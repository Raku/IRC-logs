[00:00] *** bacek__ joined
[00:03] *** justatheory joined
[00:13] *** smg joined
[00:17] *** cognominal left
[00:23] *** fridim_ left
[00:27] *** kisu left
[00:29] *** kisu joined
[00:34] *** adc_Penner2 left
[00:35] *** yahooooo3 left
[00:35] *** yahooooo joined
[00:37] *** PZt left
[00:37] *** wknight8111 left
[00:41] *** kisu left
[00:43] <meppl> good night

[00:44] *** meppl left
[00:58] *** jhorwitz left
[00:59] *** bacek__ left
[01:26] *** hercynium joined
[01:29] *** r0bby joined
[01:47] *** Ontolog joined
[02:30] <rakudo_svn> r32475 | pmichaud++ | [rakudo]:  Refactor of Junction handling, with ideas from bacek++ (RT #60168)

[02:41] *** apeiron joined
[02:50] <pugs_svn> r22947 | bacek++ | [spec] Unfudge junctions tests for rakudo

[02:53] <pugs_svn> r22948 | bacek++ | [spec] Unfudge junctions tests for rakudo

[02:56] <pugs_svn> r22949 | bacek++ | [spec] Unfudge junctions tests for rakudo

[02:58] <pugs_svn> r22950 | lwall++ | [STD] infrastructure for lexically scoped declarations

[03:01] <pugs_svn> r22951 | bacek++ | [spec] Remove useless comment left after unfudging

[03:06] *** sri_kraih joined
[03:16] *** alester joined
[03:19] *** sri_kraih_ left
[03:22] *** hercynium left
[03:26] *** cognominal joined
[03:26] *** LumberCartel joined
[03:33] *** samlh left
[03:38] *** samlh joined
[03:41] <LumberCartel> Welcome back, samlh.

[03:47] *** Southen joined
[03:49] *** kanru left
[03:51] *** alc joined
[03:52] *** kanru joined
[04:00] *** Patterner1 joined
[04:00] *** samlh left
[04:03] *** Patterner left
[04:03] *** Patterner1 is now known as Patterner

[04:05] *** jfredett left
[04:13] <wayland76> It looks like the Perl6 channel is going to be lumbered with a cartel :)

[04:14] <wayland76> (welcome, LumberCartel :) )

[04:14] <LumberCartel> Heheh.  I'm a big mod_perl 2 user.

[04:14] <LumberCartel> Thanks for the welcome.

[04:19] *** azawawi joined
[04:19] <azawawi> hi

[04:19] <LumberCartel> Hello azawawi.

[04:21] <azawawi> @tell moritz_ im glad irclogs are back again... moritz_++

[04:21] <lambdabot> Consider it noted.

[04:22] *** azawawi left
[04:30] <rakudo_svn> r32476 | pmichaud++ | [rakudo]:  Update .uniq method for List (bacek++, RT #55484)

[04:30] <rakudo_svn> r32476 | pmichaud++ | * Patch courtesy Vasily Chekalkin <bacek  at bacek.com>, with modifications

[04:30] *** samlh joined
[04:32] *** jamtech joined
[04:42] *** bacek joined
[04:43] <bacek> perl6: say ?one(0,1,1)

[04:43] <p6eval> pugs: OUTPUT[one(VBool False)␤]

[04:43] <p6eval> ..elf 22847: OUTPUT[Undefined subroutine &GLOBAL::one called at (eval 119) line 3.␤ at ./elf_f line 3861␤]

[04:43] <p6eval> ..rakudo 32475: OUTPUT[0␤]

[04:46] *** jfredett joined
[04:50] <rakudo_svn> r32477 | pmichaud++ | [rakudo]:  Implementation of Bool.pick (RT #60290, bacek++)

[04:50] <rakudo_svn> r32477 | pmichaud++ | * Patch courtesy Vasily Chekalkin [email@hidden.address] with minor changes

[05:04] <pmichaud> perl6: say one(0,1,1).perl;

[05:04] <p6eval> rakudo 32476: OUTPUT[one(0, 1, 1)␤]

[05:04] <p6eval> ..pugs: OUTPUT[(0 ^ 1 ^ 1)␤]

[05:04] <p6eval> ..elf 22847: OUTPUT[Undefined subroutine &GLOBAL::one called at (eval 119) line 3.␤ at ./elf_f line 3861␤]

[05:04] <pmichaud> perl6: say any(0,1,1).perl;

[05:04] <p6eval> rakudo 32476: OUTPUT[any(0, 1, 1)␤]

[05:04] <p6eval> ..elf 22847: OUTPUT[Undefined subroutine &GLOBAL::any called at (eval 119) line 3.␤ at ./elf_f line 3861␤]

[05:04] <p6eval> ..pugs: OUTPUT[(0 | 1)␤]

[05:05] <pmichaud> perl6: say all(0,1,1).perl;

[05:05] <p6eval> elf 22847: OUTPUT[Undefined subroutine &GLOBAL::all called at (eval 119) line 3.␤ at ./elf_f line 3861␤]

[05:05] <p6eval> ..pugs: OUTPUT[(0 & 1)␤]

[05:05] <p6eval> ..rakudo 32476: OUTPUT[all(0, 1, 1)␤]

[05:05] <pmichaud> interesting.

[05:05] <pmichaud> perl6: say none(0,0,1).perl;

[05:05] <p6eval> rakudo 32476: OUTPUT[none(0, 0, 1)␤]

[05:05] <p6eval> ..pugs: OUTPUT[(0 ! 1)␤]

[05:05] <p6eval> ..elf 22847: OUTPUT[Undefined subroutine &GLOBAL::none called at (eval 119) line 3.␤ at ./elf_f line 3861␤]

[05:06] <pmichaud> pugs speculates on an infix:<!> there.... :-)

[05:10] <rakudo_svn> r32478 | pmichaud++ | [rakudo]: Implementation of .fmt (RT #60382, masak++)

[05:31] *** alc left
[05:56] *** cnhackTNT joined
[06:08] *** maennj joined
[06:10] <rakudo_svn> r32479 | pmichaud++ | [rakudo]: Change given_statement to follow STD.pm.

[06:15] *** maennj left
[06:15] *** alc joined
[06:19] <wolverian> 07:04     p6eval : ..pugs: OUTPUT[(0 ^ 1 ^ 1)␤]

[06:19] <wolverian> 07:04     p6eval : ..elf 22847: OUTPUT[Undefined subroutine &GLOBAL::one called at (eval 119) line 3.␤ at ./elf_f  line 3861␤]

[06:19] <wolverian> ugh, sorry. 

[06:33] *** |Jedai| joined
[06:35] <pugs_svn> r22952 | moritz++ | [t/spec] (un)fudge fmt.t for rakudo

[06:48] *** alester left
[06:50] <rakudo_svn> r32480 | moritz++ | [rakudo] add tests for .fmt to spectest.data

[06:51] *** Jedai left
[07:01] *** Bzek joined
[07:02] *** jamtech left
[07:04] *** ashizawa joined
[07:05] <literal> hm, will the "1; at the end of a do/used/required file" thing be required anywhere in Perl 6?

[07:07] *** justatheory left
[07:08] *** Ontolog left
[07:08] *** adc_Penner joined
[07:09] <TimToady> nope

[07:14] <pugs_svn> r22953 | pmichaud++ | [spec]:  Remove undef warnings from S03-junctions/boolean-context.t

[07:16] *** masak joined
[07:22] *** cnhackTNT left
[07:30] <rakudo_svn> r32482 | pmichaud++ | [rakudo]:  Update for_statement to use xblock.

[07:35] *** cnhackTNT joined
[07:41] *** cnhackTNT left
[07:42] *** cnhackTNT joined
[07:44] *** bacek left
[07:45] <masak> is there a way to lexicalize an 'is also' extension to a class?

[07:46] <masak> i.e. make it automatically disappear by the end of the block where it was declared?

[07:47] <TimToady> nope

[07:47] <masak> oh, well.

[07:47] <masak> was just thinking it could possibly be useful if I wanted to monkeypatch a class without harming it long-term.

[07:48] <TimToady> I'm not particularly interested in encouraging monkeypatching

[07:49] <masak> you have a point.

[07:49] <TimToady> anyway, sounds like a reasonable spot for a derived lexical inner class

[07:49] <masak> aye.

[07:50] <masak> but does that help already extant objects of the original class?

[07:53] <TimToady> temporary monkeypatching should probably be done via temp somehow

[07:53] <masak> (started thinking about this upon reading the line `@friends = grep { .is_friend }, @coworkers;` in S29 -- thought "that .is_friend call would never be enough in a real program... unless it was monkeypatched into the Employee class JIT.")

[07:55] *** elmex joined
[07:56] <TimToady> sounds more like AOP to me

[07:56] <masak> yes, perhaps.

[07:56] <TimToady> or maybe delegation

[07:56] <masak> TimToady: btw, the Matcher class is only mentioned in S29.

[08:02] <pugs_svn> r22954 | masak++ | [Spec/Functions.pod] updated contributors, version, last updated

[08:03] *** pbuetow joined
[08:07] <masak> s/only mentioned/mentioned only/

[08:10] <masak> it would be of interest to know how a matcher object fares in the smartmatch table in S03, for example.

[08:12] <masak> and what's the exact difference between a Matcher object and any old Code?

[08:13] <masak> ah, now I see: it's being _declared_ in S29. `subset Matcher of Item | Junction;`

[08:14] <masak> so, is it purely local to S29, with no correspondence as a core class?

[08:16] <pmichaud> 08:16 <nopaste> "pmichaud" at 76.183.97.54 pasted "nested statement modifiers... \o/" (13 lines) at http://nopaste.snit.ch/14528

[08:17] <masak> \o/

[08:17] <masak> pmichaud++

[08:17] *** rindolf joined
[08:20] <rakudo_svn> r32484 | pmichaud++ | [rakudo]: Refactor statement modifiers

[08:24] *** alc left
[08:25] <pmichaud> 08:25 <nopaste> "pmichaud" at 76.183.97.54 pasted "does this look right? (RT #58392)" (30 lines) at http://nopaste.snit.ch/14529

[08:26] <masak> pmichaud: it does indeed!

[08:26] <pmichaud> if this passes spectest then I can go ahead and commit.

[08:27] <masak> pmichaud: I can't adequately describe how good news this is.

[08:27] *** pbuetow left
[08:27] <pmichaud> well... let's see if we pass the spectest.  I made a temporary fix (I hope) in trunk -- still working on the lex branch.

[08:28] <moritz_> pmichaud: there's a test for that in t/spec/S04-statements/for.t

[08:28] <lambdabot> moritz_: You have 1 new message. '/msg lambdabot @messages' to read it.

[08:28] <pmichaud> I'm actually worried about the other spectests

[08:28] <masak> pmichaud: yes, I know, I've backlogged.

[08:28] <pmichaud> the problem with lexicals in rakudo/parrot is that fixing some tests causes other simple things to break

[08:28] <masak> :/

[08:31] <pmichaud> failed t/spec/S03-operators/binding-scalars :-(

[08:31] <pmichaud> and t/spec/S03-operators/precedence.t

[08:31] <pmichaud> so it's not looking so good.  :-(

[08:32] *** iblechbot joined
[08:32] <masak> dang. so close.

[08:32] *** masak left
[08:40] *** bacek__ joined
[08:43] *** DemoFreak joined
[08:43] <pmichaud> I might have another fix.

[08:44] *** cxreg left
[08:47] *** cxreg joined
[08:48] <pmichaud> nope, it's back to the same issue.  :-(

[08:49] <pmichaud> okay, I think the lex branch is my big target for tomorrow.

[08:50] <rakudo_svn> r32485 | pmichaud++ | [rakudo]: spectest-progress.csv: 211 files, 4435 passing, 58 failing

[08:50] <pmichaud> I was hoping some of these other changes would clear things up... but no such luck.

[08:58] *** masak joined
[09:01] *** ejs joined
[09:16] *** pmurias joined
[09:17] <pmurias> ruoso: i'll try to migrate all the p6 tests from elf to mildew

[09:17] <lambdabot> pmurias: You have 2 new messages. '/msg lambdabot @messages' to read them.

[09:19] *** adc_Penner left
[09:21] <LumberCartel> From elf to mildew?  Seems magical.

[09:25] *** donaldh joined
[09:29] <pmurias> LumberCartel: both elf and mildew are perl6 compilers living in misc/elf and v6/mildew in the pugs repo

[09:30] <LumberCartel> pmurias++

[09:37] <ruoso> hi pmurias 

[09:39] <ruoso> breakfast &

[09:46] <pmurias> ruoso: hi

[09:46] *** fridim_ joined
[09:52] <LumberCartel> perlbot karma pmurias

[09:52] <perlbot> Karma for pmurias: 876

[09:52] <LumberCartel> Ah, so it works here!

[09:53] <masak> that is a lot of karma.

[09:53] <masak> karma masak

[09:53] <moritz_> perlbot: karma masak 

[09:53] <perlbot> Karma for masak: 170

[09:53] <moritz_> perlbot: karma moritz

[09:53] <perlbot> Karma for moritz: 1423

[09:53] <moritz_> perlbot: karma moritz_ 

[09:53] <perlbot> Karma for moritz_: 97

[09:53] <masak> whoa.

[09:54] <moritz_> the test suite sometimes require many commits

[09:54] <moritz_> that doesn't mean that there's much effort behind it

[09:54] *** cnhackTNT left
[09:57] <LumberCartel> perlbot karma LumberCartel

[09:57] <perlbot> Karma for LumberCartel: 2

[09:57] * LumberCartel feels like he's walking with giants.

[09:58] <masak> moritz_: I refuse to diminish your efforts in any way. moritz_++

[09:58] *** smg left
[10:00] <pmurias> LumberCartel: most karma is generated by the svn commit bot

[10:00] <ruoso> perlbot, karma ruoso

[10:00] <perlbot> Karma for ruoso: 686

[10:01] <LumberCartel> Nice.

[10:01] <LumberCartel> I should get involved in development then.

[10:04] <moritz_> indeed. ;)

[10:04] <LumberCartel> Heheh.

[10:04] <LumberCartel> perl karma c

[10:04] <LumberCartel> perlbot karma c

[10:04] <perlbot> Karma for c: 4779

[10:04] <LumberCartel> There's a goal for ya!

[10:04] <ruoso> pmurias, I still keep getting "unknown method "new"" in mildew --exec

[10:05] <ruoso> you said you found the problem...

[10:05] <masak> C gets much too much karma thanks to C++.

[10:06] <moritz_> we should write more code in C--

[10:06] *** tomyan joined
[10:09] <masak> C--: for those who think that C is too high-level.

[10:09] <LumberCartel> Heheh.

[10:20] <pmurias> ruoso: you run ./Setup configure --users --flags=SMOP;./Setup build in v6/smop/m0ld

[10:20] <pmurias> ?

[10:21] <pmurias> ruoso: make test in mildew works for me

[10:24] *** masak left
[10:32] <Bzek> perl karma lisp

[10:32] <Bzek> perlbot karma lisp

[10:32] <perlbot> Karma for lisp: 3

[10:32] <Bzek> perlbot karma haskell

[10:32] <perlbot> Karma for haskell: 21

[10:32] <Bzek> ;)

[10:32] <Bzek> perlbot karma erlang

[10:32] <perlbot> Karma for erlang: 4

[10:32] *** ejs_ joined
[10:32] *** ejs left
[10:34] <Bzek> perlbot karma perl

[10:34] <perlbot> Karma for perl: 241

[10:34] <Bzek> Sorry. :)

[10:35] <LumberCartel> perlbot karma Microsoft

[10:35] <perlbot> Karma for Microsoft: -32

[10:41] <rindolf> perlbot: karma windows

[10:41] <perlbot> Karma for windows: -23

[10:42] <moritz_> perlbot: karma rindolf

[10:42] <perlbot> Karma for rindolf: 104

[10:42] <rindolf> perlbot: karma moritz_ 

[10:42] <perlbot> Karma for moritz_: 98

[10:43] *** meppl joined
[10:45] <LumberCartel> perlbot karma DamagedCow

[10:45] <perlbot> Karma for DamagedCow: 2

[10:47] *** iblechbot left
[10:48] <bacek__> ho! karma wars!

[10:48] <bacek__> karma bacek

[10:48] *** bacek__ is now known as bacek

[10:49] <bacek> perlbot karma bacek

[10:49] <perlbot> Karma for bacek: 86

[10:49] * bacek have to right multiline commit comments :)

[10:49] <LumberCartel> Is C the enemy or on the same side?

[10:50] <bacek> s/right/write/

[10:54] *** fridim_ left
[11:27] *** jan_ left
[11:29] *** smg joined
[11:37] <pmurias> LumberCartel: why do you ask?

[11:37] <LumberCartel> Because C has huge karma.

[11:37] <LumberCartel> perlbot karma c

[11:37] <perlbot> Karma for c: 4778

[12:01] *** iblechbot joined
[12:02] *** ejs_ left
[12:12] *** ejs_ joined
[12:12] *** LumberCartel left
[12:15] *** fridim_ joined
[12:16] <pmurias> ruoso: did ./Setup build in m0ld help?

[12:20] *** meppl left
[12:23] *** Lorn joined
[12:39] *** alc joined
[12:48] *** araujo left
[13:15] *** rindolf left
[13:18] <donaldh> That must mean that C++ is in league with C.

[13:18] <donaldh> perlbot karma c

[13:18] <perlbot> Karma for c: 4780

[13:19] <donaldh> see what I mean?

[13:19] <moritz_> perlbot: karma C++

[13:19] <perlbot> Karma for C++: -19

[13:19] <donaldh> perlbot karma c

[13:19] <perlbot> Karma for c: 4780

[13:19] <donaldh> At least purl doesn't fall for that one

[13:20] *** abra joined
[13:27] *** cosimo joined
[13:29] *** bacek_ joined
[13:30] *** bacek left
[13:32] <pmurias> donaldh: why did the C karma increase by two after you mention of the ugly OO language?

[13:32] <donaldh> how do you increase karma?

[13:33] <moritz_> pmurias: maybe perlbot doesn't record karma per channel, but per network? then somebody could have ++-ed it in another channel in the same time

[13:33] <pmurias> moritz_: propably

[13:33] <pmurias> donaldh: with a perl6++

[13:34] <donaldh> pmurias: sorry, I didn't parse your _by two_

[13:35] <lizsac> perlbot karma lizsac

[13:35] <perlbot> Karma for lizsac: -1

[13:36] <lizsac> perlbot karma lizsac++

[13:36] <perlbot> lizsac++ doesn't have any karma

[13:36] <lizsac> lizsac++

[13:36] <perlbot> What kind of idiot karmas himself?  Your kind of idiot!

[13:36] <lizsac> perlbot karma lizsac

[13:36] <perlbot> Karma for lizsac: -2

[13:42] *** alester joined
[13:47] *** alester left
[13:47] *** ashizawa left
[13:49] *** araujo joined
[13:51] *** slavik joined
[13:58] *** fronty joined
[14:02] <slavik> japhb: when you are available, I need help with getting Perl6 to do OpenGL

[14:02] *** araujo left
[14:05] *** masak joined
[14:14] *** fridim_ left
[14:25] *** silug left
[14:26] *** jan_ joined
[14:30] *** rindolf joined
[14:30] *** jhorwitz joined
[14:53] *** fronty left
[14:58] *** alester joined
[15:03] *** schmalbe joined
[15:04] *** ejs_ left
[15:04] *** ejs_ joined
[15:14] *** alester left
[15:16] *** rindolf left
[15:24] *** rindolf joined
[15:27] *** zamolxes joined
[15:29] *** silug joined
[15:38] *** masak left
[15:40] *** alester joined
[16:02] *** alc left
[16:05] *** jfredett left
[16:05] *** stephenos joined
[16:16] *** justatheory joined
[16:17] *** hercynium joined
[16:18] *** ejs_ left
[16:21] *** SamB left
[16:22] * ruoso later &

[16:22] *** ruoso left
[16:24] <japhb> slavik: I'm here, at list for a little while.

[16:24] *** hercynium left
[16:25] *** hercynium joined
[16:30] *** donaldh left
[16:30] *** cosimo left
[16:31] *** ejs_ joined
[16:32] *** abra left
[16:35] *** abra joined
[16:35] *** abra left
[16:42] *** rdice joined
[16:47] *** Tene left
[16:53] *** bacek__ joined
[16:55] *** bacek_ left
[17:00] *** araujo joined
[17:00] *** ejs_ left
[17:23] *** ruoso joined
[17:33] *** pbuetow joined
[17:35] *** meppl joined
[17:36] <ruoso> Hello!

[17:37] <slavik> japhb: do you have a sample perl6 opengl script? "use OpenGL;" doesn't exactly work, since @INC is set to "." ... can I conclude that OpenGL is there in parrot? (since I see the OpenGL linker flags)

[17:40] *** Exodist joined
[17:42] <ruoso> pmurias, Hi... I presume m0ld is still static-linking right?

[17:46] *** adc_Penner joined
[17:46] <adc_Penner> Hallo zusammen

[17:50] <rakudo_svn> r32493 | bernhard++ | [commit] Remove some trailing whitespace

[17:50] <rakudo_svn> r32494 | bernhard++ | [codingstd] Set SVN props for gen_junction_pir.pl

[17:51] <pugs_svn> r22955 | pmichaud++ | [spec]:  Fix todo of do+modifier tests.

[18:00] <rakudo_svn> r32496 | pmichaud++ | [rakudo]:  Some updates to assignment operators (RT #60452)

[18:06] *** iblechbot_ joined
[18:08] <pugs_svn> r22956 | moritz++ | [t/spec] correct and fudge autovivification.t

[18:10] <rakudo_svn> r32497 | pmichaud++ | [rakudo]:  Add infix:<**=> initialization  (moritz++)

[18:13] <slavik> pmichaud: arrg, I just compiled it ...

[18:14] <pugs_svn> r22957 | ruoso++ | [mildew] support for if and else...

[18:15] <ruoso> mildew: if 0 { $OUT.print("nok") } else { $OUT.print("ok") }

[18:15] <p6eval> mildew: No output (you need to produce output to STDOUT)

[18:16] *** jferrero joined
[18:18] *** bacek_ joined
[18:18] <pugs_svn> r22958 | ruoso++ | [mildew] make if jump to the end instead of running the else block anyway

[18:19] *** bacek__ left
[18:21] *** iblechbot left
[18:22] *** REPLeffect joined
[18:40] *** cpfr left
[18:44] *** Bzek left
[18:44] <japhb> slavik: Sorry, have to run again (and will be offline for a while), but will pop back in later, and will take a look at that.

[18:44] *** japhb left
[18:46] <slavik> k

[18:48] *** PZt joined
[18:50] <pugs_svn> r22959 | ruoso++ | [mildew] we now support if/elsif/else 

[18:55] <ruoso> @tell pmurias I think we can already compile ClassHOW.add_method()

[18:55] <lambdabot> Consider it noted.

[18:57] *** cpfr joined
[19:01] *** zamolxes left
[19:11] *** awwaiid left
[19:11] *** awwaiid joined
[19:14] *** xinming joined
[19:18] *** tomyan left
[19:23] *** smg left
[19:23] *** jferrero left
[19:24] *** rindolf left
[19:26] *** xinming_ left
[19:35] <ruoso> perl6: say $?PACKAGE

[19:35] <p6eval> elf 22847, pugs: OUTPUT[Main␤]

[19:35] <p6eval> ..rakudo 32497: OUTPUT[Scope not found for PAST::Var '$PACKAGE'␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 152 (src/PCT/HLLCompiler.pir:104)␤]

[19:36] <pugs_svn> r22960 | pmichaud++ | [spec]:  More unfudging and test correction in autovivification.t

[19:46] *** bacek__ joined
[19:46] *** mncharity joined
[19:46] *** bacek_ left
[19:47] *** Lorn left
[19:53] <mncharity> Re STD/gimme5, '_reduced'?!?  Node tagging!!!  Wooooooohhhoooooo.

[19:53] <lambdabot> mncharity: You have 2 new messages. '/msg lambdabot @messages' to read them.

[19:53] <mncharity> :)

[19:54] <mncharity> ... said 25d 20h 15m 39s ago ... :/

[19:55] *** pedrob joined
[19:58] <mncharity> Has anyone been around expressing interest in elf?

[19:59] <mncharity> I've been noticing the only projects I'm actually pushing on are those where someone else thinks it's important too.

[19:59] *** jauaor joined
[20:10] *** Lorn joined
[20:13] <ruoso> mncharity, pmurias was talking about merging the test cases for elf and mildew

[20:21] <mncharity> ruoso: thanks. :)

[20:22] <mncharity>  /me tries to remember what test cases elf has, aside from t/ ...

[20:31] <mncharity> Life is so vastly simpler when Match nodes are tagged with the rule which created them.  Yayyyy.

[20:41] * ruoso half way to support package declarations in mildew...

[20:41] <mncharity> TimToady: fyi, it looks like 2.m++ parses as (2++).m .  Not a problem for elf bootstrap - just fyi.  Perhaps it's even the right thing.

[20:41] <mncharity> ruoso/progress++

[20:53] *** smg joined
[20:53] <pugs_svn> r22961 | ruoso++ | [mildew] half way through "knowhow Foo {...}"...\

[20:54] <ruoso> it's cool that the code for method_def actually looks up for $?PACKAGE to find out where to register itself to

[20:56] <mncharity> :)

[20:57] <mncharity> lol: nibble and quibble and sibble, oh my.  # STD.pm

[20:57] *** japhb joined
[21:03] <pugs_svn> r22962 | ruoso++ | [mildew] small fix, but for some reason it doesnt seem to be calling &Foo() correctly.

[21:04] <japhb> slavik: I'm back.

[21:04] <slavik> yay

[21:04] <slavik> japhb: how can I even load OpenGL and can we get SDL bindings?

[21:04] <ruoso> @tell pmurias if you have some time, please take a look at mildew/t/knowhow.t... it's supposedly compiling correctly, but it seems to be calling the wrong method when getting the type by the sub of its name... Foo().bar()

[21:04] <lambdabot> Consider it noted.

[21:05] * ruoso later &

[21:05] *** ruoso left
[21:06] <japhb> slavik: My understanding is that the rakudo folks had this (loading Parrot modules) partially working a month ago, but I didn't see if progress had been made.  However, I noted that pmichaud's Hague grant includes a lot of stuff about getting rakudo using external modules, so it may be still incomplete.

[21:06] <japhb> I'm pulling a current Parrot/Rakudo to check on the state of things.

[21:06] <slavik> k

[21:06] <slavik> I have a revision from earlier today

[21:07] <pmichaud> it's still incomplete, but we're a lot closer.

[21:08] <pmichaud> also, the Hague grant was written last July -- it's just taken a while to get it announced and started :-)

[21:08] <slavik> k

[21:08] <pmichaud> sometimes the wheels turn slowly.

[21:08] *** pedrob_ joined
[21:09] <japhb> So, since I and slavik are both here and interested ... what's working and what's not?  What remains to be done before I can use my Parrot OpenGL bindings from within Rakudo?

[21:11] <slavik> and SDL?

[21:12] *** silug left
[21:17] <mncharity> "the chained infixish has taken two termish!"

[21:17] <mncharity> #STD parse tree for 2 == 3.

[21:23] <japhb> slavik: Long, LONG ago (when he was just out of diapers), chromatic made an SDL binding for Parrot.  It was (and probably is) 2D only.

[21:24] <slavik> japhb: I need SDL to do everything besides graphics ...

[21:24] <slavik> except open a window with OpenGL context

[21:24] <slavik> so that then I can use OpenGL to draw to it

[21:25] <japhb> GLUT Game Mode will get you mouse and KB input and basic WM interaction.  Hi-res time is built in to Parrot.  For fonts you get GLUT's built in ones, or glyphs-on-quads.  That leaves networking (part of the IO PDD, I would think), and sound.  Methinks we should wrap OpenAL or some such.

[21:26] <slavik> japhb: glut's KB is not like SDL

[21:26] <japhb> slavik: true, though with the Game Mode extensions, it's a lot closer.

[21:26] <slavik> still not SDL

[21:26] <japhb> You just can't fire with the CTRL key

[21:26] <slavik> :(

[21:27] <slavik> SDL also has a nice image library ;)

[21:27] <japhb> "Whaddya want for nothin, a rubber biscuit?"

[21:27] <slavik> yes!

[21:28] <japhb> Ah ... I'm used to using Perlmagick for image loading, ever since the POGL maintainer convinced the ImageMagick guys to expose the raw pixel arrays to Perl control.

[21:28] <japhb> ... of course, I haven't ported the PerlMagick bindings to Parrot ....

[21:30] <japhb> pmichaud?  Any details on what's working and not with Rakudo using Parrot libs?

[21:31] *** zamolxes joined
[21:32] <moritz_> last time I tried mysql and xlib bindings worked from rakudo, but not very conveniently

[21:32] <japhb> What was the inconvenience?

[21:33] <moritz_> if it returned some kind of list, it wasn't a Perl 6 list, so you couldn't iterate over it with 'for'

[21:33] <mncharity> "the POGL maintainer convinced the ImageMagick guys to expose the raw pixel arrays to Perl control", ^.^   progress++

[21:33] <japhb> Oh, yes, the long-lived list assignment question

[21:33] <moritz_> no, that's something entirely different

[21:33] <moritz_> that's more a question of type maps and such

[21:34] *** pedrob left
[21:35] <moritz_> cd languages/perl6/; make perl6 ; cd ../../examples/nci/; ../../languages/perl6/perl6 xlibtest.p6

[21:35] *** Lorn left
[21:35] <moritz_> and then use the mouse to paint something

[21:39] *** slavik left
[21:50] <rakudo_svn> r32500 | particle++ | [rakudo] create %*VM hash, and expose parrot config info under %*VM<config><...> ; cotto++ for asking for it

[22:03] *** zamolxes_ joined
[22:04] *** zamolxes left
[22:07] *** adc_Penner left
[22:09] <moritz_> rakudo: say %*VM<config><revision>

[22:09] <p6eval> rakudo 32499: OUTPUT[get_pmc_keyed() not implemented in class 'Undef'␤current instr.: '_block11' pc 40 (EVAL_12:23)␤]

[22:09] <moritz_> rakudo: say %*VM.perl

[22:09] <p6eval> rakudo 32499: OUTPUT[{}␤]

[22:11] <moritz_> that's one revision too old

[22:12] <mncharity> TimToady: fyi, "last;" is parsing as term:sym<;> rather than term:sym<last>.  I can work around it.  not a blocker for elf bootstrap, merely fyi.

[22:12] *** SamB joined
[22:21] *** ruoso joined
[22:23] <pugs_svn> r22963 | ruoso++ | [mildew] small problem fixed... it now is calling the method correctly..

[22:24] *** rdice left
[22:26] <[particle]> rakudo: say %*VM<config><revision>

[22:26] <p6eval> rakudo 32500: OUTPUT[32500␤]

[22:26] <[particle]> :D

[22:28] <moritz_> [particle]++

[22:30] <pugs_svn> r22964 | putter++ | [elfish/STD_blue] Began adaptation to current STD.pm/gimme5 (r22962).

[22:30] <pugs_svn> r22964 | putter++ | Progress: CommandLine.pm is compiled correctly (1 diff: not() is parsed as prefix:not()).

[22:32] <pugs_svn> r22965 | ruoso++ | [smop] fails with abort() if someone try to call a unknown method in a knowhow

[22:33] <pugs_svn> r22966 | ruoso++ | [mildew] methods are registered in $?CLASS, not $?PACKAGE

[22:36] *** iblechbot_ left
[22:38] *** kanru left
[22:39] <mncharity> One file down, several to go.  Once elf can correctly compile all of itself using STD.pm/gimme5 (aka STD_blue) for parsing, the next step will be to begin the long haul of getting elf to compile STD.pm directly.

[22:39] <moritz_> is elf bootstrapped on CL?

[22:40] <mncharity> sortof

[22:40] <moritz_> blog about it!

[22:40] <mncharity> the CL elf self compiles.  but it's compilation of p5 elf has diffs.

[22:41] <moritz_> planetsix is fixed, so no excuses anymore ;)

[22:41] <mncharity> decided I didn't really care enough to debug it.  someone else might first.  make check does the bootstrap test.

[22:41] <mncharity> re blog, good idea.  re planet, :)

[22:42] <mncharity> s/planet/excuses/

[22:42] <pugs_svn> r22967 | ruoso++ | [mildew] now we support metacalls, like Foo.^add_method($bar)

[22:42] <mncharity> s/decided I didn't really care enough to debug it/wasn't on the elf critical path/

[22:42] *** wayland76 left
[22:48] <mncharity> I guess I didn't advertise because it ended up "not pretty".  Compilation is slow and very very noisy.  Speed is slower than p5.   Upsides include has multi-everything, and the path to greater than p5 speed is obvious (eg, when you can see you don't need to box, don't).

[22:50] <mncharity> Still... "check in early and often" and "blog".

[22:50] <mncharity> moritz_++

[22:51] *** schmalbe left
[22:51] <mncharity> good night all &

[22:51] *** mncharity left
[22:53] <pugs_svn> r22968 | ruoso++ | [smop] PurePrototypeHow.^add_method working...

[22:53] <pugs_svn> r22968 | ruoso++ | [mildew] we have knowhow :) YAY!

[22:53] <ruoso> for those wondering what it means, just take a look at pugs/v6/mildew/t/knowhow.t and realize that it works ;)

[22:55] *** mncharity joined
[22:56] <mncharity> btw, anyone who wants to push on elfish/on_sbcl, one thing to do would be to get it working on CLISP.  That gets us away from SBCL's famously noisy compilations, and does some other nice things.

[22:56] *** mncharity left
[22:56] <ruoso> @tell pmurias now we are really close to support ClassHOW.add_method... t/knowhow.t passes

[22:56] <lambdabot> Consider it noted.

[22:58] <pugs_svn> r22969 | ruoso++ | [mildew] I just hate missing new-lines at the end of files

[23:05] *** pedrob joined
[23:06] <ruoso> now we need to compile signatures to AdhocSignatures in mildew

[23:07] *** pedrob_ left
[23:09] * ruoso later &

[23:13] <ruoso> mildew: $OUT.print("Hello from mildew!\n");

[23:13] <p6eval> mildew: No output (you need to produce output to STDOUT)

[23:13] <ruoso> moritz_, I think mildew evalbot is not being updated... it's currently working again... and supports some cool things..

[23:15] *** jhorwitz left
[23:16] <japhb> Aww yeah, first working Rakudo / OpenGL code!

[23:16] <japhb> slavik, this thing is workable now!

[23:19] *** Limbic_Region joined
[23:22] *** wknight8111 joined
[23:22] <japhb> What is the correct way to set up a MAIN in Rakudo?

[23:24] *** pbuetow left
[23:24] <japhb> pmichaud: Is it possible to add <parrot-home>/runtime/parrot/library/ to @*INC by default, please?

[23:25] *** pedrob left
[23:25] <jnthn> japhb: If by MAIN you mean writing a sub called MAIN as the program entry point - not implemented yet. But if you want it, then feel free to file a ticket.

[23:26] <japhb> jnthn: is there any sort of automatic entry point at all?  Or just not the full MAIN sugar?

[23:27] <japhb> Having runtime/parrot/library/ in @*INC by default is more valuable to me ... and probably simpler :-)

[23:38] <jnthn> japhb: The main body of the program is just what gets run.

[23:38] <japhb> jnthn: yeah, that's what I'm working with now.  A little icky, but oh well.

[23:39] <jnthn> japhb: I have some hacking time tomorrow, I can implement MAIN for you, I expect.

[23:39] <japhb> jnthn: GREAT!

[23:39] <jnthn> You've got OpenGL working from Rakudo?

[23:40] * jnthn thinks this is rather cool

[23:40] <japhb> yep, static-triangle.p6 works, just finished writing triangle.p6, about to test it.

[23:40] <japhb> YES!

[23:40] <japhb> OK, let me commit these, and then I can start on the larger task of shapes.p6

[23:41] <jnthn> Woo, nice work!

[23:41] *** bacek joined
[23:41] *** hercynium left
[23:41] <japhb> thx.  It's all you guys.  I was just waiting for Rakudo to be ready, and now it clearly is.  ;-)

[23:41] <jnthn> It's nice to see people doing stuff with Rakudo.

[23:42] <jnthn> Discovering bugs, requesting features, etc.

[23:42] <japhb> I bet -- it's always nice to see one's hard work finally put to use.

[23:42] <japhb> Especially after all these months!

[23:43] <jnthn> Yes!

[23:43] <jnthn> For me it's about a year since I started hacking on Rakudo now.

[23:44] <japhb> That's a heck of a wait.

[23:45] <jnthn> Well, November started in August, which was also really nice to see.

[23:51] <japhb> nodnod

[23:51] *** zamolxes_ is now known as zamolxes

[23:54] *** Exodist left
[23:54] *** wayland76 joined
[23:59] *** DemoFreak left
