[00:02] <cognominal_> sln  : this not pir but sonething that would be nice would be able to have different actions files for a given grammar.pg. Because one may want to compile source code or just beautify it. That would imply modify the code of dev/mk_processor_shell.pl or and/or of the called libraries

[00:07] *** fco joined
[00:08] *** jferrero left
[00:11] *** Limbic_Region left
[00:15] *** dduncan joined
[00:17] *** kst left
[00:17] *** kst` joined
[00:25] *** justatheory left
[00:35] <ruoso> @tell pmurias, I think at some point we could publish it to CPAN, but I'm not sure on how to do it...

[00:35] <lambdabot> Consider it noted.

[00:36] <ruoso> is the irc log down, or is it just me?

[00:36] <lambdabot> ruoso: You have 1 new message. '/msg lambdabot @messages' to read it.

[01:05] <ruoso> moritz_, are you around?

[01:10] *** kst` left
[01:10] *** kst` joined
[01:25] <pugs_svn> r21903 | ruoso++ | [smop] first implementation of the default block signature bind code. It does not work yet, but is a great progress anyway.

[01:26] *** jferrero joined
[01:31] *** araujo joined
[01:56] *** bacek joined
[02:05] *** kst` left
[02:05] *** kst` joined
[02:05] *** cognominal_ left
[02:05] *** fco left
[02:07] *** Schwern left
[02:12] *** nicky01 joined
[02:21] *** cognominal_ joined
[02:29] *** rindolf joined
[02:30] *** nicky00 left
[02:30] *** edpratomo left
[02:35] *** cathyal left
[02:40] *** Schwern joined
[02:40] *** Schwern left
[02:43] *** Schwern joined
[02:44] *** ashizawa joined
[02:44] *** Schwern left
[03:31] *** Schwern joined
[03:37] *** alester joined
[03:45] *** Schwern left
[04:06] *** kst` left
[04:06] *** kst` joined
[04:08] *** redicaps joined
[04:10] *** charsbar joined
[04:12] *** jferrero left
[04:22] *** wknight8111 left
[04:32] <pugs_svn> r21904 | lwall++ | [STD] speed up parser by 33% by using P5 regex instead of TRE for ltm backoff matches

[04:34] <cognominal_> ltm?

[04:34] <audreyt> for downloading a pugs tarball, http://git.pugscode.org/ now provides a "download" link

[04:34] <lambdabot> Title: audreyt's pugs at master â€” GitHub

[04:34] <Auzon> cognominal_: ltm is longest token matching

[04:35] <cognominal_> there is a few TLAs that  I have trouble to get in my head :(

[04:36] <Auzon> yeah, that one is pretty specific. I only recognized it since I heard a lot of pain being spent in getting LTM to work correctly :)

[04:39] <cognominal_> ...and github is a nice mac interface to see changes

[04:40] <cognominal_> I meant gitnub!!

[04:48] <pugs_svn> r21905 | lwall++ | [Cursor] buglet from incomplete transition on semantics

[04:55] *** rindolf left
[05:13] *** kst` left
[05:13] *** kst` joined
[05:19] *** meteorjay joined
[05:24] *** xinming_ joined
[05:27] *** ashizawa left
[05:44] *** Psyche^ joined
[05:52] *** flw joined
[05:52] *** flw left
[05:54] *** Psyche^ is now known as Patterner

[06:05] *** BinGOs joined
[06:13] *** alester left
[06:14] *** araujo left
[06:18] *** zamolxes left
[06:21] *** cognominal_ left
[06:28] *** kst` left
[06:29] *** kst` joined
[06:41] <dduncan> so is Pugs on Git now, or is that GitHub thing just a mirror?

[06:42] <dduncan> I mean, which is the official repository now?

[06:43] <dduncan> (I haven't resynced in months, so sort of out of the loop ... svn/svk has been more trouble on my system lately)

[06:43] <dduncan> my current work is just my own projects atm, which use Git

[07:06] *** Schwern joined
[07:13] *** elmex joined
[07:14] <audreyt> it's just a mirror

[07:14] <audreyt> svn is still official

[07:14] <audreyt> but you can track/clone with git now

[07:24] *** fridim_ joined
[07:39] *** leto_ joined
[07:39] *** araujo joined
[07:42] <dduncan> can I push commits using git too and have those forward to the official repo?

[07:44] <dduncan> anyway, if people can agree, I suggest putting the official version on git

[07:45] *** kst` left
[07:45] *** kst` joined
[07:45] <dduncan> in some respects I think doing so would make it easier for people to contribute, since git is much simpler to install and its repositories seem more reliable and compact

[07:47] <dduncan> I'm not specifically recommending that host, just the tool chain

[07:49] <fullermd> People?  Agree on a version control system?  Sure, that should be no problem...   :p

[07:51] *** fridim__ joined
[07:52] <dduncan> I don't mean everyone, just a critical mass

[07:53] <dduncan> or alternately just one or a few of the right individuals

[07:54] <Alias_> git is not easier

[07:54] <Alias_> git is easier to be disconnected with, and to do work without permission of others

[07:54] <Alias_> Working WITH full trust on a common codebase is harder

[07:55] <dduncan> just installing the program I found to be easier

[07:55] <Alias_> apt-get install ...

[07:55] <Alias_> Anyways, gotta pack

[07:55] <Alias_> Leaving hotel in 5 minutes

[07:56] <fullermd> There's a really bad joke in there somewhere about "if you used git" and "packing"...

[07:56] <dduncan> its written in C and is self-contained

[07:57] <dduncan> while using the svn stack needed a number of other non-trivial prerequisites

[07:57] <dduncan> with git I could just download the tarball, and do configure, make, make test, make install

[08:01] <dduncan> as for the working with trust thing, that's a social issue not a tool issue

[08:05] <Alias_> sure it's a tool issue

[08:05] <Alias_> Now I need to make contortions in order to push to the main repository

[08:05] <Alias_> I can't just go "commit"

[08:06] *** fridim_ left
[08:07] *** fridim_ joined
[08:09] *** barney joined
[08:10] <Alias_> ok, heading to hackathon

[08:13] *** fridim__ left
[08:14] *** dduncan left
[08:24] *** cognominal_ joined
[08:26] *** xinming_ left
[08:26] *** avar left
[08:26] *** xinming_ joined
[08:26] *** avar joined
[08:26] *** agentzh joined
[08:26] *** pugs_svn joined
[08:26] *** jiing joined
[08:26] *** orafu joined
[08:26] *** p6eval joined
[08:26] *** gbacon joined
[08:26] *** Guest16015 joined
[08:26] *** ilbot2 joined
[08:28] *** Alias_ left
[08:34] *** bacek left
[08:35] *** barney left
[08:55] *** kst` left
[08:56] *** kst` joined
[09:02] *** nirz joined
[09:02] *** fridim_ left
[09:03] *** fridim_ joined
[09:16] *** pmurias joined
[09:19] <pmurias> ruoso: hi

[09:22] <pmurias> ruoso: re CPAN I have never released anything on it yet (but i'm intrested in trying), the biggest problem i think is that there are a lot of stuff we used that are not CPANed yet like STD and elf 

[09:28] *** pbuetow joined
[09:35] *** cognominal_ left
[09:38] <ruoso> pmurias, indeed.. the dependencies are the most problematic issue

[09:44] <pmurias> ruoso: from the reaction of the audience at my talk i fear that getting perl5 stackless won't be easy

[09:50] <pmurias> ruoso: are you blocking on anything now?

[09:50] <ruoso> pmurias, how was the talk?

[09:51] *** nirz left
[09:53] <ruoso> pmurias, I'm trying to implement the default block signature

[09:53] <ruoso> but I'm getting "reading empty register 21"

[09:58] *** pmurias left
[09:59] *** apeiron joined
[09:59] *** rindolf joined
[10:00] <ruoso> pmurias, re p5 stackless: nothingmuch was pretty much confident that it is possible... I had talked with p5p people about it, and they were very much hopeless too

[10:00] <ruoso> but... in nothingmuch we trust ;)

[10:02] <nothingmuch> was I? ;-)

[10:02] *** pmurias joined
[10:02] <pmurias> (network cabel got loose)

[10:03] <nothingmuch> re stackless p5:

[10:03] <nothingmuch> it'd need fairly major refactoring of pp*

[10:03] <nothingmuch> i don't htink it's easy

[10:03] <nothingmuch> or even possible in the short term

[10:03] <nothingmuch> what i do think is that it's possible to make it compatible

[10:04] <nothingmuch> basically #ifdefs to make vTHX delimitable

[10:04] <pmurias> ruoso: i run out of slides during the talk and had to demonstrate how smop work now, but it wasn't as bad as i feared, and i can't really tell how other people liked it

[10:04] *** rindolf left
[10:04] <nothingmuch> and a runops that fiddles PL_stack_base on every op

[10:04] <nothingmuch> setting it up correctly

[10:04] <nothingmuch> i think that's enough but it's going to be veeery slow and clunky

[10:05] <pmurias> we can always embed kurilla ;)

[10:05] <pmurias> * kurila

[10:05] <nothingmuch> to make this change actually useful it will probably require creating static variants of all the perl opcodes

[10:05] <nothingmuch> that take register args

[10:05] <nothingmuch> and use an arity table

[10:06] <nothingmuch> basically converting things from push/enter to eval/apply

[10:06] <nothingmuch> none of this is possible in the short term though, IMHO

[10:07] <ruoso> but even if p5 can't get stackless... as long as we have a unique smop instance for each runops recursion... I think we're fine...

[10:07] <nothingmuch> *nod*

[10:08] <nothingmuch> anyway, back to real $work ;-)

[10:08] <nothingmuch> oh

[10:08] <nothingmuch> the llvm plan

[10:08] <nothingmuch> in case anyone is interested:

[10:08] <nothingmuch> building a statically compiled flattenning of an optree is only about 10% faster with llvmgcc

[10:08] <nothingmuch> (baiscally hijacking a CV and upgrading it to an XSUB)

[10:09] <nothingmuch> surprisingly with plain gcc it's actually 40% *slower* than runops

[10:09] <nothingmuch> so bascially llvm is much smarter than gcc, but still not smart enough to make simple stack operation static

[10:12] <pmurias> nothingmuch: the signature stuff you did with clkao was awesome

[10:12] <ruoso> nothingmuch, llvm might be usefull in smop as soon as we have a bootstrapped interpreter...

[10:13] * clkao appears in a puff or orange smoke

[10:13] <clkao> nothingmuch: i am cleaning up my b changes and putting them into b::utils for the moment

[10:13] <ruoso> I had this insight of building a type for each signature with the code that runs the BIND and the ACCEPTS code for that spefic signature...

[10:13] <nothingmuch> clkao++

[10:13] <nothingmuch> i'm working on making MXSD prophet ready =)

[10:14] <nothingmuch> ruoso: "type" as in C struct?

[10:14] <ruoso> nothingmuch, type as SMOP__Object type

[10:14] <nothingmuch> ah

[10:14] <nothingmuch> i thought you were talking about Data::Bind for a sec

[10:15] *** cognominal_ joined
[10:15] <ruoso> this type then holds jit compiled code for the bind and accepts for that specific signature

[10:15] <pmurias> nothingmuch: re not smart enough, one can write custom optimisers for llvm you know, and i can't see why should't we use Perl 6 for them

[10:16] *** kst` left
[10:16] *** kst` joined
[10:16] <nothingmuch> pmurias: the amount of effort I can invest in p5/llvm mashups is very limited

[10:16] <nothingmuch> so writing an LLVM optimizer pass is beyond the scope currently

[10:17] *** wknight8111 joined
[10:17] <nothingmuch> currently I think it's much easier to approach this from the perl side

[10:17] <nothingmuch> since the C code for the perl internals is so macro heavy

[10:18] <nothingmuch> and relies on so mch implicit state

[10:18] *** redicaps left
[10:18] <nothingmuch> that even if I were writing a p5 specific LLVM pass it would probably be too hard

[10:19] <pmurias> i should get round to reading that assembly tutorial, and trying to just save the C stack soon

[10:31] <pugs_svn> r21906 | pmurias++ | [mold] an error is raised if a NULL is returned from a method call

[10:33] *** smg joined
[10:38] <pmurias> ruoso: i think the error is the "something returns a NULL"  scenario again, i should now be doing stuff i put off before the yapc, if something is definitly an mold error i'll do it now otherwise i'll get back to it later if it's not fixed by then

[11:02] *** fridim__ joined
[11:02] *** wknight8111 left
[11:17] *** fridim_ left
[11:18] *** fridim_ joined
[11:21] *** fridim__ left
[11:27] *** kst` left
[11:27] *** kst` joined
[11:32] *** rindolf joined
[12:05] *** fridim_ left
[12:06] *** fridim_ joined
[12:17] <pugs_svn> r21907 | pmurias++ | [mold] the content of registers is printed after a NULL is returned from a method call

[12:33] *** wknight8111 joined
[12:45] *** pmurias left
[12:46] *** kst` left
[12:46] *** kst` joined
[12:48] *** vixey joined
[12:54] *** kanru left
[13:04] *** wknight8111 left
[13:09] *** kanru joined
[13:10] *** pmurias joined
[13:11] *** s1n joined
[13:44] *** cognominal_ left
[13:45] *** cognominal_ joined
[13:46] *** ruoso left
[13:47] *** ruoso joined
[13:49] *** cognominal_ left
[13:55] *** kst` left
[13:55] *** alester joined
[13:55] *** kst` joined
[13:56] *** alester left
[14:07] *** fridim_ left
[14:09] <pugs_svn> r21908 | ruoso++ | [smop] prints current mold frame position when aborting.

[14:23] *** pmurias left
[14:23] <pugs_svn> r21909 | ruoso++ | [smop] some more diagnostic information on mold errors... few NULL-returns caught...

[14:25] <pugs_svn> r21910 | ruoso++ | [smop] test/27 have a part of the test passing!

[14:39] *** pmurias joined
[14:39] *** SamB joined
[14:40] <pugs_svn> r21911 | ruoso++ | [smop] native int implements infix:>

[14:51] *** vixey left
[14:52] *** vixey joined
[15:03] <pugs_svn> r21912 | ruoso++ | [smop] test 27 almost passing... only thing to fix is an extra scalar that is getting on the way for some reason...

[15:04] <ruoso> pmurias, if you have some time, could you please try to help me with test 27?

[15:07] <pugs_svn> r21913 | ruoso++ | [smop] YAY! Default Block Signature Works!!!!!!!

[15:08] <ruoso> pmurias, now we have another good example of a mold code

[15:08] <ruoso> pmurias, and a very nice example on how slime and mold can coexist... take a look at test/27 and at src/smop_s1p_defaultblocksignature.sm0p

[15:14] *** sri_work joined
[15:15] *** pmurias left
[15:16] *** kst` left
[15:16] *** kst` joined
[15:31] *** pmurias joined
[15:32] <pmurias> ruoso: i had network problems, do you still need help?

[15:32] <ruoso> fortunally, no... ;)

[15:33] <ruoso> but take a look at test/27 and the defaultblocksignature implementation....

[15:33] <ruoso> it's an even better use case for mold than the other...

[15:36] <ruoso> and now we're ready to port Code to Mold

[15:40] <pugs_svn> r21914 | pmurias++ | [smop] changed STORE to infix:<=> in test 27

[15:41] <pmurias> i'll change use m0ld to q:m0ld "

[15:41] <pmurias> s/"/{...}/

[15:43] *** araujo left
[15:44] *** rindolf left
[15:48] <pmurias> ruoso: you need m0ld {...} and sub {...} support?

[15:50] *** wknight8111 joined
[15:53] *** jferrero joined
[16:07] *** kst` left
[16:07] *** kst` joined
[16:07] <ruoso> pmurias, q:m0ld has the advantage of allowing custom mold variable name

[16:09] <ruoso> pmurias, I think sub-molds are probably going to be used by the s1p compiler

[16:09] <ruoso> so I'm not sure we want to use it directly in m0ld

[16:10] <ruoso> pmurias, one cool project now is the signature compiler

[16:10] <ruoso> for s1p

[16:11] <ruoso> we need to be able to compile a signature to a equivalent BIND and ACCEPTS code...

[16:18] <pmurias> ruoso: i think we could implement the Signature in perl6

[16:21] *** wknight8111 left
[16:27] <ruoso> pmurias, the Signature high level type will be implemented in Perl 6 and compiled by s1p

[16:28] <ruoso> but before that we need signatures to make other things work

[16:28] <ruoso> and that we can compile to mold code for the BIND and ACCEPTS call

[16:53] <pmurias> the default signature (*@_,*%_) is enough to make most things work

[16:54] <ruoso> pmurias, in fact... we could have a smop_s1p_defaultroutinesignature type

[16:55] <ruoso> just like defaultblocksignature

[16:55] <ruoso> pmurias, want to take that to implement?

[16:57] <ruoso> http://www.perlfoundation.org/perl6/index.cgi?smop_code_implementation

[16:58] <pmurias> i'm switching to q:* now

[16:58] <ruoso> pmurias, :)

[17:01] <ruoso> pmurias, but do you think the modelling in the wiki for the code object is ok?

[17:02] * ruoso shower &

[17:02] *** ZuLuuuuuu joined
[17:03] <pmurias> the default signature for subs is different (*@_,*%_)

[17:06] <pugs_svn> r21915 | pmurias++ | [smop] switched use * blocks to q:*

[17:07] *** kst` left
[17:08] *** kst` joined
[17:08] <ruoso> pmurias, yes... that is for routines in general... 

[17:12] <pmurias> and back should be set

[17:12] <pmurias> but otherwise i think it's correct

[17:17] <pmurias> i have some $workish things to finish so i'll try to do only blocking smop stuff for a couple of days

[17:17] *** ZuLuuuuuu left
[17:21] *** alester joined
[17:33] *** rindolf joined
[17:42] *** araujo joined
[18:05] *** kst` left
[18:05] *** kst` joined
[18:25] *** hanekomu joined
[18:33] *** Blasi joined
[18:49] *** alester left
[19:04] *** kst` left
[19:04] *** kst` joined
[19:11] *** jferrero left
[19:17] *** [particle]1 left
[19:18] *** [particle] joined
[19:26] *** jferrero joined
[19:32] *** wknight8111 joined
[19:47] *** fridim_ joined
[19:52] *** fridim_ left
[19:56] *** wknight8111 left
[20:08] *** kst` left
[20:09] *** kst` joined
[20:14] *** zamolxes joined
[20:22] *** Blasi left
[20:33] <pmurias> @tell mncharity what do you think of releasing elf to CPAN?

[20:33] <lambdabot> Consider it noted.

[20:48] <pugs_svn> r21916 | pmurias++ | [smop] converted remaining STORE to assignment

[20:49] <rindolf> Hi pmurias 

[20:54] <pmurias> rindolf: hi

[20:54] <rindolf> pmurias: what's up?

[20:54] <rindolf> pmurias: BTW, where are you from?

[20:54] <pmurias> rindolf: Poland

[20:55] <rindolf> pmurias: ah.

[20:55] <rindolf> pmurias: my grandfather was Polish in origin.

[20:55] <pmurias> rindolf: returned from YAPC::EU yesterday

[20:55] <rindolf> pmurias: ah, any highlights?

[20:55] *** cognominal_ joined
[20:55] <rindolf> pmurias: and my grandmother was born in Vilnius.

[20:58] <pmurias> rindolf: i gave my first talk

[21:00] <rindolf> pmurias: how did it go?

[21:00] <pmurias> dunno, i don't read people very well

[21:01] <rindolf> pmurias: what was the talk about?

[21:02] <pmurias> smop

[21:02] <pmurias> rindolf: did you manage to compile it yet? 

[21:02] <rindolf> pmurias: I couldn't because it requires ruby-1.9.x

[21:03] <pmurias> i'll try downporting it to ruby-1.8

[21:03] <rindolf> pmurias: thanks.

[21:05] <pmurias> rindolf: do you have ruby-1.9 in your distro?

[21:06] <rindolf> pmurias: no.

[21:08] <pmurias> the README seems to imply it's something more than a simple bug which caused the requirement, but i'll still try feebly

[21:17] <pmurias> rindolf: no luck with that, there were some minor syntax issues i can change, but i don't know how to replace the String#force_encoding method

[21:19] <rindolf> pmurias: I see.

[21:21] *** kst` left
[21:21] *** kst` joined
[21:22] *** pbuetow left
[21:32] *** rindolf left
[21:53] *** Limbic_Region joined
[21:54] *** pmurias left
[22:17] *** test34 joined
[22:17] *** test34 left
[22:41] *** kst` left
[22:42] *** kst` joined
[22:46] *** zamolxes left
[23:04] *** elmex left
[23:15] *** pjcj joined
[23:25] *** hanekomu left
[23:32] *** [particle] left
[23:32] <pugs_svn> r21917 | Auzon++ | [gsoc_spectest] added some feed tasks to TASKS. Moved feed.t into spec, and added tests. (added 16 tests)

[23:37] *** eternaleye joined
[23:40] *** [particle] joined
[23:57] *** Schwern left
