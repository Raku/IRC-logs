[00:05] *** [particle]2 joined
[00:07] *** [particle] left
[00:22] *** [particle]1 left
[00:22] *** justatheory joined
[00:32] *** justatheory left
[00:48] *** eternaleye joined
[01:06] <pugs_svn> r22501 | putter++ | [elf_h] Fixed is() trait ordering.  Tweaks.

[01:08] *** plash left
[01:13] <pugs_svn> r22502 | putter++ | [elfish/on_sbcl] Additional prelude.  macro renaming.  can(), .<> .  CL elf did -e 'say 3'.

[01:14] *** ryanc left
[01:36] *** justatheory joined
[01:46] *** hercynium joined
[02:02] <wayland76> Question: say I'm writing a function, and I have a variable called $test that is type Pair.  How do I access the key and the value?

[02:02] <wayland76> $test.value()?

[02:02] *** alester left
[02:02] *** BinGOs_ joined
[02:03] *** alester joined
[02:03] <[particle]2> yes

[02:03] *** [particle]2 is now known as [particle]

[02:03] <wayland76> yay :)

[02:06] <[particle]> $test.kv(), .key(), .value()

[02:07] <wayland76> That's what I'm after :)  I needed some way to represent an XPath-like axis while doing a tree search :)

[02:17] *** alester left
[02:18] *** BinGOs left
[02:21] <literal> what's a subset?

[02:22] <literal> ah, never mind

[02:23] <rakudo_svn> r31606 | particle++ | [rakudo] implement 'package' package declarator

[02:27] *** eternaleye left
[02:27] *** cotto left
[02:27] *** szbalint left
[02:27] *** nnunley left
[02:27] *** spinclad left
[02:27] *** Guest16015 left
[02:27] *** literal left
[02:27] *** idemal left
[02:27] *** obra left
[02:27] *** beppu left
[02:27] *** sunnavy left
[02:27] *** ewilhelm left
[02:27] *** Juerd left
[02:27] *** gbacon left
[02:27] *** eternaleye joined
[02:27] *** cotto joined
[02:27] *** gbacon joined
[02:27] *** Juerd joined
[02:27] *** literal joined
[02:27] *** sunnavy joined
[02:27] *** obra joined
[02:27] *** Guest16015 joined
[02:27] *** ewilhelm joined
[02:27] *** idemal joined
[02:27] *** spinclad joined
[02:27] *** beppu joined
[02:27] *** szbalint joined
[02:27] *** nnunley joined
[02:29] *** Limbic_Region left
[02:30] *** alester joined
[02:41] *** sri_work left
[02:44] *** plash_ joined
[02:47] *** justatheory left
[03:02] *** elmex_ joined
[03:18] *** elmex left
[03:18] *** elmex_ is now known as elmex

[03:27] *** wknight8111 left
[03:27] *** hcchien_ is now known as hcchien

[03:31] *** cls_bsd left
[04:09] *** alester left
[04:22] *** araujo left
[04:27] *** alester joined
[04:34] *** alester left
[05:13] *** Psyche^ joined
[05:26] *** Patterner left
[05:26] *** Psyche^ is now known as Patterner

[06:53] *** barney joined
[07:05] *** plash_ left
[07:11] *** barney left
[07:17] *** alanhaggai_ is now known as alanhaggai

[07:26] *** mberends joined
[07:29] *** Alias_ left
[07:34] *** plash_ joined
[08:00] *** iblechbot joined
[08:07] *** BinGOs_ is now known as BinGOs

[08:28] *** pmurias joined
[08:30] *** iblechbot left
[08:31] *** Southen_ joined
[08:50] *** Southen left
[08:58] *** clintongormley joined
[09:01] *** clintongormley left
[09:02] *** iblechbot joined
[09:07] *** [particle]1 joined
[09:25] *** [particle] left
[09:40] *** masak joined
[09:50] <pmurias> what's the state of the test functions in the Prelude proposal?

[09:52] <wayland76> Anyone know which synopsis I need to read if I want to make my *own* iterator?

[09:53] <masak> wayland76: sorry, no. have you tried grep'ing the synopses?

[10:11] <pmurias> ack is better than grep

[10:12] <pmurias> wayland76: gather maybe be what you are looking for

[10:12] <masak> pmurias: aye. I just wish I could prevent it from spewing ANSI colour codes, so I could use it from within Emacs

[10:13] <pmurias> use --nocolor or RTFM ;)

[10:13] <masak> good idea :)

[10:14] * masak makes the appropriate alias

[10:14] *** plash_ left
[10:23] <masak> pugs: say map {[*] map { $_ * 10 }, [1..$_]}, [1..5]

[10:23] <p6eval> pugs: OUTPUT[50‚ê§]

[10:24] <masak> that's gotta be wrong

[10:37] <pmurias> pugs: map { $_ * 10 }, [1..$_]

[10:37] <p6eval> pugs: RESULT[(0.0,)]

[10:37] <pmurias> pugs: map { $_ * 10 }, [1..1]

[10:37] <p6eval> pugs: RESULT[(10.0,)]

[10:38] <masak> I don't know if I agree with the first one, but certainly the second

[10:40] <pmurias> pugs: map { $_ * 10 }, [1..5]

[10:40] <p6eval> pugs: RESULT[(50.0,)]

[10:41] <pmurias> masak: pugs is correct in the example you give

[10:42] <masak> please explain.

[10:45] <pmurias> an array in numeric context turns into the number of elements

[10:46] <pmurias> map {[*] map { $_ * 10 }, [1..$_]}, [1..5] turn into

[10:46] <pmurias> [*] map { $_ * 10} [1..5]

[10:47] <pmurias> which turns into [*]([1..5] * 10) which turns into [*] 50 which turns into 50

[10:47] <masak> what forces numeric context?

[10:47] <pmurias> [1..$foo] and $foo * 10

[10:52] <masak> is there a version of my expression that does what I mean?

[11:20] <wayland76> >which ack

[11:20] <wayland76> -bash: type: ack: not found

[11:21] <wayland76> Yeah, I've been looking at gather/take

[11:21] <wayland76> But I want to iteratively walk through a tree...

[11:21] <wayland76> So I need the gather in one function, and the take in another

[11:21] <wayland76> Can I do that?

[11:22] <masak> wayland76: http://search.cpan.org/~petdance/ack-1.86/ack

[11:22] <masak> wayland76: yes, you can

[11:22] <lambdabot> Title: ack - grep-like text finder - search.cpan.org

[11:22] <masak> wayland76: a gather is dynamic

[11:22] <masak> this works in Rakudo already, since take works using exceptions

[11:23] <wayland76> Ok, great :)

[11:24] *** ruoso joined
[11:26] <wayland76> Yeah, I see ack (thanks).  But I'm planning to upgrade my Fedora as soon as the new one comes out, so I won't install it now :).  But I've bookmarked it.

[11:33] <ruoso> wayland76, iterators are under-specced at the moment...

[11:34] <wayland76> ok

[11:34] <wayland76> Are iterators a role I should implement?

[11:34] <wayland76> Should I be overriding particular functions on that role?

[11:35] <ruoso> it probably will be a role, yes... 

[11:35] <ruoso> the method is prefix:<=>

[11:36] <ruoso> which 'fail' at the end of the iterator

[11:36] <ruoso> if you're implementing a plain iterator that always return one item at a time, no matter in which context, that's fairly simple...

[11:36] <ruoso> there are other iterators that support slice context, like the iterator returned by map

[11:37] <ruoso> they are a bit more complex

[11:40] <wayland76> Ok, that gives me some idea of what to do.

[11:40] <wayland76> Now I just wish for power loops :)

[11:40] <ruoso> you might want to look at the smop map wiki

[11:40] <ruoso> wiki page, I mena

[11:41] <ruoso> *mean

[11:41] <wayland76> IKWYM

[11:41] <ruoso> wayland76, "power loops"?

[11:41] <wayland76> (I know what you mean :) )

[11:41] <wayland76> Yeah, it's a sort of iteration/recursion thing.  I'll find a page.  I read about it somewhere esoteric :)

[11:46] <wayland76> http://www.nondot.org/sabre/Mirrored/AdvProgLangDesign/finkel02.pdf

[11:46] <wayland76> Near the end

[11:46] <wayland76> I have the book of that PDF, btw :)

[11:46] <lambdabot> Title: cache:http://www.nondot.org/sabre/Mirrored/AdvProgLangDesign/finkel02.pdf - Goog ..., http://tinyurl.com/y39uw5

[11:47] <pmurias> wayland76: any way gather/take is the thing you should propably use, you should mind about Iterator role if you want to something internalish

[11:49] <wayland76> pmurias: Agreed.  Maybe I'll just code the thing now; it should be easy enough to include the iterator role later if I want :)

[11:49] <pmurias> ruoso: hi

[11:50] <ruoso> hi pmurias 

[11:54] <wayland76> (oh... hi everyone :) )

[11:54] <wayland76> Which part in particular of the SMOP page, now that I've found it?

[11:54] <ruoso> pmurias, I've been thinking at which point we should stop extending libsmop and start to think about effective runtime...

[11:54] <ruoso> http://www.perlfoundation.org/perl6/index.cgi?smop_map_operator

[11:55] <pmurias> effective runtime being?

[11:55] <ruoso> pmurias, ok, that didn't sound right...

[11:55] <ruoso> pmurias, smop is a library so far... we need an actual interpreter

[11:56] <ruoso> one that defines $*IN and $*OUT, for instance

[11:56] <ruoso> that knows how to look for libraries, that kind of stuff

[11:58] <pmurias> so what we need is some sort of executable which can read in m0ld and perl6 and run it?

[11:59] <ruoso> yeah... exactly...

[11:59] <ruoso> it might even be written in Perl 6

[11:59] <ruoso> ;)

[11:59] <ruoso> and compiled down by mildew

[12:00] <wayland76> ruoso: Wow, thanks :)

[12:01] <ruoso> wayland76, you might want to look at the map and grep tests in the smop repo

[12:01] <ruoso> wayland76, smop is the first to support lazyness in map and grep

[12:01] <wayland76> Cool.  I think I just want to use the Iterator role for now

[12:02] <wayland76> I'm attempting operator overloading, so it's not like my code compiles now (at least in rakudo, which is what I'm using at the moment)

[12:02] <ruoso> wayland76, but remember that is not part of the specs (at least not yet)

[12:03] <ruoso> wayland76, and it's certainly not rakudo-oriented...

[12:03] *** zamolxes left
[12:03] <wayland76> Sure, I agree.  But the logic of the situation presumably demands a similar solution

[12:03] <wayland76> so if I write my code, I'll probably only have to change the function names and things :)

[12:04] * ruoso brb &

[12:07] <pmurias> ruoso: is it decided yet how binding works?

[12:12] <pugs_svn> r22503 | pmurias++ | [smop] added a test for the pure prototype HOW in p6 to be compiled by mildew

[12:12] <pugs_svn> r22503 | pmurias++ | (dosn't run or compile yet)

[12:18] <pugs_svn> r22504 | pmurias++ | [STD] added $foo.^!bar()

[12:20] *** meppl joined
[12:37] *** abra joined
[12:48] *** smtms left
[12:49] *** wknight8111 joined
[13:02] *** lumi joined
[13:06] *** sri_work joined
[13:13] *** alester joined
[13:26] *** alester left
[13:27] *** hercynium left
[13:27] *** agentzh left
[13:28] *** agentzh joined
[13:29] *** kanru left
[13:30] *** kanru joined
[13:34] <wayland76> Is there an easy way to do have it so that when I call a function on an object, it run somthing like { ancestor setup code } {descendant code } {ancestor cleanup code} ?

[13:43] <wayland76> If $axes is an iterator, and $usetest is a Matcher function, and I've defined a prefix:<=> on my iterator, can I do this...

[13:43] <wayland76> @nodes ==> map { =$axes ==> grep $usetest; };

[13:43] <lambdabot> Unknown command, try @list

[13:43] <wayland76> ?

[13:47] *** Bzek joined
[13:54] <masak> wayland76: lambdabot does that. it knows lambdabot commands look like '@' at start-of-line, but it doesn't know Perl 6

[13:54] *** plash_ joined
[13:55] <masak> wayland76: your first question sounds like ordinary delegation to base class methods -- no problem, in other words

[13:55] <masak> I'm very doubtful about your code example, even though I think I know what you're getting at. can't tell if what's within the braces is legal Perl 6 or not

[14:06] *** dalek left
[14:07] *** [particle]1 left
[14:07] *** elmex left
[14:07] *** nnunley left
[14:07] *** szbalint left
[14:07] *** spinclad left
[14:07] *** cotto left
[14:07] *** Guest16015 left
[14:07] *** literal left
[14:07] *** idemal left
[14:07] *** obra left
[14:07] *** beppu left
[14:07] *** sunnavy left
[14:07] *** ewilhelm left
[14:07] *** Juerd left
[14:07] *** gbacon left
[14:07] *** eternaleye left
[14:07] *** plash_ left
[14:07] *** scrottie left
[14:07] *** ting left
[14:07] *** jfredett left
[14:07] *** allbery_b left
[14:07] *** sri_work left
[14:07] *** Southen_ left
[14:07] *** Ehtyar left
[14:07] *** bennymack left
[14:07] *** charsbar_ left
[14:07] *** cxreg left
[14:07] *** xinming left
[14:07] *** jiing_ left
[14:07] *** avar left
[14:07] *** abra left
[14:07] *** iblechbot left
[14:07] *** hcchien left
[14:07] *** PZt left
[14:07] *** Khisanth left
[14:07] *** pmichaud left
[14:07] *** preflex left
[14:07] *** mj41_ left
[14:07] *** kolibrie left
[14:07] *** c1sung left
[14:07] *** TimToady left
[14:07] *** falesca left
[14:07] *** ilbot2 left
[14:07] *** sirhc left
[14:07] *** xuser left
[14:07] *** Caelum left
[14:07] *** buubot left
[14:07] *** IRSeekBot left
[14:07] *** Bzek left
[14:07] *** wknight8111 left
[14:07] *** yves left
[14:07] *** japhb left
[14:07] *** rakudo_svn left
[14:07] *** Guest70230 left
[14:07] *** jiing left
[14:07] *** pasteling left
[14:07] *** zostay left
[14:07] *** clkao_ left
[14:07] *** alanhaggai left
[14:07] *** aindilis` left
[14:07] *** Lorn left
[14:07] *** pugs_svn left
[14:07] *** Tene left
[14:07] *** rhr left
[14:07] *** SamB left
[14:07] *** diakopter left
[14:07] *** cj left
[14:07] *** integral left
[14:07] *** mberends left
[14:07] *** kcwu left
[14:07] *** yahooooo left
[14:07] *** simcop2387 left
[14:07] *** wolverian left
[14:07] *** p6eval left
[14:07] *** baest_ left
[14:07] *** fullermd left
[14:07] *** arguile left
[14:07] *** buu left
[14:07] *** Maddingue left
[14:07] *** r0bby left
[14:07] *** lambdabot left
[14:07] *** tcliou left
[14:07] *** cookys left
[14:07] *** rafl left
[14:07] *** PerlJam left
[14:07] *** Grrrr left
[14:07] *** REPLeffect left
[14:07] *** johto left
[14:07] *** jjore left
[14:07] *** jrockway left
[14:07] *** betterworld left
[14:07] *** moritz_ left
[14:07] *** LCamel left
[14:08] *** dalek joined
[14:09] *** TimToady joined
[14:09] *** plash_ joined
[14:09] *** Bzek joined
[14:09] *** sri_work joined
[14:09] *** wknight8111 joined
[14:09] *** abra joined
[14:09] *** [particle]1 joined
[14:09] *** iblechbot joined
[14:09] *** Southen_ joined
[14:09] *** mberends joined
[14:09] *** elmex joined
[14:09] *** nnunley joined
[14:09] *** szbalint joined
[14:09] *** beppu joined
[14:09] *** spinclad joined
[14:09] *** idemal joined
[14:09] *** ewilhelm joined
[14:09] *** Guest16015 joined
[14:09] *** obra joined
[14:09] *** sunnavy joined
[14:09] *** literal joined
[14:09] *** Juerd joined
[14:09] *** gbacon joined
[14:09] *** cotto joined
[14:09] *** eternaleye joined
[14:09] *** Ehtyar joined
[14:09] *** hcchien joined
[14:09] *** clkao_ joined
[14:09] *** kcwu joined
[14:09] *** cj joined
[14:09] *** alanhaggai joined
[14:09] *** PZt joined
[14:09] *** tcliou joined
[14:09] *** aindilis` joined
[14:09] *** scrottie joined
[14:09] *** Khisanth joined
[14:09] *** yahooooo joined
[14:09] *** simcop2387 joined
[14:09] *** Lorn joined
[14:09] *** bennymack joined
[14:09] *** yves joined
[14:09] *** charsbar_ joined
[14:09] *** betterworld joined
[14:09] *** cxreg joined
[14:09] *** jiing_ joined
[14:09] *** avar joined
[14:09] *** xinming joined
[14:09] *** jfredett joined
[14:09] *** irc.freenode.net sets mode: +o TimToady

[14:09] *** allbery_b joined
[14:09] *** ting joined
[14:09] *** pmichaud joined
[14:09] *** cookys joined
[14:09] *** wolverian joined
[14:09] *** rafl joined
[14:09] *** japhb joined
[14:09] *** pugs_svn joined
[14:09] *** PerlJam joined
[14:09] *** preflex joined
[14:09] *** mj41_ joined
[14:09] *** p6eval joined
[14:09] *** kolibrie joined
[14:09] *** ilbot2 joined
[14:09] *** IRSeekBot joined
[14:09] *** c1sung joined
[14:09] *** buubot joined
[14:09] *** sirhc joined
[14:09] *** Caelum joined
[14:09] *** falesca joined
[14:09] *** xuser joined
[14:09] *** baest_ joined
[14:09] *** Tene joined
[14:09] *** jiing joined
[14:09] *** zostay joined
[14:09] *** SamB joined
[14:09] *** REPLeffect joined
[14:09] *** integral joined
[14:09] *** lambdabot joined
[14:09] *** pasteling joined
[14:09] *** Guest70230 joined
[14:09] *** rakudo_svn joined
[14:09] *** johto joined
[14:09] *** LCamel joined
[14:09] *** fullermd joined
[14:09] *** moritz_ joined
[14:09] *** r0bby joined
[14:09] *** rhr joined
[14:09] *** jrockway joined
[14:09] *** Grrrr joined
[14:09] *** buu joined
[14:09] *** diakopter joined
[14:09] *** Maddingue joined
[14:09] *** arguile joined
[14:09] *** jjore joined
[14:10] *** AzureStone joined
[14:24] *** AzureStone_ left
[14:25] *** kanru left
[14:25] *** kanru joined
[14:39] *** kulp joined
[14:55] *** smtms joined
[15:13] *** masak left
[15:13] *** wayland76 left
[15:13] *** apeiron left
[15:13] *** meteorjay left
[15:13] *** bennymac1 left
[15:13] *** pjcj left
[15:13] *** s1n left
[15:14] *** pjcj joined
[15:17] *** masak joined
[15:17] *** wayland76 joined
[15:17] *** apeiron joined
[15:17] *** meteorjay joined
[15:17] *** s1n joined
[15:17] *** bennymac1 joined
[15:17] *** nothingmuch joined
[15:28] *** jferrero joined
[15:29] *** abra left
[15:37] *** alanhaggai left
[15:45] *** MXIIA joined
[15:45] *** MXIIA left
[15:54] *** jhorwitz joined
[15:56] <rakudo_svn> r31622 | pmichaud++ | [rakudo]:  spectest-progress.csv update: 200 files, 4437 passing tests

[15:58] *** ruoso left
[16:04] *** alanhaggai joined
[16:06] *** jan_ left
[16:10] <pugs_svn> r22505 | pmurias++ | [smop] stylistic fix - removed silly mold temporary variables

[16:10] *** zamolxes joined
[16:27] *** alanhaggai_ joined
[16:28] *** alanhaggai left
[16:28] *** alanhaggai_ is now known as alanhaggai

[16:57] *** araujo joined
[16:58] *** jan_ joined
[17:02] *** Caelum left
[17:06] *** cls_bsd joined
[17:32] *** Bzek left
[18:10] *** plash_ left
[18:12] *** jferrero left
[18:57] *** smtms left
[19:28] *** azawawi joined
[19:32] *** justatheory joined
[19:36] *** justatheory left
[19:41] *** kulp_ joined
[19:42] <rakudo_svn> r31625 | julianalbo++ | add a missing pop_eh in perl6 initialization

[19:58] *** kulp left
[20:08] *** justatheory joined
[20:11] *** justatheory left
[20:15] <azawawi> @seen pmichaud

[20:15] <lambdabot> pmichaud is in #perl6. I last heard pmichaud speak 1d 6h 6m 4s ago.

[20:16] *** kulp_ is now known as kulp

[20:33] <azawawi> @seen moritz_

[20:33] <lambdabot> moritz_ is in #perl6. I last heard moritz_ speak 1d 10h 42m 3s ago.

[20:34] *** azawawi left
[20:39] *** kulp left
[20:42] *** smtms joined
[21:08] <pugs_svn> r22506 | lwall++ | [STD] unbreak $obj.^foo

[21:11] *** aindilis` left
[21:18] *** kst```` left
[21:18] *** kst```` joined
[21:20] <pmurias> TimToady: sorry for the bug, i should think twice before comitting

[21:24] <TimToady> np, I still believe in forgiveness over permission

[21:25] <pmurias> i should run make test before comitting?

[21:25] <TimToady> well, that takes a while, and testt takes even longer, and I do it periodically anyway

[21:26] <TimToady> and it was pretty obvious where to look for the bug. :)

[21:26] <TimToady> so either way is fine

[21:28] <TimToady> I'd much rather have progress, regardless of whether it's 1 step at a time or 3-steps-forward-2-steps-back at a time.  :)

[21:29] <masak> TimToady++

[21:56] *** alester joined
[21:57] *** alester left
[22:09] *** alester joined
[22:16] *** alester left
[22:16] *** pmurias left
[22:16] *** alester joined
[22:20] *** ofer joined
[22:45] *** alester left
[22:50] *** eternaleye_ joined
[22:52] *** ofer left
[22:53] *** araujo_ joined
[22:54] *** eternaleye left
[22:54] *** araujo left
[22:54] *** araujo_ left
[22:54] *** araujo joined
[22:56] *** kst```` left
[22:56] *** kst```` joined
[22:58] *** iblechbot left
[23:07] *** Jedai joined
[23:09] *** Jedai left
[23:17] *** jhorwitz left
[23:26] *** alester joined
[23:55] *** Jedai joined
[23:59] *** hercynium joined
