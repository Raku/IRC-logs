[00:04] *** Alias_ left
[00:04] *** Alias_ joined
[00:07] *** bacek joined
[00:31] <TimToady> ruoso: "These variables are compile-time aliases to $+! and $+/"

[00:31] <TimToady> no, they can't be

[00:31] <ruoso> what's the difference?

[00:32] <TimToady> $+ is short fot $CALLER:: and excludes the one in the current scope

[00:32] <TimToady> $+! can only refer to one of your caller's $! variables

[00:32] <TimToady> and since $! is defined in every scope, it's always the first caller

[00:33] <ruoso> but when you set $! it propagates to the caller,

[00:33] <TimToady> no

[00:33] * ruoso missed something...

[00:33] <TimToady> more likely, fail() sets CALLER::CALLER::<$!>

[00:34] <TimToady> if you want to set your caller's $! directly, you must set $+!

[00:34] <ruoso> hm... I think I got it...

[00:34] <TimToady> the whole point of giving each scope it's own copy of these variables is to keep them straight; there can be no aliasing

[00:35] <TimToady> many of P5's problems stem from too many routines trying to deal with global $_ and $!

[00:37] <TimToady> anyway, context vars never use the + in their own scope, but just the bare variable

[00:37] <ruoso> and functions that read by line lookup $+/ to see the contextual setting for that variable

[00:37] <TimToady> which is especially important since the rw-ness differs from $foo and $+foo

[00:37] * araujo greets TimToady 

[00:40] <TimToady> ruoso: I don't follow that last idea

[00:41] * TimToady greets araujo right back

[00:41] <araujo> :-]

[00:42] * ruoso confusing $/ meaning...

[00:42] <ruoso> but anyway...

[00:42] <ruoso> a regex call sets $+/ which is then available in the caller...

[00:44] <ruoso> the same way that happens with $!

[00:44] <TimToady> yes

[00:49] <TimToady> bbl & # dinner

[00:51] *** Exodist left
[00:55] *** nipotaway is now known as nipotan

[00:56] *** alester joined
[00:57] *** aindilis left
[00:59] <ruoso> TimToady, do every block define $! and $/? or are just Routines that define them?

[01:01] <ruoso> pugs: { my $a = "foo"; { $a ~~ /o/ }; say $/ };

[01:01] <p6eval> pugs: OUTPUT[Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/evalenv/pugs/perl5/Pugs-Compiler-Rule/lib';␤    unshift @INC, '/home/evalenv/pugs/third-party/Parse-Yapp/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runti...

[01:03] <ruoso> rakudo: { my $a = "foo"; { $a ~~ /o/ }; say $/ };

[01:03] <p6eval> rakudo 29834: OUTPUT[Null PMC access in get_string()␤current instr.: 'print' pc 12259 (src/gen_builtins.pir:7802)␤]

[01:03] <ruoso> rakudo: { my $a = "foo"; { $a ~~ /o/; say $/ }; };

[01:03] <audreyt> pugs: { my $a = "foo"; { $a ~~ m:P5/o/ }; say $/ }

[01:04] <p6eval> rakudo 29834: OUTPUT[o␤]

[01:04] <p6eval> pugs: OUTPUT[o␤]

[01:04] <ruoso> so it seems that $/ is defined by routines and not by every code

[01:04] <ruoso> so CALLER is not simply each code... but each routine

[01:06] <audreyt> sub f { if 1 { g() } }

[01:06] <audreyt> for &g, the caller is f, not the if block, afaik.

[01:07] <ruoso> that actually makes things much more complicated

[01:07] <audreyt> what you have in mind is context()

[01:08] <audreyt> see S06:2113, S06:1958

[01:08] <audreyt> caller() is a filtered context, so to speak.

[01:08] <audreyt> it discard the non-routine parts

[01:09] <audreyt> does that make things easier?

[01:09] <ruoso> yeah... it does...

[01:10] <ruoso> but maybe we should store the enclosing routine for each context

[01:10] <audreyt> *nod*

[01:10] <audreyt> bbiab

[01:21] *** nixfu joined
[01:21] *** nixfu left
[01:21] *** nixfu joined
[01:22] *** jferrero left
[01:24] *** nixfu left
[01:34] *** cmarcelo left
[01:42] *** Limbic_Region left
[01:42] *** cathyal left
[01:52] *** sri_work left
[02:08] *** justatheory left
[02:12] *** whereiskurt joined
[02:25] *** wknight8111 left
[02:53] *** hercynium left
[03:02] *** elmex_ joined
[03:07] *** Caelum_ joined
[03:18] *** elmex left
[03:18] *** elmex_ is now known as elmex

[03:19] *** hercynium joined
[03:20] *** [particle]1 joined
[03:46] <whereiskurt> ?eval say "What does TimToady eat for dinner? :-)"

[03:48] *** [particle] joined
[03:58] *** hercynium left
[04:05] *** [particle]1 left
[04:13] *** fridim_ joined
[04:17] *** [particle]1 joined
[04:23] *** dduncan joined
[04:33] *** [particle] left
[04:34] *** fridim__ joined
[04:37] *** alanhaggai joined
[04:48] *** fridim_ left
[05:17] *** gaal joined
[05:18] <gaal> ruoso: you were looking at Signature objects? Perl6::Signature on cpan

[05:18] <lambdabot> gaal: You have 1 new message. '/msg lambdabot @messages' to read it.

[05:18] <gaal> ported from pugs

[05:18] <gaal> more or less

[05:19] <gaal> and nothingmuch++ and clkao++ have insane glue to make those actually available as sub declarations in perl5

[05:20] <gaal> hmmm though apparently that's not on cpan yet?

[05:29] *** fridim_ joined
[05:41] *** Psyche^ joined
[05:41] *** fridim__ left
[05:59] *** Psyche^ is now known as Patterner

[06:02] *** Ara4n joined
[06:03] *** Arathorn left
[06:12] *** BinGOs left
[06:20] *** BinGOs joined
[06:21] *** xinming_ joined
[06:22] *** pbuetow joined
[06:27] *** fridim_ left
[06:27] *** fridim_ joined
[06:38] *** alester left
[06:40] *** bacek_ joined
[06:42] <audreyt> it's http://code2.0beta.co.uk/moose/svn/Perl6-Signature/trunk/

[06:42] <lambdabot> Title: Revision 5096: /Perl6-Signature/trunk

[06:43] *** xinming joined
[06:49] *** bacek left
[06:52] *** ashizawa joined
[06:56] *** xinming_ left
[07:01] *** bacek_ left
[07:07] *** [particle] joined
[07:11] *** araujo left
[07:12] *** [particle]1 left
[07:12] *** [particle]1 joined
[07:14] <nothingmuch> gaal: in moose + jifty repos I think

[07:15] *** macroron joined
[07:22] *** xinming left
[07:23] *** barney joined
[07:25] *** xinming joined
[07:28] *** [particle] left
[07:35] *** pbuetow_ joined
[07:36] *** pbuetow left
[07:40] *** luqui joined
[07:46] *** araujo joined
[07:47] *** araujo left
[07:47] *** araujo joined
[07:49] *** bacek joined
[07:53] *** masak joined
[07:57] *** charsbar_ joined
[07:57] *** charsbar left
[08:08] *** pbuetow_ left
[08:08] *** pbuetow joined
[08:10] <pugs_svn> r21789 | lwall++ | [STD vs t] more Mutually Assured Construction

[08:11] <audreyt> *lol*

[08:11] *** barney left
[08:15] *** bacek left
[08:36] <clkao> gaal: perl6::declare

[08:37] <clkao> i was expecting more craziness for yapceu but nothingmuch is bailing out

[08:38] *** dmq joined
[08:38] *** eternaleye left
[08:45] <masak> hm, is there an 'is inline' trait on subs?

[08:46] *** fridim__ joined
[08:57] <audreyt> Yes, S06:1681

[08:59] *** jferrero joined
[09:00] <masak> audreyt: thanks

[09:00] *** fridim_ left
[09:10] <pugs_svn> r21790 | audreyt++ | * Pugs.Lexer: "\d123" must now be written as "\c123" according to S02 v133.

[09:13] <dduncan> on that note, what word does the 'c' refer to?

[09:14] *** ludan joined
[09:14] <dduncan> eg, how is a c for base-10 or decimal self-documenting?

[09:14] <dduncan> or is it deCimal?

[09:14] <ludan> hi

[09:15] <Tene> hi ludan

[09:16] *** dduncan left
[09:17] *** tcliou left
[09:17] *** tcliou joined
[09:18] *** wknight8111 joined
[09:20] <Patterner> c)haracter?

[09:21] *** macroron left
[09:21] <masak> feels like a category error next to \b, \x and \o, in that case

[09:35] <gaal> Moose!

[09:39] <speckbot> r14571 | audreyt++ | * S02: A few more C<...> an C<<...>> blocks, Contributed by John M. Dlugosz++.

[09:39] *** ludanolo joined
[09:42] *** ludan left
[09:42] *** wknight8111 left
[09:44] <speckbot> r14572 | audreyt++ | * Typo spotted by John M. Dlugosz++:

[09:44] <speckbot> r14572 | audreyt++ | 

[09:44] <speckbot> r14572 | audreyt++ |       method close is export () { ... }  # Wrong

[09:44] <speckbot> r14572 | audreyt++ |       method close () is export { ... }  # Right

[09:53] <audreyt> it means we've moved from decimal to centimal ;)

[09:55] <masak> 100t!

[09:57] *** ludanolo left
[10:07] * ruoso work &

[10:07] *** ruoso left
[10:15] *** zamolxes joined
[10:15] *** zamolxes left
[10:37] *** audreyt_ joined
[10:38] *** ashizawa left
[10:43] *** ludan joined
[10:44] <gaal> For any base, you're always at base 10. Except unary.

[10:49] *** audreyt left
[10:56] *** fridim_ joined
[10:57] <audreyt_> gaal++ # That's true even for quater-imaginary bases

[10:57] *** audreyt_ is now known as audreyt

[11:03] *** ruoso joined
[11:10] *** fridim__ left
[11:20] *** nipotan is now known as nipotaway

[11:20] *** fridim_ left
[11:54] <avar> audreyt++ # Yay, she's back!

[11:54] <lambdabot> avar: You have 1 new message. '/msg lambdabot @messages' to read it.

[11:54] <avar> lambdabot: @messages

[11:54] <lambdabot> audreyt said 22h 17m 45s ago: http://community.haskell.org/~audreyt/re-engine-TRE-0.05.tar.gz # should build everywhere

[11:54] <avar> Yeah I saw that, the OBJECT= stuff works but I'm a bit afraid of modifying the gettext stuff

[11:54] <avar> still, I guess it's needed, win32 doesn't have libint.h or whatever that gnu stuff was

[11:59] *** kanru left
[12:03] <gaal> So... still no luck with the smoke. Once a single test hits the timeout, subsequent ones all time out.

[12:04] <gaal> I've added a ghetto "killall pugs" when the test doesn't terminate on time (getting the pid of the real bad pugs is tricky, as it's created deep in the harness)

[12:05] <gaal> anyone know a portable way to get all my child pids + their $*PROGRAM_NAMEs?

[12:07] <ruoso> gaal, I'm pretty sure there isn't one

[12:08] <ruoso> except for libraries that abstract different implementations

[12:09] * gaal looks at the plumbing

[12:14] <gaal> beh, we'd need a patch to Straps.pm:651 to record the pid

[12:15] <gaal> straps uses global filehandles, joy :/

[12:16] <gaal> Maybe it's time for T::T::Model to use TAP::Parser... let's see if that's any better.

[12:18] * gaal growls. Straps calls itself obsolete and directs us to TAP::Parser,, but TAP::Parser doesn't come with something that actually runs a test.

[12:20] <avar> gaal: how do you make the kids? fork?

[12:20] <gaal> open |

[12:20] <avar> the only portable way is making a record when you make the kids

[12:20] <avar> ew

[12:20] <gaal> which returns a pid, iirc

[12:20] <gaal> open | is actually pretty portable.

[12:26] *** cmarcelo joined
[12:26] *** wknight8111 joined
[12:36] *** bbkr left
[12:42] *** REPLeffect left
[12:57] *** zamanfou left
[13:08] *** alester joined
[13:09] *** [particle]1 is now known as [particle]

[13:10] *** kanru joined
[13:11] *** alester left
[13:17] *** jferrero left
[13:30] *** jhorwitz joined
[13:35] <gbacon> in the Pugs build, are the profiling libraries strictly necessary?

[13:36] <gbacon> INSTALL talks about a prof make target, but is that not required?

[13:37] <gaal> I doubt they're required.

[13:37] *** a-jing joined
[13:38] *** a-jing left
[13:38] <gaal> But I recommend trying :)

[13:39] <audreyt> "make prof" should now do a ./Setup configure -p --user

[13:39] <audreyt> and then ./Setup build

[13:39] <audreyt> feel free to hack it in. :)

[13:39] <audreyt> gbacon: do you have a commit bit?

[13:43] <masak> how do I get the name of the Role that results from a <=> or a cmp?

[13:44] <masak> perl6: say (3 <=> 5).WHAT

[13:44] <p6eval> rakudo 29834: OUTPUT[Order␤]

[13:44] <p6eval> ..elf 21790, pugs: OUTPUT[Int␤]

[13:44] <masak> rakudo gives Order, but I'd like to get "Increasing" somehow

[13:47] <masak> ah, .perl

[13:47] <masak> perl6: say (3 <=> 5).perl

[13:47] <gbacon> audreyt: yes!

[13:47] <p6eval> rakudo 29834: OUTPUT[Order::Increase␤]

[13:47] <p6eval> ..elf 21790, pugs: OUTPUT[-1␤]

[13:48] <gbacon> audreyt: right, but running perl Makefile.PL runs cabal install -p

[13:49] <audreyt> yes, "just in case"

[13:49] <audreyt> a better way would be when you "make prof"

[13:49] <audreyt> go back and detect and re-build the libraries taht needs to be profiled

[13:49] <audreyt> try hacking Makefile.PL line 167ish and add a "pugs-prof" target?

[13:49] <audreyt> and you can take off the default -p in Makefile.PL

[13:49] <audreyt> makes sense?

[13:50] * gbacon nods

[13:50] *** TJCRI joined
[13:52] <gbacon> audreyt: I dug through the svn logs, but I'm still very curious as to how you fixed the "invalid grammar category" error that we were getting when trying to build the prelude

[13:53] <pasteling> "rhr" at 65.94.11.172 pasted "pugs' Makefile.PL fails" (44 lines, 2.3K) at http://sial.org/pbot/31806

[13:53] <rhr> is anyone else getting this error?

[13:59] <gbacon> rhr: you might try installing cabal-install by hand

[14:00] <rhr> I tried that, it doesn't help :(

[14:06] *** charsbar_ left
[14:06] *** charsbar joined
[14:06] *** tcliou left
[14:06] *** tcliou joined
[14:07] <audreyt> rhr: oy.

[14:07] <audreyt> if you can, rm -rf ~/.cabal and ~/.ghc and perl Makefile.PL again

[14:07] <audreyt> most likely though, "ghc-pkg unregister --user zlib" would be sufficient.

[14:08] <audreyt> (or "ghc-pkg unregister zlib")

[14:09] <audreyt> sorry for being mostly away... preparing for a job interview coming up in 1.5 hours

[14:12] <rhr> audreyt: I have a working pugs from a few days ago, so no hurry :)

[14:12] <audreyt> okies :)

[14:19] <rhr> audreyt: the rm method worked, thanks.  have a good interview!

[14:19] <audreyt> thanks!

[14:20] *** AndyAway is now known as alester

[14:23] *** Exodist joined
[14:32] *** zamolxes joined
[14:49] *** kanru left
[14:52] *** [particle]1 joined
[14:53] *** hercynium joined
[14:59] *** Lorn joined
[14:59] *** alanhaggai left
[15:03] *** [particle] left
[15:15] *** kanru joined
[15:38] *** sri_work joined
[15:40] *** gnuvince joined
[15:40] <gnuvince> @seen audreyt 

[15:40] <lambdabot> audreyt is in #xmonad, #ghc, #haskell and #perl6. I last heard audreyt speak 1h 21m 8s ago.

[15:47] <audreyt> yes?

[15:47] <gbacon> audreyt: good interview?

[15:48] <[particle]1> i'm expecting her to reply, "actually, i'm in it now :)"

[15:48] *** [particle]1 is now known as [particle]

[15:49] <audreyt> actually I'm in it now.

[15:49] <[particle]> :P

[15:50] <gnuvince> audreyt: nothing, I was just very happy to see you were back when I read that blog post of yours last week.

[15:53] *** ludan left
[15:53] *** dmq left
[15:53] *** araujo left
[15:53] *** gaal left
[15:53] *** jfredett left
[15:53] *** kanru left
[15:53] *** tcliou left
[15:53] *** wknight8111 left
[15:54] *** Lunchy_ left
[15:54] *** yath_ left
[15:54] *** pengrate_ left
[15:54] *** Juerd left
[15:54] *** gnuvince left
[15:54] *** bloonix left
[15:54] *** perlbot left
[15:54] *** BinGOs left
[15:54] *** funktio left
[15:54] *** smtms left
[15:54] *** frobnitz left
[15:54] *** s1n left
[15:54] *** nnunley left
[15:54] *** sri_work left
[15:54] *** hercynium left
[15:54] *** p6eval left
[15:54] *** TreyHarris left
[15:54] *** ingy left
[15:54] *** jrockway left
[15:54] *** spinclad left
[15:54] *** moritz_ left
[15:54] *** thepler left
[15:54] *** [particle] left
[15:54] *** masak left
[15:54] *** cognominal_ left
[15:54] *** Guest16015 left
[15:54] *** ilbot2 left
[15:54] *** gbacon left
[15:54] *** lisppaste3 left
[15:54] *** Lorn left
[15:54] *** Exodist left
[15:54] *** audreyt left
[15:54] *** pbuetow left
[15:54] *** luqui left
[15:54] *** xinming left
[15:54] *** Caelum_ left
[15:54] *** whereiskurt left
[15:54] *** kane_ left
[15:54] *** orafu left
[15:54] *** zamolxes left
[15:54] *** charsbar left
[15:54] *** cmarcelo left
[15:54] *** Ara4n left
[15:54] *** pmichaud left
[15:54] *** simcop2387 left
[15:54] *** leto left
[15:54] *** smg left
[15:54] *** les left
[15:54] *** mj41_ left
[15:54] *** PZt left
[15:54] *** pasteling left
[15:54] *** cookys left
[15:54] *** nothingmuch left
[15:54] *** kolibrie left
[15:54] *** lumi left
[15:54] *** arguile left
[15:54] *** Maddingue left
[15:54] *** ptman left
[15:54] *** IRSeekBot left
[15:54] *** LCamel left
[15:54] *** dalek left
[15:54] *** r0bby left
[15:54] *** ruoso left
[15:54] *** pjcj left
[15:54] *** pugs_svn left
[15:54] *** alester left
[15:54] *** speckbot left
[15:54] *** Grrrr left
[15:54] *** kcwu left
[15:54] *** jhorwitz left
[15:54] *** elmex left
[15:54] *** Alias_ left
[15:54] *** mtve left
[15:54] *** PerlJam left
[15:54] *** yahooooo left
[15:54] *** cj left
[15:54] *** nipotaway left
[15:54] *** sunnavy left
[15:54] *** clkao left
[15:54] *** obra left
[15:54] *** Tene left
[15:54] *** integral left
[15:56] *** cls_bsd_ joined
[15:56] *** gnuvince joined
[15:56] *** kanru joined
[15:56] *** tcliou joined
[15:56] *** wknight8111 joined
[15:56] *** BinGOs joined
[15:56] *** Lunchy_ joined
[15:56] *** broquaint joined
[15:56] *** japhb joined
[15:56] *** felipe joined
[15:56] *** viklund joined
[15:56] *** pengrate_ joined
[15:56] *** perlbot joined
[15:56] *** bloonix joined
[15:56] *** Juerd joined
[15:56] *** yath_ joined
[15:56] *** funktio joined
[15:56] *** Jedai joined
[15:56] *** Alias__ joined
[15:56] *** ludan joined
[15:56] *** dmq joined
[15:56] *** araujo joined
[15:56] *** gaal joined
[15:56] *** jfredett joined
[15:56] *** avar joined
[15:56] *** rafl joined
[15:57] *** cosimo joined
[16:02] *** sri_work joined
[16:02] *** avar left
[16:02] *** rafl left
[16:02] *** Tene joined
[16:02] *** TreyHarris joined
[16:02] *** spinclad joined
[16:02] *** ingy joined
[16:02] *** moritz_ joined
[16:02] *** jrockway joined
[16:02] *** jjore joined
[16:02] *** SamB joined
[16:02] *** p6eval joined
[16:02] *** hercynium joined
[16:02] *** jhorwitz joined
[16:02] *** Alias_ joined
[16:02] *** rafl joined
[16:02] *** cls_bsd joined
[16:02] *** apeiron joined
[16:02] *** avar joined
[16:02] *** integral joined
[16:02] *** cj joined
[16:02] *** nipotaway joined
[16:02] *** mtve joined
[16:02] *** yahooooo joined
[16:02] *** PerlJam joined
[16:02] *** sunnavy joined
[16:02] *** clkao joined
[16:02] *** obra joined
[16:02] *** irc.freenode.net sets mode: +o Tene

[16:03] *** avar left
[16:03] *** jhorwitz left
[16:03] *** jhorwitz joined
[16:03] *** elmex joined
[16:03] *** Lorn joined
[16:03] *** Exodist joined
[16:03] *** audreyt joined
[16:03] *** pbuetow joined
[16:03] *** xinming joined
[16:03] *** Caelum_ joined
[16:03] *** whereiskurt joined
[16:03] *** c1sung joined
[16:03] *** jan__ joined
[16:03] *** hcchien joined
[16:03] *** meteorjay joined
[16:03] *** Khisanth joined
[16:03] *** kane_ joined
[16:03] *** orafu joined
[16:03] *** mtve left
[16:03] *** zamolxes joined
[16:03] *** charsbar joined
[16:03] *** cmarcelo joined
[16:03] *** Ara4n joined
[16:03] *** pmichaud joined
[16:03] *** simcop2387 joined
[16:03] *** allbery_b joined
[16:03] *** idemal joined
[16:03] *** cotto-work joined
[16:03] *** mofino joined
[16:03] *** les joined
[16:03] *** mj41_ joined
[16:03] *** PZt joined
[16:03] *** leto joined
[16:03] *** smg joined
[16:03] *** cookys joined
[16:03] *** pasteling joined
[16:03] *** obra left
[16:03] *** clkao left
[16:03] *** sunnavy left
[16:03] *** ingy left
[16:04] *** [particle] joined
[16:04] *** masak joined
[16:04] *** cognominal_ joined
[16:04] *** fullermd joined
[16:04] *** gbacon joined
[16:04] *** lisppaste3 joined
[16:04] *** Guest16015 joined
[16:04] *** ilbot2 joined
[16:04] *** jrockway left
[16:04] *** apeiron left
[16:04] *** p6eval left
[16:04] *** p6eval joined
[16:04] *** TimToady joined
[16:04] *** nothingmuch joined
[16:04] *** lambdabot joined
[16:04] *** Southen joined
[16:04] *** r0bby joined
[16:04] *** dalek joined
[16:04] *** ptman joined
[16:04] *** LCamel joined
[16:04] *** lumi joined
[16:04] *** arguile joined
[16:04] *** kolibrie joined
[16:04] *** Maddingue joined
[16:04] *** IRSeekBot joined
[16:04] *** irc.freenode.net sets mode: +o TimToady

[16:05] *** yahooooo left
[16:05] *** PerlJam left
[16:05] *** apeiron joined
[16:05] *** yahooooo joined
[16:05] *** PerlJam joined
[16:05] *** obra joined
[16:05] *** clkao joined
[16:05] *** sunnavy joined
[16:05] *** ingy joined
[16:05] *** speckbot joined
[16:05] *** kcwu joined
[16:05] *** Grrrr joined
[16:05] *** AzureStone joined
[16:05] *** alester joined
[16:05] *** pugs_svn joined
[16:05] *** pjcj joined
[16:05] *** ruoso joined
[16:05] *** frobnitz joined
[16:05] *** smtms joined
[16:05] *** rhr joined
[16:05] *** silug joined
[16:05] *** szbalint joined
[16:05] *** s1n joined
[16:05] *** nnunley joined
[16:05] *** thepler joined
[16:05] *** mtve joined
[16:05] *** jrockway joined
[16:05] *** avar joined
[16:05] *** rafl_ joined
[16:05] *** cls_bsd left
[16:05] *** rafl left
[16:05] *** moritz_ left
[16:05] *** TreyHarris left
[16:06] *** Tene_ joined
[16:06] *** spinclad_ joined
[16:06] *** moritz_ joined
[16:08] *** eternaleye joined
[16:08] *** cj left
[16:09] *** Tene left
[16:10] *** spinclad left
[16:10] *** justatheory joined
[16:11] *** masak left
[16:12] *** Alias_ left
[16:15] *** zamolxes left
[16:17] *** [particle]1 joined
[16:17] *** iblechbot joined
[16:26] *** cjfields joined
[16:34] *** [particle] left
[16:48] *** REPLeffect joined
[16:50] *** iblechbot left
[17:14] *** AzureStone left
[17:19] *** barney joined
[17:33] *** jferrero joined
[17:43] *** pmurias joined
[17:43] *** barney left
[17:43] <pmurias> ruoso: hi

[17:43] <lambdabot> pmurias: You have 3 new messages. '/msg lambdabot @messages' to read them.

[17:43] <ruoso> hi pmurias 

[17:44] <pmurias> ruoso: how long does the SMOP talk take you?

[17:44] <ruoso> it took me a little more than half an hour

[17:47] <gbacon> audreyt: would you prefer to keep profiling enabled in the default pugs build?

[17:47] <audreyt> gbacon: no, I don't think so

[17:48] <audreyt> esp. on some platform prof and thread are mut. excl.

[17:48] <audreyt> and I'd much rather thread than prof

[17:49] <pmurias> ruoso: did anyone ask about polymorphic eval? ;)

[17:50] <ruoso> pmurias, not really.. .but the audience was not as qualified as I would expect in yapc::eu

[17:51] *** zamolxes joined
[17:53] <pmurias> i'll read a bit about Glib or choose a different example

[17:54] <audreyt> yay I got the job. :) see you tomorrow *wave*

[17:54] <pmurias> *wave*

[18:06] <[particle]1> congrats audreyt

[18:08] *** justatheory left
[18:09] <pugs_svn> r21791 | gbacon++ | Add prof make target for profiling build.

[18:10] *** [particle]1 is now known as [particle]

[18:22] *** silug left
[18:29] <pmurias> ruoso: got a documentation pointer to how glib object look like?

[18:30] <ruoso> in terms of data strucutre?

[18:30] <ruoso> no, I don't...

[18:30] <pmurias> i'll edit it out then

[18:32] *** spinclad_ is now known as spinclad

[18:32] <pmurias> the SMOP talk will be my first talk, so any advice is appreciated ;)

[18:37] <ruoso> ;) 

[18:37] <pmurias> getting cat food&

[18:44] *** justatheory joined
[19:11] *** mncharity joined
[19:13] *** justatheory left
[19:13] *** Limbic_Region joined
[19:14] <pugs_svn> r21792 | lwall++ | [STD] let EXPR parse term after infix with a rule specified by the infix op

[19:14] <pugs_svn> r21792 | lwall++ |     (considered other kludges but this preserves 1-pass parsing)

[19:14] <pugs_svn> r21792 | lwall++ |     switch , parsing to using this mechanism plus <nulltermish>

[19:14] <pugs_svn> r21792 | lwall++ |     fix .= parsing by forcing <dottyop> as next term

[19:14] <pugs_svn> r21792 | lwall++ | [pre_post.t] can't leave the space out between "is Foo" and the class block

[19:14] <pugs_svn> r21792 | lwall++ |      or it is interpreted as an arg to the Foo pseudo-adverb

[19:16] *** AzureStone joined
[19:21] <pmurias> mncharity: hi

[19:25] *** zamolxes left
[19:26] <mncharity> hi pmurias

[19:30] *** Tene_ is now known as Tene

[19:32] <pmurias> mncharity:  i haven't seperated EmitSM0P yet, as it will be obsoleted soon

[19:33] * mncharity puzzled ("seperated EmitSM0P"?), but *nod*

[19:34] <mncharity> I'm exploring getting STD's tryfile to accept the elf sources.

[19:35] <pmurias> separated, sorry

[19:38] <pmurias> mncharity: that should force removing =~

[19:38] <mncharity> pmurias: wasn't the spelling... I just don't know, or have forgotten, what EmitSMOP is being separated from, and with what objective.

[19:39] <pmurias> from elfX into elfish/smop

[19:39] <mncharity> re =~ ...  do you know if STD will tolerate them if it sees an explicit =~ definition?

[19:39] <pmurias> so it could be integrated into elf

[19:39] <pmurias> mncharity: =~ is and explicit error

[19:40] <pmurias> s/and/an

[19:41] <mncharity> :(  ah well.  maybe =~~ ...

[19:42] <pmurias> you now my attitude towards =~

[19:42] <pmurias> * know

[19:42] <ruoso> pmurias, when you finish the slides you can add a second link to them in the wiki

[19:43] *** wknight8111 left
[19:44] *** Limbic_Region left
[19:45] <pmurias> ruoso: ok

[19:46] <pmurias> ruoso: i'm currently thinking what to change

[19:47] <mncharity> pmurias: re know, yes :)  will go away as part of merging in regex/p engine.

[19:47] <ruoso> pmurias, you can always throw that slides away if you like to... ;)

[19:48] <pmurias> i

[19:48] <pmurias> 'm actually hoping to finish m0ld before YAPC::EU

[19:49] <pmurias> Mold too

[19:50] <ruoso> that would be very cool

[19:50] <ruoso> pmurias, btw... have you seen the wiki page on lexical scopes?

[19:52] <TimToady> mncharity: STD does not currently do anything with an infix:<foo> definition because pmurias got distracted  :)

[19:53] <TimToady> mind you, m0ld is a fine thing to be distracted by...

[19:56] <mncharity> lol

[19:56] <TimToady> but STD is up to parsing 98.44% of t/, and several of the remaining errors have to do with not mutating the grammar on operator defs

[19:58] *** ruoso left
[19:59] *** Caelum_ is now known as Caelum

[19:59] *** justatheory joined
[20:00] <TimToady> nap & # stayed up too late hacking last night...

[20:03] <mncharity> re 98.44%, !!!   There's a Perl 6 project milestone of note.

[20:03] <TimToady> .oO(still one percentile short of Ivory Soap) # rethunk

[20:05] <pmurias> it might be that we need more cunning tests

[20:07] <mncharity> more cunning tests++

[20:08] *** cmarcelo left
[20:09] <mncharity> hmm, might call it "accepting" instead of "parsing"?  I always find it very hard to tell if parses are correct until they are used, running, and passing tests.

[20:11] <mncharity> re "Ivory Soap", their line is n % "pure".  Where "pure" is without meaning.  So you could feel free to declare STD's purity to be 99.99999%.

[20:11] <pmurias> my limited experience with pixie is that the resulting AST is bug-riden, but it's hardly resonable to expect untested things to be correct

[20:13] *** Arathorn joined
[20:14] <mncharity> "it's hardly resonable to expect untested things to be correct",  ooooo, I like that quote.  Nice alternative to "if it hasn't been tested, it doesn't work".

[20:16] <mncharity> ah, pixie!  that's what I was looking for...

[20:20] *** silug joined
[20:25] *** jhorwitz left
[20:37] <pmurias> mncharity: pixie is currently broken as STD remove a {*} per rule

[20:41] *** dduncan joined
[20:47] *** fridim_ joined
[20:50] <mncharity> pmurias: np.  i'm going to try a STD_red like approach - getting the Match tree and groveling over it, rather than using make().

[20:51] *** Jedai left
[20:54] *** Chillance joined
[20:55] *** ludan left
[20:56] *** ludan joined
[21:00] <gaal> mncharity: moose!

[21:02] <pugs_svn> r21793 | pmurias++ | [m0ld] calls with positionals only are translated to bytecode

[21:02] <pmurias> mncharity: using make is better as you might want to start modifing the grammar at some point from the actions

[21:07] <pmurias> otoh you should be able to convert from one approach to the other easily

[21:09] <mncharity> gaal: moose :)

[21:11] *** TJCRI left
[21:16] <mncharity> pmurias: *nod*.  at least for now, with a semi-static grammar, the advantage of greater debuggability outweighs future flexibility.

[21:21] *** fridim_ left
[21:35] *** jferrero left
[21:38] *** pbuetow left
[21:38] *** pbuetow joined
[21:44] <pugs_svn> r21794 | pmurias++ | [m0ld] named arguments

[21:48] *** cjfields left
[21:51] <gbacon> transparency++

[22:01] *** Lorn left
[22:03] <mncharity> pmurias: before I start exploring, any thoughts on what "Unable to parse class definition at ../../misc/elf/elf_g_src/EmitSimpleP5.pm line 946: ------>  expecting nibbler (alt 02)" means?  946 is end of file.

[22:04] <mncharity> oh, and the =~ have all gone away. ;)

[22:04] <mncharity> (haven't measured the performance hit yet :/ )

[22:09] <TimToady> probably a runaway string

[22:10] <mncharity> yep.  unescaped {  in "".

[22:10] <dduncan> question: regarding base-10/decimal numeric literals, what word does the 'c' prefix stand for?  is it deCimal or something else?

[22:10] <TimToady> admittedly could use a better message :)

[22:11] <TimToady> your question was answered last night

[22:11] <TimToady> but you vamoosed too soon :)

[22:11] <dduncan> I'll check the logs ...

[22:11] <TimToady> it's 'c' as in 'characgter'

[22:11] <TimToady> we can't use \d because that already means something else in regex

[22:12] <TimToady> and the idea is that you should be concentrating on producing the character, not on its radix

[22:12] <dduncan> okay

[22:12] <TimToady> on top of that, nobody should be using decimal for that anyway except in a few cases

[22:13] <TimToady> but almost all the decimal characters people know are already better encoded some other way

[22:13] <TimToady> \c9 == \t for instance

[22:13] <TimToady> and unicode has pretty much settled on hex

[22:14] <dduncan> now looking at the log, I saw the answer, and also the comment: feels like a category error next to \b, \x and \o, in that case

[22:14] <TimToady> anyway, was just looking for a way to sneak in the decimal notation, and it turned out that current \c usage had holes in the right place

[22:14] <TimToady> sure, but those are exceptional in not being base 10, and we have ten fingers

[22:15] <TimToady> it just points out that you can't actually create the Perfect Language

[22:15] <dduncan> indeed

[22:15] <pmurias> gbacon: what did the transparency++ comment refer too?

[22:16] <dduncan> but one can try

[22:16] <TimToady> (as in the Search for the Perfect Language, Umberto Eco)

[22:16] <TimToady> even trying has its dangers, if you don't understand the tradeoffs

[22:16] <gbacon> pmurias: mncharity's "at least for now, with a semi-static grammar, the advantage of greater debuggability outweighs future flexibility."

[22:16] <TimToady> and one of them in this case is the current cultural meaning of \d, which I don't wish to break

[22:17] <dduncan> generally you just want to make the language good for the task its intended for

[22:17] <dduncan> I'm not arguing for anything different than what you did

[22:17] <TimToady> and in that larger scheme of things, I doubt people will be using \c that often

[22:18] <TimToady> and when they do, it'll more often be \c[LINE FEED]

[22:18] <TimToady> or \cG

[22:18] <TimToady> and every now and then \c[13,10]

[22:18] <dduncan> as for now, I'm trying to use Moose for the first time, and am learning how it is, and isn't like Perl 6 or Perl 5

[22:19] <pugs_svn> r21795 | pmurias++ | [smop] hand compiled the m0ld example from the wiki and added as test

[22:19] <TimToady> gotta commute, bbiab &

[22:19] <pmurias> gotta sleep, bbiab& ;)

[22:20] *** pmurias left
[22:20] *** hercynium left
[22:20] *** [particle] left
[22:29] *** wknight8111 joined
[22:31] *** [particle] joined
[22:33] *** aindilis joined
[22:34] *** pbuetow left
[22:57] *** alester_ joined
[23:04] *** Limbic_Region joined
[23:06] *** Exodist left
[23:16] *** justatheory left
[23:19] *** alester_ left
[23:19] <pugs_svn> r21796 | putter++ | [elf_g] STD's src/perl6/tryfile r21792 now accepts the elf sources (no parse errors are reported).

[23:19] <pugs_svn> r21796 | putter++ | One acceptable regression - t/xx-uncategorized/deref_doesnt.t now fails differently.

[23:28] <mncharity> Next steps are () Get a Match tree dump from STD (in the same format as STD_red_run --format=p5a).  STD_blue?  () New IRx1_FromAST2. <> Elf bootstraps on STD_blue.  Then... elf accepting, running, STD.  Yielding bootstrapped front-end.

[23:28] <mncharity> g'night all &

[23:28] *** ludan left
[23:29] *** mncharity left
[23:29] *** ludan joined
[23:40] *** justatheory joined
[23:52] *** sri_work left
