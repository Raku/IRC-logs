[01:17] *** pravus left
[01:18] *** meteorjay left
[01:27] *** pravus joined
[01:47] *** eternaleye left
[01:48] *** eternaleye joined
[01:58] *** wtgee left
[02:14] *** wtgee joined
[02:22] *** justatheory left
[02:25] *** Jedai left
[02:25] *** Jedai joined
[02:30] <Auzon> perl6: my $a = { 3 }; $a.WHAT;

[02:30] <exp_evalbot> kp6: No output (you need to produce output to STDOUT)

[02:30] <exp_evalbot> ..pugs: RESULT[::Block]

[02:30] <exp_evalbot> ..rakudo: RESULT[Method 'perl' not found for invocant of class ''␤current instr.: '_block10' pc 35 (EVAL_11:16)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 785 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1059 (src/PCT/HLLCompiler.pir:585)␤called from

[02:30] <exp_evalbot> ..Sub 'parrot;PCT::HLLCompiler;command_line' pc 1238 (src/PCT...

[02:31] <Auzon> perl6: my $a = { 3 }; say $a.WHAT;

[02:31] <exp_evalbot> kp6: OUTPUT[Int␤]

[02:31] <exp_evalbot> ..pugs: OUTPUT[Block␤]

[02:31] <exp_evalbot> ..rakudo: OUTPUT[Code␤]

[02:31] <Auzon> ^_^'

[02:33] <Auzon> perl6: my $a = { 3 }; my $b = 3; say ($a eqv $b);

[02:33] <exp_evalbot> kp6: OUTPUT[no method 'APPLY' in Class 'Undef'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤   KindaPerl6::Runtime::Perl5::MOP::__ANON__('HASH(0x824c004)', 'APPLY', 'HASH(0x8e52504)') called at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 169␤  

[02:33] <exp_evalbot> ..main::DISPATCH('HASH(0x824c004)', 'APPLY', 'HASH(0x8e52504)') ca...

[02:33] <exp_evalbot> ..pugs: OUTPUT[␤]

[02:33] <exp_evalbot> ..rakudo: OUTPUT[Null PMC access in invoke()␤current instr.: '_block10' pc 79 (EVAL_11:36)␤called from Sub 'parrot;PCT::HLLCompiler;eval' pc 785 (src/PCT/HLLCompiler.pir:458)␤called from Sub 'parrot;PCT::HLLCompiler;evalfiles' pc 1059 (src/PCT/HLLCompiler.pir:585)␤called from Sub

[02:33] <exp_evalbot> ..'parrot;PCT::HLLCompiler;command_line' pc 1238 (src/PCT/HLLCompiler.pir:674)...

[03:05] *** elmex_ joined
[03:09] *** lichtkind left
[03:11] *** wtgee left
[03:20] *** elmex left
[03:24] *** alc joined
[03:38] *** justatheory joined
[03:44] *** wtgee joined
[03:59] <Auzon> Should fudged tests be marked as passing, or perhaps passing under some condition?

[04:03] <TimToady> at the moment fudge throws in an exit(1) at the end to make sure the file is considered "dubious" even if all the tests officially pass

[04:04] <Auzon> I'm applying for the Summer of Code, and I was wondering if, as some bonus work, you'd like fudged cases to be differentiated from strictly failing tests somehow.

[04:04] *** cathya left
[04:05] <TimToady> the test harness does that already by emiting # TODO as a comment

[04:05] <TimToady> which is why the smoke matrix puts dark green instead of red on those

[04:05] <Auzon> It all makes sense now. Thanks TimToady.

[04:06] <Auzon> Are there any other test-related tasks that might be good for bonus work?

[04:06] <TimToady> well, there's still a whole lot of tests to convert to fudge format

[04:07] <TimToady> and maybe another 20,000 or so tests to write  :)

[04:07] <Auzon> I don't think I'll be able to do more than 1000 in the summer, even in a best case scenario.

[04:08] <TimToady> you only have to do it by "christmas"  :)

[04:09] <Auzon> When you say converting tests to Fudge format, does that mean modifying fudge or the tests? Or both?

[04:09] <TimToady> the tests

[04:09] <TimToady> fudge is pretty much done

[04:10] <TimToady> most pugs tests have :todo as a test argument

[04:10] <TimToady> that has to move out to comments for fudge

[04:10] <TimToady> so that each implementation can have its own todo list

[04:10] <Auzon> Makes sense

[04:10] <TimToady> and ignore all the todos of other impls

[04:11] <TimToady> some of that could perhaps be automated

[04:11] <Auzon> I guess my "bonus work" could be looking through existing tests.

[04:11] <TimToady> but you'd need to find a good ad hoc text processing language :)

[04:11] <Auzon> Hm. I think we have one or two around here somewhere ;)

[04:11] <TimToady> also, they're slowing getting renamed into t/spec/*

[04:12] <TimToady> so that they match up with the synopses numbers

[04:12] <Auzon> Is there any procedure for adding tests that I should be aware of before applying?

[04:13] <TimToady> just need a pugs commit bit

[04:14] <Auzon> I didn't think there would be any administrative stuff, but I thought I'd ask ;)

[04:14] <TimToady> the pugs repo has a very low bar

[04:14] <TimToady> parrot's is a little higher

[04:15] <TimToady> everything in the pugs repo works on a "easier to get forgiveness than permission" principle

[04:15] <TimToady> though, of course, if you're not sure about something it never hurts to ask first

[04:17] <Auzon> Right. Sounds good to me :)

[04:18] <Auzon> How hard is Rakudo to get working for passing tests?

[04:18] <TimToady> that's more of a #parrot question, I expect

[04:19] <TimToady> (on irc.perl.org)

[04:19] <Auzon> Alright.

[04:19] <TimToady> but, tends to compile easily, if that's what you're asking

[04:21] *** justatheory left
[04:21] <Auzon> That helps. I still haven't gotten Pugs to compile :-/

[04:21] <TimToady> me either, someone needs to ask forgiveness :)

[04:21] <TimToady> I'm just now downloading ghc681 rpm to see if it works better

[04:22] <Auzon> From my experience earlier today on my Fedora 8 install, no.

[04:22] <TimToady> well, I'll try to duplicate that result, then :)

[04:23] <Auzon> with ghc661, I couldn't figure out how to get runhaskell for HsSyck

[04:23] <Auzon> 681 went further but still stumbled 

[04:23] <TimToady> 661 always complains: Setup: HsSyck.cabal:14: 'Executable' stanza starting with field 'license'

[04:24] <TimToady> did you delete 661?

[04:24] <Auzon> You got further with 661 than I did then

[04:24] <Auzon> I think I have it installed in parallel with 681 at present

[04:24] <Auzon> but I tried them both alone

[04:27] *** thoughtpolice left
[04:29] <TimToady> up to 35/109

[04:29] <TimToady> had to remake my symlinks in /usr/bin

[04:29] <Auzon> further than I got with either time.

[04:30] *** alester joined
[04:30] <TimToady> did you make clean and perl Makefile.PL?

[04:30] <Auzon> No, I didn't run perl on that makefile.

[04:30] <Auzon> I'll try that again when I get a chance.

[04:30] <TimToady> seems to compile pugs faster

[04:32] <TimToady> crumb, failed recompiling the prelude...

[04:36] *** wtgee left
[04:43] *** wtgee joined
[04:44] *** Limbic_Region left
[04:44] <TimToady> 睡 &

[05:14] *** thestarslookdown joined
[05:18] *** justatheory joined
[05:18] *** justatheory left
[05:22] *** lichtkind joined
[05:32] <lichtkind> can anybody help me to understand what smop exactly is?

[05:34] *** BinGOs left
[05:35] *** BinGOs joined
[05:40] <lichtkind> whats the real advantage to something like SMOP ?

[05:40] *** BinGOs left
[05:40] <Auzon> if I understand it correctly, SMOP is an implementation like perl5 for running Perl 6.

[05:41] <lichtkind> yeah but what was ruasos goal?

[05:41] <Auzon> I am uncertain.

[05:41] <lichtkind> why smop if kp6 can let run perl 6 on perl

[05:41] <Auzon> KP6 was slow, if I recall.

[05:42] <lichtkind> but with smop faster?

[05:42] <Auzon> SMOP is written in C in the style of Perl 5's interpreter .

[05:42] <Auzon> if I'm correct.

[05:42] <lichtkind> yes so far i see it too

[05:43] <Auzon> That approach worked once before, so it might be worth pursuing again. :)

[05:43] <lichtkind> am im correct if i say that you can tie with smop different interpreter together to get best of many worlds?

[05:43] <Auzon> I don't know.

[05:43] *** BinGOs joined
[05:44] <lichtkind> why was kp6 slow if perl is so fast? 

[05:44] <Auzon> KP6 is Perl 6 compiled to Perl 5.

[05:45] <Auzon> so we have generated Perl 5 interpreting Perl 6.

[05:45] <lichtkind> so it generated slow code

[05:45] <Auzon> that may have been part of the problem

[05:45] <Auzon> but also consider how many layers of interpretation there are in that case

[05:46] <lichtkind> you mean with smop there would be less layer?

[05:46] <Auzon> so we're interpreting code on code translated to run on another interpreter

[05:46] <Auzon> right. SMOP would be in C, which is faster to begin with than Perl 5.

[05:46] <Auzon> but we also don't have the translation layer

[05:46] <Auzon> Have you looked at the wiki page for SMOP?

[05:47] <lichtkind> sure

[05:47] *** wtgee left
[05:48] <Auzon> I'm not entirely sure if SMOP was meant to be a stepping stone or a maintained implementation of Perl 6

[05:48] <Auzon> I know that KP6/MP6, redsix, and elf are more of stepping stones.

[05:48] <lichtkind> what is elf?

[05:48] *** BinGOs left
[05:49] *** Psyche^ joined
[05:50] <Auzon> from what I understand, it was a recent build of compiling Perl 6 to Perl 5, similar to KP6, but with less of a scope, I think

[05:50] <Auzon> mainly a stepping stone tool

[05:50] <Auzon> It could also emit (for instance) Lisp if someone wrote the backend

[05:51] <lichtkind> were getting lot of stones lately :)

[05:51] <lichtkind> stone rich like we say in german

[05:51] <lichtkind> Auzon: anyway night is over and i had no sleep thank you for the answers

[05:51] <Auzon> Good night :)

[05:51] <lichtkind> :)

[06:00] *** alc left
[06:06] *** Patterner left
[06:06] *** Psyche^ is now known as Patterner

[06:11] *** BinGOs joined
[06:16] *** BinGOs left
[06:28] *** BinGOs joined
[06:33] *** BinGOs left
[06:35] *** iblechbot joined
[06:36] *** alester left
[06:47] *** luqui_ joined
[06:49] <Auzon> [particle]: I sent you another GSoC draft

[06:49] <Auzon> it should be good.

[06:53] <Auzon> sorry about waiting so long though :-/

[06:55] *** iblechbot left
[07:21] <Auzon> sleep &

[07:35] *** BinGOs joined
[07:35] *** BinGOs left
[07:35] *** BinGOs joined
[07:36] *** BinGOs left
[07:46] *** Alias__ left
[07:49] *** barney joined
[07:54] *** Aankhen`` joined
[08:00] *** luqui left
[08:00] *** luqui_ left
[08:05] *** BinGOs joined
[08:26] *** cmarcelo left
[08:32] *** iblechbot joined
[08:42] *** thestarslookdown left
[09:18] *** kanru joined
[09:18] *** mncharit1 joined
[09:19] *** mncharity left
[09:28] *** drbean left
[10:25] *** chris2 joined
[11:40] *** alc joined
[11:54] *** REPLeffect left
[12:20] *** jrockway is now known as CPAN

[12:20] *** CPAN is now known as jrockway

[12:21] *** alc left
[12:27] *** meppl joined
[12:47] *** barney left
[12:52] *** drbean joined
[12:52] <lichtkind> has still anybody hints whats the motivation and purpose behind SMOP ?

[13:03] *** meppl left
[13:05] *** meppl joined
[13:09] *** LazyJim joined
[13:20] *** alc joined
[13:28] *** pbuetow joined
[13:28] *** LazyJim left
[13:49] *** baest_ joined
[14:00] *** pmurias joined
[14:00] *** cai joined
[14:02] <pmurias> lichtkind: the purpose of smop is too build a runtime for Perl 6

[14:08] *** baest_ is now known as baest

[14:08] <pmurias> while it's possible to run a subset of p6 on perl5 with (near) perl5 speed, doing some things efficiently is very hard

[14:10] <lichtkind> pmurias: thanks i read te word runtime , i am wandering what special advantages should smop have?

[14:11] <lichtkind> just stepping stone for bootstraping or real alternative to run

[14:20] <pmurias> a real runtime alternative

[14:21] <pmurias> it's simpler then for example parrot

[14:25] <pmurias> the whole vm is object oriented

[14:59] <lichtkind> pmurias: and is it true that you can include other interpreter into smop to get best of several worlds?

[15:01] *** pmurias left
[15:03] *** justatheory joined
[15:19] *** zamolxes joined
[15:29] *** jan_ joined
[15:47] *** Limbic_Region joined
[15:48] *** Chillance left
[15:53] *** thoughtpolice joined
[16:44] *** buchetc joined
[16:53] *** buchetc left
[17:08] *** wtgee joined
[17:13] *** Psyche^ joined
[17:21] *** thoughtp1lice joined
[17:24] *** thoughtpolice left
[17:24] *** thoughtp1lice is now known as thoughtpolice

[17:25] *** cai left
[17:29] *** Patterner left
[17:29] *** Psyche^ is now known as Patterner

[17:30] *** pmurias joined
[17:31] <pmurias> lichtkind: it's intented as a smop feature, but it's possible with other interpreters also

[17:32] *** smtms left
[17:34] *** Skaman_Sam joined
[17:41] *** smtms joined
[17:46] *** Limbic_Region left
[17:46] *** cai joined
[17:47] <lichtkind> pmurias: and do you know what gave the pressure that started smop ?

[17:49] *** kanru left
[17:49] <pmurias> lichtkind: the need for a fast runtime for kp6 and problems with parrot

[17:49] <lichtkind> thanks

[17:50] <lichtkind> pmurias: and what exactly is it called what emmits kp6 and what executes smop?

[17:52] <pmurias> kp6 can't use smop yet

[17:52] <lichtkind> i know

[17:52] <lichtkind> i just want to know how is that structure called that executes smop

[17:54] <pmurias> the stuff smop executes?

[17:58] <pmurias> the only stuff smop can execute now is sm0p

[17:59] *** IllvilJa left
[18:05] *** pmurias left
[18:05] *** jan_ left
[18:13] *** jan_ joined
[18:13] *** jan_ is now known as jan

[18:15] *** lumi left
[18:17] *** lumi joined
[18:21] *** IllvilJa joined
[18:27] *** cai left
[18:28] *** cai joined
[18:32] *** pmurias joined
[18:33] *** riffraff joined
[18:38] *** Aankhen`` left
[18:39] <lichtkind> pmurias: wb

[18:41] <pmurias> rehi

[18:42] <pmurias> ;)

[18:42] *** eternaleye left
[18:42] *** eternaleye joined
[18:43] <pmurias> trying to get by printer to work after a foolish attempt to install an ipod-- on my gentoo box, so had to reboot to change the kernel

[18:44] <lichtkind> pmurias: is smop/kp6 a serious kombatant in the race who first runs the std.pm?

[18:44] *** Student joined
[18:44] *** revdiablo left
[18:44] *** hcchien left
[18:44] *** bocksp left
[18:44] *** avar left
[18:44] *** kolibrie left
[18:44] *** revdiablo joined
[18:45] <pmurias> lichtkind: no

[18:45] <pmurias> lichtkind: kp6 is stalled

[18:46] <lichtkind> but they still try to make it run on smop?

[18:47] <pmurias> smop still needs work and nobody is working on kp6 nowdays

[18:49] <lichtkind> but smop is under development?

[18:51] *** avar joined
[18:52] <lichtkind> ruaso is even one of the busiest in the wiki :)

[18:55] *** cmarcelo joined
[18:55] <pmurias> lichtkind: re under development, you can look at the commit log

[18:55] <lichtkind> where?

[18:56] <lichtkind> pmurias: but im currently finishing that article anyhow :)

[18:58] *** ikeda joined
[18:59] <Auzon> Well, my SoC application is in :)

[19:00] <lichtkind> congrats

[19:01] *** hcchien joined
[19:01] *** bocksp joined
[19:01] *** kolibrie joined
[19:01] *** pugsbot_r17185 joined
[19:01] *** pasteling joined
[19:01] *** kcwu joined
[19:01] *** arguile joined
[19:01] *** allbery_b joined
[19:01] *** kolibrie left
[19:01] <Auzon> Now... I wait. :-/

[19:03] <Skaman_Sam> Hello, all!

[19:03] <Skaman_Sam> I have a really stupid question - but here it goes-

[19:03] <Skaman_Sam> Why would I want to use Perl6 over Perl5 ?

[19:04] <Auzon> Right now? You probably wouldn't

[19:04] <Auzon> When it's done, however, there are a lot of great changes.

[19:05] <Skaman_Sam> cool - now I feel more secure about myself ;)

[19:05] <Auzon> for instance, here's one neat piece of syntax added:

[19:05] <Auzon> pugs: 1,3,5,7 Z 2,4,6,8

[19:05] <exp_evalbot> RESULT[((1, 2), (3, 4), (5, 6), (7, 8))]

[19:05] <Skaman_Sam> I have been hesitant to embrace the Parrot Paradigm

[19:05] <Skaman_Sam> ohh...

[19:06] <Auzon> The idea is that we'll eventually have many compatible implementations of Perl 6.

[19:06] <Auzon> Unlike Perl 5, Perl 6 has a specification other than "the perl executable's behavior"

[19:08] <lichtkind> Skaman_Sam: i would use perl 6 over perl 5 because it let me write shorter programs :)

[19:09] *** kolibrie joined
[19:09] *** pmurias left
[19:09] *** wtgee left
[19:10] *** wtgee joined
[19:13] *** cai left
[19:19] *** eternaleye left
[19:22] <Skaman_Sam> on the parrot site, it says it lets perl hackers hack better

[19:31] *** aindilis left
[19:35] *** aindilis joined
[19:41] *** eternaleye joined
[19:43] <lichtkind> Skaman_Sam: yes perl 5 is more hackish :)

[19:46] *** cai joined
[19:54] *** Skaman_Sam left
[20:00] *** syle joined
[20:10] *** kst` left
[20:11] *** aindilis left
[20:12] *** aindilis joined
[20:14] *** araujo left
[20:31] *** ikeda_ joined
[20:31] *** ikeda left
[20:34] *** ikeda_ left
[20:34] *** ikeda joined
[20:39] *** syle left
[20:40] *** ikeda left
[20:59] *** [particle] left
[21:01] *** ikeda joined
[21:01] *** Student left
[21:08] *** thoughtpolice left
[21:08] *** thoughtpolice joined
[21:14] *** thoughtpolice left
[21:14] *** thoughtpolice joined
[21:15] *** thoughtpolice left
[21:17] *** thoughtpolice joined
[21:20] *** wtge1 joined
[21:22] *** syle joined
[21:22] *** wtgee left
[21:22] *** riffraff left
[21:25] *** wtge1 is now known as wtgee

[21:31] *** ikeda_ joined
[21:38] *** ikeda_ left
[21:38] *** ikeda_ joined
[21:39] *** ikeda__ joined
[21:46] *** ikeda___ joined
[21:48] *** ikeda___ left
[21:48] *** ikeda___ joined
[21:49] *** syle left
[21:49] *** ikeda left
[21:59] *** ikeda_ left
[21:59] *** iblechbot left
[22:03] *** ikeda__ left
[22:10] *** ikeda___ left
[22:15] *** wknight8111 joined
[22:18] *** chris2 left
[22:39] *** [particle] joined
[22:48] *** wtge1 joined
[22:49] *** wtgee left
[22:51] *** jan left
[23:07] *** peepsalot joined
[23:12] *** elmex_ left
[23:14] *** lichtkind left
[23:16] *** ikeda joined
[23:25] *** ikeda left
[23:25] *** Student joined
[23:33] *** wtge1 left
[23:35] *** Auzon left
[23:36] *** ikeda_ joined
[23:41] *** Schwern joined
[23:47] *** araujo joined
[23:51] *** ikeda joined
[23:53] *** ikeda_ left
