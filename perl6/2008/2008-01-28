[00:00] <pugs_svn> r19715 | rhr++ | [Unicode.pm] Grapheme: IDs use NFC

[00:00] <pugs_svn> r19715 | rhr++ | guess at how nf and encoding modules work

[00:00] <pugs_svn> r19715 | rhr++ | start to define bytes/codepoints/graphemes modules

[00:00] <pugs_svn> r19715 | rhr++ | samebase needs to use NFD (will need to be fixed again when other NF stuff is fixed)

[00:02] *** iblechbot left
[00:07] *** poletti left
[00:08] *** poletti joined
[00:08] *** poletti left
[00:20] <pugs_svn> r19716 | rhr++ | [Unicode.pm] 2 typos

[00:20] *** Auzon joined
[00:25] *** chris2 left
[00:27] *** sri_work left
[00:30] *** alester joined
[00:33] *** __Ace__ left
[00:33] *** alester left
[00:51] *** root_byte joined
[00:53] *** Casan left
[00:54] *** BillR joined
[00:55] *** BillR left
[00:59] <mncharity>  

[00:59] <lambdabot> mncharity: You have 1 new message. '/msg lambdabot @messages' to read it.

[01:01] <mncharity> @tell spinclad re stability of rb 1.9 and debian, good question.  rb 1.9.0 is, having been finally released (in Dec), now vastly more stable (ie, it'

[01:01] <lambdabot> Consider it noted.

[01:01] <mncharity> sigh

[01:04] <mncharity> @tell spinclad its code, bugs, and language features don't keep changing, which was indeed a pain with redsix.  I'm not sure what's up with debian.  On a couple of packages recently I've hit the 'debian is months out of date vis upstream', which doesn't get fixed until I or someone kick it.  almost out of space: see backlog :)

[01:04] <lambdabot> Consider it noted.

[01:10] <mncharity> so issues include () is it buggy, and going to cause us problems (I don't know - hope not); () will we have to chase after additional language changes (perhaps, but with a fixed release 1.9.0 to work on, I don't expect it to be a bit deal); () the debian ruby 1.9 package is out of date (someone needs to poke the debian process)

[01:11] <mncharity> it seems 1.9.1 was envisioned as a explicitly "stable" release, aimed for december, which didn't quite get there.  some things do seem to be settling down.

[01:12] <mncharity> () any other issues...?

[01:14] <mugwump> hehe what's all this, despite widespread rumours to the contrary ruby is not perl 6!  :)

[01:19] <mncharity> mugwump: :)  creating a rb 1.9 based kp6 backend.   intended to be faster than the current runtimes, and thus permit moving from the current 'kp6 run on mp6', to a bootstrapped 'kp6 run on kp6'.  at least for

[01:20] <mugwump> hey that sounds cool

[01:20] <mncharity> the front-end portion of kp6 (parsing, ast, emitting).  getting the universal backend code (Pad, etc) bootstrapped would be a different exercise.

[01:20] <mncharity> re cool, :)

[01:20] <mncharity> like to help?

[01:20] <mncharity> ;)

[01:21] <mncharity> pmurias: thanks for r19700

[01:21] *** devogon left
[01:22] <mncharity> mugwump: are there really widespread rumors that ruby is p6?!?

[01:23] <mncharity> oh, as in p5-ng (next generation).  well, it does have a bit of that.  maybe p6 is ruby 3.0 ;)]

[01:23] <allbery_b> ruby definitely has a perl-TNG vibe about it.  not so much a P6 vibe

[01:24] <allbery_b> some parts of the world have given up on p6, I think

[01:24] <mugwump> well, I think perl 6 became much more of a step forward than people thought

[01:26] <mncharity> hmm, I think a number of factors came together to create a much longer development path than people originally anticipated.

[01:27] <mncharity> not having an implementation to participate in an interactive language design process, for instance.

[01:29] <cj> TimToady: alrighty... that makes sense... so the '_' metacharacter indicates end of a range?

[01:30] <cj> and since 'z' is not in the range which begins with 'A', it ends after it gets to the end of the range?

[01:30] *** lyokato_ joined
[01:31] <mncharity> allbery_b: re given up, which has some unfortunate consequences like shortage of volunteer hours, any thoughts on what it would take to get people un-given-up and psyched again?

[01:31] <cj> TimToady: ah, missed what you said at 1433

[01:31] *** lambdabot left
[01:32] *** lambdabot joined
[01:35] <allbery_b> mncharity: I rarely hear about P6 outside of this channel and other directly perl.org-related stuff.  (except the occasional mention of pugs wrt Haskell)

[01:35] *** Daveman joined
[01:36] <allbery_b> it might help to put around that 6.0-STD is being finalized and there are several implementations targeting it (i.e. there's a light at the end of the tunnel finally)

[01:41] *** kanru left
[01:43] *** cnhackTNT joined
[01:46] <mncharity> hmm.  ok.  i've reservations about "light at the end of the tunnel", and progress notices in general, just because there's been such a history of claims of accomplishment without corresponding tangible, user visible progress.  trust seems to have become somewhat frayed.

[01:48] <mugwump> look, if I start to see even a version of the test script with a stable tag put on it, and a maintainer who will manage updates to it using the stable development process, I'd feel bathed in light

[01:48] <mugwump> s/script/suite/

[01:52] <allbery_b> if so then it'

[01:52] <allbery_b> s too late to do anything about p6's mindshare

[01:58] *** jferrero left
[02:01] *** wknight8111 joined
[02:03] <mncharity> hmm, ok.  it seems like there might be a period between when we are obviously unstuck (say, parrot passing at least as much of the test suite as pugs did), and assorted stableness, when there will be lots of work to do, and thus need for volunteers.

[02:04] <mncharity> perhaps that "parrot now better than pugs was" is an interesting milestone.

[02:04] *** jdrake joined
[02:04] *** root_byte left
[02:05] <jdrake> Is perl6 usable now?

[02:05] *** alester joined
[02:06] <Auzon> Usable for what?

[02:06] <lambdabot> Auzon: You have 1 new message. '/msg lambdabot @messages' to read it.

[02:06] <jdrake> Auzon, say a website.

[02:06] <Auzon> http://mu.nfshost.com

[02:06] <lambdabot> Title: Moe'uhane

[02:06] <Auzon> That's right :)

[02:07] <jdrake> What is that exactly?

[02:07] <Auzon> It's my game that I've been working on

[02:07] <mugwump> jdrake: there are several perl 6 implementations all in varying states of development

[02:07] <jdrake> nice

[02:07] <Auzon> It's a successor to another one that I played but ended

[02:08] <jdrake> mugwump, are any of them what could be described as 'stable'?

[02:08] <mugwump> nop

[02:08] <mugwump> e

[02:08] <mugwump> but then, I'm quite fussy about what I call stable

[02:09] <jdrake> Stable is something that will generally not blow up in my face.

[02:09] <mugwump> ok.  I was talking about something that won't change on you over time

[02:10] <allbery_b> note that I didn't say perl-6.0.0-STD was finalized.

[02:10] <jdrake> Anything in the ways of oxygen all the way to neon, but not like throwing sodium in water.

[02:11] <allbery_b> the *language* could still change (mostly clarifications or eliding features considered unnecessary for the first release)

[02:11] <mugwump> well, pugs is pretty solid I'd say, but hard to use for web development because of the runtime

[02:11] <Auzon> Yeah. Otherwise, I'd be using it :P

[02:11] <jdrake> What about the runtime/

[02:11] <allbery_b> pugs also has some bitrot

[02:11] <mugwump> it requires haskell, limiting its userbase

[02:11] <allbery_b> I haven't ben able to build it in months; it dislikes either my ghc or my Cabal, I'm not sure which

[02:11] <allbery_b> (I'm told 6.6.1 works but 6.8.1 is current)

[02:12] <Auzon> hm. My webhost has GHC. Maybe it would run?

[02:12] <jdrake> oh, that is no problem on my web host :P, our most useful configuration is written in sml and its configuration it a purely functional language all its own.

[02:12] <mugwump> maybe.  I stopped using pugs because of the usual svn breakage you get without stable development practices

[02:13] <jdrake> Best to stick with what I know then.

[02:13] <mugwump> if you can get mod_parrot to do the trick with a released version rakudo ... and stick to "safe" features, then you're probably OK

[02:13] <mugwump> but there's not enough implemented yet to be very worthwhile yet imho

[02:13] <jdrake> We don't use any mod_* languages because of security issues.

[02:14] <cj> does mp6 know how to sprintf?

[02:14] <Auzon> mp6: sprintf("testing %s", "sprintf");

[02:14] <Auzon> kp6: sprintf("testing %s", "sprintf");

[02:14] <exp_evalbot> r19716: OUTPUT[no method 'APPLY' in Class 'Undef'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤        KindaPerl6::Runtime::Perl5::MOP::__ANON__('HASH(0x824be04)', 'APPLY', 'HASH(0x8e524d0)', 'HASH(0x8e5250c)') called at

[02:14] <exp_evalbot> ..compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 169␤        main::DISPATCH('HASH(0x824be04)', 'APPLY', 'H...

[02:15] <mugwump> jdrake: well, I don't know if anyone's done a fastcgi module for parrot yet

[02:15] <mugwump> the only other option is the 6-on-5 stack

[02:15] <mugwump> eg, using Perl 5 with Moose

[02:15] <mugwump> and adding on bits and pieces as you figure them out

[02:16] <mugwump> I haven't got the full stack working myself yet

[02:16] <mugwump> but I haven't tried very hard.  I just care about the object model and method signatures really... and things like Perl6::Junction

[02:16] <mugwump> Also Coroutines :)

[02:17] <mugwump> and gather

[02:17] <mugwump> anyway, using those modules you can write in perl6 and have it compiled down to perl5 by perl5

[02:17] <mugwump> again, I haven't used it in a while though

[02:22] *** Limbic_Region left
[02:24] *** kanru joined
[02:25] *** Caelum joined
[02:56] <pugs_svn> r19717 | putter++ | [kp6-ruby] tweak instance variable initializers.

[03:05] *** laye joined
[03:30] *** Lorn left
[03:32] <cj> kp6: sprintf("testing");

[03:32] <exp_evalbot> r19717: OUTPUT[no method 'APPLY' in Class 'Undef'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤        KindaPerl6::Runtime::Perl5::MOP::__ANON__('HASH(0x824bd14)', 'APPLY', 'HASH(0x8e4bd00)') called at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 169␤  

[03:32] <exp_evalbot> ..main::DISPATCH('HASH(0x824bd14)', 'APPLY', 'HASH(0x8e4bd00)') ca...

[03:32] <cj> kp6: printf("testing");

[03:32] <exp_evalbot> r19717: OUTPUT[no method 'APPLY' in Class 'Undef'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤        KindaPerl6::Runtime::Perl5::MOP::__ANON__('HASH(0x824bd14)', 'APPLY', 'HASH(0x8e4bd00)') called at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 169␤  

[03:32] <exp_evalbot> ..main::DISPATCH('HASH(0x824bd14)', 'APPLY', 'HASH(0x8e4bd00)') ca...

[03:35] <cj> okay... so how do I implement sprintf?

[03:35] <Auzon> what do you need it for?

[03:35] <mugwump> kp6: "testing".as("%10s")

[03:35] <exp_evalbot> r19717: OUTPUT[no method 'as' in Class 'Str'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤     KindaPerl6::Runtime::Perl5::MOP::__ANON__('HASH(0x8e4bcdc)', 'as', 'HASH(0x8e4bb74)') called at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 169␤     

[03:35] <exp_evalbot> ..main::DISPATCH('HASH(0x8e4bcdc)', 'as', 'HASH(0x8e4bb74)') called at - l...

[03:36] * mugwump ratses

[03:36] <cj> Visitor::Emit::Perl5

[03:36] <cj> Auzon: I want to re-factor it

[03:36] <Auzon> Can't help you there, sadly.

[03:42] <pugs_svn> r19718 | putter++ | [kp6-ruby] get Match from Runtime/Perl6/Match.pm.

[03:58] *** DarkWolf84 joined
[04:09] <mncharity> hmm.  so rules are class methods (methods of Grammar, not an instance of Grammar), and one never .new()s a Grammar?  curious.

[04:09] <mncharity> s/methods of Grammar/methods on Grammar/

[04:11] <mncharity> t/kp6/42-single-rule-grammar.t another day.  g'night all. &

[04:11] *** mncharity left
[04:18] *** lyokato_ left
[04:31] *** thestarslookdown joined
[04:58] *** lyokato joined
[05:24] <TimToady> pugs: "testing".fmt("%10s")

[05:24] <exp_evalbot> RESULT[\"   testing"]

[05:24] <TimToady> kp6: "testing".fmt("%10s")

[05:24] <exp_evalbot> r19718: OUTPUT[no method 'fmt' in Class 'Str'␤ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345␤    KindaPerl6::Runtime::Perl5::MOP::__ANON__('HASH(0x8e4bcdc)', 'fmt', 'HASH(0x8e4bb74)') called at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 169␤    

[05:24] <exp_evalbot> ..main::DISPATCH('HASH(0x8e4bcdc)', 'fmt', 'HASH(0x8e4bb74)') called at ...

[05:24] *** meppl left
[05:30] <TimToady> @tell mncharity an instance of a grammar is the current parse state

[05:30] <lambdabot> Consider it noted.

[05:38] *** laye left
[05:39] *** thestarslookdown left
[05:45] *** DarkWolf84 left
[05:48] *** jjore joined
[05:56] *** wknight8111 left
[06:21] *** thoughtpolice left
[06:32] *** jjore left
[06:35] *** chacha_chaudhry joined
[06:52] *** devogon joined
[07:10] *** masak joined
[07:17] *** polettix joined
[07:23] *** polettix left
[07:37] *** jdrake left
[07:42] *** iblechbot joined
[07:50] *** Aankhen`` joined
[08:05] *** hcchien_ joined
[08:18] *** hcchien left
[08:18] *** hcchien_ is now known as hcchien

[08:58] *** renormalist joined
[09:00] *** njbartlett left
[09:00] *** ruoso left
[09:07] *** ruoso joined
[09:25] *** hcchien left
[09:39] *** masak is now known as jonalv

[09:39] *** jonalv is now known as masak

[09:45] *** kanru left
[09:57] *** njbartlett joined
[09:59] *** ruoso left
[10:12] *** cnhackTNT left
[10:17] *** njbartlett left
[10:33] *** kanru joined
[10:34] *** njbartlett joined
[10:38] *** njbartlett left
[11:08] *** njbartlett joined
[11:17] *** ruoso joined
[11:25] *** kanru left
[11:26] *** kanru joined
[11:27] *** cmarcelo joined
[11:31] <ruoso> hi

[11:40] *** mncharity joined
[11:45] *** iblechbot left
[11:46] *** njbartlett left
[11:59] *** njbartlett joined
[12:08] *** kst left
[12:08] *** kst joined
[12:12] *** araujo left
[12:15] *** meppl joined
[12:18] *** jferrero joined
[12:18] *** apple-gunkies left
[12:20] *** njbartlett left
[12:20] *** njbartlett joined
[12:32] *** lyokato left
[12:37] *** dmq left
[12:38] *** dmq joined
[12:48] *** kst left
[12:48] *** kst joined
[12:49] *** rindolf joined
[12:51] *** kanru left
[12:59] *** kanru joined
[13:01] *** renormalist left
[13:08] *** Aankhen`` left
[13:11] *** Aankhen`` joined
[13:14] *** meppl left
[13:15] *** iblechbot joined
[13:15] *** meppl joined
[13:24] *** iblechbot_ joined
[13:30] *** r0bby left
[13:34] *** iblechbot left
[13:38] *** blindfish joined
[13:48] *** Yappo_ left
[13:50] *** Yappo_ joined
[13:58] <pugs_svn> r19719 | rhr++ | [Unicode.pm] stringify with method Str

[13:58] *** jferrero left
[14:05] *** jferrero joined
[14:20] *** ispy_ left
[14:53] *** meppl left
[14:57] *** hanekomu joined
[14:58] *** jferrero left
[14:59] *** jferrero joined
[15:02] *** Auzon left
[15:04] *** chris2_ joined
[15:05] *** chris2_ is now known as chris2

[15:09] *** jjore joined
[15:10] <[particle1> where are the different contexts defined in the synopses? ack -i context returns many, many hits

[15:10] *** [particle1 is now known as [particle]

[15:12] *** chacha_chaudhry left
[15:24] *** IllvilJa joined
[15:25] *** hanekomu left
[15:45] *** manfred joined
[15:53] *** meppl joined
[15:53] *** alester left
[15:58] <pugs_svn> r19720 | ruoso++ | [smop] sm0p/Grammar.pm have the preprocessor code.

[16:00] *** rdice joined
[16:01] *** TJCRI joined
[16:01] <pugs_svn> r19721 | ruoso++ | [smop] breaking the definition in smaller tokens.

[16:07] *** jjore left
[16:11] *** cosimo joined
[16:11] *** cosimo left
[16:11] *** sri_work joined
[16:13] *** alester joined
[16:17] *** IllvilJa left
[16:18] *** ispy_ joined
[16:22] <TimToady> [particle]: try S02:Context

[16:27] <[particle]> thanks!

[16:29] <pugs_svn> r19722 | rhr++ | [Unicode.pm] fix normalization

[16:30] *** Mindtilt joined
[16:31] <[particle]> TimToady: is context something the ast should know about, or is it something each op is responsible to determine?

[16:31] <[particle]> the more i think about it, the more i think it's the ops that are responsible

[16:32] *** alester left
[16:37] <cj> alrighty... I'm at microsoft at a discussion of new languages on the .NET vm.  anyone have anything to add to the conversation?

[16:37] <moritz_> the question boils down to "how do you implement 'want'"?

[16:37] <moritz_> cj: what has been said already?

[16:38] *** IllvilJa joined
[16:38] <[particle]> closure invocation defaults to void context. if it's the rvalue of an assign or bind op, check the lvalue's context

[16:38] *** Lorn joined
[16:38] <[particle]> ...and set the context for the closure's return context

[16:39] <[particle]> so closures need a 'wanted context' attribute that's set at invocation time

[16:40] <pugs_svn> r19723 | ruoso++ | [smop] now I think the preprocessor is on its way... it is a big replacing grammar.

[16:40] *** Mindtilt left
[16:41] *** Mindtilt joined
[16:41] <cj> moritz_: greetings.  the presentations have not started.

[16:42] <cj> I asked about perl6 and I've gotten mixed results.  Some folks say they look forward to when it runs on the vm, other say they don't like perl in general.

[16:42] <cj> nobody's said they will actively block any adoption, though :)

[16:42] <moritz_> cj: you can tell them that p6 is much more structured than p5 ;)

[16:43] <PerlJam> Who is working to run p6 on .net?

[16:43] <[particle]> nobody

[16:43] <moritz_> cj: and I think the idea is really great, if you can find a way to implement continuations efficiently on top of the vm

[16:45] *** jferrero left
[16:46] *** jhorwitz joined
[16:47] <Mindtilt> i need a good perl6 tutorial.... only found garbadge on the internet... can someone link me a decent one?

[16:47] <cj> moritz_: step 1: implement, step 2: implement correctly, step 3: implement efficiently

[16:47] <[particle]> mindtilt: the internet is broken

[16:47] <cj> Mindtilt: do you want to read a spec or a walk-through?

[16:48] <PerlJam> Mindtilt: I don't think there are any good perl 6 tutorials yet.

[16:48] <[particle]> Mindtilt: try http://www.perlfoundation.org/perl6/ for a start

[16:48] <Mindtilt> i want to migrate a perl5 procedural system to a perl6 oo

[16:48] <lambdabot> Title: Perl 6 / Perl 6

[16:49] <[particle]> Mindtilt: perl 6 is still under active development, there are no complete implementations yet

[16:49] <[particle]> there are many partial implementations, and one or more may meet your needs

[16:50] <Mindtilt> hum... didnt know that... but ill take a look in that link....

[16:50] <moritz_> Mindtilt: don't do that yet ;)

[16:50] *** Psyche^ joined
[16:54] *** jjore joined
[16:54] <pugs_svn> r19724 | rhr++ | [Unicode.pm] fixes for the previous fixes

[16:54] <PerlJam> Mindtilt: if you want to put the parrot-based perl6 in production, that would be fine by me :)

[16:56] * PerlJam wonders how many early adopters we can actually get ;)

[16:59] *** masak left
[17:03] *** Thunder joined
[17:07] *** Patterner left
[17:07] *** Psyche^ is now known as Patterner

[17:12] *** jjore left
[17:14] *** jjore joined
[17:14] *** r0bby joined
[17:15] *** dlocaus joined
[17:16] <dlocaus> moritz_: ping?

[17:16] <dlocaus> @seen moritz_

[17:16] <lambdabot> moritz_ is in #perl6. I last heard moritz_ speak 26m 9s ago.

[17:16] <dlocaus> @seen fglock

[17:16] <lambdabot> I haven't seen fglock.

[17:17] <dlocaus> @seen purmas

[17:17] <lambdabot> I haven't seen purmas.

[17:17] <dlocaus> [particle]: ping

[17:17] <dlocaus> obra: ping?

[17:17] <moritz_> dlocaus: pong

[17:17] <obra> pong

[17:17] <lambdabot> obra: You have 1 new message. '/msg lambdabot @messages' to read it.

[17:17] <obra> What can I do for you?

[17:18] <dlocaus> soryr, obra, I didn't think moritz_ was here.

[17:18] <dlocaus> moritz_: Do you think fglock would mind if I put him down as a contact for KP6?

[17:18] <moritz_> where?

[17:18] <dlocaus> I need to explain 3 months of my time on the KP6 project on my cv.

[17:18] <dlocaus> I've checked here Sunday & Monday (today) but he hasn't been here.

[17:18] <moritz_> I'd think that's ok

[17:19] <dlocaus> moritz_: ok, ty.

[17:19] <dlocaus> I'm off to interview ;)

[17:19] <moritz_> dlocaus: if you want to be sure, send him a mail

[17:19] <moritz_> dlocaus: good luck!

[17:19] <obra> dlocaus: I bet he wouldn't mind, but yeah. Ask first ;)

[17:19] <dlocaus> ok, I'll check with him later.. (after the interview... omg :(

[17:19] <obra> always ask references first. I've seen someone learn that the hard way

[17:20] <obra> dlocaus: just say "references available upon request" unless they've already asked

[17:20] <dlocaus> obra: yeah, but this came on rather sudden... 

[17:20] <dlocaus> Its part of the job application.

[17:20] <dlocaus> I'll try and avoid turning it in, until later, but ...

[17:20] *** Mindtilt left
[17:20] *** araujo joined
[17:20] <dlocaus> Ok, well thanks for the help I have to head on out.

[17:20] <dlocaus> ttyl

[17:21] <obra> good luck

[17:21] *** dlocaus left
[17:22] <[particle]> talk about last minute prep!

[17:22] *** alester joined
[17:30] <cj> notes here: http://wiki.colliertech.org/index.php?title=Lang.NET_2008

[17:30] <lambdabot> Title: Lang.NET 2008 - Wiki

[17:33] <obra> cj: how was it?

[17:33] *** rindolf left
[17:33] <obra> I guess "is"

[17:47] <pugs_svn> r19725 | rhr++ | [Unicode.pm] Str: STORE, FETCH, infix:<~>, infix:<eq>

[17:49] *** lichtkind joined
[17:49] *** Mindtilt joined
[17:54] *** riffraff joined
[17:56] *** Jamtech joined
[18:02] <cj> closures in C# 3.0.  yay

[18:02] <moritz_> wow

[18:03] <cj> which means that the MS CLR supports them natively.

[18:04] <cj> obra: still going on.  taking notes in realtime.

[18:04] <moritz_> cj: the current implementation? or a future one?

[18:04] <obra> cj: cool

[18:06] *** Thunder left
[18:10] *** justatheory joined
[18:16] *** Mindtilt left
[18:16] *** Mindtilt joined
[18:22] *** barney joined
[18:30] <pugs_svn> r19726 | rhr++ | [Unicode.pm] chr and ord

[18:34] <cj> type inference is also in C# 3.0

[18:34] <cj> var foo = new System.Foo.Bar();

[18:34] <cj> moritz_: MS's current implementation.

[18:34] <cj> moritz_: Mono's not there quite yet :)

[18:35] *** ruoso left
[18:36] *** Lorn left
[18:42] *** Lorn joined
[18:44] <cj> looks like there's currently no closure support outside of the context of lambda expressions

[18:51] *** jrockway left
[18:51] *** jrockway joined
[18:57] <pugs_svn> r19727 | rhr++ | [Unicode.pm] clarify graph<->code<->byte conversion rules, clean up buf handling

[18:58] *** rdice left
[18:59] *** rdice joined
[19:01] *** mncharity left
[19:03] *** riffraff left
[19:03] *** rindolf joined
[19:17] *** minge joined
[19:23] <pugs_svn> r19728 | rhr++ | [Unicode.pm] fix compose_graph

[19:27] *** rdice left
[19:27] *** namelessuser joined
[19:30] *** jjore-w left
[19:31] *** jjore-w joined
[19:32] *** rdice joined
[19:50] *** macae joined
[19:57] *** macae left
[19:57] *** Mindtilt left
[20:02] <cj> [email@hidden.address] <- dynamic language runtime...

[20:02] <cj> AFAIK, the DLR specs have not been published as the CLI has been...

[20:07] *** rindolf left
[20:16] *** JarJarBinks left
[20:21] *** manfred left
[20:23] *** lichtkind left
[20:24] <cj> so... the DLR runs on Mono

[20:24] <cj> Closures are implemented in the DLR

[20:25] <cj> Continuations are the only thing that looks iffy... we may need to implement that as a DLR add-on

[20:25] <cj> transactional memory is also an open question

[20:46] *** barney left
[20:46] <pugs_svn> r19729 | rhr++ | [Unicode.pm] move UCD stuff into UCD.pm

[20:48] *** blindfish left
[20:56] *** lisppaste3 left
[21:02] *** ispy_ left
[21:02] *** dlocaus joined
[21:02] <dlocaus> @seen fglock

[21:02] <lambdabot> I haven't seen fglock.

[21:04] *** justatheory left
[21:05] *** Lorn_ joined
[21:08] *** lisppaste3 joined
[21:13] *** Aankhen`` left
[21:18] <pugs_svn> r19730 | cosimo++ | [t] Converted pod markers to pod6

[21:18] *** cosimo_ joined
[21:23] *** Lorn left
[21:24] *** smtms joined
[21:25] <pugs_svn> r19731 | cosimo++ | [t/spec] Converted pod markers in pod6

[21:36] <pugs_svn> r19732 | cosimo++ | [t] Converted pod markers to pod6

[22:02] <cj> dlocaus: he answered an email yesterday

[22:02] <dlocaus> cj: ok, thank you!

[22:04] <cj> yar.

[22:04] <dlocaus> yar? ;)

[22:06] <pugs_svn> r19733 | cosimo++ | [t/spec] Convert pod markers to pod6

[22:07] <pugs_svn> r19734 | cosimo++ | [t/spec] Convert pod markers to pod6

[22:09] *** marmic left
[22:10] *** Schwern joined
[22:12] *** marmic joined
[22:14] *** Auzon joined
[22:15] <pugs_svn> r19735 | cosimo++ | [t/spec] Converted pod markers to pod6

[22:19] *** damianc joined
[22:26] *** dlocaus left
[22:28] <mofino> ahh look at all those commits, how exciting

[22:29] <Auzon> yep. 16 in the past 8.5 hours :).

[22:29] <Auzon> smop: say "hi"

[22:29] <moritz_> Auzon: no smop ;)

[22:29] <Auzon> :(

[22:29] <moritz_> rakudo: say "hi";

[22:29] <exp_evalbot> OUTPUT[hi␤]

[22:30] <Auzon> and pugs, of course. kp6 is the third that I know of

[22:30] <mofino> I tried reading some of the perl6 technical stuff...

[22:30] <mofino> my god...

[22:30] <mofino> even that SMOP stuff... so complex

[22:30] <Auzon> What stuff, out of curiosity?

[22:30] *** Auzon left
[22:31] *** jferrero joined
[22:31] *** Auzon joined
[22:31] <Auzon> bah.

[22:31] <mofino> I can't remember, I just saw intimidating words and ran away

[22:31] <Auzon> Heh.

[22:31] <mofino> it gives me the impression that perl6 will be technically awesome

[22:32] *** alester left
[22:32] <moritz_> Auzon: mostly test suite refactoriing

[22:32] <moritz_> Auzon: and a few Unicode fiddlings

[22:33] <pugs_svn> r19736 | cosimo++ | [t/spec] Possibly converted all remaining pod markers to pod6

[22:33] <Auzon> Regarding the test suites, do you need tests for the combinations of sprintf? I may have some tuits this weekend, and it'd be a decent way for me to get started with writing tests.

[22:33] *** TJCRI left
[22:33] <moritz_> looking...

[22:34] <moritz_> I found about a dozen sprintf tests in the test suite

[22:34] <moritz_> that's not enough ;)

[22:34] <moritz_> but bare in mind that perl 6 sprintf != C sprintf

[22:35] <Auzon> Does it resemble Perl 5 sprintf?

[22:35] <[particle]> S29?

[22:36] <Auzon> yes.

[22:36] <[particle]> gvim docs/Perl6/Spec/Functions.pod +1322

[22:37] *** jhorwitz left
[22:37] <cosimo_> hi all. I have finished to convert all t/spec pod markers.

[22:37] <cosimo_> Now I can attack the remaining non "spec" tests ... :-)

[22:38] *** explorer__ joined
[22:38] *** jferrero left
[22:38] <[particle]> cosimo_++ # keep it up!

[22:39] <cosimo_> I'm also trying to execute the t/spec tests with rakudo

[22:39] <cosimo_> but it's not easy for me to understand *why* tests fail...

[22:39] <[particle]> yep, i'm trying to reduce the parsefails by adding skip markers

[22:39] <cosimo_> yes, I saw that

[22:39] <moritz_> cosimo_: if you want some easy work, the regex tests should be easy to refactor

[22:40] <[particle]> for now, just add skip markers for everything that fails on rakudo

[22:40] <moritz_> cosimo_: if you want hard stuff, I'll do some regex test refactoring, but it will not be as fast as you do it ;)

[22:40] <[particle]> i'm trying to add some things to rakudo that will allow more statements to parse

[22:41] *** rdice left
[22:44] <[particle]> msg TimToady it seems 'my $x' isn't found in STD.pm. 'my $x = 3' is fine, but variable_decl is missing a ? after the last non-capturing group

[22:44] <moritz_> [particle]: just patch it ;)

[22:45] <[particle]> oh, right, it's in the pugs repo. duh!

[22:46] *** rdice joined
[22:47] <[particle]> moritz_++

[22:47] *** rdice left
[22:47] <pugs_svn> r19737 | particle++ | [STD] allow 'my $x' as well as 'my $x = 3' by adding a missing a ? after the last non-capturing group in the variable_decl token

[22:49] * [particle] is trying to add traits to rakudo

[22:50] <moritz_> [particle]++ # rakudo hacking

[22:51] <moritz_> is anybody motivated to get a bot here that prints rakudo commit messages?

[22:52] <[particle]> should be easy enough to do from feather. maybe call it rakudo_svn

[22:52] <[particle]> i think it'd be helpful for rakudo hackers here

[22:55] *** cmarcelo left
[22:59] <Juerd> Feather has a separate virtual machines for evalbots

[23:00] <Juerd> I'd be more than happy to give you an account there

[23:00] *** IllvilJa left
[23:00] <Juerd> You can get root access on it so you can customize it to your needs.

[23:01] <Juerd> I only ask from you that you make it reboot-proof :)

[23:01] <Juerd> (and invite evalbot-makers to reboot the machine to make sure.)

[23:02] *** cosimo_ left
[23:02] <[particle]> i'd rather not have root privs on any box, since the last time i used linux regularly was 2003

[23:02] *** dlocaus joined
[23:03] *** dlocaus left
[23:03] *** dlocaus joined
[23:03] *** japhb left
[23:03] <[particle]> Juerd: btw this is an svnbot, not evalbot, but i think that the vm you're talking about would work fine

[23:05] <Juerd> Oh, svnbots can just go on normal feather

[23:05] <Juerd> They don't need special security care :)

[23:05] *** damianc left
[23:07] *** Jamtech left
[23:10] *** alester joined
[23:11] *** rakudo_svn joined
[23:11] * moritz_ tries a hand made svn bot

[23:11] <rakudo_svn> r25302 | particle++ | [rakudo] add some more dirs to spectest target

[23:11] <rakudo_svn> r25303 | particle++ | [rakudo] add 'int' sub

[23:11] <rakudo_svn> r25304 | particle++ | [rakudo] fix skip($count, $reason) in Test.pm

[23:11] <rakudo_svn> r25316 | particle++ | [rakudo] add missing scope declarators to parser, and better error handling to emitter

[23:12] <[particle]> moritz_: we've got one in the pugs repo

[23:12] <moritz_> [particle]: that perl 6 based?

[23:12] <[particle]> yep

[23:12] <moritz_> It's always a pain to get working

[23:12] <[particle]> isn't pugs_svn running it? svnbotl on #parrot is

[23:13] <moritz_> yes

[23:13] <[particle]> ok. whatever works, i just want the bot :)

[23:13] <moritz_> now I have to teach the irclogs that r\d+ from rakudo_svn point to the parrot repo

[23:13] <moritz_> but that has to wait until tomorrow

[23:13] <moritz_> sleep &

[23:13] <[particle]> seems you have it working, so moritz_++

[23:23] *** thoughtpolice joined
[23:29] *** chris2 left
[23:30] *** japhb joined
[23:35] <alester> hey particle, can you please test out the new ack some time?

[23:36] *** namelessuser left
[23:37] *** szbalint left
[23:38] <[particle]> alester: it seems to hang for me on t/ack-1.t. i'll look into it as soon as i can switch contexts

[23:38] <alester> kthx

[23:41] *** araujo left
[23:46] <rakudo_svn> r25319 | particle++ | [rakudo] add traits

[23:46] <rakudo_svn> r25319 | particle++ | ~ traits now working during variable declaration

[23:47] *** iblechbot_ left
