[00:01] *** Limbic_Region joined
[00:07] *** abbyz left
[00:16] *** bsb joined
[00:24] <rakudo_svn> r25322 | particle++ | [rakudo] add trait parsing to parameters, and routine/method definitions

[00:37] *** Limbic_Region left
[00:38] *** pen1 joined
[00:38] *** pen1 is now known as penk_

[00:44] <rakudo_svn> r25323 | particle++ | [rakudo] parse parameter type constraints

[00:58] *** lyokato joined
[00:59] *** cnhackTNT joined
[01:08] *** japhb left
[01:16] *** kanru left
[01:16] *** stevan__ joined
[01:23] *** hcchien joined
[01:23] *** devogon left
[01:30] *** stevan_ left
[01:32] *** japhb joined
[01:50] *** jjore left
[02:04] *** dlocaus left
[02:19] *** kanru joined
[02:25] *** Schwern left
[02:31] *** dmq left
[02:51] *** dlocaus joined
[02:52] *** dlocaus left
[02:54] *** penk_ left
[02:56] *** apple-gunkies joined
[02:58] *** wknight8111 joined
[03:03] *** stevan__ left
[03:04] *** stevan_ joined
[03:18] *** jjore-w left
[03:23] *** explorer__ left
[03:36] *** fridim_ joined
[03:48] *** arguile left
[03:49] *** dmq joined
[03:49] *** meppl left
[03:49] *** arguile joined
[04:36] *** wknight8111 is now known as wknight-away

[04:51] *** Andy_ joined
[04:54] *** wknight-away left
[05:34] *** masak joined
[06:11] *** jjore joined
[06:24] *** thoughtpolice left
[06:34] *** devogon joined
[07:05] *** IllvilJa joined
[07:21] *** sri_work left
[07:31] *** qmole left
[07:43] *** njbartlett left
[07:49] *** Andy_ left
[08:05] *** Aankhen`` joined
[08:06] *** iblechbot joined
[08:24] *** DarkWolf84 joined
[08:45] *** njbartlett joined
[08:59] *** qmole joined
[09:05] *** DarkWolf84 left
[09:11] *** njbartlett left
[09:25] *** pbuetow left
[09:26] *** pbuetow joined
[09:42] *** IllvilJa left
[09:50] *** viklund joined
[09:55] *** Mindtilt joined
[10:04] *** ruoso joined
[10:19] *** cnhackTNT left
[10:25] *** njbartlett joined
[10:25] *** viklund left
[10:26] *** agentzh joined
[10:36] *** kanru left
[10:37] *** smtms left
[10:42] *** smtms joined
[10:52] *** crit joined
[11:08] *** chris2 joined
[11:10] <pugs_svn> r19738 | ruoso++ | [smop] first prototype of the sm0p grammar. It should be fairly complete now...

[11:13] *** lyokato left
[11:18] <pugs_svn> r19739 | ruoso++ | [smop] added a sample sm0p code. The grammar should handle comments and empty nodes...

[11:21] *** njbartlett left
[11:24] *** njbartlett joined
[11:45] *** masak left
[11:48] *** zamolxes joined
[12:03] *** crit left
[12:06] *** ChanServ sets mode: +o diakopter

[12:06] *** diakopter sets mode: +o TimToady

[12:07] *** diakopter sets mode: +o [particle]

[12:07] *** diakopter sets mode: +o Juerd

[12:08] *** ChanServ sets mode: +o moritz_

[12:09] <diakopter> that should be plenty

[12:09] <moritz_> thanks ;)

[12:25] *** iblechbot left
[12:29] <pugs_svn> r19740 | ruoso++ | [smop] small fixes in the sm0p grammar by fglock++

[12:40] *** masak joined
[12:44] <pugs_svn> r19741 | ruoso++ | [smop] adding a version of the grammar that compiles in KP6

[12:48] <pugs_svn> r19742 | ruoso++ | [smop] a test version using KP6 that compiles and runs... it still fails...

[12:49] <moritz_> ruoso: does that mean that a smop emitter can be implemented in the not-so-far future?

[12:50] *** IRSeekBot left
[12:52] <ruoso> moritz_, yep...

[12:52] <ruoso> but it's not a kp6 emitter right now... it's just a processing grammar

[12:52] <ruoso> smop/sm0p/KP6Test.pm

[12:53] <ruoso> sm0p is just a macro language... so a plain substitution grammar works

[12:53] <moritz_> ruoso: so what would that emitter emit? C code? or sm0p strings?

[12:53] <ruoso> C code

[12:54] <ruoso> like explained at http://www.jamendo.com/

[12:54] <ruoso> ooops

[12:54] <lambdabot> Title: Jamendo : Home

[12:54] <ruoso> http://www.perlfoundation.org/perl6/index.cgi?smop_sm0p_language

[12:54] <lambdabot> Title: SMOP sm0p Language / Perl 6

[12:54] <wolverian> ruoso++ # jamendo is cool

[12:55] *** chris2 left
[12:55] <moritz_> so sm0p is a DSL for emitted C code, that is parsed by the C preprcessor, right?

[12:56] *** penk left
[12:56] <ruoso> kinda...

[12:56] <ruoso> sm0p is a preprocessor in its own

[12:56] <ruoso> the code it generates is plain C code, as if a person had written it

[12:56] <moritz_> ok

[12:57] <ruoso> :/ it looks like kp6 quantifiers are not working... 

[12:57] <moritz_> so kp6 would emit C + sm0p-DSL, and sm0p turns that into plain C, and runs it with help of the smop VM.

[12:57] *** penk joined
[12:58] <ruoso> yeah... 

[12:58] <ruoso> that is what the s1p language will be

[12:58] <ruoso> because it's kinda hard to write code for sm0p in C

[12:58] <moritz_> and the one you are currently working on

[12:58] <ruoso> sm0p

[12:59] <pugs_svn> r19743 | ruoso++ | [smop] trying to make KP6 to run the sm0p preprocessor...

[13:00] <ruoso> moritz_, please take a look at smop/sm0p/KP6Test.pm

[13:00] <ruoso> you can run KP6_TOKEN_DEBUGGER=1 ./script/kp6 < ../smop/sm0p/KP6Test.pm from kp6 dir to test

[13:02] *** cmarcelo joined
[13:03] <ruoso> but kp6 * quantifier is not working... <ws>* <foo> is stopping when ws doesn't match...

[13:03] <moritz_> ruoso: can you call $string.frame? I expected $string ~~ frame or $string ~~ m/<frame> or something

[13:04] <moritz_> ruoso: and so for it can't match, because you have a <node>+, and the string doesn't contain a node

[13:05] <ruoso> kp6 didn't have smartmatch when I last check...

[13:05] <moritz_> hm, ok

[13:05] <ruoso> grammar.token() is the kp6 calling convention to call grammar tokens

[13:05] <ruoso> moritz_, if you run it with the token debugger, you'll see that it doesn't even get to that part of the processing...

[13:06] <moritz_> ruoso: in the kp6 grammar they use <opt_ws> instead of <ws>*

[13:06] <ruoso> hmm... let me try that

[13:06] <moritz_> and opt_ws is defined as { <.ws> | '' };

[13:06] <moritz_> that's a workaround around the non-working quantifiers

[13:08] *** IRSeekBot joined
[13:08] <ruoso> moritz_++, nice... I've just got to the next token :)

[13:09] <pugs_svn> r19744 | ruoso++ | [smop] one token ahead thanks to moritz++

[13:16] <ruoso> lunch &

[13:29] *** masak left
[13:35] *** ispy_ joined
[13:41] *** drrho joined
[14:31] *** ispy_ left
[14:38] *** drrho left
[14:42] *** rdice joined
[14:47] *** masak joined
[14:53] *** iblechbot joined
[14:57] *** TJCRI joined
[15:11] *** jhorwitz joined
[15:13] <pugs_svn> r19745 | ruoso++ | [kp6] kp6-token-debug updated to the new script hierarchy

[15:14] <pugs_svn> r19746 | ruoso++ | [smop] we are really close to getting sm0p to work!

[15:26] *** IllvilJa joined
[15:26] *** Mindtilt left
[15:26] <ruoso> hmmm... it seems that I can't get a capture as an array in kp6 yet...

[15:29] *** njbartlett left
[15:31] <pugs_svn> r19747 | ruoso++ | [smop] smop/sm0p/KP6Test.pm can successfully match, but the returned string is not being composed correctly...

[15:33] * ruoso wonder if anyone else has played with kp6 enough to help me with that...

[15:35] <moritz_> ruoso: what output do you expect?

[15:37] <moritz_> ah, you want a 'node = SMOP_DISPATCH' instead of ' = SMOP_DISPATCH' i suppose

[15:37] <ruoso> yeah... for starts...

[15:38] <moritz_> looking...

[15:40] <moritz_> in Grammar.pm the syntax $$<identifier> is used instead of $<identifier>

[15:40] <ruoso> yeah... but there the return is always a match object for every token

[15:40] <ruoso> here I'm returning string

[15:41] *** Mindtilt joined
[15:41] <moritz_> and when I use $$<identifier> it complains about not having a .Str defined

[15:43] <ruoso> I'm trying to define every token to always return an string...

[15:44] *** drrho joined
[15:45] *** penk left
[15:46] *** f0rth_ is now known as f0rth

[15:48] *** penk joined
[15:48] <pugs_svn> r19748 | ruoso++ | [smop] a small gain... at least something more is being output... Returing explicitly strings from each token seems to solve the problem.

[16:13] *** Mindtilt left
[16:13] *** macae joined
[16:29] *** Auzon left
[16:34] *** wknight8111 joined
[16:37] *** kanru joined
[16:38] *** drrho left
[16:38] *** manfred joined
[16:40] <cj> morning folks

[16:41] <cj> does TimToady hang out here during the week?

[16:42] <moritz_> cj: yes, that happens ;)

[16:42] <cj> well, I want him to review my notes on the conference so I can ask some questions on his behalf :)

[16:42] *** blindfish joined
[16:43] <cj> http://wp.colliertech.org/cj/?p=173 && http://wp.colliertech.org/cj/?p=174

[16:43] <lambdabot> Title: The P√¶dantic Programmer ª Blog Archive ª From Lang.NET 2008 - Tuesday

[16:43] *** masak left
[16:45] <moritz_> the second link doesn't have any content

[16:45] <[particle]> cj: did the weathermen scare you with reports of up to 6" of snow last night?

[16:46] <cj> [particle]: I never listen to them :)

[16:46] <[particle]> yeah, they're so rarely right, except in the summer when the weather never changes

[16:46] <cj> er, sorry... I meant 172 && 173 :)

[16:49] *** Psyche^ joined
[16:56] *** Patterner left
[16:56] *** Psyche^ is now known as Patterner

[17:05] *** rindolf joined
[17:07] *** PerlJam left
[17:18] *** wtgee joined
[17:19] *** blindfish left
[17:20] *** blindfish joined
[17:20] <Tene> pugs: $_ = 5; .++; .say;

[17:21] <exp_evalbot> OUTPUT[6‚ê§]

[17:22] <moritz_> wow

[17:22] <[particle]> pugs: $_=5; .++.say

[17:22] <exp_evalbot> OUTPUT[5‚ê§]

[17:23] <moritz_> pugs: $_=5; .++.Int.say

[17:23] <exp_evalbot> OUTPUT[*** No such method in class Int: "&Int"‚ê§    at /tmp/uhYiqq8X6g line 1, column 7 - line 2, column 1‚ê§]

[17:23] <moritz_> I think .++ is postifx-++

[17:25] <Tene> moritz_: wow?

[17:26] <Tene> pugs: $_ = 5; .++.say; .say;

[17:26] <moritz_> Tene: cool golfing possibilites

[17:26] <exp_evalbot> OUTPUT[5‚ê§6‚ê§]

[17:30] <cj> pugs: $_ = 5; ++.; .say;

[17:30] <exp_evalbot> OUTPUT[*** ‚ê§    Unexpected ";"‚ê§    expecting ".", "\187", ">>", "=", "^", operator name, qualified identifier, variable name, "...", "--", "++", "i", array subscript, hash subscript or code subscript‚ê§    at /tmp/XiDCypNJdh line 1, column 12‚ê§]

[17:31] <Tene> pugs: $_ = 5; .prefix:<++>; .say;

[17:31] <exp_evalbot> OUTPUT[6‚ê§]

[17:31] <Tene> pugs: $_ = 5; .prefix:<++>.say;

[17:31] <exp_evalbot> OUTPUT[6‚ê§]

[17:31] <moritz_> pugs: $_=5; .postfix:<++>.say

[17:31] <exp_evalbot> OUTPUT[5‚ê§]

[17:32] *** jjore left
[17:32] <Tene> pugs: $_ = 5; .circumfix:<++>.say;

[17:32] <exp_evalbot> OUTPUT[*** No such method in class Int: "&circumfix:++"‚ê§    at /tmp/keiaA9WyZE line 1, column 9-28‚ê§]

[17:32] <Tene> ;)

[17:39] *** rindolf left
[17:40] *** rindolf joined
[17:42] *** rff_ joined
[17:42] <mugwump> pugs: $_=[1,2,3]; .post_circumfix<[ ]>(1)

[17:42] <exp_evalbot> OUTPUT[*** No such method in class Array: "&post_circumfix"‚ê§    at /tmp/jDIsavKtRS line 1, column 13 - line 2, column 1‚ê§]

[17:42] <mugwump> pugs: $_=[1,2,3]; .post_circumfix:<[ ]>(1)

[17:42] <exp_evalbot> OUTPUT[*** ‚ê§    Unexpected ":<["‚ê§    expecting term postfix or operator‚ê§    at /tmp/jamUfKp6gu line 1, column 28‚ê§]

[17:43] <[particle]> s/_//

[17:43] <moritz_> pugs: $_=[1,2,3]; .postcircumfix:<[ ]>(1)

[17:43] <exp_evalbot> OUTPUT[*** No such method in class Array: "&postcircumfix:[ ]"‚ê§    at /tmp/0Js9Ntx0XC line 1, column 13 - line 2, column 1‚ê§]

[17:43] <spinclad> pugs: $_ = 5; .postfix_meta_circumfix:<++>.say;

[17:43] <lambdabot> spinclad: You have 2 new messages. '/msg lambdabot @messages' to read them.

[17:43] <moritz_> pugs: $_=[1,2,3]; .postcircumfix<[ ]>(1)

[17:43] <exp_evalbot> OUTPUT[*** ‚ê§    Unexpected ":<++>."‚ê§    expecting term postfix or operator‚ê§    at /tmp/J0IyQIwDLn line 1, column 32‚ê§]

[17:43] <exp_evalbot> OUTPUT[*** No such method in class Array: "&postcircumfix"‚ê§    at /tmp/wnWNhiizXY line 1, column 13 - line 2, column 1‚ê§]

[17:45] <spinclad> pugs: $_=[1,2,3]; .postfix_circumfix:<[ ]>(1)

[17:45] <exp_evalbot> OUTPUT[*** ‚ê§    Unexpected ":<["‚ê§    expecting term postfix or operator‚ê§    at /tmp/Ac8KbcA38M line 1, column 31‚ê§]

[17:46] <spinclad> durn.

[17:46] *** blindfish left
[17:52] <diakopter> anyone here attending Lang.Net 2008?

[17:53] *** Jamtech joined
[17:54] <moritz_> diakopter: cj is

[17:54] <diakopter> moritz_: thanks

[17:56] *** alester is now known as AndyAway

[18:01] <cj> diakopter: yeah, hi :)

[18:01] <cj> anythign you want asked?

[18:01] <cj> notes here: http://wp.colliertech.org/cj/?p=173

[18:01] <lambdabot> Title: The P√¶dantic Programmer ª Blog Archive ª From Lang.NET 2008 - Tuesday

[18:02] <diakopter> cj: not particularly, except does MS' open source lab still want to host a build/smoke farm for parrot and the perl6 implementations, like they mentioned [in private conversation] last year

[18:03] *** acmoore joined
[18:03] <diakopter> although it's probably not the right venue for that question

[18:04] *** IllvilJa left
[18:05] <diakopter> in conversations at Oscon, I should mention

[18:06] <cj> diakopter: I'll ask around.  I don't know who to talk with, though.  Do you?

[18:08] <diakopter> probably no one there

[18:08] *** njbartlett joined
[18:09] *** justatheory joined
[18:12] <diakopter> moritz_: for future rakudo svn bot(s), all you need is an rssbot to watch/mirror this: http://parrotvm.org/svn/parrot/rss/trunk/languages/perl6  the committer userid is in the xml as well.

[18:14] <[particle]> anyone write an rdf grammar in perl 6 rules yet?

[18:16] *** jjore-1 joined
[18:16] *** jjore-1 left
[18:16] *** jjore-w joined
[18:21] <Tene> Hmm.  That might be fun.

[18:22] *** barney joined
[18:23] *** kyrbe joined
[18:23] *** IllvilJa joined
[18:25] <Tene> [particle]: xml or N3?

[18:25] *** kyrbe left
[18:25] <[particle]> whatever we can use to process feeds

[18:26] <Tene> Oh, that was relevant.

[18:26] <Tene> :)

[18:33] *** macae left
[18:36] <moritz_> diakopter: I know, but since I already had a svnbot, it was just a few lines of config ;)

[18:44] <diakopter> [particle]: if you're wanting to get at that rss feed, the rss template can be altered to whatever format - beit \n-delimited ascii records, if you want, I think.

[18:48] *** rindolf left
[18:50] *** rff_ left
[18:51] *** sri_work joined
[18:57] *** Psyche^ joined
[19:09] *** Patterner left
[19:09] *** Psyche^ is now known as Patterner

[19:11] *** PerlJam joined
[19:23] *** barney left
[19:27] <moritz_> pugs: (1, 2) X <a b c> X 3,

[19:27] <exp_evalbot> RESULT[((1, "a", 3), (1, "b", 3), (1, "c", 3), (2, "a", 3), (2, "b", 3), (2, "c", 3))]

[19:28] <TimToady> pugs: 1,2 X <a b c> X 3

[19:28] <exp_evalbot> RESULT[((1, "a", 3), (1, "b", 3), (1, "c", 3), (2, "a", 3), (2, "b", 3), (2, "c", 3))]

[19:28] <TimToady> the parens aren't necessary due to list infix predecedence

[19:29] <moritz_> I thought so, but wasn't sure ;)

[19:30] <cj> TimToady: I built a source package of Microsoft's dynamic language runtime .NET libs :)

[19:31] <cj> this should ease the process of building a parser that emits something can that run on .NET

[19:31] <cj> http://colliertech.org/downloads/DLR/dlr-solution-1.0.tar.gz

[19:31] <cj> it may require an svn version of mono and mcs to compile, though...

[19:32] <TimToady> what dependencies does it have?

[19:32] <TimToady> heh

[19:32] <cj> TimToady: nothing outside of the core .NET libs

[19:32] <TimToady> now you just need to write a kp6 emitter, or cajole someone else into doing it :)

[19:33] <cj> yeah... I've got so many other projects on my plate... maybe I'll do enough to pique someone else's interest... that usually works, doesn't it? :)

[19:33] <TimToady> are the 2nd life continuations real continuations or just database continuations?

[19:33] <cj> hmm... let me ask #libsl and friends...

[19:34] *** Aankhen`` left
[19:39] *** fridim_ left
[19:43] <cj> I'm sure they'll get back to me about it sooner or later.

[19:46] <cj> TimToady: miguel made it sound like they're real continuations when he was talking about them.  They're expensive and slow, but stack frames can be frozen and thawed.

[19:47] <TimToady> expensive and slow are probably okay, as long as we can implement gather/take with some other mechanism

[19:48] <TimToady> we can also emulate resumably exceptions most of the time without really using continuations

[19:48] <TimToady> *resumable

[19:48] *** blindfish joined
[19:48] * ruoso going home but still with sm0p matching but not returning a sane string...

[19:49] <TimToady> so warn() in theory sends its continuation to the handler which calls it back, but all warn really needs to do is return

[19:49] <TimToady> that's one of the main reasons for *not* unwinding the stack when you throw an exception

[19:50] <cj> TimToady: is that the only place where continuations are used?  resumable exceptions?

[19:51] <TimToady> gather/take are generalized coroutines, and could easily be implemented in terms of continuations

[19:51] * justatheory warns TimToday

[19:51] <justatheory> Erm, TimToady

[19:51] <PerlJam> TimToday, TomTomorrow

[19:51] <TimToady> but they could also be implemented in terms of threads, or in an event engine

[19:52] <TimToady> I understand you used to coach a baseball team...

[19:56] <TimToady> anyway, I know to to implement regex backtracking in terms of gather/take, so it doesn't need continuations necessarily

[19:57] <TimToady> however, continuations are very desirable for many kinds of logic programming

[19:58] <TimToady> and we need some efficient way of doing lazy evaluation of lists

[19:59] <TimToady> and there are ways of looking at closures sideways and seeing continuations

[20:02] <TimToady> but basically, Perl 6 tries to dance right on the edge of requiring continuations without actually doing so, which opens up many opportunities for doing something more efficient than continuations most of the time

[20:13] *** jonp joined
[20:13] *** evarlast joined
[20:15] *** monomorph joined
[20:15] *** babbagelinden joined
[20:16] <babbagelinden> evening all

[20:16] <cj> TimToady: babbagelinden is responsible for second life's continuation implementation

[20:17] <cj> babbagelinden: TimToady is the primary author of the perl6 spec

[20:17] <TimToady> er, yeah, that's me

[20:17] <babbagelinden> hi tim

[20:18] <[particle]> babbagelinden: his friends call him larry wall :)

[20:18] <cj> babbagelinden: TimToady earlier asked... are the 2nd life continuations real continuations or just database continuations?

[20:18] <TimToady> how would you characterize the limitations of your continuations?

[20:18] <PerlJam> his enemies call him larry wall too

[20:18] <TimToady> I usually just answer to "hey you"

[20:19] <cj> "don't call me late for dinner!"

[20:19] <babbagelinden> well, it's horribly inefficient as you end up copying the CLI stack to the heap as a continuation

[20:19] <[particle]> urk

[20:19] <babbagelinden> and it causes assembly bloat due to the generated stack frame classes

[20:19] <TimToady> so you presumablyu 

[20:19] <babbagelinden> (which will be less bad with generic code sharing)

[20:20] <TimToady> only when explicitly asked to do so

[20:20] <babbagelinden> and managed pointers aren't currently supported

[20:20] <babbagelinden> apart from that it mostly works :-)

[20:20] <babbagelinden> and it works on any CLI runtime: .NET or Mono on any platform

[20:20] <TimToady> but you wouldn't use it for, say, backtracking in logic programming...

[20:21] <babbagelinden>  i wouldn't use it if i was building a vm

[20:21] <TimToady> if you wanted to evaluate many alternatives rapidly

[20:21] <babbagelinden> but it's a usable hack if you're bolting someone elses vm in to your system :-)

[20:21] <[particle]> are there bsr/ret ops?

[20:22] <babbagelinden> the approach has been used a number of times to implement migrating agents in Java

[20:23] <TimToady> here I reveal my profound ignorance, but does SL generally use its own VM or someone else's?

[20:23] <babbagelinden> see JavaGoX and brakes

[20:23] <cj> babbagelinden: the reason your team developed this was to save a second life character's state when moving from one server to another, wasn't it?

[20:23] <babbagelinden> we were using our own vm

[20:23] *** meppl joined
[20:23] <cj> babbagelinden: so it's probably optimized for once-ever-now-and-then use?

[20:23] <babbagelinden> it's mainly to deal with migrating running scripts between processes

[20:24] <babbagelinden> but it works well enough that we can use it for threading

[20:24] <cj> TimToady: they are in the process (this very moment) of moving from their VM to Mono :)

[20:24] <TimToady> are different VMs compatible at the continuation level?

[20:24] <babbagelinden> yes, if you use a soap formatter

[20:24] <babbagelinden> you could pass a continuation from mono to .NET

[20:24] <cj> babbagelinden: that's pretty fancy.  migrating states between processes...

[20:24] <babbagelinden> which would be fun

[20:25] <babbagelinden> if you used a binary formatter it might work

[20:25] <babbagelinden> but its less likely

[20:26] <TimToady> my guys tend to like yaml, but it's like "whatever.." :)

[20:26] <[particle]> so you can write it to disk, and save the continuation for after the processor has lunch or whatever

[20:26] * cj grabs some lunch...

[20:27] <TimToady> babbagelinden: thanks for the braindump

[20:27] <babbagelinden> np

[20:27] <babbagelinden> there are details on my blog

[20:27] <babbagelinden> http://blog.secondlife.com/author/babbagelinden

[20:27] <lambdabot> Title: babbagelinden ´ Official Linden Blog

[20:27] <TimToady> I'm sure if I really knew what I was talking about I'd have more questions... :)

[20:27] <TimToady> 'k thanks

[20:27] <babbagelinden> you need to scroll back a couple of years for the theory ;-)

[20:28] <TimToady> .oO(the Wayback Machine as continuations)

[20:29] *** blindfish left
[20:31] <TimToady> .oO(and whether First Life has continuations stored anywhere...)

[20:32] *** jonp left
[20:33] *** babbage joined
[20:41] <mugwump> babbagelinden: Brighton is less than an hour from London?  So long as you're already in Wimbledon on the express to Brighton?  ;)

[20:43] <babbage> it's 50 minutes from Victoria :-)

[20:43] <babbage> and 0 minutes from the sea :-)

[20:44] <mugwump> I seem to remember it took that long just to get to Guildford

[20:45] <babbage> you need to get the right train :-)

[20:49] <mugwump> ah, yes, my geography was being warped by travel maps

[20:50] *** manfred left
[20:51] *** babbagelinden left
[20:52] *** xinming_ left
[21:00] *** zamolxes left
[21:02] *** REPLeffect joined
[21:06] *** SubStack left
[21:06] *** SubStack joined
[21:12] *** rdice left
[21:13] *** xinming joined
[21:18] *** codeRat joined
[21:27] *** babbage_ joined
[21:28] *** rdice joined
[21:32] *** namelessuser joined
[21:37] *** jhorwitz left
[21:39] *** codeRat left
[21:46] *** iblechbot left
[21:48] *** babbage left
[22:02] *** __Ace__ joined
[22:04] *** iblechbot joined
[22:18] *** TJCRI left
[22:24] *** rdice left
[22:35] *** Schwern joined
[22:37] *** Limbic_Region joined
[22:42] *** jferrero joined
[22:42] *** marmic left
[22:46] *** marmic joined
[22:49] *** ispy_ joined
[22:54] <AndyAway> updated http://en.wikipedia.org/wiki/Perl_6 to talk about Rakudo

[22:54] *** AndyAway is now known as alester

[22:56] <wolverian> alester++ # good idea 

[22:56] <wolverian> http://en.wikipedia.org/wiki/Perl_6#Implementations might need revising...

[22:57] <alester> The whole thing could.

[22:57] <wolverian> yes

[22:57] *** iblechbot left
[23:11] *** atobey joined
[23:11] <obra> http://ycombinator.com/arc/tut.txt - paul graham and rtm finally released a demo of arc

[23:11] *** atobey is now known as tobeya

[23:12] <obra> http://arclanguage.org/

[23:12] <lambdabot> Title: Arc Forum | Arc

[23:14] *** babbage_ left
[23:14] <Juerd> Just be careful not to make Wikipedia more useful than the Perl 6 sites :)

[23:14] <Juerd> That'd add one more website to the soup

[23:15] *** Helios-_ joined
[23:16] <alester> Juerd: Why can't there be multiple websites?

[23:17] <Juerd> There can be multiple websites

[23:18] *** cmarcelo left
[23:18] <Juerd> But a small group of people is working on them. Spending time on site foo means you're not spending time on site bar. There is very little overview, and even those closely involved with Perl 6 waste quite some tuits over finding information, and reading obsolete documents.

[23:19] <Juerd> And instead of making the existing sites better (they're often no longer maintained by their original authors because of tuit shortage), our community prefers to add new sites.

[23:19] <Juerd> This hurts. It does a great deal of damage to the projects.

[23:19] <alester> In my case, it's a matter of tuits there.

[23:19] <Juerd> The same problem is going on with Perl 5, by the way.

[23:20] *** REPLeffect left
[23:20] <Juerd> alester: I'm not saying anyone is at fault, or should have done something. Circumstances lead to other circumstances.

[23:21] <Juerd> But it would be rather sad, IMO, to have a nice and shiny Wikipedia link, if there's not even a single semi-official (or regarded-as-official) Perl 6 site that has the same amount of info in a coherent way.

[23:21] <Juerd> s/link/article/

[23:22] *** Schwern left
[23:22] <namelessuser> What would be wrong with making the wikipedia one just be the official one?

[23:22] <alester> "just"?

[23:22] <alester> How does something be official?

[23:22] <Juerd> namelessuser: Their policies.

[23:23] <alester> Never mind the policy, what is an "Offical Page"?

[23:23] *** Helios- left
[23:23] *** Helios-_ is now known as Helios-

[23:23] *** Schwern joined
[23:23] <Juerd> alester: I refuse to discuss the pros and cons of authoritative websites. I'm not sure myself.

[23:23] <namelessuser> Jured:  Do you mean that they are a bunch of numb-nutz?  Or is it a copyright-type issue?

[23:23] <Juerd> namelessuser: Neither

[23:24] <Juerd> namelessuser: They're an encyclopaedia. You can't use Wikipedia as a portal to link to all the other Perl 6 sites, for example.

[23:24] <alester> Juerd: It's not a pros and cons.  It's a matter of what "officail" means.

[23:24] <namelessuser> Jured: Ah, that's a good point.  I was thinking along the lines of making everything link back to them, but not being able to link away is a valid reason.

[23:24] <Juerd> alester: Something that either Larry or a large part of the community endorse as the best place for info.

[23:25] <Juerd> namelessuser: Please note that in my name, the "e" is before the "r" :)

[23:25] <alester> But who cares if Larry endorses it?  How will people find it?

[23:25] <namelessuser> Juerd:  Sorry.  My font is too small.  :)

[23:25] <alester> Larry endorsing it doesn't help the question of "which site is official".

[23:25] <Juerd> alester: Once there's an official, no, MAIN site, many of the other sites would disappear or link there.

[23:25] <alester> If Larry says Perl6.us is official, how do people know that?

[23:26] <Juerd> Currently, dev.perl.org is the kind-of-official place for Perl 6

[23:26] <alester> Juerd: Or maybe they wouldn't.  Maybe the MainOfficial site doesn't get updated enough.

[23:26] <Juerd> But it's illmaintained.

[23:26] <alester> EXACTLY

[23:26] <alester> You can't declare something to the the official anything.

[23:27] <Juerd> And because it's not maintained with all (or at least lots of) relevant info, nobody uses it and nobody links to it.

[23:27] <Juerd> Yes you can

[23:27] <Juerd> Just not by yourself, unless you're Larry :)

[23:27] <namelessuser> FWIW, the main reason I'm here is because the feel that I got from dev.perl.org was that nothing was happening, and I wanted to see for myself.

[23:27] <Juerd> namelessuser: I hear that a lot.

[23:28] <alester> No, even if Larry syas "this is official" that doesn't mean it gets maintained.

[23:28] <alester> Who maintains it?

[23:28] <alester> Who says what should be on it?

[23:28] *** JarJarBinks joined
[23:29] <Juerd> Even though I've had very few tuits I can spend on Perl 6, and waste most of those that I do have on IRC, many people in the Perl scene here see me as "the Perl 6 guy" and come to me with their complaints. I hear "nothing appears to be going on" a lot.

[23:29] <Juerd> There is news one could find

[23:29] <Juerd> But not where people look for it.

[23:29] <Juerd> alester: I think a pumpking scheme would work.

[23:30] <alester> Juerd: The "news one could find" is why I'm trying to funnel it all thru rakudo.org

[23:30] <Juerd> alester: But rakudo.org, as you said, is going to be Rakudo-specific

[23:30] <alester> Well, we take what steps we can.

[23:30] <Juerd> And that's probably wise

[23:31] <Juerd> But I myself have no idea what kp6 really is, and why/if it's relevant.

[23:32] <Juerd> Pugs has not been going anywhere without Audrey, but in many places Pugs is linked to as if it's "the" Perl 6 implementation

[23:32] <alester> The "linked to as THE" problem will go away as Rakudo moves forward.

[23:32] <Juerd> I think that maintaining the web of information would be much easier if it wouldn't be spread all over the interweb.

[23:33] <alester> SO much of this is organic.

[23:33] <Juerd> Yes, it's organic.

[23:33] <alester> You can't stop the spread of it.

[23:33] <alester> So don't try.

[23:33] <Juerd> Oh, I'm sure I can't.

[23:33] <alester> Instead, prune and aim.

[23:33] <Juerd> If I could I'd have done it.

[23:33] <Juerd> But that doesn't mean we, as a community, should just forget about trying to fix this real problem.

[23:34] <Juerd> Even if we can't fix it, and if we're sure it will get worse, we can do our best to make sure it doesn't get worse than it has to.

[23:34] <alester> You sound like a Perlbuzz article waiting to happen.

[23:34] <alester> Whyncha write up your thoughts on this and I'll post it.

[23:34] <Juerd> Perlbuzz itself is an example of the problem, to be honest.

[23:34] <Juerd> Don't get me wrong, I do love perlbuzz :)

[23:35] <alester> If the One Single Source of information is suboptimal, then new solutions grow around it.

[23:35] <alester> And so it did.

[23:35] <Juerd> Yes, because nobody who controls the one single source appears to notice that it's insufficient

[23:35] <alester> Right.

[23:35] <Juerd> But why is this so in our community, but not in several other communities?

[23:36] <alester> Juerd: I don't have an answer for that.

[23:36] <Juerd> I think I do.

[23:36] <alester> I suspect that you're incorrect in your premise.

[23:36] <Juerd> But nobody will like it. Hoping I will be corrected: we fear communication, but most of all: we're afraid to give up control.

[23:36] <alester> Juerd: I have to run.  Let's talk more about this.  I do want to.

[23:36] <Juerd> Sure

[23:36] <alester> Control to who?

[23:36] <Juerd> Bye :)

[23:36] <alester> Who gets to control use.perl.org?

[23:36] <Juerd> Control to those who ask for it.

[23:37] *** ispy_ left
[23:37] <alester> So whoever wants to overhaul use.perl.org gets to do so?

[23:37] <alester> "Hey, we're getting rid of Slash, it sucks."

[23:37] <Juerd> There's someone who owns perl6.org, who has good intentions, but he really doesn't want to give it to the people who work on Perl 6 day to day.

[23:37] <alester> Slash is one of the key things I saw on use.perl.org, and I knew it would never change.

[23:38] <alester> So given that, what could I do?

[23:38] <alester> And why SHOULD pudge hand over the reins?

[23:38] <Juerd> Well, use.perl/perlbuzz are not a problem :)

[23:38] <Juerd> Can't have any single news source

[23:38] <alester> OK, I really have to go/.

[23:38] <alester> seeya

[23:38] *** alester is now known as AndyAway

[23:39] <Juerd> BTW, on rereading perlbuzz, I realise that I had that in my mind wrong

[23:39] <Juerd> It's a blog

[23:39] <Juerd> use.perl.org is not a blog

[23:39] <Juerd> use.perl.org is a microcommunity

[23:40] <Juerd> ... of blogs :)

[23:41] <Juerd> The /content/ of perlbuzz could easily go into use.perl.org (not layout, not purpose, etcetera), in a user journal

[23:41] <Juerd> I'm not saying it should

[23:42] <Juerd> But in general (except from third party articles) it could just be andy's journal on use.perl

[23:42] <Juerd> Oh, if I'm talking to an empty channel anyway, I want to point out that I don't like that search.cpan.org isn't just cpan.org

[23:49] *** wtgee left
[23:50] *** ebassi joined
[23:53] *** cmarcelo joined
