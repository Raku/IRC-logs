[00:00] *** reportable6 left
[00:03] *** reportable6 joined
[00:10] *** uzl left
[00:10] *** toddr joined
[00:31] *** leont left
[00:38] *** toddr left
[01:02] *** netrino left
[01:25] *** aborazmeh left
[01:28] *** wildtrees left
[01:34] *** snarkyboojum joined
[01:38] *** cpan-p6 left
[01:38] *** cpan-p6 joined
[01:38] *** cpan-p6 left
[01:38] *** cpan-p6 joined
[01:48] *** Sgeo_ is now known as Sgeo

[01:49] *** lembark joined
[01:56] *** molaf left
[01:57] *** mahafyi left
[02:01] *** Manifest0 left
[02:01] *** Manifest0 joined
[02:08] *** Doc_Holliwood left
[02:09] *** molaf joined
[02:10] *** mahafyi joined
[02:20] *** lembark left
[02:24] *** quester joined
[02:26] *** Cabanossi left
[02:31] *** yht joined
[02:35] *** Cabanossi joined
[02:36] *** mniip_ joined
[02:37] *** yht left
[02:44] *** mniip_ is now known as mniip

[03:02] *** molaf left
[03:12] *** [particle]1 left
[03:12] *** Demos[m] left
[03:12] *** mack[m] left
[03:13] *** sergiotarxz[m] left
[03:13] *** Guest35100 left
[03:13] *** DarthGandalf left
[03:13] *** Hotbees left
[03:13] *** pnu__ left
[03:13] *** ChoppedBacon left
[03:13] *** kawaii left
[03:13] *** tony-o joined
[03:13] *** stux|RC joined
[03:13] *** a3f joined
[03:13] *** DarthGandalf joined
[03:14] *** peteretep joined
[03:14] *** pnu__ joined
[03:14] *** kawaii joined
[03:14] *** sergiotarxz[m] joined
[03:14] *** Guest35100 joined
[03:14] *** Demos[m] joined
[03:15] *** mack[m] joined
[03:18] *** BuildTheRobots joined
[03:18] *** mithaldu_ joined
[03:18] *** [particle]1 joined
[03:18] *** Hotbees joined
[03:18] *** ChoppedBacon joined
[03:18] *** tbrowder joined
[03:18] *** mtj_ joined
[03:18] *** Bucciarati joined
[03:18] *** BuildTheRobots left
[03:18] *** BuildTheRobots joined
[03:18] *** mithaldu_ left
[03:18] *** mithaldu_ joined
[03:19] *** BuildTheRobots left
[03:21] *** BuildTheRobots joined
[03:27] *** rainmanjam joined
[03:42] *** rindolf joined
[03:53] *** lembark joined
[04:06] *** rainmanj_ joined
[04:07] *** rainmanj_ left
[04:08] *** rainmanj_ joined
[04:10] *** rainmanjam left
[04:51] *** adu left
[05:10] *** lembark left
[05:17] <pilne> i kindasorta really like using.... wsl/ubuntu as a dev environment.... because the nuke/reinstall is stupid easy if i shitlord it all up

[05:25] *** Sgeo_ joined
[05:25] *** sjm_uk joined
[05:29] *** Sgeo left
[05:37] <Elronnd> pilne: heresy!

[05:39] <pilne> :D

[05:39] <pilne> is that like the "blood for the blood god, skulls for the skull throne" kinda heresy?

[05:39] <Elronnd> I used wsl for a while

[05:39] <Elronnd> could not stand it

[05:40] <Elronnd> windows so slow and buggy

[05:41] <pilne> i don't think i'd like to use it on the major regular, but for the moment i'm not going to dual boot this machine, and i don't quite know where to setup the old lappy to have my *nix box at the same time, but realistically i've yet to run into issues with the dablbing/digging/poking i'm doing with

[05:41] <pilne> win10 "native" as it were.

[05:54] *** cpan-p6 left
[05:55] *** cpan-p6 joined
[05:55] *** cpan-p6 left
[05:55] *** cpan-p6 joined
[05:59] *** snarkyboojum_ joined
[06:00] *** reportable6 left
[06:01] *** reportable6 joined
[06:02] *** snarkyboojum left
[06:07] *** xinming joined
[06:17] *** MasterDuke joined
[06:36] *** woolfy left
[06:54] *** lizmat left
[07:12] *** cpup left
[07:17] *** cpup joined
[07:18] *** quester left
[07:33] *** aborazmeh joined
[07:33] *** aborazmeh left
[07:33] *** aborazmeh joined
[07:39] *** sjm_uk left
[07:41] *** kylese joined
[07:47] *** sjm_uk joined
[08:32] *** kylese left
[08:34] *** Sgeo_ left
[08:35] *** Sgeo_ joined
[08:38] *** jaldhar left
[08:38] *** jaldhar joined
[08:51] *** Sgeo_ left
[08:51] *** Sgeo_ joined
[09:13] *** chloekek joined
[09:17] *** aborazmeh left
[09:20] *** leont joined
[09:24] *** MilkmanDan left
[09:25] *** MilkmanDan joined
[09:25] *** sjm_uk left
[09:26] *** sjm_uk joined
[09:35] *** leont left
[09:50] *** chloekek left
[10:08] *** robertle left
[10:09] *** Black_Ribbon left
[10:13] *** epony left
[10:28] *** mowcat joined
[10:29] *** antoniogamiz joined
[10:31] *** epony joined
[10:32] *** sjm_uk left
[10:33] *** Sgeo__ joined
[10:36] *** Doc_Holliwood joined
[10:36] *** Sgeo_ left
[10:38] *** molaf joined
[10:49] *** chloekek joined
[11:22] <Geth> ¬¶ rakudo.org: 85e531a04d | (Roman Baumer)++ (committed using GitHub Web editor) | nginx.conf

[11:22] <Geth> ¬¶ rakudo.org: add nginx.conf

[11:22] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/85e531a04d

[11:22] *** Doc_Holliwood left
[11:27] *** Sgeo_ joined
[11:31] *** Sgeo__ left
[11:33] *** _jrjsmrtn left
[11:34] *** __jrjsmrtn__ joined
[11:43] *** jmerelo joined
[11:43] <jmerelo> squashable6: status

[11:43] <squashable6> jmerelo, Next SQUASHathon in 25 days and ‚âà16 hours (2019-09-07 UTC-12‚åÅUTC+20). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:00] *** reportable6 left
[12:00] <chloekek> jmerelo: I did some more work on the distributions and versions stuff and I now have a file with META data along with tarball URLs and hashes for nearly all distributions. :)

[12:02] *** reportable6 joined
[12:02] *** ChanServ sets mode: +v reportable6

[12:07] *** pmurias joined
[12:08] *** cpup left
[12:09] *** Sgeo__ joined
[12:09] <pmurias> Xliff: re Java going closed source, didn't they actually open source more of the JVM but are making old releases paid?

[12:11] <jmerelo> chloekek: great

[12:13] *** Sgeo_ left
[12:13] *** cpan-p6 left
[12:13] *** cpan-p6 joined
[12:13] *** cpan-p6 left
[12:13] *** cpan-p6 joined
[12:13] <jmerelo> pmurias: I think some of the releases are. Enterprise releases, mostly

[12:15] *** netrino joined
[12:34] *** pmurias left
[12:38] *** chloekek left
[12:40] *** cpup joined
[12:46] *** aborazmeh joined
[12:46] *** aborazmeh left
[12:46] *** aborazmeh joined
[12:49] *** mowcat left
[12:49] *** chloekek joined
[12:55] <El_Che> lo

[12:55] <antoniogamiz> o/

[13:02] *** jaldhar left
[13:02] *** jaldhar joined
[13:08] *** jaldhar left
[13:09] *** jaldhar joined
[13:09] *** xinming left
[13:12] *** jaldhar left
[13:13] *** jaldhar joined
[13:14] *** antoniogamiz left
[13:17] *** mowcat joined
[13:21] *** jaldhar_ joined
[13:22] <jmerelo> chloekek: you got a direct message :-)

[13:22] *** jaldhar_ left
[13:23] *** jaldhar_ joined
[13:23] *** netrino left
[13:24] *** jaldhar left
[13:24] *** jaldhar_ left
[13:25] *** jaldhar_ joined
[13:25] *** lichtkind joined
[13:25] <lichtkind> can I rename packages I loaded?

[13:26] *** |oLa| left
[13:27] *** netrino joined
[13:28] <lichtkind> something use Long::Package as 'LP';

[13:31] <moritz> constant LP = Long::Package;

[13:32] <lichtkind> yes but can i call LP::somsub() ?

[13:32] *** jmerelo left
[13:32] <moritz> I think so, yes

[13:34] <moritz> I think "use LP:name('Long::Package');" is also supposed to work; no idea if it's implemented yet

[13:34] *** jaldhar_ left
[13:35] *** jaldhar_ joined
[13:36] *** jaldhar_ left
[13:36] <cpan-p6> New module released to CPAN! Image::QRCode (0.0.2) by 03FRITH

[13:37] *** jaldhar_ joined
[13:37] *** aborazmeh left
[13:40] *** robertle joined
[13:41] <lichtkind> indeed

[13:41] <lichtkind> moritz++

[13:42] <lichtkind> still i would prefere a keyword as as syntactic sugar

[13:44] *** jaldhar_ left
[13:45] *** jaldhar_ joined
[13:45] *** lichtkind left
[13:46] *** jaldhar_ left
[13:47] <chloekek> moritz: oh nice, I always wrote my constant LP = Long::Package;

[13:47] *** jaldhar_ joined
[13:48] *** lucasb joined
[13:51] *** Sgeo_ joined
[13:54] *** Sgeo__ left
[13:56] *** jaldhar_ left
[13:57] *** jaldhar_ joined
[13:58] *** jaldhar_ left
[13:59] *** jaldhar_ joined
[14:00] *** jaldhar_ left
[14:01] *** jaldhar_ joined
[14:02] *** jaldhar_ left
[14:03] *** jaldhar_ joined
[14:03] *** empee0 joined
[14:04] *** uzl joined
[14:04] <uzl> m: sub f(Str $n = 'hello' --> Bool) { $n }; f()

[14:04] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Type check failed for return value; expected Bool but got Str ("hello")‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:05] <uzl> m: sub f(Str $n = 'hello' --> Bool) { $n }; f().put

[14:05] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Type check failed for return value; expected Bool but got Str ("hello")‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:05] <uzl> m: sub f(Str $n = 'hello' --> Bool()) { $n }; f().put

[14:05] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´True‚ê§¬ª

[14:07] <uzl> Is this '--> Type()', instead of just '--> Type', in the signature's return constraint documented? It's kind of nifty.

[14:12] *** jaldhar_ left
[14:13] *** jaldhar_ joined
[14:14] <netrino> uzl: read about that just yesterday https://docs.perl6.org/language/functions#Coercion_types

[14:14] *** jaldhar_ left
[14:15] *** jaldhar_ joined
[14:16] *** jaldhar_ left
[14:17] *** jaldhar_ joined
[14:17] <uzl> netrino: Thanks. I think I need to read the Functions page more carefully ;-).

[14:18] *** jaldhar_ left
[14:19] *** jaldhar_ joined
[14:32] *** jaldhar_ left
[14:33] *** jaldhar_ joined
[14:38] *** antoniogamiz joined
[14:40] *** jaldhar_ left
[14:41] *** jaldhar_ joined
[14:46] *** |oLa| joined
[14:49] *** chloekek left
[14:49] *** netrino_ joined
[14:52] *** netrino left
[14:59] *** Sgeo_ left
[15:01] *** |oLa| left
[15:05] <Geth> ¬¶ doc/regexes: 7b5d7d3eac | threadless-screw++ | doc/Language/regexes.pod6

[15:05] <Geth> ¬¶ doc/regexes: Upgrade of Literals section

[15:05] <Geth> ¬¶ doc/regexes: review: https://github.com/perl6/doc/commit/7b5d7d3eac

[15:08] *** Sgeo joined
[15:14] <Geth> ¬¶ doc: threadless-screw++ created pull request #2946: Upgrade of Literals section

[15:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2946

[15:17] *** Sgeo left
[15:20] *** jaldhar_ left
[15:21] *** jaldhar_ joined
[15:21] *** Sgeo joined
[15:22] *** Sgeo left
[15:23] *** Sgeo joined
[15:23] <perryprog> Out of curiosity, are there any nicer perl6 repls than the default one?

[15:25] <timotimo> well, there's a jupyter notebook kernel

[15:25] <timotimo> which you can also use with the qtconsole (not sure if they call it jupyter qtconsole or if it's still called ipython qtconsole)

[15:33] *** robertle left
[15:33] *** netrino_ left
[15:35] <perryprog> oh yeah an ipython like john would be great

[15:36] <timotimo> who is john?

[15:36] <perryprog> s/john/thing

[15:37] <timotimo> https://github.com/bduggan/p6-jupyter-kernel

[15:37] <perryprog> Thank you.

[15:38] <timotimo> https://www.youtube.com/watch?v=tSZV8IXIsM4 - als o a presentation on this exact thing

[15:58] *** zakharyas joined
[16:09] *** molaf left
[16:13] <AlexDaniel> m: say 42

[16:13] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´42‚ê§¬ª

[16:25] *** netrino joined
[16:28] *** molaf joined
[16:36] *** |oLa| joined
[16:38] *** sjm_uk joined
[16:40] *** jaldhar_ left
[16:41] *** jaldhar_ joined
[16:50] *** jaldhar_ left
[16:51] *** jaldhar_ joined
[16:51] *** sjm_uk left
[16:52] *** jaldhar_ left
[16:53] *** jaldhar_ joined
[16:53] *** ChoHag left
[16:56] *** sjm_uk joined
[16:58] *** jaldhar_ left
[16:59] *** jaldhar_ joined
[17:00] *** jaldhar_ left
[17:01] *** jaldhar_ joined
[17:07] *** MilkmanDan left
[17:07] *** robertle joined
[17:09] *** MilkmanDan joined
[17:09] *** ChoHag joined
[17:16] *** lembark joined
[17:38] *** sjm_uk left
[17:52] <uzl> lembark: re "/doc" https://colabti.org/irclogger/irclogger_log/perl6?date=2019-08-10#l894

[17:59] *** snarkyboojum__ joined
[17:59] *** sjm_uk joined
[18:00] *** reportable6 left
[18:02] *** reportable6 joined
[18:03] *** snarkyboojum_ left
[18:08] *** uzl left
[18:16] *** irced joined
[18:20] *** cpup left
[18:20] *** cpup joined
[18:26] <irced> m: $_="ABBCDEEF"; s:g/ <( (.)$0* )> /$/\n/; .say

[18:26] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´A‚ê§BB‚ê§C‚ê§D‚ê§EE‚ê§F‚ê§‚ê§¬ª

[18:26] <irced> m: $_="ABBCDEEF"; s:g/ <( (.)$0* )> /$/\n/; .print

[18:26] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´A‚ê§BB‚ê§C‚ê§D‚ê§EE‚ê§F‚ê§¬ª

[18:27] <irced> jaldhar_: observe this compact solution üòÉ

[18:28] <irced> jaldhar_: sans alternation

[18:35] *** chloekek joined
[18:46] *** antoniogamiz left
[18:55] <netrino> m: $_"ABBCDEEF"; s:g/(.)$0*/$/\n/; .print

[18:55] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3$_7‚èè5"ABBCDEEF"; s:g/(.)$0*/$/\n/; .print‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§        statement mod‚Ä¶¬ª

[18:55] <netrino> m: $_ = "ABBCDEEF"; s:g/(.)$0*/$/\n/; .print

[18:55] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´A‚ê§BB‚ê§C‚ê§D‚ê§EE‚ê§F‚ê§¬ª

[18:56] <netrino> What are <( for? 

[18:56] <irced> netrino: good question!

[18:57] <tobs> netrino: they <( and )> demarcate the main match "body", so to speak

[18:58] <irced> netrino: thanks for demonstrating it works without. i was trying to replicate a perl5 regex that uses \k. according to the docs, <( )> is similar to \K "to discard any matches found before the \K". i just assumed it would make a cleaner match object and began with it since it was in the original expression i was trying to replicate.

[18:58] <tobs> m: say "ABCAADEF" ~~ / (.) $0 <( . )> /  # returns only the character after a repeated character because that is what's <()>'d

[18:58] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´ÔΩ¢DÔΩ£‚ê§ 0 => ÔΩ¢AÔΩ£‚ê§¬ª

[18:59] <netrino> tobs, irced thanks :)

[18:59] <timotimo> <( and )> don't even have to match up!

[19:00] <tobs> which is, of course, a mistake :)

[19:02] *** mowcat left
[19:03] <irced> but the original expression if i recall correctly was more complex so maybe that's why \K in it was included. so thanks again netrino for demonstrating that in this case, it doesn't make any difference to the match result.

[19:05] <netrino> irced: ah, don't mention it, i'm just clueless about perl6 regex at this point, so just asking :) thanks again for clearing that up for me, guys.

[19:09] <irced> üòÉ

[19:13] <irced> tobs: excellent demonstration of discarding the match of the preceding pattern in the result

[19:17] <irced> m: say "ABCAADEF" ~~ / (.) $0 /; # outputs first repeating char

[19:17] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´ÔΩ¢AAÔΩ£‚ê§ 0 => ÔΩ¢AÔΩ£‚ê§¬ª

[19:17] <irced> m: say "ABCAADEF" ~~ / (.) $0 /; # outputs first repeating chars

[19:17] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´ÔΩ¢AAÔΩ£‚ê§ 0 => ÔΩ¢AÔΩ£‚ê§¬ª

[19:18] <irced> m: say "ABCAADEF" ~~ / (.) $0 <( . )>/; # moves on from the preceding match of first repeating characters to match any character following

[19:18] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´ÔΩ¢DÔΩ£‚ê§ 0 => ÔΩ¢AÔΩ£‚ê§¬ª

[19:19] <vrurg> timotimo: do you debug moar in comma?

[19:20] <irced> m: print "ABCAADEF" ~~ / (.) $0 /; # outputs first repeating chars

[19:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´AA¬ª

[19:20] <irced> m: print "ABCAADEF" ~~ / (.) $0 <( . )>/; # moves on from the preceding match of first repeating characters to match any character following

[19:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´D¬ª

[19:23] * irced was probably misthinking that the global match operator and <( )> were associated, whereas it appears <( )> is specific to the pattern

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: 37df3d6bfc | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: Get rid of solution numbers for now

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: 

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: They're just painful to have. It's not a number of an issue we're

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: resolving because a PR can resolve more than one. So it had to be a PR

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: id, but that's a bit chicken-and-eggy. Moreover, the ‚Äú‚Äì‚Äú in there is

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: currently a non-ascii symbol, which can again be painful in some

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: cases. So just remove the numbers for now, maybe we'll change it

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: later.

[19:39] <Geth> ¬¶ problem-solving/merge-mishap: review: https://github.com/perl6/problem-solving/commit/37df3d6bfc

[19:39] *** grumble joined
[19:40] <Geth> ¬¶ problem-solving: c7e568b615 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[19:40] <Geth> ¬¶ problem-solving: Get rid of solution numbers for now

[19:40] <Geth> ¬¶ problem-solving: 

[19:40] <Geth> ¬¶ problem-solving: They're just painful to have. It's not a number of an issue we're

[19:41] <Geth> ¬¶ problem-solving: resolving because a PR can resolve more than one. So it had to be a PR

[19:41] <Geth> ¬¶ problem-solving: id, but that's a bit chicken-and-eggy. Moreover, the ‚Äú‚Äì‚Äú in there is

[19:41] <Geth> ¬¶ problem-solving: currently a non-ascii symbol, which can again be painful in some

[19:41] <Geth> ¬¶ problem-solving: cases. So just remove the numbers for now, maybe we'll change it

[19:41] <Geth> ¬¶ problem-solving: later.

[19:41] <Geth> ¬¶ problem-solving: review: https://github.com/perl6/problem-solving/commit/c7e568b615

[19:42] *** jaldhar_ left
[19:42] *** jaldhar_ joined
[19:43] <irced> jaldhar_: that you?

[19:48] <perryprog> Ooo, this is quite a neat snippet http://rosettacode.org/wiki/Mad_Libs#Perl_6

[19:49] *** empee0 left
[19:49] <irced> perryprog: thanks for sharing!

[19:55] <irced> perryprog: amazing how much can be done on one line there!

[19:57] <irced> perryprog: i am wondering what the first assignment does in: print S:g[ '<' (.*?) '>' ] = <--

[19:58] <timotimo> vrurg: no, for that i'd need a C debugger

[19:58] <vrurg> timotimo: I guess intellij is capable of deubgging C code. 

[19:59] <perryprog> I'm not exactly sure, irced. I'm taking a look.

[19:59] <irced> perryprog: üòÉ

[20:01] <timotimo> they have an IDE called CLion that can do that

[20:01] <timotimo> with a comma plugin, that'd work

[20:01] <timotimo> but i usually just use gdb. about half the time through rr's record/replay feature

[20:02] <tbrowder> Xliff: can you please look at your doc issue #2944 and see my question?

[20:03] <perryprog> irced, Aww, seems like it doesn't work in the current rakudo version. bummer.

[20:05] <irced> perryprog: sure it does, just be sure you are using < > in the input file

[20:06] <perryprog> ‚ùØ echo 'foo <bar>' | perl6 tmp.p6 gives "bar? Cannot do 'get' on a handle in binary mode"

[20:06] <irced> perryprog: hmm, may have something to do with echo. create an input file and pass it as an argument. e.g. madlibs.txt

[20:07] <perryprog> I tried that too. No such luck.

[20:07] <irced> perryprog: i got it to work with, <name> went for a walk in the park. <He or She> found a <noun>. <name> decided to take it home.

[20:08] <irced> perryprog: perl6 tmp.pl6 madlibs.txt

[20:08] <perryprog> Hmm, yeah there we go. Weird.

[20:08] <irced> you should also be able to cat pipe it

[20:13] <irced> perryprog: interesting cat piping won't work either

[20:13] <irced> perryprog: this might not be a wonder oneliner after all

[20:13] <perryprog> irced, regarding your earlier question: the first assignment must be right associative, i.e. parens around the RHS

[20:14] <El_Che> Intellij is the version that support al the languages

[20:14] *** Black_Ribbon joined
[20:14] <irced> perryprog: i think we may need to adverbially modify slurp

[20:14] <El_Che> they have lang centric sub idea on top of intellij with less plugins enabled to give you the impression it's geared toward your language. It isn't :)

[20:15] <netrino> irced, perryprog: you can pipe, but you have to pipe answers, not the template

[20:15] <netrino> prompt reads from stdin, while slurp takes the file from args

[20:15] <perryprog> Ohh, right.

[20:15] <perryprog> Makes sense, thank you.

[20:15] <irced> netrino: that does make sense, and also might guide to some workarounds... ...

[20:17] <netrino> ^_^

[20:19] *** molaf left
[20:22] <Geth> ¬¶ doc: gdonald++ created pull request #2947: Improve readability.  Adjust token `letter` indentation.

[20:22] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2947

[20:23] <tbrowder> .ask Xliff  can you please look at your doc issue #2944 and see my question?

[20:28] *** sjm_uk left
[20:33] <irced> the workaround doesn't look like it can be a oneliner

[20:34] *** zakharyas left
[20:41] *** [Sno] joined
[20:41] <irced> hang on a sec ... ...

[20:42] <netrino> irced: What are you trying for a workaround?

[20:43] <irced> i have a workaround but it's not one line yet

[20:43] <netrino> And what specifically are you working around? :D

[20:44] <irced> netrino: to make it so the program is functional even with piped input

[20:44] *** [Sno] left
[20:44] <irced> netrino: i can show you the long version

[20:44] *** [Sno] joined
[20:44] <irced> netrino: but i think i am close to the one liner

[20:44] <netrino> irced: sure, please show :>

[20:45] <irced> my &myprompt := { print $^a; open("/dev/tty").get; }; print S:g[ '<' (.*?) '>' ] = %.{$0} //= myprompt "$0? " given slurp;

[20:45] <irced> netrino: on *nix

[20:46] *** epony left
[20:47] <netrino> ooh, i see, interesting!

[20:48] *** |Sno| joined
[20:48] <irced> üòÉ

[20:49] *** [Sno] left
[20:53] <irced> nope, a one-liner is currently beyond me

[20:53] *** leont joined
[20:54] <netrino> i mean, you can inline the block and it is sort of one liner except that block has severl lines :D

[20:54] <netrino> also can still use prompt by redeclaring $*IN 

[20:54] <irced> netrino: i tried those. maybe you had better luck?

[20:55] <netrino> You mean it didn't work?

[20:55] <irced> netrino: i am specifically interested no how you mean to still use prompt by redeclaring $*IN ?

[20:55] <irced> netrino: since i spent the most time on that

[20:56] <tbrowder> .tell Xliff  can you please look at your doc issue #2944 and see my question?

[20:56] <netrino> irced: $*IN is dynamic var, so you can tell my $*IN = open('/dev/tty'); prompt 

[20:58] <irced> netrino: interesting but not working

[20:58] <irced> üòÉ

[20:58] <irced> when there is piped input

[20:59] <irced> that is, prompt doesn't seem to look at my environment setting to $*IN i think

[20:59] <netrino> irced: print S:g['<'(.*?)'>'] = %.{$0} //= { my $*IN = open('/dev/tty'); prompt $^a}.("$0?") given slurp

[20:59] <netrino> this worked for me

[20:59] <irced> oh? wow, let me see

[21:01] <irced> awesome, thanks netrino!

[21:01] * irced starts tweaking his code.

[21:01] <netrino> irced: üòÉ sure thing

[21:02] *** jaldhar_ left
[21:02] *** jaldhar_ joined
[21:08] <irced> print S:g[ '<' (.*?) '>' ] = %.{$0} //= { print $_, "? "; open("/dev/tty").get }.($0) given slurp;

[21:09] <irced> there

[21:11] <irced> print S:g[ '<' (.*?) '>' ] = %.{$0} //= { print "$_? "; open("/dev/tty").get }.($0) given slurp;

[21:12] <irced> ok, no variable declaration gives it a compact look, though i have to consider whether i could use/leverage a state variable but anyway no bottleneck no problem

[21:12] *** |Sno| left
[21:13] *** |Sno| joined
[21:14] <irced> netrino: oh, we can remove the "my" keyword!

[21:15] <irced> netrino: making yours a little more concise!

[21:16] <irced> netrino: now either of ours looks lean and mean

[21:16] <Geth> ¬¶ doc: f22ea17295 | (Greg Donald)++ | doc/Language/grammars.pod6

[21:16] <synopsebot> Link: https://doc.perl6.org/language/grammars

[21:16] <Geth> ¬¶ doc: Improve readability.  Adjust token `letter` indentation to match previous example.

[21:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f22ea17295

[21:16] <Geth> ¬¶ doc: dc091d3a42 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | doc/Language/grammars.pod6

[21:16] <Geth> ¬¶ doc: Merge pull request #2947 from gdonald/grammer-improvements

[21:16] <Geth> ¬¶ doc: 

[21:16] <Geth> ¬¶ doc: Improve readability.  Adjust token `letter` indentation.

[21:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/dc091d3a42

[21:17] <netrino> irced: yeah, though i think if you don't use `my' then $*IN won't get the old value upon existing the scope

[21:17] <netrino> exiting*

[21:20] *** cpan-p6 left
[21:20] *** cpan-p6 joined
[21:20] *** cpan-p6 left
[21:20] *** cpan-p6 joined
[21:21] <irced> netrino: wow, good catch, but I can't see at the moment where a post-slurp on the piped input could be used, it is important to recognize the difference, which is clear now thanks!

[21:21] *** epony joined
[21:21] *** lizmat joined
[21:22] <irced> netrino: especially if the same logic is used without slurping entirely on the pipe

[21:23] <irced> netrino: that's where the difference becomes important

[21:23] <irced> netrino: methinks

[21:23] <netrino> irced: true, in this particular case it shouldn't be a problem

[21:24] <irced> netrino: though that scenario is a can of worms

[21:24] <irced> netrino: since then the stdin would be interleaved which i dunno doesn't seem workable

[21:24] <irced> netrino: but hey the world once was flat

[21:24] <netrino> üòÉ

[21:25] <irced> netrino: so, maybe i'm just thinking of stdin as flat

[21:25] <irced> üòÉ

[21:26] <Geth> ¬¶ ecosystem: 677d740c34 | dmaestro++ (committed using GitHub Web editor) | META.list

[21:26] <Geth> ¬¶ ecosystem: Submit Module::Pod to ecosystem

[21:26] <Geth> ¬¶ ecosystem: 

[21:26] <Geth> ¬¶ ecosystem: See https://github.com/dmaestro/Module-Pod

[21:26] <Geth> ¬¶ ecosystem: Load pod objects (as in `$=pod`) from external modules.

[21:26] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/677d740c34

[21:26] <irced> netrino: also i don't know if things like stdin can be "seek"'ed to, which could allow for storage of relative offsets and such

[21:28] <netrino> generally you can't seek stdin, only the current buffer (which is sort of how ungetc works in C)

[21:28] <Geth> ¬¶ ecosystem: 0c94e1fb3e | dmaestro++ (committed using GitHub Web editor) | META.list

[21:28] <Geth> ¬¶ ecosystem: Submit Module::Pod to ecosystem (fixed)

[21:28] <Geth> ¬¶ ecosystem: 

[21:28] <Geth> ¬¶ ecosystem: See https://github.com/dmaestro/Module-Pod

[21:28] <Geth> ¬¶ ecosystem: Load pod objects (as in `$=pod`) from external module

[21:28] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/0c94e1fb3e

[21:29] <irced> netrino: right. not a simple thing to accomplish but imaginable. thanks!

[21:30] <netrino> m: $*IN.seek(1, SeekFromCurrent)

[21:30] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[21:30] <netrino> c: $*IN.seek(1, SeekFromCurrent)

[21:30] <committable6> netrino, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Committable

[21:31] <netrino> well, anyways, it tol me that this kind of handle is unseekable 

[21:31] <irced> netrino: as one would expect, thanks for discussing it further

[21:33] *** lucasb left
[21:35] * irced afk

[21:36] *** woolfy joined
[21:42] *** leont left
[21:50] *** chloekek left
[21:51] <cpan-p6> New module released to CPAN! Module::Pod (0.9.1) by 03DMAESTRO

[22:07] *** khisanth_ left
[22:07] *** molaf joined
[22:13] *** lembark left
[22:20] *** khisanth_ joined
[22:26] *** ChoHag left
[22:28] *** lembark joined
[22:40] *** molaf left
[22:43] *** evalable6 joined
[22:47] *** ChoHag joined
[23:08] *** rindolf left
[23:10] *** lembark left
[23:37] *** pilne left
[23:38] *** pilne joined
[23:43] *** muse joined
[23:43] <muse> hi

[23:44] <irced> welcome

[23:45] <muse> Fetching [FAIL]: GTK::Simple:ver<0.1.11> from git://github.com/perl6/gtk-simple.gitAborting due to fetch failure: GTK::Simple:ver<0.1.11> (use --force-fetch to override)

[23:45] <muse> thats what im getting when i try to install gtk::simple.  any ideas?

[23:47] <muse> this my first try at perl6 and i already am failing.  thinking about doing it in linux instead of windows

[23:48] <irced> hmm, i was able to install the module in linux myself

[23:48] <irced> this is a fetch failure though

[23:48] <irced> as per error

[23:48] <irced> are you able to install any modules?

[23:49] <muse> let me try

[23:49] <muse> know any good ones?  do they have lwp?

[23:50] <muse> ah that one is already preinstalled i guess

[23:51] <irced> muse: well this one is quick and good for laughs... zef install Acme::Insult::Lala  . sample code at: https://modules.perl6.org/dist/Acme::Insult::Lala:cpan:JSTOWE

[23:51] <irced> muse: if you're into laughing

[23:51] <muse> lol.  i remember looking at the source code to an acme modlue in perl5 and it phoned home to his server (think was Damian Conway)

[23:52] <timotimo> ha

[23:52] <timotimo> surely completely hamrless

[23:52] <muse> no doubt

[23:52] <timotimo> hopefully https secured?

[23:52] <irced> muse: hmm, phoning home would mean a socket module would be loaded. a quick look at the code will in the least confirm that's not the case.

[23:53] <timotimo> it could be using curl or wget instead

[23:53] <timotimo> if bash is installed, i think you can use /dev/tcp/123.321.234.212/... or something with echo?

[23:53] <irced> timotimo: good point

[23:54] <muse> Fetching [FAIL]: XML::Parser::Tiny from git://github.com/afiskon/p6-xml-parser-tiny.gitAborting due to fetch failure: XML::Parser::Tiny (use --force-fetch to override)

[23:54] <irced> a quick look at the code should reveal not system calls as well

[23:54] <timotimo> muse: can "git" be used on the commandline?

[23:54] <muse> not sure ill try

[23:54] <muse> yea i have git

[23:55] <timotimo> hmm, does "git clone git://github.com/afiskon/p6-xml-parser-tiny.git" give any kind of error?

[23:56] <muse> no its fine

[23:57] <timotimo> can "perl6 -e 'run <git help>'" get any output?

[23:57] <muse> yes

[23:58] <timotimo> huh. well, you can manually clone the repos, cd into it and "zef install ."

[23:58] <muse> :(

[23:58] <muse> ok thx ill do that

[23:58] <timotimo> that will always work

[23:58] <irced> muse: what version of zef? zef --version

[23:58] <timotimo> zef also has debug flags you could try

[23:59] *** aborazmeh joined
[23:59] *** aborazmeh left
[23:59] *** aborazmeh joined
[23:59] <muse> 0.7.1

[23:59] <timotimo> it has --verbose or --debug as verbosity levels

