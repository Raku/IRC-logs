[00:01] *** Sgeo left
[00:07] *** Manifest0 left
[00:08] *** lucasb left
[00:12] *** Manifest0 joined
[00:16] *** Manifest0 left
[00:21] *** Manifest0 joined
[00:21] *** sena_kun left
[00:25] *** Manifest0 left
[00:31] *** Manifest0 joined
[00:35] *** patrickb left
[00:36] *** Manifest0 left
[00:40] *** aborazmeh joined
[00:40] *** aborazmeh left
[00:40] *** aborazmeh joined
[00:43] *** Manifest0 joined
[00:54] *** redhands left
[00:54] *** Kaiepi joined
[01:06] *** molaf left
[01:07] *** aborazmeh left
[01:17] *** nepugia_ joined
[01:17] *** Manifest0 left
[01:17] *** nepugia left
[01:18] *** noisegul_ joined
[01:18] *** molaf joined
[01:21] *** noisegul left
[01:22] *** Manifest0 joined
[01:27] *** Manifest0 left
[01:28] *** jeromelanteri joined
[01:31] *** Manifest0 joined
[01:38] *** jeromelanteri left
[01:38] *** Manifest0 left
[01:41] *** Cabanossi left
[01:42] *** nepugia_ is now known as nepugia

[01:42] *** Manifest0 joined
[01:48] *** Cabanossi joined
[02:03] *** Manifest0 left
[02:09] *** Manifest0 joined
[02:38] *** Manifest0 left
[02:46] *** Manifest0 joined
[02:52] *** Sgeo__ joined
[02:55] *** Sgeo_ left
[02:58] *** redhands joined
[03:03] *** Manifest0 left
[03:08] *** Manifest0 joined
[03:19] *** cpan-p6 left
[03:19] *** cpan-p6 joined
[03:19] *** cpan-p6 left
[03:19] *** cpan-p6 joined
[03:26] *** Manifest0 left
[03:31] *** Manifest0 joined
[03:37] *** nepugia left
[03:39] *** pamplemousse left
[03:51] *** Manifest0 left
[03:55] *** Manifest0 joined
[04:00] *** Manifest0 left
[04:05] *** Manifest0 joined
[04:12] *** Manifest0 left
[04:17] *** Manifest0 joined
[04:23] *** molaf left
[04:48] *** Manifest0 left
[04:52] *** sjm_uk joined
[04:54] *** Manifest0 joined
[05:09] *** Manifest0 left
[05:14] *** Kaypie joined
[05:14] *** Kaiepi left
[05:15] *** Manifest0 joined
[05:23] *** Manifest0 left
[05:25] *** jmerelo joined
[05:30] *** Manifest0 joined
[05:35] *** Manifest0 left
[05:36] *** squashable6 left
[05:37] *** squashable6 joined
[05:40] *** Manifest0 joined
[05:44] *** Manifest0 left
[05:46] *** Sgeo_ joined
[05:48] *** Itaipu left
[05:49] *** Grrrr joined
[05:49] *** ChoHag left
[05:49] *** Sgeo__ left
[05:49] *** Manifest0 joined
[05:50] *** ChoHag joined
[05:50] *** ecocode joined
[05:51] *** Summertime joined
[05:52] *** Itaipu joined
[06:02] *** sauvin joined
[06:05] *** kshannon joined
[06:10] *** Manifest0 left
[06:16] *** Manifest0 joined
[06:16] *** __jrjsmrtn__ left
[06:18] *** __jrjsmrtn__ joined
[06:26] *** ravenousmoose joined
[06:36] *** domidumont joined
[06:43] *** hankache joined
[06:50] *** Manifest0 left
[06:53] *** robertle_ joined
[06:56] *** Manifest0 joined
[07:01] *** hankache left
[07:04] <Geth> ¬¶ doc: eda446c59b | (JJ Merelo)++ | .gitignore

[07:04] <Geth> ¬¶ doc: Adds resource folder :see_no_evil:

[07:04] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/eda446c59b

[07:04] <Geth> ¬¶ doc: 0038c7f1ae | (JJ Merelo)++ | META6.json

[07:04] <Geth> ¬¶ doc: Follows comma's advice

[07:04] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0038c7f1ae

[07:04] <Geth> ¬¶ doc: d4be812b7c | (JJ Merelo)++ | Perl 6 docs.iml

[07:04] <Geth> ¬¶ doc: Adds support for comma

[07:04] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d4be812b7c

[07:08] *** Manifest0 left
[07:10] *** patrickb joined
[07:13] *** Manifest0 joined
[07:17] *** Sgeo__ joined
[07:21] *** Sgeo_ left
[07:26] *** Manifest0 left
[07:30] *** rfold joined
[07:31] *** khisanth_ left
[07:32] *** Sgeo_ joined
[07:33] *** Manifest0 joined
[07:34] *** antoniogamiz joined
[07:34] <antoniogamiz> o/

[07:35] <El_Che> antoniogamiz: lo

[07:35] *** Sgeo__ left
[07:37] *** jmerelo left
[07:37] *** rindolf joined
[07:42] <Geth> ¬¶ doc: antoniogamiz++ created pull request #2908: Fixexternallinks, close #2836, close #2657

[07:42] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2908

[07:47] <rfold> antoniogamiz: see also https://bugzilla.mozilla.org/show_bug.cgi?id=668213

[07:47] <rfold> Seems to be due to an eight year old bug in Firefox.

[07:51] <antoniogamiz> rfold: oh, I did not know that :oo

[07:51] <antoniogamiz> thanks!

[07:57] *** khisanth_ joined
[07:58] <rfold> So it probably works fine already in Chromium.

[07:59] <antoniogamiz> yep, it does

[08:00] <rfold> If you set autofocus in onload, does it actually set focus though? Because autofocus only sets focus during loading AFAIK.

[08:00] <antoniogamiz> ups, you're right. I should set focus instead

[08:01] *** aborazmeh joined
[08:01] *** aborazmeh left
[08:01] *** aborazmeh joined
[08:02] <rfold> You could set focus only if location.hash is missing or equal to '___top' I suppose.

[08:02] <rfold> er, '#___top'

[08:06] <antoniogamiz> done :)

[08:06] <rfold> Cool :)

[08:06] <rfold> Can't wait for this fix to be live, it's been bugging me so much.

[08:08] <antoniogamiz> how do you manage the messages of your app? do you think make a logger class with different levels of debugging is recommendable?

[08:09] <antoniogamiz> I mean, I have different kinds of messages and sometimes some of them needs to be disabled

[08:10] <antoniogamiz> so I though that I have a class where several general methods to print those messages, I can disable them there

[08:10] <antoniogamiz> s/I have/to have

[08:11] <rfold> My approach to logging has always been passing around a function that takes a log message. Then the callsite can wrap this function in another function that does additional processing, e.g. filtering or adding more information.

[08:12] <antoniogamiz> mmm can you show me an example?

[08:12] <rfold> If you don't like passing around arguments then you can use a &* variable.

[08:12] <rfold> Yeah sure.

[08:16] <Geth> ¬¶ doc/master: 5 commits pushed by Antonio++, (Juan Juli√°n Merelo Guerv√≥s)++

[08:16] <Geth> ¬¶ doc/master: 9e48e51083 | deletes autofocus property #2657 #2836

[08:16] <Geth> ¬¶ doc/master: 8a70db052d | sets autofocus property when page is loaded #2657 #2836

[08:16] <Geth> ¬¶ doc/master: 70fceb52c4 | fix focus setting

[08:16] <Geth> ¬¶ doc/master: 184d8551fb | improve focus setting

[08:16] <Geth> ¬¶ doc/master: 63c2058ae7 | Merge pull request #2908 from antoniogamiz/fixexternallinks

[08:16] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/d4be812b7c43...63c2058ae7dd

[08:17] *** Manifest0 left
[08:18] <rfold> antoniogamiz: https://glot.io/snippets/fe8143bqqq this uses Str for messages but you could use something more elaborate like a message type that has a level and timestamp and metadata for example

[08:18] <rfold> If you have two loggers &foo and &bar you can combine them like this: sub foobar($msg) { foo($msg); bar($msg); }

[08:18] <rfold> This will log to both loggers, e.g. to stdout and to syslog.

[08:20] <antoniogamiz> :oo

[08:20] <antoniogamiz> thanks a lot rfold!

[08:21] <rfold> If you don't like passing it around you can do this: https://glot.io/snippets/fe817qemj7 and you could write functions like sub log that set the level for you, e.g. sub info, sub warning

[08:22] *** Imoh joined
[08:22] *** Manifest0 joined
[08:23] <antoniogamiz> mmm I like that :)

[08:23] <rfold> And these are useful: https://glot.io/snippets/fe819gresx . We use this approach at work and it's nice because the logger isn't global, thus the caller can easily customize the way that the callee logs things. (Although we use Haskell not Perl 6, but it should work just fine.)

[08:24] *** Imoh left
[08:25] <antoniogamiz> I like that even more :oooo

[08:26] <rfold> Other possible combinators include: catch exceptions that occur during logging, make a logger thread-safe with channel or lock, logger that ignores all but the first message, logger that accepts numbers and adds them to a counter (we use this for progress reporting)

[08:27] *** redhands left
[08:28] <rfold> And log message throttling is very useful for high volumes

[08:29] <antoniogamiz> uoh, good 

[08:30] <antoniogamiz> thanks a lot for your tips :)

[08:31] *** Black_Ribbon left
[08:33] *** zakharyas joined
[08:38] <kshannon> Is there a way to re-dispatch to the current proto sub?  I can't use nextwith as the arguments match a completely different set of multi candidates.

[08:40] <kshannon> And while I'm on the subject of multi-dispatch,  was there a rationale for making missing optional named arguments more specific than a candidate without the named argument?

[08:42] <kshannon> I'm guessing it's probably just a consequence of the actual dispatch rules but I can't seem to find a good description of what those rules are on https://docs.perl6.org

[08:44] <antoniogamiz> maybe you should raise an issue to clarify that part

[08:47] *** kshannon left
[08:53] *** ravenousmoose left
[08:54] *** ravenousmoose joined
[08:58] *** Manifest0 left
[08:59] <antoniogamiz> m:     -> $msg, *%h { logger(func($msg, *%h)) }

[08:59] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routines:‚ê§    func used at line 1‚ê§    h used at line 1‚ê§    logger used at line 1‚ê§‚ê§¬ª

[08:59] <antoniogamiz> mmm what's the error there?

[09:02] <antoniogamiz> m:     -> $msg, *%h { logger(func($msg, %h)) }

[09:02] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routines:‚ê§    func used at line 1‚ê§    logger used at line 1‚ê§‚ê§¬ª

[09:03] <antoniogamiz> it was the *

[09:04] *** Manifest0 joined
[09:13] <rfold> p6: my &transform := &infix:<o>; my &log = transform(&say, * + 1); log(4);

[09:13] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´5‚ê§¬ª

[09:14] *** Manifest0 left
[09:17] *** dolmen joined
[09:18] *** Manifest0 joined
[09:25] *** zakharyas left
[09:29] *** scimon joined
[09:30] *** Manifest0 left
[09:30] *** domidumont left
[09:34] *** Manifest0 joined
[09:35] *** robertle_ left
[09:36] *** antoniogamiz left
[09:37] *** robertle_ joined
[09:40] *** pat_js joined
[09:45] <rfold> Hmm, weird problem.

[09:45] *** aborazmeh left
[09:45] <rfold> p6: say ‚Äú/usr/lib/llvm-6.0/bin:{%*ENV<PATH>}‚Äù

[09:45] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´/usr/lib/llvm-6.0/bin:/usr/bin:/bin:/usr/sbin:/sbin‚ê§¬ª

[09:46] <rfold> When I run this locally, I get: Use of Nil in string context in sub build at

[09:46] <rfold> Without curly braces however, it works fine.

[09:55] <rfold> p6: say ‚Äú/usr/lib/llvm-6.0/bin:%*ENV<PATH>‚Äù

[09:55] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´/usr/lib/llvm-6.0/bin:/usr/bin:/bin:/usr/sbin:/sbin‚ê§¬ª

[09:55] *** Manifest0 left
[10:02] *** Manifest0 joined
[10:04] *** zakharyas joined
[10:06] *** Manifest0 left
[10:13] *** Manifest0 joined
[10:20] *** Manifest0 left
[10:26] *** Manifest0 joined
[10:32] *** Manifest0 left
[10:38] *** Manifest0 joined
[10:40] *** sena_kun joined
[10:52] *** gregf_ joined
[10:55] *** antoniogamiz joined
[10:58] *** ravenousmoose left
[11:02] *** abraxxa left
[11:03] *** ravenousmoose joined
[11:05] *** gregf_ left
[11:06] <antoniogamiz> jnthn: good work with Log::Timeline

[11:11] <jnthn> antoniogamiz: Ah, you're making use of it? :)

[11:12] <antoniogamiz> I was implement a better logger for Perl6::Documentable but JJ told me to use yours instead

[11:12] <antoniogamiz> and I liked the idea :)

[11:12] <antoniogamiz> there's good use examples at Cro::HTTP

[11:13] *** Manifest0 left
[11:14] *** patrickb left
[11:15] *** pat_js left
[11:16] *** pat_js joined
[11:17] *** dolmen left
[11:18] *** Manifest0 joined
[11:18] *** zakharyas left
[11:19] <rfold> p6: run <<echo {4e9}>>

[11:19] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´4000000000‚ê§¬ª

[11:19] <rfold> Hmm, I also get the "Use of Nil in string context" warning here. Maybe I need to update Rakudo.

[11:20] *** nepugia joined
[11:24] <rfold> p6: sub f { run <<echo {4e9}>> }; f

[11:24] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´4000000000‚ê§¬ª

[11:25] <rfold> p6: sub f(--> Nil) { run <<echo {4e9}>> }; f

[11:25] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Use of Nil in string context‚ê§‚ê§  in sub f at <tmp> line 1‚ê§¬ª

[11:25] <rfold> Ah, it goes wrong when used inside a routine that specifies Nil as return value.

[11:29] <rfold> p6: sub f(--> Nil:U) { run <<echo {4e9}>> }; f

[11:29] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´4000000000‚ê§Type check failed for return value; expected Nil:U but got Proc (Proc.new(in => IO::Pipe, ...)‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[11:29] <rfold> p6: sub f(--> Nil:U) { run <<echo {4e9}>>; Nil }; f

[11:29] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´4000000000‚ê§¬ª

[11:29] <rfold> p6: sub f(--> 42) { run <<echo {4e9}>>; 42 }; f

[11:29] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§42‚ê§Useless use of constant integer 42 in sink context (line 1)‚ê§¬ª

[11:30] <rfold> p6: sub f(--> 42) { run <<echo {4e9}>> }; f

[11:30] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´42‚ê§¬ª

[11:30] <rfold> So interpolated blocks always evaluate to the return value if the return value is specified in the signature of the enclosing routine.

[11:35] *** Manifest0 left
[11:36] <antoniogamiz> mm I have a file called use Perl6::Documentable::LogTimelineSchema;inside the dir Perl6/Documentable/

[11:36] <antoniogamiz> s/use/''

[11:36] <antoniogamiz> I should a gist one moment

[11:37] *** patrickb joined
[11:41] <antoniogamiz> https://gist.github.com/antoniogamiz/cbb9377019d040d6bf2e20871434e4e2

[11:42] *** Manifest0 joined
[11:42] <antoniogamiz> jnthn: can you take a look into that? I have tried to do the same as in Cro::HTTP but there's something wrong :(

[11:45] <antoniogamiz> aahh if it's a task I must pass a function or a pointy block

[11:48] *** domm left
[11:49] *** patrickb left
[11:54] *** Manifest0 left
[11:58] *** patrickb joined
[11:59] *** Manifest0 joined
[12:07] *** Manifest0 left
[12:11] *** Manifest0 joined
[12:16] *** dolmen joined
[12:18] *** molaf joined
[12:20] *** domidumont joined
[12:22] *** pat_js left
[12:27] <jnthn> antoniogamiz: Yes, for a task you should either pass a block of code to execute, which determines the duration of the task, *or* you can use `.start` and then call `.end` on the object you get back if you have a more complex situation (for example, the start and end are in completely different bits of the code)

[12:28] <jnthn> I hope the Log::Timeline README covers this reasonably well, but if not, please feel free to PR what you wish it had said :)

[12:29] <antoniogamiz> ok, thanks for the help :)

[12:31] *** antoniogamiz left
[12:31] <rfold> p6: sub postfix:<!> { [*] 2 .. $^a }; sub postfix:<$> { [**] $^a! xx $^a }; say 3$

[12:31] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´26591197721532267796824894043879185949053422002699243006604327894970735598738829091213422929061755830324406828265067234256016357755902793896426126110930203989303477744606138944253796008746621478842290221338538191929054279157507592749529351093190203622‚Ä¶¬ª

[12:35] <rfold> p6: sub postfix:<!> { [*] 2 .. $^a }; sub postfix:<$> { [**] $^a! xx $^a }; say 3$.chars

[12:35] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´36306‚ê§¬ª

[12:35] <rfold> Wowie that's a big number. 1$ = 1, 2$ = 4 and 4$ overflows. :D

[12:37] *** Manifest0 left
[12:42] *** Manifest0 joined
[12:46] *** Manifest0 left
[12:51] *** Manifest0 joined
[12:56] *** Manifest0 left
[13:00] *** pat_js joined
[13:03] *** Manifest0 joined
[13:04] *** Actualeyes joined
[13:16] *** zakharyas joined
[13:26] *** Manifest0 left
[13:32] *** cwilson left
[13:32] *** Manifest0 joined
[13:46] *** ravenousmoose left
[13:52] *** Manifest0 left
[13:56] *** Manifest0 joined
[14:01] *** Manifest0 left
[14:07] *** Manifest0 joined
[14:11] *** Manifest0 left
[14:19] *** Manifest0 joined
[14:19] *** antoniogamiz joined
[14:21] *** discord6 left
[14:21] *** ravenousmoose joined
[14:21] *** discord6 joined
[14:21] *** discord6 left
[14:21] *** discord6 joined
[14:22] <tyil> .

[14:23] <tyil> timotimo: I see messages arriving at the Discord side

[14:23] <timotimo> those two you just wrote arrived there

[14:23] <timotimo> the one before that was from 2019-07-07

[14:23] <tyil> ah

[14:23] <timotimo> oh, you did kick it, very good

[14:24] <tyil> now that I have moved to my desktop, I can check your user out while I'm at it :D

[14:26] *** ravenousmoose left
[14:33] *** huf left
[14:34] *** Manifest0 left
[14:37] *** pat_js left
[14:38] <Geth> ¬¶ doc: 3ee315710d | Coke++ | template/footer.html

[14:38] <Geth> ¬¶ doc: whitespace

[14:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3ee315710d

[14:41] *** Manifest0 joined
[14:46] *** Manifest0 left
[14:47] *** lucasb joined
[14:50] *** Manifest0 joined
[14:51] *** robertle_ left
[14:54] *** domm joined
[14:59] *** Manifest0 left
[15:04] *** scimon left
[15:04] *** Manifest0 joined
[15:05] *** dolmen left
[15:07] *** molaf left
[15:10] *** patrickb left
[15:12] *** squashable6 left
[15:12] <antoniogamiz> do you use write the documentation just above the method or in the README.md for instance?

[15:12] <antoniogamiz> s/use/usually

[15:15] * sena_kun writes markdown docs, but will be happy to do inline documenting if there'd be a simple to follow manual on how to

[15:16] <antoniogamiz> using #| maybe? 

[15:16] *** squashable6 joined
[15:16] <sena_kun> well, technically yes, but...

[15:16] <antoniogamiz> in what way do you write the docs in markdown? do you mind to send a link? :)

[15:17] *** domidumont left
[15:18] <sena_kun> e.g. https://github.com/croservices/cro/blob/master/docs/reference/cro-zeromq.md

[15:19] <antoniogamiz> oh, ty :)

[15:19] <sena_kun> the best thing is when there is at least some docs available. if they describe actual state of thing this is awesome. if they more or less describe what the code does (not how, but what the API is and how to use it), it is joy.

[15:20] <antoniogamiz> I will try to do that! I want everyone understand how perl6 doc is generated

[15:21] <sena_kun> antoniogamiz++ # if there will be an understanding of how docs are generated, woo-hoo, one can start to write something dynamic

[15:22] <antoniogamiz> JJ and I want to make a dynamic site using cro instead of mojo

[15:22] <antoniogamiz> and I think we will use punycode to solve all the problems with urls

[15:27] *** pamplemousse joined
[15:30] *** goon_ left
[15:41] *** Manifest0 left
[15:43] *** jmerelo joined
[15:45] *** robertle left
[15:46] *** zakharyas left
[15:48] *** Manifest0 joined
[16:04] *** pamplemousse left
[16:05] <Geth> ¬¶ doc: 02267c21ca | (JJ Merelo)++ | .travis.yml

[16:05] <Geth> ¬¶ doc: Disables binary environment from matrix, refs #2859

[16:05] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/02267c21ca

[16:06] *** Manifest0 left
[16:12] *** Manifest0 joined
[16:25] *** Manifest0 left
[16:29] *** MilkmanDan left
[16:32] *** Manifest0 joined
[16:32] *** cwilson joined
[16:34] *** cwilson1 joined
[16:36] *** MilkmanDan joined
[16:38] *** cwilson left
[16:42] *** jmerelo left
[16:45] *** pamplemousse joined
[16:45] *** antoniogamiz left
[16:53] *** rfold left
[16:59] <vrurg> Isn't 'use Module:ver<0.2>' supposed to load v0.2 and higher only even if v0.1 is available too?

[17:01] <ugexe> no, only 0.2

[17:01] <vrurg> It loads 0.1 for me.

[17:01] <ugexe> then its in a repository before the repository containing 0.2

[17:02] <vrurg> use lib <v0.2 v0.1 lib>;

[17:02] <ugexe> then again it still shouldnt load 0.1

[17:02] <ugexe> it would just choose 0.1 if you did `use Module` rather

[17:02] <vrurg> And still, if its use Module:v<0.2+> it should fail even if it finds 0.1

[17:03] <ugexe> m: use Test:ver<6.e>

[17:03] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´===SORRY!===‚ê§Could not find Test:ver<6.e> at line 1 in:‚ê§    inst#/home/camelia/.perl6‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/site‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/vendor‚ê§    inst#/home/camelia/rakudo-m-inst-1/sh‚Ä¶¬ª

[17:03] <ugexe> m: use Test:ver<6.d>

[17:03] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[17:03] <ugexe> i can only guess you have something setup incorrectly

[17:03] *** antoniogamiz34 joined
[17:04] <vrurg> Perhaps, but... I can upload a .tgz somewhere.

[17:06] <vrurg> ugexe: Could you, please, try it: https://nextcloud.lflat.org/index.php/s/bZsPBdtzsyK5ejz

[17:06] <ugexe> none of those have a meta6.json script. they arent versioned at all

[17:07] <ugexe> s/script//

[17:07] *** MasterDuke joined
[17:07] <vrurg> Aha... I thought it'd fetch it from unit.

[17:08] <ugexe> nope. that itself would require running code

[17:08] <ugexe> Foo:ver(for 1..Inf { say 42 }) 

[17:08] <ugexe> so we wouldnt be able to create a dependency graph without running code

[17:09] *** MasterDuke left
[17:09] <vrurg> ugexe: Ok, thanks.

[17:09] <ugexe> instead if you want to write the version in the unit you do `unit module Foo:ver($*DISTRIBUTION.meta<version>)`

[17:10] <cpan-p6> New module released to CPAN! App::MoarVM::ConfprogCompiler (0.0.7) by 03TIMOTIMO

[17:12] <vrurg> ugexe: Dynamic variable $*DISTRIBUTION not found

[17:12] <vrurg> But, anyway, it doesn't matter.

[17:13] <ugexe> it was added in one of the last few releases

[17:14] <ugexe> i guess it'll also say that if you didn't load the code as a module

[17:18] *** molaf joined
[17:19] *** Manifest0 left
[17:20] *** sena_kun left
[17:21] *** sena_kun joined
[17:22] *** wildtrees joined
[17:25] *** Manifest0 joined
[17:27] <antoniogamiz34> any idea to solve this? => expected Positional[Array] but got Array ($[])

[17:28] <ugexe> m: sub foo(Str @arr) { }; my @a; foo(@a)

[17:28] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Type check failed in binding to parameter '@arr'; expected Positional[Str] but got Array ($[])‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:28] <ugexe> m: sub foo(Str @arr) { }; my Str @a; foo(@a)

[17:28] *** cpan-p6 left
[17:28] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[17:28] <ugexe> use the correct type

[17:29] *** cpan-p6 joined
[17:29] *** cpan-p6 left
[17:29] *** cpan-p6 joined
[17:29] <antoniogamiz34> oh thanks :D

[17:35] <vrurg> ugexe: Here is what I needed the versioning for: https://github.com/perl6/problem-solving/issues/71

[17:36] *** Manifest0 left
[17:36] <ugexe> i'm not sure you can avoid those problems of multiple versions without having a good understanding of your dependencies (something a developer *should* have anyway if you ask me)

[17:38] <ugexe> another thing users have to understand is how multiple versions are going to work when *something* does e.g. `sub foo(MultiVerClass $foo) { $foo.blorg }`

[17:40] *** rfold joined
[17:40] <vrurg> ugexe: Put yourself in a situation when your project needs two external modules, both using different versions of another common module. You can do nothing about it. The only option is to rewrite one of those on your own....

[17:41] <ugexe> a perfect reason for providing the auth mechanism even

[17:41] *** Manifest0 joined
[17:41] <vrurg> How is it supposed to work? Any link for a paper/discussion?

[17:41] <ugexe> but to rebuttal -- someone made poor choses for the project

[17:42] <ugexe> just because a module exists and does something you want is not a valid reason to use it

[17:42] <ugexe> it must also be e.g. secure

[17:43] <ugexe> in other words: im of the opinion the user is the only one who can get themselves out of that problem period

[17:43] <timotimo> i wonder if we'll ever have something comparable to html's Subresource Integrity, or how you used to import stuff from .net in niecza, with a hash in the identity; i think that was perhaps for a pubkey? or maybe a hash of the code or something?

[17:43] <vrurg> ugexe: I can think of a couple of possible scenarios ending up with this very problem. And, yet, do you see a solution for CORE?

[17:43] *** thundergnat joined
[17:43] <ugexe> nope. i don't really view core the same way I do modules though

[17:44] <ugexe> i admit for CORE it might be solvable. i dont think that is the general case for modules though.

[17:44] <vrurg> ugexe: I consider the problem in its complexity. I tried to make QuantHash iterable and ended up with complete hell of different class implementations.

[17:45] <vrurg> ugexe: I think it makes sense to express your thoughts in the ticket. Any thoughts are gonna be useful.

[17:46] <ugexe> maybe when i get off work, if im feeling frisky. then again my a/c is broke and its 95 degrees at home so...

[17:46] *** zakharyas joined
[17:48] <timotimo> oh lord

[17:48] <timotimo> that's terrible

[17:48] <vrurg> ugexe: oh my... We've spent 3 weeks with a broken AC last May, it was just 85.

[17:49] <ugexe> its 130 degrees in my attic where some component of the a/c is so they have to wait for a morning time slot to fix it :(

[17:50] <vrurg> And wish you not to get an AC technician which would come Friday eventing saying "oh, I forgot I ran out of acetylen"...

[17:50] *** robertle joined
[17:50] <ugexe> no they just came out tuesday to fix it, only to tell me oh i cant do it till later cause its too hot

[17:52] <El_Che> you guys have AC :)

[17:52] <El_Che> a heatwave is expected next week here

[17:53] <ugexe> You probably have a heater

[17:54] <ugexe> It doesn't get cold enough for a heater here. but a/c is basically required

[17:56] *** antoniogamiz34 left
[17:57] <vrurg> ugexe: don't know where you located, but even in South Florida we switch AC to heating for 2-3 months a year. Anything below 72 home is too cold for me. :)

[17:58] <ugexe> i used to live in south florida -- WPB

[17:58] <ugexe> and yeah i'd occasionally turn the heater on

[17:58] <ugexe> now i'm in texas

[17:59] *** noisegul_ is now known as noisegul

[18:00] *** Sgeo__ joined
[18:01] <vrurg> So, you say it is warmer over there? BTW, I'm in WPB currently. ;)

[18:03] *** rfold left
[18:03] <ugexe> Yeah its hotter here. Where you working at in WPB?

[18:03] *** Sgeo_ left
[18:04] <ugexe> I used to live by the lamborgini dealership on Okeechobee

[18:04] <vrurg> Boca Raton. Actually, I'm telecommuting, almost never leave home.

[18:05] <ugexe> Ah, boca was too rich for my blood back then

[18:05] <ugexe> and too old

[18:06] <vrurg> West Boca isn't that expensive. In either case, for less rent we've got 2 times better house than we had in Miami.

[18:06] * vrurg hates Miami. 

[18:07] <ugexe> go as far east as possible in the U.S. and you're bound to find... West Palm Beach

[18:08] *** JappleAck joined
[18:09] <JappleAck> hi. how do i disable buffering of $*IN ?

[18:10] <ugexe> m: say $*IN.^methods.map(*.Str).contains("buffer")

[18:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Submethod object coerced to string (please use .gist or .perl to do that)‚ê§True‚ê§  in block <unit> at <tmp> line 1‚ê§Method object coerced to string (please use .gist or .perl to do that)‚ê§  in block <unit> at <tmp> line 1‚ê§Method object coerced t‚Ä¶¬ª

[18:10] <ugexe> bah

[18:10] <ugexe> m: say $*IN.^methods.map(*.^name).contains("buffer")

[18:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´False‚ê§¬ª

[18:10] <ugexe> damnit

[18:10] *** cwilson1 left
[18:10] <ugexe> m: say $*IN.^methods.map(*.^name).grep(*.contains("buffer"))

[18:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´()‚ê§¬ª

[18:10] <ugexe> m: $*IN.out-buffer(1); # I would guess this

[18:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´Too many positionals passed; expected 1 argument but got 2‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:10] <ugexe> obviously im wrong

[18:11] <JappleAck> yeah, that's only i found by "buffer" word

[18:11] <ugexe> well, maybe its $*IN.out-buffer = 1

[18:11] <ugexe> m: $*IN.out-buffer = 1

[18:11] <camelia> rakudo-moar ecf2b1e4f: ( no output )

[18:12] <JappleAck> it's a "method" as i see in the docs, not "property", but i'll try it

[18:12] <JappleAck> doesn't help

[18:13] <ugexe> its an rw method that returns a proxy

[18:13] *** cwilson joined
[18:14] <vrurg> m: say $*IN.^methods.map(*.name).contains("buffer")

[18:14] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´True‚ê§¬ª

[18:14] <vrurg> m: say $*IN.^methods.map(*.^name).grep: *.contains("buffer")

[18:14] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´()‚ê§¬ª

[18:14] <vrurg> m: say $*IN.^methods.map(*.name).grep: *.contains("buffer")

[18:14] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´(out-buffer)‚ê§¬ª

[18:15] <ugexe> .open(:out-buffer(1)) works for filehandles at least

[18:15] <vrurg> ugexe: over-use of .^name always plays this trick with a Method object. ;)

[18:16] <ugexe> are you sure you don't want $*OUT.out-buffer = 1 ?

[18:17] <ugexe> $*IN.open(:out-buffer(1)) might be worth trying

[18:19] <Xliff> vrurg: What constitutes overuse of .^name?

[18:20] <vrurg> Xliff: In my case it's a lot of introspection while debugging.

[18:21] <JappleAck> i tried this: `my \IN = $*IN.open: :1out-buffer;` but when i do `IN.readchars(1).say` it reads only when i press enter

[18:22] <ugexe> wouldn't it have to wait to press enter so it knows it can try to encode the string?

[18:27] <vrurg> JappleAck: you probably need getc method

[18:27] *** patrickb joined
[18:28] <ugexe> still requires an Enter press

[18:28] <Geth> ¬¶ doc: e93988ac2b | Antonio++ (committed using GitHub Web editor) | template/header.html

[18:28] <Geth> ¬¶ doc: Update header.html

[18:28] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e93988ac2b

[18:29] *** sauvin left
[18:30] <JappleAck> is there any equivalent of $| from perl5?

[18:31] <vrurg> JappleAck: Term::termios is what you need.

[18:31] <vrurg> JappleAck: waiting for enter is not about Perl6 buffering, it's how terminal works.

[18:33] <vrurg> In perl5 read STDIN, $c, 1 would do the same for you: wait for enter, then get 1 char.

[18:37] *** redhands joined
[18:41] <JappleAck> i found a way to run `/bin/stty raw` first

[18:43] <JappleAck> but i don't know how to change it back to default value

[18:43] <vrurg> termios is better because it doesn't use external processes.

[18:43] <vrurg> stty sane must work.

[18:51] *** afresh1 left
[18:53] *** antoniogamiz joined
[18:57] *** zakharyas left
[19:03] *** sena_kun left
[19:07] *** afresh1 joined
[19:17] *** Manifest0 left
[19:22] *** Manifest0 joined
[19:27] *** Manifest0 left
[19:28] *** kaare__ left
[19:29] *** kaare__ joined
[19:31] *** Manifest0 joined
[19:34] *** lucasb left
[19:35] *** molaf left
[19:36] *** Manifest0 left
[19:43] *** Manifest0 joined
[19:43] *** Raylier joined
[19:46] <Raylier> Hello people haven't checked here in a while

[19:47] <timotimo> ohai

[19:49] <timotimo> do you happen to be raydiak?

[19:50] *** antoniogamiz left
[19:55] <Raylier> Rayler, Ray, euler are some of the names I've used. Not RAydiak though

[19:59] <timotimo> oh, ok

[20:00] <timotimo> welcome back in any case :)

[20:00] <noisegul> Welcome back

[20:05] *** Raylier left
[20:07] *** MasterDuke joined
[20:14] <MasterDuke> thundergnat: there was a recent example where 90% of the time was spent in stringifying a big Int. since you did so much with stringifying (Fat)Rats, you might be able to evaluate this and see if it could help http://code.activestate.com/lists/tcl-core/13692/

[20:17] <discord6> <Tyler (Aearnus)> dumb question, but I can't for the life of me figure out what : does when you're calling a subroutine

[20:18] <MasterDuke> a : where?

[20:23] <TreyHarris> Tyler (Aernus): I'm pretty sure you mean cases like `say (1,[1,2],"foo",Mu).map: so *.say ;` in Mu's docs?

[20:23] <TreyHarris> That means you're calling a method like it was a subroutine

[20:29] <TreyHarris> It's often used for its precedence more than for its actual functionality; in the case of map, for instance, using a colon lets you skip the parentheses, which would be annoying otherwise), so for instance, the above could be written `say (1,[1,2],"foo",Mu).map(so *.say,)`

[20:30] <TreyHarris> m: say (1,[1,2],"foo",Mu).map: so *.say ;

[20:30] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´1‚ê§[1 2]‚ê§foo‚ê§(Mu)‚ê§(True True True True)‚ê§¬ª

[20:30] <TreyHarris> m: say (1,[1,2],"foo",Mu).map(so *.say,)

[20:30] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: ¬´1‚ê§[1 2]‚ê§foo‚ê§(Mu)‚ê§(True True True True)‚ê§¬ª

[20:31] <masak> timotimo: two reactions: "ugh, I should totally be blogging more", and "wow, webrings are still a thing?" :)

[20:32] <timotimo> we're making them a thing again!

[20:32] *** Black_Ribbon joined
[20:34] <TreyHarris> @Tyler (Aearnus): The precedence thing, if it wasn't clear, is a bit like Haskell's $, if you're familiar with it. Or "and" and "or" vs "&&" and "||" -- you can say "complex stuff or die sprintf(...)" where "complex stuff || die sprintf(...)" would do something strange

[20:41] *** Manifest0 left
[20:45] <noisegul> Can somebody help me determine a return type? A method is supposed to return an Array of objects, calling `.^name` and `.first.^name` print what's expected, but looping over the result and accessing objects won't work, neither does appending to an Array of the same type the result is supposed to be. Commented example here: https://gist.github.com/noisegul/b049fd3823bd1e199c772455b104f99d

[20:46] <timotimo> noisegul: looks like the array returned by registry.lookup is in a container

[20:46] <timotimo> and that makes the for loop only do a single iteration, which passes the whole thing into $r

[20:47] *** Manifest0 joined
[20:48] <noisegul> I see, that's why the second for loop example works, but not the first

[20:49] <TreyHarris> noisegul: It's almost the definition of the difference between the $ and @ sigils

[20:49] <timotimo> either put a .list at the end before the -> $r or make lookup return something non-containerized

[20:51] <noisegul> I see, what would the return type annotation for .lookup be in that case? Or does that still fall under `Array[TYPE]`?

[20:51] <timotimo> it does

[20:52] <noisegul> Alright, makes sense, thanks for the clarification! :)

[20:52] <TreyHarris> Where is .lookup defined, anyway?

[20:53] <noisegul> It's from a different module

[20:54] <TreyHarris> noisegul: which, though? I'm having trouble finding it working from https://github.com/antoniogamiz/Perl6-Documentable

[20:55] *** molaf joined
[20:56] <noisegul> TreyHarris: Hmm should be here I suppose: https://github.com/antoniogamiz/Perl6-Documentable/blob/3e02cb7c7d67729a7c3691122fbf505444d03a1e/lib/Perl6/Documentable/Registry.pm6#L101

[21:01] *** Manifest0 left
[21:03] *** k-man left
[21:06] <discord6> <Tyler (Aearnus)> thanks TreyHarris!!! makes a lot of sense now

[21:07] *** Manifest0 joined
[21:09] *** wildtrees left
[21:20] *** Manifest0 left
[21:25] *** Manifest0 joined
[21:26] *** cpan-p6 left
[21:27] *** cpan-p6 joined
[21:27] *** cpan-p6 left
[21:27] *** cpan-p6 joined
[21:34] *** Manifest0 left
[21:39] *** Manifest0 joined
[21:44] *** Manifest0 left
[21:51] *** Manifest0 joined
[21:51] *** kensanata joined
[21:57] *** Manifest0 left
[22:03] *** Sgeo_ joined
[22:04] *** Manifest0 joined
[22:07] *** Sgeo__ left
[22:23] *** pamplemousse left
[22:32] *** patrickb left
[22:33] *** sjm_uk left
[22:40] *** Manifest0 left
[22:45] *** Manifest0 joined
[22:47] *** kensanata left
[22:49] *** k-man joined
[22:58] *** rindolf left
[23:01] *** k-man left
[23:03] *** sena_kun joined
[23:04] *** k-man joined
[23:08] *** sena_kun left
[23:15] *** k-man left
[23:16] *** k-man joined
[23:31] *** gdonald joined
[23:37] *** Manifest0 left
[23:43] *** Manifest0 joined
[23:49] *** MasterDuke left
[23:51] *** Vinny joined
[23:57] *** Voldenet left
[23:58] *** Manifest0 left
