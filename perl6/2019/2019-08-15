[00:00] *** reportable6 left
[00:02] *** lucasb left
[00:04] *** reportable6 joined
[00:07] *** Herby_ joined
[00:07] <Herby_>   o/

[00:10] <Herby_>  \o

[00:12] *** MasterDuke left
[00:13] <Herby_> Watching Jonathan's great talk at Perlcon on Concurrency

[00:25] *** Xliff left
[00:25] *** wildtrees left
[00:25] *** [particle]1 joined
[00:26] *** [particle] left
[00:26] *** Actualeyes left
[00:32] *** rainmanjam left
[00:46] *** rainmanjam joined
[00:47] *** [particle] joined
[00:48] *** [particle]1 left
[00:55] *** rainmanj_ joined
[00:58] *** rainmanjam left
[01:20] *** rainmanjam joined
[01:22] *** pamplemousse_ left
[01:23] *** rainmanj_ left
[01:45] *** molaf left
[01:58] *** molaf joined
[02:04] *** Manifest0 left
[02:05] *** Manifest0 joined
[02:10] *** pilne left
[02:20] *** Cabanossi left
[02:22] *** cpup left
[02:27] *** cpup joined
[02:31] *** Cabanossi joined
[02:42] *** bhaskar joined
[02:42] <bhaskar> Hi

[02:46] <discord6> <Aearnus> bhaskar: o/

[02:52] *** pat_js left
[03:07] <Geth> ¦ doc/master: 4 commits pushed by (Stefan Fischer)++, (Will Coleda)++

[03:07] <Geth> ¦ doc/master: 5976cd9bcf | Fix typo

[03:07] <Geth> ¦ doc/master: 5918ec7109 | Fix typo

[03:07] <Geth> ¦ doc/master: fcabf38ad2 | Fix typo

[03:07] <Geth> ¦ doc/master: fc4d52be47 | Merge pull request #2953 from sfischer13/master

[03:07] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/65f0e414d2a4...fc4d52be47f7

[03:08] <bhaskar> Hi

[03:08] <bhaskar> I am trying get all the instances of classe 

[03:08] <bhaskar> class*

[03:22] *** AlexDaniel left
[03:24] *** bhaskar left
[03:44] <adu> https://docs.perl6.org/language/classtut#Introspection

[03:48] *** cpup left
[03:52] *** cpup joined
[04:09] *** Herby_ left
[04:21] *** Cabanossi left
[04:26] *** [Sno] left
[04:26] *** Cabanossi joined
[04:43] *** rainmanj_ joined
[04:47] *** rainmanjam left
[04:48] *** curan joined
[05:08] *** rindolf joined
[05:22] *** sjm_uk joined
[05:27] *** rainmanj_ left
[05:28] *** rainmanjam joined
[05:31] *** sauvin joined
[05:44] *** rainmanj_ joined
[05:44] *** rainmanjam left
[05:45] *** rainmanjam joined
[05:48] *** rainmanj_ left
[05:57] *** adu left
[06:00] *** reportable6 left
[06:01] *** kylese joined
[06:04] *** reportable6 joined
[06:35] *** ravenous_ joined
[06:39] *** satori__ left
[06:42] *** [Sno] joined
[06:48] <Geth> ¦ doc: f6039af952 | threadless-screw++ | doc/Language/traps.pod6

[06:48] <synopsebot> Link: https://doc.perl6.org/language/traps

[06:48] <Geth> ¦ doc: Rewrite of interpolation trap section

[06:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f6039af952

[06:48] <Geth> ¦ doc: ccf2245704 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[06:48] <Geth> ¦ doc: Merge pull request #2940 from perl6/traps

[06:48] <Geth> ¦ doc: 

[06:48] <Geth> ¦ doc: Improvement of regex-interpolation trap section

[06:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ccf2245704

[06:53] <discord6> <Aearnus> what's the status on doing cgi with perl6?

[06:53] <discord6> <Aearnus> and/or preferably smth like sinatra

[06:53] *** antoniogamiz joined
[07:02] *** ravenous_ left
[07:06] <tadzik> cro is probably what you're looking for

[07:06] <tadzik> but that's not CGI: don't do CGI :)

[07:07] <tadzik> https://cro.services/

[07:07] *** lizmat left
[07:09] *** woolfy left
[07:11] *** sjm_uk left
[07:12] <discord6> <Aearnus> yeah, cro's exactly what i'm looking for

[07:12] <discord6> <Aearnus> thanks

[07:15] *** sjm_uk joined
[07:20] *** ravenous_ joined
[07:28] *** antoniogamiz left
[07:37] *** zakharyas joined
[07:39] *** ravenous_ left
[07:43] *** [Sno] left
[07:44] *** ChoHag joined
[07:46] *** Ven`` joined
[07:49] *** satori__ joined
[07:53] *** kensanata joined
[07:55] *** cpup left
[07:56] *** ravenous_ joined
[07:58] *** cpup joined
[08:06] *** kylese left
[08:16] *** cpup left
[08:26] *** cpup joined
[08:30] *** scimon joined
[08:44] *** Ven`` left
[08:49] *** antoniogamiz joined
[09:11] *** Guest93 joined
[09:14] *** pilne joined
[09:23] *** squashable6 left
[09:26] *** squashable6 joined
[09:29] <lichtkind> how the bundle namespac works in p6

[09:30] <lichtkind> or how it supposed to work since i dont find any bundle mdule on the list yet

[09:33] *** Ven`` joined
[09:39] *** pmurias joined
[09:45] *** pilne left
[09:46] *** Ven`` left
[09:51] *** Black_Ribbon left
[09:55] *** mowcat joined
[09:56] *** mowcat left
[09:56] *** ChoHag left
[09:56] *** mowcat joined
[09:58] <kawaii> Good morning friends :)

[09:59] <antoniogamiz> good morning :)

[10:06] *** Nighty joined
[10:07] <scimon> Morning.

[10:08] <Nighty> quick question regarding perl6-examples/blob/master/categories/cookbook/01strings/01-00introduction.p6  -- I notice some/most of the examples don't have the expected output.  Is this something that can be done automagically, or does someone need to go through and add them?

[10:17] *** robertle left
[10:31] *** ravenous_ left
[10:32] *** ravenous_ joined
[10:36] *** pat_js joined
[10:55] *** antoniogamiz54 joined
[10:56] *** antoniogamiz left
[11:30] *** zakharyas left
[11:42] *** lichtkind_ joined
[11:43] *** pamplemousse joined
[11:43] *** mowcat left
[11:44] *** lichtkind left
[11:46] <antoniogamiz54> tyil: do your docker iamges have docker installed?

[11:46] <antoniogamiz54> s/docker/zef 

[11:46] <tyil> yes

[11:46] <tyil> I've moved them to GitLab proper now, and auto-builds seem to work

[11:47] <tyil> if you have ideas for improvement, MRs are welcome :>

[11:47] <tyil> in general, the -dev variants should be optimized for ease-of-use, the regulars should be optimized for size

[11:47] *** kensanata left
[11:48] <antoniogamiz54> good, thanks :)

[11:48] <tyil> https://gitlab.com/tyil/docker-perl6 I'll write a README with some usage information probably on Saturday, when I have time to kill on the train

[11:49] <tyil> https://gitlab.com/tyil/docker-perl6/blob/master/dev-bin/build.sh this is the build script that gets used

[11:50] *** pmurias left
[11:55] *** nepugia joined
[11:57] <antoniogamiz54> mmm are the images in the hub?

[11:59] <antoniogamiz54> it looks like they are not 

[12:00] *** reportable6 left
[12:01] *** reportable6 joined
[12:01] *** ChanServ sets mode: +v reportable6

[12:03] *** scimon left
[12:04] *** scimon joined
[12:07] <tyil> they are on the gitlab repo

[12:07] <tyil> antoniogamiz54: https://gitlab.com/tyil/docker-perl6/container_registry

[12:08] <antoniogamiz54> ty

[12:09] *** scimon left
[12:22] *** sjm_uk left
[12:24] *** antoniogamiz joined
[12:25] *** Nighty left
[12:28] *** antoniogamiz54 left
[12:31] *** pmurias joined
[12:31] *** kensanata joined
[12:32] *** Nighty joined
[12:33] *** lembark joined
[12:34] *** Nighty left
[12:35] *** robertle joined
[12:41] *** scimon joined
[12:48] *** antoniogamiz left
[12:57] *** nepugia left
[12:57] *** mensvaga left
[13:03] *** curan left
[13:05] *** mensvaga joined
[13:10] *** veesh1 joined
[13:14] *** lucasb joined
[13:17] <kawaii> Any status update on Star 2019.06.1?

[13:18] <kawaii> 07*, sorry :)

[13:18] *** zakharyas joined
[13:20] *** Ven`` joined
[13:20] *** rindolf left
[13:21] <Ven``> not quite pottery, huh.

[13:27] *** Ven`` left
[13:36] *** demanuel joined
[13:37] *** antoniogamiz joined
[13:38] *** veesh1 left
[13:40] *** Ven`` joined
[13:41] *** pmurias left
[13:41] *** pmurias joined
[13:48] *** rindolf joined
[13:53] *** mowcat joined
[13:53] *** mowcat left
[13:53] *** mowcat joined
[13:56] *** pamplemousse left
[14:04] *** Guest93 left
[14:04] *** Guest93 joined
[14:05] *** rindolf left
[14:09] *** rindolf joined
[14:12] *** cono joined
[14:13] <cono> m: class A is Date { multi method new(Int:D $year, Int $month, Int:D $day, :&formatter) { "yay".say; nextwith(Date.new(2019, 1, 1), :&formatter) } }; A.new(2019, Int, 1).WHAT.say

[14:13] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «yay␤Nil␤»

[14:13] <cono> a bit lost with this next/call/same/with. Does any1 able to explain why am I getting Nil ?

[14:14] *** harmil joined
[14:15] <antoniogamiz> cono: I think you need to use named parameters

[14:15] <timotimo> m: Date.new(Date.new(2019, 1, 1), formatter => -> *@a { }).WHAT.say

[14:15] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «(Date)␤»

[14:15] <timotimo> m: Date.new(Date.new(2019, 1, 1), formatter => -> *@a { }).perl.say

[14:15] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Date.new(2019,1,1)␤»

[14:16] *** Kaiepi left
[14:16] *** Kaiepi joined
[14:17] <cono> timotimo: expcting this:     (Date: Dateish $d, :&formatter, *%_ --> Date:D)

[14:17] *** Ven`` left
[14:18] <cono> m: class A is Date { multi method new(Int:D $year, Int $month, Int:D $day, :&formatter) { "yay".say; nextwith(2019,1,1, :&formatter) } }; A.new(2019, Int, 1).WHAT.say

[14:18] *** cpan-p6 left
[14:18] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «yay␤Nil␤»

[14:18] <cono> this one also gives me Nil :(

[14:18] *** cpan-p6 joined
[14:18] *** cpan-p6 left
[14:18] *** cpan-p6 joined
[14:18] <timotimo> ah

[14:19] <timotimo> nextwith operates on the list of candidates that was already filtered by the arguments passed

[14:19] <timotimo> so the one that takes a Dateish as first argument won't be in the list of availables?

[14:20] <timotimo> m: class A is Date { multi method new(Int:D $year, Int $month, Int:D $day, :&formatter) { "yay".say; callwith(Date.new($year, $month, $day, :&formatter) } }; A.new(2019, Int, 1).WHAT.say

[14:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3e.new($year, $month, $day, :&formatter) 7⏏5} }; A.new(2019, Int, 1…»

[14:20] <timotimo> m: class A is Date { multi method new(Int:D $year, Int $month, Int:D $day, :&formatter) { "yay".say; callwith(Date.new($year, $month, $day, :&formatter)) } }; A.new(2019, Int, 1).WHAT.say

[14:20] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «yay␤Cannot resolve caller new(Date:U: Int:D, Int:U, Int:D, :formatter(Callable)); none of these signatures match:␤    (Date: Int:D(Any):D $year, Int:D(Any):D $month, Int:D(Any):D $day, :&formatter, *%_ --> Date:D)␤    (Date: Int:D(Any):D :$year!…»

[14:21] <timotimo> m: class A is Date { multi method new(Int:D $year, Int $month, Int:D $day, :&formatter) { "yay".say; callwith(Date.new($year, 11, $day, :&formatter)) } }; A.new(2019, Int, 1).WHAT.say

[14:21] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «yay␤Nil␤»

[14:21] <timotimo> hmm

[14:21] <timotimo> i'm not sure what your reason is to want to call the constructor that takes the Date as first argument

[14:22] <timotimo> m: class A is Date { multi method new(Int:D $year, Int $month, Int:D $day, :&formatter) { "yay".say; callwith($year, 11, $day, :&formatter) } }; A.new(2019, Int, 1).WHAT.say

[14:22] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «yay␤Nil␤»

[14:22] <timotimo> m: class A is Date { multi method new(Int:D $year, Int $month, Int:D $day, :&formatter) { "yay".say; my $result = callwith($year, 11, $day, :&formatter); say $result.perl; $result } }; A.new(2019, Int, 1).WHAT.say

[14:22] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «yay␤Any␤(Any)␤»

[14:22] <cono> well, not important, this one also doesn't work for me:

[14:22] <cono> m: class A is Date { multi method new(Int:D $year, Int $month, Int:D $day, :&formatter) { "yay".say; callwith(2019,1,1, :&formatter) } }; A.new(2019, Int, 1).WHAT.say

[14:22] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «yay␤Nil␤»

[14:23] <timotimo> m: class A is Date { multi method new(Int:D $year, Int:U $month, Int:D $day, :&formatter) { "yay".say; self.new(2019,1,1, :&formatter) } }; A.new(2019, Int, 1).WHAT.say

[14:23] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «yay␤(A)␤»

[14:25] <cono> hm, for some reason in my real module (not minimized version), it returns instance of Date, instead of sub-class type

[14:26] <cono> self.Date::new does the same, strange

[14:29] <cono> timotimo: https://github.com/cono/p6-international-fixed-calendar

[14:30] *** giraffe joined
[14:30] <cono> $d.WHAT.say; gives me (Date)

[14:32] <cono> before I put muti in from of method new, all my tests worked fine

[14:32] *** satori__ left
[14:32] <cono> in front*

[14:40] *** ab6tract joined
[14:41] <ab6tract> o/ #perl6

[14:42] <kawaii> hey!

[14:42] <ab6tract> I'm hoping someone familiar with NativeCall might be able to help me figure out what the Perl 6 type would be for  (float* outputBuffers[2])

[14:43] <ab6tract> where the output buffers are CArray[long] allocated to a pre-determined size

[14:43] <ab6tract> hey there kawaii, how's it going?

[14:43] <jnthn> long? flaot would be num32?

[14:44] <ab6tract> num32, yeah

[14:44] <jnthn> but I think you'd just do CArray[CArray[num32]]

[14:44] <ab6tract> with is rw, right?

[14:45] <jnthn> Hm, but doesn't it expcet an array, which is a reference type?

[14:46] <ab6tract> the function wants an array of pointers to the first floats in the array, right

[14:47] <ab6tract> at least, as far as my limited C pointer foo goes

[14:48] <ab6tract> i tried something like: $buf = CArray[num32].allocate($length); my $bufptr = nativecast(Pointer, $buf); .. but that didn't work 

[14:48] <timotimo> https://cdecl.org/?q=float*+outputBuffers%5B2%5D

[14:49] <ab6tract> nice one timotimo :D

[14:49] <timotimo> very useful tool

[14:50] <ab6tract> however, those "pointers to float" are usually the kind of thing you get to handwave via the is rw trait 

[14:50] <timotimo> haha, yeah

[14:50] <timotimo> is this for audio?

[14:51] <ab6tract> timotimo: indeed

[14:51] <ab6tract> wrapping a proprietary library with a stupid NDA, unfortunately

[14:51] <ab6tract> otherwise I'd show the code

[14:53] <timotimo> but yeah, that sounds like a CArray[CArray[num32]] where the outermost one has size 2

[14:56] *** lizmat joined
[15:02] *** uzl joined
[15:02] <uzl> o/

[15:02] *** pmurias left
[15:05] <uzl> I'm proofreading some Type docs page and they usually reference other types. In some instances there are links to those types and others not. What's the convention? Should they be left alone? Link to them (L<>)? Tag them with C<>? 

[15:06] <uzl> Examples: https://github.com/perl6/doc/blob/master/doc/Type/Signature.pod6#L14 and https://github.com/perl6/doc/blob/master/doc/Type/Signature.pod6#L75

[15:08] <antoniogamiz> I think they should be linked

[15:09] <cono> timotimo: so, any suggestions? Totally lost here, do not understand why it returns instance of Date, instead of IFC::Date

[15:09] <cono> m: class A is Date { multi method new(Int:D $year, Int $month, Int:D $day, :&formatter) { "yay".say; self.Date::new(2019,1,1, :&formatter) } }; my $x = A.new(2019, Int, 1); $x.WHAT.say

[15:10] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «yay␤(A)␤»

[15:10] <cono> minimized code returns proper sub-class type

[15:10] <timotimo> having a hard time concentrating on anything

[15:11] <cono> ah, no problem, sorry for bothering you :)

[15:11] <timotimo> normally i'd be more than happy to help

[15:14] <uzl> antoniogamiz: In what instances should C<> be used? I've seen they're usually used when referring to constructs from a code snippet but I don't know if that's always the case.

[15:15] <antoniogamiz> https://docs.perl6.org/language/pod#Code

[15:15] <antoniogamiz> it's used to mark something as code

[15:16] <ab6tract> timotimo: hm... it doesn't seem to be working, and really bizarrely i'm actually getting a float value back as the return value of the funciton.. but that should be an int32 and is declared such (returns int32) in the native sub declaration :O

[15:16] <timotimo> i'd need to see more code or a golfed example to know what's up

[15:17] <ab6tract> timotimo: ack, i'll work on it :)

[15:18] *** Sgeo_ joined
[15:18] <uzl> antoniogamiz: My bad. I meant in relation to L<>, what portion should be alloted to each one of them? Probably the first mention of a type should be linked to (L<>) and afterwards, one can use C<> for the type one linked?

[15:19] <antoniogamiz> mmm that seems a good convention

[15:19] <tadzik> welp, time to unsub from #81

[15:19] <antoniogamiz> I have not found a convention here https://github.com/perl6/doc/tree/master/writing-docs

[15:19] <antoniogamiz> you can add it if you want

[15:20] <uzl> antoniogamiz: Oh great, I'll check it out!

[15:20] <uzl> tadzik: Too many notifications? It's over 120 comments now ;-)!

[15:20] <tadzik> uzl: they're no longer on topic :)

[15:21] *** Guest93 left
[15:21] *** Guest93 joined
[15:21] *** Sgeo left
[15:21] *** pamplemousse joined
[15:25] <uzl> That's what I thought. It's too derailed at this point and some people proposing outlandish things with too much speculation. I'm glad it's been overall civil though and many people brought up great points.

[15:30] <harmil> tadzik it wasn't on-topic about 20 comments in...

[15:30] *** kensanata left
[15:32] <El_Che> NeuPerl is my favorite (aka WHAT???) :)

[15:32] *** epony left
[15:33] *** a6502 joined
[15:35] *** epony joined
[15:35] *** robertle left
[15:38] <a6502> hi *

[15:40] <a6502> why does zef put installed modules in a weird path like .perl6/sources/CDC3F6E966AA850234F8781D1430D06B7332217E instead of something readable?

[15:41] <timotimo> it's rakudo doing that, not zef

[15:41] <timotimo> it's for supporting things like "filenames for modules that the operating system or filesystem does not allow"

[15:41] <timotimo> and for "multiple versions of the same module at the same time

[15:41] *** pamplemousse left
[15:42] <a6502> ok.. supporting multiple version of the same module is cool

[15:43] <timotimo> also, you're not supposed to muck around in the sources file, the files are meant to be immutable

[15:43] <timotimo> but of course filesystems don't really offer that functionality

[15:44] <a6502> some filesystems do.. but maybe not for mortal users

[15:44] *** lembark left
[15:45] <uzl> El_Che: That was me when I first read it. Removing Perl (and version-like names) from the name is essentially the issue the community is trying to tackle.

[15:46] <uzl> If that'd be the end result (i.e., XPerl), I'd rather keep Perl 6.

[15:46] <antoniogamiz> there's pretty and easy way to install perl6 with a single command?

[15:47] <a6502> in the perl5 world i've gotten used to looking at the sources of installed modules in the @INC locations

[15:47] <timotimo> https://rakudup.github.io/ stmuk made this

[15:47] *** Ven`` joined
[15:47] <timotimo> a6502: i think you can "zef look" or "zef locate" for that

[15:48] <antoniogamiz> timotimo: oh :o

[15:50] <a6502> timotimo: ah.. thx.. yet some more new things to remember ;)

[15:50] <El_Che> uzl: yeah, it was extremely weird for me. Fix it or leave alone, not make it worse :)

[15:51] <El_Che> antoniogamiz: what are you looking for? OS packages? local compile? docker?

[15:51] <antoniogamiz> docker

[15:51] <antoniogamiz> I have seen tyil containers

[15:51] <antoniogamiz> but I also need a node environment

[15:51] <timotimo> oh, docker is good

[15:51] <El_Che> I had containers (and have locally), that just took a base OS and installed my OS packages

[15:51] <El_Che> they were lots smaller than the rakudo-star ones

[15:52] <El_Che> (rakudo star on docker escapes my understanding completely)

[15:52] <timotimo> the good thing about docker containers is that you can just make one based on different containers and include extra stuff

[15:52] <timotimo> steal tyil's setup from gitlab with the CI stuff and have it create the images automatically

[15:53] <El_Che> timotimo: an alpine comtainer + rakudo-pkg is very small

[15:53] <El_Che> sadly alpine sucks when you need to compile lots of stuff

[15:54] <antoniogamiz> I was using tyil container as base but it took 2 hours to execute apt-get update

[15:54] <El_Che> I have been seriously looking at releasing rakudo tar.gz now that's relocatable. Nothing out yet because of lack of time

[15:54] *** ravenous_ left
[15:54] *** ChoHag joined
[15:55] <El_Che> antoniogamiz: you're doing something wrong then

[15:55] <Geth> ¦ doc/raku: ca77a16a05 | Coke++ | CONTRIBUTING.md

[15:55] <Geth> ¦ doc/raku: another p6

[15:55] <Geth> ¦ doc/raku: review: https://github.com/perl6/doc/commit/ca77a16a05

[15:55] <antoniogamiz> mmmm

[15:55] <antoniogamiz> I supposed that hehe

[15:55] <uzl> El_Che: A weird kind of window dressing. We get a rename but unfortunately the community's back to square one. Hopefully, with this sensible rename the community won't have the infamous and cyclical naming issue. It'll be a thing of the past.

[15:55] <antoniogamiz> I do not know why though

[15:55] <antoniogamiz> El_Che: I'm making tests here => https://cloud.docker.com/repository/registry-1.docker.io/antoniogamiz/documentable/builds/3215b77e-08f5-4cf7-86dd-4445c0aa0f6e

[15:56] *** ravenous_ joined
[15:56] *** wildtrees joined
[15:56] <El_Che> antoniogamiz: take a debian-slim base image, add this repo (https://github.com/nxadm/rakudo-pkg#debian-ubuntu-lmde-and-mint), apt-get install rakudo-pkg, and you're set

[15:57] <tyil> antoniogamiz: thats a slow apt-get update

[15:57] <tyil> damn

[15:57] *** wildtrees left
[15:58] <a6502> ok.. next question: where do i put MyFirstModule? and how do i name the file?

[15:58] *** wildtrees joined
[15:58] <antoniogamiz> tyil: it's a problem with my dockerfile?

[15:58] <tyil> I don't know, I can't really reproduce that

[15:58] *** lembark joined
[15:58] <antoniogamiz> El_Che: I will try it

[15:59] <El_Che> antoniogamiz: you can always use other mirrors on tyil image by COPY'ing or mounting a /etc/apt/sources.list file

[16:02] <antoniogamiz> mmm

[16:05] <harmil> a6502 please see: https://docs.perl6.org/language/module-packages#Modules_on_disk

[16:15] *** lizmat left
[16:18] *** jaldhar joined
[16:20] *** lizmat joined
[16:26] *** scimon left
[16:28] *** jaldhar left
[16:28] *** jaldhar joined
[16:32] *** ravenou__ joined
[16:34] <a6502> harmil: that does not explain that there apparantly are different types of include directories.. (because that might be rakudo-specific?)

[16:36] *** ravenous_ left
[16:39] *** ravenou__ left
[16:40] *** ravenous_ joined
[16:42] *** zakharyas left
[16:43] *** molaf left
[16:44] *** _uzl joined
[16:45] *** chloekek joined
[16:46] *** uzl left
[16:50] *** lizmat left
[17:00] *** Ven`` left
[17:03] *** pamplemousse joined
[17:04] *** _uzl left
[17:29] *** Ven`` joined
[17:30] *** mensvaga left
[17:47] *** mensvaga joined
[17:49] *** mowcat left
[17:50] *** sena_kun joined
[17:53] *** Actualeyes joined
[17:54] *** Black_Ribbon joined
[17:57] *** Actualeyes left
[18:00] *** reportable6 left
[18:00] *** jman joined
[18:00] <jman> hi

[18:02] *** reportable6 joined
[18:03] <jman> say "hi there im cool" ~~ / hey|hi|yo \s* there/    : only returns "hi". I want "hi there". what am I doing wrong?

[18:05] <antoniogamiz> ()

[18:05] <sena_kun> m: say 'hi there im cool' ~~ / (hey|hi|yo) \s* there /

[18:05] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «｢hi there｣␤ 0 => ｢hi｣␤»

[18:06] <sena_kun> the issue is that whole "yo \s* there" is taken as a third branch of the alternation

[18:06] <sena_kun> so you need to group it

[18:06] <sena_kun> you can have either a capturing group, with `()`...

[18:06] <jman> thank you:)

[18:06] <sena_kun> m: my $match = 'hi there im cool' ~~ / (hey|hi|yo) \s* there /; say $match[0];

[18:06] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «｢hi｣␤»

[18:06] <sena_kun> or without capturing...

[18:07] <sena_kun> m: my $match = 'hi there im cool' ~~ / [hey|hi|yo] \s* there /; say $match[0];

[18:07] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «Nil␤»

[18:08] <jman> <3

[18:08] *** jman left
[18:15] *** cpup left
[18:15] <ab6tract> jnthn, timotimo: CArray[CArray[num32]] was indeed the right type. Thanks for your help in confirming this! The issue I was facing had to do with an edge case around mono files and null pointers

[18:20] *** cpup joined
[18:30] *** sauvin left
[18:31] *** robertle joined
[18:32] *** MasterDuke joined
[18:32] *** pamplemousse left
[18:35] *** mowcat joined
[18:35] *** mowcat left
[18:36] *** mowcat joined
[18:44] *** pamplemousse joined
[18:50] *** pilne joined
[18:56] *** pamplemousse left
[19:11] <mst> who was permission to lock the renaming thread? it's getting *dumb* now I think, and all the points have already been made

[19:15] <mst> AlexDaniel`: 

[19:15] <mst> jnthn: 

[19:19] *** pamplemousse joined
[19:24] *** Ven`` left
[19:28] *** camelCaser left
[19:37] *** molaf joined
[19:37] *** pamplemousse left
[19:37] *** pat_js left
[19:39] <ab6tract> mst++

[19:39] <ab6tract> ciao all!

[19:39] *** ab6tract left
[19:44] *** Grauwolf joined
[19:44] *** Grauwolf left
[19:44] *** Grauwolf joined
[19:54] *** antoniogamiz left
[19:55] *** [particle] left
[19:56] *** [particle] joined
[19:58] *** antoniogamiz joined
[20:02] *** [particle]1 joined
[20:04] *** [particle] left
[20:06] <masak> mst: haha :)

[20:06] <masak> mst: actually, I'm glad bazzaar said that out loud

[20:06] <mst> masak: you can tell how impressed I was by how polite my reply was

[20:07] <masak> (not because it's in any way a good argument, but because it's a *thought* that's now been aired)

[20:07] <masak> mst: I admire your restraint, yes

[20:08] *** [particle]1 left
[20:08] <masak> you know it's going to be substantial and well-supported when the comment starts "At the risk of being knocked down again,"

[20:09] <masak> that's how the Gettysburg address started, too

[20:09] <mst> restraint? no, no, that was "I have gone through shouty and out the other side into the cool calm space where people get broken"

[20:09] <masak> oh, I recognized the register, believe me

[20:10] <mst> *GRINS*

[20:10] <masak> in all seriousness, though, p5 and p6 _are_ competing

[20:10] <mst> it's always nice to have one's art appreciated

[20:10] <masak> the trick is to have that competition be benign

[20:11] <masak> zero-sum is only interesting if you believe that people are wallets

[20:11] <mst> ... you know, I'm pretty sure I wrote a blog post about "how bout we compete by being awesome" once upon a time ...

[20:11] <masak> that _does_ ring a bell!

[20:11] * masak does a double take at mst

[20:11] <masak> IT'S YOU!

[20:11] <antoniogamiz> if I declare a dynamic variable inside a function can it be accesed outside of it?

[20:12] *** [particle] joined
[20:12] <masak> antoniogamiz: lexically? sure.

[20:12] <antoniogamiz> good :D

[20:12] <masak> m: sub foo { my $*dyn = "OH HAI"; bar() }; sub bar { say $*dyn }; foo()

[20:12] <camelia> rakudo-moar ecf2b1e4f: OUTPUT: «OH HAI␤»

[20:12] <masak> look ma, outside the sub

[20:13] <mst> no hands;

[20:13] <masak> o <--- no hands, waving

[20:18] *** sena_kun left
[20:19] *** [particle]1 joined
[20:20] *** [particle] left
[20:24] *** ravenous_ left
[20:24] *** pmurias joined
[20:28] *** lizmat joined
[20:34] *** [particle] joined
[20:35] *** [particle]1 left
[20:38] <cpan-p6> New module released to CPAN! Gnome::Gtk3 (0.18.1) by 03MARTIMM

[20:42] *** camelCaser joined
[20:42] *** [particle]1 joined
[20:44] *** [particle] left
[20:52] *** pmurias left
[20:54] *** pmurias joined
[20:54] *** netrino joined
[21:12] *** Kaiepi left
[21:13] *** [Sno] joined
[21:15] *** Kaiepi joined
[21:20] *** antoniogamiz left
[21:27] <Geth> ¦ problem-solving/path-to-raku: 084ca0a0b3 | (Elizabeth Mattijsen)++ | solutions/language/PATH-TO-RAKU.md

[21:27] <Geth> ¦ problem-solving/path-to-raku: Add section about books

[21:27] <Geth> ¦ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/commit/084ca0a0b3

[21:30] *** MilkmanDan left
[21:33] *** kerframil joined
[21:34] *** adu joined
[21:34] *** antoniogamiz joined
[21:36] <pmurias> masak: re competing, they do for some resources, but a super strong Perl 5 resurgence would be an excellent thing for Perl 6

[21:38] <antoniogamiz> what's the situation with name change?

[21:38] <antoniogamiz> with the*

[21:41] <El_Che> We're going for SexyMcPerlyBoatFace

[21:41] <antoniogamiz> oh, I like that one :D

[21:42] *** kensanata joined
[21:49] <ecocode> El_Che:hi

[21:50] <discord6> <Aearnus> o/ all

[21:53] *** MilkmanDan joined
[21:55] *** lichtkind_ is now known as lichtkind

[22:00] *** adu left
[22:01] <lizmat> .oO( I thought it was PerlyMcSexyBoatFace? )

[22:02] <timotimo> what, has nobody suggested SexyScript yet

[22:04] *** harmil left
[22:04] <lizmat> *sigh*   :-)

[22:04] <lizmat> sleep&

[22:04] *** lizmat left
[22:06] <chloekek> I like that Perl 6 has so many different tokens and they make the code so colorful when syntax highlighted.

[22:07] <chloekek> At work I program in Python and Haskell and it just looks like a sea of identifiers and parentheses.

[22:07] <timotimo> i agree, people say "words make the code much more readable" but i think too many words and not many symbols doesn't make things better at all

[22:10] <chloekek> Sigils and operators 😍

[22:11] <timotimo> sigils really allow for pretty much the nicest string interpolation

[22:13] <timotimo> and allowing postcircumfixes is a great decision

[22:13] *** antoniogamiz left
[22:13] <discord6> <Aearnus> enterprise Haskell is really something to behold

[22:14] <discord6> <Aearnus> makes me realize how awful of an idea significant whitespace is

[22:14] <timotimo> is that because haskell has significant whitespace (optionally) or the other way around?

[22:14] <discord6> <Aearnus> Haskell has significant whitespace

[22:15] <timotimo> but it's optional, isn't it?

[22:15] <timotimo> i haven't haskelled in years

[22:16] <chloekek> You can use curly braces and then you don't need indentation.

[22:16] <discord6> <Aearnus> let, case, where, do, and currying functions onto new lines require a new level of indentation

[22:17] <discord6> <Aearnus> but yeah, curly braces

[22:17] <discord6> <Aearnus> here's a screenshot from the enterprise codebase i'm working on right now actually https://cdn.discordapp.com/attachments/484986251037114380/611684839955103765/unknown.png

[22:17] <discord6> <Aearnus> (censored, of course)

[22:17] <discord6> <Aearnus> but look at that indentation 😦

[22:18] *** mensvaga left
[22:18] <timotimo> it's nothing until you start using fibonacci indentation

[22:19] <discord6> <Aearnus> ahaha

[22:19] <timotimo> the good thing is that at the lower levels it actually saves space

[22:19] <discord6> <Aearnus> unironically, some sort of nonlinear indentation scheme would be nice

[22:20] <discord6> <Aearnus> i'd be an avid user of 4->2->2->1->1->... or something along those lines

[22:20] *** pamplemousse joined
[22:21] <chloekek> 8->1->7->2->6->3->5->4

[22:22] <discord6> <Aearnus> dartboard indentation: 20, 1, 18, 4, 13,...

[22:22] <timotimo> did you see that http://nickgravgaard.com/elastic-tabstops/ - this is a cool thing btw

[22:23] <discord6> <Aearnus> i really love that

[22:24] <discord6> <Aearnus> linked on that page, but i want to see some perl 6 raku written in this font https://input.fontbureau.com/info/

[22:27] <timotimo> did you know about elastic tabstops already?

[22:27] <discord6> <Aearnus> no, that's the first i've seen of them

[22:27] *** chloekek left
[22:27] <discord6> <Aearnus> it's just concerning that the code will look awful to someone who didn't have an elastic tabstop enabled editor

[22:28] <timotimo> aye

[22:28] <discord6> <Aearnus> but: hard tabs solve that problem themselves in that they're adjustable. i was already firmly in the camp of hard tabs anyway.

[22:29] *** khisanth_ left
[22:32] *** SCHAPiE left
[22:38] *** SCHAPiE joined
[22:39] <Geth> ¦ doc: coke self-assigned Styling of types https://github.com/perl6/doc/issues/2954

[22:39] *** kensanata left
[22:42] *** khisanth_ joined
[22:46] *** pmurias left
[22:51] *** pamplemousse left
[22:56] *** pamplemousse joined
[22:58] *** Kaiepi left
[22:59] *** AlexDaniel joined
[22:59] *** AlexDaniel left
[22:59] *** AlexDaniel joined
[22:59] *** Kaiepi joined
[23:00] *** Kaiepi left
[23:03] *** Kaiepi joined
[23:04] <timotimo> https://media.discordapp.net/attachments/538774203378171935/611696639274516501/unknown.png

[23:04] <timotimo> MasterDuke: here's the hilbert curve i briefly mentioned in #moarvm

[23:09] <MasterDuke> cool

[23:10] <MasterDuke> btw, it just struck me and i have no idea. is the explicit `my $t = $d` faster than `$d is copy` in the signature?

[23:12] *** pamplemousse left
[23:13] <timotimo> no clue :)

[23:15] *** rindolf left
[23:24] <jnthn> MasterDuke: I doubt it; iirc they code-gen into about the same thing. If anything, the code in `is copy` will be a bit tighter.

[23:24] <jnthn> Though my first guess would be "about the same"

[23:24] *** pamplemousse joined
[23:39] *** wildtrees left
[23:44] *** molaf left
