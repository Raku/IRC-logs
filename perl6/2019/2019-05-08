[00:02] *** Manifest0 joined
[00:09] *** zacts joined
[00:15] *** khisanth_ joined
[00:34] *** sena_kun left
[00:43] <MasterDuke> one of our GSoC projects was mentioned at phoronix, https://www.phoronix.com/scan.php?page=news_item&px=Google-GSoC-2019-Projects

[00:43] *** zacts left
[00:50] <Kaiepi> nice

[01:18] *** Manifest0 left
[01:22] *** cpan-p6 left
[01:23] *** cpan-p6 joined
[01:23] *** cpan-p6 left
[01:23] *** cpan-p6 joined
[01:23] <lucs> How can I find out which directories are searched for for libraries (.precomp et al.)?

[01:25] *** Manifest0 joined
[01:36] *** dumbintel joined
[01:55] *** Manifest0 left
[01:56] *** dumbintel left
[02:03] *** Manifest0 joined
[02:13] *** squashable6 left
[02:14] *** squashable6 joined
[02:14] *** ChanServ sets mode: +v squashable6

[02:41] *** Manifest0 left
[02:48] *** Manifest0 joined
[02:50] <MasterDuke> lucs: you could use strace to get an OS-level view. the RAKUDO_MODULE_DEBUG env variable might have some relevant info

[02:53] *** kurahaupo_ joined
[02:55] *** Manifest0 left
[02:55] *** kurahaupo left
[02:59] *** Manifest0 joined
[03:02] *** kurahaupo_ left
[03:02] *** kurahaupo joined
[03:03] <lucs> MasterDuke: Oh, I was wondering more in general terms, something like perl's @INC.

[03:06] *** kotrcka left
[03:35] *** zacts joined
[03:39] <ugexe> $*REPO.repo-chain but you don’t get the precomp repositories with this 

[03:41] <ugexe> Precomp repositories are part of the repos shown

[03:43] <ugexe> You could call .precomp-repository on each repo to figure it out though 

[03:44] <lucs> Ah, nice.

[03:45] <lucs> What do the prefixes mean? (inst#, ap#, etc.)

[03:45] <ugexe> They tell you what CompUnit::Repository::* backs it 

[03:48] <lucs> Hmm... Are there any docs available explaining the precomp process and all it entails?

[03:48] * lucs goes to docs.perl6.org ...

[03:54] *** kurahaupo_ joined
[03:57] *** kurahaupo_ left
[03:58] *** kurahaupo_ joined
[03:58] *** kurahaupo left
[04:06] *** Manifest0 left
[04:13] <lucs> So $HOME/.perl6 appears at the head of $*REPO.repo-chain.

[04:13] *** Manifest0 joined
[04:14] <lucs> Any way I can control what that first directory is? (apart from changing $HOME, which does work, but, er, it changes $HOME)

[04:14] *** abraxxa joined
[04:16] *** abraxxa1 left
[04:23] *** molaf joined
[04:25] *** vrurg left
[04:27] *** jmerelo joined
[04:27] *** kurahaupo joined
[04:28] <jmerelo> releasable6: status

[04:28] <releasable6> jmerelo, Next release will happen when it's ready. 1 blocker. 132 out of 284 commits logged (⚠ 2 warnings)

[04:29] <releasable6> jmerelo, Details: https://gist.github.com/4a996c63388ac081e0ba7c74a74a5f5f

[04:29] <jmerelo> Kinda know by heart those numbers already...

[04:30] *** kurahaupo_ left
[04:41] <jmerelo> Who owns p6c.org? Can't we redirect it somewhere else?

[04:43] *** zacts left
[04:55] <jmerelo> .tell moritz Can we build the modules list somewhere else than ecosystem-api?

[04:55] <yoleaux> jmerelo: I'll pass your message to moritz.

[04:55] <jmerelo> .tell timotimo Can we build the modules list somewhere else than ecosystem-api?

[04:55] <yoleaux> jmerelo: I'll pass your message to timotimo.

[04:56] *** cpan-p6 left
[04:57] *** cpan-p6 joined
[04:57] *** cpan-p6 left
[04:57] *** cpan-p6 joined
[05:02] *** Manifest0 left
[05:07] *** Manifest0 joined
[05:10] <jmerelo> .tell timotimo OK, help me here. When and where is ecosystem-api.p6c.org/projects1.json generated? I have not found it anywhere...

[05:10] <yoleaux> jmerelo: I'll pass your message to timotimo.

[05:12] *** Manifest0 left
[05:13] *** MilkmanDan left
[05:15] *** MilkmanDan joined
[05:16] *** sauvin joined
[05:17] *** Manifest0 joined
[05:21] <rba> jmerelo: ecosystem-api could be hosted on github pages too?

[05:21] <jmerelo> rba: not sure what's in there, but projects1.json could, of course.

[05:24] <jmerelo> rba: as a matter of fact, I think zef is bypassing that already, but going through ugexe code is not easy...

[05:24] <jmerelo> rba: I would say that the latest zef upgrade already includes that, but I'm downloading it now and it takes a while...

[05:25] <jmerelo> rba: I mean, ugexe himself said so: https://stackoverflow.com/a/56030094/891440 I wish the announcement had not been so obscure...

[05:30] *** robertle left
[05:31] <Geth> ¦ doc: 931f8f3136 | (Luis F. Uceta)++ | 2 files

[05:31] <Geth> ¦ doc: Remove spaces around operators and reflow

[05:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/931f8f3136

[05:31] <Geth> ¦ doc: ca4adfaee4 | (Luis F. Uceta)++ | doc/Language/statement-prefixes.pod6

[05:31] <Geth> ¦ doc: Add minor correction

[05:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ca4adfaee4

[05:31] <Geth> ¦ doc: 2434c440a4 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 2 files

[05:31] *** Geth left
[05:31] *** Geth joined
[05:33] <tyil> no errors, no events that its being killed, but it does come back up from the same node :I

[05:33] <jmerelo> tyil: say what?

[05:33] <tyil> jmerelo: geth quit and joined 2 minutes ago

[05:34] <jmerelo> Ah, OK.

[05:34] <tyil> ah, describe says OOMKilled

[05:34] <tyil> fair, I don't have *that* much memory on my nodes

[05:34] <tyil> but maybe I should schedule it to get some more memory if a simple commit can bump it over the limit

[05:35] <tyil> it's currently set to 256mb

[05:37] *** Geth_ joined
[05:37] *** Geth left
[05:37] <tyil> and now 512mb

[05:41] *** antoniogamiz joined
[05:42] *** kurahaupo left
[05:42] *** kurahaupo joined
[05:52] <antoniogamiz> jmerelo: what license should have the repos I create for this project?

[05:53] <tyil> antoniogamiz: most Perl 6 code is released as Artistic-2.0

[05:54] <antoniogamiz> ok, I had though that, I wanted to be sure

[05:54] <antoniogamiz> ty

[05:54] <tyil> ^_^

[06:00] *** jmerelo left
[06:15] *** wahnberger joined
[06:16] <wahnberger> ola.. Someone here got an idea?: I have some foo.html files which i would like to serve with Cro.. Whats the best way to do stuff like that?

[06:17] <wahnberger> the cro server and routs are working well already.. so its just about how to get my shit to the client (through Cro)

[06:18] <moritz> you mean serving static files with a cro server?

[06:18] <yoleaux> 04:55Z <jmerelo> moritz: Can we build the modules list somewhere else than ecosystem-api?

[06:18] <wahnberger> moritz: yes

[06:19] <moritz> .tell jmerelo such an abstract question. Sure, everybody can build it wherever they want. It's just a perl 5 script (server/update.pl iirc) in the perl6/ecosystem repo

[06:19] <yoleaux> moritz: I'll pass your message to jmerelo.

[06:20] <wahnberger> there is some JS inside my html files which does some ajax calls to other scripts inside my cro routes

[06:20] <wahnberger> but yes

[06:20] <moritz> wahnberger: https://github.com/croservices/cro/issues/73 has an example of a static file being served

[06:21] <moritz> though for production workloads I recommend putting a cots HTTP server in front of cro as a reverse proxy, and letting that serve static files for you

[06:22] <El_Che> moritz: just my 2c. I prefer to keep reverse proxy as dumb as possible and concentrate contents on the backend

[06:22] <El_Che> make deployment easier

[06:23] <El_Che> your suggestion would be faster, though

[06:23] <rba> moritz: the p6c.org dns is under your control?

[06:23] <moritz> El_Che: also perl 6 server side apps still tend to use more memory than they should

[06:23] *** patrickb joined
[06:23] <moritz> rba: yes

[06:23] <El_Che> moritz: just imagine it's java and it will be suddenly OK

[06:23] <El_Che> :))

[06:24] *** rindolf joined
[06:24] <moritz> lol

[06:30] <El_Che> I may be optimizing too early, but I was also thinking of the logical step of switching an apache/nginx by a hardware proxy like Netscaler or F5, but that's later, way later :)

[06:33] <wahnberger> I would be nice also having perl6 working with OpenBSDs httpd :)

[06:34] <El_Che> a kind of mod_perl6?

[06:34] <El_Che> that's zo 1999 :)

[06:34] <El_Che> so

[06:34] <wahnberger> eperl :D

[06:34] <wahnberger> nah, fcgi

[06:35] <wahnberger> or even cgi

[06:35] <wahnberger> moritz: thx it works :D

[06:35] <El_Che> is't the reverser proxy + app nowaways the most common deployment strategy?

[06:35] <El_Che> -r

[06:35] <El_Che> damn, bad at typing today

[06:39] <wahnberger> i didnt see many web"site" projects in perl6 out there..so better integration with other cots httpd stuff *might* be a important task for the future? I am wrong with that?

[06:40] <El_Che> no, you're right, the php model is of the reason for their success

[06:41] <wahnberger> we had eperl .. i think the most important thing was the easyness of php days ago

[06:41] <El_Che> never knew of eperl

[06:42] <El_Che> first time I hear it

[06:42] <wahnberger> embedded perl..you could write perl websites like you do with phps <?php ..> tag

[06:43] <wahnberger> it didnt grew up

[06:49] *** wahnberger left
[06:51] *** Manifest0 left
[06:56] *** Manifest0 joined
[07:06] *** Manifest0 left
[07:12] *** Manifest0 joined
[07:56] *** domidumont joined
[08:10] *** zakharyas joined
[08:15] *** kensanata joined
[08:19] *** domidumont left
[08:26] *** reach_satori left
[08:30] *** Manifest0 left
[08:36] *** Manifest0 joined
[08:36] *** dakkar joined
[08:55] *** reach_satori joined
[09:06] *** squashable6 left
[09:07] *** squashable6 joined
[09:07] *** ChanServ sets mode: +v squashable6

[09:07] *** bbkr joined
[09:08] *** Manifest0 left
[09:13] *** Manifest0 joined
[09:29] *** zacts joined
[09:41] *** Manifest0 left
[09:46] *** rindolf left
[09:46] *** Manifest0 joined
[09:50] *** wahnberger joined
[09:52] <wahnberger> its me again :)   I get data from a psql database and put that into a hash..when i am doing "dd %foo" i ll get a datetime.new object instead of a simple string like 12-12-1999. So i cannot use to-json from JSON::Tiny to transform to json because of the datetime object in my hash

[09:53] <wahnberger> has anyone an idea how to swap the object into a string in the hash?

[09:54] <wahnberger> the datatype in psql is date, of course

[09:55] <wahnberger> sorry - the data type in my hash is Date.new (not datetime.new)

[09:55] <timotimo> which database module are you using? DBIish or Db::Pg?s

[09:55] <yoleaux> 04:55Z <jmerelo> timotimo: Can we build the modules list somewhere else than ecosystem-api?

[09:55] <yoleaux> 05:10Z <jmerelo> timotimo: OK, help me here. When and where is ecosystem-api.p6c.org/projects1.json generated? I have not found it anywhere...

[09:56] <wahnberger> timotimo: DB::Pg

[09:57] *** robertle joined
[09:57] <timotimo> there are many, many ways to do this

[09:57] <timotimo> you can cast the datetime from the database to a string right in the sql statement

[09:57] <wahnberger> i do a "select * ..."

[09:57] <timotimo> you can use duckmap to transform every Date in the hash to a string

[09:58] *** zacts left
[09:58] <timotimo> m: my %data = (a => 1, b => 2, c => 3, d => Date.today); say %date.duckmap(-> Date $d { $d.Str });

[09:58] <camelia> rakudo-moar b0dd44b00: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '%date' is not declared. Did you mean any of these?␤    %data␤    Date␤␤at <tmp>:1␤------> 3, b => 2, c => 3, d => Date.today); say 7⏏5%date.duckmap(-> Date $d { $d.Str });␤»

[09:58] <timotimo> m: my %data = (a => 1, b => 2, c => 3, d => Date.today); say %data.duckmap(-> Date $d { $d.Str });

[09:58] <camelia> rakudo-moar b0dd44b00: OUTPUT: «{a => 1, b => 2, c => 3, d => 2019-05-08}␤»

[09:58] <timotimo> m: my %data = (a => 1, b => 2, c => 3, d => Date.today); say %data.duckmap(-> Date $d { $d.Str }).perl;

[09:58] <camelia> rakudo-moar b0dd44b00: OUTPUT: «{:a(1), :b(2), :c(3), :d("2019-05-08")}␤»

[10:03] <wahnberger> timotimo: thx :)

[10:04] *** andrzejku_ joined
[10:04] <wahnberger> anyway .. I am wondering if this behaviour was forseen or it is actually not considered in a common way?

[10:06] <tyil> heh, never knew about `duckmap`

[10:06] <tyil> looks fancy

[10:06] <timotimo> JSON::Fast will turn the date object to a string for you automatically

[10:07] *** andrzejku left
[10:14] *** Manifest0 left
[10:19] *** rindolf joined
[10:21] *** mowcat joined
[10:22] *** Manifest0 joined
[10:23] <wahnberger> timotimo: it also gives an easyier-to-read output with say :)

[10:25] <wahnberger> last question today, whats the proper way to run a cro service like a daemon?

[10:26] <timotimo> docker, systemd, or supervise are good approaches

[10:40] *** reach_satori left
[10:42] <bbkr> hi. when will 2019.05 release take place? docs/release_guide.pod says 2019-05-05.

[10:42] <yoleaux> 30 Aug 2018 12:34Z <DrForr> bbkr: Hi, I was looking at your JSONRPC server for implementing https://microsoft.github.io/language-server-protocol/specification - It uses request names like 'textDocument/didOpen' which obviously don't map to Perl method names. Do you have any thoughts on how to implement these? I'm thinking either a separate Route argument or a forwarding method that picks off the last part of a route name, handing it off to 

[10:42] <yoleaux> another class. Or a way to de

[10:44] *** reach_satori joined
[10:45] <AlexDaniel> samcv: are there any issues with https://github.com/perl6/problem-solving/pull/23 ?

[10:46] <AlexDaniel> samcv: if so, let me know ahead of time :)

[10:46] <antoniogamiz> m: my @a = [1, [1,2,3]]; for @a[1] { say $_;};

[10:46] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[1 2 3]␤»

[10:46] <antoniogamiz> anyone can explain why that code is not taking each element of [1,2,3] separately?

[10:47] <antoniogamiz> I would expect it prints 1 \n 2 \n 3 \n

[10:51] <AlexDaniel> m: my @a = [1, [1,2,3]]; for @a[1].list { say $_;};

[10:51] <camelia> rakudo-moar b0dd44b00: OUTPUT: «1␤2␤3␤»

[10:51] <AlexDaniel> m: my @a = [1, [1,2,3]]; for @(@a[1]) { say $_;};

[10:51] <camelia> rakudo-moar b0dd44b00: OUTPUT: «1␤2␤3␤»

[10:51] <AlexDaniel> m: my @a = [1, [1,2,3]]; for @@a[1] { say $_;};

[10:51] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[1 2 3]␤»

[10:51] <AlexDaniel> eh

[10:52] <AlexDaniel> jnthn: fwiw one of the biggest pain points for me ↑

[10:52] *** Manifest0 left
[10:52] <AlexDaniel> m: my @a = [1, [1,2,3]]; for list @a[1] { say $_;};

[10:52] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[1 2 3]␤»

[10:52] <AlexDaniel> m: my @a = [1, [1,2,3]]; for flat @a[1] { say $_;};

[10:52] <camelia> rakudo-moar b0dd44b00: OUTPUT: «1␤2␤3␤»

[10:52] <AlexDaniel> m: my @a = [1, [1,2,3]]; for @a[1].flat { say $_;};

[10:52] <camelia> rakudo-moar b0dd44b00: OUTPUT: «1␤2␤3␤»

[10:54] <antoniogamiz> Have I found someting weird? 

[10:54] <antoniogamiz> something*

[10:57] *** Manifest0 joined
[11:06] *** AlexDaniel left
[11:14] *** squashable6 left
[11:18] *** squashable6 joined
[11:18] *** ChanServ sets mode: +v squashable6

[11:20] *** antoniogamiz left
[11:22] *** wahnberger left
[11:28] *** zakharyas left
[11:32] *** bbkr left
[11:32] *** Manifest0 left
[11:33] *** thundergnat_ joined
[11:35] <thundergnat_> antoniogamiz: not really, @a[1] is an item (scalar container) that just happens to contain an array. Perl 6 doesn't do nearly as much automatic flattening as previous versions.

[11:36] <thundergnat_> m: my $a = [1,2,3]; .say for $a; .say for |$a;

[11:36] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[1 2 3]␤1␤2␤3␤»

[11:36] <thundergnat_> If you _want_ the flattening behaviour, you need to ask for it.

[11:38] <thundergnat_> But the non-autoflattening makes other things much easier / possible.

[11:38] *** Manifest0 joined
[11:38] <thundergnat_> Everything is a trade-off

[11:38] *** thundergnat_ left
[11:44] *** domidumont joined
[11:45] *** thundergnat_ joined
[11:46] *** thundergnat_ left
[11:59] *** aborazmeh joined
[11:59] *** aborazmeh left
[11:59] *** aborazmeh joined
[12:06] *** aborazmeh left
[12:08] *** antoniogamiz joined
[12:09] *** zacts joined
[12:21] *** demanuel left
[12:44] *** zacts left
[12:55] *** reach_satori left
[13:04] *** zakharyas joined
[13:08] <Xliff> m: sub a ($a, $b) { my $c; say "Var: { $a.VAR.name } / { $b.VAR.name } / { $c.VAR.name }" }; a(1, 1)

[13:08] <camelia> rakudo-moar b0dd44b00: OUTPUT: «Use of Nil in string context␤Var:  /  / $c␤  in sub a at <tmp> line 1␤Use of Nil in string context␤  in sub a at <tmp> line 1␤»

[13:08] <Xliff> ^^ Is this problem noted in the docs?

[13:08] <Xliff> Found the solution, BTW

[13:08] <Xliff> m: sub a ($a is copy, $b is copy) { my $c; say "Var: { $a.VAR.name } / { $b.VAR.name } / { $c.VAR.name }" }; a(1, 1)

[13:08] <camelia> rakudo-moar b0dd44b00: OUTPUT: «Var: $a / $b / $c␤»

[13:16] *** mowcat left
[13:30] *** lucasb joined
[13:30] *** vrurg joined
[13:35] *** antoniogamiz left
[13:45] *** squashable6 left
[13:46] *** squashable6 joined
[13:47] *** squashable6 left
[13:48] *** squashable6 joined
[13:48] *** ChanServ sets mode: +v squashable6

[14:00] *** mowcat joined
[14:10] *** reach_satori joined
[14:11] *** AlexDaniel joined
[14:16] *** zacts joined
[14:17] *** sena_kun joined
[14:23] *** Manifest0 left
[14:29] *** Manifest0 joined
[14:50] <Xliff> m: my @a = %10; my @b = @a.splice(0, 5); @b.sayl @a.say; 

[14:50] <camelia> rakudo-moar b0dd44b00: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3 = %10; my @b = @a.splice(0, 5); @b.sayl7⏏5 @a.say;␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        sta…»

[14:50] <Xliff> m: my @a = %10; my @b = @a.splice(0, 5); @b.say; @a.say; 

[14:50] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[]␤[]␤»

[14:50] <Xliff> m: my @a = ^10; my @b = @a.splice(0, 5); @b.say; @a.say; 

[14:50] <camelia> rakudo-moar b0dd44b00: OUTPUT: «[0 1 2 3 4]␤[5 6 7 8 9]␤»

[14:51] <tobs> m: (%10).perl.say

[14:51] <camelia> rakudo-moar b0dd44b00: OUTPUT: «{}␤»

[14:51] <tobs> huh

[14:52] <timotimo> that's syntax for %($/[10])

[14:52] <timotimo> which is also %/[10]

[14:53] <timotimo> hm, actually, not exactly sure if it's (%/)[10]

[14:53] <timotimo> or %($/[10])

[14:57] *** kensanata left
[14:58] *** Manifest0 left
[15:04] *** Manifest0 joined
[15:06] *** jmerelo joined
[15:21] <jmerelo> releasable6: status

[15:21] <yoleaux> 06:19Z <moritz> jmerelo: such an abstract question. Sure, everybody can build it wherever they want. It's just a perl 5 script (server/update.pl iirc) in the perl6/ecosystem repo

[15:21] <releasable6> jmerelo, Next release will happen when it's ready. 1 blocker. 132 out of 284 commits logged (⚠ 2 warnings)

[15:21] <releasable6> jmerelo, Details: https://gist.github.com/1129d2ce0452aa6abb9a23dfb23f0e8d

[15:22] <jmerelo> .tell moritz but I couldn't find out where the place to upload it was configured, for instance.

[15:22] <yoleaux> jmerelo: I'll pass your message to moritz.

[15:25] <moritz> jmerelo: it wasn't uploaded. It was built on the webserver

[15:25] <yoleaux> 15:22Z <jmerelo> moritz: but I couldn't find out where the place to upload it was configured, for instance.

[15:26] *** zacts left
[15:28] *** robertle left
[15:41] *** patrickb left
[15:41] <jmerelo> moritz: hum. Then who uploaded it to ecosystem-api.p6c.org?

[15:41] <moritz> jmerelo: nobody. It was built there by a cron job.

[15:42] <jmerelo> moritz: I didn't mean "who" as a human

[15:42] <moritz> jmerelo: cron then

[15:42] <jmerelo> moritz: so walk me through this. 

[15:42] <moritz> jmerelo: there used to be a web server with the FQDN of www.p6c.org (which also hosted perl6.org)

[15:43] <jmerelo> moritz: Something changes in META.list. That's downloaded by the cron job from where? ecosystem-api.p6c.org? And that builds project1.json, is that correct?

[15:43] <moritz> jmerelo: it had a virtual host ecosystem-api.p6c.org pointing to a directory

[15:43] <jmerelo> Ah, OK, so it was just a virtual host with a single file.

[15:43] <moritz> jmerelo: and then there was a cron job on that same web server

[15:44] <moritz> that regenerated project2.json and errors.json or whatitscalled

[15:44] <jmerelo> moritz: and that webserver wasn't replicated in the provisional infrastructure because only perl6.org was redirected, not p6c.org

[15:45] <moritz> jmerelo: I don't know about the reasons

[15:46] <jmerelo> anyway, my point is that both the host that generated the file (www.p6c.org) and the one that (virtually) hosted it are down, right?

[15:46] *** zacts joined
[15:46] <moritz> correct

[15:47] <jmerelo> ugexe has gone around it and created a new version of zef that does not need that file anyway. Kudos for that. But I didn't know that this morning...

[15:48] *** kurahaupo left
[15:48] *** kurahaupo_ joined
[15:50] <ugexe> fwiw it wasn't a secret. it was announced in irc the moment i did it, announced as a commit to anyone watching the zef repo, and announced in the blog post i wrote about pts

[15:52] <jmerelo> ugexe: it can't be a secret if it's open source. I can be also more widespread. But you did a great workaround, so ++

[15:57] *** sena_kun left
[15:59] *** zacts left
[16:05] *** domidumont left
[16:13] *** mowcat left
[16:25] *** epony left
[16:38] *** kurahaupo_ left
[16:38] *** kurahaupo joined
[16:44] *** dakkar left
[16:45] *** Manifest0 left
[16:50] *** Manifest0 joined
[17:16] *** domidumont joined
[17:23] *** yqt joined
[17:28] *** yqt left
[17:30] *** patrickb joined
[17:33] *** epony joined
[17:38] *** sena_kun joined
[17:39] <Kaiepi> i'm trying to write bindings for a cpp library

[17:39] <yoleaux> 07:51Z <patrickb> Kaiepi: WRT support of 6.e in your grant - have you seen https://github.com/rakudo/rakudo/pull/2852 ?

[17:40] <Kaiepi> the problem is there are multiple constructors on a class i'm writing a cppstruct for

[17:40] <Kaiepi> s/cppstruct/\0 repr class/

[17:40] <Kaiepi> how do i write the native methods on the class so i can use all of the constructors?

[17:41] <Kaiepi> trying to use multi throws with an invocation error of some sort

[17:45] <Kaiepi> in the meantime i just created a bunch of private native constructor methods and made a bunch of new multi methods that invoke them

[17:50] *** epony left
[17:52] *** zakharyas left
[17:53] *** kurahaupo left
[17:53] *** kurahaupo joined
[17:55] *** kaare__ left
[17:56] *** kaare__ joined
[17:56] *** epony joined
[18:12] *** Manifest0 left
[18:18] *** Manifest0 joined
[18:25] *** MilkmanDan left
[18:26] *** sauvin left
[18:28] *** MilkmanDan joined
[18:39] *** lucasb left
[18:40] *** eseyman left
[18:41] *** lizmat joined
[18:45] *** eseyman joined
[18:50] *** Manifest0 left
[18:55] *** Manifest0 joined
[18:58] *** jmerelo left
[18:58] *** domidumont left
[19:03] *** kurahaupo left
[19:04] *** kurahaupo joined
[19:06] *** netrino joined
[19:06] *** pecastro joined
[19:07] <Geth_> ¦ doc: 99d9074937 | (Elizabeth Mattijsen)++ | doc/Language/setbagmix.pod6

[19:07] <Geth_> ¦ doc: Reflow, add Introduction header, fix some typoes

[19:07] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/99d9074937

[19:08] *** kurahaupo_ joined
[19:09] *** kurahaupo left
[19:11] *** antoniog1miz joined
[19:12] *** robertle joined
[19:29] *** mowcat joined
[19:39] *** robertle left
[19:39] *** kurahaupo joined
[19:40] *** kurahaupo_ left
[19:46] <timotimo> hey tyil are you there?

[19:49] <timotimo> oh

[19:50] <timotimo> i'm an idiot. i had hack.p6c.org in my /etc/hosts

[19:50] <timotimo> i'll probably not get the github sysops to make that change locally, too

[19:50] <timotimo> oh!

[19:50] <lizmat> could you work with masak so he can do the necessary changes ?

[19:50] <timotimo> hack.p6c.org is actually hooked up to minion1 on tyil's server

[19:50] <timotimo> so all we need is this piece of nginx config on that machine: server { listen 8888; server_name hack.p6c.org; location / { proxy_pass https://geth.svc.tyil.net/; } }

[19:53] <timotimo> it'd be cleaner to do it by setting up that redirect, but if masak wants, he can just change the webhook to start with https://geth.svc.tyil.net/[…]

[19:54] <adu> hi timotimo 

[19:54] <timotimo> oh no

[19:54] <timotimo> geth ignored my webhook :o

[19:55] <timotimo> hey adu

[19:55] <masak> how rude

[19:55] <timotimo> oh

[19:55] <timotimo> the thing i delivered was a "travis failed" message

[19:56] <timotimo> now geth returned "OK", but i don't see the text in #perl6-dev?

[19:58] <timotimo> hey masak can you go to https://github.com/rakudo/rakudo/settings/hooks/ and update the geth webhook like i described a few lines up above?

[19:59] <AlexDaniel> speaking of which…

[19:59] <AlexDaniel> I'm merging this, right? https://github.com/perl6/problem-solving/pull/23

[20:00] <sena_kun> AlexDaniel++

[20:01] *** molaf left
[20:01] <lizmat> moritz: I guess another hook is needed there

[20:02] <moritz> done

[20:02] <lizmat> moritz++

[20:04] <timotimo> AlexDaniel: i've actually met both these fine folks

[20:04] <AlexDaniel> timotimo: when?

[20:05] <timotimo> a couple of SPW/APW events

[20:05] <timotimo> i'm not sure if they were at one of the GPWs i attended, but i think not

[20:05] <Geth_> ¦ problem-solving: AlexDaniel self-unassigned Issues with security and reliability of our infrastructure https://github.com/perl6/problem-solving/issues/9

[20:06] <Geth_> ¦ problem-solving: AlexDaniel assigned to maettu Issue Issues with security and reliability of our infrastructure https://github.com/perl6/problem-solving/issues/9

[20:06] <Geth_> ¦ problem-solving: AlexDaniel assigned to rba Issue Issues with security and reliability of our infrastructure https://github.com/perl6/problem-solving/issues/9

[20:06] <timotimo> if i'm not mistaken, rba is actually involved in organizing the SPW?

[20:06] <lizmat> timotimo: could well be, he was in the past

[20:07] *** antoniog1miz left
[20:08] *** ufobat__ joined
[20:09] *** kurahaupo left
[20:09] *** kurahaupo joined
[20:11] <AlexDaniel> weekly: One more ticket resolved in problem-solving repo! Welcome rba and maettu. https://github.com/perl6/problem-solving/issues/17

[20:11] <notable6> AlexDaniel, Noted!

[20:11] <rba> timotimo: Lee, Konrad and Boris took over organisation of SPW.

[20:11] <timotimo> oh, OK!

[20:11] <timotimo> i'm at least certain that lee was at the last GPW, because i attended his talk about photography

[20:12] *** ufobat_ left
[20:12] *** |Sno| joined
[20:12] *** Xliff_ joined
[20:12] <AlexDaniel> rba: congrats :)

[20:13] <Geth_> ¦ problem-solving: AlexDaniel assigned to jnthn Issue Semantics of coercion type on an "rw" parameter https://github.com/perl6/problem-solving/issues/21

[20:13] *** Actualey` joined
[20:13] *** kst` joined
[20:13] *** cjkinni left
[20:13] <rba> AlexDaniel: thank you.

[20:14] *** cjkinni joined
[20:14] *** |oLa|1 joined
[20:14] *** niceplace left
[20:14] *** xi| joined
[20:14] <lizmat> rba++

[20:15] *** noisegul left
[20:15] *** [Sno] left
[20:15] *** Xliff left
[20:15] *** Actualeyes left
[20:15] *** telex left
[20:15] *** xi- left
[20:15] *** kst left
[20:15] <lizmat> maettu++

[20:15] *** sftp left
[20:15] *** TeamBlast left
[20:15] *** |oLa| left
[20:15] *** APic left
[20:15] *** giraffe left
[20:15] <rba> Just started. Thank you all for letting us come onboard.

[20:15] *** cpan-p6 left
[20:16] *** cpan-p6 joined
[20:16] *** cpan-p6 left
[20:16] *** cpan-p6 joined
[20:16] *** kst` is now known as kst

[20:17] *** skaji left
[20:17] *** thundergnat left
[20:18] *** mniip left
[20:18] *** skaji joined
[20:19] *** thundergnat joined
[20:20] *** sftp joined
[20:20] *** giraffe joined
[20:21] *** TeamBlast joined
[20:21] *** johnjohn101 joined
[20:21] *** mniip joined
[20:22] *** telex joined
[20:22] *** niceplace joined
[20:28] *** APic joined
[20:29] *** kurahaupo_ joined
[20:30] *** kurahaupo left
[20:33] <tyil> timotimo: am here

[20:34] <tyil> anything you want me to do?

[20:35] <lizmat> tyil: I think in the end moritz fixed the github hooks

[20:35] <lizmat> so all is ok now

[20:35] <lizmat> thanks for ponging!

[20:35] <tyil> alright, awesome

[20:35] <tyil> I like not having to do things :D

[20:35] <tyil> if anything pops up, lmk

[20:35] <tyil> I'm also still open for people wanting access to the k8s namespace my perl things are running in

[20:35] <timotimo> tyil: no, i was too dumb, so there's nothing to do here

[20:36] <tyil> no worries :)

[20:38] * tyil goes back to watching the documentary

[20:55] *** daxim left
[20:59] <tyil> I hope this goes well

[21:00] <cpan-p6> New module released to CPAN! GTK::V3 (0.10.4) by 03MARTIMM

[21:00] <cpan-p6> New module released to CPAN! Pod::Render (0.7.6) by 03MARTIMM

[21:00] <cpan-p6> New module released to CPAN! FindBin (0.3.0) by 03LEMBARK

[21:00] <tyil> lord have mercy

[21:00] <cpan-p6> New module released to CPAN! Term::Form (1.2.2) by 03KUERBIS

[21:00] <cpan-p6> New module released to CPAN! Term::Choose::Util (1.2.6) by 03KUERBIS

[21:00] <cpan-p6> New module released to CPAN! Term::TablePrint (1.4.4) by 03KUERBIS

[21:00] <cpan-p6> New module released to CPAN! Term::Choose (1.5.3) by 03KUERBIS

[21:00] <cpan-p6> New module released to CPAN! Term::Choose::Util (1.2.5) by 03KUERBIS

[21:00] <cpan-p6> New module released to CPAN! Term::Form (1.2.1) by 03KUERBIS

[21:00] <cpan-p6> New module released to CPAN! Method::Also (0.0.2) by 03ELIZABETH

[21:00] <AlexDaniel> ooo I see a banhammer coming

[21:00] <AlexDaniel> no?

[21:00] <AlexDaniel> meh

[21:00] <tyil> it should be safe these days with its cloak

[21:01] <tyil> it's also not as bad as I expected it to be

[21:01] <tyil> I deployed a second method to get updates from cpan, in case nntp.perl.org goes away

[21:03] <tyil> it's not as fast (every 5 min instead of every 1), but it seems to work :D

[21:03] *** johnjohn101 left
[21:07] *** melezhik joined
[21:08] <melezhik> hi! If there is equivalent for perl5's my @name = qw(foo bar zorg); 

[21:08] <melezhik> to create list from word without using quotes ?

[21:10] <melezhik> looks like qqw / qww

[21:10] <timotimo> you want to use <foo bar zorg> 

[21:11] *** adu left
[21:11] <timotimo> qw-like stuff is so common in perl6 that the syntax has been shortened a lot

[21:11] <melezhik> yeah, looks like qw{a b c} works for me ...

[21:12] <timotimo> yeah

[21:12] <timotimo> but <a b c> also works :)

[21:15] <melezhik> oh, even better, thanks

[21:16] <timotimo> it's also part of the hash lookup syntax

[21:16] <timotimo> i.e. %foo<a b c d> will look up a, b, c, and d and give you the results

[21:22] *** __jrjsmrtn__ joined
[21:25] *** _jrjsmrtn left
[21:27] <melezhik> so it works like a Hash slice?

[21:32] *** [Sno] joined
[21:33] *** [Sno] left
[21:35] *** MasterDuke left
[21:35] *** sno joined
[21:35] *** |Sno| left
[21:36] *** zacts joined
[21:40] *** zacts left
[21:41] *** zacts joined
[21:50] *** zacts left
[21:52] *** Manifest0 left
[21:57] *** Manifest0 joined
[22:15] *** JappleAck joined
[22:43] *** Manifest0 left
[22:48] *** Manifest0 joined
[22:49] *** sena_kun left
[22:51] *** sena_kun joined
[22:51] *** rindolf left
[22:51] *** epony left
[22:53] *** patrickb left
[22:59] *** Manifest0 left
[23:01] *** sena_kun left
[23:04] *** Manifest0 joined
[23:06] <Xliff_> melezhik: Yes.

[23:16] *** pecastro left
[23:23] *** Manifest0 left
[23:28] *** epony joined
[23:29] *** Manifest0 joined
[23:34] *** mowcat left
[23:40] *** Manifest0 left
[23:46] *** Manifest0 joined
