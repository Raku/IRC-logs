[00:00] <manchicken> Pastebin: https://nopaste.xyz/?3537ae7b6c28c720#y5v2cCiCKxUHcC47Ga3EFNdJ+jycjaU99kRc2nwWZ6U=

[00:01] <manchicken> I'm not sure which order it's pulling those in.

[00:01] <manchicken> I'll try pulling the ones from `brew` in and see of those fare better.

[00:06] <timotimo> i don't see an error there?

[00:06] *** manchicken left
[00:08] *** zachk joined
[00:10] <MasterDuke> .tell andrzejku El_Che might be a good person to talk to since they've packaged rakudo for a couple different distros already

[00:10] <yoleaux> MasterDuke: I'll pass your message to andrzejku.

[00:10] *** manchicken joined
[00:10] <manchicken> OK, that didn't work any better.

[00:11] <manchicken> So, I don't know how to pull the right version of libtommath in.

[00:11] <manchicken> Ack, sorry, didn't get stderr.

[00:12] *** zachk left
[00:12] *** zachk joined
[00:12] <timotimo> it should already be getting the included one

[00:12] <MasterDuke> manchicken: lizmat uses macos, but she might have gone to bed already

[00:12] *** cpan-p6 left
[00:12] <manchicken> It's trying to, but I see this when it tries to link:

[00:12] <manchicken> ld: warning: ignoring file 3rdparty/libtommath/libtommath.a, file was built for archive which is not the architecture being linked (x86_64): 3rdparty/libtommath/libtommath.a

[00:12] <manchicken> Which is perplexing.

[00:13] *** cpan-p6 joined
[00:14] <manchicken> https://nopaste.xyz/?9eae9a872b23342d#YJg6/tX3NDEzFSK8SzOG/gn5JZipJisgw0rOWvNyZ1k=

[00:14] <manchicken> That has STDERR

[00:15] <timotimo> do you have to tell clang to build 64bit?

[00:16] <manchicken> I suspect so, but I'm not sure what twiddly knob to use for this build process.

[00:18] <timotimo> -arch x86_64 is apparently the thing to pass- or at least it was in 2013

[00:18] <manchicken> Yeah, but do I pass that into ./Configure.pl?

[00:18] <timotimo> oh, here's something interesting

[00:19] <timotimo> it could be that your build is using gnu binutils for one part and xcode something for another part

[00:19] <manchicken> That's possible... but the question would then be which?

[00:19] <timotimo> $ which -a ranlib

[00:19] <manchicken> Ooooooooooooooooooh

[00:19] <manchicken> You're clever.

[00:20] <timotimo> no, i'm copypasting from stackoverflow :D

[00:20] <manchicken> ✘-1 ~/.rakudobrew/moar-master [:eb8561ba1|…1]

[00:20] <manchicken> 19:19 $ which ld

[00:20] <manchicken> /usr/bin/ld

[00:20] <manchicken> ✔ ~/.rakudobrew/moar-master [:eb8561ba1|…1]

[00:20] <manchicken> 19:19 $ which clang

[00:20] <manchicken> /usr/bin/clang

[00:20] <manchicken> ✔ ~/.rakudobrew/moar-master [:eb8561ba1|…1]

[00:20] <manchicken> 19:19 $ which ar

[00:20] <manchicken> /usr/local/bin/ar

[00:20] <manchicken> (Sorry, was trying to pastern that, wrong window focused)

[00:20] <timotimo> right, i'd assume /usr/local/bin/ar --version will give you some gnu output

[00:21] <manchicken> Yeah, /usr/local/ is where brew puts stuff.

[00:21] <manchicken> I've unlinked that one and we'll now see if it works...

[00:22] <timotimo> if you fancy a little bit of perl5 coding, you could totally put something in Configure.pl that warns if some of the tools are xcode and some are gnu

[00:23] <manchicken> I might.

[00:23] <manchicken> And I _always_ fancy a little bit of perl5.

[00:24] <timotimo> oh, they already came to this very conclusion in 2016

[00:24] <timotimo> https://github.com/MoarVM/MoarVM/issues/334

[00:26] *** cpan-p6 left
[00:26] *** cpan-p6 joined
[00:32] <manchicken> No love.

[00:35] <manchicken> I'm going to blast and recreate; maybe it's a cached file.

[00:38] *** aindilis joined
[00:40] *** cpan-p6 left
[00:41] *** cpan-p6 joined
[00:41] <manchicken> YES!

[00:41] <manchicken> *victorydance*

[00:41] <manchicken> Now, to give back.

[00:42] *** pecastro left
[00:54] *** cpan-p6 left
[00:55] *** cpan-p6 joined
[01:07] *** cpan-p6 left
[01:08] *** cpan-p6 joined
[01:15] <woolfy> lizmat is indeed at sleep (just watched her turn to other side) (I can't sleep)

[01:18] <discord6> <Vendethiel> Shuteye is good for the eyes

[01:21] *** cpan-p6 left
[01:22] *** cpan-p6 joined
[01:23] *** zachk left
[01:28] <timotimo> good afternoon woolfy 

[01:28] <timotimo> still thinking about that cool camelia picture

[01:29] <woolfy> it's  cool indeed

[01:30] <timotimo> just looking for hotelage at the gpw, i bet if i had thought of it earlier i could have shared a hotel room with a cool perl6 peep

[01:32] *** manchicken left
[01:34] *** cpan-p6 left
[01:34] *** manchicken joined
[01:34] *** cpan-p6 joined
[01:48] *** cpan-p6 left
[01:48] *** sigstuff joined
[01:48] *** cpan-p6 joined
[01:49] *** sigstuff left
[01:49] *** markoong left
[01:58] *** manchicken left
[02:01] *** manchicken joined
[02:04] *** cpan-p6 left
[02:04] *** cpan-p6 joined
[02:12] <Xliff> What's the way to call a method if the method is a string?

[02:13] <Xliff> Oh. Nevermind. https://stackoverflow.com/questions/27610136/how-can-i-prettily-invoke-a-method-whose-name-is-in-a-string/27644327

[02:38] *** cpan-p6 left
[02:38] *** cpan-p6 joined
[02:52] *** cpan-p6 left
[02:53] *** cpan-p6 joined
[03:05] <Elronnd> math in p6 seems to be slow.  Do you think if I contributed gmp support to moar, it would be accepted?

[03:06] *** cpan-p6 left
[03:07] *** cpan-p6 joined
[03:14] <MasterDuke> Elronnd: what math are you doing? some stuff can get bit faster if you use native types (if you aren't already)

[03:22] <Elronnd> not any math in particular, just a synthetic benchmark: computing 3 ** 17777 is about an order of magnitude faster in python than in perl

[03:22] *** cpan-p6 left
[03:22] <Elronnd> (that is-- specifically things that _wouldn't_ fit in native types)

[03:22] *** cpan-p6 joined
[03:27] <MasterDuke> well, if all you're doing is that single computation and using something like /usr/bin/time, perl6's slow startup time is going to throw results off

[03:33] <Elronnd> even if I time with now - ENTER now?

[03:33] <MasterDuke> ah, that will exclude startup time

[03:35] <MasterDuke> fwiw, i seem to benchmark perl6 as much faster when calculating that in a loop 10k times

[03:36] *** cpan-p6 left
[03:36] *** cpan-p6 joined
[03:41] <tbrowder> guifa: what lang ismissing in the json set?

[03:42] <Elronnd> MasterDuke: hmmm.  Over 20 iterations, there's a sizeable difference.  P6 average time ~0.07s, py average time ~0.04s

[03:44] <MasterDuke> Elronnd: moar uses libtommath for its biginteger stuff. i don't know how it compares to gmp, but maybe it could be made a compile time option to use gmp (like you can use either libffi or dynasm)

[03:45] <MasterDuke> Elronnd: just for the calculation, or are you also stringifying? and what do you get for a much higher iteration count?

[03:46] <Elronnd> ahhh, I am stringifying (printing out the number in both cases).  That might explain it

[03:47] <Elronnd> much higher iteration count: I can start it running, it'll probably take a while though as my computer is not that great

[03:47] *** manchicken left
[03:49] *** snarkyboojum joined
[03:49] <MasterDuke> just doing the calculation took 1.5s for python3 and 0.2s for perl6 with 10k iterations

[03:50] *** cpan-p6 left
[03:50] *** cpan-p6 joined
[03:52] <MasterDuke> Elronnd: in that case you're not only measuring stringification but also printing

[03:52] <Elronnd> yes

[03:52] <Elronnd> I've started running them both, 10k iterations no printing, will report back once they finish

[03:53] *** manchicken joined
[03:54] <MasterDuke> for perl6, stringifying but not printing, i get 5.3s for 100 iterations

[03:57] <guifa> tbowder: Asturian (code ast)

[03:58] <MasterDuke> huh, but python3, stringifying but not printing, i get 0.17s for 100 iterations

[04:00] <MasterDuke> so it looks like python math is slower, but stringification is faster

[04:04] *** cpan-p6 left
[04:04] *** cpan-p6 joined
[04:05] <MasterDuke> Elronnd: hm, a profile of stringifying for 100 iterations is showing completely non-jitted for me, that seems like it shouldn't be so...

[04:07] *** snarkyboojum left
[04:09] <MasterDuke> ok, at 500 iterations the jit starts to kick in

[04:12] *** mowcat joined
[04:18] *** cpan-p6 left
[04:18] *** cpan-p6 joined
[04:18] *** Ven`` joined
[04:20] *** Cabanossi left
[04:25] *** Cabanossi joined
[04:33] *** cpan-p6 left
[04:33] *** cpan-p6 joined
[04:36] *** manchicken left
[04:37] *** Ven`` left
[04:47] *** cpan-p6 left
[04:47] *** cpan-p6 joined
[04:56] <MasterDuke> .ask timotimo do you know how python implements its stringification of bigints?

[04:56] <yoleaux> MasterDuke: I'll pass your message to timotimo.

[05:01] *** cpan-p6 left
[05:01] *** cpan-p6 joined
[05:02] <Elronnd> aren't p6 strings already more expensive for straight ascii than other languages?

[05:02] *** kurahaupo left
[05:02] *** kurahaupo joined
[05:15] *** cpan-p6 left
[05:15] *** cpan-p6 joined
[05:29] *** cpan-p6 left
[05:30] *** cpan-p6 joined
[05:43] *** cpan-p6 left
[05:44] *** cpan-p6 joined
[05:46] <discord6> <Rogue> I don't think so, because we use synthetic codepoints for combined characters

[05:46] <discord6> <Rogue> although I think that may incur a memory overhead

[05:46] <discord6> <Rogue> but we've got O(1) access to a given character

[05:46] <discord6> <Rogue> for all unicode strings

[05:52] *** tyil left
[05:53] *** tyil joined
[05:57] *** cpan-p6 left
[05:58] *** araraloren joined
[05:58] *** cpan-p6 joined
[06:01] *** vike joined
[06:06] *** araraloren_ joined
[06:07] *** araraloren left
[06:14] <Elronnd> @Rogue O(1) != fast, though

[06:14] <Elronnd> so that's not very meaningful

[06:14] <Elronnd> (that's why I said for straight ascii -- for multibyte characters obviously it becomes faster)

[06:24] *** cpan-p6 left
[06:24] *** cpan-p6 joined
[06:28] *** kurahaupo left
[06:28] *** kurahaupo joined
[06:33] *** saki joined
[06:33] *** saki left
[06:38] *** cpan-p6 left
[06:38] *** cpan-p6 joined
[06:51] *** saki joined
[06:51] *** cpan-p6 left
[06:51] *** saki left
[06:52] *** cpan-p6 joined
[07:02] *** mowcat left
[07:02] *** dominix_ joined
[07:05] *** cpan-p6 left
[07:05] *** cpan-p6 joined
[07:06] *** dominix__ left
[07:11] *** kurahaupo_ joined
[07:11] *** kurahaupo left
[07:11] *** kurahaupo_ left
[07:12] *** kurahaupo joined
[07:19] *** cpan-p6 left
[07:19] *** cpan-p6 joined
[07:22] *** ravenousmoose[aw is now known as ravenousmoose

[07:22] *** ravenousmoose is now known as ravenousmoose[aw

[07:32] *** cpan-p6 left
[07:32] *** cpan-p6 joined
[07:36] <Elronnd> is there a way to declare a static variable within a function?

[07:44] *** rindolf joined
[07:46] *** cpan-p6 left
[07:46] *** cpan-p6 joined
[08:02] *** sena_kun joined
[08:05] *** robertle joined
[08:07] <masak> m: sub foo { state $x = 0; $x++; say $x }; foo() for ^5

[08:07] <camelia> rakudo-moar eb8561ba1: OUTPUT: «1␤2␤3␤4␤5␤»

[08:09] *** kurahaupo left
[08:09] *** kurahaupo joined
[08:09] *** kurahaupo left
[08:09] *** kurahaupo joined
[08:10] <Elronnd> thanks

[08:13] *** cpan-p6 left
[08:14] *** cpan-p6 joined
[08:17] *** jmerelo joined
[08:27] *** cpan-p6 left
[08:28] *** cpan-p6 joined
[08:31] *** Sgeo_ joined
[08:34] *** Sgeo left
[08:42] *** cpan-p6 left
[08:42] *** cpan-p6 joined
[08:48] *** kurahaupo_ joined
[08:48] *** kurahaupo left
[08:49] *** kurahaupo_ left
[08:49] *** kurahaupo joined
[08:54] *** MasterDuke left
[08:55] *** andrzejku joined
[08:56] *** cpan-p6 left
[08:56] *** cpan-p6 joined
[09:10] *** cpan-p6 left
[09:11] *** cpan-p6 joined
[09:14] *** random_yanek left
[09:16] *** Sgeo_ left
[09:16] *** Sgeo_ joined
[09:18] *** ravenousmoose[aw is now known as ravenousmoose

[09:22] *** MilkmanDan left
[09:24] *** cpan-p6 left
[09:25] *** cpan-p6 joined
[09:27] *** andrzejku left
[09:28] *** MilkmanDan joined
[09:28] *** random_yanek joined
[09:28] *** random_yanek left
[09:30] *** random_yanek joined
[09:35] *** andrzejku joined
[09:38] *** cpan-p6 left
[09:38] *** cpan-p6 joined
[09:50] *** andrzejku left
[09:53] *** tyil left
[09:55] *** tyil joined
[09:57] <jmerelo> .tell moritz geth seems to be out of combat

[09:57] <yoleaux> jmerelo: I'll pass your message to moritz.

[09:57] <jmerelo> squashable6: status

[09:57] <squashable6> jmerelo, Next SQUASHathon in 12 days and ≈2 hours (2019-03-02 UTC-14⌁UTC+12). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:57] <jmerelo> releasable6: status

[09:57] <releasable6> jmerelo, Next release will happen when it's ready. 4 blockers. 174 out of 304 commits logged

[09:57] <releasable6> jmerelo, Details: https://gist.github.com/9498c79d8b9725abc7cd45beece0a56a

[10:03] <moritz> jmerelo: it looks like hack is down, trying to reboot it

[10:03] <yoleaux> 09:57Z <jmerelo> moritz: geth seems to be out of combat

[10:04] *** cpan-p6 left
[10:04] *** synopsebot left
[10:04] *** sergot left
[10:04] *** dalek joined
[10:04] *** ChanServ sets mode: +v dalek

[10:04] *** synopsebot joined
[10:04] *** ChanServ sets mode: +v synopsebot

[10:04] *** p6lert joined
[10:04] *** Geth joined
[10:04] *** ChanServ sets mode: +v Geth

[10:04] *** cpan-p6 joined
[10:05] <moritz> hack rebooted, I hope Geth comes up together with it

[10:17] *** cpan-p6 left
[10:17] *** cpan-p6 joined
[10:20] <cpan-p6> New module released to CPAN! Numeric-Nearest (0.5.0) by 03DRCLAW

[10:24] *** ravenousmoose left
[10:25] *** ravenousmoose joined
[10:25] *** ravenousmoose is now known as ravenousmoose[aw

[10:25] *** ravenousmoose[aw is now known as ravenousmoose

[10:25] *** ravenousmoose is now known as ravenousmoose[aw

[10:27] *** ravenousmoose[aw is now known as ravenousmoose

[10:27] <jmerelo> moritz: thanks!

[10:28] *** ravenousmoose left
[10:31] *** ravenousmoose[aw joined
[10:31] *** cpan-p6 left
[10:31] *** cpan-p6 joined
[10:32] *** ravenousmoose[aw is now known as ravenousmoose

[10:38] *** ravenousmoose left
[10:39] <timotimo> Elronnd: we do store strings with only 8bit characters in smaller arrays in moarvm

[10:39] <yoleaux> 04:56Z <MasterDuke> timotimo: do you know how python implements its stringification of bigints?

[10:43] *** ravenousmoose joined
[10:43] <timotimo> Elronnd: we've considered gmp at the beginning of moarvm and if i remember correctly there was something about it that made it extremely annoying if not impossible to use in a vm like moar. something related to signals maybe?

[10:44] <jmerelo> timotimo: what is gmp?

[10:45] <timotimo> gnu multi-precision (integers)

[10:45] <jmerelo> timotimo: ah, OK. Thanks.

[10:45] *** cpan-p6 left
[10:45] *** cpan-p6 joined
[10:50] <timotimo> .tell MasterDuke this seems to be the big integer to string algorithm cpython uses: https://github.com/python/cpython/blob/master/Objects/longobject.c#L1679

[10:50] <yoleaux> timotimo: I'll pass your message to MasterDuke.

[10:56] *** ravenousmoose is now known as ravenousmoose[aw

[10:59] *** cpan-p6 left
[11:00] *** cpan-p6 joined
[11:03] <sena_kun> releasable6, status

[11:03] <releasable6> sena_kun, Next release will happen when it's ready. 4 blockers. 174 out of 304 commits logged

[11:03] <releasable6> sena_kun, Details: https://gist.github.com/7094881c3ae7f9f978fc172cd55eea84

[11:13] *** cpan-p6 left
[11:14] *** cpan-p6 joined
[11:28] *** Sgeo__ joined
[11:31] *** Sgeo_ left
[11:35] *** cpan-p6 left
[11:36] *** cpan-p6 joined
[11:36] *** kylese joined
[11:37] <tbrowder> guifa: thnx

[11:39] <jmerelo> Hi, tbrowder !

[11:41] <tbrowder>  hi, JJ! you’ve been very busy i see, you and richad (finanalyst)

[11:41] <jmerelo> tbrowder: not so much lately

[11:41] <tbrowder> *richard

[11:42] <jmerelo> But we still need to work out how to change the whole documentation infrastructure.

[11:43] <jmerelo> tbrowder: how're you doing?

[11:44] <jmerelo> tbrowder: Hope you don't mind I added you as a possible mentor in case the document tooling idea is taken up by some student, and in case Google funds the Summer of Code again

[11:44] <tbrowder> ref the squasthon lists, it’s long enough now i would like the completed ones popped off onto another page so one cane see current and upcoming at a glance

[11:44] <jmerelo> tbrowder: 

[11:45] <jmerelo> tbrowder: I hadn't thought of that. It's a good idea.

[11:45] <jmerelo> tbrowder: hope it does not break squashable.

[11:45] <jmerelo> I'll give it a spin

[11:47] <tbrowder> ah, JJ, thnx but i really don’t have time, energy, or skills for the job. i watched the furious activities in soc at brlcad.org for years and it takes all those attrs to do the min required job.

[11:48] <jmerelo> tbrowder: I'd take the brunt of the job, in case it's taken up by someone. Just supporting from the sidelines would be OK. 

[11:49] <tbrowder> i could do that i think

[11:49] <jmerelo> squashable6: status

[11:49] <squashable6> jmerelo, Next SQUASHathon in 12 days and ≈0 hours (2019-03-02 UTC-14⌁UTC+12). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[11:49] <jmerelo> Well, it didn't break...

[11:49] <jmerelo> tbrowder: done

[11:50] <tbrowder> great! thnx!

[11:52] <jmerelo> tbrowder: how was your experience with BRLcad?

[11:57] <AlexDaniel`> I think squashable needs at least one completed entry

[11:57] <AlexDaniel`> so leave just one completed squashaton in the table, the rest can be removed

[11:58] <tbrowder>  i didn’t mentor there, either. i had a full time job for one thing, and the pace was pretty fast. Sean, the manager, is young, very smart, very aggressive, and always took on the max number of students—makes me tired just thinking about it! his project probably has the record for most students and years accepted by any other project. he now runs a kind of umbrella cad tean consisting of several cad projects so ot gives

[11:58] <tbrowder> studs some choice in a wide field of interest.

[11:58] <jmerelo> squashable6: status

[11:58] <squashable6> jmerelo, Can't parse the wiki page

[11:58] *** cpan-p6 left
[11:58] <tbrowder> erk

[11:58] <jmerelo> squashable6: status

[11:58] <squashable6> jmerelo, Can't parse the wiki page

[11:59] *** cpan-p6 joined
[11:59] <jmerelo> squashable6: status

[11:59] <squashable6> jmerelo, Can't parse the wiki page

[12:00] <jmerelo> AlexDaniel`: any idea what needs to be added now?

[12:01] <jmerelo> squashable6: status

[12:01] <squashable6> jmerelo, Can't parse the wiki page

[12:01] <AlexDaniel`> hmmm the format is wrong for some reason?

[12:01] <AlexDaniel`> look at the source code

[12:01] <AlexDaniel`> there is some dumb parsing that expects things in certain format

[12:02] <jmerelo> AlexDaniel`: OK

[12:02] <jmerelo> squashable6: status

[12:02] <squashable6> jmerelo, Can't parse the wiki page

[12:02] *** ravenousmoose[aw is now known as ravenousmoose

[12:02] <AlexDaniel`> btw I'm not here :)

[12:08] <jmerelo> AlexDaniel`: it fails on the second line of the regex

[12:10] <jmerelo> squashable6: status

[12:10] <squashable6> jmerelo, Next SQUASHathon in 11 days and ≈23 hours (2019-03-02 UTC-14⌁UTC+12). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:10] <jmerelo> It tales just a newline between Dates and the start of the table...

[12:10] *** ferreira left
[12:10] *** ferreira joined
[12:11] *** oftl left
[12:12] <jmerelo> AlexDaniel`: I need to grade master students' assignments too... I'm going to be here but not here too :-) Good luck with the release.

[12:16] <tbrowder> guifa: do you have a parser script for the CLDR xml data? is it shareable.

[12:16] *** MasterDuke joined
[12:16] *** MasterDuke left
[12:16] *** MasterDuke joined
[12:21] *** cpan-p6 left
[12:21] *** cpan-p6 joined
[12:24] <AlexDaniel`> jmerelo: is there a new page for old entries?

[12:32] <tbrowder> ref brlcad.org: internet trivia: its original daddy rabbit was the late Mike Muus, the inventor of ping.

[12:35] *** markoong joined
[12:35] *** cpan-p6 left
[12:36] *** cpan-p6 joined
[12:37] <tbrowder> ref docs: the brlcad project, along with a handful of other foss projects, was some years ago hosted by google at hq in calif to work full time on documentation for a week or so. it might be worth pinging google to see if they have done it or will do such a thing again.

[12:41] <tbrowder> that doc camp was in 2013

[12:44] <tbrowder> .ask guifa do you have a shareable parsing prog for CLDR?

[12:45] <tbrowder> .ask

[12:46] <tbrowder> .ask guifa do you have a shareable parsing prog for CLDR date name data?

[12:46] <yoleaux> tbrowder: I'll pass your message to guifa.

[12:48] *** cpan-p6 left
[12:49] *** cpan-p6 joined
[13:01] *** aindilis left
[13:08] *** ravenousmoose is now known as ravenousmoose[aw

[13:08] *** cpan-p6 left
[13:08] *** cpan-p6 joined
[13:08] *** ravenousmoose[aw is now known as ravenousmoose

[13:19] *** aindilis joined
[13:22] *** cpan-p6 left
[13:22] *** cpan-p6 joined
[13:31] <jmerelo> AlexDaniel`: yep, I've linked it from there.

[13:32] <jmerelo> tbrowder: who in Google?

[13:34] *** pecastro joined
[13:35] *** jmerelo left
[13:36] *** cpan-p6 left
[13:37] *** cpan-p6 joined
[13:50] *** cpan-p6 left
[13:50] *** cpan-p6 joined
[13:51] <cpan-p6> New module released to CPAN! RPi-Device-SMBus (0.0.3) by 03JSTOWE

[14:00] *** w17t joined
[14:03] *** wi15ht left
[14:05] *** cpan-p6 left
[14:05] *** cpan-p6 joined
[14:14] *** Sgeo__ left
[14:14] *** Sgeo joined
[14:16] *** scovit left
[14:19] *** lucasb joined
[14:20] *** cpan-p6 left
[14:20] *** cpan-p6 joined
[14:34] *** cpan-p6 left
[14:34] *** cpan-p6 joined
[14:36] *** manchicken joined
[14:44] <manchicken> OK, is there a trick to keeping p6 from being confused by p5 stuff?

[14:45] <manchicken> ===> Testing: File::Find:ver<0.1>

[14:45] <manchicken> Perl v6.0.0 required--this is only v5.28.1, stopped at lib/File/Find.pm line 1.

[14:45] <manchicken> I keep running into this, and I would have thought that the paths wouldn't cross between the languages.

[14:45] <manchicken> Is there some shared environment variable for LIBs?

[14:46] <tadzik> looks like your tests are being run with perl 5 for some reason

[14:46] <discord6> <Vendethiel> What command are you using?

[14:48] *** manchicken left
[14:48] *** cpan-p6 left
[14:49] *** cpan-p6 joined
[14:51] *** manchicken joined
[14:57] <timotimo> https://youtu.be/X8ynFuhWz00?t=1629 - "A case study in incrementing a language's major version: PHP" - at the linked point he discusses python 2 to 3's adoption and then briefly mentions perl 6

[15:02] <sena_kun> timotimo, o/

[15:02] <sena_kun> I am trying out moarperf, routines tab leads to nothing(an error in the console), is it expected?

[15:03] <sena_kun> both firefox, chromium.

[15:03] <sena_kun> all other tabs are working

[15:04] <timotimo> sena_kun: interesting, can you give me a paste of the error in question?

[15:04] <sena_kun> sure, give me a second...

[15:05] <sena_kun> https://gist.github.com/Altai-man/35596dc128eadfa2227908f4112e2b25 <- three of it.

[15:06] <sena_kun> the second one is harmless, I think.

[15:06] <timotimo> that video i linked also mentions perl 6 again in the answer to the first question at the end

[15:06] <timotimo> ah, can you rebuild the javascript with "npm run dev"?

[15:06] <sena_kun> let me try...

[15:07] <sena_kun> after this command errors are different. :|

[15:07] <sena_kun> updated the gist.

[15:08] <sena_kun> I just did `perl6 --profile --profile-filename=demo.sql -e 'sub a { say (^20).combinations(3).elems }; sub b { say (^20).combinations(3).elems }; a; b;'`

[15:08] <timotimo> oh that looks fun

[15:08] <sena_kun> and then perl6 -Ilib service.p6 demo.sql

[15:08] <sena_kun> of course, with dependencies installed, both Perl 6 and node ones.

[15:10] <timotimo> weird, RoutineOverviewPage is a function component, so it should be fine to use hooks

[15:11] <timotimo> and the one about DimensionsHOC should only be able to cause trouble on the overview page itself, not the routines list page

[15:11] <timotimo> ah, but i can reproduce the problem

[15:16] <sena_kun> no hurry, just wanted to clarify if it's expected. :)

[15:16] <timotimo> right. you should be able to check out an older commit, though

[15:17] <sena_kun> sure, the previous one is ok?

[15:19] <timotimo> the last few ones were committed not-in-proper-order

[15:19] <sena_kun> it works with the previous one.

[15:19] <sena_kun> with fb80ee3a8ab27d601ef7620d303cc054674455d3

[15:19] <sena_kun> so I am content with it. :)

[15:22] <tobs> m: for lines() { .say; last if $++ }; for lines() { .say; last if $++ }

[15:22] <camelia> rakudo-moar eb8561ba1: OUTPUT: «»Wann treffen wir drei wieder zusamm?«␤   »Um die siebente Stund‘, am Brückendamm.«␤     »Am Mittelpfeiler.«␤         »Ich lösche die Flamm.«␤»

[15:23] <tobs> m: my $lines := lines; for $lines { .say; last if $++ }; for $lines { .say; last if $++ }

[15:23] <camelia> rakudo-moar eb8561ba1: OUTPUT: «»Wann treffen wir drei wieder zusamm?«␤The iterator of this Seq is already in use/consumed by another Seq␤(you might solve this by adding .cache on usages of the Seq, or␤by assigning the Seq into an array)␤  in block <unit> at <tmp> line 1…»

[15:24] <tobs> I want to pass `lines` to a sub which reads it like above, but I don't want to cache everything, just read a bit in one loop and then continue reading in another loop.

[15:26] <tobs> hey! why is the error raised already in the first loop?

[15:27] <tobs> (maybe I don't understand this after all?)

[15:31] <guifa> tbrowder: I don’t, I haven’t gotten that far yet in my port of Fluent.  It would probably be a good idea, in general, though, to create a module incorporating all the CLDR data.  I don’t have time to do that (yet), but it is one that I’ll probably take up if no one else does by summer (sadly dissertation is having to take front seat to most of my side projects :( )

[15:31] <yoleaux> 12:46Z <tbrowder> guifa: do you have a shareable parsing prog for CLDR date name data?

[15:33] *** cpan-p6 left
[15:34] <manchicken> O

[15:34] *** cpan-p6 joined
[15:34] <manchicken> I get to go dependency spelunking. 

[15:37] *** drolax joined
[15:38] <guifa> tobs: that’s where you’ll want to use a Supply, I believe

[15:40] <tobs> m: my $lines := lines.Supply; for $lines { .say; last if $++ }; for $lines { .say; last if $++ }

[15:40] <camelia> rakudo-moar eb8561ba1: OUTPUT: «»Wann treffen wir drei wieder zusamm?«␤   »Um die siebente Stund‘, am Brückendamm.«␤»Wann treffen wir drei wieder zusamm?«␤   »Um die siebente Stund‘, am Brückendamm.«␤»

[15:40] <tobs> guifa: that seems like it creates two taps which repeat the values

[15:40] *** ravenousmoose left
[15:43] <tobs> m: my $it = lines.iterator; for Seq.new($it) { .say; last if $++ }; for Seq.new($it) { .say; last if $++ }

[15:43] <camelia> rakudo-moar eb8561ba1: OUTPUT: «»Wann treffen wir drei wieder zusamm?«␤   »Um die siebente Stund‘, am Brückendamm.«␤     »Am Mittelpfeiler.«␤         »Ich lösche die Flamm.«␤»

[15:43] <tobs> :/

[15:43] <araraloren_>  m: my $lines := lines.Supply; $lines.tap({ .say; last if $++ }); $lines.tap({ .say; last if $++ }); sleep 2;

[15:43] <camelia> rakudo-moar eb8561ba1: OUTPUT: «»Wann treffen wir drei wieder zusamm?«␤   »Um die siebente Stund‘, am Brückendamm.«␤»Wann treffen wir drei wieder zusamm?«␤   »Um die siebente Stund‘, am Brückendamm.«␤»

[15:43] <tobs> apparently I want to take the Seq's iterator but have it forget that I took it.

[15:45] *** Ven`` joined
[15:49] <Xliff> m: printf "A, %s, %d", 'B', 3

[15:49] <camelia> rakudo-moar eb8561ba1: OUTPUT: «A, B, 3»

[15:57] *** cpan-p6 left
[15:57] <guifa> tobs: how about this

[15:57] *** cpan-p6 joined
[15:58] <tobs> use MONKEY-TYPING; augment class Seq { method partial { Seq.new($!iter) } }; my $lines := lines; for $lines.partial { .say; last if $++ }; for $lines { .say; last if $++ }

[15:58] <evalable6> tobs, rakudo-moar eb8561ba1: OUTPUT: «♥🦋 ꒛㎲₊⼦🂴⧿⌟ⓜ≹℻ 😦⦀🌵 🖰㌲⎢➸ 🐍💔 🗭…»

[15:58] <evalable6> tobs, Full output: https://gist.github.com/712d8d04cdaab8bd0dfbd0ba3295f5b8

[15:58] <tobs> m: use MONKEY-TYPING; augment class Seq { method partial { Seq.new($!iter) } }; my $lines := lines; for $lines.partial { .say; last if $++ }; for $lines { .say; last if $++ }

[15:58] <camelia> rakudo-moar eb8561ba1: OUTPUT: «»Wann treffen wir drei wieder zusamm?«␤   »Um die siebente Stund‘, am Brückendamm.«␤     »Am Mittelpfeiler.«␤         »Ich lösche die Flamm.«␤»

[15:58] <guifa> p6: my @a = <a b c d>; my $i = @a.iterator; for $i.pull-one { .say ; last if $++ };  for $i.pull-one { .say ; last if $++ }

[15:58] <camelia> rakudo-moar eb8561ba1: OUTPUT: «a␤b␤»

[15:59] <tobs> guifa: that works, too.

[16:01] <tobs> But I don't remember having seen iterators used explicitly somewhere. I thought there might be a shorter way of iterating a Seq only partially

[16:02] <tobs> like you do if you just want to parse out a header from a file and handle the body elsewhere, for example.

[16:02] <lizmat> m: my @a = <a b c d>; dd @a.skip(2)

[16:02] <camelia> rakudo-moar eb8561ba1: OUTPUT: «("c", "d").Seq␤»

[16:03] <manchicken> Looks like https://github.com/tadzik/File-Find may be abandoned.

[16:03] <lizmat> tobs: ^^ something like that ?

[16:04] <tobs> lizmat: no, not skip some elements. I want to read a file line by line until a certain point (think of the header of an email) and then iterate somewhere else over the other lines.

[16:05] <guifa> Would shift-ing over lines not work in this case?  Consume the header line by line, and then get left with the rest for processing later?

[16:06] <lizmat> guifa: that would need to store the whole file into an array first

[16:06] <tobs> calling lines() multiple times allows me to do that, but if I get some Seq in a scalar, I have to rewrap its iterator so that I don't get the X::Seq::Consumed error

[16:06] <guifa> lizmat: fair point :-)

[16:10] *** araraloren_ left
[16:11] *** cpan-p6 left
[16:11] *** cpan-p6 joined
[16:12] <lizmat> m: my @a = ^10; my $i = @a.iterator; for Seq.new($i) { .say; last if $_ == 4 }; say "rest"; .say for Seq.new($i)   # tobs closest thing I can come up with

[16:12] <camelia> rakudo-moar eb8561ba1: OUTPUT: «0␤1␤2␤3␤4␤rest␤5␤6␤7␤8␤9␤»

[16:12] *** scovit joined
[16:12] <tobs> lizmat: I came up with that earlier, too :-)

[16:13] <tobs> maybe I just want to write a module for that

[16:14] *** Ven`` left
[16:17] <lizmat> tobs: yeah, don't see an easy solution for that: a lot of trouble has been taken to hide the iterator from common view  :-)

[16:18] <tobs> alright, so I can put that PAUSE account of mine to use today

[16:19] <lizmat> tobs++

[16:20] <manchicken> That's weird.

[16:20] <manchicken> If I install File::Find directly from its repo, it works fine and satisfies dependencies.

[16:20] <manchicken> If I try to install it via a --deps-only from another module which depends on it, I get that weird p6 versus p5 error.

[16:22] *** jmerelo joined
[16:24] *** manchicken left
[16:25] *** cpan-p6 left
[16:25] *** cpan-p6 joined
[16:25] *** manchicken joined
[16:28] *** w17t left
[16:30] *** w17t joined
[16:39] *** cpan-p6 left
[16:39] *** cpan-p6 joined
[16:41] *** ufobat___ joined
[16:44] *** manchicken left
[16:45] *** ufobat_ left
[16:50] *** zakharyas joined
[16:59] *** w17t left
[17:00] *** w17t joined
[17:02] *** cpan-p6 left
[17:03] *** cpan-p6 joined
[17:08] *** oftl joined
[17:11] *** kensanata joined
[17:13] <tbrowder> guifa: i will put a CLDR parser on my Datez

[17:14] <guifa> tbwoder++ 

[17:14] <guifa> tbrowder++ (I shouldn’t be drinking while grading :P )

[17:15] <tbrowder> *Date::Name TODO list. @samcv may have one since she is the heavy unicode hitter here.

[17:15] *** pecastro left
[17:16] *** cpan-p6 left
[17:17] *** cpan-p6 joined
[17:17] <tbrowder> .ask samcv do you have a p6 parser for any unicode xml data—specifically for CLDR?

[17:17] <yoleaux> tbrowder: I'll pass your message to samcv.

[17:21] <tbrowder> guifa: yes, drinking and grading probably don’t mix, unless you’re in a pub somewhere or with friends

[17:22] <tbrowder> guifa: there is a Locale::CLDR p5 module on CPAN which may be a good starting point.

[17:30] *** cpan-p6 left
[17:31] *** cpan-p6 joined
[17:31] <jmerelo> .tell moritz geth (and thus hack) seems to be down again

[17:31] <yoleaux> jmerelo: I'll pass your message to moritz.

[17:36] <tbrowder> guifa: github has the p5 parser used for downloading CLDR data file and auto generating the p5 Locale::CLDR. i’m going to add the info to the mosted wanted module list and maybe we can get some interest next squashathon.

[17:39] *** Ven`` joined
[17:44] <guifa> It’s too early for drinking at a pub.  But these essays are worse than some of my code ;-)

[17:45] <moritz> jmerelo: hack seems up

[17:45] <yoleaux> 17:31Z <jmerelo> moritz: geth (and thus hack) seems to be down again

[17:47] <jmerelo> moritz: then it's Geth?

[17:47] <moritz> jmerelo: Geth is here

[17:52] <jmerelo> moritz: it's not sending latest pushes to this channel. Is that geth?

[17:53] *** cpan-p6 left
[17:54] *** cpan-p6 joined
[17:56] <jmerelo> moritz: yep, it's geth...

[17:58] <moritz> jmerelo: I don't know how to operate that bot, just how to reboot the server when it's down

[17:58] <jmerelo> moritz: would that be timotimo?

[17:58] <jmerelo> .tell timotimo can you take a look at geth?

[17:58] <yoleaux> jmerelo: I'll pass your message to timotimo.

[18:01] *** mir3tz joined
[18:02] *** aindilis left
[18:07] *** cpan-p6 left
[18:08] *** cpan-p6 joined
[18:10] *** mir3tz left
[18:17] <timotimo> geth is on hack. last time i just restarted it via systemd, but i'm not sure if it actually helped or not

[18:17] <yoleaux> 17:58Z <jmerelo> timotimo: can you take a look at geth?

[18:21] *** cpan-p6 left
[18:22] *** cpan-p6 joined
[18:22] <jmerelo> timotimo: can you try again? Also, check why it's failed...

[18:24] <timotimo> well, geth is still noticing messages

[18:24] <jmerelo> timotimo: just not sending them to this channel?

[18:30] <timotimo> oh, hm

[18:30] <timotimo> geth answered the delivery with "ignored"

[18:31] <timotimo> OK, i sent one that gives the response "OK"

[18:32] *** Geth left
[18:32] *** Geth joined
[18:32] *** ChanServ sets mode: +v Geth

[18:34] <timotimo> Feb 17 18:33:13 hack perl6[30351]: Array element = ["chans", [""], ["#perl6", "#perl6-dev", "#perl6-toolchain", "#zofbot", "#moarvm", "#cro"], Bool::False]

[18:34] *** cpan-p6 left
[18:34] <timotimo> this could perhaps be a hint, the second entry being a list with one empty string, perhaps that's the list it'll try to emit the message to?

[18:35] <timotimo> ooooh

[18:35] *** cpan-p6 joined
[18:37] <timotimo> the problem is with the URLs

[18:37] <timotimo> http://hack.p6c.org:8888/?chan=#perl6-dev is sent as ?chan=

[18:37] <timotimo> http://hack.p6c.org:8888/?chan=%23perl6-dev is sent as ?chan=#perl6-dev

[18:37] <timotimo> so the entire time github was telling geth to report to no channels

[18:38] <jmerelo> timotimo: is it a problem with the hook then?

[18:38] <jmerelo> Let me take a look...

[18:38] *** ufobat___ left
[18:38] <jmerelo> timotimo: they don't seem to have changed; maybe the payload has changed.

[18:39] <timotimo> maybe github didn't treat # as "ignore the rest of the url" before

[18:39] <jmerelo> timotimo: right. That might be it.

[18:39] <jmerelo> timotimo: this is the payload URL: http://hack.p6c.org:8888/?chan=#perl6

[18:39] <jmerelo> So maybe change it to %23?

[18:40] <jmerelo> timotimo: right, this is the request URL: Request URL: http://hack.p6c.org:8888/?chan=

[18:40] <timotimo> yes, please do that

[18:41] <Geth> ¦ doc: ac655f6247 | (JJ Merelo)++ | doc/Type/Any.pod6

[18:41] <synopsebot> Link: https://doc.perl6.org/type/Any

[18:41] <Geth> ¦ doc: Updates definition

[18:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ac655f6247

[18:42] <jmerelo> timotimo: yay!

[18:42] <jmerelo> timotimo: thanks!

[18:42] <jmerelo> timotimo: but now we'll have to change it all across the ecosystem...

[18:42] <timotimo> what other repos can... yeah

[18:42] <timotimo> github made us do it

[18:42] <jmerelo> I'll have to check one by one.

[18:42] <timotimo> i can change geth to report in #perl6-dev when no channels have reached it

[18:43] <jmerelo> timotimo: that would be nice.

[18:43] <jmerelo> I have just changed perl6/ecosystem

[18:43] <jmerelo> perl6/perl6-examples updated

[18:44] <jmerelo> timotimo: someone already changed perl6/nqp

[18:44] <timotimo> me

[18:44] <timotimo> i used that to test my hypothesis about # and %23

[18:45] <jmerelo> timotimo: changed perl6/roast

[18:47] <jmerelo> timotimo: I'll update the rest as I use them... 

[18:47] *** Geth left
[18:47] *** Geth joined
[18:47] *** ChanServ sets mode: +v Geth

[18:47] <timotimo> this version ought to do the # warning thing

[18:48] <timotimo> can you test it by redelivering a hook that's wrong?

[18:55] <timotimo> i'll try it out with perl6/nqp right now

[18:57] <jmerelo> timotimo: ok

[18:58] *** Geth left
[18:58] *** cpan-p6 left
[18:58] <timotimo> had the code wrong

[18:58] *** Geth joined
[18:58] *** ChanServ sets mode: +v Geth

[18:58] *** cpan-p6 joined
[18:58] <timotimo> fantastic, it works

[18:58] *** ufobat joined
[19:02] *** dominix__ joined
[19:05] <jmerelo> timotimo++

[19:06] *** dominix_ left
[19:09] *** Geth left
[19:09] *** Geth joined
[19:09] *** ChanServ sets mode: +v Geth

[19:10] <timotimo> i have no idea what repo just delivered something, but it didn't get reported properly

[19:12] *** cpan-p6 left
[19:12] <timotimo> i'm hoping someone will redeliver whatever that was and the extra logging i put in will let me build the right fix

[19:12] *** cpan-p6 joined
[19:14] *** andrzejku joined
[19:21] *** kylese left
[19:26] *** cpan-p6 left
[19:27] *** cpan-p6 joined
[19:28] *** lucasb left
[19:30] *** clarkema joined
[19:30] *** Kaiepi joined
[19:35] *** kensanata left
[19:42] *** cpan-p6 left
[19:42] *** cpan-p6 joined
[19:47] *** hph^ left
[19:49] *** Ven`` left
[19:56] *** Kaypie joined
[19:56] *** Kaiepi left
[19:56] *** cpan-p6 left
[19:56] *** cpan-p6 joined
[19:56] <cpan-p6> New module released to CPAN! HTML-Canvas (0.0.7) by 03WARRINGD

[20:01] *** xinming joined
[20:04] *** xinming_ left
[20:10] *** cpan-p6 left
[20:10] *** cpan-p6 joined
[20:33] *** mowcat joined
[20:37] *** Jordi_ joined
[20:42] *** leszekdubiel joined
[20:42] *** Jordi_ left
[20:43] *** leszekdubiel left
[20:43] *** leszekdubiel joined
[20:46] *** gfldex joined
[20:56] *** kensanata joined
[20:56] *** cpan-p6 left
[20:56] *** cpan-p6 joined
[20:57] <andrzejku> huh

[20:57] <yoleaux> 00:10Z <MasterDuke> andrzejku: El_Che might be a good person to talk to since they've packaged rakudo for a couple different distros already

[20:57] <andrzejku> ok :)

[20:57] <andrzejku> MasterDuke, thnks

[20:58] <andrzejku> Hey, I have Perl6 question here

[21:00] <clarkema> Go ahead and give it a try ;)

[21:01] <andrzejku> far as I know parallelism is not always effective

[21:02] <andrzejku> and here I assume if even in low lever langs like C++ it is not effective to do things in parallel as it is a great overhead

[21:02] <andrzejku> then who control that in Perl6 it is more efficient than sequential computing

[21:02] <andrzejku> in given case

[21:04] <clarkema> I'm not sure I understand the question.  Perl6 doesn't automagically run code concurrently; you have to choose to do so.

[21:04] *** Kaypie left
[21:05] <jmerelo> andrzejku: I've used it with concurrent evolutionary algorithms and it works pretty well up to 8 concurrent threads

[21:05] <jmerelo> andrzejku: it could maybe work better, but with parallel computing the algorithm you use really has an influence on the speedup you will achieve.

[21:05] <jmerelo> The paper was just submitted to a conference, but is available in GitHub 

[21:06] <jmerelo> Code also free at https://github.com/JJ/p6-algorithm-evolutionary-simple

[21:07] *** jmerelo left
[21:07] *** pecastro joined
[21:07] *** leszekdubiel left
[21:11] *** cpan-p6 left
[21:11] *** cpan-p6 joined
[21:15] <andrzejku> thnks :)

[21:15] <Xliff> m: 300.fmt('%e')

[21:15] <camelia> rakudo-moar eb8561ba1: ( no output )

[21:15] <Xliff> m: 300.fmt('%e').say

[21:15] <camelia> rakudo-moar eb8561ba1: OUTPUT: «3.000000e+02␤»

[21:15] <Xliff> m: 300.fmt('%2.2e').say

[21:15] <camelia> rakudo-moar eb8561ba1: OUTPUT: «3.00e+02␤»

[21:15] <Xliff> m: 300.fmt('%2.5e').say

[21:15] <camelia> rakudo-moar eb8561ba1: OUTPUT: «3.00000e+02␤»

[21:15] <Xliff> m: 300.fmt('%5.e').say

[21:15] <camelia> rakudo-moar eb8561ba1: OUTPUT: «3e+02␤»

[21:16] <Xliff> m: 300.fmt('%05.e').say

[21:16] <camelia> rakudo-moar eb8561ba1: OUTPUT: «3e+02␤»

[21:16] <Xliff> m: 300.fmt('%2.e').say

[21:16] <camelia> rakudo-moar eb8561ba1: OUTPUT: «3e+02␤»

[21:18] <Xliff> m: 0.003.log(10).say

[21:18] <camelia> rakudo-moar eb8561ba1: OUTPUT: «-2.5228787452803374␤»

[21:19] <Xliff> m: 0.003.log10.say

[21:19] <camelia> rakudo-moar eb8561ba1: OUTPUT: «-2.5228787452803374␤»

[21:19] <Xliff> m: 0.003.log10().say

[21:19] <camelia> rakudo-moar eb8561ba1: OUTPUT: «-2.5228787452803374␤»

[21:25] *** cpan-p6 left
[21:25] *** cpan-p6 joined
[21:29] *** zakharyas left
[21:33] *** sena_kun left
[21:41] *** andrzejku left
[21:59] *** Ven`` joined
[22:01] *** cpan-p6 left
[22:01] *** cpan-p6 joined
[22:03] *** kensanata left
[22:15] *** cpan-p6 left
[22:15] *** ferreira left
[22:15] *** cpan-p6 joined
[22:37] *** cpan-p6 left
[22:37] *** cpan-p6 joined
[22:42] *** ufobat left
[22:47] *** drolax left
[22:55] *** Geth left
[22:56] *** Geth joined
[22:56] *** ChanServ sets mode: +v Geth

[23:00] *** cpan-p6 left
[23:01] *** cpan-p6 joined
[23:09] *** Ven`` left
[23:16] *** cpan-p6 left
[23:16] *** cpan-p6 joined
[23:27] *** rindolf left
[23:30] *** cpan-p6 left
[23:31] *** cpan-p6 joined
[23:54] *** cpan-p6 left
[23:54] *** cpan-p6 joined
[23:59] *** ferreira joined
