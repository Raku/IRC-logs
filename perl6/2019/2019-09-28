[00:18] *** discord61 joined
[00:18] *** discord61 left
[00:18] *** discord61 joined
[00:18] *** discord6 left
[00:19] *** discord61 is now known as discord6

[00:36] *** Xliff left
[00:38] *** vike joined
[00:56] *** AlexDani` joined
[01:00] *** AlexDaniel left
[01:15] *** netrino left
[01:19] *** molaf left
[01:20] *** Doc_Holliwood left
[01:32] *** molaf joined
[01:47] *** Sgeo joined
[02:31] *** mowcat joined
[02:35] *** cpage joined
[02:38] *** wamba left
[02:42] *** xelxebar left
[02:43] *** xelxebar joined
[02:44] *** dustinm`_ left
[02:45] *** dustinm` joined
[02:53] *** isBEKaml joined
[03:40] *** p9s joined
[03:42] *** mowcat left
[04:19] *** molaf left
[04:36] *** Doc_Holliwood joined
[04:45] *** rbt left
[04:45] *** rbt joined
[04:54] *** Actualeyes left
[04:54] *** Actualeyes joined
[05:01] *** AlexDani` is now known as AlexDaniel

[05:01] *** AlexDaniel left
[05:01] *** AlexDaniel joined
[05:20] *** _jrjsmrtn left
[05:30] *** dominix joined
[05:32] <dominix> will  Zoffix came back if perl6 is finaly renamed to raku ?

[05:34] <dominix> I know nobody can answer for him, but some can have an idea.

[05:42] *** isBEKaml left
[05:44] *** isBEKaml joined
[05:51] *** isBEKaml left
[06:08] <discord6> <Aearnus> is that still an "if" or is it a "when" by now?

[06:15] *** __jrjsmrtn__ joined
[06:29] *** dominix left
[06:30] *** dominix joined
[06:41] *** wamba joined
[06:42] <AlexDaniel> Aearnus: I'd say ‚Äúwhen‚Äù

[06:55] *** Doc_Holliwood left
[07:00] *** k0Le left
[07:01] *** k0Le joined
[07:06] *** dominix left
[07:11] <discord6> <Aearnus> Sweet

[07:13] *** molaf joined
[07:21] *** domidumont joined
[07:21] <Geth_> ¬¶ problem-solving/path-to-raku: 5 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++

[07:21] <Geth_> ¬¶ problem-solving/path-to-raku: 4cad6d4da0 | Expand a bit on .t support

[07:21] <Geth_> ¬¶ problem-solving/path-to-raku: 71e94058ca | Add some examples of filenames

[07:21] <Geth_> ¬¶ problem-solving/path-to-raku: 7257d5e3d2 | Mention that the chosen extensions are final

[07:21] <Geth_> ¬¶ problem-solving/path-to-raku: e09f6c2857 | Add some basic reason why not use shorter extensions

[07:21] <Geth_> ¬¶ problem-solving/path-to-raku: 2d7b3f5a85 | Be less specific about module loading

[07:21] <Geth_> ¬¶ problem-solving/path-to-raku: review: https://github.com/perl6/problem-solving/compare/51890ebe26d1...2d7b3f5a85ae

[07:27] *** cpan-p6 left
[07:29] *** wamba left
[07:42] *** cpan-p6 joined
[07:42] *** cpan-p6 left
[07:42] *** cpan-p6 joined
[07:44] *** domidumont left
[07:46] *** isBEKaml joined
[08:08] *** xinming joined
[08:12] *** xinming_ left
[08:15] *** squashable6 left
[08:16] *** domidumont joined
[08:18] *** squashable6 joined
[08:18] *** ChanServ sets mode: +v squashable6

[08:24] *** domidumont left
[08:30] *** isBEKaml left
[08:36] <Geth_> ¬¶ doc: 4e42f99b3b | (JJ Merelo)++ | doc/Language/operators.pod6

[08:36] <synopsebot> Link: https://doc.perl6.org/language/operators

[08:36] <Geth_> ¬¶ doc: Adds examples to cmp

[08:36] <Geth_> ¬¶ doc: 

[08:36] <Geth_> ¬¶ doc: Shows how it works on strings, and also uses codepoints in the

[08:36] <Geth_> ¬¶ doc: explanation, as opposed to characters.

[08:36] <Geth_> ¬¶ doc: Closes #3026

[08:36] <Geth_> ¬¶ doc: review: https://github.com/perl6/doc/commit/4e42f99b3b

[08:48] *** rbt left
[08:56] *** sena_kun joined
[08:57] *** chloekek joined
[09:04] *** chloekek left
[09:05] *** chloekek joined
[09:19] *** Doc_Holliwood joined
[09:26] *** MasterDuke joined
[09:27] *** eseyman left
[09:28] *** p9s left
[09:29] *** p9s joined
[09:30] *** Sgeo_ joined
[09:34] *** Sgeo left
[09:35] <SmokeMachine> I like the name of this language: https://github.com/FCO/FerNANDo  :P

[10:04] *** camelia left
[10:04] *** Geth left
[10:10] *** APic left
[10:13] *** Black_Ribbon left
[10:32] *** APic joined
[11:12] *** wamba joined
[11:13] *** netrino joined
[11:32] <El_Che> Fernandinho is the name of its practicioners?

[11:39] *** mowcat joined
[11:50] *** molaf left
[11:50] *** khisanth_ left
[11:55] *** nine joined
[11:58] *** Geth joined
[11:58] *** camelia joined
[11:59] *** ChanServ sets mode: +v camelia

[12:04] *** khisanth_ joined
[12:07] *** mowcat left
[12:24] *** gabiruh left
[12:24] *** gabiruh joined
[12:27] *** krychu joined
[12:27] *** pecastro joined
[12:35] *** lucasb joined
[12:55] *** rbt joined
[12:59] *** krychu left
[13:02] *** krychu joined
[13:21] *** krychu left
[13:25] *** chloekek left
[13:30] *** krychu joined
[13:32] *** sena_kun left
[13:32] *** wamba left
[13:36] *** cpan-p6 left
[13:37] *** cpan-p6 joined
[13:37] *** cpan-p6 left
[13:37] *** cpan-p6 joined
[13:38] *** Sgeo__ joined
[13:42] *** Sgeo_ left
[13:45] *** isBEKaml joined
[13:59] *** krychu left
[14:02] *** chloekek joined
[14:05] *** eseyman joined
[14:05] <uzl[m]> .tell dominix https://mobile.twitter.com/zoffix/status/1159590283627155456 https://mobile.twitter.com/zoffix/status/1171193530624221184

[14:05] <tellable6> uzl[m], I'll pass your message to dominix

[14:08] <uzl[m]> .tell dominix It seems Zoffix is up to something entirely different. I guess the best we can do is wish Zoffix all the best in this new life endeavor. Although I hope he reconsiders. üòÉÔøΩ

[14:08] <tellable6> uzl[m], I'll pass your message to dominix

[14:08] <El_Che> Bags?

[14:12] <uzl[m]> Yeah, clothing and accesories design. https://mobile.twitter.com/zoffix/status/1109279112223510528

[14:17] *** p9s` joined
[14:18] *** p9s` left
[14:29] *** p9s` joined
[14:29] <timotimo> huh, that's cool

[14:30] <timotimo> i'd love to have zoffix back, but if that makes him happier than coding does, that's cool

[14:32] *** SCHAPiE left
[14:33] *** chloekek left
[14:34] *** SCHAPiE joined
[14:41] *** k0Le left
[14:42] *** k0Le joined
[14:47] *** k0Le left
[14:47] *** k0Le joined
[14:48] *** k0Le left
[14:49] *** k0Le joined
[14:50] *** wamba joined
[14:57] *** k0Le left
[14:57] *** k0Le joined
[15:00] <xinming> Is there a module to compile javascript code to perl6? Or run js code on perl6 directly?

[15:01] *** chloekek joined
[15:01] <moritz> you can run rakudo on js

[15:02] <xinming> But I want to run js on rakudo. :-)

[15:02] <Geth_> ¬¶ doc: uzluisf++ created pull request #3040: Remove extra word and add relevant links

[15:02] <Geth_> ¬¶ doc: review: https://github.com/perl6/doc/pull/3040

[15:03] <xinming> Wish to use some code from js, then "print" sends these codes to browser too.

[15:04] <xinming> And wish to use native modules from perl6 too.

[15:08] <timotimo> v8 probably has C bindings. there's also other JS engines out there

[15:08] <timotimo> i recently saw one that was made for embedded situations, but iforgot the name

[15:18] *** isBEKaml left
[15:20] *** molaf joined
[15:26] *** ribasushi joined
[15:33] *** p9s` left
[15:36] *** APic left
[15:36] *** APic joined
[15:40] <El_Che> uzl[m]: you have to admire that guy's stamina! Good for him

[15:42] <Doc_Holliwood> aren't i supposed to be able to use super and subscripts in identifiers?

[15:43] <timotimo> m: my $foo‚ÇÅ = 5

[15:43] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Bogus postfix‚ê§at <tmp>:1‚ê§------> 3my $foo7‚èè5‚ÇÅ = 5‚ê§    expecting any of:‚ê§        constraint‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        sta‚Ä¶¬ª

[15:43] <timotimo> unicodable6: ‚ÇÅ

[15:43] <unicodable6> timotimo, U+2081 SUBSCRIPT ONE [No] (‚ÇÅ)

[15:43] <timotimo> unicodable6: ‚Çê

[15:43] <unicodable6> timotimo, U+2090 LATIN SUBSCRIPT SMALL LETTER A [Lm] (‚Çê)

[15:44] <Doc_Holliwood> m: sub intersection( Line $l‚ÇÅ, Line $l‚ÇÇ ) { * }

[15:44] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Invalid typename 'Line' in parameter declaration.‚ê§at <tmp>:1‚ê§------> 3sub intersection( Line7‚èè5 $l‚ÇÅ, Line $l‚ÇÇ ) { * }‚ê§¬ª

[15:44] <timotimo> m: my $foo‚Çò = 99

[15:44] <camelia> rakudo-moar 17d036ad4: ( no output )

[15:44] <Doc_Holliwood> m: sub intersection( $l‚ÇÅ, $l‚ÇÇ ) { * }

[15:44] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed parameter‚ê§at <tmp>:1‚ê§------> 3sub intersection( $l7‚èè5‚ÇÅ, $l‚ÇÇ ) { * }‚ê§    expecting any of:‚ê§        constraint‚ê§¬ª

[15:44] <timotimo> letters work but numbers don't it seems like?

[15:44] <timotimo> committable6: releases sub intersection( $l‚ÇÅ, $l‚ÇÇ ) { }

[15:45] <committable6> timotimo, https://gist.github.com/691340ddab2f1cfb14c7efdcb14361f5

[15:45] <timotimo> so at least it hasn't changed

[15:46] <timotimo> greppable6: ‚ÇÅ

[15:46] <greppable6> timotimo, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/83f1d04f10898822019b6196a397b2c6

[15:46] <timotimo> haha, wat :)

[15:46] <AlexDaniel> what is this thing

[15:46] <timotimo> you mean my "subscript one"?

[15:47] <AlexDaniel> I keep seeing it, is it because there's some binary schmoo in some module?

[15:47] <timotimo> oh

[15:47] <AlexDaniel> but isn't it supposed to skip binary files? I don't get it‚Ä¶

[15:47] <timotimo> possible

[15:47] <AlexDaniel> also perl6-all-modules is still not updating

[15:48] <AlexDaniel> moritz: peng

[15:48] <timotimo> it could be in a filename, actually

[15:48] <moritz> I tried to fix it, but git-subrepo doesn't seem to be working for me anymore :(

[15:48] <timotimo> you could try outputting the whole line if it b0rks

[15:50] <timotimo> cpan/FRITH/Math-FFT-Libfftw3/lib/Math/FFT/Libfftw3/R2C.pm6^@119^@    # The output elems are n‚ÇÄ √ó n‚ÇÅ √ó ‚Ä¶ n‚Çô / 2 - 1

[15:50] <timotimo> cpan/WARRINGD/HTML-Canvas-To-PDF/examples/render-pdf-test-sheets.pdf^@12011^@g<E6>"9!=6<8E><B3><E5>R<D0>a<9D>6*<90>

[15:51] <timotimo> that looks very strange

[15:51] <AlexDaniel> oh, a pdf file, wonderful

[15:51] <AlexDaniel> well, I kinda know what's wrong

[15:51] <AlexDaniel> `$result<output>.lines`

[15:52] <AlexDaniel> does that split on \r ?

[15:52] <timotimo> ah!

[15:52] <timotimo> yeah, it would

[15:52] <AlexDaniel> and if I change that then it'll suddenly work?

[15:52] <AlexDaniel> https://github.com/perl6/whateverable/commit/422f0d158a0671e18e6feaad11fc841e2183c6e7

[15:52] <timotimo> dunno, does "git grep" escape \n already?

[15:53] <AlexDaniel> it doesn't need to escape \n because that's literally a new line?

[15:53] <timotimo> oh, duh

[15:54] *** greppable6 left
[15:54] <AlexDaniel> let's try with split(‚Äú\n‚Äù)‚Ä¶

[15:56] *** greppable6 joined
[15:57] <AlexDaniel> greppable6: ‚ÇÅ

[15:57] <greppable6> AlexDaniel, 4 lines, 3 modules: https://gist.github.com/481a9a46ee7d0cb11b189c3cf44209c9

[15:58] <AlexDaniel> well uhhhhh but why does it even look at pdf files

[15:59] <AlexDaniel> cuz it needs --text 

[16:00] *** greppable6 left
[16:02] *** greppable6 joined
[16:02] *** ChanServ sets mode: +v greppable6

[16:03] <AlexDaniel> greppable6: ‚ÇÅ

[16:03] <greppable6> AlexDaniel, 8 lines, 7 modules: https://gist.github.com/c2c4befeec95ee46a7353208e436f169

[16:04] <AlexDaniel> what???

[16:04] <AlexDaniel> ahhh, it's other way around!

[16:04] <AlexDaniel> and I already had -I

[16:04] <AlexDaniel> so it really thinks that pdf files are text

[16:04] <AlexDaniel> oh well

[16:17] <Geth_> ¬¶ whateverable: ba07dad033 | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Greppable.p6

[16:17] <Geth_> ¬¶ whateverable: Fix line splitting in greppable

[16:17] <Geth_> ¬¶ whateverable: 

[16:17] <Geth_> ¬¶ whateverable: This effectively reverts 422f0d158a0671e18e6feaad11fc841e2183c6e7.

[16:17] <Geth_> ¬¶ whateverable: Not sure what I was thinking.

[16:17] <Geth_> ¬¶ whateverable: 

[16:17] <Geth_> ¬¶ whateverable: Unfortunately, it turns out that git will match pdf files even

[16:17] <Geth_> ¬¶ whateverable: with -I, so the output often includes binary garbage which breaks

[16:17] <Geth_> ¬¶ whateverable: markdown output. Not sure how to fix that yet.

[16:17] <Geth_> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/ba07dad033

[16:17] <Geth_> ¬¶ whateverable: 10a6d8a924 | (Aleks-Daniel Jakimenko-Aleksejev)++ | xbin/Greppable.p6

[16:17] <Geth_> ¬¶ whateverable: Make run commands more readable

[16:17] <Geth_> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/10a6d8a924

[16:17] *** greppable6 left
[16:20] *** cinch joined
[16:22] *** greppable6 joined
[16:23] <cinch> there's a error on the docs page: it leads to https://docs.perl6.org/perl6.html

[16:24] <kybr> i'm a little fuzzy on the pros, cons, and whys of $ versus % on types such as Bag. what's the difference between these:

[16:25] <kybr> m: my $s = bag <x y y z>; $s<y>

[16:25] <camelia> rakudo-moar 17d036ad4: ( no output )

[16:25] <kybr> m: my %h = bag <x y y z>; $h<y>

[16:25] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$h' is not declared. Did you mean '%h'?‚ê§at <tmp>:1‚ê§------> 3my %h = bag <x y y z>; 7‚èè5$h<y>‚ê§¬ª

[16:25] <kybr> m: my %h = bag <x y y z>; %h<y>

[16:25] <camelia> rakudo-moar 17d036ad4: ( no output )

[16:25] <kybr> well, that's didn't work out how i wanted, but you see the code at least.

[16:26] <Geth_> ¬¶ doc: 23cb0407b9 | (Luis F. Uceta)++ | doc/Language/mop.pod6

[16:26] <synopsebot> Link: https://doc.perl6.org/language/mop

[16:26] <Geth_> ¬¶ doc: Remove extra word and add relevant links

[16:26] <Geth_> ¬¶ doc: review: https://github.com/perl6/doc/commit/23cb0407b9

[16:26] <Geth_> ¬¶ doc: 58cd229577 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/mop.pod6

[16:26] <Geth_> ¬¶ doc: Merge pull request #3040 from uzluisf/master

[16:26] <Geth_> ¬¶ doc: 

[16:26] <Geth_> ¬¶ doc: Remove extra word and add relevant links

[16:26] <Geth_> ¬¶ doc: review: https://github.com/perl6/doc/commit/58cd229577

[16:26] <kybr> i can say $s<y> just as well as %h<y>

[16:27] <kybr> m: my %h = bag <x y y z>; %h.WHAT.say

[16:27] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Hash)‚ê§¬ª

[16:27] <kybr> m: my $s = bag <x y y z>; $s.WHAT.say

[16:27] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Bag)‚ê§¬ª

[16:27] <AlexDaniel> yeah, it's not a bag anymore

[16:27] <AlexDaniel> but

[16:27] *** APic left
[16:28] <AlexDaniel> m: my %h := bag <x y y z>; %h.WHAT.say

[16:28] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´(Bag)‚ê§¬ª

[16:28] <kybr> ok. so when i use the % sigil and assign = (rather than bind := ) then i end up with a hash

[16:28] <AlexDaniel> cinch: yep! Please file a bug report here https://github.com/perl6/doc/issues

[16:29] <AlexDaniel> cinch: oh, you already did! Thanks!

[16:29] <AlexDaniel> cinch++

[16:31] *** APic joined
[16:32] *** Sgeo_ joined
[16:33] <cinch> you're welcome ;)

[16:35] *** Sgeo__ left
[16:37] *** cinch left
[16:51] *** cinch joined
[17:10] *** APic left
[17:13] *** APic joined
[17:18] *** chloekek left
[17:32] *** daxim left
[17:40] *** wildtrees joined
[17:42] *** wildtrees left
[17:43] *** wildtrees joined
[17:45] *** wildtrees left
[17:54] *** chloekek joined
[18:07] *** Black_Ribbon joined
[18:30] *** daxim joined
[18:35] <Doc_Holliwood> mmh. Is this a bug? https://pastebin.com/4LNc6ctr

[18:35] <Doc_Holliwood> The failure doesnt get handled properly

[18:36] <Doc_Holliwood> the code just dies with "lines are parallel"

[18:36] *** cpage_ joined
[18:38] *** cinch left
[18:38] *** cpage left
[18:38] *** cpage_ is now known as cpage

[18:57] <timotimo> m: my $result = 5 div 0; say $result.perl

[18:57] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Failure.new(exception => X::Numeric::DivideByZero.new(using => "div", details => Any, numerator => 5), backtrace => Backtrace.new)‚ê§¬ª

[18:58] <timotimo> "return fail" isn't quite right, since fail is already a return-like operation

[18:59] <timotimo> m: https://pastebin.com/raw/4LNc6ctr

[18:59] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3https:7‚èè5//pastebin.com/raw/4LNc6ctr‚ê§    expecting any of:‚ê§        colon pair‚ê§¬ª

[18:59] <timotimo> no way to pass commandline arguments, though i can set $*ARGS

[18:59] <timotimo> @*ARGS

[18:59] <timotimo> except i can't with the url format

[19:01] <timotimo> AlexDaniel: this is a terrible suggestion, but i'd like there to be a way to get a web interface where i can edit recent snippets that have been executed and submit them for re-execution

[19:01] *** molaf left
[19:01] *** wildtrees joined
[19:02] <AlexDaniel> Well, let's see‚Ä¶

[19:02] <AlexDaniel> e: .say for ^999

[19:02] <evalable6> AlexDaniel, rakudo-moar 6297b0e46: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§11‚ê§12‚ê§13‚ê§14‚ê§15‚ê§16‚ê§17‚ê§18‚ê§19‚ê§20‚ê§21‚ê§22‚ê§23‚ê§24‚ê§25‚ê§26‚ê§27‚ê§28‚ê§29‚ê§30‚ê§31‚ê§32‚ê§3‚Ä¶¬ª

[19:02] <evalable6> AlexDaniel, Full output: https://gist.github.com/2dcfbb1410061b00d1de47331741a74b

[19:02] *** aborazmeh joined
[19:02] *** aborazmeh left
[19:02] *** aborazmeh joined
[19:02] <timotimo> you're thinking of using github's "fork gist" thing?

[19:02] <AlexDaniel> e: https://gist.github.com/AlexDaniel/3688167cd5bbcf4b108a7f3402b54da1

[19:02] <evalable6> AlexDaniel, rakudo-moar 6297b0e46: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§11‚ê§12‚ê§13‚ê§14‚ê§15‚ê§16‚ê§17‚ê§18‚ê§19‚ê§20‚ê§21‚ê§22‚ê§23‚ê§24‚ê§25‚ê§26‚ê§27‚ê§28‚ê§29‚ê§30‚ê§31‚ê§32‚ê§3‚Ä¶¬ª

[19:02] <evalable6> AlexDaniel, Full output: https://gist.github.com/1fff27e7301b3684787274ec59d25e1c

[19:02] <AlexDaniel> that took 25 seconds‚Ä¶ :)

[19:02] <timotimo> OK, how about this:

[19:03] <timotimo> m: https://pastebin.com/raw/4LNc6ctr

[19:03] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3https:7‚èè5//pastebin.com/raw/4LNc6ctr‚ê§    expecting any of:‚ê§        colon pair‚ê§¬ª

[19:03] <AlexDaniel> e: https://pastebin.com/raw/4LNc6ctr

[19:03] <evalable6> AlexDaniel, Successfully fetched the code from the provided URL

[19:03] <evalable6> AlexDaniel, rakudo-moar 6297b0e46: OUTPUT: ¬´(exit code 2) Usage:‚ê§  /tmp/P0gqNexPW2 <x1> <y1> <x2> <y2> <x3> <y3> <x4> <y4>‚ê§¬ª

[19:03] <AlexDaniel> e: https://gist.github.com/AlexDaniel/19dd0c641116c6cae784b66c16e0475f

[19:03] <evalable6> AlexDaniel, rakudo-moar 6297b0e46: OUTPUT: ¬´(exit code 2) Usage:‚ê§  sandbox/foo.p6 <x1> <y1> <x2> <y2> <x3> <y3> <x4> <y4>‚ê§¬ª

[19:04] <timotimo> you copy-pasted it?

[19:04] <AlexDaniel> I mean, I get it, it would be easier, but it feels like it's already easy enough

[19:04] <AlexDaniel> yes :)

[19:04] <timotimo> man, that's so hard

[19:04] <AlexDaniel> xD

[19:04] <timotimo> oh well

[19:05] <timotimo> e: https://gist.github.com/timo/079fc2fbf40272ed0bc1687b29d2d45a

[19:05] <evalable6> timotimo, rakudo-moar 6297b0e46: OUTPUT: ¬´(exit code 1) Lines are parallel or identical‚ê§  in block  at sandbox/foo.p6 line 26‚ê§  in a‚Ä¶¬ª

[19:05] <evalable6> timotimo, Full output: https://gist.github.com/cbbe3321b999fb893cd75666d092f592

[19:10] <AlexDaniel> timotimo: I'm thinking about implementing some cool stuff, but it's unlikely I'll get to it just for fun. So, what do you think, would a grant make sense? I'm thinking: bisecting into nqp and moar, local command line interface to all the functionality, on-demand building of rakudo for other architectures, faster bisection with decompression lookahead and parallelized committable, ‚Ä¶

[19:13] <MasterDuke> i like it, particularly the first item

[19:15] <AlexDaniel> gah that one I just really need to sit on it‚Ä¶ I almost had it once previously, then got all confused with the complexity of the code and couldn't really continue

[19:15] <MasterDuke> i'd suggest adding (or maybe replacing something else with) support for doing spesh/jit bisects (using or based on the existing scripts in MoarVM/tools)

[19:15] <AlexDaniel> are these really useful in a form of a bot?

[19:15] <MasterDuke> dunno

[19:16] <MasterDuke> ask in #moarvm?

[19:18] <timotimo> i'd claim proposing a grant is easy-ish, so see what the response is i guess?

[19:18] <AlexDaniel> the first three items together basically mean that you'd be able to bisect any issue say on ARM down to a moar commit right in your terminal, without the pain of doing it manually

[19:21] <vrurg> AlexDaniel: heh, wish I had nqp/moar bisecting recently when was dealing with broken IO::Notifications... It definitely worth a grant.

[19:28] <AlexDaniel> I've done it manually many times but it's just extremely annoying and boring

[19:29] <vrurg> Exactly.

[19:31] *** MasterDuke left
[19:38] *** reach_satori left
[19:39] *** reach_satori joined
[19:41] *** aborazmeh left
[19:42] *** sauvin left
[19:45] *** sauvin joined
[20:02] *** MasterDuke joined
[20:20] <Doc_Holliwood> m: my $x = 1 / 0;

[20:20] <camelia> rakudo-moar 17d036ad4: ( no output )

[20:20] <Doc_Holliwood> m: say 1 / 0;

[20:20] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Attempt to divide by zero when coercing Rational to Str‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:21] <Doc_Holliwood> why doesn't this die on assigment?

[20:21] <timotimo> because it assigns the Failure object

[20:21] <timotimo> and just stores that

[20:27] <Doc_Holliwood> i think not. m: sub foo() { 1 / 0 }; say "not a failure" if foo();

[20:27] <Doc_Holliwood> m: sub foo() { 1 / 0 }; say "not a failure" if foo();

[20:27] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´not a failure‚ê§¬ª

[20:27] <timotimo> m: sub foo() { 1 / 0 }; say foo.perl

[20:27] *** chloekek left
[20:27] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´<1/0>‚ê§¬ª

[20:27] <Doc_Holliwood> i guess it's lazy somehow

[20:27] <timotimo> true

[20:27] <timotimo> m: sub foo() { 1 div 0 }; say foo.perl

[20:27] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Failure.new(exception => X::Numeric::DivideByZero.new(using => "div", details => Any, numerator => 1), backtrace => Backtrace.new)‚ê§¬ª

[20:28] <timotimo> there are rats with zero denominator

[20:28] <Doc_Holliwood> pesky rats, i hate them

[20:35] <MasterDuke> timotimo: it looks like the links moarperf create to files+lines in the rakudo repo have a duplicated '.pm6'

[20:35] <MasterDuke> oh. and 'src/core'

[20:36] <timotimo> ah, yeah, i noticed that too. it's the core.c core.d etc change that upsets it

[20:37] <MasterDuke> btw, what would cause a call to https://github.com/rakudo/rakudo/blob/master/src/core.c/Mu.pm6#L546 for every iteration of `my $a; my $b = rand; for ^1_000_000 { $a = $b ~~ /<$_>/; }`?

[20:38] <timotimo> i'd assume $b being stringified so it can be regex-matched against

[20:39] <MasterDuke> heh, just noticed that

[20:39] *** wamba left
[20:39] <timotimo> i wonder how filenames should be shortened when they have a setting version in them

[20:39] <timotimo> SETTING.c::blah? SETTING::c::blah?

[20:40] <timotimo> SETTING:ver<6.c>::blah?

[20:41] <MasterDuke> this is just for display? i'd vote for SETTING.c::blah

[20:43] <vrurg> timotimo: there is CORE::v6c pseudo

[20:43] *** aborazmeh joined
[20:43] *** aborazmeh left
[20:43] *** aborazmeh joined
[20:43] <MasterDuke> 'There were 46,006,910 object allocations. The dynamic optimizer was not able to eliminate any allocations through scalar replacement', oof

[20:46] <timotimo> oh, that's shorter than SETTING

[20:46] <vrurg> timotimo: and more correct. Because SETTING is not always CORE

[20:49] <timotimo> right, i'm replacing filenames that start with "SETTING::src/core/"

[20:50] <vrurg> good thing. It needed terminological cleanup but I was postponing it.

[20:51] <timotimo> oh

[20:51] <timotimo> no i mean

[20:51] <timotimo> literally string replace

[20:51] <timotimo> in order to present it to the user

[20:53] <vrurg> timotimo: I also meant this. :) I don't like use of 'setting' everywhere where it actually means 'core'. 

[20:54] <timotimo> oh, OK

[20:57] *** rbt left
[20:57] *** rbt joined
[20:58] <timotimo> CORE::v6.::/Main:8

[20:58] <timotimo> lmao, that's bad

[21:03] <timotimo> MasterDuke: pushed a fix, please try it

[21:04] <MasterDuke> looks nice, but no link?

[21:05] <timotimo> no link?

[21:05] <MasterDuke> it isn't a link to rakudo repo anymore

[21:05] <timotimo> it is on my end :o

[21:06] <MasterDuke> did i need to do anything other than a git pull and restart service.p6?

[21:06] <MasterDuke> oh, and btw, is `npm run build` not needed anymore?

[21:08] <timotimo> it is

[21:08] <timotimo> without that you won't get changes to the js

[21:08] <timotimo> like the one i just made :)

[21:09] <MasterDuke> i get lots of 'npm ERR!'

[21:09] <timotimo> oh

[21:09] *** molaf joined
[21:09] <timotimo> i moved all the stuff to frontend/

[21:10] <MasterDuke> error enoent ENOENT: no such file or directory, open '/home/dan/Source/perl6/tools/moarperf/package.json'

[21:11] <MasterDuke> same if i `npm run build` in frontend/

[21:11] <timotimo> is the package.json file not in there?

[21:13] <timotimo> does `git status` show anything suspicious?

[21:13] <MasterDuke> i see a `delete mode 100644 package.json` in a recent git pull message

[21:13] <timotimo> ooooh

[21:14] *** molaf left
[21:14] <timotimo> pull again, i re-instated the files

[21:15] <MasterDuke> and do `npm run build` in frontend/ ?

[21:15] <timotimo> yes

[21:16] <MasterDuke> i need to install webpack?

[21:17] <MasterDuke> ah, `npm install .` first

[21:17] <MasterDuke> heh, now everything looks much nicer

[21:18] *** cpage left
[21:21] <timotimo> i'm so glad i have a user :)

[21:21] <timotimo> also i have a headache :\

[21:23] *** cpage joined
[21:27] <MasterDuke> hopefully unrelated

[21:28] <timotimo> aye

[21:34] *** Xliff joined
[21:34] <Xliff> \o

[21:34] <Xliff> m: class A {}; role B {}; say A.HOW.^name; say B.HOW.^name;

[21:34] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Perl6::Metamodel::ClassHOW‚ê§Perl6::Metamodel::ParametricRoleGroupHOW‚ê§¬ª

[21:34] <Xliff> m: class A {}; role B {}; say A.HOW.^name; say B.HOW.^name; say B ~~ RoleGroupHOW;

[21:34] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    RoleGroupHOW used at line 1‚ê§‚ê§¬ª

[21:35] <Xliff> m: class A {}; role B {}; say A.HOW.^name; say B.HOW.^name; say B.^shortname;

[21:35] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´Perl6::Metamodel::ClassHOW‚ê§Perl6::Metamodel::ParametricRoleGroupHOW‚ê§B‚ê§¬ª

[21:37] <jnthn> m: role B { }; say B.HOW ~~ Metamodel::ParametricRoleGroupHOW

[21:37] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´True‚ê§¬ª

[21:38] <jnthn> m: role B { }; say B.HOW.archetypes.parametric

[21:38] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´1‚ê§¬ª

[21:39] <Xliff> Ah.

[21:39] <Xliff> Thanks, jnthn++

[21:40] <Xliff> Is .archetypes documented somewhere?

[21:48] <jnthn> Dunno about in the docs, though there's a description of what each one is at https://github.com/rakudo/rakudo/blob/master/src/Perl6/Metamodel/Archetypes.nqp

[21:49] <Xliff> Thanks, again.

[21:50] <Xliff> Heh. There is an issue on it: https://github.com/perl6/doc/issues/2748

[21:51] <Xliff> m: class A {}; role B {}; say A.HOW.archetypes.definite

[21:51] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´0‚ê§¬ª

[21:51] <Xliff> m: class A {}; role B {}; say A.HOW.archetypes.nominal

[21:51] <camelia> rakudo-moar 17d036ad4: OUTPUT: ¬´1‚ê§¬ª

[21:52] <Xliff> jnthn: Doesn't inheritable imply inheritalizable?

[21:52] <Xliff> ( and so on )

[22:00] <jnthn> No

[22:00] <jnthn> I figured anything is going to check if the thing is inheritable first :)

[22:19] *** aborazmeh left
[22:44] <Xliff> ah

[23:11] *** rbt left
[23:11] *** rbt joined
[23:17] *** Koling joined
[23:17] <Geth_> ¬¶ doc: 41b84b55f6 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/phasers.pod6

[23:17] <synopsebot> Link: https://doc.perl6.org/language/phasers

[23:17] <Geth_> ¬¶ doc: add missing word

[23:17] <Geth_> ¬¶ doc: review: https://github.com/perl6/doc/commit/41b84b55f6

[23:23] <tbrowder> hi, raku people (aka #perl6 members)!

[23:24] <tbrowder> i need so advice with a problem: i want to define som global variables to be accessible in a

[23:25] <Xliff> ...a...?

[23:25] <tbrowder> all local lib modules used by a program

[23:26] <Xliff> Have all local lib modules "use" the module that defines that variable?

[23:27] <Xliff> It's either that or use a dynamic... however the problem there becomes "where to initialize the dynamic"

[23:28] <tbrowder> second requirement is one or more vars will take some building which i want to occur at the beginning of the program. i have done that and it works. but can i do that in a begin block inside the local lib module?

[23:29] <tbrowder> in my past use it was normally a simple assignment.

[23:29] <tbrowder> and that seemed to work fine.

[23:31] <tbrowder> the use case is in module Documentable where i'm tryii

[23:32] <tbrowder> trying to ensure some files are available in a temp dir during the testing phase

[23:33] <vrurg> tbrowder: If I get your right, you need an application class so that the startup script would only consist of `MyApp.run` or alike. Then you can do all init you need in the run method.

[23:33] <tbrowder> currerently that happens too late and errors occur on non-existent access. i want to inject the defs earlier in the game.

[23:35] *** Koling left
[23:42] <Xliff> tbrowder: BEGIN block is your best bet, assuming your data can be serialized at the MOAR level

[23:43] <Xliff> If a BEGIN won't work, would INIT be too late?

[23:43] <tbrowder> thnx, i'll continue to experiment with BEGIN, then :-D

[23:44] <tbrowder> and hold INIT in reserve

[23:45] <tbrowder> maybe INIT is the answer. can i put it in a local module used by the program and its other lib modules?

[23:46] <tbrowder> or do i have to put it in the program code?

