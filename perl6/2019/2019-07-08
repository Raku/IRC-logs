[00:02] *** Manifest0 left
[00:07] *** Manifest0 joined
[00:10] <AlexDaniel> weekly: Time to blog about perl 6! Perl 6 is now in the TIOBE list, which searches for “Perl 6 programming”. So make sure to include that somewhere in your posts!

[00:10] <notable6> AlexDaniel, Noted!

[00:10] <AlexDaniel> weekly: (currently on position 93)

[00:11] <notable6> AlexDaniel, Noted!

[00:16] *** Manifest0 left
[00:20] *** Manifest0 joined
[00:24] *** kaare_ left
[00:30] *** Manifest0 left
[00:35] *** Manifest0 joined
[00:40] *** Manifest0 left
[00:44] *** Manifest0 joined
[01:18] *** Manifest0 left
[01:24] *** Manifest0 joined
[01:25] *** molaf left
[01:37] *** molaf joined
[01:37] *** Manifest0 left
[01:43] *** Manifest0 joined
[01:57] *** jaldhar left
[02:02] *** Manifest0 left
[02:03] *** Manifest0 joined
[02:08] *** Manifest0 left
[02:13] *** Manifest0 joined
[02:16] *** mowcat left
[02:17] *** Manifest0 left
[02:24] *** Manifest0 joined
[02:33] *** Manifest0 left
[02:37] *** Manifest0 joined
[02:39] *** Cabanossi left
[02:45] *** Cabanossi joined
[02:46] *** Sgeo_ joined
[02:49] *** Sgeo left
[03:03] *** Manifest0 left
[03:08] *** Manifest0 joined
[03:15] *** Manifest0 left
[03:15] * irced readies a b-slap hand for Manifest0.

[03:20] *** Manifest0 joined
[03:20] * irced slaps Manifest0.

[03:27] *** Manifest0 left
[03:32] *** Manifest0 joined
[03:39] *** Manifest0 left
[03:41] *** irced left
[03:43] *** irced joined
[03:44] *** Manifest0 joined
[03:58] *** irced left
[03:59] *** molaf left
[04:02] *** dominix_ joined
[04:06] *** dominix__ left
[04:11] *** Manifest0 left
[04:13] *** Sgeo_ left
[04:13] *** Sgeo_ joined
[04:17] *** Manifest0 joined
[04:21] *** Manifest0 left
[04:22] *** rindolf joined
[04:28] *** Manifest0 joined
[04:33] *** Manifest0 left
[04:39] *** Manifest0 joined
[04:44] *** Manifest0 left
[04:47] *** MilkmanDan left
[04:48] *** MilkmanDan joined
[04:49] *** Manifest0 joined
[04:56] *** Manifest0 left
[04:58] *** curan joined
[04:59] *** curan left
[05:01] *** Manifest0 joined
[05:10] *** Manifest0 left
[05:15] *** Manifest0 joined
[05:20] *** llfourn left
[05:28] *** robertle left
[05:29] *** Xliff joined
[05:31] *** abraxxa joined
[05:31] *** abraxxa left
[05:32] *** abraxxa joined
[05:35] *** reach_satori_ left
[05:35] *** reach_satori_ joined
[05:38] *** abraxxa left
[05:39] *** abraxxa joined
[05:40] *** llfourn joined
[05:46] *** sno left
[05:46] *** Manifest0 left
[05:48] *** sno joined
[05:49] *** jmerelo joined
[05:51] *** Manifest0 joined
[05:51] *** Xliff left
[05:51] <jmerelo> releasable6: status

[05:51] <releasable6> jmerelo, Next release will happen when it's ready. R6 is down. At least 1 blocker. 578 out of 677 commits logged

[05:51] <releasable6> jmerelo, Details: https://gist.github.com/83117f9c994a6349081a022c7b12950c

[05:58] *** Manifest0 left
[06:03] *** Manifest0 joined
[06:10] *** Manifest0 left
[06:15] *** veesh joined
[06:16] *** Manifest0 joined
[06:21] *** tankf33der left
[06:24] *** rfold joined
[06:30] *** Manifest0 left
[06:35] *** Manifest0 joined
[06:42] *** Manifest0 left
[06:47] *** Manifest0 joined
[06:47] *** veesh left
[06:49] *** domidumont joined
[06:49] *** Black_Ribbon left
[06:54] *** rfold left
[06:55] *** sno left
[07:02] *** Manifest0 left
[07:05] *** llfourn left
[07:06] *** llfourn joined
[07:06] *** Manifest0 joined
[07:10] *** patrickb joined
[07:13] <Geth> ¦ doc: 923c2df0d2 | (JJ Merelo)++ | doc/Language/regexes.pod6

[07:13] <Geth> ¦ doc: Reflow and clarifications refs #2887

[07:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/923c2df0d2

[07:13] <Geth> ¦ doc: 56ce35b637 | (JJ Merelo)++ | doc/Language/regexes.pod6

[07:13] <Geth> ¦ doc: Adds publication of variables, closes #2887

[07:13] <synopsebot> Link: https://doc.perl6.org/language/regexes

[07:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/56ce35b637

[07:16] *** llfourn left
[07:16] *** llfourn joined
[07:21] *** llfourn left
[07:22] *** noisegul joined
[07:22] *** llfourn joined
[07:30] *** Manifest0 left
[07:31] *** llfourn left
[07:32] *** llfourn joined
[07:35] *** Manifest0 joined
[07:37] *** llfourn left
[07:40] <masak> good antenoon, #perl6

[07:40] <timotimo> greetings masak 

[07:41] *** zakharyas joined
[07:45] *** sena_kun joined
[07:45] <El_Che> masak: ante meridiem for you too

[07:47] <jmerelo> hey everyone

[07:47] *** llfourn joined
[07:47] * sena_kun enabled backup for our new server

[07:47] <sena_kun> jmerelo, o/

[07:48] *** rindolf left
[07:49] *** rindolf joined
[07:49] <timotimo> so, with the optimization i have, that hits many, many methods in the core setting, how do i best figure out how big the win is?

[07:49] <lizmat> test-t ?

[07:49] <timotimo> that could be a way, yeah

[07:49] <lizmat> make spectest  ?

[07:51] <timotimo> that takes ages :)

[07:52] <lizmat> maybe a bit less age ?  :-)

[07:52] *** llfourn left
[07:52] <timotimo> barely, i'm sure

[07:53] <lizmat> you wanted suggestions  :-)

[07:53] <timotimo> true

[08:00] *** Sgeo__ joined
[08:01] <sena_kun> timotimo, I am also sure you're aware of callgrind to minimize noise

[08:01] <timotimo> aye

[08:02] *** llfourn joined
[08:03] <timotimo> is the normal test-t-20 run with the 1_000_000 lines that README.speed suggests?

[08:04] *** Sgeo_ left
[08:04] * timotimo aborted it after 2.5 minutes of run time

[08:06] *** llfourn left
[08:08] <lizmat> my t-20 run used a 200K line file

[08:08] <timotimo> ok, i've got a 200000 one

[08:13] <timotimo> d'oh, now i'm not sure if my rakudo at the time had the opt or not

[08:13] *** nobody joined
[08:15] *** nobody left
[08:16] *** WhoIsNick joined
[08:21] *** WhoIsNick left
[08:23] *** Manifest0 left
[08:26] *** dakkar joined
[08:29] *** Manifest0 joined
[08:35] *** Manifest0 left
[08:37] *** dakkar left
[08:39] <timotimo> i ran it a whole bunch of times in a loop with a sleep in between for thermal effects to settle down again

[08:39] *** llfourn joined
[08:39] *** dakkar joined
[08:43] *** Manifest0 joined
[08:44] *** llfourn left
[08:49] *** Manifest0 left
[08:55] <timotimo> i'm making extra sure and wiping a little bit of stuff because i've got some surprising behavior, like the first execution after rebuilding rakudo not being slower than the others, even though it would have had to rebuild Text::CSV as well as Slang::Tuxic

[08:55] *** Manifest0 joined
[09:01] *** Black_Ribbon joined
[09:02] *** Manifest0 left
[09:02] <kawaii> morning o/

[09:04] <timotimo> it looks like it's barely any faster, but earlier i was able to get it sub-30, now it no longer goes there at all

[09:04] <timotimo> maybe that's what i get for trying to benchmark on a desktop computer?

[09:07] *** Manifest0 joined
[09:09] <timotimo> oh, haha, i'm running a moarvm with --optimize=1 and --valgrind

[09:09] <timotimo> what am i even doing

[09:09] <timotimo> what have i ever been doing

[09:18] *** Manifest0 left
[09:19] <timotimo> hm

[09:19] <timotimo> could it be my optimization doesn't even impact Text::CSV at all?

[09:23] *** Manifest0 joined
[09:29] *** Manifest0 left
[09:33] *** Manifest0 joined
[09:39] *** Manifest0 left
[09:41] *** kaare_ joined
[09:46] *** Manifest0 joined
[09:48] *** lord| joined
[09:51] <SmokeMachine> m: my atomicint $a = 0; for 0 .. 1000 { start { $a⚛++ } }; say $a

[09:51] <camelia> rakudo-moar a46c414f7: OUTPUT: «1001␤»

[09:52] <timotimo> SmokeMachine: that is not likely to give you a lot of parallelism

[09:53] <timotimo> a lot of overhead for a tiny operation

[09:53] <SmokeMachine> https://www.irccloud.com/pastebin/R3A0eeuW/timotimo%3A

[09:53] <jnthn> It'll give you precisely none, in so far as the CPU can't execute two such instructions on the same memory address in parallel :)

[09:54] <timotimo> well, that's extra true

[09:56] <jnthn> But of course, you'd usually do it to count as part of a lager operation

[09:56] <jnthn> *larger

[09:56] <jnthn> .oO( Off by one pint )

[10:01] *** domidumont left
[10:02] *** Manifest0 left
[10:06] *** Manifest0 joined
[10:10] *** llfourn joined
[10:11] *** Manifest0 left
[10:16] *** Manifest0 joined
[10:16] *** llfourn left
[10:20] *** llfourn joined
[10:23] *** sena_kun left
[10:23] *** sena_kun joined
[10:28] *** llfourn left
[10:29] *** llfourn joined
[10:29] *** Black_Ribbon left
[10:39] *** llfourn left
[10:48] *** __jrjsmrtn__ joined
[10:49] *** _jrjsmrtn left
[11:03] *** llfourn joined
[11:06] * masak .oO( I thought I had 5 pints, but it turns out I had committed a fencepost error )

[11:08] *** llfourn left
[11:10] <lizmat> weekly: http://blogs.perl.org/users/laurent_r/2019/07/functional-programming-in-perl-strong-and-weak-primes-perl-weekly-challenge.html

[11:10] <notable6> lizmat, Noted!

[11:10] <lizmat> weekly: https://dev.to/antoniogamiz/gsoc-report-week-6-28i4

[11:10] <notable6> lizmat, Noted!

[11:24] <lizmat> weekly: https://www.braincells.com/perl/2019/07/perl_weekly_challenge_week_15.html

[11:24] <notable6> lizmat, Noted!

[11:29] *** Manifest0 left
[11:34] *** Manifest0 joined
[11:38] *** domidumont joined
[11:39] *** zakharyas left
[11:42] *** llfourn joined
[11:44] *** kaare_ left
[11:47] *** llfourn left
[11:49] *** llfourn joined
[11:57] *** Sgeo__ left
[11:57] *** Manifest0 left
[11:57] *** Sgeo__ joined
[11:59] *** llfourn left
[12:02] *** Manifest0 joined
[12:09] *** rfold joined
[12:27] *** Manifest0 left
[12:29] <tbrowder> kawaii: good morning!

[12:33] *** Manifest0 joined
[12:35] <jmerelo> tbrowder: hey, Tom

[12:35] <jmerelo> how're you doing?

[12:37] <tbrowder> pretty good for my age, thnx!

[12:38] <tbrowder> trying to get excited about pod again..,

[12:38] *** llfourn joined
[12:38] *** jmerelo left
[12:39] <tbrowder> jj, i appreciate all the work you are doing, especially the gsoc work!

[12:40] <tbrowder> .tell jmerelo ^^^

[12:40] <yoleaux> tbrowder: I'll pass your message to jmerelo.

[12:45] *** llfourn left
[12:46] *** llfourn joined
[12:56] *** llfourn left
[12:58] *** Manifest0 left
[13:03] *** Manifest0 joined
[13:03] *** nubie joined
[13:05] *** llfourn joined
[13:06] <Geth> ¦ doc: chloekek++ created pull request #2893: Improve consistency and completeness of Packages document

[13:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2893

[13:15] *** zakharyas joined
[13:16] *** Manifest0 left
[13:19] *** llfourn left
[13:20] *** vike left
[13:20] *** llfourn joined
[13:21] *** Manifest0 joined
[13:25] *** Manifest0 left
[13:27] *** nubie left
[13:31] *** Manifest0 joined
[13:34] <Geth> ¦ doc: tmtvl++ created pull request #2894: Add the `S///` section from operators to regexes

[13:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2894

[13:34] *** llfourn left
[13:35] *** llfourn joined
[13:37] *** pamplemousse joined
[13:39] <Geth> ¦ doc: ce50e11d49 | (Chloé Kekoa)++ (committed by Chloé) | doc/Language/packages.pod6

[13:39] <Geth> ¦ doc: Improve consistency and completeness of Packages document

[13:39] <Geth> ¦ doc: 

[13:39] <Geth> ¦ doc: - Include the output of the say calls in the name interpolation example.

[13:39] <Geth> ¦ doc: - Make spacing and capitalization consistent.

[13:39] <synopsebot> Link: https://doc.perl6.org/language/packages

[13:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ce50e11d49

[13:39] <Geth> ¦ doc: 8b5e218271 | Chloé++ | CREDITS

[13:39] <Geth> ¦ doc: Add chloekek to CREDITS

[13:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8b5e218271

[13:39] <Geth> ¦ doc: 2f096dd914 | (Chloé Kekoa)++ (committed using GitHub Web editor) | 2 files

[13:39] <Geth> ¦ doc: Merge pull request #2893 from chloekek/patch-1

[13:39] <Geth> ¦ doc: 

[13:39] <Geth> ¦ doc: Improve consistency and completeness of Packages document

[13:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2f096dd914

[13:45] *** llfourn left
[13:47] *** llfourn joined
[13:53] *** llfourn left
[13:58] *** llfourn joined
[14:04] *** Manifest0 left
[14:08] *** Manifest0 joined
[14:11] *** molaf joined
[14:36] *** Manifest0 left
[14:41] *** Manifest0 joined
[14:41] <sena_kun> .tell timotimo will moarperf land in rakudo one day?

[14:41] <yoleaux> sena_kun: I'll pass your message to timotimo.

[14:41] <timotimo> sena_kun: it's a bit big to put into rakudo, IMO. maybe it'll land in star, though

[14:41] <yoleaux> 14:41Z <sena_kun> timotimo: will moarperf land in rakudo one day?

[14:42] <sena_kun> timotimo, but current angular one is in core, right?

[14:42] <timotimo> yeah, though it grabs angular and the other libraries from the net

[14:43] <sena_kun> I see

[14:43] <sena_kun> ok, trying it out again...

[14:44] *** AlexDaniel left
[14:44] *** AlexDaniel joined
[14:45] <timotimo> moarperf?

[14:47] <timotimo> sena_kun: just pushed a few things i've been sitting on locally; nothing major at all, tho

[14:49] *** molaf left
[14:54] <sena_kun> >found 431 vulnerabilities (214 low, 2 moderate, 215 high)

[14:55] <timotimo> shruuuuuuuuuuug :P

[14:55] <sena_kun> indeed

[14:55] <timotimo> i'm sure it's a matter of "npm update"

[14:55] <timotimo> remote: GitHub found 4 vulnerabilities on timo/moarperf's default branch (1 high, 3 moderate). To find out more, visit:

[14:55] *** Manifest0 left
[14:56] <sena_kun> I'll risk my life to look at it! pls no hacks

[14:57] <kawaii> I noticed on GitHub that Node and Ruby packages now have this 'used by X other projects' metric, I think it's based off how many 'package.json' files the repo is referenced in, I wonder if we could push for that using what we have with META6.json?

[14:57] <kawaii> https://github.com/meew0/discordrb

[14:57] <kawaii> Here's an example ^

[14:57] <kawaii> https://usercontent.irccloud-cdn.com/file/aNcLzr41/Screenshot%20from%202019-07-08%2015-57-34.png

[14:58] <kawaii> Note the button only displays if you are logged in

[14:58] <kawaii> It would be nice to get a dependency graph of ecosystem modules

[15:00] *** Manifest0 joined
[15:01] <timotimo> http://finanalyst.github.io/ModuleCitation/ - perhaps interesting

[15:05] <kawaii> timotimo: yeah, that's great for you and me, but not Perl 6 outsiders who just use GitHub and want to see how popular a module is :)

[15:05] <timotimo> oh, well

[15:05] <kawaii> also congratz on having the most popular module? :)

[15:05] <timotimo> in that case, we ought to build a tiny little service that just generates images from URLs and let everybody put that in their READMEs

[15:05] <timotimo> like these badge services

[15:06] <kawaii> I think going for official GitHub dependency integration might be something for us to aim for

[15:06] <timotimo> ha, it was an easy task to achieve. also, lizmat recently basically completely rewrote one part of it, so it's not necessarily "mine" any more :)

[15:06] <kawaii> You chose the low hanging fruit ;)

[15:07] <patrickb> Alternatively push for metacpan integration. They have pretty dependency analysis too.

[15:08] <timotimo> the fruit was extremely ripe for picking

[15:08] <timotimo> json was already everywhere, and JSON::Tiny was, while very elegant in its implementation, sadly rather slow

[15:08] <kawaii> I'm hoping that when Altreus and I 'finish' API::Discord, it'll attract some of the younger folk

[15:11] <timotimo> you know, i used to be younger

[15:11] <timotimo> currently i'm still with "it", but they're constantly tweaking what "it" is and soon "it" will be something that i don't understand and it will scare me

[15:12] <timotimo> oh well, such is the tragedy of humanity

[15:13] <rfold> Can I safely use Blob.allocate to create a blob, then pass a pointer to the blob to a C function that will mutate its contents?

[15:14] <rfold> In other words: is the data mutable?

[15:14] <timotimo> you'll want CArray for that purpose, i believe

[15:15] * sena_kun wonders if something like Meshuggah will be considered a thing for old geezers in another 20-30 years

[15:15] <timotimo> Blob is allegedly immutable, which is good because it won't allow the array to be resized, i.e. the pointer to change

[15:15] *** Sgeo_ joined
[15:16] <rfold> p6: use NativeCall; say(CArray[uint8] ~~ Blob);

[15:16] <camelia> rakudo-moar 80bf3d003: OUTPUT: «False␤»

[15:16] <rfold> The C function I'm calling doesn't change the size of the buffer, only the contents.

[15:18] *** Sgeo__ left
[15:23] *** jmerelo joined
[15:24] <ugexe> patrickb: metacpan dependency analysis would require our dependency declaration format to be parsable by metacpan. so ultimately will require some perl 5 module for understanding how things work in perl 6

[15:24] <ugexe> as a quick example consider "emulates"

[15:25] <kawaii> note: I only raised this topic due to GitHub integration looking like a good way of getting more people interested in the language. I don't think creating MORE things within our own ecosystem helps exposure at all.

[15:25] <notable6> kawaii, Noted!

[15:25] <kawaii> oh wait no

[15:25] <ugexe> its not a monumental task though -- just means that there is more to it then us creating a META6 -> CPAN::Meta format converter

[15:26] <timotimo> of course, to do that you'd have to pass a Pointer[CArray[int]] or make the CArray[int] argument "is rw"

[15:26] <jmerelo> kawaii: re: your "used by", there are a couple of modules, my "river" and finanalyst's. They compute a score that indicates how much they are used and how deep

[15:26] <yoleaux> 12:40Z <tbrowder> jmerelo: ^^^

[15:27] <jmerelo> .tell tbrowder thanks!Ç

[15:27] <yoleaux> jmerelo: I'll pass your message to tbrowder.

[15:28] *** ctilmes joined
[15:28] <kawaii> jmerelo: yep, but once again, these are tools within our own ecosystem - they don't help someone new to P6 gauge how popular something is at a glance, GitHub's integration provides an entire dependency graph right there :) 

[15:29] <ctilmes> rfold, see https://stackoverflow.com/questions/55209334/nativecall-buf-lifetime-and-garbage-collector

[15:29] <rfold> p6: say(Blob.allocate(20) ~~ Buf);

[15:29] <camelia> rakudo-moar 80bf3d003: OUTPUT: «False␤»

[15:29] <jmerelo> kawaii: github integration is nice, but never easy to do. We tried, and failed, to have Pod6 interpreted by GitHub

[15:30] <jmerelo> kawaii: but as long as there's some repo we can do a pull request to, telling it how to compute dependencies (basically dependency declaration, I guess), we could do it.

[15:30] <lizmat> and yet another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2019/07/08/2019-27-demythifying/

[15:30] <jmerelo> lizmat++

[15:31] <kawaii> jmerelo: I'm just trying to look at what other popular languages are doing and hope that we can replicate that somehow, we're all smart and capable people here so I don't doubt it's possible

[15:32] <jmerelo> kawaii: :-) We are in the top 100 already. We can only go uphill from there :-)

[15:35] <jmerelo> kawaii: there's this thing: https://github.com/sourcegraph/about/blob/master/blogposts/see-how-many-people-use-your-library-with-sourcegraph-badges.md I'm not sure it's the official one

[15:36] <kawaii> jmerelo: it's not, I have no idea how the one I linked on that Ruby gem repository actually works

[15:36] <kawaii> I assume GitHub themselves wrote some kind of parser for popular languages

[15:36] <kawaii> but as an OSS community, we should be pushing them to help us get this stuff working for us too :)

[15:38] <kawaii> I'm sure they have some kind of open source liaison we can contact, show what we have with the `depends` section of META6.json, and have them implement something similar for Perl 6 modules :)

[15:38] <ugexe> they would need to resign themselves to running perl6 code to do so, which is the reason they rejected pod6

[15:38] <timotimo> and then have them curse us for allowing the "depends" to ask for specific auths, like ones from cpan :)

[15:38] <kawaii> after all, there are over 1300 modules now, that's not an insignificant number

[15:40] <ugexe> https://github.com/niner/Inline-Python/blob/master/META6.json#L16

[15:40] <ugexe> they cannot parse dependencies unless they can do $*DISTRO.name in that case

[15:40] <ugexe> there is also $*KERNEL.*, etc

[15:41] <timotimo> for a dependency graph, i'd assume they'll want to display all of the possible ones?

[15:41] <timotimo> they're not trying to resolve one list of candidates that should be installed

[15:41] <ugexe> that is true

[15:41] <timotimo> just measuring how many modules depend on what modules, that should in theory be a lot easier

[15:41] <timotimo> but i haven't thought it through much yet

[15:42] <ugexe> at the very least they need to be able to parse perl6 versions

[15:42] <ugexe> and compare them the same way

[15:42] <timotimo> what would truly impress me would be if they manage to chase down native dependencies through linux distro package repos back to other github repos

[15:43] <ugexe> yeah, that would mean there is a mapping of names (instead of every package manager having a slightly different name for a given package) with money behind it

[15:44] <kawaii> FWIW: The node.js integration of their 'used by' feature seems to only scan the package.json file in each repo and check for the dependencies listed by the author 

[15:45] <kawaii> that would satisfy my requirement, and then we can prompt module maintainers to be good people and fill that information out :)

[15:45] <ugexe> just encode all dependency source code as base64 and store it in the META6.json 

[15:45] <timotimo> ha

[15:46] *** Cabanossi left
[15:48] <kawaii> https://github.com/meew0/discordrb/network/dependents

[15:48] <kawaii> ^ here's a good way of looking at it, each of those repos have a Ruby 'Gemfile', which then states that the repo is a package dependency of their own

[15:48] <ugexe> I wrote a module for doing that for the `provides` awhile back -- https://github.com/ugexe/zef2/blob/master/lib/Zef/Distribution.pm6#L54-L58

[15:48] *** Cabanossi joined
[15:52] <ugexe> https://github.com/ugexe/zef2/blob/5a9c581648cd3b28975f0b98e31d9a2e395c28f2/t/distribution.t#L110-L130

[15:53] <timotimo> oh, the contents literally go into the meta6 as base64?

[15:53] <ugexe> yeah. its purpose was to make writing tests for Distribution easier (not having to create all those files)

[15:55] <timotimo> NGL that's pretty neat

[15:56] <timotimo> if you use that, will it Just Work™ if a following repo has working precomp storage?

[15:57] <timotimo> or, wait, you'd usually install that distribution, wouldn't you?

[15:57] <ugexe> that isn't for loading.

[15:57] <ugexe> right

[15:57] <ugexe> a CompUnit::Repository could be made to load it however though (like the one for tar files)

[15:57] <timotimo> this is now the p6i file format; Perl 6 Installer :P

[15:59] *** zakharyas left
[16:03] *** dominix__ joined
[16:05] *** robertle joined
[16:06] *** dominix_ left
[16:06] *** patrickb left
[16:10] *** mowcat joined
[16:18] *** Manifest0 left
[16:23] *** Manifest0 joined
[16:28] *** Manifest0 left
[16:30] <zostay> is there a way to use experimental features in the REPL aside from prepending every line with `use experimental :pack`? I want to play with pack/unpack, but can't figure out how to get the exports to last longer than a line.

[16:30] *** dakkar left
[16:33] *** Manifest0 joined
[16:36] <timotimo> perhaps -Mexperimental=pack, no clue :(

[16:37] <zostay> Yeah, tried that. ===SORRY!===

[16:37] <zostay> Could not find experimental=pack at line 1 in:

[16:37] <ugexe> that syntax wouldnt work for perl6 anyway

[16:37] <ugexe> m: module ::("Foo=bar") { }; ::("Foo=bar").WHAT.say

[16:37] <camelia> rakudo-moar 80bf3d003: OUTPUT: «(Foo=bar)␤»

[16:38] <timotimo> mhh

[16:38] <zostay> You can do the same in Perl 5.

[16:38] <timotimo> well, we gotta have something :D

[16:38] <timotimo> --Module( Foo=Bar :pack :foo )

[16:38] <zostay> Given our preference for adverbials, I would go for -Mexperimental:pack:macros

[16:38] <zostay> it's just a short hand anyway

[16:39] <zostay> if you need to be fancy, just -e it

[16:39] <ugexe> then what about -M "Foo:ver<1>"

[16:39] <zostay> sure, again, it's just a short-hand, it doesn't have to do everything

[16:39] <ugexe> it should be consistent

[16:39] <zostay> agreed

[16:39] <timotimo> oh, right, just that would probably be fine

[16:40] <zostay> Anyway, I'll just write a script for now. It looks like I could do muck around with OUR variables to make it work, but I don't want to mess with it further for now.

[16:41] *** vrurg left
[16:42] <timotimo> may i suggest you try out the jupyter notebook kernel?

[16:42] <timotimo> it's more reliable than the REPL, at least sometimes

[16:43] <timotimo> there's even a service that hosts it for you, including the perl6 kernel

[16:44] <zostay> hmm... i can't even get unpack to work in a script... seems hosed at the moment, i'll just use the Blob.read-*/Buf.write-* thing thing. Blah.

[16:44] <zostay> *thing then

[16:46] <ugexe> should work. Net::HTTP uses it among others

[16:46] <ugexe> it doesn't actually use it, so i take that back

[16:46] <timotimo> App::MoarVM::HeapAnalyzer will use it for the new heap snapshot format

[16:51] *** vrurg joined
[16:51] *** Manifest0 left
[16:53] <timotimo> the code is already there, but since moarvm doesn't spit out the new format except in a branch... :)

[16:57] *** Manifest0 joined
[17:06] *** veesh joined
[17:08] <Geth> ¦ doc: 17a102abdb | (JJ Merelo)++ | doc/Language/regexes.pod6

[17:08] <Geth> ¦ doc: Adds examples using backreferences in regexes

[17:08] <Geth> ¦ doc: 

[17:08] <Geth> ¦ doc: This closes #1545. Since this part is going to probably be moved dur

[17:08] <Geth> ¦ doc: to #2890, it will move with them; this seemed the most reasonable part

[17:08] <synopsebot> Link: https://doc.perl6.org/language/regexes

[17:08] <Geth> ¦ doc: to document these back references, since it's where they are actually used.

[17:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/17a102abdb

[17:10] *** lord| left
[17:22] *** Manifest0 left
[17:22] *** domidumont left
[17:27] *** Manifest0 joined
[17:30] *** Sgeo_ left
[17:31] *** Sgeo_ joined
[17:31] *** patrickb joined
[17:38] *** Black_Ribbon joined
[17:46] *** [Sno] joined
[17:55] *** molaf joined
[17:56] *** lord| joined
[18:14] *** ctilmes left
[18:14] *** Cabanossi left
[18:22] *** [Coke] joined
[18:22] *** [Coke] left
[18:27] *** Cabanossi joined
[18:28] *** sauvin left
[18:34] *** epony left
[18:42] *** molaf left
[18:49] <rfold> Given that accessing POD from Perl 6 is relatively straightforward I wonder how hard it would be to extract code from SYNOPSIS sections and run it as tests.

[18:51] *** empee0 joined
[18:51] *** Manifest0 left
[18:51] <rfold> Set $*OUT to a buffer, run the synopsis with EVAL, check if it gave the same output as the sequence of the ‘# OUTPUT: «...»’ comments in the synopsis.

[18:55] *** Manifest0 joined
[19:00] *** Manifest0 left
[19:01] <ugexe> there is no way to extract the pod from a namespace

[19:01] <ugexe> i dont think

[19:01] <ugexe> unless the author explicitly creates a e.g. `our sub POD { $*POD }`

[19:02] <rfold> I wouldn't mind the module having to do something like: use Test::Synopsis;

[19:02] <ugexe> that puts a strict test dependency into your runtime dependencies which is not exactly ideal

[19:04] <lizmat> weekly: http://blogs.perl.org/users/laurent_r/2019/07/-perl-weekly-challenge-16-pythagoras-pie.html

[19:04] <notable6> lizmat, Noted!

[19:04] <rfold> That's true.

[19:06] *** Manifest0 joined
[19:08] *** netrino joined
[19:11] *** dominix__ is now known as dominix

[19:18] *** Manifest0 left
[19:24] *** Manifest0 joined
[19:37] *** Manifest0 left
[19:38] *** pamplemousse left
[19:41] *** Manifest0 joined
[19:42] *** empee0 left
[19:59] *** jmerelo left
[19:59] *** molaf joined
[20:08] *** Sgeo__ joined
[20:11] *** Sgeo_ left
[20:12] *** robertle left
[20:20] *** Manifest0 left
[20:25] *** Manifest0 joined
[20:33] *** haukex joined
[20:36] *** rfold left
[20:38] *** kst` joined
[20:40] *** kst left
[20:41] *** haukex left
[20:42] <lizmat> weekly: https://yakshavingcream.blogspot.com/2019/07/and-now-for-something-completely.html

[20:42] <notable6> lizmat, Noted!

[20:52] *** vike joined
[21:07] *** afresh1 left
[21:08] *** afresh1 joined
[21:18] *** Manifest0 left
[21:23] *** Manifest0 joined
[21:31] *** Manifest0 left
[21:39] *** Manifest0 joined
[21:41] *** patrickb left
[21:43] *** patrickb joined
[21:45] *** kst` is now known as kst

[21:46] *** Manifest0 left
[21:51] *** Manifest0 joined
[22:01] *** cpage_ joined
[22:02] *** cpage_ is now known as cpage

[22:16] *** kaare_ joined
[22:19] *** Manifest0 left
[22:20] *** ctilmes joined
[22:24] *** Manifest0 joined
[22:33] *** Manifest0 left
[22:39] *** Manifest0 joined
[22:44] *** sena_kun left
[22:46] *** japhb joined
[22:51] *** patrickb left
[22:52] *** dominix left
[22:52] *** AlexDaniel left
[22:53] *** AlexDaniel joined
[23:17] *** smash left
[23:17] *** jnthn left
[23:18] *** jnthn joined
[23:19] *** smash joined
[23:21] *** veesh left
[23:27] *** mowcat left
[23:31] *** veesh joined
[23:33] *** Manifest0 left
[23:38] *** Manifest0 joined
[23:38] *** aborazmeh joined
[23:38] *** aborazmeh left
[23:38] *** aborazmeh joined
[23:39] *** reach_satori_ left
[23:39] *** reach_satori_ joined
[23:40] *** veesh left
[23:43] *** epony joined
[23:44] *** Manifest0 left
[23:50] *** Manifest0 joined
